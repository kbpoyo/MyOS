
/home/kbpoyo/code/cpp/MyOs/build/source/init/init.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/init/init.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x82000000

Program Header:
    LOAD off    0x00001000 vaddr 0x82000000 paddr 0x82000000 align 2**12
         filesz 0x0000640c memsz 0x00006498 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005695  82000000  82000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000381  820056a0  820056a0  000066a0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  82005a40  82005a40  00006a40  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000078  82006420  82006420  0000740c  2**5
                  ALLOC
  4 .debug_line   00003e54  00000000  00000000  0000740c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 0000111c  00000000  00000000  0000b260  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0001d25c  00000000  00000000  0000c37c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00006896  00000000  00000000  000295d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000690  00000000  00000000  0002fe70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000129d  00000000  00000000  00030500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0003179d  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001434  00000000  00000000  000317dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00032c10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
8200097c l     F .text	000000ad std
82000a29 l     F .text	0000001b stdin_init
82000a44 l     F .text	0000001b stdout_init
82000a5f l     F .text	0000001b stderr_init
82006420 l     O .bss	00000004 __sfp_recursive_mutex
82006424 l     O .bss	00000004 __sinit_recursive_mutex
82000d22 l     F .text	0000000a __fp_lock
82000d2c l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 impure.c
82005a40 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
82001f02 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
82006488 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
82002dc5 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
82003186 l       .text	00000000 L5
820031be l       .text	00000000 L15
82003190 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
82006490 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
820039dd l       .text	00000000 L20
82003994 l       .text	00000000 L5
820039da l       .text	00000000 L15
820039a0 l       .text	00000000 L8
820039c1 l       .text	00000000 L9
820039d0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 nano-vfprintf.c
82003b59 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
8200517a l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 locale.c
8200532f l     F .text	0000000a __get_global_locale
82005339 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
820053d5 l     F .text	0000000a __get_global_locale
820053df l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
82005510 l     F .text	0000000a __get_global_locale
8200551a l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
8200561a l     F .text	0000000a __get_global_locale
82005624 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
820038bc g     F .text	00000040 _isatty_r
82002c2e g     F .text	00000037 cleanup_glue
82002b3c g     F .text	000000d6 _puts_r
820038fc g     F .text	00000046 _lseek_r
8200014f g     F .text	0000001b yield
82003364 g     F .text	000000ba __sflags
820003e3 g     F .text	00000039 ioctl
82002b07 g     F .text	00000035 printf
82005524 g     F .text	00000077 _wcrtomb_r
820030dc g     F .text	0000004a __sseek
82000c71 g     F .text	00000099 __sinit
82004eec g     F .text	00000112 __swbuf_r
82005343 g     F .text	0000005f _setlocale_r
82000a7a g     F .text	0000006f __sfmoreglue
82002a8e g     F .text	00000006 __malloc_unlock
820039f0 g       .text	00000000 memmove
82000c57 g     F .text	0000001a _cleanup
82001b56 g     F .text	00000043 _fstat_r
8200648c g     O .bss	00000004 errno
82003077 g     F .text	0000000a __seofread
82000122 g     F .text	0000002d execve
820000c4 g     F .text	0000001b getpid
820029b8 g       .text	00000000 memcpy
82000c36 g     F .text	00000021 _cleanup_r
82002c12 g     F .text	0000001c puts
82001ec9 g     F .text	0000001c malloc
82002ada g     F .text	0000002d _printf_r
82000239 g     F .text	00000021 isatty
82006440 g     O .bss	00000004 __malloc_top_pad
82006420 g       .bss	00000000 __bss_start__
8200341e g     F .text	0000049e __sfvwrite_r
82002ff3 g     F .text	00000040 _sbrk_r
8200036e g     F .text	00000040 readdir
820045cc g     F .text	00000046 _read_r
820005a1 g     F .text	00000107 _fclose_r
82000943 g     F .text	00000039 fflush
82006444 g     O .bss	00000004 __malloc_max_sbrked_mem
8200020c g     F .text	0000002d lseek
820056d4 g     O .rodata	00000004 _global_impure_ptr
82004612 g     F .text	000008da _realloc_r
82005290 g     F .text	00000057 _fputwc_r
82000d36 g     F .text	00000024 __fp_lock_all
82001685 g     F .text	000004b1 _fseeko_r
82002c65 g     F .text	00000160 _reclaim_reent
820001be g     F .text	0000002d write
8200025a g     F .text	00000027 fstat
82001b36 g     F .text	00000020 fseeko
82001665 g     F .text	00000020 fseek
8200004e g     F .text	0000004c sys_call
82003bbf g     F .text	000000a8 __sfputs_r
82000d0a g     F .text	00000006 __sfp_lock_acquire
82003950 g       .text	00000000 memchr
82006498 g       .bss	00000000 __bss_end__
8200110c g     F .text	000003db _free_r
820002e5 g     F .text	00000021 wait
820057a0 g     O .rodata	00000180 _ctype_b
820053a2 g     F .text	00000014 __locale_mb_cur_max
8200320f g     F .text	00000115 __call_exitprocs
8200628c g     O .data	00000004 __malloc_sbrk_base
82000000 g       .text	00000000 _start
82000191 g     F .text	0000002d read
82002a94 g     F .text	00000046 _open_r
82006460 g     O .bss	00000028 __malloc_current_mallinfo
8200041c g     F .text	00000027 unlink
82002ada g     F .text	0000002d _iprintf_r
82003324 g     F .text	00000040 _close_r
82001c6c g     F .text	000000b8 _fwrite_r
82000107 g     F .text	0000001b fork
8200501f g     F .text	0000015b __swsetup_r
82000ae9 g     F .text	0000014d __sfp
82005e80 g     O .data	00000408 __malloc_av_
82000d1c g     F .text	00000006 __sinit_lock_release
82003033 g     F .text	00000044 __sread
820010e7 g     F .text	00000025 fread
82002a88 g     F .text	00000006 __malloc_lock
82000281 g     F .text	00000021 sbrk
820008eb g     F .text	00000058 _fflush_r
82000010 g     F .text	0000003e cstart
82000e53 g     F .text	0000001f fopen
82002a00 g       .text	00000000 memset
82000443 g     F .text	0000011a main
82006448 g     O .bss	00000004 __malloc_max_total_mem
82004ffe g     F .text	00000021 __swbuf
82000e72 g     F .text	00000275 _fread_r
82003126 g     F .text	00000025 __sclose
820006a8 g     F .text	0000001d fclose
82002195 g     F .text	00000822 _malloc_r
82005652 g     F .text	00000043 __ascii_wctomb
82000306 g     F .text	00000068 opendir
82001b99 g     F .text	00000068 _fwalk
820053e9 g     F .text	0000002a _mbtowc_r
820014e7 g     F .text	00000161 _malloc_trim_r
8200546b g     F .text	000000a5 strcmp
82003c67 g     F .text	00000025 vfiprintf
820002a2 g     F .text	00000021 dup
82002b07 g     F .text	00000035 iprintf
82006494 g     O .bss	00000004 _PathLocale
820031c9 g     F .text	00000046 _write_r
820053b6 g     F .text	0000001f setlocale
82003fe2 g     F .text	0000019b _printf_common
82005e64 g     O .data	00000004 _impure_ptr
820006c5 g     F .text	00000226 __sflush_r
82001648 g     F .text	0000001d _fseek_r
82002df2 g     F .text	00000201 __srefill_r
82005413 g     F .text	00000058 __ascii_mbtowc
82000d5a g     F .text	00000024 __fp_unlock_all
820000df g     F .text	00000028 print_msg
82001e36 g     F .text	00000093 __swhatbuf_r
82001d24 g     F .text	00000025 fwrite
820051e0 g     F .text	000000b0 __fputwc
82003081 g     F .text	0000005b __swrite
82006288 g     O .data	00000004 __malloc_trim_threshold
8200055d g     F .text	00000044 exit
82003c8c g     F .text	00000356 _vfiprintf_r
82001c01 g     F .text	0000006b _fwalk_reent
82000d10 g     F .text	00000006 __sfp_lock_release
82005920 g     O .rodata	00000101 _ctype_
82000d7e g     F .text	000000d5 _fopen_r
820002c3 g     F .text	00000022 _exit
82001d49 g     F .text	000000ed __smakebuf_r
82003150 g       .text	00000000 strlen
8200417d g     F .text	0000044f _printf_i
8200016a g     F .text	00000027 open
82003a7d g     F .text	000000dc __sprint_r
820003ae g     F .text	00000035 closedir
8200562e g     F .text	00000024 _wctomb_r
82003c8c g     F .text	00000356 _vfprintf_r
8200009a g     F .text	0000002a msleep
8200559b g     F .text	0000007f wcrtomb
820001eb g     F .text	00000021 close
820062a0 g     O .data	0000016c __global_locale
82003c67 g     F .text	00000025 vfprintf
820052e7 g     F .text	00000048 fputwc
82001ee5 g     F .text	0000001d free
82000d16 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

82000000 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
82000000:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
82000003:	8e d8                	mov    %eax,%ds
	mov %ax, %es
82000005:	8e c0                	mov    %eax,%es
	mov %ax, %fs
82000007:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
82000009:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8200000b:	e9 00 00 00 00       	jmp    82000010 <cstart>

82000010 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
82000010:	55                   	push   %ebp
82000011:	89 e5                	mov    %esp,%ebp
82000013:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
82000016:	c7 45 f4 20 64 00 82 	movl   $0x82006420,-0xc(%ebp)
    while (start < __bss_end__) {
8200001d:	eb 0c                	jmp    8200002b <cstart+0x1b>
        *(start++) = 0;
8200001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000022:	8d 50 01             	lea    0x1(%eax),%edx
82000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
82000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8200002b:	81 7d f4 98 64 00 82 	cmpl   $0x82006498,-0xc(%ebp)
82000032:	72 eb                	jb     8200001f <cstart+0xf>
    }
    
    exit(main(argc, argv));
82000034:	83 ec 08             	sub    $0x8,%esp
82000037:	ff 75 0c             	push   0xc(%ebp)
8200003a:	ff 75 08             	push   0x8(%ebp)
8200003d:	e8 01 04 00 00       	call   82000443 <main>
82000042:	83 c4 10             	add    $0x10,%esp
82000045:	83 ec 0c             	sub    $0xc,%esp
82000048:	50                   	push   %eax
82000049:	e8 0f 05 00 00       	call   8200055d <exit>

8200004e <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8200004e:	55                   	push   %ebp
8200004f:	89 e5                	mov    %esp,%ebp
82000051:	57                   	push   %edi
82000052:	56                   	push   %esi
82000053:	53                   	push   %ebx
82000054:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
82000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8200005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
82000065:	8b 45 08             	mov    0x8(%ebp),%eax
82000068:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8200006b:	8b 55 08             	mov    0x8(%ebp),%edx
8200006e:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
82000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
82000074:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
82000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8200007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8200007d:	8b 75 08             	mov    0x8(%ebp),%esi
82000080:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
82000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
82000085:	50                   	push   %eax
82000086:	52                   	push   %edx
82000087:	51                   	push   %ecx
82000088:	53                   	push   %ebx
82000089:	56                   	push   %esi
8200008a:	ff 1f                	lcall  *(%edi)
8200008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8200008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
82000092:	83 c4 10             	add    $0x10,%esp
82000095:	5b                   	pop    %ebx
82000096:	5e                   	pop    %esi
82000097:	5f                   	pop    %edi
82000098:	5d                   	pop    %ebp
82000099:	c3                   	ret    

8200009a <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8200009a:	55                   	push   %ebp
8200009b:	89 e5                	mov    %esp,%ebp
8200009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
820000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
820000a4:	7e 1b                	jle    820000c1 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
820000a6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
820000ad:	8b 45 08             	mov    0x8(%ebp),%eax
820000b0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
820000b3:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000b6:	50                   	push   %eax
820000b7:	e8 92 ff ff ff       	call   8200004e <sys_call>
820000bc:	83 c4 04             	add    $0x4,%esp
820000bf:	eb 01                	jmp    820000c2 <msleep+0x28>
    if (ms <= 0) return;
820000c1:	90                   	nop

}
820000c2:	c9                   	leave  
820000c3:	c3                   	ret    

820000c4 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
820000c4:	55                   	push   %ebp
820000c5:	89 e5                	mov    %esp,%ebp
820000c7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
820000ca:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
820000d1:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000d4:	50                   	push   %eax
820000d5:	e8 74 ff ff ff       	call   8200004e <sys_call>
820000da:	83 c4 04             	add    $0x4,%esp
}
820000dd:	c9                   	leave  
820000de:	c3                   	ret    

820000df <print_msg>:

void print_msg(const char *fmt, int arg) {
820000df:	55                   	push   %ebp
820000e0:	89 e5                	mov    %esp,%ebp
820000e2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
820000e5:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
820000ec:	8b 45 08             	mov    0x8(%ebp),%eax
820000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
820000f2:	8b 45 0c             	mov    0xc(%ebp),%eax
820000f5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
820000f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000fb:	50                   	push   %eax
820000fc:	e8 4d ff ff ff       	call   8200004e <sys_call>
82000101:	83 c4 04             	add    $0x4,%esp
}
82000104:	90                   	nop
82000105:	c9                   	leave  
82000106:	c3                   	ret    

82000107 <fork>:

int fork (void) {
82000107:	55                   	push   %ebp
82000108:	89 e5                	mov    %esp,%ebp
8200010a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8200010d:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
82000114:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000117:	50                   	push   %eax
82000118:	e8 31 ff ff ff       	call   8200004e <sys_call>
8200011d:	83 c4 04             	add    $0x4,%esp
}
82000120:	c9                   	leave  
82000121:	c3                   	ret    

82000122 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
82000122:	55                   	push   %ebp
82000123:	89 e5                	mov    %esp,%ebp
82000125:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
82000128:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8200012f:	8b 45 08             	mov    0x8(%ebp),%eax
82000132:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
82000135:	8b 45 0c             	mov    0xc(%ebp),%eax
82000138:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8200013b:	8b 45 10             	mov    0x10(%ebp),%eax
8200013e:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
82000141:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000144:	50                   	push   %eax
82000145:	e8 04 ff ff ff       	call   8200004e <sys_call>
8200014a:	83 c4 04             	add    $0x4,%esp
}
8200014d:	c9                   	leave  
8200014e:	c3                   	ret    

8200014f <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8200014f:	55                   	push   %ebp
82000150:	89 e5                	mov    %esp,%ebp
82000152:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
82000155:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8200015c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200015f:	50                   	push   %eax
82000160:	e8 e9 fe ff ff       	call   8200004e <sys_call>
82000165:	83 c4 04             	add    $0x4,%esp
}
82000168:	c9                   	leave  
82000169:	c3                   	ret    

8200016a <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8200016a:	55                   	push   %ebp
8200016b:	89 e5                	mov    %esp,%ebp
8200016d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
82000170:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
82000177:	8b 45 08             	mov    0x8(%ebp),%eax
8200017a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8200017d:	8b 45 0c             	mov    0xc(%ebp),%eax
82000180:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
82000183:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000186:	50                   	push   %eax
82000187:	e8 c2 fe ff ff       	call   8200004e <sys_call>
8200018c:	83 c4 04             	add    $0x4,%esp
}
8200018f:	c9                   	leave  
82000190:	c3                   	ret    

82000191 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
82000191:	55                   	push   %ebp
82000192:	89 e5                	mov    %esp,%ebp
82000194:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
82000197:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8200019e:	8b 45 08             	mov    0x8(%ebp),%eax
820001a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
820001a4:	8b 45 0c             	mov    0xc(%ebp),%eax
820001a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
820001aa:	8b 45 10             	mov    0x10(%ebp),%eax
820001ad:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
820001b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
820001b3:	50                   	push   %eax
820001b4:	e8 95 fe ff ff       	call   8200004e <sys_call>
820001b9:	83 c4 04             	add    $0x4,%esp
}
820001bc:	c9                   	leave  
820001bd:	c3                   	ret    

820001be <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
820001be:	55                   	push   %ebp
820001bf:	89 e5                	mov    %esp,%ebp
820001c1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
820001c4:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
820001cb:	8b 45 08             	mov    0x8(%ebp),%eax
820001ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
820001d1:	8b 45 0c             	mov    0xc(%ebp),%eax
820001d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
820001d7:	8b 45 10             	mov    0x10(%ebp),%eax
820001da:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
820001dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
820001e0:	50                   	push   %eax
820001e1:	e8 68 fe ff ff       	call   8200004e <sys_call>
820001e6:	83 c4 04             	add    $0x4,%esp
}
820001e9:	c9                   	leave  
820001ea:	c3                   	ret    

820001eb <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
820001eb:	55                   	push   %ebp
820001ec:	89 e5                	mov    %esp,%ebp
820001ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
820001f1:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
820001f8:	8b 45 08             	mov    0x8(%ebp),%eax
820001fb:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
820001fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000201:	50                   	push   %eax
82000202:	e8 47 fe ff ff       	call   8200004e <sys_call>
82000207:	83 c4 04             	add    $0x4,%esp
}
8200020a:	c9                   	leave  
8200020b:	c3                   	ret    

8200020c <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8200020c:	55                   	push   %ebp
8200020d:	89 e5                	mov    %esp,%ebp
8200020f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
82000212:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
82000219:	8b 45 08             	mov    0x8(%ebp),%eax
8200021c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8200021f:	8b 45 0c             	mov    0xc(%ebp),%eax
82000222:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
82000225:	8b 45 10             	mov    0x10(%ebp),%eax
82000228:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8200022b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200022e:	50                   	push   %eax
8200022f:	e8 1a fe ff ff       	call   8200004e <sys_call>
82000234:	83 c4 04             	add    $0x4,%esp
}
82000237:	c9                   	leave  
82000238:	c3                   	ret    

82000239 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
82000239:	55                   	push   %ebp
8200023a:	89 e5                	mov    %esp,%ebp
8200023c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8200023f:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
82000246:	8b 45 08             	mov    0x8(%ebp),%eax
82000249:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8200024c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200024f:	50                   	push   %eax
82000250:	e8 f9 fd ff ff       	call   8200004e <sys_call>
82000255:	83 c4 04             	add    $0x4,%esp
}
82000258:	c9                   	leave  
82000259:	c3                   	ret    

8200025a <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8200025a:	55                   	push   %ebp
8200025b:	89 e5                	mov    %esp,%ebp
8200025d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
82000260:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
82000267:	8b 45 08             	mov    0x8(%ebp),%eax
8200026a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8200026d:	8b 45 0c             	mov    0xc(%ebp),%eax
82000270:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
82000273:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000276:	50                   	push   %eax
82000277:	e8 d2 fd ff ff       	call   8200004e <sys_call>
8200027c:	83 c4 04             	add    $0x4,%esp
}
8200027f:	c9                   	leave  
82000280:	c3                   	ret    

82000281 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
82000281:	55                   	push   %ebp
82000282:	89 e5                	mov    %esp,%ebp
82000284:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
82000287:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)incr;
8200028e:	8b 45 08             	mov    0x8(%ebp),%eax
82000291:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
82000294:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000297:	50                   	push   %eax
82000298:	e8 b1 fd ff ff       	call   8200004e <sys_call>
8200029d:	83 c4 04             	add    $0x4,%esp
}
820002a0:	c9                   	leave  
820002a1:	c3                   	ret    

820002a2 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
820002a2:	55                   	push   %ebp
820002a3:	89 e5                	mov    %esp,%ebp
820002a5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
820002a8:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
820002af:	8b 45 08             	mov    0x8(%ebp),%eax
820002b2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
820002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002b8:	50                   	push   %eax
820002b9:	e8 90 fd ff ff       	call   8200004e <sys_call>
820002be:	83 c4 04             	add    $0x4,%esp
}
820002c1:	c9                   	leave  
820002c2:	c3                   	ret    

820002c3 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
820002c3:	55                   	push   %ebp
820002c4:	89 e5                	mov    %esp,%ebp
820002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
820002c9:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
820002d0:	8b 45 08             	mov    0x8(%ebp),%eax
820002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
820002d6:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002d9:	50                   	push   %eax
820002da:	e8 6f fd ff ff       	call   8200004e <sys_call>
820002df:	83 c4 04             	add    $0x4,%esp
}
820002e2:	90                   	nop
820002e3:	c9                   	leave  
820002e4:	c3                   	ret    

820002e5 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
820002e5:	55                   	push   %ebp
820002e6:	89 e5                	mov    %esp,%ebp
820002e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
820002eb:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
820002f2:	8b 45 08             	mov    0x8(%ebp),%eax
820002f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
820002f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002fb:	50                   	push   %eax
820002fc:	e8 4d fd ff ff       	call   8200004e <sys_call>
82000301:	83 c4 04             	add    $0x4,%esp
}
82000304:	c9                   	leave  
82000305:	c3                   	ret    

82000306 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
82000306:	55                   	push   %ebp
82000307:	89 e5                	mov    %esp,%ebp
82000309:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8200030c:	83 ec 0c             	sub    $0xc,%esp
8200030f:	6a 20                	push   $0x20
82000311:	e8 b3 1b 00 00       	call   82001ec9 <malloc>
82000316:	83 c4 10             	add    $0x10,%esp
82000319:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8200031c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000320:	75 07                	jne    82000329 <opendir+0x23>
        return (DIR*)0;
82000322:	b8 00 00 00 00       	mov    $0x0,%eax
82000327:	eb 43                	jmp    8200036c <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
82000329:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
82000330:	8b 45 08             	mov    0x8(%ebp),%eax
82000333:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
82000336:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000339:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8200033c:	83 ec 0c             	sub    $0xc,%esp
8200033f:	8d 45 dc             	lea    -0x24(%ebp),%eax
82000342:	50                   	push   %eax
82000343:	e8 06 fd ff ff       	call   8200004e <sys_call>
82000348:	83 c4 10             	add    $0x10,%esp
8200034b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8200034e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82000352:	79 15                	jns    82000369 <opendir+0x63>
        free(dir);
82000354:	83 ec 0c             	sub    $0xc,%esp
82000357:	ff 75 f4             	push   -0xc(%ebp)
8200035a:	e8 86 1b 00 00       	call   82001ee5 <free>
8200035f:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
82000362:	b8 00 00 00 00       	mov    $0x0,%eax
82000367:	eb 03                	jmp    8200036c <opendir+0x66>
    }

    return dir;    
82000369:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8200036c:	c9                   	leave  
8200036d:	c3                   	ret    

8200036e <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8200036e:	55                   	push   %ebp
8200036f:	89 e5                	mov    %esp,%ebp
82000371:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
82000374:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
8200037b:	8b 45 08             	mov    0x8(%ebp),%eax
8200037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
82000381:	8b 45 08             	mov    0x8(%ebp),%eax
82000384:	83 c0 04             	add    $0x4,%eax
82000387:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
8200038a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8200038d:	50                   	push   %eax
8200038e:	e8 bb fc ff ff       	call   8200004e <sys_call>
82000393:	83 c4 04             	add    $0x4,%esp
82000396:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
82000399:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8200039d:	79 07                	jns    820003a6 <readdir+0x38>
        return (struct dirent*)0;
8200039f:	b8 00 00 00 00       	mov    $0x0,%eax
820003a4:	eb 06                	jmp    820003ac <readdir+0x3e>
    }

    return &dir->dirent;   
820003a6:	8b 45 08             	mov    0x8(%ebp),%eax
820003a9:	83 c0 04             	add    $0x4,%eax
}
820003ac:	c9                   	leave  
820003ad:	c3                   	ret    

820003ae <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
820003ae:	55                   	push   %ebp
820003af:	89 e5                	mov    %esp,%ebp
820003b1:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
820003b4:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
820003bb:	8b 45 08             	mov    0x8(%ebp),%eax
820003be:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
820003c1:	8d 45 e0             	lea    -0x20(%ebp),%eax
820003c4:	50                   	push   %eax
820003c5:	e8 84 fc ff ff       	call   8200004e <sys_call>
820003ca:	83 c4 04             	add    $0x4,%esp
820003cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
820003d0:	83 ec 0c             	sub    $0xc,%esp
820003d3:	ff 75 08             	push   0x8(%ebp)
820003d6:	e8 0a 1b 00 00       	call   82001ee5 <free>
820003db:	83 c4 10             	add    $0x10,%esp

    return err;   
820003de:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
820003e1:	c9                   	leave  
820003e2:	c3                   	ret    

820003e3 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
820003e3:	55                   	push   %ebp
820003e4:	89 e5                	mov    %esp,%ebp
820003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
820003e9:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
820003f0:	8b 45 08             	mov    0x8(%ebp),%eax
820003f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
820003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
820003f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
820003fc:	8b 45 10             	mov    0x10(%ebp),%eax
820003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
82000402:	8b 45 14             	mov    0x14(%ebp),%eax
82000405:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
82000408:	8d 45 e8             	lea    -0x18(%ebp),%eax
8200040b:	50                   	push   %eax
8200040c:	e8 3d fc ff ff       	call   8200004e <sys_call>
82000411:	83 c4 04             	add    $0x4,%esp
82000414:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
82000417:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
8200041a:	c9                   	leave  
8200041b:	c3                   	ret    

8200041c <unlink>:
 * @brief 删除一个文件
 * 
 * @param path 
 * @return int 
 */
int unlink(const char *path) {
8200041c:	55                   	push   %ebp
8200041d:	89 e5                	mov    %esp,%ebp
8200041f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
82000422:	c7 45 e8 3b 00 00 00 	movl   $0x3b,-0x18(%ebp)
    args.arg0 = (path);
82000429:	8b 45 08             	mov    0x8(%ebp),%eax
8200042c:	89 45 ec             	mov    %eax,-0x14(%ebp)

    int err = sys_call(&args);
8200042f:	8d 45 e8             	lea    -0x18(%ebp),%eax
82000432:	50                   	push   %eax
82000433:	e8 16 fc ff ff       	call   8200004e <sys_call>
82000438:	83 c4 04             	add    $0x4,%esp
8200043b:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
8200043e:	8b 45 fc             	mov    -0x4(%ebp),%eax
82000441:	c9                   	leave  
82000442:	c3                   	ret    

82000443 <main>:
#include <stdio.h>
#include <stdlib.h>
#include <sys/fcntl.h>
#include "applib/lib_syscall.h"

int main(int argc, char **argv) {
82000443:	8d 4c 24 04          	lea    0x4(%esp),%ecx
82000447:	83 e4 f0             	and    $0xfffffff0,%esp
8200044a:	ff 71 fc             	push   -0x4(%ecx)
8200044d:	55                   	push   %ebp
8200044e:	89 e5                	mov    %esp,%ebp
82000450:	51                   	push   %ecx
82000451:	83 ec 24             	sub    $0x24,%esp
   int buf_len = 255;
82000454:	c7 45 f0 ff 00 00 00 	movl   $0xff,-0x10(%ebp)
  char *buf = (char *)malloc(buf_len);
8200045b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200045e:	83 ec 0c             	sub    $0xc,%esp
82000461:	50                   	push   %eax
82000462:	e8 62 1a 00 00       	call   82001ec9 <malloc>
82000467:	83 c4 10             	add    $0x10,%esp
8200046a:	89 45 ec             	mov    %eax,-0x14(%ebp)
  int len = 0;
8200046d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)

  for (int i = 0; i < 10000; ++i) {
82000474:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8200047b:	e9 c3 00 00 00       	jmp    82000543 <main+0x100>
    FILE *from = fopen("file.c", "rb");
82000480:	83 ec 08             	sub    $0x8,%esp
82000483:	68 a0 56 00 82       	push   $0x820056a0
82000488:	68 a3 56 00 82       	push   $0x820056a3
8200048d:	e8 c1 09 00 00       	call   82000e53 <fopen>
82000492:	83 c4 10             	add    $0x10,%esp
82000495:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    FILE *to = fopen("test.c", "wb");
82000498:	83 ec 08             	sub    $0x8,%esp
8200049b:	68 aa 56 00 82       	push   $0x820056aa
820004a0:	68 ad 56 00 82       	push   $0x820056ad
820004a5:	e8 a9 09 00 00       	call   82000e53 <fopen>
820004aa:	83 c4 10             	add    $0x10,%esp
820004ad:	89 45 e0             	mov    %eax,-0x20(%ebp)

    while ((len = fread(buf, 1, buf_len, from)) > 0) {
820004b0:	eb 2d                	jmp    820004df <main+0x9c>
      len = fwrite(buf, 1, len, to);
820004b2:	8b 45 e8             	mov    -0x18(%ebp),%eax
820004b5:	ff 75 e0             	push   -0x20(%ebp)
820004b8:	50                   	push   %eax
820004b9:	6a 01                	push   $0x1
820004bb:	ff 75 ec             	push   -0x14(%ebp)
820004be:	e8 61 18 00 00       	call   82001d24 <fwrite>
820004c3:	83 c4 10             	add    $0x10,%esp
820004c6:	89 45 e8             	mov    %eax,-0x18(%ebp)
      if (len < 0) {
820004c9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820004cd:	79 10                	jns    820004df <main+0x9c>
        printf("write file error\n");
820004cf:	83 ec 0c             	sub    $0xc,%esp
820004d2:	68 b4 56 00 82       	push   $0x820056b4
820004d7:	e8 36 27 00 00       	call   82002c12 <puts>
820004dc:	83 c4 10             	add    $0x10,%esp
    while ((len = fread(buf, 1, buf_len, from)) > 0) {
820004df:	8b 45 f0             	mov    -0x10(%ebp),%eax
820004e2:	ff 75 e4             	push   -0x1c(%ebp)
820004e5:	50                   	push   %eax
820004e6:	6a 01                	push   $0x1
820004e8:	ff 75 ec             	push   -0x14(%ebp)
820004eb:	e8 f7 0b 00 00       	call   820010e7 <fread>
820004f0:	83 c4 10             	add    $0x10,%esp
820004f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
820004f6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820004fa:	7f b6                	jg     820004b2 <main+0x6f>
      }
    }

    printf("copy cnt: %d\n", i + 1);
820004fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
820004ff:	83 c0 01             	add    $0x1,%eax
82000502:	83 ec 08             	sub    $0x8,%esp
82000505:	50                   	push   %eax
82000506:	68 c5 56 00 82       	push   $0x820056c5
8200050b:	e8 f7 25 00 00       	call   82002b07 <iprintf>
82000510:	83 c4 10             	add    $0x10,%esp
    unlink("test.c");
82000513:	83 ec 0c             	sub    $0xc,%esp
82000516:	68 ad 56 00 82       	push   $0x820056ad
8200051b:	e8 fc fe ff ff       	call   8200041c <unlink>
82000520:	83 c4 10             	add    $0x10,%esp
    fclose(from);
82000523:	83 ec 0c             	sub    $0xc,%esp
82000526:	ff 75 e4             	push   -0x1c(%ebp)
82000529:	e8 7a 01 00 00       	call   820006a8 <fclose>
8200052e:	83 c4 10             	add    $0x10,%esp
    fclose(to);
82000531:	83 ec 0c             	sub    $0xc,%esp
82000534:	ff 75 e0             	push   -0x20(%ebp)
82000537:	e8 6c 01 00 00       	call   820006a8 <fclose>
8200053c:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < 10000; ++i) {
8200053f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82000543:	81 7d f4 0f 27 00 00 	cmpl   $0x270f,-0xc(%ebp)
8200054a:	0f 8e 30 ff ff ff    	jle    82000480 <main+0x3d>
  }

  return 0;
82000550:	b8 00 00 00 00       	mov    $0x0,%eax
}
82000555:	8b 4d fc             	mov    -0x4(%ebp),%ecx
82000558:	c9                   	leave  
82000559:	8d 61 fc             	lea    -0x4(%ecx),%esp
8200055c:	c3                   	ret    

8200055d <exit>:
8200055d:	55                   	push   %ebp
8200055e:	89 e5                	mov    %esp,%ebp
82000560:	83 ec 08             	sub    $0x8,%esp
82000563:	83 ec 08             	sub    $0x8,%esp
82000566:	6a 00                	push   $0x0
82000568:	ff 75 08             	push   0x8(%ebp)
8200056b:	e8 9f 2c 00 00       	call   8200320f <__call_exitprocs>
82000570:	83 c4 10             	add    $0x10,%esp
82000573:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000578:	8b 40 3c             	mov    0x3c(%eax),%eax
8200057b:	85 c0                	test   %eax,%eax
8200057d:	74 17                	je     82000596 <exit+0x39>
8200057f:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000584:	8b 40 3c             	mov    0x3c(%eax),%eax
82000587:	8b 15 d4 56 00 82    	mov    0x820056d4,%edx
8200058d:	83 ec 0c             	sub    $0xc,%esp
82000590:	52                   	push   %edx
82000591:	ff d0                	call   *%eax
82000593:	83 c4 10             	add    $0x10,%esp
82000596:	83 ec 0c             	sub    $0xc,%esp
82000599:	ff 75 08             	push   0x8(%ebp)
8200059c:	e8 22 fd ff ff       	call   820002c3 <_exit>

820005a1 <_fclose_r>:
820005a1:	55                   	push   %ebp
820005a2:	89 e5                	mov    %esp,%ebp
820005a4:	53                   	push   %ebx
820005a5:	83 ec 14             	sub    $0x14,%esp
820005a8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820005ab:	85 db                	test   %ebx,%ebx
820005ad:	75 0a                	jne    820005b9 <_fclose_r+0x18>
820005af:	b8 00 00 00 00       	mov    $0x0,%eax
820005b4:	e9 ea 00 00 00       	jmp    820006a3 <_fclose_r+0x102>
820005b9:	8b 45 08             	mov    0x8(%ebp),%eax
820005bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
820005bf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
820005c3:	74 18                	je     820005dd <_fclose_r+0x3c>
820005c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
820005c8:	8b 40 38             	mov    0x38(%eax),%eax
820005cb:	85 c0                	test   %eax,%eax
820005cd:	75 0e                	jne    820005dd <_fclose_r+0x3c>
820005cf:	83 ec 0c             	sub    $0xc,%esp
820005d2:	ff 75 f0             	push   -0x10(%ebp)
820005d5:	e8 97 06 00 00       	call   82000c71 <__sinit>
820005da:	83 c4 10             	add    $0x10,%esp
820005dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820005e1:	66 85 c0             	test   %ax,%ax
820005e4:	75 0a                	jne    820005f0 <_fclose_r+0x4f>
820005e6:	b8 00 00 00 00       	mov    $0x0,%eax
820005eb:	e9 b3 00 00 00       	jmp    820006a3 <_fclose_r+0x102>
820005f0:	83 ec 08             	sub    $0x8,%esp
820005f3:	53                   	push   %ebx
820005f4:	ff 75 08             	push   0x8(%ebp)
820005f7:	e8 c9 00 00 00       	call   820006c5 <__sflush_r>
820005fc:	83 c4 10             	add    $0x10,%esp
820005ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000602:	8b 43 2c             	mov    0x2c(%ebx),%eax
82000605:	85 c0                	test   %eax,%eax
82000607:	74 1d                	je     82000626 <_fclose_r+0x85>
82000609:	8b 43 2c             	mov    0x2c(%ebx),%eax
8200060c:	8b 53 1c             	mov    0x1c(%ebx),%edx
8200060f:	83 ec 08             	sub    $0x8,%esp
82000612:	52                   	push   %edx
82000613:	ff 75 08             	push   0x8(%ebp)
82000616:	ff d0                	call   *%eax
82000618:	83 c4 10             	add    $0x10,%esp
8200061b:	85 c0                	test   %eax,%eax
8200061d:	79 07                	jns    82000626 <_fclose_r+0x85>
8200061f:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
82000626:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200062a:	98                   	cwtl   
8200062b:	25 80 00 00 00       	and    $0x80,%eax
82000630:	85 c0                	test   %eax,%eax
82000632:	74 12                	je     82000646 <_fclose_r+0xa5>
82000634:	8b 43 10             	mov    0x10(%ebx),%eax
82000637:	83 ec 08             	sub    $0x8,%esp
8200063a:	50                   	push   %eax
8200063b:	ff 75 08             	push   0x8(%ebp)
8200063e:	e8 c9 0a 00 00       	call   8200110c <_free_r>
82000643:	83 c4 10             	add    $0x10,%esp
82000646:	8b 43 30             	mov    0x30(%ebx),%eax
82000649:	85 c0                	test   %eax,%eax
8200064b:	74 23                	je     82000670 <_fclose_r+0xcf>
8200064d:	8b 53 30             	mov    0x30(%ebx),%edx
82000650:	8d 43 40             	lea    0x40(%ebx),%eax
82000653:	39 c2                	cmp    %eax,%edx
82000655:	74 12                	je     82000669 <_fclose_r+0xc8>
82000657:	8b 43 30             	mov    0x30(%ebx),%eax
8200065a:	83 ec 08             	sub    $0x8,%esp
8200065d:	50                   	push   %eax
8200065e:	ff 75 08             	push   0x8(%ebp)
82000661:	e8 a6 0a 00 00       	call   8200110c <_free_r>
82000666:	83 c4 10             	add    $0x10,%esp
82000669:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82000670:	8b 43 44             	mov    0x44(%ebx),%eax
82000673:	85 c0                	test   %eax,%eax
82000675:	74 19                	je     82000690 <_fclose_r+0xef>
82000677:	8b 43 44             	mov    0x44(%ebx),%eax
8200067a:	83 ec 08             	sub    $0x8,%esp
8200067d:	50                   	push   %eax
8200067e:	ff 75 08             	push   0x8(%ebp)
82000681:	e8 86 0a 00 00       	call   8200110c <_free_r>
82000686:	83 c4 10             	add    $0x10,%esp
82000689:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
82000690:	e8 75 06 00 00       	call   82000d0a <__sfp_lock_acquire>
82000695:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
8200069b:	e8 70 06 00 00       	call   82000d10 <__sfp_lock_release>
820006a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
820006a3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820006a6:	c9                   	leave  
820006a7:	c3                   	ret    

820006a8 <fclose>:
820006a8:	55                   	push   %ebp
820006a9:	89 e5                	mov    %esp,%ebp
820006ab:	83 ec 08             	sub    $0x8,%esp
820006ae:	8b 55 08             	mov    0x8(%ebp),%edx
820006b1:	a1 64 5e 00 82       	mov    0x82005e64,%eax
820006b6:	83 ec 08             	sub    $0x8,%esp
820006b9:	52                   	push   %edx
820006ba:	50                   	push   %eax
820006bb:	e8 e1 fe ff ff       	call   820005a1 <_fclose_r>
820006c0:	83 c4 10             	add    $0x10,%esp
820006c3:	c9                   	leave  
820006c4:	c3                   	ret    

820006c5 <__sflush_r>:
820006c5:	55                   	push   %ebp
820006c6:	89 e5                	mov    %esp,%ebp
820006c8:	57                   	push   %edi
820006c9:	56                   	push   %esi
820006ca:	53                   	push   %ebx
820006cb:	83 ec 1c             	sub    $0x1c,%esp
820006ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820006d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820006d5:	66 89 45 de          	mov    %ax,-0x22(%ebp)
820006d9:	0f bf 45 de          	movswl -0x22(%ebp),%eax
820006dd:	83 e0 08             	and    $0x8,%eax
820006e0:	85 c0                	test   %eax,%eax
820006e2:	0f 85 93 01 00 00    	jne    8200087b <__sflush_r+0x1b6>
820006e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820006ec:	80 cc 08             	or     $0x8,%ah
820006ef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820006f3:	8b 43 04             	mov    0x4(%ebx),%eax
820006f6:	85 c0                	test   %eax,%eax
820006f8:	7f 0b                	jg     82000705 <__sflush_r+0x40>
820006fa:	8b 43 3c             	mov    0x3c(%ebx),%eax
820006fd:	85 c0                	test   %eax,%eax
820006ff:	0f 8e 6f 01 00 00    	jle    82000874 <__sflush_r+0x1af>
82000705:	8b 43 28             	mov    0x28(%ebx),%eax
82000708:	85 c0                	test   %eax,%eax
8200070a:	0f 84 64 01 00 00    	je     82000874 <__sflush_r+0x1af>
82000710:	8b 45 08             	mov    0x8(%ebp),%eax
82000713:	8b 00                	mov    (%eax),%eax
82000715:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000718:	8b 45 08             	mov    0x8(%ebp),%eax
8200071b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82000721:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82000725:	98                   	cwtl   
82000726:	25 00 10 00 00       	and    $0x1000,%eax
8200072b:	85 c0                	test   %eax,%eax
8200072d:	74 08                	je     82000737 <__sflush_r+0x72>
8200072f:	8b 43 50             	mov    0x50(%ebx),%eax
82000732:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82000735:	eb 64                	jmp    8200079b <__sflush_r+0xd6>
82000737:	8b 43 28             	mov    0x28(%ebx),%eax
8200073a:	8b 53 1c             	mov    0x1c(%ebx),%edx
8200073d:	6a 01                	push   $0x1
8200073f:	6a 00                	push   $0x0
82000741:	52                   	push   %edx
82000742:	ff 75 08             	push   0x8(%ebp)
82000745:	ff d0                	call   *%eax
82000747:	83 c4 10             	add    $0x10,%esp
8200074a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8200074d:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
82000751:	75 48                	jne    8200079b <__sflush_r+0xd6>
82000753:	8b 45 08             	mov    0x8(%ebp),%eax
82000756:	8b 00                	mov    (%eax),%eax
82000758:	85 c0                	test   %eax,%eax
8200075a:	74 3f                	je     8200079b <__sflush_r+0xd6>
8200075c:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
82000763:	8b 45 08             	mov    0x8(%ebp),%eax
82000766:	8b 00                	mov    (%eax),%eax
82000768:	83 f8 1d             	cmp    $0x1d,%eax
8200076b:	74 0a                	je     82000777 <__sflush_r+0xb2>
8200076d:	8b 45 08             	mov    0x8(%ebp),%eax
82000770:	8b 00                	mov    (%eax),%eax
82000772:	83 f8 16             	cmp    $0x16,%eax
82000775:	75 11                	jne    82000788 <__sflush_r+0xc3>
82000777:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8200077e:	8b 45 08             	mov    0x8(%ebp),%eax
82000781:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000784:	89 10                	mov    %edx,(%eax)
82000786:	eb 0b                	jmp    82000793 <__sflush_r+0xce>
82000788:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200078c:	83 c8 40             	or     $0x40,%eax
8200078f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82000793:	8b 45 e0             	mov    -0x20(%ebp),%eax
82000796:	e9 48 01 00 00       	jmp    820008e3 <__sflush_r+0x21e>
8200079b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200079f:	98                   	cwtl   
820007a0:	83 e0 04             	and    $0x4,%eax
820007a3:	85 c0                	test   %eax,%eax
820007a5:	74 13                	je     820007ba <__sflush_r+0xf5>
820007a7:	8b 43 04             	mov    0x4(%ebx),%eax
820007aa:	29 45 e4             	sub    %eax,-0x1c(%ebp)
820007ad:	8b 43 30             	mov    0x30(%ebx),%eax
820007b0:	85 c0                	test   %eax,%eax
820007b2:	74 06                	je     820007ba <__sflush_r+0xf5>
820007b4:	8b 43 3c             	mov    0x3c(%ebx),%eax
820007b7:	29 45 e4             	sub    %eax,-0x1c(%ebp)
820007ba:	8b 43 28             	mov    0x28(%ebx),%eax
820007bd:	8b 53 1c             	mov    0x1c(%ebx),%edx
820007c0:	6a 00                	push   $0x0
820007c2:	ff 75 e4             	push   -0x1c(%ebp)
820007c5:	52                   	push   %edx
820007c6:	ff 75 08             	push   0x8(%ebp)
820007c9:	ff d0                	call   *%eax
820007cb:	83 c4 10             	add    $0x10,%esp
820007ce:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820007d1:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
820007d5:	75 1d                	jne    820007f4 <__sflush_r+0x12f>
820007d7:	8b 45 08             	mov    0x8(%ebp),%eax
820007da:	8b 00                	mov    (%eax),%eax
820007dc:	85 c0                	test   %eax,%eax
820007de:	74 14                	je     820007f4 <__sflush_r+0x12f>
820007e0:	8b 45 08             	mov    0x8(%ebp),%eax
820007e3:	8b 00                	mov    (%eax),%eax
820007e5:	83 f8 1d             	cmp    $0x1d,%eax
820007e8:	74 0a                	je     820007f4 <__sflush_r+0x12f>
820007ea:	8b 45 08             	mov    0x8(%ebp),%eax
820007ed:	8b 00                	mov    (%eax),%eax
820007ef:	83 f8 16             	cmp    $0x16,%eax
820007f2:	75 6e                	jne    82000862 <__sflush_r+0x19d>
820007f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820007f8:	80 e4 f7             	and    $0xf7,%ah
820007fb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820007ff:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82000806:	8b 43 10             	mov    0x10(%ebx),%eax
82000809:	89 03                	mov    %eax,(%ebx)
8200080b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200080f:	98                   	cwtl   
82000810:	25 00 10 00 00       	and    $0x1000,%eax
82000815:	85 c0                	test   %eax,%eax
82000817:	74 15                	je     8200082e <__sflush_r+0x169>
82000819:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8200081d:	75 09                	jne    82000828 <__sflush_r+0x163>
8200081f:	8b 45 08             	mov    0x8(%ebp),%eax
82000822:	8b 00                	mov    (%eax),%eax
82000824:	85 c0                	test   %eax,%eax
82000826:	75 06                	jne    8200082e <__sflush_r+0x169>
82000828:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8200082b:	89 43 50             	mov    %eax,0x50(%ebx)
8200082e:	8b 45 08             	mov    0x8(%ebp),%eax
82000831:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000834:	89 10                	mov    %edx,(%eax)
82000836:	8b 43 30             	mov    0x30(%ebx),%eax
82000839:	85 c0                	test   %eax,%eax
8200083b:	74 37                	je     82000874 <__sflush_r+0x1af>
8200083d:	8b 53 30             	mov    0x30(%ebx),%edx
82000840:	8d 43 40             	lea    0x40(%ebx),%eax
82000843:	39 c2                	cmp    %eax,%edx
82000845:	74 12                	je     82000859 <__sflush_r+0x194>
82000847:	8b 43 30             	mov    0x30(%ebx),%eax
8200084a:	83 ec 08             	sub    $0x8,%esp
8200084d:	50                   	push   %eax
8200084e:	ff 75 08             	push   0x8(%ebp)
82000851:	e8 b6 08 00 00       	call   8200110c <_free_r>
82000856:	83 c4 10             	add    $0x10,%esp
82000859:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82000860:	eb 12                	jmp    82000874 <__sflush_r+0x1af>
82000862:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82000866:	83 c8 40             	or     $0x40,%eax
82000869:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200086d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82000872:	eb 6f                	jmp    820008e3 <__sflush_r+0x21e>
82000874:	b8 00 00 00 00       	mov    $0x0,%eax
82000879:	eb 68                	jmp    820008e3 <__sflush_r+0x21e>
8200087b:	8b 73 10             	mov    0x10(%ebx),%esi
8200087e:	85 f6                	test   %esi,%esi
82000880:	75 07                	jne    82000889 <__sflush_r+0x1c4>
82000882:	b8 00 00 00 00       	mov    $0x0,%eax
82000887:	eb 5a                	jmp    820008e3 <__sflush_r+0x21e>
82000889:	8b 03                	mov    (%ebx),%eax
8200088b:	29 f0                	sub    %esi,%eax
8200088d:	89 c7                	mov    %eax,%edi
8200088f:	89 33                	mov    %esi,(%ebx)
82000891:	0f bf 45 de          	movswl -0x22(%ebp),%eax
82000895:	83 e0 03             	and    $0x3,%eax
82000898:	85 c0                	test   %eax,%eax
8200089a:	75 05                	jne    820008a1 <__sflush_r+0x1dc>
8200089c:	8b 43 14             	mov    0x14(%ebx),%eax
8200089f:	eb 05                	jmp    820008a6 <__sflush_r+0x1e1>
820008a1:	b8 00 00 00 00       	mov    $0x0,%eax
820008a6:	89 43 08             	mov    %eax,0x8(%ebx)
820008a9:	eb 2f                	jmp    820008da <__sflush_r+0x215>
820008ab:	8b 43 24             	mov    0x24(%ebx),%eax
820008ae:	8b 53 1c             	mov    0x1c(%ebx),%edx
820008b1:	57                   	push   %edi
820008b2:	56                   	push   %esi
820008b3:	52                   	push   %edx
820008b4:	ff 75 08             	push   0x8(%ebp)
820008b7:	ff d0                	call   *%eax
820008b9:	83 c4 10             	add    $0x10,%esp
820008bc:	85 c0                	test   %eax,%eax
820008be:	7f 12                	jg     820008d2 <__sflush_r+0x20d>
820008c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820008c4:	83 c8 40             	or     $0x40,%eax
820008c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820008cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820008d0:	eb 11                	jmp    820008e3 <__sflush_r+0x21e>
820008d2:	89 c1                	mov    %eax,%ecx
820008d4:	89 c8                	mov    %ecx,%eax
820008d6:	01 c6                	add    %eax,%esi
820008d8:	29 cf                	sub    %ecx,%edi
820008da:	85 ff                	test   %edi,%edi
820008dc:	7f cd                	jg     820008ab <__sflush_r+0x1e6>
820008de:	b8 00 00 00 00       	mov    $0x0,%eax
820008e3:	8d 65 f4             	lea    -0xc(%ebp),%esp
820008e6:	5b                   	pop    %ebx
820008e7:	5e                   	pop    %esi
820008e8:	5f                   	pop    %edi
820008e9:	5d                   	pop    %ebp
820008ea:	c3                   	ret    

820008eb <_fflush_r>:
820008eb:	55                   	push   %ebp
820008ec:	89 e5                	mov    %esp,%ebp
820008ee:	53                   	push   %ebx
820008ef:	83 ec 14             	sub    $0x14,%esp
820008f2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820008f5:	8b 45 08             	mov    0x8(%ebp),%eax
820008f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
820008fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
820008ff:	74 18                	je     82000919 <_fflush_r+0x2e>
82000901:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000904:	8b 40 38             	mov    0x38(%eax),%eax
82000907:	85 c0                	test   %eax,%eax
82000909:	75 0e                	jne    82000919 <_fflush_r+0x2e>
8200090b:	83 ec 0c             	sub    $0xc,%esp
8200090e:	ff 75 f4             	push   -0xc(%ebp)
82000911:	e8 5b 03 00 00       	call   82000c71 <__sinit>
82000916:	83 c4 10             	add    $0x10,%esp
82000919:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200091d:	66 85 c0             	test   %ax,%ax
82000920:	75 07                	jne    82000929 <_fflush_r+0x3e>
82000922:	b8 00 00 00 00       	mov    $0x0,%eax
82000927:	eb 15                	jmp    8200093e <_fflush_r+0x53>
82000929:	83 ec 08             	sub    $0x8,%esp
8200092c:	53                   	push   %ebx
8200092d:	ff 75 08             	push   0x8(%ebp)
82000930:	e8 90 fd ff ff       	call   820006c5 <__sflush_r>
82000935:	83 c4 10             	add    $0x10,%esp
82000938:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200093b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200093e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82000941:	c9                   	leave  
82000942:	c3                   	ret    

82000943 <fflush>:
82000943:	55                   	push   %ebp
82000944:	89 e5                	mov    %esp,%ebp
82000946:	83 ec 08             	sub    $0x8,%esp
82000949:	8b 55 08             	mov    0x8(%ebp),%edx
8200094c:	85 d2                	test   %edx,%edx
8200094e:	75 18                	jne    82000968 <fflush+0x25>
82000950:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000955:	83 ec 08             	sub    $0x8,%esp
82000958:	68 eb 08 00 82       	push   $0x820008eb
8200095d:	50                   	push   %eax
8200095e:	e8 9e 12 00 00       	call   82001c01 <_fwalk_reent>
82000963:	83 c4 10             	add    $0x10,%esp
82000966:	eb 12                	jmp    8200097a <fflush+0x37>
82000968:	a1 64 5e 00 82       	mov    0x82005e64,%eax
8200096d:	83 ec 08             	sub    $0x8,%esp
82000970:	52                   	push   %edx
82000971:	50                   	push   %eax
82000972:	e8 74 ff ff ff       	call   820008eb <_fflush_r>
82000977:	83 c4 10             	add    $0x10,%esp
8200097a:	c9                   	leave  
8200097b:	c3                   	ret    

8200097c <std>:
8200097c:	55                   	push   %ebp
8200097d:	89 e5                	mov    %esp,%ebp
8200097f:	83 ec 08             	sub    $0x8,%esp
82000982:	8b 45 08             	mov    0x8(%ebp),%eax
82000985:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8200098b:	8b 45 08             	mov    0x8(%ebp),%eax
8200098e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
82000995:	8b 45 08             	mov    0x8(%ebp),%eax
82000998:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8200099f:	8b 45 0c             	mov    0xc(%ebp),%eax
820009a2:	89 c2                	mov    %eax,%edx
820009a4:	8b 45 08             	mov    0x8(%ebp),%eax
820009a7:	66 89 50 0c          	mov    %dx,0xc(%eax)
820009ab:	8b 45 08             	mov    0x8(%ebp),%eax
820009ae:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
820009b5:	8b 45 10             	mov    0x10(%ebp),%eax
820009b8:	89 c2                	mov    %eax,%edx
820009ba:	8b 45 08             	mov    0x8(%ebp),%eax
820009bd:	66 89 50 0e          	mov    %dx,0xe(%eax)
820009c1:	8b 45 08             	mov    0x8(%ebp),%eax
820009c4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
820009cb:	8b 45 08             	mov    0x8(%ebp),%eax
820009ce:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
820009d5:	8b 45 08             	mov    0x8(%ebp),%eax
820009d8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
820009df:	8b 45 08             	mov    0x8(%ebp),%eax
820009e2:	83 c0 5c             	add    $0x5c,%eax
820009e5:	83 ec 04             	sub    $0x4,%esp
820009e8:	6a 08                	push   $0x8
820009ea:	6a 00                	push   $0x0
820009ec:	50                   	push   %eax
820009ed:	e8 0e 20 00 00       	call   82002a00 <memset>
820009f2:	83 c4 10             	add    $0x10,%esp
820009f5:	8b 45 08             	mov    0x8(%ebp),%eax
820009f8:	8b 55 08             	mov    0x8(%ebp),%edx
820009fb:	89 50 1c             	mov    %edx,0x1c(%eax)
820009fe:	8b 45 08             	mov    0x8(%ebp),%eax
82000a01:	c7 40 20 33 30 00 82 	movl   $0x82003033,0x20(%eax)
82000a08:	8b 45 08             	mov    0x8(%ebp),%eax
82000a0b:	c7 40 24 81 30 00 82 	movl   $0x82003081,0x24(%eax)
82000a12:	8b 45 08             	mov    0x8(%ebp),%eax
82000a15:	c7 40 28 dc 30 00 82 	movl   $0x820030dc,0x28(%eax)
82000a1c:	8b 45 08             	mov    0x8(%ebp),%eax
82000a1f:	c7 40 2c 26 31 00 82 	movl   $0x82003126,0x2c(%eax)
82000a26:	90                   	nop
82000a27:	c9                   	leave  
82000a28:	c3                   	ret    

82000a29 <stdin_init>:
82000a29:	55                   	push   %ebp
82000a2a:	89 e5                	mov    %esp,%ebp
82000a2c:	83 ec 08             	sub    $0x8,%esp
82000a2f:	83 ec 04             	sub    $0x4,%esp
82000a32:	6a 00                	push   $0x0
82000a34:	6a 04                	push   $0x4
82000a36:	ff 75 08             	push   0x8(%ebp)
82000a39:	e8 3e ff ff ff       	call   8200097c <std>
82000a3e:	83 c4 10             	add    $0x10,%esp
82000a41:	90                   	nop
82000a42:	c9                   	leave  
82000a43:	c3                   	ret    

82000a44 <stdout_init>:
82000a44:	55                   	push   %ebp
82000a45:	89 e5                	mov    %esp,%ebp
82000a47:	83 ec 08             	sub    $0x8,%esp
82000a4a:	83 ec 04             	sub    $0x4,%esp
82000a4d:	6a 01                	push   $0x1
82000a4f:	6a 09                	push   $0x9
82000a51:	ff 75 08             	push   0x8(%ebp)
82000a54:	e8 23 ff ff ff       	call   8200097c <std>
82000a59:	83 c4 10             	add    $0x10,%esp
82000a5c:	90                   	nop
82000a5d:	c9                   	leave  
82000a5e:	c3                   	ret    

82000a5f <stderr_init>:
82000a5f:	55                   	push   %ebp
82000a60:	89 e5                	mov    %esp,%ebp
82000a62:	83 ec 08             	sub    $0x8,%esp
82000a65:	83 ec 04             	sub    $0x4,%esp
82000a68:	6a 02                	push   $0x2
82000a6a:	6a 12                	push   $0x12
82000a6c:	ff 75 08             	push   0x8(%ebp)
82000a6f:	e8 08 ff ff ff       	call   8200097c <std>
82000a74:	83 c4 10             	add    $0x10,%esp
82000a77:	90                   	nop
82000a78:	c9                   	leave  
82000a79:	c3                   	ret    

82000a7a <__sfmoreglue>:
82000a7a:	55                   	push   %ebp
82000a7b:	89 e5                	mov    %esp,%ebp
82000a7d:	53                   	push   %ebx
82000a7e:	83 ec 14             	sub    $0x14,%esp
82000a81:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82000a84:	8d 43 ff             	lea    -0x1(%ebx),%eax
82000a87:	6b c0 68             	imul   $0x68,%eax,%eax
82000a8a:	83 c0 74             	add    $0x74,%eax
82000a8d:	83 ec 08             	sub    $0x8,%esp
82000a90:	50                   	push   %eax
82000a91:	ff 75 08             	push   0x8(%ebp)
82000a94:	e8 fc 16 00 00       	call   82002195 <_malloc_r>
82000a99:	83 c4 10             	add    $0x10,%esp
82000a9c:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000a9f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000aa3:	75 07                	jne    82000aac <__sfmoreglue+0x32>
82000aa5:	b8 00 00 00 00       	mov    $0x0,%eax
82000aaa:	eb 38                	jmp    82000ae4 <__sfmoreglue+0x6a>
82000aac:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000aaf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82000ab5:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ab8:	89 58 04             	mov    %ebx,0x4(%eax)
82000abb:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000abe:	8d 50 0c             	lea    0xc(%eax),%edx
82000ac1:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ac4:	89 50 08             	mov    %edx,0x8(%eax)
82000ac7:	89 d8                	mov    %ebx,%eax
82000ac9:	6b c0 68             	imul   $0x68,%eax,%eax
82000acc:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000acf:	83 c2 0c             	add    $0xc,%edx
82000ad2:	83 ec 04             	sub    $0x4,%esp
82000ad5:	50                   	push   %eax
82000ad6:	6a 00                	push   $0x0
82000ad8:	52                   	push   %edx
82000ad9:	e8 22 1f 00 00       	call   82002a00 <memset>
82000ade:	83 c4 10             	add    $0x10,%esp
82000ae1:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ae4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82000ae7:	c9                   	leave  
82000ae8:	c3                   	ret    

82000ae9 <__sfp>:
82000ae9:	55                   	push   %ebp
82000aea:	89 e5                	mov    %esp,%ebp
82000aec:	83 ec 18             	sub    $0x18,%esp
82000aef:	e8 16 02 00 00       	call   82000d0a <__sfp_lock_acquire>
82000af4:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000af9:	8b 40 38             	mov    0x38(%eax),%eax
82000afc:	85 c0                	test   %eax,%eax
82000afe:	75 11                	jne    82000b11 <__sfp+0x28>
82000b00:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000b05:	83 ec 0c             	sub    $0xc,%esp
82000b08:	50                   	push   %eax
82000b09:	e8 63 01 00 00       	call   82000c71 <__sinit>
82000b0e:	83 c4 10             	add    $0x10,%esp
82000b11:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000b16:	05 e0 02 00 00       	add    $0x2e0,%eax
82000b1b:	89 45 ec             	mov    %eax,-0x14(%ebp)
82000b1e:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000b21:	8b 40 08             	mov    0x8(%eax),%eax
82000b24:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000b27:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000b2a:	8b 40 04             	mov    0x4(%eax),%eax
82000b2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
82000b30:	eb 10                	jmp    82000b42 <__sfp+0x59>
82000b32:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000b35:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82000b39:	66 85 c0             	test   %ax,%ax
82000b3c:	74 58                	je     82000b96 <__sfp+0xad>
82000b3e:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
82000b42:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
82000b46:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82000b4a:	79 e6                	jns    82000b32 <__sfp+0x49>
82000b4c:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000b4f:	8b 00                	mov    (%eax),%eax
82000b51:	85 c0                	test   %eax,%eax
82000b53:	75 1e                	jne    82000b73 <__sfp+0x8a>
82000b55:	83 ec 08             	sub    $0x8,%esp
82000b58:	6a 04                	push   $0x4
82000b5a:	ff 75 08             	push   0x8(%ebp)
82000b5d:	e8 18 ff ff ff       	call   82000a7a <__sfmoreglue>
82000b62:	83 c4 10             	add    $0x10,%esp
82000b65:	8b 55 ec             	mov    -0x14(%ebp),%edx
82000b68:	89 02                	mov    %eax,(%edx)
82000b6a:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000b6d:	8b 00                	mov    (%eax),%eax
82000b6f:	85 c0                	test   %eax,%eax
82000b71:	74 0a                	je     82000b7d <__sfp+0x94>
82000b73:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000b76:	8b 00                	mov    (%eax),%eax
82000b78:	89 45 ec             	mov    %eax,-0x14(%ebp)
82000b7b:	eb a1                	jmp    82000b1e <__sfp+0x35>
82000b7d:	90                   	nop
82000b7e:	e8 8d 01 00 00       	call   82000d10 <__sfp_lock_release>
82000b83:	8b 45 08             	mov    0x8(%ebp),%eax
82000b86:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82000b8c:	b8 00 00 00 00       	mov    $0x0,%eax
82000b91:	e9 9e 00 00 00       	jmp    82000c34 <__sfp+0x14b>
82000b96:	90                   	nop
82000b97:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000b9a:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
82000ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ba3:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
82000ba9:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bac:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
82000bb3:	e8 58 01 00 00       	call   82000d10 <__sfp_lock_release>
82000bb8:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bbb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82000bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bc4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
82000bcb:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bce:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
82000bd5:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bd8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
82000bdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000be2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
82000be9:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bec:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
82000bf3:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000bf6:	83 c0 5c             	add    $0x5c,%eax
82000bf9:	83 ec 04             	sub    $0x4,%esp
82000bfc:	6a 08                	push   $0x8
82000bfe:	6a 00                	push   $0x0
82000c00:	50                   	push   %eax
82000c01:	e8 fa 1d 00 00       	call   82002a00 <memset>
82000c06:	83 c4 10             	add    $0x10,%esp
82000c09:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000c0c:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
82000c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000c16:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
82000c1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000c20:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
82000c27:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000c2a:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
82000c31:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000c34:	c9                   	leave  
82000c35:	c3                   	ret    

82000c36 <_cleanup_r>:
82000c36:	55                   	push   %ebp
82000c37:	89 e5                	mov    %esp,%ebp
82000c39:	83 ec 18             	sub    $0x18,%esp
82000c3c:	c7 45 f4 a1 05 00 82 	movl   $0x820005a1,-0xc(%ebp)
82000c43:	83 ec 08             	sub    $0x8,%esp
82000c46:	ff 75 f4             	push   -0xc(%ebp)
82000c49:	ff 75 08             	push   0x8(%ebp)
82000c4c:	e8 b0 0f 00 00       	call   82001c01 <_fwalk_reent>
82000c51:	83 c4 10             	add    $0x10,%esp
82000c54:	90                   	nop
82000c55:	c9                   	leave  
82000c56:	c3                   	ret    

82000c57 <_cleanup>:
82000c57:	55                   	push   %ebp
82000c58:	89 e5                	mov    %esp,%ebp
82000c5a:	83 ec 08             	sub    $0x8,%esp
82000c5d:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82000c62:	83 ec 0c             	sub    $0xc,%esp
82000c65:	50                   	push   %eax
82000c66:	e8 cb ff ff ff       	call   82000c36 <_cleanup_r>
82000c6b:	83 c4 10             	add    $0x10,%esp
82000c6e:	90                   	nop
82000c6f:	c9                   	leave  
82000c70:	c3                   	ret    

82000c71 <__sinit>:
82000c71:	55                   	push   %ebp
82000c72:	89 e5                	mov    %esp,%ebp
82000c74:	83 ec 08             	sub    $0x8,%esp
82000c77:	e8 9a 00 00 00       	call   82000d16 <__sinit_lock_acquire>
82000c7c:	8b 45 08             	mov    0x8(%ebp),%eax
82000c7f:	8b 40 38             	mov    0x38(%eax),%eax
82000c82:	85 c0                	test   %eax,%eax
82000c84:	74 07                	je     82000c8d <__sinit+0x1c>
82000c86:	e8 91 00 00 00       	call   82000d1c <__sinit_lock_release>
82000c8b:	eb 7b                	jmp    82000d08 <__sinit+0x97>
82000c8d:	8b 45 08             	mov    0x8(%ebp),%eax
82000c90:	c7 40 3c 36 0c 00 82 	movl   $0x82000c36,0x3c(%eax)
82000c97:	8b 45 08             	mov    0x8(%ebp),%eax
82000c9a:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
82000ca1:	00 00 00 
82000ca4:	8b 45 08             	mov    0x8(%ebp),%eax
82000ca7:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
82000cae:	00 00 00 
82000cb1:	8b 45 08             	mov    0x8(%ebp),%eax
82000cb4:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
82000cba:	8b 45 08             	mov    0x8(%ebp),%eax
82000cbd:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
82000cc3:	8b 45 08             	mov    0x8(%ebp),%eax
82000cc6:	8b 40 04             	mov    0x4(%eax),%eax
82000cc9:	83 ec 0c             	sub    $0xc,%esp
82000ccc:	50                   	push   %eax
82000ccd:	e8 57 fd ff ff       	call   82000a29 <stdin_init>
82000cd2:	83 c4 10             	add    $0x10,%esp
82000cd5:	8b 45 08             	mov    0x8(%ebp),%eax
82000cd8:	8b 40 08             	mov    0x8(%eax),%eax
82000cdb:	83 ec 0c             	sub    $0xc,%esp
82000cde:	50                   	push   %eax
82000cdf:	e8 60 fd ff ff       	call   82000a44 <stdout_init>
82000ce4:	83 c4 10             	add    $0x10,%esp
82000ce7:	8b 45 08             	mov    0x8(%ebp),%eax
82000cea:	8b 40 0c             	mov    0xc(%eax),%eax
82000ced:	83 ec 0c             	sub    $0xc,%esp
82000cf0:	50                   	push   %eax
82000cf1:	e8 69 fd ff ff       	call   82000a5f <stderr_init>
82000cf6:	83 c4 10             	add    $0x10,%esp
82000cf9:	8b 45 08             	mov    0x8(%ebp),%eax
82000cfc:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
82000d03:	e8 14 00 00 00       	call   82000d1c <__sinit_lock_release>
82000d08:	c9                   	leave  
82000d09:	c3                   	ret    

82000d0a <__sfp_lock_acquire>:
82000d0a:	55                   	push   %ebp
82000d0b:	89 e5                	mov    %esp,%ebp
82000d0d:	90                   	nop
82000d0e:	5d                   	pop    %ebp
82000d0f:	c3                   	ret    

82000d10 <__sfp_lock_release>:
82000d10:	55                   	push   %ebp
82000d11:	89 e5                	mov    %esp,%ebp
82000d13:	90                   	nop
82000d14:	5d                   	pop    %ebp
82000d15:	c3                   	ret    

82000d16 <__sinit_lock_acquire>:
82000d16:	55                   	push   %ebp
82000d17:	89 e5                	mov    %esp,%ebp
82000d19:	90                   	nop
82000d1a:	5d                   	pop    %ebp
82000d1b:	c3                   	ret    

82000d1c <__sinit_lock_release>:
82000d1c:	55                   	push   %ebp
82000d1d:	89 e5                	mov    %esp,%ebp
82000d1f:	90                   	nop
82000d20:	5d                   	pop    %ebp
82000d21:	c3                   	ret    

82000d22 <__fp_lock>:
82000d22:	55                   	push   %ebp
82000d23:	89 e5                	mov    %esp,%ebp
82000d25:	b8 00 00 00 00       	mov    $0x0,%eax
82000d2a:	5d                   	pop    %ebp
82000d2b:	c3                   	ret    

82000d2c <__fp_unlock>:
82000d2c:	55                   	push   %ebp
82000d2d:	89 e5                	mov    %esp,%ebp
82000d2f:	b8 00 00 00 00       	mov    $0x0,%eax
82000d34:	5d                   	pop    %ebp
82000d35:	c3                   	ret    

82000d36 <__fp_lock_all>:
82000d36:	55                   	push   %ebp
82000d37:	89 e5                	mov    %esp,%ebp
82000d39:	83 ec 08             	sub    $0x8,%esp
82000d3c:	e8 c9 ff ff ff       	call   82000d0a <__sfp_lock_acquire>
82000d41:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82000d46:	83 ec 08             	sub    $0x8,%esp
82000d49:	68 22 0d 00 82       	push   $0x82000d22
82000d4e:	50                   	push   %eax
82000d4f:	e8 45 0e 00 00       	call   82001b99 <_fwalk>
82000d54:	83 c4 10             	add    $0x10,%esp
82000d57:	90                   	nop
82000d58:	c9                   	leave  
82000d59:	c3                   	ret    

82000d5a <__fp_unlock_all>:
82000d5a:	55                   	push   %ebp
82000d5b:	89 e5                	mov    %esp,%ebp
82000d5d:	83 ec 08             	sub    $0x8,%esp
82000d60:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82000d65:	83 ec 08             	sub    $0x8,%esp
82000d68:	68 2c 0d 00 82       	push   $0x82000d2c
82000d6d:	50                   	push   %eax
82000d6e:	e8 26 0e 00 00       	call   82001b99 <_fwalk>
82000d73:	83 c4 10             	add    $0x10,%esp
82000d76:	e8 95 ff ff ff       	call   82000d10 <__sfp_lock_release>
82000d7b:	90                   	nop
82000d7c:	c9                   	leave  
82000d7d:	c3                   	ret    

82000d7e <_fopen_r>:
82000d7e:	55                   	push   %ebp
82000d7f:	89 e5                	mov    %esp,%ebp
82000d81:	56                   	push   %esi
82000d82:	53                   	push   %ebx
82000d83:	83 ec 10             	sub    $0x10,%esp
82000d86:	83 ec 04             	sub    $0x4,%esp
82000d89:	8d 45 f0             	lea    -0x10(%ebp),%eax
82000d8c:	50                   	push   %eax
82000d8d:	ff 75 10             	push   0x10(%ebp)
82000d90:	ff 75 08             	push   0x8(%ebp)
82000d93:	e8 cc 25 00 00       	call   82003364 <__sflags>
82000d98:	83 c4 10             	add    $0x10,%esp
82000d9b:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000d9e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000da2:	75 0a                	jne    82000dae <_fopen_r+0x30>
82000da4:	b8 00 00 00 00       	mov    $0x0,%eax
82000da9:	e9 9e 00 00 00       	jmp    82000e4c <_fopen_r+0xce>
82000dae:	83 ec 0c             	sub    $0xc,%esp
82000db1:	ff 75 08             	push   0x8(%ebp)
82000db4:	e8 30 fd ff ff       	call   82000ae9 <__sfp>
82000db9:	83 c4 10             	add    $0x10,%esp
82000dbc:	89 c3                	mov    %eax,%ebx
82000dbe:	85 db                	test   %ebx,%ebx
82000dc0:	75 0a                	jne    82000dcc <_fopen_r+0x4e>
82000dc2:	b8 00 00 00 00       	mov    $0x0,%eax
82000dc7:	e9 80 00 00 00       	jmp    82000e4c <_fopen_r+0xce>
82000dcc:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000dcf:	68 b6 01 00 00       	push   $0x1b6
82000dd4:	50                   	push   %eax
82000dd5:	ff 75 0c             	push   0xc(%ebp)
82000dd8:	ff 75 08             	push   0x8(%ebp)
82000ddb:	e8 b4 1c 00 00       	call   82002a94 <_open_r>
82000de0:	83 c4 10             	add    $0x10,%esp
82000de3:	89 c6                	mov    %eax,%esi
82000de5:	85 f6                	test   %esi,%esi
82000de7:	79 17                	jns    82000e00 <_fopen_r+0x82>
82000de9:	e8 1c ff ff ff       	call   82000d0a <__sfp_lock_acquire>
82000dee:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
82000df4:	e8 17 ff ff ff       	call   82000d10 <__sfp_lock_release>
82000df9:	b8 00 00 00 00       	mov    $0x0,%eax
82000dfe:	eb 4c                	jmp    82000e4c <_fopen_r+0xce>
82000e00:	89 f0                	mov    %esi,%eax
82000e02:	66 89 43 0e          	mov    %ax,0xe(%ebx)
82000e06:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000e09:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82000e0d:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
82000e10:	c7 43 20 33 30 00 82 	movl   $0x82003033,0x20(%ebx)
82000e17:	c7 43 24 81 30 00 82 	movl   $0x82003081,0x24(%ebx)
82000e1e:	c7 43 28 dc 30 00 82 	movl   $0x820030dc,0x28(%ebx)
82000e25:	c7 43 2c 26 31 00 82 	movl   $0x82003126,0x2c(%ebx)
82000e2c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82000e30:	98                   	cwtl   
82000e31:	25 00 01 00 00       	and    $0x100,%eax
82000e36:	85 c0                	test   %eax,%eax
82000e38:	74 10                	je     82000e4a <_fopen_r+0xcc>
82000e3a:	6a 02                	push   $0x2
82000e3c:	6a 00                	push   $0x0
82000e3e:	53                   	push   %ebx
82000e3f:	ff 75 08             	push   0x8(%ebp)
82000e42:	e8 01 08 00 00       	call   82001648 <_fseek_r>
82000e47:	83 c4 10             	add    $0x10,%esp
82000e4a:	89 d8                	mov    %ebx,%eax
82000e4c:	8d 65 f8             	lea    -0x8(%ebp),%esp
82000e4f:	5b                   	pop    %ebx
82000e50:	5e                   	pop    %esi
82000e51:	5d                   	pop    %ebp
82000e52:	c3                   	ret    

82000e53 <fopen>:
82000e53:	55                   	push   %ebp
82000e54:	89 e5                	mov    %esp,%ebp
82000e56:	83 ec 08             	sub    $0x8,%esp
82000e59:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82000e5e:	83 ec 04             	sub    $0x4,%esp
82000e61:	ff 75 0c             	push   0xc(%ebp)
82000e64:	ff 75 08             	push   0x8(%ebp)
82000e67:	50                   	push   %eax
82000e68:	e8 11 ff ff ff       	call   82000d7e <_fopen_r>
82000e6d:	83 c4 10             	add    $0x10,%esp
82000e70:	c9                   	leave  
82000e71:	c3                   	ret    

82000e72 <_fread_r>:
82000e72:	55                   	push   %ebp
82000e73:	89 e5                	mov    %esp,%ebp
82000e75:	57                   	push   %edi
82000e76:	56                   	push   %esi
82000e77:	53                   	push   %ebx
82000e78:	83 ec 2c             	sub    $0x2c,%esp
82000e7b:	8b 45 14             	mov    0x14(%ebp),%eax
82000e7e:	0f af 45 10          	imul   0x10(%ebp),%eax
82000e82:	89 c3                	mov    %eax,%ebx
82000e84:	85 db                	test   %ebx,%ebx
82000e86:	75 0a                	jne    82000e92 <_fread_r+0x20>
82000e88:	b8 00 00 00 00       	mov    $0x0,%eax
82000e8d:	e9 4d 02 00 00       	jmp    820010df <_fread_r+0x26d>
82000e92:	8b 45 08             	mov    0x8(%ebp),%eax
82000e95:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82000e98:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82000e9c:	74 18                	je     82000eb6 <_fread_r+0x44>
82000e9e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82000ea1:	8b 40 38             	mov    0x38(%eax),%eax
82000ea4:	85 c0                	test   %eax,%eax
82000ea6:	75 0e                	jne    82000eb6 <_fread_r+0x44>
82000ea8:	83 ec 0c             	sub    $0xc,%esp
82000eab:	ff 75 e4             	push   -0x1c(%ebp)
82000eae:	e8 be fd ff ff       	call   82000c71 <__sinit>
82000eb3:	83 c4 10             	add    $0x10,%esp
82000eb6:	8b 45 18             	mov    0x18(%ebp),%eax
82000eb9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82000ebd:	98                   	cwtl   
82000ebe:	25 00 20 00 00       	and    $0x2000,%eax
82000ec3:	85 c0                	test   %eax,%eax
82000ec5:	75 24                	jne    82000eeb <_fread_r+0x79>
82000ec7:	8b 45 18             	mov    0x18(%ebp),%eax
82000eca:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82000ece:	80 cc 20             	or     $0x20,%ah
82000ed1:	89 c2                	mov    %eax,%edx
82000ed3:	8b 45 18             	mov    0x18(%ebp),%eax
82000ed6:	66 89 50 0c          	mov    %dx,0xc(%eax)
82000eda:	8b 45 18             	mov    0x18(%ebp),%eax
82000edd:	8b 40 64             	mov    0x64(%eax),%eax
82000ee0:	80 e4 df             	and    $0xdf,%ah
82000ee3:	89 c2                	mov    %eax,%edx
82000ee5:	8b 45 18             	mov    0x18(%ebp),%eax
82000ee8:	89 50 64             	mov    %edx,0x64(%eax)
82000eeb:	8b 45 18             	mov    0x18(%ebp),%eax
82000eee:	8b 40 04             	mov    0x4(%eax),%eax
82000ef1:	85 c0                	test   %eax,%eax
82000ef3:	79 0a                	jns    82000eff <_fread_r+0x8d>
82000ef5:	8b 45 18             	mov    0x18(%ebp),%eax
82000ef8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
82000eff:	89 5d e0             	mov    %ebx,-0x20(%ebp)
82000f02:	8b 75 0c             	mov    0xc(%ebp),%esi
82000f05:	8b 45 18             	mov    0x18(%ebp),%eax
82000f08:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82000f0c:	98                   	cwtl   
82000f0d:	83 e0 02             	and    $0x2,%eax
82000f10:	85 c0                	test   %eax,%eax
82000f12:	0f 84 88 01 00 00    	je     820010a0 <_fread_r+0x22e>
82000f18:	8b 45 18             	mov    0x18(%ebp),%eax
82000f1b:	8b 40 04             	mov    0x4(%eax),%eax
82000f1e:	39 c3                	cmp    %eax,%ebx
82000f20:	0f 46 c3             	cmovbe %ebx,%eax
82000f23:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000f26:	8b 55 dc             	mov    -0x24(%ebp),%edx
82000f29:	8b 45 18             	mov    0x18(%ebp),%eax
82000f2c:	8b 00                	mov    (%eax),%eax
82000f2e:	83 ec 04             	sub    $0x4,%esp
82000f31:	52                   	push   %edx
82000f32:	50                   	push   %eax
82000f33:	56                   	push   %esi
82000f34:	e8 7f 1a 00 00       	call   820029b8 <memcpy>
82000f39:	83 c4 10             	add    $0x10,%esp
82000f3c:	8b 45 18             	mov    0x18(%ebp),%eax
82000f3f:	8b 10                	mov    (%eax),%edx
82000f41:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000f44:	01 c2                	add    %eax,%edx
82000f46:	8b 45 18             	mov    0x18(%ebp),%eax
82000f49:	89 10                	mov    %edx,(%eax)
82000f4b:	8b 45 18             	mov    0x18(%ebp),%eax
82000f4e:	8b 40 04             	mov    0x4(%eax),%eax
82000f51:	2b 45 dc             	sub    -0x24(%ebp),%eax
82000f54:	89 c2                	mov    %eax,%edx
82000f56:	8b 45 18             	mov    0x18(%ebp),%eax
82000f59:	89 50 04             	mov    %edx,0x4(%eax)
82000f5c:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000f5f:	01 c6                	add    %eax,%esi
82000f61:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000f64:	29 c3                	sub    %eax,%ebx
82000f66:	8b 45 18             	mov    0x18(%ebp),%eax
82000f69:	8b 40 30             	mov    0x30(%eax),%eax
82000f6c:	85 c0                	test   %eax,%eax
82000f6e:	0f 84 d0 00 00 00    	je     82001044 <_fread_r+0x1d2>
82000f74:	85 db                	test   %ebx,%ebx
82000f76:	0f 84 c8 00 00 00    	je     82001044 <_fread_r+0x1d2>
82000f7c:	8b 45 18             	mov    0x18(%ebp),%eax
82000f7f:	8b 40 30             	mov    0x30(%eax),%eax
82000f82:	8b 55 18             	mov    0x18(%ebp),%edx
82000f85:	83 c2 40             	add    $0x40,%edx
82000f88:	39 d0                	cmp    %edx,%eax
82000f8a:	74 15                	je     82000fa1 <_fread_r+0x12f>
82000f8c:	8b 45 18             	mov    0x18(%ebp),%eax
82000f8f:	8b 40 30             	mov    0x30(%eax),%eax
82000f92:	83 ec 08             	sub    $0x8,%esp
82000f95:	50                   	push   %eax
82000f96:	ff 75 08             	push   0x8(%ebp)
82000f99:	e8 6e 01 00 00       	call   8200110c <_free_r>
82000f9e:	83 c4 10             	add    $0x10,%esp
82000fa1:	8b 45 18             	mov    0x18(%ebp),%eax
82000fa4:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
82000fab:	e9 94 00 00 00       	jmp    82001044 <_fread_r+0x1d2>
82000fb0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
82000fb7:	8b 45 18             	mov    0x18(%ebp),%eax
82000fba:	8b 40 10             	mov    0x10(%eax),%eax
82000fbd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82000fc0:	8b 45 18             	mov    0x18(%ebp),%eax
82000fc3:	8b 00                	mov    (%eax),%eax
82000fc5:	89 45 d0             	mov    %eax,-0x30(%ebp)
82000fc8:	8b 45 18             	mov    0x18(%ebp),%eax
82000fcb:	8b 40 14             	mov    0x14(%eax),%eax
82000fce:	89 45 cc             	mov    %eax,-0x34(%ebp)
82000fd1:	8b 45 18             	mov    0x18(%ebp),%eax
82000fd4:	89 70 10             	mov    %esi,0x10(%eax)
82000fd7:	89 da                	mov    %ebx,%edx
82000fd9:	8b 45 18             	mov    0x18(%ebp),%eax
82000fdc:	89 50 14             	mov    %edx,0x14(%eax)
82000fdf:	8b 45 18             	mov    0x18(%ebp),%eax
82000fe2:	89 30                	mov    %esi,(%eax)
82000fe4:	83 ec 08             	sub    $0x8,%esp
82000fe7:	ff 75 18             	push   0x18(%ebp)
82000fea:	ff 75 08             	push   0x8(%ebp)
82000fed:	e8 00 1e 00 00       	call   82002df2 <__srefill_r>
82000ff2:	83 c4 10             	add    $0x10,%esp
82000ff5:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000ff8:	8b 45 18             	mov    0x18(%ebp),%eax
82000ffb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82000ffe:	89 50 10             	mov    %edx,0x10(%eax)
82001001:	8b 45 18             	mov    0x18(%ebp),%eax
82001004:	8b 55 cc             	mov    -0x34(%ebp),%edx
82001007:	89 50 14             	mov    %edx,0x14(%eax)
8200100a:	8b 45 18             	mov    0x18(%ebp),%eax
8200100d:	8b 55 d0             	mov    -0x30(%ebp),%edx
82001010:	89 10                	mov    %edx,(%eax)
82001012:	8b 45 18             	mov    0x18(%ebp),%eax
82001015:	8b 40 04             	mov    0x4(%eax),%eax
82001018:	29 c3                	sub    %eax,%ebx
8200101a:	8b 45 18             	mov    0x18(%ebp),%eax
8200101d:	8b 40 04             	mov    0x4(%eax),%eax
82001020:	01 c6                	add    %eax,%esi
82001022:	8b 45 18             	mov    0x18(%ebp),%eax
82001025:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8200102c:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
82001030:	74 12                	je     82001044 <_fread_r+0x1d2>
82001032:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001035:	29 d8                	sub    %ebx,%eax
82001037:	ba 00 00 00 00       	mov    $0x0,%edx
8200103c:	f7 75 10             	divl   0x10(%ebp)
8200103f:	e9 9b 00 00 00       	jmp    820010df <_fread_r+0x26d>
82001044:	85 db                	test   %ebx,%ebx
82001046:	0f 85 64 ff ff ff    	jne    82000fb0 <_fread_r+0x13e>
8200104c:	e9 8b 00 00 00       	jmp    820010dc <_fread_r+0x26a>
82001051:	89 fa                	mov    %edi,%edx
82001053:	8b 45 18             	mov    0x18(%ebp),%eax
82001056:	8b 00                	mov    (%eax),%eax
82001058:	83 ec 04             	sub    $0x4,%esp
8200105b:	52                   	push   %edx
8200105c:	50                   	push   %eax
8200105d:	56                   	push   %esi
8200105e:	e8 55 19 00 00       	call   820029b8 <memcpy>
82001063:	83 c4 10             	add    $0x10,%esp
82001066:	8b 45 18             	mov    0x18(%ebp),%eax
82001069:	8b 00                	mov    (%eax),%eax
8200106b:	89 fa                	mov    %edi,%edx
8200106d:	01 c2                	add    %eax,%edx
8200106f:	8b 45 18             	mov    0x18(%ebp),%eax
82001072:	89 10                	mov    %edx,(%eax)
82001074:	89 f8                	mov    %edi,%eax
82001076:	01 c6                	add    %eax,%esi
82001078:	89 f8                	mov    %edi,%eax
8200107a:	29 c3                	sub    %eax,%ebx
8200107c:	83 ec 08             	sub    $0x8,%esp
8200107f:	ff 75 18             	push   0x18(%ebp)
82001082:	ff 75 08             	push   0x8(%ebp)
82001085:	e8 68 1d 00 00       	call   82002df2 <__srefill_r>
8200108a:	83 c4 10             	add    $0x10,%esp
8200108d:	85 c0                	test   %eax,%eax
8200108f:	74 0f                	je     820010a0 <_fread_r+0x22e>
82001091:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001094:	29 d8                	sub    %ebx,%eax
82001096:	ba 00 00 00 00       	mov    $0x0,%edx
8200109b:	f7 75 10             	divl   0x10(%ebp)
8200109e:	eb 3f                	jmp    820010df <_fread_r+0x26d>
820010a0:	8b 45 18             	mov    0x18(%ebp),%eax
820010a3:	8b 78 04             	mov    0x4(%eax),%edi
820010a6:	89 f8                	mov    %edi,%eax
820010a8:	39 c3                	cmp    %eax,%ebx
820010aa:	77 a5                	ja     82001051 <_fread_r+0x1df>
820010ac:	8b 45 18             	mov    0x18(%ebp),%eax
820010af:	8b 00                	mov    (%eax),%eax
820010b1:	83 ec 04             	sub    $0x4,%esp
820010b4:	53                   	push   %ebx
820010b5:	50                   	push   %eax
820010b6:	56                   	push   %esi
820010b7:	e8 fc 18 00 00       	call   820029b8 <memcpy>
820010bc:	83 c4 10             	add    $0x10,%esp
820010bf:	8b 45 18             	mov    0x18(%ebp),%eax
820010c2:	8b 40 04             	mov    0x4(%eax),%eax
820010c5:	29 d8                	sub    %ebx,%eax
820010c7:	89 c2                	mov    %eax,%edx
820010c9:	8b 45 18             	mov    0x18(%ebp),%eax
820010cc:	89 50 04             	mov    %edx,0x4(%eax)
820010cf:	8b 45 18             	mov    0x18(%ebp),%eax
820010d2:	8b 00                	mov    (%eax),%eax
820010d4:	8d 14 18             	lea    (%eax,%ebx,1),%edx
820010d7:	8b 45 18             	mov    0x18(%ebp),%eax
820010da:	89 10                	mov    %edx,(%eax)
820010dc:	8b 45 14             	mov    0x14(%ebp),%eax
820010df:	8d 65 f4             	lea    -0xc(%ebp),%esp
820010e2:	5b                   	pop    %ebx
820010e3:	5e                   	pop    %esi
820010e4:	5f                   	pop    %edi
820010e5:	5d                   	pop    %ebp
820010e6:	c3                   	ret    

820010e7 <fread>:
820010e7:	55                   	push   %ebp
820010e8:	89 e5                	mov    %esp,%ebp
820010ea:	83 ec 08             	sub    $0x8,%esp
820010ed:	a1 64 5e 00 82       	mov    0x82005e64,%eax
820010f2:	83 ec 0c             	sub    $0xc,%esp
820010f5:	ff 75 14             	push   0x14(%ebp)
820010f8:	ff 75 10             	push   0x10(%ebp)
820010fb:	ff 75 0c             	push   0xc(%ebp)
820010fe:	ff 75 08             	push   0x8(%ebp)
82001101:	50                   	push   %eax
82001102:	e8 6b fd ff ff       	call   82000e72 <_fread_r>
82001107:	83 c4 20             	add    $0x20,%esp
8200110a:	c9                   	leave  
8200110b:	c3                   	ret    

8200110c <_free_r>:
8200110c:	55                   	push   %ebp
8200110d:	89 e5                	mov    %esp,%ebp
8200110f:	53                   	push   %ebx
82001110:	83 ec 34             	sub    $0x34,%esp
82001113:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82001117:	0f 84 c4 03 00 00    	je     820014e1 <_free_r+0x3d5>
8200111d:	83 ec 0c             	sub    $0xc,%esp
82001120:	ff 75 08             	push   0x8(%ebp)
82001123:	e8 60 19 00 00       	call   82002a88 <__malloc_lock>
82001128:	83 c4 10             	add    $0x10,%esp
8200112b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200112e:	83 e8 08             	sub    $0x8,%eax
82001131:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001134:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001137:	8b 40 04             	mov    0x4(%eax),%eax
8200113a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8200113d:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001140:	83 e0 fe             	and    $0xfffffffe,%eax
82001143:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001146:	8b 55 f4             	mov    -0xc(%ebp),%edx
82001149:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200114c:	01 d0                	add    %edx,%eax
8200114e:	89 45 dc             	mov    %eax,-0x24(%ebp)
82001151:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001154:	8b 40 04             	mov    0x4(%eax),%eax
82001157:	83 e0 fc             	and    $0xfffffffc,%eax
8200115a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200115d:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001162:	8b 40 08             	mov    0x8(%eax),%eax
82001165:	39 45 dc             	cmp    %eax,-0x24(%ebp)
82001168:	0f 85 94 00 00 00    	jne    82001202 <_free_r+0xf6>
8200116e:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001171:	01 45 f0             	add    %eax,-0x10(%ebp)
82001174:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001177:	83 e0 01             	and    $0x1,%eax
8200117a:	85 c0                	test   %eax,%eax
8200117c:	75 3a                	jne    820011b8 <_free_r+0xac>
8200117e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001181:	8b 00                	mov    (%eax),%eax
82001183:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82001186:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001189:	f7 d8                	neg    %eax
8200118b:	01 45 f4             	add    %eax,-0xc(%ebp)
8200118e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001191:	01 45 f0             	add    %eax,-0x10(%ebp)
82001194:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001197:	8b 40 0c             	mov    0xc(%eax),%eax
8200119a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200119d:	8b 45 f4             	mov    -0xc(%ebp),%eax
820011a0:	8b 40 08             	mov    0x8(%eax),%eax
820011a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
820011a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
820011a9:	8b 55 ec             	mov    -0x14(%ebp),%edx
820011ac:	89 50 0c             	mov    %edx,0xc(%eax)
820011af:	8b 45 ec             	mov    -0x14(%ebp),%eax
820011b2:	8b 55 e8             	mov    -0x18(%ebp),%edx
820011b5:	89 50 08             	mov    %edx,0x8(%eax)
820011b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
820011bb:	83 c8 01             	or     $0x1,%eax
820011be:	89 c2                	mov    %eax,%edx
820011c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
820011c3:	89 50 04             	mov    %edx,0x4(%eax)
820011c6:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
820011cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
820011ce:	89 42 08             	mov    %eax,0x8(%edx)
820011d1:	a1 88 62 00 82       	mov    0x82006288,%eax
820011d6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
820011d9:	72 14                	jb     820011ef <_free_r+0xe3>
820011db:	a1 40 64 00 82       	mov    0x82006440,%eax
820011e0:	83 ec 08             	sub    $0x8,%esp
820011e3:	50                   	push   %eax
820011e4:	ff 75 08             	push   0x8(%ebp)
820011e7:	e8 fb 02 00 00       	call   820014e7 <_malloc_trim_r>
820011ec:	83 c4 10             	add    $0x10,%esp
820011ef:	83 ec 0c             	sub    $0xc,%esp
820011f2:	ff 75 08             	push   0x8(%ebp)
820011f5:	e8 94 18 00 00       	call   82002a8e <__malloc_unlock>
820011fa:	83 c4 10             	add    $0x10,%esp
820011fd:	e9 e0 02 00 00       	jmp    820014e2 <_free_r+0x3d6>
82001202:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001205:	8b 55 d8             	mov    -0x28(%ebp),%edx
82001208:	89 50 04             	mov    %edx,0x4(%eax)
8200120b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82001212:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001215:	83 e0 01             	and    $0x1,%eax
82001218:	85 c0                	test   %eax,%eax
8200121a:	75 52                	jne    8200126e <_free_r+0x162>
8200121c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200121f:	8b 00                	mov    (%eax),%eax
82001221:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82001224:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001227:	f7 d8                	neg    %eax
82001229:	01 45 f4             	add    %eax,-0xc(%ebp)
8200122c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200122f:	01 45 f0             	add    %eax,-0x10(%ebp)
82001232:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001235:	8b 40 08             	mov    0x8(%eax),%eax
82001238:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
8200123d:	39 d0                	cmp    %edx,%eax
8200123f:	75 09                	jne    8200124a <_free_r+0x13e>
82001241:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
82001248:	eb 24                	jmp    8200126e <_free_r+0x162>
8200124a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200124d:	8b 40 0c             	mov    0xc(%eax),%eax
82001250:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001253:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001256:	8b 40 08             	mov    0x8(%eax),%eax
82001259:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200125c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200125f:	8b 55 ec             	mov    -0x14(%ebp),%edx
82001262:	89 50 0c             	mov    %edx,0xc(%eax)
82001265:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001268:	8b 55 e8             	mov    -0x18(%ebp),%edx
8200126b:	89 50 08             	mov    %edx,0x8(%eax)
8200126e:	8b 55 dc             	mov    -0x24(%ebp),%edx
82001271:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001274:	01 d0                	add    %edx,%eax
82001276:	8b 40 04             	mov    0x4(%eax),%eax
82001279:	83 e0 01             	and    $0x1,%eax
8200127c:	85 c0                	test   %eax,%eax
8200127e:	75 75                	jne    820012f5 <_free_r+0x1e9>
82001280:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001283:	01 45 f0             	add    %eax,-0x10(%ebp)
82001286:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8200128a:	75 45                	jne    820012d1 <_free_r+0x1c5>
8200128c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200128f:	8b 40 08             	mov    0x8(%eax),%eax
82001292:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
82001297:	39 d0                	cmp    %edx,%eax
82001299:	75 36                	jne    820012d1 <_free_r+0x1c5>
8200129b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
820012a2:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
820012a7:	8b 55 f4             	mov    -0xc(%ebp),%edx
820012aa:	89 50 0c             	mov    %edx,0xc(%eax)
820012ad:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820012b2:	8b 40 0c             	mov    0xc(%eax),%eax
820012b5:	89 42 08             	mov    %eax,0x8(%edx)
820012b8:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820012bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
820012c0:	89 50 0c             	mov    %edx,0xc(%eax)
820012c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
820012c6:	8b 50 0c             	mov    0xc(%eax),%edx
820012c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
820012cc:	89 50 08             	mov    %edx,0x8(%eax)
820012cf:	eb 24                	jmp    820012f5 <_free_r+0x1e9>
820012d1:	8b 45 dc             	mov    -0x24(%ebp),%eax
820012d4:	8b 40 0c             	mov    0xc(%eax),%eax
820012d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
820012da:	8b 45 dc             	mov    -0x24(%ebp),%eax
820012dd:	8b 40 08             	mov    0x8(%eax),%eax
820012e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
820012e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
820012e6:	8b 55 ec             	mov    -0x14(%ebp),%edx
820012e9:	89 50 0c             	mov    %edx,0xc(%eax)
820012ec:	8b 45 ec             	mov    -0x14(%ebp),%eax
820012ef:	8b 55 e8             	mov    -0x18(%ebp),%edx
820012f2:	89 50 08             	mov    %edx,0x8(%eax)
820012f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
820012f8:	83 c8 01             	or     $0x1,%eax
820012fb:	89 c2                	mov    %eax,%edx
820012fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001300:	89 50 04             	mov    %edx,0x4(%eax)
82001303:	8b 55 f4             	mov    -0xc(%ebp),%edx
82001306:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001309:	01 c2                	add    %eax,%edx
8200130b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200130e:	89 02                	mov    %eax,(%edx)
82001310:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82001314:	0f 85 b7 01 00 00    	jne    820014d1 <_free_r+0x3c5>
8200131a:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
82001321:	77 7f                	ja     820013a2 <_free_r+0x296>
82001323:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001326:	c1 e8 03             	shr    $0x3,%eax
82001329:	89 45 d0             	mov    %eax,-0x30(%ebp)
8200132c:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001331:	8b 58 04             	mov    0x4(%eax),%ebx
82001334:	8b 45 d0             	mov    -0x30(%ebp),%eax
82001337:	8d 50 03             	lea    0x3(%eax),%edx
8200133a:	85 c0                	test   %eax,%eax
8200133c:	0f 48 c2             	cmovs  %edx,%eax
8200133f:	c1 f8 02             	sar    $0x2,%eax
82001342:	ba 01 00 00 00       	mov    $0x1,%edx
82001347:	89 c1                	mov    %eax,%ecx
82001349:	d3 e2                	shl    %cl,%edx
8200134b:	89 d0                	mov    %edx,%eax
8200134d:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82001352:	09 d8                	or     %ebx,%eax
82001354:	89 42 04             	mov    %eax,0x4(%edx)
82001357:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200135a:	83 c0 01             	add    $0x1,%eax
8200135d:	01 c0                	add    %eax,%eax
8200135f:	c1 e0 02             	shl    $0x2,%eax
82001362:	05 80 5e 00 82       	add    $0x82005e80,%eax
82001367:	83 e8 08             	sub    $0x8,%eax
8200136a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200136d:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001370:	8b 40 08             	mov    0x8(%eax),%eax
82001373:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001376:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001379:	8b 55 ec             	mov    -0x14(%ebp),%edx
8200137c:	89 50 0c             	mov    %edx,0xc(%eax)
8200137f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001382:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001385:	89 50 08             	mov    %edx,0x8(%eax)
82001388:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200138b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200138e:	89 50 08             	mov    %edx,0x8(%eax)
82001391:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001394:	8b 50 08             	mov    0x8(%eax),%edx
82001397:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200139a:	89 50 0c             	mov    %edx,0xc(%eax)
8200139d:	e9 2f 01 00 00       	jmp    820014d1 <_free_r+0x3c5>
820013a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013a5:	c1 e8 09             	shr    $0x9,%eax
820013a8:	85 c0                	test   %eax,%eax
820013aa:	75 08                	jne    820013b4 <_free_r+0x2a8>
820013ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013af:	c1 e8 03             	shr    $0x3,%eax
820013b2:	eb 77                	jmp    8200142b <_free_r+0x31f>
820013b4:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013b7:	c1 e8 09             	shr    $0x9,%eax
820013ba:	83 f8 04             	cmp    $0x4,%eax
820013bd:	77 0b                	ja     820013ca <_free_r+0x2be>
820013bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013c2:	c1 e8 06             	shr    $0x6,%eax
820013c5:	83 c0 38             	add    $0x38,%eax
820013c8:	eb 61                	jmp    8200142b <_free_r+0x31f>
820013ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013cd:	c1 e8 09             	shr    $0x9,%eax
820013d0:	83 f8 14             	cmp    $0x14,%eax
820013d3:	77 0b                	ja     820013e0 <_free_r+0x2d4>
820013d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013d8:	c1 e8 09             	shr    $0x9,%eax
820013db:	83 c0 5b             	add    $0x5b,%eax
820013de:	eb 4b                	jmp    8200142b <_free_r+0x31f>
820013e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013e3:	c1 e8 09             	shr    $0x9,%eax
820013e6:	83 f8 54             	cmp    $0x54,%eax
820013e9:	77 0b                	ja     820013f6 <_free_r+0x2ea>
820013eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013ee:	c1 e8 0c             	shr    $0xc,%eax
820013f1:	83 c0 6e             	add    $0x6e,%eax
820013f4:	eb 35                	jmp    8200142b <_free_r+0x31f>
820013f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013f9:	c1 e8 09             	shr    $0x9,%eax
820013fc:	3d 54 01 00 00       	cmp    $0x154,%eax
82001401:	77 0b                	ja     8200140e <_free_r+0x302>
82001403:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001406:	c1 e8 0f             	shr    $0xf,%eax
82001409:	83 c0 77             	add    $0x77,%eax
8200140c:	eb 1d                	jmp    8200142b <_free_r+0x31f>
8200140e:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001411:	c1 e8 09             	shr    $0x9,%eax
82001414:	3d 54 05 00 00       	cmp    $0x554,%eax
82001419:	77 0b                	ja     82001426 <_free_r+0x31a>
8200141b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200141e:	c1 e8 12             	shr    $0x12,%eax
82001421:	83 c0 7c             	add    $0x7c,%eax
82001424:	eb 05                	jmp    8200142b <_free_r+0x31f>
82001426:	b8 7e 00 00 00       	mov    $0x7e,%eax
8200142b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8200142e:	8b 45 d0             	mov    -0x30(%ebp),%eax
82001431:	83 c0 01             	add    $0x1,%eax
82001434:	01 c0                	add    %eax,%eax
82001436:	c1 e0 02             	shl    $0x2,%eax
82001439:	05 80 5e 00 82       	add    $0x82005e80,%eax
8200143e:	83 e8 08             	sub    $0x8,%eax
82001441:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001444:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001447:	8b 40 08             	mov    0x8(%eax),%eax
8200144a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200144d:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001450:	3b 45 ec             	cmp    -0x14(%ebp),%eax
82001453:	75 36                	jne    8200148b <_free_r+0x37f>
82001455:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
8200145a:	8b 58 04             	mov    0x4(%eax),%ebx
8200145d:	8b 45 d0             	mov    -0x30(%ebp),%eax
82001460:	8d 50 03             	lea    0x3(%eax),%edx
82001463:	85 c0                	test   %eax,%eax
82001465:	0f 48 c2             	cmovs  %edx,%eax
82001468:	c1 f8 02             	sar    $0x2,%eax
8200146b:	ba 01 00 00 00       	mov    $0x1,%edx
82001470:	89 c1                	mov    %eax,%ecx
82001472:	d3 e2                	shl    %cl,%edx
82001474:	89 d0                	mov    %edx,%eax
82001476:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
8200147b:	09 d8                	or     %ebx,%eax
8200147d:	89 42 04             	mov    %eax,0x4(%edx)
82001480:	eb 28                	jmp    820014aa <_free_r+0x39e>
82001482:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001485:	8b 40 08             	mov    0x8(%eax),%eax
82001488:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200148b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200148e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
82001491:	74 0e                	je     820014a1 <_free_r+0x395>
82001493:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001496:	8b 40 04             	mov    0x4(%eax),%eax
82001499:	83 e0 fc             	and    $0xfffffffc,%eax
8200149c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8200149f:	72 e1                	jb     82001482 <_free_r+0x376>
820014a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
820014a4:	8b 40 0c             	mov    0xc(%eax),%eax
820014a7:	89 45 ec             	mov    %eax,-0x14(%ebp)
820014aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
820014ad:	8b 55 ec             	mov    -0x14(%ebp),%edx
820014b0:	89 50 0c             	mov    %edx,0xc(%eax)
820014b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
820014b6:	8b 55 e8             	mov    -0x18(%ebp),%edx
820014b9:	89 50 08             	mov    %edx,0x8(%eax)
820014bc:	8b 45 ec             	mov    -0x14(%ebp),%eax
820014bf:	8b 55 f4             	mov    -0xc(%ebp),%edx
820014c2:	89 50 08             	mov    %edx,0x8(%eax)
820014c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
820014c8:	8b 50 08             	mov    0x8(%eax),%edx
820014cb:	8b 45 e8             	mov    -0x18(%ebp),%eax
820014ce:	89 50 0c             	mov    %edx,0xc(%eax)
820014d1:	83 ec 0c             	sub    $0xc,%esp
820014d4:	ff 75 08             	push   0x8(%ebp)
820014d7:	e8 b2 15 00 00       	call   82002a8e <__malloc_unlock>
820014dc:	83 c4 10             	add    $0x10,%esp
820014df:	eb 01                	jmp    820014e2 <_free_r+0x3d6>
820014e1:	90                   	nop
820014e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820014e5:	c9                   	leave  
820014e6:	c3                   	ret    

820014e7 <_malloc_trim_r>:
820014e7:	55                   	push   %ebp
820014e8:	89 e5                	mov    %esp,%ebp
820014ea:	83 ec 28             	sub    $0x28,%esp
820014ed:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
820014f4:	83 ec 0c             	sub    $0xc,%esp
820014f7:	ff 75 08             	push   0x8(%ebp)
820014fa:	e8 89 15 00 00       	call   82002a88 <__malloc_lock>
820014ff:	83 c4 10             	add    $0x10,%esp
82001502:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001507:	8b 40 08             	mov    0x8(%eax),%eax
8200150a:	8b 40 04             	mov    0x4(%eax),%eax
8200150d:	83 e0 fc             	and    $0xfffffffc,%eax
82001510:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001513:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001516:	2b 45 0c             	sub    0xc(%ebp),%eax
82001519:	89 c2                	mov    %eax,%edx
8200151b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200151e:	01 d0                	add    %edx,%eax
82001520:	83 e8 11             	sub    $0x11,%eax
82001523:	ba 00 00 00 00       	mov    $0x0,%edx
82001528:	f7 75 f4             	divl   -0xc(%ebp)
8200152b:	83 e8 01             	sub    $0x1,%eax
8200152e:	0f af 45 f4          	imul   -0xc(%ebp),%eax
82001532:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001535:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001538:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8200153b:	7d 18                	jge    82001555 <_malloc_trim_r+0x6e>
8200153d:	83 ec 0c             	sub    $0xc,%esp
82001540:	ff 75 08             	push   0x8(%ebp)
82001543:	e8 46 15 00 00       	call   82002a8e <__malloc_unlock>
82001548:	83 c4 10             	add    $0x10,%esp
8200154b:	b8 00 00 00 00       	mov    $0x0,%eax
82001550:	e9 f1 00 00 00       	jmp    82001646 <_malloc_trim_r+0x15f>
82001555:	83 ec 08             	sub    $0x8,%esp
82001558:	6a 00                	push   $0x0
8200155a:	ff 75 08             	push   0x8(%ebp)
8200155d:	e8 91 1a 00 00       	call   82002ff3 <_sbrk_r>
82001562:	83 c4 10             	add    $0x10,%esp
82001565:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001568:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
8200156d:	8b 50 08             	mov    0x8(%eax),%edx
82001570:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001573:	01 d0                	add    %edx,%eax
82001575:	39 45 e8             	cmp    %eax,-0x18(%ebp)
82001578:	74 18                	je     82001592 <_malloc_trim_r+0xab>
8200157a:	83 ec 0c             	sub    $0xc,%esp
8200157d:	ff 75 08             	push   0x8(%ebp)
82001580:	e8 09 15 00 00       	call   82002a8e <__malloc_unlock>
82001585:	83 c4 10             	add    $0x10,%esp
82001588:	b8 00 00 00 00       	mov    $0x0,%eax
8200158d:	e9 b4 00 00 00       	jmp    82001646 <_malloc_trim_r+0x15f>
82001592:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001595:	f7 d8                	neg    %eax
82001597:	83 ec 08             	sub    $0x8,%esp
8200159a:	50                   	push   %eax
8200159b:	ff 75 08             	push   0x8(%ebp)
8200159e:	e8 50 1a 00 00       	call   82002ff3 <_sbrk_r>
820015a3:	83 c4 10             	add    $0x10,%esp
820015a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820015a9:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
820015ad:	75 61                	jne    82001610 <_malloc_trim_r+0x129>
820015af:	83 ec 08             	sub    $0x8,%esp
820015b2:	6a 00                	push   $0x0
820015b4:	ff 75 08             	push   0x8(%ebp)
820015b7:	e8 37 1a 00 00       	call   82002ff3 <_sbrk_r>
820015bc:	83 c4 10             	add    $0x10,%esp
820015bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
820015c2:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820015c7:	8b 50 08             	mov    0x8(%eax),%edx
820015ca:	8b 45 e8             	mov    -0x18(%ebp),%eax
820015cd:	29 d0                	sub    %edx,%eax
820015cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
820015d2:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
820015d6:	7e 23                	jle    820015fb <_malloc_trim_r+0x114>
820015d8:	8b 15 8c 62 00 82    	mov    0x8200628c,%edx
820015de:	8b 45 e8             	mov    -0x18(%ebp),%eax
820015e1:	29 d0                	sub    %edx,%eax
820015e3:	a3 60 64 00 82       	mov    %eax,0x82006460
820015e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
820015eb:	83 c8 01             	or     $0x1,%eax
820015ee:	89 c2                	mov    %eax,%edx
820015f0:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820015f5:	8b 40 08             	mov    0x8(%eax),%eax
820015f8:	89 50 04             	mov    %edx,0x4(%eax)
820015fb:	83 ec 0c             	sub    $0xc,%esp
820015fe:	ff 75 08             	push   0x8(%ebp)
82001601:	e8 88 14 00 00       	call   82002a8e <__malloc_unlock>
82001606:	83 c4 10             	add    $0x10,%esp
82001609:	b8 00 00 00 00       	mov    $0x0,%eax
8200160e:	eb 36                	jmp    82001646 <_malloc_trim_r+0x15f>
82001610:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001613:	2b 45 ec             	sub    -0x14(%ebp),%eax
82001616:	83 c8 01             	or     $0x1,%eax
82001619:	89 c2                	mov    %eax,%edx
8200161b:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001620:	8b 40 08             	mov    0x8(%eax),%eax
82001623:	89 50 04             	mov    %edx,0x4(%eax)
82001626:	a1 60 64 00 82       	mov    0x82006460,%eax
8200162b:	2b 45 ec             	sub    -0x14(%ebp),%eax
8200162e:	a3 60 64 00 82       	mov    %eax,0x82006460
82001633:	83 ec 0c             	sub    $0xc,%esp
82001636:	ff 75 08             	push   0x8(%ebp)
82001639:	e8 50 14 00 00       	call   82002a8e <__malloc_unlock>
8200163e:	83 c4 10             	add    $0x10,%esp
82001641:	b8 01 00 00 00       	mov    $0x1,%eax
82001646:	c9                   	leave  
82001647:	c3                   	ret    

82001648 <_fseek_r>:
82001648:	55                   	push   %ebp
82001649:	89 e5                	mov    %esp,%ebp
8200164b:	83 ec 08             	sub    $0x8,%esp
8200164e:	8b 45 0c             	mov    0xc(%ebp),%eax
82001651:	ff 75 14             	push   0x14(%ebp)
82001654:	ff 75 10             	push   0x10(%ebp)
82001657:	50                   	push   %eax
82001658:	ff 75 08             	push   0x8(%ebp)
8200165b:	e8 25 00 00 00       	call   82001685 <_fseeko_r>
82001660:	83 c4 10             	add    $0x10,%esp
82001663:	c9                   	leave  
82001664:	c3                   	ret    

82001665 <fseek>:
82001665:	55                   	push   %ebp
82001666:	89 e5                	mov    %esp,%ebp
82001668:	83 ec 08             	sub    $0x8,%esp
8200166b:	8b 55 08             	mov    0x8(%ebp),%edx
8200166e:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82001673:	ff 75 10             	push   0x10(%ebp)
82001676:	ff 75 0c             	push   0xc(%ebp)
82001679:	52                   	push   %edx
8200167a:	50                   	push   %eax
8200167b:	e8 c8 ff ff ff       	call   82001648 <_fseek_r>
82001680:	83 c4 10             	add    $0x10,%esp
82001683:	c9                   	leave  
82001684:	c3                   	ret    

82001685 <_fseeko_r>:
82001685:	55                   	push   %ebp
82001686:	89 e5                	mov    %esp,%ebp
82001688:	56                   	push   %esi
82001689:	53                   	push   %ebx
8200168a:	83 ec 60             	sub    $0x60,%esp
8200168d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82001690:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82001697:	8b 45 08             	mov    0x8(%ebp),%eax
8200169a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8200169d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
820016a1:	74 18                	je     820016bb <_fseeko_r+0x36>
820016a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820016a6:	8b 40 38             	mov    0x38(%eax),%eax
820016a9:	85 c0                	test   %eax,%eax
820016ab:	75 0e                	jne    820016bb <_fseeko_r+0x36>
820016ad:	83 ec 0c             	sub    $0xc,%esp
820016b0:	ff 75 e4             	push   -0x1c(%ebp)
820016b3:	e8 b9 f5 ff ff       	call   82000c71 <__sinit>
820016b8:	83 c4 10             	add    $0x10,%esp
820016bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820016bf:	98                   	cwtl   
820016c0:	25 00 01 00 00       	and    $0x100,%eax
820016c5:	85 c0                	test   %eax,%eax
820016c7:	74 1b                	je     820016e4 <_fseeko_r+0x5f>
820016c9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820016cd:	98                   	cwtl   
820016ce:	83 e0 08             	and    $0x8,%eax
820016d1:	85 c0                	test   %eax,%eax
820016d3:	74 0f                	je     820016e4 <_fseeko_r+0x5f>
820016d5:	83 ec 08             	sub    $0x8,%esp
820016d8:	53                   	push   %ebx
820016d9:	ff 75 08             	push   0x8(%ebp)
820016dc:	e8 0a f2 ff ff       	call   820008eb <_fflush_r>
820016e1:	83 c4 10             	add    $0x10,%esp
820016e4:	8b 43 28             	mov    0x28(%ebx),%eax
820016e7:	89 45 e0             	mov    %eax,-0x20(%ebp)
820016ea:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
820016ee:	75 13                	jne    82001703 <_fseeko_r+0x7e>
820016f0:	8b 45 08             	mov    0x8(%ebp),%eax
820016f3:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
820016f9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820016fe:	e9 2c 04 00 00       	jmp    82001b2f <_fseeko_r+0x4aa>
82001703:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
82001707:	0f 84 bc 00 00 00    	je     820017c9 <_fseeko_r+0x144>
8200170d:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
82001711:	0f 8f bb 00 00 00    	jg     820017d2 <_fseeko_r+0x14d>
82001717:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8200171b:	0f 84 a8 00 00 00    	je     820017c9 <_fseeko_r+0x144>
82001721:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
82001725:	0f 85 a7 00 00 00    	jne    820017d2 <_fseeko_r+0x14d>
8200172b:	83 ec 08             	sub    $0x8,%esp
8200172e:	53                   	push   %ebx
8200172f:	ff 75 08             	push   0x8(%ebp)
82001732:	e8 b4 f1 ff ff       	call   820008eb <_fflush_r>
82001737:	83 c4 10             	add    $0x10,%esp
8200173a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200173e:	98                   	cwtl   
8200173f:	25 00 10 00 00       	and    $0x1000,%eax
82001744:	85 c0                	test   %eax,%eax
82001746:	74 08                	je     82001750 <_fseeko_r+0xcb>
82001748:	8b 43 50             	mov    0x50(%ebx),%eax
8200174b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200174e:	eb 26                	jmp    82001776 <_fseeko_r+0xf1>
82001750:	8b 43 1c             	mov    0x1c(%ebx),%eax
82001753:	6a 01                	push   $0x1
82001755:	6a 00                	push   $0x0
82001757:	50                   	push   %eax
82001758:	ff 75 08             	push   0x8(%ebp)
8200175b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200175e:	ff d0                	call   *%eax
82001760:	83 c4 10             	add    $0x10,%esp
82001763:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001766:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8200176a:	75 0a                	jne    82001776 <_fseeko_r+0xf1>
8200176c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82001771:	e9 b9 03 00 00       	jmp    82001b2f <_fseeko_r+0x4aa>
82001776:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200177a:	98                   	cwtl   
8200177b:	83 e0 04             	and    $0x4,%eax
8200177e:	85 c0                	test   %eax,%eax
82001780:	74 15                	je     82001797 <_fseeko_r+0x112>
82001782:	8b 43 04             	mov    0x4(%ebx),%eax
82001785:	29 45 f0             	sub    %eax,-0x10(%ebp)
82001788:	8b 43 30             	mov    0x30(%ebx),%eax
8200178b:	85 c0                	test   %eax,%eax
8200178d:	74 24                	je     820017b3 <_fseeko_r+0x12e>
8200178f:	8b 43 3c             	mov    0x3c(%ebx),%eax
82001792:	29 45 f0             	sub    %eax,-0x10(%ebp)
82001795:	eb 1c                	jmp    820017b3 <_fseeko_r+0x12e>
82001797:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200179b:	98                   	cwtl   
8200179c:	83 e0 08             	and    $0x8,%eax
8200179f:	85 c0                	test   %eax,%eax
820017a1:	74 10                	je     820017b3 <_fseeko_r+0x12e>
820017a3:	8b 03                	mov    (%ebx),%eax
820017a5:	85 c0                	test   %eax,%eax
820017a7:	74 0a                	je     820017b3 <_fseeko_r+0x12e>
820017a9:	8b 03                	mov    (%ebx),%eax
820017ab:	8b 53 10             	mov    0x10(%ebx),%edx
820017ae:	29 d0                	sub    %edx,%eax
820017b0:	01 45 f0             	add    %eax,-0x10(%ebp)
820017b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
820017b6:	01 45 10             	add    %eax,0x10(%ebp)
820017b9:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
820017c0:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
820017c7:	eb 1c                	jmp    820017e5 <_fseeko_r+0x160>
820017c9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
820017d0:	eb 13                	jmp    820017e5 <_fseeko_r+0x160>
820017d2:	8b 45 08             	mov    0x8(%ebp),%eax
820017d5:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
820017db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820017e0:	e9 4a 03 00 00       	jmp    82001b2f <_fseeko_r+0x4aa>
820017e5:	8b 43 10             	mov    0x10(%ebx),%eax
820017e8:	85 c0                	test   %eax,%eax
820017ea:	75 0f                	jne    820017fb <_fseeko_r+0x176>
820017ec:	83 ec 08             	sub    $0x8,%esp
820017ef:	53                   	push   %ebx
820017f0:	ff 75 08             	push   0x8(%ebp)
820017f3:	e8 51 05 00 00       	call   82001d49 <__smakebuf_r>
820017f8:	83 c4 10             	add    $0x10,%esp
820017fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820017ff:	98                   	cwtl   
82001800:	25 1a 08 00 00       	and    $0x81a,%eax
82001805:	85 c0                	test   %eax,%eax
82001807:	0f 85 7d 02 00 00    	jne    82001a8a <_fseeko_r+0x405>
8200180d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001811:	98                   	cwtl   
82001812:	25 00 04 00 00       	and    $0x400,%eax
82001817:	85 c0                	test   %eax,%eax
82001819:	75 5f                	jne    8200187a <_fseeko_r+0x1f5>
8200181b:	81 7d e0 dc 30 00 82 	cmpl   $0x820030dc,-0x20(%ebp)
82001822:	75 34                	jne    82001858 <_fseeko_r+0x1d3>
82001824:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82001828:	66 85 c0             	test   %ax,%ax
8200182b:	78 2b                	js     82001858 <_fseeko_r+0x1d3>
8200182d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82001831:	98                   	cwtl   
82001832:	83 ec 04             	sub    $0x4,%esp
82001835:	8d 55 98             	lea    -0x68(%ebp),%edx
82001838:	52                   	push   %edx
82001839:	50                   	push   %eax
8200183a:	ff 75 08             	push   0x8(%ebp)
8200183d:	e8 14 03 00 00       	call   82001b56 <_fstat_r>
82001842:	83 c4 10             	add    $0x10,%esp
82001845:	85 c0                	test   %eax,%eax
82001847:	75 0f                	jne    82001858 <_fseeko_r+0x1d3>
82001849:	8b 45 9c             	mov    -0x64(%ebp),%eax
8200184c:	25 00 f0 00 00       	and    $0xf000,%eax
82001851:	3d 00 80 00 00       	cmp    $0x8000,%eax
82001856:	74 10                	je     82001868 <_fseeko_r+0x1e3>
82001858:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200185c:	80 cc 08             	or     $0x8,%ah
8200185f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001863:	e9 2f 02 00 00       	jmp    82001a97 <_fseeko_r+0x412>
82001868:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
8200186f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001873:	80 cc 04             	or     $0x4,%ah
82001876:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200187a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8200187e:	75 08                	jne    82001888 <_fseeko_r+0x203>
82001880:	8b 45 10             	mov    0x10(%ebp),%eax
82001883:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001886:	eb 2b                	jmp    820018b3 <_fseeko_r+0x22e>
82001888:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8200188c:	98                   	cwtl   
8200188d:	83 ec 04             	sub    $0x4,%esp
82001890:	8d 55 98             	lea    -0x68(%ebp),%edx
82001893:	52                   	push   %edx
82001894:	50                   	push   %eax
82001895:	ff 75 08             	push   0x8(%ebp)
82001898:	e8 b9 02 00 00       	call   82001b56 <_fstat_r>
8200189d:	83 c4 10             	add    $0x10,%esp
820018a0:	85 c0                	test   %eax,%eax
820018a2:	0f 85 e5 01 00 00    	jne    82001a8d <_fseeko_r+0x408>
820018a8:	8b 55 a8             	mov    -0x58(%ebp),%edx
820018ab:	8b 45 10             	mov    0x10(%ebp),%eax
820018ae:	01 d0                	add    %edx,%eax
820018b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
820018b3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820018b7:	75 49                	jne    82001902 <_fseeko_r+0x27d>
820018b9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820018bd:	98                   	cwtl   
820018be:	25 00 10 00 00       	and    $0x1000,%eax
820018c3:	85 c0                	test   %eax,%eax
820018c5:	74 08                	je     820018cf <_fseeko_r+0x24a>
820018c7:	8b 43 50             	mov    0x50(%ebx),%eax
820018ca:	89 45 f0             	mov    %eax,-0x10(%ebp)
820018cd:	eb 20                	jmp    820018ef <_fseeko_r+0x26a>
820018cf:	8b 43 1c             	mov    0x1c(%ebx),%eax
820018d2:	6a 01                	push   $0x1
820018d4:	6a 00                	push   $0x0
820018d6:	50                   	push   %eax
820018d7:	ff 75 08             	push   0x8(%ebp)
820018da:	8b 45 e0             	mov    -0x20(%ebp),%eax
820018dd:	ff d0                	call   *%eax
820018df:	83 c4 10             	add    $0x10,%esp
820018e2:	89 45 f0             	mov    %eax,-0x10(%ebp)
820018e5:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
820018e9:	0f 84 a1 01 00 00    	je     82001a90 <_fseeko_r+0x40b>
820018ef:	8b 43 04             	mov    0x4(%ebx),%eax
820018f2:	29 45 f0             	sub    %eax,-0x10(%ebp)
820018f5:	8b 43 30             	mov    0x30(%ebx),%eax
820018f8:	85 c0                	test   %eax,%eax
820018fa:	74 06                	je     82001902 <_fseeko_r+0x27d>
820018fc:	8b 43 3c             	mov    0x3c(%ebx),%eax
820018ff:	29 45 f0             	sub    %eax,-0x10(%ebp)
82001902:	8b 43 30             	mov    0x30(%ebx),%eax
82001905:	85 c0                	test   %eax,%eax
82001907:	74 22                	je     8200192b <_fseeko_r+0x2a6>
82001909:	8b 43 04             	mov    0x4(%ebx),%eax
8200190c:	01 45 f0             	add    %eax,-0x10(%ebp)
8200190f:	8b 43 38             	mov    0x38(%ebx),%eax
82001912:	8b 53 10             	mov    0x10(%ebx),%edx
82001915:	29 d0                	sub    %edx,%eax
82001917:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200191a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200191d:	2b 45 ec             	sub    -0x14(%ebp),%eax
82001920:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001923:	8b 43 3c             	mov    0x3c(%ebx),%eax
82001926:	01 45 ec             	add    %eax,-0x14(%ebp)
82001929:	eb 19                	jmp    82001944 <_fseeko_r+0x2bf>
8200192b:	8b 03                	mov    (%ebx),%eax
8200192d:	8b 53 10             	mov    0x10(%ebx),%edx
82001930:	29 d0                	sub    %edx,%eax
82001932:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001935:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001938:	2b 45 ec             	sub    -0x14(%ebp),%eax
8200193b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200193e:	8b 43 04             	mov    0x4(%ebx),%eax
82001941:	01 45 ec             	add    %eax,-0x14(%ebp)
82001944:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001947:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8200194a:	7c 7c                	jl     820019c8 <_fseeko_r+0x343>
8200194c:	8b 55 f0             	mov    -0x10(%ebp),%edx
8200194f:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001952:	01 c2                	add    %eax,%edx
82001954:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001957:	39 c2                	cmp    %eax,%edx
82001959:	76 6d                	jbe    820019c8 <_fseeko_r+0x343>
8200195b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200195e:	2b 45 f0             	sub    -0x10(%ebp),%eax
82001961:	89 c6                	mov    %eax,%esi
82001963:	8b 43 10             	mov    0x10(%ebx),%eax
82001966:	89 f2                	mov    %esi,%edx
82001968:	01 d0                	add    %edx,%eax
8200196a:	89 03                	mov    %eax,(%ebx)
8200196c:	89 f2                	mov    %esi,%edx
8200196e:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001971:	29 d0                	sub    %edx,%eax
82001973:	89 43 04             	mov    %eax,0x4(%ebx)
82001976:	8b 43 30             	mov    0x30(%ebx),%eax
82001979:	85 c0                	test   %eax,%eax
8200197b:	74 23                	je     820019a0 <_fseeko_r+0x31b>
8200197d:	8b 53 30             	mov    0x30(%ebx),%edx
82001980:	8d 43 40             	lea    0x40(%ebx),%eax
82001983:	39 c2                	cmp    %eax,%edx
82001985:	74 12                	je     82001999 <_fseeko_r+0x314>
82001987:	8b 43 30             	mov    0x30(%ebx),%eax
8200198a:	83 ec 08             	sub    $0x8,%esp
8200198d:	50                   	push   %eax
8200198e:	ff 75 08             	push   0x8(%ebp)
82001991:	e8 76 f7 ff ff       	call   8200110c <_free_r>
82001996:	83 c4 10             	add    $0x10,%esp
82001999:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
820019a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820019a4:	83 e0 df             	and    $0xffffffdf,%eax
820019a7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820019ab:	8d 43 5c             	lea    0x5c(%ebx),%eax
820019ae:	83 ec 04             	sub    $0x4,%esp
820019b1:	6a 08                	push   $0x8
820019b3:	6a 00                	push   $0x0
820019b5:	50                   	push   %eax
820019b6:	e8 45 10 00 00       	call   82002a00 <memset>
820019bb:	83 c4 10             	add    $0x10,%esp
820019be:	b8 00 00 00 00       	mov    $0x0,%eax
820019c3:	e9 67 01 00 00       	jmp    82001b2f <_fseeko_r+0x4aa>
820019c8:	8b 43 4c             	mov    0x4c(%ebx),%eax
820019cb:	f7 d8                	neg    %eax
820019cd:	23 45 f4             	and    -0xc(%ebp),%eax
820019d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
820019d3:	8b 43 1c             	mov    0x1c(%ebx),%eax
820019d6:	6a 00                	push   $0x0
820019d8:	ff 75 f0             	push   -0x10(%ebp)
820019db:	50                   	push   %eax
820019dc:	ff 75 08             	push   0x8(%ebp)
820019df:	8b 45 e0             	mov    -0x20(%ebp),%eax
820019e2:	ff d0                	call   *%eax
820019e4:	83 c4 10             	add    $0x10,%esp
820019e7:	83 f8 ff             	cmp    $0xffffffff,%eax
820019ea:	0f 84 a3 00 00 00    	je     82001a93 <_fseeko_r+0x40e>
820019f0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
820019f7:	8b 43 10             	mov    0x10(%ebx),%eax
820019fa:	89 03                	mov    %eax,(%ebx)
820019fc:	8b 43 30             	mov    0x30(%ebx),%eax
820019ff:	85 c0                	test   %eax,%eax
82001a01:	74 23                	je     82001a26 <_fseeko_r+0x3a1>
82001a03:	8b 53 30             	mov    0x30(%ebx),%edx
82001a06:	8d 43 40             	lea    0x40(%ebx),%eax
82001a09:	39 c2                	cmp    %eax,%edx
82001a0b:	74 12                	je     82001a1f <_fseeko_r+0x39a>
82001a0d:	8b 43 30             	mov    0x30(%ebx),%eax
82001a10:	83 ec 08             	sub    $0x8,%esp
82001a13:	50                   	push   %eax
82001a14:	ff 75 08             	push   0x8(%ebp)
82001a17:	e8 f0 f6 ff ff       	call   8200110c <_free_r>
82001a1c:	83 c4 10             	add    $0x10,%esp
82001a1f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82001a26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001a2a:	83 e0 df             	and    $0xffffffdf,%eax
82001a2d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001a31:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001a34:	2b 45 f0             	sub    -0x10(%ebp),%eax
82001a37:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001a3a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
82001a3e:	74 2d                	je     82001a6d <_fseeko_r+0x3e8>
82001a40:	83 ec 08             	sub    $0x8,%esp
82001a43:	53                   	push   %ebx
82001a44:	ff 75 08             	push   0x8(%ebp)
82001a47:	e8 a6 13 00 00       	call   82002df2 <__srefill_r>
82001a4c:	83 c4 10             	add    $0x10,%esp
82001a4f:	85 c0                	test   %eax,%eax
82001a51:	75 43                	jne    82001a96 <_fseeko_r+0x411>
82001a53:	8b 43 04             	mov    0x4(%ebx),%eax
82001a56:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82001a59:	77 3b                	ja     82001a96 <_fseeko_r+0x411>
82001a5b:	8b 13                	mov    (%ebx),%edx
82001a5d:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001a60:	01 d0                	add    %edx,%eax
82001a62:	89 03                	mov    %eax,(%ebx)
82001a64:	8b 43 04             	mov    0x4(%ebx),%eax
82001a67:	2b 45 ec             	sub    -0x14(%ebp),%eax
82001a6a:	89 43 04             	mov    %eax,0x4(%ebx)
82001a6d:	8d 43 5c             	lea    0x5c(%ebx),%eax
82001a70:	83 ec 04             	sub    $0x4,%esp
82001a73:	6a 08                	push   $0x8
82001a75:	6a 00                	push   $0x0
82001a77:	50                   	push   %eax
82001a78:	e8 83 0f 00 00       	call   82002a00 <memset>
82001a7d:	83 c4 10             	add    $0x10,%esp
82001a80:	b8 00 00 00 00       	mov    $0x0,%eax
82001a85:	e9 a5 00 00 00       	jmp    82001b2f <_fseeko_r+0x4aa>
82001a8a:	90                   	nop
82001a8b:	eb 0a                	jmp    82001a97 <_fseeko_r+0x412>
82001a8d:	90                   	nop
82001a8e:	eb 07                	jmp    82001a97 <_fseeko_r+0x412>
82001a90:	90                   	nop
82001a91:	eb 04                	jmp    82001a97 <_fseeko_r+0x412>
82001a93:	90                   	nop
82001a94:	eb 01                	jmp    82001a97 <_fseeko_r+0x412>
82001a96:	90                   	nop
82001a97:	83 ec 08             	sub    $0x8,%esp
82001a9a:	53                   	push   %ebx
82001a9b:	ff 75 08             	push   0x8(%ebp)
82001a9e:	e8 48 ee ff ff       	call   820008eb <_fflush_r>
82001aa3:	83 c4 10             	add    $0x10,%esp
82001aa6:	85 c0                	test   %eax,%eax
82001aa8:	75 1a                	jne    82001ac4 <_fseeko_r+0x43f>
82001aaa:	8b 43 1c             	mov    0x1c(%ebx),%eax
82001aad:	ff 75 14             	push   0x14(%ebp)
82001ab0:	ff 75 10             	push   0x10(%ebp)
82001ab3:	50                   	push   %eax
82001ab4:	ff 75 08             	push   0x8(%ebp)
82001ab7:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001aba:	ff d0                	call   *%eax
82001abc:	83 c4 10             	add    $0x10,%esp
82001abf:	83 f8 ff             	cmp    $0xffffffff,%eax
82001ac2:	75 07                	jne    82001acb <_fseeko_r+0x446>
82001ac4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82001ac9:	eb 64                	jmp    82001b2f <_fseeko_r+0x4aa>
82001acb:	8b 43 30             	mov    0x30(%ebx),%eax
82001ace:	85 c0                	test   %eax,%eax
82001ad0:	74 23                	je     82001af5 <_fseeko_r+0x470>
82001ad2:	8b 53 30             	mov    0x30(%ebx),%edx
82001ad5:	8d 43 40             	lea    0x40(%ebx),%eax
82001ad8:	39 c2                	cmp    %eax,%edx
82001ada:	74 12                	je     82001aee <_fseeko_r+0x469>
82001adc:	8b 43 30             	mov    0x30(%ebx),%eax
82001adf:	83 ec 08             	sub    $0x8,%esp
82001ae2:	50                   	push   %eax
82001ae3:	ff 75 08             	push   0x8(%ebp)
82001ae6:	e8 21 f6 ff ff       	call   8200110c <_free_r>
82001aeb:	83 c4 10             	add    $0x10,%esp
82001aee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82001af5:	8b 43 10             	mov    0x10(%ebx),%eax
82001af8:	89 03                	mov    %eax,(%ebx)
82001afa:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82001b01:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001b05:	83 e0 df             	and    $0xffffffdf,%eax
82001b08:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001b0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001b10:	80 e4 f7             	and    $0xf7,%ah
82001b13:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001b17:	8d 43 5c             	lea    0x5c(%ebx),%eax
82001b1a:	83 ec 04             	sub    $0x4,%esp
82001b1d:	6a 08                	push   $0x8
82001b1f:	6a 00                	push   $0x0
82001b21:	50                   	push   %eax
82001b22:	e8 d9 0e 00 00       	call   82002a00 <memset>
82001b27:	83 c4 10             	add    $0x10,%esp
82001b2a:	b8 00 00 00 00       	mov    $0x0,%eax
82001b2f:	8d 65 f8             	lea    -0x8(%ebp),%esp
82001b32:	5b                   	pop    %ebx
82001b33:	5e                   	pop    %esi
82001b34:	5d                   	pop    %ebp
82001b35:	c3                   	ret    

82001b36 <fseeko>:
82001b36:	55                   	push   %ebp
82001b37:	89 e5                	mov    %esp,%ebp
82001b39:	83 ec 08             	sub    $0x8,%esp
82001b3c:	8b 55 08             	mov    0x8(%ebp),%edx
82001b3f:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82001b44:	ff 75 10             	push   0x10(%ebp)
82001b47:	ff 75 0c             	push   0xc(%ebp)
82001b4a:	52                   	push   %edx
82001b4b:	50                   	push   %eax
82001b4c:	e8 34 fb ff ff       	call   82001685 <_fseeko_r>
82001b51:	83 c4 10             	add    $0x10,%esp
82001b54:	c9                   	leave  
82001b55:	c3                   	ret    

82001b56 <_fstat_r>:
82001b56:	55                   	push   %ebp
82001b57:	89 e5                	mov    %esp,%ebp
82001b59:	83 ec 18             	sub    $0x18,%esp
82001b5c:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
82001b63:	00 00 00 
82001b66:	83 ec 08             	sub    $0x8,%esp
82001b69:	ff 75 10             	push   0x10(%ebp)
82001b6c:	ff 75 0c             	push   0xc(%ebp)
82001b6f:	e8 e6 e6 ff ff       	call   8200025a <fstat>
82001b74:	83 c4 10             	add    $0x10,%esp
82001b77:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001b7a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82001b7e:	75 14                	jne    82001b94 <_fstat_r+0x3e>
82001b80:	a1 8c 64 00 82       	mov    0x8200648c,%eax
82001b85:	85 c0                	test   %eax,%eax
82001b87:	74 0b                	je     82001b94 <_fstat_r+0x3e>
82001b89:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82001b8f:	8b 45 08             	mov    0x8(%ebp),%eax
82001b92:	89 10                	mov    %edx,(%eax)
82001b94:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001b97:	c9                   	leave  
82001b98:	c3                   	ret    

82001b99 <_fwalk>:
82001b99:	55                   	push   %ebp
82001b9a:	89 e5                	mov    %esp,%ebp
82001b9c:	57                   	push   %edi
82001b9d:	56                   	push   %esi
82001b9e:	53                   	push   %ebx
82001b9f:	83 ec 1c             	sub    $0x1c,%esp
82001ba2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82001ba9:	8b 45 08             	mov    0x8(%ebp),%eax
82001bac:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
82001bb2:	eb 3e                	jmp    82001bf2 <_fwalk+0x59>
82001bb4:	8b 5e 08             	mov    0x8(%esi),%ebx
82001bb7:	8b 7e 04             	mov    0x4(%esi),%edi
82001bba:	eb 2d                	jmp    82001be9 <_fwalk+0x50>
82001bbc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001bc0:	66 85 c0             	test   %ax,%ax
82001bc3:	74 21                	je     82001be6 <_fwalk+0x4d>
82001bc5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001bc9:	66 83 f8 01          	cmp    $0x1,%ax
82001bcd:	74 17                	je     82001be6 <_fwalk+0x4d>
82001bcf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82001bd3:	66 83 f8 ff          	cmp    $0xffff,%ax
82001bd7:	74 0d                	je     82001be6 <_fwalk+0x4d>
82001bd9:	83 ec 0c             	sub    $0xc,%esp
82001bdc:	53                   	push   %ebx
82001bdd:	ff 55 0c             	call   *0xc(%ebp)
82001be0:	83 c4 10             	add    $0x10,%esp
82001be3:	09 45 e4             	or     %eax,-0x1c(%ebp)
82001be6:	83 c3 68             	add    $0x68,%ebx
82001be9:	83 ef 01             	sub    $0x1,%edi
82001bec:	85 ff                	test   %edi,%edi
82001bee:	79 cc                	jns    82001bbc <_fwalk+0x23>
82001bf0:	8b 36                	mov    (%esi),%esi
82001bf2:	85 f6                	test   %esi,%esi
82001bf4:	75 be                	jne    82001bb4 <_fwalk+0x1b>
82001bf6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82001bf9:	8d 65 f4             	lea    -0xc(%ebp),%esp
82001bfc:	5b                   	pop    %ebx
82001bfd:	5e                   	pop    %esi
82001bfe:	5f                   	pop    %edi
82001bff:	5d                   	pop    %ebp
82001c00:	c3                   	ret    

82001c01 <_fwalk_reent>:
82001c01:	55                   	push   %ebp
82001c02:	89 e5                	mov    %esp,%ebp
82001c04:	57                   	push   %edi
82001c05:	56                   	push   %esi
82001c06:	53                   	push   %ebx
82001c07:	83 ec 1c             	sub    $0x1c,%esp
82001c0a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82001c11:	8b 45 08             	mov    0x8(%ebp),%eax
82001c14:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
82001c1a:	eb 41                	jmp    82001c5d <_fwalk_reent+0x5c>
82001c1c:	8b 5e 08             	mov    0x8(%esi),%ebx
82001c1f:	8b 7e 04             	mov    0x4(%esi),%edi
82001c22:	eb 30                	jmp    82001c54 <_fwalk_reent+0x53>
82001c24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001c28:	66 85 c0             	test   %ax,%ax
82001c2b:	74 24                	je     82001c51 <_fwalk_reent+0x50>
82001c2d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001c31:	66 83 f8 01          	cmp    $0x1,%ax
82001c35:	74 1a                	je     82001c51 <_fwalk_reent+0x50>
82001c37:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82001c3b:	66 83 f8 ff          	cmp    $0xffff,%ax
82001c3f:	74 10                	je     82001c51 <_fwalk_reent+0x50>
82001c41:	83 ec 08             	sub    $0x8,%esp
82001c44:	53                   	push   %ebx
82001c45:	ff 75 08             	push   0x8(%ebp)
82001c48:	ff 55 0c             	call   *0xc(%ebp)
82001c4b:	83 c4 10             	add    $0x10,%esp
82001c4e:	09 45 e4             	or     %eax,-0x1c(%ebp)
82001c51:	83 c3 68             	add    $0x68,%ebx
82001c54:	83 ef 01             	sub    $0x1,%edi
82001c57:	85 ff                	test   %edi,%edi
82001c59:	79 c9                	jns    82001c24 <_fwalk_reent+0x23>
82001c5b:	8b 36                	mov    (%esi),%esi
82001c5d:	85 f6                	test   %esi,%esi
82001c5f:	75 bb                	jne    82001c1c <_fwalk_reent+0x1b>
82001c61:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82001c64:	8d 65 f4             	lea    -0xc(%ebp),%esp
82001c67:	5b                   	pop    %ebx
82001c68:	5e                   	pop    %esi
82001c69:	5f                   	pop    %edi
82001c6a:	5d                   	pop    %ebp
82001c6b:	c3                   	ret    

82001c6c <_fwrite_r>:
82001c6c:	55                   	push   %ebp
82001c6d:	89 e5                	mov    %esp,%ebp
82001c6f:	83 ec 28             	sub    $0x28,%esp
82001c72:	8b 45 0c             	mov    0xc(%ebp),%eax
82001c75:	89 45 dc             	mov    %eax,-0x24(%ebp)
82001c78:	8b 45 14             	mov    0x14(%ebp),%eax
82001c7b:	0f af 45 10          	imul   0x10(%ebp),%eax
82001c7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001c82:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001c85:	89 45 e0             	mov    %eax,-0x20(%ebp)
82001c88:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001c8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001c8e:	8d 45 dc             	lea    -0x24(%ebp),%eax
82001c91:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82001c94:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
82001c9b:	8b 45 08             	mov    0x8(%ebp),%eax
82001c9e:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001ca1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82001ca5:	74 18                	je     82001cbf <_fwrite_r+0x53>
82001ca7:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001caa:	8b 40 38             	mov    0x38(%eax),%eax
82001cad:	85 c0                	test   %eax,%eax
82001caf:	75 0e                	jne    82001cbf <_fwrite_r+0x53>
82001cb1:	83 ec 0c             	sub    $0xc,%esp
82001cb4:	ff 75 f0             	push   -0x10(%ebp)
82001cb7:	e8 b5 ef ff ff       	call   82000c71 <__sinit>
82001cbc:	83 c4 10             	add    $0x10,%esp
82001cbf:	8b 45 18             	mov    0x18(%ebp),%eax
82001cc2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82001cc6:	98                   	cwtl   
82001cc7:	25 00 20 00 00       	and    $0x2000,%eax
82001ccc:	85 c0                	test   %eax,%eax
82001cce:	75 24                	jne    82001cf4 <_fwrite_r+0x88>
82001cd0:	8b 45 18             	mov    0x18(%ebp),%eax
82001cd3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82001cd7:	80 cc 20             	or     $0x20,%ah
82001cda:	89 c2                	mov    %eax,%edx
82001cdc:	8b 45 18             	mov    0x18(%ebp),%eax
82001cdf:	66 89 50 0c          	mov    %dx,0xc(%eax)
82001ce3:	8b 45 18             	mov    0x18(%ebp),%eax
82001ce6:	8b 40 64             	mov    0x64(%eax),%eax
82001ce9:	80 e4 df             	and    $0xdf,%ah
82001cec:	89 c2                	mov    %eax,%edx
82001cee:	8b 45 18             	mov    0x18(%ebp),%eax
82001cf1:	89 50 64             	mov    %edx,0x64(%eax)
82001cf4:	83 ec 04             	sub    $0x4,%esp
82001cf7:	8d 45 e4             	lea    -0x1c(%ebp),%eax
82001cfa:	50                   	push   %eax
82001cfb:	ff 75 18             	push   0x18(%ebp)
82001cfe:	ff 75 08             	push   0x8(%ebp)
82001d01:	e8 18 17 00 00       	call   8200341e <__sfvwrite_r>
82001d06:	83 c4 10             	add    $0x10,%esp
82001d09:	85 c0                	test   %eax,%eax
82001d0b:	75 05                	jne    82001d12 <_fwrite_r+0xa6>
82001d0d:	8b 45 14             	mov    0x14(%ebp),%eax
82001d10:	eb 10                	jmp    82001d22 <_fwrite_r+0xb6>
82001d12:	8b 55 ec             	mov    -0x14(%ebp),%edx
82001d15:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001d18:	29 d0                	sub    %edx,%eax
82001d1a:	ba 00 00 00 00       	mov    $0x0,%edx
82001d1f:	f7 75 10             	divl   0x10(%ebp)
82001d22:	c9                   	leave  
82001d23:	c3                   	ret    

82001d24 <fwrite>:
82001d24:	55                   	push   %ebp
82001d25:	89 e5                	mov    %esp,%ebp
82001d27:	83 ec 08             	sub    $0x8,%esp
82001d2a:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82001d2f:	83 ec 0c             	sub    $0xc,%esp
82001d32:	ff 75 14             	push   0x14(%ebp)
82001d35:	ff 75 10             	push   0x10(%ebp)
82001d38:	ff 75 0c             	push   0xc(%ebp)
82001d3b:	ff 75 08             	push   0x8(%ebp)
82001d3e:	50                   	push   %eax
82001d3f:	e8 28 ff ff ff       	call   82001c6c <_fwrite_r>
82001d44:	83 c4 20             	add    $0x20,%esp
82001d47:	c9                   	leave  
82001d48:	c3                   	ret    

82001d49 <__smakebuf_r>:
82001d49:	55                   	push   %ebp
82001d4a:	89 e5                	mov    %esp,%ebp
82001d4c:	56                   	push   %esi
82001d4d:	53                   	push   %ebx
82001d4e:	83 ec 10             	sub    $0x10,%esp
82001d51:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82001d54:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001d58:	98                   	cwtl   
82001d59:	83 e0 02             	and    $0x2,%eax
82001d5c:	85 c0                	test   %eax,%eax
82001d5e:	74 16                	je     82001d76 <__smakebuf_r+0x2d>
82001d60:	8d 43 43             	lea    0x43(%ebx),%eax
82001d63:	89 03                	mov    %eax,(%ebx)
82001d65:	8b 03                	mov    (%ebx),%eax
82001d67:	89 43 10             	mov    %eax,0x10(%ebx)
82001d6a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
82001d71:	e9 b9 00 00 00       	jmp    82001e2f <__smakebuf_r+0xe6>
82001d76:	8d 45 ec             	lea    -0x14(%ebp),%eax
82001d79:	50                   	push   %eax
82001d7a:	8d 45 f0             	lea    -0x10(%ebp),%eax
82001d7d:	50                   	push   %eax
82001d7e:	53                   	push   %ebx
82001d7f:	ff 75 08             	push   0x8(%ebp)
82001d82:	e8 af 00 00 00       	call   82001e36 <__swhatbuf_r>
82001d87:	83 c4 10             	add    $0x10,%esp
82001d8a:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001d8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001d90:	83 ec 08             	sub    $0x8,%esp
82001d93:	50                   	push   %eax
82001d94:	ff 75 08             	push   0x8(%ebp)
82001d97:	e8 f9 03 00 00       	call   82002195 <_malloc_r>
82001d9c:	83 c4 10             	add    $0x10,%esp
82001d9f:	89 c6                	mov    %eax,%esi
82001da1:	85 f6                	test   %esi,%esi
82001da3:	75 2f                	jne    82001dd4 <__smakebuf_r+0x8b>
82001da5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001da9:	98                   	cwtl   
82001daa:	25 00 02 00 00       	and    $0x200,%eax
82001daf:	85 c0                	test   %eax,%eax
82001db1:	75 7c                	jne    82001e2f <__smakebuf_r+0xe6>
82001db3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001db7:	83 e0 fc             	and    $0xfffffffc,%eax
82001dba:	83 c8 02             	or     $0x2,%eax
82001dbd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001dc1:	8d 43 43             	lea    0x43(%ebx),%eax
82001dc4:	89 03                	mov    %eax,(%ebx)
82001dc6:	8b 03                	mov    (%ebx),%eax
82001dc8:	89 43 10             	mov    %eax,0x10(%ebx)
82001dcb:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
82001dd2:	eb 5b                	jmp    82001e2f <__smakebuf_r+0xe6>
82001dd4:	8b 45 08             	mov    0x8(%ebp),%eax
82001dd7:	c7 40 3c 36 0c 00 82 	movl   $0x82000c36,0x3c(%eax)
82001dde:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001de2:	0c 80                	or     $0x80,%al
82001de4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001de8:	89 33                	mov    %esi,(%ebx)
82001dea:	8b 03                	mov    (%ebx),%eax
82001dec:	89 43 10             	mov    %eax,0x10(%ebx)
82001def:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001df2:	89 43 14             	mov    %eax,0x14(%ebx)
82001df5:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001df8:	85 c0                	test   %eax,%eax
82001dfa:	74 26                	je     82001e22 <__smakebuf_r+0xd9>
82001dfc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82001e00:	98                   	cwtl   
82001e01:	83 ec 08             	sub    $0x8,%esp
82001e04:	50                   	push   %eax
82001e05:	ff 75 08             	push   0x8(%ebp)
82001e08:	e8 af 1a 00 00       	call   820038bc <_isatty_r>
82001e0d:	83 c4 10             	add    $0x10,%esp
82001e10:	85 c0                	test   %eax,%eax
82001e12:	74 0e                	je     82001e22 <__smakebuf_r+0xd9>
82001e14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82001e18:	83 e0 fc             	and    $0xfffffffc,%eax
82001e1b:	83 c8 01             	or     $0x1,%eax
82001e1e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001e22:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
82001e26:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001e29:	09 d0                	or     %edx,%eax
82001e2b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82001e2f:	8d 65 f8             	lea    -0x8(%ebp),%esp
82001e32:	5b                   	pop    %ebx
82001e33:	5e                   	pop    %esi
82001e34:	5d                   	pop    %ebp
82001e35:	c3                   	ret    

82001e36 <__swhatbuf_r>:
82001e36:	55                   	push   %ebp
82001e37:	89 e5                	mov    %esp,%ebp
82001e39:	83 ec 58             	sub    $0x58,%esp
82001e3c:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
82001e43:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e46:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
82001e4a:	66 85 c0             	test   %ax,%ax
82001e4d:	78 1f                	js     82001e6e <__swhatbuf_r+0x38>
82001e4f:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e52:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
82001e56:	98                   	cwtl   
82001e57:	83 ec 04             	sub    $0x4,%esp
82001e5a:	8d 55 ac             	lea    -0x54(%ebp),%edx
82001e5d:	52                   	push   %edx
82001e5e:	50                   	push   %eax
82001e5f:	ff 75 08             	push   0x8(%ebp)
82001e62:	e8 ef fc ff ff       	call   82001b56 <_fstat_r>
82001e67:	83 c4 10             	add    $0x10,%esp
82001e6a:	85 c0                	test   %eax,%eax
82001e6c:	79 35                	jns    82001ea3 <__swhatbuf_r+0x6d>
82001e6e:	8b 45 14             	mov    0x14(%ebp),%eax
82001e71:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82001e77:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e7a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82001e7e:	98                   	cwtl   
82001e7f:	25 80 00 00 00       	and    $0x80,%eax
82001e84:	85 c0                	test   %eax,%eax
82001e86:	74 0b                	je     82001e93 <__swhatbuf_r+0x5d>
82001e88:	8b 45 10             	mov    0x10(%ebp),%eax
82001e8b:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
82001e91:	eb 09                	jmp    82001e9c <__swhatbuf_r+0x66>
82001e93:	8b 45 10             	mov    0x10(%ebp),%eax
82001e96:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
82001e9c:	b8 00 00 00 00       	mov    $0x0,%eax
82001ea1:	eb 24                	jmp    82001ec7 <__swhatbuf_r+0x91>
82001ea3:	8b 45 b0             	mov    -0x50(%ebp),%eax
82001ea6:	25 00 f0 00 00       	and    $0xf000,%eax
82001eab:	3d 00 20 00 00       	cmp    $0x2000,%eax
82001eb0:	0f 94 c0             	sete   %al
82001eb3:	0f b6 d0             	movzbl %al,%edx
82001eb6:	8b 45 14             	mov    0x14(%ebp),%eax
82001eb9:	89 10                	mov    %edx,(%eax)
82001ebb:	8b 45 10             	mov    0x10(%ebp),%eax
82001ebe:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
82001ec4:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001ec7:	c9                   	leave  
82001ec8:	c3                   	ret    

82001ec9 <malloc>:
82001ec9:	55                   	push   %ebp
82001eca:	89 e5                	mov    %esp,%ebp
82001ecc:	83 ec 08             	sub    $0x8,%esp
82001ecf:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82001ed4:	83 ec 08             	sub    $0x8,%esp
82001ed7:	ff 75 08             	push   0x8(%ebp)
82001eda:	50                   	push   %eax
82001edb:	e8 b5 02 00 00       	call   82002195 <_malloc_r>
82001ee0:	83 c4 10             	add    $0x10,%esp
82001ee3:	c9                   	leave  
82001ee4:	c3                   	ret    

82001ee5 <free>:
82001ee5:	55                   	push   %ebp
82001ee6:	89 e5                	mov    %esp,%ebp
82001ee8:	83 ec 08             	sub    $0x8,%esp
82001eeb:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82001ef0:	83 ec 08             	sub    $0x8,%esp
82001ef3:	ff 75 08             	push   0x8(%ebp)
82001ef6:	50                   	push   %eax
82001ef7:	e8 10 f2 ff ff       	call   8200110c <_free_r>
82001efc:	83 c4 10             	add    $0x10,%esp
82001eff:	90                   	nop
82001f00:	c9                   	leave  
82001f01:	c3                   	ret    

82001f02 <malloc_extend_top>:
82001f02:	55                   	push   %ebp
82001f03:	89 e5                	mov    %esp,%ebp
82001f05:	83 ec 38             	sub    $0x38,%esp
82001f08:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82001f0f:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001f14:	8b 40 08             	mov    0x8(%eax),%eax
82001f17:	89 45 e0             	mov    %eax,-0x20(%ebp)
82001f1a:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001f1d:	8b 40 04             	mov    0x4(%eax),%eax
82001f20:	83 e0 fc             	and    $0xfffffffc,%eax
82001f23:	89 45 dc             	mov    %eax,-0x24(%ebp)
82001f26:	8b 55 e0             	mov    -0x20(%ebp),%edx
82001f29:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001f2c:	01 d0                	add    %edx,%eax
82001f2e:	89 45 d8             	mov    %eax,-0x28(%ebp)
82001f31:	8b 15 40 64 00 82    	mov    0x82006440,%edx
82001f37:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f3a:	01 d0                	add    %edx,%eax
82001f3c:	83 c0 10             	add    $0x10,%eax
82001f3f:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001f42:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
82001f49:	a1 8c 62 00 82       	mov    0x8200628c,%eax
82001f4e:	83 f8 ff             	cmp    $0xffffffff,%eax
82001f51:	74 15                	je     82001f68 <malloc_extend_top+0x66>
82001f53:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82001f56:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001f59:	01 d0                	add    %edx,%eax
82001f5b:	8d 50 ff             	lea    -0x1(%eax),%edx
82001f5e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001f61:	f7 d8                	neg    %eax
82001f63:	21 d0                	and    %edx,%eax
82001f65:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001f68:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001f6b:	83 ec 08             	sub    $0x8,%esp
82001f6e:	50                   	push   %eax
82001f6f:	ff 75 08             	push   0x8(%ebp)
82001f72:	e8 7c 10 00 00       	call   82002ff3 <_sbrk_r>
82001f77:	83 c4 10             	add    $0x10,%esp
82001f7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001f7d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82001f81:	0f 84 0b 02 00 00    	je     82002192 <malloc_extend_top+0x290>
82001f87:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001f8a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82001f8d:	73 0e                	jae    82001f9d <malloc_extend_top+0x9b>
82001f8f:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001f94:	39 45 e0             	cmp    %eax,-0x20(%ebp)
82001f97:	0f 85 f5 01 00 00    	jne    82002192 <malloc_extend_top+0x290>
82001f9d:	a1 60 64 00 82       	mov    0x82006460,%eax
82001fa2:	89 c2                	mov    %eax,%edx
82001fa4:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001fa7:	01 d0                	add    %edx,%eax
82001fa9:	a3 60 64 00 82       	mov    %eax,0x82006460
82001fae:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001fb1:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82001fb4:	75 30                	jne    82001fe6 <malloc_extend_top+0xe4>
82001fb6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001fb9:	8d 50 ff             	lea    -0x1(%eax),%edx
82001fbc:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001fbf:	21 d0                	and    %edx,%eax
82001fc1:	85 c0                	test   %eax,%eax
82001fc3:	75 21                	jne    82001fe6 <malloc_extend_top+0xe4>
82001fc5:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001fc8:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001fcb:	01 d0                	add    %edx,%eax
82001fcd:	89 45 d0             	mov    %eax,-0x30(%ebp)
82001fd0:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82001fd5:	8b 40 08             	mov    0x8(%eax),%eax
82001fd8:	8b 55 d0             	mov    -0x30(%ebp),%edx
82001fdb:	83 ca 01             	or     $0x1,%edx
82001fde:	89 50 04             	mov    %edx,0x4(%eax)
82001fe1:	e9 76 01 00 00       	jmp    8200215c <malloc_extend_top+0x25a>
82001fe6:	a1 8c 62 00 82       	mov    0x8200628c,%eax
82001feb:	83 f8 ff             	cmp    $0xffffffff,%eax
82001fee:	75 0a                	jne    82001ffa <malloc_extend_top+0xf8>
82001ff0:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001ff3:	a3 8c 62 00 82       	mov    %eax,0x8200628c
82001ff8:	eb 13                	jmp    8200200d <malloc_extend_top+0x10b>
82001ffa:	8b 15 60 64 00 82    	mov    0x82006460,%edx
82002000:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002003:	2b 45 d8             	sub    -0x28(%ebp),%eax
82002006:	01 d0                	add    %edx,%eax
82002008:	a3 60 64 00 82       	mov    %eax,0x82006460
8200200d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002010:	83 c0 08             	add    $0x8,%eax
82002013:	83 e0 07             	and    $0x7,%eax
82002016:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002019:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8200201d:	74 13                	je     82002032 <malloc_extend_top+0x130>
8200201f:	b8 08 00 00 00       	mov    $0x8,%eax
82002024:	2b 45 cc             	sub    -0x34(%ebp),%eax
82002027:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200202a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200202d:	01 45 f4             	add    %eax,-0xc(%ebp)
82002030:	eb 07                	jmp    82002039 <malloc_extend_top+0x137>
82002032:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82002039:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200203c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200203f:	01 d0                	add    %edx,%eax
82002041:	89 c2                	mov    %eax,%edx
82002043:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82002046:	83 e8 01             	sub    $0x1,%eax
82002049:	21 c2                	and    %eax,%edx
8200204b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200204e:	29 d0                	sub    %edx,%eax
82002050:	01 45 f0             	add    %eax,-0x10(%ebp)
82002053:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82002056:	83 e8 01             	sub    $0x1,%eax
82002059:	21 45 f0             	and    %eax,-0x10(%ebp)
8200205c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200205f:	83 ec 08             	sub    $0x8,%esp
82002062:	50                   	push   %eax
82002063:	ff 75 08             	push   0x8(%ebp)
82002066:	e8 88 0f 00 00       	call   82002ff3 <_sbrk_r>
8200206b:	83 c4 10             	add    $0x10,%esp
8200206e:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002071:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
82002075:	75 28                	jne    8200209f <malloc_extend_top+0x19d>
82002077:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8200207e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
82002085:	8b 55 f4             	mov    -0xc(%ebp),%edx
82002088:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200208b:	01 d0                	add    %edx,%eax
8200208d:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002090:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
82002094:	74 09                	je     8200209f <malloc_extend_top+0x19d>
82002096:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002099:	83 e8 08             	sub    $0x8,%eax
8200209c:	01 45 ec             	add    %eax,-0x14(%ebp)
8200209f:	a1 60 64 00 82       	mov    0x82006460,%eax
820020a4:	89 c2                	mov    %eax,%edx
820020a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
820020a9:	01 d0                	add    %edx,%eax
820020ab:	a3 60 64 00 82       	mov    %eax,0x82006460
820020b0:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
820020b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
820020b8:	89 42 08             	mov    %eax,0x8(%edx)
820020bb:	8b 45 ec             	mov    -0x14(%ebp),%eax
820020be:	2b 45 f4             	sub    -0xc(%ebp),%eax
820020c1:	89 c2                	mov    %eax,%edx
820020c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
820020c6:	01 d0                	add    %edx,%eax
820020c8:	89 45 d0             	mov    %eax,-0x30(%ebp)
820020cb:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820020d0:	8b 40 08             	mov    0x8(%eax),%eax
820020d3:	8b 55 d0             	mov    -0x30(%ebp),%edx
820020d6:	83 ca 01             	or     $0x1,%edx
820020d9:	89 50 04             	mov    %edx,0x4(%eax)
820020dc:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820020e1:	39 45 e0             	cmp    %eax,-0x20(%ebp)
820020e4:	74 76                	je     8200215c <malloc_extend_top+0x25a>
820020e6:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
820020ea:	77 14                	ja     82002100 <malloc_extend_top+0x1fe>
820020ec:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820020f1:	8b 40 08             	mov    0x8(%eax),%eax
820020f4:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
820020fb:	e9 93 00 00 00       	jmp    82002193 <malloc_extend_top+0x291>
82002100:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002103:	83 e8 0c             	sub    $0xc,%eax
82002106:	83 e0 f8             	and    $0xfffffff8,%eax
82002109:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200210c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200210f:	8b 40 04             	mov    0x4(%eax),%eax
82002112:	83 e0 01             	and    $0x1,%eax
82002115:	0b 45 dc             	or     -0x24(%ebp),%eax
82002118:	89 c2                	mov    %eax,%edx
8200211a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200211d:	89 50 04             	mov    %edx,0x4(%eax)
82002120:	8b 55 e0             	mov    -0x20(%ebp),%edx
82002123:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002126:	01 d0                	add    %edx,%eax
82002128:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8200212f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002132:	8d 50 04             	lea    0x4(%eax),%edx
82002135:	8b 45 e0             	mov    -0x20(%ebp),%eax
82002138:	01 d0                	add    %edx,%eax
8200213a:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
82002141:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
82002145:	76 15                	jbe    8200215c <malloc_extend_top+0x25a>
82002147:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200214a:	83 c0 08             	add    $0x8,%eax
8200214d:	83 ec 08             	sub    $0x8,%esp
82002150:	50                   	push   %eax
82002151:	ff 75 08             	push   0x8(%ebp)
82002154:	e8 b3 ef ff ff       	call   8200110c <_free_r>
82002159:	83 c4 10             	add    $0x10,%esp
8200215c:	a1 60 64 00 82       	mov    0x82006460,%eax
82002161:	89 c2                	mov    %eax,%edx
82002163:	a1 44 64 00 82       	mov    0x82006444,%eax
82002168:	39 c2                	cmp    %eax,%edx
8200216a:	76 0a                	jbe    82002176 <malloc_extend_top+0x274>
8200216c:	a1 60 64 00 82       	mov    0x82006460,%eax
82002171:	a3 44 64 00 82       	mov    %eax,0x82006444
82002176:	a1 60 64 00 82       	mov    0x82006460,%eax
8200217b:	89 c2                	mov    %eax,%edx
8200217d:	a1 48 64 00 82       	mov    0x82006448,%eax
82002182:	39 c2                	cmp    %eax,%edx
82002184:	76 0d                	jbe    82002193 <malloc_extend_top+0x291>
82002186:	a1 60 64 00 82       	mov    0x82006460,%eax
8200218b:	a3 48 64 00 82       	mov    %eax,0x82006448
82002190:	eb 01                	jmp    82002193 <malloc_extend_top+0x291>
82002192:	90                   	nop
82002193:	c9                   	leave  
82002194:	c3                   	ret    

82002195 <_malloc_r>:
82002195:	55                   	push   %ebp
82002196:	89 e5                	mov    %esp,%ebp
82002198:	53                   	push   %ebx
82002199:	83 ec 44             	sub    $0x44,%esp
8200219c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200219f:	83 c0 0b             	add    $0xb,%eax
820021a2:	83 f8 16             	cmp    $0x16,%eax
820021a5:	76 0b                	jbe    820021b2 <_malloc_r+0x1d>
820021a7:	8b 45 0c             	mov    0xc(%ebp),%eax
820021aa:	83 c0 0b             	add    $0xb,%eax
820021ad:	83 e0 f8             	and    $0xfffffff8,%eax
820021b0:	eb 05                	jmp    820021b7 <_malloc_r+0x22>
820021b2:	b8 10 00 00 00       	mov    $0x10,%eax
820021b7:	89 45 d0             	mov    %eax,-0x30(%ebp)
820021ba:	8b 45 d0             	mov    -0x30(%ebp),%eax
820021bd:	85 c0                	test   %eax,%eax
820021bf:	78 08                	js     820021c9 <_malloc_r+0x34>
820021c1:	8b 45 d0             	mov    -0x30(%ebp),%eax
820021c4:	3b 45 0c             	cmp    0xc(%ebp),%eax
820021c7:	73 13                	jae    820021dc <_malloc_r+0x47>
820021c9:	8b 45 08             	mov    0x8(%ebp),%eax
820021cc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
820021d2:	b8 00 00 00 00       	mov    $0x0,%eax
820021d7:	e9 d6 07 00 00       	jmp    820029b2 <_malloc_r+0x81d>
820021dc:	83 ec 0c             	sub    $0xc,%esp
820021df:	ff 75 08             	push   0x8(%ebp)
820021e2:	e8 a1 08 00 00       	call   82002a88 <__malloc_lock>
820021e7:	83 c4 10             	add    $0x10,%esp
820021ea:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
820021f1:	0f 87 b0 00 00 00    	ja     820022a7 <_malloc_r+0x112>
820021f7:	8b 45 d0             	mov    -0x30(%ebp),%eax
820021fa:	c1 e8 03             	shr    $0x3,%eax
820021fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002200:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002203:	83 c0 01             	add    $0x1,%eax
82002206:	01 c0                	add    %eax,%eax
82002208:	c1 e0 02             	shl    $0x2,%eax
8200220b:	05 80 5e 00 82       	add    $0x82005e80,%eax
82002210:	83 e8 08             	sub    $0x8,%eax
82002213:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82002216:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82002219:	8b 40 0c             	mov    0xc(%eax),%eax
8200221c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200221f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002222:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
82002225:	75 0d                	jne    82002234 <_malloc_r+0x9f>
82002227:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
8200222b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200222e:	8b 40 0c             	mov    0xc(%eax),%eax
82002231:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002234:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002237:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8200223a:	74 62                	je     8200229e <_malloc_r+0x109>
8200223c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200223f:	8b 40 04             	mov    0x4(%eax),%eax
82002242:	83 e0 fc             	and    $0xfffffffc,%eax
82002245:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002248:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200224b:	8b 40 0c             	mov    0xc(%eax),%eax
8200224e:	89 45 d8             	mov    %eax,-0x28(%ebp)
82002251:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002254:	8b 40 08             	mov    0x8(%eax),%eax
82002257:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200225a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200225d:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002260:	89 50 0c             	mov    %edx,0xc(%eax)
82002263:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002266:	8b 55 dc             	mov    -0x24(%ebp),%edx
82002269:	89 50 08             	mov    %edx,0x8(%eax)
8200226c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200226f:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002272:	01 d0                	add    %edx,%eax
82002274:	8b 50 04             	mov    0x4(%eax),%edx
82002277:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8200227a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8200227d:	01 c8                	add    %ecx,%eax
8200227f:	83 ca 01             	or     $0x1,%edx
82002282:	89 50 04             	mov    %edx,0x4(%eax)
82002285:	83 ec 0c             	sub    $0xc,%esp
82002288:	ff 75 08             	push   0x8(%ebp)
8200228b:	e8 fe 07 00 00       	call   82002a8e <__malloc_unlock>
82002290:	83 c4 10             	add    $0x10,%esp
82002293:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002296:	83 c0 08             	add    $0x8,%eax
82002299:	e9 14 07 00 00       	jmp    820029b2 <_malloc_r+0x81d>
8200229e:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
820022a2:	e9 46 01 00 00       	jmp    820023ed <_malloc_r+0x258>
820022a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022aa:	c1 e8 09             	shr    $0x9,%eax
820022ad:	85 c0                	test   %eax,%eax
820022af:	75 08                	jne    820022b9 <_malloc_r+0x124>
820022b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022b4:	c1 e8 03             	shr    $0x3,%eax
820022b7:	eb 77                	jmp    82002330 <_malloc_r+0x19b>
820022b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022bc:	c1 e8 09             	shr    $0x9,%eax
820022bf:	83 f8 04             	cmp    $0x4,%eax
820022c2:	77 0b                	ja     820022cf <_malloc_r+0x13a>
820022c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022c7:	c1 e8 06             	shr    $0x6,%eax
820022ca:	83 c0 38             	add    $0x38,%eax
820022cd:	eb 61                	jmp    82002330 <_malloc_r+0x19b>
820022cf:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022d2:	c1 e8 09             	shr    $0x9,%eax
820022d5:	83 f8 14             	cmp    $0x14,%eax
820022d8:	77 0b                	ja     820022e5 <_malloc_r+0x150>
820022da:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022dd:	c1 e8 09             	shr    $0x9,%eax
820022e0:	83 c0 5b             	add    $0x5b,%eax
820022e3:	eb 4b                	jmp    82002330 <_malloc_r+0x19b>
820022e5:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022e8:	c1 e8 09             	shr    $0x9,%eax
820022eb:	83 f8 54             	cmp    $0x54,%eax
820022ee:	77 0b                	ja     820022fb <_malloc_r+0x166>
820022f0:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022f3:	c1 e8 0c             	shr    $0xc,%eax
820022f6:	83 c0 6e             	add    $0x6e,%eax
820022f9:	eb 35                	jmp    82002330 <_malloc_r+0x19b>
820022fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
820022fe:	c1 e8 09             	shr    $0x9,%eax
82002301:	3d 54 01 00 00       	cmp    $0x154,%eax
82002306:	77 0b                	ja     82002313 <_malloc_r+0x17e>
82002308:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200230b:	c1 e8 0f             	shr    $0xf,%eax
8200230e:	83 c0 77             	add    $0x77,%eax
82002311:	eb 1d                	jmp    82002330 <_malloc_r+0x19b>
82002313:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002316:	c1 e8 09             	shr    $0x9,%eax
82002319:	3d 54 05 00 00       	cmp    $0x554,%eax
8200231e:	77 0b                	ja     8200232b <_malloc_r+0x196>
82002320:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002323:	c1 e8 12             	shr    $0x12,%eax
82002326:	83 c0 7c             	add    $0x7c,%eax
82002329:	eb 05                	jmp    82002330 <_malloc_r+0x19b>
8200232b:	b8 7e 00 00 00       	mov    $0x7e,%eax
82002330:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002333:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002336:	83 c0 01             	add    $0x1,%eax
82002339:	01 c0                	add    %eax,%eax
8200233b:	c1 e0 02             	shl    $0x2,%eax
8200233e:	05 80 5e 00 82       	add    $0x82005e80,%eax
82002343:	83 e8 08             	sub    $0x8,%eax
82002346:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002349:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200234c:	8b 40 0c             	mov    0xc(%eax),%eax
8200234f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002352:	e9 86 00 00 00       	jmp    820023dd <_malloc_r+0x248>
82002357:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200235a:	8b 40 04             	mov    0x4(%eax),%eax
8200235d:	83 e0 fc             	and    $0xfffffffc,%eax
82002360:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002363:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002366:	2b 45 d0             	sub    -0x30(%ebp),%eax
82002369:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200236c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
82002370:	7e 06                	jle    82002378 <_malloc_r+0x1e3>
82002372:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
82002376:	eb 71                	jmp    820023e9 <_malloc_r+0x254>
82002378:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8200237c:	78 56                	js     820023d4 <_malloc_r+0x23f>
8200237e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002381:	8b 40 0c             	mov    0xc(%eax),%eax
82002384:	89 45 d8             	mov    %eax,-0x28(%ebp)
82002387:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200238a:	8b 40 08             	mov    0x8(%eax),%eax
8200238d:	89 45 dc             	mov    %eax,-0x24(%ebp)
82002390:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002393:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002396:	89 50 0c             	mov    %edx,0xc(%eax)
82002399:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200239c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8200239f:	89 50 08             	mov    %edx,0x8(%eax)
820023a2:	8b 55 f4             	mov    -0xc(%ebp),%edx
820023a5:	8b 45 cc             	mov    -0x34(%ebp),%eax
820023a8:	01 d0                	add    %edx,%eax
820023aa:	8b 50 04             	mov    0x4(%eax),%edx
820023ad:	8b 4d f4             	mov    -0xc(%ebp),%ecx
820023b0:	8b 45 cc             	mov    -0x34(%ebp),%eax
820023b3:	01 c8                	add    %ecx,%eax
820023b5:	83 ca 01             	or     $0x1,%edx
820023b8:	89 50 04             	mov    %edx,0x4(%eax)
820023bb:	83 ec 0c             	sub    $0xc,%esp
820023be:	ff 75 08             	push   0x8(%ebp)
820023c1:	e8 c8 06 00 00       	call   82002a8e <__malloc_unlock>
820023c6:	83 c4 10             	add    $0x10,%esp
820023c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
820023cc:	83 c0 08             	add    $0x8,%eax
820023cf:	e9 de 05 00 00       	jmp    820029b2 <_malloc_r+0x81d>
820023d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
820023d7:	8b 40 0c             	mov    0xc(%eax),%eax
820023da:	89 45 f4             	mov    %eax,-0xc(%ebp)
820023dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
820023e0:	3b 45 ec             	cmp    -0x14(%ebp),%eax
820023e3:	0f 85 6e ff ff ff    	jne    82002357 <_malloc_r+0x1c2>
820023e9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
820023ed:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
820023f2:	8b 40 08             	mov    0x8(%eax),%eax
820023f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
820023f8:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
820023fd:	39 45 f4             	cmp    %eax,-0xc(%ebp)
82002400:	0f 84 9c 02 00 00    	je     820026a2 <_malloc_r+0x50d>
82002406:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002409:	8b 40 04             	mov    0x4(%eax),%eax
8200240c:	83 e0 fc             	and    $0xfffffffc,%eax
8200240f:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002412:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002415:	2b 45 d0             	sub    -0x30(%ebp),%eax
82002418:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200241b:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8200241f:	7e 7a                	jle    8200249b <_malloc_r+0x306>
82002421:	8b 55 f4             	mov    -0xc(%ebp),%edx
82002424:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002427:	01 d0                	add    %edx,%eax
82002429:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8200242c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200242f:	83 c8 01             	or     $0x1,%eax
82002432:	89 c2                	mov    %eax,%edx
82002434:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002437:	89 50 04             	mov    %edx,0x4(%eax)
8200243a:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
8200243f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
82002442:	89 50 0c             	mov    %edx,0xc(%eax)
82002445:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
8200244a:	8b 40 0c             	mov    0xc(%eax),%eax
8200244d:	89 42 08             	mov    %eax,0x8(%edx)
82002450:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
82002455:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82002458:	89 50 0c             	mov    %edx,0xc(%eax)
8200245b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8200245e:	8b 50 0c             	mov    0xc(%eax),%edx
82002461:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82002464:	89 50 08             	mov    %edx,0x8(%eax)
82002467:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200246a:	83 c8 01             	or     $0x1,%eax
8200246d:	89 c2                	mov    %eax,%edx
8200246f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82002472:	89 50 04             	mov    %edx,0x4(%eax)
82002475:	8b 55 e8             	mov    -0x18(%ebp),%edx
82002478:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8200247b:	01 c2                	add    %eax,%edx
8200247d:	8b 45 e8             	mov    -0x18(%ebp),%eax
82002480:	89 02                	mov    %eax,(%edx)
82002482:	83 ec 0c             	sub    $0xc,%esp
82002485:	ff 75 08             	push   0x8(%ebp)
82002488:	e8 01 06 00 00       	call   82002a8e <__malloc_unlock>
8200248d:	83 c4 10             	add    $0x10,%esp
82002490:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002493:	83 c0 08             	add    $0x8,%eax
82002496:	e9 17 05 00 00       	jmp    820029b2 <_malloc_r+0x81d>
8200249b:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
820024a0:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820024a5:	89 50 0c             	mov    %edx,0xc(%eax)
820024a8:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820024ad:	8b 40 0c             	mov    0xc(%eax),%eax
820024b0:	89 42 08             	mov    %eax,0x8(%edx)
820024b3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820024b7:	78 32                	js     820024eb <_malloc_r+0x356>
820024b9:	8b 55 f4             	mov    -0xc(%ebp),%edx
820024bc:	8b 45 cc             	mov    -0x34(%ebp),%eax
820024bf:	01 d0                	add    %edx,%eax
820024c1:	8b 50 04             	mov    0x4(%eax),%edx
820024c4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
820024c7:	8b 45 cc             	mov    -0x34(%ebp),%eax
820024ca:	01 c8                	add    %ecx,%eax
820024cc:	83 ca 01             	or     $0x1,%edx
820024cf:	89 50 04             	mov    %edx,0x4(%eax)
820024d2:	83 ec 0c             	sub    $0xc,%esp
820024d5:	ff 75 08             	push   0x8(%ebp)
820024d8:	e8 b1 05 00 00       	call   82002a8e <__malloc_unlock>
820024dd:	83 c4 10             	add    $0x10,%esp
820024e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
820024e3:	83 c0 08             	add    $0x8,%eax
820024e6:	e9 c7 04 00 00       	jmp    820029b2 <_malloc_r+0x81d>
820024eb:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
820024f2:	77 7f                	ja     82002573 <_malloc_r+0x3de>
820024f4:	8b 45 cc             	mov    -0x34(%ebp),%eax
820024f7:	c1 e8 03             	shr    $0x3,%eax
820024fa:	89 45 c8             	mov    %eax,-0x38(%ebp)
820024fd:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002502:	8b 58 04             	mov    0x4(%eax),%ebx
82002505:	8b 45 c8             	mov    -0x38(%ebp),%eax
82002508:	8d 50 03             	lea    0x3(%eax),%edx
8200250b:	85 c0                	test   %eax,%eax
8200250d:	0f 48 c2             	cmovs  %edx,%eax
82002510:	c1 f8 02             	sar    $0x2,%eax
82002513:	ba 01 00 00 00       	mov    $0x1,%edx
82002518:	89 c1                	mov    %eax,%ecx
8200251a:	d3 e2                	shl    %cl,%edx
8200251c:	89 d0                	mov    %edx,%eax
8200251e:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82002523:	09 d8                	or     %ebx,%eax
82002525:	89 42 04             	mov    %eax,0x4(%edx)
82002528:	8b 45 c8             	mov    -0x38(%ebp),%eax
8200252b:	83 c0 01             	add    $0x1,%eax
8200252e:	01 c0                	add    %eax,%eax
82002530:	c1 e0 02             	shl    $0x2,%eax
82002533:	05 80 5e 00 82       	add    $0x82005e80,%eax
82002538:	83 e8 08             	sub    $0x8,%eax
8200253b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200253e:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002541:	8b 40 08             	mov    0x8(%eax),%eax
82002544:	89 45 dc             	mov    %eax,-0x24(%ebp)
82002547:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200254a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8200254d:	89 50 0c             	mov    %edx,0xc(%eax)
82002550:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002553:	8b 55 dc             	mov    -0x24(%ebp),%edx
82002556:	89 50 08             	mov    %edx,0x8(%eax)
82002559:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200255c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200255f:	89 50 08             	mov    %edx,0x8(%eax)
82002562:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002565:	8b 50 08             	mov    0x8(%eax),%edx
82002568:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200256b:	89 50 0c             	mov    %edx,0xc(%eax)
8200256e:	e9 2f 01 00 00       	jmp    820026a2 <_malloc_r+0x50d>
82002573:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002576:	c1 e8 09             	shr    $0x9,%eax
82002579:	85 c0                	test   %eax,%eax
8200257b:	75 08                	jne    82002585 <_malloc_r+0x3f0>
8200257d:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002580:	c1 e8 03             	shr    $0x3,%eax
82002583:	eb 77                	jmp    820025fc <_malloc_r+0x467>
82002585:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002588:	c1 e8 09             	shr    $0x9,%eax
8200258b:	83 f8 04             	cmp    $0x4,%eax
8200258e:	77 0b                	ja     8200259b <_malloc_r+0x406>
82002590:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002593:	c1 e8 06             	shr    $0x6,%eax
82002596:	83 c0 38             	add    $0x38,%eax
82002599:	eb 61                	jmp    820025fc <_malloc_r+0x467>
8200259b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8200259e:	c1 e8 09             	shr    $0x9,%eax
820025a1:	83 f8 14             	cmp    $0x14,%eax
820025a4:	77 0b                	ja     820025b1 <_malloc_r+0x41c>
820025a6:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025a9:	c1 e8 09             	shr    $0x9,%eax
820025ac:	83 c0 5b             	add    $0x5b,%eax
820025af:	eb 4b                	jmp    820025fc <_malloc_r+0x467>
820025b1:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025b4:	c1 e8 09             	shr    $0x9,%eax
820025b7:	83 f8 54             	cmp    $0x54,%eax
820025ba:	77 0b                	ja     820025c7 <_malloc_r+0x432>
820025bc:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025bf:	c1 e8 0c             	shr    $0xc,%eax
820025c2:	83 c0 6e             	add    $0x6e,%eax
820025c5:	eb 35                	jmp    820025fc <_malloc_r+0x467>
820025c7:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025ca:	c1 e8 09             	shr    $0x9,%eax
820025cd:	3d 54 01 00 00       	cmp    $0x154,%eax
820025d2:	77 0b                	ja     820025df <_malloc_r+0x44a>
820025d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025d7:	c1 e8 0f             	shr    $0xf,%eax
820025da:	83 c0 77             	add    $0x77,%eax
820025dd:	eb 1d                	jmp    820025fc <_malloc_r+0x467>
820025df:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025e2:	c1 e8 09             	shr    $0x9,%eax
820025e5:	3d 54 05 00 00       	cmp    $0x554,%eax
820025ea:	77 0b                	ja     820025f7 <_malloc_r+0x462>
820025ec:	8b 45 cc             	mov    -0x34(%ebp),%eax
820025ef:	c1 e8 12             	shr    $0x12,%eax
820025f2:	83 c0 7c             	add    $0x7c,%eax
820025f5:	eb 05                	jmp    820025fc <_malloc_r+0x467>
820025f7:	b8 7e 00 00 00       	mov    $0x7e,%eax
820025fc:	89 45 c8             	mov    %eax,-0x38(%ebp)
820025ff:	8b 45 c8             	mov    -0x38(%ebp),%eax
82002602:	83 c0 01             	add    $0x1,%eax
82002605:	01 c0                	add    %eax,%eax
82002607:	c1 e0 02             	shl    $0x2,%eax
8200260a:	05 80 5e 00 82       	add    $0x82005e80,%eax
8200260f:	83 e8 08             	sub    $0x8,%eax
82002612:	89 45 d8             	mov    %eax,-0x28(%ebp)
82002615:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002618:	8b 40 08             	mov    0x8(%eax),%eax
8200261b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200261e:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002621:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82002624:	75 36                	jne    8200265c <_malloc_r+0x4c7>
82002626:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
8200262b:	8b 58 04             	mov    0x4(%eax),%ebx
8200262e:	8b 45 c8             	mov    -0x38(%ebp),%eax
82002631:	8d 50 03             	lea    0x3(%eax),%edx
82002634:	85 c0                	test   %eax,%eax
82002636:	0f 48 c2             	cmovs  %edx,%eax
82002639:	c1 f8 02             	sar    $0x2,%eax
8200263c:	ba 01 00 00 00       	mov    $0x1,%edx
82002641:	89 c1                	mov    %eax,%ecx
82002643:	d3 e2                	shl    %cl,%edx
82002645:	89 d0                	mov    %edx,%eax
82002647:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
8200264c:	09 d8                	or     %ebx,%eax
8200264e:	89 42 04             	mov    %eax,0x4(%edx)
82002651:	eb 28                	jmp    8200267b <_malloc_r+0x4e6>
82002653:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002656:	8b 40 08             	mov    0x8(%eax),%eax
82002659:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200265c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200265f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82002662:	74 0e                	je     82002672 <_malloc_r+0x4dd>
82002664:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002667:	8b 40 04             	mov    0x4(%eax),%eax
8200266a:	83 e0 fc             	and    $0xfffffffc,%eax
8200266d:	39 45 cc             	cmp    %eax,-0x34(%ebp)
82002670:	72 e1                	jb     82002653 <_malloc_r+0x4be>
82002672:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002675:	8b 40 0c             	mov    0xc(%eax),%eax
82002678:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200267b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200267e:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002681:	89 50 0c             	mov    %edx,0xc(%eax)
82002684:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002687:	8b 55 dc             	mov    -0x24(%ebp),%edx
8200268a:	89 50 08             	mov    %edx,0x8(%eax)
8200268d:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002690:	8b 55 f4             	mov    -0xc(%ebp),%edx
82002693:	89 50 08             	mov    %edx,0x8(%eax)
82002696:	8b 45 d8             	mov    -0x28(%ebp),%eax
82002699:	8b 50 08             	mov    0x8(%eax),%edx
8200269c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200269f:	89 50 0c             	mov    %edx,0xc(%eax)
820026a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
820026a5:	8d 50 03             	lea    0x3(%eax),%edx
820026a8:	85 c0                	test   %eax,%eax
820026aa:	0f 48 c2             	cmovs  %edx,%eax
820026ad:	c1 f8 02             	sar    $0x2,%eax
820026b0:	ba 01 00 00 00       	mov    $0x1,%edx
820026b5:	89 c1                	mov    %eax,%ecx
820026b7:	d3 e2                	shl    %cl,%edx
820026b9:	89 d0                	mov    %edx,%eax
820026bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820026be:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820026c3:	8b 40 04             	mov    0x4(%eax),%eax
820026c6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
820026c9:	0f 87 13 02 00 00    	ja     820028e2 <_malloc_r+0x74d>
820026cf:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820026d4:	8b 40 04             	mov    0x4(%eax),%eax
820026d7:	23 45 e4             	and    -0x1c(%ebp),%eax
820026da:	85 c0                	test   %eax,%eax
820026dc:	75 27                	jne    82002705 <_malloc_r+0x570>
820026de:	8b 45 f0             	mov    -0x10(%ebp),%eax
820026e1:	83 e0 fc             	and    $0xfffffffc,%eax
820026e4:	83 c0 04             	add    $0x4,%eax
820026e7:	89 45 f0             	mov    %eax,-0x10(%ebp)
820026ea:	d1 65 e4             	shll   -0x1c(%ebp)
820026ed:	eb 07                	jmp    820026f6 <_malloc_r+0x561>
820026ef:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
820026f3:	d1 65 e4             	shll   -0x1c(%ebp)
820026f6:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820026fb:	8b 40 04             	mov    0x4(%eax),%eax
820026fe:	23 45 e4             	and    -0x1c(%ebp),%eax
82002701:	85 c0                	test   %eax,%eax
82002703:	74 ea                	je     820026ef <_malloc_r+0x55a>
82002705:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002708:	89 45 e0             	mov    %eax,-0x20(%ebp)
8200270b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200270e:	83 c0 01             	add    $0x1,%eax
82002711:	01 c0                	add    %eax,%eax
82002713:	c1 e0 02             	shl    $0x2,%eax
82002716:	05 80 5e 00 82       	add    $0x82005e80,%eax
8200271b:	83 e8 08             	sub    $0x8,%eax
8200271e:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002721:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002724:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82002727:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200272a:	8b 40 0c             	mov    0xc(%eax),%eax
8200272d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002730:	e9 22 01 00 00       	jmp    82002857 <_malloc_r+0x6c2>
82002735:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002738:	8b 40 04             	mov    0x4(%eax),%eax
8200273b:	83 e0 fc             	and    $0xfffffffc,%eax
8200273e:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002741:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002744:	2b 45 d0             	sub    -0x30(%ebp),%eax
82002747:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200274a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8200274e:	0f 8e 9e 00 00 00    	jle    820027f2 <_malloc_r+0x65d>
82002754:	8b 55 f4             	mov    -0xc(%ebp),%edx
82002757:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200275a:	01 d0                	add    %edx,%eax
8200275c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8200275f:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002762:	83 c8 01             	or     $0x1,%eax
82002765:	89 c2                	mov    %eax,%edx
82002767:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200276a:	89 50 04             	mov    %edx,0x4(%eax)
8200276d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002770:	8b 40 0c             	mov    0xc(%eax),%eax
82002773:	89 45 d8             	mov    %eax,-0x28(%ebp)
82002776:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002779:	8b 40 08             	mov    0x8(%eax),%eax
8200277c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200277f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002782:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002785:	89 50 0c             	mov    %edx,0xc(%eax)
82002788:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200278b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8200278e:	89 50 08             	mov    %edx,0x8(%eax)
82002791:	b8 88 5e 00 82       	mov    $0x82005e88,%eax
82002796:	8b 55 c4             	mov    -0x3c(%ebp),%edx
82002799:	89 50 0c             	mov    %edx,0xc(%eax)
8200279c:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820027a1:	8b 40 0c             	mov    0xc(%eax),%eax
820027a4:	89 42 08             	mov    %eax,0x8(%edx)
820027a7:	ba 88 5e 00 82       	mov    $0x82005e88,%edx
820027ac:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820027af:	89 50 0c             	mov    %edx,0xc(%eax)
820027b2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820027b5:	8b 50 0c             	mov    0xc(%eax),%edx
820027b8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820027bb:	89 50 08             	mov    %edx,0x8(%eax)
820027be:	8b 45 e8             	mov    -0x18(%ebp),%eax
820027c1:	83 c8 01             	or     $0x1,%eax
820027c4:	89 c2                	mov    %eax,%edx
820027c6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820027c9:	89 50 04             	mov    %edx,0x4(%eax)
820027cc:	8b 55 e8             	mov    -0x18(%ebp),%edx
820027cf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820027d2:	01 c2                	add    %eax,%edx
820027d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
820027d7:	89 02                	mov    %eax,(%edx)
820027d9:	83 ec 0c             	sub    $0xc,%esp
820027dc:	ff 75 08             	push   0x8(%ebp)
820027df:	e8 aa 02 00 00       	call   82002a8e <__malloc_unlock>
820027e4:	83 c4 10             	add    $0x10,%esp
820027e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820027ea:	83 c0 08             	add    $0x8,%eax
820027ed:	e9 c0 01 00 00       	jmp    820029b2 <_malloc_r+0x81d>
820027f2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820027f6:	78 56                	js     8200284e <_malloc_r+0x6b9>
820027f8:	8b 55 f4             	mov    -0xc(%ebp),%edx
820027fb:	8b 45 cc             	mov    -0x34(%ebp),%eax
820027fe:	01 d0                	add    %edx,%eax
82002800:	8b 50 04             	mov    0x4(%eax),%edx
82002803:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82002806:	8b 45 cc             	mov    -0x34(%ebp),%eax
82002809:	01 c8                	add    %ecx,%eax
8200280b:	83 ca 01             	or     $0x1,%edx
8200280e:	89 50 04             	mov    %edx,0x4(%eax)
82002811:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002814:	8b 40 0c             	mov    0xc(%eax),%eax
82002817:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200281a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200281d:	8b 40 08             	mov    0x8(%eax),%eax
82002820:	89 45 dc             	mov    %eax,-0x24(%ebp)
82002823:	8b 45 dc             	mov    -0x24(%ebp),%eax
82002826:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002829:	89 50 0c             	mov    %edx,0xc(%eax)
8200282c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200282f:	8b 55 dc             	mov    -0x24(%ebp),%edx
82002832:	89 50 08             	mov    %edx,0x8(%eax)
82002835:	83 ec 0c             	sub    $0xc,%esp
82002838:	ff 75 08             	push   0x8(%ebp)
8200283b:	e8 4e 02 00 00       	call   82002a8e <__malloc_unlock>
82002840:	83 c4 10             	add    $0x10,%esp
82002843:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002846:	83 c0 08             	add    $0x8,%eax
82002849:	e9 64 01 00 00       	jmp    820029b2 <_malloc_r+0x81d>
8200284e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002851:	8b 40 0c             	mov    0xc(%eax),%eax
82002854:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002857:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200285a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8200285d:	0f 85 d2 fe ff ff    	jne    82002735 <_malloc_r+0x5a0>
82002863:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
82002867:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8200286b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200286e:	83 e0 03             	and    $0x3,%eax
82002871:	85 c0                	test   %eax,%eax
82002873:	0f 85 ae fe ff ff    	jne    82002727 <_malloc_r+0x592>
82002879:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200287c:	83 e0 03             	and    $0x3,%eax
8200287f:	85 c0                	test   %eax,%eax
82002881:	75 19                	jne    8200289c <_malloc_r+0x707>
82002883:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002888:	8b 48 04             	mov    0x4(%eax),%ecx
8200288b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8200288e:	f7 d0                	not    %eax
82002890:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82002895:	21 c8                	and    %ecx,%eax
82002897:	89 42 04             	mov    %eax,0x4(%edx)
8200289a:	eb 13                	jmp    820028af <_malloc_r+0x71a>
8200289c:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
820028a0:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
820028a4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
820028a7:	8b 40 08             	mov    0x8(%eax),%eax
820028aa:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
820028ad:	74 ca                	je     82002879 <_malloc_r+0x6e4>
820028af:	d1 65 e4             	shll   -0x1c(%ebp)
820028b2:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820028b7:	8b 40 04             	mov    0x4(%eax),%eax
820028ba:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
820028bd:	77 23                	ja     820028e2 <_malloc_r+0x74d>
820028bf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
820028c3:	74 1d                	je     820028e2 <_malloc_r+0x74d>
820028c5:	eb 07                	jmp    820028ce <_malloc_r+0x739>
820028c7:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
820028cb:	d1 65 e4             	shll   -0x1c(%ebp)
820028ce:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820028d3:	8b 40 04             	mov    0x4(%eax),%eax
820028d6:	23 45 e4             	and    -0x1c(%ebp),%eax
820028d9:	85 c0                	test   %eax,%eax
820028db:	74 ea                	je     820028c7 <_malloc_r+0x732>
820028dd:	e9 23 fe ff ff       	jmp    82002705 <_malloc_r+0x570>
820028e2:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820028e7:	8b 40 08             	mov    0x8(%eax),%eax
820028ea:	8b 40 04             	mov    0x4(%eax),%eax
820028ed:	83 e0 fc             	and    $0xfffffffc,%eax
820028f0:	2b 45 d0             	sub    -0x30(%ebp),%eax
820028f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
820028f6:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820028fb:	8b 40 08             	mov    0x8(%eax),%eax
820028fe:	8b 40 04             	mov    0x4(%eax),%eax
82002901:	83 e0 fc             	and    $0xfffffffc,%eax
82002904:	39 45 d0             	cmp    %eax,-0x30(%ebp)
82002907:	77 06                	ja     8200290f <_malloc_r+0x77a>
82002909:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8200290d:	7f 53                	jg     82002962 <_malloc_r+0x7cd>
8200290f:	83 ec 08             	sub    $0x8,%esp
82002912:	ff 75 d0             	push   -0x30(%ebp)
82002915:	ff 75 08             	push   0x8(%ebp)
82002918:	e8 e5 f5 ff ff       	call   82001f02 <malloc_extend_top>
8200291d:	83 c4 10             	add    $0x10,%esp
82002920:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002925:	8b 40 08             	mov    0x8(%eax),%eax
82002928:	8b 40 04             	mov    0x4(%eax),%eax
8200292b:	83 e0 fc             	and    $0xfffffffc,%eax
8200292e:	2b 45 d0             	sub    -0x30(%ebp),%eax
82002931:	89 45 e8             	mov    %eax,-0x18(%ebp)
82002934:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002939:	8b 40 08             	mov    0x8(%eax),%eax
8200293c:	8b 40 04             	mov    0x4(%eax),%eax
8200293f:	83 e0 fc             	and    $0xfffffffc,%eax
82002942:	39 45 d0             	cmp    %eax,-0x30(%ebp)
82002945:	77 06                	ja     8200294d <_malloc_r+0x7b8>
82002947:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8200294b:	7f 15                	jg     82002962 <_malloc_r+0x7cd>
8200294d:	83 ec 0c             	sub    $0xc,%esp
82002950:	ff 75 08             	push   0x8(%ebp)
82002953:	e8 36 01 00 00       	call   82002a8e <__malloc_unlock>
82002958:	83 c4 10             	add    $0x10,%esp
8200295b:	b8 00 00 00 00       	mov    $0x0,%eax
82002960:	eb 50                	jmp    820029b2 <_malloc_r+0x81d>
82002962:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002967:	8b 40 08             	mov    0x8(%eax),%eax
8200296a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200296d:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002970:	83 c8 01             	or     $0x1,%eax
82002973:	89 c2                	mov    %eax,%edx
82002975:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002978:	89 50 04             	mov    %edx,0x4(%eax)
8200297b:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82002980:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82002983:	8b 45 d0             	mov    -0x30(%ebp),%eax
82002986:	01 c8                	add    %ecx,%eax
82002988:	89 42 08             	mov    %eax,0x8(%edx)
8200298b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200298e:	83 c8 01             	or     $0x1,%eax
82002991:	89 c2                	mov    %eax,%edx
82002993:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82002998:	8b 40 08             	mov    0x8(%eax),%eax
8200299b:	89 50 04             	mov    %edx,0x4(%eax)
8200299e:	83 ec 0c             	sub    $0xc,%esp
820029a1:	ff 75 08             	push   0x8(%ebp)
820029a4:	e8 e5 00 00 00       	call   82002a8e <__malloc_unlock>
820029a9:	83 c4 10             	add    $0x10,%esp
820029ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
820029af:	83 c0 08             	add    $0x8,%eax
820029b2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820029b5:	c9                   	leave  
820029b6:	c3                   	ret    
820029b7:	90                   	nop

820029b8 <memcpy>:
820029b8:	55                   	push   %ebp
820029b9:	89 e5                	mov    %esp,%ebp
820029bb:	56                   	push   %esi
820029bc:	57                   	push   %edi
820029bd:	53                   	push   %ebx
820029be:	8b 7d 08             	mov    0x8(%ebp),%edi
820029c1:	8b 4d 10             	mov    0x10(%ebp),%ecx
820029c4:	8b 75 0c             	mov    0xc(%ebp),%esi
820029c7:	fc                   	cld    
820029c8:	83 f9 08             	cmp    $0x8,%ecx
820029cb:	76 26                	jbe    820029f3 <memcpy+0x3b>
820029cd:	89 fa                	mov    %edi,%edx
820029cf:	89 cb                	mov    %ecx,%ebx
820029d1:	83 e2 03             	and    $0x3,%edx
820029d4:	74 10                	je     820029e6 <memcpy+0x2e>
820029d6:	b9 04 00 00 00       	mov    $0x4,%ecx
820029db:	29 d1                	sub    %edx,%ecx
820029dd:	83 e1 03             	and    $0x3,%ecx
820029e0:	29 cb                	sub    %ecx,%ebx
820029e2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
820029e4:	89 d9                	mov    %ebx,%ecx
820029e6:	c1 e9 02             	shr    $0x2,%ecx
820029e9:	8d 76 00             	lea    0x0(%esi),%esi
820029ec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
820029ee:	89 d9                	mov    %ebx,%ecx
820029f0:	83 e1 03             	and    $0x3,%ecx
820029f3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
820029f5:	8b 45 08             	mov    0x8(%ebp),%eax
820029f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
820029fb:	5b                   	pop    %ebx
820029fc:	5f                   	pop    %edi
820029fd:	5e                   	pop    %esi
820029fe:	c9                   	leave  
820029ff:	c3                   	ret    

82002a00 <memset>:
82002a00:	55                   	push   %ebp
82002a01:	89 e5                	mov    %esp,%ebp
82002a03:	57                   	push   %edi
82002a04:	8b 7d 08             	mov    0x8(%ebp),%edi
82002a07:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
82002a0b:	8b 4d 10             	mov    0x10(%ebp),%ecx
82002a0e:	fc                   	cld    
82002a0f:	83 f9 10             	cmp    $0x10,%ecx
82002a12:	76 69                	jbe    82002a7d <memset+0x7d>
82002a14:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a1a:	74 4c                	je     82002a68 <memset+0x68>
82002a1c:	88 07                	mov    %al,(%edi)
82002a1e:	47                   	inc    %edi
82002a1f:	49                   	dec    %ecx
82002a20:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a26:	74 40                	je     82002a68 <memset+0x68>
82002a28:	88 07                	mov    %al,(%edi)
82002a2a:	47                   	inc    %edi
82002a2b:	49                   	dec    %ecx
82002a2c:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a32:	74 34                	je     82002a68 <memset+0x68>
82002a34:	88 07                	mov    %al,(%edi)
82002a36:	47                   	inc    %edi
82002a37:	49                   	dec    %ecx
82002a38:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a3e:	74 28                	je     82002a68 <memset+0x68>
82002a40:	88 07                	mov    %al,(%edi)
82002a42:	47                   	inc    %edi
82002a43:	49                   	dec    %ecx
82002a44:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a4a:	74 1c                	je     82002a68 <memset+0x68>
82002a4c:	88 07                	mov    %al,(%edi)
82002a4e:	47                   	inc    %edi
82002a4f:	49                   	dec    %ecx
82002a50:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a56:	74 10                	je     82002a68 <memset+0x68>
82002a58:	88 07                	mov    %al,(%edi)
82002a5a:	47                   	inc    %edi
82002a5b:	49                   	dec    %ecx
82002a5c:	f7 c7 07 00 00 00    	test   $0x7,%edi
82002a62:	74 04                	je     82002a68 <memset+0x68>
82002a64:	88 07                	mov    %al,(%edi)
82002a66:	47                   	inc    %edi
82002a67:	49                   	dec    %ecx
82002a68:	88 c4                	mov    %al,%ah
82002a6a:	89 c2                	mov    %eax,%edx
82002a6c:	c1 e2 10             	shl    $0x10,%edx
82002a6f:	09 d0                	or     %edx,%eax
82002a71:	89 ca                	mov    %ecx,%edx
82002a73:	c1 e9 02             	shr    $0x2,%ecx
82002a76:	83 e2 03             	and    $0x3,%edx
82002a79:	f3 ab                	rep stos %eax,%es:(%edi)
82002a7b:	89 d1                	mov    %edx,%ecx
82002a7d:	f3 aa                	rep stos %al,%es:(%edi)
82002a7f:	8b 45 08             	mov    0x8(%ebp),%eax
82002a82:	8d 65 fc             	lea    -0x4(%ebp),%esp
82002a85:	5f                   	pop    %edi
82002a86:	c9                   	leave  
82002a87:	c3                   	ret    

82002a88 <__malloc_lock>:
82002a88:	55                   	push   %ebp
82002a89:	89 e5                	mov    %esp,%ebp
82002a8b:	90                   	nop
82002a8c:	5d                   	pop    %ebp
82002a8d:	c3                   	ret    

82002a8e <__malloc_unlock>:
82002a8e:	55                   	push   %ebp
82002a8f:	89 e5                	mov    %esp,%ebp
82002a91:	90                   	nop
82002a92:	5d                   	pop    %ebp
82002a93:	c3                   	ret    

82002a94 <_open_r>:
82002a94:	55                   	push   %ebp
82002a95:	89 e5                	mov    %esp,%ebp
82002a97:	83 ec 18             	sub    $0x18,%esp
82002a9a:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
82002aa1:	00 00 00 
82002aa4:	83 ec 04             	sub    $0x4,%esp
82002aa7:	ff 75 14             	push   0x14(%ebp)
82002aaa:	ff 75 10             	push   0x10(%ebp)
82002aad:	ff 75 0c             	push   0xc(%ebp)
82002ab0:	e8 b5 d6 ff ff       	call   8200016a <open>
82002ab5:	83 c4 10             	add    $0x10,%esp
82002ab8:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002abb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82002abf:	75 14                	jne    82002ad5 <_open_r+0x41>
82002ac1:	a1 8c 64 00 82       	mov    0x8200648c,%eax
82002ac6:	85 c0                	test   %eax,%eax
82002ac8:	74 0b                	je     82002ad5 <_open_r+0x41>
82002aca:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82002ad0:	8b 45 08             	mov    0x8(%ebp),%eax
82002ad3:	89 10                	mov    %edx,(%eax)
82002ad5:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002ad8:	c9                   	leave  
82002ad9:	c3                   	ret    

82002ada <_iprintf_r>:
82002ada:	55                   	push   %ebp
82002adb:	89 e5                	mov    %esp,%ebp
82002add:	83 ec 18             	sub    $0x18,%esp
82002ae0:	8d 45 10             	lea    0x10(%ebp),%eax
82002ae3:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002ae6:	8b 55 f0             	mov    -0x10(%ebp),%edx
82002ae9:	8b 45 08             	mov    0x8(%ebp),%eax
82002aec:	8b 40 08             	mov    0x8(%eax),%eax
82002aef:	52                   	push   %edx
82002af0:	ff 75 0c             	push   0xc(%ebp)
82002af3:	50                   	push   %eax
82002af4:	ff 75 08             	push   0x8(%ebp)
82002af7:	e8 90 11 00 00       	call   82003c8c <_vfiprintf_r>
82002afc:	83 c4 10             	add    $0x10,%esp
82002aff:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002b02:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b05:	c9                   	leave  
82002b06:	c3                   	ret    

82002b07 <iprintf>:
82002b07:	55                   	push   %ebp
82002b08:	89 e5                	mov    %esp,%ebp
82002b0a:	83 ec 18             	sub    $0x18,%esp
82002b0d:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82002b12:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002b15:	8d 45 0c             	lea    0xc(%ebp),%eax
82002b18:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002b1b:	8b 55 ec             	mov    -0x14(%ebp),%edx
82002b1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b21:	8b 40 08             	mov    0x8(%eax),%eax
82002b24:	52                   	push   %edx
82002b25:	ff 75 08             	push   0x8(%ebp)
82002b28:	50                   	push   %eax
82002b29:	ff 75 f4             	push   -0xc(%ebp)
82002b2c:	e8 5b 11 00 00       	call   82003c8c <_vfiprintf_r>
82002b31:	83 c4 10             	add    $0x10,%esp
82002b34:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002b37:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002b3a:	c9                   	leave  
82002b3b:	c3                   	ret    

82002b3c <_puts_r>:
82002b3c:	55                   	push   %ebp
82002b3d:	89 e5                	mov    %esp,%ebp
82002b3f:	83 ec 38             	sub    $0x38,%esp
82002b42:	83 ec 0c             	sub    $0xc,%esp
82002b45:	ff 75 0c             	push   0xc(%ebp)
82002b48:	e8 03 06 00 00       	call   82003150 <strlen>
82002b4d:	83 c4 10             	add    $0x10,%esp
82002b50:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002b53:	8b 45 0c             	mov    0xc(%ebp),%eax
82002b56:	89 45 cc             	mov    %eax,-0x34(%ebp)
82002b59:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b5c:	89 45 d0             	mov    %eax,-0x30(%ebp)
82002b5f:	c7 45 d4 d8 56 00 82 	movl   $0x820056d8,-0x2c(%ebp)
82002b66:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
82002b6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b70:	83 c0 01             	add    $0x1,%eax
82002b73:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002b76:	8d 45 cc             	lea    -0x34(%ebp),%eax
82002b79:	89 45 dc             	mov    %eax,-0x24(%ebp)
82002b7c:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
82002b83:	8b 45 08             	mov    0x8(%ebp),%eax
82002b86:	8b 40 08             	mov    0x8(%eax),%eax
82002b89:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002b8c:	8b 45 08             	mov    0x8(%ebp),%eax
82002b8f:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002b92:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
82002b96:	74 18                	je     82002bb0 <_puts_r+0x74>
82002b98:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002b9b:	8b 40 38             	mov    0x38(%eax),%eax
82002b9e:	85 c0                	test   %eax,%eax
82002ba0:	75 0e                	jne    82002bb0 <_puts_r+0x74>
82002ba2:	83 ec 0c             	sub    $0xc,%esp
82002ba5:	ff 75 ec             	push   -0x14(%ebp)
82002ba8:	e8 c4 e0 ff ff       	call   82000c71 <__sinit>
82002bad:	83 c4 10             	add    $0x10,%esp
82002bb0:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002bb3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002bb7:	98                   	cwtl   
82002bb8:	25 00 20 00 00       	and    $0x2000,%eax
82002bbd:	85 c0                	test   %eax,%eax
82002bbf:	75 24                	jne    82002be5 <_puts_r+0xa9>
82002bc1:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002bc4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002bc8:	80 cc 20             	or     $0x20,%ah
82002bcb:	89 c2                	mov    %eax,%edx
82002bcd:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002bd0:	66 89 50 0c          	mov    %dx,0xc(%eax)
82002bd4:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002bd7:	8b 40 64             	mov    0x64(%eax),%eax
82002bda:	80 e4 df             	and    $0xdf,%ah
82002bdd:	89 c2                	mov    %eax,%edx
82002bdf:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002be2:	89 50 64             	mov    %edx,0x64(%eax)
82002be5:	83 ec 04             	sub    $0x4,%esp
82002be8:	8d 45 dc             	lea    -0x24(%ebp),%eax
82002beb:	50                   	push   %eax
82002bec:	ff 75 f0             	push   -0x10(%ebp)
82002bef:	ff 75 08             	push   0x8(%ebp)
82002bf2:	e8 27 08 00 00       	call   8200341e <__sfvwrite_r>
82002bf7:	83 c4 10             	add    $0x10,%esp
82002bfa:	85 c0                	test   %eax,%eax
82002bfc:	74 07                	je     82002c05 <_puts_r+0xc9>
82002bfe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002c03:	eb 05                	jmp    82002c0a <_puts_r+0xce>
82002c05:	b8 0a 00 00 00       	mov    $0xa,%eax
82002c0a:	89 45 e8             	mov    %eax,-0x18(%ebp)
82002c0d:	8b 45 e8             	mov    -0x18(%ebp),%eax
82002c10:	c9                   	leave  
82002c11:	c3                   	ret    

82002c12 <puts>:
82002c12:	55                   	push   %ebp
82002c13:	89 e5                	mov    %esp,%ebp
82002c15:	83 ec 08             	sub    $0x8,%esp
82002c18:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82002c1d:	83 ec 08             	sub    $0x8,%esp
82002c20:	ff 75 08             	push   0x8(%ebp)
82002c23:	50                   	push   %eax
82002c24:	e8 13 ff ff ff       	call   82002b3c <_puts_r>
82002c29:	83 c4 10             	add    $0x10,%esp
82002c2c:	c9                   	leave  
82002c2d:	c3                   	ret    

82002c2e <cleanup_glue>:
82002c2e:	55                   	push   %ebp
82002c2f:	89 e5                	mov    %esp,%ebp
82002c31:	83 ec 08             	sub    $0x8,%esp
82002c34:	8b 45 0c             	mov    0xc(%ebp),%eax
82002c37:	8b 00                	mov    (%eax),%eax
82002c39:	85 c0                	test   %eax,%eax
82002c3b:	74 14                	je     82002c51 <cleanup_glue+0x23>
82002c3d:	8b 45 0c             	mov    0xc(%ebp),%eax
82002c40:	8b 00                	mov    (%eax),%eax
82002c42:	83 ec 08             	sub    $0x8,%esp
82002c45:	50                   	push   %eax
82002c46:	ff 75 08             	push   0x8(%ebp)
82002c49:	e8 e0 ff ff ff       	call   82002c2e <cleanup_glue>
82002c4e:	83 c4 10             	add    $0x10,%esp
82002c51:	83 ec 08             	sub    $0x8,%esp
82002c54:	ff 75 0c             	push   0xc(%ebp)
82002c57:	ff 75 08             	push   0x8(%ebp)
82002c5a:	e8 ad e4 ff ff       	call   8200110c <_free_r>
82002c5f:	83 c4 10             	add    $0x10,%esp
82002c62:	90                   	nop
82002c63:	c9                   	leave  
82002c64:	c3                   	ret    

82002c65 <_reclaim_reent>:
82002c65:	55                   	push   %ebp
82002c66:	89 e5                	mov    %esp,%ebp
82002c68:	83 ec 28             	sub    $0x28,%esp
82002c6b:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82002c70:	39 45 08             	cmp    %eax,0x8(%ebp)
82002c73:	0f 84 49 01 00 00    	je     82002dc2 <_reclaim_reent+0x15d>
82002c79:	8b 45 08             	mov    0x8(%ebp),%eax
82002c7c:	8b 40 4c             	mov    0x4c(%eax),%eax
82002c7f:	85 c0                	test   %eax,%eax
82002c81:	74 64                	je     82002ce7 <_reclaim_reent+0x82>
82002c83:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82002c8a:	eb 3e                	jmp    82002cca <_reclaim_reent+0x65>
82002c8c:	8b 45 08             	mov    0x8(%ebp),%eax
82002c8f:	8b 50 4c             	mov    0x4c(%eax),%edx
82002c92:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002c95:	c1 e0 02             	shl    $0x2,%eax
82002c98:	01 d0                	add    %edx,%eax
82002c9a:	8b 00                	mov    (%eax),%eax
82002c9c:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002c9f:	eb 1f                	jmp    82002cc0 <_reclaim_reent+0x5b>
82002ca1:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002ca4:	89 45 e8             	mov    %eax,-0x18(%ebp)
82002ca7:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002caa:	8b 00                	mov    (%eax),%eax
82002cac:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002caf:	83 ec 08             	sub    $0x8,%esp
82002cb2:	ff 75 e8             	push   -0x18(%ebp)
82002cb5:	ff 75 08             	push   0x8(%ebp)
82002cb8:	e8 4f e4 ff ff       	call   8200110c <_free_r>
82002cbd:	83 c4 10             	add    $0x10,%esp
82002cc0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82002cc4:	75 db                	jne    82002ca1 <_reclaim_reent+0x3c>
82002cc6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82002cca:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002ccd:	83 f8 1f             	cmp    $0x1f,%eax
82002cd0:	76 ba                	jbe    82002c8c <_reclaim_reent+0x27>
82002cd2:	8b 45 08             	mov    0x8(%ebp),%eax
82002cd5:	8b 40 4c             	mov    0x4c(%eax),%eax
82002cd8:	83 ec 08             	sub    $0x8,%esp
82002cdb:	50                   	push   %eax
82002cdc:	ff 75 08             	push   0x8(%ebp)
82002cdf:	e8 28 e4 ff ff       	call   8200110c <_free_r>
82002ce4:	83 c4 10             	add    $0x10,%esp
82002ce7:	8b 45 08             	mov    0x8(%ebp),%eax
82002cea:	8b 40 40             	mov    0x40(%eax),%eax
82002ced:	85 c0                	test   %eax,%eax
82002cef:	74 15                	je     82002d06 <_reclaim_reent+0xa1>
82002cf1:	8b 45 08             	mov    0x8(%ebp),%eax
82002cf4:	8b 40 40             	mov    0x40(%eax),%eax
82002cf7:	83 ec 08             	sub    $0x8,%esp
82002cfa:	50                   	push   %eax
82002cfb:	ff 75 08             	push   0x8(%ebp)
82002cfe:	e8 09 e4 ff ff       	call   8200110c <_free_r>
82002d03:	83 c4 10             	add    $0x10,%esp
82002d06:	8b 45 08             	mov    0x8(%ebp),%eax
82002d09:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002d0f:	85 c0                	test   %eax,%eax
82002d11:	74 50                	je     82002d63 <_reclaim_reent+0xfe>
82002d13:	8b 45 08             	mov    0x8(%ebp),%eax
82002d16:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002d1c:	8b 55 08             	mov    0x8(%ebp),%edx
82002d1f:	81 c2 4c 01 00 00    	add    $0x14c,%edx
82002d25:	39 d0                	cmp    %edx,%eax
82002d27:	74 3a                	je     82002d63 <_reclaim_reent+0xfe>
82002d29:	8b 45 08             	mov    0x8(%ebp),%eax
82002d2c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002d32:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002d35:	eb 1f                	jmp    82002d56 <_reclaim_reent+0xf1>
82002d37:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002d3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002d3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002d40:	8b 00                	mov    (%eax),%eax
82002d42:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002d45:	83 ec 08             	sub    $0x8,%esp
82002d48:	ff 75 e4             	push   -0x1c(%ebp)
82002d4b:	ff 75 08             	push   0x8(%ebp)
82002d4e:	e8 b9 e3 ff ff       	call   8200110c <_free_r>
82002d53:	83 c4 10             	add    $0x10,%esp
82002d56:	8b 45 08             	mov    0x8(%ebp),%eax
82002d59:	05 4c 01 00 00       	add    $0x14c,%eax
82002d5e:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82002d61:	75 d4                	jne    82002d37 <_reclaim_reent+0xd2>
82002d63:	8b 45 08             	mov    0x8(%ebp),%eax
82002d66:	8b 40 54             	mov    0x54(%eax),%eax
82002d69:	85 c0                	test   %eax,%eax
82002d6b:	74 15                	je     82002d82 <_reclaim_reent+0x11d>
82002d6d:	8b 45 08             	mov    0x8(%ebp),%eax
82002d70:	8b 40 54             	mov    0x54(%eax),%eax
82002d73:	83 ec 08             	sub    $0x8,%esp
82002d76:	50                   	push   %eax
82002d77:	ff 75 08             	push   0x8(%ebp)
82002d7a:	e8 8d e3 ff ff       	call   8200110c <_free_r>
82002d7f:	83 c4 10             	add    $0x10,%esp
82002d82:	8b 45 08             	mov    0x8(%ebp),%eax
82002d85:	8b 40 38             	mov    0x38(%eax),%eax
82002d88:	85 c0                	test   %eax,%eax
82002d8a:	74 36                	je     82002dc2 <_reclaim_reent+0x15d>
82002d8c:	8b 45 08             	mov    0x8(%ebp),%eax
82002d8f:	8b 40 3c             	mov    0x3c(%eax),%eax
82002d92:	83 ec 0c             	sub    $0xc,%esp
82002d95:	ff 75 08             	push   0x8(%ebp)
82002d98:	ff d0                	call   *%eax
82002d9a:	83 c4 10             	add    $0x10,%esp
82002d9d:	8b 45 08             	mov    0x8(%ebp),%eax
82002da0:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
82002da6:	85 c0                	test   %eax,%eax
82002da8:	74 18                	je     82002dc2 <_reclaim_reent+0x15d>
82002daa:	8b 45 08             	mov    0x8(%ebp),%eax
82002dad:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
82002db3:	83 ec 08             	sub    $0x8,%esp
82002db6:	50                   	push   %eax
82002db7:	ff 75 08             	push   0x8(%ebp)
82002dba:	e8 6f fe ff ff       	call   82002c2e <cleanup_glue>
82002dbf:	83 c4 10             	add    $0x10,%esp
82002dc2:	90                   	nop
82002dc3:	c9                   	leave  
82002dc4:	c3                   	ret    

82002dc5 <lflush>:
82002dc5:	55                   	push   %ebp
82002dc6:	89 e5                	mov    %esp,%ebp
82002dc8:	83 ec 08             	sub    $0x8,%esp
82002dcb:	8b 45 08             	mov    0x8(%ebp),%eax
82002dce:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002dd2:	98                   	cwtl   
82002dd3:	83 e0 09             	and    $0x9,%eax
82002dd6:	83 f8 09             	cmp    $0x9,%eax
82002dd9:	75 10                	jne    82002deb <lflush+0x26>
82002ddb:	83 ec 0c             	sub    $0xc,%esp
82002dde:	ff 75 08             	push   0x8(%ebp)
82002de1:	e8 5d db ff ff       	call   82000943 <fflush>
82002de6:	83 c4 10             	add    $0x10,%esp
82002de9:	eb 05                	jmp    82002df0 <lflush+0x2b>
82002deb:	b8 00 00 00 00       	mov    $0x0,%eax
82002df0:	c9                   	leave  
82002df1:	c3                   	ret    

82002df2 <__srefill_r>:
82002df2:	55                   	push   %ebp
82002df3:	89 e5                	mov    %esp,%ebp
82002df5:	56                   	push   %esi
82002df6:	53                   	push   %ebx
82002df7:	83 ec 10             	sub    $0x10,%esp
82002dfa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82002dfd:	8b 45 08             	mov    0x8(%ebp),%eax
82002e00:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002e03:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002e07:	74 18                	je     82002e21 <__srefill_r+0x2f>
82002e09:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002e0c:	8b 40 38             	mov    0x38(%eax),%eax
82002e0f:	85 c0                	test   %eax,%eax
82002e11:	75 0e                	jne    82002e21 <__srefill_r+0x2f>
82002e13:	83 ec 0c             	sub    $0xc,%esp
82002e16:	ff 75 f4             	push   -0xc(%ebp)
82002e19:	e8 53 de ff ff       	call   82000c71 <__sinit>
82002e1e:	83 c4 10             	add    $0x10,%esp
82002e21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e25:	98                   	cwtl   
82002e26:	25 00 20 00 00       	and    $0x2000,%eax
82002e2b:	85 c0                	test   %eax,%eax
82002e2d:	75 14                	jne    82002e43 <__srefill_r+0x51>
82002e2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e33:	80 cc 20             	or     $0x20,%ah
82002e36:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002e3a:	8b 43 64             	mov    0x64(%ebx),%eax
82002e3d:	80 e4 df             	and    $0xdf,%ah
82002e40:	89 43 64             	mov    %eax,0x64(%ebx)
82002e43:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82002e4a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e4e:	98                   	cwtl   
82002e4f:	83 e0 20             	and    $0x20,%eax
82002e52:	85 c0                	test   %eax,%eax
82002e54:	74 0a                	je     82002e60 <__srefill_r+0x6e>
82002e56:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002e5b:	e9 8c 01 00 00       	jmp    82002fec <__srefill_r+0x1fa>
82002e60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e64:	98                   	cwtl   
82002e65:	83 e0 04             	and    $0x4,%eax
82002e68:	85 c0                	test   %eax,%eax
82002e6a:	75 79                	jne    82002ee5 <__srefill_r+0xf3>
82002e6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e70:	98                   	cwtl   
82002e71:	83 e0 10             	and    $0x10,%eax
82002e74:	85 c0                	test   %eax,%eax
82002e76:	75 1e                	jne    82002e96 <__srefill_r+0xa4>
82002e78:	8b 45 08             	mov    0x8(%ebp),%eax
82002e7b:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
82002e81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e85:	83 c8 40             	or     $0x40,%eax
82002e88:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002e8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002e91:	e9 56 01 00 00       	jmp    82002fec <__srefill_r+0x1fa>
82002e96:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002e9a:	98                   	cwtl   
82002e9b:	83 e0 08             	and    $0x8,%eax
82002e9e:	85 c0                	test   %eax,%eax
82002ea0:	74 36                	je     82002ed8 <__srefill_r+0xe6>
82002ea2:	83 ec 08             	sub    $0x8,%esp
82002ea5:	53                   	push   %ebx
82002ea6:	ff 75 08             	push   0x8(%ebp)
82002ea9:	e8 3d da ff ff       	call   820008eb <_fflush_r>
82002eae:	83 c4 10             	add    $0x10,%esp
82002eb1:	85 c0                	test   %eax,%eax
82002eb3:	74 0a                	je     82002ebf <__srefill_r+0xcd>
82002eb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002eba:	e9 2d 01 00 00       	jmp    82002fec <__srefill_r+0x1fa>
82002ebf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002ec3:	83 e0 f7             	and    $0xfffffff7,%eax
82002ec6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002eca:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
82002ed1:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
82002ed8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002edc:	83 c8 04             	or     $0x4,%eax
82002edf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002ee3:	eb 46                	jmp    82002f2b <__srefill_r+0x139>
82002ee5:	8b 43 30             	mov    0x30(%ebx),%eax
82002ee8:	85 c0                	test   %eax,%eax
82002eea:	74 3f                	je     82002f2b <__srefill_r+0x139>
82002eec:	8b 53 30             	mov    0x30(%ebx),%edx
82002eef:	8d 43 40             	lea    0x40(%ebx),%eax
82002ef2:	39 c2                	cmp    %eax,%edx
82002ef4:	74 12                	je     82002f08 <__srefill_r+0x116>
82002ef6:	8b 43 30             	mov    0x30(%ebx),%eax
82002ef9:	83 ec 08             	sub    $0x8,%esp
82002efc:	50                   	push   %eax
82002efd:	ff 75 08             	push   0x8(%ebp)
82002f00:	e8 07 e2 ff ff       	call   8200110c <_free_r>
82002f05:	83 c4 10             	add    $0x10,%esp
82002f08:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82002f0f:	8b 43 3c             	mov    0x3c(%ebx),%eax
82002f12:	89 43 04             	mov    %eax,0x4(%ebx)
82002f15:	8b 43 04             	mov    0x4(%ebx),%eax
82002f18:	85 c0                	test   %eax,%eax
82002f1a:	74 0f                	je     82002f2b <__srefill_r+0x139>
82002f1c:	8b 43 38             	mov    0x38(%ebx),%eax
82002f1f:	89 03                	mov    %eax,(%ebx)
82002f21:	b8 00 00 00 00       	mov    $0x0,%eax
82002f26:	e9 c1 00 00 00       	jmp    82002fec <__srefill_r+0x1fa>
82002f2b:	8b 43 10             	mov    0x10(%ebx),%eax
82002f2e:	85 c0                	test   %eax,%eax
82002f30:	75 0f                	jne    82002f41 <__srefill_r+0x14f>
82002f32:	83 ec 08             	sub    $0x8,%esp
82002f35:	53                   	push   %ebx
82002f36:	ff 75 08             	push   0x8(%ebp)
82002f39:	e8 0b ee ff ff       	call   82001d49 <__smakebuf_r>
82002f3e:	83 c4 10             	add    $0x10,%esp
82002f41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002f45:	98                   	cwtl   
82002f46:	83 e0 03             	and    $0x3,%eax
82002f49:	85 c0                	test   %eax,%eax
82002f4b:	74 48                	je     82002f95 <__srefill_r+0x1a3>
82002f4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002f51:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
82002f55:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
82002f5b:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82002f60:	83 ec 08             	sub    $0x8,%esp
82002f63:	68 c5 2d 00 82       	push   $0x82002dc5
82002f68:	50                   	push   %eax
82002f69:	e8 2b ec ff ff       	call   82001b99 <_fwalk>
82002f6e:	83 c4 10             	add    $0x10,%esp
82002f71:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
82002f75:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002f79:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002f7d:	98                   	cwtl   
82002f7e:	83 e0 09             	and    $0x9,%eax
82002f81:	83 f8 09             	cmp    $0x9,%eax
82002f84:	75 0f                	jne    82002f95 <__srefill_r+0x1a3>
82002f86:	83 ec 08             	sub    $0x8,%esp
82002f89:	53                   	push   %ebx
82002f8a:	ff 75 08             	push   0x8(%ebp)
82002f8d:	e8 33 d7 ff ff       	call   820006c5 <__sflush_r>
82002f92:	83 c4 10             	add    $0x10,%esp
82002f95:	8b 43 10             	mov    0x10(%ebx),%eax
82002f98:	89 03                	mov    %eax,(%ebx)
82002f9a:	8b 43 20             	mov    0x20(%ebx),%eax
82002f9d:	8b 73 14             	mov    0x14(%ebx),%esi
82002fa0:	8b 0b                	mov    (%ebx),%ecx
82002fa2:	8b 53 1c             	mov    0x1c(%ebx),%edx
82002fa5:	56                   	push   %esi
82002fa6:	51                   	push   %ecx
82002fa7:	52                   	push   %edx
82002fa8:	ff 75 08             	push   0x8(%ebp)
82002fab:	ff d0                	call   *%eax
82002fad:	83 c4 10             	add    $0x10,%esp
82002fb0:	89 43 04             	mov    %eax,0x4(%ebx)
82002fb3:	8b 43 04             	mov    0x4(%ebx),%eax
82002fb6:	85 c0                	test   %eax,%eax
82002fb8:	7f 2d                	jg     82002fe7 <__srefill_r+0x1f5>
82002fba:	8b 43 04             	mov    0x4(%ebx),%eax
82002fbd:	85 c0                	test   %eax,%eax
82002fbf:	75 0d                	jne    82002fce <__srefill_r+0x1dc>
82002fc1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002fc5:	83 c8 20             	or     $0x20,%eax
82002fc8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002fcc:	eb 12                	jmp    82002fe0 <__srefill_r+0x1ee>
82002fce:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82002fd5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002fd9:	83 c8 40             	or     $0x40,%eax
82002fdc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002fe0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002fe5:	eb 05                	jmp    82002fec <__srefill_r+0x1fa>
82002fe7:	b8 00 00 00 00       	mov    $0x0,%eax
82002fec:	8d 65 f8             	lea    -0x8(%ebp),%esp
82002fef:	5b                   	pop    %ebx
82002ff0:	5e                   	pop    %esi
82002ff1:	5d                   	pop    %ebp
82002ff2:	c3                   	ret    

82002ff3 <_sbrk_r>:
82002ff3:	55                   	push   %ebp
82002ff4:	89 e5                	mov    %esp,%ebp
82002ff6:	83 ec 18             	sub    $0x18,%esp
82002ff9:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
82003000:	00 00 00 
82003003:	83 ec 0c             	sub    $0xc,%esp
82003006:	ff 75 0c             	push   0xc(%ebp)
82003009:	e8 73 d2 ff ff       	call   82000281 <sbrk>
8200300e:	83 c4 10             	add    $0x10,%esp
82003011:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003014:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82003018:	75 14                	jne    8200302e <_sbrk_r+0x3b>
8200301a:	a1 8c 64 00 82       	mov    0x8200648c,%eax
8200301f:	85 c0                	test   %eax,%eax
82003021:	74 0b                	je     8200302e <_sbrk_r+0x3b>
82003023:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82003029:	8b 45 08             	mov    0x8(%ebp),%eax
8200302c:	89 10                	mov    %edx,(%eax)
8200302e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003031:	c9                   	leave  
82003032:	c3                   	ret    

82003033 <__sread>:
82003033:	55                   	push   %ebp
82003034:	89 e5                	mov    %esp,%ebp
82003036:	56                   	push   %esi
82003037:	53                   	push   %ebx
82003038:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8200303b:	8b 55 14             	mov    0x14(%ebp),%edx
8200303e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82003042:	98                   	cwtl   
82003043:	52                   	push   %edx
82003044:	ff 75 10             	push   0x10(%ebp)
82003047:	50                   	push   %eax
82003048:	ff 75 08             	push   0x8(%ebp)
8200304b:	e8 7c 15 00 00       	call   820045cc <_read_r>
82003050:	83 c4 10             	add    $0x10,%esp
82003053:	89 c6                	mov    %eax,%esi
82003055:	85 f6                	test   %esi,%esi
82003057:	78 0a                	js     82003063 <__sread+0x30>
82003059:	8b 43 50             	mov    0x50(%ebx),%eax
8200305c:	01 f0                	add    %esi,%eax
8200305e:	89 43 50             	mov    %eax,0x50(%ebx)
82003061:	eb 0b                	jmp    8200306e <__sread+0x3b>
82003063:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003067:	80 e4 ef             	and    $0xef,%ah
8200306a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200306e:	89 f0                	mov    %esi,%eax
82003070:	8d 65 f8             	lea    -0x8(%ebp),%esp
82003073:	5b                   	pop    %ebx
82003074:	5e                   	pop    %esi
82003075:	5d                   	pop    %ebp
82003076:	c3                   	ret    

82003077 <__seofread>:
82003077:	55                   	push   %ebp
82003078:	89 e5                	mov    %esp,%ebp
8200307a:	b8 00 00 00 00       	mov    $0x0,%eax
8200307f:	5d                   	pop    %ebp
82003080:	c3                   	ret    

82003081 <__swrite>:
82003081:	55                   	push   %ebp
82003082:	89 e5                	mov    %esp,%ebp
82003084:	53                   	push   %ebx
82003085:	83 ec 14             	sub    $0x14,%esp
82003088:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8200308b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200308f:	98                   	cwtl   
82003090:	25 00 01 00 00       	and    $0x100,%eax
82003095:	85 c0                	test   %eax,%eax
82003097:	74 15                	je     820030ae <__swrite+0x2d>
82003099:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8200309d:	98                   	cwtl   
8200309e:	6a 02                	push   $0x2
820030a0:	6a 00                	push   $0x0
820030a2:	50                   	push   %eax
820030a3:	ff 75 08             	push   0x8(%ebp)
820030a6:	e8 51 08 00 00       	call   820038fc <_lseek_r>
820030ab:	83 c4 10             	add    $0x10,%esp
820030ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820030b2:	80 e4 ef             	and    $0xef,%ah
820030b5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820030b9:	8b 55 14             	mov    0x14(%ebp),%edx
820030bc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820030c0:	98                   	cwtl   
820030c1:	52                   	push   %edx
820030c2:	ff 75 10             	push   0x10(%ebp)
820030c5:	50                   	push   %eax
820030c6:	ff 75 08             	push   0x8(%ebp)
820030c9:	e8 fb 00 00 00       	call   820031c9 <_write_r>
820030ce:	83 c4 10             	add    $0x10,%esp
820030d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
820030d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
820030d7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820030da:	c9                   	leave  
820030db:	c3                   	ret    

820030dc <__sseek>:
820030dc:	55                   	push   %ebp
820030dd:	89 e5                	mov    %esp,%ebp
820030df:	56                   	push   %esi
820030e0:	53                   	push   %ebx
820030e1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820030e4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820030e8:	98                   	cwtl   
820030e9:	ff 75 14             	push   0x14(%ebp)
820030ec:	ff 75 10             	push   0x10(%ebp)
820030ef:	50                   	push   %eax
820030f0:	ff 75 08             	push   0x8(%ebp)
820030f3:	e8 04 08 00 00       	call   820038fc <_lseek_r>
820030f8:	83 c4 10             	add    $0x10,%esp
820030fb:	89 c6                	mov    %eax,%esi
820030fd:	83 fe ff             	cmp    $0xffffffff,%esi
82003100:	75 0d                	jne    8200310f <__sseek+0x33>
82003102:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003106:	80 e4 ef             	and    $0xef,%ah
82003109:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200310d:	eb 0e                	jmp    8200311d <__sseek+0x41>
8200310f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003113:	80 cc 10             	or     $0x10,%ah
82003116:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200311a:	89 73 50             	mov    %esi,0x50(%ebx)
8200311d:	89 f0                	mov    %esi,%eax
8200311f:	8d 65 f8             	lea    -0x8(%ebp),%esp
82003122:	5b                   	pop    %ebx
82003123:	5e                   	pop    %esi
82003124:	5d                   	pop    %ebp
82003125:	c3                   	ret    

82003126 <__sclose>:
82003126:	55                   	push   %ebp
82003127:	89 e5                	mov    %esp,%ebp
82003129:	83 ec 18             	sub    $0x18,%esp
8200312c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200312f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003132:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003135:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
82003139:	98                   	cwtl   
8200313a:	83 ec 08             	sub    $0x8,%esp
8200313d:	50                   	push   %eax
8200313e:	ff 75 08             	push   0x8(%ebp)
82003141:	e8 de 01 00 00       	call   82003324 <_close_r>
82003146:	83 c4 10             	add    $0x10,%esp
82003149:	c9                   	leave  
8200314a:	c3                   	ret    
8200314b:	66 90                	xchg   %ax,%ax
8200314d:	66 90                	xchg   %ax,%ax
8200314f:	90                   	nop

82003150 <strlen>:
82003150:	55                   	push   %ebp
82003151:	89 e5                	mov    %esp,%ebp
82003153:	57                   	push   %edi
82003154:	8b 55 08             	mov    0x8(%ebp),%edx
82003157:	89 d7                	mov    %edx,%edi
82003159:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200315f:	74 25                	je     82003186 <L5>
82003161:	8a 0f                	mov    (%edi),%cl
82003163:	47                   	inc    %edi
82003164:	84 c9                	test   %cl,%cl
82003166:	74 56                	je     820031be <L15>
82003168:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200316e:	74 16                	je     82003186 <L5>
82003170:	8a 0f                	mov    (%edi),%cl
82003172:	47                   	inc    %edi
82003173:	84 c9                	test   %cl,%cl
82003175:	74 47                	je     820031be <L15>
82003177:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200317d:	74 07                	je     82003186 <L5>
8200317f:	8a 0f                	mov    (%edi),%cl
82003181:	47                   	inc    %edi
82003182:	84 c9                	test   %cl,%cl
82003184:	74 38                	je     820031be <L15>

82003186 <L5>:
82003186:	83 ef 04             	sub    $0x4,%edi
82003189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

82003190 <L10>:
82003190:	83 c7 04             	add    $0x4,%edi
82003193:	8b 0f                	mov    (%edi),%ecx
82003195:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8200319b:	f7 d1                	not    %ecx
8200319d:	21 c8                	and    %ecx,%eax
8200319f:	a9 80 80 80 80       	test   $0x80808080,%eax
820031a4:	74 ea                	je     82003190 <L10>
820031a6:	f7 d1                	not    %ecx
820031a8:	47                   	inc    %edi
820031a9:	84 c9                	test   %cl,%cl
820031ab:	74 11                	je     820031be <L15>
820031ad:	47                   	inc    %edi
820031ae:	c1 e9 08             	shr    $0x8,%ecx
820031b1:	84 c9                	test   %cl,%cl
820031b3:	74 09                	je     820031be <L15>
820031b5:	47                   	inc    %edi
820031b6:	c1 e9 08             	shr    $0x8,%ecx
820031b9:	84 c9                	test   %cl,%cl
820031bb:	74 01                	je     820031be <L15>
820031bd:	47                   	inc    %edi

820031be <L15>:
820031be:	29 d7                	sub    %edx,%edi
820031c0:	8d 47 ff             	lea    -0x1(%edi),%eax
820031c3:	8d 65 fc             	lea    -0x4(%ebp),%esp
820031c6:	5f                   	pop    %edi
820031c7:	c9                   	leave  
820031c8:	c3                   	ret    

820031c9 <_write_r>:
820031c9:	55                   	push   %ebp
820031ca:	89 e5                	mov    %esp,%ebp
820031cc:	83 ec 18             	sub    $0x18,%esp
820031cf:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
820031d6:	00 00 00 
820031d9:	83 ec 04             	sub    $0x4,%esp
820031dc:	ff 75 14             	push   0x14(%ebp)
820031df:	ff 75 10             	push   0x10(%ebp)
820031e2:	ff 75 0c             	push   0xc(%ebp)
820031e5:	e8 d4 cf ff ff       	call   820001be <write>
820031ea:	83 c4 10             	add    $0x10,%esp
820031ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
820031f0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820031f4:	75 14                	jne    8200320a <_write_r+0x41>
820031f6:	a1 8c 64 00 82       	mov    0x8200648c,%eax
820031fb:	85 c0                	test   %eax,%eax
820031fd:	74 0b                	je     8200320a <_write_r+0x41>
820031ff:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82003205:	8b 45 08             	mov    0x8(%ebp),%eax
82003208:	89 10                	mov    %edx,(%eax)
8200320a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200320d:	c9                   	leave  
8200320e:	c3                   	ret    

8200320f <__call_exitprocs>:
8200320f:	55                   	push   %ebp
82003210:	89 e5                	mov    %esp,%ebp
82003212:	57                   	push   %edi
82003213:	56                   	push   %esi
82003214:	53                   	push   %ebx
82003215:	83 ec 1c             	sub    $0x1c,%esp
82003218:	a1 d4 56 00 82       	mov    0x820056d4,%eax
8200321d:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
82003223:	a1 d4 56 00 82       	mov    0x820056d4,%eax
82003228:	05 48 01 00 00       	add    $0x148,%eax
8200322d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003230:	90                   	nop
82003231:	85 db                	test   %ebx,%ebx
82003233:	0f 84 e1 00 00 00    	je     8200331a <__call_exitprocs+0x10b>
82003239:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
8200323f:	8b 43 04             	mov    0x4(%ebx),%eax
82003242:	8d 70 ff             	lea    -0x1(%eax),%esi
82003245:	e9 c6 00 00 00       	jmp    82003310 <__call_exitprocs+0x101>
8200324a:	b8 01 00 00 00       	mov    $0x1,%eax
8200324f:	89 f1                	mov    %esi,%ecx
82003251:	d3 e0                	shl    %cl,%eax
82003253:	89 45 e0             	mov    %eax,-0x20(%ebp)
82003256:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8200325a:	74 17                	je     82003273 <__call_exitprocs+0x64>
8200325c:	85 ff                	test   %edi,%edi
8200325e:	0f 84 a5 00 00 00    	je     82003309 <__call_exitprocs+0xfa>
82003264:	8d 46 20             	lea    0x20(%esi),%eax
82003267:	8b 04 87             	mov    (%edi,%eax,4),%eax
8200326a:	39 45 0c             	cmp    %eax,0xc(%ebp)
8200326d:	0f 85 96 00 00 00    	jne    82003309 <__call_exitprocs+0xfa>
82003273:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
82003277:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200327a:	8b 43 04             	mov    0x4(%ebx),%eax
8200327d:	83 e8 01             	sub    $0x1,%eax
82003280:	39 c6                	cmp    %eax,%esi
82003282:	75 0b                	jne    8200328f <__call_exitprocs+0x80>
82003284:	8b 43 04             	mov    0x4(%ebx),%eax
82003287:	83 e8 01             	sub    $0x1,%eax
8200328a:	89 43 04             	mov    %eax,0x4(%ebx)
8200328d:	eb 08                	jmp    82003297 <__call_exitprocs+0x88>
8200328f:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
82003296:	00 
82003297:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8200329b:	74 6f                	je     8200330c <__call_exitprocs+0xfd>
8200329d:	8b 43 04             	mov    0x4(%ebx),%eax
820032a0:	89 45 d8             	mov    %eax,-0x28(%ebp)
820032a3:	85 ff                	test   %edi,%edi
820032a5:	74 0f                	je     820032b6 <__call_exitprocs+0xa7>
820032a7:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
820032ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
820032b0:	21 d0                	and    %edx,%eax
820032b2:	85 c0                	test   %eax,%eax
820032b4:	75 07                	jne    820032bd <__call_exitprocs+0xae>
820032b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
820032b9:	ff d0                	call   *%eax
820032bb:	eb 32                	jmp    820032ef <__call_exitprocs+0xe0>
820032bd:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
820032c3:	8b 45 e0             	mov    -0x20(%ebp),%eax
820032c6:	21 d0                	and    %edx,%eax
820032c8:	85 c0                	test   %eax,%eax
820032ca:	75 14                	jne    820032e0 <__call_exitprocs+0xd1>
820032cc:	8b 04 b7             	mov    (%edi,%esi,4),%eax
820032cf:	83 ec 08             	sub    $0x8,%esp
820032d2:	50                   	push   %eax
820032d3:	ff 75 08             	push   0x8(%ebp)
820032d6:	8b 45 dc             	mov    -0x24(%ebp),%eax
820032d9:	ff d0                	call   *%eax
820032db:	83 c4 10             	add    $0x10,%esp
820032de:	eb 0f                	jmp    820032ef <__call_exitprocs+0xe0>
820032e0:	8b 04 b7             	mov    (%edi,%esi,4),%eax
820032e3:	83 ec 0c             	sub    $0xc,%esp
820032e6:	50                   	push   %eax
820032e7:	8b 45 dc             	mov    -0x24(%ebp),%eax
820032ea:	ff d0                	call   *%eax
820032ec:	83 c4 10             	add    $0x10,%esp
820032ef:	8b 43 04             	mov    0x4(%ebx),%eax
820032f2:	39 45 d8             	cmp    %eax,-0x28(%ebp)
820032f5:	0f 85 1d ff ff ff    	jne    82003218 <__call_exitprocs+0x9>
820032fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820032fe:	8b 00                	mov    (%eax),%eax
82003300:	39 c3                	cmp    %eax,%ebx
82003302:	74 09                	je     8200330d <__call_exitprocs+0xfe>
82003304:	e9 0f ff ff ff       	jmp    82003218 <__call_exitprocs+0x9>
82003309:	90                   	nop
8200330a:	eb 01                	jmp    8200330d <__call_exitprocs+0xfe>
8200330c:	90                   	nop
8200330d:	83 ee 01             	sub    $0x1,%esi
82003310:	85 f6                	test   %esi,%esi
82003312:	0f 89 32 ff ff ff    	jns    8200324a <__call_exitprocs+0x3b>
82003318:	eb 01                	jmp    8200331b <__call_exitprocs+0x10c>
8200331a:	90                   	nop
8200331b:	90                   	nop
8200331c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8200331f:	5b                   	pop    %ebx
82003320:	5e                   	pop    %esi
82003321:	5f                   	pop    %edi
82003322:	5d                   	pop    %ebp
82003323:	c3                   	ret    

82003324 <_close_r>:
82003324:	55                   	push   %ebp
82003325:	89 e5                	mov    %esp,%ebp
82003327:	83 ec 18             	sub    $0x18,%esp
8200332a:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
82003331:	00 00 00 
82003334:	83 ec 0c             	sub    $0xc,%esp
82003337:	ff 75 0c             	push   0xc(%ebp)
8200333a:	e8 ac ce ff ff       	call   820001eb <close>
8200333f:	83 c4 10             	add    $0x10,%esp
82003342:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003345:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82003349:	75 14                	jne    8200335f <_close_r+0x3b>
8200334b:	a1 8c 64 00 82       	mov    0x8200648c,%eax
82003350:	85 c0                	test   %eax,%eax
82003352:	74 0b                	je     8200335f <_close_r+0x3b>
82003354:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
8200335a:	8b 45 08             	mov    0x8(%ebp),%eax
8200335d:	89 10                	mov    %edx,(%eax)
8200335f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003362:	c9                   	leave  
82003363:	c3                   	ret    

82003364 <__sflags>:
82003364:	55                   	push   %ebp
82003365:	89 e5                	mov    %esp,%ebp
82003367:	57                   	push   %edi
82003368:	56                   	push   %esi
82003369:	53                   	push   %ebx
8200336a:	8b 55 0c             	mov    0xc(%ebp),%edx
8200336d:	0f b6 02             	movzbl (%edx),%eax
82003370:	0f be c0             	movsbl %al,%eax
82003373:	83 f8 77             	cmp    $0x77,%eax
82003376:	74 20                	je     82003398 <__sflags+0x34>
82003378:	83 f8 77             	cmp    $0x77,%eax
8200337b:	7f 3d                	jg     820033ba <__sflags+0x56>
8200337d:	83 f8 61             	cmp    $0x61,%eax
82003380:	74 27                	je     820033a9 <__sflags+0x45>
82003382:	83 f8 72             	cmp    $0x72,%eax
82003385:	75 33                	jne    820033ba <__sflags+0x56>
82003387:	be 04 00 00 00       	mov    $0x4,%esi
8200338c:	bb 00 00 00 00       	mov    $0x0,%ebx
82003391:	bf 00 00 00 00       	mov    $0x0,%edi
82003396:	eb 32                	jmp    820033ca <__sflags+0x66>
82003398:	be 08 00 00 00       	mov    $0x8,%esi
8200339d:	bb 01 00 00 00       	mov    $0x1,%ebx
820033a2:	bf 00 06 00 00       	mov    $0x600,%edi
820033a7:	eb 21                	jmp    820033ca <__sflags+0x66>
820033a9:	be 08 01 00 00       	mov    $0x108,%esi
820033ae:	bb 01 00 00 00       	mov    $0x1,%ebx
820033b3:	bf 08 02 00 00       	mov    $0x208,%edi
820033b8:	eb 10                	jmp    820033ca <__sflags+0x66>
820033ba:	8b 45 08             	mov    0x8(%ebp),%eax
820033bd:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
820033c3:	b8 00 00 00 00       	mov    $0x0,%eax
820033c8:	eb 4f                	jmp    82003419 <__sflags+0xb5>
820033ca:	eb 38                	jmp    82003404 <__sflags+0xa0>
820033cc:	0f b6 02             	movzbl (%edx),%eax
820033cf:	0f be c0             	movsbl %al,%eax
820033d2:	83 f8 78             	cmp    $0x78,%eax
820033d5:	74 27                	je     820033fe <__sflags+0x9a>
820033d7:	83 f8 78             	cmp    $0x78,%eax
820033da:	7f 27                	jg     82003403 <__sflags+0x9f>
820033dc:	83 f8 2b             	cmp    $0x2b,%eax
820033df:	74 07                	je     820033e8 <__sflags+0x84>
820033e1:	83 f8 62             	cmp    $0x62,%eax
820033e4:	74 1e                	je     82003404 <__sflags+0xa0>
820033e6:	eb 1b                	jmp    82003403 <__sflags+0x9f>
820033e8:	89 f0                	mov    %esi,%eax
820033ea:	83 e0 e3             	and    $0xffffffe3,%eax
820033ed:	83 c8 10             	or     $0x10,%eax
820033f0:	89 c6                	mov    %eax,%esi
820033f2:	89 d8                	mov    %ebx,%eax
820033f4:	83 e0 fc             	and    $0xfffffffc,%eax
820033f7:	83 c8 02             	or     $0x2,%eax
820033fa:	89 c3                	mov    %eax,%ebx
820033fc:	eb 06                	jmp    82003404 <__sflags+0xa0>
820033fe:	80 cf 08             	or     $0x8,%bh
82003401:	eb 01                	jmp    82003404 <__sflags+0xa0>
82003403:	90                   	nop
82003404:	83 c2 01             	add    $0x1,%edx
82003407:	0f b6 02             	movzbl (%edx),%eax
8200340a:	84 c0                	test   %al,%al
8200340c:	75 be                	jne    820033cc <__sflags+0x68>
8200340e:	89 da                	mov    %ebx,%edx
82003410:	09 fa                	or     %edi,%edx
82003412:	8b 45 10             	mov    0x10(%ebp),%eax
82003415:	89 10                	mov    %edx,(%eax)
82003417:	89 f0                	mov    %esi,%eax
82003419:	5b                   	pop    %ebx
8200341a:	5e                   	pop    %esi
8200341b:	5f                   	pop    %edi
8200341c:	5d                   	pop    %ebp
8200341d:	c3                   	ret    

8200341e <__sfvwrite_r>:
8200341e:	55                   	push   %ebp
8200341f:	89 e5                	mov    %esp,%ebp
82003421:	57                   	push   %edi
82003422:	56                   	push   %esi
82003423:	53                   	push   %ebx
82003424:	83 ec 3c             	sub    $0x3c,%esp
82003427:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8200342a:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
82003431:	8b 45 10             	mov    0x10(%ebp),%eax
82003434:	8b 78 08             	mov    0x8(%eax),%edi
82003437:	85 ff                	test   %edi,%edi
82003439:	75 0a                	jne    82003445 <__sfvwrite_r+0x27>
8200343b:	b8 00 00 00 00       	mov    $0x0,%eax
82003440:	e9 6f 04 00 00       	jmp    820038b4 <__sfvwrite_r+0x496>
82003445:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003449:	98                   	cwtl   
8200344a:	83 e0 08             	and    $0x8,%eax
8200344d:	85 c0                	test   %eax,%eax
8200344f:	74 07                	je     82003458 <__sfvwrite_r+0x3a>
82003451:	8b 43 10             	mov    0x10(%ebx),%eax
82003454:	85 c0                	test   %eax,%eax
82003456:	75 1d                	jne    82003475 <__sfvwrite_r+0x57>
82003458:	83 ec 08             	sub    $0x8,%esp
8200345b:	53                   	push   %ebx
8200345c:	ff 75 08             	push   0x8(%ebp)
8200345f:	e8 bb 1b 00 00       	call   8200501f <__swsetup_r>
82003464:	83 c4 10             	add    $0x10,%esp
82003467:	85 c0                	test   %eax,%eax
82003469:	74 0a                	je     82003475 <__sfvwrite_r+0x57>
8200346b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82003470:	e9 3f 04 00 00       	jmp    820038b4 <__sfvwrite_r+0x496>
82003475:	8b 45 10             	mov    0x10(%ebp),%eax
82003478:	8b 00                	mov    (%eax),%eax
8200347a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8200347d:	bf 00 00 00 00       	mov    $0x0,%edi
82003482:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003486:	98                   	cwtl   
82003487:	83 e0 02             	and    $0x2,%eax
8200348a:	85 c0                	test   %eax,%eax
8200348c:	74 68                	je     820034f6 <__sfvwrite_r+0xd8>
8200348e:	eb 11                	jmp    820034a1 <__sfvwrite_r+0x83>
82003490:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003493:	8b 08                	mov    (%eax),%ecx
82003495:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82003498:	8b 78 04             	mov    0x4(%eax),%edi
8200349b:	83 c0 08             	add    $0x8,%eax
8200349e:	89 45 c0             	mov    %eax,-0x40(%ebp)
820034a1:	85 ff                	test   %edi,%edi
820034a3:	74 eb                	je     82003490 <__sfvwrite_r+0x72>
820034a5:	8b 4b 24             	mov    0x24(%ebx),%ecx
820034a8:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
820034ad:	39 c7                	cmp    %eax,%edi
820034af:	0f 46 c7             	cmovbe %edi,%eax
820034b2:	89 c2                	mov    %eax,%edx
820034b4:	8b 43 1c             	mov    0x1c(%ebx),%eax
820034b7:	52                   	push   %edx
820034b8:	ff 75 c4             	push   -0x3c(%ebp)
820034bb:	50                   	push   %eax
820034bc:	ff 75 08             	push   0x8(%ebp)
820034bf:	ff d1                	call   *%ecx
820034c1:	83 c4 10             	add    $0x10,%esp
820034c4:	89 c6                	mov    %eax,%esi
820034c6:	85 f6                	test   %esi,%esi
820034c8:	0f 8e cf 03 00 00    	jle    8200389d <__sfvwrite_r+0x47f>
820034ce:	89 f0                	mov    %esi,%eax
820034d0:	01 45 c4             	add    %eax,-0x3c(%ebp)
820034d3:	89 f0                	mov    %esi,%eax
820034d5:	29 c7                	sub    %eax,%edi
820034d7:	8b 45 10             	mov    0x10(%ebp),%eax
820034da:	8b 40 08             	mov    0x8(%eax),%eax
820034dd:	89 f2                	mov    %esi,%edx
820034df:	29 d0                	sub    %edx,%eax
820034e1:	8b 4d 10             	mov    0x10(%ebp),%ecx
820034e4:	89 41 08             	mov    %eax,0x8(%ecx)
820034e7:	8b 45 10             	mov    0x10(%ebp),%eax
820034ea:	8b 40 08             	mov    0x8(%eax),%eax
820034ed:	85 c0                	test   %eax,%eax
820034ef:	75 b0                	jne    820034a1 <__sfvwrite_r+0x83>
820034f1:	e9 a0 03 00 00       	jmp    82003896 <__sfvwrite_r+0x478>
820034f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820034fa:	98                   	cwtl   
820034fb:	83 e0 01             	and    $0x1,%eax
820034fe:	85 c0                	test   %eax,%eax
82003500:	0f 85 44 02 00 00    	jne    8200374a <__sfvwrite_r+0x32c>
82003506:	eb 11                	jmp    82003519 <__sfvwrite_r+0xfb>
82003508:	8b 45 c0             	mov    -0x40(%ebp),%eax
8200350b:	8b 08                	mov    (%eax),%ecx
8200350d:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82003510:	8b 78 04             	mov    0x4(%eax),%edi
82003513:	83 c0 08             	add    $0x8,%eax
82003516:	89 45 c0             	mov    %eax,-0x40(%ebp)
82003519:	85 ff                	test   %edi,%edi
8200351b:	74 eb                	je     82003508 <__sfvwrite_r+0xea>
8200351d:	8b 73 08             	mov    0x8(%ebx),%esi
82003520:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003524:	98                   	cwtl   
82003525:	25 00 02 00 00       	and    $0x200,%eax
8200352a:	85 c0                	test   %eax,%eax
8200352c:	0f 84 4f 01 00 00    	je     82003681 <__sfvwrite_r+0x263>
82003532:	89 f0                	mov    %esi,%eax
82003534:	39 c7                	cmp    %eax,%edi
82003536:	0f 82 12 01 00 00    	jb     8200364e <__sfvwrite_r+0x230>
8200353c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003540:	98                   	cwtl   
82003541:	25 80 04 00 00       	and    $0x480,%eax
82003546:	85 c0                	test   %eax,%eax
82003548:	0f 84 00 01 00 00    	je     8200364e <__sfvwrite_r+0x230>
8200354e:	8b 03                	mov    (%ebx),%eax
82003550:	8b 53 10             	mov    0x10(%ebx),%edx
82003553:	29 d0                	sub    %edx,%eax
82003555:	89 45 d0             	mov    %eax,-0x30(%ebp)
82003558:	8b 53 14             	mov    0x14(%ebx),%edx
8200355b:	89 d0                	mov    %edx,%eax
8200355d:	01 c0                	add    %eax,%eax
8200355f:	01 d0                	add    %edx,%eax
82003561:	89 c2                	mov    %eax,%edx
82003563:	c1 ea 1f             	shr    $0x1f,%edx
82003566:	01 d0                	add    %edx,%eax
82003568:	d1 f8                	sar    %eax
8200356a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200356d:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003570:	01 f8                	add    %edi,%eax
82003572:	8d 50 01             	lea    0x1(%eax),%edx
82003575:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003578:	39 c2                	cmp    %eax,%edx
8200357a:	76 0b                	jbe    82003587 <__sfvwrite_r+0x169>
8200357c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200357f:	01 f8                	add    %edi,%eax
82003581:	83 c0 01             	add    $0x1,%eax
82003584:	89 45 d8             	mov    %eax,-0x28(%ebp)
82003587:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200358b:	98                   	cwtl   
8200358c:	25 00 04 00 00       	and    $0x400,%eax
82003591:	85 c0                	test   %eax,%eax
82003593:	74 4f                	je     820035e4 <__sfvwrite_r+0x1c6>
82003595:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003598:	83 ec 08             	sub    $0x8,%esp
8200359b:	50                   	push   %eax
8200359c:	ff 75 08             	push   0x8(%ebp)
8200359f:	e8 f1 eb ff ff       	call   82002195 <_malloc_r>
820035a4:	83 c4 10             	add    $0x10,%esp
820035a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
820035aa:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
820035ae:	75 0e                	jne    820035be <__sfvwrite_r+0x1a0>
820035b0:	8b 45 08             	mov    0x8(%ebp),%eax
820035b3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
820035b9:	e9 e6 02 00 00       	jmp    820038a4 <__sfvwrite_r+0x486>
820035be:	8b 55 d0             	mov    -0x30(%ebp),%edx
820035c1:	8b 43 10             	mov    0x10(%ebx),%eax
820035c4:	83 ec 04             	sub    $0x4,%esp
820035c7:	52                   	push   %edx
820035c8:	50                   	push   %eax
820035c9:	ff 75 dc             	push   -0x24(%ebp)
820035cc:	e8 e7 f3 ff ff       	call   820029b8 <memcpy>
820035d1:	83 c4 10             	add    $0x10,%esp
820035d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820035d8:	66 25 7f fb          	and    $0xfb7f,%ax
820035dc:	0c 80                	or     $0x80,%al
820035de:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820035e2:	eb 49                	jmp    8200362d <__sfvwrite_r+0x20f>
820035e4:	8b 55 d8             	mov    -0x28(%ebp),%edx
820035e7:	8b 43 10             	mov    0x10(%ebx),%eax
820035ea:	83 ec 04             	sub    $0x4,%esp
820035ed:	52                   	push   %edx
820035ee:	50                   	push   %eax
820035ef:	ff 75 08             	push   0x8(%ebp)
820035f2:	e8 1b 10 00 00       	call   82004612 <_realloc_r>
820035f7:	83 c4 10             	add    $0x10,%esp
820035fa:	89 45 dc             	mov    %eax,-0x24(%ebp)
820035fd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
82003601:	75 2a                	jne    8200362d <__sfvwrite_r+0x20f>
82003603:	8b 43 10             	mov    0x10(%ebx),%eax
82003606:	83 ec 08             	sub    $0x8,%esp
82003609:	50                   	push   %eax
8200360a:	ff 75 08             	push   0x8(%ebp)
8200360d:	e8 fa da ff ff       	call   8200110c <_free_r>
82003612:	83 c4 10             	add    $0x10,%esp
82003615:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003619:	24 7f                	and    $0x7f,%al
8200361b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200361f:	8b 45 08             	mov    0x8(%ebp),%eax
82003622:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82003628:	e9 77 02 00 00       	jmp    820038a4 <__sfvwrite_r+0x486>
8200362d:	8b 45 dc             	mov    -0x24(%ebp),%eax
82003630:	89 43 10             	mov    %eax,0x10(%ebx)
82003633:	8b 55 d0             	mov    -0x30(%ebp),%edx
82003636:	8b 45 dc             	mov    -0x24(%ebp),%eax
82003639:	01 d0                	add    %edx,%eax
8200363b:	89 03                	mov    %eax,(%ebx)
8200363d:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003640:	89 43 14             	mov    %eax,0x14(%ebx)
82003643:	89 fe                	mov    %edi,%esi
82003645:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003648:	2b 45 d0             	sub    -0x30(%ebp),%eax
8200364b:	89 43 08             	mov    %eax,0x8(%ebx)
8200364e:	89 f0                	mov    %esi,%eax
82003650:	39 c7                	cmp    %eax,%edi
82003652:	73 02                	jae    82003656 <__sfvwrite_r+0x238>
82003654:	89 fe                	mov    %edi,%esi
82003656:	89 f2                	mov    %esi,%edx
82003658:	8b 03                	mov    (%ebx),%eax
8200365a:	83 ec 04             	sub    $0x4,%esp
8200365d:	52                   	push   %edx
8200365e:	ff 75 c4             	push   -0x3c(%ebp)
82003661:	50                   	push   %eax
82003662:	e8 89 03 00 00       	call   820039f0 <memmove>
82003667:	83 c4 10             	add    $0x10,%esp
8200366a:	8b 43 08             	mov    0x8(%ebx),%eax
8200366d:	29 f0                	sub    %esi,%eax
8200366f:	89 43 08             	mov    %eax,0x8(%ebx)
82003672:	8b 03                	mov    (%ebx),%eax
82003674:	89 f2                	mov    %esi,%edx
82003676:	01 d0                	add    %edx,%eax
82003678:	89 03                	mov    %eax,(%ebx)
8200367a:	89 fe                	mov    %edi,%esi
8200367c:	e9 9d 00 00 00       	jmp    8200371e <__sfvwrite_r+0x300>
82003681:	8b 13                	mov    (%ebx),%edx
82003683:	8b 43 10             	mov    0x10(%ebx),%eax
82003686:	39 c2                	cmp    %eax,%edx
82003688:	77 07                	ja     82003691 <__sfvwrite_r+0x273>
8200368a:	8b 43 14             	mov    0x14(%ebx),%eax
8200368d:	39 c7                	cmp    %eax,%edi
8200368f:	73 4c                	jae    820036dd <__sfvwrite_r+0x2bf>
82003691:	89 f0                	mov    %esi,%eax
82003693:	39 c7                	cmp    %eax,%edi
82003695:	0f 46 c7             	cmovbe %edi,%eax
82003698:	89 c6                	mov    %eax,%esi
8200369a:	89 f2                	mov    %esi,%edx
8200369c:	8b 03                	mov    (%ebx),%eax
8200369e:	83 ec 04             	sub    $0x4,%esp
820036a1:	52                   	push   %edx
820036a2:	ff 75 c4             	push   -0x3c(%ebp)
820036a5:	50                   	push   %eax
820036a6:	e8 45 03 00 00       	call   820039f0 <memmove>
820036ab:	83 c4 10             	add    $0x10,%esp
820036ae:	8b 43 08             	mov    0x8(%ebx),%eax
820036b1:	29 f0                	sub    %esi,%eax
820036b3:	89 43 08             	mov    %eax,0x8(%ebx)
820036b6:	8b 03                	mov    (%ebx),%eax
820036b8:	89 f2                	mov    %esi,%edx
820036ba:	01 d0                	add    %edx,%eax
820036bc:	89 03                	mov    %eax,(%ebx)
820036be:	8b 43 08             	mov    0x8(%ebx),%eax
820036c1:	85 c0                	test   %eax,%eax
820036c3:	75 58                	jne    8200371d <__sfvwrite_r+0x2ff>
820036c5:	83 ec 08             	sub    $0x8,%esp
820036c8:	53                   	push   %ebx
820036c9:	ff 75 08             	push   0x8(%ebp)
820036cc:	e8 1a d2 ff ff       	call   820008eb <_fflush_r>
820036d1:	83 c4 10             	add    $0x10,%esp
820036d4:	85 c0                	test   %eax,%eax
820036d6:	74 45                	je     8200371d <__sfvwrite_r+0x2ff>
820036d8:	e9 c7 01 00 00       	jmp    820038a4 <__sfvwrite_r+0x486>
820036dd:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
820036e3:	77 04                	ja     820036e9 <__sfvwrite_r+0x2cb>
820036e5:	89 f8                	mov    %edi,%eax
820036e7:	eb 05                	jmp    820036ee <__sfvwrite_r+0x2d0>
820036e9:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
820036ee:	8b 4b 14             	mov    0x14(%ebx),%ecx
820036f1:	99                   	cltd   
820036f2:	f7 f9                	idiv   %ecx
820036f4:	89 c2                	mov    %eax,%edx
820036f6:	8b 43 14             	mov    0x14(%ebx),%eax
820036f9:	89 d6                	mov    %edx,%esi
820036fb:	0f af f0             	imul   %eax,%esi
820036fe:	8b 53 24             	mov    0x24(%ebx),%edx
82003701:	8b 43 1c             	mov    0x1c(%ebx),%eax
82003704:	56                   	push   %esi
82003705:	ff 75 c4             	push   -0x3c(%ebp)
82003708:	50                   	push   %eax
82003709:	ff 75 08             	push   0x8(%ebp)
8200370c:	ff d2                	call   *%edx
8200370e:	83 c4 10             	add    $0x10,%esp
82003711:	89 c6                	mov    %eax,%esi
82003713:	85 f6                	test   %esi,%esi
82003715:	0f 8e 85 01 00 00    	jle    820038a0 <__sfvwrite_r+0x482>
8200371b:	eb 01                	jmp    8200371e <__sfvwrite_r+0x300>
8200371d:	90                   	nop
8200371e:	89 f0                	mov    %esi,%eax
82003720:	01 45 c4             	add    %eax,-0x3c(%ebp)
82003723:	89 f0                	mov    %esi,%eax
82003725:	29 c7                	sub    %eax,%edi
82003727:	8b 45 10             	mov    0x10(%ebp),%eax
8200372a:	8b 40 08             	mov    0x8(%eax),%eax
8200372d:	89 f2                	mov    %esi,%edx
8200372f:	29 d0                	sub    %edx,%eax
82003731:	8b 4d 10             	mov    0x10(%ebp),%ecx
82003734:	89 41 08             	mov    %eax,0x8(%ecx)
82003737:	8b 45 10             	mov    0x10(%ebp),%eax
8200373a:	8b 40 08             	mov    0x8(%eax),%eax
8200373d:	85 c0                	test   %eax,%eax
8200373f:	0f 85 d4 fd ff ff    	jne    82003519 <__sfvwrite_r+0xfb>
82003745:	e9 4c 01 00 00       	jmp    82003896 <__sfvwrite_r+0x478>
8200374a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82003751:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
82003758:	eb 18                	jmp    82003772 <__sfvwrite_r+0x354>
8200375a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82003761:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003764:	8b 08                	mov    (%eax),%ecx
82003766:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82003769:	8b 78 04             	mov    0x4(%eax),%edi
8200376c:	83 c0 08             	add    $0x8,%eax
8200376f:	89 45 c0             	mov    %eax,-0x40(%ebp)
82003772:	85 ff                	test   %edi,%edi
82003774:	74 e4                	je     8200375a <__sfvwrite_r+0x33c>
82003776:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8200377a:	75 32                	jne    820037ae <__sfvwrite_r+0x390>
8200377c:	83 ec 04             	sub    $0x4,%esp
8200377f:	57                   	push   %edi
82003780:	6a 0a                	push   $0xa
82003782:	8b 75 c4             	mov    -0x3c(%ebp),%esi
82003785:	56                   	push   %esi
82003786:	e8 c5 01 00 00       	call   82003950 <memchr>
8200378b:	83 c4 10             	add    $0x10,%esp
8200378e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003791:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
82003795:	74 0a                	je     820037a1 <__sfvwrite_r+0x383>
82003797:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200379a:	83 c0 01             	add    $0x1,%eax
8200379d:	29 f0                	sub    %esi,%eax
8200379f:	eb 03                	jmp    820037a4 <__sfvwrite_r+0x386>
820037a1:	8d 47 01             	lea    0x1(%edi),%eax
820037a4:	89 45 e0             	mov    %eax,-0x20(%ebp)
820037a7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
820037ae:	8b 45 e0             	mov    -0x20(%ebp),%eax
820037b1:	39 c7                	cmp    %eax,%edi
820037b3:	0f 46 c7             	cmovbe %edi,%eax
820037b6:	89 c1                	mov    %eax,%ecx
820037b8:	8b 53 08             	mov    0x8(%ebx),%edx
820037bb:	8b 43 14             	mov    0x14(%ebx),%eax
820037be:	8d 34 02             	lea    (%edx,%eax,1),%esi
820037c1:	8b 13                	mov    (%ebx),%edx
820037c3:	8b 43 10             	mov    0x10(%ebx),%eax
820037c6:	39 c2                	cmp    %eax,%edx
820037c8:	76 38                	jbe    82003802 <__sfvwrite_r+0x3e4>
820037ca:	39 f1                	cmp    %esi,%ecx
820037cc:	7e 34                	jle    82003802 <__sfvwrite_r+0x3e4>
820037ce:	89 f2                	mov    %esi,%edx
820037d0:	8b 03                	mov    (%ebx),%eax
820037d2:	83 ec 04             	sub    $0x4,%esp
820037d5:	52                   	push   %edx
820037d6:	ff 75 c4             	push   -0x3c(%ebp)
820037d9:	50                   	push   %eax
820037da:	e8 11 02 00 00       	call   820039f0 <memmove>
820037df:	83 c4 10             	add    $0x10,%esp
820037e2:	8b 03                	mov    (%ebx),%eax
820037e4:	89 f2                	mov    %esi,%edx
820037e6:	01 d0                	add    %edx,%eax
820037e8:	89 03                	mov    %eax,(%ebx)
820037ea:	83 ec 08             	sub    $0x8,%esp
820037ed:	53                   	push   %ebx
820037ee:	ff 75 08             	push   0x8(%ebp)
820037f1:	e8 f5 d0 ff ff       	call   820008eb <_fflush_r>
820037f6:	83 c4 10             	add    $0x10,%esp
820037f9:	85 c0                	test   %eax,%eax
820037fb:	74 4f                	je     8200384c <__sfvwrite_r+0x42e>
820037fd:	e9 a2 00 00 00       	jmp    820038a4 <__sfvwrite_r+0x486>
82003802:	8b 73 14             	mov    0x14(%ebx),%esi
82003805:	89 c8                	mov    %ecx,%eax
82003807:	39 c6                	cmp    %eax,%esi
82003809:	7f 1b                	jg     82003826 <__sfvwrite_r+0x408>
8200380b:	8b 53 24             	mov    0x24(%ebx),%edx
8200380e:	8b 43 1c             	mov    0x1c(%ebx),%eax
82003811:	56                   	push   %esi
82003812:	ff 75 c4             	push   -0x3c(%ebp)
82003815:	50                   	push   %eax
82003816:	ff 75 08             	push   0x8(%ebp)
82003819:	ff d2                	call   *%edx
8200381b:	83 c4 10             	add    $0x10,%esp
8200381e:	89 c6                	mov    %eax,%esi
82003820:	85 f6                	test   %esi,%esi
82003822:	7f 28                	jg     8200384c <__sfvwrite_r+0x42e>
82003824:	eb 7e                	jmp    820038a4 <__sfvwrite_r+0x486>
82003826:	89 ce                	mov    %ecx,%esi
82003828:	89 f2                	mov    %esi,%edx
8200382a:	8b 03                	mov    (%ebx),%eax
8200382c:	83 ec 04             	sub    $0x4,%esp
8200382f:	52                   	push   %edx
82003830:	ff 75 c4             	push   -0x3c(%ebp)
82003833:	50                   	push   %eax
82003834:	e8 b7 01 00 00       	call   820039f0 <memmove>
82003839:	83 c4 10             	add    $0x10,%esp
8200383c:	8b 43 08             	mov    0x8(%ebx),%eax
8200383f:	29 f0                	sub    %esi,%eax
82003841:	89 43 08             	mov    %eax,0x8(%ebx)
82003844:	8b 03                	mov    (%ebx),%eax
82003846:	89 f2                	mov    %esi,%edx
82003848:	01 d0                	add    %edx,%eax
8200384a:	89 03                	mov    %eax,(%ebx)
8200384c:	29 75 e0             	sub    %esi,-0x20(%ebp)
8200384f:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
82003853:	75 1a                	jne    8200386f <__sfvwrite_r+0x451>
82003855:	83 ec 08             	sub    $0x8,%esp
82003858:	53                   	push   %ebx
82003859:	ff 75 08             	push   0x8(%ebp)
8200385c:	e8 8a d0 ff ff       	call   820008eb <_fflush_r>
82003861:	83 c4 10             	add    $0x10,%esp
82003864:	85 c0                	test   %eax,%eax
82003866:	75 3b                	jne    820038a3 <__sfvwrite_r+0x485>
82003868:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8200386f:	89 f0                	mov    %esi,%eax
82003871:	01 45 c4             	add    %eax,-0x3c(%ebp)
82003874:	89 f0                	mov    %esi,%eax
82003876:	29 c7                	sub    %eax,%edi
82003878:	8b 45 10             	mov    0x10(%ebp),%eax
8200387b:	8b 40 08             	mov    0x8(%eax),%eax
8200387e:	89 f2                	mov    %esi,%edx
82003880:	29 d0                	sub    %edx,%eax
82003882:	8b 4d 10             	mov    0x10(%ebp),%ecx
82003885:	89 41 08             	mov    %eax,0x8(%ecx)
82003888:	8b 45 10             	mov    0x10(%ebp),%eax
8200388b:	8b 40 08             	mov    0x8(%eax),%eax
8200388e:	85 c0                	test   %eax,%eax
82003890:	0f 85 dc fe ff ff    	jne    82003772 <__sfvwrite_r+0x354>
82003896:	b8 00 00 00 00       	mov    $0x0,%eax
8200389b:	eb 17                	jmp    820038b4 <__sfvwrite_r+0x496>
8200389d:	90                   	nop
8200389e:	eb 04                	jmp    820038a4 <__sfvwrite_r+0x486>
820038a0:	90                   	nop
820038a1:	eb 01                	jmp    820038a4 <__sfvwrite_r+0x486>
820038a3:	90                   	nop
820038a4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820038a8:	83 c8 40             	or     $0x40,%eax
820038ab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820038af:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820038b4:	8d 65 f4             	lea    -0xc(%ebp),%esp
820038b7:	5b                   	pop    %ebx
820038b8:	5e                   	pop    %esi
820038b9:	5f                   	pop    %edi
820038ba:	5d                   	pop    %ebp
820038bb:	c3                   	ret    

820038bc <_isatty_r>:
820038bc:	55                   	push   %ebp
820038bd:	89 e5                	mov    %esp,%ebp
820038bf:	83 ec 18             	sub    $0x18,%esp
820038c2:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
820038c9:	00 00 00 
820038cc:	83 ec 0c             	sub    $0xc,%esp
820038cf:	ff 75 0c             	push   0xc(%ebp)
820038d2:	e8 62 c9 ff ff       	call   82000239 <isatty>
820038d7:	83 c4 10             	add    $0x10,%esp
820038da:	89 45 f4             	mov    %eax,-0xc(%ebp)
820038dd:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820038e1:	75 14                	jne    820038f7 <_isatty_r+0x3b>
820038e3:	a1 8c 64 00 82       	mov    0x8200648c,%eax
820038e8:	85 c0                	test   %eax,%eax
820038ea:	74 0b                	je     820038f7 <_isatty_r+0x3b>
820038ec:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
820038f2:	8b 45 08             	mov    0x8(%ebp),%eax
820038f5:	89 10                	mov    %edx,(%eax)
820038f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820038fa:	c9                   	leave  
820038fb:	c3                   	ret    

820038fc <_lseek_r>:
820038fc:	55                   	push   %ebp
820038fd:	89 e5                	mov    %esp,%ebp
820038ff:	83 ec 18             	sub    $0x18,%esp
82003902:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
82003909:	00 00 00 
8200390c:	83 ec 04             	sub    $0x4,%esp
8200390f:	ff 75 14             	push   0x14(%ebp)
82003912:	ff 75 10             	push   0x10(%ebp)
82003915:	ff 75 0c             	push   0xc(%ebp)
82003918:	e8 ef c8 ff ff       	call   8200020c <lseek>
8200391d:	83 c4 10             	add    $0x10,%esp
82003920:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003923:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82003927:	75 14                	jne    8200393d <_lseek_r+0x41>
82003929:	a1 8c 64 00 82       	mov    0x8200648c,%eax
8200392e:	85 c0                	test   %eax,%eax
82003930:	74 0b                	je     8200393d <_lseek_r+0x41>
82003932:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82003938:	8b 45 08             	mov    0x8(%ebp),%eax
8200393b:	89 10                	mov    %edx,(%eax)
8200393d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003940:	c9                   	leave  
82003941:	c3                   	ret    
82003942:	66 90                	xchg   %ax,%ax
82003944:	66 90                	xchg   %ax,%ax
82003946:	66 90                	xchg   %ax,%ax
82003948:	66 90                	xchg   %ax,%ax
8200394a:	66 90                	xchg   %ax,%ax
8200394c:	66 90                	xchg   %ax,%ax
8200394e:	66 90                	xchg   %ax,%ax

82003950 <memchr>:
82003950:	55                   	push   %ebp
82003951:	89 e5                	mov    %esp,%ebp
82003953:	57                   	push   %edi
82003954:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
82003958:	8b 4d 10             	mov    0x10(%ebp),%ecx
8200395b:	8b 7d 08             	mov    0x8(%ebp),%edi
8200395e:	31 d2                	xor    %edx,%edx
82003960:	85 c9                	test   %ecx,%ecx
82003962:	74 79                	je     820039dd <L20>
82003964:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200396a:	74 28                	je     82003994 <L5>
8200396c:	3a 07                	cmp    (%edi),%al
8200396e:	74 6a                	je     820039da <L15>
82003970:	47                   	inc    %edi
82003971:	49                   	dec    %ecx
82003972:	74 69                	je     820039dd <L20>
82003974:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200397a:	74 18                	je     82003994 <L5>
8200397c:	3a 07                	cmp    (%edi),%al
8200397e:	74 5a                	je     820039da <L15>
82003980:	47                   	inc    %edi
82003981:	49                   	dec    %ecx
82003982:	74 59                	je     820039dd <L20>
82003984:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200398a:	74 08                	je     82003994 <L5>
8200398c:	3a 07                	cmp    (%edi),%al
8200398e:	74 4a                	je     820039da <L15>
82003990:	47                   	inc    %edi
82003991:	49                   	dec    %ecx
82003992:	74 49                	je     820039dd <L20>

82003994 <L5>:
82003994:	88 c4                	mov    %al,%ah
82003996:	89 c2                	mov    %eax,%edx
82003998:	c1 e2 10             	shl    $0x10,%edx
8200399b:	09 d0                	or     %edx,%eax
8200399d:	53                   	push   %ebx
8200399e:	66 90                	xchg   %ax,%ax

820039a0 <L8>:
820039a0:	83 e9 04             	sub    $0x4,%ecx
820039a3:	72 1c                	jb     820039c1 <L9>
820039a5:	8b 17                	mov    (%edi),%edx
820039a7:	83 c7 04             	add    $0x4,%edi
820039aa:	31 c2                	xor    %eax,%edx
820039ac:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
820039b2:	f7 d2                	not    %edx
820039b4:	21 d3                	and    %edx,%ebx
820039b6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
820039bc:	74 e2                	je     820039a0 <L8>
820039be:	83 ef 04             	sub    $0x4,%edi

820039c1 <L9>:
820039c1:	5b                   	pop    %ebx
820039c2:	31 d2                	xor    %edx,%edx
820039c4:	83 c1 04             	add    $0x4,%ecx
820039c7:	74 14                	je     820039dd <L20>
820039c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

820039d0 <L10>:
820039d0:	3a 07                	cmp    (%edi),%al
820039d2:	74 06                	je     820039da <L15>
820039d4:	47                   	inc    %edi
820039d5:	49                   	dec    %ecx
820039d6:	75 f8                	jne    820039d0 <L10>
820039d8:	31 ff                	xor    %edi,%edi

820039da <L15>:
820039da:	4a                   	dec    %edx
820039db:	21 fa                	and    %edi,%edx

820039dd <L20>:
820039dd:	89 d0                	mov    %edx,%eax
820039df:	8d 65 fc             	lea    -0x4(%ebp),%esp
820039e2:	5f                   	pop    %edi
820039e3:	c9                   	leave  
820039e4:	c3                   	ret    
820039e5:	66 90                	xchg   %ax,%ax
820039e7:	66 90                	xchg   %ax,%ax
820039e9:	66 90                	xchg   %ax,%ax
820039eb:	66 90                	xchg   %ax,%ax
820039ed:	66 90                	xchg   %ax,%ax
820039ef:	90                   	nop

820039f0 <memmove>:
820039f0:	55                   	push   %ebp
820039f1:	89 e5                	mov    %esp,%ebp
820039f3:	56                   	push   %esi
820039f4:	57                   	push   %edi
820039f5:	53                   	push   %ebx
820039f6:	8b 7d 08             	mov    0x8(%ebp),%edi
820039f9:	8b 4d 10             	mov    0x10(%ebp),%ecx
820039fc:	8b 75 0c             	mov    0xc(%ebp),%esi
820039ff:	fc                   	cld    
82003a00:	39 fe                	cmp    %edi,%esi
82003a02:	73 43                	jae    82003a47 <memmove+0x57>
82003a04:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
82003a08:	39 df                	cmp    %ebx,%edi
82003a0a:	77 3b                	ja     82003a47 <memmove+0x57>
82003a0c:	01 ce                	add    %ecx,%esi
82003a0e:	01 cf                	add    %ecx,%edi
82003a10:	fd                   	std    
82003a11:	83 f9 08             	cmp    $0x8,%ecx
82003a14:	76 2b                	jbe    82003a41 <memmove+0x51>
82003a16:	89 fa                	mov    %edi,%edx
82003a18:	89 cb                	mov    %ecx,%ebx
82003a1a:	83 e2 03             	and    $0x3,%edx
82003a1d:	74 0c                	je     82003a2b <memmove+0x3b>
82003a1f:	89 d1                	mov    %edx,%ecx
82003a21:	4e                   	dec    %esi
82003a22:	4f                   	dec    %edi
82003a23:	29 cb                	sub    %ecx,%ebx
82003a25:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003a27:	89 d9                	mov    %ebx,%ecx
82003a29:	46                   	inc    %esi
82003a2a:	47                   	inc    %edi
82003a2b:	c1 e9 02             	shr    $0x2,%ecx
82003a2e:	83 ee 04             	sub    $0x4,%esi
82003a31:	83 ef 04             	sub    $0x4,%edi
82003a34:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
82003a36:	83 c6 04             	add    $0x4,%esi
82003a39:	83 c7 04             	add    $0x4,%edi
82003a3c:	89 d9                	mov    %ebx,%ecx
82003a3e:	83 e1 03             	and    $0x3,%ecx
82003a41:	4e                   	dec    %esi
82003a42:	4f                   	dec    %edi
82003a43:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003a45:	eb 2a                	jmp    82003a71 <memmove+0x81>
82003a47:	83 f9 08             	cmp    $0x8,%ecx
82003a4a:	76 23                	jbe    82003a6f <memmove+0x7f>
82003a4c:	89 fa                	mov    %edi,%edx
82003a4e:	89 cb                	mov    %ecx,%ebx
82003a50:	83 e2 03             	and    $0x3,%edx
82003a53:	74 10                	je     82003a65 <memmove+0x75>
82003a55:	b9 04 00 00 00       	mov    $0x4,%ecx
82003a5a:	29 d1                	sub    %edx,%ecx
82003a5c:	83 e1 03             	and    $0x3,%ecx
82003a5f:	29 cb                	sub    %ecx,%ebx
82003a61:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003a63:	89 d9                	mov    %ebx,%ecx
82003a65:	c1 e9 02             	shr    $0x2,%ecx
82003a68:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
82003a6a:	89 d9                	mov    %ebx,%ecx
82003a6c:	83 e1 03             	and    $0x3,%ecx
82003a6f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003a71:	8b 45 08             	mov    0x8(%ebp),%eax
82003a74:	fc                   	cld    
82003a75:	8d 65 f4             	lea    -0xc(%ebp),%esp
82003a78:	5b                   	pop    %ebx
82003a79:	5f                   	pop    %edi
82003a7a:	5e                   	pop    %esi
82003a7b:	c9                   	leave  
82003a7c:	c3                   	ret    

82003a7d <__sprint_r>:
82003a7d:	55                   	push   %ebp
82003a7e:	89 e5                	mov    %esp,%ebp
82003a80:	56                   	push   %esi
82003a81:	53                   	push   %ebx
82003a82:	83 ec 10             	sub    $0x10,%esp
82003a85:	8b 5d 10             	mov    0x10(%ebp),%ebx
82003a88:	be 00 00 00 00       	mov    $0x0,%esi
82003a8d:	8b 43 08             	mov    0x8(%ebx),%eax
82003a90:	85 c0                	test   %eax,%eax
82003a92:	75 11                	jne    82003aa5 <__sprint_r+0x28>
82003a94:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82003a9b:	b8 00 00 00 00       	mov    $0x0,%eax
82003aa0:	e9 ad 00 00 00       	jmp    82003b52 <__sprint_r+0xd5>
82003aa5:	8b 45 0c             	mov    0xc(%ebp),%eax
82003aa8:	8b 40 64             	mov    0x64(%eax),%eax
82003aab:	25 00 20 00 00       	and    $0x2000,%eax
82003ab0:	85 c0                	test   %eax,%eax
82003ab2:	74 7a                	je     82003b2e <__sprint_r+0xb1>
82003ab4:	8b 03                	mov    (%ebx),%eax
82003ab6:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003ab9:	eb 6a                	jmp    82003b25 <__sprint_r+0xa8>
82003abb:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003abe:	8b 00                	mov    (%eax),%eax
82003ac0:	89 45 ec             	mov    %eax,-0x14(%ebp)
82003ac3:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003ac6:	8b 40 04             	mov    0x4(%eax),%eax
82003ac9:	c1 e8 02             	shr    $0x2,%eax
82003acc:	89 45 e8             	mov    %eax,-0x18(%ebp)
82003acf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82003ad6:	eb 33                	jmp    82003b0b <__sprint_r+0x8e>
82003ad8:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003adb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
82003ae2:	8b 45 ec             	mov    -0x14(%ebp),%eax
82003ae5:	01 d0                	add    %edx,%eax
82003ae7:	8b 00                	mov    (%eax),%eax
82003ae9:	83 ec 04             	sub    $0x4,%esp
82003aec:	ff 75 0c             	push   0xc(%ebp)
82003aef:	50                   	push   %eax
82003af0:	ff 75 08             	push   0x8(%ebp)
82003af3:	e8 98 17 00 00       	call   82005290 <_fputwc_r>
82003af8:	83 c4 10             	add    $0x10,%esp
82003afb:	83 f8 ff             	cmp    $0xffffffff,%eax
82003afe:	75 07                	jne    82003b07 <__sprint_r+0x8a>
82003b00:	be ff ff ff ff       	mov    $0xffffffff,%esi
82003b05:	eb 3b                	jmp    82003b42 <__sprint_r+0xc5>
82003b07:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82003b0b:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003b0e:	3b 45 e8             	cmp    -0x18(%ebp),%eax
82003b11:	7c c5                	jl     82003ad8 <__sprint_r+0x5b>
82003b13:	8b 43 08             	mov    0x8(%ebx),%eax
82003b16:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003b19:	c1 e2 02             	shl    $0x2,%edx
82003b1c:	29 d0                	sub    %edx,%eax
82003b1e:	89 43 08             	mov    %eax,0x8(%ebx)
82003b21:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
82003b25:	8b 43 08             	mov    0x8(%ebx),%eax
82003b28:	85 c0                	test   %eax,%eax
82003b2a:	75 8f                	jne    82003abb <__sprint_r+0x3e>
82003b2c:	eb 14                	jmp    82003b42 <__sprint_r+0xc5>
82003b2e:	83 ec 04             	sub    $0x4,%esp
82003b31:	53                   	push   %ebx
82003b32:	ff 75 0c             	push   0xc(%ebp)
82003b35:	ff 75 08             	push   0x8(%ebp)
82003b38:	e8 e1 f8 ff ff       	call   8200341e <__sfvwrite_r>
82003b3d:	83 c4 10             	add    $0x10,%esp
82003b40:	89 c6                	mov    %eax,%esi
82003b42:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
82003b49:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82003b50:	89 f0                	mov    %esi,%eax
82003b52:	8d 65 f8             	lea    -0x8(%ebp),%esp
82003b55:	5b                   	pop    %ebx
82003b56:	5e                   	pop    %esi
82003b57:	5d                   	pop    %ebp
82003b58:	c3                   	ret    

82003b59 <__sfputc_r>:
82003b59:	55                   	push   %ebp
82003b5a:	89 e5                	mov    %esp,%ebp
82003b5c:	83 ec 08             	sub    $0x8,%esp
82003b5f:	8b 45 10             	mov    0x10(%ebp),%eax
82003b62:	8b 40 08             	mov    0x8(%eax),%eax
82003b65:	8d 50 ff             	lea    -0x1(%eax),%edx
82003b68:	8b 45 10             	mov    0x10(%ebp),%eax
82003b6b:	89 50 08             	mov    %edx,0x8(%eax)
82003b6e:	8b 45 10             	mov    0x10(%ebp),%eax
82003b71:	8b 40 08             	mov    0x8(%eax),%eax
82003b74:	85 c0                	test   %eax,%eax
82003b76:	79 17                	jns    82003b8f <__sfputc_r+0x36>
82003b78:	8b 45 10             	mov    0x10(%ebp),%eax
82003b7b:	8b 50 08             	mov    0x8(%eax),%edx
82003b7e:	8b 45 10             	mov    0x10(%ebp),%eax
82003b81:	8b 40 18             	mov    0x18(%eax),%eax
82003b84:	39 c2                	cmp    %eax,%edx
82003b86:	7c 21                	jl     82003ba9 <__sfputc_r+0x50>
82003b88:	8b 45 0c             	mov    0xc(%ebp),%eax
82003b8b:	3c 0a                	cmp    $0xa,%al
82003b8d:	74 1a                	je     82003ba9 <__sfputc_r+0x50>
82003b8f:	8b 45 10             	mov    0x10(%ebp),%eax
82003b92:	8b 00                	mov    (%eax),%eax
82003b94:	8d 48 01             	lea    0x1(%eax),%ecx
82003b97:	8b 55 10             	mov    0x10(%ebp),%edx
82003b9a:	89 0a                	mov    %ecx,(%edx)
82003b9c:	8b 55 0c             	mov    0xc(%ebp),%edx
82003b9f:	88 10                	mov    %dl,(%eax)
82003ba1:	0f b6 00             	movzbl (%eax),%eax
82003ba4:	0f b6 c0             	movzbl %al,%eax
82003ba7:	eb 14                	jmp    82003bbd <__sfputc_r+0x64>
82003ba9:	83 ec 04             	sub    $0x4,%esp
82003bac:	ff 75 10             	push   0x10(%ebp)
82003baf:	ff 75 0c             	push   0xc(%ebp)
82003bb2:	ff 75 08             	push   0x8(%ebp)
82003bb5:	e8 32 13 00 00       	call   82004eec <__swbuf_r>
82003bba:	83 c4 10             	add    $0x10,%esp
82003bbd:	c9                   	leave  
82003bbe:	c3                   	ret    

82003bbf <__sfputs_r>:
82003bbf:	55                   	push   %ebp
82003bc0:	89 e5                	mov    %esp,%ebp
82003bc2:	53                   	push   %ebx
82003bc3:	83 ec 14             	sub    $0x14,%esp
82003bc6:	8b 45 0c             	mov    0xc(%ebp),%eax
82003bc9:	8b 40 64             	mov    0x64(%eax),%eax
82003bcc:	25 00 20 00 00       	and    $0x2000,%eax
82003bd1:	85 c0                	test   %eax,%eax
82003bd3:	74 4c                	je     82003c21 <__sfputs_r+0x62>
82003bd5:	8b 45 10             	mov    0x10(%ebp),%eax
82003bd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003bdb:	bb 00 00 00 00       	mov    $0x0,%ebx
82003be0:	eb 31                	jmp    82003c13 <__sfputs_r+0x54>
82003be2:	89 d8                	mov    %ebx,%eax
82003be4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
82003beb:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003bee:	01 d0                	add    %edx,%eax
82003bf0:	8b 00                	mov    (%eax),%eax
82003bf2:	83 ec 04             	sub    $0x4,%esp
82003bf5:	ff 75 0c             	push   0xc(%ebp)
82003bf8:	50                   	push   %eax
82003bf9:	ff 75 08             	push   0x8(%ebp)
82003bfc:	e8 8f 16 00 00       	call   82005290 <_fputwc_r>
82003c01:	83 c4 10             	add    $0x10,%esp
82003c04:	83 f8 ff             	cmp    $0xffffffff,%eax
82003c07:	75 07                	jne    82003c10 <__sfputs_r+0x51>
82003c09:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82003c0e:	eb 52                	jmp    82003c62 <__sfputs_r+0xa3>
82003c10:	83 c3 01             	add    $0x1,%ebx
82003c13:	8b 45 14             	mov    0x14(%ebp),%eax
82003c16:	c1 e8 02             	shr    $0x2,%eax
82003c19:	89 da                	mov    %ebx,%edx
82003c1b:	39 d0                	cmp    %edx,%eax
82003c1d:	77 c3                	ja     82003be2 <__sfputs_r+0x23>
82003c1f:	eb 3c                	jmp    82003c5d <__sfputs_r+0x9e>
82003c21:	bb 00 00 00 00       	mov    $0x0,%ebx
82003c26:	eb 2e                	jmp    82003c56 <__sfputs_r+0x97>
82003c28:	89 da                	mov    %ebx,%edx
82003c2a:	8b 45 10             	mov    0x10(%ebp),%eax
82003c2d:	01 d0                	add    %edx,%eax
82003c2f:	0f b6 00             	movzbl (%eax),%eax
82003c32:	0f be c0             	movsbl %al,%eax
82003c35:	83 ec 04             	sub    $0x4,%esp
82003c38:	ff 75 0c             	push   0xc(%ebp)
82003c3b:	50                   	push   %eax
82003c3c:	ff 75 08             	push   0x8(%ebp)
82003c3f:	e8 15 ff ff ff       	call   82003b59 <__sfputc_r>
82003c44:	83 c4 10             	add    $0x10,%esp
82003c47:	83 f8 ff             	cmp    $0xffffffff,%eax
82003c4a:	75 07                	jne    82003c53 <__sfputs_r+0x94>
82003c4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82003c51:	eb 0f                	jmp    82003c62 <__sfputs_r+0xa3>
82003c53:	83 c3 01             	add    $0x1,%ebx
82003c56:	89 d8                	mov    %ebx,%eax
82003c58:	39 45 14             	cmp    %eax,0x14(%ebp)
82003c5b:	77 cb                	ja     82003c28 <__sfputs_r+0x69>
82003c5d:	b8 00 00 00 00       	mov    $0x0,%eax
82003c62:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82003c65:	c9                   	leave  
82003c66:	c3                   	ret    

82003c67 <vfiprintf>:
82003c67:	55                   	push   %ebp
82003c68:	89 e5                	mov    %esp,%ebp
82003c6a:	83 ec 18             	sub    $0x18,%esp
82003c6d:	a1 64 5e 00 82       	mov    0x82005e64,%eax
82003c72:	ff 75 10             	push   0x10(%ebp)
82003c75:	ff 75 0c             	push   0xc(%ebp)
82003c78:	ff 75 08             	push   0x8(%ebp)
82003c7b:	50                   	push   %eax
82003c7c:	e8 0b 00 00 00       	call   82003c8c <_vfiprintf_r>
82003c81:	83 c4 10             	add    $0x10,%esp
82003c84:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003c87:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003c8a:	c9                   	leave  
82003c8b:	c3                   	ret    

82003c8c <_vfiprintf_r>:
82003c8c:	55                   	push   %ebp
82003c8d:	89 e5                	mov    %esp,%ebp
82003c8f:	57                   	push   %edi
82003c90:	56                   	push   %esi
82003c91:	53                   	push   %ebx
82003c92:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
82003c98:	c7 45 e4 bf 3b 00 82 	movl   $0x82003bbf,-0x1c(%ebp)
82003c9f:	8b 45 08             	mov    0x8(%ebp),%eax
82003ca2:	89 45 e0             	mov    %eax,-0x20(%ebp)
82003ca5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
82003ca9:	74 18                	je     82003cc3 <_vfiprintf_r+0x37>
82003cab:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003cae:	8b 40 38             	mov    0x38(%eax),%eax
82003cb1:	85 c0                	test   %eax,%eax
82003cb3:	75 0e                	jne    82003cc3 <_vfiprintf_r+0x37>
82003cb5:	83 ec 0c             	sub    $0xc,%esp
82003cb8:	ff 75 e0             	push   -0x20(%ebp)
82003cbb:	e8 b1 cf ff ff       	call   82000c71 <__sinit>
82003cc0:	83 c4 10             	add    $0x10,%esp
82003cc3:	8b 45 0c             	mov    0xc(%ebp),%eax
82003cc6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82003cca:	98                   	cwtl   
82003ccb:	83 e0 08             	and    $0x8,%eax
82003cce:	85 c0                	test   %eax,%eax
82003cd0:	74 0a                	je     82003cdc <_vfiprintf_r+0x50>
82003cd2:	8b 45 0c             	mov    0xc(%ebp),%eax
82003cd5:	8b 40 10             	mov    0x10(%eax),%eax
82003cd8:	85 c0                	test   %eax,%eax
82003cda:	75 1f                	jne    82003cfb <_vfiprintf_r+0x6f>
82003cdc:	83 ec 08             	sub    $0x8,%esp
82003cdf:	ff 75 0c             	push   0xc(%ebp)
82003ce2:	ff 75 08             	push   0x8(%ebp)
82003ce5:	e8 35 13 00 00       	call   8200501f <__swsetup_r>
82003cea:	83 c4 10             	add    $0x10,%esp
82003ced:	85 c0                	test   %eax,%eax
82003cef:	74 0a                	je     82003cfb <_vfiprintf_r+0x6f>
82003cf1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82003cf6:	e9 df 02 00 00       	jmp    82003fda <_vfiprintf_r+0x34e>
82003cfb:	8b 5d 10             	mov    0x10(%ebp),%ebx
82003cfe:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
82003d05:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
82003d09:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
82003d0d:	8b 45 14             	mov    0x14(%ebp),%eax
82003d10:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
82003d16:	89 de                	mov    %ebx,%esi
82003d18:	eb 03                	jmp    82003d1d <_vfiprintf_r+0x91>
82003d1a:	83 c3 01             	add    $0x1,%ebx
82003d1d:	0f b6 03             	movzbl (%ebx),%eax
82003d20:	84 c0                	test   %al,%al
82003d22:	74 07                	je     82003d2b <_vfiprintf_r+0x9f>
82003d24:	0f b6 03             	movzbl (%ebx),%eax
82003d27:	3c 25                	cmp    $0x25,%al
82003d29:	75 ef                	jne    82003d1a <_vfiprintf_r+0x8e>
82003d2b:	89 d8                	mov    %ebx,%eax
82003d2d:	29 f0                	sub    %esi,%eax
82003d2f:	85 c0                	test   %eax,%eax
82003d31:	74 2b                	je     82003d5e <_vfiprintf_r+0xd2>
82003d33:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
82003d39:	50                   	push   %eax
82003d3a:	56                   	push   %esi
82003d3b:	ff 75 0c             	push   0xc(%ebp)
82003d3e:	ff 75 08             	push   0x8(%ebp)
82003d41:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82003d44:	ff d0                	call   *%eax
82003d46:	83 c4 10             	add    $0x10,%esp
82003d49:	83 f8 ff             	cmp    $0xffffffff,%eax
82003d4c:	0f 84 68 02 00 00    	je     82003fba <_vfiprintf_r+0x32e>
82003d52:	8b 45 94             	mov    -0x6c(%ebp),%eax
82003d55:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
82003d5b:	89 45 94             	mov    %eax,-0x6c(%ebp)
82003d5e:	0f b6 03             	movzbl (%ebx),%eax
82003d61:	84 c0                	test   %al,%al
82003d63:	0f 84 54 02 00 00    	je     82003fbd <_vfiprintf_r+0x331>
82003d69:	83 c3 01             	add    $0x1,%ebx
82003d6c:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
82003d73:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
82003d7a:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
82003d81:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
82003d88:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
82003d8c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
82003d93:	c7 45 dc da 56 00 82 	movl   $0x820056da,-0x24(%ebp)
82003d9a:	eb 1b                	jmp    82003db7 <_vfiprintf_r+0x12b>
82003d9c:	8b 55 80             	mov    -0x80(%ebp),%edx
82003d9f:	89 f0                	mov    %esi,%eax
82003da1:	2b 45 dc             	sub    -0x24(%ebp),%eax
82003da4:	be 01 00 00 00       	mov    $0x1,%esi
82003da9:	89 c1                	mov    %eax,%ecx
82003dab:	d3 e6                	shl    %cl,%esi
82003dad:	89 f0                	mov    %esi,%eax
82003daf:	09 d0                	or     %edx,%eax
82003db1:	89 45 80             	mov    %eax,-0x80(%ebp)
82003db4:	83 c3 01             	add    $0x1,%ebx
82003db7:	0f b6 03             	movzbl (%ebx),%eax
82003dba:	0f be c0             	movsbl %al,%eax
82003dbd:	83 ec 04             	sub    $0x4,%esp
82003dc0:	6a 05                	push   $0x5
82003dc2:	50                   	push   %eax
82003dc3:	ff 75 dc             	push   -0x24(%ebp)
82003dc6:	e8 85 fb ff ff       	call   82003950 <memchr>
82003dcb:	83 c4 10             	add    $0x10,%esp
82003dce:	89 c6                	mov    %eax,%esi
82003dd0:	85 f6                	test   %esi,%esi
82003dd2:	75 c8                	jne    82003d9c <_vfiprintf_r+0x110>
82003dd4:	8b 45 80             	mov    -0x80(%ebp),%eax
82003dd7:	83 e0 10             	and    $0x10,%eax
82003dda:	85 c0                	test   %eax,%eax
82003ddc:	74 04                	je     82003de2 <_vfiprintf_r+0x156>
82003dde:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
82003de2:	8b 45 80             	mov    -0x80(%ebp),%eax
82003de5:	83 e0 08             	and    $0x8,%eax
82003de8:	85 c0                	test   %eax,%eax
82003dea:	74 04                	je     82003df0 <_vfiprintf_r+0x164>
82003dec:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
82003df0:	0f b6 03             	movzbl (%ebx),%eax
82003df3:	3c 2a                	cmp    $0x2a,%al
82003df5:	75 50                	jne    82003e47 <_vfiprintf_r+0x1bb>
82003df7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82003dfd:	8d 50 04             	lea    0x4(%eax),%edx
82003e00:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
82003e06:	8b 00                	mov    (%eax),%eax
82003e08:	89 45 8c             	mov    %eax,-0x74(%ebp)
82003e0b:	8b 45 8c             	mov    -0x74(%ebp),%eax
82003e0e:	85 c0                	test   %eax,%eax
82003e10:	79 11                	jns    82003e23 <_vfiprintf_r+0x197>
82003e12:	8b 45 8c             	mov    -0x74(%ebp),%eax
82003e15:	f7 d8                	neg    %eax
82003e17:	89 45 8c             	mov    %eax,-0x74(%ebp)
82003e1a:	8b 45 80             	mov    -0x80(%ebp),%eax
82003e1d:	83 c8 02             	or     $0x2,%eax
82003e20:	89 45 80             	mov    %eax,-0x80(%ebp)
82003e23:	83 c3 01             	add    $0x1,%ebx
82003e26:	eb 2d                	jmp    82003e55 <_vfiprintf_r+0x1c9>
82003e28:	8b 55 8c             	mov    -0x74(%ebp),%edx
82003e2b:	89 d0                	mov    %edx,%eax
82003e2d:	c1 e0 02             	shl    $0x2,%eax
82003e30:	01 d0                	add    %edx,%eax
82003e32:	01 c0                	add    %eax,%eax
82003e34:	89 c2                	mov    %eax,%edx
82003e36:	0f b6 03             	movzbl (%ebx),%eax
82003e39:	0f be c0             	movsbl %al,%eax
82003e3c:	83 e8 30             	sub    $0x30,%eax
82003e3f:	01 d0                	add    %edx,%eax
82003e41:	89 45 8c             	mov    %eax,-0x74(%ebp)
82003e44:	83 c3 01             	add    $0x1,%ebx
82003e47:	0f b6 03             	movzbl (%ebx),%eax
82003e4a:	0f be c0             	movsbl %al,%eax
82003e4d:	83 e8 30             	sub    $0x30,%eax
82003e50:	83 f8 09             	cmp    $0x9,%eax
82003e53:	76 d3                	jbe    82003e28 <_vfiprintf_r+0x19c>
82003e55:	0f b6 03             	movzbl (%ebx),%eax
82003e58:	3c 2e                	cmp    $0x2e,%al
82003e5a:	75 67                	jne    82003ec3 <_vfiprintf_r+0x237>
82003e5c:	83 c3 01             	add    $0x1,%ebx
82003e5f:	0f b6 03             	movzbl (%ebx),%eax
82003e62:	3c 2a                	cmp    $0x2a,%al
82003e64:	75 27                	jne    82003e8d <_vfiprintf_r+0x201>
82003e66:	83 c3 01             	add    $0x1,%ebx
82003e69:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82003e6f:	8d 50 04             	lea    0x4(%eax),%edx
82003e72:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
82003e78:	8b 00                	mov    (%eax),%eax
82003e7a:	89 45 84             	mov    %eax,-0x7c(%ebp)
82003e7d:	8b 45 84             	mov    -0x7c(%ebp),%eax
82003e80:	85 c0                	test   %eax,%eax
82003e82:	79 3f                	jns    82003ec3 <_vfiprintf_r+0x237>
82003e84:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
82003e8b:	eb 36                	jmp    82003ec3 <_vfiprintf_r+0x237>
82003e8d:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
82003e94:	eb 1f                	jmp    82003eb5 <_vfiprintf_r+0x229>
82003e96:	8b 55 84             	mov    -0x7c(%ebp),%edx
82003e99:	89 d0                	mov    %edx,%eax
82003e9b:	c1 e0 02             	shl    $0x2,%eax
82003e9e:	01 d0                	add    %edx,%eax
82003ea0:	01 c0                	add    %eax,%eax
82003ea2:	89 c2                	mov    %eax,%edx
82003ea4:	0f b6 03             	movzbl (%ebx),%eax
82003ea7:	0f be c0             	movsbl %al,%eax
82003eaa:	83 e8 30             	sub    $0x30,%eax
82003ead:	01 d0                	add    %edx,%eax
82003eaf:	89 45 84             	mov    %eax,-0x7c(%ebp)
82003eb2:	83 c3 01             	add    $0x1,%ebx
82003eb5:	0f b6 03             	movzbl (%ebx),%eax
82003eb8:	0f be c0             	movsbl %al,%eax
82003ebb:	83 e8 30             	sub    $0x30,%eax
82003ebe:	83 f8 09             	cmp    $0x9,%eax
82003ec1:	76 d3                	jbe    82003e96 <_vfiprintf_r+0x20a>
82003ec3:	c7 45 dc e0 56 00 82 	movl   $0x820056e0,-0x24(%ebp)
82003eca:	0f b6 03             	movzbl (%ebx),%eax
82003ecd:	0f be c0             	movsbl %al,%eax
82003ed0:	83 ec 04             	sub    $0x4,%esp
82003ed3:	6a 03                	push   $0x3
82003ed5:	50                   	push   %eax
82003ed6:	ff 75 dc             	push   -0x24(%ebp)
82003ed9:	e8 72 fa ff ff       	call   82003950 <memchr>
82003ede:	83 c4 10             	add    $0x10,%esp
82003ee1:	89 c6                	mov    %eax,%esi
82003ee3:	85 f6                	test   %esi,%esi
82003ee5:	74 1b                	je     82003f02 <_vfiprintf_r+0x276>
82003ee7:	8b 55 80             	mov    -0x80(%ebp),%edx
82003eea:	89 f0                	mov    %esi,%eax
82003eec:	2b 45 dc             	sub    -0x24(%ebp),%eax
82003eef:	be 40 00 00 00       	mov    $0x40,%esi
82003ef4:	89 c1                	mov    %eax,%ecx
82003ef6:	d3 e6                	shl    %cl,%esi
82003ef8:	89 f0                	mov    %esi,%eax
82003efa:	09 d0                	or     %edx,%eax
82003efc:	89 45 80             	mov    %eax,-0x80(%ebp)
82003eff:	83 c3 01             	add    $0x1,%ebx
82003f02:	89 d8                	mov    %ebx,%eax
82003f04:	8d 58 01             	lea    0x1(%eax),%ebx
82003f07:	0f b6 00             	movzbl (%eax),%eax
82003f0a:	88 45 98             	mov    %al,-0x68(%ebp)
82003f0d:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
82003f11:	0f be c0             	movsbl %al,%eax
82003f14:	83 ec 04             	sub    $0x4,%esp
82003f17:	6a 06                	push   $0x6
82003f19:	50                   	push   %eax
82003f1a:	68 e4 56 00 82       	push   $0x820056e4
82003f1f:	e8 2c fa ff ff       	call   82003950 <memchr>
82003f24:	83 c4 10             	add    $0x10,%esp
82003f27:	89 c6                	mov    %eax,%esi
82003f29:	85 f6                	test   %esi,%esi
82003f2b:	74 5a                	je     82003f87 <_vfiprintf_r+0x2fb>
82003f2d:	b8 00 00 00 00       	mov    $0x0,%eax
82003f32:	85 c0                	test   %eax,%eax
82003f34:	75 2e                	jne    82003f64 <_vfiprintf_r+0x2d8>
82003f36:	8b 45 80             	mov    -0x80(%ebp),%eax
82003f39:	25 00 01 00 00       	and    $0x100,%eax
82003f3e:	85 c0                	test   %eax,%eax
82003f40:	74 11                	je     82003f53 <_vfiprintf_r+0x2c7>
82003f42:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82003f48:	83 c0 0c             	add    $0xc,%eax
82003f4b:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
82003f51:	eb 55                	jmp    82003fa8 <_vfiprintf_r+0x31c>
82003f53:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82003f59:	83 c0 08             	add    $0x8,%eax
82003f5c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
82003f62:	eb 44                	jmp    82003fa8 <_vfiprintf_r+0x31c>
82003f64:	83 ec 0c             	sub    $0xc,%esp
82003f67:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
82003f6d:	50                   	push   %eax
82003f6e:	ff 75 e4             	push   -0x1c(%ebp)
82003f71:	ff 75 0c             	push   0xc(%ebp)
82003f74:	8d 45 80             	lea    -0x80(%ebp),%eax
82003f77:	50                   	push   %eax
82003f78:	ff 75 08             	push   0x8(%ebp)
82003f7b:	e8 80 c0 ff 7d       	call   0 <_start-0x82000000>
82003f80:	83 c4 20             	add    $0x20,%esp
82003f83:	89 c7                	mov    %eax,%edi
82003f85:	eb 21                	jmp    82003fa8 <_vfiprintf_r+0x31c>
82003f87:	83 ec 0c             	sub    $0xc,%esp
82003f8a:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
82003f90:	50                   	push   %eax
82003f91:	ff 75 e4             	push   -0x1c(%ebp)
82003f94:	ff 75 0c             	push   0xc(%ebp)
82003f97:	8d 45 80             	lea    -0x80(%ebp),%eax
82003f9a:	50                   	push   %eax
82003f9b:	ff 75 08             	push   0x8(%ebp)
82003f9e:	e8 da 01 00 00       	call   8200417d <_printf_i>
82003fa3:	83 c4 20             	add    $0x20,%esp
82003fa6:	89 c7                	mov    %eax,%edi
82003fa8:	83 ff ff             	cmp    $0xffffffff,%edi
82003fab:	74 13                	je     82003fc0 <_vfiprintf_r+0x334>
82003fad:	8b 45 94             	mov    -0x6c(%ebp),%eax
82003fb0:	01 f8                	add    %edi,%eax
82003fb2:	89 45 94             	mov    %eax,-0x6c(%ebp)
82003fb5:	e9 5c fd ff ff       	jmp    82003d16 <_vfiprintf_r+0x8a>
82003fba:	90                   	nop
82003fbb:	eb 04                	jmp    82003fc1 <_vfiprintf_r+0x335>
82003fbd:	90                   	nop
82003fbe:	eb 01                	jmp    82003fc1 <_vfiprintf_r+0x335>
82003fc0:	90                   	nop
82003fc1:	8b 45 0c             	mov    0xc(%ebp),%eax
82003fc4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82003fc8:	98                   	cwtl   
82003fc9:	83 e0 40             	and    $0x40,%eax
82003fcc:	85 c0                	test   %eax,%eax
82003fce:	75 05                	jne    82003fd5 <_vfiprintf_r+0x349>
82003fd0:	8b 45 94             	mov    -0x6c(%ebp),%eax
82003fd3:	eb 05                	jmp    82003fda <_vfiprintf_r+0x34e>
82003fd5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82003fda:	8d 65 f4             	lea    -0xc(%ebp),%esp
82003fdd:	5b                   	pop    %ebx
82003fde:	5e                   	pop    %esi
82003fdf:	5f                   	pop    %edi
82003fe0:	5d                   	pop    %ebp
82003fe1:	c3                   	ret    

82003fe2 <_printf_common>:
82003fe2:	55                   	push   %ebp
82003fe3:	89 e5                	mov    %esp,%ebp
82003fe5:	83 ec 18             	sub    $0x18,%esp
82003fe8:	8b 45 0c             	mov    0xc(%ebp),%eax
82003feb:	8b 50 10             	mov    0x10(%eax),%edx
82003fee:	8b 45 0c             	mov    0xc(%ebp),%eax
82003ff1:	8b 40 08             	mov    0x8(%eax),%eax
82003ff4:	39 c2                	cmp    %eax,%edx
82003ff6:	0f 4c d0             	cmovl  %eax,%edx
82003ff9:	8b 45 10             	mov    0x10(%ebp),%eax
82003ffc:	89 10                	mov    %edx,(%eax)
82003ffe:	8b 45 0c             	mov    0xc(%ebp),%eax
82004001:	0f b6 40 43          	movzbl 0x43(%eax),%eax
82004005:	84 c0                	test   %al,%al
82004007:	74 0d                	je     82004016 <_printf_common+0x34>
82004009:	8b 45 10             	mov    0x10(%ebp),%eax
8200400c:	8b 00                	mov    (%eax),%eax
8200400e:	8d 50 01             	lea    0x1(%eax),%edx
82004011:	8b 45 10             	mov    0x10(%ebp),%eax
82004014:	89 10                	mov    %edx,(%eax)
82004016:	8b 45 0c             	mov    0xc(%ebp),%eax
82004019:	8b 00                	mov    (%eax),%eax
8200401b:	83 e0 20             	and    $0x20,%eax
8200401e:	85 c0                	test   %eax,%eax
82004020:	74 0d                	je     8200402f <_printf_common+0x4d>
82004022:	8b 45 10             	mov    0x10(%ebp),%eax
82004025:	8b 00                	mov    (%eax),%eax
82004027:	8d 50 02             	lea    0x2(%eax),%edx
8200402a:	8b 45 10             	mov    0x10(%ebp),%eax
8200402d:	89 10                	mov    %edx,(%eax)
8200402f:	8b 45 0c             	mov    0xc(%ebp),%eax
82004032:	8b 00                	mov    (%eax),%eax
82004034:	83 e0 06             	and    $0x6,%eax
82004037:	85 c0                	test   %eax,%eax
82004039:	75 41                	jne    8200407c <_printf_common+0x9a>
8200403b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82004042:	eb 24                	jmp    82004068 <_printf_common+0x86>
82004044:	8b 45 0c             	mov    0xc(%ebp),%eax
82004047:	83 c0 19             	add    $0x19,%eax
8200404a:	6a 01                	push   $0x1
8200404c:	50                   	push   %eax
8200404d:	ff 75 14             	push   0x14(%ebp)
82004050:	ff 75 08             	push   0x8(%ebp)
82004053:	8b 45 18             	mov    0x18(%ebp),%eax
82004056:	ff d0                	call   *%eax
82004058:	83 c4 10             	add    $0x10,%esp
8200405b:	83 f8 ff             	cmp    $0xffffffff,%eax
8200405e:	0f 84 0b 01 00 00    	je     8200416f <_printf_common+0x18d>
82004064:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82004068:	8b 45 0c             	mov    0xc(%ebp),%eax
8200406b:	8b 50 0c             	mov    0xc(%eax),%edx
8200406e:	8b 45 10             	mov    0x10(%ebp),%eax
82004071:	8b 08                	mov    (%eax),%ecx
82004073:	89 d0                	mov    %edx,%eax
82004075:	29 c8                	sub    %ecx,%eax
82004077:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8200407a:	7c c8                	jl     82004044 <_printf_common+0x62>
8200407c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82004083:	8b 45 0c             	mov    0xc(%ebp),%eax
82004086:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8200408a:	84 c0                	test   %al,%al
8200408c:	74 04                	je     82004092 <_printf_common+0xb0>
8200408e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82004092:	8b 45 0c             	mov    0xc(%ebp),%eax
82004095:	8b 00                	mov    (%eax),%eax
82004097:	83 e0 20             	and    $0x20,%eax
8200409a:	85 c0                	test   %eax,%eax
8200409c:	74 28                	je     820040c6 <_printf_common+0xe4>
8200409e:	8b 45 f4             	mov    -0xc(%ebp),%eax
820040a1:	8d 50 01             	lea    0x1(%eax),%edx
820040a4:	89 55 f4             	mov    %edx,-0xc(%ebp)
820040a7:	8b 55 0c             	mov    0xc(%ebp),%edx
820040aa:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
820040af:	8b 45 f4             	mov    -0xc(%ebp),%eax
820040b2:	8d 50 01             	lea    0x1(%eax),%edx
820040b5:	89 55 f4             	mov    %edx,-0xc(%ebp)
820040b8:	8b 55 0c             	mov    0xc(%ebp),%edx
820040bb:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
820040bf:	8b 55 0c             	mov    0xc(%ebp),%edx
820040c2:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
820040c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
820040c9:	8b 55 0c             	mov    0xc(%ebp),%edx
820040cc:	83 c2 43             	add    $0x43,%edx
820040cf:	50                   	push   %eax
820040d0:	52                   	push   %edx
820040d1:	ff 75 14             	push   0x14(%ebp)
820040d4:	ff 75 08             	push   0x8(%ebp)
820040d7:	8b 45 18             	mov    0x18(%ebp),%eax
820040da:	ff d0                	call   *%eax
820040dc:	83 c4 10             	add    $0x10,%esp
820040df:	83 f8 ff             	cmp    $0xffffffff,%eax
820040e2:	0f 84 8a 00 00 00    	je     82004172 <_printf_common+0x190>
820040e8:	8b 45 0c             	mov    0xc(%ebp),%eax
820040eb:	8b 50 0c             	mov    0xc(%eax),%edx
820040ee:	8b 45 10             	mov    0x10(%ebp),%eax
820040f1:	8b 08                	mov    (%eax),%ecx
820040f3:	89 d0                	mov    %edx,%eax
820040f5:	29 c8                	sub    %ecx,%eax
820040f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
820040fa:	8b 45 0c             	mov    0xc(%ebp),%eax
820040fd:	8b 00                	mov    (%eax),%eax
820040ff:	83 e0 06             	and    $0x6,%eax
82004102:	83 f8 04             	cmp    $0x4,%eax
82004105:	75 06                	jne    8200410d <_printf_common+0x12b>
82004107:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8200410b:	79 07                	jns    82004114 <_printf_common+0x132>
8200410d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82004114:	8b 45 0c             	mov    0xc(%ebp),%eax
82004117:	8b 50 08             	mov    0x8(%eax),%edx
8200411a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200411d:	8b 40 10             	mov    0x10(%eax),%eax
82004120:	39 c2                	cmp    %eax,%edx
82004122:	7e 13                	jle    82004137 <_printf_common+0x155>
82004124:	8b 45 0c             	mov    0xc(%ebp),%eax
82004127:	8b 50 08             	mov    0x8(%eax),%edx
8200412a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200412d:	8b 48 10             	mov    0x10(%eax),%ecx
82004130:	89 d0                	mov    %edx,%eax
82004132:	29 c8                	sub    %ecx,%eax
82004134:	01 45 f4             	add    %eax,-0xc(%ebp)
82004137:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8200413e:	eb 20                	jmp    82004160 <_printf_common+0x17e>
82004140:	8b 45 0c             	mov    0xc(%ebp),%eax
82004143:	83 c0 1a             	add    $0x1a,%eax
82004146:	6a 01                	push   $0x1
82004148:	50                   	push   %eax
82004149:	ff 75 14             	push   0x14(%ebp)
8200414c:	ff 75 08             	push   0x8(%ebp)
8200414f:	8b 45 18             	mov    0x18(%ebp),%eax
82004152:	ff d0                	call   *%eax
82004154:	83 c4 10             	add    $0x10,%esp
82004157:	83 f8 ff             	cmp    $0xffffffff,%eax
8200415a:	74 19                	je     82004175 <_printf_common+0x193>
8200415c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
82004160:	8b 45 ec             	mov    -0x14(%ebp),%eax
82004163:	3b 45 f4             	cmp    -0xc(%ebp),%eax
82004166:	7c d8                	jl     82004140 <_printf_common+0x15e>
82004168:	b8 00 00 00 00       	mov    $0x0,%eax
8200416d:	eb 0c                	jmp    8200417b <_printf_common+0x199>
8200416f:	90                   	nop
82004170:	eb 04                	jmp    82004176 <_printf_common+0x194>
82004172:	90                   	nop
82004173:	eb 01                	jmp    82004176 <_printf_common+0x194>
82004175:	90                   	nop
82004176:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200417b:	c9                   	leave  
8200417c:	c3                   	ret    

8200417d <_printf_i>:
8200417d:	55                   	push   %ebp
8200417e:	89 e5                	mov    %esp,%ebp
82004180:	53                   	push   %ebx
82004181:	83 ec 24             	sub    $0x24,%esp
82004184:	8b 45 0c             	mov    0xc(%ebp),%eax
82004187:	83 c0 1b             	add    $0x1b,%eax
8200418a:	83 c0 28             	add    $0x28,%eax
8200418d:	89 45 ec             	mov    %eax,-0x14(%ebp)
82004190:	c7 45 e8 ec 56 00 82 	movl   $0x820056ec,-0x18(%ebp)
82004197:	8b 45 0c             	mov    0xc(%ebp),%eax
8200419a:	0f b6 40 18          	movzbl 0x18(%eax),%eax
8200419e:	0f be c0             	movsbl %al,%eax
820041a1:	85 c0                	test   %eax,%eax
820041a3:	0f 84 00 03 00 00    	je     820044a9 <_printf_i+0x32c>
820041a9:	85 c0                	test   %eax,%eax
820041ab:	0f 88 52 03 00 00    	js     82004503 <_printf_i+0x386>
820041b1:	83 f8 78             	cmp    $0x78,%eax
820041b4:	0f 8f 49 03 00 00    	jg     82004503 <_printf_i+0x386>
820041ba:	83 f8 58             	cmp    $0x58,%eax
820041bd:	0f 8c 40 03 00 00    	jl     82004503 <_printf_i+0x386>
820041c3:	83 e8 58             	sub    $0x58,%eax
820041c6:	83 f8 20             	cmp    $0x20,%eax
820041c9:	0f 87 34 03 00 00    	ja     82004503 <_printf_i+0x386>
820041cf:	8b 04 85 10 57 00 82 	mov    -0x7dffa8f0(,%eax,4),%eax
820041d6:	ff e0                	jmp    *%eax
820041d8:	8b 45 18             	mov    0x18(%ebp),%eax
820041db:	8b 00                	mov    (%eax),%eax
820041dd:	8d 48 04             	lea    0x4(%eax),%ecx
820041e0:	8b 55 18             	mov    0x18(%ebp),%edx
820041e3:	89 0a                	mov    %ecx,(%edx)
820041e5:	8b 00                	mov    (%eax),%eax
820041e7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
820041eb:	89 c2                	mov    %eax,%edx
820041ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
820041f0:	88 10                	mov    %dl,(%eax)
820041f2:	8b 45 0c             	mov    0xc(%ebp),%eax
820041f5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
820041fc:	e9 1c 03 00 00       	jmp    8200451d <_printf_i+0x3a0>
82004201:	8b 45 0c             	mov    0xc(%ebp),%eax
82004204:	8b 00                	mov    (%eax),%eax
82004206:	25 80 00 00 00       	and    $0x80,%eax
8200420b:	85 c0                	test   %eax,%eax
8200420d:	74 11                	je     82004220 <_printf_i+0xa3>
8200420f:	8b 45 18             	mov    0x18(%ebp),%eax
82004212:	8b 00                	mov    (%eax),%eax
82004214:	8d 48 04             	lea    0x4(%eax),%ecx
82004217:	8b 55 18             	mov    0x18(%ebp),%edx
8200421a:	89 0a                	mov    %ecx,(%edx)
8200421c:	8b 00                	mov    (%eax),%eax
8200421e:	eb 2d                	jmp    8200424d <_printf_i+0xd0>
82004220:	8b 45 0c             	mov    0xc(%ebp),%eax
82004223:	8b 00                	mov    (%eax),%eax
82004225:	83 e0 40             	and    $0x40,%eax
82004228:	85 c0                	test   %eax,%eax
8200422a:	74 12                	je     8200423e <_printf_i+0xc1>
8200422c:	8b 45 18             	mov    0x18(%ebp),%eax
8200422f:	8b 00                	mov    (%eax),%eax
82004231:	8d 48 04             	lea    0x4(%eax),%ecx
82004234:	8b 55 18             	mov    0x18(%ebp),%edx
82004237:	89 0a                	mov    %ecx,(%edx)
82004239:	8b 00                	mov    (%eax),%eax
8200423b:	98                   	cwtl   
8200423c:	eb 0f                	jmp    8200424d <_printf_i+0xd0>
8200423e:	8b 45 18             	mov    0x18(%ebp),%eax
82004241:	8b 00                	mov    (%eax),%eax
82004243:	8d 48 04             	lea    0x4(%eax),%ecx
82004246:	8b 55 18             	mov    0x18(%ebp),%edx
82004249:	89 0a                	mov    %ecx,(%edx)
8200424b:	8b 00                	mov    (%eax),%eax
8200424d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004250:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004253:	85 c0                	test   %eax,%eax
82004255:	79 0a                	jns    82004261 <_printf_i+0xe4>
82004257:	f7 5d f4             	negl   -0xc(%ebp)
8200425a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200425d:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
82004261:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
82004268:	e9 28 01 00 00       	jmp    82004395 <_printf_i+0x218>
8200426d:	8b 45 0c             	mov    0xc(%ebp),%eax
82004270:	8b 00                	mov    (%eax),%eax
82004272:	25 80 00 00 00       	and    $0x80,%eax
82004277:	85 c0                	test   %eax,%eax
82004279:	74 11                	je     8200428c <_printf_i+0x10f>
8200427b:	8b 45 18             	mov    0x18(%ebp),%eax
8200427e:	8b 00                	mov    (%eax),%eax
82004280:	8d 48 04             	lea    0x4(%eax),%ecx
82004283:	8b 55 18             	mov    0x18(%ebp),%edx
82004286:	89 0a                	mov    %ecx,(%edx)
82004288:	8b 00                	mov    (%eax),%eax
8200428a:	eb 2f                	jmp    820042bb <_printf_i+0x13e>
8200428c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200428f:	8b 00                	mov    (%eax),%eax
82004291:	83 e0 40             	and    $0x40,%eax
82004294:	85 c0                	test   %eax,%eax
82004296:	74 14                	je     820042ac <_printf_i+0x12f>
82004298:	8b 45 18             	mov    0x18(%ebp),%eax
8200429b:	8b 00                	mov    (%eax),%eax
8200429d:	8d 48 04             	lea    0x4(%eax),%ecx
820042a0:	8b 55 18             	mov    0x18(%ebp),%edx
820042a3:	89 0a                	mov    %ecx,(%edx)
820042a5:	8b 00                	mov    (%eax),%eax
820042a7:	0f b7 c0             	movzwl %ax,%eax
820042aa:	eb 0f                	jmp    820042bb <_printf_i+0x13e>
820042ac:	8b 45 18             	mov    0x18(%ebp),%eax
820042af:	8b 00                	mov    (%eax),%eax
820042b1:	8d 48 04             	lea    0x4(%eax),%ecx
820042b4:	8b 55 18             	mov    0x18(%ebp),%edx
820042b7:	89 0a                	mov    %ecx,(%edx)
820042b9:	8b 00                	mov    (%eax),%eax
820042bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
820042be:	8b 45 0c             	mov    0xc(%ebp),%eax
820042c1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
820042c5:	3c 6f                	cmp    $0x6f,%al
820042c7:	75 07                	jne    820042d0 <_printf_i+0x153>
820042c9:	b8 08 00 00 00       	mov    $0x8,%eax
820042ce:	eb 05                	jmp    820042d5 <_printf_i+0x158>
820042d0:	b8 0a 00 00 00       	mov    $0xa,%eax
820042d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
820042d8:	e9 b1 00 00 00       	jmp    8200438e <_printf_i+0x211>
820042dd:	8b 45 0c             	mov    0xc(%ebp),%eax
820042e0:	c6 40 45 58          	movb   $0x58,0x45(%eax)
820042e4:	eb 1d                	jmp    82004303 <_printf_i+0x186>
820042e6:	8b 45 0c             	mov    0xc(%ebp),%eax
820042e9:	8b 00                	mov    (%eax),%eax
820042eb:	83 c8 20             	or     $0x20,%eax
820042ee:	89 c2                	mov    %eax,%edx
820042f0:	8b 45 0c             	mov    0xc(%ebp),%eax
820042f3:	89 10                	mov    %edx,(%eax)
820042f5:	8b 45 0c             	mov    0xc(%ebp),%eax
820042f8:	c6 40 45 78          	movb   $0x78,0x45(%eax)
820042fc:	c7 45 e8 fd 56 00 82 	movl   $0x820056fd,-0x18(%ebp)
82004303:	8b 45 0c             	mov    0xc(%ebp),%eax
82004306:	8b 00                	mov    (%eax),%eax
82004308:	25 80 00 00 00       	and    $0x80,%eax
8200430d:	85 c0                	test   %eax,%eax
8200430f:	74 11                	je     82004322 <_printf_i+0x1a5>
82004311:	8b 45 18             	mov    0x18(%ebp),%eax
82004314:	8b 00                	mov    (%eax),%eax
82004316:	8d 48 04             	lea    0x4(%eax),%ecx
82004319:	8b 55 18             	mov    0x18(%ebp),%edx
8200431c:	89 0a                	mov    %ecx,(%edx)
8200431e:	8b 00                	mov    (%eax),%eax
82004320:	eb 2f                	jmp    82004351 <_printf_i+0x1d4>
82004322:	8b 45 0c             	mov    0xc(%ebp),%eax
82004325:	8b 00                	mov    (%eax),%eax
82004327:	83 e0 40             	and    $0x40,%eax
8200432a:	85 c0                	test   %eax,%eax
8200432c:	74 14                	je     82004342 <_printf_i+0x1c5>
8200432e:	8b 45 18             	mov    0x18(%ebp),%eax
82004331:	8b 00                	mov    (%eax),%eax
82004333:	8d 48 04             	lea    0x4(%eax),%ecx
82004336:	8b 55 18             	mov    0x18(%ebp),%edx
82004339:	89 0a                	mov    %ecx,(%edx)
8200433b:	8b 00                	mov    (%eax),%eax
8200433d:	0f b7 c0             	movzwl %ax,%eax
82004340:	eb 0f                	jmp    82004351 <_printf_i+0x1d4>
82004342:	8b 45 18             	mov    0x18(%ebp),%eax
82004345:	8b 00                	mov    (%eax),%eax
82004347:	8d 48 04             	lea    0x4(%eax),%ecx
8200434a:	8b 55 18             	mov    0x18(%ebp),%edx
8200434d:	89 0a                	mov    %ecx,(%edx)
8200434f:	8b 00                	mov    (%eax),%eax
82004351:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004354:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
8200435b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200435e:	8b 00                	mov    (%eax),%eax
82004360:	83 e0 01             	and    $0x1,%eax
82004363:	85 c0                	test   %eax,%eax
82004365:	74 0f                	je     82004376 <_printf_i+0x1f9>
82004367:	8b 45 0c             	mov    0xc(%ebp),%eax
8200436a:	8b 00                	mov    (%eax),%eax
8200436c:	83 c8 20             	or     $0x20,%eax
8200436f:	89 c2                	mov    %eax,%edx
82004371:	8b 45 0c             	mov    0xc(%ebp),%eax
82004374:	89 10                	mov    %edx,(%eax)
82004376:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8200437a:	75 11                	jne    8200438d <_printf_i+0x210>
8200437c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200437f:	8b 00                	mov    (%eax),%eax
82004381:	83 e0 df             	and    $0xffffffdf,%eax
82004384:	89 c2                	mov    %eax,%edx
82004386:	8b 45 0c             	mov    0xc(%ebp),%eax
82004389:	89 10                	mov    %edx,(%eax)
8200438b:	eb 01                	jmp    8200438e <_printf_i+0x211>
8200438d:	90                   	nop
8200438e:	8b 45 0c             	mov    0xc(%ebp),%eax
82004391:	c6 40 43 00          	movb   $0x0,0x43(%eax)
82004395:	8b 45 0c             	mov    0xc(%ebp),%eax
82004398:	8b 50 04             	mov    0x4(%eax),%edx
8200439b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200439e:	89 50 08             	mov    %edx,0x8(%eax)
820043a1:	8b 45 0c             	mov    0xc(%ebp),%eax
820043a4:	8b 40 08             	mov    0x8(%eax),%eax
820043a7:	85 c0                	test   %eax,%eax
820043a9:	78 0f                	js     820043ba <_printf_i+0x23d>
820043ab:	8b 45 0c             	mov    0xc(%ebp),%eax
820043ae:	8b 00                	mov    (%eax),%eax
820043b0:	83 e0 fb             	and    $0xfffffffb,%eax
820043b3:	89 c2                	mov    %eax,%edx
820043b5:	8b 45 0c             	mov    0xc(%ebp),%eax
820043b8:	89 10                	mov    %edx,(%eax)
820043ba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
820043be:	75 0a                	jne    820043ca <_printf_i+0x24d>
820043c0:	8b 45 0c             	mov    0xc(%ebp),%eax
820043c3:	8b 40 04             	mov    0x4(%eax),%eax
820043c6:	85 c0                	test   %eax,%eax
820043c8:	74 34                	je     820043fe <_printf_i+0x281>
820043ca:	8b 4d f0             	mov    -0x10(%ebp),%ecx
820043cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
820043d0:	ba 00 00 00 00       	mov    $0x0,%edx
820043d5:	f7 f1                	div    %ecx
820043d7:	8b 45 e8             	mov    -0x18(%ebp),%eax
820043da:	01 d0                	add    %edx,%eax
820043dc:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
820043e0:	0f b6 10             	movzbl (%eax),%edx
820043e3:	8b 45 ec             	mov    -0x14(%ebp),%eax
820043e6:	88 10                	mov    %dl,(%eax)
820043e8:	8b 5d f0             	mov    -0x10(%ebp),%ebx
820043eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
820043ee:	ba 00 00 00 00       	mov    $0x0,%edx
820043f3:	f7 f3                	div    %ebx
820043f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
820043f8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
820043fc:	75 cc                	jne    820043ca <_printf_i+0x24d>
820043fe:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
82004402:	75 26                	jne    8200442a <_printf_i+0x2ad>
82004404:	8b 45 0c             	mov    0xc(%ebp),%eax
82004407:	8b 00                	mov    (%eax),%eax
82004409:	83 e0 01             	and    $0x1,%eax
8200440c:	85 c0                	test   %eax,%eax
8200440e:	74 1a                	je     8200442a <_printf_i+0x2ad>
82004410:	8b 45 0c             	mov    0xc(%ebp),%eax
82004413:	8b 50 04             	mov    0x4(%eax),%edx
82004416:	8b 45 0c             	mov    0xc(%ebp),%eax
82004419:	8b 40 10             	mov    0x10(%eax),%eax
8200441c:	39 c2                	cmp    %eax,%edx
8200441e:	7f 0a                	jg     8200442a <_printf_i+0x2ad>
82004420:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
82004424:	8b 45 ec             	mov    -0x14(%ebp),%eax
82004427:	c6 00 30             	movb   $0x30,(%eax)
8200442a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200442d:	83 c0 1b             	add    $0x1b,%eax
82004430:	83 c0 28             	add    $0x28,%eax
82004433:	2b 45 ec             	sub    -0x14(%ebp),%eax
82004436:	89 c2                	mov    %eax,%edx
82004438:	8b 45 0c             	mov    0xc(%ebp),%eax
8200443b:	89 50 10             	mov    %edx,0x10(%eax)
8200443e:	e9 e2 00 00 00       	jmp    82004525 <_printf_i+0x3a8>
82004443:	8b 45 0c             	mov    0xc(%ebp),%eax
82004446:	8b 00                	mov    (%eax),%eax
82004448:	25 80 00 00 00       	and    $0x80,%eax
8200444d:	85 c0                	test   %eax,%eax
8200444f:	74 19                	je     8200446a <_printf_i+0x2ed>
82004451:	8b 45 18             	mov    0x18(%ebp),%eax
82004454:	8b 00                	mov    (%eax),%eax
82004456:	8d 48 04             	lea    0x4(%eax),%ecx
82004459:	8b 55 18             	mov    0x18(%ebp),%edx
8200445c:	89 0a                	mov    %ecx,(%edx)
8200445e:	8b 00                	mov    (%eax),%eax
82004460:	8b 55 0c             	mov    0xc(%ebp),%edx
82004463:	8b 52 14             	mov    0x14(%edx),%edx
82004466:	89 10                	mov    %edx,(%eax)
82004468:	eb 3f                	jmp    820044a9 <_printf_i+0x32c>
8200446a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200446d:	8b 00                	mov    (%eax),%eax
8200446f:	83 e0 40             	and    $0x40,%eax
82004472:	85 c0                	test   %eax,%eax
82004474:	74 1c                	je     82004492 <_printf_i+0x315>
82004476:	8b 45 0c             	mov    0xc(%ebp),%eax
82004479:	8b 58 14             	mov    0x14(%eax),%ebx
8200447c:	8b 45 18             	mov    0x18(%ebp),%eax
8200447f:	8b 00                	mov    (%eax),%eax
82004481:	8d 48 04             	lea    0x4(%eax),%ecx
82004484:	8b 55 18             	mov    0x18(%ebp),%edx
82004487:	89 0a                	mov    %ecx,(%edx)
82004489:	8b 00                	mov    (%eax),%eax
8200448b:	89 da                	mov    %ebx,%edx
8200448d:	66 89 10             	mov    %dx,(%eax)
82004490:	eb 17                	jmp    820044a9 <_printf_i+0x32c>
82004492:	8b 45 18             	mov    0x18(%ebp),%eax
82004495:	8b 00                	mov    (%eax),%eax
82004497:	8d 48 04             	lea    0x4(%eax),%ecx
8200449a:	8b 55 18             	mov    0x18(%ebp),%edx
8200449d:	89 0a                	mov    %ecx,(%edx)
8200449f:	8b 00                	mov    (%eax),%eax
820044a1:	8b 55 0c             	mov    0xc(%ebp),%edx
820044a4:	8b 52 14             	mov    0x14(%edx),%edx
820044a7:	89 10                	mov    %edx,(%eax)
820044a9:	8b 45 0c             	mov    0xc(%ebp),%eax
820044ac:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
820044b3:	eb 70                	jmp    82004525 <_printf_i+0x3a8>
820044b5:	8b 45 18             	mov    0x18(%ebp),%eax
820044b8:	8b 00                	mov    (%eax),%eax
820044ba:	8d 48 04             	lea    0x4(%eax),%ecx
820044bd:	8b 55 18             	mov    0x18(%ebp),%edx
820044c0:	89 0a                	mov    %ecx,(%edx)
820044c2:	8b 00                	mov    (%eax),%eax
820044c4:	89 45 ec             	mov    %eax,-0x14(%ebp)
820044c7:	8b 45 0c             	mov    0xc(%ebp),%eax
820044ca:	8b 40 04             	mov    0x4(%eax),%eax
820044cd:	83 ec 04             	sub    $0x4,%esp
820044d0:	50                   	push   %eax
820044d1:	6a 00                	push   $0x0
820044d3:	ff 75 ec             	push   -0x14(%ebp)
820044d6:	e8 75 f4 ff ff       	call   82003950 <memchr>
820044db:	83 c4 10             	add    $0x10,%esp
820044de:	89 45 e0             	mov    %eax,-0x20(%ebp)
820044e1:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
820044e5:	74 0e                	je     820044f5 <_printf_i+0x378>
820044e7:	8b 45 e0             	mov    -0x20(%ebp),%eax
820044ea:	2b 45 ec             	sub    -0x14(%ebp),%eax
820044ed:	89 c2                	mov    %eax,%edx
820044ef:	8b 45 0c             	mov    0xc(%ebp),%eax
820044f2:	89 50 04             	mov    %edx,0x4(%eax)
820044f5:	8b 45 0c             	mov    0xc(%ebp),%eax
820044f8:	8b 50 04             	mov    0x4(%eax),%edx
820044fb:	8b 45 0c             	mov    0xc(%ebp),%eax
820044fe:	89 50 10             	mov    %edx,0x10(%eax)
82004501:	eb 1a                	jmp    8200451d <_printf_i+0x3a0>
82004503:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
82004507:	8b 45 0c             	mov    0xc(%ebp),%eax
8200450a:	0f b6 50 18          	movzbl 0x18(%eax),%edx
8200450e:	8b 45 ec             	mov    -0x14(%ebp),%eax
82004511:	88 10                	mov    %dl,(%eax)
82004513:	8b 45 0c             	mov    0xc(%ebp),%eax
82004516:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8200451d:	8b 45 0c             	mov    0xc(%ebp),%eax
82004520:	c6 40 43 00          	movb   $0x0,0x43(%eax)
82004524:	90                   	nop
82004525:	83 ec 0c             	sub    $0xc,%esp
82004528:	ff 75 14             	push   0x14(%ebp)
8200452b:	ff 75 10             	push   0x10(%ebp)
8200452e:	8d 45 d8             	lea    -0x28(%ebp),%eax
82004531:	50                   	push   %eax
82004532:	ff 75 0c             	push   0xc(%ebp)
82004535:	ff 75 08             	push   0x8(%ebp)
82004538:	e8 a5 fa ff ff       	call   82003fe2 <_printf_common>
8200453d:	83 c4 20             	add    $0x20,%esp
82004540:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004543:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
82004547:	74 72                	je     820045bb <_printf_i+0x43e>
82004549:	8b 45 0c             	mov    0xc(%ebp),%eax
8200454c:	8b 40 10             	mov    0x10(%eax),%eax
8200454f:	50                   	push   %eax
82004550:	ff 75 ec             	push   -0x14(%ebp)
82004553:	ff 75 10             	push   0x10(%ebp)
82004556:	ff 75 08             	push   0x8(%ebp)
82004559:	8b 45 14             	mov    0x14(%ebp),%eax
8200455c:	ff d0                	call   *%eax
8200455e:	83 c4 10             	add    $0x10,%esp
82004561:	83 f8 ff             	cmp    $0xffffffff,%eax
82004564:	74 58                	je     820045be <_printf_i+0x441>
82004566:	8b 45 0c             	mov    0xc(%ebp),%eax
82004569:	8b 00                	mov    (%eax),%eax
8200456b:	83 e0 02             	and    $0x2,%eax
8200456e:	85 c0                	test   %eax,%eax
82004570:	74 39                	je     820045ab <_printf_i+0x42e>
82004572:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82004579:	eb 20                	jmp    8200459b <_printf_i+0x41e>
8200457b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200457e:	83 c0 19             	add    $0x19,%eax
82004581:	6a 01                	push   $0x1
82004583:	50                   	push   %eax
82004584:	ff 75 10             	push   0x10(%ebp)
82004587:	ff 75 08             	push   0x8(%ebp)
8200458a:	8b 45 14             	mov    0x14(%ebp),%eax
8200458d:	ff d0                	call   *%eax
8200458f:	83 c4 10             	add    $0x10,%esp
82004592:	83 f8 ff             	cmp    $0xffffffff,%eax
82004595:	74 2a                	je     820045c1 <_printf_i+0x444>
82004597:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8200459b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200459e:	8b 40 0c             	mov    0xc(%eax),%eax
820045a1:	8b 55 d8             	mov    -0x28(%ebp),%edx
820045a4:	29 d0                	sub    %edx,%eax
820045a6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
820045a9:	7c d0                	jl     8200457b <_printf_i+0x3fe>
820045ab:	8b 45 0c             	mov    0xc(%ebp),%eax
820045ae:	8b 50 0c             	mov    0xc(%eax),%edx
820045b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
820045b4:	39 c2                	cmp    %eax,%edx
820045b6:	0f 4d c2             	cmovge %edx,%eax
820045b9:	eb 0c                	jmp    820045c7 <_printf_i+0x44a>
820045bb:	90                   	nop
820045bc:	eb 04                	jmp    820045c2 <_printf_i+0x445>
820045be:	90                   	nop
820045bf:	eb 01                	jmp    820045c2 <_printf_i+0x445>
820045c1:	90                   	nop
820045c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820045c7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820045ca:	c9                   	leave  
820045cb:	c3                   	ret    

820045cc <_read_r>:
820045cc:	55                   	push   %ebp
820045cd:	89 e5                	mov    %esp,%ebp
820045cf:	83 ec 18             	sub    $0x18,%esp
820045d2:	c7 05 8c 64 00 82 00 	movl   $0x0,0x8200648c
820045d9:	00 00 00 
820045dc:	83 ec 04             	sub    $0x4,%esp
820045df:	ff 75 14             	push   0x14(%ebp)
820045e2:	ff 75 10             	push   0x10(%ebp)
820045e5:	ff 75 0c             	push   0xc(%ebp)
820045e8:	e8 a4 bb ff ff       	call   82000191 <read>
820045ed:	83 c4 10             	add    $0x10,%esp
820045f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
820045f3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820045f7:	75 14                	jne    8200460d <_read_r+0x41>
820045f9:	a1 8c 64 00 82       	mov    0x8200648c,%eax
820045fe:	85 c0                	test   %eax,%eax
82004600:	74 0b                	je     8200460d <_read_r+0x41>
82004602:	8b 15 8c 64 00 82    	mov    0x8200648c,%edx
82004608:	8b 45 08             	mov    0x8(%ebp),%eax
8200460b:	89 10                	mov    %edx,(%eax)
8200460d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004610:	c9                   	leave  
82004611:	c3                   	ret    

82004612 <_realloc_r>:
82004612:	55                   	push   %ebp
82004613:	89 e5                	mov    %esp,%ebp
82004615:	83 ec 78             	sub    $0x78,%esp
82004618:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8200461c:	75 16                	jne    82004634 <_realloc_r+0x22>
8200461e:	83 ec 08             	sub    $0x8,%esp
82004621:	ff 75 10             	push   0x10(%ebp)
82004624:	ff 75 08             	push   0x8(%ebp)
82004627:	e8 69 db ff ff       	call   82002195 <_malloc_r>
8200462c:	83 c4 10             	add    $0x10,%esp
8200462f:	e9 b6 08 00 00       	jmp    82004eea <_realloc_r+0x8d8>
82004634:	83 ec 0c             	sub    $0xc,%esp
82004637:	ff 75 08             	push   0x8(%ebp)
8200463a:	e8 49 e4 ff ff       	call   82002a88 <__malloc_lock>
8200463f:	83 c4 10             	add    $0x10,%esp
82004642:	8b 45 0c             	mov    0xc(%ebp),%eax
82004645:	83 e8 08             	sub    $0x8,%eax
82004648:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8200464b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8200464e:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004651:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004654:	8b 40 04             	mov    0x4(%eax),%eax
82004657:	83 e0 fc             	and    $0xfffffffc,%eax
8200465a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8200465d:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004660:	89 45 f0             	mov    %eax,-0x10(%ebp)
82004663:	8b 45 10             	mov    0x10(%ebp),%eax
82004666:	83 c0 0b             	add    $0xb,%eax
82004669:	83 f8 16             	cmp    $0x16,%eax
8200466c:	76 0b                	jbe    82004679 <_realloc_r+0x67>
8200466e:	8b 45 10             	mov    0x10(%ebp),%eax
82004671:	83 c0 0b             	add    $0xb,%eax
82004674:	83 e0 f8             	and    $0xfffffff8,%eax
82004677:	eb 05                	jmp    8200467e <_realloc_r+0x6c>
82004679:	b8 10 00 00 00       	mov    $0x10,%eax
8200467e:	89 45 bc             	mov    %eax,-0x44(%ebp)
82004681:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004684:	85 c0                	test   %eax,%eax
82004686:	78 08                	js     82004690 <_realloc_r+0x7e>
82004688:	8b 45 bc             	mov    -0x44(%ebp),%eax
8200468b:	3b 45 10             	cmp    0x10(%ebp),%eax
8200468e:	73 13                	jae    820046a3 <_realloc_r+0x91>
82004690:	8b 45 08             	mov    0x8(%ebp),%eax
82004693:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82004699:	b8 00 00 00 00       	mov    $0x0,%eax
8200469e:	e9 47 08 00 00       	jmp    82004eea <_realloc_r+0x8d8>
820046a3:	8b 55 c0             	mov    -0x40(%ebp),%edx
820046a6:	8b 45 bc             	mov    -0x44(%ebp),%eax
820046a9:	39 c2                	cmp    %eax,%edx
820046ab:	0f 8d 8b 07 00 00    	jge    82004e3c <_realloc_r+0x82a>
820046b1:	8b 55 c4             	mov    -0x3c(%ebp),%edx
820046b4:	8b 45 c0             	mov    -0x40(%ebp),%eax
820046b7:	01 d0                	add    %edx,%eax
820046b9:	89 45 ec             	mov    %eax,-0x14(%ebp)
820046bc:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820046c1:	8b 40 08             	mov    0x8(%eax),%eax
820046c4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
820046c7:	74 1e                	je     820046e7 <_realloc_r+0xd5>
820046c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
820046cc:	8b 40 04             	mov    0x4(%eax),%eax
820046cf:	83 e0 fe             	and    $0xfffffffe,%eax
820046d2:	89 c2                	mov    %eax,%edx
820046d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
820046d7:	01 d0                	add    %edx,%eax
820046d9:	8b 40 04             	mov    0x4(%eax),%eax
820046dc:	83 e0 01             	and    $0x1,%eax
820046df:	85 c0                	test   %eax,%eax
820046e1:	0f 85 ca 00 00 00    	jne    820047b1 <_realloc_r+0x19f>
820046e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
820046ea:	8b 40 04             	mov    0x4(%eax),%eax
820046ed:	83 e0 fc             	and    $0xfffffffc,%eax
820046f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
820046f3:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820046f8:	8b 40 08             	mov    0x8(%eax),%eax
820046fb:	39 45 ec             	cmp    %eax,-0x14(%ebp)
820046fe:	75 71                	jne    82004771 <_realloc_r+0x15f>
82004700:	8b 55 e8             	mov    -0x18(%ebp),%edx
82004703:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004706:	01 d0                	add    %edx,%eax
82004708:	89 c2                	mov    %eax,%edx
8200470a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8200470d:	83 c0 10             	add    $0x10,%eax
82004710:	39 c2                	cmp    %eax,%edx
82004712:	0f 8c a9 00 00 00    	jl     820047c1 <_realloc_r+0x1af>
82004718:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200471b:	01 45 f0             	add    %eax,-0x10(%ebp)
8200471e:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82004723:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
82004726:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004729:	01 c8                	add    %ecx,%eax
8200472b:	89 42 08             	mov    %eax,0x8(%edx)
8200472e:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004731:	2b 45 bc             	sub    -0x44(%ebp),%eax
82004734:	89 c2                	mov    %eax,%edx
82004736:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
8200473b:	8b 40 08             	mov    0x8(%eax),%eax
8200473e:	83 ca 01             	or     $0x1,%edx
82004741:	89 50 04             	mov    %edx,0x4(%eax)
82004744:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004747:	8b 40 04             	mov    0x4(%eax),%eax
8200474a:	83 e0 01             	and    $0x1,%eax
8200474d:	0b 45 bc             	or     -0x44(%ebp),%eax
82004750:	89 c2                	mov    %eax,%edx
82004752:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004755:	89 50 04             	mov    %edx,0x4(%eax)
82004758:	83 ec 0c             	sub    $0xc,%esp
8200475b:	ff 75 08             	push   0x8(%ebp)
8200475e:	e8 2b e3 ff ff       	call   82002a8e <__malloc_unlock>
82004763:	83 c4 10             	add    $0x10,%esp
82004766:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004769:	83 c0 08             	add    $0x8,%eax
8200476c:	e9 79 07 00 00       	jmp    82004eea <_realloc_r+0x8d8>
82004771:	8b 55 e8             	mov    -0x18(%ebp),%edx
82004774:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004777:	01 d0                	add    %edx,%eax
82004779:	89 c2                	mov    %eax,%edx
8200477b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8200477e:	39 c2                	cmp    %eax,%edx
82004780:	7c 3f                	jl     820047c1 <_realloc_r+0x1af>
82004782:	8b 45 ec             	mov    -0x14(%ebp),%eax
82004785:	8b 40 0c             	mov    0xc(%eax),%eax
82004788:	89 45 b8             	mov    %eax,-0x48(%ebp)
8200478b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200478e:	8b 40 08             	mov    0x8(%eax),%eax
82004791:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82004794:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82004797:	8b 55 b8             	mov    -0x48(%ebp),%edx
8200479a:	89 50 0c             	mov    %edx,0xc(%eax)
8200479d:	8b 45 b8             	mov    -0x48(%ebp),%eax
820047a0:	8b 55 b4             	mov    -0x4c(%ebp),%edx
820047a3:	89 50 08             	mov    %edx,0x8(%eax)
820047a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
820047a9:	01 45 f0             	add    %eax,-0x10(%ebp)
820047ac:	e9 8c 06 00 00       	jmp    82004e3d <_realloc_r+0x82b>
820047b1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
820047b8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
820047bf:	eb 01                	jmp    820047c2 <_realloc_r+0x1b0>
820047c1:	90                   	nop
820047c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820047c5:	8b 40 04             	mov    0x4(%eax),%eax
820047c8:	83 e0 01             	and    $0x1,%eax
820047cb:	85 c0                	test   %eax,%eax
820047cd:	0f 85 d6 04 00 00    	jne    82004ca9 <_realloc_r+0x697>
820047d3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820047d6:	8b 00                	mov    (%eax),%eax
820047d8:	f7 d8                	neg    %eax
820047da:	89 c2                	mov    %eax,%edx
820047dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
820047df:	01 d0                	add    %edx,%eax
820047e1:	89 45 b0             	mov    %eax,-0x50(%ebp)
820047e4:	8b 45 b0             	mov    -0x50(%ebp),%eax
820047e7:	8b 40 04             	mov    0x4(%eax),%eax
820047ea:	83 e0 fc             	and    $0xfffffffc,%eax
820047ed:	89 45 ac             	mov    %eax,-0x54(%ebp)
820047f0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
820047f4:	0f 84 4a 03 00 00    	je     82004b44 <_realloc_r+0x532>
820047fa:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
820047ff:	8b 40 08             	mov    0x8(%eax),%eax
82004802:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82004805:	0f 85 b0 01 00 00    	jne    820049bb <_realloc_r+0x3a9>
8200480b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8200480e:	8b 45 ac             	mov    -0x54(%ebp),%eax
82004811:	01 c2                	add    %eax,%edx
82004813:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004816:	01 d0                	add    %edx,%eax
82004818:	89 c2                	mov    %eax,%edx
8200481a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8200481d:	83 c0 10             	add    $0x10,%eax
82004820:	39 c2                	cmp    %eax,%edx
82004822:	0f 8c 1c 03 00 00    	jl     82004b44 <_realloc_r+0x532>
82004828:	8b 45 b0             	mov    -0x50(%ebp),%eax
8200482b:	8b 40 0c             	mov    0xc(%eax),%eax
8200482e:	89 45 b8             	mov    %eax,-0x48(%ebp)
82004831:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004834:	8b 40 08             	mov    0x8(%eax),%eax
82004837:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8200483a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8200483d:	8b 55 b8             	mov    -0x48(%ebp),%edx
82004840:	89 50 0c             	mov    %edx,0xc(%eax)
82004843:	8b 45 b8             	mov    -0x48(%ebp),%eax
82004846:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82004849:	89 50 08             	mov    %edx,0x8(%eax)
8200484c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8200484f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004852:	8b 55 ac             	mov    -0x54(%ebp),%edx
82004855:	8b 45 e8             	mov    -0x18(%ebp),%eax
82004858:	01 d0                	add    %edx,%eax
8200485a:	01 45 f0             	add    %eax,-0x10(%ebp)
8200485d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004860:	83 c0 08             	add    $0x8,%eax
82004863:	89 45 a8             	mov    %eax,-0x58(%ebp)
82004866:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004869:	83 e8 04             	sub    $0x4,%eax
8200486c:	89 45 a0             	mov    %eax,-0x60(%ebp)
8200486f:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
82004873:	0f 87 de 00 00 00    	ja     82004957 <_realloc_r+0x345>
82004879:	8b 45 0c             	mov    0xc(%ebp),%eax
8200487c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8200487f:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004882:	89 45 e0             	mov    %eax,-0x20(%ebp)
82004885:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
82004889:	0f 86 90 00 00 00    	jbe    8200491f <_realloc_r+0x30d>
8200488f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82004892:	8d 42 04             	lea    0x4(%edx),%eax
82004895:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82004898:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200489b:	8d 48 04             	lea    0x4(%eax),%ecx
8200489e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
820048a1:	8b 12                	mov    (%edx),%edx
820048a3:	89 10                	mov    %edx,(%eax)
820048a5:	8b 55 e4             	mov    -0x1c(%ebp),%edx
820048a8:	8d 42 04             	lea    0x4(%edx),%eax
820048ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820048ae:	8b 45 e0             	mov    -0x20(%ebp),%eax
820048b1:	8d 48 04             	lea    0x4(%eax),%ecx
820048b4:	89 4d e0             	mov    %ecx,-0x20(%ebp)
820048b7:	8b 12                	mov    (%edx),%edx
820048b9:	89 10                	mov    %edx,(%eax)
820048bb:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
820048bf:	76 5e                	jbe    8200491f <_realloc_r+0x30d>
820048c1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
820048c4:	8d 42 04             	lea    0x4(%edx),%eax
820048c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820048ca:	8b 45 e0             	mov    -0x20(%ebp),%eax
820048cd:	8d 48 04             	lea    0x4(%eax),%ecx
820048d0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
820048d3:	8b 12                	mov    (%edx),%edx
820048d5:	89 10                	mov    %edx,(%eax)
820048d7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
820048da:	8d 42 04             	lea    0x4(%edx),%eax
820048dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820048e0:	8b 45 e0             	mov    -0x20(%ebp),%eax
820048e3:	8d 48 04             	lea    0x4(%eax),%ecx
820048e6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
820048e9:	8b 12                	mov    (%edx),%edx
820048eb:	89 10                	mov    %edx,(%eax)
820048ed:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
820048f1:	76 2c                	jbe    8200491f <_realloc_r+0x30d>
820048f3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
820048f6:	8d 42 04             	lea    0x4(%edx),%eax
820048f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820048fc:	8b 45 e0             	mov    -0x20(%ebp),%eax
820048ff:	8d 48 04             	lea    0x4(%eax),%ecx
82004902:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82004905:	8b 12                	mov    (%edx),%edx
82004907:	89 10                	mov    %edx,(%eax)
82004909:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8200490c:	8d 42 04             	lea    0x4(%edx),%eax
8200490f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82004912:	8b 45 e0             	mov    -0x20(%ebp),%eax
82004915:	8d 48 04             	lea    0x4(%eax),%ecx
82004918:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8200491b:	8b 12                	mov    (%edx),%edx
8200491d:	89 10                	mov    %edx,(%eax)
8200491f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82004922:	8d 42 04             	lea    0x4(%edx),%eax
82004925:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82004928:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200492b:	8d 48 04             	lea    0x4(%eax),%ecx
8200492e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82004931:	8b 12                	mov    (%edx),%edx
82004933:	89 10                	mov    %edx,(%eax)
82004935:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82004938:	8d 42 04             	lea    0x4(%edx),%eax
8200493b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8200493e:	8b 45 e0             	mov    -0x20(%ebp),%eax
82004941:	8d 48 04             	lea    0x4(%eax),%ecx
82004944:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82004947:	8b 12                	mov    (%edx),%edx
82004949:	89 10                	mov    %edx,(%eax)
8200494b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8200494e:	8b 10                	mov    (%eax),%edx
82004950:	8b 45 e0             	mov    -0x20(%ebp),%eax
82004953:	89 10                	mov    %edx,(%eax)
82004955:	eb 14                	jmp    8200496b <_realloc_r+0x359>
82004957:	83 ec 04             	sub    $0x4,%esp
8200495a:	ff 75 a0             	push   -0x60(%ebp)
8200495d:	ff 75 0c             	push   0xc(%ebp)
82004960:	ff 75 a8             	push   -0x58(%ebp)
82004963:	e8 88 f0 ff ff       	call   820039f0 <memmove>
82004968:	83 c4 10             	add    $0x10,%esp
8200496b:	ba 80 5e 00 82       	mov    $0x82005e80,%edx
82004970:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82004973:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004976:	01 c8                	add    %ecx,%eax
82004978:	89 42 08             	mov    %eax,0x8(%edx)
8200497b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200497e:	2b 45 bc             	sub    -0x44(%ebp),%eax
82004981:	89 c2                	mov    %eax,%edx
82004983:	b8 80 5e 00 82       	mov    $0x82005e80,%eax
82004988:	8b 40 08             	mov    0x8(%eax),%eax
8200498b:	83 ca 01             	or     $0x1,%edx
8200498e:	89 50 04             	mov    %edx,0x4(%eax)
82004991:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004994:	8b 40 04             	mov    0x4(%eax),%eax
82004997:	83 e0 01             	and    $0x1,%eax
8200499a:	0b 45 bc             	or     -0x44(%ebp),%eax
8200499d:	89 c2                	mov    %eax,%edx
8200499f:	8b 45 f4             	mov    -0xc(%ebp),%eax
820049a2:	89 50 04             	mov    %edx,0x4(%eax)
820049a5:	83 ec 0c             	sub    $0xc,%esp
820049a8:	ff 75 08             	push   0x8(%ebp)
820049ab:	e8 de e0 ff ff       	call   82002a8e <__malloc_unlock>
820049b0:	83 c4 10             	add    $0x10,%esp
820049b3:	8b 45 a8             	mov    -0x58(%ebp),%eax
820049b6:	e9 2f 05 00 00       	jmp    82004eea <_realloc_r+0x8d8>
820049bb:	8b 55 e8             	mov    -0x18(%ebp),%edx
820049be:	8b 45 ac             	mov    -0x54(%ebp),%eax
820049c1:	01 c2                	add    %eax,%edx
820049c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
820049c6:	01 d0                	add    %edx,%eax
820049c8:	89 c2                	mov    %eax,%edx
820049ca:	8b 45 bc             	mov    -0x44(%ebp),%eax
820049cd:	39 c2                	cmp    %eax,%edx
820049cf:	0f 8c 6f 01 00 00    	jl     82004b44 <_realloc_r+0x532>
820049d5:	8b 45 ec             	mov    -0x14(%ebp),%eax
820049d8:	8b 40 0c             	mov    0xc(%eax),%eax
820049db:	89 45 b8             	mov    %eax,-0x48(%ebp)
820049de:	8b 45 ec             	mov    -0x14(%ebp),%eax
820049e1:	8b 40 08             	mov    0x8(%eax),%eax
820049e4:	89 45 b4             	mov    %eax,-0x4c(%ebp)
820049e7:	8b 45 b4             	mov    -0x4c(%ebp),%eax
820049ea:	8b 55 b8             	mov    -0x48(%ebp),%edx
820049ed:	89 50 0c             	mov    %edx,0xc(%eax)
820049f0:	8b 45 b8             	mov    -0x48(%ebp),%eax
820049f3:	8b 55 b4             	mov    -0x4c(%ebp),%edx
820049f6:	89 50 08             	mov    %edx,0x8(%eax)
820049f9:	8b 45 b0             	mov    -0x50(%ebp),%eax
820049fc:	8b 40 0c             	mov    0xc(%eax),%eax
820049ff:	89 45 b8             	mov    %eax,-0x48(%ebp)
82004a02:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004a05:	8b 40 08             	mov    0x8(%eax),%eax
82004a08:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82004a0b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82004a0e:	8b 55 b8             	mov    -0x48(%ebp),%edx
82004a11:	89 50 0c             	mov    %edx,0xc(%eax)
82004a14:	8b 45 b8             	mov    -0x48(%ebp),%eax
82004a17:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82004a1a:	89 50 08             	mov    %edx,0x8(%eax)
82004a1d:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004a20:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004a23:	8b 55 e8             	mov    -0x18(%ebp),%edx
82004a26:	8b 45 ac             	mov    -0x54(%ebp),%eax
82004a29:	01 d0                	add    %edx,%eax
82004a2b:	01 45 f0             	add    %eax,-0x10(%ebp)
82004a2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004a31:	83 c0 08             	add    $0x8,%eax
82004a34:	89 45 a8             	mov    %eax,-0x58(%ebp)
82004a37:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004a3a:	83 e8 04             	sub    $0x4,%eax
82004a3d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
82004a40:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
82004a44:	0f 87 e1 00 00 00    	ja     82004b2b <_realloc_r+0x519>
82004a4a:	8b 45 0c             	mov    0xc(%ebp),%eax
82004a4d:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004a50:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004a53:	89 45 d8             	mov    %eax,-0x28(%ebp)
82004a56:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
82004a5a:	0f 86 90 00 00 00    	jbe    82004af0 <_realloc_r+0x4de>
82004a60:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004a63:	8d 42 04             	lea    0x4(%edx),%eax
82004a66:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004a69:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004a6c:	8d 48 04             	lea    0x4(%eax),%ecx
82004a6f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004a72:	8b 12                	mov    (%edx),%edx
82004a74:	89 10                	mov    %edx,(%eax)
82004a76:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004a79:	8d 42 04             	lea    0x4(%edx),%eax
82004a7c:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004a7f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004a82:	8d 48 04             	lea    0x4(%eax),%ecx
82004a85:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004a88:	8b 12                	mov    (%edx),%edx
82004a8a:	89 10                	mov    %edx,(%eax)
82004a8c:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
82004a90:	76 5e                	jbe    82004af0 <_realloc_r+0x4de>
82004a92:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004a95:	8d 42 04             	lea    0x4(%edx),%eax
82004a98:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004a9b:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004a9e:	8d 48 04             	lea    0x4(%eax),%ecx
82004aa1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004aa4:	8b 12                	mov    (%edx),%edx
82004aa6:	89 10                	mov    %edx,(%eax)
82004aa8:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004aab:	8d 42 04             	lea    0x4(%edx),%eax
82004aae:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004ab1:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004ab4:	8d 48 04             	lea    0x4(%eax),%ecx
82004ab7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004aba:	8b 12                	mov    (%edx),%edx
82004abc:	89 10                	mov    %edx,(%eax)
82004abe:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
82004ac2:	76 2c                	jbe    82004af0 <_realloc_r+0x4de>
82004ac4:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004ac7:	8d 42 04             	lea    0x4(%edx),%eax
82004aca:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004acd:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004ad0:	8d 48 04             	lea    0x4(%eax),%ecx
82004ad3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004ad6:	8b 12                	mov    (%edx),%edx
82004ad8:	89 10                	mov    %edx,(%eax)
82004ada:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004add:	8d 42 04             	lea    0x4(%edx),%eax
82004ae0:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004ae3:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004ae6:	8d 48 04             	lea    0x4(%eax),%ecx
82004ae9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004aec:	8b 12                	mov    (%edx),%edx
82004aee:	89 10                	mov    %edx,(%eax)
82004af0:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004af3:	8d 42 04             	lea    0x4(%edx),%eax
82004af6:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004af9:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004afc:	8d 48 04             	lea    0x4(%eax),%ecx
82004aff:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004b02:	8b 12                	mov    (%edx),%edx
82004b04:	89 10                	mov    %edx,(%eax)
82004b06:	8b 55 dc             	mov    -0x24(%ebp),%edx
82004b09:	8d 42 04             	lea    0x4(%edx),%eax
82004b0c:	89 45 dc             	mov    %eax,-0x24(%ebp)
82004b0f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004b12:	8d 48 04             	lea    0x4(%eax),%ecx
82004b15:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82004b18:	8b 12                	mov    (%edx),%edx
82004b1a:	89 10                	mov    %edx,(%eax)
82004b1c:	8b 45 dc             	mov    -0x24(%ebp),%eax
82004b1f:	8b 10                	mov    (%eax),%edx
82004b21:	8b 45 d8             	mov    -0x28(%ebp),%eax
82004b24:	89 10                	mov    %edx,(%eax)
82004b26:	e9 12 03 00 00       	jmp    82004e3d <_realloc_r+0x82b>
82004b2b:	83 ec 04             	sub    $0x4,%esp
82004b2e:	ff 75 a4             	push   -0x5c(%ebp)
82004b31:	ff 75 0c             	push   0xc(%ebp)
82004b34:	ff 75 a8             	push   -0x58(%ebp)
82004b37:	e8 b4 ee ff ff       	call   820039f0 <memmove>
82004b3c:	83 c4 10             	add    $0x10,%esp
82004b3f:	e9 f9 02 00 00       	jmp    82004e3d <_realloc_r+0x82b>
82004b44:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
82004b48:	0f 84 5b 01 00 00    	je     82004ca9 <_realloc_r+0x697>
82004b4e:	8b 55 ac             	mov    -0x54(%ebp),%edx
82004b51:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004b54:	01 d0                	add    %edx,%eax
82004b56:	89 c2                	mov    %eax,%edx
82004b58:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004b5b:	39 c2                	cmp    %eax,%edx
82004b5d:	0f 8c 46 01 00 00    	jl     82004ca9 <_realloc_r+0x697>
82004b63:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004b66:	8b 40 0c             	mov    0xc(%eax),%eax
82004b69:	89 45 b8             	mov    %eax,-0x48(%ebp)
82004b6c:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004b6f:	8b 40 08             	mov    0x8(%eax),%eax
82004b72:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82004b75:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82004b78:	8b 55 b8             	mov    -0x48(%ebp),%edx
82004b7b:	89 50 0c             	mov    %edx,0xc(%eax)
82004b7e:	8b 45 b8             	mov    -0x48(%ebp),%eax
82004b81:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82004b84:	89 50 08             	mov    %edx,0x8(%eax)
82004b87:	8b 45 b0             	mov    -0x50(%ebp),%eax
82004b8a:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004b8d:	8b 45 ac             	mov    -0x54(%ebp),%eax
82004b90:	01 45 f0             	add    %eax,-0x10(%ebp)
82004b93:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004b96:	83 c0 08             	add    $0x8,%eax
82004b99:	89 45 a8             	mov    %eax,-0x58(%ebp)
82004b9c:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004b9f:	83 e8 04             	sub    $0x4,%eax
82004ba2:	89 45 9c             	mov    %eax,-0x64(%ebp)
82004ba5:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
82004ba9:	0f 87 e1 00 00 00    	ja     82004c90 <_realloc_r+0x67e>
82004baf:	8b 45 0c             	mov    0xc(%ebp),%eax
82004bb2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004bb5:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004bb8:	89 45 d0             	mov    %eax,-0x30(%ebp)
82004bbb:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
82004bbf:	0f 86 90 00 00 00    	jbe    82004c55 <_realloc_r+0x643>
82004bc5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004bc8:	8d 42 04             	lea    0x4(%edx),%eax
82004bcb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004bce:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004bd1:	8d 48 04             	lea    0x4(%eax),%ecx
82004bd4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004bd7:	8b 12                	mov    (%edx),%edx
82004bd9:	89 10                	mov    %edx,(%eax)
82004bdb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004bde:	8d 42 04             	lea    0x4(%edx),%eax
82004be1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004be4:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004be7:	8d 48 04             	lea    0x4(%eax),%ecx
82004bea:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004bed:	8b 12                	mov    (%edx),%edx
82004bef:	89 10                	mov    %edx,(%eax)
82004bf1:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
82004bf5:	76 5e                	jbe    82004c55 <_realloc_r+0x643>
82004bf7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004bfa:	8d 42 04             	lea    0x4(%edx),%eax
82004bfd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c00:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c03:	8d 48 04             	lea    0x4(%eax),%ecx
82004c06:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c09:	8b 12                	mov    (%edx),%edx
82004c0b:	89 10                	mov    %edx,(%eax)
82004c0d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004c10:	8d 42 04             	lea    0x4(%edx),%eax
82004c13:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c16:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c19:	8d 48 04             	lea    0x4(%eax),%ecx
82004c1c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c1f:	8b 12                	mov    (%edx),%edx
82004c21:	89 10                	mov    %edx,(%eax)
82004c23:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
82004c27:	76 2c                	jbe    82004c55 <_realloc_r+0x643>
82004c29:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004c2c:	8d 42 04             	lea    0x4(%edx),%eax
82004c2f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c32:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c35:	8d 48 04             	lea    0x4(%eax),%ecx
82004c38:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c3b:	8b 12                	mov    (%edx),%edx
82004c3d:	89 10                	mov    %edx,(%eax)
82004c3f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004c42:	8d 42 04             	lea    0x4(%edx),%eax
82004c45:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c48:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c4b:	8d 48 04             	lea    0x4(%eax),%ecx
82004c4e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c51:	8b 12                	mov    (%edx),%edx
82004c53:	89 10                	mov    %edx,(%eax)
82004c55:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004c58:	8d 42 04             	lea    0x4(%edx),%eax
82004c5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c5e:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c61:	8d 48 04             	lea    0x4(%eax),%ecx
82004c64:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c67:	8b 12                	mov    (%edx),%edx
82004c69:	89 10                	mov    %edx,(%eax)
82004c6b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82004c6e:	8d 42 04             	lea    0x4(%edx),%eax
82004c71:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82004c74:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c77:	8d 48 04             	lea    0x4(%eax),%ecx
82004c7a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82004c7d:	8b 12                	mov    (%edx),%edx
82004c7f:	89 10                	mov    %edx,(%eax)
82004c81:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82004c84:	8b 10                	mov    (%eax),%edx
82004c86:	8b 45 d0             	mov    -0x30(%ebp),%eax
82004c89:	89 10                	mov    %edx,(%eax)
82004c8b:	e9 ad 01 00 00       	jmp    82004e3d <_realloc_r+0x82b>
82004c90:	83 ec 04             	sub    $0x4,%esp
82004c93:	ff 75 9c             	push   -0x64(%ebp)
82004c96:	ff 75 0c             	push   0xc(%ebp)
82004c99:	ff 75 a8             	push   -0x58(%ebp)
82004c9c:	e8 4f ed ff ff       	call   820039f0 <memmove>
82004ca1:	83 c4 10             	add    $0x10,%esp
82004ca4:	e9 94 01 00 00       	jmp    82004e3d <_realloc_r+0x82b>
82004ca9:	83 ec 08             	sub    $0x8,%esp
82004cac:	ff 75 10             	push   0x10(%ebp)
82004caf:	ff 75 08             	push   0x8(%ebp)
82004cb2:	e8 de d4 ff ff       	call   82002195 <_malloc_r>
82004cb7:	83 c4 10             	add    $0x10,%esp
82004cba:	89 45 a8             	mov    %eax,-0x58(%ebp)
82004cbd:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
82004cc1:	75 18                	jne    82004cdb <_realloc_r+0x6c9>
82004cc3:	83 ec 0c             	sub    $0xc,%esp
82004cc6:	ff 75 08             	push   0x8(%ebp)
82004cc9:	e8 c0 dd ff ff       	call   82002a8e <__malloc_unlock>
82004cce:	83 c4 10             	add    $0x10,%esp
82004cd1:	b8 00 00 00 00       	mov    $0x0,%eax
82004cd6:	e9 0f 02 00 00       	jmp    82004eea <_realloc_r+0x8d8>
82004cdb:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004cde:	83 e8 08             	sub    $0x8,%eax
82004ce1:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004ce4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004ce7:	8b 40 04             	mov    0x4(%eax),%eax
82004cea:	83 e0 fe             	and    $0xfffffffe,%eax
82004ced:	89 c2                	mov    %eax,%edx
82004cef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004cf2:	01 d0                	add    %edx,%eax
82004cf4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
82004cf7:	75 17                	jne    82004d10 <_realloc_r+0x6fe>
82004cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004cfc:	8b 40 04             	mov    0x4(%eax),%eax
82004cff:	83 e0 fc             	and    $0xfffffffc,%eax
82004d02:	01 45 f0             	add    %eax,-0x10(%ebp)
82004d05:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82004d08:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004d0b:	e9 2d 01 00 00       	jmp    82004e3d <_realloc_r+0x82b>
82004d10:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004d13:	83 e8 04             	sub    $0x4,%eax
82004d16:	89 45 98             	mov    %eax,-0x68(%ebp)
82004d19:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
82004d1d:	0f 87 de 00 00 00    	ja     82004e01 <_realloc_r+0x7ef>
82004d23:	8b 45 0c             	mov    0xc(%ebp),%eax
82004d26:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004d29:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004d2c:	89 45 c8             	mov    %eax,-0x38(%ebp)
82004d2f:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
82004d33:	0f 86 90 00 00 00    	jbe    82004dc9 <_realloc_r+0x7b7>
82004d39:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004d3c:	8d 42 04             	lea    0x4(%edx),%eax
82004d3f:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004d42:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004d45:	8d 48 04             	lea    0x4(%eax),%ecx
82004d48:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004d4b:	8b 12                	mov    (%edx),%edx
82004d4d:	89 10                	mov    %edx,(%eax)
82004d4f:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004d52:	8d 42 04             	lea    0x4(%edx),%eax
82004d55:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004d58:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004d5b:	8d 48 04             	lea    0x4(%eax),%ecx
82004d5e:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004d61:	8b 12                	mov    (%edx),%edx
82004d63:	89 10                	mov    %edx,(%eax)
82004d65:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
82004d69:	76 5e                	jbe    82004dc9 <_realloc_r+0x7b7>
82004d6b:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004d6e:	8d 42 04             	lea    0x4(%edx),%eax
82004d71:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004d74:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004d77:	8d 48 04             	lea    0x4(%eax),%ecx
82004d7a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004d7d:	8b 12                	mov    (%edx),%edx
82004d7f:	89 10                	mov    %edx,(%eax)
82004d81:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004d84:	8d 42 04             	lea    0x4(%edx),%eax
82004d87:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004d8a:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004d8d:	8d 48 04             	lea    0x4(%eax),%ecx
82004d90:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004d93:	8b 12                	mov    (%edx),%edx
82004d95:	89 10                	mov    %edx,(%eax)
82004d97:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
82004d9b:	76 2c                	jbe    82004dc9 <_realloc_r+0x7b7>
82004d9d:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004da0:	8d 42 04             	lea    0x4(%edx),%eax
82004da3:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004da6:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004da9:	8d 48 04             	lea    0x4(%eax),%ecx
82004dac:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004daf:	8b 12                	mov    (%edx),%edx
82004db1:	89 10                	mov    %edx,(%eax)
82004db3:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004db6:	8d 42 04             	lea    0x4(%edx),%eax
82004db9:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004dbc:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004dbf:	8d 48 04             	lea    0x4(%eax),%ecx
82004dc2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004dc5:	8b 12                	mov    (%edx),%edx
82004dc7:	89 10                	mov    %edx,(%eax)
82004dc9:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004dcc:	8d 42 04             	lea    0x4(%edx),%eax
82004dcf:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004dd2:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004dd5:	8d 48 04             	lea    0x4(%eax),%ecx
82004dd8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004ddb:	8b 12                	mov    (%edx),%edx
82004ddd:	89 10                	mov    %edx,(%eax)
82004ddf:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004de2:	8d 42 04             	lea    0x4(%edx),%eax
82004de5:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004de8:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004deb:	8d 48 04             	lea    0x4(%eax),%ecx
82004dee:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004df1:	8b 12                	mov    (%edx),%edx
82004df3:	89 10                	mov    %edx,(%eax)
82004df5:	8b 45 cc             	mov    -0x34(%ebp),%eax
82004df8:	8b 10                	mov    (%eax),%edx
82004dfa:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004dfd:	89 10                	mov    %edx,(%eax)
82004dff:	eb 14                	jmp    82004e15 <_realloc_r+0x803>
82004e01:	83 ec 04             	sub    $0x4,%esp
82004e04:	ff 75 98             	push   -0x68(%ebp)
82004e07:	ff 75 0c             	push   0xc(%ebp)
82004e0a:	ff 75 a8             	push   -0x58(%ebp)
82004e0d:	e8 de eb ff ff       	call   820039f0 <memmove>
82004e12:	83 c4 10             	add    $0x10,%esp
82004e15:	83 ec 08             	sub    $0x8,%esp
82004e18:	ff 75 0c             	push   0xc(%ebp)
82004e1b:	ff 75 08             	push   0x8(%ebp)
82004e1e:	e8 e9 c2 ff ff       	call   8200110c <_free_r>
82004e23:	83 c4 10             	add    $0x10,%esp
82004e26:	83 ec 0c             	sub    $0xc,%esp
82004e29:	ff 75 08             	push   0x8(%ebp)
82004e2c:	e8 5d dc ff ff       	call   82002a8e <__malloc_unlock>
82004e31:	83 c4 10             	add    $0x10,%esp
82004e34:	8b 45 a8             	mov    -0x58(%ebp),%eax
82004e37:	e9 ae 00 00 00       	jmp    82004eea <_realloc_r+0x8d8>
82004e3c:	90                   	nop
82004e3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004e40:	2b 45 bc             	sub    -0x44(%ebp),%eax
82004e43:	89 45 94             	mov    %eax,-0x6c(%ebp)
82004e46:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
82004e4a:	76 5d                	jbe    82004ea9 <_realloc_r+0x897>
82004e4c:	8b 55 f4             	mov    -0xc(%ebp),%edx
82004e4f:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004e52:	01 d0                	add    %edx,%eax
82004e54:	89 45 90             	mov    %eax,-0x70(%ebp)
82004e57:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004e5a:	8b 40 04             	mov    0x4(%eax),%eax
82004e5d:	83 e0 01             	and    $0x1,%eax
82004e60:	0b 45 bc             	or     -0x44(%ebp),%eax
82004e63:	89 c2                	mov    %eax,%edx
82004e65:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004e68:	89 50 04             	mov    %edx,0x4(%eax)
82004e6b:	8b 45 94             	mov    -0x6c(%ebp),%eax
82004e6e:	83 c8 01             	or     $0x1,%eax
82004e71:	89 c2                	mov    %eax,%edx
82004e73:	8b 45 90             	mov    -0x70(%ebp),%eax
82004e76:	89 50 04             	mov    %edx,0x4(%eax)
82004e79:	8b 55 90             	mov    -0x70(%ebp),%edx
82004e7c:	8b 45 94             	mov    -0x6c(%ebp),%eax
82004e7f:	01 d0                	add    %edx,%eax
82004e81:	8b 50 04             	mov    0x4(%eax),%edx
82004e84:	8b 4d 90             	mov    -0x70(%ebp),%ecx
82004e87:	8b 45 94             	mov    -0x6c(%ebp),%eax
82004e8a:	01 c8                	add    %ecx,%eax
82004e8c:	83 ca 01             	or     $0x1,%edx
82004e8f:	89 50 04             	mov    %edx,0x4(%eax)
82004e92:	8b 45 90             	mov    -0x70(%ebp),%eax
82004e95:	83 c0 08             	add    $0x8,%eax
82004e98:	83 ec 08             	sub    $0x8,%esp
82004e9b:	50                   	push   %eax
82004e9c:	ff 75 08             	push   0x8(%ebp)
82004e9f:	e8 68 c2 ff ff       	call   8200110c <_free_r>
82004ea4:	83 c4 10             	add    $0x10,%esp
82004ea7:	eb 2d                	jmp    82004ed6 <_realloc_r+0x8c4>
82004ea9:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004eac:	8b 40 04             	mov    0x4(%eax),%eax
82004eaf:	83 e0 01             	and    $0x1,%eax
82004eb2:	0b 45 f0             	or     -0x10(%ebp),%eax
82004eb5:	89 c2                	mov    %eax,%edx
82004eb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004eba:	89 50 04             	mov    %edx,0x4(%eax)
82004ebd:	8b 55 f4             	mov    -0xc(%ebp),%edx
82004ec0:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004ec3:	01 d0                	add    %edx,%eax
82004ec5:	8b 50 04             	mov    0x4(%eax),%edx
82004ec8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82004ecb:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004ece:	01 c8                	add    %ecx,%eax
82004ed0:	83 ca 01             	or     $0x1,%edx
82004ed3:	89 50 04             	mov    %edx,0x4(%eax)
82004ed6:	83 ec 0c             	sub    $0xc,%esp
82004ed9:	ff 75 08             	push   0x8(%ebp)
82004edc:	e8 ad db ff ff       	call   82002a8e <__malloc_unlock>
82004ee1:	83 c4 10             	add    $0x10,%esp
82004ee4:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004ee7:	83 c0 08             	add    $0x8,%eax
82004eea:	c9                   	leave  
82004eeb:	c3                   	ret    

82004eec <__swbuf_r>:
82004eec:	55                   	push   %ebp
82004eed:	89 e5                	mov    %esp,%ebp
82004eef:	57                   	push   %edi
82004ef0:	56                   	push   %esi
82004ef1:	53                   	push   %ebx
82004ef2:	83 ec 1c             	sub    $0x1c,%esp
82004ef5:	8b 7d 0c             	mov    0xc(%ebp),%edi
82004ef8:	8b 5d 10             	mov    0x10(%ebp),%ebx
82004efb:	8b 45 08             	mov    0x8(%ebp),%eax
82004efe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82004f01:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82004f05:	74 18                	je     82004f1f <__swbuf_r+0x33>
82004f07:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82004f0a:	8b 40 38             	mov    0x38(%eax),%eax
82004f0d:	85 c0                	test   %eax,%eax
82004f0f:	75 0e                	jne    82004f1f <__swbuf_r+0x33>
82004f11:	83 ec 0c             	sub    $0xc,%esp
82004f14:	ff 75 e4             	push   -0x1c(%ebp)
82004f17:	e8 55 bd ff ff       	call   82000c71 <__sinit>
82004f1c:	83 c4 10             	add    $0x10,%esp
82004f1f:	8b 43 18             	mov    0x18(%ebx),%eax
82004f22:	89 43 08             	mov    %eax,0x8(%ebx)
82004f25:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004f29:	98                   	cwtl   
82004f2a:	83 e0 08             	and    $0x8,%eax
82004f2d:	85 c0                	test   %eax,%eax
82004f2f:	74 07                	je     82004f38 <__swbuf_r+0x4c>
82004f31:	8b 43 10             	mov    0x10(%ebx),%eax
82004f34:	85 c0                	test   %eax,%eax
82004f36:	75 1d                	jne    82004f55 <__swbuf_r+0x69>
82004f38:	83 ec 08             	sub    $0x8,%esp
82004f3b:	53                   	push   %ebx
82004f3c:	ff 75 08             	push   0x8(%ebp)
82004f3f:	e8 db 00 00 00       	call   8200501f <__swsetup_r>
82004f44:	83 c4 10             	add    $0x10,%esp
82004f47:	85 c0                	test   %eax,%eax
82004f49:	74 0a                	je     82004f55 <__swbuf_r+0x69>
82004f4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82004f50:	e9 a1 00 00 00       	jmp    82004ff6 <__swbuf_r+0x10a>
82004f55:	89 f8                	mov    %edi,%eax
82004f57:	0f b6 f8             	movzbl %al,%edi
82004f5a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004f5e:	98                   	cwtl   
82004f5f:	25 00 20 00 00       	and    $0x2000,%eax
82004f64:	85 c0                	test   %eax,%eax
82004f66:	75 14                	jne    82004f7c <__swbuf_r+0x90>
82004f68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004f6c:	80 cc 20             	or     $0x20,%ah
82004f6f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82004f73:	8b 43 64             	mov    0x64(%ebx),%eax
82004f76:	80 e4 df             	and    $0xdf,%ah
82004f79:	89 43 64             	mov    %eax,0x64(%ebx)
82004f7c:	8b 03                	mov    (%ebx),%eax
82004f7e:	8b 53 10             	mov    0x10(%ebx),%edx
82004f81:	29 d0                	sub    %edx,%eax
82004f83:	89 c6                	mov    %eax,%esi
82004f85:	8b 43 14             	mov    0x14(%ebx),%eax
82004f88:	39 c6                	cmp    %eax,%esi
82004f8a:	7c 1f                	jl     82004fab <__swbuf_r+0xbf>
82004f8c:	83 ec 08             	sub    $0x8,%esp
82004f8f:	53                   	push   %ebx
82004f90:	ff 75 08             	push   0x8(%ebp)
82004f93:	e8 53 b9 ff ff       	call   820008eb <_fflush_r>
82004f98:	83 c4 10             	add    $0x10,%esp
82004f9b:	85 c0                	test   %eax,%eax
82004f9d:	74 07                	je     82004fa6 <__swbuf_r+0xba>
82004f9f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82004fa4:	eb 50                	jmp    82004ff6 <__swbuf_r+0x10a>
82004fa6:	be 00 00 00 00       	mov    $0x0,%esi
82004fab:	8b 43 08             	mov    0x8(%ebx),%eax
82004fae:	83 e8 01             	sub    $0x1,%eax
82004fb1:	89 43 08             	mov    %eax,0x8(%ebx)
82004fb4:	8b 03                	mov    (%ebx),%eax
82004fb6:	8d 50 01             	lea    0x1(%eax),%edx
82004fb9:	89 13                	mov    %edx,(%ebx)
82004fbb:	89 fa                	mov    %edi,%edx
82004fbd:	88 10                	mov    %dl,(%eax)
82004fbf:	83 c6 01             	add    $0x1,%esi
82004fc2:	8b 43 14             	mov    0x14(%ebx),%eax
82004fc5:	39 c6                	cmp    %eax,%esi
82004fc7:	74 11                	je     82004fda <__swbuf_r+0xee>
82004fc9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004fcd:	98                   	cwtl   
82004fce:	83 e0 01             	and    $0x1,%eax
82004fd1:	85 c0                	test   %eax,%eax
82004fd3:	74 1f                	je     82004ff4 <__swbuf_r+0x108>
82004fd5:	83 ff 0a             	cmp    $0xa,%edi
82004fd8:	75 1a                	jne    82004ff4 <__swbuf_r+0x108>
82004fda:	83 ec 08             	sub    $0x8,%esp
82004fdd:	53                   	push   %ebx
82004fde:	ff 75 08             	push   0x8(%ebp)
82004fe1:	e8 05 b9 ff ff       	call   820008eb <_fflush_r>
82004fe6:	83 c4 10             	add    $0x10,%esp
82004fe9:	85 c0                	test   %eax,%eax
82004feb:	74 07                	je     82004ff4 <__swbuf_r+0x108>
82004fed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82004ff2:	eb 02                	jmp    82004ff6 <__swbuf_r+0x10a>
82004ff4:	89 f8                	mov    %edi,%eax
82004ff6:	8d 65 f4             	lea    -0xc(%ebp),%esp
82004ff9:	5b                   	pop    %ebx
82004ffa:	5e                   	pop    %esi
82004ffb:	5f                   	pop    %edi
82004ffc:	5d                   	pop    %ebp
82004ffd:	c3                   	ret    

82004ffe <__swbuf>:
82004ffe:	55                   	push   %ebp
82004fff:	89 e5                	mov    %esp,%ebp
82005001:	83 ec 08             	sub    $0x8,%esp
82005004:	8b 55 08             	mov    0x8(%ebp),%edx
82005007:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8200500a:	a1 64 5e 00 82       	mov    0x82005e64,%eax
8200500f:	83 ec 04             	sub    $0x4,%esp
82005012:	51                   	push   %ecx
82005013:	52                   	push   %edx
82005014:	50                   	push   %eax
82005015:	e8 d2 fe ff ff       	call   82004eec <__swbuf_r>
8200501a:	83 c4 10             	add    $0x10,%esp
8200501d:	c9                   	leave  
8200501e:	c3                   	ret    

8200501f <__swsetup_r>:
8200501f:	55                   	push   %ebp
82005020:	89 e5                	mov    %esp,%ebp
82005022:	53                   	push   %ebx
82005023:	83 ec 14             	sub    $0x14,%esp
82005026:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82005029:	a1 64 5e 00 82       	mov    0x82005e64,%eax
8200502e:	89 45 f4             	mov    %eax,-0xc(%ebp)
82005031:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82005035:	74 18                	je     8200504f <__swsetup_r+0x30>
82005037:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200503a:	8b 40 38             	mov    0x38(%eax),%eax
8200503d:	85 c0                	test   %eax,%eax
8200503f:	75 0e                	jne    8200504f <__swsetup_r+0x30>
82005041:	83 ec 0c             	sub    $0xc,%esp
82005044:	ff 75 f4             	push   -0xc(%ebp)
82005047:	e8 25 bc ff ff       	call   82000c71 <__sinit>
8200504c:	83 c4 10             	add    $0x10,%esp
8200504f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005053:	98                   	cwtl   
82005054:	83 e0 08             	and    $0x8,%eax
82005057:	85 c0                	test   %eax,%eax
82005059:	0f 85 82 00 00 00    	jne    820050e1 <__swsetup_r+0xc2>
8200505f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005063:	98                   	cwtl   
82005064:	83 e0 10             	and    $0x10,%eax
82005067:	85 c0                	test   %eax,%eax
82005069:	75 1e                	jne    82005089 <__swsetup_r+0x6a>
8200506b:	8b 45 08             	mov    0x8(%ebp),%eax
8200506e:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
82005074:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005078:	83 c8 40             	or     $0x40,%eax
8200507b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200507f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82005084:	e9 ec 00 00 00       	jmp    82005175 <__swsetup_r+0x156>
82005089:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200508d:	98                   	cwtl   
8200508e:	83 e0 04             	and    $0x4,%eax
82005091:	85 c0                	test   %eax,%eax
82005093:	74 41                	je     820050d6 <__swsetup_r+0xb7>
82005095:	8b 43 30             	mov    0x30(%ebx),%eax
82005098:	85 c0                	test   %eax,%eax
8200509a:	74 23                	je     820050bf <__swsetup_r+0xa0>
8200509c:	8b 53 30             	mov    0x30(%ebx),%edx
8200509f:	8d 43 40             	lea    0x40(%ebx),%eax
820050a2:	39 c2                	cmp    %eax,%edx
820050a4:	74 12                	je     820050b8 <__swsetup_r+0x99>
820050a6:	8b 43 30             	mov    0x30(%ebx),%eax
820050a9:	83 ec 08             	sub    $0x8,%esp
820050ac:	50                   	push   %eax
820050ad:	ff 75 08             	push   0x8(%ebp)
820050b0:	e8 57 c0 ff ff       	call   8200110c <_free_r>
820050b5:	83 c4 10             	add    $0x10,%esp
820050b8:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
820050bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820050c3:	83 e0 db             	and    $0xffffffdb,%eax
820050c6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820050ca:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
820050d1:	8b 43 10             	mov    0x10(%ebx),%eax
820050d4:	89 03                	mov    %eax,(%ebx)
820050d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820050da:	83 c8 08             	or     $0x8,%eax
820050dd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820050e1:	8b 43 10             	mov    0x10(%ebx),%eax
820050e4:	85 c0                	test   %eax,%eax
820050e6:	75 2b                	jne    82005113 <__swsetup_r+0xf4>
820050e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820050ec:	98                   	cwtl   
820050ed:	25 00 02 00 00       	and    $0x200,%eax
820050f2:	85 c0                	test   %eax,%eax
820050f4:	74 0e                	je     82005104 <__swsetup_r+0xe5>
820050f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820050fa:	98                   	cwtl   
820050fb:	25 80 00 00 00       	and    $0x80,%eax
82005100:	85 c0                	test   %eax,%eax
82005102:	74 0f                	je     82005113 <__swsetup_r+0xf4>
82005104:	83 ec 08             	sub    $0x8,%esp
82005107:	53                   	push   %ebx
82005108:	ff 75 08             	push   0x8(%ebp)
8200510b:	e8 39 cc ff ff       	call   82001d49 <__smakebuf_r>
82005110:	83 c4 10             	add    $0x10,%esp
82005113:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005117:	98                   	cwtl   
82005118:	83 e0 01             	and    $0x1,%eax
8200511b:	85 c0                	test   %eax,%eax
8200511d:	74 11                	je     82005130 <__swsetup_r+0x111>
8200511f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
82005126:	8b 43 14             	mov    0x14(%ebx),%eax
82005129:	f7 d8                	neg    %eax
8200512b:	89 43 18             	mov    %eax,0x18(%ebx)
8200512e:	eb 19                	jmp    82005149 <__swsetup_r+0x12a>
82005130:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005134:	98                   	cwtl   
82005135:	83 e0 02             	and    $0x2,%eax
82005138:	85 c0                	test   %eax,%eax
8200513a:	75 05                	jne    82005141 <__swsetup_r+0x122>
8200513c:	8b 43 14             	mov    0x14(%ebx),%eax
8200513f:	eb 05                	jmp    82005146 <__swsetup_r+0x127>
82005141:	b8 00 00 00 00       	mov    $0x0,%eax
82005146:	89 43 08             	mov    %eax,0x8(%ebx)
82005149:	8b 43 10             	mov    0x10(%ebx),%eax
8200514c:	85 c0                	test   %eax,%eax
8200514e:	75 20                	jne    82005170 <__swsetup_r+0x151>
82005150:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005154:	98                   	cwtl   
82005155:	25 80 00 00 00       	and    $0x80,%eax
8200515a:	85 c0                	test   %eax,%eax
8200515c:	74 12                	je     82005170 <__swsetup_r+0x151>
8200515e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82005162:	83 c8 40             	or     $0x40,%eax
82005165:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82005169:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200516e:	eb 05                	jmp    82005175 <__swsetup_r+0x156>
82005170:	b8 00 00 00 00       	mov    $0x0,%eax
82005175:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82005178:	c9                   	leave  
82005179:	c3                   	ret    

8200517a <__sputc_r>:
8200517a:	55                   	push   %ebp
8200517b:	89 e5                	mov    %esp,%ebp
8200517d:	83 ec 08             	sub    $0x8,%esp
82005180:	8b 45 10             	mov    0x10(%ebp),%eax
82005183:	8b 40 08             	mov    0x8(%eax),%eax
82005186:	8d 50 ff             	lea    -0x1(%eax),%edx
82005189:	8b 45 10             	mov    0x10(%ebp),%eax
8200518c:	89 50 08             	mov    %edx,0x8(%eax)
8200518f:	8b 45 10             	mov    0x10(%ebp),%eax
82005192:	8b 40 08             	mov    0x8(%eax),%eax
82005195:	85 c0                	test   %eax,%eax
82005197:	79 17                	jns    820051b0 <__sputc_r+0x36>
82005199:	8b 45 10             	mov    0x10(%ebp),%eax
8200519c:	8b 50 08             	mov    0x8(%eax),%edx
8200519f:	8b 45 10             	mov    0x10(%ebp),%eax
820051a2:	8b 40 18             	mov    0x18(%eax),%eax
820051a5:	39 c2                	cmp    %eax,%edx
820051a7:	7c 21                	jl     820051ca <__sputc_r+0x50>
820051a9:	8b 45 0c             	mov    0xc(%ebp),%eax
820051ac:	3c 0a                	cmp    $0xa,%al
820051ae:	74 1a                	je     820051ca <__sputc_r+0x50>
820051b0:	8b 45 10             	mov    0x10(%ebp),%eax
820051b3:	8b 00                	mov    (%eax),%eax
820051b5:	8d 48 01             	lea    0x1(%eax),%ecx
820051b8:	8b 55 10             	mov    0x10(%ebp),%edx
820051bb:	89 0a                	mov    %ecx,(%edx)
820051bd:	8b 55 0c             	mov    0xc(%ebp),%edx
820051c0:	88 10                	mov    %dl,(%eax)
820051c2:	0f b6 00             	movzbl (%eax),%eax
820051c5:	0f b6 c0             	movzbl %al,%eax
820051c8:	eb 14                	jmp    820051de <__sputc_r+0x64>
820051ca:	83 ec 04             	sub    $0x4,%esp
820051cd:	ff 75 10             	push   0x10(%ebp)
820051d0:	ff 75 0c             	push   0xc(%ebp)
820051d3:	ff 75 08             	push   0x8(%ebp)
820051d6:	e8 11 fd ff ff       	call   82004eec <__swbuf_r>
820051db:	83 c4 10             	add    $0x10,%esp
820051de:	c9                   	leave  
820051df:	c3                   	ret    

820051e0 <__fputwc>:
820051e0:	55                   	push   %ebp
820051e1:	89 e5                	mov    %esp,%ebp
820051e3:	83 ec 18             	sub    $0x18,%esp
820051e6:	e8 b7 01 00 00       	call   820053a2 <__locale_mb_cur_max>
820051eb:	83 f8 01             	cmp    $0x1,%eax
820051ee:	75 1e                	jne    8200520e <__fputwc+0x2e>
820051f0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
820051f4:	7e 18                	jle    8200520e <__fputwc+0x2e>
820051f6:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
820051fd:	7f 0f                	jg     8200520e <__fputwc+0x2e>
820051ff:	8b 45 0c             	mov    0xc(%ebp),%eax
82005202:	88 45 ef             	mov    %al,-0x11(%ebp)
82005205:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8200520c:	eb 3c                	jmp    8200524a <__fputwc+0x6a>
8200520e:	8b 45 10             	mov    0x10(%ebp),%eax
82005211:	83 c0 5c             	add    $0x5c,%eax
82005214:	50                   	push   %eax
82005215:	ff 75 0c             	push   0xc(%ebp)
82005218:	8d 45 ef             	lea    -0x11(%ebp),%eax
8200521b:	50                   	push   %eax
8200521c:	ff 75 08             	push   0x8(%ebp)
8200521f:	e8 00 03 00 00       	call   82005524 <_wcrtomb_r>
82005224:	83 c4 10             	add    $0x10,%esp
82005227:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200522a:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8200522e:	75 1a                	jne    8200524a <__fputwc+0x6a>
82005230:	8b 45 10             	mov    0x10(%ebp),%eax
82005233:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82005237:	83 c8 40             	or     $0x40,%eax
8200523a:	89 c2                	mov    %eax,%edx
8200523c:	8b 45 10             	mov    0x10(%ebp),%eax
8200523f:	66 89 50 0c          	mov    %dx,0xc(%eax)
82005243:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82005248:	eb 44                	jmp    8200528e <__fputwc+0xae>
8200524a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82005251:	eb 30                	jmp    82005283 <__fputwc+0xa3>
82005253:	8d 55 ef             	lea    -0x11(%ebp),%edx
82005256:	8b 45 f4             	mov    -0xc(%ebp),%eax
82005259:	01 d0                	add    %edx,%eax
8200525b:	0f b6 00             	movzbl (%eax),%eax
8200525e:	0f b6 c0             	movzbl %al,%eax
82005261:	83 ec 04             	sub    $0x4,%esp
82005264:	ff 75 10             	push   0x10(%ebp)
82005267:	50                   	push   %eax
82005268:	ff 75 08             	push   0x8(%ebp)
8200526b:	e8 0a ff ff ff       	call   8200517a <__sputc_r>
82005270:	83 c4 10             	add    $0x10,%esp
82005273:	83 f8 ff             	cmp    $0xffffffff,%eax
82005276:	75 07                	jne    8200527f <__fputwc+0x9f>
82005278:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200527d:	eb 0f                	jmp    8200528e <__fputwc+0xae>
8200527f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82005283:	8b 45 f4             	mov    -0xc(%ebp),%eax
82005286:	3b 45 f0             	cmp    -0x10(%ebp),%eax
82005289:	72 c8                	jb     82005253 <__fputwc+0x73>
8200528b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200528e:	c9                   	leave  
8200528f:	c3                   	ret    

82005290 <_fputwc_r>:
82005290:	55                   	push   %ebp
82005291:	89 e5                	mov    %esp,%ebp
82005293:	83 ec 18             	sub    $0x18,%esp
82005296:	8b 45 10             	mov    0x10(%ebp),%eax
82005299:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8200529d:	98                   	cwtl   
8200529e:	25 00 20 00 00       	and    $0x2000,%eax
820052a3:	85 c0                	test   %eax,%eax
820052a5:	75 24                	jne    820052cb <_fputwc_r+0x3b>
820052a7:	8b 45 10             	mov    0x10(%ebp),%eax
820052aa:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
820052ae:	80 cc 20             	or     $0x20,%ah
820052b1:	89 c2                	mov    %eax,%edx
820052b3:	8b 45 10             	mov    0x10(%ebp),%eax
820052b6:	66 89 50 0c          	mov    %dx,0xc(%eax)
820052ba:	8b 45 10             	mov    0x10(%ebp),%eax
820052bd:	8b 40 64             	mov    0x64(%eax),%eax
820052c0:	80 cc 20             	or     $0x20,%ah
820052c3:	89 c2                	mov    %eax,%edx
820052c5:	8b 45 10             	mov    0x10(%ebp),%eax
820052c8:	89 50 64             	mov    %edx,0x64(%eax)
820052cb:	83 ec 04             	sub    $0x4,%esp
820052ce:	ff 75 10             	push   0x10(%ebp)
820052d1:	ff 75 0c             	push   0xc(%ebp)
820052d4:	ff 75 08             	push   0x8(%ebp)
820052d7:	e8 04 ff ff ff       	call   820051e0 <__fputwc>
820052dc:	83 c4 10             	add    $0x10,%esp
820052df:	89 45 f4             	mov    %eax,-0xc(%ebp)
820052e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
820052e5:	c9                   	leave  
820052e6:	c3                   	ret    

820052e7 <fputwc>:
820052e7:	55                   	push   %ebp
820052e8:	89 e5                	mov    %esp,%ebp
820052ea:	83 ec 18             	sub    $0x18,%esp
820052ed:	a1 64 5e 00 82       	mov    0x82005e64,%eax
820052f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
820052f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
820052f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
820052fb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
820052ff:	74 18                	je     82005319 <fputwc+0x32>
82005301:	8b 45 f0             	mov    -0x10(%ebp),%eax
82005304:	8b 40 38             	mov    0x38(%eax),%eax
82005307:	85 c0                	test   %eax,%eax
82005309:	75 0e                	jne    82005319 <fputwc+0x32>
8200530b:	83 ec 0c             	sub    $0xc,%esp
8200530e:	ff 75 f0             	push   -0x10(%ebp)
82005311:	e8 5b b9 ff ff       	call   82000c71 <__sinit>
82005316:	83 c4 10             	add    $0x10,%esp
82005319:	83 ec 04             	sub    $0x4,%esp
8200531c:	ff 75 0c             	push   0xc(%ebp)
8200531f:	ff 75 08             	push   0x8(%ebp)
82005322:	ff 75 f4             	push   -0xc(%ebp)
82005325:	e8 66 ff ff ff       	call   82005290 <_fputwc_r>
8200532a:	83 c4 10             	add    $0x10,%esp
8200532d:	c9                   	leave  
8200532e:	c3                   	ret    

8200532f <__get_global_locale>:
8200532f:	55                   	push   %ebp
82005330:	89 e5                	mov    %esp,%ebp
82005332:	b8 a0 62 00 82       	mov    $0x820062a0,%eax
82005337:	5d                   	pop    %ebp
82005338:	c3                   	ret    

82005339 <__get_current_locale>:
82005339:	55                   	push   %ebp
8200533a:	89 e5                	mov    %esp,%ebp
8200533c:	e8 ee ff ff ff       	call   8200532f <__get_global_locale>
82005341:	5d                   	pop    %ebp
82005342:	c3                   	ret    

82005343 <_setlocale_r>:
82005343:	55                   	push   %ebp
82005344:	89 e5                	mov    %esp,%ebp
82005346:	83 ec 08             	sub    $0x8,%esp
82005349:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8200534d:	74 4c                	je     8200539b <_setlocale_r+0x58>
8200534f:	83 ec 08             	sub    $0x8,%esp
82005352:	68 97 57 00 82       	push   $0x82005797
82005357:	ff 75 10             	push   0x10(%ebp)
8200535a:	e8 0c 01 00 00       	call   8200546b <strcmp>
8200535f:	83 c4 10             	add    $0x10,%esp
82005362:	85 c0                	test   %eax,%eax
82005364:	74 35                	je     8200539b <_setlocale_r+0x58>
82005366:	83 ec 08             	sub    $0x8,%esp
82005369:	68 9d 57 00 82       	push   $0x8200579d
8200536e:	ff 75 10             	push   0x10(%ebp)
82005371:	e8 f5 00 00 00       	call   8200546b <strcmp>
82005376:	83 c4 10             	add    $0x10,%esp
82005379:	85 c0                	test   %eax,%eax
8200537b:	74 1e                	je     8200539b <_setlocale_r+0x58>
8200537d:	83 ec 08             	sub    $0x8,%esp
82005380:	68 96 57 00 82       	push   $0x82005796
82005385:	ff 75 10             	push   0x10(%ebp)
82005388:	e8 de 00 00 00       	call   8200546b <strcmp>
8200538d:	83 c4 10             	add    $0x10,%esp
82005390:	85 c0                	test   %eax,%eax
82005392:	74 07                	je     8200539b <_setlocale_r+0x58>
82005394:	b8 00 00 00 00       	mov    $0x0,%eax
82005399:	eb 05                	jmp    820053a0 <_setlocale_r+0x5d>
8200539b:	b8 9d 57 00 82       	mov    $0x8200579d,%eax
820053a0:	c9                   	leave  
820053a1:	c3                   	ret    

820053a2 <__locale_mb_cur_max>:
820053a2:	55                   	push   %ebp
820053a3:	89 e5                	mov    %esp,%ebp
820053a5:	e8 8f ff ff ff       	call   82005339 <__get_current_locale>
820053aa:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
820053b1:	0f be c0             	movsbl %al,%eax
820053b4:	5d                   	pop    %ebp
820053b5:	c3                   	ret    

820053b6 <setlocale>:
820053b6:	55                   	push   %ebp
820053b7:	89 e5                	mov    %esp,%ebp
820053b9:	83 ec 08             	sub    $0x8,%esp
820053bc:	a1 64 5e 00 82       	mov    0x82005e64,%eax
820053c1:	83 ec 04             	sub    $0x4,%esp
820053c4:	ff 75 0c             	push   0xc(%ebp)
820053c7:	ff 75 08             	push   0x8(%ebp)
820053ca:	50                   	push   %eax
820053cb:	e8 73 ff ff ff       	call   82005343 <_setlocale_r>
820053d0:	83 c4 10             	add    $0x10,%esp
820053d3:	c9                   	leave  
820053d4:	c3                   	ret    

820053d5 <__get_global_locale>:
820053d5:	55                   	push   %ebp
820053d6:	89 e5                	mov    %esp,%ebp
820053d8:	b8 a0 62 00 82       	mov    $0x820062a0,%eax
820053dd:	5d                   	pop    %ebp
820053de:	c3                   	ret    

820053df <__get_current_locale>:
820053df:	55                   	push   %ebp
820053e0:	89 e5                	mov    %esp,%ebp
820053e2:	e8 ee ff ff ff       	call   820053d5 <__get_global_locale>
820053e7:	5d                   	pop    %ebp
820053e8:	c3                   	ret    

820053e9 <_mbtowc_r>:
820053e9:	55                   	push   %ebp
820053ea:	89 e5                	mov    %esp,%ebp
820053ec:	83 ec 08             	sub    $0x8,%esp
820053ef:	e8 eb ff ff ff       	call   820053df <__get_current_locale>
820053f4:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
820053fa:	83 ec 0c             	sub    $0xc,%esp
820053fd:	ff 75 18             	push   0x18(%ebp)
82005400:	ff 75 14             	push   0x14(%ebp)
82005403:	ff 75 10             	push   0x10(%ebp)
82005406:	ff 75 0c             	push   0xc(%ebp)
82005409:	ff 75 08             	push   0x8(%ebp)
8200540c:	ff d0                	call   *%eax
8200540e:	83 c4 20             	add    $0x20,%esp
82005411:	c9                   	leave  
82005412:	c3                   	ret    

82005413 <__ascii_mbtowc>:
82005413:	55                   	push   %ebp
82005414:	89 e5                	mov    %esp,%ebp
82005416:	83 ec 10             	sub    $0x10,%esp
82005419:	8b 45 10             	mov    0x10(%ebp),%eax
8200541c:	89 45 fc             	mov    %eax,-0x4(%ebp)
8200541f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82005423:	75 06                	jne    8200542b <__ascii_mbtowc+0x18>
82005425:	8d 45 f8             	lea    -0x8(%ebp),%eax
82005428:	89 45 0c             	mov    %eax,0xc(%ebp)
8200542b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8200542f:	75 07                	jne    82005438 <__ascii_mbtowc+0x25>
82005431:	b8 00 00 00 00       	mov    $0x0,%eax
82005436:	eb 31                	jmp    82005469 <__ascii_mbtowc+0x56>
82005438:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8200543c:	75 07                	jne    82005445 <__ascii_mbtowc+0x32>
8200543e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
82005443:	eb 24                	jmp    82005469 <__ascii_mbtowc+0x56>
82005445:	8b 45 fc             	mov    -0x4(%ebp),%eax
82005448:	0f b6 00             	movzbl (%eax),%eax
8200544b:	0f b6 d0             	movzbl %al,%edx
8200544e:	8b 45 0c             	mov    0xc(%ebp),%eax
82005451:	89 10                	mov    %edx,(%eax)
82005453:	8b 45 fc             	mov    -0x4(%ebp),%eax
82005456:	0f b6 00             	movzbl (%eax),%eax
82005459:	84 c0                	test   %al,%al
8200545b:	75 07                	jne    82005464 <__ascii_mbtowc+0x51>
8200545d:	b8 00 00 00 00       	mov    $0x0,%eax
82005462:	eb 05                	jmp    82005469 <__ascii_mbtowc+0x56>
82005464:	b8 01 00 00 00       	mov    $0x1,%eax
82005469:	c9                   	leave  
8200546a:	c3                   	ret    

8200546b <strcmp>:
8200546b:	55                   	push   %ebp
8200546c:	89 e5                	mov    %esp,%ebp
8200546e:	83 ec 10             	sub    $0x10,%esp
82005471:	8b 55 08             	mov    0x8(%ebp),%edx
82005474:	8b 45 0c             	mov    0xc(%ebp),%eax
82005477:	09 d0                	or     %edx,%eax
82005479:	83 e0 03             	and    $0x3,%eax
8200547c:	85 c0                	test   %eax,%eax
8200547e:	75 5e                	jne    820054de <strcmp+0x73>
82005480:	8b 45 08             	mov    0x8(%ebp),%eax
82005483:	89 45 fc             	mov    %eax,-0x4(%ebp)
82005486:	8b 45 0c             	mov    0xc(%ebp),%eax
82005489:	89 45 f8             	mov    %eax,-0x8(%ebp)
8200548c:	eb 2c                	jmp    820054ba <strcmp+0x4f>
8200548e:	8b 45 fc             	mov    -0x4(%ebp),%eax
82005491:	8b 00                	mov    (%eax),%eax
82005493:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
82005499:	8b 45 fc             	mov    -0x4(%ebp),%eax
8200549c:	8b 00                	mov    (%eax),%eax
8200549e:	f7 d0                	not    %eax
820054a0:	21 d0                	and    %edx,%eax
820054a2:	25 80 80 80 80       	and    $0x80808080,%eax
820054a7:	85 c0                	test   %eax,%eax
820054a9:	74 07                	je     820054b2 <strcmp+0x47>
820054ab:	b8 00 00 00 00       	mov    $0x0,%eax
820054b0:	eb 5c                	jmp    8200550e <strcmp+0xa3>
820054b2:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
820054b6:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
820054ba:	8b 45 fc             	mov    -0x4(%ebp),%eax
820054bd:	8b 10                	mov    (%eax),%edx
820054bf:	8b 45 f8             	mov    -0x8(%ebp),%eax
820054c2:	8b 00                	mov    (%eax),%eax
820054c4:	39 c2                	cmp    %eax,%edx
820054c6:	74 c6                	je     8200548e <strcmp+0x23>
820054c8:	8b 45 fc             	mov    -0x4(%ebp),%eax
820054cb:	89 45 08             	mov    %eax,0x8(%ebp)
820054ce:	8b 45 f8             	mov    -0x8(%ebp),%eax
820054d1:	89 45 0c             	mov    %eax,0xc(%ebp)
820054d4:	eb 08                	jmp    820054de <strcmp+0x73>
820054d6:	83 45 08 01          	addl   $0x1,0x8(%ebp)
820054da:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
820054de:	8b 45 08             	mov    0x8(%ebp),%eax
820054e1:	0f b6 00             	movzbl (%eax),%eax
820054e4:	84 c0                	test   %al,%al
820054e6:	74 10                	je     820054f8 <strcmp+0x8d>
820054e8:	8b 45 08             	mov    0x8(%ebp),%eax
820054eb:	0f b6 10             	movzbl (%eax),%edx
820054ee:	8b 45 0c             	mov    0xc(%ebp),%eax
820054f1:	0f b6 00             	movzbl (%eax),%eax
820054f4:	38 c2                	cmp    %al,%dl
820054f6:	74 de                	je     820054d6 <strcmp+0x6b>
820054f8:	8b 45 08             	mov    0x8(%ebp),%eax
820054fb:	0f b6 00             	movzbl (%eax),%eax
820054fe:	0f b6 d0             	movzbl %al,%edx
82005501:	8b 45 0c             	mov    0xc(%ebp),%eax
82005504:	0f b6 00             	movzbl (%eax),%eax
82005507:	0f b6 c8             	movzbl %al,%ecx
8200550a:	89 d0                	mov    %edx,%eax
8200550c:	29 c8                	sub    %ecx,%eax
8200550e:	c9                   	leave  
8200550f:	c3                   	ret    

82005510 <__get_global_locale>:
82005510:	55                   	push   %ebp
82005511:	89 e5                	mov    %esp,%ebp
82005513:	b8 a0 62 00 82       	mov    $0x820062a0,%eax
82005518:	5d                   	pop    %ebp
82005519:	c3                   	ret    

8200551a <__get_current_locale>:
8200551a:	55                   	push   %ebp
8200551b:	89 e5                	mov    %esp,%ebp
8200551d:	e8 ee ff ff ff       	call   82005510 <__get_global_locale>
82005522:	5d                   	pop    %ebp
82005523:	c3                   	ret    

82005524 <_wcrtomb_r>:
82005524:	55                   	push   %ebp
82005525:	89 e5                	mov    %esp,%ebp
82005527:	83 ec 18             	sub    $0x18,%esp
8200552a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82005531:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82005535:	75 21                	jne    82005558 <_wcrtomb_r+0x34>
82005537:	e8 de ff ff ff       	call   8200551a <__get_current_locale>
8200553c:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
82005542:	ff 75 14             	push   0x14(%ebp)
82005545:	6a 00                	push   $0x0
82005547:	8d 55 ea             	lea    -0x16(%ebp),%edx
8200554a:	52                   	push   %edx
8200554b:	ff 75 08             	push   0x8(%ebp)
8200554e:	ff d0                	call   *%eax
82005550:	83 c4 10             	add    $0x10,%esp
82005553:	89 45 f4             	mov    %eax,-0xc(%ebp)
82005556:	eb 1f                	jmp    82005577 <_wcrtomb_r+0x53>
82005558:	e8 bd ff ff ff       	call   8200551a <__get_current_locale>
8200555d:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
82005563:	ff 75 14             	push   0x14(%ebp)
82005566:	ff 75 10             	push   0x10(%ebp)
82005569:	ff 75 0c             	push   0xc(%ebp)
8200556c:	ff 75 08             	push   0x8(%ebp)
8200556f:	ff d0                	call   *%eax
82005571:	83 c4 10             	add    $0x10,%esp
82005574:	89 45 f4             	mov    %eax,-0xc(%ebp)
82005577:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8200557b:	75 19                	jne    82005596 <_wcrtomb_r+0x72>
8200557d:	8b 45 14             	mov    0x14(%ebp),%eax
82005580:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82005586:	8b 45 08             	mov    0x8(%ebp),%eax
82005589:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8200558f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82005594:	eb 03                	jmp    82005599 <_wcrtomb_r+0x75>
82005596:	8b 45 f4             	mov    -0xc(%ebp),%eax
82005599:	c9                   	leave  
8200559a:	c3                   	ret    

8200559b <wcrtomb>:
8200559b:	55                   	push   %ebp
8200559c:	89 e5                	mov    %esp,%ebp
8200559e:	83 ec 28             	sub    $0x28,%esp
820055a1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
820055a8:	a1 64 5e 00 82       	mov    0x82005e64,%eax
820055ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
820055b0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
820055b4:	75 21                	jne    820055d7 <wcrtomb+0x3c>
820055b6:	e8 5f ff ff ff       	call   8200551a <__get_current_locale>
820055bb:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
820055c1:	ff 75 10             	push   0x10(%ebp)
820055c4:	6a 00                	push   $0x0
820055c6:	8d 55 e6             	lea    -0x1a(%ebp),%edx
820055c9:	52                   	push   %edx
820055ca:	ff 75 f0             	push   -0x10(%ebp)
820055cd:	ff d0                	call   *%eax
820055cf:	83 c4 10             	add    $0x10,%esp
820055d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
820055d5:	eb 1f                	jmp    820055f6 <wcrtomb+0x5b>
820055d7:	e8 3e ff ff ff       	call   8200551a <__get_current_locale>
820055dc:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
820055e2:	ff 75 10             	push   0x10(%ebp)
820055e5:	ff 75 0c             	push   0xc(%ebp)
820055e8:	ff 75 08             	push   0x8(%ebp)
820055eb:	ff 75 f0             	push   -0x10(%ebp)
820055ee:	ff d0                	call   *%eax
820055f0:	83 c4 10             	add    $0x10,%esp
820055f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
820055f6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820055fa:	75 19                	jne    82005615 <wcrtomb+0x7a>
820055fc:	8b 45 10             	mov    0x10(%ebp),%eax
820055ff:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82005605:	8b 45 f0             	mov    -0x10(%ebp),%eax
82005608:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8200560e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82005613:	eb 03                	jmp    82005618 <wcrtomb+0x7d>
82005615:	8b 45 f4             	mov    -0xc(%ebp),%eax
82005618:	c9                   	leave  
82005619:	c3                   	ret    

8200561a <__get_global_locale>:
8200561a:	55                   	push   %ebp
8200561b:	89 e5                	mov    %esp,%ebp
8200561d:	b8 a0 62 00 82       	mov    $0x820062a0,%eax
82005622:	5d                   	pop    %ebp
82005623:	c3                   	ret    

82005624 <__get_current_locale>:
82005624:	55                   	push   %ebp
82005625:	89 e5                	mov    %esp,%ebp
82005627:	e8 ee ff ff ff       	call   8200561a <__get_global_locale>
8200562c:	5d                   	pop    %ebp
8200562d:	c3                   	ret    

8200562e <_wctomb_r>:
8200562e:	55                   	push   %ebp
8200562f:	89 e5                	mov    %esp,%ebp
82005631:	83 ec 08             	sub    $0x8,%esp
82005634:	e8 eb ff ff ff       	call   82005624 <__get_current_locale>
82005639:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8200563f:	ff 75 14             	push   0x14(%ebp)
82005642:	ff 75 10             	push   0x10(%ebp)
82005645:	ff 75 0c             	push   0xc(%ebp)
82005648:	ff 75 08             	push   0x8(%ebp)
8200564b:	ff d0                	call   *%eax
8200564d:	83 c4 10             	add    $0x10,%esp
82005650:	c9                   	leave  
82005651:	c3                   	ret    

82005652 <__ascii_wctomb>:
82005652:	55                   	push   %ebp
82005653:	89 e5                	mov    %esp,%ebp
82005655:	83 ec 10             	sub    $0x10,%esp
82005658:	8b 45 10             	mov    0x10(%ebp),%eax
8200565b:	89 45 fc             	mov    %eax,-0x4(%ebp)
8200565e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82005662:	75 07                	jne    8200566b <__ascii_wctomb+0x19>
82005664:	b8 00 00 00 00       	mov    $0x0,%eax
82005669:	eb 28                	jmp    82005693 <__ascii_wctomb+0x41>
8200566b:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
82005672:	76 10                	jbe    82005684 <__ascii_wctomb+0x32>
82005674:	8b 45 08             	mov    0x8(%ebp),%eax
82005677:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8200567d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82005682:	eb 0f                	jmp    82005693 <__ascii_wctomb+0x41>
82005684:	8b 45 fc             	mov    -0x4(%ebp),%eax
82005687:	89 c2                	mov    %eax,%edx
82005689:	8b 45 0c             	mov    0xc(%ebp),%eax
8200568c:	88 10                	mov    %dl,(%eax)
8200568e:	b8 01 00 00 00       	mov    $0x1,%eax
82005693:	c9                   	leave  
82005694:	c3                   	ret    
