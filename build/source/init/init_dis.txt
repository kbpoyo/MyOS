
/home/kbpoyo/code/cpp/MyOs/build/source/init/init.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/init/init.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x82000000

Program Header:
    LOAD off    0x00001000 vaddr 0x82000000 paddr 0x82000000 align 2**12
         filesz 0x000055cc memsz 0x00005640 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000047ea  82000000  82000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003e1  82004800  82004800  00005800  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  82004c00  82004c00  00005c00  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000060  820055e0  820055e0  000065cc  2**5
                  ALLOC
  4 .debug_line   00003308  00000000  00000000  000065cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 00000f11  00000000  00000000  000098d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00016d8e  00000000  00000000  0000a7e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 0000517f  00000000  00000000  00021573  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 00000550  00000000  00000000  000266f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00001193  00000000  00000000  00026c48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  00027ddb  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001144  00000000  00000000  00027e18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00028f5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
82004c00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
82000552 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
82005628 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8200562c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
820017e2 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
82002931 l     F .text	000000ad std
820029de l     F .text	0000001b stdin_init
820029f9 l     F .text	0000001b stdout_init
82002a14 l     F .text	0000001b stderr_init
82005634 l     O .bss	00000004 __sfp_recursive_mutex
82005638 l     O .bss	00000004 __sinit_recursive_mutex
82002cd7 l     F .text	0000000a __fp_lock
82002ce1 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fputwc.c
82002d33 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
82003459 l     F .text	0000000a __get_global_locale
82003463 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
8200367f l     F .text	0000000a __get_global_locale
82003689 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
820037ad l       .text	00000000 L20
82003764 l       .text	00000000 L5
820037aa l       .text	00000000 L15
82003770 l       .text	00000000 L8
82003791 l       .text	00000000 L9
820037a0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
820043ac l     F .text	0000000a __get_global_locale
820043b6 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
820044b6 l     F .text	0000000a __get_global_locale
820044c0 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
8200471e g     F .text	00000040 _isatty_r
82002255 g     F .text	00000037 cleanup_glue
8200475e g     F .text	00000046 _lseek_r
8200014f g     F .text	0000001b yield
820003e3 g     F .text	00000039 ioctl
82001040 g     F .text	00000035 printf
820043c0 g     F .text	00000077 _wcrtomb_r
82004298 g     F .text	0000004a __sseek
82002c26 g     F .text	00000099 __sinit
820023ec g     F .text	00000112 __swbuf_r
8200346d g     F .text	0000005f _setlocale_r
82002a2f g     F .text	0000006f __sfmoreglue
8200100d g     F .text	00000006 __malloc_unlock
82003800 g       .text	00000000 memmove
82002c0c g     F .text	0000001a _cleanup
820046db g     F .text	00000043 _fstat_r
82005630 g     O .bss	00000004 errno
82004233 g     F .text	0000000a __seofread
82000122 g     F .text	0000002d execve
820000c4 g     F .text	0000001b getpid
820037b8 g       .text	00000000 memcpy
82002beb g     F .text	00000021 _cleanup_r
82000519 g     F .text	0000001c malloc
82001013 g     F .text	0000002d _printf_r
82000239 g     F .text	00000021 isatty
820055e0 g     O .bss	00000004 __malloc_top_pad
820055e0 g       .bss	00000000 __bss_start__
82002ee8 g     F .text	0000049e __sfvwrite_r
82001075 g     F .text	00000040 _sbrk_r
8200036e g     F .text	00000040 readdir
820047a4 g     F .text	00000046 _read_r
820045b7 g     F .text	00000107 _fclose_r
820028f8 g     F .text	00000039 fflush
820055e4 g     O .bss	00000004 __malloc_max_sbrked_mem
8200020c g     F .text	0000002d lseek
82004880 g     O .rodata	00000004 _global_impure_ptr
82003915 g     F .text	000008da _realloc_r
82002e49 g     F .text	00000057 _fputwc_r
82002ceb g     F .text	00000024 __fp_lock_all
8200228c g     F .text	00000160 _reclaim_reent
820001be g     F .text	0000002d write
8200025a g     F .text	00000027 fstat
8200004e g     F .text	0000004c sys_call
82001848 g     F .text	000000a8 __sfputs_r
82002cbf g     F .text	00000006 __sfp_lock_acquire
82003720 g       .text	00000000 memchr
82005640 g       .bss	00000000 __bss_end__
820011ca g     F .text	000003db _free_r
820002e5 g     F .text	00000021 wait
82004960 g     O .rodata	00000180 _ctype_b
820034cc g     F .text	00000014 __locale_mb_cur_max
820010b5 g     F .text	00000115 __call_exitprocs
8200544c g     O .data	00000004 __malloc_sbrk_base
82000000 g       .text	00000000 _start
82000191 g     F .text	0000002d read
82005600 g     O .bss	00000028 __malloc_current_mallinfo
8200041c g     F .text	00000027 unlink
82001013 g     F .text	0000002d _iprintf_r
82004577 g     F .text	00000040 _close_r
82000107 g     F .text	0000001b fork
8200251f g     F .text	0000015b __swsetup_r
82002a9e g     F .text	0000014d __sfp
82005040 g     O .data	00000408 __malloc_av_
82002cd1 g     F .text	00000006 __sinit_lock_release
820041ef g     F .text	00000044 __sread
82001007 g     F .text	00000006 __malloc_lock
82000281 g     F .text	00000021 sbrk
820028a0 g     F .text	00000058 _fflush_r
82000010 g     F .text	0000003e cstart
8200388d g       .text	00000000 memset
82000443 g     F .text	00000092 main
820055e8 g     O .bss	00000004 __malloc_max_total_mem
820024fe g     F .text	00000021 __swbuf
820042e2 g     F .text	00000025 __sclose
820046be g     F .text	0000001d fclose
820007e5 g     F .text	00000822 _malloc_r
820044ee g     F .text	00000043 __ascii_wctomb
82000306 g     F .text	00000068 opendir
82003386 g     F .text	00000068 _fwalk
82003693 g     F .text	0000002a _mbtowc_r
820015a5 g     F .text	00000161 _malloc_trim_r
82004307 g     F .text	000000a5 strcmp
820018f0 g     F .text	00000025 vfiprintf
820002a2 g     F .text	00000021 dup
82001040 g     F .text	00000035 iprintf
8200563c g     O .bss	00000004 _PathLocale
82004531 g     F .text	00000046 _write_r
820034e0 g     F .text	0000001f setlocale
82001c6b g     F .text	0000019b _printf_common
82005024 g     O .data	00000004 _impure_ptr
8200267a g     F .text	00000226 __sflush_r
820036bd g     F .text	00000058 __ascii_mbtowc
82002d0f g     F .text	00000024 __fp_unlock_all
820000df g     F .text	00000028 print_msg
820035ec g     F .text	00000093 __swhatbuf_r
82002d99 g     F .text	000000b0 __fputwc
8200423d g     F .text	0000005b __swrite
82005448 g     O .data	00000004 __malloc_trim_threshold
820004d5 g     F .text	00000044 exit
82001915 g     F .text	00000356 _vfiprintf_r
820033ee g     F .text	0000006b _fwalk_reent
82002cc5 g     F .text	00000006 __sfp_lock_release
82004ae0 g     O .rodata	00000101 _ctype_
820002c3 g     F .text	00000022 _exit
820034ff g     F .text	000000ed __smakebuf_r
82001e06 g     F .text	0000044f _printf_i
8200016a g     F .text	00000027 open
82001706 g     F .text	000000dc __sprint_r
820003ae g     F .text	00000035 closedir
820044ca g     F .text	00000024 _wctomb_r
82001915 g     F .text	00000356 _vfprintf_r
8200009a g     F .text	0000002a msleep
82004437 g     F .text	0000007f wcrtomb
820001eb g     F .text	00000021 close
82005460 g     O .data	0000016c __global_locale
820018f0 g     F .text	00000025 vfprintf
82002ea0 g     F .text	00000048 fputwc
82000535 g     F .text	0000001d free
82002ccb g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

82000000 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
82000000:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
82000003:	8e d8                	mov    %eax,%ds
	mov %ax, %es
82000005:	8e c0                	mov    %eax,%es
	mov %ax, %fs
82000007:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
82000009:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8200000b:	e9 00 00 00 00       	jmp    82000010 <cstart>

82000010 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
82000010:	55                   	push   %ebp
82000011:	89 e5                	mov    %esp,%ebp
82000013:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
82000016:	c7 45 f4 e0 55 00 82 	movl   $0x820055e0,-0xc(%ebp)
    while (start < __bss_end__) {
8200001d:	eb 0c                	jmp    8200002b <cstart+0x1b>
        *(start++) = 0;
8200001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000022:	8d 50 01             	lea    0x1(%eax),%edx
82000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
82000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8200002b:	81 7d f4 40 56 00 82 	cmpl   $0x82005640,-0xc(%ebp)
82000032:	72 eb                	jb     8200001f <cstart+0xf>
    }
    
    exit(main(argc, argv));
82000034:	83 ec 08             	sub    $0x8,%esp
82000037:	ff 75 0c             	push   0xc(%ebp)
8200003a:	ff 75 08             	push   0x8(%ebp)
8200003d:	e8 01 04 00 00       	call   82000443 <main>
82000042:	83 c4 10             	add    $0x10,%esp
82000045:	83 ec 0c             	sub    $0xc,%esp
82000048:	50                   	push   %eax
82000049:	e8 87 04 00 00       	call   820004d5 <exit>

8200004e <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8200004e:	55                   	push   %ebp
8200004f:	89 e5                	mov    %esp,%ebp
82000051:	57                   	push   %edi
82000052:	56                   	push   %esi
82000053:	53                   	push   %ebx
82000054:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
82000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8200005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
82000065:	8b 45 08             	mov    0x8(%ebp),%eax
82000068:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8200006b:	8b 55 08             	mov    0x8(%ebp),%edx
8200006e:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
82000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
82000074:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
82000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8200007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8200007d:	8b 75 08             	mov    0x8(%ebp),%esi
82000080:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
82000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
82000085:	50                   	push   %eax
82000086:	52                   	push   %edx
82000087:	51                   	push   %ecx
82000088:	53                   	push   %ebx
82000089:	56                   	push   %esi
8200008a:	ff 1f                	lcall  *(%edi)
8200008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8200008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
82000092:	83 c4 10             	add    $0x10,%esp
82000095:	5b                   	pop    %ebx
82000096:	5e                   	pop    %esi
82000097:	5f                   	pop    %edi
82000098:	5d                   	pop    %ebp
82000099:	c3                   	ret    

8200009a <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8200009a:	55                   	push   %ebp
8200009b:	89 e5                	mov    %esp,%ebp
8200009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
820000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
820000a4:	7e 1b                	jle    820000c1 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
820000a6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
820000ad:	8b 45 08             	mov    0x8(%ebp),%eax
820000b0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
820000b3:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000b6:	50                   	push   %eax
820000b7:	e8 92 ff ff ff       	call   8200004e <sys_call>
820000bc:	83 c4 04             	add    $0x4,%esp
820000bf:	eb 01                	jmp    820000c2 <msleep+0x28>
    if (ms <= 0) return;
820000c1:	90                   	nop

}
820000c2:	c9                   	leave  
820000c3:	c3                   	ret    

820000c4 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
820000c4:	55                   	push   %ebp
820000c5:	89 e5                	mov    %esp,%ebp
820000c7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
820000ca:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
820000d1:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000d4:	50                   	push   %eax
820000d5:	e8 74 ff ff ff       	call   8200004e <sys_call>
820000da:	83 c4 04             	add    $0x4,%esp
}
820000dd:	c9                   	leave  
820000de:	c3                   	ret    

820000df <print_msg>:

void print_msg(const char *fmt, int arg) {
820000df:	55                   	push   %ebp
820000e0:	89 e5                	mov    %esp,%ebp
820000e2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
820000e5:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
820000ec:	8b 45 08             	mov    0x8(%ebp),%eax
820000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
820000f2:	8b 45 0c             	mov    0xc(%ebp),%eax
820000f5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
820000f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
820000fb:	50                   	push   %eax
820000fc:	e8 4d ff ff ff       	call   8200004e <sys_call>
82000101:	83 c4 04             	add    $0x4,%esp
}
82000104:	90                   	nop
82000105:	c9                   	leave  
82000106:	c3                   	ret    

82000107 <fork>:

int fork (void) {
82000107:	55                   	push   %ebp
82000108:	89 e5                	mov    %esp,%ebp
8200010a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8200010d:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
82000114:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000117:	50                   	push   %eax
82000118:	e8 31 ff ff ff       	call   8200004e <sys_call>
8200011d:	83 c4 04             	add    $0x4,%esp
}
82000120:	c9                   	leave  
82000121:	c3                   	ret    

82000122 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
82000122:	55                   	push   %ebp
82000123:	89 e5                	mov    %esp,%ebp
82000125:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
82000128:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8200012f:	8b 45 08             	mov    0x8(%ebp),%eax
82000132:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
82000135:	8b 45 0c             	mov    0xc(%ebp),%eax
82000138:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8200013b:	8b 45 10             	mov    0x10(%ebp),%eax
8200013e:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
82000141:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000144:	50                   	push   %eax
82000145:	e8 04 ff ff ff       	call   8200004e <sys_call>
8200014a:	83 c4 04             	add    $0x4,%esp
}
8200014d:	c9                   	leave  
8200014e:	c3                   	ret    

8200014f <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8200014f:	55                   	push   %ebp
82000150:	89 e5                	mov    %esp,%ebp
82000152:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
82000155:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8200015c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200015f:	50                   	push   %eax
82000160:	e8 e9 fe ff ff       	call   8200004e <sys_call>
82000165:	83 c4 04             	add    $0x4,%esp
}
82000168:	c9                   	leave  
82000169:	c3                   	ret    

8200016a <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8200016a:	55                   	push   %ebp
8200016b:	89 e5                	mov    %esp,%ebp
8200016d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
82000170:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
82000177:	8b 45 08             	mov    0x8(%ebp),%eax
8200017a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8200017d:	8b 45 0c             	mov    0xc(%ebp),%eax
82000180:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
82000183:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000186:	50                   	push   %eax
82000187:	e8 c2 fe ff ff       	call   8200004e <sys_call>
8200018c:	83 c4 04             	add    $0x4,%esp
}
8200018f:	c9                   	leave  
82000190:	c3                   	ret    

82000191 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
82000191:	55                   	push   %ebp
82000192:	89 e5                	mov    %esp,%ebp
82000194:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
82000197:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8200019e:	8b 45 08             	mov    0x8(%ebp),%eax
820001a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
820001a4:	8b 45 0c             	mov    0xc(%ebp),%eax
820001a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
820001aa:	8b 45 10             	mov    0x10(%ebp),%eax
820001ad:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
820001b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
820001b3:	50                   	push   %eax
820001b4:	e8 95 fe ff ff       	call   8200004e <sys_call>
820001b9:	83 c4 04             	add    $0x4,%esp
}
820001bc:	c9                   	leave  
820001bd:	c3                   	ret    

820001be <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
820001be:	55                   	push   %ebp
820001bf:	89 e5                	mov    %esp,%ebp
820001c1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
820001c4:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
820001cb:	8b 45 08             	mov    0x8(%ebp),%eax
820001ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
820001d1:	8b 45 0c             	mov    0xc(%ebp),%eax
820001d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
820001d7:	8b 45 10             	mov    0x10(%ebp),%eax
820001da:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
820001dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
820001e0:	50                   	push   %eax
820001e1:	e8 68 fe ff ff       	call   8200004e <sys_call>
820001e6:	83 c4 04             	add    $0x4,%esp
}
820001e9:	c9                   	leave  
820001ea:	c3                   	ret    

820001eb <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
820001eb:	55                   	push   %ebp
820001ec:	89 e5                	mov    %esp,%ebp
820001ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
820001f1:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
820001f8:	8b 45 08             	mov    0x8(%ebp),%eax
820001fb:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
820001fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000201:	50                   	push   %eax
82000202:	e8 47 fe ff ff       	call   8200004e <sys_call>
82000207:	83 c4 04             	add    $0x4,%esp
}
8200020a:	c9                   	leave  
8200020b:	c3                   	ret    

8200020c <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8200020c:	55                   	push   %ebp
8200020d:	89 e5                	mov    %esp,%ebp
8200020f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
82000212:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
82000219:	8b 45 08             	mov    0x8(%ebp),%eax
8200021c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8200021f:	8b 45 0c             	mov    0xc(%ebp),%eax
82000222:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
82000225:	8b 45 10             	mov    0x10(%ebp),%eax
82000228:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8200022b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200022e:	50                   	push   %eax
8200022f:	e8 1a fe ff ff       	call   8200004e <sys_call>
82000234:	83 c4 04             	add    $0x4,%esp
}
82000237:	c9                   	leave  
82000238:	c3                   	ret    

82000239 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
82000239:	55                   	push   %ebp
8200023a:	89 e5                	mov    %esp,%ebp
8200023c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8200023f:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
82000246:	8b 45 08             	mov    0x8(%ebp),%eax
82000249:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8200024c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200024f:	50                   	push   %eax
82000250:	e8 f9 fd ff ff       	call   8200004e <sys_call>
82000255:	83 c4 04             	add    $0x4,%esp
}
82000258:	c9                   	leave  
82000259:	c3                   	ret    

8200025a <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8200025a:	55                   	push   %ebp
8200025b:	89 e5                	mov    %esp,%ebp
8200025d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
82000260:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
82000267:	8b 45 08             	mov    0x8(%ebp),%eax
8200026a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8200026d:	8b 45 0c             	mov    0xc(%ebp),%eax
82000270:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
82000273:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000276:	50                   	push   %eax
82000277:	e8 d2 fd ff ff       	call   8200004e <sys_call>
8200027c:	83 c4 04             	add    $0x4,%esp
}
8200027f:	c9                   	leave  
82000280:	c3                   	ret    

82000281 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
82000281:	55                   	push   %ebp
82000282:	89 e5                	mov    %esp,%ebp
82000284:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
82000287:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)incr;
8200028e:	8b 45 08             	mov    0x8(%ebp),%eax
82000291:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
82000294:	8d 45 ec             	lea    -0x14(%ebp),%eax
82000297:	50                   	push   %eax
82000298:	e8 b1 fd ff ff       	call   8200004e <sys_call>
8200029d:	83 c4 04             	add    $0x4,%esp
}
820002a0:	c9                   	leave  
820002a1:	c3                   	ret    

820002a2 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
820002a2:	55                   	push   %ebp
820002a3:	89 e5                	mov    %esp,%ebp
820002a5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
820002a8:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
820002af:	8b 45 08             	mov    0x8(%ebp),%eax
820002b2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
820002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002b8:	50                   	push   %eax
820002b9:	e8 90 fd ff ff       	call   8200004e <sys_call>
820002be:	83 c4 04             	add    $0x4,%esp
}
820002c1:	c9                   	leave  
820002c2:	c3                   	ret    

820002c3 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
820002c3:	55                   	push   %ebp
820002c4:	89 e5                	mov    %esp,%ebp
820002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
820002c9:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
820002d0:	8b 45 08             	mov    0x8(%ebp),%eax
820002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
820002d6:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002d9:	50                   	push   %eax
820002da:	e8 6f fd ff ff       	call   8200004e <sys_call>
820002df:	83 c4 04             	add    $0x4,%esp
}
820002e2:	90                   	nop
820002e3:	c9                   	leave  
820002e4:	c3                   	ret    

820002e5 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
820002e5:	55                   	push   %ebp
820002e6:	89 e5                	mov    %esp,%ebp
820002e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
820002eb:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
820002f2:	8b 45 08             	mov    0x8(%ebp),%eax
820002f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
820002f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
820002fb:	50                   	push   %eax
820002fc:	e8 4d fd ff ff       	call   8200004e <sys_call>
82000301:	83 c4 04             	add    $0x4,%esp
}
82000304:	c9                   	leave  
82000305:	c3                   	ret    

82000306 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
82000306:	55                   	push   %ebp
82000307:	89 e5                	mov    %esp,%ebp
82000309:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8200030c:	83 ec 0c             	sub    $0xc,%esp
8200030f:	6a 20                	push   $0x20
82000311:	e8 03 02 00 00       	call   82000519 <malloc>
82000316:	83 c4 10             	add    $0x10,%esp
82000319:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8200031c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000320:	75 07                	jne    82000329 <opendir+0x23>
        return (DIR*)0;
82000322:	b8 00 00 00 00       	mov    $0x0,%eax
82000327:	eb 43                	jmp    8200036c <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
82000329:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
82000330:	8b 45 08             	mov    0x8(%ebp),%eax
82000333:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
82000336:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000339:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8200033c:	83 ec 0c             	sub    $0xc,%esp
8200033f:	8d 45 dc             	lea    -0x24(%ebp),%eax
82000342:	50                   	push   %eax
82000343:	e8 06 fd ff ff       	call   8200004e <sys_call>
82000348:	83 c4 10             	add    $0x10,%esp
8200034b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8200034e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82000352:	79 15                	jns    82000369 <opendir+0x63>
        free(dir);
82000354:	83 ec 0c             	sub    $0xc,%esp
82000357:	ff 75 f4             	push   -0xc(%ebp)
8200035a:	e8 d6 01 00 00       	call   82000535 <free>
8200035f:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
82000362:	b8 00 00 00 00       	mov    $0x0,%eax
82000367:	eb 03                	jmp    8200036c <opendir+0x66>
    }

    return dir;    
82000369:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8200036c:	c9                   	leave  
8200036d:	c3                   	ret    

8200036e <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8200036e:	55                   	push   %ebp
8200036f:	89 e5                	mov    %esp,%ebp
82000371:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
82000374:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
8200037b:	8b 45 08             	mov    0x8(%ebp),%eax
8200037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
82000381:	8b 45 08             	mov    0x8(%ebp),%eax
82000384:	83 c0 04             	add    $0x4,%eax
82000387:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
8200038a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8200038d:	50                   	push   %eax
8200038e:	e8 bb fc ff ff       	call   8200004e <sys_call>
82000393:	83 c4 04             	add    $0x4,%esp
82000396:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
82000399:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8200039d:	79 07                	jns    820003a6 <readdir+0x38>
        return (struct dirent*)0;
8200039f:	b8 00 00 00 00       	mov    $0x0,%eax
820003a4:	eb 06                	jmp    820003ac <readdir+0x3e>
    }

    return &dir->dirent;   
820003a6:	8b 45 08             	mov    0x8(%ebp),%eax
820003a9:	83 c0 04             	add    $0x4,%eax
}
820003ac:	c9                   	leave  
820003ad:	c3                   	ret    

820003ae <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
820003ae:	55                   	push   %ebp
820003af:	89 e5                	mov    %esp,%ebp
820003b1:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
820003b4:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
820003bb:	8b 45 08             	mov    0x8(%ebp),%eax
820003be:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
820003c1:	8d 45 e0             	lea    -0x20(%ebp),%eax
820003c4:	50                   	push   %eax
820003c5:	e8 84 fc ff ff       	call   8200004e <sys_call>
820003ca:	83 c4 04             	add    $0x4,%esp
820003cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
820003d0:	83 ec 0c             	sub    $0xc,%esp
820003d3:	ff 75 08             	push   0x8(%ebp)
820003d6:	e8 5a 01 00 00       	call   82000535 <free>
820003db:	83 c4 10             	add    $0x10,%esp

    return err;   
820003de:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
820003e1:	c9                   	leave  
820003e2:	c3                   	ret    

820003e3 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
820003e3:	55                   	push   %ebp
820003e4:	89 e5                	mov    %esp,%ebp
820003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
820003e9:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
820003f0:	8b 45 08             	mov    0x8(%ebp),%eax
820003f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
820003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
820003f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
820003fc:	8b 45 10             	mov    0x10(%ebp),%eax
820003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
82000402:	8b 45 14             	mov    0x14(%ebp),%eax
82000405:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
82000408:	8d 45 e8             	lea    -0x18(%ebp),%eax
8200040b:	50                   	push   %eax
8200040c:	e8 3d fc ff ff       	call   8200004e <sys_call>
82000411:	83 c4 04             	add    $0x4,%esp
82000414:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
82000417:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
8200041a:	c9                   	leave  
8200041b:	c3                   	ret    

8200041c <unlink>:
 * @brief 删除一个文件
 * 
 * @param path 
 * @return int 
 */
int unlink(const char *path) {
8200041c:	55                   	push   %ebp
8200041d:	89 e5                	mov    %esp,%ebp
8200041f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
82000422:	c7 45 e8 3b 00 00 00 	movl   $0x3b,-0x18(%ebp)
    args.arg0 = (path);
82000429:	8b 45 08             	mov    0x8(%ebp),%eax
8200042c:	89 45 ec             	mov    %eax,-0x14(%ebp)

    int err = sys_call(&args);
8200042f:	8d 45 e8             	lea    -0x18(%ebp),%eax
82000432:	50                   	push   %eax
82000433:	e8 16 fc ff ff       	call   8200004e <sys_call>
82000438:	83 c4 04             	add    $0x4,%esp
8200043b:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
8200043e:	8b 45 fc             	mov    -0x4(%ebp),%eax
82000441:	c9                   	leave  
82000442:	c3                   	ret    

82000443 <main>:
#include <stdlib.h>
#include <sys/fcntl.h>

#include "applib/lib_syscall.h"

int main(int argc, char **argv) {
82000443:	8d 4c 24 04          	lea    0x4(%esp),%ecx
82000447:	83 e4 f0             	and    $0xfffffff0,%esp
8200044a:	ff 71 fc             	push   -0x4(%ecx)
8200044d:	55                   	push   %ebp
8200044e:	89 e5                	mov    %esp,%ebp
82000450:	51                   	push   %ecx
82000451:	83 ec 14             	sub    $0x14,%esp
  //   unlink("test.c");
  //   fclose(from);
  //   fclose(to);
  // }

  int pid = -1;
82000454:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
  for (int i = 0; i < 100; ++i) {
8200045b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82000462:	eb 12                	jmp    82000476 <main+0x33>
    pid = fork();
82000464:	e8 9e fc ff ff       	call   82000107 <fork>
82000469:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid == 0) {
8200046c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000470:	74 0c                	je     8200047e <main+0x3b>
  for (int i = 0; i < 100; ++i) {
82000472:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82000476:	83 7d f0 63          	cmpl   $0x63,-0x10(%ebp)
8200047a:	7e e8                	jle    82000464 <main+0x21>
8200047c:	eb 01                	jmp    8200047f <main+0x3c>
      break;
8200047e:	90                   	nop
    }
  }

  while (1) {
    if (pid > 0) {
8200047f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82000483:	7e 28                	jle    820004ad <main+0x6a>
      printf("==================== this is parent pid = %d ================\n",
82000485:	e8 3a fc ff ff       	call   820000c4 <getpid>
8200048a:	83 ec 08             	sub    $0x8,%esp
8200048d:	50                   	push   %eax
8200048e:	68 00 48 00 82       	push   $0x82004800
82000493:	e8 a8 0b 00 00       	call   82001040 <iprintf>
82000498:	83 c4 10             	add    $0x10,%esp
             getpid());
      msleep(1000);
8200049b:	83 ec 0c             	sub    $0xc,%esp
8200049e:	68 e8 03 00 00       	push   $0x3e8
820004a3:	e8 f2 fb ff ff       	call   8200009a <msleep>
820004a8:	83 c4 10             	add    $0x10,%esp
820004ab:	eb d2                	jmp    8200047f <main+0x3c>
    } else {
      printf("==================== this is child pid = %d ================\n",
820004ad:	e8 12 fc ff ff       	call   820000c4 <getpid>
820004b2:	83 ec 08             	sub    $0x8,%esp
820004b5:	50                   	push   %eax
820004b6:	68 40 48 00 82       	push   $0x82004840
820004bb:	e8 80 0b 00 00       	call   82001040 <iprintf>
820004c0:	83 c4 10             	add    $0x10,%esp
             getpid());
      msleep(1000);
820004c3:	83 ec 0c             	sub    $0xc,%esp
820004c6:	68 e8 03 00 00       	push   $0x3e8
820004cb:	e8 ca fb ff ff       	call   8200009a <msleep>
820004d0:	83 c4 10             	add    $0x10,%esp
    if (pid > 0) {
820004d3:	eb aa                	jmp    8200047f <main+0x3c>

820004d5 <exit>:
820004d5:	55                   	push   %ebp
820004d6:	89 e5                	mov    %esp,%ebp
820004d8:	83 ec 08             	sub    $0x8,%esp
820004db:	83 ec 08             	sub    $0x8,%esp
820004de:	6a 00                	push   $0x0
820004e0:	ff 75 08             	push   0x8(%ebp)
820004e3:	e8 cd 0b 00 00       	call   820010b5 <__call_exitprocs>
820004e8:	83 c4 10             	add    $0x10,%esp
820004eb:	a1 80 48 00 82       	mov    0x82004880,%eax
820004f0:	8b 40 3c             	mov    0x3c(%eax),%eax
820004f3:	85 c0                	test   %eax,%eax
820004f5:	74 17                	je     8200050e <exit+0x39>
820004f7:	a1 80 48 00 82       	mov    0x82004880,%eax
820004fc:	8b 40 3c             	mov    0x3c(%eax),%eax
820004ff:	8b 15 80 48 00 82    	mov    0x82004880,%edx
82000505:	83 ec 0c             	sub    $0xc,%esp
82000508:	52                   	push   %edx
82000509:	ff d0                	call   *%eax
8200050b:	83 c4 10             	add    $0x10,%esp
8200050e:	83 ec 0c             	sub    $0xc,%esp
82000511:	ff 75 08             	push   0x8(%ebp)
82000514:	e8 aa fd ff ff       	call   820002c3 <_exit>

82000519 <malloc>:
82000519:	55                   	push   %ebp
8200051a:	89 e5                	mov    %esp,%ebp
8200051c:	83 ec 08             	sub    $0x8,%esp
8200051f:	a1 24 50 00 82       	mov    0x82005024,%eax
82000524:	83 ec 08             	sub    $0x8,%esp
82000527:	ff 75 08             	push   0x8(%ebp)
8200052a:	50                   	push   %eax
8200052b:	e8 b5 02 00 00       	call   820007e5 <_malloc_r>
82000530:	83 c4 10             	add    $0x10,%esp
82000533:	c9                   	leave  
82000534:	c3                   	ret    

82000535 <free>:
82000535:	55                   	push   %ebp
82000536:	89 e5                	mov    %esp,%ebp
82000538:	83 ec 08             	sub    $0x8,%esp
8200053b:	a1 24 50 00 82       	mov    0x82005024,%eax
82000540:	83 ec 08             	sub    $0x8,%esp
82000543:	ff 75 08             	push   0x8(%ebp)
82000546:	50                   	push   %eax
82000547:	e8 7e 0c 00 00       	call   820011ca <_free_r>
8200054c:	83 c4 10             	add    $0x10,%esp
8200054f:	90                   	nop
82000550:	c9                   	leave  
82000551:	c3                   	ret    

82000552 <malloc_extend_top>:
82000552:	55                   	push   %ebp
82000553:	89 e5                	mov    %esp,%ebp
82000555:	83 ec 38             	sub    $0x38,%esp
82000558:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8200055f:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000564:	8b 40 08             	mov    0x8(%eax),%eax
82000567:	89 45 e0             	mov    %eax,-0x20(%ebp)
8200056a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200056d:	8b 40 04             	mov    0x4(%eax),%eax
82000570:	83 e0 fc             	and    $0xfffffffc,%eax
82000573:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000576:	8b 55 e0             	mov    -0x20(%ebp),%edx
82000579:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200057c:	01 d0                	add    %edx,%eax
8200057e:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000581:	8b 15 e0 55 00 82    	mov    0x820055e0,%edx
82000587:	8b 45 0c             	mov    0xc(%ebp),%eax
8200058a:	01 d0                	add    %edx,%eax
8200058c:	83 c0 10             	add    $0x10,%eax
8200058f:	89 45 e8             	mov    %eax,-0x18(%ebp)
82000592:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
82000599:	a1 4c 54 00 82       	mov    0x8200544c,%eax
8200059e:	83 f8 ff             	cmp    $0xffffffff,%eax
820005a1:	74 15                	je     820005b8 <malloc_extend_top+0x66>
820005a3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
820005a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
820005a9:	01 d0                	add    %edx,%eax
820005ab:	8d 50 ff             	lea    -0x1(%eax),%edx
820005ae:	8b 45 d4             	mov    -0x2c(%ebp),%eax
820005b1:	f7 d8                	neg    %eax
820005b3:	21 d0                	and    %edx,%eax
820005b5:	89 45 e8             	mov    %eax,-0x18(%ebp)
820005b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
820005bb:	83 ec 08             	sub    $0x8,%esp
820005be:	50                   	push   %eax
820005bf:	ff 75 08             	push   0x8(%ebp)
820005c2:	e8 ae 0a 00 00       	call   82001075 <_sbrk_r>
820005c7:	83 c4 10             	add    $0x10,%esp
820005ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
820005cd:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820005d1:	0f 84 0b 02 00 00    	je     820007e2 <malloc_extend_top+0x290>
820005d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820005da:	3b 45 d8             	cmp    -0x28(%ebp),%eax
820005dd:	73 0e                	jae    820005ed <malloc_extend_top+0x9b>
820005df:	b8 40 50 00 82       	mov    $0x82005040,%eax
820005e4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
820005e7:	0f 85 f5 01 00 00    	jne    820007e2 <malloc_extend_top+0x290>
820005ed:	a1 00 56 00 82       	mov    0x82005600,%eax
820005f2:	89 c2                	mov    %eax,%edx
820005f4:	8b 45 e8             	mov    -0x18(%ebp),%eax
820005f7:	01 d0                	add    %edx,%eax
820005f9:	a3 00 56 00 82       	mov    %eax,0x82005600
820005fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000601:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82000604:	75 30                	jne    82000636 <malloc_extend_top+0xe4>
82000606:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82000609:	8d 50 ff             	lea    -0x1(%eax),%edx
8200060c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200060f:	21 d0                	and    %edx,%eax
82000611:	85 c0                	test   %eax,%eax
82000613:	75 21                	jne    82000636 <malloc_extend_top+0xe4>
82000615:	8b 55 e8             	mov    -0x18(%ebp),%edx
82000618:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200061b:	01 d0                	add    %edx,%eax
8200061d:	89 45 d0             	mov    %eax,-0x30(%ebp)
82000620:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000625:	8b 40 08             	mov    0x8(%eax),%eax
82000628:	8b 55 d0             	mov    -0x30(%ebp),%edx
8200062b:	83 ca 01             	or     $0x1,%edx
8200062e:	89 50 04             	mov    %edx,0x4(%eax)
82000631:	e9 76 01 00 00       	jmp    820007ac <malloc_extend_top+0x25a>
82000636:	a1 4c 54 00 82       	mov    0x8200544c,%eax
8200063b:	83 f8 ff             	cmp    $0xffffffff,%eax
8200063e:	75 0a                	jne    8200064a <malloc_extend_top+0xf8>
82000640:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000643:	a3 4c 54 00 82       	mov    %eax,0x8200544c
82000648:	eb 13                	jmp    8200065d <malloc_extend_top+0x10b>
8200064a:	8b 15 00 56 00 82    	mov    0x82005600,%edx
82000650:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000653:	2b 45 d8             	sub    -0x28(%ebp),%eax
82000656:	01 d0                	add    %edx,%eax
82000658:	a3 00 56 00 82       	mov    %eax,0x82005600
8200065d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000660:	83 c0 08             	add    $0x8,%eax
82000663:	83 e0 07             	and    $0x7,%eax
82000666:	89 45 cc             	mov    %eax,-0x34(%ebp)
82000669:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8200066d:	74 13                	je     82000682 <malloc_extend_top+0x130>
8200066f:	b8 08 00 00 00       	mov    $0x8,%eax
82000674:	2b 45 cc             	sub    -0x34(%ebp),%eax
82000677:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200067a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200067d:	01 45 f4             	add    %eax,-0xc(%ebp)
82000680:	eb 07                	jmp    82000689 <malloc_extend_top+0x137>
82000682:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82000689:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200068c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200068f:	01 d0                	add    %edx,%eax
82000691:	89 c2                	mov    %eax,%edx
82000693:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82000696:	83 e8 01             	sub    $0x1,%eax
82000699:	21 c2                	and    %eax,%edx
8200069b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200069e:	29 d0                	sub    %edx,%eax
820006a0:	01 45 f0             	add    %eax,-0x10(%ebp)
820006a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
820006a6:	83 e8 01             	sub    $0x1,%eax
820006a9:	21 45 f0             	and    %eax,-0x10(%ebp)
820006ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
820006af:	83 ec 08             	sub    $0x8,%esp
820006b2:	50                   	push   %eax
820006b3:	ff 75 08             	push   0x8(%ebp)
820006b6:	e8 ba 09 00 00       	call   82001075 <_sbrk_r>
820006bb:	83 c4 10             	add    $0x10,%esp
820006be:	89 45 ec             	mov    %eax,-0x14(%ebp)
820006c1:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
820006c5:	75 28                	jne    820006ef <malloc_extend_top+0x19d>
820006c7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
820006ce:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
820006d5:	8b 55 f4             	mov    -0xc(%ebp),%edx
820006d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
820006db:	01 d0                	add    %edx,%eax
820006dd:	89 45 ec             	mov    %eax,-0x14(%ebp)
820006e0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
820006e4:	74 09                	je     820006ef <malloc_extend_top+0x19d>
820006e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
820006e9:	83 e8 08             	sub    $0x8,%eax
820006ec:	01 45 ec             	add    %eax,-0x14(%ebp)
820006ef:	a1 00 56 00 82       	mov    0x82005600,%eax
820006f4:	89 c2                	mov    %eax,%edx
820006f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
820006f9:	01 d0                	add    %edx,%eax
820006fb:	a3 00 56 00 82       	mov    %eax,0x82005600
82000700:	ba 40 50 00 82       	mov    $0x82005040,%edx
82000705:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000708:	89 42 08             	mov    %eax,0x8(%edx)
8200070b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200070e:	2b 45 f4             	sub    -0xc(%ebp),%eax
82000711:	89 c2                	mov    %eax,%edx
82000713:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000716:	01 d0                	add    %edx,%eax
82000718:	89 45 d0             	mov    %eax,-0x30(%ebp)
8200071b:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000720:	8b 40 08             	mov    0x8(%eax),%eax
82000723:	8b 55 d0             	mov    -0x30(%ebp),%edx
82000726:	83 ca 01             	or     $0x1,%edx
82000729:	89 50 04             	mov    %edx,0x4(%eax)
8200072c:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000731:	39 45 e0             	cmp    %eax,-0x20(%ebp)
82000734:	74 76                	je     820007ac <malloc_extend_top+0x25a>
82000736:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8200073a:	77 14                	ja     82000750 <malloc_extend_top+0x1fe>
8200073c:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000741:	8b 40 08             	mov    0x8(%eax),%eax
82000744:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
8200074b:	e9 93 00 00 00       	jmp    820007e3 <malloc_extend_top+0x291>
82000750:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000753:	83 e8 0c             	sub    $0xc,%eax
82000756:	83 e0 f8             	and    $0xfffffff8,%eax
82000759:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200075c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200075f:	8b 40 04             	mov    0x4(%eax),%eax
82000762:	83 e0 01             	and    $0x1,%eax
82000765:	0b 45 dc             	or     -0x24(%ebp),%eax
82000768:	89 c2                	mov    %eax,%edx
8200076a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200076d:	89 50 04             	mov    %edx,0x4(%eax)
82000770:	8b 55 e0             	mov    -0x20(%ebp),%edx
82000773:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000776:	01 d0                	add    %edx,%eax
82000778:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8200077f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000782:	8d 50 04             	lea    0x4(%eax),%edx
82000785:	8b 45 e0             	mov    -0x20(%ebp),%eax
82000788:	01 d0                	add    %edx,%eax
8200078a:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
82000791:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
82000795:	76 15                	jbe    820007ac <malloc_extend_top+0x25a>
82000797:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200079a:	83 c0 08             	add    $0x8,%eax
8200079d:	83 ec 08             	sub    $0x8,%esp
820007a0:	50                   	push   %eax
820007a1:	ff 75 08             	push   0x8(%ebp)
820007a4:	e8 21 0a 00 00       	call   820011ca <_free_r>
820007a9:	83 c4 10             	add    $0x10,%esp
820007ac:	a1 00 56 00 82       	mov    0x82005600,%eax
820007b1:	89 c2                	mov    %eax,%edx
820007b3:	a1 e4 55 00 82       	mov    0x820055e4,%eax
820007b8:	39 c2                	cmp    %eax,%edx
820007ba:	76 0a                	jbe    820007c6 <malloc_extend_top+0x274>
820007bc:	a1 00 56 00 82       	mov    0x82005600,%eax
820007c1:	a3 e4 55 00 82       	mov    %eax,0x820055e4
820007c6:	a1 00 56 00 82       	mov    0x82005600,%eax
820007cb:	89 c2                	mov    %eax,%edx
820007cd:	a1 e8 55 00 82       	mov    0x820055e8,%eax
820007d2:	39 c2                	cmp    %eax,%edx
820007d4:	76 0d                	jbe    820007e3 <malloc_extend_top+0x291>
820007d6:	a1 00 56 00 82       	mov    0x82005600,%eax
820007db:	a3 e8 55 00 82       	mov    %eax,0x820055e8
820007e0:	eb 01                	jmp    820007e3 <malloc_extend_top+0x291>
820007e2:	90                   	nop
820007e3:	c9                   	leave  
820007e4:	c3                   	ret    

820007e5 <_malloc_r>:
820007e5:	55                   	push   %ebp
820007e6:	89 e5                	mov    %esp,%ebp
820007e8:	53                   	push   %ebx
820007e9:	83 ec 44             	sub    $0x44,%esp
820007ec:	8b 45 0c             	mov    0xc(%ebp),%eax
820007ef:	83 c0 0b             	add    $0xb,%eax
820007f2:	83 f8 16             	cmp    $0x16,%eax
820007f5:	76 0b                	jbe    82000802 <_malloc_r+0x1d>
820007f7:	8b 45 0c             	mov    0xc(%ebp),%eax
820007fa:	83 c0 0b             	add    $0xb,%eax
820007fd:	83 e0 f8             	and    $0xfffffff8,%eax
82000800:	eb 05                	jmp    82000807 <_malloc_r+0x22>
82000802:	b8 10 00 00 00       	mov    $0x10,%eax
82000807:	89 45 d0             	mov    %eax,-0x30(%ebp)
8200080a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200080d:	85 c0                	test   %eax,%eax
8200080f:	78 08                	js     82000819 <_malloc_r+0x34>
82000811:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000814:	3b 45 0c             	cmp    0xc(%ebp),%eax
82000817:	73 13                	jae    8200082c <_malloc_r+0x47>
82000819:	8b 45 08             	mov    0x8(%ebp),%eax
8200081c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82000822:	b8 00 00 00 00       	mov    $0x0,%eax
82000827:	e9 d6 07 00 00       	jmp    82001002 <_malloc_r+0x81d>
8200082c:	83 ec 0c             	sub    $0xc,%esp
8200082f:	ff 75 08             	push   0x8(%ebp)
82000832:	e8 d0 07 00 00       	call   82001007 <__malloc_lock>
82000837:	83 c4 10             	add    $0x10,%esp
8200083a:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
82000841:	0f 87 b0 00 00 00    	ja     820008f7 <_malloc_r+0x112>
82000847:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200084a:	c1 e8 03             	shr    $0x3,%eax
8200084d:	89 45 f0             	mov    %eax,-0x10(%ebp)
82000850:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000853:	83 c0 01             	add    $0x1,%eax
82000856:	01 c0                	add    %eax,%eax
82000858:	c1 e0 02             	shl    $0x2,%eax
8200085b:	05 40 50 00 82       	add    $0x82005040,%eax
82000860:	83 e8 08             	sub    $0x8,%eax
82000863:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82000866:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82000869:	8b 40 0c             	mov    0xc(%eax),%eax
8200086c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200086f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000872:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
82000875:	75 0d                	jne    82000884 <_malloc_r+0x9f>
82000877:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
8200087b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200087e:	8b 40 0c             	mov    0xc(%eax),%eax
82000881:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000884:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000887:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8200088a:	74 62                	je     820008ee <_malloc_r+0x109>
8200088c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200088f:	8b 40 04             	mov    0x4(%eax),%eax
82000892:	83 e0 fc             	and    $0xfffffffc,%eax
82000895:	89 45 cc             	mov    %eax,-0x34(%ebp)
82000898:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200089b:	8b 40 0c             	mov    0xc(%eax),%eax
8200089e:	89 45 d8             	mov    %eax,-0x28(%ebp)
820008a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
820008a4:	8b 40 08             	mov    0x8(%eax),%eax
820008a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
820008aa:	8b 45 dc             	mov    -0x24(%ebp),%eax
820008ad:	8b 55 d8             	mov    -0x28(%ebp),%edx
820008b0:	89 50 0c             	mov    %edx,0xc(%eax)
820008b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
820008b6:	8b 55 dc             	mov    -0x24(%ebp),%edx
820008b9:	89 50 08             	mov    %edx,0x8(%eax)
820008bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
820008bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
820008c2:	01 d0                	add    %edx,%eax
820008c4:	8b 50 04             	mov    0x4(%eax),%edx
820008c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
820008ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
820008cd:	01 c8                	add    %ecx,%eax
820008cf:	83 ca 01             	or     $0x1,%edx
820008d2:	89 50 04             	mov    %edx,0x4(%eax)
820008d5:	83 ec 0c             	sub    $0xc,%esp
820008d8:	ff 75 08             	push   0x8(%ebp)
820008db:	e8 2d 07 00 00       	call   8200100d <__malloc_unlock>
820008e0:	83 c4 10             	add    $0x10,%esp
820008e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
820008e6:	83 c0 08             	add    $0x8,%eax
820008e9:	e9 14 07 00 00       	jmp    82001002 <_malloc_r+0x81d>
820008ee:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
820008f2:	e9 46 01 00 00       	jmp    82000a3d <_malloc_r+0x258>
820008f7:	8b 45 d0             	mov    -0x30(%ebp),%eax
820008fa:	c1 e8 09             	shr    $0x9,%eax
820008fd:	85 c0                	test   %eax,%eax
820008ff:	75 08                	jne    82000909 <_malloc_r+0x124>
82000901:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000904:	c1 e8 03             	shr    $0x3,%eax
82000907:	eb 77                	jmp    82000980 <_malloc_r+0x19b>
82000909:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200090c:	c1 e8 09             	shr    $0x9,%eax
8200090f:	83 f8 04             	cmp    $0x4,%eax
82000912:	77 0b                	ja     8200091f <_malloc_r+0x13a>
82000914:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000917:	c1 e8 06             	shr    $0x6,%eax
8200091a:	83 c0 38             	add    $0x38,%eax
8200091d:	eb 61                	jmp    82000980 <_malloc_r+0x19b>
8200091f:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000922:	c1 e8 09             	shr    $0x9,%eax
82000925:	83 f8 14             	cmp    $0x14,%eax
82000928:	77 0b                	ja     82000935 <_malloc_r+0x150>
8200092a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200092d:	c1 e8 09             	shr    $0x9,%eax
82000930:	83 c0 5b             	add    $0x5b,%eax
82000933:	eb 4b                	jmp    82000980 <_malloc_r+0x19b>
82000935:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000938:	c1 e8 09             	shr    $0x9,%eax
8200093b:	83 f8 54             	cmp    $0x54,%eax
8200093e:	77 0b                	ja     8200094b <_malloc_r+0x166>
82000940:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000943:	c1 e8 0c             	shr    $0xc,%eax
82000946:	83 c0 6e             	add    $0x6e,%eax
82000949:	eb 35                	jmp    82000980 <_malloc_r+0x19b>
8200094b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200094e:	c1 e8 09             	shr    $0x9,%eax
82000951:	3d 54 01 00 00       	cmp    $0x154,%eax
82000956:	77 0b                	ja     82000963 <_malloc_r+0x17e>
82000958:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200095b:	c1 e8 0f             	shr    $0xf,%eax
8200095e:	83 c0 77             	add    $0x77,%eax
82000961:	eb 1d                	jmp    82000980 <_malloc_r+0x19b>
82000963:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000966:	c1 e8 09             	shr    $0x9,%eax
82000969:	3d 54 05 00 00       	cmp    $0x554,%eax
8200096e:	77 0b                	ja     8200097b <_malloc_r+0x196>
82000970:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000973:	c1 e8 12             	shr    $0x12,%eax
82000976:	83 c0 7c             	add    $0x7c,%eax
82000979:	eb 05                	jmp    82000980 <_malloc_r+0x19b>
8200097b:	b8 7e 00 00 00       	mov    $0x7e,%eax
82000980:	89 45 f0             	mov    %eax,-0x10(%ebp)
82000983:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000986:	83 c0 01             	add    $0x1,%eax
82000989:	01 c0                	add    %eax,%eax
8200098b:	c1 e0 02             	shl    $0x2,%eax
8200098e:	05 40 50 00 82       	add    $0x82005040,%eax
82000993:	83 e8 08             	sub    $0x8,%eax
82000996:	89 45 ec             	mov    %eax,-0x14(%ebp)
82000999:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200099c:	8b 40 0c             	mov    0xc(%eax),%eax
8200099f:	89 45 f4             	mov    %eax,-0xc(%ebp)
820009a2:	e9 86 00 00 00       	jmp    82000a2d <_malloc_r+0x248>
820009a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820009aa:	8b 40 04             	mov    0x4(%eax),%eax
820009ad:	83 e0 fc             	and    $0xfffffffc,%eax
820009b0:	89 45 cc             	mov    %eax,-0x34(%ebp)
820009b3:	8b 45 cc             	mov    -0x34(%ebp),%eax
820009b6:	2b 45 d0             	sub    -0x30(%ebp),%eax
820009b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
820009bc:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
820009c0:	7e 06                	jle    820009c8 <_malloc_r+0x1e3>
820009c2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
820009c6:	eb 71                	jmp    82000a39 <_malloc_r+0x254>
820009c8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
820009cc:	78 56                	js     82000a24 <_malloc_r+0x23f>
820009ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
820009d1:	8b 40 0c             	mov    0xc(%eax),%eax
820009d4:	89 45 d8             	mov    %eax,-0x28(%ebp)
820009d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820009da:	8b 40 08             	mov    0x8(%eax),%eax
820009dd:	89 45 dc             	mov    %eax,-0x24(%ebp)
820009e0:	8b 45 dc             	mov    -0x24(%ebp),%eax
820009e3:	8b 55 d8             	mov    -0x28(%ebp),%edx
820009e6:	89 50 0c             	mov    %edx,0xc(%eax)
820009e9:	8b 45 d8             	mov    -0x28(%ebp),%eax
820009ec:	8b 55 dc             	mov    -0x24(%ebp),%edx
820009ef:	89 50 08             	mov    %edx,0x8(%eax)
820009f2:	8b 55 f4             	mov    -0xc(%ebp),%edx
820009f5:	8b 45 cc             	mov    -0x34(%ebp),%eax
820009f8:	01 d0                	add    %edx,%eax
820009fa:	8b 50 04             	mov    0x4(%eax),%edx
820009fd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82000a00:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000a03:	01 c8                	add    %ecx,%eax
82000a05:	83 ca 01             	or     $0x1,%edx
82000a08:	89 50 04             	mov    %edx,0x4(%eax)
82000a0b:	83 ec 0c             	sub    $0xc,%esp
82000a0e:	ff 75 08             	push   0x8(%ebp)
82000a11:	e8 f7 05 00 00       	call   8200100d <__malloc_unlock>
82000a16:	83 c4 10             	add    $0x10,%esp
82000a19:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000a1c:	83 c0 08             	add    $0x8,%eax
82000a1f:	e9 de 05 00 00       	jmp    82001002 <_malloc_r+0x81d>
82000a24:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000a27:	8b 40 0c             	mov    0xc(%eax),%eax
82000a2a:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000a2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000a30:	3b 45 ec             	cmp    -0x14(%ebp),%eax
82000a33:	0f 85 6e ff ff ff    	jne    820009a7 <_malloc_r+0x1c2>
82000a39:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82000a3d:	b8 48 50 00 82       	mov    $0x82005048,%eax
82000a42:	8b 40 08             	mov    0x8(%eax),%eax
82000a45:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000a48:	b8 48 50 00 82       	mov    $0x82005048,%eax
82000a4d:	39 45 f4             	cmp    %eax,-0xc(%ebp)
82000a50:	0f 84 9c 02 00 00    	je     82000cf2 <_malloc_r+0x50d>
82000a56:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000a59:	8b 40 04             	mov    0x4(%eax),%eax
82000a5c:	83 e0 fc             	and    $0xfffffffc,%eax
82000a5f:	89 45 cc             	mov    %eax,-0x34(%ebp)
82000a62:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000a65:	2b 45 d0             	sub    -0x30(%ebp),%eax
82000a68:	89 45 e8             	mov    %eax,-0x18(%ebp)
82000a6b:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
82000a6f:	7e 7a                	jle    82000aeb <_malloc_r+0x306>
82000a71:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000a74:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000a77:	01 d0                	add    %edx,%eax
82000a79:	89 45 c4             	mov    %eax,-0x3c(%ebp)
82000a7c:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000a7f:	83 c8 01             	or     $0x1,%eax
82000a82:	89 c2                	mov    %eax,%edx
82000a84:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000a87:	89 50 04             	mov    %edx,0x4(%eax)
82000a8a:	b8 48 50 00 82       	mov    $0x82005048,%eax
82000a8f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
82000a92:	89 50 0c             	mov    %edx,0xc(%eax)
82000a95:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000a9a:	8b 40 0c             	mov    0xc(%eax),%eax
82000a9d:	89 42 08             	mov    %eax,0x8(%edx)
82000aa0:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000aa5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000aa8:	89 50 0c             	mov    %edx,0xc(%eax)
82000aab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000aae:	8b 50 0c             	mov    0xc(%eax),%edx
82000ab1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000ab4:	89 50 08             	mov    %edx,0x8(%eax)
82000ab7:	8b 45 e8             	mov    -0x18(%ebp),%eax
82000aba:	83 c8 01             	or     $0x1,%eax
82000abd:	89 c2                	mov    %eax,%edx
82000abf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000ac2:	89 50 04             	mov    %edx,0x4(%eax)
82000ac5:	8b 55 e8             	mov    -0x18(%ebp),%edx
82000ac8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000acb:	01 c2                	add    %eax,%edx
82000acd:	8b 45 e8             	mov    -0x18(%ebp),%eax
82000ad0:	89 02                	mov    %eax,(%edx)
82000ad2:	83 ec 0c             	sub    $0xc,%esp
82000ad5:	ff 75 08             	push   0x8(%ebp)
82000ad8:	e8 30 05 00 00       	call   8200100d <__malloc_unlock>
82000add:	83 c4 10             	add    $0x10,%esp
82000ae0:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ae3:	83 c0 08             	add    $0x8,%eax
82000ae6:	e9 17 05 00 00       	jmp    82001002 <_malloc_r+0x81d>
82000aeb:	b8 48 50 00 82       	mov    $0x82005048,%eax
82000af0:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000af5:	89 50 0c             	mov    %edx,0xc(%eax)
82000af8:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000afd:	8b 40 0c             	mov    0xc(%eax),%eax
82000b00:	89 42 08             	mov    %eax,0x8(%edx)
82000b03:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
82000b07:	78 32                	js     82000b3b <_malloc_r+0x356>
82000b09:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000b0c:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000b0f:	01 d0                	add    %edx,%eax
82000b11:	8b 50 04             	mov    0x4(%eax),%edx
82000b14:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82000b17:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000b1a:	01 c8                	add    %ecx,%eax
82000b1c:	83 ca 01             	or     $0x1,%edx
82000b1f:	89 50 04             	mov    %edx,0x4(%eax)
82000b22:	83 ec 0c             	sub    $0xc,%esp
82000b25:	ff 75 08             	push   0x8(%ebp)
82000b28:	e8 e0 04 00 00       	call   8200100d <__malloc_unlock>
82000b2d:	83 c4 10             	add    $0x10,%esp
82000b30:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000b33:	83 c0 08             	add    $0x8,%eax
82000b36:	e9 c7 04 00 00       	jmp    82001002 <_malloc_r+0x81d>
82000b3b:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
82000b42:	77 7f                	ja     82000bc3 <_malloc_r+0x3de>
82000b44:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000b47:	c1 e8 03             	shr    $0x3,%eax
82000b4a:	89 45 c8             	mov    %eax,-0x38(%ebp)
82000b4d:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000b52:	8b 58 04             	mov    0x4(%eax),%ebx
82000b55:	8b 45 c8             	mov    -0x38(%ebp),%eax
82000b58:	8d 50 03             	lea    0x3(%eax),%edx
82000b5b:	85 c0                	test   %eax,%eax
82000b5d:	0f 48 c2             	cmovs  %edx,%eax
82000b60:	c1 f8 02             	sar    $0x2,%eax
82000b63:	ba 01 00 00 00       	mov    $0x1,%edx
82000b68:	89 c1                	mov    %eax,%ecx
82000b6a:	d3 e2                	shl    %cl,%edx
82000b6c:	89 d0                	mov    %edx,%eax
82000b6e:	ba 40 50 00 82       	mov    $0x82005040,%edx
82000b73:	09 d8                	or     %ebx,%eax
82000b75:	89 42 04             	mov    %eax,0x4(%edx)
82000b78:	8b 45 c8             	mov    -0x38(%ebp),%eax
82000b7b:	83 c0 01             	add    $0x1,%eax
82000b7e:	01 c0                	add    %eax,%eax
82000b80:	c1 e0 02             	shl    $0x2,%eax
82000b83:	05 40 50 00 82       	add    $0x82005040,%eax
82000b88:	83 e8 08             	sub    $0x8,%eax
82000b8b:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000b8e:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000b91:	8b 40 08             	mov    0x8(%eax),%eax
82000b94:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000b97:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000b9a:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000b9d:	89 50 0c             	mov    %edx,0xc(%eax)
82000ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ba3:	8b 55 dc             	mov    -0x24(%ebp),%edx
82000ba6:	89 50 08             	mov    %edx,0x8(%eax)
82000ba9:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000bac:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000baf:	89 50 08             	mov    %edx,0x8(%eax)
82000bb2:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000bb5:	8b 50 08             	mov    0x8(%eax),%edx
82000bb8:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000bbb:	89 50 0c             	mov    %edx,0xc(%eax)
82000bbe:	e9 2f 01 00 00       	jmp    82000cf2 <_malloc_r+0x50d>
82000bc3:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000bc6:	c1 e8 09             	shr    $0x9,%eax
82000bc9:	85 c0                	test   %eax,%eax
82000bcb:	75 08                	jne    82000bd5 <_malloc_r+0x3f0>
82000bcd:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000bd0:	c1 e8 03             	shr    $0x3,%eax
82000bd3:	eb 77                	jmp    82000c4c <_malloc_r+0x467>
82000bd5:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000bd8:	c1 e8 09             	shr    $0x9,%eax
82000bdb:	83 f8 04             	cmp    $0x4,%eax
82000bde:	77 0b                	ja     82000beb <_malloc_r+0x406>
82000be0:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000be3:	c1 e8 06             	shr    $0x6,%eax
82000be6:	83 c0 38             	add    $0x38,%eax
82000be9:	eb 61                	jmp    82000c4c <_malloc_r+0x467>
82000beb:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000bee:	c1 e8 09             	shr    $0x9,%eax
82000bf1:	83 f8 14             	cmp    $0x14,%eax
82000bf4:	77 0b                	ja     82000c01 <_malloc_r+0x41c>
82000bf6:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000bf9:	c1 e8 09             	shr    $0x9,%eax
82000bfc:	83 c0 5b             	add    $0x5b,%eax
82000bff:	eb 4b                	jmp    82000c4c <_malloc_r+0x467>
82000c01:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c04:	c1 e8 09             	shr    $0x9,%eax
82000c07:	83 f8 54             	cmp    $0x54,%eax
82000c0a:	77 0b                	ja     82000c17 <_malloc_r+0x432>
82000c0c:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c0f:	c1 e8 0c             	shr    $0xc,%eax
82000c12:	83 c0 6e             	add    $0x6e,%eax
82000c15:	eb 35                	jmp    82000c4c <_malloc_r+0x467>
82000c17:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c1a:	c1 e8 09             	shr    $0x9,%eax
82000c1d:	3d 54 01 00 00       	cmp    $0x154,%eax
82000c22:	77 0b                	ja     82000c2f <_malloc_r+0x44a>
82000c24:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c27:	c1 e8 0f             	shr    $0xf,%eax
82000c2a:	83 c0 77             	add    $0x77,%eax
82000c2d:	eb 1d                	jmp    82000c4c <_malloc_r+0x467>
82000c2f:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c32:	c1 e8 09             	shr    $0x9,%eax
82000c35:	3d 54 05 00 00       	cmp    $0x554,%eax
82000c3a:	77 0b                	ja     82000c47 <_malloc_r+0x462>
82000c3c:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000c3f:	c1 e8 12             	shr    $0x12,%eax
82000c42:	83 c0 7c             	add    $0x7c,%eax
82000c45:	eb 05                	jmp    82000c4c <_malloc_r+0x467>
82000c47:	b8 7e 00 00 00       	mov    $0x7e,%eax
82000c4c:	89 45 c8             	mov    %eax,-0x38(%ebp)
82000c4f:	8b 45 c8             	mov    -0x38(%ebp),%eax
82000c52:	83 c0 01             	add    $0x1,%eax
82000c55:	01 c0                	add    %eax,%eax
82000c57:	c1 e0 02             	shl    $0x2,%eax
82000c5a:	05 40 50 00 82       	add    $0x82005040,%eax
82000c5f:	83 e8 08             	sub    $0x8,%eax
82000c62:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000c65:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000c68:	8b 40 08             	mov    0x8(%eax),%eax
82000c6b:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000c6e:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000c71:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82000c74:	75 36                	jne    82000cac <_malloc_r+0x4c7>
82000c76:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000c7b:	8b 58 04             	mov    0x4(%eax),%ebx
82000c7e:	8b 45 c8             	mov    -0x38(%ebp),%eax
82000c81:	8d 50 03             	lea    0x3(%eax),%edx
82000c84:	85 c0                	test   %eax,%eax
82000c86:	0f 48 c2             	cmovs  %edx,%eax
82000c89:	c1 f8 02             	sar    $0x2,%eax
82000c8c:	ba 01 00 00 00       	mov    $0x1,%edx
82000c91:	89 c1                	mov    %eax,%ecx
82000c93:	d3 e2                	shl    %cl,%edx
82000c95:	89 d0                	mov    %edx,%eax
82000c97:	ba 40 50 00 82       	mov    $0x82005040,%edx
82000c9c:	09 d8                	or     %ebx,%eax
82000c9e:	89 42 04             	mov    %eax,0x4(%edx)
82000ca1:	eb 28                	jmp    82000ccb <_malloc_r+0x4e6>
82000ca3:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000ca6:	8b 40 08             	mov    0x8(%eax),%eax
82000ca9:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000cac:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000caf:	3b 45 d8             	cmp    -0x28(%ebp),%eax
82000cb2:	74 0e                	je     82000cc2 <_malloc_r+0x4dd>
82000cb4:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000cb7:	8b 40 04             	mov    0x4(%eax),%eax
82000cba:	83 e0 fc             	and    $0xfffffffc,%eax
82000cbd:	39 45 cc             	cmp    %eax,-0x34(%ebp)
82000cc0:	72 e1                	jb     82000ca3 <_malloc_r+0x4be>
82000cc2:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000cc5:	8b 40 0c             	mov    0xc(%eax),%eax
82000cc8:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000ccb:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000cce:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000cd1:	89 50 0c             	mov    %edx,0xc(%eax)
82000cd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000cd7:	8b 55 dc             	mov    -0x24(%ebp),%edx
82000cda:	89 50 08             	mov    %edx,0x8(%eax)
82000cdd:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000ce0:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000ce3:	89 50 08             	mov    %edx,0x8(%eax)
82000ce6:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000ce9:	8b 50 08             	mov    0x8(%eax),%edx
82000cec:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000cef:	89 50 0c             	mov    %edx,0xc(%eax)
82000cf2:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000cf5:	8d 50 03             	lea    0x3(%eax),%edx
82000cf8:	85 c0                	test   %eax,%eax
82000cfa:	0f 48 c2             	cmovs  %edx,%eax
82000cfd:	c1 f8 02             	sar    $0x2,%eax
82000d00:	ba 01 00 00 00       	mov    $0x1,%edx
82000d05:	89 c1                	mov    %eax,%ecx
82000d07:	d3 e2                	shl    %cl,%edx
82000d09:	89 d0                	mov    %edx,%eax
82000d0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82000d0e:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000d13:	8b 40 04             	mov    0x4(%eax),%eax
82000d16:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
82000d19:	0f 87 13 02 00 00    	ja     82000f32 <_malloc_r+0x74d>
82000d1f:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000d24:	8b 40 04             	mov    0x4(%eax),%eax
82000d27:	23 45 e4             	and    -0x1c(%ebp),%eax
82000d2a:	85 c0                	test   %eax,%eax
82000d2c:	75 27                	jne    82000d55 <_malloc_r+0x570>
82000d2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000d31:	83 e0 fc             	and    $0xfffffffc,%eax
82000d34:	83 c0 04             	add    $0x4,%eax
82000d37:	89 45 f0             	mov    %eax,-0x10(%ebp)
82000d3a:	d1 65 e4             	shll   -0x1c(%ebp)
82000d3d:	eb 07                	jmp    82000d46 <_malloc_r+0x561>
82000d3f:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
82000d43:	d1 65 e4             	shll   -0x1c(%ebp)
82000d46:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000d4b:	8b 40 04             	mov    0x4(%eax),%eax
82000d4e:	23 45 e4             	and    -0x1c(%ebp),%eax
82000d51:	85 c0                	test   %eax,%eax
82000d53:	74 ea                	je     82000d3f <_malloc_r+0x55a>
82000d55:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000d58:	89 45 e0             	mov    %eax,-0x20(%ebp)
82000d5b:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000d5e:	83 c0 01             	add    $0x1,%eax
82000d61:	01 c0                	add    %eax,%eax
82000d63:	c1 e0 02             	shl    $0x2,%eax
82000d66:	05 40 50 00 82       	add    $0x82005040,%eax
82000d6b:	83 e8 08             	sub    $0x8,%eax
82000d6e:	89 45 ec             	mov    %eax,-0x14(%ebp)
82000d71:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000d74:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82000d77:	8b 45 ec             	mov    -0x14(%ebp),%eax
82000d7a:	8b 40 0c             	mov    0xc(%eax),%eax
82000d7d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000d80:	e9 22 01 00 00       	jmp    82000ea7 <_malloc_r+0x6c2>
82000d85:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000d88:	8b 40 04             	mov    0x4(%eax),%eax
82000d8b:	83 e0 fc             	and    $0xfffffffc,%eax
82000d8e:	89 45 cc             	mov    %eax,-0x34(%ebp)
82000d91:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000d94:	2b 45 d0             	sub    -0x30(%ebp),%eax
82000d97:	89 45 e8             	mov    %eax,-0x18(%ebp)
82000d9a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
82000d9e:	0f 8e 9e 00 00 00    	jle    82000e42 <_malloc_r+0x65d>
82000da4:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000da7:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000daa:	01 d0                	add    %edx,%eax
82000dac:	89 45 c4             	mov    %eax,-0x3c(%ebp)
82000daf:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000db2:	83 c8 01             	or     $0x1,%eax
82000db5:	89 c2                	mov    %eax,%edx
82000db7:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000dba:	89 50 04             	mov    %edx,0x4(%eax)
82000dbd:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000dc0:	8b 40 0c             	mov    0xc(%eax),%eax
82000dc3:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000dc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000dc9:	8b 40 08             	mov    0x8(%eax),%eax
82000dcc:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000dcf:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000dd2:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000dd5:	89 50 0c             	mov    %edx,0xc(%eax)
82000dd8:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000ddb:	8b 55 dc             	mov    -0x24(%ebp),%edx
82000dde:	89 50 08             	mov    %edx,0x8(%eax)
82000de1:	b8 48 50 00 82       	mov    $0x82005048,%eax
82000de6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
82000de9:	89 50 0c             	mov    %edx,0xc(%eax)
82000dec:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000df1:	8b 40 0c             	mov    0xc(%eax),%eax
82000df4:	89 42 08             	mov    %eax,0x8(%edx)
82000df7:	ba 48 50 00 82       	mov    $0x82005048,%edx
82000dfc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000dff:	89 50 0c             	mov    %edx,0xc(%eax)
82000e02:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000e05:	8b 50 0c             	mov    0xc(%eax),%edx
82000e08:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000e0b:	89 50 08             	mov    %edx,0x8(%eax)
82000e0e:	8b 45 e8             	mov    -0x18(%ebp),%eax
82000e11:	83 c8 01             	or     $0x1,%eax
82000e14:	89 c2                	mov    %eax,%edx
82000e16:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000e19:	89 50 04             	mov    %edx,0x4(%eax)
82000e1c:	8b 55 e8             	mov    -0x18(%ebp),%edx
82000e1f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82000e22:	01 c2                	add    %eax,%edx
82000e24:	8b 45 e8             	mov    -0x18(%ebp),%eax
82000e27:	89 02                	mov    %eax,(%edx)
82000e29:	83 ec 0c             	sub    $0xc,%esp
82000e2c:	ff 75 08             	push   0x8(%ebp)
82000e2f:	e8 d9 01 00 00       	call   8200100d <__malloc_unlock>
82000e34:	83 c4 10             	add    $0x10,%esp
82000e37:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000e3a:	83 c0 08             	add    $0x8,%eax
82000e3d:	e9 c0 01 00 00       	jmp    82001002 <_malloc_r+0x81d>
82000e42:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
82000e46:	78 56                	js     82000e9e <_malloc_r+0x6b9>
82000e48:	8b 55 f4             	mov    -0xc(%ebp),%edx
82000e4b:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000e4e:	01 d0                	add    %edx,%eax
82000e50:	8b 50 04             	mov    0x4(%eax),%edx
82000e53:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82000e56:	8b 45 cc             	mov    -0x34(%ebp),%eax
82000e59:	01 c8                	add    %ecx,%eax
82000e5b:	83 ca 01             	or     $0x1,%edx
82000e5e:	89 50 04             	mov    %edx,0x4(%eax)
82000e61:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000e64:	8b 40 0c             	mov    0xc(%eax),%eax
82000e67:	89 45 d8             	mov    %eax,-0x28(%ebp)
82000e6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000e6d:	8b 40 08             	mov    0x8(%eax),%eax
82000e70:	89 45 dc             	mov    %eax,-0x24(%ebp)
82000e73:	8b 45 dc             	mov    -0x24(%ebp),%eax
82000e76:	8b 55 d8             	mov    -0x28(%ebp),%edx
82000e79:	89 50 0c             	mov    %edx,0xc(%eax)
82000e7c:	8b 45 d8             	mov    -0x28(%ebp),%eax
82000e7f:	8b 55 dc             	mov    -0x24(%ebp),%edx
82000e82:	89 50 08             	mov    %edx,0x8(%eax)
82000e85:	83 ec 0c             	sub    $0xc,%esp
82000e88:	ff 75 08             	push   0x8(%ebp)
82000e8b:	e8 7d 01 00 00       	call   8200100d <__malloc_unlock>
82000e90:	83 c4 10             	add    $0x10,%esp
82000e93:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000e96:	83 c0 08             	add    $0x8,%eax
82000e99:	e9 64 01 00 00       	jmp    82001002 <_malloc_r+0x81d>
82000e9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000ea1:	8b 40 0c             	mov    0xc(%eax),%eax
82000ea4:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000ea7:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000eaa:	3b 45 ec             	cmp    -0x14(%ebp),%eax
82000ead:	0f 85 d2 fe ff ff    	jne    82000d85 <_malloc_r+0x5a0>
82000eb3:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
82000eb7:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82000ebb:	8b 45 f0             	mov    -0x10(%ebp),%eax
82000ebe:	83 e0 03             	and    $0x3,%eax
82000ec1:	85 c0                	test   %eax,%eax
82000ec3:	0f 85 ae fe ff ff    	jne    82000d77 <_malloc_r+0x592>
82000ec9:	8b 45 e0             	mov    -0x20(%ebp),%eax
82000ecc:	83 e0 03             	and    $0x3,%eax
82000ecf:	85 c0                	test   %eax,%eax
82000ed1:	75 19                	jne    82000eec <_malloc_r+0x707>
82000ed3:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000ed8:	8b 48 04             	mov    0x4(%eax),%ecx
82000edb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82000ede:	f7 d0                	not    %eax
82000ee0:	ba 40 50 00 82       	mov    $0x82005040,%edx
82000ee5:	21 c8                	and    %ecx,%eax
82000ee7:	89 42 04             	mov    %eax,0x4(%edx)
82000eea:	eb 13                	jmp    82000eff <_malloc_r+0x71a>
82000eec:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
82000ef0:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
82000ef4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82000ef7:	8b 40 08             	mov    0x8(%eax),%eax
82000efa:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
82000efd:	74 ca                	je     82000ec9 <_malloc_r+0x6e4>
82000eff:	d1 65 e4             	shll   -0x1c(%ebp)
82000f02:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f07:	8b 40 04             	mov    0x4(%eax),%eax
82000f0a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
82000f0d:	77 23                	ja     82000f32 <_malloc_r+0x74d>
82000f0f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82000f13:	74 1d                	je     82000f32 <_malloc_r+0x74d>
82000f15:	eb 07                	jmp    82000f1e <_malloc_r+0x739>
82000f17:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
82000f1b:	d1 65 e4             	shll   -0x1c(%ebp)
82000f1e:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f23:	8b 40 04             	mov    0x4(%eax),%eax
82000f26:	23 45 e4             	and    -0x1c(%ebp),%eax
82000f29:	85 c0                	test   %eax,%eax
82000f2b:	74 ea                	je     82000f17 <_malloc_r+0x732>
82000f2d:	e9 23 fe ff ff       	jmp    82000d55 <_malloc_r+0x570>
82000f32:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f37:	8b 40 08             	mov    0x8(%eax),%eax
82000f3a:	8b 40 04             	mov    0x4(%eax),%eax
82000f3d:	83 e0 fc             	and    $0xfffffffc,%eax
82000f40:	2b 45 d0             	sub    -0x30(%ebp),%eax
82000f43:	89 45 e8             	mov    %eax,-0x18(%ebp)
82000f46:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f4b:	8b 40 08             	mov    0x8(%eax),%eax
82000f4e:	8b 40 04             	mov    0x4(%eax),%eax
82000f51:	83 e0 fc             	and    $0xfffffffc,%eax
82000f54:	39 45 d0             	cmp    %eax,-0x30(%ebp)
82000f57:	77 06                	ja     82000f5f <_malloc_r+0x77a>
82000f59:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
82000f5d:	7f 53                	jg     82000fb2 <_malloc_r+0x7cd>
82000f5f:	83 ec 08             	sub    $0x8,%esp
82000f62:	ff 75 d0             	push   -0x30(%ebp)
82000f65:	ff 75 08             	push   0x8(%ebp)
82000f68:	e8 e5 f5 ff ff       	call   82000552 <malloc_extend_top>
82000f6d:	83 c4 10             	add    $0x10,%esp
82000f70:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f75:	8b 40 08             	mov    0x8(%eax),%eax
82000f78:	8b 40 04             	mov    0x4(%eax),%eax
82000f7b:	83 e0 fc             	and    $0xfffffffc,%eax
82000f7e:	2b 45 d0             	sub    -0x30(%ebp),%eax
82000f81:	89 45 e8             	mov    %eax,-0x18(%ebp)
82000f84:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000f89:	8b 40 08             	mov    0x8(%eax),%eax
82000f8c:	8b 40 04             	mov    0x4(%eax),%eax
82000f8f:	83 e0 fc             	and    $0xfffffffc,%eax
82000f92:	39 45 d0             	cmp    %eax,-0x30(%ebp)
82000f95:	77 06                	ja     82000f9d <_malloc_r+0x7b8>
82000f97:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
82000f9b:	7f 15                	jg     82000fb2 <_malloc_r+0x7cd>
82000f9d:	83 ec 0c             	sub    $0xc,%esp
82000fa0:	ff 75 08             	push   0x8(%ebp)
82000fa3:	e8 65 00 00 00       	call   8200100d <__malloc_unlock>
82000fa8:	83 c4 10             	add    $0x10,%esp
82000fab:	b8 00 00 00 00       	mov    $0x0,%eax
82000fb0:	eb 50                	jmp    82001002 <_malloc_r+0x81d>
82000fb2:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000fb7:	8b 40 08             	mov    0x8(%eax),%eax
82000fba:	89 45 f4             	mov    %eax,-0xc(%ebp)
82000fbd:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000fc0:	83 c8 01             	or     $0x1,%eax
82000fc3:	89 c2                	mov    %eax,%edx
82000fc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000fc8:	89 50 04             	mov    %edx,0x4(%eax)
82000fcb:	ba 40 50 00 82       	mov    $0x82005040,%edx
82000fd0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82000fd3:	8b 45 d0             	mov    -0x30(%ebp),%eax
82000fd6:	01 c8                	add    %ecx,%eax
82000fd8:	89 42 08             	mov    %eax,0x8(%edx)
82000fdb:	8b 45 e8             	mov    -0x18(%ebp),%eax
82000fde:	83 c8 01             	or     $0x1,%eax
82000fe1:	89 c2                	mov    %eax,%edx
82000fe3:	b8 40 50 00 82       	mov    $0x82005040,%eax
82000fe8:	8b 40 08             	mov    0x8(%eax),%eax
82000feb:	89 50 04             	mov    %edx,0x4(%eax)
82000fee:	83 ec 0c             	sub    $0xc,%esp
82000ff1:	ff 75 08             	push   0x8(%ebp)
82000ff4:	e8 14 00 00 00       	call   8200100d <__malloc_unlock>
82000ff9:	83 c4 10             	add    $0x10,%esp
82000ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
82000fff:	83 c0 08             	add    $0x8,%eax
82001002:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82001005:	c9                   	leave  
82001006:	c3                   	ret    

82001007 <__malloc_lock>:
82001007:	55                   	push   %ebp
82001008:	89 e5                	mov    %esp,%ebp
8200100a:	90                   	nop
8200100b:	5d                   	pop    %ebp
8200100c:	c3                   	ret    

8200100d <__malloc_unlock>:
8200100d:	55                   	push   %ebp
8200100e:	89 e5                	mov    %esp,%ebp
82001010:	90                   	nop
82001011:	5d                   	pop    %ebp
82001012:	c3                   	ret    

82001013 <_iprintf_r>:
82001013:	55                   	push   %ebp
82001014:	89 e5                	mov    %esp,%ebp
82001016:	83 ec 18             	sub    $0x18,%esp
82001019:	8d 45 10             	lea    0x10(%ebp),%eax
8200101c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200101f:	8b 55 f0             	mov    -0x10(%ebp),%edx
82001022:	8b 45 08             	mov    0x8(%ebp),%eax
82001025:	8b 40 08             	mov    0x8(%eax),%eax
82001028:	52                   	push   %edx
82001029:	ff 75 0c             	push   0xc(%ebp)
8200102c:	50                   	push   %eax
8200102d:	ff 75 08             	push   0x8(%ebp)
82001030:	e8 e0 08 00 00       	call   82001915 <_vfiprintf_r>
82001035:	83 c4 10             	add    $0x10,%esp
82001038:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200103b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200103e:	c9                   	leave  
8200103f:	c3                   	ret    

82001040 <iprintf>:
82001040:	55                   	push   %ebp
82001041:	89 e5                	mov    %esp,%ebp
82001043:	83 ec 18             	sub    $0x18,%esp
82001046:	a1 24 50 00 82       	mov    0x82005024,%eax
8200104b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200104e:	8d 45 0c             	lea    0xc(%ebp),%eax
82001051:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001054:	8b 55 ec             	mov    -0x14(%ebp),%edx
82001057:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200105a:	8b 40 08             	mov    0x8(%eax),%eax
8200105d:	52                   	push   %edx
8200105e:	ff 75 08             	push   0x8(%ebp)
82001061:	50                   	push   %eax
82001062:	ff 75 f4             	push   -0xc(%ebp)
82001065:	e8 ab 08 00 00       	call   82001915 <_vfiprintf_r>
8200106a:	83 c4 10             	add    $0x10,%esp
8200106d:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001070:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001073:	c9                   	leave  
82001074:	c3                   	ret    

82001075 <_sbrk_r>:
82001075:	55                   	push   %ebp
82001076:	89 e5                	mov    %esp,%ebp
82001078:	83 ec 18             	sub    $0x18,%esp
8200107b:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
82001082:	00 00 00 
82001085:	83 ec 0c             	sub    $0xc,%esp
82001088:	ff 75 0c             	push   0xc(%ebp)
8200108b:	e8 f1 f1 ff ff       	call   82000281 <sbrk>
82001090:	83 c4 10             	add    $0x10,%esp
82001093:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001096:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8200109a:	75 14                	jne    820010b0 <_sbrk_r+0x3b>
8200109c:	a1 30 56 00 82       	mov    0x82005630,%eax
820010a1:	85 c0                	test   %eax,%eax
820010a3:	74 0b                	je     820010b0 <_sbrk_r+0x3b>
820010a5:	8b 15 30 56 00 82    	mov    0x82005630,%edx
820010ab:	8b 45 08             	mov    0x8(%ebp),%eax
820010ae:	89 10                	mov    %edx,(%eax)
820010b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
820010b3:	c9                   	leave  
820010b4:	c3                   	ret    

820010b5 <__call_exitprocs>:
820010b5:	55                   	push   %ebp
820010b6:	89 e5                	mov    %esp,%ebp
820010b8:	57                   	push   %edi
820010b9:	56                   	push   %esi
820010ba:	53                   	push   %ebx
820010bb:	83 ec 1c             	sub    $0x1c,%esp
820010be:	a1 80 48 00 82       	mov    0x82004880,%eax
820010c3:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
820010c9:	a1 80 48 00 82       	mov    0x82004880,%eax
820010ce:	05 48 01 00 00       	add    $0x148,%eax
820010d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820010d6:	90                   	nop
820010d7:	85 db                	test   %ebx,%ebx
820010d9:	0f 84 e1 00 00 00    	je     820011c0 <__call_exitprocs+0x10b>
820010df:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
820010e5:	8b 43 04             	mov    0x4(%ebx),%eax
820010e8:	8d 70 ff             	lea    -0x1(%eax),%esi
820010eb:	e9 c6 00 00 00       	jmp    820011b6 <__call_exitprocs+0x101>
820010f0:	b8 01 00 00 00       	mov    $0x1,%eax
820010f5:	89 f1                	mov    %esi,%ecx
820010f7:	d3 e0                	shl    %cl,%eax
820010f9:	89 45 e0             	mov    %eax,-0x20(%ebp)
820010fc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82001100:	74 17                	je     82001119 <__call_exitprocs+0x64>
82001102:	85 ff                	test   %edi,%edi
82001104:	0f 84 a5 00 00 00    	je     820011af <__call_exitprocs+0xfa>
8200110a:	8d 46 20             	lea    0x20(%esi),%eax
8200110d:	8b 04 87             	mov    (%edi,%eax,4),%eax
82001110:	39 45 0c             	cmp    %eax,0xc(%ebp)
82001113:	0f 85 96 00 00 00    	jne    820011af <__call_exitprocs+0xfa>
82001119:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8200111d:	89 45 dc             	mov    %eax,-0x24(%ebp)
82001120:	8b 43 04             	mov    0x4(%ebx),%eax
82001123:	83 e8 01             	sub    $0x1,%eax
82001126:	39 c6                	cmp    %eax,%esi
82001128:	75 0b                	jne    82001135 <__call_exitprocs+0x80>
8200112a:	8b 43 04             	mov    0x4(%ebx),%eax
8200112d:	83 e8 01             	sub    $0x1,%eax
82001130:	89 43 04             	mov    %eax,0x4(%ebx)
82001133:	eb 08                	jmp    8200113d <__call_exitprocs+0x88>
82001135:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8200113c:	00 
8200113d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
82001141:	74 6f                	je     820011b2 <__call_exitprocs+0xfd>
82001143:	8b 43 04             	mov    0x4(%ebx),%eax
82001146:	89 45 d8             	mov    %eax,-0x28(%ebp)
82001149:	85 ff                	test   %edi,%edi
8200114b:	74 0f                	je     8200115c <__call_exitprocs+0xa7>
8200114d:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
82001153:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001156:	21 d0                	and    %edx,%eax
82001158:	85 c0                	test   %eax,%eax
8200115a:	75 07                	jne    82001163 <__call_exitprocs+0xae>
8200115c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200115f:	ff d0                	call   *%eax
82001161:	eb 32                	jmp    82001195 <__call_exitprocs+0xe0>
82001163:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
82001169:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200116c:	21 d0                	and    %edx,%eax
8200116e:	85 c0                	test   %eax,%eax
82001170:	75 14                	jne    82001186 <__call_exitprocs+0xd1>
82001172:	8b 04 b7             	mov    (%edi,%esi,4),%eax
82001175:	83 ec 08             	sub    $0x8,%esp
82001178:	50                   	push   %eax
82001179:	ff 75 08             	push   0x8(%ebp)
8200117c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200117f:	ff d0                	call   *%eax
82001181:	83 c4 10             	add    $0x10,%esp
82001184:	eb 0f                	jmp    82001195 <__call_exitprocs+0xe0>
82001186:	8b 04 b7             	mov    (%edi,%esi,4),%eax
82001189:	83 ec 0c             	sub    $0xc,%esp
8200118c:	50                   	push   %eax
8200118d:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001190:	ff d0                	call   *%eax
82001192:	83 c4 10             	add    $0x10,%esp
82001195:	8b 43 04             	mov    0x4(%ebx),%eax
82001198:	39 45 d8             	cmp    %eax,-0x28(%ebp)
8200119b:	0f 85 1d ff ff ff    	jne    820010be <__call_exitprocs+0x9>
820011a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820011a4:	8b 00                	mov    (%eax),%eax
820011a6:	39 c3                	cmp    %eax,%ebx
820011a8:	74 09                	je     820011b3 <__call_exitprocs+0xfe>
820011aa:	e9 0f ff ff ff       	jmp    820010be <__call_exitprocs+0x9>
820011af:	90                   	nop
820011b0:	eb 01                	jmp    820011b3 <__call_exitprocs+0xfe>
820011b2:	90                   	nop
820011b3:	83 ee 01             	sub    $0x1,%esi
820011b6:	85 f6                	test   %esi,%esi
820011b8:	0f 89 32 ff ff ff    	jns    820010f0 <__call_exitprocs+0x3b>
820011be:	eb 01                	jmp    820011c1 <__call_exitprocs+0x10c>
820011c0:	90                   	nop
820011c1:	90                   	nop
820011c2:	8d 65 f4             	lea    -0xc(%ebp),%esp
820011c5:	5b                   	pop    %ebx
820011c6:	5e                   	pop    %esi
820011c7:	5f                   	pop    %edi
820011c8:	5d                   	pop    %ebp
820011c9:	c3                   	ret    

820011ca <_free_r>:
820011ca:	55                   	push   %ebp
820011cb:	89 e5                	mov    %esp,%ebp
820011cd:	53                   	push   %ebx
820011ce:	83 ec 34             	sub    $0x34,%esp
820011d1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
820011d5:	0f 84 c4 03 00 00    	je     8200159f <_free_r+0x3d5>
820011db:	83 ec 0c             	sub    $0xc,%esp
820011de:	ff 75 08             	push   0x8(%ebp)
820011e1:	e8 21 fe ff ff       	call   82001007 <__malloc_lock>
820011e6:	83 c4 10             	add    $0x10,%esp
820011e9:	8b 45 0c             	mov    0xc(%ebp),%eax
820011ec:	83 e8 08             	sub    $0x8,%eax
820011ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
820011f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
820011f5:	8b 40 04             	mov    0x4(%eax),%eax
820011f8:	89 45 e0             	mov    %eax,-0x20(%ebp)
820011fb:	8b 45 e0             	mov    -0x20(%ebp),%eax
820011fe:	83 e0 fe             	and    $0xfffffffe,%eax
82001201:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001204:	8b 55 f4             	mov    -0xc(%ebp),%edx
82001207:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200120a:	01 d0                	add    %edx,%eax
8200120c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8200120f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001212:	8b 40 04             	mov    0x4(%eax),%eax
82001215:	83 e0 fc             	and    $0xfffffffc,%eax
82001218:	89 45 d8             	mov    %eax,-0x28(%ebp)
8200121b:	b8 40 50 00 82       	mov    $0x82005040,%eax
82001220:	8b 40 08             	mov    0x8(%eax),%eax
82001223:	39 45 dc             	cmp    %eax,-0x24(%ebp)
82001226:	0f 85 94 00 00 00    	jne    820012c0 <_free_r+0xf6>
8200122c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200122f:	01 45 f0             	add    %eax,-0x10(%ebp)
82001232:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001235:	83 e0 01             	and    $0x1,%eax
82001238:	85 c0                	test   %eax,%eax
8200123a:	75 3a                	jne    82001276 <_free_r+0xac>
8200123c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200123f:	8b 00                	mov    (%eax),%eax
82001241:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82001244:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82001247:	f7 d8                	neg    %eax
82001249:	01 45 f4             	add    %eax,-0xc(%ebp)
8200124c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8200124f:	01 45 f0             	add    %eax,-0x10(%ebp)
82001252:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001255:	8b 40 0c             	mov    0xc(%eax),%eax
82001258:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200125b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200125e:	8b 40 08             	mov    0x8(%eax),%eax
82001261:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001264:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001267:	8b 55 ec             	mov    -0x14(%ebp),%edx
8200126a:	89 50 0c             	mov    %edx,0xc(%eax)
8200126d:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001270:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001273:	89 50 08             	mov    %edx,0x8(%eax)
82001276:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001279:	83 c8 01             	or     $0x1,%eax
8200127c:	89 c2                	mov    %eax,%edx
8200127e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001281:	89 50 04             	mov    %edx,0x4(%eax)
82001284:	ba 40 50 00 82       	mov    $0x82005040,%edx
82001289:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200128c:	89 42 08             	mov    %eax,0x8(%edx)
8200128f:	a1 48 54 00 82       	mov    0x82005448,%eax
82001294:	39 45 f0             	cmp    %eax,-0x10(%ebp)
82001297:	72 14                	jb     820012ad <_free_r+0xe3>
82001299:	a1 e0 55 00 82       	mov    0x820055e0,%eax
8200129e:	83 ec 08             	sub    $0x8,%esp
820012a1:	50                   	push   %eax
820012a2:	ff 75 08             	push   0x8(%ebp)
820012a5:	e8 fb 02 00 00       	call   820015a5 <_malloc_trim_r>
820012aa:	83 c4 10             	add    $0x10,%esp
820012ad:	83 ec 0c             	sub    $0xc,%esp
820012b0:	ff 75 08             	push   0x8(%ebp)
820012b3:	e8 55 fd ff ff       	call   8200100d <__malloc_unlock>
820012b8:	83 c4 10             	add    $0x10,%esp
820012bb:	e9 e0 02 00 00       	jmp    820015a0 <_free_r+0x3d6>
820012c0:	8b 45 dc             	mov    -0x24(%ebp),%eax
820012c3:	8b 55 d8             	mov    -0x28(%ebp),%edx
820012c6:	89 50 04             	mov    %edx,0x4(%eax)
820012c9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
820012d0:	8b 45 e0             	mov    -0x20(%ebp),%eax
820012d3:	83 e0 01             	and    $0x1,%eax
820012d6:	85 c0                	test   %eax,%eax
820012d8:	75 52                	jne    8200132c <_free_r+0x162>
820012da:	8b 45 f4             	mov    -0xc(%ebp),%eax
820012dd:	8b 00                	mov    (%eax),%eax
820012df:	89 45 d4             	mov    %eax,-0x2c(%ebp)
820012e2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
820012e5:	f7 d8                	neg    %eax
820012e7:	01 45 f4             	add    %eax,-0xc(%ebp)
820012ea:	8b 45 d4             	mov    -0x2c(%ebp),%eax
820012ed:	01 45 f0             	add    %eax,-0x10(%ebp)
820012f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
820012f3:	8b 40 08             	mov    0x8(%eax),%eax
820012f6:	ba 48 50 00 82       	mov    $0x82005048,%edx
820012fb:	39 d0                	cmp    %edx,%eax
820012fd:	75 09                	jne    82001308 <_free_r+0x13e>
820012ff:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
82001306:	eb 24                	jmp    8200132c <_free_r+0x162>
82001308:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200130b:	8b 40 0c             	mov    0xc(%eax),%eax
8200130e:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001311:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001314:	8b 40 08             	mov    0x8(%eax),%eax
82001317:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200131a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200131d:	8b 55 ec             	mov    -0x14(%ebp),%edx
82001320:	89 50 0c             	mov    %edx,0xc(%eax)
82001323:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001326:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001329:	89 50 08             	mov    %edx,0x8(%eax)
8200132c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8200132f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001332:	01 d0                	add    %edx,%eax
82001334:	8b 40 04             	mov    0x4(%eax),%eax
82001337:	83 e0 01             	and    $0x1,%eax
8200133a:	85 c0                	test   %eax,%eax
8200133c:	75 75                	jne    820013b3 <_free_r+0x1e9>
8200133e:	8b 45 d8             	mov    -0x28(%ebp),%eax
82001341:	01 45 f0             	add    %eax,-0x10(%ebp)
82001344:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82001348:	75 45                	jne    8200138f <_free_r+0x1c5>
8200134a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200134d:	8b 40 08             	mov    0x8(%eax),%eax
82001350:	ba 48 50 00 82       	mov    $0x82005048,%edx
82001355:	39 d0                	cmp    %edx,%eax
82001357:	75 36                	jne    8200138f <_free_r+0x1c5>
82001359:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
82001360:	b8 48 50 00 82       	mov    $0x82005048,%eax
82001365:	8b 55 f4             	mov    -0xc(%ebp),%edx
82001368:	89 50 0c             	mov    %edx,0xc(%eax)
8200136b:	ba 48 50 00 82       	mov    $0x82005048,%edx
82001370:	8b 40 0c             	mov    0xc(%eax),%eax
82001373:	89 42 08             	mov    %eax,0x8(%edx)
82001376:	ba 48 50 00 82       	mov    $0x82005048,%edx
8200137b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200137e:	89 50 0c             	mov    %edx,0xc(%eax)
82001381:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001384:	8b 50 0c             	mov    0xc(%eax),%edx
82001387:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200138a:	89 50 08             	mov    %edx,0x8(%eax)
8200138d:	eb 24                	jmp    820013b3 <_free_r+0x1e9>
8200138f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82001392:	8b 40 0c             	mov    0xc(%eax),%eax
82001395:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001398:	8b 45 dc             	mov    -0x24(%ebp),%eax
8200139b:	8b 40 08             	mov    0x8(%eax),%eax
8200139e:	89 45 e8             	mov    %eax,-0x18(%ebp)
820013a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
820013a4:	8b 55 ec             	mov    -0x14(%ebp),%edx
820013a7:	89 50 0c             	mov    %edx,0xc(%eax)
820013aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
820013ad:	8b 55 e8             	mov    -0x18(%ebp),%edx
820013b0:	89 50 08             	mov    %edx,0x8(%eax)
820013b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013b6:	83 c8 01             	or     $0x1,%eax
820013b9:	89 c2                	mov    %eax,%edx
820013bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
820013be:	89 50 04             	mov    %edx,0x4(%eax)
820013c1:	8b 55 f4             	mov    -0xc(%ebp),%edx
820013c4:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013c7:	01 c2                	add    %eax,%edx
820013c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013cc:	89 02                	mov    %eax,(%edx)
820013ce:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
820013d2:	0f 85 b7 01 00 00    	jne    8200158f <_free_r+0x3c5>
820013d8:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
820013df:	77 7f                	ja     82001460 <_free_r+0x296>
820013e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
820013e4:	c1 e8 03             	shr    $0x3,%eax
820013e7:	89 45 d0             	mov    %eax,-0x30(%ebp)
820013ea:	b8 40 50 00 82       	mov    $0x82005040,%eax
820013ef:	8b 58 04             	mov    0x4(%eax),%ebx
820013f2:	8b 45 d0             	mov    -0x30(%ebp),%eax
820013f5:	8d 50 03             	lea    0x3(%eax),%edx
820013f8:	85 c0                	test   %eax,%eax
820013fa:	0f 48 c2             	cmovs  %edx,%eax
820013fd:	c1 f8 02             	sar    $0x2,%eax
82001400:	ba 01 00 00 00       	mov    $0x1,%edx
82001405:	89 c1                	mov    %eax,%ecx
82001407:	d3 e2                	shl    %cl,%edx
82001409:	89 d0                	mov    %edx,%eax
8200140b:	ba 40 50 00 82       	mov    $0x82005040,%edx
82001410:	09 d8                	or     %ebx,%eax
82001412:	89 42 04             	mov    %eax,0x4(%edx)
82001415:	8b 45 d0             	mov    -0x30(%ebp),%eax
82001418:	83 c0 01             	add    $0x1,%eax
8200141b:	01 c0                	add    %eax,%eax
8200141d:	c1 e0 02             	shl    $0x2,%eax
82001420:	05 40 50 00 82       	add    $0x82005040,%eax
82001425:	83 e8 08             	sub    $0x8,%eax
82001428:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200142b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200142e:	8b 40 08             	mov    0x8(%eax),%eax
82001431:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001434:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001437:	8b 55 ec             	mov    -0x14(%ebp),%edx
8200143a:	89 50 0c             	mov    %edx,0xc(%eax)
8200143d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001440:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001443:	89 50 08             	mov    %edx,0x8(%eax)
82001446:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001449:	8b 55 f4             	mov    -0xc(%ebp),%edx
8200144c:	89 50 08             	mov    %edx,0x8(%eax)
8200144f:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001452:	8b 50 08             	mov    0x8(%eax),%edx
82001455:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001458:	89 50 0c             	mov    %edx,0xc(%eax)
8200145b:	e9 2f 01 00 00       	jmp    8200158f <_free_r+0x3c5>
82001460:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001463:	c1 e8 09             	shr    $0x9,%eax
82001466:	85 c0                	test   %eax,%eax
82001468:	75 08                	jne    82001472 <_free_r+0x2a8>
8200146a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200146d:	c1 e8 03             	shr    $0x3,%eax
82001470:	eb 77                	jmp    820014e9 <_free_r+0x31f>
82001472:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001475:	c1 e8 09             	shr    $0x9,%eax
82001478:	83 f8 04             	cmp    $0x4,%eax
8200147b:	77 0b                	ja     82001488 <_free_r+0x2be>
8200147d:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001480:	c1 e8 06             	shr    $0x6,%eax
82001483:	83 c0 38             	add    $0x38,%eax
82001486:	eb 61                	jmp    820014e9 <_free_r+0x31f>
82001488:	8b 45 f0             	mov    -0x10(%ebp),%eax
8200148b:	c1 e8 09             	shr    $0x9,%eax
8200148e:	83 f8 14             	cmp    $0x14,%eax
82001491:	77 0b                	ja     8200149e <_free_r+0x2d4>
82001493:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001496:	c1 e8 09             	shr    $0x9,%eax
82001499:	83 c0 5b             	add    $0x5b,%eax
8200149c:	eb 4b                	jmp    820014e9 <_free_r+0x31f>
8200149e:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014a1:	c1 e8 09             	shr    $0x9,%eax
820014a4:	83 f8 54             	cmp    $0x54,%eax
820014a7:	77 0b                	ja     820014b4 <_free_r+0x2ea>
820014a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014ac:	c1 e8 0c             	shr    $0xc,%eax
820014af:	83 c0 6e             	add    $0x6e,%eax
820014b2:	eb 35                	jmp    820014e9 <_free_r+0x31f>
820014b4:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014b7:	c1 e8 09             	shr    $0x9,%eax
820014ba:	3d 54 01 00 00       	cmp    $0x154,%eax
820014bf:	77 0b                	ja     820014cc <_free_r+0x302>
820014c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014c4:	c1 e8 0f             	shr    $0xf,%eax
820014c7:	83 c0 77             	add    $0x77,%eax
820014ca:	eb 1d                	jmp    820014e9 <_free_r+0x31f>
820014cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014cf:	c1 e8 09             	shr    $0x9,%eax
820014d2:	3d 54 05 00 00       	cmp    $0x554,%eax
820014d7:	77 0b                	ja     820014e4 <_free_r+0x31a>
820014d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
820014dc:	c1 e8 12             	shr    $0x12,%eax
820014df:	83 c0 7c             	add    $0x7c,%eax
820014e2:	eb 05                	jmp    820014e9 <_free_r+0x31f>
820014e4:	b8 7e 00 00 00       	mov    $0x7e,%eax
820014e9:	89 45 d0             	mov    %eax,-0x30(%ebp)
820014ec:	8b 45 d0             	mov    -0x30(%ebp),%eax
820014ef:	83 c0 01             	add    $0x1,%eax
820014f2:	01 c0                	add    %eax,%eax
820014f4:	c1 e0 02             	shl    $0x2,%eax
820014f7:	05 40 50 00 82       	add    $0x82005040,%eax
820014fc:	83 e8 08             	sub    $0x8,%eax
820014ff:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001502:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001505:	8b 40 08             	mov    0x8(%eax),%eax
82001508:	89 45 e8             	mov    %eax,-0x18(%ebp)
8200150b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200150e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
82001511:	75 36                	jne    82001549 <_free_r+0x37f>
82001513:	b8 40 50 00 82       	mov    $0x82005040,%eax
82001518:	8b 58 04             	mov    0x4(%eax),%ebx
8200151b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200151e:	8d 50 03             	lea    0x3(%eax),%edx
82001521:	85 c0                	test   %eax,%eax
82001523:	0f 48 c2             	cmovs  %edx,%eax
82001526:	c1 f8 02             	sar    $0x2,%eax
82001529:	ba 01 00 00 00       	mov    $0x1,%edx
8200152e:	89 c1                	mov    %eax,%ecx
82001530:	d3 e2                	shl    %cl,%edx
82001532:	89 d0                	mov    %edx,%eax
82001534:	ba 40 50 00 82       	mov    $0x82005040,%edx
82001539:	09 d8                	or     %ebx,%eax
8200153b:	89 42 04             	mov    %eax,0x4(%edx)
8200153e:	eb 28                	jmp    82001568 <_free_r+0x39e>
82001540:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001543:	8b 40 08             	mov    0x8(%eax),%eax
82001546:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001549:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200154c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8200154f:	74 0e                	je     8200155f <_free_r+0x395>
82001551:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001554:	8b 40 04             	mov    0x4(%eax),%eax
82001557:	83 e0 fc             	and    $0xfffffffc,%eax
8200155a:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8200155d:	72 e1                	jb     82001540 <_free_r+0x376>
8200155f:	8b 45 e8             	mov    -0x18(%ebp),%eax
82001562:	8b 40 0c             	mov    0xc(%eax),%eax
82001565:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001568:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200156b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8200156e:	89 50 0c             	mov    %edx,0xc(%eax)
82001571:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001574:	8b 55 e8             	mov    -0x18(%ebp),%edx
82001577:	89 50 08             	mov    %edx,0x8(%eax)
8200157a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200157d:	8b 55 f4             	mov    -0xc(%ebp),%edx
82001580:	89 50 08             	mov    %edx,0x8(%eax)
82001583:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001586:	8b 50 08             	mov    0x8(%eax),%edx
82001589:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200158c:	89 50 0c             	mov    %edx,0xc(%eax)
8200158f:	83 ec 0c             	sub    $0xc,%esp
82001592:	ff 75 08             	push   0x8(%ebp)
82001595:	e8 73 fa ff ff       	call   8200100d <__malloc_unlock>
8200159a:	83 c4 10             	add    $0x10,%esp
8200159d:	eb 01                	jmp    820015a0 <_free_r+0x3d6>
8200159f:	90                   	nop
820015a0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820015a3:	c9                   	leave  
820015a4:	c3                   	ret    

820015a5 <_malloc_trim_r>:
820015a5:	55                   	push   %ebp
820015a6:	89 e5                	mov    %esp,%ebp
820015a8:	83 ec 28             	sub    $0x28,%esp
820015ab:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
820015b2:	83 ec 0c             	sub    $0xc,%esp
820015b5:	ff 75 08             	push   0x8(%ebp)
820015b8:	e8 4a fa ff ff       	call   82001007 <__malloc_lock>
820015bd:	83 c4 10             	add    $0x10,%esp
820015c0:	b8 40 50 00 82       	mov    $0x82005040,%eax
820015c5:	8b 40 08             	mov    0x8(%eax),%eax
820015c8:	8b 40 04             	mov    0x4(%eax),%eax
820015cb:	83 e0 fc             	and    $0xfffffffc,%eax
820015ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
820015d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
820015d4:	2b 45 0c             	sub    0xc(%ebp),%eax
820015d7:	89 c2                	mov    %eax,%edx
820015d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
820015dc:	01 d0                	add    %edx,%eax
820015de:	83 e8 11             	sub    $0x11,%eax
820015e1:	ba 00 00 00 00       	mov    $0x0,%edx
820015e6:	f7 75 f4             	divl   -0xc(%ebp)
820015e9:	83 e8 01             	sub    $0x1,%eax
820015ec:	0f af 45 f4          	imul   -0xc(%ebp),%eax
820015f0:	89 45 ec             	mov    %eax,-0x14(%ebp)
820015f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
820015f6:	39 45 ec             	cmp    %eax,-0x14(%ebp)
820015f9:	7d 18                	jge    82001613 <_malloc_trim_r+0x6e>
820015fb:	83 ec 0c             	sub    $0xc,%esp
820015fe:	ff 75 08             	push   0x8(%ebp)
82001601:	e8 07 fa ff ff       	call   8200100d <__malloc_unlock>
82001606:	83 c4 10             	add    $0x10,%esp
82001609:	b8 00 00 00 00       	mov    $0x0,%eax
8200160e:	e9 f1 00 00 00       	jmp    82001704 <_malloc_trim_r+0x15f>
82001613:	83 ec 08             	sub    $0x8,%esp
82001616:	6a 00                	push   $0x0
82001618:	ff 75 08             	push   0x8(%ebp)
8200161b:	e8 55 fa ff ff       	call   82001075 <_sbrk_r>
82001620:	83 c4 10             	add    $0x10,%esp
82001623:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001626:	b8 40 50 00 82       	mov    $0x82005040,%eax
8200162b:	8b 50 08             	mov    0x8(%eax),%edx
8200162e:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001631:	01 d0                	add    %edx,%eax
82001633:	39 45 e8             	cmp    %eax,-0x18(%ebp)
82001636:	74 18                	je     82001650 <_malloc_trim_r+0xab>
82001638:	83 ec 0c             	sub    $0xc,%esp
8200163b:	ff 75 08             	push   0x8(%ebp)
8200163e:	e8 ca f9 ff ff       	call   8200100d <__malloc_unlock>
82001643:	83 c4 10             	add    $0x10,%esp
82001646:	b8 00 00 00 00       	mov    $0x0,%eax
8200164b:	e9 b4 00 00 00       	jmp    82001704 <_malloc_trim_r+0x15f>
82001650:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001653:	f7 d8                	neg    %eax
82001655:	83 ec 08             	sub    $0x8,%esp
82001658:	50                   	push   %eax
82001659:	ff 75 08             	push   0x8(%ebp)
8200165c:	e8 14 fa ff ff       	call   82001075 <_sbrk_r>
82001661:	83 c4 10             	add    $0x10,%esp
82001664:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82001667:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8200166b:	75 61                	jne    820016ce <_malloc_trim_r+0x129>
8200166d:	83 ec 08             	sub    $0x8,%esp
82001670:	6a 00                	push   $0x0
82001672:	ff 75 08             	push   0x8(%ebp)
82001675:	e8 fb f9 ff ff       	call   82001075 <_sbrk_r>
8200167a:	83 c4 10             	add    $0x10,%esp
8200167d:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001680:	b8 40 50 00 82       	mov    $0x82005040,%eax
82001685:	8b 50 08             	mov    0x8(%eax),%edx
82001688:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200168b:	29 d0                	sub    %edx,%eax
8200168d:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001690:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
82001694:	7e 23                	jle    820016b9 <_malloc_trim_r+0x114>
82001696:	8b 15 4c 54 00 82    	mov    0x8200544c,%edx
8200169c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8200169f:	29 d0                	sub    %edx,%eax
820016a1:	a3 00 56 00 82       	mov    %eax,0x82005600
820016a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
820016a9:	83 c8 01             	or     $0x1,%eax
820016ac:	89 c2                	mov    %eax,%edx
820016ae:	b8 40 50 00 82       	mov    $0x82005040,%eax
820016b3:	8b 40 08             	mov    0x8(%eax),%eax
820016b6:	89 50 04             	mov    %edx,0x4(%eax)
820016b9:	83 ec 0c             	sub    $0xc,%esp
820016bc:	ff 75 08             	push   0x8(%ebp)
820016bf:	e8 49 f9 ff ff       	call   8200100d <__malloc_unlock>
820016c4:	83 c4 10             	add    $0x10,%esp
820016c7:	b8 00 00 00 00       	mov    $0x0,%eax
820016cc:	eb 36                	jmp    82001704 <_malloc_trim_r+0x15f>
820016ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
820016d1:	2b 45 ec             	sub    -0x14(%ebp),%eax
820016d4:	83 c8 01             	or     $0x1,%eax
820016d7:	89 c2                	mov    %eax,%edx
820016d9:	b8 40 50 00 82       	mov    $0x82005040,%eax
820016de:	8b 40 08             	mov    0x8(%eax),%eax
820016e1:	89 50 04             	mov    %edx,0x4(%eax)
820016e4:	a1 00 56 00 82       	mov    0x82005600,%eax
820016e9:	2b 45 ec             	sub    -0x14(%ebp),%eax
820016ec:	a3 00 56 00 82       	mov    %eax,0x82005600
820016f1:	83 ec 0c             	sub    $0xc,%esp
820016f4:	ff 75 08             	push   0x8(%ebp)
820016f7:	e8 11 f9 ff ff       	call   8200100d <__malloc_unlock>
820016fc:	83 c4 10             	add    $0x10,%esp
820016ff:	b8 01 00 00 00       	mov    $0x1,%eax
82001704:	c9                   	leave  
82001705:	c3                   	ret    

82001706 <__sprint_r>:
82001706:	55                   	push   %ebp
82001707:	89 e5                	mov    %esp,%ebp
82001709:	56                   	push   %esi
8200170a:	53                   	push   %ebx
8200170b:	83 ec 10             	sub    $0x10,%esp
8200170e:	8b 5d 10             	mov    0x10(%ebp),%ebx
82001711:	be 00 00 00 00       	mov    $0x0,%esi
82001716:	8b 43 08             	mov    0x8(%ebx),%eax
82001719:	85 c0                	test   %eax,%eax
8200171b:	75 11                	jne    8200172e <__sprint_r+0x28>
8200171d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
82001724:	b8 00 00 00 00       	mov    $0x0,%eax
82001729:	e9 ad 00 00 00       	jmp    820017db <__sprint_r+0xd5>
8200172e:	8b 45 0c             	mov    0xc(%ebp),%eax
82001731:	8b 40 64             	mov    0x64(%eax),%eax
82001734:	25 00 20 00 00       	and    $0x2000,%eax
82001739:	85 c0                	test   %eax,%eax
8200173b:	74 7a                	je     820017b7 <__sprint_r+0xb1>
8200173d:	8b 03                	mov    (%ebx),%eax
8200173f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001742:	eb 6a                	jmp    820017ae <__sprint_r+0xa8>
82001744:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001747:	8b 00                	mov    (%eax),%eax
82001749:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200174c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200174f:	8b 40 04             	mov    0x4(%eax),%eax
82001752:	c1 e8 02             	shr    $0x2,%eax
82001755:	89 45 e8             	mov    %eax,-0x18(%ebp)
82001758:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8200175f:	eb 33                	jmp    82001794 <__sprint_r+0x8e>
82001761:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001764:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8200176b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200176e:	01 d0                	add    %edx,%eax
82001770:	8b 00                	mov    (%eax),%eax
82001772:	83 ec 04             	sub    $0x4,%esp
82001775:	ff 75 0c             	push   0xc(%ebp)
82001778:	50                   	push   %eax
82001779:	ff 75 08             	push   0x8(%ebp)
8200177c:	e8 c8 16 00 00       	call   82002e49 <_fputwc_r>
82001781:	83 c4 10             	add    $0x10,%esp
82001784:	83 f8 ff             	cmp    $0xffffffff,%eax
82001787:	75 07                	jne    82001790 <__sprint_r+0x8a>
82001789:	be ff ff ff ff       	mov    $0xffffffff,%esi
8200178e:	eb 3b                	jmp    820017cb <__sprint_r+0xc5>
82001790:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82001794:	8b 45 f0             	mov    -0x10(%ebp),%eax
82001797:	3b 45 e8             	cmp    -0x18(%ebp),%eax
8200179a:	7c c5                	jl     82001761 <__sprint_r+0x5b>
8200179c:	8b 43 08             	mov    0x8(%ebx),%eax
8200179f:	8b 55 e8             	mov    -0x18(%ebp),%edx
820017a2:	c1 e2 02             	shl    $0x2,%edx
820017a5:	29 d0                	sub    %edx,%eax
820017a7:	89 43 08             	mov    %eax,0x8(%ebx)
820017aa:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
820017ae:	8b 43 08             	mov    0x8(%ebx),%eax
820017b1:	85 c0                	test   %eax,%eax
820017b3:	75 8f                	jne    82001744 <__sprint_r+0x3e>
820017b5:	eb 14                	jmp    820017cb <__sprint_r+0xc5>
820017b7:	83 ec 04             	sub    $0x4,%esp
820017ba:	53                   	push   %ebx
820017bb:	ff 75 0c             	push   0xc(%ebp)
820017be:	ff 75 08             	push   0x8(%ebp)
820017c1:	e8 22 17 00 00       	call   82002ee8 <__sfvwrite_r>
820017c6:	83 c4 10             	add    $0x10,%esp
820017c9:	89 c6                	mov    %eax,%esi
820017cb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
820017d2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
820017d9:	89 f0                	mov    %esi,%eax
820017db:	8d 65 f8             	lea    -0x8(%ebp),%esp
820017de:	5b                   	pop    %ebx
820017df:	5e                   	pop    %esi
820017e0:	5d                   	pop    %ebp
820017e1:	c3                   	ret    

820017e2 <__sfputc_r>:
820017e2:	55                   	push   %ebp
820017e3:	89 e5                	mov    %esp,%ebp
820017e5:	83 ec 08             	sub    $0x8,%esp
820017e8:	8b 45 10             	mov    0x10(%ebp),%eax
820017eb:	8b 40 08             	mov    0x8(%eax),%eax
820017ee:	8d 50 ff             	lea    -0x1(%eax),%edx
820017f1:	8b 45 10             	mov    0x10(%ebp),%eax
820017f4:	89 50 08             	mov    %edx,0x8(%eax)
820017f7:	8b 45 10             	mov    0x10(%ebp),%eax
820017fa:	8b 40 08             	mov    0x8(%eax),%eax
820017fd:	85 c0                	test   %eax,%eax
820017ff:	79 17                	jns    82001818 <__sfputc_r+0x36>
82001801:	8b 45 10             	mov    0x10(%ebp),%eax
82001804:	8b 50 08             	mov    0x8(%eax),%edx
82001807:	8b 45 10             	mov    0x10(%ebp),%eax
8200180a:	8b 40 18             	mov    0x18(%eax),%eax
8200180d:	39 c2                	cmp    %eax,%edx
8200180f:	7c 21                	jl     82001832 <__sfputc_r+0x50>
82001811:	8b 45 0c             	mov    0xc(%ebp),%eax
82001814:	3c 0a                	cmp    $0xa,%al
82001816:	74 1a                	je     82001832 <__sfputc_r+0x50>
82001818:	8b 45 10             	mov    0x10(%ebp),%eax
8200181b:	8b 00                	mov    (%eax),%eax
8200181d:	8d 48 01             	lea    0x1(%eax),%ecx
82001820:	8b 55 10             	mov    0x10(%ebp),%edx
82001823:	89 0a                	mov    %ecx,(%edx)
82001825:	8b 55 0c             	mov    0xc(%ebp),%edx
82001828:	88 10                	mov    %dl,(%eax)
8200182a:	0f b6 00             	movzbl (%eax),%eax
8200182d:	0f b6 c0             	movzbl %al,%eax
82001830:	eb 14                	jmp    82001846 <__sfputc_r+0x64>
82001832:	83 ec 04             	sub    $0x4,%esp
82001835:	ff 75 10             	push   0x10(%ebp)
82001838:	ff 75 0c             	push   0xc(%ebp)
8200183b:	ff 75 08             	push   0x8(%ebp)
8200183e:	e8 a9 0b 00 00       	call   820023ec <__swbuf_r>
82001843:	83 c4 10             	add    $0x10,%esp
82001846:	c9                   	leave  
82001847:	c3                   	ret    

82001848 <__sfputs_r>:
82001848:	55                   	push   %ebp
82001849:	89 e5                	mov    %esp,%ebp
8200184b:	53                   	push   %ebx
8200184c:	83 ec 14             	sub    $0x14,%esp
8200184f:	8b 45 0c             	mov    0xc(%ebp),%eax
82001852:	8b 40 64             	mov    0x64(%eax),%eax
82001855:	25 00 20 00 00       	and    $0x2000,%eax
8200185a:	85 c0                	test   %eax,%eax
8200185c:	74 4c                	je     820018aa <__sfputs_r+0x62>
8200185e:	8b 45 10             	mov    0x10(%ebp),%eax
82001861:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001864:	bb 00 00 00 00       	mov    $0x0,%ebx
82001869:	eb 31                	jmp    8200189c <__sfputs_r+0x54>
8200186b:	89 d8                	mov    %ebx,%eax
8200186d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
82001874:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001877:	01 d0                	add    %edx,%eax
82001879:	8b 00                	mov    (%eax),%eax
8200187b:	83 ec 04             	sub    $0x4,%esp
8200187e:	ff 75 0c             	push   0xc(%ebp)
82001881:	50                   	push   %eax
82001882:	ff 75 08             	push   0x8(%ebp)
82001885:	e8 bf 15 00 00       	call   82002e49 <_fputwc_r>
8200188a:	83 c4 10             	add    $0x10,%esp
8200188d:	83 f8 ff             	cmp    $0xffffffff,%eax
82001890:	75 07                	jne    82001899 <__sfputs_r+0x51>
82001892:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82001897:	eb 52                	jmp    820018eb <__sfputs_r+0xa3>
82001899:	83 c3 01             	add    $0x1,%ebx
8200189c:	8b 45 14             	mov    0x14(%ebp),%eax
8200189f:	c1 e8 02             	shr    $0x2,%eax
820018a2:	89 da                	mov    %ebx,%edx
820018a4:	39 d0                	cmp    %edx,%eax
820018a6:	77 c3                	ja     8200186b <__sfputs_r+0x23>
820018a8:	eb 3c                	jmp    820018e6 <__sfputs_r+0x9e>
820018aa:	bb 00 00 00 00       	mov    $0x0,%ebx
820018af:	eb 2e                	jmp    820018df <__sfputs_r+0x97>
820018b1:	89 da                	mov    %ebx,%edx
820018b3:	8b 45 10             	mov    0x10(%ebp),%eax
820018b6:	01 d0                	add    %edx,%eax
820018b8:	0f b6 00             	movzbl (%eax),%eax
820018bb:	0f be c0             	movsbl %al,%eax
820018be:	83 ec 04             	sub    $0x4,%esp
820018c1:	ff 75 0c             	push   0xc(%ebp)
820018c4:	50                   	push   %eax
820018c5:	ff 75 08             	push   0x8(%ebp)
820018c8:	e8 15 ff ff ff       	call   820017e2 <__sfputc_r>
820018cd:	83 c4 10             	add    $0x10,%esp
820018d0:	83 f8 ff             	cmp    $0xffffffff,%eax
820018d3:	75 07                	jne    820018dc <__sfputs_r+0x94>
820018d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820018da:	eb 0f                	jmp    820018eb <__sfputs_r+0xa3>
820018dc:	83 c3 01             	add    $0x1,%ebx
820018df:	89 d8                	mov    %ebx,%eax
820018e1:	39 45 14             	cmp    %eax,0x14(%ebp)
820018e4:	77 cb                	ja     820018b1 <__sfputs_r+0x69>
820018e6:	b8 00 00 00 00       	mov    $0x0,%eax
820018eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820018ee:	c9                   	leave  
820018ef:	c3                   	ret    

820018f0 <vfiprintf>:
820018f0:	55                   	push   %ebp
820018f1:	89 e5                	mov    %esp,%ebp
820018f3:	83 ec 18             	sub    $0x18,%esp
820018f6:	a1 24 50 00 82       	mov    0x82005024,%eax
820018fb:	ff 75 10             	push   0x10(%ebp)
820018fe:	ff 75 0c             	push   0xc(%ebp)
82001901:	ff 75 08             	push   0x8(%ebp)
82001904:	50                   	push   %eax
82001905:	e8 0b 00 00 00       	call   82001915 <_vfiprintf_r>
8200190a:	83 c4 10             	add    $0x10,%esp
8200190d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001910:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001913:	c9                   	leave  
82001914:	c3                   	ret    

82001915 <_vfiprintf_r>:
82001915:	55                   	push   %ebp
82001916:	89 e5                	mov    %esp,%ebp
82001918:	57                   	push   %edi
82001919:	56                   	push   %esi
8200191a:	53                   	push   %ebx
8200191b:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
82001921:	c7 45 e4 48 18 00 82 	movl   $0x82001848,-0x1c(%ebp)
82001928:	8b 45 08             	mov    0x8(%ebp),%eax
8200192b:	89 45 e0             	mov    %eax,-0x20(%ebp)
8200192e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
82001932:	74 18                	je     8200194c <_vfiprintf_r+0x37>
82001934:	8b 45 e0             	mov    -0x20(%ebp),%eax
82001937:	8b 40 38             	mov    0x38(%eax),%eax
8200193a:	85 c0                	test   %eax,%eax
8200193c:	75 0e                	jne    8200194c <_vfiprintf_r+0x37>
8200193e:	83 ec 0c             	sub    $0xc,%esp
82001941:	ff 75 e0             	push   -0x20(%ebp)
82001944:	e8 dd 12 00 00       	call   82002c26 <__sinit>
82001949:	83 c4 10             	add    $0x10,%esp
8200194c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200194f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82001953:	98                   	cwtl   
82001954:	83 e0 08             	and    $0x8,%eax
82001957:	85 c0                	test   %eax,%eax
82001959:	74 0a                	je     82001965 <_vfiprintf_r+0x50>
8200195b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200195e:	8b 40 10             	mov    0x10(%eax),%eax
82001961:	85 c0                	test   %eax,%eax
82001963:	75 1f                	jne    82001984 <_vfiprintf_r+0x6f>
82001965:	83 ec 08             	sub    $0x8,%esp
82001968:	ff 75 0c             	push   0xc(%ebp)
8200196b:	ff 75 08             	push   0x8(%ebp)
8200196e:	e8 ac 0b 00 00       	call   8200251f <__swsetup_r>
82001973:	83 c4 10             	add    $0x10,%esp
82001976:	85 c0                	test   %eax,%eax
82001978:	74 0a                	je     82001984 <_vfiprintf_r+0x6f>
8200197a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200197f:	e9 df 02 00 00       	jmp    82001c63 <_vfiprintf_r+0x34e>
82001984:	8b 5d 10             	mov    0x10(%ebp),%ebx
82001987:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8200198e:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
82001992:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
82001996:	8b 45 14             	mov    0x14(%ebp),%eax
82001999:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8200199f:	89 de                	mov    %ebx,%esi
820019a1:	eb 03                	jmp    820019a6 <_vfiprintf_r+0x91>
820019a3:	83 c3 01             	add    $0x1,%ebx
820019a6:	0f b6 03             	movzbl (%ebx),%eax
820019a9:	84 c0                	test   %al,%al
820019ab:	74 07                	je     820019b4 <_vfiprintf_r+0x9f>
820019ad:	0f b6 03             	movzbl (%ebx),%eax
820019b0:	3c 25                	cmp    $0x25,%al
820019b2:	75 ef                	jne    820019a3 <_vfiprintf_r+0x8e>
820019b4:	89 d8                	mov    %ebx,%eax
820019b6:	29 f0                	sub    %esi,%eax
820019b8:	85 c0                	test   %eax,%eax
820019ba:	74 2b                	je     820019e7 <_vfiprintf_r+0xd2>
820019bc:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
820019c2:	50                   	push   %eax
820019c3:	56                   	push   %esi
820019c4:	ff 75 0c             	push   0xc(%ebp)
820019c7:	ff 75 08             	push   0x8(%ebp)
820019ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820019cd:	ff d0                	call   *%eax
820019cf:	83 c4 10             	add    $0x10,%esp
820019d2:	83 f8 ff             	cmp    $0xffffffff,%eax
820019d5:	0f 84 68 02 00 00    	je     82001c43 <_vfiprintf_r+0x32e>
820019db:	8b 45 94             	mov    -0x6c(%ebp),%eax
820019de:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
820019e4:	89 45 94             	mov    %eax,-0x6c(%ebp)
820019e7:	0f b6 03             	movzbl (%ebx),%eax
820019ea:	84 c0                	test   %al,%al
820019ec:	0f 84 54 02 00 00    	je     82001c46 <_vfiprintf_r+0x331>
820019f2:	83 c3 01             	add    $0x1,%ebx
820019f5:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
820019fc:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
82001a03:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
82001a0a:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
82001a11:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
82001a15:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
82001a1c:	c7 45 dc 84 48 00 82 	movl   $0x82004884,-0x24(%ebp)
82001a23:	eb 1b                	jmp    82001a40 <_vfiprintf_r+0x12b>
82001a25:	8b 55 80             	mov    -0x80(%ebp),%edx
82001a28:	89 f0                	mov    %esi,%eax
82001a2a:	2b 45 dc             	sub    -0x24(%ebp),%eax
82001a2d:	be 01 00 00 00       	mov    $0x1,%esi
82001a32:	89 c1                	mov    %eax,%ecx
82001a34:	d3 e6                	shl    %cl,%esi
82001a36:	89 f0                	mov    %esi,%eax
82001a38:	09 d0                	or     %edx,%eax
82001a3a:	89 45 80             	mov    %eax,-0x80(%ebp)
82001a3d:	83 c3 01             	add    $0x1,%ebx
82001a40:	0f b6 03             	movzbl (%ebx),%eax
82001a43:	0f be c0             	movsbl %al,%eax
82001a46:	83 ec 04             	sub    $0x4,%esp
82001a49:	6a 05                	push   $0x5
82001a4b:	50                   	push   %eax
82001a4c:	ff 75 dc             	push   -0x24(%ebp)
82001a4f:	e8 cc 1c 00 00       	call   82003720 <memchr>
82001a54:	83 c4 10             	add    $0x10,%esp
82001a57:	89 c6                	mov    %eax,%esi
82001a59:	85 f6                	test   %esi,%esi
82001a5b:	75 c8                	jne    82001a25 <_vfiprintf_r+0x110>
82001a5d:	8b 45 80             	mov    -0x80(%ebp),%eax
82001a60:	83 e0 10             	and    $0x10,%eax
82001a63:	85 c0                	test   %eax,%eax
82001a65:	74 04                	je     82001a6b <_vfiprintf_r+0x156>
82001a67:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
82001a6b:	8b 45 80             	mov    -0x80(%ebp),%eax
82001a6e:	83 e0 08             	and    $0x8,%eax
82001a71:	85 c0                	test   %eax,%eax
82001a73:	74 04                	je     82001a79 <_vfiprintf_r+0x164>
82001a75:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
82001a79:	0f b6 03             	movzbl (%ebx),%eax
82001a7c:	3c 2a                	cmp    $0x2a,%al
82001a7e:	75 50                	jne    82001ad0 <_vfiprintf_r+0x1bb>
82001a80:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82001a86:	8d 50 04             	lea    0x4(%eax),%edx
82001a89:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
82001a8f:	8b 00                	mov    (%eax),%eax
82001a91:	89 45 8c             	mov    %eax,-0x74(%ebp)
82001a94:	8b 45 8c             	mov    -0x74(%ebp),%eax
82001a97:	85 c0                	test   %eax,%eax
82001a99:	79 11                	jns    82001aac <_vfiprintf_r+0x197>
82001a9b:	8b 45 8c             	mov    -0x74(%ebp),%eax
82001a9e:	f7 d8                	neg    %eax
82001aa0:	89 45 8c             	mov    %eax,-0x74(%ebp)
82001aa3:	8b 45 80             	mov    -0x80(%ebp),%eax
82001aa6:	83 c8 02             	or     $0x2,%eax
82001aa9:	89 45 80             	mov    %eax,-0x80(%ebp)
82001aac:	83 c3 01             	add    $0x1,%ebx
82001aaf:	eb 2d                	jmp    82001ade <_vfiprintf_r+0x1c9>
82001ab1:	8b 55 8c             	mov    -0x74(%ebp),%edx
82001ab4:	89 d0                	mov    %edx,%eax
82001ab6:	c1 e0 02             	shl    $0x2,%eax
82001ab9:	01 d0                	add    %edx,%eax
82001abb:	01 c0                	add    %eax,%eax
82001abd:	89 c2                	mov    %eax,%edx
82001abf:	0f b6 03             	movzbl (%ebx),%eax
82001ac2:	0f be c0             	movsbl %al,%eax
82001ac5:	83 e8 30             	sub    $0x30,%eax
82001ac8:	01 d0                	add    %edx,%eax
82001aca:	89 45 8c             	mov    %eax,-0x74(%ebp)
82001acd:	83 c3 01             	add    $0x1,%ebx
82001ad0:	0f b6 03             	movzbl (%ebx),%eax
82001ad3:	0f be c0             	movsbl %al,%eax
82001ad6:	83 e8 30             	sub    $0x30,%eax
82001ad9:	83 f8 09             	cmp    $0x9,%eax
82001adc:	76 d3                	jbe    82001ab1 <_vfiprintf_r+0x19c>
82001ade:	0f b6 03             	movzbl (%ebx),%eax
82001ae1:	3c 2e                	cmp    $0x2e,%al
82001ae3:	75 67                	jne    82001b4c <_vfiprintf_r+0x237>
82001ae5:	83 c3 01             	add    $0x1,%ebx
82001ae8:	0f b6 03             	movzbl (%ebx),%eax
82001aeb:	3c 2a                	cmp    $0x2a,%al
82001aed:	75 27                	jne    82001b16 <_vfiprintf_r+0x201>
82001aef:	83 c3 01             	add    $0x1,%ebx
82001af2:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82001af8:	8d 50 04             	lea    0x4(%eax),%edx
82001afb:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
82001b01:	8b 00                	mov    (%eax),%eax
82001b03:	89 45 84             	mov    %eax,-0x7c(%ebp)
82001b06:	8b 45 84             	mov    -0x7c(%ebp),%eax
82001b09:	85 c0                	test   %eax,%eax
82001b0b:	79 3f                	jns    82001b4c <_vfiprintf_r+0x237>
82001b0d:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
82001b14:	eb 36                	jmp    82001b4c <_vfiprintf_r+0x237>
82001b16:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
82001b1d:	eb 1f                	jmp    82001b3e <_vfiprintf_r+0x229>
82001b1f:	8b 55 84             	mov    -0x7c(%ebp),%edx
82001b22:	89 d0                	mov    %edx,%eax
82001b24:	c1 e0 02             	shl    $0x2,%eax
82001b27:	01 d0                	add    %edx,%eax
82001b29:	01 c0                	add    %eax,%eax
82001b2b:	89 c2                	mov    %eax,%edx
82001b2d:	0f b6 03             	movzbl (%ebx),%eax
82001b30:	0f be c0             	movsbl %al,%eax
82001b33:	83 e8 30             	sub    $0x30,%eax
82001b36:	01 d0                	add    %edx,%eax
82001b38:	89 45 84             	mov    %eax,-0x7c(%ebp)
82001b3b:	83 c3 01             	add    $0x1,%ebx
82001b3e:	0f b6 03             	movzbl (%ebx),%eax
82001b41:	0f be c0             	movsbl %al,%eax
82001b44:	83 e8 30             	sub    $0x30,%eax
82001b47:	83 f8 09             	cmp    $0x9,%eax
82001b4a:	76 d3                	jbe    82001b1f <_vfiprintf_r+0x20a>
82001b4c:	c7 45 dc 8a 48 00 82 	movl   $0x8200488a,-0x24(%ebp)
82001b53:	0f b6 03             	movzbl (%ebx),%eax
82001b56:	0f be c0             	movsbl %al,%eax
82001b59:	83 ec 04             	sub    $0x4,%esp
82001b5c:	6a 03                	push   $0x3
82001b5e:	50                   	push   %eax
82001b5f:	ff 75 dc             	push   -0x24(%ebp)
82001b62:	e8 b9 1b 00 00       	call   82003720 <memchr>
82001b67:	83 c4 10             	add    $0x10,%esp
82001b6a:	89 c6                	mov    %eax,%esi
82001b6c:	85 f6                	test   %esi,%esi
82001b6e:	74 1b                	je     82001b8b <_vfiprintf_r+0x276>
82001b70:	8b 55 80             	mov    -0x80(%ebp),%edx
82001b73:	89 f0                	mov    %esi,%eax
82001b75:	2b 45 dc             	sub    -0x24(%ebp),%eax
82001b78:	be 40 00 00 00       	mov    $0x40,%esi
82001b7d:	89 c1                	mov    %eax,%ecx
82001b7f:	d3 e6                	shl    %cl,%esi
82001b81:	89 f0                	mov    %esi,%eax
82001b83:	09 d0                	or     %edx,%eax
82001b85:	89 45 80             	mov    %eax,-0x80(%ebp)
82001b88:	83 c3 01             	add    $0x1,%ebx
82001b8b:	89 d8                	mov    %ebx,%eax
82001b8d:	8d 58 01             	lea    0x1(%eax),%ebx
82001b90:	0f b6 00             	movzbl (%eax),%eax
82001b93:	88 45 98             	mov    %al,-0x68(%ebp)
82001b96:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
82001b9a:	0f be c0             	movsbl %al,%eax
82001b9d:	83 ec 04             	sub    $0x4,%esp
82001ba0:	6a 06                	push   $0x6
82001ba2:	50                   	push   %eax
82001ba3:	68 8e 48 00 82       	push   $0x8200488e
82001ba8:	e8 73 1b 00 00       	call   82003720 <memchr>
82001bad:	83 c4 10             	add    $0x10,%esp
82001bb0:	89 c6                	mov    %eax,%esi
82001bb2:	85 f6                	test   %esi,%esi
82001bb4:	74 5a                	je     82001c10 <_vfiprintf_r+0x2fb>
82001bb6:	b8 00 00 00 00       	mov    $0x0,%eax
82001bbb:	85 c0                	test   %eax,%eax
82001bbd:	75 2e                	jne    82001bed <_vfiprintf_r+0x2d8>
82001bbf:	8b 45 80             	mov    -0x80(%ebp),%eax
82001bc2:	25 00 01 00 00       	and    $0x100,%eax
82001bc7:	85 c0                	test   %eax,%eax
82001bc9:	74 11                	je     82001bdc <_vfiprintf_r+0x2c7>
82001bcb:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82001bd1:	83 c0 0c             	add    $0xc,%eax
82001bd4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
82001bda:	eb 55                	jmp    82001c31 <_vfiprintf_r+0x31c>
82001bdc:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
82001be2:	83 c0 08             	add    $0x8,%eax
82001be5:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
82001beb:	eb 44                	jmp    82001c31 <_vfiprintf_r+0x31c>
82001bed:	83 ec 0c             	sub    $0xc,%esp
82001bf0:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
82001bf6:	50                   	push   %eax
82001bf7:	ff 75 e4             	push   -0x1c(%ebp)
82001bfa:	ff 75 0c             	push   0xc(%ebp)
82001bfd:	8d 45 80             	lea    -0x80(%ebp),%eax
82001c00:	50                   	push   %eax
82001c01:	ff 75 08             	push   0x8(%ebp)
82001c04:	e8 f7 e3 ff 7d       	call   0 <_start-0x82000000>
82001c09:	83 c4 20             	add    $0x20,%esp
82001c0c:	89 c7                	mov    %eax,%edi
82001c0e:	eb 21                	jmp    82001c31 <_vfiprintf_r+0x31c>
82001c10:	83 ec 0c             	sub    $0xc,%esp
82001c13:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
82001c19:	50                   	push   %eax
82001c1a:	ff 75 e4             	push   -0x1c(%ebp)
82001c1d:	ff 75 0c             	push   0xc(%ebp)
82001c20:	8d 45 80             	lea    -0x80(%ebp),%eax
82001c23:	50                   	push   %eax
82001c24:	ff 75 08             	push   0x8(%ebp)
82001c27:	e8 da 01 00 00       	call   82001e06 <_printf_i>
82001c2c:	83 c4 20             	add    $0x20,%esp
82001c2f:	89 c7                	mov    %eax,%edi
82001c31:	83 ff ff             	cmp    $0xffffffff,%edi
82001c34:	74 13                	je     82001c49 <_vfiprintf_r+0x334>
82001c36:	8b 45 94             	mov    -0x6c(%ebp),%eax
82001c39:	01 f8                	add    %edi,%eax
82001c3b:	89 45 94             	mov    %eax,-0x6c(%ebp)
82001c3e:	e9 5c fd ff ff       	jmp    8200199f <_vfiprintf_r+0x8a>
82001c43:	90                   	nop
82001c44:	eb 04                	jmp    82001c4a <_vfiprintf_r+0x335>
82001c46:	90                   	nop
82001c47:	eb 01                	jmp    82001c4a <_vfiprintf_r+0x335>
82001c49:	90                   	nop
82001c4a:	8b 45 0c             	mov    0xc(%ebp),%eax
82001c4d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82001c51:	98                   	cwtl   
82001c52:	83 e0 40             	and    $0x40,%eax
82001c55:	85 c0                	test   %eax,%eax
82001c57:	75 05                	jne    82001c5e <_vfiprintf_r+0x349>
82001c59:	8b 45 94             	mov    -0x6c(%ebp),%eax
82001c5c:	eb 05                	jmp    82001c63 <_vfiprintf_r+0x34e>
82001c5e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82001c63:	8d 65 f4             	lea    -0xc(%ebp),%esp
82001c66:	5b                   	pop    %ebx
82001c67:	5e                   	pop    %esi
82001c68:	5f                   	pop    %edi
82001c69:	5d                   	pop    %ebp
82001c6a:	c3                   	ret    

82001c6b <_printf_common>:
82001c6b:	55                   	push   %ebp
82001c6c:	89 e5                	mov    %esp,%ebp
82001c6e:	83 ec 18             	sub    $0x18,%esp
82001c71:	8b 45 0c             	mov    0xc(%ebp),%eax
82001c74:	8b 50 10             	mov    0x10(%eax),%edx
82001c77:	8b 45 0c             	mov    0xc(%ebp),%eax
82001c7a:	8b 40 08             	mov    0x8(%eax),%eax
82001c7d:	39 c2                	cmp    %eax,%edx
82001c7f:	0f 4c d0             	cmovl  %eax,%edx
82001c82:	8b 45 10             	mov    0x10(%ebp),%eax
82001c85:	89 10                	mov    %edx,(%eax)
82001c87:	8b 45 0c             	mov    0xc(%ebp),%eax
82001c8a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
82001c8e:	84 c0                	test   %al,%al
82001c90:	74 0d                	je     82001c9f <_printf_common+0x34>
82001c92:	8b 45 10             	mov    0x10(%ebp),%eax
82001c95:	8b 00                	mov    (%eax),%eax
82001c97:	8d 50 01             	lea    0x1(%eax),%edx
82001c9a:	8b 45 10             	mov    0x10(%ebp),%eax
82001c9d:	89 10                	mov    %edx,(%eax)
82001c9f:	8b 45 0c             	mov    0xc(%ebp),%eax
82001ca2:	8b 00                	mov    (%eax),%eax
82001ca4:	83 e0 20             	and    $0x20,%eax
82001ca7:	85 c0                	test   %eax,%eax
82001ca9:	74 0d                	je     82001cb8 <_printf_common+0x4d>
82001cab:	8b 45 10             	mov    0x10(%ebp),%eax
82001cae:	8b 00                	mov    (%eax),%eax
82001cb0:	8d 50 02             	lea    0x2(%eax),%edx
82001cb3:	8b 45 10             	mov    0x10(%ebp),%eax
82001cb6:	89 10                	mov    %edx,(%eax)
82001cb8:	8b 45 0c             	mov    0xc(%ebp),%eax
82001cbb:	8b 00                	mov    (%eax),%eax
82001cbd:	83 e0 06             	and    $0x6,%eax
82001cc0:	85 c0                	test   %eax,%eax
82001cc2:	75 41                	jne    82001d05 <_printf_common+0x9a>
82001cc4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
82001ccb:	eb 24                	jmp    82001cf1 <_printf_common+0x86>
82001ccd:	8b 45 0c             	mov    0xc(%ebp),%eax
82001cd0:	83 c0 19             	add    $0x19,%eax
82001cd3:	6a 01                	push   $0x1
82001cd5:	50                   	push   %eax
82001cd6:	ff 75 14             	push   0x14(%ebp)
82001cd9:	ff 75 08             	push   0x8(%ebp)
82001cdc:	8b 45 18             	mov    0x18(%ebp),%eax
82001cdf:	ff d0                	call   *%eax
82001ce1:	83 c4 10             	add    $0x10,%esp
82001ce4:	83 f8 ff             	cmp    $0xffffffff,%eax
82001ce7:	0f 84 0b 01 00 00    	je     82001df8 <_printf_common+0x18d>
82001ced:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
82001cf1:	8b 45 0c             	mov    0xc(%ebp),%eax
82001cf4:	8b 50 0c             	mov    0xc(%eax),%edx
82001cf7:	8b 45 10             	mov    0x10(%ebp),%eax
82001cfa:	8b 08                	mov    (%eax),%ecx
82001cfc:	89 d0                	mov    %edx,%eax
82001cfe:	29 c8                	sub    %ecx,%eax
82001d00:	39 45 f0             	cmp    %eax,-0x10(%ebp)
82001d03:	7c c8                	jl     82001ccd <_printf_common+0x62>
82001d05:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82001d0c:	8b 45 0c             	mov    0xc(%ebp),%eax
82001d0f:	0f b6 40 43          	movzbl 0x43(%eax),%eax
82001d13:	84 c0                	test   %al,%al
82001d15:	74 04                	je     82001d1b <_printf_common+0xb0>
82001d17:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82001d1b:	8b 45 0c             	mov    0xc(%ebp),%eax
82001d1e:	8b 00                	mov    (%eax),%eax
82001d20:	83 e0 20             	and    $0x20,%eax
82001d23:	85 c0                	test   %eax,%eax
82001d25:	74 28                	je     82001d4f <_printf_common+0xe4>
82001d27:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001d2a:	8d 50 01             	lea    0x1(%eax),%edx
82001d2d:	89 55 f4             	mov    %edx,-0xc(%ebp)
82001d30:	8b 55 0c             	mov    0xc(%ebp),%edx
82001d33:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
82001d38:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001d3b:	8d 50 01             	lea    0x1(%eax),%edx
82001d3e:	89 55 f4             	mov    %edx,-0xc(%ebp)
82001d41:	8b 55 0c             	mov    0xc(%ebp),%edx
82001d44:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
82001d48:	8b 55 0c             	mov    0xc(%ebp),%edx
82001d4b:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
82001d4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001d52:	8b 55 0c             	mov    0xc(%ebp),%edx
82001d55:	83 c2 43             	add    $0x43,%edx
82001d58:	50                   	push   %eax
82001d59:	52                   	push   %edx
82001d5a:	ff 75 14             	push   0x14(%ebp)
82001d5d:	ff 75 08             	push   0x8(%ebp)
82001d60:	8b 45 18             	mov    0x18(%ebp),%eax
82001d63:	ff d0                	call   *%eax
82001d65:	83 c4 10             	add    $0x10,%esp
82001d68:	83 f8 ff             	cmp    $0xffffffff,%eax
82001d6b:	0f 84 8a 00 00 00    	je     82001dfb <_printf_common+0x190>
82001d71:	8b 45 0c             	mov    0xc(%ebp),%eax
82001d74:	8b 50 0c             	mov    0xc(%eax),%edx
82001d77:	8b 45 10             	mov    0x10(%ebp),%eax
82001d7a:	8b 08                	mov    (%eax),%ecx
82001d7c:	89 d0                	mov    %edx,%eax
82001d7e:	29 c8                	sub    %ecx,%eax
82001d80:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001d83:	8b 45 0c             	mov    0xc(%ebp),%eax
82001d86:	8b 00                	mov    (%eax),%eax
82001d88:	83 e0 06             	and    $0x6,%eax
82001d8b:	83 f8 04             	cmp    $0x4,%eax
82001d8e:	75 06                	jne    82001d96 <_printf_common+0x12b>
82001d90:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82001d94:	79 07                	jns    82001d9d <_printf_common+0x132>
82001d96:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82001d9d:	8b 45 0c             	mov    0xc(%ebp),%eax
82001da0:	8b 50 08             	mov    0x8(%eax),%edx
82001da3:	8b 45 0c             	mov    0xc(%ebp),%eax
82001da6:	8b 40 10             	mov    0x10(%eax),%eax
82001da9:	39 c2                	cmp    %eax,%edx
82001dab:	7e 13                	jle    82001dc0 <_printf_common+0x155>
82001dad:	8b 45 0c             	mov    0xc(%ebp),%eax
82001db0:	8b 50 08             	mov    0x8(%eax),%edx
82001db3:	8b 45 0c             	mov    0xc(%ebp),%eax
82001db6:	8b 48 10             	mov    0x10(%eax),%ecx
82001db9:	89 d0                	mov    %edx,%eax
82001dbb:	29 c8                	sub    %ecx,%eax
82001dbd:	01 45 f4             	add    %eax,-0xc(%ebp)
82001dc0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
82001dc7:	eb 20                	jmp    82001de9 <_printf_common+0x17e>
82001dc9:	8b 45 0c             	mov    0xc(%ebp),%eax
82001dcc:	83 c0 1a             	add    $0x1a,%eax
82001dcf:	6a 01                	push   $0x1
82001dd1:	50                   	push   %eax
82001dd2:	ff 75 14             	push   0x14(%ebp)
82001dd5:	ff 75 08             	push   0x8(%ebp)
82001dd8:	8b 45 18             	mov    0x18(%ebp),%eax
82001ddb:	ff d0                	call   *%eax
82001ddd:	83 c4 10             	add    $0x10,%esp
82001de0:	83 f8 ff             	cmp    $0xffffffff,%eax
82001de3:	74 19                	je     82001dfe <_printf_common+0x193>
82001de5:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
82001de9:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001dec:	3b 45 f4             	cmp    -0xc(%ebp),%eax
82001def:	7c d8                	jl     82001dc9 <_printf_common+0x15e>
82001df1:	b8 00 00 00 00       	mov    $0x0,%eax
82001df6:	eb 0c                	jmp    82001e04 <_printf_common+0x199>
82001df8:	90                   	nop
82001df9:	eb 04                	jmp    82001dff <_printf_common+0x194>
82001dfb:	90                   	nop
82001dfc:	eb 01                	jmp    82001dff <_printf_common+0x194>
82001dfe:	90                   	nop
82001dff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82001e04:	c9                   	leave  
82001e05:	c3                   	ret    

82001e06 <_printf_i>:
82001e06:	55                   	push   %ebp
82001e07:	89 e5                	mov    %esp,%ebp
82001e09:	53                   	push   %ebx
82001e0a:	83 ec 24             	sub    $0x24,%esp
82001e0d:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e10:	83 c0 1b             	add    $0x1b,%eax
82001e13:	83 c0 28             	add    $0x28,%eax
82001e16:	89 45 ec             	mov    %eax,-0x14(%ebp)
82001e19:	c7 45 e8 98 48 00 82 	movl   $0x82004898,-0x18(%ebp)
82001e20:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e23:	0f b6 40 18          	movzbl 0x18(%eax),%eax
82001e27:	0f be c0             	movsbl %al,%eax
82001e2a:	85 c0                	test   %eax,%eax
82001e2c:	0f 84 00 03 00 00    	je     82002132 <_printf_i+0x32c>
82001e32:	85 c0                	test   %eax,%eax
82001e34:	0f 88 52 03 00 00    	js     8200218c <_printf_i+0x386>
82001e3a:	83 f8 78             	cmp    $0x78,%eax
82001e3d:	0f 8f 49 03 00 00    	jg     8200218c <_printf_i+0x386>
82001e43:	83 f8 58             	cmp    $0x58,%eax
82001e46:	0f 8c 40 03 00 00    	jl     8200218c <_printf_i+0x386>
82001e4c:	83 e8 58             	sub    $0x58,%eax
82001e4f:	83 f8 20             	cmp    $0x20,%eax
82001e52:	0f 87 34 03 00 00    	ja     8200218c <_printf_i+0x386>
82001e58:	8b 04 85 bc 48 00 82 	mov    -0x7dffb744(,%eax,4),%eax
82001e5f:	ff e0                	jmp    *%eax
82001e61:	8b 45 18             	mov    0x18(%ebp),%eax
82001e64:	8b 00                	mov    (%eax),%eax
82001e66:	8d 48 04             	lea    0x4(%eax),%ecx
82001e69:	8b 55 18             	mov    0x18(%ebp),%edx
82001e6c:	89 0a                	mov    %ecx,(%edx)
82001e6e:	8b 00                	mov    (%eax),%eax
82001e70:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
82001e74:	89 c2                	mov    %eax,%edx
82001e76:	8b 45 ec             	mov    -0x14(%ebp),%eax
82001e79:	88 10                	mov    %dl,(%eax)
82001e7b:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e7e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
82001e85:	e9 1c 03 00 00       	jmp    820021a6 <_printf_i+0x3a0>
82001e8a:	8b 45 0c             	mov    0xc(%ebp),%eax
82001e8d:	8b 00                	mov    (%eax),%eax
82001e8f:	25 80 00 00 00       	and    $0x80,%eax
82001e94:	85 c0                	test   %eax,%eax
82001e96:	74 11                	je     82001ea9 <_printf_i+0xa3>
82001e98:	8b 45 18             	mov    0x18(%ebp),%eax
82001e9b:	8b 00                	mov    (%eax),%eax
82001e9d:	8d 48 04             	lea    0x4(%eax),%ecx
82001ea0:	8b 55 18             	mov    0x18(%ebp),%edx
82001ea3:	89 0a                	mov    %ecx,(%edx)
82001ea5:	8b 00                	mov    (%eax),%eax
82001ea7:	eb 2d                	jmp    82001ed6 <_printf_i+0xd0>
82001ea9:	8b 45 0c             	mov    0xc(%ebp),%eax
82001eac:	8b 00                	mov    (%eax),%eax
82001eae:	83 e0 40             	and    $0x40,%eax
82001eb1:	85 c0                	test   %eax,%eax
82001eb3:	74 12                	je     82001ec7 <_printf_i+0xc1>
82001eb5:	8b 45 18             	mov    0x18(%ebp),%eax
82001eb8:	8b 00                	mov    (%eax),%eax
82001eba:	8d 48 04             	lea    0x4(%eax),%ecx
82001ebd:	8b 55 18             	mov    0x18(%ebp),%edx
82001ec0:	89 0a                	mov    %ecx,(%edx)
82001ec2:	8b 00                	mov    (%eax),%eax
82001ec4:	98                   	cwtl   
82001ec5:	eb 0f                	jmp    82001ed6 <_printf_i+0xd0>
82001ec7:	8b 45 18             	mov    0x18(%ebp),%eax
82001eca:	8b 00                	mov    (%eax),%eax
82001ecc:	8d 48 04             	lea    0x4(%eax),%ecx
82001ecf:	8b 55 18             	mov    0x18(%ebp),%edx
82001ed2:	89 0a                	mov    %ecx,(%edx)
82001ed4:	8b 00                	mov    (%eax),%eax
82001ed6:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001ed9:	8b 45 f4             	mov    -0xc(%ebp),%eax
82001edc:	85 c0                	test   %eax,%eax
82001ede:	79 0a                	jns    82001eea <_printf_i+0xe4>
82001ee0:	f7 5d f4             	negl   -0xc(%ebp)
82001ee3:	8b 45 0c             	mov    0xc(%ebp),%eax
82001ee6:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
82001eea:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
82001ef1:	e9 28 01 00 00       	jmp    8200201e <_printf_i+0x218>
82001ef6:	8b 45 0c             	mov    0xc(%ebp),%eax
82001ef9:	8b 00                	mov    (%eax),%eax
82001efb:	25 80 00 00 00       	and    $0x80,%eax
82001f00:	85 c0                	test   %eax,%eax
82001f02:	74 11                	je     82001f15 <_printf_i+0x10f>
82001f04:	8b 45 18             	mov    0x18(%ebp),%eax
82001f07:	8b 00                	mov    (%eax),%eax
82001f09:	8d 48 04             	lea    0x4(%eax),%ecx
82001f0c:	8b 55 18             	mov    0x18(%ebp),%edx
82001f0f:	89 0a                	mov    %ecx,(%edx)
82001f11:	8b 00                	mov    (%eax),%eax
82001f13:	eb 2f                	jmp    82001f44 <_printf_i+0x13e>
82001f15:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f18:	8b 00                	mov    (%eax),%eax
82001f1a:	83 e0 40             	and    $0x40,%eax
82001f1d:	85 c0                	test   %eax,%eax
82001f1f:	74 14                	je     82001f35 <_printf_i+0x12f>
82001f21:	8b 45 18             	mov    0x18(%ebp),%eax
82001f24:	8b 00                	mov    (%eax),%eax
82001f26:	8d 48 04             	lea    0x4(%eax),%ecx
82001f29:	8b 55 18             	mov    0x18(%ebp),%edx
82001f2c:	89 0a                	mov    %ecx,(%edx)
82001f2e:	8b 00                	mov    (%eax),%eax
82001f30:	0f b7 c0             	movzwl %ax,%eax
82001f33:	eb 0f                	jmp    82001f44 <_printf_i+0x13e>
82001f35:	8b 45 18             	mov    0x18(%ebp),%eax
82001f38:	8b 00                	mov    (%eax),%eax
82001f3a:	8d 48 04             	lea    0x4(%eax),%ecx
82001f3d:	8b 55 18             	mov    0x18(%ebp),%edx
82001f40:	89 0a                	mov    %ecx,(%edx)
82001f42:	8b 00                	mov    (%eax),%eax
82001f44:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001f47:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f4a:	0f b6 40 18          	movzbl 0x18(%eax),%eax
82001f4e:	3c 6f                	cmp    $0x6f,%al
82001f50:	75 07                	jne    82001f59 <_printf_i+0x153>
82001f52:	b8 08 00 00 00       	mov    $0x8,%eax
82001f57:	eb 05                	jmp    82001f5e <_printf_i+0x158>
82001f59:	b8 0a 00 00 00       	mov    $0xa,%eax
82001f5e:	89 45 f0             	mov    %eax,-0x10(%ebp)
82001f61:	e9 b1 00 00 00       	jmp    82002017 <_printf_i+0x211>
82001f66:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f69:	c6 40 45 58          	movb   $0x58,0x45(%eax)
82001f6d:	eb 1d                	jmp    82001f8c <_printf_i+0x186>
82001f6f:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f72:	8b 00                	mov    (%eax),%eax
82001f74:	83 c8 20             	or     $0x20,%eax
82001f77:	89 c2                	mov    %eax,%edx
82001f79:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f7c:	89 10                	mov    %edx,(%eax)
82001f7e:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f81:	c6 40 45 78          	movb   $0x78,0x45(%eax)
82001f85:	c7 45 e8 a9 48 00 82 	movl   $0x820048a9,-0x18(%ebp)
82001f8c:	8b 45 0c             	mov    0xc(%ebp),%eax
82001f8f:	8b 00                	mov    (%eax),%eax
82001f91:	25 80 00 00 00       	and    $0x80,%eax
82001f96:	85 c0                	test   %eax,%eax
82001f98:	74 11                	je     82001fab <_printf_i+0x1a5>
82001f9a:	8b 45 18             	mov    0x18(%ebp),%eax
82001f9d:	8b 00                	mov    (%eax),%eax
82001f9f:	8d 48 04             	lea    0x4(%eax),%ecx
82001fa2:	8b 55 18             	mov    0x18(%ebp),%edx
82001fa5:	89 0a                	mov    %ecx,(%edx)
82001fa7:	8b 00                	mov    (%eax),%eax
82001fa9:	eb 2f                	jmp    82001fda <_printf_i+0x1d4>
82001fab:	8b 45 0c             	mov    0xc(%ebp),%eax
82001fae:	8b 00                	mov    (%eax),%eax
82001fb0:	83 e0 40             	and    $0x40,%eax
82001fb3:	85 c0                	test   %eax,%eax
82001fb5:	74 14                	je     82001fcb <_printf_i+0x1c5>
82001fb7:	8b 45 18             	mov    0x18(%ebp),%eax
82001fba:	8b 00                	mov    (%eax),%eax
82001fbc:	8d 48 04             	lea    0x4(%eax),%ecx
82001fbf:	8b 55 18             	mov    0x18(%ebp),%edx
82001fc2:	89 0a                	mov    %ecx,(%edx)
82001fc4:	8b 00                	mov    (%eax),%eax
82001fc6:	0f b7 c0             	movzwl %ax,%eax
82001fc9:	eb 0f                	jmp    82001fda <_printf_i+0x1d4>
82001fcb:	8b 45 18             	mov    0x18(%ebp),%eax
82001fce:	8b 00                	mov    (%eax),%eax
82001fd0:	8d 48 04             	lea    0x4(%eax),%ecx
82001fd3:	8b 55 18             	mov    0x18(%ebp),%edx
82001fd6:	89 0a                	mov    %ecx,(%edx)
82001fd8:	8b 00                	mov    (%eax),%eax
82001fda:	89 45 f4             	mov    %eax,-0xc(%ebp)
82001fdd:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
82001fe4:	8b 45 0c             	mov    0xc(%ebp),%eax
82001fe7:	8b 00                	mov    (%eax),%eax
82001fe9:	83 e0 01             	and    $0x1,%eax
82001fec:	85 c0                	test   %eax,%eax
82001fee:	74 0f                	je     82001fff <_printf_i+0x1f9>
82001ff0:	8b 45 0c             	mov    0xc(%ebp),%eax
82001ff3:	8b 00                	mov    (%eax),%eax
82001ff5:	83 c8 20             	or     $0x20,%eax
82001ff8:	89 c2                	mov    %eax,%edx
82001ffa:	8b 45 0c             	mov    0xc(%ebp),%eax
82001ffd:	89 10                	mov    %edx,(%eax)
82001fff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002003:	75 11                	jne    82002016 <_printf_i+0x210>
82002005:	8b 45 0c             	mov    0xc(%ebp),%eax
82002008:	8b 00                	mov    (%eax),%eax
8200200a:	83 e0 df             	and    $0xffffffdf,%eax
8200200d:	89 c2                	mov    %eax,%edx
8200200f:	8b 45 0c             	mov    0xc(%ebp),%eax
82002012:	89 10                	mov    %edx,(%eax)
82002014:	eb 01                	jmp    82002017 <_printf_i+0x211>
82002016:	90                   	nop
82002017:	8b 45 0c             	mov    0xc(%ebp),%eax
8200201a:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8200201e:	8b 45 0c             	mov    0xc(%ebp),%eax
82002021:	8b 50 04             	mov    0x4(%eax),%edx
82002024:	8b 45 0c             	mov    0xc(%ebp),%eax
82002027:	89 50 08             	mov    %edx,0x8(%eax)
8200202a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200202d:	8b 40 08             	mov    0x8(%eax),%eax
82002030:	85 c0                	test   %eax,%eax
82002032:	78 0f                	js     82002043 <_printf_i+0x23d>
82002034:	8b 45 0c             	mov    0xc(%ebp),%eax
82002037:	8b 00                	mov    (%eax),%eax
82002039:	83 e0 fb             	and    $0xfffffffb,%eax
8200203c:	89 c2                	mov    %eax,%edx
8200203e:	8b 45 0c             	mov    0xc(%ebp),%eax
82002041:	89 10                	mov    %edx,(%eax)
82002043:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002047:	75 0a                	jne    82002053 <_printf_i+0x24d>
82002049:	8b 45 0c             	mov    0xc(%ebp),%eax
8200204c:	8b 40 04             	mov    0x4(%eax),%eax
8200204f:	85 c0                	test   %eax,%eax
82002051:	74 34                	je     82002087 <_printf_i+0x281>
82002053:	8b 4d f0             	mov    -0x10(%ebp),%ecx
82002056:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002059:	ba 00 00 00 00       	mov    $0x0,%edx
8200205e:	f7 f1                	div    %ecx
82002060:	8b 45 e8             	mov    -0x18(%ebp),%eax
82002063:	01 d0                	add    %edx,%eax
82002065:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
82002069:	0f b6 10             	movzbl (%eax),%edx
8200206c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200206f:	88 10                	mov    %dl,(%eax)
82002071:	8b 5d f0             	mov    -0x10(%ebp),%ebx
82002074:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002077:	ba 00 00 00 00       	mov    $0x0,%edx
8200207c:	f7 f3                	div    %ebx
8200207e:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002081:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002085:	75 cc                	jne    82002053 <_printf_i+0x24d>
82002087:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
8200208b:	75 26                	jne    820020b3 <_printf_i+0x2ad>
8200208d:	8b 45 0c             	mov    0xc(%ebp),%eax
82002090:	8b 00                	mov    (%eax),%eax
82002092:	83 e0 01             	and    $0x1,%eax
82002095:	85 c0                	test   %eax,%eax
82002097:	74 1a                	je     820020b3 <_printf_i+0x2ad>
82002099:	8b 45 0c             	mov    0xc(%ebp),%eax
8200209c:	8b 50 04             	mov    0x4(%eax),%edx
8200209f:	8b 45 0c             	mov    0xc(%ebp),%eax
820020a2:	8b 40 10             	mov    0x10(%eax),%eax
820020a5:	39 c2                	cmp    %eax,%edx
820020a7:	7f 0a                	jg     820020b3 <_printf_i+0x2ad>
820020a9:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
820020ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
820020b0:	c6 00 30             	movb   $0x30,(%eax)
820020b3:	8b 45 0c             	mov    0xc(%ebp),%eax
820020b6:	83 c0 1b             	add    $0x1b,%eax
820020b9:	83 c0 28             	add    $0x28,%eax
820020bc:	2b 45 ec             	sub    -0x14(%ebp),%eax
820020bf:	89 c2                	mov    %eax,%edx
820020c1:	8b 45 0c             	mov    0xc(%ebp),%eax
820020c4:	89 50 10             	mov    %edx,0x10(%eax)
820020c7:	e9 e2 00 00 00       	jmp    820021ae <_printf_i+0x3a8>
820020cc:	8b 45 0c             	mov    0xc(%ebp),%eax
820020cf:	8b 00                	mov    (%eax),%eax
820020d1:	25 80 00 00 00       	and    $0x80,%eax
820020d6:	85 c0                	test   %eax,%eax
820020d8:	74 19                	je     820020f3 <_printf_i+0x2ed>
820020da:	8b 45 18             	mov    0x18(%ebp),%eax
820020dd:	8b 00                	mov    (%eax),%eax
820020df:	8d 48 04             	lea    0x4(%eax),%ecx
820020e2:	8b 55 18             	mov    0x18(%ebp),%edx
820020e5:	89 0a                	mov    %ecx,(%edx)
820020e7:	8b 00                	mov    (%eax),%eax
820020e9:	8b 55 0c             	mov    0xc(%ebp),%edx
820020ec:	8b 52 14             	mov    0x14(%edx),%edx
820020ef:	89 10                	mov    %edx,(%eax)
820020f1:	eb 3f                	jmp    82002132 <_printf_i+0x32c>
820020f3:	8b 45 0c             	mov    0xc(%ebp),%eax
820020f6:	8b 00                	mov    (%eax),%eax
820020f8:	83 e0 40             	and    $0x40,%eax
820020fb:	85 c0                	test   %eax,%eax
820020fd:	74 1c                	je     8200211b <_printf_i+0x315>
820020ff:	8b 45 0c             	mov    0xc(%ebp),%eax
82002102:	8b 58 14             	mov    0x14(%eax),%ebx
82002105:	8b 45 18             	mov    0x18(%ebp),%eax
82002108:	8b 00                	mov    (%eax),%eax
8200210a:	8d 48 04             	lea    0x4(%eax),%ecx
8200210d:	8b 55 18             	mov    0x18(%ebp),%edx
82002110:	89 0a                	mov    %ecx,(%edx)
82002112:	8b 00                	mov    (%eax),%eax
82002114:	89 da                	mov    %ebx,%edx
82002116:	66 89 10             	mov    %dx,(%eax)
82002119:	eb 17                	jmp    82002132 <_printf_i+0x32c>
8200211b:	8b 45 18             	mov    0x18(%ebp),%eax
8200211e:	8b 00                	mov    (%eax),%eax
82002120:	8d 48 04             	lea    0x4(%eax),%ecx
82002123:	8b 55 18             	mov    0x18(%ebp),%edx
82002126:	89 0a                	mov    %ecx,(%edx)
82002128:	8b 00                	mov    (%eax),%eax
8200212a:	8b 55 0c             	mov    0xc(%ebp),%edx
8200212d:	8b 52 14             	mov    0x14(%edx),%edx
82002130:	89 10                	mov    %edx,(%eax)
82002132:	8b 45 0c             	mov    0xc(%ebp),%eax
82002135:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8200213c:	eb 70                	jmp    820021ae <_printf_i+0x3a8>
8200213e:	8b 45 18             	mov    0x18(%ebp),%eax
82002141:	8b 00                	mov    (%eax),%eax
82002143:	8d 48 04             	lea    0x4(%eax),%ecx
82002146:	8b 55 18             	mov    0x18(%ebp),%edx
82002149:	89 0a                	mov    %ecx,(%edx)
8200214b:	8b 00                	mov    (%eax),%eax
8200214d:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002150:	8b 45 0c             	mov    0xc(%ebp),%eax
82002153:	8b 40 04             	mov    0x4(%eax),%eax
82002156:	83 ec 04             	sub    $0x4,%esp
82002159:	50                   	push   %eax
8200215a:	6a 00                	push   $0x0
8200215c:	ff 75 ec             	push   -0x14(%ebp)
8200215f:	e8 bc 15 00 00       	call   82003720 <memchr>
82002164:	83 c4 10             	add    $0x10,%esp
82002167:	89 45 e0             	mov    %eax,-0x20(%ebp)
8200216a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8200216e:	74 0e                	je     8200217e <_printf_i+0x378>
82002170:	8b 45 e0             	mov    -0x20(%ebp),%eax
82002173:	2b 45 ec             	sub    -0x14(%ebp),%eax
82002176:	89 c2                	mov    %eax,%edx
82002178:	8b 45 0c             	mov    0xc(%ebp),%eax
8200217b:	89 50 04             	mov    %edx,0x4(%eax)
8200217e:	8b 45 0c             	mov    0xc(%ebp),%eax
82002181:	8b 50 04             	mov    0x4(%eax),%edx
82002184:	8b 45 0c             	mov    0xc(%ebp),%eax
82002187:	89 50 10             	mov    %edx,0x10(%eax)
8200218a:	eb 1a                	jmp    820021a6 <_printf_i+0x3a0>
8200218c:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
82002190:	8b 45 0c             	mov    0xc(%ebp),%eax
82002193:	0f b6 50 18          	movzbl 0x18(%eax),%edx
82002197:	8b 45 ec             	mov    -0x14(%ebp),%eax
8200219a:	88 10                	mov    %dl,(%eax)
8200219c:	8b 45 0c             	mov    0xc(%ebp),%eax
8200219f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
820021a6:	8b 45 0c             	mov    0xc(%ebp),%eax
820021a9:	c6 40 43 00          	movb   $0x0,0x43(%eax)
820021ad:	90                   	nop
820021ae:	83 ec 0c             	sub    $0xc,%esp
820021b1:	ff 75 14             	push   0x14(%ebp)
820021b4:	ff 75 10             	push   0x10(%ebp)
820021b7:	8d 45 d8             	lea    -0x28(%ebp),%eax
820021ba:	50                   	push   %eax
820021bb:	ff 75 0c             	push   0xc(%ebp)
820021be:	ff 75 08             	push   0x8(%ebp)
820021c1:	e8 a5 fa ff ff       	call   82001c6b <_printf_common>
820021c6:	83 c4 20             	add    $0x20,%esp
820021c9:	89 45 dc             	mov    %eax,-0x24(%ebp)
820021cc:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
820021d0:	74 72                	je     82002244 <_printf_i+0x43e>
820021d2:	8b 45 0c             	mov    0xc(%ebp),%eax
820021d5:	8b 40 10             	mov    0x10(%eax),%eax
820021d8:	50                   	push   %eax
820021d9:	ff 75 ec             	push   -0x14(%ebp)
820021dc:	ff 75 10             	push   0x10(%ebp)
820021df:	ff 75 08             	push   0x8(%ebp)
820021e2:	8b 45 14             	mov    0x14(%ebp),%eax
820021e5:	ff d0                	call   *%eax
820021e7:	83 c4 10             	add    $0x10,%esp
820021ea:	83 f8 ff             	cmp    $0xffffffff,%eax
820021ed:	74 58                	je     82002247 <_printf_i+0x441>
820021ef:	8b 45 0c             	mov    0xc(%ebp),%eax
820021f2:	8b 00                	mov    (%eax),%eax
820021f4:	83 e0 02             	and    $0x2,%eax
820021f7:	85 c0                	test   %eax,%eax
820021f9:	74 39                	je     82002234 <_printf_i+0x42e>
820021fb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82002202:	eb 20                	jmp    82002224 <_printf_i+0x41e>
82002204:	8b 45 0c             	mov    0xc(%ebp),%eax
82002207:	83 c0 19             	add    $0x19,%eax
8200220a:	6a 01                	push   $0x1
8200220c:	50                   	push   %eax
8200220d:	ff 75 10             	push   0x10(%ebp)
82002210:	ff 75 08             	push   0x8(%ebp)
82002213:	8b 45 14             	mov    0x14(%ebp),%eax
82002216:	ff d0                	call   *%eax
82002218:	83 c4 10             	add    $0x10,%esp
8200221b:	83 f8 ff             	cmp    $0xffffffff,%eax
8200221e:	74 2a                	je     8200224a <_printf_i+0x444>
82002220:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
82002224:	8b 45 0c             	mov    0xc(%ebp),%eax
82002227:	8b 40 0c             	mov    0xc(%eax),%eax
8200222a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8200222d:	29 d0                	sub    %edx,%eax
8200222f:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
82002232:	7c d0                	jl     82002204 <_printf_i+0x3fe>
82002234:	8b 45 0c             	mov    0xc(%ebp),%eax
82002237:	8b 50 0c             	mov    0xc(%eax),%edx
8200223a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200223d:	39 c2                	cmp    %eax,%edx
8200223f:	0f 4d c2             	cmovge %edx,%eax
82002242:	eb 0c                	jmp    82002250 <_printf_i+0x44a>
82002244:	90                   	nop
82002245:	eb 04                	jmp    8200224b <_printf_i+0x445>
82002247:	90                   	nop
82002248:	eb 01                	jmp    8200224b <_printf_i+0x445>
8200224a:	90                   	nop
8200224b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002250:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82002253:	c9                   	leave  
82002254:	c3                   	ret    

82002255 <cleanup_glue>:
82002255:	55                   	push   %ebp
82002256:	89 e5                	mov    %esp,%ebp
82002258:	83 ec 08             	sub    $0x8,%esp
8200225b:	8b 45 0c             	mov    0xc(%ebp),%eax
8200225e:	8b 00                	mov    (%eax),%eax
82002260:	85 c0                	test   %eax,%eax
82002262:	74 14                	je     82002278 <cleanup_glue+0x23>
82002264:	8b 45 0c             	mov    0xc(%ebp),%eax
82002267:	8b 00                	mov    (%eax),%eax
82002269:	83 ec 08             	sub    $0x8,%esp
8200226c:	50                   	push   %eax
8200226d:	ff 75 08             	push   0x8(%ebp)
82002270:	e8 e0 ff ff ff       	call   82002255 <cleanup_glue>
82002275:	83 c4 10             	add    $0x10,%esp
82002278:	83 ec 08             	sub    $0x8,%esp
8200227b:	ff 75 0c             	push   0xc(%ebp)
8200227e:	ff 75 08             	push   0x8(%ebp)
82002281:	e8 44 ef ff ff       	call   820011ca <_free_r>
82002286:	83 c4 10             	add    $0x10,%esp
82002289:	90                   	nop
8200228a:	c9                   	leave  
8200228b:	c3                   	ret    

8200228c <_reclaim_reent>:
8200228c:	55                   	push   %ebp
8200228d:	89 e5                	mov    %esp,%ebp
8200228f:	83 ec 28             	sub    $0x28,%esp
82002292:	a1 24 50 00 82       	mov    0x82005024,%eax
82002297:	39 45 08             	cmp    %eax,0x8(%ebp)
8200229a:	0f 84 49 01 00 00    	je     820023e9 <_reclaim_reent+0x15d>
820022a0:	8b 45 08             	mov    0x8(%ebp),%eax
820022a3:	8b 40 4c             	mov    0x4c(%eax),%eax
820022a6:	85 c0                	test   %eax,%eax
820022a8:	74 64                	je     8200230e <_reclaim_reent+0x82>
820022aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
820022b1:	eb 3e                	jmp    820022f1 <_reclaim_reent+0x65>
820022b3:	8b 45 08             	mov    0x8(%ebp),%eax
820022b6:	8b 50 4c             	mov    0x4c(%eax),%edx
820022b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
820022bc:	c1 e0 02             	shl    $0x2,%eax
820022bf:	01 d0                	add    %edx,%eax
820022c1:	8b 00                	mov    (%eax),%eax
820022c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
820022c6:	eb 1f                	jmp    820022e7 <_reclaim_reent+0x5b>
820022c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
820022cb:	89 45 e8             	mov    %eax,-0x18(%ebp)
820022ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
820022d1:	8b 00                	mov    (%eax),%eax
820022d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
820022d6:	83 ec 08             	sub    $0x8,%esp
820022d9:	ff 75 e8             	push   -0x18(%ebp)
820022dc:	ff 75 08             	push   0x8(%ebp)
820022df:	e8 e6 ee ff ff       	call   820011ca <_free_r>
820022e4:	83 c4 10             	add    $0x10,%esp
820022e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
820022eb:	75 db                	jne    820022c8 <_reclaim_reent+0x3c>
820022ed:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
820022f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
820022f4:	83 f8 1f             	cmp    $0x1f,%eax
820022f7:	76 ba                	jbe    820022b3 <_reclaim_reent+0x27>
820022f9:	8b 45 08             	mov    0x8(%ebp),%eax
820022fc:	8b 40 4c             	mov    0x4c(%eax),%eax
820022ff:	83 ec 08             	sub    $0x8,%esp
82002302:	50                   	push   %eax
82002303:	ff 75 08             	push   0x8(%ebp)
82002306:	e8 bf ee ff ff       	call   820011ca <_free_r>
8200230b:	83 c4 10             	add    $0x10,%esp
8200230e:	8b 45 08             	mov    0x8(%ebp),%eax
82002311:	8b 40 40             	mov    0x40(%eax),%eax
82002314:	85 c0                	test   %eax,%eax
82002316:	74 15                	je     8200232d <_reclaim_reent+0xa1>
82002318:	8b 45 08             	mov    0x8(%ebp),%eax
8200231b:	8b 40 40             	mov    0x40(%eax),%eax
8200231e:	83 ec 08             	sub    $0x8,%esp
82002321:	50                   	push   %eax
82002322:	ff 75 08             	push   0x8(%ebp)
82002325:	e8 a0 ee ff ff       	call   820011ca <_free_r>
8200232a:	83 c4 10             	add    $0x10,%esp
8200232d:	8b 45 08             	mov    0x8(%ebp),%eax
82002330:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002336:	85 c0                	test   %eax,%eax
82002338:	74 50                	je     8200238a <_reclaim_reent+0xfe>
8200233a:	8b 45 08             	mov    0x8(%ebp),%eax
8200233d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002343:	8b 55 08             	mov    0x8(%ebp),%edx
82002346:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8200234c:	39 d0                	cmp    %edx,%eax
8200234e:	74 3a                	je     8200238a <_reclaim_reent+0xfe>
82002350:	8b 45 08             	mov    0x8(%ebp),%eax
82002353:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
82002359:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200235c:	eb 1f                	jmp    8200237d <_reclaim_reent+0xf1>
8200235e:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002361:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002364:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002367:	8b 00                	mov    (%eax),%eax
82002369:	89 45 ec             	mov    %eax,-0x14(%ebp)
8200236c:	83 ec 08             	sub    $0x8,%esp
8200236f:	ff 75 e4             	push   -0x1c(%ebp)
82002372:	ff 75 08             	push   0x8(%ebp)
82002375:	e8 50 ee ff ff       	call   820011ca <_free_r>
8200237a:	83 c4 10             	add    $0x10,%esp
8200237d:	8b 45 08             	mov    0x8(%ebp),%eax
82002380:	05 4c 01 00 00       	add    $0x14c,%eax
82002385:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82002388:	75 d4                	jne    8200235e <_reclaim_reent+0xd2>
8200238a:	8b 45 08             	mov    0x8(%ebp),%eax
8200238d:	8b 40 54             	mov    0x54(%eax),%eax
82002390:	85 c0                	test   %eax,%eax
82002392:	74 15                	je     820023a9 <_reclaim_reent+0x11d>
82002394:	8b 45 08             	mov    0x8(%ebp),%eax
82002397:	8b 40 54             	mov    0x54(%eax),%eax
8200239a:	83 ec 08             	sub    $0x8,%esp
8200239d:	50                   	push   %eax
8200239e:	ff 75 08             	push   0x8(%ebp)
820023a1:	e8 24 ee ff ff       	call   820011ca <_free_r>
820023a6:	83 c4 10             	add    $0x10,%esp
820023a9:	8b 45 08             	mov    0x8(%ebp),%eax
820023ac:	8b 40 38             	mov    0x38(%eax),%eax
820023af:	85 c0                	test   %eax,%eax
820023b1:	74 36                	je     820023e9 <_reclaim_reent+0x15d>
820023b3:	8b 45 08             	mov    0x8(%ebp),%eax
820023b6:	8b 40 3c             	mov    0x3c(%eax),%eax
820023b9:	83 ec 0c             	sub    $0xc,%esp
820023bc:	ff 75 08             	push   0x8(%ebp)
820023bf:	ff d0                	call   *%eax
820023c1:	83 c4 10             	add    $0x10,%esp
820023c4:	8b 45 08             	mov    0x8(%ebp),%eax
820023c7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
820023cd:	85 c0                	test   %eax,%eax
820023cf:	74 18                	je     820023e9 <_reclaim_reent+0x15d>
820023d1:	8b 45 08             	mov    0x8(%ebp),%eax
820023d4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
820023da:	83 ec 08             	sub    $0x8,%esp
820023dd:	50                   	push   %eax
820023de:	ff 75 08             	push   0x8(%ebp)
820023e1:	e8 6f fe ff ff       	call   82002255 <cleanup_glue>
820023e6:	83 c4 10             	add    $0x10,%esp
820023e9:	90                   	nop
820023ea:	c9                   	leave  
820023eb:	c3                   	ret    

820023ec <__swbuf_r>:
820023ec:	55                   	push   %ebp
820023ed:	89 e5                	mov    %esp,%ebp
820023ef:	57                   	push   %edi
820023f0:	56                   	push   %esi
820023f1:	53                   	push   %ebx
820023f2:	83 ec 1c             	sub    $0x1c,%esp
820023f5:	8b 7d 0c             	mov    0xc(%ebp),%edi
820023f8:	8b 5d 10             	mov    0x10(%ebp),%ebx
820023fb:	8b 45 08             	mov    0x8(%ebp),%eax
820023fe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002401:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82002405:	74 18                	je     8200241f <__swbuf_r+0x33>
82002407:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8200240a:	8b 40 38             	mov    0x38(%eax),%eax
8200240d:	85 c0                	test   %eax,%eax
8200240f:	75 0e                	jne    8200241f <__swbuf_r+0x33>
82002411:	83 ec 0c             	sub    $0xc,%esp
82002414:	ff 75 e4             	push   -0x1c(%ebp)
82002417:	e8 0a 08 00 00       	call   82002c26 <__sinit>
8200241c:	83 c4 10             	add    $0x10,%esp
8200241f:	8b 43 18             	mov    0x18(%ebx),%eax
82002422:	89 43 08             	mov    %eax,0x8(%ebx)
82002425:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002429:	98                   	cwtl   
8200242a:	83 e0 08             	and    $0x8,%eax
8200242d:	85 c0                	test   %eax,%eax
8200242f:	74 07                	je     82002438 <__swbuf_r+0x4c>
82002431:	8b 43 10             	mov    0x10(%ebx),%eax
82002434:	85 c0                	test   %eax,%eax
82002436:	75 1d                	jne    82002455 <__swbuf_r+0x69>
82002438:	83 ec 08             	sub    $0x8,%esp
8200243b:	53                   	push   %ebx
8200243c:	ff 75 08             	push   0x8(%ebp)
8200243f:	e8 db 00 00 00       	call   8200251f <__swsetup_r>
82002444:	83 c4 10             	add    $0x10,%esp
82002447:	85 c0                	test   %eax,%eax
82002449:	74 0a                	je     82002455 <__swbuf_r+0x69>
8200244b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002450:	e9 a1 00 00 00       	jmp    820024f6 <__swbuf_r+0x10a>
82002455:	89 f8                	mov    %edi,%eax
82002457:	0f b6 f8             	movzbl %al,%edi
8200245a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200245e:	98                   	cwtl   
8200245f:	25 00 20 00 00       	and    $0x2000,%eax
82002464:	85 c0                	test   %eax,%eax
82002466:	75 14                	jne    8200247c <__swbuf_r+0x90>
82002468:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200246c:	80 cc 20             	or     $0x20,%ah
8200246f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002473:	8b 43 64             	mov    0x64(%ebx),%eax
82002476:	80 e4 df             	and    $0xdf,%ah
82002479:	89 43 64             	mov    %eax,0x64(%ebx)
8200247c:	8b 03                	mov    (%ebx),%eax
8200247e:	8b 53 10             	mov    0x10(%ebx),%edx
82002481:	29 d0                	sub    %edx,%eax
82002483:	89 c6                	mov    %eax,%esi
82002485:	8b 43 14             	mov    0x14(%ebx),%eax
82002488:	39 c6                	cmp    %eax,%esi
8200248a:	7c 1f                	jl     820024ab <__swbuf_r+0xbf>
8200248c:	83 ec 08             	sub    $0x8,%esp
8200248f:	53                   	push   %ebx
82002490:	ff 75 08             	push   0x8(%ebp)
82002493:	e8 08 04 00 00       	call   820028a0 <_fflush_r>
82002498:	83 c4 10             	add    $0x10,%esp
8200249b:	85 c0                	test   %eax,%eax
8200249d:	74 07                	je     820024a6 <__swbuf_r+0xba>
8200249f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820024a4:	eb 50                	jmp    820024f6 <__swbuf_r+0x10a>
820024a6:	be 00 00 00 00       	mov    $0x0,%esi
820024ab:	8b 43 08             	mov    0x8(%ebx),%eax
820024ae:	83 e8 01             	sub    $0x1,%eax
820024b1:	89 43 08             	mov    %eax,0x8(%ebx)
820024b4:	8b 03                	mov    (%ebx),%eax
820024b6:	8d 50 01             	lea    0x1(%eax),%edx
820024b9:	89 13                	mov    %edx,(%ebx)
820024bb:	89 fa                	mov    %edi,%edx
820024bd:	88 10                	mov    %dl,(%eax)
820024bf:	83 c6 01             	add    $0x1,%esi
820024c2:	8b 43 14             	mov    0x14(%ebx),%eax
820024c5:	39 c6                	cmp    %eax,%esi
820024c7:	74 11                	je     820024da <__swbuf_r+0xee>
820024c9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820024cd:	98                   	cwtl   
820024ce:	83 e0 01             	and    $0x1,%eax
820024d1:	85 c0                	test   %eax,%eax
820024d3:	74 1f                	je     820024f4 <__swbuf_r+0x108>
820024d5:	83 ff 0a             	cmp    $0xa,%edi
820024d8:	75 1a                	jne    820024f4 <__swbuf_r+0x108>
820024da:	83 ec 08             	sub    $0x8,%esp
820024dd:	53                   	push   %ebx
820024de:	ff 75 08             	push   0x8(%ebp)
820024e1:	e8 ba 03 00 00       	call   820028a0 <_fflush_r>
820024e6:	83 c4 10             	add    $0x10,%esp
820024e9:	85 c0                	test   %eax,%eax
820024eb:	74 07                	je     820024f4 <__swbuf_r+0x108>
820024ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820024f2:	eb 02                	jmp    820024f6 <__swbuf_r+0x10a>
820024f4:	89 f8                	mov    %edi,%eax
820024f6:	8d 65 f4             	lea    -0xc(%ebp),%esp
820024f9:	5b                   	pop    %ebx
820024fa:	5e                   	pop    %esi
820024fb:	5f                   	pop    %edi
820024fc:	5d                   	pop    %ebp
820024fd:	c3                   	ret    

820024fe <__swbuf>:
820024fe:	55                   	push   %ebp
820024ff:	89 e5                	mov    %esp,%ebp
82002501:	83 ec 08             	sub    $0x8,%esp
82002504:	8b 55 08             	mov    0x8(%ebp),%edx
82002507:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8200250a:	a1 24 50 00 82       	mov    0x82005024,%eax
8200250f:	83 ec 04             	sub    $0x4,%esp
82002512:	51                   	push   %ecx
82002513:	52                   	push   %edx
82002514:	50                   	push   %eax
82002515:	e8 d2 fe ff ff       	call   820023ec <__swbuf_r>
8200251a:	83 c4 10             	add    $0x10,%esp
8200251d:	c9                   	leave  
8200251e:	c3                   	ret    

8200251f <__swsetup_r>:
8200251f:	55                   	push   %ebp
82002520:	89 e5                	mov    %esp,%ebp
82002522:	53                   	push   %ebx
82002523:	83 ec 14             	sub    $0x14,%esp
82002526:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82002529:	a1 24 50 00 82       	mov    0x82005024,%eax
8200252e:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002531:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002535:	74 18                	je     8200254f <__swsetup_r+0x30>
82002537:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200253a:	8b 40 38             	mov    0x38(%eax),%eax
8200253d:	85 c0                	test   %eax,%eax
8200253f:	75 0e                	jne    8200254f <__swsetup_r+0x30>
82002541:	83 ec 0c             	sub    $0xc,%esp
82002544:	ff 75 f4             	push   -0xc(%ebp)
82002547:	e8 da 06 00 00       	call   82002c26 <__sinit>
8200254c:	83 c4 10             	add    $0x10,%esp
8200254f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002553:	98                   	cwtl   
82002554:	83 e0 08             	and    $0x8,%eax
82002557:	85 c0                	test   %eax,%eax
82002559:	0f 85 82 00 00 00    	jne    820025e1 <__swsetup_r+0xc2>
8200255f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002563:	98                   	cwtl   
82002564:	83 e0 10             	and    $0x10,%eax
82002567:	85 c0                	test   %eax,%eax
82002569:	75 1e                	jne    82002589 <__swsetup_r+0x6a>
8200256b:	8b 45 08             	mov    0x8(%ebp),%eax
8200256e:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
82002574:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002578:	83 c8 40             	or     $0x40,%eax
8200257b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200257f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002584:	e9 ec 00 00 00       	jmp    82002675 <__swsetup_r+0x156>
82002589:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200258d:	98                   	cwtl   
8200258e:	83 e0 04             	and    $0x4,%eax
82002591:	85 c0                	test   %eax,%eax
82002593:	74 41                	je     820025d6 <__swsetup_r+0xb7>
82002595:	8b 43 30             	mov    0x30(%ebx),%eax
82002598:	85 c0                	test   %eax,%eax
8200259a:	74 23                	je     820025bf <__swsetup_r+0xa0>
8200259c:	8b 53 30             	mov    0x30(%ebx),%edx
8200259f:	8d 43 40             	lea    0x40(%ebx),%eax
820025a2:	39 c2                	cmp    %eax,%edx
820025a4:	74 12                	je     820025b8 <__swsetup_r+0x99>
820025a6:	8b 43 30             	mov    0x30(%ebx),%eax
820025a9:	83 ec 08             	sub    $0x8,%esp
820025ac:	50                   	push   %eax
820025ad:	ff 75 08             	push   0x8(%ebp)
820025b0:	e8 15 ec ff ff       	call   820011ca <_free_r>
820025b5:	83 c4 10             	add    $0x10,%esp
820025b8:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
820025bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820025c3:	83 e0 db             	and    $0xffffffdb,%eax
820025c6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820025ca:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
820025d1:	8b 43 10             	mov    0x10(%ebx),%eax
820025d4:	89 03                	mov    %eax,(%ebx)
820025d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820025da:	83 c8 08             	or     $0x8,%eax
820025dd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820025e1:	8b 43 10             	mov    0x10(%ebx),%eax
820025e4:	85 c0                	test   %eax,%eax
820025e6:	75 2b                	jne    82002613 <__swsetup_r+0xf4>
820025e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820025ec:	98                   	cwtl   
820025ed:	25 00 02 00 00       	and    $0x200,%eax
820025f2:	85 c0                	test   %eax,%eax
820025f4:	74 0e                	je     82002604 <__swsetup_r+0xe5>
820025f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820025fa:	98                   	cwtl   
820025fb:	25 80 00 00 00       	and    $0x80,%eax
82002600:	85 c0                	test   %eax,%eax
82002602:	74 0f                	je     82002613 <__swsetup_r+0xf4>
82002604:	83 ec 08             	sub    $0x8,%esp
82002607:	53                   	push   %ebx
82002608:	ff 75 08             	push   0x8(%ebp)
8200260b:	e8 ef 0e 00 00       	call   820034ff <__smakebuf_r>
82002610:	83 c4 10             	add    $0x10,%esp
82002613:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002617:	98                   	cwtl   
82002618:	83 e0 01             	and    $0x1,%eax
8200261b:	85 c0                	test   %eax,%eax
8200261d:	74 11                	je     82002630 <__swsetup_r+0x111>
8200261f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
82002626:	8b 43 14             	mov    0x14(%ebx),%eax
82002629:	f7 d8                	neg    %eax
8200262b:	89 43 18             	mov    %eax,0x18(%ebx)
8200262e:	eb 19                	jmp    82002649 <__swsetup_r+0x12a>
82002630:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002634:	98                   	cwtl   
82002635:	83 e0 02             	and    $0x2,%eax
82002638:	85 c0                	test   %eax,%eax
8200263a:	75 05                	jne    82002641 <__swsetup_r+0x122>
8200263c:	8b 43 14             	mov    0x14(%ebx),%eax
8200263f:	eb 05                	jmp    82002646 <__swsetup_r+0x127>
82002641:	b8 00 00 00 00       	mov    $0x0,%eax
82002646:	89 43 08             	mov    %eax,0x8(%ebx)
82002649:	8b 43 10             	mov    0x10(%ebx),%eax
8200264c:	85 c0                	test   %eax,%eax
8200264e:	75 20                	jne    82002670 <__swsetup_r+0x151>
82002650:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002654:	98                   	cwtl   
82002655:	25 80 00 00 00       	and    $0x80,%eax
8200265a:	85 c0                	test   %eax,%eax
8200265c:	74 12                	je     82002670 <__swsetup_r+0x151>
8200265e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002662:	83 c8 40             	or     $0x40,%eax
82002665:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002669:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200266e:	eb 05                	jmp    82002675 <__swsetup_r+0x156>
82002670:	b8 00 00 00 00       	mov    $0x0,%eax
82002675:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82002678:	c9                   	leave  
82002679:	c3                   	ret    

8200267a <__sflush_r>:
8200267a:	55                   	push   %ebp
8200267b:	89 e5                	mov    %esp,%ebp
8200267d:	57                   	push   %edi
8200267e:	56                   	push   %esi
8200267f:	53                   	push   %ebx
82002680:	83 ec 1c             	sub    $0x1c,%esp
82002683:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82002686:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200268a:	66 89 45 de          	mov    %ax,-0x22(%ebp)
8200268e:	0f bf 45 de          	movswl -0x22(%ebp),%eax
82002692:	83 e0 08             	and    $0x8,%eax
82002695:	85 c0                	test   %eax,%eax
82002697:	0f 85 93 01 00 00    	jne    82002830 <__sflush_r+0x1b6>
8200269d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820026a1:	80 cc 08             	or     $0x8,%ah
820026a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820026a8:	8b 43 04             	mov    0x4(%ebx),%eax
820026ab:	85 c0                	test   %eax,%eax
820026ad:	7f 0b                	jg     820026ba <__sflush_r+0x40>
820026af:	8b 43 3c             	mov    0x3c(%ebx),%eax
820026b2:	85 c0                	test   %eax,%eax
820026b4:	0f 8e 6f 01 00 00    	jle    82002829 <__sflush_r+0x1af>
820026ba:	8b 43 28             	mov    0x28(%ebx),%eax
820026bd:	85 c0                	test   %eax,%eax
820026bf:	0f 84 64 01 00 00    	je     82002829 <__sflush_r+0x1af>
820026c5:	8b 45 08             	mov    0x8(%ebp),%eax
820026c8:	8b 00                	mov    (%eax),%eax
820026ca:	89 45 d8             	mov    %eax,-0x28(%ebp)
820026cd:	8b 45 08             	mov    0x8(%ebp),%eax
820026d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
820026d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820026da:	98                   	cwtl   
820026db:	25 00 10 00 00       	and    $0x1000,%eax
820026e0:	85 c0                	test   %eax,%eax
820026e2:	74 08                	je     820026ec <__sflush_r+0x72>
820026e4:	8b 43 50             	mov    0x50(%ebx),%eax
820026e7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
820026ea:	eb 64                	jmp    82002750 <__sflush_r+0xd6>
820026ec:	8b 43 28             	mov    0x28(%ebx),%eax
820026ef:	8b 53 1c             	mov    0x1c(%ebx),%edx
820026f2:	6a 01                	push   $0x1
820026f4:	6a 00                	push   $0x0
820026f6:	52                   	push   %edx
820026f7:	ff 75 08             	push   0x8(%ebp)
820026fa:	ff d0                	call   *%eax
820026fc:	83 c4 10             	add    $0x10,%esp
820026ff:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002702:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
82002706:	75 48                	jne    82002750 <__sflush_r+0xd6>
82002708:	8b 45 08             	mov    0x8(%ebp),%eax
8200270b:	8b 00                	mov    (%eax),%eax
8200270d:	85 c0                	test   %eax,%eax
8200270f:	74 3f                	je     82002750 <__sflush_r+0xd6>
82002711:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
82002718:	8b 45 08             	mov    0x8(%ebp),%eax
8200271b:	8b 00                	mov    (%eax),%eax
8200271d:	83 f8 1d             	cmp    $0x1d,%eax
82002720:	74 0a                	je     8200272c <__sflush_r+0xb2>
82002722:	8b 45 08             	mov    0x8(%ebp),%eax
82002725:	8b 00                	mov    (%eax),%eax
82002727:	83 f8 16             	cmp    $0x16,%eax
8200272a:	75 11                	jne    8200273d <__sflush_r+0xc3>
8200272c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
82002733:	8b 45 08             	mov    0x8(%ebp),%eax
82002736:	8b 55 d8             	mov    -0x28(%ebp),%edx
82002739:	89 10                	mov    %edx,(%eax)
8200273b:	eb 0b                	jmp    82002748 <__sflush_r+0xce>
8200273d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002741:	83 c8 40             	or     $0x40,%eax
82002744:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002748:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200274b:	e9 48 01 00 00       	jmp    82002898 <__sflush_r+0x21e>
82002750:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002754:	98                   	cwtl   
82002755:	83 e0 04             	and    $0x4,%eax
82002758:	85 c0                	test   %eax,%eax
8200275a:	74 13                	je     8200276f <__sflush_r+0xf5>
8200275c:	8b 43 04             	mov    0x4(%ebx),%eax
8200275f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
82002762:	8b 43 30             	mov    0x30(%ebx),%eax
82002765:	85 c0                	test   %eax,%eax
82002767:	74 06                	je     8200276f <__sflush_r+0xf5>
82002769:	8b 43 3c             	mov    0x3c(%ebx),%eax
8200276c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8200276f:	8b 43 28             	mov    0x28(%ebx),%eax
82002772:	8b 53 1c             	mov    0x1c(%ebx),%edx
82002775:	6a 00                	push   $0x0
82002777:	ff 75 e4             	push   -0x1c(%ebp)
8200277a:	52                   	push   %edx
8200277b:	ff 75 08             	push   0x8(%ebp)
8200277e:	ff d0                	call   *%eax
82002780:	83 c4 10             	add    $0x10,%esp
82002783:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82002786:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8200278a:	75 1d                	jne    820027a9 <__sflush_r+0x12f>
8200278c:	8b 45 08             	mov    0x8(%ebp),%eax
8200278f:	8b 00                	mov    (%eax),%eax
82002791:	85 c0                	test   %eax,%eax
82002793:	74 14                	je     820027a9 <__sflush_r+0x12f>
82002795:	8b 45 08             	mov    0x8(%ebp),%eax
82002798:	8b 00                	mov    (%eax),%eax
8200279a:	83 f8 1d             	cmp    $0x1d,%eax
8200279d:	74 0a                	je     820027a9 <__sflush_r+0x12f>
8200279f:	8b 45 08             	mov    0x8(%ebp),%eax
820027a2:	8b 00                	mov    (%eax),%eax
820027a4:	83 f8 16             	cmp    $0x16,%eax
820027a7:	75 6e                	jne    82002817 <__sflush_r+0x19d>
820027a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820027ad:	80 e4 f7             	and    $0xf7,%ah
820027b0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820027b4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
820027bb:	8b 43 10             	mov    0x10(%ebx),%eax
820027be:	89 03                	mov    %eax,(%ebx)
820027c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820027c4:	98                   	cwtl   
820027c5:	25 00 10 00 00       	and    $0x1000,%eax
820027ca:	85 c0                	test   %eax,%eax
820027cc:	74 15                	je     820027e3 <__sflush_r+0x169>
820027ce:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
820027d2:	75 09                	jne    820027dd <__sflush_r+0x163>
820027d4:	8b 45 08             	mov    0x8(%ebp),%eax
820027d7:	8b 00                	mov    (%eax),%eax
820027d9:	85 c0                	test   %eax,%eax
820027db:	75 06                	jne    820027e3 <__sflush_r+0x169>
820027dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820027e0:	89 43 50             	mov    %eax,0x50(%ebx)
820027e3:	8b 45 08             	mov    0x8(%ebp),%eax
820027e6:	8b 55 d8             	mov    -0x28(%ebp),%edx
820027e9:	89 10                	mov    %edx,(%eax)
820027eb:	8b 43 30             	mov    0x30(%ebx),%eax
820027ee:	85 c0                	test   %eax,%eax
820027f0:	74 37                	je     82002829 <__sflush_r+0x1af>
820027f2:	8b 53 30             	mov    0x30(%ebx),%edx
820027f5:	8d 43 40             	lea    0x40(%ebx),%eax
820027f8:	39 c2                	cmp    %eax,%edx
820027fa:	74 12                	je     8200280e <__sflush_r+0x194>
820027fc:	8b 43 30             	mov    0x30(%ebx),%eax
820027ff:	83 ec 08             	sub    $0x8,%esp
82002802:	50                   	push   %eax
82002803:	ff 75 08             	push   0x8(%ebp)
82002806:	e8 bf e9 ff ff       	call   820011ca <_free_r>
8200280b:	83 c4 10             	add    $0x10,%esp
8200280e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82002815:	eb 12                	jmp    82002829 <__sflush_r+0x1af>
82002817:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200281b:	83 c8 40             	or     $0x40,%eax
8200281e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002822:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002827:	eb 6f                	jmp    82002898 <__sflush_r+0x21e>
82002829:	b8 00 00 00 00       	mov    $0x0,%eax
8200282e:	eb 68                	jmp    82002898 <__sflush_r+0x21e>
82002830:	8b 73 10             	mov    0x10(%ebx),%esi
82002833:	85 f6                	test   %esi,%esi
82002835:	75 07                	jne    8200283e <__sflush_r+0x1c4>
82002837:	b8 00 00 00 00       	mov    $0x0,%eax
8200283c:	eb 5a                	jmp    82002898 <__sflush_r+0x21e>
8200283e:	8b 03                	mov    (%ebx),%eax
82002840:	29 f0                	sub    %esi,%eax
82002842:	89 c7                	mov    %eax,%edi
82002844:	89 33                	mov    %esi,(%ebx)
82002846:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8200284a:	83 e0 03             	and    $0x3,%eax
8200284d:	85 c0                	test   %eax,%eax
8200284f:	75 05                	jne    82002856 <__sflush_r+0x1dc>
82002851:	8b 43 14             	mov    0x14(%ebx),%eax
82002854:	eb 05                	jmp    8200285b <__sflush_r+0x1e1>
82002856:	b8 00 00 00 00       	mov    $0x0,%eax
8200285b:	89 43 08             	mov    %eax,0x8(%ebx)
8200285e:	eb 2f                	jmp    8200288f <__sflush_r+0x215>
82002860:	8b 43 24             	mov    0x24(%ebx),%eax
82002863:	8b 53 1c             	mov    0x1c(%ebx),%edx
82002866:	57                   	push   %edi
82002867:	56                   	push   %esi
82002868:	52                   	push   %edx
82002869:	ff 75 08             	push   0x8(%ebp)
8200286c:	ff d0                	call   *%eax
8200286e:	83 c4 10             	add    $0x10,%esp
82002871:	85 c0                	test   %eax,%eax
82002873:	7f 12                	jg     82002887 <__sflush_r+0x20d>
82002875:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002879:	83 c8 40             	or     $0x40,%eax
8200287c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82002880:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002885:	eb 11                	jmp    82002898 <__sflush_r+0x21e>
82002887:	89 c1                	mov    %eax,%ecx
82002889:	89 c8                	mov    %ecx,%eax
8200288b:	01 c6                	add    %eax,%esi
8200288d:	29 cf                	sub    %ecx,%edi
8200288f:	85 ff                	test   %edi,%edi
82002891:	7f cd                	jg     82002860 <__sflush_r+0x1e6>
82002893:	b8 00 00 00 00       	mov    $0x0,%eax
82002898:	8d 65 f4             	lea    -0xc(%ebp),%esp
8200289b:	5b                   	pop    %ebx
8200289c:	5e                   	pop    %esi
8200289d:	5f                   	pop    %edi
8200289e:	5d                   	pop    %ebp
8200289f:	c3                   	ret    

820028a0 <_fflush_r>:
820028a0:	55                   	push   %ebp
820028a1:	89 e5                	mov    %esp,%ebp
820028a3:	53                   	push   %ebx
820028a4:	83 ec 14             	sub    $0x14,%esp
820028a7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820028aa:	8b 45 08             	mov    0x8(%ebp),%eax
820028ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
820028b0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
820028b4:	74 18                	je     820028ce <_fflush_r+0x2e>
820028b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
820028b9:	8b 40 38             	mov    0x38(%eax),%eax
820028bc:	85 c0                	test   %eax,%eax
820028be:	75 0e                	jne    820028ce <_fflush_r+0x2e>
820028c0:	83 ec 0c             	sub    $0xc,%esp
820028c3:	ff 75 f4             	push   -0xc(%ebp)
820028c6:	e8 5b 03 00 00       	call   82002c26 <__sinit>
820028cb:	83 c4 10             	add    $0x10,%esp
820028ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820028d2:	66 85 c0             	test   %ax,%ax
820028d5:	75 07                	jne    820028de <_fflush_r+0x3e>
820028d7:	b8 00 00 00 00       	mov    $0x0,%eax
820028dc:	eb 15                	jmp    820028f3 <_fflush_r+0x53>
820028de:	83 ec 08             	sub    $0x8,%esp
820028e1:	53                   	push   %ebx
820028e2:	ff 75 08             	push   0x8(%ebp)
820028e5:	e8 90 fd ff ff       	call   8200267a <__sflush_r>
820028ea:	83 c4 10             	add    $0x10,%esp
820028ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
820028f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
820028f3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820028f6:	c9                   	leave  
820028f7:	c3                   	ret    

820028f8 <fflush>:
820028f8:	55                   	push   %ebp
820028f9:	89 e5                	mov    %esp,%ebp
820028fb:	83 ec 08             	sub    $0x8,%esp
820028fe:	8b 55 08             	mov    0x8(%ebp),%edx
82002901:	85 d2                	test   %edx,%edx
82002903:	75 18                	jne    8200291d <fflush+0x25>
82002905:	a1 80 48 00 82       	mov    0x82004880,%eax
8200290a:	83 ec 08             	sub    $0x8,%esp
8200290d:	68 a0 28 00 82       	push   $0x820028a0
82002912:	50                   	push   %eax
82002913:	e8 d6 0a 00 00       	call   820033ee <_fwalk_reent>
82002918:	83 c4 10             	add    $0x10,%esp
8200291b:	eb 12                	jmp    8200292f <fflush+0x37>
8200291d:	a1 24 50 00 82       	mov    0x82005024,%eax
82002922:	83 ec 08             	sub    $0x8,%esp
82002925:	52                   	push   %edx
82002926:	50                   	push   %eax
82002927:	e8 74 ff ff ff       	call   820028a0 <_fflush_r>
8200292c:	83 c4 10             	add    $0x10,%esp
8200292f:	c9                   	leave  
82002930:	c3                   	ret    

82002931 <std>:
82002931:	55                   	push   %ebp
82002932:	89 e5                	mov    %esp,%ebp
82002934:	83 ec 08             	sub    $0x8,%esp
82002937:	8b 45 08             	mov    0x8(%ebp),%eax
8200293a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82002940:	8b 45 08             	mov    0x8(%ebp),%eax
82002943:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8200294a:	8b 45 08             	mov    0x8(%ebp),%eax
8200294d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
82002954:	8b 45 0c             	mov    0xc(%ebp),%eax
82002957:	89 c2                	mov    %eax,%edx
82002959:	8b 45 08             	mov    0x8(%ebp),%eax
8200295c:	66 89 50 0c          	mov    %dx,0xc(%eax)
82002960:	8b 45 08             	mov    0x8(%ebp),%eax
82002963:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8200296a:	8b 45 10             	mov    0x10(%ebp),%eax
8200296d:	89 c2                	mov    %eax,%edx
8200296f:	8b 45 08             	mov    0x8(%ebp),%eax
82002972:	66 89 50 0e          	mov    %dx,0xe(%eax)
82002976:	8b 45 08             	mov    0x8(%ebp),%eax
82002979:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
82002980:	8b 45 08             	mov    0x8(%ebp),%eax
82002983:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8200298a:	8b 45 08             	mov    0x8(%ebp),%eax
8200298d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
82002994:	8b 45 08             	mov    0x8(%ebp),%eax
82002997:	83 c0 5c             	add    $0x5c,%eax
8200299a:	83 ec 04             	sub    $0x4,%esp
8200299d:	6a 08                	push   $0x8
8200299f:	6a 00                	push   $0x0
820029a1:	50                   	push   %eax
820029a2:	e8 e6 0e 00 00       	call   8200388d <memset>
820029a7:	83 c4 10             	add    $0x10,%esp
820029aa:	8b 45 08             	mov    0x8(%ebp),%eax
820029ad:	8b 55 08             	mov    0x8(%ebp),%edx
820029b0:	89 50 1c             	mov    %edx,0x1c(%eax)
820029b3:	8b 45 08             	mov    0x8(%ebp),%eax
820029b6:	c7 40 20 ef 41 00 82 	movl   $0x820041ef,0x20(%eax)
820029bd:	8b 45 08             	mov    0x8(%ebp),%eax
820029c0:	c7 40 24 3d 42 00 82 	movl   $0x8200423d,0x24(%eax)
820029c7:	8b 45 08             	mov    0x8(%ebp),%eax
820029ca:	c7 40 28 98 42 00 82 	movl   $0x82004298,0x28(%eax)
820029d1:	8b 45 08             	mov    0x8(%ebp),%eax
820029d4:	c7 40 2c e2 42 00 82 	movl   $0x820042e2,0x2c(%eax)
820029db:	90                   	nop
820029dc:	c9                   	leave  
820029dd:	c3                   	ret    

820029de <stdin_init>:
820029de:	55                   	push   %ebp
820029df:	89 e5                	mov    %esp,%ebp
820029e1:	83 ec 08             	sub    $0x8,%esp
820029e4:	83 ec 04             	sub    $0x4,%esp
820029e7:	6a 00                	push   $0x0
820029e9:	6a 04                	push   $0x4
820029eb:	ff 75 08             	push   0x8(%ebp)
820029ee:	e8 3e ff ff ff       	call   82002931 <std>
820029f3:	83 c4 10             	add    $0x10,%esp
820029f6:	90                   	nop
820029f7:	c9                   	leave  
820029f8:	c3                   	ret    

820029f9 <stdout_init>:
820029f9:	55                   	push   %ebp
820029fa:	89 e5                	mov    %esp,%ebp
820029fc:	83 ec 08             	sub    $0x8,%esp
820029ff:	83 ec 04             	sub    $0x4,%esp
82002a02:	6a 01                	push   $0x1
82002a04:	6a 09                	push   $0x9
82002a06:	ff 75 08             	push   0x8(%ebp)
82002a09:	e8 23 ff ff ff       	call   82002931 <std>
82002a0e:	83 c4 10             	add    $0x10,%esp
82002a11:	90                   	nop
82002a12:	c9                   	leave  
82002a13:	c3                   	ret    

82002a14 <stderr_init>:
82002a14:	55                   	push   %ebp
82002a15:	89 e5                	mov    %esp,%ebp
82002a17:	83 ec 08             	sub    $0x8,%esp
82002a1a:	83 ec 04             	sub    $0x4,%esp
82002a1d:	6a 02                	push   $0x2
82002a1f:	6a 12                	push   $0x12
82002a21:	ff 75 08             	push   0x8(%ebp)
82002a24:	e8 08 ff ff ff       	call   82002931 <std>
82002a29:	83 c4 10             	add    $0x10,%esp
82002a2c:	90                   	nop
82002a2d:	c9                   	leave  
82002a2e:	c3                   	ret    

82002a2f <__sfmoreglue>:
82002a2f:	55                   	push   %ebp
82002a30:	89 e5                	mov    %esp,%ebp
82002a32:	53                   	push   %ebx
82002a33:	83 ec 14             	sub    $0x14,%esp
82002a36:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82002a39:	8d 43 ff             	lea    -0x1(%ebx),%eax
82002a3c:	6b c0 68             	imul   $0x68,%eax,%eax
82002a3f:	83 c0 74             	add    $0x74,%eax
82002a42:	83 ec 08             	sub    $0x8,%esp
82002a45:	50                   	push   %eax
82002a46:	ff 75 08             	push   0x8(%ebp)
82002a49:	e8 97 dd ff ff       	call   820007e5 <_malloc_r>
82002a4e:	83 c4 10             	add    $0x10,%esp
82002a51:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002a54:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
82002a58:	75 07                	jne    82002a61 <__sfmoreglue+0x32>
82002a5a:	b8 00 00 00 00       	mov    $0x0,%eax
82002a5f:	eb 38                	jmp    82002a99 <__sfmoreglue+0x6a>
82002a61:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002a64:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82002a6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002a6d:	89 58 04             	mov    %ebx,0x4(%eax)
82002a70:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002a73:	8d 50 0c             	lea    0xc(%eax),%edx
82002a76:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002a79:	89 50 08             	mov    %edx,0x8(%eax)
82002a7c:	89 d8                	mov    %ebx,%eax
82002a7e:	6b c0 68             	imul   $0x68,%eax,%eax
82002a81:	8b 55 f4             	mov    -0xc(%ebp),%edx
82002a84:	83 c2 0c             	add    $0xc,%edx
82002a87:	83 ec 04             	sub    $0x4,%esp
82002a8a:	50                   	push   %eax
82002a8b:	6a 00                	push   $0x0
82002a8d:	52                   	push   %edx
82002a8e:	e8 fa 0d 00 00       	call   8200388d <memset>
82002a93:	83 c4 10             	add    $0x10,%esp
82002a96:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002a99:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82002a9c:	c9                   	leave  
82002a9d:	c3                   	ret    

82002a9e <__sfp>:
82002a9e:	55                   	push   %ebp
82002a9f:	89 e5                	mov    %esp,%ebp
82002aa1:	83 ec 18             	sub    $0x18,%esp
82002aa4:	e8 16 02 00 00       	call   82002cbf <__sfp_lock_acquire>
82002aa9:	a1 80 48 00 82       	mov    0x82004880,%eax
82002aae:	8b 40 38             	mov    0x38(%eax),%eax
82002ab1:	85 c0                	test   %eax,%eax
82002ab3:	75 11                	jne    82002ac6 <__sfp+0x28>
82002ab5:	a1 80 48 00 82       	mov    0x82004880,%eax
82002aba:	83 ec 0c             	sub    $0xc,%esp
82002abd:	50                   	push   %eax
82002abe:	e8 63 01 00 00       	call   82002c26 <__sinit>
82002ac3:	83 c4 10             	add    $0x10,%esp
82002ac6:	a1 80 48 00 82       	mov    0x82004880,%eax
82002acb:	05 e0 02 00 00       	add    $0x2e0,%eax
82002ad0:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002ad3:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002ad6:	8b 40 08             	mov    0x8(%eax),%eax
82002ad9:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002adc:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002adf:	8b 40 04             	mov    0x4(%eax),%eax
82002ae2:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002ae5:	eb 10                	jmp    82002af7 <__sfp+0x59>
82002ae7:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002aea:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002aee:	66 85 c0             	test   %ax,%ax
82002af1:	74 58                	je     82002b4b <__sfp+0xad>
82002af3:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
82002af7:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
82002afb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82002aff:	79 e6                	jns    82002ae7 <__sfp+0x49>
82002b01:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002b04:	8b 00                	mov    (%eax),%eax
82002b06:	85 c0                	test   %eax,%eax
82002b08:	75 1e                	jne    82002b28 <__sfp+0x8a>
82002b0a:	83 ec 08             	sub    $0x8,%esp
82002b0d:	6a 04                	push   $0x4
82002b0f:	ff 75 08             	push   0x8(%ebp)
82002b12:	e8 18 ff ff ff       	call   82002a2f <__sfmoreglue>
82002b17:	83 c4 10             	add    $0x10,%esp
82002b1a:	8b 55 ec             	mov    -0x14(%ebp),%edx
82002b1d:	89 02                	mov    %eax,(%edx)
82002b1f:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002b22:	8b 00                	mov    (%eax),%eax
82002b24:	85 c0                	test   %eax,%eax
82002b26:	74 0a                	je     82002b32 <__sfp+0x94>
82002b28:	8b 45 ec             	mov    -0x14(%ebp),%eax
82002b2b:	8b 00                	mov    (%eax),%eax
82002b2d:	89 45 ec             	mov    %eax,-0x14(%ebp)
82002b30:	eb a1                	jmp    82002ad3 <__sfp+0x35>
82002b32:	90                   	nop
82002b33:	e8 8d 01 00 00       	call   82002cc5 <__sfp_lock_release>
82002b38:	8b 45 08             	mov    0x8(%ebp),%eax
82002b3b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82002b41:	b8 00 00 00 00       	mov    $0x0,%eax
82002b46:	e9 9e 00 00 00       	jmp    82002be9 <__sfp+0x14b>
82002b4b:	90                   	nop
82002b4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b4f:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
82002b55:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b58:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
82002b5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b61:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
82002b68:	e8 58 01 00 00       	call   82002cc5 <__sfp_lock_release>
82002b6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82002b76:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b79:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
82002b80:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b83:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
82002b8a:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b8d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
82002b94:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002b97:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
82002b9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002ba1:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
82002ba8:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002bab:	83 c0 5c             	add    $0x5c,%eax
82002bae:	83 ec 04             	sub    $0x4,%esp
82002bb1:	6a 08                	push   $0x8
82002bb3:	6a 00                	push   $0x0
82002bb5:	50                   	push   %eax
82002bb6:	e8 d2 0c 00 00       	call   8200388d <memset>
82002bbb:	83 c4 10             	add    $0x10,%esp
82002bbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002bc1:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
82002bc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002bcb:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
82002bd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002bd5:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
82002bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002bdf:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
82002be6:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002be9:	c9                   	leave  
82002bea:	c3                   	ret    

82002beb <_cleanup_r>:
82002beb:	55                   	push   %ebp
82002bec:	89 e5                	mov    %esp,%ebp
82002bee:	83 ec 18             	sub    $0x18,%esp
82002bf1:	c7 45 f4 b7 45 00 82 	movl   $0x820045b7,-0xc(%ebp)
82002bf8:	83 ec 08             	sub    $0x8,%esp
82002bfb:	ff 75 f4             	push   -0xc(%ebp)
82002bfe:	ff 75 08             	push   0x8(%ebp)
82002c01:	e8 e8 07 00 00       	call   820033ee <_fwalk_reent>
82002c06:	83 c4 10             	add    $0x10,%esp
82002c09:	90                   	nop
82002c0a:	c9                   	leave  
82002c0b:	c3                   	ret    

82002c0c <_cleanup>:
82002c0c:	55                   	push   %ebp
82002c0d:	89 e5                	mov    %esp,%ebp
82002c0f:	83 ec 08             	sub    $0x8,%esp
82002c12:	a1 80 48 00 82       	mov    0x82004880,%eax
82002c17:	83 ec 0c             	sub    $0xc,%esp
82002c1a:	50                   	push   %eax
82002c1b:	e8 cb ff ff ff       	call   82002beb <_cleanup_r>
82002c20:	83 c4 10             	add    $0x10,%esp
82002c23:	90                   	nop
82002c24:	c9                   	leave  
82002c25:	c3                   	ret    

82002c26 <__sinit>:
82002c26:	55                   	push   %ebp
82002c27:	89 e5                	mov    %esp,%ebp
82002c29:	83 ec 08             	sub    $0x8,%esp
82002c2c:	e8 9a 00 00 00       	call   82002ccb <__sinit_lock_acquire>
82002c31:	8b 45 08             	mov    0x8(%ebp),%eax
82002c34:	8b 40 38             	mov    0x38(%eax),%eax
82002c37:	85 c0                	test   %eax,%eax
82002c39:	74 07                	je     82002c42 <__sinit+0x1c>
82002c3b:	e8 91 00 00 00       	call   82002cd1 <__sinit_lock_release>
82002c40:	eb 7b                	jmp    82002cbd <__sinit+0x97>
82002c42:	8b 45 08             	mov    0x8(%ebp),%eax
82002c45:	c7 40 3c eb 2b 00 82 	movl   $0x82002beb,0x3c(%eax)
82002c4c:	8b 45 08             	mov    0x8(%ebp),%eax
82002c4f:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
82002c56:	00 00 00 
82002c59:	8b 45 08             	mov    0x8(%ebp),%eax
82002c5c:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
82002c63:	00 00 00 
82002c66:	8b 45 08             	mov    0x8(%ebp),%eax
82002c69:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
82002c6f:	8b 45 08             	mov    0x8(%ebp),%eax
82002c72:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
82002c78:	8b 45 08             	mov    0x8(%ebp),%eax
82002c7b:	8b 40 04             	mov    0x4(%eax),%eax
82002c7e:	83 ec 0c             	sub    $0xc,%esp
82002c81:	50                   	push   %eax
82002c82:	e8 57 fd ff ff       	call   820029de <stdin_init>
82002c87:	83 c4 10             	add    $0x10,%esp
82002c8a:	8b 45 08             	mov    0x8(%ebp),%eax
82002c8d:	8b 40 08             	mov    0x8(%eax),%eax
82002c90:	83 ec 0c             	sub    $0xc,%esp
82002c93:	50                   	push   %eax
82002c94:	e8 60 fd ff ff       	call   820029f9 <stdout_init>
82002c99:	83 c4 10             	add    $0x10,%esp
82002c9c:	8b 45 08             	mov    0x8(%ebp),%eax
82002c9f:	8b 40 0c             	mov    0xc(%eax),%eax
82002ca2:	83 ec 0c             	sub    $0xc,%esp
82002ca5:	50                   	push   %eax
82002ca6:	e8 69 fd ff ff       	call   82002a14 <stderr_init>
82002cab:	83 c4 10             	add    $0x10,%esp
82002cae:	8b 45 08             	mov    0x8(%ebp),%eax
82002cb1:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
82002cb8:	e8 14 00 00 00       	call   82002cd1 <__sinit_lock_release>
82002cbd:	c9                   	leave  
82002cbe:	c3                   	ret    

82002cbf <__sfp_lock_acquire>:
82002cbf:	55                   	push   %ebp
82002cc0:	89 e5                	mov    %esp,%ebp
82002cc2:	90                   	nop
82002cc3:	5d                   	pop    %ebp
82002cc4:	c3                   	ret    

82002cc5 <__sfp_lock_release>:
82002cc5:	55                   	push   %ebp
82002cc6:	89 e5                	mov    %esp,%ebp
82002cc8:	90                   	nop
82002cc9:	5d                   	pop    %ebp
82002cca:	c3                   	ret    

82002ccb <__sinit_lock_acquire>:
82002ccb:	55                   	push   %ebp
82002ccc:	89 e5                	mov    %esp,%ebp
82002cce:	90                   	nop
82002ccf:	5d                   	pop    %ebp
82002cd0:	c3                   	ret    

82002cd1 <__sinit_lock_release>:
82002cd1:	55                   	push   %ebp
82002cd2:	89 e5                	mov    %esp,%ebp
82002cd4:	90                   	nop
82002cd5:	5d                   	pop    %ebp
82002cd6:	c3                   	ret    

82002cd7 <__fp_lock>:
82002cd7:	55                   	push   %ebp
82002cd8:	89 e5                	mov    %esp,%ebp
82002cda:	b8 00 00 00 00       	mov    $0x0,%eax
82002cdf:	5d                   	pop    %ebp
82002ce0:	c3                   	ret    

82002ce1 <__fp_unlock>:
82002ce1:	55                   	push   %ebp
82002ce2:	89 e5                	mov    %esp,%ebp
82002ce4:	b8 00 00 00 00       	mov    $0x0,%eax
82002ce9:	5d                   	pop    %ebp
82002cea:	c3                   	ret    

82002ceb <__fp_lock_all>:
82002ceb:	55                   	push   %ebp
82002cec:	89 e5                	mov    %esp,%ebp
82002cee:	83 ec 08             	sub    $0x8,%esp
82002cf1:	e8 c9 ff ff ff       	call   82002cbf <__sfp_lock_acquire>
82002cf6:	a1 24 50 00 82       	mov    0x82005024,%eax
82002cfb:	83 ec 08             	sub    $0x8,%esp
82002cfe:	68 d7 2c 00 82       	push   $0x82002cd7
82002d03:	50                   	push   %eax
82002d04:	e8 7d 06 00 00       	call   82003386 <_fwalk>
82002d09:	83 c4 10             	add    $0x10,%esp
82002d0c:	90                   	nop
82002d0d:	c9                   	leave  
82002d0e:	c3                   	ret    

82002d0f <__fp_unlock_all>:
82002d0f:	55                   	push   %ebp
82002d10:	89 e5                	mov    %esp,%ebp
82002d12:	83 ec 08             	sub    $0x8,%esp
82002d15:	a1 24 50 00 82       	mov    0x82005024,%eax
82002d1a:	83 ec 08             	sub    $0x8,%esp
82002d1d:	68 e1 2c 00 82       	push   $0x82002ce1
82002d22:	50                   	push   %eax
82002d23:	e8 5e 06 00 00       	call   82003386 <_fwalk>
82002d28:	83 c4 10             	add    $0x10,%esp
82002d2b:	e8 95 ff ff ff       	call   82002cc5 <__sfp_lock_release>
82002d30:	90                   	nop
82002d31:	c9                   	leave  
82002d32:	c3                   	ret    

82002d33 <__sputc_r>:
82002d33:	55                   	push   %ebp
82002d34:	89 e5                	mov    %esp,%ebp
82002d36:	83 ec 08             	sub    $0x8,%esp
82002d39:	8b 45 10             	mov    0x10(%ebp),%eax
82002d3c:	8b 40 08             	mov    0x8(%eax),%eax
82002d3f:	8d 50 ff             	lea    -0x1(%eax),%edx
82002d42:	8b 45 10             	mov    0x10(%ebp),%eax
82002d45:	89 50 08             	mov    %edx,0x8(%eax)
82002d48:	8b 45 10             	mov    0x10(%ebp),%eax
82002d4b:	8b 40 08             	mov    0x8(%eax),%eax
82002d4e:	85 c0                	test   %eax,%eax
82002d50:	79 17                	jns    82002d69 <__sputc_r+0x36>
82002d52:	8b 45 10             	mov    0x10(%ebp),%eax
82002d55:	8b 50 08             	mov    0x8(%eax),%edx
82002d58:	8b 45 10             	mov    0x10(%ebp),%eax
82002d5b:	8b 40 18             	mov    0x18(%eax),%eax
82002d5e:	39 c2                	cmp    %eax,%edx
82002d60:	7c 21                	jl     82002d83 <__sputc_r+0x50>
82002d62:	8b 45 0c             	mov    0xc(%ebp),%eax
82002d65:	3c 0a                	cmp    $0xa,%al
82002d67:	74 1a                	je     82002d83 <__sputc_r+0x50>
82002d69:	8b 45 10             	mov    0x10(%ebp),%eax
82002d6c:	8b 00                	mov    (%eax),%eax
82002d6e:	8d 48 01             	lea    0x1(%eax),%ecx
82002d71:	8b 55 10             	mov    0x10(%ebp),%edx
82002d74:	89 0a                	mov    %ecx,(%edx)
82002d76:	8b 55 0c             	mov    0xc(%ebp),%edx
82002d79:	88 10                	mov    %dl,(%eax)
82002d7b:	0f b6 00             	movzbl (%eax),%eax
82002d7e:	0f b6 c0             	movzbl %al,%eax
82002d81:	eb 14                	jmp    82002d97 <__sputc_r+0x64>
82002d83:	83 ec 04             	sub    $0x4,%esp
82002d86:	ff 75 10             	push   0x10(%ebp)
82002d89:	ff 75 0c             	push   0xc(%ebp)
82002d8c:	ff 75 08             	push   0x8(%ebp)
82002d8f:	e8 58 f6 ff ff       	call   820023ec <__swbuf_r>
82002d94:	83 c4 10             	add    $0x10,%esp
82002d97:	c9                   	leave  
82002d98:	c3                   	ret    

82002d99 <__fputwc>:
82002d99:	55                   	push   %ebp
82002d9a:	89 e5                	mov    %esp,%ebp
82002d9c:	83 ec 18             	sub    $0x18,%esp
82002d9f:	e8 28 07 00 00       	call   820034cc <__locale_mb_cur_max>
82002da4:	83 f8 01             	cmp    $0x1,%eax
82002da7:	75 1e                	jne    82002dc7 <__fputwc+0x2e>
82002da9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
82002dad:	7e 18                	jle    82002dc7 <__fputwc+0x2e>
82002daf:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
82002db6:	7f 0f                	jg     82002dc7 <__fputwc+0x2e>
82002db8:	8b 45 0c             	mov    0xc(%ebp),%eax
82002dbb:	88 45 ef             	mov    %al,-0x11(%ebp)
82002dbe:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
82002dc5:	eb 3c                	jmp    82002e03 <__fputwc+0x6a>
82002dc7:	8b 45 10             	mov    0x10(%ebp),%eax
82002dca:	83 c0 5c             	add    $0x5c,%eax
82002dcd:	50                   	push   %eax
82002dce:	ff 75 0c             	push   0xc(%ebp)
82002dd1:	8d 45 ef             	lea    -0x11(%ebp),%eax
82002dd4:	50                   	push   %eax
82002dd5:	ff 75 08             	push   0x8(%ebp)
82002dd8:	e8 e3 15 00 00       	call   820043c0 <_wcrtomb_r>
82002ddd:	83 c4 10             	add    $0x10,%esp
82002de0:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002de3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
82002de7:	75 1a                	jne    82002e03 <__fputwc+0x6a>
82002de9:	8b 45 10             	mov    0x10(%ebp),%eax
82002dec:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002df0:	83 c8 40             	or     $0x40,%eax
82002df3:	89 c2                	mov    %eax,%edx
82002df5:	8b 45 10             	mov    0x10(%ebp),%eax
82002df8:	66 89 50 0c          	mov    %dx,0xc(%eax)
82002dfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002e01:	eb 44                	jmp    82002e47 <__fputwc+0xae>
82002e03:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82002e0a:	eb 30                	jmp    82002e3c <__fputwc+0xa3>
82002e0c:	8d 55 ef             	lea    -0x11(%ebp),%edx
82002e0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002e12:	01 d0                	add    %edx,%eax
82002e14:	0f b6 00             	movzbl (%eax),%eax
82002e17:	0f b6 c0             	movzbl %al,%eax
82002e1a:	83 ec 04             	sub    $0x4,%esp
82002e1d:	ff 75 10             	push   0x10(%ebp)
82002e20:	50                   	push   %eax
82002e21:	ff 75 08             	push   0x8(%ebp)
82002e24:	e8 0a ff ff ff       	call   82002d33 <__sputc_r>
82002e29:	83 c4 10             	add    $0x10,%esp
82002e2c:	83 f8 ff             	cmp    $0xffffffff,%eax
82002e2f:	75 07                	jne    82002e38 <__fputwc+0x9f>
82002e31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002e36:	eb 0f                	jmp    82002e47 <__fputwc+0xae>
82002e38:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
82002e3c:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002e3f:	3b 45 f0             	cmp    -0x10(%ebp),%eax
82002e42:	72 c8                	jb     82002e0c <__fputwc+0x73>
82002e44:	8b 45 0c             	mov    0xc(%ebp),%eax
82002e47:	c9                   	leave  
82002e48:	c3                   	ret    

82002e49 <_fputwc_r>:
82002e49:	55                   	push   %ebp
82002e4a:	89 e5                	mov    %esp,%ebp
82002e4c:	83 ec 18             	sub    $0x18,%esp
82002e4f:	8b 45 10             	mov    0x10(%ebp),%eax
82002e52:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002e56:	98                   	cwtl   
82002e57:	25 00 20 00 00       	and    $0x2000,%eax
82002e5c:	85 c0                	test   %eax,%eax
82002e5e:	75 24                	jne    82002e84 <_fputwc_r+0x3b>
82002e60:	8b 45 10             	mov    0x10(%ebp),%eax
82002e63:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82002e67:	80 cc 20             	or     $0x20,%ah
82002e6a:	89 c2                	mov    %eax,%edx
82002e6c:	8b 45 10             	mov    0x10(%ebp),%eax
82002e6f:	66 89 50 0c          	mov    %dx,0xc(%eax)
82002e73:	8b 45 10             	mov    0x10(%ebp),%eax
82002e76:	8b 40 64             	mov    0x64(%eax),%eax
82002e79:	80 cc 20             	or     $0x20,%ah
82002e7c:	89 c2                	mov    %eax,%edx
82002e7e:	8b 45 10             	mov    0x10(%ebp),%eax
82002e81:	89 50 64             	mov    %edx,0x64(%eax)
82002e84:	83 ec 04             	sub    $0x4,%esp
82002e87:	ff 75 10             	push   0x10(%ebp)
82002e8a:	ff 75 0c             	push   0xc(%ebp)
82002e8d:	ff 75 08             	push   0x8(%ebp)
82002e90:	e8 04 ff ff ff       	call   82002d99 <__fputwc>
82002e95:	83 c4 10             	add    $0x10,%esp
82002e98:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002e9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002e9e:	c9                   	leave  
82002e9f:	c3                   	ret    

82002ea0 <fputwc>:
82002ea0:	55                   	push   %ebp
82002ea1:	89 e5                	mov    %esp,%ebp
82002ea3:	83 ec 18             	sub    $0x18,%esp
82002ea6:	a1 24 50 00 82       	mov    0x82005024,%eax
82002eab:	89 45 f4             	mov    %eax,-0xc(%ebp)
82002eae:	8b 45 f4             	mov    -0xc(%ebp),%eax
82002eb1:	89 45 f0             	mov    %eax,-0x10(%ebp)
82002eb4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
82002eb8:	74 18                	je     82002ed2 <fputwc+0x32>
82002eba:	8b 45 f0             	mov    -0x10(%ebp),%eax
82002ebd:	8b 40 38             	mov    0x38(%eax),%eax
82002ec0:	85 c0                	test   %eax,%eax
82002ec2:	75 0e                	jne    82002ed2 <fputwc+0x32>
82002ec4:	83 ec 0c             	sub    $0xc,%esp
82002ec7:	ff 75 f0             	push   -0x10(%ebp)
82002eca:	e8 57 fd ff ff       	call   82002c26 <__sinit>
82002ecf:	83 c4 10             	add    $0x10,%esp
82002ed2:	83 ec 04             	sub    $0x4,%esp
82002ed5:	ff 75 0c             	push   0xc(%ebp)
82002ed8:	ff 75 08             	push   0x8(%ebp)
82002edb:	ff 75 f4             	push   -0xc(%ebp)
82002ede:	e8 66 ff ff ff       	call   82002e49 <_fputwc_r>
82002ee3:	83 c4 10             	add    $0x10,%esp
82002ee6:	c9                   	leave  
82002ee7:	c3                   	ret    

82002ee8 <__sfvwrite_r>:
82002ee8:	55                   	push   %ebp
82002ee9:	89 e5                	mov    %esp,%ebp
82002eeb:	57                   	push   %edi
82002eec:	56                   	push   %esi
82002eed:	53                   	push   %ebx
82002eee:	83 ec 3c             	sub    $0x3c,%esp
82002ef1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82002ef4:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
82002efb:	8b 45 10             	mov    0x10(%ebp),%eax
82002efe:	8b 78 08             	mov    0x8(%eax),%edi
82002f01:	85 ff                	test   %edi,%edi
82002f03:	75 0a                	jne    82002f0f <__sfvwrite_r+0x27>
82002f05:	b8 00 00 00 00       	mov    $0x0,%eax
82002f0a:	e9 6f 04 00 00       	jmp    8200337e <__sfvwrite_r+0x496>
82002f0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002f13:	98                   	cwtl   
82002f14:	83 e0 08             	and    $0x8,%eax
82002f17:	85 c0                	test   %eax,%eax
82002f19:	74 07                	je     82002f22 <__sfvwrite_r+0x3a>
82002f1b:	8b 43 10             	mov    0x10(%ebx),%eax
82002f1e:	85 c0                	test   %eax,%eax
82002f20:	75 1d                	jne    82002f3f <__sfvwrite_r+0x57>
82002f22:	83 ec 08             	sub    $0x8,%esp
82002f25:	53                   	push   %ebx
82002f26:	ff 75 08             	push   0x8(%ebp)
82002f29:	e8 f1 f5 ff ff       	call   8200251f <__swsetup_r>
82002f2e:	83 c4 10             	add    $0x10,%esp
82002f31:	85 c0                	test   %eax,%eax
82002f33:	74 0a                	je     82002f3f <__sfvwrite_r+0x57>
82002f35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82002f3a:	e9 3f 04 00 00       	jmp    8200337e <__sfvwrite_r+0x496>
82002f3f:	8b 45 10             	mov    0x10(%ebp),%eax
82002f42:	8b 00                	mov    (%eax),%eax
82002f44:	89 45 c0             	mov    %eax,-0x40(%ebp)
82002f47:	bf 00 00 00 00       	mov    $0x0,%edi
82002f4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002f50:	98                   	cwtl   
82002f51:	83 e0 02             	and    $0x2,%eax
82002f54:	85 c0                	test   %eax,%eax
82002f56:	74 68                	je     82002fc0 <__sfvwrite_r+0xd8>
82002f58:	eb 11                	jmp    82002f6b <__sfvwrite_r+0x83>
82002f5a:	8b 45 c0             	mov    -0x40(%ebp),%eax
82002f5d:	8b 08                	mov    (%eax),%ecx
82002f5f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82002f62:	8b 78 04             	mov    0x4(%eax),%edi
82002f65:	83 c0 08             	add    $0x8,%eax
82002f68:	89 45 c0             	mov    %eax,-0x40(%ebp)
82002f6b:	85 ff                	test   %edi,%edi
82002f6d:	74 eb                	je     82002f5a <__sfvwrite_r+0x72>
82002f6f:	8b 4b 24             	mov    0x24(%ebx),%ecx
82002f72:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
82002f77:	39 c7                	cmp    %eax,%edi
82002f79:	0f 46 c7             	cmovbe %edi,%eax
82002f7c:	89 c2                	mov    %eax,%edx
82002f7e:	8b 43 1c             	mov    0x1c(%ebx),%eax
82002f81:	52                   	push   %edx
82002f82:	ff 75 c4             	push   -0x3c(%ebp)
82002f85:	50                   	push   %eax
82002f86:	ff 75 08             	push   0x8(%ebp)
82002f89:	ff d1                	call   *%ecx
82002f8b:	83 c4 10             	add    $0x10,%esp
82002f8e:	89 c6                	mov    %eax,%esi
82002f90:	85 f6                	test   %esi,%esi
82002f92:	0f 8e cf 03 00 00    	jle    82003367 <__sfvwrite_r+0x47f>
82002f98:	89 f0                	mov    %esi,%eax
82002f9a:	01 45 c4             	add    %eax,-0x3c(%ebp)
82002f9d:	89 f0                	mov    %esi,%eax
82002f9f:	29 c7                	sub    %eax,%edi
82002fa1:	8b 45 10             	mov    0x10(%ebp),%eax
82002fa4:	8b 40 08             	mov    0x8(%eax),%eax
82002fa7:	89 f2                	mov    %esi,%edx
82002fa9:	29 d0                	sub    %edx,%eax
82002fab:	8b 4d 10             	mov    0x10(%ebp),%ecx
82002fae:	89 41 08             	mov    %eax,0x8(%ecx)
82002fb1:	8b 45 10             	mov    0x10(%ebp),%eax
82002fb4:	8b 40 08             	mov    0x8(%eax),%eax
82002fb7:	85 c0                	test   %eax,%eax
82002fb9:	75 b0                	jne    82002f6b <__sfvwrite_r+0x83>
82002fbb:	e9 a0 03 00 00       	jmp    82003360 <__sfvwrite_r+0x478>
82002fc0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002fc4:	98                   	cwtl   
82002fc5:	83 e0 01             	and    $0x1,%eax
82002fc8:	85 c0                	test   %eax,%eax
82002fca:	0f 85 44 02 00 00    	jne    82003214 <__sfvwrite_r+0x32c>
82002fd0:	eb 11                	jmp    82002fe3 <__sfvwrite_r+0xfb>
82002fd2:	8b 45 c0             	mov    -0x40(%ebp),%eax
82002fd5:	8b 08                	mov    (%eax),%ecx
82002fd7:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82002fda:	8b 78 04             	mov    0x4(%eax),%edi
82002fdd:	83 c0 08             	add    $0x8,%eax
82002fe0:	89 45 c0             	mov    %eax,-0x40(%ebp)
82002fe3:	85 ff                	test   %edi,%edi
82002fe5:	74 eb                	je     82002fd2 <__sfvwrite_r+0xea>
82002fe7:	8b 73 08             	mov    0x8(%ebx),%esi
82002fea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82002fee:	98                   	cwtl   
82002fef:	25 00 02 00 00       	and    $0x200,%eax
82002ff4:	85 c0                	test   %eax,%eax
82002ff6:	0f 84 4f 01 00 00    	je     8200314b <__sfvwrite_r+0x263>
82002ffc:	89 f0                	mov    %esi,%eax
82002ffe:	39 c7                	cmp    %eax,%edi
82003000:	0f 82 12 01 00 00    	jb     82003118 <__sfvwrite_r+0x230>
82003006:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200300a:	98                   	cwtl   
8200300b:	25 80 04 00 00       	and    $0x480,%eax
82003010:	85 c0                	test   %eax,%eax
82003012:	0f 84 00 01 00 00    	je     82003118 <__sfvwrite_r+0x230>
82003018:	8b 03                	mov    (%ebx),%eax
8200301a:	8b 53 10             	mov    0x10(%ebx),%edx
8200301d:	29 d0                	sub    %edx,%eax
8200301f:	89 45 d0             	mov    %eax,-0x30(%ebp)
82003022:	8b 53 14             	mov    0x14(%ebx),%edx
82003025:	89 d0                	mov    %edx,%eax
82003027:	01 c0                	add    %eax,%eax
82003029:	01 d0                	add    %edx,%eax
8200302b:	89 c2                	mov    %eax,%edx
8200302d:	c1 ea 1f             	shr    $0x1f,%edx
82003030:	01 d0                	add    %edx,%eax
82003032:	d1 f8                	sar    %eax
82003034:	89 45 d8             	mov    %eax,-0x28(%ebp)
82003037:	8b 45 d0             	mov    -0x30(%ebp),%eax
8200303a:	01 f8                	add    %edi,%eax
8200303c:	8d 50 01             	lea    0x1(%eax),%edx
8200303f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003042:	39 c2                	cmp    %eax,%edx
82003044:	76 0b                	jbe    82003051 <__sfvwrite_r+0x169>
82003046:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003049:	01 f8                	add    %edi,%eax
8200304b:	83 c0 01             	add    $0x1,%eax
8200304e:	89 45 d8             	mov    %eax,-0x28(%ebp)
82003051:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003055:	98                   	cwtl   
82003056:	25 00 04 00 00       	and    $0x400,%eax
8200305b:	85 c0                	test   %eax,%eax
8200305d:	74 4f                	je     820030ae <__sfvwrite_r+0x1c6>
8200305f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003062:	83 ec 08             	sub    $0x8,%esp
82003065:	50                   	push   %eax
82003066:	ff 75 08             	push   0x8(%ebp)
82003069:	e8 77 d7 ff ff       	call   820007e5 <_malloc_r>
8200306e:	83 c4 10             	add    $0x10,%esp
82003071:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003074:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
82003078:	75 0e                	jne    82003088 <__sfvwrite_r+0x1a0>
8200307a:	8b 45 08             	mov    0x8(%ebp),%eax
8200307d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
82003083:	e9 e6 02 00 00       	jmp    8200336e <__sfvwrite_r+0x486>
82003088:	8b 55 d0             	mov    -0x30(%ebp),%edx
8200308b:	8b 43 10             	mov    0x10(%ebx),%eax
8200308e:	83 ec 04             	sub    $0x4,%esp
82003091:	52                   	push   %edx
82003092:	50                   	push   %eax
82003093:	ff 75 dc             	push   -0x24(%ebp)
82003096:	e8 1d 07 00 00       	call   820037b8 <memcpy>
8200309b:	83 c4 10             	add    $0x10,%esp
8200309e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820030a2:	66 25 7f fb          	and    $0xfb7f,%ax
820030a6:	0c 80                	or     $0x80,%al
820030a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820030ac:	eb 49                	jmp    820030f7 <__sfvwrite_r+0x20f>
820030ae:	8b 55 d8             	mov    -0x28(%ebp),%edx
820030b1:	8b 43 10             	mov    0x10(%ebx),%eax
820030b4:	83 ec 04             	sub    $0x4,%esp
820030b7:	52                   	push   %edx
820030b8:	50                   	push   %eax
820030b9:	ff 75 08             	push   0x8(%ebp)
820030bc:	e8 54 08 00 00       	call   82003915 <_realloc_r>
820030c1:	83 c4 10             	add    $0x10,%esp
820030c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
820030c7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
820030cb:	75 2a                	jne    820030f7 <__sfvwrite_r+0x20f>
820030cd:	8b 43 10             	mov    0x10(%ebx),%eax
820030d0:	83 ec 08             	sub    $0x8,%esp
820030d3:	50                   	push   %eax
820030d4:	ff 75 08             	push   0x8(%ebp)
820030d7:	e8 ee e0 ff ff       	call   820011ca <_free_r>
820030dc:	83 c4 10             	add    $0x10,%esp
820030df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820030e3:	24 7f                	and    $0x7f,%al
820030e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820030e9:	8b 45 08             	mov    0x8(%ebp),%eax
820030ec:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
820030f2:	e9 77 02 00 00       	jmp    8200336e <__sfvwrite_r+0x486>
820030f7:	8b 45 dc             	mov    -0x24(%ebp),%eax
820030fa:	89 43 10             	mov    %eax,0x10(%ebx)
820030fd:	8b 55 d0             	mov    -0x30(%ebp),%edx
82003100:	8b 45 dc             	mov    -0x24(%ebp),%eax
82003103:	01 d0                	add    %edx,%eax
82003105:	89 03                	mov    %eax,(%ebx)
82003107:	8b 45 d8             	mov    -0x28(%ebp),%eax
8200310a:	89 43 14             	mov    %eax,0x14(%ebx)
8200310d:	89 fe                	mov    %edi,%esi
8200310f:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003112:	2b 45 d0             	sub    -0x30(%ebp),%eax
82003115:	89 43 08             	mov    %eax,0x8(%ebx)
82003118:	89 f0                	mov    %esi,%eax
8200311a:	39 c7                	cmp    %eax,%edi
8200311c:	73 02                	jae    82003120 <__sfvwrite_r+0x238>
8200311e:	89 fe                	mov    %edi,%esi
82003120:	89 f2                	mov    %esi,%edx
82003122:	8b 03                	mov    (%ebx),%eax
82003124:	83 ec 04             	sub    $0x4,%esp
82003127:	52                   	push   %edx
82003128:	ff 75 c4             	push   -0x3c(%ebp)
8200312b:	50                   	push   %eax
8200312c:	e8 cf 06 00 00       	call   82003800 <memmove>
82003131:	83 c4 10             	add    $0x10,%esp
82003134:	8b 43 08             	mov    0x8(%ebx),%eax
82003137:	29 f0                	sub    %esi,%eax
82003139:	89 43 08             	mov    %eax,0x8(%ebx)
8200313c:	8b 03                	mov    (%ebx),%eax
8200313e:	89 f2                	mov    %esi,%edx
82003140:	01 d0                	add    %edx,%eax
82003142:	89 03                	mov    %eax,(%ebx)
82003144:	89 fe                	mov    %edi,%esi
82003146:	e9 9d 00 00 00       	jmp    820031e8 <__sfvwrite_r+0x300>
8200314b:	8b 13                	mov    (%ebx),%edx
8200314d:	8b 43 10             	mov    0x10(%ebx),%eax
82003150:	39 c2                	cmp    %eax,%edx
82003152:	77 07                	ja     8200315b <__sfvwrite_r+0x273>
82003154:	8b 43 14             	mov    0x14(%ebx),%eax
82003157:	39 c7                	cmp    %eax,%edi
82003159:	73 4c                	jae    820031a7 <__sfvwrite_r+0x2bf>
8200315b:	89 f0                	mov    %esi,%eax
8200315d:	39 c7                	cmp    %eax,%edi
8200315f:	0f 46 c7             	cmovbe %edi,%eax
82003162:	89 c6                	mov    %eax,%esi
82003164:	89 f2                	mov    %esi,%edx
82003166:	8b 03                	mov    (%ebx),%eax
82003168:	83 ec 04             	sub    $0x4,%esp
8200316b:	52                   	push   %edx
8200316c:	ff 75 c4             	push   -0x3c(%ebp)
8200316f:	50                   	push   %eax
82003170:	e8 8b 06 00 00       	call   82003800 <memmove>
82003175:	83 c4 10             	add    $0x10,%esp
82003178:	8b 43 08             	mov    0x8(%ebx),%eax
8200317b:	29 f0                	sub    %esi,%eax
8200317d:	89 43 08             	mov    %eax,0x8(%ebx)
82003180:	8b 03                	mov    (%ebx),%eax
82003182:	89 f2                	mov    %esi,%edx
82003184:	01 d0                	add    %edx,%eax
82003186:	89 03                	mov    %eax,(%ebx)
82003188:	8b 43 08             	mov    0x8(%ebx),%eax
8200318b:	85 c0                	test   %eax,%eax
8200318d:	75 58                	jne    820031e7 <__sfvwrite_r+0x2ff>
8200318f:	83 ec 08             	sub    $0x8,%esp
82003192:	53                   	push   %ebx
82003193:	ff 75 08             	push   0x8(%ebp)
82003196:	e8 05 f7 ff ff       	call   820028a0 <_fflush_r>
8200319b:	83 c4 10             	add    $0x10,%esp
8200319e:	85 c0                	test   %eax,%eax
820031a0:	74 45                	je     820031e7 <__sfvwrite_r+0x2ff>
820031a2:	e9 c7 01 00 00       	jmp    8200336e <__sfvwrite_r+0x486>
820031a7:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
820031ad:	77 04                	ja     820031b3 <__sfvwrite_r+0x2cb>
820031af:	89 f8                	mov    %edi,%eax
820031b1:	eb 05                	jmp    820031b8 <__sfvwrite_r+0x2d0>
820031b3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
820031b8:	8b 4b 14             	mov    0x14(%ebx),%ecx
820031bb:	99                   	cltd   
820031bc:	f7 f9                	idiv   %ecx
820031be:	89 c2                	mov    %eax,%edx
820031c0:	8b 43 14             	mov    0x14(%ebx),%eax
820031c3:	89 d6                	mov    %edx,%esi
820031c5:	0f af f0             	imul   %eax,%esi
820031c8:	8b 53 24             	mov    0x24(%ebx),%edx
820031cb:	8b 43 1c             	mov    0x1c(%ebx),%eax
820031ce:	56                   	push   %esi
820031cf:	ff 75 c4             	push   -0x3c(%ebp)
820031d2:	50                   	push   %eax
820031d3:	ff 75 08             	push   0x8(%ebp)
820031d6:	ff d2                	call   *%edx
820031d8:	83 c4 10             	add    $0x10,%esp
820031db:	89 c6                	mov    %eax,%esi
820031dd:	85 f6                	test   %esi,%esi
820031df:	0f 8e 85 01 00 00    	jle    8200336a <__sfvwrite_r+0x482>
820031e5:	eb 01                	jmp    820031e8 <__sfvwrite_r+0x300>
820031e7:	90                   	nop
820031e8:	89 f0                	mov    %esi,%eax
820031ea:	01 45 c4             	add    %eax,-0x3c(%ebp)
820031ed:	89 f0                	mov    %esi,%eax
820031ef:	29 c7                	sub    %eax,%edi
820031f1:	8b 45 10             	mov    0x10(%ebp),%eax
820031f4:	8b 40 08             	mov    0x8(%eax),%eax
820031f7:	89 f2                	mov    %esi,%edx
820031f9:	29 d0                	sub    %edx,%eax
820031fb:	8b 4d 10             	mov    0x10(%ebp),%ecx
820031fe:	89 41 08             	mov    %eax,0x8(%ecx)
82003201:	8b 45 10             	mov    0x10(%ebp),%eax
82003204:	8b 40 08             	mov    0x8(%eax),%eax
82003207:	85 c0                	test   %eax,%eax
82003209:	0f 85 d4 fd ff ff    	jne    82002fe3 <__sfvwrite_r+0xfb>
8200320f:	e9 4c 01 00 00       	jmp    82003360 <__sfvwrite_r+0x478>
82003214:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8200321b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
82003222:	eb 18                	jmp    8200323c <__sfvwrite_r+0x354>
82003224:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8200322b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8200322e:	8b 08                	mov    (%eax),%ecx
82003230:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
82003233:	8b 78 04             	mov    0x4(%eax),%edi
82003236:	83 c0 08             	add    $0x8,%eax
82003239:	89 45 c0             	mov    %eax,-0x40(%ebp)
8200323c:	85 ff                	test   %edi,%edi
8200323e:	74 e4                	je     82003224 <__sfvwrite_r+0x33c>
82003240:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
82003244:	75 32                	jne    82003278 <__sfvwrite_r+0x390>
82003246:	83 ec 04             	sub    $0x4,%esp
82003249:	57                   	push   %edi
8200324a:	6a 0a                	push   $0xa
8200324c:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8200324f:	56                   	push   %esi
82003250:	e8 cb 04 00 00       	call   82003720 <memchr>
82003255:	83 c4 10             	add    $0x10,%esp
82003258:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8200325b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8200325f:	74 0a                	je     8200326b <__sfvwrite_r+0x383>
82003261:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82003264:	83 c0 01             	add    $0x1,%eax
82003267:	29 f0                	sub    %esi,%eax
82003269:	eb 03                	jmp    8200326e <__sfvwrite_r+0x386>
8200326b:	8d 47 01             	lea    0x1(%edi),%eax
8200326e:	89 45 e0             	mov    %eax,-0x20(%ebp)
82003271:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
82003278:	8b 45 e0             	mov    -0x20(%ebp),%eax
8200327b:	39 c7                	cmp    %eax,%edi
8200327d:	0f 46 c7             	cmovbe %edi,%eax
82003280:	89 c1                	mov    %eax,%ecx
82003282:	8b 53 08             	mov    0x8(%ebx),%edx
82003285:	8b 43 14             	mov    0x14(%ebx),%eax
82003288:	8d 34 02             	lea    (%edx,%eax,1),%esi
8200328b:	8b 13                	mov    (%ebx),%edx
8200328d:	8b 43 10             	mov    0x10(%ebx),%eax
82003290:	39 c2                	cmp    %eax,%edx
82003292:	76 38                	jbe    820032cc <__sfvwrite_r+0x3e4>
82003294:	39 f1                	cmp    %esi,%ecx
82003296:	7e 34                	jle    820032cc <__sfvwrite_r+0x3e4>
82003298:	89 f2                	mov    %esi,%edx
8200329a:	8b 03                	mov    (%ebx),%eax
8200329c:	83 ec 04             	sub    $0x4,%esp
8200329f:	52                   	push   %edx
820032a0:	ff 75 c4             	push   -0x3c(%ebp)
820032a3:	50                   	push   %eax
820032a4:	e8 57 05 00 00       	call   82003800 <memmove>
820032a9:	83 c4 10             	add    $0x10,%esp
820032ac:	8b 03                	mov    (%ebx),%eax
820032ae:	89 f2                	mov    %esi,%edx
820032b0:	01 d0                	add    %edx,%eax
820032b2:	89 03                	mov    %eax,(%ebx)
820032b4:	83 ec 08             	sub    $0x8,%esp
820032b7:	53                   	push   %ebx
820032b8:	ff 75 08             	push   0x8(%ebp)
820032bb:	e8 e0 f5 ff ff       	call   820028a0 <_fflush_r>
820032c0:	83 c4 10             	add    $0x10,%esp
820032c3:	85 c0                	test   %eax,%eax
820032c5:	74 4f                	je     82003316 <__sfvwrite_r+0x42e>
820032c7:	e9 a2 00 00 00       	jmp    8200336e <__sfvwrite_r+0x486>
820032cc:	8b 73 14             	mov    0x14(%ebx),%esi
820032cf:	89 c8                	mov    %ecx,%eax
820032d1:	39 c6                	cmp    %eax,%esi
820032d3:	7f 1b                	jg     820032f0 <__sfvwrite_r+0x408>
820032d5:	8b 53 24             	mov    0x24(%ebx),%edx
820032d8:	8b 43 1c             	mov    0x1c(%ebx),%eax
820032db:	56                   	push   %esi
820032dc:	ff 75 c4             	push   -0x3c(%ebp)
820032df:	50                   	push   %eax
820032e0:	ff 75 08             	push   0x8(%ebp)
820032e3:	ff d2                	call   *%edx
820032e5:	83 c4 10             	add    $0x10,%esp
820032e8:	89 c6                	mov    %eax,%esi
820032ea:	85 f6                	test   %esi,%esi
820032ec:	7f 28                	jg     82003316 <__sfvwrite_r+0x42e>
820032ee:	eb 7e                	jmp    8200336e <__sfvwrite_r+0x486>
820032f0:	89 ce                	mov    %ecx,%esi
820032f2:	89 f2                	mov    %esi,%edx
820032f4:	8b 03                	mov    (%ebx),%eax
820032f6:	83 ec 04             	sub    $0x4,%esp
820032f9:	52                   	push   %edx
820032fa:	ff 75 c4             	push   -0x3c(%ebp)
820032fd:	50                   	push   %eax
820032fe:	e8 fd 04 00 00       	call   82003800 <memmove>
82003303:	83 c4 10             	add    $0x10,%esp
82003306:	8b 43 08             	mov    0x8(%ebx),%eax
82003309:	29 f0                	sub    %esi,%eax
8200330b:	89 43 08             	mov    %eax,0x8(%ebx)
8200330e:	8b 03                	mov    (%ebx),%eax
82003310:	89 f2                	mov    %esi,%edx
82003312:	01 d0                	add    %edx,%eax
82003314:	89 03                	mov    %eax,(%ebx)
82003316:	29 75 e0             	sub    %esi,-0x20(%ebp)
82003319:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8200331d:	75 1a                	jne    82003339 <__sfvwrite_r+0x451>
8200331f:	83 ec 08             	sub    $0x8,%esp
82003322:	53                   	push   %ebx
82003323:	ff 75 08             	push   0x8(%ebp)
82003326:	e8 75 f5 ff ff       	call   820028a0 <_fflush_r>
8200332b:	83 c4 10             	add    $0x10,%esp
8200332e:	85 c0                	test   %eax,%eax
82003330:	75 3b                	jne    8200336d <__sfvwrite_r+0x485>
82003332:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82003339:	89 f0                	mov    %esi,%eax
8200333b:	01 45 c4             	add    %eax,-0x3c(%ebp)
8200333e:	89 f0                	mov    %esi,%eax
82003340:	29 c7                	sub    %eax,%edi
82003342:	8b 45 10             	mov    0x10(%ebp),%eax
82003345:	8b 40 08             	mov    0x8(%eax),%eax
82003348:	89 f2                	mov    %esi,%edx
8200334a:	29 d0                	sub    %edx,%eax
8200334c:	8b 4d 10             	mov    0x10(%ebp),%ecx
8200334f:	89 41 08             	mov    %eax,0x8(%ecx)
82003352:	8b 45 10             	mov    0x10(%ebp),%eax
82003355:	8b 40 08             	mov    0x8(%eax),%eax
82003358:	85 c0                	test   %eax,%eax
8200335a:	0f 85 dc fe ff ff    	jne    8200323c <__sfvwrite_r+0x354>
82003360:	b8 00 00 00 00       	mov    $0x0,%eax
82003365:	eb 17                	jmp    8200337e <__sfvwrite_r+0x496>
82003367:	90                   	nop
82003368:	eb 04                	jmp    8200336e <__sfvwrite_r+0x486>
8200336a:	90                   	nop
8200336b:	eb 01                	jmp    8200336e <__sfvwrite_r+0x486>
8200336d:	90                   	nop
8200336e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003372:	83 c8 40             	or     $0x40,%eax
82003375:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82003379:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200337e:	8d 65 f4             	lea    -0xc(%ebp),%esp
82003381:	5b                   	pop    %ebx
82003382:	5e                   	pop    %esi
82003383:	5f                   	pop    %edi
82003384:	5d                   	pop    %ebp
82003385:	c3                   	ret    

82003386 <_fwalk>:
82003386:	55                   	push   %ebp
82003387:	89 e5                	mov    %esp,%ebp
82003389:	57                   	push   %edi
8200338a:	56                   	push   %esi
8200338b:	53                   	push   %ebx
8200338c:	83 ec 1c             	sub    $0x1c,%esp
8200338f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
82003396:	8b 45 08             	mov    0x8(%ebp),%eax
82003399:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8200339f:	eb 3e                	jmp    820033df <_fwalk+0x59>
820033a1:	8b 5e 08             	mov    0x8(%esi),%ebx
820033a4:	8b 7e 04             	mov    0x4(%esi),%edi
820033a7:	eb 2d                	jmp    820033d6 <_fwalk+0x50>
820033a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820033ad:	66 85 c0             	test   %ax,%ax
820033b0:	74 21                	je     820033d3 <_fwalk+0x4d>
820033b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820033b6:	66 83 f8 01          	cmp    $0x1,%ax
820033ba:	74 17                	je     820033d3 <_fwalk+0x4d>
820033bc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820033c0:	66 83 f8 ff          	cmp    $0xffff,%ax
820033c4:	74 0d                	je     820033d3 <_fwalk+0x4d>
820033c6:	83 ec 0c             	sub    $0xc,%esp
820033c9:	53                   	push   %ebx
820033ca:	ff 55 0c             	call   *0xc(%ebp)
820033cd:	83 c4 10             	add    $0x10,%esp
820033d0:	09 45 e4             	or     %eax,-0x1c(%ebp)
820033d3:	83 c3 68             	add    $0x68,%ebx
820033d6:	83 ef 01             	sub    $0x1,%edi
820033d9:	85 ff                	test   %edi,%edi
820033db:	79 cc                	jns    820033a9 <_fwalk+0x23>
820033dd:	8b 36                	mov    (%esi),%esi
820033df:	85 f6                	test   %esi,%esi
820033e1:	75 be                	jne    820033a1 <_fwalk+0x1b>
820033e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
820033e6:	8d 65 f4             	lea    -0xc(%ebp),%esp
820033e9:	5b                   	pop    %ebx
820033ea:	5e                   	pop    %esi
820033eb:	5f                   	pop    %edi
820033ec:	5d                   	pop    %ebp
820033ed:	c3                   	ret    

820033ee <_fwalk_reent>:
820033ee:	55                   	push   %ebp
820033ef:	89 e5                	mov    %esp,%ebp
820033f1:	57                   	push   %edi
820033f2:	56                   	push   %esi
820033f3:	53                   	push   %ebx
820033f4:	83 ec 1c             	sub    $0x1c,%esp
820033f7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
820033fe:	8b 45 08             	mov    0x8(%ebp),%eax
82003401:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
82003407:	eb 41                	jmp    8200344a <_fwalk_reent+0x5c>
82003409:	8b 5e 08             	mov    0x8(%esi),%ebx
8200340c:	8b 7e 04             	mov    0x4(%esi),%edi
8200340f:	eb 30                	jmp    82003441 <_fwalk_reent+0x53>
82003411:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003415:	66 85 c0             	test   %ax,%ax
82003418:	74 24                	je     8200343e <_fwalk_reent+0x50>
8200341a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200341e:	66 83 f8 01          	cmp    $0x1,%ax
82003422:	74 1a                	je     8200343e <_fwalk_reent+0x50>
82003424:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82003428:	66 83 f8 ff          	cmp    $0xffff,%ax
8200342c:	74 10                	je     8200343e <_fwalk_reent+0x50>
8200342e:	83 ec 08             	sub    $0x8,%esp
82003431:	53                   	push   %ebx
82003432:	ff 75 08             	push   0x8(%ebp)
82003435:	ff 55 0c             	call   *0xc(%ebp)
82003438:	83 c4 10             	add    $0x10,%esp
8200343b:	09 45 e4             	or     %eax,-0x1c(%ebp)
8200343e:	83 c3 68             	add    $0x68,%ebx
82003441:	83 ef 01             	sub    $0x1,%edi
82003444:	85 ff                	test   %edi,%edi
82003446:	79 c9                	jns    82003411 <_fwalk_reent+0x23>
82003448:	8b 36                	mov    (%esi),%esi
8200344a:	85 f6                	test   %esi,%esi
8200344c:	75 bb                	jne    82003409 <_fwalk_reent+0x1b>
8200344e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82003451:	8d 65 f4             	lea    -0xc(%ebp),%esp
82003454:	5b                   	pop    %ebx
82003455:	5e                   	pop    %esi
82003456:	5f                   	pop    %edi
82003457:	5d                   	pop    %ebp
82003458:	c3                   	ret    

82003459 <__get_global_locale>:
82003459:	55                   	push   %ebp
8200345a:	89 e5                	mov    %esp,%ebp
8200345c:	b8 60 54 00 82       	mov    $0x82005460,%eax
82003461:	5d                   	pop    %ebp
82003462:	c3                   	ret    

82003463 <__get_current_locale>:
82003463:	55                   	push   %ebp
82003464:	89 e5                	mov    %esp,%ebp
82003466:	e8 ee ff ff ff       	call   82003459 <__get_global_locale>
8200346b:	5d                   	pop    %ebp
8200346c:	c3                   	ret    

8200346d <_setlocale_r>:
8200346d:	55                   	push   %ebp
8200346e:	89 e5                	mov    %esp,%ebp
82003470:	83 ec 08             	sub    $0x8,%esp
82003473:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
82003477:	74 4c                	je     820034c5 <_setlocale_r+0x58>
82003479:	83 ec 08             	sub    $0x8,%esp
8200347c:	68 43 49 00 82       	push   $0x82004943
82003481:	ff 75 10             	push   0x10(%ebp)
82003484:	e8 7e 0e 00 00       	call   82004307 <strcmp>
82003489:	83 c4 10             	add    $0x10,%esp
8200348c:	85 c0                	test   %eax,%eax
8200348e:	74 35                	je     820034c5 <_setlocale_r+0x58>
82003490:	83 ec 08             	sub    $0x8,%esp
82003493:	68 49 49 00 82       	push   $0x82004949
82003498:	ff 75 10             	push   0x10(%ebp)
8200349b:	e8 67 0e 00 00       	call   82004307 <strcmp>
820034a0:	83 c4 10             	add    $0x10,%esp
820034a3:	85 c0                	test   %eax,%eax
820034a5:	74 1e                	je     820034c5 <_setlocale_r+0x58>
820034a7:	83 ec 08             	sub    $0x8,%esp
820034aa:	68 42 49 00 82       	push   $0x82004942
820034af:	ff 75 10             	push   0x10(%ebp)
820034b2:	e8 50 0e 00 00       	call   82004307 <strcmp>
820034b7:	83 c4 10             	add    $0x10,%esp
820034ba:	85 c0                	test   %eax,%eax
820034bc:	74 07                	je     820034c5 <_setlocale_r+0x58>
820034be:	b8 00 00 00 00       	mov    $0x0,%eax
820034c3:	eb 05                	jmp    820034ca <_setlocale_r+0x5d>
820034c5:	b8 49 49 00 82       	mov    $0x82004949,%eax
820034ca:	c9                   	leave  
820034cb:	c3                   	ret    

820034cc <__locale_mb_cur_max>:
820034cc:	55                   	push   %ebp
820034cd:	89 e5                	mov    %esp,%ebp
820034cf:	e8 8f ff ff ff       	call   82003463 <__get_current_locale>
820034d4:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
820034db:	0f be c0             	movsbl %al,%eax
820034de:	5d                   	pop    %ebp
820034df:	c3                   	ret    

820034e0 <setlocale>:
820034e0:	55                   	push   %ebp
820034e1:	89 e5                	mov    %esp,%ebp
820034e3:	83 ec 08             	sub    $0x8,%esp
820034e6:	a1 24 50 00 82       	mov    0x82005024,%eax
820034eb:	83 ec 04             	sub    $0x4,%esp
820034ee:	ff 75 0c             	push   0xc(%ebp)
820034f1:	ff 75 08             	push   0x8(%ebp)
820034f4:	50                   	push   %eax
820034f5:	e8 73 ff ff ff       	call   8200346d <_setlocale_r>
820034fa:	83 c4 10             	add    $0x10,%esp
820034fd:	c9                   	leave  
820034fe:	c3                   	ret    

820034ff <__smakebuf_r>:
820034ff:	55                   	push   %ebp
82003500:	89 e5                	mov    %esp,%ebp
82003502:	56                   	push   %esi
82003503:	53                   	push   %ebx
82003504:	83 ec 10             	sub    $0x10,%esp
82003507:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8200350a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200350e:	98                   	cwtl   
8200350f:	83 e0 02             	and    $0x2,%eax
82003512:	85 c0                	test   %eax,%eax
82003514:	74 16                	je     8200352c <__smakebuf_r+0x2d>
82003516:	8d 43 43             	lea    0x43(%ebx),%eax
82003519:	89 03                	mov    %eax,(%ebx)
8200351b:	8b 03                	mov    (%ebx),%eax
8200351d:	89 43 10             	mov    %eax,0x10(%ebx)
82003520:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
82003527:	e9 b9 00 00 00       	jmp    820035e5 <__smakebuf_r+0xe6>
8200352c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8200352f:	50                   	push   %eax
82003530:	8d 45 f0             	lea    -0x10(%ebp),%eax
82003533:	50                   	push   %eax
82003534:	53                   	push   %ebx
82003535:	ff 75 08             	push   0x8(%ebp)
82003538:	e8 af 00 00 00       	call   820035ec <__swhatbuf_r>
8200353d:	83 c4 10             	add    $0x10,%esp
82003540:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003543:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003546:	83 ec 08             	sub    $0x8,%esp
82003549:	50                   	push   %eax
8200354a:	ff 75 08             	push   0x8(%ebp)
8200354d:	e8 93 d2 ff ff       	call   820007e5 <_malloc_r>
82003552:	83 c4 10             	add    $0x10,%esp
82003555:	89 c6                	mov    %eax,%esi
82003557:	85 f6                	test   %esi,%esi
82003559:	75 2f                	jne    8200358a <__smakebuf_r+0x8b>
8200355b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200355f:	98                   	cwtl   
82003560:	25 00 02 00 00       	and    $0x200,%eax
82003565:	85 c0                	test   %eax,%eax
82003567:	75 7c                	jne    820035e5 <__smakebuf_r+0xe6>
82003569:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200356d:	83 e0 fc             	and    $0xfffffffc,%eax
82003570:	83 c8 02             	or     $0x2,%eax
82003573:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82003577:	8d 43 43             	lea    0x43(%ebx),%eax
8200357a:	89 03                	mov    %eax,(%ebx)
8200357c:	8b 03                	mov    (%ebx),%eax
8200357e:	89 43 10             	mov    %eax,0x10(%ebx)
82003581:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
82003588:	eb 5b                	jmp    820035e5 <__smakebuf_r+0xe6>
8200358a:	8b 45 08             	mov    0x8(%ebp),%eax
8200358d:	c7 40 3c eb 2b 00 82 	movl   $0x82002beb,0x3c(%eax)
82003594:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82003598:	0c 80                	or     $0x80,%al
8200359a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200359e:	89 33                	mov    %esi,(%ebx)
820035a0:	8b 03                	mov    (%ebx),%eax
820035a2:	89 43 10             	mov    %eax,0x10(%ebx)
820035a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
820035a8:	89 43 14             	mov    %eax,0x14(%ebx)
820035ab:	8b 45 ec             	mov    -0x14(%ebp),%eax
820035ae:	85 c0                	test   %eax,%eax
820035b0:	74 26                	je     820035d8 <__smakebuf_r+0xd9>
820035b2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820035b6:	98                   	cwtl   
820035b7:	83 ec 08             	sub    $0x8,%esp
820035ba:	50                   	push   %eax
820035bb:	ff 75 08             	push   0x8(%ebp)
820035be:	e8 5b 11 00 00       	call   8200471e <_isatty_r>
820035c3:	83 c4 10             	add    $0x10,%esp
820035c6:	85 c0                	test   %eax,%eax
820035c8:	74 0e                	je     820035d8 <__smakebuf_r+0xd9>
820035ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820035ce:	83 e0 fc             	and    $0xfffffffc,%eax
820035d1:	83 c8 01             	or     $0x1,%eax
820035d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820035d8:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
820035dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
820035df:	09 d0                	or     %edx,%eax
820035e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820035e5:	8d 65 f8             	lea    -0x8(%ebp),%esp
820035e8:	5b                   	pop    %ebx
820035e9:	5e                   	pop    %esi
820035ea:	5d                   	pop    %ebp
820035eb:	c3                   	ret    

820035ec <__swhatbuf_r>:
820035ec:	55                   	push   %ebp
820035ed:	89 e5                	mov    %esp,%ebp
820035ef:	83 ec 58             	sub    $0x58,%esp
820035f2:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
820035f9:	8b 45 0c             	mov    0xc(%ebp),%eax
820035fc:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
82003600:	66 85 c0             	test   %ax,%ax
82003603:	78 1f                	js     82003624 <__swhatbuf_r+0x38>
82003605:	8b 45 0c             	mov    0xc(%ebp),%eax
82003608:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8200360c:	98                   	cwtl   
8200360d:	83 ec 04             	sub    $0x4,%esp
82003610:	8d 55 ac             	lea    -0x54(%ebp),%edx
82003613:	52                   	push   %edx
82003614:	50                   	push   %eax
82003615:	ff 75 08             	push   0x8(%ebp)
82003618:	e8 be 10 00 00       	call   820046db <_fstat_r>
8200361d:	83 c4 10             	add    $0x10,%esp
82003620:	85 c0                	test   %eax,%eax
82003622:	79 35                	jns    82003659 <__swhatbuf_r+0x6d>
82003624:	8b 45 14             	mov    0x14(%ebp),%eax
82003627:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8200362d:	8b 45 0c             	mov    0xc(%ebp),%eax
82003630:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
82003634:	98                   	cwtl   
82003635:	25 80 00 00 00       	and    $0x80,%eax
8200363a:	85 c0                	test   %eax,%eax
8200363c:	74 0b                	je     82003649 <__swhatbuf_r+0x5d>
8200363e:	8b 45 10             	mov    0x10(%ebp),%eax
82003641:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
82003647:	eb 09                	jmp    82003652 <__swhatbuf_r+0x66>
82003649:	8b 45 10             	mov    0x10(%ebp),%eax
8200364c:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
82003652:	b8 00 00 00 00       	mov    $0x0,%eax
82003657:	eb 24                	jmp    8200367d <__swhatbuf_r+0x91>
82003659:	8b 45 b0             	mov    -0x50(%ebp),%eax
8200365c:	25 00 f0 00 00       	and    $0xf000,%eax
82003661:	3d 00 20 00 00       	cmp    $0x2000,%eax
82003666:	0f 94 c0             	sete   %al
82003669:	0f b6 d0             	movzbl %al,%edx
8200366c:	8b 45 14             	mov    0x14(%ebp),%eax
8200366f:	89 10                	mov    %edx,(%eax)
82003671:	8b 45 10             	mov    0x10(%ebp),%eax
82003674:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8200367a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200367d:	c9                   	leave  
8200367e:	c3                   	ret    

8200367f <__get_global_locale>:
8200367f:	55                   	push   %ebp
82003680:	89 e5                	mov    %esp,%ebp
82003682:	b8 60 54 00 82       	mov    $0x82005460,%eax
82003687:	5d                   	pop    %ebp
82003688:	c3                   	ret    

82003689 <__get_current_locale>:
82003689:	55                   	push   %ebp
8200368a:	89 e5                	mov    %esp,%ebp
8200368c:	e8 ee ff ff ff       	call   8200367f <__get_global_locale>
82003691:	5d                   	pop    %ebp
82003692:	c3                   	ret    

82003693 <_mbtowc_r>:
82003693:	55                   	push   %ebp
82003694:	89 e5                	mov    %esp,%ebp
82003696:	83 ec 08             	sub    $0x8,%esp
82003699:	e8 eb ff ff ff       	call   82003689 <__get_current_locale>
8200369e:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
820036a4:	83 ec 0c             	sub    $0xc,%esp
820036a7:	ff 75 18             	push   0x18(%ebp)
820036aa:	ff 75 14             	push   0x14(%ebp)
820036ad:	ff 75 10             	push   0x10(%ebp)
820036b0:	ff 75 0c             	push   0xc(%ebp)
820036b3:	ff 75 08             	push   0x8(%ebp)
820036b6:	ff d0                	call   *%eax
820036b8:	83 c4 20             	add    $0x20,%esp
820036bb:	c9                   	leave  
820036bc:	c3                   	ret    

820036bd <__ascii_mbtowc>:
820036bd:	55                   	push   %ebp
820036be:	89 e5                	mov    %esp,%ebp
820036c0:	83 ec 10             	sub    $0x10,%esp
820036c3:	8b 45 10             	mov    0x10(%ebp),%eax
820036c6:	89 45 fc             	mov    %eax,-0x4(%ebp)
820036c9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
820036cd:	75 06                	jne    820036d5 <__ascii_mbtowc+0x18>
820036cf:	8d 45 f8             	lea    -0x8(%ebp),%eax
820036d2:	89 45 0c             	mov    %eax,0xc(%ebp)
820036d5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
820036d9:	75 07                	jne    820036e2 <__ascii_mbtowc+0x25>
820036db:	b8 00 00 00 00       	mov    $0x0,%eax
820036e0:	eb 31                	jmp    82003713 <__ascii_mbtowc+0x56>
820036e2:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
820036e6:	75 07                	jne    820036ef <__ascii_mbtowc+0x32>
820036e8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
820036ed:	eb 24                	jmp    82003713 <__ascii_mbtowc+0x56>
820036ef:	8b 45 fc             	mov    -0x4(%ebp),%eax
820036f2:	0f b6 00             	movzbl (%eax),%eax
820036f5:	0f b6 d0             	movzbl %al,%edx
820036f8:	8b 45 0c             	mov    0xc(%ebp),%eax
820036fb:	89 10                	mov    %edx,(%eax)
820036fd:	8b 45 fc             	mov    -0x4(%ebp),%eax
82003700:	0f b6 00             	movzbl (%eax),%eax
82003703:	84 c0                	test   %al,%al
82003705:	75 07                	jne    8200370e <__ascii_mbtowc+0x51>
82003707:	b8 00 00 00 00       	mov    $0x0,%eax
8200370c:	eb 05                	jmp    82003713 <__ascii_mbtowc+0x56>
8200370e:	b8 01 00 00 00       	mov    $0x1,%eax
82003713:	c9                   	leave  
82003714:	c3                   	ret    
82003715:	66 90                	xchg   %ax,%ax
82003717:	66 90                	xchg   %ax,%ax
82003719:	66 90                	xchg   %ax,%ax
8200371b:	66 90                	xchg   %ax,%ax
8200371d:	66 90                	xchg   %ax,%ax
8200371f:	90                   	nop

82003720 <memchr>:
82003720:	55                   	push   %ebp
82003721:	89 e5                	mov    %esp,%ebp
82003723:	57                   	push   %edi
82003724:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
82003728:	8b 4d 10             	mov    0x10(%ebp),%ecx
8200372b:	8b 7d 08             	mov    0x8(%ebp),%edi
8200372e:	31 d2                	xor    %edx,%edx
82003730:	85 c9                	test   %ecx,%ecx
82003732:	74 79                	je     820037ad <L20>
82003734:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200373a:	74 28                	je     82003764 <L5>
8200373c:	3a 07                	cmp    (%edi),%al
8200373e:	74 6a                	je     820037aa <L15>
82003740:	47                   	inc    %edi
82003741:	49                   	dec    %ecx
82003742:	74 69                	je     820037ad <L20>
82003744:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200374a:	74 18                	je     82003764 <L5>
8200374c:	3a 07                	cmp    (%edi),%al
8200374e:	74 5a                	je     820037aa <L15>
82003750:	47                   	inc    %edi
82003751:	49                   	dec    %ecx
82003752:	74 59                	je     820037ad <L20>
82003754:	f7 c7 03 00 00 00    	test   $0x3,%edi
8200375a:	74 08                	je     82003764 <L5>
8200375c:	3a 07                	cmp    (%edi),%al
8200375e:	74 4a                	je     820037aa <L15>
82003760:	47                   	inc    %edi
82003761:	49                   	dec    %ecx
82003762:	74 49                	je     820037ad <L20>

82003764 <L5>:
82003764:	88 c4                	mov    %al,%ah
82003766:	89 c2                	mov    %eax,%edx
82003768:	c1 e2 10             	shl    $0x10,%edx
8200376b:	09 d0                	or     %edx,%eax
8200376d:	53                   	push   %ebx
8200376e:	66 90                	xchg   %ax,%ax

82003770 <L8>:
82003770:	83 e9 04             	sub    $0x4,%ecx
82003773:	72 1c                	jb     82003791 <L9>
82003775:	8b 17                	mov    (%edi),%edx
82003777:	83 c7 04             	add    $0x4,%edi
8200377a:	31 c2                	xor    %eax,%edx
8200377c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
82003782:	f7 d2                	not    %edx
82003784:	21 d3                	and    %edx,%ebx
82003786:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8200378c:	74 e2                	je     82003770 <L8>
8200378e:	83 ef 04             	sub    $0x4,%edi

82003791 <L9>:
82003791:	5b                   	pop    %ebx
82003792:	31 d2                	xor    %edx,%edx
82003794:	83 c1 04             	add    $0x4,%ecx
82003797:	74 14                	je     820037ad <L20>
82003799:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

820037a0 <L10>:
820037a0:	3a 07                	cmp    (%edi),%al
820037a2:	74 06                	je     820037aa <L15>
820037a4:	47                   	inc    %edi
820037a5:	49                   	dec    %ecx
820037a6:	75 f8                	jne    820037a0 <L10>
820037a8:	31 ff                	xor    %edi,%edi

820037aa <L15>:
820037aa:	4a                   	dec    %edx
820037ab:	21 fa                	and    %edi,%edx

820037ad <L20>:
820037ad:	89 d0                	mov    %edx,%eax
820037af:	8d 65 fc             	lea    -0x4(%ebp),%esp
820037b2:	5f                   	pop    %edi
820037b3:	c9                   	leave  
820037b4:	c3                   	ret    
820037b5:	66 90                	xchg   %ax,%ax
820037b7:	90                   	nop

820037b8 <memcpy>:
820037b8:	55                   	push   %ebp
820037b9:	89 e5                	mov    %esp,%ebp
820037bb:	56                   	push   %esi
820037bc:	57                   	push   %edi
820037bd:	53                   	push   %ebx
820037be:	8b 7d 08             	mov    0x8(%ebp),%edi
820037c1:	8b 4d 10             	mov    0x10(%ebp),%ecx
820037c4:	8b 75 0c             	mov    0xc(%ebp),%esi
820037c7:	fc                   	cld    
820037c8:	83 f9 08             	cmp    $0x8,%ecx
820037cb:	76 26                	jbe    820037f3 <memcpy+0x3b>
820037cd:	89 fa                	mov    %edi,%edx
820037cf:	89 cb                	mov    %ecx,%ebx
820037d1:	83 e2 03             	and    $0x3,%edx
820037d4:	74 10                	je     820037e6 <memcpy+0x2e>
820037d6:	b9 04 00 00 00       	mov    $0x4,%ecx
820037db:	29 d1                	sub    %edx,%ecx
820037dd:	83 e1 03             	and    $0x3,%ecx
820037e0:	29 cb                	sub    %ecx,%ebx
820037e2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
820037e4:	89 d9                	mov    %ebx,%ecx
820037e6:	c1 e9 02             	shr    $0x2,%ecx
820037e9:	8d 76 00             	lea    0x0(%esi),%esi
820037ec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
820037ee:	89 d9                	mov    %ebx,%ecx
820037f0:	83 e1 03             	and    $0x3,%ecx
820037f3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
820037f5:	8b 45 08             	mov    0x8(%ebp),%eax
820037f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
820037fb:	5b                   	pop    %ebx
820037fc:	5f                   	pop    %edi
820037fd:	5e                   	pop    %esi
820037fe:	c9                   	leave  
820037ff:	c3                   	ret    

82003800 <memmove>:
82003800:	55                   	push   %ebp
82003801:	89 e5                	mov    %esp,%ebp
82003803:	56                   	push   %esi
82003804:	57                   	push   %edi
82003805:	53                   	push   %ebx
82003806:	8b 7d 08             	mov    0x8(%ebp),%edi
82003809:	8b 4d 10             	mov    0x10(%ebp),%ecx
8200380c:	8b 75 0c             	mov    0xc(%ebp),%esi
8200380f:	fc                   	cld    
82003810:	39 fe                	cmp    %edi,%esi
82003812:	73 43                	jae    82003857 <memmove+0x57>
82003814:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
82003818:	39 df                	cmp    %ebx,%edi
8200381a:	77 3b                	ja     82003857 <memmove+0x57>
8200381c:	01 ce                	add    %ecx,%esi
8200381e:	01 cf                	add    %ecx,%edi
82003820:	fd                   	std    
82003821:	83 f9 08             	cmp    $0x8,%ecx
82003824:	76 2b                	jbe    82003851 <memmove+0x51>
82003826:	89 fa                	mov    %edi,%edx
82003828:	89 cb                	mov    %ecx,%ebx
8200382a:	83 e2 03             	and    $0x3,%edx
8200382d:	74 0c                	je     8200383b <memmove+0x3b>
8200382f:	89 d1                	mov    %edx,%ecx
82003831:	4e                   	dec    %esi
82003832:	4f                   	dec    %edi
82003833:	29 cb                	sub    %ecx,%ebx
82003835:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003837:	89 d9                	mov    %ebx,%ecx
82003839:	46                   	inc    %esi
8200383a:	47                   	inc    %edi
8200383b:	c1 e9 02             	shr    $0x2,%ecx
8200383e:	83 ee 04             	sub    $0x4,%esi
82003841:	83 ef 04             	sub    $0x4,%edi
82003844:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
82003846:	83 c6 04             	add    $0x4,%esi
82003849:	83 c7 04             	add    $0x4,%edi
8200384c:	89 d9                	mov    %ebx,%ecx
8200384e:	83 e1 03             	and    $0x3,%ecx
82003851:	4e                   	dec    %esi
82003852:	4f                   	dec    %edi
82003853:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003855:	eb 2a                	jmp    82003881 <memmove+0x81>
82003857:	83 f9 08             	cmp    $0x8,%ecx
8200385a:	76 23                	jbe    8200387f <memmove+0x7f>
8200385c:	89 fa                	mov    %edi,%edx
8200385e:	89 cb                	mov    %ecx,%ebx
82003860:	83 e2 03             	and    $0x3,%edx
82003863:	74 10                	je     82003875 <memmove+0x75>
82003865:	b9 04 00 00 00       	mov    $0x4,%ecx
8200386a:	29 d1                	sub    %edx,%ecx
8200386c:	83 e1 03             	and    $0x3,%ecx
8200386f:	29 cb                	sub    %ecx,%ebx
82003871:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003873:	89 d9                	mov    %ebx,%ecx
82003875:	c1 e9 02             	shr    $0x2,%ecx
82003878:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8200387a:	89 d9                	mov    %ebx,%ecx
8200387c:	83 e1 03             	and    $0x3,%ecx
8200387f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
82003881:	8b 45 08             	mov    0x8(%ebp),%eax
82003884:	fc                   	cld    
82003885:	8d 65 f4             	lea    -0xc(%ebp),%esp
82003888:	5b                   	pop    %ebx
82003889:	5f                   	pop    %edi
8200388a:	5e                   	pop    %esi
8200388b:	c9                   	leave  
8200388c:	c3                   	ret    

8200388d <memset>:
8200388d:	55                   	push   %ebp
8200388e:	89 e5                	mov    %esp,%ebp
82003890:	57                   	push   %edi
82003891:	8b 7d 08             	mov    0x8(%ebp),%edi
82003894:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
82003898:	8b 4d 10             	mov    0x10(%ebp),%ecx
8200389b:	fc                   	cld    
8200389c:	83 f9 10             	cmp    $0x10,%ecx
8200389f:	76 69                	jbe    8200390a <memset+0x7d>
820038a1:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038a7:	74 4c                	je     820038f5 <memset+0x68>
820038a9:	88 07                	mov    %al,(%edi)
820038ab:	47                   	inc    %edi
820038ac:	49                   	dec    %ecx
820038ad:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038b3:	74 40                	je     820038f5 <memset+0x68>
820038b5:	88 07                	mov    %al,(%edi)
820038b7:	47                   	inc    %edi
820038b8:	49                   	dec    %ecx
820038b9:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038bf:	74 34                	je     820038f5 <memset+0x68>
820038c1:	88 07                	mov    %al,(%edi)
820038c3:	47                   	inc    %edi
820038c4:	49                   	dec    %ecx
820038c5:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038cb:	74 28                	je     820038f5 <memset+0x68>
820038cd:	88 07                	mov    %al,(%edi)
820038cf:	47                   	inc    %edi
820038d0:	49                   	dec    %ecx
820038d1:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038d7:	74 1c                	je     820038f5 <memset+0x68>
820038d9:	88 07                	mov    %al,(%edi)
820038db:	47                   	inc    %edi
820038dc:	49                   	dec    %ecx
820038dd:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038e3:	74 10                	je     820038f5 <memset+0x68>
820038e5:	88 07                	mov    %al,(%edi)
820038e7:	47                   	inc    %edi
820038e8:	49                   	dec    %ecx
820038e9:	f7 c7 07 00 00 00    	test   $0x7,%edi
820038ef:	74 04                	je     820038f5 <memset+0x68>
820038f1:	88 07                	mov    %al,(%edi)
820038f3:	47                   	inc    %edi
820038f4:	49                   	dec    %ecx
820038f5:	88 c4                	mov    %al,%ah
820038f7:	89 c2                	mov    %eax,%edx
820038f9:	c1 e2 10             	shl    $0x10,%edx
820038fc:	09 d0                	or     %edx,%eax
820038fe:	89 ca                	mov    %ecx,%edx
82003900:	c1 e9 02             	shr    $0x2,%ecx
82003903:	83 e2 03             	and    $0x3,%edx
82003906:	f3 ab                	rep stos %eax,%es:(%edi)
82003908:	89 d1                	mov    %edx,%ecx
8200390a:	f3 aa                	rep stos %al,%es:(%edi)
8200390c:	8b 45 08             	mov    0x8(%ebp),%eax
8200390f:	8d 65 fc             	lea    -0x4(%ebp),%esp
82003912:	5f                   	pop    %edi
82003913:	c9                   	leave  
82003914:	c3                   	ret    

82003915 <_realloc_r>:
82003915:	55                   	push   %ebp
82003916:	89 e5                	mov    %esp,%ebp
82003918:	83 ec 78             	sub    $0x78,%esp
8200391b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8200391f:	75 16                	jne    82003937 <_realloc_r+0x22>
82003921:	83 ec 08             	sub    $0x8,%esp
82003924:	ff 75 10             	push   0x10(%ebp)
82003927:	ff 75 08             	push   0x8(%ebp)
8200392a:	e8 b6 ce ff ff       	call   820007e5 <_malloc_r>
8200392f:	83 c4 10             	add    $0x10,%esp
82003932:	e9 b6 08 00 00       	jmp    820041ed <_realloc_r+0x8d8>
82003937:	83 ec 0c             	sub    $0xc,%esp
8200393a:	ff 75 08             	push   0x8(%ebp)
8200393d:	e8 c5 d6 ff ff       	call   82001007 <__malloc_lock>
82003942:	83 c4 10             	add    $0x10,%esp
82003945:	8b 45 0c             	mov    0xc(%ebp),%eax
82003948:	83 e8 08             	sub    $0x8,%eax
8200394b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8200394e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003951:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003954:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003957:	8b 40 04             	mov    0x4(%eax),%eax
8200395a:	83 e0 fc             	and    $0xfffffffc,%eax
8200395d:	89 45 c0             	mov    %eax,-0x40(%ebp)
82003960:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003963:	89 45 f0             	mov    %eax,-0x10(%ebp)
82003966:	8b 45 10             	mov    0x10(%ebp),%eax
82003969:	83 c0 0b             	add    $0xb,%eax
8200396c:	83 f8 16             	cmp    $0x16,%eax
8200396f:	76 0b                	jbe    8200397c <_realloc_r+0x67>
82003971:	8b 45 10             	mov    0x10(%ebp),%eax
82003974:	83 c0 0b             	add    $0xb,%eax
82003977:	83 e0 f8             	and    $0xfffffff8,%eax
8200397a:	eb 05                	jmp    82003981 <_realloc_r+0x6c>
8200397c:	b8 10 00 00 00       	mov    $0x10,%eax
82003981:	89 45 bc             	mov    %eax,-0x44(%ebp)
82003984:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003987:	85 c0                	test   %eax,%eax
82003989:	78 08                	js     82003993 <_realloc_r+0x7e>
8200398b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8200398e:	3b 45 10             	cmp    0x10(%ebp),%eax
82003991:	73 13                	jae    820039a6 <_realloc_r+0x91>
82003993:	8b 45 08             	mov    0x8(%ebp),%eax
82003996:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8200399c:	b8 00 00 00 00       	mov    $0x0,%eax
820039a1:	e9 47 08 00 00       	jmp    820041ed <_realloc_r+0x8d8>
820039a6:	8b 55 c0             	mov    -0x40(%ebp),%edx
820039a9:	8b 45 bc             	mov    -0x44(%ebp),%eax
820039ac:	39 c2                	cmp    %eax,%edx
820039ae:	0f 8d 8b 07 00 00    	jge    8200413f <_realloc_r+0x82a>
820039b4:	8b 55 c4             	mov    -0x3c(%ebp),%edx
820039b7:	8b 45 c0             	mov    -0x40(%ebp),%eax
820039ba:	01 d0                	add    %edx,%eax
820039bc:	89 45 ec             	mov    %eax,-0x14(%ebp)
820039bf:	b8 40 50 00 82       	mov    $0x82005040,%eax
820039c4:	8b 40 08             	mov    0x8(%eax),%eax
820039c7:	39 45 ec             	cmp    %eax,-0x14(%ebp)
820039ca:	74 1e                	je     820039ea <_realloc_r+0xd5>
820039cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
820039cf:	8b 40 04             	mov    0x4(%eax),%eax
820039d2:	83 e0 fe             	and    $0xfffffffe,%eax
820039d5:	89 c2                	mov    %eax,%edx
820039d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
820039da:	01 d0                	add    %edx,%eax
820039dc:	8b 40 04             	mov    0x4(%eax),%eax
820039df:	83 e0 01             	and    $0x1,%eax
820039e2:	85 c0                	test   %eax,%eax
820039e4:	0f 85 ca 00 00 00    	jne    82003ab4 <_realloc_r+0x19f>
820039ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
820039ed:	8b 40 04             	mov    0x4(%eax),%eax
820039f0:	83 e0 fc             	and    $0xfffffffc,%eax
820039f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
820039f6:	b8 40 50 00 82       	mov    $0x82005040,%eax
820039fb:	8b 40 08             	mov    0x8(%eax),%eax
820039fe:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82003a01:	75 71                	jne    82003a74 <_realloc_r+0x15f>
82003a03:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003a06:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003a09:	01 d0                	add    %edx,%eax
82003a0b:	89 c2                	mov    %eax,%edx
82003a0d:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003a10:	83 c0 10             	add    $0x10,%eax
82003a13:	39 c2                	cmp    %eax,%edx
82003a15:	0f 8c a9 00 00 00    	jl     82003ac4 <_realloc_r+0x1af>
82003a1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
82003a1e:	01 45 f0             	add    %eax,-0x10(%ebp)
82003a21:	ba 40 50 00 82       	mov    $0x82005040,%edx
82003a26:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
82003a29:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003a2c:	01 c8                	add    %ecx,%eax
82003a2e:	89 42 08             	mov    %eax,0x8(%edx)
82003a31:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003a34:	2b 45 bc             	sub    -0x44(%ebp),%eax
82003a37:	89 c2                	mov    %eax,%edx
82003a39:	b8 40 50 00 82       	mov    $0x82005040,%eax
82003a3e:	8b 40 08             	mov    0x8(%eax),%eax
82003a41:	83 ca 01             	or     $0x1,%edx
82003a44:	89 50 04             	mov    %edx,0x4(%eax)
82003a47:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003a4a:	8b 40 04             	mov    0x4(%eax),%eax
82003a4d:	83 e0 01             	and    $0x1,%eax
82003a50:	0b 45 bc             	or     -0x44(%ebp),%eax
82003a53:	89 c2                	mov    %eax,%edx
82003a55:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003a58:	89 50 04             	mov    %edx,0x4(%eax)
82003a5b:	83 ec 0c             	sub    $0xc,%esp
82003a5e:	ff 75 08             	push   0x8(%ebp)
82003a61:	e8 a7 d5 ff ff       	call   8200100d <__malloc_unlock>
82003a66:	83 c4 10             	add    $0x10,%esp
82003a69:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003a6c:	83 c0 08             	add    $0x8,%eax
82003a6f:	e9 79 07 00 00       	jmp    820041ed <_realloc_r+0x8d8>
82003a74:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003a77:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003a7a:	01 d0                	add    %edx,%eax
82003a7c:	89 c2                	mov    %eax,%edx
82003a7e:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003a81:	39 c2                	cmp    %eax,%edx
82003a83:	7c 3f                	jl     82003ac4 <_realloc_r+0x1af>
82003a85:	8b 45 ec             	mov    -0x14(%ebp),%eax
82003a88:	8b 40 0c             	mov    0xc(%eax),%eax
82003a8b:	89 45 b8             	mov    %eax,-0x48(%ebp)
82003a8e:	8b 45 ec             	mov    -0x14(%ebp),%eax
82003a91:	8b 40 08             	mov    0x8(%eax),%eax
82003a94:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82003a97:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82003a9a:	8b 55 b8             	mov    -0x48(%ebp),%edx
82003a9d:	89 50 0c             	mov    %edx,0xc(%eax)
82003aa0:	8b 45 b8             	mov    -0x48(%ebp),%eax
82003aa3:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82003aa6:	89 50 08             	mov    %edx,0x8(%eax)
82003aa9:	8b 45 e8             	mov    -0x18(%ebp),%eax
82003aac:	01 45 f0             	add    %eax,-0x10(%ebp)
82003aaf:	e9 8c 06 00 00       	jmp    82004140 <_realloc_r+0x82b>
82003ab4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
82003abb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
82003ac2:	eb 01                	jmp    82003ac5 <_realloc_r+0x1b0>
82003ac4:	90                   	nop
82003ac5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003ac8:	8b 40 04             	mov    0x4(%eax),%eax
82003acb:	83 e0 01             	and    $0x1,%eax
82003ace:	85 c0                	test   %eax,%eax
82003ad0:	0f 85 d6 04 00 00    	jne    82003fac <_realloc_r+0x697>
82003ad6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003ad9:	8b 00                	mov    (%eax),%eax
82003adb:	f7 d8                	neg    %eax
82003add:	89 c2                	mov    %eax,%edx
82003adf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003ae2:	01 d0                	add    %edx,%eax
82003ae4:	89 45 b0             	mov    %eax,-0x50(%ebp)
82003ae7:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003aea:	8b 40 04             	mov    0x4(%eax),%eax
82003aed:	83 e0 fc             	and    $0xfffffffc,%eax
82003af0:	89 45 ac             	mov    %eax,-0x54(%ebp)
82003af3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
82003af7:	0f 84 4a 03 00 00    	je     82003e47 <_realloc_r+0x532>
82003afd:	b8 40 50 00 82       	mov    $0x82005040,%eax
82003b02:	8b 40 08             	mov    0x8(%eax),%eax
82003b05:	39 45 ec             	cmp    %eax,-0x14(%ebp)
82003b08:	0f 85 b0 01 00 00    	jne    82003cbe <_realloc_r+0x3a9>
82003b0e:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003b11:	8b 45 ac             	mov    -0x54(%ebp),%eax
82003b14:	01 c2                	add    %eax,%edx
82003b16:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003b19:	01 d0                	add    %edx,%eax
82003b1b:	89 c2                	mov    %eax,%edx
82003b1d:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003b20:	83 c0 10             	add    $0x10,%eax
82003b23:	39 c2                	cmp    %eax,%edx
82003b25:	0f 8c 1c 03 00 00    	jl     82003e47 <_realloc_r+0x532>
82003b2b:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003b2e:	8b 40 0c             	mov    0xc(%eax),%eax
82003b31:	89 45 b8             	mov    %eax,-0x48(%ebp)
82003b34:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003b37:	8b 40 08             	mov    0x8(%eax),%eax
82003b3a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82003b3d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82003b40:	8b 55 b8             	mov    -0x48(%ebp),%edx
82003b43:	89 50 0c             	mov    %edx,0xc(%eax)
82003b46:	8b 45 b8             	mov    -0x48(%ebp),%eax
82003b49:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82003b4c:	89 50 08             	mov    %edx,0x8(%eax)
82003b4f:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003b52:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003b55:	8b 55 ac             	mov    -0x54(%ebp),%edx
82003b58:	8b 45 e8             	mov    -0x18(%ebp),%eax
82003b5b:	01 d0                	add    %edx,%eax
82003b5d:	01 45 f0             	add    %eax,-0x10(%ebp)
82003b60:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003b63:	83 c0 08             	add    $0x8,%eax
82003b66:	89 45 a8             	mov    %eax,-0x58(%ebp)
82003b69:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003b6c:	83 e8 04             	sub    $0x4,%eax
82003b6f:	89 45 a0             	mov    %eax,-0x60(%ebp)
82003b72:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
82003b76:	0f 87 de 00 00 00    	ja     82003c5a <_realloc_r+0x345>
82003b7c:	8b 45 0c             	mov    0xc(%ebp),%eax
82003b7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003b82:	8b 45 a8             	mov    -0x58(%ebp),%eax
82003b85:	89 45 e0             	mov    %eax,-0x20(%ebp)
82003b88:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
82003b8c:	0f 86 90 00 00 00    	jbe    82003c22 <_realloc_r+0x30d>
82003b92:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003b95:	8d 42 04             	lea    0x4(%edx),%eax
82003b98:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003b9b:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003b9e:	8d 48 04             	lea    0x4(%eax),%ecx
82003ba1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003ba4:	8b 12                	mov    (%edx),%edx
82003ba6:	89 10                	mov    %edx,(%eax)
82003ba8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003bab:	8d 42 04             	lea    0x4(%edx),%eax
82003bae:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003bb1:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003bb4:	8d 48 04             	lea    0x4(%eax),%ecx
82003bb7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003bba:	8b 12                	mov    (%edx),%edx
82003bbc:	89 10                	mov    %edx,(%eax)
82003bbe:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
82003bc2:	76 5e                	jbe    82003c22 <_realloc_r+0x30d>
82003bc4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003bc7:	8d 42 04             	lea    0x4(%edx),%eax
82003bca:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003bcd:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003bd0:	8d 48 04             	lea    0x4(%eax),%ecx
82003bd3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003bd6:	8b 12                	mov    (%edx),%edx
82003bd8:	89 10                	mov    %edx,(%eax)
82003bda:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003bdd:	8d 42 04             	lea    0x4(%edx),%eax
82003be0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003be3:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003be6:	8d 48 04             	lea    0x4(%eax),%ecx
82003be9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003bec:	8b 12                	mov    (%edx),%edx
82003bee:	89 10                	mov    %edx,(%eax)
82003bf0:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
82003bf4:	76 2c                	jbe    82003c22 <_realloc_r+0x30d>
82003bf6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003bf9:	8d 42 04             	lea    0x4(%edx),%eax
82003bfc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003bff:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003c02:	8d 48 04             	lea    0x4(%eax),%ecx
82003c05:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003c08:	8b 12                	mov    (%edx),%edx
82003c0a:	89 10                	mov    %edx,(%eax)
82003c0c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003c0f:	8d 42 04             	lea    0x4(%edx),%eax
82003c12:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003c15:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003c18:	8d 48 04             	lea    0x4(%eax),%ecx
82003c1b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003c1e:	8b 12                	mov    (%edx),%edx
82003c20:	89 10                	mov    %edx,(%eax)
82003c22:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003c25:	8d 42 04             	lea    0x4(%edx),%eax
82003c28:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003c2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003c2e:	8d 48 04             	lea    0x4(%eax),%ecx
82003c31:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003c34:	8b 12                	mov    (%edx),%edx
82003c36:	89 10                	mov    %edx,(%eax)
82003c38:	8b 55 e4             	mov    -0x1c(%ebp),%edx
82003c3b:	8d 42 04             	lea    0x4(%edx),%eax
82003c3e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
82003c41:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003c44:	8d 48 04             	lea    0x4(%eax),%ecx
82003c47:	89 4d e0             	mov    %ecx,-0x20(%ebp)
82003c4a:	8b 12                	mov    (%edx),%edx
82003c4c:	89 10                	mov    %edx,(%eax)
82003c4e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
82003c51:	8b 10                	mov    (%eax),%edx
82003c53:	8b 45 e0             	mov    -0x20(%ebp),%eax
82003c56:	89 10                	mov    %edx,(%eax)
82003c58:	eb 14                	jmp    82003c6e <_realloc_r+0x359>
82003c5a:	83 ec 04             	sub    $0x4,%esp
82003c5d:	ff 75 a0             	push   -0x60(%ebp)
82003c60:	ff 75 0c             	push   0xc(%ebp)
82003c63:	ff 75 a8             	push   -0x58(%ebp)
82003c66:	e8 95 fb ff ff       	call   82003800 <memmove>
82003c6b:	83 c4 10             	add    $0x10,%esp
82003c6e:	ba 40 50 00 82       	mov    $0x82005040,%edx
82003c73:	8b 4d f4             	mov    -0xc(%ebp),%ecx
82003c76:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003c79:	01 c8                	add    %ecx,%eax
82003c7b:	89 42 08             	mov    %eax,0x8(%edx)
82003c7e:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003c81:	2b 45 bc             	sub    -0x44(%ebp),%eax
82003c84:	89 c2                	mov    %eax,%edx
82003c86:	b8 40 50 00 82       	mov    $0x82005040,%eax
82003c8b:	8b 40 08             	mov    0x8(%eax),%eax
82003c8e:	83 ca 01             	or     $0x1,%edx
82003c91:	89 50 04             	mov    %edx,0x4(%eax)
82003c94:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003c97:	8b 40 04             	mov    0x4(%eax),%eax
82003c9a:	83 e0 01             	and    $0x1,%eax
82003c9d:	0b 45 bc             	or     -0x44(%ebp),%eax
82003ca0:	89 c2                	mov    %eax,%edx
82003ca2:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003ca5:	89 50 04             	mov    %edx,0x4(%eax)
82003ca8:	83 ec 0c             	sub    $0xc,%esp
82003cab:	ff 75 08             	push   0x8(%ebp)
82003cae:	e8 5a d3 ff ff       	call   8200100d <__malloc_unlock>
82003cb3:	83 c4 10             	add    $0x10,%esp
82003cb6:	8b 45 a8             	mov    -0x58(%ebp),%eax
82003cb9:	e9 2f 05 00 00       	jmp    820041ed <_realloc_r+0x8d8>
82003cbe:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003cc1:	8b 45 ac             	mov    -0x54(%ebp),%eax
82003cc4:	01 c2                	add    %eax,%edx
82003cc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003cc9:	01 d0                	add    %edx,%eax
82003ccb:	89 c2                	mov    %eax,%edx
82003ccd:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003cd0:	39 c2                	cmp    %eax,%edx
82003cd2:	0f 8c 6f 01 00 00    	jl     82003e47 <_realloc_r+0x532>
82003cd8:	8b 45 ec             	mov    -0x14(%ebp),%eax
82003cdb:	8b 40 0c             	mov    0xc(%eax),%eax
82003cde:	89 45 b8             	mov    %eax,-0x48(%ebp)
82003ce1:	8b 45 ec             	mov    -0x14(%ebp),%eax
82003ce4:	8b 40 08             	mov    0x8(%eax),%eax
82003ce7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82003cea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82003ced:	8b 55 b8             	mov    -0x48(%ebp),%edx
82003cf0:	89 50 0c             	mov    %edx,0xc(%eax)
82003cf3:	8b 45 b8             	mov    -0x48(%ebp),%eax
82003cf6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82003cf9:	89 50 08             	mov    %edx,0x8(%eax)
82003cfc:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003cff:	8b 40 0c             	mov    0xc(%eax),%eax
82003d02:	89 45 b8             	mov    %eax,-0x48(%ebp)
82003d05:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003d08:	8b 40 08             	mov    0x8(%eax),%eax
82003d0b:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82003d0e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82003d11:	8b 55 b8             	mov    -0x48(%ebp),%edx
82003d14:	89 50 0c             	mov    %edx,0xc(%eax)
82003d17:	8b 45 b8             	mov    -0x48(%ebp),%eax
82003d1a:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82003d1d:	89 50 08             	mov    %edx,0x8(%eax)
82003d20:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003d23:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003d26:	8b 55 e8             	mov    -0x18(%ebp),%edx
82003d29:	8b 45 ac             	mov    -0x54(%ebp),%eax
82003d2c:	01 d0                	add    %edx,%eax
82003d2e:	01 45 f0             	add    %eax,-0x10(%ebp)
82003d31:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003d34:	83 c0 08             	add    $0x8,%eax
82003d37:	89 45 a8             	mov    %eax,-0x58(%ebp)
82003d3a:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003d3d:	83 e8 04             	sub    $0x4,%eax
82003d40:	89 45 a4             	mov    %eax,-0x5c(%ebp)
82003d43:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
82003d47:	0f 87 e1 00 00 00    	ja     82003e2e <_realloc_r+0x519>
82003d4d:	8b 45 0c             	mov    0xc(%ebp),%eax
82003d50:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003d53:	8b 45 a8             	mov    -0x58(%ebp),%eax
82003d56:	89 45 d8             	mov    %eax,-0x28(%ebp)
82003d59:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
82003d5d:	0f 86 90 00 00 00    	jbe    82003df3 <_realloc_r+0x4de>
82003d63:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003d66:	8d 42 04             	lea    0x4(%edx),%eax
82003d69:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003d6c:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003d6f:	8d 48 04             	lea    0x4(%eax),%ecx
82003d72:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003d75:	8b 12                	mov    (%edx),%edx
82003d77:	89 10                	mov    %edx,(%eax)
82003d79:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003d7c:	8d 42 04             	lea    0x4(%edx),%eax
82003d7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003d82:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003d85:	8d 48 04             	lea    0x4(%eax),%ecx
82003d88:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003d8b:	8b 12                	mov    (%edx),%edx
82003d8d:	89 10                	mov    %edx,(%eax)
82003d8f:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
82003d93:	76 5e                	jbe    82003df3 <_realloc_r+0x4de>
82003d95:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003d98:	8d 42 04             	lea    0x4(%edx),%eax
82003d9b:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003d9e:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003da1:	8d 48 04             	lea    0x4(%eax),%ecx
82003da4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003da7:	8b 12                	mov    (%edx),%edx
82003da9:	89 10                	mov    %edx,(%eax)
82003dab:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003dae:	8d 42 04             	lea    0x4(%edx),%eax
82003db1:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003db4:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003db7:	8d 48 04             	lea    0x4(%eax),%ecx
82003dba:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003dbd:	8b 12                	mov    (%edx),%edx
82003dbf:	89 10                	mov    %edx,(%eax)
82003dc1:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
82003dc5:	76 2c                	jbe    82003df3 <_realloc_r+0x4de>
82003dc7:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003dca:	8d 42 04             	lea    0x4(%edx),%eax
82003dcd:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003dd0:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003dd3:	8d 48 04             	lea    0x4(%eax),%ecx
82003dd6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003dd9:	8b 12                	mov    (%edx),%edx
82003ddb:	89 10                	mov    %edx,(%eax)
82003ddd:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003de0:	8d 42 04             	lea    0x4(%edx),%eax
82003de3:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003de6:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003de9:	8d 48 04             	lea    0x4(%eax),%ecx
82003dec:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003def:	8b 12                	mov    (%edx),%edx
82003df1:	89 10                	mov    %edx,(%eax)
82003df3:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003df6:	8d 42 04             	lea    0x4(%edx),%eax
82003df9:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003dfc:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003dff:	8d 48 04             	lea    0x4(%eax),%ecx
82003e02:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003e05:	8b 12                	mov    (%edx),%edx
82003e07:	89 10                	mov    %edx,(%eax)
82003e09:	8b 55 dc             	mov    -0x24(%ebp),%edx
82003e0c:	8d 42 04             	lea    0x4(%edx),%eax
82003e0f:	89 45 dc             	mov    %eax,-0x24(%ebp)
82003e12:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003e15:	8d 48 04             	lea    0x4(%eax),%ecx
82003e18:	89 4d d8             	mov    %ecx,-0x28(%ebp)
82003e1b:	8b 12                	mov    (%edx),%edx
82003e1d:	89 10                	mov    %edx,(%eax)
82003e1f:	8b 45 dc             	mov    -0x24(%ebp),%eax
82003e22:	8b 10                	mov    (%eax),%edx
82003e24:	8b 45 d8             	mov    -0x28(%ebp),%eax
82003e27:	89 10                	mov    %edx,(%eax)
82003e29:	e9 12 03 00 00       	jmp    82004140 <_realloc_r+0x82b>
82003e2e:	83 ec 04             	sub    $0x4,%esp
82003e31:	ff 75 a4             	push   -0x5c(%ebp)
82003e34:	ff 75 0c             	push   0xc(%ebp)
82003e37:	ff 75 a8             	push   -0x58(%ebp)
82003e3a:	e8 c1 f9 ff ff       	call   82003800 <memmove>
82003e3f:	83 c4 10             	add    $0x10,%esp
82003e42:	e9 f9 02 00 00       	jmp    82004140 <_realloc_r+0x82b>
82003e47:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
82003e4b:	0f 84 5b 01 00 00    	je     82003fac <_realloc_r+0x697>
82003e51:	8b 55 ac             	mov    -0x54(%ebp),%edx
82003e54:	8b 45 f0             	mov    -0x10(%ebp),%eax
82003e57:	01 d0                	add    %edx,%eax
82003e59:	89 c2                	mov    %eax,%edx
82003e5b:	8b 45 bc             	mov    -0x44(%ebp),%eax
82003e5e:	39 c2                	cmp    %eax,%edx
82003e60:	0f 8c 46 01 00 00    	jl     82003fac <_realloc_r+0x697>
82003e66:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003e69:	8b 40 0c             	mov    0xc(%eax),%eax
82003e6c:	89 45 b8             	mov    %eax,-0x48(%ebp)
82003e6f:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003e72:	8b 40 08             	mov    0x8(%eax),%eax
82003e75:	89 45 b4             	mov    %eax,-0x4c(%ebp)
82003e78:	8b 45 b4             	mov    -0x4c(%ebp),%eax
82003e7b:	8b 55 b8             	mov    -0x48(%ebp),%edx
82003e7e:	89 50 0c             	mov    %edx,0xc(%eax)
82003e81:	8b 45 b8             	mov    -0x48(%ebp),%eax
82003e84:	8b 55 b4             	mov    -0x4c(%ebp),%edx
82003e87:	89 50 08             	mov    %edx,0x8(%eax)
82003e8a:	8b 45 b0             	mov    -0x50(%ebp),%eax
82003e8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003e90:	8b 45 ac             	mov    -0x54(%ebp),%eax
82003e93:	01 45 f0             	add    %eax,-0x10(%ebp)
82003e96:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003e99:	83 c0 08             	add    $0x8,%eax
82003e9c:	89 45 a8             	mov    %eax,-0x58(%ebp)
82003e9f:	8b 45 c0             	mov    -0x40(%ebp),%eax
82003ea2:	83 e8 04             	sub    $0x4,%eax
82003ea5:	89 45 9c             	mov    %eax,-0x64(%ebp)
82003ea8:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
82003eac:	0f 87 e1 00 00 00    	ja     82003f93 <_realloc_r+0x67e>
82003eb2:	8b 45 0c             	mov    0xc(%ebp),%eax
82003eb5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003eb8:	8b 45 a8             	mov    -0x58(%ebp),%eax
82003ebb:	89 45 d0             	mov    %eax,-0x30(%ebp)
82003ebe:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
82003ec2:	0f 86 90 00 00 00    	jbe    82003f58 <_realloc_r+0x643>
82003ec8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003ecb:	8d 42 04             	lea    0x4(%edx),%eax
82003ece:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003ed1:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003ed4:	8d 48 04             	lea    0x4(%eax),%ecx
82003ed7:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003eda:	8b 12                	mov    (%edx),%edx
82003edc:	89 10                	mov    %edx,(%eax)
82003ede:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003ee1:	8d 42 04             	lea    0x4(%edx),%eax
82003ee4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003ee7:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003eea:	8d 48 04             	lea    0x4(%eax),%ecx
82003eed:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003ef0:	8b 12                	mov    (%edx),%edx
82003ef2:	89 10                	mov    %edx,(%eax)
82003ef4:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
82003ef8:	76 5e                	jbe    82003f58 <_realloc_r+0x643>
82003efa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003efd:	8d 42 04             	lea    0x4(%edx),%eax
82003f00:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f03:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f06:	8d 48 04             	lea    0x4(%eax),%ecx
82003f09:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f0c:	8b 12                	mov    (%edx),%edx
82003f0e:	89 10                	mov    %edx,(%eax)
82003f10:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003f13:	8d 42 04             	lea    0x4(%edx),%eax
82003f16:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f19:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f1c:	8d 48 04             	lea    0x4(%eax),%ecx
82003f1f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f22:	8b 12                	mov    (%edx),%edx
82003f24:	89 10                	mov    %edx,(%eax)
82003f26:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
82003f2a:	76 2c                	jbe    82003f58 <_realloc_r+0x643>
82003f2c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003f2f:	8d 42 04             	lea    0x4(%edx),%eax
82003f32:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f35:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f38:	8d 48 04             	lea    0x4(%eax),%ecx
82003f3b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f3e:	8b 12                	mov    (%edx),%edx
82003f40:	89 10                	mov    %edx,(%eax)
82003f42:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003f45:	8d 42 04             	lea    0x4(%edx),%eax
82003f48:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f4b:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f4e:	8d 48 04             	lea    0x4(%eax),%ecx
82003f51:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f54:	8b 12                	mov    (%edx),%edx
82003f56:	89 10                	mov    %edx,(%eax)
82003f58:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003f5b:	8d 42 04             	lea    0x4(%edx),%eax
82003f5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f61:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f64:	8d 48 04             	lea    0x4(%eax),%ecx
82003f67:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f6a:	8b 12                	mov    (%edx),%edx
82003f6c:	89 10                	mov    %edx,(%eax)
82003f6e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
82003f71:	8d 42 04             	lea    0x4(%edx),%eax
82003f74:	89 45 d4             	mov    %eax,-0x2c(%ebp)
82003f77:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f7a:	8d 48 04             	lea    0x4(%eax),%ecx
82003f7d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
82003f80:	8b 12                	mov    (%edx),%edx
82003f82:	89 10                	mov    %edx,(%eax)
82003f84:	8b 45 d4             	mov    -0x2c(%ebp),%eax
82003f87:	8b 10                	mov    (%eax),%edx
82003f89:	8b 45 d0             	mov    -0x30(%ebp),%eax
82003f8c:	89 10                	mov    %edx,(%eax)
82003f8e:	e9 ad 01 00 00       	jmp    82004140 <_realloc_r+0x82b>
82003f93:	83 ec 04             	sub    $0x4,%esp
82003f96:	ff 75 9c             	push   -0x64(%ebp)
82003f99:	ff 75 0c             	push   0xc(%ebp)
82003f9c:	ff 75 a8             	push   -0x58(%ebp)
82003f9f:	e8 5c f8 ff ff       	call   82003800 <memmove>
82003fa4:	83 c4 10             	add    $0x10,%esp
82003fa7:	e9 94 01 00 00       	jmp    82004140 <_realloc_r+0x82b>
82003fac:	83 ec 08             	sub    $0x8,%esp
82003faf:	ff 75 10             	push   0x10(%ebp)
82003fb2:	ff 75 08             	push   0x8(%ebp)
82003fb5:	e8 2b c8 ff ff       	call   820007e5 <_malloc_r>
82003fba:	83 c4 10             	add    $0x10,%esp
82003fbd:	89 45 a8             	mov    %eax,-0x58(%ebp)
82003fc0:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
82003fc4:	75 18                	jne    82003fde <_realloc_r+0x6c9>
82003fc6:	83 ec 0c             	sub    $0xc,%esp
82003fc9:	ff 75 08             	push   0x8(%ebp)
82003fcc:	e8 3c d0 ff ff       	call   8200100d <__malloc_unlock>
82003fd1:	83 c4 10             	add    $0x10,%esp
82003fd4:	b8 00 00 00 00       	mov    $0x0,%eax
82003fd9:	e9 0f 02 00 00       	jmp    820041ed <_realloc_r+0x8d8>
82003fde:	8b 45 a8             	mov    -0x58(%ebp),%eax
82003fe1:	83 e8 08             	sub    $0x8,%eax
82003fe4:	89 45 f4             	mov    %eax,-0xc(%ebp)
82003fe7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003fea:	8b 40 04             	mov    0x4(%eax),%eax
82003fed:	83 e0 fe             	and    $0xfffffffe,%eax
82003ff0:	89 c2                	mov    %eax,%edx
82003ff2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
82003ff5:	01 d0                	add    %edx,%eax
82003ff7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
82003ffa:	75 17                	jne    82004013 <_realloc_r+0x6fe>
82003ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
82003fff:	8b 40 04             	mov    0x4(%eax),%eax
82004002:	83 e0 fc             	and    $0xfffffffc,%eax
82004005:	01 45 f0             	add    %eax,-0x10(%ebp)
82004008:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8200400b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200400e:	e9 2d 01 00 00       	jmp    82004140 <_realloc_r+0x82b>
82004013:	8b 45 c0             	mov    -0x40(%ebp),%eax
82004016:	83 e8 04             	sub    $0x4,%eax
82004019:	89 45 98             	mov    %eax,-0x68(%ebp)
8200401c:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
82004020:	0f 87 de 00 00 00    	ja     82004104 <_realloc_r+0x7ef>
82004026:	8b 45 0c             	mov    0xc(%ebp),%eax
82004029:	89 45 cc             	mov    %eax,-0x34(%ebp)
8200402c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8200402f:	89 45 c8             	mov    %eax,-0x38(%ebp)
82004032:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
82004036:	0f 86 90 00 00 00    	jbe    820040cc <_realloc_r+0x7b7>
8200403c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8200403f:	8d 42 04             	lea    0x4(%edx),%eax
82004042:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004045:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004048:	8d 48 04             	lea    0x4(%eax),%ecx
8200404b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8200404e:	8b 12                	mov    (%edx),%edx
82004050:	89 10                	mov    %edx,(%eax)
82004052:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004055:	8d 42 04             	lea    0x4(%edx),%eax
82004058:	89 45 cc             	mov    %eax,-0x34(%ebp)
8200405b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8200405e:	8d 48 04             	lea    0x4(%eax),%ecx
82004061:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004064:	8b 12                	mov    (%edx),%edx
82004066:	89 10                	mov    %edx,(%eax)
82004068:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8200406c:	76 5e                	jbe    820040cc <_realloc_r+0x7b7>
8200406e:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004071:	8d 42 04             	lea    0x4(%edx),%eax
82004074:	89 45 cc             	mov    %eax,-0x34(%ebp)
82004077:	8b 45 c8             	mov    -0x38(%ebp),%eax
8200407a:	8d 48 04             	lea    0x4(%eax),%ecx
8200407d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004080:	8b 12                	mov    (%edx),%edx
82004082:	89 10                	mov    %edx,(%eax)
82004084:	8b 55 cc             	mov    -0x34(%ebp),%edx
82004087:	8d 42 04             	lea    0x4(%edx),%eax
8200408a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8200408d:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004090:	8d 48 04             	lea    0x4(%eax),%ecx
82004093:	89 4d c8             	mov    %ecx,-0x38(%ebp)
82004096:	8b 12                	mov    (%edx),%edx
82004098:	89 10                	mov    %edx,(%eax)
8200409a:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8200409e:	76 2c                	jbe    820040cc <_realloc_r+0x7b7>
820040a0:	8b 55 cc             	mov    -0x34(%ebp),%edx
820040a3:	8d 42 04             	lea    0x4(%edx),%eax
820040a6:	89 45 cc             	mov    %eax,-0x34(%ebp)
820040a9:	8b 45 c8             	mov    -0x38(%ebp),%eax
820040ac:	8d 48 04             	lea    0x4(%eax),%ecx
820040af:	89 4d c8             	mov    %ecx,-0x38(%ebp)
820040b2:	8b 12                	mov    (%edx),%edx
820040b4:	89 10                	mov    %edx,(%eax)
820040b6:	8b 55 cc             	mov    -0x34(%ebp),%edx
820040b9:	8d 42 04             	lea    0x4(%edx),%eax
820040bc:	89 45 cc             	mov    %eax,-0x34(%ebp)
820040bf:	8b 45 c8             	mov    -0x38(%ebp),%eax
820040c2:	8d 48 04             	lea    0x4(%eax),%ecx
820040c5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
820040c8:	8b 12                	mov    (%edx),%edx
820040ca:	89 10                	mov    %edx,(%eax)
820040cc:	8b 55 cc             	mov    -0x34(%ebp),%edx
820040cf:	8d 42 04             	lea    0x4(%edx),%eax
820040d2:	89 45 cc             	mov    %eax,-0x34(%ebp)
820040d5:	8b 45 c8             	mov    -0x38(%ebp),%eax
820040d8:	8d 48 04             	lea    0x4(%eax),%ecx
820040db:	89 4d c8             	mov    %ecx,-0x38(%ebp)
820040de:	8b 12                	mov    (%edx),%edx
820040e0:	89 10                	mov    %edx,(%eax)
820040e2:	8b 55 cc             	mov    -0x34(%ebp),%edx
820040e5:	8d 42 04             	lea    0x4(%edx),%eax
820040e8:	89 45 cc             	mov    %eax,-0x34(%ebp)
820040eb:	8b 45 c8             	mov    -0x38(%ebp),%eax
820040ee:	8d 48 04             	lea    0x4(%eax),%ecx
820040f1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
820040f4:	8b 12                	mov    (%edx),%edx
820040f6:	89 10                	mov    %edx,(%eax)
820040f8:	8b 45 cc             	mov    -0x34(%ebp),%eax
820040fb:	8b 10                	mov    (%eax),%edx
820040fd:	8b 45 c8             	mov    -0x38(%ebp),%eax
82004100:	89 10                	mov    %edx,(%eax)
82004102:	eb 14                	jmp    82004118 <_realloc_r+0x803>
82004104:	83 ec 04             	sub    $0x4,%esp
82004107:	ff 75 98             	push   -0x68(%ebp)
8200410a:	ff 75 0c             	push   0xc(%ebp)
8200410d:	ff 75 a8             	push   -0x58(%ebp)
82004110:	e8 eb f6 ff ff       	call   82003800 <memmove>
82004115:	83 c4 10             	add    $0x10,%esp
82004118:	83 ec 08             	sub    $0x8,%esp
8200411b:	ff 75 0c             	push   0xc(%ebp)
8200411e:	ff 75 08             	push   0x8(%ebp)
82004121:	e8 a4 d0 ff ff       	call   820011ca <_free_r>
82004126:	83 c4 10             	add    $0x10,%esp
82004129:	83 ec 0c             	sub    $0xc,%esp
8200412c:	ff 75 08             	push   0x8(%ebp)
8200412f:	e8 d9 ce ff ff       	call   8200100d <__malloc_unlock>
82004134:	83 c4 10             	add    $0x10,%esp
82004137:	8b 45 a8             	mov    -0x58(%ebp),%eax
8200413a:	e9 ae 00 00 00       	jmp    820041ed <_realloc_r+0x8d8>
8200413f:	90                   	nop
82004140:	8b 45 f0             	mov    -0x10(%ebp),%eax
82004143:	2b 45 bc             	sub    -0x44(%ebp),%eax
82004146:	89 45 94             	mov    %eax,-0x6c(%ebp)
82004149:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8200414d:	76 5d                	jbe    820041ac <_realloc_r+0x897>
8200414f:	8b 55 f4             	mov    -0xc(%ebp),%edx
82004152:	8b 45 bc             	mov    -0x44(%ebp),%eax
82004155:	01 d0                	add    %edx,%eax
82004157:	89 45 90             	mov    %eax,-0x70(%ebp)
8200415a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200415d:	8b 40 04             	mov    0x4(%eax),%eax
82004160:	83 e0 01             	and    $0x1,%eax
82004163:	0b 45 bc             	or     -0x44(%ebp),%eax
82004166:	89 c2                	mov    %eax,%edx
82004168:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200416b:	89 50 04             	mov    %edx,0x4(%eax)
8200416e:	8b 45 94             	mov    -0x6c(%ebp),%eax
82004171:	83 c8 01             	or     $0x1,%eax
82004174:	89 c2                	mov    %eax,%edx
82004176:	8b 45 90             	mov    -0x70(%ebp),%eax
82004179:	89 50 04             	mov    %edx,0x4(%eax)
8200417c:	8b 55 90             	mov    -0x70(%ebp),%edx
8200417f:	8b 45 94             	mov    -0x6c(%ebp),%eax
82004182:	01 d0                	add    %edx,%eax
82004184:	8b 50 04             	mov    0x4(%eax),%edx
82004187:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8200418a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8200418d:	01 c8                	add    %ecx,%eax
8200418f:	83 ca 01             	or     $0x1,%edx
82004192:	89 50 04             	mov    %edx,0x4(%eax)
82004195:	8b 45 90             	mov    -0x70(%ebp),%eax
82004198:	83 c0 08             	add    $0x8,%eax
8200419b:	83 ec 08             	sub    $0x8,%esp
8200419e:	50                   	push   %eax
8200419f:	ff 75 08             	push   0x8(%ebp)
820041a2:	e8 23 d0 ff ff       	call   820011ca <_free_r>
820041a7:	83 c4 10             	add    $0x10,%esp
820041aa:	eb 2d                	jmp    820041d9 <_realloc_r+0x8c4>
820041ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
820041af:	8b 40 04             	mov    0x4(%eax),%eax
820041b2:	83 e0 01             	and    $0x1,%eax
820041b5:	0b 45 f0             	or     -0x10(%ebp),%eax
820041b8:	89 c2                	mov    %eax,%edx
820041ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
820041bd:	89 50 04             	mov    %edx,0x4(%eax)
820041c0:	8b 55 f4             	mov    -0xc(%ebp),%edx
820041c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
820041c6:	01 d0                	add    %edx,%eax
820041c8:	8b 50 04             	mov    0x4(%eax),%edx
820041cb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
820041ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
820041d1:	01 c8                	add    %ecx,%eax
820041d3:	83 ca 01             	or     $0x1,%edx
820041d6:	89 50 04             	mov    %edx,0x4(%eax)
820041d9:	83 ec 0c             	sub    $0xc,%esp
820041dc:	ff 75 08             	push   0x8(%ebp)
820041df:	e8 29 ce ff ff       	call   8200100d <__malloc_unlock>
820041e4:	83 c4 10             	add    $0x10,%esp
820041e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
820041ea:	83 c0 08             	add    $0x8,%eax
820041ed:	c9                   	leave  
820041ee:	c3                   	ret    

820041ef <__sread>:
820041ef:	55                   	push   %ebp
820041f0:	89 e5                	mov    %esp,%ebp
820041f2:	56                   	push   %esi
820041f3:	53                   	push   %ebx
820041f4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820041f7:	8b 55 14             	mov    0x14(%ebp),%edx
820041fa:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820041fe:	98                   	cwtl   
820041ff:	52                   	push   %edx
82004200:	ff 75 10             	push   0x10(%ebp)
82004203:	50                   	push   %eax
82004204:	ff 75 08             	push   0x8(%ebp)
82004207:	e8 98 05 00 00       	call   820047a4 <_read_r>
8200420c:	83 c4 10             	add    $0x10,%esp
8200420f:	89 c6                	mov    %eax,%esi
82004211:	85 f6                	test   %esi,%esi
82004213:	78 0a                	js     8200421f <__sread+0x30>
82004215:	8b 43 50             	mov    0x50(%ebx),%eax
82004218:	01 f0                	add    %esi,%eax
8200421a:	89 43 50             	mov    %eax,0x50(%ebx)
8200421d:	eb 0b                	jmp    8200422a <__sread+0x3b>
8200421f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004223:	80 e4 ef             	and    $0xef,%ah
82004226:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8200422a:	89 f0                	mov    %esi,%eax
8200422c:	8d 65 f8             	lea    -0x8(%ebp),%esp
8200422f:	5b                   	pop    %ebx
82004230:	5e                   	pop    %esi
82004231:	5d                   	pop    %ebp
82004232:	c3                   	ret    

82004233 <__seofread>:
82004233:	55                   	push   %ebp
82004234:	89 e5                	mov    %esp,%ebp
82004236:	b8 00 00 00 00       	mov    $0x0,%eax
8200423b:	5d                   	pop    %ebp
8200423c:	c3                   	ret    

8200423d <__swrite>:
8200423d:	55                   	push   %ebp
8200423e:	89 e5                	mov    %esp,%ebp
82004240:	53                   	push   %ebx
82004241:	83 ec 14             	sub    $0x14,%esp
82004244:	8b 5d 0c             	mov    0xc(%ebp),%ebx
82004247:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200424b:	98                   	cwtl   
8200424c:	25 00 01 00 00       	and    $0x100,%eax
82004251:	85 c0                	test   %eax,%eax
82004253:	74 15                	je     8200426a <__swrite+0x2d>
82004255:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
82004259:	98                   	cwtl   
8200425a:	6a 02                	push   $0x2
8200425c:	6a 00                	push   $0x0
8200425e:	50                   	push   %eax
8200425f:	ff 75 08             	push   0x8(%ebp)
82004262:	e8 f7 04 00 00       	call   8200475e <_lseek_r>
82004267:	83 c4 10             	add    $0x10,%esp
8200426a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8200426e:	80 e4 ef             	and    $0xef,%ah
82004271:	66 89 43 0c          	mov    %ax,0xc(%ebx)
82004275:	8b 55 14             	mov    0x14(%ebp),%edx
82004278:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8200427c:	98                   	cwtl   
8200427d:	52                   	push   %edx
8200427e:	ff 75 10             	push   0x10(%ebp)
82004281:	50                   	push   %eax
82004282:	ff 75 08             	push   0x8(%ebp)
82004285:	e8 a7 02 00 00       	call   82004531 <_write_r>
8200428a:	83 c4 10             	add    $0x10,%esp
8200428d:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004290:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004293:	8b 5d fc             	mov    -0x4(%ebp),%ebx
82004296:	c9                   	leave  
82004297:	c3                   	ret    

82004298 <__sseek>:
82004298:	55                   	push   %ebp
82004299:	89 e5                	mov    %esp,%ebp
8200429b:	56                   	push   %esi
8200429c:	53                   	push   %ebx
8200429d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820042a0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
820042a4:	98                   	cwtl   
820042a5:	ff 75 14             	push   0x14(%ebp)
820042a8:	ff 75 10             	push   0x10(%ebp)
820042ab:	50                   	push   %eax
820042ac:	ff 75 08             	push   0x8(%ebp)
820042af:	e8 aa 04 00 00       	call   8200475e <_lseek_r>
820042b4:	83 c4 10             	add    $0x10,%esp
820042b7:	89 c6                	mov    %eax,%esi
820042b9:	83 fe ff             	cmp    $0xffffffff,%esi
820042bc:	75 0d                	jne    820042cb <__sseek+0x33>
820042be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820042c2:	80 e4 ef             	and    $0xef,%ah
820042c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820042c9:	eb 0e                	jmp    820042d9 <__sseek+0x41>
820042cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820042cf:	80 cc 10             	or     $0x10,%ah
820042d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
820042d6:	89 73 50             	mov    %esi,0x50(%ebx)
820042d9:	89 f0                	mov    %esi,%eax
820042db:	8d 65 f8             	lea    -0x8(%ebp),%esp
820042de:	5b                   	pop    %ebx
820042df:	5e                   	pop    %esi
820042e0:	5d                   	pop    %ebp
820042e1:	c3                   	ret    

820042e2 <__sclose>:
820042e2:	55                   	push   %ebp
820042e3:	89 e5                	mov    %esp,%ebp
820042e5:	83 ec 18             	sub    $0x18,%esp
820042e8:	8b 45 0c             	mov    0xc(%ebp),%eax
820042eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
820042ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
820042f1:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
820042f5:	98                   	cwtl   
820042f6:	83 ec 08             	sub    $0x8,%esp
820042f9:	50                   	push   %eax
820042fa:	ff 75 08             	push   0x8(%ebp)
820042fd:	e8 75 02 00 00       	call   82004577 <_close_r>
82004302:	83 c4 10             	add    $0x10,%esp
82004305:	c9                   	leave  
82004306:	c3                   	ret    

82004307 <strcmp>:
82004307:	55                   	push   %ebp
82004308:	89 e5                	mov    %esp,%ebp
8200430a:	83 ec 10             	sub    $0x10,%esp
8200430d:	8b 55 08             	mov    0x8(%ebp),%edx
82004310:	8b 45 0c             	mov    0xc(%ebp),%eax
82004313:	09 d0                	or     %edx,%eax
82004315:	83 e0 03             	and    $0x3,%eax
82004318:	85 c0                	test   %eax,%eax
8200431a:	75 5e                	jne    8200437a <strcmp+0x73>
8200431c:	8b 45 08             	mov    0x8(%ebp),%eax
8200431f:	89 45 fc             	mov    %eax,-0x4(%ebp)
82004322:	8b 45 0c             	mov    0xc(%ebp),%eax
82004325:	89 45 f8             	mov    %eax,-0x8(%ebp)
82004328:	eb 2c                	jmp    82004356 <strcmp+0x4f>
8200432a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8200432d:	8b 00                	mov    (%eax),%eax
8200432f:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
82004335:	8b 45 fc             	mov    -0x4(%ebp),%eax
82004338:	8b 00                	mov    (%eax),%eax
8200433a:	f7 d0                	not    %eax
8200433c:	21 d0                	and    %edx,%eax
8200433e:	25 80 80 80 80       	and    $0x80808080,%eax
82004343:	85 c0                	test   %eax,%eax
82004345:	74 07                	je     8200434e <strcmp+0x47>
82004347:	b8 00 00 00 00       	mov    $0x0,%eax
8200434c:	eb 5c                	jmp    820043aa <strcmp+0xa3>
8200434e:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
82004352:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
82004356:	8b 45 fc             	mov    -0x4(%ebp),%eax
82004359:	8b 10                	mov    (%eax),%edx
8200435b:	8b 45 f8             	mov    -0x8(%ebp),%eax
8200435e:	8b 00                	mov    (%eax),%eax
82004360:	39 c2                	cmp    %eax,%edx
82004362:	74 c6                	je     8200432a <strcmp+0x23>
82004364:	8b 45 fc             	mov    -0x4(%ebp),%eax
82004367:	89 45 08             	mov    %eax,0x8(%ebp)
8200436a:	8b 45 f8             	mov    -0x8(%ebp),%eax
8200436d:	89 45 0c             	mov    %eax,0xc(%ebp)
82004370:	eb 08                	jmp    8200437a <strcmp+0x73>
82004372:	83 45 08 01          	addl   $0x1,0x8(%ebp)
82004376:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8200437a:	8b 45 08             	mov    0x8(%ebp),%eax
8200437d:	0f b6 00             	movzbl (%eax),%eax
82004380:	84 c0                	test   %al,%al
82004382:	74 10                	je     82004394 <strcmp+0x8d>
82004384:	8b 45 08             	mov    0x8(%ebp),%eax
82004387:	0f b6 10             	movzbl (%eax),%edx
8200438a:	8b 45 0c             	mov    0xc(%ebp),%eax
8200438d:	0f b6 00             	movzbl (%eax),%eax
82004390:	38 c2                	cmp    %al,%dl
82004392:	74 de                	je     82004372 <strcmp+0x6b>
82004394:	8b 45 08             	mov    0x8(%ebp),%eax
82004397:	0f b6 00             	movzbl (%eax),%eax
8200439a:	0f b6 d0             	movzbl %al,%edx
8200439d:	8b 45 0c             	mov    0xc(%ebp),%eax
820043a0:	0f b6 00             	movzbl (%eax),%eax
820043a3:	0f b6 c8             	movzbl %al,%ecx
820043a6:	89 d0                	mov    %edx,%eax
820043a8:	29 c8                	sub    %ecx,%eax
820043aa:	c9                   	leave  
820043ab:	c3                   	ret    

820043ac <__get_global_locale>:
820043ac:	55                   	push   %ebp
820043ad:	89 e5                	mov    %esp,%ebp
820043af:	b8 60 54 00 82       	mov    $0x82005460,%eax
820043b4:	5d                   	pop    %ebp
820043b5:	c3                   	ret    

820043b6 <__get_current_locale>:
820043b6:	55                   	push   %ebp
820043b7:	89 e5                	mov    %esp,%ebp
820043b9:	e8 ee ff ff ff       	call   820043ac <__get_global_locale>
820043be:	5d                   	pop    %ebp
820043bf:	c3                   	ret    

820043c0 <_wcrtomb_r>:
820043c0:	55                   	push   %ebp
820043c1:	89 e5                	mov    %esp,%ebp
820043c3:	83 ec 18             	sub    $0x18,%esp
820043c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
820043cd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
820043d1:	75 21                	jne    820043f4 <_wcrtomb_r+0x34>
820043d3:	e8 de ff ff ff       	call   820043b6 <__get_current_locale>
820043d8:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
820043de:	ff 75 14             	push   0x14(%ebp)
820043e1:	6a 00                	push   $0x0
820043e3:	8d 55 ea             	lea    -0x16(%ebp),%edx
820043e6:	52                   	push   %edx
820043e7:	ff 75 08             	push   0x8(%ebp)
820043ea:	ff d0                	call   *%eax
820043ec:	83 c4 10             	add    $0x10,%esp
820043ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
820043f2:	eb 1f                	jmp    82004413 <_wcrtomb_r+0x53>
820043f4:	e8 bd ff ff ff       	call   820043b6 <__get_current_locale>
820043f9:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
820043ff:	ff 75 14             	push   0x14(%ebp)
82004402:	ff 75 10             	push   0x10(%ebp)
82004405:	ff 75 0c             	push   0xc(%ebp)
82004408:	ff 75 08             	push   0x8(%ebp)
8200440b:	ff d0                	call   *%eax
8200440d:	83 c4 10             	add    $0x10,%esp
82004410:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004413:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82004417:	75 19                	jne    82004432 <_wcrtomb_r+0x72>
82004419:	8b 45 14             	mov    0x14(%ebp),%eax
8200441c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
82004422:	8b 45 08             	mov    0x8(%ebp),%eax
82004425:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8200442b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
82004430:	eb 03                	jmp    82004435 <_wcrtomb_r+0x75>
82004432:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004435:	c9                   	leave  
82004436:	c3                   	ret    

82004437 <wcrtomb>:
82004437:	55                   	push   %ebp
82004438:	89 e5                	mov    %esp,%ebp
8200443a:	83 ec 28             	sub    $0x28,%esp
8200443d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
82004444:	a1 24 50 00 82       	mov    0x82005024,%eax
82004449:	89 45 f0             	mov    %eax,-0x10(%ebp)
8200444c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
82004450:	75 21                	jne    82004473 <wcrtomb+0x3c>
82004452:	e8 5f ff ff ff       	call   820043b6 <__get_current_locale>
82004457:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8200445d:	ff 75 10             	push   0x10(%ebp)
82004460:	6a 00                	push   $0x0
82004462:	8d 55 e6             	lea    -0x1a(%ebp),%edx
82004465:	52                   	push   %edx
82004466:	ff 75 f0             	push   -0x10(%ebp)
82004469:	ff d0                	call   *%eax
8200446b:	83 c4 10             	add    $0x10,%esp
8200446e:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004471:	eb 1f                	jmp    82004492 <wcrtomb+0x5b>
82004473:	e8 3e ff ff ff       	call   820043b6 <__get_current_locale>
82004478:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8200447e:	ff 75 10             	push   0x10(%ebp)
82004481:	ff 75 0c             	push   0xc(%ebp)
82004484:	ff 75 08             	push   0x8(%ebp)
82004487:	ff 75 f0             	push   -0x10(%ebp)
8200448a:	ff d0                	call   *%eax
8200448c:	83 c4 10             	add    $0x10,%esp
8200448f:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004492:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82004496:	75 19                	jne    820044b1 <wcrtomb+0x7a>
82004498:	8b 45 10             	mov    0x10(%ebp),%eax
8200449b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
820044a1:	8b 45 f0             	mov    -0x10(%ebp),%eax
820044a4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
820044aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
820044af:	eb 03                	jmp    820044b4 <wcrtomb+0x7d>
820044b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
820044b4:	c9                   	leave  
820044b5:	c3                   	ret    

820044b6 <__get_global_locale>:
820044b6:	55                   	push   %ebp
820044b7:	89 e5                	mov    %esp,%ebp
820044b9:	b8 60 54 00 82       	mov    $0x82005460,%eax
820044be:	5d                   	pop    %ebp
820044bf:	c3                   	ret    

820044c0 <__get_current_locale>:
820044c0:	55                   	push   %ebp
820044c1:	89 e5                	mov    %esp,%ebp
820044c3:	e8 ee ff ff ff       	call   820044b6 <__get_global_locale>
820044c8:	5d                   	pop    %ebp
820044c9:	c3                   	ret    

820044ca <_wctomb_r>:
820044ca:	55                   	push   %ebp
820044cb:	89 e5                	mov    %esp,%ebp
820044cd:	83 ec 08             	sub    $0x8,%esp
820044d0:	e8 eb ff ff ff       	call   820044c0 <__get_current_locale>
820044d5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
820044db:	ff 75 14             	push   0x14(%ebp)
820044de:	ff 75 10             	push   0x10(%ebp)
820044e1:	ff 75 0c             	push   0xc(%ebp)
820044e4:	ff 75 08             	push   0x8(%ebp)
820044e7:	ff d0                	call   *%eax
820044e9:	83 c4 10             	add    $0x10,%esp
820044ec:	c9                   	leave  
820044ed:	c3                   	ret    

820044ee <__ascii_wctomb>:
820044ee:	55                   	push   %ebp
820044ef:	89 e5                	mov    %esp,%ebp
820044f1:	83 ec 10             	sub    $0x10,%esp
820044f4:	8b 45 10             	mov    0x10(%ebp),%eax
820044f7:	89 45 fc             	mov    %eax,-0x4(%ebp)
820044fa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
820044fe:	75 07                	jne    82004507 <__ascii_wctomb+0x19>
82004500:	b8 00 00 00 00       	mov    $0x0,%eax
82004505:	eb 28                	jmp    8200452f <__ascii_wctomb+0x41>
82004507:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8200450e:	76 10                	jbe    82004520 <__ascii_wctomb+0x32>
82004510:	8b 45 08             	mov    0x8(%ebp),%eax
82004513:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
82004519:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8200451e:	eb 0f                	jmp    8200452f <__ascii_wctomb+0x41>
82004520:	8b 45 fc             	mov    -0x4(%ebp),%eax
82004523:	89 c2                	mov    %eax,%edx
82004525:	8b 45 0c             	mov    0xc(%ebp),%eax
82004528:	88 10                	mov    %dl,(%eax)
8200452a:	b8 01 00 00 00       	mov    $0x1,%eax
8200452f:	c9                   	leave  
82004530:	c3                   	ret    

82004531 <_write_r>:
82004531:	55                   	push   %ebp
82004532:	89 e5                	mov    %esp,%ebp
82004534:	83 ec 18             	sub    $0x18,%esp
82004537:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
8200453e:	00 00 00 
82004541:	83 ec 04             	sub    $0x4,%esp
82004544:	ff 75 14             	push   0x14(%ebp)
82004547:	ff 75 10             	push   0x10(%ebp)
8200454a:	ff 75 0c             	push   0xc(%ebp)
8200454d:	e8 6c bc ff ff       	call   820001be <write>
82004552:	83 c4 10             	add    $0x10,%esp
82004555:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004558:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8200455c:	75 14                	jne    82004572 <_write_r+0x41>
8200455e:	a1 30 56 00 82       	mov    0x82005630,%eax
82004563:	85 c0                	test   %eax,%eax
82004565:	74 0b                	je     82004572 <_write_r+0x41>
82004567:	8b 15 30 56 00 82    	mov    0x82005630,%edx
8200456d:	8b 45 08             	mov    0x8(%ebp),%eax
82004570:	89 10                	mov    %edx,(%eax)
82004572:	8b 45 f4             	mov    -0xc(%ebp),%eax
82004575:	c9                   	leave  
82004576:	c3                   	ret    

82004577 <_close_r>:
82004577:	55                   	push   %ebp
82004578:	89 e5                	mov    %esp,%ebp
8200457a:	83 ec 18             	sub    $0x18,%esp
8200457d:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
82004584:	00 00 00 
82004587:	83 ec 0c             	sub    $0xc,%esp
8200458a:	ff 75 0c             	push   0xc(%ebp)
8200458d:	e8 59 bc ff ff       	call   820001eb <close>
82004592:	83 c4 10             	add    $0x10,%esp
82004595:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004598:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8200459c:	75 14                	jne    820045b2 <_close_r+0x3b>
8200459e:	a1 30 56 00 82       	mov    0x82005630,%eax
820045a3:	85 c0                	test   %eax,%eax
820045a5:	74 0b                	je     820045b2 <_close_r+0x3b>
820045a7:	8b 15 30 56 00 82    	mov    0x82005630,%edx
820045ad:	8b 45 08             	mov    0x8(%ebp),%eax
820045b0:	89 10                	mov    %edx,(%eax)
820045b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
820045b5:	c9                   	leave  
820045b6:	c3                   	ret    

820045b7 <_fclose_r>:
820045b7:	55                   	push   %ebp
820045b8:	89 e5                	mov    %esp,%ebp
820045ba:	53                   	push   %ebx
820045bb:	83 ec 14             	sub    $0x14,%esp
820045be:	8b 5d 0c             	mov    0xc(%ebp),%ebx
820045c1:	85 db                	test   %ebx,%ebx
820045c3:	75 0a                	jne    820045cf <_fclose_r+0x18>
820045c5:	b8 00 00 00 00       	mov    $0x0,%eax
820045ca:	e9 ea 00 00 00       	jmp    820046b9 <_fclose_r+0x102>
820045cf:	8b 45 08             	mov    0x8(%ebp),%eax
820045d2:	89 45 f0             	mov    %eax,-0x10(%ebp)
820045d5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
820045d9:	74 18                	je     820045f3 <_fclose_r+0x3c>
820045db:	8b 45 f0             	mov    -0x10(%ebp),%eax
820045de:	8b 40 38             	mov    0x38(%eax),%eax
820045e1:	85 c0                	test   %eax,%eax
820045e3:	75 0e                	jne    820045f3 <_fclose_r+0x3c>
820045e5:	83 ec 0c             	sub    $0xc,%esp
820045e8:	ff 75 f0             	push   -0x10(%ebp)
820045eb:	e8 36 e6 ff ff       	call   82002c26 <__sinit>
820045f0:	83 c4 10             	add    $0x10,%esp
820045f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
820045f7:	66 85 c0             	test   %ax,%ax
820045fa:	75 0a                	jne    82004606 <_fclose_r+0x4f>
820045fc:	b8 00 00 00 00       	mov    $0x0,%eax
82004601:	e9 b3 00 00 00       	jmp    820046b9 <_fclose_r+0x102>
82004606:	83 ec 08             	sub    $0x8,%esp
82004609:	53                   	push   %ebx
8200460a:	ff 75 08             	push   0x8(%ebp)
8200460d:	e8 68 e0 ff ff       	call   8200267a <__sflush_r>
82004612:	83 c4 10             	add    $0x10,%esp
82004615:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004618:	8b 43 2c             	mov    0x2c(%ebx),%eax
8200461b:	85 c0                	test   %eax,%eax
8200461d:	74 1d                	je     8200463c <_fclose_r+0x85>
8200461f:	8b 43 2c             	mov    0x2c(%ebx),%eax
82004622:	8b 53 1c             	mov    0x1c(%ebx),%edx
82004625:	83 ec 08             	sub    $0x8,%esp
82004628:	52                   	push   %edx
82004629:	ff 75 08             	push   0x8(%ebp)
8200462c:	ff d0                	call   *%eax
8200462e:	83 c4 10             	add    $0x10,%esp
82004631:	85 c0                	test   %eax,%eax
82004633:	79 07                	jns    8200463c <_fclose_r+0x85>
82004635:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8200463c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
82004640:	98                   	cwtl   
82004641:	25 80 00 00 00       	and    $0x80,%eax
82004646:	85 c0                	test   %eax,%eax
82004648:	74 12                	je     8200465c <_fclose_r+0xa5>
8200464a:	8b 43 10             	mov    0x10(%ebx),%eax
8200464d:	83 ec 08             	sub    $0x8,%esp
82004650:	50                   	push   %eax
82004651:	ff 75 08             	push   0x8(%ebp)
82004654:	e8 71 cb ff ff       	call   820011ca <_free_r>
82004659:	83 c4 10             	add    $0x10,%esp
8200465c:	8b 43 30             	mov    0x30(%ebx),%eax
8200465f:	85 c0                	test   %eax,%eax
82004661:	74 23                	je     82004686 <_fclose_r+0xcf>
82004663:	8b 53 30             	mov    0x30(%ebx),%edx
82004666:	8d 43 40             	lea    0x40(%ebx),%eax
82004669:	39 c2                	cmp    %eax,%edx
8200466b:	74 12                	je     8200467f <_fclose_r+0xc8>
8200466d:	8b 43 30             	mov    0x30(%ebx),%eax
82004670:	83 ec 08             	sub    $0x8,%esp
82004673:	50                   	push   %eax
82004674:	ff 75 08             	push   0x8(%ebp)
82004677:	e8 4e cb ff ff       	call   820011ca <_free_r>
8200467c:	83 c4 10             	add    $0x10,%esp
8200467f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
82004686:	8b 43 44             	mov    0x44(%ebx),%eax
82004689:	85 c0                	test   %eax,%eax
8200468b:	74 19                	je     820046a6 <_fclose_r+0xef>
8200468d:	8b 43 44             	mov    0x44(%ebx),%eax
82004690:	83 ec 08             	sub    $0x8,%esp
82004693:	50                   	push   %eax
82004694:	ff 75 08             	push   0x8(%ebp)
82004697:	e8 2e cb ff ff       	call   820011ca <_free_r>
8200469c:	83 c4 10             	add    $0x10,%esp
8200469f:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
820046a6:	e8 14 e6 ff ff       	call   82002cbf <__sfp_lock_acquire>
820046ab:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
820046b1:	e8 0f e6 ff ff       	call   82002cc5 <__sfp_lock_release>
820046b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
820046b9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
820046bc:	c9                   	leave  
820046bd:	c3                   	ret    

820046be <fclose>:
820046be:	55                   	push   %ebp
820046bf:	89 e5                	mov    %esp,%ebp
820046c1:	83 ec 08             	sub    $0x8,%esp
820046c4:	8b 55 08             	mov    0x8(%ebp),%edx
820046c7:	a1 24 50 00 82       	mov    0x82005024,%eax
820046cc:	83 ec 08             	sub    $0x8,%esp
820046cf:	52                   	push   %edx
820046d0:	50                   	push   %eax
820046d1:	e8 e1 fe ff ff       	call   820045b7 <_fclose_r>
820046d6:	83 c4 10             	add    $0x10,%esp
820046d9:	c9                   	leave  
820046da:	c3                   	ret    

820046db <_fstat_r>:
820046db:	55                   	push   %ebp
820046dc:	89 e5                	mov    %esp,%ebp
820046de:	83 ec 18             	sub    $0x18,%esp
820046e1:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
820046e8:	00 00 00 
820046eb:	83 ec 08             	sub    $0x8,%esp
820046ee:	ff 75 10             	push   0x10(%ebp)
820046f1:	ff 75 0c             	push   0xc(%ebp)
820046f4:	e8 61 bb ff ff       	call   8200025a <fstat>
820046f9:	83 c4 10             	add    $0x10,%esp
820046fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
820046ff:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82004703:	75 14                	jne    82004719 <_fstat_r+0x3e>
82004705:	a1 30 56 00 82       	mov    0x82005630,%eax
8200470a:	85 c0                	test   %eax,%eax
8200470c:	74 0b                	je     82004719 <_fstat_r+0x3e>
8200470e:	8b 15 30 56 00 82    	mov    0x82005630,%edx
82004714:	8b 45 08             	mov    0x8(%ebp),%eax
82004717:	89 10                	mov    %edx,(%eax)
82004719:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200471c:	c9                   	leave  
8200471d:	c3                   	ret    

8200471e <_isatty_r>:
8200471e:	55                   	push   %ebp
8200471f:	89 e5                	mov    %esp,%ebp
82004721:	83 ec 18             	sub    $0x18,%esp
82004724:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
8200472b:	00 00 00 
8200472e:	83 ec 0c             	sub    $0xc,%esp
82004731:	ff 75 0c             	push   0xc(%ebp)
82004734:	e8 00 bb ff ff       	call   82000239 <isatty>
82004739:	83 c4 10             	add    $0x10,%esp
8200473c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8200473f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82004743:	75 14                	jne    82004759 <_isatty_r+0x3b>
82004745:	a1 30 56 00 82       	mov    0x82005630,%eax
8200474a:	85 c0                	test   %eax,%eax
8200474c:	74 0b                	je     82004759 <_isatty_r+0x3b>
8200474e:	8b 15 30 56 00 82    	mov    0x82005630,%edx
82004754:	8b 45 08             	mov    0x8(%ebp),%eax
82004757:	89 10                	mov    %edx,(%eax)
82004759:	8b 45 f4             	mov    -0xc(%ebp),%eax
8200475c:	c9                   	leave  
8200475d:	c3                   	ret    

8200475e <_lseek_r>:
8200475e:	55                   	push   %ebp
8200475f:	89 e5                	mov    %esp,%ebp
82004761:	83 ec 18             	sub    $0x18,%esp
82004764:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
8200476b:	00 00 00 
8200476e:	83 ec 04             	sub    $0x4,%esp
82004771:	ff 75 14             	push   0x14(%ebp)
82004774:	ff 75 10             	push   0x10(%ebp)
82004777:	ff 75 0c             	push   0xc(%ebp)
8200477a:	e8 8d ba ff ff       	call   8200020c <lseek>
8200477f:	83 c4 10             	add    $0x10,%esp
82004782:	89 45 f4             	mov    %eax,-0xc(%ebp)
82004785:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
82004789:	75 14                	jne    8200479f <_lseek_r+0x41>
8200478b:	a1 30 56 00 82       	mov    0x82005630,%eax
82004790:	85 c0                	test   %eax,%eax
82004792:	74 0b                	je     8200479f <_lseek_r+0x41>
82004794:	8b 15 30 56 00 82    	mov    0x82005630,%edx
8200479a:	8b 45 08             	mov    0x8(%ebp),%eax
8200479d:	89 10                	mov    %edx,(%eax)
8200479f:	8b 45 f4             	mov    -0xc(%ebp),%eax
820047a2:	c9                   	leave  
820047a3:	c3                   	ret    

820047a4 <_read_r>:
820047a4:	55                   	push   %ebp
820047a5:	89 e5                	mov    %esp,%ebp
820047a7:	83 ec 18             	sub    $0x18,%esp
820047aa:	c7 05 30 56 00 82 00 	movl   $0x0,0x82005630
820047b1:	00 00 00 
820047b4:	83 ec 04             	sub    $0x4,%esp
820047b7:	ff 75 14             	push   0x14(%ebp)
820047ba:	ff 75 10             	push   0x10(%ebp)
820047bd:	ff 75 0c             	push   0xc(%ebp)
820047c0:	e8 cc b9 ff ff       	call   82000191 <read>
820047c5:	83 c4 10             	add    $0x10,%esp
820047c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
820047cb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
820047cf:	75 14                	jne    820047e5 <_read_r+0x41>
820047d1:	a1 30 56 00 82       	mov    0x82005630,%eax
820047d6:	85 c0                	test   %eax,%eax
820047d8:	74 0b                	je     820047e5 <_read_r+0x41>
820047da:	8b 15 30 56 00 82    	mov    0x82005630,%edx
820047e0:	8b 45 08             	mov    0x8(%ebp),%eax
820047e3:	89 10                	mov    %edx,(%eax)
820047e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
820047e8:	c9                   	leave  
820047e9:	c3                   	ret    
