
/home/kbpoyo/code/cpp/MyOs/build/source/loop/loop.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/loop/loop.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x83000000

Program Header:
    LOAD off    0x00001000 vaddr 0x83000000 paddr 0x83000000 align 2**12
         filesz 0x000073b0 memsz 0x00007440 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000655f  83000000  83000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000044c  83006560  83006560  00007560  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  830069c0  830069c0  000079c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000080  830073c0  830073c0  000083b0  2**5
                  ALLOC
  4 .debug_line   00004924  00000000  00000000  000083b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_line_str 00001371  00000000  00000000  0000ccd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   000211bc  00000000  00000000  0000e045  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 000076fc  00000000  00000000  0002f201  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_aranges 000007c8  00000000  00000000  00036900  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    000014e7  00000000  00000000  000370c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  000385af  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001844  00000000  00000000  000385ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00039e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
830007c8 l     F .text	000000ad std
83000875 l     F .text	0000001b stdin_init
83000890 l     F .text	0000001b stdout_init
830008ab l     F .text	0000001b stderr_init
830073c0 l     O .bss	00000004 __sfp_recursive_mutex
830073c4 l     O .bss	00000004 __sinit_recursive_mutex
83000b6e l     F .text	0000000a __fp_lock
83000b78 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
830073d0 l     O .bss	00000004 optwhere
830073d4 l     O .bss	00000004 permute_from
830073d8 l     O .bss	00000004 num_nonopts
83000dcf l     F .text	0000007b reverse_argv_elements
83000e4a l     F .text	00000036 permute
83000e80 l     F .text	00000031 is_option
83000eb1 l     F .text	00000059 read_globals
83000f0a l     F .text	00000052 write_globals
83000f5c l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
830069e0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
83001c00 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8300274d l       .text	00000000 L20
83002704 l       .text	00000000 L5
8300274a l       .text	00000000 L15
83002710 l       .text	00000000 L8
83002731 l       .text	00000000 L9
83002740 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8300279f l       .text	00000000 L4
83002791 l       .text	00000000 BYTECMP
8300278c l       .text	00000000 L5
83002793 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
83007428 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
83002960 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
830034c5 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
830038fb l       .text	00000000 L25
830038a2 l       .text	00000000 L5
830038ee l       .text	00000000 L14
830038f4 l       .text	00000000 L19
830038b3 l       .text	00000000 L10
830038e0 l       .text	00000000 L9
830038e3 l       .text	00000000 L15
8300392e l       .text	00000000 L26
83003931 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
83003a36 l       .text	00000000 L5
83003a6e l       .text	00000000 L15
83003a40 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtol.c
83003a79 l     F .text	0000000a __locale_ctype_ptr_l
83003a83 l     F .text	0000000a __get_global_locale
83003a8d l     F .text	0000000a __get_current_locale
83003a97 l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8300742c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
83004643 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
83007230 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
8300531c l     F .text	0000000a __get_global_locale
83005326 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
83005588 l     F .text	0000000a __get_global_locale
83005592 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
830056ad l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8300634b l     F .text	0000000a __get_global_locale
83006355 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
83006455 l     F .text	0000000a __get_global_locale
8300645f l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
83007438 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
8300743c l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8300651f g     F .text	00000040 _isatty_r
830060d1 g     F .text	00000037 cleanup_glue
830033d3 g     F .text	000000d6 _puts_r
830053c2 g     F .text	00000046 _lseek_r
8300014f g     F .text	0000001b yield
830003e3 g     F .text	00000039 ioctl
8300635f g     F .text	00000077 _wcrtomb_r
830037dc g     F .text	0000004a __sseek
83000abd g     F .text	00000099 __sinit
83003cdc g     F .text	00000112 __swbuf_r
83005330 g     F .text	0000005f _setlocale_r
830008c6 g     F .text	0000006f __sfmoreglue
8300287e g     F .text	00000006 __malloc_unlock
83005620 g       .text	00000000 memmove
83001ab8 g     F .text	00000049 getopt_long
83000aa3 g     F .text	0000001a _cleanup
83004105 g     F .text	0000000a __errno
830051f2 g     F .text	00000020 getenv
830064dc g     F .text	00000043 _fstat_r
83007434 g     O .bss	00000004 errno
83003777 g     F .text	0000000a __seofread
83000122 g     F .text	0000002d execve
830000c4 g     F .text	0000001b getpid
830007a9 g     F .text	0000001f fgets
830027a8 g       .text	00000000 memcpy
83000a82 g     F .text	00000021 _cleanup_r
830034a9 g     F .text	0000001c puts
83001bc7 g     F .text	0000001c malloc
83000239 g     F .text	00000021 isatty
83001bbd g     F .text	0000000a __getreent
830073c8 g     O .bss	00000004 optarg
830073e0 g     O .bss	00000004 __malloc_top_pad
830073c0 g       .bss	00000000 __bss_start__
83004d34 g     F .text	0000049e __sfvwrite_r
830036f3 g     F .text	00000040 _sbrk_r
830069c0 g     O .data	00000004 opterr
8300036e g     F .text	00000040 readdir
830057b1 g     F .text	00000046 _read_r
8300410f g     F .text	00000107 _fclose_r
830044b1 g     F .text	00000039 fflush
830073e4 g     O .bss	00000004 __malloc_max_sbrked_mem
8300020c g     F .text	0000002d lseek
83006648 g     O .rodata	00000004 _global_impure_ptr
830057f7 g     F .text	000008da _realloc_r
83003c8e g     F .text	00000025 strtol_l
83004759 g     F .text	00000057 _fputwc_r
83000b82 g     F .text	00000024 __fp_lock_all
83003cb3 g     F .text	00000029 strtol
83006108 g     F .text	00000160 _reclaim_reent
830044ea g     F .text	00000046 _fputc_r
830001be g     F .text	0000002d write
83005713 g     F .text	0000004b _putc_r
830073ac g     O .data	00000004 environ
8300025a g     F .text	00000027 fstat
83000bf3 g     F .text	0000002c fprintf
83001b96 g     F .text	00000027 __getopt_long_only_r
830005ed g     F .text	0000001a _atoi_r
8300004e g     F .text	0000004c sys_call
830029c6 g     F .text	000000a8 __sfputs_r
830073cc g     O .bss	00000004 optind
83000b56 g     F .text	00000006 __sfp_lock_acquire
830026c0 g       .text	00000000 memchr
83007440 g       .bss	00000000 __bss_end__
830047f8 g     F .text	000003db _free_r
830002e5 g     F .text	00000021 wait
83006720 g     O .rodata	00000180 _ctype_b
8300538f g     F .text	00000014 __locale_mb_cur_max
83003fb0 g     F .text	00000115 __call_exitprocs
8300722c g     O .data	00000004 __malloc_sbrk_base
83000000 g       .text	00000000 _start
83000191 g     F .text	0000002d read
83006268 g     F .text	000000e3 strncmp
83001b6f g     F .text	00000027 __getopt_long_r
83007400 g     O .bss	00000028 __malloc_current_mallinfo
830040c5 g     F .text	00000040 _close_r
83002755 g       .text	00000000 memcmp
83000cf2 g     F .text	000000b8 _fwrite_r
83000107 g     F .text	0000001b fork
83003e55 g     F .text	0000015b __swsetup_r
83000935 g     F .text	0000014d __sfp
83006e20 g     O .data	00000408 __malloc_av_
83000b68 g     F .text	00000006 __sinit_lock_release
83003733 g     F .text	00000044 __sread
83002878 g     F .text	00000006 __malloc_lock
83000bca g     F .text	00000029 _fprintf_r
83000281 g     F .text	00000021 sbrk
83004459 g     F .text	00000058 _fflush_r
83000010 g     F .text	0000003e cstart
83001a71 g     F .text	00000047 getopt
830027f0 g       .text	00000000 memset
8300041c g     F .text	000001b7 main
830073e8 g     O .bss	00000004 __malloc_max_total_mem
83003dee g     F .text	00000021 __swbuf
83003826 g     F .text	00000025 __sclose
83004216 g     F .text	0000001d fclose
83003c69 g     F .text	00000025 _strtol_r
83005212 g     F .text	000000ed _findenv_r
83001e93 g     F .text	00000822 _malloc_r
8300648d g     F .text	00000043 __ascii_wctomb
83000306 g     F .text	00000068 opendir
83000bca g     F .text	00000029 _fiprintf_r
830064d6 g     F .text	00000006 __env_unlock
830051d2 g     F .text	00000020 _findenv
83000c1f g     F .text	00000068 _fwalk
8300064b g     F .text	0000015e _fgets_r
8300559c g     F .text	0000002a _mbtowc_r
8300575e g     F .text	00000053 putc
83001b01 g     F .text	00000049 getopt_long_only
83004bd3 g     F .text	00000161 _malloc_trim_r
8300394c g     F .text	000000a5 strcmp
83002a6e g     F .text	00000025 vfiprintf
830002a2 g     F .text	00000021 dup
83007430 g     O .bss	00000004 _PathLocale
83003e0f g     F .text	00000046 _write_r
830053a3 g     F .text	0000001f setlocale
83002de9 g     F .text	0000019b _printf_common
83006e04 g     O .data	00000004 _impure_ptr
83004233 g     F .text	00000226 __sflush_r
830034f2 g     F .text	00000201 __srefill_r
830055c6 g     F .text	00000058 __ascii_mbtowc
83000ba6 g     F .text	00000024 __fp_unlock_all
83004530 g     F .text	0000004e fputc
830000df g     F .text	00000028 print_msg
830069c4 g     O .data	00000004 optopt
830054f5 g     F .text	00000093 __swhatbuf_r
83000daa g     F .text	00000025 fwrite
830046a9 g     F .text	000000b0 __fputwc
8300457e g     F .text	000000a6 _fputs_r
83003781 g     F .text	0000005b __swrite
83007228 g     O .data	00000004 __malloc_trim_threshold
83000607 g     F .text	00000044 exit
83000bf3 g     F .text	0000002c fiprintf
83002a93 g     F .text	00000356 _vfiprintf_r
83000c87 g     F .text	0000006b _fwalk_reent
83000b5c g     F .text	00000006 __sfp_lock_release
830005d3 g     F .text	0000001a atoi
830068a0 g     O .rodata	00000101 _ctype_
83001b4a g     F .text	00000025 __getopt_r
830002c3 g     F .text	00000022 _exit
83005408 g     F .text	000000ed __smakebuf_r
83003a00 g       .text	00000000 strlen
83002f84 g     F .text	0000044f _printf_i
8300016a g     F .text	00000027 open
83002884 g     F .text	000000dc __sprint_r
83003850 g       .text	00000000 strchr
83004624 g     F .text	0000001f fputs
830003ae g     F .text	00000035 closedir
83006469 g     F .text	00000024 _wctomb_r
830064d0 g     F .text	00000006 __env_lock
83002a93 g     F .text	00000356 _vfprintf_r
8300009a g     F .text	0000002a msleep
830063d6 g     F .text	0000007f wcrtomb
830001eb g     F .text	00000021 close
83007240 g     O .data	0000016c __global_locale
83002a6e g     F .text	00000025 vfprintf
830047b0 g     F .text	00000048 fputwc
83001be3 g     F .text	0000001d free
83000b62 g     F .text	00000006 __sinit_lock_acquire
830052ff g     F .text	0000001d _getenv_r



Disassembly of section .text:

83000000 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
83000000:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
83000003:	8e d8                	mov    %eax,%ds
	mov %ax, %es
83000005:	8e c0                	mov    %eax,%es
	mov %ax, %fs
83000007:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
83000009:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8300000b:	e9 00 00 00 00       	jmp    83000010 <cstart>

83000010 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
83000010:	55                   	push   %ebp
83000011:	89 e5                	mov    %esp,%ebp
83000013:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
83000016:	c7 45 f4 c0 73 00 83 	movl   $0x830073c0,-0xc(%ebp)
    while (start < __bss_end__) {
8300001d:	eb 0c                	jmp    8300002b <cstart+0x1b>
        *(start++) = 0;
8300001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000022:	8d 50 01             	lea    0x1(%eax),%edx
83000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
83000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8300002b:	81 7d f4 40 74 00 83 	cmpl   $0x83007440,-0xc(%ebp)
83000032:	72 eb                	jb     8300001f <cstart+0xf>
    }
    
    exit(main(argc, argv));
83000034:	83 ec 08             	sub    $0x8,%esp
83000037:	ff 75 0c             	push   0xc(%ebp)
8300003a:	ff 75 08             	push   0x8(%ebp)
8300003d:	e8 da 03 00 00       	call   8300041c <main>
83000042:	83 c4 10             	add    $0x10,%esp
83000045:	83 ec 0c             	sub    $0xc,%esp
83000048:	50                   	push   %eax
83000049:	e8 b9 05 00 00       	call   83000607 <exit>

8300004e <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8300004e:	55                   	push   %ebp
8300004f:	89 e5                	mov    %esp,%ebp
83000051:	57                   	push   %edi
83000052:	56                   	push   %esi
83000053:	53                   	push   %ebx
83000054:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
83000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8300005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
83000065:	8b 45 08             	mov    0x8(%ebp),%eax
83000068:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8300006b:	8b 55 08             	mov    0x8(%ebp),%edx
8300006e:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
83000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
83000074:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
83000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8300007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8300007d:	8b 75 08             	mov    0x8(%ebp),%esi
83000080:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
83000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
83000085:	50                   	push   %eax
83000086:	52                   	push   %edx
83000087:	51                   	push   %ecx
83000088:	53                   	push   %ebx
83000089:	56                   	push   %esi
8300008a:	ff 1f                	lcall  *(%edi)
8300008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8300008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
83000092:	83 c4 10             	add    $0x10,%esp
83000095:	5b                   	pop    %ebx
83000096:	5e                   	pop    %esi
83000097:	5f                   	pop    %edi
83000098:	5d                   	pop    %ebp
83000099:	c3                   	ret    

8300009a <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8300009a:	55                   	push   %ebp
8300009b:	89 e5                	mov    %esp,%ebp
8300009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
830000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
830000a4:	7e 1b                	jle    830000c1 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
830000a6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
830000ad:	8b 45 08             	mov    0x8(%ebp),%eax
830000b0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
830000b3:	8d 45 ec             	lea    -0x14(%ebp),%eax
830000b6:	50                   	push   %eax
830000b7:	e8 92 ff ff ff       	call   8300004e <sys_call>
830000bc:	83 c4 04             	add    $0x4,%esp
830000bf:	eb 01                	jmp    830000c2 <msleep+0x28>
    if (ms <= 0) return;
830000c1:	90                   	nop

}
830000c2:	c9                   	leave  
830000c3:	c3                   	ret    

830000c4 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
830000c4:	55                   	push   %ebp
830000c5:	89 e5                	mov    %esp,%ebp
830000c7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
830000ca:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
830000d1:	8d 45 ec             	lea    -0x14(%ebp),%eax
830000d4:	50                   	push   %eax
830000d5:	e8 74 ff ff ff       	call   8300004e <sys_call>
830000da:	83 c4 04             	add    $0x4,%esp
}
830000dd:	c9                   	leave  
830000de:	c3                   	ret    

830000df <print_msg>:

void print_msg(const char *fmt, int arg) {
830000df:	55                   	push   %ebp
830000e0:	89 e5                	mov    %esp,%ebp
830000e2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
830000e5:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
830000ec:	8b 45 08             	mov    0x8(%ebp),%eax
830000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
830000f2:	8b 45 0c             	mov    0xc(%ebp),%eax
830000f5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
830000f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
830000fb:	50                   	push   %eax
830000fc:	e8 4d ff ff ff       	call   8300004e <sys_call>
83000101:	83 c4 04             	add    $0x4,%esp
}
83000104:	90                   	nop
83000105:	c9                   	leave  
83000106:	c3                   	ret    

83000107 <fork>:

int fork (void) {
83000107:	55                   	push   %ebp
83000108:	89 e5                	mov    %esp,%ebp
8300010a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8300010d:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
83000114:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000117:	50                   	push   %eax
83000118:	e8 31 ff ff ff       	call   8300004e <sys_call>
8300011d:	83 c4 04             	add    $0x4,%esp
}
83000120:	c9                   	leave  
83000121:	c3                   	ret    

83000122 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
83000122:	55                   	push   %ebp
83000123:	89 e5                	mov    %esp,%ebp
83000125:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
83000128:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8300012f:	8b 45 08             	mov    0x8(%ebp),%eax
83000132:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
83000135:	8b 45 0c             	mov    0xc(%ebp),%eax
83000138:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8300013b:	8b 45 10             	mov    0x10(%ebp),%eax
8300013e:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
83000141:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000144:	50                   	push   %eax
83000145:	e8 04 ff ff ff       	call   8300004e <sys_call>
8300014a:	83 c4 04             	add    $0x4,%esp
}
8300014d:	c9                   	leave  
8300014e:	c3                   	ret    

8300014f <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8300014f:	55                   	push   %ebp
83000150:	89 e5                	mov    %esp,%ebp
83000152:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
83000155:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8300015c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8300015f:	50                   	push   %eax
83000160:	e8 e9 fe ff ff       	call   8300004e <sys_call>
83000165:	83 c4 04             	add    $0x4,%esp
}
83000168:	c9                   	leave  
83000169:	c3                   	ret    

8300016a <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8300016a:	55                   	push   %ebp
8300016b:	89 e5                	mov    %esp,%ebp
8300016d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
83000170:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
83000177:	8b 45 08             	mov    0x8(%ebp),%eax
8300017a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8300017d:	8b 45 0c             	mov    0xc(%ebp),%eax
83000180:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
83000183:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000186:	50                   	push   %eax
83000187:	e8 c2 fe ff ff       	call   8300004e <sys_call>
8300018c:	83 c4 04             	add    $0x4,%esp
}
8300018f:	c9                   	leave  
83000190:	c3                   	ret    

83000191 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
83000191:	55                   	push   %ebp
83000192:	89 e5                	mov    %esp,%ebp
83000194:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
83000197:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8300019e:	8b 45 08             	mov    0x8(%ebp),%eax
830001a1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
830001a4:	8b 45 0c             	mov    0xc(%ebp),%eax
830001a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
830001aa:	8b 45 10             	mov    0x10(%ebp),%eax
830001ad:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
830001b0:	8d 45 ec             	lea    -0x14(%ebp),%eax
830001b3:	50                   	push   %eax
830001b4:	e8 95 fe ff ff       	call   8300004e <sys_call>
830001b9:	83 c4 04             	add    $0x4,%esp
}
830001bc:	c9                   	leave  
830001bd:	c3                   	ret    

830001be <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
830001be:	55                   	push   %ebp
830001bf:	89 e5                	mov    %esp,%ebp
830001c1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
830001c4:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
830001cb:	8b 45 08             	mov    0x8(%ebp),%eax
830001ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
830001d1:	8b 45 0c             	mov    0xc(%ebp),%eax
830001d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
830001d7:	8b 45 10             	mov    0x10(%ebp),%eax
830001da:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
830001dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
830001e0:	50                   	push   %eax
830001e1:	e8 68 fe ff ff       	call   8300004e <sys_call>
830001e6:	83 c4 04             	add    $0x4,%esp
}
830001e9:	c9                   	leave  
830001ea:	c3                   	ret    

830001eb <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
830001eb:	55                   	push   %ebp
830001ec:	89 e5                	mov    %esp,%ebp
830001ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
830001f1:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
830001f8:	8b 45 08             	mov    0x8(%ebp),%eax
830001fb:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
830001fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000201:	50                   	push   %eax
83000202:	e8 47 fe ff ff       	call   8300004e <sys_call>
83000207:	83 c4 04             	add    $0x4,%esp
}
8300020a:	c9                   	leave  
8300020b:	c3                   	ret    

8300020c <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8300020c:	55                   	push   %ebp
8300020d:	89 e5                	mov    %esp,%ebp
8300020f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
83000212:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
83000219:	8b 45 08             	mov    0x8(%ebp),%eax
8300021c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8300021f:	8b 45 0c             	mov    0xc(%ebp),%eax
83000222:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
83000225:	8b 45 10             	mov    0x10(%ebp),%eax
83000228:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8300022b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8300022e:	50                   	push   %eax
8300022f:	e8 1a fe ff ff       	call   8300004e <sys_call>
83000234:	83 c4 04             	add    $0x4,%esp
}
83000237:	c9                   	leave  
83000238:	c3                   	ret    

83000239 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
83000239:	55                   	push   %ebp
8300023a:	89 e5                	mov    %esp,%ebp
8300023c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8300023f:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
83000246:	8b 45 08             	mov    0x8(%ebp),%eax
83000249:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8300024c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8300024f:	50                   	push   %eax
83000250:	e8 f9 fd ff ff       	call   8300004e <sys_call>
83000255:	83 c4 04             	add    $0x4,%esp
}
83000258:	c9                   	leave  
83000259:	c3                   	ret    

8300025a <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
8300025a:	55                   	push   %ebp
8300025b:	89 e5                	mov    %esp,%ebp
8300025d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
83000260:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
83000267:	8b 45 08             	mov    0x8(%ebp),%eax
8300026a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8300026d:	8b 45 0c             	mov    0xc(%ebp),%eax
83000270:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
83000273:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000276:	50                   	push   %eax
83000277:	e8 d2 fd ff ff       	call   8300004e <sys_call>
8300027c:	83 c4 04             	add    $0x4,%esp
}
8300027f:	c9                   	leave  
83000280:	c3                   	ret    

83000281 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
83000281:	55                   	push   %ebp
83000282:	89 e5                	mov    %esp,%ebp
83000284:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
83000287:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
8300028e:	8b 45 08             	mov    0x8(%ebp),%eax
83000291:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
83000294:	8d 45 ec             	lea    -0x14(%ebp),%eax
83000297:	50                   	push   %eax
83000298:	e8 b1 fd ff ff       	call   8300004e <sys_call>
8300029d:	83 c4 04             	add    $0x4,%esp
}
830002a0:	c9                   	leave  
830002a1:	c3                   	ret    

830002a2 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
830002a2:	55                   	push   %ebp
830002a3:	89 e5                	mov    %esp,%ebp
830002a5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
830002a8:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
830002af:	8b 45 08             	mov    0x8(%ebp),%eax
830002b2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
830002b5:	8d 45 ec             	lea    -0x14(%ebp),%eax
830002b8:	50                   	push   %eax
830002b9:	e8 90 fd ff ff       	call   8300004e <sys_call>
830002be:	83 c4 04             	add    $0x4,%esp
}
830002c1:	c9                   	leave  
830002c2:	c3                   	ret    

830002c3 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
830002c3:	55                   	push   %ebp
830002c4:	89 e5                	mov    %esp,%ebp
830002c6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
830002c9:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
830002d0:	8b 45 08             	mov    0x8(%ebp),%eax
830002d3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
830002d6:	8d 45 ec             	lea    -0x14(%ebp),%eax
830002d9:	50                   	push   %eax
830002da:	e8 6f fd ff ff       	call   8300004e <sys_call>
830002df:	83 c4 04             	add    $0x4,%esp
}
830002e2:	90                   	nop
830002e3:	c9                   	leave  
830002e4:	c3                   	ret    

830002e5 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
830002e5:	55                   	push   %ebp
830002e6:	89 e5                	mov    %esp,%ebp
830002e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
830002eb:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
830002f2:	8b 45 08             	mov    0x8(%ebp),%eax
830002f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
830002f8:	8d 45 ec             	lea    -0x14(%ebp),%eax
830002fb:	50                   	push   %eax
830002fc:	e8 4d fd ff ff       	call   8300004e <sys_call>
83000301:	83 c4 04             	add    $0x4,%esp
}
83000304:	c9                   	leave  
83000305:	c3                   	ret    

83000306 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
83000306:	55                   	push   %ebp
83000307:	89 e5                	mov    %esp,%ebp
83000309:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8300030c:	83 ec 0c             	sub    $0xc,%esp
8300030f:	6a 20                	push   $0x20
83000311:	e8 b1 18 00 00       	call   83001bc7 <malloc>
83000316:	83 c4 10             	add    $0x10,%esp
83000319:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8300031c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83000320:	75 07                	jne    83000329 <opendir+0x23>
        return (DIR*)0;
83000322:	b8 00 00 00 00       	mov    $0x0,%eax
83000327:	eb 43                	jmp    8300036c <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
83000329:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
83000330:	8b 45 08             	mov    0x8(%ebp),%eax
83000333:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
83000336:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000339:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8300033c:	83 ec 0c             	sub    $0xc,%esp
8300033f:	8d 45 dc             	lea    -0x24(%ebp),%eax
83000342:	50                   	push   %eax
83000343:	e8 06 fd ff ff       	call   8300004e <sys_call>
83000348:	83 c4 10             	add    $0x10,%esp
8300034b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8300034e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83000352:	79 15                	jns    83000369 <opendir+0x63>
        free(dir);
83000354:	83 ec 0c             	sub    $0xc,%esp
83000357:	ff 75 f4             	push   -0xc(%ebp)
8300035a:	e8 84 18 00 00       	call   83001be3 <free>
8300035f:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
83000362:	b8 00 00 00 00       	mov    $0x0,%eax
83000367:	eb 03                	jmp    8300036c <opendir+0x66>
    }

    return dir;    
83000369:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8300036c:	c9                   	leave  
8300036d:	c3                   	ret    

8300036e <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8300036e:	55                   	push   %ebp
8300036f:	89 e5                	mov    %esp,%ebp
83000371:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
83000374:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
8300037b:	8b 45 08             	mov    0x8(%ebp),%eax
8300037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
83000381:	8b 45 08             	mov    0x8(%ebp),%eax
83000384:	83 c0 04             	add    $0x4,%eax
83000387:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
8300038a:	8d 45 e8             	lea    -0x18(%ebp),%eax
8300038d:	50                   	push   %eax
8300038e:	e8 bb fc ff ff       	call   8300004e <sys_call>
83000393:	83 c4 04             	add    $0x4,%esp
83000396:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
83000399:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8300039d:	79 07                	jns    830003a6 <readdir+0x38>
        return (struct dirent*)0;
8300039f:	b8 00 00 00 00       	mov    $0x0,%eax
830003a4:	eb 06                	jmp    830003ac <readdir+0x3e>
    }

    return &dir->dirent;   
830003a6:	8b 45 08             	mov    0x8(%ebp),%eax
830003a9:	83 c0 04             	add    $0x4,%eax
}
830003ac:	c9                   	leave  
830003ad:	c3                   	ret    

830003ae <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
830003ae:	55                   	push   %ebp
830003af:	89 e5                	mov    %esp,%ebp
830003b1:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
830003b4:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
830003bb:	8b 45 08             	mov    0x8(%ebp),%eax
830003be:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
830003c1:	8d 45 e0             	lea    -0x20(%ebp),%eax
830003c4:	50                   	push   %eax
830003c5:	e8 84 fc ff ff       	call   8300004e <sys_call>
830003ca:	83 c4 04             	add    $0x4,%esp
830003cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
830003d0:	83 ec 0c             	sub    $0xc,%esp
830003d3:	ff 75 08             	push   0x8(%ebp)
830003d6:	e8 08 18 00 00       	call   83001be3 <free>
830003db:	83 c4 10             	add    $0x10,%esp

    return err;   
830003de:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
830003e1:	c9                   	leave  
830003e2:	c3                   	ret    

830003e3 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
830003e3:	55                   	push   %ebp
830003e4:	89 e5                	mov    %esp,%ebp
830003e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
830003e9:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
830003f0:	8b 45 08             	mov    0x8(%ebp),%eax
830003f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
830003f6:	8b 45 0c             	mov    0xc(%ebp),%eax
830003f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
830003fc:	8b 45 10             	mov    0x10(%ebp),%eax
830003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
83000402:	8b 45 14             	mov    0x14(%ebp),%eax
83000405:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
83000408:	8d 45 e8             	lea    -0x18(%ebp),%eax
8300040b:	50                   	push   %eax
8300040c:	e8 3d fc ff ff       	call   8300004e <sys_call>
83000411:	83 c4 04             	add    $0x4,%esp
83000414:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
83000417:	8b 45 fc             	mov    -0x4(%ebp),%eax
8300041a:	c9                   	leave  
8300041b:	c3                   	ret    

8300041c <main>:
#include <getopt.h>
#include <stdlib.h>
#include <sys/file.h>
//#include "fs/file.h"

int main (int argc, char ** argv) {
8300041c:	8d 4c 24 04          	lea    0x4(%esp),%ecx
83000420:	83 e4 f0             	and    $0xfffffff0,%esp
83000423:	ff 71 fc             	push   -0x4(%ecx)
83000426:	55                   	push   %ebp
83000427:	89 e5                	mov    %esp,%ebp
83000429:	53                   	push   %ebx
8300042a:	51                   	push   %ecx
8300042b:	81 ec 90 00 00 00    	sub    $0x90,%esp
83000431:	89 cb                	mov    %ecx,%ebx
    // 要加上这个，不然libapp不会被加入编译链接中
    // 这样会提示找不到一些app中的库函数
	//yield();

    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1) {
83000433:	83 3b 01             	cmpl   $0x1,(%ebx)
83000436:	75 40                	jne    83000478 <main+0x5c>
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
83000438:	e8 80 17 00 00       	call   83001bbd <__getreent>
8300043d:	8b 40 04             	mov    0x4(%eax),%eax
83000440:	83 ec 04             	sub    $0x4,%esp
83000443:	50                   	push   %eax
83000444:	68 80 00 00 00       	push   $0x80
83000449:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
8300044f:	50                   	push   %eax
83000450:	e8 54 03 00 00       	call   830007a9 <fgets>
83000455:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
83000458:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
8300045c:	83 ec 0c             	sub    $0xc,%esp
8300045f:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
83000465:	50                   	push   %eax
83000466:	e8 3e 30 00 00       	call   830034a9 <puts>
8300046b:	83 c4 10             	add    $0x10,%esp
        return 0;
8300046e:	b8 00 00 00 00       	mov    $0x0,%eax
83000473:	e9 51 01 00 00       	jmp    830005c9 <main+0x1ad>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1;    // 缺省只打印一次
83000478:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
8300047f:	e9 a7 00 00 00       	jmp    8300052b <main+0x10f>
        switch (ch) {
83000484:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
83000488:	74 4e                	je     830004d8 <main+0xbc>
8300048a:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
8300048e:	0f 8f 97 00 00 00    	jg     8300052b <main+0x10f>
83000494:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
83000498:	74 54                	je     830004ee <main+0xd2>
8300049a:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
8300049e:	0f 85 87 00 00 00    	jne    8300052b <main+0x10f>
            case 'h':
                puts("echo echo any message");
830004a4:	83 ec 0c             	sub    $0xc,%esp
830004a7:	68 60 65 00 83       	push   $0x83006560
830004ac:	e8 f8 2f 00 00       	call   830034a9 <puts>
830004b1:	83 c4 10             	add    $0x10,%esp
                puts("Usage: echo [-n count] msg");
830004b4:	83 ec 0c             	sub    $0xc,%esp
830004b7:	68 76 65 00 83       	push   $0x83006576
830004bc:	e8 e8 2f 00 00       	call   830034a9 <puts>
830004c1:	83 c4 10             	add    $0x10,%esp
                optind = 1;        // getopt需要多次调用，需要重置
830004c4:	c7 05 cc 73 00 83 01 	movl   $0x1,0x830073cc
830004cb:	00 00 00 
                return 0;
830004ce:	b8 00 00 00 00       	mov    $0x0,%eax
830004d3:	e9 f1 00 00 00       	jmp    830005c9 <main+0x1ad>
            case 'n':
                count = atoi(optarg);
830004d8:	a1 c8 73 00 83       	mov    0x830073c8,%eax
830004dd:	83 ec 0c             	sub    $0xc,%esp
830004e0:	50                   	push   %eax
830004e1:	e8 ed 00 00 00       	call   830005d3 <atoi>
830004e6:	83 c4 10             	add    $0x10,%esp
830004e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
                break;
830004ec:	eb 3d                	jmp    8300052b <main+0x10f>
            case '?':
                if (optarg) {
830004ee:	a1 c8 73 00 83       	mov    0x830073c8,%eax
830004f3:	85 c0                	test   %eax,%eax
830004f5:	74 20                	je     83000517 <main+0xfb>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
830004f7:	8b 1d c8 73 00 83    	mov    0x830073c8,%ebx
830004fd:	e8 bb 16 00 00       	call   83001bbd <__getreent>
83000502:	8b 40 0c             	mov    0xc(%eax),%eax
83000505:	83 ec 04             	sub    $0x4,%esp
83000508:	53                   	push   %ebx
83000509:	68 91 65 00 83       	push   $0x83006591
8300050e:	50                   	push   %eax
8300050f:	e8 df 06 00 00       	call   83000bf3 <fiprintf>
83000514:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        // getopt需要多次调用，需要重置
83000517:	c7 05 cc 73 00 83 01 	movl   $0x1,0x830073cc
8300051e:	00 00 00 
                return -1;
83000521:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83000526:	e9 9e 00 00 00       	jmp    830005c9 <main+0x1ad>
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
8300052b:	83 ec 04             	sub    $0x4,%esp
8300052e:	68 a6 65 00 83       	push   $0x830065a6
83000533:	ff 73 04             	push   0x4(%ebx)
83000536:	ff 33                	push   (%ebx)
83000538:	e8 34 15 00 00       	call   83001a71 <getopt>
8300053d:	83 c4 10             	add    $0x10,%esp
83000540:	89 45 ec             	mov    %eax,-0x14(%ebp)
83000543:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
83000547:	0f 85 37 ff ff ff    	jne    83000484 <main+0x68>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1) {
8300054d:	a1 cc 73 00 83       	mov    0x830073cc,%eax
83000552:	39 03                	cmp    %eax,(%ebx)
83000554:	7f 2b                	jg     83000581 <main+0x165>
        fprintf(stderr, "Message is empty \n");
83000556:	e8 62 16 00 00       	call   83001bbd <__getreent>
8300055b:	8b 40 0c             	mov    0xc(%eax),%eax
8300055e:	50                   	push   %eax
8300055f:	6a 12                	push   $0x12
83000561:	6a 01                	push   $0x1
83000563:	68 aa 65 00 83       	push   $0x830065aa
83000568:	e8 3d 08 00 00       	call   83000daa <fwrite>
8300056d:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
83000570:	c7 05 cc 73 00 83 01 	movl   $0x1,0x830073cc
83000577:	00 00 00 
        return -1;
8300057a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300057f:	eb 48                	jmp    830005c9 <main+0x1ad>
    }

    // 循环打印消息
    char * msg = argv[optind];
83000581:	a1 cc 73 00 83       	mov    0x830073cc,%eax
83000586:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300058d:	8b 43 04             	mov    0x4(%ebx),%eax
83000590:	01 d0                	add    %edx,%eax
83000592:	8b 00                	mov    (%eax),%eax
83000594:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++) {
83000597:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8300059e:	eb 12                	jmp    830005b2 <main+0x196>
        puts(msg);
830005a0:	83 ec 0c             	sub    $0xc,%esp
830005a3:	ff 75 e8             	push   -0x18(%ebp)
830005a6:	e8 fe 2e 00 00       	call   830034a9 <puts>
830005ab:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++) {
830005ae:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
830005b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
830005b5:	3b 45 f4             	cmp    -0xc(%ebp),%eax
830005b8:	7c e6                	jl     830005a0 <main+0x184>
    }
    optind = 1;        // getopt需要多次调用，需要重置
830005ba:	c7 05 cc 73 00 83 01 	movl   $0x1,0x830073cc
830005c1:	00 00 00 
    return 0;
830005c4:	b8 00 00 00 00       	mov    $0x0,%eax
}
830005c9:	8d 65 f8             	lea    -0x8(%ebp),%esp
830005cc:	59                   	pop    %ecx
830005cd:	5b                   	pop    %ebx
830005ce:	5d                   	pop    %ebp
830005cf:	8d 61 fc             	lea    -0x4(%ecx),%esp
830005d2:	c3                   	ret    

830005d3 <atoi>:
830005d3:	55                   	push   %ebp
830005d4:	89 e5                	mov    %esp,%ebp
830005d6:	83 ec 08             	sub    $0x8,%esp
830005d9:	83 ec 04             	sub    $0x4,%esp
830005dc:	6a 0a                	push   $0xa
830005de:	6a 00                	push   $0x0
830005e0:	ff 75 08             	push   0x8(%ebp)
830005e3:	e8 cb 36 00 00       	call   83003cb3 <strtol>
830005e8:	83 c4 10             	add    $0x10,%esp
830005eb:	c9                   	leave  
830005ec:	c3                   	ret    

830005ed <_atoi_r>:
830005ed:	55                   	push   %ebp
830005ee:	89 e5                	mov    %esp,%ebp
830005f0:	83 ec 08             	sub    $0x8,%esp
830005f3:	6a 0a                	push   $0xa
830005f5:	6a 00                	push   $0x0
830005f7:	ff 75 0c             	push   0xc(%ebp)
830005fa:	ff 75 08             	push   0x8(%ebp)
830005fd:	e8 67 36 00 00       	call   83003c69 <_strtol_r>
83000602:	83 c4 10             	add    $0x10,%esp
83000605:	c9                   	leave  
83000606:	c3                   	ret    

83000607 <exit>:
83000607:	55                   	push   %ebp
83000608:	89 e5                	mov    %esp,%ebp
8300060a:	83 ec 08             	sub    $0x8,%esp
8300060d:	83 ec 08             	sub    $0x8,%esp
83000610:	6a 00                	push   $0x0
83000612:	ff 75 08             	push   0x8(%ebp)
83000615:	e8 96 39 00 00       	call   83003fb0 <__call_exitprocs>
8300061a:	83 c4 10             	add    $0x10,%esp
8300061d:	a1 48 66 00 83       	mov    0x83006648,%eax
83000622:	8b 40 3c             	mov    0x3c(%eax),%eax
83000625:	85 c0                	test   %eax,%eax
83000627:	74 17                	je     83000640 <exit+0x39>
83000629:	a1 48 66 00 83       	mov    0x83006648,%eax
8300062e:	8b 40 3c             	mov    0x3c(%eax),%eax
83000631:	8b 15 48 66 00 83    	mov    0x83006648,%edx
83000637:	83 ec 0c             	sub    $0xc,%esp
8300063a:	52                   	push   %edx
8300063b:	ff d0                	call   *%eax
8300063d:	83 c4 10             	add    $0x10,%esp
83000640:	83 ec 0c             	sub    $0xc,%esp
83000643:	ff 75 08             	push   0x8(%ebp)
83000646:	e8 78 fc ff ff       	call   830002c3 <_exit>

8300064b <_fgets_r>:
8300064b:	55                   	push   %ebp
8300064c:	89 e5                	mov    %esp,%ebp
8300064e:	83 ec 28             	sub    $0x28,%esp
83000651:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
83000655:	7f 0a                	jg     83000661 <_fgets_r+0x16>
83000657:	b8 00 00 00 00       	mov    $0x0,%eax
8300065c:	e9 46 01 00 00       	jmp    830007a7 <_fgets_r+0x15c>
83000661:	8b 45 0c             	mov    0xc(%ebp),%eax
83000664:	89 45 f0             	mov    %eax,-0x10(%ebp)
83000667:	8b 45 08             	mov    0x8(%ebp),%eax
8300066a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8300066d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
83000671:	74 18                	je     8300068b <_fgets_r+0x40>
83000673:	8b 45 ec             	mov    -0x14(%ebp),%eax
83000676:	8b 40 38             	mov    0x38(%eax),%eax
83000679:	85 c0                	test   %eax,%eax
8300067b:	75 0e                	jne    8300068b <_fgets_r+0x40>
8300067d:	83 ec 0c             	sub    $0xc,%esp
83000680:	ff 75 ec             	push   -0x14(%ebp)
83000683:	e8 35 04 00 00       	call   83000abd <__sinit>
83000688:	83 c4 10             	add    $0x10,%esp
8300068b:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
8300068f:	8b 45 14             	mov    0x14(%ebp),%eax
83000692:	8b 40 04             	mov    0x4(%eax),%eax
83000695:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000698:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8300069c:	75 34                	jne    830006d2 <_fgets_r+0x87>
8300069e:	83 ec 08             	sub    $0x8,%esp
830006a1:	ff 75 14             	push   0x14(%ebp)
830006a4:	ff 75 08             	push   0x8(%ebp)
830006a7:	e8 46 2e 00 00       	call   830034f2 <__srefill_r>
830006ac:	83 c4 10             	add    $0x10,%esp
830006af:	85 c0                	test   %eax,%eax
830006b1:	74 16                	je     830006c9 <_fgets_r+0x7e>
830006b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
830006b6:	3b 45 0c             	cmp    0xc(%ebp),%eax
830006b9:	0f 85 de 00 00 00    	jne    8300079d <_fgets_r+0x152>
830006bf:	b8 00 00 00 00       	mov    $0x0,%eax
830006c4:	e9 de 00 00 00       	jmp    830007a7 <_fgets_r+0x15c>
830006c9:	8b 45 14             	mov    0x14(%ebp),%eax
830006cc:	8b 40 04             	mov    0x4(%eax),%eax
830006cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
830006d2:	8b 45 14             	mov    0x14(%ebp),%eax
830006d5:	8b 00                	mov    (%eax),%eax
830006d7:	89 45 e8             	mov    %eax,-0x18(%ebp)
830006da:	8b 45 10             	mov    0x10(%ebp),%eax
830006dd:	39 45 f4             	cmp    %eax,-0xc(%ebp)
830006e0:	76 06                	jbe    830006e8 <_fgets_r+0x9d>
830006e2:	8b 45 10             	mov    0x10(%ebp),%eax
830006e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
830006e8:	83 ec 04             	sub    $0x4,%esp
830006eb:	ff 75 f4             	push   -0xc(%ebp)
830006ee:	6a 0a                	push   $0xa
830006f0:	ff 75 e8             	push   -0x18(%ebp)
830006f3:	e8 c8 1f 00 00       	call   830026c0 <memchr>
830006f8:	83 c4 10             	add    $0x10,%esp
830006fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830006fe:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83000702:	74 4a                	je     8300074e <_fgets_r+0x103>
83000704:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
83000708:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300070b:	2b 45 e8             	sub    -0x18(%ebp),%eax
8300070e:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000711:	8b 45 14             	mov    0x14(%ebp),%eax
83000714:	8b 40 04             	mov    0x4(%eax),%eax
83000717:	2b 45 f4             	sub    -0xc(%ebp),%eax
8300071a:	89 c2                	mov    %eax,%edx
8300071c:	8b 45 14             	mov    0x14(%ebp),%eax
8300071f:	89 50 04             	mov    %edx,0x4(%eax)
83000722:	8b 45 14             	mov    0x14(%ebp),%eax
83000725:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83000728:	89 10                	mov    %edx,(%eax)
8300072a:	83 ec 04             	sub    $0x4,%esp
8300072d:	ff 75 f4             	push   -0xc(%ebp)
83000730:	ff 75 e8             	push   -0x18(%ebp)
83000733:	ff 75 f0             	push   -0x10(%ebp)
83000736:	e8 6d 20 00 00       	call   830027a8 <memcpy>
8300073b:	83 c4 10             	add    $0x10,%esp
8300073e:	8b 55 f0             	mov    -0x10(%ebp),%edx
83000741:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000744:	01 d0                	add    %edx,%eax
83000746:	c6 00 00             	movb   $0x0,(%eax)
83000749:	8b 45 0c             	mov    0xc(%ebp),%eax
8300074c:	eb 59                	jmp    830007a7 <_fgets_r+0x15c>
8300074e:	8b 45 14             	mov    0x14(%ebp),%eax
83000751:	8b 40 04             	mov    0x4(%eax),%eax
83000754:	2b 45 f4             	sub    -0xc(%ebp),%eax
83000757:	89 c2                	mov    %eax,%edx
83000759:	8b 45 14             	mov    0x14(%ebp),%eax
8300075c:	89 50 04             	mov    %edx,0x4(%eax)
8300075f:	8b 45 14             	mov    0x14(%ebp),%eax
83000762:	8b 10                	mov    (%eax),%edx
83000764:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000767:	01 c2                	add    %eax,%edx
83000769:	8b 45 14             	mov    0x14(%ebp),%eax
8300076c:	89 10                	mov    %edx,(%eax)
8300076e:	83 ec 04             	sub    $0x4,%esp
83000771:	ff 75 f4             	push   -0xc(%ebp)
83000774:	ff 75 e8             	push   -0x18(%ebp)
83000777:	ff 75 f0             	push   -0x10(%ebp)
8300077a:	e8 29 20 00 00       	call   830027a8 <memcpy>
8300077f:	83 c4 10             	add    $0x10,%esp
83000782:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000785:	01 45 f0             	add    %eax,-0x10(%ebp)
83000788:	8b 45 10             	mov    0x10(%ebp),%eax
8300078b:	2b 45 f4             	sub    -0xc(%ebp),%eax
8300078e:	89 45 10             	mov    %eax,0x10(%ebp)
83000791:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
83000795:	0f 85 f4 fe ff ff    	jne    8300068f <_fgets_r+0x44>
8300079b:	eb 01                	jmp    8300079e <_fgets_r+0x153>
8300079d:	90                   	nop
8300079e:	8b 45 f0             	mov    -0x10(%ebp),%eax
830007a1:	c6 00 00             	movb   $0x0,(%eax)
830007a4:	8b 45 0c             	mov    0xc(%ebp),%eax
830007a7:	c9                   	leave  
830007a8:	c3                   	ret    

830007a9 <fgets>:
830007a9:	55                   	push   %ebp
830007aa:	89 e5                	mov    %esp,%ebp
830007ac:	83 ec 08             	sub    $0x8,%esp
830007af:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830007b4:	ff 75 10             	push   0x10(%ebp)
830007b7:	ff 75 0c             	push   0xc(%ebp)
830007ba:	ff 75 08             	push   0x8(%ebp)
830007bd:	50                   	push   %eax
830007be:	e8 88 fe ff ff       	call   8300064b <_fgets_r>
830007c3:	83 c4 10             	add    $0x10,%esp
830007c6:	c9                   	leave  
830007c7:	c3                   	ret    

830007c8 <std>:
830007c8:	55                   	push   %ebp
830007c9:	89 e5                	mov    %esp,%ebp
830007cb:	83 ec 08             	sub    $0x8,%esp
830007ce:	8b 45 08             	mov    0x8(%ebp),%eax
830007d1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
830007d7:	8b 45 08             	mov    0x8(%ebp),%eax
830007da:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
830007e1:	8b 45 08             	mov    0x8(%ebp),%eax
830007e4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
830007eb:	8b 45 0c             	mov    0xc(%ebp),%eax
830007ee:	89 c2                	mov    %eax,%edx
830007f0:	8b 45 08             	mov    0x8(%ebp),%eax
830007f3:	66 89 50 0c          	mov    %dx,0xc(%eax)
830007f7:	8b 45 08             	mov    0x8(%ebp),%eax
830007fa:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
83000801:	8b 45 10             	mov    0x10(%ebp),%eax
83000804:	89 c2                	mov    %eax,%edx
83000806:	8b 45 08             	mov    0x8(%ebp),%eax
83000809:	66 89 50 0e          	mov    %dx,0xe(%eax)
8300080d:	8b 45 08             	mov    0x8(%ebp),%eax
83000810:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
83000817:	8b 45 08             	mov    0x8(%ebp),%eax
8300081a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
83000821:	8b 45 08             	mov    0x8(%ebp),%eax
83000824:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8300082b:	8b 45 08             	mov    0x8(%ebp),%eax
8300082e:	83 c0 5c             	add    $0x5c,%eax
83000831:	83 ec 04             	sub    $0x4,%esp
83000834:	6a 08                	push   $0x8
83000836:	6a 00                	push   $0x0
83000838:	50                   	push   %eax
83000839:	e8 b2 1f 00 00       	call   830027f0 <memset>
8300083e:	83 c4 10             	add    $0x10,%esp
83000841:	8b 45 08             	mov    0x8(%ebp),%eax
83000844:	8b 55 08             	mov    0x8(%ebp),%edx
83000847:	89 50 1c             	mov    %edx,0x1c(%eax)
8300084a:	8b 45 08             	mov    0x8(%ebp),%eax
8300084d:	c7 40 20 33 37 00 83 	movl   $0x83003733,0x20(%eax)
83000854:	8b 45 08             	mov    0x8(%ebp),%eax
83000857:	c7 40 24 81 37 00 83 	movl   $0x83003781,0x24(%eax)
8300085e:	8b 45 08             	mov    0x8(%ebp),%eax
83000861:	c7 40 28 dc 37 00 83 	movl   $0x830037dc,0x28(%eax)
83000868:	8b 45 08             	mov    0x8(%ebp),%eax
8300086b:	c7 40 2c 26 38 00 83 	movl   $0x83003826,0x2c(%eax)
83000872:	90                   	nop
83000873:	c9                   	leave  
83000874:	c3                   	ret    

83000875 <stdin_init>:
83000875:	55                   	push   %ebp
83000876:	89 e5                	mov    %esp,%ebp
83000878:	83 ec 08             	sub    $0x8,%esp
8300087b:	83 ec 04             	sub    $0x4,%esp
8300087e:	6a 00                	push   $0x0
83000880:	6a 04                	push   $0x4
83000882:	ff 75 08             	push   0x8(%ebp)
83000885:	e8 3e ff ff ff       	call   830007c8 <std>
8300088a:	83 c4 10             	add    $0x10,%esp
8300088d:	90                   	nop
8300088e:	c9                   	leave  
8300088f:	c3                   	ret    

83000890 <stdout_init>:
83000890:	55                   	push   %ebp
83000891:	89 e5                	mov    %esp,%ebp
83000893:	83 ec 08             	sub    $0x8,%esp
83000896:	83 ec 04             	sub    $0x4,%esp
83000899:	6a 01                	push   $0x1
8300089b:	6a 09                	push   $0x9
8300089d:	ff 75 08             	push   0x8(%ebp)
830008a0:	e8 23 ff ff ff       	call   830007c8 <std>
830008a5:	83 c4 10             	add    $0x10,%esp
830008a8:	90                   	nop
830008a9:	c9                   	leave  
830008aa:	c3                   	ret    

830008ab <stderr_init>:
830008ab:	55                   	push   %ebp
830008ac:	89 e5                	mov    %esp,%ebp
830008ae:	83 ec 08             	sub    $0x8,%esp
830008b1:	83 ec 04             	sub    $0x4,%esp
830008b4:	6a 02                	push   $0x2
830008b6:	6a 12                	push   $0x12
830008b8:	ff 75 08             	push   0x8(%ebp)
830008bb:	e8 08 ff ff ff       	call   830007c8 <std>
830008c0:	83 c4 10             	add    $0x10,%esp
830008c3:	90                   	nop
830008c4:	c9                   	leave  
830008c5:	c3                   	ret    

830008c6 <__sfmoreglue>:
830008c6:	55                   	push   %ebp
830008c7:	89 e5                	mov    %esp,%ebp
830008c9:	53                   	push   %ebx
830008ca:	83 ec 14             	sub    $0x14,%esp
830008cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
830008d0:	8d 43 ff             	lea    -0x1(%ebx),%eax
830008d3:	6b c0 68             	imul   $0x68,%eax,%eax
830008d6:	83 c0 74             	add    $0x74,%eax
830008d9:	83 ec 08             	sub    $0x8,%esp
830008dc:	50                   	push   %eax
830008dd:	ff 75 08             	push   0x8(%ebp)
830008e0:	e8 ae 15 00 00       	call   83001e93 <_malloc_r>
830008e5:	83 c4 10             	add    $0x10,%esp
830008e8:	89 45 f4             	mov    %eax,-0xc(%ebp)
830008eb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
830008ef:	75 07                	jne    830008f8 <__sfmoreglue+0x32>
830008f1:	b8 00 00 00 00       	mov    $0x0,%eax
830008f6:	eb 38                	jmp    83000930 <__sfmoreglue+0x6a>
830008f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
830008fb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
83000901:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000904:	89 58 04             	mov    %ebx,0x4(%eax)
83000907:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300090a:	8d 50 0c             	lea    0xc(%eax),%edx
8300090d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000910:	89 50 08             	mov    %edx,0x8(%eax)
83000913:	89 d8                	mov    %ebx,%eax
83000915:	6b c0 68             	imul   $0x68,%eax,%eax
83000918:	8b 55 f4             	mov    -0xc(%ebp),%edx
8300091b:	83 c2 0c             	add    $0xc,%edx
8300091e:	83 ec 04             	sub    $0x4,%esp
83000921:	50                   	push   %eax
83000922:	6a 00                	push   $0x0
83000924:	52                   	push   %edx
83000925:	e8 c6 1e 00 00       	call   830027f0 <memset>
8300092a:	83 c4 10             	add    $0x10,%esp
8300092d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000930:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83000933:	c9                   	leave  
83000934:	c3                   	ret    

83000935 <__sfp>:
83000935:	55                   	push   %ebp
83000936:	89 e5                	mov    %esp,%ebp
83000938:	83 ec 18             	sub    $0x18,%esp
8300093b:	e8 16 02 00 00       	call   83000b56 <__sfp_lock_acquire>
83000940:	a1 48 66 00 83       	mov    0x83006648,%eax
83000945:	8b 40 38             	mov    0x38(%eax),%eax
83000948:	85 c0                	test   %eax,%eax
8300094a:	75 11                	jne    8300095d <__sfp+0x28>
8300094c:	a1 48 66 00 83       	mov    0x83006648,%eax
83000951:	83 ec 0c             	sub    $0xc,%esp
83000954:	50                   	push   %eax
83000955:	e8 63 01 00 00       	call   83000abd <__sinit>
8300095a:	83 c4 10             	add    $0x10,%esp
8300095d:	a1 48 66 00 83       	mov    0x83006648,%eax
83000962:	05 e0 02 00 00       	add    $0x2e0,%eax
83000967:	89 45 ec             	mov    %eax,-0x14(%ebp)
8300096a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300096d:	8b 40 08             	mov    0x8(%eax),%eax
83000970:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000973:	8b 45 ec             	mov    -0x14(%ebp),%eax
83000976:	8b 40 04             	mov    0x4(%eax),%eax
83000979:	89 45 f0             	mov    %eax,-0x10(%ebp)
8300097c:	eb 10                	jmp    8300098e <__sfp+0x59>
8300097e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000981:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83000985:	66 85 c0             	test   %ax,%ax
83000988:	74 58                	je     830009e2 <__sfp+0xad>
8300098a:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8300098e:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
83000992:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83000996:	79 e6                	jns    8300097e <__sfp+0x49>
83000998:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300099b:	8b 00                	mov    (%eax),%eax
8300099d:	85 c0                	test   %eax,%eax
8300099f:	75 1e                	jne    830009bf <__sfp+0x8a>
830009a1:	83 ec 08             	sub    $0x8,%esp
830009a4:	6a 04                	push   $0x4
830009a6:	ff 75 08             	push   0x8(%ebp)
830009a9:	e8 18 ff ff ff       	call   830008c6 <__sfmoreglue>
830009ae:	83 c4 10             	add    $0x10,%esp
830009b1:	8b 55 ec             	mov    -0x14(%ebp),%edx
830009b4:	89 02                	mov    %eax,(%edx)
830009b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
830009b9:	8b 00                	mov    (%eax),%eax
830009bb:	85 c0                	test   %eax,%eax
830009bd:	74 0a                	je     830009c9 <__sfp+0x94>
830009bf:	8b 45 ec             	mov    -0x14(%ebp),%eax
830009c2:	8b 00                	mov    (%eax),%eax
830009c4:	89 45 ec             	mov    %eax,-0x14(%ebp)
830009c7:	eb a1                	jmp    8300096a <__sfp+0x35>
830009c9:	90                   	nop
830009ca:	e8 8d 01 00 00       	call   83000b5c <__sfp_lock_release>
830009cf:	8b 45 08             	mov    0x8(%ebp),%eax
830009d2:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
830009d8:	b8 00 00 00 00       	mov    $0x0,%eax
830009dd:	e9 9e 00 00 00       	jmp    83000a80 <__sfp+0x14b>
830009e2:	90                   	nop
830009e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
830009e6:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
830009ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
830009ef:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
830009f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
830009f8:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
830009ff:	e8 58 01 00 00       	call   83000b5c <__sfp_lock_release>
83000a04:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a07:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
83000a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a10:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
83000a17:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a1a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
83000a21:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a24:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
83000a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a2e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
83000a35:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a38:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
83000a3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a42:	83 c0 5c             	add    $0x5c,%eax
83000a45:	83 ec 04             	sub    $0x4,%esp
83000a48:	6a 08                	push   $0x8
83000a4a:	6a 00                	push   $0x0
83000a4c:	50                   	push   %eax
83000a4d:	e8 9e 1d 00 00       	call   830027f0 <memset>
83000a52:	83 c4 10             	add    $0x10,%esp
83000a55:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a58:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
83000a5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a62:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
83000a69:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a6c:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
83000a73:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a76:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
83000a7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000a80:	c9                   	leave  
83000a81:	c3                   	ret    

83000a82 <_cleanup_r>:
83000a82:	55                   	push   %ebp
83000a83:	89 e5                	mov    %esp,%ebp
83000a85:	83 ec 18             	sub    $0x18,%esp
83000a88:	c7 45 f4 0f 41 00 83 	movl   $0x8300410f,-0xc(%ebp)
83000a8f:	83 ec 08             	sub    $0x8,%esp
83000a92:	ff 75 f4             	push   -0xc(%ebp)
83000a95:	ff 75 08             	push   0x8(%ebp)
83000a98:	e8 ea 01 00 00       	call   83000c87 <_fwalk_reent>
83000a9d:	83 c4 10             	add    $0x10,%esp
83000aa0:	90                   	nop
83000aa1:	c9                   	leave  
83000aa2:	c3                   	ret    

83000aa3 <_cleanup>:
83000aa3:	55                   	push   %ebp
83000aa4:	89 e5                	mov    %esp,%ebp
83000aa6:	83 ec 08             	sub    $0x8,%esp
83000aa9:	a1 48 66 00 83       	mov    0x83006648,%eax
83000aae:	83 ec 0c             	sub    $0xc,%esp
83000ab1:	50                   	push   %eax
83000ab2:	e8 cb ff ff ff       	call   83000a82 <_cleanup_r>
83000ab7:	83 c4 10             	add    $0x10,%esp
83000aba:	90                   	nop
83000abb:	c9                   	leave  
83000abc:	c3                   	ret    

83000abd <__sinit>:
83000abd:	55                   	push   %ebp
83000abe:	89 e5                	mov    %esp,%ebp
83000ac0:	83 ec 08             	sub    $0x8,%esp
83000ac3:	e8 9a 00 00 00       	call   83000b62 <__sinit_lock_acquire>
83000ac8:	8b 45 08             	mov    0x8(%ebp),%eax
83000acb:	8b 40 38             	mov    0x38(%eax),%eax
83000ace:	85 c0                	test   %eax,%eax
83000ad0:	74 07                	je     83000ad9 <__sinit+0x1c>
83000ad2:	e8 91 00 00 00       	call   83000b68 <__sinit_lock_release>
83000ad7:	eb 7b                	jmp    83000b54 <__sinit+0x97>
83000ad9:	8b 45 08             	mov    0x8(%ebp),%eax
83000adc:	c7 40 3c 82 0a 00 83 	movl   $0x83000a82,0x3c(%eax)
83000ae3:	8b 45 08             	mov    0x8(%ebp),%eax
83000ae6:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
83000aed:	00 00 00 
83000af0:	8b 45 08             	mov    0x8(%ebp),%eax
83000af3:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
83000afa:	00 00 00 
83000afd:	8b 45 08             	mov    0x8(%ebp),%eax
83000b00:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
83000b06:	8b 45 08             	mov    0x8(%ebp),%eax
83000b09:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
83000b0f:	8b 45 08             	mov    0x8(%ebp),%eax
83000b12:	8b 40 04             	mov    0x4(%eax),%eax
83000b15:	83 ec 0c             	sub    $0xc,%esp
83000b18:	50                   	push   %eax
83000b19:	e8 57 fd ff ff       	call   83000875 <stdin_init>
83000b1e:	83 c4 10             	add    $0x10,%esp
83000b21:	8b 45 08             	mov    0x8(%ebp),%eax
83000b24:	8b 40 08             	mov    0x8(%eax),%eax
83000b27:	83 ec 0c             	sub    $0xc,%esp
83000b2a:	50                   	push   %eax
83000b2b:	e8 60 fd ff ff       	call   83000890 <stdout_init>
83000b30:	83 c4 10             	add    $0x10,%esp
83000b33:	8b 45 08             	mov    0x8(%ebp),%eax
83000b36:	8b 40 0c             	mov    0xc(%eax),%eax
83000b39:	83 ec 0c             	sub    $0xc,%esp
83000b3c:	50                   	push   %eax
83000b3d:	e8 69 fd ff ff       	call   830008ab <stderr_init>
83000b42:	83 c4 10             	add    $0x10,%esp
83000b45:	8b 45 08             	mov    0x8(%ebp),%eax
83000b48:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
83000b4f:	e8 14 00 00 00       	call   83000b68 <__sinit_lock_release>
83000b54:	c9                   	leave  
83000b55:	c3                   	ret    

83000b56 <__sfp_lock_acquire>:
83000b56:	55                   	push   %ebp
83000b57:	89 e5                	mov    %esp,%ebp
83000b59:	90                   	nop
83000b5a:	5d                   	pop    %ebp
83000b5b:	c3                   	ret    

83000b5c <__sfp_lock_release>:
83000b5c:	55                   	push   %ebp
83000b5d:	89 e5                	mov    %esp,%ebp
83000b5f:	90                   	nop
83000b60:	5d                   	pop    %ebp
83000b61:	c3                   	ret    

83000b62 <__sinit_lock_acquire>:
83000b62:	55                   	push   %ebp
83000b63:	89 e5                	mov    %esp,%ebp
83000b65:	90                   	nop
83000b66:	5d                   	pop    %ebp
83000b67:	c3                   	ret    

83000b68 <__sinit_lock_release>:
83000b68:	55                   	push   %ebp
83000b69:	89 e5                	mov    %esp,%ebp
83000b6b:	90                   	nop
83000b6c:	5d                   	pop    %ebp
83000b6d:	c3                   	ret    

83000b6e <__fp_lock>:
83000b6e:	55                   	push   %ebp
83000b6f:	89 e5                	mov    %esp,%ebp
83000b71:	b8 00 00 00 00       	mov    $0x0,%eax
83000b76:	5d                   	pop    %ebp
83000b77:	c3                   	ret    

83000b78 <__fp_unlock>:
83000b78:	55                   	push   %ebp
83000b79:	89 e5                	mov    %esp,%ebp
83000b7b:	b8 00 00 00 00       	mov    $0x0,%eax
83000b80:	5d                   	pop    %ebp
83000b81:	c3                   	ret    

83000b82 <__fp_lock_all>:
83000b82:	55                   	push   %ebp
83000b83:	89 e5                	mov    %esp,%ebp
83000b85:	83 ec 08             	sub    $0x8,%esp
83000b88:	e8 c9 ff ff ff       	call   83000b56 <__sfp_lock_acquire>
83000b8d:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83000b92:	83 ec 08             	sub    $0x8,%esp
83000b95:	68 6e 0b 00 83       	push   $0x83000b6e
83000b9a:	50                   	push   %eax
83000b9b:	e8 7f 00 00 00       	call   83000c1f <_fwalk>
83000ba0:	83 c4 10             	add    $0x10,%esp
83000ba3:	90                   	nop
83000ba4:	c9                   	leave  
83000ba5:	c3                   	ret    

83000ba6 <__fp_unlock_all>:
83000ba6:	55                   	push   %ebp
83000ba7:	89 e5                	mov    %esp,%ebp
83000ba9:	83 ec 08             	sub    $0x8,%esp
83000bac:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83000bb1:	83 ec 08             	sub    $0x8,%esp
83000bb4:	68 78 0b 00 83       	push   $0x83000b78
83000bb9:	50                   	push   %eax
83000bba:	e8 60 00 00 00       	call   83000c1f <_fwalk>
83000bbf:	83 c4 10             	add    $0x10,%esp
83000bc2:	e8 95 ff ff ff       	call   83000b5c <__sfp_lock_release>
83000bc7:	90                   	nop
83000bc8:	c9                   	leave  
83000bc9:	c3                   	ret    

83000bca <_fiprintf_r>:
83000bca:	55                   	push   %ebp
83000bcb:	89 e5                	mov    %esp,%ebp
83000bcd:	83 ec 18             	sub    $0x18,%esp
83000bd0:	8d 45 14             	lea    0x14(%ebp),%eax
83000bd3:	89 45 f0             	mov    %eax,-0x10(%ebp)
83000bd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
83000bd9:	50                   	push   %eax
83000bda:	ff 75 10             	push   0x10(%ebp)
83000bdd:	ff 75 0c             	push   0xc(%ebp)
83000be0:	ff 75 08             	push   0x8(%ebp)
83000be3:	e8 ab 1e 00 00       	call   83002a93 <_vfiprintf_r>
83000be8:	83 c4 10             	add    $0x10,%esp
83000beb:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000bee:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000bf1:	c9                   	leave  
83000bf2:	c3                   	ret    

83000bf3 <fiprintf>:
83000bf3:	55                   	push   %ebp
83000bf4:	89 e5                	mov    %esp,%ebp
83000bf6:	83 ec 18             	sub    $0x18,%esp
83000bf9:	8d 45 10             	lea    0x10(%ebp),%eax
83000bfc:	89 45 f0             	mov    %eax,-0x10(%ebp)
83000bff:	8b 55 f0             	mov    -0x10(%ebp),%edx
83000c02:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83000c07:	52                   	push   %edx
83000c08:	ff 75 0c             	push   0xc(%ebp)
83000c0b:	ff 75 08             	push   0x8(%ebp)
83000c0e:	50                   	push   %eax
83000c0f:	e8 7f 1e 00 00       	call   83002a93 <_vfiprintf_r>
83000c14:	83 c4 10             	add    $0x10,%esp
83000c17:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000c1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000c1d:	c9                   	leave  
83000c1e:	c3                   	ret    

83000c1f <_fwalk>:
83000c1f:	55                   	push   %ebp
83000c20:	89 e5                	mov    %esp,%ebp
83000c22:	57                   	push   %edi
83000c23:	56                   	push   %esi
83000c24:	53                   	push   %ebx
83000c25:	83 ec 1c             	sub    $0x1c,%esp
83000c28:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83000c2f:	8b 45 08             	mov    0x8(%ebp),%eax
83000c32:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
83000c38:	eb 3e                	jmp    83000c78 <_fwalk+0x59>
83000c3a:	8b 5e 08             	mov    0x8(%esi),%ebx
83000c3d:	8b 7e 04             	mov    0x4(%esi),%edi
83000c40:	eb 2d                	jmp    83000c6f <_fwalk+0x50>
83000c42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83000c46:	66 85 c0             	test   %ax,%ax
83000c49:	74 21                	je     83000c6c <_fwalk+0x4d>
83000c4b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83000c4f:	66 83 f8 01          	cmp    $0x1,%ax
83000c53:	74 17                	je     83000c6c <_fwalk+0x4d>
83000c55:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
83000c59:	66 83 f8 ff          	cmp    $0xffff,%ax
83000c5d:	74 0d                	je     83000c6c <_fwalk+0x4d>
83000c5f:	83 ec 0c             	sub    $0xc,%esp
83000c62:	53                   	push   %ebx
83000c63:	ff 55 0c             	call   *0xc(%ebp)
83000c66:	83 c4 10             	add    $0x10,%esp
83000c69:	09 45 e4             	or     %eax,-0x1c(%ebp)
83000c6c:	83 c3 68             	add    $0x68,%ebx
83000c6f:	83 ef 01             	sub    $0x1,%edi
83000c72:	85 ff                	test   %edi,%edi
83000c74:	79 cc                	jns    83000c42 <_fwalk+0x23>
83000c76:	8b 36                	mov    (%esi),%esi
83000c78:	85 f6                	test   %esi,%esi
83000c7a:	75 be                	jne    83000c3a <_fwalk+0x1b>
83000c7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83000c7f:	8d 65 f4             	lea    -0xc(%ebp),%esp
83000c82:	5b                   	pop    %ebx
83000c83:	5e                   	pop    %esi
83000c84:	5f                   	pop    %edi
83000c85:	5d                   	pop    %ebp
83000c86:	c3                   	ret    

83000c87 <_fwalk_reent>:
83000c87:	55                   	push   %ebp
83000c88:	89 e5                	mov    %esp,%ebp
83000c8a:	57                   	push   %edi
83000c8b:	56                   	push   %esi
83000c8c:	53                   	push   %ebx
83000c8d:	83 ec 1c             	sub    $0x1c,%esp
83000c90:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83000c97:	8b 45 08             	mov    0x8(%ebp),%eax
83000c9a:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
83000ca0:	eb 41                	jmp    83000ce3 <_fwalk_reent+0x5c>
83000ca2:	8b 5e 08             	mov    0x8(%esi),%ebx
83000ca5:	8b 7e 04             	mov    0x4(%esi),%edi
83000ca8:	eb 30                	jmp    83000cda <_fwalk_reent+0x53>
83000caa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83000cae:	66 85 c0             	test   %ax,%ax
83000cb1:	74 24                	je     83000cd7 <_fwalk_reent+0x50>
83000cb3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83000cb7:	66 83 f8 01          	cmp    $0x1,%ax
83000cbb:	74 1a                	je     83000cd7 <_fwalk_reent+0x50>
83000cbd:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
83000cc1:	66 83 f8 ff          	cmp    $0xffff,%ax
83000cc5:	74 10                	je     83000cd7 <_fwalk_reent+0x50>
83000cc7:	83 ec 08             	sub    $0x8,%esp
83000cca:	53                   	push   %ebx
83000ccb:	ff 75 08             	push   0x8(%ebp)
83000cce:	ff 55 0c             	call   *0xc(%ebp)
83000cd1:	83 c4 10             	add    $0x10,%esp
83000cd4:	09 45 e4             	or     %eax,-0x1c(%ebp)
83000cd7:	83 c3 68             	add    $0x68,%ebx
83000cda:	83 ef 01             	sub    $0x1,%edi
83000cdd:	85 ff                	test   %edi,%edi
83000cdf:	79 c9                	jns    83000caa <_fwalk_reent+0x23>
83000ce1:	8b 36                	mov    (%esi),%esi
83000ce3:	85 f6                	test   %esi,%esi
83000ce5:	75 bb                	jne    83000ca2 <_fwalk_reent+0x1b>
83000ce7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83000cea:	8d 65 f4             	lea    -0xc(%ebp),%esp
83000ced:	5b                   	pop    %ebx
83000cee:	5e                   	pop    %esi
83000cef:	5f                   	pop    %edi
83000cf0:	5d                   	pop    %ebp
83000cf1:	c3                   	ret    

83000cf2 <_fwrite_r>:
83000cf2:	55                   	push   %ebp
83000cf3:	89 e5                	mov    %esp,%ebp
83000cf5:	83 ec 28             	sub    $0x28,%esp
83000cf8:	8b 45 0c             	mov    0xc(%ebp),%eax
83000cfb:	89 45 dc             	mov    %eax,-0x24(%ebp)
83000cfe:	8b 45 14             	mov    0x14(%ebp),%eax
83000d01:	0f af 45 10          	imul   0x10(%ebp),%eax
83000d05:	89 45 f4             	mov    %eax,-0xc(%ebp)
83000d08:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000d0b:	89 45 e0             	mov    %eax,-0x20(%ebp)
83000d0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
83000d11:	89 45 ec             	mov    %eax,-0x14(%ebp)
83000d14:	8d 45 dc             	lea    -0x24(%ebp),%eax
83000d17:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83000d1a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
83000d21:	8b 45 08             	mov    0x8(%ebp),%eax
83000d24:	89 45 f0             	mov    %eax,-0x10(%ebp)
83000d27:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83000d2b:	74 18                	je     83000d45 <_fwrite_r+0x53>
83000d2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
83000d30:	8b 40 38             	mov    0x38(%eax),%eax
83000d33:	85 c0                	test   %eax,%eax
83000d35:	75 0e                	jne    83000d45 <_fwrite_r+0x53>
83000d37:	83 ec 0c             	sub    $0xc,%esp
83000d3a:	ff 75 f0             	push   -0x10(%ebp)
83000d3d:	e8 7b fd ff ff       	call   83000abd <__sinit>
83000d42:	83 c4 10             	add    $0x10,%esp
83000d45:	8b 45 18             	mov    0x18(%ebp),%eax
83000d48:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83000d4c:	98                   	cwtl   
83000d4d:	25 00 20 00 00       	and    $0x2000,%eax
83000d52:	85 c0                	test   %eax,%eax
83000d54:	75 24                	jne    83000d7a <_fwrite_r+0x88>
83000d56:	8b 45 18             	mov    0x18(%ebp),%eax
83000d59:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83000d5d:	80 cc 20             	or     $0x20,%ah
83000d60:	89 c2                	mov    %eax,%edx
83000d62:	8b 45 18             	mov    0x18(%ebp),%eax
83000d65:	66 89 50 0c          	mov    %dx,0xc(%eax)
83000d69:	8b 45 18             	mov    0x18(%ebp),%eax
83000d6c:	8b 40 64             	mov    0x64(%eax),%eax
83000d6f:	80 e4 df             	and    $0xdf,%ah
83000d72:	89 c2                	mov    %eax,%edx
83000d74:	8b 45 18             	mov    0x18(%ebp),%eax
83000d77:	89 50 64             	mov    %edx,0x64(%eax)
83000d7a:	83 ec 04             	sub    $0x4,%esp
83000d7d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
83000d80:	50                   	push   %eax
83000d81:	ff 75 18             	push   0x18(%ebp)
83000d84:	ff 75 08             	push   0x8(%ebp)
83000d87:	e8 a8 3f 00 00       	call   83004d34 <__sfvwrite_r>
83000d8c:	83 c4 10             	add    $0x10,%esp
83000d8f:	85 c0                	test   %eax,%eax
83000d91:	75 05                	jne    83000d98 <_fwrite_r+0xa6>
83000d93:	8b 45 14             	mov    0x14(%ebp),%eax
83000d96:	eb 10                	jmp    83000da8 <_fwrite_r+0xb6>
83000d98:	8b 55 ec             	mov    -0x14(%ebp),%edx
83000d9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
83000d9e:	29 d0                	sub    %edx,%eax
83000da0:	ba 00 00 00 00       	mov    $0x0,%edx
83000da5:	f7 75 10             	divl   0x10(%ebp)
83000da8:	c9                   	leave  
83000da9:	c3                   	ret    

83000daa <fwrite>:
83000daa:	55                   	push   %ebp
83000dab:	89 e5                	mov    %esp,%ebp
83000dad:	83 ec 08             	sub    $0x8,%esp
83000db0:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83000db5:	83 ec 0c             	sub    $0xc,%esp
83000db8:	ff 75 14             	push   0x14(%ebp)
83000dbb:	ff 75 10             	push   0x10(%ebp)
83000dbe:	ff 75 0c             	push   0xc(%ebp)
83000dc1:	ff 75 08             	push   0x8(%ebp)
83000dc4:	50                   	push   %eax
83000dc5:	e8 28 ff ff ff       	call   83000cf2 <_fwrite_r>
83000dca:	83 c4 20             	add    $0x20,%esp
83000dcd:	c9                   	leave  
83000dce:	c3                   	ret    

83000dcf <reverse_argv_elements>:
83000dcf:	55                   	push   %ebp
83000dd0:	89 e5                	mov    %esp,%ebp
83000dd2:	83 ec 10             	sub    $0x10,%esp
83000dd5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
83000ddc:	eb 5e                	jmp    83000e3c <reverse_argv_elements+0x6d>
83000dde:	8b 45 fc             	mov    -0x4(%ebp),%eax
83000de1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83000de8:	8b 45 08             	mov    0x8(%ebp),%eax
83000deb:	01 d0                	add    %edx,%eax
83000ded:	8b 00                	mov    (%eax),%eax
83000def:	89 45 f8             	mov    %eax,-0x8(%ebp)
83000df2:	8b 45 0c             	mov    0xc(%ebp),%eax
83000df5:	2b 45 fc             	sub    -0x4(%ebp),%eax
83000df8:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
83000dfd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83000e04:	8b 45 08             	mov    0x8(%ebp),%eax
83000e07:	01 d0                	add    %edx,%eax
83000e09:	8b 55 fc             	mov    -0x4(%ebp),%edx
83000e0c:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
83000e13:	8b 55 08             	mov    0x8(%ebp),%edx
83000e16:	01 ca                	add    %ecx,%edx
83000e18:	8b 00                	mov    (%eax),%eax
83000e1a:	89 02                	mov    %eax,(%edx)
83000e1c:	8b 45 0c             	mov    0xc(%ebp),%eax
83000e1f:	2b 45 fc             	sub    -0x4(%ebp),%eax
83000e22:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
83000e27:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83000e2e:	8b 45 08             	mov    0x8(%ebp),%eax
83000e31:	01 c2                	add    %eax,%edx
83000e33:	8b 45 f8             	mov    -0x8(%ebp),%eax
83000e36:	89 02                	mov    %eax,(%edx)
83000e38:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
83000e3c:	8b 45 0c             	mov    0xc(%ebp),%eax
83000e3f:	d1 f8                	sar    %eax
83000e41:	39 45 fc             	cmp    %eax,-0x4(%ebp)
83000e44:	7c 98                	jl     83000dde <reverse_argv_elements+0xf>
83000e46:	90                   	nop
83000e47:	90                   	nop
83000e48:	c9                   	leave  
83000e49:	c3                   	ret    

83000e4a <permute>:
83000e4a:	55                   	push   %ebp
83000e4b:	89 e5                	mov    %esp,%ebp
83000e4d:	ff 75 0c             	push   0xc(%ebp)
83000e50:	ff 75 08             	push   0x8(%ebp)
83000e53:	e8 77 ff ff ff       	call   83000dcf <reverse_argv_elements>
83000e58:	83 c4 08             	add    $0x8,%esp
83000e5b:	8b 55 0c             	mov    0xc(%ebp),%edx
83000e5e:	8b 45 10             	mov    0x10(%ebp),%eax
83000e61:	01 d0                	add    %edx,%eax
83000e63:	50                   	push   %eax
83000e64:	ff 75 08             	push   0x8(%ebp)
83000e67:	e8 63 ff ff ff       	call   83000dcf <reverse_argv_elements>
83000e6c:	83 c4 08             	add    $0x8,%esp
83000e6f:	ff 75 10             	push   0x10(%ebp)
83000e72:	ff 75 08             	push   0x8(%ebp)
83000e75:	e8 55 ff ff ff       	call   83000dcf <reverse_argv_elements>
83000e7a:	83 c4 08             	add    $0x8,%esp
83000e7d:	90                   	nop
83000e7e:	c9                   	leave  
83000e7f:	c3                   	ret    

83000e80 <is_option>:
83000e80:	55                   	push   %ebp
83000e81:	89 e5                	mov    %esp,%ebp
83000e83:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
83000e87:	74 1a                	je     83000ea3 <is_option+0x23>
83000e89:	8b 45 08             	mov    0x8(%ebp),%eax
83000e8c:	0f b6 00             	movzbl (%eax),%eax
83000e8f:	3c 2d                	cmp    $0x2d,%al
83000e91:	74 10                	je     83000ea3 <is_option+0x23>
83000e93:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83000e97:	74 11                	je     83000eaa <is_option+0x2a>
83000e99:	8b 45 08             	mov    0x8(%ebp),%eax
83000e9c:	0f b6 00             	movzbl (%eax),%eax
83000e9f:	3c 2b                	cmp    $0x2b,%al
83000ea1:	75 07                	jne    83000eaa <is_option+0x2a>
83000ea3:	b8 01 00 00 00       	mov    $0x1,%eax
83000ea8:	eb 05                	jmp    83000eaf <is_option+0x2f>
83000eaa:	b8 00 00 00 00       	mov    $0x0,%eax
83000eaf:	5d                   	pop    %ebp
83000eb0:	c3                   	ret    

83000eb1 <read_globals>:
83000eb1:	55                   	push   %ebp
83000eb2:	89 e5                	mov    %esp,%ebp
83000eb4:	8b 15 c8 73 00 83    	mov    0x830073c8,%edx
83000eba:	8b 45 08             	mov    0x8(%ebp),%eax
83000ebd:	89 10                	mov    %edx,(%eax)
83000ebf:	8b 15 cc 73 00 83    	mov    0x830073cc,%edx
83000ec5:	8b 45 08             	mov    0x8(%ebp),%eax
83000ec8:	89 50 04             	mov    %edx,0x4(%eax)
83000ecb:	8b 15 c0 69 00 83    	mov    0x830069c0,%edx
83000ed1:	8b 45 08             	mov    0x8(%ebp),%eax
83000ed4:	89 50 08             	mov    %edx,0x8(%eax)
83000ed7:	8b 15 c4 69 00 83    	mov    0x830069c4,%edx
83000edd:	8b 45 08             	mov    0x8(%ebp),%eax
83000ee0:	89 50 0c             	mov    %edx,0xc(%eax)
83000ee3:	8b 15 d0 73 00 83    	mov    0x830073d0,%edx
83000ee9:	8b 45 08             	mov    0x8(%ebp),%eax
83000eec:	89 50 10             	mov    %edx,0x10(%eax)
83000eef:	8b 15 d4 73 00 83    	mov    0x830073d4,%edx
83000ef5:	8b 45 08             	mov    0x8(%ebp),%eax
83000ef8:	89 50 14             	mov    %edx,0x14(%eax)
83000efb:	8b 15 d8 73 00 83    	mov    0x830073d8,%edx
83000f01:	8b 45 08             	mov    0x8(%ebp),%eax
83000f04:	89 50 18             	mov    %edx,0x18(%eax)
83000f07:	90                   	nop
83000f08:	5d                   	pop    %ebp
83000f09:	c3                   	ret    

83000f0a <write_globals>:
83000f0a:	55                   	push   %ebp
83000f0b:	89 e5                	mov    %esp,%ebp
83000f0d:	8b 45 08             	mov    0x8(%ebp),%eax
83000f10:	8b 00                	mov    (%eax),%eax
83000f12:	a3 c8 73 00 83       	mov    %eax,0x830073c8
83000f17:	8b 45 08             	mov    0x8(%ebp),%eax
83000f1a:	8b 40 04             	mov    0x4(%eax),%eax
83000f1d:	a3 cc 73 00 83       	mov    %eax,0x830073cc
83000f22:	8b 45 08             	mov    0x8(%ebp),%eax
83000f25:	8b 40 08             	mov    0x8(%eax),%eax
83000f28:	a3 c0 69 00 83       	mov    %eax,0x830069c0
83000f2d:	8b 45 08             	mov    0x8(%ebp),%eax
83000f30:	8b 40 0c             	mov    0xc(%eax),%eax
83000f33:	a3 c4 69 00 83       	mov    %eax,0x830069c4
83000f38:	8b 45 08             	mov    0x8(%ebp),%eax
83000f3b:	8b 40 10             	mov    0x10(%eax),%eax
83000f3e:	a3 d0 73 00 83       	mov    %eax,0x830073d0
83000f43:	8b 45 08             	mov    0x8(%ebp),%eax
83000f46:	8b 40 14             	mov    0x14(%eax),%eax
83000f49:	a3 d4 73 00 83       	mov    %eax,0x830073d4
83000f4e:	8b 45 08             	mov    0x8(%ebp),%eax
83000f51:	8b 40 18             	mov    0x18(%eax),%eax
83000f54:	a3 d8 73 00 83       	mov    %eax,0x830073d8
83000f59:	90                   	nop
83000f5a:	5d                   	pop    %ebp
83000f5b:	c3                   	ret    

83000f5c <getopt_internal>:
83000f5c:	55                   	push   %ebp
83000f5d:	89 e5                	mov    %esp,%ebp
83000f5f:	53                   	push   %ebx
83000f60:	83 ec 34             	sub    $0x34,%esp
83000f63:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
83000f6a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
83000f71:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
83000f78:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
83000f7f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
83000f86:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
83000f8d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
83000f94:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
83000f9b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
83000fa2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
83000fa6:	74 35                	je     83000fdd <getopt_internal+0x81>
83000fa8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83000fac:	74 2f                	je     83000fdd <getopt_internal+0x81>
83000fae:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
83000fb2:	75 06                	jne    83000fba <getopt_internal+0x5e>
83000fb4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
83000fb8:	74 23                	je     83000fdd <getopt_internal+0x81>
83000fba:	8b 45 20             	mov    0x20(%ebp),%eax
83000fbd:	8b 40 04             	mov    0x4(%eax),%eax
83000fc0:	39 45 08             	cmp    %eax,0x8(%ebp)
83000fc3:	7e 18                	jle    83000fdd <getopt_internal+0x81>
83000fc5:	8b 45 20             	mov    0x20(%ebp),%eax
83000fc8:	8b 40 04             	mov    0x4(%eax),%eax
83000fcb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83000fd2:	8b 45 0c             	mov    0xc(%ebp),%eax
83000fd5:	01 d0                	add    %edx,%eax
83000fd7:	8b 00                	mov    (%eax),%eax
83000fd9:	85 c0                	test   %eax,%eax
83000fdb:	75 0a                	jne    83000fe7 <getopt_internal+0x8b>
83000fdd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83000fe2:	e9 85 0a 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83000fe7:	8b 45 20             	mov    0x20(%ebp),%eax
83000fea:	8b 40 04             	mov    0x4(%eax),%eax
83000fed:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83000ff4:	8b 45 0c             	mov    0xc(%ebp),%eax
83000ff7:	01 d0                	add    %edx,%eax
83000ff9:	8b 00                	mov    (%eax),%eax
83000ffb:	83 ec 08             	sub    $0x8,%esp
83000ffe:	68 c0 65 00 83       	push   $0x830065c0
83001003:	50                   	push   %eax
83001004:	e8 43 29 00 00       	call   8300394c <strcmp>
83001009:	83 c4 10             	add    $0x10,%esp
8300100c:	85 c0                	test   %eax,%eax
8300100e:	75 19                	jne    83001029 <getopt_internal+0xcd>
83001010:	8b 45 20             	mov    0x20(%ebp),%eax
83001013:	8b 40 04             	mov    0x4(%eax),%eax
83001016:	8d 50 01             	lea    0x1(%eax),%edx
83001019:	8b 45 20             	mov    0x20(%ebp),%eax
8300101c:	89 50 04             	mov    %edx,0x4(%eax)
8300101f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83001024:	e9 43 0a 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83001029:	8b 45 20             	mov    0x20(%ebp),%eax
8300102c:	8b 40 04             	mov    0x4(%eax),%eax
8300102f:	85 c0                	test   %eax,%eax
83001031:	75 28                	jne    8300105b <getopt_internal+0xff>
83001033:	8b 45 20             	mov    0x20(%ebp),%eax
83001036:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
8300103d:	8b 45 20             	mov    0x20(%ebp),%eax
83001040:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
83001047:	8b 45 20             	mov    0x20(%ebp),%eax
8300104a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
83001051:	8b 45 20             	mov    0x20(%ebp),%eax
83001054:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8300105b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8300105f:	74 33                	je     83001094 <getopt_internal+0x138>
83001061:	8b 45 10             	mov    0x10(%ebp),%eax
83001064:	0f b6 00             	movzbl (%eax),%eax
83001067:	3c 2d                	cmp    $0x2d,%al
83001069:	74 0a                	je     83001075 <getopt_internal+0x119>
8300106b:	8b 45 10             	mov    0x10(%ebp),%eax
8300106e:	0f b6 00             	movzbl (%eax),%eax
83001071:	3c 2b                	cmp    $0x2b,%al
83001073:	75 1f                	jne    83001094 <getopt_internal+0x138>
83001075:	8b 45 10             	mov    0x10(%ebp),%eax
83001078:	0f b6 00             	movzbl (%eax),%eax
8300107b:	3c 2d                	cmp    $0x2d,%al
8300107d:	75 07                	jne    83001086 <getopt_internal+0x12a>
8300107f:	b8 01 00 00 00       	mov    $0x1,%eax
83001084:	eb 05                	jmp    8300108b <getopt_internal+0x12f>
83001086:	b8 02 00 00 00       	mov    $0x2,%eax
8300108b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300108e:	83 45 10 01          	addl   $0x1,0x10(%ebp)
83001092:	eb 23                	jmp    830010b7 <getopt_internal+0x15b>
83001094:	83 ec 0c             	sub    $0xc,%esp
83001097:	68 c3 65 00 83       	push   $0x830065c3
8300109c:	e8 51 41 00 00       	call   830051f2 <getenv>
830010a1:	83 c4 10             	add    $0x10,%esp
830010a4:	85 c0                	test   %eax,%eax
830010a6:	74 07                	je     830010af <getopt_internal+0x153>
830010a8:	b8 02 00 00 00       	mov    $0x2,%eax
830010ad:	eb 05                	jmp    830010b4 <getopt_internal+0x158>
830010af:	b8 00 00 00 00       	mov    $0x0,%eax
830010b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
830010b7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
830010bb:	74 15                	je     830010d2 <getopt_internal+0x176>
830010bd:	8b 45 10             	mov    0x10(%ebp),%eax
830010c0:	0f b6 00             	movzbl (%eax),%eax
830010c3:	3c 3a                	cmp    $0x3a,%al
830010c5:	75 0b                	jne    830010d2 <getopt_internal+0x176>
830010c7:	83 45 10 01          	addl   $0x1,0x10(%ebp)
830010cb:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
830010d2:	8b 45 20             	mov    0x20(%ebp),%eax
830010d5:	8b 40 10             	mov    0x10(%eax),%eax
830010d8:	83 f8 01             	cmp    $0x1,%eax
830010db:	0f 85 a2 01 00 00    	jne    83001283 <getopt_internal+0x327>
830010e1:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
830010e5:	0f 84 02 01 00 00    	je     830011ed <getopt_internal+0x291>
830010eb:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
830010ef:	0f 84 56 01 00 00    	je     8300124b <getopt_internal+0x2ef>
830010f5:	8b 45 20             	mov    0x20(%ebp),%eax
830010f8:	8b 50 04             	mov    0x4(%eax),%edx
830010fb:	8b 45 20             	mov    0x20(%ebp),%eax
830010fe:	89 50 14             	mov    %edx,0x14(%eax)
83001101:	8b 45 20             	mov    0x20(%ebp),%eax
83001104:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8300110b:	eb 1e                	jmp    8300112b <getopt_internal+0x1cf>
8300110d:	8b 45 20             	mov    0x20(%ebp),%eax
83001110:	8b 40 04             	mov    0x4(%eax),%eax
83001113:	8d 50 01             	lea    0x1(%eax),%edx
83001116:	8b 45 20             	mov    0x20(%ebp),%eax
83001119:	89 50 04             	mov    %edx,0x4(%eax)
8300111c:	8b 45 20             	mov    0x20(%ebp),%eax
8300111f:	8b 40 18             	mov    0x18(%eax),%eax
83001122:	8d 50 01             	lea    0x1(%eax),%edx
83001125:	8b 45 20             	mov    0x20(%ebp),%eax
83001128:	89 50 18             	mov    %edx,0x18(%eax)
8300112b:	8b 45 20             	mov    0x20(%ebp),%eax
8300112e:	8b 40 04             	mov    0x4(%eax),%eax
83001131:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001138:	8b 45 0c             	mov    0xc(%ebp),%eax
8300113b:	01 d0                	add    %edx,%eax
8300113d:	8b 00                	mov    (%eax),%eax
8300113f:	83 ec 08             	sub    $0x8,%esp
83001142:	ff 75 1c             	push   0x1c(%ebp)
83001145:	50                   	push   %eax
83001146:	e8 35 fd ff ff       	call   83000e80 <is_option>
8300114b:	83 c4 10             	add    $0x10,%esp
8300114e:	85 c0                	test   %eax,%eax
83001150:	74 bb                	je     8300110d <getopt_internal+0x1b1>
83001152:	8b 45 20             	mov    0x20(%ebp),%eax
83001155:	8b 40 04             	mov    0x4(%eax),%eax
83001158:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300115f:	8b 45 0c             	mov    0xc(%ebp),%eax
83001162:	01 d0                	add    %edx,%eax
83001164:	8b 00                	mov    (%eax),%eax
83001166:	85 c0                	test   %eax,%eax
83001168:	75 16                	jne    83001180 <getopt_internal+0x224>
8300116a:	8b 45 20             	mov    0x20(%ebp),%eax
8300116d:	8b 50 14             	mov    0x14(%eax),%edx
83001170:	8b 45 20             	mov    0x20(%ebp),%eax
83001173:	89 50 04             	mov    %edx,0x4(%eax)
83001176:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300117b:	e9 ec 08 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83001180:	8b 45 20             	mov    0x20(%ebp),%eax
83001183:	8b 40 04             	mov    0x4(%eax),%eax
83001186:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300118d:	8b 45 0c             	mov    0xc(%ebp),%eax
83001190:	01 d0                	add    %edx,%eax
83001192:	8b 00                	mov    (%eax),%eax
83001194:	83 ec 08             	sub    $0x8,%esp
83001197:	68 c0 65 00 83       	push   $0x830065c0
8300119c:	50                   	push   %eax
8300119d:	e8 aa 27 00 00       	call   8300394c <strcmp>
830011a2:	83 c4 10             	add    $0x10,%esp
830011a5:	85 c0                	test   %eax,%eax
830011a7:	0f 85 cf 00 00 00    	jne    8300127c <getopt_internal+0x320>
830011ad:	8b 45 20             	mov    0x20(%ebp),%eax
830011b0:	8b 40 18             	mov    0x18(%eax),%eax
830011b3:	8b 55 20             	mov    0x20(%ebp),%edx
830011b6:	8b 52 14             	mov    0x14(%edx),%edx
830011b9:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
830011c0:	8b 55 0c             	mov    0xc(%ebp),%edx
830011c3:	01 ca                	add    %ecx,%edx
830011c5:	83 ec 04             	sub    $0x4,%esp
830011c8:	6a 01                	push   $0x1
830011ca:	50                   	push   %eax
830011cb:	52                   	push   %edx
830011cc:	e8 79 fc ff ff       	call   83000e4a <permute>
830011d1:	83 c4 10             	add    $0x10,%esp
830011d4:	8b 45 20             	mov    0x20(%ebp),%eax
830011d7:	8b 40 14             	mov    0x14(%eax),%eax
830011da:	8d 50 01             	lea    0x1(%eax),%edx
830011dd:	8b 45 20             	mov    0x20(%ebp),%eax
830011e0:	89 50 04             	mov    %edx,0x4(%eax)
830011e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830011e8:	e9 7f 08 00 00       	jmp    83001a6c <getopt_internal+0xb10>
830011ed:	8b 45 20             	mov    0x20(%ebp),%eax
830011f0:	8b 40 04             	mov    0x4(%eax),%eax
830011f3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830011fa:	8b 45 0c             	mov    0xc(%ebp),%eax
830011fd:	01 d0                	add    %edx,%eax
830011ff:	8b 00                	mov    (%eax),%eax
83001201:	83 ec 08             	sub    $0x8,%esp
83001204:	ff 75 1c             	push   0x1c(%ebp)
83001207:	50                   	push   %eax
83001208:	e8 73 fc ff ff       	call   83000e80 <is_option>
8300120d:	83 c4 10             	add    $0x10,%esp
83001210:	85 c0                	test   %eax,%eax
83001212:	75 6b                	jne    8300127f <getopt_internal+0x323>
83001214:	8b 45 20             	mov    0x20(%ebp),%eax
83001217:	8b 40 04             	mov    0x4(%eax),%eax
8300121a:	8d 48 01             	lea    0x1(%eax),%ecx
8300121d:	8b 55 20             	mov    0x20(%ebp),%edx
83001220:	89 4a 04             	mov    %ecx,0x4(%edx)
83001223:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300122a:	8b 45 0c             	mov    0xc(%ebp),%eax
8300122d:	01 d0                	add    %edx,%eax
8300122f:	8b 10                	mov    (%eax),%edx
83001231:	8b 45 20             	mov    0x20(%ebp),%eax
83001234:	89 10                	mov    %edx,(%eax)
83001236:	8b 45 20             	mov    0x20(%ebp),%eax
83001239:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
83001240:	8b 45 20             	mov    0x20(%ebp),%eax
83001243:	8b 40 0c             	mov    0xc(%eax),%eax
83001246:	e9 21 08 00 00       	jmp    83001a6c <getopt_internal+0xb10>
8300124b:	8b 45 20             	mov    0x20(%ebp),%eax
8300124e:	8b 40 04             	mov    0x4(%eax),%eax
83001251:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001258:	8b 45 0c             	mov    0xc(%ebp),%eax
8300125b:	01 d0                	add    %edx,%eax
8300125d:	8b 00                	mov    (%eax),%eax
8300125f:	83 ec 08             	sub    $0x8,%esp
83001262:	ff 75 1c             	push   0x1c(%ebp)
83001265:	50                   	push   %eax
83001266:	e8 15 fc ff ff       	call   83000e80 <is_option>
8300126b:	83 c4 10             	add    $0x10,%esp
8300126e:	85 c0                	test   %eax,%eax
83001270:	75 10                	jne    83001282 <getopt_internal+0x326>
83001272:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83001277:	e9 f0 07 00 00       	jmp    83001a6c <getopt_internal+0xb10>
8300127c:	90                   	nop
8300127d:	eb 04                	jmp    83001283 <getopt_internal+0x327>
8300127f:	90                   	nop
83001280:	eb 01                	jmp    83001283 <getopt_internal+0x327>
83001282:	90                   	nop
83001283:	8b 45 20             	mov    0x20(%ebp),%eax
83001286:	8b 40 04             	mov    0x4(%eax),%eax
83001289:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001290:	8b 45 0c             	mov    0xc(%ebp),%eax
83001293:	01 d0                	add    %edx,%eax
83001295:	8b 00                	mov    (%eax),%eax
83001297:	85 c0                	test   %eax,%eax
83001299:	75 0a                	jne    830012a5 <getopt_internal+0x349>
8300129b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830012a0:	e9 c7 07 00 00       	jmp    83001a6c <getopt_internal+0xb10>
830012a5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
830012a9:	0f 84 15 03 00 00    	je     830015c4 <getopt_internal+0x668>
830012af:	8b 45 20             	mov    0x20(%ebp),%eax
830012b2:	8b 40 04             	mov    0x4(%eax),%eax
830012b5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830012bc:	8b 45 0c             	mov    0xc(%ebp),%eax
830012bf:	01 d0                	add    %edx,%eax
830012c1:	8b 00                	mov    (%eax),%eax
830012c3:	83 ec 04             	sub    $0x4,%esp
830012c6:	6a 02                	push   $0x2
830012c8:	68 c0 65 00 83       	push   $0x830065c0
830012cd:	50                   	push   %eax
830012ce:	e8 82 14 00 00       	call   83002755 <memcmp>
830012d3:	83 c4 10             	add    $0x10,%esp
830012d6:	85 c0                	test   %eax,%eax
830012d8:	74 29                	je     83001303 <getopt_internal+0x3a7>
830012da:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
830012de:	0f 84 e0 02 00 00    	je     830015c4 <getopt_internal+0x668>
830012e4:	8b 45 20             	mov    0x20(%ebp),%eax
830012e7:	8b 40 04             	mov    0x4(%eax),%eax
830012ea:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830012f1:	8b 45 0c             	mov    0xc(%ebp),%eax
830012f4:	01 d0                	add    %edx,%eax
830012f6:	8b 00                	mov    (%eax),%eax
830012f8:	0f b6 00             	movzbl (%eax),%eax
830012fb:	3c 2b                	cmp    $0x2b,%al
830012fd:	0f 85 c1 02 00 00    	jne    830015c4 <getopt_internal+0x668>
83001303:	8b 45 20             	mov    0x20(%ebp),%eax
83001306:	8b 40 10             	mov    0x10(%eax),%eax
83001309:	83 f8 01             	cmp    $0x1,%eax
8300130c:	0f 85 b2 02 00 00    	jne    830015c4 <getopt_internal+0x668>
83001312:	8b 45 20             	mov    0x20(%ebp),%eax
83001315:	8b 40 04             	mov    0x4(%eax),%eax
83001318:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300131f:	8b 45 0c             	mov    0xc(%ebp),%eax
83001322:	01 d0                	add    %edx,%eax
83001324:	8b 00                	mov    (%eax),%eax
83001326:	83 ec 04             	sub    $0x4,%esp
83001329:	6a 02                	push   $0x2
8300132b:	68 c0 65 00 83       	push   $0x830065c0
83001330:	50                   	push   %eax
83001331:	e8 1f 14 00 00       	call   83002755 <memcmp>
83001336:	83 c4 10             	add    $0x10,%esp
83001339:	85 c0                	test   %eax,%eax
8300133b:	75 0a                	jne    83001347 <getopt_internal+0x3eb>
8300133d:	8b 45 20             	mov    0x20(%ebp),%eax
83001340:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
83001347:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8300134e:	8b 45 20             	mov    0x20(%ebp),%eax
83001351:	8b 40 04             	mov    0x4(%eax),%eax
83001354:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300135b:	8b 45 0c             	mov    0xc(%ebp),%eax
8300135e:	01 d0                	add    %edx,%eax
83001360:	8b 10                	mov    (%eax),%edx
83001362:	8b 45 20             	mov    0x20(%ebp),%eax
83001365:	8b 40 10             	mov    0x10(%eax),%eax
83001368:	01 d0                	add    %edx,%eax
8300136a:	83 ec 08             	sub    $0x8,%esp
8300136d:	6a 3d                	push   $0x3d
8300136f:	50                   	push   %eax
83001370:	e8 db 24 00 00       	call   83003850 <strchr>
83001375:	83 c4 10             	add    $0x10,%esp
83001378:	89 45 e8             	mov    %eax,-0x18(%ebp)
8300137b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8300137f:	75 4a                	jne    830013cb <getopt_internal+0x46f>
83001381:	8b 45 20             	mov    0x20(%ebp),%eax
83001384:	8b 40 04             	mov    0x4(%eax),%eax
83001387:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8300138e:	8b 45 0c             	mov    0xc(%ebp),%eax
83001391:	01 d0                	add    %edx,%eax
83001393:	8b 00                	mov    (%eax),%eax
83001395:	83 ec 0c             	sub    $0xc,%esp
83001398:	50                   	push   %eax
83001399:	e8 62 26 00 00       	call   83003a00 <strlen>
8300139e:	83 c4 10             	add    $0x10,%esp
830013a1:	89 45 ec             	mov    %eax,-0x14(%ebp)
830013a4:	8b 45 20             	mov    0x20(%ebp),%eax
830013a7:	8b 40 04             	mov    0x4(%eax),%eax
830013aa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830013b1:	8b 45 0c             	mov    0xc(%ebp),%eax
830013b4:	01 d0                	add    %edx,%eax
830013b6:	8b 10                	mov    (%eax),%edx
830013b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
830013bb:	01 d0                	add    %edx,%eax
830013bd:	89 45 e8             	mov    %eax,-0x18(%ebp)
830013c0:	8b 45 20             	mov    0x20(%ebp),%eax
830013c3:	8b 40 10             	mov    0x10(%eax),%eax
830013c6:	29 45 ec             	sub    %eax,-0x14(%ebp)
830013c9:	eb 28                	jmp    830013f3 <getopt_internal+0x497>
830013cb:	8b 45 20             	mov    0x20(%ebp),%eax
830013ce:	8b 40 04             	mov    0x4(%eax),%eax
830013d1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830013d8:	8b 45 0c             	mov    0xc(%ebp),%eax
830013db:	01 d0                	add    %edx,%eax
830013dd:	8b 08                	mov    (%eax),%ecx
830013df:	8b 45 e8             	mov    -0x18(%ebp),%eax
830013e2:	29 c8                	sub    %ecx,%eax
830013e4:	89 c2                	mov    %eax,%edx
830013e6:	8b 45 20             	mov    0x20(%ebp),%eax
830013e9:	8b 48 10             	mov    0x10(%eax),%ecx
830013ec:	89 d0                	mov    %edx,%eax
830013ee:	29 c8                	sub    %ecx,%eax
830013f0:	89 45 ec             	mov    %eax,-0x14(%ebp)
830013f3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
830013fa:	e9 95 01 00 00       	jmp    83001594 <getopt_internal+0x638>
830013ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001402:	c1 e0 04             	shl    $0x4,%eax
83001405:	89 c2                	mov    %eax,%edx
83001407:	8b 45 14             	mov    0x14(%ebp),%eax
8300140a:	01 d0                	add    %edx,%eax
8300140c:	8b 00                	mov    (%eax),%eax
8300140e:	8b 55 20             	mov    0x20(%ebp),%edx
83001411:	8b 52 04             	mov    0x4(%edx),%edx
83001414:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8300141b:	8b 55 0c             	mov    0xc(%ebp),%edx
8300141e:	01 ca                	add    %ecx,%edx
83001420:	8b 0a                	mov    (%edx),%ecx
83001422:	8b 55 20             	mov    0x20(%ebp),%edx
83001425:	8b 52 10             	mov    0x10(%edx),%edx
83001428:	01 ca                	add    %ecx,%edx
8300142a:	83 ec 04             	sub    $0x4,%esp
8300142d:	ff 75 ec             	push   -0x14(%ebp)
83001430:	50                   	push   %eax
83001431:	52                   	push   %edx
83001432:	e8 1e 13 00 00       	call   83002755 <memcmp>
83001437:	83 c4 10             	add    $0x10,%esp
8300143a:	85 c0                	test   %eax,%eax
8300143c:	0f 85 4e 01 00 00    	jne    83001590 <getopt_internal+0x634>
83001442:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001445:	c1 e0 04             	shl    $0x4,%eax
83001448:	89 c2                	mov    %eax,%edx
8300144a:	8b 45 14             	mov    0x14(%ebp),%eax
8300144d:	01 d0                	add    %edx,%eax
8300144f:	8b 00                	mov    (%eax),%eax
83001451:	83 ec 0c             	sub    $0xc,%esp
83001454:	50                   	push   %eax
83001455:	e8 a6 25 00 00       	call   83003a00 <strlen>
8300145a:	83 c4 10             	add    $0x10,%esp
8300145d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
83001460:	75 0b                	jne    8300146d <getopt_internal+0x511>
83001462:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001465:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83001468:	e9 3e 01 00 00       	jmp    830015ab <getopt_internal+0x64f>
8300146d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83001471:	79 0b                	jns    8300147e <getopt_internal+0x522>
83001473:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001476:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83001479:	e9 12 01 00 00       	jmp    83001590 <getopt_internal+0x634>
8300147e:	8b 45 20             	mov    0x20(%ebp),%eax
83001481:	8b 40 08             	mov    0x8(%eax),%eax
83001484:	85 c0                	test   %eax,%eax
83001486:	0f 84 ef 00 00 00    	je     8300157b <getopt_internal+0x61f>
8300148c:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001491:	8b 50 0c             	mov    0xc(%eax),%edx
83001494:	8b 45 0c             	mov    0xc(%ebp),%eax
83001497:	8b 00                	mov    (%eax),%eax
83001499:	83 ec 08             	sub    $0x8,%esp
8300149c:	52                   	push   %edx
8300149d:	50                   	push   %eax
8300149e:	e8 81 31 00 00       	call   83004624 <fputs>
830014a3:	83 c4 10             	add    $0x10,%esp
830014a6:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830014ab:	8b 40 0c             	mov    0xc(%eax),%eax
830014ae:	83 ec 08             	sub    $0x8,%esp
830014b1:	50                   	push   %eax
830014b2:	68 d3 65 00 83       	push   $0x830065d3
830014b7:	e8 68 31 00 00       	call   83004624 <fputs>
830014bc:	83 c4 10             	add    $0x10,%esp
830014bf:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830014c4:	8b 50 0c             	mov    0xc(%eax),%edx
830014c7:	8b 45 20             	mov    0x20(%ebp),%eax
830014ca:	8b 40 04             	mov    0x4(%eax),%eax
830014cd:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
830014d4:	8b 45 0c             	mov    0xc(%ebp),%eax
830014d7:	01 c8                	add    %ecx,%eax
830014d9:	8b 00                	mov    (%eax),%eax
830014db:	83 ec 08             	sub    $0x8,%esp
830014de:	52                   	push   %edx
830014df:	50                   	push   %eax
830014e0:	e8 3f 31 00 00       	call   83004624 <fputs>
830014e5:	83 c4 10             	add    $0x10,%esp
830014e8:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830014ed:	8b 40 0c             	mov    0xc(%eax),%eax
830014f0:	83 ec 08             	sub    $0x8,%esp
830014f3:	50                   	push   %eax
830014f4:	68 de 65 00 83       	push   $0x830065de
830014f9:	e8 26 31 00 00       	call   83004624 <fputs>
830014fe:	83 c4 10             	add    $0x10,%esp
83001501:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001506:	8b 50 0c             	mov    0xc(%eax),%edx
83001509:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300150c:	c1 e0 04             	shl    $0x4,%eax
8300150f:	89 c1                	mov    %eax,%ecx
83001511:	8b 45 14             	mov    0x14(%ebp),%eax
83001514:	01 c8                	add    %ecx,%eax
83001516:	8b 00                	mov    (%eax),%eax
83001518:	83 ec 08             	sub    $0x8,%esp
8300151b:	52                   	push   %edx
8300151c:	50                   	push   %eax
8300151d:	e8 02 31 00 00       	call   83004624 <fputs>
83001522:	83 c4 10             	add    $0x10,%esp
83001525:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300152a:	8b 40 0c             	mov    0xc(%eax),%eax
8300152d:	83 ec 08             	sub    $0x8,%esp
83001530:	50                   	push   %eax
83001531:	68 fb 65 00 83       	push   $0x830065fb
83001536:	e8 e9 30 00 00       	call   83004624 <fputs>
8300153b:	83 c4 10             	add    $0x10,%esp
8300153e:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001543:	8b 50 0c             	mov    0xc(%eax),%edx
83001546:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001549:	c1 e0 04             	shl    $0x4,%eax
8300154c:	89 c1                	mov    %eax,%ecx
8300154e:	8b 45 14             	mov    0x14(%ebp),%eax
83001551:	01 c8                	add    %ecx,%eax
83001553:	8b 00                	mov    (%eax),%eax
83001555:	83 ec 08             	sub    $0x8,%esp
83001558:	52                   	push   %edx
83001559:	50                   	push   %eax
8300155a:	e8 c5 30 00 00       	call   83004624 <fputs>
8300155f:	83 c4 10             	add    $0x10,%esp
83001562:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001567:	8b 40 0c             	mov    0xc(%eax),%eax
8300156a:	83 ec 08             	sub    $0x8,%esp
8300156d:	50                   	push   %eax
8300156e:	68 04 66 00 83       	push   $0x83006604
83001573:	e8 ac 30 00 00       	call   83004624 <fputs>
83001578:	83 c4 10             	add    $0x10,%esp
8300157b:	8b 45 20             	mov    0x20(%ebp),%eax
8300157e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
83001585:	8b 45 20             	mov    0x20(%ebp),%eax
83001588:	8b 40 0c             	mov    0xc(%eax),%eax
8300158b:	e9 dc 04 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83001590:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
83001594:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001597:	c1 e0 04             	shl    $0x4,%eax
8300159a:	89 c2                	mov    %eax,%edx
8300159c:	8b 45 14             	mov    0x14(%ebp),%eax
8300159f:	01 d0                	add    %edx,%eax
830015a1:	8b 00                	mov    (%eax),%eax
830015a3:	85 c0                	test   %eax,%eax
830015a5:	0f 85 54 fe ff ff    	jne    830013ff <getopt_internal+0x4a3>
830015ab:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
830015af:	78 13                	js     830015c4 <getopt_internal+0x668>
830015b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
830015b4:	c1 e0 04             	shl    $0x4,%eax
830015b7:	89 c2                	mov    %eax,%edx
830015b9:	8b 45 14             	mov    0x14(%ebp),%eax
830015bc:	01 d0                	add    %edx,%eax
830015be:	8b 40 04             	mov    0x4(%eax),%eax
830015c1:	89 45 e0             	mov    %eax,-0x20(%ebp)
830015c4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
830015c8:	0f 89 9a 01 00 00    	jns    83001768 <getopt_internal+0x80c>
830015ce:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
830015d2:	0f 84 90 01 00 00    	je     83001768 <getopt_internal+0x80c>
830015d8:	8b 45 20             	mov    0x20(%ebp),%eax
830015db:	8b 40 04             	mov    0x4(%eax),%eax
830015de:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830015e5:	8b 45 0c             	mov    0xc(%ebp),%eax
830015e8:	01 d0                	add    %edx,%eax
830015ea:	8b 10                	mov    (%eax),%edx
830015ec:	8b 45 20             	mov    0x20(%ebp),%eax
830015ef:	8b 40 10             	mov    0x10(%eax),%eax
830015f2:	01 d0                	add    %edx,%eax
830015f4:	0f b6 00             	movzbl (%eax),%eax
830015f7:	0f be c0             	movsbl %al,%eax
830015fa:	83 ec 08             	sub    $0x8,%esp
830015fd:	50                   	push   %eax
830015fe:	ff 75 10             	push   0x10(%ebp)
83001601:	e8 4a 22 00 00       	call   83003850 <strchr>
83001606:	83 c4 10             	add    $0x10,%esp
83001609:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300160c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
83001610:	0f 85 f1 00 00 00    	jne    83001707 <getopt_internal+0x7ab>
83001616:	8b 45 20             	mov    0x20(%ebp),%eax
83001619:	8b 40 08             	mov    0x8(%eax),%eax
8300161c:	85 c0                	test   %eax,%eax
8300161e:	0f 84 83 00 00 00    	je     830016a7 <getopt_internal+0x74b>
83001624:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001629:	8b 50 0c             	mov    0xc(%eax),%edx
8300162c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300162f:	8b 00                	mov    (%eax),%eax
83001631:	83 ec 08             	sub    $0x8,%esp
83001634:	52                   	push   %edx
83001635:	50                   	push   %eax
83001636:	e8 e9 2f 00 00       	call   83004624 <fputs>
8300163b:	83 c4 10             	add    $0x10,%esp
8300163e:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001643:	8b 40 0c             	mov    0xc(%eax),%eax
83001646:	83 ec 08             	sub    $0x8,%esp
83001649:	50                   	push   %eax
8300164a:	68 08 66 00 83       	push   $0x83006608
8300164f:	e8 d0 2f 00 00       	call   83004624 <fputs>
83001654:	83 c4 10             	add    $0x10,%esp
83001657:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300165c:	8b 50 0c             	mov    0xc(%eax),%edx
8300165f:	8b 45 20             	mov    0x20(%ebp),%eax
83001662:	8b 40 04             	mov    0x4(%eax),%eax
83001665:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8300166c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300166f:	01 c8                	add    %ecx,%eax
83001671:	8b 08                	mov    (%eax),%ecx
83001673:	8b 45 20             	mov    0x20(%ebp),%eax
83001676:	8b 40 10             	mov    0x10(%eax),%eax
83001679:	01 c8                	add    %ecx,%eax
8300167b:	0f b6 00             	movzbl (%eax),%eax
8300167e:	0f be c0             	movsbl %al,%eax
83001681:	83 ec 08             	sub    $0x8,%esp
83001684:	52                   	push   %edx
83001685:	50                   	push   %eax
83001686:	e8 a5 2e 00 00       	call   83004530 <fputc>
8300168b:	83 c4 10             	add    $0x10,%esp
8300168e:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001693:	8b 40 0c             	mov    0xc(%eax),%eax
83001696:	83 ec 08             	sub    $0x8,%esp
83001699:	50                   	push   %eax
8300169a:	68 1f 66 00 83       	push   $0x8300661f
8300169f:	e8 80 2f 00 00       	call   83004624 <fputs>
830016a4:	83 c4 10             	add    $0x10,%esp
830016a7:	8b 45 20             	mov    0x20(%ebp),%eax
830016aa:	8b 40 10             	mov    0x10(%eax),%eax
830016ad:	8d 50 01             	lea    0x1(%eax),%edx
830016b0:	8b 45 20             	mov    0x20(%ebp),%eax
830016b3:	89 50 10             	mov    %edx,0x10(%eax)
830016b6:	8b 45 20             	mov    0x20(%ebp),%eax
830016b9:	8b 40 04             	mov    0x4(%eax),%eax
830016bc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830016c3:	8b 45 0c             	mov    0xc(%ebp),%eax
830016c6:	01 d0                	add    %edx,%eax
830016c8:	8b 10                	mov    (%eax),%edx
830016ca:	8b 45 20             	mov    0x20(%ebp),%eax
830016cd:	8b 40 10             	mov    0x10(%eax),%eax
830016d0:	01 d0                	add    %edx,%eax
830016d2:	0f b6 00             	movzbl (%eax),%eax
830016d5:	84 c0                	test   %al,%al
830016d7:	75 19                	jne    830016f2 <getopt_internal+0x796>
830016d9:	8b 45 20             	mov    0x20(%ebp),%eax
830016dc:	8b 40 04             	mov    0x4(%eax),%eax
830016df:	8d 50 01             	lea    0x1(%eax),%edx
830016e2:	8b 45 20             	mov    0x20(%ebp),%eax
830016e5:	89 50 04             	mov    %edx,0x4(%eax)
830016e8:	8b 45 20             	mov    0x20(%ebp),%eax
830016eb:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
830016f2:	8b 45 20             	mov    0x20(%ebp),%eax
830016f5:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
830016fc:	8b 45 20             	mov    0x20(%ebp),%eax
830016ff:	8b 40 0c             	mov    0xc(%eax),%eax
83001702:	e9 65 03 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83001707:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300170a:	83 c0 01             	add    $0x1,%eax
8300170d:	0f b6 00             	movzbl (%eax),%eax
83001710:	3c 3a                	cmp    $0x3a,%al
83001712:	75 1b                	jne    8300172f <getopt_internal+0x7d3>
83001714:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001717:	83 c0 02             	add    $0x2,%eax
8300171a:	0f b6 00             	movzbl (%eax),%eax
8300171d:	3c 3a                	cmp    $0x3a,%al
8300171f:	75 07                	jne    83001728 <getopt_internal+0x7cc>
83001721:	b8 02 00 00 00       	mov    $0x2,%eax
83001726:	eb 0c                	jmp    83001734 <getopt_internal+0x7d8>
83001728:	b8 01 00 00 00       	mov    $0x1,%eax
8300172d:	eb 05                	jmp    83001734 <getopt_internal+0x7d8>
8300172f:	b8 00 00 00 00       	mov    $0x0,%eax
83001734:	89 45 e0             	mov    %eax,-0x20(%ebp)
83001737:	8b 45 20             	mov    0x20(%ebp),%eax
8300173a:	8b 40 04             	mov    0x4(%eax),%eax
8300173d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001744:	8b 45 0c             	mov    0xc(%ebp),%eax
83001747:	01 d0                	add    %edx,%eax
83001749:	8b 10                	mov    (%eax),%edx
8300174b:	8b 45 20             	mov    0x20(%ebp),%eax
8300174e:	8b 40 10             	mov    0x10(%eax),%eax
83001751:	83 c0 01             	add    $0x1,%eax
83001754:	01 d0                	add    %edx,%eax
83001756:	89 45 e8             	mov    %eax,-0x18(%ebp)
83001759:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300175c:	0f b6 00             	movzbl (%eax),%eax
8300175f:	0f be d0             	movsbl %al,%edx
83001762:	8b 45 20             	mov    0x20(%ebp),%eax
83001765:	89 50 0c             	mov    %edx,0xc(%eax)
83001768:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8300176f:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
83001773:	74 40                	je     830017b5 <getopt_internal+0x859>
83001775:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
83001779:	0f 85 b0 01 00 00    	jne    8300192f <getopt_internal+0x9d3>
8300177f:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001782:	0f b6 00             	movzbl (%eax),%eax
83001785:	3c 3d                	cmp    $0x3d,%al
83001787:	75 04                	jne    8300178d <getopt_internal+0x831>
83001789:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8300178d:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001790:	0f b6 00             	movzbl (%eax),%eax
83001793:	84 c0                	test   %al,%al
83001795:	74 05                	je     8300179c <getopt_internal+0x840>
83001797:	8b 45 e8             	mov    -0x18(%ebp),%eax
8300179a:	eb 05                	jmp    830017a1 <getopt_internal+0x845>
8300179c:	b8 00 00 00 00       	mov    $0x0,%eax
830017a1:	8b 55 20             	mov    0x20(%ebp),%edx
830017a4:	89 02                	mov    %eax,(%edx)
830017a6:	8b 45 20             	mov    0x20(%ebp),%eax
830017a9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
830017b0:	e9 d2 01 00 00       	jmp    83001987 <getopt_internal+0xa2b>
830017b5:	8b 45 e8             	mov    -0x18(%ebp),%eax
830017b8:	0f b6 00             	movzbl (%eax),%eax
830017bb:	3c 3d                	cmp    $0x3d,%al
830017bd:	75 04                	jne    830017c3 <getopt_internal+0x867>
830017bf:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
830017c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
830017c6:	0f b6 00             	movzbl (%eax),%eax
830017c9:	84 c0                	test   %al,%al
830017cb:	74 17                	je     830017e4 <getopt_internal+0x888>
830017cd:	8b 45 20             	mov    0x20(%ebp),%eax
830017d0:	8b 55 e8             	mov    -0x18(%ebp),%edx
830017d3:	89 10                	mov    %edx,(%eax)
830017d5:	8b 45 20             	mov    0x20(%ebp),%eax
830017d8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
830017df:	e9 a3 01 00 00       	jmp    83001987 <getopt_internal+0xa2b>
830017e4:	8b 45 20             	mov    0x20(%ebp),%eax
830017e7:	8b 40 04             	mov    0x4(%eax),%eax
830017ea:	83 c0 01             	add    $0x1,%eax
830017ed:	39 45 08             	cmp    %eax,0x8(%ebp)
830017f0:	0f 8f 0a 01 00 00    	jg     83001900 <getopt_internal+0x9a4>
830017f6:	8b 45 20             	mov    0x20(%ebp),%eax
830017f9:	8b 40 08             	mov    0x8(%eax),%eax
830017fc:	85 c0                	test   %eax,%eax
830017fe:	0f 84 d3 00 00 00    	je     830018d7 <getopt_internal+0x97b>
83001804:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001809:	8b 50 0c             	mov    0xc(%eax),%edx
8300180c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300180f:	8b 00                	mov    (%eax),%eax
83001811:	83 ec 08             	sub    $0x8,%esp
83001814:	52                   	push   %edx
83001815:	50                   	push   %eax
83001816:	e8 09 2e 00 00       	call   83004624 <fputs>
8300181b:	83 c4 10             	add    $0x10,%esp
8300181e:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001823:	8b 40 0c             	mov    0xc(%eax),%eax
83001826:	83 ec 08             	sub    $0x8,%esp
83001829:	50                   	push   %eax
8300182a:	68 24 66 00 83       	push   $0x83006624
8300182f:	e8 f0 2d 00 00       	call   83004624 <fputs>
83001834:	83 c4 10             	add    $0x10,%esp
83001837:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8300183b:	78 54                	js     83001891 <getopt_internal+0x935>
8300183d:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001842:	8b 40 0c             	mov    0xc(%eax),%eax
83001845:	83 ec 08             	sub    $0x8,%esp
83001848:	50                   	push   %eax
83001849:	6a 2d                	push   $0x2d
8300184b:	e8 e0 2c 00 00       	call   83004530 <fputc>
83001850:	83 c4 10             	add    $0x10,%esp
83001853:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001858:	8b 50 0c             	mov    0xc(%eax),%edx
8300185b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300185e:	c1 e0 04             	shl    $0x4,%eax
83001861:	89 c1                	mov    %eax,%ecx
83001863:	8b 45 14             	mov    0x14(%ebp),%eax
83001866:	01 c8                	add    %ecx,%eax
83001868:	8b 00                	mov    (%eax),%eax
8300186a:	83 ec 08             	sub    $0x8,%esp
8300186d:	52                   	push   %edx
8300186e:	50                   	push   %eax
8300186f:	e8 b0 2d 00 00       	call   83004624 <fputs>
83001874:	83 c4 10             	add    $0x10,%esp
83001877:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8300187b:	74 07                	je     83001884 <getopt_internal+0x928>
8300187d:	ba 3a 00 00 00       	mov    $0x3a,%edx
83001882:	eb 05                	jmp    83001889 <getopt_internal+0x92d>
83001884:	ba 3f 00 00 00       	mov    $0x3f,%edx
83001889:	8b 45 20             	mov    0x20(%ebp),%eax
8300188c:	89 50 0c             	mov    %edx,0xc(%eax)
8300188f:	eb 2d                	jmp    830018be <getopt_internal+0x962>
83001891:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001896:	8b 50 0c             	mov    0xc(%eax),%edx
83001899:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300189c:	0f b6 00             	movzbl (%eax),%eax
8300189f:	0f be c0             	movsbl %al,%eax
830018a2:	83 ec 08             	sub    $0x8,%esp
830018a5:	52                   	push   %edx
830018a6:	50                   	push   %eax
830018a7:	e8 84 2c 00 00       	call   83004530 <fputc>
830018ac:	83 c4 10             	add    $0x10,%esp
830018af:	8b 45 dc             	mov    -0x24(%ebp),%eax
830018b2:	0f b6 00             	movzbl (%eax),%eax
830018b5:	0f be d0             	movsbl %al,%edx
830018b8:	8b 45 20             	mov    0x20(%ebp),%eax
830018bb:	89 50 0c             	mov    %edx,0xc(%eax)
830018be:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830018c3:	8b 40 0c             	mov    0xc(%eax),%eax
830018c6:	83 ec 08             	sub    $0x8,%esp
830018c9:	50                   	push   %eax
830018ca:	68 1f 66 00 83       	push   $0x8300661f
830018cf:	e8 50 2d 00 00       	call   83004624 <fputs>
830018d4:	83 c4 10             	add    $0x10,%esp
830018d7:	8b 45 20             	mov    0x20(%ebp),%eax
830018da:	8b 40 04             	mov    0x4(%eax),%eax
830018dd:	8d 50 01             	lea    0x1(%eax),%edx
830018e0:	8b 45 20             	mov    0x20(%ebp),%eax
830018e3:	89 50 04             	mov    %edx,0x4(%eax)
830018e6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
830018ea:	74 0a                	je     830018f6 <getopt_internal+0x99a>
830018ec:	b8 3a 00 00 00       	mov    $0x3a,%eax
830018f1:	e9 76 01 00 00       	jmp    83001a6c <getopt_internal+0xb10>
830018f6:	b8 3f 00 00 00       	mov    $0x3f,%eax
830018fb:	e9 6c 01 00 00       	jmp    83001a6c <getopt_internal+0xb10>
83001900:	8b 45 20             	mov    0x20(%ebp),%eax
83001903:	8b 40 04             	mov    0x4(%eax),%eax
83001906:	83 c0 01             	add    $0x1,%eax
83001909:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001910:	8b 45 0c             	mov    0xc(%ebp),%eax
83001913:	01 d0                	add    %edx,%eax
83001915:	8b 10                	mov    (%eax),%edx
83001917:	8b 45 20             	mov    0x20(%ebp),%eax
8300191a:	89 10                	mov    %edx,(%eax)
8300191c:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
83001923:	8b 45 20             	mov    0x20(%ebp),%eax
83001926:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8300192d:	eb 58                	jmp    83001987 <getopt_internal+0xa2b>
8300192f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83001933:	79 3e                	jns    83001973 <getopt_internal+0xa17>
83001935:	8b 45 20             	mov    0x20(%ebp),%eax
83001938:	8b 40 10             	mov    0x10(%eax),%eax
8300193b:	8d 50 01             	lea    0x1(%eax),%edx
8300193e:	8b 45 20             	mov    0x20(%ebp),%eax
83001941:	89 50 10             	mov    %edx,0x10(%eax)
83001944:	8b 45 20             	mov    0x20(%ebp),%eax
83001947:	8b 40 04             	mov    0x4(%eax),%eax
8300194a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
83001951:	8b 45 0c             	mov    0xc(%ebp),%eax
83001954:	01 d0                	add    %edx,%eax
83001956:	8b 10                	mov    (%eax),%edx
83001958:	8b 45 20             	mov    0x20(%ebp),%eax
8300195b:	8b 40 10             	mov    0x10(%eax),%eax
8300195e:	01 d0                	add    %edx,%eax
83001960:	0f b6 00             	movzbl (%eax),%eax
83001963:	84 c0                	test   %al,%al
83001965:	75 16                	jne    8300197d <getopt_internal+0xa21>
83001967:	8b 45 20             	mov    0x20(%ebp),%eax
8300196a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
83001971:	eb 0a                	jmp    8300197d <getopt_internal+0xa21>
83001973:	8b 45 20             	mov    0x20(%ebp),%eax
83001976:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8300197d:	8b 45 20             	mov    0x20(%ebp),%eax
83001980:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
83001986:	90                   	nop
83001987:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8300198b:	75 57                	jne    830019e4 <getopt_internal+0xa88>
8300198d:	8b 45 20             	mov    0x20(%ebp),%eax
83001990:	8b 40 10             	mov    0x10(%eax),%eax
83001993:	83 f8 01             	cmp    $0x1,%eax
83001996:	75 4c                	jne    830019e4 <getopt_internal+0xa88>
83001998:	8b 45 20             	mov    0x20(%ebp),%eax
8300199b:	8b 40 18             	mov    0x18(%eax),%eax
8300199e:	85 c0                	test   %eax,%eax
830019a0:	74 42                	je     830019e4 <getopt_internal+0xa88>
830019a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
830019a5:	8d 48 01             	lea    0x1(%eax),%ecx
830019a8:	8b 45 20             	mov    0x20(%ebp),%eax
830019ab:	8b 40 18             	mov    0x18(%eax),%eax
830019ae:	8b 55 20             	mov    0x20(%ebp),%edx
830019b1:	8b 52 14             	mov    0x14(%edx),%edx
830019b4:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
830019bb:	8b 55 0c             	mov    0xc(%ebp),%edx
830019be:	01 da                	add    %ebx,%edx
830019c0:	83 ec 04             	sub    $0x4,%esp
830019c3:	51                   	push   %ecx
830019c4:	50                   	push   %eax
830019c5:	52                   	push   %edx
830019c6:	e8 7f f4 ff ff       	call   83000e4a <permute>
830019cb:	83 c4 10             	add    $0x10,%esp
830019ce:	8b 45 20             	mov    0x20(%ebp),%eax
830019d1:	8b 40 14             	mov    0x14(%eax),%eax
830019d4:	8d 50 01             	lea    0x1(%eax),%edx
830019d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
830019da:	01 c2                	add    %eax,%edx
830019dc:	8b 45 20             	mov    0x20(%ebp),%eax
830019df:	89 50 04             	mov    %edx,0x4(%eax)
830019e2:	eb 1f                	jmp    83001a03 <getopt_internal+0xaa7>
830019e4:	8b 45 20             	mov    0x20(%ebp),%eax
830019e7:	8b 40 10             	mov    0x10(%eax),%eax
830019ea:	83 f8 01             	cmp    $0x1,%eax
830019ed:	75 14                	jne    83001a03 <getopt_internal+0xaa7>
830019ef:	8b 45 20             	mov    0x20(%ebp),%eax
830019f2:	8b 40 04             	mov    0x4(%eax),%eax
830019f5:	8d 50 01             	lea    0x1(%eax),%edx
830019f8:	8b 45 d8             	mov    -0x28(%ebp),%eax
830019fb:	01 c2                	add    %eax,%edx
830019fd:	8b 45 20             	mov    0x20(%ebp),%eax
83001a00:	89 50 04             	mov    %edx,0x4(%eax)
83001a03:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83001a07:	78 5d                	js     83001a66 <getopt_internal+0xb0a>
83001a09:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
83001a0d:	74 08                	je     83001a17 <getopt_internal+0xabb>
83001a0f:	8b 45 18             	mov    0x18(%ebp),%eax
83001a12:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83001a15:	89 10                	mov    %edx,(%eax)
83001a17:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83001a1a:	c1 e0 04             	shl    $0x4,%eax
83001a1d:	89 c2                	mov    %eax,%edx
83001a1f:	8b 45 14             	mov    0x14(%ebp),%eax
83001a22:	01 d0                	add    %edx,%eax
83001a24:	8b 40 08             	mov    0x8(%eax),%eax
83001a27:	85 c0                	test   %eax,%eax
83001a29:	74 29                	je     83001a54 <getopt_internal+0xaf8>
83001a2b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83001a2e:	c1 e0 04             	shl    $0x4,%eax
83001a31:	89 c2                	mov    %eax,%edx
83001a33:	8b 45 14             	mov    0x14(%ebp),%eax
83001a36:	01 c2                	add    %eax,%edx
83001a38:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83001a3b:	c1 e0 04             	shl    $0x4,%eax
83001a3e:	89 c1                	mov    %eax,%ecx
83001a40:	8b 45 14             	mov    0x14(%ebp),%eax
83001a43:	01 c8                	add    %ecx,%eax
83001a45:	8b 40 08             	mov    0x8(%eax),%eax
83001a48:	8b 52 0c             	mov    0xc(%edx),%edx
83001a4b:	89 10                	mov    %edx,(%eax)
83001a4d:	b8 00 00 00 00       	mov    $0x0,%eax
83001a52:	eb 18                	jmp    83001a6c <getopt_internal+0xb10>
83001a54:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83001a57:	c1 e0 04             	shl    $0x4,%eax
83001a5a:	89 c2                	mov    %eax,%edx
83001a5c:	8b 45 14             	mov    0x14(%ebp),%eax
83001a5f:	01 d0                	add    %edx,%eax
83001a61:	8b 40 0c             	mov    0xc(%eax),%eax
83001a64:	eb 06                	jmp    83001a6c <getopt_internal+0xb10>
83001a66:	8b 45 20             	mov    0x20(%ebp),%eax
83001a69:	8b 40 0c             	mov    0xc(%eax),%eax
83001a6c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83001a6f:	c9                   	leave  
83001a70:	c3                   	ret    

83001a71 <getopt>:
83001a71:	55                   	push   %ebp
83001a72:	89 e5                	mov    %esp,%ebp
83001a74:	83 ec 28             	sub    $0x28,%esp
83001a77:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001a7a:	50                   	push   %eax
83001a7b:	e8 31 f4 ff ff       	call   83000eb1 <read_globals>
83001a80:	83 c4 04             	add    $0x4,%esp
83001a83:	83 ec 04             	sub    $0x4,%esp
83001a86:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001a89:	50                   	push   %eax
83001a8a:	6a 00                	push   $0x0
83001a8c:	6a 00                	push   $0x0
83001a8e:	6a 00                	push   $0x0
83001a90:	ff 75 10             	push   0x10(%ebp)
83001a93:	ff 75 0c             	push   0xc(%ebp)
83001a96:	ff 75 08             	push   0x8(%ebp)
83001a99:	e8 be f4 ff ff       	call   83000f5c <getopt_internal>
83001a9e:	83 c4 20             	add    $0x20,%esp
83001aa1:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001aa4:	83 ec 0c             	sub    $0xc,%esp
83001aa7:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001aaa:	50                   	push   %eax
83001aab:	e8 5a f4 ff ff       	call   83000f0a <write_globals>
83001ab0:	83 c4 10             	add    $0x10,%esp
83001ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001ab6:	c9                   	leave  
83001ab7:	c3                   	ret    

83001ab8 <getopt_long>:
83001ab8:	55                   	push   %ebp
83001ab9:	89 e5                	mov    %esp,%ebp
83001abb:	83 ec 28             	sub    $0x28,%esp
83001abe:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001ac1:	50                   	push   %eax
83001ac2:	e8 ea f3 ff ff       	call   83000eb1 <read_globals>
83001ac7:	83 c4 04             	add    $0x4,%esp
83001aca:	83 ec 04             	sub    $0x4,%esp
83001acd:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001ad0:	50                   	push   %eax
83001ad1:	6a 00                	push   $0x0
83001ad3:	ff 75 18             	push   0x18(%ebp)
83001ad6:	ff 75 14             	push   0x14(%ebp)
83001ad9:	ff 75 10             	push   0x10(%ebp)
83001adc:	ff 75 0c             	push   0xc(%ebp)
83001adf:	ff 75 08             	push   0x8(%ebp)
83001ae2:	e8 75 f4 ff ff       	call   83000f5c <getopt_internal>
83001ae7:	83 c4 20             	add    $0x20,%esp
83001aea:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001aed:	83 ec 0c             	sub    $0xc,%esp
83001af0:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001af3:	50                   	push   %eax
83001af4:	e8 11 f4 ff ff       	call   83000f0a <write_globals>
83001af9:	83 c4 10             	add    $0x10,%esp
83001afc:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001aff:	c9                   	leave  
83001b00:	c3                   	ret    

83001b01 <getopt_long_only>:
83001b01:	55                   	push   %ebp
83001b02:	89 e5                	mov    %esp,%ebp
83001b04:	83 ec 28             	sub    $0x28,%esp
83001b07:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001b0a:	50                   	push   %eax
83001b0b:	e8 a1 f3 ff ff       	call   83000eb1 <read_globals>
83001b10:	83 c4 04             	add    $0x4,%esp
83001b13:	83 ec 04             	sub    $0x4,%esp
83001b16:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001b19:	50                   	push   %eax
83001b1a:	6a 01                	push   $0x1
83001b1c:	ff 75 18             	push   0x18(%ebp)
83001b1f:	ff 75 14             	push   0x14(%ebp)
83001b22:	ff 75 10             	push   0x10(%ebp)
83001b25:	ff 75 0c             	push   0xc(%ebp)
83001b28:	ff 75 08             	push   0x8(%ebp)
83001b2b:	e8 2c f4 ff ff       	call   83000f5c <getopt_internal>
83001b30:	83 c4 20             	add    $0x20,%esp
83001b33:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001b36:	83 ec 0c             	sub    $0xc,%esp
83001b39:	8d 45 d8             	lea    -0x28(%ebp),%eax
83001b3c:	50                   	push   %eax
83001b3d:	e8 c8 f3 ff ff       	call   83000f0a <write_globals>
83001b42:	83 c4 10             	add    $0x10,%esp
83001b45:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001b48:	c9                   	leave  
83001b49:	c3                   	ret    

83001b4a <__getopt_r>:
83001b4a:	55                   	push   %ebp
83001b4b:	89 e5                	mov    %esp,%ebp
83001b4d:	83 ec 08             	sub    $0x8,%esp
83001b50:	83 ec 04             	sub    $0x4,%esp
83001b53:	ff 75 14             	push   0x14(%ebp)
83001b56:	6a 00                	push   $0x0
83001b58:	6a 00                	push   $0x0
83001b5a:	6a 00                	push   $0x0
83001b5c:	ff 75 10             	push   0x10(%ebp)
83001b5f:	ff 75 0c             	push   0xc(%ebp)
83001b62:	ff 75 08             	push   0x8(%ebp)
83001b65:	e8 f2 f3 ff ff       	call   83000f5c <getopt_internal>
83001b6a:	83 c4 20             	add    $0x20,%esp
83001b6d:	c9                   	leave  
83001b6e:	c3                   	ret    

83001b6f <__getopt_long_r>:
83001b6f:	55                   	push   %ebp
83001b70:	89 e5                	mov    %esp,%ebp
83001b72:	83 ec 08             	sub    $0x8,%esp
83001b75:	83 ec 04             	sub    $0x4,%esp
83001b78:	ff 75 1c             	push   0x1c(%ebp)
83001b7b:	6a 00                	push   $0x0
83001b7d:	ff 75 18             	push   0x18(%ebp)
83001b80:	ff 75 14             	push   0x14(%ebp)
83001b83:	ff 75 10             	push   0x10(%ebp)
83001b86:	ff 75 0c             	push   0xc(%ebp)
83001b89:	ff 75 08             	push   0x8(%ebp)
83001b8c:	e8 cb f3 ff ff       	call   83000f5c <getopt_internal>
83001b91:	83 c4 20             	add    $0x20,%esp
83001b94:	c9                   	leave  
83001b95:	c3                   	ret    

83001b96 <__getopt_long_only_r>:
83001b96:	55                   	push   %ebp
83001b97:	89 e5                	mov    %esp,%ebp
83001b99:	83 ec 08             	sub    $0x8,%esp
83001b9c:	83 ec 04             	sub    $0x4,%esp
83001b9f:	ff 75 1c             	push   0x1c(%ebp)
83001ba2:	6a 01                	push   $0x1
83001ba4:	ff 75 18             	push   0x18(%ebp)
83001ba7:	ff 75 14             	push   0x14(%ebp)
83001baa:	ff 75 10             	push   0x10(%ebp)
83001bad:	ff 75 0c             	push   0xc(%ebp)
83001bb0:	ff 75 08             	push   0x8(%ebp)
83001bb3:	e8 a4 f3 ff ff       	call   83000f5c <getopt_internal>
83001bb8:	83 c4 20             	add    $0x20,%esp
83001bbb:	c9                   	leave  
83001bbc:	c3                   	ret    

83001bbd <__getreent>:
83001bbd:	55                   	push   %ebp
83001bbe:	89 e5                	mov    %esp,%ebp
83001bc0:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001bc5:	5d                   	pop    %ebp
83001bc6:	c3                   	ret    

83001bc7 <malloc>:
83001bc7:	55                   	push   %ebp
83001bc8:	89 e5                	mov    %esp,%ebp
83001bca:	83 ec 08             	sub    $0x8,%esp
83001bcd:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001bd2:	83 ec 08             	sub    $0x8,%esp
83001bd5:	ff 75 08             	push   0x8(%ebp)
83001bd8:	50                   	push   %eax
83001bd9:	e8 b5 02 00 00       	call   83001e93 <_malloc_r>
83001bde:	83 c4 10             	add    $0x10,%esp
83001be1:	c9                   	leave  
83001be2:	c3                   	ret    

83001be3 <free>:
83001be3:	55                   	push   %ebp
83001be4:	89 e5                	mov    %esp,%ebp
83001be6:	83 ec 08             	sub    $0x8,%esp
83001be9:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83001bee:	83 ec 08             	sub    $0x8,%esp
83001bf1:	ff 75 08             	push   0x8(%ebp)
83001bf4:	50                   	push   %eax
83001bf5:	e8 fe 2b 00 00       	call   830047f8 <_free_r>
83001bfa:	83 c4 10             	add    $0x10,%esp
83001bfd:	90                   	nop
83001bfe:	c9                   	leave  
83001bff:	c3                   	ret    

83001c00 <malloc_extend_top>:
83001c00:	55                   	push   %ebp
83001c01:	89 e5                	mov    %esp,%ebp
83001c03:	83 ec 38             	sub    $0x38,%esp
83001c06:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83001c0d:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001c12:	8b 40 08             	mov    0x8(%eax),%eax
83001c15:	89 45 e0             	mov    %eax,-0x20(%ebp)
83001c18:	8b 45 e0             	mov    -0x20(%ebp),%eax
83001c1b:	8b 40 04             	mov    0x4(%eax),%eax
83001c1e:	83 e0 fc             	and    $0xfffffffc,%eax
83001c21:	89 45 dc             	mov    %eax,-0x24(%ebp)
83001c24:	8b 55 e0             	mov    -0x20(%ebp),%edx
83001c27:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001c2a:	01 d0                	add    %edx,%eax
83001c2c:	89 45 d8             	mov    %eax,-0x28(%ebp)
83001c2f:	8b 15 e0 73 00 83    	mov    0x830073e0,%edx
83001c35:	8b 45 0c             	mov    0xc(%ebp),%eax
83001c38:	01 d0                	add    %edx,%eax
83001c3a:	83 c0 10             	add    $0x10,%eax
83001c3d:	89 45 e8             	mov    %eax,-0x18(%ebp)
83001c40:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
83001c47:	a1 2c 72 00 83       	mov    0x8300722c,%eax
83001c4c:	83 f8 ff             	cmp    $0xffffffff,%eax
83001c4f:	74 15                	je     83001c66 <malloc_extend_top+0x66>
83001c51:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83001c54:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001c57:	01 d0                	add    %edx,%eax
83001c59:	8d 50 ff             	lea    -0x1(%eax),%edx
83001c5c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001c5f:	f7 d8                	neg    %eax
83001c61:	21 d0                	and    %edx,%eax
83001c63:	89 45 e8             	mov    %eax,-0x18(%ebp)
83001c66:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001c69:	83 ec 08             	sub    $0x8,%esp
83001c6c:	50                   	push   %eax
83001c6d:	ff 75 08             	push   0x8(%ebp)
83001c70:	e8 7e 1a 00 00       	call   830036f3 <_sbrk_r>
83001c75:	83 c4 10             	add    $0x10,%esp
83001c78:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001c7b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83001c7f:	0f 84 0b 02 00 00    	je     83001e90 <malloc_extend_top+0x290>
83001c85:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001c88:	3b 45 d8             	cmp    -0x28(%ebp),%eax
83001c8b:	73 0e                	jae    83001c9b <malloc_extend_top+0x9b>
83001c8d:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001c92:	39 45 e0             	cmp    %eax,-0x20(%ebp)
83001c95:	0f 85 f5 01 00 00    	jne    83001e90 <malloc_extend_top+0x290>
83001c9b:	a1 00 74 00 83       	mov    0x83007400,%eax
83001ca0:	89 c2                	mov    %eax,%edx
83001ca2:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001ca5:	01 d0                	add    %edx,%eax
83001ca7:	a3 00 74 00 83       	mov    %eax,0x83007400
83001cac:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001caf:	3b 45 d8             	cmp    -0x28(%ebp),%eax
83001cb2:	75 30                	jne    83001ce4 <malloc_extend_top+0xe4>
83001cb4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001cb7:	8d 50 ff             	lea    -0x1(%eax),%edx
83001cba:	8b 45 d8             	mov    -0x28(%ebp),%eax
83001cbd:	21 d0                	and    %edx,%eax
83001cbf:	85 c0                	test   %eax,%eax
83001cc1:	75 21                	jne    83001ce4 <malloc_extend_top+0xe4>
83001cc3:	8b 55 e8             	mov    -0x18(%ebp),%edx
83001cc6:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001cc9:	01 d0                	add    %edx,%eax
83001ccb:	89 45 d0             	mov    %eax,-0x30(%ebp)
83001cce:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001cd3:	8b 40 08             	mov    0x8(%eax),%eax
83001cd6:	8b 55 d0             	mov    -0x30(%ebp),%edx
83001cd9:	83 ca 01             	or     $0x1,%edx
83001cdc:	89 50 04             	mov    %edx,0x4(%eax)
83001cdf:	e9 76 01 00 00       	jmp    83001e5a <malloc_extend_top+0x25a>
83001ce4:	a1 2c 72 00 83       	mov    0x8300722c,%eax
83001ce9:	83 f8 ff             	cmp    $0xffffffff,%eax
83001cec:	75 0a                	jne    83001cf8 <malloc_extend_top+0xf8>
83001cee:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001cf1:	a3 2c 72 00 83       	mov    %eax,0x8300722c
83001cf6:	eb 13                	jmp    83001d0b <malloc_extend_top+0x10b>
83001cf8:	8b 15 00 74 00 83    	mov    0x83007400,%edx
83001cfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001d01:	2b 45 d8             	sub    -0x28(%ebp),%eax
83001d04:	01 d0                	add    %edx,%eax
83001d06:	a3 00 74 00 83       	mov    %eax,0x83007400
83001d0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001d0e:	83 c0 08             	add    $0x8,%eax
83001d11:	83 e0 07             	and    $0x7,%eax
83001d14:	89 45 cc             	mov    %eax,-0x34(%ebp)
83001d17:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
83001d1b:	74 13                	je     83001d30 <malloc_extend_top+0x130>
83001d1d:	b8 08 00 00 00       	mov    $0x8,%eax
83001d22:	2b 45 cc             	sub    -0x34(%ebp),%eax
83001d25:	89 45 f0             	mov    %eax,-0x10(%ebp)
83001d28:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001d2b:	01 45 f4             	add    %eax,-0xc(%ebp)
83001d2e:	eb 07                	jmp    83001d37 <malloc_extend_top+0x137>
83001d30:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
83001d37:	8b 55 f4             	mov    -0xc(%ebp),%edx
83001d3a:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001d3d:	01 d0                	add    %edx,%eax
83001d3f:	89 c2                	mov    %eax,%edx
83001d41:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001d44:	83 e8 01             	sub    $0x1,%eax
83001d47:	21 c2                	and    %eax,%edx
83001d49:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001d4c:	29 d0                	sub    %edx,%eax
83001d4e:	01 45 f0             	add    %eax,-0x10(%ebp)
83001d51:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001d54:	83 e8 01             	sub    $0x1,%eax
83001d57:	21 45 f0             	and    %eax,-0x10(%ebp)
83001d5a:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001d5d:	83 ec 08             	sub    $0x8,%esp
83001d60:	50                   	push   %eax
83001d61:	ff 75 08             	push   0x8(%ebp)
83001d64:	e8 8a 19 00 00       	call   830036f3 <_sbrk_r>
83001d69:	83 c4 10             	add    $0x10,%esp
83001d6c:	89 45 ec             	mov    %eax,-0x14(%ebp)
83001d6f:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
83001d73:	75 28                	jne    83001d9d <malloc_extend_top+0x19d>
83001d75:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
83001d7c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
83001d83:	8b 55 f4             	mov    -0xc(%ebp),%edx
83001d86:	8b 45 e8             	mov    -0x18(%ebp),%eax
83001d89:	01 d0                	add    %edx,%eax
83001d8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
83001d8e:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
83001d92:	74 09                	je     83001d9d <malloc_extend_top+0x19d>
83001d94:	8b 45 cc             	mov    -0x34(%ebp),%eax
83001d97:	83 e8 08             	sub    $0x8,%eax
83001d9a:	01 45 ec             	add    %eax,-0x14(%ebp)
83001d9d:	a1 00 74 00 83       	mov    0x83007400,%eax
83001da2:	89 c2                	mov    %eax,%edx
83001da4:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001da7:	01 d0                	add    %edx,%eax
83001da9:	a3 00 74 00 83       	mov    %eax,0x83007400
83001dae:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83001db3:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001db6:	89 42 08             	mov    %eax,0x8(%edx)
83001db9:	8b 45 ec             	mov    -0x14(%ebp),%eax
83001dbc:	2b 45 f4             	sub    -0xc(%ebp),%eax
83001dbf:	89 c2                	mov    %eax,%edx
83001dc1:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001dc4:	01 d0                	add    %edx,%eax
83001dc6:	89 45 d0             	mov    %eax,-0x30(%ebp)
83001dc9:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001dce:	8b 40 08             	mov    0x8(%eax),%eax
83001dd1:	8b 55 d0             	mov    -0x30(%ebp),%edx
83001dd4:	83 ca 01             	or     $0x1,%edx
83001dd7:	89 50 04             	mov    %edx,0x4(%eax)
83001dda:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001ddf:	39 45 e0             	cmp    %eax,-0x20(%ebp)
83001de2:	74 76                	je     83001e5a <malloc_extend_top+0x25a>
83001de4:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
83001de8:	77 14                	ja     83001dfe <malloc_extend_top+0x1fe>
83001dea:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83001def:	8b 40 08             	mov    0x8(%eax),%eax
83001df2:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
83001df9:	e9 93 00 00 00       	jmp    83001e91 <malloc_extend_top+0x291>
83001dfe:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001e01:	83 e8 0c             	sub    $0xc,%eax
83001e04:	83 e0 f8             	and    $0xfffffff8,%eax
83001e07:	89 45 dc             	mov    %eax,-0x24(%ebp)
83001e0a:	8b 45 e0             	mov    -0x20(%ebp),%eax
83001e0d:	8b 40 04             	mov    0x4(%eax),%eax
83001e10:	83 e0 01             	and    $0x1,%eax
83001e13:	0b 45 dc             	or     -0x24(%ebp),%eax
83001e16:	89 c2                	mov    %eax,%edx
83001e18:	8b 45 e0             	mov    -0x20(%ebp),%eax
83001e1b:	89 50 04             	mov    %edx,0x4(%eax)
83001e1e:	8b 55 e0             	mov    -0x20(%ebp),%edx
83001e21:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001e24:	01 d0                	add    %edx,%eax
83001e26:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
83001e2d:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001e30:	8d 50 04             	lea    0x4(%eax),%edx
83001e33:	8b 45 e0             	mov    -0x20(%ebp),%eax
83001e36:	01 d0                	add    %edx,%eax
83001e38:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
83001e3f:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
83001e43:	76 15                	jbe    83001e5a <malloc_extend_top+0x25a>
83001e45:	8b 45 e0             	mov    -0x20(%ebp),%eax
83001e48:	83 c0 08             	add    $0x8,%eax
83001e4b:	83 ec 08             	sub    $0x8,%esp
83001e4e:	50                   	push   %eax
83001e4f:	ff 75 08             	push   0x8(%ebp)
83001e52:	e8 a1 29 00 00       	call   830047f8 <_free_r>
83001e57:	83 c4 10             	add    $0x10,%esp
83001e5a:	a1 00 74 00 83       	mov    0x83007400,%eax
83001e5f:	89 c2                	mov    %eax,%edx
83001e61:	a1 e4 73 00 83       	mov    0x830073e4,%eax
83001e66:	39 c2                	cmp    %eax,%edx
83001e68:	76 0a                	jbe    83001e74 <malloc_extend_top+0x274>
83001e6a:	a1 00 74 00 83       	mov    0x83007400,%eax
83001e6f:	a3 e4 73 00 83       	mov    %eax,0x830073e4
83001e74:	a1 00 74 00 83       	mov    0x83007400,%eax
83001e79:	89 c2                	mov    %eax,%edx
83001e7b:	a1 e8 73 00 83       	mov    0x830073e8,%eax
83001e80:	39 c2                	cmp    %eax,%edx
83001e82:	76 0d                	jbe    83001e91 <malloc_extend_top+0x291>
83001e84:	a1 00 74 00 83       	mov    0x83007400,%eax
83001e89:	a3 e8 73 00 83       	mov    %eax,0x830073e8
83001e8e:	eb 01                	jmp    83001e91 <malloc_extend_top+0x291>
83001e90:	90                   	nop
83001e91:	c9                   	leave  
83001e92:	c3                   	ret    

83001e93 <_malloc_r>:
83001e93:	55                   	push   %ebp
83001e94:	89 e5                	mov    %esp,%ebp
83001e96:	53                   	push   %ebx
83001e97:	83 ec 44             	sub    $0x44,%esp
83001e9a:	8b 45 0c             	mov    0xc(%ebp),%eax
83001e9d:	83 c0 0b             	add    $0xb,%eax
83001ea0:	83 f8 16             	cmp    $0x16,%eax
83001ea3:	76 0b                	jbe    83001eb0 <_malloc_r+0x1d>
83001ea5:	8b 45 0c             	mov    0xc(%ebp),%eax
83001ea8:	83 c0 0b             	add    $0xb,%eax
83001eab:	83 e0 f8             	and    $0xfffffff8,%eax
83001eae:	eb 05                	jmp    83001eb5 <_malloc_r+0x22>
83001eb0:	b8 10 00 00 00       	mov    $0x10,%eax
83001eb5:	89 45 d0             	mov    %eax,-0x30(%ebp)
83001eb8:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001ebb:	85 c0                	test   %eax,%eax
83001ebd:	78 08                	js     83001ec7 <_malloc_r+0x34>
83001ebf:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001ec2:	3b 45 0c             	cmp    0xc(%ebp),%eax
83001ec5:	73 13                	jae    83001eda <_malloc_r+0x47>
83001ec7:	8b 45 08             	mov    0x8(%ebp),%eax
83001eca:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
83001ed0:	b8 00 00 00 00       	mov    $0x0,%eax
83001ed5:	e9 d6 07 00 00       	jmp    830026b0 <_malloc_r+0x81d>
83001eda:	83 ec 0c             	sub    $0xc,%esp
83001edd:	ff 75 08             	push   0x8(%ebp)
83001ee0:	e8 93 09 00 00       	call   83002878 <__malloc_lock>
83001ee5:	83 c4 10             	add    $0x10,%esp
83001ee8:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
83001eef:	0f 87 b0 00 00 00    	ja     83001fa5 <_malloc_r+0x112>
83001ef5:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001ef8:	c1 e8 03             	shr    $0x3,%eax
83001efb:	89 45 f0             	mov    %eax,-0x10(%ebp)
83001efe:	8b 45 f0             	mov    -0x10(%ebp),%eax
83001f01:	83 c0 01             	add    $0x1,%eax
83001f04:	01 c0                	add    %eax,%eax
83001f06:	c1 e0 02             	shl    $0x2,%eax
83001f09:	05 20 6e 00 83       	add    $0x83006e20,%eax
83001f0e:	83 e8 08             	sub    $0x8,%eax
83001f11:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83001f14:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001f17:	8b 40 0c             	mov    0xc(%eax),%eax
83001f1a:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001f1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f20:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
83001f23:	75 0d                	jne    83001f32 <_malloc_r+0x9f>
83001f25:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
83001f29:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83001f2c:	8b 40 0c             	mov    0xc(%eax),%eax
83001f2f:	89 45 f4             	mov    %eax,-0xc(%ebp)
83001f32:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f35:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
83001f38:	74 62                	je     83001f9c <_malloc_r+0x109>
83001f3a:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f3d:	8b 40 04             	mov    0x4(%eax),%eax
83001f40:	83 e0 fc             	and    $0xfffffffc,%eax
83001f43:	89 45 cc             	mov    %eax,-0x34(%ebp)
83001f46:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f49:	8b 40 0c             	mov    0xc(%eax),%eax
83001f4c:	89 45 d8             	mov    %eax,-0x28(%ebp)
83001f4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f52:	8b 40 08             	mov    0x8(%eax),%eax
83001f55:	89 45 dc             	mov    %eax,-0x24(%ebp)
83001f58:	8b 45 dc             	mov    -0x24(%ebp),%eax
83001f5b:	8b 55 d8             	mov    -0x28(%ebp),%edx
83001f5e:	89 50 0c             	mov    %edx,0xc(%eax)
83001f61:	8b 45 d8             	mov    -0x28(%ebp),%eax
83001f64:	8b 55 dc             	mov    -0x24(%ebp),%edx
83001f67:	89 50 08             	mov    %edx,0x8(%eax)
83001f6a:	8b 55 f4             	mov    -0xc(%ebp),%edx
83001f6d:	8b 45 cc             	mov    -0x34(%ebp),%eax
83001f70:	01 d0                	add    %edx,%eax
83001f72:	8b 50 04             	mov    0x4(%eax),%edx
83001f75:	8b 4d f4             	mov    -0xc(%ebp),%ecx
83001f78:	8b 45 cc             	mov    -0x34(%ebp),%eax
83001f7b:	01 c8                	add    %ecx,%eax
83001f7d:	83 ca 01             	or     $0x1,%edx
83001f80:	89 50 04             	mov    %edx,0x4(%eax)
83001f83:	83 ec 0c             	sub    $0xc,%esp
83001f86:	ff 75 08             	push   0x8(%ebp)
83001f89:	e8 f0 08 00 00       	call   8300287e <__malloc_unlock>
83001f8e:	83 c4 10             	add    $0x10,%esp
83001f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
83001f94:	83 c0 08             	add    $0x8,%eax
83001f97:	e9 14 07 00 00       	jmp    830026b0 <_malloc_r+0x81d>
83001f9c:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
83001fa0:	e9 46 01 00 00       	jmp    830020eb <_malloc_r+0x258>
83001fa5:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fa8:	c1 e8 09             	shr    $0x9,%eax
83001fab:	85 c0                	test   %eax,%eax
83001fad:	75 08                	jne    83001fb7 <_malloc_r+0x124>
83001faf:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fb2:	c1 e8 03             	shr    $0x3,%eax
83001fb5:	eb 77                	jmp    8300202e <_malloc_r+0x19b>
83001fb7:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fba:	c1 e8 09             	shr    $0x9,%eax
83001fbd:	83 f8 04             	cmp    $0x4,%eax
83001fc0:	77 0b                	ja     83001fcd <_malloc_r+0x13a>
83001fc2:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fc5:	c1 e8 06             	shr    $0x6,%eax
83001fc8:	83 c0 38             	add    $0x38,%eax
83001fcb:	eb 61                	jmp    8300202e <_malloc_r+0x19b>
83001fcd:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fd0:	c1 e8 09             	shr    $0x9,%eax
83001fd3:	83 f8 14             	cmp    $0x14,%eax
83001fd6:	77 0b                	ja     83001fe3 <_malloc_r+0x150>
83001fd8:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fdb:	c1 e8 09             	shr    $0x9,%eax
83001fde:	83 c0 5b             	add    $0x5b,%eax
83001fe1:	eb 4b                	jmp    8300202e <_malloc_r+0x19b>
83001fe3:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001fe6:	c1 e8 09             	shr    $0x9,%eax
83001fe9:	83 f8 54             	cmp    $0x54,%eax
83001fec:	77 0b                	ja     83001ff9 <_malloc_r+0x166>
83001fee:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001ff1:	c1 e8 0c             	shr    $0xc,%eax
83001ff4:	83 c0 6e             	add    $0x6e,%eax
83001ff7:	eb 35                	jmp    8300202e <_malloc_r+0x19b>
83001ff9:	8b 45 d0             	mov    -0x30(%ebp),%eax
83001ffc:	c1 e8 09             	shr    $0x9,%eax
83001fff:	3d 54 01 00 00       	cmp    $0x154,%eax
83002004:	77 0b                	ja     83002011 <_malloc_r+0x17e>
83002006:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002009:	c1 e8 0f             	shr    $0xf,%eax
8300200c:	83 c0 77             	add    $0x77,%eax
8300200f:	eb 1d                	jmp    8300202e <_malloc_r+0x19b>
83002011:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002014:	c1 e8 09             	shr    $0x9,%eax
83002017:	3d 54 05 00 00       	cmp    $0x554,%eax
8300201c:	77 0b                	ja     83002029 <_malloc_r+0x196>
8300201e:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002021:	c1 e8 12             	shr    $0x12,%eax
83002024:	83 c0 7c             	add    $0x7c,%eax
83002027:	eb 05                	jmp    8300202e <_malloc_r+0x19b>
83002029:	b8 7e 00 00 00       	mov    $0x7e,%eax
8300202e:	89 45 f0             	mov    %eax,-0x10(%ebp)
83002031:	8b 45 f0             	mov    -0x10(%ebp),%eax
83002034:	83 c0 01             	add    $0x1,%eax
83002037:	01 c0                	add    %eax,%eax
83002039:	c1 e0 02             	shl    $0x2,%eax
8300203c:	05 20 6e 00 83       	add    $0x83006e20,%eax
83002041:	83 e8 08             	sub    $0x8,%eax
83002044:	89 45 ec             	mov    %eax,-0x14(%ebp)
83002047:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300204a:	8b 40 0c             	mov    0xc(%eax),%eax
8300204d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83002050:	e9 86 00 00 00       	jmp    830020db <_malloc_r+0x248>
83002055:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002058:	8b 40 04             	mov    0x4(%eax),%eax
8300205b:	83 e0 fc             	and    $0xfffffffc,%eax
8300205e:	89 45 cc             	mov    %eax,-0x34(%ebp)
83002061:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002064:	2b 45 d0             	sub    -0x30(%ebp),%eax
83002067:	89 45 e8             	mov    %eax,-0x18(%ebp)
8300206a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8300206e:	7e 06                	jle    83002076 <_malloc_r+0x1e3>
83002070:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
83002074:	eb 71                	jmp    830020e7 <_malloc_r+0x254>
83002076:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8300207a:	78 56                	js     830020d2 <_malloc_r+0x23f>
8300207c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300207f:	8b 40 0c             	mov    0xc(%eax),%eax
83002082:	89 45 d8             	mov    %eax,-0x28(%ebp)
83002085:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002088:	8b 40 08             	mov    0x8(%eax),%eax
8300208b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300208e:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002091:	8b 55 d8             	mov    -0x28(%ebp),%edx
83002094:	89 50 0c             	mov    %edx,0xc(%eax)
83002097:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300209a:	8b 55 dc             	mov    -0x24(%ebp),%edx
8300209d:	89 50 08             	mov    %edx,0x8(%eax)
830020a0:	8b 55 f4             	mov    -0xc(%ebp),%edx
830020a3:	8b 45 cc             	mov    -0x34(%ebp),%eax
830020a6:	01 d0                	add    %edx,%eax
830020a8:	8b 50 04             	mov    0x4(%eax),%edx
830020ab:	8b 4d f4             	mov    -0xc(%ebp),%ecx
830020ae:	8b 45 cc             	mov    -0x34(%ebp),%eax
830020b1:	01 c8                	add    %ecx,%eax
830020b3:	83 ca 01             	or     $0x1,%edx
830020b6:	89 50 04             	mov    %edx,0x4(%eax)
830020b9:	83 ec 0c             	sub    $0xc,%esp
830020bc:	ff 75 08             	push   0x8(%ebp)
830020bf:	e8 ba 07 00 00       	call   8300287e <__malloc_unlock>
830020c4:	83 c4 10             	add    $0x10,%esp
830020c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
830020ca:	83 c0 08             	add    $0x8,%eax
830020cd:	e9 de 05 00 00       	jmp    830026b0 <_malloc_r+0x81d>
830020d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
830020d5:	8b 40 0c             	mov    0xc(%eax),%eax
830020d8:	89 45 f4             	mov    %eax,-0xc(%ebp)
830020db:	8b 45 f4             	mov    -0xc(%ebp),%eax
830020de:	3b 45 ec             	cmp    -0x14(%ebp),%eax
830020e1:	0f 85 6e ff ff ff    	jne    83002055 <_malloc_r+0x1c2>
830020e7:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
830020eb:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
830020f0:	8b 40 08             	mov    0x8(%eax),%eax
830020f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
830020f6:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
830020fb:	39 45 f4             	cmp    %eax,-0xc(%ebp)
830020fe:	0f 84 9c 02 00 00    	je     830023a0 <_malloc_r+0x50d>
83002104:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002107:	8b 40 04             	mov    0x4(%eax),%eax
8300210a:	83 e0 fc             	and    $0xfffffffc,%eax
8300210d:	89 45 cc             	mov    %eax,-0x34(%ebp)
83002110:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002113:	2b 45 d0             	sub    -0x30(%ebp),%eax
83002116:	89 45 e8             	mov    %eax,-0x18(%ebp)
83002119:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8300211d:	7e 7a                	jle    83002199 <_malloc_r+0x306>
8300211f:	8b 55 f4             	mov    -0xc(%ebp),%edx
83002122:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002125:	01 d0                	add    %edx,%eax
83002127:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8300212a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8300212d:	83 c8 01             	or     $0x1,%eax
83002130:	89 c2                	mov    %eax,%edx
83002132:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002135:	89 50 04             	mov    %edx,0x4(%eax)
83002138:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
8300213d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
83002140:	89 50 0c             	mov    %edx,0xc(%eax)
83002143:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
83002148:	8b 40 0c             	mov    0xc(%eax),%eax
8300214b:	89 42 08             	mov    %eax,0x8(%edx)
8300214e:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
83002153:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83002156:	89 50 0c             	mov    %edx,0xc(%eax)
83002159:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8300215c:	8b 50 0c             	mov    0xc(%eax),%edx
8300215f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83002162:	89 50 08             	mov    %edx,0x8(%eax)
83002165:	8b 45 e8             	mov    -0x18(%ebp),%eax
83002168:	83 c8 01             	or     $0x1,%eax
8300216b:	89 c2                	mov    %eax,%edx
8300216d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83002170:	89 50 04             	mov    %edx,0x4(%eax)
83002173:	8b 55 e8             	mov    -0x18(%ebp),%edx
83002176:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83002179:	01 c2                	add    %eax,%edx
8300217b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8300217e:	89 02                	mov    %eax,(%edx)
83002180:	83 ec 0c             	sub    $0xc,%esp
83002183:	ff 75 08             	push   0x8(%ebp)
83002186:	e8 f3 06 00 00       	call   8300287e <__malloc_unlock>
8300218b:	83 c4 10             	add    $0x10,%esp
8300218e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002191:	83 c0 08             	add    $0x8,%eax
83002194:	e9 17 05 00 00       	jmp    830026b0 <_malloc_r+0x81d>
83002199:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
8300219e:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
830021a3:	89 50 0c             	mov    %edx,0xc(%eax)
830021a6:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
830021ab:	8b 40 0c             	mov    0xc(%eax),%eax
830021ae:	89 42 08             	mov    %eax,0x8(%edx)
830021b1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
830021b5:	78 32                	js     830021e9 <_malloc_r+0x356>
830021b7:	8b 55 f4             	mov    -0xc(%ebp),%edx
830021ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
830021bd:	01 d0                	add    %edx,%eax
830021bf:	8b 50 04             	mov    0x4(%eax),%edx
830021c2:	8b 4d f4             	mov    -0xc(%ebp),%ecx
830021c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
830021c8:	01 c8                	add    %ecx,%eax
830021ca:	83 ca 01             	or     $0x1,%edx
830021cd:	89 50 04             	mov    %edx,0x4(%eax)
830021d0:	83 ec 0c             	sub    $0xc,%esp
830021d3:	ff 75 08             	push   0x8(%ebp)
830021d6:	e8 a3 06 00 00       	call   8300287e <__malloc_unlock>
830021db:	83 c4 10             	add    $0x10,%esp
830021de:	8b 45 f4             	mov    -0xc(%ebp),%eax
830021e1:	83 c0 08             	add    $0x8,%eax
830021e4:	e9 c7 04 00 00       	jmp    830026b0 <_malloc_r+0x81d>
830021e9:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
830021f0:	77 7f                	ja     83002271 <_malloc_r+0x3de>
830021f2:	8b 45 cc             	mov    -0x34(%ebp),%eax
830021f5:	c1 e8 03             	shr    $0x3,%eax
830021f8:	89 45 c8             	mov    %eax,-0x38(%ebp)
830021fb:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002200:	8b 58 04             	mov    0x4(%eax),%ebx
83002203:	8b 45 c8             	mov    -0x38(%ebp),%eax
83002206:	8d 50 03             	lea    0x3(%eax),%edx
83002209:	85 c0                	test   %eax,%eax
8300220b:	0f 48 c2             	cmovs  %edx,%eax
8300220e:	c1 f8 02             	sar    $0x2,%eax
83002211:	ba 01 00 00 00       	mov    $0x1,%edx
83002216:	89 c1                	mov    %eax,%ecx
83002218:	d3 e2                	shl    %cl,%edx
8300221a:	89 d0                	mov    %edx,%eax
8300221c:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83002221:	09 d8                	or     %ebx,%eax
83002223:	89 42 04             	mov    %eax,0x4(%edx)
83002226:	8b 45 c8             	mov    -0x38(%ebp),%eax
83002229:	83 c0 01             	add    $0x1,%eax
8300222c:	01 c0                	add    %eax,%eax
8300222e:	c1 e0 02             	shl    $0x2,%eax
83002231:	05 20 6e 00 83       	add    $0x83006e20,%eax
83002236:	83 e8 08             	sub    $0x8,%eax
83002239:	89 45 d8             	mov    %eax,-0x28(%ebp)
8300223c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300223f:	8b 40 08             	mov    0x8(%eax),%eax
83002242:	89 45 dc             	mov    %eax,-0x24(%ebp)
83002245:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002248:	8b 55 d8             	mov    -0x28(%ebp),%edx
8300224b:	89 50 0c             	mov    %edx,0xc(%eax)
8300224e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002251:	8b 55 dc             	mov    -0x24(%ebp),%edx
83002254:	89 50 08             	mov    %edx,0x8(%eax)
83002257:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300225a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8300225d:	89 50 08             	mov    %edx,0x8(%eax)
83002260:	8b 45 d8             	mov    -0x28(%ebp),%eax
83002263:	8b 50 08             	mov    0x8(%eax),%edx
83002266:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002269:	89 50 0c             	mov    %edx,0xc(%eax)
8300226c:	e9 2f 01 00 00       	jmp    830023a0 <_malloc_r+0x50d>
83002271:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002274:	c1 e8 09             	shr    $0x9,%eax
83002277:	85 c0                	test   %eax,%eax
83002279:	75 08                	jne    83002283 <_malloc_r+0x3f0>
8300227b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8300227e:	c1 e8 03             	shr    $0x3,%eax
83002281:	eb 77                	jmp    830022fa <_malloc_r+0x467>
83002283:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002286:	c1 e8 09             	shr    $0x9,%eax
83002289:	83 f8 04             	cmp    $0x4,%eax
8300228c:	77 0b                	ja     83002299 <_malloc_r+0x406>
8300228e:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002291:	c1 e8 06             	shr    $0x6,%eax
83002294:	83 c0 38             	add    $0x38,%eax
83002297:	eb 61                	jmp    830022fa <_malloc_r+0x467>
83002299:	8b 45 cc             	mov    -0x34(%ebp),%eax
8300229c:	c1 e8 09             	shr    $0x9,%eax
8300229f:	83 f8 14             	cmp    $0x14,%eax
830022a2:	77 0b                	ja     830022af <_malloc_r+0x41c>
830022a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022a7:	c1 e8 09             	shr    $0x9,%eax
830022aa:	83 c0 5b             	add    $0x5b,%eax
830022ad:	eb 4b                	jmp    830022fa <_malloc_r+0x467>
830022af:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022b2:	c1 e8 09             	shr    $0x9,%eax
830022b5:	83 f8 54             	cmp    $0x54,%eax
830022b8:	77 0b                	ja     830022c5 <_malloc_r+0x432>
830022ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022bd:	c1 e8 0c             	shr    $0xc,%eax
830022c0:	83 c0 6e             	add    $0x6e,%eax
830022c3:	eb 35                	jmp    830022fa <_malloc_r+0x467>
830022c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022c8:	c1 e8 09             	shr    $0x9,%eax
830022cb:	3d 54 01 00 00       	cmp    $0x154,%eax
830022d0:	77 0b                	ja     830022dd <_malloc_r+0x44a>
830022d2:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022d5:	c1 e8 0f             	shr    $0xf,%eax
830022d8:	83 c0 77             	add    $0x77,%eax
830022db:	eb 1d                	jmp    830022fa <_malloc_r+0x467>
830022dd:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022e0:	c1 e8 09             	shr    $0x9,%eax
830022e3:	3d 54 05 00 00       	cmp    $0x554,%eax
830022e8:	77 0b                	ja     830022f5 <_malloc_r+0x462>
830022ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
830022ed:	c1 e8 12             	shr    $0x12,%eax
830022f0:	83 c0 7c             	add    $0x7c,%eax
830022f3:	eb 05                	jmp    830022fa <_malloc_r+0x467>
830022f5:	b8 7e 00 00 00       	mov    $0x7e,%eax
830022fa:	89 45 c8             	mov    %eax,-0x38(%ebp)
830022fd:	8b 45 c8             	mov    -0x38(%ebp),%eax
83002300:	83 c0 01             	add    $0x1,%eax
83002303:	01 c0                	add    %eax,%eax
83002305:	c1 e0 02             	shl    $0x2,%eax
83002308:	05 20 6e 00 83       	add    $0x83006e20,%eax
8300230d:	83 e8 08             	sub    $0x8,%eax
83002310:	89 45 d8             	mov    %eax,-0x28(%ebp)
83002313:	8b 45 d8             	mov    -0x28(%ebp),%eax
83002316:	8b 40 08             	mov    0x8(%eax),%eax
83002319:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300231c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300231f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
83002322:	75 36                	jne    8300235a <_malloc_r+0x4c7>
83002324:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002329:	8b 58 04             	mov    0x4(%eax),%ebx
8300232c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8300232f:	8d 50 03             	lea    0x3(%eax),%edx
83002332:	85 c0                	test   %eax,%eax
83002334:	0f 48 c2             	cmovs  %edx,%eax
83002337:	c1 f8 02             	sar    $0x2,%eax
8300233a:	ba 01 00 00 00       	mov    $0x1,%edx
8300233f:	89 c1                	mov    %eax,%ecx
83002341:	d3 e2                	shl    %cl,%edx
83002343:	89 d0                	mov    %edx,%eax
83002345:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
8300234a:	09 d8                	or     %ebx,%eax
8300234c:	89 42 04             	mov    %eax,0x4(%edx)
8300234f:	eb 28                	jmp    83002379 <_malloc_r+0x4e6>
83002351:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002354:	8b 40 08             	mov    0x8(%eax),%eax
83002357:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300235a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300235d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
83002360:	74 0e                	je     83002370 <_malloc_r+0x4dd>
83002362:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002365:	8b 40 04             	mov    0x4(%eax),%eax
83002368:	83 e0 fc             	and    $0xfffffffc,%eax
8300236b:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8300236e:	72 e1                	jb     83002351 <_malloc_r+0x4be>
83002370:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002373:	8b 40 0c             	mov    0xc(%eax),%eax
83002376:	89 45 d8             	mov    %eax,-0x28(%ebp)
83002379:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300237c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8300237f:	89 50 0c             	mov    %edx,0xc(%eax)
83002382:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002385:	8b 55 dc             	mov    -0x24(%ebp),%edx
83002388:	89 50 08             	mov    %edx,0x8(%eax)
8300238b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300238e:	8b 55 f4             	mov    -0xc(%ebp),%edx
83002391:	89 50 08             	mov    %edx,0x8(%eax)
83002394:	8b 45 d8             	mov    -0x28(%ebp),%eax
83002397:	8b 50 08             	mov    0x8(%eax),%edx
8300239a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300239d:	89 50 0c             	mov    %edx,0xc(%eax)
830023a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
830023a3:	8d 50 03             	lea    0x3(%eax),%edx
830023a6:	85 c0                	test   %eax,%eax
830023a8:	0f 48 c2             	cmovs  %edx,%eax
830023ab:	c1 f8 02             	sar    $0x2,%eax
830023ae:	ba 01 00 00 00       	mov    $0x1,%edx
830023b3:	89 c1                	mov    %eax,%ecx
830023b5:	d3 e2                	shl    %cl,%edx
830023b7:	89 d0                	mov    %edx,%eax
830023b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830023bc:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830023c1:	8b 40 04             	mov    0x4(%eax),%eax
830023c4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
830023c7:	0f 87 13 02 00 00    	ja     830025e0 <_malloc_r+0x74d>
830023cd:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830023d2:	8b 40 04             	mov    0x4(%eax),%eax
830023d5:	23 45 e4             	and    -0x1c(%ebp),%eax
830023d8:	85 c0                	test   %eax,%eax
830023da:	75 27                	jne    83002403 <_malloc_r+0x570>
830023dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
830023df:	83 e0 fc             	and    $0xfffffffc,%eax
830023e2:	83 c0 04             	add    $0x4,%eax
830023e5:	89 45 f0             	mov    %eax,-0x10(%ebp)
830023e8:	d1 65 e4             	shll   -0x1c(%ebp)
830023eb:	eb 07                	jmp    830023f4 <_malloc_r+0x561>
830023ed:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
830023f1:	d1 65 e4             	shll   -0x1c(%ebp)
830023f4:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830023f9:	8b 40 04             	mov    0x4(%eax),%eax
830023fc:	23 45 e4             	and    -0x1c(%ebp),%eax
830023ff:	85 c0                	test   %eax,%eax
83002401:	74 ea                	je     830023ed <_malloc_r+0x55a>
83002403:	8b 45 f0             	mov    -0x10(%ebp),%eax
83002406:	89 45 e0             	mov    %eax,-0x20(%ebp)
83002409:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300240c:	83 c0 01             	add    $0x1,%eax
8300240f:	01 c0                	add    %eax,%eax
83002411:	c1 e0 02             	shl    $0x2,%eax
83002414:	05 20 6e 00 83       	add    $0x83006e20,%eax
83002419:	83 e8 08             	sub    $0x8,%eax
8300241c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8300241f:	8b 45 ec             	mov    -0x14(%ebp),%eax
83002422:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83002425:	8b 45 ec             	mov    -0x14(%ebp),%eax
83002428:	8b 40 0c             	mov    0xc(%eax),%eax
8300242b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300242e:	e9 22 01 00 00       	jmp    83002555 <_malloc_r+0x6c2>
83002433:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002436:	8b 40 04             	mov    0x4(%eax),%eax
83002439:	83 e0 fc             	and    $0xfffffffc,%eax
8300243c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8300243f:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002442:	2b 45 d0             	sub    -0x30(%ebp),%eax
83002445:	89 45 e8             	mov    %eax,-0x18(%ebp)
83002448:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8300244c:	0f 8e 9e 00 00 00    	jle    830024f0 <_malloc_r+0x65d>
83002452:	8b 55 f4             	mov    -0xc(%ebp),%edx
83002455:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002458:	01 d0                	add    %edx,%eax
8300245a:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8300245d:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002460:	83 c8 01             	or     $0x1,%eax
83002463:	89 c2                	mov    %eax,%edx
83002465:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002468:	89 50 04             	mov    %edx,0x4(%eax)
8300246b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300246e:	8b 40 0c             	mov    0xc(%eax),%eax
83002471:	89 45 d8             	mov    %eax,-0x28(%ebp)
83002474:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002477:	8b 40 08             	mov    0x8(%eax),%eax
8300247a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300247d:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002480:	8b 55 d8             	mov    -0x28(%ebp),%edx
83002483:	89 50 0c             	mov    %edx,0xc(%eax)
83002486:	8b 45 d8             	mov    -0x28(%ebp),%eax
83002489:	8b 55 dc             	mov    -0x24(%ebp),%edx
8300248c:	89 50 08             	mov    %edx,0x8(%eax)
8300248f:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
83002494:	8b 55 c4             	mov    -0x3c(%ebp),%edx
83002497:	89 50 0c             	mov    %edx,0xc(%eax)
8300249a:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
8300249f:	8b 40 0c             	mov    0xc(%eax),%eax
830024a2:	89 42 08             	mov    %eax,0x8(%edx)
830024a5:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
830024aa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830024ad:	89 50 0c             	mov    %edx,0xc(%eax)
830024b0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830024b3:	8b 50 0c             	mov    0xc(%eax),%edx
830024b6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830024b9:	89 50 08             	mov    %edx,0x8(%eax)
830024bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
830024bf:	83 c8 01             	or     $0x1,%eax
830024c2:	89 c2                	mov    %eax,%edx
830024c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830024c7:	89 50 04             	mov    %edx,0x4(%eax)
830024ca:	8b 55 e8             	mov    -0x18(%ebp),%edx
830024cd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830024d0:	01 c2                	add    %eax,%edx
830024d2:	8b 45 e8             	mov    -0x18(%ebp),%eax
830024d5:	89 02                	mov    %eax,(%edx)
830024d7:	83 ec 0c             	sub    $0xc,%esp
830024da:	ff 75 08             	push   0x8(%ebp)
830024dd:	e8 9c 03 00 00       	call   8300287e <__malloc_unlock>
830024e2:	83 c4 10             	add    $0x10,%esp
830024e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
830024e8:	83 c0 08             	add    $0x8,%eax
830024eb:	e9 c0 01 00 00       	jmp    830026b0 <_malloc_r+0x81d>
830024f0:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
830024f4:	78 56                	js     8300254c <_malloc_r+0x6b9>
830024f6:	8b 55 f4             	mov    -0xc(%ebp),%edx
830024f9:	8b 45 cc             	mov    -0x34(%ebp),%eax
830024fc:	01 d0                	add    %edx,%eax
830024fe:	8b 50 04             	mov    0x4(%eax),%edx
83002501:	8b 4d f4             	mov    -0xc(%ebp),%ecx
83002504:	8b 45 cc             	mov    -0x34(%ebp),%eax
83002507:	01 c8                	add    %ecx,%eax
83002509:	83 ca 01             	or     $0x1,%edx
8300250c:	89 50 04             	mov    %edx,0x4(%eax)
8300250f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002512:	8b 40 0c             	mov    0xc(%eax),%eax
83002515:	89 45 d8             	mov    %eax,-0x28(%ebp)
83002518:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300251b:	8b 40 08             	mov    0x8(%eax),%eax
8300251e:	89 45 dc             	mov    %eax,-0x24(%ebp)
83002521:	8b 45 dc             	mov    -0x24(%ebp),%eax
83002524:	8b 55 d8             	mov    -0x28(%ebp),%edx
83002527:	89 50 0c             	mov    %edx,0xc(%eax)
8300252a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300252d:	8b 55 dc             	mov    -0x24(%ebp),%edx
83002530:	89 50 08             	mov    %edx,0x8(%eax)
83002533:	83 ec 0c             	sub    $0xc,%esp
83002536:	ff 75 08             	push   0x8(%ebp)
83002539:	e8 40 03 00 00       	call   8300287e <__malloc_unlock>
8300253e:	83 c4 10             	add    $0x10,%esp
83002541:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002544:	83 c0 08             	add    $0x8,%eax
83002547:	e9 64 01 00 00       	jmp    830026b0 <_malloc_r+0x81d>
8300254c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300254f:	8b 40 0c             	mov    0xc(%eax),%eax
83002552:	89 45 f4             	mov    %eax,-0xc(%ebp)
83002555:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002558:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8300255b:	0f 85 d2 fe ff ff    	jne    83002433 <_malloc_r+0x5a0>
83002561:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
83002565:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
83002569:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300256c:	83 e0 03             	and    $0x3,%eax
8300256f:	85 c0                	test   %eax,%eax
83002571:	0f 85 ae fe ff ff    	jne    83002425 <_malloc_r+0x592>
83002577:	8b 45 e0             	mov    -0x20(%ebp),%eax
8300257a:	83 e0 03             	and    $0x3,%eax
8300257d:	85 c0                	test   %eax,%eax
8300257f:	75 19                	jne    8300259a <_malloc_r+0x707>
83002581:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002586:	8b 48 04             	mov    0x4(%eax),%ecx
83002589:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300258c:	f7 d0                	not    %eax
8300258e:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83002593:	21 c8                	and    %ecx,%eax
83002595:	89 42 04             	mov    %eax,0x4(%edx)
83002598:	eb 13                	jmp    830025ad <_malloc_r+0x71a>
8300259a:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8300259e:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
830025a2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
830025a5:	8b 40 08             	mov    0x8(%eax),%eax
830025a8:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
830025ab:	74 ca                	je     83002577 <_malloc_r+0x6e4>
830025ad:	d1 65 e4             	shll   -0x1c(%ebp)
830025b0:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830025b5:	8b 40 04             	mov    0x4(%eax),%eax
830025b8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
830025bb:	77 23                	ja     830025e0 <_malloc_r+0x74d>
830025bd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
830025c1:	74 1d                	je     830025e0 <_malloc_r+0x74d>
830025c3:	eb 07                	jmp    830025cc <_malloc_r+0x739>
830025c5:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
830025c9:	d1 65 e4             	shll   -0x1c(%ebp)
830025cc:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830025d1:	8b 40 04             	mov    0x4(%eax),%eax
830025d4:	23 45 e4             	and    -0x1c(%ebp),%eax
830025d7:	85 c0                	test   %eax,%eax
830025d9:	74 ea                	je     830025c5 <_malloc_r+0x732>
830025db:	e9 23 fe ff ff       	jmp    83002403 <_malloc_r+0x570>
830025e0:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830025e5:	8b 40 08             	mov    0x8(%eax),%eax
830025e8:	8b 40 04             	mov    0x4(%eax),%eax
830025eb:	83 e0 fc             	and    $0xfffffffc,%eax
830025ee:	2b 45 d0             	sub    -0x30(%ebp),%eax
830025f1:	89 45 e8             	mov    %eax,-0x18(%ebp)
830025f4:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830025f9:	8b 40 08             	mov    0x8(%eax),%eax
830025fc:	8b 40 04             	mov    0x4(%eax),%eax
830025ff:	83 e0 fc             	and    $0xfffffffc,%eax
83002602:	39 45 d0             	cmp    %eax,-0x30(%ebp)
83002605:	77 06                	ja     8300260d <_malloc_r+0x77a>
83002607:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8300260b:	7f 53                	jg     83002660 <_malloc_r+0x7cd>
8300260d:	83 ec 08             	sub    $0x8,%esp
83002610:	ff 75 d0             	push   -0x30(%ebp)
83002613:	ff 75 08             	push   0x8(%ebp)
83002616:	e8 e5 f5 ff ff       	call   83001c00 <malloc_extend_top>
8300261b:	83 c4 10             	add    $0x10,%esp
8300261e:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002623:	8b 40 08             	mov    0x8(%eax),%eax
83002626:	8b 40 04             	mov    0x4(%eax),%eax
83002629:	83 e0 fc             	and    $0xfffffffc,%eax
8300262c:	2b 45 d0             	sub    -0x30(%ebp),%eax
8300262f:	89 45 e8             	mov    %eax,-0x18(%ebp)
83002632:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002637:	8b 40 08             	mov    0x8(%eax),%eax
8300263a:	8b 40 04             	mov    0x4(%eax),%eax
8300263d:	83 e0 fc             	and    $0xfffffffc,%eax
83002640:	39 45 d0             	cmp    %eax,-0x30(%ebp)
83002643:	77 06                	ja     8300264b <_malloc_r+0x7b8>
83002645:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
83002649:	7f 15                	jg     83002660 <_malloc_r+0x7cd>
8300264b:	83 ec 0c             	sub    $0xc,%esp
8300264e:	ff 75 08             	push   0x8(%ebp)
83002651:	e8 28 02 00 00       	call   8300287e <__malloc_unlock>
83002656:	83 c4 10             	add    $0x10,%esp
83002659:	b8 00 00 00 00       	mov    $0x0,%eax
8300265e:	eb 50                	jmp    830026b0 <_malloc_r+0x81d>
83002660:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002665:	8b 40 08             	mov    0x8(%eax),%eax
83002668:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300266b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8300266e:	83 c8 01             	or     $0x1,%eax
83002671:	89 c2                	mov    %eax,%edx
83002673:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002676:	89 50 04             	mov    %edx,0x4(%eax)
83002679:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
8300267e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
83002681:	8b 45 d0             	mov    -0x30(%ebp),%eax
83002684:	01 c8                	add    %ecx,%eax
83002686:	89 42 08             	mov    %eax,0x8(%edx)
83002689:	8b 45 e8             	mov    -0x18(%ebp),%eax
8300268c:	83 c8 01             	or     $0x1,%eax
8300268f:	89 c2                	mov    %eax,%edx
83002691:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83002696:	8b 40 08             	mov    0x8(%eax),%eax
83002699:	89 50 04             	mov    %edx,0x4(%eax)
8300269c:	83 ec 0c             	sub    $0xc,%esp
8300269f:	ff 75 08             	push   0x8(%ebp)
830026a2:	e8 d7 01 00 00       	call   8300287e <__malloc_unlock>
830026a7:	83 c4 10             	add    $0x10,%esp
830026aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
830026ad:	83 c0 08             	add    $0x8,%eax
830026b0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
830026b3:	c9                   	leave  
830026b4:	c3                   	ret    
830026b5:	66 90                	xchg   %ax,%ax
830026b7:	66 90                	xchg   %ax,%ax
830026b9:	66 90                	xchg   %ax,%ax
830026bb:	66 90                	xchg   %ax,%ax
830026bd:	66 90                	xchg   %ax,%ax
830026bf:	90                   	nop

830026c0 <memchr>:
830026c0:	55                   	push   %ebp
830026c1:	89 e5                	mov    %esp,%ebp
830026c3:	57                   	push   %edi
830026c4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
830026c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
830026cb:	8b 7d 08             	mov    0x8(%ebp),%edi
830026ce:	31 d2                	xor    %edx,%edx
830026d0:	85 c9                	test   %ecx,%ecx
830026d2:	74 79                	je     8300274d <L20>
830026d4:	f7 c7 03 00 00 00    	test   $0x3,%edi
830026da:	74 28                	je     83002704 <L5>
830026dc:	3a 07                	cmp    (%edi),%al
830026de:	74 6a                	je     8300274a <L15>
830026e0:	47                   	inc    %edi
830026e1:	49                   	dec    %ecx
830026e2:	74 69                	je     8300274d <L20>
830026e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
830026ea:	74 18                	je     83002704 <L5>
830026ec:	3a 07                	cmp    (%edi),%al
830026ee:	74 5a                	je     8300274a <L15>
830026f0:	47                   	inc    %edi
830026f1:	49                   	dec    %ecx
830026f2:	74 59                	je     8300274d <L20>
830026f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
830026fa:	74 08                	je     83002704 <L5>
830026fc:	3a 07                	cmp    (%edi),%al
830026fe:	74 4a                	je     8300274a <L15>
83002700:	47                   	inc    %edi
83002701:	49                   	dec    %ecx
83002702:	74 49                	je     8300274d <L20>

83002704 <L5>:
83002704:	88 c4                	mov    %al,%ah
83002706:	89 c2                	mov    %eax,%edx
83002708:	c1 e2 10             	shl    $0x10,%edx
8300270b:	09 d0                	or     %edx,%eax
8300270d:	53                   	push   %ebx
8300270e:	66 90                	xchg   %ax,%ax

83002710 <L8>:
83002710:	83 e9 04             	sub    $0x4,%ecx
83002713:	72 1c                	jb     83002731 <L9>
83002715:	8b 17                	mov    (%edi),%edx
83002717:	83 c7 04             	add    $0x4,%edi
8300271a:	31 c2                	xor    %eax,%edx
8300271c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
83002722:	f7 d2                	not    %edx
83002724:	21 d3                	and    %edx,%ebx
83002726:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8300272c:	74 e2                	je     83002710 <L8>
8300272e:	83 ef 04             	sub    $0x4,%edi

83002731 <L9>:
83002731:	5b                   	pop    %ebx
83002732:	31 d2                	xor    %edx,%edx
83002734:	83 c1 04             	add    $0x4,%ecx
83002737:	74 14                	je     8300274d <L20>
83002739:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

83002740 <L10>:
83002740:	3a 07                	cmp    (%edi),%al
83002742:	74 06                	je     8300274a <L15>
83002744:	47                   	inc    %edi
83002745:	49                   	dec    %ecx
83002746:	75 f8                	jne    83002740 <L10>
83002748:	31 ff                	xor    %edi,%edi

8300274a <L15>:
8300274a:	4a                   	dec    %edx
8300274b:	21 fa                	and    %edi,%edx

8300274d <L20>:
8300274d:	89 d0                	mov    %edx,%eax
8300274f:	8d 65 fc             	lea    -0x4(%ebp),%esp
83002752:	5f                   	pop    %edi
83002753:	c9                   	leave  
83002754:	c3                   	ret    

83002755 <memcmp>:
83002755:	55                   	push   %ebp
83002756:	89 e5                	mov    %esp,%ebp
83002758:	83 ec 10             	sub    $0x10,%esp
8300275b:	53                   	push   %ebx
8300275c:	57                   	push   %edi
8300275d:	56                   	push   %esi
8300275e:	8b 7d 08             	mov    0x8(%ebp),%edi
83002761:	8b 75 0c             	mov    0xc(%ebp),%esi
83002764:	8b 4d 10             	mov    0x10(%ebp),%ecx
83002767:	fc                   	cld    
83002768:	31 c0                	xor    %eax,%eax
8300276a:	85 c9                	test   %ecx,%ecx
8300276c:	74 31                	je     8300279f <L4>
8300276e:	89 f8                	mov    %edi,%eax
83002770:	09 f0                	or     %esi,%eax
83002772:	a8 03                	test   $0x3,%al
83002774:	75 1b                	jne    83002791 <BYTECMP>
83002776:	89 cb                	mov    %ecx,%ebx
83002778:	c1 e9 02             	shr    $0x2,%ecx
8300277b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8300277d:	74 0d                	je     8300278c <L5>
8300277f:	83 ee 04             	sub    $0x4,%esi
83002782:	83 ef 04             	sub    $0x4,%edi
83002785:	b9 04 00 00 00       	mov    $0x4,%ecx
8300278a:	eb 05                	jmp    83002791 <BYTECMP>

8300278c <L5>:
8300278c:	83 e3 03             	and    $0x3,%ebx
8300278f:	89 d9                	mov    %ebx,%ecx

83002791 <BYTECMP>:
83002791:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

83002793 <L3>:
83002793:	31 d2                	xor    %edx,%edx
83002795:	8a 56 ff             	mov    -0x1(%esi),%dl
83002798:	31 c0                	xor    %eax,%eax
8300279a:	8a 47 ff             	mov    -0x1(%edi),%al
8300279d:	29 d0                	sub    %edx,%eax

8300279f <L4>:
8300279f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
830027a2:	5e                   	pop    %esi
830027a3:	5f                   	pop    %edi
830027a4:	5b                   	pop    %ebx
830027a5:	c9                   	leave  
830027a6:	c3                   	ret    
830027a7:	90                   	nop

830027a8 <memcpy>:
830027a8:	55                   	push   %ebp
830027a9:	89 e5                	mov    %esp,%ebp
830027ab:	56                   	push   %esi
830027ac:	57                   	push   %edi
830027ad:	53                   	push   %ebx
830027ae:	8b 7d 08             	mov    0x8(%ebp),%edi
830027b1:	8b 4d 10             	mov    0x10(%ebp),%ecx
830027b4:	8b 75 0c             	mov    0xc(%ebp),%esi
830027b7:	fc                   	cld    
830027b8:	83 f9 08             	cmp    $0x8,%ecx
830027bb:	76 26                	jbe    830027e3 <memcpy+0x3b>
830027bd:	89 fa                	mov    %edi,%edx
830027bf:	89 cb                	mov    %ecx,%ebx
830027c1:	83 e2 03             	and    $0x3,%edx
830027c4:	74 10                	je     830027d6 <memcpy+0x2e>
830027c6:	b9 04 00 00 00       	mov    $0x4,%ecx
830027cb:	29 d1                	sub    %edx,%ecx
830027cd:	83 e1 03             	and    $0x3,%ecx
830027d0:	29 cb                	sub    %ecx,%ebx
830027d2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
830027d4:	89 d9                	mov    %ebx,%ecx
830027d6:	c1 e9 02             	shr    $0x2,%ecx
830027d9:	8d 76 00             	lea    0x0(%esi),%esi
830027dc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
830027de:	89 d9                	mov    %ebx,%ecx
830027e0:	83 e1 03             	and    $0x3,%ecx
830027e3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
830027e5:	8b 45 08             	mov    0x8(%ebp),%eax
830027e8:	8d 65 f4             	lea    -0xc(%ebp),%esp
830027eb:	5b                   	pop    %ebx
830027ec:	5f                   	pop    %edi
830027ed:	5e                   	pop    %esi
830027ee:	c9                   	leave  
830027ef:	c3                   	ret    

830027f0 <memset>:
830027f0:	55                   	push   %ebp
830027f1:	89 e5                	mov    %esp,%ebp
830027f3:	57                   	push   %edi
830027f4:	8b 7d 08             	mov    0x8(%ebp),%edi
830027f7:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
830027fb:	8b 4d 10             	mov    0x10(%ebp),%ecx
830027fe:	fc                   	cld    
830027ff:	83 f9 10             	cmp    $0x10,%ecx
83002802:	76 69                	jbe    8300286d <memset+0x7d>
83002804:	f7 c7 07 00 00 00    	test   $0x7,%edi
8300280a:	74 4c                	je     83002858 <memset+0x68>
8300280c:	88 07                	mov    %al,(%edi)
8300280e:	47                   	inc    %edi
8300280f:	49                   	dec    %ecx
83002810:	f7 c7 07 00 00 00    	test   $0x7,%edi
83002816:	74 40                	je     83002858 <memset+0x68>
83002818:	88 07                	mov    %al,(%edi)
8300281a:	47                   	inc    %edi
8300281b:	49                   	dec    %ecx
8300281c:	f7 c7 07 00 00 00    	test   $0x7,%edi
83002822:	74 34                	je     83002858 <memset+0x68>
83002824:	88 07                	mov    %al,(%edi)
83002826:	47                   	inc    %edi
83002827:	49                   	dec    %ecx
83002828:	f7 c7 07 00 00 00    	test   $0x7,%edi
8300282e:	74 28                	je     83002858 <memset+0x68>
83002830:	88 07                	mov    %al,(%edi)
83002832:	47                   	inc    %edi
83002833:	49                   	dec    %ecx
83002834:	f7 c7 07 00 00 00    	test   $0x7,%edi
8300283a:	74 1c                	je     83002858 <memset+0x68>
8300283c:	88 07                	mov    %al,(%edi)
8300283e:	47                   	inc    %edi
8300283f:	49                   	dec    %ecx
83002840:	f7 c7 07 00 00 00    	test   $0x7,%edi
83002846:	74 10                	je     83002858 <memset+0x68>
83002848:	88 07                	mov    %al,(%edi)
8300284a:	47                   	inc    %edi
8300284b:	49                   	dec    %ecx
8300284c:	f7 c7 07 00 00 00    	test   $0x7,%edi
83002852:	74 04                	je     83002858 <memset+0x68>
83002854:	88 07                	mov    %al,(%edi)
83002856:	47                   	inc    %edi
83002857:	49                   	dec    %ecx
83002858:	88 c4                	mov    %al,%ah
8300285a:	89 c2                	mov    %eax,%edx
8300285c:	c1 e2 10             	shl    $0x10,%edx
8300285f:	09 d0                	or     %edx,%eax
83002861:	89 ca                	mov    %ecx,%edx
83002863:	c1 e9 02             	shr    $0x2,%ecx
83002866:	83 e2 03             	and    $0x3,%edx
83002869:	f3 ab                	rep stos %eax,%es:(%edi)
8300286b:	89 d1                	mov    %edx,%ecx
8300286d:	f3 aa                	rep stos %al,%es:(%edi)
8300286f:	8b 45 08             	mov    0x8(%ebp),%eax
83002872:	8d 65 fc             	lea    -0x4(%ebp),%esp
83002875:	5f                   	pop    %edi
83002876:	c9                   	leave  
83002877:	c3                   	ret    

83002878 <__malloc_lock>:
83002878:	55                   	push   %ebp
83002879:	89 e5                	mov    %esp,%ebp
8300287b:	90                   	nop
8300287c:	5d                   	pop    %ebp
8300287d:	c3                   	ret    

8300287e <__malloc_unlock>:
8300287e:	55                   	push   %ebp
8300287f:	89 e5                	mov    %esp,%ebp
83002881:	90                   	nop
83002882:	5d                   	pop    %ebp
83002883:	c3                   	ret    

83002884 <__sprint_r>:
83002884:	55                   	push   %ebp
83002885:	89 e5                	mov    %esp,%ebp
83002887:	56                   	push   %esi
83002888:	53                   	push   %ebx
83002889:	83 ec 10             	sub    $0x10,%esp
8300288c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8300288f:	be 00 00 00 00       	mov    $0x0,%esi
83002894:	8b 43 08             	mov    0x8(%ebx),%eax
83002897:	85 c0                	test   %eax,%eax
83002899:	75 11                	jne    830028ac <__sprint_r+0x28>
8300289b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
830028a2:	b8 00 00 00 00       	mov    $0x0,%eax
830028a7:	e9 ad 00 00 00       	jmp    83002959 <__sprint_r+0xd5>
830028ac:	8b 45 0c             	mov    0xc(%ebp),%eax
830028af:	8b 40 64             	mov    0x64(%eax),%eax
830028b2:	25 00 20 00 00       	and    $0x2000,%eax
830028b7:	85 c0                	test   %eax,%eax
830028b9:	74 7a                	je     83002935 <__sprint_r+0xb1>
830028bb:	8b 03                	mov    (%ebx),%eax
830028bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
830028c0:	eb 6a                	jmp    8300292c <__sprint_r+0xa8>
830028c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
830028c5:	8b 00                	mov    (%eax),%eax
830028c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
830028ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
830028cd:	8b 40 04             	mov    0x4(%eax),%eax
830028d0:	c1 e8 02             	shr    $0x2,%eax
830028d3:	89 45 e8             	mov    %eax,-0x18(%ebp)
830028d6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
830028dd:	eb 33                	jmp    83002912 <__sprint_r+0x8e>
830028df:	8b 45 f0             	mov    -0x10(%ebp),%eax
830028e2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830028e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
830028ec:	01 d0                	add    %edx,%eax
830028ee:	8b 00                	mov    (%eax),%eax
830028f0:	83 ec 04             	sub    $0x4,%esp
830028f3:	ff 75 0c             	push   0xc(%ebp)
830028f6:	50                   	push   %eax
830028f7:	ff 75 08             	push   0x8(%ebp)
830028fa:	e8 5a 1e 00 00       	call   83004759 <_fputwc_r>
830028ff:	83 c4 10             	add    $0x10,%esp
83002902:	83 f8 ff             	cmp    $0xffffffff,%eax
83002905:	75 07                	jne    8300290e <__sprint_r+0x8a>
83002907:	be ff ff ff ff       	mov    $0xffffffff,%esi
8300290c:	eb 3b                	jmp    83002949 <__sprint_r+0xc5>
8300290e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
83002912:	8b 45 f0             	mov    -0x10(%ebp),%eax
83002915:	3b 45 e8             	cmp    -0x18(%ebp),%eax
83002918:	7c c5                	jl     830028df <__sprint_r+0x5b>
8300291a:	8b 43 08             	mov    0x8(%ebx),%eax
8300291d:	8b 55 e8             	mov    -0x18(%ebp),%edx
83002920:	c1 e2 02             	shl    $0x2,%edx
83002923:	29 d0                	sub    %edx,%eax
83002925:	89 43 08             	mov    %eax,0x8(%ebx)
83002928:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8300292c:	8b 43 08             	mov    0x8(%ebx),%eax
8300292f:	85 c0                	test   %eax,%eax
83002931:	75 8f                	jne    830028c2 <__sprint_r+0x3e>
83002933:	eb 14                	jmp    83002949 <__sprint_r+0xc5>
83002935:	83 ec 04             	sub    $0x4,%esp
83002938:	53                   	push   %ebx
83002939:	ff 75 0c             	push   0xc(%ebp)
8300293c:	ff 75 08             	push   0x8(%ebp)
8300293f:	e8 f0 23 00 00       	call   83004d34 <__sfvwrite_r>
83002944:	83 c4 10             	add    $0x10,%esp
83002947:	89 c6                	mov    %eax,%esi
83002949:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
83002950:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
83002957:	89 f0                	mov    %esi,%eax
83002959:	8d 65 f8             	lea    -0x8(%ebp),%esp
8300295c:	5b                   	pop    %ebx
8300295d:	5e                   	pop    %esi
8300295e:	5d                   	pop    %ebp
8300295f:	c3                   	ret    

83002960 <__sfputc_r>:
83002960:	55                   	push   %ebp
83002961:	89 e5                	mov    %esp,%ebp
83002963:	83 ec 08             	sub    $0x8,%esp
83002966:	8b 45 10             	mov    0x10(%ebp),%eax
83002969:	8b 40 08             	mov    0x8(%eax),%eax
8300296c:	8d 50 ff             	lea    -0x1(%eax),%edx
8300296f:	8b 45 10             	mov    0x10(%ebp),%eax
83002972:	89 50 08             	mov    %edx,0x8(%eax)
83002975:	8b 45 10             	mov    0x10(%ebp),%eax
83002978:	8b 40 08             	mov    0x8(%eax),%eax
8300297b:	85 c0                	test   %eax,%eax
8300297d:	79 17                	jns    83002996 <__sfputc_r+0x36>
8300297f:	8b 45 10             	mov    0x10(%ebp),%eax
83002982:	8b 50 08             	mov    0x8(%eax),%edx
83002985:	8b 45 10             	mov    0x10(%ebp),%eax
83002988:	8b 40 18             	mov    0x18(%eax),%eax
8300298b:	39 c2                	cmp    %eax,%edx
8300298d:	7c 21                	jl     830029b0 <__sfputc_r+0x50>
8300298f:	8b 45 0c             	mov    0xc(%ebp),%eax
83002992:	3c 0a                	cmp    $0xa,%al
83002994:	74 1a                	je     830029b0 <__sfputc_r+0x50>
83002996:	8b 45 10             	mov    0x10(%ebp),%eax
83002999:	8b 00                	mov    (%eax),%eax
8300299b:	8d 48 01             	lea    0x1(%eax),%ecx
8300299e:	8b 55 10             	mov    0x10(%ebp),%edx
830029a1:	89 0a                	mov    %ecx,(%edx)
830029a3:	8b 55 0c             	mov    0xc(%ebp),%edx
830029a6:	88 10                	mov    %dl,(%eax)
830029a8:	0f b6 00             	movzbl (%eax),%eax
830029ab:	0f b6 c0             	movzbl %al,%eax
830029ae:	eb 14                	jmp    830029c4 <__sfputc_r+0x64>
830029b0:	83 ec 04             	sub    $0x4,%esp
830029b3:	ff 75 10             	push   0x10(%ebp)
830029b6:	ff 75 0c             	push   0xc(%ebp)
830029b9:	ff 75 08             	push   0x8(%ebp)
830029bc:	e8 1b 13 00 00       	call   83003cdc <__swbuf_r>
830029c1:	83 c4 10             	add    $0x10,%esp
830029c4:	c9                   	leave  
830029c5:	c3                   	ret    

830029c6 <__sfputs_r>:
830029c6:	55                   	push   %ebp
830029c7:	89 e5                	mov    %esp,%ebp
830029c9:	53                   	push   %ebx
830029ca:	83 ec 14             	sub    $0x14,%esp
830029cd:	8b 45 0c             	mov    0xc(%ebp),%eax
830029d0:	8b 40 64             	mov    0x64(%eax),%eax
830029d3:	25 00 20 00 00       	and    $0x2000,%eax
830029d8:	85 c0                	test   %eax,%eax
830029da:	74 4c                	je     83002a28 <__sfputs_r+0x62>
830029dc:	8b 45 10             	mov    0x10(%ebp),%eax
830029df:	89 45 f4             	mov    %eax,-0xc(%ebp)
830029e2:	bb 00 00 00 00       	mov    $0x0,%ebx
830029e7:	eb 31                	jmp    83002a1a <__sfputs_r+0x54>
830029e9:	89 d8                	mov    %ebx,%eax
830029eb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
830029f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
830029f5:	01 d0                	add    %edx,%eax
830029f7:	8b 00                	mov    (%eax),%eax
830029f9:	83 ec 04             	sub    $0x4,%esp
830029fc:	ff 75 0c             	push   0xc(%ebp)
830029ff:	50                   	push   %eax
83002a00:	ff 75 08             	push   0x8(%ebp)
83002a03:	e8 51 1d 00 00       	call   83004759 <_fputwc_r>
83002a08:	83 c4 10             	add    $0x10,%esp
83002a0b:	83 f8 ff             	cmp    $0xffffffff,%eax
83002a0e:	75 07                	jne    83002a17 <__sfputs_r+0x51>
83002a10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83002a15:	eb 52                	jmp    83002a69 <__sfputs_r+0xa3>
83002a17:	83 c3 01             	add    $0x1,%ebx
83002a1a:	8b 45 14             	mov    0x14(%ebp),%eax
83002a1d:	c1 e8 02             	shr    $0x2,%eax
83002a20:	89 da                	mov    %ebx,%edx
83002a22:	39 d0                	cmp    %edx,%eax
83002a24:	77 c3                	ja     830029e9 <__sfputs_r+0x23>
83002a26:	eb 3c                	jmp    83002a64 <__sfputs_r+0x9e>
83002a28:	bb 00 00 00 00       	mov    $0x0,%ebx
83002a2d:	eb 2e                	jmp    83002a5d <__sfputs_r+0x97>
83002a2f:	89 da                	mov    %ebx,%edx
83002a31:	8b 45 10             	mov    0x10(%ebp),%eax
83002a34:	01 d0                	add    %edx,%eax
83002a36:	0f b6 00             	movzbl (%eax),%eax
83002a39:	0f be c0             	movsbl %al,%eax
83002a3c:	83 ec 04             	sub    $0x4,%esp
83002a3f:	ff 75 0c             	push   0xc(%ebp)
83002a42:	50                   	push   %eax
83002a43:	ff 75 08             	push   0x8(%ebp)
83002a46:	e8 15 ff ff ff       	call   83002960 <__sfputc_r>
83002a4b:	83 c4 10             	add    $0x10,%esp
83002a4e:	83 f8 ff             	cmp    $0xffffffff,%eax
83002a51:	75 07                	jne    83002a5a <__sfputs_r+0x94>
83002a53:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83002a58:	eb 0f                	jmp    83002a69 <__sfputs_r+0xa3>
83002a5a:	83 c3 01             	add    $0x1,%ebx
83002a5d:	89 d8                	mov    %ebx,%eax
83002a5f:	39 45 14             	cmp    %eax,0x14(%ebp)
83002a62:	77 cb                	ja     83002a2f <__sfputs_r+0x69>
83002a64:	b8 00 00 00 00       	mov    $0x0,%eax
83002a69:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83002a6c:	c9                   	leave  
83002a6d:	c3                   	ret    

83002a6e <vfiprintf>:
83002a6e:	55                   	push   %ebp
83002a6f:	89 e5                	mov    %esp,%ebp
83002a71:	83 ec 18             	sub    $0x18,%esp
83002a74:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83002a79:	ff 75 10             	push   0x10(%ebp)
83002a7c:	ff 75 0c             	push   0xc(%ebp)
83002a7f:	ff 75 08             	push   0x8(%ebp)
83002a82:	50                   	push   %eax
83002a83:	e8 0b 00 00 00       	call   83002a93 <_vfiprintf_r>
83002a88:	83 c4 10             	add    $0x10,%esp
83002a8b:	89 45 f4             	mov    %eax,-0xc(%ebp)
83002a8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002a91:	c9                   	leave  
83002a92:	c3                   	ret    

83002a93 <_vfiprintf_r>:
83002a93:	55                   	push   %ebp
83002a94:	89 e5                	mov    %esp,%ebp
83002a96:	57                   	push   %edi
83002a97:	56                   	push   %esi
83002a98:	53                   	push   %ebx
83002a99:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
83002a9f:	c7 45 e4 c6 29 00 83 	movl   $0x830029c6,-0x1c(%ebp)
83002aa6:	8b 45 08             	mov    0x8(%ebp),%eax
83002aa9:	89 45 e0             	mov    %eax,-0x20(%ebp)
83002aac:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
83002ab0:	74 18                	je     83002aca <_vfiprintf_r+0x37>
83002ab2:	8b 45 e0             	mov    -0x20(%ebp),%eax
83002ab5:	8b 40 38             	mov    0x38(%eax),%eax
83002ab8:	85 c0                	test   %eax,%eax
83002aba:	75 0e                	jne    83002aca <_vfiprintf_r+0x37>
83002abc:	83 ec 0c             	sub    $0xc,%esp
83002abf:	ff 75 e0             	push   -0x20(%ebp)
83002ac2:	e8 f6 df ff ff       	call   83000abd <__sinit>
83002ac7:	83 c4 10             	add    $0x10,%esp
83002aca:	8b 45 0c             	mov    0xc(%ebp),%eax
83002acd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83002ad1:	98                   	cwtl   
83002ad2:	83 e0 08             	and    $0x8,%eax
83002ad5:	85 c0                	test   %eax,%eax
83002ad7:	74 0a                	je     83002ae3 <_vfiprintf_r+0x50>
83002ad9:	8b 45 0c             	mov    0xc(%ebp),%eax
83002adc:	8b 40 10             	mov    0x10(%eax),%eax
83002adf:	85 c0                	test   %eax,%eax
83002ae1:	75 1f                	jne    83002b02 <_vfiprintf_r+0x6f>
83002ae3:	83 ec 08             	sub    $0x8,%esp
83002ae6:	ff 75 0c             	push   0xc(%ebp)
83002ae9:	ff 75 08             	push   0x8(%ebp)
83002aec:	e8 64 13 00 00       	call   83003e55 <__swsetup_r>
83002af1:	83 c4 10             	add    $0x10,%esp
83002af4:	85 c0                	test   %eax,%eax
83002af6:	74 0a                	je     83002b02 <_vfiprintf_r+0x6f>
83002af8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83002afd:	e9 df 02 00 00       	jmp    83002de1 <_vfiprintf_r+0x34e>
83002b02:	8b 5d 10             	mov    0x10(%ebp),%ebx
83002b05:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
83002b0c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
83002b10:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
83002b14:	8b 45 14             	mov    0x14(%ebp),%eax
83002b17:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
83002b1d:	89 de                	mov    %ebx,%esi
83002b1f:	eb 03                	jmp    83002b24 <_vfiprintf_r+0x91>
83002b21:	83 c3 01             	add    $0x1,%ebx
83002b24:	0f b6 03             	movzbl (%ebx),%eax
83002b27:	84 c0                	test   %al,%al
83002b29:	74 07                	je     83002b32 <_vfiprintf_r+0x9f>
83002b2b:	0f b6 03             	movzbl (%ebx),%eax
83002b2e:	3c 25                	cmp    $0x25,%al
83002b30:	75 ef                	jne    83002b21 <_vfiprintf_r+0x8e>
83002b32:	89 d8                	mov    %ebx,%eax
83002b34:	29 f0                	sub    %esi,%eax
83002b36:	85 c0                	test   %eax,%eax
83002b38:	74 2b                	je     83002b65 <_vfiprintf_r+0xd2>
83002b3a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
83002b40:	50                   	push   %eax
83002b41:	56                   	push   %esi
83002b42:	ff 75 0c             	push   0xc(%ebp)
83002b45:	ff 75 08             	push   0x8(%ebp)
83002b48:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83002b4b:	ff d0                	call   *%eax
83002b4d:	83 c4 10             	add    $0x10,%esp
83002b50:	83 f8 ff             	cmp    $0xffffffff,%eax
83002b53:	0f 84 68 02 00 00    	je     83002dc1 <_vfiprintf_r+0x32e>
83002b59:	8b 45 94             	mov    -0x6c(%ebp),%eax
83002b5c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
83002b62:	89 45 94             	mov    %eax,-0x6c(%ebp)
83002b65:	0f b6 03             	movzbl (%ebx),%eax
83002b68:	84 c0                	test   %al,%al
83002b6a:	0f 84 54 02 00 00    	je     83002dc4 <_vfiprintf_r+0x331>
83002b70:	83 c3 01             	add    $0x1,%ebx
83002b73:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
83002b7a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
83002b81:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
83002b88:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
83002b8f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
83002b93:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
83002b9a:	c7 45 dc 4c 66 00 83 	movl   $0x8300664c,-0x24(%ebp)
83002ba1:	eb 1b                	jmp    83002bbe <_vfiprintf_r+0x12b>
83002ba3:	8b 55 80             	mov    -0x80(%ebp),%edx
83002ba6:	89 f0                	mov    %esi,%eax
83002ba8:	2b 45 dc             	sub    -0x24(%ebp),%eax
83002bab:	be 01 00 00 00       	mov    $0x1,%esi
83002bb0:	89 c1                	mov    %eax,%ecx
83002bb2:	d3 e6                	shl    %cl,%esi
83002bb4:	89 f0                	mov    %esi,%eax
83002bb6:	09 d0                	or     %edx,%eax
83002bb8:	89 45 80             	mov    %eax,-0x80(%ebp)
83002bbb:	83 c3 01             	add    $0x1,%ebx
83002bbe:	0f b6 03             	movzbl (%ebx),%eax
83002bc1:	0f be c0             	movsbl %al,%eax
83002bc4:	83 ec 04             	sub    $0x4,%esp
83002bc7:	6a 05                	push   $0x5
83002bc9:	50                   	push   %eax
83002bca:	ff 75 dc             	push   -0x24(%ebp)
83002bcd:	e8 ee fa ff ff       	call   830026c0 <memchr>
83002bd2:	83 c4 10             	add    $0x10,%esp
83002bd5:	89 c6                	mov    %eax,%esi
83002bd7:	85 f6                	test   %esi,%esi
83002bd9:	75 c8                	jne    83002ba3 <_vfiprintf_r+0x110>
83002bdb:	8b 45 80             	mov    -0x80(%ebp),%eax
83002bde:	83 e0 10             	and    $0x10,%eax
83002be1:	85 c0                	test   %eax,%eax
83002be3:	74 04                	je     83002be9 <_vfiprintf_r+0x156>
83002be5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
83002be9:	8b 45 80             	mov    -0x80(%ebp),%eax
83002bec:	83 e0 08             	and    $0x8,%eax
83002bef:	85 c0                	test   %eax,%eax
83002bf1:	74 04                	je     83002bf7 <_vfiprintf_r+0x164>
83002bf3:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
83002bf7:	0f b6 03             	movzbl (%ebx),%eax
83002bfa:	3c 2a                	cmp    $0x2a,%al
83002bfc:	75 50                	jne    83002c4e <_vfiprintf_r+0x1bb>
83002bfe:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
83002c04:	8d 50 04             	lea    0x4(%eax),%edx
83002c07:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
83002c0d:	8b 00                	mov    (%eax),%eax
83002c0f:	89 45 8c             	mov    %eax,-0x74(%ebp)
83002c12:	8b 45 8c             	mov    -0x74(%ebp),%eax
83002c15:	85 c0                	test   %eax,%eax
83002c17:	79 11                	jns    83002c2a <_vfiprintf_r+0x197>
83002c19:	8b 45 8c             	mov    -0x74(%ebp),%eax
83002c1c:	f7 d8                	neg    %eax
83002c1e:	89 45 8c             	mov    %eax,-0x74(%ebp)
83002c21:	8b 45 80             	mov    -0x80(%ebp),%eax
83002c24:	83 c8 02             	or     $0x2,%eax
83002c27:	89 45 80             	mov    %eax,-0x80(%ebp)
83002c2a:	83 c3 01             	add    $0x1,%ebx
83002c2d:	eb 2d                	jmp    83002c5c <_vfiprintf_r+0x1c9>
83002c2f:	8b 55 8c             	mov    -0x74(%ebp),%edx
83002c32:	89 d0                	mov    %edx,%eax
83002c34:	c1 e0 02             	shl    $0x2,%eax
83002c37:	01 d0                	add    %edx,%eax
83002c39:	01 c0                	add    %eax,%eax
83002c3b:	89 c2                	mov    %eax,%edx
83002c3d:	0f b6 03             	movzbl (%ebx),%eax
83002c40:	0f be c0             	movsbl %al,%eax
83002c43:	83 e8 30             	sub    $0x30,%eax
83002c46:	01 d0                	add    %edx,%eax
83002c48:	89 45 8c             	mov    %eax,-0x74(%ebp)
83002c4b:	83 c3 01             	add    $0x1,%ebx
83002c4e:	0f b6 03             	movzbl (%ebx),%eax
83002c51:	0f be c0             	movsbl %al,%eax
83002c54:	83 e8 30             	sub    $0x30,%eax
83002c57:	83 f8 09             	cmp    $0x9,%eax
83002c5a:	76 d3                	jbe    83002c2f <_vfiprintf_r+0x19c>
83002c5c:	0f b6 03             	movzbl (%ebx),%eax
83002c5f:	3c 2e                	cmp    $0x2e,%al
83002c61:	75 67                	jne    83002cca <_vfiprintf_r+0x237>
83002c63:	83 c3 01             	add    $0x1,%ebx
83002c66:	0f b6 03             	movzbl (%ebx),%eax
83002c69:	3c 2a                	cmp    $0x2a,%al
83002c6b:	75 27                	jne    83002c94 <_vfiprintf_r+0x201>
83002c6d:	83 c3 01             	add    $0x1,%ebx
83002c70:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
83002c76:	8d 50 04             	lea    0x4(%eax),%edx
83002c79:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
83002c7f:	8b 00                	mov    (%eax),%eax
83002c81:	89 45 84             	mov    %eax,-0x7c(%ebp)
83002c84:	8b 45 84             	mov    -0x7c(%ebp),%eax
83002c87:	85 c0                	test   %eax,%eax
83002c89:	79 3f                	jns    83002cca <_vfiprintf_r+0x237>
83002c8b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
83002c92:	eb 36                	jmp    83002cca <_vfiprintf_r+0x237>
83002c94:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
83002c9b:	eb 1f                	jmp    83002cbc <_vfiprintf_r+0x229>
83002c9d:	8b 55 84             	mov    -0x7c(%ebp),%edx
83002ca0:	89 d0                	mov    %edx,%eax
83002ca2:	c1 e0 02             	shl    $0x2,%eax
83002ca5:	01 d0                	add    %edx,%eax
83002ca7:	01 c0                	add    %eax,%eax
83002ca9:	89 c2                	mov    %eax,%edx
83002cab:	0f b6 03             	movzbl (%ebx),%eax
83002cae:	0f be c0             	movsbl %al,%eax
83002cb1:	83 e8 30             	sub    $0x30,%eax
83002cb4:	01 d0                	add    %edx,%eax
83002cb6:	89 45 84             	mov    %eax,-0x7c(%ebp)
83002cb9:	83 c3 01             	add    $0x1,%ebx
83002cbc:	0f b6 03             	movzbl (%ebx),%eax
83002cbf:	0f be c0             	movsbl %al,%eax
83002cc2:	83 e8 30             	sub    $0x30,%eax
83002cc5:	83 f8 09             	cmp    $0x9,%eax
83002cc8:	76 d3                	jbe    83002c9d <_vfiprintf_r+0x20a>
83002cca:	c7 45 dc 52 66 00 83 	movl   $0x83006652,-0x24(%ebp)
83002cd1:	0f b6 03             	movzbl (%ebx),%eax
83002cd4:	0f be c0             	movsbl %al,%eax
83002cd7:	83 ec 04             	sub    $0x4,%esp
83002cda:	6a 03                	push   $0x3
83002cdc:	50                   	push   %eax
83002cdd:	ff 75 dc             	push   -0x24(%ebp)
83002ce0:	e8 db f9 ff ff       	call   830026c0 <memchr>
83002ce5:	83 c4 10             	add    $0x10,%esp
83002ce8:	89 c6                	mov    %eax,%esi
83002cea:	85 f6                	test   %esi,%esi
83002cec:	74 1b                	je     83002d09 <_vfiprintf_r+0x276>
83002cee:	8b 55 80             	mov    -0x80(%ebp),%edx
83002cf1:	89 f0                	mov    %esi,%eax
83002cf3:	2b 45 dc             	sub    -0x24(%ebp),%eax
83002cf6:	be 40 00 00 00       	mov    $0x40,%esi
83002cfb:	89 c1                	mov    %eax,%ecx
83002cfd:	d3 e6                	shl    %cl,%esi
83002cff:	89 f0                	mov    %esi,%eax
83002d01:	09 d0                	or     %edx,%eax
83002d03:	89 45 80             	mov    %eax,-0x80(%ebp)
83002d06:	83 c3 01             	add    $0x1,%ebx
83002d09:	89 d8                	mov    %ebx,%eax
83002d0b:	8d 58 01             	lea    0x1(%eax),%ebx
83002d0e:	0f b6 00             	movzbl (%eax),%eax
83002d11:	88 45 98             	mov    %al,-0x68(%ebp)
83002d14:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
83002d18:	0f be c0             	movsbl %al,%eax
83002d1b:	83 ec 04             	sub    $0x4,%esp
83002d1e:	6a 06                	push   $0x6
83002d20:	50                   	push   %eax
83002d21:	68 56 66 00 83       	push   $0x83006656
83002d26:	e8 95 f9 ff ff       	call   830026c0 <memchr>
83002d2b:	83 c4 10             	add    $0x10,%esp
83002d2e:	89 c6                	mov    %eax,%esi
83002d30:	85 f6                	test   %esi,%esi
83002d32:	74 5a                	je     83002d8e <_vfiprintf_r+0x2fb>
83002d34:	b8 00 00 00 00       	mov    $0x0,%eax
83002d39:	85 c0                	test   %eax,%eax
83002d3b:	75 2e                	jne    83002d6b <_vfiprintf_r+0x2d8>
83002d3d:	8b 45 80             	mov    -0x80(%ebp),%eax
83002d40:	25 00 01 00 00       	and    $0x100,%eax
83002d45:	85 c0                	test   %eax,%eax
83002d47:	74 11                	je     83002d5a <_vfiprintf_r+0x2c7>
83002d49:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
83002d4f:	83 c0 0c             	add    $0xc,%eax
83002d52:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
83002d58:	eb 55                	jmp    83002daf <_vfiprintf_r+0x31c>
83002d5a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
83002d60:	83 c0 08             	add    $0x8,%eax
83002d63:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
83002d69:	eb 44                	jmp    83002daf <_vfiprintf_r+0x31c>
83002d6b:	83 ec 0c             	sub    $0xc,%esp
83002d6e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
83002d74:	50                   	push   %eax
83002d75:	ff 75 e4             	push   -0x1c(%ebp)
83002d78:	ff 75 0c             	push   0xc(%ebp)
83002d7b:	8d 45 80             	lea    -0x80(%ebp),%eax
83002d7e:	50                   	push   %eax
83002d7f:	ff 75 08             	push   0x8(%ebp)
83002d82:	e8 79 d2 ff 7c       	call   0 <_start-0x83000000>
83002d87:	83 c4 20             	add    $0x20,%esp
83002d8a:	89 c7                	mov    %eax,%edi
83002d8c:	eb 21                	jmp    83002daf <_vfiprintf_r+0x31c>
83002d8e:	83 ec 0c             	sub    $0xc,%esp
83002d91:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
83002d97:	50                   	push   %eax
83002d98:	ff 75 e4             	push   -0x1c(%ebp)
83002d9b:	ff 75 0c             	push   0xc(%ebp)
83002d9e:	8d 45 80             	lea    -0x80(%ebp),%eax
83002da1:	50                   	push   %eax
83002da2:	ff 75 08             	push   0x8(%ebp)
83002da5:	e8 da 01 00 00       	call   83002f84 <_printf_i>
83002daa:	83 c4 20             	add    $0x20,%esp
83002dad:	89 c7                	mov    %eax,%edi
83002daf:	83 ff ff             	cmp    $0xffffffff,%edi
83002db2:	74 13                	je     83002dc7 <_vfiprintf_r+0x334>
83002db4:	8b 45 94             	mov    -0x6c(%ebp),%eax
83002db7:	01 f8                	add    %edi,%eax
83002db9:	89 45 94             	mov    %eax,-0x6c(%ebp)
83002dbc:	e9 5c fd ff ff       	jmp    83002b1d <_vfiprintf_r+0x8a>
83002dc1:	90                   	nop
83002dc2:	eb 04                	jmp    83002dc8 <_vfiprintf_r+0x335>
83002dc4:	90                   	nop
83002dc5:	eb 01                	jmp    83002dc8 <_vfiprintf_r+0x335>
83002dc7:	90                   	nop
83002dc8:	8b 45 0c             	mov    0xc(%ebp),%eax
83002dcb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83002dcf:	98                   	cwtl   
83002dd0:	83 e0 40             	and    $0x40,%eax
83002dd3:	85 c0                	test   %eax,%eax
83002dd5:	75 05                	jne    83002ddc <_vfiprintf_r+0x349>
83002dd7:	8b 45 94             	mov    -0x6c(%ebp),%eax
83002dda:	eb 05                	jmp    83002de1 <_vfiprintf_r+0x34e>
83002ddc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83002de1:	8d 65 f4             	lea    -0xc(%ebp),%esp
83002de4:	5b                   	pop    %ebx
83002de5:	5e                   	pop    %esi
83002de6:	5f                   	pop    %edi
83002de7:	5d                   	pop    %ebp
83002de8:	c3                   	ret    

83002de9 <_printf_common>:
83002de9:	55                   	push   %ebp
83002dea:	89 e5                	mov    %esp,%ebp
83002dec:	83 ec 18             	sub    $0x18,%esp
83002def:	8b 45 0c             	mov    0xc(%ebp),%eax
83002df2:	8b 50 10             	mov    0x10(%eax),%edx
83002df5:	8b 45 0c             	mov    0xc(%ebp),%eax
83002df8:	8b 40 08             	mov    0x8(%eax),%eax
83002dfb:	39 c2                	cmp    %eax,%edx
83002dfd:	0f 4c d0             	cmovl  %eax,%edx
83002e00:	8b 45 10             	mov    0x10(%ebp),%eax
83002e03:	89 10                	mov    %edx,(%eax)
83002e05:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e08:	0f b6 40 43          	movzbl 0x43(%eax),%eax
83002e0c:	84 c0                	test   %al,%al
83002e0e:	74 0d                	je     83002e1d <_printf_common+0x34>
83002e10:	8b 45 10             	mov    0x10(%ebp),%eax
83002e13:	8b 00                	mov    (%eax),%eax
83002e15:	8d 50 01             	lea    0x1(%eax),%edx
83002e18:	8b 45 10             	mov    0x10(%ebp),%eax
83002e1b:	89 10                	mov    %edx,(%eax)
83002e1d:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e20:	8b 00                	mov    (%eax),%eax
83002e22:	83 e0 20             	and    $0x20,%eax
83002e25:	85 c0                	test   %eax,%eax
83002e27:	74 0d                	je     83002e36 <_printf_common+0x4d>
83002e29:	8b 45 10             	mov    0x10(%ebp),%eax
83002e2c:	8b 00                	mov    (%eax),%eax
83002e2e:	8d 50 02             	lea    0x2(%eax),%edx
83002e31:	8b 45 10             	mov    0x10(%ebp),%eax
83002e34:	89 10                	mov    %edx,(%eax)
83002e36:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e39:	8b 00                	mov    (%eax),%eax
83002e3b:	83 e0 06             	and    $0x6,%eax
83002e3e:	85 c0                	test   %eax,%eax
83002e40:	75 41                	jne    83002e83 <_printf_common+0x9a>
83002e42:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
83002e49:	eb 24                	jmp    83002e6f <_printf_common+0x86>
83002e4b:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e4e:	83 c0 19             	add    $0x19,%eax
83002e51:	6a 01                	push   $0x1
83002e53:	50                   	push   %eax
83002e54:	ff 75 14             	push   0x14(%ebp)
83002e57:	ff 75 08             	push   0x8(%ebp)
83002e5a:	8b 45 18             	mov    0x18(%ebp),%eax
83002e5d:	ff d0                	call   *%eax
83002e5f:	83 c4 10             	add    $0x10,%esp
83002e62:	83 f8 ff             	cmp    $0xffffffff,%eax
83002e65:	0f 84 0b 01 00 00    	je     83002f76 <_printf_common+0x18d>
83002e6b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
83002e6f:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e72:	8b 50 0c             	mov    0xc(%eax),%edx
83002e75:	8b 45 10             	mov    0x10(%ebp),%eax
83002e78:	8b 08                	mov    (%eax),%ecx
83002e7a:	89 d0                	mov    %edx,%eax
83002e7c:	29 c8                	sub    %ecx,%eax
83002e7e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
83002e81:	7c c8                	jl     83002e4b <_printf_common+0x62>
83002e83:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
83002e8a:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e8d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
83002e91:	84 c0                	test   %al,%al
83002e93:	74 04                	je     83002e99 <_printf_common+0xb0>
83002e95:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
83002e99:	8b 45 0c             	mov    0xc(%ebp),%eax
83002e9c:	8b 00                	mov    (%eax),%eax
83002e9e:	83 e0 20             	and    $0x20,%eax
83002ea1:	85 c0                	test   %eax,%eax
83002ea3:	74 28                	je     83002ecd <_printf_common+0xe4>
83002ea5:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002ea8:	8d 50 01             	lea    0x1(%eax),%edx
83002eab:	89 55 f4             	mov    %edx,-0xc(%ebp)
83002eae:	8b 55 0c             	mov    0xc(%ebp),%edx
83002eb1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
83002eb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002eb9:	8d 50 01             	lea    0x1(%eax),%edx
83002ebc:	89 55 f4             	mov    %edx,-0xc(%ebp)
83002ebf:	8b 55 0c             	mov    0xc(%ebp),%edx
83002ec2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
83002ec6:	8b 55 0c             	mov    0xc(%ebp),%edx
83002ec9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
83002ecd:	8b 45 f4             	mov    -0xc(%ebp),%eax
83002ed0:	8b 55 0c             	mov    0xc(%ebp),%edx
83002ed3:	83 c2 43             	add    $0x43,%edx
83002ed6:	50                   	push   %eax
83002ed7:	52                   	push   %edx
83002ed8:	ff 75 14             	push   0x14(%ebp)
83002edb:	ff 75 08             	push   0x8(%ebp)
83002ede:	8b 45 18             	mov    0x18(%ebp),%eax
83002ee1:	ff d0                	call   *%eax
83002ee3:	83 c4 10             	add    $0x10,%esp
83002ee6:	83 f8 ff             	cmp    $0xffffffff,%eax
83002ee9:	0f 84 8a 00 00 00    	je     83002f79 <_printf_common+0x190>
83002eef:	8b 45 0c             	mov    0xc(%ebp),%eax
83002ef2:	8b 50 0c             	mov    0xc(%eax),%edx
83002ef5:	8b 45 10             	mov    0x10(%ebp),%eax
83002ef8:	8b 08                	mov    (%eax),%ecx
83002efa:	89 d0                	mov    %edx,%eax
83002efc:	29 c8                	sub    %ecx,%eax
83002efe:	89 45 f4             	mov    %eax,-0xc(%ebp)
83002f01:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f04:	8b 00                	mov    (%eax),%eax
83002f06:	83 e0 06             	and    $0x6,%eax
83002f09:	83 f8 04             	cmp    $0x4,%eax
83002f0c:	75 06                	jne    83002f14 <_printf_common+0x12b>
83002f0e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83002f12:	79 07                	jns    83002f1b <_printf_common+0x132>
83002f14:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
83002f1b:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f1e:	8b 50 08             	mov    0x8(%eax),%edx
83002f21:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f24:	8b 40 10             	mov    0x10(%eax),%eax
83002f27:	39 c2                	cmp    %eax,%edx
83002f29:	7e 13                	jle    83002f3e <_printf_common+0x155>
83002f2b:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f2e:	8b 50 08             	mov    0x8(%eax),%edx
83002f31:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f34:	8b 48 10             	mov    0x10(%eax),%ecx
83002f37:	89 d0                	mov    %edx,%eax
83002f39:	29 c8                	sub    %ecx,%eax
83002f3b:	01 45 f4             	add    %eax,-0xc(%ebp)
83002f3e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
83002f45:	eb 20                	jmp    83002f67 <_printf_common+0x17e>
83002f47:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f4a:	83 c0 1a             	add    $0x1a,%eax
83002f4d:	6a 01                	push   $0x1
83002f4f:	50                   	push   %eax
83002f50:	ff 75 14             	push   0x14(%ebp)
83002f53:	ff 75 08             	push   0x8(%ebp)
83002f56:	8b 45 18             	mov    0x18(%ebp),%eax
83002f59:	ff d0                	call   *%eax
83002f5b:	83 c4 10             	add    $0x10,%esp
83002f5e:	83 f8 ff             	cmp    $0xffffffff,%eax
83002f61:	74 19                	je     83002f7c <_printf_common+0x193>
83002f63:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
83002f67:	8b 45 ec             	mov    -0x14(%ebp),%eax
83002f6a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
83002f6d:	7c d8                	jl     83002f47 <_printf_common+0x15e>
83002f6f:	b8 00 00 00 00       	mov    $0x0,%eax
83002f74:	eb 0c                	jmp    83002f82 <_printf_common+0x199>
83002f76:	90                   	nop
83002f77:	eb 04                	jmp    83002f7d <_printf_common+0x194>
83002f79:	90                   	nop
83002f7a:	eb 01                	jmp    83002f7d <_printf_common+0x194>
83002f7c:	90                   	nop
83002f7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83002f82:	c9                   	leave  
83002f83:	c3                   	ret    

83002f84 <_printf_i>:
83002f84:	55                   	push   %ebp
83002f85:	89 e5                	mov    %esp,%ebp
83002f87:	53                   	push   %ebx
83002f88:	83 ec 24             	sub    $0x24,%esp
83002f8b:	8b 45 0c             	mov    0xc(%ebp),%eax
83002f8e:	83 c0 1b             	add    $0x1b,%eax
83002f91:	83 c0 28             	add    $0x28,%eax
83002f94:	89 45 ec             	mov    %eax,-0x14(%ebp)
83002f97:	c7 45 e8 60 66 00 83 	movl   $0x83006660,-0x18(%ebp)
83002f9e:	8b 45 0c             	mov    0xc(%ebp),%eax
83002fa1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
83002fa5:	0f be c0             	movsbl %al,%eax
83002fa8:	85 c0                	test   %eax,%eax
83002faa:	0f 84 00 03 00 00    	je     830032b0 <_printf_i+0x32c>
83002fb0:	85 c0                	test   %eax,%eax
83002fb2:	0f 88 52 03 00 00    	js     8300330a <_printf_i+0x386>
83002fb8:	83 f8 78             	cmp    $0x78,%eax
83002fbb:	0f 8f 49 03 00 00    	jg     8300330a <_printf_i+0x386>
83002fc1:	83 f8 58             	cmp    $0x58,%eax
83002fc4:	0f 8c 40 03 00 00    	jl     8300330a <_printf_i+0x386>
83002fca:	83 e8 58             	sub    $0x58,%eax
83002fcd:	83 f8 20             	cmp    $0x20,%eax
83002fd0:	0f 87 34 03 00 00    	ja     8300330a <_printf_i+0x386>
83002fd6:	8b 04 85 84 66 00 83 	mov    -0x7cff997c(,%eax,4),%eax
83002fdd:	ff e0                	jmp    *%eax
83002fdf:	8b 45 18             	mov    0x18(%ebp),%eax
83002fe2:	8b 00                	mov    (%eax),%eax
83002fe4:	8d 48 04             	lea    0x4(%eax),%ecx
83002fe7:	8b 55 18             	mov    0x18(%ebp),%edx
83002fea:	89 0a                	mov    %ecx,(%edx)
83002fec:	8b 00                	mov    (%eax),%eax
83002fee:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
83002ff2:	89 c2                	mov    %eax,%edx
83002ff4:	8b 45 ec             	mov    -0x14(%ebp),%eax
83002ff7:	88 10                	mov    %dl,(%eax)
83002ff9:	8b 45 0c             	mov    0xc(%ebp),%eax
83002ffc:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
83003003:	e9 1c 03 00 00       	jmp    83003324 <_printf_i+0x3a0>
83003008:	8b 45 0c             	mov    0xc(%ebp),%eax
8300300b:	8b 00                	mov    (%eax),%eax
8300300d:	25 80 00 00 00       	and    $0x80,%eax
83003012:	85 c0                	test   %eax,%eax
83003014:	74 11                	je     83003027 <_printf_i+0xa3>
83003016:	8b 45 18             	mov    0x18(%ebp),%eax
83003019:	8b 00                	mov    (%eax),%eax
8300301b:	8d 48 04             	lea    0x4(%eax),%ecx
8300301e:	8b 55 18             	mov    0x18(%ebp),%edx
83003021:	89 0a                	mov    %ecx,(%edx)
83003023:	8b 00                	mov    (%eax),%eax
83003025:	eb 2d                	jmp    83003054 <_printf_i+0xd0>
83003027:	8b 45 0c             	mov    0xc(%ebp),%eax
8300302a:	8b 00                	mov    (%eax),%eax
8300302c:	83 e0 40             	and    $0x40,%eax
8300302f:	85 c0                	test   %eax,%eax
83003031:	74 12                	je     83003045 <_printf_i+0xc1>
83003033:	8b 45 18             	mov    0x18(%ebp),%eax
83003036:	8b 00                	mov    (%eax),%eax
83003038:	8d 48 04             	lea    0x4(%eax),%ecx
8300303b:	8b 55 18             	mov    0x18(%ebp),%edx
8300303e:	89 0a                	mov    %ecx,(%edx)
83003040:	8b 00                	mov    (%eax),%eax
83003042:	98                   	cwtl   
83003043:	eb 0f                	jmp    83003054 <_printf_i+0xd0>
83003045:	8b 45 18             	mov    0x18(%ebp),%eax
83003048:	8b 00                	mov    (%eax),%eax
8300304a:	8d 48 04             	lea    0x4(%eax),%ecx
8300304d:	8b 55 18             	mov    0x18(%ebp),%edx
83003050:	89 0a                	mov    %ecx,(%edx)
83003052:	8b 00                	mov    (%eax),%eax
83003054:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003057:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300305a:	85 c0                	test   %eax,%eax
8300305c:	79 0a                	jns    83003068 <_printf_i+0xe4>
8300305e:	f7 5d f4             	negl   -0xc(%ebp)
83003061:	8b 45 0c             	mov    0xc(%ebp),%eax
83003064:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
83003068:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8300306f:	e9 28 01 00 00       	jmp    8300319c <_printf_i+0x218>
83003074:	8b 45 0c             	mov    0xc(%ebp),%eax
83003077:	8b 00                	mov    (%eax),%eax
83003079:	25 80 00 00 00       	and    $0x80,%eax
8300307e:	85 c0                	test   %eax,%eax
83003080:	74 11                	je     83003093 <_printf_i+0x10f>
83003082:	8b 45 18             	mov    0x18(%ebp),%eax
83003085:	8b 00                	mov    (%eax),%eax
83003087:	8d 48 04             	lea    0x4(%eax),%ecx
8300308a:	8b 55 18             	mov    0x18(%ebp),%edx
8300308d:	89 0a                	mov    %ecx,(%edx)
8300308f:	8b 00                	mov    (%eax),%eax
83003091:	eb 2f                	jmp    830030c2 <_printf_i+0x13e>
83003093:	8b 45 0c             	mov    0xc(%ebp),%eax
83003096:	8b 00                	mov    (%eax),%eax
83003098:	83 e0 40             	and    $0x40,%eax
8300309b:	85 c0                	test   %eax,%eax
8300309d:	74 14                	je     830030b3 <_printf_i+0x12f>
8300309f:	8b 45 18             	mov    0x18(%ebp),%eax
830030a2:	8b 00                	mov    (%eax),%eax
830030a4:	8d 48 04             	lea    0x4(%eax),%ecx
830030a7:	8b 55 18             	mov    0x18(%ebp),%edx
830030aa:	89 0a                	mov    %ecx,(%edx)
830030ac:	8b 00                	mov    (%eax),%eax
830030ae:	0f b7 c0             	movzwl %ax,%eax
830030b1:	eb 0f                	jmp    830030c2 <_printf_i+0x13e>
830030b3:	8b 45 18             	mov    0x18(%ebp),%eax
830030b6:	8b 00                	mov    (%eax),%eax
830030b8:	8d 48 04             	lea    0x4(%eax),%ecx
830030bb:	8b 55 18             	mov    0x18(%ebp),%edx
830030be:	89 0a                	mov    %ecx,(%edx)
830030c0:	8b 00                	mov    (%eax),%eax
830030c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
830030c5:	8b 45 0c             	mov    0xc(%ebp),%eax
830030c8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
830030cc:	3c 6f                	cmp    $0x6f,%al
830030ce:	75 07                	jne    830030d7 <_printf_i+0x153>
830030d0:	b8 08 00 00 00       	mov    $0x8,%eax
830030d5:	eb 05                	jmp    830030dc <_printf_i+0x158>
830030d7:	b8 0a 00 00 00       	mov    $0xa,%eax
830030dc:	89 45 f0             	mov    %eax,-0x10(%ebp)
830030df:	e9 b1 00 00 00       	jmp    83003195 <_printf_i+0x211>
830030e4:	8b 45 0c             	mov    0xc(%ebp),%eax
830030e7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
830030eb:	eb 1d                	jmp    8300310a <_printf_i+0x186>
830030ed:	8b 45 0c             	mov    0xc(%ebp),%eax
830030f0:	8b 00                	mov    (%eax),%eax
830030f2:	83 c8 20             	or     $0x20,%eax
830030f5:	89 c2                	mov    %eax,%edx
830030f7:	8b 45 0c             	mov    0xc(%ebp),%eax
830030fa:	89 10                	mov    %edx,(%eax)
830030fc:	8b 45 0c             	mov    0xc(%ebp),%eax
830030ff:	c6 40 45 78          	movb   $0x78,0x45(%eax)
83003103:	c7 45 e8 71 66 00 83 	movl   $0x83006671,-0x18(%ebp)
8300310a:	8b 45 0c             	mov    0xc(%ebp),%eax
8300310d:	8b 00                	mov    (%eax),%eax
8300310f:	25 80 00 00 00       	and    $0x80,%eax
83003114:	85 c0                	test   %eax,%eax
83003116:	74 11                	je     83003129 <_printf_i+0x1a5>
83003118:	8b 45 18             	mov    0x18(%ebp),%eax
8300311b:	8b 00                	mov    (%eax),%eax
8300311d:	8d 48 04             	lea    0x4(%eax),%ecx
83003120:	8b 55 18             	mov    0x18(%ebp),%edx
83003123:	89 0a                	mov    %ecx,(%edx)
83003125:	8b 00                	mov    (%eax),%eax
83003127:	eb 2f                	jmp    83003158 <_printf_i+0x1d4>
83003129:	8b 45 0c             	mov    0xc(%ebp),%eax
8300312c:	8b 00                	mov    (%eax),%eax
8300312e:	83 e0 40             	and    $0x40,%eax
83003131:	85 c0                	test   %eax,%eax
83003133:	74 14                	je     83003149 <_printf_i+0x1c5>
83003135:	8b 45 18             	mov    0x18(%ebp),%eax
83003138:	8b 00                	mov    (%eax),%eax
8300313a:	8d 48 04             	lea    0x4(%eax),%ecx
8300313d:	8b 55 18             	mov    0x18(%ebp),%edx
83003140:	89 0a                	mov    %ecx,(%edx)
83003142:	8b 00                	mov    (%eax),%eax
83003144:	0f b7 c0             	movzwl %ax,%eax
83003147:	eb 0f                	jmp    83003158 <_printf_i+0x1d4>
83003149:	8b 45 18             	mov    0x18(%ebp),%eax
8300314c:	8b 00                	mov    (%eax),%eax
8300314e:	8d 48 04             	lea    0x4(%eax),%ecx
83003151:	8b 55 18             	mov    0x18(%ebp),%edx
83003154:	89 0a                	mov    %ecx,(%edx)
83003156:	8b 00                	mov    (%eax),%eax
83003158:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300315b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
83003162:	8b 45 0c             	mov    0xc(%ebp),%eax
83003165:	8b 00                	mov    (%eax),%eax
83003167:	83 e0 01             	and    $0x1,%eax
8300316a:	85 c0                	test   %eax,%eax
8300316c:	74 0f                	je     8300317d <_printf_i+0x1f9>
8300316e:	8b 45 0c             	mov    0xc(%ebp),%eax
83003171:	8b 00                	mov    (%eax),%eax
83003173:	83 c8 20             	or     $0x20,%eax
83003176:	89 c2                	mov    %eax,%edx
83003178:	8b 45 0c             	mov    0xc(%ebp),%eax
8300317b:	89 10                	mov    %edx,(%eax)
8300317d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83003181:	75 11                	jne    83003194 <_printf_i+0x210>
83003183:	8b 45 0c             	mov    0xc(%ebp),%eax
83003186:	8b 00                	mov    (%eax),%eax
83003188:	83 e0 df             	and    $0xffffffdf,%eax
8300318b:	89 c2                	mov    %eax,%edx
8300318d:	8b 45 0c             	mov    0xc(%ebp),%eax
83003190:	89 10                	mov    %edx,(%eax)
83003192:	eb 01                	jmp    83003195 <_printf_i+0x211>
83003194:	90                   	nop
83003195:	8b 45 0c             	mov    0xc(%ebp),%eax
83003198:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8300319c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300319f:	8b 50 04             	mov    0x4(%eax),%edx
830031a2:	8b 45 0c             	mov    0xc(%ebp),%eax
830031a5:	89 50 08             	mov    %edx,0x8(%eax)
830031a8:	8b 45 0c             	mov    0xc(%ebp),%eax
830031ab:	8b 40 08             	mov    0x8(%eax),%eax
830031ae:	85 c0                	test   %eax,%eax
830031b0:	78 0f                	js     830031c1 <_printf_i+0x23d>
830031b2:	8b 45 0c             	mov    0xc(%ebp),%eax
830031b5:	8b 00                	mov    (%eax),%eax
830031b7:	83 e0 fb             	and    $0xfffffffb,%eax
830031ba:	89 c2                	mov    %eax,%edx
830031bc:	8b 45 0c             	mov    0xc(%ebp),%eax
830031bf:	89 10                	mov    %edx,(%eax)
830031c1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
830031c5:	75 0a                	jne    830031d1 <_printf_i+0x24d>
830031c7:	8b 45 0c             	mov    0xc(%ebp),%eax
830031ca:	8b 40 04             	mov    0x4(%eax),%eax
830031cd:	85 c0                	test   %eax,%eax
830031cf:	74 34                	je     83003205 <_printf_i+0x281>
830031d1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
830031d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
830031d7:	ba 00 00 00 00       	mov    $0x0,%edx
830031dc:	f7 f1                	div    %ecx
830031de:	8b 45 e8             	mov    -0x18(%ebp),%eax
830031e1:	01 d0                	add    %edx,%eax
830031e3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
830031e7:	0f b6 10             	movzbl (%eax),%edx
830031ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
830031ed:	88 10                	mov    %dl,(%eax)
830031ef:	8b 5d f0             	mov    -0x10(%ebp),%ebx
830031f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
830031f5:	ba 00 00 00 00       	mov    $0x0,%edx
830031fa:	f7 f3                	div    %ebx
830031fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
830031ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83003203:	75 cc                	jne    830031d1 <_printf_i+0x24d>
83003205:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
83003209:	75 26                	jne    83003231 <_printf_i+0x2ad>
8300320b:	8b 45 0c             	mov    0xc(%ebp),%eax
8300320e:	8b 00                	mov    (%eax),%eax
83003210:	83 e0 01             	and    $0x1,%eax
83003213:	85 c0                	test   %eax,%eax
83003215:	74 1a                	je     83003231 <_printf_i+0x2ad>
83003217:	8b 45 0c             	mov    0xc(%ebp),%eax
8300321a:	8b 50 04             	mov    0x4(%eax),%edx
8300321d:	8b 45 0c             	mov    0xc(%ebp),%eax
83003220:	8b 40 10             	mov    0x10(%eax),%eax
83003223:	39 c2                	cmp    %eax,%edx
83003225:	7f 0a                	jg     83003231 <_printf_i+0x2ad>
83003227:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8300322b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300322e:	c6 00 30             	movb   $0x30,(%eax)
83003231:	8b 45 0c             	mov    0xc(%ebp),%eax
83003234:	83 c0 1b             	add    $0x1b,%eax
83003237:	83 c0 28             	add    $0x28,%eax
8300323a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8300323d:	89 c2                	mov    %eax,%edx
8300323f:	8b 45 0c             	mov    0xc(%ebp),%eax
83003242:	89 50 10             	mov    %edx,0x10(%eax)
83003245:	e9 e2 00 00 00       	jmp    8300332c <_printf_i+0x3a8>
8300324a:	8b 45 0c             	mov    0xc(%ebp),%eax
8300324d:	8b 00                	mov    (%eax),%eax
8300324f:	25 80 00 00 00       	and    $0x80,%eax
83003254:	85 c0                	test   %eax,%eax
83003256:	74 19                	je     83003271 <_printf_i+0x2ed>
83003258:	8b 45 18             	mov    0x18(%ebp),%eax
8300325b:	8b 00                	mov    (%eax),%eax
8300325d:	8d 48 04             	lea    0x4(%eax),%ecx
83003260:	8b 55 18             	mov    0x18(%ebp),%edx
83003263:	89 0a                	mov    %ecx,(%edx)
83003265:	8b 00                	mov    (%eax),%eax
83003267:	8b 55 0c             	mov    0xc(%ebp),%edx
8300326a:	8b 52 14             	mov    0x14(%edx),%edx
8300326d:	89 10                	mov    %edx,(%eax)
8300326f:	eb 3f                	jmp    830032b0 <_printf_i+0x32c>
83003271:	8b 45 0c             	mov    0xc(%ebp),%eax
83003274:	8b 00                	mov    (%eax),%eax
83003276:	83 e0 40             	and    $0x40,%eax
83003279:	85 c0                	test   %eax,%eax
8300327b:	74 1c                	je     83003299 <_printf_i+0x315>
8300327d:	8b 45 0c             	mov    0xc(%ebp),%eax
83003280:	8b 58 14             	mov    0x14(%eax),%ebx
83003283:	8b 45 18             	mov    0x18(%ebp),%eax
83003286:	8b 00                	mov    (%eax),%eax
83003288:	8d 48 04             	lea    0x4(%eax),%ecx
8300328b:	8b 55 18             	mov    0x18(%ebp),%edx
8300328e:	89 0a                	mov    %ecx,(%edx)
83003290:	8b 00                	mov    (%eax),%eax
83003292:	89 da                	mov    %ebx,%edx
83003294:	66 89 10             	mov    %dx,(%eax)
83003297:	eb 17                	jmp    830032b0 <_printf_i+0x32c>
83003299:	8b 45 18             	mov    0x18(%ebp),%eax
8300329c:	8b 00                	mov    (%eax),%eax
8300329e:	8d 48 04             	lea    0x4(%eax),%ecx
830032a1:	8b 55 18             	mov    0x18(%ebp),%edx
830032a4:	89 0a                	mov    %ecx,(%edx)
830032a6:	8b 00                	mov    (%eax),%eax
830032a8:	8b 55 0c             	mov    0xc(%ebp),%edx
830032ab:	8b 52 14             	mov    0x14(%edx),%edx
830032ae:	89 10                	mov    %edx,(%eax)
830032b0:	8b 45 0c             	mov    0xc(%ebp),%eax
830032b3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
830032ba:	eb 70                	jmp    8300332c <_printf_i+0x3a8>
830032bc:	8b 45 18             	mov    0x18(%ebp),%eax
830032bf:	8b 00                	mov    (%eax),%eax
830032c1:	8d 48 04             	lea    0x4(%eax),%ecx
830032c4:	8b 55 18             	mov    0x18(%ebp),%edx
830032c7:	89 0a                	mov    %ecx,(%edx)
830032c9:	8b 00                	mov    (%eax),%eax
830032cb:	89 45 ec             	mov    %eax,-0x14(%ebp)
830032ce:	8b 45 0c             	mov    0xc(%ebp),%eax
830032d1:	8b 40 04             	mov    0x4(%eax),%eax
830032d4:	83 ec 04             	sub    $0x4,%esp
830032d7:	50                   	push   %eax
830032d8:	6a 00                	push   $0x0
830032da:	ff 75 ec             	push   -0x14(%ebp)
830032dd:	e8 de f3 ff ff       	call   830026c0 <memchr>
830032e2:	83 c4 10             	add    $0x10,%esp
830032e5:	89 45 e0             	mov    %eax,-0x20(%ebp)
830032e8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
830032ec:	74 0e                	je     830032fc <_printf_i+0x378>
830032ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
830032f1:	2b 45 ec             	sub    -0x14(%ebp),%eax
830032f4:	89 c2                	mov    %eax,%edx
830032f6:	8b 45 0c             	mov    0xc(%ebp),%eax
830032f9:	89 50 04             	mov    %edx,0x4(%eax)
830032fc:	8b 45 0c             	mov    0xc(%ebp),%eax
830032ff:	8b 50 04             	mov    0x4(%eax),%edx
83003302:	8b 45 0c             	mov    0xc(%ebp),%eax
83003305:	89 50 10             	mov    %edx,0x10(%eax)
83003308:	eb 1a                	jmp    83003324 <_printf_i+0x3a0>
8300330a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8300330e:	8b 45 0c             	mov    0xc(%ebp),%eax
83003311:	0f b6 50 18          	movzbl 0x18(%eax),%edx
83003315:	8b 45 ec             	mov    -0x14(%ebp),%eax
83003318:	88 10                	mov    %dl,(%eax)
8300331a:	8b 45 0c             	mov    0xc(%ebp),%eax
8300331d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
83003324:	8b 45 0c             	mov    0xc(%ebp),%eax
83003327:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8300332b:	90                   	nop
8300332c:	83 ec 0c             	sub    $0xc,%esp
8300332f:	ff 75 14             	push   0x14(%ebp)
83003332:	ff 75 10             	push   0x10(%ebp)
83003335:	8d 45 d8             	lea    -0x28(%ebp),%eax
83003338:	50                   	push   %eax
83003339:	ff 75 0c             	push   0xc(%ebp)
8300333c:	ff 75 08             	push   0x8(%ebp)
8300333f:	e8 a5 fa ff ff       	call   83002de9 <_printf_common>
83003344:	83 c4 20             	add    $0x20,%esp
83003347:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300334a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8300334e:	74 72                	je     830033c2 <_printf_i+0x43e>
83003350:	8b 45 0c             	mov    0xc(%ebp),%eax
83003353:	8b 40 10             	mov    0x10(%eax),%eax
83003356:	50                   	push   %eax
83003357:	ff 75 ec             	push   -0x14(%ebp)
8300335a:	ff 75 10             	push   0x10(%ebp)
8300335d:	ff 75 08             	push   0x8(%ebp)
83003360:	8b 45 14             	mov    0x14(%ebp),%eax
83003363:	ff d0                	call   *%eax
83003365:	83 c4 10             	add    $0x10,%esp
83003368:	83 f8 ff             	cmp    $0xffffffff,%eax
8300336b:	74 58                	je     830033c5 <_printf_i+0x441>
8300336d:	8b 45 0c             	mov    0xc(%ebp),%eax
83003370:	8b 00                	mov    (%eax),%eax
83003372:	83 e0 02             	and    $0x2,%eax
83003375:	85 c0                	test   %eax,%eax
83003377:	74 39                	je     830033b2 <_printf_i+0x42e>
83003379:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83003380:	eb 20                	jmp    830033a2 <_printf_i+0x41e>
83003382:	8b 45 0c             	mov    0xc(%ebp),%eax
83003385:	83 c0 19             	add    $0x19,%eax
83003388:	6a 01                	push   $0x1
8300338a:	50                   	push   %eax
8300338b:	ff 75 10             	push   0x10(%ebp)
8300338e:	ff 75 08             	push   0x8(%ebp)
83003391:	8b 45 14             	mov    0x14(%ebp),%eax
83003394:	ff d0                	call   *%eax
83003396:	83 c4 10             	add    $0x10,%esp
83003399:	83 f8 ff             	cmp    $0xffffffff,%eax
8300339c:	74 2a                	je     830033c8 <_printf_i+0x444>
8300339e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
830033a2:	8b 45 0c             	mov    0xc(%ebp),%eax
830033a5:	8b 40 0c             	mov    0xc(%eax),%eax
830033a8:	8b 55 d8             	mov    -0x28(%ebp),%edx
830033ab:	29 d0                	sub    %edx,%eax
830033ad:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
830033b0:	7c d0                	jl     83003382 <_printf_i+0x3fe>
830033b2:	8b 45 0c             	mov    0xc(%ebp),%eax
830033b5:	8b 50 0c             	mov    0xc(%eax),%edx
830033b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
830033bb:	39 c2                	cmp    %eax,%edx
830033bd:	0f 4d c2             	cmovge %edx,%eax
830033c0:	eb 0c                	jmp    830033ce <_printf_i+0x44a>
830033c2:	90                   	nop
830033c3:	eb 04                	jmp    830033c9 <_printf_i+0x445>
830033c5:	90                   	nop
830033c6:	eb 01                	jmp    830033c9 <_printf_i+0x445>
830033c8:	90                   	nop
830033c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830033ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
830033d1:	c9                   	leave  
830033d2:	c3                   	ret    

830033d3 <_puts_r>:
830033d3:	55                   	push   %ebp
830033d4:	89 e5                	mov    %esp,%ebp
830033d6:	83 ec 38             	sub    $0x38,%esp
830033d9:	83 ec 0c             	sub    $0xc,%esp
830033dc:	ff 75 0c             	push   0xc(%ebp)
830033df:	e8 1c 06 00 00       	call   83003a00 <strlen>
830033e4:	83 c4 10             	add    $0x10,%esp
830033e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
830033ea:	8b 45 0c             	mov    0xc(%ebp),%eax
830033ed:	89 45 cc             	mov    %eax,-0x34(%ebp)
830033f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
830033f3:	89 45 d0             	mov    %eax,-0x30(%ebp)
830033f6:	c7 45 d4 08 67 00 83 	movl   $0x83006708,-0x2c(%ebp)
830033fd:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
83003404:	8b 45 f4             	mov    -0xc(%ebp),%eax
83003407:	83 c0 01             	add    $0x1,%eax
8300340a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8300340d:	8d 45 cc             	lea    -0x34(%ebp),%eax
83003410:	89 45 dc             	mov    %eax,-0x24(%ebp)
83003413:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8300341a:	8b 45 08             	mov    0x8(%ebp),%eax
8300341d:	8b 40 08             	mov    0x8(%eax),%eax
83003420:	89 45 f0             	mov    %eax,-0x10(%ebp)
83003423:	8b 45 08             	mov    0x8(%ebp),%eax
83003426:	89 45 ec             	mov    %eax,-0x14(%ebp)
83003429:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8300342d:	74 18                	je     83003447 <_puts_r+0x74>
8300342f:	8b 45 ec             	mov    -0x14(%ebp),%eax
83003432:	8b 40 38             	mov    0x38(%eax),%eax
83003435:	85 c0                	test   %eax,%eax
83003437:	75 0e                	jne    83003447 <_puts_r+0x74>
83003439:	83 ec 0c             	sub    $0xc,%esp
8300343c:	ff 75 ec             	push   -0x14(%ebp)
8300343f:	e8 79 d6 ff ff       	call   83000abd <__sinit>
83003444:	83 c4 10             	add    $0x10,%esp
83003447:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300344a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8300344e:	98                   	cwtl   
8300344f:	25 00 20 00 00       	and    $0x2000,%eax
83003454:	85 c0                	test   %eax,%eax
83003456:	75 24                	jne    8300347c <_puts_r+0xa9>
83003458:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300345b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8300345f:	80 cc 20             	or     $0x20,%ah
83003462:	89 c2                	mov    %eax,%edx
83003464:	8b 45 f0             	mov    -0x10(%ebp),%eax
83003467:	66 89 50 0c          	mov    %dx,0xc(%eax)
8300346b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300346e:	8b 40 64             	mov    0x64(%eax),%eax
83003471:	80 e4 df             	and    $0xdf,%ah
83003474:	89 c2                	mov    %eax,%edx
83003476:	8b 45 f0             	mov    -0x10(%ebp),%eax
83003479:	89 50 64             	mov    %edx,0x64(%eax)
8300347c:	83 ec 04             	sub    $0x4,%esp
8300347f:	8d 45 dc             	lea    -0x24(%ebp),%eax
83003482:	50                   	push   %eax
83003483:	ff 75 f0             	push   -0x10(%ebp)
83003486:	ff 75 08             	push   0x8(%ebp)
83003489:	e8 a6 18 00 00       	call   83004d34 <__sfvwrite_r>
8300348e:	83 c4 10             	add    $0x10,%esp
83003491:	85 c0                	test   %eax,%eax
83003493:	74 07                	je     8300349c <_puts_r+0xc9>
83003495:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300349a:	eb 05                	jmp    830034a1 <_puts_r+0xce>
8300349c:	b8 0a 00 00 00       	mov    $0xa,%eax
830034a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
830034a4:	8b 45 e8             	mov    -0x18(%ebp),%eax
830034a7:	c9                   	leave  
830034a8:	c3                   	ret    

830034a9 <puts>:
830034a9:	55                   	push   %ebp
830034aa:	89 e5                	mov    %esp,%ebp
830034ac:	83 ec 08             	sub    $0x8,%esp
830034af:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830034b4:	83 ec 08             	sub    $0x8,%esp
830034b7:	ff 75 08             	push   0x8(%ebp)
830034ba:	50                   	push   %eax
830034bb:	e8 13 ff ff ff       	call   830033d3 <_puts_r>
830034c0:	83 c4 10             	add    $0x10,%esp
830034c3:	c9                   	leave  
830034c4:	c3                   	ret    

830034c5 <lflush>:
830034c5:	55                   	push   %ebp
830034c6:	89 e5                	mov    %esp,%ebp
830034c8:	83 ec 08             	sub    $0x8,%esp
830034cb:	8b 45 08             	mov    0x8(%ebp),%eax
830034ce:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
830034d2:	98                   	cwtl   
830034d3:	83 e0 09             	and    $0x9,%eax
830034d6:	83 f8 09             	cmp    $0x9,%eax
830034d9:	75 10                	jne    830034eb <lflush+0x26>
830034db:	83 ec 0c             	sub    $0xc,%esp
830034de:	ff 75 08             	push   0x8(%ebp)
830034e1:	e8 cb 0f 00 00       	call   830044b1 <fflush>
830034e6:	83 c4 10             	add    $0x10,%esp
830034e9:	eb 05                	jmp    830034f0 <lflush+0x2b>
830034eb:	b8 00 00 00 00       	mov    $0x0,%eax
830034f0:	c9                   	leave  
830034f1:	c3                   	ret    

830034f2 <__srefill_r>:
830034f2:	55                   	push   %ebp
830034f3:	89 e5                	mov    %esp,%ebp
830034f5:	56                   	push   %esi
830034f6:	53                   	push   %ebx
830034f7:	83 ec 10             	sub    $0x10,%esp
830034fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
830034fd:	8b 45 08             	mov    0x8(%ebp),%eax
83003500:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003503:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83003507:	74 18                	je     83003521 <__srefill_r+0x2f>
83003509:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300350c:	8b 40 38             	mov    0x38(%eax),%eax
8300350f:	85 c0                	test   %eax,%eax
83003511:	75 0e                	jne    83003521 <__srefill_r+0x2f>
83003513:	83 ec 0c             	sub    $0xc,%esp
83003516:	ff 75 f4             	push   -0xc(%ebp)
83003519:	e8 9f d5 ff ff       	call   83000abd <__sinit>
8300351e:	83 c4 10             	add    $0x10,%esp
83003521:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003525:	98                   	cwtl   
83003526:	25 00 20 00 00       	and    $0x2000,%eax
8300352b:	85 c0                	test   %eax,%eax
8300352d:	75 14                	jne    83003543 <__srefill_r+0x51>
8300352f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003533:	80 cc 20             	or     $0x20,%ah
83003536:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300353a:	8b 43 64             	mov    0x64(%ebx),%eax
8300353d:	80 e4 df             	and    $0xdf,%ah
83003540:	89 43 64             	mov    %eax,0x64(%ebx)
83003543:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8300354a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300354e:	98                   	cwtl   
8300354f:	83 e0 20             	and    $0x20,%eax
83003552:	85 c0                	test   %eax,%eax
83003554:	74 0a                	je     83003560 <__srefill_r+0x6e>
83003556:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300355b:	e9 8c 01 00 00       	jmp    830036ec <__srefill_r+0x1fa>
83003560:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003564:	98                   	cwtl   
83003565:	83 e0 04             	and    $0x4,%eax
83003568:	85 c0                	test   %eax,%eax
8300356a:	75 79                	jne    830035e5 <__srefill_r+0xf3>
8300356c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003570:	98                   	cwtl   
83003571:	83 e0 10             	and    $0x10,%eax
83003574:	85 c0                	test   %eax,%eax
83003576:	75 1e                	jne    83003596 <__srefill_r+0xa4>
83003578:	8b 45 08             	mov    0x8(%ebp),%eax
8300357b:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
83003581:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003585:	83 c8 40             	or     $0x40,%eax
83003588:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300358c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003591:	e9 56 01 00 00       	jmp    830036ec <__srefill_r+0x1fa>
83003596:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300359a:	98                   	cwtl   
8300359b:	83 e0 08             	and    $0x8,%eax
8300359e:	85 c0                	test   %eax,%eax
830035a0:	74 36                	je     830035d8 <__srefill_r+0xe6>
830035a2:	83 ec 08             	sub    $0x8,%esp
830035a5:	53                   	push   %ebx
830035a6:	ff 75 08             	push   0x8(%ebp)
830035a9:	e8 ab 0e 00 00       	call   83004459 <_fflush_r>
830035ae:	83 c4 10             	add    $0x10,%esp
830035b1:	85 c0                	test   %eax,%eax
830035b3:	74 0a                	je     830035bf <__srefill_r+0xcd>
830035b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830035ba:	e9 2d 01 00 00       	jmp    830036ec <__srefill_r+0x1fa>
830035bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830035c3:	83 e0 f7             	and    $0xfffffff7,%eax
830035c6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830035ca:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
830035d1:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
830035d8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830035dc:	83 c8 04             	or     $0x4,%eax
830035df:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830035e3:	eb 46                	jmp    8300362b <__srefill_r+0x139>
830035e5:	8b 43 30             	mov    0x30(%ebx),%eax
830035e8:	85 c0                	test   %eax,%eax
830035ea:	74 3f                	je     8300362b <__srefill_r+0x139>
830035ec:	8b 53 30             	mov    0x30(%ebx),%edx
830035ef:	8d 43 40             	lea    0x40(%ebx),%eax
830035f2:	39 c2                	cmp    %eax,%edx
830035f4:	74 12                	je     83003608 <__srefill_r+0x116>
830035f6:	8b 43 30             	mov    0x30(%ebx),%eax
830035f9:	83 ec 08             	sub    $0x8,%esp
830035fc:	50                   	push   %eax
830035fd:	ff 75 08             	push   0x8(%ebp)
83003600:	e8 f3 11 00 00       	call   830047f8 <_free_r>
83003605:	83 c4 10             	add    $0x10,%esp
83003608:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8300360f:	8b 43 3c             	mov    0x3c(%ebx),%eax
83003612:	89 43 04             	mov    %eax,0x4(%ebx)
83003615:	8b 43 04             	mov    0x4(%ebx),%eax
83003618:	85 c0                	test   %eax,%eax
8300361a:	74 0f                	je     8300362b <__srefill_r+0x139>
8300361c:	8b 43 38             	mov    0x38(%ebx),%eax
8300361f:	89 03                	mov    %eax,(%ebx)
83003621:	b8 00 00 00 00       	mov    $0x0,%eax
83003626:	e9 c1 00 00 00       	jmp    830036ec <__srefill_r+0x1fa>
8300362b:	8b 43 10             	mov    0x10(%ebx),%eax
8300362e:	85 c0                	test   %eax,%eax
83003630:	75 0f                	jne    83003641 <__srefill_r+0x14f>
83003632:	83 ec 08             	sub    $0x8,%esp
83003635:	53                   	push   %ebx
83003636:	ff 75 08             	push   0x8(%ebp)
83003639:	e8 ca 1d 00 00       	call   83005408 <__smakebuf_r>
8300363e:	83 c4 10             	add    $0x10,%esp
83003641:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003645:	98                   	cwtl   
83003646:	83 e0 03             	and    $0x3,%eax
83003649:	85 c0                	test   %eax,%eax
8300364b:	74 48                	je     83003695 <__srefill_r+0x1a3>
8300364d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003651:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
83003655:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8300365b:	a1 48 66 00 83       	mov    0x83006648,%eax
83003660:	83 ec 08             	sub    $0x8,%esp
83003663:	68 c5 34 00 83       	push   $0x830034c5
83003668:	50                   	push   %eax
83003669:	e8 b1 d5 ff ff       	call   83000c1f <_fwalk>
8300366e:	83 c4 10             	add    $0x10,%esp
83003671:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
83003675:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003679:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300367d:	98                   	cwtl   
8300367e:	83 e0 09             	and    $0x9,%eax
83003681:	83 f8 09             	cmp    $0x9,%eax
83003684:	75 0f                	jne    83003695 <__srefill_r+0x1a3>
83003686:	83 ec 08             	sub    $0x8,%esp
83003689:	53                   	push   %ebx
8300368a:	ff 75 08             	push   0x8(%ebp)
8300368d:	e8 a1 0b 00 00       	call   83004233 <__sflush_r>
83003692:	83 c4 10             	add    $0x10,%esp
83003695:	8b 43 10             	mov    0x10(%ebx),%eax
83003698:	89 03                	mov    %eax,(%ebx)
8300369a:	8b 43 20             	mov    0x20(%ebx),%eax
8300369d:	8b 73 14             	mov    0x14(%ebx),%esi
830036a0:	8b 0b                	mov    (%ebx),%ecx
830036a2:	8b 53 1c             	mov    0x1c(%ebx),%edx
830036a5:	56                   	push   %esi
830036a6:	51                   	push   %ecx
830036a7:	52                   	push   %edx
830036a8:	ff 75 08             	push   0x8(%ebp)
830036ab:	ff d0                	call   *%eax
830036ad:	83 c4 10             	add    $0x10,%esp
830036b0:	89 43 04             	mov    %eax,0x4(%ebx)
830036b3:	8b 43 04             	mov    0x4(%ebx),%eax
830036b6:	85 c0                	test   %eax,%eax
830036b8:	7f 2d                	jg     830036e7 <__srefill_r+0x1f5>
830036ba:	8b 43 04             	mov    0x4(%ebx),%eax
830036bd:	85 c0                	test   %eax,%eax
830036bf:	75 0d                	jne    830036ce <__srefill_r+0x1dc>
830036c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830036c5:	83 c8 20             	or     $0x20,%eax
830036c8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830036cc:	eb 12                	jmp    830036e0 <__srefill_r+0x1ee>
830036ce:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
830036d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830036d9:	83 c8 40             	or     $0x40,%eax
830036dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830036e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830036e5:	eb 05                	jmp    830036ec <__srefill_r+0x1fa>
830036e7:	b8 00 00 00 00       	mov    $0x0,%eax
830036ec:	8d 65 f8             	lea    -0x8(%ebp),%esp
830036ef:	5b                   	pop    %ebx
830036f0:	5e                   	pop    %esi
830036f1:	5d                   	pop    %ebp
830036f2:	c3                   	ret    

830036f3 <_sbrk_r>:
830036f3:	55                   	push   %ebp
830036f4:	89 e5                	mov    %esp,%ebp
830036f6:	83 ec 18             	sub    $0x18,%esp
830036f9:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
83003700:	00 00 00 
83003703:	83 ec 0c             	sub    $0xc,%esp
83003706:	ff 75 0c             	push   0xc(%ebp)
83003709:	e8 73 cb ff ff       	call   83000281 <sbrk>
8300370e:	83 c4 10             	add    $0x10,%esp
83003711:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003714:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83003718:	75 14                	jne    8300372e <_sbrk_r+0x3b>
8300371a:	a1 34 74 00 83       	mov    0x83007434,%eax
8300371f:	85 c0                	test   %eax,%eax
83003721:	74 0b                	je     8300372e <_sbrk_r+0x3b>
83003723:	8b 15 34 74 00 83    	mov    0x83007434,%edx
83003729:	8b 45 08             	mov    0x8(%ebp),%eax
8300372c:	89 10                	mov    %edx,(%eax)
8300372e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83003731:	c9                   	leave  
83003732:	c3                   	ret    

83003733 <__sread>:
83003733:	55                   	push   %ebp
83003734:	89 e5                	mov    %esp,%ebp
83003736:	56                   	push   %esi
83003737:	53                   	push   %ebx
83003738:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8300373b:	8b 55 14             	mov    0x14(%ebp),%edx
8300373e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
83003742:	98                   	cwtl   
83003743:	52                   	push   %edx
83003744:	ff 75 10             	push   0x10(%ebp)
83003747:	50                   	push   %eax
83003748:	ff 75 08             	push   0x8(%ebp)
8300374b:	e8 61 20 00 00       	call   830057b1 <_read_r>
83003750:	83 c4 10             	add    $0x10,%esp
83003753:	89 c6                	mov    %eax,%esi
83003755:	85 f6                	test   %esi,%esi
83003757:	78 0a                	js     83003763 <__sread+0x30>
83003759:	8b 43 50             	mov    0x50(%ebx),%eax
8300375c:	01 f0                	add    %esi,%eax
8300375e:	89 43 50             	mov    %eax,0x50(%ebx)
83003761:	eb 0b                	jmp    8300376e <__sread+0x3b>
83003763:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003767:	80 e4 ef             	and    $0xef,%ah
8300376a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300376e:	89 f0                	mov    %esi,%eax
83003770:	8d 65 f8             	lea    -0x8(%ebp),%esp
83003773:	5b                   	pop    %ebx
83003774:	5e                   	pop    %esi
83003775:	5d                   	pop    %ebp
83003776:	c3                   	ret    

83003777 <__seofread>:
83003777:	55                   	push   %ebp
83003778:	89 e5                	mov    %esp,%ebp
8300377a:	b8 00 00 00 00       	mov    $0x0,%eax
8300377f:	5d                   	pop    %ebp
83003780:	c3                   	ret    

83003781 <__swrite>:
83003781:	55                   	push   %ebp
83003782:	89 e5                	mov    %esp,%ebp
83003784:	53                   	push   %ebx
83003785:	83 ec 14             	sub    $0x14,%esp
83003788:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8300378b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300378f:	98                   	cwtl   
83003790:	25 00 01 00 00       	and    $0x100,%eax
83003795:	85 c0                	test   %eax,%eax
83003797:	74 15                	je     830037ae <__swrite+0x2d>
83003799:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8300379d:	98                   	cwtl   
8300379e:	6a 02                	push   $0x2
830037a0:	6a 00                	push   $0x0
830037a2:	50                   	push   %eax
830037a3:	ff 75 08             	push   0x8(%ebp)
830037a6:	e8 17 1c 00 00       	call   830053c2 <_lseek_r>
830037ab:	83 c4 10             	add    $0x10,%esp
830037ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830037b2:	80 e4 ef             	and    $0xef,%ah
830037b5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830037b9:	8b 55 14             	mov    0x14(%ebp),%edx
830037bc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
830037c0:	98                   	cwtl   
830037c1:	52                   	push   %edx
830037c2:	ff 75 10             	push   0x10(%ebp)
830037c5:	50                   	push   %eax
830037c6:	ff 75 08             	push   0x8(%ebp)
830037c9:	e8 41 06 00 00       	call   83003e0f <_write_r>
830037ce:	83 c4 10             	add    $0x10,%esp
830037d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
830037d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
830037d7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
830037da:	c9                   	leave  
830037db:	c3                   	ret    

830037dc <__sseek>:
830037dc:	55                   	push   %ebp
830037dd:	89 e5                	mov    %esp,%ebp
830037df:	56                   	push   %esi
830037e0:	53                   	push   %ebx
830037e1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
830037e4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
830037e8:	98                   	cwtl   
830037e9:	ff 75 14             	push   0x14(%ebp)
830037ec:	ff 75 10             	push   0x10(%ebp)
830037ef:	50                   	push   %eax
830037f0:	ff 75 08             	push   0x8(%ebp)
830037f3:	e8 ca 1b 00 00       	call   830053c2 <_lseek_r>
830037f8:	83 c4 10             	add    $0x10,%esp
830037fb:	89 c6                	mov    %eax,%esi
830037fd:	83 fe ff             	cmp    $0xffffffff,%esi
83003800:	75 0d                	jne    8300380f <__sseek+0x33>
83003802:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003806:	80 e4 ef             	and    $0xef,%ah
83003809:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300380d:	eb 0e                	jmp    8300381d <__sseek+0x41>
8300380f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003813:	80 cc 10             	or     $0x10,%ah
83003816:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300381a:	89 73 50             	mov    %esi,0x50(%ebx)
8300381d:	89 f0                	mov    %esi,%eax
8300381f:	8d 65 f8             	lea    -0x8(%ebp),%esp
83003822:	5b                   	pop    %ebx
83003823:	5e                   	pop    %esi
83003824:	5d                   	pop    %ebp
83003825:	c3                   	ret    

83003826 <__sclose>:
83003826:	55                   	push   %ebp
83003827:	89 e5                	mov    %esp,%ebp
83003829:	83 ec 18             	sub    $0x18,%esp
8300382c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300382f:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003832:	8b 45 f4             	mov    -0xc(%ebp),%eax
83003835:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
83003839:	98                   	cwtl   
8300383a:	83 ec 08             	sub    $0x8,%esp
8300383d:	50                   	push   %eax
8300383e:	ff 75 08             	push   0x8(%ebp)
83003841:	e8 7f 08 00 00       	call   830040c5 <_close_r>
83003846:	83 c4 10             	add    $0x10,%esp
83003849:	c9                   	leave  
8300384a:	c3                   	ret    
8300384b:	66 90                	xchg   %ax,%ax
8300384d:	66 90                	xchg   %ax,%ax
8300384f:	90                   	nop

83003850 <strchr>:
83003850:	55                   	push   %ebp
83003851:	89 e5                	mov    %esp,%ebp
83003853:	57                   	push   %edi
83003854:	53                   	push   %ebx
83003855:	31 db                	xor    %ebx,%ebx
83003857:	8b 7d 08             	mov    0x8(%ebp),%edi
8300385a:	02 5d 0c             	add    0xc(%ebp),%bl
8300385d:	0f 84 98 00 00 00    	je     830038fb <L25>
83003863:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003869:	74 37                	je     830038a2 <L5>
8300386b:	89 f8                	mov    %edi,%eax
8300386d:	8a 08                	mov    (%eax),%cl
8300386f:	84 c9                	test   %cl,%cl
83003871:	74 7b                	je     830038ee <L14>
83003873:	38 d9                	cmp    %bl,%cl
83003875:	74 7d                	je     830038f4 <L19>
83003877:	47                   	inc    %edi
83003878:	f7 c7 03 00 00 00    	test   $0x3,%edi
8300387e:	74 22                	je     830038a2 <L5>
83003880:	89 f8                	mov    %edi,%eax
83003882:	8a 08                	mov    (%eax),%cl
83003884:	84 c9                	test   %cl,%cl
83003886:	74 66                	je     830038ee <L14>
83003888:	38 d9                	cmp    %bl,%cl
8300388a:	74 68                	je     830038f4 <L19>
8300388c:	47                   	inc    %edi
8300388d:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003893:	74 0d                	je     830038a2 <L5>
83003895:	89 f8                	mov    %edi,%eax
83003897:	8a 08                	mov    (%eax),%cl
83003899:	84 c9                	test   %cl,%cl
8300389b:	74 51                	je     830038ee <L14>
8300389d:	38 d9                	cmp    %bl,%cl
8300389f:	74 53                	je     830038f4 <L19>
830038a1:	47                   	inc    %edi

830038a2 <L5>:
830038a2:	89 d9                	mov    %ebx,%ecx
830038a4:	c1 e3 08             	shl    $0x8,%ebx
830038a7:	83 ef 04             	sub    $0x4,%edi
830038aa:	09 cb                	or     %ecx,%ebx
830038ac:	89 da                	mov    %ebx,%edx
830038ae:	c1 e3 10             	shl    $0x10,%ebx
830038b1:	09 d3                	or     %edx,%ebx

830038b3 <L10>:
830038b3:	83 c7 04             	add    $0x4,%edi
830038b6:	8b 0f                	mov    (%edi),%ecx
830038b8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
830038be:	89 c8                	mov    %ecx,%eax
830038c0:	f7 d0                	not    %eax
830038c2:	21 c2                	and    %eax,%edx
830038c4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
830038ca:	75 14                	jne    830038e0 <L9>
830038cc:	31 d9                	xor    %ebx,%ecx
830038ce:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
830038d4:	f7 d1                	not    %ecx
830038d6:	21 ca                	and    %ecx,%edx
830038d8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
830038de:	74 d3                	je     830038b3 <L10>

830038e0 <L9>:
830038e0:	8d 47 ff             	lea    -0x1(%edi),%eax

830038e3 <L15>:
830038e3:	40                   	inc    %eax
830038e4:	8a 10                	mov    (%eax),%dl
830038e6:	84 d2                	test   %dl,%dl
830038e8:	74 04                	je     830038ee <L14>
830038ea:	38 da                	cmp    %bl,%dl
830038ec:	75 f5                	jne    830038e3 <L15>

830038ee <L14>:
830038ee:	38 18                	cmp    %bl,(%eax)
830038f0:	74 02                	je     830038f4 <L19>
830038f2:	31 c0                	xor    %eax,%eax

830038f4 <L19>:
830038f4:	8d 65 f8             	lea    -0x8(%ebp),%esp
830038f7:	5b                   	pop    %ebx
830038f8:	5f                   	pop    %edi
830038f9:	c9                   	leave  
830038fa:	c3                   	ret    

830038fb <L25>:
830038fb:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003901:	74 2b                	je     8300392e <L26>
83003903:	89 f8                	mov    %edi,%eax
83003905:	8a 08                	mov    (%eax),%cl
83003907:	84 c9                	test   %cl,%cl
83003909:	74 e9                	je     830038f4 <L19>
8300390b:	47                   	inc    %edi
8300390c:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003912:	74 1a                	je     8300392e <L26>
83003914:	89 f8                	mov    %edi,%eax
83003916:	8a 08                	mov    (%eax),%cl
83003918:	84 c9                	test   %cl,%cl
8300391a:	74 d8                	je     830038f4 <L19>
8300391c:	47                   	inc    %edi
8300391d:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003923:	74 09                	je     8300392e <L26>
83003925:	89 f8                	mov    %edi,%eax
83003927:	8a 08                	mov    (%eax),%cl
83003929:	84 c9                	test   %cl,%cl
8300392b:	74 c7                	je     830038f4 <L19>
8300392d:	47                   	inc    %edi

8300392e <L26>:
8300392e:	83 ef 04             	sub    $0x4,%edi

83003931 <L27>:
83003931:	83 c7 04             	add    $0x4,%edi
83003934:	8b 0f                	mov    (%edi),%ecx
83003936:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8300393c:	89 c8                	mov    %ecx,%eax
8300393e:	f7 d0                	not    %eax
83003940:	21 c2                	and    %eax,%edx
83003942:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
83003948:	74 e7                	je     83003931 <L27>
8300394a:	eb 94                	jmp    830038e0 <L9>

8300394c <strcmp>:
8300394c:	55                   	push   %ebp
8300394d:	89 e5                	mov    %esp,%ebp
8300394f:	83 ec 10             	sub    $0x10,%esp
83003952:	8b 55 08             	mov    0x8(%ebp),%edx
83003955:	8b 45 0c             	mov    0xc(%ebp),%eax
83003958:	09 d0                	or     %edx,%eax
8300395a:	83 e0 03             	and    $0x3,%eax
8300395d:	85 c0                	test   %eax,%eax
8300395f:	75 5e                	jne    830039bf <strcmp+0x73>
83003961:	8b 45 08             	mov    0x8(%ebp),%eax
83003964:	89 45 fc             	mov    %eax,-0x4(%ebp)
83003967:	8b 45 0c             	mov    0xc(%ebp),%eax
8300396a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8300396d:	eb 2c                	jmp    8300399b <strcmp+0x4f>
8300396f:	8b 45 fc             	mov    -0x4(%ebp),%eax
83003972:	8b 00                	mov    (%eax),%eax
83003974:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8300397a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8300397d:	8b 00                	mov    (%eax),%eax
8300397f:	f7 d0                	not    %eax
83003981:	21 d0                	and    %edx,%eax
83003983:	25 80 80 80 80       	and    $0x80808080,%eax
83003988:	85 c0                	test   %eax,%eax
8300398a:	74 07                	je     83003993 <strcmp+0x47>
8300398c:	b8 00 00 00 00       	mov    $0x0,%eax
83003991:	eb 5c                	jmp    830039ef <strcmp+0xa3>
83003993:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
83003997:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8300399b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8300399e:	8b 10                	mov    (%eax),%edx
830039a0:	8b 45 f8             	mov    -0x8(%ebp),%eax
830039a3:	8b 00                	mov    (%eax),%eax
830039a5:	39 c2                	cmp    %eax,%edx
830039a7:	74 c6                	je     8300396f <strcmp+0x23>
830039a9:	8b 45 fc             	mov    -0x4(%ebp),%eax
830039ac:	89 45 08             	mov    %eax,0x8(%ebp)
830039af:	8b 45 f8             	mov    -0x8(%ebp),%eax
830039b2:	89 45 0c             	mov    %eax,0xc(%ebp)
830039b5:	eb 08                	jmp    830039bf <strcmp+0x73>
830039b7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
830039bb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
830039bf:	8b 45 08             	mov    0x8(%ebp),%eax
830039c2:	0f b6 00             	movzbl (%eax),%eax
830039c5:	84 c0                	test   %al,%al
830039c7:	74 10                	je     830039d9 <strcmp+0x8d>
830039c9:	8b 45 08             	mov    0x8(%ebp),%eax
830039cc:	0f b6 10             	movzbl (%eax),%edx
830039cf:	8b 45 0c             	mov    0xc(%ebp),%eax
830039d2:	0f b6 00             	movzbl (%eax),%eax
830039d5:	38 c2                	cmp    %al,%dl
830039d7:	74 de                	je     830039b7 <strcmp+0x6b>
830039d9:	8b 45 08             	mov    0x8(%ebp),%eax
830039dc:	0f b6 00             	movzbl (%eax),%eax
830039df:	0f b6 d0             	movzbl %al,%edx
830039e2:	8b 45 0c             	mov    0xc(%ebp),%eax
830039e5:	0f b6 00             	movzbl (%eax),%eax
830039e8:	0f b6 c8             	movzbl %al,%ecx
830039eb:	89 d0                	mov    %edx,%eax
830039ed:	29 c8                	sub    %ecx,%eax
830039ef:	c9                   	leave  
830039f0:	c3                   	ret    
830039f1:	66 90                	xchg   %ax,%ax
830039f3:	66 90                	xchg   %ax,%ax
830039f5:	66 90                	xchg   %ax,%ax
830039f7:	66 90                	xchg   %ax,%ax
830039f9:	66 90                	xchg   %ax,%ax
830039fb:	66 90                	xchg   %ax,%ax
830039fd:	66 90                	xchg   %ax,%ax
830039ff:	90                   	nop

83003a00 <strlen>:
83003a00:	55                   	push   %ebp
83003a01:	89 e5                	mov    %esp,%ebp
83003a03:	57                   	push   %edi
83003a04:	8b 55 08             	mov    0x8(%ebp),%edx
83003a07:	89 d7                	mov    %edx,%edi
83003a09:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003a0f:	74 25                	je     83003a36 <L5>
83003a11:	8a 0f                	mov    (%edi),%cl
83003a13:	47                   	inc    %edi
83003a14:	84 c9                	test   %cl,%cl
83003a16:	74 56                	je     83003a6e <L15>
83003a18:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003a1e:	74 16                	je     83003a36 <L5>
83003a20:	8a 0f                	mov    (%edi),%cl
83003a22:	47                   	inc    %edi
83003a23:	84 c9                	test   %cl,%cl
83003a25:	74 47                	je     83003a6e <L15>
83003a27:	f7 c7 03 00 00 00    	test   $0x3,%edi
83003a2d:	74 07                	je     83003a36 <L5>
83003a2f:	8a 0f                	mov    (%edi),%cl
83003a31:	47                   	inc    %edi
83003a32:	84 c9                	test   %cl,%cl
83003a34:	74 38                	je     83003a6e <L15>

83003a36 <L5>:
83003a36:	83 ef 04             	sub    $0x4,%edi
83003a39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

83003a40 <L10>:
83003a40:	83 c7 04             	add    $0x4,%edi
83003a43:	8b 0f                	mov    (%edi),%ecx
83003a45:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
83003a4b:	f7 d1                	not    %ecx
83003a4d:	21 c8                	and    %ecx,%eax
83003a4f:	a9 80 80 80 80       	test   $0x80808080,%eax
83003a54:	74 ea                	je     83003a40 <L10>
83003a56:	f7 d1                	not    %ecx
83003a58:	47                   	inc    %edi
83003a59:	84 c9                	test   %cl,%cl
83003a5b:	74 11                	je     83003a6e <L15>
83003a5d:	47                   	inc    %edi
83003a5e:	c1 e9 08             	shr    $0x8,%ecx
83003a61:	84 c9                	test   %cl,%cl
83003a63:	74 09                	je     83003a6e <L15>
83003a65:	47                   	inc    %edi
83003a66:	c1 e9 08             	shr    $0x8,%ecx
83003a69:	84 c9                	test   %cl,%cl
83003a6b:	74 01                	je     83003a6e <L15>
83003a6d:	47                   	inc    %edi

83003a6e <L15>:
83003a6e:	29 d7                	sub    %edx,%edi
83003a70:	8d 47 ff             	lea    -0x1(%edi),%eax
83003a73:	8d 65 fc             	lea    -0x4(%ebp),%esp
83003a76:	5f                   	pop    %edi
83003a77:	c9                   	leave  
83003a78:	c3                   	ret    

83003a79 <__locale_ctype_ptr_l>:
83003a79:	55                   	push   %ebp
83003a7a:	89 e5                	mov    %esp,%ebp
83003a7c:	b8 a0 68 00 83       	mov    $0x830068a0,%eax
83003a81:	5d                   	pop    %ebp
83003a82:	c3                   	ret    

83003a83 <__get_global_locale>:
83003a83:	55                   	push   %ebp
83003a84:	89 e5                	mov    %esp,%ebp
83003a86:	b8 40 72 00 83       	mov    $0x83007240,%eax
83003a8b:	5d                   	pop    %ebp
83003a8c:	c3                   	ret    

83003a8d <__get_current_locale>:
83003a8d:	55                   	push   %ebp
83003a8e:	89 e5                	mov    %esp,%ebp
83003a90:	e8 ee ff ff ff       	call   83003a83 <__get_global_locale>
83003a95:	5d                   	pop    %ebp
83003a96:	c3                   	ret    

83003a97 <_strtol_l>:
83003a97:	55                   	push   %ebp
83003a98:	89 e5                	mov    %esp,%ebp
83003a9a:	57                   	push   %edi
83003a9b:	56                   	push   %esi
83003a9c:	53                   	push   %ebx
83003a9d:	83 ec 1c             	sub    $0x1c,%esp
83003aa0:	8b 75 0c             	mov    0xc(%ebp),%esi
83003aa3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83003aaa:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
83003aae:	78 0c                	js     83003abc <_strtol_l+0x25>
83003ab0:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
83003ab4:	74 06                	je     83003abc <_strtol_l+0x25>
83003ab6:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
83003aba:	7e 15                	jle    83003ad1 <_strtol_l+0x3a>
83003abc:	e8 44 06 00 00       	call   83004105 <__errno>
83003ac1:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
83003ac7:	b8 00 00 00 00       	mov    $0x0,%eax
83003acc:	e9 90 01 00 00       	jmp    83003c61 <_strtol_l+0x1ca>
83003ad1:	89 f0                	mov    %esi,%eax
83003ad3:	8d 70 01             	lea    0x1(%eax),%esi
83003ad6:	0f b6 00             	movzbl (%eax),%eax
83003ad9:	0f b6 d8             	movzbl %al,%ebx
83003adc:	83 ec 0c             	sub    $0xc,%esp
83003adf:	ff 75 18             	push   0x18(%ebp)
83003ae2:	e8 92 ff ff ff       	call   83003a79 <__locale_ctype_ptr_l>
83003ae7:	83 c4 10             	add    $0x10,%esp
83003aea:	89 da                	mov    %ebx,%edx
83003aec:	83 c2 01             	add    $0x1,%edx
83003aef:	01 d0                	add    %edx,%eax
83003af1:	0f b6 00             	movzbl (%eax),%eax
83003af4:	0f be c0             	movsbl %al,%eax
83003af7:	83 e0 08             	and    $0x8,%eax
83003afa:	85 c0                	test   %eax,%eax
83003afc:	75 d3                	jne    83003ad1 <_strtol_l+0x3a>
83003afe:	83 fb 2d             	cmp    $0x2d,%ebx
83003b01:	75 14                	jne    83003b17 <_strtol_l+0x80>
83003b03:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
83003b0a:	89 f0                	mov    %esi,%eax
83003b0c:	8d 70 01             	lea    0x1(%eax),%esi
83003b0f:	0f b6 00             	movzbl (%eax),%eax
83003b12:	0f b6 d8             	movzbl %al,%ebx
83003b15:	eb 10                	jmp    83003b27 <_strtol_l+0x90>
83003b17:	83 fb 2b             	cmp    $0x2b,%ebx
83003b1a:	75 0b                	jne    83003b27 <_strtol_l+0x90>
83003b1c:	89 f0                	mov    %esi,%eax
83003b1e:	8d 70 01             	lea    0x1(%eax),%esi
83003b21:	0f b6 00             	movzbl (%eax),%eax
83003b24:	0f b6 d8             	movzbl %al,%ebx
83003b27:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
83003b2b:	74 06                	je     83003b33 <_strtol_l+0x9c>
83003b2d:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
83003b31:	75 26                	jne    83003b59 <_strtol_l+0xc2>
83003b33:	83 fb 30             	cmp    $0x30,%ebx
83003b36:	75 21                	jne    83003b59 <_strtol_l+0xc2>
83003b38:	0f b6 06             	movzbl (%esi),%eax
83003b3b:	3c 78                	cmp    $0x78,%al
83003b3d:	74 07                	je     83003b46 <_strtol_l+0xaf>
83003b3f:	0f b6 06             	movzbl (%esi),%eax
83003b42:	3c 58                	cmp    $0x58,%al
83003b44:	75 13                	jne    83003b59 <_strtol_l+0xc2>
83003b46:	8d 46 01             	lea    0x1(%esi),%eax
83003b49:	0f b6 00             	movzbl (%eax),%eax
83003b4c:	0f b6 d8             	movzbl %al,%ebx
83003b4f:	83 c6 02             	add    $0x2,%esi
83003b52:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
83003b59:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
83003b5d:	75 14                	jne    83003b73 <_strtol_l+0xdc>
83003b5f:	83 fb 30             	cmp    $0x30,%ebx
83003b62:	75 07                	jne    83003b6b <_strtol_l+0xd4>
83003b64:	b8 08 00 00 00       	mov    $0x8,%eax
83003b69:	eb 05                	jmp    83003b70 <_strtol_l+0xd9>
83003b6b:	b8 0a 00 00 00       	mov    $0xa,%eax
83003b70:	89 45 14             	mov    %eax,0x14(%ebp)
83003b73:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83003b77:	74 07                	je     83003b80 <_strtol_l+0xe9>
83003b79:	b8 00 00 00 80       	mov    $0x80000000,%eax
83003b7e:	eb 05                	jmp    83003b85 <_strtol_l+0xee>
83003b80:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
83003b85:	89 c7                	mov    %eax,%edi
83003b87:	8b 4d 14             	mov    0x14(%ebp),%ecx
83003b8a:	89 f8                	mov    %edi,%eax
83003b8c:	ba 00 00 00 00       	mov    $0x0,%edx
83003b91:	f7 f1                	div    %ecx
83003b93:	89 d0                	mov    %edx,%eax
83003b95:	89 45 e0             	mov    %eax,-0x20(%ebp)
83003b98:	8b 4d 14             	mov    0x14(%ebp),%ecx
83003b9b:	89 f8                	mov    %edi,%eax
83003b9d:	ba 00 00 00 00       	mov    $0x0,%edx
83003ba2:	f7 f1                	div    %ecx
83003ba4:	89 c2                	mov    %eax,%edx
83003ba6:	bf 00 00 00 00       	mov    $0x0,%edi
83003bab:	b9 00 00 00 00       	mov    $0x0,%ecx
83003bb0:	83 fb 2f             	cmp    $0x2f,%ebx
83003bb3:	7e 0a                	jle    83003bbf <_strtol_l+0x128>
83003bb5:	83 fb 39             	cmp    $0x39,%ebx
83003bb8:	7f 05                	jg     83003bbf <_strtol_l+0x128>
83003bba:	83 eb 30             	sub    $0x30,%ebx
83003bbd:	eb 1c                	jmp    83003bdb <_strtol_l+0x144>
83003bbf:	83 fb 40             	cmp    $0x40,%ebx
83003bc2:	7e 0a                	jle    83003bce <_strtol_l+0x137>
83003bc4:	83 fb 5a             	cmp    $0x5a,%ebx
83003bc7:	7f 05                	jg     83003bce <_strtol_l+0x137>
83003bc9:	83 eb 37             	sub    $0x37,%ebx
83003bcc:	eb 0d                	jmp    83003bdb <_strtol_l+0x144>
83003bce:	83 fb 60             	cmp    $0x60,%ebx
83003bd1:	7e 46                	jle    83003c19 <_strtol_l+0x182>
83003bd3:	83 fb 7a             	cmp    $0x7a,%ebx
83003bd6:	7f 41                	jg     83003c19 <_strtol_l+0x182>
83003bd8:	83 eb 57             	sub    $0x57,%ebx
83003bdb:	3b 5d 14             	cmp    0x14(%ebp),%ebx
83003bde:	7d 38                	jge    83003c18 <_strtol_l+0x181>
83003be0:	89 c8                	mov    %ecx,%eax
83003be2:	85 c0                	test   %eax,%eax
83003be4:	78 0f                	js     83003bf5 <_strtol_l+0x15e>
83003be6:	89 d0                	mov    %edx,%eax
83003be8:	39 c7                	cmp    %eax,%edi
83003bea:	77 09                	ja     83003bf5 <_strtol_l+0x15e>
83003bec:	39 c7                	cmp    %eax,%edi
83003bee:	75 0c                	jne    83003bfc <_strtol_l+0x165>
83003bf0:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
83003bf3:	7e 07                	jle    83003bfc <_strtol_l+0x165>
83003bf5:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
83003bfa:	eb 0f                	jmp    83003c0b <_strtol_l+0x174>
83003bfc:	b9 01 00 00 00       	mov    $0x1,%ecx
83003c01:	8b 45 14             	mov    0x14(%ebp),%eax
83003c04:	0f af f8             	imul   %eax,%edi
83003c07:	89 d8                	mov    %ebx,%eax
83003c09:	01 c7                	add    %eax,%edi
83003c0b:	89 f0                	mov    %esi,%eax
83003c0d:	8d 70 01             	lea    0x1(%eax),%esi
83003c10:	0f b6 00             	movzbl (%eax),%eax
83003c13:	0f b6 d8             	movzbl %al,%ebx
83003c16:	eb 98                	jmp    83003bb0 <_strtol_l+0x119>
83003c18:	90                   	nop
83003c19:	89 c8                	mov    %ecx,%eax
83003c1b:	85 c0                	test   %eax,%eax
83003c1d:	79 1f                	jns    83003c3e <_strtol_l+0x1a7>
83003c1f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83003c23:	74 07                	je     83003c2c <_strtol_l+0x195>
83003c25:	b8 00 00 00 80       	mov    $0x80000000,%eax
83003c2a:	eb 05                	jmp    83003c31 <_strtol_l+0x19a>
83003c2c:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
83003c31:	89 c7                	mov    %eax,%edi
83003c33:	8b 45 08             	mov    0x8(%ebp),%eax
83003c36:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
83003c3c:	eb 08                	jmp    83003c46 <_strtol_l+0x1af>
83003c3e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83003c42:	74 02                	je     83003c46 <_strtol_l+0x1af>
83003c44:	f7 df                	neg    %edi
83003c46:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
83003c4a:	74 13                	je     83003c5f <_strtol_l+0x1c8>
83003c4c:	89 c8                	mov    %ecx,%eax
83003c4e:	85 c0                	test   %eax,%eax
83003c50:	74 05                	je     83003c57 <_strtol_l+0x1c0>
83003c52:	8d 46 ff             	lea    -0x1(%esi),%eax
83003c55:	eb 03                	jmp    83003c5a <_strtol_l+0x1c3>
83003c57:	8b 45 0c             	mov    0xc(%ebp),%eax
83003c5a:	8b 55 10             	mov    0x10(%ebp),%edx
83003c5d:	89 02                	mov    %eax,(%edx)
83003c5f:	89 f8                	mov    %edi,%eax
83003c61:	8d 65 f4             	lea    -0xc(%ebp),%esp
83003c64:	5b                   	pop    %ebx
83003c65:	5e                   	pop    %esi
83003c66:	5f                   	pop    %edi
83003c67:	5d                   	pop    %ebp
83003c68:	c3                   	ret    

83003c69 <_strtol_r>:
83003c69:	55                   	push   %ebp
83003c6a:	89 e5                	mov    %esp,%ebp
83003c6c:	83 ec 08             	sub    $0x8,%esp
83003c6f:	e8 19 fe ff ff       	call   83003a8d <__get_current_locale>
83003c74:	83 ec 0c             	sub    $0xc,%esp
83003c77:	50                   	push   %eax
83003c78:	ff 75 14             	push   0x14(%ebp)
83003c7b:	ff 75 10             	push   0x10(%ebp)
83003c7e:	ff 75 0c             	push   0xc(%ebp)
83003c81:	ff 75 08             	push   0x8(%ebp)
83003c84:	e8 0e fe ff ff       	call   83003a97 <_strtol_l>
83003c89:	83 c4 20             	add    $0x20,%esp
83003c8c:	c9                   	leave  
83003c8d:	c3                   	ret    

83003c8e <strtol_l>:
83003c8e:	55                   	push   %ebp
83003c8f:	89 e5                	mov    %esp,%ebp
83003c91:	83 ec 08             	sub    $0x8,%esp
83003c94:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83003c99:	83 ec 0c             	sub    $0xc,%esp
83003c9c:	ff 75 14             	push   0x14(%ebp)
83003c9f:	ff 75 10             	push   0x10(%ebp)
83003ca2:	ff 75 0c             	push   0xc(%ebp)
83003ca5:	ff 75 08             	push   0x8(%ebp)
83003ca8:	50                   	push   %eax
83003ca9:	e8 e9 fd ff ff       	call   83003a97 <_strtol_l>
83003cae:	83 c4 20             	add    $0x20,%esp
83003cb1:	c9                   	leave  
83003cb2:	c3                   	ret    

83003cb3 <strtol>:
83003cb3:	55                   	push   %ebp
83003cb4:	89 e5                	mov    %esp,%ebp
83003cb6:	83 ec 08             	sub    $0x8,%esp
83003cb9:	e8 cf fd ff ff       	call   83003a8d <__get_current_locale>
83003cbe:	8b 15 04 6e 00 83    	mov    0x83006e04,%edx
83003cc4:	83 ec 0c             	sub    $0xc,%esp
83003cc7:	50                   	push   %eax
83003cc8:	ff 75 10             	push   0x10(%ebp)
83003ccb:	ff 75 0c             	push   0xc(%ebp)
83003cce:	ff 75 08             	push   0x8(%ebp)
83003cd1:	52                   	push   %edx
83003cd2:	e8 c0 fd ff ff       	call   83003a97 <_strtol_l>
83003cd7:	83 c4 20             	add    $0x20,%esp
83003cda:	c9                   	leave  
83003cdb:	c3                   	ret    

83003cdc <__swbuf_r>:
83003cdc:	55                   	push   %ebp
83003cdd:	89 e5                	mov    %esp,%ebp
83003cdf:	57                   	push   %edi
83003ce0:	56                   	push   %esi
83003ce1:	53                   	push   %ebx
83003ce2:	83 ec 1c             	sub    $0x1c,%esp
83003ce5:	8b 7d 0c             	mov    0xc(%ebp),%edi
83003ce8:	8b 5d 10             	mov    0x10(%ebp),%ebx
83003ceb:	8b 45 08             	mov    0x8(%ebp),%eax
83003cee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83003cf1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83003cf5:	74 18                	je     83003d0f <__swbuf_r+0x33>
83003cf7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83003cfa:	8b 40 38             	mov    0x38(%eax),%eax
83003cfd:	85 c0                	test   %eax,%eax
83003cff:	75 0e                	jne    83003d0f <__swbuf_r+0x33>
83003d01:	83 ec 0c             	sub    $0xc,%esp
83003d04:	ff 75 e4             	push   -0x1c(%ebp)
83003d07:	e8 b1 cd ff ff       	call   83000abd <__sinit>
83003d0c:	83 c4 10             	add    $0x10,%esp
83003d0f:	8b 43 18             	mov    0x18(%ebx),%eax
83003d12:	89 43 08             	mov    %eax,0x8(%ebx)
83003d15:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003d19:	98                   	cwtl   
83003d1a:	83 e0 08             	and    $0x8,%eax
83003d1d:	85 c0                	test   %eax,%eax
83003d1f:	74 07                	je     83003d28 <__swbuf_r+0x4c>
83003d21:	8b 43 10             	mov    0x10(%ebx),%eax
83003d24:	85 c0                	test   %eax,%eax
83003d26:	75 1d                	jne    83003d45 <__swbuf_r+0x69>
83003d28:	83 ec 08             	sub    $0x8,%esp
83003d2b:	53                   	push   %ebx
83003d2c:	ff 75 08             	push   0x8(%ebp)
83003d2f:	e8 21 01 00 00       	call   83003e55 <__swsetup_r>
83003d34:	83 c4 10             	add    $0x10,%esp
83003d37:	85 c0                	test   %eax,%eax
83003d39:	74 0a                	je     83003d45 <__swbuf_r+0x69>
83003d3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003d40:	e9 a1 00 00 00       	jmp    83003de6 <__swbuf_r+0x10a>
83003d45:	89 f8                	mov    %edi,%eax
83003d47:	0f b6 f8             	movzbl %al,%edi
83003d4a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003d4e:	98                   	cwtl   
83003d4f:	25 00 20 00 00       	and    $0x2000,%eax
83003d54:	85 c0                	test   %eax,%eax
83003d56:	75 14                	jne    83003d6c <__swbuf_r+0x90>
83003d58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003d5c:	80 cc 20             	or     $0x20,%ah
83003d5f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003d63:	8b 43 64             	mov    0x64(%ebx),%eax
83003d66:	80 e4 df             	and    $0xdf,%ah
83003d69:	89 43 64             	mov    %eax,0x64(%ebx)
83003d6c:	8b 03                	mov    (%ebx),%eax
83003d6e:	8b 53 10             	mov    0x10(%ebx),%edx
83003d71:	29 d0                	sub    %edx,%eax
83003d73:	89 c6                	mov    %eax,%esi
83003d75:	8b 43 14             	mov    0x14(%ebx),%eax
83003d78:	39 c6                	cmp    %eax,%esi
83003d7a:	7c 1f                	jl     83003d9b <__swbuf_r+0xbf>
83003d7c:	83 ec 08             	sub    $0x8,%esp
83003d7f:	53                   	push   %ebx
83003d80:	ff 75 08             	push   0x8(%ebp)
83003d83:	e8 d1 06 00 00       	call   83004459 <_fflush_r>
83003d88:	83 c4 10             	add    $0x10,%esp
83003d8b:	85 c0                	test   %eax,%eax
83003d8d:	74 07                	je     83003d96 <__swbuf_r+0xba>
83003d8f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003d94:	eb 50                	jmp    83003de6 <__swbuf_r+0x10a>
83003d96:	be 00 00 00 00       	mov    $0x0,%esi
83003d9b:	8b 43 08             	mov    0x8(%ebx),%eax
83003d9e:	83 e8 01             	sub    $0x1,%eax
83003da1:	89 43 08             	mov    %eax,0x8(%ebx)
83003da4:	8b 03                	mov    (%ebx),%eax
83003da6:	8d 50 01             	lea    0x1(%eax),%edx
83003da9:	89 13                	mov    %edx,(%ebx)
83003dab:	89 fa                	mov    %edi,%edx
83003dad:	88 10                	mov    %dl,(%eax)
83003daf:	83 c6 01             	add    $0x1,%esi
83003db2:	8b 43 14             	mov    0x14(%ebx),%eax
83003db5:	39 c6                	cmp    %eax,%esi
83003db7:	74 11                	je     83003dca <__swbuf_r+0xee>
83003db9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003dbd:	98                   	cwtl   
83003dbe:	83 e0 01             	and    $0x1,%eax
83003dc1:	85 c0                	test   %eax,%eax
83003dc3:	74 1f                	je     83003de4 <__swbuf_r+0x108>
83003dc5:	83 ff 0a             	cmp    $0xa,%edi
83003dc8:	75 1a                	jne    83003de4 <__swbuf_r+0x108>
83003dca:	83 ec 08             	sub    $0x8,%esp
83003dcd:	53                   	push   %ebx
83003dce:	ff 75 08             	push   0x8(%ebp)
83003dd1:	e8 83 06 00 00       	call   83004459 <_fflush_r>
83003dd6:	83 c4 10             	add    $0x10,%esp
83003dd9:	85 c0                	test   %eax,%eax
83003ddb:	74 07                	je     83003de4 <__swbuf_r+0x108>
83003ddd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003de2:	eb 02                	jmp    83003de6 <__swbuf_r+0x10a>
83003de4:	89 f8                	mov    %edi,%eax
83003de6:	8d 65 f4             	lea    -0xc(%ebp),%esp
83003de9:	5b                   	pop    %ebx
83003dea:	5e                   	pop    %esi
83003deb:	5f                   	pop    %edi
83003dec:	5d                   	pop    %ebp
83003ded:	c3                   	ret    

83003dee <__swbuf>:
83003dee:	55                   	push   %ebp
83003def:	89 e5                	mov    %esp,%ebp
83003df1:	83 ec 08             	sub    $0x8,%esp
83003df4:	8b 55 08             	mov    0x8(%ebp),%edx
83003df7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
83003dfa:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83003dff:	83 ec 04             	sub    $0x4,%esp
83003e02:	51                   	push   %ecx
83003e03:	52                   	push   %edx
83003e04:	50                   	push   %eax
83003e05:	e8 d2 fe ff ff       	call   83003cdc <__swbuf_r>
83003e0a:	83 c4 10             	add    $0x10,%esp
83003e0d:	c9                   	leave  
83003e0e:	c3                   	ret    

83003e0f <_write_r>:
83003e0f:	55                   	push   %ebp
83003e10:	89 e5                	mov    %esp,%ebp
83003e12:	83 ec 18             	sub    $0x18,%esp
83003e15:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
83003e1c:	00 00 00 
83003e1f:	83 ec 04             	sub    $0x4,%esp
83003e22:	ff 75 14             	push   0x14(%ebp)
83003e25:	ff 75 10             	push   0x10(%ebp)
83003e28:	ff 75 0c             	push   0xc(%ebp)
83003e2b:	e8 8e c3 ff ff       	call   830001be <write>
83003e30:	83 c4 10             	add    $0x10,%esp
83003e33:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003e36:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83003e3a:	75 14                	jne    83003e50 <_write_r+0x41>
83003e3c:	a1 34 74 00 83       	mov    0x83007434,%eax
83003e41:	85 c0                	test   %eax,%eax
83003e43:	74 0b                	je     83003e50 <_write_r+0x41>
83003e45:	8b 15 34 74 00 83    	mov    0x83007434,%edx
83003e4b:	8b 45 08             	mov    0x8(%ebp),%eax
83003e4e:	89 10                	mov    %edx,(%eax)
83003e50:	8b 45 f4             	mov    -0xc(%ebp),%eax
83003e53:	c9                   	leave  
83003e54:	c3                   	ret    

83003e55 <__swsetup_r>:
83003e55:	55                   	push   %ebp
83003e56:	89 e5                	mov    %esp,%ebp
83003e58:	53                   	push   %ebx
83003e59:	83 ec 14             	sub    $0x14,%esp
83003e5c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83003e5f:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83003e64:	89 45 f4             	mov    %eax,-0xc(%ebp)
83003e67:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83003e6b:	74 18                	je     83003e85 <__swsetup_r+0x30>
83003e6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83003e70:	8b 40 38             	mov    0x38(%eax),%eax
83003e73:	85 c0                	test   %eax,%eax
83003e75:	75 0e                	jne    83003e85 <__swsetup_r+0x30>
83003e77:	83 ec 0c             	sub    $0xc,%esp
83003e7a:	ff 75 f4             	push   -0xc(%ebp)
83003e7d:	e8 3b cc ff ff       	call   83000abd <__sinit>
83003e82:	83 c4 10             	add    $0x10,%esp
83003e85:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003e89:	98                   	cwtl   
83003e8a:	83 e0 08             	and    $0x8,%eax
83003e8d:	85 c0                	test   %eax,%eax
83003e8f:	0f 85 82 00 00 00    	jne    83003f17 <__swsetup_r+0xc2>
83003e95:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003e99:	98                   	cwtl   
83003e9a:	83 e0 10             	and    $0x10,%eax
83003e9d:	85 c0                	test   %eax,%eax
83003e9f:	75 1e                	jne    83003ebf <__swsetup_r+0x6a>
83003ea1:	8b 45 08             	mov    0x8(%ebp),%eax
83003ea4:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
83003eaa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003eae:	83 c8 40             	or     $0x40,%eax
83003eb1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003eb5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003eba:	e9 ec 00 00 00       	jmp    83003fab <__swsetup_r+0x156>
83003ebf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003ec3:	98                   	cwtl   
83003ec4:	83 e0 04             	and    $0x4,%eax
83003ec7:	85 c0                	test   %eax,%eax
83003ec9:	74 41                	je     83003f0c <__swsetup_r+0xb7>
83003ecb:	8b 43 30             	mov    0x30(%ebx),%eax
83003ece:	85 c0                	test   %eax,%eax
83003ed0:	74 23                	je     83003ef5 <__swsetup_r+0xa0>
83003ed2:	8b 53 30             	mov    0x30(%ebx),%edx
83003ed5:	8d 43 40             	lea    0x40(%ebx),%eax
83003ed8:	39 c2                	cmp    %eax,%edx
83003eda:	74 12                	je     83003eee <__swsetup_r+0x99>
83003edc:	8b 43 30             	mov    0x30(%ebx),%eax
83003edf:	83 ec 08             	sub    $0x8,%esp
83003ee2:	50                   	push   %eax
83003ee3:	ff 75 08             	push   0x8(%ebp)
83003ee6:	e8 0d 09 00 00       	call   830047f8 <_free_r>
83003eeb:	83 c4 10             	add    $0x10,%esp
83003eee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
83003ef5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003ef9:	83 e0 db             	and    $0xffffffdb,%eax
83003efc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003f00:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
83003f07:	8b 43 10             	mov    0x10(%ebx),%eax
83003f0a:	89 03                	mov    %eax,(%ebx)
83003f0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f10:	83 c8 08             	or     $0x8,%eax
83003f13:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003f17:	8b 43 10             	mov    0x10(%ebx),%eax
83003f1a:	85 c0                	test   %eax,%eax
83003f1c:	75 2b                	jne    83003f49 <__swsetup_r+0xf4>
83003f1e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f22:	98                   	cwtl   
83003f23:	25 00 02 00 00       	and    $0x200,%eax
83003f28:	85 c0                	test   %eax,%eax
83003f2a:	74 0e                	je     83003f3a <__swsetup_r+0xe5>
83003f2c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f30:	98                   	cwtl   
83003f31:	25 80 00 00 00       	and    $0x80,%eax
83003f36:	85 c0                	test   %eax,%eax
83003f38:	74 0f                	je     83003f49 <__swsetup_r+0xf4>
83003f3a:	83 ec 08             	sub    $0x8,%esp
83003f3d:	53                   	push   %ebx
83003f3e:	ff 75 08             	push   0x8(%ebp)
83003f41:	e8 c2 14 00 00       	call   83005408 <__smakebuf_r>
83003f46:	83 c4 10             	add    $0x10,%esp
83003f49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f4d:	98                   	cwtl   
83003f4e:	83 e0 01             	and    $0x1,%eax
83003f51:	85 c0                	test   %eax,%eax
83003f53:	74 11                	je     83003f66 <__swsetup_r+0x111>
83003f55:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
83003f5c:	8b 43 14             	mov    0x14(%ebx),%eax
83003f5f:	f7 d8                	neg    %eax
83003f61:	89 43 18             	mov    %eax,0x18(%ebx)
83003f64:	eb 19                	jmp    83003f7f <__swsetup_r+0x12a>
83003f66:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f6a:	98                   	cwtl   
83003f6b:	83 e0 02             	and    $0x2,%eax
83003f6e:	85 c0                	test   %eax,%eax
83003f70:	75 05                	jne    83003f77 <__swsetup_r+0x122>
83003f72:	8b 43 14             	mov    0x14(%ebx),%eax
83003f75:	eb 05                	jmp    83003f7c <__swsetup_r+0x127>
83003f77:	b8 00 00 00 00       	mov    $0x0,%eax
83003f7c:	89 43 08             	mov    %eax,0x8(%ebx)
83003f7f:	8b 43 10             	mov    0x10(%ebx),%eax
83003f82:	85 c0                	test   %eax,%eax
83003f84:	75 20                	jne    83003fa6 <__swsetup_r+0x151>
83003f86:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f8a:	98                   	cwtl   
83003f8b:	25 80 00 00 00       	and    $0x80,%eax
83003f90:	85 c0                	test   %eax,%eax
83003f92:	74 12                	je     83003fa6 <__swsetup_r+0x151>
83003f94:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83003f98:	83 c8 40             	or     $0x40,%eax
83003f9b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83003f9f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83003fa4:	eb 05                	jmp    83003fab <__swsetup_r+0x156>
83003fa6:	b8 00 00 00 00       	mov    $0x0,%eax
83003fab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83003fae:	c9                   	leave  
83003faf:	c3                   	ret    

83003fb0 <__call_exitprocs>:
83003fb0:	55                   	push   %ebp
83003fb1:	89 e5                	mov    %esp,%ebp
83003fb3:	57                   	push   %edi
83003fb4:	56                   	push   %esi
83003fb5:	53                   	push   %ebx
83003fb6:	83 ec 1c             	sub    $0x1c,%esp
83003fb9:	a1 48 66 00 83       	mov    0x83006648,%eax
83003fbe:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
83003fc4:	a1 48 66 00 83       	mov    0x83006648,%eax
83003fc9:	05 48 01 00 00       	add    $0x148,%eax
83003fce:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83003fd1:	90                   	nop
83003fd2:	85 db                	test   %ebx,%ebx
83003fd4:	0f 84 e1 00 00 00    	je     830040bb <__call_exitprocs+0x10b>
83003fda:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
83003fe0:	8b 43 04             	mov    0x4(%ebx),%eax
83003fe3:	8d 70 ff             	lea    -0x1(%eax),%esi
83003fe6:	e9 c6 00 00 00       	jmp    830040b1 <__call_exitprocs+0x101>
83003feb:	b8 01 00 00 00       	mov    $0x1,%eax
83003ff0:	89 f1                	mov    %esi,%ecx
83003ff2:	d3 e0                	shl    %cl,%eax
83003ff4:	89 45 e0             	mov    %eax,-0x20(%ebp)
83003ff7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83003ffb:	74 17                	je     83004014 <__call_exitprocs+0x64>
83003ffd:	85 ff                	test   %edi,%edi
83003fff:	0f 84 a5 00 00 00    	je     830040aa <__call_exitprocs+0xfa>
83004005:	8d 46 20             	lea    0x20(%esi),%eax
83004008:	8b 04 87             	mov    (%edi,%eax,4),%eax
8300400b:	39 45 0c             	cmp    %eax,0xc(%ebp)
8300400e:	0f 85 96 00 00 00    	jne    830040aa <__call_exitprocs+0xfa>
83004014:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
83004018:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300401b:	8b 43 04             	mov    0x4(%ebx),%eax
8300401e:	83 e8 01             	sub    $0x1,%eax
83004021:	39 c6                	cmp    %eax,%esi
83004023:	75 0b                	jne    83004030 <__call_exitprocs+0x80>
83004025:	8b 43 04             	mov    0x4(%ebx),%eax
83004028:	83 e8 01             	sub    $0x1,%eax
8300402b:	89 43 04             	mov    %eax,0x4(%ebx)
8300402e:	eb 08                	jmp    83004038 <__call_exitprocs+0x88>
83004030:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
83004037:	00 
83004038:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8300403c:	74 6f                	je     830040ad <__call_exitprocs+0xfd>
8300403e:	8b 43 04             	mov    0x4(%ebx),%eax
83004041:	89 45 d8             	mov    %eax,-0x28(%ebp)
83004044:	85 ff                	test   %edi,%edi
83004046:	74 0f                	je     83004057 <__call_exitprocs+0xa7>
83004048:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
8300404e:	8b 45 e0             	mov    -0x20(%ebp),%eax
83004051:	21 d0                	and    %edx,%eax
83004053:	85 c0                	test   %eax,%eax
83004055:	75 07                	jne    8300405e <__call_exitprocs+0xae>
83004057:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300405a:	ff d0                	call   *%eax
8300405c:	eb 32                	jmp    83004090 <__call_exitprocs+0xe0>
8300405e:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
83004064:	8b 45 e0             	mov    -0x20(%ebp),%eax
83004067:	21 d0                	and    %edx,%eax
83004069:	85 c0                	test   %eax,%eax
8300406b:	75 14                	jne    83004081 <__call_exitprocs+0xd1>
8300406d:	8b 04 b7             	mov    (%edi,%esi,4),%eax
83004070:	83 ec 08             	sub    $0x8,%esp
83004073:	50                   	push   %eax
83004074:	ff 75 08             	push   0x8(%ebp)
83004077:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300407a:	ff d0                	call   *%eax
8300407c:	83 c4 10             	add    $0x10,%esp
8300407f:	eb 0f                	jmp    83004090 <__call_exitprocs+0xe0>
83004081:	8b 04 b7             	mov    (%edi,%esi,4),%eax
83004084:	83 ec 0c             	sub    $0xc,%esp
83004087:	50                   	push   %eax
83004088:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300408b:	ff d0                	call   *%eax
8300408d:	83 c4 10             	add    $0x10,%esp
83004090:	8b 43 04             	mov    0x4(%ebx),%eax
83004093:	39 45 d8             	cmp    %eax,-0x28(%ebp)
83004096:	0f 85 1d ff ff ff    	jne    83003fb9 <__call_exitprocs+0x9>
8300409c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300409f:	8b 00                	mov    (%eax),%eax
830040a1:	39 c3                	cmp    %eax,%ebx
830040a3:	74 09                	je     830040ae <__call_exitprocs+0xfe>
830040a5:	e9 0f ff ff ff       	jmp    83003fb9 <__call_exitprocs+0x9>
830040aa:	90                   	nop
830040ab:	eb 01                	jmp    830040ae <__call_exitprocs+0xfe>
830040ad:	90                   	nop
830040ae:	83 ee 01             	sub    $0x1,%esi
830040b1:	85 f6                	test   %esi,%esi
830040b3:	0f 89 32 ff ff ff    	jns    83003feb <__call_exitprocs+0x3b>
830040b9:	eb 01                	jmp    830040bc <__call_exitprocs+0x10c>
830040bb:	90                   	nop
830040bc:	90                   	nop
830040bd:	8d 65 f4             	lea    -0xc(%ebp),%esp
830040c0:	5b                   	pop    %ebx
830040c1:	5e                   	pop    %esi
830040c2:	5f                   	pop    %edi
830040c3:	5d                   	pop    %ebp
830040c4:	c3                   	ret    

830040c5 <_close_r>:
830040c5:	55                   	push   %ebp
830040c6:	89 e5                	mov    %esp,%ebp
830040c8:	83 ec 18             	sub    $0x18,%esp
830040cb:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
830040d2:	00 00 00 
830040d5:	83 ec 0c             	sub    $0xc,%esp
830040d8:	ff 75 0c             	push   0xc(%ebp)
830040db:	e8 0b c1 ff ff       	call   830001eb <close>
830040e0:	83 c4 10             	add    $0x10,%esp
830040e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
830040e6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
830040ea:	75 14                	jne    83004100 <_close_r+0x3b>
830040ec:	a1 34 74 00 83       	mov    0x83007434,%eax
830040f1:	85 c0                	test   %eax,%eax
830040f3:	74 0b                	je     83004100 <_close_r+0x3b>
830040f5:	8b 15 34 74 00 83    	mov    0x83007434,%edx
830040fb:	8b 45 08             	mov    0x8(%ebp),%eax
830040fe:	89 10                	mov    %edx,(%eax)
83004100:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004103:	c9                   	leave  
83004104:	c3                   	ret    

83004105 <__errno>:
83004105:	55                   	push   %ebp
83004106:	89 e5                	mov    %esp,%ebp
83004108:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300410d:	5d                   	pop    %ebp
8300410e:	c3                   	ret    

8300410f <_fclose_r>:
8300410f:	55                   	push   %ebp
83004110:	89 e5                	mov    %esp,%ebp
83004112:	53                   	push   %ebx
83004113:	83 ec 14             	sub    $0x14,%esp
83004116:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83004119:	85 db                	test   %ebx,%ebx
8300411b:	75 0a                	jne    83004127 <_fclose_r+0x18>
8300411d:	b8 00 00 00 00       	mov    $0x0,%eax
83004122:	e9 ea 00 00 00       	jmp    83004211 <_fclose_r+0x102>
83004127:	8b 45 08             	mov    0x8(%ebp),%eax
8300412a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8300412d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83004131:	74 18                	je     8300414b <_fclose_r+0x3c>
83004133:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004136:	8b 40 38             	mov    0x38(%eax),%eax
83004139:	85 c0                	test   %eax,%eax
8300413b:	75 0e                	jne    8300414b <_fclose_r+0x3c>
8300413d:	83 ec 0c             	sub    $0xc,%esp
83004140:	ff 75 f0             	push   -0x10(%ebp)
83004143:	e8 75 c9 ff ff       	call   83000abd <__sinit>
83004148:	83 c4 10             	add    $0x10,%esp
8300414b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300414f:	66 85 c0             	test   %ax,%ax
83004152:	75 0a                	jne    8300415e <_fclose_r+0x4f>
83004154:	b8 00 00 00 00       	mov    $0x0,%eax
83004159:	e9 b3 00 00 00       	jmp    83004211 <_fclose_r+0x102>
8300415e:	83 ec 08             	sub    $0x8,%esp
83004161:	53                   	push   %ebx
83004162:	ff 75 08             	push   0x8(%ebp)
83004165:	e8 c9 00 00 00       	call   83004233 <__sflush_r>
8300416a:	83 c4 10             	add    $0x10,%esp
8300416d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83004170:	8b 43 2c             	mov    0x2c(%ebx),%eax
83004173:	85 c0                	test   %eax,%eax
83004175:	74 1d                	je     83004194 <_fclose_r+0x85>
83004177:	8b 43 2c             	mov    0x2c(%ebx),%eax
8300417a:	8b 53 1c             	mov    0x1c(%ebx),%edx
8300417d:	83 ec 08             	sub    $0x8,%esp
83004180:	52                   	push   %edx
83004181:	ff 75 08             	push   0x8(%ebp)
83004184:	ff d0                	call   *%eax
83004186:	83 c4 10             	add    $0x10,%esp
83004189:	85 c0                	test   %eax,%eax
8300418b:	79 07                	jns    83004194 <_fclose_r+0x85>
8300418d:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
83004194:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004198:	98                   	cwtl   
83004199:	25 80 00 00 00       	and    $0x80,%eax
8300419e:	85 c0                	test   %eax,%eax
830041a0:	74 12                	je     830041b4 <_fclose_r+0xa5>
830041a2:	8b 43 10             	mov    0x10(%ebx),%eax
830041a5:	83 ec 08             	sub    $0x8,%esp
830041a8:	50                   	push   %eax
830041a9:	ff 75 08             	push   0x8(%ebp)
830041ac:	e8 47 06 00 00       	call   830047f8 <_free_r>
830041b1:	83 c4 10             	add    $0x10,%esp
830041b4:	8b 43 30             	mov    0x30(%ebx),%eax
830041b7:	85 c0                	test   %eax,%eax
830041b9:	74 23                	je     830041de <_fclose_r+0xcf>
830041bb:	8b 53 30             	mov    0x30(%ebx),%edx
830041be:	8d 43 40             	lea    0x40(%ebx),%eax
830041c1:	39 c2                	cmp    %eax,%edx
830041c3:	74 12                	je     830041d7 <_fclose_r+0xc8>
830041c5:	8b 43 30             	mov    0x30(%ebx),%eax
830041c8:	83 ec 08             	sub    $0x8,%esp
830041cb:	50                   	push   %eax
830041cc:	ff 75 08             	push   0x8(%ebp)
830041cf:	e8 24 06 00 00       	call   830047f8 <_free_r>
830041d4:	83 c4 10             	add    $0x10,%esp
830041d7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
830041de:	8b 43 44             	mov    0x44(%ebx),%eax
830041e1:	85 c0                	test   %eax,%eax
830041e3:	74 19                	je     830041fe <_fclose_r+0xef>
830041e5:	8b 43 44             	mov    0x44(%ebx),%eax
830041e8:	83 ec 08             	sub    $0x8,%esp
830041eb:	50                   	push   %eax
830041ec:	ff 75 08             	push   0x8(%ebp)
830041ef:	e8 04 06 00 00       	call   830047f8 <_free_r>
830041f4:	83 c4 10             	add    $0x10,%esp
830041f7:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
830041fe:	e8 53 c9 ff ff       	call   83000b56 <__sfp_lock_acquire>
83004203:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
83004209:	e8 4e c9 ff ff       	call   83000b5c <__sfp_lock_release>
8300420e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004211:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83004214:	c9                   	leave  
83004215:	c3                   	ret    

83004216 <fclose>:
83004216:	55                   	push   %ebp
83004217:	89 e5                	mov    %esp,%ebp
83004219:	83 ec 08             	sub    $0x8,%esp
8300421c:	8b 55 08             	mov    0x8(%ebp),%edx
8300421f:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83004224:	83 ec 08             	sub    $0x8,%esp
83004227:	52                   	push   %edx
83004228:	50                   	push   %eax
83004229:	e8 e1 fe ff ff       	call   8300410f <_fclose_r>
8300422e:	83 c4 10             	add    $0x10,%esp
83004231:	c9                   	leave  
83004232:	c3                   	ret    

83004233 <__sflush_r>:
83004233:	55                   	push   %ebp
83004234:	89 e5                	mov    %esp,%ebp
83004236:	57                   	push   %edi
83004237:	56                   	push   %esi
83004238:	53                   	push   %ebx
83004239:	83 ec 1c             	sub    $0x1c,%esp
8300423c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8300423f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004243:	66 89 45 de          	mov    %ax,-0x22(%ebp)
83004247:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8300424b:	83 e0 08             	and    $0x8,%eax
8300424e:	85 c0                	test   %eax,%eax
83004250:	0f 85 93 01 00 00    	jne    830043e9 <__sflush_r+0x1b6>
83004256:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300425a:	80 cc 08             	or     $0x8,%ah
8300425d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83004261:	8b 43 04             	mov    0x4(%ebx),%eax
83004264:	85 c0                	test   %eax,%eax
83004266:	7f 0b                	jg     83004273 <__sflush_r+0x40>
83004268:	8b 43 3c             	mov    0x3c(%ebx),%eax
8300426b:	85 c0                	test   %eax,%eax
8300426d:	0f 8e 6f 01 00 00    	jle    830043e2 <__sflush_r+0x1af>
83004273:	8b 43 28             	mov    0x28(%ebx),%eax
83004276:	85 c0                	test   %eax,%eax
83004278:	0f 84 64 01 00 00    	je     830043e2 <__sflush_r+0x1af>
8300427e:	8b 45 08             	mov    0x8(%ebp),%eax
83004281:	8b 00                	mov    (%eax),%eax
83004283:	89 45 d8             	mov    %eax,-0x28(%ebp)
83004286:	8b 45 08             	mov    0x8(%ebp),%eax
83004289:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8300428f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004293:	98                   	cwtl   
83004294:	25 00 10 00 00       	and    $0x1000,%eax
83004299:	85 c0                	test   %eax,%eax
8300429b:	74 08                	je     830042a5 <__sflush_r+0x72>
8300429d:	8b 43 50             	mov    0x50(%ebx),%eax
830042a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830042a3:	eb 64                	jmp    83004309 <__sflush_r+0xd6>
830042a5:	8b 43 28             	mov    0x28(%ebx),%eax
830042a8:	8b 53 1c             	mov    0x1c(%ebx),%edx
830042ab:	6a 01                	push   $0x1
830042ad:	6a 00                	push   $0x0
830042af:	52                   	push   %edx
830042b0:	ff 75 08             	push   0x8(%ebp)
830042b3:	ff d0                	call   *%eax
830042b5:	83 c4 10             	add    $0x10,%esp
830042b8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830042bb:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
830042bf:	75 48                	jne    83004309 <__sflush_r+0xd6>
830042c1:	8b 45 08             	mov    0x8(%ebp),%eax
830042c4:	8b 00                	mov    (%eax),%eax
830042c6:	85 c0                	test   %eax,%eax
830042c8:	74 3f                	je     83004309 <__sflush_r+0xd6>
830042ca:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
830042d1:	8b 45 08             	mov    0x8(%ebp),%eax
830042d4:	8b 00                	mov    (%eax),%eax
830042d6:	83 f8 1d             	cmp    $0x1d,%eax
830042d9:	74 0a                	je     830042e5 <__sflush_r+0xb2>
830042db:	8b 45 08             	mov    0x8(%ebp),%eax
830042de:	8b 00                	mov    (%eax),%eax
830042e0:	83 f8 16             	cmp    $0x16,%eax
830042e3:	75 11                	jne    830042f6 <__sflush_r+0xc3>
830042e5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
830042ec:	8b 45 08             	mov    0x8(%ebp),%eax
830042ef:	8b 55 d8             	mov    -0x28(%ebp),%edx
830042f2:	89 10                	mov    %edx,(%eax)
830042f4:	eb 0b                	jmp    83004301 <__sflush_r+0xce>
830042f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830042fa:	83 c8 40             	or     $0x40,%eax
830042fd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83004301:	8b 45 e0             	mov    -0x20(%ebp),%eax
83004304:	e9 48 01 00 00       	jmp    83004451 <__sflush_r+0x21e>
83004309:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300430d:	98                   	cwtl   
8300430e:	83 e0 04             	and    $0x4,%eax
83004311:	85 c0                	test   %eax,%eax
83004313:	74 13                	je     83004328 <__sflush_r+0xf5>
83004315:	8b 43 04             	mov    0x4(%ebx),%eax
83004318:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8300431b:	8b 43 30             	mov    0x30(%ebx),%eax
8300431e:	85 c0                	test   %eax,%eax
83004320:	74 06                	je     83004328 <__sflush_r+0xf5>
83004322:	8b 43 3c             	mov    0x3c(%ebx),%eax
83004325:	29 45 e4             	sub    %eax,-0x1c(%ebp)
83004328:	8b 43 28             	mov    0x28(%ebx),%eax
8300432b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8300432e:	6a 00                	push   $0x0
83004330:	ff 75 e4             	push   -0x1c(%ebp)
83004333:	52                   	push   %edx
83004334:	ff 75 08             	push   0x8(%ebp)
83004337:	ff d0                	call   *%eax
83004339:	83 c4 10             	add    $0x10,%esp
8300433c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8300433f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
83004343:	75 1d                	jne    83004362 <__sflush_r+0x12f>
83004345:	8b 45 08             	mov    0x8(%ebp),%eax
83004348:	8b 00                	mov    (%eax),%eax
8300434a:	85 c0                	test   %eax,%eax
8300434c:	74 14                	je     83004362 <__sflush_r+0x12f>
8300434e:	8b 45 08             	mov    0x8(%ebp),%eax
83004351:	8b 00                	mov    (%eax),%eax
83004353:	83 f8 1d             	cmp    $0x1d,%eax
83004356:	74 0a                	je     83004362 <__sflush_r+0x12f>
83004358:	8b 45 08             	mov    0x8(%ebp),%eax
8300435b:	8b 00                	mov    (%eax),%eax
8300435d:	83 f8 16             	cmp    $0x16,%eax
83004360:	75 6e                	jne    830043d0 <__sflush_r+0x19d>
83004362:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004366:	80 e4 f7             	and    $0xf7,%ah
83004369:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8300436d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
83004374:	8b 43 10             	mov    0x10(%ebx),%eax
83004377:	89 03                	mov    %eax,(%ebx)
83004379:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300437d:	98                   	cwtl   
8300437e:	25 00 10 00 00       	and    $0x1000,%eax
83004383:	85 c0                	test   %eax,%eax
83004385:	74 15                	je     8300439c <__sflush_r+0x169>
83004387:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8300438b:	75 09                	jne    83004396 <__sflush_r+0x163>
8300438d:	8b 45 08             	mov    0x8(%ebp),%eax
83004390:	8b 00                	mov    (%eax),%eax
83004392:	85 c0                	test   %eax,%eax
83004394:	75 06                	jne    8300439c <__sflush_r+0x169>
83004396:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83004399:	89 43 50             	mov    %eax,0x50(%ebx)
8300439c:	8b 45 08             	mov    0x8(%ebp),%eax
8300439f:	8b 55 d8             	mov    -0x28(%ebp),%edx
830043a2:	89 10                	mov    %edx,(%eax)
830043a4:	8b 43 30             	mov    0x30(%ebx),%eax
830043a7:	85 c0                	test   %eax,%eax
830043a9:	74 37                	je     830043e2 <__sflush_r+0x1af>
830043ab:	8b 53 30             	mov    0x30(%ebx),%edx
830043ae:	8d 43 40             	lea    0x40(%ebx),%eax
830043b1:	39 c2                	cmp    %eax,%edx
830043b3:	74 12                	je     830043c7 <__sflush_r+0x194>
830043b5:	8b 43 30             	mov    0x30(%ebx),%eax
830043b8:	83 ec 08             	sub    $0x8,%esp
830043bb:	50                   	push   %eax
830043bc:	ff 75 08             	push   0x8(%ebp)
830043bf:	e8 34 04 00 00       	call   830047f8 <_free_r>
830043c4:	83 c4 10             	add    $0x10,%esp
830043c7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
830043ce:	eb 12                	jmp    830043e2 <__sflush_r+0x1af>
830043d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830043d4:	83 c8 40             	or     $0x40,%eax
830043d7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830043db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830043e0:	eb 6f                	jmp    83004451 <__sflush_r+0x21e>
830043e2:	b8 00 00 00 00       	mov    $0x0,%eax
830043e7:	eb 68                	jmp    83004451 <__sflush_r+0x21e>
830043e9:	8b 73 10             	mov    0x10(%ebx),%esi
830043ec:	85 f6                	test   %esi,%esi
830043ee:	75 07                	jne    830043f7 <__sflush_r+0x1c4>
830043f0:	b8 00 00 00 00       	mov    $0x0,%eax
830043f5:	eb 5a                	jmp    83004451 <__sflush_r+0x21e>
830043f7:	8b 03                	mov    (%ebx),%eax
830043f9:	29 f0                	sub    %esi,%eax
830043fb:	89 c7                	mov    %eax,%edi
830043fd:	89 33                	mov    %esi,(%ebx)
830043ff:	0f bf 45 de          	movswl -0x22(%ebp),%eax
83004403:	83 e0 03             	and    $0x3,%eax
83004406:	85 c0                	test   %eax,%eax
83004408:	75 05                	jne    8300440f <__sflush_r+0x1dc>
8300440a:	8b 43 14             	mov    0x14(%ebx),%eax
8300440d:	eb 05                	jmp    83004414 <__sflush_r+0x1e1>
8300440f:	b8 00 00 00 00       	mov    $0x0,%eax
83004414:	89 43 08             	mov    %eax,0x8(%ebx)
83004417:	eb 2f                	jmp    83004448 <__sflush_r+0x215>
83004419:	8b 43 24             	mov    0x24(%ebx),%eax
8300441c:	8b 53 1c             	mov    0x1c(%ebx),%edx
8300441f:	57                   	push   %edi
83004420:	56                   	push   %esi
83004421:	52                   	push   %edx
83004422:	ff 75 08             	push   0x8(%ebp)
83004425:	ff d0                	call   *%eax
83004427:	83 c4 10             	add    $0x10,%esp
8300442a:	85 c0                	test   %eax,%eax
8300442c:	7f 12                	jg     83004440 <__sflush_r+0x20d>
8300442e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004432:	83 c8 40             	or     $0x40,%eax
83004435:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83004439:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300443e:	eb 11                	jmp    83004451 <__sflush_r+0x21e>
83004440:	89 c1                	mov    %eax,%ecx
83004442:	89 c8                	mov    %ecx,%eax
83004444:	01 c6                	add    %eax,%esi
83004446:	29 cf                	sub    %ecx,%edi
83004448:	85 ff                	test   %edi,%edi
8300444a:	7f cd                	jg     83004419 <__sflush_r+0x1e6>
8300444c:	b8 00 00 00 00       	mov    $0x0,%eax
83004451:	8d 65 f4             	lea    -0xc(%ebp),%esp
83004454:	5b                   	pop    %ebx
83004455:	5e                   	pop    %esi
83004456:	5f                   	pop    %edi
83004457:	5d                   	pop    %ebp
83004458:	c3                   	ret    

83004459 <_fflush_r>:
83004459:	55                   	push   %ebp
8300445a:	89 e5                	mov    %esp,%ebp
8300445c:	53                   	push   %ebx
8300445d:	83 ec 14             	sub    $0x14,%esp
83004460:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83004463:	8b 45 08             	mov    0x8(%ebp),%eax
83004466:	89 45 f4             	mov    %eax,-0xc(%ebp)
83004469:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8300446d:	74 18                	je     83004487 <_fflush_r+0x2e>
8300446f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004472:	8b 40 38             	mov    0x38(%eax),%eax
83004475:	85 c0                	test   %eax,%eax
83004477:	75 0e                	jne    83004487 <_fflush_r+0x2e>
83004479:	83 ec 0c             	sub    $0xc,%esp
8300447c:	ff 75 f4             	push   -0xc(%ebp)
8300447f:	e8 39 c6 ff ff       	call   83000abd <__sinit>
83004484:	83 c4 10             	add    $0x10,%esp
83004487:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8300448b:	66 85 c0             	test   %ax,%ax
8300448e:	75 07                	jne    83004497 <_fflush_r+0x3e>
83004490:	b8 00 00 00 00       	mov    $0x0,%eax
83004495:	eb 15                	jmp    830044ac <_fflush_r+0x53>
83004497:	83 ec 08             	sub    $0x8,%esp
8300449a:	53                   	push   %ebx
8300449b:	ff 75 08             	push   0x8(%ebp)
8300449e:	e8 90 fd ff ff       	call   83004233 <__sflush_r>
830044a3:	83 c4 10             	add    $0x10,%esp
830044a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
830044a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
830044ac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
830044af:	c9                   	leave  
830044b0:	c3                   	ret    

830044b1 <fflush>:
830044b1:	55                   	push   %ebp
830044b2:	89 e5                	mov    %esp,%ebp
830044b4:	83 ec 08             	sub    $0x8,%esp
830044b7:	8b 55 08             	mov    0x8(%ebp),%edx
830044ba:	85 d2                	test   %edx,%edx
830044bc:	75 18                	jne    830044d6 <fflush+0x25>
830044be:	a1 48 66 00 83       	mov    0x83006648,%eax
830044c3:	83 ec 08             	sub    $0x8,%esp
830044c6:	68 59 44 00 83       	push   $0x83004459
830044cb:	50                   	push   %eax
830044cc:	e8 b6 c7 ff ff       	call   83000c87 <_fwalk_reent>
830044d1:	83 c4 10             	add    $0x10,%esp
830044d4:	eb 12                	jmp    830044e8 <fflush+0x37>
830044d6:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830044db:	83 ec 08             	sub    $0x8,%esp
830044de:	52                   	push   %edx
830044df:	50                   	push   %eax
830044e0:	e8 74 ff ff ff       	call   83004459 <_fflush_r>
830044e5:	83 c4 10             	add    $0x10,%esp
830044e8:	c9                   	leave  
830044e9:	c3                   	ret    

830044ea <_fputc_r>:
830044ea:	55                   	push   %ebp
830044eb:	89 e5                	mov    %esp,%ebp
830044ed:	83 ec 18             	sub    $0x18,%esp
830044f0:	8b 45 08             	mov    0x8(%ebp),%eax
830044f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
830044f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
830044fa:	74 18                	je     83004514 <_fputc_r+0x2a>
830044fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
830044ff:	8b 40 38             	mov    0x38(%eax),%eax
83004502:	85 c0                	test   %eax,%eax
83004504:	75 0e                	jne    83004514 <_fputc_r+0x2a>
83004506:	83 ec 0c             	sub    $0xc,%esp
83004509:	ff 75 f4             	push   -0xc(%ebp)
8300450c:	e8 ac c5 ff ff       	call   83000abd <__sinit>
83004511:	83 c4 10             	add    $0x10,%esp
83004514:	83 ec 04             	sub    $0x4,%esp
83004517:	ff 75 10             	push   0x10(%ebp)
8300451a:	ff 75 0c             	push   0xc(%ebp)
8300451d:	ff 75 08             	push   0x8(%ebp)
83004520:	e8 ee 11 00 00       	call   83005713 <_putc_r>
83004525:	83 c4 10             	add    $0x10,%esp
83004528:	89 45 f0             	mov    %eax,-0x10(%ebp)
8300452b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300452e:	c9                   	leave  
8300452f:	c3                   	ret    

83004530 <fputc>:
83004530:	55                   	push   %ebp
83004531:	89 e5                	mov    %esp,%ebp
83004533:	83 ec 18             	sub    $0x18,%esp
83004536:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300453b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300453e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004541:	89 45 f0             	mov    %eax,-0x10(%ebp)
83004544:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83004548:	74 18                	je     83004562 <fputc+0x32>
8300454a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300454d:	8b 40 38             	mov    0x38(%eax),%eax
83004550:	85 c0                	test   %eax,%eax
83004552:	75 0e                	jne    83004562 <fputc+0x32>
83004554:	83 ec 0c             	sub    $0xc,%esp
83004557:	ff 75 f0             	push   -0x10(%ebp)
8300455a:	e8 5e c5 ff ff       	call   83000abd <__sinit>
8300455f:	83 c4 10             	add    $0x10,%esp
83004562:	83 ec 04             	sub    $0x4,%esp
83004565:	ff 75 0c             	push   0xc(%ebp)
83004568:	ff 75 08             	push   0x8(%ebp)
8300456b:	ff 75 f4             	push   -0xc(%ebp)
8300456e:	e8 a0 11 00 00       	call   83005713 <_putc_r>
83004573:	83 c4 10             	add    $0x10,%esp
83004576:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004579:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300457c:	c9                   	leave  
8300457d:	c3                   	ret    

8300457e <_fputs_r>:
8300457e:	55                   	push   %ebp
8300457f:	89 e5                	mov    %esp,%ebp
83004581:	83 ec 28             	sub    $0x28,%esp
83004584:	8b 45 0c             	mov    0xc(%ebp),%eax
83004587:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300458a:	83 ec 0c             	sub    $0xc,%esp
8300458d:	ff 75 0c             	push   0xc(%ebp)
83004590:	e8 6b f4 ff ff       	call   83003a00 <strlen>
83004595:	83 c4 10             	add    $0x10,%esp
83004598:	89 45 ec             	mov    %eax,-0x14(%ebp)
8300459b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300459e:	89 45 e0             	mov    %eax,-0x20(%ebp)
830045a1:	8d 45 dc             	lea    -0x24(%ebp),%eax
830045a4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830045a7:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
830045ae:	8b 45 08             	mov    0x8(%ebp),%eax
830045b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
830045b4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
830045b8:	74 18                	je     830045d2 <_fputs_r+0x54>
830045ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
830045bd:	8b 40 38             	mov    0x38(%eax),%eax
830045c0:	85 c0                	test   %eax,%eax
830045c2:	75 0e                	jne    830045d2 <_fputs_r+0x54>
830045c4:	83 ec 0c             	sub    $0xc,%esp
830045c7:	ff 75 f4             	push   -0xc(%ebp)
830045ca:	e8 ee c4 ff ff       	call   83000abd <__sinit>
830045cf:	83 c4 10             	add    $0x10,%esp
830045d2:	8b 45 10             	mov    0x10(%ebp),%eax
830045d5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
830045d9:	98                   	cwtl   
830045da:	25 00 20 00 00       	and    $0x2000,%eax
830045df:	85 c0                	test   %eax,%eax
830045e1:	75 24                	jne    83004607 <_fputs_r+0x89>
830045e3:	8b 45 10             	mov    0x10(%ebp),%eax
830045e6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
830045ea:	80 cc 20             	or     $0x20,%ah
830045ed:	89 c2                	mov    %eax,%edx
830045ef:	8b 45 10             	mov    0x10(%ebp),%eax
830045f2:	66 89 50 0c          	mov    %dx,0xc(%eax)
830045f6:	8b 45 10             	mov    0x10(%ebp),%eax
830045f9:	8b 40 64             	mov    0x64(%eax),%eax
830045fc:	80 e4 df             	and    $0xdf,%ah
830045ff:	89 c2                	mov    %eax,%edx
83004601:	8b 45 10             	mov    0x10(%ebp),%eax
83004604:	89 50 64             	mov    %edx,0x64(%eax)
83004607:	83 ec 04             	sub    $0x4,%esp
8300460a:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8300460d:	50                   	push   %eax
8300460e:	ff 75 10             	push   0x10(%ebp)
83004611:	ff 75 08             	push   0x8(%ebp)
83004614:	e8 1b 07 00 00       	call   83004d34 <__sfvwrite_r>
83004619:	83 c4 10             	add    $0x10,%esp
8300461c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8300461f:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004622:	c9                   	leave  
83004623:	c3                   	ret    

83004624 <fputs>:
83004624:	55                   	push   %ebp
83004625:	89 e5                	mov    %esp,%ebp
83004627:	83 ec 08             	sub    $0x8,%esp
8300462a:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300462f:	83 ec 04             	sub    $0x4,%esp
83004632:	ff 75 0c             	push   0xc(%ebp)
83004635:	ff 75 08             	push   0x8(%ebp)
83004638:	50                   	push   %eax
83004639:	e8 40 ff ff ff       	call   8300457e <_fputs_r>
8300463e:	83 c4 10             	add    $0x10,%esp
83004641:	c9                   	leave  
83004642:	c3                   	ret    

83004643 <__sputc_r>:
83004643:	55                   	push   %ebp
83004644:	89 e5                	mov    %esp,%ebp
83004646:	83 ec 08             	sub    $0x8,%esp
83004649:	8b 45 10             	mov    0x10(%ebp),%eax
8300464c:	8b 40 08             	mov    0x8(%eax),%eax
8300464f:	8d 50 ff             	lea    -0x1(%eax),%edx
83004652:	8b 45 10             	mov    0x10(%ebp),%eax
83004655:	89 50 08             	mov    %edx,0x8(%eax)
83004658:	8b 45 10             	mov    0x10(%ebp),%eax
8300465b:	8b 40 08             	mov    0x8(%eax),%eax
8300465e:	85 c0                	test   %eax,%eax
83004660:	79 17                	jns    83004679 <__sputc_r+0x36>
83004662:	8b 45 10             	mov    0x10(%ebp),%eax
83004665:	8b 50 08             	mov    0x8(%eax),%edx
83004668:	8b 45 10             	mov    0x10(%ebp),%eax
8300466b:	8b 40 18             	mov    0x18(%eax),%eax
8300466e:	39 c2                	cmp    %eax,%edx
83004670:	7c 21                	jl     83004693 <__sputc_r+0x50>
83004672:	8b 45 0c             	mov    0xc(%ebp),%eax
83004675:	3c 0a                	cmp    $0xa,%al
83004677:	74 1a                	je     83004693 <__sputc_r+0x50>
83004679:	8b 45 10             	mov    0x10(%ebp),%eax
8300467c:	8b 00                	mov    (%eax),%eax
8300467e:	8d 48 01             	lea    0x1(%eax),%ecx
83004681:	8b 55 10             	mov    0x10(%ebp),%edx
83004684:	89 0a                	mov    %ecx,(%edx)
83004686:	8b 55 0c             	mov    0xc(%ebp),%edx
83004689:	88 10                	mov    %dl,(%eax)
8300468b:	0f b6 00             	movzbl (%eax),%eax
8300468e:	0f b6 c0             	movzbl %al,%eax
83004691:	eb 14                	jmp    830046a7 <__sputc_r+0x64>
83004693:	83 ec 04             	sub    $0x4,%esp
83004696:	ff 75 10             	push   0x10(%ebp)
83004699:	ff 75 0c             	push   0xc(%ebp)
8300469c:	ff 75 08             	push   0x8(%ebp)
8300469f:	e8 38 f6 ff ff       	call   83003cdc <__swbuf_r>
830046a4:	83 c4 10             	add    $0x10,%esp
830046a7:	c9                   	leave  
830046a8:	c3                   	ret    

830046a9 <__fputwc>:
830046a9:	55                   	push   %ebp
830046aa:	89 e5                	mov    %esp,%ebp
830046ac:	83 ec 18             	sub    $0x18,%esp
830046af:	e8 db 0c 00 00       	call   8300538f <__locale_mb_cur_max>
830046b4:	83 f8 01             	cmp    $0x1,%eax
830046b7:	75 1e                	jne    830046d7 <__fputwc+0x2e>
830046b9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
830046bd:	7e 18                	jle    830046d7 <__fputwc+0x2e>
830046bf:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
830046c6:	7f 0f                	jg     830046d7 <__fputwc+0x2e>
830046c8:	8b 45 0c             	mov    0xc(%ebp),%eax
830046cb:	88 45 ef             	mov    %al,-0x11(%ebp)
830046ce:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
830046d5:	eb 3c                	jmp    83004713 <__fputwc+0x6a>
830046d7:	8b 45 10             	mov    0x10(%ebp),%eax
830046da:	83 c0 5c             	add    $0x5c,%eax
830046dd:	50                   	push   %eax
830046de:	ff 75 0c             	push   0xc(%ebp)
830046e1:	8d 45 ef             	lea    -0x11(%ebp),%eax
830046e4:	50                   	push   %eax
830046e5:	ff 75 08             	push   0x8(%ebp)
830046e8:	e8 72 1c 00 00       	call   8300635f <_wcrtomb_r>
830046ed:	83 c4 10             	add    $0x10,%esp
830046f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
830046f3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
830046f7:	75 1a                	jne    83004713 <__fputwc+0x6a>
830046f9:	8b 45 10             	mov    0x10(%ebp),%eax
830046fc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83004700:	83 c8 40             	or     $0x40,%eax
83004703:	89 c2                	mov    %eax,%edx
83004705:	8b 45 10             	mov    0x10(%ebp),%eax
83004708:	66 89 50 0c          	mov    %dx,0xc(%eax)
8300470c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83004711:	eb 44                	jmp    83004757 <__fputwc+0xae>
83004713:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8300471a:	eb 30                	jmp    8300474c <__fputwc+0xa3>
8300471c:	8d 55 ef             	lea    -0x11(%ebp),%edx
8300471f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004722:	01 d0                	add    %edx,%eax
83004724:	0f b6 00             	movzbl (%eax),%eax
83004727:	0f b6 c0             	movzbl %al,%eax
8300472a:	83 ec 04             	sub    $0x4,%esp
8300472d:	ff 75 10             	push   0x10(%ebp)
83004730:	50                   	push   %eax
83004731:	ff 75 08             	push   0x8(%ebp)
83004734:	e8 0a ff ff ff       	call   83004643 <__sputc_r>
83004739:	83 c4 10             	add    $0x10,%esp
8300473c:	83 f8 ff             	cmp    $0xffffffff,%eax
8300473f:	75 07                	jne    83004748 <__fputwc+0x9f>
83004741:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83004746:	eb 0f                	jmp    83004757 <__fputwc+0xae>
83004748:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8300474c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300474f:	3b 45 f0             	cmp    -0x10(%ebp),%eax
83004752:	72 c8                	jb     8300471c <__fputwc+0x73>
83004754:	8b 45 0c             	mov    0xc(%ebp),%eax
83004757:	c9                   	leave  
83004758:	c3                   	ret    

83004759 <_fputwc_r>:
83004759:	55                   	push   %ebp
8300475a:	89 e5                	mov    %esp,%ebp
8300475c:	83 ec 18             	sub    $0x18,%esp
8300475f:	8b 45 10             	mov    0x10(%ebp),%eax
83004762:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83004766:	98                   	cwtl   
83004767:	25 00 20 00 00       	and    $0x2000,%eax
8300476c:	85 c0                	test   %eax,%eax
8300476e:	75 24                	jne    83004794 <_fputwc_r+0x3b>
83004770:	8b 45 10             	mov    0x10(%ebp),%eax
83004773:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
83004777:	80 cc 20             	or     $0x20,%ah
8300477a:	89 c2                	mov    %eax,%edx
8300477c:	8b 45 10             	mov    0x10(%ebp),%eax
8300477f:	66 89 50 0c          	mov    %dx,0xc(%eax)
83004783:	8b 45 10             	mov    0x10(%ebp),%eax
83004786:	8b 40 64             	mov    0x64(%eax),%eax
83004789:	80 cc 20             	or     $0x20,%ah
8300478c:	89 c2                	mov    %eax,%edx
8300478e:	8b 45 10             	mov    0x10(%ebp),%eax
83004791:	89 50 64             	mov    %edx,0x64(%eax)
83004794:	83 ec 04             	sub    $0x4,%esp
83004797:	ff 75 10             	push   0x10(%ebp)
8300479a:	ff 75 0c             	push   0xc(%ebp)
8300479d:	ff 75 08             	push   0x8(%ebp)
830047a0:	e8 04 ff ff ff       	call   830046a9 <__fputwc>
830047a5:	83 c4 10             	add    $0x10,%esp
830047a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
830047ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
830047ae:	c9                   	leave  
830047af:	c3                   	ret    

830047b0 <fputwc>:
830047b0:	55                   	push   %ebp
830047b1:	89 e5                	mov    %esp,%ebp
830047b3:	83 ec 18             	sub    $0x18,%esp
830047b6:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830047bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
830047be:	8b 45 f4             	mov    -0xc(%ebp),%eax
830047c1:	89 45 f0             	mov    %eax,-0x10(%ebp)
830047c4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
830047c8:	74 18                	je     830047e2 <fputwc+0x32>
830047ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
830047cd:	8b 40 38             	mov    0x38(%eax),%eax
830047d0:	85 c0                	test   %eax,%eax
830047d2:	75 0e                	jne    830047e2 <fputwc+0x32>
830047d4:	83 ec 0c             	sub    $0xc,%esp
830047d7:	ff 75 f0             	push   -0x10(%ebp)
830047da:	e8 de c2 ff ff       	call   83000abd <__sinit>
830047df:	83 c4 10             	add    $0x10,%esp
830047e2:	83 ec 04             	sub    $0x4,%esp
830047e5:	ff 75 0c             	push   0xc(%ebp)
830047e8:	ff 75 08             	push   0x8(%ebp)
830047eb:	ff 75 f4             	push   -0xc(%ebp)
830047ee:	e8 66 ff ff ff       	call   83004759 <_fputwc_r>
830047f3:	83 c4 10             	add    $0x10,%esp
830047f6:	c9                   	leave  
830047f7:	c3                   	ret    

830047f8 <_free_r>:
830047f8:	55                   	push   %ebp
830047f9:	89 e5                	mov    %esp,%ebp
830047fb:	53                   	push   %ebx
830047fc:	83 ec 34             	sub    $0x34,%esp
830047ff:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83004803:	0f 84 c4 03 00 00    	je     83004bcd <_free_r+0x3d5>
83004809:	83 ec 0c             	sub    $0xc,%esp
8300480c:	ff 75 08             	push   0x8(%ebp)
8300480f:	e8 64 e0 ff ff       	call   83002878 <__malloc_lock>
83004814:	83 c4 10             	add    $0x10,%esp
83004817:	8b 45 0c             	mov    0xc(%ebp),%eax
8300481a:	83 e8 08             	sub    $0x8,%eax
8300481d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83004820:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004823:	8b 40 04             	mov    0x4(%eax),%eax
83004826:	89 45 e0             	mov    %eax,-0x20(%ebp)
83004829:	8b 45 e0             	mov    -0x20(%ebp),%eax
8300482c:	83 e0 fe             	and    $0xfffffffe,%eax
8300482f:	89 45 f0             	mov    %eax,-0x10(%ebp)
83004832:	8b 55 f4             	mov    -0xc(%ebp),%edx
83004835:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004838:	01 d0                	add    %edx,%eax
8300483a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8300483d:	8b 45 dc             	mov    -0x24(%ebp),%eax
83004840:	8b 40 04             	mov    0x4(%eax),%eax
83004843:	83 e0 fc             	and    $0xfffffffc,%eax
83004846:	89 45 d8             	mov    %eax,-0x28(%ebp)
83004849:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
8300484e:	8b 40 08             	mov    0x8(%eax),%eax
83004851:	39 45 dc             	cmp    %eax,-0x24(%ebp)
83004854:	0f 85 94 00 00 00    	jne    830048ee <_free_r+0xf6>
8300485a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300485d:	01 45 f0             	add    %eax,-0x10(%ebp)
83004860:	8b 45 e0             	mov    -0x20(%ebp),%eax
83004863:	83 e0 01             	and    $0x1,%eax
83004866:	85 c0                	test   %eax,%eax
83004868:	75 3a                	jne    830048a4 <_free_r+0xac>
8300486a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300486d:	8b 00                	mov    (%eax),%eax
8300486f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83004872:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83004875:	f7 d8                	neg    %eax
83004877:	01 45 f4             	add    %eax,-0xc(%ebp)
8300487a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8300487d:	01 45 f0             	add    %eax,-0x10(%ebp)
83004880:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004883:	8b 40 0c             	mov    0xc(%eax),%eax
83004886:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004889:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300488c:	8b 40 08             	mov    0x8(%eax),%eax
8300488f:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004892:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004895:	8b 55 ec             	mov    -0x14(%ebp),%edx
83004898:	89 50 0c             	mov    %edx,0xc(%eax)
8300489b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300489e:	8b 55 e8             	mov    -0x18(%ebp),%edx
830048a1:	89 50 08             	mov    %edx,0x8(%eax)
830048a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
830048a7:	83 c8 01             	or     $0x1,%eax
830048aa:	89 c2                	mov    %eax,%edx
830048ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
830048af:	89 50 04             	mov    %edx,0x4(%eax)
830048b2:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
830048b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
830048ba:	89 42 08             	mov    %eax,0x8(%edx)
830048bd:	a1 28 72 00 83       	mov    0x83007228,%eax
830048c2:	39 45 f0             	cmp    %eax,-0x10(%ebp)
830048c5:	72 14                	jb     830048db <_free_r+0xe3>
830048c7:	a1 e0 73 00 83       	mov    0x830073e0,%eax
830048cc:	83 ec 08             	sub    $0x8,%esp
830048cf:	50                   	push   %eax
830048d0:	ff 75 08             	push   0x8(%ebp)
830048d3:	e8 fb 02 00 00       	call   83004bd3 <_malloc_trim_r>
830048d8:	83 c4 10             	add    $0x10,%esp
830048db:	83 ec 0c             	sub    $0xc,%esp
830048de:	ff 75 08             	push   0x8(%ebp)
830048e1:	e8 98 df ff ff       	call   8300287e <__malloc_unlock>
830048e6:	83 c4 10             	add    $0x10,%esp
830048e9:	e9 e0 02 00 00       	jmp    83004bce <_free_r+0x3d6>
830048ee:	8b 45 dc             	mov    -0x24(%ebp),%eax
830048f1:	8b 55 d8             	mov    -0x28(%ebp),%edx
830048f4:	89 50 04             	mov    %edx,0x4(%eax)
830048f7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
830048fe:	8b 45 e0             	mov    -0x20(%ebp),%eax
83004901:	83 e0 01             	and    $0x1,%eax
83004904:	85 c0                	test   %eax,%eax
83004906:	75 52                	jne    8300495a <_free_r+0x162>
83004908:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300490b:	8b 00                	mov    (%eax),%eax
8300490d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83004910:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83004913:	f7 d8                	neg    %eax
83004915:	01 45 f4             	add    %eax,-0xc(%ebp)
83004918:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8300491b:	01 45 f0             	add    %eax,-0x10(%ebp)
8300491e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004921:	8b 40 08             	mov    0x8(%eax),%eax
83004924:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
83004929:	39 d0                	cmp    %edx,%eax
8300492b:	75 09                	jne    83004936 <_free_r+0x13e>
8300492d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
83004934:	eb 24                	jmp    8300495a <_free_r+0x162>
83004936:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004939:	8b 40 0c             	mov    0xc(%eax),%eax
8300493c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8300493f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004942:	8b 40 08             	mov    0x8(%eax),%eax
83004945:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004948:	8b 45 e8             	mov    -0x18(%ebp),%eax
8300494b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8300494e:	89 50 0c             	mov    %edx,0xc(%eax)
83004951:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004954:	8b 55 e8             	mov    -0x18(%ebp),%edx
83004957:	89 50 08             	mov    %edx,0x8(%eax)
8300495a:	8b 55 dc             	mov    -0x24(%ebp),%edx
8300495d:	8b 45 d8             	mov    -0x28(%ebp),%eax
83004960:	01 d0                	add    %edx,%eax
83004962:	8b 40 04             	mov    0x4(%eax),%eax
83004965:	83 e0 01             	and    $0x1,%eax
83004968:	85 c0                	test   %eax,%eax
8300496a:	75 75                	jne    830049e1 <_free_r+0x1e9>
8300496c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8300496f:	01 45 f0             	add    %eax,-0x10(%ebp)
83004972:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83004976:	75 45                	jne    830049bd <_free_r+0x1c5>
83004978:	8b 45 dc             	mov    -0x24(%ebp),%eax
8300497b:	8b 40 08             	mov    0x8(%eax),%eax
8300497e:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
83004983:	39 d0                	cmp    %edx,%eax
83004985:	75 36                	jne    830049bd <_free_r+0x1c5>
83004987:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8300498e:	b8 28 6e 00 83       	mov    $0x83006e28,%eax
83004993:	8b 55 f4             	mov    -0xc(%ebp),%edx
83004996:	89 50 0c             	mov    %edx,0xc(%eax)
83004999:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
8300499e:	8b 40 0c             	mov    0xc(%eax),%eax
830049a1:	89 42 08             	mov    %eax,0x8(%edx)
830049a4:	ba 28 6e 00 83       	mov    $0x83006e28,%edx
830049a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
830049ac:	89 50 0c             	mov    %edx,0xc(%eax)
830049af:	8b 45 f4             	mov    -0xc(%ebp),%eax
830049b2:	8b 50 0c             	mov    0xc(%eax),%edx
830049b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
830049b8:	89 50 08             	mov    %edx,0x8(%eax)
830049bb:	eb 24                	jmp    830049e1 <_free_r+0x1e9>
830049bd:	8b 45 dc             	mov    -0x24(%ebp),%eax
830049c0:	8b 40 0c             	mov    0xc(%eax),%eax
830049c3:	89 45 ec             	mov    %eax,-0x14(%ebp)
830049c6:	8b 45 dc             	mov    -0x24(%ebp),%eax
830049c9:	8b 40 08             	mov    0x8(%eax),%eax
830049cc:	89 45 e8             	mov    %eax,-0x18(%ebp)
830049cf:	8b 45 e8             	mov    -0x18(%ebp),%eax
830049d2:	8b 55 ec             	mov    -0x14(%ebp),%edx
830049d5:	89 50 0c             	mov    %edx,0xc(%eax)
830049d8:	8b 45 ec             	mov    -0x14(%ebp),%eax
830049db:	8b 55 e8             	mov    -0x18(%ebp),%edx
830049de:	89 50 08             	mov    %edx,0x8(%eax)
830049e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
830049e4:	83 c8 01             	or     $0x1,%eax
830049e7:	89 c2                	mov    %eax,%edx
830049e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
830049ec:	89 50 04             	mov    %edx,0x4(%eax)
830049ef:	8b 55 f4             	mov    -0xc(%ebp),%edx
830049f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
830049f5:	01 c2                	add    %eax,%edx
830049f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
830049fa:	89 02                	mov    %eax,(%edx)
830049fc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83004a00:	0f 85 b7 01 00 00    	jne    83004bbd <_free_r+0x3c5>
83004a06:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
83004a0d:	77 7f                	ja     83004a8e <_free_r+0x296>
83004a0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004a12:	c1 e8 03             	shr    $0x3,%eax
83004a15:	89 45 d0             	mov    %eax,-0x30(%ebp)
83004a18:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004a1d:	8b 58 04             	mov    0x4(%eax),%ebx
83004a20:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004a23:	8d 50 03             	lea    0x3(%eax),%edx
83004a26:	85 c0                	test   %eax,%eax
83004a28:	0f 48 c2             	cmovs  %edx,%eax
83004a2b:	c1 f8 02             	sar    $0x2,%eax
83004a2e:	ba 01 00 00 00       	mov    $0x1,%edx
83004a33:	89 c1                	mov    %eax,%ecx
83004a35:	d3 e2                	shl    %cl,%edx
83004a37:	89 d0                	mov    %edx,%eax
83004a39:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83004a3e:	09 d8                	or     %ebx,%eax
83004a40:	89 42 04             	mov    %eax,0x4(%edx)
83004a43:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004a46:	83 c0 01             	add    $0x1,%eax
83004a49:	01 c0                	add    %eax,%eax
83004a4b:	c1 e0 02             	shl    $0x2,%eax
83004a4e:	05 20 6e 00 83       	add    $0x83006e20,%eax
83004a53:	83 e8 08             	sub    $0x8,%eax
83004a56:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004a59:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004a5c:	8b 40 08             	mov    0x8(%eax),%eax
83004a5f:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004a62:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004a65:	8b 55 ec             	mov    -0x14(%ebp),%edx
83004a68:	89 50 0c             	mov    %edx,0xc(%eax)
83004a6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004a6e:	8b 55 e8             	mov    -0x18(%ebp),%edx
83004a71:	89 50 08             	mov    %edx,0x8(%eax)
83004a74:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004a77:	8b 55 f4             	mov    -0xc(%ebp),%edx
83004a7a:	89 50 08             	mov    %edx,0x8(%eax)
83004a7d:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004a80:	8b 50 08             	mov    0x8(%eax),%edx
83004a83:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004a86:	89 50 0c             	mov    %edx,0xc(%eax)
83004a89:	e9 2f 01 00 00       	jmp    83004bbd <_free_r+0x3c5>
83004a8e:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004a91:	c1 e8 09             	shr    $0x9,%eax
83004a94:	85 c0                	test   %eax,%eax
83004a96:	75 08                	jne    83004aa0 <_free_r+0x2a8>
83004a98:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004a9b:	c1 e8 03             	shr    $0x3,%eax
83004a9e:	eb 77                	jmp    83004b17 <_free_r+0x31f>
83004aa0:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004aa3:	c1 e8 09             	shr    $0x9,%eax
83004aa6:	83 f8 04             	cmp    $0x4,%eax
83004aa9:	77 0b                	ja     83004ab6 <_free_r+0x2be>
83004aab:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004aae:	c1 e8 06             	shr    $0x6,%eax
83004ab1:	83 c0 38             	add    $0x38,%eax
83004ab4:	eb 61                	jmp    83004b17 <_free_r+0x31f>
83004ab6:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004ab9:	c1 e8 09             	shr    $0x9,%eax
83004abc:	83 f8 14             	cmp    $0x14,%eax
83004abf:	77 0b                	ja     83004acc <_free_r+0x2d4>
83004ac1:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004ac4:	c1 e8 09             	shr    $0x9,%eax
83004ac7:	83 c0 5b             	add    $0x5b,%eax
83004aca:	eb 4b                	jmp    83004b17 <_free_r+0x31f>
83004acc:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004acf:	c1 e8 09             	shr    $0x9,%eax
83004ad2:	83 f8 54             	cmp    $0x54,%eax
83004ad5:	77 0b                	ja     83004ae2 <_free_r+0x2ea>
83004ad7:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004ada:	c1 e8 0c             	shr    $0xc,%eax
83004add:	83 c0 6e             	add    $0x6e,%eax
83004ae0:	eb 35                	jmp    83004b17 <_free_r+0x31f>
83004ae2:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004ae5:	c1 e8 09             	shr    $0x9,%eax
83004ae8:	3d 54 01 00 00       	cmp    $0x154,%eax
83004aed:	77 0b                	ja     83004afa <_free_r+0x302>
83004aef:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004af2:	c1 e8 0f             	shr    $0xf,%eax
83004af5:	83 c0 77             	add    $0x77,%eax
83004af8:	eb 1d                	jmp    83004b17 <_free_r+0x31f>
83004afa:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004afd:	c1 e8 09             	shr    $0x9,%eax
83004b00:	3d 54 05 00 00       	cmp    $0x554,%eax
83004b05:	77 0b                	ja     83004b12 <_free_r+0x31a>
83004b07:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004b0a:	c1 e8 12             	shr    $0x12,%eax
83004b0d:	83 c0 7c             	add    $0x7c,%eax
83004b10:	eb 05                	jmp    83004b17 <_free_r+0x31f>
83004b12:	b8 7e 00 00 00       	mov    $0x7e,%eax
83004b17:	89 45 d0             	mov    %eax,-0x30(%ebp)
83004b1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004b1d:	83 c0 01             	add    $0x1,%eax
83004b20:	01 c0                	add    %eax,%eax
83004b22:	c1 e0 02             	shl    $0x2,%eax
83004b25:	05 20 6e 00 83       	add    $0x83006e20,%eax
83004b2a:	83 e8 08             	sub    $0x8,%eax
83004b2d:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004b30:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004b33:	8b 40 08             	mov    0x8(%eax),%eax
83004b36:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004b39:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004b3c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
83004b3f:	75 36                	jne    83004b77 <_free_r+0x37f>
83004b41:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004b46:	8b 58 04             	mov    0x4(%eax),%ebx
83004b49:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004b4c:	8d 50 03             	lea    0x3(%eax),%edx
83004b4f:	85 c0                	test   %eax,%eax
83004b51:	0f 48 c2             	cmovs  %edx,%eax
83004b54:	c1 f8 02             	sar    $0x2,%eax
83004b57:	ba 01 00 00 00       	mov    $0x1,%edx
83004b5c:	89 c1                	mov    %eax,%ecx
83004b5e:	d3 e2                	shl    %cl,%edx
83004b60:	89 d0                	mov    %edx,%eax
83004b62:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83004b67:	09 d8                	or     %ebx,%eax
83004b69:	89 42 04             	mov    %eax,0x4(%edx)
83004b6c:	eb 28                	jmp    83004b96 <_free_r+0x39e>
83004b6e:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004b71:	8b 40 08             	mov    0x8(%eax),%eax
83004b74:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004b77:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004b7a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
83004b7d:	74 0e                	je     83004b8d <_free_r+0x395>
83004b7f:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004b82:	8b 40 04             	mov    0x4(%eax),%eax
83004b85:	83 e0 fc             	and    $0xfffffffc,%eax
83004b88:	39 45 f0             	cmp    %eax,-0x10(%ebp)
83004b8b:	72 e1                	jb     83004b6e <_free_r+0x376>
83004b8d:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004b90:	8b 40 0c             	mov    0xc(%eax),%eax
83004b93:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004b96:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004b99:	8b 55 ec             	mov    -0x14(%ebp),%edx
83004b9c:	89 50 0c             	mov    %edx,0xc(%eax)
83004b9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004ba2:	8b 55 e8             	mov    -0x18(%ebp),%edx
83004ba5:	89 50 08             	mov    %edx,0x8(%eax)
83004ba8:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004bab:	8b 55 f4             	mov    -0xc(%ebp),%edx
83004bae:	89 50 08             	mov    %edx,0x8(%eax)
83004bb1:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004bb4:	8b 50 08             	mov    0x8(%eax),%edx
83004bb7:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004bba:	89 50 0c             	mov    %edx,0xc(%eax)
83004bbd:	83 ec 0c             	sub    $0xc,%esp
83004bc0:	ff 75 08             	push   0x8(%ebp)
83004bc3:	e8 b6 dc ff ff       	call   8300287e <__malloc_unlock>
83004bc8:	83 c4 10             	add    $0x10,%esp
83004bcb:	eb 01                	jmp    83004bce <_free_r+0x3d6>
83004bcd:	90                   	nop
83004bce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
83004bd1:	c9                   	leave  
83004bd2:	c3                   	ret    

83004bd3 <_malloc_trim_r>:
83004bd3:	55                   	push   %ebp
83004bd4:	89 e5                	mov    %esp,%ebp
83004bd6:	83 ec 28             	sub    $0x28,%esp
83004bd9:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
83004be0:	83 ec 0c             	sub    $0xc,%esp
83004be3:	ff 75 08             	push   0x8(%ebp)
83004be6:	e8 8d dc ff ff       	call   83002878 <__malloc_lock>
83004beb:	83 c4 10             	add    $0x10,%esp
83004bee:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004bf3:	8b 40 08             	mov    0x8(%eax),%eax
83004bf6:	8b 40 04             	mov    0x4(%eax),%eax
83004bf9:	83 e0 fc             	and    $0xfffffffc,%eax
83004bfc:	89 45 f0             	mov    %eax,-0x10(%ebp)
83004bff:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004c02:	2b 45 0c             	sub    0xc(%ebp),%eax
83004c05:	89 c2                	mov    %eax,%edx
83004c07:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004c0a:	01 d0                	add    %edx,%eax
83004c0c:	83 e8 11             	sub    $0x11,%eax
83004c0f:	ba 00 00 00 00       	mov    $0x0,%edx
83004c14:	f7 75 f4             	divl   -0xc(%ebp)
83004c17:	83 e8 01             	sub    $0x1,%eax
83004c1a:	0f af 45 f4          	imul   -0xc(%ebp),%eax
83004c1e:	89 45 ec             	mov    %eax,-0x14(%ebp)
83004c21:	8b 45 f4             	mov    -0xc(%ebp),%eax
83004c24:	39 45 ec             	cmp    %eax,-0x14(%ebp)
83004c27:	7d 18                	jge    83004c41 <_malloc_trim_r+0x6e>
83004c29:	83 ec 0c             	sub    $0xc,%esp
83004c2c:	ff 75 08             	push   0x8(%ebp)
83004c2f:	e8 4a dc ff ff       	call   8300287e <__malloc_unlock>
83004c34:	83 c4 10             	add    $0x10,%esp
83004c37:	b8 00 00 00 00       	mov    $0x0,%eax
83004c3c:	e9 f1 00 00 00       	jmp    83004d32 <_malloc_trim_r+0x15f>
83004c41:	83 ec 08             	sub    $0x8,%esp
83004c44:	6a 00                	push   $0x0
83004c46:	ff 75 08             	push   0x8(%ebp)
83004c49:	e8 a5 ea ff ff       	call   830036f3 <_sbrk_r>
83004c4e:	83 c4 10             	add    $0x10,%esp
83004c51:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004c54:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004c59:	8b 50 08             	mov    0x8(%eax),%edx
83004c5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004c5f:	01 d0                	add    %edx,%eax
83004c61:	39 45 e8             	cmp    %eax,-0x18(%ebp)
83004c64:	74 18                	je     83004c7e <_malloc_trim_r+0xab>
83004c66:	83 ec 0c             	sub    $0xc,%esp
83004c69:	ff 75 08             	push   0x8(%ebp)
83004c6c:	e8 0d dc ff ff       	call   8300287e <__malloc_unlock>
83004c71:	83 c4 10             	add    $0x10,%esp
83004c74:	b8 00 00 00 00       	mov    $0x0,%eax
83004c79:	e9 b4 00 00 00       	jmp    83004d32 <_malloc_trim_r+0x15f>
83004c7e:	8b 45 ec             	mov    -0x14(%ebp),%eax
83004c81:	f7 d8                	neg    %eax
83004c83:	83 ec 08             	sub    $0x8,%esp
83004c86:	50                   	push   %eax
83004c87:	ff 75 08             	push   0x8(%ebp)
83004c8a:	e8 64 ea ff ff       	call   830036f3 <_sbrk_r>
83004c8f:	83 c4 10             	add    $0x10,%esp
83004c92:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83004c95:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
83004c99:	75 61                	jne    83004cfc <_malloc_trim_r+0x129>
83004c9b:	83 ec 08             	sub    $0x8,%esp
83004c9e:	6a 00                	push   $0x0
83004ca0:	ff 75 08             	push   0x8(%ebp)
83004ca3:	e8 4b ea ff ff       	call   830036f3 <_sbrk_r>
83004ca8:	83 c4 10             	add    $0x10,%esp
83004cab:	89 45 e8             	mov    %eax,-0x18(%ebp)
83004cae:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004cb3:	8b 50 08             	mov    0x8(%eax),%edx
83004cb6:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004cb9:	29 d0                	sub    %edx,%eax
83004cbb:	89 45 f0             	mov    %eax,-0x10(%ebp)
83004cbe:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
83004cc2:	7e 23                	jle    83004ce7 <_malloc_trim_r+0x114>
83004cc4:	8b 15 2c 72 00 83    	mov    0x8300722c,%edx
83004cca:	8b 45 e8             	mov    -0x18(%ebp),%eax
83004ccd:	29 d0                	sub    %edx,%eax
83004ccf:	a3 00 74 00 83       	mov    %eax,0x83007400
83004cd4:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004cd7:	83 c8 01             	or     $0x1,%eax
83004cda:	89 c2                	mov    %eax,%edx
83004cdc:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004ce1:	8b 40 08             	mov    0x8(%eax),%eax
83004ce4:	89 50 04             	mov    %edx,0x4(%eax)
83004ce7:	83 ec 0c             	sub    $0xc,%esp
83004cea:	ff 75 08             	push   0x8(%ebp)
83004ced:	e8 8c db ff ff       	call   8300287e <__malloc_unlock>
83004cf2:	83 c4 10             	add    $0x10,%esp
83004cf5:	b8 00 00 00 00       	mov    $0x0,%eax
83004cfa:	eb 36                	jmp    83004d32 <_malloc_trim_r+0x15f>
83004cfc:	8b 45 f0             	mov    -0x10(%ebp),%eax
83004cff:	2b 45 ec             	sub    -0x14(%ebp),%eax
83004d02:	83 c8 01             	or     $0x1,%eax
83004d05:	89 c2                	mov    %eax,%edx
83004d07:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83004d0c:	8b 40 08             	mov    0x8(%eax),%eax
83004d0f:	89 50 04             	mov    %edx,0x4(%eax)
83004d12:	a1 00 74 00 83       	mov    0x83007400,%eax
83004d17:	2b 45 ec             	sub    -0x14(%ebp),%eax
83004d1a:	a3 00 74 00 83       	mov    %eax,0x83007400
83004d1f:	83 ec 0c             	sub    $0xc,%esp
83004d22:	ff 75 08             	push   0x8(%ebp)
83004d25:	e8 54 db ff ff       	call   8300287e <__malloc_unlock>
83004d2a:	83 c4 10             	add    $0x10,%esp
83004d2d:	b8 01 00 00 00       	mov    $0x1,%eax
83004d32:	c9                   	leave  
83004d33:	c3                   	ret    

83004d34 <__sfvwrite_r>:
83004d34:	55                   	push   %ebp
83004d35:	89 e5                	mov    %esp,%ebp
83004d37:	57                   	push   %edi
83004d38:	56                   	push   %esi
83004d39:	53                   	push   %ebx
83004d3a:	83 ec 3c             	sub    $0x3c,%esp
83004d3d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83004d40:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
83004d47:	8b 45 10             	mov    0x10(%ebp),%eax
83004d4a:	8b 78 08             	mov    0x8(%eax),%edi
83004d4d:	85 ff                	test   %edi,%edi
83004d4f:	75 0a                	jne    83004d5b <__sfvwrite_r+0x27>
83004d51:	b8 00 00 00 00       	mov    $0x0,%eax
83004d56:	e9 6f 04 00 00       	jmp    830051ca <__sfvwrite_r+0x496>
83004d5b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004d5f:	98                   	cwtl   
83004d60:	83 e0 08             	and    $0x8,%eax
83004d63:	85 c0                	test   %eax,%eax
83004d65:	74 07                	je     83004d6e <__sfvwrite_r+0x3a>
83004d67:	8b 43 10             	mov    0x10(%ebx),%eax
83004d6a:	85 c0                	test   %eax,%eax
83004d6c:	75 1d                	jne    83004d8b <__sfvwrite_r+0x57>
83004d6e:	83 ec 08             	sub    $0x8,%esp
83004d71:	53                   	push   %ebx
83004d72:	ff 75 08             	push   0x8(%ebp)
83004d75:	e8 db f0 ff ff       	call   83003e55 <__swsetup_r>
83004d7a:	83 c4 10             	add    $0x10,%esp
83004d7d:	85 c0                	test   %eax,%eax
83004d7f:	74 0a                	je     83004d8b <__sfvwrite_r+0x57>
83004d81:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
83004d86:	e9 3f 04 00 00       	jmp    830051ca <__sfvwrite_r+0x496>
83004d8b:	8b 45 10             	mov    0x10(%ebp),%eax
83004d8e:	8b 00                	mov    (%eax),%eax
83004d90:	89 45 c0             	mov    %eax,-0x40(%ebp)
83004d93:	bf 00 00 00 00       	mov    $0x0,%edi
83004d98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004d9c:	98                   	cwtl   
83004d9d:	83 e0 02             	and    $0x2,%eax
83004da0:	85 c0                	test   %eax,%eax
83004da2:	74 68                	je     83004e0c <__sfvwrite_r+0xd8>
83004da4:	eb 11                	jmp    83004db7 <__sfvwrite_r+0x83>
83004da6:	8b 45 c0             	mov    -0x40(%ebp),%eax
83004da9:	8b 08                	mov    (%eax),%ecx
83004dab:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
83004dae:	8b 78 04             	mov    0x4(%eax),%edi
83004db1:	83 c0 08             	add    $0x8,%eax
83004db4:	89 45 c0             	mov    %eax,-0x40(%ebp)
83004db7:	85 ff                	test   %edi,%edi
83004db9:	74 eb                	je     83004da6 <__sfvwrite_r+0x72>
83004dbb:	8b 4b 24             	mov    0x24(%ebx),%ecx
83004dbe:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
83004dc3:	39 c7                	cmp    %eax,%edi
83004dc5:	0f 46 c7             	cmovbe %edi,%eax
83004dc8:	89 c2                	mov    %eax,%edx
83004dca:	8b 43 1c             	mov    0x1c(%ebx),%eax
83004dcd:	52                   	push   %edx
83004dce:	ff 75 c4             	push   -0x3c(%ebp)
83004dd1:	50                   	push   %eax
83004dd2:	ff 75 08             	push   0x8(%ebp)
83004dd5:	ff d1                	call   *%ecx
83004dd7:	83 c4 10             	add    $0x10,%esp
83004dda:	89 c6                	mov    %eax,%esi
83004ddc:	85 f6                	test   %esi,%esi
83004dde:	0f 8e cf 03 00 00    	jle    830051b3 <__sfvwrite_r+0x47f>
83004de4:	89 f0                	mov    %esi,%eax
83004de6:	01 45 c4             	add    %eax,-0x3c(%ebp)
83004de9:	89 f0                	mov    %esi,%eax
83004deb:	29 c7                	sub    %eax,%edi
83004ded:	8b 45 10             	mov    0x10(%ebp),%eax
83004df0:	8b 40 08             	mov    0x8(%eax),%eax
83004df3:	89 f2                	mov    %esi,%edx
83004df5:	29 d0                	sub    %edx,%eax
83004df7:	8b 4d 10             	mov    0x10(%ebp),%ecx
83004dfa:	89 41 08             	mov    %eax,0x8(%ecx)
83004dfd:	8b 45 10             	mov    0x10(%ebp),%eax
83004e00:	8b 40 08             	mov    0x8(%eax),%eax
83004e03:	85 c0                	test   %eax,%eax
83004e05:	75 b0                	jne    83004db7 <__sfvwrite_r+0x83>
83004e07:	e9 a0 03 00 00       	jmp    830051ac <__sfvwrite_r+0x478>
83004e0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004e10:	98                   	cwtl   
83004e11:	83 e0 01             	and    $0x1,%eax
83004e14:	85 c0                	test   %eax,%eax
83004e16:	0f 85 44 02 00 00    	jne    83005060 <__sfvwrite_r+0x32c>
83004e1c:	eb 11                	jmp    83004e2f <__sfvwrite_r+0xfb>
83004e1e:	8b 45 c0             	mov    -0x40(%ebp),%eax
83004e21:	8b 08                	mov    (%eax),%ecx
83004e23:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
83004e26:	8b 78 04             	mov    0x4(%eax),%edi
83004e29:	83 c0 08             	add    $0x8,%eax
83004e2c:	89 45 c0             	mov    %eax,-0x40(%ebp)
83004e2f:	85 ff                	test   %edi,%edi
83004e31:	74 eb                	je     83004e1e <__sfvwrite_r+0xea>
83004e33:	8b 73 08             	mov    0x8(%ebx),%esi
83004e36:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004e3a:	98                   	cwtl   
83004e3b:	25 00 02 00 00       	and    $0x200,%eax
83004e40:	85 c0                	test   %eax,%eax
83004e42:	0f 84 4f 01 00 00    	je     83004f97 <__sfvwrite_r+0x263>
83004e48:	89 f0                	mov    %esi,%eax
83004e4a:	39 c7                	cmp    %eax,%edi
83004e4c:	0f 82 12 01 00 00    	jb     83004f64 <__sfvwrite_r+0x230>
83004e52:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004e56:	98                   	cwtl   
83004e57:	25 80 04 00 00       	and    $0x480,%eax
83004e5c:	85 c0                	test   %eax,%eax
83004e5e:	0f 84 00 01 00 00    	je     83004f64 <__sfvwrite_r+0x230>
83004e64:	8b 03                	mov    (%ebx),%eax
83004e66:	8b 53 10             	mov    0x10(%ebx),%edx
83004e69:	29 d0                	sub    %edx,%eax
83004e6b:	89 45 d0             	mov    %eax,-0x30(%ebp)
83004e6e:	8b 53 14             	mov    0x14(%ebx),%edx
83004e71:	89 d0                	mov    %edx,%eax
83004e73:	01 c0                	add    %eax,%eax
83004e75:	01 d0                	add    %edx,%eax
83004e77:	89 c2                	mov    %eax,%edx
83004e79:	c1 ea 1f             	shr    $0x1f,%edx
83004e7c:	01 d0                	add    %edx,%eax
83004e7e:	d1 f8                	sar    %eax
83004e80:	89 45 d8             	mov    %eax,-0x28(%ebp)
83004e83:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004e86:	01 f8                	add    %edi,%eax
83004e88:	8d 50 01             	lea    0x1(%eax),%edx
83004e8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
83004e8e:	39 c2                	cmp    %eax,%edx
83004e90:	76 0b                	jbe    83004e9d <__sfvwrite_r+0x169>
83004e92:	8b 45 d0             	mov    -0x30(%ebp),%eax
83004e95:	01 f8                	add    %edi,%eax
83004e97:	83 c0 01             	add    $0x1,%eax
83004e9a:	89 45 d8             	mov    %eax,-0x28(%ebp)
83004e9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004ea1:	98                   	cwtl   
83004ea2:	25 00 04 00 00       	and    $0x400,%eax
83004ea7:	85 c0                	test   %eax,%eax
83004ea9:	74 4f                	je     83004efa <__sfvwrite_r+0x1c6>
83004eab:	8b 45 d8             	mov    -0x28(%ebp),%eax
83004eae:	83 ec 08             	sub    $0x8,%esp
83004eb1:	50                   	push   %eax
83004eb2:	ff 75 08             	push   0x8(%ebp)
83004eb5:	e8 d9 cf ff ff       	call   83001e93 <_malloc_r>
83004eba:	83 c4 10             	add    $0x10,%esp
83004ebd:	89 45 dc             	mov    %eax,-0x24(%ebp)
83004ec0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
83004ec4:	75 0e                	jne    83004ed4 <__sfvwrite_r+0x1a0>
83004ec6:	8b 45 08             	mov    0x8(%ebp),%eax
83004ec9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
83004ecf:	e9 e6 02 00 00       	jmp    830051ba <__sfvwrite_r+0x486>
83004ed4:	8b 55 d0             	mov    -0x30(%ebp),%edx
83004ed7:	8b 43 10             	mov    0x10(%ebx),%eax
83004eda:	83 ec 04             	sub    $0x4,%esp
83004edd:	52                   	push   %edx
83004ede:	50                   	push   %eax
83004edf:	ff 75 dc             	push   -0x24(%ebp)
83004ee2:	e8 c1 d8 ff ff       	call   830027a8 <memcpy>
83004ee7:	83 c4 10             	add    $0x10,%esp
83004eea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004eee:	66 25 7f fb          	and    $0xfb7f,%ax
83004ef2:	0c 80                	or     $0x80,%al
83004ef4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83004ef8:	eb 49                	jmp    83004f43 <__sfvwrite_r+0x20f>
83004efa:	8b 55 d8             	mov    -0x28(%ebp),%edx
83004efd:	8b 43 10             	mov    0x10(%ebx),%eax
83004f00:	83 ec 04             	sub    $0x4,%esp
83004f03:	52                   	push   %edx
83004f04:	50                   	push   %eax
83004f05:	ff 75 08             	push   0x8(%ebp)
83004f08:	e8 ea 08 00 00       	call   830057f7 <_realloc_r>
83004f0d:	83 c4 10             	add    $0x10,%esp
83004f10:	89 45 dc             	mov    %eax,-0x24(%ebp)
83004f13:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
83004f17:	75 2a                	jne    83004f43 <__sfvwrite_r+0x20f>
83004f19:	8b 43 10             	mov    0x10(%ebx),%eax
83004f1c:	83 ec 08             	sub    $0x8,%esp
83004f1f:	50                   	push   %eax
83004f20:	ff 75 08             	push   0x8(%ebp)
83004f23:	e8 d0 f8 ff ff       	call   830047f8 <_free_r>
83004f28:	83 c4 10             	add    $0x10,%esp
83004f2b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83004f2f:	24 7f                	and    $0x7f,%al
83004f31:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83004f35:	8b 45 08             	mov    0x8(%ebp),%eax
83004f38:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
83004f3e:	e9 77 02 00 00       	jmp    830051ba <__sfvwrite_r+0x486>
83004f43:	8b 45 dc             	mov    -0x24(%ebp),%eax
83004f46:	89 43 10             	mov    %eax,0x10(%ebx)
83004f49:	8b 55 d0             	mov    -0x30(%ebp),%edx
83004f4c:	8b 45 dc             	mov    -0x24(%ebp),%eax
83004f4f:	01 d0                	add    %edx,%eax
83004f51:	89 03                	mov    %eax,(%ebx)
83004f53:	8b 45 d8             	mov    -0x28(%ebp),%eax
83004f56:	89 43 14             	mov    %eax,0x14(%ebx)
83004f59:	89 fe                	mov    %edi,%esi
83004f5b:	8b 45 d8             	mov    -0x28(%ebp),%eax
83004f5e:	2b 45 d0             	sub    -0x30(%ebp),%eax
83004f61:	89 43 08             	mov    %eax,0x8(%ebx)
83004f64:	89 f0                	mov    %esi,%eax
83004f66:	39 c7                	cmp    %eax,%edi
83004f68:	73 02                	jae    83004f6c <__sfvwrite_r+0x238>
83004f6a:	89 fe                	mov    %edi,%esi
83004f6c:	89 f2                	mov    %esi,%edx
83004f6e:	8b 03                	mov    (%ebx),%eax
83004f70:	83 ec 04             	sub    $0x4,%esp
83004f73:	52                   	push   %edx
83004f74:	ff 75 c4             	push   -0x3c(%ebp)
83004f77:	50                   	push   %eax
83004f78:	e8 a3 06 00 00       	call   83005620 <memmove>
83004f7d:	83 c4 10             	add    $0x10,%esp
83004f80:	8b 43 08             	mov    0x8(%ebx),%eax
83004f83:	29 f0                	sub    %esi,%eax
83004f85:	89 43 08             	mov    %eax,0x8(%ebx)
83004f88:	8b 03                	mov    (%ebx),%eax
83004f8a:	89 f2                	mov    %esi,%edx
83004f8c:	01 d0                	add    %edx,%eax
83004f8e:	89 03                	mov    %eax,(%ebx)
83004f90:	89 fe                	mov    %edi,%esi
83004f92:	e9 9d 00 00 00       	jmp    83005034 <__sfvwrite_r+0x300>
83004f97:	8b 13                	mov    (%ebx),%edx
83004f99:	8b 43 10             	mov    0x10(%ebx),%eax
83004f9c:	39 c2                	cmp    %eax,%edx
83004f9e:	77 07                	ja     83004fa7 <__sfvwrite_r+0x273>
83004fa0:	8b 43 14             	mov    0x14(%ebx),%eax
83004fa3:	39 c7                	cmp    %eax,%edi
83004fa5:	73 4c                	jae    83004ff3 <__sfvwrite_r+0x2bf>
83004fa7:	89 f0                	mov    %esi,%eax
83004fa9:	39 c7                	cmp    %eax,%edi
83004fab:	0f 46 c7             	cmovbe %edi,%eax
83004fae:	89 c6                	mov    %eax,%esi
83004fb0:	89 f2                	mov    %esi,%edx
83004fb2:	8b 03                	mov    (%ebx),%eax
83004fb4:	83 ec 04             	sub    $0x4,%esp
83004fb7:	52                   	push   %edx
83004fb8:	ff 75 c4             	push   -0x3c(%ebp)
83004fbb:	50                   	push   %eax
83004fbc:	e8 5f 06 00 00       	call   83005620 <memmove>
83004fc1:	83 c4 10             	add    $0x10,%esp
83004fc4:	8b 43 08             	mov    0x8(%ebx),%eax
83004fc7:	29 f0                	sub    %esi,%eax
83004fc9:	89 43 08             	mov    %eax,0x8(%ebx)
83004fcc:	8b 03                	mov    (%ebx),%eax
83004fce:	89 f2                	mov    %esi,%edx
83004fd0:	01 d0                	add    %edx,%eax
83004fd2:	89 03                	mov    %eax,(%ebx)
83004fd4:	8b 43 08             	mov    0x8(%ebx),%eax
83004fd7:	85 c0                	test   %eax,%eax
83004fd9:	75 58                	jne    83005033 <__sfvwrite_r+0x2ff>
83004fdb:	83 ec 08             	sub    $0x8,%esp
83004fde:	53                   	push   %ebx
83004fdf:	ff 75 08             	push   0x8(%ebp)
83004fe2:	e8 72 f4 ff ff       	call   83004459 <_fflush_r>
83004fe7:	83 c4 10             	add    $0x10,%esp
83004fea:	85 c0                	test   %eax,%eax
83004fec:	74 45                	je     83005033 <__sfvwrite_r+0x2ff>
83004fee:	e9 c7 01 00 00       	jmp    830051ba <__sfvwrite_r+0x486>
83004ff3:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
83004ff9:	77 04                	ja     83004fff <__sfvwrite_r+0x2cb>
83004ffb:	89 f8                	mov    %edi,%eax
83004ffd:	eb 05                	jmp    83005004 <__sfvwrite_r+0x2d0>
83004fff:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
83005004:	8b 4b 14             	mov    0x14(%ebx),%ecx
83005007:	99                   	cltd   
83005008:	f7 f9                	idiv   %ecx
8300500a:	89 c2                	mov    %eax,%edx
8300500c:	8b 43 14             	mov    0x14(%ebx),%eax
8300500f:	89 d6                	mov    %edx,%esi
83005011:	0f af f0             	imul   %eax,%esi
83005014:	8b 53 24             	mov    0x24(%ebx),%edx
83005017:	8b 43 1c             	mov    0x1c(%ebx),%eax
8300501a:	56                   	push   %esi
8300501b:	ff 75 c4             	push   -0x3c(%ebp)
8300501e:	50                   	push   %eax
8300501f:	ff 75 08             	push   0x8(%ebp)
83005022:	ff d2                	call   *%edx
83005024:	83 c4 10             	add    $0x10,%esp
83005027:	89 c6                	mov    %eax,%esi
83005029:	85 f6                	test   %esi,%esi
8300502b:	0f 8e 85 01 00 00    	jle    830051b6 <__sfvwrite_r+0x482>
83005031:	eb 01                	jmp    83005034 <__sfvwrite_r+0x300>
83005033:	90                   	nop
83005034:	89 f0                	mov    %esi,%eax
83005036:	01 45 c4             	add    %eax,-0x3c(%ebp)
83005039:	89 f0                	mov    %esi,%eax
8300503b:	29 c7                	sub    %eax,%edi
8300503d:	8b 45 10             	mov    0x10(%ebp),%eax
83005040:	8b 40 08             	mov    0x8(%eax),%eax
83005043:	89 f2                	mov    %esi,%edx
83005045:	29 d0                	sub    %edx,%eax
83005047:	8b 4d 10             	mov    0x10(%ebp),%ecx
8300504a:	89 41 08             	mov    %eax,0x8(%ecx)
8300504d:	8b 45 10             	mov    0x10(%ebp),%eax
83005050:	8b 40 08             	mov    0x8(%eax),%eax
83005053:	85 c0                	test   %eax,%eax
83005055:	0f 85 d4 fd ff ff    	jne    83004e2f <__sfvwrite_r+0xfb>
8300505b:	e9 4c 01 00 00       	jmp    830051ac <__sfvwrite_r+0x478>
83005060:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83005067:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8300506e:	eb 18                	jmp    83005088 <__sfvwrite_r+0x354>
83005070:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83005077:	8b 45 c0             	mov    -0x40(%ebp),%eax
8300507a:	8b 08                	mov    (%eax),%ecx
8300507c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8300507f:	8b 78 04             	mov    0x4(%eax),%edi
83005082:	83 c0 08             	add    $0x8,%eax
83005085:	89 45 c0             	mov    %eax,-0x40(%ebp)
83005088:	85 ff                	test   %edi,%edi
8300508a:	74 e4                	je     83005070 <__sfvwrite_r+0x33c>
8300508c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
83005090:	75 32                	jne    830050c4 <__sfvwrite_r+0x390>
83005092:	83 ec 04             	sub    $0x4,%esp
83005095:	57                   	push   %edi
83005096:	6a 0a                	push   $0xa
83005098:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8300509b:	56                   	push   %esi
8300509c:	e8 1f d6 ff ff       	call   830026c0 <memchr>
830050a1:	83 c4 10             	add    $0x10,%esp
830050a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
830050a7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
830050ab:	74 0a                	je     830050b7 <__sfvwrite_r+0x383>
830050ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax
830050b0:	83 c0 01             	add    $0x1,%eax
830050b3:	29 f0                	sub    %esi,%eax
830050b5:	eb 03                	jmp    830050ba <__sfvwrite_r+0x386>
830050b7:	8d 47 01             	lea    0x1(%edi),%eax
830050ba:	89 45 e0             	mov    %eax,-0x20(%ebp)
830050bd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
830050c4:	8b 45 e0             	mov    -0x20(%ebp),%eax
830050c7:	39 c7                	cmp    %eax,%edi
830050c9:	0f 46 c7             	cmovbe %edi,%eax
830050cc:	89 c1                	mov    %eax,%ecx
830050ce:	8b 53 08             	mov    0x8(%ebx),%edx
830050d1:	8b 43 14             	mov    0x14(%ebx),%eax
830050d4:	8d 34 02             	lea    (%edx,%eax,1),%esi
830050d7:	8b 13                	mov    (%ebx),%edx
830050d9:	8b 43 10             	mov    0x10(%ebx),%eax
830050dc:	39 c2                	cmp    %eax,%edx
830050de:	76 38                	jbe    83005118 <__sfvwrite_r+0x3e4>
830050e0:	39 f1                	cmp    %esi,%ecx
830050e2:	7e 34                	jle    83005118 <__sfvwrite_r+0x3e4>
830050e4:	89 f2                	mov    %esi,%edx
830050e6:	8b 03                	mov    (%ebx),%eax
830050e8:	83 ec 04             	sub    $0x4,%esp
830050eb:	52                   	push   %edx
830050ec:	ff 75 c4             	push   -0x3c(%ebp)
830050ef:	50                   	push   %eax
830050f0:	e8 2b 05 00 00       	call   83005620 <memmove>
830050f5:	83 c4 10             	add    $0x10,%esp
830050f8:	8b 03                	mov    (%ebx),%eax
830050fa:	89 f2                	mov    %esi,%edx
830050fc:	01 d0                	add    %edx,%eax
830050fe:	89 03                	mov    %eax,(%ebx)
83005100:	83 ec 08             	sub    $0x8,%esp
83005103:	53                   	push   %ebx
83005104:	ff 75 08             	push   0x8(%ebp)
83005107:	e8 4d f3 ff ff       	call   83004459 <_fflush_r>
8300510c:	83 c4 10             	add    $0x10,%esp
8300510f:	85 c0                	test   %eax,%eax
83005111:	74 4f                	je     83005162 <__sfvwrite_r+0x42e>
83005113:	e9 a2 00 00 00       	jmp    830051ba <__sfvwrite_r+0x486>
83005118:	8b 73 14             	mov    0x14(%ebx),%esi
8300511b:	89 c8                	mov    %ecx,%eax
8300511d:	39 c6                	cmp    %eax,%esi
8300511f:	7f 1b                	jg     8300513c <__sfvwrite_r+0x408>
83005121:	8b 53 24             	mov    0x24(%ebx),%edx
83005124:	8b 43 1c             	mov    0x1c(%ebx),%eax
83005127:	56                   	push   %esi
83005128:	ff 75 c4             	push   -0x3c(%ebp)
8300512b:	50                   	push   %eax
8300512c:	ff 75 08             	push   0x8(%ebp)
8300512f:	ff d2                	call   *%edx
83005131:	83 c4 10             	add    $0x10,%esp
83005134:	89 c6                	mov    %eax,%esi
83005136:	85 f6                	test   %esi,%esi
83005138:	7f 28                	jg     83005162 <__sfvwrite_r+0x42e>
8300513a:	eb 7e                	jmp    830051ba <__sfvwrite_r+0x486>
8300513c:	89 ce                	mov    %ecx,%esi
8300513e:	89 f2                	mov    %esi,%edx
83005140:	8b 03                	mov    (%ebx),%eax
83005142:	83 ec 04             	sub    $0x4,%esp
83005145:	52                   	push   %edx
83005146:	ff 75 c4             	push   -0x3c(%ebp)
83005149:	50                   	push   %eax
8300514a:	e8 d1 04 00 00       	call   83005620 <memmove>
8300514f:	83 c4 10             	add    $0x10,%esp
83005152:	8b 43 08             	mov    0x8(%ebx),%eax
83005155:	29 f0                	sub    %esi,%eax
83005157:	89 43 08             	mov    %eax,0x8(%ebx)
8300515a:	8b 03                	mov    (%ebx),%eax
8300515c:	89 f2                	mov    %esi,%edx
8300515e:	01 d0                	add    %edx,%eax
83005160:	89 03                	mov    %eax,(%ebx)
83005162:	29 75 e0             	sub    %esi,-0x20(%ebp)
83005165:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
83005169:	75 1a                	jne    83005185 <__sfvwrite_r+0x451>
8300516b:	83 ec 08             	sub    $0x8,%esp
8300516e:	53                   	push   %ebx
8300516f:	ff 75 08             	push   0x8(%ebp)
83005172:	e8 e2 f2 ff ff       	call   83004459 <_fflush_r>
83005177:	83 c4 10             	add    $0x10,%esp
8300517a:	85 c0                	test   %eax,%eax
8300517c:	75 3b                	jne    830051b9 <__sfvwrite_r+0x485>
8300517e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
83005185:	89 f0                	mov    %esi,%eax
83005187:	01 45 c4             	add    %eax,-0x3c(%ebp)
8300518a:	89 f0                	mov    %esi,%eax
8300518c:	29 c7                	sub    %eax,%edi
8300518e:	8b 45 10             	mov    0x10(%ebp),%eax
83005191:	8b 40 08             	mov    0x8(%eax),%eax
83005194:	89 f2                	mov    %esi,%edx
83005196:	29 d0                	sub    %edx,%eax
83005198:	8b 4d 10             	mov    0x10(%ebp),%ecx
8300519b:	89 41 08             	mov    %eax,0x8(%ecx)
8300519e:	8b 45 10             	mov    0x10(%ebp),%eax
830051a1:	8b 40 08             	mov    0x8(%eax),%eax
830051a4:	85 c0                	test   %eax,%eax
830051a6:	0f 85 dc fe ff ff    	jne    83005088 <__sfvwrite_r+0x354>
830051ac:	b8 00 00 00 00       	mov    $0x0,%eax
830051b1:	eb 17                	jmp    830051ca <__sfvwrite_r+0x496>
830051b3:	90                   	nop
830051b4:	eb 04                	jmp    830051ba <__sfvwrite_r+0x486>
830051b6:	90                   	nop
830051b7:	eb 01                	jmp    830051ba <__sfvwrite_r+0x486>
830051b9:	90                   	nop
830051ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830051be:	83 c8 40             	or     $0x40,%eax
830051c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830051c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830051ca:	8d 65 f4             	lea    -0xc(%ebp),%esp
830051cd:	5b                   	pop    %ebx
830051ce:	5e                   	pop    %esi
830051cf:	5f                   	pop    %edi
830051d0:	5d                   	pop    %ebp
830051d1:	c3                   	ret    

830051d2 <_findenv>:
830051d2:	55                   	push   %ebp
830051d3:	89 e5                	mov    %esp,%ebp
830051d5:	83 ec 08             	sub    $0x8,%esp
830051d8:	8b 55 08             	mov    0x8(%ebp),%edx
830051db:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830051e0:	83 ec 04             	sub    $0x4,%esp
830051e3:	ff 75 0c             	push   0xc(%ebp)
830051e6:	52                   	push   %edx
830051e7:	50                   	push   %eax
830051e8:	e8 25 00 00 00       	call   83005212 <_findenv_r>
830051ed:	83 c4 10             	add    $0x10,%esp
830051f0:	c9                   	leave  
830051f1:	c3                   	ret    

830051f2 <getenv>:
830051f2:	55                   	push   %ebp
830051f3:	89 e5                	mov    %esp,%ebp
830051f5:	83 ec 18             	sub    $0x18,%esp
830051f8:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830051fd:	83 ec 04             	sub    $0x4,%esp
83005200:	8d 55 f4             	lea    -0xc(%ebp),%edx
83005203:	52                   	push   %edx
83005204:	ff 75 08             	push   0x8(%ebp)
83005207:	50                   	push   %eax
83005208:	e8 05 00 00 00       	call   83005212 <_findenv_r>
8300520d:	83 c4 10             	add    $0x10,%esp
83005210:	c9                   	leave  
83005211:	c3                   	ret    

83005212 <_findenv_r>:
83005212:	55                   	push   %ebp
83005213:	89 e5                	mov    %esp,%ebp
83005215:	57                   	push   %edi
83005216:	56                   	push   %esi
83005217:	53                   	push   %ebx
83005218:	83 ec 1c             	sub    $0x1c,%esp
8300521b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8300521e:	83 ec 0c             	sub    $0xc,%esp
83005221:	ff 75 08             	push   0x8(%ebp)
83005224:	e8 a7 12 00 00       	call   830064d0 <__env_lock>
83005229:	83 c4 10             	add    $0x10,%esp
8300522c:	a1 30 72 00 83       	mov    0x83007230,%eax
83005231:	8b 00                	mov    (%eax),%eax
83005233:	85 c0                	test   %eax,%eax
83005235:	75 18                	jne    8300524f <_findenv_r+0x3d>
83005237:	83 ec 0c             	sub    $0xc,%esp
8300523a:	ff 75 08             	push   0x8(%ebp)
8300523d:	e8 94 12 00 00       	call   830064d6 <__env_unlock>
83005242:	83 c4 10             	add    $0x10,%esp
83005245:	b8 00 00 00 00       	mov    $0x0,%eax
8300524a:	e9 a8 00 00 00       	jmp    830052f7 <_findenv_r+0xe5>
8300524f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
83005252:	eb 04                	jmp    83005258 <_findenv_r+0x46>
83005254:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
83005258:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300525b:	0f b6 00             	movzbl (%eax),%eax
8300525e:	84 c0                	test   %al,%al
83005260:	74 0a                	je     8300526c <_findenv_r+0x5a>
83005262:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83005265:	0f b6 00             	movzbl (%eax),%eax
83005268:	3c 3d                	cmp    $0x3d,%al
8300526a:	75 e8                	jne    83005254 <_findenv_r+0x42>
8300526c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8300526f:	0f b6 00             	movzbl (%eax),%eax
83005272:	3c 3d                	cmp    $0x3d,%al
83005274:	74 6e                	je     830052e4 <_findenv_r+0xd2>
83005276:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83005279:	29 f8                	sub    %edi,%eax
8300527b:	89 c6                	mov    %eax,%esi
8300527d:	a1 30 72 00 83       	mov    0x83007230,%eax
83005282:	8b 18                	mov    (%eax),%ebx
83005284:	eb 58                	jmp    830052de <_findenv_r+0xcc>
83005286:	89 f2                	mov    %esi,%edx
83005288:	8b 03                	mov    (%ebx),%eax
8300528a:	83 ec 04             	sub    $0x4,%esp
8300528d:	52                   	push   %edx
8300528e:	57                   	push   %edi
8300528f:	50                   	push   %eax
83005290:	e8 d3 0f 00 00       	call   83006268 <strncmp>
83005295:	83 c4 10             	add    $0x10,%esp
83005298:	85 c0                	test   %eax,%eax
8300529a:	75 3f                	jne    830052db <_findenv_r+0xc9>
8300529c:	8b 03                	mov    (%ebx),%eax
8300529e:	89 f2                	mov    %esi,%edx
830052a0:	01 d0                	add    %edx,%eax
830052a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830052a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
830052a8:	0f b6 00             	movzbl (%eax),%eax
830052ab:	3c 3d                	cmp    $0x3d,%al
830052ad:	75 2c                	jne    830052db <_findenv_r+0xc9>
830052af:	a1 30 72 00 83       	mov    0x83007230,%eax
830052b4:	8b 10                	mov    (%eax),%edx
830052b6:	89 d8                	mov    %ebx,%eax
830052b8:	29 d0                	sub    %edx,%eax
830052ba:	c1 f8 02             	sar    $0x2,%eax
830052bd:	89 c2                	mov    %eax,%edx
830052bf:	8b 45 10             	mov    0x10(%ebp),%eax
830052c2:	89 10                	mov    %edx,(%eax)
830052c4:	83 ec 0c             	sub    $0xc,%esp
830052c7:	ff 75 08             	push   0x8(%ebp)
830052ca:	e8 07 12 00 00       	call   830064d6 <__env_unlock>
830052cf:	83 c4 10             	add    $0x10,%esp
830052d2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
830052d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
830052d9:	eb 1c                	jmp    830052f7 <_findenv_r+0xe5>
830052db:	83 c3 04             	add    $0x4,%ebx
830052de:	8b 03                	mov    (%ebx),%eax
830052e0:	85 c0                	test   %eax,%eax
830052e2:	75 a2                	jne    83005286 <_findenv_r+0x74>
830052e4:	83 ec 0c             	sub    $0xc,%esp
830052e7:	ff 75 08             	push   0x8(%ebp)
830052ea:	e8 e7 11 00 00       	call   830064d6 <__env_unlock>
830052ef:	83 c4 10             	add    $0x10,%esp
830052f2:	b8 00 00 00 00       	mov    $0x0,%eax
830052f7:	8d 65 f4             	lea    -0xc(%ebp),%esp
830052fa:	5b                   	pop    %ebx
830052fb:	5e                   	pop    %esi
830052fc:	5f                   	pop    %edi
830052fd:	5d                   	pop    %ebp
830052fe:	c3                   	ret    

830052ff <_getenv_r>:
830052ff:	55                   	push   %ebp
83005300:	89 e5                	mov    %esp,%ebp
83005302:	83 ec 18             	sub    $0x18,%esp
83005305:	83 ec 04             	sub    $0x4,%esp
83005308:	8d 45 f4             	lea    -0xc(%ebp),%eax
8300530b:	50                   	push   %eax
8300530c:	ff 75 0c             	push   0xc(%ebp)
8300530f:	ff 75 08             	push   0x8(%ebp)
83005312:	e8 fb fe ff ff       	call   83005212 <_findenv_r>
83005317:	83 c4 10             	add    $0x10,%esp
8300531a:	c9                   	leave  
8300531b:	c3                   	ret    

8300531c <__get_global_locale>:
8300531c:	55                   	push   %ebp
8300531d:	89 e5                	mov    %esp,%ebp
8300531f:	b8 40 72 00 83       	mov    $0x83007240,%eax
83005324:	5d                   	pop    %ebp
83005325:	c3                   	ret    

83005326 <__get_current_locale>:
83005326:	55                   	push   %ebp
83005327:	89 e5                	mov    %esp,%ebp
83005329:	e8 ee ff ff ff       	call   8300531c <__get_global_locale>
8300532e:	5d                   	pop    %ebp
8300532f:	c3                   	ret    

83005330 <_setlocale_r>:
83005330:	55                   	push   %ebp
83005331:	89 e5                	mov    %esp,%ebp
83005333:	83 ec 08             	sub    $0x8,%esp
83005336:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8300533a:	74 4c                	je     83005388 <_setlocale_r+0x58>
8300533c:	83 ec 08             	sub    $0x8,%esp
8300533f:	68 a4 69 00 83       	push   $0x830069a4
83005344:	ff 75 10             	push   0x10(%ebp)
83005347:	e8 00 e6 ff ff       	call   8300394c <strcmp>
8300534c:	83 c4 10             	add    $0x10,%esp
8300534f:	85 c0                	test   %eax,%eax
83005351:	74 35                	je     83005388 <_setlocale_r+0x58>
83005353:	83 ec 08             	sub    $0x8,%esp
83005356:	68 aa 69 00 83       	push   $0x830069aa
8300535b:	ff 75 10             	push   0x10(%ebp)
8300535e:	e8 e9 e5 ff ff       	call   8300394c <strcmp>
83005363:	83 c4 10             	add    $0x10,%esp
83005366:	85 c0                	test   %eax,%eax
83005368:	74 1e                	je     83005388 <_setlocale_r+0x58>
8300536a:	83 ec 08             	sub    $0x8,%esp
8300536d:	68 a3 69 00 83       	push   $0x830069a3
83005372:	ff 75 10             	push   0x10(%ebp)
83005375:	e8 d2 e5 ff ff       	call   8300394c <strcmp>
8300537a:	83 c4 10             	add    $0x10,%esp
8300537d:	85 c0                	test   %eax,%eax
8300537f:	74 07                	je     83005388 <_setlocale_r+0x58>
83005381:	b8 00 00 00 00       	mov    $0x0,%eax
83005386:	eb 05                	jmp    8300538d <_setlocale_r+0x5d>
83005388:	b8 aa 69 00 83       	mov    $0x830069aa,%eax
8300538d:	c9                   	leave  
8300538e:	c3                   	ret    

8300538f <__locale_mb_cur_max>:
8300538f:	55                   	push   %ebp
83005390:	89 e5                	mov    %esp,%ebp
83005392:	e8 8f ff ff ff       	call   83005326 <__get_current_locale>
83005397:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8300539e:	0f be c0             	movsbl %al,%eax
830053a1:	5d                   	pop    %ebp
830053a2:	c3                   	ret    

830053a3 <setlocale>:
830053a3:	55                   	push   %ebp
830053a4:	89 e5                	mov    %esp,%ebp
830053a6:	83 ec 08             	sub    $0x8,%esp
830053a9:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830053ae:	83 ec 04             	sub    $0x4,%esp
830053b1:	ff 75 0c             	push   0xc(%ebp)
830053b4:	ff 75 08             	push   0x8(%ebp)
830053b7:	50                   	push   %eax
830053b8:	e8 73 ff ff ff       	call   83005330 <_setlocale_r>
830053bd:	83 c4 10             	add    $0x10,%esp
830053c0:	c9                   	leave  
830053c1:	c3                   	ret    

830053c2 <_lseek_r>:
830053c2:	55                   	push   %ebp
830053c3:	89 e5                	mov    %esp,%ebp
830053c5:	83 ec 18             	sub    $0x18,%esp
830053c8:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
830053cf:	00 00 00 
830053d2:	83 ec 04             	sub    $0x4,%esp
830053d5:	ff 75 14             	push   0x14(%ebp)
830053d8:	ff 75 10             	push   0x10(%ebp)
830053db:	ff 75 0c             	push   0xc(%ebp)
830053de:	e8 29 ae ff ff       	call   8300020c <lseek>
830053e3:	83 c4 10             	add    $0x10,%esp
830053e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
830053e9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
830053ed:	75 14                	jne    83005403 <_lseek_r+0x41>
830053ef:	a1 34 74 00 83       	mov    0x83007434,%eax
830053f4:	85 c0                	test   %eax,%eax
830053f6:	74 0b                	je     83005403 <_lseek_r+0x41>
830053f8:	8b 15 34 74 00 83    	mov    0x83007434,%edx
830053fe:	8b 45 08             	mov    0x8(%ebp),%eax
83005401:	89 10                	mov    %edx,(%eax)
83005403:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005406:	c9                   	leave  
83005407:	c3                   	ret    

83005408 <__smakebuf_r>:
83005408:	55                   	push   %ebp
83005409:	89 e5                	mov    %esp,%ebp
8300540b:	56                   	push   %esi
8300540c:	53                   	push   %ebx
8300540d:	83 ec 10             	sub    $0x10,%esp
83005410:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83005413:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83005417:	98                   	cwtl   
83005418:	83 e0 02             	and    $0x2,%eax
8300541b:	85 c0                	test   %eax,%eax
8300541d:	74 16                	je     83005435 <__smakebuf_r+0x2d>
8300541f:	8d 43 43             	lea    0x43(%ebx),%eax
83005422:	89 03                	mov    %eax,(%ebx)
83005424:	8b 03                	mov    (%ebx),%eax
83005426:	89 43 10             	mov    %eax,0x10(%ebx)
83005429:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
83005430:	e9 b9 00 00 00       	jmp    830054ee <__smakebuf_r+0xe6>
83005435:	8d 45 ec             	lea    -0x14(%ebp),%eax
83005438:	50                   	push   %eax
83005439:	8d 45 f0             	lea    -0x10(%ebp),%eax
8300543c:	50                   	push   %eax
8300543d:	53                   	push   %ebx
8300543e:	ff 75 08             	push   0x8(%ebp)
83005441:	e8 af 00 00 00       	call   830054f5 <__swhatbuf_r>
83005446:	83 c4 10             	add    $0x10,%esp
83005449:	89 45 f4             	mov    %eax,-0xc(%ebp)
8300544c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300544f:	83 ec 08             	sub    $0x8,%esp
83005452:	50                   	push   %eax
83005453:	ff 75 08             	push   0x8(%ebp)
83005456:	e8 38 ca ff ff       	call   83001e93 <_malloc_r>
8300545b:	83 c4 10             	add    $0x10,%esp
8300545e:	89 c6                	mov    %eax,%esi
83005460:	85 f6                	test   %esi,%esi
83005462:	75 2f                	jne    83005493 <__smakebuf_r+0x8b>
83005464:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83005468:	98                   	cwtl   
83005469:	25 00 02 00 00       	and    $0x200,%eax
8300546e:	85 c0                	test   %eax,%eax
83005470:	75 7c                	jne    830054ee <__smakebuf_r+0xe6>
83005472:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
83005476:	83 e0 fc             	and    $0xfffffffc,%eax
83005479:	83 c8 02             	or     $0x2,%eax
8300547c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
83005480:	8d 43 43             	lea    0x43(%ebx),%eax
83005483:	89 03                	mov    %eax,(%ebx)
83005485:	8b 03                	mov    (%ebx),%eax
83005487:	89 43 10             	mov    %eax,0x10(%ebx)
8300548a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
83005491:	eb 5b                	jmp    830054ee <__smakebuf_r+0xe6>
83005493:	8b 45 08             	mov    0x8(%ebp),%eax
83005496:	c7 40 3c 82 0a 00 83 	movl   $0x83000a82,0x3c(%eax)
8300549d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830054a1:	0c 80                	or     $0x80,%al
830054a3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830054a7:	89 33                	mov    %esi,(%ebx)
830054a9:	8b 03                	mov    (%ebx),%eax
830054ab:	89 43 10             	mov    %eax,0x10(%ebx)
830054ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
830054b1:	89 43 14             	mov    %eax,0x14(%ebx)
830054b4:	8b 45 ec             	mov    -0x14(%ebp),%eax
830054b7:	85 c0                	test   %eax,%eax
830054b9:	74 26                	je     830054e1 <__smakebuf_r+0xd9>
830054bb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
830054bf:	98                   	cwtl   
830054c0:	83 ec 08             	sub    $0x8,%esp
830054c3:	50                   	push   %eax
830054c4:	ff 75 08             	push   0x8(%ebp)
830054c7:	e8 53 10 00 00       	call   8300651f <_isatty_r>
830054cc:	83 c4 10             	add    $0x10,%esp
830054cf:	85 c0                	test   %eax,%eax
830054d1:	74 0e                	je     830054e1 <__smakebuf_r+0xd9>
830054d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
830054d7:	83 e0 fc             	and    $0xfffffffc,%eax
830054da:	83 c8 01             	or     $0x1,%eax
830054dd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830054e1:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
830054e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
830054e8:	09 d0                	or     %edx,%eax
830054ea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
830054ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
830054f1:	5b                   	pop    %ebx
830054f2:	5e                   	pop    %esi
830054f3:	5d                   	pop    %ebp
830054f4:	c3                   	ret    

830054f5 <__swhatbuf_r>:
830054f5:	55                   	push   %ebp
830054f6:	89 e5                	mov    %esp,%ebp
830054f8:	83 ec 58             	sub    $0x58,%esp
830054fb:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
83005502:	8b 45 0c             	mov    0xc(%ebp),%eax
83005505:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
83005509:	66 85 c0             	test   %ax,%ax
8300550c:	78 1f                	js     8300552d <__swhatbuf_r+0x38>
8300550e:	8b 45 0c             	mov    0xc(%ebp),%eax
83005511:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
83005515:	98                   	cwtl   
83005516:	83 ec 04             	sub    $0x4,%esp
83005519:	8d 55 ac             	lea    -0x54(%ebp),%edx
8300551c:	52                   	push   %edx
8300551d:	50                   	push   %eax
8300551e:	ff 75 08             	push   0x8(%ebp)
83005521:	e8 b6 0f 00 00       	call   830064dc <_fstat_r>
83005526:	83 c4 10             	add    $0x10,%esp
83005529:	85 c0                	test   %eax,%eax
8300552b:	79 35                	jns    83005562 <__swhatbuf_r+0x6d>
8300552d:	8b 45 14             	mov    0x14(%ebp),%eax
83005530:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
83005536:	8b 45 0c             	mov    0xc(%ebp),%eax
83005539:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8300553d:	98                   	cwtl   
8300553e:	25 80 00 00 00       	and    $0x80,%eax
83005543:	85 c0                	test   %eax,%eax
83005545:	74 0b                	je     83005552 <__swhatbuf_r+0x5d>
83005547:	8b 45 10             	mov    0x10(%ebp),%eax
8300554a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
83005550:	eb 09                	jmp    8300555b <__swhatbuf_r+0x66>
83005552:	8b 45 10             	mov    0x10(%ebp),%eax
83005555:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8300555b:	b8 00 00 00 00       	mov    $0x0,%eax
83005560:	eb 24                	jmp    83005586 <__swhatbuf_r+0x91>
83005562:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005565:	25 00 f0 00 00       	and    $0xf000,%eax
8300556a:	3d 00 20 00 00       	cmp    $0x2000,%eax
8300556f:	0f 94 c0             	sete   %al
83005572:	0f b6 d0             	movzbl %al,%edx
83005575:	8b 45 14             	mov    0x14(%ebp),%eax
83005578:	89 10                	mov    %edx,(%eax)
8300557a:	8b 45 10             	mov    0x10(%ebp),%eax
8300557d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
83005583:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005586:	c9                   	leave  
83005587:	c3                   	ret    

83005588 <__get_global_locale>:
83005588:	55                   	push   %ebp
83005589:	89 e5                	mov    %esp,%ebp
8300558b:	b8 40 72 00 83       	mov    $0x83007240,%eax
83005590:	5d                   	pop    %ebp
83005591:	c3                   	ret    

83005592 <__get_current_locale>:
83005592:	55                   	push   %ebp
83005593:	89 e5                	mov    %esp,%ebp
83005595:	e8 ee ff ff ff       	call   83005588 <__get_global_locale>
8300559a:	5d                   	pop    %ebp
8300559b:	c3                   	ret    

8300559c <_mbtowc_r>:
8300559c:	55                   	push   %ebp
8300559d:	89 e5                	mov    %esp,%ebp
8300559f:	83 ec 08             	sub    $0x8,%esp
830055a2:	e8 eb ff ff ff       	call   83005592 <__get_current_locale>
830055a7:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
830055ad:	83 ec 0c             	sub    $0xc,%esp
830055b0:	ff 75 18             	push   0x18(%ebp)
830055b3:	ff 75 14             	push   0x14(%ebp)
830055b6:	ff 75 10             	push   0x10(%ebp)
830055b9:	ff 75 0c             	push   0xc(%ebp)
830055bc:	ff 75 08             	push   0x8(%ebp)
830055bf:	ff d0                	call   *%eax
830055c1:	83 c4 20             	add    $0x20,%esp
830055c4:	c9                   	leave  
830055c5:	c3                   	ret    

830055c6 <__ascii_mbtowc>:
830055c6:	55                   	push   %ebp
830055c7:	89 e5                	mov    %esp,%ebp
830055c9:	83 ec 10             	sub    $0x10,%esp
830055cc:	8b 45 10             	mov    0x10(%ebp),%eax
830055cf:	89 45 fc             	mov    %eax,-0x4(%ebp)
830055d2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
830055d6:	75 06                	jne    830055de <__ascii_mbtowc+0x18>
830055d8:	8d 45 f8             	lea    -0x8(%ebp),%eax
830055db:	89 45 0c             	mov    %eax,0xc(%ebp)
830055de:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
830055e2:	75 07                	jne    830055eb <__ascii_mbtowc+0x25>
830055e4:	b8 00 00 00 00       	mov    $0x0,%eax
830055e9:	eb 31                	jmp    8300561c <__ascii_mbtowc+0x56>
830055eb:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
830055ef:	75 07                	jne    830055f8 <__ascii_mbtowc+0x32>
830055f1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
830055f6:	eb 24                	jmp    8300561c <__ascii_mbtowc+0x56>
830055f8:	8b 45 fc             	mov    -0x4(%ebp),%eax
830055fb:	0f b6 00             	movzbl (%eax),%eax
830055fe:	0f b6 d0             	movzbl %al,%edx
83005601:	8b 45 0c             	mov    0xc(%ebp),%eax
83005604:	89 10                	mov    %edx,(%eax)
83005606:	8b 45 fc             	mov    -0x4(%ebp),%eax
83005609:	0f b6 00             	movzbl (%eax),%eax
8300560c:	84 c0                	test   %al,%al
8300560e:	75 07                	jne    83005617 <__ascii_mbtowc+0x51>
83005610:	b8 00 00 00 00       	mov    $0x0,%eax
83005615:	eb 05                	jmp    8300561c <__ascii_mbtowc+0x56>
83005617:	b8 01 00 00 00       	mov    $0x1,%eax
8300561c:	c9                   	leave  
8300561d:	c3                   	ret    
8300561e:	66 90                	xchg   %ax,%ax

83005620 <memmove>:
83005620:	55                   	push   %ebp
83005621:	89 e5                	mov    %esp,%ebp
83005623:	56                   	push   %esi
83005624:	57                   	push   %edi
83005625:	53                   	push   %ebx
83005626:	8b 7d 08             	mov    0x8(%ebp),%edi
83005629:	8b 4d 10             	mov    0x10(%ebp),%ecx
8300562c:	8b 75 0c             	mov    0xc(%ebp),%esi
8300562f:	fc                   	cld    
83005630:	39 fe                	cmp    %edi,%esi
83005632:	73 43                	jae    83005677 <memmove+0x57>
83005634:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
83005638:	39 df                	cmp    %ebx,%edi
8300563a:	77 3b                	ja     83005677 <memmove+0x57>
8300563c:	01 ce                	add    %ecx,%esi
8300563e:	01 cf                	add    %ecx,%edi
83005640:	fd                   	std    
83005641:	83 f9 08             	cmp    $0x8,%ecx
83005644:	76 2b                	jbe    83005671 <memmove+0x51>
83005646:	89 fa                	mov    %edi,%edx
83005648:	89 cb                	mov    %ecx,%ebx
8300564a:	83 e2 03             	and    $0x3,%edx
8300564d:	74 0c                	je     8300565b <memmove+0x3b>
8300564f:	89 d1                	mov    %edx,%ecx
83005651:	4e                   	dec    %esi
83005652:	4f                   	dec    %edi
83005653:	29 cb                	sub    %ecx,%ebx
83005655:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
83005657:	89 d9                	mov    %ebx,%ecx
83005659:	46                   	inc    %esi
8300565a:	47                   	inc    %edi
8300565b:	c1 e9 02             	shr    $0x2,%ecx
8300565e:	83 ee 04             	sub    $0x4,%esi
83005661:	83 ef 04             	sub    $0x4,%edi
83005664:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
83005666:	83 c6 04             	add    $0x4,%esi
83005669:	83 c7 04             	add    $0x4,%edi
8300566c:	89 d9                	mov    %ebx,%ecx
8300566e:	83 e1 03             	and    $0x3,%ecx
83005671:	4e                   	dec    %esi
83005672:	4f                   	dec    %edi
83005673:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
83005675:	eb 2a                	jmp    830056a1 <memmove+0x81>
83005677:	83 f9 08             	cmp    $0x8,%ecx
8300567a:	76 23                	jbe    8300569f <memmove+0x7f>
8300567c:	89 fa                	mov    %edi,%edx
8300567e:	89 cb                	mov    %ecx,%ebx
83005680:	83 e2 03             	and    $0x3,%edx
83005683:	74 10                	je     83005695 <memmove+0x75>
83005685:	b9 04 00 00 00       	mov    $0x4,%ecx
8300568a:	29 d1                	sub    %edx,%ecx
8300568c:	83 e1 03             	and    $0x3,%ecx
8300568f:	29 cb                	sub    %ecx,%ebx
83005691:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
83005693:	89 d9                	mov    %ebx,%ecx
83005695:	c1 e9 02             	shr    $0x2,%ecx
83005698:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8300569a:	89 d9                	mov    %ebx,%ecx
8300569c:	83 e1 03             	and    $0x3,%ecx
8300569f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
830056a1:	8b 45 08             	mov    0x8(%ebp),%eax
830056a4:	fc                   	cld    
830056a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
830056a8:	5b                   	pop    %ebx
830056a9:	5f                   	pop    %edi
830056aa:	5e                   	pop    %esi
830056ab:	c9                   	leave  
830056ac:	c3                   	ret    

830056ad <__sputc_r>:
830056ad:	55                   	push   %ebp
830056ae:	89 e5                	mov    %esp,%ebp
830056b0:	83 ec 08             	sub    $0x8,%esp
830056b3:	8b 45 10             	mov    0x10(%ebp),%eax
830056b6:	8b 40 08             	mov    0x8(%eax),%eax
830056b9:	8d 50 ff             	lea    -0x1(%eax),%edx
830056bc:	8b 45 10             	mov    0x10(%ebp),%eax
830056bf:	89 50 08             	mov    %edx,0x8(%eax)
830056c2:	8b 45 10             	mov    0x10(%ebp),%eax
830056c5:	8b 40 08             	mov    0x8(%eax),%eax
830056c8:	85 c0                	test   %eax,%eax
830056ca:	79 17                	jns    830056e3 <__sputc_r+0x36>
830056cc:	8b 45 10             	mov    0x10(%ebp),%eax
830056cf:	8b 50 08             	mov    0x8(%eax),%edx
830056d2:	8b 45 10             	mov    0x10(%ebp),%eax
830056d5:	8b 40 18             	mov    0x18(%eax),%eax
830056d8:	39 c2                	cmp    %eax,%edx
830056da:	7c 21                	jl     830056fd <__sputc_r+0x50>
830056dc:	8b 45 0c             	mov    0xc(%ebp),%eax
830056df:	3c 0a                	cmp    $0xa,%al
830056e1:	74 1a                	je     830056fd <__sputc_r+0x50>
830056e3:	8b 45 10             	mov    0x10(%ebp),%eax
830056e6:	8b 00                	mov    (%eax),%eax
830056e8:	8d 48 01             	lea    0x1(%eax),%ecx
830056eb:	8b 55 10             	mov    0x10(%ebp),%edx
830056ee:	89 0a                	mov    %ecx,(%edx)
830056f0:	8b 55 0c             	mov    0xc(%ebp),%edx
830056f3:	88 10                	mov    %dl,(%eax)
830056f5:	0f b6 00             	movzbl (%eax),%eax
830056f8:	0f b6 c0             	movzbl %al,%eax
830056fb:	eb 14                	jmp    83005711 <__sputc_r+0x64>
830056fd:	83 ec 04             	sub    $0x4,%esp
83005700:	ff 75 10             	push   0x10(%ebp)
83005703:	ff 75 0c             	push   0xc(%ebp)
83005706:	ff 75 08             	push   0x8(%ebp)
83005709:	e8 ce e5 ff ff       	call   83003cdc <__swbuf_r>
8300570e:	83 c4 10             	add    $0x10,%esp
83005711:	c9                   	leave  
83005712:	c3                   	ret    

83005713 <_putc_r>:
83005713:	55                   	push   %ebp
83005714:	89 e5                	mov    %esp,%ebp
83005716:	53                   	push   %ebx
83005717:	83 ec 14             	sub    $0x14,%esp
8300571a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8300571d:	8b 45 08             	mov    0x8(%ebp),%eax
83005720:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005723:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
83005727:	74 18                	je     83005741 <_putc_r+0x2e>
83005729:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300572c:	8b 40 38             	mov    0x38(%eax),%eax
8300572f:	85 c0                	test   %eax,%eax
83005731:	75 0e                	jne    83005741 <_putc_r+0x2e>
83005733:	83 ec 0c             	sub    $0xc,%esp
83005736:	ff 75 f4             	push   -0xc(%ebp)
83005739:	e8 7f b3 ff ff       	call   83000abd <__sinit>
8300573e:	83 c4 10             	add    $0x10,%esp
83005741:	83 ec 04             	sub    $0x4,%esp
83005744:	53                   	push   %ebx
83005745:	ff 75 0c             	push   0xc(%ebp)
83005748:	ff 75 08             	push   0x8(%ebp)
8300574b:	e8 5d ff ff ff       	call   830056ad <__sputc_r>
83005750:	83 c4 10             	add    $0x10,%esp
83005753:	89 45 f0             	mov    %eax,-0x10(%ebp)
83005756:	8b 45 f0             	mov    -0x10(%ebp),%eax
83005759:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8300575c:	c9                   	leave  
8300575d:	c3                   	ret    

8300575e <putc>:
8300575e:	55                   	push   %ebp
8300575f:	89 e5                	mov    %esp,%ebp
83005761:	53                   	push   %ebx
83005762:	83 ec 14             	sub    $0x14,%esp
83005765:	8b 5d 0c             	mov    0xc(%ebp),%ebx
83005768:	a1 04 6e 00 83       	mov    0x83006e04,%eax
8300576d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005770:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005773:	89 45 f0             	mov    %eax,-0x10(%ebp)
83005776:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8300577a:	74 18                	je     83005794 <putc+0x36>
8300577c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300577f:	8b 40 38             	mov    0x38(%eax),%eax
83005782:	85 c0                	test   %eax,%eax
83005784:	75 0e                	jne    83005794 <putc+0x36>
83005786:	83 ec 0c             	sub    $0xc,%esp
83005789:	ff 75 f0             	push   -0x10(%ebp)
8300578c:	e8 2c b3 ff ff       	call   83000abd <__sinit>
83005791:	83 c4 10             	add    $0x10,%esp
83005794:	83 ec 04             	sub    $0x4,%esp
83005797:	53                   	push   %ebx
83005798:	ff 75 08             	push   0x8(%ebp)
8300579b:	ff 75 f4             	push   -0xc(%ebp)
8300579e:	e8 0a ff ff ff       	call   830056ad <__sputc_r>
830057a3:	83 c4 10             	add    $0x10,%esp
830057a6:	89 45 ec             	mov    %eax,-0x14(%ebp)
830057a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
830057ac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
830057af:	c9                   	leave  
830057b0:	c3                   	ret    

830057b1 <_read_r>:
830057b1:	55                   	push   %ebp
830057b2:	89 e5                	mov    %esp,%ebp
830057b4:	83 ec 18             	sub    $0x18,%esp
830057b7:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
830057be:	00 00 00 
830057c1:	83 ec 04             	sub    $0x4,%esp
830057c4:	ff 75 14             	push   0x14(%ebp)
830057c7:	ff 75 10             	push   0x10(%ebp)
830057ca:	ff 75 0c             	push   0xc(%ebp)
830057cd:	e8 bf a9 ff ff       	call   83000191 <read>
830057d2:	83 c4 10             	add    $0x10,%esp
830057d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
830057d8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
830057dc:	75 14                	jne    830057f2 <_read_r+0x41>
830057de:	a1 34 74 00 83       	mov    0x83007434,%eax
830057e3:	85 c0                	test   %eax,%eax
830057e5:	74 0b                	je     830057f2 <_read_r+0x41>
830057e7:	8b 15 34 74 00 83    	mov    0x83007434,%edx
830057ed:	8b 45 08             	mov    0x8(%ebp),%eax
830057f0:	89 10                	mov    %edx,(%eax)
830057f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
830057f5:	c9                   	leave  
830057f6:	c3                   	ret    

830057f7 <_realloc_r>:
830057f7:	55                   	push   %ebp
830057f8:	89 e5                	mov    %esp,%ebp
830057fa:	83 ec 78             	sub    $0x78,%esp
830057fd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83005801:	75 16                	jne    83005819 <_realloc_r+0x22>
83005803:	83 ec 08             	sub    $0x8,%esp
83005806:	ff 75 10             	push   0x10(%ebp)
83005809:	ff 75 08             	push   0x8(%ebp)
8300580c:	e8 82 c6 ff ff       	call   83001e93 <_malloc_r>
83005811:	83 c4 10             	add    $0x10,%esp
83005814:	e9 b6 08 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83005819:	83 ec 0c             	sub    $0xc,%esp
8300581c:	ff 75 08             	push   0x8(%ebp)
8300581f:	e8 54 d0 ff ff       	call   83002878 <__malloc_lock>
83005824:	83 c4 10             	add    $0x10,%esp
83005827:	8b 45 0c             	mov    0xc(%ebp),%eax
8300582a:	83 e8 08             	sub    $0x8,%eax
8300582d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
83005830:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83005833:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005836:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83005839:	8b 40 04             	mov    0x4(%eax),%eax
8300583c:	83 e0 fc             	and    $0xfffffffc,%eax
8300583f:	89 45 c0             	mov    %eax,-0x40(%ebp)
83005842:	8b 45 c0             	mov    -0x40(%ebp),%eax
83005845:	89 45 f0             	mov    %eax,-0x10(%ebp)
83005848:	8b 45 10             	mov    0x10(%ebp),%eax
8300584b:	83 c0 0b             	add    $0xb,%eax
8300584e:	83 f8 16             	cmp    $0x16,%eax
83005851:	76 0b                	jbe    8300585e <_realloc_r+0x67>
83005853:	8b 45 10             	mov    0x10(%ebp),%eax
83005856:	83 c0 0b             	add    $0xb,%eax
83005859:	83 e0 f8             	and    $0xfffffff8,%eax
8300585c:	eb 05                	jmp    83005863 <_realloc_r+0x6c>
8300585e:	b8 10 00 00 00       	mov    $0x10,%eax
83005863:	89 45 bc             	mov    %eax,-0x44(%ebp)
83005866:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005869:	85 c0                	test   %eax,%eax
8300586b:	78 08                	js     83005875 <_realloc_r+0x7e>
8300586d:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005870:	3b 45 10             	cmp    0x10(%ebp),%eax
83005873:	73 13                	jae    83005888 <_realloc_r+0x91>
83005875:	8b 45 08             	mov    0x8(%ebp),%eax
83005878:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8300587e:	b8 00 00 00 00       	mov    $0x0,%eax
83005883:	e9 47 08 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83005888:	8b 55 c0             	mov    -0x40(%ebp),%edx
8300588b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8300588e:	39 c2                	cmp    %eax,%edx
83005890:	0f 8d 8b 07 00 00    	jge    83006021 <_realloc_r+0x82a>
83005896:	8b 55 c4             	mov    -0x3c(%ebp),%edx
83005899:	8b 45 c0             	mov    -0x40(%ebp),%eax
8300589c:	01 d0                	add    %edx,%eax
8300589e:	89 45 ec             	mov    %eax,-0x14(%ebp)
830058a1:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830058a6:	8b 40 08             	mov    0x8(%eax),%eax
830058a9:	39 45 ec             	cmp    %eax,-0x14(%ebp)
830058ac:	74 1e                	je     830058cc <_realloc_r+0xd5>
830058ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
830058b1:	8b 40 04             	mov    0x4(%eax),%eax
830058b4:	83 e0 fe             	and    $0xfffffffe,%eax
830058b7:	89 c2                	mov    %eax,%edx
830058b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
830058bc:	01 d0                	add    %edx,%eax
830058be:	8b 40 04             	mov    0x4(%eax),%eax
830058c1:	83 e0 01             	and    $0x1,%eax
830058c4:	85 c0                	test   %eax,%eax
830058c6:	0f 85 ca 00 00 00    	jne    83005996 <_realloc_r+0x19f>
830058cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
830058cf:	8b 40 04             	mov    0x4(%eax),%eax
830058d2:	83 e0 fc             	and    $0xfffffffc,%eax
830058d5:	89 45 e8             	mov    %eax,-0x18(%ebp)
830058d8:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830058dd:	8b 40 08             	mov    0x8(%eax),%eax
830058e0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
830058e3:	75 71                	jne    83005956 <_realloc_r+0x15f>
830058e5:	8b 55 e8             	mov    -0x18(%ebp),%edx
830058e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
830058eb:	01 d0                	add    %edx,%eax
830058ed:	89 c2                	mov    %eax,%edx
830058ef:	8b 45 bc             	mov    -0x44(%ebp),%eax
830058f2:	83 c0 10             	add    $0x10,%eax
830058f5:	39 c2                	cmp    %eax,%edx
830058f7:	0f 8c a9 00 00 00    	jl     830059a6 <_realloc_r+0x1af>
830058fd:	8b 45 e8             	mov    -0x18(%ebp),%eax
83005900:	01 45 f0             	add    %eax,-0x10(%ebp)
83005903:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83005908:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
8300590b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8300590e:	01 c8                	add    %ecx,%eax
83005910:	89 42 08             	mov    %eax,0x8(%edx)
83005913:	8b 45 f0             	mov    -0x10(%ebp),%eax
83005916:	2b 45 bc             	sub    -0x44(%ebp),%eax
83005919:	89 c2                	mov    %eax,%edx
8300591b:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83005920:	8b 40 08             	mov    0x8(%eax),%eax
83005923:	83 ca 01             	or     $0x1,%edx
83005926:	89 50 04             	mov    %edx,0x4(%eax)
83005929:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8300592c:	8b 40 04             	mov    0x4(%eax),%eax
8300592f:	83 e0 01             	and    $0x1,%eax
83005932:	0b 45 bc             	or     -0x44(%ebp),%eax
83005935:	89 c2                	mov    %eax,%edx
83005937:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8300593a:	89 50 04             	mov    %edx,0x4(%eax)
8300593d:	83 ec 0c             	sub    $0xc,%esp
83005940:	ff 75 08             	push   0x8(%ebp)
83005943:	e8 36 cf ff ff       	call   8300287e <__malloc_unlock>
83005948:	83 c4 10             	add    $0x10,%esp
8300594b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8300594e:	83 c0 08             	add    $0x8,%eax
83005951:	e9 79 07 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83005956:	8b 55 e8             	mov    -0x18(%ebp),%edx
83005959:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300595c:	01 d0                	add    %edx,%eax
8300595e:	89 c2                	mov    %eax,%edx
83005960:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005963:	39 c2                	cmp    %eax,%edx
83005965:	7c 3f                	jl     830059a6 <_realloc_r+0x1af>
83005967:	8b 45 ec             	mov    -0x14(%ebp),%eax
8300596a:	8b 40 0c             	mov    0xc(%eax),%eax
8300596d:	89 45 b8             	mov    %eax,-0x48(%ebp)
83005970:	8b 45 ec             	mov    -0x14(%ebp),%eax
83005973:	8b 40 08             	mov    0x8(%eax),%eax
83005976:	89 45 b4             	mov    %eax,-0x4c(%ebp)
83005979:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8300597c:	8b 55 b8             	mov    -0x48(%ebp),%edx
8300597f:	89 50 0c             	mov    %edx,0xc(%eax)
83005982:	8b 45 b8             	mov    -0x48(%ebp),%eax
83005985:	8b 55 b4             	mov    -0x4c(%ebp),%edx
83005988:	89 50 08             	mov    %edx,0x8(%eax)
8300598b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8300598e:	01 45 f0             	add    %eax,-0x10(%ebp)
83005991:	e9 8c 06 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005996:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8300599d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
830059a4:	eb 01                	jmp    830059a7 <_realloc_r+0x1b0>
830059a6:	90                   	nop
830059a7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830059aa:	8b 40 04             	mov    0x4(%eax),%eax
830059ad:	83 e0 01             	and    $0x1,%eax
830059b0:	85 c0                	test   %eax,%eax
830059b2:	0f 85 d6 04 00 00    	jne    83005e8e <_realloc_r+0x697>
830059b8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830059bb:	8b 00                	mov    (%eax),%eax
830059bd:	f7 d8                	neg    %eax
830059bf:	89 c2                	mov    %eax,%edx
830059c1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
830059c4:	01 d0                	add    %edx,%eax
830059c6:	89 45 b0             	mov    %eax,-0x50(%ebp)
830059c9:	8b 45 b0             	mov    -0x50(%ebp),%eax
830059cc:	8b 40 04             	mov    0x4(%eax),%eax
830059cf:	83 e0 fc             	and    $0xfffffffc,%eax
830059d2:	89 45 ac             	mov    %eax,-0x54(%ebp)
830059d5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
830059d9:	0f 84 4a 03 00 00    	je     83005d29 <_realloc_r+0x532>
830059df:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
830059e4:	8b 40 08             	mov    0x8(%eax),%eax
830059e7:	39 45 ec             	cmp    %eax,-0x14(%ebp)
830059ea:	0f 85 b0 01 00 00    	jne    83005ba0 <_realloc_r+0x3a9>
830059f0:	8b 55 e8             	mov    -0x18(%ebp),%edx
830059f3:	8b 45 ac             	mov    -0x54(%ebp),%eax
830059f6:	01 c2                	add    %eax,%edx
830059f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
830059fb:	01 d0                	add    %edx,%eax
830059fd:	89 c2                	mov    %eax,%edx
830059ff:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005a02:	83 c0 10             	add    $0x10,%eax
83005a05:	39 c2                	cmp    %eax,%edx
83005a07:	0f 8c 1c 03 00 00    	jl     83005d29 <_realloc_r+0x532>
83005a0d:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005a10:	8b 40 0c             	mov    0xc(%eax),%eax
83005a13:	89 45 b8             	mov    %eax,-0x48(%ebp)
83005a16:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005a19:	8b 40 08             	mov    0x8(%eax),%eax
83005a1c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
83005a1f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
83005a22:	8b 55 b8             	mov    -0x48(%ebp),%edx
83005a25:	89 50 0c             	mov    %edx,0xc(%eax)
83005a28:	8b 45 b8             	mov    -0x48(%ebp),%eax
83005a2b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
83005a2e:	89 50 08             	mov    %edx,0x8(%eax)
83005a31:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005a34:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005a37:	8b 55 ac             	mov    -0x54(%ebp),%edx
83005a3a:	8b 45 e8             	mov    -0x18(%ebp),%eax
83005a3d:	01 d0                	add    %edx,%eax
83005a3f:	01 45 f0             	add    %eax,-0x10(%ebp)
83005a42:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005a45:	83 c0 08             	add    $0x8,%eax
83005a48:	89 45 a8             	mov    %eax,-0x58(%ebp)
83005a4b:	8b 45 c0             	mov    -0x40(%ebp),%eax
83005a4e:	83 e8 04             	sub    $0x4,%eax
83005a51:	89 45 a0             	mov    %eax,-0x60(%ebp)
83005a54:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
83005a58:	0f 87 de 00 00 00    	ja     83005b3c <_realloc_r+0x345>
83005a5e:	8b 45 0c             	mov    0xc(%ebp),%eax
83005a61:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005a64:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005a67:	89 45 e0             	mov    %eax,-0x20(%ebp)
83005a6a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
83005a6e:	0f 86 90 00 00 00    	jbe    83005b04 <_realloc_r+0x30d>
83005a74:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005a77:	8d 42 04             	lea    0x4(%edx),%eax
83005a7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005a7d:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005a80:	8d 48 04             	lea    0x4(%eax),%ecx
83005a83:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005a86:	8b 12                	mov    (%edx),%edx
83005a88:	89 10                	mov    %edx,(%eax)
83005a8a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005a8d:	8d 42 04             	lea    0x4(%edx),%eax
83005a90:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005a93:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005a96:	8d 48 04             	lea    0x4(%eax),%ecx
83005a99:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005a9c:	8b 12                	mov    (%edx),%edx
83005a9e:	89 10                	mov    %edx,(%eax)
83005aa0:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
83005aa4:	76 5e                	jbe    83005b04 <_realloc_r+0x30d>
83005aa6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005aa9:	8d 42 04             	lea    0x4(%edx),%eax
83005aac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005aaf:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005ab2:	8d 48 04             	lea    0x4(%eax),%ecx
83005ab5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005ab8:	8b 12                	mov    (%edx),%edx
83005aba:	89 10                	mov    %edx,(%eax)
83005abc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005abf:	8d 42 04             	lea    0x4(%edx),%eax
83005ac2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005ac5:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005ac8:	8d 48 04             	lea    0x4(%eax),%ecx
83005acb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005ace:	8b 12                	mov    (%edx),%edx
83005ad0:	89 10                	mov    %edx,(%eax)
83005ad2:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
83005ad6:	76 2c                	jbe    83005b04 <_realloc_r+0x30d>
83005ad8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005adb:	8d 42 04             	lea    0x4(%edx),%eax
83005ade:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005ae1:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005ae4:	8d 48 04             	lea    0x4(%eax),%ecx
83005ae7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005aea:	8b 12                	mov    (%edx),%edx
83005aec:	89 10                	mov    %edx,(%eax)
83005aee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005af1:	8d 42 04             	lea    0x4(%edx),%eax
83005af4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005af7:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005afa:	8d 48 04             	lea    0x4(%eax),%ecx
83005afd:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005b00:	8b 12                	mov    (%edx),%edx
83005b02:	89 10                	mov    %edx,(%eax)
83005b04:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005b07:	8d 42 04             	lea    0x4(%edx),%eax
83005b0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005b0d:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005b10:	8d 48 04             	lea    0x4(%eax),%ecx
83005b13:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005b16:	8b 12                	mov    (%edx),%edx
83005b18:	89 10                	mov    %edx,(%eax)
83005b1a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
83005b1d:	8d 42 04             	lea    0x4(%edx),%eax
83005b20:	89 45 e4             	mov    %eax,-0x1c(%ebp)
83005b23:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005b26:	8d 48 04             	lea    0x4(%eax),%ecx
83005b29:	89 4d e0             	mov    %ecx,-0x20(%ebp)
83005b2c:	8b 12                	mov    (%edx),%edx
83005b2e:	89 10                	mov    %edx,(%eax)
83005b30:	8b 45 e4             	mov    -0x1c(%ebp),%eax
83005b33:	8b 10                	mov    (%eax),%edx
83005b35:	8b 45 e0             	mov    -0x20(%ebp),%eax
83005b38:	89 10                	mov    %edx,(%eax)
83005b3a:	eb 14                	jmp    83005b50 <_realloc_r+0x359>
83005b3c:	83 ec 04             	sub    $0x4,%esp
83005b3f:	ff 75 a0             	push   -0x60(%ebp)
83005b42:	ff 75 0c             	push   0xc(%ebp)
83005b45:	ff 75 a8             	push   -0x58(%ebp)
83005b48:	e8 d3 fa ff ff       	call   83005620 <memmove>
83005b4d:	83 c4 10             	add    $0x10,%esp
83005b50:	ba 20 6e 00 83       	mov    $0x83006e20,%edx
83005b55:	8b 4d f4             	mov    -0xc(%ebp),%ecx
83005b58:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005b5b:	01 c8                	add    %ecx,%eax
83005b5d:	89 42 08             	mov    %eax,0x8(%edx)
83005b60:	8b 45 f0             	mov    -0x10(%ebp),%eax
83005b63:	2b 45 bc             	sub    -0x44(%ebp),%eax
83005b66:	89 c2                	mov    %eax,%edx
83005b68:	b8 20 6e 00 83       	mov    $0x83006e20,%eax
83005b6d:	8b 40 08             	mov    0x8(%eax),%eax
83005b70:	83 ca 01             	or     $0x1,%edx
83005b73:	89 50 04             	mov    %edx,0x4(%eax)
83005b76:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005b79:	8b 40 04             	mov    0x4(%eax),%eax
83005b7c:	83 e0 01             	and    $0x1,%eax
83005b7f:	0b 45 bc             	or     -0x44(%ebp),%eax
83005b82:	89 c2                	mov    %eax,%edx
83005b84:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005b87:	89 50 04             	mov    %edx,0x4(%eax)
83005b8a:	83 ec 0c             	sub    $0xc,%esp
83005b8d:	ff 75 08             	push   0x8(%ebp)
83005b90:	e8 e9 cc ff ff       	call   8300287e <__malloc_unlock>
83005b95:	83 c4 10             	add    $0x10,%esp
83005b98:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005b9b:	e9 2f 05 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83005ba0:	8b 55 e8             	mov    -0x18(%ebp),%edx
83005ba3:	8b 45 ac             	mov    -0x54(%ebp),%eax
83005ba6:	01 c2                	add    %eax,%edx
83005ba8:	8b 45 f0             	mov    -0x10(%ebp),%eax
83005bab:	01 d0                	add    %edx,%eax
83005bad:	89 c2                	mov    %eax,%edx
83005baf:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005bb2:	39 c2                	cmp    %eax,%edx
83005bb4:	0f 8c 6f 01 00 00    	jl     83005d29 <_realloc_r+0x532>
83005bba:	8b 45 ec             	mov    -0x14(%ebp),%eax
83005bbd:	8b 40 0c             	mov    0xc(%eax),%eax
83005bc0:	89 45 b8             	mov    %eax,-0x48(%ebp)
83005bc3:	8b 45 ec             	mov    -0x14(%ebp),%eax
83005bc6:	8b 40 08             	mov    0x8(%eax),%eax
83005bc9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
83005bcc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
83005bcf:	8b 55 b8             	mov    -0x48(%ebp),%edx
83005bd2:	89 50 0c             	mov    %edx,0xc(%eax)
83005bd5:	8b 45 b8             	mov    -0x48(%ebp),%eax
83005bd8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
83005bdb:	89 50 08             	mov    %edx,0x8(%eax)
83005bde:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005be1:	8b 40 0c             	mov    0xc(%eax),%eax
83005be4:	89 45 b8             	mov    %eax,-0x48(%ebp)
83005be7:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005bea:	8b 40 08             	mov    0x8(%eax),%eax
83005bed:	89 45 b4             	mov    %eax,-0x4c(%ebp)
83005bf0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
83005bf3:	8b 55 b8             	mov    -0x48(%ebp),%edx
83005bf6:	89 50 0c             	mov    %edx,0xc(%eax)
83005bf9:	8b 45 b8             	mov    -0x48(%ebp),%eax
83005bfc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
83005bff:	89 50 08             	mov    %edx,0x8(%eax)
83005c02:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005c05:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005c08:	8b 55 e8             	mov    -0x18(%ebp),%edx
83005c0b:	8b 45 ac             	mov    -0x54(%ebp),%eax
83005c0e:	01 d0                	add    %edx,%eax
83005c10:	01 45 f0             	add    %eax,-0x10(%ebp)
83005c13:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005c16:	83 c0 08             	add    $0x8,%eax
83005c19:	89 45 a8             	mov    %eax,-0x58(%ebp)
83005c1c:	8b 45 c0             	mov    -0x40(%ebp),%eax
83005c1f:	83 e8 04             	sub    $0x4,%eax
83005c22:	89 45 a4             	mov    %eax,-0x5c(%ebp)
83005c25:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
83005c29:	0f 87 e1 00 00 00    	ja     83005d10 <_realloc_r+0x519>
83005c2f:	8b 45 0c             	mov    0xc(%ebp),%eax
83005c32:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005c35:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005c38:	89 45 d8             	mov    %eax,-0x28(%ebp)
83005c3b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
83005c3f:	0f 86 90 00 00 00    	jbe    83005cd5 <_realloc_r+0x4de>
83005c45:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005c48:	8d 42 04             	lea    0x4(%edx),%eax
83005c4b:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005c4e:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005c51:	8d 48 04             	lea    0x4(%eax),%ecx
83005c54:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005c57:	8b 12                	mov    (%edx),%edx
83005c59:	89 10                	mov    %edx,(%eax)
83005c5b:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005c5e:	8d 42 04             	lea    0x4(%edx),%eax
83005c61:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005c64:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005c67:	8d 48 04             	lea    0x4(%eax),%ecx
83005c6a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005c6d:	8b 12                	mov    (%edx),%edx
83005c6f:	89 10                	mov    %edx,(%eax)
83005c71:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
83005c75:	76 5e                	jbe    83005cd5 <_realloc_r+0x4de>
83005c77:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005c7a:	8d 42 04             	lea    0x4(%edx),%eax
83005c7d:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005c80:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005c83:	8d 48 04             	lea    0x4(%eax),%ecx
83005c86:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005c89:	8b 12                	mov    (%edx),%edx
83005c8b:	89 10                	mov    %edx,(%eax)
83005c8d:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005c90:	8d 42 04             	lea    0x4(%edx),%eax
83005c93:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005c96:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005c99:	8d 48 04             	lea    0x4(%eax),%ecx
83005c9c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005c9f:	8b 12                	mov    (%edx),%edx
83005ca1:	89 10                	mov    %edx,(%eax)
83005ca3:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
83005ca7:	76 2c                	jbe    83005cd5 <_realloc_r+0x4de>
83005ca9:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005cac:	8d 42 04             	lea    0x4(%edx),%eax
83005caf:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005cb2:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005cb5:	8d 48 04             	lea    0x4(%eax),%ecx
83005cb8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005cbb:	8b 12                	mov    (%edx),%edx
83005cbd:	89 10                	mov    %edx,(%eax)
83005cbf:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005cc2:	8d 42 04             	lea    0x4(%edx),%eax
83005cc5:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005cc8:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005ccb:	8d 48 04             	lea    0x4(%eax),%ecx
83005cce:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005cd1:	8b 12                	mov    (%edx),%edx
83005cd3:	89 10                	mov    %edx,(%eax)
83005cd5:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005cd8:	8d 42 04             	lea    0x4(%edx),%eax
83005cdb:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005cde:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005ce1:	8d 48 04             	lea    0x4(%eax),%ecx
83005ce4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005ce7:	8b 12                	mov    (%edx),%edx
83005ce9:	89 10                	mov    %edx,(%eax)
83005ceb:	8b 55 dc             	mov    -0x24(%ebp),%edx
83005cee:	8d 42 04             	lea    0x4(%edx),%eax
83005cf1:	89 45 dc             	mov    %eax,-0x24(%ebp)
83005cf4:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005cf7:	8d 48 04             	lea    0x4(%eax),%ecx
83005cfa:	89 4d d8             	mov    %ecx,-0x28(%ebp)
83005cfd:	8b 12                	mov    (%edx),%edx
83005cff:	89 10                	mov    %edx,(%eax)
83005d01:	8b 45 dc             	mov    -0x24(%ebp),%eax
83005d04:	8b 10                	mov    (%eax),%edx
83005d06:	8b 45 d8             	mov    -0x28(%ebp),%eax
83005d09:	89 10                	mov    %edx,(%eax)
83005d0b:	e9 12 03 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005d10:	83 ec 04             	sub    $0x4,%esp
83005d13:	ff 75 a4             	push   -0x5c(%ebp)
83005d16:	ff 75 0c             	push   0xc(%ebp)
83005d19:	ff 75 a8             	push   -0x58(%ebp)
83005d1c:	e8 ff f8 ff ff       	call   83005620 <memmove>
83005d21:	83 c4 10             	add    $0x10,%esp
83005d24:	e9 f9 02 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005d29:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
83005d2d:	0f 84 5b 01 00 00    	je     83005e8e <_realloc_r+0x697>
83005d33:	8b 55 ac             	mov    -0x54(%ebp),%edx
83005d36:	8b 45 f0             	mov    -0x10(%ebp),%eax
83005d39:	01 d0                	add    %edx,%eax
83005d3b:	89 c2                	mov    %eax,%edx
83005d3d:	8b 45 bc             	mov    -0x44(%ebp),%eax
83005d40:	39 c2                	cmp    %eax,%edx
83005d42:	0f 8c 46 01 00 00    	jl     83005e8e <_realloc_r+0x697>
83005d48:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005d4b:	8b 40 0c             	mov    0xc(%eax),%eax
83005d4e:	89 45 b8             	mov    %eax,-0x48(%ebp)
83005d51:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005d54:	8b 40 08             	mov    0x8(%eax),%eax
83005d57:	89 45 b4             	mov    %eax,-0x4c(%ebp)
83005d5a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
83005d5d:	8b 55 b8             	mov    -0x48(%ebp),%edx
83005d60:	89 50 0c             	mov    %edx,0xc(%eax)
83005d63:	8b 45 b8             	mov    -0x48(%ebp),%eax
83005d66:	8b 55 b4             	mov    -0x4c(%ebp),%edx
83005d69:	89 50 08             	mov    %edx,0x8(%eax)
83005d6c:	8b 45 b0             	mov    -0x50(%ebp),%eax
83005d6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005d72:	8b 45 ac             	mov    -0x54(%ebp),%eax
83005d75:	01 45 f0             	add    %eax,-0x10(%ebp)
83005d78:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005d7b:	83 c0 08             	add    $0x8,%eax
83005d7e:	89 45 a8             	mov    %eax,-0x58(%ebp)
83005d81:	8b 45 c0             	mov    -0x40(%ebp),%eax
83005d84:	83 e8 04             	sub    $0x4,%eax
83005d87:	89 45 9c             	mov    %eax,-0x64(%ebp)
83005d8a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
83005d8e:	0f 87 e1 00 00 00    	ja     83005e75 <_realloc_r+0x67e>
83005d94:	8b 45 0c             	mov    0xc(%ebp),%eax
83005d97:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005d9a:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005d9d:	89 45 d0             	mov    %eax,-0x30(%ebp)
83005da0:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
83005da4:	0f 86 90 00 00 00    	jbe    83005e3a <_realloc_r+0x643>
83005daa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005dad:	8d 42 04             	lea    0x4(%edx),%eax
83005db0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005db3:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005db6:	8d 48 04             	lea    0x4(%eax),%ecx
83005db9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005dbc:	8b 12                	mov    (%edx),%edx
83005dbe:	89 10                	mov    %edx,(%eax)
83005dc0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005dc3:	8d 42 04             	lea    0x4(%edx),%eax
83005dc6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005dc9:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005dcc:	8d 48 04             	lea    0x4(%eax),%ecx
83005dcf:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005dd2:	8b 12                	mov    (%edx),%edx
83005dd4:	89 10                	mov    %edx,(%eax)
83005dd6:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
83005dda:	76 5e                	jbe    83005e3a <_realloc_r+0x643>
83005ddc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005ddf:	8d 42 04             	lea    0x4(%edx),%eax
83005de2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005de5:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005de8:	8d 48 04             	lea    0x4(%eax),%ecx
83005deb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005dee:	8b 12                	mov    (%edx),%edx
83005df0:	89 10                	mov    %edx,(%eax)
83005df2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005df5:	8d 42 04             	lea    0x4(%edx),%eax
83005df8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005dfb:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005dfe:	8d 48 04             	lea    0x4(%eax),%ecx
83005e01:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005e04:	8b 12                	mov    (%edx),%edx
83005e06:	89 10                	mov    %edx,(%eax)
83005e08:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
83005e0c:	76 2c                	jbe    83005e3a <_realloc_r+0x643>
83005e0e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005e11:	8d 42 04             	lea    0x4(%edx),%eax
83005e14:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005e17:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005e1a:	8d 48 04             	lea    0x4(%eax),%ecx
83005e1d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005e20:	8b 12                	mov    (%edx),%edx
83005e22:	89 10                	mov    %edx,(%eax)
83005e24:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005e27:	8d 42 04             	lea    0x4(%edx),%eax
83005e2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005e2d:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005e30:	8d 48 04             	lea    0x4(%eax),%ecx
83005e33:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005e36:	8b 12                	mov    (%edx),%edx
83005e38:	89 10                	mov    %edx,(%eax)
83005e3a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005e3d:	8d 42 04             	lea    0x4(%edx),%eax
83005e40:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005e43:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005e46:	8d 48 04             	lea    0x4(%eax),%ecx
83005e49:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005e4c:	8b 12                	mov    (%edx),%edx
83005e4e:	89 10                	mov    %edx,(%eax)
83005e50:	8b 55 d4             	mov    -0x2c(%ebp),%edx
83005e53:	8d 42 04             	lea    0x4(%edx),%eax
83005e56:	89 45 d4             	mov    %eax,-0x2c(%ebp)
83005e59:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005e5c:	8d 48 04             	lea    0x4(%eax),%ecx
83005e5f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
83005e62:	8b 12                	mov    (%edx),%edx
83005e64:	89 10                	mov    %edx,(%eax)
83005e66:	8b 45 d4             	mov    -0x2c(%ebp),%eax
83005e69:	8b 10                	mov    (%eax),%edx
83005e6b:	8b 45 d0             	mov    -0x30(%ebp),%eax
83005e6e:	89 10                	mov    %edx,(%eax)
83005e70:	e9 ad 01 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005e75:	83 ec 04             	sub    $0x4,%esp
83005e78:	ff 75 9c             	push   -0x64(%ebp)
83005e7b:	ff 75 0c             	push   0xc(%ebp)
83005e7e:	ff 75 a8             	push   -0x58(%ebp)
83005e81:	e8 9a f7 ff ff       	call   83005620 <memmove>
83005e86:	83 c4 10             	add    $0x10,%esp
83005e89:	e9 94 01 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005e8e:	83 ec 08             	sub    $0x8,%esp
83005e91:	ff 75 10             	push   0x10(%ebp)
83005e94:	ff 75 08             	push   0x8(%ebp)
83005e97:	e8 f7 bf ff ff       	call   83001e93 <_malloc_r>
83005e9c:	83 c4 10             	add    $0x10,%esp
83005e9f:	89 45 a8             	mov    %eax,-0x58(%ebp)
83005ea2:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
83005ea6:	75 18                	jne    83005ec0 <_realloc_r+0x6c9>
83005ea8:	83 ec 0c             	sub    $0xc,%esp
83005eab:	ff 75 08             	push   0x8(%ebp)
83005eae:	e8 cb c9 ff ff       	call   8300287e <__malloc_unlock>
83005eb3:	83 c4 10             	add    $0x10,%esp
83005eb6:	b8 00 00 00 00       	mov    $0x0,%eax
83005ebb:	e9 0f 02 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83005ec0:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005ec3:	83 e8 08             	sub    $0x8,%eax
83005ec6:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005ec9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83005ecc:	8b 40 04             	mov    0x4(%eax),%eax
83005ecf:	83 e0 fe             	and    $0xfffffffe,%eax
83005ed2:	89 c2                	mov    %eax,%edx
83005ed4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83005ed7:	01 d0                	add    %edx,%eax
83005ed9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
83005edc:	75 17                	jne    83005ef5 <_realloc_r+0x6fe>
83005ede:	8b 45 f4             	mov    -0xc(%ebp),%eax
83005ee1:	8b 40 04             	mov    0x4(%eax),%eax
83005ee4:	83 e0 fc             	and    $0xfffffffc,%eax
83005ee7:	01 45 f0             	add    %eax,-0x10(%ebp)
83005eea:	8b 45 c4             	mov    -0x3c(%ebp),%eax
83005eed:	89 45 f4             	mov    %eax,-0xc(%ebp)
83005ef0:	e9 2d 01 00 00       	jmp    83006022 <_realloc_r+0x82b>
83005ef5:	8b 45 c0             	mov    -0x40(%ebp),%eax
83005ef8:	83 e8 04             	sub    $0x4,%eax
83005efb:	89 45 98             	mov    %eax,-0x68(%ebp)
83005efe:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
83005f02:	0f 87 de 00 00 00    	ja     83005fe6 <_realloc_r+0x7ef>
83005f08:	8b 45 0c             	mov    0xc(%ebp),%eax
83005f0b:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f0e:	8b 45 a8             	mov    -0x58(%ebp),%eax
83005f11:	89 45 c8             	mov    %eax,-0x38(%ebp)
83005f14:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
83005f18:	0f 86 90 00 00 00    	jbe    83005fae <_realloc_r+0x7b7>
83005f1e:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f21:	8d 42 04             	lea    0x4(%edx),%eax
83005f24:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f27:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005f2a:	8d 48 04             	lea    0x4(%eax),%ecx
83005f2d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005f30:	8b 12                	mov    (%edx),%edx
83005f32:	89 10                	mov    %edx,(%eax)
83005f34:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f37:	8d 42 04             	lea    0x4(%edx),%eax
83005f3a:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f3d:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005f40:	8d 48 04             	lea    0x4(%eax),%ecx
83005f43:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005f46:	8b 12                	mov    (%edx),%edx
83005f48:	89 10                	mov    %edx,(%eax)
83005f4a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
83005f4e:	76 5e                	jbe    83005fae <_realloc_r+0x7b7>
83005f50:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f53:	8d 42 04             	lea    0x4(%edx),%eax
83005f56:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f59:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005f5c:	8d 48 04             	lea    0x4(%eax),%ecx
83005f5f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005f62:	8b 12                	mov    (%edx),%edx
83005f64:	89 10                	mov    %edx,(%eax)
83005f66:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f69:	8d 42 04             	lea    0x4(%edx),%eax
83005f6c:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f6f:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005f72:	8d 48 04             	lea    0x4(%eax),%ecx
83005f75:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005f78:	8b 12                	mov    (%edx),%edx
83005f7a:	89 10                	mov    %edx,(%eax)
83005f7c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
83005f80:	76 2c                	jbe    83005fae <_realloc_r+0x7b7>
83005f82:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f85:	8d 42 04             	lea    0x4(%edx),%eax
83005f88:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005f8b:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005f8e:	8d 48 04             	lea    0x4(%eax),%ecx
83005f91:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005f94:	8b 12                	mov    (%edx),%edx
83005f96:	89 10                	mov    %edx,(%eax)
83005f98:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005f9b:	8d 42 04             	lea    0x4(%edx),%eax
83005f9e:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005fa1:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005fa4:	8d 48 04             	lea    0x4(%eax),%ecx
83005fa7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005faa:	8b 12                	mov    (%edx),%edx
83005fac:	89 10                	mov    %edx,(%eax)
83005fae:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005fb1:	8d 42 04             	lea    0x4(%edx),%eax
83005fb4:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005fb7:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005fba:	8d 48 04             	lea    0x4(%eax),%ecx
83005fbd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005fc0:	8b 12                	mov    (%edx),%edx
83005fc2:	89 10                	mov    %edx,(%eax)
83005fc4:	8b 55 cc             	mov    -0x34(%ebp),%edx
83005fc7:	8d 42 04             	lea    0x4(%edx),%eax
83005fca:	89 45 cc             	mov    %eax,-0x34(%ebp)
83005fcd:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005fd0:	8d 48 04             	lea    0x4(%eax),%ecx
83005fd3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
83005fd6:	8b 12                	mov    (%edx),%edx
83005fd8:	89 10                	mov    %edx,(%eax)
83005fda:	8b 45 cc             	mov    -0x34(%ebp),%eax
83005fdd:	8b 10                	mov    (%eax),%edx
83005fdf:	8b 45 c8             	mov    -0x38(%ebp),%eax
83005fe2:	89 10                	mov    %edx,(%eax)
83005fe4:	eb 14                	jmp    83005ffa <_realloc_r+0x803>
83005fe6:	83 ec 04             	sub    $0x4,%esp
83005fe9:	ff 75 98             	push   -0x68(%ebp)
83005fec:	ff 75 0c             	push   0xc(%ebp)
83005fef:	ff 75 a8             	push   -0x58(%ebp)
83005ff2:	e8 29 f6 ff ff       	call   83005620 <memmove>
83005ff7:	83 c4 10             	add    $0x10,%esp
83005ffa:	83 ec 08             	sub    $0x8,%esp
83005ffd:	ff 75 0c             	push   0xc(%ebp)
83006000:	ff 75 08             	push   0x8(%ebp)
83006003:	e8 f0 e7 ff ff       	call   830047f8 <_free_r>
83006008:	83 c4 10             	add    $0x10,%esp
8300600b:	83 ec 0c             	sub    $0xc,%esp
8300600e:	ff 75 08             	push   0x8(%ebp)
83006011:	e8 68 c8 ff ff       	call   8300287e <__malloc_unlock>
83006016:	83 c4 10             	add    $0x10,%esp
83006019:	8b 45 a8             	mov    -0x58(%ebp),%eax
8300601c:	e9 ae 00 00 00       	jmp    830060cf <_realloc_r+0x8d8>
83006021:	90                   	nop
83006022:	8b 45 f0             	mov    -0x10(%ebp),%eax
83006025:	2b 45 bc             	sub    -0x44(%ebp),%eax
83006028:	89 45 94             	mov    %eax,-0x6c(%ebp)
8300602b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8300602f:	76 5d                	jbe    8300608e <_realloc_r+0x897>
83006031:	8b 55 f4             	mov    -0xc(%ebp),%edx
83006034:	8b 45 bc             	mov    -0x44(%ebp),%eax
83006037:	01 d0                	add    %edx,%eax
83006039:	89 45 90             	mov    %eax,-0x70(%ebp)
8300603c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300603f:	8b 40 04             	mov    0x4(%eax),%eax
83006042:	83 e0 01             	and    $0x1,%eax
83006045:	0b 45 bc             	or     -0x44(%ebp),%eax
83006048:	89 c2                	mov    %eax,%edx
8300604a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300604d:	89 50 04             	mov    %edx,0x4(%eax)
83006050:	8b 45 94             	mov    -0x6c(%ebp),%eax
83006053:	83 c8 01             	or     $0x1,%eax
83006056:	89 c2                	mov    %eax,%edx
83006058:	8b 45 90             	mov    -0x70(%ebp),%eax
8300605b:	89 50 04             	mov    %edx,0x4(%eax)
8300605e:	8b 55 90             	mov    -0x70(%ebp),%edx
83006061:	8b 45 94             	mov    -0x6c(%ebp),%eax
83006064:	01 d0                	add    %edx,%eax
83006066:	8b 50 04             	mov    0x4(%eax),%edx
83006069:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8300606c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8300606f:	01 c8                	add    %ecx,%eax
83006071:	83 ca 01             	or     $0x1,%edx
83006074:	89 50 04             	mov    %edx,0x4(%eax)
83006077:	8b 45 90             	mov    -0x70(%ebp),%eax
8300607a:	83 c0 08             	add    $0x8,%eax
8300607d:	83 ec 08             	sub    $0x8,%esp
83006080:	50                   	push   %eax
83006081:	ff 75 08             	push   0x8(%ebp)
83006084:	e8 6f e7 ff ff       	call   830047f8 <_free_r>
83006089:	83 c4 10             	add    $0x10,%esp
8300608c:	eb 2d                	jmp    830060bb <_realloc_r+0x8c4>
8300608e:	8b 45 f4             	mov    -0xc(%ebp),%eax
83006091:	8b 40 04             	mov    0x4(%eax),%eax
83006094:	83 e0 01             	and    $0x1,%eax
83006097:	0b 45 f0             	or     -0x10(%ebp),%eax
8300609a:	89 c2                	mov    %eax,%edx
8300609c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300609f:	89 50 04             	mov    %edx,0x4(%eax)
830060a2:	8b 55 f4             	mov    -0xc(%ebp),%edx
830060a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
830060a8:	01 d0                	add    %edx,%eax
830060aa:	8b 50 04             	mov    0x4(%eax),%edx
830060ad:	8b 4d f4             	mov    -0xc(%ebp),%ecx
830060b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
830060b3:	01 c8                	add    %ecx,%eax
830060b5:	83 ca 01             	or     $0x1,%edx
830060b8:	89 50 04             	mov    %edx,0x4(%eax)
830060bb:	83 ec 0c             	sub    $0xc,%esp
830060be:	ff 75 08             	push   0x8(%ebp)
830060c1:	e8 b8 c7 ff ff       	call   8300287e <__malloc_unlock>
830060c6:	83 c4 10             	add    $0x10,%esp
830060c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
830060cc:	83 c0 08             	add    $0x8,%eax
830060cf:	c9                   	leave  
830060d0:	c3                   	ret    

830060d1 <cleanup_glue>:
830060d1:	55                   	push   %ebp
830060d2:	89 e5                	mov    %esp,%ebp
830060d4:	83 ec 08             	sub    $0x8,%esp
830060d7:	8b 45 0c             	mov    0xc(%ebp),%eax
830060da:	8b 00                	mov    (%eax),%eax
830060dc:	85 c0                	test   %eax,%eax
830060de:	74 14                	je     830060f4 <cleanup_glue+0x23>
830060e0:	8b 45 0c             	mov    0xc(%ebp),%eax
830060e3:	8b 00                	mov    (%eax),%eax
830060e5:	83 ec 08             	sub    $0x8,%esp
830060e8:	50                   	push   %eax
830060e9:	ff 75 08             	push   0x8(%ebp)
830060ec:	e8 e0 ff ff ff       	call   830060d1 <cleanup_glue>
830060f1:	83 c4 10             	add    $0x10,%esp
830060f4:	83 ec 08             	sub    $0x8,%esp
830060f7:	ff 75 0c             	push   0xc(%ebp)
830060fa:	ff 75 08             	push   0x8(%ebp)
830060fd:	e8 f6 e6 ff ff       	call   830047f8 <_free_r>
83006102:	83 c4 10             	add    $0x10,%esp
83006105:	90                   	nop
83006106:	c9                   	leave  
83006107:	c3                   	ret    

83006108 <_reclaim_reent>:
83006108:	55                   	push   %ebp
83006109:	89 e5                	mov    %esp,%ebp
8300610b:	83 ec 28             	sub    $0x28,%esp
8300610e:	a1 04 6e 00 83       	mov    0x83006e04,%eax
83006113:	39 45 08             	cmp    %eax,0x8(%ebp)
83006116:	0f 84 49 01 00 00    	je     83006265 <_reclaim_reent+0x15d>
8300611c:	8b 45 08             	mov    0x8(%ebp),%eax
8300611f:	8b 40 4c             	mov    0x4c(%eax),%eax
83006122:	85 c0                	test   %eax,%eax
83006124:	74 64                	je     8300618a <_reclaim_reent+0x82>
83006126:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8300612d:	eb 3e                	jmp    8300616d <_reclaim_reent+0x65>
8300612f:	8b 45 08             	mov    0x8(%ebp),%eax
83006132:	8b 50 4c             	mov    0x4c(%eax),%edx
83006135:	8b 45 f4             	mov    -0xc(%ebp),%eax
83006138:	c1 e0 02             	shl    $0x2,%eax
8300613b:	01 d0                	add    %edx,%eax
8300613d:	8b 00                	mov    (%eax),%eax
8300613f:	89 45 f0             	mov    %eax,-0x10(%ebp)
83006142:	eb 1f                	jmp    83006163 <_reclaim_reent+0x5b>
83006144:	8b 45 f0             	mov    -0x10(%ebp),%eax
83006147:	89 45 e8             	mov    %eax,-0x18(%ebp)
8300614a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8300614d:	8b 00                	mov    (%eax),%eax
8300614f:	89 45 f0             	mov    %eax,-0x10(%ebp)
83006152:	83 ec 08             	sub    $0x8,%esp
83006155:	ff 75 e8             	push   -0x18(%ebp)
83006158:	ff 75 08             	push   0x8(%ebp)
8300615b:	e8 98 e6 ff ff       	call   830047f8 <_free_r>
83006160:	83 c4 10             	add    $0x10,%esp
83006163:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
83006167:	75 db                	jne    83006144 <_reclaim_reent+0x3c>
83006169:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8300616d:	8b 45 f4             	mov    -0xc(%ebp),%eax
83006170:	83 f8 1f             	cmp    $0x1f,%eax
83006173:	76 ba                	jbe    8300612f <_reclaim_reent+0x27>
83006175:	8b 45 08             	mov    0x8(%ebp),%eax
83006178:	8b 40 4c             	mov    0x4c(%eax),%eax
8300617b:	83 ec 08             	sub    $0x8,%esp
8300617e:	50                   	push   %eax
8300617f:	ff 75 08             	push   0x8(%ebp)
83006182:	e8 71 e6 ff ff       	call   830047f8 <_free_r>
83006187:	83 c4 10             	add    $0x10,%esp
8300618a:	8b 45 08             	mov    0x8(%ebp),%eax
8300618d:	8b 40 40             	mov    0x40(%eax),%eax
83006190:	85 c0                	test   %eax,%eax
83006192:	74 15                	je     830061a9 <_reclaim_reent+0xa1>
83006194:	8b 45 08             	mov    0x8(%ebp),%eax
83006197:	8b 40 40             	mov    0x40(%eax),%eax
8300619a:	83 ec 08             	sub    $0x8,%esp
8300619d:	50                   	push   %eax
8300619e:	ff 75 08             	push   0x8(%ebp)
830061a1:	e8 52 e6 ff ff       	call   830047f8 <_free_r>
830061a6:	83 c4 10             	add    $0x10,%esp
830061a9:	8b 45 08             	mov    0x8(%ebp),%eax
830061ac:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
830061b2:	85 c0                	test   %eax,%eax
830061b4:	74 50                	je     83006206 <_reclaim_reent+0xfe>
830061b6:	8b 45 08             	mov    0x8(%ebp),%eax
830061b9:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
830061bf:	8b 55 08             	mov    0x8(%ebp),%edx
830061c2:	81 c2 4c 01 00 00    	add    $0x14c,%edx
830061c8:	39 d0                	cmp    %edx,%eax
830061ca:	74 3a                	je     83006206 <_reclaim_reent+0xfe>
830061cc:	8b 45 08             	mov    0x8(%ebp),%eax
830061cf:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
830061d5:	89 45 ec             	mov    %eax,-0x14(%ebp)
830061d8:	eb 1f                	jmp    830061f9 <_reclaim_reent+0xf1>
830061da:	8b 45 ec             	mov    -0x14(%ebp),%eax
830061dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
830061e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
830061e3:	8b 00                	mov    (%eax),%eax
830061e5:	89 45 ec             	mov    %eax,-0x14(%ebp)
830061e8:	83 ec 08             	sub    $0x8,%esp
830061eb:	ff 75 e4             	push   -0x1c(%ebp)
830061ee:	ff 75 08             	push   0x8(%ebp)
830061f1:	e8 02 e6 ff ff       	call   830047f8 <_free_r>
830061f6:	83 c4 10             	add    $0x10,%esp
830061f9:	8b 45 08             	mov    0x8(%ebp),%eax
830061fc:	05 4c 01 00 00       	add    $0x14c,%eax
83006201:	39 45 ec             	cmp    %eax,-0x14(%ebp)
83006204:	75 d4                	jne    830061da <_reclaim_reent+0xd2>
83006206:	8b 45 08             	mov    0x8(%ebp),%eax
83006209:	8b 40 54             	mov    0x54(%eax),%eax
8300620c:	85 c0                	test   %eax,%eax
8300620e:	74 15                	je     83006225 <_reclaim_reent+0x11d>
83006210:	8b 45 08             	mov    0x8(%ebp),%eax
83006213:	8b 40 54             	mov    0x54(%eax),%eax
83006216:	83 ec 08             	sub    $0x8,%esp
83006219:	50                   	push   %eax
8300621a:	ff 75 08             	push   0x8(%ebp)
8300621d:	e8 d6 e5 ff ff       	call   830047f8 <_free_r>
83006222:	83 c4 10             	add    $0x10,%esp
83006225:	8b 45 08             	mov    0x8(%ebp),%eax
83006228:	8b 40 38             	mov    0x38(%eax),%eax
8300622b:	85 c0                	test   %eax,%eax
8300622d:	74 36                	je     83006265 <_reclaim_reent+0x15d>
8300622f:	8b 45 08             	mov    0x8(%ebp),%eax
83006232:	8b 40 3c             	mov    0x3c(%eax),%eax
83006235:	83 ec 0c             	sub    $0xc,%esp
83006238:	ff 75 08             	push   0x8(%ebp)
8300623b:	ff d0                	call   *%eax
8300623d:	83 c4 10             	add    $0x10,%esp
83006240:	8b 45 08             	mov    0x8(%ebp),%eax
83006243:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
83006249:	85 c0                	test   %eax,%eax
8300624b:	74 18                	je     83006265 <_reclaim_reent+0x15d>
8300624d:	8b 45 08             	mov    0x8(%ebp),%eax
83006250:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
83006256:	83 ec 08             	sub    $0x8,%esp
83006259:	50                   	push   %eax
8300625a:	ff 75 08             	push   0x8(%ebp)
8300625d:	e8 6f fe ff ff       	call   830060d1 <cleanup_glue>
83006262:	83 c4 10             	add    $0x10,%esp
83006265:	90                   	nop
83006266:	c9                   	leave  
83006267:	c3                   	ret    

83006268 <strncmp>:
83006268:	55                   	push   %ebp
83006269:	89 e5                	mov    %esp,%ebp
8300626b:	83 ec 10             	sub    $0x10,%esp
8300626e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
83006272:	75 0a                	jne    8300627e <strncmp+0x16>
83006274:	b8 00 00 00 00       	mov    $0x0,%eax
83006279:	e9 cb 00 00 00       	jmp    83006349 <strncmp+0xe1>
8300627e:	8b 55 08             	mov    0x8(%ebp),%edx
83006281:	8b 45 0c             	mov    0xc(%ebp),%eax
83006284:	09 d0                	or     %edx,%eax
83006286:	83 e0 03             	and    $0x3,%eax
83006289:	85 c0                	test   %eax,%eax
8300628b:	0f 85 85 00 00 00    	jne    83006316 <strncmp+0xae>
83006291:	8b 45 08             	mov    0x8(%ebp),%eax
83006294:	89 45 fc             	mov    %eax,-0x4(%ebp)
83006297:	8b 45 0c             	mov    0xc(%ebp),%eax
8300629a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8300629d:	eb 36                	jmp    830062d5 <strncmp+0x6d>
8300629f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
830062a3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
830062a7:	74 1d                	je     830062c6 <strncmp+0x5e>
830062a9:	8b 45 fc             	mov    -0x4(%ebp),%eax
830062ac:	8b 00                	mov    (%eax),%eax
830062ae:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
830062b4:	8b 45 fc             	mov    -0x4(%ebp),%eax
830062b7:	8b 00                	mov    (%eax),%eax
830062b9:	f7 d0                	not    %eax
830062bb:	21 d0                	and    %edx,%eax
830062bd:	25 80 80 80 80       	and    $0x80808080,%eax
830062c2:	85 c0                	test   %eax,%eax
830062c4:	74 07                	je     830062cd <strncmp+0x65>
830062c6:	b8 00 00 00 00       	mov    $0x0,%eax
830062cb:	eb 7c                	jmp    83006349 <strncmp+0xe1>
830062cd:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
830062d1:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
830062d5:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
830062d9:	76 0e                	jbe    830062e9 <strncmp+0x81>
830062db:	8b 45 fc             	mov    -0x4(%ebp),%eax
830062de:	8b 10                	mov    (%eax),%edx
830062e0:	8b 45 f8             	mov    -0x8(%ebp),%eax
830062e3:	8b 00                	mov    (%eax),%eax
830062e5:	39 c2                	cmp    %eax,%edx
830062e7:	74 b6                	je     8300629f <strncmp+0x37>
830062e9:	8b 45 fc             	mov    -0x4(%ebp),%eax
830062ec:	89 45 08             	mov    %eax,0x8(%ebp)
830062ef:	8b 45 f8             	mov    -0x8(%ebp),%eax
830062f2:	89 45 0c             	mov    %eax,0xc(%ebp)
830062f5:	eb 1f                	jmp    83006316 <strncmp+0xae>
830062f7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
830062fb:	74 0a                	je     83006307 <strncmp+0x9f>
830062fd:	8b 45 08             	mov    0x8(%ebp),%eax
83006300:	0f b6 00             	movzbl (%eax),%eax
83006303:	84 c0                	test   %al,%al
83006305:	75 07                	jne    8300630e <strncmp+0xa6>
83006307:	b8 00 00 00 00       	mov    $0x0,%eax
8300630c:	eb 3b                	jmp    83006349 <strncmp+0xe1>
8300630e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
83006312:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
83006316:	8b 45 10             	mov    0x10(%ebp),%eax
83006319:	8d 50 ff             	lea    -0x1(%eax),%edx
8300631c:	89 55 10             	mov    %edx,0x10(%ebp)
8300631f:	85 c0                	test   %eax,%eax
83006321:	74 10                	je     83006333 <strncmp+0xcb>
83006323:	8b 45 08             	mov    0x8(%ebp),%eax
83006326:	0f b6 10             	movzbl (%eax),%edx
83006329:	8b 45 0c             	mov    0xc(%ebp),%eax
8300632c:	0f b6 00             	movzbl (%eax),%eax
8300632f:	38 c2                	cmp    %al,%dl
83006331:	74 c4                	je     830062f7 <strncmp+0x8f>
83006333:	8b 45 08             	mov    0x8(%ebp),%eax
83006336:	0f b6 00             	movzbl (%eax),%eax
83006339:	0f b6 d0             	movzbl %al,%edx
8300633c:	8b 45 0c             	mov    0xc(%ebp),%eax
8300633f:	0f b6 00             	movzbl (%eax),%eax
83006342:	0f b6 c8             	movzbl %al,%ecx
83006345:	89 d0                	mov    %edx,%eax
83006347:	29 c8                	sub    %ecx,%eax
83006349:	c9                   	leave  
8300634a:	c3                   	ret    

8300634b <__get_global_locale>:
8300634b:	55                   	push   %ebp
8300634c:	89 e5                	mov    %esp,%ebp
8300634e:	b8 40 72 00 83       	mov    $0x83007240,%eax
83006353:	5d                   	pop    %ebp
83006354:	c3                   	ret    

83006355 <__get_current_locale>:
83006355:	55                   	push   %ebp
83006356:	89 e5                	mov    %esp,%ebp
83006358:	e8 ee ff ff ff       	call   8300634b <__get_global_locale>
8300635d:	5d                   	pop    %ebp
8300635e:	c3                   	ret    

8300635f <_wcrtomb_r>:
8300635f:	55                   	push   %ebp
83006360:	89 e5                	mov    %esp,%ebp
83006362:	83 ec 18             	sub    $0x18,%esp
83006365:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8300636c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
83006370:	75 21                	jne    83006393 <_wcrtomb_r+0x34>
83006372:	e8 de ff ff ff       	call   83006355 <__get_current_locale>
83006377:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8300637d:	ff 75 14             	push   0x14(%ebp)
83006380:	6a 00                	push   $0x0
83006382:	8d 55 ea             	lea    -0x16(%ebp),%edx
83006385:	52                   	push   %edx
83006386:	ff 75 08             	push   0x8(%ebp)
83006389:	ff d0                	call   *%eax
8300638b:	83 c4 10             	add    $0x10,%esp
8300638e:	89 45 f4             	mov    %eax,-0xc(%ebp)
83006391:	eb 1f                	jmp    830063b2 <_wcrtomb_r+0x53>
83006393:	e8 bd ff ff ff       	call   83006355 <__get_current_locale>
83006398:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8300639e:	ff 75 14             	push   0x14(%ebp)
830063a1:	ff 75 10             	push   0x10(%ebp)
830063a4:	ff 75 0c             	push   0xc(%ebp)
830063a7:	ff 75 08             	push   0x8(%ebp)
830063aa:	ff d0                	call   *%eax
830063ac:	83 c4 10             	add    $0x10,%esp
830063af:	89 45 f4             	mov    %eax,-0xc(%ebp)
830063b2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
830063b6:	75 19                	jne    830063d1 <_wcrtomb_r+0x72>
830063b8:	8b 45 14             	mov    0x14(%ebp),%eax
830063bb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
830063c1:	8b 45 08             	mov    0x8(%ebp),%eax
830063c4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
830063ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830063cf:	eb 03                	jmp    830063d4 <_wcrtomb_r+0x75>
830063d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
830063d4:	c9                   	leave  
830063d5:	c3                   	ret    

830063d6 <wcrtomb>:
830063d6:	55                   	push   %ebp
830063d7:	89 e5                	mov    %esp,%ebp
830063d9:	83 ec 28             	sub    $0x28,%esp
830063dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
830063e3:	a1 04 6e 00 83       	mov    0x83006e04,%eax
830063e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
830063eb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
830063ef:	75 21                	jne    83006412 <wcrtomb+0x3c>
830063f1:	e8 5f ff ff ff       	call   83006355 <__get_current_locale>
830063f6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
830063fc:	ff 75 10             	push   0x10(%ebp)
830063ff:	6a 00                	push   $0x0
83006401:	8d 55 e6             	lea    -0x1a(%ebp),%edx
83006404:	52                   	push   %edx
83006405:	ff 75 f0             	push   -0x10(%ebp)
83006408:	ff d0                	call   *%eax
8300640a:	83 c4 10             	add    $0x10,%esp
8300640d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83006410:	eb 1f                	jmp    83006431 <wcrtomb+0x5b>
83006412:	e8 3e ff ff ff       	call   83006355 <__get_current_locale>
83006417:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8300641d:	ff 75 10             	push   0x10(%ebp)
83006420:	ff 75 0c             	push   0xc(%ebp)
83006423:	ff 75 08             	push   0x8(%ebp)
83006426:	ff 75 f0             	push   -0x10(%ebp)
83006429:	ff d0                	call   *%eax
8300642b:	83 c4 10             	add    $0x10,%esp
8300642e:	89 45 f4             	mov    %eax,-0xc(%ebp)
83006431:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83006435:	75 19                	jne    83006450 <wcrtomb+0x7a>
83006437:	8b 45 10             	mov    0x10(%ebp),%eax
8300643a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
83006440:	8b 45 f0             	mov    -0x10(%ebp),%eax
83006443:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
83006449:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8300644e:	eb 03                	jmp    83006453 <wcrtomb+0x7d>
83006450:	8b 45 f4             	mov    -0xc(%ebp),%eax
83006453:	c9                   	leave  
83006454:	c3                   	ret    

83006455 <__get_global_locale>:
83006455:	55                   	push   %ebp
83006456:	89 e5                	mov    %esp,%ebp
83006458:	b8 40 72 00 83       	mov    $0x83007240,%eax
8300645d:	5d                   	pop    %ebp
8300645e:	c3                   	ret    

8300645f <__get_current_locale>:
8300645f:	55                   	push   %ebp
83006460:	89 e5                	mov    %esp,%ebp
83006462:	e8 ee ff ff ff       	call   83006455 <__get_global_locale>
83006467:	5d                   	pop    %ebp
83006468:	c3                   	ret    

83006469 <_wctomb_r>:
83006469:	55                   	push   %ebp
8300646a:	89 e5                	mov    %esp,%ebp
8300646c:	83 ec 08             	sub    $0x8,%esp
8300646f:	e8 eb ff ff ff       	call   8300645f <__get_current_locale>
83006474:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8300647a:	ff 75 14             	push   0x14(%ebp)
8300647d:	ff 75 10             	push   0x10(%ebp)
83006480:	ff 75 0c             	push   0xc(%ebp)
83006483:	ff 75 08             	push   0x8(%ebp)
83006486:	ff d0                	call   *%eax
83006488:	83 c4 10             	add    $0x10,%esp
8300648b:	c9                   	leave  
8300648c:	c3                   	ret    

8300648d <__ascii_wctomb>:
8300648d:	55                   	push   %ebp
8300648e:	89 e5                	mov    %esp,%ebp
83006490:	83 ec 10             	sub    $0x10,%esp
83006493:	8b 45 10             	mov    0x10(%ebp),%eax
83006496:	89 45 fc             	mov    %eax,-0x4(%ebp)
83006499:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8300649d:	75 07                	jne    830064a6 <__ascii_wctomb+0x19>
8300649f:	b8 00 00 00 00       	mov    $0x0,%eax
830064a4:	eb 28                	jmp    830064ce <__ascii_wctomb+0x41>
830064a6:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
830064ad:	76 10                	jbe    830064bf <__ascii_wctomb+0x32>
830064af:	8b 45 08             	mov    0x8(%ebp),%eax
830064b2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
830064b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
830064bd:	eb 0f                	jmp    830064ce <__ascii_wctomb+0x41>
830064bf:	8b 45 fc             	mov    -0x4(%ebp),%eax
830064c2:	89 c2                	mov    %eax,%edx
830064c4:	8b 45 0c             	mov    0xc(%ebp),%eax
830064c7:	88 10                	mov    %dl,(%eax)
830064c9:	b8 01 00 00 00       	mov    $0x1,%eax
830064ce:	c9                   	leave  
830064cf:	c3                   	ret    

830064d0 <__env_lock>:
830064d0:	55                   	push   %ebp
830064d1:	89 e5                	mov    %esp,%ebp
830064d3:	90                   	nop
830064d4:	5d                   	pop    %ebp
830064d5:	c3                   	ret    

830064d6 <__env_unlock>:
830064d6:	55                   	push   %ebp
830064d7:	89 e5                	mov    %esp,%ebp
830064d9:	90                   	nop
830064da:	5d                   	pop    %ebp
830064db:	c3                   	ret    

830064dc <_fstat_r>:
830064dc:	55                   	push   %ebp
830064dd:	89 e5                	mov    %esp,%ebp
830064df:	83 ec 18             	sub    $0x18,%esp
830064e2:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
830064e9:	00 00 00 
830064ec:	83 ec 08             	sub    $0x8,%esp
830064ef:	ff 75 10             	push   0x10(%ebp)
830064f2:	ff 75 0c             	push   0xc(%ebp)
830064f5:	e8 60 9d ff ff       	call   8300025a <fstat>
830064fa:	83 c4 10             	add    $0x10,%esp
830064fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
83006500:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83006504:	75 14                	jne    8300651a <_fstat_r+0x3e>
83006506:	a1 34 74 00 83       	mov    0x83007434,%eax
8300650b:	85 c0                	test   %eax,%eax
8300650d:	74 0b                	je     8300651a <_fstat_r+0x3e>
8300650f:	8b 15 34 74 00 83    	mov    0x83007434,%edx
83006515:	8b 45 08             	mov    0x8(%ebp),%eax
83006518:	89 10                	mov    %edx,(%eax)
8300651a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300651d:	c9                   	leave  
8300651e:	c3                   	ret    

8300651f <_isatty_r>:
8300651f:	55                   	push   %ebp
83006520:	89 e5                	mov    %esp,%ebp
83006522:	83 ec 18             	sub    $0x18,%esp
83006525:	c7 05 34 74 00 83 00 	movl   $0x0,0x83007434
8300652c:	00 00 00 
8300652f:	83 ec 0c             	sub    $0xc,%esp
83006532:	ff 75 0c             	push   0xc(%ebp)
83006535:	e8 ff 9c ff ff       	call   83000239 <isatty>
8300653a:	83 c4 10             	add    $0x10,%esp
8300653d:	89 45 f4             	mov    %eax,-0xc(%ebp)
83006540:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
83006544:	75 14                	jne    8300655a <_isatty_r+0x3b>
83006546:	a1 34 74 00 83       	mov    0x83007434,%eax
8300654b:	85 c0                	test   %eax,%eax
8300654d:	74 0b                	je     8300655a <_isatty_r+0x3b>
8300654f:	8b 15 34 74 00 83    	mov    0x83007434,%edx
83006555:	8b 45 08             	mov    0x8(%ebp),%eax
83006558:	89 10                	mov    %edx,(%eax)
8300655a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8300655d:	c9                   	leave  
8300655e:	c3                   	ret    
