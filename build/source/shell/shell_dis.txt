
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000af9

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009710 memsz 0x00009ec0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008548  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000007bd  81008560  81008560  00009560  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008d20  81008d20  00009d20  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000007a0  81009720  81009720  0000a710  2**5
                  ALLOC
  4 .debug_info   0002ac8c  00000000  00000000  0000a710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009a8a  00000000  00000000  0003539c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000009a8  00000000  00000000  0003ee28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000070  00000000  00000000  0003f7d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005ea4  00000000  00000000  0003f840  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000177c  00000000  00000000  000456e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00001736  00000000  00000000  00046e60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00048596  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001f10  00000000  00000000  000485d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81009720 l     O .bss	00000200 cmd_buf
81008d20 l     O .data	00000004 prompt
81009920 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
8100054f l     F .text	00000119 do_cp
81000668 l     F .text	00000075 do_rm
81008800 l     O .rodata	00000060 cmd_list
810006dd l     F .text	0000003e cli_init
8100071b l     F .text	00000033 show_prompt
8100074e l     F .text	00000043 find_builtin
81000791 l     F .text	00000049 run_builtin
810007da l     F .text	000000e5 run_exec_file
810008bf l     F .text	00000081 find_exec_path
81009d40 l     O .bss	000000ff path.0
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
8100150c l     F .text	000000ad std
810015b9 l     F .text	0000001b stdin_init
810015d4 l     F .text	0000001b stdout_init
810015ef l     F .text	0000001b stderr_init
81009e40 l     O .bss	00000004 __sfp_recursive_mutex
81009e44 l     O .bss	00000004 __sinit_recursive_mutex
810018b2 l     F .text	0000000a __fp_lock
810018bc l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81009e50 l     O .bss	00000004 optwhere
81009e54 l     O .bss	00000004 permute_from
81009e58 l     O .bss	00000004 num_nonopts
81002970 l     F .text	0000007b reverse_argv_elements
810029eb l     F .text	00000036 permute
81002a21 l     F .text	00000031 is_option
81002a52 l     F .text	00000059 read_globals
81002aab l     F .text	00000052 write_globals
81002afd l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81008d40 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003921 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100446d l       .text	00000000 L20
81004424 l       .text	00000000 L5
8100446a l       .text	00000000 L15
81004430 l       .text	00000000 L8
81004451 l       .text	00000000 L9
81004460 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810044bf l       .text	00000000 L4
810044b1 l       .text	00000000 BYTECMP
810044ac l       .text	00000000 L5
810044b3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009ea8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004680 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81005424 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81005b1b l       .text	00000000 L25
81005ac2 l       .text	00000000 L5
81005b0e l       .text	00000000 L14
81005b14 l       .text	00000000 L19
81005ad3 l       .text	00000000 L10
81005b00 l       .text	00000000 L9
81005b03 l       .text	00000000 L15
81005b4e l       .text	00000000 L26
81005b51 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005c56 l       .text	00000000 L5
81005c8e l       .text	00000000 L15
81005c60 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81005d9c l     F .text	0000000a __locale_ctype_ptr_l
81005da6 l     F .text	0000000a __get_global_locale
81005db0 l     F .text	0000000a __get_current_locale
81005dba l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009eb0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006645 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81009590 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006ef8 l     F .text	0000000a __get_global_locale
81006f02 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006fe4 l     F .text	0000000a __get_global_locale
81006fee l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
81007830 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810083b7 l     F .text	0000000a __get_global_locale
810083c1 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084c1 l     F .text	0000000a __get_global_locale
810084cb l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009eb8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009ebc l     O .bss	00000004 __env_recursive_mutex
81006eb8 g     F .text	00000040 _isatty_r
8100528d g     F .text	00000037 cleanup_glue
8100519b g     F .text	000000d6 _puts_r
81006f9e g     F .text	00000046 _lseek_r
81000c48 g     F .text	0000001b yield
8100589e g     F .text	00000055 _siprintf_r
81006432 g     F .text	000000ba __sflags
81000edc g     F .text	00000039 ioctl
81005d82 g     F .text	0000001a strtok_r
81005166 g     F .text	00000035 printf
810083cb g     F .text	00000077 _wcrtomb_r
810059f4 g     F .text	0000004a __sseek
81001801 g     F .text	00000099 __sinit
81005fff g     F .text	00000112 __swbuf_r
81006f0c g     F .text	0000005f _setlocale_r
8100160a g     F .text	0000006f __sfmoreglue
8100459e g     F .text	00000006 __malloc_unlock
81007080 g       .text	00000000 memmove
81003659 g     F .text	00000049 getopt_long
810017e7 g     F .text	0000001a _cleanup
81005cc2 g     F .text	000000c0 __strtok_r
81006428 g     F .text	0000000a __errno
81006d8e g     F .text	00000020 getenv
8100273b g     F .text	00000043 _fstat_r
81009eac g     O .bss	00000004 errno
810082b7 g     F .text	0000001d __srget
8100598f g     F .text	0000000a __seofread
81000c1b g     F .text	0000002d execve
81000bbd g     F .text	0000001b getpid
810014ed g     F .text	0000001f fgets
81006c98 g     F .text	00000067 _getc_r
81006cff g     F .text	0000006f getc
810044c8 g       .text	00000000 memcpy
81005692 g     F .text	0000020c setvbuf
810017c6 g     F .text	00000021 _cleanup_r
810074f6 g     F .text	0000033a _svfprintf_r
81005271 g     F .text	0000001c puts
810038e8 g     F .text	0000001c malloc
81005139 g     F .text	0000002d _printf_r
81000d32 g     F .text	00000021 isatty
8100375e g     F .text	0000000a __getreent
81009e48 g     O .bss	00000004 optarg
81009e60 g     O .bss	00000004 __malloc_top_pad
81009720 g       .bss	00000000 __bss_start__
810067fa g     F .text	0000049e __sfvwrite_r
81005652 g     F .text	00000040 _sbrk_r
81008d24 g     O .data	00000004 opterr
81000e67 g     F .text	00000040 readdir
81007934 g     F .text	00000046 _read_r
81000fb4 g     F .text	00000107 _fclose_r
81001356 g     F .text	00000039 fflush
81009e64 g     O .bss	00000004 __malloc_max_sbrked_mem
81000d05 g     F .text	0000002d lseek
810089b0 g     O .rodata	00000004 _global_impure_ptr
8100797a g     F .text	000008da _realloc_r
81005fb1 g     F .text	00000025 strtol_l
8100675b g     F .text	00000057 _fputwc_r
810018c6 g     F .text	00000024 __fp_lock_all
81005fd6 g     F .text	00000029 strtol
8100226a g     F .text	000004b1 _fseeko_r
810052c4 g     F .text	00000160 _reclaim_reent
810064ec g     F .text	00000046 _fputc_r
81000cb7 g     F .text	0000002d write
81007896 g     F .text	0000004b _putc_r
8100970c g     O .data	00000004 environ
81000d53 g     F .text	00000027 fstat
81001a2b g     F .text	0000002c fprintf
81003737 g     F .text	00000027 __getopt_long_only_r
8100271b g     F .text	00000020 fseeko
81000f56 g     F .text	0000001a _atoi_r
8100710d g     F .text	000001b7 __ssputs_r
8100224a g     F .text	00000020 fseek
81000b47 g     F .text	0000004c sys_call
810046e6 g     F .text	000000a8 __sfputs_r
81009e4c g     O .bss	00000004 optind
8100189a g     F .text	00000006 __sfp_lock_acquire
810043e0 g       .text	00000000 memchr
8100589e g     F .text	00000055 _sprintf_r
81009ec0 g       .bss	00000000 __bss_end__
81001cf1 g     F .text	000003db _free_r
81000dde g     F .text	00000021 wait
81008a80 g     O .rodata	00000180 _ctype_b
81006f6b g     F .text	00000014 __locale_mb_cur_max
81008254 g     F .text	00000063 __srget_r
810062d3 g     F .text	00000115 __call_exitprocs
8100958c g     O .data	00000004 __malloc_sbrk_base
81000af9 g       .text	00000000 _start
81000c8a g     F .text	0000002d read
810072c4 g     F .text	00000232 __ssprint_r
810050f3 g     F .text	00000046 _open_r
810082d4 g     F .text	000000e3 strncmp
81003710 g     F .text	00000027 __getopt_long_r
81009e80 g     O .bss	00000028 __malloc_current_mallinfo
81000f15 g     F .text	00000027 unlink
81005139 g     F .text	0000002d _iprintf_r
810063e8 g     F .text	00000040 _close_r
81005c99 g     F .text	00000029 strtok
81004475 g       .text	00000000 memcmp
81002851 g     F .text	000000b8 _fwrite_r
81000c00 g     F .text	0000001b fork
81006178 g     F .text	0000015b __swsetup_r
81001679 g     F .text	0000014d __sfp
81009180 g     O .data	00000408 __malloc_av_
810018ac g     F .text	00000006 __sinit_lock_release
8100594b g     F .text	00000044 __sread
81001ccc g     F .text	00000025 fread
81004598 g     F .text	00000006 __malloc_lock
81001a02 g     F .text	00000029 _fprintf_r
81000d7a g     F .text	00000021 sbrk
810012fe g     F .text	00000058 _fflush_r
81000b09 g     F .text	0000003e cstart
810019e3 g     F .text	0000001f fopen
81003612 g     F .text	00000047 getopt
81004510 g       .text	00000000 memset
81000940 g     F .text	000001b9 main
81009e68 g     O .bss	00000004 __malloc_max_total_mem
81006111 g     F .text	00000021 __swbuf
81001a57 g     F .text	00000275 _fread_r
81005a3e g     F .text	00000025 __sclose
810010bb g     F .text	0000001d fclose
81005f8c g     F .text	00000025 _strtol_r
8100294b g     F .text	00000025 getchar
81006dae g     F .text	000000ed _findenv_r
81003bb4 g     F .text	00000822 _malloc_r
810084f9 g     F .text	00000043 __ascii_wctomb
81000dff g     F .text	00000068 opendir
81001a02 g     F .text	00000029 _fiprintf_r
81008542 g     F .text	00000006 __env_unlock
81006d6e g     F .text	00000020 _findenv
8100277e g     F .text	00000068 _fwalk
8100138f g     F .text	0000015e _fgets_r
81006ff8 g     F .text	0000002a _mbtowc_r
810078e1 g     F .text	00000053 putc
810036a2 g     F .text	00000049 getopt_long_only
810020cc g     F .text	00000161 _malloc_trim_r
81005b6c g     F .text	000000a5 strcmp
8100478e g     F .text	00000025 vfiprintf
81000d9b g     F .text	00000021 dup
81005166 g     F .text	00000035 iprintf
810058f3 g     F .text	00000058 sprintf
81009eb4 g     O .bss	00000004 _PathLocale
81006132 g     F .text	00000046 _write_r
81006f7f g     F .text	0000001f setlocale
81004b09 g     F .text	0000019b _printf_common
81009164 g     O .data	00000004 _impure_ptr
810010d8 g     F .text	00000226 __sflush_r
8100222d g     F .text	0000001d _fseek_r
810074f6 g     F .text	0000033a _svfiprintf_r
81005451 g     F .text	00000201 __srefill_r
81007022 g     F .text	00000058 __ascii_mbtowc
810018ea g     F .text	00000024 __fp_unlock_all
81006532 g     F .text	0000004e fputc
81000bd8 g     F .text	00000028 print_msg
81008d28 g     O .data	00000004 optopt
81003855 g     F .text	00000093 __swhatbuf_r
81002909 g     F .text	00000025 fwrite
8100292e g     F .text	0000001d _getchar_r
810066ab g     F .text	000000b0 __fputwc
81006580 g     F .text	000000a6 _fputs_r
81005999 g     F .text	0000005b __swrite
81009588 g     O .data	00000004 __malloc_trim_threshold
81000f70 g     F .text	00000044 exit
81001a2b g     F .text	0000002c fiprintf
810047b3 g     F .text	00000356 _vfiprintf_r
810027e6 g     F .text	0000006b _fwalk_reent
810018a0 g     F .text	00000006 __sfp_lock_release
810058f3 g     F .text	00000058 siprintf
81000f3c g     F .text	0000001a atoi
81008c00 g     O .rodata	00000101 _ctype_
810036eb g     F .text	00000025 __getopt_r
8100190e g     F .text	000000d5 _fopen_r
81000dbc g     F .text	00000022 _exit
81003768 g     F .text	000000ed __smakebuf_r
81005c20 g       .text	00000000 strlen
81004ca4 g     F .text	0000044f _printf_i
81000c63 g     F .text	00000027 open
810045a4 g     F .text	000000dc __sprint_r
81005a70 g       .text	00000000 strchr
81006626 g     F .text	0000001f fputs
81000ea7 g     F .text	00000035 closedir
810084d5 g     F .text	00000024 _wctomb_r
8100853c g     F .text	00000006 __env_lock
810047b3 g     F .text	00000356 _vfprintf_r
81000b93 g     F .text	0000002a msleep
81008442 g     F .text	0000007f wcrtomb
81000ce4 g     F .text	00000021 close
810095a0 g     O .data	0000016c __global_locale
8100478e g     F .text	00000025 vfprintf
810067b2 g     F .text	00000048 fputwc
81003904 g     F .text	0000001d free
810018a6 g     F .text	00000006 __sinit_lock_acquire
81006e9b g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 20 9d 00 81       	mov    0x81009d20,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 66 85 00 81       	push   $0x81008566
81000025:	e8 3c 51 00 00       	call   81005166 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 24 9d 00 81       	mov    0x81009d24,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 71 85 00 81       	push   $0x81008571
81000050:	68 76 85 00 81       	push   $0x81008576
81000055:	e8 0c 51 00 00       	call   81005166 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 79 85 00 81       	push   $0x81008579
81000065:	68 76 85 00 81       	push   $0x81008576
8100006a:	e8 f7 50 00 00       	call   81005166 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 d0 36 00 00       	call   8100375e <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 47 14 00 00       	call   810014ed <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 b5 51 00 00       	call   81005271 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 4c 9e 00 81 00 	movl   $0x0,0x81009e4c
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 80 85 00 81       	push   $0x81008580
81000107:	e8 65 51 00 00       	call   81005271 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 86 85 00 81       	push   $0x81008586
81000117:	e8 55 51 00 00       	call   81005271 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 98 85 00 81       	push   $0x81008598
81000127:	e8 45 51 00 00       	call   81005271 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 48 9e 00 81       	mov    0x81009e48,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 f5 0d 00 00       	call   81000f3c <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 48 9e 00 81       	mov    0x81009e48,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 48 9e 00 81    	mov    0x81009e48,%ebx
8100015e:	e8 fb 35 00 00       	call   8100375e <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 b8 85 00 81       	push   $0x810085b8
8100016f:	50                   	push   %eax
81000170:	e8 b6 18 00 00       	call   81001a2b <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 d7 85 00 81       	push   $0x810085d7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 7c 34 00 00       	call   81003612 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 ad 35 00 00       	call   8100375e <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 dc 85 00 81       	push   $0x810085dc
810001be:	e8 46 27 00 00       	call   81002909 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 4c 9e 00 81       	mov    0x81009e4c,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 82 35 00 00       	call   8100375e <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 0f 86 00 81       	push   $0x8100860f
810001e9:	e8 1b 27 00 00       	call   81002909 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 4c 9e 00 81       	mov    0x81009e4c,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 4f 50 00 00       	call   81005271 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 25 0d 00 00       	call   81000f70 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 2b 86 00 81       	push   $0x8100862b
81000259:	e8 a1 0b 00 00       	call   81000dff <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 30 86 00 81       	push   $0x81008630
81000272:	e8 fa 4f 00 00       	call   81005271 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 41 86 00 81       	push   $0x81008641
810002ac:	e8 b5 4e 00 00       	call   81005166 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 a8 0b 00 00       	call   81000e67 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 d1 0b 00 00       	call   81000ea7 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 4c 9e 00 81 00 	movl   $0x0,0x81009e4c
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 80 85 00 81       	push   $0x81008580
81000321:	e8 4b 4f 00 00       	call   81005271 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 4b 86 00 81       	push   $0x8100864b
81000331:	e8 3b 4f 00 00       	call   81005271 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 5e 86 00 81       	push   $0x8100865e
81000341:	e8 2b 4f 00 00       	call   81005271 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 48 9e 00 81       	mov    0x81009e48,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 48 9e 00 81    	mov    0x81009e48,%ebx
8100036b:	e8 ee 33 00 00       	call   8100375e <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 b8 85 00 81       	push   $0x810085b8
8100037c:	50                   	push   %eax
8100037d:	e8 a9 16 00 00       	call   81001a2b <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 75 86 00 81       	push   $0x81008675
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 6f 32 00 00       	call   81003612 <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 4c 9e 00 81       	mov    0x81009e4c,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 9c 33 00 00       	call   8100375e <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 78 86 00 81       	push   $0x81008678
810003cf:	e8 35 25 00 00       	call   81002909 <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 4c 9e 00 81       	mov    0x81009e4c,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 91 86 00 81       	push   $0x81008691
810003fc:	50                   	push   %eax
810003fd:	e8 e1 15 00 00       	call   810019e3 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 4c 9e 00 81       	mov    0x81009e4c,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 38 33 00 00       	call   8100375e <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 94 86 00 81       	push   $0x81008694
81000432:	50                   	push   %eax
81000433:	e8 f3 15 00 00       	call   81001a2b <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 90 34 00 00       	call   810038e8 <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 00 4e 00 00       	call   81005271 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 68 10 00 00       	call   810014ed <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 c8 32 00 00       	call   8100375e <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 ed 51 00 00       	call   81005692 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 27 0a 00 00       	call   81000edc <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 24 10 00 00       	call   810014ed <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 91 4d 00 00       	call   81005271 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 5b 24 00 00       	call   8100294b <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 5a 32 00 00       	call   8100375e <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 7c 51 00 00       	call   81005692 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 b6 09 00 00       	call   81000edc <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 d0 33 00 00       	call   81003904 <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 79 0b 00 00       	call   810010bb <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <do_cp>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_cp(int argc, const char **argv) {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 28             	sub    $0x28,%esp
  if (argc < 3) {
81000555:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
81000559:	7f 24                	jg     8100057f <do_cp+0x30>
    fprintf(stderr, "no [from] or no [to]\n");
8100055b:	e8 fe 31 00 00       	call   8100375e <__getreent>
81000560:	8b 40 0c             	mov    0xc(%eax),%eax
81000563:	50                   	push   %eax
81000564:	6a 15                	push   $0x15
81000566:	6a 01                	push   $0x1
81000568:	68 b3 86 00 81       	push   $0x810086b3
8100056d:	e8 97 23 00 00       	call   81002909 <fwrite>
81000572:	83 c4 10             	add    $0x10,%esp
    return -1;
81000575:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100057a:	e9 e7 00 00 00       	jmp    81000666 <do_cp+0x117>
  }

  FILE *from, *to;
  from = fopen(argv[1], "rb");
8100057f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000582:	83 c0 04             	add    $0x4,%eax
81000585:	8b 00                	mov    (%eax),%eax
81000587:	83 ec 08             	sub    $0x8,%esp
8100058a:	68 c9 86 00 81       	push   $0x810086c9
8100058f:	50                   	push   %eax
81000590:	e8 4e 14 00 00       	call   810019e3 <fopen>
81000595:	83 c4 10             	add    $0x10,%esp
81000598:	89 45 f4             	mov    %eax,-0xc(%ebp)
  to = fopen(argv[2], "wbt");
8100059b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100059e:	83 c0 08             	add    $0x8,%eax
810005a1:	8b 00                	mov    (%eax),%eax
810005a3:	83 ec 08             	sub    $0x8,%esp
810005a6:	68 cc 86 00 81       	push   $0x810086cc
810005ab:	50                   	push   %eax
810005ac:	e8 32 14 00 00       	call   810019e3 <fopen>
810005b1:	83 c4 10             	add    $0x10,%esp
810005b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (!from || !to) {
810005b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005bb:	74 06                	je     810005c3 <do_cp+0x74>
810005bd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005c1:	75 1c                	jne    810005df <do_cp+0x90>
    fprintf(stderr, "open file failed\n");
810005c3:	e8 96 31 00 00       	call   8100375e <__getreent>
810005c8:	8b 40 0c             	mov    0xc(%eax),%eax
810005cb:	50                   	push   %eax
810005cc:	6a 11                	push   $0x11
810005ce:	6a 01                	push   $0x1
810005d0:	68 d0 86 00 81       	push   $0x810086d0
810005d5:	e8 2f 23 00 00       	call   81002909 <fwrite>
810005da:	83 c4 10             	add    $0x10,%esp
    goto  cp_failed;
810005dd:	eb 5a                	jmp    81000639 <do_cp+0xea>
  }

  int buf_len = 255;
810005df:	c7 45 ec ff 00 00 00 	movl   $0xff,-0x14(%ebp)
  char *buf = (char *)malloc(buf_len);
810005e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810005e9:	83 ec 0c             	sub    $0xc,%esp
810005ec:	50                   	push   %eax
810005ed:	e8 f6 32 00 00       	call   810038e8 <malloc>
810005f2:	83 c4 10             	add    $0x10,%esp
810005f5:	89 45 e8             	mov    %eax,-0x18(%ebp)
  int size;
  while ((size = fread(buf, 1, buf_len, from)) > 0) {
810005f8:	eb 14                	jmp    8100060e <do_cp+0xbf>
    fwrite(buf, 1, size, to);
810005fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810005fd:	ff 75 f0             	push   -0x10(%ebp)
81000600:	50                   	push   %eax
81000601:	6a 01                	push   $0x1
81000603:	ff 75 e8             	push   -0x18(%ebp)
81000606:	e8 fe 22 00 00       	call   81002909 <fwrite>
8100060b:	83 c4 10             	add    $0x10,%esp
  while ((size = fread(buf, 1, buf_len, from)) > 0) {
8100060e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000611:	ff 75 f4             	push   -0xc(%ebp)
81000614:	50                   	push   %eax
81000615:	6a 01                	push   $0x1
81000617:	ff 75 e8             	push   -0x18(%ebp)
8100061a:	e8 ad 16 00 00       	call   81001ccc <fread>
8100061f:	83 c4 10             	add    $0x10,%esp
81000622:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000625:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000629:	7f cf                	jg     810005fa <do_cp+0xab>
  }
  free(buf);
8100062b:	83 ec 0c             	sub    $0xc,%esp
8100062e:	ff 75 e8             	push   -0x18(%ebp)
81000631:	e8 ce 32 00 00       	call   81003904 <free>
81000636:	83 c4 10             	add    $0x10,%esp

cp_failed:
  if (from) {
81000639:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100063d:	74 0e                	je     8100064d <do_cp+0xfe>
    fclose(from);
8100063f:	83 ec 0c             	sub    $0xc,%esp
81000642:	ff 75 f4             	push   -0xc(%ebp)
81000645:	e8 71 0a 00 00       	call   810010bb <fclose>
8100064a:	83 c4 10             	add    $0x10,%esp
  }

  if (to) {
8100064d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000651:	74 0e                	je     81000661 <do_cp+0x112>
    fclose(to);
81000653:	83 ec 0c             	sub    $0xc,%esp
81000656:	ff 75 f0             	push   -0x10(%ebp)
81000659:	e8 5d 0a 00 00       	call   810010bb <fclose>
8100065e:	83 c4 10             	add    $0x10,%esp
  }

  return 0;
81000661:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000666:	c9                   	leave  
81000667:	c3                   	ret    

81000668 <do_rm>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_rm(int argc, const char **argv) {
81000668:	55                   	push   %ebp
81000669:	89 e5                	mov    %esp,%ebp
8100066b:	53                   	push   %ebx
8100066c:	83 ec 14             	sub    $0x14,%esp
  if (argc < 2) {
8100066f:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000673:	7f 21                	jg     81000696 <do_rm+0x2e>
    fprintf(stderr, "no file input\n");
81000675:	e8 e4 30 00 00       	call   8100375e <__getreent>
8100067a:	8b 40 0c             	mov    0xc(%eax),%eax
8100067d:	50                   	push   %eax
8100067e:	6a 0e                	push   $0xe
81000680:	6a 01                	push   $0x1
81000682:	68 e2 86 00 81       	push   $0x810086e2
81000687:	e8 7d 22 00 00       	call   81002909 <fwrite>
8100068c:	83 c4 10             	add    $0x10,%esp
    return -1;
8100068f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000694:	eb 42                	jmp    810006d8 <do_rm+0x70>
  }

  int err = unlink(argv[1]);
81000696:	8b 45 0c             	mov    0xc(%ebp),%eax
81000699:	83 c0 04             	add    $0x4,%eax
8100069c:	8b 00                	mov    (%eax),%eax
8100069e:	83 ec 0c             	sub    $0xc,%esp
810006a1:	50                   	push   %eax
810006a2:	e8 6e 08 00 00       	call   81000f15 <unlink>
810006a7:	83 c4 10             	add    $0x10,%esp
810006aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (err < 0) {
810006ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006b1:	79 22                	jns    810006d5 <do_rm+0x6d>
    fprintf(stderr, "rm file failed: %s\n", argv[1]);
810006b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810006b6:	83 c0 04             	add    $0x4,%eax
810006b9:	8b 18                	mov    (%eax),%ebx
810006bb:	e8 9e 30 00 00       	call   8100375e <__getreent>
810006c0:	8b 40 0c             	mov    0xc(%eax),%eax
810006c3:	83 ec 04             	sub    $0x4,%esp
810006c6:	53                   	push   %ebx
810006c7:	68 f1 86 00 81       	push   $0x810086f1
810006cc:	50                   	push   %eax
810006cd:	e8 59 13 00 00       	call   81001a2b <fiprintf>
810006d2:	83 c4 10             	add    $0x10,%esp
  }

  return err;
810006d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
810006d8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810006db:	c9                   	leave  
810006dc:	c3                   	ret    

810006dd <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810006dd:	55                   	push   %ebp
810006de:	89 e5                	mov    %esp,%ebp
810006e0:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810006e3:	a1 20 8d 00 81       	mov    0x81008d20,%eax
810006e8:	a3 28 9d 00 81       	mov    %eax,0x81009d28
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810006ed:	83 ec 04             	sub    $0x4,%esp
810006f0:	68 00 04 00 00       	push   $0x400
810006f5:	6a 00                	push   $0x0
810006f7:	68 20 99 00 81       	push   $0x81009920
810006fc:	e8 0f 3e 00 00       	call   81004510 <memset>
81000701:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000704:	c7 05 20 9d 00 81 00 	movl   $0x81008800,0x81009d20
8100070b:	88 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100070e:	b8 60 88 00 81       	mov    $0x81008860,%eax
81000713:	a3 24 9d 00 81       	mov    %eax,0x81009d24
}
81000718:	90                   	nop
81000719:	c9                   	leave  
8100071a:	c3                   	ret    

8100071b <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100071b:	55                   	push   %ebp
8100071c:	89 e5                	mov    %esp,%ebp
8100071e:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000721:	a1 28 9d 00 81       	mov    0x81009d28,%eax
81000726:	83 ec 08             	sub    $0x8,%esp
81000729:	50                   	push   %eax
8100072a:	68 76 85 00 81       	push   $0x81008576
8100072f:	e8 32 4a 00 00       	call   81005166 <iprintf>
81000734:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000737:	e8 22 30 00 00       	call   8100375e <__getreent>
8100073c:	8b 40 08             	mov    0x8(%eax),%eax
8100073f:	83 ec 0c             	sub    $0xc,%esp
81000742:	50                   	push   %eax
81000743:	e8 0e 0c 00 00       	call   81001356 <fflush>
81000748:	83 c4 10             	add    $0x10,%esp
}
8100074b:	90                   	nop
8100074c:	c9                   	leave  
8100074d:	c3                   	ret    

8100074e <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
8100074e:	55                   	push   %ebp
8100074f:	89 e5                	mov    %esp,%ebp
81000751:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000754:	a1 20 9d 00 81       	mov    0x81009d20,%eax
81000759:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100075c:	eb 22                	jmp    81000780 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
8100075e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000761:	8b 00                	mov    (%eax),%eax
81000763:	83 ec 08             	sub    $0x8,%esp
81000766:	ff 75 08             	push   0x8(%ebp)
81000769:	50                   	push   %eax
8100076a:	e8 fd 53 00 00       	call   81005b6c <strcmp>
8100076f:	83 c4 10             	add    $0x10,%esp
81000772:	85 c0                	test   %eax,%eax
81000774:	75 05                	jne    8100077b <find_builtin+0x2d>
      continue;
    }
    return cmd;
81000776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000779:	eb 14                	jmp    8100078f <find_builtin+0x41>
      continue;
8100077b:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
8100077c:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000780:	a1 24 9d 00 81       	mov    0x81009d24,%eax
81000785:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000788:	72 d4                	jb     8100075e <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
8100078a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100078f:	c9                   	leave  
81000790:	c3                   	ret    

81000791 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000791:	55                   	push   %ebp
81000792:	89 e5                	mov    %esp,%ebp
81000794:	53                   	push   %ebx
81000795:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000798:	8b 45 08             	mov    0x8(%ebp),%eax
8100079b:	8b 40 08             	mov    0x8(%eax),%eax
8100079e:	83 ec 08             	sub    $0x8,%esp
810007a1:	ff 75 10             	push   0x10(%ebp)
810007a4:	ff 75 0c             	push   0xc(%ebp)
810007a7:	ff d0                	call   *%eax
810007a9:	83 c4 10             	add    $0x10,%esp
810007ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
810007af:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007b3:	79 1f                	jns    810007d4 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
810007b5:	8b 45 08             	mov    0x8(%ebp),%eax
810007b8:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
810007ba:	e8 9f 2f 00 00       	call   8100375e <__getreent>
810007bf:	8b 40 0c             	mov    0xc(%eax),%eax
810007c2:	ff 75 f4             	push   -0xc(%ebp)
810007c5:	53                   	push   %ebx
810007c6:	68 60 88 00 81       	push   $0x81008860
810007cb:	50                   	push   %eax
810007cc:	e8 5a 12 00 00       	call   81001a2b <fiprintf>
810007d1:	83 c4 10             	add    $0x10,%esp
  }
}
810007d4:	90                   	nop
810007d5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810007d8:	c9                   	leave  
810007d9:	c3                   	ret    

810007da <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
810007da:	55                   	push   %ebp
810007db:	89 e5                	mov    %esp,%ebp
810007dd:	53                   	push   %ebx
810007de:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
810007e1:	e8 1a 04 00 00       	call   81000c00 <fork>
810007e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (pid < 0) {
810007e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007ed:	79 21                	jns    81000810 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
810007ef:	e8 6a 2f 00 00       	call   8100375e <__getreent>
810007f4:	8b 40 0c             	mov    0xc(%eax),%eax
810007f7:	83 ec 04             	sub    $0x4,%esp
810007fa:	ff 75 08             	push   0x8(%ebp)
810007fd:	68 78 88 00 81       	push   $0x81008878
81000802:	50                   	push   %eax
81000803:	e8 23 12 00 00       	call   81001a2b <fiprintf>
81000808:	83 c4 10             	add    $0x10,%esp
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
    } else {
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
    }
  }
}
8100080b:	e9 a9 00 00 00       	jmp    810008b9 <run_exec_file+0xdf>
  } else if (pid == 0) {
81000810:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000814:	75 42                	jne    81000858 <run_exec_file+0x7e>
    int err = execve(path, (char * const *)argv, (char *const *) 0);
81000816:	83 ec 04             	sub    $0x4,%esp
81000819:	6a 00                	push   $0x0
8100081b:	ff 75 10             	push   0x10(%ebp)
8100081e:	ff 75 08             	push   0x8(%ebp)
81000821:	e8 f5 03 00 00       	call   81000c1b <execve>
81000826:	83 c4 10             	add    $0x10,%esp
81000829:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (err < 0) {
8100082c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000830:	79 1c                	jns    8100084e <run_exec_file+0x74>
      fprintf(stderr, "exec failed: %s\n", path);
81000832:	e8 27 2f 00 00       	call   8100375e <__getreent>
81000837:	8b 40 0c             	mov    0xc(%eax),%eax
8100083a:	83 ec 04             	sub    $0x4,%esp
8100083d:	ff 75 08             	push   0x8(%ebp)
81000840:	68 92 88 00 81       	push   $0x81008892
81000845:	50                   	push   %eax
81000846:	e8 e0 11 00 00       	call   81001a2b <fiprintf>
8100084b:	83 c4 10             	add    $0x10,%esp
    exit(-1);
8100084e:	83 ec 0c             	sub    $0xc,%esp
81000851:	6a ff                	push   $0xffffffff
81000853:	e8 18 07 00 00       	call   81000f70 <exit>
    int cpid = wait(&status);
81000858:	83 ec 0c             	sub    $0xc,%esp
8100085b:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100085e:	50                   	push   %eax
8100085f:	e8 7a 05 00 00       	call   81000dde <wait>
81000864:	83 c4 10             	add    $0x10,%esp
81000867:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (status != 0) {
8100086a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100086d:	85 c0                	test   %eax,%eax
8100086f:	74 25                	je     81000896 <run_exec_file+0xbc>
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
81000871:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000874:	e8 e5 2e 00 00       	call   8100375e <__getreent>
81000879:	8b 40 0c             	mov    0xc(%eax),%eax
8100087c:	83 ec 0c             	sub    $0xc,%esp
8100087f:	ff 75 f4             	push   -0xc(%ebp)
81000882:	53                   	push   %ebx
81000883:	ff 75 08             	push   0x8(%ebp)
81000886:	68 a4 88 00 81       	push   $0x810088a4
8100088b:	50                   	push   %eax
8100088c:	e8 9a 11 00 00       	call   81001a2b <fiprintf>
81000891:	83 c4 20             	add    $0x20,%esp
}
81000894:	eb 23                	jmp    810008b9 <run_exec_file+0xdf>
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
81000896:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000899:	e8 c0 2e 00 00       	call   8100375e <__getreent>
8100089e:	8b 40 0c             	mov    0xc(%eax),%eax
810008a1:	83 ec 0c             	sub    $0xc,%esp
810008a4:	ff 75 f4             	push   -0xc(%ebp)
810008a7:	53                   	push   %ebx
810008a8:	ff 75 08             	push   0x8(%ebp)
810008ab:	68 d8 88 00 81       	push   $0x810088d8
810008b0:	50                   	push   %eax
810008b1:	e8 75 11 00 00       	call   81001a2b <fiprintf>
810008b6:	83 c4 20             	add    $0x20,%esp
}
810008b9:	90                   	nop
810008ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810008bd:	c9                   	leave  
810008be:	c3                   	ret    

810008bf <find_exec_path>:
 * @brief 根据文件名判断文件是否存在
 * 
 * @param file_name 
 * @return const char* 
 */
static const char* find_exec_path(const char *file_name) {
810008bf:	55                   	push   %ebp
810008c0:	89 e5                	mov    %esp,%ebp
810008c2:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
810008c5:	83 ec 08             	sub    $0x8,%esp
810008c8:	6a 00                	push   $0x0
810008ca:	ff 75 08             	push   0x8(%ebp)
810008cd:	e8 91 03 00 00       	call   81000c63 <open>
810008d2:	83 c4 10             	add    $0x10,%esp
810008d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
810008d8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008dc:	79 4f                	jns    8100092d <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
810008de:	83 ec 04             	sub    $0x4,%esp
810008e1:	ff 75 08             	push   0x8(%ebp)
810008e4:	68 fc 88 00 81       	push   $0x810088fc
810008e9:	68 40 9d 00 81       	push   $0x81009d40
810008ee:	e8 00 50 00 00       	call   810058f3 <siprintf>
810008f3:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
810008f6:	83 ec 08             	sub    $0x8,%esp
810008f9:	6a 00                	push   $0x0
810008fb:	68 40 9d 00 81       	push   $0x81009d40
81000900:	e8 5e 03 00 00       	call   81000c63 <open>
81000905:	83 c4 10             	add    $0x10,%esp
81000908:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
8100090b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100090f:	79 07                	jns    81000918 <find_exec_path+0x59>
            return (const char * )0;
81000911:	b8 00 00 00 00       	mov    $0x0,%eax
81000916:	eb 26                	jmp    8100093e <find_exec_path+0x7f>
        }
        close(fd);
81000918:	83 ec 0c             	sub    $0xc,%esp
8100091b:	ff 75 f4             	push   -0xc(%ebp)
8100091e:	e8 c1 03 00 00       	call   81000ce4 <close>
81000923:	83 c4 10             	add    $0x10,%esp
        return path;
81000926:	b8 40 9d 00 81       	mov    $0x81009d40,%eax
8100092b:	eb 11                	jmp    8100093e <find_exec_path+0x7f>
    } else {
        close(fd);
8100092d:	83 ec 0c             	sub    $0xc,%esp
81000930:	ff 75 f4             	push   -0xc(%ebp)
81000933:	e8 ac 03 00 00       	call   81000ce4 <close>
81000938:	83 c4 10             	add    $0x10,%esp
        return file_name;
8100093b:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
8100093e:	c9                   	leave  
8100093f:	c3                   	ret    

81000940 <main>:

int main(int argc, char **argv) {
81000940:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000944:	83 e4 f0             	and    $0xfffffff0,%esp
81000947:	ff 71 fc             	push   -0x4(%ecx)
8100094a:	55                   	push   %ebp
8100094b:	89 e5                	mov    %esp,%ebp
8100094d:	51                   	push   %ecx
8100094e:	83 ec 54             	sub    $0x54,%esp
81000951:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  int err = open(argv[0], O_RDWR);
81000953:	8b 40 04             	mov    0x4(%eax),%eax
81000956:	8b 00                	mov    (%eax),%eax
81000958:	83 ec 08             	sub    $0x8,%esp
8100095b:	6a 02                	push   $0x2
8100095d:	50                   	push   %eax
8100095e:	e8 00 03 00 00       	call   81000c63 <open>
81000963:	83 c4 10             	add    $0x10,%esp
81000966:	89 45 ec             	mov    %eax,-0x14(%ebp)
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  if (err != -1) {
81000969:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100096d:	74 1a                	je     81000989 <main+0x49>
    dup(0);
8100096f:	83 ec 0c             	sub    $0xc,%esp
81000972:	6a 00                	push   $0x0
81000974:	e8 22 04 00 00       	call   81000d9b <dup>
81000979:	83 c4 10             	add    $0x10,%esp
    dup(0);
8100097c:	83 ec 0c             	sub    $0xc,%esp
8100097f:	6a 00                	push   $0x0
81000981:	e8 15 04 00 00       	call   81000d9b <dup>
81000986:	83 c4 10             	add    $0x10,%esp
  }

  // 3.初始化终端结构
  cli_init();
81000989:	e8 4f fd ff ff       	call   810006dd <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100098e:	e8 88 fd ff ff       	call   8100071b <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000993:	e8 c6 2d 00 00       	call   8100375e <__getreent>
81000998:	8b 40 04             	mov    0x4(%eax),%eax
8100099b:	83 ec 04             	sub    $0x4,%esp
8100099e:	50                   	push   %eax
8100099f:	68 00 04 00 00       	push   $0x400
810009a4:	68 20 99 00 81       	push   $0x81009920
810009a9:	e8 3f 0b 00 00       	call   810014ed <fgets>
810009ae:	83 c4 10             	add    $0x10,%esp
810009b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (!str) {
810009b4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009b8:	0f 84 2f 01 00 00    	je     81000aed <main+0x1ad>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810009be:	83 ec 08             	sub    $0x8,%esp
810009c1:	6a 0a                	push   $0xa
810009c3:	68 20 99 00 81       	push   $0x81009920
810009c8:	e8 a3 50 00 00       	call   81005a70 <strchr>
810009cd:	83 c4 10             	add    $0x10,%esp
810009d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    if (cr) {
810009d3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810009d7:	74 06                	je     810009df <main+0x9f>
      *cr = '\0';
810009d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810009dc:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810009df:	83 ec 08             	sub    $0x8,%esp
810009e2:	6a 0d                	push   $0xd
810009e4:	68 20 99 00 81       	push   $0x81009920
810009e9:	e8 82 50 00 00       	call   81005a70 <strchr>
810009ee:	83 c4 10             	add    $0x10,%esp
810009f1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    if (cr) {
810009f4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810009f8:	74 06                	je     81000a00 <main+0xc0>
      *cr = '\0';
810009fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810009fd:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
81000a00:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000a07:	83 ec 04             	sub    $0x4,%esp
81000a0a:	6a 28                	push   $0x28
81000a0c:	6a 00                	push   $0x0
81000a0e:	8d 45 b0             	lea    -0x50(%ebp),%eax
81000a11:	50                   	push   %eax
81000a12:	e8 f9 3a 00 00       	call   81004510 <memset>
81000a17:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000a1a:	c7 45 e0 03 89 00 81 	movl   $0x81008903,-0x20(%ebp)
    char *token =
        strtok(cli.curr_input,
81000a21:	83 ec 08             	sub    $0x8,%esp
81000a24:	ff 75 e0             	push   -0x20(%ebp)
81000a27:	68 20 99 00 81       	push   $0x81009920
81000a2c:	e8 68 52 00 00       	call   81005c99 <strtok>
81000a31:	83 c4 10             	add    $0x10,%esp
81000a34:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000a37:	eb 23                	jmp    81000a5c <main+0x11c>
      argv[argc++] = token;
81000a39:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a3c:	8d 50 01             	lea    0x1(%eax),%edx
81000a3f:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a42:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a45:	89 54 85 b0          	mov    %edx,-0x50(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000a49:	83 ec 08             	sub    $0x8,%esp
81000a4c:	ff 75 e0             	push   -0x20(%ebp)
81000a4f:	6a 00                	push   $0x0
81000a51:	e8 43 52 00 00       	call   81005c99 <strtok>
81000a56:	83 c4 10             	add    $0x10,%esp
81000a59:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000a5c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a60:	75 d7                	jne    81000a39 <main+0xf9>
    }

    if (argc == 0) {
81000a62:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a66:	0f 84 87 00 00 00    	je     81000af3 <main+0x1b3>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000a6c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81000a6f:	83 ec 0c             	sub    $0xc,%esp
81000a72:	50                   	push   %eax
81000a73:	e8 d6 fc ff ff       	call   8100074e <find_builtin>
81000a78:	83 c4 10             	add    $0x10,%esp
81000a7b:	89 45 dc             	mov    %eax,-0x24(%ebp)
    if (cmd) {
81000a7e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a82:	74 17                	je     81000a9b <main+0x15b>
      run_builtin(cmd, argc, argv);
81000a84:	83 ec 04             	sub    $0x4,%esp
81000a87:	8d 45 b0             	lea    -0x50(%ebp),%eax
81000a8a:	50                   	push   %eax
81000a8b:	ff 75 f4             	push   -0xc(%ebp)
81000a8e:	ff 75 dc             	push   -0x24(%ebp)
81000a91:	e8 fb fc ff ff       	call   81000791 <run_builtin>
81000a96:	83 c4 10             	add    $0x10,%esp
      continue;
81000a99:	eb 59                	jmp    81000af4 <main+0x1b4>
    }



    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    const char *path = find_exec_path(argv[0]);
81000a9b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81000a9e:	83 ec 0c             	sub    $0xc,%esp
81000aa1:	50                   	push   %eax
81000aa2:	e8 18 fe ff ff       	call   810008bf <find_exec_path>
81000aa7:	83 c4 10             	add    $0x10,%esp
81000aaa:	89 45 d8             	mov    %eax,-0x28(%ebp)
    if (path) {
81000aad:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81000ab1:	74 17                	je     81000aca <main+0x18a>
      run_exec_file(path, argc, argv);
81000ab3:	83 ec 04             	sub    $0x4,%esp
81000ab6:	8d 45 b0             	lea    -0x50(%ebp),%eax
81000ab9:	50                   	push   %eax
81000aba:	ff 75 f4             	push   -0xc(%ebp)
81000abd:	ff 75 d8             	push   -0x28(%ebp)
81000ac0:	e8 15 fd ff ff       	call   810007da <run_exec_file>
81000ac5:	83 c4 10             	add    $0x10,%esp
      continue;
81000ac8:	eb 2a                	jmp    81000af4 <main+0x1b4>
    } else {

      fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000aca:	e8 8f 2c 00 00       	call   8100375e <__getreent>
81000acf:	8b 40 0c             	mov    0xc(%eax),%eax
81000ad2:	83 ec 04             	sub    $0x4,%esp
81000ad5:	68 20 99 00 81       	push   $0x81009920
81000ada:	68 08 89 00 81       	push   $0x81008908
81000adf:	50                   	push   %eax
81000ae0:	e8 46 0f 00 00       	call   81001a2b <fiprintf>
81000ae5:	83 c4 10             	add    $0x10,%esp
81000ae8:	e9 a1 fe ff ff       	jmp    8100098e <main+0x4e>
      continue;
81000aed:	90                   	nop
81000aee:	e9 9b fe ff ff       	jmp    8100098e <main+0x4e>
      continue;
81000af3:	90                   	nop
  for (;;) {
81000af4:	e9 95 fe ff ff       	jmp    8100098e <main+0x4e>

81000af9 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000af9:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000afc:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000afe:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000b00:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000b02:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000b04:	e9 00 00 00 00       	jmp    81000b09 <cstart>

81000b09 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000b09:	55                   	push   %ebp
81000b0a:	89 e5                	mov    %esp,%ebp
81000b0c:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000b0f:	c7 45 f4 20 97 00 81 	movl   $0x81009720,-0xc(%ebp)
    while (start < __bss_end__) {
81000b16:	eb 0c                	jmp    81000b24 <cstart+0x1b>
        *(start++) = 0;
81000b18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b1b:	8d 50 01             	lea    0x1(%eax),%edx
81000b1e:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b21:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000b24:	81 7d f4 c0 9e 00 81 	cmpl   $0x81009ec0,-0xc(%ebp)
81000b2b:	72 eb                	jb     81000b18 <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000b2d:	83 ec 08             	sub    $0x8,%esp
81000b30:	ff 75 0c             	push   0xc(%ebp)
81000b33:	ff 75 08             	push   0x8(%ebp)
81000b36:	e8 05 fe ff ff       	call   81000940 <main>
81000b3b:	83 c4 10             	add    $0x10,%esp
81000b3e:	83 ec 0c             	sub    $0xc,%esp
81000b41:	50                   	push   %eax
81000b42:	e8 29 04 00 00       	call   81000f70 <exit>

81000b47 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000b47:	55                   	push   %ebp
81000b48:	89 e5                	mov    %esp,%ebp
81000b4a:	57                   	push   %edi
81000b4b:	56                   	push   %esi
81000b4c:	53                   	push   %ebx
81000b4d:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000b50:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b57:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000b5e:	8b 45 08             	mov    0x8(%ebp),%eax
81000b61:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000b64:	8b 55 08             	mov    0x8(%ebp),%edx
81000b67:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000b6a:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b6d:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000b70:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b73:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000b76:	8b 75 08             	mov    0x8(%ebp),%esi
81000b79:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000b7b:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b7e:	50                   	push   %eax
81000b7f:	52                   	push   %edx
81000b80:	51                   	push   %ecx
81000b81:	53                   	push   %ebx
81000b82:	56                   	push   %esi
81000b83:	ff 1f                	lcall  *(%edi)
81000b85:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000b88:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b8b:	83 c4 10             	add    $0x10,%esp
81000b8e:	5b                   	pop    %ebx
81000b8f:	5e                   	pop    %esi
81000b90:	5f                   	pop    %edi
81000b91:	5d                   	pop    %ebp
81000b92:	c3                   	ret    

81000b93 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000b93:	55                   	push   %ebp
81000b94:	89 e5                	mov    %esp,%ebp
81000b96:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000b99:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b9d:	7e 1b                	jle    81000bba <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000b9f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000ba6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba9:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000bac:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000baf:	50                   	push   %eax
81000bb0:	e8 92 ff ff ff       	call   81000b47 <sys_call>
81000bb5:	83 c4 04             	add    $0x4,%esp
81000bb8:	eb 01                	jmp    81000bbb <msleep+0x28>
    if (ms <= 0) return;
81000bba:	90                   	nop

}
81000bbb:	c9                   	leave  
81000bbc:	c3                   	ret    

81000bbd <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000bbd:	55                   	push   %ebp
81000bbe:	89 e5                	mov    %esp,%ebp
81000bc0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000bc3:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000bca:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bcd:	50                   	push   %eax
81000bce:	e8 74 ff ff ff       	call   81000b47 <sys_call>
81000bd3:	83 c4 04             	add    $0x4,%esp
}
81000bd6:	c9                   	leave  
81000bd7:	c3                   	ret    

81000bd8 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000bd8:	55                   	push   %ebp
81000bd9:	89 e5                	mov    %esp,%ebp
81000bdb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bde:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000be5:	8b 45 08             	mov    0x8(%ebp),%eax
81000be8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000beb:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bee:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000bf1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bf4:	50                   	push   %eax
81000bf5:	e8 4d ff ff ff       	call   81000b47 <sys_call>
81000bfa:	83 c4 04             	add    $0x4,%esp
}
81000bfd:	90                   	nop
81000bfe:	c9                   	leave  
81000bff:	c3                   	ret    

81000c00 <fork>:

int fork (void) {
81000c00:	55                   	push   %ebp
81000c01:	89 e5                	mov    %esp,%ebp
81000c03:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000c06:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000c0d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c10:	50                   	push   %eax
81000c11:	e8 31 ff ff ff       	call   81000b47 <sys_call>
81000c16:	83 c4 04             	add    $0x4,%esp
}
81000c19:	c9                   	leave  
81000c1a:	c3                   	ret    

81000c1b <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000c1b:	55                   	push   %ebp
81000c1c:	89 e5                	mov    %esp,%ebp
81000c1e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c21:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c28:	8b 45 08             	mov    0x8(%ebp),%eax
81000c2b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c31:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c34:	8b 45 10             	mov    0x10(%ebp),%eax
81000c37:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000c3a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c3d:	50                   	push   %eax
81000c3e:	e8 04 ff ff ff       	call   81000b47 <sys_call>
81000c43:	83 c4 04             	add    $0x4,%esp
}
81000c46:	c9                   	leave  
81000c47:	c3                   	ret    

81000c48 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000c48:	55                   	push   %ebp
81000c49:	89 e5                	mov    %esp,%ebp
81000c4b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c4e:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000c55:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c58:	50                   	push   %eax
81000c59:	e8 e9 fe ff ff       	call   81000b47 <sys_call>
81000c5e:	83 c4 04             	add    $0x4,%esp
}
81000c61:	c9                   	leave  
81000c62:	c3                   	ret    

81000c63 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000c63:	55                   	push   %ebp
81000c64:	89 e5                	mov    %esp,%ebp
81000c66:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000c69:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000c70:	8b 45 08             	mov    0x8(%ebp),%eax
81000c73:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000c76:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c79:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000c7c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c7f:	50                   	push   %eax
81000c80:	e8 c2 fe ff ff       	call   81000b47 <sys_call>
81000c85:	83 c4 04             	add    $0x4,%esp
}
81000c88:	c9                   	leave  
81000c89:	c3                   	ret    

81000c8a <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000c8a:	55                   	push   %ebp
81000c8b:	89 e5                	mov    %esp,%ebp
81000c8d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000c90:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000c97:	8b 45 08             	mov    0x8(%ebp),%eax
81000c9a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000c9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ca0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000ca3:	8b 45 10             	mov    0x10(%ebp),%eax
81000ca6:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000ca9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cac:	50                   	push   %eax
81000cad:	e8 95 fe ff ff       	call   81000b47 <sys_call>
81000cb2:	83 c4 04             	add    $0x4,%esp
}
81000cb5:	c9                   	leave  
81000cb6:	c3                   	ret    

81000cb7 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000cb7:	55                   	push   %ebp
81000cb8:	89 e5                	mov    %esp,%ebp
81000cba:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000cbd:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000cc4:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cca:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ccd:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cd0:	8b 45 10             	mov    0x10(%ebp),%eax
81000cd3:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000cd6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cd9:	50                   	push   %eax
81000cda:	e8 68 fe ff ff       	call   81000b47 <sys_call>
81000cdf:	83 c4 04             	add    $0x4,%esp
}
81000ce2:	c9                   	leave  
81000ce3:	c3                   	ret    

81000ce4 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000ce4:	55                   	push   %ebp
81000ce5:	89 e5                	mov    %esp,%ebp
81000ce7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000cea:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000cf1:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf4:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000cf7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cfa:	50                   	push   %eax
81000cfb:	e8 47 fe ff ff       	call   81000b47 <sys_call>
81000d00:	83 c4 04             	add    $0x4,%esp
}
81000d03:	c9                   	leave  
81000d04:	c3                   	ret    

81000d05 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000d05:	55                   	push   %ebp
81000d06:	89 e5                	mov    %esp,%ebp
81000d08:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000d0b:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000d12:	8b 45 08             	mov    0x8(%ebp),%eax
81000d15:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000d18:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d1e:	8b 45 10             	mov    0x10(%ebp),%eax
81000d21:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000d24:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d27:	50                   	push   %eax
81000d28:	e8 1a fe ff ff       	call   81000b47 <sys_call>
81000d2d:	83 c4 04             	add    $0x4,%esp
}
81000d30:	c9                   	leave  
81000d31:	c3                   	ret    

81000d32 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000d32:	55                   	push   %ebp
81000d33:	89 e5                	mov    %esp,%ebp
81000d35:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000d38:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000d3f:	8b 45 08             	mov    0x8(%ebp),%eax
81000d42:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000d45:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d48:	50                   	push   %eax
81000d49:	e8 f9 fd ff ff       	call   81000b47 <sys_call>
81000d4e:	83 c4 04             	add    $0x4,%esp
}
81000d51:	c9                   	leave  
81000d52:	c3                   	ret    

81000d53 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000d53:	55                   	push   %ebp
81000d54:	89 e5                	mov    %esp,%ebp
81000d56:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d59:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000d60:	8b 45 08             	mov    0x8(%ebp),%eax
81000d63:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d66:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d69:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000d6c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d6f:	50                   	push   %eax
81000d70:	e8 d2 fd ff ff       	call   81000b47 <sys_call>
81000d75:	83 c4 04             	add    $0x4,%esp
}
81000d78:	c9                   	leave  
81000d79:	c3                   	ret    

81000d7a <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000d7a:	55                   	push   %ebp
81000d7b:	89 e5                	mov    %esp,%ebp
81000d7d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000d80:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)incr;
81000d87:	8b 45 08             	mov    0x8(%ebp),%eax
81000d8a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000d8d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d90:	50                   	push   %eax
81000d91:	e8 b1 fd ff ff       	call   81000b47 <sys_call>
81000d96:	83 c4 04             	add    $0x4,%esp
}
81000d99:	c9                   	leave  
81000d9a:	c3                   	ret    

81000d9b <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000d9b:	55                   	push   %ebp
81000d9c:	89 e5                	mov    %esp,%ebp
81000d9e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000da1:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000da8:	8b 45 08             	mov    0x8(%ebp),%eax
81000dab:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000dae:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000db1:	50                   	push   %eax
81000db2:	e8 90 fd ff ff       	call   81000b47 <sys_call>
81000db7:	83 c4 04             	add    $0x4,%esp
}
81000dba:	c9                   	leave  
81000dbb:	c3                   	ret    

81000dbc <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000dbc:	55                   	push   %ebp
81000dbd:	89 e5                	mov    %esp,%ebp
81000dbf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000dc2:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000dc9:	8b 45 08             	mov    0x8(%ebp),%eax
81000dcc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000dcf:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dd2:	50                   	push   %eax
81000dd3:	e8 6f fd ff ff       	call   81000b47 <sys_call>
81000dd8:	83 c4 04             	add    $0x4,%esp
}
81000ddb:	90                   	nop
81000ddc:	c9                   	leave  
81000ddd:	c3                   	ret    

81000dde <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000dde:	55                   	push   %ebp
81000ddf:	89 e5                	mov    %esp,%ebp
81000de1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000de4:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000deb:	8b 45 08             	mov    0x8(%ebp),%eax
81000dee:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000df1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000df4:	50                   	push   %eax
81000df5:	e8 4d fd ff ff       	call   81000b47 <sys_call>
81000dfa:	83 c4 04             	add    $0x4,%esp
}
81000dfd:	c9                   	leave  
81000dfe:	c3                   	ret    

81000dff <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000dff:	55                   	push   %ebp
81000e00:	89 e5                	mov    %esp,%ebp
81000e02:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000e05:	83 ec 0c             	sub    $0xc,%esp
81000e08:	6a 20                	push   $0x20
81000e0a:	e8 d9 2a 00 00       	call   810038e8 <malloc>
81000e0f:	83 c4 10             	add    $0x10,%esp
81000e12:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000e15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e19:	75 07                	jne    81000e22 <opendir+0x23>
        return (DIR*)0;
81000e1b:	b8 00 00 00 00       	mov    $0x0,%eax
81000e20:	eb 43                	jmp    81000e65 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e22:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000e29:	8b 45 08             	mov    0x8(%ebp),%eax
81000e2c:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e32:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000e35:	83 ec 0c             	sub    $0xc,%esp
81000e38:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e3b:	50                   	push   %eax
81000e3c:	e8 06 fd ff ff       	call   81000b47 <sys_call>
81000e41:	83 c4 10             	add    $0x10,%esp
81000e44:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000e47:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e4b:	79 15                	jns    81000e62 <opendir+0x63>
        free(dir);
81000e4d:	83 ec 0c             	sub    $0xc,%esp
81000e50:	ff 75 f4             	push   -0xc(%ebp)
81000e53:	e8 ac 2a 00 00       	call   81003904 <free>
81000e58:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000e5b:	b8 00 00 00 00       	mov    $0x0,%eax
81000e60:	eb 03                	jmp    81000e65 <opendir+0x66>
    }

    return dir;    
81000e62:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e65:	c9                   	leave  
81000e66:	c3                   	ret    

81000e67 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000e67:	55                   	push   %ebp
81000e68:	89 e5                	mov    %esp,%ebp
81000e6a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000e6d:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000e74:	8b 45 08             	mov    0x8(%ebp),%eax
81000e77:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000e7a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e7d:	83 c0 04             	add    $0x4,%eax
81000e80:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000e83:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e86:	50                   	push   %eax
81000e87:	e8 bb fc ff ff       	call   81000b47 <sys_call>
81000e8c:	83 c4 04             	add    $0x4,%esp
81000e8f:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000e92:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e96:	79 07                	jns    81000e9f <readdir+0x38>
        return (struct dirent*)0;
81000e98:	b8 00 00 00 00       	mov    $0x0,%eax
81000e9d:	eb 06                	jmp    81000ea5 <readdir+0x3e>
    }

    return &dir->dirent;   
81000e9f:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea2:	83 c0 04             	add    $0x4,%eax
}
81000ea5:	c9                   	leave  
81000ea6:	c3                   	ret    

81000ea7 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000ea7:	55                   	push   %ebp
81000ea8:	89 e5                	mov    %esp,%ebp
81000eaa:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000ead:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000eb4:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb7:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000eba:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000ebd:	50                   	push   %eax
81000ebe:	e8 84 fc ff ff       	call   81000b47 <sys_call>
81000ec3:	83 c4 04             	add    $0x4,%esp
81000ec6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000ec9:	83 ec 0c             	sub    $0xc,%esp
81000ecc:	ff 75 08             	push   0x8(%ebp)
81000ecf:	e8 30 2a 00 00       	call   81003904 <free>
81000ed4:	83 c4 10             	add    $0x10,%esp

    return err;   
81000ed7:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000eda:	c9                   	leave  
81000edb:	c3                   	ret    

81000edc <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000edc:	55                   	push   %ebp
81000edd:	89 e5                	mov    %esp,%ebp
81000edf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000ee2:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000ee9:	8b 45 08             	mov    0x8(%ebp),%eax
81000eec:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000eef:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ef2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000ef5:	8b 45 10             	mov    0x10(%ebp),%eax
81000ef8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000efb:	8b 45 14             	mov    0x14(%ebp),%eax
81000efe:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000f01:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000f04:	50                   	push   %eax
81000f05:	e8 3d fc ff ff       	call   81000b47 <sys_call>
81000f0a:	83 c4 04             	add    $0x4,%esp
81000f0d:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000f10:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
81000f13:	c9                   	leave  
81000f14:	c3                   	ret    

81000f15 <unlink>:
 * @brief 删除一个文件
 * 
 * @param path 
 * @return int 
 */
int unlink(const char *path) {
81000f15:	55                   	push   %ebp
81000f16:	89 e5                	mov    %esp,%ebp
81000f18:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000f1b:	c7 45 e8 3b 00 00 00 	movl   $0x3b,-0x18(%ebp)
    args.arg0 = (path);
81000f22:	8b 45 08             	mov    0x8(%ebp),%eax
81000f25:	89 45 ec             	mov    %eax,-0x14(%ebp)

    int err = sys_call(&args);
81000f28:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000f2b:	50                   	push   %eax
81000f2c:	e8 16 fc ff ff       	call   81000b47 <sys_call>
81000f31:	83 c4 04             	add    $0x4,%esp
81000f34:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000f37:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000f3a:	c9                   	leave  
81000f3b:	c3                   	ret    

81000f3c <atoi>:
81000f3c:	55                   	push   %ebp
81000f3d:	89 e5                	mov    %esp,%ebp
81000f3f:	83 ec 08             	sub    $0x8,%esp
81000f42:	83 ec 04             	sub    $0x4,%esp
81000f45:	6a 0a                	push   $0xa
81000f47:	6a 00                	push   $0x0
81000f49:	ff 75 08             	push   0x8(%ebp)
81000f4c:	e8 85 50 00 00       	call   81005fd6 <strtol>
81000f51:	83 c4 10             	add    $0x10,%esp
81000f54:	c9                   	leave  
81000f55:	c3                   	ret    

81000f56 <_atoi_r>:
81000f56:	55                   	push   %ebp
81000f57:	89 e5                	mov    %esp,%ebp
81000f59:	83 ec 08             	sub    $0x8,%esp
81000f5c:	6a 0a                	push   $0xa
81000f5e:	6a 00                	push   $0x0
81000f60:	ff 75 0c             	push   0xc(%ebp)
81000f63:	ff 75 08             	push   0x8(%ebp)
81000f66:	e8 21 50 00 00       	call   81005f8c <_strtol_r>
81000f6b:	83 c4 10             	add    $0x10,%esp
81000f6e:	c9                   	leave  
81000f6f:	c3                   	ret    

81000f70 <exit>:
81000f70:	55                   	push   %ebp
81000f71:	89 e5                	mov    %esp,%ebp
81000f73:	83 ec 08             	sub    $0x8,%esp
81000f76:	83 ec 08             	sub    $0x8,%esp
81000f79:	6a 00                	push   $0x0
81000f7b:	ff 75 08             	push   0x8(%ebp)
81000f7e:	e8 50 53 00 00       	call   810062d3 <__call_exitprocs>
81000f83:	83 c4 10             	add    $0x10,%esp
81000f86:	a1 b0 89 00 81       	mov    0x810089b0,%eax
81000f8b:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f8e:	85 c0                	test   %eax,%eax
81000f90:	74 17                	je     81000fa9 <exit+0x39>
81000f92:	a1 b0 89 00 81       	mov    0x810089b0,%eax
81000f97:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f9a:	8b 15 b0 89 00 81    	mov    0x810089b0,%edx
81000fa0:	83 ec 0c             	sub    $0xc,%esp
81000fa3:	52                   	push   %edx
81000fa4:	ff d0                	call   *%eax
81000fa6:	83 c4 10             	add    $0x10,%esp
81000fa9:	83 ec 0c             	sub    $0xc,%esp
81000fac:	ff 75 08             	push   0x8(%ebp)
81000faf:	e8 08 fe ff ff       	call   81000dbc <_exit>

81000fb4 <_fclose_r>:
81000fb4:	55                   	push   %ebp
81000fb5:	89 e5                	mov    %esp,%ebp
81000fb7:	53                   	push   %ebx
81000fb8:	83 ec 14             	sub    $0x14,%esp
81000fbb:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fbe:	85 db                	test   %ebx,%ebx
81000fc0:	75 0a                	jne    81000fcc <_fclose_r+0x18>
81000fc2:	b8 00 00 00 00       	mov    $0x0,%eax
81000fc7:	e9 ea 00 00 00       	jmp    810010b6 <_fclose_r+0x102>
81000fcc:	8b 45 08             	mov    0x8(%ebp),%eax
81000fcf:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fd2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fd6:	74 18                	je     81000ff0 <_fclose_r+0x3c>
81000fd8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fdb:	8b 40 38             	mov    0x38(%eax),%eax
81000fde:	85 c0                	test   %eax,%eax
81000fe0:	75 0e                	jne    81000ff0 <_fclose_r+0x3c>
81000fe2:	83 ec 0c             	sub    $0xc,%esp
81000fe5:	ff 75 f0             	push   -0x10(%ebp)
81000fe8:	e8 14 08 00 00       	call   81001801 <__sinit>
81000fed:	83 c4 10             	add    $0x10,%esp
81000ff0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ff4:	66 85 c0             	test   %ax,%ax
81000ff7:	75 0a                	jne    81001003 <_fclose_r+0x4f>
81000ff9:	b8 00 00 00 00       	mov    $0x0,%eax
81000ffe:	e9 b3 00 00 00       	jmp    810010b6 <_fclose_r+0x102>
81001003:	83 ec 08             	sub    $0x8,%esp
81001006:	53                   	push   %ebx
81001007:	ff 75 08             	push   0x8(%ebp)
8100100a:	e8 c9 00 00 00       	call   810010d8 <__sflush_r>
8100100f:	83 c4 10             	add    $0x10,%esp
81001012:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001015:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001018:	85 c0                	test   %eax,%eax
8100101a:	74 1d                	je     81001039 <_fclose_r+0x85>
8100101c:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100101f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001022:	83 ec 08             	sub    $0x8,%esp
81001025:	52                   	push   %edx
81001026:	ff 75 08             	push   0x8(%ebp)
81001029:	ff d0                	call   *%eax
8100102b:	83 c4 10             	add    $0x10,%esp
8100102e:	85 c0                	test   %eax,%eax
81001030:	79 07                	jns    81001039 <_fclose_r+0x85>
81001032:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81001039:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100103d:	98                   	cwtl   
8100103e:	25 80 00 00 00       	and    $0x80,%eax
81001043:	85 c0                	test   %eax,%eax
81001045:	74 12                	je     81001059 <_fclose_r+0xa5>
81001047:	8b 43 10             	mov    0x10(%ebx),%eax
8100104a:	83 ec 08             	sub    $0x8,%esp
8100104d:	50                   	push   %eax
8100104e:	ff 75 08             	push   0x8(%ebp)
81001051:	e8 9b 0c 00 00       	call   81001cf1 <_free_r>
81001056:	83 c4 10             	add    $0x10,%esp
81001059:	8b 43 30             	mov    0x30(%ebx),%eax
8100105c:	85 c0                	test   %eax,%eax
8100105e:	74 23                	je     81001083 <_fclose_r+0xcf>
81001060:	8b 53 30             	mov    0x30(%ebx),%edx
81001063:	8d 43 40             	lea    0x40(%ebx),%eax
81001066:	39 c2                	cmp    %eax,%edx
81001068:	74 12                	je     8100107c <_fclose_r+0xc8>
8100106a:	8b 43 30             	mov    0x30(%ebx),%eax
8100106d:	83 ec 08             	sub    $0x8,%esp
81001070:	50                   	push   %eax
81001071:	ff 75 08             	push   0x8(%ebp)
81001074:	e8 78 0c 00 00       	call   81001cf1 <_free_r>
81001079:	83 c4 10             	add    $0x10,%esp
8100107c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001083:	8b 43 44             	mov    0x44(%ebx),%eax
81001086:	85 c0                	test   %eax,%eax
81001088:	74 19                	je     810010a3 <_fclose_r+0xef>
8100108a:	8b 43 44             	mov    0x44(%ebx),%eax
8100108d:	83 ec 08             	sub    $0x8,%esp
81001090:	50                   	push   %eax
81001091:	ff 75 08             	push   0x8(%ebp)
81001094:	e8 58 0c 00 00       	call   81001cf1 <_free_r>
81001099:	83 c4 10             	add    $0x10,%esp
8100109c:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
810010a3:	e8 f2 07 00 00       	call   8100189a <__sfp_lock_acquire>
810010a8:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810010ae:	e8 ed 07 00 00       	call   810018a0 <__sfp_lock_release>
810010b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010b9:	c9                   	leave  
810010ba:	c3                   	ret    

810010bb <fclose>:
810010bb:	55                   	push   %ebp
810010bc:	89 e5                	mov    %esp,%ebp
810010be:	83 ec 08             	sub    $0x8,%esp
810010c1:	8b 55 08             	mov    0x8(%ebp),%edx
810010c4:	a1 64 91 00 81       	mov    0x81009164,%eax
810010c9:	83 ec 08             	sub    $0x8,%esp
810010cc:	52                   	push   %edx
810010cd:	50                   	push   %eax
810010ce:	e8 e1 fe ff ff       	call   81000fb4 <_fclose_r>
810010d3:	83 c4 10             	add    $0x10,%esp
810010d6:	c9                   	leave  
810010d7:	c3                   	ret    

810010d8 <__sflush_r>:
810010d8:	55                   	push   %ebp
810010d9:	89 e5                	mov    %esp,%ebp
810010db:	57                   	push   %edi
810010dc:	56                   	push   %esi
810010dd:	53                   	push   %ebx
810010de:	83 ec 1c             	sub    $0x1c,%esp
810010e1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010e8:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010ec:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010f0:	83 e0 08             	and    $0x8,%eax
810010f3:	85 c0                	test   %eax,%eax
810010f5:	0f 85 93 01 00 00    	jne    8100128e <__sflush_r+0x1b6>
810010fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010ff:	80 cc 08             	or     $0x8,%ah
81001102:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001106:	8b 43 04             	mov    0x4(%ebx),%eax
81001109:	85 c0                	test   %eax,%eax
8100110b:	7f 0b                	jg     81001118 <__sflush_r+0x40>
8100110d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001110:	85 c0                	test   %eax,%eax
81001112:	0f 8e 6f 01 00 00    	jle    81001287 <__sflush_r+0x1af>
81001118:	8b 43 28             	mov    0x28(%ebx),%eax
8100111b:	85 c0                	test   %eax,%eax
8100111d:	0f 84 64 01 00 00    	je     81001287 <__sflush_r+0x1af>
81001123:	8b 45 08             	mov    0x8(%ebp),%eax
81001126:	8b 00                	mov    (%eax),%eax
81001128:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100112b:	8b 45 08             	mov    0x8(%ebp),%eax
8100112e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001134:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001138:	98                   	cwtl   
81001139:	25 00 10 00 00       	and    $0x1000,%eax
8100113e:	85 c0                	test   %eax,%eax
81001140:	74 08                	je     8100114a <__sflush_r+0x72>
81001142:	8b 43 50             	mov    0x50(%ebx),%eax
81001145:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001148:	eb 64                	jmp    810011ae <__sflush_r+0xd6>
8100114a:	8b 43 28             	mov    0x28(%ebx),%eax
8100114d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001150:	6a 01                	push   $0x1
81001152:	6a 00                	push   $0x0
81001154:	52                   	push   %edx
81001155:	ff 75 08             	push   0x8(%ebp)
81001158:	ff d0                	call   *%eax
8100115a:	83 c4 10             	add    $0x10,%esp
8100115d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001160:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001164:	75 48                	jne    810011ae <__sflush_r+0xd6>
81001166:	8b 45 08             	mov    0x8(%ebp),%eax
81001169:	8b 00                	mov    (%eax),%eax
8100116b:	85 c0                	test   %eax,%eax
8100116d:	74 3f                	je     810011ae <__sflush_r+0xd6>
8100116f:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001176:	8b 45 08             	mov    0x8(%ebp),%eax
81001179:	8b 00                	mov    (%eax),%eax
8100117b:	83 f8 1d             	cmp    $0x1d,%eax
8100117e:	74 0a                	je     8100118a <__sflush_r+0xb2>
81001180:	8b 45 08             	mov    0x8(%ebp),%eax
81001183:	8b 00                	mov    (%eax),%eax
81001185:	83 f8 16             	cmp    $0x16,%eax
81001188:	75 11                	jne    8100119b <__sflush_r+0xc3>
8100118a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81001191:	8b 45 08             	mov    0x8(%ebp),%eax
81001194:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001197:	89 10                	mov    %edx,(%eax)
81001199:	eb 0b                	jmp    810011a6 <__sflush_r+0xce>
8100119b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100119f:	83 c8 40             	or     $0x40,%eax
810011a2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011a6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011a9:	e9 48 01 00 00       	jmp    810012f6 <__sflush_r+0x21e>
810011ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011b2:	98                   	cwtl   
810011b3:	83 e0 04             	and    $0x4,%eax
810011b6:	85 c0                	test   %eax,%eax
810011b8:	74 13                	je     810011cd <__sflush_r+0xf5>
810011ba:	8b 43 04             	mov    0x4(%ebx),%eax
810011bd:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011c0:	8b 43 30             	mov    0x30(%ebx),%eax
810011c3:	85 c0                	test   %eax,%eax
810011c5:	74 06                	je     810011cd <__sflush_r+0xf5>
810011c7:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011ca:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011cd:	8b 43 28             	mov    0x28(%ebx),%eax
810011d0:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011d3:	6a 00                	push   $0x0
810011d5:	ff 75 e4             	push   -0x1c(%ebp)
810011d8:	52                   	push   %edx
810011d9:	ff 75 08             	push   0x8(%ebp)
810011dc:	ff d0                	call   *%eax
810011de:	83 c4 10             	add    $0x10,%esp
810011e1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011e4:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011e8:	75 1d                	jne    81001207 <__sflush_r+0x12f>
810011ea:	8b 45 08             	mov    0x8(%ebp),%eax
810011ed:	8b 00                	mov    (%eax),%eax
810011ef:	85 c0                	test   %eax,%eax
810011f1:	74 14                	je     81001207 <__sflush_r+0x12f>
810011f3:	8b 45 08             	mov    0x8(%ebp),%eax
810011f6:	8b 00                	mov    (%eax),%eax
810011f8:	83 f8 1d             	cmp    $0x1d,%eax
810011fb:	74 0a                	je     81001207 <__sflush_r+0x12f>
810011fd:	8b 45 08             	mov    0x8(%ebp),%eax
81001200:	8b 00                	mov    (%eax),%eax
81001202:	83 f8 16             	cmp    $0x16,%eax
81001205:	75 6e                	jne    81001275 <__sflush_r+0x19d>
81001207:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100120b:	80 e4 f7             	and    $0xf7,%ah
8100120e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001212:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001219:	8b 43 10             	mov    0x10(%ebx),%eax
8100121c:	89 03                	mov    %eax,(%ebx)
8100121e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001222:	98                   	cwtl   
81001223:	25 00 10 00 00       	and    $0x1000,%eax
81001228:	85 c0                	test   %eax,%eax
8100122a:	74 15                	je     81001241 <__sflush_r+0x169>
8100122c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001230:	75 09                	jne    8100123b <__sflush_r+0x163>
81001232:	8b 45 08             	mov    0x8(%ebp),%eax
81001235:	8b 00                	mov    (%eax),%eax
81001237:	85 c0                	test   %eax,%eax
81001239:	75 06                	jne    81001241 <__sflush_r+0x169>
8100123b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100123e:	89 43 50             	mov    %eax,0x50(%ebx)
81001241:	8b 45 08             	mov    0x8(%ebp),%eax
81001244:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001247:	89 10                	mov    %edx,(%eax)
81001249:	8b 43 30             	mov    0x30(%ebx),%eax
8100124c:	85 c0                	test   %eax,%eax
8100124e:	74 37                	je     81001287 <__sflush_r+0x1af>
81001250:	8b 53 30             	mov    0x30(%ebx),%edx
81001253:	8d 43 40             	lea    0x40(%ebx),%eax
81001256:	39 c2                	cmp    %eax,%edx
81001258:	74 12                	je     8100126c <__sflush_r+0x194>
8100125a:	8b 43 30             	mov    0x30(%ebx),%eax
8100125d:	83 ec 08             	sub    $0x8,%esp
81001260:	50                   	push   %eax
81001261:	ff 75 08             	push   0x8(%ebp)
81001264:	e8 88 0a 00 00       	call   81001cf1 <_free_r>
81001269:	83 c4 10             	add    $0x10,%esp
8100126c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81001273:	eb 12                	jmp    81001287 <__sflush_r+0x1af>
81001275:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001279:	83 c8 40             	or     $0x40,%eax
8100127c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001280:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001285:	eb 6f                	jmp    810012f6 <__sflush_r+0x21e>
81001287:	b8 00 00 00 00       	mov    $0x0,%eax
8100128c:	eb 68                	jmp    810012f6 <__sflush_r+0x21e>
8100128e:	8b 73 10             	mov    0x10(%ebx),%esi
81001291:	85 f6                	test   %esi,%esi
81001293:	75 07                	jne    8100129c <__sflush_r+0x1c4>
81001295:	b8 00 00 00 00       	mov    $0x0,%eax
8100129a:	eb 5a                	jmp    810012f6 <__sflush_r+0x21e>
8100129c:	8b 03                	mov    (%ebx),%eax
8100129e:	29 f0                	sub    %esi,%eax
810012a0:	89 c7                	mov    %eax,%edi
810012a2:	89 33                	mov    %esi,(%ebx)
810012a4:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810012a8:	83 e0 03             	and    $0x3,%eax
810012ab:	85 c0                	test   %eax,%eax
810012ad:	75 05                	jne    810012b4 <__sflush_r+0x1dc>
810012af:	8b 43 14             	mov    0x14(%ebx),%eax
810012b2:	eb 05                	jmp    810012b9 <__sflush_r+0x1e1>
810012b4:	b8 00 00 00 00       	mov    $0x0,%eax
810012b9:	89 43 08             	mov    %eax,0x8(%ebx)
810012bc:	eb 2f                	jmp    810012ed <__sflush_r+0x215>
810012be:	8b 43 24             	mov    0x24(%ebx),%eax
810012c1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810012c4:	57                   	push   %edi
810012c5:	56                   	push   %esi
810012c6:	52                   	push   %edx
810012c7:	ff 75 08             	push   0x8(%ebp)
810012ca:	ff d0                	call   *%eax
810012cc:	83 c4 10             	add    $0x10,%esp
810012cf:	85 c0                	test   %eax,%eax
810012d1:	7f 12                	jg     810012e5 <__sflush_r+0x20d>
810012d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012d7:	83 c8 40             	or     $0x40,%eax
810012da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012e3:	eb 11                	jmp    810012f6 <__sflush_r+0x21e>
810012e5:	89 c1                	mov    %eax,%ecx
810012e7:	89 c8                	mov    %ecx,%eax
810012e9:	01 c6                	add    %eax,%esi
810012eb:	29 cf                	sub    %ecx,%edi
810012ed:	85 ff                	test   %edi,%edi
810012ef:	7f cd                	jg     810012be <__sflush_r+0x1e6>
810012f1:	b8 00 00 00 00       	mov    $0x0,%eax
810012f6:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012f9:	5b                   	pop    %ebx
810012fa:	5e                   	pop    %esi
810012fb:	5f                   	pop    %edi
810012fc:	5d                   	pop    %ebp
810012fd:	c3                   	ret    

810012fe <_fflush_r>:
810012fe:	55                   	push   %ebp
810012ff:	89 e5                	mov    %esp,%ebp
81001301:	53                   	push   %ebx
81001302:	83 ec 14             	sub    $0x14,%esp
81001305:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001308:	8b 45 08             	mov    0x8(%ebp),%eax
8100130b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100130e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001312:	74 18                	je     8100132c <_fflush_r+0x2e>
81001314:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001317:	8b 40 38             	mov    0x38(%eax),%eax
8100131a:	85 c0                	test   %eax,%eax
8100131c:	75 0e                	jne    8100132c <_fflush_r+0x2e>
8100131e:	83 ec 0c             	sub    $0xc,%esp
81001321:	ff 75 f4             	push   -0xc(%ebp)
81001324:	e8 d8 04 00 00       	call   81001801 <__sinit>
81001329:	83 c4 10             	add    $0x10,%esp
8100132c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001330:	66 85 c0             	test   %ax,%ax
81001333:	75 07                	jne    8100133c <_fflush_r+0x3e>
81001335:	b8 00 00 00 00       	mov    $0x0,%eax
8100133a:	eb 15                	jmp    81001351 <_fflush_r+0x53>
8100133c:	83 ec 08             	sub    $0x8,%esp
8100133f:	53                   	push   %ebx
81001340:	ff 75 08             	push   0x8(%ebp)
81001343:	e8 90 fd ff ff       	call   810010d8 <__sflush_r>
81001348:	83 c4 10             	add    $0x10,%esp
8100134b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100134e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001351:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001354:	c9                   	leave  
81001355:	c3                   	ret    

81001356 <fflush>:
81001356:	55                   	push   %ebp
81001357:	89 e5                	mov    %esp,%ebp
81001359:	83 ec 08             	sub    $0x8,%esp
8100135c:	8b 55 08             	mov    0x8(%ebp),%edx
8100135f:	85 d2                	test   %edx,%edx
81001361:	75 18                	jne    8100137b <fflush+0x25>
81001363:	a1 b0 89 00 81       	mov    0x810089b0,%eax
81001368:	83 ec 08             	sub    $0x8,%esp
8100136b:	68 fe 12 00 81       	push   $0x810012fe
81001370:	50                   	push   %eax
81001371:	e8 70 14 00 00       	call   810027e6 <_fwalk_reent>
81001376:	83 c4 10             	add    $0x10,%esp
81001379:	eb 12                	jmp    8100138d <fflush+0x37>
8100137b:	a1 64 91 00 81       	mov    0x81009164,%eax
81001380:	83 ec 08             	sub    $0x8,%esp
81001383:	52                   	push   %edx
81001384:	50                   	push   %eax
81001385:	e8 74 ff ff ff       	call   810012fe <_fflush_r>
8100138a:	83 c4 10             	add    $0x10,%esp
8100138d:	c9                   	leave  
8100138e:	c3                   	ret    

8100138f <_fgets_r>:
8100138f:	55                   	push   %ebp
81001390:	89 e5                	mov    %esp,%ebp
81001392:	83 ec 28             	sub    $0x28,%esp
81001395:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81001399:	7f 0a                	jg     810013a5 <_fgets_r+0x16>
8100139b:	b8 00 00 00 00       	mov    $0x0,%eax
810013a0:	e9 46 01 00 00       	jmp    810014eb <_fgets_r+0x15c>
810013a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810013a8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013ab:	8b 45 08             	mov    0x8(%ebp),%eax
810013ae:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013b1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810013b5:	74 18                	je     810013cf <_fgets_r+0x40>
810013b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013ba:	8b 40 38             	mov    0x38(%eax),%eax
810013bd:	85 c0                	test   %eax,%eax
810013bf:	75 0e                	jne    810013cf <_fgets_r+0x40>
810013c1:	83 ec 0c             	sub    $0xc,%esp
810013c4:	ff 75 ec             	push   -0x14(%ebp)
810013c7:	e8 35 04 00 00       	call   81001801 <__sinit>
810013cc:	83 c4 10             	add    $0x10,%esp
810013cf:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810013d3:	8b 45 14             	mov    0x14(%ebp),%eax
810013d6:	8b 40 04             	mov    0x4(%eax),%eax
810013d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013e0:	75 34                	jne    81001416 <_fgets_r+0x87>
810013e2:	83 ec 08             	sub    $0x8,%esp
810013e5:	ff 75 14             	push   0x14(%ebp)
810013e8:	ff 75 08             	push   0x8(%ebp)
810013eb:	e8 61 40 00 00       	call   81005451 <__srefill_r>
810013f0:	83 c4 10             	add    $0x10,%esp
810013f3:	85 c0                	test   %eax,%eax
810013f5:	74 16                	je     8100140d <_fgets_r+0x7e>
810013f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013fa:	3b 45 0c             	cmp    0xc(%ebp),%eax
810013fd:	0f 85 de 00 00 00    	jne    810014e1 <_fgets_r+0x152>
81001403:	b8 00 00 00 00       	mov    $0x0,%eax
81001408:	e9 de 00 00 00       	jmp    810014eb <_fgets_r+0x15c>
8100140d:	8b 45 14             	mov    0x14(%ebp),%eax
81001410:	8b 40 04             	mov    0x4(%eax),%eax
81001413:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001416:	8b 45 14             	mov    0x14(%ebp),%eax
81001419:	8b 00                	mov    (%eax),%eax
8100141b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100141e:	8b 45 10             	mov    0x10(%ebp),%eax
81001421:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001424:	76 06                	jbe    8100142c <_fgets_r+0x9d>
81001426:	8b 45 10             	mov    0x10(%ebp),%eax
81001429:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100142c:	83 ec 04             	sub    $0x4,%esp
8100142f:	ff 75 f4             	push   -0xc(%ebp)
81001432:	6a 0a                	push   $0xa
81001434:	ff 75 e8             	push   -0x18(%ebp)
81001437:	e8 a4 2f 00 00       	call   810043e0 <memchr>
8100143c:	83 c4 10             	add    $0x10,%esp
8100143f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001442:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001446:	74 4a                	je     81001492 <_fgets_r+0x103>
81001448:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100144c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100144f:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001452:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001455:	8b 45 14             	mov    0x14(%ebp),%eax
81001458:	8b 40 04             	mov    0x4(%eax),%eax
8100145b:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100145e:	89 c2                	mov    %eax,%edx
81001460:	8b 45 14             	mov    0x14(%ebp),%eax
81001463:	89 50 04             	mov    %edx,0x4(%eax)
81001466:	8b 45 14             	mov    0x14(%ebp),%eax
81001469:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100146c:	89 10                	mov    %edx,(%eax)
8100146e:	83 ec 04             	sub    $0x4,%esp
81001471:	ff 75 f4             	push   -0xc(%ebp)
81001474:	ff 75 e8             	push   -0x18(%ebp)
81001477:	ff 75 f0             	push   -0x10(%ebp)
8100147a:	e8 49 30 00 00       	call   810044c8 <memcpy>
8100147f:	83 c4 10             	add    $0x10,%esp
81001482:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001485:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001488:	01 d0                	add    %edx,%eax
8100148a:	c6 00 00             	movb   $0x0,(%eax)
8100148d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001490:	eb 59                	jmp    810014eb <_fgets_r+0x15c>
81001492:	8b 45 14             	mov    0x14(%ebp),%eax
81001495:	8b 40 04             	mov    0x4(%eax),%eax
81001498:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100149b:	89 c2                	mov    %eax,%edx
8100149d:	8b 45 14             	mov    0x14(%ebp),%eax
810014a0:	89 50 04             	mov    %edx,0x4(%eax)
810014a3:	8b 45 14             	mov    0x14(%ebp),%eax
810014a6:	8b 10                	mov    (%eax),%edx
810014a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ab:	01 c2                	add    %eax,%edx
810014ad:	8b 45 14             	mov    0x14(%ebp),%eax
810014b0:	89 10                	mov    %edx,(%eax)
810014b2:	83 ec 04             	sub    $0x4,%esp
810014b5:	ff 75 f4             	push   -0xc(%ebp)
810014b8:	ff 75 e8             	push   -0x18(%ebp)
810014bb:	ff 75 f0             	push   -0x10(%ebp)
810014be:	e8 05 30 00 00       	call   810044c8 <memcpy>
810014c3:	83 c4 10             	add    $0x10,%esp
810014c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c9:	01 45 f0             	add    %eax,-0x10(%ebp)
810014cc:	8b 45 10             	mov    0x10(%ebp),%eax
810014cf:	2b 45 f4             	sub    -0xc(%ebp),%eax
810014d2:	89 45 10             	mov    %eax,0x10(%ebp)
810014d5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810014d9:	0f 85 f4 fe ff ff    	jne    810013d3 <_fgets_r+0x44>
810014df:	eb 01                	jmp    810014e2 <_fgets_r+0x153>
810014e1:	90                   	nop
810014e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014e5:	c6 00 00             	movb   $0x0,(%eax)
810014e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810014eb:	c9                   	leave  
810014ec:	c3                   	ret    

810014ed <fgets>:
810014ed:	55                   	push   %ebp
810014ee:	89 e5                	mov    %esp,%ebp
810014f0:	83 ec 08             	sub    $0x8,%esp
810014f3:	a1 64 91 00 81       	mov    0x81009164,%eax
810014f8:	ff 75 10             	push   0x10(%ebp)
810014fb:	ff 75 0c             	push   0xc(%ebp)
810014fe:	ff 75 08             	push   0x8(%ebp)
81001501:	50                   	push   %eax
81001502:	e8 88 fe ff ff       	call   8100138f <_fgets_r>
81001507:	83 c4 10             	add    $0x10,%esp
8100150a:	c9                   	leave  
8100150b:	c3                   	ret    

8100150c <std>:
8100150c:	55                   	push   %ebp
8100150d:	89 e5                	mov    %esp,%ebp
8100150f:	83 ec 08             	sub    $0x8,%esp
81001512:	8b 45 08             	mov    0x8(%ebp),%eax
81001515:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100151b:	8b 45 08             	mov    0x8(%ebp),%eax
8100151e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001525:	8b 45 08             	mov    0x8(%ebp),%eax
81001528:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100152f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001532:	89 c2                	mov    %eax,%edx
81001534:	8b 45 08             	mov    0x8(%ebp),%eax
81001537:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100153b:	8b 45 08             	mov    0x8(%ebp),%eax
8100153e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001545:	8b 45 10             	mov    0x10(%ebp),%eax
81001548:	89 c2                	mov    %eax,%edx
8100154a:	8b 45 08             	mov    0x8(%ebp),%eax
8100154d:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001551:	8b 45 08             	mov    0x8(%ebp),%eax
81001554:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100155b:	8b 45 08             	mov    0x8(%ebp),%eax
8100155e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001565:	8b 45 08             	mov    0x8(%ebp),%eax
81001568:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100156f:	8b 45 08             	mov    0x8(%ebp),%eax
81001572:	83 c0 5c             	add    $0x5c,%eax
81001575:	83 ec 04             	sub    $0x4,%esp
81001578:	6a 08                	push   $0x8
8100157a:	6a 00                	push   $0x0
8100157c:	50                   	push   %eax
8100157d:	e8 8e 2f 00 00       	call   81004510 <memset>
81001582:	83 c4 10             	add    $0x10,%esp
81001585:	8b 45 08             	mov    0x8(%ebp),%eax
81001588:	8b 55 08             	mov    0x8(%ebp),%edx
8100158b:	89 50 1c             	mov    %edx,0x1c(%eax)
8100158e:	8b 45 08             	mov    0x8(%ebp),%eax
81001591:	c7 40 20 4b 59 00 81 	movl   $0x8100594b,0x20(%eax)
81001598:	8b 45 08             	mov    0x8(%ebp),%eax
8100159b:	c7 40 24 99 59 00 81 	movl   $0x81005999,0x24(%eax)
810015a2:	8b 45 08             	mov    0x8(%ebp),%eax
810015a5:	c7 40 28 f4 59 00 81 	movl   $0x810059f4,0x28(%eax)
810015ac:	8b 45 08             	mov    0x8(%ebp),%eax
810015af:	c7 40 2c 3e 5a 00 81 	movl   $0x81005a3e,0x2c(%eax)
810015b6:	90                   	nop
810015b7:	c9                   	leave  
810015b8:	c3                   	ret    

810015b9 <stdin_init>:
810015b9:	55                   	push   %ebp
810015ba:	89 e5                	mov    %esp,%ebp
810015bc:	83 ec 08             	sub    $0x8,%esp
810015bf:	83 ec 04             	sub    $0x4,%esp
810015c2:	6a 00                	push   $0x0
810015c4:	6a 04                	push   $0x4
810015c6:	ff 75 08             	push   0x8(%ebp)
810015c9:	e8 3e ff ff ff       	call   8100150c <std>
810015ce:	83 c4 10             	add    $0x10,%esp
810015d1:	90                   	nop
810015d2:	c9                   	leave  
810015d3:	c3                   	ret    

810015d4 <stdout_init>:
810015d4:	55                   	push   %ebp
810015d5:	89 e5                	mov    %esp,%ebp
810015d7:	83 ec 08             	sub    $0x8,%esp
810015da:	83 ec 04             	sub    $0x4,%esp
810015dd:	6a 01                	push   $0x1
810015df:	6a 09                	push   $0x9
810015e1:	ff 75 08             	push   0x8(%ebp)
810015e4:	e8 23 ff ff ff       	call   8100150c <std>
810015e9:	83 c4 10             	add    $0x10,%esp
810015ec:	90                   	nop
810015ed:	c9                   	leave  
810015ee:	c3                   	ret    

810015ef <stderr_init>:
810015ef:	55                   	push   %ebp
810015f0:	89 e5                	mov    %esp,%ebp
810015f2:	83 ec 08             	sub    $0x8,%esp
810015f5:	83 ec 04             	sub    $0x4,%esp
810015f8:	6a 02                	push   $0x2
810015fa:	6a 12                	push   $0x12
810015fc:	ff 75 08             	push   0x8(%ebp)
810015ff:	e8 08 ff ff ff       	call   8100150c <std>
81001604:	83 c4 10             	add    $0x10,%esp
81001607:	90                   	nop
81001608:	c9                   	leave  
81001609:	c3                   	ret    

8100160a <__sfmoreglue>:
8100160a:	55                   	push   %ebp
8100160b:	89 e5                	mov    %esp,%ebp
8100160d:	53                   	push   %ebx
8100160e:	83 ec 14             	sub    $0x14,%esp
81001611:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001614:	8d 43 ff             	lea    -0x1(%ebx),%eax
81001617:	6b c0 68             	imul   $0x68,%eax,%eax
8100161a:	83 c0 74             	add    $0x74,%eax
8100161d:	83 ec 08             	sub    $0x8,%esp
81001620:	50                   	push   %eax
81001621:	ff 75 08             	push   0x8(%ebp)
81001624:	e8 8b 25 00 00       	call   81003bb4 <_malloc_r>
81001629:	83 c4 10             	add    $0x10,%esp
8100162c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100162f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001633:	75 07                	jne    8100163c <__sfmoreglue+0x32>
81001635:	b8 00 00 00 00       	mov    $0x0,%eax
8100163a:	eb 38                	jmp    81001674 <__sfmoreglue+0x6a>
8100163c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100163f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001645:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001648:	89 58 04             	mov    %ebx,0x4(%eax)
8100164b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100164e:	8d 50 0c             	lea    0xc(%eax),%edx
81001651:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001654:	89 50 08             	mov    %edx,0x8(%eax)
81001657:	89 d8                	mov    %ebx,%eax
81001659:	6b c0 68             	imul   $0x68,%eax,%eax
8100165c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100165f:	83 c2 0c             	add    $0xc,%edx
81001662:	83 ec 04             	sub    $0x4,%esp
81001665:	50                   	push   %eax
81001666:	6a 00                	push   $0x0
81001668:	52                   	push   %edx
81001669:	e8 a2 2e 00 00       	call   81004510 <memset>
8100166e:	83 c4 10             	add    $0x10,%esp
81001671:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001674:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001677:	c9                   	leave  
81001678:	c3                   	ret    

81001679 <__sfp>:
81001679:	55                   	push   %ebp
8100167a:	89 e5                	mov    %esp,%ebp
8100167c:	83 ec 18             	sub    $0x18,%esp
8100167f:	e8 16 02 00 00       	call   8100189a <__sfp_lock_acquire>
81001684:	a1 b0 89 00 81       	mov    0x810089b0,%eax
81001689:	8b 40 38             	mov    0x38(%eax),%eax
8100168c:	85 c0                	test   %eax,%eax
8100168e:	75 11                	jne    810016a1 <__sfp+0x28>
81001690:	a1 b0 89 00 81       	mov    0x810089b0,%eax
81001695:	83 ec 0c             	sub    $0xc,%esp
81001698:	50                   	push   %eax
81001699:	e8 63 01 00 00       	call   81001801 <__sinit>
8100169e:	83 c4 10             	add    $0x10,%esp
810016a1:	a1 b0 89 00 81       	mov    0x810089b0,%eax
810016a6:	05 e0 02 00 00       	add    $0x2e0,%eax
810016ab:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016b1:	8b 40 08             	mov    0x8(%eax),%eax
810016b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016ba:	8b 40 04             	mov    0x4(%eax),%eax
810016bd:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016c0:	eb 10                	jmp    810016d2 <__sfp+0x59>
810016c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810016c9:	66 85 c0             	test   %ax,%ax
810016cc:	74 58                	je     81001726 <__sfp+0xad>
810016ce:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810016d2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810016d6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810016da:	79 e6                	jns    810016c2 <__sfp+0x49>
810016dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016df:	8b 00                	mov    (%eax),%eax
810016e1:	85 c0                	test   %eax,%eax
810016e3:	75 1e                	jne    81001703 <__sfp+0x8a>
810016e5:	83 ec 08             	sub    $0x8,%esp
810016e8:	6a 04                	push   $0x4
810016ea:	ff 75 08             	push   0x8(%ebp)
810016ed:	e8 18 ff ff ff       	call   8100160a <__sfmoreglue>
810016f2:	83 c4 10             	add    $0x10,%esp
810016f5:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016f8:	89 02                	mov    %eax,(%edx)
810016fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016fd:	8b 00                	mov    (%eax),%eax
810016ff:	85 c0                	test   %eax,%eax
81001701:	74 0a                	je     8100170d <__sfp+0x94>
81001703:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001706:	8b 00                	mov    (%eax),%eax
81001708:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100170b:	eb a1                	jmp    810016ae <__sfp+0x35>
8100170d:	90                   	nop
8100170e:	e8 8d 01 00 00       	call   810018a0 <__sfp_lock_release>
81001713:	8b 45 08             	mov    0x8(%ebp),%eax
81001716:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100171c:	b8 00 00 00 00       	mov    $0x0,%eax
81001721:	e9 9e 00 00 00       	jmp    810017c4 <__sfp+0x14b>
81001726:	90                   	nop
81001727:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172a:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001730:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001733:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81001739:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173c:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001743:	e8 58 01 00 00       	call   810018a0 <__sfp_lock_release>
81001748:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001751:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001754:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100175b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100175e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001765:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001768:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100176f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001772:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100177c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001783:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001786:	83 c0 5c             	add    $0x5c,%eax
81001789:	83 ec 04             	sub    $0x4,%esp
8100178c:	6a 08                	push   $0x8
8100178e:	6a 00                	push   $0x0
81001790:	50                   	push   %eax
81001791:	e8 7a 2d 00 00       	call   81004510 <memset>
81001796:	83 c4 10             	add    $0x10,%esp
81001799:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100179c:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810017a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810017ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017b0:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810017b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ba:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810017c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c4:	c9                   	leave  
810017c5:	c3                   	ret    

810017c6 <_cleanup_r>:
810017c6:	55                   	push   %ebp
810017c7:	89 e5                	mov    %esp,%ebp
810017c9:	83 ec 18             	sub    $0x18,%esp
810017cc:	c7 45 f4 b4 0f 00 81 	movl   $0x81000fb4,-0xc(%ebp)
810017d3:	83 ec 08             	sub    $0x8,%esp
810017d6:	ff 75 f4             	push   -0xc(%ebp)
810017d9:	ff 75 08             	push   0x8(%ebp)
810017dc:	e8 05 10 00 00       	call   810027e6 <_fwalk_reent>
810017e1:	83 c4 10             	add    $0x10,%esp
810017e4:	90                   	nop
810017e5:	c9                   	leave  
810017e6:	c3                   	ret    

810017e7 <_cleanup>:
810017e7:	55                   	push   %ebp
810017e8:	89 e5                	mov    %esp,%ebp
810017ea:	83 ec 08             	sub    $0x8,%esp
810017ed:	a1 b0 89 00 81       	mov    0x810089b0,%eax
810017f2:	83 ec 0c             	sub    $0xc,%esp
810017f5:	50                   	push   %eax
810017f6:	e8 cb ff ff ff       	call   810017c6 <_cleanup_r>
810017fb:	83 c4 10             	add    $0x10,%esp
810017fe:	90                   	nop
810017ff:	c9                   	leave  
81001800:	c3                   	ret    

81001801 <__sinit>:
81001801:	55                   	push   %ebp
81001802:	89 e5                	mov    %esp,%ebp
81001804:	83 ec 08             	sub    $0x8,%esp
81001807:	e8 9a 00 00 00       	call   810018a6 <__sinit_lock_acquire>
8100180c:	8b 45 08             	mov    0x8(%ebp),%eax
8100180f:	8b 40 38             	mov    0x38(%eax),%eax
81001812:	85 c0                	test   %eax,%eax
81001814:	74 07                	je     8100181d <__sinit+0x1c>
81001816:	e8 91 00 00 00       	call   810018ac <__sinit_lock_release>
8100181b:	eb 7b                	jmp    81001898 <__sinit+0x97>
8100181d:	8b 45 08             	mov    0x8(%ebp),%eax
81001820:	c7 40 3c c6 17 00 81 	movl   $0x810017c6,0x3c(%eax)
81001827:	8b 45 08             	mov    0x8(%ebp),%eax
8100182a:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001831:	00 00 00 
81001834:	8b 45 08             	mov    0x8(%ebp),%eax
81001837:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100183e:	00 00 00 
81001841:	8b 45 08             	mov    0x8(%ebp),%eax
81001844:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100184a:	8b 45 08             	mov    0x8(%ebp),%eax
8100184d:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001853:	8b 45 08             	mov    0x8(%ebp),%eax
81001856:	8b 40 04             	mov    0x4(%eax),%eax
81001859:	83 ec 0c             	sub    $0xc,%esp
8100185c:	50                   	push   %eax
8100185d:	e8 57 fd ff ff       	call   810015b9 <stdin_init>
81001862:	83 c4 10             	add    $0x10,%esp
81001865:	8b 45 08             	mov    0x8(%ebp),%eax
81001868:	8b 40 08             	mov    0x8(%eax),%eax
8100186b:	83 ec 0c             	sub    $0xc,%esp
8100186e:	50                   	push   %eax
8100186f:	e8 60 fd ff ff       	call   810015d4 <stdout_init>
81001874:	83 c4 10             	add    $0x10,%esp
81001877:	8b 45 08             	mov    0x8(%ebp),%eax
8100187a:	8b 40 0c             	mov    0xc(%eax),%eax
8100187d:	83 ec 0c             	sub    $0xc,%esp
81001880:	50                   	push   %eax
81001881:	e8 69 fd ff ff       	call   810015ef <stderr_init>
81001886:	83 c4 10             	add    $0x10,%esp
81001889:	8b 45 08             	mov    0x8(%ebp),%eax
8100188c:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001893:	e8 14 00 00 00       	call   810018ac <__sinit_lock_release>
81001898:	c9                   	leave  
81001899:	c3                   	ret    

8100189a <__sfp_lock_acquire>:
8100189a:	55                   	push   %ebp
8100189b:	89 e5                	mov    %esp,%ebp
8100189d:	90                   	nop
8100189e:	5d                   	pop    %ebp
8100189f:	c3                   	ret    

810018a0 <__sfp_lock_release>:
810018a0:	55                   	push   %ebp
810018a1:	89 e5                	mov    %esp,%ebp
810018a3:	90                   	nop
810018a4:	5d                   	pop    %ebp
810018a5:	c3                   	ret    

810018a6 <__sinit_lock_acquire>:
810018a6:	55                   	push   %ebp
810018a7:	89 e5                	mov    %esp,%ebp
810018a9:	90                   	nop
810018aa:	5d                   	pop    %ebp
810018ab:	c3                   	ret    

810018ac <__sinit_lock_release>:
810018ac:	55                   	push   %ebp
810018ad:	89 e5                	mov    %esp,%ebp
810018af:	90                   	nop
810018b0:	5d                   	pop    %ebp
810018b1:	c3                   	ret    

810018b2 <__fp_lock>:
810018b2:	55                   	push   %ebp
810018b3:	89 e5                	mov    %esp,%ebp
810018b5:	b8 00 00 00 00       	mov    $0x0,%eax
810018ba:	5d                   	pop    %ebp
810018bb:	c3                   	ret    

810018bc <__fp_unlock>:
810018bc:	55                   	push   %ebp
810018bd:	89 e5                	mov    %esp,%ebp
810018bf:	b8 00 00 00 00       	mov    $0x0,%eax
810018c4:	5d                   	pop    %ebp
810018c5:	c3                   	ret    

810018c6 <__fp_lock_all>:
810018c6:	55                   	push   %ebp
810018c7:	89 e5                	mov    %esp,%ebp
810018c9:	83 ec 08             	sub    $0x8,%esp
810018cc:	e8 c9 ff ff ff       	call   8100189a <__sfp_lock_acquire>
810018d1:	a1 64 91 00 81       	mov    0x81009164,%eax
810018d6:	83 ec 08             	sub    $0x8,%esp
810018d9:	68 b2 18 00 81       	push   $0x810018b2
810018de:	50                   	push   %eax
810018df:	e8 9a 0e 00 00       	call   8100277e <_fwalk>
810018e4:	83 c4 10             	add    $0x10,%esp
810018e7:	90                   	nop
810018e8:	c9                   	leave  
810018e9:	c3                   	ret    

810018ea <__fp_unlock_all>:
810018ea:	55                   	push   %ebp
810018eb:	89 e5                	mov    %esp,%ebp
810018ed:	83 ec 08             	sub    $0x8,%esp
810018f0:	a1 64 91 00 81       	mov    0x81009164,%eax
810018f5:	83 ec 08             	sub    $0x8,%esp
810018f8:	68 bc 18 00 81       	push   $0x810018bc
810018fd:	50                   	push   %eax
810018fe:	e8 7b 0e 00 00       	call   8100277e <_fwalk>
81001903:	83 c4 10             	add    $0x10,%esp
81001906:	e8 95 ff ff ff       	call   810018a0 <__sfp_lock_release>
8100190b:	90                   	nop
8100190c:	c9                   	leave  
8100190d:	c3                   	ret    

8100190e <_fopen_r>:
8100190e:	55                   	push   %ebp
8100190f:	89 e5                	mov    %esp,%ebp
81001911:	56                   	push   %esi
81001912:	53                   	push   %ebx
81001913:	83 ec 10             	sub    $0x10,%esp
81001916:	83 ec 04             	sub    $0x4,%esp
81001919:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100191c:	50                   	push   %eax
8100191d:	ff 75 10             	push   0x10(%ebp)
81001920:	ff 75 08             	push   0x8(%ebp)
81001923:	e8 0a 4b 00 00       	call   81006432 <__sflags>
81001928:	83 c4 10             	add    $0x10,%esp
8100192b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100192e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001932:	75 0a                	jne    8100193e <_fopen_r+0x30>
81001934:	b8 00 00 00 00       	mov    $0x0,%eax
81001939:	e9 9e 00 00 00       	jmp    810019dc <_fopen_r+0xce>
8100193e:	83 ec 0c             	sub    $0xc,%esp
81001941:	ff 75 08             	push   0x8(%ebp)
81001944:	e8 30 fd ff ff       	call   81001679 <__sfp>
81001949:	83 c4 10             	add    $0x10,%esp
8100194c:	89 c3                	mov    %eax,%ebx
8100194e:	85 db                	test   %ebx,%ebx
81001950:	75 0a                	jne    8100195c <_fopen_r+0x4e>
81001952:	b8 00 00 00 00       	mov    $0x0,%eax
81001957:	e9 80 00 00 00       	jmp    810019dc <_fopen_r+0xce>
8100195c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100195f:	68 b6 01 00 00       	push   $0x1b6
81001964:	50                   	push   %eax
81001965:	ff 75 0c             	push   0xc(%ebp)
81001968:	ff 75 08             	push   0x8(%ebp)
8100196b:	e8 83 37 00 00       	call   810050f3 <_open_r>
81001970:	83 c4 10             	add    $0x10,%esp
81001973:	89 c6                	mov    %eax,%esi
81001975:	85 f6                	test   %esi,%esi
81001977:	79 17                	jns    81001990 <_fopen_r+0x82>
81001979:	e8 1c ff ff ff       	call   8100189a <__sfp_lock_acquire>
8100197e:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001984:	e8 17 ff ff ff       	call   810018a0 <__sfp_lock_release>
81001989:	b8 00 00 00 00       	mov    $0x0,%eax
8100198e:	eb 4c                	jmp    810019dc <_fopen_r+0xce>
81001990:	89 f0                	mov    %esi,%eax
81001992:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001996:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001999:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100199d:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
810019a0:	c7 43 20 4b 59 00 81 	movl   $0x8100594b,0x20(%ebx)
810019a7:	c7 43 24 99 59 00 81 	movl   $0x81005999,0x24(%ebx)
810019ae:	c7 43 28 f4 59 00 81 	movl   $0x810059f4,0x28(%ebx)
810019b5:	c7 43 2c 3e 5a 00 81 	movl   $0x81005a3e,0x2c(%ebx)
810019bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810019c0:	98                   	cwtl   
810019c1:	25 00 01 00 00       	and    $0x100,%eax
810019c6:	85 c0                	test   %eax,%eax
810019c8:	74 10                	je     810019da <_fopen_r+0xcc>
810019ca:	6a 02                	push   $0x2
810019cc:	6a 00                	push   $0x0
810019ce:	53                   	push   %ebx
810019cf:	ff 75 08             	push   0x8(%ebp)
810019d2:	e8 56 08 00 00       	call   8100222d <_fseek_r>
810019d7:	83 c4 10             	add    $0x10,%esp
810019da:	89 d8                	mov    %ebx,%eax
810019dc:	8d 65 f8             	lea    -0x8(%ebp),%esp
810019df:	5b                   	pop    %ebx
810019e0:	5e                   	pop    %esi
810019e1:	5d                   	pop    %ebp
810019e2:	c3                   	ret    

810019e3 <fopen>:
810019e3:	55                   	push   %ebp
810019e4:	89 e5                	mov    %esp,%ebp
810019e6:	83 ec 08             	sub    $0x8,%esp
810019e9:	a1 64 91 00 81       	mov    0x81009164,%eax
810019ee:	83 ec 04             	sub    $0x4,%esp
810019f1:	ff 75 0c             	push   0xc(%ebp)
810019f4:	ff 75 08             	push   0x8(%ebp)
810019f7:	50                   	push   %eax
810019f8:	e8 11 ff ff ff       	call   8100190e <_fopen_r>
810019fd:	83 c4 10             	add    $0x10,%esp
81001a00:	c9                   	leave  
81001a01:	c3                   	ret    

81001a02 <_fiprintf_r>:
81001a02:	55                   	push   %ebp
81001a03:	89 e5                	mov    %esp,%ebp
81001a05:	83 ec 18             	sub    $0x18,%esp
81001a08:	8d 45 14             	lea    0x14(%ebp),%eax
81001a0b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a11:	50                   	push   %eax
81001a12:	ff 75 10             	push   0x10(%ebp)
81001a15:	ff 75 0c             	push   0xc(%ebp)
81001a18:	ff 75 08             	push   0x8(%ebp)
81001a1b:	e8 93 2d 00 00       	call   810047b3 <_vfiprintf_r>
81001a20:	83 c4 10             	add    $0x10,%esp
81001a23:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a29:	c9                   	leave  
81001a2a:	c3                   	ret    

81001a2b <fiprintf>:
81001a2b:	55                   	push   %ebp
81001a2c:	89 e5                	mov    %esp,%ebp
81001a2e:	83 ec 18             	sub    $0x18,%esp
81001a31:	8d 45 10             	lea    0x10(%ebp),%eax
81001a34:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001a37:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001a3a:	a1 64 91 00 81       	mov    0x81009164,%eax
81001a3f:	52                   	push   %edx
81001a40:	ff 75 0c             	push   0xc(%ebp)
81001a43:	ff 75 08             	push   0x8(%ebp)
81001a46:	50                   	push   %eax
81001a47:	e8 67 2d 00 00       	call   810047b3 <_vfiprintf_r>
81001a4c:	83 c4 10             	add    $0x10,%esp
81001a4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a55:	c9                   	leave  
81001a56:	c3                   	ret    

81001a57 <_fread_r>:
81001a57:	55                   	push   %ebp
81001a58:	89 e5                	mov    %esp,%ebp
81001a5a:	57                   	push   %edi
81001a5b:	56                   	push   %esi
81001a5c:	53                   	push   %ebx
81001a5d:	83 ec 2c             	sub    $0x2c,%esp
81001a60:	8b 45 14             	mov    0x14(%ebp),%eax
81001a63:	0f af 45 10          	imul   0x10(%ebp),%eax
81001a67:	89 c3                	mov    %eax,%ebx
81001a69:	85 db                	test   %ebx,%ebx
81001a6b:	75 0a                	jne    81001a77 <_fread_r+0x20>
81001a6d:	b8 00 00 00 00       	mov    $0x0,%eax
81001a72:	e9 4d 02 00 00       	jmp    81001cc4 <_fread_r+0x26d>
81001a77:	8b 45 08             	mov    0x8(%ebp),%eax
81001a7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001a7d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001a81:	74 18                	je     81001a9b <_fread_r+0x44>
81001a83:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001a86:	8b 40 38             	mov    0x38(%eax),%eax
81001a89:	85 c0                	test   %eax,%eax
81001a8b:	75 0e                	jne    81001a9b <_fread_r+0x44>
81001a8d:	83 ec 0c             	sub    $0xc,%esp
81001a90:	ff 75 e4             	push   -0x1c(%ebp)
81001a93:	e8 69 fd ff ff       	call   81001801 <__sinit>
81001a98:	83 c4 10             	add    $0x10,%esp
81001a9b:	8b 45 18             	mov    0x18(%ebp),%eax
81001a9e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001aa2:	98                   	cwtl   
81001aa3:	25 00 20 00 00       	and    $0x2000,%eax
81001aa8:	85 c0                	test   %eax,%eax
81001aaa:	75 24                	jne    81001ad0 <_fread_r+0x79>
81001aac:	8b 45 18             	mov    0x18(%ebp),%eax
81001aaf:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001ab3:	80 cc 20             	or     $0x20,%ah
81001ab6:	89 c2                	mov    %eax,%edx
81001ab8:	8b 45 18             	mov    0x18(%ebp),%eax
81001abb:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001abf:	8b 45 18             	mov    0x18(%ebp),%eax
81001ac2:	8b 40 64             	mov    0x64(%eax),%eax
81001ac5:	80 e4 df             	and    $0xdf,%ah
81001ac8:	89 c2                	mov    %eax,%edx
81001aca:	8b 45 18             	mov    0x18(%ebp),%eax
81001acd:	89 50 64             	mov    %edx,0x64(%eax)
81001ad0:	8b 45 18             	mov    0x18(%ebp),%eax
81001ad3:	8b 40 04             	mov    0x4(%eax),%eax
81001ad6:	85 c0                	test   %eax,%eax
81001ad8:	79 0a                	jns    81001ae4 <_fread_r+0x8d>
81001ada:	8b 45 18             	mov    0x18(%ebp),%eax
81001add:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001ae4:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001ae7:	8b 75 0c             	mov    0xc(%ebp),%esi
81001aea:	8b 45 18             	mov    0x18(%ebp),%eax
81001aed:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001af1:	98                   	cwtl   
81001af2:	83 e0 02             	and    $0x2,%eax
81001af5:	85 c0                	test   %eax,%eax
81001af7:	0f 84 88 01 00 00    	je     81001c85 <_fread_r+0x22e>
81001afd:	8b 45 18             	mov    0x18(%ebp),%eax
81001b00:	8b 40 04             	mov    0x4(%eax),%eax
81001b03:	39 c3                	cmp    %eax,%ebx
81001b05:	0f 46 c3             	cmovbe %ebx,%eax
81001b08:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b0b:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001b0e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b11:	8b 00                	mov    (%eax),%eax
81001b13:	83 ec 04             	sub    $0x4,%esp
81001b16:	52                   	push   %edx
81001b17:	50                   	push   %eax
81001b18:	56                   	push   %esi
81001b19:	e8 aa 29 00 00       	call   810044c8 <memcpy>
81001b1e:	83 c4 10             	add    $0x10,%esp
81001b21:	8b 45 18             	mov    0x18(%ebp),%eax
81001b24:	8b 10                	mov    (%eax),%edx
81001b26:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b29:	01 c2                	add    %eax,%edx
81001b2b:	8b 45 18             	mov    0x18(%ebp),%eax
81001b2e:	89 10                	mov    %edx,(%eax)
81001b30:	8b 45 18             	mov    0x18(%ebp),%eax
81001b33:	8b 40 04             	mov    0x4(%eax),%eax
81001b36:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001b39:	89 c2                	mov    %eax,%edx
81001b3b:	8b 45 18             	mov    0x18(%ebp),%eax
81001b3e:	89 50 04             	mov    %edx,0x4(%eax)
81001b41:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b44:	01 c6                	add    %eax,%esi
81001b46:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b49:	29 c3                	sub    %eax,%ebx
81001b4b:	8b 45 18             	mov    0x18(%ebp),%eax
81001b4e:	8b 40 30             	mov    0x30(%eax),%eax
81001b51:	85 c0                	test   %eax,%eax
81001b53:	0f 84 d0 00 00 00    	je     81001c29 <_fread_r+0x1d2>
81001b59:	85 db                	test   %ebx,%ebx
81001b5b:	0f 84 c8 00 00 00    	je     81001c29 <_fread_r+0x1d2>
81001b61:	8b 45 18             	mov    0x18(%ebp),%eax
81001b64:	8b 40 30             	mov    0x30(%eax),%eax
81001b67:	8b 55 18             	mov    0x18(%ebp),%edx
81001b6a:	83 c2 40             	add    $0x40,%edx
81001b6d:	39 d0                	cmp    %edx,%eax
81001b6f:	74 15                	je     81001b86 <_fread_r+0x12f>
81001b71:	8b 45 18             	mov    0x18(%ebp),%eax
81001b74:	8b 40 30             	mov    0x30(%eax),%eax
81001b77:	83 ec 08             	sub    $0x8,%esp
81001b7a:	50                   	push   %eax
81001b7b:	ff 75 08             	push   0x8(%ebp)
81001b7e:	e8 6e 01 00 00       	call   81001cf1 <_free_r>
81001b83:	83 c4 10             	add    $0x10,%esp
81001b86:	8b 45 18             	mov    0x18(%ebp),%eax
81001b89:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001b90:	e9 94 00 00 00       	jmp    81001c29 <_fread_r+0x1d2>
81001b95:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001b9c:	8b 45 18             	mov    0x18(%ebp),%eax
81001b9f:	8b 40 10             	mov    0x10(%eax),%eax
81001ba2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001ba5:	8b 45 18             	mov    0x18(%ebp),%eax
81001ba8:	8b 00                	mov    (%eax),%eax
81001baa:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001bad:	8b 45 18             	mov    0x18(%ebp),%eax
81001bb0:	8b 40 14             	mov    0x14(%eax),%eax
81001bb3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001bb6:	8b 45 18             	mov    0x18(%ebp),%eax
81001bb9:	89 70 10             	mov    %esi,0x10(%eax)
81001bbc:	89 da                	mov    %ebx,%edx
81001bbe:	8b 45 18             	mov    0x18(%ebp),%eax
81001bc1:	89 50 14             	mov    %edx,0x14(%eax)
81001bc4:	8b 45 18             	mov    0x18(%ebp),%eax
81001bc7:	89 30                	mov    %esi,(%eax)
81001bc9:	83 ec 08             	sub    $0x8,%esp
81001bcc:	ff 75 18             	push   0x18(%ebp)
81001bcf:	ff 75 08             	push   0x8(%ebp)
81001bd2:	e8 7a 38 00 00       	call   81005451 <__srefill_r>
81001bd7:	83 c4 10             	add    $0x10,%esp
81001bda:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001bdd:	8b 45 18             	mov    0x18(%ebp),%eax
81001be0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001be3:	89 50 10             	mov    %edx,0x10(%eax)
81001be6:	8b 45 18             	mov    0x18(%ebp),%eax
81001be9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001bec:	89 50 14             	mov    %edx,0x14(%eax)
81001bef:	8b 45 18             	mov    0x18(%ebp),%eax
81001bf2:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001bf5:	89 10                	mov    %edx,(%eax)
81001bf7:	8b 45 18             	mov    0x18(%ebp),%eax
81001bfa:	8b 40 04             	mov    0x4(%eax),%eax
81001bfd:	29 c3                	sub    %eax,%ebx
81001bff:	8b 45 18             	mov    0x18(%ebp),%eax
81001c02:	8b 40 04             	mov    0x4(%eax),%eax
81001c05:	01 c6                	add    %eax,%esi
81001c07:	8b 45 18             	mov    0x18(%ebp),%eax
81001c0a:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c11:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001c15:	74 12                	je     81001c29 <_fread_r+0x1d2>
81001c17:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c1a:	29 d8                	sub    %ebx,%eax
81001c1c:	ba 00 00 00 00       	mov    $0x0,%edx
81001c21:	f7 75 10             	divl   0x10(%ebp)
81001c24:	e9 9b 00 00 00       	jmp    81001cc4 <_fread_r+0x26d>
81001c29:	85 db                	test   %ebx,%ebx
81001c2b:	0f 85 64 ff ff ff    	jne    81001b95 <_fread_r+0x13e>
81001c31:	e9 8b 00 00 00       	jmp    81001cc1 <_fread_r+0x26a>
81001c36:	89 fa                	mov    %edi,%edx
81001c38:	8b 45 18             	mov    0x18(%ebp),%eax
81001c3b:	8b 00                	mov    (%eax),%eax
81001c3d:	83 ec 04             	sub    $0x4,%esp
81001c40:	52                   	push   %edx
81001c41:	50                   	push   %eax
81001c42:	56                   	push   %esi
81001c43:	e8 80 28 00 00       	call   810044c8 <memcpy>
81001c48:	83 c4 10             	add    $0x10,%esp
81001c4b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4e:	8b 00                	mov    (%eax),%eax
81001c50:	89 fa                	mov    %edi,%edx
81001c52:	01 c2                	add    %eax,%edx
81001c54:	8b 45 18             	mov    0x18(%ebp),%eax
81001c57:	89 10                	mov    %edx,(%eax)
81001c59:	89 f8                	mov    %edi,%eax
81001c5b:	01 c6                	add    %eax,%esi
81001c5d:	89 f8                	mov    %edi,%eax
81001c5f:	29 c3                	sub    %eax,%ebx
81001c61:	83 ec 08             	sub    $0x8,%esp
81001c64:	ff 75 18             	push   0x18(%ebp)
81001c67:	ff 75 08             	push   0x8(%ebp)
81001c6a:	e8 e2 37 00 00       	call   81005451 <__srefill_r>
81001c6f:	83 c4 10             	add    $0x10,%esp
81001c72:	85 c0                	test   %eax,%eax
81001c74:	74 0f                	je     81001c85 <_fread_r+0x22e>
81001c76:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c79:	29 d8                	sub    %ebx,%eax
81001c7b:	ba 00 00 00 00       	mov    $0x0,%edx
81001c80:	f7 75 10             	divl   0x10(%ebp)
81001c83:	eb 3f                	jmp    81001cc4 <_fread_r+0x26d>
81001c85:	8b 45 18             	mov    0x18(%ebp),%eax
81001c88:	8b 78 04             	mov    0x4(%eax),%edi
81001c8b:	89 f8                	mov    %edi,%eax
81001c8d:	39 c3                	cmp    %eax,%ebx
81001c8f:	77 a5                	ja     81001c36 <_fread_r+0x1df>
81001c91:	8b 45 18             	mov    0x18(%ebp),%eax
81001c94:	8b 00                	mov    (%eax),%eax
81001c96:	83 ec 04             	sub    $0x4,%esp
81001c99:	53                   	push   %ebx
81001c9a:	50                   	push   %eax
81001c9b:	56                   	push   %esi
81001c9c:	e8 27 28 00 00       	call   810044c8 <memcpy>
81001ca1:	83 c4 10             	add    $0x10,%esp
81001ca4:	8b 45 18             	mov    0x18(%ebp),%eax
81001ca7:	8b 40 04             	mov    0x4(%eax),%eax
81001caa:	29 d8                	sub    %ebx,%eax
81001cac:	89 c2                	mov    %eax,%edx
81001cae:	8b 45 18             	mov    0x18(%ebp),%eax
81001cb1:	89 50 04             	mov    %edx,0x4(%eax)
81001cb4:	8b 45 18             	mov    0x18(%ebp),%eax
81001cb7:	8b 00                	mov    (%eax),%eax
81001cb9:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001cbc:	8b 45 18             	mov    0x18(%ebp),%eax
81001cbf:	89 10                	mov    %edx,(%eax)
81001cc1:	8b 45 14             	mov    0x14(%ebp),%eax
81001cc4:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001cc7:	5b                   	pop    %ebx
81001cc8:	5e                   	pop    %esi
81001cc9:	5f                   	pop    %edi
81001cca:	5d                   	pop    %ebp
81001ccb:	c3                   	ret    

81001ccc <fread>:
81001ccc:	55                   	push   %ebp
81001ccd:	89 e5                	mov    %esp,%ebp
81001ccf:	83 ec 08             	sub    $0x8,%esp
81001cd2:	a1 64 91 00 81       	mov    0x81009164,%eax
81001cd7:	83 ec 0c             	sub    $0xc,%esp
81001cda:	ff 75 14             	push   0x14(%ebp)
81001cdd:	ff 75 10             	push   0x10(%ebp)
81001ce0:	ff 75 0c             	push   0xc(%ebp)
81001ce3:	ff 75 08             	push   0x8(%ebp)
81001ce6:	50                   	push   %eax
81001ce7:	e8 6b fd ff ff       	call   81001a57 <_fread_r>
81001cec:	83 c4 20             	add    $0x20,%esp
81001cef:	c9                   	leave  
81001cf0:	c3                   	ret    

81001cf1 <_free_r>:
81001cf1:	55                   	push   %ebp
81001cf2:	89 e5                	mov    %esp,%ebp
81001cf4:	53                   	push   %ebx
81001cf5:	83 ec 34             	sub    $0x34,%esp
81001cf8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001cfc:	0f 84 c4 03 00 00    	je     810020c6 <_free_r+0x3d5>
81001d02:	83 ec 0c             	sub    $0xc,%esp
81001d05:	ff 75 08             	push   0x8(%ebp)
81001d08:	e8 8b 28 00 00       	call   81004598 <__malloc_lock>
81001d0d:	83 c4 10             	add    $0x10,%esp
81001d10:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d13:	83 e8 08             	sub    $0x8,%eax
81001d16:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d1c:	8b 40 04             	mov    0x4(%eax),%eax
81001d1f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d22:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d25:	83 e0 fe             	and    $0xfffffffe,%eax
81001d28:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001d2b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001d2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d31:	01 d0                	add    %edx,%eax
81001d33:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001d36:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001d39:	8b 40 04             	mov    0x4(%eax),%eax
81001d3c:	83 e0 fc             	and    $0xfffffffc,%eax
81001d3f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d42:	b8 80 91 00 81       	mov    $0x81009180,%eax
81001d47:	8b 40 08             	mov    0x8(%eax),%eax
81001d4a:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001d4d:	0f 85 94 00 00 00    	jne    81001de7 <_free_r+0xf6>
81001d53:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001d56:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d59:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d5c:	83 e0 01             	and    $0x1,%eax
81001d5f:	85 c0                	test   %eax,%eax
81001d61:	75 3a                	jne    81001d9d <_free_r+0xac>
81001d63:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d66:	8b 00                	mov    (%eax),%eax
81001d68:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d6e:	f7 d8                	neg    %eax
81001d70:	01 45 f4             	add    %eax,-0xc(%ebp)
81001d73:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d76:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d7c:	8b 40 0c             	mov    0xc(%eax),%eax
81001d7f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001d82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d85:	8b 40 08             	mov    0x8(%eax),%eax
81001d88:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d8b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d8e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001d91:	89 50 0c             	mov    %edx,0xc(%eax)
81001d94:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d97:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d9a:	89 50 08             	mov    %edx,0x8(%eax)
81001d9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001da0:	83 c8 01             	or     $0x1,%eax
81001da3:	89 c2                	mov    %eax,%edx
81001da5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001da8:	89 50 04             	mov    %edx,0x4(%eax)
81001dab:	ba 80 91 00 81       	mov    $0x81009180,%edx
81001db0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001db3:	89 42 08             	mov    %eax,0x8(%edx)
81001db6:	a1 88 95 00 81       	mov    0x81009588,%eax
81001dbb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001dbe:	72 14                	jb     81001dd4 <_free_r+0xe3>
81001dc0:	a1 60 9e 00 81       	mov    0x81009e60,%eax
81001dc5:	83 ec 08             	sub    $0x8,%esp
81001dc8:	50                   	push   %eax
81001dc9:	ff 75 08             	push   0x8(%ebp)
81001dcc:	e8 fb 02 00 00       	call   810020cc <_malloc_trim_r>
81001dd1:	83 c4 10             	add    $0x10,%esp
81001dd4:	83 ec 0c             	sub    $0xc,%esp
81001dd7:	ff 75 08             	push   0x8(%ebp)
81001dda:	e8 bf 27 00 00       	call   8100459e <__malloc_unlock>
81001ddf:	83 c4 10             	add    $0x10,%esp
81001de2:	e9 e0 02 00 00       	jmp    810020c7 <_free_r+0x3d6>
81001de7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001dea:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001ded:	89 50 04             	mov    %edx,0x4(%eax)
81001df0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001df7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dfa:	83 e0 01             	and    $0x1,%eax
81001dfd:	85 c0                	test   %eax,%eax
81001dff:	75 52                	jne    81001e53 <_free_r+0x162>
81001e01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e04:	8b 00                	mov    (%eax),%eax
81001e06:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001e09:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001e0c:	f7 d8                	neg    %eax
81001e0e:	01 45 f4             	add    %eax,-0xc(%ebp)
81001e11:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001e14:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e1a:	8b 40 08             	mov    0x8(%eax),%eax
81001e1d:	ba 88 91 00 81       	mov    $0x81009188,%edx
81001e22:	39 d0                	cmp    %edx,%eax
81001e24:	75 09                	jne    81001e2f <_free_r+0x13e>
81001e26:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001e2d:	eb 24                	jmp    81001e53 <_free_r+0x162>
81001e2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e32:	8b 40 0c             	mov    0xc(%eax),%eax
81001e35:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e3b:	8b 40 08             	mov    0x8(%eax),%eax
81001e3e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e41:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e44:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001e47:	89 50 0c             	mov    %edx,0xc(%eax)
81001e4a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e4d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e50:	89 50 08             	mov    %edx,0x8(%eax)
81001e53:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001e56:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001e59:	01 d0                	add    %edx,%eax
81001e5b:	8b 40 04             	mov    0x4(%eax),%eax
81001e5e:	83 e0 01             	and    $0x1,%eax
81001e61:	85 c0                	test   %eax,%eax
81001e63:	75 75                	jne    81001eda <_free_r+0x1e9>
81001e65:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001e68:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e6b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001e6f:	75 45                	jne    81001eb6 <_free_r+0x1c5>
81001e71:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e74:	8b 40 08             	mov    0x8(%eax),%eax
81001e77:	ba 88 91 00 81       	mov    $0x81009188,%edx
81001e7c:	39 d0                	cmp    %edx,%eax
81001e7e:	75 36                	jne    81001eb6 <_free_r+0x1c5>
81001e80:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001e87:	b8 88 91 00 81       	mov    $0x81009188,%eax
81001e8c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001e8f:	89 50 0c             	mov    %edx,0xc(%eax)
81001e92:	ba 88 91 00 81       	mov    $0x81009188,%edx
81001e97:	8b 40 0c             	mov    0xc(%eax),%eax
81001e9a:	89 42 08             	mov    %eax,0x8(%edx)
81001e9d:	ba 88 91 00 81       	mov    $0x81009188,%edx
81001ea2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ea5:	89 50 0c             	mov    %edx,0xc(%eax)
81001ea8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eab:	8b 50 0c             	mov    0xc(%eax),%edx
81001eae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb1:	89 50 08             	mov    %edx,0x8(%eax)
81001eb4:	eb 24                	jmp    81001eda <_free_r+0x1e9>
81001eb6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001eb9:	8b 40 0c             	mov    0xc(%eax),%eax
81001ebc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ebf:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ec2:	8b 40 08             	mov    0x8(%eax),%eax
81001ec5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ec8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ecb:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001ece:	89 50 0c             	mov    %edx,0xc(%eax)
81001ed1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ed4:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ed7:	89 50 08             	mov    %edx,0x8(%eax)
81001eda:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001edd:	83 c8 01             	or     $0x1,%eax
81001ee0:	89 c2                	mov    %eax,%edx
81001ee2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ee5:	89 50 04             	mov    %edx,0x4(%eax)
81001ee8:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001eeb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001eee:	01 c2                	add    %eax,%edx
81001ef0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ef3:	89 02                	mov    %eax,(%edx)
81001ef5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001ef9:	0f 85 b7 01 00 00    	jne    810020b6 <_free_r+0x3c5>
81001eff:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001f06:	77 7f                	ja     81001f87 <_free_r+0x296>
81001f08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f0b:	c1 e8 03             	shr    $0x3,%eax
81001f0e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001f11:	b8 80 91 00 81       	mov    $0x81009180,%eax
81001f16:	8b 58 04             	mov    0x4(%eax),%ebx
81001f19:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f1c:	8d 50 03             	lea    0x3(%eax),%edx
81001f1f:	85 c0                	test   %eax,%eax
81001f21:	0f 48 c2             	cmovs  %edx,%eax
81001f24:	c1 f8 02             	sar    $0x2,%eax
81001f27:	ba 01 00 00 00       	mov    $0x1,%edx
81001f2c:	89 c1                	mov    %eax,%ecx
81001f2e:	d3 e2                	shl    %cl,%edx
81001f30:	89 d0                	mov    %edx,%eax
81001f32:	ba 80 91 00 81       	mov    $0x81009180,%edx
81001f37:	09 d8                	or     %ebx,%eax
81001f39:	89 42 04             	mov    %eax,0x4(%edx)
81001f3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f3f:	83 c0 01             	add    $0x1,%eax
81001f42:	01 c0                	add    %eax,%eax
81001f44:	c1 e0 02             	shl    $0x2,%eax
81001f47:	05 80 91 00 81       	add    $0x81009180,%eax
81001f4c:	83 e8 08             	sub    $0x8,%eax
81001f4f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f52:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f55:	8b 40 08             	mov    0x8(%eax),%eax
81001f58:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f5e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f61:	89 50 0c             	mov    %edx,0xc(%eax)
81001f64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f67:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f6a:	89 50 08             	mov    %edx,0x8(%eax)
81001f6d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f70:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001f73:	89 50 08             	mov    %edx,0x8(%eax)
81001f76:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f79:	8b 50 08             	mov    0x8(%eax),%edx
81001f7c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f7f:	89 50 0c             	mov    %edx,0xc(%eax)
81001f82:	e9 2f 01 00 00       	jmp    810020b6 <_free_r+0x3c5>
81001f87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f8a:	c1 e8 09             	shr    $0x9,%eax
81001f8d:	85 c0                	test   %eax,%eax
81001f8f:	75 08                	jne    81001f99 <_free_r+0x2a8>
81001f91:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f94:	c1 e8 03             	shr    $0x3,%eax
81001f97:	eb 77                	jmp    81002010 <_free_r+0x31f>
81001f99:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f9c:	c1 e8 09             	shr    $0x9,%eax
81001f9f:	83 f8 04             	cmp    $0x4,%eax
81001fa2:	77 0b                	ja     81001faf <_free_r+0x2be>
81001fa4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fa7:	c1 e8 06             	shr    $0x6,%eax
81001faa:	83 c0 38             	add    $0x38,%eax
81001fad:	eb 61                	jmp    81002010 <_free_r+0x31f>
81001faf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fb2:	c1 e8 09             	shr    $0x9,%eax
81001fb5:	83 f8 14             	cmp    $0x14,%eax
81001fb8:	77 0b                	ja     81001fc5 <_free_r+0x2d4>
81001fba:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fbd:	c1 e8 09             	shr    $0x9,%eax
81001fc0:	83 c0 5b             	add    $0x5b,%eax
81001fc3:	eb 4b                	jmp    81002010 <_free_r+0x31f>
81001fc5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fc8:	c1 e8 09             	shr    $0x9,%eax
81001fcb:	83 f8 54             	cmp    $0x54,%eax
81001fce:	77 0b                	ja     81001fdb <_free_r+0x2ea>
81001fd0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fd3:	c1 e8 0c             	shr    $0xc,%eax
81001fd6:	83 c0 6e             	add    $0x6e,%eax
81001fd9:	eb 35                	jmp    81002010 <_free_r+0x31f>
81001fdb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fde:	c1 e8 09             	shr    $0x9,%eax
81001fe1:	3d 54 01 00 00       	cmp    $0x154,%eax
81001fe6:	77 0b                	ja     81001ff3 <_free_r+0x302>
81001fe8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001feb:	c1 e8 0f             	shr    $0xf,%eax
81001fee:	83 c0 77             	add    $0x77,%eax
81001ff1:	eb 1d                	jmp    81002010 <_free_r+0x31f>
81001ff3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ff6:	c1 e8 09             	shr    $0x9,%eax
81001ff9:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ffe:	77 0b                	ja     8100200b <_free_r+0x31a>
81002000:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002003:	c1 e8 12             	shr    $0x12,%eax
81002006:	83 c0 7c             	add    $0x7c,%eax
81002009:	eb 05                	jmp    81002010 <_free_r+0x31f>
8100200b:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002010:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002013:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002016:	83 c0 01             	add    $0x1,%eax
81002019:	01 c0                	add    %eax,%eax
8100201b:	c1 e0 02             	shl    $0x2,%eax
8100201e:	05 80 91 00 81       	add    $0x81009180,%eax
81002023:	83 e8 08             	sub    $0x8,%eax
81002026:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002029:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100202c:	8b 40 08             	mov    0x8(%eax),%eax
8100202f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002032:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002035:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002038:	75 36                	jne    81002070 <_free_r+0x37f>
8100203a:	b8 80 91 00 81       	mov    $0x81009180,%eax
8100203f:	8b 58 04             	mov    0x4(%eax),%ebx
81002042:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002045:	8d 50 03             	lea    0x3(%eax),%edx
81002048:	85 c0                	test   %eax,%eax
8100204a:	0f 48 c2             	cmovs  %edx,%eax
8100204d:	c1 f8 02             	sar    $0x2,%eax
81002050:	ba 01 00 00 00       	mov    $0x1,%edx
81002055:	89 c1                	mov    %eax,%ecx
81002057:	d3 e2                	shl    %cl,%edx
81002059:	89 d0                	mov    %edx,%eax
8100205b:	ba 80 91 00 81       	mov    $0x81009180,%edx
81002060:	09 d8                	or     %ebx,%eax
81002062:	89 42 04             	mov    %eax,0x4(%edx)
81002065:	eb 28                	jmp    8100208f <_free_r+0x39e>
81002067:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100206a:	8b 40 08             	mov    0x8(%eax),%eax
8100206d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002070:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002073:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002076:	74 0e                	je     81002086 <_free_r+0x395>
81002078:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100207b:	8b 40 04             	mov    0x4(%eax),%eax
8100207e:	83 e0 fc             	and    $0xfffffffc,%eax
81002081:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002084:	72 e1                	jb     81002067 <_free_r+0x376>
81002086:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002089:	8b 40 0c             	mov    0xc(%eax),%eax
8100208c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100208f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002092:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002095:	89 50 0c             	mov    %edx,0xc(%eax)
81002098:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100209b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100209e:	89 50 08             	mov    %edx,0x8(%eax)
810020a1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020a4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810020a7:	89 50 08             	mov    %edx,0x8(%eax)
810020aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020ad:	8b 50 08             	mov    0x8(%eax),%edx
810020b0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810020b3:	89 50 0c             	mov    %edx,0xc(%eax)
810020b6:	83 ec 0c             	sub    $0xc,%esp
810020b9:	ff 75 08             	push   0x8(%ebp)
810020bc:	e8 dd 24 00 00       	call   8100459e <__malloc_unlock>
810020c1:	83 c4 10             	add    $0x10,%esp
810020c4:	eb 01                	jmp    810020c7 <_free_r+0x3d6>
810020c6:	90                   	nop
810020c7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810020ca:	c9                   	leave  
810020cb:	c3                   	ret    

810020cc <_malloc_trim_r>:
810020cc:	55                   	push   %ebp
810020cd:	89 e5                	mov    %esp,%ebp
810020cf:	83 ec 28             	sub    $0x28,%esp
810020d2:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810020d9:	83 ec 0c             	sub    $0xc,%esp
810020dc:	ff 75 08             	push   0x8(%ebp)
810020df:	e8 b4 24 00 00       	call   81004598 <__malloc_lock>
810020e4:	83 c4 10             	add    $0x10,%esp
810020e7:	b8 80 91 00 81       	mov    $0x81009180,%eax
810020ec:	8b 40 08             	mov    0x8(%eax),%eax
810020ef:	8b 40 04             	mov    0x4(%eax),%eax
810020f2:	83 e0 fc             	and    $0xfffffffc,%eax
810020f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020fb:	2b 45 0c             	sub    0xc(%ebp),%eax
810020fe:	89 c2                	mov    %eax,%edx
81002100:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002103:	01 d0                	add    %edx,%eax
81002105:	83 e8 11             	sub    $0x11,%eax
81002108:	ba 00 00 00 00       	mov    $0x0,%edx
8100210d:	f7 75 f4             	divl   -0xc(%ebp)
81002110:	83 e8 01             	sub    $0x1,%eax
81002113:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81002117:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100211a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100211d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002120:	7d 18                	jge    8100213a <_malloc_trim_r+0x6e>
81002122:	83 ec 0c             	sub    $0xc,%esp
81002125:	ff 75 08             	push   0x8(%ebp)
81002128:	e8 71 24 00 00       	call   8100459e <__malloc_unlock>
8100212d:	83 c4 10             	add    $0x10,%esp
81002130:	b8 00 00 00 00       	mov    $0x0,%eax
81002135:	e9 f1 00 00 00       	jmp    8100222b <_malloc_trim_r+0x15f>
8100213a:	83 ec 08             	sub    $0x8,%esp
8100213d:	6a 00                	push   $0x0
8100213f:	ff 75 08             	push   0x8(%ebp)
81002142:	e8 0b 35 00 00       	call   81005652 <_sbrk_r>
81002147:	83 c4 10             	add    $0x10,%esp
8100214a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100214d:	b8 80 91 00 81       	mov    $0x81009180,%eax
81002152:	8b 50 08             	mov    0x8(%eax),%edx
81002155:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002158:	01 d0                	add    %edx,%eax
8100215a:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100215d:	74 18                	je     81002177 <_malloc_trim_r+0xab>
8100215f:	83 ec 0c             	sub    $0xc,%esp
81002162:	ff 75 08             	push   0x8(%ebp)
81002165:	e8 34 24 00 00       	call   8100459e <__malloc_unlock>
8100216a:	83 c4 10             	add    $0x10,%esp
8100216d:	b8 00 00 00 00       	mov    $0x0,%eax
81002172:	e9 b4 00 00 00       	jmp    8100222b <_malloc_trim_r+0x15f>
81002177:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100217a:	f7 d8                	neg    %eax
8100217c:	83 ec 08             	sub    $0x8,%esp
8100217f:	50                   	push   %eax
81002180:	ff 75 08             	push   0x8(%ebp)
81002183:	e8 ca 34 00 00       	call   81005652 <_sbrk_r>
81002188:	83 c4 10             	add    $0x10,%esp
8100218b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100218e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002192:	75 61                	jne    810021f5 <_malloc_trim_r+0x129>
81002194:	83 ec 08             	sub    $0x8,%esp
81002197:	6a 00                	push   $0x0
81002199:	ff 75 08             	push   0x8(%ebp)
8100219c:	e8 b1 34 00 00       	call   81005652 <_sbrk_r>
810021a1:	83 c4 10             	add    $0x10,%esp
810021a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021a7:	b8 80 91 00 81       	mov    $0x81009180,%eax
810021ac:	8b 50 08             	mov    0x8(%eax),%edx
810021af:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021b2:	29 d0                	sub    %edx,%eax
810021b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810021b7:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810021bb:	7e 23                	jle    810021e0 <_malloc_trim_r+0x114>
810021bd:	8b 15 8c 95 00 81    	mov    0x8100958c,%edx
810021c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021c6:	29 d0                	sub    %edx,%eax
810021c8:	a3 80 9e 00 81       	mov    %eax,0x81009e80
810021cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021d0:	83 c8 01             	or     $0x1,%eax
810021d3:	89 c2                	mov    %eax,%edx
810021d5:	b8 80 91 00 81       	mov    $0x81009180,%eax
810021da:	8b 40 08             	mov    0x8(%eax),%eax
810021dd:	89 50 04             	mov    %edx,0x4(%eax)
810021e0:	83 ec 0c             	sub    $0xc,%esp
810021e3:	ff 75 08             	push   0x8(%ebp)
810021e6:	e8 b3 23 00 00       	call   8100459e <__malloc_unlock>
810021eb:	83 c4 10             	add    $0x10,%esp
810021ee:	b8 00 00 00 00       	mov    $0x0,%eax
810021f3:	eb 36                	jmp    8100222b <_malloc_trim_r+0x15f>
810021f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021f8:	2b 45 ec             	sub    -0x14(%ebp),%eax
810021fb:	83 c8 01             	or     $0x1,%eax
810021fe:	89 c2                	mov    %eax,%edx
81002200:	b8 80 91 00 81       	mov    $0x81009180,%eax
81002205:	8b 40 08             	mov    0x8(%eax),%eax
81002208:	89 50 04             	mov    %edx,0x4(%eax)
8100220b:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81002210:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002213:	a3 80 9e 00 81       	mov    %eax,0x81009e80
81002218:	83 ec 0c             	sub    $0xc,%esp
8100221b:	ff 75 08             	push   0x8(%ebp)
8100221e:	e8 7b 23 00 00       	call   8100459e <__malloc_unlock>
81002223:	83 c4 10             	add    $0x10,%esp
81002226:	b8 01 00 00 00       	mov    $0x1,%eax
8100222b:	c9                   	leave  
8100222c:	c3                   	ret    

8100222d <_fseek_r>:
8100222d:	55                   	push   %ebp
8100222e:	89 e5                	mov    %esp,%ebp
81002230:	83 ec 08             	sub    $0x8,%esp
81002233:	8b 45 0c             	mov    0xc(%ebp),%eax
81002236:	ff 75 14             	push   0x14(%ebp)
81002239:	ff 75 10             	push   0x10(%ebp)
8100223c:	50                   	push   %eax
8100223d:	ff 75 08             	push   0x8(%ebp)
81002240:	e8 25 00 00 00       	call   8100226a <_fseeko_r>
81002245:	83 c4 10             	add    $0x10,%esp
81002248:	c9                   	leave  
81002249:	c3                   	ret    

8100224a <fseek>:
8100224a:	55                   	push   %ebp
8100224b:	89 e5                	mov    %esp,%ebp
8100224d:	83 ec 08             	sub    $0x8,%esp
81002250:	8b 55 08             	mov    0x8(%ebp),%edx
81002253:	a1 64 91 00 81       	mov    0x81009164,%eax
81002258:	ff 75 10             	push   0x10(%ebp)
8100225b:	ff 75 0c             	push   0xc(%ebp)
8100225e:	52                   	push   %edx
8100225f:	50                   	push   %eax
81002260:	e8 c8 ff ff ff       	call   8100222d <_fseek_r>
81002265:	83 c4 10             	add    $0x10,%esp
81002268:	c9                   	leave  
81002269:	c3                   	ret    

8100226a <_fseeko_r>:
8100226a:	55                   	push   %ebp
8100226b:	89 e5                	mov    %esp,%ebp
8100226d:	56                   	push   %esi
8100226e:	53                   	push   %ebx
8100226f:	83 ec 60             	sub    $0x60,%esp
81002272:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002275:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100227c:	8b 45 08             	mov    0x8(%ebp),%eax
8100227f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002282:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002286:	74 18                	je     810022a0 <_fseeko_r+0x36>
81002288:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100228b:	8b 40 38             	mov    0x38(%eax),%eax
8100228e:	85 c0                	test   %eax,%eax
81002290:	75 0e                	jne    810022a0 <_fseeko_r+0x36>
81002292:	83 ec 0c             	sub    $0xc,%esp
81002295:	ff 75 e4             	push   -0x1c(%ebp)
81002298:	e8 64 f5 ff ff       	call   81001801 <__sinit>
8100229d:	83 c4 10             	add    $0x10,%esp
810022a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022a4:	98                   	cwtl   
810022a5:	25 00 01 00 00       	and    $0x100,%eax
810022aa:	85 c0                	test   %eax,%eax
810022ac:	74 1b                	je     810022c9 <_fseeko_r+0x5f>
810022ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022b2:	98                   	cwtl   
810022b3:	83 e0 08             	and    $0x8,%eax
810022b6:	85 c0                	test   %eax,%eax
810022b8:	74 0f                	je     810022c9 <_fseeko_r+0x5f>
810022ba:	83 ec 08             	sub    $0x8,%esp
810022bd:	53                   	push   %ebx
810022be:	ff 75 08             	push   0x8(%ebp)
810022c1:	e8 38 f0 ff ff       	call   810012fe <_fflush_r>
810022c6:	83 c4 10             	add    $0x10,%esp
810022c9:	8b 43 28             	mov    0x28(%ebx),%eax
810022cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
810022cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810022d3:	75 13                	jne    810022e8 <_fseeko_r+0x7e>
810022d5:	8b 45 08             	mov    0x8(%ebp),%eax
810022d8:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
810022de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022e3:	e9 2c 04 00 00       	jmp    81002714 <_fseeko_r+0x4aa>
810022e8:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
810022ec:	0f 84 bc 00 00 00    	je     810023ae <_fseeko_r+0x144>
810022f2:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
810022f6:	0f 8f bb 00 00 00    	jg     810023b7 <_fseeko_r+0x14d>
810022fc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002300:	0f 84 a8 00 00 00    	je     810023ae <_fseeko_r+0x144>
81002306:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
8100230a:	0f 85 a7 00 00 00    	jne    810023b7 <_fseeko_r+0x14d>
81002310:	83 ec 08             	sub    $0x8,%esp
81002313:	53                   	push   %ebx
81002314:	ff 75 08             	push   0x8(%ebp)
81002317:	e8 e2 ef ff ff       	call   810012fe <_fflush_r>
8100231c:	83 c4 10             	add    $0x10,%esp
8100231f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002323:	98                   	cwtl   
81002324:	25 00 10 00 00       	and    $0x1000,%eax
81002329:	85 c0                	test   %eax,%eax
8100232b:	74 08                	je     81002335 <_fseeko_r+0xcb>
8100232d:	8b 43 50             	mov    0x50(%ebx),%eax
81002330:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002333:	eb 26                	jmp    8100235b <_fseeko_r+0xf1>
81002335:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002338:	6a 01                	push   $0x1
8100233a:	6a 00                	push   $0x0
8100233c:	50                   	push   %eax
8100233d:	ff 75 08             	push   0x8(%ebp)
81002340:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002343:	ff d0                	call   *%eax
81002345:	83 c4 10             	add    $0x10,%esp
81002348:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100234b:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100234f:	75 0a                	jne    8100235b <_fseeko_r+0xf1>
81002351:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002356:	e9 b9 03 00 00       	jmp    81002714 <_fseeko_r+0x4aa>
8100235b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100235f:	98                   	cwtl   
81002360:	83 e0 04             	and    $0x4,%eax
81002363:	85 c0                	test   %eax,%eax
81002365:	74 15                	je     8100237c <_fseeko_r+0x112>
81002367:	8b 43 04             	mov    0x4(%ebx),%eax
8100236a:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100236d:	8b 43 30             	mov    0x30(%ebx),%eax
81002370:	85 c0                	test   %eax,%eax
81002372:	74 24                	je     81002398 <_fseeko_r+0x12e>
81002374:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002377:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100237a:	eb 1c                	jmp    81002398 <_fseeko_r+0x12e>
8100237c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002380:	98                   	cwtl   
81002381:	83 e0 08             	and    $0x8,%eax
81002384:	85 c0                	test   %eax,%eax
81002386:	74 10                	je     81002398 <_fseeko_r+0x12e>
81002388:	8b 03                	mov    (%ebx),%eax
8100238a:	85 c0                	test   %eax,%eax
8100238c:	74 0a                	je     81002398 <_fseeko_r+0x12e>
8100238e:	8b 03                	mov    (%ebx),%eax
81002390:	8b 53 10             	mov    0x10(%ebx),%edx
81002393:	29 d0                	sub    %edx,%eax
81002395:	01 45 f0             	add    %eax,-0x10(%ebp)
81002398:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100239b:	01 45 10             	add    %eax,0x10(%ebp)
8100239e:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
810023a5:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810023ac:	eb 1c                	jmp    810023ca <_fseeko_r+0x160>
810023ae:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810023b5:	eb 13                	jmp    810023ca <_fseeko_r+0x160>
810023b7:	8b 45 08             	mov    0x8(%ebp),%eax
810023ba:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810023c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810023c5:	e9 4a 03 00 00       	jmp    81002714 <_fseeko_r+0x4aa>
810023ca:	8b 43 10             	mov    0x10(%ebx),%eax
810023cd:	85 c0                	test   %eax,%eax
810023cf:	75 0f                	jne    810023e0 <_fseeko_r+0x176>
810023d1:	83 ec 08             	sub    $0x8,%esp
810023d4:	53                   	push   %ebx
810023d5:	ff 75 08             	push   0x8(%ebp)
810023d8:	e8 8b 13 00 00       	call   81003768 <__smakebuf_r>
810023dd:	83 c4 10             	add    $0x10,%esp
810023e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023e4:	98                   	cwtl   
810023e5:	25 1a 08 00 00       	and    $0x81a,%eax
810023ea:	85 c0                	test   %eax,%eax
810023ec:	0f 85 7d 02 00 00    	jne    8100266f <_fseeko_r+0x405>
810023f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023f6:	98                   	cwtl   
810023f7:	25 00 04 00 00       	and    $0x400,%eax
810023fc:	85 c0                	test   %eax,%eax
810023fe:	75 5f                	jne    8100245f <_fseeko_r+0x1f5>
81002400:	81 7d e0 f4 59 00 81 	cmpl   $0x810059f4,-0x20(%ebp)
81002407:	75 34                	jne    8100243d <_fseeko_r+0x1d3>
81002409:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100240d:	66 85 c0             	test   %ax,%ax
81002410:	78 2b                	js     8100243d <_fseeko_r+0x1d3>
81002412:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002416:	98                   	cwtl   
81002417:	83 ec 04             	sub    $0x4,%esp
8100241a:	8d 55 98             	lea    -0x68(%ebp),%edx
8100241d:	52                   	push   %edx
8100241e:	50                   	push   %eax
8100241f:	ff 75 08             	push   0x8(%ebp)
81002422:	e8 14 03 00 00       	call   8100273b <_fstat_r>
81002427:	83 c4 10             	add    $0x10,%esp
8100242a:	85 c0                	test   %eax,%eax
8100242c:	75 0f                	jne    8100243d <_fseeko_r+0x1d3>
8100242e:	8b 45 9c             	mov    -0x64(%ebp),%eax
81002431:	25 00 f0 00 00       	and    $0xf000,%eax
81002436:	3d 00 80 00 00       	cmp    $0x8000,%eax
8100243b:	74 10                	je     8100244d <_fseeko_r+0x1e3>
8100243d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002441:	80 cc 08             	or     $0x8,%ah
81002444:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002448:	e9 2f 02 00 00       	jmp    8100267c <_fseeko_r+0x412>
8100244d:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81002454:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002458:	80 cc 04             	or     $0x4,%ah
8100245b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100245f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002463:	75 08                	jne    8100246d <_fseeko_r+0x203>
81002465:	8b 45 10             	mov    0x10(%ebp),%eax
81002468:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100246b:	eb 2b                	jmp    81002498 <_fseeko_r+0x22e>
8100246d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002471:	98                   	cwtl   
81002472:	83 ec 04             	sub    $0x4,%esp
81002475:	8d 55 98             	lea    -0x68(%ebp),%edx
81002478:	52                   	push   %edx
81002479:	50                   	push   %eax
8100247a:	ff 75 08             	push   0x8(%ebp)
8100247d:	e8 b9 02 00 00       	call   8100273b <_fstat_r>
81002482:	83 c4 10             	add    $0x10,%esp
81002485:	85 c0                	test   %eax,%eax
81002487:	0f 85 e5 01 00 00    	jne    81002672 <_fseeko_r+0x408>
8100248d:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002490:	8b 45 10             	mov    0x10(%ebp),%eax
81002493:	01 d0                	add    %edx,%eax
81002495:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002498:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100249c:	75 49                	jne    810024e7 <_fseeko_r+0x27d>
8100249e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024a2:	98                   	cwtl   
810024a3:	25 00 10 00 00       	and    $0x1000,%eax
810024a8:	85 c0                	test   %eax,%eax
810024aa:	74 08                	je     810024b4 <_fseeko_r+0x24a>
810024ac:	8b 43 50             	mov    0x50(%ebx),%eax
810024af:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024b2:	eb 20                	jmp    810024d4 <_fseeko_r+0x26a>
810024b4:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024b7:	6a 01                	push   $0x1
810024b9:	6a 00                	push   $0x0
810024bb:	50                   	push   %eax
810024bc:	ff 75 08             	push   0x8(%ebp)
810024bf:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024c2:	ff d0                	call   *%eax
810024c4:	83 c4 10             	add    $0x10,%esp
810024c7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024ca:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810024ce:	0f 84 a1 01 00 00    	je     81002675 <_fseeko_r+0x40b>
810024d4:	8b 43 04             	mov    0x4(%ebx),%eax
810024d7:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024da:	8b 43 30             	mov    0x30(%ebx),%eax
810024dd:	85 c0                	test   %eax,%eax
810024df:	74 06                	je     810024e7 <_fseeko_r+0x27d>
810024e1:	8b 43 3c             	mov    0x3c(%ebx),%eax
810024e4:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024e7:	8b 43 30             	mov    0x30(%ebx),%eax
810024ea:	85 c0                	test   %eax,%eax
810024ec:	74 22                	je     81002510 <_fseeko_r+0x2a6>
810024ee:	8b 43 04             	mov    0x4(%ebx),%eax
810024f1:	01 45 f0             	add    %eax,-0x10(%ebp)
810024f4:	8b 43 38             	mov    0x38(%ebx),%eax
810024f7:	8b 53 10             	mov    0x10(%ebx),%edx
810024fa:	29 d0                	sub    %edx,%eax
810024fc:	89 45 ec             	mov    %eax,-0x14(%ebp)
810024ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002502:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002505:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002508:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100250b:	01 45 ec             	add    %eax,-0x14(%ebp)
8100250e:	eb 19                	jmp    81002529 <_fseeko_r+0x2bf>
81002510:	8b 03                	mov    (%ebx),%eax
81002512:	8b 53 10             	mov    0x10(%ebx),%edx
81002515:	29 d0                	sub    %edx,%eax
81002517:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100251a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100251d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002520:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002523:	8b 43 04             	mov    0x4(%ebx),%eax
81002526:	01 45 ec             	add    %eax,-0x14(%ebp)
81002529:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100252c:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100252f:	7c 7c                	jl     810025ad <_fseeko_r+0x343>
81002531:	8b 55 f0             	mov    -0x10(%ebp),%edx
81002534:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002537:	01 c2                	add    %eax,%edx
81002539:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100253c:	39 c2                	cmp    %eax,%edx
8100253e:	76 6d                	jbe    810025ad <_fseeko_r+0x343>
81002540:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002543:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002546:	89 c6                	mov    %eax,%esi
81002548:	8b 43 10             	mov    0x10(%ebx),%eax
8100254b:	89 f2                	mov    %esi,%edx
8100254d:	01 d0                	add    %edx,%eax
8100254f:	89 03                	mov    %eax,(%ebx)
81002551:	89 f2                	mov    %esi,%edx
81002553:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002556:	29 d0                	sub    %edx,%eax
81002558:	89 43 04             	mov    %eax,0x4(%ebx)
8100255b:	8b 43 30             	mov    0x30(%ebx),%eax
8100255e:	85 c0                	test   %eax,%eax
81002560:	74 23                	je     81002585 <_fseeko_r+0x31b>
81002562:	8b 53 30             	mov    0x30(%ebx),%edx
81002565:	8d 43 40             	lea    0x40(%ebx),%eax
81002568:	39 c2                	cmp    %eax,%edx
8100256a:	74 12                	je     8100257e <_fseeko_r+0x314>
8100256c:	8b 43 30             	mov    0x30(%ebx),%eax
8100256f:	83 ec 08             	sub    $0x8,%esp
81002572:	50                   	push   %eax
81002573:	ff 75 08             	push   0x8(%ebp)
81002576:	e8 76 f7 ff ff       	call   81001cf1 <_free_r>
8100257b:	83 c4 10             	add    $0x10,%esp
8100257e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002585:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002589:	83 e0 df             	and    $0xffffffdf,%eax
8100258c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002590:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002593:	83 ec 04             	sub    $0x4,%esp
81002596:	6a 08                	push   $0x8
81002598:	6a 00                	push   $0x0
8100259a:	50                   	push   %eax
8100259b:	e8 70 1f 00 00       	call   81004510 <memset>
810025a0:	83 c4 10             	add    $0x10,%esp
810025a3:	b8 00 00 00 00       	mov    $0x0,%eax
810025a8:	e9 67 01 00 00       	jmp    81002714 <_fseeko_r+0x4aa>
810025ad:	8b 43 4c             	mov    0x4c(%ebx),%eax
810025b0:	f7 d8                	neg    %eax
810025b2:	23 45 f4             	and    -0xc(%ebp),%eax
810025b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810025b8:	8b 43 1c             	mov    0x1c(%ebx),%eax
810025bb:	6a 00                	push   $0x0
810025bd:	ff 75 f0             	push   -0x10(%ebp)
810025c0:	50                   	push   %eax
810025c1:	ff 75 08             	push   0x8(%ebp)
810025c4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025c7:	ff d0                	call   *%eax
810025c9:	83 c4 10             	add    $0x10,%esp
810025cc:	83 f8 ff             	cmp    $0xffffffff,%eax
810025cf:	0f 84 a3 00 00 00    	je     81002678 <_fseeko_r+0x40e>
810025d5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810025dc:	8b 43 10             	mov    0x10(%ebx),%eax
810025df:	89 03                	mov    %eax,(%ebx)
810025e1:	8b 43 30             	mov    0x30(%ebx),%eax
810025e4:	85 c0                	test   %eax,%eax
810025e6:	74 23                	je     8100260b <_fseeko_r+0x3a1>
810025e8:	8b 53 30             	mov    0x30(%ebx),%edx
810025eb:	8d 43 40             	lea    0x40(%ebx),%eax
810025ee:	39 c2                	cmp    %eax,%edx
810025f0:	74 12                	je     81002604 <_fseeko_r+0x39a>
810025f2:	8b 43 30             	mov    0x30(%ebx),%eax
810025f5:	83 ec 08             	sub    $0x8,%esp
810025f8:	50                   	push   %eax
810025f9:	ff 75 08             	push   0x8(%ebp)
810025fc:	e8 f0 f6 ff ff       	call   81001cf1 <_free_r>
81002601:	83 c4 10             	add    $0x10,%esp
81002604:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100260b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100260f:	83 e0 df             	and    $0xffffffdf,%eax
81002612:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002616:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002619:	2b 45 f0             	sub    -0x10(%ebp),%eax
8100261c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100261f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002623:	74 2d                	je     81002652 <_fseeko_r+0x3e8>
81002625:	83 ec 08             	sub    $0x8,%esp
81002628:	53                   	push   %ebx
81002629:	ff 75 08             	push   0x8(%ebp)
8100262c:	e8 20 2e 00 00       	call   81005451 <__srefill_r>
81002631:	83 c4 10             	add    $0x10,%esp
81002634:	85 c0                	test   %eax,%eax
81002636:	75 43                	jne    8100267b <_fseeko_r+0x411>
81002638:	8b 43 04             	mov    0x4(%ebx),%eax
8100263b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100263e:	77 3b                	ja     8100267b <_fseeko_r+0x411>
81002640:	8b 13                	mov    (%ebx),%edx
81002642:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002645:	01 d0                	add    %edx,%eax
81002647:	89 03                	mov    %eax,(%ebx)
81002649:	8b 43 04             	mov    0x4(%ebx),%eax
8100264c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100264f:	89 43 04             	mov    %eax,0x4(%ebx)
81002652:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002655:	83 ec 04             	sub    $0x4,%esp
81002658:	6a 08                	push   $0x8
8100265a:	6a 00                	push   $0x0
8100265c:	50                   	push   %eax
8100265d:	e8 ae 1e 00 00       	call   81004510 <memset>
81002662:	83 c4 10             	add    $0x10,%esp
81002665:	b8 00 00 00 00       	mov    $0x0,%eax
8100266a:	e9 a5 00 00 00       	jmp    81002714 <_fseeko_r+0x4aa>
8100266f:	90                   	nop
81002670:	eb 0a                	jmp    8100267c <_fseeko_r+0x412>
81002672:	90                   	nop
81002673:	eb 07                	jmp    8100267c <_fseeko_r+0x412>
81002675:	90                   	nop
81002676:	eb 04                	jmp    8100267c <_fseeko_r+0x412>
81002678:	90                   	nop
81002679:	eb 01                	jmp    8100267c <_fseeko_r+0x412>
8100267b:	90                   	nop
8100267c:	83 ec 08             	sub    $0x8,%esp
8100267f:	53                   	push   %ebx
81002680:	ff 75 08             	push   0x8(%ebp)
81002683:	e8 76 ec ff ff       	call   810012fe <_fflush_r>
81002688:	83 c4 10             	add    $0x10,%esp
8100268b:	85 c0                	test   %eax,%eax
8100268d:	75 1a                	jne    810026a9 <_fseeko_r+0x43f>
8100268f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002692:	ff 75 14             	push   0x14(%ebp)
81002695:	ff 75 10             	push   0x10(%ebp)
81002698:	50                   	push   %eax
81002699:	ff 75 08             	push   0x8(%ebp)
8100269c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100269f:	ff d0                	call   *%eax
810026a1:	83 c4 10             	add    $0x10,%esp
810026a4:	83 f8 ff             	cmp    $0xffffffff,%eax
810026a7:	75 07                	jne    810026b0 <_fseeko_r+0x446>
810026a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026ae:	eb 64                	jmp    81002714 <_fseeko_r+0x4aa>
810026b0:	8b 43 30             	mov    0x30(%ebx),%eax
810026b3:	85 c0                	test   %eax,%eax
810026b5:	74 23                	je     810026da <_fseeko_r+0x470>
810026b7:	8b 53 30             	mov    0x30(%ebx),%edx
810026ba:	8d 43 40             	lea    0x40(%ebx),%eax
810026bd:	39 c2                	cmp    %eax,%edx
810026bf:	74 12                	je     810026d3 <_fseeko_r+0x469>
810026c1:	8b 43 30             	mov    0x30(%ebx),%eax
810026c4:	83 ec 08             	sub    $0x8,%esp
810026c7:	50                   	push   %eax
810026c8:	ff 75 08             	push   0x8(%ebp)
810026cb:	e8 21 f6 ff ff       	call   81001cf1 <_free_r>
810026d0:	83 c4 10             	add    $0x10,%esp
810026d3:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810026da:	8b 43 10             	mov    0x10(%ebx),%eax
810026dd:	89 03                	mov    %eax,(%ebx)
810026df:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810026e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026ea:	83 e0 df             	and    $0xffffffdf,%eax
810026ed:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026f5:	80 e4 f7             	and    $0xf7,%ah
810026f8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026fc:	8d 43 5c             	lea    0x5c(%ebx),%eax
810026ff:	83 ec 04             	sub    $0x4,%esp
81002702:	6a 08                	push   $0x8
81002704:	6a 00                	push   $0x0
81002706:	50                   	push   %eax
81002707:	e8 04 1e 00 00       	call   81004510 <memset>
8100270c:	83 c4 10             	add    $0x10,%esp
8100270f:	b8 00 00 00 00       	mov    $0x0,%eax
81002714:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002717:	5b                   	pop    %ebx
81002718:	5e                   	pop    %esi
81002719:	5d                   	pop    %ebp
8100271a:	c3                   	ret    

8100271b <fseeko>:
8100271b:	55                   	push   %ebp
8100271c:	89 e5                	mov    %esp,%ebp
8100271e:	83 ec 08             	sub    $0x8,%esp
81002721:	8b 55 08             	mov    0x8(%ebp),%edx
81002724:	a1 64 91 00 81       	mov    0x81009164,%eax
81002729:	ff 75 10             	push   0x10(%ebp)
8100272c:	ff 75 0c             	push   0xc(%ebp)
8100272f:	52                   	push   %edx
81002730:	50                   	push   %eax
81002731:	e8 34 fb ff ff       	call   8100226a <_fseeko_r>
81002736:	83 c4 10             	add    $0x10,%esp
81002739:	c9                   	leave  
8100273a:	c3                   	ret    

8100273b <_fstat_r>:
8100273b:	55                   	push   %ebp
8100273c:	89 e5                	mov    %esp,%ebp
8100273e:	83 ec 18             	sub    $0x18,%esp
81002741:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
81002748:	00 00 00 
8100274b:	83 ec 08             	sub    $0x8,%esp
8100274e:	ff 75 10             	push   0x10(%ebp)
81002751:	ff 75 0c             	push   0xc(%ebp)
81002754:	e8 fa e5 ff ff       	call   81000d53 <fstat>
81002759:	83 c4 10             	add    $0x10,%esp
8100275c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100275f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002763:	75 14                	jne    81002779 <_fstat_r+0x3e>
81002765:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
8100276a:	85 c0                	test   %eax,%eax
8100276c:	74 0b                	je     81002779 <_fstat_r+0x3e>
8100276e:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
81002774:	8b 45 08             	mov    0x8(%ebp),%eax
81002777:	89 10                	mov    %edx,(%eax)
81002779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100277c:	c9                   	leave  
8100277d:	c3                   	ret    

8100277e <_fwalk>:
8100277e:	55                   	push   %ebp
8100277f:	89 e5                	mov    %esp,%ebp
81002781:	57                   	push   %edi
81002782:	56                   	push   %esi
81002783:	53                   	push   %ebx
81002784:	83 ec 1c             	sub    $0x1c,%esp
81002787:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100278e:	8b 45 08             	mov    0x8(%ebp),%eax
81002791:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002797:	eb 3e                	jmp    810027d7 <_fwalk+0x59>
81002799:	8b 5e 08             	mov    0x8(%esi),%ebx
8100279c:	8b 7e 04             	mov    0x4(%esi),%edi
8100279f:	eb 2d                	jmp    810027ce <_fwalk+0x50>
810027a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a5:	66 85 c0             	test   %ax,%ax
810027a8:	74 21                	je     810027cb <_fwalk+0x4d>
810027aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027ae:	66 83 f8 01          	cmp    $0x1,%ax
810027b2:	74 17                	je     810027cb <_fwalk+0x4d>
810027b4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027b8:	66 83 f8 ff          	cmp    $0xffff,%ax
810027bc:	74 0d                	je     810027cb <_fwalk+0x4d>
810027be:	83 ec 0c             	sub    $0xc,%esp
810027c1:	53                   	push   %ebx
810027c2:	ff 55 0c             	call   *0xc(%ebp)
810027c5:	83 c4 10             	add    $0x10,%esp
810027c8:	09 45 e4             	or     %eax,-0x1c(%ebp)
810027cb:	83 c3 68             	add    $0x68,%ebx
810027ce:	83 ef 01             	sub    $0x1,%edi
810027d1:	85 ff                	test   %edi,%edi
810027d3:	79 cc                	jns    810027a1 <_fwalk+0x23>
810027d5:	8b 36                	mov    (%esi),%esi
810027d7:	85 f6                	test   %esi,%esi
810027d9:	75 be                	jne    81002799 <_fwalk+0x1b>
810027db:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810027de:	8d 65 f4             	lea    -0xc(%ebp),%esp
810027e1:	5b                   	pop    %ebx
810027e2:	5e                   	pop    %esi
810027e3:	5f                   	pop    %edi
810027e4:	5d                   	pop    %ebp
810027e5:	c3                   	ret    

810027e6 <_fwalk_reent>:
810027e6:	55                   	push   %ebp
810027e7:	89 e5                	mov    %esp,%ebp
810027e9:	57                   	push   %edi
810027ea:	56                   	push   %esi
810027eb:	53                   	push   %ebx
810027ec:	83 ec 1c             	sub    $0x1c,%esp
810027ef:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810027f6:	8b 45 08             	mov    0x8(%ebp),%eax
810027f9:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810027ff:	eb 41                	jmp    81002842 <_fwalk_reent+0x5c>
81002801:	8b 5e 08             	mov    0x8(%esi),%ebx
81002804:	8b 7e 04             	mov    0x4(%esi),%edi
81002807:	eb 30                	jmp    81002839 <_fwalk_reent+0x53>
81002809:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100280d:	66 85 c0             	test   %ax,%ax
81002810:	74 24                	je     81002836 <_fwalk_reent+0x50>
81002812:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002816:	66 83 f8 01          	cmp    $0x1,%ax
8100281a:	74 1a                	je     81002836 <_fwalk_reent+0x50>
8100281c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002820:	66 83 f8 ff          	cmp    $0xffff,%ax
81002824:	74 10                	je     81002836 <_fwalk_reent+0x50>
81002826:	83 ec 08             	sub    $0x8,%esp
81002829:	53                   	push   %ebx
8100282a:	ff 75 08             	push   0x8(%ebp)
8100282d:	ff 55 0c             	call   *0xc(%ebp)
81002830:	83 c4 10             	add    $0x10,%esp
81002833:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002836:	83 c3 68             	add    $0x68,%ebx
81002839:	83 ef 01             	sub    $0x1,%edi
8100283c:	85 ff                	test   %edi,%edi
8100283e:	79 c9                	jns    81002809 <_fwalk_reent+0x23>
81002840:	8b 36                	mov    (%esi),%esi
81002842:	85 f6                	test   %esi,%esi
81002844:	75 bb                	jne    81002801 <_fwalk_reent+0x1b>
81002846:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002849:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100284c:	5b                   	pop    %ebx
8100284d:	5e                   	pop    %esi
8100284e:	5f                   	pop    %edi
8100284f:	5d                   	pop    %ebp
81002850:	c3                   	ret    

81002851 <_fwrite_r>:
81002851:	55                   	push   %ebp
81002852:	89 e5                	mov    %esp,%ebp
81002854:	83 ec 28             	sub    $0x28,%esp
81002857:	8b 45 0c             	mov    0xc(%ebp),%eax
8100285a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100285d:	8b 45 14             	mov    0x14(%ebp),%eax
81002860:	0f af 45 10          	imul   0x10(%ebp),%eax
81002864:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002867:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100286a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100286d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002870:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002873:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002876:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002879:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002880:	8b 45 08             	mov    0x8(%ebp),%eax
81002883:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002886:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100288a:	74 18                	je     810028a4 <_fwrite_r+0x53>
8100288c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100288f:	8b 40 38             	mov    0x38(%eax),%eax
81002892:	85 c0                	test   %eax,%eax
81002894:	75 0e                	jne    810028a4 <_fwrite_r+0x53>
81002896:	83 ec 0c             	sub    $0xc,%esp
81002899:	ff 75 f0             	push   -0x10(%ebp)
8100289c:	e8 60 ef ff ff       	call   81001801 <__sinit>
810028a1:	83 c4 10             	add    $0x10,%esp
810028a4:	8b 45 18             	mov    0x18(%ebp),%eax
810028a7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810028ab:	98                   	cwtl   
810028ac:	25 00 20 00 00       	and    $0x2000,%eax
810028b1:	85 c0                	test   %eax,%eax
810028b3:	75 24                	jne    810028d9 <_fwrite_r+0x88>
810028b5:	8b 45 18             	mov    0x18(%ebp),%eax
810028b8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810028bc:	80 cc 20             	or     $0x20,%ah
810028bf:	89 c2                	mov    %eax,%edx
810028c1:	8b 45 18             	mov    0x18(%ebp),%eax
810028c4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810028c8:	8b 45 18             	mov    0x18(%ebp),%eax
810028cb:	8b 40 64             	mov    0x64(%eax),%eax
810028ce:	80 e4 df             	and    $0xdf,%ah
810028d1:	89 c2                	mov    %eax,%edx
810028d3:	8b 45 18             	mov    0x18(%ebp),%eax
810028d6:	89 50 64             	mov    %edx,0x64(%eax)
810028d9:	83 ec 04             	sub    $0x4,%esp
810028dc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810028df:	50                   	push   %eax
810028e0:	ff 75 18             	push   0x18(%ebp)
810028e3:	ff 75 08             	push   0x8(%ebp)
810028e6:	e8 0f 3f 00 00       	call   810067fa <__sfvwrite_r>
810028eb:	83 c4 10             	add    $0x10,%esp
810028ee:	85 c0                	test   %eax,%eax
810028f0:	75 05                	jne    810028f7 <_fwrite_r+0xa6>
810028f2:	8b 45 14             	mov    0x14(%ebp),%eax
810028f5:	eb 10                	jmp    81002907 <_fwrite_r+0xb6>
810028f7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810028fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028fd:	29 d0                	sub    %edx,%eax
810028ff:	ba 00 00 00 00       	mov    $0x0,%edx
81002904:	f7 75 10             	divl   0x10(%ebp)
81002907:	c9                   	leave  
81002908:	c3                   	ret    

81002909 <fwrite>:
81002909:	55                   	push   %ebp
8100290a:	89 e5                	mov    %esp,%ebp
8100290c:	83 ec 08             	sub    $0x8,%esp
8100290f:	a1 64 91 00 81       	mov    0x81009164,%eax
81002914:	83 ec 0c             	sub    $0xc,%esp
81002917:	ff 75 14             	push   0x14(%ebp)
8100291a:	ff 75 10             	push   0x10(%ebp)
8100291d:	ff 75 0c             	push   0xc(%ebp)
81002920:	ff 75 08             	push   0x8(%ebp)
81002923:	50                   	push   %eax
81002924:	e8 28 ff ff ff       	call   81002851 <_fwrite_r>
81002929:	83 c4 20             	add    $0x20,%esp
8100292c:	c9                   	leave  
8100292d:	c3                   	ret    

8100292e <_getchar_r>:
8100292e:	55                   	push   %ebp
8100292f:	89 e5                	mov    %esp,%ebp
81002931:	83 ec 08             	sub    $0x8,%esp
81002934:	8b 45 08             	mov    0x8(%ebp),%eax
81002937:	8b 40 04             	mov    0x4(%eax),%eax
8100293a:	83 ec 08             	sub    $0x8,%esp
8100293d:	50                   	push   %eax
8100293e:	ff 75 08             	push   0x8(%ebp)
81002941:	e8 52 43 00 00       	call   81006c98 <_getc_r>
81002946:	83 c4 10             	add    $0x10,%esp
81002949:	c9                   	leave  
8100294a:	c3                   	ret    

8100294b <getchar>:
8100294b:	55                   	push   %ebp
8100294c:	89 e5                	mov    %esp,%ebp
8100294e:	83 ec 18             	sub    $0x18,%esp
81002951:	a1 64 91 00 81       	mov    0x81009164,%eax
81002956:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002959:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100295c:	8b 40 04             	mov    0x4(%eax),%eax
8100295f:	83 ec 08             	sub    $0x8,%esp
81002962:	50                   	push   %eax
81002963:	ff 75 f4             	push   -0xc(%ebp)
81002966:	e8 2d 43 00 00       	call   81006c98 <_getc_r>
8100296b:	83 c4 10             	add    $0x10,%esp
8100296e:	c9                   	leave  
8100296f:	c3                   	ret    

81002970 <reverse_argv_elements>:
81002970:	55                   	push   %ebp
81002971:	89 e5                	mov    %esp,%ebp
81002973:	83 ec 10             	sub    $0x10,%esp
81002976:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100297d:	eb 5e                	jmp    810029dd <reverse_argv_elements+0x6d>
8100297f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002982:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002989:	8b 45 08             	mov    0x8(%ebp),%eax
8100298c:	01 d0                	add    %edx,%eax
8100298e:	8b 00                	mov    (%eax),%eax
81002990:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002993:	8b 45 0c             	mov    0xc(%ebp),%eax
81002996:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002999:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100299e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029a5:	8b 45 08             	mov    0x8(%ebp),%eax
810029a8:	01 d0                	add    %edx,%eax
810029aa:	8b 55 fc             	mov    -0x4(%ebp),%edx
810029ad:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810029b4:	8b 55 08             	mov    0x8(%ebp),%edx
810029b7:	01 ca                	add    %ecx,%edx
810029b9:	8b 00                	mov    (%eax),%eax
810029bb:	89 02                	mov    %eax,(%edx)
810029bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810029c0:	2b 45 fc             	sub    -0x4(%ebp),%eax
810029c3:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810029c8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029cf:	8b 45 08             	mov    0x8(%ebp),%eax
810029d2:	01 c2                	add    %eax,%edx
810029d4:	8b 45 f8             	mov    -0x8(%ebp),%eax
810029d7:	89 02                	mov    %eax,(%edx)
810029d9:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810029dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810029e0:	d1 f8                	sar    %eax
810029e2:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810029e5:	7c 98                	jl     8100297f <reverse_argv_elements+0xf>
810029e7:	90                   	nop
810029e8:	90                   	nop
810029e9:	c9                   	leave  
810029ea:	c3                   	ret    

810029eb <permute>:
810029eb:	55                   	push   %ebp
810029ec:	89 e5                	mov    %esp,%ebp
810029ee:	ff 75 0c             	push   0xc(%ebp)
810029f1:	ff 75 08             	push   0x8(%ebp)
810029f4:	e8 77 ff ff ff       	call   81002970 <reverse_argv_elements>
810029f9:	83 c4 08             	add    $0x8,%esp
810029fc:	8b 55 0c             	mov    0xc(%ebp),%edx
810029ff:	8b 45 10             	mov    0x10(%ebp),%eax
81002a02:	01 d0                	add    %edx,%eax
81002a04:	50                   	push   %eax
81002a05:	ff 75 08             	push   0x8(%ebp)
81002a08:	e8 63 ff ff ff       	call   81002970 <reverse_argv_elements>
81002a0d:	83 c4 08             	add    $0x8,%esp
81002a10:	ff 75 10             	push   0x10(%ebp)
81002a13:	ff 75 08             	push   0x8(%ebp)
81002a16:	e8 55 ff ff ff       	call   81002970 <reverse_argv_elements>
81002a1b:	83 c4 08             	add    $0x8,%esp
81002a1e:	90                   	nop
81002a1f:	c9                   	leave  
81002a20:	c3                   	ret    

81002a21 <is_option>:
81002a21:	55                   	push   %ebp
81002a22:	89 e5                	mov    %esp,%ebp
81002a24:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002a28:	74 1a                	je     81002a44 <is_option+0x23>
81002a2a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a2d:	0f b6 00             	movzbl (%eax),%eax
81002a30:	3c 2d                	cmp    $0x2d,%al
81002a32:	74 10                	je     81002a44 <is_option+0x23>
81002a34:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002a38:	74 11                	je     81002a4b <is_option+0x2a>
81002a3a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a3d:	0f b6 00             	movzbl (%eax),%eax
81002a40:	3c 2b                	cmp    $0x2b,%al
81002a42:	75 07                	jne    81002a4b <is_option+0x2a>
81002a44:	b8 01 00 00 00       	mov    $0x1,%eax
81002a49:	eb 05                	jmp    81002a50 <is_option+0x2f>
81002a4b:	b8 00 00 00 00       	mov    $0x0,%eax
81002a50:	5d                   	pop    %ebp
81002a51:	c3                   	ret    

81002a52 <read_globals>:
81002a52:	55                   	push   %ebp
81002a53:	89 e5                	mov    %esp,%ebp
81002a55:	8b 15 48 9e 00 81    	mov    0x81009e48,%edx
81002a5b:	8b 45 08             	mov    0x8(%ebp),%eax
81002a5e:	89 10                	mov    %edx,(%eax)
81002a60:	8b 15 4c 9e 00 81    	mov    0x81009e4c,%edx
81002a66:	8b 45 08             	mov    0x8(%ebp),%eax
81002a69:	89 50 04             	mov    %edx,0x4(%eax)
81002a6c:	8b 15 24 8d 00 81    	mov    0x81008d24,%edx
81002a72:	8b 45 08             	mov    0x8(%ebp),%eax
81002a75:	89 50 08             	mov    %edx,0x8(%eax)
81002a78:	8b 15 28 8d 00 81    	mov    0x81008d28,%edx
81002a7e:	8b 45 08             	mov    0x8(%ebp),%eax
81002a81:	89 50 0c             	mov    %edx,0xc(%eax)
81002a84:	8b 15 50 9e 00 81    	mov    0x81009e50,%edx
81002a8a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a8d:	89 50 10             	mov    %edx,0x10(%eax)
81002a90:	8b 15 54 9e 00 81    	mov    0x81009e54,%edx
81002a96:	8b 45 08             	mov    0x8(%ebp),%eax
81002a99:	89 50 14             	mov    %edx,0x14(%eax)
81002a9c:	8b 15 58 9e 00 81    	mov    0x81009e58,%edx
81002aa2:	8b 45 08             	mov    0x8(%ebp),%eax
81002aa5:	89 50 18             	mov    %edx,0x18(%eax)
81002aa8:	90                   	nop
81002aa9:	5d                   	pop    %ebp
81002aaa:	c3                   	ret    

81002aab <write_globals>:
81002aab:	55                   	push   %ebp
81002aac:	89 e5                	mov    %esp,%ebp
81002aae:	8b 45 08             	mov    0x8(%ebp),%eax
81002ab1:	8b 00                	mov    (%eax),%eax
81002ab3:	a3 48 9e 00 81       	mov    %eax,0x81009e48
81002ab8:	8b 45 08             	mov    0x8(%ebp),%eax
81002abb:	8b 40 04             	mov    0x4(%eax),%eax
81002abe:	a3 4c 9e 00 81       	mov    %eax,0x81009e4c
81002ac3:	8b 45 08             	mov    0x8(%ebp),%eax
81002ac6:	8b 40 08             	mov    0x8(%eax),%eax
81002ac9:	a3 24 8d 00 81       	mov    %eax,0x81008d24
81002ace:	8b 45 08             	mov    0x8(%ebp),%eax
81002ad1:	8b 40 0c             	mov    0xc(%eax),%eax
81002ad4:	a3 28 8d 00 81       	mov    %eax,0x81008d28
81002ad9:	8b 45 08             	mov    0x8(%ebp),%eax
81002adc:	8b 40 10             	mov    0x10(%eax),%eax
81002adf:	a3 50 9e 00 81       	mov    %eax,0x81009e50
81002ae4:	8b 45 08             	mov    0x8(%ebp),%eax
81002ae7:	8b 40 14             	mov    0x14(%eax),%eax
81002aea:	a3 54 9e 00 81       	mov    %eax,0x81009e54
81002aef:	8b 45 08             	mov    0x8(%ebp),%eax
81002af2:	8b 40 18             	mov    0x18(%eax),%eax
81002af5:	a3 58 9e 00 81       	mov    %eax,0x81009e58
81002afa:	90                   	nop
81002afb:	5d                   	pop    %ebp
81002afc:	c3                   	ret    

81002afd <getopt_internal>:
81002afd:	55                   	push   %ebp
81002afe:	89 e5                	mov    %esp,%ebp
81002b00:	53                   	push   %ebx
81002b01:	83 ec 34             	sub    $0x34,%esp
81002b04:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002b0b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002b12:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002b19:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002b20:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002b27:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002b2e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002b35:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002b3c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002b43:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002b47:	74 35                	je     81002b7e <getopt_internal+0x81>
81002b49:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002b4d:	74 2f                	je     81002b7e <getopt_internal+0x81>
81002b4f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b53:	75 06                	jne    81002b5b <getopt_internal+0x5e>
81002b55:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002b59:	74 23                	je     81002b7e <getopt_internal+0x81>
81002b5b:	8b 45 20             	mov    0x20(%ebp),%eax
81002b5e:	8b 40 04             	mov    0x4(%eax),%eax
81002b61:	39 45 08             	cmp    %eax,0x8(%ebp)
81002b64:	7e 18                	jle    81002b7e <getopt_internal+0x81>
81002b66:	8b 45 20             	mov    0x20(%ebp),%eax
81002b69:	8b 40 04             	mov    0x4(%eax),%eax
81002b6c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002b73:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b76:	01 d0                	add    %edx,%eax
81002b78:	8b 00                	mov    (%eax),%eax
81002b7a:	85 c0                	test   %eax,%eax
81002b7c:	75 0a                	jne    81002b88 <getopt_internal+0x8b>
81002b7e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b83:	e9 85 0a 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002b88:	8b 45 20             	mov    0x20(%ebp),%eax
81002b8b:	8b 40 04             	mov    0x4(%eax),%eax
81002b8e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002b95:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b98:	01 d0                	add    %edx,%eax
81002b9a:	8b 00                	mov    (%eax),%eax
81002b9c:	83 ec 08             	sub    $0x8,%esp
81002b9f:	68 28 89 00 81       	push   $0x81008928
81002ba4:	50                   	push   %eax
81002ba5:	e8 c2 2f 00 00       	call   81005b6c <strcmp>
81002baa:	83 c4 10             	add    $0x10,%esp
81002bad:	85 c0                	test   %eax,%eax
81002baf:	75 19                	jne    81002bca <getopt_internal+0xcd>
81002bb1:	8b 45 20             	mov    0x20(%ebp),%eax
81002bb4:	8b 40 04             	mov    0x4(%eax),%eax
81002bb7:	8d 50 01             	lea    0x1(%eax),%edx
81002bba:	8b 45 20             	mov    0x20(%ebp),%eax
81002bbd:	89 50 04             	mov    %edx,0x4(%eax)
81002bc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002bc5:	e9 43 0a 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002bca:	8b 45 20             	mov    0x20(%ebp),%eax
81002bcd:	8b 40 04             	mov    0x4(%eax),%eax
81002bd0:	85 c0                	test   %eax,%eax
81002bd2:	75 28                	jne    81002bfc <getopt_internal+0xff>
81002bd4:	8b 45 20             	mov    0x20(%ebp),%eax
81002bd7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002bde:	8b 45 20             	mov    0x20(%ebp),%eax
81002be1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002be8:	8b 45 20             	mov    0x20(%ebp),%eax
81002beb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81002bf2:	8b 45 20             	mov    0x20(%ebp),%eax
81002bf5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002bfc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002c00:	74 33                	je     81002c35 <getopt_internal+0x138>
81002c02:	8b 45 10             	mov    0x10(%ebp),%eax
81002c05:	0f b6 00             	movzbl (%eax),%eax
81002c08:	3c 2d                	cmp    $0x2d,%al
81002c0a:	74 0a                	je     81002c16 <getopt_internal+0x119>
81002c0c:	8b 45 10             	mov    0x10(%ebp),%eax
81002c0f:	0f b6 00             	movzbl (%eax),%eax
81002c12:	3c 2b                	cmp    $0x2b,%al
81002c14:	75 1f                	jne    81002c35 <getopt_internal+0x138>
81002c16:	8b 45 10             	mov    0x10(%ebp),%eax
81002c19:	0f b6 00             	movzbl (%eax),%eax
81002c1c:	3c 2d                	cmp    $0x2d,%al
81002c1e:	75 07                	jne    81002c27 <getopt_internal+0x12a>
81002c20:	b8 01 00 00 00       	mov    $0x1,%eax
81002c25:	eb 05                	jmp    81002c2c <getopt_internal+0x12f>
81002c27:	b8 02 00 00 00       	mov    $0x2,%eax
81002c2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c2f:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002c33:	eb 23                	jmp    81002c58 <getopt_internal+0x15b>
81002c35:	83 ec 0c             	sub    $0xc,%esp
81002c38:	68 2b 89 00 81       	push   $0x8100892b
81002c3d:	e8 4c 41 00 00       	call   81006d8e <getenv>
81002c42:	83 c4 10             	add    $0x10,%esp
81002c45:	85 c0                	test   %eax,%eax
81002c47:	74 07                	je     81002c50 <getopt_internal+0x153>
81002c49:	b8 02 00 00 00       	mov    $0x2,%eax
81002c4e:	eb 05                	jmp    81002c55 <getopt_internal+0x158>
81002c50:	b8 00 00 00 00       	mov    $0x0,%eax
81002c55:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c58:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002c5c:	74 15                	je     81002c73 <getopt_internal+0x176>
81002c5e:	8b 45 10             	mov    0x10(%ebp),%eax
81002c61:	0f b6 00             	movzbl (%eax),%eax
81002c64:	3c 3a                	cmp    $0x3a,%al
81002c66:	75 0b                	jne    81002c73 <getopt_internal+0x176>
81002c68:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002c6c:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002c73:	8b 45 20             	mov    0x20(%ebp),%eax
81002c76:	8b 40 10             	mov    0x10(%eax),%eax
81002c79:	83 f8 01             	cmp    $0x1,%eax
81002c7c:	0f 85 a2 01 00 00    	jne    81002e24 <getopt_internal+0x327>
81002c82:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002c86:	0f 84 02 01 00 00    	je     81002d8e <getopt_internal+0x291>
81002c8c:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002c90:	0f 84 56 01 00 00    	je     81002dec <getopt_internal+0x2ef>
81002c96:	8b 45 20             	mov    0x20(%ebp),%eax
81002c99:	8b 50 04             	mov    0x4(%eax),%edx
81002c9c:	8b 45 20             	mov    0x20(%ebp),%eax
81002c9f:	89 50 14             	mov    %edx,0x14(%eax)
81002ca2:	8b 45 20             	mov    0x20(%ebp),%eax
81002ca5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002cac:	eb 1e                	jmp    81002ccc <getopt_internal+0x1cf>
81002cae:	8b 45 20             	mov    0x20(%ebp),%eax
81002cb1:	8b 40 04             	mov    0x4(%eax),%eax
81002cb4:	8d 50 01             	lea    0x1(%eax),%edx
81002cb7:	8b 45 20             	mov    0x20(%ebp),%eax
81002cba:	89 50 04             	mov    %edx,0x4(%eax)
81002cbd:	8b 45 20             	mov    0x20(%ebp),%eax
81002cc0:	8b 40 18             	mov    0x18(%eax),%eax
81002cc3:	8d 50 01             	lea    0x1(%eax),%edx
81002cc6:	8b 45 20             	mov    0x20(%ebp),%eax
81002cc9:	89 50 18             	mov    %edx,0x18(%eax)
81002ccc:	8b 45 20             	mov    0x20(%ebp),%eax
81002ccf:	8b 40 04             	mov    0x4(%eax),%eax
81002cd2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cd9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cdc:	01 d0                	add    %edx,%eax
81002cde:	8b 00                	mov    (%eax),%eax
81002ce0:	83 ec 08             	sub    $0x8,%esp
81002ce3:	ff 75 1c             	push   0x1c(%ebp)
81002ce6:	50                   	push   %eax
81002ce7:	e8 35 fd ff ff       	call   81002a21 <is_option>
81002cec:	83 c4 10             	add    $0x10,%esp
81002cef:	85 c0                	test   %eax,%eax
81002cf1:	74 bb                	je     81002cae <getopt_internal+0x1b1>
81002cf3:	8b 45 20             	mov    0x20(%ebp),%eax
81002cf6:	8b 40 04             	mov    0x4(%eax),%eax
81002cf9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d00:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d03:	01 d0                	add    %edx,%eax
81002d05:	8b 00                	mov    (%eax),%eax
81002d07:	85 c0                	test   %eax,%eax
81002d09:	75 16                	jne    81002d21 <getopt_internal+0x224>
81002d0b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d0e:	8b 50 14             	mov    0x14(%eax),%edx
81002d11:	8b 45 20             	mov    0x20(%ebp),%eax
81002d14:	89 50 04             	mov    %edx,0x4(%eax)
81002d17:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d1c:	e9 ec 08 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002d21:	8b 45 20             	mov    0x20(%ebp),%eax
81002d24:	8b 40 04             	mov    0x4(%eax),%eax
81002d27:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d31:	01 d0                	add    %edx,%eax
81002d33:	8b 00                	mov    (%eax),%eax
81002d35:	83 ec 08             	sub    $0x8,%esp
81002d38:	68 28 89 00 81       	push   $0x81008928
81002d3d:	50                   	push   %eax
81002d3e:	e8 29 2e 00 00       	call   81005b6c <strcmp>
81002d43:	83 c4 10             	add    $0x10,%esp
81002d46:	85 c0                	test   %eax,%eax
81002d48:	0f 85 cf 00 00 00    	jne    81002e1d <getopt_internal+0x320>
81002d4e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d51:	8b 40 18             	mov    0x18(%eax),%eax
81002d54:	8b 55 20             	mov    0x20(%ebp),%edx
81002d57:	8b 52 14             	mov    0x14(%edx),%edx
81002d5a:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002d61:	8b 55 0c             	mov    0xc(%ebp),%edx
81002d64:	01 ca                	add    %ecx,%edx
81002d66:	83 ec 04             	sub    $0x4,%esp
81002d69:	6a 01                	push   $0x1
81002d6b:	50                   	push   %eax
81002d6c:	52                   	push   %edx
81002d6d:	e8 79 fc ff ff       	call   810029eb <permute>
81002d72:	83 c4 10             	add    $0x10,%esp
81002d75:	8b 45 20             	mov    0x20(%ebp),%eax
81002d78:	8b 40 14             	mov    0x14(%eax),%eax
81002d7b:	8d 50 01             	lea    0x1(%eax),%edx
81002d7e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d81:	89 50 04             	mov    %edx,0x4(%eax)
81002d84:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d89:	e9 7f 08 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002d8e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d91:	8b 40 04             	mov    0x4(%eax),%eax
81002d94:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d9e:	01 d0                	add    %edx,%eax
81002da0:	8b 00                	mov    (%eax),%eax
81002da2:	83 ec 08             	sub    $0x8,%esp
81002da5:	ff 75 1c             	push   0x1c(%ebp)
81002da8:	50                   	push   %eax
81002da9:	e8 73 fc ff ff       	call   81002a21 <is_option>
81002dae:	83 c4 10             	add    $0x10,%esp
81002db1:	85 c0                	test   %eax,%eax
81002db3:	75 6b                	jne    81002e20 <getopt_internal+0x323>
81002db5:	8b 45 20             	mov    0x20(%ebp),%eax
81002db8:	8b 40 04             	mov    0x4(%eax),%eax
81002dbb:	8d 48 01             	lea    0x1(%eax),%ecx
81002dbe:	8b 55 20             	mov    0x20(%ebp),%edx
81002dc1:	89 4a 04             	mov    %ecx,0x4(%edx)
81002dc4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002dcb:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dce:	01 d0                	add    %edx,%eax
81002dd0:	8b 10                	mov    (%eax),%edx
81002dd2:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd5:	89 10                	mov    %edx,(%eax)
81002dd7:	8b 45 20             	mov    0x20(%ebp),%eax
81002dda:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002de1:	8b 45 20             	mov    0x20(%ebp),%eax
81002de4:	8b 40 0c             	mov    0xc(%eax),%eax
81002de7:	e9 21 08 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002dec:	8b 45 20             	mov    0x20(%ebp),%eax
81002def:	8b 40 04             	mov    0x4(%eax),%eax
81002df2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002df9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dfc:	01 d0                	add    %edx,%eax
81002dfe:	8b 00                	mov    (%eax),%eax
81002e00:	83 ec 08             	sub    $0x8,%esp
81002e03:	ff 75 1c             	push   0x1c(%ebp)
81002e06:	50                   	push   %eax
81002e07:	e8 15 fc ff ff       	call   81002a21 <is_option>
81002e0c:	83 c4 10             	add    $0x10,%esp
81002e0f:	85 c0                	test   %eax,%eax
81002e11:	75 10                	jne    81002e23 <getopt_internal+0x326>
81002e13:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e18:	e9 f0 07 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002e1d:	90                   	nop
81002e1e:	eb 04                	jmp    81002e24 <getopt_internal+0x327>
81002e20:	90                   	nop
81002e21:	eb 01                	jmp    81002e24 <getopt_internal+0x327>
81002e23:	90                   	nop
81002e24:	8b 45 20             	mov    0x20(%ebp),%eax
81002e27:	8b 40 04             	mov    0x4(%eax),%eax
81002e2a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e31:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e34:	01 d0                	add    %edx,%eax
81002e36:	8b 00                	mov    (%eax),%eax
81002e38:	85 c0                	test   %eax,%eax
81002e3a:	75 0a                	jne    81002e46 <getopt_internal+0x349>
81002e3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e41:	e9 c7 07 00 00       	jmp    8100360d <getopt_internal+0xb10>
81002e46:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002e4a:	0f 84 15 03 00 00    	je     81003165 <getopt_internal+0x668>
81002e50:	8b 45 20             	mov    0x20(%ebp),%eax
81002e53:	8b 40 04             	mov    0x4(%eax),%eax
81002e56:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e60:	01 d0                	add    %edx,%eax
81002e62:	8b 00                	mov    (%eax),%eax
81002e64:	83 ec 04             	sub    $0x4,%esp
81002e67:	6a 02                	push   $0x2
81002e69:	68 28 89 00 81       	push   $0x81008928
81002e6e:	50                   	push   %eax
81002e6f:	e8 01 16 00 00       	call   81004475 <memcmp>
81002e74:	83 c4 10             	add    $0x10,%esp
81002e77:	85 c0                	test   %eax,%eax
81002e79:	74 29                	je     81002ea4 <getopt_internal+0x3a7>
81002e7b:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002e7f:	0f 84 e0 02 00 00    	je     81003165 <getopt_internal+0x668>
81002e85:	8b 45 20             	mov    0x20(%ebp),%eax
81002e88:	8b 40 04             	mov    0x4(%eax),%eax
81002e8b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e92:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e95:	01 d0                	add    %edx,%eax
81002e97:	8b 00                	mov    (%eax),%eax
81002e99:	0f b6 00             	movzbl (%eax),%eax
81002e9c:	3c 2b                	cmp    $0x2b,%al
81002e9e:	0f 85 c1 02 00 00    	jne    81003165 <getopt_internal+0x668>
81002ea4:	8b 45 20             	mov    0x20(%ebp),%eax
81002ea7:	8b 40 10             	mov    0x10(%eax),%eax
81002eaa:	83 f8 01             	cmp    $0x1,%eax
81002ead:	0f 85 b2 02 00 00    	jne    81003165 <getopt_internal+0x668>
81002eb3:	8b 45 20             	mov    0x20(%ebp),%eax
81002eb6:	8b 40 04             	mov    0x4(%eax),%eax
81002eb9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ec0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ec3:	01 d0                	add    %edx,%eax
81002ec5:	8b 00                	mov    (%eax),%eax
81002ec7:	83 ec 04             	sub    $0x4,%esp
81002eca:	6a 02                	push   $0x2
81002ecc:	68 28 89 00 81       	push   $0x81008928
81002ed1:	50                   	push   %eax
81002ed2:	e8 9e 15 00 00       	call   81004475 <memcmp>
81002ed7:	83 c4 10             	add    $0x10,%esp
81002eda:	85 c0                	test   %eax,%eax
81002edc:	75 0a                	jne    81002ee8 <getopt_internal+0x3eb>
81002ede:	8b 45 20             	mov    0x20(%ebp),%eax
81002ee1:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002ee8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002eef:	8b 45 20             	mov    0x20(%ebp),%eax
81002ef2:	8b 40 04             	mov    0x4(%eax),%eax
81002ef5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002efc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002eff:	01 d0                	add    %edx,%eax
81002f01:	8b 10                	mov    (%eax),%edx
81002f03:	8b 45 20             	mov    0x20(%ebp),%eax
81002f06:	8b 40 10             	mov    0x10(%eax),%eax
81002f09:	01 d0                	add    %edx,%eax
81002f0b:	83 ec 08             	sub    $0x8,%esp
81002f0e:	6a 3d                	push   $0x3d
81002f10:	50                   	push   %eax
81002f11:	e8 5a 2b 00 00       	call   81005a70 <strchr>
81002f16:	83 c4 10             	add    $0x10,%esp
81002f19:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f1c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002f20:	75 4a                	jne    81002f6c <getopt_internal+0x46f>
81002f22:	8b 45 20             	mov    0x20(%ebp),%eax
81002f25:	8b 40 04             	mov    0x4(%eax),%eax
81002f28:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f32:	01 d0                	add    %edx,%eax
81002f34:	8b 00                	mov    (%eax),%eax
81002f36:	83 ec 0c             	sub    $0xc,%esp
81002f39:	50                   	push   %eax
81002f3a:	e8 e1 2c 00 00       	call   81005c20 <strlen>
81002f3f:	83 c4 10             	add    $0x10,%esp
81002f42:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f45:	8b 45 20             	mov    0x20(%ebp),%eax
81002f48:	8b 40 04             	mov    0x4(%eax),%eax
81002f4b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f52:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f55:	01 d0                	add    %edx,%eax
81002f57:	8b 10                	mov    (%eax),%edx
81002f59:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f5c:	01 d0                	add    %edx,%eax
81002f5e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f61:	8b 45 20             	mov    0x20(%ebp),%eax
81002f64:	8b 40 10             	mov    0x10(%eax),%eax
81002f67:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002f6a:	eb 28                	jmp    81002f94 <getopt_internal+0x497>
81002f6c:	8b 45 20             	mov    0x20(%ebp),%eax
81002f6f:	8b 40 04             	mov    0x4(%eax),%eax
81002f72:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f79:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f7c:	01 d0                	add    %edx,%eax
81002f7e:	8b 08                	mov    (%eax),%ecx
81002f80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f83:	29 c8                	sub    %ecx,%eax
81002f85:	89 c2                	mov    %eax,%edx
81002f87:	8b 45 20             	mov    0x20(%ebp),%eax
81002f8a:	8b 48 10             	mov    0x10(%eax),%ecx
81002f8d:	89 d0                	mov    %edx,%eax
81002f8f:	29 c8                	sub    %ecx,%eax
81002f91:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f94:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002f9b:	e9 95 01 00 00       	jmp    81003135 <getopt_internal+0x638>
81002fa0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fa3:	c1 e0 04             	shl    $0x4,%eax
81002fa6:	89 c2                	mov    %eax,%edx
81002fa8:	8b 45 14             	mov    0x14(%ebp),%eax
81002fab:	01 d0                	add    %edx,%eax
81002fad:	8b 00                	mov    (%eax),%eax
81002faf:	8b 55 20             	mov    0x20(%ebp),%edx
81002fb2:	8b 52 04             	mov    0x4(%edx),%edx
81002fb5:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002fbc:	8b 55 0c             	mov    0xc(%ebp),%edx
81002fbf:	01 ca                	add    %ecx,%edx
81002fc1:	8b 0a                	mov    (%edx),%ecx
81002fc3:	8b 55 20             	mov    0x20(%ebp),%edx
81002fc6:	8b 52 10             	mov    0x10(%edx),%edx
81002fc9:	01 ca                	add    %ecx,%edx
81002fcb:	83 ec 04             	sub    $0x4,%esp
81002fce:	ff 75 ec             	push   -0x14(%ebp)
81002fd1:	50                   	push   %eax
81002fd2:	52                   	push   %edx
81002fd3:	e8 9d 14 00 00       	call   81004475 <memcmp>
81002fd8:	83 c4 10             	add    $0x10,%esp
81002fdb:	85 c0                	test   %eax,%eax
81002fdd:	0f 85 4e 01 00 00    	jne    81003131 <getopt_internal+0x634>
81002fe3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fe6:	c1 e0 04             	shl    $0x4,%eax
81002fe9:	89 c2                	mov    %eax,%edx
81002feb:	8b 45 14             	mov    0x14(%ebp),%eax
81002fee:	01 d0                	add    %edx,%eax
81002ff0:	8b 00                	mov    (%eax),%eax
81002ff2:	83 ec 0c             	sub    $0xc,%esp
81002ff5:	50                   	push   %eax
81002ff6:	e8 25 2c 00 00       	call   81005c20 <strlen>
81002ffb:	83 c4 10             	add    $0x10,%esp
81002ffe:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003001:	75 0b                	jne    8100300e <getopt_internal+0x511>
81003003:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003006:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003009:	e9 3e 01 00 00       	jmp    8100314c <getopt_internal+0x64f>
8100300e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003012:	79 0b                	jns    8100301f <getopt_internal+0x522>
81003014:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003017:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100301a:	e9 12 01 00 00       	jmp    81003131 <getopt_internal+0x634>
8100301f:	8b 45 20             	mov    0x20(%ebp),%eax
81003022:	8b 40 08             	mov    0x8(%eax),%eax
81003025:	85 c0                	test   %eax,%eax
81003027:	0f 84 ef 00 00 00    	je     8100311c <getopt_internal+0x61f>
8100302d:	a1 64 91 00 81       	mov    0x81009164,%eax
81003032:	8b 50 0c             	mov    0xc(%eax),%edx
81003035:	8b 45 0c             	mov    0xc(%ebp),%eax
81003038:	8b 00                	mov    (%eax),%eax
8100303a:	83 ec 08             	sub    $0x8,%esp
8100303d:	52                   	push   %edx
8100303e:	50                   	push   %eax
8100303f:	e8 e2 35 00 00       	call   81006626 <fputs>
81003044:	83 c4 10             	add    $0x10,%esp
81003047:	a1 64 91 00 81       	mov    0x81009164,%eax
8100304c:	8b 40 0c             	mov    0xc(%eax),%eax
8100304f:	83 ec 08             	sub    $0x8,%esp
81003052:	50                   	push   %eax
81003053:	68 3b 89 00 81       	push   $0x8100893b
81003058:	e8 c9 35 00 00       	call   81006626 <fputs>
8100305d:	83 c4 10             	add    $0x10,%esp
81003060:	a1 64 91 00 81       	mov    0x81009164,%eax
81003065:	8b 50 0c             	mov    0xc(%eax),%edx
81003068:	8b 45 20             	mov    0x20(%ebp),%eax
8100306b:	8b 40 04             	mov    0x4(%eax),%eax
8100306e:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003075:	8b 45 0c             	mov    0xc(%ebp),%eax
81003078:	01 c8                	add    %ecx,%eax
8100307a:	8b 00                	mov    (%eax),%eax
8100307c:	83 ec 08             	sub    $0x8,%esp
8100307f:	52                   	push   %edx
81003080:	50                   	push   %eax
81003081:	e8 a0 35 00 00       	call   81006626 <fputs>
81003086:	83 c4 10             	add    $0x10,%esp
81003089:	a1 64 91 00 81       	mov    0x81009164,%eax
8100308e:	8b 40 0c             	mov    0xc(%eax),%eax
81003091:	83 ec 08             	sub    $0x8,%esp
81003094:	50                   	push   %eax
81003095:	68 46 89 00 81       	push   $0x81008946
8100309a:	e8 87 35 00 00       	call   81006626 <fputs>
8100309f:	83 c4 10             	add    $0x10,%esp
810030a2:	a1 64 91 00 81       	mov    0x81009164,%eax
810030a7:	8b 50 0c             	mov    0xc(%eax),%edx
810030aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030ad:	c1 e0 04             	shl    $0x4,%eax
810030b0:	89 c1                	mov    %eax,%ecx
810030b2:	8b 45 14             	mov    0x14(%ebp),%eax
810030b5:	01 c8                	add    %ecx,%eax
810030b7:	8b 00                	mov    (%eax),%eax
810030b9:	83 ec 08             	sub    $0x8,%esp
810030bc:	52                   	push   %edx
810030bd:	50                   	push   %eax
810030be:	e8 63 35 00 00       	call   81006626 <fputs>
810030c3:	83 c4 10             	add    $0x10,%esp
810030c6:	a1 64 91 00 81       	mov    0x81009164,%eax
810030cb:	8b 40 0c             	mov    0xc(%eax),%eax
810030ce:	83 ec 08             	sub    $0x8,%esp
810030d1:	50                   	push   %eax
810030d2:	68 63 89 00 81       	push   $0x81008963
810030d7:	e8 4a 35 00 00       	call   81006626 <fputs>
810030dc:	83 c4 10             	add    $0x10,%esp
810030df:	a1 64 91 00 81       	mov    0x81009164,%eax
810030e4:	8b 50 0c             	mov    0xc(%eax),%edx
810030e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030ea:	c1 e0 04             	shl    $0x4,%eax
810030ed:	89 c1                	mov    %eax,%ecx
810030ef:	8b 45 14             	mov    0x14(%ebp),%eax
810030f2:	01 c8                	add    %ecx,%eax
810030f4:	8b 00                	mov    (%eax),%eax
810030f6:	83 ec 08             	sub    $0x8,%esp
810030f9:	52                   	push   %edx
810030fa:	50                   	push   %eax
810030fb:	e8 26 35 00 00       	call   81006626 <fputs>
81003100:	83 c4 10             	add    $0x10,%esp
81003103:	a1 64 91 00 81       	mov    0x81009164,%eax
81003108:	8b 40 0c             	mov    0xc(%eax),%eax
8100310b:	83 ec 08             	sub    $0x8,%esp
8100310e:	50                   	push   %eax
8100310f:	68 6c 89 00 81       	push   $0x8100896c
81003114:	e8 0d 35 00 00       	call   81006626 <fputs>
81003119:	83 c4 10             	add    $0x10,%esp
8100311c:	8b 45 20             	mov    0x20(%ebp),%eax
8100311f:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003126:	8b 45 20             	mov    0x20(%ebp),%eax
81003129:	8b 40 0c             	mov    0xc(%eax),%eax
8100312c:	e9 dc 04 00 00       	jmp    8100360d <getopt_internal+0xb10>
81003131:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003135:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003138:	c1 e0 04             	shl    $0x4,%eax
8100313b:	89 c2                	mov    %eax,%edx
8100313d:	8b 45 14             	mov    0x14(%ebp),%eax
81003140:	01 d0                	add    %edx,%eax
81003142:	8b 00                	mov    (%eax),%eax
81003144:	85 c0                	test   %eax,%eax
81003146:	0f 85 54 fe ff ff    	jne    81002fa0 <getopt_internal+0x4a3>
8100314c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003150:	78 13                	js     81003165 <getopt_internal+0x668>
81003152:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003155:	c1 e0 04             	shl    $0x4,%eax
81003158:	89 c2                	mov    %eax,%edx
8100315a:	8b 45 14             	mov    0x14(%ebp),%eax
8100315d:	01 d0                	add    %edx,%eax
8100315f:	8b 40 04             	mov    0x4(%eax),%eax
81003162:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003165:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003169:	0f 89 9a 01 00 00    	jns    81003309 <getopt_internal+0x80c>
8100316f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003173:	0f 84 90 01 00 00    	je     81003309 <getopt_internal+0x80c>
81003179:	8b 45 20             	mov    0x20(%ebp),%eax
8100317c:	8b 40 04             	mov    0x4(%eax),%eax
8100317f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003186:	8b 45 0c             	mov    0xc(%ebp),%eax
81003189:	01 d0                	add    %edx,%eax
8100318b:	8b 10                	mov    (%eax),%edx
8100318d:	8b 45 20             	mov    0x20(%ebp),%eax
81003190:	8b 40 10             	mov    0x10(%eax),%eax
81003193:	01 d0                	add    %edx,%eax
81003195:	0f b6 00             	movzbl (%eax),%eax
81003198:	0f be c0             	movsbl %al,%eax
8100319b:	83 ec 08             	sub    $0x8,%esp
8100319e:	50                   	push   %eax
8100319f:	ff 75 10             	push   0x10(%ebp)
810031a2:	e8 c9 28 00 00       	call   81005a70 <strchr>
810031a7:	83 c4 10             	add    $0x10,%esp
810031aa:	89 45 dc             	mov    %eax,-0x24(%ebp)
810031ad:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810031b1:	0f 85 f1 00 00 00    	jne    810032a8 <getopt_internal+0x7ab>
810031b7:	8b 45 20             	mov    0x20(%ebp),%eax
810031ba:	8b 40 08             	mov    0x8(%eax),%eax
810031bd:	85 c0                	test   %eax,%eax
810031bf:	0f 84 83 00 00 00    	je     81003248 <getopt_internal+0x74b>
810031c5:	a1 64 91 00 81       	mov    0x81009164,%eax
810031ca:	8b 50 0c             	mov    0xc(%eax),%edx
810031cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810031d0:	8b 00                	mov    (%eax),%eax
810031d2:	83 ec 08             	sub    $0x8,%esp
810031d5:	52                   	push   %edx
810031d6:	50                   	push   %eax
810031d7:	e8 4a 34 00 00       	call   81006626 <fputs>
810031dc:	83 c4 10             	add    $0x10,%esp
810031df:	a1 64 91 00 81       	mov    0x81009164,%eax
810031e4:	8b 40 0c             	mov    0xc(%eax),%eax
810031e7:	83 ec 08             	sub    $0x8,%esp
810031ea:	50                   	push   %eax
810031eb:	68 70 89 00 81       	push   $0x81008970
810031f0:	e8 31 34 00 00       	call   81006626 <fputs>
810031f5:	83 c4 10             	add    $0x10,%esp
810031f8:	a1 64 91 00 81       	mov    0x81009164,%eax
810031fd:	8b 50 0c             	mov    0xc(%eax),%edx
81003200:	8b 45 20             	mov    0x20(%ebp),%eax
81003203:	8b 40 04             	mov    0x4(%eax),%eax
81003206:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100320d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003210:	01 c8                	add    %ecx,%eax
81003212:	8b 08                	mov    (%eax),%ecx
81003214:	8b 45 20             	mov    0x20(%ebp),%eax
81003217:	8b 40 10             	mov    0x10(%eax),%eax
8100321a:	01 c8                	add    %ecx,%eax
8100321c:	0f b6 00             	movzbl (%eax),%eax
8100321f:	0f be c0             	movsbl %al,%eax
81003222:	83 ec 08             	sub    $0x8,%esp
81003225:	52                   	push   %edx
81003226:	50                   	push   %eax
81003227:	e8 06 33 00 00       	call   81006532 <fputc>
8100322c:	83 c4 10             	add    $0x10,%esp
8100322f:	a1 64 91 00 81       	mov    0x81009164,%eax
81003234:	8b 40 0c             	mov    0xc(%eax),%eax
81003237:	83 ec 08             	sub    $0x8,%esp
8100323a:	50                   	push   %eax
8100323b:	68 87 89 00 81       	push   $0x81008987
81003240:	e8 e1 33 00 00       	call   81006626 <fputs>
81003245:	83 c4 10             	add    $0x10,%esp
81003248:	8b 45 20             	mov    0x20(%ebp),%eax
8100324b:	8b 40 10             	mov    0x10(%eax),%eax
8100324e:	8d 50 01             	lea    0x1(%eax),%edx
81003251:	8b 45 20             	mov    0x20(%ebp),%eax
81003254:	89 50 10             	mov    %edx,0x10(%eax)
81003257:	8b 45 20             	mov    0x20(%ebp),%eax
8100325a:	8b 40 04             	mov    0x4(%eax),%eax
8100325d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003264:	8b 45 0c             	mov    0xc(%ebp),%eax
81003267:	01 d0                	add    %edx,%eax
81003269:	8b 10                	mov    (%eax),%edx
8100326b:	8b 45 20             	mov    0x20(%ebp),%eax
8100326e:	8b 40 10             	mov    0x10(%eax),%eax
81003271:	01 d0                	add    %edx,%eax
81003273:	0f b6 00             	movzbl (%eax),%eax
81003276:	84 c0                	test   %al,%al
81003278:	75 19                	jne    81003293 <getopt_internal+0x796>
8100327a:	8b 45 20             	mov    0x20(%ebp),%eax
8100327d:	8b 40 04             	mov    0x4(%eax),%eax
81003280:	8d 50 01             	lea    0x1(%eax),%edx
81003283:	8b 45 20             	mov    0x20(%ebp),%eax
81003286:	89 50 04             	mov    %edx,0x4(%eax)
81003289:	8b 45 20             	mov    0x20(%ebp),%eax
8100328c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003293:	8b 45 20             	mov    0x20(%ebp),%eax
81003296:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100329d:	8b 45 20             	mov    0x20(%ebp),%eax
810032a0:	8b 40 0c             	mov    0xc(%eax),%eax
810032a3:	e9 65 03 00 00       	jmp    8100360d <getopt_internal+0xb10>
810032a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810032ab:	83 c0 01             	add    $0x1,%eax
810032ae:	0f b6 00             	movzbl (%eax),%eax
810032b1:	3c 3a                	cmp    $0x3a,%al
810032b3:	75 1b                	jne    810032d0 <getopt_internal+0x7d3>
810032b5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810032b8:	83 c0 02             	add    $0x2,%eax
810032bb:	0f b6 00             	movzbl (%eax),%eax
810032be:	3c 3a                	cmp    $0x3a,%al
810032c0:	75 07                	jne    810032c9 <getopt_internal+0x7cc>
810032c2:	b8 02 00 00 00       	mov    $0x2,%eax
810032c7:	eb 0c                	jmp    810032d5 <getopt_internal+0x7d8>
810032c9:	b8 01 00 00 00       	mov    $0x1,%eax
810032ce:	eb 05                	jmp    810032d5 <getopt_internal+0x7d8>
810032d0:	b8 00 00 00 00       	mov    $0x0,%eax
810032d5:	89 45 e0             	mov    %eax,-0x20(%ebp)
810032d8:	8b 45 20             	mov    0x20(%ebp),%eax
810032db:	8b 40 04             	mov    0x4(%eax),%eax
810032de:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810032e8:	01 d0                	add    %edx,%eax
810032ea:	8b 10                	mov    (%eax),%edx
810032ec:	8b 45 20             	mov    0x20(%ebp),%eax
810032ef:	8b 40 10             	mov    0x10(%eax),%eax
810032f2:	83 c0 01             	add    $0x1,%eax
810032f5:	01 d0                	add    %edx,%eax
810032f7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032fa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810032fd:	0f b6 00             	movzbl (%eax),%eax
81003300:	0f be d0             	movsbl %al,%edx
81003303:	8b 45 20             	mov    0x20(%ebp),%eax
81003306:	89 50 0c             	mov    %edx,0xc(%eax)
81003309:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003310:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003314:	74 40                	je     81003356 <getopt_internal+0x859>
81003316:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
8100331a:	0f 85 b0 01 00 00    	jne    810034d0 <getopt_internal+0x9d3>
81003320:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003323:	0f b6 00             	movzbl (%eax),%eax
81003326:	3c 3d                	cmp    $0x3d,%al
81003328:	75 04                	jne    8100332e <getopt_internal+0x831>
8100332a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100332e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003331:	0f b6 00             	movzbl (%eax),%eax
81003334:	84 c0                	test   %al,%al
81003336:	74 05                	je     8100333d <getopt_internal+0x840>
81003338:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100333b:	eb 05                	jmp    81003342 <getopt_internal+0x845>
8100333d:	b8 00 00 00 00       	mov    $0x0,%eax
81003342:	8b 55 20             	mov    0x20(%ebp),%edx
81003345:	89 02                	mov    %eax,(%edx)
81003347:	8b 45 20             	mov    0x20(%ebp),%eax
8100334a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003351:	e9 d2 01 00 00       	jmp    81003528 <getopt_internal+0xa2b>
81003356:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003359:	0f b6 00             	movzbl (%eax),%eax
8100335c:	3c 3d                	cmp    $0x3d,%al
8100335e:	75 04                	jne    81003364 <getopt_internal+0x867>
81003360:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003364:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003367:	0f b6 00             	movzbl (%eax),%eax
8100336a:	84 c0                	test   %al,%al
8100336c:	74 17                	je     81003385 <getopt_internal+0x888>
8100336e:	8b 45 20             	mov    0x20(%ebp),%eax
81003371:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003374:	89 10                	mov    %edx,(%eax)
81003376:	8b 45 20             	mov    0x20(%ebp),%eax
81003379:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003380:	e9 a3 01 00 00       	jmp    81003528 <getopt_internal+0xa2b>
81003385:	8b 45 20             	mov    0x20(%ebp),%eax
81003388:	8b 40 04             	mov    0x4(%eax),%eax
8100338b:	83 c0 01             	add    $0x1,%eax
8100338e:	39 45 08             	cmp    %eax,0x8(%ebp)
81003391:	0f 8f 0a 01 00 00    	jg     810034a1 <getopt_internal+0x9a4>
81003397:	8b 45 20             	mov    0x20(%ebp),%eax
8100339a:	8b 40 08             	mov    0x8(%eax),%eax
8100339d:	85 c0                	test   %eax,%eax
8100339f:	0f 84 d3 00 00 00    	je     81003478 <getopt_internal+0x97b>
810033a5:	a1 64 91 00 81       	mov    0x81009164,%eax
810033aa:	8b 50 0c             	mov    0xc(%eax),%edx
810033ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810033b0:	8b 00                	mov    (%eax),%eax
810033b2:	83 ec 08             	sub    $0x8,%esp
810033b5:	52                   	push   %edx
810033b6:	50                   	push   %eax
810033b7:	e8 6a 32 00 00       	call   81006626 <fputs>
810033bc:	83 c4 10             	add    $0x10,%esp
810033bf:	a1 64 91 00 81       	mov    0x81009164,%eax
810033c4:	8b 40 0c             	mov    0xc(%eax),%eax
810033c7:	83 ec 08             	sub    $0x8,%esp
810033ca:	50                   	push   %eax
810033cb:	68 8c 89 00 81       	push   $0x8100898c
810033d0:	e8 51 32 00 00       	call   81006626 <fputs>
810033d5:	83 c4 10             	add    $0x10,%esp
810033d8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810033dc:	78 54                	js     81003432 <getopt_internal+0x935>
810033de:	a1 64 91 00 81       	mov    0x81009164,%eax
810033e3:	8b 40 0c             	mov    0xc(%eax),%eax
810033e6:	83 ec 08             	sub    $0x8,%esp
810033e9:	50                   	push   %eax
810033ea:	6a 2d                	push   $0x2d
810033ec:	e8 41 31 00 00       	call   81006532 <fputc>
810033f1:	83 c4 10             	add    $0x10,%esp
810033f4:	a1 64 91 00 81       	mov    0x81009164,%eax
810033f9:	8b 50 0c             	mov    0xc(%eax),%edx
810033fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810033ff:	c1 e0 04             	shl    $0x4,%eax
81003402:	89 c1                	mov    %eax,%ecx
81003404:	8b 45 14             	mov    0x14(%ebp),%eax
81003407:	01 c8                	add    %ecx,%eax
81003409:	8b 00                	mov    (%eax),%eax
8100340b:	83 ec 08             	sub    $0x8,%esp
8100340e:	52                   	push   %edx
8100340f:	50                   	push   %eax
81003410:	e8 11 32 00 00       	call   81006626 <fputs>
81003415:	83 c4 10             	add    $0x10,%esp
81003418:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100341c:	74 07                	je     81003425 <getopt_internal+0x928>
8100341e:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003423:	eb 05                	jmp    8100342a <getopt_internal+0x92d>
81003425:	ba 3f 00 00 00       	mov    $0x3f,%edx
8100342a:	8b 45 20             	mov    0x20(%ebp),%eax
8100342d:	89 50 0c             	mov    %edx,0xc(%eax)
81003430:	eb 2d                	jmp    8100345f <getopt_internal+0x962>
81003432:	a1 64 91 00 81       	mov    0x81009164,%eax
81003437:	8b 50 0c             	mov    0xc(%eax),%edx
8100343a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100343d:	0f b6 00             	movzbl (%eax),%eax
81003440:	0f be c0             	movsbl %al,%eax
81003443:	83 ec 08             	sub    $0x8,%esp
81003446:	52                   	push   %edx
81003447:	50                   	push   %eax
81003448:	e8 e5 30 00 00       	call   81006532 <fputc>
8100344d:	83 c4 10             	add    $0x10,%esp
81003450:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003453:	0f b6 00             	movzbl (%eax),%eax
81003456:	0f be d0             	movsbl %al,%edx
81003459:	8b 45 20             	mov    0x20(%ebp),%eax
8100345c:	89 50 0c             	mov    %edx,0xc(%eax)
8100345f:	a1 64 91 00 81       	mov    0x81009164,%eax
81003464:	8b 40 0c             	mov    0xc(%eax),%eax
81003467:	83 ec 08             	sub    $0x8,%esp
8100346a:	50                   	push   %eax
8100346b:	68 87 89 00 81       	push   $0x81008987
81003470:	e8 b1 31 00 00       	call   81006626 <fputs>
81003475:	83 c4 10             	add    $0x10,%esp
81003478:	8b 45 20             	mov    0x20(%ebp),%eax
8100347b:	8b 40 04             	mov    0x4(%eax),%eax
8100347e:	8d 50 01             	lea    0x1(%eax),%edx
81003481:	8b 45 20             	mov    0x20(%ebp),%eax
81003484:	89 50 04             	mov    %edx,0x4(%eax)
81003487:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100348b:	74 0a                	je     81003497 <getopt_internal+0x99a>
8100348d:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003492:	e9 76 01 00 00       	jmp    8100360d <getopt_internal+0xb10>
81003497:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100349c:	e9 6c 01 00 00       	jmp    8100360d <getopt_internal+0xb10>
810034a1:	8b 45 20             	mov    0x20(%ebp),%eax
810034a4:	8b 40 04             	mov    0x4(%eax),%eax
810034a7:	83 c0 01             	add    $0x1,%eax
810034aa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810034b4:	01 d0                	add    %edx,%eax
810034b6:	8b 10                	mov    (%eax),%edx
810034b8:	8b 45 20             	mov    0x20(%ebp),%eax
810034bb:	89 10                	mov    %edx,(%eax)
810034bd:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810034c4:	8b 45 20             	mov    0x20(%ebp),%eax
810034c7:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810034ce:	eb 58                	jmp    81003528 <getopt_internal+0xa2b>
810034d0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034d4:	79 3e                	jns    81003514 <getopt_internal+0xa17>
810034d6:	8b 45 20             	mov    0x20(%ebp),%eax
810034d9:	8b 40 10             	mov    0x10(%eax),%eax
810034dc:	8d 50 01             	lea    0x1(%eax),%edx
810034df:	8b 45 20             	mov    0x20(%ebp),%eax
810034e2:	89 50 10             	mov    %edx,0x10(%eax)
810034e5:	8b 45 20             	mov    0x20(%ebp),%eax
810034e8:	8b 40 04             	mov    0x4(%eax),%eax
810034eb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810034f5:	01 d0                	add    %edx,%eax
810034f7:	8b 10                	mov    (%eax),%edx
810034f9:	8b 45 20             	mov    0x20(%ebp),%eax
810034fc:	8b 40 10             	mov    0x10(%eax),%eax
810034ff:	01 d0                	add    %edx,%eax
81003501:	0f b6 00             	movzbl (%eax),%eax
81003504:	84 c0                	test   %al,%al
81003506:	75 16                	jne    8100351e <getopt_internal+0xa21>
81003508:	8b 45 20             	mov    0x20(%ebp),%eax
8100350b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003512:	eb 0a                	jmp    8100351e <getopt_internal+0xa21>
81003514:	8b 45 20             	mov    0x20(%ebp),%eax
81003517:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100351e:	8b 45 20             	mov    0x20(%ebp),%eax
81003521:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003527:	90                   	nop
81003528:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100352c:	75 57                	jne    81003585 <getopt_internal+0xa88>
8100352e:	8b 45 20             	mov    0x20(%ebp),%eax
81003531:	8b 40 10             	mov    0x10(%eax),%eax
81003534:	83 f8 01             	cmp    $0x1,%eax
81003537:	75 4c                	jne    81003585 <getopt_internal+0xa88>
81003539:	8b 45 20             	mov    0x20(%ebp),%eax
8100353c:	8b 40 18             	mov    0x18(%eax),%eax
8100353f:	85 c0                	test   %eax,%eax
81003541:	74 42                	je     81003585 <getopt_internal+0xa88>
81003543:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003546:	8d 48 01             	lea    0x1(%eax),%ecx
81003549:	8b 45 20             	mov    0x20(%ebp),%eax
8100354c:	8b 40 18             	mov    0x18(%eax),%eax
8100354f:	8b 55 20             	mov    0x20(%ebp),%edx
81003552:	8b 52 14             	mov    0x14(%edx),%edx
81003555:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100355c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100355f:	01 da                	add    %ebx,%edx
81003561:	83 ec 04             	sub    $0x4,%esp
81003564:	51                   	push   %ecx
81003565:	50                   	push   %eax
81003566:	52                   	push   %edx
81003567:	e8 7f f4 ff ff       	call   810029eb <permute>
8100356c:	83 c4 10             	add    $0x10,%esp
8100356f:	8b 45 20             	mov    0x20(%ebp),%eax
81003572:	8b 40 14             	mov    0x14(%eax),%eax
81003575:	8d 50 01             	lea    0x1(%eax),%edx
81003578:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100357b:	01 c2                	add    %eax,%edx
8100357d:	8b 45 20             	mov    0x20(%ebp),%eax
81003580:	89 50 04             	mov    %edx,0x4(%eax)
81003583:	eb 1f                	jmp    810035a4 <getopt_internal+0xaa7>
81003585:	8b 45 20             	mov    0x20(%ebp),%eax
81003588:	8b 40 10             	mov    0x10(%eax),%eax
8100358b:	83 f8 01             	cmp    $0x1,%eax
8100358e:	75 14                	jne    810035a4 <getopt_internal+0xaa7>
81003590:	8b 45 20             	mov    0x20(%ebp),%eax
81003593:	8b 40 04             	mov    0x4(%eax),%eax
81003596:	8d 50 01             	lea    0x1(%eax),%edx
81003599:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100359c:	01 c2                	add    %eax,%edx
8100359e:	8b 45 20             	mov    0x20(%ebp),%eax
810035a1:	89 50 04             	mov    %edx,0x4(%eax)
810035a4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810035a8:	78 5d                	js     81003607 <getopt_internal+0xb0a>
810035aa:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810035ae:	74 08                	je     810035b8 <getopt_internal+0xabb>
810035b0:	8b 45 18             	mov    0x18(%ebp),%eax
810035b3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810035b6:	89 10                	mov    %edx,(%eax)
810035b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035bb:	c1 e0 04             	shl    $0x4,%eax
810035be:	89 c2                	mov    %eax,%edx
810035c0:	8b 45 14             	mov    0x14(%ebp),%eax
810035c3:	01 d0                	add    %edx,%eax
810035c5:	8b 40 08             	mov    0x8(%eax),%eax
810035c8:	85 c0                	test   %eax,%eax
810035ca:	74 29                	je     810035f5 <getopt_internal+0xaf8>
810035cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035cf:	c1 e0 04             	shl    $0x4,%eax
810035d2:	89 c2                	mov    %eax,%edx
810035d4:	8b 45 14             	mov    0x14(%ebp),%eax
810035d7:	01 c2                	add    %eax,%edx
810035d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035dc:	c1 e0 04             	shl    $0x4,%eax
810035df:	89 c1                	mov    %eax,%ecx
810035e1:	8b 45 14             	mov    0x14(%ebp),%eax
810035e4:	01 c8                	add    %ecx,%eax
810035e6:	8b 40 08             	mov    0x8(%eax),%eax
810035e9:	8b 52 0c             	mov    0xc(%edx),%edx
810035ec:	89 10                	mov    %edx,(%eax)
810035ee:	b8 00 00 00 00       	mov    $0x0,%eax
810035f3:	eb 18                	jmp    8100360d <getopt_internal+0xb10>
810035f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035f8:	c1 e0 04             	shl    $0x4,%eax
810035fb:	89 c2                	mov    %eax,%edx
810035fd:	8b 45 14             	mov    0x14(%ebp),%eax
81003600:	01 d0                	add    %edx,%eax
81003602:	8b 40 0c             	mov    0xc(%eax),%eax
81003605:	eb 06                	jmp    8100360d <getopt_internal+0xb10>
81003607:	8b 45 20             	mov    0x20(%ebp),%eax
8100360a:	8b 40 0c             	mov    0xc(%eax),%eax
8100360d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003610:	c9                   	leave  
81003611:	c3                   	ret    

81003612 <getopt>:
81003612:	55                   	push   %ebp
81003613:	89 e5                	mov    %esp,%ebp
81003615:	83 ec 28             	sub    $0x28,%esp
81003618:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100361b:	50                   	push   %eax
8100361c:	e8 31 f4 ff ff       	call   81002a52 <read_globals>
81003621:	83 c4 04             	add    $0x4,%esp
81003624:	83 ec 04             	sub    $0x4,%esp
81003627:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100362a:	50                   	push   %eax
8100362b:	6a 00                	push   $0x0
8100362d:	6a 00                	push   $0x0
8100362f:	6a 00                	push   $0x0
81003631:	ff 75 10             	push   0x10(%ebp)
81003634:	ff 75 0c             	push   0xc(%ebp)
81003637:	ff 75 08             	push   0x8(%ebp)
8100363a:	e8 be f4 ff ff       	call   81002afd <getopt_internal>
8100363f:	83 c4 20             	add    $0x20,%esp
81003642:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003645:	83 ec 0c             	sub    $0xc,%esp
81003648:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100364b:	50                   	push   %eax
8100364c:	e8 5a f4 ff ff       	call   81002aab <write_globals>
81003651:	83 c4 10             	add    $0x10,%esp
81003654:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003657:	c9                   	leave  
81003658:	c3                   	ret    

81003659 <getopt_long>:
81003659:	55                   	push   %ebp
8100365a:	89 e5                	mov    %esp,%ebp
8100365c:	83 ec 28             	sub    $0x28,%esp
8100365f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003662:	50                   	push   %eax
81003663:	e8 ea f3 ff ff       	call   81002a52 <read_globals>
81003668:	83 c4 04             	add    $0x4,%esp
8100366b:	83 ec 04             	sub    $0x4,%esp
8100366e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003671:	50                   	push   %eax
81003672:	6a 00                	push   $0x0
81003674:	ff 75 18             	push   0x18(%ebp)
81003677:	ff 75 14             	push   0x14(%ebp)
8100367a:	ff 75 10             	push   0x10(%ebp)
8100367d:	ff 75 0c             	push   0xc(%ebp)
81003680:	ff 75 08             	push   0x8(%ebp)
81003683:	e8 75 f4 ff ff       	call   81002afd <getopt_internal>
81003688:	83 c4 20             	add    $0x20,%esp
8100368b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100368e:	83 ec 0c             	sub    $0xc,%esp
81003691:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003694:	50                   	push   %eax
81003695:	e8 11 f4 ff ff       	call   81002aab <write_globals>
8100369a:	83 c4 10             	add    $0x10,%esp
8100369d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036a0:	c9                   	leave  
810036a1:	c3                   	ret    

810036a2 <getopt_long_only>:
810036a2:	55                   	push   %ebp
810036a3:	89 e5                	mov    %esp,%ebp
810036a5:	83 ec 28             	sub    $0x28,%esp
810036a8:	8d 45 d8             	lea    -0x28(%ebp),%eax
810036ab:	50                   	push   %eax
810036ac:	e8 a1 f3 ff ff       	call   81002a52 <read_globals>
810036b1:	83 c4 04             	add    $0x4,%esp
810036b4:	83 ec 04             	sub    $0x4,%esp
810036b7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810036ba:	50                   	push   %eax
810036bb:	6a 01                	push   $0x1
810036bd:	ff 75 18             	push   0x18(%ebp)
810036c0:	ff 75 14             	push   0x14(%ebp)
810036c3:	ff 75 10             	push   0x10(%ebp)
810036c6:	ff 75 0c             	push   0xc(%ebp)
810036c9:	ff 75 08             	push   0x8(%ebp)
810036cc:	e8 2c f4 ff ff       	call   81002afd <getopt_internal>
810036d1:	83 c4 20             	add    $0x20,%esp
810036d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036d7:	83 ec 0c             	sub    $0xc,%esp
810036da:	8d 45 d8             	lea    -0x28(%ebp),%eax
810036dd:	50                   	push   %eax
810036de:	e8 c8 f3 ff ff       	call   81002aab <write_globals>
810036e3:	83 c4 10             	add    $0x10,%esp
810036e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036e9:	c9                   	leave  
810036ea:	c3                   	ret    

810036eb <__getopt_r>:
810036eb:	55                   	push   %ebp
810036ec:	89 e5                	mov    %esp,%ebp
810036ee:	83 ec 08             	sub    $0x8,%esp
810036f1:	83 ec 04             	sub    $0x4,%esp
810036f4:	ff 75 14             	push   0x14(%ebp)
810036f7:	6a 00                	push   $0x0
810036f9:	6a 00                	push   $0x0
810036fb:	6a 00                	push   $0x0
810036fd:	ff 75 10             	push   0x10(%ebp)
81003700:	ff 75 0c             	push   0xc(%ebp)
81003703:	ff 75 08             	push   0x8(%ebp)
81003706:	e8 f2 f3 ff ff       	call   81002afd <getopt_internal>
8100370b:	83 c4 20             	add    $0x20,%esp
8100370e:	c9                   	leave  
8100370f:	c3                   	ret    

81003710 <__getopt_long_r>:
81003710:	55                   	push   %ebp
81003711:	89 e5                	mov    %esp,%ebp
81003713:	83 ec 08             	sub    $0x8,%esp
81003716:	83 ec 04             	sub    $0x4,%esp
81003719:	ff 75 1c             	push   0x1c(%ebp)
8100371c:	6a 00                	push   $0x0
8100371e:	ff 75 18             	push   0x18(%ebp)
81003721:	ff 75 14             	push   0x14(%ebp)
81003724:	ff 75 10             	push   0x10(%ebp)
81003727:	ff 75 0c             	push   0xc(%ebp)
8100372a:	ff 75 08             	push   0x8(%ebp)
8100372d:	e8 cb f3 ff ff       	call   81002afd <getopt_internal>
81003732:	83 c4 20             	add    $0x20,%esp
81003735:	c9                   	leave  
81003736:	c3                   	ret    

81003737 <__getopt_long_only_r>:
81003737:	55                   	push   %ebp
81003738:	89 e5                	mov    %esp,%ebp
8100373a:	83 ec 08             	sub    $0x8,%esp
8100373d:	83 ec 04             	sub    $0x4,%esp
81003740:	ff 75 1c             	push   0x1c(%ebp)
81003743:	6a 01                	push   $0x1
81003745:	ff 75 18             	push   0x18(%ebp)
81003748:	ff 75 14             	push   0x14(%ebp)
8100374b:	ff 75 10             	push   0x10(%ebp)
8100374e:	ff 75 0c             	push   0xc(%ebp)
81003751:	ff 75 08             	push   0x8(%ebp)
81003754:	e8 a4 f3 ff ff       	call   81002afd <getopt_internal>
81003759:	83 c4 20             	add    $0x20,%esp
8100375c:	c9                   	leave  
8100375d:	c3                   	ret    

8100375e <__getreent>:
8100375e:	55                   	push   %ebp
8100375f:	89 e5                	mov    %esp,%ebp
81003761:	a1 64 91 00 81       	mov    0x81009164,%eax
81003766:	5d                   	pop    %ebp
81003767:	c3                   	ret    

81003768 <__smakebuf_r>:
81003768:	55                   	push   %ebp
81003769:	89 e5                	mov    %esp,%ebp
8100376b:	56                   	push   %esi
8100376c:	53                   	push   %ebx
8100376d:	83 ec 10             	sub    $0x10,%esp
81003770:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003773:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003777:	98                   	cwtl   
81003778:	83 e0 02             	and    $0x2,%eax
8100377b:	85 c0                	test   %eax,%eax
8100377d:	74 16                	je     81003795 <__smakebuf_r+0x2d>
8100377f:	8d 43 43             	lea    0x43(%ebx),%eax
81003782:	89 03                	mov    %eax,(%ebx)
81003784:	8b 03                	mov    (%ebx),%eax
81003786:	89 43 10             	mov    %eax,0x10(%ebx)
81003789:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003790:	e9 b9 00 00 00       	jmp    8100384e <__smakebuf_r+0xe6>
81003795:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003798:	50                   	push   %eax
81003799:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100379c:	50                   	push   %eax
8100379d:	53                   	push   %ebx
8100379e:	ff 75 08             	push   0x8(%ebp)
810037a1:	e8 af 00 00 00       	call   81003855 <__swhatbuf_r>
810037a6:	83 c4 10             	add    $0x10,%esp
810037a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810037af:	83 ec 08             	sub    $0x8,%esp
810037b2:	50                   	push   %eax
810037b3:	ff 75 08             	push   0x8(%ebp)
810037b6:	e8 f9 03 00 00       	call   81003bb4 <_malloc_r>
810037bb:	83 c4 10             	add    $0x10,%esp
810037be:	89 c6                	mov    %eax,%esi
810037c0:	85 f6                	test   %esi,%esi
810037c2:	75 2f                	jne    810037f3 <__smakebuf_r+0x8b>
810037c4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037c8:	98                   	cwtl   
810037c9:	25 00 02 00 00       	and    $0x200,%eax
810037ce:	85 c0                	test   %eax,%eax
810037d0:	75 7c                	jne    8100384e <__smakebuf_r+0xe6>
810037d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037d6:	83 e0 fc             	and    $0xfffffffc,%eax
810037d9:	83 c8 02             	or     $0x2,%eax
810037dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037e0:	8d 43 43             	lea    0x43(%ebx),%eax
810037e3:	89 03                	mov    %eax,(%ebx)
810037e5:	8b 03                	mov    (%ebx),%eax
810037e7:	89 43 10             	mov    %eax,0x10(%ebx)
810037ea:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810037f1:	eb 5b                	jmp    8100384e <__smakebuf_r+0xe6>
810037f3:	8b 45 08             	mov    0x8(%ebp),%eax
810037f6:	c7 40 3c c6 17 00 81 	movl   $0x810017c6,0x3c(%eax)
810037fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003801:	0c 80                	or     $0x80,%al
81003803:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003807:	89 33                	mov    %esi,(%ebx)
81003809:	8b 03                	mov    (%ebx),%eax
8100380b:	89 43 10             	mov    %eax,0x10(%ebx)
8100380e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003811:	89 43 14             	mov    %eax,0x14(%ebx)
81003814:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003817:	85 c0                	test   %eax,%eax
81003819:	74 26                	je     81003841 <__smakebuf_r+0xd9>
8100381b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100381f:	98                   	cwtl   
81003820:	83 ec 08             	sub    $0x8,%esp
81003823:	50                   	push   %eax
81003824:	ff 75 08             	push   0x8(%ebp)
81003827:	e8 8c 36 00 00       	call   81006eb8 <_isatty_r>
8100382c:	83 c4 10             	add    $0x10,%esp
8100382f:	85 c0                	test   %eax,%eax
81003831:	74 0e                	je     81003841 <__smakebuf_r+0xd9>
81003833:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003837:	83 e0 fc             	and    $0xfffffffc,%eax
8100383a:	83 c8 01             	or     $0x1,%eax
8100383d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003841:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003845:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003848:	09 d0                	or     %edx,%eax
8100384a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100384e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003851:	5b                   	pop    %ebx
81003852:	5e                   	pop    %esi
81003853:	5d                   	pop    %ebp
81003854:	c3                   	ret    

81003855 <__swhatbuf_r>:
81003855:	55                   	push   %ebp
81003856:	89 e5                	mov    %esp,%ebp
81003858:	83 ec 58             	sub    $0x58,%esp
8100385b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003862:	8b 45 0c             	mov    0xc(%ebp),%eax
81003865:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003869:	66 85 c0             	test   %ax,%ax
8100386c:	78 1f                	js     8100388d <__swhatbuf_r+0x38>
8100386e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003871:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003875:	98                   	cwtl   
81003876:	83 ec 04             	sub    $0x4,%esp
81003879:	8d 55 ac             	lea    -0x54(%ebp),%edx
8100387c:	52                   	push   %edx
8100387d:	50                   	push   %eax
8100387e:	ff 75 08             	push   0x8(%ebp)
81003881:	e8 b5 ee ff ff       	call   8100273b <_fstat_r>
81003886:	83 c4 10             	add    $0x10,%esp
81003889:	85 c0                	test   %eax,%eax
8100388b:	79 35                	jns    810038c2 <__swhatbuf_r+0x6d>
8100388d:	8b 45 14             	mov    0x14(%ebp),%eax
81003890:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003896:	8b 45 0c             	mov    0xc(%ebp),%eax
81003899:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100389d:	98                   	cwtl   
8100389e:	25 80 00 00 00       	and    $0x80,%eax
810038a3:	85 c0                	test   %eax,%eax
810038a5:	74 0b                	je     810038b2 <__swhatbuf_r+0x5d>
810038a7:	8b 45 10             	mov    0x10(%ebp),%eax
810038aa:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810038b0:	eb 09                	jmp    810038bb <__swhatbuf_r+0x66>
810038b2:	8b 45 10             	mov    0x10(%ebp),%eax
810038b5:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810038bb:	b8 00 00 00 00       	mov    $0x0,%eax
810038c0:	eb 24                	jmp    810038e6 <__swhatbuf_r+0x91>
810038c2:	8b 45 b0             	mov    -0x50(%ebp),%eax
810038c5:	25 00 f0 00 00       	and    $0xf000,%eax
810038ca:	3d 00 20 00 00       	cmp    $0x2000,%eax
810038cf:	0f 94 c0             	sete   %al
810038d2:	0f b6 d0             	movzbl %al,%edx
810038d5:	8b 45 14             	mov    0x14(%ebp),%eax
810038d8:	89 10                	mov    %edx,(%eax)
810038da:	8b 45 10             	mov    0x10(%ebp),%eax
810038dd:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810038e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038e6:	c9                   	leave  
810038e7:	c3                   	ret    

810038e8 <malloc>:
810038e8:	55                   	push   %ebp
810038e9:	89 e5                	mov    %esp,%ebp
810038eb:	83 ec 08             	sub    $0x8,%esp
810038ee:	a1 64 91 00 81       	mov    0x81009164,%eax
810038f3:	83 ec 08             	sub    $0x8,%esp
810038f6:	ff 75 08             	push   0x8(%ebp)
810038f9:	50                   	push   %eax
810038fa:	e8 b5 02 00 00       	call   81003bb4 <_malloc_r>
810038ff:	83 c4 10             	add    $0x10,%esp
81003902:	c9                   	leave  
81003903:	c3                   	ret    

81003904 <free>:
81003904:	55                   	push   %ebp
81003905:	89 e5                	mov    %esp,%ebp
81003907:	83 ec 08             	sub    $0x8,%esp
8100390a:	a1 64 91 00 81       	mov    0x81009164,%eax
8100390f:	83 ec 08             	sub    $0x8,%esp
81003912:	ff 75 08             	push   0x8(%ebp)
81003915:	50                   	push   %eax
81003916:	e8 d6 e3 ff ff       	call   81001cf1 <_free_r>
8100391b:	83 c4 10             	add    $0x10,%esp
8100391e:	90                   	nop
8100391f:	c9                   	leave  
81003920:	c3                   	ret    

81003921 <malloc_extend_top>:
81003921:	55                   	push   %ebp
81003922:	89 e5                	mov    %esp,%ebp
81003924:	83 ec 38             	sub    $0x38,%esp
81003927:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100392e:	b8 80 91 00 81       	mov    $0x81009180,%eax
81003933:	8b 40 08             	mov    0x8(%eax),%eax
81003936:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003939:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100393c:	8b 40 04             	mov    0x4(%eax),%eax
8100393f:	83 e0 fc             	and    $0xfffffffc,%eax
81003942:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003945:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003948:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100394b:	01 d0                	add    %edx,%eax
8100394d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003950:	8b 15 60 9e 00 81    	mov    0x81009e60,%edx
81003956:	8b 45 0c             	mov    0xc(%ebp),%eax
81003959:	01 d0                	add    %edx,%eax
8100395b:	83 c0 10             	add    $0x10,%eax
8100395e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003961:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003968:	a1 8c 95 00 81       	mov    0x8100958c,%eax
8100396d:	83 f8 ff             	cmp    $0xffffffff,%eax
81003970:	74 15                	je     81003987 <malloc_extend_top+0x66>
81003972:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003975:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003978:	01 d0                	add    %edx,%eax
8100397a:	8d 50 ff             	lea    -0x1(%eax),%edx
8100397d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003980:	f7 d8                	neg    %eax
81003982:	21 d0                	and    %edx,%eax
81003984:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003987:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100398a:	83 ec 08             	sub    $0x8,%esp
8100398d:	50                   	push   %eax
8100398e:	ff 75 08             	push   0x8(%ebp)
81003991:	e8 bc 1c 00 00       	call   81005652 <_sbrk_r>
81003996:	83 c4 10             	add    $0x10,%esp
81003999:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100399c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810039a0:	0f 84 0b 02 00 00    	je     81003bb1 <malloc_extend_top+0x290>
810039a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039a9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810039ac:	73 0e                	jae    810039bc <malloc_extend_top+0x9b>
810039ae:	b8 80 91 00 81       	mov    $0x81009180,%eax
810039b3:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810039b6:	0f 85 f5 01 00 00    	jne    81003bb1 <malloc_extend_top+0x290>
810039bc:	a1 80 9e 00 81       	mov    0x81009e80,%eax
810039c1:	89 c2                	mov    %eax,%edx
810039c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039c6:	01 d0                	add    %edx,%eax
810039c8:	a3 80 9e 00 81       	mov    %eax,0x81009e80
810039cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039d0:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810039d3:	75 30                	jne    81003a05 <malloc_extend_top+0xe4>
810039d5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039d8:	8d 50 ff             	lea    -0x1(%eax),%edx
810039db:	8b 45 d8             	mov    -0x28(%ebp),%eax
810039de:	21 d0                	and    %edx,%eax
810039e0:	85 c0                	test   %eax,%eax
810039e2:	75 21                	jne    81003a05 <malloc_extend_top+0xe4>
810039e4:	8b 55 e8             	mov    -0x18(%ebp),%edx
810039e7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810039ea:	01 d0                	add    %edx,%eax
810039ec:	89 45 d0             	mov    %eax,-0x30(%ebp)
810039ef:	b8 80 91 00 81       	mov    $0x81009180,%eax
810039f4:	8b 40 08             	mov    0x8(%eax),%eax
810039f7:	8b 55 d0             	mov    -0x30(%ebp),%edx
810039fa:	83 ca 01             	or     $0x1,%edx
810039fd:	89 50 04             	mov    %edx,0x4(%eax)
81003a00:	e9 76 01 00 00       	jmp    81003b7b <malloc_extend_top+0x25a>
81003a05:	a1 8c 95 00 81       	mov    0x8100958c,%eax
81003a0a:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a0d:	75 0a                	jne    81003a19 <malloc_extend_top+0xf8>
81003a0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a12:	a3 8c 95 00 81       	mov    %eax,0x8100958c
81003a17:	eb 13                	jmp    81003a2c <malloc_extend_top+0x10b>
81003a19:	8b 15 80 9e 00 81    	mov    0x81009e80,%edx
81003a1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a22:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003a25:	01 d0                	add    %edx,%eax
81003a27:	a3 80 9e 00 81       	mov    %eax,0x81009e80
81003a2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a2f:	83 c0 08             	add    $0x8,%eax
81003a32:	83 e0 07             	and    $0x7,%eax
81003a35:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003a38:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003a3c:	74 13                	je     81003a51 <malloc_extend_top+0x130>
81003a3e:	b8 08 00 00 00       	mov    $0x8,%eax
81003a43:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003a46:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a49:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a4c:	01 45 f4             	add    %eax,-0xc(%ebp)
81003a4f:	eb 07                	jmp    81003a58 <malloc_extend_top+0x137>
81003a51:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a58:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a5b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a5e:	01 d0                	add    %edx,%eax
81003a60:	89 c2                	mov    %eax,%edx
81003a62:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a65:	83 e8 01             	sub    $0x1,%eax
81003a68:	21 c2                	and    %eax,%edx
81003a6a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a6d:	29 d0                	sub    %edx,%eax
81003a6f:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a72:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a75:	83 e8 01             	sub    $0x1,%eax
81003a78:	21 45 f0             	and    %eax,-0x10(%ebp)
81003a7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a7e:	83 ec 08             	sub    $0x8,%esp
81003a81:	50                   	push   %eax
81003a82:	ff 75 08             	push   0x8(%ebp)
81003a85:	e8 c8 1b 00 00       	call   81005652 <_sbrk_r>
81003a8a:	83 c4 10             	add    $0x10,%esp
81003a8d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a90:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81003a94:	75 28                	jne    81003abe <malloc_extend_top+0x19d>
81003a96:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a9d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003aa4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003aa7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003aaa:	01 d0                	add    %edx,%eax
81003aac:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003aaf:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003ab3:	74 09                	je     81003abe <malloc_extend_top+0x19d>
81003ab5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ab8:	83 e8 08             	sub    $0x8,%eax
81003abb:	01 45 ec             	add    %eax,-0x14(%ebp)
81003abe:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81003ac3:	89 c2                	mov    %eax,%edx
81003ac5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ac8:	01 d0                	add    %edx,%eax
81003aca:	a3 80 9e 00 81       	mov    %eax,0x81009e80
81003acf:	ba 80 91 00 81       	mov    $0x81009180,%edx
81003ad4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad7:	89 42 08             	mov    %eax,0x8(%edx)
81003ada:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003add:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003ae0:	89 c2                	mov    %eax,%edx
81003ae2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ae5:	01 d0                	add    %edx,%eax
81003ae7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003aea:	b8 80 91 00 81       	mov    $0x81009180,%eax
81003aef:	8b 40 08             	mov    0x8(%eax),%eax
81003af2:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003af5:	83 ca 01             	or     $0x1,%edx
81003af8:	89 50 04             	mov    %edx,0x4(%eax)
81003afb:	b8 80 91 00 81       	mov    $0x81009180,%eax
81003b00:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003b03:	74 76                	je     81003b7b <malloc_extend_top+0x25a>
81003b05:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003b09:	77 14                	ja     81003b1f <malloc_extend_top+0x1fe>
81003b0b:	b8 80 91 00 81       	mov    $0x81009180,%eax
81003b10:	8b 40 08             	mov    0x8(%eax),%eax
81003b13:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003b1a:	e9 93 00 00 00       	jmp    81003bb2 <malloc_extend_top+0x291>
81003b1f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b22:	83 e8 0c             	sub    $0xc,%eax
81003b25:	83 e0 f8             	and    $0xfffffff8,%eax
81003b28:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b2e:	8b 40 04             	mov    0x4(%eax),%eax
81003b31:	83 e0 01             	and    $0x1,%eax
81003b34:	0b 45 dc             	or     -0x24(%ebp),%eax
81003b37:	89 c2                	mov    %eax,%edx
81003b39:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b3c:	89 50 04             	mov    %edx,0x4(%eax)
81003b3f:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003b42:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b45:	01 d0                	add    %edx,%eax
81003b47:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003b4e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b51:	8d 50 04             	lea    0x4(%eax),%edx
81003b54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b57:	01 d0                	add    %edx,%eax
81003b59:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003b60:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003b64:	76 15                	jbe    81003b7b <malloc_extend_top+0x25a>
81003b66:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b69:	83 c0 08             	add    $0x8,%eax
81003b6c:	83 ec 08             	sub    $0x8,%esp
81003b6f:	50                   	push   %eax
81003b70:	ff 75 08             	push   0x8(%ebp)
81003b73:	e8 79 e1 ff ff       	call   81001cf1 <_free_r>
81003b78:	83 c4 10             	add    $0x10,%esp
81003b7b:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81003b80:	89 c2                	mov    %eax,%edx
81003b82:	a1 64 9e 00 81       	mov    0x81009e64,%eax
81003b87:	39 c2                	cmp    %eax,%edx
81003b89:	76 0a                	jbe    81003b95 <malloc_extend_top+0x274>
81003b8b:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81003b90:	a3 64 9e 00 81       	mov    %eax,0x81009e64
81003b95:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81003b9a:	89 c2                	mov    %eax,%edx
81003b9c:	a1 68 9e 00 81       	mov    0x81009e68,%eax
81003ba1:	39 c2                	cmp    %eax,%edx
81003ba3:	76 0d                	jbe    81003bb2 <malloc_extend_top+0x291>
81003ba5:	a1 80 9e 00 81       	mov    0x81009e80,%eax
81003baa:	a3 68 9e 00 81       	mov    %eax,0x81009e68
81003baf:	eb 01                	jmp    81003bb2 <malloc_extend_top+0x291>
81003bb1:	90                   	nop
81003bb2:	c9                   	leave  
81003bb3:	c3                   	ret    

81003bb4 <_malloc_r>:
81003bb4:	55                   	push   %ebp
81003bb5:	89 e5                	mov    %esp,%ebp
81003bb7:	53                   	push   %ebx
81003bb8:	83 ec 44             	sub    $0x44,%esp
81003bbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bbe:	83 c0 0b             	add    $0xb,%eax
81003bc1:	83 f8 16             	cmp    $0x16,%eax
81003bc4:	76 0b                	jbe    81003bd1 <_malloc_r+0x1d>
81003bc6:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bc9:	83 c0 0b             	add    $0xb,%eax
81003bcc:	83 e0 f8             	and    $0xfffffff8,%eax
81003bcf:	eb 05                	jmp    81003bd6 <_malloc_r+0x22>
81003bd1:	b8 10 00 00 00       	mov    $0x10,%eax
81003bd6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003bd9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003bdc:	85 c0                	test   %eax,%eax
81003bde:	78 08                	js     81003be8 <_malloc_r+0x34>
81003be0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003be3:	3b 45 0c             	cmp    0xc(%ebp),%eax
81003be6:	73 13                	jae    81003bfb <_malloc_r+0x47>
81003be8:	8b 45 08             	mov    0x8(%ebp),%eax
81003beb:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003bf1:	b8 00 00 00 00       	mov    $0x0,%eax
81003bf6:	e9 d6 07 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81003bfb:	83 ec 0c             	sub    $0xc,%esp
81003bfe:	ff 75 08             	push   0x8(%ebp)
81003c01:	e8 92 09 00 00       	call   81004598 <__malloc_lock>
81003c06:	83 c4 10             	add    $0x10,%esp
81003c09:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003c10:	0f 87 b0 00 00 00    	ja     81003cc6 <_malloc_r+0x112>
81003c16:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c19:	c1 e8 03             	shr    $0x3,%eax
81003c1c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c1f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c22:	83 c0 01             	add    $0x1,%eax
81003c25:	01 c0                	add    %eax,%eax
81003c27:	c1 e0 02             	shl    $0x2,%eax
81003c2a:	05 80 91 00 81       	add    $0x81009180,%eax
81003c2f:	83 e8 08             	sub    $0x8,%eax
81003c32:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003c35:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003c38:	8b 40 0c             	mov    0xc(%eax),%eax
81003c3b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c3e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c41:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003c44:	75 0d                	jne    81003c53 <_malloc_r+0x9f>
81003c46:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003c4a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003c4d:	8b 40 0c             	mov    0xc(%eax),%eax
81003c50:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c56:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003c59:	74 62                	je     81003cbd <_malloc_r+0x109>
81003c5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c5e:	8b 40 04             	mov    0x4(%eax),%eax
81003c61:	83 e0 fc             	and    $0xfffffffc,%eax
81003c64:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003c67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c6a:	8b 40 0c             	mov    0xc(%eax),%eax
81003c6d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c73:	8b 40 08             	mov    0x8(%eax),%eax
81003c76:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c79:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c7c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c7f:	89 50 0c             	mov    %edx,0xc(%eax)
81003c82:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c85:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c88:	89 50 08             	mov    %edx,0x8(%eax)
81003c8b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c8e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c91:	01 d0                	add    %edx,%eax
81003c93:	8b 50 04             	mov    0x4(%eax),%edx
81003c96:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003c99:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c9c:	01 c8                	add    %ecx,%eax
81003c9e:	83 ca 01             	or     $0x1,%edx
81003ca1:	89 50 04             	mov    %edx,0x4(%eax)
81003ca4:	83 ec 0c             	sub    $0xc,%esp
81003ca7:	ff 75 08             	push   0x8(%ebp)
81003caa:	e8 ef 08 00 00       	call   8100459e <__malloc_unlock>
81003caf:	83 c4 10             	add    $0x10,%esp
81003cb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cb5:	83 c0 08             	add    $0x8,%eax
81003cb8:	e9 14 07 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81003cbd:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003cc1:	e9 46 01 00 00       	jmp    81003e0c <_malloc_r+0x258>
81003cc6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cc9:	c1 e8 09             	shr    $0x9,%eax
81003ccc:	85 c0                	test   %eax,%eax
81003cce:	75 08                	jne    81003cd8 <_malloc_r+0x124>
81003cd0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cd3:	c1 e8 03             	shr    $0x3,%eax
81003cd6:	eb 77                	jmp    81003d4f <_malloc_r+0x19b>
81003cd8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cdb:	c1 e8 09             	shr    $0x9,%eax
81003cde:	83 f8 04             	cmp    $0x4,%eax
81003ce1:	77 0b                	ja     81003cee <_malloc_r+0x13a>
81003ce3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003ce6:	c1 e8 06             	shr    $0x6,%eax
81003ce9:	83 c0 38             	add    $0x38,%eax
81003cec:	eb 61                	jmp    81003d4f <_malloc_r+0x19b>
81003cee:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cf1:	c1 e8 09             	shr    $0x9,%eax
81003cf4:	83 f8 14             	cmp    $0x14,%eax
81003cf7:	77 0b                	ja     81003d04 <_malloc_r+0x150>
81003cf9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003cfc:	c1 e8 09             	shr    $0x9,%eax
81003cff:	83 c0 5b             	add    $0x5b,%eax
81003d02:	eb 4b                	jmp    81003d4f <_malloc_r+0x19b>
81003d04:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d07:	c1 e8 09             	shr    $0x9,%eax
81003d0a:	83 f8 54             	cmp    $0x54,%eax
81003d0d:	77 0b                	ja     81003d1a <_malloc_r+0x166>
81003d0f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d12:	c1 e8 0c             	shr    $0xc,%eax
81003d15:	83 c0 6e             	add    $0x6e,%eax
81003d18:	eb 35                	jmp    81003d4f <_malloc_r+0x19b>
81003d1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d1d:	c1 e8 09             	shr    $0x9,%eax
81003d20:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d25:	77 0b                	ja     81003d32 <_malloc_r+0x17e>
81003d27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d2a:	c1 e8 0f             	shr    $0xf,%eax
81003d2d:	83 c0 77             	add    $0x77,%eax
81003d30:	eb 1d                	jmp    81003d4f <_malloc_r+0x19b>
81003d32:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d35:	c1 e8 09             	shr    $0x9,%eax
81003d38:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d3d:	77 0b                	ja     81003d4a <_malloc_r+0x196>
81003d3f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d42:	c1 e8 12             	shr    $0x12,%eax
81003d45:	83 c0 7c             	add    $0x7c,%eax
81003d48:	eb 05                	jmp    81003d4f <_malloc_r+0x19b>
81003d4a:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d4f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d52:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d55:	83 c0 01             	add    $0x1,%eax
81003d58:	01 c0                	add    %eax,%eax
81003d5a:	c1 e0 02             	shl    $0x2,%eax
81003d5d:	05 80 91 00 81       	add    $0x81009180,%eax
81003d62:	83 e8 08             	sub    $0x8,%eax
81003d65:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d68:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d6b:	8b 40 0c             	mov    0xc(%eax),%eax
81003d6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d71:	e9 86 00 00 00       	jmp    81003dfc <_malloc_r+0x248>
81003d76:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d79:	8b 40 04             	mov    0x4(%eax),%eax
81003d7c:	83 e0 fc             	and    $0xfffffffc,%eax
81003d7f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d82:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d85:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d88:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d8b:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d8f:	7e 06                	jle    81003d97 <_malloc_r+0x1e3>
81003d91:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003d95:	eb 71                	jmp    81003e08 <_malloc_r+0x254>
81003d97:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003d9b:	78 56                	js     81003df3 <_malloc_r+0x23f>
81003d9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003da0:	8b 40 0c             	mov    0xc(%eax),%eax
81003da3:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003da6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003da9:	8b 40 08             	mov    0x8(%eax),%eax
81003dac:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003daf:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003db2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003db5:	89 50 0c             	mov    %edx,0xc(%eax)
81003db8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003dbb:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003dbe:	89 50 08             	mov    %edx,0x8(%eax)
81003dc1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003dc4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dc7:	01 d0                	add    %edx,%eax
81003dc9:	8b 50 04             	mov    0x4(%eax),%edx
81003dcc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003dcf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dd2:	01 c8                	add    %ecx,%eax
81003dd4:	83 ca 01             	or     $0x1,%edx
81003dd7:	89 50 04             	mov    %edx,0x4(%eax)
81003dda:	83 ec 0c             	sub    $0xc,%esp
81003ddd:	ff 75 08             	push   0x8(%ebp)
81003de0:	e8 b9 07 00 00       	call   8100459e <__malloc_unlock>
81003de5:	83 c4 10             	add    $0x10,%esp
81003de8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003deb:	83 c0 08             	add    $0x8,%eax
81003dee:	e9 de 05 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81003df3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df6:	8b 40 0c             	mov    0xc(%eax),%eax
81003df9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003dfc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dff:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003e02:	0f 85 6e ff ff ff    	jne    81003d76 <_malloc_r+0x1c2>
81003e08:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003e0c:	b8 88 91 00 81       	mov    $0x81009188,%eax
81003e11:	8b 40 08             	mov    0x8(%eax),%eax
81003e14:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e17:	b8 88 91 00 81       	mov    $0x81009188,%eax
81003e1c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003e1f:	0f 84 9c 02 00 00    	je     810040c1 <_malloc_r+0x50d>
81003e25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e28:	8b 40 04             	mov    0x4(%eax),%eax
81003e2b:	83 e0 fc             	and    $0xfffffffc,%eax
81003e2e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003e31:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e34:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003e37:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e3a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e3e:	7e 7a                	jle    81003eba <_malloc_r+0x306>
81003e40:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e43:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e46:	01 d0                	add    %edx,%eax
81003e48:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003e4b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e4e:	83 c8 01             	or     $0x1,%eax
81003e51:	89 c2                	mov    %eax,%edx
81003e53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e56:	89 50 04             	mov    %edx,0x4(%eax)
81003e59:	b8 88 91 00 81       	mov    $0x81009188,%eax
81003e5e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003e61:	89 50 0c             	mov    %edx,0xc(%eax)
81003e64:	ba 88 91 00 81       	mov    $0x81009188,%edx
81003e69:	8b 40 0c             	mov    0xc(%eax),%eax
81003e6c:	89 42 08             	mov    %eax,0x8(%edx)
81003e6f:	ba 88 91 00 81       	mov    $0x81009188,%edx
81003e74:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e77:	89 50 0c             	mov    %edx,0xc(%eax)
81003e7a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e7d:	8b 50 0c             	mov    0xc(%eax),%edx
81003e80:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e83:	89 50 08             	mov    %edx,0x8(%eax)
81003e86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e89:	83 c8 01             	or     $0x1,%eax
81003e8c:	89 c2                	mov    %eax,%edx
81003e8e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e91:	89 50 04             	mov    %edx,0x4(%eax)
81003e94:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003e97:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003e9a:	01 c2                	add    %eax,%edx
81003e9c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e9f:	89 02                	mov    %eax,(%edx)
81003ea1:	83 ec 0c             	sub    $0xc,%esp
81003ea4:	ff 75 08             	push   0x8(%ebp)
81003ea7:	e8 f2 06 00 00       	call   8100459e <__malloc_unlock>
81003eac:	83 c4 10             	add    $0x10,%esp
81003eaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eb2:	83 c0 08             	add    $0x8,%eax
81003eb5:	e9 17 05 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81003eba:	b8 88 91 00 81       	mov    $0x81009188,%eax
81003ebf:	ba 88 91 00 81       	mov    $0x81009188,%edx
81003ec4:	89 50 0c             	mov    %edx,0xc(%eax)
81003ec7:	ba 88 91 00 81       	mov    $0x81009188,%edx
81003ecc:	8b 40 0c             	mov    0xc(%eax),%eax
81003ecf:	89 42 08             	mov    %eax,0x8(%edx)
81003ed2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003ed6:	78 32                	js     81003f0a <_malloc_r+0x356>
81003ed8:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003edb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ede:	01 d0                	add    %edx,%eax
81003ee0:	8b 50 04             	mov    0x4(%eax),%edx
81003ee3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003ee6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ee9:	01 c8                	add    %ecx,%eax
81003eeb:	83 ca 01             	or     $0x1,%edx
81003eee:	89 50 04             	mov    %edx,0x4(%eax)
81003ef1:	83 ec 0c             	sub    $0xc,%esp
81003ef4:	ff 75 08             	push   0x8(%ebp)
81003ef7:	e8 a2 06 00 00       	call   8100459e <__malloc_unlock>
81003efc:	83 c4 10             	add    $0x10,%esp
81003eff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f02:	83 c0 08             	add    $0x8,%eax
81003f05:	e9 c7 04 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81003f0a:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003f11:	77 7f                	ja     81003f92 <_malloc_r+0x3de>
81003f13:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f16:	c1 e8 03             	shr    $0x3,%eax
81003f19:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003f1c:	b8 80 91 00 81       	mov    $0x81009180,%eax
81003f21:	8b 58 04             	mov    0x4(%eax),%ebx
81003f24:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f27:	8d 50 03             	lea    0x3(%eax),%edx
81003f2a:	85 c0                	test   %eax,%eax
81003f2c:	0f 48 c2             	cmovs  %edx,%eax
81003f2f:	c1 f8 02             	sar    $0x2,%eax
81003f32:	ba 01 00 00 00       	mov    $0x1,%edx
81003f37:	89 c1                	mov    %eax,%ecx
81003f39:	d3 e2                	shl    %cl,%edx
81003f3b:	89 d0                	mov    %edx,%eax
81003f3d:	ba 80 91 00 81       	mov    $0x81009180,%edx
81003f42:	09 d8                	or     %ebx,%eax
81003f44:	89 42 04             	mov    %eax,0x4(%edx)
81003f47:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f4a:	83 c0 01             	add    $0x1,%eax
81003f4d:	01 c0                	add    %eax,%eax
81003f4f:	c1 e0 02             	shl    $0x2,%eax
81003f52:	05 80 91 00 81       	add    $0x81009180,%eax
81003f57:	83 e8 08             	sub    $0x8,%eax
81003f5a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f5d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f60:	8b 40 08             	mov    0x8(%eax),%eax
81003f63:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f66:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f69:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003f6c:	89 50 0c             	mov    %edx,0xc(%eax)
81003f6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f72:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003f75:	89 50 08             	mov    %edx,0x8(%eax)
81003f78:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f7b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003f7e:	89 50 08             	mov    %edx,0x8(%eax)
81003f81:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f84:	8b 50 08             	mov    0x8(%eax),%edx
81003f87:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f8a:	89 50 0c             	mov    %edx,0xc(%eax)
81003f8d:	e9 2f 01 00 00       	jmp    810040c1 <_malloc_r+0x50d>
81003f92:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f95:	c1 e8 09             	shr    $0x9,%eax
81003f98:	85 c0                	test   %eax,%eax
81003f9a:	75 08                	jne    81003fa4 <_malloc_r+0x3f0>
81003f9c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f9f:	c1 e8 03             	shr    $0x3,%eax
81003fa2:	eb 77                	jmp    8100401b <_malloc_r+0x467>
81003fa4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fa7:	c1 e8 09             	shr    $0x9,%eax
81003faa:	83 f8 04             	cmp    $0x4,%eax
81003fad:	77 0b                	ja     81003fba <_malloc_r+0x406>
81003faf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fb2:	c1 e8 06             	shr    $0x6,%eax
81003fb5:	83 c0 38             	add    $0x38,%eax
81003fb8:	eb 61                	jmp    8100401b <_malloc_r+0x467>
81003fba:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fbd:	c1 e8 09             	shr    $0x9,%eax
81003fc0:	83 f8 14             	cmp    $0x14,%eax
81003fc3:	77 0b                	ja     81003fd0 <_malloc_r+0x41c>
81003fc5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fc8:	c1 e8 09             	shr    $0x9,%eax
81003fcb:	83 c0 5b             	add    $0x5b,%eax
81003fce:	eb 4b                	jmp    8100401b <_malloc_r+0x467>
81003fd0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fd3:	c1 e8 09             	shr    $0x9,%eax
81003fd6:	83 f8 54             	cmp    $0x54,%eax
81003fd9:	77 0b                	ja     81003fe6 <_malloc_r+0x432>
81003fdb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fde:	c1 e8 0c             	shr    $0xc,%eax
81003fe1:	83 c0 6e             	add    $0x6e,%eax
81003fe4:	eb 35                	jmp    8100401b <_malloc_r+0x467>
81003fe6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003fe9:	c1 e8 09             	shr    $0x9,%eax
81003fec:	3d 54 01 00 00       	cmp    $0x154,%eax
81003ff1:	77 0b                	ja     81003ffe <_malloc_r+0x44a>
81003ff3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ff6:	c1 e8 0f             	shr    $0xf,%eax
81003ff9:	83 c0 77             	add    $0x77,%eax
81003ffc:	eb 1d                	jmp    8100401b <_malloc_r+0x467>
81003ffe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004001:	c1 e8 09             	shr    $0x9,%eax
81004004:	3d 54 05 00 00       	cmp    $0x554,%eax
81004009:	77 0b                	ja     81004016 <_malloc_r+0x462>
8100400b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100400e:	c1 e8 12             	shr    $0x12,%eax
81004011:	83 c0 7c             	add    $0x7c,%eax
81004014:	eb 05                	jmp    8100401b <_malloc_r+0x467>
81004016:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100401b:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100401e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004021:	83 c0 01             	add    $0x1,%eax
81004024:	01 c0                	add    %eax,%eax
81004026:	c1 e0 02             	shl    $0x2,%eax
81004029:	05 80 91 00 81       	add    $0x81009180,%eax
8100402e:	83 e8 08             	sub    $0x8,%eax
81004031:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004034:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004037:	8b 40 08             	mov    0x8(%eax),%eax
8100403a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100403d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004040:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004043:	75 36                	jne    8100407b <_malloc_r+0x4c7>
81004045:	b8 80 91 00 81       	mov    $0x81009180,%eax
8100404a:	8b 58 04             	mov    0x4(%eax),%ebx
8100404d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004050:	8d 50 03             	lea    0x3(%eax),%edx
81004053:	85 c0                	test   %eax,%eax
81004055:	0f 48 c2             	cmovs  %edx,%eax
81004058:	c1 f8 02             	sar    $0x2,%eax
8100405b:	ba 01 00 00 00       	mov    $0x1,%edx
81004060:	89 c1                	mov    %eax,%ecx
81004062:	d3 e2                	shl    %cl,%edx
81004064:	89 d0                	mov    %edx,%eax
81004066:	ba 80 91 00 81       	mov    $0x81009180,%edx
8100406b:	09 d8                	or     %ebx,%eax
8100406d:	89 42 04             	mov    %eax,0x4(%edx)
81004070:	eb 28                	jmp    8100409a <_malloc_r+0x4e6>
81004072:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004075:	8b 40 08             	mov    0x8(%eax),%eax
81004078:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100407b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100407e:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004081:	74 0e                	je     81004091 <_malloc_r+0x4dd>
81004083:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004086:	8b 40 04             	mov    0x4(%eax),%eax
81004089:	83 e0 fc             	and    $0xfffffffc,%eax
8100408c:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100408f:	72 e1                	jb     81004072 <_malloc_r+0x4be>
81004091:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004094:	8b 40 0c             	mov    0xc(%eax),%eax
81004097:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100409a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100409d:	8b 55 d8             	mov    -0x28(%ebp),%edx
810040a0:	89 50 0c             	mov    %edx,0xc(%eax)
810040a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040a6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810040a9:	89 50 08             	mov    %edx,0x8(%eax)
810040ac:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040af:	8b 55 f4             	mov    -0xc(%ebp),%edx
810040b2:	89 50 08             	mov    %edx,0x8(%eax)
810040b5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040b8:	8b 50 08             	mov    0x8(%eax),%edx
810040bb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040be:	89 50 0c             	mov    %edx,0xc(%eax)
810040c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040c4:	8d 50 03             	lea    0x3(%eax),%edx
810040c7:	85 c0                	test   %eax,%eax
810040c9:	0f 48 c2             	cmovs  %edx,%eax
810040cc:	c1 f8 02             	sar    $0x2,%eax
810040cf:	ba 01 00 00 00       	mov    $0x1,%edx
810040d4:	89 c1                	mov    %eax,%ecx
810040d6:	d3 e2                	shl    %cl,%edx
810040d8:	89 d0                	mov    %edx,%eax
810040da:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810040dd:	b8 80 91 00 81       	mov    $0x81009180,%eax
810040e2:	8b 40 04             	mov    0x4(%eax),%eax
810040e5:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810040e8:	0f 87 13 02 00 00    	ja     81004301 <_malloc_r+0x74d>
810040ee:	b8 80 91 00 81       	mov    $0x81009180,%eax
810040f3:	8b 40 04             	mov    0x4(%eax),%eax
810040f6:	23 45 e4             	and    -0x1c(%ebp),%eax
810040f9:	85 c0                	test   %eax,%eax
810040fb:	75 27                	jne    81004124 <_malloc_r+0x570>
810040fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004100:	83 e0 fc             	and    $0xfffffffc,%eax
81004103:	83 c0 04             	add    $0x4,%eax
81004106:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004109:	d1 65 e4             	shll   -0x1c(%ebp)
8100410c:	eb 07                	jmp    81004115 <_malloc_r+0x561>
8100410e:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004112:	d1 65 e4             	shll   -0x1c(%ebp)
81004115:	b8 80 91 00 81       	mov    $0x81009180,%eax
8100411a:	8b 40 04             	mov    0x4(%eax),%eax
8100411d:	23 45 e4             	and    -0x1c(%ebp),%eax
81004120:	85 c0                	test   %eax,%eax
81004122:	74 ea                	je     8100410e <_malloc_r+0x55a>
81004124:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004127:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100412a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100412d:	83 c0 01             	add    $0x1,%eax
81004130:	01 c0                	add    %eax,%eax
81004132:	c1 e0 02             	shl    $0x2,%eax
81004135:	05 80 91 00 81       	add    $0x81009180,%eax
8100413a:	83 e8 08             	sub    $0x8,%eax
8100413d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004140:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004143:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004146:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004149:	8b 40 0c             	mov    0xc(%eax),%eax
8100414c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100414f:	e9 22 01 00 00       	jmp    81004276 <_malloc_r+0x6c2>
81004154:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004157:	8b 40 04             	mov    0x4(%eax),%eax
8100415a:	83 e0 fc             	and    $0xfffffffc,%eax
8100415d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004160:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004163:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004166:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004169:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100416d:	0f 8e 9e 00 00 00    	jle    81004211 <_malloc_r+0x65d>
81004173:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004176:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004179:	01 d0                	add    %edx,%eax
8100417b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100417e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004181:	83 c8 01             	or     $0x1,%eax
81004184:	89 c2                	mov    %eax,%edx
81004186:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004189:	89 50 04             	mov    %edx,0x4(%eax)
8100418c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418f:	8b 40 0c             	mov    0xc(%eax),%eax
81004192:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004195:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004198:	8b 40 08             	mov    0x8(%eax),%eax
8100419b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100419e:	8b 45 dc             	mov    -0x24(%ebp),%eax
810041a1:	8b 55 d8             	mov    -0x28(%ebp),%edx
810041a4:	89 50 0c             	mov    %edx,0xc(%eax)
810041a7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041aa:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041ad:	89 50 08             	mov    %edx,0x8(%eax)
810041b0:	b8 88 91 00 81       	mov    $0x81009188,%eax
810041b5:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810041b8:	89 50 0c             	mov    %edx,0xc(%eax)
810041bb:	ba 88 91 00 81       	mov    $0x81009188,%edx
810041c0:	8b 40 0c             	mov    0xc(%eax),%eax
810041c3:	89 42 08             	mov    %eax,0x8(%edx)
810041c6:	ba 88 91 00 81       	mov    $0x81009188,%edx
810041cb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041ce:	89 50 0c             	mov    %edx,0xc(%eax)
810041d1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041d4:	8b 50 0c             	mov    0xc(%eax),%edx
810041d7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041da:	89 50 08             	mov    %edx,0x8(%eax)
810041dd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810041e0:	83 c8 01             	or     $0x1,%eax
810041e3:	89 c2                	mov    %eax,%edx
810041e5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041e8:	89 50 04             	mov    %edx,0x4(%eax)
810041eb:	8b 55 e8             	mov    -0x18(%ebp),%edx
810041ee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810041f1:	01 c2                	add    %eax,%edx
810041f3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810041f6:	89 02                	mov    %eax,(%edx)
810041f8:	83 ec 0c             	sub    $0xc,%esp
810041fb:	ff 75 08             	push   0x8(%ebp)
810041fe:	e8 9b 03 00 00       	call   8100459e <__malloc_unlock>
81004203:	83 c4 10             	add    $0x10,%esp
81004206:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004209:	83 c0 08             	add    $0x8,%eax
8100420c:	e9 c0 01 00 00       	jmp    810043d1 <_malloc_r+0x81d>
81004211:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004215:	78 56                	js     8100426d <_malloc_r+0x6b9>
81004217:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100421a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100421d:	01 d0                	add    %edx,%eax
8100421f:	8b 50 04             	mov    0x4(%eax),%edx
81004222:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004225:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004228:	01 c8                	add    %ecx,%eax
8100422a:	83 ca 01             	or     $0x1,%edx
8100422d:	89 50 04             	mov    %edx,0x4(%eax)
81004230:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004233:	8b 40 0c             	mov    0xc(%eax),%eax
81004236:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004239:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100423c:	8b 40 08             	mov    0x8(%eax),%eax
8100423f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004242:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004245:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004248:	89 50 0c             	mov    %edx,0xc(%eax)
8100424b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100424e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004251:	89 50 08             	mov    %edx,0x8(%eax)
81004254:	83 ec 0c             	sub    $0xc,%esp
81004257:	ff 75 08             	push   0x8(%ebp)
8100425a:	e8 3f 03 00 00       	call   8100459e <__malloc_unlock>
8100425f:	83 c4 10             	add    $0x10,%esp
81004262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004265:	83 c0 08             	add    $0x8,%eax
81004268:	e9 64 01 00 00       	jmp    810043d1 <_malloc_r+0x81d>
8100426d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004270:	8b 40 0c             	mov    0xc(%eax),%eax
81004273:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004276:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004279:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100427c:	0f 85 d2 fe ff ff    	jne    81004154 <_malloc_r+0x5a0>
81004282:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004286:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100428a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100428d:	83 e0 03             	and    $0x3,%eax
81004290:	85 c0                	test   %eax,%eax
81004292:	0f 85 ae fe ff ff    	jne    81004146 <_malloc_r+0x592>
81004298:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100429b:	83 e0 03             	and    $0x3,%eax
8100429e:	85 c0                	test   %eax,%eax
810042a0:	75 19                	jne    810042bb <_malloc_r+0x707>
810042a2:	b8 80 91 00 81       	mov    $0x81009180,%eax
810042a7:	8b 48 04             	mov    0x4(%eax),%ecx
810042aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810042ad:	f7 d0                	not    %eax
810042af:	ba 80 91 00 81       	mov    $0x81009180,%edx
810042b4:	21 c8                	and    %ecx,%eax
810042b6:	89 42 04             	mov    %eax,0x4(%edx)
810042b9:	eb 13                	jmp    810042ce <_malloc_r+0x71a>
810042bb:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810042bf:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810042c3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810042c6:	8b 40 08             	mov    0x8(%eax),%eax
810042c9:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810042cc:	74 ca                	je     81004298 <_malloc_r+0x6e4>
810042ce:	d1 65 e4             	shll   -0x1c(%ebp)
810042d1:	b8 80 91 00 81       	mov    $0x81009180,%eax
810042d6:	8b 40 04             	mov    0x4(%eax),%eax
810042d9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810042dc:	77 23                	ja     81004301 <_malloc_r+0x74d>
810042de:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810042e2:	74 1d                	je     81004301 <_malloc_r+0x74d>
810042e4:	eb 07                	jmp    810042ed <_malloc_r+0x739>
810042e6:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810042ea:	d1 65 e4             	shll   -0x1c(%ebp)
810042ed:	b8 80 91 00 81       	mov    $0x81009180,%eax
810042f2:	8b 40 04             	mov    0x4(%eax),%eax
810042f5:	23 45 e4             	and    -0x1c(%ebp),%eax
810042f8:	85 c0                	test   %eax,%eax
810042fa:	74 ea                	je     810042e6 <_malloc_r+0x732>
810042fc:	e9 23 fe ff ff       	jmp    81004124 <_malloc_r+0x570>
81004301:	b8 80 91 00 81       	mov    $0x81009180,%eax
81004306:	8b 40 08             	mov    0x8(%eax),%eax
81004309:	8b 40 04             	mov    0x4(%eax),%eax
8100430c:	83 e0 fc             	and    $0xfffffffc,%eax
8100430f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004312:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004315:	b8 80 91 00 81       	mov    $0x81009180,%eax
8100431a:	8b 40 08             	mov    0x8(%eax),%eax
8100431d:	8b 40 04             	mov    0x4(%eax),%eax
81004320:	83 e0 fc             	and    $0xfffffffc,%eax
81004323:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004326:	77 06                	ja     8100432e <_malloc_r+0x77a>
81004328:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100432c:	7f 53                	jg     81004381 <_malloc_r+0x7cd>
8100432e:	83 ec 08             	sub    $0x8,%esp
81004331:	ff 75 d0             	push   -0x30(%ebp)
81004334:	ff 75 08             	push   0x8(%ebp)
81004337:	e8 e5 f5 ff ff       	call   81003921 <malloc_extend_top>
8100433c:	83 c4 10             	add    $0x10,%esp
8100433f:	b8 80 91 00 81       	mov    $0x81009180,%eax
81004344:	8b 40 08             	mov    0x8(%eax),%eax
81004347:	8b 40 04             	mov    0x4(%eax),%eax
8100434a:	83 e0 fc             	and    $0xfffffffc,%eax
8100434d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004350:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004353:	b8 80 91 00 81       	mov    $0x81009180,%eax
81004358:	8b 40 08             	mov    0x8(%eax),%eax
8100435b:	8b 40 04             	mov    0x4(%eax),%eax
8100435e:	83 e0 fc             	and    $0xfffffffc,%eax
81004361:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004364:	77 06                	ja     8100436c <_malloc_r+0x7b8>
81004366:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100436a:	7f 15                	jg     81004381 <_malloc_r+0x7cd>
8100436c:	83 ec 0c             	sub    $0xc,%esp
8100436f:	ff 75 08             	push   0x8(%ebp)
81004372:	e8 27 02 00 00       	call   8100459e <__malloc_unlock>
81004377:	83 c4 10             	add    $0x10,%esp
8100437a:	b8 00 00 00 00       	mov    $0x0,%eax
8100437f:	eb 50                	jmp    810043d1 <_malloc_r+0x81d>
81004381:	b8 80 91 00 81       	mov    $0x81009180,%eax
81004386:	8b 40 08             	mov    0x8(%eax),%eax
81004389:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100438c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100438f:	83 c8 01             	or     $0x1,%eax
81004392:	89 c2                	mov    %eax,%edx
81004394:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004397:	89 50 04             	mov    %edx,0x4(%eax)
8100439a:	ba 80 91 00 81       	mov    $0x81009180,%edx
8100439f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043a2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810043a5:	01 c8                	add    %ecx,%eax
810043a7:	89 42 08             	mov    %eax,0x8(%edx)
810043aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
810043ad:	83 c8 01             	or     $0x1,%eax
810043b0:	89 c2                	mov    %eax,%edx
810043b2:	b8 80 91 00 81       	mov    $0x81009180,%eax
810043b7:	8b 40 08             	mov    0x8(%eax),%eax
810043ba:	89 50 04             	mov    %edx,0x4(%eax)
810043bd:	83 ec 0c             	sub    $0xc,%esp
810043c0:	ff 75 08             	push   0x8(%ebp)
810043c3:	e8 d6 01 00 00       	call   8100459e <__malloc_unlock>
810043c8:	83 c4 10             	add    $0x10,%esp
810043cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043ce:	83 c0 08             	add    $0x8,%eax
810043d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810043d4:	c9                   	leave  
810043d5:	c3                   	ret    
810043d6:	66 90                	xchg   %ax,%ax
810043d8:	66 90                	xchg   %ax,%ax
810043da:	66 90                	xchg   %ax,%ax
810043dc:	66 90                	xchg   %ax,%ax
810043de:	66 90                	xchg   %ax,%ax

810043e0 <memchr>:
810043e0:	55                   	push   %ebp
810043e1:	89 e5                	mov    %esp,%ebp
810043e3:	57                   	push   %edi
810043e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810043e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043eb:	8b 7d 08             	mov    0x8(%ebp),%edi
810043ee:	31 d2                	xor    %edx,%edx
810043f0:	85 c9                	test   %ecx,%ecx
810043f2:	74 79                	je     8100446d <L20>
810043f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043fa:	74 28                	je     81004424 <L5>
810043fc:	3a 07                	cmp    (%edi),%al
810043fe:	74 6a                	je     8100446a <L15>
81004400:	47                   	inc    %edi
81004401:	49                   	dec    %ecx
81004402:	74 69                	je     8100446d <L20>
81004404:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100440a:	74 18                	je     81004424 <L5>
8100440c:	3a 07                	cmp    (%edi),%al
8100440e:	74 5a                	je     8100446a <L15>
81004410:	47                   	inc    %edi
81004411:	49                   	dec    %ecx
81004412:	74 59                	je     8100446d <L20>
81004414:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100441a:	74 08                	je     81004424 <L5>
8100441c:	3a 07                	cmp    (%edi),%al
8100441e:	74 4a                	je     8100446a <L15>
81004420:	47                   	inc    %edi
81004421:	49                   	dec    %ecx
81004422:	74 49                	je     8100446d <L20>

81004424 <L5>:
81004424:	88 c4                	mov    %al,%ah
81004426:	89 c2                	mov    %eax,%edx
81004428:	c1 e2 10             	shl    $0x10,%edx
8100442b:	09 d0                	or     %edx,%eax
8100442d:	53                   	push   %ebx
8100442e:	66 90                	xchg   %ax,%ax

81004430 <L8>:
81004430:	83 e9 04             	sub    $0x4,%ecx
81004433:	72 1c                	jb     81004451 <L9>
81004435:	8b 17                	mov    (%edi),%edx
81004437:	83 c7 04             	add    $0x4,%edi
8100443a:	31 c2                	xor    %eax,%edx
8100443c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004442:	f7 d2                	not    %edx
81004444:	21 d3                	and    %edx,%ebx
81004446:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100444c:	74 e2                	je     81004430 <L8>
8100444e:	83 ef 04             	sub    $0x4,%edi

81004451 <L9>:
81004451:	5b                   	pop    %ebx
81004452:	31 d2                	xor    %edx,%edx
81004454:	83 c1 04             	add    $0x4,%ecx
81004457:	74 14                	je     8100446d <L20>
81004459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004460 <L10>:
81004460:	3a 07                	cmp    (%edi),%al
81004462:	74 06                	je     8100446a <L15>
81004464:	47                   	inc    %edi
81004465:	49                   	dec    %ecx
81004466:	75 f8                	jne    81004460 <L10>
81004468:	31 ff                	xor    %edi,%edi

8100446a <L15>:
8100446a:	4a                   	dec    %edx
8100446b:	21 fa                	and    %edi,%edx

8100446d <L20>:
8100446d:	89 d0                	mov    %edx,%eax
8100446f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004472:	5f                   	pop    %edi
81004473:	c9                   	leave  
81004474:	c3                   	ret    

81004475 <memcmp>:
81004475:	55                   	push   %ebp
81004476:	89 e5                	mov    %esp,%ebp
81004478:	83 ec 10             	sub    $0x10,%esp
8100447b:	53                   	push   %ebx
8100447c:	57                   	push   %edi
8100447d:	56                   	push   %esi
8100447e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004481:	8b 75 0c             	mov    0xc(%ebp),%esi
81004484:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004487:	fc                   	cld    
81004488:	31 c0                	xor    %eax,%eax
8100448a:	85 c9                	test   %ecx,%ecx
8100448c:	74 31                	je     810044bf <L4>
8100448e:	89 f8                	mov    %edi,%eax
81004490:	09 f0                	or     %esi,%eax
81004492:	a8 03                	test   $0x3,%al
81004494:	75 1b                	jne    810044b1 <BYTECMP>
81004496:	89 cb                	mov    %ecx,%ebx
81004498:	c1 e9 02             	shr    $0x2,%ecx
8100449b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100449d:	74 0d                	je     810044ac <L5>
8100449f:	83 ee 04             	sub    $0x4,%esi
810044a2:	83 ef 04             	sub    $0x4,%edi
810044a5:	b9 04 00 00 00       	mov    $0x4,%ecx
810044aa:	eb 05                	jmp    810044b1 <BYTECMP>

810044ac <L5>:
810044ac:	83 e3 03             	and    $0x3,%ebx
810044af:	89 d9                	mov    %ebx,%ecx

810044b1 <BYTECMP>:
810044b1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810044b3 <L3>:
810044b3:	31 d2                	xor    %edx,%edx
810044b5:	8a 56 ff             	mov    -0x1(%esi),%dl
810044b8:	31 c0                	xor    %eax,%eax
810044ba:	8a 47 ff             	mov    -0x1(%edi),%al
810044bd:	29 d0                	sub    %edx,%eax

810044bf <L4>:
810044bf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810044c2:	5e                   	pop    %esi
810044c3:	5f                   	pop    %edi
810044c4:	5b                   	pop    %ebx
810044c5:	c9                   	leave  
810044c6:	c3                   	ret    
810044c7:	90                   	nop

810044c8 <memcpy>:
810044c8:	55                   	push   %ebp
810044c9:	89 e5                	mov    %esp,%ebp
810044cb:	56                   	push   %esi
810044cc:	57                   	push   %edi
810044cd:	53                   	push   %ebx
810044ce:	8b 7d 08             	mov    0x8(%ebp),%edi
810044d1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810044d4:	8b 75 0c             	mov    0xc(%ebp),%esi
810044d7:	fc                   	cld    
810044d8:	83 f9 08             	cmp    $0x8,%ecx
810044db:	76 26                	jbe    81004503 <memcpy+0x3b>
810044dd:	89 fa                	mov    %edi,%edx
810044df:	89 cb                	mov    %ecx,%ebx
810044e1:	83 e2 03             	and    $0x3,%edx
810044e4:	74 10                	je     810044f6 <memcpy+0x2e>
810044e6:	b9 04 00 00 00       	mov    $0x4,%ecx
810044eb:	29 d1                	sub    %edx,%ecx
810044ed:	83 e1 03             	and    $0x3,%ecx
810044f0:	29 cb                	sub    %ecx,%ebx
810044f2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044f4:	89 d9                	mov    %ebx,%ecx
810044f6:	c1 e9 02             	shr    $0x2,%ecx
810044f9:	8d 76 00             	lea    0x0(%esi),%esi
810044fc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810044fe:	89 d9                	mov    %ebx,%ecx
81004500:	83 e1 03             	and    $0x3,%ecx
81004503:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004505:	8b 45 08             	mov    0x8(%ebp),%eax
81004508:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100450b:	5b                   	pop    %ebx
8100450c:	5f                   	pop    %edi
8100450d:	5e                   	pop    %esi
8100450e:	c9                   	leave  
8100450f:	c3                   	ret    

81004510 <memset>:
81004510:	55                   	push   %ebp
81004511:	89 e5                	mov    %esp,%ebp
81004513:	57                   	push   %edi
81004514:	8b 7d 08             	mov    0x8(%ebp),%edi
81004517:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100451b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100451e:	fc                   	cld    
8100451f:	83 f9 10             	cmp    $0x10,%ecx
81004522:	76 69                	jbe    8100458d <memset+0x7d>
81004524:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100452a:	74 4c                	je     81004578 <memset+0x68>
8100452c:	88 07                	mov    %al,(%edi)
8100452e:	47                   	inc    %edi
8100452f:	49                   	dec    %ecx
81004530:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004536:	74 40                	je     81004578 <memset+0x68>
81004538:	88 07                	mov    %al,(%edi)
8100453a:	47                   	inc    %edi
8100453b:	49                   	dec    %ecx
8100453c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004542:	74 34                	je     81004578 <memset+0x68>
81004544:	88 07                	mov    %al,(%edi)
81004546:	47                   	inc    %edi
81004547:	49                   	dec    %ecx
81004548:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100454e:	74 28                	je     81004578 <memset+0x68>
81004550:	88 07                	mov    %al,(%edi)
81004552:	47                   	inc    %edi
81004553:	49                   	dec    %ecx
81004554:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100455a:	74 1c                	je     81004578 <memset+0x68>
8100455c:	88 07                	mov    %al,(%edi)
8100455e:	47                   	inc    %edi
8100455f:	49                   	dec    %ecx
81004560:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004566:	74 10                	je     81004578 <memset+0x68>
81004568:	88 07                	mov    %al,(%edi)
8100456a:	47                   	inc    %edi
8100456b:	49                   	dec    %ecx
8100456c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004572:	74 04                	je     81004578 <memset+0x68>
81004574:	88 07                	mov    %al,(%edi)
81004576:	47                   	inc    %edi
81004577:	49                   	dec    %ecx
81004578:	88 c4                	mov    %al,%ah
8100457a:	89 c2                	mov    %eax,%edx
8100457c:	c1 e2 10             	shl    $0x10,%edx
8100457f:	09 d0                	or     %edx,%eax
81004581:	89 ca                	mov    %ecx,%edx
81004583:	c1 e9 02             	shr    $0x2,%ecx
81004586:	83 e2 03             	and    $0x3,%edx
81004589:	f3 ab                	rep stos %eax,%es:(%edi)
8100458b:	89 d1                	mov    %edx,%ecx
8100458d:	f3 aa                	rep stos %al,%es:(%edi)
8100458f:	8b 45 08             	mov    0x8(%ebp),%eax
81004592:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004595:	5f                   	pop    %edi
81004596:	c9                   	leave  
81004597:	c3                   	ret    

81004598 <__malloc_lock>:
81004598:	55                   	push   %ebp
81004599:	89 e5                	mov    %esp,%ebp
8100459b:	90                   	nop
8100459c:	5d                   	pop    %ebp
8100459d:	c3                   	ret    

8100459e <__malloc_unlock>:
8100459e:	55                   	push   %ebp
8100459f:	89 e5                	mov    %esp,%ebp
810045a1:	90                   	nop
810045a2:	5d                   	pop    %ebp
810045a3:	c3                   	ret    

810045a4 <__sprint_r>:
810045a4:	55                   	push   %ebp
810045a5:	89 e5                	mov    %esp,%ebp
810045a7:	56                   	push   %esi
810045a8:	53                   	push   %ebx
810045a9:	83 ec 10             	sub    $0x10,%esp
810045ac:	8b 5d 10             	mov    0x10(%ebp),%ebx
810045af:	be 00 00 00 00       	mov    $0x0,%esi
810045b4:	8b 43 08             	mov    0x8(%ebx),%eax
810045b7:	85 c0                	test   %eax,%eax
810045b9:	75 11                	jne    810045cc <__sprint_r+0x28>
810045bb:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810045c2:	b8 00 00 00 00       	mov    $0x0,%eax
810045c7:	e9 ad 00 00 00       	jmp    81004679 <__sprint_r+0xd5>
810045cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810045cf:	8b 40 64             	mov    0x64(%eax),%eax
810045d2:	25 00 20 00 00       	and    $0x2000,%eax
810045d7:	85 c0                	test   %eax,%eax
810045d9:	74 7a                	je     81004655 <__sprint_r+0xb1>
810045db:	8b 03                	mov    (%ebx),%eax
810045dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045e0:	eb 6a                	jmp    8100464c <__sprint_r+0xa8>
810045e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045e5:	8b 00                	mov    (%eax),%eax
810045e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810045ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ed:	8b 40 04             	mov    0x4(%eax),%eax
810045f0:	c1 e8 02             	shr    $0x2,%eax
810045f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810045f6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810045fd:	eb 33                	jmp    81004632 <__sprint_r+0x8e>
810045ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004602:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004609:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100460c:	01 d0                	add    %edx,%eax
8100460e:	8b 00                	mov    (%eax),%eax
81004610:	83 ec 04             	sub    $0x4,%esp
81004613:	ff 75 0c             	push   0xc(%ebp)
81004616:	50                   	push   %eax
81004617:	ff 75 08             	push   0x8(%ebp)
8100461a:	e8 3c 21 00 00       	call   8100675b <_fputwc_r>
8100461f:	83 c4 10             	add    $0x10,%esp
81004622:	83 f8 ff             	cmp    $0xffffffff,%eax
81004625:	75 07                	jne    8100462e <__sprint_r+0x8a>
81004627:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100462c:	eb 3b                	jmp    81004669 <__sprint_r+0xc5>
8100462e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004632:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004635:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004638:	7c c5                	jl     810045ff <__sprint_r+0x5b>
8100463a:	8b 43 08             	mov    0x8(%ebx),%eax
8100463d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004640:	c1 e2 02             	shl    $0x2,%edx
81004643:	29 d0                	sub    %edx,%eax
81004645:	89 43 08             	mov    %eax,0x8(%ebx)
81004648:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100464c:	8b 43 08             	mov    0x8(%ebx),%eax
8100464f:	85 c0                	test   %eax,%eax
81004651:	75 8f                	jne    810045e2 <__sprint_r+0x3e>
81004653:	eb 14                	jmp    81004669 <__sprint_r+0xc5>
81004655:	83 ec 04             	sub    $0x4,%esp
81004658:	53                   	push   %ebx
81004659:	ff 75 0c             	push   0xc(%ebp)
8100465c:	ff 75 08             	push   0x8(%ebp)
8100465f:	e8 96 21 00 00       	call   810067fa <__sfvwrite_r>
81004664:	83 c4 10             	add    $0x10,%esp
81004667:	89 c6                	mov    %eax,%esi
81004669:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004670:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004677:	89 f0                	mov    %esi,%eax
81004679:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100467c:	5b                   	pop    %ebx
8100467d:	5e                   	pop    %esi
8100467e:	5d                   	pop    %ebp
8100467f:	c3                   	ret    

81004680 <__sfputc_r>:
81004680:	55                   	push   %ebp
81004681:	89 e5                	mov    %esp,%ebp
81004683:	83 ec 08             	sub    $0x8,%esp
81004686:	8b 45 10             	mov    0x10(%ebp),%eax
81004689:	8b 40 08             	mov    0x8(%eax),%eax
8100468c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100468f:	8b 45 10             	mov    0x10(%ebp),%eax
81004692:	89 50 08             	mov    %edx,0x8(%eax)
81004695:	8b 45 10             	mov    0x10(%ebp),%eax
81004698:	8b 40 08             	mov    0x8(%eax),%eax
8100469b:	85 c0                	test   %eax,%eax
8100469d:	79 17                	jns    810046b6 <__sfputc_r+0x36>
8100469f:	8b 45 10             	mov    0x10(%ebp),%eax
810046a2:	8b 50 08             	mov    0x8(%eax),%edx
810046a5:	8b 45 10             	mov    0x10(%ebp),%eax
810046a8:	8b 40 18             	mov    0x18(%eax),%eax
810046ab:	39 c2                	cmp    %eax,%edx
810046ad:	7c 21                	jl     810046d0 <__sfputc_r+0x50>
810046af:	8b 45 0c             	mov    0xc(%ebp),%eax
810046b2:	3c 0a                	cmp    $0xa,%al
810046b4:	74 1a                	je     810046d0 <__sfputc_r+0x50>
810046b6:	8b 45 10             	mov    0x10(%ebp),%eax
810046b9:	8b 00                	mov    (%eax),%eax
810046bb:	8d 48 01             	lea    0x1(%eax),%ecx
810046be:	8b 55 10             	mov    0x10(%ebp),%edx
810046c1:	89 0a                	mov    %ecx,(%edx)
810046c3:	8b 55 0c             	mov    0xc(%ebp),%edx
810046c6:	88 10                	mov    %dl,(%eax)
810046c8:	0f b6 00             	movzbl (%eax),%eax
810046cb:	0f b6 c0             	movzbl %al,%eax
810046ce:	eb 14                	jmp    810046e4 <__sfputc_r+0x64>
810046d0:	83 ec 04             	sub    $0x4,%esp
810046d3:	ff 75 10             	push   0x10(%ebp)
810046d6:	ff 75 0c             	push   0xc(%ebp)
810046d9:	ff 75 08             	push   0x8(%ebp)
810046dc:	e8 1e 19 00 00       	call   81005fff <__swbuf_r>
810046e1:	83 c4 10             	add    $0x10,%esp
810046e4:	c9                   	leave  
810046e5:	c3                   	ret    

810046e6 <__sfputs_r>:
810046e6:	55                   	push   %ebp
810046e7:	89 e5                	mov    %esp,%ebp
810046e9:	53                   	push   %ebx
810046ea:	83 ec 14             	sub    $0x14,%esp
810046ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810046f0:	8b 40 64             	mov    0x64(%eax),%eax
810046f3:	25 00 20 00 00       	and    $0x2000,%eax
810046f8:	85 c0                	test   %eax,%eax
810046fa:	74 4c                	je     81004748 <__sfputs_r+0x62>
810046fc:	8b 45 10             	mov    0x10(%ebp),%eax
810046ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004702:	bb 00 00 00 00       	mov    $0x0,%ebx
81004707:	eb 31                	jmp    8100473a <__sfputs_r+0x54>
81004709:	89 d8                	mov    %ebx,%eax
8100470b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004712:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004715:	01 d0                	add    %edx,%eax
81004717:	8b 00                	mov    (%eax),%eax
81004719:	83 ec 04             	sub    $0x4,%esp
8100471c:	ff 75 0c             	push   0xc(%ebp)
8100471f:	50                   	push   %eax
81004720:	ff 75 08             	push   0x8(%ebp)
81004723:	e8 33 20 00 00       	call   8100675b <_fputwc_r>
81004728:	83 c4 10             	add    $0x10,%esp
8100472b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100472e:	75 07                	jne    81004737 <__sfputs_r+0x51>
81004730:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004735:	eb 52                	jmp    81004789 <__sfputs_r+0xa3>
81004737:	83 c3 01             	add    $0x1,%ebx
8100473a:	8b 45 14             	mov    0x14(%ebp),%eax
8100473d:	c1 e8 02             	shr    $0x2,%eax
81004740:	89 da                	mov    %ebx,%edx
81004742:	39 d0                	cmp    %edx,%eax
81004744:	77 c3                	ja     81004709 <__sfputs_r+0x23>
81004746:	eb 3c                	jmp    81004784 <__sfputs_r+0x9e>
81004748:	bb 00 00 00 00       	mov    $0x0,%ebx
8100474d:	eb 2e                	jmp    8100477d <__sfputs_r+0x97>
8100474f:	89 da                	mov    %ebx,%edx
81004751:	8b 45 10             	mov    0x10(%ebp),%eax
81004754:	01 d0                	add    %edx,%eax
81004756:	0f b6 00             	movzbl (%eax),%eax
81004759:	0f be c0             	movsbl %al,%eax
8100475c:	83 ec 04             	sub    $0x4,%esp
8100475f:	ff 75 0c             	push   0xc(%ebp)
81004762:	50                   	push   %eax
81004763:	ff 75 08             	push   0x8(%ebp)
81004766:	e8 15 ff ff ff       	call   81004680 <__sfputc_r>
8100476b:	83 c4 10             	add    $0x10,%esp
8100476e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004771:	75 07                	jne    8100477a <__sfputs_r+0x94>
81004773:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004778:	eb 0f                	jmp    81004789 <__sfputs_r+0xa3>
8100477a:	83 c3 01             	add    $0x1,%ebx
8100477d:	89 d8                	mov    %ebx,%eax
8100477f:	39 45 14             	cmp    %eax,0x14(%ebp)
81004782:	77 cb                	ja     8100474f <__sfputs_r+0x69>
81004784:	b8 00 00 00 00       	mov    $0x0,%eax
81004789:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100478c:	c9                   	leave  
8100478d:	c3                   	ret    

8100478e <vfiprintf>:
8100478e:	55                   	push   %ebp
8100478f:	89 e5                	mov    %esp,%ebp
81004791:	83 ec 18             	sub    $0x18,%esp
81004794:	a1 64 91 00 81       	mov    0x81009164,%eax
81004799:	ff 75 10             	push   0x10(%ebp)
8100479c:	ff 75 0c             	push   0xc(%ebp)
8100479f:	ff 75 08             	push   0x8(%ebp)
810047a2:	50                   	push   %eax
810047a3:	e8 0b 00 00 00       	call   810047b3 <_vfiprintf_r>
810047a8:	83 c4 10             	add    $0x10,%esp
810047ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
810047ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047b1:	c9                   	leave  
810047b2:	c3                   	ret    

810047b3 <_vfiprintf_r>:
810047b3:	55                   	push   %ebp
810047b4:	89 e5                	mov    %esp,%ebp
810047b6:	57                   	push   %edi
810047b7:	56                   	push   %esi
810047b8:	53                   	push   %ebx
810047b9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810047bf:	c7 45 e4 e6 46 00 81 	movl   $0x810046e6,-0x1c(%ebp)
810047c6:	8b 45 08             	mov    0x8(%ebp),%eax
810047c9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810047cc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810047d0:	74 18                	je     810047ea <_vfiprintf_r+0x37>
810047d2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810047d5:	8b 40 38             	mov    0x38(%eax),%eax
810047d8:	85 c0                	test   %eax,%eax
810047da:	75 0e                	jne    810047ea <_vfiprintf_r+0x37>
810047dc:	83 ec 0c             	sub    $0xc,%esp
810047df:	ff 75 e0             	push   -0x20(%ebp)
810047e2:	e8 1a d0 ff ff       	call   81001801 <__sinit>
810047e7:	83 c4 10             	add    $0x10,%esp
810047ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ed:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810047f1:	98                   	cwtl   
810047f2:	83 e0 08             	and    $0x8,%eax
810047f5:	85 c0                	test   %eax,%eax
810047f7:	74 0a                	je     81004803 <_vfiprintf_r+0x50>
810047f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810047fc:	8b 40 10             	mov    0x10(%eax),%eax
810047ff:	85 c0                	test   %eax,%eax
81004801:	75 1f                	jne    81004822 <_vfiprintf_r+0x6f>
81004803:	83 ec 08             	sub    $0x8,%esp
81004806:	ff 75 0c             	push   0xc(%ebp)
81004809:	ff 75 08             	push   0x8(%ebp)
8100480c:	e8 67 19 00 00       	call   81006178 <__swsetup_r>
81004811:	83 c4 10             	add    $0x10,%esp
81004814:	85 c0                	test   %eax,%eax
81004816:	74 0a                	je     81004822 <_vfiprintf_r+0x6f>
81004818:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100481d:	e9 df 02 00 00       	jmp    81004b01 <_vfiprintf_r+0x34e>
81004822:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004825:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100482c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004830:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004834:	8b 45 14             	mov    0x14(%ebp),%eax
81004837:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100483d:	89 de                	mov    %ebx,%esi
8100483f:	eb 03                	jmp    81004844 <_vfiprintf_r+0x91>
81004841:	83 c3 01             	add    $0x1,%ebx
81004844:	0f b6 03             	movzbl (%ebx),%eax
81004847:	84 c0                	test   %al,%al
81004849:	74 07                	je     81004852 <_vfiprintf_r+0x9f>
8100484b:	0f b6 03             	movzbl (%ebx),%eax
8100484e:	3c 25                	cmp    $0x25,%al
81004850:	75 ef                	jne    81004841 <_vfiprintf_r+0x8e>
81004852:	89 d8                	mov    %ebx,%eax
81004854:	29 f0                	sub    %esi,%eax
81004856:	85 c0                	test   %eax,%eax
81004858:	74 2b                	je     81004885 <_vfiprintf_r+0xd2>
8100485a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004860:	50                   	push   %eax
81004861:	56                   	push   %esi
81004862:	ff 75 0c             	push   0xc(%ebp)
81004865:	ff 75 08             	push   0x8(%ebp)
81004868:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100486b:	ff d0                	call   *%eax
8100486d:	83 c4 10             	add    $0x10,%esp
81004870:	83 f8 ff             	cmp    $0xffffffff,%eax
81004873:	0f 84 68 02 00 00    	je     81004ae1 <_vfiprintf_r+0x32e>
81004879:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100487c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004882:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004885:	0f b6 03             	movzbl (%ebx),%eax
81004888:	84 c0                	test   %al,%al
8100488a:	0f 84 54 02 00 00    	je     81004ae4 <_vfiprintf_r+0x331>
81004890:	83 c3 01             	add    $0x1,%ebx
81004893:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100489a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810048a1:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810048a8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810048af:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810048b3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810048ba:	c7 45 dc b4 89 00 81 	movl   $0x810089b4,-0x24(%ebp)
810048c1:	eb 1b                	jmp    810048de <_vfiprintf_r+0x12b>
810048c3:	8b 55 80             	mov    -0x80(%ebp),%edx
810048c6:	89 f0                	mov    %esi,%eax
810048c8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810048cb:	be 01 00 00 00       	mov    $0x1,%esi
810048d0:	89 c1                	mov    %eax,%ecx
810048d2:	d3 e6                	shl    %cl,%esi
810048d4:	89 f0                	mov    %esi,%eax
810048d6:	09 d0                	or     %edx,%eax
810048d8:	89 45 80             	mov    %eax,-0x80(%ebp)
810048db:	83 c3 01             	add    $0x1,%ebx
810048de:	0f b6 03             	movzbl (%ebx),%eax
810048e1:	0f be c0             	movsbl %al,%eax
810048e4:	83 ec 04             	sub    $0x4,%esp
810048e7:	6a 05                	push   $0x5
810048e9:	50                   	push   %eax
810048ea:	ff 75 dc             	push   -0x24(%ebp)
810048ed:	e8 ee fa ff ff       	call   810043e0 <memchr>
810048f2:	83 c4 10             	add    $0x10,%esp
810048f5:	89 c6                	mov    %eax,%esi
810048f7:	85 f6                	test   %esi,%esi
810048f9:	75 c8                	jne    810048c3 <_vfiprintf_r+0x110>
810048fb:	8b 45 80             	mov    -0x80(%ebp),%eax
810048fe:	83 e0 10             	and    $0x10,%eax
81004901:	85 c0                	test   %eax,%eax
81004903:	74 04                	je     81004909 <_vfiprintf_r+0x156>
81004905:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004909:	8b 45 80             	mov    -0x80(%ebp),%eax
8100490c:	83 e0 08             	and    $0x8,%eax
8100490f:	85 c0                	test   %eax,%eax
81004911:	74 04                	je     81004917 <_vfiprintf_r+0x164>
81004913:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004917:	0f b6 03             	movzbl (%ebx),%eax
8100491a:	3c 2a                	cmp    $0x2a,%al
8100491c:	75 50                	jne    8100496e <_vfiprintf_r+0x1bb>
8100491e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004924:	8d 50 04             	lea    0x4(%eax),%edx
81004927:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100492d:	8b 00                	mov    (%eax),%eax
8100492f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004932:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004935:	85 c0                	test   %eax,%eax
81004937:	79 11                	jns    8100494a <_vfiprintf_r+0x197>
81004939:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100493c:	f7 d8                	neg    %eax
8100493e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004941:	8b 45 80             	mov    -0x80(%ebp),%eax
81004944:	83 c8 02             	or     $0x2,%eax
81004947:	89 45 80             	mov    %eax,-0x80(%ebp)
8100494a:	83 c3 01             	add    $0x1,%ebx
8100494d:	eb 2d                	jmp    8100497c <_vfiprintf_r+0x1c9>
8100494f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004952:	89 d0                	mov    %edx,%eax
81004954:	c1 e0 02             	shl    $0x2,%eax
81004957:	01 d0                	add    %edx,%eax
81004959:	01 c0                	add    %eax,%eax
8100495b:	89 c2                	mov    %eax,%edx
8100495d:	0f b6 03             	movzbl (%ebx),%eax
81004960:	0f be c0             	movsbl %al,%eax
81004963:	83 e8 30             	sub    $0x30,%eax
81004966:	01 d0                	add    %edx,%eax
81004968:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100496b:	83 c3 01             	add    $0x1,%ebx
8100496e:	0f b6 03             	movzbl (%ebx),%eax
81004971:	0f be c0             	movsbl %al,%eax
81004974:	83 e8 30             	sub    $0x30,%eax
81004977:	83 f8 09             	cmp    $0x9,%eax
8100497a:	76 d3                	jbe    8100494f <_vfiprintf_r+0x19c>
8100497c:	0f b6 03             	movzbl (%ebx),%eax
8100497f:	3c 2e                	cmp    $0x2e,%al
81004981:	75 67                	jne    810049ea <_vfiprintf_r+0x237>
81004983:	83 c3 01             	add    $0x1,%ebx
81004986:	0f b6 03             	movzbl (%ebx),%eax
81004989:	3c 2a                	cmp    $0x2a,%al
8100498b:	75 27                	jne    810049b4 <_vfiprintf_r+0x201>
8100498d:	83 c3 01             	add    $0x1,%ebx
81004990:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004996:	8d 50 04             	lea    0x4(%eax),%edx
81004999:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100499f:	8b 00                	mov    (%eax),%eax
810049a1:	89 45 84             	mov    %eax,-0x7c(%ebp)
810049a4:	8b 45 84             	mov    -0x7c(%ebp),%eax
810049a7:	85 c0                	test   %eax,%eax
810049a9:	79 3f                	jns    810049ea <_vfiprintf_r+0x237>
810049ab:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810049b2:	eb 36                	jmp    810049ea <_vfiprintf_r+0x237>
810049b4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810049bb:	eb 1f                	jmp    810049dc <_vfiprintf_r+0x229>
810049bd:	8b 55 84             	mov    -0x7c(%ebp),%edx
810049c0:	89 d0                	mov    %edx,%eax
810049c2:	c1 e0 02             	shl    $0x2,%eax
810049c5:	01 d0                	add    %edx,%eax
810049c7:	01 c0                	add    %eax,%eax
810049c9:	89 c2                	mov    %eax,%edx
810049cb:	0f b6 03             	movzbl (%ebx),%eax
810049ce:	0f be c0             	movsbl %al,%eax
810049d1:	83 e8 30             	sub    $0x30,%eax
810049d4:	01 d0                	add    %edx,%eax
810049d6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810049d9:	83 c3 01             	add    $0x1,%ebx
810049dc:	0f b6 03             	movzbl (%ebx),%eax
810049df:	0f be c0             	movsbl %al,%eax
810049e2:	83 e8 30             	sub    $0x30,%eax
810049e5:	83 f8 09             	cmp    $0x9,%eax
810049e8:	76 d3                	jbe    810049bd <_vfiprintf_r+0x20a>
810049ea:	c7 45 dc ba 89 00 81 	movl   $0x810089ba,-0x24(%ebp)
810049f1:	0f b6 03             	movzbl (%ebx),%eax
810049f4:	0f be c0             	movsbl %al,%eax
810049f7:	83 ec 04             	sub    $0x4,%esp
810049fa:	6a 03                	push   $0x3
810049fc:	50                   	push   %eax
810049fd:	ff 75 dc             	push   -0x24(%ebp)
81004a00:	e8 db f9 ff ff       	call   810043e0 <memchr>
81004a05:	83 c4 10             	add    $0x10,%esp
81004a08:	89 c6                	mov    %eax,%esi
81004a0a:	85 f6                	test   %esi,%esi
81004a0c:	74 1b                	je     81004a29 <_vfiprintf_r+0x276>
81004a0e:	8b 55 80             	mov    -0x80(%ebp),%edx
81004a11:	89 f0                	mov    %esi,%eax
81004a13:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004a16:	be 40 00 00 00       	mov    $0x40,%esi
81004a1b:	89 c1                	mov    %eax,%ecx
81004a1d:	d3 e6                	shl    %cl,%esi
81004a1f:	89 f0                	mov    %esi,%eax
81004a21:	09 d0                	or     %edx,%eax
81004a23:	89 45 80             	mov    %eax,-0x80(%ebp)
81004a26:	83 c3 01             	add    $0x1,%ebx
81004a29:	89 d8                	mov    %ebx,%eax
81004a2b:	8d 58 01             	lea    0x1(%eax),%ebx
81004a2e:	0f b6 00             	movzbl (%eax),%eax
81004a31:	88 45 98             	mov    %al,-0x68(%ebp)
81004a34:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004a38:	0f be c0             	movsbl %al,%eax
81004a3b:	83 ec 04             	sub    $0x4,%esp
81004a3e:	6a 06                	push   $0x6
81004a40:	50                   	push   %eax
81004a41:	68 be 89 00 81       	push   $0x810089be
81004a46:	e8 95 f9 ff ff       	call   810043e0 <memchr>
81004a4b:	83 c4 10             	add    $0x10,%esp
81004a4e:	89 c6                	mov    %eax,%esi
81004a50:	85 f6                	test   %esi,%esi
81004a52:	74 5a                	je     81004aae <_vfiprintf_r+0x2fb>
81004a54:	b8 00 00 00 00       	mov    $0x0,%eax
81004a59:	85 c0                	test   %eax,%eax
81004a5b:	75 2e                	jne    81004a8b <_vfiprintf_r+0x2d8>
81004a5d:	8b 45 80             	mov    -0x80(%ebp),%eax
81004a60:	25 00 01 00 00       	and    $0x100,%eax
81004a65:	85 c0                	test   %eax,%eax
81004a67:	74 11                	je     81004a7a <_vfiprintf_r+0x2c7>
81004a69:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a6f:	83 c0 0c             	add    $0xc,%eax
81004a72:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a78:	eb 55                	jmp    81004acf <_vfiprintf_r+0x31c>
81004a7a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a80:	83 c0 08             	add    $0x8,%eax
81004a83:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a89:	eb 44                	jmp    81004acf <_vfiprintf_r+0x31c>
81004a8b:	83 ec 0c             	sub    $0xc,%esp
81004a8e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a94:	50                   	push   %eax
81004a95:	ff 75 e4             	push   -0x1c(%ebp)
81004a98:	ff 75 0c             	push   0xc(%ebp)
81004a9b:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a9e:	50                   	push   %eax
81004a9f:	ff 75 08             	push   0x8(%ebp)
81004aa2:	e8 59 b5 ff 7e       	call   0 <do_help-0x81000000>
81004aa7:	83 c4 20             	add    $0x20,%esp
81004aaa:	89 c7                	mov    %eax,%edi
81004aac:	eb 21                	jmp    81004acf <_vfiprintf_r+0x31c>
81004aae:	83 ec 0c             	sub    $0xc,%esp
81004ab1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004ab7:	50                   	push   %eax
81004ab8:	ff 75 e4             	push   -0x1c(%ebp)
81004abb:	ff 75 0c             	push   0xc(%ebp)
81004abe:	8d 45 80             	lea    -0x80(%ebp),%eax
81004ac1:	50                   	push   %eax
81004ac2:	ff 75 08             	push   0x8(%ebp)
81004ac5:	e8 da 01 00 00       	call   81004ca4 <_printf_i>
81004aca:	83 c4 20             	add    $0x20,%esp
81004acd:	89 c7                	mov    %eax,%edi
81004acf:	83 ff ff             	cmp    $0xffffffff,%edi
81004ad2:	74 13                	je     81004ae7 <_vfiprintf_r+0x334>
81004ad4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ad7:	01 f8                	add    %edi,%eax
81004ad9:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004adc:	e9 5c fd ff ff       	jmp    8100483d <_vfiprintf_r+0x8a>
81004ae1:	90                   	nop
81004ae2:	eb 04                	jmp    81004ae8 <_vfiprintf_r+0x335>
81004ae4:	90                   	nop
81004ae5:	eb 01                	jmp    81004ae8 <_vfiprintf_r+0x335>
81004ae7:	90                   	nop
81004ae8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004aeb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004aef:	98                   	cwtl   
81004af0:	83 e0 40             	and    $0x40,%eax
81004af3:	85 c0                	test   %eax,%eax
81004af5:	75 05                	jne    81004afc <_vfiprintf_r+0x349>
81004af7:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004afa:	eb 05                	jmp    81004b01 <_vfiprintf_r+0x34e>
81004afc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b01:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b04:	5b                   	pop    %ebx
81004b05:	5e                   	pop    %esi
81004b06:	5f                   	pop    %edi
81004b07:	5d                   	pop    %ebp
81004b08:	c3                   	ret    

81004b09 <_printf_common>:
81004b09:	55                   	push   %ebp
81004b0a:	89 e5                	mov    %esp,%ebp
81004b0c:	83 ec 18             	sub    $0x18,%esp
81004b0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b12:	8b 50 10             	mov    0x10(%eax),%edx
81004b15:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b18:	8b 40 08             	mov    0x8(%eax),%eax
81004b1b:	39 c2                	cmp    %eax,%edx
81004b1d:	0f 4c d0             	cmovl  %eax,%edx
81004b20:	8b 45 10             	mov    0x10(%ebp),%eax
81004b23:	89 10                	mov    %edx,(%eax)
81004b25:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b28:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004b2c:	84 c0                	test   %al,%al
81004b2e:	74 0d                	je     81004b3d <_printf_common+0x34>
81004b30:	8b 45 10             	mov    0x10(%ebp),%eax
81004b33:	8b 00                	mov    (%eax),%eax
81004b35:	8d 50 01             	lea    0x1(%eax),%edx
81004b38:	8b 45 10             	mov    0x10(%ebp),%eax
81004b3b:	89 10                	mov    %edx,(%eax)
81004b3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b40:	8b 00                	mov    (%eax),%eax
81004b42:	83 e0 20             	and    $0x20,%eax
81004b45:	85 c0                	test   %eax,%eax
81004b47:	74 0d                	je     81004b56 <_printf_common+0x4d>
81004b49:	8b 45 10             	mov    0x10(%ebp),%eax
81004b4c:	8b 00                	mov    (%eax),%eax
81004b4e:	8d 50 02             	lea    0x2(%eax),%edx
81004b51:	8b 45 10             	mov    0x10(%ebp),%eax
81004b54:	89 10                	mov    %edx,(%eax)
81004b56:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b59:	8b 00                	mov    (%eax),%eax
81004b5b:	83 e0 06             	and    $0x6,%eax
81004b5e:	85 c0                	test   %eax,%eax
81004b60:	75 41                	jne    81004ba3 <_printf_common+0x9a>
81004b62:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004b69:	eb 24                	jmp    81004b8f <_printf_common+0x86>
81004b6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b6e:	83 c0 19             	add    $0x19,%eax
81004b71:	6a 01                	push   $0x1
81004b73:	50                   	push   %eax
81004b74:	ff 75 14             	push   0x14(%ebp)
81004b77:	ff 75 08             	push   0x8(%ebp)
81004b7a:	8b 45 18             	mov    0x18(%ebp),%eax
81004b7d:	ff d0                	call   *%eax
81004b7f:	83 c4 10             	add    $0x10,%esp
81004b82:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b85:	0f 84 0b 01 00 00    	je     81004c96 <_printf_common+0x18d>
81004b8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004b8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b92:	8b 50 0c             	mov    0xc(%eax),%edx
81004b95:	8b 45 10             	mov    0x10(%ebp),%eax
81004b98:	8b 08                	mov    (%eax),%ecx
81004b9a:	89 d0                	mov    %edx,%eax
81004b9c:	29 c8                	sub    %ecx,%eax
81004b9e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004ba1:	7c c8                	jl     81004b6b <_printf_common+0x62>
81004ba3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004baa:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bad:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004bb1:	84 c0                	test   %al,%al
81004bb3:	74 04                	je     81004bb9 <_printf_common+0xb0>
81004bb5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004bb9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bbc:	8b 00                	mov    (%eax),%eax
81004bbe:	83 e0 20             	and    $0x20,%eax
81004bc1:	85 c0                	test   %eax,%eax
81004bc3:	74 28                	je     81004bed <_printf_common+0xe4>
81004bc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bc8:	8d 50 01             	lea    0x1(%eax),%edx
81004bcb:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004bce:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bd1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004bd6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bd9:	8d 50 01             	lea    0x1(%eax),%edx
81004bdc:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004bdf:	8b 55 0c             	mov    0xc(%ebp),%edx
81004be2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004be6:	8b 55 0c             	mov    0xc(%ebp),%edx
81004be9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81004bed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bf0:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bf3:	83 c2 43             	add    $0x43,%edx
81004bf6:	50                   	push   %eax
81004bf7:	52                   	push   %edx
81004bf8:	ff 75 14             	push   0x14(%ebp)
81004bfb:	ff 75 08             	push   0x8(%ebp)
81004bfe:	8b 45 18             	mov    0x18(%ebp),%eax
81004c01:	ff d0                	call   *%eax
81004c03:	83 c4 10             	add    $0x10,%esp
81004c06:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c09:	0f 84 8a 00 00 00    	je     81004c99 <_printf_common+0x190>
81004c0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c12:	8b 50 0c             	mov    0xc(%eax),%edx
81004c15:	8b 45 10             	mov    0x10(%ebp),%eax
81004c18:	8b 08                	mov    (%eax),%ecx
81004c1a:	89 d0                	mov    %edx,%eax
81004c1c:	29 c8                	sub    %ecx,%eax
81004c1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c21:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c24:	8b 00                	mov    (%eax),%eax
81004c26:	83 e0 06             	and    $0x6,%eax
81004c29:	83 f8 04             	cmp    $0x4,%eax
81004c2c:	75 06                	jne    81004c34 <_printf_common+0x12b>
81004c2e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004c32:	79 07                	jns    81004c3b <_printf_common+0x132>
81004c34:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004c3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c3e:	8b 50 08             	mov    0x8(%eax),%edx
81004c41:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c44:	8b 40 10             	mov    0x10(%eax),%eax
81004c47:	39 c2                	cmp    %eax,%edx
81004c49:	7e 13                	jle    81004c5e <_printf_common+0x155>
81004c4b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c4e:	8b 50 08             	mov    0x8(%eax),%edx
81004c51:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c54:	8b 48 10             	mov    0x10(%eax),%ecx
81004c57:	89 d0                	mov    %edx,%eax
81004c59:	29 c8                	sub    %ecx,%eax
81004c5b:	01 45 f4             	add    %eax,-0xc(%ebp)
81004c5e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004c65:	eb 20                	jmp    81004c87 <_printf_common+0x17e>
81004c67:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c6a:	83 c0 1a             	add    $0x1a,%eax
81004c6d:	6a 01                	push   $0x1
81004c6f:	50                   	push   %eax
81004c70:	ff 75 14             	push   0x14(%ebp)
81004c73:	ff 75 08             	push   0x8(%ebp)
81004c76:	8b 45 18             	mov    0x18(%ebp),%eax
81004c79:	ff d0                	call   *%eax
81004c7b:	83 c4 10             	add    $0x10,%esp
81004c7e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c81:	74 19                	je     81004c9c <_printf_common+0x193>
81004c83:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004c87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c8a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81004c8d:	7c d8                	jl     81004c67 <_printf_common+0x15e>
81004c8f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c94:	eb 0c                	jmp    81004ca2 <_printf_common+0x199>
81004c96:	90                   	nop
81004c97:	eb 04                	jmp    81004c9d <_printf_common+0x194>
81004c99:	90                   	nop
81004c9a:	eb 01                	jmp    81004c9d <_printf_common+0x194>
81004c9c:	90                   	nop
81004c9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ca2:	c9                   	leave  
81004ca3:	c3                   	ret    

81004ca4 <_printf_i>:
81004ca4:	55                   	push   %ebp
81004ca5:	89 e5                	mov    %esp,%ebp
81004ca7:	53                   	push   %ebx
81004ca8:	83 ec 24             	sub    $0x24,%esp
81004cab:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cae:	83 c0 1b             	add    $0x1b,%eax
81004cb1:	83 c0 28             	add    $0x28,%eax
81004cb4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004cb7:	c7 45 e8 c8 89 00 81 	movl   $0x810089c8,-0x18(%ebp)
81004cbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cc1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004cc5:	0f be c0             	movsbl %al,%eax
81004cc8:	85 c0                	test   %eax,%eax
81004cca:	0f 84 00 03 00 00    	je     81004fd0 <_printf_i+0x32c>
81004cd0:	85 c0                	test   %eax,%eax
81004cd2:	0f 88 52 03 00 00    	js     8100502a <_printf_i+0x386>
81004cd8:	83 f8 78             	cmp    $0x78,%eax
81004cdb:	0f 8f 49 03 00 00    	jg     8100502a <_printf_i+0x386>
81004ce1:	83 f8 58             	cmp    $0x58,%eax
81004ce4:	0f 8c 40 03 00 00    	jl     8100502a <_printf_i+0x386>
81004cea:	83 e8 58             	sub    $0x58,%eax
81004ced:	83 f8 20             	cmp    $0x20,%eax
81004cf0:	0f 87 34 03 00 00    	ja     8100502a <_printf_i+0x386>
81004cf6:	8b 04 85 ec 89 00 81 	mov    -0x7eff7614(,%eax,4),%eax
81004cfd:	ff e0                	jmp    *%eax
81004cff:	8b 45 18             	mov    0x18(%ebp),%eax
81004d02:	8b 00                	mov    (%eax),%eax
81004d04:	8d 48 04             	lea    0x4(%eax),%ecx
81004d07:	8b 55 18             	mov    0x18(%ebp),%edx
81004d0a:	89 0a                	mov    %ecx,(%edx)
81004d0c:	8b 00                	mov    (%eax),%eax
81004d0e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004d12:	89 c2                	mov    %eax,%edx
81004d14:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004d17:	88 10                	mov    %dl,(%eax)
81004d19:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004d23:	e9 1c 03 00 00       	jmp    81005044 <_printf_i+0x3a0>
81004d28:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d2b:	8b 00                	mov    (%eax),%eax
81004d2d:	25 80 00 00 00       	and    $0x80,%eax
81004d32:	85 c0                	test   %eax,%eax
81004d34:	74 11                	je     81004d47 <_printf_i+0xa3>
81004d36:	8b 45 18             	mov    0x18(%ebp),%eax
81004d39:	8b 00                	mov    (%eax),%eax
81004d3b:	8d 48 04             	lea    0x4(%eax),%ecx
81004d3e:	8b 55 18             	mov    0x18(%ebp),%edx
81004d41:	89 0a                	mov    %ecx,(%edx)
81004d43:	8b 00                	mov    (%eax),%eax
81004d45:	eb 2d                	jmp    81004d74 <_printf_i+0xd0>
81004d47:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d4a:	8b 00                	mov    (%eax),%eax
81004d4c:	83 e0 40             	and    $0x40,%eax
81004d4f:	85 c0                	test   %eax,%eax
81004d51:	74 12                	je     81004d65 <_printf_i+0xc1>
81004d53:	8b 45 18             	mov    0x18(%ebp),%eax
81004d56:	8b 00                	mov    (%eax),%eax
81004d58:	8d 48 04             	lea    0x4(%eax),%ecx
81004d5b:	8b 55 18             	mov    0x18(%ebp),%edx
81004d5e:	89 0a                	mov    %ecx,(%edx)
81004d60:	8b 00                	mov    (%eax),%eax
81004d62:	98                   	cwtl   
81004d63:	eb 0f                	jmp    81004d74 <_printf_i+0xd0>
81004d65:	8b 45 18             	mov    0x18(%ebp),%eax
81004d68:	8b 00                	mov    (%eax),%eax
81004d6a:	8d 48 04             	lea    0x4(%eax),%ecx
81004d6d:	8b 55 18             	mov    0x18(%ebp),%edx
81004d70:	89 0a                	mov    %ecx,(%edx)
81004d72:	8b 00                	mov    (%eax),%eax
81004d74:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d7a:	85 c0                	test   %eax,%eax
81004d7c:	79 0a                	jns    81004d88 <_printf_i+0xe4>
81004d7e:	f7 5d f4             	negl   -0xc(%ebp)
81004d81:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d84:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004d88:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81004d8f:	e9 28 01 00 00       	jmp    81004ebc <_printf_i+0x218>
81004d94:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d97:	8b 00                	mov    (%eax),%eax
81004d99:	25 80 00 00 00       	and    $0x80,%eax
81004d9e:	85 c0                	test   %eax,%eax
81004da0:	74 11                	je     81004db3 <_printf_i+0x10f>
81004da2:	8b 45 18             	mov    0x18(%ebp),%eax
81004da5:	8b 00                	mov    (%eax),%eax
81004da7:	8d 48 04             	lea    0x4(%eax),%ecx
81004daa:	8b 55 18             	mov    0x18(%ebp),%edx
81004dad:	89 0a                	mov    %ecx,(%edx)
81004daf:	8b 00                	mov    (%eax),%eax
81004db1:	eb 2f                	jmp    81004de2 <_printf_i+0x13e>
81004db3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004db6:	8b 00                	mov    (%eax),%eax
81004db8:	83 e0 40             	and    $0x40,%eax
81004dbb:	85 c0                	test   %eax,%eax
81004dbd:	74 14                	je     81004dd3 <_printf_i+0x12f>
81004dbf:	8b 45 18             	mov    0x18(%ebp),%eax
81004dc2:	8b 00                	mov    (%eax),%eax
81004dc4:	8d 48 04             	lea    0x4(%eax),%ecx
81004dc7:	8b 55 18             	mov    0x18(%ebp),%edx
81004dca:	89 0a                	mov    %ecx,(%edx)
81004dcc:	8b 00                	mov    (%eax),%eax
81004dce:	0f b7 c0             	movzwl %ax,%eax
81004dd1:	eb 0f                	jmp    81004de2 <_printf_i+0x13e>
81004dd3:	8b 45 18             	mov    0x18(%ebp),%eax
81004dd6:	8b 00                	mov    (%eax),%eax
81004dd8:	8d 48 04             	lea    0x4(%eax),%ecx
81004ddb:	8b 55 18             	mov    0x18(%ebp),%edx
81004dde:	89 0a                	mov    %ecx,(%edx)
81004de0:	8b 00                	mov    (%eax),%eax
81004de2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004de5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004de8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004dec:	3c 6f                	cmp    $0x6f,%al
81004dee:	75 07                	jne    81004df7 <_printf_i+0x153>
81004df0:	b8 08 00 00 00       	mov    $0x8,%eax
81004df5:	eb 05                	jmp    81004dfc <_printf_i+0x158>
81004df7:	b8 0a 00 00 00       	mov    $0xa,%eax
81004dfc:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dff:	e9 b1 00 00 00       	jmp    81004eb5 <_printf_i+0x211>
81004e04:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e07:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81004e0b:	eb 1d                	jmp    81004e2a <_printf_i+0x186>
81004e0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e10:	8b 00                	mov    (%eax),%eax
81004e12:	83 c8 20             	or     $0x20,%eax
81004e15:	89 c2                	mov    %eax,%edx
81004e17:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e1a:	89 10                	mov    %edx,(%eax)
81004e1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e1f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004e23:	c7 45 e8 d9 89 00 81 	movl   $0x810089d9,-0x18(%ebp)
81004e2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e2d:	8b 00                	mov    (%eax),%eax
81004e2f:	25 80 00 00 00       	and    $0x80,%eax
81004e34:	85 c0                	test   %eax,%eax
81004e36:	74 11                	je     81004e49 <_printf_i+0x1a5>
81004e38:	8b 45 18             	mov    0x18(%ebp),%eax
81004e3b:	8b 00                	mov    (%eax),%eax
81004e3d:	8d 48 04             	lea    0x4(%eax),%ecx
81004e40:	8b 55 18             	mov    0x18(%ebp),%edx
81004e43:	89 0a                	mov    %ecx,(%edx)
81004e45:	8b 00                	mov    (%eax),%eax
81004e47:	eb 2f                	jmp    81004e78 <_printf_i+0x1d4>
81004e49:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e4c:	8b 00                	mov    (%eax),%eax
81004e4e:	83 e0 40             	and    $0x40,%eax
81004e51:	85 c0                	test   %eax,%eax
81004e53:	74 14                	je     81004e69 <_printf_i+0x1c5>
81004e55:	8b 45 18             	mov    0x18(%ebp),%eax
81004e58:	8b 00                	mov    (%eax),%eax
81004e5a:	8d 48 04             	lea    0x4(%eax),%ecx
81004e5d:	8b 55 18             	mov    0x18(%ebp),%edx
81004e60:	89 0a                	mov    %ecx,(%edx)
81004e62:	8b 00                	mov    (%eax),%eax
81004e64:	0f b7 c0             	movzwl %ax,%eax
81004e67:	eb 0f                	jmp    81004e78 <_printf_i+0x1d4>
81004e69:	8b 45 18             	mov    0x18(%ebp),%eax
81004e6c:	8b 00                	mov    (%eax),%eax
81004e6e:	8d 48 04             	lea    0x4(%eax),%ecx
81004e71:	8b 55 18             	mov    0x18(%ebp),%edx
81004e74:	89 0a                	mov    %ecx,(%edx)
81004e76:	8b 00                	mov    (%eax),%eax
81004e78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e7b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004e82:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e85:	8b 00                	mov    (%eax),%eax
81004e87:	83 e0 01             	and    $0x1,%eax
81004e8a:	85 c0                	test   %eax,%eax
81004e8c:	74 0f                	je     81004e9d <_printf_i+0x1f9>
81004e8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e91:	8b 00                	mov    (%eax),%eax
81004e93:	83 c8 20             	or     $0x20,%eax
81004e96:	89 c2                	mov    %eax,%edx
81004e98:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e9b:	89 10                	mov    %edx,(%eax)
81004e9d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ea1:	75 11                	jne    81004eb4 <_printf_i+0x210>
81004ea3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea6:	8b 00                	mov    (%eax),%eax
81004ea8:	83 e0 df             	and    $0xffffffdf,%eax
81004eab:	89 c2                	mov    %eax,%edx
81004ead:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb0:	89 10                	mov    %edx,(%eax)
81004eb2:	eb 01                	jmp    81004eb5 <_printf_i+0x211>
81004eb4:	90                   	nop
81004eb5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004ebc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ebf:	8b 50 04             	mov    0x4(%eax),%edx
81004ec2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ec5:	89 50 08             	mov    %edx,0x8(%eax)
81004ec8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ecb:	8b 40 08             	mov    0x8(%eax),%eax
81004ece:	85 c0                	test   %eax,%eax
81004ed0:	78 0f                	js     81004ee1 <_printf_i+0x23d>
81004ed2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ed5:	8b 00                	mov    (%eax),%eax
81004ed7:	83 e0 fb             	and    $0xfffffffb,%eax
81004eda:	89 c2                	mov    %eax,%edx
81004edc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004edf:	89 10                	mov    %edx,(%eax)
81004ee1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ee5:	75 0a                	jne    81004ef1 <_printf_i+0x24d>
81004ee7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eea:	8b 40 04             	mov    0x4(%eax),%eax
81004eed:	85 c0                	test   %eax,%eax
81004eef:	74 34                	je     81004f25 <_printf_i+0x281>
81004ef1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004ef4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ef7:	ba 00 00 00 00       	mov    $0x0,%edx
81004efc:	f7 f1                	div    %ecx
81004efe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004f01:	01 d0                	add    %edx,%eax
81004f03:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004f07:	0f b6 10             	movzbl (%eax),%edx
81004f0a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f0d:	88 10                	mov    %dl,(%eax)
81004f0f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004f12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f15:	ba 00 00 00 00       	mov    $0x0,%edx
81004f1a:	f7 f3                	div    %ebx
81004f1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f23:	75 cc                	jne    81004ef1 <_printf_i+0x24d>
81004f25:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004f29:	75 26                	jne    81004f51 <_printf_i+0x2ad>
81004f2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f2e:	8b 00                	mov    (%eax),%eax
81004f30:	83 e0 01             	and    $0x1,%eax
81004f33:	85 c0                	test   %eax,%eax
81004f35:	74 1a                	je     81004f51 <_printf_i+0x2ad>
81004f37:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f3a:	8b 50 04             	mov    0x4(%eax),%edx
81004f3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f40:	8b 40 10             	mov    0x10(%eax),%eax
81004f43:	39 c2                	cmp    %eax,%edx
81004f45:	7f 0a                	jg     81004f51 <_printf_i+0x2ad>
81004f47:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004f4b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f4e:	c6 00 30             	movb   $0x30,(%eax)
81004f51:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f54:	83 c0 1b             	add    $0x1b,%eax
81004f57:	83 c0 28             	add    $0x28,%eax
81004f5a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004f5d:	89 c2                	mov    %eax,%edx
81004f5f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f62:	89 50 10             	mov    %edx,0x10(%eax)
81004f65:	e9 e2 00 00 00       	jmp    8100504c <_printf_i+0x3a8>
81004f6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f6d:	8b 00                	mov    (%eax),%eax
81004f6f:	25 80 00 00 00       	and    $0x80,%eax
81004f74:	85 c0                	test   %eax,%eax
81004f76:	74 19                	je     81004f91 <_printf_i+0x2ed>
81004f78:	8b 45 18             	mov    0x18(%ebp),%eax
81004f7b:	8b 00                	mov    (%eax),%eax
81004f7d:	8d 48 04             	lea    0x4(%eax),%ecx
81004f80:	8b 55 18             	mov    0x18(%ebp),%edx
81004f83:	89 0a                	mov    %ecx,(%edx)
81004f85:	8b 00                	mov    (%eax),%eax
81004f87:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f8a:	8b 52 14             	mov    0x14(%edx),%edx
81004f8d:	89 10                	mov    %edx,(%eax)
81004f8f:	eb 3f                	jmp    81004fd0 <_printf_i+0x32c>
81004f91:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f94:	8b 00                	mov    (%eax),%eax
81004f96:	83 e0 40             	and    $0x40,%eax
81004f99:	85 c0                	test   %eax,%eax
81004f9b:	74 1c                	je     81004fb9 <_printf_i+0x315>
81004f9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fa0:	8b 58 14             	mov    0x14(%eax),%ebx
81004fa3:	8b 45 18             	mov    0x18(%ebp),%eax
81004fa6:	8b 00                	mov    (%eax),%eax
81004fa8:	8d 48 04             	lea    0x4(%eax),%ecx
81004fab:	8b 55 18             	mov    0x18(%ebp),%edx
81004fae:	89 0a                	mov    %ecx,(%edx)
81004fb0:	8b 00                	mov    (%eax),%eax
81004fb2:	89 da                	mov    %ebx,%edx
81004fb4:	66 89 10             	mov    %dx,(%eax)
81004fb7:	eb 17                	jmp    81004fd0 <_printf_i+0x32c>
81004fb9:	8b 45 18             	mov    0x18(%ebp),%eax
81004fbc:	8b 00                	mov    (%eax),%eax
81004fbe:	8d 48 04             	lea    0x4(%eax),%ecx
81004fc1:	8b 55 18             	mov    0x18(%ebp),%edx
81004fc4:	89 0a                	mov    %ecx,(%edx)
81004fc6:	8b 00                	mov    (%eax),%eax
81004fc8:	8b 55 0c             	mov    0xc(%ebp),%edx
81004fcb:	8b 52 14             	mov    0x14(%edx),%edx
81004fce:	89 10                	mov    %edx,(%eax)
81004fd0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fd3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004fda:	eb 70                	jmp    8100504c <_printf_i+0x3a8>
81004fdc:	8b 45 18             	mov    0x18(%ebp),%eax
81004fdf:	8b 00                	mov    (%eax),%eax
81004fe1:	8d 48 04             	lea    0x4(%eax),%ecx
81004fe4:	8b 55 18             	mov    0x18(%ebp),%edx
81004fe7:	89 0a                	mov    %ecx,(%edx)
81004fe9:	8b 00                	mov    (%eax),%eax
81004feb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fee:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff1:	8b 40 04             	mov    0x4(%eax),%eax
81004ff4:	83 ec 04             	sub    $0x4,%esp
81004ff7:	50                   	push   %eax
81004ff8:	6a 00                	push   $0x0
81004ffa:	ff 75 ec             	push   -0x14(%ebp)
81004ffd:	e8 de f3 ff ff       	call   810043e0 <memchr>
81005002:	83 c4 10             	add    $0x10,%esp
81005005:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005008:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100500c:	74 0e                	je     8100501c <_printf_i+0x378>
8100500e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005011:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005014:	89 c2                	mov    %eax,%edx
81005016:	8b 45 0c             	mov    0xc(%ebp),%eax
81005019:	89 50 04             	mov    %edx,0x4(%eax)
8100501c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100501f:	8b 50 04             	mov    0x4(%eax),%edx
81005022:	8b 45 0c             	mov    0xc(%ebp),%eax
81005025:	89 50 10             	mov    %edx,0x10(%eax)
81005028:	eb 1a                	jmp    81005044 <_printf_i+0x3a0>
8100502a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100502e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005031:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005035:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005038:	88 10                	mov    %dl,(%eax)
8100503a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100503d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005044:	8b 45 0c             	mov    0xc(%ebp),%eax
81005047:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8100504b:	90                   	nop
8100504c:	83 ec 0c             	sub    $0xc,%esp
8100504f:	ff 75 14             	push   0x14(%ebp)
81005052:	ff 75 10             	push   0x10(%ebp)
81005055:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005058:	50                   	push   %eax
81005059:	ff 75 0c             	push   0xc(%ebp)
8100505c:	ff 75 08             	push   0x8(%ebp)
8100505f:	e8 a5 fa ff ff       	call   81004b09 <_printf_common>
81005064:	83 c4 20             	add    $0x20,%esp
81005067:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100506a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100506e:	74 72                	je     810050e2 <_printf_i+0x43e>
81005070:	8b 45 0c             	mov    0xc(%ebp),%eax
81005073:	8b 40 10             	mov    0x10(%eax),%eax
81005076:	50                   	push   %eax
81005077:	ff 75 ec             	push   -0x14(%ebp)
8100507a:	ff 75 10             	push   0x10(%ebp)
8100507d:	ff 75 08             	push   0x8(%ebp)
81005080:	8b 45 14             	mov    0x14(%ebp),%eax
81005083:	ff d0                	call   *%eax
81005085:	83 c4 10             	add    $0x10,%esp
81005088:	83 f8 ff             	cmp    $0xffffffff,%eax
8100508b:	74 58                	je     810050e5 <_printf_i+0x441>
8100508d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005090:	8b 00                	mov    (%eax),%eax
81005092:	83 e0 02             	and    $0x2,%eax
81005095:	85 c0                	test   %eax,%eax
81005097:	74 39                	je     810050d2 <_printf_i+0x42e>
81005099:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810050a0:	eb 20                	jmp    810050c2 <_printf_i+0x41e>
810050a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810050a5:	83 c0 19             	add    $0x19,%eax
810050a8:	6a 01                	push   $0x1
810050aa:	50                   	push   %eax
810050ab:	ff 75 10             	push   0x10(%ebp)
810050ae:	ff 75 08             	push   0x8(%ebp)
810050b1:	8b 45 14             	mov    0x14(%ebp),%eax
810050b4:	ff d0                	call   *%eax
810050b6:	83 c4 10             	add    $0x10,%esp
810050b9:	83 f8 ff             	cmp    $0xffffffff,%eax
810050bc:	74 2a                	je     810050e8 <_printf_i+0x444>
810050be:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810050c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810050c5:	8b 40 0c             	mov    0xc(%eax),%eax
810050c8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810050cb:	29 d0                	sub    %edx,%eax
810050cd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810050d0:	7c d0                	jl     810050a2 <_printf_i+0x3fe>
810050d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810050d5:	8b 50 0c             	mov    0xc(%eax),%edx
810050d8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810050db:	39 c2                	cmp    %eax,%edx
810050dd:	0f 4d c2             	cmovge %edx,%eax
810050e0:	eb 0c                	jmp    810050ee <_printf_i+0x44a>
810050e2:	90                   	nop
810050e3:	eb 04                	jmp    810050e9 <_printf_i+0x445>
810050e5:	90                   	nop
810050e6:	eb 01                	jmp    810050e9 <_printf_i+0x445>
810050e8:	90                   	nop
810050e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810050f1:	c9                   	leave  
810050f2:	c3                   	ret    

810050f3 <_open_r>:
810050f3:	55                   	push   %ebp
810050f4:	89 e5                	mov    %esp,%ebp
810050f6:	83 ec 18             	sub    $0x18,%esp
810050f9:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
81005100:	00 00 00 
81005103:	83 ec 04             	sub    $0x4,%esp
81005106:	ff 75 14             	push   0x14(%ebp)
81005109:	ff 75 10             	push   0x10(%ebp)
8100510c:	ff 75 0c             	push   0xc(%ebp)
8100510f:	e8 4f bb ff ff       	call   81000c63 <open>
81005114:	83 c4 10             	add    $0x10,%esp
81005117:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100511a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100511e:	75 14                	jne    81005134 <_open_r+0x41>
81005120:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81005125:	85 c0                	test   %eax,%eax
81005127:	74 0b                	je     81005134 <_open_r+0x41>
81005129:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
8100512f:	8b 45 08             	mov    0x8(%ebp),%eax
81005132:	89 10                	mov    %edx,(%eax)
81005134:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005137:	c9                   	leave  
81005138:	c3                   	ret    

81005139 <_iprintf_r>:
81005139:	55                   	push   %ebp
8100513a:	89 e5                	mov    %esp,%ebp
8100513c:	83 ec 18             	sub    $0x18,%esp
8100513f:	8d 45 10             	lea    0x10(%ebp),%eax
81005142:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005145:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005148:	8b 45 08             	mov    0x8(%ebp),%eax
8100514b:	8b 40 08             	mov    0x8(%eax),%eax
8100514e:	52                   	push   %edx
8100514f:	ff 75 0c             	push   0xc(%ebp)
81005152:	50                   	push   %eax
81005153:	ff 75 08             	push   0x8(%ebp)
81005156:	e8 58 f6 ff ff       	call   810047b3 <_vfiprintf_r>
8100515b:	83 c4 10             	add    $0x10,%esp
8100515e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005161:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005164:	c9                   	leave  
81005165:	c3                   	ret    

81005166 <iprintf>:
81005166:	55                   	push   %ebp
81005167:	89 e5                	mov    %esp,%ebp
81005169:	83 ec 18             	sub    $0x18,%esp
8100516c:	a1 64 91 00 81       	mov    0x81009164,%eax
81005171:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005174:	8d 45 0c             	lea    0xc(%ebp),%eax
81005177:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100517a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100517d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005180:	8b 40 08             	mov    0x8(%eax),%eax
81005183:	52                   	push   %edx
81005184:	ff 75 08             	push   0x8(%ebp)
81005187:	50                   	push   %eax
81005188:	ff 75 f4             	push   -0xc(%ebp)
8100518b:	e8 23 f6 ff ff       	call   810047b3 <_vfiprintf_r>
81005190:	83 c4 10             	add    $0x10,%esp
81005193:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005196:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005199:	c9                   	leave  
8100519a:	c3                   	ret    

8100519b <_puts_r>:
8100519b:	55                   	push   %ebp
8100519c:	89 e5                	mov    %esp,%ebp
8100519e:	83 ec 38             	sub    $0x38,%esp
810051a1:	83 ec 0c             	sub    $0xc,%esp
810051a4:	ff 75 0c             	push   0xc(%ebp)
810051a7:	e8 74 0a 00 00       	call   81005c20 <strlen>
810051ac:	83 c4 10             	add    $0x10,%esp
810051af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810051b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810051b5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810051b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051bb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810051be:	c7 45 d4 70 8a 00 81 	movl   $0x81008a70,-0x2c(%ebp)
810051c5:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810051cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051cf:	83 c0 01             	add    $0x1,%eax
810051d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810051d5:	8d 45 cc             	lea    -0x34(%ebp),%eax
810051d8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810051db:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810051e2:	8b 45 08             	mov    0x8(%ebp),%eax
810051e5:	8b 40 08             	mov    0x8(%eax),%eax
810051e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810051eb:	8b 45 08             	mov    0x8(%ebp),%eax
810051ee:	89 45 ec             	mov    %eax,-0x14(%ebp)
810051f1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810051f5:	74 18                	je     8100520f <_puts_r+0x74>
810051f7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810051fa:	8b 40 38             	mov    0x38(%eax),%eax
810051fd:	85 c0                	test   %eax,%eax
810051ff:	75 0e                	jne    8100520f <_puts_r+0x74>
81005201:	83 ec 0c             	sub    $0xc,%esp
81005204:	ff 75 ec             	push   -0x14(%ebp)
81005207:	e8 f5 c5 ff ff       	call   81001801 <__sinit>
8100520c:	83 c4 10             	add    $0x10,%esp
8100520f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005212:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005216:	98                   	cwtl   
81005217:	25 00 20 00 00       	and    $0x2000,%eax
8100521c:	85 c0                	test   %eax,%eax
8100521e:	75 24                	jne    81005244 <_puts_r+0xa9>
81005220:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005223:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005227:	80 cc 20             	or     $0x20,%ah
8100522a:	89 c2                	mov    %eax,%edx
8100522c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100522f:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005233:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005236:	8b 40 64             	mov    0x64(%eax),%eax
81005239:	80 e4 df             	and    $0xdf,%ah
8100523c:	89 c2                	mov    %eax,%edx
8100523e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005241:	89 50 64             	mov    %edx,0x64(%eax)
81005244:	83 ec 04             	sub    $0x4,%esp
81005247:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100524a:	50                   	push   %eax
8100524b:	ff 75 f0             	push   -0x10(%ebp)
8100524e:	ff 75 08             	push   0x8(%ebp)
81005251:	e8 a4 15 00 00       	call   810067fa <__sfvwrite_r>
81005256:	83 c4 10             	add    $0x10,%esp
81005259:	85 c0                	test   %eax,%eax
8100525b:	74 07                	je     81005264 <_puts_r+0xc9>
8100525d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005262:	eb 05                	jmp    81005269 <_puts_r+0xce>
81005264:	b8 0a 00 00 00       	mov    $0xa,%eax
81005269:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100526c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100526f:	c9                   	leave  
81005270:	c3                   	ret    

81005271 <puts>:
81005271:	55                   	push   %ebp
81005272:	89 e5                	mov    %esp,%ebp
81005274:	83 ec 08             	sub    $0x8,%esp
81005277:	a1 64 91 00 81       	mov    0x81009164,%eax
8100527c:	83 ec 08             	sub    $0x8,%esp
8100527f:	ff 75 08             	push   0x8(%ebp)
81005282:	50                   	push   %eax
81005283:	e8 13 ff ff ff       	call   8100519b <_puts_r>
81005288:	83 c4 10             	add    $0x10,%esp
8100528b:	c9                   	leave  
8100528c:	c3                   	ret    

8100528d <cleanup_glue>:
8100528d:	55                   	push   %ebp
8100528e:	89 e5                	mov    %esp,%ebp
81005290:	83 ec 08             	sub    $0x8,%esp
81005293:	8b 45 0c             	mov    0xc(%ebp),%eax
81005296:	8b 00                	mov    (%eax),%eax
81005298:	85 c0                	test   %eax,%eax
8100529a:	74 14                	je     810052b0 <cleanup_glue+0x23>
8100529c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100529f:	8b 00                	mov    (%eax),%eax
810052a1:	83 ec 08             	sub    $0x8,%esp
810052a4:	50                   	push   %eax
810052a5:	ff 75 08             	push   0x8(%ebp)
810052a8:	e8 e0 ff ff ff       	call   8100528d <cleanup_glue>
810052ad:	83 c4 10             	add    $0x10,%esp
810052b0:	83 ec 08             	sub    $0x8,%esp
810052b3:	ff 75 0c             	push   0xc(%ebp)
810052b6:	ff 75 08             	push   0x8(%ebp)
810052b9:	e8 33 ca ff ff       	call   81001cf1 <_free_r>
810052be:	83 c4 10             	add    $0x10,%esp
810052c1:	90                   	nop
810052c2:	c9                   	leave  
810052c3:	c3                   	ret    

810052c4 <_reclaim_reent>:
810052c4:	55                   	push   %ebp
810052c5:	89 e5                	mov    %esp,%ebp
810052c7:	83 ec 28             	sub    $0x28,%esp
810052ca:	a1 64 91 00 81       	mov    0x81009164,%eax
810052cf:	39 45 08             	cmp    %eax,0x8(%ebp)
810052d2:	0f 84 49 01 00 00    	je     81005421 <_reclaim_reent+0x15d>
810052d8:	8b 45 08             	mov    0x8(%ebp),%eax
810052db:	8b 40 4c             	mov    0x4c(%eax),%eax
810052de:	85 c0                	test   %eax,%eax
810052e0:	74 64                	je     81005346 <_reclaim_reent+0x82>
810052e2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810052e9:	eb 3e                	jmp    81005329 <_reclaim_reent+0x65>
810052eb:	8b 45 08             	mov    0x8(%ebp),%eax
810052ee:	8b 50 4c             	mov    0x4c(%eax),%edx
810052f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810052f4:	c1 e0 02             	shl    $0x2,%eax
810052f7:	01 d0                	add    %edx,%eax
810052f9:	8b 00                	mov    (%eax),%eax
810052fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810052fe:	eb 1f                	jmp    8100531f <_reclaim_reent+0x5b>
81005300:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005303:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005306:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005309:	8b 00                	mov    (%eax),%eax
8100530b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100530e:	83 ec 08             	sub    $0x8,%esp
81005311:	ff 75 e8             	push   -0x18(%ebp)
81005314:	ff 75 08             	push   0x8(%ebp)
81005317:	e8 d5 c9 ff ff       	call   81001cf1 <_free_r>
8100531c:	83 c4 10             	add    $0x10,%esp
8100531f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005323:	75 db                	jne    81005300 <_reclaim_reent+0x3c>
81005325:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005329:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100532c:	83 f8 1f             	cmp    $0x1f,%eax
8100532f:	76 ba                	jbe    810052eb <_reclaim_reent+0x27>
81005331:	8b 45 08             	mov    0x8(%ebp),%eax
81005334:	8b 40 4c             	mov    0x4c(%eax),%eax
81005337:	83 ec 08             	sub    $0x8,%esp
8100533a:	50                   	push   %eax
8100533b:	ff 75 08             	push   0x8(%ebp)
8100533e:	e8 ae c9 ff ff       	call   81001cf1 <_free_r>
81005343:	83 c4 10             	add    $0x10,%esp
81005346:	8b 45 08             	mov    0x8(%ebp),%eax
81005349:	8b 40 40             	mov    0x40(%eax),%eax
8100534c:	85 c0                	test   %eax,%eax
8100534e:	74 15                	je     81005365 <_reclaim_reent+0xa1>
81005350:	8b 45 08             	mov    0x8(%ebp),%eax
81005353:	8b 40 40             	mov    0x40(%eax),%eax
81005356:	83 ec 08             	sub    $0x8,%esp
81005359:	50                   	push   %eax
8100535a:	ff 75 08             	push   0x8(%ebp)
8100535d:	e8 8f c9 ff ff       	call   81001cf1 <_free_r>
81005362:	83 c4 10             	add    $0x10,%esp
81005365:	8b 45 08             	mov    0x8(%ebp),%eax
81005368:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100536e:	85 c0                	test   %eax,%eax
81005370:	74 50                	je     810053c2 <_reclaim_reent+0xfe>
81005372:	8b 45 08             	mov    0x8(%ebp),%eax
81005375:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100537b:	8b 55 08             	mov    0x8(%ebp),%edx
8100537e:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81005384:	39 d0                	cmp    %edx,%eax
81005386:	74 3a                	je     810053c2 <_reclaim_reent+0xfe>
81005388:	8b 45 08             	mov    0x8(%ebp),%eax
8100538b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005391:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005394:	eb 1f                	jmp    810053b5 <_reclaim_reent+0xf1>
81005396:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005399:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100539c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100539f:	8b 00                	mov    (%eax),%eax
810053a1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810053a4:	83 ec 08             	sub    $0x8,%esp
810053a7:	ff 75 e4             	push   -0x1c(%ebp)
810053aa:	ff 75 08             	push   0x8(%ebp)
810053ad:	e8 3f c9 ff ff       	call   81001cf1 <_free_r>
810053b2:	83 c4 10             	add    $0x10,%esp
810053b5:	8b 45 08             	mov    0x8(%ebp),%eax
810053b8:	05 4c 01 00 00       	add    $0x14c,%eax
810053bd:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810053c0:	75 d4                	jne    81005396 <_reclaim_reent+0xd2>
810053c2:	8b 45 08             	mov    0x8(%ebp),%eax
810053c5:	8b 40 54             	mov    0x54(%eax),%eax
810053c8:	85 c0                	test   %eax,%eax
810053ca:	74 15                	je     810053e1 <_reclaim_reent+0x11d>
810053cc:	8b 45 08             	mov    0x8(%ebp),%eax
810053cf:	8b 40 54             	mov    0x54(%eax),%eax
810053d2:	83 ec 08             	sub    $0x8,%esp
810053d5:	50                   	push   %eax
810053d6:	ff 75 08             	push   0x8(%ebp)
810053d9:	e8 13 c9 ff ff       	call   81001cf1 <_free_r>
810053de:	83 c4 10             	add    $0x10,%esp
810053e1:	8b 45 08             	mov    0x8(%ebp),%eax
810053e4:	8b 40 38             	mov    0x38(%eax),%eax
810053e7:	85 c0                	test   %eax,%eax
810053e9:	74 36                	je     81005421 <_reclaim_reent+0x15d>
810053eb:	8b 45 08             	mov    0x8(%ebp),%eax
810053ee:	8b 40 3c             	mov    0x3c(%eax),%eax
810053f1:	83 ec 0c             	sub    $0xc,%esp
810053f4:	ff 75 08             	push   0x8(%ebp)
810053f7:	ff d0                	call   *%eax
810053f9:	83 c4 10             	add    $0x10,%esp
810053fc:	8b 45 08             	mov    0x8(%ebp),%eax
810053ff:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005405:	85 c0                	test   %eax,%eax
81005407:	74 18                	je     81005421 <_reclaim_reent+0x15d>
81005409:	8b 45 08             	mov    0x8(%ebp),%eax
8100540c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005412:	83 ec 08             	sub    $0x8,%esp
81005415:	50                   	push   %eax
81005416:	ff 75 08             	push   0x8(%ebp)
81005419:	e8 6f fe ff ff       	call   8100528d <cleanup_glue>
8100541e:	83 c4 10             	add    $0x10,%esp
81005421:	90                   	nop
81005422:	c9                   	leave  
81005423:	c3                   	ret    

81005424 <lflush>:
81005424:	55                   	push   %ebp
81005425:	89 e5                	mov    %esp,%ebp
81005427:	83 ec 08             	sub    $0x8,%esp
8100542a:	8b 45 08             	mov    0x8(%ebp),%eax
8100542d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005431:	98                   	cwtl   
81005432:	83 e0 09             	and    $0x9,%eax
81005435:	83 f8 09             	cmp    $0x9,%eax
81005438:	75 10                	jne    8100544a <lflush+0x26>
8100543a:	83 ec 0c             	sub    $0xc,%esp
8100543d:	ff 75 08             	push   0x8(%ebp)
81005440:	e8 11 bf ff ff       	call   81001356 <fflush>
81005445:	83 c4 10             	add    $0x10,%esp
81005448:	eb 05                	jmp    8100544f <lflush+0x2b>
8100544a:	b8 00 00 00 00       	mov    $0x0,%eax
8100544f:	c9                   	leave  
81005450:	c3                   	ret    

81005451 <__srefill_r>:
81005451:	55                   	push   %ebp
81005452:	89 e5                	mov    %esp,%ebp
81005454:	56                   	push   %esi
81005455:	53                   	push   %ebx
81005456:	83 ec 10             	sub    $0x10,%esp
81005459:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100545c:	8b 45 08             	mov    0x8(%ebp),%eax
8100545f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005462:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005466:	74 18                	je     81005480 <__srefill_r+0x2f>
81005468:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100546b:	8b 40 38             	mov    0x38(%eax),%eax
8100546e:	85 c0                	test   %eax,%eax
81005470:	75 0e                	jne    81005480 <__srefill_r+0x2f>
81005472:	83 ec 0c             	sub    $0xc,%esp
81005475:	ff 75 f4             	push   -0xc(%ebp)
81005478:	e8 84 c3 ff ff       	call   81001801 <__sinit>
8100547d:	83 c4 10             	add    $0x10,%esp
81005480:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005484:	98                   	cwtl   
81005485:	25 00 20 00 00       	and    $0x2000,%eax
8100548a:	85 c0                	test   %eax,%eax
8100548c:	75 14                	jne    810054a2 <__srefill_r+0x51>
8100548e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005492:	80 cc 20             	or     $0x20,%ah
81005495:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005499:	8b 43 64             	mov    0x64(%ebx),%eax
8100549c:	80 e4 df             	and    $0xdf,%ah
8100549f:	89 43 64             	mov    %eax,0x64(%ebx)
810054a2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810054a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054ad:	98                   	cwtl   
810054ae:	83 e0 20             	and    $0x20,%eax
810054b1:	85 c0                	test   %eax,%eax
810054b3:	74 0a                	je     810054bf <__srefill_r+0x6e>
810054b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810054ba:	e9 8c 01 00 00       	jmp    8100564b <__srefill_r+0x1fa>
810054bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054c3:	98                   	cwtl   
810054c4:	83 e0 04             	and    $0x4,%eax
810054c7:	85 c0                	test   %eax,%eax
810054c9:	75 79                	jne    81005544 <__srefill_r+0xf3>
810054cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054cf:	98                   	cwtl   
810054d0:	83 e0 10             	and    $0x10,%eax
810054d3:	85 c0                	test   %eax,%eax
810054d5:	75 1e                	jne    810054f5 <__srefill_r+0xa4>
810054d7:	8b 45 08             	mov    0x8(%ebp),%eax
810054da:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810054e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054e4:	83 c8 40             	or     $0x40,%eax
810054e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810054eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810054f0:	e9 56 01 00 00       	jmp    8100564b <__srefill_r+0x1fa>
810054f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054f9:	98                   	cwtl   
810054fa:	83 e0 08             	and    $0x8,%eax
810054fd:	85 c0                	test   %eax,%eax
810054ff:	74 36                	je     81005537 <__srefill_r+0xe6>
81005501:	83 ec 08             	sub    $0x8,%esp
81005504:	53                   	push   %ebx
81005505:	ff 75 08             	push   0x8(%ebp)
81005508:	e8 f1 bd ff ff       	call   810012fe <_fflush_r>
8100550d:	83 c4 10             	add    $0x10,%esp
81005510:	85 c0                	test   %eax,%eax
81005512:	74 0a                	je     8100551e <__srefill_r+0xcd>
81005514:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005519:	e9 2d 01 00 00       	jmp    8100564b <__srefill_r+0x1fa>
8100551e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005522:	83 e0 f7             	and    $0xfffffff7,%eax
81005525:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005529:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005530:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005537:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100553b:	83 c8 04             	or     $0x4,%eax
8100553e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005542:	eb 46                	jmp    8100558a <__srefill_r+0x139>
81005544:	8b 43 30             	mov    0x30(%ebx),%eax
81005547:	85 c0                	test   %eax,%eax
81005549:	74 3f                	je     8100558a <__srefill_r+0x139>
8100554b:	8b 53 30             	mov    0x30(%ebx),%edx
8100554e:	8d 43 40             	lea    0x40(%ebx),%eax
81005551:	39 c2                	cmp    %eax,%edx
81005553:	74 12                	je     81005567 <__srefill_r+0x116>
81005555:	8b 43 30             	mov    0x30(%ebx),%eax
81005558:	83 ec 08             	sub    $0x8,%esp
8100555b:	50                   	push   %eax
8100555c:	ff 75 08             	push   0x8(%ebp)
8100555f:	e8 8d c7 ff ff       	call   81001cf1 <_free_r>
81005564:	83 c4 10             	add    $0x10,%esp
81005567:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100556e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005571:	89 43 04             	mov    %eax,0x4(%ebx)
81005574:	8b 43 04             	mov    0x4(%ebx),%eax
81005577:	85 c0                	test   %eax,%eax
81005579:	74 0f                	je     8100558a <__srefill_r+0x139>
8100557b:	8b 43 38             	mov    0x38(%ebx),%eax
8100557e:	89 03                	mov    %eax,(%ebx)
81005580:	b8 00 00 00 00       	mov    $0x0,%eax
81005585:	e9 c1 00 00 00       	jmp    8100564b <__srefill_r+0x1fa>
8100558a:	8b 43 10             	mov    0x10(%ebx),%eax
8100558d:	85 c0                	test   %eax,%eax
8100558f:	75 0f                	jne    810055a0 <__srefill_r+0x14f>
81005591:	83 ec 08             	sub    $0x8,%esp
81005594:	53                   	push   %ebx
81005595:	ff 75 08             	push   0x8(%ebp)
81005598:	e8 cb e1 ff ff       	call   81003768 <__smakebuf_r>
8100559d:	83 c4 10             	add    $0x10,%esp
810055a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055a4:	98                   	cwtl   
810055a5:	83 e0 03             	and    $0x3,%eax
810055a8:	85 c0                	test   %eax,%eax
810055aa:	74 48                	je     810055f4 <__srefill_r+0x1a3>
810055ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055b0:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810055b4:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810055ba:	a1 b0 89 00 81       	mov    0x810089b0,%eax
810055bf:	83 ec 08             	sub    $0x8,%esp
810055c2:	68 24 54 00 81       	push   $0x81005424
810055c7:	50                   	push   %eax
810055c8:	e8 b1 d1 ff ff       	call   8100277e <_fwalk>
810055cd:	83 c4 10             	add    $0x10,%esp
810055d0:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810055d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055d8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055dc:	98                   	cwtl   
810055dd:	83 e0 09             	and    $0x9,%eax
810055e0:	83 f8 09             	cmp    $0x9,%eax
810055e3:	75 0f                	jne    810055f4 <__srefill_r+0x1a3>
810055e5:	83 ec 08             	sub    $0x8,%esp
810055e8:	53                   	push   %ebx
810055e9:	ff 75 08             	push   0x8(%ebp)
810055ec:	e8 e7 ba ff ff       	call   810010d8 <__sflush_r>
810055f1:	83 c4 10             	add    $0x10,%esp
810055f4:	8b 43 10             	mov    0x10(%ebx),%eax
810055f7:	89 03                	mov    %eax,(%ebx)
810055f9:	8b 43 20             	mov    0x20(%ebx),%eax
810055fc:	8b 73 14             	mov    0x14(%ebx),%esi
810055ff:	8b 0b                	mov    (%ebx),%ecx
81005601:	8b 53 1c             	mov    0x1c(%ebx),%edx
81005604:	56                   	push   %esi
81005605:	51                   	push   %ecx
81005606:	52                   	push   %edx
81005607:	ff 75 08             	push   0x8(%ebp)
8100560a:	ff d0                	call   *%eax
8100560c:	83 c4 10             	add    $0x10,%esp
8100560f:	89 43 04             	mov    %eax,0x4(%ebx)
81005612:	8b 43 04             	mov    0x4(%ebx),%eax
81005615:	85 c0                	test   %eax,%eax
81005617:	7f 2d                	jg     81005646 <__srefill_r+0x1f5>
81005619:	8b 43 04             	mov    0x4(%ebx),%eax
8100561c:	85 c0                	test   %eax,%eax
8100561e:	75 0d                	jne    8100562d <__srefill_r+0x1dc>
81005620:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005624:	83 c8 20             	or     $0x20,%eax
81005627:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100562b:	eb 12                	jmp    8100563f <__srefill_r+0x1ee>
8100562d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005634:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005638:	83 c8 40             	or     $0x40,%eax
8100563b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100563f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005644:	eb 05                	jmp    8100564b <__srefill_r+0x1fa>
81005646:	b8 00 00 00 00       	mov    $0x0,%eax
8100564b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100564e:	5b                   	pop    %ebx
8100564f:	5e                   	pop    %esi
81005650:	5d                   	pop    %ebp
81005651:	c3                   	ret    

81005652 <_sbrk_r>:
81005652:	55                   	push   %ebp
81005653:	89 e5                	mov    %esp,%ebp
81005655:	83 ec 18             	sub    $0x18,%esp
81005658:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
8100565f:	00 00 00 
81005662:	83 ec 0c             	sub    $0xc,%esp
81005665:	ff 75 0c             	push   0xc(%ebp)
81005668:	e8 0d b7 ff ff       	call   81000d7a <sbrk>
8100566d:	83 c4 10             	add    $0x10,%esp
81005670:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005673:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005677:	75 14                	jne    8100568d <_sbrk_r+0x3b>
81005679:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
8100567e:	85 c0                	test   %eax,%eax
81005680:	74 0b                	je     8100568d <_sbrk_r+0x3b>
81005682:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
81005688:	8b 45 08             	mov    0x8(%ebp),%eax
8100568b:	89 10                	mov    %edx,(%eax)
8100568d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005690:	c9                   	leave  
81005691:	c3                   	ret    

81005692 <setvbuf>:
81005692:	55                   	push   %ebp
81005693:	89 e5                	mov    %esp,%ebp
81005695:	57                   	push   %edi
81005696:	56                   	push   %esi
81005697:	53                   	push   %ebx
81005698:	83 ec 2c             	sub    $0x2c,%esp
8100569b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100569e:	8b 7d 10             	mov    0x10(%ebp),%edi
810056a1:	8b 75 14             	mov    0x14(%ebp),%esi
810056a4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810056ab:	a1 64 91 00 81       	mov    0x81009164,%eax
810056b0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810056b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810056b6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056b9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810056bd:	74 18                	je     810056d7 <setvbuf+0x45>
810056bf:	8b 45 dc             	mov    -0x24(%ebp),%eax
810056c2:	8b 40 38             	mov    0x38(%eax),%eax
810056c5:	85 c0                	test   %eax,%eax
810056c7:	75 0e                	jne    810056d7 <setvbuf+0x45>
810056c9:	83 ec 0c             	sub    $0xc,%esp
810056cc:	ff 75 dc             	push   -0x24(%ebp)
810056cf:	e8 2d c1 ff ff       	call   81001801 <__sinit>
810056d4:	83 c4 10             	add    $0x10,%esp
810056d7:	83 ff 02             	cmp    $0x2,%edi
810056da:	74 19                	je     810056f5 <setvbuf+0x63>
810056dc:	85 ff                	test   %edi,%edi
810056de:	74 05                	je     810056e5 <setvbuf+0x53>
810056e0:	83 ff 01             	cmp    $0x1,%edi
810056e3:	75 06                	jne    810056eb <setvbuf+0x59>
810056e5:	89 f0                	mov    %esi,%eax
810056e7:	85 c0                	test   %eax,%eax
810056e9:	79 0a                	jns    810056f5 <setvbuf+0x63>
810056eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810056f0:	e9 a1 01 00 00       	jmp    81005896 <setvbuf+0x204>
810056f5:	83 ec 08             	sub    $0x8,%esp
810056f8:	53                   	push   %ebx
810056f9:	ff 75 e0             	push   -0x20(%ebp)
810056fc:	e8 fd bb ff ff       	call   810012fe <_fflush_r>
81005701:	83 c4 10             	add    $0x10,%esp
81005704:	8b 43 30             	mov    0x30(%ebx),%eax
81005707:	85 c0                	test   %eax,%eax
81005709:	74 23                	je     8100572e <setvbuf+0x9c>
8100570b:	8b 53 30             	mov    0x30(%ebx),%edx
8100570e:	8d 43 40             	lea    0x40(%ebx),%eax
81005711:	39 c2                	cmp    %eax,%edx
81005713:	74 12                	je     81005727 <setvbuf+0x95>
81005715:	8b 43 30             	mov    0x30(%ebx),%eax
81005718:	83 ec 08             	sub    $0x8,%esp
8100571b:	50                   	push   %eax
8100571c:	ff 75 e0             	push   -0x20(%ebp)
8100571f:	e8 cd c5 ff ff       	call   81001cf1 <_free_r>
81005724:	83 c4 10             	add    $0x10,%esp
81005727:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100572e:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005735:	8b 43 18             	mov    0x18(%ebx),%eax
81005738:	89 43 04             	mov    %eax,0x4(%ebx)
8100573b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100573f:	98                   	cwtl   
81005740:	25 80 00 00 00       	and    $0x80,%eax
81005745:	85 c0                	test   %eax,%eax
81005747:	74 12                	je     8100575b <setvbuf+0xc9>
81005749:	8b 43 10             	mov    0x10(%ebx),%eax
8100574c:	83 ec 08             	sub    $0x8,%esp
8100574f:	50                   	push   %eax
81005750:	ff 75 e0             	push   -0x20(%ebp)
81005753:	e8 99 c5 ff ff       	call   81001cf1 <_free_r>
81005758:	83 c4 10             	add    $0x10,%esp
8100575b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100575f:	66 25 5c f3          	and    $0xf35c,%ax
81005763:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005767:	83 ff 02             	cmp    $0x2,%edi
8100576a:	74 6f                	je     810057db <setvbuf+0x149>
8100576c:	8d 45 d4             	lea    -0x2c(%ebp),%eax
8100576f:	50                   	push   %eax
81005770:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005773:	50                   	push   %eax
81005774:	53                   	push   %ebx
81005775:	ff 75 e0             	push   -0x20(%ebp)
81005778:	e8 d8 e0 ff ff       	call   81003855 <__swhatbuf_r>
8100577d:	83 c4 10             	add    $0x10,%esp
81005780:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005784:	09 d0                	or     %edx,%eax
81005786:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100578a:	85 f6                	test   %esi,%esi
8100578c:	75 0a                	jne    81005798 <setvbuf+0x106>
8100578e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005795:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005798:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100579c:	75 73                	jne    81005811 <setvbuf+0x17f>
8100579e:	83 ec 0c             	sub    $0xc,%esp
810057a1:	56                   	push   %esi
810057a2:	e8 41 e1 ff ff       	call   810038e8 <malloc>
810057a7:	83 c4 10             	add    $0x10,%esp
810057aa:	89 45 0c             	mov    %eax,0xc(%ebp)
810057ad:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810057b1:	75 20                	jne    810057d3 <setvbuf+0x141>
810057b3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810057ba:	8b 45 d8             	mov    -0x28(%ebp),%eax
810057bd:	39 c6                	cmp    %eax,%esi
810057bf:	74 12                	je     810057d3 <setvbuf+0x141>
810057c1:	8b 75 d8             	mov    -0x28(%ebp),%esi
810057c4:	83 ec 0c             	sub    $0xc,%esp
810057c7:	56                   	push   %esi
810057c8:	e8 1b e1 ff ff       	call   810038e8 <malloc>
810057cd:	83 c4 10             	add    $0x10,%esp
810057d0:	89 45 0c             	mov    %eax,0xc(%ebp)
810057d3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810057d7:	75 2e                	jne    81005807 <setvbuf+0x175>
810057d9:	eb 01                	jmp    810057dc <setvbuf+0x14a>
810057db:	90                   	nop
810057dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057e0:	83 c8 02             	or     $0x2,%eax
810057e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810057e7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810057ee:	8d 43 43             	lea    0x43(%ebx),%eax
810057f1:	89 03                	mov    %eax,(%ebx)
810057f3:	8b 03                	mov    (%ebx),%eax
810057f5:	89 43 10             	mov    %eax,0x10(%ebx)
810057f8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810057ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005802:	e9 8f 00 00 00       	jmp    81005896 <setvbuf+0x204>
81005807:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100580b:	0c 80                	or     $0x80,%al
8100580d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005811:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005814:	8b 40 38             	mov    0x38(%eax),%eax
81005817:	85 c0                	test   %eax,%eax
81005819:	75 0e                	jne    81005829 <setvbuf+0x197>
8100581b:	83 ec 0c             	sub    $0xc,%esp
8100581e:	ff 75 e0             	push   -0x20(%ebp)
81005821:	e8 db bf ff ff       	call   81001801 <__sinit>
81005826:	83 c4 10             	add    $0x10,%esp
81005829:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100582c:	39 c6                	cmp    %eax,%esi
8100582e:	74 0b                	je     8100583b <setvbuf+0x1a9>
81005830:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005834:	80 cc 08             	or     $0x8,%ah
81005837:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100583b:	83 ff 01             	cmp    $0x1,%edi
8100583e:	75 0b                	jne    8100584b <setvbuf+0x1b9>
81005840:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005844:	83 c8 01             	or     $0x1,%eax
81005847:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100584b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100584e:	89 03                	mov    %eax,(%ebx)
81005850:	8b 03                	mov    (%ebx),%eax
81005852:	89 43 10             	mov    %eax,0x10(%ebx)
81005855:	89 f0                	mov    %esi,%eax
81005857:	89 43 14             	mov    %eax,0x14(%ebx)
8100585a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100585e:	98                   	cwtl   
8100585f:	83 e0 08             	and    $0x8,%eax
81005862:	85 c0                	test   %eax,%eax
81005864:	74 24                	je     8100588a <setvbuf+0x1f8>
81005866:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100586a:	98                   	cwtl   
8100586b:	83 e0 01             	and    $0x1,%eax
8100586e:	85 c0                	test   %eax,%eax
81005870:	74 11                	je     81005883 <setvbuf+0x1f1>
81005872:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005879:	8b 43 14             	mov    0x14(%ebx),%eax
8100587c:	f7 d8                	neg    %eax
8100587e:	89 43 18             	mov    %eax,0x18(%ebx)
81005881:	eb 0e                	jmp    81005891 <setvbuf+0x1ff>
81005883:	89 f0                	mov    %esi,%eax
81005885:	89 43 08             	mov    %eax,0x8(%ebx)
81005888:	eb 07                	jmp    81005891 <setvbuf+0x1ff>
8100588a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005891:	b8 00 00 00 00       	mov    $0x0,%eax
81005896:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005899:	5b                   	pop    %ebx
8100589a:	5e                   	pop    %esi
8100589b:	5f                   	pop    %edi
8100589c:	5d                   	pop    %ebp
8100589d:	c3                   	ret    

8100589e <_siprintf_r>:
8100589e:	55                   	push   %ebp
8100589f:	89 e5                	mov    %esp,%ebp
810058a1:	83 ec 78             	sub    $0x78,%esp
810058a4:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810058aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810058ad:	89 45 88             	mov    %eax,-0x78(%ebp)
810058b0:	8b 45 88             	mov    -0x78(%ebp),%eax
810058b3:	89 45 98             	mov    %eax,-0x68(%ebp)
810058b6:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810058bd:	8b 45 90             	mov    -0x70(%ebp),%eax
810058c0:	89 45 9c             	mov    %eax,-0x64(%ebp)
810058c3:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810058c9:	8d 45 14             	lea    0x14(%ebp),%eax
810058cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810058cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058d2:	50                   	push   %eax
810058d3:	ff 75 10             	push   0x10(%ebp)
810058d6:	8d 45 88             	lea    -0x78(%ebp),%eax
810058d9:	50                   	push   %eax
810058da:	ff 75 08             	push   0x8(%ebp)
810058dd:	e8 14 1c 00 00       	call   810074f6 <_svfiprintf_r>
810058e2:	83 c4 10             	add    $0x10,%esp
810058e5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810058e8:	8b 45 88             	mov    -0x78(%ebp),%eax
810058eb:	c6 00 00             	movb   $0x0,(%eax)
810058ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058f1:	c9                   	leave  
810058f2:	c3                   	ret    

810058f3 <siprintf>:
810058f3:	55                   	push   %ebp
810058f4:	89 e5                	mov    %esp,%ebp
810058f6:	83 ec 78             	sub    $0x78,%esp
810058f9:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810058ff:	8b 45 08             	mov    0x8(%ebp),%eax
81005902:	89 45 88             	mov    %eax,-0x78(%ebp)
81005905:	8b 45 88             	mov    -0x78(%ebp),%eax
81005908:	89 45 98             	mov    %eax,-0x68(%ebp)
8100590b:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81005912:	8b 45 90             	mov    -0x70(%ebp),%eax
81005915:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005918:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
8100591e:	8d 45 10             	lea    0x10(%ebp),%eax
81005921:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005924:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005927:	a1 64 91 00 81       	mov    0x81009164,%eax
8100592c:	52                   	push   %edx
8100592d:	ff 75 0c             	push   0xc(%ebp)
81005930:	8d 55 88             	lea    -0x78(%ebp),%edx
81005933:	52                   	push   %edx
81005934:	50                   	push   %eax
81005935:	e8 bc 1b 00 00       	call   810074f6 <_svfiprintf_r>
8100593a:	83 c4 10             	add    $0x10,%esp
8100593d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005940:	8b 45 88             	mov    -0x78(%ebp),%eax
81005943:	c6 00 00             	movb   $0x0,(%eax)
81005946:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005949:	c9                   	leave  
8100594a:	c3                   	ret    

8100594b <__sread>:
8100594b:	55                   	push   %ebp
8100594c:	89 e5                	mov    %esp,%ebp
8100594e:	56                   	push   %esi
8100594f:	53                   	push   %ebx
81005950:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005953:	8b 55 14             	mov    0x14(%ebp),%edx
81005956:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100595a:	98                   	cwtl   
8100595b:	52                   	push   %edx
8100595c:	ff 75 10             	push   0x10(%ebp)
8100595f:	50                   	push   %eax
81005960:	ff 75 08             	push   0x8(%ebp)
81005963:	e8 cc 1f 00 00       	call   81007934 <_read_r>
81005968:	83 c4 10             	add    $0x10,%esp
8100596b:	89 c6                	mov    %eax,%esi
8100596d:	85 f6                	test   %esi,%esi
8100596f:	78 0a                	js     8100597b <__sread+0x30>
81005971:	8b 43 50             	mov    0x50(%ebx),%eax
81005974:	01 f0                	add    %esi,%eax
81005976:	89 43 50             	mov    %eax,0x50(%ebx)
81005979:	eb 0b                	jmp    81005986 <__sread+0x3b>
8100597b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100597f:	80 e4 ef             	and    $0xef,%ah
81005982:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005986:	89 f0                	mov    %esi,%eax
81005988:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100598b:	5b                   	pop    %ebx
8100598c:	5e                   	pop    %esi
8100598d:	5d                   	pop    %ebp
8100598e:	c3                   	ret    

8100598f <__seofread>:
8100598f:	55                   	push   %ebp
81005990:	89 e5                	mov    %esp,%ebp
81005992:	b8 00 00 00 00       	mov    $0x0,%eax
81005997:	5d                   	pop    %ebp
81005998:	c3                   	ret    

81005999 <__swrite>:
81005999:	55                   	push   %ebp
8100599a:	89 e5                	mov    %esp,%ebp
8100599c:	53                   	push   %ebx
8100599d:	83 ec 14             	sub    $0x14,%esp
810059a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810059a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059a7:	98                   	cwtl   
810059a8:	25 00 01 00 00       	and    $0x100,%eax
810059ad:	85 c0                	test   %eax,%eax
810059af:	74 15                	je     810059c6 <__swrite+0x2d>
810059b1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059b5:	98                   	cwtl   
810059b6:	6a 02                	push   $0x2
810059b8:	6a 00                	push   $0x0
810059ba:	50                   	push   %eax
810059bb:	ff 75 08             	push   0x8(%ebp)
810059be:	e8 db 15 00 00       	call   81006f9e <_lseek_r>
810059c3:	83 c4 10             	add    $0x10,%esp
810059c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059ca:	80 e4 ef             	and    $0xef,%ah
810059cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059d1:	8b 55 14             	mov    0x14(%ebp),%edx
810059d4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059d8:	98                   	cwtl   
810059d9:	52                   	push   %edx
810059da:	ff 75 10             	push   0x10(%ebp)
810059dd:	50                   	push   %eax
810059de:	ff 75 08             	push   0x8(%ebp)
810059e1:	e8 4c 07 00 00       	call   81006132 <_write_r>
810059e6:	83 c4 10             	add    $0x10,%esp
810059e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810059ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810059ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810059f2:	c9                   	leave  
810059f3:	c3                   	ret    

810059f4 <__sseek>:
810059f4:	55                   	push   %ebp
810059f5:	89 e5                	mov    %esp,%ebp
810059f7:	56                   	push   %esi
810059f8:	53                   	push   %ebx
810059f9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810059fc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005a00:	98                   	cwtl   
81005a01:	ff 75 14             	push   0x14(%ebp)
81005a04:	ff 75 10             	push   0x10(%ebp)
81005a07:	50                   	push   %eax
81005a08:	ff 75 08             	push   0x8(%ebp)
81005a0b:	e8 8e 15 00 00       	call   81006f9e <_lseek_r>
81005a10:	83 c4 10             	add    $0x10,%esp
81005a13:	89 c6                	mov    %eax,%esi
81005a15:	83 fe ff             	cmp    $0xffffffff,%esi
81005a18:	75 0d                	jne    81005a27 <__sseek+0x33>
81005a1a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a1e:	80 e4 ef             	and    $0xef,%ah
81005a21:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a25:	eb 0e                	jmp    81005a35 <__sseek+0x41>
81005a27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a2b:	80 cc 10             	or     $0x10,%ah
81005a2e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a32:	89 73 50             	mov    %esi,0x50(%ebx)
81005a35:	89 f0                	mov    %esi,%eax
81005a37:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a3a:	5b                   	pop    %ebx
81005a3b:	5e                   	pop    %esi
81005a3c:	5d                   	pop    %ebp
81005a3d:	c3                   	ret    

81005a3e <__sclose>:
81005a3e:	55                   	push   %ebp
81005a3f:	89 e5                	mov    %esp,%ebp
81005a41:	83 ec 18             	sub    $0x18,%esp
81005a44:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a47:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a4d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a51:	98                   	cwtl   
81005a52:	83 ec 08             	sub    $0x8,%esp
81005a55:	50                   	push   %eax
81005a56:	ff 75 08             	push   0x8(%ebp)
81005a59:	e8 8a 09 00 00       	call   810063e8 <_close_r>
81005a5e:	83 c4 10             	add    $0x10,%esp
81005a61:	c9                   	leave  
81005a62:	c3                   	ret    
81005a63:	66 90                	xchg   %ax,%ax
81005a65:	66 90                	xchg   %ax,%ax
81005a67:	66 90                	xchg   %ax,%ax
81005a69:	66 90                	xchg   %ax,%ax
81005a6b:	66 90                	xchg   %ax,%ax
81005a6d:	66 90                	xchg   %ax,%ax
81005a6f:	90                   	nop

81005a70 <strchr>:
81005a70:	55                   	push   %ebp
81005a71:	89 e5                	mov    %esp,%ebp
81005a73:	57                   	push   %edi
81005a74:	53                   	push   %ebx
81005a75:	31 db                	xor    %ebx,%ebx
81005a77:	8b 7d 08             	mov    0x8(%ebp),%edi
81005a7a:	02 5d 0c             	add    0xc(%ebp),%bl
81005a7d:	0f 84 98 00 00 00    	je     81005b1b <L25>
81005a83:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a89:	74 37                	je     81005ac2 <L5>
81005a8b:	89 f8                	mov    %edi,%eax
81005a8d:	8a 08                	mov    (%eax),%cl
81005a8f:	84 c9                	test   %cl,%cl
81005a91:	74 7b                	je     81005b0e <L14>
81005a93:	38 d9                	cmp    %bl,%cl
81005a95:	74 7d                	je     81005b14 <L19>
81005a97:	47                   	inc    %edi
81005a98:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a9e:	74 22                	je     81005ac2 <L5>
81005aa0:	89 f8                	mov    %edi,%eax
81005aa2:	8a 08                	mov    (%eax),%cl
81005aa4:	84 c9                	test   %cl,%cl
81005aa6:	74 66                	je     81005b0e <L14>
81005aa8:	38 d9                	cmp    %bl,%cl
81005aaa:	74 68                	je     81005b14 <L19>
81005aac:	47                   	inc    %edi
81005aad:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005ab3:	74 0d                	je     81005ac2 <L5>
81005ab5:	89 f8                	mov    %edi,%eax
81005ab7:	8a 08                	mov    (%eax),%cl
81005ab9:	84 c9                	test   %cl,%cl
81005abb:	74 51                	je     81005b0e <L14>
81005abd:	38 d9                	cmp    %bl,%cl
81005abf:	74 53                	je     81005b14 <L19>
81005ac1:	47                   	inc    %edi

81005ac2 <L5>:
81005ac2:	89 d9                	mov    %ebx,%ecx
81005ac4:	c1 e3 08             	shl    $0x8,%ebx
81005ac7:	83 ef 04             	sub    $0x4,%edi
81005aca:	09 cb                	or     %ecx,%ebx
81005acc:	89 da                	mov    %ebx,%edx
81005ace:	c1 e3 10             	shl    $0x10,%ebx
81005ad1:	09 d3                	or     %edx,%ebx

81005ad3 <L10>:
81005ad3:	83 c7 04             	add    $0x4,%edi
81005ad6:	8b 0f                	mov    (%edi),%ecx
81005ad8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005ade:	89 c8                	mov    %ecx,%eax
81005ae0:	f7 d0                	not    %eax
81005ae2:	21 c2                	and    %eax,%edx
81005ae4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005aea:	75 14                	jne    81005b00 <L9>
81005aec:	31 d9                	xor    %ebx,%ecx
81005aee:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005af4:	f7 d1                	not    %ecx
81005af6:	21 ca                	and    %ecx,%edx
81005af8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005afe:	74 d3                	je     81005ad3 <L10>

81005b00 <L9>:
81005b00:	8d 47 ff             	lea    -0x1(%edi),%eax

81005b03 <L15>:
81005b03:	40                   	inc    %eax
81005b04:	8a 10                	mov    (%eax),%dl
81005b06:	84 d2                	test   %dl,%dl
81005b08:	74 04                	je     81005b0e <L14>
81005b0a:	38 da                	cmp    %bl,%dl
81005b0c:	75 f5                	jne    81005b03 <L15>

81005b0e <L14>:
81005b0e:	38 18                	cmp    %bl,(%eax)
81005b10:	74 02                	je     81005b14 <L19>
81005b12:	31 c0                	xor    %eax,%eax

81005b14 <L19>:
81005b14:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005b17:	5b                   	pop    %ebx
81005b18:	5f                   	pop    %edi
81005b19:	c9                   	leave  
81005b1a:	c3                   	ret    

81005b1b <L25>:
81005b1b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b21:	74 2b                	je     81005b4e <L26>
81005b23:	89 f8                	mov    %edi,%eax
81005b25:	8a 08                	mov    (%eax),%cl
81005b27:	84 c9                	test   %cl,%cl
81005b29:	74 e9                	je     81005b14 <L19>
81005b2b:	47                   	inc    %edi
81005b2c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b32:	74 1a                	je     81005b4e <L26>
81005b34:	89 f8                	mov    %edi,%eax
81005b36:	8a 08                	mov    (%eax),%cl
81005b38:	84 c9                	test   %cl,%cl
81005b3a:	74 d8                	je     81005b14 <L19>
81005b3c:	47                   	inc    %edi
81005b3d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b43:	74 09                	je     81005b4e <L26>
81005b45:	89 f8                	mov    %edi,%eax
81005b47:	8a 08                	mov    (%eax),%cl
81005b49:	84 c9                	test   %cl,%cl
81005b4b:	74 c7                	je     81005b14 <L19>
81005b4d:	47                   	inc    %edi

81005b4e <L26>:
81005b4e:	83 ef 04             	sub    $0x4,%edi

81005b51 <L27>:
81005b51:	83 c7 04             	add    $0x4,%edi
81005b54:	8b 0f                	mov    (%edi),%ecx
81005b56:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005b5c:	89 c8                	mov    %ecx,%eax
81005b5e:	f7 d0                	not    %eax
81005b60:	21 c2                	and    %eax,%edx
81005b62:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005b68:	74 e7                	je     81005b51 <L27>
81005b6a:	eb 94                	jmp    81005b00 <L9>

81005b6c <strcmp>:
81005b6c:	55                   	push   %ebp
81005b6d:	89 e5                	mov    %esp,%ebp
81005b6f:	83 ec 10             	sub    $0x10,%esp
81005b72:	8b 55 08             	mov    0x8(%ebp),%edx
81005b75:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b78:	09 d0                	or     %edx,%eax
81005b7a:	83 e0 03             	and    $0x3,%eax
81005b7d:	85 c0                	test   %eax,%eax
81005b7f:	75 5e                	jne    81005bdf <strcmp+0x73>
81005b81:	8b 45 08             	mov    0x8(%ebp),%eax
81005b84:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005b87:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b8a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81005b8d:	eb 2c                	jmp    81005bbb <strcmp+0x4f>
81005b8f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b92:	8b 00                	mov    (%eax),%eax
81005b94:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81005b9a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b9d:	8b 00                	mov    (%eax),%eax
81005b9f:	f7 d0                	not    %eax
81005ba1:	21 d0                	and    %edx,%eax
81005ba3:	25 80 80 80 80       	and    $0x80808080,%eax
81005ba8:	85 c0                	test   %eax,%eax
81005baa:	74 07                	je     81005bb3 <strcmp+0x47>
81005bac:	b8 00 00 00 00       	mov    $0x0,%eax
81005bb1:	eb 5c                	jmp    81005c0f <strcmp+0xa3>
81005bb3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81005bb7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81005bbb:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005bbe:	8b 10                	mov    (%eax),%edx
81005bc0:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005bc3:	8b 00                	mov    (%eax),%eax
81005bc5:	39 c2                	cmp    %eax,%edx
81005bc7:	74 c6                	je     81005b8f <strcmp+0x23>
81005bc9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005bcc:	89 45 08             	mov    %eax,0x8(%ebp)
81005bcf:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005bd2:	89 45 0c             	mov    %eax,0xc(%ebp)
81005bd5:	eb 08                	jmp    81005bdf <strcmp+0x73>
81005bd7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81005bdb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81005bdf:	8b 45 08             	mov    0x8(%ebp),%eax
81005be2:	0f b6 00             	movzbl (%eax),%eax
81005be5:	84 c0                	test   %al,%al
81005be7:	74 10                	je     81005bf9 <strcmp+0x8d>
81005be9:	8b 45 08             	mov    0x8(%ebp),%eax
81005bec:	0f b6 10             	movzbl (%eax),%edx
81005bef:	8b 45 0c             	mov    0xc(%ebp),%eax
81005bf2:	0f b6 00             	movzbl (%eax),%eax
81005bf5:	38 c2                	cmp    %al,%dl
81005bf7:	74 de                	je     81005bd7 <strcmp+0x6b>
81005bf9:	8b 45 08             	mov    0x8(%ebp),%eax
81005bfc:	0f b6 00             	movzbl (%eax),%eax
81005bff:	0f b6 d0             	movzbl %al,%edx
81005c02:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c05:	0f b6 00             	movzbl (%eax),%eax
81005c08:	0f b6 c8             	movzbl %al,%ecx
81005c0b:	89 d0                	mov    %edx,%eax
81005c0d:	29 c8                	sub    %ecx,%eax
81005c0f:	c9                   	leave  
81005c10:	c3                   	ret    
81005c11:	66 90                	xchg   %ax,%ax
81005c13:	66 90                	xchg   %ax,%ax
81005c15:	66 90                	xchg   %ax,%ax
81005c17:	66 90                	xchg   %ax,%ax
81005c19:	66 90                	xchg   %ax,%ax
81005c1b:	66 90                	xchg   %ax,%ax
81005c1d:	66 90                	xchg   %ax,%ax
81005c1f:	90                   	nop

81005c20 <strlen>:
81005c20:	55                   	push   %ebp
81005c21:	89 e5                	mov    %esp,%ebp
81005c23:	57                   	push   %edi
81005c24:	8b 55 08             	mov    0x8(%ebp),%edx
81005c27:	89 d7                	mov    %edx,%edi
81005c29:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c2f:	74 25                	je     81005c56 <L5>
81005c31:	8a 0f                	mov    (%edi),%cl
81005c33:	47                   	inc    %edi
81005c34:	84 c9                	test   %cl,%cl
81005c36:	74 56                	je     81005c8e <L15>
81005c38:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c3e:	74 16                	je     81005c56 <L5>
81005c40:	8a 0f                	mov    (%edi),%cl
81005c42:	47                   	inc    %edi
81005c43:	84 c9                	test   %cl,%cl
81005c45:	74 47                	je     81005c8e <L15>
81005c47:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005c4d:	74 07                	je     81005c56 <L5>
81005c4f:	8a 0f                	mov    (%edi),%cl
81005c51:	47                   	inc    %edi
81005c52:	84 c9                	test   %cl,%cl
81005c54:	74 38                	je     81005c8e <L15>

81005c56 <L5>:
81005c56:	83 ef 04             	sub    $0x4,%edi
81005c59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005c60 <L10>:
81005c60:	83 c7 04             	add    $0x4,%edi
81005c63:	8b 0f                	mov    (%edi),%ecx
81005c65:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81005c6b:	f7 d1                	not    %ecx
81005c6d:	21 c8                	and    %ecx,%eax
81005c6f:	a9 80 80 80 80       	test   $0x80808080,%eax
81005c74:	74 ea                	je     81005c60 <L10>
81005c76:	f7 d1                	not    %ecx
81005c78:	47                   	inc    %edi
81005c79:	84 c9                	test   %cl,%cl
81005c7b:	74 11                	je     81005c8e <L15>
81005c7d:	47                   	inc    %edi
81005c7e:	c1 e9 08             	shr    $0x8,%ecx
81005c81:	84 c9                	test   %cl,%cl
81005c83:	74 09                	je     81005c8e <L15>
81005c85:	47                   	inc    %edi
81005c86:	c1 e9 08             	shr    $0x8,%ecx
81005c89:	84 c9                	test   %cl,%cl
81005c8b:	74 01                	je     81005c8e <L15>
81005c8d:	47                   	inc    %edi

81005c8e <L15>:
81005c8e:	29 d7                	sub    %edx,%edi
81005c90:	8d 47 ff             	lea    -0x1(%edi),%eax
81005c93:	8d 65 fc             	lea    -0x4(%ebp),%esp
81005c96:	5f                   	pop    %edi
81005c97:	c9                   	leave  
81005c98:	c3                   	ret    

81005c99 <strtok>:
81005c99:	55                   	push   %ebp
81005c9a:	89 e5                	mov    %esp,%ebp
81005c9c:	83 ec 18             	sub    $0x18,%esp
81005c9f:	8b 55 08             	mov    0x8(%ebp),%edx
81005ca2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005ca5:	a1 64 91 00 81       	mov    0x81009164,%eax
81005caa:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cb0:	83 c0 5c             	add    $0x5c,%eax
81005cb3:	6a 01                	push   $0x1
81005cb5:	50                   	push   %eax
81005cb6:	51                   	push   %ecx
81005cb7:	52                   	push   %edx
81005cb8:	e8 05 00 00 00       	call   81005cc2 <__strtok_r>
81005cbd:	83 c4 10             	add    $0x10,%esp
81005cc0:	c9                   	leave  
81005cc1:	c3                   	ret    

81005cc2 <__strtok_r>:
81005cc2:	55                   	push   %ebp
81005cc3:	89 e5                	mov    %esp,%ebp
81005cc5:	57                   	push   %edi
81005cc6:	56                   	push   %esi
81005cc7:	53                   	push   %ebx
81005cc8:	83 ec 10             	sub    $0x10,%esp
81005ccb:	8b 45 08             	mov    0x8(%ebp),%eax
81005cce:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005cd1:	85 c0                	test   %eax,%eax
81005cd3:	75 13                	jne    81005ce8 <__strtok_r+0x26>
81005cd5:	8b 45 10             	mov    0x10(%ebp),%eax
81005cd8:	8b 00                	mov    (%eax),%eax
81005cda:	85 c0                	test   %eax,%eax
81005cdc:	75 0a                	jne    81005ce8 <__strtok_r+0x26>
81005cde:	b8 00 00 00 00       	mov    $0x0,%eax
81005ce3:	e9 92 00 00 00       	jmp    81005d7a <__strtok_r+0xb8>
81005ce8:	90                   	nop
81005ce9:	89 c2                	mov    %eax,%edx
81005ceb:	8d 42 01             	lea    0x1(%edx),%eax
81005cee:	0f b6 12             	movzbl (%edx),%edx
81005cf1:	0f be f2             	movsbl %dl,%esi
81005cf4:	89 cf                	mov    %ecx,%edi
81005cf6:	eb 1c                	jmp    81005d14 <__strtok_r+0x52>
81005cf8:	39 de                	cmp    %ebx,%esi
81005cfa:	75 18                	jne    81005d14 <__strtok_r+0x52>
81005cfc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005d00:	74 02                	je     81005d04 <__strtok_r+0x42>
81005d02:	eb e5                	jmp    81005ce9 <__strtok_r+0x27>
81005d04:	8b 55 10             	mov    0x10(%ebp),%edx
81005d07:	89 02                	mov    %eax,(%edx)
81005d09:	8d 50 ff             	lea    -0x1(%eax),%edx
81005d0c:	c6 02 00             	movb   $0x0,(%edx)
81005d0f:	83 e8 01             	sub    $0x1,%eax
81005d12:	eb 66                	jmp    81005d7a <__strtok_r+0xb8>
81005d14:	89 fa                	mov    %edi,%edx
81005d16:	8d 7a 01             	lea    0x1(%edx),%edi
81005d19:	0f b6 12             	movzbl (%edx),%edx
81005d1c:	0f be da             	movsbl %dl,%ebx
81005d1f:	85 db                	test   %ebx,%ebx
81005d21:	75 d5                	jne    81005cf8 <__strtok_r+0x36>
81005d23:	85 f6                	test   %esi,%esi
81005d25:	75 10                	jne    81005d37 <__strtok_r+0x75>
81005d27:	8b 45 10             	mov    0x10(%ebp),%eax
81005d2a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005d30:	b8 00 00 00 00       	mov    $0x0,%eax
81005d35:	eb 43                	jmp    81005d7a <__strtok_r+0xb8>
81005d37:	8d 50 ff             	lea    -0x1(%eax),%edx
81005d3a:	89 55 f0             	mov    %edx,-0x10(%ebp)
81005d3d:	89 c2                	mov    %eax,%edx
81005d3f:	8d 42 01             	lea    0x1(%edx),%eax
81005d42:	0f b6 12             	movzbl (%edx),%edx
81005d45:	0f be f2             	movsbl %dl,%esi
81005d48:	89 cf                	mov    %ecx,%edi
81005d4a:	89 fa                	mov    %edi,%edx
81005d4c:	8d 7a 01             	lea    0x1(%edx),%edi
81005d4f:	0f b6 12             	movzbl (%edx),%edx
81005d52:	0f be da             	movsbl %dl,%ebx
81005d55:	39 f3                	cmp    %esi,%ebx
81005d57:	75 1b                	jne    81005d74 <__strtok_r+0xb2>
81005d59:	85 f6                	test   %esi,%esi
81005d5b:	75 07                	jne    81005d64 <__strtok_r+0xa2>
81005d5d:	b8 00 00 00 00       	mov    $0x0,%eax
81005d62:	eb 06                	jmp    81005d6a <__strtok_r+0xa8>
81005d64:	8d 50 ff             	lea    -0x1(%eax),%edx
81005d67:	c6 02 00             	movb   $0x0,(%edx)
81005d6a:	8b 55 10             	mov    0x10(%ebp),%edx
81005d6d:	89 02                	mov    %eax,(%edx)
81005d6f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d72:	eb 06                	jmp    81005d7a <__strtok_r+0xb8>
81005d74:	85 db                	test   %ebx,%ebx
81005d76:	75 d2                	jne    81005d4a <__strtok_r+0x88>
81005d78:	eb c3                	jmp    81005d3d <__strtok_r+0x7b>
81005d7a:	83 c4 10             	add    $0x10,%esp
81005d7d:	5b                   	pop    %ebx
81005d7e:	5e                   	pop    %esi
81005d7f:	5f                   	pop    %edi
81005d80:	5d                   	pop    %ebp
81005d81:	c3                   	ret    

81005d82 <strtok_r>:
81005d82:	55                   	push   %ebp
81005d83:	89 e5                	mov    %esp,%ebp
81005d85:	8b 45 08             	mov    0x8(%ebp),%eax
81005d88:	8b 55 0c             	mov    0xc(%ebp),%edx
81005d8b:	6a 01                	push   $0x1
81005d8d:	ff 75 10             	push   0x10(%ebp)
81005d90:	52                   	push   %edx
81005d91:	50                   	push   %eax
81005d92:	e8 2b ff ff ff       	call   81005cc2 <__strtok_r>
81005d97:	83 c4 10             	add    $0x10,%esp
81005d9a:	c9                   	leave  
81005d9b:	c3                   	ret    

81005d9c <__locale_ctype_ptr_l>:
81005d9c:	55                   	push   %ebp
81005d9d:	89 e5                	mov    %esp,%ebp
81005d9f:	b8 00 8c 00 81       	mov    $0x81008c00,%eax
81005da4:	5d                   	pop    %ebp
81005da5:	c3                   	ret    

81005da6 <__get_global_locale>:
81005da6:	55                   	push   %ebp
81005da7:	89 e5                	mov    %esp,%ebp
81005da9:	b8 a0 95 00 81       	mov    $0x810095a0,%eax
81005dae:	5d                   	pop    %ebp
81005daf:	c3                   	ret    

81005db0 <__get_current_locale>:
81005db0:	55                   	push   %ebp
81005db1:	89 e5                	mov    %esp,%ebp
81005db3:	e8 ee ff ff ff       	call   81005da6 <__get_global_locale>
81005db8:	5d                   	pop    %ebp
81005db9:	c3                   	ret    

81005dba <_strtol_l>:
81005dba:	55                   	push   %ebp
81005dbb:	89 e5                	mov    %esp,%ebp
81005dbd:	57                   	push   %edi
81005dbe:	56                   	push   %esi
81005dbf:	53                   	push   %ebx
81005dc0:	83 ec 1c             	sub    $0x1c,%esp
81005dc3:	8b 75 0c             	mov    0xc(%ebp),%esi
81005dc6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005dcd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005dd1:	78 0c                	js     81005ddf <_strtol_l+0x25>
81005dd3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005dd7:	74 06                	je     81005ddf <_strtol_l+0x25>
81005dd9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81005ddd:	7e 15                	jle    81005df4 <_strtol_l+0x3a>
81005ddf:	e8 44 06 00 00       	call   81006428 <__errno>
81005de4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005dea:	b8 00 00 00 00       	mov    $0x0,%eax
81005def:	e9 90 01 00 00       	jmp    81005f84 <_strtol_l+0x1ca>
81005df4:	89 f0                	mov    %esi,%eax
81005df6:	8d 70 01             	lea    0x1(%eax),%esi
81005df9:	0f b6 00             	movzbl (%eax),%eax
81005dfc:	0f b6 d8             	movzbl %al,%ebx
81005dff:	83 ec 0c             	sub    $0xc,%esp
81005e02:	ff 75 18             	push   0x18(%ebp)
81005e05:	e8 92 ff ff ff       	call   81005d9c <__locale_ctype_ptr_l>
81005e0a:	83 c4 10             	add    $0x10,%esp
81005e0d:	89 da                	mov    %ebx,%edx
81005e0f:	83 c2 01             	add    $0x1,%edx
81005e12:	01 d0                	add    %edx,%eax
81005e14:	0f b6 00             	movzbl (%eax),%eax
81005e17:	0f be c0             	movsbl %al,%eax
81005e1a:	83 e0 08             	and    $0x8,%eax
81005e1d:	85 c0                	test   %eax,%eax
81005e1f:	75 d3                	jne    81005df4 <_strtol_l+0x3a>
81005e21:	83 fb 2d             	cmp    $0x2d,%ebx
81005e24:	75 14                	jne    81005e3a <_strtol_l+0x80>
81005e26:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81005e2d:	89 f0                	mov    %esi,%eax
81005e2f:	8d 70 01             	lea    0x1(%eax),%esi
81005e32:	0f b6 00             	movzbl (%eax),%eax
81005e35:	0f b6 d8             	movzbl %al,%ebx
81005e38:	eb 10                	jmp    81005e4a <_strtol_l+0x90>
81005e3a:	83 fb 2b             	cmp    $0x2b,%ebx
81005e3d:	75 0b                	jne    81005e4a <_strtol_l+0x90>
81005e3f:	89 f0                	mov    %esi,%eax
81005e41:	8d 70 01             	lea    0x1(%eax),%esi
81005e44:	0f b6 00             	movzbl (%eax),%eax
81005e47:	0f b6 d8             	movzbl %al,%ebx
81005e4a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005e4e:	74 06                	je     81005e56 <_strtol_l+0x9c>
81005e50:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005e54:	75 26                	jne    81005e7c <_strtol_l+0xc2>
81005e56:	83 fb 30             	cmp    $0x30,%ebx
81005e59:	75 21                	jne    81005e7c <_strtol_l+0xc2>
81005e5b:	0f b6 06             	movzbl (%esi),%eax
81005e5e:	3c 78                	cmp    $0x78,%al
81005e60:	74 07                	je     81005e69 <_strtol_l+0xaf>
81005e62:	0f b6 06             	movzbl (%esi),%eax
81005e65:	3c 58                	cmp    $0x58,%al
81005e67:	75 13                	jne    81005e7c <_strtol_l+0xc2>
81005e69:	8d 46 01             	lea    0x1(%esi),%eax
81005e6c:	0f b6 00             	movzbl (%eax),%eax
81005e6f:	0f b6 d8             	movzbl %al,%ebx
81005e72:	83 c6 02             	add    $0x2,%esi
81005e75:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81005e7c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005e80:	75 14                	jne    81005e96 <_strtol_l+0xdc>
81005e82:	83 fb 30             	cmp    $0x30,%ebx
81005e85:	75 07                	jne    81005e8e <_strtol_l+0xd4>
81005e87:	b8 08 00 00 00       	mov    $0x8,%eax
81005e8c:	eb 05                	jmp    81005e93 <_strtol_l+0xd9>
81005e8e:	b8 0a 00 00 00       	mov    $0xa,%eax
81005e93:	89 45 14             	mov    %eax,0x14(%ebp)
81005e96:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005e9a:	74 07                	je     81005ea3 <_strtol_l+0xe9>
81005e9c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005ea1:	eb 05                	jmp    81005ea8 <_strtol_l+0xee>
81005ea3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005ea8:	89 c7                	mov    %eax,%edi
81005eaa:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005ead:	89 f8                	mov    %edi,%eax
81005eaf:	ba 00 00 00 00       	mov    $0x0,%edx
81005eb4:	f7 f1                	div    %ecx
81005eb6:	89 d0                	mov    %edx,%eax
81005eb8:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005ebb:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005ebe:	89 f8                	mov    %edi,%eax
81005ec0:	ba 00 00 00 00       	mov    $0x0,%edx
81005ec5:	f7 f1                	div    %ecx
81005ec7:	89 c2                	mov    %eax,%edx
81005ec9:	bf 00 00 00 00       	mov    $0x0,%edi
81005ece:	b9 00 00 00 00       	mov    $0x0,%ecx
81005ed3:	83 fb 2f             	cmp    $0x2f,%ebx
81005ed6:	7e 0a                	jle    81005ee2 <_strtol_l+0x128>
81005ed8:	83 fb 39             	cmp    $0x39,%ebx
81005edb:	7f 05                	jg     81005ee2 <_strtol_l+0x128>
81005edd:	83 eb 30             	sub    $0x30,%ebx
81005ee0:	eb 1c                	jmp    81005efe <_strtol_l+0x144>
81005ee2:	83 fb 40             	cmp    $0x40,%ebx
81005ee5:	7e 0a                	jle    81005ef1 <_strtol_l+0x137>
81005ee7:	83 fb 5a             	cmp    $0x5a,%ebx
81005eea:	7f 05                	jg     81005ef1 <_strtol_l+0x137>
81005eec:	83 eb 37             	sub    $0x37,%ebx
81005eef:	eb 0d                	jmp    81005efe <_strtol_l+0x144>
81005ef1:	83 fb 60             	cmp    $0x60,%ebx
81005ef4:	7e 46                	jle    81005f3c <_strtol_l+0x182>
81005ef6:	83 fb 7a             	cmp    $0x7a,%ebx
81005ef9:	7f 41                	jg     81005f3c <_strtol_l+0x182>
81005efb:	83 eb 57             	sub    $0x57,%ebx
81005efe:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005f01:	7d 38                	jge    81005f3b <_strtol_l+0x181>
81005f03:	89 c8                	mov    %ecx,%eax
81005f05:	85 c0                	test   %eax,%eax
81005f07:	78 0f                	js     81005f18 <_strtol_l+0x15e>
81005f09:	89 d0                	mov    %edx,%eax
81005f0b:	39 c7                	cmp    %eax,%edi
81005f0d:	77 09                	ja     81005f18 <_strtol_l+0x15e>
81005f0f:	39 c7                	cmp    %eax,%edi
81005f11:	75 0c                	jne    81005f1f <_strtol_l+0x165>
81005f13:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005f16:	7e 07                	jle    81005f1f <_strtol_l+0x165>
81005f18:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81005f1d:	eb 0f                	jmp    81005f2e <_strtol_l+0x174>
81005f1f:	b9 01 00 00 00       	mov    $0x1,%ecx
81005f24:	8b 45 14             	mov    0x14(%ebp),%eax
81005f27:	0f af f8             	imul   %eax,%edi
81005f2a:	89 d8                	mov    %ebx,%eax
81005f2c:	01 c7                	add    %eax,%edi
81005f2e:	89 f0                	mov    %esi,%eax
81005f30:	8d 70 01             	lea    0x1(%eax),%esi
81005f33:	0f b6 00             	movzbl (%eax),%eax
81005f36:	0f b6 d8             	movzbl %al,%ebx
81005f39:	eb 98                	jmp    81005ed3 <_strtol_l+0x119>
81005f3b:	90                   	nop
81005f3c:	89 c8                	mov    %ecx,%eax
81005f3e:	85 c0                	test   %eax,%eax
81005f40:	79 1f                	jns    81005f61 <_strtol_l+0x1a7>
81005f42:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005f46:	74 07                	je     81005f4f <_strtol_l+0x195>
81005f48:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005f4d:	eb 05                	jmp    81005f54 <_strtol_l+0x19a>
81005f4f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005f54:	89 c7                	mov    %eax,%edi
81005f56:	8b 45 08             	mov    0x8(%ebp),%eax
81005f59:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81005f5f:	eb 08                	jmp    81005f69 <_strtol_l+0x1af>
81005f61:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005f65:	74 02                	je     81005f69 <_strtol_l+0x1af>
81005f67:	f7 df                	neg    %edi
81005f69:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005f6d:	74 13                	je     81005f82 <_strtol_l+0x1c8>
81005f6f:	89 c8                	mov    %ecx,%eax
81005f71:	85 c0                	test   %eax,%eax
81005f73:	74 05                	je     81005f7a <_strtol_l+0x1c0>
81005f75:	8d 46 ff             	lea    -0x1(%esi),%eax
81005f78:	eb 03                	jmp    81005f7d <_strtol_l+0x1c3>
81005f7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f7d:	8b 55 10             	mov    0x10(%ebp),%edx
81005f80:	89 02                	mov    %eax,(%edx)
81005f82:	89 f8                	mov    %edi,%eax
81005f84:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005f87:	5b                   	pop    %ebx
81005f88:	5e                   	pop    %esi
81005f89:	5f                   	pop    %edi
81005f8a:	5d                   	pop    %ebp
81005f8b:	c3                   	ret    

81005f8c <_strtol_r>:
81005f8c:	55                   	push   %ebp
81005f8d:	89 e5                	mov    %esp,%ebp
81005f8f:	83 ec 08             	sub    $0x8,%esp
81005f92:	e8 19 fe ff ff       	call   81005db0 <__get_current_locale>
81005f97:	83 ec 0c             	sub    $0xc,%esp
81005f9a:	50                   	push   %eax
81005f9b:	ff 75 14             	push   0x14(%ebp)
81005f9e:	ff 75 10             	push   0x10(%ebp)
81005fa1:	ff 75 0c             	push   0xc(%ebp)
81005fa4:	ff 75 08             	push   0x8(%ebp)
81005fa7:	e8 0e fe ff ff       	call   81005dba <_strtol_l>
81005fac:	83 c4 20             	add    $0x20,%esp
81005faf:	c9                   	leave  
81005fb0:	c3                   	ret    

81005fb1 <strtol_l>:
81005fb1:	55                   	push   %ebp
81005fb2:	89 e5                	mov    %esp,%ebp
81005fb4:	83 ec 08             	sub    $0x8,%esp
81005fb7:	a1 64 91 00 81       	mov    0x81009164,%eax
81005fbc:	83 ec 0c             	sub    $0xc,%esp
81005fbf:	ff 75 14             	push   0x14(%ebp)
81005fc2:	ff 75 10             	push   0x10(%ebp)
81005fc5:	ff 75 0c             	push   0xc(%ebp)
81005fc8:	ff 75 08             	push   0x8(%ebp)
81005fcb:	50                   	push   %eax
81005fcc:	e8 e9 fd ff ff       	call   81005dba <_strtol_l>
81005fd1:	83 c4 20             	add    $0x20,%esp
81005fd4:	c9                   	leave  
81005fd5:	c3                   	ret    

81005fd6 <strtol>:
81005fd6:	55                   	push   %ebp
81005fd7:	89 e5                	mov    %esp,%ebp
81005fd9:	83 ec 08             	sub    $0x8,%esp
81005fdc:	e8 cf fd ff ff       	call   81005db0 <__get_current_locale>
81005fe1:	8b 15 64 91 00 81    	mov    0x81009164,%edx
81005fe7:	83 ec 0c             	sub    $0xc,%esp
81005fea:	50                   	push   %eax
81005feb:	ff 75 10             	push   0x10(%ebp)
81005fee:	ff 75 0c             	push   0xc(%ebp)
81005ff1:	ff 75 08             	push   0x8(%ebp)
81005ff4:	52                   	push   %edx
81005ff5:	e8 c0 fd ff ff       	call   81005dba <_strtol_l>
81005ffa:	83 c4 20             	add    $0x20,%esp
81005ffd:	c9                   	leave  
81005ffe:	c3                   	ret    

81005fff <__swbuf_r>:
81005fff:	55                   	push   %ebp
81006000:	89 e5                	mov    %esp,%ebp
81006002:	57                   	push   %edi
81006003:	56                   	push   %esi
81006004:	53                   	push   %ebx
81006005:	83 ec 1c             	sub    $0x1c,%esp
81006008:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100600b:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100600e:	8b 45 08             	mov    0x8(%ebp),%eax
81006011:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006014:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006018:	74 18                	je     81006032 <__swbuf_r+0x33>
8100601a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100601d:	8b 40 38             	mov    0x38(%eax),%eax
81006020:	85 c0                	test   %eax,%eax
81006022:	75 0e                	jne    81006032 <__swbuf_r+0x33>
81006024:	83 ec 0c             	sub    $0xc,%esp
81006027:	ff 75 e4             	push   -0x1c(%ebp)
8100602a:	e8 d2 b7 ff ff       	call   81001801 <__sinit>
8100602f:	83 c4 10             	add    $0x10,%esp
81006032:	8b 43 18             	mov    0x18(%ebx),%eax
81006035:	89 43 08             	mov    %eax,0x8(%ebx)
81006038:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100603c:	98                   	cwtl   
8100603d:	83 e0 08             	and    $0x8,%eax
81006040:	85 c0                	test   %eax,%eax
81006042:	74 07                	je     8100604b <__swbuf_r+0x4c>
81006044:	8b 43 10             	mov    0x10(%ebx),%eax
81006047:	85 c0                	test   %eax,%eax
81006049:	75 1d                	jne    81006068 <__swbuf_r+0x69>
8100604b:	83 ec 08             	sub    $0x8,%esp
8100604e:	53                   	push   %ebx
8100604f:	ff 75 08             	push   0x8(%ebp)
81006052:	e8 21 01 00 00       	call   81006178 <__swsetup_r>
81006057:	83 c4 10             	add    $0x10,%esp
8100605a:	85 c0                	test   %eax,%eax
8100605c:	74 0a                	je     81006068 <__swbuf_r+0x69>
8100605e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006063:	e9 a1 00 00 00       	jmp    81006109 <__swbuf_r+0x10a>
81006068:	89 f8                	mov    %edi,%eax
8100606a:	0f b6 f8             	movzbl %al,%edi
8100606d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006071:	98                   	cwtl   
81006072:	25 00 20 00 00       	and    $0x2000,%eax
81006077:	85 c0                	test   %eax,%eax
81006079:	75 14                	jne    8100608f <__swbuf_r+0x90>
8100607b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100607f:	80 cc 20             	or     $0x20,%ah
81006082:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006086:	8b 43 64             	mov    0x64(%ebx),%eax
81006089:	80 e4 df             	and    $0xdf,%ah
8100608c:	89 43 64             	mov    %eax,0x64(%ebx)
8100608f:	8b 03                	mov    (%ebx),%eax
81006091:	8b 53 10             	mov    0x10(%ebx),%edx
81006094:	29 d0                	sub    %edx,%eax
81006096:	89 c6                	mov    %eax,%esi
81006098:	8b 43 14             	mov    0x14(%ebx),%eax
8100609b:	39 c6                	cmp    %eax,%esi
8100609d:	7c 1f                	jl     810060be <__swbuf_r+0xbf>
8100609f:	83 ec 08             	sub    $0x8,%esp
810060a2:	53                   	push   %ebx
810060a3:	ff 75 08             	push   0x8(%ebp)
810060a6:	e8 53 b2 ff ff       	call   810012fe <_fflush_r>
810060ab:	83 c4 10             	add    $0x10,%esp
810060ae:	85 c0                	test   %eax,%eax
810060b0:	74 07                	je     810060b9 <__swbuf_r+0xba>
810060b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810060b7:	eb 50                	jmp    81006109 <__swbuf_r+0x10a>
810060b9:	be 00 00 00 00       	mov    $0x0,%esi
810060be:	8b 43 08             	mov    0x8(%ebx),%eax
810060c1:	83 e8 01             	sub    $0x1,%eax
810060c4:	89 43 08             	mov    %eax,0x8(%ebx)
810060c7:	8b 03                	mov    (%ebx),%eax
810060c9:	8d 50 01             	lea    0x1(%eax),%edx
810060cc:	89 13                	mov    %edx,(%ebx)
810060ce:	89 fa                	mov    %edi,%edx
810060d0:	88 10                	mov    %dl,(%eax)
810060d2:	83 c6 01             	add    $0x1,%esi
810060d5:	8b 43 14             	mov    0x14(%ebx),%eax
810060d8:	39 c6                	cmp    %eax,%esi
810060da:	74 11                	je     810060ed <__swbuf_r+0xee>
810060dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810060e0:	98                   	cwtl   
810060e1:	83 e0 01             	and    $0x1,%eax
810060e4:	85 c0                	test   %eax,%eax
810060e6:	74 1f                	je     81006107 <__swbuf_r+0x108>
810060e8:	83 ff 0a             	cmp    $0xa,%edi
810060eb:	75 1a                	jne    81006107 <__swbuf_r+0x108>
810060ed:	83 ec 08             	sub    $0x8,%esp
810060f0:	53                   	push   %ebx
810060f1:	ff 75 08             	push   0x8(%ebp)
810060f4:	e8 05 b2 ff ff       	call   810012fe <_fflush_r>
810060f9:	83 c4 10             	add    $0x10,%esp
810060fc:	85 c0                	test   %eax,%eax
810060fe:	74 07                	je     81006107 <__swbuf_r+0x108>
81006100:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006105:	eb 02                	jmp    81006109 <__swbuf_r+0x10a>
81006107:	89 f8                	mov    %edi,%eax
81006109:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100610c:	5b                   	pop    %ebx
8100610d:	5e                   	pop    %esi
8100610e:	5f                   	pop    %edi
8100610f:	5d                   	pop    %ebp
81006110:	c3                   	ret    

81006111 <__swbuf>:
81006111:	55                   	push   %ebp
81006112:	89 e5                	mov    %esp,%ebp
81006114:	83 ec 08             	sub    $0x8,%esp
81006117:	8b 55 08             	mov    0x8(%ebp),%edx
8100611a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100611d:	a1 64 91 00 81       	mov    0x81009164,%eax
81006122:	83 ec 04             	sub    $0x4,%esp
81006125:	51                   	push   %ecx
81006126:	52                   	push   %edx
81006127:	50                   	push   %eax
81006128:	e8 d2 fe ff ff       	call   81005fff <__swbuf_r>
8100612d:	83 c4 10             	add    $0x10,%esp
81006130:	c9                   	leave  
81006131:	c3                   	ret    

81006132 <_write_r>:
81006132:	55                   	push   %ebp
81006133:	89 e5                	mov    %esp,%ebp
81006135:	83 ec 18             	sub    $0x18,%esp
81006138:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
8100613f:	00 00 00 
81006142:	83 ec 04             	sub    $0x4,%esp
81006145:	ff 75 14             	push   0x14(%ebp)
81006148:	ff 75 10             	push   0x10(%ebp)
8100614b:	ff 75 0c             	push   0xc(%ebp)
8100614e:	e8 64 ab ff ff       	call   81000cb7 <write>
81006153:	83 c4 10             	add    $0x10,%esp
81006156:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006159:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100615d:	75 14                	jne    81006173 <_write_r+0x41>
8100615f:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81006164:	85 c0                	test   %eax,%eax
81006166:	74 0b                	je     81006173 <_write_r+0x41>
81006168:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
8100616e:	8b 45 08             	mov    0x8(%ebp),%eax
81006171:	89 10                	mov    %edx,(%eax)
81006173:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006176:	c9                   	leave  
81006177:	c3                   	ret    

81006178 <__swsetup_r>:
81006178:	55                   	push   %ebp
81006179:	89 e5                	mov    %esp,%ebp
8100617b:	53                   	push   %ebx
8100617c:	83 ec 14             	sub    $0x14,%esp
8100617f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006182:	a1 64 91 00 81       	mov    0x81009164,%eax
81006187:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100618a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100618e:	74 18                	je     810061a8 <__swsetup_r+0x30>
81006190:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006193:	8b 40 38             	mov    0x38(%eax),%eax
81006196:	85 c0                	test   %eax,%eax
81006198:	75 0e                	jne    810061a8 <__swsetup_r+0x30>
8100619a:	83 ec 0c             	sub    $0xc,%esp
8100619d:	ff 75 f4             	push   -0xc(%ebp)
810061a0:	e8 5c b6 ff ff       	call   81001801 <__sinit>
810061a5:	83 c4 10             	add    $0x10,%esp
810061a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061ac:	98                   	cwtl   
810061ad:	83 e0 08             	and    $0x8,%eax
810061b0:	85 c0                	test   %eax,%eax
810061b2:	0f 85 82 00 00 00    	jne    8100623a <__swsetup_r+0xc2>
810061b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061bc:	98                   	cwtl   
810061bd:	83 e0 10             	and    $0x10,%eax
810061c0:	85 c0                	test   %eax,%eax
810061c2:	75 1e                	jne    810061e2 <__swsetup_r+0x6a>
810061c4:	8b 45 08             	mov    0x8(%ebp),%eax
810061c7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810061cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061d1:	83 c8 40             	or     $0x40,%eax
810061d4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810061d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810061dd:	e9 ec 00 00 00       	jmp    810062ce <__swsetup_r+0x156>
810061e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061e6:	98                   	cwtl   
810061e7:	83 e0 04             	and    $0x4,%eax
810061ea:	85 c0                	test   %eax,%eax
810061ec:	74 41                	je     8100622f <__swsetup_r+0xb7>
810061ee:	8b 43 30             	mov    0x30(%ebx),%eax
810061f1:	85 c0                	test   %eax,%eax
810061f3:	74 23                	je     81006218 <__swsetup_r+0xa0>
810061f5:	8b 53 30             	mov    0x30(%ebx),%edx
810061f8:	8d 43 40             	lea    0x40(%ebx),%eax
810061fb:	39 c2                	cmp    %eax,%edx
810061fd:	74 12                	je     81006211 <__swsetup_r+0x99>
810061ff:	8b 43 30             	mov    0x30(%ebx),%eax
81006202:	83 ec 08             	sub    $0x8,%esp
81006205:	50                   	push   %eax
81006206:	ff 75 08             	push   0x8(%ebp)
81006209:	e8 e3 ba ff ff       	call   81001cf1 <_free_r>
8100620e:	83 c4 10             	add    $0x10,%esp
81006211:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006218:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100621c:	83 e0 db             	and    $0xffffffdb,%eax
8100621f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006223:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100622a:	8b 43 10             	mov    0x10(%ebx),%eax
8100622d:	89 03                	mov    %eax,(%ebx)
8100622f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006233:	83 c8 08             	or     $0x8,%eax
81006236:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100623a:	8b 43 10             	mov    0x10(%ebx),%eax
8100623d:	85 c0                	test   %eax,%eax
8100623f:	75 2b                	jne    8100626c <__swsetup_r+0xf4>
81006241:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006245:	98                   	cwtl   
81006246:	25 00 02 00 00       	and    $0x200,%eax
8100624b:	85 c0                	test   %eax,%eax
8100624d:	74 0e                	je     8100625d <__swsetup_r+0xe5>
8100624f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006253:	98                   	cwtl   
81006254:	25 80 00 00 00       	and    $0x80,%eax
81006259:	85 c0                	test   %eax,%eax
8100625b:	74 0f                	je     8100626c <__swsetup_r+0xf4>
8100625d:	83 ec 08             	sub    $0x8,%esp
81006260:	53                   	push   %ebx
81006261:	ff 75 08             	push   0x8(%ebp)
81006264:	e8 ff d4 ff ff       	call   81003768 <__smakebuf_r>
81006269:	83 c4 10             	add    $0x10,%esp
8100626c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006270:	98                   	cwtl   
81006271:	83 e0 01             	and    $0x1,%eax
81006274:	85 c0                	test   %eax,%eax
81006276:	74 11                	je     81006289 <__swsetup_r+0x111>
81006278:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100627f:	8b 43 14             	mov    0x14(%ebx),%eax
81006282:	f7 d8                	neg    %eax
81006284:	89 43 18             	mov    %eax,0x18(%ebx)
81006287:	eb 19                	jmp    810062a2 <__swsetup_r+0x12a>
81006289:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100628d:	98                   	cwtl   
8100628e:	83 e0 02             	and    $0x2,%eax
81006291:	85 c0                	test   %eax,%eax
81006293:	75 05                	jne    8100629a <__swsetup_r+0x122>
81006295:	8b 43 14             	mov    0x14(%ebx),%eax
81006298:	eb 05                	jmp    8100629f <__swsetup_r+0x127>
8100629a:	b8 00 00 00 00       	mov    $0x0,%eax
8100629f:	89 43 08             	mov    %eax,0x8(%ebx)
810062a2:	8b 43 10             	mov    0x10(%ebx),%eax
810062a5:	85 c0                	test   %eax,%eax
810062a7:	75 20                	jne    810062c9 <__swsetup_r+0x151>
810062a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062ad:	98                   	cwtl   
810062ae:	25 80 00 00 00       	and    $0x80,%eax
810062b3:	85 c0                	test   %eax,%eax
810062b5:	74 12                	je     810062c9 <__swsetup_r+0x151>
810062b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062bb:	83 c8 40             	or     $0x40,%eax
810062be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810062c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062c7:	eb 05                	jmp    810062ce <__swsetup_r+0x156>
810062c9:	b8 00 00 00 00       	mov    $0x0,%eax
810062ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810062d1:	c9                   	leave  
810062d2:	c3                   	ret    

810062d3 <__call_exitprocs>:
810062d3:	55                   	push   %ebp
810062d4:	89 e5                	mov    %esp,%ebp
810062d6:	57                   	push   %edi
810062d7:	56                   	push   %esi
810062d8:	53                   	push   %ebx
810062d9:	83 ec 1c             	sub    $0x1c,%esp
810062dc:	a1 b0 89 00 81       	mov    0x810089b0,%eax
810062e1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810062e7:	a1 b0 89 00 81       	mov    0x810089b0,%eax
810062ec:	05 48 01 00 00       	add    $0x148,%eax
810062f1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062f4:	90                   	nop
810062f5:	85 db                	test   %ebx,%ebx
810062f7:	0f 84 e1 00 00 00    	je     810063de <__call_exitprocs+0x10b>
810062fd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81006303:	8b 43 04             	mov    0x4(%ebx),%eax
81006306:	8d 70 ff             	lea    -0x1(%eax),%esi
81006309:	e9 c6 00 00 00       	jmp    810063d4 <__call_exitprocs+0x101>
8100630e:	b8 01 00 00 00       	mov    $0x1,%eax
81006313:	89 f1                	mov    %esi,%ecx
81006315:	d3 e0                	shl    %cl,%eax
81006317:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100631a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100631e:	74 17                	je     81006337 <__call_exitprocs+0x64>
81006320:	85 ff                	test   %edi,%edi
81006322:	0f 84 a5 00 00 00    	je     810063cd <__call_exitprocs+0xfa>
81006328:	8d 46 20             	lea    0x20(%esi),%eax
8100632b:	8b 04 87             	mov    (%edi,%eax,4),%eax
8100632e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81006331:	0f 85 96 00 00 00    	jne    810063cd <__call_exitprocs+0xfa>
81006337:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100633b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100633e:	8b 43 04             	mov    0x4(%ebx),%eax
81006341:	83 e8 01             	sub    $0x1,%eax
81006344:	39 c6                	cmp    %eax,%esi
81006346:	75 0b                	jne    81006353 <__call_exitprocs+0x80>
81006348:	8b 43 04             	mov    0x4(%ebx),%eax
8100634b:	83 e8 01             	sub    $0x1,%eax
8100634e:	89 43 04             	mov    %eax,0x4(%ebx)
81006351:	eb 08                	jmp    8100635b <__call_exitprocs+0x88>
81006353:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100635a:	00 
8100635b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100635f:	74 6f                	je     810063d0 <__call_exitprocs+0xfd>
81006361:	8b 43 04             	mov    0x4(%ebx),%eax
81006364:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006367:	85 ff                	test   %edi,%edi
81006369:	74 0f                	je     8100637a <__call_exitprocs+0xa7>
8100636b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81006371:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006374:	21 d0                	and    %edx,%eax
81006376:	85 c0                	test   %eax,%eax
81006378:	75 07                	jne    81006381 <__call_exitprocs+0xae>
8100637a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100637d:	ff d0                	call   *%eax
8100637f:	eb 32                	jmp    810063b3 <__call_exitprocs+0xe0>
81006381:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81006387:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100638a:	21 d0                	and    %edx,%eax
8100638c:	85 c0                	test   %eax,%eax
8100638e:	75 14                	jne    810063a4 <__call_exitprocs+0xd1>
81006390:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006393:	83 ec 08             	sub    $0x8,%esp
81006396:	50                   	push   %eax
81006397:	ff 75 08             	push   0x8(%ebp)
8100639a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100639d:	ff d0                	call   *%eax
8100639f:	83 c4 10             	add    $0x10,%esp
810063a2:	eb 0f                	jmp    810063b3 <__call_exitprocs+0xe0>
810063a4:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810063a7:	83 ec 0c             	sub    $0xc,%esp
810063aa:	50                   	push   %eax
810063ab:	8b 45 dc             	mov    -0x24(%ebp),%eax
810063ae:	ff d0                	call   *%eax
810063b0:	83 c4 10             	add    $0x10,%esp
810063b3:	8b 43 04             	mov    0x4(%ebx),%eax
810063b6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810063b9:	0f 85 1d ff ff ff    	jne    810062dc <__call_exitprocs+0x9>
810063bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810063c2:	8b 00                	mov    (%eax),%eax
810063c4:	39 c3                	cmp    %eax,%ebx
810063c6:	74 09                	je     810063d1 <__call_exitprocs+0xfe>
810063c8:	e9 0f ff ff ff       	jmp    810062dc <__call_exitprocs+0x9>
810063cd:	90                   	nop
810063ce:	eb 01                	jmp    810063d1 <__call_exitprocs+0xfe>
810063d0:	90                   	nop
810063d1:	83 ee 01             	sub    $0x1,%esi
810063d4:	85 f6                	test   %esi,%esi
810063d6:	0f 89 32 ff ff ff    	jns    8100630e <__call_exitprocs+0x3b>
810063dc:	eb 01                	jmp    810063df <__call_exitprocs+0x10c>
810063de:	90                   	nop
810063df:	90                   	nop
810063e0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810063e3:	5b                   	pop    %ebx
810063e4:	5e                   	pop    %esi
810063e5:	5f                   	pop    %edi
810063e6:	5d                   	pop    %ebp
810063e7:	c3                   	ret    

810063e8 <_close_r>:
810063e8:	55                   	push   %ebp
810063e9:	89 e5                	mov    %esp,%ebp
810063eb:	83 ec 18             	sub    $0x18,%esp
810063ee:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
810063f5:	00 00 00 
810063f8:	83 ec 0c             	sub    $0xc,%esp
810063fb:	ff 75 0c             	push   0xc(%ebp)
810063fe:	e8 e1 a8 ff ff       	call   81000ce4 <close>
81006403:	83 c4 10             	add    $0x10,%esp
81006406:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006409:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100640d:	75 14                	jne    81006423 <_close_r+0x3b>
8100640f:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81006414:	85 c0                	test   %eax,%eax
81006416:	74 0b                	je     81006423 <_close_r+0x3b>
81006418:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
8100641e:	8b 45 08             	mov    0x8(%ebp),%eax
81006421:	89 10                	mov    %edx,(%eax)
81006423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006426:	c9                   	leave  
81006427:	c3                   	ret    

81006428 <__errno>:
81006428:	55                   	push   %ebp
81006429:	89 e5                	mov    %esp,%ebp
8100642b:	a1 64 91 00 81       	mov    0x81009164,%eax
81006430:	5d                   	pop    %ebp
81006431:	c3                   	ret    

81006432 <__sflags>:
81006432:	55                   	push   %ebp
81006433:	89 e5                	mov    %esp,%ebp
81006435:	57                   	push   %edi
81006436:	56                   	push   %esi
81006437:	53                   	push   %ebx
81006438:	8b 55 0c             	mov    0xc(%ebp),%edx
8100643b:	0f b6 02             	movzbl (%edx),%eax
8100643e:	0f be c0             	movsbl %al,%eax
81006441:	83 f8 77             	cmp    $0x77,%eax
81006444:	74 20                	je     81006466 <__sflags+0x34>
81006446:	83 f8 77             	cmp    $0x77,%eax
81006449:	7f 3d                	jg     81006488 <__sflags+0x56>
8100644b:	83 f8 61             	cmp    $0x61,%eax
8100644e:	74 27                	je     81006477 <__sflags+0x45>
81006450:	83 f8 72             	cmp    $0x72,%eax
81006453:	75 33                	jne    81006488 <__sflags+0x56>
81006455:	be 04 00 00 00       	mov    $0x4,%esi
8100645a:	bb 00 00 00 00       	mov    $0x0,%ebx
8100645f:	bf 00 00 00 00       	mov    $0x0,%edi
81006464:	eb 32                	jmp    81006498 <__sflags+0x66>
81006466:	be 08 00 00 00       	mov    $0x8,%esi
8100646b:	bb 01 00 00 00       	mov    $0x1,%ebx
81006470:	bf 00 06 00 00       	mov    $0x600,%edi
81006475:	eb 21                	jmp    81006498 <__sflags+0x66>
81006477:	be 08 01 00 00       	mov    $0x108,%esi
8100647c:	bb 01 00 00 00       	mov    $0x1,%ebx
81006481:	bf 08 02 00 00       	mov    $0x208,%edi
81006486:	eb 10                	jmp    81006498 <__sflags+0x66>
81006488:	8b 45 08             	mov    0x8(%ebp),%eax
8100648b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006491:	b8 00 00 00 00       	mov    $0x0,%eax
81006496:	eb 4f                	jmp    810064e7 <__sflags+0xb5>
81006498:	eb 38                	jmp    810064d2 <__sflags+0xa0>
8100649a:	0f b6 02             	movzbl (%edx),%eax
8100649d:	0f be c0             	movsbl %al,%eax
810064a0:	83 f8 78             	cmp    $0x78,%eax
810064a3:	74 27                	je     810064cc <__sflags+0x9a>
810064a5:	83 f8 78             	cmp    $0x78,%eax
810064a8:	7f 27                	jg     810064d1 <__sflags+0x9f>
810064aa:	83 f8 2b             	cmp    $0x2b,%eax
810064ad:	74 07                	je     810064b6 <__sflags+0x84>
810064af:	83 f8 62             	cmp    $0x62,%eax
810064b2:	74 1e                	je     810064d2 <__sflags+0xa0>
810064b4:	eb 1b                	jmp    810064d1 <__sflags+0x9f>
810064b6:	89 f0                	mov    %esi,%eax
810064b8:	83 e0 e3             	and    $0xffffffe3,%eax
810064bb:	83 c8 10             	or     $0x10,%eax
810064be:	89 c6                	mov    %eax,%esi
810064c0:	89 d8                	mov    %ebx,%eax
810064c2:	83 e0 fc             	and    $0xfffffffc,%eax
810064c5:	83 c8 02             	or     $0x2,%eax
810064c8:	89 c3                	mov    %eax,%ebx
810064ca:	eb 06                	jmp    810064d2 <__sflags+0xa0>
810064cc:	80 cf 08             	or     $0x8,%bh
810064cf:	eb 01                	jmp    810064d2 <__sflags+0xa0>
810064d1:	90                   	nop
810064d2:	83 c2 01             	add    $0x1,%edx
810064d5:	0f b6 02             	movzbl (%edx),%eax
810064d8:	84 c0                	test   %al,%al
810064da:	75 be                	jne    8100649a <__sflags+0x68>
810064dc:	89 da                	mov    %ebx,%edx
810064de:	09 fa                	or     %edi,%edx
810064e0:	8b 45 10             	mov    0x10(%ebp),%eax
810064e3:	89 10                	mov    %edx,(%eax)
810064e5:	89 f0                	mov    %esi,%eax
810064e7:	5b                   	pop    %ebx
810064e8:	5e                   	pop    %esi
810064e9:	5f                   	pop    %edi
810064ea:	5d                   	pop    %ebp
810064eb:	c3                   	ret    

810064ec <_fputc_r>:
810064ec:	55                   	push   %ebp
810064ed:	89 e5                	mov    %esp,%ebp
810064ef:	83 ec 18             	sub    $0x18,%esp
810064f2:	8b 45 08             	mov    0x8(%ebp),%eax
810064f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810064f8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810064fc:	74 18                	je     81006516 <_fputc_r+0x2a>
810064fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006501:	8b 40 38             	mov    0x38(%eax),%eax
81006504:	85 c0                	test   %eax,%eax
81006506:	75 0e                	jne    81006516 <_fputc_r+0x2a>
81006508:	83 ec 0c             	sub    $0xc,%esp
8100650b:	ff 75 f4             	push   -0xc(%ebp)
8100650e:	e8 ee b2 ff ff       	call   81001801 <__sinit>
81006513:	83 c4 10             	add    $0x10,%esp
81006516:	83 ec 04             	sub    $0x4,%esp
81006519:	ff 75 10             	push   0x10(%ebp)
8100651c:	ff 75 0c             	push   0xc(%ebp)
8100651f:	ff 75 08             	push   0x8(%ebp)
81006522:	e8 6f 13 00 00       	call   81007896 <_putc_r>
81006527:	83 c4 10             	add    $0x10,%esp
8100652a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100652d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006530:	c9                   	leave  
81006531:	c3                   	ret    

81006532 <fputc>:
81006532:	55                   	push   %ebp
81006533:	89 e5                	mov    %esp,%ebp
81006535:	83 ec 18             	sub    $0x18,%esp
81006538:	a1 64 91 00 81       	mov    0x81009164,%eax
8100653d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006540:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006543:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006546:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100654a:	74 18                	je     81006564 <fputc+0x32>
8100654c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100654f:	8b 40 38             	mov    0x38(%eax),%eax
81006552:	85 c0                	test   %eax,%eax
81006554:	75 0e                	jne    81006564 <fputc+0x32>
81006556:	83 ec 0c             	sub    $0xc,%esp
81006559:	ff 75 f0             	push   -0x10(%ebp)
8100655c:	e8 a0 b2 ff ff       	call   81001801 <__sinit>
81006561:	83 c4 10             	add    $0x10,%esp
81006564:	83 ec 04             	sub    $0x4,%esp
81006567:	ff 75 0c             	push   0xc(%ebp)
8100656a:	ff 75 08             	push   0x8(%ebp)
8100656d:	ff 75 f4             	push   -0xc(%ebp)
81006570:	e8 21 13 00 00       	call   81007896 <_putc_r>
81006575:	83 c4 10             	add    $0x10,%esp
81006578:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100657b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100657e:	c9                   	leave  
8100657f:	c3                   	ret    

81006580 <_fputs_r>:
81006580:	55                   	push   %ebp
81006581:	89 e5                	mov    %esp,%ebp
81006583:	83 ec 28             	sub    $0x28,%esp
81006586:	8b 45 0c             	mov    0xc(%ebp),%eax
81006589:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100658c:	83 ec 0c             	sub    $0xc,%esp
8100658f:	ff 75 0c             	push   0xc(%ebp)
81006592:	e8 89 f6 ff ff       	call   81005c20 <strlen>
81006597:	83 c4 10             	add    $0x10,%esp
8100659a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100659d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065a0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810065a3:	8d 45 dc             	lea    -0x24(%ebp),%eax
810065a6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810065a9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810065b0:	8b 45 08             	mov    0x8(%ebp),%eax
810065b3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065b6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810065ba:	74 18                	je     810065d4 <_fputs_r+0x54>
810065bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065bf:	8b 40 38             	mov    0x38(%eax),%eax
810065c2:	85 c0                	test   %eax,%eax
810065c4:	75 0e                	jne    810065d4 <_fputs_r+0x54>
810065c6:	83 ec 0c             	sub    $0xc,%esp
810065c9:	ff 75 f4             	push   -0xc(%ebp)
810065cc:	e8 30 b2 ff ff       	call   81001801 <__sinit>
810065d1:	83 c4 10             	add    $0x10,%esp
810065d4:	8b 45 10             	mov    0x10(%ebp),%eax
810065d7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810065db:	98                   	cwtl   
810065dc:	25 00 20 00 00       	and    $0x2000,%eax
810065e1:	85 c0                	test   %eax,%eax
810065e3:	75 24                	jne    81006609 <_fputs_r+0x89>
810065e5:	8b 45 10             	mov    0x10(%ebp),%eax
810065e8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810065ec:	80 cc 20             	or     $0x20,%ah
810065ef:	89 c2                	mov    %eax,%edx
810065f1:	8b 45 10             	mov    0x10(%ebp),%eax
810065f4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810065f8:	8b 45 10             	mov    0x10(%ebp),%eax
810065fb:	8b 40 64             	mov    0x64(%eax),%eax
810065fe:	80 e4 df             	and    $0xdf,%ah
81006601:	89 c2                	mov    %eax,%edx
81006603:	8b 45 10             	mov    0x10(%ebp),%eax
81006606:	89 50 64             	mov    %edx,0x64(%eax)
81006609:	83 ec 04             	sub    $0x4,%esp
8100660c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100660f:	50                   	push   %eax
81006610:	ff 75 10             	push   0x10(%ebp)
81006613:	ff 75 08             	push   0x8(%ebp)
81006616:	e8 df 01 00 00       	call   810067fa <__sfvwrite_r>
8100661b:	83 c4 10             	add    $0x10,%esp
8100661e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006621:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006624:	c9                   	leave  
81006625:	c3                   	ret    

81006626 <fputs>:
81006626:	55                   	push   %ebp
81006627:	89 e5                	mov    %esp,%ebp
81006629:	83 ec 08             	sub    $0x8,%esp
8100662c:	a1 64 91 00 81       	mov    0x81009164,%eax
81006631:	83 ec 04             	sub    $0x4,%esp
81006634:	ff 75 0c             	push   0xc(%ebp)
81006637:	ff 75 08             	push   0x8(%ebp)
8100663a:	50                   	push   %eax
8100663b:	e8 40 ff ff ff       	call   81006580 <_fputs_r>
81006640:	83 c4 10             	add    $0x10,%esp
81006643:	c9                   	leave  
81006644:	c3                   	ret    

81006645 <__sputc_r>:
81006645:	55                   	push   %ebp
81006646:	89 e5                	mov    %esp,%ebp
81006648:	83 ec 08             	sub    $0x8,%esp
8100664b:	8b 45 10             	mov    0x10(%ebp),%eax
8100664e:	8b 40 08             	mov    0x8(%eax),%eax
81006651:	8d 50 ff             	lea    -0x1(%eax),%edx
81006654:	8b 45 10             	mov    0x10(%ebp),%eax
81006657:	89 50 08             	mov    %edx,0x8(%eax)
8100665a:	8b 45 10             	mov    0x10(%ebp),%eax
8100665d:	8b 40 08             	mov    0x8(%eax),%eax
81006660:	85 c0                	test   %eax,%eax
81006662:	79 17                	jns    8100667b <__sputc_r+0x36>
81006664:	8b 45 10             	mov    0x10(%ebp),%eax
81006667:	8b 50 08             	mov    0x8(%eax),%edx
8100666a:	8b 45 10             	mov    0x10(%ebp),%eax
8100666d:	8b 40 18             	mov    0x18(%eax),%eax
81006670:	39 c2                	cmp    %eax,%edx
81006672:	7c 21                	jl     81006695 <__sputc_r+0x50>
81006674:	8b 45 0c             	mov    0xc(%ebp),%eax
81006677:	3c 0a                	cmp    $0xa,%al
81006679:	74 1a                	je     81006695 <__sputc_r+0x50>
8100667b:	8b 45 10             	mov    0x10(%ebp),%eax
8100667e:	8b 00                	mov    (%eax),%eax
81006680:	8d 48 01             	lea    0x1(%eax),%ecx
81006683:	8b 55 10             	mov    0x10(%ebp),%edx
81006686:	89 0a                	mov    %ecx,(%edx)
81006688:	8b 55 0c             	mov    0xc(%ebp),%edx
8100668b:	88 10                	mov    %dl,(%eax)
8100668d:	0f b6 00             	movzbl (%eax),%eax
81006690:	0f b6 c0             	movzbl %al,%eax
81006693:	eb 14                	jmp    810066a9 <__sputc_r+0x64>
81006695:	83 ec 04             	sub    $0x4,%esp
81006698:	ff 75 10             	push   0x10(%ebp)
8100669b:	ff 75 0c             	push   0xc(%ebp)
8100669e:	ff 75 08             	push   0x8(%ebp)
810066a1:	e8 59 f9 ff ff       	call   81005fff <__swbuf_r>
810066a6:	83 c4 10             	add    $0x10,%esp
810066a9:	c9                   	leave  
810066aa:	c3                   	ret    

810066ab <__fputwc>:
810066ab:	55                   	push   %ebp
810066ac:	89 e5                	mov    %esp,%ebp
810066ae:	83 ec 18             	sub    $0x18,%esp
810066b1:	e8 b5 08 00 00       	call   81006f6b <__locale_mb_cur_max>
810066b6:	83 f8 01             	cmp    $0x1,%eax
810066b9:	75 1e                	jne    810066d9 <__fputwc+0x2e>
810066bb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810066bf:	7e 18                	jle    810066d9 <__fputwc+0x2e>
810066c1:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810066c8:	7f 0f                	jg     810066d9 <__fputwc+0x2e>
810066ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810066cd:	88 45 ef             	mov    %al,-0x11(%ebp)
810066d0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810066d7:	eb 3c                	jmp    81006715 <__fputwc+0x6a>
810066d9:	8b 45 10             	mov    0x10(%ebp),%eax
810066dc:	83 c0 5c             	add    $0x5c,%eax
810066df:	50                   	push   %eax
810066e0:	ff 75 0c             	push   0xc(%ebp)
810066e3:	8d 45 ef             	lea    -0x11(%ebp),%eax
810066e6:	50                   	push   %eax
810066e7:	ff 75 08             	push   0x8(%ebp)
810066ea:	e8 dc 1c 00 00       	call   810083cb <_wcrtomb_r>
810066ef:	83 c4 10             	add    $0x10,%esp
810066f2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066f5:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810066f9:	75 1a                	jne    81006715 <__fputwc+0x6a>
810066fb:	8b 45 10             	mov    0x10(%ebp),%eax
810066fe:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006702:	83 c8 40             	or     $0x40,%eax
81006705:	89 c2                	mov    %eax,%edx
81006707:	8b 45 10             	mov    0x10(%ebp),%eax
8100670a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100670e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006713:	eb 44                	jmp    81006759 <__fputwc+0xae>
81006715:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100671c:	eb 30                	jmp    8100674e <__fputwc+0xa3>
8100671e:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006721:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006724:	01 d0                	add    %edx,%eax
81006726:	0f b6 00             	movzbl (%eax),%eax
81006729:	0f b6 c0             	movzbl %al,%eax
8100672c:	83 ec 04             	sub    $0x4,%esp
8100672f:	ff 75 10             	push   0x10(%ebp)
81006732:	50                   	push   %eax
81006733:	ff 75 08             	push   0x8(%ebp)
81006736:	e8 0a ff ff ff       	call   81006645 <__sputc_r>
8100673b:	83 c4 10             	add    $0x10,%esp
8100673e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006741:	75 07                	jne    8100674a <__fputwc+0x9f>
81006743:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006748:	eb 0f                	jmp    81006759 <__fputwc+0xae>
8100674a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100674e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006751:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006754:	72 c8                	jb     8100671e <__fputwc+0x73>
81006756:	8b 45 0c             	mov    0xc(%ebp),%eax
81006759:	c9                   	leave  
8100675a:	c3                   	ret    

8100675b <_fputwc_r>:
8100675b:	55                   	push   %ebp
8100675c:	89 e5                	mov    %esp,%ebp
8100675e:	83 ec 18             	sub    $0x18,%esp
81006761:	8b 45 10             	mov    0x10(%ebp),%eax
81006764:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006768:	98                   	cwtl   
81006769:	25 00 20 00 00       	and    $0x2000,%eax
8100676e:	85 c0                	test   %eax,%eax
81006770:	75 24                	jne    81006796 <_fputwc_r+0x3b>
81006772:	8b 45 10             	mov    0x10(%ebp),%eax
81006775:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006779:	80 cc 20             	or     $0x20,%ah
8100677c:	89 c2                	mov    %eax,%edx
8100677e:	8b 45 10             	mov    0x10(%ebp),%eax
81006781:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006785:	8b 45 10             	mov    0x10(%ebp),%eax
81006788:	8b 40 64             	mov    0x64(%eax),%eax
8100678b:	80 cc 20             	or     $0x20,%ah
8100678e:	89 c2                	mov    %eax,%edx
81006790:	8b 45 10             	mov    0x10(%ebp),%eax
81006793:	89 50 64             	mov    %edx,0x64(%eax)
81006796:	83 ec 04             	sub    $0x4,%esp
81006799:	ff 75 10             	push   0x10(%ebp)
8100679c:	ff 75 0c             	push   0xc(%ebp)
8100679f:	ff 75 08             	push   0x8(%ebp)
810067a2:	e8 04 ff ff ff       	call   810066ab <__fputwc>
810067a7:	83 c4 10             	add    $0x10,%esp
810067aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067b0:	c9                   	leave  
810067b1:	c3                   	ret    

810067b2 <fputwc>:
810067b2:	55                   	push   %ebp
810067b3:	89 e5                	mov    %esp,%ebp
810067b5:	83 ec 18             	sub    $0x18,%esp
810067b8:	a1 64 91 00 81       	mov    0x81009164,%eax
810067bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810067c6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810067ca:	74 18                	je     810067e4 <fputwc+0x32>
810067cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810067cf:	8b 40 38             	mov    0x38(%eax),%eax
810067d2:	85 c0                	test   %eax,%eax
810067d4:	75 0e                	jne    810067e4 <fputwc+0x32>
810067d6:	83 ec 0c             	sub    $0xc,%esp
810067d9:	ff 75 f0             	push   -0x10(%ebp)
810067dc:	e8 20 b0 ff ff       	call   81001801 <__sinit>
810067e1:	83 c4 10             	add    $0x10,%esp
810067e4:	83 ec 04             	sub    $0x4,%esp
810067e7:	ff 75 0c             	push   0xc(%ebp)
810067ea:	ff 75 08             	push   0x8(%ebp)
810067ed:	ff 75 f4             	push   -0xc(%ebp)
810067f0:	e8 66 ff ff ff       	call   8100675b <_fputwc_r>
810067f5:	83 c4 10             	add    $0x10,%esp
810067f8:	c9                   	leave  
810067f9:	c3                   	ret    

810067fa <__sfvwrite_r>:
810067fa:	55                   	push   %ebp
810067fb:	89 e5                	mov    %esp,%ebp
810067fd:	57                   	push   %edi
810067fe:	56                   	push   %esi
810067ff:	53                   	push   %ebx
81006800:	83 ec 3c             	sub    $0x3c,%esp
81006803:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006806:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100680d:	8b 45 10             	mov    0x10(%ebp),%eax
81006810:	8b 78 08             	mov    0x8(%eax),%edi
81006813:	85 ff                	test   %edi,%edi
81006815:	75 0a                	jne    81006821 <__sfvwrite_r+0x27>
81006817:	b8 00 00 00 00       	mov    $0x0,%eax
8100681c:	e9 6f 04 00 00       	jmp    81006c90 <__sfvwrite_r+0x496>
81006821:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006825:	98                   	cwtl   
81006826:	83 e0 08             	and    $0x8,%eax
81006829:	85 c0                	test   %eax,%eax
8100682b:	74 07                	je     81006834 <__sfvwrite_r+0x3a>
8100682d:	8b 43 10             	mov    0x10(%ebx),%eax
81006830:	85 c0                	test   %eax,%eax
81006832:	75 1d                	jne    81006851 <__sfvwrite_r+0x57>
81006834:	83 ec 08             	sub    $0x8,%esp
81006837:	53                   	push   %ebx
81006838:	ff 75 08             	push   0x8(%ebp)
8100683b:	e8 38 f9 ff ff       	call   81006178 <__swsetup_r>
81006840:	83 c4 10             	add    $0x10,%esp
81006843:	85 c0                	test   %eax,%eax
81006845:	74 0a                	je     81006851 <__sfvwrite_r+0x57>
81006847:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100684c:	e9 3f 04 00 00       	jmp    81006c90 <__sfvwrite_r+0x496>
81006851:	8b 45 10             	mov    0x10(%ebp),%eax
81006854:	8b 00                	mov    (%eax),%eax
81006856:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006859:	bf 00 00 00 00       	mov    $0x0,%edi
8100685e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006862:	98                   	cwtl   
81006863:	83 e0 02             	and    $0x2,%eax
81006866:	85 c0                	test   %eax,%eax
81006868:	74 68                	je     810068d2 <__sfvwrite_r+0xd8>
8100686a:	eb 11                	jmp    8100687d <__sfvwrite_r+0x83>
8100686c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100686f:	8b 08                	mov    (%eax),%ecx
81006871:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006874:	8b 78 04             	mov    0x4(%eax),%edi
81006877:	83 c0 08             	add    $0x8,%eax
8100687a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100687d:	85 ff                	test   %edi,%edi
8100687f:	74 eb                	je     8100686c <__sfvwrite_r+0x72>
81006881:	8b 4b 24             	mov    0x24(%ebx),%ecx
81006884:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81006889:	39 c7                	cmp    %eax,%edi
8100688b:	0f 46 c7             	cmovbe %edi,%eax
8100688e:	89 c2                	mov    %eax,%edx
81006890:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006893:	52                   	push   %edx
81006894:	ff 75 c4             	push   -0x3c(%ebp)
81006897:	50                   	push   %eax
81006898:	ff 75 08             	push   0x8(%ebp)
8100689b:	ff d1                	call   *%ecx
8100689d:	83 c4 10             	add    $0x10,%esp
810068a0:	89 c6                	mov    %eax,%esi
810068a2:	85 f6                	test   %esi,%esi
810068a4:	0f 8e cf 03 00 00    	jle    81006c79 <__sfvwrite_r+0x47f>
810068aa:	89 f0                	mov    %esi,%eax
810068ac:	01 45 c4             	add    %eax,-0x3c(%ebp)
810068af:	89 f0                	mov    %esi,%eax
810068b1:	29 c7                	sub    %eax,%edi
810068b3:	8b 45 10             	mov    0x10(%ebp),%eax
810068b6:	8b 40 08             	mov    0x8(%eax),%eax
810068b9:	89 f2                	mov    %esi,%edx
810068bb:	29 d0                	sub    %edx,%eax
810068bd:	8b 4d 10             	mov    0x10(%ebp),%ecx
810068c0:	89 41 08             	mov    %eax,0x8(%ecx)
810068c3:	8b 45 10             	mov    0x10(%ebp),%eax
810068c6:	8b 40 08             	mov    0x8(%eax),%eax
810068c9:	85 c0                	test   %eax,%eax
810068cb:	75 b0                	jne    8100687d <__sfvwrite_r+0x83>
810068cd:	e9 a0 03 00 00       	jmp    81006c72 <__sfvwrite_r+0x478>
810068d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068d6:	98                   	cwtl   
810068d7:	83 e0 01             	and    $0x1,%eax
810068da:	85 c0                	test   %eax,%eax
810068dc:	0f 85 44 02 00 00    	jne    81006b26 <__sfvwrite_r+0x32c>
810068e2:	eb 11                	jmp    810068f5 <__sfvwrite_r+0xfb>
810068e4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810068e7:	8b 08                	mov    (%eax),%ecx
810068e9:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810068ec:	8b 78 04             	mov    0x4(%eax),%edi
810068ef:	83 c0 08             	add    $0x8,%eax
810068f2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810068f5:	85 ff                	test   %edi,%edi
810068f7:	74 eb                	je     810068e4 <__sfvwrite_r+0xea>
810068f9:	8b 73 08             	mov    0x8(%ebx),%esi
810068fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006900:	98                   	cwtl   
81006901:	25 00 02 00 00       	and    $0x200,%eax
81006906:	85 c0                	test   %eax,%eax
81006908:	0f 84 4f 01 00 00    	je     81006a5d <__sfvwrite_r+0x263>
8100690e:	89 f0                	mov    %esi,%eax
81006910:	39 c7                	cmp    %eax,%edi
81006912:	0f 82 12 01 00 00    	jb     81006a2a <__sfvwrite_r+0x230>
81006918:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100691c:	98                   	cwtl   
8100691d:	25 80 04 00 00       	and    $0x480,%eax
81006922:	85 c0                	test   %eax,%eax
81006924:	0f 84 00 01 00 00    	je     81006a2a <__sfvwrite_r+0x230>
8100692a:	8b 03                	mov    (%ebx),%eax
8100692c:	8b 53 10             	mov    0x10(%ebx),%edx
8100692f:	29 d0                	sub    %edx,%eax
81006931:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006934:	8b 53 14             	mov    0x14(%ebx),%edx
81006937:	89 d0                	mov    %edx,%eax
81006939:	01 c0                	add    %eax,%eax
8100693b:	01 d0                	add    %edx,%eax
8100693d:	89 c2                	mov    %eax,%edx
8100693f:	c1 ea 1f             	shr    $0x1f,%edx
81006942:	01 d0                	add    %edx,%eax
81006944:	d1 f8                	sar    %eax
81006946:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006949:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100694c:	01 f8                	add    %edi,%eax
8100694e:	8d 50 01             	lea    0x1(%eax),%edx
81006951:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006954:	39 c2                	cmp    %eax,%edx
81006956:	76 0b                	jbe    81006963 <__sfvwrite_r+0x169>
81006958:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100695b:	01 f8                	add    %edi,%eax
8100695d:	83 c0 01             	add    $0x1,%eax
81006960:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006963:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006967:	98                   	cwtl   
81006968:	25 00 04 00 00       	and    $0x400,%eax
8100696d:	85 c0                	test   %eax,%eax
8100696f:	74 4f                	je     810069c0 <__sfvwrite_r+0x1c6>
81006971:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006974:	83 ec 08             	sub    $0x8,%esp
81006977:	50                   	push   %eax
81006978:	ff 75 08             	push   0x8(%ebp)
8100697b:	e8 34 d2 ff ff       	call   81003bb4 <_malloc_r>
81006980:	83 c4 10             	add    $0x10,%esp
81006983:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006986:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100698a:	75 0e                	jne    8100699a <__sfvwrite_r+0x1a0>
8100698c:	8b 45 08             	mov    0x8(%ebp),%eax
8100698f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006995:	e9 e6 02 00 00       	jmp    81006c80 <__sfvwrite_r+0x486>
8100699a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100699d:	8b 43 10             	mov    0x10(%ebx),%eax
810069a0:	83 ec 04             	sub    $0x4,%esp
810069a3:	52                   	push   %edx
810069a4:	50                   	push   %eax
810069a5:	ff 75 dc             	push   -0x24(%ebp)
810069a8:	e8 1b db ff ff       	call   810044c8 <memcpy>
810069ad:	83 c4 10             	add    $0x10,%esp
810069b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069b4:	66 25 7f fb          	and    $0xfb7f,%ax
810069b8:	0c 80                	or     $0x80,%al
810069ba:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069be:	eb 49                	jmp    81006a09 <__sfvwrite_r+0x20f>
810069c0:	8b 55 d8             	mov    -0x28(%ebp),%edx
810069c3:	8b 43 10             	mov    0x10(%ebx),%eax
810069c6:	83 ec 04             	sub    $0x4,%esp
810069c9:	52                   	push   %edx
810069ca:	50                   	push   %eax
810069cb:	ff 75 08             	push   0x8(%ebp)
810069ce:	e8 a7 0f 00 00       	call   8100797a <_realloc_r>
810069d3:	83 c4 10             	add    $0x10,%esp
810069d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810069d9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810069dd:	75 2a                	jne    81006a09 <__sfvwrite_r+0x20f>
810069df:	8b 43 10             	mov    0x10(%ebx),%eax
810069e2:	83 ec 08             	sub    $0x8,%esp
810069e5:	50                   	push   %eax
810069e6:	ff 75 08             	push   0x8(%ebp)
810069e9:	e8 03 b3 ff ff       	call   81001cf1 <_free_r>
810069ee:	83 c4 10             	add    $0x10,%esp
810069f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069f5:	24 7f                	and    $0x7f,%al
810069f7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069fb:	8b 45 08             	mov    0x8(%ebp),%eax
810069fe:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006a04:	e9 77 02 00 00       	jmp    81006c80 <__sfvwrite_r+0x486>
81006a09:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006a0c:	89 43 10             	mov    %eax,0x10(%ebx)
81006a0f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81006a12:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006a15:	01 d0                	add    %edx,%eax
81006a17:	89 03                	mov    %eax,(%ebx)
81006a19:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006a1c:	89 43 14             	mov    %eax,0x14(%ebx)
81006a1f:	89 fe                	mov    %edi,%esi
81006a21:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006a24:	2b 45 d0             	sub    -0x30(%ebp),%eax
81006a27:	89 43 08             	mov    %eax,0x8(%ebx)
81006a2a:	89 f0                	mov    %esi,%eax
81006a2c:	39 c7                	cmp    %eax,%edi
81006a2e:	73 02                	jae    81006a32 <__sfvwrite_r+0x238>
81006a30:	89 fe                	mov    %edi,%esi
81006a32:	89 f2                	mov    %esi,%edx
81006a34:	8b 03                	mov    (%ebx),%eax
81006a36:	83 ec 04             	sub    $0x4,%esp
81006a39:	52                   	push   %edx
81006a3a:	ff 75 c4             	push   -0x3c(%ebp)
81006a3d:	50                   	push   %eax
81006a3e:	e8 3d 06 00 00       	call   81007080 <memmove>
81006a43:	83 c4 10             	add    $0x10,%esp
81006a46:	8b 43 08             	mov    0x8(%ebx),%eax
81006a49:	29 f0                	sub    %esi,%eax
81006a4b:	89 43 08             	mov    %eax,0x8(%ebx)
81006a4e:	8b 03                	mov    (%ebx),%eax
81006a50:	89 f2                	mov    %esi,%edx
81006a52:	01 d0                	add    %edx,%eax
81006a54:	89 03                	mov    %eax,(%ebx)
81006a56:	89 fe                	mov    %edi,%esi
81006a58:	e9 9d 00 00 00       	jmp    81006afa <__sfvwrite_r+0x300>
81006a5d:	8b 13                	mov    (%ebx),%edx
81006a5f:	8b 43 10             	mov    0x10(%ebx),%eax
81006a62:	39 c2                	cmp    %eax,%edx
81006a64:	77 07                	ja     81006a6d <__sfvwrite_r+0x273>
81006a66:	8b 43 14             	mov    0x14(%ebx),%eax
81006a69:	39 c7                	cmp    %eax,%edi
81006a6b:	73 4c                	jae    81006ab9 <__sfvwrite_r+0x2bf>
81006a6d:	89 f0                	mov    %esi,%eax
81006a6f:	39 c7                	cmp    %eax,%edi
81006a71:	0f 46 c7             	cmovbe %edi,%eax
81006a74:	89 c6                	mov    %eax,%esi
81006a76:	89 f2                	mov    %esi,%edx
81006a78:	8b 03                	mov    (%ebx),%eax
81006a7a:	83 ec 04             	sub    $0x4,%esp
81006a7d:	52                   	push   %edx
81006a7e:	ff 75 c4             	push   -0x3c(%ebp)
81006a81:	50                   	push   %eax
81006a82:	e8 f9 05 00 00       	call   81007080 <memmove>
81006a87:	83 c4 10             	add    $0x10,%esp
81006a8a:	8b 43 08             	mov    0x8(%ebx),%eax
81006a8d:	29 f0                	sub    %esi,%eax
81006a8f:	89 43 08             	mov    %eax,0x8(%ebx)
81006a92:	8b 03                	mov    (%ebx),%eax
81006a94:	89 f2                	mov    %esi,%edx
81006a96:	01 d0                	add    %edx,%eax
81006a98:	89 03                	mov    %eax,(%ebx)
81006a9a:	8b 43 08             	mov    0x8(%ebx),%eax
81006a9d:	85 c0                	test   %eax,%eax
81006a9f:	75 58                	jne    81006af9 <__sfvwrite_r+0x2ff>
81006aa1:	83 ec 08             	sub    $0x8,%esp
81006aa4:	53                   	push   %ebx
81006aa5:	ff 75 08             	push   0x8(%ebp)
81006aa8:	e8 51 a8 ff ff       	call   810012fe <_fflush_r>
81006aad:	83 c4 10             	add    $0x10,%esp
81006ab0:	85 c0                	test   %eax,%eax
81006ab2:	74 45                	je     81006af9 <__sfvwrite_r+0x2ff>
81006ab4:	e9 c7 01 00 00       	jmp    81006c80 <__sfvwrite_r+0x486>
81006ab9:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81006abf:	77 04                	ja     81006ac5 <__sfvwrite_r+0x2cb>
81006ac1:	89 f8                	mov    %edi,%eax
81006ac3:	eb 05                	jmp    81006aca <__sfvwrite_r+0x2d0>
81006ac5:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006aca:	8b 4b 14             	mov    0x14(%ebx),%ecx
81006acd:	99                   	cltd   
81006ace:	f7 f9                	idiv   %ecx
81006ad0:	89 c2                	mov    %eax,%edx
81006ad2:	8b 43 14             	mov    0x14(%ebx),%eax
81006ad5:	89 d6                	mov    %edx,%esi
81006ad7:	0f af f0             	imul   %eax,%esi
81006ada:	8b 53 24             	mov    0x24(%ebx),%edx
81006add:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006ae0:	56                   	push   %esi
81006ae1:	ff 75 c4             	push   -0x3c(%ebp)
81006ae4:	50                   	push   %eax
81006ae5:	ff 75 08             	push   0x8(%ebp)
81006ae8:	ff d2                	call   *%edx
81006aea:	83 c4 10             	add    $0x10,%esp
81006aed:	89 c6                	mov    %eax,%esi
81006aef:	85 f6                	test   %esi,%esi
81006af1:	0f 8e 85 01 00 00    	jle    81006c7c <__sfvwrite_r+0x482>
81006af7:	eb 01                	jmp    81006afa <__sfvwrite_r+0x300>
81006af9:	90                   	nop
81006afa:	89 f0                	mov    %esi,%eax
81006afc:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006aff:	89 f0                	mov    %esi,%eax
81006b01:	29 c7                	sub    %eax,%edi
81006b03:	8b 45 10             	mov    0x10(%ebp),%eax
81006b06:	8b 40 08             	mov    0x8(%eax),%eax
81006b09:	89 f2                	mov    %esi,%edx
81006b0b:	29 d0                	sub    %edx,%eax
81006b0d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006b10:	89 41 08             	mov    %eax,0x8(%ecx)
81006b13:	8b 45 10             	mov    0x10(%ebp),%eax
81006b16:	8b 40 08             	mov    0x8(%eax),%eax
81006b19:	85 c0                	test   %eax,%eax
81006b1b:	0f 85 d4 fd ff ff    	jne    810068f5 <__sfvwrite_r+0xfb>
81006b21:	e9 4c 01 00 00       	jmp    81006c72 <__sfvwrite_r+0x478>
81006b26:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006b2d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006b34:	eb 18                	jmp    81006b4e <__sfvwrite_r+0x354>
81006b36:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006b3d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006b40:	8b 08                	mov    (%eax),%ecx
81006b42:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006b45:	8b 78 04             	mov    0x4(%eax),%edi
81006b48:	83 c0 08             	add    $0x8,%eax
81006b4b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006b4e:	85 ff                	test   %edi,%edi
81006b50:	74 e4                	je     81006b36 <__sfvwrite_r+0x33c>
81006b52:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006b56:	75 32                	jne    81006b8a <__sfvwrite_r+0x390>
81006b58:	83 ec 04             	sub    $0x4,%esp
81006b5b:	57                   	push   %edi
81006b5c:	6a 0a                	push   $0xa
81006b5e:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006b61:	56                   	push   %esi
81006b62:	e8 79 d8 ff ff       	call   810043e0 <memchr>
81006b67:	83 c4 10             	add    $0x10,%esp
81006b6a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006b6d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81006b71:	74 0a                	je     81006b7d <__sfvwrite_r+0x383>
81006b73:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006b76:	83 c0 01             	add    $0x1,%eax
81006b79:	29 f0                	sub    %esi,%eax
81006b7b:	eb 03                	jmp    81006b80 <__sfvwrite_r+0x386>
81006b7d:	8d 47 01             	lea    0x1(%edi),%eax
81006b80:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006b83:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006b8a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006b8d:	39 c7                	cmp    %eax,%edi
81006b8f:	0f 46 c7             	cmovbe %edi,%eax
81006b92:	89 c1                	mov    %eax,%ecx
81006b94:	8b 53 08             	mov    0x8(%ebx),%edx
81006b97:	8b 43 14             	mov    0x14(%ebx),%eax
81006b9a:	8d 34 02             	lea    (%edx,%eax,1),%esi
81006b9d:	8b 13                	mov    (%ebx),%edx
81006b9f:	8b 43 10             	mov    0x10(%ebx),%eax
81006ba2:	39 c2                	cmp    %eax,%edx
81006ba4:	76 38                	jbe    81006bde <__sfvwrite_r+0x3e4>
81006ba6:	39 f1                	cmp    %esi,%ecx
81006ba8:	7e 34                	jle    81006bde <__sfvwrite_r+0x3e4>
81006baa:	89 f2                	mov    %esi,%edx
81006bac:	8b 03                	mov    (%ebx),%eax
81006bae:	83 ec 04             	sub    $0x4,%esp
81006bb1:	52                   	push   %edx
81006bb2:	ff 75 c4             	push   -0x3c(%ebp)
81006bb5:	50                   	push   %eax
81006bb6:	e8 c5 04 00 00       	call   81007080 <memmove>
81006bbb:	83 c4 10             	add    $0x10,%esp
81006bbe:	8b 03                	mov    (%ebx),%eax
81006bc0:	89 f2                	mov    %esi,%edx
81006bc2:	01 d0                	add    %edx,%eax
81006bc4:	89 03                	mov    %eax,(%ebx)
81006bc6:	83 ec 08             	sub    $0x8,%esp
81006bc9:	53                   	push   %ebx
81006bca:	ff 75 08             	push   0x8(%ebp)
81006bcd:	e8 2c a7 ff ff       	call   810012fe <_fflush_r>
81006bd2:	83 c4 10             	add    $0x10,%esp
81006bd5:	85 c0                	test   %eax,%eax
81006bd7:	74 4f                	je     81006c28 <__sfvwrite_r+0x42e>
81006bd9:	e9 a2 00 00 00       	jmp    81006c80 <__sfvwrite_r+0x486>
81006bde:	8b 73 14             	mov    0x14(%ebx),%esi
81006be1:	89 c8                	mov    %ecx,%eax
81006be3:	39 c6                	cmp    %eax,%esi
81006be5:	7f 1b                	jg     81006c02 <__sfvwrite_r+0x408>
81006be7:	8b 53 24             	mov    0x24(%ebx),%edx
81006bea:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006bed:	56                   	push   %esi
81006bee:	ff 75 c4             	push   -0x3c(%ebp)
81006bf1:	50                   	push   %eax
81006bf2:	ff 75 08             	push   0x8(%ebp)
81006bf5:	ff d2                	call   *%edx
81006bf7:	83 c4 10             	add    $0x10,%esp
81006bfa:	89 c6                	mov    %eax,%esi
81006bfc:	85 f6                	test   %esi,%esi
81006bfe:	7f 28                	jg     81006c28 <__sfvwrite_r+0x42e>
81006c00:	eb 7e                	jmp    81006c80 <__sfvwrite_r+0x486>
81006c02:	89 ce                	mov    %ecx,%esi
81006c04:	89 f2                	mov    %esi,%edx
81006c06:	8b 03                	mov    (%ebx),%eax
81006c08:	83 ec 04             	sub    $0x4,%esp
81006c0b:	52                   	push   %edx
81006c0c:	ff 75 c4             	push   -0x3c(%ebp)
81006c0f:	50                   	push   %eax
81006c10:	e8 6b 04 00 00       	call   81007080 <memmove>
81006c15:	83 c4 10             	add    $0x10,%esp
81006c18:	8b 43 08             	mov    0x8(%ebx),%eax
81006c1b:	29 f0                	sub    %esi,%eax
81006c1d:	89 43 08             	mov    %eax,0x8(%ebx)
81006c20:	8b 03                	mov    (%ebx),%eax
81006c22:	89 f2                	mov    %esi,%edx
81006c24:	01 d0                	add    %edx,%eax
81006c26:	89 03                	mov    %eax,(%ebx)
81006c28:	29 75 e0             	sub    %esi,-0x20(%ebp)
81006c2b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81006c2f:	75 1a                	jne    81006c4b <__sfvwrite_r+0x451>
81006c31:	83 ec 08             	sub    $0x8,%esp
81006c34:	53                   	push   %ebx
81006c35:	ff 75 08             	push   0x8(%ebp)
81006c38:	e8 c1 a6 ff ff       	call   810012fe <_fflush_r>
81006c3d:	83 c4 10             	add    $0x10,%esp
81006c40:	85 c0                	test   %eax,%eax
81006c42:	75 3b                	jne    81006c7f <__sfvwrite_r+0x485>
81006c44:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006c4b:	89 f0                	mov    %esi,%eax
81006c4d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006c50:	89 f0                	mov    %esi,%eax
81006c52:	29 c7                	sub    %eax,%edi
81006c54:	8b 45 10             	mov    0x10(%ebp),%eax
81006c57:	8b 40 08             	mov    0x8(%eax),%eax
81006c5a:	89 f2                	mov    %esi,%edx
81006c5c:	29 d0                	sub    %edx,%eax
81006c5e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006c61:	89 41 08             	mov    %eax,0x8(%ecx)
81006c64:	8b 45 10             	mov    0x10(%ebp),%eax
81006c67:	8b 40 08             	mov    0x8(%eax),%eax
81006c6a:	85 c0                	test   %eax,%eax
81006c6c:	0f 85 dc fe ff ff    	jne    81006b4e <__sfvwrite_r+0x354>
81006c72:	b8 00 00 00 00       	mov    $0x0,%eax
81006c77:	eb 17                	jmp    81006c90 <__sfvwrite_r+0x496>
81006c79:	90                   	nop
81006c7a:	eb 04                	jmp    81006c80 <__sfvwrite_r+0x486>
81006c7c:	90                   	nop
81006c7d:	eb 01                	jmp    81006c80 <__sfvwrite_r+0x486>
81006c7f:	90                   	nop
81006c80:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006c84:	83 c8 40             	or     $0x40,%eax
81006c87:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006c8b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c90:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006c93:	5b                   	pop    %ebx
81006c94:	5e                   	pop    %esi
81006c95:	5f                   	pop    %edi
81006c96:	5d                   	pop    %ebp
81006c97:	c3                   	ret    

81006c98 <_getc_r>:
81006c98:	55                   	push   %ebp
81006c99:	89 e5                	mov    %esp,%ebp
81006c9b:	53                   	push   %ebx
81006c9c:	83 ec 14             	sub    $0x14,%esp
81006c9f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006ca2:	8b 45 08             	mov    0x8(%ebp),%eax
81006ca5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ca8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006cac:	74 18                	je     81006cc6 <_getc_r+0x2e>
81006cae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cb1:	8b 40 38             	mov    0x38(%eax),%eax
81006cb4:	85 c0                	test   %eax,%eax
81006cb6:	75 0e                	jne    81006cc6 <_getc_r+0x2e>
81006cb8:	83 ec 0c             	sub    $0xc,%esp
81006cbb:	ff 75 f4             	push   -0xc(%ebp)
81006cbe:	e8 3e ab ff ff       	call   81001801 <__sinit>
81006cc3:	83 c4 10             	add    $0x10,%esp
81006cc6:	8b 43 04             	mov    0x4(%ebx),%eax
81006cc9:	83 e8 01             	sub    $0x1,%eax
81006ccc:	89 43 04             	mov    %eax,0x4(%ebx)
81006ccf:	8b 43 04             	mov    0x4(%ebx),%eax
81006cd2:	85 c0                	test   %eax,%eax
81006cd4:	79 11                	jns    81006ce7 <_getc_r+0x4f>
81006cd6:	83 ec 08             	sub    $0x8,%esp
81006cd9:	53                   	push   %ebx
81006cda:	ff 75 08             	push   0x8(%ebp)
81006cdd:	e8 72 15 00 00       	call   81008254 <__srget_r>
81006ce2:	83 c4 10             	add    $0x10,%esp
81006ce5:	eb 0d                	jmp    81006cf4 <_getc_r+0x5c>
81006ce7:	8b 03                	mov    (%ebx),%eax
81006ce9:	8d 50 01             	lea    0x1(%eax),%edx
81006cec:	89 13                	mov    %edx,(%ebx)
81006cee:	0f b6 00             	movzbl (%eax),%eax
81006cf1:	0f b6 c0             	movzbl %al,%eax
81006cf4:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006cf7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006cfa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006cfd:	c9                   	leave  
81006cfe:	c3                   	ret    

81006cff <getc>:
81006cff:	55                   	push   %ebp
81006d00:	89 e5                	mov    %esp,%ebp
81006d02:	53                   	push   %ebx
81006d03:	83 ec 14             	sub    $0x14,%esp
81006d06:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006d09:	a1 64 91 00 81       	mov    0x81009164,%eax
81006d0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006d11:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006d14:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006d17:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006d1b:	74 18                	je     81006d35 <getc+0x36>
81006d1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d20:	8b 40 38             	mov    0x38(%eax),%eax
81006d23:	85 c0                	test   %eax,%eax
81006d25:	75 0e                	jne    81006d35 <getc+0x36>
81006d27:	83 ec 0c             	sub    $0xc,%esp
81006d2a:	ff 75 f0             	push   -0x10(%ebp)
81006d2d:	e8 cf aa ff ff       	call   81001801 <__sinit>
81006d32:	83 c4 10             	add    $0x10,%esp
81006d35:	8b 43 04             	mov    0x4(%ebx),%eax
81006d38:	83 e8 01             	sub    $0x1,%eax
81006d3b:	89 43 04             	mov    %eax,0x4(%ebx)
81006d3e:	8b 43 04             	mov    0x4(%ebx),%eax
81006d41:	85 c0                	test   %eax,%eax
81006d43:	79 11                	jns    81006d56 <getc+0x57>
81006d45:	83 ec 08             	sub    $0x8,%esp
81006d48:	53                   	push   %ebx
81006d49:	ff 75 f4             	push   -0xc(%ebp)
81006d4c:	e8 03 15 00 00       	call   81008254 <__srget_r>
81006d51:	83 c4 10             	add    $0x10,%esp
81006d54:	eb 0d                	jmp    81006d63 <getc+0x64>
81006d56:	8b 03                	mov    (%ebx),%eax
81006d58:	8d 50 01             	lea    0x1(%eax),%edx
81006d5b:	89 13                	mov    %edx,(%ebx)
81006d5d:	0f b6 00             	movzbl (%eax),%eax
81006d60:	0f b6 c0             	movzbl %al,%eax
81006d63:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006d66:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d69:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006d6c:	c9                   	leave  
81006d6d:	c3                   	ret    

81006d6e <_findenv>:
81006d6e:	55                   	push   %ebp
81006d6f:	89 e5                	mov    %esp,%ebp
81006d71:	83 ec 08             	sub    $0x8,%esp
81006d74:	8b 55 08             	mov    0x8(%ebp),%edx
81006d77:	a1 64 91 00 81       	mov    0x81009164,%eax
81006d7c:	83 ec 04             	sub    $0x4,%esp
81006d7f:	ff 75 0c             	push   0xc(%ebp)
81006d82:	52                   	push   %edx
81006d83:	50                   	push   %eax
81006d84:	e8 25 00 00 00       	call   81006dae <_findenv_r>
81006d89:	83 c4 10             	add    $0x10,%esp
81006d8c:	c9                   	leave  
81006d8d:	c3                   	ret    

81006d8e <getenv>:
81006d8e:	55                   	push   %ebp
81006d8f:	89 e5                	mov    %esp,%ebp
81006d91:	83 ec 18             	sub    $0x18,%esp
81006d94:	a1 64 91 00 81       	mov    0x81009164,%eax
81006d99:	83 ec 04             	sub    $0x4,%esp
81006d9c:	8d 55 f4             	lea    -0xc(%ebp),%edx
81006d9f:	52                   	push   %edx
81006da0:	ff 75 08             	push   0x8(%ebp)
81006da3:	50                   	push   %eax
81006da4:	e8 05 00 00 00       	call   81006dae <_findenv_r>
81006da9:	83 c4 10             	add    $0x10,%esp
81006dac:	c9                   	leave  
81006dad:	c3                   	ret    

81006dae <_findenv_r>:
81006dae:	55                   	push   %ebp
81006daf:	89 e5                	mov    %esp,%ebp
81006db1:	57                   	push   %edi
81006db2:	56                   	push   %esi
81006db3:	53                   	push   %ebx
81006db4:	83 ec 1c             	sub    $0x1c,%esp
81006db7:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006dba:	83 ec 0c             	sub    $0xc,%esp
81006dbd:	ff 75 08             	push   0x8(%ebp)
81006dc0:	e8 77 17 00 00       	call   8100853c <__env_lock>
81006dc5:	83 c4 10             	add    $0x10,%esp
81006dc8:	a1 90 95 00 81       	mov    0x81009590,%eax
81006dcd:	8b 00                	mov    (%eax),%eax
81006dcf:	85 c0                	test   %eax,%eax
81006dd1:	75 18                	jne    81006deb <_findenv_r+0x3d>
81006dd3:	83 ec 0c             	sub    $0xc,%esp
81006dd6:	ff 75 08             	push   0x8(%ebp)
81006dd9:	e8 64 17 00 00       	call   81008542 <__env_unlock>
81006dde:	83 c4 10             	add    $0x10,%esp
81006de1:	b8 00 00 00 00       	mov    $0x0,%eax
81006de6:	e9 a8 00 00 00       	jmp    81006e93 <_findenv_r+0xe5>
81006deb:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81006dee:	eb 04                	jmp    81006df4 <_findenv_r+0x46>
81006df0:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006df4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006df7:	0f b6 00             	movzbl (%eax),%eax
81006dfa:	84 c0                	test   %al,%al
81006dfc:	74 0a                	je     81006e08 <_findenv_r+0x5a>
81006dfe:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e01:	0f b6 00             	movzbl (%eax),%eax
81006e04:	3c 3d                	cmp    $0x3d,%al
81006e06:	75 e8                	jne    81006df0 <_findenv_r+0x42>
81006e08:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e0b:	0f b6 00             	movzbl (%eax),%eax
81006e0e:	3c 3d                	cmp    $0x3d,%al
81006e10:	74 6e                	je     81006e80 <_findenv_r+0xd2>
81006e12:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e15:	29 f8                	sub    %edi,%eax
81006e17:	89 c6                	mov    %eax,%esi
81006e19:	a1 90 95 00 81       	mov    0x81009590,%eax
81006e1e:	8b 18                	mov    (%eax),%ebx
81006e20:	eb 58                	jmp    81006e7a <_findenv_r+0xcc>
81006e22:	89 f2                	mov    %esi,%edx
81006e24:	8b 03                	mov    (%ebx),%eax
81006e26:	83 ec 04             	sub    $0x4,%esp
81006e29:	52                   	push   %edx
81006e2a:	57                   	push   %edi
81006e2b:	50                   	push   %eax
81006e2c:	e8 a3 14 00 00       	call   810082d4 <strncmp>
81006e31:	83 c4 10             	add    $0x10,%esp
81006e34:	85 c0                	test   %eax,%eax
81006e36:	75 3f                	jne    81006e77 <_findenv_r+0xc9>
81006e38:	8b 03                	mov    (%ebx),%eax
81006e3a:	89 f2                	mov    %esi,%edx
81006e3c:	01 d0                	add    %edx,%eax
81006e3e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006e41:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e44:	0f b6 00             	movzbl (%eax),%eax
81006e47:	3c 3d                	cmp    $0x3d,%al
81006e49:	75 2c                	jne    81006e77 <_findenv_r+0xc9>
81006e4b:	a1 90 95 00 81       	mov    0x81009590,%eax
81006e50:	8b 10                	mov    (%eax),%edx
81006e52:	89 d8                	mov    %ebx,%eax
81006e54:	29 d0                	sub    %edx,%eax
81006e56:	c1 f8 02             	sar    $0x2,%eax
81006e59:	89 c2                	mov    %eax,%edx
81006e5b:	8b 45 10             	mov    0x10(%ebp),%eax
81006e5e:	89 10                	mov    %edx,(%eax)
81006e60:	83 ec 0c             	sub    $0xc,%esp
81006e63:	ff 75 08             	push   0x8(%ebp)
81006e66:	e8 d7 16 00 00       	call   81008542 <__env_unlock>
81006e6b:	83 c4 10             	add    $0x10,%esp
81006e6e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006e72:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e75:	eb 1c                	jmp    81006e93 <_findenv_r+0xe5>
81006e77:	83 c3 04             	add    $0x4,%ebx
81006e7a:	8b 03                	mov    (%ebx),%eax
81006e7c:	85 c0                	test   %eax,%eax
81006e7e:	75 a2                	jne    81006e22 <_findenv_r+0x74>
81006e80:	83 ec 0c             	sub    $0xc,%esp
81006e83:	ff 75 08             	push   0x8(%ebp)
81006e86:	e8 b7 16 00 00       	call   81008542 <__env_unlock>
81006e8b:	83 c4 10             	add    $0x10,%esp
81006e8e:	b8 00 00 00 00       	mov    $0x0,%eax
81006e93:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e96:	5b                   	pop    %ebx
81006e97:	5e                   	pop    %esi
81006e98:	5f                   	pop    %edi
81006e99:	5d                   	pop    %ebp
81006e9a:	c3                   	ret    

81006e9b <_getenv_r>:
81006e9b:	55                   	push   %ebp
81006e9c:	89 e5                	mov    %esp,%ebp
81006e9e:	83 ec 18             	sub    $0x18,%esp
81006ea1:	83 ec 04             	sub    $0x4,%esp
81006ea4:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006ea7:	50                   	push   %eax
81006ea8:	ff 75 0c             	push   0xc(%ebp)
81006eab:	ff 75 08             	push   0x8(%ebp)
81006eae:	e8 fb fe ff ff       	call   81006dae <_findenv_r>
81006eb3:	83 c4 10             	add    $0x10,%esp
81006eb6:	c9                   	leave  
81006eb7:	c3                   	ret    

81006eb8 <_isatty_r>:
81006eb8:	55                   	push   %ebp
81006eb9:	89 e5                	mov    %esp,%ebp
81006ebb:	83 ec 18             	sub    $0x18,%esp
81006ebe:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
81006ec5:	00 00 00 
81006ec8:	83 ec 0c             	sub    $0xc,%esp
81006ecb:	ff 75 0c             	push   0xc(%ebp)
81006ece:	e8 5f 9e ff ff       	call   81000d32 <isatty>
81006ed3:	83 c4 10             	add    $0x10,%esp
81006ed6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ed9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006edd:	75 14                	jne    81006ef3 <_isatty_r+0x3b>
81006edf:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81006ee4:	85 c0                	test   %eax,%eax
81006ee6:	74 0b                	je     81006ef3 <_isatty_r+0x3b>
81006ee8:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
81006eee:	8b 45 08             	mov    0x8(%ebp),%eax
81006ef1:	89 10                	mov    %edx,(%eax)
81006ef3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ef6:	c9                   	leave  
81006ef7:	c3                   	ret    

81006ef8 <__get_global_locale>:
81006ef8:	55                   	push   %ebp
81006ef9:	89 e5                	mov    %esp,%ebp
81006efb:	b8 a0 95 00 81       	mov    $0x810095a0,%eax
81006f00:	5d                   	pop    %ebp
81006f01:	c3                   	ret    

81006f02 <__get_current_locale>:
81006f02:	55                   	push   %ebp
81006f03:	89 e5                	mov    %esp,%ebp
81006f05:	e8 ee ff ff ff       	call   81006ef8 <__get_global_locale>
81006f0a:	5d                   	pop    %ebp
81006f0b:	c3                   	ret    

81006f0c <_setlocale_r>:
81006f0c:	55                   	push   %ebp
81006f0d:	89 e5                	mov    %esp,%ebp
81006f0f:	83 ec 08             	sub    $0x8,%esp
81006f12:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f16:	74 4c                	je     81006f64 <_setlocale_r+0x58>
81006f18:	83 ec 08             	sub    $0x8,%esp
81006f1b:	68 04 8d 00 81       	push   $0x81008d04
81006f20:	ff 75 10             	push   0x10(%ebp)
81006f23:	e8 44 ec ff ff       	call   81005b6c <strcmp>
81006f28:	83 c4 10             	add    $0x10,%esp
81006f2b:	85 c0                	test   %eax,%eax
81006f2d:	74 35                	je     81006f64 <_setlocale_r+0x58>
81006f2f:	83 ec 08             	sub    $0x8,%esp
81006f32:	68 0a 8d 00 81       	push   $0x81008d0a
81006f37:	ff 75 10             	push   0x10(%ebp)
81006f3a:	e8 2d ec ff ff       	call   81005b6c <strcmp>
81006f3f:	83 c4 10             	add    $0x10,%esp
81006f42:	85 c0                	test   %eax,%eax
81006f44:	74 1e                	je     81006f64 <_setlocale_r+0x58>
81006f46:	83 ec 08             	sub    $0x8,%esp
81006f49:	68 03 8d 00 81       	push   $0x81008d03
81006f4e:	ff 75 10             	push   0x10(%ebp)
81006f51:	e8 16 ec ff ff       	call   81005b6c <strcmp>
81006f56:	83 c4 10             	add    $0x10,%esp
81006f59:	85 c0                	test   %eax,%eax
81006f5b:	74 07                	je     81006f64 <_setlocale_r+0x58>
81006f5d:	b8 00 00 00 00       	mov    $0x0,%eax
81006f62:	eb 05                	jmp    81006f69 <_setlocale_r+0x5d>
81006f64:	b8 0a 8d 00 81       	mov    $0x81008d0a,%eax
81006f69:	c9                   	leave  
81006f6a:	c3                   	ret    

81006f6b <__locale_mb_cur_max>:
81006f6b:	55                   	push   %ebp
81006f6c:	89 e5                	mov    %esp,%ebp
81006f6e:	e8 8f ff ff ff       	call   81006f02 <__get_current_locale>
81006f73:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006f7a:	0f be c0             	movsbl %al,%eax
81006f7d:	5d                   	pop    %ebp
81006f7e:	c3                   	ret    

81006f7f <setlocale>:
81006f7f:	55                   	push   %ebp
81006f80:	89 e5                	mov    %esp,%ebp
81006f82:	83 ec 08             	sub    $0x8,%esp
81006f85:	a1 64 91 00 81       	mov    0x81009164,%eax
81006f8a:	83 ec 04             	sub    $0x4,%esp
81006f8d:	ff 75 0c             	push   0xc(%ebp)
81006f90:	ff 75 08             	push   0x8(%ebp)
81006f93:	50                   	push   %eax
81006f94:	e8 73 ff ff ff       	call   81006f0c <_setlocale_r>
81006f99:	83 c4 10             	add    $0x10,%esp
81006f9c:	c9                   	leave  
81006f9d:	c3                   	ret    

81006f9e <_lseek_r>:
81006f9e:	55                   	push   %ebp
81006f9f:	89 e5                	mov    %esp,%ebp
81006fa1:	83 ec 18             	sub    $0x18,%esp
81006fa4:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
81006fab:	00 00 00 
81006fae:	83 ec 04             	sub    $0x4,%esp
81006fb1:	ff 75 14             	push   0x14(%ebp)
81006fb4:	ff 75 10             	push   0x10(%ebp)
81006fb7:	ff 75 0c             	push   0xc(%ebp)
81006fba:	e8 46 9d ff ff       	call   81000d05 <lseek>
81006fbf:	83 c4 10             	add    $0x10,%esp
81006fc2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006fc5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006fc9:	75 14                	jne    81006fdf <_lseek_r+0x41>
81006fcb:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81006fd0:	85 c0                	test   %eax,%eax
81006fd2:	74 0b                	je     81006fdf <_lseek_r+0x41>
81006fd4:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
81006fda:	8b 45 08             	mov    0x8(%ebp),%eax
81006fdd:	89 10                	mov    %edx,(%eax)
81006fdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006fe2:	c9                   	leave  
81006fe3:	c3                   	ret    

81006fe4 <__get_global_locale>:
81006fe4:	55                   	push   %ebp
81006fe5:	89 e5                	mov    %esp,%ebp
81006fe7:	b8 a0 95 00 81       	mov    $0x810095a0,%eax
81006fec:	5d                   	pop    %ebp
81006fed:	c3                   	ret    

81006fee <__get_current_locale>:
81006fee:	55                   	push   %ebp
81006fef:	89 e5                	mov    %esp,%ebp
81006ff1:	e8 ee ff ff ff       	call   81006fe4 <__get_global_locale>
81006ff6:	5d                   	pop    %ebp
81006ff7:	c3                   	ret    

81006ff8 <_mbtowc_r>:
81006ff8:	55                   	push   %ebp
81006ff9:	89 e5                	mov    %esp,%ebp
81006ffb:	83 ec 08             	sub    $0x8,%esp
81006ffe:	e8 eb ff ff ff       	call   81006fee <__get_current_locale>
81007003:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81007009:	83 ec 0c             	sub    $0xc,%esp
8100700c:	ff 75 18             	push   0x18(%ebp)
8100700f:	ff 75 14             	push   0x14(%ebp)
81007012:	ff 75 10             	push   0x10(%ebp)
81007015:	ff 75 0c             	push   0xc(%ebp)
81007018:	ff 75 08             	push   0x8(%ebp)
8100701b:	ff d0                	call   *%eax
8100701d:	83 c4 20             	add    $0x20,%esp
81007020:	c9                   	leave  
81007021:	c3                   	ret    

81007022 <__ascii_mbtowc>:
81007022:	55                   	push   %ebp
81007023:	89 e5                	mov    %esp,%ebp
81007025:	83 ec 10             	sub    $0x10,%esp
81007028:	8b 45 10             	mov    0x10(%ebp),%eax
8100702b:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100702e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007032:	75 06                	jne    8100703a <__ascii_mbtowc+0x18>
81007034:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007037:	89 45 0c             	mov    %eax,0xc(%ebp)
8100703a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100703e:	75 07                	jne    81007047 <__ascii_mbtowc+0x25>
81007040:	b8 00 00 00 00       	mov    $0x0,%eax
81007045:	eb 31                	jmp    81007078 <__ascii_mbtowc+0x56>
81007047:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100704b:	75 07                	jne    81007054 <__ascii_mbtowc+0x32>
8100704d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007052:	eb 24                	jmp    81007078 <__ascii_mbtowc+0x56>
81007054:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007057:	0f b6 00             	movzbl (%eax),%eax
8100705a:	0f b6 d0             	movzbl %al,%edx
8100705d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007060:	89 10                	mov    %edx,(%eax)
81007062:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007065:	0f b6 00             	movzbl (%eax),%eax
81007068:	84 c0                	test   %al,%al
8100706a:	75 07                	jne    81007073 <__ascii_mbtowc+0x51>
8100706c:	b8 00 00 00 00       	mov    $0x0,%eax
81007071:	eb 05                	jmp    81007078 <__ascii_mbtowc+0x56>
81007073:	b8 01 00 00 00       	mov    $0x1,%eax
81007078:	c9                   	leave  
81007079:	c3                   	ret    
8100707a:	66 90                	xchg   %ax,%ax
8100707c:	66 90                	xchg   %ax,%ax
8100707e:	66 90                	xchg   %ax,%ax

81007080 <memmove>:
81007080:	55                   	push   %ebp
81007081:	89 e5                	mov    %esp,%ebp
81007083:	56                   	push   %esi
81007084:	57                   	push   %edi
81007085:	53                   	push   %ebx
81007086:	8b 7d 08             	mov    0x8(%ebp),%edi
81007089:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100708c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100708f:	fc                   	cld    
81007090:	39 fe                	cmp    %edi,%esi
81007092:	73 43                	jae    810070d7 <memmove+0x57>
81007094:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81007098:	39 df                	cmp    %ebx,%edi
8100709a:	77 3b                	ja     810070d7 <memmove+0x57>
8100709c:	01 ce                	add    %ecx,%esi
8100709e:	01 cf                	add    %ecx,%edi
810070a0:	fd                   	std    
810070a1:	83 f9 08             	cmp    $0x8,%ecx
810070a4:	76 2b                	jbe    810070d1 <memmove+0x51>
810070a6:	89 fa                	mov    %edi,%edx
810070a8:	89 cb                	mov    %ecx,%ebx
810070aa:	83 e2 03             	and    $0x3,%edx
810070ad:	74 0c                	je     810070bb <memmove+0x3b>
810070af:	89 d1                	mov    %edx,%ecx
810070b1:	4e                   	dec    %esi
810070b2:	4f                   	dec    %edi
810070b3:	29 cb                	sub    %ecx,%ebx
810070b5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070b7:	89 d9                	mov    %ebx,%ecx
810070b9:	46                   	inc    %esi
810070ba:	47                   	inc    %edi
810070bb:	c1 e9 02             	shr    $0x2,%ecx
810070be:	83 ee 04             	sub    $0x4,%esi
810070c1:	83 ef 04             	sub    $0x4,%edi
810070c4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810070c6:	83 c6 04             	add    $0x4,%esi
810070c9:	83 c7 04             	add    $0x4,%edi
810070cc:	89 d9                	mov    %ebx,%ecx
810070ce:	83 e1 03             	and    $0x3,%ecx
810070d1:	4e                   	dec    %esi
810070d2:	4f                   	dec    %edi
810070d3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070d5:	eb 2a                	jmp    81007101 <memmove+0x81>
810070d7:	83 f9 08             	cmp    $0x8,%ecx
810070da:	76 23                	jbe    810070ff <memmove+0x7f>
810070dc:	89 fa                	mov    %edi,%edx
810070de:	89 cb                	mov    %ecx,%ebx
810070e0:	83 e2 03             	and    $0x3,%edx
810070e3:	74 10                	je     810070f5 <memmove+0x75>
810070e5:	b9 04 00 00 00       	mov    $0x4,%ecx
810070ea:	29 d1                	sub    %edx,%ecx
810070ec:	83 e1 03             	and    $0x3,%ecx
810070ef:	29 cb                	sub    %ecx,%ebx
810070f1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810070f3:	89 d9                	mov    %ebx,%ecx
810070f5:	c1 e9 02             	shr    $0x2,%ecx
810070f8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810070fa:	89 d9                	mov    %ebx,%ecx
810070fc:	83 e1 03             	and    $0x3,%ecx
810070ff:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81007101:	8b 45 08             	mov    0x8(%ebp),%eax
81007104:	fc                   	cld    
81007105:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007108:	5b                   	pop    %ebx
81007109:	5f                   	pop    %edi
8100710a:	5e                   	pop    %esi
8100710b:	c9                   	leave  
8100710c:	c3                   	ret    

8100710d <__ssputs_r>:
8100710d:	55                   	push   %ebp
8100710e:	89 e5                	mov    %esp,%ebp
81007110:	53                   	push   %ebx
81007111:	83 ec 14             	sub    $0x14,%esp
81007114:	8b 45 0c             	mov    0xc(%ebp),%eax
81007117:	8b 58 08             	mov    0x8(%eax),%ebx
8100711a:	89 d8                	mov    %ebx,%eax
8100711c:	39 45 14             	cmp    %eax,0x14(%ebp)
8100711f:	0f 82 3c 01 00 00    	jb     81007261 <__ssputs_r+0x154>
81007125:	8b 45 0c             	mov    0xc(%ebp),%eax
81007128:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100712c:	98                   	cwtl   
8100712d:	25 80 04 00 00       	and    $0x480,%eax
81007132:	85 c0                	test   %eax,%eax
81007134:	0f 84 27 01 00 00    	je     81007261 <__ssputs_r+0x154>
8100713a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100713d:	8b 10                	mov    (%eax),%edx
8100713f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007142:	8b 48 10             	mov    0x10(%eax),%ecx
81007145:	89 d0                	mov    %edx,%eax
81007147:	29 c8                	sub    %ecx,%eax
81007149:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100714c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100714f:	8b 50 14             	mov    0x14(%eax),%edx
81007152:	89 d0                	mov    %edx,%eax
81007154:	01 c0                	add    %eax,%eax
81007156:	01 d0                	add    %edx,%eax
81007158:	89 c2                	mov    %eax,%edx
8100715a:	c1 ea 1f             	shr    $0x1f,%edx
8100715d:	01 d0                	add    %edx,%eax
8100715f:	d1 f8                	sar    %eax
81007161:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007164:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007167:	8b 45 14             	mov    0x14(%ebp),%eax
8100716a:	01 d0                	add    %edx,%eax
8100716c:	8d 50 01             	lea    0x1(%eax),%edx
8100716f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007172:	39 c2                	cmp    %eax,%edx
81007174:	76 0e                	jbe    81007184 <__ssputs_r+0x77>
81007176:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007179:	8b 45 14             	mov    0x14(%ebp),%eax
8100717c:	01 d0                	add    %edx,%eax
8100717e:	83 c0 01             	add    $0x1,%eax
81007181:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007184:	8b 45 0c             	mov    0xc(%ebp),%eax
81007187:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100718b:	98                   	cwtl   
8100718c:	25 00 04 00 00       	and    $0x400,%eax
81007191:	85 c0                	test   %eax,%eax
81007193:	74 5a                	je     810071ef <__ssputs_r+0xe2>
81007195:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007198:	83 ec 08             	sub    $0x8,%esp
8100719b:	50                   	push   %eax
8100719c:	ff 75 08             	push   0x8(%ebp)
8100719f:	e8 10 ca ff ff       	call   81003bb4 <_malloc_r>
810071a4:	83 c4 10             	add    $0x10,%esp
810071a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071aa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810071ae:	75 0e                	jne    810071be <__ssputs_r+0xb1>
810071b0:	8b 45 08             	mov    0x8(%ebp),%eax
810071b3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810071b9:	e9 e9 00 00 00       	jmp    810072a7 <__ssputs_r+0x19a>
810071be:	8b 55 ec             	mov    -0x14(%ebp),%edx
810071c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810071c4:	8b 40 10             	mov    0x10(%eax),%eax
810071c7:	83 ec 04             	sub    $0x4,%esp
810071ca:	52                   	push   %edx
810071cb:	50                   	push   %eax
810071cc:	ff 75 f4             	push   -0xc(%ebp)
810071cf:	e8 f4 d2 ff ff       	call   810044c8 <memcpy>
810071d4:	83 c4 10             	add    $0x10,%esp
810071d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810071da:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810071de:	66 25 7f fb          	and    $0xfb7f,%ax
810071e2:	0c 80                	or     $0x80,%al
810071e4:	89 c2                	mov    %eax,%edx
810071e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810071e9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810071ed:	eb 42                	jmp    81007231 <__ssputs_r+0x124>
810071ef:	8b 55 f0             	mov    -0x10(%ebp),%edx
810071f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810071f5:	8b 40 10             	mov    0x10(%eax),%eax
810071f8:	83 ec 04             	sub    $0x4,%esp
810071fb:	52                   	push   %edx
810071fc:	50                   	push   %eax
810071fd:	ff 75 08             	push   0x8(%ebp)
81007200:	e8 75 07 00 00       	call   8100797a <_realloc_r>
81007205:	83 c4 10             	add    $0x10,%esp
81007208:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100720b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100720f:	75 20                	jne    81007231 <__ssputs_r+0x124>
81007211:	8b 45 0c             	mov    0xc(%ebp),%eax
81007214:	8b 40 10             	mov    0x10(%eax),%eax
81007217:	83 ec 08             	sub    $0x8,%esp
8100721a:	50                   	push   %eax
8100721b:	ff 75 08             	push   0x8(%ebp)
8100721e:	e8 ce aa ff ff       	call   81001cf1 <_free_r>
81007223:	83 c4 10             	add    $0x10,%esp
81007226:	8b 45 08             	mov    0x8(%ebp),%eax
81007229:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100722f:	eb 76                	jmp    810072a7 <__ssputs_r+0x19a>
81007231:	8b 45 0c             	mov    0xc(%ebp),%eax
81007234:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007237:	89 50 10             	mov    %edx,0x10(%eax)
8100723a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100723d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007240:	01 c2                	add    %eax,%edx
81007242:	8b 45 0c             	mov    0xc(%ebp),%eax
81007245:	89 10                	mov    %edx,(%eax)
81007247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100724a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100724d:	89 50 14             	mov    %edx,0x14(%eax)
81007250:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007253:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007256:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007259:	89 c2                	mov    %eax,%edx
8100725b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100725e:	89 50 08             	mov    %edx,0x8(%eax)
81007261:	89 d8                	mov    %ebx,%eax
81007263:	39 45 14             	cmp    %eax,0x14(%ebp)
81007266:	73 03                	jae    8100726b <__ssputs_r+0x15e>
81007268:	8b 5d 14             	mov    0x14(%ebp),%ebx
8100726b:	89 da                	mov    %ebx,%edx
8100726d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007270:	8b 00                	mov    (%eax),%eax
81007272:	83 ec 04             	sub    $0x4,%esp
81007275:	52                   	push   %edx
81007276:	ff 75 10             	push   0x10(%ebp)
81007279:	50                   	push   %eax
8100727a:	e8 01 fe ff ff       	call   81007080 <memmove>
8100727f:	83 c4 10             	add    $0x10,%esp
81007282:	8b 45 0c             	mov    0xc(%ebp),%eax
81007285:	8b 40 08             	mov    0x8(%eax),%eax
81007288:	29 d8                	sub    %ebx,%eax
8100728a:	89 c2                	mov    %eax,%edx
8100728c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100728f:	89 50 08             	mov    %edx,0x8(%eax)
81007292:	8b 45 0c             	mov    0xc(%ebp),%eax
81007295:	8b 00                	mov    (%eax),%eax
81007297:	89 da                	mov    %ebx,%edx
81007299:	01 c2                	add    %eax,%edx
8100729b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100729e:	89 10                	mov    %edx,(%eax)
810072a0:	b8 00 00 00 00       	mov    $0x0,%eax
810072a5:	eb 18                	jmp    810072bf <__ssputs_r+0x1b2>
810072a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810072aa:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810072ae:	83 c8 40             	or     $0x40,%eax
810072b1:	89 c2                	mov    %eax,%edx
810072b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810072b6:	66 89 50 0c          	mov    %dx,0xc(%eax)
810072ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810072c2:	c9                   	leave  
810072c3:	c3                   	ret    

810072c4 <__ssprint_r>:
810072c4:	55                   	push   %ebp
810072c5:	89 e5                	mov    %esp,%ebp
810072c7:	57                   	push   %edi
810072c8:	56                   	push   %esi
810072c9:	53                   	push   %ebx
810072ca:	83 ec 2c             	sub    $0x2c,%esp
810072cd:	8b 5d 10             	mov    0x10(%ebp),%ebx
810072d0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810072d7:	8b 03                	mov    (%ebx),%eax
810072d9:	89 45 d0             	mov    %eax,-0x30(%ebp)
810072dc:	be 00 00 00 00       	mov    $0x0,%esi
810072e1:	8b 43 08             	mov    0x8(%ebx),%eax
810072e4:	85 c0                	test   %eax,%eax
810072e6:	75 22                	jne    8100730a <__ssprint_r+0x46>
810072e8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810072ef:	b8 00 00 00 00       	mov    $0x0,%eax
810072f4:	e9 f5 01 00 00       	jmp    810074ee <__ssprint_r+0x22a>
810072f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072fc:	8b 08                	mov    (%eax),%ecx
810072fe:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007301:	8b 70 04             	mov    0x4(%eax),%esi
81007304:	83 c0 08             	add    $0x8,%eax
81007307:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100730a:	85 f6                	test   %esi,%esi
8100730c:	74 eb                	je     810072f9 <__ssprint_r+0x35>
8100730e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007311:	8b 78 08             	mov    0x8(%eax),%edi
81007314:	89 f8                	mov    %edi,%eax
81007316:	39 c6                	cmp    %eax,%esi
81007318:	0f 82 38 01 00 00    	jb     81007456 <__ssprint_r+0x192>
8100731e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007321:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007325:	98                   	cwtl   
81007326:	25 80 04 00 00       	and    $0x480,%eax
8100732b:	85 c0                	test   %eax,%eax
8100732d:	0f 84 23 01 00 00    	je     81007456 <__ssprint_r+0x192>
81007333:	8b 45 0c             	mov    0xc(%ebp),%eax
81007336:	8b 10                	mov    (%eax),%edx
81007338:	8b 45 0c             	mov    0xc(%ebp),%eax
8100733b:	8b 48 10             	mov    0x10(%eax),%ecx
8100733e:	89 d0                	mov    %edx,%eax
81007340:	29 c8                	sub    %ecx,%eax
81007342:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007345:	8b 45 0c             	mov    0xc(%ebp),%eax
81007348:	8b 50 14             	mov    0x14(%eax),%edx
8100734b:	89 d0                	mov    %edx,%eax
8100734d:	01 c0                	add    %eax,%eax
8100734f:	01 d0                	add    %edx,%eax
81007351:	89 c2                	mov    %eax,%edx
81007353:	c1 ea 1f             	shr    $0x1f,%edx
81007356:	01 d0                	add    %edx,%eax
81007358:	d1 f8                	sar    %eax
8100735a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100735d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007360:	01 f0                	add    %esi,%eax
81007362:	8d 50 01             	lea    0x1(%eax),%edx
81007365:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007368:	39 c2                	cmp    %eax,%edx
8100736a:	76 0b                	jbe    81007377 <__ssprint_r+0xb3>
8100736c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100736f:	01 f0                	add    %esi,%eax
81007371:	83 c0 01             	add    $0x1,%eax
81007374:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007377:	8b 45 0c             	mov    0xc(%ebp),%eax
8100737a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100737e:	98                   	cwtl   
8100737f:	25 00 04 00 00       	and    $0x400,%eax
81007384:	85 c0                	test   %eax,%eax
81007386:	74 5a                	je     810073e2 <__ssprint_r+0x11e>
81007388:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100738b:	83 ec 08             	sub    $0x8,%esp
8100738e:	50                   	push   %eax
8100738f:	ff 75 08             	push   0x8(%ebp)
81007392:	e8 1d c8 ff ff       	call   81003bb4 <_malloc_r>
81007397:	83 c4 10             	add    $0x10,%esp
8100739a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100739d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810073a1:	75 0e                	jne    810073b1 <__ssprint_r+0xed>
810073a3:	8b 45 08             	mov    0x8(%ebp),%eax
810073a6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810073ac:	e9 17 01 00 00       	jmp    810074c8 <__ssprint_r+0x204>
810073b1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810073b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810073b7:	8b 40 10             	mov    0x10(%eax),%eax
810073ba:	83 ec 04             	sub    $0x4,%esp
810073bd:	52                   	push   %edx
810073be:	50                   	push   %eax
810073bf:	ff 75 e4             	push   -0x1c(%ebp)
810073c2:	e8 01 d1 ff ff       	call   810044c8 <memcpy>
810073c7:	83 c4 10             	add    $0x10,%esp
810073ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810073cd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810073d1:	66 25 7f fb          	and    $0xfb7f,%ax
810073d5:	0c 80                	or     $0x80,%al
810073d7:	89 c2                	mov    %eax,%edx
810073d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810073dc:	66 89 50 0c          	mov    %dx,0xc(%eax)
810073e0:	eb 45                	jmp    81007427 <__ssprint_r+0x163>
810073e2:	8b 55 e0             	mov    -0x20(%ebp),%edx
810073e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810073e8:	8b 40 10             	mov    0x10(%eax),%eax
810073eb:	83 ec 04             	sub    $0x4,%esp
810073ee:	52                   	push   %edx
810073ef:	50                   	push   %eax
810073f0:	ff 75 08             	push   0x8(%ebp)
810073f3:	e8 82 05 00 00       	call   8100797a <_realloc_r>
810073f8:	83 c4 10             	add    $0x10,%esp
810073fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810073fe:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007402:	75 23                	jne    81007427 <__ssprint_r+0x163>
81007404:	8b 45 0c             	mov    0xc(%ebp),%eax
81007407:	8b 40 10             	mov    0x10(%eax),%eax
8100740a:	83 ec 08             	sub    $0x8,%esp
8100740d:	50                   	push   %eax
8100740e:	ff 75 08             	push   0x8(%ebp)
81007411:	e8 db a8 ff ff       	call   81001cf1 <_free_r>
81007416:	83 c4 10             	add    $0x10,%esp
81007419:	8b 45 08             	mov    0x8(%ebp),%eax
8100741c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007422:	e9 a1 00 00 00       	jmp    810074c8 <__ssprint_r+0x204>
81007427:	8b 45 0c             	mov    0xc(%ebp),%eax
8100742a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100742d:	89 50 10             	mov    %edx,0x10(%eax)
81007430:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007433:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007436:	01 c2                	add    %eax,%edx
81007438:	8b 45 0c             	mov    0xc(%ebp),%eax
8100743b:	89 10                	mov    %edx,(%eax)
8100743d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007440:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007443:	89 50 14             	mov    %edx,0x14(%eax)
81007446:	89 f7                	mov    %esi,%edi
81007448:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100744b:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100744e:	89 c2                	mov    %eax,%edx
81007450:	8b 45 0c             	mov    0xc(%ebp),%eax
81007453:	89 50 08             	mov    %edx,0x8(%eax)
81007456:	89 f8                	mov    %edi,%eax
81007458:	39 c6                	cmp    %eax,%esi
8100745a:	73 02                	jae    8100745e <__ssprint_r+0x19a>
8100745c:	89 f7                	mov    %esi,%edi
8100745e:	89 fa                	mov    %edi,%edx
81007460:	8b 45 0c             	mov    0xc(%ebp),%eax
81007463:	8b 00                	mov    (%eax),%eax
81007465:	83 ec 04             	sub    $0x4,%esp
81007468:	52                   	push   %edx
81007469:	ff 75 d4             	push   -0x2c(%ebp)
8100746c:	50                   	push   %eax
8100746d:	e8 0e fc ff ff       	call   81007080 <memmove>
81007472:	83 c4 10             	add    $0x10,%esp
81007475:	8b 45 0c             	mov    0xc(%ebp),%eax
81007478:	8b 40 08             	mov    0x8(%eax),%eax
8100747b:	29 f8                	sub    %edi,%eax
8100747d:	89 c2                	mov    %eax,%edx
8100747f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007482:	89 50 08             	mov    %edx,0x8(%eax)
81007485:	8b 45 0c             	mov    0xc(%ebp),%eax
81007488:	8b 00                	mov    (%eax),%eax
8100748a:	89 fa                	mov    %edi,%edx
8100748c:	01 c2                	add    %eax,%edx
8100748e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007491:	89 10                	mov    %edx,(%eax)
81007493:	89 f7                	mov    %esi,%edi
81007495:	89 f8                	mov    %edi,%eax
81007497:	01 45 d4             	add    %eax,-0x2c(%ebp)
8100749a:	89 f8                	mov    %edi,%eax
8100749c:	29 c6                	sub    %eax,%esi
8100749e:	8b 43 08             	mov    0x8(%ebx),%eax
810074a1:	89 fa                	mov    %edi,%edx
810074a3:	29 d0                	sub    %edx,%eax
810074a5:	89 43 08             	mov    %eax,0x8(%ebx)
810074a8:	8b 43 08             	mov    0x8(%ebx),%eax
810074ab:	85 c0                	test   %eax,%eax
810074ad:	0f 85 57 fe ff ff    	jne    8100730a <__ssprint_r+0x46>
810074b3:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810074ba:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810074c1:	b8 00 00 00 00       	mov    $0x0,%eax
810074c6:	eb 26                	jmp    810074ee <__ssprint_r+0x22a>
810074c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810074cb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810074cf:	83 c8 40             	or     $0x40,%eax
810074d2:	89 c2                	mov    %eax,%edx
810074d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810074d7:	66 89 50 0c          	mov    %dx,0xc(%eax)
810074db:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810074e2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810074e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810074ee:	8d 65 f4             	lea    -0xc(%ebp),%esp
810074f1:	5b                   	pop    %ebx
810074f2:	5e                   	pop    %esi
810074f3:	5f                   	pop    %edi
810074f4:	5d                   	pop    %ebp
810074f5:	c3                   	ret    

810074f6 <_svfiprintf_r>:
810074f6:	55                   	push   %ebp
810074f7:	89 e5                	mov    %esp,%ebp
810074f9:	57                   	push   %edi
810074fa:	56                   	push   %esi
810074fb:	53                   	push   %ebx
810074fc:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007502:	c7 45 e4 0d 71 00 81 	movl   $0x8100710d,-0x1c(%ebp)
81007509:	8b 45 0c             	mov    0xc(%ebp),%eax
8100750c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007510:	98                   	cwtl   
81007511:	25 80 00 00 00       	and    $0x80,%eax
81007516:	85 c0                	test   %eax,%eax
81007518:	74 50                	je     8100756a <_svfiprintf_r+0x74>
8100751a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100751d:	8b 40 10             	mov    0x10(%eax),%eax
81007520:	85 c0                	test   %eax,%eax
81007522:	75 46                	jne    8100756a <_svfiprintf_r+0x74>
81007524:	83 ec 08             	sub    $0x8,%esp
81007527:	6a 40                	push   $0x40
81007529:	ff 75 08             	push   0x8(%ebp)
8100752c:	e8 83 c6 ff ff       	call   81003bb4 <_malloc_r>
81007531:	83 c4 10             	add    $0x10,%esp
81007534:	8b 55 0c             	mov    0xc(%ebp),%edx
81007537:	89 02                	mov    %eax,(%edx)
81007539:	8b 45 0c             	mov    0xc(%ebp),%eax
8100753c:	8b 10                	mov    (%eax),%edx
8100753e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007541:	89 50 10             	mov    %edx,0x10(%eax)
81007544:	8b 45 0c             	mov    0xc(%ebp),%eax
81007547:	8b 00                	mov    (%eax),%eax
81007549:	85 c0                	test   %eax,%eax
8100754b:	75 13                	jne    81007560 <_svfiprintf_r+0x6a>
8100754d:	8b 45 08             	mov    0x8(%ebp),%eax
81007550:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007556:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100755b:	e9 c8 02 00 00       	jmp    81007828 <_svfiprintf_r+0x332>
81007560:	8b 45 0c             	mov    0xc(%ebp),%eax
81007563:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
8100756a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100756d:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007574:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007578:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
8100757c:	8b 45 14             	mov    0x14(%ebp),%eax
8100757f:	89 45 80             	mov    %eax,-0x80(%ebp)
81007582:	89 de                	mov    %ebx,%esi
81007584:	eb 03                	jmp    81007589 <_svfiprintf_r+0x93>
81007586:	83 c3 01             	add    $0x1,%ebx
81007589:	0f b6 03             	movzbl (%ebx),%eax
8100758c:	84 c0                	test   %al,%al
8100758e:	74 07                	je     81007597 <_svfiprintf_r+0xa1>
81007590:	0f b6 03             	movzbl (%ebx),%eax
81007593:	3c 25                	cmp    $0x25,%al
81007595:	75 ef                	jne    81007586 <_svfiprintf_r+0x90>
81007597:	89 d8                	mov    %ebx,%eax
81007599:	29 f0                	sub    %esi,%eax
8100759b:	85 c0                	test   %eax,%eax
8100759d:	74 2b                	je     810075ca <_svfiprintf_r+0xd4>
8100759f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810075a5:	50                   	push   %eax
810075a6:	56                   	push   %esi
810075a7:	ff 75 0c             	push   0xc(%ebp)
810075aa:	ff 75 08             	push   0x8(%ebp)
810075ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810075b0:	ff d0                	call   *%eax
810075b2:	83 c4 10             	add    $0x10,%esp
810075b5:	83 f8 ff             	cmp    $0xffffffff,%eax
810075b8:	0f 84 4a 02 00 00    	je     81007808 <_svfiprintf_r+0x312>
810075be:	8b 45 98             	mov    -0x68(%ebp),%eax
810075c1:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
810075c7:	89 45 98             	mov    %eax,-0x68(%ebp)
810075ca:	0f b6 03             	movzbl (%ebx),%eax
810075cd:	84 c0                	test   %al,%al
810075cf:	0f 84 36 02 00 00    	je     8100780b <_svfiprintf_r+0x315>
810075d5:	83 c3 01             	add    $0x1,%ebx
810075d8:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810075df:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
810075e6:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810075ed:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810075f4:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
810075f8:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810075ff:	c7 45 e0 0c 8d 00 81 	movl   $0x81008d0c,-0x20(%ebp)
81007606:	eb 1b                	jmp    81007623 <_svfiprintf_r+0x12d>
81007608:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100760b:	89 f0                	mov    %esi,%eax
8100760d:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007610:	be 01 00 00 00       	mov    $0x1,%esi
81007615:	89 c1                	mov    %eax,%ecx
81007617:	d3 e6                	shl    %cl,%esi
81007619:	89 f0                	mov    %esi,%eax
8100761b:	09 d0                	or     %edx,%eax
8100761d:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007620:	83 c3 01             	add    $0x1,%ebx
81007623:	0f b6 03             	movzbl (%ebx),%eax
81007626:	0f be c0             	movsbl %al,%eax
81007629:	83 ec 04             	sub    $0x4,%esp
8100762c:	6a 05                	push   $0x5
8100762e:	50                   	push   %eax
8100762f:	ff 75 e0             	push   -0x20(%ebp)
81007632:	e8 a9 cd ff ff       	call   810043e0 <memchr>
81007637:	83 c4 10             	add    $0x10,%esp
8100763a:	89 c6                	mov    %eax,%esi
8100763c:	85 f6                	test   %esi,%esi
8100763e:	75 c8                	jne    81007608 <_svfiprintf_r+0x112>
81007640:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007643:	83 e0 10             	and    $0x10,%eax
81007646:	85 c0                	test   %eax,%eax
81007648:	74 04                	je     8100764e <_svfiprintf_r+0x158>
8100764a:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
8100764e:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007651:	83 e0 08             	and    $0x8,%eax
81007654:	85 c0                	test   %eax,%eax
81007656:	74 04                	je     8100765c <_svfiprintf_r+0x166>
81007658:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
8100765c:	0f b6 03             	movzbl (%ebx),%eax
8100765f:	3c 2a                	cmp    $0x2a,%al
81007661:	75 4a                	jne    810076ad <_svfiprintf_r+0x1b7>
81007663:	8b 45 80             	mov    -0x80(%ebp),%eax
81007666:	8d 50 04             	lea    0x4(%eax),%edx
81007669:	89 55 80             	mov    %edx,-0x80(%ebp)
8100766c:	8b 00                	mov    (%eax),%eax
8100766e:	89 45 90             	mov    %eax,-0x70(%ebp)
81007671:	8b 45 90             	mov    -0x70(%ebp),%eax
81007674:	85 c0                	test   %eax,%eax
81007676:	79 11                	jns    81007689 <_svfiprintf_r+0x193>
81007678:	8b 45 90             	mov    -0x70(%ebp),%eax
8100767b:	f7 d8                	neg    %eax
8100767d:	89 45 90             	mov    %eax,-0x70(%ebp)
81007680:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007683:	83 c8 02             	or     $0x2,%eax
81007686:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007689:	83 c3 01             	add    $0x1,%ebx
8100768c:	eb 2d                	jmp    810076bb <_svfiprintf_r+0x1c5>
8100768e:	8b 55 90             	mov    -0x70(%ebp),%edx
81007691:	89 d0                	mov    %edx,%eax
81007693:	c1 e0 02             	shl    $0x2,%eax
81007696:	01 d0                	add    %edx,%eax
81007698:	01 c0                	add    %eax,%eax
8100769a:	89 c2                	mov    %eax,%edx
8100769c:	0f b6 03             	movzbl (%ebx),%eax
8100769f:	0f be c0             	movsbl %al,%eax
810076a2:	83 e8 30             	sub    $0x30,%eax
810076a5:	01 d0                	add    %edx,%eax
810076a7:	89 45 90             	mov    %eax,-0x70(%ebp)
810076aa:	83 c3 01             	add    $0x1,%ebx
810076ad:	0f b6 03             	movzbl (%ebx),%eax
810076b0:	0f be c0             	movsbl %al,%eax
810076b3:	83 e8 30             	sub    $0x30,%eax
810076b6:	83 f8 09             	cmp    $0x9,%eax
810076b9:	76 d3                	jbe    8100768e <_svfiprintf_r+0x198>
810076bb:	0f b6 03             	movzbl (%ebx),%eax
810076be:	3c 2e                	cmp    $0x2e,%al
810076c0:	75 61                	jne    81007723 <_svfiprintf_r+0x22d>
810076c2:	83 c3 01             	add    $0x1,%ebx
810076c5:	0f b6 03             	movzbl (%ebx),%eax
810076c8:	3c 2a                	cmp    $0x2a,%al
810076ca:	75 21                	jne    810076ed <_svfiprintf_r+0x1f7>
810076cc:	83 c3 01             	add    $0x1,%ebx
810076cf:	8b 45 80             	mov    -0x80(%ebp),%eax
810076d2:	8d 50 04             	lea    0x4(%eax),%edx
810076d5:	89 55 80             	mov    %edx,-0x80(%ebp)
810076d8:	8b 00                	mov    (%eax),%eax
810076da:	89 45 88             	mov    %eax,-0x78(%ebp)
810076dd:	8b 45 88             	mov    -0x78(%ebp),%eax
810076e0:	85 c0                	test   %eax,%eax
810076e2:	79 3f                	jns    81007723 <_svfiprintf_r+0x22d>
810076e4:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
810076eb:	eb 36                	jmp    81007723 <_svfiprintf_r+0x22d>
810076ed:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810076f4:	eb 1f                	jmp    81007715 <_svfiprintf_r+0x21f>
810076f6:	8b 55 88             	mov    -0x78(%ebp),%edx
810076f9:	89 d0                	mov    %edx,%eax
810076fb:	c1 e0 02             	shl    $0x2,%eax
810076fe:	01 d0                	add    %edx,%eax
81007700:	01 c0                	add    %eax,%eax
81007702:	89 c2                	mov    %eax,%edx
81007704:	0f b6 03             	movzbl (%ebx),%eax
81007707:	0f be c0             	movsbl %al,%eax
8100770a:	83 e8 30             	sub    $0x30,%eax
8100770d:	01 d0                	add    %edx,%eax
8100770f:	89 45 88             	mov    %eax,-0x78(%ebp)
81007712:	83 c3 01             	add    $0x1,%ebx
81007715:	0f b6 03             	movzbl (%ebx),%eax
81007718:	0f be c0             	movsbl %al,%eax
8100771b:	83 e8 30             	sub    $0x30,%eax
8100771e:	83 f8 09             	cmp    $0x9,%eax
81007721:	76 d3                	jbe    810076f6 <_svfiprintf_r+0x200>
81007723:	c7 45 e0 12 8d 00 81 	movl   $0x81008d12,-0x20(%ebp)
8100772a:	0f b6 03             	movzbl (%ebx),%eax
8100772d:	0f be c0             	movsbl %al,%eax
81007730:	83 ec 04             	sub    $0x4,%esp
81007733:	6a 03                	push   $0x3
81007735:	50                   	push   %eax
81007736:	ff 75 e0             	push   -0x20(%ebp)
81007739:	e8 a2 cc ff ff       	call   810043e0 <memchr>
8100773e:	83 c4 10             	add    $0x10,%esp
81007741:	89 c6                	mov    %eax,%esi
81007743:	85 f6                	test   %esi,%esi
81007745:	74 1b                	je     81007762 <_svfiprintf_r+0x26c>
81007747:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100774a:	89 f0                	mov    %esi,%eax
8100774c:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100774f:	be 40 00 00 00       	mov    $0x40,%esi
81007754:	89 c1                	mov    %eax,%ecx
81007756:	d3 e6                	shl    %cl,%esi
81007758:	89 f0                	mov    %esi,%eax
8100775a:	09 d0                	or     %edx,%eax
8100775c:	89 45 84             	mov    %eax,-0x7c(%ebp)
8100775f:	83 c3 01             	add    $0x1,%ebx
81007762:	89 d8                	mov    %ebx,%eax
81007764:	8d 58 01             	lea    0x1(%eax),%ebx
81007767:	0f b6 00             	movzbl (%eax),%eax
8100776a:	88 45 9c             	mov    %al,-0x64(%ebp)
8100776d:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
81007771:	0f be c0             	movsbl %al,%eax
81007774:	83 ec 04             	sub    $0x4,%esp
81007777:	6a 06                	push   $0x6
81007779:	50                   	push   %eax
8100777a:	68 16 8d 00 81       	push   $0x81008d16
8100777f:	e8 5c cc ff ff       	call   810043e0 <memchr>
81007784:	83 c4 10             	add    $0x10,%esp
81007787:	89 c6                	mov    %eax,%esi
81007789:	85 f6                	test   %esi,%esi
8100778b:	74 4b                	je     810077d8 <_svfiprintf_r+0x2e2>
8100778d:	b8 00 00 00 00       	mov    $0x0,%eax
81007792:	85 c0                	test   %eax,%eax
81007794:	75 22                	jne    810077b8 <_svfiprintf_r+0x2c2>
81007796:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007799:	25 00 01 00 00       	and    $0x100,%eax
8100779e:	85 c0                	test   %eax,%eax
810077a0:	74 0b                	je     810077ad <_svfiprintf_r+0x2b7>
810077a2:	8b 45 80             	mov    -0x80(%ebp),%eax
810077a5:	83 c0 0c             	add    $0xc,%eax
810077a8:	89 45 80             	mov    %eax,-0x80(%ebp)
810077ab:	eb 49                	jmp    810077f6 <_svfiprintf_r+0x300>
810077ad:	8b 45 80             	mov    -0x80(%ebp),%eax
810077b0:	83 c0 08             	add    $0x8,%eax
810077b3:	89 45 80             	mov    %eax,-0x80(%ebp)
810077b6:	eb 3e                	jmp    810077f6 <_svfiprintf_r+0x300>
810077b8:	83 ec 0c             	sub    $0xc,%esp
810077bb:	8d 45 80             	lea    -0x80(%ebp),%eax
810077be:	50                   	push   %eax
810077bf:	ff 75 e4             	push   -0x1c(%ebp)
810077c2:	ff 75 0c             	push   0xc(%ebp)
810077c5:	8d 45 84             	lea    -0x7c(%ebp),%eax
810077c8:	50                   	push   %eax
810077c9:	ff 75 08             	push   0x8(%ebp)
810077cc:	e8 2f 88 ff 7e       	call   0 <do_help-0x81000000>
810077d1:	83 c4 20             	add    $0x20,%esp
810077d4:	89 c7                	mov    %eax,%edi
810077d6:	eb 1e                	jmp    810077f6 <_svfiprintf_r+0x300>
810077d8:	83 ec 0c             	sub    $0xc,%esp
810077db:	8d 45 80             	lea    -0x80(%ebp),%eax
810077de:	50                   	push   %eax
810077df:	ff 75 e4             	push   -0x1c(%ebp)
810077e2:	ff 75 0c             	push   0xc(%ebp)
810077e5:	8d 45 84             	lea    -0x7c(%ebp),%eax
810077e8:	50                   	push   %eax
810077e9:	ff 75 08             	push   0x8(%ebp)
810077ec:	e8 b3 d4 ff ff       	call   81004ca4 <_printf_i>
810077f1:	83 c4 20             	add    $0x20,%esp
810077f4:	89 c7                	mov    %eax,%edi
810077f6:	83 ff ff             	cmp    $0xffffffff,%edi
810077f9:	74 13                	je     8100780e <_svfiprintf_r+0x318>
810077fb:	8b 45 98             	mov    -0x68(%ebp),%eax
810077fe:	01 f8                	add    %edi,%eax
81007800:	89 45 98             	mov    %eax,-0x68(%ebp)
81007803:	e9 7a fd ff ff       	jmp    81007582 <_svfiprintf_r+0x8c>
81007808:	90                   	nop
81007809:	eb 04                	jmp    8100780f <_svfiprintf_r+0x319>
8100780b:	90                   	nop
8100780c:	eb 01                	jmp    8100780f <_svfiprintf_r+0x319>
8100780e:	90                   	nop
8100780f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007812:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007816:	98                   	cwtl   
81007817:	83 e0 40             	and    $0x40,%eax
8100781a:	85 c0                	test   %eax,%eax
8100781c:	75 05                	jne    81007823 <_svfiprintf_r+0x32d>
8100781e:	8b 45 98             	mov    -0x68(%ebp),%eax
81007821:	eb 05                	jmp    81007828 <_svfiprintf_r+0x332>
81007823:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007828:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100782b:	5b                   	pop    %ebx
8100782c:	5e                   	pop    %esi
8100782d:	5f                   	pop    %edi
8100782e:	5d                   	pop    %ebp
8100782f:	c3                   	ret    

81007830 <__sputc_r>:
81007830:	55                   	push   %ebp
81007831:	89 e5                	mov    %esp,%ebp
81007833:	83 ec 08             	sub    $0x8,%esp
81007836:	8b 45 10             	mov    0x10(%ebp),%eax
81007839:	8b 40 08             	mov    0x8(%eax),%eax
8100783c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100783f:	8b 45 10             	mov    0x10(%ebp),%eax
81007842:	89 50 08             	mov    %edx,0x8(%eax)
81007845:	8b 45 10             	mov    0x10(%ebp),%eax
81007848:	8b 40 08             	mov    0x8(%eax),%eax
8100784b:	85 c0                	test   %eax,%eax
8100784d:	79 17                	jns    81007866 <__sputc_r+0x36>
8100784f:	8b 45 10             	mov    0x10(%ebp),%eax
81007852:	8b 50 08             	mov    0x8(%eax),%edx
81007855:	8b 45 10             	mov    0x10(%ebp),%eax
81007858:	8b 40 18             	mov    0x18(%eax),%eax
8100785b:	39 c2                	cmp    %eax,%edx
8100785d:	7c 21                	jl     81007880 <__sputc_r+0x50>
8100785f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007862:	3c 0a                	cmp    $0xa,%al
81007864:	74 1a                	je     81007880 <__sputc_r+0x50>
81007866:	8b 45 10             	mov    0x10(%ebp),%eax
81007869:	8b 00                	mov    (%eax),%eax
8100786b:	8d 48 01             	lea    0x1(%eax),%ecx
8100786e:	8b 55 10             	mov    0x10(%ebp),%edx
81007871:	89 0a                	mov    %ecx,(%edx)
81007873:	8b 55 0c             	mov    0xc(%ebp),%edx
81007876:	88 10                	mov    %dl,(%eax)
81007878:	0f b6 00             	movzbl (%eax),%eax
8100787b:	0f b6 c0             	movzbl %al,%eax
8100787e:	eb 14                	jmp    81007894 <__sputc_r+0x64>
81007880:	83 ec 04             	sub    $0x4,%esp
81007883:	ff 75 10             	push   0x10(%ebp)
81007886:	ff 75 0c             	push   0xc(%ebp)
81007889:	ff 75 08             	push   0x8(%ebp)
8100788c:	e8 6e e7 ff ff       	call   81005fff <__swbuf_r>
81007891:	83 c4 10             	add    $0x10,%esp
81007894:	c9                   	leave  
81007895:	c3                   	ret    

81007896 <_putc_r>:
81007896:	55                   	push   %ebp
81007897:	89 e5                	mov    %esp,%ebp
81007899:	53                   	push   %ebx
8100789a:	83 ec 14             	sub    $0x14,%esp
8100789d:	8b 5d 10             	mov    0x10(%ebp),%ebx
810078a0:	8b 45 08             	mov    0x8(%ebp),%eax
810078a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810078aa:	74 18                	je     810078c4 <_putc_r+0x2e>
810078ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078af:	8b 40 38             	mov    0x38(%eax),%eax
810078b2:	85 c0                	test   %eax,%eax
810078b4:	75 0e                	jne    810078c4 <_putc_r+0x2e>
810078b6:	83 ec 0c             	sub    $0xc,%esp
810078b9:	ff 75 f4             	push   -0xc(%ebp)
810078bc:	e8 40 9f ff ff       	call   81001801 <__sinit>
810078c1:	83 c4 10             	add    $0x10,%esp
810078c4:	83 ec 04             	sub    $0x4,%esp
810078c7:	53                   	push   %ebx
810078c8:	ff 75 0c             	push   0xc(%ebp)
810078cb:	ff 75 08             	push   0x8(%ebp)
810078ce:	e8 5d ff ff ff       	call   81007830 <__sputc_r>
810078d3:	83 c4 10             	add    $0x10,%esp
810078d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810078d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810078dc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810078df:	c9                   	leave  
810078e0:	c3                   	ret    

810078e1 <putc>:
810078e1:	55                   	push   %ebp
810078e2:	89 e5                	mov    %esp,%ebp
810078e4:	53                   	push   %ebx
810078e5:	83 ec 14             	sub    $0x14,%esp
810078e8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810078eb:	a1 64 91 00 81       	mov    0x81009164,%eax
810078f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078f6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810078f9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810078fd:	74 18                	je     81007917 <putc+0x36>
810078ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007902:	8b 40 38             	mov    0x38(%eax),%eax
81007905:	85 c0                	test   %eax,%eax
81007907:	75 0e                	jne    81007917 <putc+0x36>
81007909:	83 ec 0c             	sub    $0xc,%esp
8100790c:	ff 75 f0             	push   -0x10(%ebp)
8100790f:	e8 ed 9e ff ff       	call   81001801 <__sinit>
81007914:	83 c4 10             	add    $0x10,%esp
81007917:	83 ec 04             	sub    $0x4,%esp
8100791a:	53                   	push   %ebx
8100791b:	ff 75 08             	push   0x8(%ebp)
8100791e:	ff 75 f4             	push   -0xc(%ebp)
81007921:	e8 0a ff ff ff       	call   81007830 <__sputc_r>
81007926:	83 c4 10             	add    $0x10,%esp
81007929:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100792c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100792f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007932:	c9                   	leave  
81007933:	c3                   	ret    

81007934 <_read_r>:
81007934:	55                   	push   %ebp
81007935:	89 e5                	mov    %esp,%ebp
81007937:	83 ec 18             	sub    $0x18,%esp
8100793a:	c7 05 ac 9e 00 81 00 	movl   $0x0,0x81009eac
81007941:	00 00 00 
81007944:	83 ec 04             	sub    $0x4,%esp
81007947:	ff 75 14             	push   0x14(%ebp)
8100794a:	ff 75 10             	push   0x10(%ebp)
8100794d:	ff 75 0c             	push   0xc(%ebp)
81007950:	e8 35 93 ff ff       	call   81000c8a <read>
81007955:	83 c4 10             	add    $0x10,%esp
81007958:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100795b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100795f:	75 14                	jne    81007975 <_read_r+0x41>
81007961:	a1 ac 9e 00 81       	mov    0x81009eac,%eax
81007966:	85 c0                	test   %eax,%eax
81007968:	74 0b                	je     81007975 <_read_r+0x41>
8100796a:	8b 15 ac 9e 00 81    	mov    0x81009eac,%edx
81007970:	8b 45 08             	mov    0x8(%ebp),%eax
81007973:	89 10                	mov    %edx,(%eax)
81007975:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007978:	c9                   	leave  
81007979:	c3                   	ret    

8100797a <_realloc_r>:
8100797a:	55                   	push   %ebp
8100797b:	89 e5                	mov    %esp,%ebp
8100797d:	83 ec 78             	sub    $0x78,%esp
81007980:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007984:	75 16                	jne    8100799c <_realloc_r+0x22>
81007986:	83 ec 08             	sub    $0x8,%esp
81007989:	ff 75 10             	push   0x10(%ebp)
8100798c:	ff 75 08             	push   0x8(%ebp)
8100798f:	e8 20 c2 ff ff       	call   81003bb4 <_malloc_r>
81007994:	83 c4 10             	add    $0x10,%esp
81007997:	e9 b6 08 00 00       	jmp    81008252 <_realloc_r+0x8d8>
8100799c:	83 ec 0c             	sub    $0xc,%esp
8100799f:	ff 75 08             	push   0x8(%ebp)
810079a2:	e8 f1 cb ff ff       	call   81004598 <__malloc_lock>
810079a7:	83 c4 10             	add    $0x10,%esp
810079aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810079ad:	83 e8 08             	sub    $0x8,%eax
810079b0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810079b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810079b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810079bc:	8b 40 04             	mov    0x4(%eax),%eax
810079bf:	83 e0 fc             	and    $0xfffffffc,%eax
810079c2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810079c5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810079c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810079cb:	8b 45 10             	mov    0x10(%ebp),%eax
810079ce:	83 c0 0b             	add    $0xb,%eax
810079d1:	83 f8 16             	cmp    $0x16,%eax
810079d4:	76 0b                	jbe    810079e1 <_realloc_r+0x67>
810079d6:	8b 45 10             	mov    0x10(%ebp),%eax
810079d9:	83 c0 0b             	add    $0xb,%eax
810079dc:	83 e0 f8             	and    $0xfffffff8,%eax
810079df:	eb 05                	jmp    810079e6 <_realloc_r+0x6c>
810079e1:	b8 10 00 00 00       	mov    $0x10,%eax
810079e6:	89 45 bc             	mov    %eax,-0x44(%ebp)
810079e9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079ec:	85 c0                	test   %eax,%eax
810079ee:	78 08                	js     810079f8 <_realloc_r+0x7e>
810079f0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079f3:	3b 45 10             	cmp    0x10(%ebp),%eax
810079f6:	73 13                	jae    81007a0b <_realloc_r+0x91>
810079f8:	8b 45 08             	mov    0x8(%ebp),%eax
810079fb:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007a01:	b8 00 00 00 00       	mov    $0x0,%eax
81007a06:	e9 47 08 00 00       	jmp    81008252 <_realloc_r+0x8d8>
81007a0b:	8b 55 c0             	mov    -0x40(%ebp),%edx
81007a0e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a11:	39 c2                	cmp    %eax,%edx
81007a13:	0f 8d 8b 07 00 00    	jge    810081a4 <_realloc_r+0x82a>
81007a19:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81007a1c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007a1f:	01 d0                	add    %edx,%eax
81007a21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007a24:	b8 80 91 00 81       	mov    $0x81009180,%eax
81007a29:	8b 40 08             	mov    0x8(%eax),%eax
81007a2c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007a2f:	74 1e                	je     81007a4f <_realloc_r+0xd5>
81007a31:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a34:	8b 40 04             	mov    0x4(%eax),%eax
81007a37:	83 e0 fe             	and    $0xfffffffe,%eax
81007a3a:	89 c2                	mov    %eax,%edx
81007a3c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a3f:	01 d0                	add    %edx,%eax
81007a41:	8b 40 04             	mov    0x4(%eax),%eax
81007a44:	83 e0 01             	and    $0x1,%eax
81007a47:	85 c0                	test   %eax,%eax
81007a49:	0f 85 ca 00 00 00    	jne    81007b19 <_realloc_r+0x19f>
81007a4f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a52:	8b 40 04             	mov    0x4(%eax),%eax
81007a55:	83 e0 fc             	and    $0xfffffffc,%eax
81007a58:	89 45 e8             	mov    %eax,-0x18(%ebp)
81007a5b:	b8 80 91 00 81       	mov    $0x81009180,%eax
81007a60:	8b 40 08             	mov    0x8(%eax),%eax
81007a63:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007a66:	75 71                	jne    81007ad9 <_realloc_r+0x15f>
81007a68:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007a6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a6e:	01 d0                	add    %edx,%eax
81007a70:	89 c2                	mov    %eax,%edx
81007a72:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a75:	83 c0 10             	add    $0x10,%eax
81007a78:	39 c2                	cmp    %eax,%edx
81007a7a:	0f 8c a9 00 00 00    	jl     81007b29 <_realloc_r+0x1af>
81007a80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007a83:	01 45 f0             	add    %eax,-0x10(%ebp)
81007a86:	ba 80 91 00 81       	mov    $0x81009180,%edx
81007a8b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81007a8e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a91:	01 c8                	add    %ecx,%eax
81007a93:	89 42 08             	mov    %eax,0x8(%edx)
81007a96:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a99:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007a9c:	89 c2                	mov    %eax,%edx
81007a9e:	b8 80 91 00 81       	mov    $0x81009180,%eax
81007aa3:	8b 40 08             	mov    0x8(%eax),%eax
81007aa6:	83 ca 01             	or     $0x1,%edx
81007aa9:	89 50 04             	mov    %edx,0x4(%eax)
81007aac:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007aaf:	8b 40 04             	mov    0x4(%eax),%eax
81007ab2:	83 e0 01             	and    $0x1,%eax
81007ab5:	0b 45 bc             	or     -0x44(%ebp),%eax
81007ab8:	89 c2                	mov    %eax,%edx
81007aba:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007abd:	89 50 04             	mov    %edx,0x4(%eax)
81007ac0:	83 ec 0c             	sub    $0xc,%esp
81007ac3:	ff 75 08             	push   0x8(%ebp)
81007ac6:	e8 d3 ca ff ff       	call   8100459e <__malloc_unlock>
81007acb:	83 c4 10             	add    $0x10,%esp
81007ace:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007ad1:	83 c0 08             	add    $0x8,%eax
81007ad4:	e9 79 07 00 00       	jmp    81008252 <_realloc_r+0x8d8>
81007ad9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007adc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007adf:	01 d0                	add    %edx,%eax
81007ae1:	89 c2                	mov    %eax,%edx
81007ae3:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007ae6:	39 c2                	cmp    %eax,%edx
81007ae8:	7c 3f                	jl     81007b29 <_realloc_r+0x1af>
81007aea:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007aed:	8b 40 0c             	mov    0xc(%eax),%eax
81007af0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007af3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007af6:	8b 40 08             	mov    0x8(%eax),%eax
81007af9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007afc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007aff:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007b02:	89 50 0c             	mov    %edx,0xc(%eax)
81007b05:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007b08:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007b0b:	89 50 08             	mov    %edx,0x8(%eax)
81007b0e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007b11:	01 45 f0             	add    %eax,-0x10(%ebp)
81007b14:	e9 8c 06 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81007b19:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81007b20:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81007b27:	eb 01                	jmp    81007b2a <_realloc_r+0x1b0>
81007b29:	90                   	nop
81007b2a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b2d:	8b 40 04             	mov    0x4(%eax),%eax
81007b30:	83 e0 01             	and    $0x1,%eax
81007b33:	85 c0                	test   %eax,%eax
81007b35:	0f 85 d6 04 00 00    	jne    81008011 <_realloc_r+0x697>
81007b3b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b3e:	8b 00                	mov    (%eax),%eax
81007b40:	f7 d8                	neg    %eax
81007b42:	89 c2                	mov    %eax,%edx
81007b44:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007b47:	01 d0                	add    %edx,%eax
81007b49:	89 45 b0             	mov    %eax,-0x50(%ebp)
81007b4c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b4f:	8b 40 04             	mov    0x4(%eax),%eax
81007b52:	83 e0 fc             	and    $0xfffffffc,%eax
81007b55:	89 45 ac             	mov    %eax,-0x54(%ebp)
81007b58:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81007b5c:	0f 84 4a 03 00 00    	je     81007eac <_realloc_r+0x532>
81007b62:	b8 80 91 00 81       	mov    $0x81009180,%eax
81007b67:	8b 40 08             	mov    0x8(%eax),%eax
81007b6a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007b6d:	0f 85 b0 01 00 00    	jne    81007d23 <_realloc_r+0x3a9>
81007b73:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007b76:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007b79:	01 c2                	add    %eax,%edx
81007b7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007b7e:	01 d0                	add    %edx,%eax
81007b80:	89 c2                	mov    %eax,%edx
81007b82:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007b85:	83 c0 10             	add    $0x10,%eax
81007b88:	39 c2                	cmp    %eax,%edx
81007b8a:	0f 8c 1c 03 00 00    	jl     81007eac <_realloc_r+0x532>
81007b90:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b93:	8b 40 0c             	mov    0xc(%eax),%eax
81007b96:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007b99:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b9c:	8b 40 08             	mov    0x8(%eax),%eax
81007b9f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007ba2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007ba5:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007ba8:	89 50 0c             	mov    %edx,0xc(%eax)
81007bab:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007bae:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007bb1:	89 50 08             	mov    %edx,0x8(%eax)
81007bb4:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007bb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007bba:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007bbd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007bc0:	01 d0                	add    %edx,%eax
81007bc2:	01 45 f0             	add    %eax,-0x10(%ebp)
81007bc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007bc8:	83 c0 08             	add    $0x8,%eax
81007bcb:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007bce:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007bd1:	83 e8 04             	sub    $0x4,%eax
81007bd4:	89 45 a0             	mov    %eax,-0x60(%ebp)
81007bd7:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81007bdb:	0f 87 de 00 00 00    	ja     81007cbf <_realloc_r+0x345>
81007be1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007be4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007be7:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007bea:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007bed:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81007bf1:	0f 86 90 00 00 00    	jbe    81007c87 <_realloc_r+0x30d>
81007bf7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bfa:	8d 42 04             	lea    0x4(%edx),%eax
81007bfd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c00:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c03:	8d 48 04             	lea    0x4(%eax),%ecx
81007c06:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c09:	8b 12                	mov    (%edx),%edx
81007c0b:	89 10                	mov    %edx,(%eax)
81007c0d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c10:	8d 42 04             	lea    0x4(%edx),%eax
81007c13:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c16:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c19:	8d 48 04             	lea    0x4(%eax),%ecx
81007c1c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c1f:	8b 12                	mov    (%edx),%edx
81007c21:	89 10                	mov    %edx,(%eax)
81007c23:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81007c27:	76 5e                	jbe    81007c87 <_realloc_r+0x30d>
81007c29:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c2c:	8d 42 04             	lea    0x4(%edx),%eax
81007c2f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c32:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c35:	8d 48 04             	lea    0x4(%eax),%ecx
81007c38:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c3b:	8b 12                	mov    (%edx),%edx
81007c3d:	89 10                	mov    %edx,(%eax)
81007c3f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c42:	8d 42 04             	lea    0x4(%edx),%eax
81007c45:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c48:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c4b:	8d 48 04             	lea    0x4(%eax),%ecx
81007c4e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c51:	8b 12                	mov    (%edx),%edx
81007c53:	89 10                	mov    %edx,(%eax)
81007c55:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81007c59:	76 2c                	jbe    81007c87 <_realloc_r+0x30d>
81007c5b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c5e:	8d 42 04             	lea    0x4(%edx),%eax
81007c61:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c64:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c67:	8d 48 04             	lea    0x4(%eax),%ecx
81007c6a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c6d:	8b 12                	mov    (%edx),%edx
81007c6f:	89 10                	mov    %edx,(%eax)
81007c71:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c74:	8d 42 04             	lea    0x4(%edx),%eax
81007c77:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c7a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c7d:	8d 48 04             	lea    0x4(%eax),%ecx
81007c80:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c83:	8b 12                	mov    (%edx),%edx
81007c85:	89 10                	mov    %edx,(%eax)
81007c87:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007c8a:	8d 42 04             	lea    0x4(%edx),%eax
81007c8d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007c90:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c93:	8d 48 04             	lea    0x4(%eax),%ecx
81007c96:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007c99:	8b 12                	mov    (%edx),%edx
81007c9b:	89 10                	mov    %edx,(%eax)
81007c9d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007ca0:	8d 42 04             	lea    0x4(%edx),%eax
81007ca3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007ca6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007ca9:	8d 48 04             	lea    0x4(%eax),%ecx
81007cac:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007caf:	8b 12                	mov    (%edx),%edx
81007cb1:	89 10                	mov    %edx,(%eax)
81007cb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007cb6:	8b 10                	mov    (%eax),%edx
81007cb8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cbb:	89 10                	mov    %edx,(%eax)
81007cbd:	eb 14                	jmp    81007cd3 <_realloc_r+0x359>
81007cbf:	83 ec 04             	sub    $0x4,%esp
81007cc2:	ff 75 a0             	push   -0x60(%ebp)
81007cc5:	ff 75 0c             	push   0xc(%ebp)
81007cc8:	ff 75 a8             	push   -0x58(%ebp)
81007ccb:	e8 b0 f3 ff ff       	call   81007080 <memmove>
81007cd0:	83 c4 10             	add    $0x10,%esp
81007cd3:	ba 80 91 00 81       	mov    $0x81009180,%edx
81007cd8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007cdb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007cde:	01 c8                	add    %ecx,%eax
81007ce0:	89 42 08             	mov    %eax,0x8(%edx)
81007ce3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ce6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007ce9:	89 c2                	mov    %eax,%edx
81007ceb:	b8 80 91 00 81       	mov    $0x81009180,%eax
81007cf0:	8b 40 08             	mov    0x8(%eax),%eax
81007cf3:	83 ca 01             	or     $0x1,%edx
81007cf6:	89 50 04             	mov    %edx,0x4(%eax)
81007cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007cfc:	8b 40 04             	mov    0x4(%eax),%eax
81007cff:	83 e0 01             	and    $0x1,%eax
81007d02:	0b 45 bc             	or     -0x44(%ebp),%eax
81007d05:	89 c2                	mov    %eax,%edx
81007d07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007d0a:	89 50 04             	mov    %edx,0x4(%eax)
81007d0d:	83 ec 0c             	sub    $0xc,%esp
81007d10:	ff 75 08             	push   0x8(%ebp)
81007d13:	e8 86 c8 ff ff       	call   8100459e <__malloc_unlock>
81007d18:	83 c4 10             	add    $0x10,%esp
81007d1b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007d1e:	e9 2f 05 00 00       	jmp    81008252 <_realloc_r+0x8d8>
81007d23:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007d26:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007d29:	01 c2                	add    %eax,%edx
81007d2b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007d2e:	01 d0                	add    %edx,%eax
81007d30:	89 c2                	mov    %eax,%edx
81007d32:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007d35:	39 c2                	cmp    %eax,%edx
81007d37:	0f 8c 6f 01 00 00    	jl     81007eac <_realloc_r+0x532>
81007d3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007d40:	8b 40 0c             	mov    0xc(%eax),%eax
81007d43:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007d46:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007d49:	8b 40 08             	mov    0x8(%eax),%eax
81007d4c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007d4f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007d52:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007d55:	89 50 0c             	mov    %edx,0xc(%eax)
81007d58:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007d5b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007d5e:	89 50 08             	mov    %edx,0x8(%eax)
81007d61:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d64:	8b 40 0c             	mov    0xc(%eax),%eax
81007d67:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007d6a:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d6d:	8b 40 08             	mov    0x8(%eax),%eax
81007d70:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007d73:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007d76:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007d79:	89 50 0c             	mov    %edx,0xc(%eax)
81007d7c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007d7f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007d82:	89 50 08             	mov    %edx,0x8(%eax)
81007d85:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007d88:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007d8b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007d8e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007d91:	01 d0                	add    %edx,%eax
81007d93:	01 45 f0             	add    %eax,-0x10(%ebp)
81007d96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007d99:	83 c0 08             	add    $0x8,%eax
81007d9c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007d9f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007da2:	83 e8 04             	sub    $0x4,%eax
81007da5:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81007da8:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81007dac:	0f 87 e1 00 00 00    	ja     81007e93 <_realloc_r+0x519>
81007db2:	8b 45 0c             	mov    0xc(%ebp),%eax
81007db5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007db8:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007dbb:	89 45 d8             	mov    %eax,-0x28(%ebp)
81007dbe:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81007dc2:	0f 86 90 00 00 00    	jbe    81007e58 <_realloc_r+0x4de>
81007dc8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dcb:	8d 42 04             	lea    0x4(%edx),%eax
81007dce:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007dd1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007dd4:	8d 48 04             	lea    0x4(%eax),%ecx
81007dd7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007dda:	8b 12                	mov    (%edx),%edx
81007ddc:	89 10                	mov    %edx,(%eax)
81007dde:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007de1:	8d 42 04             	lea    0x4(%edx),%eax
81007de4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007de7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007dea:	8d 48 04             	lea    0x4(%eax),%ecx
81007ded:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007df0:	8b 12                	mov    (%edx),%edx
81007df2:	89 10                	mov    %edx,(%eax)
81007df4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007df8:	76 5e                	jbe    81007e58 <_realloc_r+0x4de>
81007dfa:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dfd:	8d 42 04             	lea    0x4(%edx),%eax
81007e00:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e03:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e06:	8d 48 04             	lea    0x4(%eax),%ecx
81007e09:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e0c:	8b 12                	mov    (%edx),%edx
81007e0e:	89 10                	mov    %edx,(%eax)
81007e10:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e13:	8d 42 04             	lea    0x4(%edx),%eax
81007e16:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e19:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e1c:	8d 48 04             	lea    0x4(%eax),%ecx
81007e1f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e22:	8b 12                	mov    (%edx),%edx
81007e24:	89 10                	mov    %edx,(%eax)
81007e26:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81007e2a:	76 2c                	jbe    81007e58 <_realloc_r+0x4de>
81007e2c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e2f:	8d 42 04             	lea    0x4(%edx),%eax
81007e32:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e35:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e38:	8d 48 04             	lea    0x4(%eax),%ecx
81007e3b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e3e:	8b 12                	mov    (%edx),%edx
81007e40:	89 10                	mov    %edx,(%eax)
81007e42:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e45:	8d 42 04             	lea    0x4(%edx),%eax
81007e48:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e4b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e4e:	8d 48 04             	lea    0x4(%eax),%ecx
81007e51:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e54:	8b 12                	mov    (%edx),%edx
81007e56:	89 10                	mov    %edx,(%eax)
81007e58:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e5b:	8d 42 04             	lea    0x4(%edx),%eax
81007e5e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e61:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e64:	8d 48 04             	lea    0x4(%eax),%ecx
81007e67:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e6a:	8b 12                	mov    (%edx),%edx
81007e6c:	89 10                	mov    %edx,(%eax)
81007e6e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007e71:	8d 42 04             	lea    0x4(%edx),%eax
81007e74:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007e77:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e7a:	8d 48 04             	lea    0x4(%eax),%ecx
81007e7d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007e80:	8b 12                	mov    (%edx),%edx
81007e82:	89 10                	mov    %edx,(%eax)
81007e84:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007e87:	8b 10                	mov    (%eax),%edx
81007e89:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007e8c:	89 10                	mov    %edx,(%eax)
81007e8e:	e9 12 03 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81007e93:	83 ec 04             	sub    $0x4,%esp
81007e96:	ff 75 a4             	push   -0x5c(%ebp)
81007e99:	ff 75 0c             	push   0xc(%ebp)
81007e9c:	ff 75 a8             	push   -0x58(%ebp)
81007e9f:	e8 dc f1 ff ff       	call   81007080 <memmove>
81007ea4:	83 c4 10             	add    $0x10,%esp
81007ea7:	e9 f9 02 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81007eac:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81007eb0:	0f 84 5b 01 00 00    	je     81008011 <_realloc_r+0x697>
81007eb6:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007eb9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ebc:	01 d0                	add    %edx,%eax
81007ebe:	89 c2                	mov    %eax,%edx
81007ec0:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007ec3:	39 c2                	cmp    %eax,%edx
81007ec5:	0f 8c 46 01 00 00    	jl     81008011 <_realloc_r+0x697>
81007ecb:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ece:	8b 40 0c             	mov    0xc(%eax),%eax
81007ed1:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007ed4:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ed7:	8b 40 08             	mov    0x8(%eax),%eax
81007eda:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007edd:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007ee0:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007ee3:	89 50 0c             	mov    %edx,0xc(%eax)
81007ee6:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007ee9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007eec:	89 50 08             	mov    %edx,0x8(%eax)
81007eef:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ef2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007ef5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007ef8:	01 45 f0             	add    %eax,-0x10(%ebp)
81007efb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007efe:	83 c0 08             	add    $0x8,%eax
81007f01:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007f04:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007f07:	83 e8 04             	sub    $0x4,%eax
81007f0a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81007f0d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81007f11:	0f 87 e1 00 00 00    	ja     81007ff8 <_realloc_r+0x67e>
81007f17:	8b 45 0c             	mov    0xc(%ebp),%eax
81007f1a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f1d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007f20:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007f23:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007f27:	0f 86 90 00 00 00    	jbe    81007fbd <_realloc_r+0x643>
81007f2d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f30:	8d 42 04             	lea    0x4(%edx),%eax
81007f33:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f39:	8d 48 04             	lea    0x4(%eax),%ecx
81007f3c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f3f:	8b 12                	mov    (%edx),%edx
81007f41:	89 10                	mov    %edx,(%eax)
81007f43:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f46:	8d 42 04             	lea    0x4(%edx),%eax
81007f49:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f4c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f4f:	8d 48 04             	lea    0x4(%eax),%ecx
81007f52:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f55:	8b 12                	mov    (%edx),%edx
81007f57:	89 10                	mov    %edx,(%eax)
81007f59:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81007f5d:	76 5e                	jbe    81007fbd <_realloc_r+0x643>
81007f5f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f62:	8d 42 04             	lea    0x4(%edx),%eax
81007f65:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f68:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f6b:	8d 48 04             	lea    0x4(%eax),%ecx
81007f6e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f71:	8b 12                	mov    (%edx),%edx
81007f73:	89 10                	mov    %edx,(%eax)
81007f75:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f78:	8d 42 04             	lea    0x4(%edx),%eax
81007f7b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f81:	8d 48 04             	lea    0x4(%eax),%ecx
81007f84:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f87:	8b 12                	mov    (%edx),%edx
81007f89:	89 10                	mov    %edx,(%eax)
81007f8b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81007f8f:	76 2c                	jbe    81007fbd <_realloc_r+0x643>
81007f91:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f94:	8d 42 04             	lea    0x4(%edx),%eax
81007f97:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f9a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f9d:	8d 48 04             	lea    0x4(%eax),%ecx
81007fa0:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fa3:	8b 12                	mov    (%edx),%edx
81007fa5:	89 10                	mov    %edx,(%eax)
81007fa7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007faa:	8d 42 04             	lea    0x4(%edx),%eax
81007fad:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fb0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fb3:	8d 48 04             	lea    0x4(%eax),%ecx
81007fb6:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fb9:	8b 12                	mov    (%edx),%edx
81007fbb:	89 10                	mov    %edx,(%eax)
81007fbd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007fc0:	8d 42 04             	lea    0x4(%edx),%eax
81007fc3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fc6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fc9:	8d 48 04             	lea    0x4(%eax),%ecx
81007fcc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fcf:	8b 12                	mov    (%edx),%edx
81007fd1:	89 10                	mov    %edx,(%eax)
81007fd3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007fd6:	8d 42 04             	lea    0x4(%edx),%eax
81007fd9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007fdc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007fdf:	8d 48 04             	lea    0x4(%eax),%ecx
81007fe2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007fe5:	8b 12                	mov    (%edx),%edx
81007fe7:	89 10                	mov    %edx,(%eax)
81007fe9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007fec:	8b 10                	mov    (%eax),%edx
81007fee:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007ff1:	89 10                	mov    %edx,(%eax)
81007ff3:	e9 ad 01 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81007ff8:	83 ec 04             	sub    $0x4,%esp
81007ffb:	ff 75 9c             	push   -0x64(%ebp)
81007ffe:	ff 75 0c             	push   0xc(%ebp)
81008001:	ff 75 a8             	push   -0x58(%ebp)
81008004:	e8 77 f0 ff ff       	call   81007080 <memmove>
81008009:	83 c4 10             	add    $0x10,%esp
8100800c:	e9 94 01 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81008011:	83 ec 08             	sub    $0x8,%esp
81008014:	ff 75 10             	push   0x10(%ebp)
81008017:	ff 75 08             	push   0x8(%ebp)
8100801a:	e8 95 bb ff ff       	call   81003bb4 <_malloc_r>
8100801f:	83 c4 10             	add    $0x10,%esp
81008022:	89 45 a8             	mov    %eax,-0x58(%ebp)
81008025:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81008029:	75 18                	jne    81008043 <_realloc_r+0x6c9>
8100802b:	83 ec 0c             	sub    $0xc,%esp
8100802e:	ff 75 08             	push   0x8(%ebp)
81008031:	e8 68 c5 ff ff       	call   8100459e <__malloc_unlock>
81008036:	83 c4 10             	add    $0x10,%esp
81008039:	b8 00 00 00 00       	mov    $0x0,%eax
8100803e:	e9 0f 02 00 00       	jmp    81008252 <_realloc_r+0x8d8>
81008043:	8b 45 a8             	mov    -0x58(%ebp),%eax
81008046:	83 e8 08             	sub    $0x8,%eax
81008049:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100804c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100804f:	8b 40 04             	mov    0x4(%eax),%eax
81008052:	83 e0 fe             	and    $0xfffffffe,%eax
81008055:	89 c2                	mov    %eax,%edx
81008057:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100805a:	01 d0                	add    %edx,%eax
8100805c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100805f:	75 17                	jne    81008078 <_realloc_r+0x6fe>
81008061:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008064:	8b 40 04             	mov    0x4(%eax),%eax
81008067:	83 e0 fc             	and    $0xfffffffc,%eax
8100806a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100806d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81008070:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008073:	e9 2d 01 00 00       	jmp    810081a5 <_realloc_r+0x82b>
81008078:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100807b:	83 e8 04             	sub    $0x4,%eax
8100807e:	89 45 98             	mov    %eax,-0x68(%ebp)
81008081:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81008085:	0f 87 de 00 00 00    	ja     81008169 <_realloc_r+0x7ef>
8100808b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100808e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008091:	8b 45 a8             	mov    -0x58(%ebp),%eax
81008094:	89 45 c8             	mov    %eax,-0x38(%ebp)
81008097:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100809b:	0f 86 90 00 00 00    	jbe    81008131 <_realloc_r+0x7b7>
810080a1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080a4:	8d 42 04             	lea    0x4(%edx),%eax
810080a7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080aa:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080ad:	8d 48 04             	lea    0x4(%eax),%ecx
810080b0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080b3:	8b 12                	mov    (%edx),%edx
810080b5:	89 10                	mov    %edx,(%eax)
810080b7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080ba:	8d 42 04             	lea    0x4(%edx),%eax
810080bd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080c0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080c3:	8d 48 04             	lea    0x4(%eax),%ecx
810080c6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080c9:	8b 12                	mov    (%edx),%edx
810080cb:	89 10                	mov    %edx,(%eax)
810080cd:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810080d1:	76 5e                	jbe    81008131 <_realloc_r+0x7b7>
810080d3:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080d6:	8d 42 04             	lea    0x4(%edx),%eax
810080d9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080dc:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080df:	8d 48 04             	lea    0x4(%eax),%ecx
810080e2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080e5:	8b 12                	mov    (%edx),%edx
810080e7:	89 10                	mov    %edx,(%eax)
810080e9:	8b 55 cc             	mov    -0x34(%ebp),%edx
810080ec:	8d 42 04             	lea    0x4(%edx),%eax
810080ef:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080f2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080f5:	8d 48 04             	lea    0x4(%eax),%ecx
810080f8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080fb:	8b 12                	mov    (%edx),%edx
810080fd:	89 10                	mov    %edx,(%eax)
810080ff:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81008103:	76 2c                	jbe    81008131 <_realloc_r+0x7b7>
81008105:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008108:	8d 42 04             	lea    0x4(%edx),%eax
8100810b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100810e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008111:	8d 48 04             	lea    0x4(%eax),%ecx
81008114:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008117:	8b 12                	mov    (%edx),%edx
81008119:	89 10                	mov    %edx,(%eax)
8100811b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100811e:	8d 42 04             	lea    0x4(%edx),%eax
81008121:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008124:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008127:	8d 48 04             	lea    0x4(%eax),%ecx
8100812a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100812d:	8b 12                	mov    (%edx),%edx
8100812f:	89 10                	mov    %edx,(%eax)
81008131:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008134:	8d 42 04             	lea    0x4(%edx),%eax
81008137:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100813a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100813d:	8d 48 04             	lea    0x4(%eax),%ecx
81008140:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008143:	8b 12                	mov    (%edx),%edx
81008145:	89 10                	mov    %edx,(%eax)
81008147:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100814a:	8d 42 04             	lea    0x4(%edx),%eax
8100814d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008150:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008153:	8d 48 04             	lea    0x4(%eax),%ecx
81008156:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008159:	8b 12                	mov    (%edx),%edx
8100815b:	89 10                	mov    %edx,(%eax)
8100815d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81008160:	8b 10                	mov    (%eax),%edx
81008162:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008165:	89 10                	mov    %edx,(%eax)
81008167:	eb 14                	jmp    8100817d <_realloc_r+0x803>
81008169:	83 ec 04             	sub    $0x4,%esp
8100816c:	ff 75 98             	push   -0x68(%ebp)
8100816f:	ff 75 0c             	push   0xc(%ebp)
81008172:	ff 75 a8             	push   -0x58(%ebp)
81008175:	e8 06 ef ff ff       	call   81007080 <memmove>
8100817a:	83 c4 10             	add    $0x10,%esp
8100817d:	83 ec 08             	sub    $0x8,%esp
81008180:	ff 75 0c             	push   0xc(%ebp)
81008183:	ff 75 08             	push   0x8(%ebp)
81008186:	e8 66 9b ff ff       	call   81001cf1 <_free_r>
8100818b:	83 c4 10             	add    $0x10,%esp
8100818e:	83 ec 0c             	sub    $0xc,%esp
81008191:	ff 75 08             	push   0x8(%ebp)
81008194:	e8 05 c4 ff ff       	call   8100459e <__malloc_unlock>
81008199:	83 c4 10             	add    $0x10,%esp
8100819c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100819f:	e9 ae 00 00 00       	jmp    81008252 <_realloc_r+0x8d8>
810081a4:	90                   	nop
810081a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810081a8:	2b 45 bc             	sub    -0x44(%ebp),%eax
810081ab:	89 45 94             	mov    %eax,-0x6c(%ebp)
810081ae:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810081b2:	76 5d                	jbe    81008211 <_realloc_r+0x897>
810081b4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810081b7:	8b 45 bc             	mov    -0x44(%ebp),%eax
810081ba:	01 d0                	add    %edx,%eax
810081bc:	89 45 90             	mov    %eax,-0x70(%ebp)
810081bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081c2:	8b 40 04             	mov    0x4(%eax),%eax
810081c5:	83 e0 01             	and    $0x1,%eax
810081c8:	0b 45 bc             	or     -0x44(%ebp),%eax
810081cb:	89 c2                	mov    %eax,%edx
810081cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081d0:	89 50 04             	mov    %edx,0x4(%eax)
810081d3:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081d6:	83 c8 01             	or     $0x1,%eax
810081d9:	89 c2                	mov    %eax,%edx
810081db:	8b 45 90             	mov    -0x70(%ebp),%eax
810081de:	89 50 04             	mov    %edx,0x4(%eax)
810081e1:	8b 55 90             	mov    -0x70(%ebp),%edx
810081e4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081e7:	01 d0                	add    %edx,%eax
810081e9:	8b 50 04             	mov    0x4(%eax),%edx
810081ec:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810081ef:	8b 45 94             	mov    -0x6c(%ebp),%eax
810081f2:	01 c8                	add    %ecx,%eax
810081f4:	83 ca 01             	or     $0x1,%edx
810081f7:	89 50 04             	mov    %edx,0x4(%eax)
810081fa:	8b 45 90             	mov    -0x70(%ebp),%eax
810081fd:	83 c0 08             	add    $0x8,%eax
81008200:	83 ec 08             	sub    $0x8,%esp
81008203:	50                   	push   %eax
81008204:	ff 75 08             	push   0x8(%ebp)
81008207:	e8 e5 9a ff ff       	call   81001cf1 <_free_r>
8100820c:	83 c4 10             	add    $0x10,%esp
8100820f:	eb 2d                	jmp    8100823e <_realloc_r+0x8c4>
81008211:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008214:	8b 40 04             	mov    0x4(%eax),%eax
81008217:	83 e0 01             	and    $0x1,%eax
8100821a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100821d:	89 c2                	mov    %eax,%edx
8100821f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008222:	89 50 04             	mov    %edx,0x4(%eax)
81008225:	8b 55 f4             	mov    -0xc(%ebp),%edx
81008228:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100822b:	01 d0                	add    %edx,%eax
8100822d:	8b 50 04             	mov    0x4(%eax),%edx
81008230:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81008233:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008236:	01 c8                	add    %ecx,%eax
81008238:	83 ca 01             	or     $0x1,%edx
8100823b:	89 50 04             	mov    %edx,0x4(%eax)
8100823e:	83 ec 0c             	sub    $0xc,%esp
81008241:	ff 75 08             	push   0x8(%ebp)
81008244:	e8 55 c3 ff ff       	call   8100459e <__malloc_unlock>
81008249:	83 c4 10             	add    $0x10,%esp
8100824c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100824f:	83 c0 08             	add    $0x8,%eax
81008252:	c9                   	leave  
81008253:	c3                   	ret    

81008254 <__srget_r>:
81008254:	55                   	push   %ebp
81008255:	89 e5                	mov    %esp,%ebp
81008257:	53                   	push   %ebx
81008258:	83 ec 14             	sub    $0x14,%esp
8100825b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100825e:	8b 45 08             	mov    0x8(%ebp),%eax
81008261:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81008268:	74 18                	je     81008282 <__srget_r+0x2e>
8100826a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100826d:	8b 40 38             	mov    0x38(%eax),%eax
81008270:	85 c0                	test   %eax,%eax
81008272:	75 0e                	jne    81008282 <__srget_r+0x2e>
81008274:	83 ec 0c             	sub    $0xc,%esp
81008277:	ff 75 f4             	push   -0xc(%ebp)
8100827a:	e8 82 95 ff ff       	call   81001801 <__sinit>
8100827f:	83 c4 10             	add    $0x10,%esp
81008282:	83 ec 08             	sub    $0x8,%esp
81008285:	53                   	push   %ebx
81008286:	ff 75 08             	push   0x8(%ebp)
81008289:	e8 c3 d1 ff ff       	call   81005451 <__srefill_r>
8100828e:	83 c4 10             	add    $0x10,%esp
81008291:	85 c0                	test   %eax,%eax
81008293:	75 18                	jne    810082ad <__srget_r+0x59>
81008295:	8b 43 04             	mov    0x4(%ebx),%eax
81008298:	83 e8 01             	sub    $0x1,%eax
8100829b:	89 43 04             	mov    %eax,0x4(%ebx)
8100829e:	8b 03                	mov    (%ebx),%eax
810082a0:	8d 50 01             	lea    0x1(%eax),%edx
810082a3:	89 13                	mov    %edx,(%ebx)
810082a5:	0f b6 00             	movzbl (%eax),%eax
810082a8:	0f b6 c0             	movzbl %al,%eax
810082ab:	eb 05                	jmp    810082b2 <__srget_r+0x5e>
810082ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810082b2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810082b5:	c9                   	leave  
810082b6:	c3                   	ret    

810082b7 <__srget>:
810082b7:	55                   	push   %ebp
810082b8:	89 e5                	mov    %esp,%ebp
810082ba:	83 ec 08             	sub    $0x8,%esp
810082bd:	8b 55 08             	mov    0x8(%ebp),%edx
810082c0:	a1 64 91 00 81       	mov    0x81009164,%eax
810082c5:	83 ec 08             	sub    $0x8,%esp
810082c8:	52                   	push   %edx
810082c9:	50                   	push   %eax
810082ca:	e8 85 ff ff ff       	call   81008254 <__srget_r>
810082cf:	83 c4 10             	add    $0x10,%esp
810082d2:	c9                   	leave  
810082d3:	c3                   	ret    

810082d4 <strncmp>:
810082d4:	55                   	push   %ebp
810082d5:	89 e5                	mov    %esp,%ebp
810082d7:	83 ec 10             	sub    $0x10,%esp
810082da:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082de:	75 0a                	jne    810082ea <strncmp+0x16>
810082e0:	b8 00 00 00 00       	mov    $0x0,%eax
810082e5:	e9 cb 00 00 00       	jmp    810083b5 <strncmp+0xe1>
810082ea:	8b 55 08             	mov    0x8(%ebp),%edx
810082ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810082f0:	09 d0                	or     %edx,%eax
810082f2:	83 e0 03             	and    $0x3,%eax
810082f5:	85 c0                	test   %eax,%eax
810082f7:	0f 85 85 00 00 00    	jne    81008382 <strncmp+0xae>
810082fd:	8b 45 08             	mov    0x8(%ebp),%eax
81008300:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008303:	8b 45 0c             	mov    0xc(%ebp),%eax
81008306:	89 45 f8             	mov    %eax,-0x8(%ebp)
81008309:	eb 36                	jmp    81008341 <strncmp+0x6d>
8100830b:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
8100830f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008313:	74 1d                	je     81008332 <strncmp+0x5e>
81008315:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008318:	8b 00                	mov    (%eax),%eax
8100831a:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008320:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008323:	8b 00                	mov    (%eax),%eax
81008325:	f7 d0                	not    %eax
81008327:	21 d0                	and    %edx,%eax
81008329:	25 80 80 80 80       	and    $0x80808080,%eax
8100832e:	85 c0                	test   %eax,%eax
81008330:	74 07                	je     81008339 <strncmp+0x65>
81008332:	b8 00 00 00 00       	mov    $0x0,%eax
81008337:	eb 7c                	jmp    810083b5 <strncmp+0xe1>
81008339:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100833d:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008341:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008345:	76 0e                	jbe    81008355 <strncmp+0x81>
81008347:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100834a:	8b 10                	mov    (%eax),%edx
8100834c:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100834f:	8b 00                	mov    (%eax),%eax
81008351:	39 c2                	cmp    %eax,%edx
81008353:	74 b6                	je     8100830b <strncmp+0x37>
81008355:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008358:	89 45 08             	mov    %eax,0x8(%ebp)
8100835b:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100835e:	89 45 0c             	mov    %eax,0xc(%ebp)
81008361:	eb 1f                	jmp    81008382 <strncmp+0xae>
81008363:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008367:	74 0a                	je     81008373 <strncmp+0x9f>
81008369:	8b 45 08             	mov    0x8(%ebp),%eax
8100836c:	0f b6 00             	movzbl (%eax),%eax
8100836f:	84 c0                	test   %al,%al
81008371:	75 07                	jne    8100837a <strncmp+0xa6>
81008373:	b8 00 00 00 00       	mov    $0x0,%eax
81008378:	eb 3b                	jmp    810083b5 <strncmp+0xe1>
8100837a:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100837e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81008382:	8b 45 10             	mov    0x10(%ebp),%eax
81008385:	8d 50 ff             	lea    -0x1(%eax),%edx
81008388:	89 55 10             	mov    %edx,0x10(%ebp)
8100838b:	85 c0                	test   %eax,%eax
8100838d:	74 10                	je     8100839f <strncmp+0xcb>
8100838f:	8b 45 08             	mov    0x8(%ebp),%eax
81008392:	0f b6 10             	movzbl (%eax),%edx
81008395:	8b 45 0c             	mov    0xc(%ebp),%eax
81008398:	0f b6 00             	movzbl (%eax),%eax
8100839b:	38 c2                	cmp    %al,%dl
8100839d:	74 c4                	je     81008363 <strncmp+0x8f>
8100839f:	8b 45 08             	mov    0x8(%ebp),%eax
810083a2:	0f b6 00             	movzbl (%eax),%eax
810083a5:	0f b6 d0             	movzbl %al,%edx
810083a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810083ab:	0f b6 00             	movzbl (%eax),%eax
810083ae:	0f b6 c8             	movzbl %al,%ecx
810083b1:	89 d0                	mov    %edx,%eax
810083b3:	29 c8                	sub    %ecx,%eax
810083b5:	c9                   	leave  
810083b6:	c3                   	ret    

810083b7 <__get_global_locale>:
810083b7:	55                   	push   %ebp
810083b8:	89 e5                	mov    %esp,%ebp
810083ba:	b8 a0 95 00 81       	mov    $0x810095a0,%eax
810083bf:	5d                   	pop    %ebp
810083c0:	c3                   	ret    

810083c1 <__get_current_locale>:
810083c1:	55                   	push   %ebp
810083c2:	89 e5                	mov    %esp,%ebp
810083c4:	e8 ee ff ff ff       	call   810083b7 <__get_global_locale>
810083c9:	5d                   	pop    %ebp
810083ca:	c3                   	ret    

810083cb <_wcrtomb_r>:
810083cb:	55                   	push   %ebp
810083cc:	89 e5                	mov    %esp,%ebp
810083ce:	83 ec 18             	sub    $0x18,%esp
810083d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083d8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083dc:	75 21                	jne    810083ff <_wcrtomb_r+0x34>
810083de:	e8 de ff ff ff       	call   810083c1 <__get_current_locale>
810083e3:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083e9:	ff 75 14             	push   0x14(%ebp)
810083ec:	6a 00                	push   $0x0
810083ee:	8d 55 ea             	lea    -0x16(%ebp),%edx
810083f1:	52                   	push   %edx
810083f2:	ff 75 08             	push   0x8(%ebp)
810083f5:	ff d0                	call   *%eax
810083f7:	83 c4 10             	add    $0x10,%esp
810083fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083fd:	eb 1f                	jmp    8100841e <_wcrtomb_r+0x53>
810083ff:	e8 bd ff ff ff       	call   810083c1 <__get_current_locale>
81008404:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100840a:	ff 75 14             	push   0x14(%ebp)
8100840d:	ff 75 10             	push   0x10(%ebp)
81008410:	ff 75 0c             	push   0xc(%ebp)
81008413:	ff 75 08             	push   0x8(%ebp)
81008416:	ff d0                	call   *%eax
81008418:	83 c4 10             	add    $0x10,%esp
8100841b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100841e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008422:	75 19                	jne    8100843d <_wcrtomb_r+0x72>
81008424:	8b 45 14             	mov    0x14(%ebp),%eax
81008427:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100842d:	8b 45 08             	mov    0x8(%ebp),%eax
81008430:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008436:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100843b:	eb 03                	jmp    81008440 <_wcrtomb_r+0x75>
8100843d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008440:	c9                   	leave  
81008441:	c3                   	ret    

81008442 <wcrtomb>:
81008442:	55                   	push   %ebp
81008443:	89 e5                	mov    %esp,%ebp
81008445:	83 ec 28             	sub    $0x28,%esp
81008448:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100844f:	a1 64 91 00 81       	mov    0x81009164,%eax
81008454:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008457:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100845b:	75 21                	jne    8100847e <wcrtomb+0x3c>
8100845d:	e8 5f ff ff ff       	call   810083c1 <__get_current_locale>
81008462:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008468:	ff 75 10             	push   0x10(%ebp)
8100846b:	6a 00                	push   $0x0
8100846d:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008470:	52                   	push   %edx
81008471:	ff 75 f0             	push   -0x10(%ebp)
81008474:	ff d0                	call   *%eax
81008476:	83 c4 10             	add    $0x10,%esp
81008479:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100847c:	eb 1f                	jmp    8100849d <wcrtomb+0x5b>
8100847e:	e8 3e ff ff ff       	call   810083c1 <__get_current_locale>
81008483:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008489:	ff 75 10             	push   0x10(%ebp)
8100848c:	ff 75 0c             	push   0xc(%ebp)
8100848f:	ff 75 08             	push   0x8(%ebp)
81008492:	ff 75 f0             	push   -0x10(%ebp)
81008495:	ff d0                	call   *%eax
81008497:	83 c4 10             	add    $0x10,%esp
8100849a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100849d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810084a1:	75 19                	jne    810084bc <wcrtomb+0x7a>
810084a3:	8b 45 10             	mov    0x10(%ebp),%eax
810084a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810084ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810084af:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810084b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810084ba:	eb 03                	jmp    810084bf <wcrtomb+0x7d>
810084bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084bf:	c9                   	leave  
810084c0:	c3                   	ret    

810084c1 <__get_global_locale>:
810084c1:	55                   	push   %ebp
810084c2:	89 e5                	mov    %esp,%ebp
810084c4:	b8 a0 95 00 81       	mov    $0x810095a0,%eax
810084c9:	5d                   	pop    %ebp
810084ca:	c3                   	ret    

810084cb <__get_current_locale>:
810084cb:	55                   	push   %ebp
810084cc:	89 e5                	mov    %esp,%ebp
810084ce:	e8 ee ff ff ff       	call   810084c1 <__get_global_locale>
810084d3:	5d                   	pop    %ebp
810084d4:	c3                   	ret    

810084d5 <_wctomb_r>:
810084d5:	55                   	push   %ebp
810084d6:	89 e5                	mov    %esp,%ebp
810084d8:	83 ec 08             	sub    $0x8,%esp
810084db:	e8 eb ff ff ff       	call   810084cb <__get_current_locale>
810084e0:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084e6:	ff 75 14             	push   0x14(%ebp)
810084e9:	ff 75 10             	push   0x10(%ebp)
810084ec:	ff 75 0c             	push   0xc(%ebp)
810084ef:	ff 75 08             	push   0x8(%ebp)
810084f2:	ff d0                	call   *%eax
810084f4:	83 c4 10             	add    $0x10,%esp
810084f7:	c9                   	leave  
810084f8:	c3                   	ret    

810084f9 <__ascii_wctomb>:
810084f9:	55                   	push   %ebp
810084fa:	89 e5                	mov    %esp,%ebp
810084fc:	83 ec 10             	sub    $0x10,%esp
810084ff:	8b 45 10             	mov    0x10(%ebp),%eax
81008502:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008505:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81008509:	75 07                	jne    81008512 <__ascii_wctomb+0x19>
8100850b:	b8 00 00 00 00       	mov    $0x0,%eax
81008510:	eb 28                	jmp    8100853a <__ascii_wctomb+0x41>
81008512:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81008519:	76 10                	jbe    8100852b <__ascii_wctomb+0x32>
8100851b:	8b 45 08             	mov    0x8(%ebp),%eax
8100851e:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008524:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008529:	eb 0f                	jmp    8100853a <__ascii_wctomb+0x41>
8100852b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100852e:	89 c2                	mov    %eax,%edx
81008530:	8b 45 0c             	mov    0xc(%ebp),%eax
81008533:	88 10                	mov    %dl,(%eax)
81008535:	b8 01 00 00 00       	mov    $0x1,%eax
8100853a:	c9                   	leave  
8100853b:	c3                   	ret    

8100853c <__env_lock>:
8100853c:	55                   	push   %ebp
8100853d:	89 e5                	mov    %esp,%ebp
8100853f:	90                   	nop
81008540:	5d                   	pop    %ebp
81008541:	c3                   	ret    

81008542 <__env_unlock>:
81008542:	55                   	push   %ebp
81008543:	89 e5                	mov    %esp,%ebp
81008545:	90                   	nop
81008546:	5d                   	pop    %ebp
81008547:	c3                   	ret    
