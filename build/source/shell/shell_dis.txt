
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000628

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007b50 memsz 0x00008200 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006aef  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000064c  81006b00  81006b00  00007b00  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007160  81007160  00008160  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81007b60  81007b60  00008b50  2**5
                  ALLOC
  4 .debug_info   00022bbb  00000000  00000000  00008b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00007d58  00000000  00000000  0002b70b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000828  00000000  00000000  00033468  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00004cf8  00000000  00000000  00033c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001618  00000000  00000000  00038988  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000014c3  00000000  00000000  00039fa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0003b463  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001a3c  00000000  00000000  0003b4a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0003cedc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007b60 l     O .bss	00000200 cmd_buf
81007160 l     O .data	00000004 prompt
81007d60 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	0000008e do_ls
81006ca0 l     O .rodata	0000003c cmd_list
810002d9 l     F .text	0000003e cli_init
81000317 l     F .text	00000033 show_prompt
8100034a l     F .text	00000043 find_builtin
8100038d l     F .text	00000049 run_builtin
810003d6 l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000eb7 l     F .text	000000ad std
81000f64 l     F .text	0000001b stdin_init
81000f7f l     F .text	0000001b stdout_init
81000f9a l     F .text	0000001b stderr_init
8100816c l     O .bss	00000004 __sfp_recursive_mutex
81008170 l     O .bss	00000004 __sinit_recursive_mutex
8100125d l     F .text	0000000a __fp_lock
81001267 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
8100817c l     O .bss	00000004 optwhere
81008180 l     O .bss	00000004 permute_from
81008184 l     O .bss	00000004 num_nonopts
810019fa l     F .text	0000007b reverse_argv_elements
81001a75 l     F .text	00000036 permute
81001aab l     F .text	00000031 is_option
81001adc l     F .text	00000059 read_globals
81001b35 l     F .text	00000052 write_globals
81001b87 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007180 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
8100282b l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100336d l       .text	00000000 L20
81003324 l       .text	00000000 L5
8100336a l       .text	00000000 L15
81003330 l       .text	00000000 L8
81003351 l       .text	00000000 L9
81003360 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810033bf l       .text	00000000 L4
810033b1 l       .text	00000000 BYTECMP
810033ac l       .text	00000000 L5
810033b3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
810081e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003580 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81004147 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100457b l       .text	00000000 L25
81004522 l       .text	00000000 L5
8100456e l       .text	00000000 L14
81004574 l       .text	00000000 L19
81004533 l       .text	00000000 L10
81004560 l       .text	00000000 L9
81004563 l       .text	00000000 L15
810045ae l       .text	00000000 L26
810045b1 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810046b6 l       .text	00000000 L5
810046ee l       .text	00000000 L15
810046c0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
810047fc l     F .text	0000000a __locale_ctype_ptr_l
81004806 l     F .text	0000000a __get_global_locale
81004810 l     F .text	0000000a __get_current_locale
8100481a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
810081ec l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
8100510f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810079d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
810058ac l     F .text	0000000a __get_global_locale
810058b6 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005b18 l     F .text	0000000a __get_global_locale
81005b22 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81005c3d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810068db l     F .text	0000000a __get_global_locale
810068e5 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810069e5 l     F .text	0000000a __get_global_locale
810069ef l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
810081f8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
810081fc l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81006aaf g     F .text	00000040 _isatty_r
81006661 g     F .text	00000037 cleanup_glue
81004055 g     F .text	000000d6 _puts_r
81005952 g     F .text	00000046 _lseek_r
81000777 g     F .text	0000001b yield
810047e2 g     F .text	0000001a strtok_r
81004020 g     F .text	00000035 printf
810068ef g     F .text	00000077 _wcrtomb_r
8100445e g     F .text	0000004a __sseek
810011ac g     F .text	00000099 __sinit
81004a5f g     F .text	00000112 __swbuf_r
810058c0 g     F .text	0000005f _setlocale_r
81000fb5 g     F .text	0000006f __sfmoreglue
8100349e g     F .text	00000006 __malloc_unlock
81005bb0 g       .text	00000000 memmove
810026e3 g     F .text	00000049 getopt_long
81001192 g     F .text	0000001a _cleanup
81004722 g     F .text	000000c0 __strtok_r
81004e88 g     F .text	0000000a __errno
81005782 g     F .text	00000020 getenv
81006a6c g     F .text	00000043 _fstat_r
810081f4 g     O .bss	00000004 errno
810043f9 g     F .text	0000000a __seofread
8100074a g     F .text	0000002d execve
810006ec g     F .text	0000001b getpid
81000e98 g     F .text	0000001f fgets
810033c8 g       .text	00000000 memcpy
81001171 g     F .text	00000021 _cleanup_r
8100412b g     F .text	0000001c puts
810027f2 g     F .text	0000001c malloc
81003ff3 g     F .text	0000002d _printf_r
81000861 g     F .text	00000021 isatty
810027e8 g     F .text	0000000a __getreent
81008174 g     O .bss	00000004 optarg
810081a0 g     O .bss	00000004 __malloc_top_pad
81007b60 g       .bss	00000000 __bss_start__
810052c4 g     F .text	0000049e __sfvwrite_r
81004375 g     F .text	00000040 _sbrk_r
81007164 g     O .data	00000004 opterr
81000996 g     F .text	00000040 readdir
81005d41 g     F .text	00000046 _read_r
81004e92 g     F .text	00000107 _fclose_r
81000d01 g     F .text	00000039 fflush
810081a4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000834 g     F .text	0000002d lseek
81006dec g     O .rodata	00000004 _global_impure_ptr
81005d87 g     F .text	000008da _realloc_r
81004a11 g     F .text	00000025 strtol_l
81005225 g     F .text	00000057 _fputwc_r
81001271 g     F .text	00000024 __fp_lock_all
81004a36 g     F .text	00000029 strtol
81006698 g     F .text	00000160 _reclaim_reent
81004fb6 g     F .text	00000046 _fputc_r
810007e6 g     F .text	0000002d write
81005ca3 g     F .text	0000004b _putc_r
81007b4c g     O .data	00000004 environ
81000882 g     F .text	00000027 fstat
810012e2 g     F .text	0000002c fprintf
810027c1 g     F .text	00000027 __getopt_long_only_r
81000a25 g     F .text	0000001a _atoi_r
81000676 g     F .text	0000004c sys_call
810035e6 g     F .text	000000a8 __sfputs_r
81008178 g     O .bss	00000004 optind
81001245 g     F .text	00000006 __sfp_lock_acquire
810032e0 g       .text	00000000 memchr
81008200 g       .bss	00000000 __bss_end__
8100130e g     F .text	000003db _free_r
8100090d g     F .text	00000021 wait
81006ec0 g     O .rodata	00000180 _ctype_b
8100591f g     F .text	00000014 __locale_mb_cur_max
81004d33 g     F .text	00000115 __call_exitprocs
810079cc g     O .data	00000004 __malloc_sbrk_base
81000628 g       .text	00000000 _start
810007b9 g     F .text	0000002d read
810067f8 g     F .text	000000e3 strncmp
8100279a g     F .text	00000027 __getopt_long_r
810081c0 g     O .bss	00000028 __malloc_current_mallinfo
81003ff3 g     F .text	0000002d _iprintf_r
81004e48 g     F .text	00000040 _close_r
810046f9 g     F .text	00000029 strtok
81003375 g       .text	00000000 memcmp
8100191d g     F .text	000000b8 _fwrite_r
8100072f g     F .text	0000001b fork
81004bd8 g     F .text	0000015b __swsetup_r
81001024 g     F .text	0000014d __sfp
810075c0 g     O .data	00000408 __malloc_av_
81001257 g     F .text	00000006 __sinit_lock_release
810043b5 g     F .text	00000044 __sread
81003498 g     F .text	00000006 __malloc_lock
810012b9 g     F .text	00000029 _fprintf_r
810008a9 g     F .text	00000021 sbrk
81000ca9 g     F .text	00000058 _fflush_r
81000638 g     F .text	0000003e cstart
8100269c g     F .text	00000047 getopt
81003410 g       .text	00000000 memset
81000494 g     F .text	00000194 main
810081a8 g     O .bss	00000004 __malloc_max_total_mem
81004b71 g     F .text	00000021 __swbuf
810044a8 g     F .text	00000025 __sclose
81004f99 g     F .text	0000001d fclose
810049ec g     F .text	00000025 _strtol_r
810057a2 g     F .text	000000ed _findenv_r
81002abe g     F .text	00000822 _malloc_r
81006a1d g     F .text	00000043 __ascii_wctomb
8100092e g     F .text	00000068 opendir
810012b9 g     F .text	00000029 _fiprintf_r
81006a66 g     F .text	00000006 __env_unlock
81005762 g     F .text	00000020 _findenv
8100184a g     F .text	00000068 _fwalk
81000d3a g     F .text	0000015e _fgets_r
81005b2c g     F .text	0000002a _mbtowc_r
81005cee g     F .text	00000053 putc
8100272c g     F .text	00000049 getopt_long_only
810016e9 g     F .text	00000161 _malloc_trim_r
810045cc g     F .text	000000a5 strcmp
8100368e g     F .text	00000025 vfiprintf
810008ca g     F .text	00000021 dup
81004020 g     F .text	00000035 iprintf
810081f0 g     O .bss	00000004 _PathLocale
81004b92 g     F .text	00000046 _write_r
81005933 g     F .text	0000001f setlocale
81003a09 g     F .text	0000019b _printf_common
810075a4 g     O .data	00000004 _impure_ptr
81000a83 g     F .text	00000226 __sflush_r
81004174 g     F .text	00000201 __srefill_r
81005b56 g     F .text	00000058 __ascii_mbtowc
81001295 g     F .text	00000024 __fp_unlock_all
81004ffc g     F .text	0000004e fputc
81000707 g     F .text	00000028 print_msg
81007168 g     O .data	00000004 optopt
81005a85 g     F .text	00000093 __swhatbuf_r
810019d5 g     F .text	00000025 fwrite
81005175 g     F .text	000000b0 __fputwc
8100504a g     F .text	000000a6 _fputs_r
81004403 g     F .text	0000005b __swrite
810079c8 g     O .data	00000004 __malloc_trim_threshold
81000a3f g     F .text	00000044 exit
810012e2 g     F .text	0000002c fiprintf
810036b3 g     F .text	00000356 _vfiprintf_r
810018b2 g     F .text	0000006b _fwalk_reent
8100124b g     F .text	00000006 __sfp_lock_release
81000a0b g     F .text	0000001a atoi
81007040 g     O .rodata	00000101 _ctype_
81002775 g     F .text	00000025 __getopt_r
810008eb g     F .text	00000022 _exit
81005998 g     F .text	000000ed __smakebuf_r
81004680 g       .text	00000000 strlen
81003ba4 g     F .text	0000044f _printf_i
81000792 g     F .text	00000027 open
810034a4 g     F .text	000000dc __sprint_r
810044d0 g       .text	00000000 strchr
810050f0 g     F .text	0000001f fputs
810009d6 g     F .text	00000035 closedir
810069f9 g     F .text	00000024 _wctomb_r
81006a60 g     F .text	00000006 __env_lock
810036b3 g     F .text	00000356 _vfprintf_r
810006c2 g     F .text	0000002a msleep
81006966 g     F .text	0000007f wcrtomb
81000813 g     F .text	00000021 close
810079e0 g     O .data	0000016c __global_locale
8100368e g     F .text	00000025 vfprintf
8100527c g     F .text	00000048 fputwc
8100280e g     F .text	0000001d free
81001251 g     F .text	00000006 __sinit_lock_acquire
8100588f g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 60 81 00 81       	mov    0x81008160,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 6b 00 81       	push   $0x81006b06
81000025:	e8 f6 3f 00 00       	call   81004020 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 64 81 00 81       	mov    0x81008164,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 11 6b 00 81       	push   $0x81006b11
81000050:	68 16 6b 00 81       	push   $0x81006b16
81000055:	e8 c6 3f 00 00       	call   81004020 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 19 6b 00 81       	push   $0x81006b19
81000065:	68 16 6b 00 81       	push   $0x81006b16
8100006a:	e8 b1 3f 00 00       	call   81004020 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 5a 27 00 00       	call   810027e8 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 f2 0d 00 00       	call   81000e98 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 6f 40 00 00       	call   8100412b <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 78 81 00 81 01 	movl   $0x1,0x81008178
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 20 6b 00 81       	push   $0x81006b20
81000107:	e8 1f 40 00 00       	call   8100412b <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 26 6b 00 81       	push   $0x81006b26
81000117:	e8 0f 40 00 00       	call   8100412b <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 38 6b 00 81       	push   $0x81006b38
81000127:	e8 ff 3f 00 00       	call   8100412b <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 74 81 00 81       	mov    0x81008174,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 c4 08 00 00       	call   81000a0b <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 74 81 00 81       	mov    0x81008174,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 74 81 00 81    	mov    0x81008174,%ebx
8100015e:	e8 85 26 00 00       	call   810027e8 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 58 6b 00 81       	push   $0x81006b58
8100016f:	50                   	push   %eax
81000170:	e8 6d 11 00 00       	call   810012e2 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 77 6b 00 81       	push   $0x81006b77
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 06 25 00 00       	call   8100269c <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 37 26 00 00       	call   810027e8 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 7c 6b 00 81       	push   $0x81006b7c
810001be:	e8 12 18 00 00       	call   810019d5 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 78 81 00 81       	mov    0x81008178,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 0c 26 00 00       	call   810027e8 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 af 6b 00 81       	push   $0x81006baf
810001e9:	e8 e7 17 00 00       	call   810019d5 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 78 81 00 81       	mov    0x81008178,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 09 3f 00 00       	call   8100412b <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_exit(int argc, const char ** argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 f4 07 00 00       	call   81000a3f <exit>

8100024b <do_ls>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 cb 6b 00 81       	push   $0x81006bcb
81000259:	e8 d0 06 00 00       	call   8100092e <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 43                	jne    810002ad <do_ls+0x62>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 d0 6b 00 81       	push   $0x81006bd0
81000272:	e8 b4 3e 00 00       	call   8100412b <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 56                	jmp    810002d7 <do_ls+0x8c>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", 
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 50 18             	mov    0x18(%eax),%edx
            entry->type = FILE_DIR ? 'd' : 'f',
            entry->name,
81000287:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100028a:	8d 48 08             	lea    0x8(%eax),%ecx
    printf("%c %s %d\n", 
8100028d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000290:	c7 40 04 64 00 00 00 	movl   $0x64,0x4(%eax)
            entry->type = FILE_DIR ? 'd' : 'f',
81000297:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100029a:	8b 40 04             	mov    0x4(%eax),%eax
    printf("%c %s %d\n", 
8100029d:	52                   	push   %edx
8100029e:	51                   	push   %ecx
8100029f:	50                   	push   %eax
810002a0:	68 e1 6b 00 81       	push   $0x81006be1
810002a5:	e8 76 3d 00 00       	call   81004020 <iprintf>
810002aa:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002ad:	83 ec 0c             	sub    $0xc,%esp
810002b0:	ff 75 f4             	push   -0xc(%ebp)
810002b3:	e8 de 06 00 00       	call   81000996 <readdir>
810002b8:	83 c4 10             	add    $0x10,%esp
810002bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002be:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c2:	75 bd                	jne    81000281 <do_ls+0x36>
            entry->size
          );
  }
  closedir(p_dir);
810002c4:	83 ec 0c             	sub    $0xc,%esp
810002c7:	ff 75 f4             	push   -0xc(%ebp)
810002ca:	e8 07 07 00 00       	call   810009d6 <closedir>
810002cf:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d2:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002d7:	c9                   	leave  
810002d8:	c3                   	ret    

810002d9 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810002d9:	55                   	push   %ebp
810002da:	89 e5                	mov    %esp,%ebp
810002dc:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810002df:	a1 60 71 00 81       	mov    0x81007160,%eax
810002e4:	a3 68 81 00 81       	mov    %eax,0x81008168
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810002e9:	83 ec 04             	sub    $0x4,%esp
810002ec:	68 00 04 00 00       	push   $0x400
810002f1:	6a 00                	push   $0x0
810002f3:	68 60 7d 00 81       	push   $0x81007d60
810002f8:	e8 13 31 00 00       	call   81003410 <memset>
810002fd:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000300:	c7 05 60 81 00 81 a0 	movl   $0x81006ca0,0x81008160
81000307:	6c 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100030a:	b8 dc 6c 00 81       	mov    $0x81006cdc,%eax
8100030f:	a3 64 81 00 81       	mov    %eax,0x81008164
}
81000314:	90                   	nop
81000315:	c9                   	leave  
81000316:	c3                   	ret    

81000317 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000317:	55                   	push   %ebp
81000318:	89 e5                	mov    %esp,%ebp
8100031a:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100031d:	a1 68 81 00 81       	mov    0x81008168,%eax
81000322:	83 ec 08             	sub    $0x8,%esp
81000325:	50                   	push   %eax
81000326:	68 16 6b 00 81       	push   $0x81006b16
8100032b:	e8 f0 3c 00 00       	call   81004020 <iprintf>
81000330:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000333:	e8 b0 24 00 00       	call   810027e8 <__getreent>
81000338:	8b 40 08             	mov    0x8(%eax),%eax
8100033b:	83 ec 0c             	sub    $0xc,%esp
8100033e:	50                   	push   %eax
8100033f:	e8 bd 09 00 00       	call   81000d01 <fflush>
81000344:	83 c4 10             	add    $0x10,%esp
}
81000347:	90                   	nop
81000348:	c9                   	leave  
81000349:	c3                   	ret    

8100034a <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
8100034a:	55                   	push   %ebp
8100034b:	89 e5                	mov    %esp,%ebp
8100034d:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000350:	a1 60 81 00 81       	mov    0x81008160,%eax
81000355:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000358:	eb 22                	jmp    8100037c <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
8100035a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100035d:	8b 00                	mov    (%eax),%eax
8100035f:	83 ec 08             	sub    $0x8,%esp
81000362:	ff 75 08             	push   0x8(%ebp)
81000365:	50                   	push   %eax
81000366:	e8 61 42 00 00       	call   810045cc <strcmp>
8100036b:	83 c4 10             	add    $0x10,%esp
8100036e:	85 c0                	test   %eax,%eax
81000370:	75 05                	jne    81000377 <find_builtin+0x2d>
      continue;
    }
    return cmd;
81000372:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000375:	eb 14                	jmp    8100038b <find_builtin+0x41>
      continue;
81000377:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000378:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
8100037c:	a1 64 81 00 81       	mov    0x81008164,%eax
81000381:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000384:	72 d4                	jb     8100035a <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
81000386:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100038b:	c9                   	leave  
8100038c:	c3                   	ret    

8100038d <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
8100038d:	55                   	push   %ebp
8100038e:	89 e5                	mov    %esp,%ebp
81000390:	53                   	push   %ebx
81000391:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000394:	8b 45 08             	mov    0x8(%ebp),%eax
81000397:	8b 40 08             	mov    0x8(%eax),%eax
8100039a:	83 ec 08             	sub    $0x8,%esp
8100039d:	ff 75 10             	push   0x10(%ebp)
810003a0:	ff 75 0c             	push   0xc(%ebp)
810003a3:	ff d0                	call   *%eax
810003a5:	83 c4 10             	add    $0x10,%esp
810003a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
810003ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810003af:	79 1f                	jns    810003d0 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR"%s error: %d\n"ESC_COLOR_DEFAULT, cmd->name, ret);
810003b1:	8b 45 08             	mov    0x8(%ebp),%eax
810003b4:	8b 18                	mov    (%eax),%ebx
810003b6:	e8 2d 24 00 00       	call   810027e8 <__getreent>
810003bb:	8b 40 0c             	mov    0xc(%eax),%eax
810003be:	ff 75 f4             	push   -0xc(%ebp)
810003c1:	53                   	push   %ebx
810003c2:	68 dc 6c 00 81       	push   $0x81006cdc
810003c7:	50                   	push   %eax
810003c8:	e8 15 0f 00 00       	call   810012e2 <fiprintf>
810003cd:	83 c4 10             	add    $0x10,%esp
  }
}
810003d0:	90                   	nop
810003d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810003d4:	c9                   	leave  
810003d5:	c3                   	ret    

810003d6 <run_exec_file>:
 * 
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
810003d6:	55                   	push   %ebp
810003d7:	89 e5                	mov    %esp,%ebp
810003d9:	53                   	push   %ebx
810003da:	83 ec 14             	sub    $0x14,%esp
  //1.创建子进程
  int pid = fork();
810003dd:	e8 4d 03 00 00       	call   8100072f <fork>
810003e2:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
810003e5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810003e9:	79 21                	jns    8100040c <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR"fork failed: %s"ESC_COLOR_DEFAULT, path);
810003eb:	e8 f8 23 00 00       	call   810027e8 <__getreent>
810003f0:	8b 40 0c             	mov    0xc(%eax),%eax
810003f3:	83 ec 04             	sub    $0x4,%esp
810003f6:	ff 75 08             	push   0x8(%ebp)
810003f9:	68 f4 6c 00 81       	push   $0x81006cf4
810003fe:	50                   	push   %eax
810003ff:	e8 de 0e 00 00       	call   810012e2 <fiprintf>
81000404:	83 c4 10             	add    $0x10,%esp
    int status;
    //3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
  }
}
81000407:	e9 82 00 00 00       	jmp    8100048e <run_exec_file+0xb8>
  } else if (pid == 0) {
8100040c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000410:	75 44                	jne    81000456 <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000412:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000419:	eb 29                	jmp    81000444 <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
8100041b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100041e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000425:	8b 45 10             	mov    0x10(%ebp),%eax
81000428:	01 d0                	add    %edx,%eax
8100042a:	8b 00                	mov    (%eax),%eax
8100042c:	83 ec 04             	sub    $0x4,%esp
8100042f:	50                   	push   %eax
81000430:	ff 75 f4             	push   -0xc(%ebp)
81000433:	68 0e 6d 00 81       	push   $0x81006d0e
81000438:	e8 e3 3b 00 00       	call   81004020 <iprintf>
8100043d:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000440:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000444:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000447:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100044a:	7c cf                	jl     8100041b <run_exec_file+0x45>
    exit(-1);
8100044c:	83 ec 0c             	sub    $0xc,%esp
8100044f:	6a ff                	push   $0xffffffff
81000451:	e8 e9 05 00 00       	call   81000a3f <exit>
    int cpid = wait(&status);
81000456:	83 ec 0c             	sub    $0xc,%esp
81000459:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100045c:	50                   	push   %eax
8100045d:	e8 ab 04 00 00       	call   8100090d <wait>
81000462:	83 c4 10             	add    $0x10,%esp
81000465:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
81000468:	8b 5d e8             	mov    -0x18(%ebp),%ebx
8100046b:	e8 78 23 00 00       	call   810027e8 <__getreent>
81000470:	8b 40 0c             	mov    0xc(%eax),%eax
81000473:	83 ec 08             	sub    $0x8,%esp
81000476:	ff 75 ec             	push   -0x14(%ebp)
81000479:	ff 75 f0             	push   -0x10(%ebp)
8100047c:	53                   	push   %ebx
8100047d:	ff 75 08             	push   0x8(%ebp)
81000480:	68 1c 6d 00 81       	push   $0x81006d1c
81000485:	50                   	push   %eax
81000486:	e8 57 0e 00 00       	call   810012e2 <fiprintf>
8100048b:	83 c4 20             	add    $0x20,%esp
}
8100048e:	90                   	nop
8100048f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000492:	c9                   	leave  
81000493:	c3                   	ret    

81000494 <main>:

int main(int argc, char **argv) {
81000494:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000498:	83 e4 f0             	and    $0xfffffff0,%esp
8100049b:	ff 71 fc             	push   -0x4(%ecx)
8100049e:	55                   	push   %ebp
8100049f:	89 e5                	mov    %esp,%ebp
810004a1:	51                   	push   %ecx
810004a2:	83 ec 44             	sub    $0x44,%esp
810004a5:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
810004a7:	8b 40 04             	mov    0x4(%eax),%eax
810004aa:	8b 00                	mov    (%eax),%eax
810004ac:	83 ec 08             	sub    $0x8,%esp
810004af:	6a 02                	push   $0x2
810004b1:	50                   	push   %eax
810004b2:	e8 db 02 00 00       	call   81000792 <open>
810004b7:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
810004ba:	83 ec 0c             	sub    $0xc,%esp
810004bd:	6a 00                	push   $0x0
810004bf:	e8 06 04 00 00       	call   810008ca <dup>
810004c4:	83 c4 10             	add    $0x10,%esp
  dup(0);
810004c7:	83 ec 0c             	sub    $0xc,%esp
810004ca:	6a 00                	push   $0x0
810004cc:	e8 f9 03 00 00       	call   810008ca <dup>
810004d1:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
810004d4:	e8 00 fe ff ff       	call   810002d9 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
810004d9:	e8 39 fe ff ff       	call   81000317 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810004de:	e8 05 23 00 00       	call   810027e8 <__getreent>
810004e3:	8b 40 04             	mov    0x4(%eax),%eax
810004e6:	83 ec 04             	sub    $0x4,%esp
810004e9:	50                   	push   %eax
810004ea:	68 00 04 00 00       	push   $0x400
810004ef:	68 60 7d 00 81       	push   $0x81007d60
810004f4:	e8 9f 09 00 00       	call   81000e98 <fgets>
810004f9:	83 c4 10             	add    $0x10,%esp
810004fc:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810004ff:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000503:	0f 84 13 01 00 00    	je     8100061c <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
81000509:	83 ec 08             	sub    $0x8,%esp
8100050c:	6a 0a                	push   $0xa
8100050e:	68 60 7d 00 81       	push   $0x81007d60
81000513:	e8 b8 3f 00 00       	call   810044d0 <strchr>
81000518:	83 c4 10             	add    $0x10,%esp
8100051b:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100051e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000522:	74 06                	je     8100052a <main+0x96>
      *cr = '\0';
81000524:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000527:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
8100052a:	83 ec 08             	sub    $0x8,%esp
8100052d:	6a 0d                	push   $0xd
8100052f:	68 60 7d 00 81       	push   $0x81007d60
81000534:	e8 97 3f 00 00       	call   810044d0 <strchr>
81000539:	83 c4 10             	add    $0x10,%esp
8100053c:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100053f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000543:	74 06                	je     8100054b <main+0xb7>
      *cr = '\0';
81000545:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000548:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
8100054b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000552:	83 ec 04             	sub    $0x4,%esp
81000555:	6a 28                	push   $0x28
81000557:	6a 00                	push   $0x0
81000559:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100055c:	50                   	push   %eax
8100055d:	e8 ae 2e 00 00       	call   81003410 <memset>
81000562:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000565:	c7 45 e4 40 6d 00 81 	movl   $0x81006d40,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
8100056c:	83 ec 08             	sub    $0x8,%esp
8100056f:	ff 75 e4             	push   -0x1c(%ebp)
81000572:	68 60 7d 00 81       	push   $0x81007d60
81000577:	e8 7d 41 00 00       	call   810046f9 <strtok>
8100057c:	83 c4 10             	add    $0x10,%esp
8100057f:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000582:	eb 23                	jmp    810005a7 <main+0x113>
      argv[argc++] = token;
81000584:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000587:	8d 50 01             	lea    0x1(%eax),%edx
8100058a:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100058d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000590:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000594:	83 ec 08             	sub    $0x8,%esp
81000597:	ff 75 e4             	push   -0x1c(%ebp)
8100059a:	6a 00                	push   $0x0
8100059c:	e8 58 41 00 00       	call   810046f9 <strtok>
810005a1:	83 c4 10             	add    $0x10,%esp
810005a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
810005a7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005ab:	75 d7                	jne    81000584 <main+0xf0>
    }

    if (argc == 0) {
810005ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005b1:	74 6f                	je     81000622 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
810005b3:	8b 45 b8             	mov    -0x48(%ebp),%eax
810005b6:	83 ec 0c             	sub    $0xc,%esp
810005b9:	50                   	push   %eax
810005ba:	e8 8b fd ff ff       	call   8100034a <find_builtin>
810005bf:	83 c4 10             	add    $0x10,%esp
810005c2:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
810005c5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810005c9:	74 17                	je     810005e2 <main+0x14e>
      run_builtin(cmd, argc, argv);
810005cb:	83 ec 04             	sub    $0x4,%esp
810005ce:	8d 45 b8             	lea    -0x48(%ebp),%eax
810005d1:	50                   	push   %eax
810005d2:	ff 75 f4             	push   -0xc(%ebp)
810005d5:	ff 75 e0             	push   -0x20(%ebp)
810005d8:	e8 b0 fd ff ff       	call   8100038d <run_builtin>
810005dd:	83 c4 10             	add    $0x10,%esp
      continue;
810005e0:	eb 41                	jmp    81000623 <main+0x18f>
    }

    //5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
810005e2:	83 ec 04             	sub    $0x4,%esp
810005e5:	8d 45 b8             	lea    -0x48(%ebp),%eax
810005e8:	50                   	push   %eax
810005e9:	ff 75 f4             	push   -0xc(%ebp)
810005ec:	68 42 6d 00 81       	push   $0x81006d42
810005f1:	e8 e0 fd ff ff       	call   810003d6 <run_exec_file>
810005f6:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
810005f9:	e8 ea 21 00 00       	call   810027e8 <__getreent>
810005fe:	8b 40 0c             	mov    0xc(%eax),%eax
81000601:	83 ec 04             	sub    $0x4,%esp
81000604:	68 60 7d 00 81       	push   $0x81007d60
81000609:	68 44 6d 00 81       	push   $0x81006d44
8100060e:	50                   	push   %eax
8100060f:	e8 ce 0c 00 00       	call   810012e2 <fiprintf>
81000614:	83 c4 10             	add    $0x10,%esp
81000617:	e9 bd fe ff ff       	jmp    810004d9 <main+0x45>
      continue;
8100061c:	90                   	nop
8100061d:	e9 b7 fe ff ff       	jmp    810004d9 <main+0x45>
      continue;
81000622:	90                   	nop
  for (;;) {
81000623:	e9 b1 fe ff ff       	jmp    810004d9 <main+0x45>

81000628 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000628:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100062b:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100062d:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100062f:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000631:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000633:	e9 00 00 00 00       	jmp    81000638 <cstart>

81000638 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000638:	55                   	push   %ebp
81000639:	89 e5                	mov    %esp,%ebp
8100063b:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100063e:	c7 45 f4 60 7b 00 81 	movl   $0x81007b60,-0xc(%ebp)
    while (start < __bss_end__) {
81000645:	eb 0c                	jmp    81000653 <cstart+0x1b>
        *(start++) = 0;
81000647:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100064a:	8d 50 01             	lea    0x1(%eax),%edx
8100064d:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000650:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000653:	81 7d f4 00 82 00 81 	cmpl   $0x81008200,-0xc(%ebp)
8100065a:	72 eb                	jb     81000647 <cstart+0xf>
    }
    
    exit(main(argc, argv));
8100065c:	83 ec 08             	sub    $0x8,%esp
8100065f:	ff 75 0c             	push   0xc(%ebp)
81000662:	ff 75 08             	push   0x8(%ebp)
81000665:	e8 2a fe ff ff       	call   81000494 <main>
8100066a:	83 c4 10             	add    $0x10,%esp
8100066d:	83 ec 0c             	sub    $0xc,%esp
81000670:	50                   	push   %eax
81000671:	e8 c9 03 00 00       	call   81000a3f <exit>

81000676 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000676:	55                   	push   %ebp
81000677:	89 e5                	mov    %esp,%ebp
81000679:	57                   	push   %edi
8100067a:	56                   	push   %esi
8100067b:	53                   	push   %ebx
8100067c:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
8100067f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000686:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
8100068d:	8b 45 08             	mov    0x8(%ebp),%eax
81000690:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000693:	8b 55 08             	mov    0x8(%ebp),%edx
81000696:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000699:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100069c:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
8100069f:	8b 5d 08             	mov    0x8(%ebp),%ebx
810006a2:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810006a5:	8b 75 08             	mov    0x8(%ebp),%esi
810006a8:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810006aa:	8d 7d e8             	lea    -0x18(%ebp),%edi
810006ad:	50                   	push   %eax
810006ae:	52                   	push   %edx
810006af:	51                   	push   %ecx
810006b0:	53                   	push   %ebx
810006b1:	56                   	push   %esi
810006b2:	ff 1f                	lcall  *(%edi)
810006b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810006b7:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810006ba:	83 c4 10             	add    $0x10,%esp
810006bd:	5b                   	pop    %ebx
810006be:	5e                   	pop    %esi
810006bf:	5f                   	pop    %edi
810006c0:	5d                   	pop    %ebp
810006c1:	c3                   	ret    

810006c2 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810006c2:	55                   	push   %ebp
810006c3:	89 e5                	mov    %esp,%ebp
810006c5:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810006c8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810006cc:	7e 1b                	jle    810006e9 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810006ce:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810006d5:	8b 45 08             	mov    0x8(%ebp),%eax
810006d8:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810006db:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006de:	50                   	push   %eax
810006df:	e8 92 ff ff ff       	call   81000676 <sys_call>
810006e4:	83 c4 04             	add    $0x4,%esp
810006e7:	eb 01                	jmp    810006ea <msleep+0x28>
    if (ms <= 0) return;
810006e9:	90                   	nop

}
810006ea:	c9                   	leave  
810006eb:	c3                   	ret    

810006ec <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
810006ec:	55                   	push   %ebp
810006ed:	89 e5                	mov    %esp,%ebp
810006ef:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
810006f2:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
810006f9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006fc:	50                   	push   %eax
810006fd:	e8 74 ff ff ff       	call   81000676 <sys_call>
81000702:	83 c4 04             	add    $0x4,%esp
}
81000705:	c9                   	leave  
81000706:	c3                   	ret    

81000707 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000707:	55                   	push   %ebp
81000708:	89 e5                	mov    %esp,%ebp
8100070a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100070d:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000714:	8b 45 08             	mov    0x8(%ebp),%eax
81000717:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100071a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071d:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000720:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000723:	50                   	push   %eax
81000724:	e8 4d ff ff ff       	call   81000676 <sys_call>
81000729:	83 c4 04             	add    $0x4,%esp
}
8100072c:	90                   	nop
8100072d:	c9                   	leave  
8100072e:	c3                   	ret    

8100072f <fork>:

int fork (void) {
8100072f:	55                   	push   %ebp
81000730:	89 e5                	mov    %esp,%ebp
81000732:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000735:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
8100073c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100073f:	50                   	push   %eax
81000740:	e8 31 ff ff ff       	call   81000676 <sys_call>
81000745:	83 c4 04             	add    $0x4,%esp
}
81000748:	c9                   	leave  
81000749:	c3                   	ret    

8100074a <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
8100074a:	55                   	push   %ebp
8100074b:	89 e5                	mov    %esp,%ebp
8100074d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000750:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000757:	8b 45 08             	mov    0x8(%ebp),%eax
8100075a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
8100075d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000760:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000763:	8b 45 10             	mov    0x10(%ebp),%eax
81000766:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000769:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100076c:	50                   	push   %eax
8100076d:	e8 04 ff ff ff       	call   81000676 <sys_call>
81000772:	83 c4 04             	add    $0x4,%esp
}
81000775:	c9                   	leave  
81000776:	c3                   	ret    

81000777 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000777:	55                   	push   %ebp
81000778:	89 e5                	mov    %esp,%ebp
8100077a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
8100077d:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000784:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000787:	50                   	push   %eax
81000788:	e8 e9 fe ff ff       	call   81000676 <sys_call>
8100078d:	83 c4 04             	add    $0x4,%esp
}
81000790:	c9                   	leave  
81000791:	c3                   	ret    

81000792 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000792:	55                   	push   %ebp
81000793:	89 e5                	mov    %esp,%ebp
81000795:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000798:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
8100079f:	8b 45 08             	mov    0x8(%ebp),%eax
810007a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810007a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810007a8:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810007ab:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007ae:	50                   	push   %eax
810007af:	e8 c2 fe ff ff       	call   81000676 <sys_call>
810007b4:	83 c4 04             	add    $0x4,%esp
}
810007b7:	c9                   	leave  
810007b8:	c3                   	ret    

810007b9 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810007b9:	55                   	push   %ebp
810007ba:	89 e5                	mov    %esp,%ebp
810007bc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810007bf:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810007c6:	8b 45 08             	mov    0x8(%ebp),%eax
810007c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810007cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810007cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810007d2:	8b 45 10             	mov    0x10(%ebp),%eax
810007d5:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810007d8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007db:	50                   	push   %eax
810007dc:	e8 95 fe ff ff       	call   81000676 <sys_call>
810007e1:	83 c4 04             	add    $0x4,%esp
}
810007e4:	c9                   	leave  
810007e5:	c3                   	ret    

810007e6 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810007e6:	55                   	push   %ebp
810007e7:	89 e5                	mov    %esp,%ebp
810007e9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
810007ec:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
810007f3:	8b 45 08             	mov    0x8(%ebp),%eax
810007f6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810007f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810007fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810007ff:	8b 45 10             	mov    0x10(%ebp),%eax
81000802:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000805:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000808:	50                   	push   %eax
81000809:	e8 68 fe ff ff       	call   81000676 <sys_call>
8100080e:	83 c4 04             	add    $0x4,%esp
}
81000811:	c9                   	leave  
81000812:	c3                   	ret    

81000813 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000813:	55                   	push   %ebp
81000814:	89 e5                	mov    %esp,%ebp
81000816:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000819:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000820:	8b 45 08             	mov    0x8(%ebp),%eax
81000823:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000826:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000829:	50                   	push   %eax
8100082a:	e8 47 fe ff ff       	call   81000676 <sys_call>
8100082f:	83 c4 04             	add    $0x4,%esp
}
81000832:	c9                   	leave  
81000833:	c3                   	ret    

81000834 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000834:	55                   	push   %ebp
81000835:	89 e5                	mov    %esp,%ebp
81000837:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100083a:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000841:	8b 45 08             	mov    0x8(%ebp),%eax
81000844:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000847:	8b 45 0c             	mov    0xc(%ebp),%eax
8100084a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8100084d:	8b 45 10             	mov    0x10(%ebp),%eax
81000850:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000853:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000856:	50                   	push   %eax
81000857:	e8 1a fe ff ff       	call   81000676 <sys_call>
8100085c:	83 c4 04             	add    $0x4,%esp
}
8100085f:	c9                   	leave  
81000860:	c3                   	ret    

81000861 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000861:	55                   	push   %ebp
81000862:	89 e5                	mov    %esp,%ebp
81000864:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000867:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
8100086e:	8b 45 08             	mov    0x8(%ebp),%eax
81000871:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000874:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000877:	50                   	push   %eax
81000878:	e8 f9 fd ff ff       	call   81000676 <sys_call>
8100087d:	83 c4 04             	add    $0x4,%esp
}
81000880:	c9                   	leave  
81000881:	c3                   	ret    

81000882 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000882:	55                   	push   %ebp
81000883:	89 e5                	mov    %esp,%ebp
81000885:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000888:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
8100088f:	8b 45 08             	mov    0x8(%ebp),%eax
81000892:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000895:	8b 45 0c             	mov    0xc(%ebp),%eax
81000898:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100089b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100089e:	50                   	push   %eax
8100089f:	e8 d2 fd ff ff       	call   81000676 <sys_call>
810008a4:	83 c4 04             	add    $0x4,%esp
}
810008a7:	c9                   	leave  
810008a8:	c3                   	ret    

810008a9 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810008a9:	55                   	push   %ebp
810008aa:	89 e5                	mov    %esp,%ebp
810008ac:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810008af:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
810008b6:	8b 45 08             	mov    0x8(%ebp),%eax
810008b9:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810008bc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008bf:	50                   	push   %eax
810008c0:	e8 b1 fd ff ff       	call   81000676 <sys_call>
810008c5:	83 c4 04             	add    $0x4,%esp
}
810008c8:	c9                   	leave  
810008c9:	c3                   	ret    

810008ca <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
810008ca:	55                   	push   %ebp
810008cb:	89 e5                	mov    %esp,%ebp
810008cd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
810008d0:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
810008d7:	8b 45 08             	mov    0x8(%ebp),%eax
810008da:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810008dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008e0:	50                   	push   %eax
810008e1:	e8 90 fd ff ff       	call   81000676 <sys_call>
810008e6:	83 c4 04             	add    $0x4,%esp
}
810008e9:	c9                   	leave  
810008ea:	c3                   	ret    

810008eb <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
810008eb:	55                   	push   %ebp
810008ec:	89 e5                	mov    %esp,%ebp
810008ee:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
810008f1:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
810008f8:	8b 45 08             	mov    0x8(%ebp),%eax
810008fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
810008fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000901:	50                   	push   %eax
81000902:	e8 6f fd ff ff       	call   81000676 <sys_call>
81000907:	83 c4 04             	add    $0x4,%esp
}
8100090a:	90                   	nop
8100090b:	c9                   	leave  
8100090c:	c3                   	ret    

8100090d <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
8100090d:	55                   	push   %ebp
8100090e:	89 e5                	mov    %esp,%ebp
81000910:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000913:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
8100091a:	8b 45 08             	mov    0x8(%ebp),%eax
8100091d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000920:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000923:	50                   	push   %eax
81000924:	e8 4d fd ff ff       	call   81000676 <sys_call>
81000929:	83 c4 04             	add    $0x4,%esp
}
8100092c:	c9                   	leave  
8100092d:	c3                   	ret    

8100092e <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
8100092e:	55                   	push   %ebp
8100092f:	89 e5                	mov    %esp,%ebp
81000931:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000934:	83 ec 0c             	sub    $0xc,%esp
81000937:	6a 20                	push   $0x20
81000939:	e8 b4 1e 00 00       	call   810027f2 <malloc>
8100093e:	83 c4 10             	add    $0x10,%esp
81000941:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000944:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000948:	75 07                	jne    81000951 <opendir+0x23>
        return (DIR*)0;
8100094a:	b8 00 00 00 00       	mov    $0x0,%eax
8100094f:	eb 43                	jmp    81000994 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000951:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000958:	8b 45 08             	mov    0x8(%ebp),%eax
8100095b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
8100095e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000961:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000964:	83 ec 0c             	sub    $0xc,%esp
81000967:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100096a:	50                   	push   %eax
8100096b:	e8 06 fd ff ff       	call   81000676 <sys_call>
81000970:	83 c4 10             	add    $0x10,%esp
81000973:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000976:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100097a:	79 15                	jns    81000991 <opendir+0x63>
        free(dir);
8100097c:	83 ec 0c             	sub    $0xc,%esp
8100097f:	ff 75 f4             	push   -0xc(%ebp)
81000982:	e8 87 1e 00 00       	call   8100280e <free>
81000987:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
8100098a:	b8 00 00 00 00       	mov    $0x0,%eax
8100098f:	eb 03                	jmp    81000994 <opendir+0x66>
    }

    return dir;    
81000991:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000994:	c9                   	leave  
81000995:	c3                   	ret    

81000996 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000996:	55                   	push   %ebp
81000997:	89 e5                	mov    %esp,%ebp
81000999:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
8100099c:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
810009a3:	8b 45 08             	mov    0x8(%ebp),%eax
810009a6:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
810009a9:	8b 45 08             	mov    0x8(%ebp),%eax
810009ac:	83 c0 04             	add    $0x4,%eax
810009af:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
810009b2:	8d 45 e8             	lea    -0x18(%ebp),%eax
810009b5:	50                   	push   %eax
810009b6:	e8 bb fc ff ff       	call   81000676 <sys_call>
810009bb:	83 c4 04             	add    $0x4,%esp
810009be:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
810009c1:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
810009c5:	79 07                	jns    810009ce <readdir+0x38>
        return (struct dirent*)0;
810009c7:	b8 00 00 00 00       	mov    $0x0,%eax
810009cc:	eb 06                	jmp    810009d4 <readdir+0x3e>
    }

    return &dir->dirent;   
810009ce:	8b 45 08             	mov    0x8(%ebp),%eax
810009d1:	83 c0 04             	add    $0x4,%eax
}
810009d4:	c9                   	leave  
810009d5:	c3                   	ret    

810009d6 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
810009d6:	55                   	push   %ebp
810009d7:	89 e5                	mov    %esp,%ebp
810009d9:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
810009dc:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
810009e3:	8b 45 08             	mov    0x8(%ebp),%eax
810009e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
810009e9:	8d 45 e0             	lea    -0x20(%ebp),%eax
810009ec:	50                   	push   %eax
810009ed:	e8 84 fc ff ff       	call   81000676 <sys_call>
810009f2:	83 c4 04             	add    $0x4,%esp
810009f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
810009f8:	83 ec 0c             	sub    $0xc,%esp
810009fb:	ff 75 08             	push   0x8(%ebp)
810009fe:	e8 0b 1e 00 00       	call   8100280e <free>
81000a03:	83 c4 10             	add    $0x10,%esp

    return err;   
81000a06:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000a09:	c9                   	leave  
81000a0a:	c3                   	ret    

81000a0b <atoi>:
81000a0b:	55                   	push   %ebp
81000a0c:	89 e5                	mov    %esp,%ebp
81000a0e:	83 ec 08             	sub    $0x8,%esp
81000a11:	83 ec 04             	sub    $0x4,%esp
81000a14:	6a 0a                	push   $0xa
81000a16:	6a 00                	push   $0x0
81000a18:	ff 75 08             	push   0x8(%ebp)
81000a1b:	e8 16 40 00 00       	call   81004a36 <strtol>
81000a20:	83 c4 10             	add    $0x10,%esp
81000a23:	c9                   	leave  
81000a24:	c3                   	ret    

81000a25 <_atoi_r>:
81000a25:	55                   	push   %ebp
81000a26:	89 e5                	mov    %esp,%ebp
81000a28:	83 ec 08             	sub    $0x8,%esp
81000a2b:	6a 0a                	push   $0xa
81000a2d:	6a 00                	push   $0x0
81000a2f:	ff 75 0c             	push   0xc(%ebp)
81000a32:	ff 75 08             	push   0x8(%ebp)
81000a35:	e8 b2 3f 00 00       	call   810049ec <_strtol_r>
81000a3a:	83 c4 10             	add    $0x10,%esp
81000a3d:	c9                   	leave  
81000a3e:	c3                   	ret    

81000a3f <exit>:
81000a3f:	55                   	push   %ebp
81000a40:	89 e5                	mov    %esp,%ebp
81000a42:	83 ec 08             	sub    $0x8,%esp
81000a45:	83 ec 08             	sub    $0x8,%esp
81000a48:	6a 00                	push   $0x0
81000a4a:	ff 75 08             	push   0x8(%ebp)
81000a4d:	e8 e1 42 00 00       	call   81004d33 <__call_exitprocs>
81000a52:	83 c4 10             	add    $0x10,%esp
81000a55:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000a5a:	8b 40 3c             	mov    0x3c(%eax),%eax
81000a5d:	85 c0                	test   %eax,%eax
81000a5f:	74 17                	je     81000a78 <exit+0x39>
81000a61:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000a66:	8b 40 3c             	mov    0x3c(%eax),%eax
81000a69:	8b 15 ec 6d 00 81    	mov    0x81006dec,%edx
81000a6f:	83 ec 0c             	sub    $0xc,%esp
81000a72:	52                   	push   %edx
81000a73:	ff d0                	call   *%eax
81000a75:	83 c4 10             	add    $0x10,%esp
81000a78:	83 ec 0c             	sub    $0xc,%esp
81000a7b:	ff 75 08             	push   0x8(%ebp)
81000a7e:	e8 68 fe ff ff       	call   810008eb <_exit>

81000a83 <__sflush_r>:
81000a83:	55                   	push   %ebp
81000a84:	89 e5                	mov    %esp,%ebp
81000a86:	57                   	push   %edi
81000a87:	56                   	push   %esi
81000a88:	53                   	push   %ebx
81000a89:	83 ec 1c             	sub    $0x1c,%esp
81000a8c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a93:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000a97:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000a9b:	83 e0 08             	and    $0x8,%eax
81000a9e:	85 c0                	test   %eax,%eax
81000aa0:	0f 85 93 01 00 00    	jne    81000c39 <__sflush_r+0x1b6>
81000aa6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000aaa:	80 cc 08             	or     $0x8,%ah
81000aad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ab1:	8b 43 04             	mov    0x4(%ebx),%eax
81000ab4:	85 c0                	test   %eax,%eax
81000ab6:	7f 0b                	jg     81000ac3 <__sflush_r+0x40>
81000ab8:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000abb:	85 c0                	test   %eax,%eax
81000abd:	0f 8e 6f 01 00 00    	jle    81000c32 <__sflush_r+0x1af>
81000ac3:	8b 43 28             	mov    0x28(%ebx),%eax
81000ac6:	85 c0                	test   %eax,%eax
81000ac8:	0f 84 64 01 00 00    	je     81000c32 <__sflush_r+0x1af>
81000ace:	8b 45 08             	mov    0x8(%ebp),%eax
81000ad1:	8b 00                	mov    (%eax),%eax
81000ad3:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000ad6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ad9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000adf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ae3:	98                   	cwtl   
81000ae4:	25 00 10 00 00       	and    $0x1000,%eax
81000ae9:	85 c0                	test   %eax,%eax
81000aeb:	74 08                	je     81000af5 <__sflush_r+0x72>
81000aed:	8b 43 50             	mov    0x50(%ebx),%eax
81000af0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000af3:	eb 64                	jmp    81000b59 <__sflush_r+0xd6>
81000af5:	8b 43 28             	mov    0x28(%ebx),%eax
81000af8:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000afb:	6a 01                	push   $0x1
81000afd:	6a 00                	push   $0x0
81000aff:	52                   	push   %edx
81000b00:	ff 75 08             	push   0x8(%ebp)
81000b03:	ff d0                	call   *%eax
81000b05:	83 c4 10             	add    $0x10,%esp
81000b08:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b0b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b0f:	75 48                	jne    81000b59 <__sflush_r+0xd6>
81000b11:	8b 45 08             	mov    0x8(%ebp),%eax
81000b14:	8b 00                	mov    (%eax),%eax
81000b16:	85 c0                	test   %eax,%eax
81000b18:	74 3f                	je     81000b59 <__sflush_r+0xd6>
81000b1a:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000b21:	8b 45 08             	mov    0x8(%ebp),%eax
81000b24:	8b 00                	mov    (%eax),%eax
81000b26:	83 f8 1d             	cmp    $0x1d,%eax
81000b29:	74 0a                	je     81000b35 <__sflush_r+0xb2>
81000b2b:	8b 45 08             	mov    0x8(%ebp),%eax
81000b2e:	8b 00                	mov    (%eax),%eax
81000b30:	83 f8 16             	cmp    $0x16,%eax
81000b33:	75 11                	jne    81000b46 <__sflush_r+0xc3>
81000b35:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000b3c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b3f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b42:	89 10                	mov    %edx,(%eax)
81000b44:	eb 0b                	jmp    81000b51 <__sflush_r+0xce>
81000b46:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b4a:	83 c8 40             	or     $0x40,%eax
81000b4d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b51:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000b54:	e9 48 01 00 00       	jmp    81000ca1 <__sflush_r+0x21e>
81000b59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b5d:	98                   	cwtl   
81000b5e:	83 e0 04             	and    $0x4,%eax
81000b61:	85 c0                	test   %eax,%eax
81000b63:	74 13                	je     81000b78 <__sflush_r+0xf5>
81000b65:	8b 43 04             	mov    0x4(%ebx),%eax
81000b68:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000b6b:	8b 43 30             	mov    0x30(%ebx),%eax
81000b6e:	85 c0                	test   %eax,%eax
81000b70:	74 06                	je     81000b78 <__sflush_r+0xf5>
81000b72:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000b75:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000b78:	8b 43 28             	mov    0x28(%ebx),%eax
81000b7b:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000b7e:	6a 00                	push   $0x0
81000b80:	ff 75 e4             	push   -0x1c(%ebp)
81000b83:	52                   	push   %edx
81000b84:	ff 75 08             	push   0x8(%ebp)
81000b87:	ff d0                	call   *%eax
81000b89:	83 c4 10             	add    $0x10,%esp
81000b8c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b8f:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b93:	75 1d                	jne    81000bb2 <__sflush_r+0x12f>
81000b95:	8b 45 08             	mov    0x8(%ebp),%eax
81000b98:	8b 00                	mov    (%eax),%eax
81000b9a:	85 c0                	test   %eax,%eax
81000b9c:	74 14                	je     81000bb2 <__sflush_r+0x12f>
81000b9e:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba1:	8b 00                	mov    (%eax),%eax
81000ba3:	83 f8 1d             	cmp    $0x1d,%eax
81000ba6:	74 0a                	je     81000bb2 <__sflush_r+0x12f>
81000ba8:	8b 45 08             	mov    0x8(%ebp),%eax
81000bab:	8b 00                	mov    (%eax),%eax
81000bad:	83 f8 16             	cmp    $0x16,%eax
81000bb0:	75 6e                	jne    81000c20 <__sflush_r+0x19d>
81000bb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bb6:	80 e4 f7             	and    $0xf7,%ah
81000bb9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bbd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000bc4:	8b 43 10             	mov    0x10(%ebx),%eax
81000bc7:	89 03                	mov    %eax,(%ebx)
81000bc9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bcd:	98                   	cwtl   
81000bce:	25 00 10 00 00       	and    $0x1000,%eax
81000bd3:	85 c0                	test   %eax,%eax
81000bd5:	74 15                	je     81000bec <__sflush_r+0x169>
81000bd7:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000bdb:	75 09                	jne    81000be6 <__sflush_r+0x163>
81000bdd:	8b 45 08             	mov    0x8(%ebp),%eax
81000be0:	8b 00                	mov    (%eax),%eax
81000be2:	85 c0                	test   %eax,%eax
81000be4:	75 06                	jne    81000bec <__sflush_r+0x169>
81000be6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000be9:	89 43 50             	mov    %eax,0x50(%ebx)
81000bec:	8b 45 08             	mov    0x8(%ebp),%eax
81000bef:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000bf2:	89 10                	mov    %edx,(%eax)
81000bf4:	8b 43 30             	mov    0x30(%ebx),%eax
81000bf7:	85 c0                	test   %eax,%eax
81000bf9:	74 37                	je     81000c32 <__sflush_r+0x1af>
81000bfb:	8b 53 30             	mov    0x30(%ebx),%edx
81000bfe:	8d 43 40             	lea    0x40(%ebx),%eax
81000c01:	39 c2                	cmp    %eax,%edx
81000c03:	74 12                	je     81000c17 <__sflush_r+0x194>
81000c05:	8b 43 30             	mov    0x30(%ebx),%eax
81000c08:	83 ec 08             	sub    $0x8,%esp
81000c0b:	50                   	push   %eax
81000c0c:	ff 75 08             	push   0x8(%ebp)
81000c0f:	e8 fa 06 00 00       	call   8100130e <_free_r>
81000c14:	83 c4 10             	add    $0x10,%esp
81000c17:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000c1e:	eb 12                	jmp    81000c32 <__sflush_r+0x1af>
81000c20:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c24:	83 c8 40             	or     $0x40,%eax
81000c27:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000c30:	eb 6f                	jmp    81000ca1 <__sflush_r+0x21e>
81000c32:	b8 00 00 00 00       	mov    $0x0,%eax
81000c37:	eb 68                	jmp    81000ca1 <__sflush_r+0x21e>
81000c39:	8b 73 10             	mov    0x10(%ebx),%esi
81000c3c:	85 f6                	test   %esi,%esi
81000c3e:	75 07                	jne    81000c47 <__sflush_r+0x1c4>
81000c40:	b8 00 00 00 00       	mov    $0x0,%eax
81000c45:	eb 5a                	jmp    81000ca1 <__sflush_r+0x21e>
81000c47:	8b 03                	mov    (%ebx),%eax
81000c49:	29 f0                	sub    %esi,%eax
81000c4b:	89 c7                	mov    %eax,%edi
81000c4d:	89 33                	mov    %esi,(%ebx)
81000c4f:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000c53:	83 e0 03             	and    $0x3,%eax
81000c56:	85 c0                	test   %eax,%eax
81000c58:	75 05                	jne    81000c5f <__sflush_r+0x1dc>
81000c5a:	8b 43 14             	mov    0x14(%ebx),%eax
81000c5d:	eb 05                	jmp    81000c64 <__sflush_r+0x1e1>
81000c5f:	b8 00 00 00 00       	mov    $0x0,%eax
81000c64:	89 43 08             	mov    %eax,0x8(%ebx)
81000c67:	eb 2f                	jmp    81000c98 <__sflush_r+0x215>
81000c69:	8b 43 24             	mov    0x24(%ebx),%eax
81000c6c:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000c6f:	57                   	push   %edi
81000c70:	56                   	push   %esi
81000c71:	52                   	push   %edx
81000c72:	ff 75 08             	push   0x8(%ebp)
81000c75:	ff d0                	call   *%eax
81000c77:	83 c4 10             	add    $0x10,%esp
81000c7a:	85 c0                	test   %eax,%eax
81000c7c:	7f 12                	jg     81000c90 <__sflush_r+0x20d>
81000c7e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c82:	83 c8 40             	or     $0x40,%eax
81000c85:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000c8e:	eb 11                	jmp    81000ca1 <__sflush_r+0x21e>
81000c90:	89 c1                	mov    %eax,%ecx
81000c92:	89 c8                	mov    %ecx,%eax
81000c94:	01 c6                	add    %eax,%esi
81000c96:	29 cf                	sub    %ecx,%edi
81000c98:	85 ff                	test   %edi,%edi
81000c9a:	7f cd                	jg     81000c69 <__sflush_r+0x1e6>
81000c9c:	b8 00 00 00 00       	mov    $0x0,%eax
81000ca1:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000ca4:	5b                   	pop    %ebx
81000ca5:	5e                   	pop    %esi
81000ca6:	5f                   	pop    %edi
81000ca7:	5d                   	pop    %ebp
81000ca8:	c3                   	ret    

81000ca9 <_fflush_r>:
81000ca9:	55                   	push   %ebp
81000caa:	89 e5                	mov    %esp,%ebp
81000cac:	53                   	push   %ebx
81000cad:	83 ec 14             	sub    $0x14,%esp
81000cb0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000cb3:	8b 45 08             	mov    0x8(%ebp),%eax
81000cb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cb9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000cbd:	74 18                	je     81000cd7 <_fflush_r+0x2e>
81000cbf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cc2:	8b 40 38             	mov    0x38(%eax),%eax
81000cc5:	85 c0                	test   %eax,%eax
81000cc7:	75 0e                	jne    81000cd7 <_fflush_r+0x2e>
81000cc9:	83 ec 0c             	sub    $0xc,%esp
81000ccc:	ff 75 f4             	push   -0xc(%ebp)
81000ccf:	e8 d8 04 00 00       	call   810011ac <__sinit>
81000cd4:	83 c4 10             	add    $0x10,%esp
81000cd7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000cdb:	66 85 c0             	test   %ax,%ax
81000cde:	75 07                	jne    81000ce7 <_fflush_r+0x3e>
81000ce0:	b8 00 00 00 00       	mov    $0x0,%eax
81000ce5:	eb 15                	jmp    81000cfc <_fflush_r+0x53>
81000ce7:	83 ec 08             	sub    $0x8,%esp
81000cea:	53                   	push   %ebx
81000ceb:	ff 75 08             	push   0x8(%ebp)
81000cee:	e8 90 fd ff ff       	call   81000a83 <__sflush_r>
81000cf3:	83 c4 10             	add    $0x10,%esp
81000cf6:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000cf9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000cfc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000cff:	c9                   	leave  
81000d00:	c3                   	ret    

81000d01 <fflush>:
81000d01:	55                   	push   %ebp
81000d02:	89 e5                	mov    %esp,%ebp
81000d04:	83 ec 08             	sub    $0x8,%esp
81000d07:	8b 55 08             	mov    0x8(%ebp),%edx
81000d0a:	85 d2                	test   %edx,%edx
81000d0c:	75 18                	jne    81000d26 <fflush+0x25>
81000d0e:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000d13:	83 ec 08             	sub    $0x8,%esp
81000d16:	68 a9 0c 00 81       	push   $0x81000ca9
81000d1b:	50                   	push   %eax
81000d1c:	e8 91 0b 00 00       	call   810018b2 <_fwalk_reent>
81000d21:	83 c4 10             	add    $0x10,%esp
81000d24:	eb 12                	jmp    81000d38 <fflush+0x37>
81000d26:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81000d2b:	83 ec 08             	sub    $0x8,%esp
81000d2e:	52                   	push   %edx
81000d2f:	50                   	push   %eax
81000d30:	e8 74 ff ff ff       	call   81000ca9 <_fflush_r>
81000d35:	83 c4 10             	add    $0x10,%esp
81000d38:	c9                   	leave  
81000d39:	c3                   	ret    

81000d3a <_fgets_r>:
81000d3a:	55                   	push   %ebp
81000d3b:	89 e5                	mov    %esp,%ebp
81000d3d:	83 ec 28             	sub    $0x28,%esp
81000d40:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000d44:	7f 0a                	jg     81000d50 <_fgets_r+0x16>
81000d46:	b8 00 00 00 00       	mov    $0x0,%eax
81000d4b:	e9 46 01 00 00       	jmp    81000e96 <_fgets_r+0x15c>
81000d50:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d53:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d56:	8b 45 08             	mov    0x8(%ebp),%eax
81000d59:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000d5c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000d60:	74 18                	je     81000d7a <_fgets_r+0x40>
81000d62:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000d65:	8b 40 38             	mov    0x38(%eax),%eax
81000d68:	85 c0                	test   %eax,%eax
81000d6a:	75 0e                	jne    81000d7a <_fgets_r+0x40>
81000d6c:	83 ec 0c             	sub    $0xc,%esp
81000d6f:	ff 75 ec             	push   -0x14(%ebp)
81000d72:	e8 35 04 00 00       	call   810011ac <__sinit>
81000d77:	83 c4 10             	add    $0x10,%esp
81000d7a:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000d7e:	8b 45 14             	mov    0x14(%ebp),%eax
81000d81:	8b 40 04             	mov    0x4(%eax),%eax
81000d84:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d87:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d8b:	75 34                	jne    81000dc1 <_fgets_r+0x87>
81000d8d:	83 ec 08             	sub    $0x8,%esp
81000d90:	ff 75 14             	push   0x14(%ebp)
81000d93:	ff 75 08             	push   0x8(%ebp)
81000d96:	e8 d9 33 00 00       	call   81004174 <__srefill_r>
81000d9b:	83 c4 10             	add    $0x10,%esp
81000d9e:	85 c0                	test   %eax,%eax
81000da0:	74 16                	je     81000db8 <_fgets_r+0x7e>
81000da2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000da5:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000da8:	0f 85 de 00 00 00    	jne    81000e8c <_fgets_r+0x152>
81000dae:	b8 00 00 00 00       	mov    $0x0,%eax
81000db3:	e9 de 00 00 00       	jmp    81000e96 <_fgets_r+0x15c>
81000db8:	8b 45 14             	mov    0x14(%ebp),%eax
81000dbb:	8b 40 04             	mov    0x4(%eax),%eax
81000dbe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000dc1:	8b 45 14             	mov    0x14(%ebp),%eax
81000dc4:	8b 00                	mov    (%eax),%eax
81000dc6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000dc9:	8b 45 10             	mov    0x10(%ebp),%eax
81000dcc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000dcf:	76 06                	jbe    81000dd7 <_fgets_r+0x9d>
81000dd1:	8b 45 10             	mov    0x10(%ebp),%eax
81000dd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000dd7:	83 ec 04             	sub    $0x4,%esp
81000dda:	ff 75 f4             	push   -0xc(%ebp)
81000ddd:	6a 0a                	push   $0xa
81000ddf:	ff 75 e8             	push   -0x18(%ebp)
81000de2:	e8 f9 24 00 00       	call   810032e0 <memchr>
81000de7:	83 c4 10             	add    $0x10,%esp
81000dea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ded:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000df1:	74 4a                	je     81000e3d <_fgets_r+0x103>
81000df3:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000df7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000dfa:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000dfd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e00:	8b 45 14             	mov    0x14(%ebp),%eax
81000e03:	8b 40 04             	mov    0x4(%eax),%eax
81000e06:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e09:	89 c2                	mov    %eax,%edx
81000e0b:	8b 45 14             	mov    0x14(%ebp),%eax
81000e0e:	89 50 04             	mov    %edx,0x4(%eax)
81000e11:	8b 45 14             	mov    0x14(%ebp),%eax
81000e14:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000e17:	89 10                	mov    %edx,(%eax)
81000e19:	83 ec 04             	sub    $0x4,%esp
81000e1c:	ff 75 f4             	push   -0xc(%ebp)
81000e1f:	ff 75 e8             	push   -0x18(%ebp)
81000e22:	ff 75 f0             	push   -0x10(%ebp)
81000e25:	e8 9e 25 00 00       	call   810033c8 <memcpy>
81000e2a:	83 c4 10             	add    $0x10,%esp
81000e2d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000e30:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e33:	01 d0                	add    %edx,%eax
81000e35:	c6 00 00             	movb   $0x0,(%eax)
81000e38:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e3b:	eb 59                	jmp    81000e96 <_fgets_r+0x15c>
81000e3d:	8b 45 14             	mov    0x14(%ebp),%eax
81000e40:	8b 40 04             	mov    0x4(%eax),%eax
81000e43:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e46:	89 c2                	mov    %eax,%edx
81000e48:	8b 45 14             	mov    0x14(%ebp),%eax
81000e4b:	89 50 04             	mov    %edx,0x4(%eax)
81000e4e:	8b 45 14             	mov    0x14(%ebp),%eax
81000e51:	8b 10                	mov    (%eax),%edx
81000e53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e56:	01 c2                	add    %eax,%edx
81000e58:	8b 45 14             	mov    0x14(%ebp),%eax
81000e5b:	89 10                	mov    %edx,(%eax)
81000e5d:	83 ec 04             	sub    $0x4,%esp
81000e60:	ff 75 f4             	push   -0xc(%ebp)
81000e63:	ff 75 e8             	push   -0x18(%ebp)
81000e66:	ff 75 f0             	push   -0x10(%ebp)
81000e69:	e8 5a 25 00 00       	call   810033c8 <memcpy>
81000e6e:	83 c4 10             	add    $0x10,%esp
81000e71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e74:	01 45 f0             	add    %eax,-0x10(%ebp)
81000e77:	8b 45 10             	mov    0x10(%ebp),%eax
81000e7a:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e7d:	89 45 10             	mov    %eax,0x10(%ebp)
81000e80:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000e84:	0f 85 f4 fe ff ff    	jne    81000d7e <_fgets_r+0x44>
81000e8a:	eb 01                	jmp    81000e8d <_fgets_r+0x153>
81000e8c:	90                   	nop
81000e8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e90:	c6 00 00             	movb   $0x0,(%eax)
81000e93:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e96:	c9                   	leave  
81000e97:	c3                   	ret    

81000e98 <fgets>:
81000e98:	55                   	push   %ebp
81000e99:	89 e5                	mov    %esp,%ebp
81000e9b:	83 ec 08             	sub    $0x8,%esp
81000e9e:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81000ea3:	ff 75 10             	push   0x10(%ebp)
81000ea6:	ff 75 0c             	push   0xc(%ebp)
81000ea9:	ff 75 08             	push   0x8(%ebp)
81000eac:	50                   	push   %eax
81000ead:	e8 88 fe ff ff       	call   81000d3a <_fgets_r>
81000eb2:	83 c4 10             	add    $0x10,%esp
81000eb5:	c9                   	leave  
81000eb6:	c3                   	ret    

81000eb7 <std>:
81000eb7:	55                   	push   %ebp
81000eb8:	89 e5                	mov    %esp,%ebp
81000eba:	83 ec 08             	sub    $0x8,%esp
81000ebd:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ec6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec9:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000ed0:	8b 45 08             	mov    0x8(%ebp),%eax
81000ed3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000eda:	8b 45 0c             	mov    0xc(%ebp),%eax
81000edd:	89 c2                	mov    %eax,%edx
81000edf:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee2:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000ee6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000ef0:	8b 45 10             	mov    0x10(%ebp),%eax
81000ef3:	89 c2                	mov    %eax,%edx
81000ef5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef8:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000efc:	8b 45 08             	mov    0x8(%ebp),%eax
81000eff:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000f06:	8b 45 08             	mov    0x8(%ebp),%eax
81000f09:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000f10:	8b 45 08             	mov    0x8(%ebp),%eax
81000f13:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000f1a:	8b 45 08             	mov    0x8(%ebp),%eax
81000f1d:	83 c0 5c             	add    $0x5c,%eax
81000f20:	83 ec 04             	sub    $0x4,%esp
81000f23:	6a 08                	push   $0x8
81000f25:	6a 00                	push   $0x0
81000f27:	50                   	push   %eax
81000f28:	e8 e3 24 00 00       	call   81003410 <memset>
81000f2d:	83 c4 10             	add    $0x10,%esp
81000f30:	8b 45 08             	mov    0x8(%ebp),%eax
81000f33:	8b 55 08             	mov    0x8(%ebp),%edx
81000f36:	89 50 1c             	mov    %edx,0x1c(%eax)
81000f39:	8b 45 08             	mov    0x8(%ebp),%eax
81000f3c:	c7 40 20 b5 43 00 81 	movl   $0x810043b5,0x20(%eax)
81000f43:	8b 45 08             	mov    0x8(%ebp),%eax
81000f46:	c7 40 24 03 44 00 81 	movl   $0x81004403,0x24(%eax)
81000f4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000f50:	c7 40 28 5e 44 00 81 	movl   $0x8100445e,0x28(%eax)
81000f57:	8b 45 08             	mov    0x8(%ebp),%eax
81000f5a:	c7 40 2c a8 44 00 81 	movl   $0x810044a8,0x2c(%eax)
81000f61:	90                   	nop
81000f62:	c9                   	leave  
81000f63:	c3                   	ret    

81000f64 <stdin_init>:
81000f64:	55                   	push   %ebp
81000f65:	89 e5                	mov    %esp,%ebp
81000f67:	83 ec 08             	sub    $0x8,%esp
81000f6a:	83 ec 04             	sub    $0x4,%esp
81000f6d:	6a 00                	push   $0x0
81000f6f:	6a 04                	push   $0x4
81000f71:	ff 75 08             	push   0x8(%ebp)
81000f74:	e8 3e ff ff ff       	call   81000eb7 <std>
81000f79:	83 c4 10             	add    $0x10,%esp
81000f7c:	90                   	nop
81000f7d:	c9                   	leave  
81000f7e:	c3                   	ret    

81000f7f <stdout_init>:
81000f7f:	55                   	push   %ebp
81000f80:	89 e5                	mov    %esp,%ebp
81000f82:	83 ec 08             	sub    $0x8,%esp
81000f85:	83 ec 04             	sub    $0x4,%esp
81000f88:	6a 01                	push   $0x1
81000f8a:	6a 09                	push   $0x9
81000f8c:	ff 75 08             	push   0x8(%ebp)
81000f8f:	e8 23 ff ff ff       	call   81000eb7 <std>
81000f94:	83 c4 10             	add    $0x10,%esp
81000f97:	90                   	nop
81000f98:	c9                   	leave  
81000f99:	c3                   	ret    

81000f9a <stderr_init>:
81000f9a:	55                   	push   %ebp
81000f9b:	89 e5                	mov    %esp,%ebp
81000f9d:	83 ec 08             	sub    $0x8,%esp
81000fa0:	83 ec 04             	sub    $0x4,%esp
81000fa3:	6a 02                	push   $0x2
81000fa5:	6a 12                	push   $0x12
81000fa7:	ff 75 08             	push   0x8(%ebp)
81000faa:	e8 08 ff ff ff       	call   81000eb7 <std>
81000faf:	83 c4 10             	add    $0x10,%esp
81000fb2:	90                   	nop
81000fb3:	c9                   	leave  
81000fb4:	c3                   	ret    

81000fb5 <__sfmoreglue>:
81000fb5:	55                   	push   %ebp
81000fb6:	89 e5                	mov    %esp,%ebp
81000fb8:	53                   	push   %ebx
81000fb9:	83 ec 14             	sub    $0x14,%esp
81000fbc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fbf:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000fc2:	6b c0 68             	imul   $0x68,%eax,%eax
81000fc5:	83 c0 74             	add    $0x74,%eax
81000fc8:	83 ec 08             	sub    $0x8,%esp
81000fcb:	50                   	push   %eax
81000fcc:	ff 75 08             	push   0x8(%ebp)
81000fcf:	e8 ea 1a 00 00       	call   81002abe <_malloc_r>
81000fd4:	83 c4 10             	add    $0x10,%esp
81000fd7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fda:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000fde:	75 07                	jne    81000fe7 <__sfmoreglue+0x32>
81000fe0:	b8 00 00 00 00       	mov    $0x0,%eax
81000fe5:	eb 38                	jmp    8100101f <__sfmoreglue+0x6a>
81000fe7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ff0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff3:	89 58 04             	mov    %ebx,0x4(%eax)
81000ff6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff9:	8d 50 0c             	lea    0xc(%eax),%edx
81000ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fff:	89 50 08             	mov    %edx,0x8(%eax)
81001002:	89 d8                	mov    %ebx,%eax
81001004:	6b c0 68             	imul   $0x68,%eax,%eax
81001007:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100100a:	83 c2 0c             	add    $0xc,%edx
8100100d:	83 ec 04             	sub    $0x4,%esp
81001010:	50                   	push   %eax
81001011:	6a 00                	push   $0x0
81001013:	52                   	push   %edx
81001014:	e8 f7 23 00 00       	call   81003410 <memset>
81001019:	83 c4 10             	add    $0x10,%esp
8100101c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001022:	c9                   	leave  
81001023:	c3                   	ret    

81001024 <__sfp>:
81001024:	55                   	push   %ebp
81001025:	89 e5                	mov    %esp,%ebp
81001027:	83 ec 18             	sub    $0x18,%esp
8100102a:	e8 16 02 00 00       	call   81001245 <__sfp_lock_acquire>
8100102f:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81001034:	8b 40 38             	mov    0x38(%eax),%eax
81001037:	85 c0                	test   %eax,%eax
81001039:	75 11                	jne    8100104c <__sfp+0x28>
8100103b:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81001040:	83 ec 0c             	sub    $0xc,%esp
81001043:	50                   	push   %eax
81001044:	e8 63 01 00 00       	call   810011ac <__sinit>
81001049:	83 c4 10             	add    $0x10,%esp
8100104c:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81001051:	05 e0 02 00 00       	add    $0x2e0,%eax
81001056:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001059:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100105c:	8b 40 08             	mov    0x8(%eax),%eax
8100105f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001062:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001065:	8b 40 04             	mov    0x4(%eax),%eax
81001068:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100106b:	eb 10                	jmp    8100107d <__sfp+0x59>
8100106d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001070:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001074:	66 85 c0             	test   %ax,%ax
81001077:	74 58                	je     810010d1 <__sfp+0xad>
81001079:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100107d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001081:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001085:	79 e6                	jns    8100106d <__sfp+0x49>
81001087:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100108a:	8b 00                	mov    (%eax),%eax
8100108c:	85 c0                	test   %eax,%eax
8100108e:	75 1e                	jne    810010ae <__sfp+0x8a>
81001090:	83 ec 08             	sub    $0x8,%esp
81001093:	6a 04                	push   $0x4
81001095:	ff 75 08             	push   0x8(%ebp)
81001098:	e8 18 ff ff ff       	call   81000fb5 <__sfmoreglue>
8100109d:	83 c4 10             	add    $0x10,%esp
810010a0:	8b 55 ec             	mov    -0x14(%ebp),%edx
810010a3:	89 02                	mov    %eax,(%edx)
810010a5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010a8:	8b 00                	mov    (%eax),%eax
810010aa:	85 c0                	test   %eax,%eax
810010ac:	74 0a                	je     810010b8 <__sfp+0x94>
810010ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010b1:	8b 00                	mov    (%eax),%eax
810010b3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010b6:	eb a1                	jmp    81001059 <__sfp+0x35>
810010b8:	90                   	nop
810010b9:	e8 8d 01 00 00       	call   8100124b <__sfp_lock_release>
810010be:	8b 45 08             	mov    0x8(%ebp),%eax
810010c1:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810010c7:	b8 00 00 00 00       	mov    $0x0,%eax
810010cc:	e9 9e 00 00 00       	jmp    8100116f <__sfp+0x14b>
810010d1:	90                   	nop
810010d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d5:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810010db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010de:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810010e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010e7:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810010ee:	e8 58 01 00 00       	call   8100124b <__sfp_lock_release>
810010f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810010fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ff:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001106:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001109:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001110:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001113:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100111a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100111d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001124:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001127:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100112e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001131:	83 c0 5c             	add    $0x5c,%eax
81001134:	83 ec 04             	sub    $0x4,%esp
81001137:	6a 08                	push   $0x8
81001139:	6a 00                	push   $0x0
8100113b:	50                   	push   %eax
8100113c:	e8 cf 22 00 00       	call   81003410 <memset>
81001141:	83 c4 10             	add    $0x10,%esp
81001144:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001147:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
8100114e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001151:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001158:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100115b:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001162:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001165:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100116c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100116f:	c9                   	leave  
81001170:	c3                   	ret    

81001171 <_cleanup_r>:
81001171:	55                   	push   %ebp
81001172:	89 e5                	mov    %esp,%ebp
81001174:	83 ec 18             	sub    $0x18,%esp
81001177:	c7 45 f4 92 4e 00 81 	movl   $0x81004e92,-0xc(%ebp)
8100117e:	83 ec 08             	sub    $0x8,%esp
81001181:	ff 75 f4             	push   -0xc(%ebp)
81001184:	ff 75 08             	push   0x8(%ebp)
81001187:	e8 26 07 00 00       	call   810018b2 <_fwalk_reent>
8100118c:	83 c4 10             	add    $0x10,%esp
8100118f:	90                   	nop
81001190:	c9                   	leave  
81001191:	c3                   	ret    

81001192 <_cleanup>:
81001192:	55                   	push   %ebp
81001193:	89 e5                	mov    %esp,%ebp
81001195:	83 ec 08             	sub    $0x8,%esp
81001198:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
8100119d:	83 ec 0c             	sub    $0xc,%esp
810011a0:	50                   	push   %eax
810011a1:	e8 cb ff ff ff       	call   81001171 <_cleanup_r>
810011a6:	83 c4 10             	add    $0x10,%esp
810011a9:	90                   	nop
810011aa:	c9                   	leave  
810011ab:	c3                   	ret    

810011ac <__sinit>:
810011ac:	55                   	push   %ebp
810011ad:	89 e5                	mov    %esp,%ebp
810011af:	83 ec 08             	sub    $0x8,%esp
810011b2:	e8 9a 00 00 00       	call   81001251 <__sinit_lock_acquire>
810011b7:	8b 45 08             	mov    0x8(%ebp),%eax
810011ba:	8b 40 38             	mov    0x38(%eax),%eax
810011bd:	85 c0                	test   %eax,%eax
810011bf:	74 07                	je     810011c8 <__sinit+0x1c>
810011c1:	e8 91 00 00 00       	call   81001257 <__sinit_lock_release>
810011c6:	eb 7b                	jmp    81001243 <__sinit+0x97>
810011c8:	8b 45 08             	mov    0x8(%ebp),%eax
810011cb:	c7 40 3c 71 11 00 81 	movl   $0x81001171,0x3c(%eax)
810011d2:	8b 45 08             	mov    0x8(%ebp),%eax
810011d5:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810011dc:	00 00 00 
810011df:	8b 45 08             	mov    0x8(%ebp),%eax
810011e2:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810011e9:	00 00 00 
810011ec:	8b 45 08             	mov    0x8(%ebp),%eax
810011ef:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810011f5:	8b 45 08             	mov    0x8(%ebp),%eax
810011f8:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810011fe:	8b 45 08             	mov    0x8(%ebp),%eax
81001201:	8b 40 04             	mov    0x4(%eax),%eax
81001204:	83 ec 0c             	sub    $0xc,%esp
81001207:	50                   	push   %eax
81001208:	e8 57 fd ff ff       	call   81000f64 <stdin_init>
8100120d:	83 c4 10             	add    $0x10,%esp
81001210:	8b 45 08             	mov    0x8(%ebp),%eax
81001213:	8b 40 08             	mov    0x8(%eax),%eax
81001216:	83 ec 0c             	sub    $0xc,%esp
81001219:	50                   	push   %eax
8100121a:	e8 60 fd ff ff       	call   81000f7f <stdout_init>
8100121f:	83 c4 10             	add    $0x10,%esp
81001222:	8b 45 08             	mov    0x8(%ebp),%eax
81001225:	8b 40 0c             	mov    0xc(%eax),%eax
81001228:	83 ec 0c             	sub    $0xc,%esp
8100122b:	50                   	push   %eax
8100122c:	e8 69 fd ff ff       	call   81000f9a <stderr_init>
81001231:	83 c4 10             	add    $0x10,%esp
81001234:	8b 45 08             	mov    0x8(%ebp),%eax
81001237:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
8100123e:	e8 14 00 00 00       	call   81001257 <__sinit_lock_release>
81001243:	c9                   	leave  
81001244:	c3                   	ret    

81001245 <__sfp_lock_acquire>:
81001245:	55                   	push   %ebp
81001246:	89 e5                	mov    %esp,%ebp
81001248:	90                   	nop
81001249:	5d                   	pop    %ebp
8100124a:	c3                   	ret    

8100124b <__sfp_lock_release>:
8100124b:	55                   	push   %ebp
8100124c:	89 e5                	mov    %esp,%ebp
8100124e:	90                   	nop
8100124f:	5d                   	pop    %ebp
81001250:	c3                   	ret    

81001251 <__sinit_lock_acquire>:
81001251:	55                   	push   %ebp
81001252:	89 e5                	mov    %esp,%ebp
81001254:	90                   	nop
81001255:	5d                   	pop    %ebp
81001256:	c3                   	ret    

81001257 <__sinit_lock_release>:
81001257:	55                   	push   %ebp
81001258:	89 e5                	mov    %esp,%ebp
8100125a:	90                   	nop
8100125b:	5d                   	pop    %ebp
8100125c:	c3                   	ret    

8100125d <__fp_lock>:
8100125d:	55                   	push   %ebp
8100125e:	89 e5                	mov    %esp,%ebp
81001260:	b8 00 00 00 00       	mov    $0x0,%eax
81001265:	5d                   	pop    %ebp
81001266:	c3                   	ret    

81001267 <__fp_unlock>:
81001267:	55                   	push   %ebp
81001268:	89 e5                	mov    %esp,%ebp
8100126a:	b8 00 00 00 00       	mov    $0x0,%eax
8100126f:	5d                   	pop    %ebp
81001270:	c3                   	ret    

81001271 <__fp_lock_all>:
81001271:	55                   	push   %ebp
81001272:	89 e5                	mov    %esp,%ebp
81001274:	83 ec 08             	sub    $0x8,%esp
81001277:	e8 c9 ff ff ff       	call   81001245 <__sfp_lock_acquire>
8100127c:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81001281:	83 ec 08             	sub    $0x8,%esp
81001284:	68 5d 12 00 81       	push   $0x8100125d
81001289:	50                   	push   %eax
8100128a:	e8 bb 05 00 00       	call   8100184a <_fwalk>
8100128f:	83 c4 10             	add    $0x10,%esp
81001292:	90                   	nop
81001293:	c9                   	leave  
81001294:	c3                   	ret    

81001295 <__fp_unlock_all>:
81001295:	55                   	push   %ebp
81001296:	89 e5                	mov    %esp,%ebp
81001298:	83 ec 08             	sub    $0x8,%esp
8100129b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810012a0:	83 ec 08             	sub    $0x8,%esp
810012a3:	68 67 12 00 81       	push   $0x81001267
810012a8:	50                   	push   %eax
810012a9:	e8 9c 05 00 00       	call   8100184a <_fwalk>
810012ae:	83 c4 10             	add    $0x10,%esp
810012b1:	e8 95 ff ff ff       	call   8100124b <__sfp_lock_release>
810012b6:	90                   	nop
810012b7:	c9                   	leave  
810012b8:	c3                   	ret    

810012b9 <_fiprintf_r>:
810012b9:	55                   	push   %ebp
810012ba:	89 e5                	mov    %esp,%ebp
810012bc:	83 ec 18             	sub    $0x18,%esp
810012bf:	8d 45 14             	lea    0x14(%ebp),%eax
810012c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012c8:	50                   	push   %eax
810012c9:	ff 75 10             	push   0x10(%ebp)
810012cc:	ff 75 0c             	push   0xc(%ebp)
810012cf:	ff 75 08             	push   0x8(%ebp)
810012d2:	e8 dc 23 00 00       	call   810036b3 <_vfiprintf_r>
810012d7:	83 c4 10             	add    $0x10,%esp
810012da:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e0:	c9                   	leave  
810012e1:	c3                   	ret    

810012e2 <fiprintf>:
810012e2:	55                   	push   %ebp
810012e3:	89 e5                	mov    %esp,%ebp
810012e5:	83 ec 18             	sub    $0x18,%esp
810012e8:	8d 45 10             	lea    0x10(%ebp),%eax
810012eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012ee:	8b 55 f0             	mov    -0x10(%ebp),%edx
810012f1:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810012f6:	52                   	push   %edx
810012f7:	ff 75 0c             	push   0xc(%ebp)
810012fa:	ff 75 08             	push   0x8(%ebp)
810012fd:	50                   	push   %eax
810012fe:	e8 b0 23 00 00       	call   810036b3 <_vfiprintf_r>
81001303:	83 c4 10             	add    $0x10,%esp
81001306:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001309:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130c:	c9                   	leave  
8100130d:	c3                   	ret    

8100130e <_free_r>:
8100130e:	55                   	push   %ebp
8100130f:	89 e5                	mov    %esp,%ebp
81001311:	53                   	push   %ebx
81001312:	83 ec 34             	sub    $0x34,%esp
81001315:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001319:	0f 84 c4 03 00 00    	je     810016e3 <_free_r+0x3d5>
8100131f:	83 ec 0c             	sub    $0xc,%esp
81001322:	ff 75 08             	push   0x8(%ebp)
81001325:	e8 6e 21 00 00       	call   81003498 <__malloc_lock>
8100132a:	83 c4 10             	add    $0x10,%esp
8100132d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001330:	83 e8 08             	sub    $0x8,%eax
81001333:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001336:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001339:	8b 40 04             	mov    0x4(%eax),%eax
8100133c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100133f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001342:	83 e0 fe             	and    $0xfffffffe,%eax
81001345:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001348:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100134b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100134e:	01 d0                	add    %edx,%eax
81001350:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001353:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001356:	8b 40 04             	mov    0x4(%eax),%eax
81001359:	83 e0 fc             	and    $0xfffffffc,%eax
8100135c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100135f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001364:	8b 40 08             	mov    0x8(%eax),%eax
81001367:	39 45 dc             	cmp    %eax,-0x24(%ebp)
8100136a:	0f 85 94 00 00 00    	jne    81001404 <_free_r+0xf6>
81001370:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001373:	01 45 f0             	add    %eax,-0x10(%ebp)
81001376:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001379:	83 e0 01             	and    $0x1,%eax
8100137c:	85 c0                	test   %eax,%eax
8100137e:	75 3a                	jne    810013ba <_free_r+0xac>
81001380:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001383:	8b 00                	mov    (%eax),%eax
81001385:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001388:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100138b:	f7 d8                	neg    %eax
8100138d:	01 45 f4             	add    %eax,-0xc(%ebp)
81001390:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001393:	01 45 f0             	add    %eax,-0x10(%ebp)
81001396:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001399:	8b 40 0c             	mov    0xc(%eax),%eax
8100139c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100139f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a2:	8b 40 08             	mov    0x8(%eax),%eax
810013a5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013a8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013ab:	8b 55 ec             	mov    -0x14(%ebp),%edx
810013ae:	89 50 0c             	mov    %edx,0xc(%eax)
810013b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013b4:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013b7:	89 50 08             	mov    %edx,0x8(%eax)
810013ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013bd:	83 c8 01             	or     $0x1,%eax
810013c0:	89 c2                	mov    %eax,%edx
810013c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c5:	89 50 04             	mov    %edx,0x4(%eax)
810013c8:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810013cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d0:	89 42 08             	mov    %eax,0x8(%edx)
810013d3:	a1 c8 79 00 81       	mov    0x810079c8,%eax
810013d8:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810013db:	72 14                	jb     810013f1 <_free_r+0xe3>
810013dd:	a1 a0 81 00 81       	mov    0x810081a0,%eax
810013e2:	83 ec 08             	sub    $0x8,%esp
810013e5:	50                   	push   %eax
810013e6:	ff 75 08             	push   0x8(%ebp)
810013e9:	e8 fb 02 00 00       	call   810016e9 <_malloc_trim_r>
810013ee:	83 c4 10             	add    $0x10,%esp
810013f1:	83 ec 0c             	sub    $0xc,%esp
810013f4:	ff 75 08             	push   0x8(%ebp)
810013f7:	e8 a2 20 00 00       	call   8100349e <__malloc_unlock>
810013fc:	83 c4 10             	add    $0x10,%esp
810013ff:	e9 e0 02 00 00       	jmp    810016e4 <_free_r+0x3d6>
81001404:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001407:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100140a:	89 50 04             	mov    %edx,0x4(%eax)
8100140d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001414:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001417:	83 e0 01             	and    $0x1,%eax
8100141a:	85 c0                	test   %eax,%eax
8100141c:	75 52                	jne    81001470 <_free_r+0x162>
8100141e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001421:	8b 00                	mov    (%eax),%eax
81001423:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001426:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001429:	f7 d8                	neg    %eax
8100142b:	01 45 f4             	add    %eax,-0xc(%ebp)
8100142e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001431:	01 45 f0             	add    %eax,-0x10(%ebp)
81001434:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001437:	8b 40 08             	mov    0x8(%eax),%eax
8100143a:	ba c8 75 00 81       	mov    $0x810075c8,%edx
8100143f:	39 d0                	cmp    %edx,%eax
81001441:	75 09                	jne    8100144c <_free_r+0x13e>
81001443:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100144a:	eb 24                	jmp    81001470 <_free_r+0x162>
8100144c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100144f:	8b 40 0c             	mov    0xc(%eax),%eax
81001452:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001455:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001458:	8b 40 08             	mov    0x8(%eax),%eax
8100145b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100145e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001461:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001464:	89 50 0c             	mov    %edx,0xc(%eax)
81001467:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100146a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100146d:	89 50 08             	mov    %edx,0x8(%eax)
81001470:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001473:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001476:	01 d0                	add    %edx,%eax
81001478:	8b 40 04             	mov    0x4(%eax),%eax
8100147b:	83 e0 01             	and    $0x1,%eax
8100147e:	85 c0                	test   %eax,%eax
81001480:	75 75                	jne    810014f7 <_free_r+0x1e9>
81001482:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001485:	01 45 f0             	add    %eax,-0x10(%ebp)
81001488:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100148c:	75 45                	jne    810014d3 <_free_r+0x1c5>
8100148e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001491:	8b 40 08             	mov    0x8(%eax),%eax
81001494:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81001499:	39 d0                	cmp    %edx,%eax
8100149b:	75 36                	jne    810014d3 <_free_r+0x1c5>
8100149d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810014a4:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
810014a9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014ac:	89 50 0c             	mov    %edx,0xc(%eax)
810014af:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810014b4:	8b 40 0c             	mov    0xc(%eax),%eax
810014b7:	89 42 08             	mov    %eax,0x8(%edx)
810014ba:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810014bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c2:	89 50 0c             	mov    %edx,0xc(%eax)
810014c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c8:	8b 50 0c             	mov    0xc(%eax),%edx
810014cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ce:	89 50 08             	mov    %edx,0x8(%eax)
810014d1:	eb 24                	jmp    810014f7 <_free_r+0x1e9>
810014d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014d6:	8b 40 0c             	mov    0xc(%eax),%eax
810014d9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014dc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014df:	8b 40 08             	mov    0x8(%eax),%eax
810014e2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014e8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810014eb:	89 50 0c             	mov    %edx,0xc(%eax)
810014ee:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014f1:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014f4:	89 50 08             	mov    %edx,0x8(%eax)
810014f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014fa:	83 c8 01             	or     $0x1,%eax
810014fd:	89 c2                	mov    %eax,%edx
810014ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001502:	89 50 04             	mov    %edx,0x4(%eax)
81001505:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001508:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100150b:	01 c2                	add    %eax,%edx
8100150d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001510:	89 02                	mov    %eax,(%edx)
81001512:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001516:	0f 85 b7 01 00 00    	jne    810016d3 <_free_r+0x3c5>
8100151c:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001523:	77 7f                	ja     810015a4 <_free_r+0x296>
81001525:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001528:	c1 e8 03             	shr    $0x3,%eax
8100152b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100152e:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001533:	8b 58 04             	mov    0x4(%eax),%ebx
81001536:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001539:	8d 50 03             	lea    0x3(%eax),%edx
8100153c:	85 c0                	test   %eax,%eax
8100153e:	0f 48 c2             	cmovs  %edx,%eax
81001541:	c1 f8 02             	sar    $0x2,%eax
81001544:	ba 01 00 00 00       	mov    $0x1,%edx
81001549:	89 c1                	mov    %eax,%ecx
8100154b:	d3 e2                	shl    %cl,%edx
8100154d:	89 d0                	mov    %edx,%eax
8100154f:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81001554:	09 d8                	or     %ebx,%eax
81001556:	89 42 04             	mov    %eax,0x4(%edx)
81001559:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100155c:	83 c0 01             	add    $0x1,%eax
8100155f:	01 c0                	add    %eax,%eax
81001561:	c1 e0 02             	shl    $0x2,%eax
81001564:	05 c0 75 00 81       	add    $0x810075c0,%eax
81001569:	83 e8 08             	sub    $0x8,%eax
8100156c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100156f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001572:	8b 40 08             	mov    0x8(%eax),%eax
81001575:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001578:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100157b:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100157e:	89 50 0c             	mov    %edx,0xc(%eax)
81001581:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001584:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001587:	89 50 08             	mov    %edx,0x8(%eax)
8100158a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100158d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001590:	89 50 08             	mov    %edx,0x8(%eax)
81001593:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001596:	8b 50 08             	mov    0x8(%eax),%edx
81001599:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100159c:	89 50 0c             	mov    %edx,0xc(%eax)
8100159f:	e9 2f 01 00 00       	jmp    810016d3 <_free_r+0x3c5>
810015a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015a7:	c1 e8 09             	shr    $0x9,%eax
810015aa:	85 c0                	test   %eax,%eax
810015ac:	75 08                	jne    810015b6 <_free_r+0x2a8>
810015ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015b1:	c1 e8 03             	shr    $0x3,%eax
810015b4:	eb 77                	jmp    8100162d <_free_r+0x31f>
810015b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015b9:	c1 e8 09             	shr    $0x9,%eax
810015bc:	83 f8 04             	cmp    $0x4,%eax
810015bf:	77 0b                	ja     810015cc <_free_r+0x2be>
810015c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015c4:	c1 e8 06             	shr    $0x6,%eax
810015c7:	83 c0 38             	add    $0x38,%eax
810015ca:	eb 61                	jmp    8100162d <_free_r+0x31f>
810015cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015cf:	c1 e8 09             	shr    $0x9,%eax
810015d2:	83 f8 14             	cmp    $0x14,%eax
810015d5:	77 0b                	ja     810015e2 <_free_r+0x2d4>
810015d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015da:	c1 e8 09             	shr    $0x9,%eax
810015dd:	83 c0 5b             	add    $0x5b,%eax
810015e0:	eb 4b                	jmp    8100162d <_free_r+0x31f>
810015e2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015e5:	c1 e8 09             	shr    $0x9,%eax
810015e8:	83 f8 54             	cmp    $0x54,%eax
810015eb:	77 0b                	ja     810015f8 <_free_r+0x2ea>
810015ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015f0:	c1 e8 0c             	shr    $0xc,%eax
810015f3:	83 c0 6e             	add    $0x6e,%eax
810015f6:	eb 35                	jmp    8100162d <_free_r+0x31f>
810015f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015fb:	c1 e8 09             	shr    $0x9,%eax
810015fe:	3d 54 01 00 00       	cmp    $0x154,%eax
81001603:	77 0b                	ja     81001610 <_free_r+0x302>
81001605:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001608:	c1 e8 0f             	shr    $0xf,%eax
8100160b:	83 c0 77             	add    $0x77,%eax
8100160e:	eb 1d                	jmp    8100162d <_free_r+0x31f>
81001610:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001613:	c1 e8 09             	shr    $0x9,%eax
81001616:	3d 54 05 00 00       	cmp    $0x554,%eax
8100161b:	77 0b                	ja     81001628 <_free_r+0x31a>
8100161d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001620:	c1 e8 12             	shr    $0x12,%eax
81001623:	83 c0 7c             	add    $0x7c,%eax
81001626:	eb 05                	jmp    8100162d <_free_r+0x31f>
81001628:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100162d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001630:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001633:	83 c0 01             	add    $0x1,%eax
81001636:	01 c0                	add    %eax,%eax
81001638:	c1 e0 02             	shl    $0x2,%eax
8100163b:	05 c0 75 00 81       	add    $0x810075c0,%eax
81001640:	83 e8 08             	sub    $0x8,%eax
81001643:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001646:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001649:	8b 40 08             	mov    0x8(%eax),%eax
8100164c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100164f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001652:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001655:	75 36                	jne    8100168d <_free_r+0x37f>
81001657:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100165c:	8b 58 04             	mov    0x4(%eax),%ebx
8100165f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001662:	8d 50 03             	lea    0x3(%eax),%edx
81001665:	85 c0                	test   %eax,%eax
81001667:	0f 48 c2             	cmovs  %edx,%eax
8100166a:	c1 f8 02             	sar    $0x2,%eax
8100166d:	ba 01 00 00 00       	mov    $0x1,%edx
81001672:	89 c1                	mov    %eax,%ecx
81001674:	d3 e2                	shl    %cl,%edx
81001676:	89 d0                	mov    %edx,%eax
81001678:	ba c0 75 00 81       	mov    $0x810075c0,%edx
8100167d:	09 d8                	or     %ebx,%eax
8100167f:	89 42 04             	mov    %eax,0x4(%edx)
81001682:	eb 28                	jmp    810016ac <_free_r+0x39e>
81001684:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001687:	8b 40 08             	mov    0x8(%eax),%eax
8100168a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100168d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001690:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001693:	74 0e                	je     810016a3 <_free_r+0x395>
81001695:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001698:	8b 40 04             	mov    0x4(%eax),%eax
8100169b:	83 e0 fc             	and    $0xfffffffc,%eax
8100169e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810016a1:	72 e1                	jb     81001684 <_free_r+0x376>
810016a3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016a6:	8b 40 0c             	mov    0xc(%eax),%eax
810016a9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016af:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016b2:	89 50 0c             	mov    %edx,0xc(%eax)
810016b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810016bb:	89 50 08             	mov    %edx,0x8(%eax)
810016be:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016c1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016c4:	89 50 08             	mov    %edx,0x8(%eax)
810016c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016ca:	8b 50 08             	mov    0x8(%eax),%edx
810016cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016d0:	89 50 0c             	mov    %edx,0xc(%eax)
810016d3:	83 ec 0c             	sub    $0xc,%esp
810016d6:	ff 75 08             	push   0x8(%ebp)
810016d9:	e8 c0 1d 00 00       	call   8100349e <__malloc_unlock>
810016de:	83 c4 10             	add    $0x10,%esp
810016e1:	eb 01                	jmp    810016e4 <_free_r+0x3d6>
810016e3:	90                   	nop
810016e4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810016e7:	c9                   	leave  
810016e8:	c3                   	ret    

810016e9 <_malloc_trim_r>:
810016e9:	55                   	push   %ebp
810016ea:	89 e5                	mov    %esp,%ebp
810016ec:	83 ec 28             	sub    $0x28,%esp
810016ef:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810016f6:	83 ec 0c             	sub    $0xc,%esp
810016f9:	ff 75 08             	push   0x8(%ebp)
810016fc:	e8 97 1d 00 00       	call   81003498 <__malloc_lock>
81001701:	83 c4 10             	add    $0x10,%esp
81001704:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001709:	8b 40 08             	mov    0x8(%eax),%eax
8100170c:	8b 40 04             	mov    0x4(%eax),%eax
8100170f:	83 e0 fc             	and    $0xfffffffc,%eax
81001712:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001715:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001718:	2b 45 0c             	sub    0xc(%ebp),%eax
8100171b:	89 c2                	mov    %eax,%edx
8100171d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001720:	01 d0                	add    %edx,%eax
81001722:	83 e8 11             	sub    $0x11,%eax
81001725:	ba 00 00 00 00       	mov    $0x0,%edx
8100172a:	f7 75 f4             	divl   -0xc(%ebp)
8100172d:	83 e8 01             	sub    $0x1,%eax
81001730:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001734:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001737:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100173d:	7d 18                	jge    81001757 <_malloc_trim_r+0x6e>
8100173f:	83 ec 0c             	sub    $0xc,%esp
81001742:	ff 75 08             	push   0x8(%ebp)
81001745:	e8 54 1d 00 00       	call   8100349e <__malloc_unlock>
8100174a:	83 c4 10             	add    $0x10,%esp
8100174d:	b8 00 00 00 00       	mov    $0x0,%eax
81001752:	e9 f1 00 00 00       	jmp    81001848 <_malloc_trim_r+0x15f>
81001757:	83 ec 08             	sub    $0x8,%esp
8100175a:	6a 00                	push   $0x0
8100175c:	ff 75 08             	push   0x8(%ebp)
8100175f:	e8 11 2c 00 00       	call   81004375 <_sbrk_r>
81001764:	83 c4 10             	add    $0x10,%esp
81001767:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100176a:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100176f:	8b 50 08             	mov    0x8(%eax),%edx
81001772:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001775:	01 d0                	add    %edx,%eax
81001777:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100177a:	74 18                	je     81001794 <_malloc_trim_r+0xab>
8100177c:	83 ec 0c             	sub    $0xc,%esp
8100177f:	ff 75 08             	push   0x8(%ebp)
81001782:	e8 17 1d 00 00       	call   8100349e <__malloc_unlock>
81001787:	83 c4 10             	add    $0x10,%esp
8100178a:	b8 00 00 00 00       	mov    $0x0,%eax
8100178f:	e9 b4 00 00 00       	jmp    81001848 <_malloc_trim_r+0x15f>
81001794:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001797:	f7 d8                	neg    %eax
81001799:	83 ec 08             	sub    $0x8,%esp
8100179c:	50                   	push   %eax
8100179d:	ff 75 08             	push   0x8(%ebp)
810017a0:	e8 d0 2b 00 00       	call   81004375 <_sbrk_r>
810017a5:	83 c4 10             	add    $0x10,%esp
810017a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810017ab:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810017af:	75 61                	jne    81001812 <_malloc_trim_r+0x129>
810017b1:	83 ec 08             	sub    $0x8,%esp
810017b4:	6a 00                	push   $0x0
810017b6:	ff 75 08             	push   0x8(%ebp)
810017b9:	e8 b7 2b 00 00       	call   81004375 <_sbrk_r>
810017be:	83 c4 10             	add    $0x10,%esp
810017c1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017c4:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810017c9:	8b 50 08             	mov    0x8(%eax),%edx
810017cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017cf:	29 d0                	sub    %edx,%eax
810017d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017d4:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810017d8:	7e 23                	jle    810017fd <_malloc_trim_r+0x114>
810017da:	8b 15 cc 79 00 81    	mov    0x810079cc,%edx
810017e0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017e3:	29 d0                	sub    %edx,%eax
810017e5:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810017ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017ed:	83 c8 01             	or     $0x1,%eax
810017f0:	89 c2                	mov    %eax,%edx
810017f2:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810017f7:	8b 40 08             	mov    0x8(%eax),%eax
810017fa:	89 50 04             	mov    %edx,0x4(%eax)
810017fd:	83 ec 0c             	sub    $0xc,%esp
81001800:	ff 75 08             	push   0x8(%ebp)
81001803:	e8 96 1c 00 00       	call   8100349e <__malloc_unlock>
81001808:	83 c4 10             	add    $0x10,%esp
8100180b:	b8 00 00 00 00       	mov    $0x0,%eax
81001810:	eb 36                	jmp    81001848 <_malloc_trim_r+0x15f>
81001812:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001815:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001818:	83 c8 01             	or     $0x1,%eax
8100181b:	89 c2                	mov    %eax,%edx
8100181d:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001822:	8b 40 08             	mov    0x8(%eax),%eax
81001825:	89 50 04             	mov    %edx,0x4(%eax)
81001828:	a1 c0 81 00 81       	mov    0x810081c0,%eax
8100182d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001830:	a3 c0 81 00 81       	mov    %eax,0x810081c0
81001835:	83 ec 0c             	sub    $0xc,%esp
81001838:	ff 75 08             	push   0x8(%ebp)
8100183b:	e8 5e 1c 00 00       	call   8100349e <__malloc_unlock>
81001840:	83 c4 10             	add    $0x10,%esp
81001843:	b8 01 00 00 00       	mov    $0x1,%eax
81001848:	c9                   	leave  
81001849:	c3                   	ret    

8100184a <_fwalk>:
8100184a:	55                   	push   %ebp
8100184b:	89 e5                	mov    %esp,%ebp
8100184d:	57                   	push   %edi
8100184e:	56                   	push   %esi
8100184f:	53                   	push   %ebx
81001850:	83 ec 1c             	sub    $0x1c,%esp
81001853:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100185a:	8b 45 08             	mov    0x8(%ebp),%eax
8100185d:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001863:	eb 3e                	jmp    810018a3 <_fwalk+0x59>
81001865:	8b 5e 08             	mov    0x8(%esi),%ebx
81001868:	8b 7e 04             	mov    0x4(%esi),%edi
8100186b:	eb 2d                	jmp    8100189a <_fwalk+0x50>
8100186d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001871:	66 85 c0             	test   %ax,%ax
81001874:	74 21                	je     81001897 <_fwalk+0x4d>
81001876:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100187a:	66 83 f8 01          	cmp    $0x1,%ax
8100187e:	74 17                	je     81001897 <_fwalk+0x4d>
81001880:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001884:	66 83 f8 ff          	cmp    $0xffff,%ax
81001888:	74 0d                	je     81001897 <_fwalk+0x4d>
8100188a:	83 ec 0c             	sub    $0xc,%esp
8100188d:	53                   	push   %ebx
8100188e:	ff 55 0c             	call   *0xc(%ebp)
81001891:	83 c4 10             	add    $0x10,%esp
81001894:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001897:	83 c3 68             	add    $0x68,%ebx
8100189a:	83 ef 01             	sub    $0x1,%edi
8100189d:	85 ff                	test   %edi,%edi
8100189f:	79 cc                	jns    8100186d <_fwalk+0x23>
810018a1:	8b 36                	mov    (%esi),%esi
810018a3:	85 f6                	test   %esi,%esi
810018a5:	75 be                	jne    81001865 <_fwalk+0x1b>
810018a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018aa:	8d 65 f4             	lea    -0xc(%ebp),%esp
810018ad:	5b                   	pop    %ebx
810018ae:	5e                   	pop    %esi
810018af:	5f                   	pop    %edi
810018b0:	5d                   	pop    %ebp
810018b1:	c3                   	ret    

810018b2 <_fwalk_reent>:
810018b2:	55                   	push   %ebp
810018b3:	89 e5                	mov    %esp,%ebp
810018b5:	57                   	push   %edi
810018b6:	56                   	push   %esi
810018b7:	53                   	push   %ebx
810018b8:	83 ec 1c             	sub    $0x1c,%esp
810018bb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018c2:	8b 45 08             	mov    0x8(%ebp),%eax
810018c5:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810018cb:	eb 41                	jmp    8100190e <_fwalk_reent+0x5c>
810018cd:	8b 5e 08             	mov    0x8(%esi),%ebx
810018d0:	8b 7e 04             	mov    0x4(%esi),%edi
810018d3:	eb 30                	jmp    81001905 <_fwalk_reent+0x53>
810018d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810018d9:	66 85 c0             	test   %ax,%ax
810018dc:	74 24                	je     81001902 <_fwalk_reent+0x50>
810018de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810018e2:	66 83 f8 01          	cmp    $0x1,%ax
810018e6:	74 1a                	je     81001902 <_fwalk_reent+0x50>
810018e8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810018ec:	66 83 f8 ff          	cmp    $0xffff,%ax
810018f0:	74 10                	je     81001902 <_fwalk_reent+0x50>
810018f2:	83 ec 08             	sub    $0x8,%esp
810018f5:	53                   	push   %ebx
810018f6:	ff 75 08             	push   0x8(%ebp)
810018f9:	ff 55 0c             	call   *0xc(%ebp)
810018fc:	83 c4 10             	add    $0x10,%esp
810018ff:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001902:	83 c3 68             	add    $0x68,%ebx
81001905:	83 ef 01             	sub    $0x1,%edi
81001908:	85 ff                	test   %edi,%edi
8100190a:	79 c9                	jns    810018d5 <_fwalk_reent+0x23>
8100190c:	8b 36                	mov    (%esi),%esi
8100190e:	85 f6                	test   %esi,%esi
81001910:	75 bb                	jne    810018cd <_fwalk_reent+0x1b>
81001912:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001915:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001918:	5b                   	pop    %ebx
81001919:	5e                   	pop    %esi
8100191a:	5f                   	pop    %edi
8100191b:	5d                   	pop    %ebp
8100191c:	c3                   	ret    

8100191d <_fwrite_r>:
8100191d:	55                   	push   %ebp
8100191e:	89 e5                	mov    %esp,%ebp
81001920:	83 ec 28             	sub    $0x28,%esp
81001923:	8b 45 0c             	mov    0xc(%ebp),%eax
81001926:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001929:	8b 45 14             	mov    0x14(%ebp),%eax
8100192c:	0f af 45 10          	imul   0x10(%ebp),%eax
81001930:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001933:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001936:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001939:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100193c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100193f:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001942:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001945:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100194c:	8b 45 08             	mov    0x8(%ebp),%eax
8100194f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001952:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001956:	74 18                	je     81001970 <_fwrite_r+0x53>
81001958:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100195b:	8b 40 38             	mov    0x38(%eax),%eax
8100195e:	85 c0                	test   %eax,%eax
81001960:	75 0e                	jne    81001970 <_fwrite_r+0x53>
81001962:	83 ec 0c             	sub    $0xc,%esp
81001965:	ff 75 f0             	push   -0x10(%ebp)
81001968:	e8 3f f8 ff ff       	call   810011ac <__sinit>
8100196d:	83 c4 10             	add    $0x10,%esp
81001970:	8b 45 18             	mov    0x18(%ebp),%eax
81001973:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001977:	98                   	cwtl   
81001978:	25 00 20 00 00       	and    $0x2000,%eax
8100197d:	85 c0                	test   %eax,%eax
8100197f:	75 24                	jne    810019a5 <_fwrite_r+0x88>
81001981:	8b 45 18             	mov    0x18(%ebp),%eax
81001984:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001988:	80 cc 20             	or     $0x20,%ah
8100198b:	89 c2                	mov    %eax,%edx
8100198d:	8b 45 18             	mov    0x18(%ebp),%eax
81001990:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001994:	8b 45 18             	mov    0x18(%ebp),%eax
81001997:	8b 40 64             	mov    0x64(%eax),%eax
8100199a:	80 e4 df             	and    $0xdf,%ah
8100199d:	89 c2                	mov    %eax,%edx
8100199f:	8b 45 18             	mov    0x18(%ebp),%eax
810019a2:	89 50 64             	mov    %edx,0x64(%eax)
810019a5:	83 ec 04             	sub    $0x4,%esp
810019a8:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810019ab:	50                   	push   %eax
810019ac:	ff 75 18             	push   0x18(%ebp)
810019af:	ff 75 08             	push   0x8(%ebp)
810019b2:	e8 0d 39 00 00       	call   810052c4 <__sfvwrite_r>
810019b7:	83 c4 10             	add    $0x10,%esp
810019ba:	85 c0                	test   %eax,%eax
810019bc:	75 05                	jne    810019c3 <_fwrite_r+0xa6>
810019be:	8b 45 14             	mov    0x14(%ebp),%eax
810019c1:	eb 10                	jmp    810019d3 <_fwrite_r+0xb6>
810019c3:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019c9:	29 d0                	sub    %edx,%eax
810019cb:	ba 00 00 00 00       	mov    $0x0,%edx
810019d0:	f7 75 10             	divl   0x10(%ebp)
810019d3:	c9                   	leave  
810019d4:	c3                   	ret    

810019d5 <fwrite>:
810019d5:	55                   	push   %ebp
810019d6:	89 e5                	mov    %esp,%ebp
810019d8:	83 ec 08             	sub    $0x8,%esp
810019db:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810019e0:	83 ec 0c             	sub    $0xc,%esp
810019e3:	ff 75 14             	push   0x14(%ebp)
810019e6:	ff 75 10             	push   0x10(%ebp)
810019e9:	ff 75 0c             	push   0xc(%ebp)
810019ec:	ff 75 08             	push   0x8(%ebp)
810019ef:	50                   	push   %eax
810019f0:	e8 28 ff ff ff       	call   8100191d <_fwrite_r>
810019f5:	83 c4 20             	add    $0x20,%esp
810019f8:	c9                   	leave  
810019f9:	c3                   	ret    

810019fa <reverse_argv_elements>:
810019fa:	55                   	push   %ebp
810019fb:	89 e5                	mov    %esp,%ebp
810019fd:	83 ec 10             	sub    $0x10,%esp
81001a00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81001a07:	eb 5e                	jmp    81001a67 <reverse_argv_elements+0x6d>
81001a09:	8b 45 fc             	mov    -0x4(%ebp),%eax
81001a0c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a13:	8b 45 08             	mov    0x8(%ebp),%eax
81001a16:	01 d0                	add    %edx,%eax
81001a18:	8b 00                	mov    (%eax),%eax
81001a1a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81001a1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a20:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001a23:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001a28:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a2f:	8b 45 08             	mov    0x8(%ebp),%eax
81001a32:	01 d0                	add    %edx,%eax
81001a34:	8b 55 fc             	mov    -0x4(%ebp),%edx
81001a37:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001a3e:	8b 55 08             	mov    0x8(%ebp),%edx
81001a41:	01 ca                	add    %ecx,%edx
81001a43:	8b 00                	mov    (%eax),%eax
81001a45:	89 02                	mov    %eax,(%edx)
81001a47:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a4a:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001a4d:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001a52:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a59:	8b 45 08             	mov    0x8(%ebp),%eax
81001a5c:	01 c2                	add    %eax,%edx
81001a5e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81001a61:	89 02                	mov    %eax,(%edx)
81001a63:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81001a67:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a6a:	d1 f8                	sar    %eax
81001a6c:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81001a6f:	7c 98                	jl     81001a09 <reverse_argv_elements+0xf>
81001a71:	90                   	nop
81001a72:	90                   	nop
81001a73:	c9                   	leave  
81001a74:	c3                   	ret    

81001a75 <permute>:
81001a75:	55                   	push   %ebp
81001a76:	89 e5                	mov    %esp,%ebp
81001a78:	ff 75 0c             	push   0xc(%ebp)
81001a7b:	ff 75 08             	push   0x8(%ebp)
81001a7e:	e8 77 ff ff ff       	call   810019fa <reverse_argv_elements>
81001a83:	83 c4 08             	add    $0x8,%esp
81001a86:	8b 55 0c             	mov    0xc(%ebp),%edx
81001a89:	8b 45 10             	mov    0x10(%ebp),%eax
81001a8c:	01 d0                	add    %edx,%eax
81001a8e:	50                   	push   %eax
81001a8f:	ff 75 08             	push   0x8(%ebp)
81001a92:	e8 63 ff ff ff       	call   810019fa <reverse_argv_elements>
81001a97:	83 c4 08             	add    $0x8,%esp
81001a9a:	ff 75 10             	push   0x10(%ebp)
81001a9d:	ff 75 08             	push   0x8(%ebp)
81001aa0:	e8 55 ff ff ff       	call   810019fa <reverse_argv_elements>
81001aa5:	83 c4 08             	add    $0x8,%esp
81001aa8:	90                   	nop
81001aa9:	c9                   	leave  
81001aaa:	c3                   	ret    

81001aab <is_option>:
81001aab:	55                   	push   %ebp
81001aac:	89 e5                	mov    %esp,%ebp
81001aae:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001ab2:	74 1a                	je     81001ace <is_option+0x23>
81001ab4:	8b 45 08             	mov    0x8(%ebp),%eax
81001ab7:	0f b6 00             	movzbl (%eax),%eax
81001aba:	3c 2d                	cmp    $0x2d,%al
81001abc:	74 10                	je     81001ace <is_option+0x23>
81001abe:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001ac2:	74 11                	je     81001ad5 <is_option+0x2a>
81001ac4:	8b 45 08             	mov    0x8(%ebp),%eax
81001ac7:	0f b6 00             	movzbl (%eax),%eax
81001aca:	3c 2b                	cmp    $0x2b,%al
81001acc:	75 07                	jne    81001ad5 <is_option+0x2a>
81001ace:	b8 01 00 00 00       	mov    $0x1,%eax
81001ad3:	eb 05                	jmp    81001ada <is_option+0x2f>
81001ad5:	b8 00 00 00 00       	mov    $0x0,%eax
81001ada:	5d                   	pop    %ebp
81001adb:	c3                   	ret    

81001adc <read_globals>:
81001adc:	55                   	push   %ebp
81001add:	89 e5                	mov    %esp,%ebp
81001adf:	8b 15 74 81 00 81    	mov    0x81008174,%edx
81001ae5:	8b 45 08             	mov    0x8(%ebp),%eax
81001ae8:	89 10                	mov    %edx,(%eax)
81001aea:	8b 15 78 81 00 81    	mov    0x81008178,%edx
81001af0:	8b 45 08             	mov    0x8(%ebp),%eax
81001af3:	89 50 04             	mov    %edx,0x4(%eax)
81001af6:	8b 15 64 71 00 81    	mov    0x81007164,%edx
81001afc:	8b 45 08             	mov    0x8(%ebp),%eax
81001aff:	89 50 08             	mov    %edx,0x8(%eax)
81001b02:	8b 15 68 71 00 81    	mov    0x81007168,%edx
81001b08:	8b 45 08             	mov    0x8(%ebp),%eax
81001b0b:	89 50 0c             	mov    %edx,0xc(%eax)
81001b0e:	8b 15 7c 81 00 81    	mov    0x8100817c,%edx
81001b14:	8b 45 08             	mov    0x8(%ebp),%eax
81001b17:	89 50 10             	mov    %edx,0x10(%eax)
81001b1a:	8b 15 80 81 00 81    	mov    0x81008180,%edx
81001b20:	8b 45 08             	mov    0x8(%ebp),%eax
81001b23:	89 50 14             	mov    %edx,0x14(%eax)
81001b26:	8b 15 84 81 00 81    	mov    0x81008184,%edx
81001b2c:	8b 45 08             	mov    0x8(%ebp),%eax
81001b2f:	89 50 18             	mov    %edx,0x18(%eax)
81001b32:	90                   	nop
81001b33:	5d                   	pop    %ebp
81001b34:	c3                   	ret    

81001b35 <write_globals>:
81001b35:	55                   	push   %ebp
81001b36:	89 e5                	mov    %esp,%ebp
81001b38:	8b 45 08             	mov    0x8(%ebp),%eax
81001b3b:	8b 00                	mov    (%eax),%eax
81001b3d:	a3 74 81 00 81       	mov    %eax,0x81008174
81001b42:	8b 45 08             	mov    0x8(%ebp),%eax
81001b45:	8b 40 04             	mov    0x4(%eax),%eax
81001b48:	a3 78 81 00 81       	mov    %eax,0x81008178
81001b4d:	8b 45 08             	mov    0x8(%ebp),%eax
81001b50:	8b 40 08             	mov    0x8(%eax),%eax
81001b53:	a3 64 71 00 81       	mov    %eax,0x81007164
81001b58:	8b 45 08             	mov    0x8(%ebp),%eax
81001b5b:	8b 40 0c             	mov    0xc(%eax),%eax
81001b5e:	a3 68 71 00 81       	mov    %eax,0x81007168
81001b63:	8b 45 08             	mov    0x8(%ebp),%eax
81001b66:	8b 40 10             	mov    0x10(%eax),%eax
81001b69:	a3 7c 81 00 81       	mov    %eax,0x8100817c
81001b6e:	8b 45 08             	mov    0x8(%ebp),%eax
81001b71:	8b 40 14             	mov    0x14(%eax),%eax
81001b74:	a3 80 81 00 81       	mov    %eax,0x81008180
81001b79:	8b 45 08             	mov    0x8(%ebp),%eax
81001b7c:	8b 40 18             	mov    0x18(%eax),%eax
81001b7f:	a3 84 81 00 81       	mov    %eax,0x81008184
81001b84:	90                   	nop
81001b85:	5d                   	pop    %ebp
81001b86:	c3                   	ret    

81001b87 <getopt_internal>:
81001b87:	55                   	push   %ebp
81001b88:	89 e5                	mov    %esp,%ebp
81001b8a:	53                   	push   %ebx
81001b8b:	83 ec 34             	sub    $0x34,%esp
81001b8e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001b95:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001b9c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001ba3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001baa:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001bb1:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001bb8:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001bbf:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001bc6:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001bcd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001bd1:	74 35                	je     81001c08 <getopt_internal+0x81>
81001bd3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001bd7:	74 2f                	je     81001c08 <getopt_internal+0x81>
81001bd9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001bdd:	75 06                	jne    81001be5 <getopt_internal+0x5e>
81001bdf:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001be3:	74 23                	je     81001c08 <getopt_internal+0x81>
81001be5:	8b 45 20             	mov    0x20(%ebp),%eax
81001be8:	8b 40 04             	mov    0x4(%eax),%eax
81001beb:	39 45 08             	cmp    %eax,0x8(%ebp)
81001bee:	7e 18                	jle    81001c08 <getopt_internal+0x81>
81001bf0:	8b 45 20             	mov    0x20(%ebp),%eax
81001bf3:	8b 40 04             	mov    0x4(%eax),%eax
81001bf6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001bfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c00:	01 d0                	add    %edx,%eax
81001c02:	8b 00                	mov    (%eax),%eax
81001c04:	85 c0                	test   %eax,%eax
81001c06:	75 0a                	jne    81001c12 <getopt_internal+0x8b>
81001c08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c0d:	e9 85 0a 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001c12:	8b 45 20             	mov    0x20(%ebp),%eax
81001c15:	8b 40 04             	mov    0x4(%eax),%eax
81001c18:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c22:	01 d0                	add    %edx,%eax
81001c24:	8b 00                	mov    (%eax),%eax
81001c26:	83 ec 08             	sub    $0x8,%esp
81001c29:	68 64 6d 00 81       	push   $0x81006d64
81001c2e:	50                   	push   %eax
81001c2f:	e8 98 29 00 00       	call   810045cc <strcmp>
81001c34:	83 c4 10             	add    $0x10,%esp
81001c37:	85 c0                	test   %eax,%eax
81001c39:	75 19                	jne    81001c54 <getopt_internal+0xcd>
81001c3b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c3e:	8b 40 04             	mov    0x4(%eax),%eax
81001c41:	8d 50 01             	lea    0x1(%eax),%edx
81001c44:	8b 45 20             	mov    0x20(%ebp),%eax
81001c47:	89 50 04             	mov    %edx,0x4(%eax)
81001c4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c4f:	e9 43 0a 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001c54:	8b 45 20             	mov    0x20(%ebp),%eax
81001c57:	8b 40 04             	mov    0x4(%eax),%eax
81001c5a:	85 c0                	test   %eax,%eax
81001c5c:	75 28                	jne    81001c86 <getopt_internal+0xff>
81001c5e:	8b 45 20             	mov    0x20(%ebp),%eax
81001c61:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001c68:	8b 45 20             	mov    0x20(%ebp),%eax
81001c6b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001c72:	8b 45 20             	mov    0x20(%ebp),%eax
81001c75:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001c7c:	8b 45 20             	mov    0x20(%ebp),%eax
81001c7f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001c86:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001c8a:	74 33                	je     81001cbf <getopt_internal+0x138>
81001c8c:	8b 45 10             	mov    0x10(%ebp),%eax
81001c8f:	0f b6 00             	movzbl (%eax),%eax
81001c92:	3c 2d                	cmp    $0x2d,%al
81001c94:	74 0a                	je     81001ca0 <getopt_internal+0x119>
81001c96:	8b 45 10             	mov    0x10(%ebp),%eax
81001c99:	0f b6 00             	movzbl (%eax),%eax
81001c9c:	3c 2b                	cmp    $0x2b,%al
81001c9e:	75 1f                	jne    81001cbf <getopt_internal+0x138>
81001ca0:	8b 45 10             	mov    0x10(%ebp),%eax
81001ca3:	0f b6 00             	movzbl (%eax),%eax
81001ca6:	3c 2d                	cmp    $0x2d,%al
81001ca8:	75 07                	jne    81001cb1 <getopt_internal+0x12a>
81001caa:	b8 01 00 00 00       	mov    $0x1,%eax
81001caf:	eb 05                	jmp    81001cb6 <getopt_internal+0x12f>
81001cb1:	b8 02 00 00 00       	mov    $0x2,%eax
81001cb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cb9:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001cbd:	eb 23                	jmp    81001ce2 <getopt_internal+0x15b>
81001cbf:	83 ec 0c             	sub    $0xc,%esp
81001cc2:	68 67 6d 00 81       	push   $0x81006d67
81001cc7:	e8 b6 3a 00 00       	call   81005782 <getenv>
81001ccc:	83 c4 10             	add    $0x10,%esp
81001ccf:	85 c0                	test   %eax,%eax
81001cd1:	74 07                	je     81001cda <getopt_internal+0x153>
81001cd3:	b8 02 00 00 00       	mov    $0x2,%eax
81001cd8:	eb 05                	jmp    81001cdf <getopt_internal+0x158>
81001cda:	b8 00 00 00 00       	mov    $0x0,%eax
81001cdf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ce2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001ce6:	74 15                	je     81001cfd <getopt_internal+0x176>
81001ce8:	8b 45 10             	mov    0x10(%ebp),%eax
81001ceb:	0f b6 00             	movzbl (%eax),%eax
81001cee:	3c 3a                	cmp    $0x3a,%al
81001cf0:	75 0b                	jne    81001cfd <getopt_internal+0x176>
81001cf2:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001cf6:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001cfd:	8b 45 20             	mov    0x20(%ebp),%eax
81001d00:	8b 40 10             	mov    0x10(%eax),%eax
81001d03:	83 f8 01             	cmp    $0x1,%eax
81001d06:	0f 85 a2 01 00 00    	jne    81001eae <getopt_internal+0x327>
81001d0c:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001d10:	0f 84 02 01 00 00    	je     81001e18 <getopt_internal+0x291>
81001d16:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001d1a:	0f 84 56 01 00 00    	je     81001e76 <getopt_internal+0x2ef>
81001d20:	8b 45 20             	mov    0x20(%ebp),%eax
81001d23:	8b 50 04             	mov    0x4(%eax),%edx
81001d26:	8b 45 20             	mov    0x20(%ebp),%eax
81001d29:	89 50 14             	mov    %edx,0x14(%eax)
81001d2c:	8b 45 20             	mov    0x20(%ebp),%eax
81001d2f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001d36:	eb 1e                	jmp    81001d56 <getopt_internal+0x1cf>
81001d38:	8b 45 20             	mov    0x20(%ebp),%eax
81001d3b:	8b 40 04             	mov    0x4(%eax),%eax
81001d3e:	8d 50 01             	lea    0x1(%eax),%edx
81001d41:	8b 45 20             	mov    0x20(%ebp),%eax
81001d44:	89 50 04             	mov    %edx,0x4(%eax)
81001d47:	8b 45 20             	mov    0x20(%ebp),%eax
81001d4a:	8b 40 18             	mov    0x18(%eax),%eax
81001d4d:	8d 50 01             	lea    0x1(%eax),%edx
81001d50:	8b 45 20             	mov    0x20(%ebp),%eax
81001d53:	89 50 18             	mov    %edx,0x18(%eax)
81001d56:	8b 45 20             	mov    0x20(%ebp),%eax
81001d59:	8b 40 04             	mov    0x4(%eax),%eax
81001d5c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d63:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d66:	01 d0                	add    %edx,%eax
81001d68:	8b 00                	mov    (%eax),%eax
81001d6a:	83 ec 08             	sub    $0x8,%esp
81001d6d:	ff 75 1c             	push   0x1c(%ebp)
81001d70:	50                   	push   %eax
81001d71:	e8 35 fd ff ff       	call   81001aab <is_option>
81001d76:	83 c4 10             	add    $0x10,%esp
81001d79:	85 c0                	test   %eax,%eax
81001d7b:	74 bb                	je     81001d38 <getopt_internal+0x1b1>
81001d7d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d80:	8b 40 04             	mov    0x4(%eax),%eax
81001d83:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d8d:	01 d0                	add    %edx,%eax
81001d8f:	8b 00                	mov    (%eax),%eax
81001d91:	85 c0                	test   %eax,%eax
81001d93:	75 16                	jne    81001dab <getopt_internal+0x224>
81001d95:	8b 45 20             	mov    0x20(%ebp),%eax
81001d98:	8b 50 14             	mov    0x14(%eax),%edx
81001d9b:	8b 45 20             	mov    0x20(%ebp),%eax
81001d9e:	89 50 04             	mov    %edx,0x4(%eax)
81001da1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001da6:	e9 ec 08 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001dab:	8b 45 20             	mov    0x20(%ebp),%eax
81001dae:	8b 40 04             	mov    0x4(%eax),%eax
81001db1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001db8:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dbb:	01 d0                	add    %edx,%eax
81001dbd:	8b 00                	mov    (%eax),%eax
81001dbf:	83 ec 08             	sub    $0x8,%esp
81001dc2:	68 64 6d 00 81       	push   $0x81006d64
81001dc7:	50                   	push   %eax
81001dc8:	e8 ff 27 00 00       	call   810045cc <strcmp>
81001dcd:	83 c4 10             	add    $0x10,%esp
81001dd0:	85 c0                	test   %eax,%eax
81001dd2:	0f 85 cf 00 00 00    	jne    81001ea7 <getopt_internal+0x320>
81001dd8:	8b 45 20             	mov    0x20(%ebp),%eax
81001ddb:	8b 40 18             	mov    0x18(%eax),%eax
81001dde:	8b 55 20             	mov    0x20(%ebp),%edx
81001de1:	8b 52 14             	mov    0x14(%edx),%edx
81001de4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001deb:	8b 55 0c             	mov    0xc(%ebp),%edx
81001dee:	01 ca                	add    %ecx,%edx
81001df0:	83 ec 04             	sub    $0x4,%esp
81001df3:	6a 01                	push   $0x1
81001df5:	50                   	push   %eax
81001df6:	52                   	push   %edx
81001df7:	e8 79 fc ff ff       	call   81001a75 <permute>
81001dfc:	83 c4 10             	add    $0x10,%esp
81001dff:	8b 45 20             	mov    0x20(%ebp),%eax
81001e02:	8b 40 14             	mov    0x14(%eax),%eax
81001e05:	8d 50 01             	lea    0x1(%eax),%edx
81001e08:	8b 45 20             	mov    0x20(%ebp),%eax
81001e0b:	89 50 04             	mov    %edx,0x4(%eax)
81001e0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e13:	e9 7f 08 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001e18:	8b 45 20             	mov    0x20(%ebp),%eax
81001e1b:	8b 40 04             	mov    0x4(%eax),%eax
81001e1e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e25:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e28:	01 d0                	add    %edx,%eax
81001e2a:	8b 00                	mov    (%eax),%eax
81001e2c:	83 ec 08             	sub    $0x8,%esp
81001e2f:	ff 75 1c             	push   0x1c(%ebp)
81001e32:	50                   	push   %eax
81001e33:	e8 73 fc ff ff       	call   81001aab <is_option>
81001e38:	83 c4 10             	add    $0x10,%esp
81001e3b:	85 c0                	test   %eax,%eax
81001e3d:	75 6b                	jne    81001eaa <getopt_internal+0x323>
81001e3f:	8b 45 20             	mov    0x20(%ebp),%eax
81001e42:	8b 40 04             	mov    0x4(%eax),%eax
81001e45:	8d 48 01             	lea    0x1(%eax),%ecx
81001e48:	8b 55 20             	mov    0x20(%ebp),%edx
81001e4b:	89 4a 04             	mov    %ecx,0x4(%edx)
81001e4e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e55:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e58:	01 d0                	add    %edx,%eax
81001e5a:	8b 10                	mov    (%eax),%edx
81001e5c:	8b 45 20             	mov    0x20(%ebp),%eax
81001e5f:	89 10                	mov    %edx,(%eax)
81001e61:	8b 45 20             	mov    0x20(%ebp),%eax
81001e64:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001e6b:	8b 45 20             	mov    0x20(%ebp),%eax
81001e6e:	8b 40 0c             	mov    0xc(%eax),%eax
81001e71:	e9 21 08 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001e76:	8b 45 20             	mov    0x20(%ebp),%eax
81001e79:	8b 40 04             	mov    0x4(%eax),%eax
81001e7c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e83:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e86:	01 d0                	add    %edx,%eax
81001e88:	8b 00                	mov    (%eax),%eax
81001e8a:	83 ec 08             	sub    $0x8,%esp
81001e8d:	ff 75 1c             	push   0x1c(%ebp)
81001e90:	50                   	push   %eax
81001e91:	e8 15 fc ff ff       	call   81001aab <is_option>
81001e96:	83 c4 10             	add    $0x10,%esp
81001e99:	85 c0                	test   %eax,%eax
81001e9b:	75 10                	jne    81001ead <getopt_internal+0x326>
81001e9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ea2:	e9 f0 07 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001ea7:	90                   	nop
81001ea8:	eb 04                	jmp    81001eae <getopt_internal+0x327>
81001eaa:	90                   	nop
81001eab:	eb 01                	jmp    81001eae <getopt_internal+0x327>
81001ead:	90                   	nop
81001eae:	8b 45 20             	mov    0x20(%ebp),%eax
81001eb1:	8b 40 04             	mov    0x4(%eax),%eax
81001eb4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ebb:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ebe:	01 d0                	add    %edx,%eax
81001ec0:	8b 00                	mov    (%eax),%eax
81001ec2:	85 c0                	test   %eax,%eax
81001ec4:	75 0a                	jne    81001ed0 <getopt_internal+0x349>
81001ec6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ecb:	e9 c7 07 00 00       	jmp    81002697 <getopt_internal+0xb10>
81001ed0:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001ed4:	0f 84 15 03 00 00    	je     810021ef <getopt_internal+0x668>
81001eda:	8b 45 20             	mov    0x20(%ebp),%eax
81001edd:	8b 40 04             	mov    0x4(%eax),%eax
81001ee0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ee7:	8b 45 0c             	mov    0xc(%ebp),%eax
81001eea:	01 d0                	add    %edx,%eax
81001eec:	8b 00                	mov    (%eax),%eax
81001eee:	83 ec 04             	sub    $0x4,%esp
81001ef1:	6a 02                	push   $0x2
81001ef3:	68 64 6d 00 81       	push   $0x81006d64
81001ef8:	50                   	push   %eax
81001ef9:	e8 77 14 00 00       	call   81003375 <memcmp>
81001efe:	83 c4 10             	add    $0x10,%esp
81001f01:	85 c0                	test   %eax,%eax
81001f03:	74 29                	je     81001f2e <getopt_internal+0x3a7>
81001f05:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001f09:	0f 84 e0 02 00 00    	je     810021ef <getopt_internal+0x668>
81001f0f:	8b 45 20             	mov    0x20(%ebp),%eax
81001f12:	8b 40 04             	mov    0x4(%eax),%eax
81001f15:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f1f:	01 d0                	add    %edx,%eax
81001f21:	8b 00                	mov    (%eax),%eax
81001f23:	0f b6 00             	movzbl (%eax),%eax
81001f26:	3c 2b                	cmp    $0x2b,%al
81001f28:	0f 85 c1 02 00 00    	jne    810021ef <getopt_internal+0x668>
81001f2e:	8b 45 20             	mov    0x20(%ebp),%eax
81001f31:	8b 40 10             	mov    0x10(%eax),%eax
81001f34:	83 f8 01             	cmp    $0x1,%eax
81001f37:	0f 85 b2 02 00 00    	jne    810021ef <getopt_internal+0x668>
81001f3d:	8b 45 20             	mov    0x20(%ebp),%eax
81001f40:	8b 40 04             	mov    0x4(%eax),%eax
81001f43:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f4d:	01 d0                	add    %edx,%eax
81001f4f:	8b 00                	mov    (%eax),%eax
81001f51:	83 ec 04             	sub    $0x4,%esp
81001f54:	6a 02                	push   $0x2
81001f56:	68 64 6d 00 81       	push   $0x81006d64
81001f5b:	50                   	push   %eax
81001f5c:	e8 14 14 00 00       	call   81003375 <memcmp>
81001f61:	83 c4 10             	add    $0x10,%esp
81001f64:	85 c0                	test   %eax,%eax
81001f66:	75 0a                	jne    81001f72 <getopt_internal+0x3eb>
81001f68:	8b 45 20             	mov    0x20(%ebp),%eax
81001f6b:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001f72:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001f79:	8b 45 20             	mov    0x20(%ebp),%eax
81001f7c:	8b 40 04             	mov    0x4(%eax),%eax
81001f7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f86:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f89:	01 d0                	add    %edx,%eax
81001f8b:	8b 10                	mov    (%eax),%edx
81001f8d:	8b 45 20             	mov    0x20(%ebp),%eax
81001f90:	8b 40 10             	mov    0x10(%eax),%eax
81001f93:	01 d0                	add    %edx,%eax
81001f95:	83 ec 08             	sub    $0x8,%esp
81001f98:	6a 3d                	push   $0x3d
81001f9a:	50                   	push   %eax
81001f9b:	e8 30 25 00 00       	call   810044d0 <strchr>
81001fa0:	83 c4 10             	add    $0x10,%esp
81001fa3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fa6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001faa:	75 4a                	jne    81001ff6 <getopt_internal+0x46f>
81001fac:	8b 45 20             	mov    0x20(%ebp),%eax
81001faf:	8b 40 04             	mov    0x4(%eax),%eax
81001fb2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001fb9:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fbc:	01 d0                	add    %edx,%eax
81001fbe:	8b 00                	mov    (%eax),%eax
81001fc0:	83 ec 0c             	sub    $0xc,%esp
81001fc3:	50                   	push   %eax
81001fc4:	e8 b7 26 00 00       	call   81004680 <strlen>
81001fc9:	83 c4 10             	add    $0x10,%esp
81001fcc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fcf:	8b 45 20             	mov    0x20(%ebp),%eax
81001fd2:	8b 40 04             	mov    0x4(%eax),%eax
81001fd5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001fdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fdf:	01 d0                	add    %edx,%eax
81001fe1:	8b 10                	mov    (%eax),%edx
81001fe3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fe6:	01 d0                	add    %edx,%eax
81001fe8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001feb:	8b 45 20             	mov    0x20(%ebp),%eax
81001fee:	8b 40 10             	mov    0x10(%eax),%eax
81001ff1:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001ff4:	eb 28                	jmp    8100201e <getopt_internal+0x497>
81001ff6:	8b 45 20             	mov    0x20(%ebp),%eax
81001ff9:	8b 40 04             	mov    0x4(%eax),%eax
81001ffc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002003:	8b 45 0c             	mov    0xc(%ebp),%eax
81002006:	01 d0                	add    %edx,%eax
81002008:	8b 08                	mov    (%eax),%ecx
8100200a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100200d:	29 c8                	sub    %ecx,%eax
8100200f:	89 c2                	mov    %eax,%edx
81002011:	8b 45 20             	mov    0x20(%ebp),%eax
81002014:	8b 48 10             	mov    0x10(%eax),%ecx
81002017:	89 d0                	mov    %edx,%eax
81002019:	29 c8                	sub    %ecx,%eax
8100201b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100201e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002025:	e9 95 01 00 00       	jmp    810021bf <getopt_internal+0x638>
8100202a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100202d:	c1 e0 04             	shl    $0x4,%eax
81002030:	89 c2                	mov    %eax,%edx
81002032:	8b 45 14             	mov    0x14(%ebp),%eax
81002035:	01 d0                	add    %edx,%eax
81002037:	8b 00                	mov    (%eax),%eax
81002039:	8b 55 20             	mov    0x20(%ebp),%edx
8100203c:	8b 52 04             	mov    0x4(%edx),%edx
8100203f:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002046:	8b 55 0c             	mov    0xc(%ebp),%edx
81002049:	01 ca                	add    %ecx,%edx
8100204b:	8b 0a                	mov    (%edx),%ecx
8100204d:	8b 55 20             	mov    0x20(%ebp),%edx
81002050:	8b 52 10             	mov    0x10(%edx),%edx
81002053:	01 ca                	add    %ecx,%edx
81002055:	83 ec 04             	sub    $0x4,%esp
81002058:	ff 75 ec             	push   -0x14(%ebp)
8100205b:	50                   	push   %eax
8100205c:	52                   	push   %edx
8100205d:	e8 13 13 00 00       	call   81003375 <memcmp>
81002062:	83 c4 10             	add    $0x10,%esp
81002065:	85 c0                	test   %eax,%eax
81002067:	0f 85 4e 01 00 00    	jne    810021bb <getopt_internal+0x634>
8100206d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002070:	c1 e0 04             	shl    $0x4,%eax
81002073:	89 c2                	mov    %eax,%edx
81002075:	8b 45 14             	mov    0x14(%ebp),%eax
81002078:	01 d0                	add    %edx,%eax
8100207a:	8b 00                	mov    (%eax),%eax
8100207c:	83 ec 0c             	sub    $0xc,%esp
8100207f:	50                   	push   %eax
81002080:	e8 fb 25 00 00       	call   81004680 <strlen>
81002085:	83 c4 10             	add    $0x10,%esp
81002088:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100208b:	75 0b                	jne    81002098 <getopt_internal+0x511>
8100208d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002090:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002093:	e9 3e 01 00 00       	jmp    810021d6 <getopt_internal+0x64f>
81002098:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100209c:	79 0b                	jns    810020a9 <getopt_internal+0x522>
8100209e:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020a1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810020a4:	e9 12 01 00 00       	jmp    810021bb <getopt_internal+0x634>
810020a9:	8b 45 20             	mov    0x20(%ebp),%eax
810020ac:	8b 40 08             	mov    0x8(%eax),%eax
810020af:	85 c0                	test   %eax,%eax
810020b1:	0f 84 ef 00 00 00    	je     810021a6 <getopt_internal+0x61f>
810020b7:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020bc:	8b 50 0c             	mov    0xc(%eax),%edx
810020bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810020c2:	8b 00                	mov    (%eax),%eax
810020c4:	83 ec 08             	sub    $0x8,%esp
810020c7:	52                   	push   %edx
810020c8:	50                   	push   %eax
810020c9:	e8 22 30 00 00       	call   810050f0 <fputs>
810020ce:	83 c4 10             	add    $0x10,%esp
810020d1:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020d6:	8b 40 0c             	mov    0xc(%eax),%eax
810020d9:	83 ec 08             	sub    $0x8,%esp
810020dc:	50                   	push   %eax
810020dd:	68 77 6d 00 81       	push   $0x81006d77
810020e2:	e8 09 30 00 00       	call   810050f0 <fputs>
810020e7:	83 c4 10             	add    $0x10,%esp
810020ea:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020ef:	8b 50 0c             	mov    0xc(%eax),%edx
810020f2:	8b 45 20             	mov    0x20(%ebp),%eax
810020f5:	8b 40 04             	mov    0x4(%eax),%eax
810020f8:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
810020ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002102:	01 c8                	add    %ecx,%eax
81002104:	8b 00                	mov    (%eax),%eax
81002106:	83 ec 08             	sub    $0x8,%esp
81002109:	52                   	push   %edx
8100210a:	50                   	push   %eax
8100210b:	e8 e0 2f 00 00       	call   810050f0 <fputs>
81002110:	83 c4 10             	add    $0x10,%esp
81002113:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002118:	8b 40 0c             	mov    0xc(%eax),%eax
8100211b:	83 ec 08             	sub    $0x8,%esp
8100211e:	50                   	push   %eax
8100211f:	68 82 6d 00 81       	push   $0x81006d82
81002124:	e8 c7 2f 00 00       	call   810050f0 <fputs>
81002129:	83 c4 10             	add    $0x10,%esp
8100212c:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002131:	8b 50 0c             	mov    0xc(%eax),%edx
81002134:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002137:	c1 e0 04             	shl    $0x4,%eax
8100213a:	89 c1                	mov    %eax,%ecx
8100213c:	8b 45 14             	mov    0x14(%ebp),%eax
8100213f:	01 c8                	add    %ecx,%eax
81002141:	8b 00                	mov    (%eax),%eax
81002143:	83 ec 08             	sub    $0x8,%esp
81002146:	52                   	push   %edx
81002147:	50                   	push   %eax
81002148:	e8 a3 2f 00 00       	call   810050f0 <fputs>
8100214d:	83 c4 10             	add    $0x10,%esp
81002150:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002155:	8b 40 0c             	mov    0xc(%eax),%eax
81002158:	83 ec 08             	sub    $0x8,%esp
8100215b:	50                   	push   %eax
8100215c:	68 9f 6d 00 81       	push   $0x81006d9f
81002161:	e8 8a 2f 00 00       	call   810050f0 <fputs>
81002166:	83 c4 10             	add    $0x10,%esp
81002169:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100216e:	8b 50 0c             	mov    0xc(%eax),%edx
81002171:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002174:	c1 e0 04             	shl    $0x4,%eax
81002177:	89 c1                	mov    %eax,%ecx
81002179:	8b 45 14             	mov    0x14(%ebp),%eax
8100217c:	01 c8                	add    %ecx,%eax
8100217e:	8b 00                	mov    (%eax),%eax
81002180:	83 ec 08             	sub    $0x8,%esp
81002183:	52                   	push   %edx
81002184:	50                   	push   %eax
81002185:	e8 66 2f 00 00       	call   810050f0 <fputs>
8100218a:	83 c4 10             	add    $0x10,%esp
8100218d:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002192:	8b 40 0c             	mov    0xc(%eax),%eax
81002195:	83 ec 08             	sub    $0x8,%esp
81002198:	50                   	push   %eax
81002199:	68 a8 6d 00 81       	push   $0x81006da8
8100219e:	e8 4d 2f 00 00       	call   810050f0 <fputs>
810021a3:	83 c4 10             	add    $0x10,%esp
810021a6:	8b 45 20             	mov    0x20(%ebp),%eax
810021a9:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810021b0:	8b 45 20             	mov    0x20(%ebp),%eax
810021b3:	8b 40 0c             	mov    0xc(%eax),%eax
810021b6:	e9 dc 04 00 00       	jmp    81002697 <getopt_internal+0xb10>
810021bb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810021bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021c2:	c1 e0 04             	shl    $0x4,%eax
810021c5:	89 c2                	mov    %eax,%edx
810021c7:	8b 45 14             	mov    0x14(%ebp),%eax
810021ca:	01 d0                	add    %edx,%eax
810021cc:	8b 00                	mov    (%eax),%eax
810021ce:	85 c0                	test   %eax,%eax
810021d0:	0f 85 54 fe ff ff    	jne    8100202a <getopt_internal+0x4a3>
810021d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810021da:	78 13                	js     810021ef <getopt_internal+0x668>
810021dc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810021df:	c1 e0 04             	shl    $0x4,%eax
810021e2:	89 c2                	mov    %eax,%edx
810021e4:	8b 45 14             	mov    0x14(%ebp),%eax
810021e7:	01 d0                	add    %edx,%eax
810021e9:	8b 40 04             	mov    0x4(%eax),%eax
810021ec:	89 45 e0             	mov    %eax,-0x20(%ebp)
810021ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810021f3:	0f 89 9a 01 00 00    	jns    81002393 <getopt_internal+0x80c>
810021f9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810021fd:	0f 84 90 01 00 00    	je     81002393 <getopt_internal+0x80c>
81002203:	8b 45 20             	mov    0x20(%ebp),%eax
81002206:	8b 40 04             	mov    0x4(%eax),%eax
81002209:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002210:	8b 45 0c             	mov    0xc(%ebp),%eax
81002213:	01 d0                	add    %edx,%eax
81002215:	8b 10                	mov    (%eax),%edx
81002217:	8b 45 20             	mov    0x20(%ebp),%eax
8100221a:	8b 40 10             	mov    0x10(%eax),%eax
8100221d:	01 d0                	add    %edx,%eax
8100221f:	0f b6 00             	movzbl (%eax),%eax
81002222:	0f be c0             	movsbl %al,%eax
81002225:	83 ec 08             	sub    $0x8,%esp
81002228:	50                   	push   %eax
81002229:	ff 75 10             	push   0x10(%ebp)
8100222c:	e8 9f 22 00 00       	call   810044d0 <strchr>
81002231:	83 c4 10             	add    $0x10,%esp
81002234:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002237:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100223b:	0f 85 f1 00 00 00    	jne    81002332 <getopt_internal+0x7ab>
81002241:	8b 45 20             	mov    0x20(%ebp),%eax
81002244:	8b 40 08             	mov    0x8(%eax),%eax
81002247:	85 c0                	test   %eax,%eax
81002249:	0f 84 83 00 00 00    	je     810022d2 <getopt_internal+0x74b>
8100224f:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002254:	8b 50 0c             	mov    0xc(%eax),%edx
81002257:	8b 45 0c             	mov    0xc(%ebp),%eax
8100225a:	8b 00                	mov    (%eax),%eax
8100225c:	83 ec 08             	sub    $0x8,%esp
8100225f:	52                   	push   %edx
81002260:	50                   	push   %eax
81002261:	e8 8a 2e 00 00       	call   810050f0 <fputs>
81002266:	83 c4 10             	add    $0x10,%esp
81002269:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100226e:	8b 40 0c             	mov    0xc(%eax),%eax
81002271:	83 ec 08             	sub    $0x8,%esp
81002274:	50                   	push   %eax
81002275:	68 ac 6d 00 81       	push   $0x81006dac
8100227a:	e8 71 2e 00 00       	call   810050f0 <fputs>
8100227f:	83 c4 10             	add    $0x10,%esp
81002282:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002287:	8b 50 0c             	mov    0xc(%eax),%edx
8100228a:	8b 45 20             	mov    0x20(%ebp),%eax
8100228d:	8b 40 04             	mov    0x4(%eax),%eax
81002290:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002297:	8b 45 0c             	mov    0xc(%ebp),%eax
8100229a:	01 c8                	add    %ecx,%eax
8100229c:	8b 08                	mov    (%eax),%ecx
8100229e:	8b 45 20             	mov    0x20(%ebp),%eax
810022a1:	8b 40 10             	mov    0x10(%eax),%eax
810022a4:	01 c8                	add    %ecx,%eax
810022a6:	0f b6 00             	movzbl (%eax),%eax
810022a9:	0f be c0             	movsbl %al,%eax
810022ac:	83 ec 08             	sub    $0x8,%esp
810022af:	52                   	push   %edx
810022b0:	50                   	push   %eax
810022b1:	e8 46 2d 00 00       	call   81004ffc <fputc>
810022b6:	83 c4 10             	add    $0x10,%esp
810022b9:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810022be:	8b 40 0c             	mov    0xc(%eax),%eax
810022c1:	83 ec 08             	sub    $0x8,%esp
810022c4:	50                   	push   %eax
810022c5:	68 c3 6d 00 81       	push   $0x81006dc3
810022ca:	e8 21 2e 00 00       	call   810050f0 <fputs>
810022cf:	83 c4 10             	add    $0x10,%esp
810022d2:	8b 45 20             	mov    0x20(%ebp),%eax
810022d5:	8b 40 10             	mov    0x10(%eax),%eax
810022d8:	8d 50 01             	lea    0x1(%eax),%edx
810022db:	8b 45 20             	mov    0x20(%ebp),%eax
810022de:	89 50 10             	mov    %edx,0x10(%eax)
810022e1:	8b 45 20             	mov    0x20(%ebp),%eax
810022e4:	8b 40 04             	mov    0x4(%eax),%eax
810022e7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810022ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f1:	01 d0                	add    %edx,%eax
810022f3:	8b 10                	mov    (%eax),%edx
810022f5:	8b 45 20             	mov    0x20(%ebp),%eax
810022f8:	8b 40 10             	mov    0x10(%eax),%eax
810022fb:	01 d0                	add    %edx,%eax
810022fd:	0f b6 00             	movzbl (%eax),%eax
81002300:	84 c0                	test   %al,%al
81002302:	75 19                	jne    8100231d <getopt_internal+0x796>
81002304:	8b 45 20             	mov    0x20(%ebp),%eax
81002307:	8b 40 04             	mov    0x4(%eax),%eax
8100230a:	8d 50 01             	lea    0x1(%eax),%edx
8100230d:	8b 45 20             	mov    0x20(%ebp),%eax
81002310:	89 50 04             	mov    %edx,0x4(%eax)
81002313:	8b 45 20             	mov    0x20(%ebp),%eax
81002316:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100231d:	8b 45 20             	mov    0x20(%ebp),%eax
81002320:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002327:	8b 45 20             	mov    0x20(%ebp),%eax
8100232a:	8b 40 0c             	mov    0xc(%eax),%eax
8100232d:	e9 65 03 00 00       	jmp    81002697 <getopt_internal+0xb10>
81002332:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002335:	83 c0 01             	add    $0x1,%eax
81002338:	0f b6 00             	movzbl (%eax),%eax
8100233b:	3c 3a                	cmp    $0x3a,%al
8100233d:	75 1b                	jne    8100235a <getopt_internal+0x7d3>
8100233f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002342:	83 c0 02             	add    $0x2,%eax
81002345:	0f b6 00             	movzbl (%eax),%eax
81002348:	3c 3a                	cmp    $0x3a,%al
8100234a:	75 07                	jne    81002353 <getopt_internal+0x7cc>
8100234c:	b8 02 00 00 00       	mov    $0x2,%eax
81002351:	eb 0c                	jmp    8100235f <getopt_internal+0x7d8>
81002353:	b8 01 00 00 00       	mov    $0x1,%eax
81002358:	eb 05                	jmp    8100235f <getopt_internal+0x7d8>
8100235a:	b8 00 00 00 00       	mov    $0x0,%eax
8100235f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002362:	8b 45 20             	mov    0x20(%ebp),%eax
81002365:	8b 40 04             	mov    0x4(%eax),%eax
81002368:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100236f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002372:	01 d0                	add    %edx,%eax
81002374:	8b 10                	mov    (%eax),%edx
81002376:	8b 45 20             	mov    0x20(%ebp),%eax
81002379:	8b 40 10             	mov    0x10(%eax),%eax
8100237c:	83 c0 01             	add    $0x1,%eax
8100237f:	01 d0                	add    %edx,%eax
81002381:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002384:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002387:	0f b6 00             	movzbl (%eax),%eax
8100238a:	0f be d0             	movsbl %al,%edx
8100238d:	8b 45 20             	mov    0x20(%ebp),%eax
81002390:	89 50 0c             	mov    %edx,0xc(%eax)
81002393:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100239a:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
8100239e:	74 40                	je     810023e0 <getopt_internal+0x859>
810023a0:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810023a4:	0f 85 b0 01 00 00    	jne    8100255a <getopt_internal+0x9d3>
810023aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023ad:	0f b6 00             	movzbl (%eax),%eax
810023b0:	3c 3d                	cmp    $0x3d,%al
810023b2:	75 04                	jne    810023b8 <getopt_internal+0x831>
810023b4:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810023b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023bb:	0f b6 00             	movzbl (%eax),%eax
810023be:	84 c0                	test   %al,%al
810023c0:	74 05                	je     810023c7 <getopt_internal+0x840>
810023c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023c5:	eb 05                	jmp    810023cc <getopt_internal+0x845>
810023c7:	b8 00 00 00 00       	mov    $0x0,%eax
810023cc:	8b 55 20             	mov    0x20(%ebp),%edx
810023cf:	89 02                	mov    %eax,(%edx)
810023d1:	8b 45 20             	mov    0x20(%ebp),%eax
810023d4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023db:	e9 d2 01 00 00       	jmp    810025b2 <getopt_internal+0xa2b>
810023e0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023e3:	0f b6 00             	movzbl (%eax),%eax
810023e6:	3c 3d                	cmp    $0x3d,%al
810023e8:	75 04                	jne    810023ee <getopt_internal+0x867>
810023ea:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810023ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023f1:	0f b6 00             	movzbl (%eax),%eax
810023f4:	84 c0                	test   %al,%al
810023f6:	74 17                	je     8100240f <getopt_internal+0x888>
810023f8:	8b 45 20             	mov    0x20(%ebp),%eax
810023fb:	8b 55 e8             	mov    -0x18(%ebp),%edx
810023fe:	89 10                	mov    %edx,(%eax)
81002400:	8b 45 20             	mov    0x20(%ebp),%eax
81002403:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100240a:	e9 a3 01 00 00       	jmp    810025b2 <getopt_internal+0xa2b>
8100240f:	8b 45 20             	mov    0x20(%ebp),%eax
81002412:	8b 40 04             	mov    0x4(%eax),%eax
81002415:	83 c0 01             	add    $0x1,%eax
81002418:	39 45 08             	cmp    %eax,0x8(%ebp)
8100241b:	0f 8f 0a 01 00 00    	jg     8100252b <getopt_internal+0x9a4>
81002421:	8b 45 20             	mov    0x20(%ebp),%eax
81002424:	8b 40 08             	mov    0x8(%eax),%eax
81002427:	85 c0                	test   %eax,%eax
81002429:	0f 84 d3 00 00 00    	je     81002502 <getopt_internal+0x97b>
8100242f:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002434:	8b 50 0c             	mov    0xc(%eax),%edx
81002437:	8b 45 0c             	mov    0xc(%ebp),%eax
8100243a:	8b 00                	mov    (%eax),%eax
8100243c:	83 ec 08             	sub    $0x8,%esp
8100243f:	52                   	push   %edx
81002440:	50                   	push   %eax
81002441:	e8 aa 2c 00 00       	call   810050f0 <fputs>
81002446:	83 c4 10             	add    $0x10,%esp
81002449:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100244e:	8b 40 0c             	mov    0xc(%eax),%eax
81002451:	83 ec 08             	sub    $0x8,%esp
81002454:	50                   	push   %eax
81002455:	68 c8 6d 00 81       	push   $0x81006dc8
8100245a:	e8 91 2c 00 00       	call   810050f0 <fputs>
8100245f:	83 c4 10             	add    $0x10,%esp
81002462:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002466:	78 54                	js     810024bc <getopt_internal+0x935>
81002468:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100246d:	8b 40 0c             	mov    0xc(%eax),%eax
81002470:	83 ec 08             	sub    $0x8,%esp
81002473:	50                   	push   %eax
81002474:	6a 2d                	push   $0x2d
81002476:	e8 81 2b 00 00       	call   81004ffc <fputc>
8100247b:	83 c4 10             	add    $0x10,%esp
8100247e:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002483:	8b 50 0c             	mov    0xc(%eax),%edx
81002486:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002489:	c1 e0 04             	shl    $0x4,%eax
8100248c:	89 c1                	mov    %eax,%ecx
8100248e:	8b 45 14             	mov    0x14(%ebp),%eax
81002491:	01 c8                	add    %ecx,%eax
81002493:	8b 00                	mov    (%eax),%eax
81002495:	83 ec 08             	sub    $0x8,%esp
81002498:	52                   	push   %edx
81002499:	50                   	push   %eax
8100249a:	e8 51 2c 00 00       	call   810050f0 <fputs>
8100249f:	83 c4 10             	add    $0x10,%esp
810024a2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810024a6:	74 07                	je     810024af <getopt_internal+0x928>
810024a8:	ba 3a 00 00 00       	mov    $0x3a,%edx
810024ad:	eb 05                	jmp    810024b4 <getopt_internal+0x92d>
810024af:	ba 3f 00 00 00       	mov    $0x3f,%edx
810024b4:	8b 45 20             	mov    0x20(%ebp),%eax
810024b7:	89 50 0c             	mov    %edx,0xc(%eax)
810024ba:	eb 2d                	jmp    810024e9 <getopt_internal+0x962>
810024bc:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810024c1:	8b 50 0c             	mov    0xc(%eax),%edx
810024c4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810024c7:	0f b6 00             	movzbl (%eax),%eax
810024ca:	0f be c0             	movsbl %al,%eax
810024cd:	83 ec 08             	sub    $0x8,%esp
810024d0:	52                   	push   %edx
810024d1:	50                   	push   %eax
810024d2:	e8 25 2b 00 00       	call   81004ffc <fputc>
810024d7:	83 c4 10             	add    $0x10,%esp
810024da:	8b 45 dc             	mov    -0x24(%ebp),%eax
810024dd:	0f b6 00             	movzbl (%eax),%eax
810024e0:	0f be d0             	movsbl %al,%edx
810024e3:	8b 45 20             	mov    0x20(%ebp),%eax
810024e6:	89 50 0c             	mov    %edx,0xc(%eax)
810024e9:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810024ee:	8b 40 0c             	mov    0xc(%eax),%eax
810024f1:	83 ec 08             	sub    $0x8,%esp
810024f4:	50                   	push   %eax
810024f5:	68 c3 6d 00 81       	push   $0x81006dc3
810024fa:	e8 f1 2b 00 00       	call   810050f0 <fputs>
810024ff:	83 c4 10             	add    $0x10,%esp
81002502:	8b 45 20             	mov    0x20(%ebp),%eax
81002505:	8b 40 04             	mov    0x4(%eax),%eax
81002508:	8d 50 01             	lea    0x1(%eax),%edx
8100250b:	8b 45 20             	mov    0x20(%ebp),%eax
8100250e:	89 50 04             	mov    %edx,0x4(%eax)
81002511:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002515:	74 0a                	je     81002521 <getopt_internal+0x99a>
81002517:	b8 3a 00 00 00       	mov    $0x3a,%eax
8100251c:	e9 76 01 00 00       	jmp    81002697 <getopt_internal+0xb10>
81002521:	b8 3f 00 00 00       	mov    $0x3f,%eax
81002526:	e9 6c 01 00 00       	jmp    81002697 <getopt_internal+0xb10>
8100252b:	8b 45 20             	mov    0x20(%ebp),%eax
8100252e:	8b 40 04             	mov    0x4(%eax),%eax
81002531:	83 c0 01             	add    $0x1,%eax
81002534:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100253b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100253e:	01 d0                	add    %edx,%eax
81002540:	8b 10                	mov    (%eax),%edx
81002542:	8b 45 20             	mov    0x20(%ebp),%eax
81002545:	89 10                	mov    %edx,(%eax)
81002547:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100254e:	8b 45 20             	mov    0x20(%ebp),%eax
81002551:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002558:	eb 58                	jmp    810025b2 <getopt_internal+0xa2b>
8100255a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100255e:	79 3e                	jns    8100259e <getopt_internal+0xa17>
81002560:	8b 45 20             	mov    0x20(%ebp),%eax
81002563:	8b 40 10             	mov    0x10(%eax),%eax
81002566:	8d 50 01             	lea    0x1(%eax),%edx
81002569:	8b 45 20             	mov    0x20(%ebp),%eax
8100256c:	89 50 10             	mov    %edx,0x10(%eax)
8100256f:	8b 45 20             	mov    0x20(%ebp),%eax
81002572:	8b 40 04             	mov    0x4(%eax),%eax
81002575:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100257c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100257f:	01 d0                	add    %edx,%eax
81002581:	8b 10                	mov    (%eax),%edx
81002583:	8b 45 20             	mov    0x20(%ebp),%eax
81002586:	8b 40 10             	mov    0x10(%eax),%eax
81002589:	01 d0                	add    %edx,%eax
8100258b:	0f b6 00             	movzbl (%eax),%eax
8100258e:	84 c0                	test   %al,%al
81002590:	75 16                	jne    810025a8 <getopt_internal+0xa21>
81002592:	8b 45 20             	mov    0x20(%ebp),%eax
81002595:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100259c:	eb 0a                	jmp    810025a8 <getopt_internal+0xa21>
8100259e:	8b 45 20             	mov    0x20(%ebp),%eax
810025a1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810025a8:	8b 45 20             	mov    0x20(%ebp),%eax
810025ab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810025b1:	90                   	nop
810025b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810025b6:	75 57                	jne    8100260f <getopt_internal+0xa88>
810025b8:	8b 45 20             	mov    0x20(%ebp),%eax
810025bb:	8b 40 10             	mov    0x10(%eax),%eax
810025be:	83 f8 01             	cmp    $0x1,%eax
810025c1:	75 4c                	jne    8100260f <getopt_internal+0xa88>
810025c3:	8b 45 20             	mov    0x20(%ebp),%eax
810025c6:	8b 40 18             	mov    0x18(%eax),%eax
810025c9:	85 c0                	test   %eax,%eax
810025cb:	74 42                	je     8100260f <getopt_internal+0xa88>
810025cd:	8b 45 d8             	mov    -0x28(%ebp),%eax
810025d0:	8d 48 01             	lea    0x1(%eax),%ecx
810025d3:	8b 45 20             	mov    0x20(%ebp),%eax
810025d6:	8b 40 18             	mov    0x18(%eax),%eax
810025d9:	8b 55 20             	mov    0x20(%ebp),%edx
810025dc:	8b 52 14             	mov    0x14(%edx),%edx
810025df:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
810025e6:	8b 55 0c             	mov    0xc(%ebp),%edx
810025e9:	01 da                	add    %ebx,%edx
810025eb:	83 ec 04             	sub    $0x4,%esp
810025ee:	51                   	push   %ecx
810025ef:	50                   	push   %eax
810025f0:	52                   	push   %edx
810025f1:	e8 7f f4 ff ff       	call   81001a75 <permute>
810025f6:	83 c4 10             	add    $0x10,%esp
810025f9:	8b 45 20             	mov    0x20(%ebp),%eax
810025fc:	8b 40 14             	mov    0x14(%eax),%eax
810025ff:	8d 50 01             	lea    0x1(%eax),%edx
81002602:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002605:	01 c2                	add    %eax,%edx
81002607:	8b 45 20             	mov    0x20(%ebp),%eax
8100260a:	89 50 04             	mov    %edx,0x4(%eax)
8100260d:	eb 1f                	jmp    8100262e <getopt_internal+0xaa7>
8100260f:	8b 45 20             	mov    0x20(%ebp),%eax
81002612:	8b 40 10             	mov    0x10(%eax),%eax
81002615:	83 f8 01             	cmp    $0x1,%eax
81002618:	75 14                	jne    8100262e <getopt_internal+0xaa7>
8100261a:	8b 45 20             	mov    0x20(%ebp),%eax
8100261d:	8b 40 04             	mov    0x4(%eax),%eax
81002620:	8d 50 01             	lea    0x1(%eax),%edx
81002623:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002626:	01 c2                	add    %eax,%edx
81002628:	8b 45 20             	mov    0x20(%ebp),%eax
8100262b:	89 50 04             	mov    %edx,0x4(%eax)
8100262e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002632:	78 5d                	js     81002691 <getopt_internal+0xb0a>
81002634:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81002638:	74 08                	je     81002642 <getopt_internal+0xabb>
8100263a:	8b 45 18             	mov    0x18(%ebp),%eax
8100263d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002640:	89 10                	mov    %edx,(%eax)
81002642:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002645:	c1 e0 04             	shl    $0x4,%eax
81002648:	89 c2                	mov    %eax,%edx
8100264a:	8b 45 14             	mov    0x14(%ebp),%eax
8100264d:	01 d0                	add    %edx,%eax
8100264f:	8b 40 08             	mov    0x8(%eax),%eax
81002652:	85 c0                	test   %eax,%eax
81002654:	74 29                	je     8100267f <getopt_internal+0xaf8>
81002656:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002659:	c1 e0 04             	shl    $0x4,%eax
8100265c:	89 c2                	mov    %eax,%edx
8100265e:	8b 45 14             	mov    0x14(%ebp),%eax
81002661:	01 c2                	add    %eax,%edx
81002663:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002666:	c1 e0 04             	shl    $0x4,%eax
81002669:	89 c1                	mov    %eax,%ecx
8100266b:	8b 45 14             	mov    0x14(%ebp),%eax
8100266e:	01 c8                	add    %ecx,%eax
81002670:	8b 40 08             	mov    0x8(%eax),%eax
81002673:	8b 52 0c             	mov    0xc(%edx),%edx
81002676:	89 10                	mov    %edx,(%eax)
81002678:	b8 00 00 00 00       	mov    $0x0,%eax
8100267d:	eb 18                	jmp    81002697 <getopt_internal+0xb10>
8100267f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002682:	c1 e0 04             	shl    $0x4,%eax
81002685:	89 c2                	mov    %eax,%edx
81002687:	8b 45 14             	mov    0x14(%ebp),%eax
8100268a:	01 d0                	add    %edx,%eax
8100268c:	8b 40 0c             	mov    0xc(%eax),%eax
8100268f:	eb 06                	jmp    81002697 <getopt_internal+0xb10>
81002691:	8b 45 20             	mov    0x20(%ebp),%eax
81002694:	8b 40 0c             	mov    0xc(%eax),%eax
81002697:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100269a:	c9                   	leave  
8100269b:	c3                   	ret    

8100269c <getopt>:
8100269c:	55                   	push   %ebp
8100269d:	89 e5                	mov    %esp,%ebp
8100269f:	83 ec 28             	sub    $0x28,%esp
810026a2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026a5:	50                   	push   %eax
810026a6:	e8 31 f4 ff ff       	call   81001adc <read_globals>
810026ab:	83 c4 04             	add    $0x4,%esp
810026ae:	83 ec 04             	sub    $0x4,%esp
810026b1:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026b4:	50                   	push   %eax
810026b5:	6a 00                	push   $0x0
810026b7:	6a 00                	push   $0x0
810026b9:	6a 00                	push   $0x0
810026bb:	ff 75 10             	push   0x10(%ebp)
810026be:	ff 75 0c             	push   0xc(%ebp)
810026c1:	ff 75 08             	push   0x8(%ebp)
810026c4:	e8 be f4 ff ff       	call   81001b87 <getopt_internal>
810026c9:	83 c4 20             	add    $0x20,%esp
810026cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026cf:	83 ec 0c             	sub    $0xc,%esp
810026d2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026d5:	50                   	push   %eax
810026d6:	e8 5a f4 ff ff       	call   81001b35 <write_globals>
810026db:	83 c4 10             	add    $0x10,%esp
810026de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026e1:	c9                   	leave  
810026e2:	c3                   	ret    

810026e3 <getopt_long>:
810026e3:	55                   	push   %ebp
810026e4:	89 e5                	mov    %esp,%ebp
810026e6:	83 ec 28             	sub    $0x28,%esp
810026e9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026ec:	50                   	push   %eax
810026ed:	e8 ea f3 ff ff       	call   81001adc <read_globals>
810026f2:	83 c4 04             	add    $0x4,%esp
810026f5:	83 ec 04             	sub    $0x4,%esp
810026f8:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026fb:	50                   	push   %eax
810026fc:	6a 00                	push   $0x0
810026fe:	ff 75 18             	push   0x18(%ebp)
81002701:	ff 75 14             	push   0x14(%ebp)
81002704:	ff 75 10             	push   0x10(%ebp)
81002707:	ff 75 0c             	push   0xc(%ebp)
8100270a:	ff 75 08             	push   0x8(%ebp)
8100270d:	e8 75 f4 ff ff       	call   81001b87 <getopt_internal>
81002712:	83 c4 20             	add    $0x20,%esp
81002715:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002718:	83 ec 0c             	sub    $0xc,%esp
8100271b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100271e:	50                   	push   %eax
8100271f:	e8 11 f4 ff ff       	call   81001b35 <write_globals>
81002724:	83 c4 10             	add    $0x10,%esp
81002727:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100272a:	c9                   	leave  
8100272b:	c3                   	ret    

8100272c <getopt_long_only>:
8100272c:	55                   	push   %ebp
8100272d:	89 e5                	mov    %esp,%ebp
8100272f:	83 ec 28             	sub    $0x28,%esp
81002732:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002735:	50                   	push   %eax
81002736:	e8 a1 f3 ff ff       	call   81001adc <read_globals>
8100273b:	83 c4 04             	add    $0x4,%esp
8100273e:	83 ec 04             	sub    $0x4,%esp
81002741:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002744:	50                   	push   %eax
81002745:	6a 01                	push   $0x1
81002747:	ff 75 18             	push   0x18(%ebp)
8100274a:	ff 75 14             	push   0x14(%ebp)
8100274d:	ff 75 10             	push   0x10(%ebp)
81002750:	ff 75 0c             	push   0xc(%ebp)
81002753:	ff 75 08             	push   0x8(%ebp)
81002756:	e8 2c f4 ff ff       	call   81001b87 <getopt_internal>
8100275b:	83 c4 20             	add    $0x20,%esp
8100275e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002761:	83 ec 0c             	sub    $0xc,%esp
81002764:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002767:	50                   	push   %eax
81002768:	e8 c8 f3 ff ff       	call   81001b35 <write_globals>
8100276d:	83 c4 10             	add    $0x10,%esp
81002770:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002773:	c9                   	leave  
81002774:	c3                   	ret    

81002775 <__getopt_r>:
81002775:	55                   	push   %ebp
81002776:	89 e5                	mov    %esp,%ebp
81002778:	83 ec 08             	sub    $0x8,%esp
8100277b:	83 ec 04             	sub    $0x4,%esp
8100277e:	ff 75 14             	push   0x14(%ebp)
81002781:	6a 00                	push   $0x0
81002783:	6a 00                	push   $0x0
81002785:	6a 00                	push   $0x0
81002787:	ff 75 10             	push   0x10(%ebp)
8100278a:	ff 75 0c             	push   0xc(%ebp)
8100278d:	ff 75 08             	push   0x8(%ebp)
81002790:	e8 f2 f3 ff ff       	call   81001b87 <getopt_internal>
81002795:	83 c4 20             	add    $0x20,%esp
81002798:	c9                   	leave  
81002799:	c3                   	ret    

8100279a <__getopt_long_r>:
8100279a:	55                   	push   %ebp
8100279b:	89 e5                	mov    %esp,%ebp
8100279d:	83 ec 08             	sub    $0x8,%esp
810027a0:	83 ec 04             	sub    $0x4,%esp
810027a3:	ff 75 1c             	push   0x1c(%ebp)
810027a6:	6a 00                	push   $0x0
810027a8:	ff 75 18             	push   0x18(%ebp)
810027ab:	ff 75 14             	push   0x14(%ebp)
810027ae:	ff 75 10             	push   0x10(%ebp)
810027b1:	ff 75 0c             	push   0xc(%ebp)
810027b4:	ff 75 08             	push   0x8(%ebp)
810027b7:	e8 cb f3 ff ff       	call   81001b87 <getopt_internal>
810027bc:	83 c4 20             	add    $0x20,%esp
810027bf:	c9                   	leave  
810027c0:	c3                   	ret    

810027c1 <__getopt_long_only_r>:
810027c1:	55                   	push   %ebp
810027c2:	89 e5                	mov    %esp,%ebp
810027c4:	83 ec 08             	sub    $0x8,%esp
810027c7:	83 ec 04             	sub    $0x4,%esp
810027ca:	ff 75 1c             	push   0x1c(%ebp)
810027cd:	6a 01                	push   $0x1
810027cf:	ff 75 18             	push   0x18(%ebp)
810027d2:	ff 75 14             	push   0x14(%ebp)
810027d5:	ff 75 10             	push   0x10(%ebp)
810027d8:	ff 75 0c             	push   0xc(%ebp)
810027db:	ff 75 08             	push   0x8(%ebp)
810027de:	e8 a4 f3 ff ff       	call   81001b87 <getopt_internal>
810027e3:	83 c4 20             	add    $0x20,%esp
810027e6:	c9                   	leave  
810027e7:	c3                   	ret    

810027e8 <__getreent>:
810027e8:	55                   	push   %ebp
810027e9:	89 e5                	mov    %esp,%ebp
810027eb:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810027f0:	5d                   	pop    %ebp
810027f1:	c3                   	ret    

810027f2 <malloc>:
810027f2:	55                   	push   %ebp
810027f3:	89 e5                	mov    %esp,%ebp
810027f5:	83 ec 08             	sub    $0x8,%esp
810027f8:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810027fd:	83 ec 08             	sub    $0x8,%esp
81002800:	ff 75 08             	push   0x8(%ebp)
81002803:	50                   	push   %eax
81002804:	e8 b5 02 00 00       	call   81002abe <_malloc_r>
81002809:	83 c4 10             	add    $0x10,%esp
8100280c:	c9                   	leave  
8100280d:	c3                   	ret    

8100280e <free>:
8100280e:	55                   	push   %ebp
8100280f:	89 e5                	mov    %esp,%ebp
81002811:	83 ec 08             	sub    $0x8,%esp
81002814:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002819:	83 ec 08             	sub    $0x8,%esp
8100281c:	ff 75 08             	push   0x8(%ebp)
8100281f:	50                   	push   %eax
81002820:	e8 e9 ea ff ff       	call   8100130e <_free_r>
81002825:	83 c4 10             	add    $0x10,%esp
81002828:	90                   	nop
81002829:	c9                   	leave  
8100282a:	c3                   	ret    

8100282b <malloc_extend_top>:
8100282b:	55                   	push   %ebp
8100282c:	89 e5                	mov    %esp,%ebp
8100282e:	83 ec 38             	sub    $0x38,%esp
81002831:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002838:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100283d:	8b 40 08             	mov    0x8(%eax),%eax
81002840:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002843:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002846:	8b 40 04             	mov    0x4(%eax),%eax
81002849:	83 e0 fc             	and    $0xfffffffc,%eax
8100284c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100284f:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002852:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002855:	01 d0                	add    %edx,%eax
81002857:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100285a:	8b 15 a0 81 00 81    	mov    0x810081a0,%edx
81002860:	8b 45 0c             	mov    0xc(%ebp),%eax
81002863:	01 d0                	add    %edx,%eax
81002865:	83 c0 10             	add    $0x10,%eax
81002868:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100286b:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81002872:	a1 cc 79 00 81       	mov    0x810079cc,%eax
81002877:	83 f8 ff             	cmp    $0xffffffff,%eax
8100287a:	74 15                	je     81002891 <malloc_extend_top+0x66>
8100287c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100287f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002882:	01 d0                	add    %edx,%eax
81002884:	8d 50 ff             	lea    -0x1(%eax),%edx
81002887:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100288a:	f7 d8                	neg    %eax
8100288c:	21 d0                	and    %edx,%eax
8100288e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002891:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002894:	83 ec 08             	sub    $0x8,%esp
81002897:	50                   	push   %eax
81002898:	ff 75 08             	push   0x8(%ebp)
8100289b:	e8 d5 1a 00 00       	call   81004375 <_sbrk_r>
810028a0:	83 c4 10             	add    $0x10,%esp
810028a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028a6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028aa:	0f 84 0b 02 00 00    	je     81002abb <malloc_extend_top+0x290>
810028b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028b3:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810028b6:	73 0e                	jae    810028c6 <malloc_extend_top+0x9b>
810028b8:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810028bd:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810028c0:	0f 85 f5 01 00 00    	jne    81002abb <malloc_extend_top+0x290>
810028c6:	a1 c0 81 00 81       	mov    0x810081c0,%eax
810028cb:	89 c2                	mov    %eax,%edx
810028cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028d0:	01 d0                	add    %edx,%eax
810028d2:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810028d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028da:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810028dd:	75 30                	jne    8100290f <malloc_extend_top+0xe4>
810028df:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028e2:	8d 50 ff             	lea    -0x1(%eax),%edx
810028e5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810028e8:	21 d0                	and    %edx,%eax
810028ea:	85 c0                	test   %eax,%eax
810028ec:	75 21                	jne    8100290f <malloc_extend_top+0xe4>
810028ee:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028f4:	01 d0                	add    %edx,%eax
810028f6:	89 45 d0             	mov    %eax,-0x30(%ebp)
810028f9:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810028fe:	8b 40 08             	mov    0x8(%eax),%eax
81002901:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002904:	83 ca 01             	or     $0x1,%edx
81002907:	89 50 04             	mov    %edx,0x4(%eax)
8100290a:	e9 76 01 00 00       	jmp    81002a85 <malloc_extend_top+0x25a>
8100290f:	a1 cc 79 00 81       	mov    0x810079cc,%eax
81002914:	83 f8 ff             	cmp    $0xffffffff,%eax
81002917:	75 0a                	jne    81002923 <malloc_extend_top+0xf8>
81002919:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100291c:	a3 cc 79 00 81       	mov    %eax,0x810079cc
81002921:	eb 13                	jmp    81002936 <malloc_extend_top+0x10b>
81002923:	8b 15 c0 81 00 81    	mov    0x810081c0,%edx
81002929:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100292c:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100292f:	01 d0                	add    %edx,%eax
81002931:	a3 c0 81 00 81       	mov    %eax,0x810081c0
81002936:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002939:	83 c0 08             	add    $0x8,%eax
8100293c:	83 e0 07             	and    $0x7,%eax
8100293f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002942:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002946:	74 13                	je     8100295b <malloc_extend_top+0x130>
81002948:	b8 08 00 00 00       	mov    $0x8,%eax
8100294d:	2b 45 cc             	sub    -0x34(%ebp),%eax
81002950:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002953:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002956:	01 45 f4             	add    %eax,-0xc(%ebp)
81002959:	eb 07                	jmp    81002962 <malloc_extend_top+0x137>
8100295b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002962:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002965:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002968:	01 d0                	add    %edx,%eax
8100296a:	89 c2                	mov    %eax,%edx
8100296c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100296f:	83 e8 01             	sub    $0x1,%eax
81002972:	21 c2                	and    %eax,%edx
81002974:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002977:	29 d0                	sub    %edx,%eax
81002979:	01 45 f0             	add    %eax,-0x10(%ebp)
8100297c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100297f:	83 e8 01             	sub    $0x1,%eax
81002982:	21 45 f0             	and    %eax,-0x10(%ebp)
81002985:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002988:	83 ec 08             	sub    $0x8,%esp
8100298b:	50                   	push   %eax
8100298c:	ff 75 08             	push   0x8(%ebp)
8100298f:	e8 e1 19 00 00       	call   81004375 <_sbrk_r>
81002994:	83 c4 10             	add    $0x10,%esp
81002997:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100299a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100299e:	75 28                	jne    810029c8 <malloc_extend_top+0x19d>
810029a0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810029a7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810029ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
810029b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810029b4:	01 d0                	add    %edx,%eax
810029b6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810029b9:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810029bd:	74 09                	je     810029c8 <malloc_extend_top+0x19d>
810029bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029c2:	83 e8 08             	sub    $0x8,%eax
810029c5:	01 45 ec             	add    %eax,-0x14(%ebp)
810029c8:	a1 c0 81 00 81       	mov    0x810081c0,%eax
810029cd:	89 c2                	mov    %eax,%edx
810029cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029d2:	01 d0                	add    %edx,%eax
810029d4:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810029d9:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810029de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029e1:	89 42 08             	mov    %eax,0x8(%edx)
810029e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810029e7:	2b 45 f4             	sub    -0xc(%ebp),%eax
810029ea:	89 c2                	mov    %eax,%edx
810029ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029ef:	01 d0                	add    %edx,%eax
810029f1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810029f4:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810029f9:	8b 40 08             	mov    0x8(%eax),%eax
810029fc:	8b 55 d0             	mov    -0x30(%ebp),%edx
810029ff:	83 ca 01             	or     $0x1,%edx
81002a02:	89 50 04             	mov    %edx,0x4(%eax)
81002a05:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002a0a:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002a0d:	74 76                	je     81002a85 <malloc_extend_top+0x25a>
81002a0f:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002a13:	77 14                	ja     81002a29 <malloc_extend_top+0x1fe>
81002a15:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002a1a:	8b 40 08             	mov    0x8(%eax),%eax
81002a1d:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002a24:	e9 93 00 00 00       	jmp    81002abc <malloc_extend_top+0x291>
81002a29:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a2c:	83 e8 0c             	sub    $0xc,%eax
81002a2f:	83 e0 f8             	and    $0xfffffff8,%eax
81002a32:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a35:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a38:	8b 40 04             	mov    0x4(%eax),%eax
81002a3b:	83 e0 01             	and    $0x1,%eax
81002a3e:	0b 45 dc             	or     -0x24(%ebp),%eax
81002a41:	89 c2                	mov    %eax,%edx
81002a43:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a46:	89 50 04             	mov    %edx,0x4(%eax)
81002a49:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002a4c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a4f:	01 d0                	add    %edx,%eax
81002a51:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002a58:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a5b:	8d 50 04             	lea    0x4(%eax),%edx
81002a5e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a61:	01 d0                	add    %edx,%eax
81002a63:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002a6a:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002a6e:	76 15                	jbe    81002a85 <malloc_extend_top+0x25a>
81002a70:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a73:	83 c0 08             	add    $0x8,%eax
81002a76:	83 ec 08             	sub    $0x8,%esp
81002a79:	50                   	push   %eax
81002a7a:	ff 75 08             	push   0x8(%ebp)
81002a7d:	e8 8c e8 ff ff       	call   8100130e <_free_r>
81002a82:	83 c4 10             	add    $0x10,%esp
81002a85:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002a8a:	89 c2                	mov    %eax,%edx
81002a8c:	a1 a4 81 00 81       	mov    0x810081a4,%eax
81002a91:	39 c2                	cmp    %eax,%edx
81002a93:	76 0a                	jbe    81002a9f <malloc_extend_top+0x274>
81002a95:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002a9a:	a3 a4 81 00 81       	mov    %eax,0x810081a4
81002a9f:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002aa4:	89 c2                	mov    %eax,%edx
81002aa6:	a1 a8 81 00 81       	mov    0x810081a8,%eax
81002aab:	39 c2                	cmp    %eax,%edx
81002aad:	76 0d                	jbe    81002abc <malloc_extend_top+0x291>
81002aaf:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002ab4:	a3 a8 81 00 81       	mov    %eax,0x810081a8
81002ab9:	eb 01                	jmp    81002abc <malloc_extend_top+0x291>
81002abb:	90                   	nop
81002abc:	c9                   	leave  
81002abd:	c3                   	ret    

81002abe <_malloc_r>:
81002abe:	55                   	push   %ebp
81002abf:	89 e5                	mov    %esp,%ebp
81002ac1:	53                   	push   %ebx
81002ac2:	83 ec 44             	sub    $0x44,%esp
81002ac5:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ac8:	83 c0 0b             	add    $0xb,%eax
81002acb:	83 f8 16             	cmp    $0x16,%eax
81002ace:	76 0b                	jbe    81002adb <_malloc_r+0x1d>
81002ad0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ad3:	83 c0 0b             	add    $0xb,%eax
81002ad6:	83 e0 f8             	and    $0xfffffff8,%eax
81002ad9:	eb 05                	jmp    81002ae0 <_malloc_r+0x22>
81002adb:	b8 10 00 00 00       	mov    $0x10,%eax
81002ae0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002ae3:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ae6:	85 c0                	test   %eax,%eax
81002ae8:	78 08                	js     81002af2 <_malloc_r+0x34>
81002aea:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002aed:	3b 45 0c             	cmp    0xc(%ebp),%eax
81002af0:	73 13                	jae    81002b05 <_malloc_r+0x47>
81002af2:	8b 45 08             	mov    0x8(%ebp),%eax
81002af5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002afb:	b8 00 00 00 00       	mov    $0x0,%eax
81002b00:	e9 d6 07 00 00       	jmp    810032db <_malloc_r+0x81d>
81002b05:	83 ec 0c             	sub    $0xc,%esp
81002b08:	ff 75 08             	push   0x8(%ebp)
81002b0b:	e8 88 09 00 00       	call   81003498 <__malloc_lock>
81002b10:	83 c4 10             	add    $0x10,%esp
81002b13:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002b1a:	0f 87 b0 00 00 00    	ja     81002bd0 <_malloc_r+0x112>
81002b20:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b23:	c1 e8 03             	shr    $0x3,%eax
81002b26:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b29:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b2c:	83 c0 01             	add    $0x1,%eax
81002b2f:	01 c0                	add    %eax,%eax
81002b31:	c1 e0 02             	shl    $0x2,%eax
81002b34:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002b39:	83 e8 08             	sub    $0x8,%eax
81002b3c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002b3f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b42:	8b 40 0c             	mov    0xc(%eax),%eax
81002b45:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b4b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002b4e:	75 0d                	jne    81002b5d <_malloc_r+0x9f>
81002b50:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81002b54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b57:	8b 40 0c             	mov    0xc(%eax),%eax
81002b5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b60:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002b63:	74 62                	je     81002bc7 <_malloc_r+0x109>
81002b65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b68:	8b 40 04             	mov    0x4(%eax),%eax
81002b6b:	83 e0 fc             	and    $0xfffffffc,%eax
81002b6e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002b71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b74:	8b 40 0c             	mov    0xc(%eax),%eax
81002b77:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b7d:	8b 40 08             	mov    0x8(%eax),%eax
81002b80:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b83:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b86:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b89:	89 50 0c             	mov    %edx,0xc(%eax)
81002b8c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b8f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b92:	89 50 08             	mov    %edx,0x8(%eax)
81002b95:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b98:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b9b:	01 d0                	add    %edx,%eax
81002b9d:	8b 50 04             	mov    0x4(%eax),%edx
81002ba0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ba3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ba6:	01 c8                	add    %ecx,%eax
81002ba8:	83 ca 01             	or     $0x1,%edx
81002bab:	89 50 04             	mov    %edx,0x4(%eax)
81002bae:	83 ec 0c             	sub    $0xc,%esp
81002bb1:	ff 75 08             	push   0x8(%ebp)
81002bb4:	e8 e5 08 00 00       	call   8100349e <__malloc_unlock>
81002bb9:	83 c4 10             	add    $0x10,%esp
81002bbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bbf:	83 c0 08             	add    $0x8,%eax
81002bc2:	e9 14 07 00 00       	jmp    810032db <_malloc_r+0x81d>
81002bc7:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002bcb:	e9 46 01 00 00       	jmp    81002d16 <_malloc_r+0x258>
81002bd0:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bd3:	c1 e8 09             	shr    $0x9,%eax
81002bd6:	85 c0                	test   %eax,%eax
81002bd8:	75 08                	jne    81002be2 <_malloc_r+0x124>
81002bda:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bdd:	c1 e8 03             	shr    $0x3,%eax
81002be0:	eb 77                	jmp    81002c59 <_malloc_r+0x19b>
81002be2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002be5:	c1 e8 09             	shr    $0x9,%eax
81002be8:	83 f8 04             	cmp    $0x4,%eax
81002beb:	77 0b                	ja     81002bf8 <_malloc_r+0x13a>
81002bed:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bf0:	c1 e8 06             	shr    $0x6,%eax
81002bf3:	83 c0 38             	add    $0x38,%eax
81002bf6:	eb 61                	jmp    81002c59 <_malloc_r+0x19b>
81002bf8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bfb:	c1 e8 09             	shr    $0x9,%eax
81002bfe:	83 f8 14             	cmp    $0x14,%eax
81002c01:	77 0b                	ja     81002c0e <_malloc_r+0x150>
81002c03:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c06:	c1 e8 09             	shr    $0x9,%eax
81002c09:	83 c0 5b             	add    $0x5b,%eax
81002c0c:	eb 4b                	jmp    81002c59 <_malloc_r+0x19b>
81002c0e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c11:	c1 e8 09             	shr    $0x9,%eax
81002c14:	83 f8 54             	cmp    $0x54,%eax
81002c17:	77 0b                	ja     81002c24 <_malloc_r+0x166>
81002c19:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c1c:	c1 e8 0c             	shr    $0xc,%eax
81002c1f:	83 c0 6e             	add    $0x6e,%eax
81002c22:	eb 35                	jmp    81002c59 <_malloc_r+0x19b>
81002c24:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c27:	c1 e8 09             	shr    $0x9,%eax
81002c2a:	3d 54 01 00 00       	cmp    $0x154,%eax
81002c2f:	77 0b                	ja     81002c3c <_malloc_r+0x17e>
81002c31:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c34:	c1 e8 0f             	shr    $0xf,%eax
81002c37:	83 c0 77             	add    $0x77,%eax
81002c3a:	eb 1d                	jmp    81002c59 <_malloc_r+0x19b>
81002c3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c3f:	c1 e8 09             	shr    $0x9,%eax
81002c42:	3d 54 05 00 00       	cmp    $0x554,%eax
81002c47:	77 0b                	ja     81002c54 <_malloc_r+0x196>
81002c49:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c4c:	c1 e8 12             	shr    $0x12,%eax
81002c4f:	83 c0 7c             	add    $0x7c,%eax
81002c52:	eb 05                	jmp    81002c59 <_malloc_r+0x19b>
81002c54:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002c59:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002c5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c5f:	83 c0 01             	add    $0x1,%eax
81002c62:	01 c0                	add    %eax,%eax
81002c64:	c1 e0 02             	shl    $0x2,%eax
81002c67:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002c6c:	83 e8 08             	sub    $0x8,%eax
81002c6f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002c72:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c75:	8b 40 0c             	mov    0xc(%eax),%eax
81002c78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c7b:	e9 86 00 00 00       	jmp    81002d06 <_malloc_r+0x248>
81002c80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c83:	8b 40 04             	mov    0x4(%eax),%eax
81002c86:	83 e0 fc             	and    $0xfffffffc,%eax
81002c89:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002c8c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c8f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002c92:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c95:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002c99:	7e 06                	jle    81002ca1 <_malloc_r+0x1e3>
81002c9b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002c9f:	eb 71                	jmp    81002d12 <_malloc_r+0x254>
81002ca1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002ca5:	78 56                	js     81002cfd <_malloc_r+0x23f>
81002ca7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002caa:	8b 40 0c             	mov    0xc(%eax),%eax
81002cad:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cb3:	8b 40 08             	mov    0x8(%eax),%eax
81002cb6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002cb9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cbc:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cbf:	89 50 0c             	mov    %edx,0xc(%eax)
81002cc2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cc5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002cc8:	89 50 08             	mov    %edx,0x8(%eax)
81002ccb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cce:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cd1:	01 d0                	add    %edx,%eax
81002cd3:	8b 50 04             	mov    0x4(%eax),%edx
81002cd6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002cd9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cdc:	01 c8                	add    %ecx,%eax
81002cde:	83 ca 01             	or     $0x1,%edx
81002ce1:	89 50 04             	mov    %edx,0x4(%eax)
81002ce4:	83 ec 0c             	sub    $0xc,%esp
81002ce7:	ff 75 08             	push   0x8(%ebp)
81002cea:	e8 af 07 00 00       	call   8100349e <__malloc_unlock>
81002cef:	83 c4 10             	add    $0x10,%esp
81002cf2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cf5:	83 c0 08             	add    $0x8,%eax
81002cf8:	e9 de 05 00 00       	jmp    810032db <_malloc_r+0x81d>
81002cfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d00:	8b 40 0c             	mov    0xc(%eax),%eax
81002d03:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d09:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002d0c:	0f 85 6e ff ff ff    	jne    81002c80 <_malloc_r+0x1c2>
81002d12:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002d16:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d1b:	8b 40 08             	mov    0x8(%eax),%eax
81002d1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d21:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d26:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002d29:	0f 84 9c 02 00 00    	je     81002fcb <_malloc_r+0x50d>
81002d2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d32:	8b 40 04             	mov    0x4(%eax),%eax
81002d35:	83 e0 fc             	and    $0xfffffffc,%eax
81002d38:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d3b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d3e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002d41:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d44:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002d48:	7e 7a                	jle    81002dc4 <_malloc_r+0x306>
81002d4a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d4d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d50:	01 d0                	add    %edx,%eax
81002d52:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002d55:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d58:	83 c8 01             	or     $0x1,%eax
81002d5b:	89 c2                	mov    %eax,%edx
81002d5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d60:	89 50 04             	mov    %edx,0x4(%eax)
81002d63:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d68:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002d6b:	89 50 0c             	mov    %edx,0xc(%eax)
81002d6e:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002d73:	8b 40 0c             	mov    0xc(%eax),%eax
81002d76:	89 42 08             	mov    %eax,0x8(%edx)
81002d79:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002d7e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d81:	89 50 0c             	mov    %edx,0xc(%eax)
81002d84:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d87:	8b 50 0c             	mov    0xc(%eax),%edx
81002d8a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d8d:	89 50 08             	mov    %edx,0x8(%eax)
81002d90:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d93:	83 c8 01             	or     $0x1,%eax
81002d96:	89 c2                	mov    %eax,%edx
81002d98:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d9b:	89 50 04             	mov    %edx,0x4(%eax)
81002d9e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002da1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002da4:	01 c2                	add    %eax,%edx
81002da6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002da9:	89 02                	mov    %eax,(%edx)
81002dab:	83 ec 0c             	sub    $0xc,%esp
81002dae:	ff 75 08             	push   0x8(%ebp)
81002db1:	e8 e8 06 00 00       	call   8100349e <__malloc_unlock>
81002db6:	83 c4 10             	add    $0x10,%esp
81002db9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dbc:	83 c0 08             	add    $0x8,%eax
81002dbf:	e9 17 05 00 00       	jmp    810032db <_malloc_r+0x81d>
81002dc4:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002dc9:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002dce:	89 50 0c             	mov    %edx,0xc(%eax)
81002dd1:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002dd6:	8b 40 0c             	mov    0xc(%eax),%eax
81002dd9:	89 42 08             	mov    %eax,0x8(%edx)
81002ddc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002de0:	78 32                	js     81002e14 <_malloc_r+0x356>
81002de2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002de5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002de8:	01 d0                	add    %edx,%eax
81002dea:	8b 50 04             	mov    0x4(%eax),%edx
81002ded:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002df0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002df3:	01 c8                	add    %ecx,%eax
81002df5:	83 ca 01             	or     $0x1,%edx
81002df8:	89 50 04             	mov    %edx,0x4(%eax)
81002dfb:	83 ec 0c             	sub    $0xc,%esp
81002dfe:	ff 75 08             	push   0x8(%ebp)
81002e01:	e8 98 06 00 00       	call   8100349e <__malloc_unlock>
81002e06:	83 c4 10             	add    $0x10,%esp
81002e09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e0c:	83 c0 08             	add    $0x8,%eax
81002e0f:	e9 c7 04 00 00       	jmp    810032db <_malloc_r+0x81d>
81002e14:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002e1b:	77 7f                	ja     81002e9c <_malloc_r+0x3de>
81002e1d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e20:	c1 e8 03             	shr    $0x3,%eax
81002e23:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e26:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002e2b:	8b 58 04             	mov    0x4(%eax),%ebx
81002e2e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e31:	8d 50 03             	lea    0x3(%eax),%edx
81002e34:	85 c0                	test   %eax,%eax
81002e36:	0f 48 c2             	cmovs  %edx,%eax
81002e39:	c1 f8 02             	sar    $0x2,%eax
81002e3c:	ba 01 00 00 00       	mov    $0x1,%edx
81002e41:	89 c1                	mov    %eax,%ecx
81002e43:	d3 e2                	shl    %cl,%edx
81002e45:	89 d0                	mov    %edx,%eax
81002e47:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81002e4c:	09 d8                	or     %ebx,%eax
81002e4e:	89 42 04             	mov    %eax,0x4(%edx)
81002e51:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e54:	83 c0 01             	add    $0x1,%eax
81002e57:	01 c0                	add    %eax,%eax
81002e59:	c1 e0 02             	shl    $0x2,%eax
81002e5c:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002e61:	83 e8 08             	sub    $0x8,%eax
81002e64:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e67:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e6a:	8b 40 08             	mov    0x8(%eax),%eax
81002e6d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e73:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e76:	89 50 0c             	mov    %edx,0xc(%eax)
81002e79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e7c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e7f:	89 50 08             	mov    %edx,0x8(%eax)
81002e82:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e85:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e88:	89 50 08             	mov    %edx,0x8(%eax)
81002e8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e8e:	8b 50 08             	mov    0x8(%eax),%edx
81002e91:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e94:	89 50 0c             	mov    %edx,0xc(%eax)
81002e97:	e9 2f 01 00 00       	jmp    81002fcb <_malloc_r+0x50d>
81002e9c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e9f:	c1 e8 09             	shr    $0x9,%eax
81002ea2:	85 c0                	test   %eax,%eax
81002ea4:	75 08                	jne    81002eae <_malloc_r+0x3f0>
81002ea6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ea9:	c1 e8 03             	shr    $0x3,%eax
81002eac:	eb 77                	jmp    81002f25 <_malloc_r+0x467>
81002eae:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eb1:	c1 e8 09             	shr    $0x9,%eax
81002eb4:	83 f8 04             	cmp    $0x4,%eax
81002eb7:	77 0b                	ja     81002ec4 <_malloc_r+0x406>
81002eb9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ebc:	c1 e8 06             	shr    $0x6,%eax
81002ebf:	83 c0 38             	add    $0x38,%eax
81002ec2:	eb 61                	jmp    81002f25 <_malloc_r+0x467>
81002ec4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ec7:	c1 e8 09             	shr    $0x9,%eax
81002eca:	83 f8 14             	cmp    $0x14,%eax
81002ecd:	77 0b                	ja     81002eda <_malloc_r+0x41c>
81002ecf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ed2:	c1 e8 09             	shr    $0x9,%eax
81002ed5:	83 c0 5b             	add    $0x5b,%eax
81002ed8:	eb 4b                	jmp    81002f25 <_malloc_r+0x467>
81002eda:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002edd:	c1 e8 09             	shr    $0x9,%eax
81002ee0:	83 f8 54             	cmp    $0x54,%eax
81002ee3:	77 0b                	ja     81002ef0 <_malloc_r+0x432>
81002ee5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ee8:	c1 e8 0c             	shr    $0xc,%eax
81002eeb:	83 c0 6e             	add    $0x6e,%eax
81002eee:	eb 35                	jmp    81002f25 <_malloc_r+0x467>
81002ef0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ef3:	c1 e8 09             	shr    $0x9,%eax
81002ef6:	3d 54 01 00 00       	cmp    $0x154,%eax
81002efb:	77 0b                	ja     81002f08 <_malloc_r+0x44a>
81002efd:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f00:	c1 e8 0f             	shr    $0xf,%eax
81002f03:	83 c0 77             	add    $0x77,%eax
81002f06:	eb 1d                	jmp    81002f25 <_malloc_r+0x467>
81002f08:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f0b:	c1 e8 09             	shr    $0x9,%eax
81002f0e:	3d 54 05 00 00       	cmp    $0x554,%eax
81002f13:	77 0b                	ja     81002f20 <_malloc_r+0x462>
81002f15:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f18:	c1 e8 12             	shr    $0x12,%eax
81002f1b:	83 c0 7c             	add    $0x7c,%eax
81002f1e:	eb 05                	jmp    81002f25 <_malloc_r+0x467>
81002f20:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002f25:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002f28:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f2b:	83 c0 01             	add    $0x1,%eax
81002f2e:	01 c0                	add    %eax,%eax
81002f30:	c1 e0 02             	shl    $0x2,%eax
81002f33:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002f38:	83 e8 08             	sub    $0x8,%eax
81002f3b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f3e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f41:	8b 40 08             	mov    0x8(%eax),%eax
81002f44:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f47:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f4a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002f4d:	75 36                	jne    81002f85 <_malloc_r+0x4c7>
81002f4f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002f54:	8b 58 04             	mov    0x4(%eax),%ebx
81002f57:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f5a:	8d 50 03             	lea    0x3(%eax),%edx
81002f5d:	85 c0                	test   %eax,%eax
81002f5f:	0f 48 c2             	cmovs  %edx,%eax
81002f62:	c1 f8 02             	sar    $0x2,%eax
81002f65:	ba 01 00 00 00       	mov    $0x1,%edx
81002f6a:	89 c1                	mov    %eax,%ecx
81002f6c:	d3 e2                	shl    %cl,%edx
81002f6e:	89 d0                	mov    %edx,%eax
81002f70:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81002f75:	09 d8                	or     %ebx,%eax
81002f77:	89 42 04             	mov    %eax,0x4(%edx)
81002f7a:	eb 28                	jmp    81002fa4 <_malloc_r+0x4e6>
81002f7c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f7f:	8b 40 08             	mov    0x8(%eax),%eax
81002f82:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f85:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f88:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002f8b:	74 0e                	je     81002f9b <_malloc_r+0x4dd>
81002f8d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f90:	8b 40 04             	mov    0x4(%eax),%eax
81002f93:	83 e0 fc             	and    $0xfffffffc,%eax
81002f96:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002f99:	72 e1                	jb     81002f7c <_malloc_r+0x4be>
81002f9b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f9e:	8b 40 0c             	mov    0xc(%eax),%eax
81002fa1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002fa4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa7:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002faa:	89 50 0c             	mov    %edx,0xc(%eax)
81002fad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002fb3:	89 50 08             	mov    %edx,0x8(%eax)
81002fb6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fb9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fbc:	89 50 08             	mov    %edx,0x8(%eax)
81002fbf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fc2:	8b 50 08             	mov    0x8(%eax),%edx
81002fc5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fc8:	89 50 0c             	mov    %edx,0xc(%eax)
81002fcb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fce:	8d 50 03             	lea    0x3(%eax),%edx
81002fd1:	85 c0                	test   %eax,%eax
81002fd3:	0f 48 c2             	cmovs  %edx,%eax
81002fd6:	c1 f8 02             	sar    $0x2,%eax
81002fd9:	ba 01 00 00 00       	mov    $0x1,%edx
81002fde:	89 c1                	mov    %eax,%ecx
81002fe0:	d3 e2                	shl    %cl,%edx
81002fe2:	89 d0                	mov    %edx,%eax
81002fe4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002fe7:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002fec:	8b 40 04             	mov    0x4(%eax),%eax
81002fef:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002ff2:	0f 87 13 02 00 00    	ja     8100320b <_malloc_r+0x74d>
81002ff8:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002ffd:	8b 40 04             	mov    0x4(%eax),%eax
81003000:	23 45 e4             	and    -0x1c(%ebp),%eax
81003003:	85 c0                	test   %eax,%eax
81003005:	75 27                	jne    8100302e <_malloc_r+0x570>
81003007:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100300a:	83 e0 fc             	and    $0xfffffffc,%eax
8100300d:	83 c0 04             	add    $0x4,%eax
81003010:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003013:	d1 65 e4             	shll   -0x1c(%ebp)
81003016:	eb 07                	jmp    8100301f <_malloc_r+0x561>
81003018:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100301c:	d1 65 e4             	shll   -0x1c(%ebp)
8100301f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003024:	8b 40 04             	mov    0x4(%eax),%eax
81003027:	23 45 e4             	and    -0x1c(%ebp),%eax
8100302a:	85 c0                	test   %eax,%eax
8100302c:	74 ea                	je     81003018 <_malloc_r+0x55a>
8100302e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003031:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003034:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003037:	83 c0 01             	add    $0x1,%eax
8100303a:	01 c0                	add    %eax,%eax
8100303c:	c1 e0 02             	shl    $0x2,%eax
8100303f:	05 c0 75 00 81       	add    $0x810075c0,%eax
81003044:	83 e8 08             	sub    $0x8,%eax
81003047:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100304a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100304d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003050:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003053:	8b 40 0c             	mov    0xc(%eax),%eax
81003056:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003059:	e9 22 01 00 00       	jmp    81003180 <_malloc_r+0x6c2>
8100305e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003061:	8b 40 04             	mov    0x4(%eax),%eax
81003064:	83 e0 fc             	and    $0xfffffffc,%eax
81003067:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100306a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100306d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003070:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003073:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003077:	0f 8e 9e 00 00 00    	jle    8100311b <_malloc_r+0x65d>
8100307d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003080:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003083:	01 d0                	add    %edx,%eax
81003085:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003088:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100308b:	83 c8 01             	or     $0x1,%eax
8100308e:	89 c2                	mov    %eax,%edx
81003090:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003093:	89 50 04             	mov    %edx,0x4(%eax)
81003096:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003099:	8b 40 0c             	mov    0xc(%eax),%eax
8100309c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100309f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030a2:	8b 40 08             	mov    0x8(%eax),%eax
810030a5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810030a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030ab:	8b 55 d8             	mov    -0x28(%ebp),%edx
810030ae:	89 50 0c             	mov    %edx,0xc(%eax)
810030b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810030b4:	8b 55 dc             	mov    -0x24(%ebp),%edx
810030b7:	89 50 08             	mov    %edx,0x8(%eax)
810030ba:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
810030bf:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810030c2:	89 50 0c             	mov    %edx,0xc(%eax)
810030c5:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810030ca:	8b 40 0c             	mov    0xc(%eax),%eax
810030cd:	89 42 08             	mov    %eax,0x8(%edx)
810030d0:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810030d5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030d8:	89 50 0c             	mov    %edx,0xc(%eax)
810030db:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030de:	8b 50 0c             	mov    0xc(%eax),%edx
810030e1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030e4:	89 50 08             	mov    %edx,0x8(%eax)
810030e7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810030ea:	83 c8 01             	or     $0x1,%eax
810030ed:	89 c2                	mov    %eax,%edx
810030ef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030f2:	89 50 04             	mov    %edx,0x4(%eax)
810030f5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810030f8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030fb:	01 c2                	add    %eax,%edx
810030fd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003100:	89 02                	mov    %eax,(%edx)
81003102:	83 ec 0c             	sub    $0xc,%esp
81003105:	ff 75 08             	push   0x8(%ebp)
81003108:	e8 91 03 00 00       	call   8100349e <__malloc_unlock>
8100310d:	83 c4 10             	add    $0x10,%esp
81003110:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003113:	83 c0 08             	add    $0x8,%eax
81003116:	e9 c0 01 00 00       	jmp    810032db <_malloc_r+0x81d>
8100311b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100311f:	78 56                	js     81003177 <_malloc_r+0x6b9>
81003121:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003124:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003127:	01 d0                	add    %edx,%eax
81003129:	8b 50 04             	mov    0x4(%eax),%edx
8100312c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100312f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003132:	01 c8                	add    %ecx,%eax
81003134:	83 ca 01             	or     $0x1,%edx
81003137:	89 50 04             	mov    %edx,0x4(%eax)
8100313a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100313d:	8b 40 0c             	mov    0xc(%eax),%eax
81003140:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003143:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003146:	8b 40 08             	mov    0x8(%eax),%eax
81003149:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100314c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100314f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003152:	89 50 0c             	mov    %edx,0xc(%eax)
81003155:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003158:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100315b:	89 50 08             	mov    %edx,0x8(%eax)
8100315e:	83 ec 0c             	sub    $0xc,%esp
81003161:	ff 75 08             	push   0x8(%ebp)
81003164:	e8 35 03 00 00       	call   8100349e <__malloc_unlock>
81003169:	83 c4 10             	add    $0x10,%esp
8100316c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100316f:	83 c0 08             	add    $0x8,%eax
81003172:	e9 64 01 00 00       	jmp    810032db <_malloc_r+0x81d>
81003177:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100317a:	8b 40 0c             	mov    0xc(%eax),%eax
8100317d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003180:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003183:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003186:	0f 85 d2 fe ff ff    	jne    8100305e <_malloc_r+0x5a0>
8100318c:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003190:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003194:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003197:	83 e0 03             	and    $0x3,%eax
8100319a:	85 c0                	test   %eax,%eax
8100319c:	0f 85 ae fe ff ff    	jne    81003050 <_malloc_r+0x592>
810031a2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810031a5:	83 e0 03             	and    $0x3,%eax
810031a8:	85 c0                	test   %eax,%eax
810031aa:	75 19                	jne    810031c5 <_malloc_r+0x707>
810031ac:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810031b1:	8b 48 04             	mov    0x4(%eax),%ecx
810031b4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031b7:	f7 d0                	not    %eax
810031b9:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810031be:	21 c8                	and    %ecx,%eax
810031c0:	89 42 04             	mov    %eax,0x4(%edx)
810031c3:	eb 13                	jmp    810031d8 <_malloc_r+0x71a>
810031c5:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810031c9:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810031cd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810031d0:	8b 40 08             	mov    0x8(%eax),%eax
810031d3:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810031d6:	74 ca                	je     810031a2 <_malloc_r+0x6e4>
810031d8:	d1 65 e4             	shll   -0x1c(%ebp)
810031db:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810031e0:	8b 40 04             	mov    0x4(%eax),%eax
810031e3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810031e6:	77 23                	ja     8100320b <_malloc_r+0x74d>
810031e8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810031ec:	74 1d                	je     8100320b <_malloc_r+0x74d>
810031ee:	eb 07                	jmp    810031f7 <_malloc_r+0x739>
810031f0:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810031f4:	d1 65 e4             	shll   -0x1c(%ebp)
810031f7:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810031fc:	8b 40 04             	mov    0x4(%eax),%eax
810031ff:	23 45 e4             	and    -0x1c(%ebp),%eax
81003202:	85 c0                	test   %eax,%eax
81003204:	74 ea                	je     810031f0 <_malloc_r+0x732>
81003206:	e9 23 fe ff ff       	jmp    8100302e <_malloc_r+0x570>
8100320b:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003210:	8b 40 08             	mov    0x8(%eax),%eax
81003213:	8b 40 04             	mov    0x4(%eax),%eax
81003216:	83 e0 fc             	and    $0xfffffffc,%eax
81003219:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100321c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100321f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003224:	8b 40 08             	mov    0x8(%eax),%eax
81003227:	8b 40 04             	mov    0x4(%eax),%eax
8100322a:	83 e0 fc             	and    $0xfffffffc,%eax
8100322d:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003230:	77 06                	ja     81003238 <_malloc_r+0x77a>
81003232:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003236:	7f 53                	jg     8100328b <_malloc_r+0x7cd>
81003238:	83 ec 08             	sub    $0x8,%esp
8100323b:	ff 75 d0             	push   -0x30(%ebp)
8100323e:	ff 75 08             	push   0x8(%ebp)
81003241:	e8 e5 f5 ff ff       	call   8100282b <malloc_extend_top>
81003246:	83 c4 10             	add    $0x10,%esp
81003249:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100324e:	8b 40 08             	mov    0x8(%eax),%eax
81003251:	8b 40 04             	mov    0x4(%eax),%eax
81003254:	83 e0 fc             	and    $0xfffffffc,%eax
81003257:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100325a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100325d:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003262:	8b 40 08             	mov    0x8(%eax),%eax
81003265:	8b 40 04             	mov    0x4(%eax),%eax
81003268:	83 e0 fc             	and    $0xfffffffc,%eax
8100326b:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100326e:	77 06                	ja     81003276 <_malloc_r+0x7b8>
81003270:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003274:	7f 15                	jg     8100328b <_malloc_r+0x7cd>
81003276:	83 ec 0c             	sub    $0xc,%esp
81003279:	ff 75 08             	push   0x8(%ebp)
8100327c:	e8 1d 02 00 00       	call   8100349e <__malloc_unlock>
81003281:	83 c4 10             	add    $0x10,%esp
81003284:	b8 00 00 00 00       	mov    $0x0,%eax
81003289:	eb 50                	jmp    810032db <_malloc_r+0x81d>
8100328b:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003290:	8b 40 08             	mov    0x8(%eax),%eax
81003293:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003296:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003299:	83 c8 01             	or     $0x1,%eax
8100329c:	89 c2                	mov    %eax,%edx
8100329e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032a1:	89 50 04             	mov    %edx,0x4(%eax)
810032a4:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810032a9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810032ac:	8b 45 d0             	mov    -0x30(%ebp),%eax
810032af:	01 c8                	add    %ecx,%eax
810032b1:	89 42 08             	mov    %eax,0x8(%edx)
810032b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032b7:	83 c8 01             	or     $0x1,%eax
810032ba:	89 c2                	mov    %eax,%edx
810032bc:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810032c1:	8b 40 08             	mov    0x8(%eax),%eax
810032c4:	89 50 04             	mov    %edx,0x4(%eax)
810032c7:	83 ec 0c             	sub    $0xc,%esp
810032ca:	ff 75 08             	push   0x8(%ebp)
810032cd:	e8 cc 01 00 00       	call   8100349e <__malloc_unlock>
810032d2:	83 c4 10             	add    $0x10,%esp
810032d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032d8:	83 c0 08             	add    $0x8,%eax
810032db:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810032de:	c9                   	leave  
810032df:	c3                   	ret    

810032e0 <memchr>:
810032e0:	55                   	push   %ebp
810032e1:	89 e5                	mov    %esp,%ebp
810032e3:	57                   	push   %edi
810032e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810032e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810032eb:	8b 7d 08             	mov    0x8(%ebp),%edi
810032ee:	31 d2                	xor    %edx,%edx
810032f0:	85 c9                	test   %ecx,%ecx
810032f2:	74 79                	je     8100336d <L20>
810032f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810032fa:	74 28                	je     81003324 <L5>
810032fc:	3a 07                	cmp    (%edi),%al
810032fe:	74 6a                	je     8100336a <L15>
81003300:	47                   	inc    %edi
81003301:	49                   	dec    %ecx
81003302:	74 69                	je     8100336d <L20>
81003304:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100330a:	74 18                	je     81003324 <L5>
8100330c:	3a 07                	cmp    (%edi),%al
8100330e:	74 5a                	je     8100336a <L15>
81003310:	47                   	inc    %edi
81003311:	49                   	dec    %ecx
81003312:	74 59                	je     8100336d <L20>
81003314:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100331a:	74 08                	je     81003324 <L5>
8100331c:	3a 07                	cmp    (%edi),%al
8100331e:	74 4a                	je     8100336a <L15>
81003320:	47                   	inc    %edi
81003321:	49                   	dec    %ecx
81003322:	74 49                	je     8100336d <L20>

81003324 <L5>:
81003324:	88 c4                	mov    %al,%ah
81003326:	89 c2                	mov    %eax,%edx
81003328:	c1 e2 10             	shl    $0x10,%edx
8100332b:	09 d0                	or     %edx,%eax
8100332d:	53                   	push   %ebx
8100332e:	66 90                	xchg   %ax,%ax

81003330 <L8>:
81003330:	83 e9 04             	sub    $0x4,%ecx
81003333:	72 1c                	jb     81003351 <L9>
81003335:	8b 17                	mov    (%edi),%edx
81003337:	83 c7 04             	add    $0x4,%edi
8100333a:	31 c2                	xor    %eax,%edx
8100333c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003342:	f7 d2                	not    %edx
81003344:	21 d3                	and    %edx,%ebx
81003346:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100334c:	74 e2                	je     81003330 <L8>
8100334e:	83 ef 04             	sub    $0x4,%edi

81003351 <L9>:
81003351:	5b                   	pop    %ebx
81003352:	31 d2                	xor    %edx,%edx
81003354:	83 c1 04             	add    $0x4,%ecx
81003357:	74 14                	je     8100336d <L20>
81003359:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003360 <L10>:
81003360:	3a 07                	cmp    (%edi),%al
81003362:	74 06                	je     8100336a <L15>
81003364:	47                   	inc    %edi
81003365:	49                   	dec    %ecx
81003366:	75 f8                	jne    81003360 <L10>
81003368:	31 ff                	xor    %edi,%edi

8100336a <L15>:
8100336a:	4a                   	dec    %edx
8100336b:	21 fa                	and    %edi,%edx

8100336d <L20>:
8100336d:	89 d0                	mov    %edx,%eax
8100336f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003372:	5f                   	pop    %edi
81003373:	c9                   	leave  
81003374:	c3                   	ret    

81003375 <memcmp>:
81003375:	55                   	push   %ebp
81003376:	89 e5                	mov    %esp,%ebp
81003378:	83 ec 10             	sub    $0x10,%esp
8100337b:	53                   	push   %ebx
8100337c:	57                   	push   %edi
8100337d:	56                   	push   %esi
8100337e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003381:	8b 75 0c             	mov    0xc(%ebp),%esi
81003384:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003387:	fc                   	cld    
81003388:	31 c0                	xor    %eax,%eax
8100338a:	85 c9                	test   %ecx,%ecx
8100338c:	74 31                	je     810033bf <L4>
8100338e:	89 f8                	mov    %edi,%eax
81003390:	09 f0                	or     %esi,%eax
81003392:	a8 03                	test   $0x3,%al
81003394:	75 1b                	jne    810033b1 <BYTECMP>
81003396:	89 cb                	mov    %ecx,%ebx
81003398:	c1 e9 02             	shr    $0x2,%ecx
8100339b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100339d:	74 0d                	je     810033ac <L5>
8100339f:	83 ee 04             	sub    $0x4,%esi
810033a2:	83 ef 04             	sub    $0x4,%edi
810033a5:	b9 04 00 00 00       	mov    $0x4,%ecx
810033aa:	eb 05                	jmp    810033b1 <BYTECMP>

810033ac <L5>:
810033ac:	83 e3 03             	and    $0x3,%ebx
810033af:	89 d9                	mov    %ebx,%ecx

810033b1 <BYTECMP>:
810033b1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810033b3 <L3>:
810033b3:	31 d2                	xor    %edx,%edx
810033b5:	8a 56 ff             	mov    -0x1(%esi),%dl
810033b8:	31 c0                	xor    %eax,%eax
810033ba:	8a 47 ff             	mov    -0x1(%edi),%al
810033bd:	29 d0                	sub    %edx,%eax

810033bf <L4>:
810033bf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810033c2:	5e                   	pop    %esi
810033c3:	5f                   	pop    %edi
810033c4:	5b                   	pop    %ebx
810033c5:	c9                   	leave  
810033c6:	c3                   	ret    
810033c7:	90                   	nop

810033c8 <memcpy>:
810033c8:	55                   	push   %ebp
810033c9:	89 e5                	mov    %esp,%ebp
810033cb:	56                   	push   %esi
810033cc:	57                   	push   %edi
810033cd:	53                   	push   %ebx
810033ce:	8b 7d 08             	mov    0x8(%ebp),%edi
810033d1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810033d4:	8b 75 0c             	mov    0xc(%ebp),%esi
810033d7:	fc                   	cld    
810033d8:	83 f9 08             	cmp    $0x8,%ecx
810033db:	76 26                	jbe    81003403 <memcpy+0x3b>
810033dd:	89 fa                	mov    %edi,%edx
810033df:	89 cb                	mov    %ecx,%ebx
810033e1:	83 e2 03             	and    $0x3,%edx
810033e4:	74 10                	je     810033f6 <memcpy+0x2e>
810033e6:	b9 04 00 00 00       	mov    $0x4,%ecx
810033eb:	29 d1                	sub    %edx,%ecx
810033ed:	83 e1 03             	and    $0x3,%ecx
810033f0:	29 cb                	sub    %ecx,%ebx
810033f2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810033f4:	89 d9                	mov    %ebx,%ecx
810033f6:	c1 e9 02             	shr    $0x2,%ecx
810033f9:	8d 76 00             	lea    0x0(%esi),%esi
810033fc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810033fe:	89 d9                	mov    %ebx,%ecx
81003400:	83 e1 03             	and    $0x3,%ecx
81003403:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003405:	8b 45 08             	mov    0x8(%ebp),%eax
81003408:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100340b:	5b                   	pop    %ebx
8100340c:	5f                   	pop    %edi
8100340d:	5e                   	pop    %esi
8100340e:	c9                   	leave  
8100340f:	c3                   	ret    

81003410 <memset>:
81003410:	55                   	push   %ebp
81003411:	89 e5                	mov    %esp,%ebp
81003413:	57                   	push   %edi
81003414:	8b 7d 08             	mov    0x8(%ebp),%edi
81003417:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100341b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100341e:	fc                   	cld    
8100341f:	83 f9 10             	cmp    $0x10,%ecx
81003422:	76 69                	jbe    8100348d <memset+0x7d>
81003424:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100342a:	74 4c                	je     81003478 <memset+0x68>
8100342c:	88 07                	mov    %al,(%edi)
8100342e:	47                   	inc    %edi
8100342f:	49                   	dec    %ecx
81003430:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003436:	74 40                	je     81003478 <memset+0x68>
81003438:	88 07                	mov    %al,(%edi)
8100343a:	47                   	inc    %edi
8100343b:	49                   	dec    %ecx
8100343c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003442:	74 34                	je     81003478 <memset+0x68>
81003444:	88 07                	mov    %al,(%edi)
81003446:	47                   	inc    %edi
81003447:	49                   	dec    %ecx
81003448:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100344e:	74 28                	je     81003478 <memset+0x68>
81003450:	88 07                	mov    %al,(%edi)
81003452:	47                   	inc    %edi
81003453:	49                   	dec    %ecx
81003454:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100345a:	74 1c                	je     81003478 <memset+0x68>
8100345c:	88 07                	mov    %al,(%edi)
8100345e:	47                   	inc    %edi
8100345f:	49                   	dec    %ecx
81003460:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003466:	74 10                	je     81003478 <memset+0x68>
81003468:	88 07                	mov    %al,(%edi)
8100346a:	47                   	inc    %edi
8100346b:	49                   	dec    %ecx
8100346c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003472:	74 04                	je     81003478 <memset+0x68>
81003474:	88 07                	mov    %al,(%edi)
81003476:	47                   	inc    %edi
81003477:	49                   	dec    %ecx
81003478:	88 c4                	mov    %al,%ah
8100347a:	89 c2                	mov    %eax,%edx
8100347c:	c1 e2 10             	shl    $0x10,%edx
8100347f:	09 d0                	or     %edx,%eax
81003481:	89 ca                	mov    %ecx,%edx
81003483:	c1 e9 02             	shr    $0x2,%ecx
81003486:	83 e2 03             	and    $0x3,%edx
81003489:	f3 ab                	rep stos %eax,%es:(%edi)
8100348b:	89 d1                	mov    %edx,%ecx
8100348d:	f3 aa                	rep stos %al,%es:(%edi)
8100348f:	8b 45 08             	mov    0x8(%ebp),%eax
81003492:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003495:	5f                   	pop    %edi
81003496:	c9                   	leave  
81003497:	c3                   	ret    

81003498 <__malloc_lock>:
81003498:	55                   	push   %ebp
81003499:	89 e5                	mov    %esp,%ebp
8100349b:	90                   	nop
8100349c:	5d                   	pop    %ebp
8100349d:	c3                   	ret    

8100349e <__malloc_unlock>:
8100349e:	55                   	push   %ebp
8100349f:	89 e5                	mov    %esp,%ebp
810034a1:	90                   	nop
810034a2:	5d                   	pop    %ebp
810034a3:	c3                   	ret    

810034a4 <__sprint_r>:
810034a4:	55                   	push   %ebp
810034a5:	89 e5                	mov    %esp,%ebp
810034a7:	56                   	push   %esi
810034a8:	53                   	push   %ebx
810034a9:	83 ec 10             	sub    $0x10,%esp
810034ac:	8b 5d 10             	mov    0x10(%ebp),%ebx
810034af:	be 00 00 00 00       	mov    $0x0,%esi
810034b4:	8b 43 08             	mov    0x8(%ebx),%eax
810034b7:	85 c0                	test   %eax,%eax
810034b9:	75 11                	jne    810034cc <__sprint_r+0x28>
810034bb:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810034c2:	b8 00 00 00 00       	mov    $0x0,%eax
810034c7:	e9 ad 00 00 00       	jmp    81003579 <__sprint_r+0xd5>
810034cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810034cf:	8b 40 64             	mov    0x64(%eax),%eax
810034d2:	25 00 20 00 00       	and    $0x2000,%eax
810034d7:	85 c0                	test   %eax,%eax
810034d9:	74 7a                	je     81003555 <__sprint_r+0xb1>
810034db:	8b 03                	mov    (%ebx),%eax
810034dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034e0:	eb 6a                	jmp    8100354c <__sprint_r+0xa8>
810034e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034e5:	8b 00                	mov    (%eax),%eax
810034e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810034ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034ed:	8b 40 04             	mov    0x4(%eax),%eax
810034f0:	c1 e8 02             	shr    $0x2,%eax
810034f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810034f6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810034fd:	eb 33                	jmp    81003532 <__sprint_r+0x8e>
810034ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003502:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003509:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100350c:	01 d0                	add    %edx,%eax
8100350e:	8b 00                	mov    (%eax),%eax
81003510:	83 ec 04             	sub    $0x4,%esp
81003513:	ff 75 0c             	push   0xc(%ebp)
81003516:	50                   	push   %eax
81003517:	ff 75 08             	push   0x8(%ebp)
8100351a:	e8 06 1d 00 00       	call   81005225 <_fputwc_r>
8100351f:	83 c4 10             	add    $0x10,%esp
81003522:	83 f8 ff             	cmp    $0xffffffff,%eax
81003525:	75 07                	jne    8100352e <__sprint_r+0x8a>
81003527:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100352c:	eb 3b                	jmp    81003569 <__sprint_r+0xc5>
8100352e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003532:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003535:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003538:	7c c5                	jl     810034ff <__sprint_r+0x5b>
8100353a:	8b 43 08             	mov    0x8(%ebx),%eax
8100353d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003540:	c1 e2 02             	shl    $0x2,%edx
81003543:	29 d0                	sub    %edx,%eax
81003545:	89 43 08             	mov    %eax,0x8(%ebx)
81003548:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100354c:	8b 43 08             	mov    0x8(%ebx),%eax
8100354f:	85 c0                	test   %eax,%eax
81003551:	75 8f                	jne    810034e2 <__sprint_r+0x3e>
81003553:	eb 14                	jmp    81003569 <__sprint_r+0xc5>
81003555:	83 ec 04             	sub    $0x4,%esp
81003558:	53                   	push   %ebx
81003559:	ff 75 0c             	push   0xc(%ebp)
8100355c:	ff 75 08             	push   0x8(%ebp)
8100355f:	e8 60 1d 00 00       	call   810052c4 <__sfvwrite_r>
81003564:	83 c4 10             	add    $0x10,%esp
81003567:	89 c6                	mov    %eax,%esi
81003569:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003570:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003577:	89 f0                	mov    %esi,%eax
81003579:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100357c:	5b                   	pop    %ebx
8100357d:	5e                   	pop    %esi
8100357e:	5d                   	pop    %ebp
8100357f:	c3                   	ret    

81003580 <__sfputc_r>:
81003580:	55                   	push   %ebp
81003581:	89 e5                	mov    %esp,%ebp
81003583:	83 ec 08             	sub    $0x8,%esp
81003586:	8b 45 10             	mov    0x10(%ebp),%eax
81003589:	8b 40 08             	mov    0x8(%eax),%eax
8100358c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100358f:	8b 45 10             	mov    0x10(%ebp),%eax
81003592:	89 50 08             	mov    %edx,0x8(%eax)
81003595:	8b 45 10             	mov    0x10(%ebp),%eax
81003598:	8b 40 08             	mov    0x8(%eax),%eax
8100359b:	85 c0                	test   %eax,%eax
8100359d:	79 17                	jns    810035b6 <__sfputc_r+0x36>
8100359f:	8b 45 10             	mov    0x10(%ebp),%eax
810035a2:	8b 50 08             	mov    0x8(%eax),%edx
810035a5:	8b 45 10             	mov    0x10(%ebp),%eax
810035a8:	8b 40 18             	mov    0x18(%eax),%eax
810035ab:	39 c2                	cmp    %eax,%edx
810035ad:	7c 21                	jl     810035d0 <__sfputc_r+0x50>
810035af:	8b 45 0c             	mov    0xc(%ebp),%eax
810035b2:	3c 0a                	cmp    $0xa,%al
810035b4:	74 1a                	je     810035d0 <__sfputc_r+0x50>
810035b6:	8b 45 10             	mov    0x10(%ebp),%eax
810035b9:	8b 00                	mov    (%eax),%eax
810035bb:	8d 48 01             	lea    0x1(%eax),%ecx
810035be:	8b 55 10             	mov    0x10(%ebp),%edx
810035c1:	89 0a                	mov    %ecx,(%edx)
810035c3:	8b 55 0c             	mov    0xc(%ebp),%edx
810035c6:	88 10                	mov    %dl,(%eax)
810035c8:	0f b6 00             	movzbl (%eax),%eax
810035cb:	0f b6 c0             	movzbl %al,%eax
810035ce:	eb 14                	jmp    810035e4 <__sfputc_r+0x64>
810035d0:	83 ec 04             	sub    $0x4,%esp
810035d3:	ff 75 10             	push   0x10(%ebp)
810035d6:	ff 75 0c             	push   0xc(%ebp)
810035d9:	ff 75 08             	push   0x8(%ebp)
810035dc:	e8 7e 14 00 00       	call   81004a5f <__swbuf_r>
810035e1:	83 c4 10             	add    $0x10,%esp
810035e4:	c9                   	leave  
810035e5:	c3                   	ret    

810035e6 <__sfputs_r>:
810035e6:	55                   	push   %ebp
810035e7:	89 e5                	mov    %esp,%ebp
810035e9:	53                   	push   %ebx
810035ea:	83 ec 14             	sub    $0x14,%esp
810035ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810035f0:	8b 40 64             	mov    0x64(%eax),%eax
810035f3:	25 00 20 00 00       	and    $0x2000,%eax
810035f8:	85 c0                	test   %eax,%eax
810035fa:	74 4c                	je     81003648 <__sfputs_r+0x62>
810035fc:	8b 45 10             	mov    0x10(%ebp),%eax
810035ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003602:	bb 00 00 00 00       	mov    $0x0,%ebx
81003607:	eb 31                	jmp    8100363a <__sfputs_r+0x54>
81003609:	89 d8                	mov    %ebx,%eax
8100360b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003612:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003615:	01 d0                	add    %edx,%eax
81003617:	8b 00                	mov    (%eax),%eax
81003619:	83 ec 04             	sub    $0x4,%esp
8100361c:	ff 75 0c             	push   0xc(%ebp)
8100361f:	50                   	push   %eax
81003620:	ff 75 08             	push   0x8(%ebp)
81003623:	e8 fd 1b 00 00       	call   81005225 <_fputwc_r>
81003628:	83 c4 10             	add    $0x10,%esp
8100362b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100362e:	75 07                	jne    81003637 <__sfputs_r+0x51>
81003630:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003635:	eb 52                	jmp    81003689 <__sfputs_r+0xa3>
81003637:	83 c3 01             	add    $0x1,%ebx
8100363a:	8b 45 14             	mov    0x14(%ebp),%eax
8100363d:	c1 e8 02             	shr    $0x2,%eax
81003640:	89 da                	mov    %ebx,%edx
81003642:	39 d0                	cmp    %edx,%eax
81003644:	77 c3                	ja     81003609 <__sfputs_r+0x23>
81003646:	eb 3c                	jmp    81003684 <__sfputs_r+0x9e>
81003648:	bb 00 00 00 00       	mov    $0x0,%ebx
8100364d:	eb 2e                	jmp    8100367d <__sfputs_r+0x97>
8100364f:	89 da                	mov    %ebx,%edx
81003651:	8b 45 10             	mov    0x10(%ebp),%eax
81003654:	01 d0                	add    %edx,%eax
81003656:	0f b6 00             	movzbl (%eax),%eax
81003659:	0f be c0             	movsbl %al,%eax
8100365c:	83 ec 04             	sub    $0x4,%esp
8100365f:	ff 75 0c             	push   0xc(%ebp)
81003662:	50                   	push   %eax
81003663:	ff 75 08             	push   0x8(%ebp)
81003666:	e8 15 ff ff ff       	call   81003580 <__sfputc_r>
8100366b:	83 c4 10             	add    $0x10,%esp
8100366e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003671:	75 07                	jne    8100367a <__sfputs_r+0x94>
81003673:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003678:	eb 0f                	jmp    81003689 <__sfputs_r+0xa3>
8100367a:	83 c3 01             	add    $0x1,%ebx
8100367d:	89 d8                	mov    %ebx,%eax
8100367f:	39 45 14             	cmp    %eax,0x14(%ebp)
81003682:	77 cb                	ja     8100364f <__sfputs_r+0x69>
81003684:	b8 00 00 00 00       	mov    $0x0,%eax
81003689:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100368c:	c9                   	leave  
8100368d:	c3                   	ret    

8100368e <vfiprintf>:
8100368e:	55                   	push   %ebp
8100368f:	89 e5                	mov    %esp,%ebp
81003691:	83 ec 18             	sub    $0x18,%esp
81003694:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81003699:	ff 75 10             	push   0x10(%ebp)
8100369c:	ff 75 0c             	push   0xc(%ebp)
8100369f:	ff 75 08             	push   0x8(%ebp)
810036a2:	50                   	push   %eax
810036a3:	e8 0b 00 00 00       	call   810036b3 <_vfiprintf_r>
810036a8:	83 c4 10             	add    $0x10,%esp
810036ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036b1:	c9                   	leave  
810036b2:	c3                   	ret    

810036b3 <_vfiprintf_r>:
810036b3:	55                   	push   %ebp
810036b4:	89 e5                	mov    %esp,%ebp
810036b6:	57                   	push   %edi
810036b7:	56                   	push   %esi
810036b8:	53                   	push   %ebx
810036b9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810036bf:	c7 45 e4 e6 35 00 81 	movl   $0x810035e6,-0x1c(%ebp)
810036c6:	8b 45 08             	mov    0x8(%ebp),%eax
810036c9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810036cc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810036d0:	74 18                	je     810036ea <_vfiprintf_r+0x37>
810036d2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036d5:	8b 40 38             	mov    0x38(%eax),%eax
810036d8:	85 c0                	test   %eax,%eax
810036da:	75 0e                	jne    810036ea <_vfiprintf_r+0x37>
810036dc:	83 ec 0c             	sub    $0xc,%esp
810036df:	ff 75 e0             	push   -0x20(%ebp)
810036e2:	e8 c5 da ff ff       	call   810011ac <__sinit>
810036e7:	83 c4 10             	add    $0x10,%esp
810036ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810036ed:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810036f1:	98                   	cwtl   
810036f2:	83 e0 08             	and    $0x8,%eax
810036f5:	85 c0                	test   %eax,%eax
810036f7:	74 0a                	je     81003703 <_vfiprintf_r+0x50>
810036f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810036fc:	8b 40 10             	mov    0x10(%eax),%eax
810036ff:	85 c0                	test   %eax,%eax
81003701:	75 1f                	jne    81003722 <_vfiprintf_r+0x6f>
81003703:	83 ec 08             	sub    $0x8,%esp
81003706:	ff 75 0c             	push   0xc(%ebp)
81003709:	ff 75 08             	push   0x8(%ebp)
8100370c:	e8 c7 14 00 00       	call   81004bd8 <__swsetup_r>
81003711:	83 c4 10             	add    $0x10,%esp
81003714:	85 c0                	test   %eax,%eax
81003716:	74 0a                	je     81003722 <_vfiprintf_r+0x6f>
81003718:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100371d:	e9 df 02 00 00       	jmp    81003a01 <_vfiprintf_r+0x34e>
81003722:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003725:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100372c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003730:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003734:	8b 45 14             	mov    0x14(%ebp),%eax
81003737:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100373d:	89 de                	mov    %ebx,%esi
8100373f:	eb 03                	jmp    81003744 <_vfiprintf_r+0x91>
81003741:	83 c3 01             	add    $0x1,%ebx
81003744:	0f b6 03             	movzbl (%ebx),%eax
81003747:	84 c0                	test   %al,%al
81003749:	74 07                	je     81003752 <_vfiprintf_r+0x9f>
8100374b:	0f b6 03             	movzbl (%ebx),%eax
8100374e:	3c 25                	cmp    $0x25,%al
81003750:	75 ef                	jne    81003741 <_vfiprintf_r+0x8e>
81003752:	89 d8                	mov    %ebx,%eax
81003754:	29 f0                	sub    %esi,%eax
81003756:	85 c0                	test   %eax,%eax
81003758:	74 2b                	je     81003785 <_vfiprintf_r+0xd2>
8100375a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81003760:	50                   	push   %eax
81003761:	56                   	push   %esi
81003762:	ff 75 0c             	push   0xc(%ebp)
81003765:	ff 75 08             	push   0x8(%ebp)
81003768:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100376b:	ff d0                	call   *%eax
8100376d:	83 c4 10             	add    $0x10,%esp
81003770:	83 f8 ff             	cmp    $0xffffffff,%eax
81003773:	0f 84 68 02 00 00    	je     810039e1 <_vfiprintf_r+0x32e>
81003779:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100377c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003782:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003785:	0f b6 03             	movzbl (%ebx),%eax
81003788:	84 c0                	test   %al,%al
8100378a:	0f 84 54 02 00 00    	je     810039e4 <_vfiprintf_r+0x331>
81003790:	83 c3 01             	add    $0x1,%ebx
81003793:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100379a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810037a1:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810037a8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810037af:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810037b3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810037ba:	c7 45 dc f0 6d 00 81 	movl   $0x81006df0,-0x24(%ebp)
810037c1:	eb 1b                	jmp    810037de <_vfiprintf_r+0x12b>
810037c3:	8b 55 80             	mov    -0x80(%ebp),%edx
810037c6:	89 f0                	mov    %esi,%eax
810037c8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810037cb:	be 01 00 00 00       	mov    $0x1,%esi
810037d0:	89 c1                	mov    %eax,%ecx
810037d2:	d3 e6                	shl    %cl,%esi
810037d4:	89 f0                	mov    %esi,%eax
810037d6:	09 d0                	or     %edx,%eax
810037d8:	89 45 80             	mov    %eax,-0x80(%ebp)
810037db:	83 c3 01             	add    $0x1,%ebx
810037de:	0f b6 03             	movzbl (%ebx),%eax
810037e1:	0f be c0             	movsbl %al,%eax
810037e4:	83 ec 04             	sub    $0x4,%esp
810037e7:	6a 05                	push   $0x5
810037e9:	50                   	push   %eax
810037ea:	ff 75 dc             	push   -0x24(%ebp)
810037ed:	e8 ee fa ff ff       	call   810032e0 <memchr>
810037f2:	83 c4 10             	add    $0x10,%esp
810037f5:	89 c6                	mov    %eax,%esi
810037f7:	85 f6                	test   %esi,%esi
810037f9:	75 c8                	jne    810037c3 <_vfiprintf_r+0x110>
810037fb:	8b 45 80             	mov    -0x80(%ebp),%eax
810037fe:	83 e0 10             	and    $0x10,%eax
81003801:	85 c0                	test   %eax,%eax
81003803:	74 04                	je     81003809 <_vfiprintf_r+0x156>
81003805:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003809:	8b 45 80             	mov    -0x80(%ebp),%eax
8100380c:	83 e0 08             	and    $0x8,%eax
8100380f:	85 c0                	test   %eax,%eax
81003811:	74 04                	je     81003817 <_vfiprintf_r+0x164>
81003813:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003817:	0f b6 03             	movzbl (%ebx),%eax
8100381a:	3c 2a                	cmp    $0x2a,%al
8100381c:	75 50                	jne    8100386e <_vfiprintf_r+0x1bb>
8100381e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003824:	8d 50 04             	lea    0x4(%eax),%edx
81003827:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100382d:	8b 00                	mov    (%eax),%eax
8100382f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003832:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003835:	85 c0                	test   %eax,%eax
81003837:	79 11                	jns    8100384a <_vfiprintf_r+0x197>
81003839:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100383c:	f7 d8                	neg    %eax
8100383e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003841:	8b 45 80             	mov    -0x80(%ebp),%eax
81003844:	83 c8 02             	or     $0x2,%eax
81003847:	89 45 80             	mov    %eax,-0x80(%ebp)
8100384a:	83 c3 01             	add    $0x1,%ebx
8100384d:	eb 2d                	jmp    8100387c <_vfiprintf_r+0x1c9>
8100384f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81003852:	89 d0                	mov    %edx,%eax
81003854:	c1 e0 02             	shl    $0x2,%eax
81003857:	01 d0                	add    %edx,%eax
81003859:	01 c0                	add    %eax,%eax
8100385b:	89 c2                	mov    %eax,%edx
8100385d:	0f b6 03             	movzbl (%ebx),%eax
81003860:	0f be c0             	movsbl %al,%eax
81003863:	83 e8 30             	sub    $0x30,%eax
81003866:	01 d0                	add    %edx,%eax
81003868:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100386b:	83 c3 01             	add    $0x1,%ebx
8100386e:	0f b6 03             	movzbl (%ebx),%eax
81003871:	0f be c0             	movsbl %al,%eax
81003874:	83 e8 30             	sub    $0x30,%eax
81003877:	83 f8 09             	cmp    $0x9,%eax
8100387a:	76 d3                	jbe    8100384f <_vfiprintf_r+0x19c>
8100387c:	0f b6 03             	movzbl (%ebx),%eax
8100387f:	3c 2e                	cmp    $0x2e,%al
81003881:	75 67                	jne    810038ea <_vfiprintf_r+0x237>
81003883:	83 c3 01             	add    $0x1,%ebx
81003886:	0f b6 03             	movzbl (%ebx),%eax
81003889:	3c 2a                	cmp    $0x2a,%al
8100388b:	75 27                	jne    810038b4 <_vfiprintf_r+0x201>
8100388d:	83 c3 01             	add    $0x1,%ebx
81003890:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003896:	8d 50 04             	lea    0x4(%eax),%edx
81003899:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100389f:	8b 00                	mov    (%eax),%eax
810038a1:	89 45 84             	mov    %eax,-0x7c(%ebp)
810038a4:	8b 45 84             	mov    -0x7c(%ebp),%eax
810038a7:	85 c0                	test   %eax,%eax
810038a9:	79 3f                	jns    810038ea <_vfiprintf_r+0x237>
810038ab:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810038b2:	eb 36                	jmp    810038ea <_vfiprintf_r+0x237>
810038b4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810038bb:	eb 1f                	jmp    810038dc <_vfiprintf_r+0x229>
810038bd:	8b 55 84             	mov    -0x7c(%ebp),%edx
810038c0:	89 d0                	mov    %edx,%eax
810038c2:	c1 e0 02             	shl    $0x2,%eax
810038c5:	01 d0                	add    %edx,%eax
810038c7:	01 c0                	add    %eax,%eax
810038c9:	89 c2                	mov    %eax,%edx
810038cb:	0f b6 03             	movzbl (%ebx),%eax
810038ce:	0f be c0             	movsbl %al,%eax
810038d1:	83 e8 30             	sub    $0x30,%eax
810038d4:	01 d0                	add    %edx,%eax
810038d6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810038d9:	83 c3 01             	add    $0x1,%ebx
810038dc:	0f b6 03             	movzbl (%ebx),%eax
810038df:	0f be c0             	movsbl %al,%eax
810038e2:	83 e8 30             	sub    $0x30,%eax
810038e5:	83 f8 09             	cmp    $0x9,%eax
810038e8:	76 d3                	jbe    810038bd <_vfiprintf_r+0x20a>
810038ea:	c7 45 dc f6 6d 00 81 	movl   $0x81006df6,-0x24(%ebp)
810038f1:	0f b6 03             	movzbl (%ebx),%eax
810038f4:	0f be c0             	movsbl %al,%eax
810038f7:	83 ec 04             	sub    $0x4,%esp
810038fa:	6a 03                	push   $0x3
810038fc:	50                   	push   %eax
810038fd:	ff 75 dc             	push   -0x24(%ebp)
81003900:	e8 db f9 ff ff       	call   810032e0 <memchr>
81003905:	83 c4 10             	add    $0x10,%esp
81003908:	89 c6                	mov    %eax,%esi
8100390a:	85 f6                	test   %esi,%esi
8100390c:	74 1b                	je     81003929 <_vfiprintf_r+0x276>
8100390e:	8b 55 80             	mov    -0x80(%ebp),%edx
81003911:	89 f0                	mov    %esi,%eax
81003913:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003916:	be 40 00 00 00       	mov    $0x40,%esi
8100391b:	89 c1                	mov    %eax,%ecx
8100391d:	d3 e6                	shl    %cl,%esi
8100391f:	89 f0                	mov    %esi,%eax
81003921:	09 d0                	or     %edx,%eax
81003923:	89 45 80             	mov    %eax,-0x80(%ebp)
81003926:	83 c3 01             	add    $0x1,%ebx
81003929:	89 d8                	mov    %ebx,%eax
8100392b:	8d 58 01             	lea    0x1(%eax),%ebx
8100392e:	0f b6 00             	movzbl (%eax),%eax
81003931:	88 45 98             	mov    %al,-0x68(%ebp)
81003934:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003938:	0f be c0             	movsbl %al,%eax
8100393b:	83 ec 04             	sub    $0x4,%esp
8100393e:	6a 06                	push   $0x6
81003940:	50                   	push   %eax
81003941:	68 fa 6d 00 81       	push   $0x81006dfa
81003946:	e8 95 f9 ff ff       	call   810032e0 <memchr>
8100394b:	83 c4 10             	add    $0x10,%esp
8100394e:	89 c6                	mov    %eax,%esi
81003950:	85 f6                	test   %esi,%esi
81003952:	74 5a                	je     810039ae <_vfiprintf_r+0x2fb>
81003954:	b8 00 00 00 00       	mov    $0x0,%eax
81003959:	85 c0                	test   %eax,%eax
8100395b:	75 2e                	jne    8100398b <_vfiprintf_r+0x2d8>
8100395d:	8b 45 80             	mov    -0x80(%ebp),%eax
81003960:	25 00 01 00 00       	and    $0x100,%eax
81003965:	85 c0                	test   %eax,%eax
81003967:	74 11                	je     8100397a <_vfiprintf_r+0x2c7>
81003969:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100396f:	83 c0 0c             	add    $0xc,%eax
81003972:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003978:	eb 55                	jmp    810039cf <_vfiprintf_r+0x31c>
8100397a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003980:	83 c0 08             	add    $0x8,%eax
81003983:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003989:	eb 44                	jmp    810039cf <_vfiprintf_r+0x31c>
8100398b:	83 ec 0c             	sub    $0xc,%esp
8100398e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003994:	50                   	push   %eax
81003995:	ff 75 e4             	push   -0x1c(%ebp)
81003998:	ff 75 0c             	push   0xc(%ebp)
8100399b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100399e:	50                   	push   %eax
8100399f:	ff 75 08             	push   0x8(%ebp)
810039a2:	e8 59 c6 ff 7e       	call   0 <do_help-0x81000000>
810039a7:	83 c4 20             	add    $0x20,%esp
810039aa:	89 c7                	mov    %eax,%edi
810039ac:	eb 21                	jmp    810039cf <_vfiprintf_r+0x31c>
810039ae:	83 ec 0c             	sub    $0xc,%esp
810039b1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810039b7:	50                   	push   %eax
810039b8:	ff 75 e4             	push   -0x1c(%ebp)
810039bb:	ff 75 0c             	push   0xc(%ebp)
810039be:	8d 45 80             	lea    -0x80(%ebp),%eax
810039c1:	50                   	push   %eax
810039c2:	ff 75 08             	push   0x8(%ebp)
810039c5:	e8 da 01 00 00       	call   81003ba4 <_printf_i>
810039ca:	83 c4 20             	add    $0x20,%esp
810039cd:	89 c7                	mov    %eax,%edi
810039cf:	83 ff ff             	cmp    $0xffffffff,%edi
810039d2:	74 13                	je     810039e7 <_vfiprintf_r+0x334>
810039d4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810039d7:	01 f8                	add    %edi,%eax
810039d9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810039dc:	e9 5c fd ff ff       	jmp    8100373d <_vfiprintf_r+0x8a>
810039e1:	90                   	nop
810039e2:	eb 04                	jmp    810039e8 <_vfiprintf_r+0x335>
810039e4:	90                   	nop
810039e5:	eb 01                	jmp    810039e8 <_vfiprintf_r+0x335>
810039e7:	90                   	nop
810039e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810039eb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039ef:	98                   	cwtl   
810039f0:	83 e0 40             	and    $0x40,%eax
810039f3:	85 c0                	test   %eax,%eax
810039f5:	75 05                	jne    810039fc <_vfiprintf_r+0x349>
810039f7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810039fa:	eb 05                	jmp    81003a01 <_vfiprintf_r+0x34e>
810039fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003a01:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003a04:	5b                   	pop    %ebx
81003a05:	5e                   	pop    %esi
81003a06:	5f                   	pop    %edi
81003a07:	5d                   	pop    %ebp
81003a08:	c3                   	ret    

81003a09 <_printf_common>:
81003a09:	55                   	push   %ebp
81003a0a:	89 e5                	mov    %esp,%ebp
81003a0c:	83 ec 18             	sub    $0x18,%esp
81003a0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a12:	8b 50 10             	mov    0x10(%eax),%edx
81003a15:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a18:	8b 40 08             	mov    0x8(%eax),%eax
81003a1b:	39 c2                	cmp    %eax,%edx
81003a1d:	0f 4c d0             	cmovl  %eax,%edx
81003a20:	8b 45 10             	mov    0x10(%ebp),%eax
81003a23:	89 10                	mov    %edx,(%eax)
81003a25:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a28:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003a2c:	84 c0                	test   %al,%al
81003a2e:	74 0d                	je     81003a3d <_printf_common+0x34>
81003a30:	8b 45 10             	mov    0x10(%ebp),%eax
81003a33:	8b 00                	mov    (%eax),%eax
81003a35:	8d 50 01             	lea    0x1(%eax),%edx
81003a38:	8b 45 10             	mov    0x10(%ebp),%eax
81003a3b:	89 10                	mov    %edx,(%eax)
81003a3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a40:	8b 00                	mov    (%eax),%eax
81003a42:	83 e0 20             	and    $0x20,%eax
81003a45:	85 c0                	test   %eax,%eax
81003a47:	74 0d                	je     81003a56 <_printf_common+0x4d>
81003a49:	8b 45 10             	mov    0x10(%ebp),%eax
81003a4c:	8b 00                	mov    (%eax),%eax
81003a4e:	8d 50 02             	lea    0x2(%eax),%edx
81003a51:	8b 45 10             	mov    0x10(%ebp),%eax
81003a54:	89 10                	mov    %edx,(%eax)
81003a56:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a59:	8b 00                	mov    (%eax),%eax
81003a5b:	83 e0 06             	and    $0x6,%eax
81003a5e:	85 c0                	test   %eax,%eax
81003a60:	75 41                	jne    81003aa3 <_printf_common+0x9a>
81003a62:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a69:	eb 24                	jmp    81003a8f <_printf_common+0x86>
81003a6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a6e:	83 c0 19             	add    $0x19,%eax
81003a71:	6a 01                	push   $0x1
81003a73:	50                   	push   %eax
81003a74:	ff 75 14             	push   0x14(%ebp)
81003a77:	ff 75 08             	push   0x8(%ebp)
81003a7a:	8b 45 18             	mov    0x18(%ebp),%eax
81003a7d:	ff d0                	call   *%eax
81003a7f:	83 c4 10             	add    $0x10,%esp
81003a82:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a85:	0f 84 0b 01 00 00    	je     81003b96 <_printf_common+0x18d>
81003a8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003a8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a92:	8b 50 0c             	mov    0xc(%eax),%edx
81003a95:	8b 45 10             	mov    0x10(%ebp),%eax
81003a98:	8b 08                	mov    (%eax),%ecx
81003a9a:	89 d0                	mov    %edx,%eax
81003a9c:	29 c8                	sub    %ecx,%eax
81003a9e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003aa1:	7c c8                	jl     81003a6b <_printf_common+0x62>
81003aa3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003aaa:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aad:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003ab1:	84 c0                	test   %al,%al
81003ab3:	74 04                	je     81003ab9 <_printf_common+0xb0>
81003ab5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003ab9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003abc:	8b 00                	mov    (%eax),%eax
81003abe:	83 e0 20             	and    $0x20,%eax
81003ac1:	85 c0                	test   %eax,%eax
81003ac3:	74 28                	je     81003aed <_printf_common+0xe4>
81003ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ac8:	8d 50 01             	lea    0x1(%eax),%edx
81003acb:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003ace:	8b 55 0c             	mov    0xc(%ebp),%edx
81003ad1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003ad6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad9:	8d 50 01             	lea    0x1(%eax),%edx
81003adc:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003adf:	8b 55 0c             	mov    0xc(%ebp),%edx
81003ae2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003ae6:	8b 55 0c             	mov    0xc(%ebp),%edx
81003ae9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81003aed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003af0:	8b 55 0c             	mov    0xc(%ebp),%edx
81003af3:	83 c2 43             	add    $0x43,%edx
81003af6:	50                   	push   %eax
81003af7:	52                   	push   %edx
81003af8:	ff 75 14             	push   0x14(%ebp)
81003afb:	ff 75 08             	push   0x8(%ebp)
81003afe:	8b 45 18             	mov    0x18(%ebp),%eax
81003b01:	ff d0                	call   *%eax
81003b03:	83 c4 10             	add    $0x10,%esp
81003b06:	83 f8 ff             	cmp    $0xffffffff,%eax
81003b09:	0f 84 8a 00 00 00    	je     81003b99 <_printf_common+0x190>
81003b0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b12:	8b 50 0c             	mov    0xc(%eax),%edx
81003b15:	8b 45 10             	mov    0x10(%ebp),%eax
81003b18:	8b 08                	mov    (%eax),%ecx
81003b1a:	89 d0                	mov    %edx,%eax
81003b1c:	29 c8                	sub    %ecx,%eax
81003b1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b24:	8b 00                	mov    (%eax),%eax
81003b26:	83 e0 06             	and    $0x6,%eax
81003b29:	83 f8 04             	cmp    $0x4,%eax
81003b2c:	75 06                	jne    81003b34 <_printf_common+0x12b>
81003b2e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b32:	79 07                	jns    81003b3b <_printf_common+0x132>
81003b34:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003b3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b3e:	8b 50 08             	mov    0x8(%eax),%edx
81003b41:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b44:	8b 40 10             	mov    0x10(%eax),%eax
81003b47:	39 c2                	cmp    %eax,%edx
81003b49:	7e 13                	jle    81003b5e <_printf_common+0x155>
81003b4b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b4e:	8b 50 08             	mov    0x8(%eax),%edx
81003b51:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b54:	8b 48 10             	mov    0x10(%eax),%ecx
81003b57:	89 d0                	mov    %edx,%eax
81003b59:	29 c8                	sub    %ecx,%eax
81003b5b:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b5e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003b65:	eb 20                	jmp    81003b87 <_printf_common+0x17e>
81003b67:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b6a:	83 c0 1a             	add    $0x1a,%eax
81003b6d:	6a 01                	push   $0x1
81003b6f:	50                   	push   %eax
81003b70:	ff 75 14             	push   0x14(%ebp)
81003b73:	ff 75 08             	push   0x8(%ebp)
81003b76:	8b 45 18             	mov    0x18(%ebp),%eax
81003b79:	ff d0                	call   *%eax
81003b7b:	83 c4 10             	add    $0x10,%esp
81003b7e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003b81:	74 19                	je     81003b9c <_printf_common+0x193>
81003b83:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003b87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b8a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81003b8d:	7c d8                	jl     81003b67 <_printf_common+0x15e>
81003b8f:	b8 00 00 00 00       	mov    $0x0,%eax
81003b94:	eb 0c                	jmp    81003ba2 <_printf_common+0x199>
81003b96:	90                   	nop
81003b97:	eb 04                	jmp    81003b9d <_printf_common+0x194>
81003b99:	90                   	nop
81003b9a:	eb 01                	jmp    81003b9d <_printf_common+0x194>
81003b9c:	90                   	nop
81003b9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003ba2:	c9                   	leave  
81003ba3:	c3                   	ret    

81003ba4 <_printf_i>:
81003ba4:	55                   	push   %ebp
81003ba5:	89 e5                	mov    %esp,%ebp
81003ba7:	53                   	push   %ebx
81003ba8:	83 ec 24             	sub    $0x24,%esp
81003bab:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bae:	83 c0 1b             	add    $0x1b,%eax
81003bb1:	83 c0 28             	add    $0x28,%eax
81003bb4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bb7:	c7 45 e8 04 6e 00 81 	movl   $0x81006e04,-0x18(%ebp)
81003bbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bc1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003bc5:	0f be c0             	movsbl %al,%eax
81003bc8:	85 c0                	test   %eax,%eax
81003bca:	0f 84 00 03 00 00    	je     81003ed0 <_printf_i+0x32c>
81003bd0:	85 c0                	test   %eax,%eax
81003bd2:	0f 88 52 03 00 00    	js     81003f2a <_printf_i+0x386>
81003bd8:	83 f8 78             	cmp    $0x78,%eax
81003bdb:	0f 8f 49 03 00 00    	jg     81003f2a <_printf_i+0x386>
81003be1:	83 f8 58             	cmp    $0x58,%eax
81003be4:	0f 8c 40 03 00 00    	jl     81003f2a <_printf_i+0x386>
81003bea:	83 e8 58             	sub    $0x58,%eax
81003bed:	83 f8 20             	cmp    $0x20,%eax
81003bf0:	0f 87 34 03 00 00    	ja     81003f2a <_printf_i+0x386>
81003bf6:	8b 04 85 28 6e 00 81 	mov    -0x7eff91d8(,%eax,4),%eax
81003bfd:	ff e0                	jmp    *%eax
81003bff:	8b 45 18             	mov    0x18(%ebp),%eax
81003c02:	8b 00                	mov    (%eax),%eax
81003c04:	8d 48 04             	lea    0x4(%eax),%ecx
81003c07:	8b 55 18             	mov    0x18(%ebp),%edx
81003c0a:	89 0a                	mov    %ecx,(%edx)
81003c0c:	8b 00                	mov    (%eax),%eax
81003c0e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c12:	89 c2                	mov    %eax,%edx
81003c14:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c17:	88 10                	mov    %dl,(%eax)
81003c19:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c1c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003c23:	e9 1c 03 00 00       	jmp    81003f44 <_printf_i+0x3a0>
81003c28:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c2b:	8b 00                	mov    (%eax),%eax
81003c2d:	25 80 00 00 00       	and    $0x80,%eax
81003c32:	85 c0                	test   %eax,%eax
81003c34:	74 11                	je     81003c47 <_printf_i+0xa3>
81003c36:	8b 45 18             	mov    0x18(%ebp),%eax
81003c39:	8b 00                	mov    (%eax),%eax
81003c3b:	8d 48 04             	lea    0x4(%eax),%ecx
81003c3e:	8b 55 18             	mov    0x18(%ebp),%edx
81003c41:	89 0a                	mov    %ecx,(%edx)
81003c43:	8b 00                	mov    (%eax),%eax
81003c45:	eb 2d                	jmp    81003c74 <_printf_i+0xd0>
81003c47:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c4a:	8b 00                	mov    (%eax),%eax
81003c4c:	83 e0 40             	and    $0x40,%eax
81003c4f:	85 c0                	test   %eax,%eax
81003c51:	74 12                	je     81003c65 <_printf_i+0xc1>
81003c53:	8b 45 18             	mov    0x18(%ebp),%eax
81003c56:	8b 00                	mov    (%eax),%eax
81003c58:	8d 48 04             	lea    0x4(%eax),%ecx
81003c5b:	8b 55 18             	mov    0x18(%ebp),%edx
81003c5e:	89 0a                	mov    %ecx,(%edx)
81003c60:	8b 00                	mov    (%eax),%eax
81003c62:	98                   	cwtl   
81003c63:	eb 0f                	jmp    81003c74 <_printf_i+0xd0>
81003c65:	8b 45 18             	mov    0x18(%ebp),%eax
81003c68:	8b 00                	mov    (%eax),%eax
81003c6a:	8d 48 04             	lea    0x4(%eax),%ecx
81003c6d:	8b 55 18             	mov    0x18(%ebp),%edx
81003c70:	89 0a                	mov    %ecx,(%edx)
81003c72:	8b 00                	mov    (%eax),%eax
81003c74:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c7a:	85 c0                	test   %eax,%eax
81003c7c:	79 0a                	jns    81003c88 <_printf_i+0xe4>
81003c7e:	f7 5d f4             	negl   -0xc(%ebp)
81003c81:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c84:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003c88:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003c8f:	e9 28 01 00 00       	jmp    81003dbc <_printf_i+0x218>
81003c94:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c97:	8b 00                	mov    (%eax),%eax
81003c99:	25 80 00 00 00       	and    $0x80,%eax
81003c9e:	85 c0                	test   %eax,%eax
81003ca0:	74 11                	je     81003cb3 <_printf_i+0x10f>
81003ca2:	8b 45 18             	mov    0x18(%ebp),%eax
81003ca5:	8b 00                	mov    (%eax),%eax
81003ca7:	8d 48 04             	lea    0x4(%eax),%ecx
81003caa:	8b 55 18             	mov    0x18(%ebp),%edx
81003cad:	89 0a                	mov    %ecx,(%edx)
81003caf:	8b 00                	mov    (%eax),%eax
81003cb1:	eb 2f                	jmp    81003ce2 <_printf_i+0x13e>
81003cb3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb6:	8b 00                	mov    (%eax),%eax
81003cb8:	83 e0 40             	and    $0x40,%eax
81003cbb:	85 c0                	test   %eax,%eax
81003cbd:	74 14                	je     81003cd3 <_printf_i+0x12f>
81003cbf:	8b 45 18             	mov    0x18(%ebp),%eax
81003cc2:	8b 00                	mov    (%eax),%eax
81003cc4:	8d 48 04             	lea    0x4(%eax),%ecx
81003cc7:	8b 55 18             	mov    0x18(%ebp),%edx
81003cca:	89 0a                	mov    %ecx,(%edx)
81003ccc:	8b 00                	mov    (%eax),%eax
81003cce:	0f b7 c0             	movzwl %ax,%eax
81003cd1:	eb 0f                	jmp    81003ce2 <_printf_i+0x13e>
81003cd3:	8b 45 18             	mov    0x18(%ebp),%eax
81003cd6:	8b 00                	mov    (%eax),%eax
81003cd8:	8d 48 04             	lea    0x4(%eax),%ecx
81003cdb:	8b 55 18             	mov    0x18(%ebp),%edx
81003cde:	89 0a                	mov    %ecx,(%edx)
81003ce0:	8b 00                	mov    (%eax),%eax
81003ce2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ce5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ce8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003cec:	3c 6f                	cmp    $0x6f,%al
81003cee:	75 07                	jne    81003cf7 <_printf_i+0x153>
81003cf0:	b8 08 00 00 00       	mov    $0x8,%eax
81003cf5:	eb 05                	jmp    81003cfc <_printf_i+0x158>
81003cf7:	b8 0a 00 00 00       	mov    $0xa,%eax
81003cfc:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003cff:	e9 b1 00 00 00       	jmp    81003db5 <_printf_i+0x211>
81003d04:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d07:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003d0b:	eb 1d                	jmp    81003d2a <_printf_i+0x186>
81003d0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d10:	8b 00                	mov    (%eax),%eax
81003d12:	83 c8 20             	or     $0x20,%eax
81003d15:	89 c2                	mov    %eax,%edx
81003d17:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d1a:	89 10                	mov    %edx,(%eax)
81003d1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d1f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003d23:	c7 45 e8 15 6e 00 81 	movl   $0x81006e15,-0x18(%ebp)
81003d2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d2d:	8b 00                	mov    (%eax),%eax
81003d2f:	25 80 00 00 00       	and    $0x80,%eax
81003d34:	85 c0                	test   %eax,%eax
81003d36:	74 11                	je     81003d49 <_printf_i+0x1a5>
81003d38:	8b 45 18             	mov    0x18(%ebp),%eax
81003d3b:	8b 00                	mov    (%eax),%eax
81003d3d:	8d 48 04             	lea    0x4(%eax),%ecx
81003d40:	8b 55 18             	mov    0x18(%ebp),%edx
81003d43:	89 0a                	mov    %ecx,(%edx)
81003d45:	8b 00                	mov    (%eax),%eax
81003d47:	eb 2f                	jmp    81003d78 <_printf_i+0x1d4>
81003d49:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d4c:	8b 00                	mov    (%eax),%eax
81003d4e:	83 e0 40             	and    $0x40,%eax
81003d51:	85 c0                	test   %eax,%eax
81003d53:	74 14                	je     81003d69 <_printf_i+0x1c5>
81003d55:	8b 45 18             	mov    0x18(%ebp),%eax
81003d58:	8b 00                	mov    (%eax),%eax
81003d5a:	8d 48 04             	lea    0x4(%eax),%ecx
81003d5d:	8b 55 18             	mov    0x18(%ebp),%edx
81003d60:	89 0a                	mov    %ecx,(%edx)
81003d62:	8b 00                	mov    (%eax),%eax
81003d64:	0f b7 c0             	movzwl %ax,%eax
81003d67:	eb 0f                	jmp    81003d78 <_printf_i+0x1d4>
81003d69:	8b 45 18             	mov    0x18(%ebp),%eax
81003d6c:	8b 00                	mov    (%eax),%eax
81003d6e:	8d 48 04             	lea    0x4(%eax),%ecx
81003d71:	8b 55 18             	mov    0x18(%ebp),%edx
81003d74:	89 0a                	mov    %ecx,(%edx)
81003d76:	8b 00                	mov    (%eax),%eax
81003d78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d7b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003d82:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d85:	8b 00                	mov    (%eax),%eax
81003d87:	83 e0 01             	and    $0x1,%eax
81003d8a:	85 c0                	test   %eax,%eax
81003d8c:	74 0f                	je     81003d9d <_printf_i+0x1f9>
81003d8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d91:	8b 00                	mov    (%eax),%eax
81003d93:	83 c8 20             	or     $0x20,%eax
81003d96:	89 c2                	mov    %eax,%edx
81003d98:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d9b:	89 10                	mov    %edx,(%eax)
81003d9d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003da1:	75 11                	jne    81003db4 <_printf_i+0x210>
81003da3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003da6:	8b 00                	mov    (%eax),%eax
81003da8:	83 e0 df             	and    $0xffffffdf,%eax
81003dab:	89 c2                	mov    %eax,%edx
81003dad:	8b 45 0c             	mov    0xc(%ebp),%eax
81003db0:	89 10                	mov    %edx,(%eax)
81003db2:	eb 01                	jmp    81003db5 <_printf_i+0x211>
81003db4:	90                   	nop
81003db5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003db8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003dbc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dbf:	8b 50 04             	mov    0x4(%eax),%edx
81003dc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc5:	89 50 08             	mov    %edx,0x8(%eax)
81003dc8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dcb:	8b 40 08             	mov    0x8(%eax),%eax
81003dce:	85 c0                	test   %eax,%eax
81003dd0:	78 0f                	js     81003de1 <_printf_i+0x23d>
81003dd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dd5:	8b 00                	mov    (%eax),%eax
81003dd7:	83 e0 fb             	and    $0xfffffffb,%eax
81003dda:	89 c2                	mov    %eax,%edx
81003ddc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ddf:	89 10                	mov    %edx,(%eax)
81003de1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003de5:	75 0a                	jne    81003df1 <_printf_i+0x24d>
81003de7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dea:	8b 40 04             	mov    0x4(%eax),%eax
81003ded:	85 c0                	test   %eax,%eax
81003def:	74 34                	je     81003e25 <_printf_i+0x281>
81003df1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003df4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df7:	ba 00 00 00 00       	mov    $0x0,%edx
81003dfc:	f7 f1                	div    %ecx
81003dfe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e01:	01 d0                	add    %edx,%eax
81003e03:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003e07:	0f b6 10             	movzbl (%eax),%edx
81003e0a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e0d:	88 10                	mov    %dl,(%eax)
81003e0f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003e12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e15:	ba 00 00 00 00       	mov    $0x0,%edx
81003e1a:	f7 f3                	div    %ebx
81003e1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003e23:	75 cc                	jne    81003df1 <_printf_i+0x24d>
81003e25:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003e29:	75 26                	jne    81003e51 <_printf_i+0x2ad>
81003e2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e2e:	8b 00                	mov    (%eax),%eax
81003e30:	83 e0 01             	and    $0x1,%eax
81003e33:	85 c0                	test   %eax,%eax
81003e35:	74 1a                	je     81003e51 <_printf_i+0x2ad>
81003e37:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e3a:	8b 50 04             	mov    0x4(%eax),%edx
81003e3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e40:	8b 40 10             	mov    0x10(%eax),%eax
81003e43:	39 c2                	cmp    %eax,%edx
81003e45:	7f 0a                	jg     81003e51 <_printf_i+0x2ad>
81003e47:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003e4b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e4e:	c6 00 30             	movb   $0x30,(%eax)
81003e51:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e54:	83 c0 1b             	add    $0x1b,%eax
81003e57:	83 c0 28             	add    $0x28,%eax
81003e5a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e5d:	89 c2                	mov    %eax,%edx
81003e5f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e62:	89 50 10             	mov    %edx,0x10(%eax)
81003e65:	e9 e2 00 00 00       	jmp    81003f4c <_printf_i+0x3a8>
81003e6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e6d:	8b 00                	mov    (%eax),%eax
81003e6f:	25 80 00 00 00       	and    $0x80,%eax
81003e74:	85 c0                	test   %eax,%eax
81003e76:	74 19                	je     81003e91 <_printf_i+0x2ed>
81003e78:	8b 45 18             	mov    0x18(%ebp),%eax
81003e7b:	8b 00                	mov    (%eax),%eax
81003e7d:	8d 48 04             	lea    0x4(%eax),%ecx
81003e80:	8b 55 18             	mov    0x18(%ebp),%edx
81003e83:	89 0a                	mov    %ecx,(%edx)
81003e85:	8b 00                	mov    (%eax),%eax
81003e87:	8b 55 0c             	mov    0xc(%ebp),%edx
81003e8a:	8b 52 14             	mov    0x14(%edx),%edx
81003e8d:	89 10                	mov    %edx,(%eax)
81003e8f:	eb 3f                	jmp    81003ed0 <_printf_i+0x32c>
81003e91:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e94:	8b 00                	mov    (%eax),%eax
81003e96:	83 e0 40             	and    $0x40,%eax
81003e99:	85 c0                	test   %eax,%eax
81003e9b:	74 1c                	je     81003eb9 <_printf_i+0x315>
81003e9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ea0:	8b 58 14             	mov    0x14(%eax),%ebx
81003ea3:	8b 45 18             	mov    0x18(%ebp),%eax
81003ea6:	8b 00                	mov    (%eax),%eax
81003ea8:	8d 48 04             	lea    0x4(%eax),%ecx
81003eab:	8b 55 18             	mov    0x18(%ebp),%edx
81003eae:	89 0a                	mov    %ecx,(%edx)
81003eb0:	8b 00                	mov    (%eax),%eax
81003eb2:	89 da                	mov    %ebx,%edx
81003eb4:	66 89 10             	mov    %dx,(%eax)
81003eb7:	eb 17                	jmp    81003ed0 <_printf_i+0x32c>
81003eb9:	8b 45 18             	mov    0x18(%ebp),%eax
81003ebc:	8b 00                	mov    (%eax),%eax
81003ebe:	8d 48 04             	lea    0x4(%eax),%ecx
81003ec1:	8b 55 18             	mov    0x18(%ebp),%edx
81003ec4:	89 0a                	mov    %ecx,(%edx)
81003ec6:	8b 00                	mov    (%eax),%eax
81003ec8:	8b 55 0c             	mov    0xc(%ebp),%edx
81003ecb:	8b 52 14             	mov    0x14(%edx),%edx
81003ece:	89 10                	mov    %edx,(%eax)
81003ed0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ed3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003eda:	eb 70                	jmp    81003f4c <_printf_i+0x3a8>
81003edc:	8b 45 18             	mov    0x18(%ebp),%eax
81003edf:	8b 00                	mov    (%eax),%eax
81003ee1:	8d 48 04             	lea    0x4(%eax),%ecx
81003ee4:	8b 55 18             	mov    0x18(%ebp),%edx
81003ee7:	89 0a                	mov    %ecx,(%edx)
81003ee9:	8b 00                	mov    (%eax),%eax
81003eeb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003eee:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ef1:	8b 40 04             	mov    0x4(%eax),%eax
81003ef4:	83 ec 04             	sub    $0x4,%esp
81003ef7:	50                   	push   %eax
81003ef8:	6a 00                	push   $0x0
81003efa:	ff 75 ec             	push   -0x14(%ebp)
81003efd:	e8 de f3 ff ff       	call   810032e0 <memchr>
81003f02:	83 c4 10             	add    $0x10,%esp
81003f05:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f08:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003f0c:	74 0e                	je     81003f1c <_printf_i+0x378>
81003f0e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f11:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f14:	89 c2                	mov    %eax,%edx
81003f16:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f19:	89 50 04             	mov    %edx,0x4(%eax)
81003f1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f1f:	8b 50 04             	mov    0x4(%eax),%edx
81003f22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f25:	89 50 10             	mov    %edx,0x10(%eax)
81003f28:	eb 1a                	jmp    81003f44 <_printf_i+0x3a0>
81003f2a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003f2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f31:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003f35:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003f38:	88 10                	mov    %dl,(%eax)
81003f3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f3d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003f44:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f47:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003f4b:	90                   	nop
81003f4c:	83 ec 0c             	sub    $0xc,%esp
81003f4f:	ff 75 14             	push   0x14(%ebp)
81003f52:	ff 75 10             	push   0x10(%ebp)
81003f55:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003f58:	50                   	push   %eax
81003f59:	ff 75 0c             	push   0xc(%ebp)
81003f5c:	ff 75 08             	push   0x8(%ebp)
81003f5f:	e8 a5 fa ff ff       	call   81003a09 <_printf_common>
81003f64:	83 c4 20             	add    $0x20,%esp
81003f67:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f6a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003f6e:	74 72                	je     81003fe2 <_printf_i+0x43e>
81003f70:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f73:	8b 40 10             	mov    0x10(%eax),%eax
81003f76:	50                   	push   %eax
81003f77:	ff 75 ec             	push   -0x14(%ebp)
81003f7a:	ff 75 10             	push   0x10(%ebp)
81003f7d:	ff 75 08             	push   0x8(%ebp)
81003f80:	8b 45 14             	mov    0x14(%ebp),%eax
81003f83:	ff d0                	call   *%eax
81003f85:	83 c4 10             	add    $0x10,%esp
81003f88:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f8b:	74 58                	je     81003fe5 <_printf_i+0x441>
81003f8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f90:	8b 00                	mov    (%eax),%eax
81003f92:	83 e0 02             	and    $0x2,%eax
81003f95:	85 c0                	test   %eax,%eax
81003f97:	74 39                	je     81003fd2 <_printf_i+0x42e>
81003f99:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003fa0:	eb 20                	jmp    81003fc2 <_printf_i+0x41e>
81003fa2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fa5:	83 c0 19             	add    $0x19,%eax
81003fa8:	6a 01                	push   $0x1
81003faa:	50                   	push   %eax
81003fab:	ff 75 10             	push   0x10(%ebp)
81003fae:	ff 75 08             	push   0x8(%ebp)
81003fb1:	8b 45 14             	mov    0x14(%ebp),%eax
81003fb4:	ff d0                	call   *%eax
81003fb6:	83 c4 10             	add    $0x10,%esp
81003fb9:	83 f8 ff             	cmp    $0xffffffff,%eax
81003fbc:	74 2a                	je     81003fe8 <_printf_i+0x444>
81003fbe:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003fc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fc5:	8b 40 0c             	mov    0xc(%eax),%eax
81003fc8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003fcb:	29 d0                	sub    %edx,%eax
81003fcd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003fd0:	7c d0                	jl     81003fa2 <_printf_i+0x3fe>
81003fd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fd5:	8b 50 0c             	mov    0xc(%eax),%edx
81003fd8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fdb:	39 c2                	cmp    %eax,%edx
81003fdd:	0f 4d c2             	cmovge %edx,%eax
81003fe0:	eb 0c                	jmp    81003fee <_printf_i+0x44a>
81003fe2:	90                   	nop
81003fe3:	eb 04                	jmp    81003fe9 <_printf_i+0x445>
81003fe5:	90                   	nop
81003fe6:	eb 01                	jmp    81003fe9 <_printf_i+0x445>
81003fe8:	90                   	nop
81003fe9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003fee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003ff1:	c9                   	leave  
81003ff2:	c3                   	ret    

81003ff3 <_iprintf_r>:
81003ff3:	55                   	push   %ebp
81003ff4:	89 e5                	mov    %esp,%ebp
81003ff6:	83 ec 18             	sub    $0x18,%esp
81003ff9:	8d 45 10             	lea    0x10(%ebp),%eax
81003ffc:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003fff:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004002:	8b 45 08             	mov    0x8(%ebp),%eax
81004005:	8b 40 08             	mov    0x8(%eax),%eax
81004008:	52                   	push   %edx
81004009:	ff 75 0c             	push   0xc(%ebp)
8100400c:	50                   	push   %eax
8100400d:	ff 75 08             	push   0x8(%ebp)
81004010:	e8 9e f6 ff ff       	call   810036b3 <_vfiprintf_r>
81004015:	83 c4 10             	add    $0x10,%esp
81004018:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100401b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100401e:	c9                   	leave  
8100401f:	c3                   	ret    

81004020 <iprintf>:
81004020:	55                   	push   %ebp
81004021:	89 e5                	mov    %esp,%ebp
81004023:	83 ec 18             	sub    $0x18,%esp
81004026:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100402b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100402e:	8d 45 0c             	lea    0xc(%ebp),%eax
81004031:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004034:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004037:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100403a:	8b 40 08             	mov    0x8(%eax),%eax
8100403d:	52                   	push   %edx
8100403e:	ff 75 08             	push   0x8(%ebp)
81004041:	50                   	push   %eax
81004042:	ff 75 f4             	push   -0xc(%ebp)
81004045:	e8 69 f6 ff ff       	call   810036b3 <_vfiprintf_r>
8100404a:	83 c4 10             	add    $0x10,%esp
8100404d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004050:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004053:	c9                   	leave  
81004054:	c3                   	ret    

81004055 <_puts_r>:
81004055:	55                   	push   %ebp
81004056:	89 e5                	mov    %esp,%ebp
81004058:	83 ec 38             	sub    $0x38,%esp
8100405b:	83 ec 0c             	sub    $0xc,%esp
8100405e:	ff 75 0c             	push   0xc(%ebp)
81004061:	e8 1a 06 00 00       	call   81004680 <strlen>
81004066:	83 c4 10             	add    $0x10,%esp
81004069:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100406c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100406f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004072:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004075:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004078:	c7 45 d4 ac 6e 00 81 	movl   $0x81006eac,-0x2c(%ebp)
8100407f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004086:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004089:	83 c0 01             	add    $0x1,%eax
8100408c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100408f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004092:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004095:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100409c:	8b 45 08             	mov    0x8(%ebp),%eax
8100409f:	8b 40 08             	mov    0x8(%eax),%eax
810040a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810040a5:	8b 45 08             	mov    0x8(%ebp),%eax
810040a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810040ab:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810040af:	74 18                	je     810040c9 <_puts_r+0x74>
810040b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040b4:	8b 40 38             	mov    0x38(%eax),%eax
810040b7:	85 c0                	test   %eax,%eax
810040b9:	75 0e                	jne    810040c9 <_puts_r+0x74>
810040bb:	83 ec 0c             	sub    $0xc,%esp
810040be:	ff 75 ec             	push   -0x14(%ebp)
810040c1:	e8 e6 d0 ff ff       	call   810011ac <__sinit>
810040c6:	83 c4 10             	add    $0x10,%esp
810040c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040cc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810040d0:	98                   	cwtl   
810040d1:	25 00 20 00 00       	and    $0x2000,%eax
810040d6:	85 c0                	test   %eax,%eax
810040d8:	75 24                	jne    810040fe <_puts_r+0xa9>
810040da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040dd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810040e1:	80 cc 20             	or     $0x20,%ah
810040e4:	89 c2                	mov    %eax,%edx
810040e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040e9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810040ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f0:	8b 40 64             	mov    0x64(%eax),%eax
810040f3:	80 e4 df             	and    $0xdf,%ah
810040f6:	89 c2                	mov    %eax,%edx
810040f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040fb:	89 50 64             	mov    %edx,0x64(%eax)
810040fe:	83 ec 04             	sub    $0x4,%esp
81004101:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004104:	50                   	push   %eax
81004105:	ff 75 f0             	push   -0x10(%ebp)
81004108:	ff 75 08             	push   0x8(%ebp)
8100410b:	e8 b4 11 00 00       	call   810052c4 <__sfvwrite_r>
81004110:	83 c4 10             	add    $0x10,%esp
81004113:	85 c0                	test   %eax,%eax
81004115:	74 07                	je     8100411e <_puts_r+0xc9>
81004117:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100411c:	eb 05                	jmp    81004123 <_puts_r+0xce>
8100411e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004123:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004126:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004129:	c9                   	leave  
8100412a:	c3                   	ret    

8100412b <puts>:
8100412b:	55                   	push   %ebp
8100412c:	89 e5                	mov    %esp,%ebp
8100412e:	83 ec 08             	sub    $0x8,%esp
81004131:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004136:	83 ec 08             	sub    $0x8,%esp
81004139:	ff 75 08             	push   0x8(%ebp)
8100413c:	50                   	push   %eax
8100413d:	e8 13 ff ff ff       	call   81004055 <_puts_r>
81004142:	83 c4 10             	add    $0x10,%esp
81004145:	c9                   	leave  
81004146:	c3                   	ret    

81004147 <lflush>:
81004147:	55                   	push   %ebp
81004148:	89 e5                	mov    %esp,%ebp
8100414a:	83 ec 08             	sub    $0x8,%esp
8100414d:	8b 45 08             	mov    0x8(%ebp),%eax
81004150:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004154:	98                   	cwtl   
81004155:	83 e0 09             	and    $0x9,%eax
81004158:	83 f8 09             	cmp    $0x9,%eax
8100415b:	75 10                	jne    8100416d <lflush+0x26>
8100415d:	83 ec 0c             	sub    $0xc,%esp
81004160:	ff 75 08             	push   0x8(%ebp)
81004163:	e8 99 cb ff ff       	call   81000d01 <fflush>
81004168:	83 c4 10             	add    $0x10,%esp
8100416b:	eb 05                	jmp    81004172 <lflush+0x2b>
8100416d:	b8 00 00 00 00       	mov    $0x0,%eax
81004172:	c9                   	leave  
81004173:	c3                   	ret    

81004174 <__srefill_r>:
81004174:	55                   	push   %ebp
81004175:	89 e5                	mov    %esp,%ebp
81004177:	56                   	push   %esi
81004178:	53                   	push   %ebx
81004179:	83 ec 10             	sub    $0x10,%esp
8100417c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100417f:	8b 45 08             	mov    0x8(%ebp),%eax
81004182:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004185:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004189:	74 18                	je     810041a3 <__srefill_r+0x2f>
8100418b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418e:	8b 40 38             	mov    0x38(%eax),%eax
81004191:	85 c0                	test   %eax,%eax
81004193:	75 0e                	jne    810041a3 <__srefill_r+0x2f>
81004195:	83 ec 0c             	sub    $0xc,%esp
81004198:	ff 75 f4             	push   -0xc(%ebp)
8100419b:	e8 0c d0 ff ff       	call   810011ac <__sinit>
810041a0:	83 c4 10             	add    $0x10,%esp
810041a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041a7:	98                   	cwtl   
810041a8:	25 00 20 00 00       	and    $0x2000,%eax
810041ad:	85 c0                	test   %eax,%eax
810041af:	75 14                	jne    810041c5 <__srefill_r+0x51>
810041b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041b5:	80 cc 20             	or     $0x20,%ah
810041b8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041bc:	8b 43 64             	mov    0x64(%ebx),%eax
810041bf:	80 e4 df             	and    $0xdf,%ah
810041c2:	89 43 64             	mov    %eax,0x64(%ebx)
810041c5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810041cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041d0:	98                   	cwtl   
810041d1:	83 e0 20             	and    $0x20,%eax
810041d4:	85 c0                	test   %eax,%eax
810041d6:	74 0a                	je     810041e2 <__srefill_r+0x6e>
810041d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041dd:	e9 8c 01 00 00       	jmp    8100436e <__srefill_r+0x1fa>
810041e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041e6:	98                   	cwtl   
810041e7:	83 e0 04             	and    $0x4,%eax
810041ea:	85 c0                	test   %eax,%eax
810041ec:	75 79                	jne    81004267 <__srefill_r+0xf3>
810041ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041f2:	98                   	cwtl   
810041f3:	83 e0 10             	and    $0x10,%eax
810041f6:	85 c0                	test   %eax,%eax
810041f8:	75 1e                	jne    81004218 <__srefill_r+0xa4>
810041fa:	8b 45 08             	mov    0x8(%ebp),%eax
810041fd:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004203:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004207:	83 c8 40             	or     $0x40,%eax
8100420a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100420e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004213:	e9 56 01 00 00       	jmp    8100436e <__srefill_r+0x1fa>
81004218:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100421c:	98                   	cwtl   
8100421d:	83 e0 08             	and    $0x8,%eax
81004220:	85 c0                	test   %eax,%eax
81004222:	74 36                	je     8100425a <__srefill_r+0xe6>
81004224:	83 ec 08             	sub    $0x8,%esp
81004227:	53                   	push   %ebx
81004228:	ff 75 08             	push   0x8(%ebp)
8100422b:	e8 79 ca ff ff       	call   81000ca9 <_fflush_r>
81004230:	83 c4 10             	add    $0x10,%esp
81004233:	85 c0                	test   %eax,%eax
81004235:	74 0a                	je     81004241 <__srefill_r+0xcd>
81004237:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100423c:	e9 2d 01 00 00       	jmp    8100436e <__srefill_r+0x1fa>
81004241:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004245:	83 e0 f7             	and    $0xfffffff7,%eax
81004248:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100424c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004253:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100425a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100425e:	83 c8 04             	or     $0x4,%eax
81004261:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004265:	eb 46                	jmp    810042ad <__srefill_r+0x139>
81004267:	8b 43 30             	mov    0x30(%ebx),%eax
8100426a:	85 c0                	test   %eax,%eax
8100426c:	74 3f                	je     810042ad <__srefill_r+0x139>
8100426e:	8b 53 30             	mov    0x30(%ebx),%edx
81004271:	8d 43 40             	lea    0x40(%ebx),%eax
81004274:	39 c2                	cmp    %eax,%edx
81004276:	74 12                	je     8100428a <__srefill_r+0x116>
81004278:	8b 43 30             	mov    0x30(%ebx),%eax
8100427b:	83 ec 08             	sub    $0x8,%esp
8100427e:	50                   	push   %eax
8100427f:	ff 75 08             	push   0x8(%ebp)
81004282:	e8 87 d0 ff ff       	call   8100130e <_free_r>
81004287:	83 c4 10             	add    $0x10,%esp
8100428a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004291:	8b 43 3c             	mov    0x3c(%ebx),%eax
81004294:	89 43 04             	mov    %eax,0x4(%ebx)
81004297:	8b 43 04             	mov    0x4(%ebx),%eax
8100429a:	85 c0                	test   %eax,%eax
8100429c:	74 0f                	je     810042ad <__srefill_r+0x139>
8100429e:	8b 43 38             	mov    0x38(%ebx),%eax
810042a1:	89 03                	mov    %eax,(%ebx)
810042a3:	b8 00 00 00 00       	mov    $0x0,%eax
810042a8:	e9 c1 00 00 00       	jmp    8100436e <__srefill_r+0x1fa>
810042ad:	8b 43 10             	mov    0x10(%ebx),%eax
810042b0:	85 c0                	test   %eax,%eax
810042b2:	75 0f                	jne    810042c3 <__srefill_r+0x14f>
810042b4:	83 ec 08             	sub    $0x8,%esp
810042b7:	53                   	push   %ebx
810042b8:	ff 75 08             	push   0x8(%ebp)
810042bb:	e8 d8 16 00 00       	call   81005998 <__smakebuf_r>
810042c0:	83 c4 10             	add    $0x10,%esp
810042c3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042c7:	98                   	cwtl   
810042c8:	83 e0 03             	and    $0x3,%eax
810042cb:	85 c0                	test   %eax,%eax
810042cd:	74 48                	je     81004317 <__srefill_r+0x1a3>
810042cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042d3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810042d7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810042dd:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
810042e2:	83 ec 08             	sub    $0x8,%esp
810042e5:	68 47 41 00 81       	push   $0x81004147
810042ea:	50                   	push   %eax
810042eb:	e8 5a d5 ff ff       	call   8100184a <_fwalk>
810042f0:	83 c4 10             	add    $0x10,%esp
810042f3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810042f7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042ff:	98                   	cwtl   
81004300:	83 e0 09             	and    $0x9,%eax
81004303:	83 f8 09             	cmp    $0x9,%eax
81004306:	75 0f                	jne    81004317 <__srefill_r+0x1a3>
81004308:	83 ec 08             	sub    $0x8,%esp
8100430b:	53                   	push   %ebx
8100430c:	ff 75 08             	push   0x8(%ebp)
8100430f:	e8 6f c7 ff ff       	call   81000a83 <__sflush_r>
81004314:	83 c4 10             	add    $0x10,%esp
81004317:	8b 43 10             	mov    0x10(%ebx),%eax
8100431a:	89 03                	mov    %eax,(%ebx)
8100431c:	8b 43 20             	mov    0x20(%ebx),%eax
8100431f:	8b 73 14             	mov    0x14(%ebx),%esi
81004322:	8b 0b                	mov    (%ebx),%ecx
81004324:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004327:	56                   	push   %esi
81004328:	51                   	push   %ecx
81004329:	52                   	push   %edx
8100432a:	ff 75 08             	push   0x8(%ebp)
8100432d:	ff d0                	call   *%eax
8100432f:	83 c4 10             	add    $0x10,%esp
81004332:	89 43 04             	mov    %eax,0x4(%ebx)
81004335:	8b 43 04             	mov    0x4(%ebx),%eax
81004338:	85 c0                	test   %eax,%eax
8100433a:	7f 2d                	jg     81004369 <__srefill_r+0x1f5>
8100433c:	8b 43 04             	mov    0x4(%ebx),%eax
8100433f:	85 c0                	test   %eax,%eax
81004341:	75 0d                	jne    81004350 <__srefill_r+0x1dc>
81004343:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004347:	83 c8 20             	or     $0x20,%eax
8100434a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100434e:	eb 12                	jmp    81004362 <__srefill_r+0x1ee>
81004350:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004357:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100435b:	83 c8 40             	or     $0x40,%eax
8100435e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004362:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004367:	eb 05                	jmp    8100436e <__srefill_r+0x1fa>
81004369:	b8 00 00 00 00       	mov    $0x0,%eax
8100436e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004371:	5b                   	pop    %ebx
81004372:	5e                   	pop    %esi
81004373:	5d                   	pop    %ebp
81004374:	c3                   	ret    

81004375 <_sbrk_r>:
81004375:	55                   	push   %ebp
81004376:	89 e5                	mov    %esp,%ebp
81004378:	83 ec 18             	sub    $0x18,%esp
8100437b:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004382:	00 00 00 
81004385:	83 ec 0c             	sub    $0xc,%esp
81004388:	ff 75 0c             	push   0xc(%ebp)
8100438b:	e8 19 c5 ff ff       	call   810008a9 <sbrk>
81004390:	83 c4 10             	add    $0x10,%esp
81004393:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004396:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100439a:	75 14                	jne    810043b0 <_sbrk_r+0x3b>
8100439c:	a1 f4 81 00 81       	mov    0x810081f4,%eax
810043a1:	85 c0                	test   %eax,%eax
810043a3:	74 0b                	je     810043b0 <_sbrk_r+0x3b>
810043a5:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
810043ab:	8b 45 08             	mov    0x8(%ebp),%eax
810043ae:	89 10                	mov    %edx,(%eax)
810043b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043b3:	c9                   	leave  
810043b4:	c3                   	ret    

810043b5 <__sread>:
810043b5:	55                   	push   %ebp
810043b6:	89 e5                	mov    %esp,%ebp
810043b8:	56                   	push   %esi
810043b9:	53                   	push   %ebx
810043ba:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810043bd:	8b 55 14             	mov    0x14(%ebp),%edx
810043c0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043c4:	98                   	cwtl   
810043c5:	52                   	push   %edx
810043c6:	ff 75 10             	push   0x10(%ebp)
810043c9:	50                   	push   %eax
810043ca:	ff 75 08             	push   0x8(%ebp)
810043cd:	e8 6f 19 00 00       	call   81005d41 <_read_r>
810043d2:	83 c4 10             	add    $0x10,%esp
810043d5:	89 c6                	mov    %eax,%esi
810043d7:	85 f6                	test   %esi,%esi
810043d9:	78 0a                	js     810043e5 <__sread+0x30>
810043db:	8b 43 50             	mov    0x50(%ebx),%eax
810043de:	01 f0                	add    %esi,%eax
810043e0:	89 43 50             	mov    %eax,0x50(%ebx)
810043e3:	eb 0b                	jmp    810043f0 <__sread+0x3b>
810043e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810043e9:	80 e4 ef             	and    $0xef,%ah
810043ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810043f0:	89 f0                	mov    %esi,%eax
810043f2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810043f5:	5b                   	pop    %ebx
810043f6:	5e                   	pop    %esi
810043f7:	5d                   	pop    %ebp
810043f8:	c3                   	ret    

810043f9 <__seofread>:
810043f9:	55                   	push   %ebp
810043fa:	89 e5                	mov    %esp,%ebp
810043fc:	b8 00 00 00 00       	mov    $0x0,%eax
81004401:	5d                   	pop    %ebp
81004402:	c3                   	ret    

81004403 <__swrite>:
81004403:	55                   	push   %ebp
81004404:	89 e5                	mov    %esp,%ebp
81004406:	53                   	push   %ebx
81004407:	83 ec 14             	sub    $0x14,%esp
8100440a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100440d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004411:	98                   	cwtl   
81004412:	25 00 01 00 00       	and    $0x100,%eax
81004417:	85 c0                	test   %eax,%eax
81004419:	74 15                	je     81004430 <__swrite+0x2d>
8100441b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100441f:	98                   	cwtl   
81004420:	6a 02                	push   $0x2
81004422:	6a 00                	push   $0x0
81004424:	50                   	push   %eax
81004425:	ff 75 08             	push   0x8(%ebp)
81004428:	e8 25 15 00 00       	call   81005952 <_lseek_r>
8100442d:	83 c4 10             	add    $0x10,%esp
81004430:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004434:	80 e4 ef             	and    $0xef,%ah
81004437:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100443b:	8b 55 14             	mov    0x14(%ebp),%edx
8100443e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004442:	98                   	cwtl   
81004443:	52                   	push   %edx
81004444:	ff 75 10             	push   0x10(%ebp)
81004447:	50                   	push   %eax
81004448:	ff 75 08             	push   0x8(%ebp)
8100444b:	e8 42 07 00 00       	call   81004b92 <_write_r>
81004450:	83 c4 10             	add    $0x10,%esp
81004453:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004456:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004459:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100445c:	c9                   	leave  
8100445d:	c3                   	ret    

8100445e <__sseek>:
8100445e:	55                   	push   %ebp
8100445f:	89 e5                	mov    %esp,%ebp
81004461:	56                   	push   %esi
81004462:	53                   	push   %ebx
81004463:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004466:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100446a:	98                   	cwtl   
8100446b:	ff 75 14             	push   0x14(%ebp)
8100446e:	ff 75 10             	push   0x10(%ebp)
81004471:	50                   	push   %eax
81004472:	ff 75 08             	push   0x8(%ebp)
81004475:	e8 d8 14 00 00       	call   81005952 <_lseek_r>
8100447a:	83 c4 10             	add    $0x10,%esp
8100447d:	89 c6                	mov    %eax,%esi
8100447f:	83 fe ff             	cmp    $0xffffffff,%esi
81004482:	75 0d                	jne    81004491 <__sseek+0x33>
81004484:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004488:	80 e4 ef             	and    $0xef,%ah
8100448b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100448f:	eb 0e                	jmp    8100449f <__sseek+0x41>
81004491:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004495:	80 cc 10             	or     $0x10,%ah
81004498:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100449c:	89 73 50             	mov    %esi,0x50(%ebx)
8100449f:	89 f0                	mov    %esi,%eax
810044a1:	8d 65 f8             	lea    -0x8(%ebp),%esp
810044a4:	5b                   	pop    %ebx
810044a5:	5e                   	pop    %esi
810044a6:	5d                   	pop    %ebp
810044a7:	c3                   	ret    

810044a8 <__sclose>:
810044a8:	55                   	push   %ebp
810044a9:	89 e5                	mov    %esp,%ebp
810044ab:	83 ec 18             	sub    $0x18,%esp
810044ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810044b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810044b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044b7:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810044bb:	98                   	cwtl   
810044bc:	83 ec 08             	sub    $0x8,%esp
810044bf:	50                   	push   %eax
810044c0:	ff 75 08             	push   0x8(%ebp)
810044c3:	e8 80 09 00 00       	call   81004e48 <_close_r>
810044c8:	83 c4 10             	add    $0x10,%esp
810044cb:	c9                   	leave  
810044cc:	c3                   	ret    
810044cd:	66 90                	xchg   %ax,%ax
810044cf:	90                   	nop

810044d0 <strchr>:
810044d0:	55                   	push   %ebp
810044d1:	89 e5                	mov    %esp,%ebp
810044d3:	57                   	push   %edi
810044d4:	53                   	push   %ebx
810044d5:	31 db                	xor    %ebx,%ebx
810044d7:	8b 7d 08             	mov    0x8(%ebp),%edi
810044da:	02 5d 0c             	add    0xc(%ebp),%bl
810044dd:	0f 84 98 00 00 00    	je     8100457b <L25>
810044e3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044e9:	74 37                	je     81004522 <L5>
810044eb:	89 f8                	mov    %edi,%eax
810044ed:	8a 08                	mov    (%eax),%cl
810044ef:	84 c9                	test   %cl,%cl
810044f1:	74 7b                	je     8100456e <L14>
810044f3:	38 d9                	cmp    %bl,%cl
810044f5:	74 7d                	je     81004574 <L19>
810044f7:	47                   	inc    %edi
810044f8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044fe:	74 22                	je     81004522 <L5>
81004500:	89 f8                	mov    %edi,%eax
81004502:	8a 08                	mov    (%eax),%cl
81004504:	84 c9                	test   %cl,%cl
81004506:	74 66                	je     8100456e <L14>
81004508:	38 d9                	cmp    %bl,%cl
8100450a:	74 68                	je     81004574 <L19>
8100450c:	47                   	inc    %edi
8100450d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004513:	74 0d                	je     81004522 <L5>
81004515:	89 f8                	mov    %edi,%eax
81004517:	8a 08                	mov    (%eax),%cl
81004519:	84 c9                	test   %cl,%cl
8100451b:	74 51                	je     8100456e <L14>
8100451d:	38 d9                	cmp    %bl,%cl
8100451f:	74 53                	je     81004574 <L19>
81004521:	47                   	inc    %edi

81004522 <L5>:
81004522:	89 d9                	mov    %ebx,%ecx
81004524:	c1 e3 08             	shl    $0x8,%ebx
81004527:	83 ef 04             	sub    $0x4,%edi
8100452a:	09 cb                	or     %ecx,%ebx
8100452c:	89 da                	mov    %ebx,%edx
8100452e:	c1 e3 10             	shl    $0x10,%ebx
81004531:	09 d3                	or     %edx,%ebx

81004533 <L10>:
81004533:	83 c7 04             	add    $0x4,%edi
81004536:	8b 0f                	mov    (%edi),%ecx
81004538:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100453e:	89 c8                	mov    %ecx,%eax
81004540:	f7 d0                	not    %eax
81004542:	21 c2                	and    %eax,%edx
81004544:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100454a:	75 14                	jne    81004560 <L9>
8100454c:	31 d9                	xor    %ebx,%ecx
8100454e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81004554:	f7 d1                	not    %ecx
81004556:	21 ca                	and    %ecx,%edx
81004558:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100455e:	74 d3                	je     81004533 <L10>

81004560 <L9>:
81004560:	8d 47 ff             	lea    -0x1(%edi),%eax

81004563 <L15>:
81004563:	40                   	inc    %eax
81004564:	8a 10                	mov    (%eax),%dl
81004566:	84 d2                	test   %dl,%dl
81004568:	74 04                	je     8100456e <L14>
8100456a:	38 da                	cmp    %bl,%dl
8100456c:	75 f5                	jne    81004563 <L15>

8100456e <L14>:
8100456e:	38 18                	cmp    %bl,(%eax)
81004570:	74 02                	je     81004574 <L19>
81004572:	31 c0                	xor    %eax,%eax

81004574 <L19>:
81004574:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004577:	5b                   	pop    %ebx
81004578:	5f                   	pop    %edi
81004579:	c9                   	leave  
8100457a:	c3                   	ret    

8100457b <L25>:
8100457b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004581:	74 2b                	je     810045ae <L26>
81004583:	89 f8                	mov    %edi,%eax
81004585:	8a 08                	mov    (%eax),%cl
81004587:	84 c9                	test   %cl,%cl
81004589:	74 e9                	je     81004574 <L19>
8100458b:	47                   	inc    %edi
8100458c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004592:	74 1a                	je     810045ae <L26>
81004594:	89 f8                	mov    %edi,%eax
81004596:	8a 08                	mov    (%eax),%cl
81004598:	84 c9                	test   %cl,%cl
8100459a:	74 d8                	je     81004574 <L19>
8100459c:	47                   	inc    %edi
8100459d:	f7 c7 03 00 00 00    	test   $0x3,%edi
810045a3:	74 09                	je     810045ae <L26>
810045a5:	89 f8                	mov    %edi,%eax
810045a7:	8a 08                	mov    (%eax),%cl
810045a9:	84 c9                	test   %cl,%cl
810045ab:	74 c7                	je     81004574 <L19>
810045ad:	47                   	inc    %edi

810045ae <L26>:
810045ae:	83 ef 04             	sub    $0x4,%edi

810045b1 <L27>:
810045b1:	83 c7 04             	add    $0x4,%edi
810045b4:	8b 0f                	mov    (%edi),%ecx
810045b6:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810045bc:	89 c8                	mov    %ecx,%eax
810045be:	f7 d0                	not    %eax
810045c0:	21 c2                	and    %eax,%edx
810045c2:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810045c8:	74 e7                	je     810045b1 <L27>
810045ca:	eb 94                	jmp    81004560 <L9>

810045cc <strcmp>:
810045cc:	55                   	push   %ebp
810045cd:	89 e5                	mov    %esp,%ebp
810045cf:	83 ec 10             	sub    $0x10,%esp
810045d2:	8b 55 08             	mov    0x8(%ebp),%edx
810045d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810045d8:	09 d0                	or     %edx,%eax
810045da:	83 e0 03             	and    $0x3,%eax
810045dd:	85 c0                	test   %eax,%eax
810045df:	75 5e                	jne    8100463f <strcmp+0x73>
810045e1:	8b 45 08             	mov    0x8(%ebp),%eax
810045e4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810045e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810045ea:	89 45 f8             	mov    %eax,-0x8(%ebp)
810045ed:	eb 2c                	jmp    8100461b <strcmp+0x4f>
810045ef:	8b 45 fc             	mov    -0x4(%ebp),%eax
810045f2:	8b 00                	mov    (%eax),%eax
810045f4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810045fa:	8b 45 fc             	mov    -0x4(%ebp),%eax
810045fd:	8b 00                	mov    (%eax),%eax
810045ff:	f7 d0                	not    %eax
81004601:	21 d0                	and    %edx,%eax
81004603:	25 80 80 80 80       	and    $0x80808080,%eax
81004608:	85 c0                	test   %eax,%eax
8100460a:	74 07                	je     81004613 <strcmp+0x47>
8100460c:	b8 00 00 00 00       	mov    $0x0,%eax
81004611:	eb 5c                	jmp    8100466f <strcmp+0xa3>
81004613:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004617:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100461b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100461e:	8b 10                	mov    (%eax),%edx
81004620:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004623:	8b 00                	mov    (%eax),%eax
81004625:	39 c2                	cmp    %eax,%edx
81004627:	74 c6                	je     810045ef <strcmp+0x23>
81004629:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100462c:	89 45 08             	mov    %eax,0x8(%ebp)
8100462f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004632:	89 45 0c             	mov    %eax,0xc(%ebp)
81004635:	eb 08                	jmp    8100463f <strcmp+0x73>
81004637:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100463b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100463f:	8b 45 08             	mov    0x8(%ebp),%eax
81004642:	0f b6 00             	movzbl (%eax),%eax
81004645:	84 c0                	test   %al,%al
81004647:	74 10                	je     81004659 <strcmp+0x8d>
81004649:	8b 45 08             	mov    0x8(%ebp),%eax
8100464c:	0f b6 10             	movzbl (%eax),%edx
8100464f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004652:	0f b6 00             	movzbl (%eax),%eax
81004655:	38 c2                	cmp    %al,%dl
81004657:	74 de                	je     81004637 <strcmp+0x6b>
81004659:	8b 45 08             	mov    0x8(%ebp),%eax
8100465c:	0f b6 00             	movzbl (%eax),%eax
8100465f:	0f b6 d0             	movzbl %al,%edx
81004662:	8b 45 0c             	mov    0xc(%ebp),%eax
81004665:	0f b6 00             	movzbl (%eax),%eax
81004668:	0f b6 c8             	movzbl %al,%ecx
8100466b:	89 d0                	mov    %edx,%eax
8100466d:	29 c8                	sub    %ecx,%eax
8100466f:	c9                   	leave  
81004670:	c3                   	ret    
81004671:	66 90                	xchg   %ax,%ax
81004673:	66 90                	xchg   %ax,%ax
81004675:	66 90                	xchg   %ax,%ax
81004677:	66 90                	xchg   %ax,%ax
81004679:	66 90                	xchg   %ax,%ax
8100467b:	66 90                	xchg   %ax,%ax
8100467d:	66 90                	xchg   %ax,%ax
8100467f:	90                   	nop

81004680 <strlen>:
81004680:	55                   	push   %ebp
81004681:	89 e5                	mov    %esp,%ebp
81004683:	57                   	push   %edi
81004684:	8b 55 08             	mov    0x8(%ebp),%edx
81004687:	89 d7                	mov    %edx,%edi
81004689:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100468f:	74 25                	je     810046b6 <L5>
81004691:	8a 0f                	mov    (%edi),%cl
81004693:	47                   	inc    %edi
81004694:	84 c9                	test   %cl,%cl
81004696:	74 56                	je     810046ee <L15>
81004698:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100469e:	74 16                	je     810046b6 <L5>
810046a0:	8a 0f                	mov    (%edi),%cl
810046a2:	47                   	inc    %edi
810046a3:	84 c9                	test   %cl,%cl
810046a5:	74 47                	je     810046ee <L15>
810046a7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810046ad:	74 07                	je     810046b6 <L5>
810046af:	8a 0f                	mov    (%edi),%cl
810046b1:	47                   	inc    %edi
810046b2:	84 c9                	test   %cl,%cl
810046b4:	74 38                	je     810046ee <L15>

810046b6 <L5>:
810046b6:	83 ef 04             	sub    $0x4,%edi
810046b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810046c0 <L10>:
810046c0:	83 c7 04             	add    $0x4,%edi
810046c3:	8b 0f                	mov    (%edi),%ecx
810046c5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810046cb:	f7 d1                	not    %ecx
810046cd:	21 c8                	and    %ecx,%eax
810046cf:	a9 80 80 80 80       	test   $0x80808080,%eax
810046d4:	74 ea                	je     810046c0 <L10>
810046d6:	f7 d1                	not    %ecx
810046d8:	47                   	inc    %edi
810046d9:	84 c9                	test   %cl,%cl
810046db:	74 11                	je     810046ee <L15>
810046dd:	47                   	inc    %edi
810046de:	c1 e9 08             	shr    $0x8,%ecx
810046e1:	84 c9                	test   %cl,%cl
810046e3:	74 09                	je     810046ee <L15>
810046e5:	47                   	inc    %edi
810046e6:	c1 e9 08             	shr    $0x8,%ecx
810046e9:	84 c9                	test   %cl,%cl
810046eb:	74 01                	je     810046ee <L15>
810046ed:	47                   	inc    %edi

810046ee <L15>:
810046ee:	29 d7                	sub    %edx,%edi
810046f0:	8d 47 ff             	lea    -0x1(%edi),%eax
810046f3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810046f6:	5f                   	pop    %edi
810046f7:	c9                   	leave  
810046f8:	c3                   	ret    

810046f9 <strtok>:
810046f9:	55                   	push   %ebp
810046fa:	89 e5                	mov    %esp,%ebp
810046fc:	83 ec 18             	sub    $0x18,%esp
810046ff:	8b 55 08             	mov    0x8(%ebp),%edx
81004702:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004705:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100470a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100470d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004710:	83 c0 5c             	add    $0x5c,%eax
81004713:	6a 01                	push   $0x1
81004715:	50                   	push   %eax
81004716:	51                   	push   %ecx
81004717:	52                   	push   %edx
81004718:	e8 05 00 00 00       	call   81004722 <__strtok_r>
8100471d:	83 c4 10             	add    $0x10,%esp
81004720:	c9                   	leave  
81004721:	c3                   	ret    

81004722 <__strtok_r>:
81004722:	55                   	push   %ebp
81004723:	89 e5                	mov    %esp,%ebp
81004725:	57                   	push   %edi
81004726:	56                   	push   %esi
81004727:	53                   	push   %ebx
81004728:	83 ec 10             	sub    $0x10,%esp
8100472b:	8b 45 08             	mov    0x8(%ebp),%eax
8100472e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004731:	85 c0                	test   %eax,%eax
81004733:	75 13                	jne    81004748 <__strtok_r+0x26>
81004735:	8b 45 10             	mov    0x10(%ebp),%eax
81004738:	8b 00                	mov    (%eax),%eax
8100473a:	85 c0                	test   %eax,%eax
8100473c:	75 0a                	jne    81004748 <__strtok_r+0x26>
8100473e:	b8 00 00 00 00       	mov    $0x0,%eax
81004743:	e9 92 00 00 00       	jmp    810047da <__strtok_r+0xb8>
81004748:	90                   	nop
81004749:	89 c2                	mov    %eax,%edx
8100474b:	8d 42 01             	lea    0x1(%edx),%eax
8100474e:	0f b6 12             	movzbl (%edx),%edx
81004751:	0f be f2             	movsbl %dl,%esi
81004754:	89 cf                	mov    %ecx,%edi
81004756:	eb 1c                	jmp    81004774 <__strtok_r+0x52>
81004758:	39 de                	cmp    %ebx,%esi
8100475a:	75 18                	jne    81004774 <__strtok_r+0x52>
8100475c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004760:	74 02                	je     81004764 <__strtok_r+0x42>
81004762:	eb e5                	jmp    81004749 <__strtok_r+0x27>
81004764:	8b 55 10             	mov    0x10(%ebp),%edx
81004767:	89 02                	mov    %eax,(%edx)
81004769:	8d 50 ff             	lea    -0x1(%eax),%edx
8100476c:	c6 02 00             	movb   $0x0,(%edx)
8100476f:	83 e8 01             	sub    $0x1,%eax
81004772:	eb 66                	jmp    810047da <__strtok_r+0xb8>
81004774:	89 fa                	mov    %edi,%edx
81004776:	8d 7a 01             	lea    0x1(%edx),%edi
81004779:	0f b6 12             	movzbl (%edx),%edx
8100477c:	0f be da             	movsbl %dl,%ebx
8100477f:	85 db                	test   %ebx,%ebx
81004781:	75 d5                	jne    81004758 <__strtok_r+0x36>
81004783:	85 f6                	test   %esi,%esi
81004785:	75 10                	jne    81004797 <__strtok_r+0x75>
81004787:	8b 45 10             	mov    0x10(%ebp),%eax
8100478a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004790:	b8 00 00 00 00       	mov    $0x0,%eax
81004795:	eb 43                	jmp    810047da <__strtok_r+0xb8>
81004797:	8d 50 ff             	lea    -0x1(%eax),%edx
8100479a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100479d:	89 c2                	mov    %eax,%edx
8100479f:	8d 42 01             	lea    0x1(%edx),%eax
810047a2:	0f b6 12             	movzbl (%edx),%edx
810047a5:	0f be f2             	movsbl %dl,%esi
810047a8:	89 cf                	mov    %ecx,%edi
810047aa:	89 fa                	mov    %edi,%edx
810047ac:	8d 7a 01             	lea    0x1(%edx),%edi
810047af:	0f b6 12             	movzbl (%edx),%edx
810047b2:	0f be da             	movsbl %dl,%ebx
810047b5:	39 f3                	cmp    %esi,%ebx
810047b7:	75 1b                	jne    810047d4 <__strtok_r+0xb2>
810047b9:	85 f6                	test   %esi,%esi
810047bb:	75 07                	jne    810047c4 <__strtok_r+0xa2>
810047bd:	b8 00 00 00 00       	mov    $0x0,%eax
810047c2:	eb 06                	jmp    810047ca <__strtok_r+0xa8>
810047c4:	8d 50 ff             	lea    -0x1(%eax),%edx
810047c7:	c6 02 00             	movb   $0x0,(%edx)
810047ca:	8b 55 10             	mov    0x10(%ebp),%edx
810047cd:	89 02                	mov    %eax,(%edx)
810047cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810047d2:	eb 06                	jmp    810047da <__strtok_r+0xb8>
810047d4:	85 db                	test   %ebx,%ebx
810047d6:	75 d2                	jne    810047aa <__strtok_r+0x88>
810047d8:	eb c3                	jmp    8100479d <__strtok_r+0x7b>
810047da:	83 c4 10             	add    $0x10,%esp
810047dd:	5b                   	pop    %ebx
810047de:	5e                   	pop    %esi
810047df:	5f                   	pop    %edi
810047e0:	5d                   	pop    %ebp
810047e1:	c3                   	ret    

810047e2 <strtok_r>:
810047e2:	55                   	push   %ebp
810047e3:	89 e5                	mov    %esp,%ebp
810047e5:	8b 45 08             	mov    0x8(%ebp),%eax
810047e8:	8b 55 0c             	mov    0xc(%ebp),%edx
810047eb:	6a 01                	push   $0x1
810047ed:	ff 75 10             	push   0x10(%ebp)
810047f0:	52                   	push   %edx
810047f1:	50                   	push   %eax
810047f2:	e8 2b ff ff ff       	call   81004722 <__strtok_r>
810047f7:	83 c4 10             	add    $0x10,%esp
810047fa:	c9                   	leave  
810047fb:	c3                   	ret    

810047fc <__locale_ctype_ptr_l>:
810047fc:	55                   	push   %ebp
810047fd:	89 e5                	mov    %esp,%ebp
810047ff:	b8 40 70 00 81       	mov    $0x81007040,%eax
81004804:	5d                   	pop    %ebp
81004805:	c3                   	ret    

81004806 <__get_global_locale>:
81004806:	55                   	push   %ebp
81004807:	89 e5                	mov    %esp,%ebp
81004809:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
8100480e:	5d                   	pop    %ebp
8100480f:	c3                   	ret    

81004810 <__get_current_locale>:
81004810:	55                   	push   %ebp
81004811:	89 e5                	mov    %esp,%ebp
81004813:	e8 ee ff ff ff       	call   81004806 <__get_global_locale>
81004818:	5d                   	pop    %ebp
81004819:	c3                   	ret    

8100481a <_strtol_l>:
8100481a:	55                   	push   %ebp
8100481b:	89 e5                	mov    %esp,%ebp
8100481d:	57                   	push   %edi
8100481e:	56                   	push   %esi
8100481f:	53                   	push   %ebx
81004820:	83 ec 1c             	sub    $0x1c,%esp
81004823:	8b 75 0c             	mov    0xc(%ebp),%esi
81004826:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100482d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004831:	78 0c                	js     8100483f <_strtol_l+0x25>
81004833:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81004837:	74 06                	je     8100483f <_strtol_l+0x25>
81004839:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100483d:	7e 15                	jle    81004854 <_strtol_l+0x3a>
8100483f:	e8 44 06 00 00       	call   81004e88 <__errno>
81004844:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100484a:	b8 00 00 00 00       	mov    $0x0,%eax
8100484f:	e9 90 01 00 00       	jmp    810049e4 <_strtol_l+0x1ca>
81004854:	89 f0                	mov    %esi,%eax
81004856:	8d 70 01             	lea    0x1(%eax),%esi
81004859:	0f b6 00             	movzbl (%eax),%eax
8100485c:	0f b6 d8             	movzbl %al,%ebx
8100485f:	83 ec 0c             	sub    $0xc,%esp
81004862:	ff 75 18             	push   0x18(%ebp)
81004865:	e8 92 ff ff ff       	call   810047fc <__locale_ctype_ptr_l>
8100486a:	83 c4 10             	add    $0x10,%esp
8100486d:	89 da                	mov    %ebx,%edx
8100486f:	83 c2 01             	add    $0x1,%edx
81004872:	01 d0                	add    %edx,%eax
81004874:	0f b6 00             	movzbl (%eax),%eax
81004877:	0f be c0             	movsbl %al,%eax
8100487a:	83 e0 08             	and    $0x8,%eax
8100487d:	85 c0                	test   %eax,%eax
8100487f:	75 d3                	jne    81004854 <_strtol_l+0x3a>
81004881:	83 fb 2d             	cmp    $0x2d,%ebx
81004884:	75 14                	jne    8100489a <_strtol_l+0x80>
81004886:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100488d:	89 f0                	mov    %esi,%eax
8100488f:	8d 70 01             	lea    0x1(%eax),%esi
81004892:	0f b6 00             	movzbl (%eax),%eax
81004895:	0f b6 d8             	movzbl %al,%ebx
81004898:	eb 10                	jmp    810048aa <_strtol_l+0x90>
8100489a:	83 fb 2b             	cmp    $0x2b,%ebx
8100489d:	75 0b                	jne    810048aa <_strtol_l+0x90>
8100489f:	89 f0                	mov    %esi,%eax
810048a1:	8d 70 01             	lea    0x1(%eax),%esi
810048a4:	0f b6 00             	movzbl (%eax),%eax
810048a7:	0f b6 d8             	movzbl %al,%ebx
810048aa:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810048ae:	74 06                	je     810048b6 <_strtol_l+0x9c>
810048b0:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
810048b4:	75 26                	jne    810048dc <_strtol_l+0xc2>
810048b6:	83 fb 30             	cmp    $0x30,%ebx
810048b9:	75 21                	jne    810048dc <_strtol_l+0xc2>
810048bb:	0f b6 06             	movzbl (%esi),%eax
810048be:	3c 78                	cmp    $0x78,%al
810048c0:	74 07                	je     810048c9 <_strtol_l+0xaf>
810048c2:	0f b6 06             	movzbl (%esi),%eax
810048c5:	3c 58                	cmp    $0x58,%al
810048c7:	75 13                	jne    810048dc <_strtol_l+0xc2>
810048c9:	8d 46 01             	lea    0x1(%esi),%eax
810048cc:	0f b6 00             	movzbl (%eax),%eax
810048cf:	0f b6 d8             	movzbl %al,%ebx
810048d2:	83 c6 02             	add    $0x2,%esi
810048d5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
810048dc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810048e0:	75 14                	jne    810048f6 <_strtol_l+0xdc>
810048e2:	83 fb 30             	cmp    $0x30,%ebx
810048e5:	75 07                	jne    810048ee <_strtol_l+0xd4>
810048e7:	b8 08 00 00 00       	mov    $0x8,%eax
810048ec:	eb 05                	jmp    810048f3 <_strtol_l+0xd9>
810048ee:	b8 0a 00 00 00       	mov    $0xa,%eax
810048f3:	89 45 14             	mov    %eax,0x14(%ebp)
810048f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048fa:	74 07                	je     81004903 <_strtol_l+0xe9>
810048fc:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004901:	eb 05                	jmp    81004908 <_strtol_l+0xee>
81004903:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004908:	89 c7                	mov    %eax,%edi
8100490a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100490d:	89 f8                	mov    %edi,%eax
8100490f:	ba 00 00 00 00       	mov    $0x0,%edx
81004914:	f7 f1                	div    %ecx
81004916:	89 d0                	mov    %edx,%eax
81004918:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100491b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100491e:	89 f8                	mov    %edi,%eax
81004920:	ba 00 00 00 00       	mov    $0x0,%edx
81004925:	f7 f1                	div    %ecx
81004927:	89 c2                	mov    %eax,%edx
81004929:	bf 00 00 00 00       	mov    $0x0,%edi
8100492e:	b9 00 00 00 00       	mov    $0x0,%ecx
81004933:	83 fb 2f             	cmp    $0x2f,%ebx
81004936:	7e 0a                	jle    81004942 <_strtol_l+0x128>
81004938:	83 fb 39             	cmp    $0x39,%ebx
8100493b:	7f 05                	jg     81004942 <_strtol_l+0x128>
8100493d:	83 eb 30             	sub    $0x30,%ebx
81004940:	eb 1c                	jmp    8100495e <_strtol_l+0x144>
81004942:	83 fb 40             	cmp    $0x40,%ebx
81004945:	7e 0a                	jle    81004951 <_strtol_l+0x137>
81004947:	83 fb 5a             	cmp    $0x5a,%ebx
8100494a:	7f 05                	jg     81004951 <_strtol_l+0x137>
8100494c:	83 eb 37             	sub    $0x37,%ebx
8100494f:	eb 0d                	jmp    8100495e <_strtol_l+0x144>
81004951:	83 fb 60             	cmp    $0x60,%ebx
81004954:	7e 46                	jle    8100499c <_strtol_l+0x182>
81004956:	83 fb 7a             	cmp    $0x7a,%ebx
81004959:	7f 41                	jg     8100499c <_strtol_l+0x182>
8100495b:	83 eb 57             	sub    $0x57,%ebx
8100495e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81004961:	7d 38                	jge    8100499b <_strtol_l+0x181>
81004963:	89 c8                	mov    %ecx,%eax
81004965:	85 c0                	test   %eax,%eax
81004967:	78 0f                	js     81004978 <_strtol_l+0x15e>
81004969:	89 d0                	mov    %edx,%eax
8100496b:	39 c7                	cmp    %eax,%edi
8100496d:	77 09                	ja     81004978 <_strtol_l+0x15e>
8100496f:	39 c7                	cmp    %eax,%edi
81004971:	75 0c                	jne    8100497f <_strtol_l+0x165>
81004973:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81004976:	7e 07                	jle    8100497f <_strtol_l+0x165>
81004978:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100497d:	eb 0f                	jmp    8100498e <_strtol_l+0x174>
8100497f:	b9 01 00 00 00       	mov    $0x1,%ecx
81004984:	8b 45 14             	mov    0x14(%ebp),%eax
81004987:	0f af f8             	imul   %eax,%edi
8100498a:	89 d8                	mov    %ebx,%eax
8100498c:	01 c7                	add    %eax,%edi
8100498e:	89 f0                	mov    %esi,%eax
81004990:	8d 70 01             	lea    0x1(%eax),%esi
81004993:	0f b6 00             	movzbl (%eax),%eax
81004996:	0f b6 d8             	movzbl %al,%ebx
81004999:	eb 98                	jmp    81004933 <_strtol_l+0x119>
8100499b:	90                   	nop
8100499c:	89 c8                	mov    %ecx,%eax
8100499e:	85 c0                	test   %eax,%eax
810049a0:	79 1f                	jns    810049c1 <_strtol_l+0x1a7>
810049a2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810049a6:	74 07                	je     810049af <_strtol_l+0x195>
810049a8:	b8 00 00 00 80       	mov    $0x80000000,%eax
810049ad:	eb 05                	jmp    810049b4 <_strtol_l+0x19a>
810049af:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810049b4:	89 c7                	mov    %eax,%edi
810049b6:	8b 45 08             	mov    0x8(%ebp),%eax
810049b9:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
810049bf:	eb 08                	jmp    810049c9 <_strtol_l+0x1af>
810049c1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810049c5:	74 02                	je     810049c9 <_strtol_l+0x1af>
810049c7:	f7 df                	neg    %edi
810049c9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810049cd:	74 13                	je     810049e2 <_strtol_l+0x1c8>
810049cf:	89 c8                	mov    %ecx,%eax
810049d1:	85 c0                	test   %eax,%eax
810049d3:	74 05                	je     810049da <_strtol_l+0x1c0>
810049d5:	8d 46 ff             	lea    -0x1(%esi),%eax
810049d8:	eb 03                	jmp    810049dd <_strtol_l+0x1c3>
810049da:	8b 45 0c             	mov    0xc(%ebp),%eax
810049dd:	8b 55 10             	mov    0x10(%ebp),%edx
810049e0:	89 02                	mov    %eax,(%edx)
810049e2:	89 f8                	mov    %edi,%eax
810049e4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810049e7:	5b                   	pop    %ebx
810049e8:	5e                   	pop    %esi
810049e9:	5f                   	pop    %edi
810049ea:	5d                   	pop    %ebp
810049eb:	c3                   	ret    

810049ec <_strtol_r>:
810049ec:	55                   	push   %ebp
810049ed:	89 e5                	mov    %esp,%ebp
810049ef:	83 ec 08             	sub    $0x8,%esp
810049f2:	e8 19 fe ff ff       	call   81004810 <__get_current_locale>
810049f7:	83 ec 0c             	sub    $0xc,%esp
810049fa:	50                   	push   %eax
810049fb:	ff 75 14             	push   0x14(%ebp)
810049fe:	ff 75 10             	push   0x10(%ebp)
81004a01:	ff 75 0c             	push   0xc(%ebp)
81004a04:	ff 75 08             	push   0x8(%ebp)
81004a07:	e8 0e fe ff ff       	call   8100481a <_strtol_l>
81004a0c:	83 c4 20             	add    $0x20,%esp
81004a0f:	c9                   	leave  
81004a10:	c3                   	ret    

81004a11 <strtol_l>:
81004a11:	55                   	push   %ebp
81004a12:	89 e5                	mov    %esp,%ebp
81004a14:	83 ec 08             	sub    $0x8,%esp
81004a17:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004a1c:	83 ec 0c             	sub    $0xc,%esp
81004a1f:	ff 75 14             	push   0x14(%ebp)
81004a22:	ff 75 10             	push   0x10(%ebp)
81004a25:	ff 75 0c             	push   0xc(%ebp)
81004a28:	ff 75 08             	push   0x8(%ebp)
81004a2b:	50                   	push   %eax
81004a2c:	e8 e9 fd ff ff       	call   8100481a <_strtol_l>
81004a31:	83 c4 20             	add    $0x20,%esp
81004a34:	c9                   	leave  
81004a35:	c3                   	ret    

81004a36 <strtol>:
81004a36:	55                   	push   %ebp
81004a37:	89 e5                	mov    %esp,%ebp
81004a39:	83 ec 08             	sub    $0x8,%esp
81004a3c:	e8 cf fd ff ff       	call   81004810 <__get_current_locale>
81004a41:	8b 15 a4 75 00 81    	mov    0x810075a4,%edx
81004a47:	83 ec 0c             	sub    $0xc,%esp
81004a4a:	50                   	push   %eax
81004a4b:	ff 75 10             	push   0x10(%ebp)
81004a4e:	ff 75 0c             	push   0xc(%ebp)
81004a51:	ff 75 08             	push   0x8(%ebp)
81004a54:	52                   	push   %edx
81004a55:	e8 c0 fd ff ff       	call   8100481a <_strtol_l>
81004a5a:	83 c4 20             	add    $0x20,%esp
81004a5d:	c9                   	leave  
81004a5e:	c3                   	ret    

81004a5f <__swbuf_r>:
81004a5f:	55                   	push   %ebp
81004a60:	89 e5                	mov    %esp,%ebp
81004a62:	57                   	push   %edi
81004a63:	56                   	push   %esi
81004a64:	53                   	push   %ebx
81004a65:	83 ec 1c             	sub    $0x1c,%esp
81004a68:	8b 7d 0c             	mov    0xc(%ebp),%edi
81004a6b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004a6e:	8b 45 08             	mov    0x8(%ebp),%eax
81004a71:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004a74:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004a78:	74 18                	je     81004a92 <__swbuf_r+0x33>
81004a7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004a7d:	8b 40 38             	mov    0x38(%eax),%eax
81004a80:	85 c0                	test   %eax,%eax
81004a82:	75 0e                	jne    81004a92 <__swbuf_r+0x33>
81004a84:	83 ec 0c             	sub    $0xc,%esp
81004a87:	ff 75 e4             	push   -0x1c(%ebp)
81004a8a:	e8 1d c7 ff ff       	call   810011ac <__sinit>
81004a8f:	83 c4 10             	add    $0x10,%esp
81004a92:	8b 43 18             	mov    0x18(%ebx),%eax
81004a95:	89 43 08             	mov    %eax,0x8(%ebx)
81004a98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a9c:	98                   	cwtl   
81004a9d:	83 e0 08             	and    $0x8,%eax
81004aa0:	85 c0                	test   %eax,%eax
81004aa2:	74 07                	je     81004aab <__swbuf_r+0x4c>
81004aa4:	8b 43 10             	mov    0x10(%ebx),%eax
81004aa7:	85 c0                	test   %eax,%eax
81004aa9:	75 1d                	jne    81004ac8 <__swbuf_r+0x69>
81004aab:	83 ec 08             	sub    $0x8,%esp
81004aae:	53                   	push   %ebx
81004aaf:	ff 75 08             	push   0x8(%ebp)
81004ab2:	e8 21 01 00 00       	call   81004bd8 <__swsetup_r>
81004ab7:	83 c4 10             	add    $0x10,%esp
81004aba:	85 c0                	test   %eax,%eax
81004abc:	74 0a                	je     81004ac8 <__swbuf_r+0x69>
81004abe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ac3:	e9 a1 00 00 00       	jmp    81004b69 <__swbuf_r+0x10a>
81004ac8:	89 f8                	mov    %edi,%eax
81004aca:	0f b6 f8             	movzbl %al,%edi
81004acd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ad1:	98                   	cwtl   
81004ad2:	25 00 20 00 00       	and    $0x2000,%eax
81004ad7:	85 c0                	test   %eax,%eax
81004ad9:	75 14                	jne    81004aef <__swbuf_r+0x90>
81004adb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004adf:	80 cc 20             	or     $0x20,%ah
81004ae2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004ae6:	8b 43 64             	mov    0x64(%ebx),%eax
81004ae9:	80 e4 df             	and    $0xdf,%ah
81004aec:	89 43 64             	mov    %eax,0x64(%ebx)
81004aef:	8b 03                	mov    (%ebx),%eax
81004af1:	8b 53 10             	mov    0x10(%ebx),%edx
81004af4:	29 d0                	sub    %edx,%eax
81004af6:	89 c6                	mov    %eax,%esi
81004af8:	8b 43 14             	mov    0x14(%ebx),%eax
81004afb:	39 c6                	cmp    %eax,%esi
81004afd:	7c 1f                	jl     81004b1e <__swbuf_r+0xbf>
81004aff:	83 ec 08             	sub    $0x8,%esp
81004b02:	53                   	push   %ebx
81004b03:	ff 75 08             	push   0x8(%ebp)
81004b06:	e8 9e c1 ff ff       	call   81000ca9 <_fflush_r>
81004b0b:	83 c4 10             	add    $0x10,%esp
81004b0e:	85 c0                	test   %eax,%eax
81004b10:	74 07                	je     81004b19 <__swbuf_r+0xba>
81004b12:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b17:	eb 50                	jmp    81004b69 <__swbuf_r+0x10a>
81004b19:	be 00 00 00 00       	mov    $0x0,%esi
81004b1e:	8b 43 08             	mov    0x8(%ebx),%eax
81004b21:	83 e8 01             	sub    $0x1,%eax
81004b24:	89 43 08             	mov    %eax,0x8(%ebx)
81004b27:	8b 03                	mov    (%ebx),%eax
81004b29:	8d 50 01             	lea    0x1(%eax),%edx
81004b2c:	89 13                	mov    %edx,(%ebx)
81004b2e:	89 fa                	mov    %edi,%edx
81004b30:	88 10                	mov    %dl,(%eax)
81004b32:	83 c6 01             	add    $0x1,%esi
81004b35:	8b 43 14             	mov    0x14(%ebx),%eax
81004b38:	39 c6                	cmp    %eax,%esi
81004b3a:	74 11                	je     81004b4d <__swbuf_r+0xee>
81004b3c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b40:	98                   	cwtl   
81004b41:	83 e0 01             	and    $0x1,%eax
81004b44:	85 c0                	test   %eax,%eax
81004b46:	74 1f                	je     81004b67 <__swbuf_r+0x108>
81004b48:	83 ff 0a             	cmp    $0xa,%edi
81004b4b:	75 1a                	jne    81004b67 <__swbuf_r+0x108>
81004b4d:	83 ec 08             	sub    $0x8,%esp
81004b50:	53                   	push   %ebx
81004b51:	ff 75 08             	push   0x8(%ebp)
81004b54:	e8 50 c1 ff ff       	call   81000ca9 <_fflush_r>
81004b59:	83 c4 10             	add    $0x10,%esp
81004b5c:	85 c0                	test   %eax,%eax
81004b5e:	74 07                	je     81004b67 <__swbuf_r+0x108>
81004b60:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b65:	eb 02                	jmp    81004b69 <__swbuf_r+0x10a>
81004b67:	89 f8                	mov    %edi,%eax
81004b69:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b6c:	5b                   	pop    %ebx
81004b6d:	5e                   	pop    %esi
81004b6e:	5f                   	pop    %edi
81004b6f:	5d                   	pop    %ebp
81004b70:	c3                   	ret    

81004b71 <__swbuf>:
81004b71:	55                   	push   %ebp
81004b72:	89 e5                	mov    %esp,%ebp
81004b74:	83 ec 08             	sub    $0x8,%esp
81004b77:	8b 55 08             	mov    0x8(%ebp),%edx
81004b7a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004b7d:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004b82:	83 ec 04             	sub    $0x4,%esp
81004b85:	51                   	push   %ecx
81004b86:	52                   	push   %edx
81004b87:	50                   	push   %eax
81004b88:	e8 d2 fe ff ff       	call   81004a5f <__swbuf_r>
81004b8d:	83 c4 10             	add    $0x10,%esp
81004b90:	c9                   	leave  
81004b91:	c3                   	ret    

81004b92 <_write_r>:
81004b92:	55                   	push   %ebp
81004b93:	89 e5                	mov    %esp,%ebp
81004b95:	83 ec 18             	sub    $0x18,%esp
81004b98:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004b9f:	00 00 00 
81004ba2:	83 ec 04             	sub    $0x4,%esp
81004ba5:	ff 75 14             	push   0x14(%ebp)
81004ba8:	ff 75 10             	push   0x10(%ebp)
81004bab:	ff 75 0c             	push   0xc(%ebp)
81004bae:	e8 33 bc ff ff       	call   810007e6 <write>
81004bb3:	83 c4 10             	add    $0x10,%esp
81004bb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bb9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004bbd:	75 14                	jne    81004bd3 <_write_r+0x41>
81004bbf:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81004bc4:	85 c0                	test   %eax,%eax
81004bc6:	74 0b                	je     81004bd3 <_write_r+0x41>
81004bc8:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81004bce:	8b 45 08             	mov    0x8(%ebp),%eax
81004bd1:	89 10                	mov    %edx,(%eax)
81004bd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bd6:	c9                   	leave  
81004bd7:	c3                   	ret    

81004bd8 <__swsetup_r>:
81004bd8:	55                   	push   %ebp
81004bd9:	89 e5                	mov    %esp,%ebp
81004bdb:	53                   	push   %ebx
81004bdc:	83 ec 14             	sub    $0x14,%esp
81004bdf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004be2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004be7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004bee:	74 18                	je     81004c08 <__swsetup_r+0x30>
81004bf0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bf3:	8b 40 38             	mov    0x38(%eax),%eax
81004bf6:	85 c0                	test   %eax,%eax
81004bf8:	75 0e                	jne    81004c08 <__swsetup_r+0x30>
81004bfa:	83 ec 0c             	sub    $0xc,%esp
81004bfd:	ff 75 f4             	push   -0xc(%ebp)
81004c00:	e8 a7 c5 ff ff       	call   810011ac <__sinit>
81004c05:	83 c4 10             	add    $0x10,%esp
81004c08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c0c:	98                   	cwtl   
81004c0d:	83 e0 08             	and    $0x8,%eax
81004c10:	85 c0                	test   %eax,%eax
81004c12:	0f 85 82 00 00 00    	jne    81004c9a <__swsetup_r+0xc2>
81004c18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c1c:	98                   	cwtl   
81004c1d:	83 e0 10             	and    $0x10,%eax
81004c20:	85 c0                	test   %eax,%eax
81004c22:	75 1e                	jne    81004c42 <__swsetup_r+0x6a>
81004c24:	8b 45 08             	mov    0x8(%ebp),%eax
81004c27:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004c2d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c31:	83 c8 40             	or     $0x40,%eax
81004c34:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c3d:	e9 ec 00 00 00       	jmp    81004d2e <__swsetup_r+0x156>
81004c42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c46:	98                   	cwtl   
81004c47:	83 e0 04             	and    $0x4,%eax
81004c4a:	85 c0                	test   %eax,%eax
81004c4c:	74 41                	je     81004c8f <__swsetup_r+0xb7>
81004c4e:	8b 43 30             	mov    0x30(%ebx),%eax
81004c51:	85 c0                	test   %eax,%eax
81004c53:	74 23                	je     81004c78 <__swsetup_r+0xa0>
81004c55:	8b 53 30             	mov    0x30(%ebx),%edx
81004c58:	8d 43 40             	lea    0x40(%ebx),%eax
81004c5b:	39 c2                	cmp    %eax,%edx
81004c5d:	74 12                	je     81004c71 <__swsetup_r+0x99>
81004c5f:	8b 43 30             	mov    0x30(%ebx),%eax
81004c62:	83 ec 08             	sub    $0x8,%esp
81004c65:	50                   	push   %eax
81004c66:	ff 75 08             	push   0x8(%ebp)
81004c69:	e8 a0 c6 ff ff       	call   8100130e <_free_r>
81004c6e:	83 c4 10             	add    $0x10,%esp
81004c71:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004c78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c7c:	83 e0 db             	and    $0xffffffdb,%eax
81004c7f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c83:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c8a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c8d:	89 03                	mov    %eax,(%ebx)
81004c8f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c93:	83 c8 08             	or     $0x8,%eax
81004c96:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c9a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c9d:	85 c0                	test   %eax,%eax
81004c9f:	75 2b                	jne    81004ccc <__swsetup_r+0xf4>
81004ca1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ca5:	98                   	cwtl   
81004ca6:	25 00 02 00 00       	and    $0x200,%eax
81004cab:	85 c0                	test   %eax,%eax
81004cad:	74 0e                	je     81004cbd <__swsetup_r+0xe5>
81004caf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cb3:	98                   	cwtl   
81004cb4:	25 80 00 00 00       	and    $0x80,%eax
81004cb9:	85 c0                	test   %eax,%eax
81004cbb:	74 0f                	je     81004ccc <__swsetup_r+0xf4>
81004cbd:	83 ec 08             	sub    $0x8,%esp
81004cc0:	53                   	push   %ebx
81004cc1:	ff 75 08             	push   0x8(%ebp)
81004cc4:	e8 cf 0c 00 00       	call   81005998 <__smakebuf_r>
81004cc9:	83 c4 10             	add    $0x10,%esp
81004ccc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cd0:	98                   	cwtl   
81004cd1:	83 e0 01             	and    $0x1,%eax
81004cd4:	85 c0                	test   %eax,%eax
81004cd6:	74 11                	je     81004ce9 <__swsetup_r+0x111>
81004cd8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004cdf:	8b 43 14             	mov    0x14(%ebx),%eax
81004ce2:	f7 d8                	neg    %eax
81004ce4:	89 43 18             	mov    %eax,0x18(%ebx)
81004ce7:	eb 19                	jmp    81004d02 <__swsetup_r+0x12a>
81004ce9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ced:	98                   	cwtl   
81004cee:	83 e0 02             	and    $0x2,%eax
81004cf1:	85 c0                	test   %eax,%eax
81004cf3:	75 05                	jne    81004cfa <__swsetup_r+0x122>
81004cf5:	8b 43 14             	mov    0x14(%ebx),%eax
81004cf8:	eb 05                	jmp    81004cff <__swsetup_r+0x127>
81004cfa:	b8 00 00 00 00       	mov    $0x0,%eax
81004cff:	89 43 08             	mov    %eax,0x8(%ebx)
81004d02:	8b 43 10             	mov    0x10(%ebx),%eax
81004d05:	85 c0                	test   %eax,%eax
81004d07:	75 20                	jne    81004d29 <__swsetup_r+0x151>
81004d09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d0d:	98                   	cwtl   
81004d0e:	25 80 00 00 00       	and    $0x80,%eax
81004d13:	85 c0                	test   %eax,%eax
81004d15:	74 12                	je     81004d29 <__swsetup_r+0x151>
81004d17:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d1b:	83 c8 40             	or     $0x40,%eax
81004d1e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004d22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d27:	eb 05                	jmp    81004d2e <__swsetup_r+0x156>
81004d29:	b8 00 00 00 00       	mov    $0x0,%eax
81004d2e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004d31:	c9                   	leave  
81004d32:	c3                   	ret    

81004d33 <__call_exitprocs>:
81004d33:	55                   	push   %ebp
81004d34:	89 e5                	mov    %esp,%ebp
81004d36:	57                   	push   %edi
81004d37:	56                   	push   %esi
81004d38:	53                   	push   %ebx
81004d39:	83 ec 1c             	sub    $0x1c,%esp
81004d3c:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81004d41:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004d47:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81004d4c:	05 48 01 00 00       	add    $0x148,%eax
81004d51:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004d54:	90                   	nop
81004d55:	85 db                	test   %ebx,%ebx
81004d57:	0f 84 e1 00 00 00    	je     81004e3e <__call_exitprocs+0x10b>
81004d5d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004d63:	8b 43 04             	mov    0x4(%ebx),%eax
81004d66:	8d 70 ff             	lea    -0x1(%eax),%esi
81004d69:	e9 c6 00 00 00       	jmp    81004e34 <__call_exitprocs+0x101>
81004d6e:	b8 01 00 00 00       	mov    $0x1,%eax
81004d73:	89 f1                	mov    %esi,%ecx
81004d75:	d3 e0                	shl    %cl,%eax
81004d77:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004d7a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004d7e:	74 17                	je     81004d97 <__call_exitprocs+0x64>
81004d80:	85 ff                	test   %edi,%edi
81004d82:	0f 84 a5 00 00 00    	je     81004e2d <__call_exitprocs+0xfa>
81004d88:	8d 46 20             	lea    0x20(%esi),%eax
81004d8b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004d8e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004d91:	0f 85 96 00 00 00    	jne    81004e2d <__call_exitprocs+0xfa>
81004d97:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004d9b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004d9e:	8b 43 04             	mov    0x4(%ebx),%eax
81004da1:	83 e8 01             	sub    $0x1,%eax
81004da4:	39 c6                	cmp    %eax,%esi
81004da6:	75 0b                	jne    81004db3 <__call_exitprocs+0x80>
81004da8:	8b 43 04             	mov    0x4(%ebx),%eax
81004dab:	83 e8 01             	sub    $0x1,%eax
81004dae:	89 43 04             	mov    %eax,0x4(%ebx)
81004db1:	eb 08                	jmp    81004dbb <__call_exitprocs+0x88>
81004db3:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004dba:	00 
81004dbb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004dbf:	74 6f                	je     81004e30 <__call_exitprocs+0xfd>
81004dc1:	8b 43 04             	mov    0x4(%ebx),%eax
81004dc4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004dc7:	85 ff                	test   %edi,%edi
81004dc9:	74 0f                	je     81004dda <__call_exitprocs+0xa7>
81004dcb:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004dd1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004dd4:	21 d0                	and    %edx,%eax
81004dd6:	85 c0                	test   %eax,%eax
81004dd8:	75 07                	jne    81004de1 <__call_exitprocs+0xae>
81004dda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004ddd:	ff d0                	call   *%eax
81004ddf:	eb 32                	jmp    81004e13 <__call_exitprocs+0xe0>
81004de1:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004de7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004dea:	21 d0                	and    %edx,%eax
81004dec:	85 c0                	test   %eax,%eax
81004dee:	75 14                	jne    81004e04 <__call_exitprocs+0xd1>
81004df0:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004df3:	83 ec 08             	sub    $0x8,%esp
81004df6:	50                   	push   %eax
81004df7:	ff 75 08             	push   0x8(%ebp)
81004dfa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004dfd:	ff d0                	call   *%eax
81004dff:	83 c4 10             	add    $0x10,%esp
81004e02:	eb 0f                	jmp    81004e13 <__call_exitprocs+0xe0>
81004e04:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004e07:	83 ec 0c             	sub    $0xc,%esp
81004e0a:	50                   	push   %eax
81004e0b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004e0e:	ff d0                	call   *%eax
81004e10:	83 c4 10             	add    $0x10,%esp
81004e13:	8b 43 04             	mov    0x4(%ebx),%eax
81004e16:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004e19:	0f 85 1d ff ff ff    	jne    81004d3c <__call_exitprocs+0x9>
81004e1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004e22:	8b 00                	mov    (%eax),%eax
81004e24:	39 c3                	cmp    %eax,%ebx
81004e26:	74 09                	je     81004e31 <__call_exitprocs+0xfe>
81004e28:	e9 0f ff ff ff       	jmp    81004d3c <__call_exitprocs+0x9>
81004e2d:	90                   	nop
81004e2e:	eb 01                	jmp    81004e31 <__call_exitprocs+0xfe>
81004e30:	90                   	nop
81004e31:	83 ee 01             	sub    $0x1,%esi
81004e34:	85 f6                	test   %esi,%esi
81004e36:	0f 89 32 ff ff ff    	jns    81004d6e <__call_exitprocs+0x3b>
81004e3c:	eb 01                	jmp    81004e3f <__call_exitprocs+0x10c>
81004e3e:	90                   	nop
81004e3f:	90                   	nop
81004e40:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004e43:	5b                   	pop    %ebx
81004e44:	5e                   	pop    %esi
81004e45:	5f                   	pop    %edi
81004e46:	5d                   	pop    %ebp
81004e47:	c3                   	ret    

81004e48 <_close_r>:
81004e48:	55                   	push   %ebp
81004e49:	89 e5                	mov    %esp,%ebp
81004e4b:	83 ec 18             	sub    $0x18,%esp
81004e4e:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004e55:	00 00 00 
81004e58:	83 ec 0c             	sub    $0xc,%esp
81004e5b:	ff 75 0c             	push   0xc(%ebp)
81004e5e:	e8 b0 b9 ff ff       	call   81000813 <close>
81004e63:	83 c4 10             	add    $0x10,%esp
81004e66:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e69:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004e6d:	75 14                	jne    81004e83 <_close_r+0x3b>
81004e6f:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81004e74:	85 c0                	test   %eax,%eax
81004e76:	74 0b                	je     81004e83 <_close_r+0x3b>
81004e78:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81004e7e:	8b 45 08             	mov    0x8(%ebp),%eax
81004e81:	89 10                	mov    %edx,(%eax)
81004e83:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e86:	c9                   	leave  
81004e87:	c3                   	ret    

81004e88 <__errno>:
81004e88:	55                   	push   %ebp
81004e89:	89 e5                	mov    %esp,%ebp
81004e8b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004e90:	5d                   	pop    %ebp
81004e91:	c3                   	ret    

81004e92 <_fclose_r>:
81004e92:	55                   	push   %ebp
81004e93:	89 e5                	mov    %esp,%ebp
81004e95:	53                   	push   %ebx
81004e96:	83 ec 14             	sub    $0x14,%esp
81004e99:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004e9c:	85 db                	test   %ebx,%ebx
81004e9e:	75 0a                	jne    81004eaa <_fclose_r+0x18>
81004ea0:	b8 00 00 00 00       	mov    $0x0,%eax
81004ea5:	e9 ea 00 00 00       	jmp    81004f94 <_fclose_r+0x102>
81004eaa:	8b 45 08             	mov    0x8(%ebp),%eax
81004ead:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004eb0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004eb4:	74 18                	je     81004ece <_fclose_r+0x3c>
81004eb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004eb9:	8b 40 38             	mov    0x38(%eax),%eax
81004ebc:	85 c0                	test   %eax,%eax
81004ebe:	75 0e                	jne    81004ece <_fclose_r+0x3c>
81004ec0:	83 ec 0c             	sub    $0xc,%esp
81004ec3:	ff 75 f0             	push   -0x10(%ebp)
81004ec6:	e8 e1 c2 ff ff       	call   810011ac <__sinit>
81004ecb:	83 c4 10             	add    $0x10,%esp
81004ece:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ed2:	66 85 c0             	test   %ax,%ax
81004ed5:	75 0a                	jne    81004ee1 <_fclose_r+0x4f>
81004ed7:	b8 00 00 00 00       	mov    $0x0,%eax
81004edc:	e9 b3 00 00 00       	jmp    81004f94 <_fclose_r+0x102>
81004ee1:	83 ec 08             	sub    $0x8,%esp
81004ee4:	53                   	push   %ebx
81004ee5:	ff 75 08             	push   0x8(%ebp)
81004ee8:	e8 96 bb ff ff       	call   81000a83 <__sflush_r>
81004eed:	83 c4 10             	add    $0x10,%esp
81004ef0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ef3:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004ef6:	85 c0                	test   %eax,%eax
81004ef8:	74 1d                	je     81004f17 <_fclose_r+0x85>
81004efa:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004efd:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004f00:	83 ec 08             	sub    $0x8,%esp
81004f03:	52                   	push   %edx
81004f04:	ff 75 08             	push   0x8(%ebp)
81004f07:	ff d0                	call   *%eax
81004f09:	83 c4 10             	add    $0x10,%esp
81004f0c:	85 c0                	test   %eax,%eax
81004f0e:	79 07                	jns    81004f17 <_fclose_r+0x85>
81004f10:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004f17:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f1b:	98                   	cwtl   
81004f1c:	25 80 00 00 00       	and    $0x80,%eax
81004f21:	85 c0                	test   %eax,%eax
81004f23:	74 12                	je     81004f37 <_fclose_r+0xa5>
81004f25:	8b 43 10             	mov    0x10(%ebx),%eax
81004f28:	83 ec 08             	sub    $0x8,%esp
81004f2b:	50                   	push   %eax
81004f2c:	ff 75 08             	push   0x8(%ebp)
81004f2f:	e8 da c3 ff ff       	call   8100130e <_free_r>
81004f34:	83 c4 10             	add    $0x10,%esp
81004f37:	8b 43 30             	mov    0x30(%ebx),%eax
81004f3a:	85 c0                	test   %eax,%eax
81004f3c:	74 23                	je     81004f61 <_fclose_r+0xcf>
81004f3e:	8b 53 30             	mov    0x30(%ebx),%edx
81004f41:	8d 43 40             	lea    0x40(%ebx),%eax
81004f44:	39 c2                	cmp    %eax,%edx
81004f46:	74 12                	je     81004f5a <_fclose_r+0xc8>
81004f48:	8b 43 30             	mov    0x30(%ebx),%eax
81004f4b:	83 ec 08             	sub    $0x8,%esp
81004f4e:	50                   	push   %eax
81004f4f:	ff 75 08             	push   0x8(%ebp)
81004f52:	e8 b7 c3 ff ff       	call   8100130e <_free_r>
81004f57:	83 c4 10             	add    $0x10,%esp
81004f5a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004f61:	8b 43 44             	mov    0x44(%ebx),%eax
81004f64:	85 c0                	test   %eax,%eax
81004f66:	74 19                	je     81004f81 <_fclose_r+0xef>
81004f68:	8b 43 44             	mov    0x44(%ebx),%eax
81004f6b:	83 ec 08             	sub    $0x8,%esp
81004f6e:	50                   	push   %eax
81004f6f:	ff 75 08             	push   0x8(%ebp)
81004f72:	e8 97 c3 ff ff       	call   8100130e <_free_r>
81004f77:	83 c4 10             	add    $0x10,%esp
81004f7a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004f81:	e8 bf c2 ff ff       	call   81001245 <__sfp_lock_acquire>
81004f86:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004f8c:	e8 ba c2 ff ff       	call   8100124b <__sfp_lock_release>
81004f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f94:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004f97:	c9                   	leave  
81004f98:	c3                   	ret    

81004f99 <fclose>:
81004f99:	55                   	push   %ebp
81004f9a:	89 e5                	mov    %esp,%ebp
81004f9c:	83 ec 08             	sub    $0x8,%esp
81004f9f:	8b 55 08             	mov    0x8(%ebp),%edx
81004fa2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004fa7:	83 ec 08             	sub    $0x8,%esp
81004faa:	52                   	push   %edx
81004fab:	50                   	push   %eax
81004fac:	e8 e1 fe ff ff       	call   81004e92 <_fclose_r>
81004fb1:	83 c4 10             	add    $0x10,%esp
81004fb4:	c9                   	leave  
81004fb5:	c3                   	ret    

81004fb6 <_fputc_r>:
81004fb6:	55                   	push   %ebp
81004fb7:	89 e5                	mov    %esp,%ebp
81004fb9:	83 ec 18             	sub    $0x18,%esp
81004fbc:	8b 45 08             	mov    0x8(%ebp),%eax
81004fbf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004fc2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004fc6:	74 18                	je     81004fe0 <_fputc_r+0x2a>
81004fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004fcb:	8b 40 38             	mov    0x38(%eax),%eax
81004fce:	85 c0                	test   %eax,%eax
81004fd0:	75 0e                	jne    81004fe0 <_fputc_r+0x2a>
81004fd2:	83 ec 0c             	sub    $0xc,%esp
81004fd5:	ff 75 f4             	push   -0xc(%ebp)
81004fd8:	e8 cf c1 ff ff       	call   810011ac <__sinit>
81004fdd:	83 c4 10             	add    $0x10,%esp
81004fe0:	83 ec 04             	sub    $0x4,%esp
81004fe3:	ff 75 10             	push   0x10(%ebp)
81004fe6:	ff 75 0c             	push   0xc(%ebp)
81004fe9:	ff 75 08             	push   0x8(%ebp)
81004fec:	e8 b2 0c 00 00       	call   81005ca3 <_putc_r>
81004ff1:	83 c4 10             	add    $0x10,%esp
81004ff4:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004ff7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ffa:	c9                   	leave  
81004ffb:	c3                   	ret    

81004ffc <fputc>:
81004ffc:	55                   	push   %ebp
81004ffd:	89 e5                	mov    %esp,%ebp
81004fff:	83 ec 18             	sub    $0x18,%esp
81005002:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005007:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100500a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100500d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005010:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005014:	74 18                	je     8100502e <fputc+0x32>
81005016:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005019:	8b 40 38             	mov    0x38(%eax),%eax
8100501c:	85 c0                	test   %eax,%eax
8100501e:	75 0e                	jne    8100502e <fputc+0x32>
81005020:	83 ec 0c             	sub    $0xc,%esp
81005023:	ff 75 f0             	push   -0x10(%ebp)
81005026:	e8 81 c1 ff ff       	call   810011ac <__sinit>
8100502b:	83 c4 10             	add    $0x10,%esp
8100502e:	83 ec 04             	sub    $0x4,%esp
81005031:	ff 75 0c             	push   0xc(%ebp)
81005034:	ff 75 08             	push   0x8(%ebp)
81005037:	ff 75 f4             	push   -0xc(%ebp)
8100503a:	e8 64 0c 00 00       	call   81005ca3 <_putc_r>
8100503f:	83 c4 10             	add    $0x10,%esp
81005042:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005045:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005048:	c9                   	leave  
81005049:	c3                   	ret    

8100504a <_fputs_r>:
8100504a:	55                   	push   %ebp
8100504b:	89 e5                	mov    %esp,%ebp
8100504d:	83 ec 28             	sub    $0x28,%esp
81005050:	8b 45 0c             	mov    0xc(%ebp),%eax
81005053:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005056:	83 ec 0c             	sub    $0xc,%esp
81005059:	ff 75 0c             	push   0xc(%ebp)
8100505c:	e8 1f f6 ff ff       	call   81004680 <strlen>
81005061:	83 c4 10             	add    $0x10,%esp
81005064:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005067:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100506a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100506d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005070:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005073:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100507a:	8b 45 08             	mov    0x8(%ebp),%eax
8100507d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005080:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005084:	74 18                	je     8100509e <_fputs_r+0x54>
81005086:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005089:	8b 40 38             	mov    0x38(%eax),%eax
8100508c:	85 c0                	test   %eax,%eax
8100508e:	75 0e                	jne    8100509e <_fputs_r+0x54>
81005090:	83 ec 0c             	sub    $0xc,%esp
81005093:	ff 75 f4             	push   -0xc(%ebp)
81005096:	e8 11 c1 ff ff       	call   810011ac <__sinit>
8100509b:	83 c4 10             	add    $0x10,%esp
8100509e:	8b 45 10             	mov    0x10(%ebp),%eax
810050a1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810050a5:	98                   	cwtl   
810050a6:	25 00 20 00 00       	and    $0x2000,%eax
810050ab:	85 c0                	test   %eax,%eax
810050ad:	75 24                	jne    810050d3 <_fputs_r+0x89>
810050af:	8b 45 10             	mov    0x10(%ebp),%eax
810050b2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810050b6:	80 cc 20             	or     $0x20,%ah
810050b9:	89 c2                	mov    %eax,%edx
810050bb:	8b 45 10             	mov    0x10(%ebp),%eax
810050be:	66 89 50 0c          	mov    %dx,0xc(%eax)
810050c2:	8b 45 10             	mov    0x10(%ebp),%eax
810050c5:	8b 40 64             	mov    0x64(%eax),%eax
810050c8:	80 e4 df             	and    $0xdf,%ah
810050cb:	89 c2                	mov    %eax,%edx
810050cd:	8b 45 10             	mov    0x10(%ebp),%eax
810050d0:	89 50 64             	mov    %edx,0x64(%eax)
810050d3:	83 ec 04             	sub    $0x4,%esp
810050d6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810050d9:	50                   	push   %eax
810050da:	ff 75 10             	push   0x10(%ebp)
810050dd:	ff 75 08             	push   0x8(%ebp)
810050e0:	e8 df 01 00 00       	call   810052c4 <__sfvwrite_r>
810050e5:	83 c4 10             	add    $0x10,%esp
810050e8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810050ee:	c9                   	leave  
810050ef:	c3                   	ret    

810050f0 <fputs>:
810050f0:	55                   	push   %ebp
810050f1:	89 e5                	mov    %esp,%ebp
810050f3:	83 ec 08             	sub    $0x8,%esp
810050f6:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810050fb:	83 ec 04             	sub    $0x4,%esp
810050fe:	ff 75 0c             	push   0xc(%ebp)
81005101:	ff 75 08             	push   0x8(%ebp)
81005104:	50                   	push   %eax
81005105:	e8 40 ff ff ff       	call   8100504a <_fputs_r>
8100510a:	83 c4 10             	add    $0x10,%esp
8100510d:	c9                   	leave  
8100510e:	c3                   	ret    

8100510f <__sputc_r>:
8100510f:	55                   	push   %ebp
81005110:	89 e5                	mov    %esp,%ebp
81005112:	83 ec 08             	sub    $0x8,%esp
81005115:	8b 45 10             	mov    0x10(%ebp),%eax
81005118:	8b 40 08             	mov    0x8(%eax),%eax
8100511b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100511e:	8b 45 10             	mov    0x10(%ebp),%eax
81005121:	89 50 08             	mov    %edx,0x8(%eax)
81005124:	8b 45 10             	mov    0x10(%ebp),%eax
81005127:	8b 40 08             	mov    0x8(%eax),%eax
8100512a:	85 c0                	test   %eax,%eax
8100512c:	79 17                	jns    81005145 <__sputc_r+0x36>
8100512e:	8b 45 10             	mov    0x10(%ebp),%eax
81005131:	8b 50 08             	mov    0x8(%eax),%edx
81005134:	8b 45 10             	mov    0x10(%ebp),%eax
81005137:	8b 40 18             	mov    0x18(%eax),%eax
8100513a:	39 c2                	cmp    %eax,%edx
8100513c:	7c 21                	jl     8100515f <__sputc_r+0x50>
8100513e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005141:	3c 0a                	cmp    $0xa,%al
81005143:	74 1a                	je     8100515f <__sputc_r+0x50>
81005145:	8b 45 10             	mov    0x10(%ebp),%eax
81005148:	8b 00                	mov    (%eax),%eax
8100514a:	8d 48 01             	lea    0x1(%eax),%ecx
8100514d:	8b 55 10             	mov    0x10(%ebp),%edx
81005150:	89 0a                	mov    %ecx,(%edx)
81005152:	8b 55 0c             	mov    0xc(%ebp),%edx
81005155:	88 10                	mov    %dl,(%eax)
81005157:	0f b6 00             	movzbl (%eax),%eax
8100515a:	0f b6 c0             	movzbl %al,%eax
8100515d:	eb 14                	jmp    81005173 <__sputc_r+0x64>
8100515f:	83 ec 04             	sub    $0x4,%esp
81005162:	ff 75 10             	push   0x10(%ebp)
81005165:	ff 75 0c             	push   0xc(%ebp)
81005168:	ff 75 08             	push   0x8(%ebp)
8100516b:	e8 ef f8 ff ff       	call   81004a5f <__swbuf_r>
81005170:	83 c4 10             	add    $0x10,%esp
81005173:	c9                   	leave  
81005174:	c3                   	ret    

81005175 <__fputwc>:
81005175:	55                   	push   %ebp
81005176:	89 e5                	mov    %esp,%ebp
81005178:	83 ec 18             	sub    $0x18,%esp
8100517b:	e8 9f 07 00 00       	call   8100591f <__locale_mb_cur_max>
81005180:	83 f8 01             	cmp    $0x1,%eax
81005183:	75 1e                	jne    810051a3 <__fputwc+0x2e>
81005185:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005189:	7e 18                	jle    810051a3 <__fputwc+0x2e>
8100518b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81005192:	7f 0f                	jg     810051a3 <__fputwc+0x2e>
81005194:	8b 45 0c             	mov    0xc(%ebp),%eax
81005197:	88 45 ef             	mov    %al,-0x11(%ebp)
8100519a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810051a1:	eb 3c                	jmp    810051df <__fputwc+0x6a>
810051a3:	8b 45 10             	mov    0x10(%ebp),%eax
810051a6:	83 c0 5c             	add    $0x5c,%eax
810051a9:	50                   	push   %eax
810051aa:	ff 75 0c             	push   0xc(%ebp)
810051ad:	8d 45 ef             	lea    -0x11(%ebp),%eax
810051b0:	50                   	push   %eax
810051b1:	ff 75 08             	push   0x8(%ebp)
810051b4:	e8 36 17 00 00       	call   810068ef <_wcrtomb_r>
810051b9:	83 c4 10             	add    $0x10,%esp
810051bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810051bf:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810051c3:	75 1a                	jne    810051df <__fputwc+0x6a>
810051c5:	8b 45 10             	mov    0x10(%ebp),%eax
810051c8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051cc:	83 c8 40             	or     $0x40,%eax
810051cf:	89 c2                	mov    %eax,%edx
810051d1:	8b 45 10             	mov    0x10(%ebp),%eax
810051d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810051d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051dd:	eb 44                	jmp    81005223 <__fputwc+0xae>
810051df:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810051e6:	eb 30                	jmp    81005218 <__fputwc+0xa3>
810051e8:	8d 55 ef             	lea    -0x11(%ebp),%edx
810051eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051ee:	01 d0                	add    %edx,%eax
810051f0:	0f b6 00             	movzbl (%eax),%eax
810051f3:	0f b6 c0             	movzbl %al,%eax
810051f6:	83 ec 04             	sub    $0x4,%esp
810051f9:	ff 75 10             	push   0x10(%ebp)
810051fc:	50                   	push   %eax
810051fd:	ff 75 08             	push   0x8(%ebp)
81005200:	e8 0a ff ff ff       	call   8100510f <__sputc_r>
81005205:	83 c4 10             	add    $0x10,%esp
81005208:	83 f8 ff             	cmp    $0xffffffff,%eax
8100520b:	75 07                	jne    81005214 <__fputwc+0x9f>
8100520d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005212:	eb 0f                	jmp    81005223 <__fputwc+0xae>
81005214:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005218:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100521b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100521e:	72 c8                	jb     810051e8 <__fputwc+0x73>
81005220:	8b 45 0c             	mov    0xc(%ebp),%eax
81005223:	c9                   	leave  
81005224:	c3                   	ret    

81005225 <_fputwc_r>:
81005225:	55                   	push   %ebp
81005226:	89 e5                	mov    %esp,%ebp
81005228:	83 ec 18             	sub    $0x18,%esp
8100522b:	8b 45 10             	mov    0x10(%ebp),%eax
8100522e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005232:	98                   	cwtl   
81005233:	25 00 20 00 00       	and    $0x2000,%eax
81005238:	85 c0                	test   %eax,%eax
8100523a:	75 24                	jne    81005260 <_fputwc_r+0x3b>
8100523c:	8b 45 10             	mov    0x10(%ebp),%eax
8100523f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005243:	80 cc 20             	or     $0x20,%ah
81005246:	89 c2                	mov    %eax,%edx
81005248:	8b 45 10             	mov    0x10(%ebp),%eax
8100524b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100524f:	8b 45 10             	mov    0x10(%ebp),%eax
81005252:	8b 40 64             	mov    0x64(%eax),%eax
81005255:	80 cc 20             	or     $0x20,%ah
81005258:	89 c2                	mov    %eax,%edx
8100525a:	8b 45 10             	mov    0x10(%ebp),%eax
8100525d:	89 50 64             	mov    %edx,0x64(%eax)
81005260:	83 ec 04             	sub    $0x4,%esp
81005263:	ff 75 10             	push   0x10(%ebp)
81005266:	ff 75 0c             	push   0xc(%ebp)
81005269:	ff 75 08             	push   0x8(%ebp)
8100526c:	e8 04 ff ff ff       	call   81005175 <__fputwc>
81005271:	83 c4 10             	add    $0x10,%esp
81005274:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005277:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100527a:	c9                   	leave  
8100527b:	c3                   	ret    

8100527c <fputwc>:
8100527c:	55                   	push   %ebp
8100527d:	89 e5                	mov    %esp,%ebp
8100527f:	83 ec 18             	sub    $0x18,%esp
81005282:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005287:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100528a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100528d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005290:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005294:	74 18                	je     810052ae <fputwc+0x32>
81005296:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005299:	8b 40 38             	mov    0x38(%eax),%eax
8100529c:	85 c0                	test   %eax,%eax
8100529e:	75 0e                	jne    810052ae <fputwc+0x32>
810052a0:	83 ec 0c             	sub    $0xc,%esp
810052a3:	ff 75 f0             	push   -0x10(%ebp)
810052a6:	e8 01 bf ff ff       	call   810011ac <__sinit>
810052ab:	83 c4 10             	add    $0x10,%esp
810052ae:	83 ec 04             	sub    $0x4,%esp
810052b1:	ff 75 0c             	push   0xc(%ebp)
810052b4:	ff 75 08             	push   0x8(%ebp)
810052b7:	ff 75 f4             	push   -0xc(%ebp)
810052ba:	e8 66 ff ff ff       	call   81005225 <_fputwc_r>
810052bf:	83 c4 10             	add    $0x10,%esp
810052c2:	c9                   	leave  
810052c3:	c3                   	ret    

810052c4 <__sfvwrite_r>:
810052c4:	55                   	push   %ebp
810052c5:	89 e5                	mov    %esp,%ebp
810052c7:	57                   	push   %edi
810052c8:	56                   	push   %esi
810052c9:	53                   	push   %ebx
810052ca:	83 ec 3c             	sub    $0x3c,%esp
810052cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810052d0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810052d7:	8b 45 10             	mov    0x10(%ebp),%eax
810052da:	8b 78 08             	mov    0x8(%eax),%edi
810052dd:	85 ff                	test   %edi,%edi
810052df:	75 0a                	jne    810052eb <__sfvwrite_r+0x27>
810052e1:	b8 00 00 00 00       	mov    $0x0,%eax
810052e6:	e9 6f 04 00 00       	jmp    8100575a <__sfvwrite_r+0x496>
810052eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ef:	98                   	cwtl   
810052f0:	83 e0 08             	and    $0x8,%eax
810052f3:	85 c0                	test   %eax,%eax
810052f5:	74 07                	je     810052fe <__sfvwrite_r+0x3a>
810052f7:	8b 43 10             	mov    0x10(%ebx),%eax
810052fa:	85 c0                	test   %eax,%eax
810052fc:	75 1d                	jne    8100531b <__sfvwrite_r+0x57>
810052fe:	83 ec 08             	sub    $0x8,%esp
81005301:	53                   	push   %ebx
81005302:	ff 75 08             	push   0x8(%ebp)
81005305:	e8 ce f8 ff ff       	call   81004bd8 <__swsetup_r>
8100530a:	83 c4 10             	add    $0x10,%esp
8100530d:	85 c0                	test   %eax,%eax
8100530f:	74 0a                	je     8100531b <__sfvwrite_r+0x57>
81005311:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005316:	e9 3f 04 00 00       	jmp    8100575a <__sfvwrite_r+0x496>
8100531b:	8b 45 10             	mov    0x10(%ebp),%eax
8100531e:	8b 00                	mov    (%eax),%eax
81005320:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005323:	bf 00 00 00 00       	mov    $0x0,%edi
81005328:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100532c:	98                   	cwtl   
8100532d:	83 e0 02             	and    $0x2,%eax
81005330:	85 c0                	test   %eax,%eax
81005332:	74 68                	je     8100539c <__sfvwrite_r+0xd8>
81005334:	eb 11                	jmp    81005347 <__sfvwrite_r+0x83>
81005336:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005339:	8b 08                	mov    (%eax),%ecx
8100533b:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100533e:	8b 78 04             	mov    0x4(%eax),%edi
81005341:	83 c0 08             	add    $0x8,%eax
81005344:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005347:	85 ff                	test   %edi,%edi
81005349:	74 eb                	je     81005336 <__sfvwrite_r+0x72>
8100534b:	8b 4b 24             	mov    0x24(%ebx),%ecx
8100534e:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81005353:	39 c7                	cmp    %eax,%edi
81005355:	0f 46 c7             	cmovbe %edi,%eax
81005358:	89 c2                	mov    %eax,%edx
8100535a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100535d:	52                   	push   %edx
8100535e:	ff 75 c4             	push   -0x3c(%ebp)
81005361:	50                   	push   %eax
81005362:	ff 75 08             	push   0x8(%ebp)
81005365:	ff d1                	call   *%ecx
81005367:	83 c4 10             	add    $0x10,%esp
8100536a:	89 c6                	mov    %eax,%esi
8100536c:	85 f6                	test   %esi,%esi
8100536e:	0f 8e cf 03 00 00    	jle    81005743 <__sfvwrite_r+0x47f>
81005374:	89 f0                	mov    %esi,%eax
81005376:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005379:	89 f0                	mov    %esi,%eax
8100537b:	29 c7                	sub    %eax,%edi
8100537d:	8b 45 10             	mov    0x10(%ebp),%eax
81005380:	8b 40 08             	mov    0x8(%eax),%eax
81005383:	89 f2                	mov    %esi,%edx
81005385:	29 d0                	sub    %edx,%eax
81005387:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100538a:	89 41 08             	mov    %eax,0x8(%ecx)
8100538d:	8b 45 10             	mov    0x10(%ebp),%eax
81005390:	8b 40 08             	mov    0x8(%eax),%eax
81005393:	85 c0                	test   %eax,%eax
81005395:	75 b0                	jne    81005347 <__sfvwrite_r+0x83>
81005397:	e9 a0 03 00 00       	jmp    8100573c <__sfvwrite_r+0x478>
8100539c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053a0:	98                   	cwtl   
810053a1:	83 e0 01             	and    $0x1,%eax
810053a4:	85 c0                	test   %eax,%eax
810053a6:	0f 85 44 02 00 00    	jne    810055f0 <__sfvwrite_r+0x32c>
810053ac:	eb 11                	jmp    810053bf <__sfvwrite_r+0xfb>
810053ae:	8b 45 c0             	mov    -0x40(%ebp),%eax
810053b1:	8b 08                	mov    (%eax),%ecx
810053b3:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810053b6:	8b 78 04             	mov    0x4(%eax),%edi
810053b9:	83 c0 08             	add    $0x8,%eax
810053bc:	89 45 c0             	mov    %eax,-0x40(%ebp)
810053bf:	85 ff                	test   %edi,%edi
810053c1:	74 eb                	je     810053ae <__sfvwrite_r+0xea>
810053c3:	8b 73 08             	mov    0x8(%ebx),%esi
810053c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053ca:	98                   	cwtl   
810053cb:	25 00 02 00 00       	and    $0x200,%eax
810053d0:	85 c0                	test   %eax,%eax
810053d2:	0f 84 4f 01 00 00    	je     81005527 <__sfvwrite_r+0x263>
810053d8:	89 f0                	mov    %esi,%eax
810053da:	39 c7                	cmp    %eax,%edi
810053dc:	0f 82 12 01 00 00    	jb     810054f4 <__sfvwrite_r+0x230>
810053e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053e6:	98                   	cwtl   
810053e7:	25 80 04 00 00       	and    $0x480,%eax
810053ec:	85 c0                	test   %eax,%eax
810053ee:	0f 84 00 01 00 00    	je     810054f4 <__sfvwrite_r+0x230>
810053f4:	8b 03                	mov    (%ebx),%eax
810053f6:	8b 53 10             	mov    0x10(%ebx),%edx
810053f9:	29 d0                	sub    %edx,%eax
810053fb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810053fe:	8b 53 14             	mov    0x14(%ebx),%edx
81005401:	89 d0                	mov    %edx,%eax
81005403:	01 c0                	add    %eax,%eax
81005405:	01 d0                	add    %edx,%eax
81005407:	89 c2                	mov    %eax,%edx
81005409:	c1 ea 1f             	shr    $0x1f,%edx
8100540c:	01 d0                	add    %edx,%eax
8100540e:	d1 f8                	sar    %eax
81005410:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005413:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005416:	01 f8                	add    %edi,%eax
81005418:	8d 50 01             	lea    0x1(%eax),%edx
8100541b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100541e:	39 c2                	cmp    %eax,%edx
81005420:	76 0b                	jbe    8100542d <__sfvwrite_r+0x169>
81005422:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005425:	01 f8                	add    %edi,%eax
81005427:	83 c0 01             	add    $0x1,%eax
8100542a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100542d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005431:	98                   	cwtl   
81005432:	25 00 04 00 00       	and    $0x400,%eax
81005437:	85 c0                	test   %eax,%eax
81005439:	74 4f                	je     8100548a <__sfvwrite_r+0x1c6>
8100543b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100543e:	83 ec 08             	sub    $0x8,%esp
81005441:	50                   	push   %eax
81005442:	ff 75 08             	push   0x8(%ebp)
81005445:	e8 74 d6 ff ff       	call   81002abe <_malloc_r>
8100544a:	83 c4 10             	add    $0x10,%esp
8100544d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005450:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005454:	75 0e                	jne    81005464 <__sfvwrite_r+0x1a0>
81005456:	8b 45 08             	mov    0x8(%ebp),%eax
81005459:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100545f:	e9 e6 02 00 00       	jmp    8100574a <__sfvwrite_r+0x486>
81005464:	8b 55 d0             	mov    -0x30(%ebp),%edx
81005467:	8b 43 10             	mov    0x10(%ebx),%eax
8100546a:	83 ec 04             	sub    $0x4,%esp
8100546d:	52                   	push   %edx
8100546e:	50                   	push   %eax
8100546f:	ff 75 dc             	push   -0x24(%ebp)
81005472:	e8 51 df ff ff       	call   810033c8 <memcpy>
81005477:	83 c4 10             	add    $0x10,%esp
8100547a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100547e:	66 25 7f fb          	and    $0xfb7f,%ax
81005482:	0c 80                	or     $0x80,%al
81005484:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005488:	eb 49                	jmp    810054d3 <__sfvwrite_r+0x20f>
8100548a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100548d:	8b 43 10             	mov    0x10(%ebx),%eax
81005490:	83 ec 04             	sub    $0x4,%esp
81005493:	52                   	push   %edx
81005494:	50                   	push   %eax
81005495:	ff 75 08             	push   0x8(%ebp)
81005498:	e8 ea 08 00 00       	call   81005d87 <_realloc_r>
8100549d:	83 c4 10             	add    $0x10,%esp
810054a0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810054a3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810054a7:	75 2a                	jne    810054d3 <__sfvwrite_r+0x20f>
810054a9:	8b 43 10             	mov    0x10(%ebx),%eax
810054ac:	83 ec 08             	sub    $0x8,%esp
810054af:	50                   	push   %eax
810054b0:	ff 75 08             	push   0x8(%ebp)
810054b3:	e8 56 be ff ff       	call   8100130e <_free_r>
810054b8:	83 c4 10             	add    $0x10,%esp
810054bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054bf:	24 7f                	and    $0x7f,%al
810054c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810054c5:	8b 45 08             	mov    0x8(%ebp),%eax
810054c8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810054ce:	e9 77 02 00 00       	jmp    8100574a <__sfvwrite_r+0x486>
810054d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810054d6:	89 43 10             	mov    %eax,0x10(%ebx)
810054d9:	8b 55 d0             	mov    -0x30(%ebp),%edx
810054dc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810054df:	01 d0                	add    %edx,%eax
810054e1:	89 03                	mov    %eax,(%ebx)
810054e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810054e6:	89 43 14             	mov    %eax,0x14(%ebx)
810054e9:	89 fe                	mov    %edi,%esi
810054eb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810054ee:	2b 45 d0             	sub    -0x30(%ebp),%eax
810054f1:	89 43 08             	mov    %eax,0x8(%ebx)
810054f4:	89 f0                	mov    %esi,%eax
810054f6:	39 c7                	cmp    %eax,%edi
810054f8:	73 02                	jae    810054fc <__sfvwrite_r+0x238>
810054fa:	89 fe                	mov    %edi,%esi
810054fc:	89 f2                	mov    %esi,%edx
810054fe:	8b 03                	mov    (%ebx),%eax
81005500:	83 ec 04             	sub    $0x4,%esp
81005503:	52                   	push   %edx
81005504:	ff 75 c4             	push   -0x3c(%ebp)
81005507:	50                   	push   %eax
81005508:	e8 a3 06 00 00       	call   81005bb0 <memmove>
8100550d:	83 c4 10             	add    $0x10,%esp
81005510:	8b 43 08             	mov    0x8(%ebx),%eax
81005513:	29 f0                	sub    %esi,%eax
81005515:	89 43 08             	mov    %eax,0x8(%ebx)
81005518:	8b 03                	mov    (%ebx),%eax
8100551a:	89 f2                	mov    %esi,%edx
8100551c:	01 d0                	add    %edx,%eax
8100551e:	89 03                	mov    %eax,(%ebx)
81005520:	89 fe                	mov    %edi,%esi
81005522:	e9 9d 00 00 00       	jmp    810055c4 <__sfvwrite_r+0x300>
81005527:	8b 13                	mov    (%ebx),%edx
81005529:	8b 43 10             	mov    0x10(%ebx),%eax
8100552c:	39 c2                	cmp    %eax,%edx
8100552e:	77 07                	ja     81005537 <__sfvwrite_r+0x273>
81005530:	8b 43 14             	mov    0x14(%ebx),%eax
81005533:	39 c7                	cmp    %eax,%edi
81005535:	73 4c                	jae    81005583 <__sfvwrite_r+0x2bf>
81005537:	89 f0                	mov    %esi,%eax
81005539:	39 c7                	cmp    %eax,%edi
8100553b:	0f 46 c7             	cmovbe %edi,%eax
8100553e:	89 c6                	mov    %eax,%esi
81005540:	89 f2                	mov    %esi,%edx
81005542:	8b 03                	mov    (%ebx),%eax
81005544:	83 ec 04             	sub    $0x4,%esp
81005547:	52                   	push   %edx
81005548:	ff 75 c4             	push   -0x3c(%ebp)
8100554b:	50                   	push   %eax
8100554c:	e8 5f 06 00 00       	call   81005bb0 <memmove>
81005551:	83 c4 10             	add    $0x10,%esp
81005554:	8b 43 08             	mov    0x8(%ebx),%eax
81005557:	29 f0                	sub    %esi,%eax
81005559:	89 43 08             	mov    %eax,0x8(%ebx)
8100555c:	8b 03                	mov    (%ebx),%eax
8100555e:	89 f2                	mov    %esi,%edx
81005560:	01 d0                	add    %edx,%eax
81005562:	89 03                	mov    %eax,(%ebx)
81005564:	8b 43 08             	mov    0x8(%ebx),%eax
81005567:	85 c0                	test   %eax,%eax
81005569:	75 58                	jne    810055c3 <__sfvwrite_r+0x2ff>
8100556b:	83 ec 08             	sub    $0x8,%esp
8100556e:	53                   	push   %ebx
8100556f:	ff 75 08             	push   0x8(%ebp)
81005572:	e8 32 b7 ff ff       	call   81000ca9 <_fflush_r>
81005577:	83 c4 10             	add    $0x10,%esp
8100557a:	85 c0                	test   %eax,%eax
8100557c:	74 45                	je     810055c3 <__sfvwrite_r+0x2ff>
8100557e:	e9 c7 01 00 00       	jmp    8100574a <__sfvwrite_r+0x486>
81005583:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005589:	77 04                	ja     8100558f <__sfvwrite_r+0x2cb>
8100558b:	89 f8                	mov    %edi,%eax
8100558d:	eb 05                	jmp    81005594 <__sfvwrite_r+0x2d0>
8100558f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005594:	8b 4b 14             	mov    0x14(%ebx),%ecx
81005597:	99                   	cltd   
81005598:	f7 f9                	idiv   %ecx
8100559a:	89 c2                	mov    %eax,%edx
8100559c:	8b 43 14             	mov    0x14(%ebx),%eax
8100559f:	89 d6                	mov    %edx,%esi
810055a1:	0f af f0             	imul   %eax,%esi
810055a4:	8b 53 24             	mov    0x24(%ebx),%edx
810055a7:	8b 43 1c             	mov    0x1c(%ebx),%eax
810055aa:	56                   	push   %esi
810055ab:	ff 75 c4             	push   -0x3c(%ebp)
810055ae:	50                   	push   %eax
810055af:	ff 75 08             	push   0x8(%ebp)
810055b2:	ff d2                	call   *%edx
810055b4:	83 c4 10             	add    $0x10,%esp
810055b7:	89 c6                	mov    %eax,%esi
810055b9:	85 f6                	test   %esi,%esi
810055bb:	0f 8e 85 01 00 00    	jle    81005746 <__sfvwrite_r+0x482>
810055c1:	eb 01                	jmp    810055c4 <__sfvwrite_r+0x300>
810055c3:	90                   	nop
810055c4:	89 f0                	mov    %esi,%eax
810055c6:	01 45 c4             	add    %eax,-0x3c(%ebp)
810055c9:	89 f0                	mov    %esi,%eax
810055cb:	29 c7                	sub    %eax,%edi
810055cd:	8b 45 10             	mov    0x10(%ebp),%eax
810055d0:	8b 40 08             	mov    0x8(%eax),%eax
810055d3:	89 f2                	mov    %esi,%edx
810055d5:	29 d0                	sub    %edx,%eax
810055d7:	8b 4d 10             	mov    0x10(%ebp),%ecx
810055da:	89 41 08             	mov    %eax,0x8(%ecx)
810055dd:	8b 45 10             	mov    0x10(%ebp),%eax
810055e0:	8b 40 08             	mov    0x8(%eax),%eax
810055e3:	85 c0                	test   %eax,%eax
810055e5:	0f 85 d4 fd ff ff    	jne    810053bf <__sfvwrite_r+0xfb>
810055eb:	e9 4c 01 00 00       	jmp    8100573c <__sfvwrite_r+0x478>
810055f0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810055f7:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810055fe:	eb 18                	jmp    81005618 <__sfvwrite_r+0x354>
81005600:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005607:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100560a:	8b 08                	mov    (%eax),%ecx
8100560c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100560f:	8b 78 04             	mov    0x4(%eax),%edi
81005612:	83 c0 08             	add    $0x8,%eax
81005615:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005618:	85 ff                	test   %edi,%edi
8100561a:	74 e4                	je     81005600 <__sfvwrite_r+0x33c>
8100561c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005620:	75 32                	jne    81005654 <__sfvwrite_r+0x390>
81005622:	83 ec 04             	sub    $0x4,%esp
81005625:	57                   	push   %edi
81005626:	6a 0a                	push   $0xa
81005628:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8100562b:	56                   	push   %esi
8100562c:	e8 af dc ff ff       	call   810032e0 <memchr>
81005631:	83 c4 10             	add    $0x10,%esp
81005634:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005637:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100563b:	74 0a                	je     81005647 <__sfvwrite_r+0x383>
8100563d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005640:	83 c0 01             	add    $0x1,%eax
81005643:	29 f0                	sub    %esi,%eax
81005645:	eb 03                	jmp    8100564a <__sfvwrite_r+0x386>
81005647:	8d 47 01             	lea    0x1(%edi),%eax
8100564a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100564d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81005654:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005657:	39 c7                	cmp    %eax,%edi
81005659:	0f 46 c7             	cmovbe %edi,%eax
8100565c:	89 c1                	mov    %eax,%ecx
8100565e:	8b 53 08             	mov    0x8(%ebx),%edx
81005661:	8b 43 14             	mov    0x14(%ebx),%eax
81005664:	8d 34 02             	lea    (%edx,%eax,1),%esi
81005667:	8b 13                	mov    (%ebx),%edx
81005669:	8b 43 10             	mov    0x10(%ebx),%eax
8100566c:	39 c2                	cmp    %eax,%edx
8100566e:	76 38                	jbe    810056a8 <__sfvwrite_r+0x3e4>
81005670:	39 f1                	cmp    %esi,%ecx
81005672:	7e 34                	jle    810056a8 <__sfvwrite_r+0x3e4>
81005674:	89 f2                	mov    %esi,%edx
81005676:	8b 03                	mov    (%ebx),%eax
81005678:	83 ec 04             	sub    $0x4,%esp
8100567b:	52                   	push   %edx
8100567c:	ff 75 c4             	push   -0x3c(%ebp)
8100567f:	50                   	push   %eax
81005680:	e8 2b 05 00 00       	call   81005bb0 <memmove>
81005685:	83 c4 10             	add    $0x10,%esp
81005688:	8b 03                	mov    (%ebx),%eax
8100568a:	89 f2                	mov    %esi,%edx
8100568c:	01 d0                	add    %edx,%eax
8100568e:	89 03                	mov    %eax,(%ebx)
81005690:	83 ec 08             	sub    $0x8,%esp
81005693:	53                   	push   %ebx
81005694:	ff 75 08             	push   0x8(%ebp)
81005697:	e8 0d b6 ff ff       	call   81000ca9 <_fflush_r>
8100569c:	83 c4 10             	add    $0x10,%esp
8100569f:	85 c0                	test   %eax,%eax
810056a1:	74 4f                	je     810056f2 <__sfvwrite_r+0x42e>
810056a3:	e9 a2 00 00 00       	jmp    8100574a <__sfvwrite_r+0x486>
810056a8:	8b 73 14             	mov    0x14(%ebx),%esi
810056ab:	89 c8                	mov    %ecx,%eax
810056ad:	39 c6                	cmp    %eax,%esi
810056af:	7f 1b                	jg     810056cc <__sfvwrite_r+0x408>
810056b1:	8b 53 24             	mov    0x24(%ebx),%edx
810056b4:	8b 43 1c             	mov    0x1c(%ebx),%eax
810056b7:	56                   	push   %esi
810056b8:	ff 75 c4             	push   -0x3c(%ebp)
810056bb:	50                   	push   %eax
810056bc:	ff 75 08             	push   0x8(%ebp)
810056bf:	ff d2                	call   *%edx
810056c1:	83 c4 10             	add    $0x10,%esp
810056c4:	89 c6                	mov    %eax,%esi
810056c6:	85 f6                	test   %esi,%esi
810056c8:	7f 28                	jg     810056f2 <__sfvwrite_r+0x42e>
810056ca:	eb 7e                	jmp    8100574a <__sfvwrite_r+0x486>
810056cc:	89 ce                	mov    %ecx,%esi
810056ce:	89 f2                	mov    %esi,%edx
810056d0:	8b 03                	mov    (%ebx),%eax
810056d2:	83 ec 04             	sub    $0x4,%esp
810056d5:	52                   	push   %edx
810056d6:	ff 75 c4             	push   -0x3c(%ebp)
810056d9:	50                   	push   %eax
810056da:	e8 d1 04 00 00       	call   81005bb0 <memmove>
810056df:	83 c4 10             	add    $0x10,%esp
810056e2:	8b 43 08             	mov    0x8(%ebx),%eax
810056e5:	29 f0                	sub    %esi,%eax
810056e7:	89 43 08             	mov    %eax,0x8(%ebx)
810056ea:	8b 03                	mov    (%ebx),%eax
810056ec:	89 f2                	mov    %esi,%edx
810056ee:	01 d0                	add    %edx,%eax
810056f0:	89 03                	mov    %eax,(%ebx)
810056f2:	29 75 e0             	sub    %esi,-0x20(%ebp)
810056f5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810056f9:	75 1a                	jne    81005715 <__sfvwrite_r+0x451>
810056fb:	83 ec 08             	sub    $0x8,%esp
810056fe:	53                   	push   %ebx
810056ff:	ff 75 08             	push   0x8(%ebp)
81005702:	e8 a2 b5 ff ff       	call   81000ca9 <_fflush_r>
81005707:	83 c4 10             	add    $0x10,%esp
8100570a:	85 c0                	test   %eax,%eax
8100570c:	75 3b                	jne    81005749 <__sfvwrite_r+0x485>
8100570e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005715:	89 f0                	mov    %esi,%eax
81005717:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100571a:	89 f0                	mov    %esi,%eax
8100571c:	29 c7                	sub    %eax,%edi
8100571e:	8b 45 10             	mov    0x10(%ebp),%eax
81005721:	8b 40 08             	mov    0x8(%eax),%eax
81005724:	89 f2                	mov    %esi,%edx
81005726:	29 d0                	sub    %edx,%eax
81005728:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100572b:	89 41 08             	mov    %eax,0x8(%ecx)
8100572e:	8b 45 10             	mov    0x10(%ebp),%eax
81005731:	8b 40 08             	mov    0x8(%eax),%eax
81005734:	85 c0                	test   %eax,%eax
81005736:	0f 85 dc fe ff ff    	jne    81005618 <__sfvwrite_r+0x354>
8100573c:	b8 00 00 00 00       	mov    $0x0,%eax
81005741:	eb 17                	jmp    8100575a <__sfvwrite_r+0x496>
81005743:	90                   	nop
81005744:	eb 04                	jmp    8100574a <__sfvwrite_r+0x486>
81005746:	90                   	nop
81005747:	eb 01                	jmp    8100574a <__sfvwrite_r+0x486>
81005749:	90                   	nop
8100574a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100574e:	83 c8 40             	or     $0x40,%eax
81005751:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005755:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100575a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100575d:	5b                   	pop    %ebx
8100575e:	5e                   	pop    %esi
8100575f:	5f                   	pop    %edi
81005760:	5d                   	pop    %ebp
81005761:	c3                   	ret    

81005762 <_findenv>:
81005762:	55                   	push   %ebp
81005763:	89 e5                	mov    %esp,%ebp
81005765:	83 ec 08             	sub    $0x8,%esp
81005768:	8b 55 08             	mov    0x8(%ebp),%edx
8100576b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005770:	83 ec 04             	sub    $0x4,%esp
81005773:	ff 75 0c             	push   0xc(%ebp)
81005776:	52                   	push   %edx
81005777:	50                   	push   %eax
81005778:	e8 25 00 00 00       	call   810057a2 <_findenv_r>
8100577d:	83 c4 10             	add    $0x10,%esp
81005780:	c9                   	leave  
81005781:	c3                   	ret    

81005782 <getenv>:
81005782:	55                   	push   %ebp
81005783:	89 e5                	mov    %esp,%ebp
81005785:	83 ec 18             	sub    $0x18,%esp
81005788:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100578d:	83 ec 04             	sub    $0x4,%esp
81005790:	8d 55 f4             	lea    -0xc(%ebp),%edx
81005793:	52                   	push   %edx
81005794:	ff 75 08             	push   0x8(%ebp)
81005797:	50                   	push   %eax
81005798:	e8 05 00 00 00       	call   810057a2 <_findenv_r>
8100579d:	83 c4 10             	add    $0x10,%esp
810057a0:	c9                   	leave  
810057a1:	c3                   	ret    

810057a2 <_findenv_r>:
810057a2:	55                   	push   %ebp
810057a3:	89 e5                	mov    %esp,%ebp
810057a5:	57                   	push   %edi
810057a6:	56                   	push   %esi
810057a7:	53                   	push   %ebx
810057a8:	83 ec 1c             	sub    $0x1c,%esp
810057ab:	8b 7d 0c             	mov    0xc(%ebp),%edi
810057ae:	83 ec 0c             	sub    $0xc,%esp
810057b1:	ff 75 08             	push   0x8(%ebp)
810057b4:	e8 a7 12 00 00       	call   81006a60 <__env_lock>
810057b9:	83 c4 10             	add    $0x10,%esp
810057bc:	a1 d0 79 00 81       	mov    0x810079d0,%eax
810057c1:	8b 00                	mov    (%eax),%eax
810057c3:	85 c0                	test   %eax,%eax
810057c5:	75 18                	jne    810057df <_findenv_r+0x3d>
810057c7:	83 ec 0c             	sub    $0xc,%esp
810057ca:	ff 75 08             	push   0x8(%ebp)
810057cd:	e8 94 12 00 00       	call   81006a66 <__env_unlock>
810057d2:	83 c4 10             	add    $0x10,%esp
810057d5:	b8 00 00 00 00       	mov    $0x0,%eax
810057da:	e9 a8 00 00 00       	jmp    81005887 <_findenv_r+0xe5>
810057df:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810057e2:	eb 04                	jmp    810057e8 <_findenv_r+0x46>
810057e4:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810057e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057eb:	0f b6 00             	movzbl (%eax),%eax
810057ee:	84 c0                	test   %al,%al
810057f0:	74 0a                	je     810057fc <_findenv_r+0x5a>
810057f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057f5:	0f b6 00             	movzbl (%eax),%eax
810057f8:	3c 3d                	cmp    $0x3d,%al
810057fa:	75 e8                	jne    810057e4 <_findenv_r+0x42>
810057fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057ff:	0f b6 00             	movzbl (%eax),%eax
81005802:	3c 3d                	cmp    $0x3d,%al
81005804:	74 6e                	je     81005874 <_findenv_r+0xd2>
81005806:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005809:	29 f8                	sub    %edi,%eax
8100580b:	89 c6                	mov    %eax,%esi
8100580d:	a1 d0 79 00 81       	mov    0x810079d0,%eax
81005812:	8b 18                	mov    (%eax),%ebx
81005814:	eb 58                	jmp    8100586e <_findenv_r+0xcc>
81005816:	89 f2                	mov    %esi,%edx
81005818:	8b 03                	mov    (%ebx),%eax
8100581a:	83 ec 04             	sub    $0x4,%esp
8100581d:	52                   	push   %edx
8100581e:	57                   	push   %edi
8100581f:	50                   	push   %eax
81005820:	e8 d3 0f 00 00       	call   810067f8 <strncmp>
81005825:	83 c4 10             	add    $0x10,%esp
81005828:	85 c0                	test   %eax,%eax
8100582a:	75 3f                	jne    8100586b <_findenv_r+0xc9>
8100582c:	8b 03                	mov    (%ebx),%eax
8100582e:	89 f2                	mov    %esi,%edx
81005830:	01 d0                	add    %edx,%eax
81005832:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005835:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005838:	0f b6 00             	movzbl (%eax),%eax
8100583b:	3c 3d                	cmp    $0x3d,%al
8100583d:	75 2c                	jne    8100586b <_findenv_r+0xc9>
8100583f:	a1 d0 79 00 81       	mov    0x810079d0,%eax
81005844:	8b 10                	mov    (%eax),%edx
81005846:	89 d8                	mov    %ebx,%eax
81005848:	29 d0                	sub    %edx,%eax
8100584a:	c1 f8 02             	sar    $0x2,%eax
8100584d:	89 c2                	mov    %eax,%edx
8100584f:	8b 45 10             	mov    0x10(%ebp),%eax
81005852:	89 10                	mov    %edx,(%eax)
81005854:	83 ec 0c             	sub    $0xc,%esp
81005857:	ff 75 08             	push   0x8(%ebp)
8100585a:	e8 07 12 00 00       	call   81006a66 <__env_unlock>
8100585f:	83 c4 10             	add    $0x10,%esp
81005862:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005866:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005869:	eb 1c                	jmp    81005887 <_findenv_r+0xe5>
8100586b:	83 c3 04             	add    $0x4,%ebx
8100586e:	8b 03                	mov    (%ebx),%eax
81005870:	85 c0                	test   %eax,%eax
81005872:	75 a2                	jne    81005816 <_findenv_r+0x74>
81005874:	83 ec 0c             	sub    $0xc,%esp
81005877:	ff 75 08             	push   0x8(%ebp)
8100587a:	e8 e7 11 00 00       	call   81006a66 <__env_unlock>
8100587f:	83 c4 10             	add    $0x10,%esp
81005882:	b8 00 00 00 00       	mov    $0x0,%eax
81005887:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100588a:	5b                   	pop    %ebx
8100588b:	5e                   	pop    %esi
8100588c:	5f                   	pop    %edi
8100588d:	5d                   	pop    %ebp
8100588e:	c3                   	ret    

8100588f <_getenv_r>:
8100588f:	55                   	push   %ebp
81005890:	89 e5                	mov    %esp,%ebp
81005892:	83 ec 18             	sub    $0x18,%esp
81005895:	83 ec 04             	sub    $0x4,%esp
81005898:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100589b:	50                   	push   %eax
8100589c:	ff 75 0c             	push   0xc(%ebp)
8100589f:	ff 75 08             	push   0x8(%ebp)
810058a2:	e8 fb fe ff ff       	call   810057a2 <_findenv_r>
810058a7:	83 c4 10             	add    $0x10,%esp
810058aa:	c9                   	leave  
810058ab:	c3                   	ret    

810058ac <__get_global_locale>:
810058ac:	55                   	push   %ebp
810058ad:	89 e5                	mov    %esp,%ebp
810058af:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810058b4:	5d                   	pop    %ebp
810058b5:	c3                   	ret    

810058b6 <__get_current_locale>:
810058b6:	55                   	push   %ebp
810058b7:	89 e5                	mov    %esp,%ebp
810058b9:	e8 ee ff ff ff       	call   810058ac <__get_global_locale>
810058be:	5d                   	pop    %ebp
810058bf:	c3                   	ret    

810058c0 <_setlocale_r>:
810058c0:	55                   	push   %ebp
810058c1:	89 e5                	mov    %esp,%ebp
810058c3:	83 ec 08             	sub    $0x8,%esp
810058c6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810058ca:	74 4c                	je     81005918 <_setlocale_r+0x58>
810058cc:	83 ec 08             	sub    $0x8,%esp
810058cf:	68 44 71 00 81       	push   $0x81007144
810058d4:	ff 75 10             	push   0x10(%ebp)
810058d7:	e8 f0 ec ff ff       	call   810045cc <strcmp>
810058dc:	83 c4 10             	add    $0x10,%esp
810058df:	85 c0                	test   %eax,%eax
810058e1:	74 35                	je     81005918 <_setlocale_r+0x58>
810058e3:	83 ec 08             	sub    $0x8,%esp
810058e6:	68 4a 71 00 81       	push   $0x8100714a
810058eb:	ff 75 10             	push   0x10(%ebp)
810058ee:	e8 d9 ec ff ff       	call   810045cc <strcmp>
810058f3:	83 c4 10             	add    $0x10,%esp
810058f6:	85 c0                	test   %eax,%eax
810058f8:	74 1e                	je     81005918 <_setlocale_r+0x58>
810058fa:	83 ec 08             	sub    $0x8,%esp
810058fd:	68 43 71 00 81       	push   $0x81007143
81005902:	ff 75 10             	push   0x10(%ebp)
81005905:	e8 c2 ec ff ff       	call   810045cc <strcmp>
8100590a:	83 c4 10             	add    $0x10,%esp
8100590d:	85 c0                	test   %eax,%eax
8100590f:	74 07                	je     81005918 <_setlocale_r+0x58>
81005911:	b8 00 00 00 00       	mov    $0x0,%eax
81005916:	eb 05                	jmp    8100591d <_setlocale_r+0x5d>
81005918:	b8 4a 71 00 81       	mov    $0x8100714a,%eax
8100591d:	c9                   	leave  
8100591e:	c3                   	ret    

8100591f <__locale_mb_cur_max>:
8100591f:	55                   	push   %ebp
81005920:	89 e5                	mov    %esp,%ebp
81005922:	e8 8f ff ff ff       	call   810058b6 <__get_current_locale>
81005927:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100592e:	0f be c0             	movsbl %al,%eax
81005931:	5d                   	pop    %ebp
81005932:	c3                   	ret    

81005933 <setlocale>:
81005933:	55                   	push   %ebp
81005934:	89 e5                	mov    %esp,%ebp
81005936:	83 ec 08             	sub    $0x8,%esp
81005939:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100593e:	83 ec 04             	sub    $0x4,%esp
81005941:	ff 75 0c             	push   0xc(%ebp)
81005944:	ff 75 08             	push   0x8(%ebp)
81005947:	50                   	push   %eax
81005948:	e8 73 ff ff ff       	call   810058c0 <_setlocale_r>
8100594d:	83 c4 10             	add    $0x10,%esp
81005950:	c9                   	leave  
81005951:	c3                   	ret    

81005952 <_lseek_r>:
81005952:	55                   	push   %ebp
81005953:	89 e5                	mov    %esp,%ebp
81005955:	83 ec 18             	sub    $0x18,%esp
81005958:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
8100595f:	00 00 00 
81005962:	83 ec 04             	sub    $0x4,%esp
81005965:	ff 75 14             	push   0x14(%ebp)
81005968:	ff 75 10             	push   0x10(%ebp)
8100596b:	ff 75 0c             	push   0xc(%ebp)
8100596e:	e8 c1 ae ff ff       	call   81000834 <lseek>
81005973:	83 c4 10             	add    $0x10,%esp
81005976:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005979:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100597d:	75 14                	jne    81005993 <_lseek_r+0x41>
8100597f:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81005984:	85 c0                	test   %eax,%eax
81005986:	74 0b                	je     81005993 <_lseek_r+0x41>
81005988:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
8100598e:	8b 45 08             	mov    0x8(%ebp),%eax
81005991:	89 10                	mov    %edx,(%eax)
81005993:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005996:	c9                   	leave  
81005997:	c3                   	ret    

81005998 <__smakebuf_r>:
81005998:	55                   	push   %ebp
81005999:	89 e5                	mov    %esp,%ebp
8100599b:	56                   	push   %esi
8100599c:	53                   	push   %ebx
8100599d:	83 ec 10             	sub    $0x10,%esp
810059a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810059a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059a7:	98                   	cwtl   
810059a8:	83 e0 02             	and    $0x2,%eax
810059ab:	85 c0                	test   %eax,%eax
810059ad:	74 16                	je     810059c5 <__smakebuf_r+0x2d>
810059af:	8d 43 43             	lea    0x43(%ebx),%eax
810059b2:	89 03                	mov    %eax,(%ebx)
810059b4:	8b 03                	mov    (%ebx),%eax
810059b6:	89 43 10             	mov    %eax,0x10(%ebx)
810059b9:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810059c0:	e9 b9 00 00 00       	jmp    81005a7e <__smakebuf_r+0xe6>
810059c5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810059c8:	50                   	push   %eax
810059c9:	8d 45 f0             	lea    -0x10(%ebp),%eax
810059cc:	50                   	push   %eax
810059cd:	53                   	push   %ebx
810059ce:	ff 75 08             	push   0x8(%ebp)
810059d1:	e8 af 00 00 00       	call   81005a85 <__swhatbuf_r>
810059d6:	83 c4 10             	add    $0x10,%esp
810059d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810059dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059df:	83 ec 08             	sub    $0x8,%esp
810059e2:	50                   	push   %eax
810059e3:	ff 75 08             	push   0x8(%ebp)
810059e6:	e8 d3 d0 ff ff       	call   81002abe <_malloc_r>
810059eb:	83 c4 10             	add    $0x10,%esp
810059ee:	89 c6                	mov    %eax,%esi
810059f0:	85 f6                	test   %esi,%esi
810059f2:	75 2f                	jne    81005a23 <__smakebuf_r+0x8b>
810059f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059f8:	98                   	cwtl   
810059f9:	25 00 02 00 00       	and    $0x200,%eax
810059fe:	85 c0                	test   %eax,%eax
81005a00:	75 7c                	jne    81005a7e <__smakebuf_r+0xe6>
81005a02:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a06:	83 e0 fc             	and    $0xfffffffc,%eax
81005a09:	83 c8 02             	or     $0x2,%eax
81005a0c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a10:	8d 43 43             	lea    0x43(%ebx),%eax
81005a13:	89 03                	mov    %eax,(%ebx)
81005a15:	8b 03                	mov    (%ebx),%eax
81005a17:	89 43 10             	mov    %eax,0x10(%ebx)
81005a1a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005a21:	eb 5b                	jmp    81005a7e <__smakebuf_r+0xe6>
81005a23:	8b 45 08             	mov    0x8(%ebp),%eax
81005a26:	c7 40 3c 71 11 00 81 	movl   $0x81001171,0x3c(%eax)
81005a2d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a31:	0c 80                	or     $0x80,%al
81005a33:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a37:	89 33                	mov    %esi,(%ebx)
81005a39:	8b 03                	mov    (%ebx),%eax
81005a3b:	89 43 10             	mov    %eax,0x10(%ebx)
81005a3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a41:	89 43 14             	mov    %eax,0x14(%ebx)
81005a44:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a47:	85 c0                	test   %eax,%eax
81005a49:	74 26                	je     81005a71 <__smakebuf_r+0xd9>
81005a4b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005a4f:	98                   	cwtl   
81005a50:	83 ec 08             	sub    $0x8,%esp
81005a53:	50                   	push   %eax
81005a54:	ff 75 08             	push   0x8(%ebp)
81005a57:	e8 53 10 00 00       	call   81006aaf <_isatty_r>
81005a5c:	83 c4 10             	add    $0x10,%esp
81005a5f:	85 c0                	test   %eax,%eax
81005a61:	74 0e                	je     81005a71 <__smakebuf_r+0xd9>
81005a63:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a67:	83 e0 fc             	and    $0xfffffffc,%eax
81005a6a:	83 c8 01             	or     $0x1,%eax
81005a6d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a71:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005a75:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a78:	09 d0                	or     %edx,%eax
81005a7a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a7e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a81:	5b                   	pop    %ebx
81005a82:	5e                   	pop    %esi
81005a83:	5d                   	pop    %ebp
81005a84:	c3                   	ret    

81005a85 <__swhatbuf_r>:
81005a85:	55                   	push   %ebp
81005a86:	89 e5                	mov    %esp,%ebp
81005a88:	83 ec 58             	sub    $0x58,%esp
81005a8b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81005a92:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a95:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a99:	66 85 c0             	test   %ax,%ax
81005a9c:	78 1f                	js     81005abd <__swhatbuf_r+0x38>
81005a9e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005aa1:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005aa5:	98                   	cwtl   
81005aa6:	83 ec 04             	sub    $0x4,%esp
81005aa9:	8d 55 ac             	lea    -0x54(%ebp),%edx
81005aac:	52                   	push   %edx
81005aad:	50                   	push   %eax
81005aae:	ff 75 08             	push   0x8(%ebp)
81005ab1:	e8 b6 0f 00 00       	call   81006a6c <_fstat_r>
81005ab6:	83 c4 10             	add    $0x10,%esp
81005ab9:	85 c0                	test   %eax,%eax
81005abb:	79 35                	jns    81005af2 <__swhatbuf_r+0x6d>
81005abd:	8b 45 14             	mov    0x14(%ebp),%eax
81005ac0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005ac6:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ac9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005acd:	98                   	cwtl   
81005ace:	25 80 00 00 00       	and    $0x80,%eax
81005ad3:	85 c0                	test   %eax,%eax
81005ad5:	74 0b                	je     81005ae2 <__swhatbuf_r+0x5d>
81005ad7:	8b 45 10             	mov    0x10(%ebp),%eax
81005ada:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005ae0:	eb 09                	jmp    81005aeb <__swhatbuf_r+0x66>
81005ae2:	8b 45 10             	mov    0x10(%ebp),%eax
81005ae5:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005aeb:	b8 00 00 00 00       	mov    $0x0,%eax
81005af0:	eb 24                	jmp    81005b16 <__swhatbuf_r+0x91>
81005af2:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005af5:	25 00 f0 00 00       	and    $0xf000,%eax
81005afa:	3d 00 20 00 00       	cmp    $0x2000,%eax
81005aff:	0f 94 c0             	sete   %al
81005b02:	0f b6 d0             	movzbl %al,%edx
81005b05:	8b 45 14             	mov    0x14(%ebp),%eax
81005b08:	89 10                	mov    %edx,(%eax)
81005b0a:	8b 45 10             	mov    0x10(%ebp),%eax
81005b0d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005b13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b16:	c9                   	leave  
81005b17:	c3                   	ret    

81005b18 <__get_global_locale>:
81005b18:	55                   	push   %ebp
81005b19:	89 e5                	mov    %esp,%ebp
81005b1b:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
81005b20:	5d                   	pop    %ebp
81005b21:	c3                   	ret    

81005b22 <__get_current_locale>:
81005b22:	55                   	push   %ebp
81005b23:	89 e5                	mov    %esp,%ebp
81005b25:	e8 ee ff ff ff       	call   81005b18 <__get_global_locale>
81005b2a:	5d                   	pop    %ebp
81005b2b:	c3                   	ret    

81005b2c <_mbtowc_r>:
81005b2c:	55                   	push   %ebp
81005b2d:	89 e5                	mov    %esp,%ebp
81005b2f:	83 ec 08             	sub    $0x8,%esp
81005b32:	e8 eb ff ff ff       	call   81005b22 <__get_current_locale>
81005b37:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81005b3d:	83 ec 0c             	sub    $0xc,%esp
81005b40:	ff 75 18             	push   0x18(%ebp)
81005b43:	ff 75 14             	push   0x14(%ebp)
81005b46:	ff 75 10             	push   0x10(%ebp)
81005b49:	ff 75 0c             	push   0xc(%ebp)
81005b4c:	ff 75 08             	push   0x8(%ebp)
81005b4f:	ff d0                	call   *%eax
81005b51:	83 c4 20             	add    $0x20,%esp
81005b54:	c9                   	leave  
81005b55:	c3                   	ret    

81005b56 <__ascii_mbtowc>:
81005b56:	55                   	push   %ebp
81005b57:	89 e5                	mov    %esp,%ebp
81005b59:	83 ec 10             	sub    $0x10,%esp
81005b5c:	8b 45 10             	mov    0x10(%ebp),%eax
81005b5f:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005b62:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005b66:	75 06                	jne    81005b6e <__ascii_mbtowc+0x18>
81005b68:	8d 45 f8             	lea    -0x8(%ebp),%eax
81005b6b:	89 45 0c             	mov    %eax,0xc(%ebp)
81005b6e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005b72:	75 07                	jne    81005b7b <__ascii_mbtowc+0x25>
81005b74:	b8 00 00 00 00       	mov    $0x0,%eax
81005b79:	eb 31                	jmp    81005bac <__ascii_mbtowc+0x56>
81005b7b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005b7f:	75 07                	jne    81005b88 <__ascii_mbtowc+0x32>
81005b81:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005b86:	eb 24                	jmp    81005bac <__ascii_mbtowc+0x56>
81005b88:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b8b:	0f b6 00             	movzbl (%eax),%eax
81005b8e:	0f b6 d0             	movzbl %al,%edx
81005b91:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b94:	89 10                	mov    %edx,(%eax)
81005b96:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b99:	0f b6 00             	movzbl (%eax),%eax
81005b9c:	84 c0                	test   %al,%al
81005b9e:	75 07                	jne    81005ba7 <__ascii_mbtowc+0x51>
81005ba0:	b8 00 00 00 00       	mov    $0x0,%eax
81005ba5:	eb 05                	jmp    81005bac <__ascii_mbtowc+0x56>
81005ba7:	b8 01 00 00 00       	mov    $0x1,%eax
81005bac:	c9                   	leave  
81005bad:	c3                   	ret    
81005bae:	66 90                	xchg   %ax,%ax

81005bb0 <memmove>:
81005bb0:	55                   	push   %ebp
81005bb1:	89 e5                	mov    %esp,%ebp
81005bb3:	56                   	push   %esi
81005bb4:	57                   	push   %edi
81005bb5:	53                   	push   %ebx
81005bb6:	8b 7d 08             	mov    0x8(%ebp),%edi
81005bb9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005bbc:	8b 75 0c             	mov    0xc(%ebp),%esi
81005bbf:	fc                   	cld    
81005bc0:	39 fe                	cmp    %edi,%esi
81005bc2:	73 43                	jae    81005c07 <memmove+0x57>
81005bc4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005bc8:	39 df                	cmp    %ebx,%edi
81005bca:	77 3b                	ja     81005c07 <memmove+0x57>
81005bcc:	01 ce                	add    %ecx,%esi
81005bce:	01 cf                	add    %ecx,%edi
81005bd0:	fd                   	std    
81005bd1:	83 f9 08             	cmp    $0x8,%ecx
81005bd4:	76 2b                	jbe    81005c01 <memmove+0x51>
81005bd6:	89 fa                	mov    %edi,%edx
81005bd8:	89 cb                	mov    %ecx,%ebx
81005bda:	83 e2 03             	and    $0x3,%edx
81005bdd:	74 0c                	je     81005beb <memmove+0x3b>
81005bdf:	89 d1                	mov    %edx,%ecx
81005be1:	4e                   	dec    %esi
81005be2:	4f                   	dec    %edi
81005be3:	29 cb                	sub    %ecx,%ebx
81005be5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005be7:	89 d9                	mov    %ebx,%ecx
81005be9:	46                   	inc    %esi
81005bea:	47                   	inc    %edi
81005beb:	c1 e9 02             	shr    $0x2,%ecx
81005bee:	83 ee 04             	sub    $0x4,%esi
81005bf1:	83 ef 04             	sub    $0x4,%edi
81005bf4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005bf6:	83 c6 04             	add    $0x4,%esi
81005bf9:	83 c7 04             	add    $0x4,%edi
81005bfc:	89 d9                	mov    %ebx,%ecx
81005bfe:	83 e1 03             	and    $0x3,%ecx
81005c01:	4e                   	dec    %esi
81005c02:	4f                   	dec    %edi
81005c03:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c05:	eb 2a                	jmp    81005c31 <memmove+0x81>
81005c07:	83 f9 08             	cmp    $0x8,%ecx
81005c0a:	76 23                	jbe    81005c2f <memmove+0x7f>
81005c0c:	89 fa                	mov    %edi,%edx
81005c0e:	89 cb                	mov    %ecx,%ebx
81005c10:	83 e2 03             	and    $0x3,%edx
81005c13:	74 10                	je     81005c25 <memmove+0x75>
81005c15:	b9 04 00 00 00       	mov    $0x4,%ecx
81005c1a:	29 d1                	sub    %edx,%ecx
81005c1c:	83 e1 03             	and    $0x3,%ecx
81005c1f:	29 cb                	sub    %ecx,%ebx
81005c21:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c23:	89 d9                	mov    %ebx,%ecx
81005c25:	c1 e9 02             	shr    $0x2,%ecx
81005c28:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005c2a:	89 d9                	mov    %ebx,%ecx
81005c2c:	83 e1 03             	and    $0x3,%ecx
81005c2f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c31:	8b 45 08             	mov    0x8(%ebp),%eax
81005c34:	fc                   	cld    
81005c35:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005c38:	5b                   	pop    %ebx
81005c39:	5f                   	pop    %edi
81005c3a:	5e                   	pop    %esi
81005c3b:	c9                   	leave  
81005c3c:	c3                   	ret    

81005c3d <__sputc_r>:
81005c3d:	55                   	push   %ebp
81005c3e:	89 e5                	mov    %esp,%ebp
81005c40:	83 ec 08             	sub    $0x8,%esp
81005c43:	8b 45 10             	mov    0x10(%ebp),%eax
81005c46:	8b 40 08             	mov    0x8(%eax),%eax
81005c49:	8d 50 ff             	lea    -0x1(%eax),%edx
81005c4c:	8b 45 10             	mov    0x10(%ebp),%eax
81005c4f:	89 50 08             	mov    %edx,0x8(%eax)
81005c52:	8b 45 10             	mov    0x10(%ebp),%eax
81005c55:	8b 40 08             	mov    0x8(%eax),%eax
81005c58:	85 c0                	test   %eax,%eax
81005c5a:	79 17                	jns    81005c73 <__sputc_r+0x36>
81005c5c:	8b 45 10             	mov    0x10(%ebp),%eax
81005c5f:	8b 50 08             	mov    0x8(%eax),%edx
81005c62:	8b 45 10             	mov    0x10(%ebp),%eax
81005c65:	8b 40 18             	mov    0x18(%eax),%eax
81005c68:	39 c2                	cmp    %eax,%edx
81005c6a:	7c 21                	jl     81005c8d <__sputc_r+0x50>
81005c6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c6f:	3c 0a                	cmp    $0xa,%al
81005c71:	74 1a                	je     81005c8d <__sputc_r+0x50>
81005c73:	8b 45 10             	mov    0x10(%ebp),%eax
81005c76:	8b 00                	mov    (%eax),%eax
81005c78:	8d 48 01             	lea    0x1(%eax),%ecx
81005c7b:	8b 55 10             	mov    0x10(%ebp),%edx
81005c7e:	89 0a                	mov    %ecx,(%edx)
81005c80:	8b 55 0c             	mov    0xc(%ebp),%edx
81005c83:	88 10                	mov    %dl,(%eax)
81005c85:	0f b6 00             	movzbl (%eax),%eax
81005c88:	0f b6 c0             	movzbl %al,%eax
81005c8b:	eb 14                	jmp    81005ca1 <__sputc_r+0x64>
81005c8d:	83 ec 04             	sub    $0x4,%esp
81005c90:	ff 75 10             	push   0x10(%ebp)
81005c93:	ff 75 0c             	push   0xc(%ebp)
81005c96:	ff 75 08             	push   0x8(%ebp)
81005c99:	e8 c1 ed ff ff       	call   81004a5f <__swbuf_r>
81005c9e:	83 c4 10             	add    $0x10,%esp
81005ca1:	c9                   	leave  
81005ca2:	c3                   	ret    

81005ca3 <_putc_r>:
81005ca3:	55                   	push   %ebp
81005ca4:	89 e5                	mov    %esp,%ebp
81005ca6:	53                   	push   %ebx
81005ca7:	83 ec 14             	sub    $0x14,%esp
81005caa:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005cad:	8b 45 08             	mov    0x8(%ebp),%eax
81005cb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cb3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005cb7:	74 18                	je     81005cd1 <_putc_r+0x2e>
81005cb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cbc:	8b 40 38             	mov    0x38(%eax),%eax
81005cbf:	85 c0                	test   %eax,%eax
81005cc1:	75 0e                	jne    81005cd1 <_putc_r+0x2e>
81005cc3:	83 ec 0c             	sub    $0xc,%esp
81005cc6:	ff 75 f4             	push   -0xc(%ebp)
81005cc9:	e8 de b4 ff ff       	call   810011ac <__sinit>
81005cce:	83 c4 10             	add    $0x10,%esp
81005cd1:	83 ec 04             	sub    $0x4,%esp
81005cd4:	53                   	push   %ebx
81005cd5:	ff 75 0c             	push   0xc(%ebp)
81005cd8:	ff 75 08             	push   0x8(%ebp)
81005cdb:	e8 5d ff ff ff       	call   81005c3d <__sputc_r>
81005ce0:	83 c4 10             	add    $0x10,%esp
81005ce3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005ce6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ce9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005cec:	c9                   	leave  
81005ced:	c3                   	ret    

81005cee <putc>:
81005cee:	55                   	push   %ebp
81005cef:	89 e5                	mov    %esp,%ebp
81005cf1:	53                   	push   %ebx
81005cf2:	83 ec 14             	sub    $0x14,%esp
81005cf5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005cf8:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005cfd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d03:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005d06:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005d0a:	74 18                	je     81005d24 <putc+0x36>
81005d0c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d0f:	8b 40 38             	mov    0x38(%eax),%eax
81005d12:	85 c0                	test   %eax,%eax
81005d14:	75 0e                	jne    81005d24 <putc+0x36>
81005d16:	83 ec 0c             	sub    $0xc,%esp
81005d19:	ff 75 f0             	push   -0x10(%ebp)
81005d1c:	e8 8b b4 ff ff       	call   810011ac <__sinit>
81005d21:	83 c4 10             	add    $0x10,%esp
81005d24:	83 ec 04             	sub    $0x4,%esp
81005d27:	53                   	push   %ebx
81005d28:	ff 75 08             	push   0x8(%ebp)
81005d2b:	ff 75 f4             	push   -0xc(%ebp)
81005d2e:	e8 0a ff ff ff       	call   81005c3d <__sputc_r>
81005d33:	83 c4 10             	add    $0x10,%esp
81005d36:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005d39:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d3c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005d3f:	c9                   	leave  
81005d40:	c3                   	ret    

81005d41 <_read_r>:
81005d41:	55                   	push   %ebp
81005d42:	89 e5                	mov    %esp,%ebp
81005d44:	83 ec 18             	sub    $0x18,%esp
81005d47:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81005d4e:	00 00 00 
81005d51:	83 ec 04             	sub    $0x4,%esp
81005d54:	ff 75 14             	push   0x14(%ebp)
81005d57:	ff 75 10             	push   0x10(%ebp)
81005d5a:	ff 75 0c             	push   0xc(%ebp)
81005d5d:	e8 57 aa ff ff       	call   810007b9 <read>
81005d62:	83 c4 10             	add    $0x10,%esp
81005d65:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d68:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005d6c:	75 14                	jne    81005d82 <_read_r+0x41>
81005d6e:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81005d73:	85 c0                	test   %eax,%eax
81005d75:	74 0b                	je     81005d82 <_read_r+0x41>
81005d77:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81005d7d:	8b 45 08             	mov    0x8(%ebp),%eax
81005d80:	89 10                	mov    %edx,(%eax)
81005d82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d85:	c9                   	leave  
81005d86:	c3                   	ret    

81005d87 <_realloc_r>:
81005d87:	55                   	push   %ebp
81005d88:	89 e5                	mov    %esp,%ebp
81005d8a:	83 ec 78             	sub    $0x78,%esp
81005d8d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005d91:	75 16                	jne    81005da9 <_realloc_r+0x22>
81005d93:	83 ec 08             	sub    $0x8,%esp
81005d96:	ff 75 10             	push   0x10(%ebp)
81005d99:	ff 75 08             	push   0x8(%ebp)
81005d9c:	e8 1d cd ff ff       	call   81002abe <_malloc_r>
81005da1:	83 c4 10             	add    $0x10,%esp
81005da4:	e9 b6 08 00 00       	jmp    8100665f <_realloc_r+0x8d8>
81005da9:	83 ec 0c             	sub    $0xc,%esp
81005dac:	ff 75 08             	push   0x8(%ebp)
81005daf:	e8 e4 d6 ff ff       	call   81003498 <__malloc_lock>
81005db4:	83 c4 10             	add    $0x10,%esp
81005db7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005dba:	83 e8 08             	sub    $0x8,%eax
81005dbd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005dc0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005dc3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005dc6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005dc9:	8b 40 04             	mov    0x4(%eax),%eax
81005dcc:	83 e0 fc             	and    $0xfffffffc,%eax
81005dcf:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005dd2:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005dd5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005dd8:	8b 45 10             	mov    0x10(%ebp),%eax
81005ddb:	83 c0 0b             	add    $0xb,%eax
81005dde:	83 f8 16             	cmp    $0x16,%eax
81005de1:	76 0b                	jbe    81005dee <_realloc_r+0x67>
81005de3:	8b 45 10             	mov    0x10(%ebp),%eax
81005de6:	83 c0 0b             	add    $0xb,%eax
81005de9:	83 e0 f8             	and    $0xfffffff8,%eax
81005dec:	eb 05                	jmp    81005df3 <_realloc_r+0x6c>
81005dee:	b8 10 00 00 00       	mov    $0x10,%eax
81005df3:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005df6:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005df9:	85 c0                	test   %eax,%eax
81005dfb:	78 08                	js     81005e05 <_realloc_r+0x7e>
81005dfd:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e00:	3b 45 10             	cmp    0x10(%ebp),%eax
81005e03:	73 13                	jae    81005e18 <_realloc_r+0x91>
81005e05:	8b 45 08             	mov    0x8(%ebp),%eax
81005e08:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005e0e:	b8 00 00 00 00       	mov    $0x0,%eax
81005e13:	e9 47 08 00 00       	jmp    8100665f <_realloc_r+0x8d8>
81005e18:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005e1b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e1e:	39 c2                	cmp    %eax,%edx
81005e20:	0f 8d 8b 07 00 00    	jge    810065b1 <_realloc_r+0x82a>
81005e26:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005e29:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e2c:	01 d0                	add    %edx,%eax
81005e2e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005e31:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005e36:	8b 40 08             	mov    0x8(%eax),%eax
81005e39:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005e3c:	74 1e                	je     81005e5c <_realloc_r+0xd5>
81005e3e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e41:	8b 40 04             	mov    0x4(%eax),%eax
81005e44:	83 e0 fe             	and    $0xfffffffe,%eax
81005e47:	89 c2                	mov    %eax,%edx
81005e49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e4c:	01 d0                	add    %edx,%eax
81005e4e:	8b 40 04             	mov    0x4(%eax),%eax
81005e51:	83 e0 01             	and    $0x1,%eax
81005e54:	85 c0                	test   %eax,%eax
81005e56:	0f 85 ca 00 00 00    	jne    81005f26 <_realloc_r+0x19f>
81005e5c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e5f:	8b 40 04             	mov    0x4(%eax),%eax
81005e62:	83 e0 fc             	and    $0xfffffffc,%eax
81005e65:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005e68:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005e6d:	8b 40 08             	mov    0x8(%eax),%eax
81005e70:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005e73:	75 71                	jne    81005ee6 <_realloc_r+0x15f>
81005e75:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005e78:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e7b:	01 d0                	add    %edx,%eax
81005e7d:	89 c2                	mov    %eax,%edx
81005e7f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e82:	83 c0 10             	add    $0x10,%eax
81005e85:	39 c2                	cmp    %eax,%edx
81005e87:	0f 8c a9 00 00 00    	jl     81005f36 <_realloc_r+0x1af>
81005e8d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005e90:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e93:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81005e98:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005e9b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e9e:	01 c8                	add    %ecx,%eax
81005ea0:	89 42 08             	mov    %eax,0x8(%edx)
81005ea3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ea6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005ea9:	89 c2                	mov    %eax,%edx
81005eab:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005eb0:	8b 40 08             	mov    0x8(%eax),%eax
81005eb3:	83 ca 01             	or     $0x1,%edx
81005eb6:	89 50 04             	mov    %edx,0x4(%eax)
81005eb9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ebc:	8b 40 04             	mov    0x4(%eax),%eax
81005ebf:	83 e0 01             	and    $0x1,%eax
81005ec2:	0b 45 bc             	or     -0x44(%ebp),%eax
81005ec5:	89 c2                	mov    %eax,%edx
81005ec7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005eca:	89 50 04             	mov    %edx,0x4(%eax)
81005ecd:	83 ec 0c             	sub    $0xc,%esp
81005ed0:	ff 75 08             	push   0x8(%ebp)
81005ed3:	e8 c6 d5 ff ff       	call   8100349e <__malloc_unlock>
81005ed8:	83 c4 10             	add    $0x10,%esp
81005edb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ede:	83 c0 08             	add    $0x8,%eax
81005ee1:	e9 79 07 00 00       	jmp    8100665f <_realloc_r+0x8d8>
81005ee6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ee9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005eec:	01 d0                	add    %edx,%eax
81005eee:	89 c2                	mov    %eax,%edx
81005ef0:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ef3:	39 c2                	cmp    %eax,%edx
81005ef5:	7c 3f                	jl     81005f36 <_realloc_r+0x1af>
81005ef7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005efa:	8b 40 0c             	mov    0xc(%eax),%eax
81005efd:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005f00:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f03:	8b 40 08             	mov    0x8(%eax),%eax
81005f06:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005f09:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005f0c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005f0f:	89 50 0c             	mov    %edx,0xc(%eax)
81005f12:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005f15:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005f18:	89 50 08             	mov    %edx,0x8(%eax)
81005f1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005f1e:	01 45 f0             	add    %eax,-0x10(%ebp)
81005f21:	e9 8c 06 00 00       	jmp    810065b2 <_realloc_r+0x82b>
81005f26:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005f2d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005f34:	eb 01                	jmp    81005f37 <_realloc_r+0x1b0>
81005f36:	90                   	nop
81005f37:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f3a:	8b 40 04             	mov    0x4(%eax),%eax
81005f3d:	83 e0 01             	and    $0x1,%eax
81005f40:	85 c0                	test   %eax,%eax
81005f42:	0f 85 d6 04 00 00    	jne    8100641e <_realloc_r+0x697>
81005f48:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f4b:	8b 00                	mov    (%eax),%eax
81005f4d:	f7 d8                	neg    %eax
81005f4f:	89 c2                	mov    %eax,%edx
81005f51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f54:	01 d0                	add    %edx,%eax
81005f56:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005f59:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f5c:	8b 40 04             	mov    0x4(%eax),%eax
81005f5f:	83 e0 fc             	and    $0xfffffffc,%eax
81005f62:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005f65:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005f69:	0f 84 4a 03 00 00    	je     810062b9 <_realloc_r+0x532>
81005f6f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005f74:	8b 40 08             	mov    0x8(%eax),%eax
81005f77:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005f7a:	0f 85 b0 01 00 00    	jne    81006130 <_realloc_r+0x3a9>
81005f80:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f83:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f86:	01 c2                	add    %eax,%edx
81005f88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f8b:	01 d0                	add    %edx,%eax
81005f8d:	89 c2                	mov    %eax,%edx
81005f8f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f92:	83 c0 10             	add    $0x10,%eax
81005f95:	39 c2                	cmp    %eax,%edx
81005f97:	0f 8c 1c 03 00 00    	jl     810062b9 <_realloc_r+0x532>
81005f9d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fa0:	8b 40 0c             	mov    0xc(%eax),%eax
81005fa3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fa6:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fa9:	8b 40 08             	mov    0x8(%eax),%eax
81005fac:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005faf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005fb2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fb5:	89 50 0c             	mov    %edx,0xc(%eax)
81005fb8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fbb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fbe:	89 50 08             	mov    %edx,0x8(%eax)
81005fc1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fc7:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005fca:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005fcd:	01 d0                	add    %edx,%eax
81005fcf:	01 45 f0             	add    %eax,-0x10(%ebp)
81005fd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fd5:	83 c0 08             	add    $0x8,%eax
81005fd8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005fdb:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005fde:	83 e8 04             	sub    $0x4,%eax
81005fe1:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005fe4:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005fe8:	0f 87 de 00 00 00    	ja     810060cc <_realloc_r+0x345>
81005fee:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ff1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ff4:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005ff7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005ffa:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005ffe:	0f 86 90 00 00 00    	jbe    81006094 <_realloc_r+0x30d>
81006004:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006007:	8d 42 04             	lea    0x4(%edx),%eax
8100600a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100600d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006010:	8d 48 04             	lea    0x4(%eax),%ecx
81006013:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006016:	8b 12                	mov    (%edx),%edx
81006018:	89 10                	mov    %edx,(%eax)
8100601a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100601d:	8d 42 04             	lea    0x4(%edx),%eax
81006020:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006023:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006026:	8d 48 04             	lea    0x4(%eax),%ecx
81006029:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100602c:	8b 12                	mov    (%edx),%edx
8100602e:	89 10                	mov    %edx,(%eax)
81006030:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81006034:	76 5e                	jbe    81006094 <_realloc_r+0x30d>
81006036:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006039:	8d 42 04             	lea    0x4(%edx),%eax
8100603c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100603f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006042:	8d 48 04             	lea    0x4(%eax),%ecx
81006045:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006048:	8b 12                	mov    (%edx),%edx
8100604a:	89 10                	mov    %edx,(%eax)
8100604c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100604f:	8d 42 04             	lea    0x4(%edx),%eax
81006052:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006055:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006058:	8d 48 04             	lea    0x4(%eax),%ecx
8100605b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100605e:	8b 12                	mov    (%edx),%edx
81006060:	89 10                	mov    %edx,(%eax)
81006062:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006066:	76 2c                	jbe    81006094 <_realloc_r+0x30d>
81006068:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100606b:	8d 42 04             	lea    0x4(%edx),%eax
8100606e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006071:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006074:	8d 48 04             	lea    0x4(%eax),%ecx
81006077:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100607a:	8b 12                	mov    (%edx),%edx
8100607c:	89 10                	mov    %edx,(%eax)
8100607e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006081:	8d 42 04             	lea    0x4(%edx),%eax
81006084:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006087:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100608a:	8d 48 04             	lea    0x4(%eax),%ecx
8100608d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006090:	8b 12                	mov    (%edx),%edx
81006092:	89 10                	mov    %edx,(%eax)
81006094:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006097:	8d 42 04             	lea    0x4(%edx),%eax
8100609a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100609d:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060a0:	8d 48 04             	lea    0x4(%eax),%ecx
810060a3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810060a6:	8b 12                	mov    (%edx),%edx
810060a8:	89 10                	mov    %edx,(%eax)
810060aa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810060ad:	8d 42 04             	lea    0x4(%edx),%eax
810060b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810060b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060b6:	8d 48 04             	lea    0x4(%eax),%ecx
810060b9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810060bc:	8b 12                	mov    (%edx),%edx
810060be:	89 10                	mov    %edx,(%eax)
810060c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810060c3:	8b 10                	mov    (%eax),%edx
810060c5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060c8:	89 10                	mov    %edx,(%eax)
810060ca:	eb 14                	jmp    810060e0 <_realloc_r+0x359>
810060cc:	83 ec 04             	sub    $0x4,%esp
810060cf:	ff 75 a0             	push   -0x60(%ebp)
810060d2:	ff 75 0c             	push   0xc(%ebp)
810060d5:	ff 75 a8             	push   -0x58(%ebp)
810060d8:	e8 d3 fa ff ff       	call   81005bb0 <memmove>
810060dd:	83 c4 10             	add    $0x10,%esp
810060e0:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810060e5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810060e8:	8b 45 bc             	mov    -0x44(%ebp),%eax
810060eb:	01 c8                	add    %ecx,%eax
810060ed:	89 42 08             	mov    %eax,0x8(%edx)
810060f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060f3:	2b 45 bc             	sub    -0x44(%ebp),%eax
810060f6:	89 c2                	mov    %eax,%edx
810060f8:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810060fd:	8b 40 08             	mov    0x8(%eax),%eax
81006100:	83 ca 01             	or     $0x1,%edx
81006103:	89 50 04             	mov    %edx,0x4(%eax)
81006106:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006109:	8b 40 04             	mov    0x4(%eax),%eax
8100610c:	83 e0 01             	and    $0x1,%eax
8100610f:	0b 45 bc             	or     -0x44(%ebp),%eax
81006112:	89 c2                	mov    %eax,%edx
81006114:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006117:	89 50 04             	mov    %edx,0x4(%eax)
8100611a:	83 ec 0c             	sub    $0xc,%esp
8100611d:	ff 75 08             	push   0x8(%ebp)
81006120:	e8 79 d3 ff ff       	call   8100349e <__malloc_unlock>
81006125:	83 c4 10             	add    $0x10,%esp
81006128:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100612b:	e9 2f 05 00 00       	jmp    8100665f <_realloc_r+0x8d8>
81006130:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006133:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006136:	01 c2                	add    %eax,%edx
81006138:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100613b:	01 d0                	add    %edx,%eax
8100613d:	89 c2                	mov    %eax,%edx
8100613f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006142:	39 c2                	cmp    %eax,%edx
81006144:	0f 8c 6f 01 00 00    	jl     810062b9 <_realloc_r+0x532>
8100614a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100614d:	8b 40 0c             	mov    0xc(%eax),%eax
81006150:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006153:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006156:	8b 40 08             	mov    0x8(%eax),%eax
81006159:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100615c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100615f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006162:	89 50 0c             	mov    %edx,0xc(%eax)
81006165:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006168:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100616b:	89 50 08             	mov    %edx,0x8(%eax)
8100616e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006171:	8b 40 0c             	mov    0xc(%eax),%eax
81006174:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006177:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100617a:	8b 40 08             	mov    0x8(%eax),%eax
8100617d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006180:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006183:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006186:	89 50 0c             	mov    %edx,0xc(%eax)
81006189:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100618c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100618f:	89 50 08             	mov    %edx,0x8(%eax)
81006192:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006195:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006198:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100619b:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100619e:	01 d0                	add    %edx,%eax
810061a0:	01 45 f0             	add    %eax,-0x10(%ebp)
810061a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061a6:	83 c0 08             	add    $0x8,%eax
810061a9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810061ac:	8b 45 c0             	mov    -0x40(%ebp),%eax
810061af:	83 e8 04             	sub    $0x4,%eax
810061b2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
810061b5:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
810061b9:	0f 87 e1 00 00 00    	ja     810062a0 <_realloc_r+0x519>
810061bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810061c2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061c5:	8b 45 a8             	mov    -0x58(%ebp),%eax
810061c8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810061cb:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
810061cf:	0f 86 90 00 00 00    	jbe    81006265 <_realloc_r+0x4de>
810061d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061d8:	8d 42 04             	lea    0x4(%edx),%eax
810061db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061e1:	8d 48 04             	lea    0x4(%eax),%ecx
810061e4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061e7:	8b 12                	mov    (%edx),%edx
810061e9:	89 10                	mov    %edx,(%eax)
810061eb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061ee:	8d 42 04             	lea    0x4(%edx),%eax
810061f1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061f4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061f7:	8d 48 04             	lea    0x4(%eax),%ecx
810061fa:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061fd:	8b 12                	mov    (%edx),%edx
810061ff:	89 10                	mov    %edx,(%eax)
81006201:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81006205:	76 5e                	jbe    81006265 <_realloc_r+0x4de>
81006207:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100620a:	8d 42 04             	lea    0x4(%edx),%eax
8100620d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006210:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006213:	8d 48 04             	lea    0x4(%eax),%ecx
81006216:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006219:	8b 12                	mov    (%edx),%edx
8100621b:	89 10                	mov    %edx,(%eax)
8100621d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006220:	8d 42 04             	lea    0x4(%edx),%eax
81006223:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006226:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006229:	8d 48 04             	lea    0x4(%eax),%ecx
8100622c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100622f:	8b 12                	mov    (%edx),%edx
81006231:	89 10                	mov    %edx,(%eax)
81006233:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81006237:	76 2c                	jbe    81006265 <_realloc_r+0x4de>
81006239:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100623c:	8d 42 04             	lea    0x4(%edx),%eax
8100623f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006242:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006245:	8d 48 04             	lea    0x4(%eax),%ecx
81006248:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100624b:	8b 12                	mov    (%edx),%edx
8100624d:	89 10                	mov    %edx,(%eax)
8100624f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006252:	8d 42 04             	lea    0x4(%edx),%eax
81006255:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006258:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100625b:	8d 48 04             	lea    0x4(%eax),%ecx
8100625e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006261:	8b 12                	mov    (%edx),%edx
81006263:	89 10                	mov    %edx,(%eax)
81006265:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006268:	8d 42 04             	lea    0x4(%edx),%eax
8100626b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100626e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006271:	8d 48 04             	lea    0x4(%eax),%ecx
81006274:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006277:	8b 12                	mov    (%edx),%edx
81006279:	89 10                	mov    %edx,(%eax)
8100627b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100627e:	8d 42 04             	lea    0x4(%edx),%eax
81006281:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006284:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006287:	8d 48 04             	lea    0x4(%eax),%ecx
8100628a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100628d:	8b 12                	mov    (%edx),%edx
8100628f:	89 10                	mov    %edx,(%eax)
81006291:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006294:	8b 10                	mov    (%eax),%edx
81006296:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006299:	89 10                	mov    %edx,(%eax)
8100629b:	e9 12 03 00 00       	jmp    810065b2 <_realloc_r+0x82b>
810062a0:	83 ec 04             	sub    $0x4,%esp
810062a3:	ff 75 a4             	push   -0x5c(%ebp)
810062a6:	ff 75 0c             	push   0xc(%ebp)
810062a9:	ff 75 a8             	push   -0x58(%ebp)
810062ac:	e8 ff f8 ff ff       	call   81005bb0 <memmove>
810062b1:	83 c4 10             	add    $0x10,%esp
810062b4:	e9 f9 02 00 00       	jmp    810065b2 <_realloc_r+0x82b>
810062b9:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
810062bd:	0f 84 5b 01 00 00    	je     8100641e <_realloc_r+0x697>
810062c3:	8b 55 ac             	mov    -0x54(%ebp),%edx
810062c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810062c9:	01 d0                	add    %edx,%eax
810062cb:	89 c2                	mov    %eax,%edx
810062cd:	8b 45 bc             	mov    -0x44(%ebp),%eax
810062d0:	39 c2                	cmp    %eax,%edx
810062d2:	0f 8c 46 01 00 00    	jl     8100641e <_realloc_r+0x697>
810062d8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810062db:	8b 40 0c             	mov    0xc(%eax),%eax
810062de:	89 45 b8             	mov    %eax,-0x48(%ebp)
810062e1:	8b 45 b0             	mov    -0x50(%ebp),%eax
810062e4:	8b 40 08             	mov    0x8(%eax),%eax
810062e7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810062ea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810062ed:	8b 55 b8             	mov    -0x48(%ebp),%edx
810062f0:	89 50 0c             	mov    %edx,0xc(%eax)
810062f3:	8b 45 b8             	mov    -0x48(%ebp),%eax
810062f6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810062f9:	89 50 08             	mov    %edx,0x8(%eax)
810062fc:	8b 45 b0             	mov    -0x50(%ebp),%eax
810062ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006302:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006305:	01 45 f0             	add    %eax,-0x10(%ebp)
81006308:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100630b:	83 c0 08             	add    $0x8,%eax
8100630e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006311:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006314:	83 e8 04             	sub    $0x4,%eax
81006317:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100631a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100631e:	0f 87 e1 00 00 00    	ja     81006405 <_realloc_r+0x67e>
81006324:	8b 45 0c             	mov    0xc(%ebp),%eax
81006327:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100632a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100632d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006330:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81006334:	0f 86 90 00 00 00    	jbe    810063ca <_realloc_r+0x643>
8100633a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100633d:	8d 42 04             	lea    0x4(%edx),%eax
81006340:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006343:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006346:	8d 48 04             	lea    0x4(%eax),%ecx
81006349:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100634c:	8b 12                	mov    (%edx),%edx
8100634e:	89 10                	mov    %edx,(%eax)
81006350:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006353:	8d 42 04             	lea    0x4(%edx),%eax
81006356:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006359:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100635c:	8d 48 04             	lea    0x4(%eax),%ecx
8100635f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006362:	8b 12                	mov    (%edx),%edx
81006364:	89 10                	mov    %edx,(%eax)
81006366:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100636a:	76 5e                	jbe    810063ca <_realloc_r+0x643>
8100636c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100636f:	8d 42 04             	lea    0x4(%edx),%eax
81006372:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006375:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006378:	8d 48 04             	lea    0x4(%eax),%ecx
8100637b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100637e:	8b 12                	mov    (%edx),%edx
81006380:	89 10                	mov    %edx,(%eax)
81006382:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006385:	8d 42 04             	lea    0x4(%edx),%eax
81006388:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100638b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100638e:	8d 48 04             	lea    0x4(%eax),%ecx
81006391:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006394:	8b 12                	mov    (%edx),%edx
81006396:	89 10                	mov    %edx,(%eax)
81006398:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100639c:	76 2c                	jbe    810063ca <_realloc_r+0x643>
8100639e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063a1:	8d 42 04             	lea    0x4(%edx),%eax
810063a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063aa:	8d 48 04             	lea    0x4(%eax),%ecx
810063ad:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063b0:	8b 12                	mov    (%edx),%edx
810063b2:	89 10                	mov    %edx,(%eax)
810063b4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063b7:	8d 42 04             	lea    0x4(%edx),%eax
810063ba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063c0:	8d 48 04             	lea    0x4(%eax),%ecx
810063c3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063c6:	8b 12                	mov    (%edx),%edx
810063c8:	89 10                	mov    %edx,(%eax)
810063ca:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063cd:	8d 42 04             	lea    0x4(%edx),%eax
810063d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063d6:	8d 48 04             	lea    0x4(%eax),%ecx
810063d9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063dc:	8b 12                	mov    (%edx),%edx
810063de:	89 10                	mov    %edx,(%eax)
810063e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063e3:	8d 42 04             	lea    0x4(%edx),%eax
810063e6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063ec:	8d 48 04             	lea    0x4(%eax),%ecx
810063ef:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063f2:	8b 12                	mov    (%edx),%edx
810063f4:	89 10                	mov    %edx,(%eax)
810063f6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810063f9:	8b 10                	mov    (%eax),%edx
810063fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063fe:	89 10                	mov    %edx,(%eax)
81006400:	e9 ad 01 00 00       	jmp    810065b2 <_realloc_r+0x82b>
81006405:	83 ec 04             	sub    $0x4,%esp
81006408:	ff 75 9c             	push   -0x64(%ebp)
8100640b:	ff 75 0c             	push   0xc(%ebp)
8100640e:	ff 75 a8             	push   -0x58(%ebp)
81006411:	e8 9a f7 ff ff       	call   81005bb0 <memmove>
81006416:	83 c4 10             	add    $0x10,%esp
81006419:	e9 94 01 00 00       	jmp    810065b2 <_realloc_r+0x82b>
8100641e:	83 ec 08             	sub    $0x8,%esp
81006421:	ff 75 10             	push   0x10(%ebp)
81006424:	ff 75 08             	push   0x8(%ebp)
81006427:	e8 92 c6 ff ff       	call   81002abe <_malloc_r>
8100642c:	83 c4 10             	add    $0x10,%esp
8100642f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006432:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006436:	75 18                	jne    81006450 <_realloc_r+0x6c9>
81006438:	83 ec 0c             	sub    $0xc,%esp
8100643b:	ff 75 08             	push   0x8(%ebp)
8100643e:	e8 5b d0 ff ff       	call   8100349e <__malloc_unlock>
81006443:	83 c4 10             	add    $0x10,%esp
81006446:	b8 00 00 00 00       	mov    $0x0,%eax
8100644b:	e9 0f 02 00 00       	jmp    8100665f <_realloc_r+0x8d8>
81006450:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006453:	83 e8 08             	sub    $0x8,%eax
81006456:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006459:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100645c:	8b 40 04             	mov    0x4(%eax),%eax
8100645f:	83 e0 fe             	and    $0xfffffffe,%eax
81006462:	89 c2                	mov    %eax,%edx
81006464:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006467:	01 d0                	add    %edx,%eax
81006469:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100646c:	75 17                	jne    81006485 <_realloc_r+0x6fe>
8100646e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006471:	8b 40 04             	mov    0x4(%eax),%eax
81006474:	83 e0 fc             	and    $0xfffffffc,%eax
81006477:	01 45 f0             	add    %eax,-0x10(%ebp)
8100647a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100647d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006480:	e9 2d 01 00 00       	jmp    810065b2 <_realloc_r+0x82b>
81006485:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006488:	83 e8 04             	sub    $0x4,%eax
8100648b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100648e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006492:	0f 87 de 00 00 00    	ja     81006576 <_realloc_r+0x7ef>
81006498:	8b 45 0c             	mov    0xc(%ebp),%eax
8100649b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100649e:	8b 45 a8             	mov    -0x58(%ebp),%eax
810064a1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810064a4:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810064a8:	0f 86 90 00 00 00    	jbe    8100653e <_realloc_r+0x7b7>
810064ae:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064b1:	8d 42 04             	lea    0x4(%edx),%eax
810064b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064b7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064ba:	8d 48 04             	lea    0x4(%eax),%ecx
810064bd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064c0:	8b 12                	mov    (%edx),%edx
810064c2:	89 10                	mov    %edx,(%eax)
810064c4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064c7:	8d 42 04             	lea    0x4(%edx),%eax
810064ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064cd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064d0:	8d 48 04             	lea    0x4(%eax),%ecx
810064d3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064d6:	8b 12                	mov    (%edx),%edx
810064d8:	89 10                	mov    %edx,(%eax)
810064da:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810064de:	76 5e                	jbe    8100653e <_realloc_r+0x7b7>
810064e0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064e3:	8d 42 04             	lea    0x4(%edx),%eax
810064e6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064e9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064ec:	8d 48 04             	lea    0x4(%eax),%ecx
810064ef:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064f2:	8b 12                	mov    (%edx),%edx
810064f4:	89 10                	mov    %edx,(%eax)
810064f6:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064f9:	8d 42 04             	lea    0x4(%edx),%eax
810064fc:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064ff:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006502:	8d 48 04             	lea    0x4(%eax),%ecx
81006505:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006508:	8b 12                	mov    (%edx),%edx
8100650a:	89 10                	mov    %edx,(%eax)
8100650c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006510:	76 2c                	jbe    8100653e <_realloc_r+0x7b7>
81006512:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006515:	8d 42 04             	lea    0x4(%edx),%eax
81006518:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100651b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100651e:	8d 48 04             	lea    0x4(%eax),%ecx
81006521:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006524:	8b 12                	mov    (%edx),%edx
81006526:	89 10                	mov    %edx,(%eax)
81006528:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100652b:	8d 42 04             	lea    0x4(%edx),%eax
8100652e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006531:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006534:	8d 48 04             	lea    0x4(%eax),%ecx
81006537:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100653a:	8b 12                	mov    (%edx),%edx
8100653c:	89 10                	mov    %edx,(%eax)
8100653e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006541:	8d 42 04             	lea    0x4(%edx),%eax
81006544:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006547:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100654a:	8d 48 04             	lea    0x4(%eax),%ecx
8100654d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006550:	8b 12                	mov    (%edx),%edx
81006552:	89 10                	mov    %edx,(%eax)
81006554:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006557:	8d 42 04             	lea    0x4(%edx),%eax
8100655a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100655d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006560:	8d 48 04             	lea    0x4(%eax),%ecx
81006563:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006566:	8b 12                	mov    (%edx),%edx
81006568:	89 10                	mov    %edx,(%eax)
8100656a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100656d:	8b 10                	mov    (%eax),%edx
8100656f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006572:	89 10                	mov    %edx,(%eax)
81006574:	eb 14                	jmp    8100658a <_realloc_r+0x803>
81006576:	83 ec 04             	sub    $0x4,%esp
81006579:	ff 75 98             	push   -0x68(%ebp)
8100657c:	ff 75 0c             	push   0xc(%ebp)
8100657f:	ff 75 a8             	push   -0x58(%ebp)
81006582:	e8 29 f6 ff ff       	call   81005bb0 <memmove>
81006587:	83 c4 10             	add    $0x10,%esp
8100658a:	83 ec 08             	sub    $0x8,%esp
8100658d:	ff 75 0c             	push   0xc(%ebp)
81006590:	ff 75 08             	push   0x8(%ebp)
81006593:	e8 76 ad ff ff       	call   8100130e <_free_r>
81006598:	83 c4 10             	add    $0x10,%esp
8100659b:	83 ec 0c             	sub    $0xc,%esp
8100659e:	ff 75 08             	push   0x8(%ebp)
810065a1:	e8 f8 ce ff ff       	call   8100349e <__malloc_unlock>
810065a6:	83 c4 10             	add    $0x10,%esp
810065a9:	8b 45 a8             	mov    -0x58(%ebp),%eax
810065ac:	e9 ae 00 00 00       	jmp    8100665f <_realloc_r+0x8d8>
810065b1:	90                   	nop
810065b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065b5:	2b 45 bc             	sub    -0x44(%ebp),%eax
810065b8:	89 45 94             	mov    %eax,-0x6c(%ebp)
810065bb:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810065bf:	76 5d                	jbe    8100661e <_realloc_r+0x897>
810065c1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810065c4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810065c7:	01 d0                	add    %edx,%eax
810065c9:	89 45 90             	mov    %eax,-0x70(%ebp)
810065cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065cf:	8b 40 04             	mov    0x4(%eax),%eax
810065d2:	83 e0 01             	and    $0x1,%eax
810065d5:	0b 45 bc             	or     -0x44(%ebp),%eax
810065d8:	89 c2                	mov    %eax,%edx
810065da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065dd:	89 50 04             	mov    %edx,0x4(%eax)
810065e0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810065e3:	83 c8 01             	or     $0x1,%eax
810065e6:	89 c2                	mov    %eax,%edx
810065e8:	8b 45 90             	mov    -0x70(%ebp),%eax
810065eb:	89 50 04             	mov    %edx,0x4(%eax)
810065ee:	8b 55 90             	mov    -0x70(%ebp),%edx
810065f1:	8b 45 94             	mov    -0x6c(%ebp),%eax
810065f4:	01 d0                	add    %edx,%eax
810065f6:	8b 50 04             	mov    0x4(%eax),%edx
810065f9:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810065fc:	8b 45 94             	mov    -0x6c(%ebp),%eax
810065ff:	01 c8                	add    %ecx,%eax
81006601:	83 ca 01             	or     $0x1,%edx
81006604:	89 50 04             	mov    %edx,0x4(%eax)
81006607:	8b 45 90             	mov    -0x70(%ebp),%eax
8100660a:	83 c0 08             	add    $0x8,%eax
8100660d:	83 ec 08             	sub    $0x8,%esp
81006610:	50                   	push   %eax
81006611:	ff 75 08             	push   0x8(%ebp)
81006614:	e8 f5 ac ff ff       	call   8100130e <_free_r>
81006619:	83 c4 10             	add    $0x10,%esp
8100661c:	eb 2d                	jmp    8100664b <_realloc_r+0x8c4>
8100661e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006621:	8b 40 04             	mov    0x4(%eax),%eax
81006624:	83 e0 01             	and    $0x1,%eax
81006627:	0b 45 f0             	or     -0x10(%ebp),%eax
8100662a:	89 c2                	mov    %eax,%edx
8100662c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100662f:	89 50 04             	mov    %edx,0x4(%eax)
81006632:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006635:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006638:	01 d0                	add    %edx,%eax
8100663a:	8b 50 04             	mov    0x4(%eax),%edx
8100663d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006640:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006643:	01 c8                	add    %ecx,%eax
81006645:	83 ca 01             	or     $0x1,%edx
81006648:	89 50 04             	mov    %edx,0x4(%eax)
8100664b:	83 ec 0c             	sub    $0xc,%esp
8100664e:	ff 75 08             	push   0x8(%ebp)
81006651:	e8 48 ce ff ff       	call   8100349e <__malloc_unlock>
81006656:	83 c4 10             	add    $0x10,%esp
81006659:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100665c:	83 c0 08             	add    $0x8,%eax
8100665f:	c9                   	leave  
81006660:	c3                   	ret    

81006661 <cleanup_glue>:
81006661:	55                   	push   %ebp
81006662:	89 e5                	mov    %esp,%ebp
81006664:	83 ec 08             	sub    $0x8,%esp
81006667:	8b 45 0c             	mov    0xc(%ebp),%eax
8100666a:	8b 00                	mov    (%eax),%eax
8100666c:	85 c0                	test   %eax,%eax
8100666e:	74 14                	je     81006684 <cleanup_glue+0x23>
81006670:	8b 45 0c             	mov    0xc(%ebp),%eax
81006673:	8b 00                	mov    (%eax),%eax
81006675:	83 ec 08             	sub    $0x8,%esp
81006678:	50                   	push   %eax
81006679:	ff 75 08             	push   0x8(%ebp)
8100667c:	e8 e0 ff ff ff       	call   81006661 <cleanup_glue>
81006681:	83 c4 10             	add    $0x10,%esp
81006684:	83 ec 08             	sub    $0x8,%esp
81006687:	ff 75 0c             	push   0xc(%ebp)
8100668a:	ff 75 08             	push   0x8(%ebp)
8100668d:	e8 7c ac ff ff       	call   8100130e <_free_r>
81006692:	83 c4 10             	add    $0x10,%esp
81006695:	90                   	nop
81006696:	c9                   	leave  
81006697:	c3                   	ret    

81006698 <_reclaim_reent>:
81006698:	55                   	push   %ebp
81006699:	89 e5                	mov    %esp,%ebp
8100669b:	83 ec 28             	sub    $0x28,%esp
8100669e:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810066a3:	39 45 08             	cmp    %eax,0x8(%ebp)
810066a6:	0f 84 49 01 00 00    	je     810067f5 <_reclaim_reent+0x15d>
810066ac:	8b 45 08             	mov    0x8(%ebp),%eax
810066af:	8b 40 4c             	mov    0x4c(%eax),%eax
810066b2:	85 c0                	test   %eax,%eax
810066b4:	74 64                	je     8100671a <_reclaim_reent+0x82>
810066b6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810066bd:	eb 3e                	jmp    810066fd <_reclaim_reent+0x65>
810066bf:	8b 45 08             	mov    0x8(%ebp),%eax
810066c2:	8b 50 4c             	mov    0x4c(%eax),%edx
810066c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066c8:	c1 e0 02             	shl    $0x2,%eax
810066cb:	01 d0                	add    %edx,%eax
810066cd:	8b 00                	mov    (%eax),%eax
810066cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066d2:	eb 1f                	jmp    810066f3 <_reclaim_reent+0x5b>
810066d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066d7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810066da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066dd:	8b 00                	mov    (%eax),%eax
810066df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066e2:	83 ec 08             	sub    $0x8,%esp
810066e5:	ff 75 e8             	push   -0x18(%ebp)
810066e8:	ff 75 08             	push   0x8(%ebp)
810066eb:	e8 1e ac ff ff       	call   8100130e <_free_r>
810066f0:	83 c4 10             	add    $0x10,%esp
810066f3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810066f7:	75 db                	jne    810066d4 <_reclaim_reent+0x3c>
810066f9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810066fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006700:	83 f8 1f             	cmp    $0x1f,%eax
81006703:	76 ba                	jbe    810066bf <_reclaim_reent+0x27>
81006705:	8b 45 08             	mov    0x8(%ebp),%eax
81006708:	8b 40 4c             	mov    0x4c(%eax),%eax
8100670b:	83 ec 08             	sub    $0x8,%esp
8100670e:	50                   	push   %eax
8100670f:	ff 75 08             	push   0x8(%ebp)
81006712:	e8 f7 ab ff ff       	call   8100130e <_free_r>
81006717:	83 c4 10             	add    $0x10,%esp
8100671a:	8b 45 08             	mov    0x8(%ebp),%eax
8100671d:	8b 40 40             	mov    0x40(%eax),%eax
81006720:	85 c0                	test   %eax,%eax
81006722:	74 15                	je     81006739 <_reclaim_reent+0xa1>
81006724:	8b 45 08             	mov    0x8(%ebp),%eax
81006727:	8b 40 40             	mov    0x40(%eax),%eax
8100672a:	83 ec 08             	sub    $0x8,%esp
8100672d:	50                   	push   %eax
8100672e:	ff 75 08             	push   0x8(%ebp)
81006731:	e8 d8 ab ff ff       	call   8100130e <_free_r>
81006736:	83 c4 10             	add    $0x10,%esp
81006739:	8b 45 08             	mov    0x8(%ebp),%eax
8100673c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006742:	85 c0                	test   %eax,%eax
81006744:	74 50                	je     81006796 <_reclaim_reent+0xfe>
81006746:	8b 45 08             	mov    0x8(%ebp),%eax
81006749:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100674f:	8b 55 08             	mov    0x8(%ebp),%edx
81006752:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81006758:	39 d0                	cmp    %edx,%eax
8100675a:	74 3a                	je     81006796 <_reclaim_reent+0xfe>
8100675c:	8b 45 08             	mov    0x8(%ebp),%eax
8100675f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006765:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006768:	eb 1f                	jmp    81006789 <_reclaim_reent+0xf1>
8100676a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100676d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006770:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006773:	8b 00                	mov    (%eax),%eax
81006775:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006778:	83 ec 08             	sub    $0x8,%esp
8100677b:	ff 75 e4             	push   -0x1c(%ebp)
8100677e:	ff 75 08             	push   0x8(%ebp)
81006781:	e8 88 ab ff ff       	call   8100130e <_free_r>
81006786:	83 c4 10             	add    $0x10,%esp
81006789:	8b 45 08             	mov    0x8(%ebp),%eax
8100678c:	05 4c 01 00 00       	add    $0x14c,%eax
81006791:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006794:	75 d4                	jne    8100676a <_reclaim_reent+0xd2>
81006796:	8b 45 08             	mov    0x8(%ebp),%eax
81006799:	8b 40 54             	mov    0x54(%eax),%eax
8100679c:	85 c0                	test   %eax,%eax
8100679e:	74 15                	je     810067b5 <_reclaim_reent+0x11d>
810067a0:	8b 45 08             	mov    0x8(%ebp),%eax
810067a3:	8b 40 54             	mov    0x54(%eax),%eax
810067a6:	83 ec 08             	sub    $0x8,%esp
810067a9:	50                   	push   %eax
810067aa:	ff 75 08             	push   0x8(%ebp)
810067ad:	e8 5c ab ff ff       	call   8100130e <_free_r>
810067b2:	83 c4 10             	add    $0x10,%esp
810067b5:	8b 45 08             	mov    0x8(%ebp),%eax
810067b8:	8b 40 38             	mov    0x38(%eax),%eax
810067bb:	85 c0                	test   %eax,%eax
810067bd:	74 36                	je     810067f5 <_reclaim_reent+0x15d>
810067bf:	8b 45 08             	mov    0x8(%ebp),%eax
810067c2:	8b 40 3c             	mov    0x3c(%eax),%eax
810067c5:	83 ec 0c             	sub    $0xc,%esp
810067c8:	ff 75 08             	push   0x8(%ebp)
810067cb:	ff d0                	call   *%eax
810067cd:	83 c4 10             	add    $0x10,%esp
810067d0:	8b 45 08             	mov    0x8(%ebp),%eax
810067d3:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810067d9:	85 c0                	test   %eax,%eax
810067db:	74 18                	je     810067f5 <_reclaim_reent+0x15d>
810067dd:	8b 45 08             	mov    0x8(%ebp),%eax
810067e0:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810067e6:	83 ec 08             	sub    $0x8,%esp
810067e9:	50                   	push   %eax
810067ea:	ff 75 08             	push   0x8(%ebp)
810067ed:	e8 6f fe ff ff       	call   81006661 <cleanup_glue>
810067f2:	83 c4 10             	add    $0x10,%esp
810067f5:	90                   	nop
810067f6:	c9                   	leave  
810067f7:	c3                   	ret    

810067f8 <strncmp>:
810067f8:	55                   	push   %ebp
810067f9:	89 e5                	mov    %esp,%ebp
810067fb:	83 ec 10             	sub    $0x10,%esp
810067fe:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006802:	75 0a                	jne    8100680e <strncmp+0x16>
81006804:	b8 00 00 00 00       	mov    $0x0,%eax
81006809:	e9 cb 00 00 00       	jmp    810068d9 <strncmp+0xe1>
8100680e:	8b 55 08             	mov    0x8(%ebp),%edx
81006811:	8b 45 0c             	mov    0xc(%ebp),%eax
81006814:	09 d0                	or     %edx,%eax
81006816:	83 e0 03             	and    $0x3,%eax
81006819:	85 c0                	test   %eax,%eax
8100681b:	0f 85 85 00 00 00    	jne    810068a6 <strncmp+0xae>
81006821:	8b 45 08             	mov    0x8(%ebp),%eax
81006824:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006827:	8b 45 0c             	mov    0xc(%ebp),%eax
8100682a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100682d:	eb 36                	jmp    81006865 <strncmp+0x6d>
8100682f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006833:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006837:	74 1d                	je     81006856 <strncmp+0x5e>
81006839:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100683c:	8b 00                	mov    (%eax),%eax
8100683e:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006844:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006847:	8b 00                	mov    (%eax),%eax
81006849:	f7 d0                	not    %eax
8100684b:	21 d0                	and    %edx,%eax
8100684d:	25 80 80 80 80       	and    $0x80808080,%eax
81006852:	85 c0                	test   %eax,%eax
81006854:	74 07                	je     8100685d <strncmp+0x65>
81006856:	b8 00 00 00 00       	mov    $0x0,%eax
8100685b:	eb 7c                	jmp    810068d9 <strncmp+0xe1>
8100685d:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006861:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006865:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81006869:	76 0e                	jbe    81006879 <strncmp+0x81>
8100686b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100686e:	8b 10                	mov    (%eax),%edx
81006870:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006873:	8b 00                	mov    (%eax),%eax
81006875:	39 c2                	cmp    %eax,%edx
81006877:	74 b6                	je     8100682f <strncmp+0x37>
81006879:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100687c:	89 45 08             	mov    %eax,0x8(%ebp)
8100687f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006882:	89 45 0c             	mov    %eax,0xc(%ebp)
81006885:	eb 1f                	jmp    810068a6 <strncmp+0xae>
81006887:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100688b:	74 0a                	je     81006897 <strncmp+0x9f>
8100688d:	8b 45 08             	mov    0x8(%ebp),%eax
81006890:	0f b6 00             	movzbl (%eax),%eax
81006893:	84 c0                	test   %al,%al
81006895:	75 07                	jne    8100689e <strncmp+0xa6>
81006897:	b8 00 00 00 00       	mov    $0x0,%eax
8100689c:	eb 3b                	jmp    810068d9 <strncmp+0xe1>
8100689e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810068a2:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810068a6:	8b 45 10             	mov    0x10(%ebp),%eax
810068a9:	8d 50 ff             	lea    -0x1(%eax),%edx
810068ac:	89 55 10             	mov    %edx,0x10(%ebp)
810068af:	85 c0                	test   %eax,%eax
810068b1:	74 10                	je     810068c3 <strncmp+0xcb>
810068b3:	8b 45 08             	mov    0x8(%ebp),%eax
810068b6:	0f b6 10             	movzbl (%eax),%edx
810068b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810068bc:	0f b6 00             	movzbl (%eax),%eax
810068bf:	38 c2                	cmp    %al,%dl
810068c1:	74 c4                	je     81006887 <strncmp+0x8f>
810068c3:	8b 45 08             	mov    0x8(%ebp),%eax
810068c6:	0f b6 00             	movzbl (%eax),%eax
810068c9:	0f b6 d0             	movzbl %al,%edx
810068cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810068cf:	0f b6 00             	movzbl (%eax),%eax
810068d2:	0f b6 c8             	movzbl %al,%ecx
810068d5:	89 d0                	mov    %edx,%eax
810068d7:	29 c8                	sub    %ecx,%eax
810068d9:	c9                   	leave  
810068da:	c3                   	ret    

810068db <__get_global_locale>:
810068db:	55                   	push   %ebp
810068dc:	89 e5                	mov    %esp,%ebp
810068de:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810068e3:	5d                   	pop    %ebp
810068e4:	c3                   	ret    

810068e5 <__get_current_locale>:
810068e5:	55                   	push   %ebp
810068e6:	89 e5                	mov    %esp,%ebp
810068e8:	e8 ee ff ff ff       	call   810068db <__get_global_locale>
810068ed:	5d                   	pop    %ebp
810068ee:	c3                   	ret    

810068ef <_wcrtomb_r>:
810068ef:	55                   	push   %ebp
810068f0:	89 e5                	mov    %esp,%ebp
810068f2:	83 ec 18             	sub    $0x18,%esp
810068f5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810068fc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006900:	75 21                	jne    81006923 <_wcrtomb_r+0x34>
81006902:	e8 de ff ff ff       	call   810068e5 <__get_current_locale>
81006907:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100690d:	ff 75 14             	push   0x14(%ebp)
81006910:	6a 00                	push   $0x0
81006912:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006915:	52                   	push   %edx
81006916:	ff 75 08             	push   0x8(%ebp)
81006919:	ff d0                	call   *%eax
8100691b:	83 c4 10             	add    $0x10,%esp
8100691e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006921:	eb 1f                	jmp    81006942 <_wcrtomb_r+0x53>
81006923:	e8 bd ff ff ff       	call   810068e5 <__get_current_locale>
81006928:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100692e:	ff 75 14             	push   0x14(%ebp)
81006931:	ff 75 10             	push   0x10(%ebp)
81006934:	ff 75 0c             	push   0xc(%ebp)
81006937:	ff 75 08             	push   0x8(%ebp)
8100693a:	ff d0                	call   *%eax
8100693c:	83 c4 10             	add    $0x10,%esp
8100693f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006942:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006946:	75 19                	jne    81006961 <_wcrtomb_r+0x72>
81006948:	8b 45 14             	mov    0x14(%ebp),%eax
8100694b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006951:	8b 45 08             	mov    0x8(%ebp),%eax
81006954:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100695a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100695f:	eb 03                	jmp    81006964 <_wcrtomb_r+0x75>
81006961:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006964:	c9                   	leave  
81006965:	c3                   	ret    

81006966 <wcrtomb>:
81006966:	55                   	push   %ebp
81006967:	89 e5                	mov    %esp,%ebp
81006969:	83 ec 28             	sub    $0x28,%esp
8100696c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006973:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81006978:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100697b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100697f:	75 21                	jne    810069a2 <wcrtomb+0x3c>
81006981:	e8 5f ff ff ff       	call   810068e5 <__get_current_locale>
81006986:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100698c:	ff 75 10             	push   0x10(%ebp)
8100698f:	6a 00                	push   $0x0
81006991:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81006994:	52                   	push   %edx
81006995:	ff 75 f0             	push   -0x10(%ebp)
81006998:	ff d0                	call   *%eax
8100699a:	83 c4 10             	add    $0x10,%esp
8100699d:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069a0:	eb 1f                	jmp    810069c1 <wcrtomb+0x5b>
810069a2:	e8 3e ff ff ff       	call   810068e5 <__get_current_locale>
810069a7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810069ad:	ff 75 10             	push   0x10(%ebp)
810069b0:	ff 75 0c             	push   0xc(%ebp)
810069b3:	ff 75 08             	push   0x8(%ebp)
810069b6:	ff 75 f0             	push   -0x10(%ebp)
810069b9:	ff d0                	call   *%eax
810069bb:	83 c4 10             	add    $0x10,%esp
810069be:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069c1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810069c5:	75 19                	jne    810069e0 <wcrtomb+0x7a>
810069c7:	8b 45 10             	mov    0x10(%ebp),%eax
810069ca:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810069d0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810069d3:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810069d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810069de:	eb 03                	jmp    810069e3 <wcrtomb+0x7d>
810069e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069e3:	c9                   	leave  
810069e4:	c3                   	ret    

810069e5 <__get_global_locale>:
810069e5:	55                   	push   %ebp
810069e6:	89 e5                	mov    %esp,%ebp
810069e8:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810069ed:	5d                   	pop    %ebp
810069ee:	c3                   	ret    

810069ef <__get_current_locale>:
810069ef:	55                   	push   %ebp
810069f0:	89 e5                	mov    %esp,%ebp
810069f2:	e8 ee ff ff ff       	call   810069e5 <__get_global_locale>
810069f7:	5d                   	pop    %ebp
810069f8:	c3                   	ret    

810069f9 <_wctomb_r>:
810069f9:	55                   	push   %ebp
810069fa:	89 e5                	mov    %esp,%ebp
810069fc:	83 ec 08             	sub    $0x8,%esp
810069ff:	e8 eb ff ff ff       	call   810069ef <__get_current_locale>
81006a04:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81006a0a:	ff 75 14             	push   0x14(%ebp)
81006a0d:	ff 75 10             	push   0x10(%ebp)
81006a10:	ff 75 0c             	push   0xc(%ebp)
81006a13:	ff 75 08             	push   0x8(%ebp)
81006a16:	ff d0                	call   *%eax
81006a18:	83 c4 10             	add    $0x10,%esp
81006a1b:	c9                   	leave  
81006a1c:	c3                   	ret    

81006a1d <__ascii_wctomb>:
81006a1d:	55                   	push   %ebp
81006a1e:	89 e5                	mov    %esp,%ebp
81006a20:	83 ec 10             	sub    $0x10,%esp
81006a23:	8b 45 10             	mov    0x10(%ebp),%eax
81006a26:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a29:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006a2d:	75 07                	jne    81006a36 <__ascii_wctomb+0x19>
81006a2f:	b8 00 00 00 00       	mov    $0x0,%eax
81006a34:	eb 28                	jmp    81006a5e <__ascii_wctomb+0x41>
81006a36:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81006a3d:	76 10                	jbe    81006a4f <__ascii_wctomb+0x32>
81006a3f:	8b 45 08             	mov    0x8(%ebp),%eax
81006a42:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006a48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006a4d:	eb 0f                	jmp    81006a5e <__ascii_wctomb+0x41>
81006a4f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a52:	89 c2                	mov    %eax,%edx
81006a54:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a57:	88 10                	mov    %dl,(%eax)
81006a59:	b8 01 00 00 00       	mov    $0x1,%eax
81006a5e:	c9                   	leave  
81006a5f:	c3                   	ret    

81006a60 <__env_lock>:
81006a60:	55                   	push   %ebp
81006a61:	89 e5                	mov    %esp,%ebp
81006a63:	90                   	nop
81006a64:	5d                   	pop    %ebp
81006a65:	c3                   	ret    

81006a66 <__env_unlock>:
81006a66:	55                   	push   %ebp
81006a67:	89 e5                	mov    %esp,%ebp
81006a69:	90                   	nop
81006a6a:	5d                   	pop    %ebp
81006a6b:	c3                   	ret    

81006a6c <_fstat_r>:
81006a6c:	55                   	push   %ebp
81006a6d:	89 e5                	mov    %esp,%ebp
81006a6f:	83 ec 18             	sub    $0x18,%esp
81006a72:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81006a79:	00 00 00 
81006a7c:	83 ec 08             	sub    $0x8,%esp
81006a7f:	ff 75 10             	push   0x10(%ebp)
81006a82:	ff 75 0c             	push   0xc(%ebp)
81006a85:	e8 f8 9d ff ff       	call   81000882 <fstat>
81006a8a:	83 c4 10             	add    $0x10,%esp
81006a8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a90:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006a94:	75 14                	jne    81006aaa <_fstat_r+0x3e>
81006a96:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81006a9b:	85 c0                	test   %eax,%eax
81006a9d:	74 0b                	je     81006aaa <_fstat_r+0x3e>
81006a9f:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81006aa5:	8b 45 08             	mov    0x8(%ebp),%eax
81006aa8:	89 10                	mov    %edx,(%eax)
81006aaa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006aad:	c9                   	leave  
81006aae:	c3                   	ret    

81006aaf <_isatty_r>:
81006aaf:	55                   	push   %ebp
81006ab0:	89 e5                	mov    %esp,%ebp
81006ab2:	83 ec 18             	sub    $0x18,%esp
81006ab5:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81006abc:	00 00 00 
81006abf:	83 ec 0c             	sub    $0xc,%esp
81006ac2:	ff 75 0c             	push   0xc(%ebp)
81006ac5:	e8 97 9d ff ff       	call   81000861 <isatty>
81006aca:	83 c4 10             	add    $0x10,%esp
81006acd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ad0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006ad4:	75 14                	jne    81006aea <_isatty_r+0x3b>
81006ad6:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81006adb:	85 c0                	test   %eax,%eax
81006add:	74 0b                	je     81006aea <_isatty_r+0x3b>
81006adf:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81006ae5:	8b 45 08             	mov    0x8(%ebp),%eax
81006ae8:	89 10                	mov    %edx,(%eax)
81006aea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006aed:	c9                   	leave  
81006aee:	c3                   	ret    
