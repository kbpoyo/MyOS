
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000817

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000084d0 memsz 0x00008b80 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000073ef  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000006cc  81007400  81007400  00008400  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007ae0  81007ae0  00008ae0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  810084e0  810084e0  000094d0  2**5
                  ALLOC
  4 .debug_info   00025f31  00000000  00000000  000094d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 0000891d  00000000  00000000  0002f401  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000008c8  00000000  00000000  00037d20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00005355  00000000  00000000  000385e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000168a  00000000  00000000  0003d93d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000015e8  00000000  00000000  0003efc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  000405af  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001be0  00000000  00000000  000405ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  000421cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
810084e0 l     O .bss	00000200 cmd_buf
81007ae0 l     O .data	00000004 prompt
810086e0 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	000001e8 do_less
81007620 l     O .rodata	00000048 cmd_list
810004c8 l     F .text	0000003e cli_init
81000506 l     F .text	00000033 show_prompt
81000539 l     F .text	00000043 find_builtin
8100057c l     F .text	00000049 run_builtin
810005c5 l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810011ca l     F .text	000000ad std
81001277 l     F .text	0000001b stdin_init
81001292 l     F .text	0000001b stdout_init
810012ad l     F .text	0000001b stderr_init
81008aec l     O .bss	00000004 __sfp_recursive_mutex
81008af0 l     O .bss	00000004 __sinit_recursive_mutex
81001570 l     F .text	0000000a __fp_lock
8100157a l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81008afc l     O .bss	00000004 optwhere
81008b00 l     O .bss	00000004 permute_from
81008b04 l     O .bss	00000004 num_nonopts
810028b5 l     F .text	0000007b reverse_argv_elements
81002930 l     F .text	00000036 permute
81002966 l     F .text	00000031 is_option
81002997 l     F .text	00000059 read_globals
810029f0 l     F .text	00000052 write_globals
81002a42 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007b00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003866 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810043ad l       .text	00000000 L20
81004364 l       .text	00000000 L5
810043aa l       .text	00000000 L15
81004370 l       .text	00000000 L8
81004391 l       .text	00000000 L9
810043a0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810043ff l       .text	00000000 L4
810043f1 l       .text	00000000 BYTECMP
810043ec l       .text	00000000 L5
810043f3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008b68 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
8100464d l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81005ccb l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100610b l       .text	00000000 L25
810060b2 l       .text	00000000 L5
810060fe l       .text	00000000 L14
81006104 l       .text	00000000 L19
810060c3 l       .text	00000000 L10
810060f0 l       .text	00000000 L9
810060f3 l       .text	00000000 L15
8100613e l       .text	00000000 L26
81006141 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006246 l       .text	00000000 L5
8100627e l       .text	00000000 L15
81006250 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100638c l     F .text	0000000a __locale_ctype_ptr_l
81006396 l     F .text	0000000a __get_global_locale
810063a0 l     F .text	0000000a __get_current_locale
810063aa l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81008b70 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81006b70 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81008350 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006eaf l     F .text	0000000a __get_global_locale
81006eb9 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006f9b l     F .text	0000000a __get_global_locale
81006fa5 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81007031 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100725e l     F .text	0000000a __get_global_locale
81007268 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81007368 l     F .text	0000000a __get_global_locale
81007372 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008b78 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81008b7c l     O .bss	00000004 __env_recursive_mutex
81006e6f g     F .text	00000040 _isatty_r
81005b34 g     F .text	00000037 cleanup_glue
81005168 g     F .text	000000d6 _puts_r
81006f55 g     F .text	00000046 _lseek_r
81000966 g     F .text	0000001b yield
81006a22 g     F .text	000000ba __sflags
81006372 g     F .text	0000001a strtok_r
81005133 g     F .text	00000035 printf
81007272 g     F .text	00000077 _wcrtomb_r
81005fe2 g     F .text	0000004a __sseek
810014bf g     F .text	00000099 __sinit
810065ef g     F .text	00000112 __swbuf_r
81006ec3 g     F .text	0000005f _setlocale_r
810012c8 g     F .text	0000006f __sfmoreglue
8100456b g     F .text	00000006 __malloc_unlock
81004450 g       .text	00000000 memmove
8100359e g     F .text	00000049 getopt_long
810014a5 g     F .text	0000001a _cleanup
810062b2 g     F .text	000000c0 __strtok_r
81006a18 g     F .text	0000000a __errno
81006d45 g     F .text	00000020 getenv
81002224 g     F .text	00000043 _fstat_r
81008b6c g     O .bss	00000004 errno
81005f7d g     F .text	0000000a __seofread
81000939 g     F .text	0000002d execve
810008db g     F .text	0000001b getpid
810011ab g     F .text	0000001f fgets
81004408 g       .text	00000000 memcpy
81001484 g     F .text	00000021 _cleanup_r
8100523e g     F .text	0000001c puts
8100382d g     F .text	0000001c malloc
81005106 g     F .text	0000002d _printf_r
81000a50 g     F .text	00000021 isatty
810036a3 g     F .text	0000000a __getreent
81008af4 g     O .bss	00000004 optarg
81008b20 g     O .bss	00000004 __malloc_top_pad
810084e0 g       .bss	00000000 __bss_start__
81002267 g     F .text	0000049e __sfvwrite_r
81005ef9 g     F .text	00000040 _sbrk_r
81007ae4 g     O .data	00000004 opterr
81000b85 g     F .text	00000040 readdir
81007135 g     F .text	00000046 _read_r
81000c72 g     F .text	00000107 _fclose_r
81001014 g     F .text	00000039 fflush
81008b24 g     O .bss	00000004 __malloc_max_sbrked_mem
81000a23 g     F .text	0000002d lseek
81007778 g     O .rodata	00000004 _global_impure_ptr
8100525a g     F .text	000008da _realloc_r
810065a1 g     F .text	00000025 strtol_l
81006c86 g     F .text	00000057 _fputwc_r
81001584 g     F .text	00000024 __fp_lock_all
810065c6 g     F .text	00000029 strtol
81001d53 g     F .text	000004b1 _fseeko_r
81005b6b g     F .text	00000160 _reclaim_reent
81006adc g     F .text	00000046 _fputc_r
810009d5 g     F .text	0000002d write
81007097 g     F .text	0000004b _putc_r
810084cc g     O .data	00000004 environ
81000a71 g     F .text	00000027 fstat
810016e9 g     F .text	0000002c fprintf
8100367c g     F .text	00000027 __getopt_long_only_r
81002204 g     F .text	00000020 fseeko
81000c14 g     F .text	0000001a _atoi_r
81001d33 g     F .text	00000020 fseek
81000865 g     F .text	0000004c sys_call
810046b3 g     F .text	000000a8 __sfputs_r
81008af8 g     O .bss	00000004 optind
81001558 g     F .text	00000006 __sfp_lock_acquire
81004320 g       .text	00000000 memchr
81008b80 g       .bss	00000000 __bss_end__
810017da g     F .text	000003db _free_r
81000afc g     F .text	00000021 wait
81007840 g     O .rodata	00000180 _ctype_b
81006f22 g     F .text	00000014 __locale_mb_cur_max
810068c3 g     F .text	00000115 __call_exitprocs
8100834c g     O .data	00000004 __malloc_sbrk_base
81000817 g       .text	00000000 _start
810009a8 g     F .text	0000002d read
810050c0 g     F .text	00000046 _open_r
8100717b g     F .text	000000e3 strncmp
81003655 g     F .text	00000027 __getopt_long_r
81008b40 g     O .bss	00000028 __malloc_current_mallinfo
81005106 g     F .text	0000002d _iprintf_r
810069d8 g     F .text	00000040 _close_r
81006289 g     F .text	00000029 strtok
810043b5 g       .text	00000000 memcmp
810027d8 g     F .text	000000b8 _fwrite_r
8100091e g     F .text	0000001b fork
81006768 g     F .text	0000015b __swsetup_r
81001337 g     F .text	0000014d __sfp
81007f40 g     O .data	00000408 __malloc_av_
8100156a g     F .text	00000006 __sinit_lock_release
81005f39 g     F .text	00000044 __sread
81004565 g     F .text	00000006 __malloc_lock
810016c0 g     F .text	00000029 _fprintf_r
81000a98 g     F .text	00000021 sbrk
81000fbc g     F .text	00000058 _fflush_r
81000827 g     F .text	0000003e cstart
810016a1 g     F .text	0000001f fopen
81003557 g     F .text	00000047 getopt
810044dd g       .text	00000000 memset
81000683 g     F .text	00000194 main
81008b28 g     O .bss	00000004 __malloc_max_total_mem
81006701 g     F .text	00000021 __swbuf
8100602c g     F .text	00000025 __sclose
81000d79 g     F .text	0000001d fclose
8100657c g     F .text	00000025 _strtol_r
81006d65 g     F .text	000000ed _findenv_r
81003af9 g     F .text	00000822 _malloc_r
810073a0 g     F .text	00000043 __ascii_wctomb
81000b1d g     F .text	00000068 opendir
810016c0 g     F .text	00000029 _fiprintf_r
810073e9 g     F .text	00000006 __env_unlock
81006d25 g     F .text	00000020 _findenv
81002705 g     F .text	00000068 _fwalk
8100104d g     F .text	0000015e _fgets_r
81006faf g     F .text	0000002a _mbtowc_r
810070e2 g     F .text	00000053 putc
810035e7 g     F .text	00000049 getopt_long_only
81001bb5 g     F .text	00000161 _malloc_trim_r
8100615c g     F .text	000000a5 strcmp
8100475b g     F .text	00000025 vfiprintf
81000ab9 g     F .text	00000021 dup
81005133 g     F .text	00000035 iprintf
81008b74 g     O .bss	00000004 _PathLocale
81006722 g     F .text	00000046 _write_r
81006f36 g     F .text	0000001f setlocale
81004ad6 g     F .text	0000019b _printf_common
81007f24 g     O .data	00000004 _impure_ptr
81000d96 g     F .text	00000226 __sflush_r
81001d16 g     F .text	0000001d _fseek_r
81005cf8 g     F .text	00000201 __srefill_r
81006fd9 g     F .text	00000058 __ascii_mbtowc
810015a8 g     F .text	00000024 __fp_unlock_all
81006b22 g     F .text	0000004e fputc
810008f6 g     F .text	00000028 print_msg
81007ae8 g     O .data	00000004 optopt
8100379a g     F .text	00000093 __swhatbuf_r
81002890 g     F .text	00000025 fwrite
81006bd6 g     F .text	000000b0 __fputwc
81001715 g     F .text	000000a6 _fputs_r
81005f87 g     F .text	0000005b __swrite
81008348 g     O .data	00000004 __malloc_trim_threshold
81000c2e g     F .text	00000044 exit
810016e9 g     F .text	0000002c fiprintf
81004780 g     F .text	00000356 _vfiprintf_r
8100276d g     F .text	0000006b _fwalk_reent
8100155e g     F .text	00000006 __sfp_lock_release
81000bfa g     F .text	0000001a atoi
810079c0 g     O .rodata	00000101 _ctype_
81003630 g     F .text	00000025 __getopt_r
810015cc g     F .text	000000d5 _fopen_r
81000ada g     F .text	00000022 _exit
810036ad g     F .text	000000ed __smakebuf_r
81006210 g       .text	00000000 strlen
81004c71 g     F .text	0000044f _printf_i
81000981 g     F .text	00000027 open
81004571 g     F .text	000000dc __sprint_r
81006060 g       .text	00000000 strchr
810017bb g     F .text	0000001f fputs
81000bc5 g     F .text	00000035 closedir
8100737c g     F .text	00000024 _wctomb_r
810073e3 g     F .text	00000006 __env_lock
81004780 g     F .text	00000356 _vfprintf_r
810008b1 g     F .text	0000002a msleep
810072e9 g     F .text	0000007f wcrtomb
81000a02 g     F .text	00000021 close
81008360 g     O .data	0000016c __global_locale
8100475b g     F .text	00000025 vfprintf
81006cdd g     F .text	00000048 fputwc
81003849 g     F .text	0000001d free
81001564 g     F .text	00000006 __sinit_lock_acquire
81006e52 g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 e0 8a 00 81       	mov    0x81008ae0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 74 00 81       	push   $0x81007406
81000025:	e8 09 51 00 00       	call   81005133 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 e4 8a 00 81       	mov    0x81008ae4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 11 74 00 81       	push   $0x81007411
81000050:	68 16 74 00 81       	push   $0x81007416
81000055:	e8 d9 50 00 00       	call   81005133 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 19 74 00 81       	push   $0x81007419
81000065:	68 16 74 00 81       	push   $0x81007416
8100006a:	e8 c4 50 00 00       	call   81005133 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 15 36 00 00       	call   810036a3 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 05 11 00 00       	call   810011ab <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 82 51 00 00       	call   8100523e <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 f8 8a 00 81 01 	movl   $0x1,0x81008af8
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 20 74 00 81       	push   $0x81007420
81000107:	e8 32 51 00 00       	call   8100523e <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 26 74 00 81       	push   $0x81007426
81000117:	e8 22 51 00 00       	call   8100523e <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 38 74 00 81       	push   $0x81007438
81000127:	e8 12 51 00 00       	call   8100523e <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 f4 8a 00 81       	mov    0x81008af4,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 b3 0a 00 00       	call   81000bfa <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 f4 8a 00 81       	mov    0x81008af4,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d f4 8a 00 81    	mov    0x81008af4,%ebx
8100015e:	e8 40 35 00 00       	call   810036a3 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 58 74 00 81       	push   $0x81007458
8100016f:	50                   	push   %eax
81000170:	e8 74 15 00 00       	call   810016e9 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 77 74 00 81       	push   $0x81007477
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 c1 33 00 00       	call   81003557 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 f2 34 00 00       	call   810036a3 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 7c 74 00 81       	push   $0x8100747c
810001be:	e8 cd 26 00 00       	call   81002890 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 f8 8a 00 81       	mov    0x81008af8,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 c7 34 00 00       	call   810036a3 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 af 74 00 81       	push   $0x810074af
810001e9:	e8 a2 26 00 00       	call   81002890 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 f8 8a 00 81       	mov    0x81008af8,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 1c 50 00 00       	call   8100523e <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 e3 09 00 00       	call   81000c2e <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 cb 74 00 81       	push   $0x810074cb
81000259:	e8 bf 08 00 00       	call   81000b1d <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 d0 74 00 81       	push   $0x810074d0
81000272:	e8 c7 4f 00 00       	call   8100523e <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 e1 74 00 81       	push   $0x810074e1
810002ac:	e8 82 4e 00 00       	call   81005133 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 c6 08 00 00       	call   81000b85 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 ef 08 00 00       	call   81000bc5 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 14             	sub    $0x14,%esp
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "l:h")) != -1) {
810002e7:	e9 a6 00 00 00       	jmp    81000392 <do_less+0xb2>
    switch (ch) {
810002ec:	83 7d f4 6c          	cmpl   $0x6c,-0xc(%ebp)
810002f0:	0f 84 9c 00 00 00    	je     81000392 <do_less+0xb2>
810002f6:	83 7d f4 6c          	cmpl   $0x6c,-0xc(%ebp)
810002fa:	0f 8f 91 00 00 00    	jg     81000391 <do_less+0xb1>
81000300:	83 7d f4 3f          	cmpl   $0x3f,-0xc(%ebp)
81000304:	74 4e                	je     81000354 <do_less+0x74>
81000306:	83 7d f4 68          	cmpl   $0x68,-0xc(%ebp)
8100030a:	0f 85 81 00 00 00    	jne    81000391 <do_less+0xb1>
      case 'h':
        puts("help:");
81000310:	83 ec 0c             	sub    $0xc,%esp
81000313:	68 20 74 00 81       	push   $0x81007420
81000318:	e8 21 4f 00 00       	call   8100523e <puts>
8100031d:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000320:	83 ec 0c             	sub    $0xc,%esp
81000323:	68 eb 74 00 81       	push   $0x810074eb
81000328:	e8 11 4f 00 00       	call   8100523e <puts>
8100032d:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000330:	83 ec 0c             	sub    $0xc,%esp
81000333:	68 fe 74 00 81       	push   $0x810074fe
81000338:	e8 01 4f 00 00       	call   8100523e <puts>
8100033d:	83 c4 10             	add    $0x10,%esp
        optind = 1;  // getopt每次查找都从optind处开始
81000340:	c7 05 f8 8a 00 81 01 	movl   $0x1,0x81008af8
81000347:	00 00 00 
        return 0;
8100034a:	b8 00 00 00 00       	mov    $0x0,%eax
8100034f:	e9 6f 01 00 00       	jmp    810004c3 <do_less+0x1e3>
      case 'l':
        break;
      case '?':  // 找到未指定选项
        if (optarg) {
81000354:	a1 f4 8a 00 81       	mov    0x81008af4,%eax
81000359:	85 c0                	test   %eax,%eax
8100035b:	74 20                	je     8100037d <do_less+0x9d>
          fprintf(stderr,
8100035d:	8b 1d f4 8a 00 81    	mov    0x81008af4,%ebx
81000363:	e8 3b 33 00 00       	call   810036a3 <__getreent>
81000368:	8b 40 0c             	mov    0xc(%eax),%eax
8100036b:	83 ec 04             	sub    $0x4,%esp
8100036e:	53                   	push   %ebx
8100036f:	68 58 74 00 81       	push   $0x81007458
81000374:	50                   	push   %eax
81000375:	e8 6f 13 00 00       	call   810016e9 <fiprintf>
8100037a:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        optind = 1;  // getopt每次查找都从optind处开始
8100037d:	c7 05 f8 8a 00 81 01 	movl   $0x1,0x81008af8
81000384:	00 00 00 
        return -1;
81000387:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038c:	e9 32 01 00 00       	jmp    810004c3 <do_less+0x1e3>
      default:
        break;
81000391:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "l:h")) != -1) {
81000392:	83 ec 04             	sub    $0x4,%esp
81000395:	68 15 75 00 81       	push   $0x81007515
8100039a:	ff 75 0c             	push   0xc(%ebp)
8100039d:	ff 75 08             	push   0x8(%ebp)
810003a0:	e8 b2 31 00 00       	call   81003557 <getopt>
810003a5:	83 c4 10             	add    $0x10,%esp
810003a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810003ab:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810003af:	0f 85 37 ff ff ff    	jne    810002ec <do_less+0xc>
    }
  }

  if (optind >
810003b5:	a1 f8 8a 00 81       	mov    0x81008af8,%eax
810003ba:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bd:	7f 24                	jg     810003e3 <do_less+0x103>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bf:	e8 df 32 00 00       	call   810036a3 <__getreent>
810003c4:	8b 40 0c             	mov    0xc(%eax),%eax
810003c7:	50                   	push   %eax
810003c8:	6a 18                	push   $0x18
810003ca:	6a 01                	push   $0x1
810003cc:	68 19 75 00 81       	push   $0x81007519
810003d1:	e8 ba 24 00 00       	call   81002890 <fwrite>
810003d6:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003de:	e9 e0 00 00 00       	jmp    810004c3 <do_less+0x1e3>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e3:	a1 f8 8a 00 81       	mov    0x81008af8,%eax
810003e8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f2:	01 d0                	add    %edx,%eax
810003f4:	8b 00                	mov    (%eax),%eax
810003f6:	83 ec 08             	sub    $0x8,%esp
810003f9:	68 32 75 00 81       	push   $0x81007532
810003fe:	50                   	push   %eax
810003ff:	e8 9d 12 00 00       	call   810016a1 <fopen>
81000404:	83 c4 10             	add    $0x10,%esp
81000407:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (file == NULL) {
8100040a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100040e:	75 3e                	jne    8100044e <do_less+0x16e>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
81000410:	a1 f8 8a 00 81       	mov    0x81008af8,%eax
81000415:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041f:	01 d0                	add    %edx,%eax
81000421:	8b 18                	mov    (%eax),%ebx
81000423:	e8 7b 32 00 00       	call   810036a3 <__getreent>
81000428:	8b 40 0c             	mov    0xc(%eax),%eax
8100042b:	83 ec 04             	sub    $0x4,%esp
8100042e:	53                   	push   %ebx
8100042f:	68 34 75 00 81       	push   $0x81007534
81000434:	50                   	push   %eax
81000435:	e8 af 12 00 00       	call   810016e9 <fiprintf>
8100043a:	83 c4 10             	add    $0x10,%esp
    optind = 1;
8100043d:	c7 05 f8 8a 00 81 01 	movl   $0x1,0x81008af8
81000444:	00 00 00 
    return -1;
81000447:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100044c:	eb 75                	jmp    810004c3 <do_less+0x1e3>
  }
  

  //读取文件
  int buf_len = 255;
8100044e:	c7 45 ec ff 00 00 00 	movl   $0xff,-0x14(%ebp)
  char *buf = (char *)malloc(buf_len);
81000455:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000458:	83 ec 0c             	sub    $0xc,%esp
8100045b:	50                   	push   %eax
8100045c:	e8 cc 33 00 00       	call   8100382d <malloc>
81000461:	83 c4 10             	add    $0x10,%esp
81000464:	89 45 e8             	mov    %eax,-0x18(%ebp)
  while (fgets(buf, buf_len, file) != NULL) {
81000467:	eb 17                	jmp    81000480 <do_less+0x1a0>
    fputs(buf, stdout);
81000469:	e8 35 32 00 00       	call   810036a3 <__getreent>
8100046e:	8b 40 08             	mov    0x8(%eax),%eax
81000471:	83 ec 08             	sub    $0x8,%esp
81000474:	50                   	push   %eax
81000475:	ff 75 e8             	push   -0x18(%ebp)
81000478:	e8 3e 13 00 00       	call   810017bb <fputs>
8100047d:	83 c4 10             	add    $0x10,%esp
  while (fgets(buf, buf_len, file) != NULL) {
81000480:	83 ec 04             	sub    $0x4,%esp
81000483:	ff 75 f0             	push   -0x10(%ebp)
81000486:	ff 75 ec             	push   -0x14(%ebp)
81000489:	ff 75 e8             	push   -0x18(%ebp)
8100048c:	e8 1a 0d 00 00       	call   810011ab <fgets>
81000491:	83 c4 10             	add    $0x10,%esp
81000494:	85 c0                	test   %eax,%eax
81000496:	75 d1                	jne    81000469 <do_less+0x189>
  }

  free(buf);
81000498:	83 ec 0c             	sub    $0xc,%esp
8100049b:	ff 75 e8             	push   -0x18(%ebp)
8100049e:	e8 a6 33 00 00       	call   81003849 <free>
810004a3:	83 c4 10             	add    $0x10,%esp
  fclose(file);
810004a6:	83 ec 0c             	sub    $0xc,%esp
810004a9:	ff 75 f0             	push   -0x10(%ebp)
810004ac:	e8 c8 08 00 00       	call   81000d79 <fclose>
810004b1:	83 c4 10             	add    $0x10,%esp
  optind = 1;
810004b4:	c7 05 f8 8a 00 81 01 	movl   $0x1,0x81008af8
810004bb:	00 00 00 
  return 0;
810004be:	b8 00 00 00 00       	mov    $0x0,%eax
}
810004c3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810004c6:	c9                   	leave  
810004c7:	c3                   	ret    

810004c8 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810004c8:	55                   	push   %ebp
810004c9:	89 e5                	mov    %esp,%ebp
810004cb:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810004ce:	a1 e0 7a 00 81       	mov    0x81007ae0,%eax
810004d3:	a3 e8 8a 00 81       	mov    %eax,0x81008ae8
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810004d8:	83 ec 04             	sub    $0x4,%esp
810004db:	68 00 04 00 00       	push   $0x400
810004e0:	6a 00                	push   $0x0
810004e2:	68 e0 86 00 81       	push   $0x810086e0
810004e7:	e8 f1 3f 00 00       	call   810044dd <memset>
810004ec:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
810004ef:	c7 05 e0 8a 00 81 20 	movl   $0x81007620,0x81008ae0
810004f6:	76 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
810004f9:	b8 68 76 00 81       	mov    $0x81007668,%eax
810004fe:	a3 e4 8a 00 81       	mov    %eax,0x81008ae4
}
81000503:	90                   	nop
81000504:	c9                   	leave  
81000505:	c3                   	ret    

81000506 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000506:	55                   	push   %ebp
81000507:	89 e5                	mov    %esp,%ebp
81000509:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100050c:	a1 e8 8a 00 81       	mov    0x81008ae8,%eax
81000511:	83 ec 08             	sub    $0x8,%esp
81000514:	50                   	push   %eax
81000515:	68 16 74 00 81       	push   $0x81007416
8100051a:	e8 14 4c 00 00       	call   81005133 <iprintf>
8100051f:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000522:	e8 7c 31 00 00       	call   810036a3 <__getreent>
81000527:	8b 40 08             	mov    0x8(%eax),%eax
8100052a:	83 ec 0c             	sub    $0xc,%esp
8100052d:	50                   	push   %eax
8100052e:	e8 e1 0a 00 00       	call   81001014 <fflush>
81000533:	83 c4 10             	add    $0x10,%esp
}
81000536:	90                   	nop
81000537:	c9                   	leave  
81000538:	c3                   	ret    

81000539 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
81000539:	55                   	push   %ebp
8100053a:	89 e5                	mov    %esp,%ebp
8100053c:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
8100053f:	a1 e0 8a 00 81       	mov    0x81008ae0,%eax
81000544:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000547:	eb 22                	jmp    8100056b <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
81000549:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100054c:	8b 00                	mov    (%eax),%eax
8100054e:	83 ec 08             	sub    $0x8,%esp
81000551:	ff 75 08             	push   0x8(%ebp)
81000554:	50                   	push   %eax
81000555:	e8 02 5c 00 00       	call   8100615c <strcmp>
8100055a:	83 c4 10             	add    $0x10,%esp
8100055d:	85 c0                	test   %eax,%eax
8100055f:	75 05                	jne    81000566 <find_builtin+0x2d>
      continue;
    }
    return cmd;
81000561:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000564:	eb 14                	jmp    8100057a <find_builtin+0x41>
      continue;
81000566:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000567:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
8100056b:	a1 e4 8a 00 81       	mov    0x81008ae4,%eax
81000570:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000573:	72 d4                	jb     81000549 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
81000575:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100057a:	c9                   	leave  
8100057b:	c3                   	ret    

8100057c <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
8100057c:	55                   	push   %ebp
8100057d:	89 e5                	mov    %esp,%ebp
8100057f:	53                   	push   %ebx
81000580:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000583:	8b 45 08             	mov    0x8(%ebp),%eax
81000586:	8b 40 08             	mov    0x8(%eax),%eax
81000589:	83 ec 08             	sub    $0x8,%esp
8100058c:	ff 75 10             	push   0x10(%ebp)
8100058f:	ff 75 0c             	push   0xc(%ebp)
81000592:	ff d0                	call   *%eax
81000594:	83 c4 10             	add    $0x10,%esp
81000597:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
8100059a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100059e:	79 1f                	jns    810005bf <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
810005a0:	8b 45 08             	mov    0x8(%ebp),%eax
810005a3:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
810005a5:	e8 f9 30 00 00       	call   810036a3 <__getreent>
810005aa:	8b 40 0c             	mov    0xc(%eax),%eax
810005ad:	ff 75 f4             	push   -0xc(%ebp)
810005b0:	53                   	push   %ebx
810005b1:	68 68 76 00 81       	push   $0x81007668
810005b6:	50                   	push   %eax
810005b7:	e8 2d 11 00 00       	call   810016e9 <fiprintf>
810005bc:	83 c4 10             	add    $0x10,%esp
  }
}
810005bf:	90                   	nop
810005c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810005c3:	c9                   	leave  
810005c4:	c3                   	ret    

810005c5 <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
810005c5:	55                   	push   %ebp
810005c6:	89 e5                	mov    %esp,%ebp
810005c8:	53                   	push   %ebx
810005c9:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
810005cc:	e8 4d 03 00 00       	call   8100091e <fork>
810005d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
810005d4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005d8:	79 21                	jns    810005fb <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
810005da:	e8 c4 30 00 00       	call   810036a3 <__getreent>
810005df:	8b 40 0c             	mov    0xc(%eax),%eax
810005e2:	83 ec 04             	sub    $0x4,%esp
810005e5:	ff 75 08             	push   0x8(%ebp)
810005e8:	68 80 76 00 81       	push   $0x81007680
810005ed:	50                   	push   %eax
810005ee:	e8 f6 10 00 00       	call   810016e9 <fiprintf>
810005f3:	83 c4 10             	add    $0x10,%esp
    // 3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
            cpid);
  }
}
810005f6:	e9 82 00 00 00       	jmp    8100067d <run_exec_file+0xb8>
  } else if (pid == 0) {
810005fb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005ff:	75 44                	jne    81000645 <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000601:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000608:	eb 29                	jmp    81000633 <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
8100060a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100060d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000614:	8b 45 10             	mov    0x10(%ebp),%eax
81000617:	01 d0                	add    %edx,%eax
81000619:	8b 00                	mov    (%eax),%eax
8100061b:	83 ec 04             	sub    $0x4,%esp
8100061e:	50                   	push   %eax
8100061f:	ff 75 f4             	push   -0xc(%ebp)
81000622:	68 9a 76 00 81       	push   $0x8100769a
81000627:	e8 07 4b 00 00       	call   81005133 <iprintf>
8100062c:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
8100062f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000633:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000636:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000639:	7c cf                	jl     8100060a <run_exec_file+0x45>
    exit(-1);
8100063b:	83 ec 0c             	sub    $0xc,%esp
8100063e:	6a ff                	push   $0xffffffff
81000640:	e8 e9 05 00 00       	call   81000c2e <exit>
    int cpid = wait(&status);
81000645:	83 ec 0c             	sub    $0xc,%esp
81000648:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100064b:	50                   	push   %eax
8100064c:	e8 ab 04 00 00       	call   81000afc <wait>
81000651:	83 c4 10             	add    $0x10,%esp
81000654:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
81000657:	8b 5d e8             	mov    -0x18(%ebp),%ebx
8100065a:	e8 44 30 00 00       	call   810036a3 <__getreent>
8100065f:	8b 40 0c             	mov    0xc(%eax),%eax
81000662:	83 ec 08             	sub    $0x8,%esp
81000665:	ff 75 ec             	push   -0x14(%ebp)
81000668:	ff 75 f0             	push   -0x10(%ebp)
8100066b:	53                   	push   %ebx
8100066c:	ff 75 08             	push   0x8(%ebp)
8100066f:	68 a8 76 00 81       	push   $0x810076a8
81000674:	50                   	push   %eax
81000675:	e8 6f 10 00 00       	call   810016e9 <fiprintf>
8100067a:	83 c4 20             	add    $0x20,%esp
}
8100067d:	90                   	nop
8100067e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000681:	c9                   	leave  
81000682:	c3                   	ret    

81000683 <main>:

int main(int argc, char **argv) {
81000683:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000687:	83 e4 f0             	and    $0xfffffff0,%esp
8100068a:	ff 71 fc             	push   -0x4(%ecx)
8100068d:	55                   	push   %ebp
8100068e:	89 e5                	mov    %esp,%ebp
81000690:	51                   	push   %ecx
81000691:	83 ec 44             	sub    $0x44,%esp
81000694:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
81000696:	8b 40 04             	mov    0x4(%eax),%eax
81000699:	8b 00                	mov    (%eax),%eax
8100069b:	83 ec 08             	sub    $0x8,%esp
8100069e:	6a 02                	push   $0x2
810006a0:	50                   	push   %eax
810006a1:	e8 db 02 00 00       	call   81000981 <open>
810006a6:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
810006a9:	83 ec 0c             	sub    $0xc,%esp
810006ac:	6a 00                	push   $0x0
810006ae:	e8 06 04 00 00       	call   81000ab9 <dup>
810006b3:	83 c4 10             	add    $0x10,%esp
  dup(0);
810006b6:	83 ec 0c             	sub    $0xc,%esp
810006b9:	6a 00                	push   $0x0
810006bb:	e8 f9 03 00 00       	call   81000ab9 <dup>
810006c0:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
810006c3:	e8 00 fe ff ff       	call   810004c8 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
810006c8:	e8 39 fe ff ff       	call   81000506 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810006cd:	e8 d1 2f 00 00       	call   810036a3 <__getreent>
810006d2:	8b 40 04             	mov    0x4(%eax),%eax
810006d5:	83 ec 04             	sub    $0x4,%esp
810006d8:	50                   	push   %eax
810006d9:	68 00 04 00 00       	push   $0x400
810006de:	68 e0 86 00 81       	push   $0x810086e0
810006e3:	e8 c3 0a 00 00       	call   810011ab <fgets>
810006e8:	83 c4 10             	add    $0x10,%esp
810006eb:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810006ee:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810006f2:	0f 84 13 01 00 00    	je     8100080b <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810006f8:	83 ec 08             	sub    $0x8,%esp
810006fb:	6a 0a                	push   $0xa
810006fd:	68 e0 86 00 81       	push   $0x810086e0
81000702:	e8 59 59 00 00       	call   81006060 <strchr>
81000707:	83 c4 10             	add    $0x10,%esp
8100070a:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100070d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000711:	74 06                	je     81000719 <main+0x96>
      *cr = '\0';
81000713:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000716:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
81000719:	83 ec 08             	sub    $0x8,%esp
8100071c:	6a 0d                	push   $0xd
8100071e:	68 e0 86 00 81       	push   $0x810086e0
81000723:	e8 38 59 00 00       	call   81006060 <strchr>
81000728:	83 c4 10             	add    $0x10,%esp
8100072b:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100072e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000732:	74 06                	je     8100073a <main+0xb7>
      *cr = '\0';
81000734:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000737:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
8100073a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000741:	83 ec 04             	sub    $0x4,%esp
81000744:	6a 28                	push   $0x28
81000746:	6a 00                	push   $0x0
81000748:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100074b:	50                   	push   %eax
8100074c:	e8 8c 3d 00 00       	call   810044dd <memset>
81000751:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000754:	c7 45 e4 cc 76 00 81 	movl   $0x810076cc,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
8100075b:	83 ec 08             	sub    $0x8,%esp
8100075e:	ff 75 e4             	push   -0x1c(%ebp)
81000761:	68 e0 86 00 81       	push   $0x810086e0
81000766:	e8 1e 5b 00 00       	call   81006289 <strtok>
8100076b:	83 c4 10             	add    $0x10,%esp
8100076e:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000771:	eb 23                	jmp    81000796 <main+0x113>
      argv[argc++] = token;
81000773:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000776:	8d 50 01             	lea    0x1(%eax),%edx
81000779:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100077c:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100077f:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000783:	83 ec 08             	sub    $0x8,%esp
81000786:	ff 75 e4             	push   -0x1c(%ebp)
81000789:	6a 00                	push   $0x0
8100078b:	e8 f9 5a 00 00       	call   81006289 <strtok>
81000790:	83 c4 10             	add    $0x10,%esp
81000793:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000796:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100079a:	75 d7                	jne    81000773 <main+0xf0>
    }

    if (argc == 0) {
8100079c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007a0:	74 6f                	je     81000811 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
810007a2:	8b 45 b8             	mov    -0x48(%ebp),%eax
810007a5:	83 ec 0c             	sub    $0xc,%esp
810007a8:	50                   	push   %eax
810007a9:	e8 8b fd ff ff       	call   81000539 <find_builtin>
810007ae:	83 c4 10             	add    $0x10,%esp
810007b1:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
810007b4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810007b8:	74 17                	je     810007d1 <main+0x14e>
      run_builtin(cmd, argc, argv);
810007ba:	83 ec 04             	sub    $0x4,%esp
810007bd:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007c0:	50                   	push   %eax
810007c1:	ff 75 f4             	push   -0xc(%ebp)
810007c4:	ff 75 e0             	push   -0x20(%ebp)
810007c7:	e8 b0 fd ff ff       	call   8100057c <run_builtin>
810007cc:	83 c4 10             	add    $0x10,%esp
      continue;
810007cf:	eb 41                	jmp    81000812 <main+0x18f>
    }

    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
810007d1:	83 ec 04             	sub    $0x4,%esp
810007d4:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007d7:	50                   	push   %eax
810007d8:	ff 75 f4             	push   -0xc(%ebp)
810007db:	68 ce 76 00 81       	push   $0x810076ce
810007e0:	e8 e0 fd ff ff       	call   810005c5 <run_exec_file>
810007e5:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
810007e8:	e8 b6 2e 00 00       	call   810036a3 <__getreent>
810007ed:	8b 40 0c             	mov    0xc(%eax),%eax
810007f0:	83 ec 04             	sub    $0x4,%esp
810007f3:	68 e0 86 00 81       	push   $0x810086e0
810007f8:	68 d0 76 00 81       	push   $0x810076d0
810007fd:	50                   	push   %eax
810007fe:	e8 e6 0e 00 00       	call   810016e9 <fiprintf>
81000803:	83 c4 10             	add    $0x10,%esp
81000806:	e9 bd fe ff ff       	jmp    810006c8 <main+0x45>
      continue;
8100080b:	90                   	nop
8100080c:	e9 b7 fe ff ff       	jmp    810006c8 <main+0x45>
      continue;
81000811:	90                   	nop
  for (;;) {
81000812:	e9 b1 fe ff ff       	jmp    810006c8 <main+0x45>

81000817 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000817:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100081a:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100081c:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100081e:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000820:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000822:	e9 00 00 00 00       	jmp    81000827 <cstart>

81000827 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000827:	55                   	push   %ebp
81000828:	89 e5                	mov    %esp,%ebp
8100082a:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100082d:	c7 45 f4 e0 84 00 81 	movl   $0x810084e0,-0xc(%ebp)
    while (start < __bss_end__) {
81000834:	eb 0c                	jmp    81000842 <cstart+0x1b>
        *(start++) = 0;
81000836:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000839:	8d 50 01             	lea    0x1(%eax),%edx
8100083c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100083f:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000842:	81 7d f4 80 8b 00 81 	cmpl   $0x81008b80,-0xc(%ebp)
81000849:	72 eb                	jb     81000836 <cstart+0xf>
    }
    
    exit(main(argc, argv));
8100084b:	83 ec 08             	sub    $0x8,%esp
8100084e:	ff 75 0c             	push   0xc(%ebp)
81000851:	ff 75 08             	push   0x8(%ebp)
81000854:	e8 2a fe ff ff       	call   81000683 <main>
81000859:	83 c4 10             	add    $0x10,%esp
8100085c:	83 ec 0c             	sub    $0xc,%esp
8100085f:	50                   	push   %eax
81000860:	e8 c9 03 00 00       	call   81000c2e <exit>

81000865 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000865:	55                   	push   %ebp
81000866:	89 e5                	mov    %esp,%ebp
81000868:	57                   	push   %edi
81000869:	56                   	push   %esi
8100086a:	53                   	push   %ebx
8100086b:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
8100086e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000875:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
8100087c:	8b 45 08             	mov    0x8(%ebp),%eax
8100087f:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000882:	8b 55 08             	mov    0x8(%ebp),%edx
81000885:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000888:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100088b:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
8100088e:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000891:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000894:	8b 75 08             	mov    0x8(%ebp),%esi
81000897:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000899:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100089c:	50                   	push   %eax
8100089d:	52                   	push   %edx
8100089e:	51                   	push   %ecx
8100089f:	53                   	push   %ebx
810008a0:	56                   	push   %esi
810008a1:	ff 1f                	lcall  *(%edi)
810008a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810008a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810008a9:	83 c4 10             	add    $0x10,%esp
810008ac:	5b                   	pop    %ebx
810008ad:	5e                   	pop    %esi
810008ae:	5f                   	pop    %edi
810008af:	5d                   	pop    %ebp
810008b0:	c3                   	ret    

810008b1 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810008b1:	55                   	push   %ebp
810008b2:	89 e5                	mov    %esp,%ebp
810008b4:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810008b7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810008bb:	7e 1b                	jle    810008d8 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810008bd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810008c4:	8b 45 08             	mov    0x8(%ebp),%eax
810008c7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810008ca:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008cd:	50                   	push   %eax
810008ce:	e8 92 ff ff ff       	call   81000865 <sys_call>
810008d3:	83 c4 04             	add    $0x4,%esp
810008d6:	eb 01                	jmp    810008d9 <msleep+0x28>
    if (ms <= 0) return;
810008d8:	90                   	nop

}
810008d9:	c9                   	leave  
810008da:	c3                   	ret    

810008db <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
810008db:	55                   	push   %ebp
810008dc:	89 e5                	mov    %esp,%ebp
810008de:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
810008e1:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
810008e8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008eb:	50                   	push   %eax
810008ec:	e8 74 ff ff ff       	call   81000865 <sys_call>
810008f1:	83 c4 04             	add    $0x4,%esp
}
810008f4:	c9                   	leave  
810008f5:	c3                   	ret    

810008f6 <print_msg>:

void print_msg(const char *fmt, int arg) {
810008f6:	55                   	push   %ebp
810008f7:	89 e5                	mov    %esp,%ebp
810008f9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
810008fc:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000903:	8b 45 08             	mov    0x8(%ebp),%eax
81000906:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000909:	8b 45 0c             	mov    0xc(%ebp),%eax
8100090c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
8100090f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000912:	50                   	push   %eax
81000913:	e8 4d ff ff ff       	call   81000865 <sys_call>
81000918:	83 c4 04             	add    $0x4,%esp
}
8100091b:	90                   	nop
8100091c:	c9                   	leave  
8100091d:	c3                   	ret    

8100091e <fork>:

int fork (void) {
8100091e:	55                   	push   %ebp
8100091f:	89 e5                	mov    %esp,%ebp
81000921:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000924:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
8100092b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100092e:	50                   	push   %eax
8100092f:	e8 31 ff ff ff       	call   81000865 <sys_call>
81000934:	83 c4 04             	add    $0x4,%esp
}
81000937:	c9                   	leave  
81000938:	c3                   	ret    

81000939 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000939:	55                   	push   %ebp
8100093a:	89 e5                	mov    %esp,%ebp
8100093c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
8100093f:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000946:	8b 45 08             	mov    0x8(%ebp),%eax
81000949:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
8100094c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100094f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000952:	8b 45 10             	mov    0x10(%ebp),%eax
81000955:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000958:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100095b:	50                   	push   %eax
8100095c:	e8 04 ff ff ff       	call   81000865 <sys_call>
81000961:	83 c4 04             	add    $0x4,%esp
}
81000964:	c9                   	leave  
81000965:	c3                   	ret    

81000966 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000966:	55                   	push   %ebp
81000967:	89 e5                	mov    %esp,%ebp
81000969:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
8100096c:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000973:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000976:	50                   	push   %eax
81000977:	e8 e9 fe ff ff       	call   81000865 <sys_call>
8100097c:	83 c4 04             	add    $0x4,%esp
}
8100097f:	c9                   	leave  
81000980:	c3                   	ret    

81000981 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000981:	55                   	push   %ebp
81000982:	89 e5                	mov    %esp,%ebp
81000984:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000987:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
8100098e:	8b 45 08             	mov    0x8(%ebp),%eax
81000991:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000994:	8b 45 0c             	mov    0xc(%ebp),%eax
81000997:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100099a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100099d:	50                   	push   %eax
8100099e:	e8 c2 fe ff ff       	call   81000865 <sys_call>
810009a3:	83 c4 04             	add    $0x4,%esp
}
810009a6:	c9                   	leave  
810009a7:	c3                   	ret    

810009a8 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810009a8:	55                   	push   %ebp
810009a9:	89 e5                	mov    %esp,%ebp
810009ab:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810009ae:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810009b5:	8b 45 08             	mov    0x8(%ebp),%eax
810009b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810009bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810009be:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810009c1:	8b 45 10             	mov    0x10(%ebp),%eax
810009c4:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810009c7:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009ca:	50                   	push   %eax
810009cb:	e8 95 fe ff ff       	call   81000865 <sys_call>
810009d0:	83 c4 04             	add    $0x4,%esp
}
810009d3:	c9                   	leave  
810009d4:	c3                   	ret    

810009d5 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810009d5:	55                   	push   %ebp
810009d6:	89 e5                	mov    %esp,%ebp
810009d8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
810009db:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
810009e2:	8b 45 08             	mov    0x8(%ebp),%eax
810009e5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810009e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810009eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810009ee:	8b 45 10             	mov    0x10(%ebp),%eax
810009f1:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810009f4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009f7:	50                   	push   %eax
810009f8:	e8 68 fe ff ff       	call   81000865 <sys_call>
810009fd:	83 c4 04             	add    $0x4,%esp
}
81000a00:	c9                   	leave  
81000a01:	c3                   	ret    

81000a02 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000a02:	55                   	push   %ebp
81000a03:	89 e5                	mov    %esp,%ebp
81000a05:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000a08:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000a0f:	8b 45 08             	mov    0x8(%ebp),%eax
81000a12:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000a15:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a18:	50                   	push   %eax
81000a19:	e8 47 fe ff ff       	call   81000865 <sys_call>
81000a1e:	83 c4 04             	add    $0x4,%esp
}
81000a21:	c9                   	leave  
81000a22:	c3                   	ret    

81000a23 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000a23:	55                   	push   %ebp
81000a24:	89 e5                	mov    %esp,%ebp
81000a26:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000a29:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000a30:	8b 45 08             	mov    0x8(%ebp),%eax
81000a33:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000a36:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a39:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000a3c:	8b 45 10             	mov    0x10(%ebp),%eax
81000a3f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a42:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a45:	50                   	push   %eax
81000a46:	e8 1a fe ff ff       	call   81000865 <sys_call>
81000a4b:	83 c4 04             	add    $0x4,%esp
}
81000a4e:	c9                   	leave  
81000a4f:	c3                   	ret    

81000a50 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000a50:	55                   	push   %ebp
81000a51:	89 e5                	mov    %esp,%ebp
81000a53:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000a56:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000a5d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a60:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000a63:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a66:	50                   	push   %eax
81000a67:	e8 f9 fd ff ff       	call   81000865 <sys_call>
81000a6c:	83 c4 04             	add    $0x4,%esp
}
81000a6f:	c9                   	leave  
81000a70:	c3                   	ret    

81000a71 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000a71:	55                   	push   %ebp
81000a72:	89 e5                	mov    %esp,%ebp
81000a74:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000a77:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000a7e:	8b 45 08             	mov    0x8(%ebp),%eax
81000a81:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000a84:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a87:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000a8a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a8d:	50                   	push   %eax
81000a8e:	e8 d2 fd ff ff       	call   81000865 <sys_call>
81000a93:	83 c4 04             	add    $0x4,%esp
}
81000a96:	c9                   	leave  
81000a97:	c3                   	ret    

81000a98 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000a98:	55                   	push   %ebp
81000a99:	89 e5                	mov    %esp,%ebp
81000a9b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000a9e:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
81000aa5:	8b 45 08             	mov    0x8(%ebp),%eax
81000aa8:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000aab:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aae:	50                   	push   %eax
81000aaf:	e8 b1 fd ff ff       	call   81000865 <sys_call>
81000ab4:	83 c4 04             	add    $0x4,%esp
}
81000ab7:	c9                   	leave  
81000ab8:	c3                   	ret    

81000ab9 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000ab9:	55                   	push   %ebp
81000aba:	89 e5                	mov    %esp,%ebp
81000abc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000abf:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000ac6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ac9:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000acc:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000acf:	50                   	push   %eax
81000ad0:	e8 90 fd ff ff       	call   81000865 <sys_call>
81000ad5:	83 c4 04             	add    $0x4,%esp
}
81000ad8:	c9                   	leave  
81000ad9:	c3                   	ret    

81000ada <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000ada:	55                   	push   %ebp
81000adb:	89 e5                	mov    %esp,%ebp
81000add:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000ae0:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000ae7:	8b 45 08             	mov    0x8(%ebp),%eax
81000aea:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000aed:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000af0:	50                   	push   %eax
81000af1:	e8 6f fd ff ff       	call   81000865 <sys_call>
81000af6:	83 c4 04             	add    $0x4,%esp
}
81000af9:	90                   	nop
81000afa:	c9                   	leave  
81000afb:	c3                   	ret    

81000afc <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000afc:	55                   	push   %ebp
81000afd:	89 e5                	mov    %esp,%ebp
81000aff:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000b02:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000b09:	8b 45 08             	mov    0x8(%ebp),%eax
81000b0c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000b0f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b12:	50                   	push   %eax
81000b13:	e8 4d fd ff ff       	call   81000865 <sys_call>
81000b18:	83 c4 04             	add    $0x4,%esp
}
81000b1b:	c9                   	leave  
81000b1c:	c3                   	ret    

81000b1d <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000b1d:	55                   	push   %ebp
81000b1e:	89 e5                	mov    %esp,%ebp
81000b20:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000b23:	83 ec 0c             	sub    $0xc,%esp
81000b26:	6a 20                	push   $0x20
81000b28:	e8 00 2d 00 00       	call   8100382d <malloc>
81000b2d:	83 c4 10             	add    $0x10,%esp
81000b30:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000b33:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b37:	75 07                	jne    81000b40 <opendir+0x23>
        return (DIR*)0;
81000b39:	b8 00 00 00 00       	mov    $0x0,%eax
81000b3e:	eb 43                	jmp    81000b83 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000b40:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000b47:	8b 45 08             	mov    0x8(%ebp),%eax
81000b4a:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000b4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b50:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000b53:	83 ec 0c             	sub    $0xc,%esp
81000b56:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000b59:	50                   	push   %eax
81000b5a:	e8 06 fd ff ff       	call   81000865 <sys_call>
81000b5f:	83 c4 10             	add    $0x10,%esp
81000b62:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000b65:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000b69:	79 15                	jns    81000b80 <opendir+0x63>
        free(dir);
81000b6b:	83 ec 0c             	sub    $0xc,%esp
81000b6e:	ff 75 f4             	push   -0xc(%ebp)
81000b71:	e8 d3 2c 00 00       	call   81003849 <free>
81000b76:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000b79:	b8 00 00 00 00       	mov    $0x0,%eax
81000b7e:	eb 03                	jmp    81000b83 <opendir+0x66>
    }

    return dir;    
81000b80:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000b83:	c9                   	leave  
81000b84:	c3                   	ret    

81000b85 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000b85:	55                   	push   %ebp
81000b86:	89 e5                	mov    %esp,%ebp
81000b88:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000b8b:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000b92:	8b 45 08             	mov    0x8(%ebp),%eax
81000b95:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000b98:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9b:	83 c0 04             	add    $0x4,%eax
81000b9e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000ba1:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000ba4:	50                   	push   %eax
81000ba5:	e8 bb fc ff ff       	call   81000865 <sys_call>
81000baa:	83 c4 04             	add    $0x4,%esp
81000bad:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000bb0:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000bb4:	79 07                	jns    81000bbd <readdir+0x38>
        return (struct dirent*)0;
81000bb6:	b8 00 00 00 00       	mov    $0x0,%eax
81000bbb:	eb 06                	jmp    81000bc3 <readdir+0x3e>
    }

    return &dir->dirent;   
81000bbd:	8b 45 08             	mov    0x8(%ebp),%eax
81000bc0:	83 c0 04             	add    $0x4,%eax
}
81000bc3:	c9                   	leave  
81000bc4:	c3                   	ret    

81000bc5 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000bc5:	55                   	push   %ebp
81000bc6:	89 e5                	mov    %esp,%ebp
81000bc8:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000bcb:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000bd2:	8b 45 08             	mov    0x8(%ebp),%eax
81000bd5:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000bd8:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000bdb:	50                   	push   %eax
81000bdc:	e8 84 fc ff ff       	call   81000865 <sys_call>
81000be1:	83 c4 04             	add    $0x4,%esp
81000be4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000be7:	83 ec 0c             	sub    $0xc,%esp
81000bea:	ff 75 08             	push   0x8(%ebp)
81000bed:	e8 57 2c 00 00       	call   81003849 <free>
81000bf2:	83 c4 10             	add    $0x10,%esp

    return err;   
81000bf5:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000bf8:	c9                   	leave  
81000bf9:	c3                   	ret    

81000bfa <atoi>:
81000bfa:	55                   	push   %ebp
81000bfb:	89 e5                	mov    %esp,%ebp
81000bfd:	83 ec 08             	sub    $0x8,%esp
81000c00:	83 ec 04             	sub    $0x4,%esp
81000c03:	6a 0a                	push   $0xa
81000c05:	6a 00                	push   $0x0
81000c07:	ff 75 08             	push   0x8(%ebp)
81000c0a:	e8 b7 59 00 00       	call   810065c6 <strtol>
81000c0f:	83 c4 10             	add    $0x10,%esp
81000c12:	c9                   	leave  
81000c13:	c3                   	ret    

81000c14 <_atoi_r>:
81000c14:	55                   	push   %ebp
81000c15:	89 e5                	mov    %esp,%ebp
81000c17:	83 ec 08             	sub    $0x8,%esp
81000c1a:	6a 0a                	push   $0xa
81000c1c:	6a 00                	push   $0x0
81000c1e:	ff 75 0c             	push   0xc(%ebp)
81000c21:	ff 75 08             	push   0x8(%ebp)
81000c24:	e8 53 59 00 00       	call   8100657c <_strtol_r>
81000c29:	83 c4 10             	add    $0x10,%esp
81000c2c:	c9                   	leave  
81000c2d:	c3                   	ret    

81000c2e <exit>:
81000c2e:	55                   	push   %ebp
81000c2f:	89 e5                	mov    %esp,%ebp
81000c31:	83 ec 08             	sub    $0x8,%esp
81000c34:	83 ec 08             	sub    $0x8,%esp
81000c37:	6a 00                	push   $0x0
81000c39:	ff 75 08             	push   0x8(%ebp)
81000c3c:	e8 82 5c 00 00       	call   810068c3 <__call_exitprocs>
81000c41:	83 c4 10             	add    $0x10,%esp
81000c44:	a1 78 77 00 81       	mov    0x81007778,%eax
81000c49:	8b 40 3c             	mov    0x3c(%eax),%eax
81000c4c:	85 c0                	test   %eax,%eax
81000c4e:	74 17                	je     81000c67 <exit+0x39>
81000c50:	a1 78 77 00 81       	mov    0x81007778,%eax
81000c55:	8b 40 3c             	mov    0x3c(%eax),%eax
81000c58:	8b 15 78 77 00 81    	mov    0x81007778,%edx
81000c5e:	83 ec 0c             	sub    $0xc,%esp
81000c61:	52                   	push   %edx
81000c62:	ff d0                	call   *%eax
81000c64:	83 c4 10             	add    $0x10,%esp
81000c67:	83 ec 0c             	sub    $0xc,%esp
81000c6a:	ff 75 08             	push   0x8(%ebp)
81000c6d:	e8 68 fe ff ff       	call   81000ada <_exit>

81000c72 <_fclose_r>:
81000c72:	55                   	push   %ebp
81000c73:	89 e5                	mov    %esp,%ebp
81000c75:	53                   	push   %ebx
81000c76:	83 ec 14             	sub    $0x14,%esp
81000c79:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000c7c:	85 db                	test   %ebx,%ebx
81000c7e:	75 0a                	jne    81000c8a <_fclose_r+0x18>
81000c80:	b8 00 00 00 00       	mov    $0x0,%eax
81000c85:	e9 ea 00 00 00       	jmp    81000d74 <_fclose_r+0x102>
81000c8a:	8b 45 08             	mov    0x8(%ebp),%eax
81000c8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000c90:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000c94:	74 18                	je     81000cae <_fclose_r+0x3c>
81000c96:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c99:	8b 40 38             	mov    0x38(%eax),%eax
81000c9c:	85 c0                	test   %eax,%eax
81000c9e:	75 0e                	jne    81000cae <_fclose_r+0x3c>
81000ca0:	83 ec 0c             	sub    $0xc,%esp
81000ca3:	ff 75 f0             	push   -0x10(%ebp)
81000ca6:	e8 14 08 00 00       	call   810014bf <__sinit>
81000cab:	83 c4 10             	add    $0x10,%esp
81000cae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000cb2:	66 85 c0             	test   %ax,%ax
81000cb5:	75 0a                	jne    81000cc1 <_fclose_r+0x4f>
81000cb7:	b8 00 00 00 00       	mov    $0x0,%eax
81000cbc:	e9 b3 00 00 00       	jmp    81000d74 <_fclose_r+0x102>
81000cc1:	83 ec 08             	sub    $0x8,%esp
81000cc4:	53                   	push   %ebx
81000cc5:	ff 75 08             	push   0x8(%ebp)
81000cc8:	e8 c9 00 00 00       	call   81000d96 <__sflush_r>
81000ccd:	83 c4 10             	add    $0x10,%esp
81000cd0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cd3:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000cd6:	85 c0                	test   %eax,%eax
81000cd8:	74 1d                	je     81000cf7 <_fclose_r+0x85>
81000cda:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000cdd:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000ce0:	83 ec 08             	sub    $0x8,%esp
81000ce3:	52                   	push   %edx
81000ce4:	ff 75 08             	push   0x8(%ebp)
81000ce7:	ff d0                	call   *%eax
81000ce9:	83 c4 10             	add    $0x10,%esp
81000cec:	85 c0                	test   %eax,%eax
81000cee:	79 07                	jns    81000cf7 <_fclose_r+0x85>
81000cf0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000cf7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000cfb:	98                   	cwtl   
81000cfc:	25 80 00 00 00       	and    $0x80,%eax
81000d01:	85 c0                	test   %eax,%eax
81000d03:	74 12                	je     81000d17 <_fclose_r+0xa5>
81000d05:	8b 43 10             	mov    0x10(%ebx),%eax
81000d08:	83 ec 08             	sub    $0x8,%esp
81000d0b:	50                   	push   %eax
81000d0c:	ff 75 08             	push   0x8(%ebp)
81000d0f:	e8 c6 0a 00 00       	call   810017da <_free_r>
81000d14:	83 c4 10             	add    $0x10,%esp
81000d17:	8b 43 30             	mov    0x30(%ebx),%eax
81000d1a:	85 c0                	test   %eax,%eax
81000d1c:	74 23                	je     81000d41 <_fclose_r+0xcf>
81000d1e:	8b 53 30             	mov    0x30(%ebx),%edx
81000d21:	8d 43 40             	lea    0x40(%ebx),%eax
81000d24:	39 c2                	cmp    %eax,%edx
81000d26:	74 12                	je     81000d3a <_fclose_r+0xc8>
81000d28:	8b 43 30             	mov    0x30(%ebx),%eax
81000d2b:	83 ec 08             	sub    $0x8,%esp
81000d2e:	50                   	push   %eax
81000d2f:	ff 75 08             	push   0x8(%ebp)
81000d32:	e8 a3 0a 00 00       	call   810017da <_free_r>
81000d37:	83 c4 10             	add    $0x10,%esp
81000d3a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000d41:	8b 43 44             	mov    0x44(%ebx),%eax
81000d44:	85 c0                	test   %eax,%eax
81000d46:	74 19                	je     81000d61 <_fclose_r+0xef>
81000d48:	8b 43 44             	mov    0x44(%ebx),%eax
81000d4b:	83 ec 08             	sub    $0x8,%esp
81000d4e:	50                   	push   %eax
81000d4f:	ff 75 08             	push   0x8(%ebp)
81000d52:	e8 83 0a 00 00       	call   810017da <_free_r>
81000d57:	83 c4 10             	add    $0x10,%esp
81000d5a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000d61:	e8 f2 07 00 00       	call   81001558 <__sfp_lock_acquire>
81000d66:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000d6c:	e8 ed 07 00 00       	call   8100155e <__sfp_lock_release>
81000d71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d74:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000d77:	c9                   	leave  
81000d78:	c3                   	ret    

81000d79 <fclose>:
81000d79:	55                   	push   %ebp
81000d7a:	89 e5                	mov    %esp,%ebp
81000d7c:	83 ec 08             	sub    $0x8,%esp
81000d7f:	8b 55 08             	mov    0x8(%ebp),%edx
81000d82:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81000d87:	83 ec 08             	sub    $0x8,%esp
81000d8a:	52                   	push   %edx
81000d8b:	50                   	push   %eax
81000d8c:	e8 e1 fe ff ff       	call   81000c72 <_fclose_r>
81000d91:	83 c4 10             	add    $0x10,%esp
81000d94:	c9                   	leave  
81000d95:	c3                   	ret    

81000d96 <__sflush_r>:
81000d96:	55                   	push   %ebp
81000d97:	89 e5                	mov    %esp,%ebp
81000d99:	57                   	push   %edi
81000d9a:	56                   	push   %esi
81000d9b:	53                   	push   %ebx
81000d9c:	83 ec 1c             	sub    $0x1c,%esp
81000d9f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000da2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000da6:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000daa:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000dae:	83 e0 08             	and    $0x8,%eax
81000db1:	85 c0                	test   %eax,%eax
81000db3:	0f 85 93 01 00 00    	jne    81000f4c <__sflush_r+0x1b6>
81000db9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000dbd:	80 cc 08             	or     $0x8,%ah
81000dc0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000dc4:	8b 43 04             	mov    0x4(%ebx),%eax
81000dc7:	85 c0                	test   %eax,%eax
81000dc9:	7f 0b                	jg     81000dd6 <__sflush_r+0x40>
81000dcb:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000dce:	85 c0                	test   %eax,%eax
81000dd0:	0f 8e 6f 01 00 00    	jle    81000f45 <__sflush_r+0x1af>
81000dd6:	8b 43 28             	mov    0x28(%ebx),%eax
81000dd9:	85 c0                	test   %eax,%eax
81000ddb:	0f 84 64 01 00 00    	je     81000f45 <__sflush_r+0x1af>
81000de1:	8b 45 08             	mov    0x8(%ebp),%eax
81000de4:	8b 00                	mov    (%eax),%eax
81000de6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000de9:	8b 45 08             	mov    0x8(%ebp),%eax
81000dec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000df2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000df6:	98                   	cwtl   
81000df7:	25 00 10 00 00       	and    $0x1000,%eax
81000dfc:	85 c0                	test   %eax,%eax
81000dfe:	74 08                	je     81000e08 <__sflush_r+0x72>
81000e00:	8b 43 50             	mov    0x50(%ebx),%eax
81000e03:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000e06:	eb 64                	jmp    81000e6c <__sflush_r+0xd6>
81000e08:	8b 43 28             	mov    0x28(%ebx),%eax
81000e0b:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000e0e:	6a 01                	push   $0x1
81000e10:	6a 00                	push   $0x0
81000e12:	52                   	push   %edx
81000e13:	ff 75 08             	push   0x8(%ebp)
81000e16:	ff d0                	call   *%eax
81000e18:	83 c4 10             	add    $0x10,%esp
81000e1b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000e1e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000e22:	75 48                	jne    81000e6c <__sflush_r+0xd6>
81000e24:	8b 45 08             	mov    0x8(%ebp),%eax
81000e27:	8b 00                	mov    (%eax),%eax
81000e29:	85 c0                	test   %eax,%eax
81000e2b:	74 3f                	je     81000e6c <__sflush_r+0xd6>
81000e2d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000e34:	8b 45 08             	mov    0x8(%ebp),%eax
81000e37:	8b 00                	mov    (%eax),%eax
81000e39:	83 f8 1d             	cmp    $0x1d,%eax
81000e3c:	74 0a                	je     81000e48 <__sflush_r+0xb2>
81000e3e:	8b 45 08             	mov    0x8(%ebp),%eax
81000e41:	8b 00                	mov    (%eax),%eax
81000e43:	83 f8 16             	cmp    $0x16,%eax
81000e46:	75 11                	jne    81000e59 <__sflush_r+0xc3>
81000e48:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000e4f:	8b 45 08             	mov    0x8(%ebp),%eax
81000e52:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000e55:	89 10                	mov    %edx,(%eax)
81000e57:	eb 0b                	jmp    81000e64 <__sflush_r+0xce>
81000e59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e5d:	83 c8 40             	or     $0x40,%eax
81000e60:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e64:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e67:	e9 48 01 00 00       	jmp    81000fb4 <__sflush_r+0x21e>
81000e6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e70:	98                   	cwtl   
81000e71:	83 e0 04             	and    $0x4,%eax
81000e74:	85 c0                	test   %eax,%eax
81000e76:	74 13                	je     81000e8b <__sflush_r+0xf5>
81000e78:	8b 43 04             	mov    0x4(%ebx),%eax
81000e7b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000e7e:	8b 43 30             	mov    0x30(%ebx),%eax
81000e81:	85 c0                	test   %eax,%eax
81000e83:	74 06                	je     81000e8b <__sflush_r+0xf5>
81000e85:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000e88:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000e8b:	8b 43 28             	mov    0x28(%ebx),%eax
81000e8e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000e91:	6a 00                	push   $0x0
81000e93:	ff 75 e4             	push   -0x1c(%ebp)
81000e96:	52                   	push   %edx
81000e97:	ff 75 08             	push   0x8(%ebp)
81000e9a:	ff d0                	call   *%eax
81000e9c:	83 c4 10             	add    $0x10,%esp
81000e9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ea2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000ea6:	75 1d                	jne    81000ec5 <__sflush_r+0x12f>
81000ea8:	8b 45 08             	mov    0x8(%ebp),%eax
81000eab:	8b 00                	mov    (%eax),%eax
81000ead:	85 c0                	test   %eax,%eax
81000eaf:	74 14                	je     81000ec5 <__sflush_r+0x12f>
81000eb1:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb4:	8b 00                	mov    (%eax),%eax
81000eb6:	83 f8 1d             	cmp    $0x1d,%eax
81000eb9:	74 0a                	je     81000ec5 <__sflush_r+0x12f>
81000ebb:	8b 45 08             	mov    0x8(%ebp),%eax
81000ebe:	8b 00                	mov    (%eax),%eax
81000ec0:	83 f8 16             	cmp    $0x16,%eax
81000ec3:	75 6e                	jne    81000f33 <__sflush_r+0x19d>
81000ec5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ec9:	80 e4 f7             	and    $0xf7,%ah
81000ecc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ed0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000ed7:	8b 43 10             	mov    0x10(%ebx),%eax
81000eda:	89 03                	mov    %eax,(%ebx)
81000edc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ee0:	98                   	cwtl   
81000ee1:	25 00 10 00 00       	and    $0x1000,%eax
81000ee6:	85 c0                	test   %eax,%eax
81000ee8:	74 15                	je     81000eff <__sflush_r+0x169>
81000eea:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000eee:	75 09                	jne    81000ef9 <__sflush_r+0x163>
81000ef0:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef3:	8b 00                	mov    (%eax),%eax
81000ef5:	85 c0                	test   %eax,%eax
81000ef7:	75 06                	jne    81000eff <__sflush_r+0x169>
81000ef9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000efc:	89 43 50             	mov    %eax,0x50(%ebx)
81000eff:	8b 45 08             	mov    0x8(%ebp),%eax
81000f02:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000f05:	89 10                	mov    %edx,(%eax)
81000f07:	8b 43 30             	mov    0x30(%ebx),%eax
81000f0a:	85 c0                	test   %eax,%eax
81000f0c:	74 37                	je     81000f45 <__sflush_r+0x1af>
81000f0e:	8b 53 30             	mov    0x30(%ebx),%edx
81000f11:	8d 43 40             	lea    0x40(%ebx),%eax
81000f14:	39 c2                	cmp    %eax,%edx
81000f16:	74 12                	je     81000f2a <__sflush_r+0x194>
81000f18:	8b 43 30             	mov    0x30(%ebx),%eax
81000f1b:	83 ec 08             	sub    $0x8,%esp
81000f1e:	50                   	push   %eax
81000f1f:	ff 75 08             	push   0x8(%ebp)
81000f22:	e8 b3 08 00 00       	call   810017da <_free_r>
81000f27:	83 c4 10             	add    $0x10,%esp
81000f2a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000f31:	eb 12                	jmp    81000f45 <__sflush_r+0x1af>
81000f33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f37:	83 c8 40             	or     $0x40,%eax
81000f3a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f3e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000f43:	eb 6f                	jmp    81000fb4 <__sflush_r+0x21e>
81000f45:	b8 00 00 00 00       	mov    $0x0,%eax
81000f4a:	eb 68                	jmp    81000fb4 <__sflush_r+0x21e>
81000f4c:	8b 73 10             	mov    0x10(%ebx),%esi
81000f4f:	85 f6                	test   %esi,%esi
81000f51:	75 07                	jne    81000f5a <__sflush_r+0x1c4>
81000f53:	b8 00 00 00 00       	mov    $0x0,%eax
81000f58:	eb 5a                	jmp    81000fb4 <__sflush_r+0x21e>
81000f5a:	8b 03                	mov    (%ebx),%eax
81000f5c:	29 f0                	sub    %esi,%eax
81000f5e:	89 c7                	mov    %eax,%edi
81000f60:	89 33                	mov    %esi,(%ebx)
81000f62:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000f66:	83 e0 03             	and    $0x3,%eax
81000f69:	85 c0                	test   %eax,%eax
81000f6b:	75 05                	jne    81000f72 <__sflush_r+0x1dc>
81000f6d:	8b 43 14             	mov    0x14(%ebx),%eax
81000f70:	eb 05                	jmp    81000f77 <__sflush_r+0x1e1>
81000f72:	b8 00 00 00 00       	mov    $0x0,%eax
81000f77:	89 43 08             	mov    %eax,0x8(%ebx)
81000f7a:	eb 2f                	jmp    81000fab <__sflush_r+0x215>
81000f7c:	8b 43 24             	mov    0x24(%ebx),%eax
81000f7f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f82:	57                   	push   %edi
81000f83:	56                   	push   %esi
81000f84:	52                   	push   %edx
81000f85:	ff 75 08             	push   0x8(%ebp)
81000f88:	ff d0                	call   *%eax
81000f8a:	83 c4 10             	add    $0x10,%esp
81000f8d:	85 c0                	test   %eax,%eax
81000f8f:	7f 12                	jg     81000fa3 <__sflush_r+0x20d>
81000f91:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f95:	83 c8 40             	or     $0x40,%eax
81000f98:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f9c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000fa1:	eb 11                	jmp    81000fb4 <__sflush_r+0x21e>
81000fa3:	89 c1                	mov    %eax,%ecx
81000fa5:	89 c8                	mov    %ecx,%eax
81000fa7:	01 c6                	add    %eax,%esi
81000fa9:	29 cf                	sub    %ecx,%edi
81000fab:	85 ff                	test   %edi,%edi
81000fad:	7f cd                	jg     81000f7c <__sflush_r+0x1e6>
81000faf:	b8 00 00 00 00       	mov    $0x0,%eax
81000fb4:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000fb7:	5b                   	pop    %ebx
81000fb8:	5e                   	pop    %esi
81000fb9:	5f                   	pop    %edi
81000fba:	5d                   	pop    %ebp
81000fbb:	c3                   	ret    

81000fbc <_fflush_r>:
81000fbc:	55                   	push   %ebp
81000fbd:	89 e5                	mov    %esp,%ebp
81000fbf:	53                   	push   %ebx
81000fc0:	83 ec 14             	sub    $0x14,%esp
81000fc3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fc6:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fcc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000fd0:	74 18                	je     81000fea <_fflush_r+0x2e>
81000fd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fd5:	8b 40 38             	mov    0x38(%eax),%eax
81000fd8:	85 c0                	test   %eax,%eax
81000fda:	75 0e                	jne    81000fea <_fflush_r+0x2e>
81000fdc:	83 ec 0c             	sub    $0xc,%esp
81000fdf:	ff 75 f4             	push   -0xc(%ebp)
81000fe2:	e8 d8 04 00 00       	call   810014bf <__sinit>
81000fe7:	83 c4 10             	add    $0x10,%esp
81000fea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fee:	66 85 c0             	test   %ax,%ax
81000ff1:	75 07                	jne    81000ffa <_fflush_r+0x3e>
81000ff3:	b8 00 00 00 00       	mov    $0x0,%eax
81000ff8:	eb 15                	jmp    8100100f <_fflush_r+0x53>
81000ffa:	83 ec 08             	sub    $0x8,%esp
81000ffd:	53                   	push   %ebx
81000ffe:	ff 75 08             	push   0x8(%ebp)
81001001:	e8 90 fd ff ff       	call   81000d96 <__sflush_r>
81001006:	83 c4 10             	add    $0x10,%esp
81001009:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100100c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100100f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001012:	c9                   	leave  
81001013:	c3                   	ret    

81001014 <fflush>:
81001014:	55                   	push   %ebp
81001015:	89 e5                	mov    %esp,%ebp
81001017:	83 ec 08             	sub    $0x8,%esp
8100101a:	8b 55 08             	mov    0x8(%ebp),%edx
8100101d:	85 d2                	test   %edx,%edx
8100101f:	75 18                	jne    81001039 <fflush+0x25>
81001021:	a1 78 77 00 81       	mov    0x81007778,%eax
81001026:	83 ec 08             	sub    $0x8,%esp
81001029:	68 bc 0f 00 81       	push   $0x81000fbc
8100102e:	50                   	push   %eax
8100102f:	e8 39 17 00 00       	call   8100276d <_fwalk_reent>
81001034:	83 c4 10             	add    $0x10,%esp
81001037:	eb 12                	jmp    8100104b <fflush+0x37>
81001039:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100103e:	83 ec 08             	sub    $0x8,%esp
81001041:	52                   	push   %edx
81001042:	50                   	push   %eax
81001043:	e8 74 ff ff ff       	call   81000fbc <_fflush_r>
81001048:	83 c4 10             	add    $0x10,%esp
8100104b:	c9                   	leave  
8100104c:	c3                   	ret    

8100104d <_fgets_r>:
8100104d:	55                   	push   %ebp
8100104e:	89 e5                	mov    %esp,%ebp
81001050:	83 ec 28             	sub    $0x28,%esp
81001053:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81001057:	7f 0a                	jg     81001063 <_fgets_r+0x16>
81001059:	b8 00 00 00 00       	mov    $0x0,%eax
8100105e:	e9 46 01 00 00       	jmp    810011a9 <_fgets_r+0x15c>
81001063:	8b 45 0c             	mov    0xc(%ebp),%eax
81001066:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001069:	8b 45 08             	mov    0x8(%ebp),%eax
8100106c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100106f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001073:	74 18                	je     8100108d <_fgets_r+0x40>
81001075:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001078:	8b 40 38             	mov    0x38(%eax),%eax
8100107b:	85 c0                	test   %eax,%eax
8100107d:	75 0e                	jne    8100108d <_fgets_r+0x40>
8100107f:	83 ec 0c             	sub    $0xc,%esp
81001082:	ff 75 ec             	push   -0x14(%ebp)
81001085:	e8 35 04 00 00       	call   810014bf <__sinit>
8100108a:	83 c4 10             	add    $0x10,%esp
8100108d:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001091:	8b 45 14             	mov    0x14(%ebp),%eax
81001094:	8b 40 04             	mov    0x4(%eax),%eax
81001097:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100109a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100109e:	75 34                	jne    810010d4 <_fgets_r+0x87>
810010a0:	83 ec 08             	sub    $0x8,%esp
810010a3:	ff 75 14             	push   0x14(%ebp)
810010a6:	ff 75 08             	push   0x8(%ebp)
810010a9:	e8 4a 4c 00 00       	call   81005cf8 <__srefill_r>
810010ae:	83 c4 10             	add    $0x10,%esp
810010b1:	85 c0                	test   %eax,%eax
810010b3:	74 16                	je     810010cb <_fgets_r+0x7e>
810010b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010b8:	3b 45 0c             	cmp    0xc(%ebp),%eax
810010bb:	0f 85 de 00 00 00    	jne    8100119f <_fgets_r+0x152>
810010c1:	b8 00 00 00 00       	mov    $0x0,%eax
810010c6:	e9 de 00 00 00       	jmp    810011a9 <_fgets_r+0x15c>
810010cb:	8b 45 14             	mov    0x14(%ebp),%eax
810010ce:	8b 40 04             	mov    0x4(%eax),%eax
810010d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010d4:	8b 45 14             	mov    0x14(%ebp),%eax
810010d7:	8b 00                	mov    (%eax),%eax
810010d9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810010dc:	8b 45 10             	mov    0x10(%ebp),%eax
810010df:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810010e2:	76 06                	jbe    810010ea <_fgets_r+0x9d>
810010e4:	8b 45 10             	mov    0x10(%ebp),%eax
810010e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010ea:	83 ec 04             	sub    $0x4,%esp
810010ed:	ff 75 f4             	push   -0xc(%ebp)
810010f0:	6a 0a                	push   $0xa
810010f2:	ff 75 e8             	push   -0x18(%ebp)
810010f5:	e8 26 32 00 00       	call   81004320 <memchr>
810010fa:	83 c4 10             	add    $0x10,%esp
810010fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001100:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001104:	74 4a                	je     81001150 <_fgets_r+0x103>
81001106:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100110a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100110d:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001110:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001113:	8b 45 14             	mov    0x14(%ebp),%eax
81001116:	8b 40 04             	mov    0x4(%eax),%eax
81001119:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100111c:	89 c2                	mov    %eax,%edx
8100111e:	8b 45 14             	mov    0x14(%ebp),%eax
81001121:	89 50 04             	mov    %edx,0x4(%eax)
81001124:	8b 45 14             	mov    0x14(%ebp),%eax
81001127:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100112a:	89 10                	mov    %edx,(%eax)
8100112c:	83 ec 04             	sub    $0x4,%esp
8100112f:	ff 75 f4             	push   -0xc(%ebp)
81001132:	ff 75 e8             	push   -0x18(%ebp)
81001135:	ff 75 f0             	push   -0x10(%ebp)
81001138:	e8 cb 32 00 00       	call   81004408 <memcpy>
8100113d:	83 c4 10             	add    $0x10,%esp
81001140:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001143:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001146:	01 d0                	add    %edx,%eax
81001148:	c6 00 00             	movb   $0x0,(%eax)
8100114b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100114e:	eb 59                	jmp    810011a9 <_fgets_r+0x15c>
81001150:	8b 45 14             	mov    0x14(%ebp),%eax
81001153:	8b 40 04             	mov    0x4(%eax),%eax
81001156:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001159:	89 c2                	mov    %eax,%edx
8100115b:	8b 45 14             	mov    0x14(%ebp),%eax
8100115e:	89 50 04             	mov    %edx,0x4(%eax)
81001161:	8b 45 14             	mov    0x14(%ebp),%eax
81001164:	8b 10                	mov    (%eax),%edx
81001166:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001169:	01 c2                	add    %eax,%edx
8100116b:	8b 45 14             	mov    0x14(%ebp),%eax
8100116e:	89 10                	mov    %edx,(%eax)
81001170:	83 ec 04             	sub    $0x4,%esp
81001173:	ff 75 f4             	push   -0xc(%ebp)
81001176:	ff 75 e8             	push   -0x18(%ebp)
81001179:	ff 75 f0             	push   -0x10(%ebp)
8100117c:	e8 87 32 00 00       	call   81004408 <memcpy>
81001181:	83 c4 10             	add    $0x10,%esp
81001184:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001187:	01 45 f0             	add    %eax,-0x10(%ebp)
8100118a:	8b 45 10             	mov    0x10(%ebp),%eax
8100118d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001190:	89 45 10             	mov    %eax,0x10(%ebp)
81001193:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001197:	0f 85 f4 fe ff ff    	jne    81001091 <_fgets_r+0x44>
8100119d:	eb 01                	jmp    810011a0 <_fgets_r+0x153>
8100119f:	90                   	nop
810011a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011a3:	c6 00 00             	movb   $0x0,(%eax)
810011a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011a9:	c9                   	leave  
810011aa:	c3                   	ret    

810011ab <fgets>:
810011ab:	55                   	push   %ebp
810011ac:	89 e5                	mov    %esp,%ebp
810011ae:	83 ec 08             	sub    $0x8,%esp
810011b1:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810011b6:	ff 75 10             	push   0x10(%ebp)
810011b9:	ff 75 0c             	push   0xc(%ebp)
810011bc:	ff 75 08             	push   0x8(%ebp)
810011bf:	50                   	push   %eax
810011c0:	e8 88 fe ff ff       	call   8100104d <_fgets_r>
810011c5:	83 c4 10             	add    $0x10,%esp
810011c8:	c9                   	leave  
810011c9:	c3                   	ret    

810011ca <std>:
810011ca:	55                   	push   %ebp
810011cb:	89 e5                	mov    %esp,%ebp
810011cd:	83 ec 08             	sub    $0x8,%esp
810011d0:	8b 45 08             	mov    0x8(%ebp),%eax
810011d3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810011d9:	8b 45 08             	mov    0x8(%ebp),%eax
810011dc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810011e3:	8b 45 08             	mov    0x8(%ebp),%eax
810011e6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810011ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810011f0:	89 c2                	mov    %eax,%edx
810011f2:	8b 45 08             	mov    0x8(%ebp),%eax
810011f5:	66 89 50 0c          	mov    %dx,0xc(%eax)
810011f9:	8b 45 08             	mov    0x8(%ebp),%eax
810011fc:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001203:	8b 45 10             	mov    0x10(%ebp),%eax
81001206:	89 c2                	mov    %eax,%edx
81001208:	8b 45 08             	mov    0x8(%ebp),%eax
8100120b:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100120f:	8b 45 08             	mov    0x8(%ebp),%eax
81001212:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001219:	8b 45 08             	mov    0x8(%ebp),%eax
8100121c:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001223:	8b 45 08             	mov    0x8(%ebp),%eax
81001226:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100122d:	8b 45 08             	mov    0x8(%ebp),%eax
81001230:	83 c0 5c             	add    $0x5c,%eax
81001233:	83 ec 04             	sub    $0x4,%esp
81001236:	6a 08                	push   $0x8
81001238:	6a 00                	push   $0x0
8100123a:	50                   	push   %eax
8100123b:	e8 9d 32 00 00       	call   810044dd <memset>
81001240:	83 c4 10             	add    $0x10,%esp
81001243:	8b 45 08             	mov    0x8(%ebp),%eax
81001246:	8b 55 08             	mov    0x8(%ebp),%edx
81001249:	89 50 1c             	mov    %edx,0x1c(%eax)
8100124c:	8b 45 08             	mov    0x8(%ebp),%eax
8100124f:	c7 40 20 39 5f 00 81 	movl   $0x81005f39,0x20(%eax)
81001256:	8b 45 08             	mov    0x8(%ebp),%eax
81001259:	c7 40 24 87 5f 00 81 	movl   $0x81005f87,0x24(%eax)
81001260:	8b 45 08             	mov    0x8(%ebp),%eax
81001263:	c7 40 28 e2 5f 00 81 	movl   $0x81005fe2,0x28(%eax)
8100126a:	8b 45 08             	mov    0x8(%ebp),%eax
8100126d:	c7 40 2c 2c 60 00 81 	movl   $0x8100602c,0x2c(%eax)
81001274:	90                   	nop
81001275:	c9                   	leave  
81001276:	c3                   	ret    

81001277 <stdin_init>:
81001277:	55                   	push   %ebp
81001278:	89 e5                	mov    %esp,%ebp
8100127a:	83 ec 08             	sub    $0x8,%esp
8100127d:	83 ec 04             	sub    $0x4,%esp
81001280:	6a 00                	push   $0x0
81001282:	6a 04                	push   $0x4
81001284:	ff 75 08             	push   0x8(%ebp)
81001287:	e8 3e ff ff ff       	call   810011ca <std>
8100128c:	83 c4 10             	add    $0x10,%esp
8100128f:	90                   	nop
81001290:	c9                   	leave  
81001291:	c3                   	ret    

81001292 <stdout_init>:
81001292:	55                   	push   %ebp
81001293:	89 e5                	mov    %esp,%ebp
81001295:	83 ec 08             	sub    $0x8,%esp
81001298:	83 ec 04             	sub    $0x4,%esp
8100129b:	6a 01                	push   $0x1
8100129d:	6a 09                	push   $0x9
8100129f:	ff 75 08             	push   0x8(%ebp)
810012a2:	e8 23 ff ff ff       	call   810011ca <std>
810012a7:	83 c4 10             	add    $0x10,%esp
810012aa:	90                   	nop
810012ab:	c9                   	leave  
810012ac:	c3                   	ret    

810012ad <stderr_init>:
810012ad:	55                   	push   %ebp
810012ae:	89 e5                	mov    %esp,%ebp
810012b0:	83 ec 08             	sub    $0x8,%esp
810012b3:	83 ec 04             	sub    $0x4,%esp
810012b6:	6a 02                	push   $0x2
810012b8:	6a 12                	push   $0x12
810012ba:	ff 75 08             	push   0x8(%ebp)
810012bd:	e8 08 ff ff ff       	call   810011ca <std>
810012c2:	83 c4 10             	add    $0x10,%esp
810012c5:	90                   	nop
810012c6:	c9                   	leave  
810012c7:	c3                   	ret    

810012c8 <__sfmoreglue>:
810012c8:	55                   	push   %ebp
810012c9:	89 e5                	mov    %esp,%ebp
810012cb:	53                   	push   %ebx
810012cc:	83 ec 14             	sub    $0x14,%esp
810012cf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012d2:	8d 43 ff             	lea    -0x1(%ebx),%eax
810012d5:	6b c0 68             	imul   $0x68,%eax,%eax
810012d8:	83 c0 74             	add    $0x74,%eax
810012db:	83 ec 08             	sub    $0x8,%esp
810012de:	50                   	push   %eax
810012df:	ff 75 08             	push   0x8(%ebp)
810012e2:	e8 12 28 00 00       	call   81003af9 <_malloc_r>
810012e7:	83 c4 10             	add    $0x10,%esp
810012ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012f1:	75 07                	jne    810012fa <__sfmoreglue+0x32>
810012f3:	b8 00 00 00 00       	mov    $0x0,%eax
810012f8:	eb 38                	jmp    81001332 <__sfmoreglue+0x6a>
810012fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012fd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001303:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001306:	89 58 04             	mov    %ebx,0x4(%eax)
81001309:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130c:	8d 50 0c             	lea    0xc(%eax),%edx
8100130f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001312:	89 50 08             	mov    %edx,0x8(%eax)
81001315:	89 d8                	mov    %ebx,%eax
81001317:	6b c0 68             	imul   $0x68,%eax,%eax
8100131a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100131d:	83 c2 0c             	add    $0xc,%edx
81001320:	83 ec 04             	sub    $0x4,%esp
81001323:	50                   	push   %eax
81001324:	6a 00                	push   $0x0
81001326:	52                   	push   %edx
81001327:	e8 b1 31 00 00       	call   810044dd <memset>
8100132c:	83 c4 10             	add    $0x10,%esp
8100132f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001332:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001335:	c9                   	leave  
81001336:	c3                   	ret    

81001337 <__sfp>:
81001337:	55                   	push   %ebp
81001338:	89 e5                	mov    %esp,%ebp
8100133a:	83 ec 18             	sub    $0x18,%esp
8100133d:	e8 16 02 00 00       	call   81001558 <__sfp_lock_acquire>
81001342:	a1 78 77 00 81       	mov    0x81007778,%eax
81001347:	8b 40 38             	mov    0x38(%eax),%eax
8100134a:	85 c0                	test   %eax,%eax
8100134c:	75 11                	jne    8100135f <__sfp+0x28>
8100134e:	a1 78 77 00 81       	mov    0x81007778,%eax
81001353:	83 ec 0c             	sub    $0xc,%esp
81001356:	50                   	push   %eax
81001357:	e8 63 01 00 00       	call   810014bf <__sinit>
8100135c:	83 c4 10             	add    $0x10,%esp
8100135f:	a1 78 77 00 81       	mov    0x81007778,%eax
81001364:	05 e0 02 00 00       	add    $0x2e0,%eax
81001369:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100136c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100136f:	8b 40 08             	mov    0x8(%eax),%eax
81001372:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001375:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001378:	8b 40 04             	mov    0x4(%eax),%eax
8100137b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100137e:	eb 10                	jmp    81001390 <__sfp+0x59>
81001380:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001383:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001387:	66 85 c0             	test   %ax,%ax
8100138a:	74 58                	je     810013e4 <__sfp+0xad>
8100138c:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001390:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001394:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001398:	79 e6                	jns    81001380 <__sfp+0x49>
8100139a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100139d:	8b 00                	mov    (%eax),%eax
8100139f:	85 c0                	test   %eax,%eax
810013a1:	75 1e                	jne    810013c1 <__sfp+0x8a>
810013a3:	83 ec 08             	sub    $0x8,%esp
810013a6:	6a 04                	push   $0x4
810013a8:	ff 75 08             	push   0x8(%ebp)
810013ab:	e8 18 ff ff ff       	call   810012c8 <__sfmoreglue>
810013b0:	83 c4 10             	add    $0x10,%esp
810013b3:	8b 55 ec             	mov    -0x14(%ebp),%edx
810013b6:	89 02                	mov    %eax,(%edx)
810013b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013bb:	8b 00                	mov    (%eax),%eax
810013bd:	85 c0                	test   %eax,%eax
810013bf:	74 0a                	je     810013cb <__sfp+0x94>
810013c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013c4:	8b 00                	mov    (%eax),%eax
810013c6:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013c9:	eb a1                	jmp    8100136c <__sfp+0x35>
810013cb:	90                   	nop
810013cc:	e8 8d 01 00 00       	call   8100155e <__sfp_lock_release>
810013d1:	8b 45 08             	mov    0x8(%ebp),%eax
810013d4:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810013da:	b8 00 00 00 00       	mov    $0x0,%eax
810013df:	e9 9e 00 00 00       	jmp    81001482 <__sfp+0x14b>
810013e4:	90                   	nop
810013e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e8:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810013ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f1:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810013f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013fa:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001401:	e8 58 01 00 00       	call   8100155e <__sfp_lock_release>
81001406:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001409:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100140f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001412:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001419:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100141c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001426:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100142d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001430:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001437:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001441:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001444:	83 c0 5c             	add    $0x5c,%eax
81001447:	83 ec 04             	sub    $0x4,%esp
8100144a:	6a 08                	push   $0x8
8100144c:	6a 00                	push   $0x0
8100144e:	50                   	push   %eax
8100144f:	e8 89 30 00 00       	call   810044dd <memset>
81001454:	83 c4 10             	add    $0x10,%esp
81001457:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001461:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001464:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100146b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100146e:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001475:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001478:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100147f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001482:	c9                   	leave  
81001483:	c3                   	ret    

81001484 <_cleanup_r>:
81001484:	55                   	push   %ebp
81001485:	89 e5                	mov    %esp,%ebp
81001487:	83 ec 18             	sub    $0x18,%esp
8100148a:	c7 45 f4 72 0c 00 81 	movl   $0x81000c72,-0xc(%ebp)
81001491:	83 ec 08             	sub    $0x8,%esp
81001494:	ff 75 f4             	push   -0xc(%ebp)
81001497:	ff 75 08             	push   0x8(%ebp)
8100149a:	e8 ce 12 00 00       	call   8100276d <_fwalk_reent>
8100149f:	83 c4 10             	add    $0x10,%esp
810014a2:	90                   	nop
810014a3:	c9                   	leave  
810014a4:	c3                   	ret    

810014a5 <_cleanup>:
810014a5:	55                   	push   %ebp
810014a6:	89 e5                	mov    %esp,%ebp
810014a8:	83 ec 08             	sub    $0x8,%esp
810014ab:	a1 78 77 00 81       	mov    0x81007778,%eax
810014b0:	83 ec 0c             	sub    $0xc,%esp
810014b3:	50                   	push   %eax
810014b4:	e8 cb ff ff ff       	call   81001484 <_cleanup_r>
810014b9:	83 c4 10             	add    $0x10,%esp
810014bc:	90                   	nop
810014bd:	c9                   	leave  
810014be:	c3                   	ret    

810014bf <__sinit>:
810014bf:	55                   	push   %ebp
810014c0:	89 e5                	mov    %esp,%ebp
810014c2:	83 ec 08             	sub    $0x8,%esp
810014c5:	e8 9a 00 00 00       	call   81001564 <__sinit_lock_acquire>
810014ca:	8b 45 08             	mov    0x8(%ebp),%eax
810014cd:	8b 40 38             	mov    0x38(%eax),%eax
810014d0:	85 c0                	test   %eax,%eax
810014d2:	74 07                	je     810014db <__sinit+0x1c>
810014d4:	e8 91 00 00 00       	call   8100156a <__sinit_lock_release>
810014d9:	eb 7b                	jmp    81001556 <__sinit+0x97>
810014db:	8b 45 08             	mov    0x8(%ebp),%eax
810014de:	c7 40 3c 84 14 00 81 	movl   $0x81001484,0x3c(%eax)
810014e5:	8b 45 08             	mov    0x8(%ebp),%eax
810014e8:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810014ef:	00 00 00 
810014f2:	8b 45 08             	mov    0x8(%ebp),%eax
810014f5:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810014fc:	00 00 00 
810014ff:	8b 45 08             	mov    0x8(%ebp),%eax
81001502:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81001508:	8b 45 08             	mov    0x8(%ebp),%eax
8100150b:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001511:	8b 45 08             	mov    0x8(%ebp),%eax
81001514:	8b 40 04             	mov    0x4(%eax),%eax
81001517:	83 ec 0c             	sub    $0xc,%esp
8100151a:	50                   	push   %eax
8100151b:	e8 57 fd ff ff       	call   81001277 <stdin_init>
81001520:	83 c4 10             	add    $0x10,%esp
81001523:	8b 45 08             	mov    0x8(%ebp),%eax
81001526:	8b 40 08             	mov    0x8(%eax),%eax
81001529:	83 ec 0c             	sub    $0xc,%esp
8100152c:	50                   	push   %eax
8100152d:	e8 60 fd ff ff       	call   81001292 <stdout_init>
81001532:	83 c4 10             	add    $0x10,%esp
81001535:	8b 45 08             	mov    0x8(%ebp),%eax
81001538:	8b 40 0c             	mov    0xc(%eax),%eax
8100153b:	83 ec 0c             	sub    $0xc,%esp
8100153e:	50                   	push   %eax
8100153f:	e8 69 fd ff ff       	call   810012ad <stderr_init>
81001544:	83 c4 10             	add    $0x10,%esp
81001547:	8b 45 08             	mov    0x8(%ebp),%eax
8100154a:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001551:	e8 14 00 00 00       	call   8100156a <__sinit_lock_release>
81001556:	c9                   	leave  
81001557:	c3                   	ret    

81001558 <__sfp_lock_acquire>:
81001558:	55                   	push   %ebp
81001559:	89 e5                	mov    %esp,%ebp
8100155b:	90                   	nop
8100155c:	5d                   	pop    %ebp
8100155d:	c3                   	ret    

8100155e <__sfp_lock_release>:
8100155e:	55                   	push   %ebp
8100155f:	89 e5                	mov    %esp,%ebp
81001561:	90                   	nop
81001562:	5d                   	pop    %ebp
81001563:	c3                   	ret    

81001564 <__sinit_lock_acquire>:
81001564:	55                   	push   %ebp
81001565:	89 e5                	mov    %esp,%ebp
81001567:	90                   	nop
81001568:	5d                   	pop    %ebp
81001569:	c3                   	ret    

8100156a <__sinit_lock_release>:
8100156a:	55                   	push   %ebp
8100156b:	89 e5                	mov    %esp,%ebp
8100156d:	90                   	nop
8100156e:	5d                   	pop    %ebp
8100156f:	c3                   	ret    

81001570 <__fp_lock>:
81001570:	55                   	push   %ebp
81001571:	89 e5                	mov    %esp,%ebp
81001573:	b8 00 00 00 00       	mov    $0x0,%eax
81001578:	5d                   	pop    %ebp
81001579:	c3                   	ret    

8100157a <__fp_unlock>:
8100157a:	55                   	push   %ebp
8100157b:	89 e5                	mov    %esp,%ebp
8100157d:	b8 00 00 00 00       	mov    $0x0,%eax
81001582:	5d                   	pop    %ebp
81001583:	c3                   	ret    

81001584 <__fp_lock_all>:
81001584:	55                   	push   %ebp
81001585:	89 e5                	mov    %esp,%ebp
81001587:	83 ec 08             	sub    $0x8,%esp
8100158a:	e8 c9 ff ff ff       	call   81001558 <__sfp_lock_acquire>
8100158f:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81001594:	83 ec 08             	sub    $0x8,%esp
81001597:	68 70 15 00 81       	push   $0x81001570
8100159c:	50                   	push   %eax
8100159d:	e8 63 11 00 00       	call   81002705 <_fwalk>
810015a2:	83 c4 10             	add    $0x10,%esp
810015a5:	90                   	nop
810015a6:	c9                   	leave  
810015a7:	c3                   	ret    

810015a8 <__fp_unlock_all>:
810015a8:	55                   	push   %ebp
810015a9:	89 e5                	mov    %esp,%ebp
810015ab:	83 ec 08             	sub    $0x8,%esp
810015ae:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810015b3:	83 ec 08             	sub    $0x8,%esp
810015b6:	68 7a 15 00 81       	push   $0x8100157a
810015bb:	50                   	push   %eax
810015bc:	e8 44 11 00 00       	call   81002705 <_fwalk>
810015c1:	83 c4 10             	add    $0x10,%esp
810015c4:	e8 95 ff ff ff       	call   8100155e <__sfp_lock_release>
810015c9:	90                   	nop
810015ca:	c9                   	leave  
810015cb:	c3                   	ret    

810015cc <_fopen_r>:
810015cc:	55                   	push   %ebp
810015cd:	89 e5                	mov    %esp,%ebp
810015cf:	56                   	push   %esi
810015d0:	53                   	push   %ebx
810015d1:	83 ec 10             	sub    $0x10,%esp
810015d4:	83 ec 04             	sub    $0x4,%esp
810015d7:	8d 45 f0             	lea    -0x10(%ebp),%eax
810015da:	50                   	push   %eax
810015db:	ff 75 10             	push   0x10(%ebp)
810015de:	ff 75 08             	push   0x8(%ebp)
810015e1:	e8 3c 54 00 00       	call   81006a22 <__sflags>
810015e6:	83 c4 10             	add    $0x10,%esp
810015e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810015ec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810015f0:	75 0a                	jne    810015fc <_fopen_r+0x30>
810015f2:	b8 00 00 00 00       	mov    $0x0,%eax
810015f7:	e9 9e 00 00 00       	jmp    8100169a <_fopen_r+0xce>
810015fc:	83 ec 0c             	sub    $0xc,%esp
810015ff:	ff 75 08             	push   0x8(%ebp)
81001602:	e8 30 fd ff ff       	call   81001337 <__sfp>
81001607:	83 c4 10             	add    $0x10,%esp
8100160a:	89 c3                	mov    %eax,%ebx
8100160c:	85 db                	test   %ebx,%ebx
8100160e:	75 0a                	jne    8100161a <_fopen_r+0x4e>
81001610:	b8 00 00 00 00       	mov    $0x0,%eax
81001615:	e9 80 00 00 00       	jmp    8100169a <_fopen_r+0xce>
8100161a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100161d:	68 b6 01 00 00       	push   $0x1b6
81001622:	50                   	push   %eax
81001623:	ff 75 0c             	push   0xc(%ebp)
81001626:	ff 75 08             	push   0x8(%ebp)
81001629:	e8 92 3a 00 00       	call   810050c0 <_open_r>
8100162e:	83 c4 10             	add    $0x10,%esp
81001631:	89 c6                	mov    %eax,%esi
81001633:	85 f6                	test   %esi,%esi
81001635:	79 17                	jns    8100164e <_fopen_r+0x82>
81001637:	e8 1c ff ff ff       	call   81001558 <__sfp_lock_acquire>
8100163c:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001642:	e8 17 ff ff ff       	call   8100155e <__sfp_lock_release>
81001647:	b8 00 00 00 00       	mov    $0x0,%eax
8100164c:	eb 4c                	jmp    8100169a <_fopen_r+0xce>
8100164e:	89 f0                	mov    %esi,%eax
81001650:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001654:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001657:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100165b:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
8100165e:	c7 43 20 39 5f 00 81 	movl   $0x81005f39,0x20(%ebx)
81001665:	c7 43 24 87 5f 00 81 	movl   $0x81005f87,0x24(%ebx)
8100166c:	c7 43 28 e2 5f 00 81 	movl   $0x81005fe2,0x28(%ebx)
81001673:	c7 43 2c 2c 60 00 81 	movl   $0x8100602c,0x2c(%ebx)
8100167a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100167e:	98                   	cwtl   
8100167f:	25 00 01 00 00       	and    $0x100,%eax
81001684:	85 c0                	test   %eax,%eax
81001686:	74 10                	je     81001698 <_fopen_r+0xcc>
81001688:	6a 02                	push   $0x2
8100168a:	6a 00                	push   $0x0
8100168c:	53                   	push   %ebx
8100168d:	ff 75 08             	push   0x8(%ebp)
81001690:	e8 81 06 00 00       	call   81001d16 <_fseek_r>
81001695:	83 c4 10             	add    $0x10,%esp
81001698:	89 d8                	mov    %ebx,%eax
8100169a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100169d:	5b                   	pop    %ebx
8100169e:	5e                   	pop    %esi
8100169f:	5d                   	pop    %ebp
810016a0:	c3                   	ret    

810016a1 <fopen>:
810016a1:	55                   	push   %ebp
810016a2:	89 e5                	mov    %esp,%ebp
810016a4:	83 ec 08             	sub    $0x8,%esp
810016a7:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810016ac:	83 ec 04             	sub    $0x4,%esp
810016af:	ff 75 0c             	push   0xc(%ebp)
810016b2:	ff 75 08             	push   0x8(%ebp)
810016b5:	50                   	push   %eax
810016b6:	e8 11 ff ff ff       	call   810015cc <_fopen_r>
810016bb:	83 c4 10             	add    $0x10,%esp
810016be:	c9                   	leave  
810016bf:	c3                   	ret    

810016c0 <_fiprintf_r>:
810016c0:	55                   	push   %ebp
810016c1:	89 e5                	mov    %esp,%ebp
810016c3:	83 ec 18             	sub    $0x18,%esp
810016c6:	8d 45 14             	lea    0x14(%ebp),%eax
810016c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016cf:	50                   	push   %eax
810016d0:	ff 75 10             	push   0x10(%ebp)
810016d3:	ff 75 0c             	push   0xc(%ebp)
810016d6:	ff 75 08             	push   0x8(%ebp)
810016d9:	e8 a2 30 00 00       	call   81004780 <_vfiprintf_r>
810016de:	83 c4 10             	add    $0x10,%esp
810016e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016e7:	c9                   	leave  
810016e8:	c3                   	ret    

810016e9 <fiprintf>:
810016e9:	55                   	push   %ebp
810016ea:	89 e5                	mov    %esp,%ebp
810016ec:	83 ec 18             	sub    $0x18,%esp
810016ef:	8d 45 10             	lea    0x10(%ebp),%eax
810016f2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016f5:	8b 55 f0             	mov    -0x10(%ebp),%edx
810016f8:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810016fd:	52                   	push   %edx
810016fe:	ff 75 0c             	push   0xc(%ebp)
81001701:	ff 75 08             	push   0x8(%ebp)
81001704:	50                   	push   %eax
81001705:	e8 76 30 00 00       	call   81004780 <_vfiprintf_r>
8100170a:	83 c4 10             	add    $0x10,%esp
8100170d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001710:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001713:	c9                   	leave  
81001714:	c3                   	ret    

81001715 <_fputs_r>:
81001715:	55                   	push   %ebp
81001716:	89 e5                	mov    %esp,%ebp
81001718:	83 ec 28             	sub    $0x28,%esp
8100171b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100171e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001721:	83 ec 0c             	sub    $0xc,%esp
81001724:	ff 75 0c             	push   0xc(%ebp)
81001727:	e8 e4 4a 00 00       	call   81006210 <strlen>
8100172c:	83 c4 10             	add    $0x10,%esp
8100172f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001732:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001735:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001738:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100173b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100173e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001745:	8b 45 08             	mov    0x8(%ebp),%eax
81001748:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100174b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100174f:	74 18                	je     81001769 <_fputs_r+0x54>
81001751:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001754:	8b 40 38             	mov    0x38(%eax),%eax
81001757:	85 c0                	test   %eax,%eax
81001759:	75 0e                	jne    81001769 <_fputs_r+0x54>
8100175b:	83 ec 0c             	sub    $0xc,%esp
8100175e:	ff 75 f4             	push   -0xc(%ebp)
81001761:	e8 59 fd ff ff       	call   810014bf <__sinit>
81001766:	83 c4 10             	add    $0x10,%esp
81001769:	8b 45 10             	mov    0x10(%ebp),%eax
8100176c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001770:	98                   	cwtl   
81001771:	25 00 20 00 00       	and    $0x2000,%eax
81001776:	85 c0                	test   %eax,%eax
81001778:	75 24                	jne    8100179e <_fputs_r+0x89>
8100177a:	8b 45 10             	mov    0x10(%ebp),%eax
8100177d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001781:	80 cc 20             	or     $0x20,%ah
81001784:	89 c2                	mov    %eax,%edx
81001786:	8b 45 10             	mov    0x10(%ebp),%eax
81001789:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100178d:	8b 45 10             	mov    0x10(%ebp),%eax
81001790:	8b 40 64             	mov    0x64(%eax),%eax
81001793:	80 e4 df             	and    $0xdf,%ah
81001796:	89 c2                	mov    %eax,%edx
81001798:	8b 45 10             	mov    0x10(%ebp),%eax
8100179b:	89 50 64             	mov    %edx,0x64(%eax)
8100179e:	83 ec 04             	sub    $0x4,%esp
810017a1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810017a4:	50                   	push   %eax
810017a5:	ff 75 10             	push   0x10(%ebp)
810017a8:	ff 75 08             	push   0x8(%ebp)
810017ab:	e8 b7 0a 00 00       	call   81002267 <__sfvwrite_r>
810017b0:	83 c4 10             	add    $0x10,%esp
810017b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017b9:	c9                   	leave  
810017ba:	c3                   	ret    

810017bb <fputs>:
810017bb:	55                   	push   %ebp
810017bc:	89 e5                	mov    %esp,%ebp
810017be:	83 ec 08             	sub    $0x8,%esp
810017c1:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810017c6:	83 ec 04             	sub    $0x4,%esp
810017c9:	ff 75 0c             	push   0xc(%ebp)
810017cc:	ff 75 08             	push   0x8(%ebp)
810017cf:	50                   	push   %eax
810017d0:	e8 40 ff ff ff       	call   81001715 <_fputs_r>
810017d5:	83 c4 10             	add    $0x10,%esp
810017d8:	c9                   	leave  
810017d9:	c3                   	ret    

810017da <_free_r>:
810017da:	55                   	push   %ebp
810017db:	89 e5                	mov    %esp,%ebp
810017dd:	53                   	push   %ebx
810017de:	83 ec 34             	sub    $0x34,%esp
810017e1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810017e5:	0f 84 c4 03 00 00    	je     81001baf <_free_r+0x3d5>
810017eb:	83 ec 0c             	sub    $0xc,%esp
810017ee:	ff 75 08             	push   0x8(%ebp)
810017f1:	e8 6f 2d 00 00       	call   81004565 <__malloc_lock>
810017f6:	83 c4 10             	add    $0x10,%esp
810017f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810017fc:	83 e8 08             	sub    $0x8,%eax
810017ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001802:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001805:	8b 40 04             	mov    0x4(%eax),%eax
81001808:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100180b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100180e:	83 e0 fe             	and    $0xfffffffe,%eax
81001811:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001814:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001817:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100181a:	01 d0                	add    %edx,%eax
8100181c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100181f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001822:	8b 40 04             	mov    0x4(%eax),%eax
81001825:	83 e0 fc             	and    $0xfffffffc,%eax
81001828:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100182b:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001830:	8b 40 08             	mov    0x8(%eax),%eax
81001833:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001836:	0f 85 94 00 00 00    	jne    810018d0 <_free_r+0xf6>
8100183c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100183f:	01 45 f0             	add    %eax,-0x10(%ebp)
81001842:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001845:	83 e0 01             	and    $0x1,%eax
81001848:	85 c0                	test   %eax,%eax
8100184a:	75 3a                	jne    81001886 <_free_r+0xac>
8100184c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100184f:	8b 00                	mov    (%eax),%eax
81001851:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001854:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001857:	f7 d8                	neg    %eax
81001859:	01 45 f4             	add    %eax,-0xc(%ebp)
8100185c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100185f:	01 45 f0             	add    %eax,-0x10(%ebp)
81001862:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001865:	8b 40 0c             	mov    0xc(%eax),%eax
81001868:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100186b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186e:	8b 40 08             	mov    0x8(%eax),%eax
81001871:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001874:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001877:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100187a:	89 50 0c             	mov    %edx,0xc(%eax)
8100187d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001880:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001883:	89 50 08             	mov    %edx,0x8(%eax)
81001886:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001889:	83 c8 01             	or     $0x1,%eax
8100188c:	89 c2                	mov    %eax,%edx
8100188e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001891:	89 50 04             	mov    %edx,0x4(%eax)
81001894:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81001899:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100189c:	89 42 08             	mov    %eax,0x8(%edx)
8100189f:	a1 48 83 00 81       	mov    0x81008348,%eax
810018a4:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810018a7:	72 14                	jb     810018bd <_free_r+0xe3>
810018a9:	a1 20 8b 00 81       	mov    0x81008b20,%eax
810018ae:	83 ec 08             	sub    $0x8,%esp
810018b1:	50                   	push   %eax
810018b2:	ff 75 08             	push   0x8(%ebp)
810018b5:	e8 fb 02 00 00       	call   81001bb5 <_malloc_trim_r>
810018ba:	83 c4 10             	add    $0x10,%esp
810018bd:	83 ec 0c             	sub    $0xc,%esp
810018c0:	ff 75 08             	push   0x8(%ebp)
810018c3:	e8 a3 2c 00 00       	call   8100456b <__malloc_unlock>
810018c8:	83 c4 10             	add    $0x10,%esp
810018cb:	e9 e0 02 00 00       	jmp    81001bb0 <_free_r+0x3d6>
810018d0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018d3:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018d6:	89 50 04             	mov    %edx,0x4(%eax)
810018d9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018e0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018e3:	83 e0 01             	and    $0x1,%eax
810018e6:	85 c0                	test   %eax,%eax
810018e8:	75 52                	jne    8100193c <_free_r+0x162>
810018ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ed:	8b 00                	mov    (%eax),%eax
810018ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810018f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018f5:	f7 d8                	neg    %eax
810018f7:	01 45 f4             	add    %eax,-0xc(%ebp)
810018fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018fd:	01 45 f0             	add    %eax,-0x10(%ebp)
81001900:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001903:	8b 40 08             	mov    0x8(%eax),%eax
81001906:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
8100190b:	39 d0                	cmp    %edx,%eax
8100190d:	75 09                	jne    81001918 <_free_r+0x13e>
8100190f:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001916:	eb 24                	jmp    8100193c <_free_r+0x162>
81001918:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100191b:	8b 40 0c             	mov    0xc(%eax),%eax
8100191e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001921:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001924:	8b 40 08             	mov    0x8(%eax),%eax
81001927:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100192a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100192d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001930:	89 50 0c             	mov    %edx,0xc(%eax)
81001933:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001936:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001939:	89 50 08             	mov    %edx,0x8(%eax)
8100193c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100193f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001942:	01 d0                	add    %edx,%eax
81001944:	8b 40 04             	mov    0x4(%eax),%eax
81001947:	83 e0 01             	and    $0x1,%eax
8100194a:	85 c0                	test   %eax,%eax
8100194c:	75 75                	jne    810019c3 <_free_r+0x1e9>
8100194e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001951:	01 45 f0             	add    %eax,-0x10(%ebp)
81001954:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001958:	75 45                	jne    8100199f <_free_r+0x1c5>
8100195a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100195d:	8b 40 08             	mov    0x8(%eax),%eax
81001960:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81001965:	39 d0                	cmp    %edx,%eax
81001967:	75 36                	jne    8100199f <_free_r+0x1c5>
81001969:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001970:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
81001975:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001978:	89 50 0c             	mov    %edx,0xc(%eax)
8100197b:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81001980:	8b 40 0c             	mov    0xc(%eax),%eax
81001983:	89 42 08             	mov    %eax,0x8(%edx)
81001986:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
8100198b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100198e:	89 50 0c             	mov    %edx,0xc(%eax)
81001991:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001994:	8b 50 0c             	mov    0xc(%eax),%edx
81001997:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100199a:	89 50 08             	mov    %edx,0x8(%eax)
8100199d:	eb 24                	jmp    810019c3 <_free_r+0x1e9>
8100199f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019a2:	8b 40 0c             	mov    0xc(%eax),%eax
810019a5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810019a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019ab:	8b 40 08             	mov    0x8(%eax),%eax
810019ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019b4:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019b7:	89 50 0c             	mov    %edx,0xc(%eax)
810019ba:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019bd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810019c0:	89 50 08             	mov    %edx,0x8(%eax)
810019c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019c6:	83 c8 01             	or     $0x1,%eax
810019c9:	89 c2                	mov    %eax,%edx
810019cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ce:	89 50 04             	mov    %edx,0x4(%eax)
810019d1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019d7:	01 c2                	add    %eax,%edx
810019d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019dc:	89 02                	mov    %eax,(%edx)
810019de:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810019e2:	0f 85 b7 01 00 00    	jne    81001b9f <_free_r+0x3c5>
810019e8:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810019ef:	77 7f                	ja     81001a70 <_free_r+0x296>
810019f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019f4:	c1 e8 03             	shr    $0x3,%eax
810019f7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810019fa:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810019ff:	8b 58 04             	mov    0x4(%eax),%ebx
81001a02:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a05:	8d 50 03             	lea    0x3(%eax),%edx
81001a08:	85 c0                	test   %eax,%eax
81001a0a:	0f 48 c2             	cmovs  %edx,%eax
81001a0d:	c1 f8 02             	sar    $0x2,%eax
81001a10:	ba 01 00 00 00       	mov    $0x1,%edx
81001a15:	89 c1                	mov    %eax,%ecx
81001a17:	d3 e2                	shl    %cl,%edx
81001a19:	89 d0                	mov    %edx,%eax
81001a1b:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81001a20:	09 d8                	or     %ebx,%eax
81001a22:	89 42 04             	mov    %eax,0x4(%edx)
81001a25:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a28:	83 c0 01             	add    $0x1,%eax
81001a2b:	01 c0                	add    %eax,%eax
81001a2d:	c1 e0 02             	shl    $0x2,%eax
81001a30:	05 40 7f 00 81       	add    $0x81007f40,%eax
81001a35:	83 e8 08             	sub    $0x8,%eax
81001a38:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a3b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a3e:	8b 40 08             	mov    0x8(%eax),%eax
81001a41:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a47:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001a4a:	89 50 0c             	mov    %edx,0xc(%eax)
81001a4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a50:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a53:	89 50 08             	mov    %edx,0x8(%eax)
81001a56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a59:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a5c:	89 50 08             	mov    %edx,0x8(%eax)
81001a5f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a62:	8b 50 08             	mov    0x8(%eax),%edx
81001a65:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a68:	89 50 0c             	mov    %edx,0xc(%eax)
81001a6b:	e9 2f 01 00 00       	jmp    81001b9f <_free_r+0x3c5>
81001a70:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a73:	c1 e8 09             	shr    $0x9,%eax
81001a76:	85 c0                	test   %eax,%eax
81001a78:	75 08                	jne    81001a82 <_free_r+0x2a8>
81001a7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a7d:	c1 e8 03             	shr    $0x3,%eax
81001a80:	eb 77                	jmp    81001af9 <_free_r+0x31f>
81001a82:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a85:	c1 e8 09             	shr    $0x9,%eax
81001a88:	83 f8 04             	cmp    $0x4,%eax
81001a8b:	77 0b                	ja     81001a98 <_free_r+0x2be>
81001a8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a90:	c1 e8 06             	shr    $0x6,%eax
81001a93:	83 c0 38             	add    $0x38,%eax
81001a96:	eb 61                	jmp    81001af9 <_free_r+0x31f>
81001a98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a9b:	c1 e8 09             	shr    $0x9,%eax
81001a9e:	83 f8 14             	cmp    $0x14,%eax
81001aa1:	77 0b                	ja     81001aae <_free_r+0x2d4>
81001aa3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa6:	c1 e8 09             	shr    $0x9,%eax
81001aa9:	83 c0 5b             	add    $0x5b,%eax
81001aac:	eb 4b                	jmp    81001af9 <_free_r+0x31f>
81001aae:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ab1:	c1 e8 09             	shr    $0x9,%eax
81001ab4:	83 f8 54             	cmp    $0x54,%eax
81001ab7:	77 0b                	ja     81001ac4 <_free_r+0x2ea>
81001ab9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001abc:	c1 e8 0c             	shr    $0xc,%eax
81001abf:	83 c0 6e             	add    $0x6e,%eax
81001ac2:	eb 35                	jmp    81001af9 <_free_r+0x31f>
81001ac4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ac7:	c1 e8 09             	shr    $0x9,%eax
81001aca:	3d 54 01 00 00       	cmp    $0x154,%eax
81001acf:	77 0b                	ja     81001adc <_free_r+0x302>
81001ad1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ad4:	c1 e8 0f             	shr    $0xf,%eax
81001ad7:	83 c0 77             	add    $0x77,%eax
81001ada:	eb 1d                	jmp    81001af9 <_free_r+0x31f>
81001adc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001adf:	c1 e8 09             	shr    $0x9,%eax
81001ae2:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ae7:	77 0b                	ja     81001af4 <_free_r+0x31a>
81001ae9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aec:	c1 e8 12             	shr    $0x12,%eax
81001aef:	83 c0 7c             	add    $0x7c,%eax
81001af2:	eb 05                	jmp    81001af9 <_free_r+0x31f>
81001af4:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001af9:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001afc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001aff:	83 c0 01             	add    $0x1,%eax
81001b02:	01 c0                	add    %eax,%eax
81001b04:	c1 e0 02             	shl    $0x2,%eax
81001b07:	05 40 7f 00 81       	add    $0x81007f40,%eax
81001b0c:	83 e8 08             	sub    $0x8,%eax
81001b0f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b12:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b15:	8b 40 08             	mov    0x8(%eax),%eax
81001b18:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b1e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b21:	75 36                	jne    81001b59 <_free_r+0x37f>
81001b23:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001b28:	8b 58 04             	mov    0x4(%eax),%ebx
81001b2b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001b2e:	8d 50 03             	lea    0x3(%eax),%edx
81001b31:	85 c0                	test   %eax,%eax
81001b33:	0f 48 c2             	cmovs  %edx,%eax
81001b36:	c1 f8 02             	sar    $0x2,%eax
81001b39:	ba 01 00 00 00       	mov    $0x1,%edx
81001b3e:	89 c1                	mov    %eax,%ecx
81001b40:	d3 e2                	shl    %cl,%edx
81001b42:	89 d0                	mov    %edx,%eax
81001b44:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81001b49:	09 d8                	or     %ebx,%eax
81001b4b:	89 42 04             	mov    %eax,0x4(%edx)
81001b4e:	eb 28                	jmp    81001b78 <_free_r+0x39e>
81001b50:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b53:	8b 40 08             	mov    0x8(%eax),%eax
81001b56:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b59:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b5c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b5f:	74 0e                	je     81001b6f <_free_r+0x395>
81001b61:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b64:	8b 40 04             	mov    0x4(%eax),%eax
81001b67:	83 e0 fc             	and    $0xfffffffc,%eax
81001b6a:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001b6d:	72 e1                	jb     81001b50 <_free_r+0x376>
81001b6f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b72:	8b 40 0c             	mov    0xc(%eax),%eax
81001b75:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b7b:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b7e:	89 50 0c             	mov    %edx,0xc(%eax)
81001b81:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b84:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b87:	89 50 08             	mov    %edx,0x8(%eax)
81001b8a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b8d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b90:	89 50 08             	mov    %edx,0x8(%eax)
81001b93:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b96:	8b 50 08             	mov    0x8(%eax),%edx
81001b99:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b9c:	89 50 0c             	mov    %edx,0xc(%eax)
81001b9f:	83 ec 0c             	sub    $0xc,%esp
81001ba2:	ff 75 08             	push   0x8(%ebp)
81001ba5:	e8 c1 29 00 00       	call   8100456b <__malloc_unlock>
81001baa:	83 c4 10             	add    $0x10,%esp
81001bad:	eb 01                	jmp    81001bb0 <_free_r+0x3d6>
81001baf:	90                   	nop
81001bb0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001bb3:	c9                   	leave  
81001bb4:	c3                   	ret    

81001bb5 <_malloc_trim_r>:
81001bb5:	55                   	push   %ebp
81001bb6:	89 e5                	mov    %esp,%ebp
81001bb8:	83 ec 28             	sub    $0x28,%esp
81001bbb:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001bc2:	83 ec 0c             	sub    $0xc,%esp
81001bc5:	ff 75 08             	push   0x8(%ebp)
81001bc8:	e8 98 29 00 00       	call   81004565 <__malloc_lock>
81001bcd:	83 c4 10             	add    $0x10,%esp
81001bd0:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001bd5:	8b 40 08             	mov    0x8(%eax),%eax
81001bd8:	8b 40 04             	mov    0x4(%eax),%eax
81001bdb:	83 e0 fc             	and    $0xfffffffc,%eax
81001bde:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001be1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001be4:	2b 45 0c             	sub    0xc(%ebp),%eax
81001be7:	89 c2                	mov    %eax,%edx
81001be9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bec:	01 d0                	add    %edx,%eax
81001bee:	83 e8 11             	sub    $0x11,%eax
81001bf1:	ba 00 00 00 00       	mov    $0x0,%edx
81001bf6:	f7 75 f4             	divl   -0xc(%ebp)
81001bf9:	83 e8 01             	sub    $0x1,%eax
81001bfc:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001c00:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c06:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c09:	7d 18                	jge    81001c23 <_malloc_trim_r+0x6e>
81001c0b:	83 ec 0c             	sub    $0xc,%esp
81001c0e:	ff 75 08             	push   0x8(%ebp)
81001c11:	e8 55 29 00 00       	call   8100456b <__malloc_unlock>
81001c16:	83 c4 10             	add    $0x10,%esp
81001c19:	b8 00 00 00 00       	mov    $0x0,%eax
81001c1e:	e9 f1 00 00 00       	jmp    81001d14 <_malloc_trim_r+0x15f>
81001c23:	83 ec 08             	sub    $0x8,%esp
81001c26:	6a 00                	push   $0x0
81001c28:	ff 75 08             	push   0x8(%ebp)
81001c2b:	e8 c9 42 00 00       	call   81005ef9 <_sbrk_r>
81001c30:	83 c4 10             	add    $0x10,%esp
81001c33:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c36:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001c3b:	8b 50 08             	mov    0x8(%eax),%edx
81001c3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c41:	01 d0                	add    %edx,%eax
81001c43:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001c46:	74 18                	je     81001c60 <_malloc_trim_r+0xab>
81001c48:	83 ec 0c             	sub    $0xc,%esp
81001c4b:	ff 75 08             	push   0x8(%ebp)
81001c4e:	e8 18 29 00 00       	call   8100456b <__malloc_unlock>
81001c53:	83 c4 10             	add    $0x10,%esp
81001c56:	b8 00 00 00 00       	mov    $0x0,%eax
81001c5b:	e9 b4 00 00 00       	jmp    81001d14 <_malloc_trim_r+0x15f>
81001c60:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c63:	f7 d8                	neg    %eax
81001c65:	83 ec 08             	sub    $0x8,%esp
81001c68:	50                   	push   %eax
81001c69:	ff 75 08             	push   0x8(%ebp)
81001c6c:	e8 88 42 00 00       	call   81005ef9 <_sbrk_r>
81001c71:	83 c4 10             	add    $0x10,%esp
81001c74:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c77:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001c7b:	75 61                	jne    81001cde <_malloc_trim_r+0x129>
81001c7d:	83 ec 08             	sub    $0x8,%esp
81001c80:	6a 00                	push   $0x0
81001c82:	ff 75 08             	push   0x8(%ebp)
81001c85:	e8 6f 42 00 00       	call   81005ef9 <_sbrk_r>
81001c8a:	83 c4 10             	add    $0x10,%esp
81001c8d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c90:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001c95:	8b 50 08             	mov    0x8(%eax),%edx
81001c98:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c9b:	29 d0                	sub    %edx,%eax
81001c9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ca0:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001ca4:	7e 23                	jle    81001cc9 <_malloc_trim_r+0x114>
81001ca6:	8b 15 4c 83 00 81    	mov    0x8100834c,%edx
81001cac:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001caf:	29 d0                	sub    %edx,%eax
81001cb1:	a3 40 8b 00 81       	mov    %eax,0x81008b40
81001cb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cb9:	83 c8 01             	or     $0x1,%eax
81001cbc:	89 c2                	mov    %eax,%edx
81001cbe:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001cc3:	8b 40 08             	mov    0x8(%eax),%eax
81001cc6:	89 50 04             	mov    %edx,0x4(%eax)
81001cc9:	83 ec 0c             	sub    $0xc,%esp
81001ccc:	ff 75 08             	push   0x8(%ebp)
81001ccf:	e8 97 28 00 00       	call   8100456b <__malloc_unlock>
81001cd4:	83 c4 10             	add    $0x10,%esp
81001cd7:	b8 00 00 00 00       	mov    $0x0,%eax
81001cdc:	eb 36                	jmp    81001d14 <_malloc_trim_r+0x15f>
81001cde:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ce1:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001ce4:	83 c8 01             	or     $0x1,%eax
81001ce7:	89 c2                	mov    %eax,%edx
81001ce9:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81001cee:	8b 40 08             	mov    0x8(%eax),%eax
81001cf1:	89 50 04             	mov    %edx,0x4(%eax)
81001cf4:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81001cf9:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cfc:	a3 40 8b 00 81       	mov    %eax,0x81008b40
81001d01:	83 ec 0c             	sub    $0xc,%esp
81001d04:	ff 75 08             	push   0x8(%ebp)
81001d07:	e8 5f 28 00 00       	call   8100456b <__malloc_unlock>
81001d0c:	83 c4 10             	add    $0x10,%esp
81001d0f:	b8 01 00 00 00       	mov    $0x1,%eax
81001d14:	c9                   	leave  
81001d15:	c3                   	ret    

81001d16 <_fseek_r>:
81001d16:	55                   	push   %ebp
81001d17:	89 e5                	mov    %esp,%ebp
81001d19:	83 ec 08             	sub    $0x8,%esp
81001d1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d1f:	ff 75 14             	push   0x14(%ebp)
81001d22:	ff 75 10             	push   0x10(%ebp)
81001d25:	50                   	push   %eax
81001d26:	ff 75 08             	push   0x8(%ebp)
81001d29:	e8 25 00 00 00       	call   81001d53 <_fseeko_r>
81001d2e:	83 c4 10             	add    $0x10,%esp
81001d31:	c9                   	leave  
81001d32:	c3                   	ret    

81001d33 <fseek>:
81001d33:	55                   	push   %ebp
81001d34:	89 e5                	mov    %esp,%ebp
81001d36:	83 ec 08             	sub    $0x8,%esp
81001d39:	8b 55 08             	mov    0x8(%ebp),%edx
81001d3c:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81001d41:	ff 75 10             	push   0x10(%ebp)
81001d44:	ff 75 0c             	push   0xc(%ebp)
81001d47:	52                   	push   %edx
81001d48:	50                   	push   %eax
81001d49:	e8 c8 ff ff ff       	call   81001d16 <_fseek_r>
81001d4e:	83 c4 10             	add    $0x10,%esp
81001d51:	c9                   	leave  
81001d52:	c3                   	ret    

81001d53 <_fseeko_r>:
81001d53:	55                   	push   %ebp
81001d54:	89 e5                	mov    %esp,%ebp
81001d56:	56                   	push   %esi
81001d57:	53                   	push   %ebx
81001d58:	83 ec 60             	sub    $0x60,%esp
81001d5b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001d5e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d65:	8b 45 08             	mov    0x8(%ebp),%eax
81001d68:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d6b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001d6f:	74 18                	je     81001d89 <_fseeko_r+0x36>
81001d71:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d74:	8b 40 38             	mov    0x38(%eax),%eax
81001d77:	85 c0                	test   %eax,%eax
81001d79:	75 0e                	jne    81001d89 <_fseeko_r+0x36>
81001d7b:	83 ec 0c             	sub    $0xc,%esp
81001d7e:	ff 75 e4             	push   -0x1c(%ebp)
81001d81:	e8 39 f7 ff ff       	call   810014bf <__sinit>
81001d86:	83 c4 10             	add    $0x10,%esp
81001d89:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d8d:	98                   	cwtl   
81001d8e:	25 00 01 00 00       	and    $0x100,%eax
81001d93:	85 c0                	test   %eax,%eax
81001d95:	74 1b                	je     81001db2 <_fseeko_r+0x5f>
81001d97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d9b:	98                   	cwtl   
81001d9c:	83 e0 08             	and    $0x8,%eax
81001d9f:	85 c0                	test   %eax,%eax
81001da1:	74 0f                	je     81001db2 <_fseeko_r+0x5f>
81001da3:	83 ec 08             	sub    $0x8,%esp
81001da6:	53                   	push   %ebx
81001da7:	ff 75 08             	push   0x8(%ebp)
81001daa:	e8 0d f2 ff ff       	call   81000fbc <_fflush_r>
81001daf:	83 c4 10             	add    $0x10,%esp
81001db2:	8b 43 28             	mov    0x28(%ebx),%eax
81001db5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001db8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001dbc:	75 13                	jne    81001dd1 <_fseeko_r+0x7e>
81001dbe:	8b 45 08             	mov    0x8(%ebp),%eax
81001dc1:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001dc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dcc:	e9 2c 04 00 00       	jmp    810021fd <_fseeko_r+0x4aa>
81001dd1:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001dd5:	0f 84 bc 00 00 00    	je     81001e97 <_fseeko_r+0x144>
81001ddb:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001ddf:	0f 8f bb 00 00 00    	jg     81001ea0 <_fseeko_r+0x14d>
81001de5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001de9:	0f 84 a8 00 00 00    	je     81001e97 <_fseeko_r+0x144>
81001def:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001df3:	0f 85 a7 00 00 00    	jne    81001ea0 <_fseeko_r+0x14d>
81001df9:	83 ec 08             	sub    $0x8,%esp
81001dfc:	53                   	push   %ebx
81001dfd:	ff 75 08             	push   0x8(%ebp)
81001e00:	e8 b7 f1 ff ff       	call   81000fbc <_fflush_r>
81001e05:	83 c4 10             	add    $0x10,%esp
81001e08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e0c:	98                   	cwtl   
81001e0d:	25 00 10 00 00       	and    $0x1000,%eax
81001e12:	85 c0                	test   %eax,%eax
81001e14:	74 08                	je     81001e1e <_fseeko_r+0xcb>
81001e16:	8b 43 50             	mov    0x50(%ebx),%eax
81001e19:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e1c:	eb 26                	jmp    81001e44 <_fseeko_r+0xf1>
81001e1e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001e21:	6a 01                	push   $0x1
81001e23:	6a 00                	push   $0x0
81001e25:	50                   	push   %eax
81001e26:	ff 75 08             	push   0x8(%ebp)
81001e29:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e2c:	ff d0                	call   *%eax
81001e2e:	83 c4 10             	add    $0x10,%esp
81001e31:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e34:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001e38:	75 0a                	jne    81001e44 <_fseeko_r+0xf1>
81001e3a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e3f:	e9 b9 03 00 00       	jmp    810021fd <_fseeko_r+0x4aa>
81001e44:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e48:	98                   	cwtl   
81001e49:	83 e0 04             	and    $0x4,%eax
81001e4c:	85 c0                	test   %eax,%eax
81001e4e:	74 15                	je     81001e65 <_fseeko_r+0x112>
81001e50:	8b 43 04             	mov    0x4(%ebx),%eax
81001e53:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e56:	8b 43 30             	mov    0x30(%ebx),%eax
81001e59:	85 c0                	test   %eax,%eax
81001e5b:	74 24                	je     81001e81 <_fseeko_r+0x12e>
81001e5d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001e60:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e63:	eb 1c                	jmp    81001e81 <_fseeko_r+0x12e>
81001e65:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e69:	98                   	cwtl   
81001e6a:	83 e0 08             	and    $0x8,%eax
81001e6d:	85 c0                	test   %eax,%eax
81001e6f:	74 10                	je     81001e81 <_fseeko_r+0x12e>
81001e71:	8b 03                	mov    (%ebx),%eax
81001e73:	85 c0                	test   %eax,%eax
81001e75:	74 0a                	je     81001e81 <_fseeko_r+0x12e>
81001e77:	8b 03                	mov    (%ebx),%eax
81001e79:	8b 53 10             	mov    0x10(%ebx),%edx
81001e7c:	29 d0                	sub    %edx,%eax
81001e7e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e81:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e84:	01 45 10             	add    %eax,0x10(%ebp)
81001e87:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001e8e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001e95:	eb 1c                	jmp    81001eb3 <_fseeko_r+0x160>
81001e97:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001e9e:	eb 13                	jmp    81001eb3 <_fseeko_r+0x160>
81001ea0:	8b 45 08             	mov    0x8(%ebp),%eax
81001ea3:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001ea9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001eae:	e9 4a 03 00 00       	jmp    810021fd <_fseeko_r+0x4aa>
81001eb3:	8b 43 10             	mov    0x10(%ebx),%eax
81001eb6:	85 c0                	test   %eax,%eax
81001eb8:	75 0f                	jne    81001ec9 <_fseeko_r+0x176>
81001eba:	83 ec 08             	sub    $0x8,%esp
81001ebd:	53                   	push   %ebx
81001ebe:	ff 75 08             	push   0x8(%ebp)
81001ec1:	e8 e7 17 00 00       	call   810036ad <__smakebuf_r>
81001ec6:	83 c4 10             	add    $0x10,%esp
81001ec9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ecd:	98                   	cwtl   
81001ece:	25 1a 08 00 00       	and    $0x81a,%eax
81001ed3:	85 c0                	test   %eax,%eax
81001ed5:	0f 85 7d 02 00 00    	jne    81002158 <_fseeko_r+0x405>
81001edb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001edf:	98                   	cwtl   
81001ee0:	25 00 04 00 00       	and    $0x400,%eax
81001ee5:	85 c0                	test   %eax,%eax
81001ee7:	75 5f                	jne    81001f48 <_fseeko_r+0x1f5>
81001ee9:	81 7d e0 e2 5f 00 81 	cmpl   $0x81005fe2,-0x20(%ebp)
81001ef0:	75 34                	jne    81001f26 <_fseeko_r+0x1d3>
81001ef2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001ef6:	66 85 c0             	test   %ax,%ax
81001ef9:	78 2b                	js     81001f26 <_fseeko_r+0x1d3>
81001efb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001eff:	98                   	cwtl   
81001f00:	83 ec 04             	sub    $0x4,%esp
81001f03:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f06:	52                   	push   %edx
81001f07:	50                   	push   %eax
81001f08:	ff 75 08             	push   0x8(%ebp)
81001f0b:	e8 14 03 00 00       	call   81002224 <_fstat_r>
81001f10:	83 c4 10             	add    $0x10,%esp
81001f13:	85 c0                	test   %eax,%eax
81001f15:	75 0f                	jne    81001f26 <_fseeko_r+0x1d3>
81001f17:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001f1a:	25 00 f0 00 00       	and    $0xf000,%eax
81001f1f:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001f24:	74 10                	je     81001f36 <_fseeko_r+0x1e3>
81001f26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f2a:	80 cc 08             	or     $0x8,%ah
81001f2d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f31:	e9 2f 02 00 00       	jmp    81002165 <_fseeko_r+0x412>
81001f36:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001f3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f41:	80 cc 04             	or     $0x4,%ah
81001f44:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f48:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001f4c:	75 08                	jne    81001f56 <_fseeko_r+0x203>
81001f4e:	8b 45 10             	mov    0x10(%ebp),%eax
81001f51:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f54:	eb 2b                	jmp    81001f81 <_fseeko_r+0x22e>
81001f56:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f5a:	98                   	cwtl   
81001f5b:	83 ec 04             	sub    $0x4,%esp
81001f5e:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f61:	52                   	push   %edx
81001f62:	50                   	push   %eax
81001f63:	ff 75 08             	push   0x8(%ebp)
81001f66:	e8 b9 02 00 00       	call   81002224 <_fstat_r>
81001f6b:	83 c4 10             	add    $0x10,%esp
81001f6e:	85 c0                	test   %eax,%eax
81001f70:	0f 85 e5 01 00 00    	jne    8100215b <_fseeko_r+0x408>
81001f76:	8b 55 a8             	mov    -0x58(%ebp),%edx
81001f79:	8b 45 10             	mov    0x10(%ebp),%eax
81001f7c:	01 d0                	add    %edx,%eax
81001f7e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f81:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f85:	75 49                	jne    81001fd0 <_fseeko_r+0x27d>
81001f87:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f8b:	98                   	cwtl   
81001f8c:	25 00 10 00 00       	and    $0x1000,%eax
81001f91:	85 c0                	test   %eax,%eax
81001f93:	74 08                	je     81001f9d <_fseeko_r+0x24a>
81001f95:	8b 43 50             	mov    0x50(%ebx),%eax
81001f98:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f9b:	eb 20                	jmp    81001fbd <_fseeko_r+0x26a>
81001f9d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001fa0:	6a 01                	push   $0x1
81001fa2:	6a 00                	push   $0x0
81001fa4:	50                   	push   %eax
81001fa5:	ff 75 08             	push   0x8(%ebp)
81001fa8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fab:	ff d0                	call   *%eax
81001fad:	83 c4 10             	add    $0x10,%esp
81001fb0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fb3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001fb7:	0f 84 a1 01 00 00    	je     8100215e <_fseeko_r+0x40b>
81001fbd:	8b 43 04             	mov    0x4(%ebx),%eax
81001fc0:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fc3:	8b 43 30             	mov    0x30(%ebx),%eax
81001fc6:	85 c0                	test   %eax,%eax
81001fc8:	74 06                	je     81001fd0 <_fseeko_r+0x27d>
81001fca:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fcd:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fd0:	8b 43 30             	mov    0x30(%ebx),%eax
81001fd3:	85 c0                	test   %eax,%eax
81001fd5:	74 22                	je     81001ff9 <_fseeko_r+0x2a6>
81001fd7:	8b 43 04             	mov    0x4(%ebx),%eax
81001fda:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fdd:	8b 43 38             	mov    0x38(%ebx),%eax
81001fe0:	8b 53 10             	mov    0x10(%ebx),%edx
81001fe3:	29 d0                	sub    %edx,%eax
81001fe5:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fe8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001feb:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fee:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ff1:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001ff4:	01 45 ec             	add    %eax,-0x14(%ebp)
81001ff7:	eb 19                	jmp    81002012 <_fseeko_r+0x2bf>
81001ff9:	8b 03                	mov    (%ebx),%eax
81001ffb:	8b 53 10             	mov    0x10(%ebx),%edx
81001ffe:	29 d0                	sub    %edx,%eax
81002000:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002003:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002006:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002009:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100200c:	8b 43 04             	mov    0x4(%ebx),%eax
8100200f:	01 45 ec             	add    %eax,-0x14(%ebp)
81002012:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002015:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002018:	7c 7c                	jl     81002096 <_fseeko_r+0x343>
8100201a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100201d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002020:	01 c2                	add    %eax,%edx
81002022:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002025:	39 c2                	cmp    %eax,%edx
81002027:	76 6d                	jbe    81002096 <_fseeko_r+0x343>
81002029:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100202c:	2b 45 f0             	sub    -0x10(%ebp),%eax
8100202f:	89 c6                	mov    %eax,%esi
81002031:	8b 43 10             	mov    0x10(%ebx),%eax
81002034:	89 f2                	mov    %esi,%edx
81002036:	01 d0                	add    %edx,%eax
81002038:	89 03                	mov    %eax,(%ebx)
8100203a:	89 f2                	mov    %esi,%edx
8100203c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100203f:	29 d0                	sub    %edx,%eax
81002041:	89 43 04             	mov    %eax,0x4(%ebx)
81002044:	8b 43 30             	mov    0x30(%ebx),%eax
81002047:	85 c0                	test   %eax,%eax
81002049:	74 23                	je     8100206e <_fseeko_r+0x31b>
8100204b:	8b 53 30             	mov    0x30(%ebx),%edx
8100204e:	8d 43 40             	lea    0x40(%ebx),%eax
81002051:	39 c2                	cmp    %eax,%edx
81002053:	74 12                	je     81002067 <_fseeko_r+0x314>
81002055:	8b 43 30             	mov    0x30(%ebx),%eax
81002058:	83 ec 08             	sub    $0x8,%esp
8100205b:	50                   	push   %eax
8100205c:	ff 75 08             	push   0x8(%ebp)
8100205f:	e8 76 f7 ff ff       	call   810017da <_free_r>
81002064:	83 c4 10             	add    $0x10,%esp
81002067:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100206e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002072:	83 e0 df             	and    $0xffffffdf,%eax
81002075:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002079:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100207c:	83 ec 04             	sub    $0x4,%esp
8100207f:	6a 08                	push   $0x8
81002081:	6a 00                	push   $0x0
81002083:	50                   	push   %eax
81002084:	e8 54 24 00 00       	call   810044dd <memset>
81002089:	83 c4 10             	add    $0x10,%esp
8100208c:	b8 00 00 00 00       	mov    $0x0,%eax
81002091:	e9 67 01 00 00       	jmp    810021fd <_fseeko_r+0x4aa>
81002096:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002099:	f7 d8                	neg    %eax
8100209b:	23 45 f4             	and    -0xc(%ebp),%eax
8100209e:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020a1:	8b 43 1c             	mov    0x1c(%ebx),%eax
810020a4:	6a 00                	push   $0x0
810020a6:	ff 75 f0             	push   -0x10(%ebp)
810020a9:	50                   	push   %eax
810020aa:	ff 75 08             	push   0x8(%ebp)
810020ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
810020b0:	ff d0                	call   *%eax
810020b2:	83 c4 10             	add    $0x10,%esp
810020b5:	83 f8 ff             	cmp    $0xffffffff,%eax
810020b8:	0f 84 a3 00 00 00    	je     81002161 <_fseeko_r+0x40e>
810020be:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810020c5:	8b 43 10             	mov    0x10(%ebx),%eax
810020c8:	89 03                	mov    %eax,(%ebx)
810020ca:	8b 43 30             	mov    0x30(%ebx),%eax
810020cd:	85 c0                	test   %eax,%eax
810020cf:	74 23                	je     810020f4 <_fseeko_r+0x3a1>
810020d1:	8b 53 30             	mov    0x30(%ebx),%edx
810020d4:	8d 43 40             	lea    0x40(%ebx),%eax
810020d7:	39 c2                	cmp    %eax,%edx
810020d9:	74 12                	je     810020ed <_fseeko_r+0x39a>
810020db:	8b 43 30             	mov    0x30(%ebx),%eax
810020de:	83 ec 08             	sub    $0x8,%esp
810020e1:	50                   	push   %eax
810020e2:	ff 75 08             	push   0x8(%ebp)
810020e5:	e8 f0 f6 ff ff       	call   810017da <_free_r>
810020ea:	83 c4 10             	add    $0x10,%esp
810020ed:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810020f4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020f8:	83 e0 df             	and    $0xffffffdf,%eax
810020fb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810020ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002102:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002105:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002108:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100210c:	74 2d                	je     8100213b <_fseeko_r+0x3e8>
8100210e:	83 ec 08             	sub    $0x8,%esp
81002111:	53                   	push   %ebx
81002112:	ff 75 08             	push   0x8(%ebp)
81002115:	e8 de 3b 00 00       	call   81005cf8 <__srefill_r>
8100211a:	83 c4 10             	add    $0x10,%esp
8100211d:	85 c0                	test   %eax,%eax
8100211f:	75 43                	jne    81002164 <_fseeko_r+0x411>
81002121:	8b 43 04             	mov    0x4(%ebx),%eax
81002124:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002127:	77 3b                	ja     81002164 <_fseeko_r+0x411>
81002129:	8b 13                	mov    (%ebx),%edx
8100212b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100212e:	01 d0                	add    %edx,%eax
81002130:	89 03                	mov    %eax,(%ebx)
81002132:	8b 43 04             	mov    0x4(%ebx),%eax
81002135:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002138:	89 43 04             	mov    %eax,0x4(%ebx)
8100213b:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100213e:	83 ec 04             	sub    $0x4,%esp
81002141:	6a 08                	push   $0x8
81002143:	6a 00                	push   $0x0
81002145:	50                   	push   %eax
81002146:	e8 92 23 00 00       	call   810044dd <memset>
8100214b:	83 c4 10             	add    $0x10,%esp
8100214e:	b8 00 00 00 00       	mov    $0x0,%eax
81002153:	e9 a5 00 00 00       	jmp    810021fd <_fseeko_r+0x4aa>
81002158:	90                   	nop
81002159:	eb 0a                	jmp    81002165 <_fseeko_r+0x412>
8100215b:	90                   	nop
8100215c:	eb 07                	jmp    81002165 <_fseeko_r+0x412>
8100215e:	90                   	nop
8100215f:	eb 04                	jmp    81002165 <_fseeko_r+0x412>
81002161:	90                   	nop
81002162:	eb 01                	jmp    81002165 <_fseeko_r+0x412>
81002164:	90                   	nop
81002165:	83 ec 08             	sub    $0x8,%esp
81002168:	53                   	push   %ebx
81002169:	ff 75 08             	push   0x8(%ebp)
8100216c:	e8 4b ee ff ff       	call   81000fbc <_fflush_r>
81002171:	83 c4 10             	add    $0x10,%esp
81002174:	85 c0                	test   %eax,%eax
81002176:	75 1a                	jne    81002192 <_fseeko_r+0x43f>
81002178:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100217b:	ff 75 14             	push   0x14(%ebp)
8100217e:	ff 75 10             	push   0x10(%ebp)
81002181:	50                   	push   %eax
81002182:	ff 75 08             	push   0x8(%ebp)
81002185:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002188:	ff d0                	call   *%eax
8100218a:	83 c4 10             	add    $0x10,%esp
8100218d:	83 f8 ff             	cmp    $0xffffffff,%eax
81002190:	75 07                	jne    81002199 <_fseeko_r+0x446>
81002192:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002197:	eb 64                	jmp    810021fd <_fseeko_r+0x4aa>
81002199:	8b 43 30             	mov    0x30(%ebx),%eax
8100219c:	85 c0                	test   %eax,%eax
8100219e:	74 23                	je     810021c3 <_fseeko_r+0x470>
810021a0:	8b 53 30             	mov    0x30(%ebx),%edx
810021a3:	8d 43 40             	lea    0x40(%ebx),%eax
810021a6:	39 c2                	cmp    %eax,%edx
810021a8:	74 12                	je     810021bc <_fseeko_r+0x469>
810021aa:	8b 43 30             	mov    0x30(%ebx),%eax
810021ad:	83 ec 08             	sub    $0x8,%esp
810021b0:	50                   	push   %eax
810021b1:	ff 75 08             	push   0x8(%ebp)
810021b4:	e8 21 f6 ff ff       	call   810017da <_free_r>
810021b9:	83 c4 10             	add    $0x10,%esp
810021bc:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810021c3:	8b 43 10             	mov    0x10(%ebx),%eax
810021c6:	89 03                	mov    %eax,(%ebx)
810021c8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810021cf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021d3:	83 e0 df             	and    $0xffffffdf,%eax
810021d6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021de:	80 e4 f7             	and    $0xf7,%ah
810021e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021e5:	8d 43 5c             	lea    0x5c(%ebx),%eax
810021e8:	83 ec 04             	sub    $0x4,%esp
810021eb:	6a 08                	push   $0x8
810021ed:	6a 00                	push   $0x0
810021ef:	50                   	push   %eax
810021f0:	e8 e8 22 00 00       	call   810044dd <memset>
810021f5:	83 c4 10             	add    $0x10,%esp
810021f8:	b8 00 00 00 00       	mov    $0x0,%eax
810021fd:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002200:	5b                   	pop    %ebx
81002201:	5e                   	pop    %esi
81002202:	5d                   	pop    %ebp
81002203:	c3                   	ret    

81002204 <fseeko>:
81002204:	55                   	push   %ebp
81002205:	89 e5                	mov    %esp,%ebp
81002207:	83 ec 08             	sub    $0x8,%esp
8100220a:	8b 55 08             	mov    0x8(%ebp),%edx
8100220d:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002212:	ff 75 10             	push   0x10(%ebp)
81002215:	ff 75 0c             	push   0xc(%ebp)
81002218:	52                   	push   %edx
81002219:	50                   	push   %eax
8100221a:	e8 34 fb ff ff       	call   81001d53 <_fseeko_r>
8100221f:	83 c4 10             	add    $0x10,%esp
81002222:	c9                   	leave  
81002223:	c3                   	ret    

81002224 <_fstat_r>:
81002224:	55                   	push   %ebp
81002225:	89 e5                	mov    %esp,%ebp
81002227:	83 ec 18             	sub    $0x18,%esp
8100222a:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
81002231:	00 00 00 
81002234:	83 ec 08             	sub    $0x8,%esp
81002237:	ff 75 10             	push   0x10(%ebp)
8100223a:	ff 75 0c             	push   0xc(%ebp)
8100223d:	e8 2f e8 ff ff       	call   81000a71 <fstat>
81002242:	83 c4 10             	add    $0x10,%esp
81002245:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002248:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100224c:	75 14                	jne    81002262 <_fstat_r+0x3e>
8100224e:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81002253:	85 c0                	test   %eax,%eax
81002255:	74 0b                	je     81002262 <_fstat_r+0x3e>
81002257:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
8100225d:	8b 45 08             	mov    0x8(%ebp),%eax
81002260:	89 10                	mov    %edx,(%eax)
81002262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002265:	c9                   	leave  
81002266:	c3                   	ret    

81002267 <__sfvwrite_r>:
81002267:	55                   	push   %ebp
81002268:	89 e5                	mov    %esp,%ebp
8100226a:	57                   	push   %edi
8100226b:	56                   	push   %esi
8100226c:	53                   	push   %ebx
8100226d:	83 ec 3c             	sub    $0x3c,%esp
81002270:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002273:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100227a:	8b 45 10             	mov    0x10(%ebp),%eax
8100227d:	8b 78 08             	mov    0x8(%eax),%edi
81002280:	85 ff                	test   %edi,%edi
81002282:	75 0a                	jne    8100228e <__sfvwrite_r+0x27>
81002284:	b8 00 00 00 00       	mov    $0x0,%eax
81002289:	e9 6f 04 00 00       	jmp    810026fd <__sfvwrite_r+0x496>
8100228e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002292:	98                   	cwtl   
81002293:	83 e0 08             	and    $0x8,%eax
81002296:	85 c0                	test   %eax,%eax
81002298:	74 07                	je     810022a1 <__sfvwrite_r+0x3a>
8100229a:	8b 43 10             	mov    0x10(%ebx),%eax
8100229d:	85 c0                	test   %eax,%eax
8100229f:	75 1d                	jne    810022be <__sfvwrite_r+0x57>
810022a1:	83 ec 08             	sub    $0x8,%esp
810022a4:	53                   	push   %ebx
810022a5:	ff 75 08             	push   0x8(%ebp)
810022a8:	e8 bb 44 00 00       	call   81006768 <__swsetup_r>
810022ad:	83 c4 10             	add    $0x10,%esp
810022b0:	85 c0                	test   %eax,%eax
810022b2:	74 0a                	je     810022be <__sfvwrite_r+0x57>
810022b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022b9:	e9 3f 04 00 00       	jmp    810026fd <__sfvwrite_r+0x496>
810022be:	8b 45 10             	mov    0x10(%ebp),%eax
810022c1:	8b 00                	mov    (%eax),%eax
810022c3:	89 45 c0             	mov    %eax,-0x40(%ebp)
810022c6:	bf 00 00 00 00       	mov    $0x0,%edi
810022cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022cf:	98                   	cwtl   
810022d0:	83 e0 02             	and    $0x2,%eax
810022d3:	85 c0                	test   %eax,%eax
810022d5:	74 68                	je     8100233f <__sfvwrite_r+0xd8>
810022d7:	eb 11                	jmp    810022ea <__sfvwrite_r+0x83>
810022d9:	8b 45 c0             	mov    -0x40(%ebp),%eax
810022dc:	8b 08                	mov    (%eax),%ecx
810022de:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810022e1:	8b 78 04             	mov    0x4(%eax),%edi
810022e4:	83 c0 08             	add    $0x8,%eax
810022e7:	89 45 c0             	mov    %eax,-0x40(%ebp)
810022ea:	85 ff                	test   %edi,%edi
810022ec:	74 eb                	je     810022d9 <__sfvwrite_r+0x72>
810022ee:	8b 4b 24             	mov    0x24(%ebx),%ecx
810022f1:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810022f6:	39 c7                	cmp    %eax,%edi
810022f8:	0f 46 c7             	cmovbe %edi,%eax
810022fb:	89 c2                	mov    %eax,%edx
810022fd:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002300:	52                   	push   %edx
81002301:	ff 75 c4             	push   -0x3c(%ebp)
81002304:	50                   	push   %eax
81002305:	ff 75 08             	push   0x8(%ebp)
81002308:	ff d1                	call   *%ecx
8100230a:	83 c4 10             	add    $0x10,%esp
8100230d:	89 c6                	mov    %eax,%esi
8100230f:	85 f6                	test   %esi,%esi
81002311:	0f 8e cf 03 00 00    	jle    810026e6 <__sfvwrite_r+0x47f>
81002317:	89 f0                	mov    %esi,%eax
81002319:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100231c:	89 f0                	mov    %esi,%eax
8100231e:	29 c7                	sub    %eax,%edi
81002320:	8b 45 10             	mov    0x10(%ebp),%eax
81002323:	8b 40 08             	mov    0x8(%eax),%eax
81002326:	89 f2                	mov    %esi,%edx
81002328:	29 d0                	sub    %edx,%eax
8100232a:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100232d:	89 41 08             	mov    %eax,0x8(%ecx)
81002330:	8b 45 10             	mov    0x10(%ebp),%eax
81002333:	8b 40 08             	mov    0x8(%eax),%eax
81002336:	85 c0                	test   %eax,%eax
81002338:	75 b0                	jne    810022ea <__sfvwrite_r+0x83>
8100233a:	e9 a0 03 00 00       	jmp    810026df <__sfvwrite_r+0x478>
8100233f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002343:	98                   	cwtl   
81002344:	83 e0 01             	and    $0x1,%eax
81002347:	85 c0                	test   %eax,%eax
81002349:	0f 85 44 02 00 00    	jne    81002593 <__sfvwrite_r+0x32c>
8100234f:	eb 11                	jmp    81002362 <__sfvwrite_r+0xfb>
81002351:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002354:	8b 08                	mov    (%eax),%ecx
81002356:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002359:	8b 78 04             	mov    0x4(%eax),%edi
8100235c:	83 c0 08             	add    $0x8,%eax
8100235f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002362:	85 ff                	test   %edi,%edi
81002364:	74 eb                	je     81002351 <__sfvwrite_r+0xea>
81002366:	8b 73 08             	mov    0x8(%ebx),%esi
81002369:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100236d:	98                   	cwtl   
8100236e:	25 00 02 00 00       	and    $0x200,%eax
81002373:	85 c0                	test   %eax,%eax
81002375:	0f 84 4f 01 00 00    	je     810024ca <__sfvwrite_r+0x263>
8100237b:	89 f0                	mov    %esi,%eax
8100237d:	39 c7                	cmp    %eax,%edi
8100237f:	0f 82 12 01 00 00    	jb     81002497 <__sfvwrite_r+0x230>
81002385:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002389:	98                   	cwtl   
8100238a:	25 80 04 00 00       	and    $0x480,%eax
8100238f:	85 c0                	test   %eax,%eax
81002391:	0f 84 00 01 00 00    	je     81002497 <__sfvwrite_r+0x230>
81002397:	8b 03                	mov    (%ebx),%eax
81002399:	8b 53 10             	mov    0x10(%ebx),%edx
8100239c:	29 d0                	sub    %edx,%eax
8100239e:	89 45 d0             	mov    %eax,-0x30(%ebp)
810023a1:	8b 53 14             	mov    0x14(%ebx),%edx
810023a4:	89 d0                	mov    %edx,%eax
810023a6:	01 c0                	add    %eax,%eax
810023a8:	01 d0                	add    %edx,%eax
810023aa:	89 c2                	mov    %eax,%edx
810023ac:	c1 ea 1f             	shr    $0x1f,%edx
810023af:	01 d0                	add    %edx,%eax
810023b1:	d1 f8                	sar    %eax
810023b3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810023b6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810023b9:	01 f8                	add    %edi,%eax
810023bb:	8d 50 01             	lea    0x1(%eax),%edx
810023be:	8b 45 d8             	mov    -0x28(%ebp),%eax
810023c1:	39 c2                	cmp    %eax,%edx
810023c3:	76 0b                	jbe    810023d0 <__sfvwrite_r+0x169>
810023c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810023c8:	01 f8                	add    %edi,%eax
810023ca:	83 c0 01             	add    $0x1,%eax
810023cd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810023d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023d4:	98                   	cwtl   
810023d5:	25 00 04 00 00       	and    $0x400,%eax
810023da:	85 c0                	test   %eax,%eax
810023dc:	74 4f                	je     8100242d <__sfvwrite_r+0x1c6>
810023de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810023e1:	83 ec 08             	sub    $0x8,%esp
810023e4:	50                   	push   %eax
810023e5:	ff 75 08             	push   0x8(%ebp)
810023e8:	e8 0c 17 00 00       	call   81003af9 <_malloc_r>
810023ed:	83 c4 10             	add    $0x10,%esp
810023f0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810023f3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810023f7:	75 0e                	jne    81002407 <__sfvwrite_r+0x1a0>
810023f9:	8b 45 08             	mov    0x8(%ebp),%eax
810023fc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002402:	e9 e6 02 00 00       	jmp    810026ed <__sfvwrite_r+0x486>
81002407:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100240a:	8b 43 10             	mov    0x10(%ebx),%eax
8100240d:	83 ec 04             	sub    $0x4,%esp
81002410:	52                   	push   %edx
81002411:	50                   	push   %eax
81002412:	ff 75 dc             	push   -0x24(%ebp)
81002415:	e8 ee 1f 00 00       	call   81004408 <memcpy>
8100241a:	83 c4 10             	add    $0x10,%esp
8100241d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002421:	66 25 7f fb          	and    $0xfb7f,%ax
81002425:	0c 80                	or     $0x80,%al
81002427:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100242b:	eb 49                	jmp    81002476 <__sfvwrite_r+0x20f>
8100242d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002430:	8b 43 10             	mov    0x10(%ebx),%eax
81002433:	83 ec 04             	sub    $0x4,%esp
81002436:	52                   	push   %edx
81002437:	50                   	push   %eax
81002438:	ff 75 08             	push   0x8(%ebp)
8100243b:	e8 1a 2e 00 00       	call   8100525a <_realloc_r>
81002440:	83 c4 10             	add    $0x10,%esp
81002443:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002446:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100244a:	75 2a                	jne    81002476 <__sfvwrite_r+0x20f>
8100244c:	8b 43 10             	mov    0x10(%ebx),%eax
8100244f:	83 ec 08             	sub    $0x8,%esp
81002452:	50                   	push   %eax
81002453:	ff 75 08             	push   0x8(%ebp)
81002456:	e8 7f f3 ff ff       	call   810017da <_free_r>
8100245b:	83 c4 10             	add    $0x10,%esp
8100245e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002462:	24 7f                	and    $0x7f,%al
81002464:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002468:	8b 45 08             	mov    0x8(%ebp),%eax
8100246b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002471:	e9 77 02 00 00       	jmp    810026ed <__sfvwrite_r+0x486>
81002476:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002479:	89 43 10             	mov    %eax,0x10(%ebx)
8100247c:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100247f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002482:	01 d0                	add    %edx,%eax
81002484:	89 03                	mov    %eax,(%ebx)
81002486:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002489:	89 43 14             	mov    %eax,0x14(%ebx)
8100248c:	89 fe                	mov    %edi,%esi
8100248e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002491:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002494:	89 43 08             	mov    %eax,0x8(%ebx)
81002497:	89 f0                	mov    %esi,%eax
81002499:	39 c7                	cmp    %eax,%edi
8100249b:	73 02                	jae    8100249f <__sfvwrite_r+0x238>
8100249d:	89 fe                	mov    %edi,%esi
8100249f:	89 f2                	mov    %esi,%edx
810024a1:	8b 03                	mov    (%ebx),%eax
810024a3:	83 ec 04             	sub    $0x4,%esp
810024a6:	52                   	push   %edx
810024a7:	ff 75 c4             	push   -0x3c(%ebp)
810024aa:	50                   	push   %eax
810024ab:	e8 a0 1f 00 00       	call   81004450 <memmove>
810024b0:	83 c4 10             	add    $0x10,%esp
810024b3:	8b 43 08             	mov    0x8(%ebx),%eax
810024b6:	29 f0                	sub    %esi,%eax
810024b8:	89 43 08             	mov    %eax,0x8(%ebx)
810024bb:	8b 03                	mov    (%ebx),%eax
810024bd:	89 f2                	mov    %esi,%edx
810024bf:	01 d0                	add    %edx,%eax
810024c1:	89 03                	mov    %eax,(%ebx)
810024c3:	89 fe                	mov    %edi,%esi
810024c5:	e9 9d 00 00 00       	jmp    81002567 <__sfvwrite_r+0x300>
810024ca:	8b 13                	mov    (%ebx),%edx
810024cc:	8b 43 10             	mov    0x10(%ebx),%eax
810024cf:	39 c2                	cmp    %eax,%edx
810024d1:	77 07                	ja     810024da <__sfvwrite_r+0x273>
810024d3:	8b 43 14             	mov    0x14(%ebx),%eax
810024d6:	39 c7                	cmp    %eax,%edi
810024d8:	73 4c                	jae    81002526 <__sfvwrite_r+0x2bf>
810024da:	89 f0                	mov    %esi,%eax
810024dc:	39 c7                	cmp    %eax,%edi
810024de:	0f 46 c7             	cmovbe %edi,%eax
810024e1:	89 c6                	mov    %eax,%esi
810024e3:	89 f2                	mov    %esi,%edx
810024e5:	8b 03                	mov    (%ebx),%eax
810024e7:	83 ec 04             	sub    $0x4,%esp
810024ea:	52                   	push   %edx
810024eb:	ff 75 c4             	push   -0x3c(%ebp)
810024ee:	50                   	push   %eax
810024ef:	e8 5c 1f 00 00       	call   81004450 <memmove>
810024f4:	83 c4 10             	add    $0x10,%esp
810024f7:	8b 43 08             	mov    0x8(%ebx),%eax
810024fa:	29 f0                	sub    %esi,%eax
810024fc:	89 43 08             	mov    %eax,0x8(%ebx)
810024ff:	8b 03                	mov    (%ebx),%eax
81002501:	89 f2                	mov    %esi,%edx
81002503:	01 d0                	add    %edx,%eax
81002505:	89 03                	mov    %eax,(%ebx)
81002507:	8b 43 08             	mov    0x8(%ebx),%eax
8100250a:	85 c0                	test   %eax,%eax
8100250c:	75 58                	jne    81002566 <__sfvwrite_r+0x2ff>
8100250e:	83 ec 08             	sub    $0x8,%esp
81002511:	53                   	push   %ebx
81002512:	ff 75 08             	push   0x8(%ebp)
81002515:	e8 a2 ea ff ff       	call   81000fbc <_fflush_r>
8100251a:	83 c4 10             	add    $0x10,%esp
8100251d:	85 c0                	test   %eax,%eax
8100251f:	74 45                	je     81002566 <__sfvwrite_r+0x2ff>
81002521:	e9 c7 01 00 00       	jmp    810026ed <__sfvwrite_r+0x486>
81002526:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
8100252c:	77 04                	ja     81002532 <__sfvwrite_r+0x2cb>
8100252e:	89 f8                	mov    %edi,%eax
81002530:	eb 05                	jmp    81002537 <__sfvwrite_r+0x2d0>
81002532:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002537:	8b 4b 14             	mov    0x14(%ebx),%ecx
8100253a:	99                   	cltd   
8100253b:	f7 f9                	idiv   %ecx
8100253d:	89 c2                	mov    %eax,%edx
8100253f:	8b 43 14             	mov    0x14(%ebx),%eax
81002542:	89 d6                	mov    %edx,%esi
81002544:	0f af f0             	imul   %eax,%esi
81002547:	8b 53 24             	mov    0x24(%ebx),%edx
8100254a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100254d:	56                   	push   %esi
8100254e:	ff 75 c4             	push   -0x3c(%ebp)
81002551:	50                   	push   %eax
81002552:	ff 75 08             	push   0x8(%ebp)
81002555:	ff d2                	call   *%edx
81002557:	83 c4 10             	add    $0x10,%esp
8100255a:	89 c6                	mov    %eax,%esi
8100255c:	85 f6                	test   %esi,%esi
8100255e:	0f 8e 85 01 00 00    	jle    810026e9 <__sfvwrite_r+0x482>
81002564:	eb 01                	jmp    81002567 <__sfvwrite_r+0x300>
81002566:	90                   	nop
81002567:	89 f0                	mov    %esi,%eax
81002569:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100256c:	89 f0                	mov    %esi,%eax
8100256e:	29 c7                	sub    %eax,%edi
81002570:	8b 45 10             	mov    0x10(%ebp),%eax
81002573:	8b 40 08             	mov    0x8(%eax),%eax
81002576:	89 f2                	mov    %esi,%edx
81002578:	29 d0                	sub    %edx,%eax
8100257a:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100257d:	89 41 08             	mov    %eax,0x8(%ecx)
81002580:	8b 45 10             	mov    0x10(%ebp),%eax
81002583:	8b 40 08             	mov    0x8(%eax),%eax
81002586:	85 c0                	test   %eax,%eax
81002588:	0f 85 d4 fd ff ff    	jne    81002362 <__sfvwrite_r+0xfb>
8100258e:	e9 4c 01 00 00       	jmp    810026df <__sfvwrite_r+0x478>
81002593:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100259a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810025a1:	eb 18                	jmp    810025bb <__sfvwrite_r+0x354>
810025a3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810025aa:	8b 45 c0             	mov    -0x40(%ebp),%eax
810025ad:	8b 08                	mov    (%eax),%ecx
810025af:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810025b2:	8b 78 04             	mov    0x4(%eax),%edi
810025b5:	83 c0 08             	add    $0x8,%eax
810025b8:	89 45 c0             	mov    %eax,-0x40(%ebp)
810025bb:	85 ff                	test   %edi,%edi
810025bd:	74 e4                	je     810025a3 <__sfvwrite_r+0x33c>
810025bf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810025c3:	75 32                	jne    810025f7 <__sfvwrite_r+0x390>
810025c5:	83 ec 04             	sub    $0x4,%esp
810025c8:	57                   	push   %edi
810025c9:	6a 0a                	push   $0xa
810025cb:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810025ce:	56                   	push   %esi
810025cf:	e8 4c 1d 00 00       	call   81004320 <memchr>
810025d4:	83 c4 10             	add    $0x10,%esp
810025d7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810025da:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810025de:	74 0a                	je     810025ea <__sfvwrite_r+0x383>
810025e0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810025e3:	83 c0 01             	add    $0x1,%eax
810025e6:	29 f0                	sub    %esi,%eax
810025e8:	eb 03                	jmp    810025ed <__sfvwrite_r+0x386>
810025ea:	8d 47 01             	lea    0x1(%edi),%eax
810025ed:	89 45 e0             	mov    %eax,-0x20(%ebp)
810025f0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810025f7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025fa:	39 c7                	cmp    %eax,%edi
810025fc:	0f 46 c7             	cmovbe %edi,%eax
810025ff:	89 c1                	mov    %eax,%ecx
81002601:	8b 53 08             	mov    0x8(%ebx),%edx
81002604:	8b 43 14             	mov    0x14(%ebx),%eax
81002607:	8d 34 02             	lea    (%edx,%eax,1),%esi
8100260a:	8b 13                	mov    (%ebx),%edx
8100260c:	8b 43 10             	mov    0x10(%ebx),%eax
8100260f:	39 c2                	cmp    %eax,%edx
81002611:	76 38                	jbe    8100264b <__sfvwrite_r+0x3e4>
81002613:	39 f1                	cmp    %esi,%ecx
81002615:	7e 34                	jle    8100264b <__sfvwrite_r+0x3e4>
81002617:	89 f2                	mov    %esi,%edx
81002619:	8b 03                	mov    (%ebx),%eax
8100261b:	83 ec 04             	sub    $0x4,%esp
8100261e:	52                   	push   %edx
8100261f:	ff 75 c4             	push   -0x3c(%ebp)
81002622:	50                   	push   %eax
81002623:	e8 28 1e 00 00       	call   81004450 <memmove>
81002628:	83 c4 10             	add    $0x10,%esp
8100262b:	8b 03                	mov    (%ebx),%eax
8100262d:	89 f2                	mov    %esi,%edx
8100262f:	01 d0                	add    %edx,%eax
81002631:	89 03                	mov    %eax,(%ebx)
81002633:	83 ec 08             	sub    $0x8,%esp
81002636:	53                   	push   %ebx
81002637:	ff 75 08             	push   0x8(%ebp)
8100263a:	e8 7d e9 ff ff       	call   81000fbc <_fflush_r>
8100263f:	83 c4 10             	add    $0x10,%esp
81002642:	85 c0                	test   %eax,%eax
81002644:	74 4f                	je     81002695 <__sfvwrite_r+0x42e>
81002646:	e9 a2 00 00 00       	jmp    810026ed <__sfvwrite_r+0x486>
8100264b:	8b 73 14             	mov    0x14(%ebx),%esi
8100264e:	89 c8                	mov    %ecx,%eax
81002650:	39 c6                	cmp    %eax,%esi
81002652:	7f 1b                	jg     8100266f <__sfvwrite_r+0x408>
81002654:	8b 53 24             	mov    0x24(%ebx),%edx
81002657:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100265a:	56                   	push   %esi
8100265b:	ff 75 c4             	push   -0x3c(%ebp)
8100265e:	50                   	push   %eax
8100265f:	ff 75 08             	push   0x8(%ebp)
81002662:	ff d2                	call   *%edx
81002664:	83 c4 10             	add    $0x10,%esp
81002667:	89 c6                	mov    %eax,%esi
81002669:	85 f6                	test   %esi,%esi
8100266b:	7f 28                	jg     81002695 <__sfvwrite_r+0x42e>
8100266d:	eb 7e                	jmp    810026ed <__sfvwrite_r+0x486>
8100266f:	89 ce                	mov    %ecx,%esi
81002671:	89 f2                	mov    %esi,%edx
81002673:	8b 03                	mov    (%ebx),%eax
81002675:	83 ec 04             	sub    $0x4,%esp
81002678:	52                   	push   %edx
81002679:	ff 75 c4             	push   -0x3c(%ebp)
8100267c:	50                   	push   %eax
8100267d:	e8 ce 1d 00 00       	call   81004450 <memmove>
81002682:	83 c4 10             	add    $0x10,%esp
81002685:	8b 43 08             	mov    0x8(%ebx),%eax
81002688:	29 f0                	sub    %esi,%eax
8100268a:	89 43 08             	mov    %eax,0x8(%ebx)
8100268d:	8b 03                	mov    (%ebx),%eax
8100268f:	89 f2                	mov    %esi,%edx
81002691:	01 d0                	add    %edx,%eax
81002693:	89 03                	mov    %eax,(%ebx)
81002695:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002698:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100269c:	75 1a                	jne    810026b8 <__sfvwrite_r+0x451>
8100269e:	83 ec 08             	sub    $0x8,%esp
810026a1:	53                   	push   %ebx
810026a2:	ff 75 08             	push   0x8(%ebp)
810026a5:	e8 12 e9 ff ff       	call   81000fbc <_fflush_r>
810026aa:	83 c4 10             	add    $0x10,%esp
810026ad:	85 c0                	test   %eax,%eax
810026af:	75 3b                	jne    810026ec <__sfvwrite_r+0x485>
810026b1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810026b8:	89 f0                	mov    %esi,%eax
810026ba:	01 45 c4             	add    %eax,-0x3c(%ebp)
810026bd:	89 f0                	mov    %esi,%eax
810026bf:	29 c7                	sub    %eax,%edi
810026c1:	8b 45 10             	mov    0x10(%ebp),%eax
810026c4:	8b 40 08             	mov    0x8(%eax),%eax
810026c7:	89 f2                	mov    %esi,%edx
810026c9:	29 d0                	sub    %edx,%eax
810026cb:	8b 4d 10             	mov    0x10(%ebp),%ecx
810026ce:	89 41 08             	mov    %eax,0x8(%ecx)
810026d1:	8b 45 10             	mov    0x10(%ebp),%eax
810026d4:	8b 40 08             	mov    0x8(%eax),%eax
810026d7:	85 c0                	test   %eax,%eax
810026d9:	0f 85 dc fe ff ff    	jne    810025bb <__sfvwrite_r+0x354>
810026df:	b8 00 00 00 00       	mov    $0x0,%eax
810026e4:	eb 17                	jmp    810026fd <__sfvwrite_r+0x496>
810026e6:	90                   	nop
810026e7:	eb 04                	jmp    810026ed <__sfvwrite_r+0x486>
810026e9:	90                   	nop
810026ea:	eb 01                	jmp    810026ed <__sfvwrite_r+0x486>
810026ec:	90                   	nop
810026ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026f1:	83 c8 40             	or     $0x40,%eax
810026f4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026fd:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002700:	5b                   	pop    %ebx
81002701:	5e                   	pop    %esi
81002702:	5f                   	pop    %edi
81002703:	5d                   	pop    %ebp
81002704:	c3                   	ret    

81002705 <_fwalk>:
81002705:	55                   	push   %ebp
81002706:	89 e5                	mov    %esp,%ebp
81002708:	57                   	push   %edi
81002709:	56                   	push   %esi
8100270a:	53                   	push   %ebx
8100270b:	83 ec 1c             	sub    $0x1c,%esp
8100270e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002715:	8b 45 08             	mov    0x8(%ebp),%eax
81002718:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100271e:	eb 3e                	jmp    8100275e <_fwalk+0x59>
81002720:	8b 5e 08             	mov    0x8(%esi),%ebx
81002723:	8b 7e 04             	mov    0x4(%esi),%edi
81002726:	eb 2d                	jmp    81002755 <_fwalk+0x50>
81002728:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100272c:	66 85 c0             	test   %ax,%ax
8100272f:	74 21                	je     81002752 <_fwalk+0x4d>
81002731:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002735:	66 83 f8 01          	cmp    $0x1,%ax
81002739:	74 17                	je     81002752 <_fwalk+0x4d>
8100273b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100273f:	66 83 f8 ff          	cmp    $0xffff,%ax
81002743:	74 0d                	je     81002752 <_fwalk+0x4d>
81002745:	83 ec 0c             	sub    $0xc,%esp
81002748:	53                   	push   %ebx
81002749:	ff 55 0c             	call   *0xc(%ebp)
8100274c:	83 c4 10             	add    $0x10,%esp
8100274f:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002752:	83 c3 68             	add    $0x68,%ebx
81002755:	83 ef 01             	sub    $0x1,%edi
81002758:	85 ff                	test   %edi,%edi
8100275a:	79 cc                	jns    81002728 <_fwalk+0x23>
8100275c:	8b 36                	mov    (%esi),%esi
8100275e:	85 f6                	test   %esi,%esi
81002760:	75 be                	jne    81002720 <_fwalk+0x1b>
81002762:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002765:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002768:	5b                   	pop    %ebx
81002769:	5e                   	pop    %esi
8100276a:	5f                   	pop    %edi
8100276b:	5d                   	pop    %ebp
8100276c:	c3                   	ret    

8100276d <_fwalk_reent>:
8100276d:	55                   	push   %ebp
8100276e:	89 e5                	mov    %esp,%ebp
81002770:	57                   	push   %edi
81002771:	56                   	push   %esi
81002772:	53                   	push   %ebx
81002773:	83 ec 1c             	sub    $0x1c,%esp
81002776:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100277d:	8b 45 08             	mov    0x8(%ebp),%eax
81002780:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002786:	eb 41                	jmp    810027c9 <_fwalk_reent+0x5c>
81002788:	8b 5e 08             	mov    0x8(%esi),%ebx
8100278b:	8b 7e 04             	mov    0x4(%esi),%edi
8100278e:	eb 30                	jmp    810027c0 <_fwalk_reent+0x53>
81002790:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002794:	66 85 c0             	test   %ax,%ax
81002797:	74 24                	je     810027bd <_fwalk_reent+0x50>
81002799:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100279d:	66 83 f8 01          	cmp    $0x1,%ax
810027a1:	74 1a                	je     810027bd <_fwalk_reent+0x50>
810027a3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027a7:	66 83 f8 ff          	cmp    $0xffff,%ax
810027ab:	74 10                	je     810027bd <_fwalk_reent+0x50>
810027ad:	83 ec 08             	sub    $0x8,%esp
810027b0:	53                   	push   %ebx
810027b1:	ff 75 08             	push   0x8(%ebp)
810027b4:	ff 55 0c             	call   *0xc(%ebp)
810027b7:	83 c4 10             	add    $0x10,%esp
810027ba:	09 45 e4             	or     %eax,-0x1c(%ebp)
810027bd:	83 c3 68             	add    $0x68,%ebx
810027c0:	83 ef 01             	sub    $0x1,%edi
810027c3:	85 ff                	test   %edi,%edi
810027c5:	79 c9                	jns    81002790 <_fwalk_reent+0x23>
810027c7:	8b 36                	mov    (%esi),%esi
810027c9:	85 f6                	test   %esi,%esi
810027cb:	75 bb                	jne    81002788 <_fwalk_reent+0x1b>
810027cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810027d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810027d3:	5b                   	pop    %ebx
810027d4:	5e                   	pop    %esi
810027d5:	5f                   	pop    %edi
810027d6:	5d                   	pop    %ebp
810027d7:	c3                   	ret    

810027d8 <_fwrite_r>:
810027d8:	55                   	push   %ebp
810027d9:	89 e5                	mov    %esp,%ebp
810027db:	83 ec 28             	sub    $0x28,%esp
810027de:	8b 45 0c             	mov    0xc(%ebp),%eax
810027e1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810027e4:	8b 45 14             	mov    0x14(%ebp),%eax
810027e7:	0f af 45 10          	imul   0x10(%ebp),%eax
810027eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027f1:	89 45 e0             	mov    %eax,-0x20(%ebp)
810027f4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027f7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027fa:	8d 45 dc             	lea    -0x24(%ebp),%eax
810027fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002800:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002807:	8b 45 08             	mov    0x8(%ebp),%eax
8100280a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100280d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002811:	74 18                	je     8100282b <_fwrite_r+0x53>
81002813:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002816:	8b 40 38             	mov    0x38(%eax),%eax
81002819:	85 c0                	test   %eax,%eax
8100281b:	75 0e                	jne    8100282b <_fwrite_r+0x53>
8100281d:	83 ec 0c             	sub    $0xc,%esp
81002820:	ff 75 f0             	push   -0x10(%ebp)
81002823:	e8 97 ec ff ff       	call   810014bf <__sinit>
81002828:	83 c4 10             	add    $0x10,%esp
8100282b:	8b 45 18             	mov    0x18(%ebp),%eax
8100282e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002832:	98                   	cwtl   
81002833:	25 00 20 00 00       	and    $0x2000,%eax
81002838:	85 c0                	test   %eax,%eax
8100283a:	75 24                	jne    81002860 <_fwrite_r+0x88>
8100283c:	8b 45 18             	mov    0x18(%ebp),%eax
8100283f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002843:	80 cc 20             	or     $0x20,%ah
81002846:	89 c2                	mov    %eax,%edx
81002848:	8b 45 18             	mov    0x18(%ebp),%eax
8100284b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100284f:	8b 45 18             	mov    0x18(%ebp),%eax
81002852:	8b 40 64             	mov    0x64(%eax),%eax
81002855:	80 e4 df             	and    $0xdf,%ah
81002858:	89 c2                	mov    %eax,%edx
8100285a:	8b 45 18             	mov    0x18(%ebp),%eax
8100285d:	89 50 64             	mov    %edx,0x64(%eax)
81002860:	83 ec 04             	sub    $0x4,%esp
81002863:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002866:	50                   	push   %eax
81002867:	ff 75 18             	push   0x18(%ebp)
8100286a:	ff 75 08             	push   0x8(%ebp)
8100286d:	e8 f5 f9 ff ff       	call   81002267 <__sfvwrite_r>
81002872:	83 c4 10             	add    $0x10,%esp
81002875:	85 c0                	test   %eax,%eax
81002877:	75 05                	jne    8100287e <_fwrite_r+0xa6>
81002879:	8b 45 14             	mov    0x14(%ebp),%eax
8100287c:	eb 10                	jmp    8100288e <_fwrite_r+0xb6>
8100287e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002881:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002884:	29 d0                	sub    %edx,%eax
81002886:	ba 00 00 00 00       	mov    $0x0,%edx
8100288b:	f7 75 10             	divl   0x10(%ebp)
8100288e:	c9                   	leave  
8100288f:	c3                   	ret    

81002890 <fwrite>:
81002890:	55                   	push   %ebp
81002891:	89 e5                	mov    %esp,%ebp
81002893:	83 ec 08             	sub    $0x8,%esp
81002896:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100289b:	83 ec 0c             	sub    $0xc,%esp
8100289e:	ff 75 14             	push   0x14(%ebp)
810028a1:	ff 75 10             	push   0x10(%ebp)
810028a4:	ff 75 0c             	push   0xc(%ebp)
810028a7:	ff 75 08             	push   0x8(%ebp)
810028aa:	50                   	push   %eax
810028ab:	e8 28 ff ff ff       	call   810027d8 <_fwrite_r>
810028b0:	83 c4 20             	add    $0x20,%esp
810028b3:	c9                   	leave  
810028b4:	c3                   	ret    

810028b5 <reverse_argv_elements>:
810028b5:	55                   	push   %ebp
810028b6:	89 e5                	mov    %esp,%ebp
810028b8:	83 ec 10             	sub    $0x10,%esp
810028bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
810028c2:	eb 5e                	jmp    81002922 <reverse_argv_elements+0x6d>
810028c4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810028c7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028ce:	8b 45 08             	mov    0x8(%ebp),%eax
810028d1:	01 d0                	add    %edx,%eax
810028d3:	8b 00                	mov    (%eax),%eax
810028d5:	89 45 f8             	mov    %eax,-0x8(%ebp)
810028d8:	8b 45 0c             	mov    0xc(%ebp),%eax
810028db:	2b 45 fc             	sub    -0x4(%ebp),%eax
810028de:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810028e3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028ea:	8b 45 08             	mov    0x8(%ebp),%eax
810028ed:	01 d0                	add    %edx,%eax
810028ef:	8b 55 fc             	mov    -0x4(%ebp),%edx
810028f2:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810028f9:	8b 55 08             	mov    0x8(%ebp),%edx
810028fc:	01 ca                	add    %ecx,%edx
810028fe:	8b 00                	mov    (%eax),%eax
81002900:	89 02                	mov    %eax,(%edx)
81002902:	8b 45 0c             	mov    0xc(%ebp),%eax
81002905:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002908:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100290d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002914:	8b 45 08             	mov    0x8(%ebp),%eax
81002917:	01 c2                	add    %eax,%edx
81002919:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100291c:	89 02                	mov    %eax,(%edx)
8100291e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002922:	8b 45 0c             	mov    0xc(%ebp),%eax
81002925:	d1 f8                	sar    %eax
81002927:	39 45 fc             	cmp    %eax,-0x4(%ebp)
8100292a:	7c 98                	jl     810028c4 <reverse_argv_elements+0xf>
8100292c:	90                   	nop
8100292d:	90                   	nop
8100292e:	c9                   	leave  
8100292f:	c3                   	ret    

81002930 <permute>:
81002930:	55                   	push   %ebp
81002931:	89 e5                	mov    %esp,%ebp
81002933:	ff 75 0c             	push   0xc(%ebp)
81002936:	ff 75 08             	push   0x8(%ebp)
81002939:	e8 77 ff ff ff       	call   810028b5 <reverse_argv_elements>
8100293e:	83 c4 08             	add    $0x8,%esp
81002941:	8b 55 0c             	mov    0xc(%ebp),%edx
81002944:	8b 45 10             	mov    0x10(%ebp),%eax
81002947:	01 d0                	add    %edx,%eax
81002949:	50                   	push   %eax
8100294a:	ff 75 08             	push   0x8(%ebp)
8100294d:	e8 63 ff ff ff       	call   810028b5 <reverse_argv_elements>
81002952:	83 c4 08             	add    $0x8,%esp
81002955:	ff 75 10             	push   0x10(%ebp)
81002958:	ff 75 08             	push   0x8(%ebp)
8100295b:	e8 55 ff ff ff       	call   810028b5 <reverse_argv_elements>
81002960:	83 c4 08             	add    $0x8,%esp
81002963:	90                   	nop
81002964:	c9                   	leave  
81002965:	c3                   	ret    

81002966 <is_option>:
81002966:	55                   	push   %ebp
81002967:	89 e5                	mov    %esp,%ebp
81002969:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100296d:	74 1a                	je     81002989 <is_option+0x23>
8100296f:	8b 45 08             	mov    0x8(%ebp),%eax
81002972:	0f b6 00             	movzbl (%eax),%eax
81002975:	3c 2d                	cmp    $0x2d,%al
81002977:	74 10                	je     81002989 <is_option+0x23>
81002979:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100297d:	74 11                	je     81002990 <is_option+0x2a>
8100297f:	8b 45 08             	mov    0x8(%ebp),%eax
81002982:	0f b6 00             	movzbl (%eax),%eax
81002985:	3c 2b                	cmp    $0x2b,%al
81002987:	75 07                	jne    81002990 <is_option+0x2a>
81002989:	b8 01 00 00 00       	mov    $0x1,%eax
8100298e:	eb 05                	jmp    81002995 <is_option+0x2f>
81002990:	b8 00 00 00 00       	mov    $0x0,%eax
81002995:	5d                   	pop    %ebp
81002996:	c3                   	ret    

81002997 <read_globals>:
81002997:	55                   	push   %ebp
81002998:	89 e5                	mov    %esp,%ebp
8100299a:	8b 15 f4 8a 00 81    	mov    0x81008af4,%edx
810029a0:	8b 45 08             	mov    0x8(%ebp),%eax
810029a3:	89 10                	mov    %edx,(%eax)
810029a5:	8b 15 f8 8a 00 81    	mov    0x81008af8,%edx
810029ab:	8b 45 08             	mov    0x8(%ebp),%eax
810029ae:	89 50 04             	mov    %edx,0x4(%eax)
810029b1:	8b 15 e4 7a 00 81    	mov    0x81007ae4,%edx
810029b7:	8b 45 08             	mov    0x8(%ebp),%eax
810029ba:	89 50 08             	mov    %edx,0x8(%eax)
810029bd:	8b 15 e8 7a 00 81    	mov    0x81007ae8,%edx
810029c3:	8b 45 08             	mov    0x8(%ebp),%eax
810029c6:	89 50 0c             	mov    %edx,0xc(%eax)
810029c9:	8b 15 fc 8a 00 81    	mov    0x81008afc,%edx
810029cf:	8b 45 08             	mov    0x8(%ebp),%eax
810029d2:	89 50 10             	mov    %edx,0x10(%eax)
810029d5:	8b 15 00 8b 00 81    	mov    0x81008b00,%edx
810029db:	8b 45 08             	mov    0x8(%ebp),%eax
810029de:	89 50 14             	mov    %edx,0x14(%eax)
810029e1:	8b 15 04 8b 00 81    	mov    0x81008b04,%edx
810029e7:	8b 45 08             	mov    0x8(%ebp),%eax
810029ea:	89 50 18             	mov    %edx,0x18(%eax)
810029ed:	90                   	nop
810029ee:	5d                   	pop    %ebp
810029ef:	c3                   	ret    

810029f0 <write_globals>:
810029f0:	55                   	push   %ebp
810029f1:	89 e5                	mov    %esp,%ebp
810029f3:	8b 45 08             	mov    0x8(%ebp),%eax
810029f6:	8b 00                	mov    (%eax),%eax
810029f8:	a3 f4 8a 00 81       	mov    %eax,0x81008af4
810029fd:	8b 45 08             	mov    0x8(%ebp),%eax
81002a00:	8b 40 04             	mov    0x4(%eax),%eax
81002a03:	a3 f8 8a 00 81       	mov    %eax,0x81008af8
81002a08:	8b 45 08             	mov    0x8(%ebp),%eax
81002a0b:	8b 40 08             	mov    0x8(%eax),%eax
81002a0e:	a3 e4 7a 00 81       	mov    %eax,0x81007ae4
81002a13:	8b 45 08             	mov    0x8(%ebp),%eax
81002a16:	8b 40 0c             	mov    0xc(%eax),%eax
81002a19:	a3 e8 7a 00 81       	mov    %eax,0x81007ae8
81002a1e:	8b 45 08             	mov    0x8(%ebp),%eax
81002a21:	8b 40 10             	mov    0x10(%eax),%eax
81002a24:	a3 fc 8a 00 81       	mov    %eax,0x81008afc
81002a29:	8b 45 08             	mov    0x8(%ebp),%eax
81002a2c:	8b 40 14             	mov    0x14(%eax),%eax
81002a2f:	a3 00 8b 00 81       	mov    %eax,0x81008b00
81002a34:	8b 45 08             	mov    0x8(%ebp),%eax
81002a37:	8b 40 18             	mov    0x18(%eax),%eax
81002a3a:	a3 04 8b 00 81       	mov    %eax,0x81008b04
81002a3f:	90                   	nop
81002a40:	5d                   	pop    %ebp
81002a41:	c3                   	ret    

81002a42 <getopt_internal>:
81002a42:	55                   	push   %ebp
81002a43:	89 e5                	mov    %esp,%ebp
81002a45:	53                   	push   %ebx
81002a46:	83 ec 34             	sub    $0x34,%esp
81002a49:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002a50:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a57:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002a5e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002a65:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002a6c:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002a73:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002a7a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002a81:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002a88:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002a8c:	74 35                	je     81002ac3 <getopt_internal+0x81>
81002a8e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002a92:	74 2f                	je     81002ac3 <getopt_internal+0x81>
81002a94:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002a98:	75 06                	jne    81002aa0 <getopt_internal+0x5e>
81002a9a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002a9e:	74 23                	je     81002ac3 <getopt_internal+0x81>
81002aa0:	8b 45 20             	mov    0x20(%ebp),%eax
81002aa3:	8b 40 04             	mov    0x4(%eax),%eax
81002aa6:	39 45 08             	cmp    %eax,0x8(%ebp)
81002aa9:	7e 18                	jle    81002ac3 <getopt_internal+0x81>
81002aab:	8b 45 20             	mov    0x20(%ebp),%eax
81002aae:	8b 40 04             	mov    0x4(%eax),%eax
81002ab1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ab8:	8b 45 0c             	mov    0xc(%ebp),%eax
81002abb:	01 d0                	add    %edx,%eax
81002abd:	8b 00                	mov    (%eax),%eax
81002abf:	85 c0                	test   %eax,%eax
81002ac1:	75 0a                	jne    81002acd <getopt_internal+0x8b>
81002ac3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ac8:	e9 85 0a 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002acd:	8b 45 20             	mov    0x20(%ebp),%eax
81002ad0:	8b 40 04             	mov    0x4(%eax),%eax
81002ad3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ada:	8b 45 0c             	mov    0xc(%ebp),%eax
81002add:	01 d0                	add    %edx,%eax
81002adf:	8b 00                	mov    (%eax),%eax
81002ae1:	83 ec 08             	sub    $0x8,%esp
81002ae4:	68 f0 76 00 81       	push   $0x810076f0
81002ae9:	50                   	push   %eax
81002aea:	e8 6d 36 00 00       	call   8100615c <strcmp>
81002aef:	83 c4 10             	add    $0x10,%esp
81002af2:	85 c0                	test   %eax,%eax
81002af4:	75 19                	jne    81002b0f <getopt_internal+0xcd>
81002af6:	8b 45 20             	mov    0x20(%ebp),%eax
81002af9:	8b 40 04             	mov    0x4(%eax),%eax
81002afc:	8d 50 01             	lea    0x1(%eax),%edx
81002aff:	8b 45 20             	mov    0x20(%ebp),%eax
81002b02:	89 50 04             	mov    %edx,0x4(%eax)
81002b05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b0a:	e9 43 0a 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002b0f:	8b 45 20             	mov    0x20(%ebp),%eax
81002b12:	8b 40 04             	mov    0x4(%eax),%eax
81002b15:	85 c0                	test   %eax,%eax
81002b17:	75 28                	jne    81002b41 <getopt_internal+0xff>
81002b19:	8b 45 20             	mov    0x20(%ebp),%eax
81002b1c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002b23:	8b 45 20             	mov    0x20(%ebp),%eax
81002b26:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002b2d:	8b 45 20             	mov    0x20(%ebp),%eax
81002b30:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81002b37:	8b 45 20             	mov    0x20(%ebp),%eax
81002b3a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002b41:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b45:	74 33                	je     81002b7a <getopt_internal+0x138>
81002b47:	8b 45 10             	mov    0x10(%ebp),%eax
81002b4a:	0f b6 00             	movzbl (%eax),%eax
81002b4d:	3c 2d                	cmp    $0x2d,%al
81002b4f:	74 0a                	je     81002b5b <getopt_internal+0x119>
81002b51:	8b 45 10             	mov    0x10(%ebp),%eax
81002b54:	0f b6 00             	movzbl (%eax),%eax
81002b57:	3c 2b                	cmp    $0x2b,%al
81002b59:	75 1f                	jne    81002b7a <getopt_internal+0x138>
81002b5b:	8b 45 10             	mov    0x10(%ebp),%eax
81002b5e:	0f b6 00             	movzbl (%eax),%eax
81002b61:	3c 2d                	cmp    $0x2d,%al
81002b63:	75 07                	jne    81002b6c <getopt_internal+0x12a>
81002b65:	b8 01 00 00 00       	mov    $0x1,%eax
81002b6a:	eb 05                	jmp    81002b71 <getopt_internal+0x12f>
81002b6c:	b8 02 00 00 00       	mov    $0x2,%eax
81002b71:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b74:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002b78:	eb 23                	jmp    81002b9d <getopt_internal+0x15b>
81002b7a:	83 ec 0c             	sub    $0xc,%esp
81002b7d:	68 f3 76 00 81       	push   $0x810076f3
81002b82:	e8 be 41 00 00       	call   81006d45 <getenv>
81002b87:	83 c4 10             	add    $0x10,%esp
81002b8a:	85 c0                	test   %eax,%eax
81002b8c:	74 07                	je     81002b95 <getopt_internal+0x153>
81002b8e:	b8 02 00 00 00       	mov    $0x2,%eax
81002b93:	eb 05                	jmp    81002b9a <getopt_internal+0x158>
81002b95:	b8 00 00 00 00       	mov    $0x0,%eax
81002b9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b9d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002ba1:	74 15                	je     81002bb8 <getopt_internal+0x176>
81002ba3:	8b 45 10             	mov    0x10(%ebp),%eax
81002ba6:	0f b6 00             	movzbl (%eax),%eax
81002ba9:	3c 3a                	cmp    $0x3a,%al
81002bab:	75 0b                	jne    81002bb8 <getopt_internal+0x176>
81002bad:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002bb1:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002bb8:	8b 45 20             	mov    0x20(%ebp),%eax
81002bbb:	8b 40 10             	mov    0x10(%eax),%eax
81002bbe:	83 f8 01             	cmp    $0x1,%eax
81002bc1:	0f 85 a2 01 00 00    	jne    81002d69 <getopt_internal+0x327>
81002bc7:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002bcb:	0f 84 02 01 00 00    	je     81002cd3 <getopt_internal+0x291>
81002bd1:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002bd5:	0f 84 56 01 00 00    	je     81002d31 <getopt_internal+0x2ef>
81002bdb:	8b 45 20             	mov    0x20(%ebp),%eax
81002bde:	8b 50 04             	mov    0x4(%eax),%edx
81002be1:	8b 45 20             	mov    0x20(%ebp),%eax
81002be4:	89 50 14             	mov    %edx,0x14(%eax)
81002be7:	8b 45 20             	mov    0x20(%ebp),%eax
81002bea:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002bf1:	eb 1e                	jmp    81002c11 <getopt_internal+0x1cf>
81002bf3:	8b 45 20             	mov    0x20(%ebp),%eax
81002bf6:	8b 40 04             	mov    0x4(%eax),%eax
81002bf9:	8d 50 01             	lea    0x1(%eax),%edx
81002bfc:	8b 45 20             	mov    0x20(%ebp),%eax
81002bff:	89 50 04             	mov    %edx,0x4(%eax)
81002c02:	8b 45 20             	mov    0x20(%ebp),%eax
81002c05:	8b 40 18             	mov    0x18(%eax),%eax
81002c08:	8d 50 01             	lea    0x1(%eax),%edx
81002c0b:	8b 45 20             	mov    0x20(%ebp),%eax
81002c0e:	89 50 18             	mov    %edx,0x18(%eax)
81002c11:	8b 45 20             	mov    0x20(%ebp),%eax
81002c14:	8b 40 04             	mov    0x4(%eax),%eax
81002c17:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c21:	01 d0                	add    %edx,%eax
81002c23:	8b 00                	mov    (%eax),%eax
81002c25:	83 ec 08             	sub    $0x8,%esp
81002c28:	ff 75 1c             	push   0x1c(%ebp)
81002c2b:	50                   	push   %eax
81002c2c:	e8 35 fd ff ff       	call   81002966 <is_option>
81002c31:	83 c4 10             	add    $0x10,%esp
81002c34:	85 c0                	test   %eax,%eax
81002c36:	74 bb                	je     81002bf3 <getopt_internal+0x1b1>
81002c38:	8b 45 20             	mov    0x20(%ebp),%eax
81002c3b:	8b 40 04             	mov    0x4(%eax),%eax
81002c3e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c45:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c48:	01 d0                	add    %edx,%eax
81002c4a:	8b 00                	mov    (%eax),%eax
81002c4c:	85 c0                	test   %eax,%eax
81002c4e:	75 16                	jne    81002c66 <getopt_internal+0x224>
81002c50:	8b 45 20             	mov    0x20(%ebp),%eax
81002c53:	8b 50 14             	mov    0x14(%eax),%edx
81002c56:	8b 45 20             	mov    0x20(%ebp),%eax
81002c59:	89 50 04             	mov    %edx,0x4(%eax)
81002c5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002c61:	e9 ec 08 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002c66:	8b 45 20             	mov    0x20(%ebp),%eax
81002c69:	8b 40 04             	mov    0x4(%eax),%eax
81002c6c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c73:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c76:	01 d0                	add    %edx,%eax
81002c78:	8b 00                	mov    (%eax),%eax
81002c7a:	83 ec 08             	sub    $0x8,%esp
81002c7d:	68 f0 76 00 81       	push   $0x810076f0
81002c82:	50                   	push   %eax
81002c83:	e8 d4 34 00 00       	call   8100615c <strcmp>
81002c88:	83 c4 10             	add    $0x10,%esp
81002c8b:	85 c0                	test   %eax,%eax
81002c8d:	0f 85 cf 00 00 00    	jne    81002d62 <getopt_internal+0x320>
81002c93:	8b 45 20             	mov    0x20(%ebp),%eax
81002c96:	8b 40 18             	mov    0x18(%eax),%eax
81002c99:	8b 55 20             	mov    0x20(%ebp),%edx
81002c9c:	8b 52 14             	mov    0x14(%edx),%edx
81002c9f:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002ca6:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ca9:	01 ca                	add    %ecx,%edx
81002cab:	83 ec 04             	sub    $0x4,%esp
81002cae:	6a 01                	push   $0x1
81002cb0:	50                   	push   %eax
81002cb1:	52                   	push   %edx
81002cb2:	e8 79 fc ff ff       	call   81002930 <permute>
81002cb7:	83 c4 10             	add    $0x10,%esp
81002cba:	8b 45 20             	mov    0x20(%ebp),%eax
81002cbd:	8b 40 14             	mov    0x14(%eax),%eax
81002cc0:	8d 50 01             	lea    0x1(%eax),%edx
81002cc3:	8b 45 20             	mov    0x20(%ebp),%eax
81002cc6:	89 50 04             	mov    %edx,0x4(%eax)
81002cc9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002cce:	e9 7f 08 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002cd3:	8b 45 20             	mov    0x20(%ebp),%eax
81002cd6:	8b 40 04             	mov    0x4(%eax),%eax
81002cd9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ce0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ce3:	01 d0                	add    %edx,%eax
81002ce5:	8b 00                	mov    (%eax),%eax
81002ce7:	83 ec 08             	sub    $0x8,%esp
81002cea:	ff 75 1c             	push   0x1c(%ebp)
81002ced:	50                   	push   %eax
81002cee:	e8 73 fc ff ff       	call   81002966 <is_option>
81002cf3:	83 c4 10             	add    $0x10,%esp
81002cf6:	85 c0                	test   %eax,%eax
81002cf8:	75 6b                	jne    81002d65 <getopt_internal+0x323>
81002cfa:	8b 45 20             	mov    0x20(%ebp),%eax
81002cfd:	8b 40 04             	mov    0x4(%eax),%eax
81002d00:	8d 48 01             	lea    0x1(%eax),%ecx
81002d03:	8b 55 20             	mov    0x20(%ebp),%edx
81002d06:	89 4a 04             	mov    %ecx,0x4(%edx)
81002d09:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d10:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d13:	01 d0                	add    %edx,%eax
81002d15:	8b 10                	mov    (%eax),%edx
81002d17:	8b 45 20             	mov    0x20(%ebp),%eax
81002d1a:	89 10                	mov    %edx,(%eax)
81002d1c:	8b 45 20             	mov    0x20(%ebp),%eax
81002d1f:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002d26:	8b 45 20             	mov    0x20(%ebp),%eax
81002d29:	8b 40 0c             	mov    0xc(%eax),%eax
81002d2c:	e9 21 08 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002d31:	8b 45 20             	mov    0x20(%ebp),%eax
81002d34:	8b 40 04             	mov    0x4(%eax),%eax
81002d37:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d41:	01 d0                	add    %edx,%eax
81002d43:	8b 00                	mov    (%eax),%eax
81002d45:	83 ec 08             	sub    $0x8,%esp
81002d48:	ff 75 1c             	push   0x1c(%ebp)
81002d4b:	50                   	push   %eax
81002d4c:	e8 15 fc ff ff       	call   81002966 <is_option>
81002d51:	83 c4 10             	add    $0x10,%esp
81002d54:	85 c0                	test   %eax,%eax
81002d56:	75 10                	jne    81002d68 <getopt_internal+0x326>
81002d58:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d5d:	e9 f0 07 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002d62:	90                   	nop
81002d63:	eb 04                	jmp    81002d69 <getopt_internal+0x327>
81002d65:	90                   	nop
81002d66:	eb 01                	jmp    81002d69 <getopt_internal+0x327>
81002d68:	90                   	nop
81002d69:	8b 45 20             	mov    0x20(%ebp),%eax
81002d6c:	8b 40 04             	mov    0x4(%eax),%eax
81002d6f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d76:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d79:	01 d0                	add    %edx,%eax
81002d7b:	8b 00                	mov    (%eax),%eax
81002d7d:	85 c0                	test   %eax,%eax
81002d7f:	75 0a                	jne    81002d8b <getopt_internal+0x349>
81002d81:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d86:	e9 c7 07 00 00       	jmp    81003552 <getopt_internal+0xb10>
81002d8b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002d8f:	0f 84 15 03 00 00    	je     810030aa <getopt_internal+0x668>
81002d95:	8b 45 20             	mov    0x20(%ebp),%eax
81002d98:	8b 40 04             	mov    0x4(%eax),%eax
81002d9b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002da2:	8b 45 0c             	mov    0xc(%ebp),%eax
81002da5:	01 d0                	add    %edx,%eax
81002da7:	8b 00                	mov    (%eax),%eax
81002da9:	83 ec 04             	sub    $0x4,%esp
81002dac:	6a 02                	push   $0x2
81002dae:	68 f0 76 00 81       	push   $0x810076f0
81002db3:	50                   	push   %eax
81002db4:	e8 fc 15 00 00       	call   810043b5 <memcmp>
81002db9:	83 c4 10             	add    $0x10,%esp
81002dbc:	85 c0                	test   %eax,%eax
81002dbe:	74 29                	je     81002de9 <getopt_internal+0x3a7>
81002dc0:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002dc4:	0f 84 e0 02 00 00    	je     810030aa <getopt_internal+0x668>
81002dca:	8b 45 20             	mov    0x20(%ebp),%eax
81002dcd:	8b 40 04             	mov    0x4(%eax),%eax
81002dd0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002dd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dda:	01 d0                	add    %edx,%eax
81002ddc:	8b 00                	mov    (%eax),%eax
81002dde:	0f b6 00             	movzbl (%eax),%eax
81002de1:	3c 2b                	cmp    $0x2b,%al
81002de3:	0f 85 c1 02 00 00    	jne    810030aa <getopt_internal+0x668>
81002de9:	8b 45 20             	mov    0x20(%ebp),%eax
81002dec:	8b 40 10             	mov    0x10(%eax),%eax
81002def:	83 f8 01             	cmp    $0x1,%eax
81002df2:	0f 85 b2 02 00 00    	jne    810030aa <getopt_internal+0x668>
81002df8:	8b 45 20             	mov    0x20(%ebp),%eax
81002dfb:	8b 40 04             	mov    0x4(%eax),%eax
81002dfe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e05:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e08:	01 d0                	add    %edx,%eax
81002e0a:	8b 00                	mov    (%eax),%eax
81002e0c:	83 ec 04             	sub    $0x4,%esp
81002e0f:	6a 02                	push   $0x2
81002e11:	68 f0 76 00 81       	push   $0x810076f0
81002e16:	50                   	push   %eax
81002e17:	e8 99 15 00 00       	call   810043b5 <memcmp>
81002e1c:	83 c4 10             	add    $0x10,%esp
81002e1f:	85 c0                	test   %eax,%eax
81002e21:	75 0a                	jne    81002e2d <getopt_internal+0x3eb>
81002e23:	8b 45 20             	mov    0x20(%ebp),%eax
81002e26:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002e2d:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002e34:	8b 45 20             	mov    0x20(%ebp),%eax
81002e37:	8b 40 04             	mov    0x4(%eax),%eax
81002e3a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e41:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e44:	01 d0                	add    %edx,%eax
81002e46:	8b 10                	mov    (%eax),%edx
81002e48:	8b 45 20             	mov    0x20(%ebp),%eax
81002e4b:	8b 40 10             	mov    0x10(%eax),%eax
81002e4e:	01 d0                	add    %edx,%eax
81002e50:	83 ec 08             	sub    $0x8,%esp
81002e53:	6a 3d                	push   $0x3d
81002e55:	50                   	push   %eax
81002e56:	e8 05 32 00 00       	call   81006060 <strchr>
81002e5b:	83 c4 10             	add    $0x10,%esp
81002e5e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e61:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002e65:	75 4a                	jne    81002eb1 <getopt_internal+0x46f>
81002e67:	8b 45 20             	mov    0x20(%ebp),%eax
81002e6a:	8b 40 04             	mov    0x4(%eax),%eax
81002e6d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e74:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e77:	01 d0                	add    %edx,%eax
81002e79:	8b 00                	mov    (%eax),%eax
81002e7b:	83 ec 0c             	sub    $0xc,%esp
81002e7e:	50                   	push   %eax
81002e7f:	e8 8c 33 00 00       	call   81006210 <strlen>
81002e84:	83 c4 10             	add    $0x10,%esp
81002e87:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e8a:	8b 45 20             	mov    0x20(%ebp),%eax
81002e8d:	8b 40 04             	mov    0x4(%eax),%eax
81002e90:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e97:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e9a:	01 d0                	add    %edx,%eax
81002e9c:	8b 10                	mov    (%eax),%edx
81002e9e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ea1:	01 d0                	add    %edx,%eax
81002ea3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ea6:	8b 45 20             	mov    0x20(%ebp),%eax
81002ea9:	8b 40 10             	mov    0x10(%eax),%eax
81002eac:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002eaf:	eb 28                	jmp    81002ed9 <getopt_internal+0x497>
81002eb1:	8b 45 20             	mov    0x20(%ebp),%eax
81002eb4:	8b 40 04             	mov    0x4(%eax),%eax
81002eb7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ebe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ec1:	01 d0                	add    %edx,%eax
81002ec3:	8b 08                	mov    (%eax),%ecx
81002ec5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ec8:	29 c8                	sub    %ecx,%eax
81002eca:	89 c2                	mov    %eax,%edx
81002ecc:	8b 45 20             	mov    0x20(%ebp),%eax
81002ecf:	8b 48 10             	mov    0x10(%eax),%ecx
81002ed2:	89 d0                	mov    %edx,%eax
81002ed4:	29 c8                	sub    %ecx,%eax
81002ed6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ed9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002ee0:	e9 95 01 00 00       	jmp    8100307a <getopt_internal+0x638>
81002ee5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ee8:	c1 e0 04             	shl    $0x4,%eax
81002eeb:	89 c2                	mov    %eax,%edx
81002eed:	8b 45 14             	mov    0x14(%ebp),%eax
81002ef0:	01 d0                	add    %edx,%eax
81002ef2:	8b 00                	mov    (%eax),%eax
81002ef4:	8b 55 20             	mov    0x20(%ebp),%edx
81002ef7:	8b 52 04             	mov    0x4(%edx),%edx
81002efa:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002f01:	8b 55 0c             	mov    0xc(%ebp),%edx
81002f04:	01 ca                	add    %ecx,%edx
81002f06:	8b 0a                	mov    (%edx),%ecx
81002f08:	8b 55 20             	mov    0x20(%ebp),%edx
81002f0b:	8b 52 10             	mov    0x10(%edx),%edx
81002f0e:	01 ca                	add    %ecx,%edx
81002f10:	83 ec 04             	sub    $0x4,%esp
81002f13:	ff 75 ec             	push   -0x14(%ebp)
81002f16:	50                   	push   %eax
81002f17:	52                   	push   %edx
81002f18:	e8 98 14 00 00       	call   810043b5 <memcmp>
81002f1d:	83 c4 10             	add    $0x10,%esp
81002f20:	85 c0                	test   %eax,%eax
81002f22:	0f 85 4e 01 00 00    	jne    81003076 <getopt_internal+0x634>
81002f28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f2b:	c1 e0 04             	shl    $0x4,%eax
81002f2e:	89 c2                	mov    %eax,%edx
81002f30:	8b 45 14             	mov    0x14(%ebp),%eax
81002f33:	01 d0                	add    %edx,%eax
81002f35:	8b 00                	mov    (%eax),%eax
81002f37:	83 ec 0c             	sub    $0xc,%esp
81002f3a:	50                   	push   %eax
81002f3b:	e8 d0 32 00 00       	call   81006210 <strlen>
81002f40:	83 c4 10             	add    $0x10,%esp
81002f43:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002f46:	75 0b                	jne    81002f53 <getopt_internal+0x511>
81002f48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f4e:	e9 3e 01 00 00       	jmp    81003091 <getopt_internal+0x64f>
81002f53:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f57:	79 0b                	jns    81002f64 <getopt_internal+0x522>
81002f59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f5c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f5f:	e9 12 01 00 00       	jmp    81003076 <getopt_internal+0x634>
81002f64:	8b 45 20             	mov    0x20(%ebp),%eax
81002f67:	8b 40 08             	mov    0x8(%eax),%eax
81002f6a:	85 c0                	test   %eax,%eax
81002f6c:	0f 84 ef 00 00 00    	je     81003061 <getopt_internal+0x61f>
81002f72:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002f77:	8b 50 0c             	mov    0xc(%eax),%edx
81002f7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f7d:	8b 00                	mov    (%eax),%eax
81002f7f:	83 ec 08             	sub    $0x8,%esp
81002f82:	52                   	push   %edx
81002f83:	50                   	push   %eax
81002f84:	e8 32 e8 ff ff       	call   810017bb <fputs>
81002f89:	83 c4 10             	add    $0x10,%esp
81002f8c:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002f91:	8b 40 0c             	mov    0xc(%eax),%eax
81002f94:	83 ec 08             	sub    $0x8,%esp
81002f97:	50                   	push   %eax
81002f98:	68 03 77 00 81       	push   $0x81007703
81002f9d:	e8 19 e8 ff ff       	call   810017bb <fputs>
81002fa2:	83 c4 10             	add    $0x10,%esp
81002fa5:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002faa:	8b 50 0c             	mov    0xc(%eax),%edx
81002fad:	8b 45 20             	mov    0x20(%ebp),%eax
81002fb0:	8b 40 04             	mov    0x4(%eax),%eax
81002fb3:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002fba:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fbd:	01 c8                	add    %ecx,%eax
81002fbf:	8b 00                	mov    (%eax),%eax
81002fc1:	83 ec 08             	sub    $0x8,%esp
81002fc4:	52                   	push   %edx
81002fc5:	50                   	push   %eax
81002fc6:	e8 f0 e7 ff ff       	call   810017bb <fputs>
81002fcb:	83 c4 10             	add    $0x10,%esp
81002fce:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002fd3:	8b 40 0c             	mov    0xc(%eax),%eax
81002fd6:	83 ec 08             	sub    $0x8,%esp
81002fd9:	50                   	push   %eax
81002fda:	68 0e 77 00 81       	push   $0x8100770e
81002fdf:	e8 d7 e7 ff ff       	call   810017bb <fputs>
81002fe4:	83 c4 10             	add    $0x10,%esp
81002fe7:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81002fec:	8b 50 0c             	mov    0xc(%eax),%edx
81002fef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ff2:	c1 e0 04             	shl    $0x4,%eax
81002ff5:	89 c1                	mov    %eax,%ecx
81002ff7:	8b 45 14             	mov    0x14(%ebp),%eax
81002ffa:	01 c8                	add    %ecx,%eax
81002ffc:	8b 00                	mov    (%eax),%eax
81002ffe:	83 ec 08             	sub    $0x8,%esp
81003001:	52                   	push   %edx
81003002:	50                   	push   %eax
81003003:	e8 b3 e7 ff ff       	call   810017bb <fputs>
81003008:	83 c4 10             	add    $0x10,%esp
8100300b:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003010:	8b 40 0c             	mov    0xc(%eax),%eax
81003013:	83 ec 08             	sub    $0x8,%esp
81003016:	50                   	push   %eax
81003017:	68 2b 77 00 81       	push   $0x8100772b
8100301c:	e8 9a e7 ff ff       	call   810017bb <fputs>
81003021:	83 c4 10             	add    $0x10,%esp
81003024:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003029:	8b 50 0c             	mov    0xc(%eax),%edx
8100302c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100302f:	c1 e0 04             	shl    $0x4,%eax
81003032:	89 c1                	mov    %eax,%ecx
81003034:	8b 45 14             	mov    0x14(%ebp),%eax
81003037:	01 c8                	add    %ecx,%eax
81003039:	8b 00                	mov    (%eax),%eax
8100303b:	83 ec 08             	sub    $0x8,%esp
8100303e:	52                   	push   %edx
8100303f:	50                   	push   %eax
81003040:	e8 76 e7 ff ff       	call   810017bb <fputs>
81003045:	83 c4 10             	add    $0x10,%esp
81003048:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100304d:	8b 40 0c             	mov    0xc(%eax),%eax
81003050:	83 ec 08             	sub    $0x8,%esp
81003053:	50                   	push   %eax
81003054:	68 34 77 00 81       	push   $0x81007734
81003059:	e8 5d e7 ff ff       	call   810017bb <fputs>
8100305e:	83 c4 10             	add    $0x10,%esp
81003061:	8b 45 20             	mov    0x20(%ebp),%eax
81003064:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100306b:	8b 45 20             	mov    0x20(%ebp),%eax
8100306e:	8b 40 0c             	mov    0xc(%eax),%eax
81003071:	e9 dc 04 00 00       	jmp    81003552 <getopt_internal+0xb10>
81003076:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100307a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100307d:	c1 e0 04             	shl    $0x4,%eax
81003080:	89 c2                	mov    %eax,%edx
81003082:	8b 45 14             	mov    0x14(%ebp),%eax
81003085:	01 d0                	add    %edx,%eax
81003087:	8b 00                	mov    (%eax),%eax
81003089:	85 c0                	test   %eax,%eax
8100308b:	0f 85 54 fe ff ff    	jne    81002ee5 <getopt_internal+0x4a3>
81003091:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003095:	78 13                	js     810030aa <getopt_internal+0x668>
81003097:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100309a:	c1 e0 04             	shl    $0x4,%eax
8100309d:	89 c2                	mov    %eax,%edx
8100309f:	8b 45 14             	mov    0x14(%ebp),%eax
810030a2:	01 d0                	add    %edx,%eax
810030a4:	8b 40 04             	mov    0x4(%eax),%eax
810030a7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810030aa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030ae:	0f 89 9a 01 00 00    	jns    8100324e <getopt_internal+0x80c>
810030b4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810030b8:	0f 84 90 01 00 00    	je     8100324e <getopt_internal+0x80c>
810030be:	8b 45 20             	mov    0x20(%ebp),%eax
810030c1:	8b 40 04             	mov    0x4(%eax),%eax
810030c4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810030cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810030ce:	01 d0                	add    %edx,%eax
810030d0:	8b 10                	mov    (%eax),%edx
810030d2:	8b 45 20             	mov    0x20(%ebp),%eax
810030d5:	8b 40 10             	mov    0x10(%eax),%eax
810030d8:	01 d0                	add    %edx,%eax
810030da:	0f b6 00             	movzbl (%eax),%eax
810030dd:	0f be c0             	movsbl %al,%eax
810030e0:	83 ec 08             	sub    $0x8,%esp
810030e3:	50                   	push   %eax
810030e4:	ff 75 10             	push   0x10(%ebp)
810030e7:	e8 74 2f 00 00       	call   81006060 <strchr>
810030ec:	83 c4 10             	add    $0x10,%esp
810030ef:	89 45 dc             	mov    %eax,-0x24(%ebp)
810030f2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810030f6:	0f 85 f1 00 00 00    	jne    810031ed <getopt_internal+0x7ab>
810030fc:	8b 45 20             	mov    0x20(%ebp),%eax
810030ff:	8b 40 08             	mov    0x8(%eax),%eax
81003102:	85 c0                	test   %eax,%eax
81003104:	0f 84 83 00 00 00    	je     8100318d <getopt_internal+0x74b>
8100310a:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100310f:	8b 50 0c             	mov    0xc(%eax),%edx
81003112:	8b 45 0c             	mov    0xc(%ebp),%eax
81003115:	8b 00                	mov    (%eax),%eax
81003117:	83 ec 08             	sub    $0x8,%esp
8100311a:	52                   	push   %edx
8100311b:	50                   	push   %eax
8100311c:	e8 9a e6 ff ff       	call   810017bb <fputs>
81003121:	83 c4 10             	add    $0x10,%esp
81003124:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003129:	8b 40 0c             	mov    0xc(%eax),%eax
8100312c:	83 ec 08             	sub    $0x8,%esp
8100312f:	50                   	push   %eax
81003130:	68 38 77 00 81       	push   $0x81007738
81003135:	e8 81 e6 ff ff       	call   810017bb <fputs>
8100313a:	83 c4 10             	add    $0x10,%esp
8100313d:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003142:	8b 50 0c             	mov    0xc(%eax),%edx
81003145:	8b 45 20             	mov    0x20(%ebp),%eax
81003148:	8b 40 04             	mov    0x4(%eax),%eax
8100314b:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003152:	8b 45 0c             	mov    0xc(%ebp),%eax
81003155:	01 c8                	add    %ecx,%eax
81003157:	8b 08                	mov    (%eax),%ecx
81003159:	8b 45 20             	mov    0x20(%ebp),%eax
8100315c:	8b 40 10             	mov    0x10(%eax),%eax
8100315f:	01 c8                	add    %ecx,%eax
81003161:	0f b6 00             	movzbl (%eax),%eax
81003164:	0f be c0             	movsbl %al,%eax
81003167:	83 ec 08             	sub    $0x8,%esp
8100316a:	52                   	push   %edx
8100316b:	50                   	push   %eax
8100316c:	e8 b1 39 00 00       	call   81006b22 <fputc>
81003171:	83 c4 10             	add    $0x10,%esp
81003174:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003179:	8b 40 0c             	mov    0xc(%eax),%eax
8100317c:	83 ec 08             	sub    $0x8,%esp
8100317f:	50                   	push   %eax
81003180:	68 4f 77 00 81       	push   $0x8100774f
81003185:	e8 31 e6 ff ff       	call   810017bb <fputs>
8100318a:	83 c4 10             	add    $0x10,%esp
8100318d:	8b 45 20             	mov    0x20(%ebp),%eax
81003190:	8b 40 10             	mov    0x10(%eax),%eax
81003193:	8d 50 01             	lea    0x1(%eax),%edx
81003196:	8b 45 20             	mov    0x20(%ebp),%eax
81003199:	89 50 10             	mov    %edx,0x10(%eax)
8100319c:	8b 45 20             	mov    0x20(%ebp),%eax
8100319f:	8b 40 04             	mov    0x4(%eax),%eax
810031a2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810031ac:	01 d0                	add    %edx,%eax
810031ae:	8b 10                	mov    (%eax),%edx
810031b0:	8b 45 20             	mov    0x20(%ebp),%eax
810031b3:	8b 40 10             	mov    0x10(%eax),%eax
810031b6:	01 d0                	add    %edx,%eax
810031b8:	0f b6 00             	movzbl (%eax),%eax
810031bb:	84 c0                	test   %al,%al
810031bd:	75 19                	jne    810031d8 <getopt_internal+0x796>
810031bf:	8b 45 20             	mov    0x20(%ebp),%eax
810031c2:	8b 40 04             	mov    0x4(%eax),%eax
810031c5:	8d 50 01             	lea    0x1(%eax),%edx
810031c8:	8b 45 20             	mov    0x20(%ebp),%eax
810031cb:	89 50 04             	mov    %edx,0x4(%eax)
810031ce:	8b 45 20             	mov    0x20(%ebp),%eax
810031d1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031d8:	8b 45 20             	mov    0x20(%ebp),%eax
810031db:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810031e2:	8b 45 20             	mov    0x20(%ebp),%eax
810031e5:	8b 40 0c             	mov    0xc(%eax),%eax
810031e8:	e9 65 03 00 00       	jmp    81003552 <getopt_internal+0xb10>
810031ed:	8b 45 dc             	mov    -0x24(%ebp),%eax
810031f0:	83 c0 01             	add    $0x1,%eax
810031f3:	0f b6 00             	movzbl (%eax),%eax
810031f6:	3c 3a                	cmp    $0x3a,%al
810031f8:	75 1b                	jne    81003215 <getopt_internal+0x7d3>
810031fa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810031fd:	83 c0 02             	add    $0x2,%eax
81003200:	0f b6 00             	movzbl (%eax),%eax
81003203:	3c 3a                	cmp    $0x3a,%al
81003205:	75 07                	jne    8100320e <getopt_internal+0x7cc>
81003207:	b8 02 00 00 00       	mov    $0x2,%eax
8100320c:	eb 0c                	jmp    8100321a <getopt_internal+0x7d8>
8100320e:	b8 01 00 00 00       	mov    $0x1,%eax
81003213:	eb 05                	jmp    8100321a <getopt_internal+0x7d8>
81003215:	b8 00 00 00 00       	mov    $0x0,%eax
8100321a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100321d:	8b 45 20             	mov    0x20(%ebp),%eax
81003220:	8b 40 04             	mov    0x4(%eax),%eax
81003223:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100322a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100322d:	01 d0                	add    %edx,%eax
8100322f:	8b 10                	mov    (%eax),%edx
81003231:	8b 45 20             	mov    0x20(%ebp),%eax
81003234:	8b 40 10             	mov    0x10(%eax),%eax
81003237:	83 c0 01             	add    $0x1,%eax
8100323a:	01 d0                	add    %edx,%eax
8100323c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100323f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003242:	0f b6 00             	movzbl (%eax),%eax
81003245:	0f be d0             	movsbl %al,%edx
81003248:	8b 45 20             	mov    0x20(%ebp),%eax
8100324b:	89 50 0c             	mov    %edx,0xc(%eax)
8100324e:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003255:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003259:	74 40                	je     8100329b <getopt_internal+0x859>
8100325b:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
8100325f:	0f 85 b0 01 00 00    	jne    81003415 <getopt_internal+0x9d3>
81003265:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003268:	0f b6 00             	movzbl (%eax),%eax
8100326b:	3c 3d                	cmp    $0x3d,%al
8100326d:	75 04                	jne    81003273 <getopt_internal+0x831>
8100326f:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003273:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003276:	0f b6 00             	movzbl (%eax),%eax
81003279:	84 c0                	test   %al,%al
8100327b:	74 05                	je     81003282 <getopt_internal+0x840>
8100327d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003280:	eb 05                	jmp    81003287 <getopt_internal+0x845>
81003282:	b8 00 00 00 00       	mov    $0x0,%eax
81003287:	8b 55 20             	mov    0x20(%ebp),%edx
8100328a:	89 02                	mov    %eax,(%edx)
8100328c:	8b 45 20             	mov    0x20(%ebp),%eax
8100328f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003296:	e9 d2 01 00 00       	jmp    8100346d <getopt_internal+0xa2b>
8100329b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100329e:	0f b6 00             	movzbl (%eax),%eax
810032a1:	3c 3d                	cmp    $0x3d,%al
810032a3:	75 04                	jne    810032a9 <getopt_internal+0x867>
810032a5:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810032a9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032ac:	0f b6 00             	movzbl (%eax),%eax
810032af:	84 c0                	test   %al,%al
810032b1:	74 17                	je     810032ca <getopt_internal+0x888>
810032b3:	8b 45 20             	mov    0x20(%ebp),%eax
810032b6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810032b9:	89 10                	mov    %edx,(%eax)
810032bb:	8b 45 20             	mov    0x20(%ebp),%eax
810032be:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810032c5:	e9 a3 01 00 00       	jmp    8100346d <getopt_internal+0xa2b>
810032ca:	8b 45 20             	mov    0x20(%ebp),%eax
810032cd:	8b 40 04             	mov    0x4(%eax),%eax
810032d0:	83 c0 01             	add    $0x1,%eax
810032d3:	39 45 08             	cmp    %eax,0x8(%ebp)
810032d6:	0f 8f 0a 01 00 00    	jg     810033e6 <getopt_internal+0x9a4>
810032dc:	8b 45 20             	mov    0x20(%ebp),%eax
810032df:	8b 40 08             	mov    0x8(%eax),%eax
810032e2:	85 c0                	test   %eax,%eax
810032e4:	0f 84 d3 00 00 00    	je     810033bd <getopt_internal+0x97b>
810032ea:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810032ef:	8b 50 0c             	mov    0xc(%eax),%edx
810032f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810032f5:	8b 00                	mov    (%eax),%eax
810032f7:	83 ec 08             	sub    $0x8,%esp
810032fa:	52                   	push   %edx
810032fb:	50                   	push   %eax
810032fc:	e8 ba e4 ff ff       	call   810017bb <fputs>
81003301:	83 c4 10             	add    $0x10,%esp
81003304:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003309:	8b 40 0c             	mov    0xc(%eax),%eax
8100330c:	83 ec 08             	sub    $0x8,%esp
8100330f:	50                   	push   %eax
81003310:	68 54 77 00 81       	push   $0x81007754
81003315:	e8 a1 e4 ff ff       	call   810017bb <fputs>
8100331a:	83 c4 10             	add    $0x10,%esp
8100331d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003321:	78 54                	js     81003377 <getopt_internal+0x935>
81003323:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003328:	8b 40 0c             	mov    0xc(%eax),%eax
8100332b:	83 ec 08             	sub    $0x8,%esp
8100332e:	50                   	push   %eax
8100332f:	6a 2d                	push   $0x2d
81003331:	e8 ec 37 00 00       	call   81006b22 <fputc>
81003336:	83 c4 10             	add    $0x10,%esp
81003339:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100333e:	8b 50 0c             	mov    0xc(%eax),%edx
81003341:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003344:	c1 e0 04             	shl    $0x4,%eax
81003347:	89 c1                	mov    %eax,%ecx
81003349:	8b 45 14             	mov    0x14(%ebp),%eax
8100334c:	01 c8                	add    %ecx,%eax
8100334e:	8b 00                	mov    (%eax),%eax
81003350:	83 ec 08             	sub    $0x8,%esp
81003353:	52                   	push   %edx
81003354:	50                   	push   %eax
81003355:	e8 61 e4 ff ff       	call   810017bb <fputs>
8100335a:	83 c4 10             	add    $0x10,%esp
8100335d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003361:	74 07                	je     8100336a <getopt_internal+0x928>
81003363:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003368:	eb 05                	jmp    8100336f <getopt_internal+0x92d>
8100336a:	ba 3f 00 00 00       	mov    $0x3f,%edx
8100336f:	8b 45 20             	mov    0x20(%ebp),%eax
81003372:	89 50 0c             	mov    %edx,0xc(%eax)
81003375:	eb 2d                	jmp    810033a4 <getopt_internal+0x962>
81003377:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100337c:	8b 50 0c             	mov    0xc(%eax),%edx
8100337f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003382:	0f b6 00             	movzbl (%eax),%eax
81003385:	0f be c0             	movsbl %al,%eax
81003388:	83 ec 08             	sub    $0x8,%esp
8100338b:	52                   	push   %edx
8100338c:	50                   	push   %eax
8100338d:	e8 90 37 00 00       	call   81006b22 <fputc>
81003392:	83 c4 10             	add    $0x10,%esp
81003395:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003398:	0f b6 00             	movzbl (%eax),%eax
8100339b:	0f be d0             	movsbl %al,%edx
8100339e:	8b 45 20             	mov    0x20(%ebp),%eax
810033a1:	89 50 0c             	mov    %edx,0xc(%eax)
810033a4:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810033a9:	8b 40 0c             	mov    0xc(%eax),%eax
810033ac:	83 ec 08             	sub    $0x8,%esp
810033af:	50                   	push   %eax
810033b0:	68 4f 77 00 81       	push   $0x8100774f
810033b5:	e8 01 e4 ff ff       	call   810017bb <fputs>
810033ba:	83 c4 10             	add    $0x10,%esp
810033bd:	8b 45 20             	mov    0x20(%ebp),%eax
810033c0:	8b 40 04             	mov    0x4(%eax),%eax
810033c3:	8d 50 01             	lea    0x1(%eax),%edx
810033c6:	8b 45 20             	mov    0x20(%ebp),%eax
810033c9:	89 50 04             	mov    %edx,0x4(%eax)
810033cc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810033d0:	74 0a                	je     810033dc <getopt_internal+0x99a>
810033d2:	b8 3a 00 00 00       	mov    $0x3a,%eax
810033d7:	e9 76 01 00 00       	jmp    81003552 <getopt_internal+0xb10>
810033dc:	b8 3f 00 00 00       	mov    $0x3f,%eax
810033e1:	e9 6c 01 00 00       	jmp    81003552 <getopt_internal+0xb10>
810033e6:	8b 45 20             	mov    0x20(%ebp),%eax
810033e9:	8b 40 04             	mov    0x4(%eax),%eax
810033ec:	83 c0 01             	add    $0x1,%eax
810033ef:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810033f9:	01 d0                	add    %edx,%eax
810033fb:	8b 10                	mov    (%eax),%edx
810033fd:	8b 45 20             	mov    0x20(%ebp),%eax
81003400:	89 10                	mov    %edx,(%eax)
81003402:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003409:	8b 45 20             	mov    0x20(%ebp),%eax
8100340c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003413:	eb 58                	jmp    8100346d <getopt_internal+0xa2b>
81003415:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003419:	79 3e                	jns    81003459 <getopt_internal+0xa17>
8100341b:	8b 45 20             	mov    0x20(%ebp),%eax
8100341e:	8b 40 10             	mov    0x10(%eax),%eax
81003421:	8d 50 01             	lea    0x1(%eax),%edx
81003424:	8b 45 20             	mov    0x20(%ebp),%eax
81003427:	89 50 10             	mov    %edx,0x10(%eax)
8100342a:	8b 45 20             	mov    0x20(%ebp),%eax
8100342d:	8b 40 04             	mov    0x4(%eax),%eax
81003430:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003437:	8b 45 0c             	mov    0xc(%ebp),%eax
8100343a:	01 d0                	add    %edx,%eax
8100343c:	8b 10                	mov    (%eax),%edx
8100343e:	8b 45 20             	mov    0x20(%ebp),%eax
81003441:	8b 40 10             	mov    0x10(%eax),%eax
81003444:	01 d0                	add    %edx,%eax
81003446:	0f b6 00             	movzbl (%eax),%eax
81003449:	84 c0                	test   %al,%al
8100344b:	75 16                	jne    81003463 <getopt_internal+0xa21>
8100344d:	8b 45 20             	mov    0x20(%ebp),%eax
81003450:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003457:	eb 0a                	jmp    81003463 <getopt_internal+0xa21>
81003459:	8b 45 20             	mov    0x20(%ebp),%eax
8100345c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003463:	8b 45 20             	mov    0x20(%ebp),%eax
81003466:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100346c:	90                   	nop
8100346d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003471:	75 57                	jne    810034ca <getopt_internal+0xa88>
81003473:	8b 45 20             	mov    0x20(%ebp),%eax
81003476:	8b 40 10             	mov    0x10(%eax),%eax
81003479:	83 f8 01             	cmp    $0x1,%eax
8100347c:	75 4c                	jne    810034ca <getopt_internal+0xa88>
8100347e:	8b 45 20             	mov    0x20(%ebp),%eax
81003481:	8b 40 18             	mov    0x18(%eax),%eax
81003484:	85 c0                	test   %eax,%eax
81003486:	74 42                	je     810034ca <getopt_internal+0xa88>
81003488:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100348b:	8d 48 01             	lea    0x1(%eax),%ecx
8100348e:	8b 45 20             	mov    0x20(%ebp),%eax
81003491:	8b 40 18             	mov    0x18(%eax),%eax
81003494:	8b 55 20             	mov    0x20(%ebp),%edx
81003497:	8b 52 14             	mov    0x14(%edx),%edx
8100349a:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
810034a1:	8b 55 0c             	mov    0xc(%ebp),%edx
810034a4:	01 da                	add    %ebx,%edx
810034a6:	83 ec 04             	sub    $0x4,%esp
810034a9:	51                   	push   %ecx
810034aa:	50                   	push   %eax
810034ab:	52                   	push   %edx
810034ac:	e8 7f f4 ff ff       	call   81002930 <permute>
810034b1:	83 c4 10             	add    $0x10,%esp
810034b4:	8b 45 20             	mov    0x20(%ebp),%eax
810034b7:	8b 40 14             	mov    0x14(%eax),%eax
810034ba:	8d 50 01             	lea    0x1(%eax),%edx
810034bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034c0:	01 c2                	add    %eax,%edx
810034c2:	8b 45 20             	mov    0x20(%ebp),%eax
810034c5:	89 50 04             	mov    %edx,0x4(%eax)
810034c8:	eb 1f                	jmp    810034e9 <getopt_internal+0xaa7>
810034ca:	8b 45 20             	mov    0x20(%ebp),%eax
810034cd:	8b 40 10             	mov    0x10(%eax),%eax
810034d0:	83 f8 01             	cmp    $0x1,%eax
810034d3:	75 14                	jne    810034e9 <getopt_internal+0xaa7>
810034d5:	8b 45 20             	mov    0x20(%ebp),%eax
810034d8:	8b 40 04             	mov    0x4(%eax),%eax
810034db:	8d 50 01             	lea    0x1(%eax),%edx
810034de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034e1:	01 c2                	add    %eax,%edx
810034e3:	8b 45 20             	mov    0x20(%ebp),%eax
810034e6:	89 50 04             	mov    %edx,0x4(%eax)
810034e9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034ed:	78 5d                	js     8100354c <getopt_internal+0xb0a>
810034ef:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810034f3:	74 08                	je     810034fd <getopt_internal+0xabb>
810034f5:	8b 45 18             	mov    0x18(%ebp),%eax
810034f8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810034fb:	89 10                	mov    %edx,(%eax)
810034fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003500:	c1 e0 04             	shl    $0x4,%eax
81003503:	89 c2                	mov    %eax,%edx
81003505:	8b 45 14             	mov    0x14(%ebp),%eax
81003508:	01 d0                	add    %edx,%eax
8100350a:	8b 40 08             	mov    0x8(%eax),%eax
8100350d:	85 c0                	test   %eax,%eax
8100350f:	74 29                	je     8100353a <getopt_internal+0xaf8>
81003511:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003514:	c1 e0 04             	shl    $0x4,%eax
81003517:	89 c2                	mov    %eax,%edx
81003519:	8b 45 14             	mov    0x14(%ebp),%eax
8100351c:	01 c2                	add    %eax,%edx
8100351e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003521:	c1 e0 04             	shl    $0x4,%eax
81003524:	89 c1                	mov    %eax,%ecx
81003526:	8b 45 14             	mov    0x14(%ebp),%eax
81003529:	01 c8                	add    %ecx,%eax
8100352b:	8b 40 08             	mov    0x8(%eax),%eax
8100352e:	8b 52 0c             	mov    0xc(%edx),%edx
81003531:	89 10                	mov    %edx,(%eax)
81003533:	b8 00 00 00 00       	mov    $0x0,%eax
81003538:	eb 18                	jmp    81003552 <getopt_internal+0xb10>
8100353a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100353d:	c1 e0 04             	shl    $0x4,%eax
81003540:	89 c2                	mov    %eax,%edx
81003542:	8b 45 14             	mov    0x14(%ebp),%eax
81003545:	01 d0                	add    %edx,%eax
81003547:	8b 40 0c             	mov    0xc(%eax),%eax
8100354a:	eb 06                	jmp    81003552 <getopt_internal+0xb10>
8100354c:	8b 45 20             	mov    0x20(%ebp),%eax
8100354f:	8b 40 0c             	mov    0xc(%eax),%eax
81003552:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003555:	c9                   	leave  
81003556:	c3                   	ret    

81003557 <getopt>:
81003557:	55                   	push   %ebp
81003558:	89 e5                	mov    %esp,%ebp
8100355a:	83 ec 28             	sub    $0x28,%esp
8100355d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003560:	50                   	push   %eax
81003561:	e8 31 f4 ff ff       	call   81002997 <read_globals>
81003566:	83 c4 04             	add    $0x4,%esp
81003569:	83 ec 04             	sub    $0x4,%esp
8100356c:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100356f:	50                   	push   %eax
81003570:	6a 00                	push   $0x0
81003572:	6a 00                	push   $0x0
81003574:	6a 00                	push   $0x0
81003576:	ff 75 10             	push   0x10(%ebp)
81003579:	ff 75 0c             	push   0xc(%ebp)
8100357c:	ff 75 08             	push   0x8(%ebp)
8100357f:	e8 be f4 ff ff       	call   81002a42 <getopt_internal>
81003584:	83 c4 20             	add    $0x20,%esp
81003587:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100358a:	83 ec 0c             	sub    $0xc,%esp
8100358d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003590:	50                   	push   %eax
81003591:	e8 5a f4 ff ff       	call   810029f0 <write_globals>
81003596:	83 c4 10             	add    $0x10,%esp
81003599:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100359c:	c9                   	leave  
8100359d:	c3                   	ret    

8100359e <getopt_long>:
8100359e:	55                   	push   %ebp
8100359f:	89 e5                	mov    %esp,%ebp
810035a1:	83 ec 28             	sub    $0x28,%esp
810035a4:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035a7:	50                   	push   %eax
810035a8:	e8 ea f3 ff ff       	call   81002997 <read_globals>
810035ad:	83 c4 04             	add    $0x4,%esp
810035b0:	83 ec 04             	sub    $0x4,%esp
810035b3:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035b6:	50                   	push   %eax
810035b7:	6a 00                	push   $0x0
810035b9:	ff 75 18             	push   0x18(%ebp)
810035bc:	ff 75 14             	push   0x14(%ebp)
810035bf:	ff 75 10             	push   0x10(%ebp)
810035c2:	ff 75 0c             	push   0xc(%ebp)
810035c5:	ff 75 08             	push   0x8(%ebp)
810035c8:	e8 75 f4 ff ff       	call   81002a42 <getopt_internal>
810035cd:	83 c4 20             	add    $0x20,%esp
810035d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810035d3:	83 ec 0c             	sub    $0xc,%esp
810035d6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035d9:	50                   	push   %eax
810035da:	e8 11 f4 ff ff       	call   810029f0 <write_globals>
810035df:	83 c4 10             	add    $0x10,%esp
810035e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035e5:	c9                   	leave  
810035e6:	c3                   	ret    

810035e7 <getopt_long_only>:
810035e7:	55                   	push   %ebp
810035e8:	89 e5                	mov    %esp,%ebp
810035ea:	83 ec 28             	sub    $0x28,%esp
810035ed:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035f0:	50                   	push   %eax
810035f1:	e8 a1 f3 ff ff       	call   81002997 <read_globals>
810035f6:	83 c4 04             	add    $0x4,%esp
810035f9:	83 ec 04             	sub    $0x4,%esp
810035fc:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035ff:	50                   	push   %eax
81003600:	6a 01                	push   $0x1
81003602:	ff 75 18             	push   0x18(%ebp)
81003605:	ff 75 14             	push   0x14(%ebp)
81003608:	ff 75 10             	push   0x10(%ebp)
8100360b:	ff 75 0c             	push   0xc(%ebp)
8100360e:	ff 75 08             	push   0x8(%ebp)
81003611:	e8 2c f4 ff ff       	call   81002a42 <getopt_internal>
81003616:	83 c4 20             	add    $0x20,%esp
81003619:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100361c:	83 ec 0c             	sub    $0xc,%esp
8100361f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003622:	50                   	push   %eax
81003623:	e8 c8 f3 ff ff       	call   810029f0 <write_globals>
81003628:	83 c4 10             	add    $0x10,%esp
8100362b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100362e:	c9                   	leave  
8100362f:	c3                   	ret    

81003630 <__getopt_r>:
81003630:	55                   	push   %ebp
81003631:	89 e5                	mov    %esp,%ebp
81003633:	83 ec 08             	sub    $0x8,%esp
81003636:	83 ec 04             	sub    $0x4,%esp
81003639:	ff 75 14             	push   0x14(%ebp)
8100363c:	6a 00                	push   $0x0
8100363e:	6a 00                	push   $0x0
81003640:	6a 00                	push   $0x0
81003642:	ff 75 10             	push   0x10(%ebp)
81003645:	ff 75 0c             	push   0xc(%ebp)
81003648:	ff 75 08             	push   0x8(%ebp)
8100364b:	e8 f2 f3 ff ff       	call   81002a42 <getopt_internal>
81003650:	83 c4 20             	add    $0x20,%esp
81003653:	c9                   	leave  
81003654:	c3                   	ret    

81003655 <__getopt_long_r>:
81003655:	55                   	push   %ebp
81003656:	89 e5                	mov    %esp,%ebp
81003658:	83 ec 08             	sub    $0x8,%esp
8100365b:	83 ec 04             	sub    $0x4,%esp
8100365e:	ff 75 1c             	push   0x1c(%ebp)
81003661:	6a 00                	push   $0x0
81003663:	ff 75 18             	push   0x18(%ebp)
81003666:	ff 75 14             	push   0x14(%ebp)
81003669:	ff 75 10             	push   0x10(%ebp)
8100366c:	ff 75 0c             	push   0xc(%ebp)
8100366f:	ff 75 08             	push   0x8(%ebp)
81003672:	e8 cb f3 ff ff       	call   81002a42 <getopt_internal>
81003677:	83 c4 20             	add    $0x20,%esp
8100367a:	c9                   	leave  
8100367b:	c3                   	ret    

8100367c <__getopt_long_only_r>:
8100367c:	55                   	push   %ebp
8100367d:	89 e5                	mov    %esp,%ebp
8100367f:	83 ec 08             	sub    $0x8,%esp
81003682:	83 ec 04             	sub    $0x4,%esp
81003685:	ff 75 1c             	push   0x1c(%ebp)
81003688:	6a 01                	push   $0x1
8100368a:	ff 75 18             	push   0x18(%ebp)
8100368d:	ff 75 14             	push   0x14(%ebp)
81003690:	ff 75 10             	push   0x10(%ebp)
81003693:	ff 75 0c             	push   0xc(%ebp)
81003696:	ff 75 08             	push   0x8(%ebp)
81003699:	e8 a4 f3 ff ff       	call   81002a42 <getopt_internal>
8100369e:	83 c4 20             	add    $0x20,%esp
810036a1:	c9                   	leave  
810036a2:	c3                   	ret    

810036a3 <__getreent>:
810036a3:	55                   	push   %ebp
810036a4:	89 e5                	mov    %esp,%ebp
810036a6:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810036ab:	5d                   	pop    %ebp
810036ac:	c3                   	ret    

810036ad <__smakebuf_r>:
810036ad:	55                   	push   %ebp
810036ae:	89 e5                	mov    %esp,%ebp
810036b0:	56                   	push   %esi
810036b1:	53                   	push   %ebx
810036b2:	83 ec 10             	sub    $0x10,%esp
810036b5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810036b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036bc:	98                   	cwtl   
810036bd:	83 e0 02             	and    $0x2,%eax
810036c0:	85 c0                	test   %eax,%eax
810036c2:	74 16                	je     810036da <__smakebuf_r+0x2d>
810036c4:	8d 43 43             	lea    0x43(%ebx),%eax
810036c7:	89 03                	mov    %eax,(%ebx)
810036c9:	8b 03                	mov    (%ebx),%eax
810036cb:	89 43 10             	mov    %eax,0x10(%ebx)
810036ce:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810036d5:	e9 b9 00 00 00       	jmp    81003793 <__smakebuf_r+0xe6>
810036da:	8d 45 ec             	lea    -0x14(%ebp),%eax
810036dd:	50                   	push   %eax
810036de:	8d 45 f0             	lea    -0x10(%ebp),%eax
810036e1:	50                   	push   %eax
810036e2:	53                   	push   %ebx
810036e3:	ff 75 08             	push   0x8(%ebp)
810036e6:	e8 af 00 00 00       	call   8100379a <__swhatbuf_r>
810036eb:	83 c4 10             	add    $0x10,%esp
810036ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036f4:	83 ec 08             	sub    $0x8,%esp
810036f7:	50                   	push   %eax
810036f8:	ff 75 08             	push   0x8(%ebp)
810036fb:	e8 f9 03 00 00       	call   81003af9 <_malloc_r>
81003700:	83 c4 10             	add    $0x10,%esp
81003703:	89 c6                	mov    %eax,%esi
81003705:	85 f6                	test   %esi,%esi
81003707:	75 2f                	jne    81003738 <__smakebuf_r+0x8b>
81003709:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100370d:	98                   	cwtl   
8100370e:	25 00 02 00 00       	and    $0x200,%eax
81003713:	85 c0                	test   %eax,%eax
81003715:	75 7c                	jne    81003793 <__smakebuf_r+0xe6>
81003717:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100371b:	83 e0 fc             	and    $0xfffffffc,%eax
8100371e:	83 c8 02             	or     $0x2,%eax
81003721:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003725:	8d 43 43             	lea    0x43(%ebx),%eax
81003728:	89 03                	mov    %eax,(%ebx)
8100372a:	8b 03                	mov    (%ebx),%eax
8100372c:	89 43 10             	mov    %eax,0x10(%ebx)
8100372f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003736:	eb 5b                	jmp    81003793 <__smakebuf_r+0xe6>
81003738:	8b 45 08             	mov    0x8(%ebp),%eax
8100373b:	c7 40 3c 84 14 00 81 	movl   $0x81001484,0x3c(%eax)
81003742:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003746:	0c 80                	or     $0x80,%al
81003748:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100374c:	89 33                	mov    %esi,(%ebx)
8100374e:	8b 03                	mov    (%ebx),%eax
81003750:	89 43 10             	mov    %eax,0x10(%ebx)
81003753:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003756:	89 43 14             	mov    %eax,0x14(%ebx)
81003759:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100375c:	85 c0                	test   %eax,%eax
8100375e:	74 26                	je     81003786 <__smakebuf_r+0xd9>
81003760:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003764:	98                   	cwtl   
81003765:	83 ec 08             	sub    $0x8,%esp
81003768:	50                   	push   %eax
81003769:	ff 75 08             	push   0x8(%ebp)
8100376c:	e8 fe 36 00 00       	call   81006e6f <_isatty_r>
81003771:	83 c4 10             	add    $0x10,%esp
81003774:	85 c0                	test   %eax,%eax
81003776:	74 0e                	je     81003786 <__smakebuf_r+0xd9>
81003778:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100377c:	83 e0 fc             	and    $0xfffffffc,%eax
8100377f:	83 c8 01             	or     $0x1,%eax
81003782:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003786:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100378a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100378d:	09 d0                	or     %edx,%eax
8100378f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003793:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003796:	5b                   	pop    %ebx
81003797:	5e                   	pop    %esi
81003798:	5d                   	pop    %ebp
81003799:	c3                   	ret    

8100379a <__swhatbuf_r>:
8100379a:	55                   	push   %ebp
8100379b:	89 e5                	mov    %esp,%ebp
8100379d:	83 ec 58             	sub    $0x58,%esp
810037a0:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810037a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810037aa:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810037ae:	66 85 c0             	test   %ax,%ax
810037b1:	78 1f                	js     810037d2 <__swhatbuf_r+0x38>
810037b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b6:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810037ba:	98                   	cwtl   
810037bb:	83 ec 04             	sub    $0x4,%esp
810037be:	8d 55 ac             	lea    -0x54(%ebp),%edx
810037c1:	52                   	push   %edx
810037c2:	50                   	push   %eax
810037c3:	ff 75 08             	push   0x8(%ebp)
810037c6:	e8 59 ea ff ff       	call   81002224 <_fstat_r>
810037cb:	83 c4 10             	add    $0x10,%esp
810037ce:	85 c0                	test   %eax,%eax
810037d0:	79 35                	jns    81003807 <__swhatbuf_r+0x6d>
810037d2:	8b 45 14             	mov    0x14(%ebp),%eax
810037d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810037db:	8b 45 0c             	mov    0xc(%ebp),%eax
810037de:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810037e2:	98                   	cwtl   
810037e3:	25 80 00 00 00       	and    $0x80,%eax
810037e8:	85 c0                	test   %eax,%eax
810037ea:	74 0b                	je     810037f7 <__swhatbuf_r+0x5d>
810037ec:	8b 45 10             	mov    0x10(%ebp),%eax
810037ef:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810037f5:	eb 09                	jmp    81003800 <__swhatbuf_r+0x66>
810037f7:	8b 45 10             	mov    0x10(%ebp),%eax
810037fa:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003800:	b8 00 00 00 00       	mov    $0x0,%eax
81003805:	eb 24                	jmp    8100382b <__swhatbuf_r+0x91>
81003807:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100380a:	25 00 f0 00 00       	and    $0xf000,%eax
8100380f:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003814:	0f 94 c0             	sete   %al
81003817:	0f b6 d0             	movzbl %al,%edx
8100381a:	8b 45 14             	mov    0x14(%ebp),%eax
8100381d:	89 10                	mov    %edx,(%eax)
8100381f:	8b 45 10             	mov    0x10(%ebp),%eax
81003822:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003828:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100382b:	c9                   	leave  
8100382c:	c3                   	ret    

8100382d <malloc>:
8100382d:	55                   	push   %ebp
8100382e:	89 e5                	mov    %esp,%ebp
81003830:	83 ec 08             	sub    $0x8,%esp
81003833:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003838:	83 ec 08             	sub    $0x8,%esp
8100383b:	ff 75 08             	push   0x8(%ebp)
8100383e:	50                   	push   %eax
8100383f:	e8 b5 02 00 00       	call   81003af9 <_malloc_r>
81003844:	83 c4 10             	add    $0x10,%esp
81003847:	c9                   	leave  
81003848:	c3                   	ret    

81003849 <free>:
81003849:	55                   	push   %ebp
8100384a:	89 e5                	mov    %esp,%ebp
8100384c:	83 ec 08             	sub    $0x8,%esp
8100384f:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81003854:	83 ec 08             	sub    $0x8,%esp
81003857:	ff 75 08             	push   0x8(%ebp)
8100385a:	50                   	push   %eax
8100385b:	e8 7a df ff ff       	call   810017da <_free_r>
81003860:	83 c4 10             	add    $0x10,%esp
81003863:	90                   	nop
81003864:	c9                   	leave  
81003865:	c3                   	ret    

81003866 <malloc_extend_top>:
81003866:	55                   	push   %ebp
81003867:	89 e5                	mov    %esp,%ebp
81003869:	83 ec 38             	sub    $0x38,%esp
8100386c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003873:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003878:	8b 40 08             	mov    0x8(%eax),%eax
8100387b:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100387e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003881:	8b 40 04             	mov    0x4(%eax),%eax
81003884:	83 e0 fc             	and    $0xfffffffc,%eax
81003887:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100388a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100388d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003890:	01 d0                	add    %edx,%eax
81003892:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003895:	8b 15 20 8b 00 81    	mov    0x81008b20,%edx
8100389b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100389e:	01 d0                	add    %edx,%eax
810038a0:	83 c0 10             	add    $0x10,%eax
810038a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038a6:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810038ad:	a1 4c 83 00 81       	mov    0x8100834c,%eax
810038b2:	83 f8 ff             	cmp    $0xffffffff,%eax
810038b5:	74 15                	je     810038cc <malloc_extend_top+0x66>
810038b7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810038ba:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038bd:	01 d0                	add    %edx,%eax
810038bf:	8d 50 ff             	lea    -0x1(%eax),%edx
810038c2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810038c5:	f7 d8                	neg    %eax
810038c7:	21 d0                	and    %edx,%eax
810038c9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038cf:	83 ec 08             	sub    $0x8,%esp
810038d2:	50                   	push   %eax
810038d3:	ff 75 08             	push   0x8(%ebp)
810038d6:	e8 1e 26 00 00       	call   81005ef9 <_sbrk_r>
810038db:	83 c4 10             	add    $0x10,%esp
810038de:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038e1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810038e5:	0f 84 0b 02 00 00    	je     81003af6 <malloc_extend_top+0x290>
810038eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038ee:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810038f1:	73 0e                	jae    81003901 <malloc_extend_top+0x9b>
810038f3:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810038f8:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810038fb:	0f 85 f5 01 00 00    	jne    81003af6 <malloc_extend_top+0x290>
81003901:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003906:	89 c2                	mov    %eax,%edx
81003908:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100390b:	01 d0                	add    %edx,%eax
8100390d:	a3 40 8b 00 81       	mov    %eax,0x81008b40
81003912:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003915:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003918:	75 30                	jne    8100394a <malloc_extend_top+0xe4>
8100391a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100391d:	8d 50 ff             	lea    -0x1(%eax),%edx
81003920:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003923:	21 d0                	and    %edx,%eax
81003925:	85 c0                	test   %eax,%eax
81003927:	75 21                	jne    8100394a <malloc_extend_top+0xe4>
81003929:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100392c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100392f:	01 d0                	add    %edx,%eax
81003931:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003934:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003939:	8b 40 08             	mov    0x8(%eax),%eax
8100393c:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100393f:	83 ca 01             	or     $0x1,%edx
81003942:	89 50 04             	mov    %edx,0x4(%eax)
81003945:	e9 76 01 00 00       	jmp    81003ac0 <malloc_extend_top+0x25a>
8100394a:	a1 4c 83 00 81       	mov    0x8100834c,%eax
8100394f:	83 f8 ff             	cmp    $0xffffffff,%eax
81003952:	75 0a                	jne    8100395e <malloc_extend_top+0xf8>
81003954:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003957:	a3 4c 83 00 81       	mov    %eax,0x8100834c
8100395c:	eb 13                	jmp    81003971 <malloc_extend_top+0x10b>
8100395e:	8b 15 40 8b 00 81    	mov    0x81008b40,%edx
81003964:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003967:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100396a:	01 d0                	add    %edx,%eax
8100396c:	a3 40 8b 00 81       	mov    %eax,0x81008b40
81003971:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003974:	83 c0 08             	add    $0x8,%eax
81003977:	83 e0 07             	and    $0x7,%eax
8100397a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100397d:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003981:	74 13                	je     81003996 <malloc_extend_top+0x130>
81003983:	b8 08 00 00 00       	mov    $0x8,%eax
81003988:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100398b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100398e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003991:	01 45 f4             	add    %eax,-0xc(%ebp)
81003994:	eb 07                	jmp    8100399d <malloc_extend_top+0x137>
81003996:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100399d:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039a0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039a3:	01 d0                	add    %edx,%eax
810039a5:	89 c2                	mov    %eax,%edx
810039a7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039aa:	83 e8 01             	sub    $0x1,%eax
810039ad:	21 c2                	and    %eax,%edx
810039af:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039b2:	29 d0                	sub    %edx,%eax
810039b4:	01 45 f0             	add    %eax,-0x10(%ebp)
810039b7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039ba:	83 e8 01             	sub    $0x1,%eax
810039bd:	21 45 f0             	and    %eax,-0x10(%ebp)
810039c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039c3:	83 ec 08             	sub    $0x8,%esp
810039c6:	50                   	push   %eax
810039c7:	ff 75 08             	push   0x8(%ebp)
810039ca:	e8 2a 25 00 00       	call   81005ef9 <_sbrk_r>
810039cf:	83 c4 10             	add    $0x10,%esp
810039d2:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039d5:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810039d9:	75 28                	jne    81003a03 <malloc_extend_top+0x19d>
810039db:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810039e2:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810039e9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039ef:	01 d0                	add    %edx,%eax
810039f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039f4:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810039f8:	74 09                	je     81003a03 <malloc_extend_top+0x19d>
810039fa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039fd:	83 e8 08             	sub    $0x8,%eax
81003a00:	01 45 ec             	add    %eax,-0x14(%ebp)
81003a03:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003a08:	89 c2                	mov    %eax,%edx
81003a0a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a0d:	01 d0                	add    %edx,%eax
81003a0f:	a3 40 8b 00 81       	mov    %eax,0x81008b40
81003a14:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81003a19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a1c:	89 42 08             	mov    %eax,0x8(%edx)
81003a1f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a22:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003a25:	89 c2                	mov    %eax,%edx
81003a27:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a2a:	01 d0                	add    %edx,%eax
81003a2c:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003a2f:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003a34:	8b 40 08             	mov    0x8(%eax),%eax
81003a37:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003a3a:	83 ca 01             	or     $0x1,%edx
81003a3d:	89 50 04             	mov    %edx,0x4(%eax)
81003a40:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003a45:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003a48:	74 76                	je     81003ac0 <malloc_extend_top+0x25a>
81003a4a:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003a4e:	77 14                	ja     81003a64 <malloc_extend_top+0x1fe>
81003a50:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003a55:	8b 40 08             	mov    0x8(%eax),%eax
81003a58:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003a5f:	e9 93 00 00 00       	jmp    81003af7 <malloc_extend_top+0x291>
81003a64:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a67:	83 e8 0c             	sub    $0xc,%eax
81003a6a:	83 e0 f8             	and    $0xfffffff8,%eax
81003a6d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a70:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a73:	8b 40 04             	mov    0x4(%eax),%eax
81003a76:	83 e0 01             	and    $0x1,%eax
81003a79:	0b 45 dc             	or     -0x24(%ebp),%eax
81003a7c:	89 c2                	mov    %eax,%edx
81003a7e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a81:	89 50 04             	mov    %edx,0x4(%eax)
81003a84:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003a87:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a8a:	01 d0                	add    %edx,%eax
81003a8c:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003a93:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a96:	8d 50 04             	lea    0x4(%eax),%edx
81003a99:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a9c:	01 d0                	add    %edx,%eax
81003a9e:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003aa5:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003aa9:	76 15                	jbe    81003ac0 <malloc_extend_top+0x25a>
81003aab:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003aae:	83 c0 08             	add    $0x8,%eax
81003ab1:	83 ec 08             	sub    $0x8,%esp
81003ab4:	50                   	push   %eax
81003ab5:	ff 75 08             	push   0x8(%ebp)
81003ab8:	e8 1d dd ff ff       	call   810017da <_free_r>
81003abd:	83 c4 10             	add    $0x10,%esp
81003ac0:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003ac5:	89 c2                	mov    %eax,%edx
81003ac7:	a1 24 8b 00 81       	mov    0x81008b24,%eax
81003acc:	39 c2                	cmp    %eax,%edx
81003ace:	76 0a                	jbe    81003ada <malloc_extend_top+0x274>
81003ad0:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003ad5:	a3 24 8b 00 81       	mov    %eax,0x81008b24
81003ada:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003adf:	89 c2                	mov    %eax,%edx
81003ae1:	a1 28 8b 00 81       	mov    0x81008b28,%eax
81003ae6:	39 c2                	cmp    %eax,%edx
81003ae8:	76 0d                	jbe    81003af7 <malloc_extend_top+0x291>
81003aea:	a1 40 8b 00 81       	mov    0x81008b40,%eax
81003aef:	a3 28 8b 00 81       	mov    %eax,0x81008b28
81003af4:	eb 01                	jmp    81003af7 <malloc_extend_top+0x291>
81003af6:	90                   	nop
81003af7:	c9                   	leave  
81003af8:	c3                   	ret    

81003af9 <_malloc_r>:
81003af9:	55                   	push   %ebp
81003afa:	89 e5                	mov    %esp,%ebp
81003afc:	53                   	push   %ebx
81003afd:	83 ec 44             	sub    $0x44,%esp
81003b00:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b03:	83 c0 0b             	add    $0xb,%eax
81003b06:	83 f8 16             	cmp    $0x16,%eax
81003b09:	76 0b                	jbe    81003b16 <_malloc_r+0x1d>
81003b0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b0e:	83 c0 0b             	add    $0xb,%eax
81003b11:	83 e0 f8             	and    $0xfffffff8,%eax
81003b14:	eb 05                	jmp    81003b1b <_malloc_r+0x22>
81003b16:	b8 10 00 00 00       	mov    $0x10,%eax
81003b1b:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003b1e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b21:	85 c0                	test   %eax,%eax
81003b23:	78 08                	js     81003b2d <_malloc_r+0x34>
81003b25:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b28:	3b 45 0c             	cmp    0xc(%ebp),%eax
81003b2b:	73 13                	jae    81003b40 <_malloc_r+0x47>
81003b2d:	8b 45 08             	mov    0x8(%ebp),%eax
81003b30:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003b36:	b8 00 00 00 00       	mov    $0x0,%eax
81003b3b:	e9 d6 07 00 00       	jmp    81004316 <_malloc_r+0x81d>
81003b40:	83 ec 0c             	sub    $0xc,%esp
81003b43:	ff 75 08             	push   0x8(%ebp)
81003b46:	e8 1a 0a 00 00       	call   81004565 <__malloc_lock>
81003b4b:	83 c4 10             	add    $0x10,%esp
81003b4e:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003b55:	0f 87 b0 00 00 00    	ja     81003c0b <_malloc_r+0x112>
81003b5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b5e:	c1 e8 03             	shr    $0x3,%eax
81003b61:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b64:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b67:	83 c0 01             	add    $0x1,%eax
81003b6a:	01 c0                	add    %eax,%eax
81003b6c:	c1 e0 02             	shl    $0x2,%eax
81003b6f:	05 40 7f 00 81       	add    $0x81007f40,%eax
81003b74:	83 e8 08             	sub    $0x8,%eax
81003b77:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b7a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b7d:	8b 40 0c             	mov    0xc(%eax),%eax
81003b80:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b83:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b86:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003b89:	75 0d                	jne    81003b98 <_malloc_r+0x9f>
81003b8b:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003b8f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b92:	8b 40 0c             	mov    0xc(%eax),%eax
81003b95:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b9b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003b9e:	74 62                	je     81003c02 <_malloc_r+0x109>
81003ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ba3:	8b 40 04             	mov    0x4(%eax),%eax
81003ba6:	83 e0 fc             	and    $0xfffffffc,%eax
81003ba9:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003bac:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003baf:	8b 40 0c             	mov    0xc(%eax),%eax
81003bb2:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003bb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bb8:	8b 40 08             	mov    0x8(%eax),%eax
81003bbb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003bbe:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bc1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003bc4:	89 50 0c             	mov    %edx,0xc(%eax)
81003bc7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bca:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003bcd:	89 50 08             	mov    %edx,0x8(%eax)
81003bd0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bd3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003bd6:	01 d0                	add    %edx,%eax
81003bd8:	8b 50 04             	mov    0x4(%eax),%edx
81003bdb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003bde:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003be1:	01 c8                	add    %ecx,%eax
81003be3:	83 ca 01             	or     $0x1,%edx
81003be6:	89 50 04             	mov    %edx,0x4(%eax)
81003be9:	83 ec 0c             	sub    $0xc,%esp
81003bec:	ff 75 08             	push   0x8(%ebp)
81003bef:	e8 77 09 00 00       	call   8100456b <__malloc_unlock>
81003bf4:	83 c4 10             	add    $0x10,%esp
81003bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bfa:	83 c0 08             	add    $0x8,%eax
81003bfd:	e9 14 07 00 00       	jmp    81004316 <_malloc_r+0x81d>
81003c02:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003c06:	e9 46 01 00 00       	jmp    81003d51 <_malloc_r+0x258>
81003c0b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c0e:	c1 e8 09             	shr    $0x9,%eax
81003c11:	85 c0                	test   %eax,%eax
81003c13:	75 08                	jne    81003c1d <_malloc_r+0x124>
81003c15:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c18:	c1 e8 03             	shr    $0x3,%eax
81003c1b:	eb 77                	jmp    81003c94 <_malloc_r+0x19b>
81003c1d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c20:	c1 e8 09             	shr    $0x9,%eax
81003c23:	83 f8 04             	cmp    $0x4,%eax
81003c26:	77 0b                	ja     81003c33 <_malloc_r+0x13a>
81003c28:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c2b:	c1 e8 06             	shr    $0x6,%eax
81003c2e:	83 c0 38             	add    $0x38,%eax
81003c31:	eb 61                	jmp    81003c94 <_malloc_r+0x19b>
81003c33:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c36:	c1 e8 09             	shr    $0x9,%eax
81003c39:	83 f8 14             	cmp    $0x14,%eax
81003c3c:	77 0b                	ja     81003c49 <_malloc_r+0x150>
81003c3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c41:	c1 e8 09             	shr    $0x9,%eax
81003c44:	83 c0 5b             	add    $0x5b,%eax
81003c47:	eb 4b                	jmp    81003c94 <_malloc_r+0x19b>
81003c49:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c4c:	c1 e8 09             	shr    $0x9,%eax
81003c4f:	83 f8 54             	cmp    $0x54,%eax
81003c52:	77 0b                	ja     81003c5f <_malloc_r+0x166>
81003c54:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c57:	c1 e8 0c             	shr    $0xc,%eax
81003c5a:	83 c0 6e             	add    $0x6e,%eax
81003c5d:	eb 35                	jmp    81003c94 <_malloc_r+0x19b>
81003c5f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c62:	c1 e8 09             	shr    $0x9,%eax
81003c65:	3d 54 01 00 00       	cmp    $0x154,%eax
81003c6a:	77 0b                	ja     81003c77 <_malloc_r+0x17e>
81003c6c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c6f:	c1 e8 0f             	shr    $0xf,%eax
81003c72:	83 c0 77             	add    $0x77,%eax
81003c75:	eb 1d                	jmp    81003c94 <_malloc_r+0x19b>
81003c77:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c7a:	c1 e8 09             	shr    $0x9,%eax
81003c7d:	3d 54 05 00 00       	cmp    $0x554,%eax
81003c82:	77 0b                	ja     81003c8f <_malloc_r+0x196>
81003c84:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c87:	c1 e8 12             	shr    $0x12,%eax
81003c8a:	83 c0 7c             	add    $0x7c,%eax
81003c8d:	eb 05                	jmp    81003c94 <_malloc_r+0x19b>
81003c8f:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003c94:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c97:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c9a:	83 c0 01             	add    $0x1,%eax
81003c9d:	01 c0                	add    %eax,%eax
81003c9f:	c1 e0 02             	shl    $0x2,%eax
81003ca2:	05 40 7f 00 81       	add    $0x81007f40,%eax
81003ca7:	83 e8 08             	sub    $0x8,%eax
81003caa:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003cad:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cb0:	8b 40 0c             	mov    0xc(%eax),%eax
81003cb3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cb6:	e9 86 00 00 00       	jmp    81003d41 <_malloc_r+0x248>
81003cbb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cbe:	8b 40 04             	mov    0x4(%eax),%eax
81003cc1:	83 e0 fc             	and    $0xfffffffc,%eax
81003cc4:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003cc7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003cca:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003ccd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003cd0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003cd4:	7e 06                	jle    81003cdc <_malloc_r+0x1e3>
81003cd6:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003cda:	eb 71                	jmp    81003d4d <_malloc_r+0x254>
81003cdc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003ce0:	78 56                	js     81003d38 <_malloc_r+0x23f>
81003ce2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ce5:	8b 40 0c             	mov    0xc(%eax),%eax
81003ce8:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003ceb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cee:	8b 40 08             	mov    0x8(%eax),%eax
81003cf1:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003cf4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003cf7:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003cfa:	89 50 0c             	mov    %edx,0xc(%eax)
81003cfd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d00:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003d03:	89 50 08             	mov    %edx,0x8(%eax)
81003d06:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d09:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d0c:	01 d0                	add    %edx,%eax
81003d0e:	8b 50 04             	mov    0x4(%eax),%edx
81003d11:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003d14:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d17:	01 c8                	add    %ecx,%eax
81003d19:	83 ca 01             	or     $0x1,%edx
81003d1c:	89 50 04             	mov    %edx,0x4(%eax)
81003d1f:	83 ec 0c             	sub    $0xc,%esp
81003d22:	ff 75 08             	push   0x8(%ebp)
81003d25:	e8 41 08 00 00       	call   8100456b <__malloc_unlock>
81003d2a:	83 c4 10             	add    $0x10,%esp
81003d2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d30:	83 c0 08             	add    $0x8,%eax
81003d33:	e9 de 05 00 00       	jmp    81004316 <_malloc_r+0x81d>
81003d38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d3b:	8b 40 0c             	mov    0xc(%eax),%eax
81003d3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d44:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d47:	0f 85 6e ff ff ff    	jne    81003cbb <_malloc_r+0x1c2>
81003d4d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d51:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
81003d56:	8b 40 08             	mov    0x8(%eax),%eax
81003d59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d5c:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
81003d61:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003d64:	0f 84 9c 02 00 00    	je     81004006 <_malloc_r+0x50d>
81003d6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d6d:	8b 40 04             	mov    0x4(%eax),%eax
81003d70:	83 e0 fc             	and    $0xfffffffc,%eax
81003d73:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d76:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d79:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d7c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d7f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d83:	7e 7a                	jle    81003dff <_malloc_r+0x306>
81003d85:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d88:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d8b:	01 d0                	add    %edx,%eax
81003d8d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003d90:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d93:	83 c8 01             	or     $0x1,%eax
81003d96:	89 c2                	mov    %eax,%edx
81003d98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d9b:	89 50 04             	mov    %edx,0x4(%eax)
81003d9e:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
81003da3:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003da6:	89 50 0c             	mov    %edx,0xc(%eax)
81003da9:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81003dae:	8b 40 0c             	mov    0xc(%eax),%eax
81003db1:	89 42 08             	mov    %eax,0x8(%edx)
81003db4:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81003db9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dbc:	89 50 0c             	mov    %edx,0xc(%eax)
81003dbf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dc2:	8b 50 0c             	mov    0xc(%eax),%edx
81003dc5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dc8:	89 50 08             	mov    %edx,0x8(%eax)
81003dcb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dce:	83 c8 01             	or     $0x1,%eax
81003dd1:	89 c2                	mov    %eax,%edx
81003dd3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dd6:	89 50 04             	mov    %edx,0x4(%eax)
81003dd9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ddc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ddf:	01 c2                	add    %eax,%edx
81003de1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003de4:	89 02                	mov    %eax,(%edx)
81003de6:	83 ec 0c             	sub    $0xc,%esp
81003de9:	ff 75 08             	push   0x8(%ebp)
81003dec:	e8 7a 07 00 00       	call   8100456b <__malloc_unlock>
81003df1:	83 c4 10             	add    $0x10,%esp
81003df4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df7:	83 c0 08             	add    $0x8,%eax
81003dfa:	e9 17 05 00 00       	jmp    81004316 <_malloc_r+0x81d>
81003dff:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
81003e04:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81003e09:	89 50 0c             	mov    %edx,0xc(%eax)
81003e0c:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81003e11:	8b 40 0c             	mov    0xc(%eax),%eax
81003e14:	89 42 08             	mov    %eax,0x8(%edx)
81003e17:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003e1b:	78 32                	js     81003e4f <_malloc_r+0x356>
81003e1d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e20:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e23:	01 d0                	add    %edx,%eax
81003e25:	8b 50 04             	mov    0x4(%eax),%edx
81003e28:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e2b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e2e:	01 c8                	add    %ecx,%eax
81003e30:	83 ca 01             	or     $0x1,%edx
81003e33:	89 50 04             	mov    %edx,0x4(%eax)
81003e36:	83 ec 0c             	sub    $0xc,%esp
81003e39:	ff 75 08             	push   0x8(%ebp)
81003e3c:	e8 2a 07 00 00       	call   8100456b <__malloc_unlock>
81003e41:	83 c4 10             	add    $0x10,%esp
81003e44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e47:	83 c0 08             	add    $0x8,%eax
81003e4a:	e9 c7 04 00 00       	jmp    81004316 <_malloc_r+0x81d>
81003e4f:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003e56:	77 7f                	ja     81003ed7 <_malloc_r+0x3de>
81003e58:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e5b:	c1 e8 03             	shr    $0x3,%eax
81003e5e:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003e61:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003e66:	8b 58 04             	mov    0x4(%eax),%ebx
81003e69:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003e6c:	8d 50 03             	lea    0x3(%eax),%edx
81003e6f:	85 c0                	test   %eax,%eax
81003e71:	0f 48 c2             	cmovs  %edx,%eax
81003e74:	c1 f8 02             	sar    $0x2,%eax
81003e77:	ba 01 00 00 00       	mov    $0x1,%edx
81003e7c:	89 c1                	mov    %eax,%ecx
81003e7e:	d3 e2                	shl    %cl,%edx
81003e80:	89 d0                	mov    %edx,%eax
81003e82:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81003e87:	09 d8                	or     %ebx,%eax
81003e89:	89 42 04             	mov    %eax,0x4(%edx)
81003e8c:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003e8f:	83 c0 01             	add    $0x1,%eax
81003e92:	01 c0                	add    %eax,%eax
81003e94:	c1 e0 02             	shl    $0x2,%eax
81003e97:	05 40 7f 00 81       	add    $0x81007f40,%eax
81003e9c:	83 e8 08             	sub    $0x8,%eax
81003e9f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003ea2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ea5:	8b 40 08             	mov    0x8(%eax),%eax
81003ea8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003eab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eae:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003eb1:	89 50 0c             	mov    %edx,0xc(%eax)
81003eb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eb7:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003eba:	89 50 08             	mov    %edx,0x8(%eax)
81003ebd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ec0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ec3:	89 50 08             	mov    %edx,0x8(%eax)
81003ec6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ec9:	8b 50 08             	mov    0x8(%eax),%edx
81003ecc:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ecf:	89 50 0c             	mov    %edx,0xc(%eax)
81003ed2:	e9 2f 01 00 00       	jmp    81004006 <_malloc_r+0x50d>
81003ed7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003eda:	c1 e8 09             	shr    $0x9,%eax
81003edd:	85 c0                	test   %eax,%eax
81003edf:	75 08                	jne    81003ee9 <_malloc_r+0x3f0>
81003ee1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ee4:	c1 e8 03             	shr    $0x3,%eax
81003ee7:	eb 77                	jmp    81003f60 <_malloc_r+0x467>
81003ee9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003eec:	c1 e8 09             	shr    $0x9,%eax
81003eef:	83 f8 04             	cmp    $0x4,%eax
81003ef2:	77 0b                	ja     81003eff <_malloc_r+0x406>
81003ef4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ef7:	c1 e8 06             	shr    $0x6,%eax
81003efa:	83 c0 38             	add    $0x38,%eax
81003efd:	eb 61                	jmp    81003f60 <_malloc_r+0x467>
81003eff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f02:	c1 e8 09             	shr    $0x9,%eax
81003f05:	83 f8 14             	cmp    $0x14,%eax
81003f08:	77 0b                	ja     81003f15 <_malloc_r+0x41c>
81003f0a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f0d:	c1 e8 09             	shr    $0x9,%eax
81003f10:	83 c0 5b             	add    $0x5b,%eax
81003f13:	eb 4b                	jmp    81003f60 <_malloc_r+0x467>
81003f15:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f18:	c1 e8 09             	shr    $0x9,%eax
81003f1b:	83 f8 54             	cmp    $0x54,%eax
81003f1e:	77 0b                	ja     81003f2b <_malloc_r+0x432>
81003f20:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f23:	c1 e8 0c             	shr    $0xc,%eax
81003f26:	83 c0 6e             	add    $0x6e,%eax
81003f29:	eb 35                	jmp    81003f60 <_malloc_r+0x467>
81003f2b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f2e:	c1 e8 09             	shr    $0x9,%eax
81003f31:	3d 54 01 00 00       	cmp    $0x154,%eax
81003f36:	77 0b                	ja     81003f43 <_malloc_r+0x44a>
81003f38:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f3b:	c1 e8 0f             	shr    $0xf,%eax
81003f3e:	83 c0 77             	add    $0x77,%eax
81003f41:	eb 1d                	jmp    81003f60 <_malloc_r+0x467>
81003f43:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f46:	c1 e8 09             	shr    $0x9,%eax
81003f49:	3d 54 05 00 00       	cmp    $0x554,%eax
81003f4e:	77 0b                	ja     81003f5b <_malloc_r+0x462>
81003f50:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f53:	c1 e8 12             	shr    $0x12,%eax
81003f56:	83 c0 7c             	add    $0x7c,%eax
81003f59:	eb 05                	jmp    81003f60 <_malloc_r+0x467>
81003f5b:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003f60:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003f63:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f66:	83 c0 01             	add    $0x1,%eax
81003f69:	01 c0                	add    %eax,%eax
81003f6b:	c1 e0 02             	shl    $0x2,%eax
81003f6e:	05 40 7f 00 81       	add    $0x81007f40,%eax
81003f73:	83 e8 08             	sub    $0x8,%eax
81003f76:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f79:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f7c:	8b 40 08             	mov    0x8(%eax),%eax
81003f7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f85:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f88:	75 36                	jne    81003fc0 <_malloc_r+0x4c7>
81003f8a:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81003f8f:	8b 58 04             	mov    0x4(%eax),%ebx
81003f92:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f95:	8d 50 03             	lea    0x3(%eax),%edx
81003f98:	85 c0                	test   %eax,%eax
81003f9a:	0f 48 c2             	cmovs  %edx,%eax
81003f9d:	c1 f8 02             	sar    $0x2,%eax
81003fa0:	ba 01 00 00 00       	mov    $0x1,%edx
81003fa5:	89 c1                	mov    %eax,%ecx
81003fa7:	d3 e2                	shl    %cl,%edx
81003fa9:	89 d0                	mov    %edx,%eax
81003fab:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
81003fb0:	09 d8                	or     %ebx,%eax
81003fb2:	89 42 04             	mov    %eax,0x4(%edx)
81003fb5:	eb 28                	jmp    81003fdf <_malloc_r+0x4e6>
81003fb7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fba:	8b 40 08             	mov    0x8(%eax),%eax
81003fbd:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003fc0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fc3:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fc6:	74 0e                	je     81003fd6 <_malloc_r+0x4dd>
81003fc8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fcb:	8b 40 04             	mov    0x4(%eax),%eax
81003fce:	83 e0 fc             	and    $0xfffffffc,%eax
81003fd1:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003fd4:	72 e1                	jb     81003fb7 <_malloc_r+0x4be>
81003fd6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fd9:	8b 40 0c             	mov    0xc(%eax),%eax
81003fdc:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003fdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fe2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003fe5:	89 50 0c             	mov    %edx,0xc(%eax)
81003fe8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003feb:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003fee:	89 50 08             	mov    %edx,0x8(%eax)
81003ff1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ff4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ff7:	89 50 08             	mov    %edx,0x8(%eax)
81003ffa:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ffd:	8b 50 08             	mov    0x8(%eax),%edx
81004000:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004003:	89 50 0c             	mov    %edx,0xc(%eax)
81004006:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004009:	8d 50 03             	lea    0x3(%eax),%edx
8100400c:	85 c0                	test   %eax,%eax
8100400e:	0f 48 c2             	cmovs  %edx,%eax
81004011:	c1 f8 02             	sar    $0x2,%eax
81004014:	ba 01 00 00 00       	mov    $0x1,%edx
81004019:	89 c1                	mov    %eax,%ecx
8100401b:	d3 e2                	shl    %cl,%edx
8100401d:	89 d0                	mov    %edx,%eax
8100401f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004022:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81004027:	8b 40 04             	mov    0x4(%eax),%eax
8100402a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100402d:	0f 87 13 02 00 00    	ja     81004246 <_malloc_r+0x74d>
81004033:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81004038:	8b 40 04             	mov    0x4(%eax),%eax
8100403b:	23 45 e4             	and    -0x1c(%ebp),%eax
8100403e:	85 c0                	test   %eax,%eax
81004040:	75 27                	jne    81004069 <_malloc_r+0x570>
81004042:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004045:	83 e0 fc             	and    $0xfffffffc,%eax
81004048:	83 c0 04             	add    $0x4,%eax
8100404b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100404e:	d1 65 e4             	shll   -0x1c(%ebp)
81004051:	eb 07                	jmp    8100405a <_malloc_r+0x561>
81004053:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004057:	d1 65 e4             	shll   -0x1c(%ebp)
8100405a:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
8100405f:	8b 40 04             	mov    0x4(%eax),%eax
81004062:	23 45 e4             	and    -0x1c(%ebp),%eax
81004065:	85 c0                	test   %eax,%eax
81004067:	74 ea                	je     81004053 <_malloc_r+0x55a>
81004069:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100406c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100406f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004072:	83 c0 01             	add    $0x1,%eax
81004075:	01 c0                	add    %eax,%eax
81004077:	c1 e0 02             	shl    $0x2,%eax
8100407a:	05 40 7f 00 81       	add    $0x81007f40,%eax
8100407f:	83 e8 08             	sub    $0x8,%eax
81004082:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004085:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004088:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100408b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100408e:	8b 40 0c             	mov    0xc(%eax),%eax
81004091:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004094:	e9 22 01 00 00       	jmp    810041bb <_malloc_r+0x6c2>
81004099:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100409c:	8b 40 04             	mov    0x4(%eax),%eax
8100409f:	83 e0 fc             	and    $0xfffffffc,%eax
810040a2:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040a5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810040a8:	2b 45 d0             	sub    -0x30(%ebp),%eax
810040ab:	89 45 e8             	mov    %eax,-0x18(%ebp)
810040ae:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810040b2:	0f 8e 9e 00 00 00    	jle    81004156 <_malloc_r+0x65d>
810040b8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810040bb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040be:	01 d0                	add    %edx,%eax
810040c0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810040c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040c6:	83 c8 01             	or     $0x1,%eax
810040c9:	89 c2                	mov    %eax,%edx
810040cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040ce:	89 50 04             	mov    %edx,0x4(%eax)
810040d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040d4:	8b 40 0c             	mov    0xc(%eax),%eax
810040d7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810040da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040dd:	8b 40 08             	mov    0x8(%eax),%eax
810040e0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810040e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040e6:	8b 55 d8             	mov    -0x28(%ebp),%edx
810040e9:	89 50 0c             	mov    %edx,0xc(%eax)
810040ec:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040ef:	8b 55 dc             	mov    -0x24(%ebp),%edx
810040f2:	89 50 08             	mov    %edx,0x8(%eax)
810040f5:	b8 48 7f 00 81       	mov    $0x81007f48,%eax
810040fa:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810040fd:	89 50 0c             	mov    %edx,0xc(%eax)
81004100:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81004105:	8b 40 0c             	mov    0xc(%eax),%eax
81004108:	89 42 08             	mov    %eax,0x8(%edx)
8100410b:	ba 48 7f 00 81       	mov    $0x81007f48,%edx
81004110:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004113:	89 50 0c             	mov    %edx,0xc(%eax)
81004116:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004119:	8b 50 0c             	mov    0xc(%eax),%edx
8100411c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100411f:	89 50 08             	mov    %edx,0x8(%eax)
81004122:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004125:	83 c8 01             	or     $0x1,%eax
81004128:	89 c2                	mov    %eax,%edx
8100412a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100412d:	89 50 04             	mov    %edx,0x4(%eax)
81004130:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004133:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004136:	01 c2                	add    %eax,%edx
81004138:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100413b:	89 02                	mov    %eax,(%edx)
8100413d:	83 ec 0c             	sub    $0xc,%esp
81004140:	ff 75 08             	push   0x8(%ebp)
81004143:	e8 23 04 00 00       	call   8100456b <__malloc_unlock>
81004148:	83 c4 10             	add    $0x10,%esp
8100414b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100414e:	83 c0 08             	add    $0x8,%eax
81004151:	e9 c0 01 00 00       	jmp    81004316 <_malloc_r+0x81d>
81004156:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100415a:	78 56                	js     810041b2 <_malloc_r+0x6b9>
8100415c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100415f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004162:	01 d0                	add    %edx,%eax
81004164:	8b 50 04             	mov    0x4(%eax),%edx
81004167:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100416a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100416d:	01 c8                	add    %ecx,%eax
8100416f:	83 ca 01             	or     $0x1,%edx
81004172:	89 50 04             	mov    %edx,0x4(%eax)
81004175:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004178:	8b 40 0c             	mov    0xc(%eax),%eax
8100417b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100417e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004181:	8b 40 08             	mov    0x8(%eax),%eax
81004184:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004187:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100418a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100418d:	89 50 0c             	mov    %edx,0xc(%eax)
81004190:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004193:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004196:	89 50 08             	mov    %edx,0x8(%eax)
81004199:	83 ec 0c             	sub    $0xc,%esp
8100419c:	ff 75 08             	push   0x8(%ebp)
8100419f:	e8 c7 03 00 00       	call   8100456b <__malloc_unlock>
810041a4:	83 c4 10             	add    $0x10,%esp
810041a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041aa:	83 c0 08             	add    $0x8,%eax
810041ad:	e9 64 01 00 00       	jmp    81004316 <_malloc_r+0x81d>
810041b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041b5:	8b 40 0c             	mov    0xc(%eax),%eax
810041b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041be:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810041c1:	0f 85 d2 fe ff ff    	jne    81004099 <_malloc_r+0x5a0>
810041c7:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810041cb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810041cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041d2:	83 e0 03             	and    $0x3,%eax
810041d5:	85 c0                	test   %eax,%eax
810041d7:	0f 85 ae fe ff ff    	jne    8100408b <_malloc_r+0x592>
810041dd:	8b 45 e0             	mov    -0x20(%ebp),%eax
810041e0:	83 e0 03             	and    $0x3,%eax
810041e3:	85 c0                	test   %eax,%eax
810041e5:	75 19                	jne    81004200 <_malloc_r+0x707>
810041e7:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810041ec:	8b 48 04             	mov    0x4(%eax),%ecx
810041ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810041f2:	f7 d0                	not    %eax
810041f4:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
810041f9:	21 c8                	and    %ecx,%eax
810041fb:	89 42 04             	mov    %eax,0x4(%edx)
810041fe:	eb 13                	jmp    81004213 <_malloc_r+0x71a>
81004200:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81004204:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81004208:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100420b:	8b 40 08             	mov    0x8(%eax),%eax
8100420e:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81004211:	74 ca                	je     810041dd <_malloc_r+0x6e4>
81004213:	d1 65 e4             	shll   -0x1c(%ebp)
81004216:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
8100421b:	8b 40 04             	mov    0x4(%eax),%eax
8100421e:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004221:	77 23                	ja     81004246 <_malloc_r+0x74d>
81004223:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004227:	74 1d                	je     81004246 <_malloc_r+0x74d>
81004229:	eb 07                	jmp    81004232 <_malloc_r+0x739>
8100422b:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100422f:	d1 65 e4             	shll   -0x1c(%ebp)
81004232:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81004237:	8b 40 04             	mov    0x4(%eax),%eax
8100423a:	23 45 e4             	and    -0x1c(%ebp),%eax
8100423d:	85 c0                	test   %eax,%eax
8100423f:	74 ea                	je     8100422b <_malloc_r+0x732>
81004241:	e9 23 fe ff ff       	jmp    81004069 <_malloc_r+0x570>
81004246:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
8100424b:	8b 40 08             	mov    0x8(%eax),%eax
8100424e:	8b 40 04             	mov    0x4(%eax),%eax
81004251:	83 e0 fc             	and    $0xfffffffc,%eax
81004254:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004257:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100425a:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
8100425f:	8b 40 08             	mov    0x8(%eax),%eax
81004262:	8b 40 04             	mov    0x4(%eax),%eax
81004265:	83 e0 fc             	and    $0xfffffffc,%eax
81004268:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100426b:	77 06                	ja     81004273 <_malloc_r+0x77a>
8100426d:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004271:	7f 53                	jg     810042c6 <_malloc_r+0x7cd>
81004273:	83 ec 08             	sub    $0x8,%esp
81004276:	ff 75 d0             	push   -0x30(%ebp)
81004279:	ff 75 08             	push   0x8(%ebp)
8100427c:	e8 e5 f5 ff ff       	call   81003866 <malloc_extend_top>
81004281:	83 c4 10             	add    $0x10,%esp
81004284:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81004289:	8b 40 08             	mov    0x8(%eax),%eax
8100428c:	8b 40 04             	mov    0x4(%eax),%eax
8100428f:	83 e0 fc             	and    $0xfffffffc,%eax
81004292:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004295:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004298:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
8100429d:	8b 40 08             	mov    0x8(%eax),%eax
810042a0:	8b 40 04             	mov    0x4(%eax),%eax
810042a3:	83 e0 fc             	and    $0xfffffffc,%eax
810042a6:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810042a9:	77 06                	ja     810042b1 <_malloc_r+0x7b8>
810042ab:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810042af:	7f 15                	jg     810042c6 <_malloc_r+0x7cd>
810042b1:	83 ec 0c             	sub    $0xc,%esp
810042b4:	ff 75 08             	push   0x8(%ebp)
810042b7:	e8 af 02 00 00       	call   8100456b <__malloc_unlock>
810042bc:	83 c4 10             	add    $0x10,%esp
810042bf:	b8 00 00 00 00       	mov    $0x0,%eax
810042c4:	eb 50                	jmp    81004316 <_malloc_r+0x81d>
810042c6:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810042cb:	8b 40 08             	mov    0x8(%eax),%eax
810042ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042d1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d4:	83 c8 01             	or     $0x1,%eax
810042d7:	89 c2                	mov    %eax,%edx
810042d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042dc:	89 50 04             	mov    %edx,0x4(%eax)
810042df:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
810042e4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810042e7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ea:	01 c8                	add    %ecx,%eax
810042ec:	89 42 08             	mov    %eax,0x8(%edx)
810042ef:	8b 45 e8             	mov    -0x18(%ebp),%eax
810042f2:	83 c8 01             	or     $0x1,%eax
810042f5:	89 c2                	mov    %eax,%edx
810042f7:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810042fc:	8b 40 08             	mov    0x8(%eax),%eax
810042ff:	89 50 04             	mov    %edx,0x4(%eax)
81004302:	83 ec 0c             	sub    $0xc,%esp
81004305:	ff 75 08             	push   0x8(%ebp)
81004308:	e8 5e 02 00 00       	call   8100456b <__malloc_unlock>
8100430d:	83 c4 10             	add    $0x10,%esp
81004310:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004313:	83 c0 08             	add    $0x8,%eax
81004316:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004319:	c9                   	leave  
8100431a:	c3                   	ret    
8100431b:	66 90                	xchg   %ax,%ax
8100431d:	66 90                	xchg   %ax,%ax
8100431f:	90                   	nop

81004320 <memchr>:
81004320:	55                   	push   %ebp
81004321:	89 e5                	mov    %esp,%ebp
81004323:	57                   	push   %edi
81004324:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004328:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100432b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100432e:	31 d2                	xor    %edx,%edx
81004330:	85 c9                	test   %ecx,%ecx
81004332:	74 79                	je     810043ad <L20>
81004334:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100433a:	74 28                	je     81004364 <L5>
8100433c:	3a 07                	cmp    (%edi),%al
8100433e:	74 6a                	je     810043aa <L15>
81004340:	47                   	inc    %edi
81004341:	49                   	dec    %ecx
81004342:	74 69                	je     810043ad <L20>
81004344:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100434a:	74 18                	je     81004364 <L5>
8100434c:	3a 07                	cmp    (%edi),%al
8100434e:	74 5a                	je     810043aa <L15>
81004350:	47                   	inc    %edi
81004351:	49                   	dec    %ecx
81004352:	74 59                	je     810043ad <L20>
81004354:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100435a:	74 08                	je     81004364 <L5>
8100435c:	3a 07                	cmp    (%edi),%al
8100435e:	74 4a                	je     810043aa <L15>
81004360:	47                   	inc    %edi
81004361:	49                   	dec    %ecx
81004362:	74 49                	je     810043ad <L20>

81004364 <L5>:
81004364:	88 c4                	mov    %al,%ah
81004366:	89 c2                	mov    %eax,%edx
81004368:	c1 e2 10             	shl    $0x10,%edx
8100436b:	09 d0                	or     %edx,%eax
8100436d:	53                   	push   %ebx
8100436e:	66 90                	xchg   %ax,%ax

81004370 <L8>:
81004370:	83 e9 04             	sub    $0x4,%ecx
81004373:	72 1c                	jb     81004391 <L9>
81004375:	8b 17                	mov    (%edi),%edx
81004377:	83 c7 04             	add    $0x4,%edi
8100437a:	31 c2                	xor    %eax,%edx
8100437c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004382:	f7 d2                	not    %edx
81004384:	21 d3                	and    %edx,%ebx
81004386:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100438c:	74 e2                	je     81004370 <L8>
8100438e:	83 ef 04             	sub    $0x4,%edi

81004391 <L9>:
81004391:	5b                   	pop    %ebx
81004392:	31 d2                	xor    %edx,%edx
81004394:	83 c1 04             	add    $0x4,%ecx
81004397:	74 14                	je     810043ad <L20>
81004399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810043a0 <L10>:
810043a0:	3a 07                	cmp    (%edi),%al
810043a2:	74 06                	je     810043aa <L15>
810043a4:	47                   	inc    %edi
810043a5:	49                   	dec    %ecx
810043a6:	75 f8                	jne    810043a0 <L10>
810043a8:	31 ff                	xor    %edi,%edi

810043aa <L15>:
810043aa:	4a                   	dec    %edx
810043ab:	21 fa                	and    %edi,%edx

810043ad <L20>:
810043ad:	89 d0                	mov    %edx,%eax
810043af:	8d 65 fc             	lea    -0x4(%ebp),%esp
810043b2:	5f                   	pop    %edi
810043b3:	c9                   	leave  
810043b4:	c3                   	ret    

810043b5 <memcmp>:
810043b5:	55                   	push   %ebp
810043b6:	89 e5                	mov    %esp,%ebp
810043b8:	83 ec 10             	sub    $0x10,%esp
810043bb:	53                   	push   %ebx
810043bc:	57                   	push   %edi
810043bd:	56                   	push   %esi
810043be:	8b 7d 08             	mov    0x8(%ebp),%edi
810043c1:	8b 75 0c             	mov    0xc(%ebp),%esi
810043c4:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043c7:	fc                   	cld    
810043c8:	31 c0                	xor    %eax,%eax
810043ca:	85 c9                	test   %ecx,%ecx
810043cc:	74 31                	je     810043ff <L4>
810043ce:	89 f8                	mov    %edi,%eax
810043d0:	09 f0                	or     %esi,%eax
810043d2:	a8 03                	test   $0x3,%al
810043d4:	75 1b                	jne    810043f1 <BYTECMP>
810043d6:	89 cb                	mov    %ecx,%ebx
810043d8:	c1 e9 02             	shr    $0x2,%ecx
810043db:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810043dd:	74 0d                	je     810043ec <L5>
810043df:	83 ee 04             	sub    $0x4,%esi
810043e2:	83 ef 04             	sub    $0x4,%edi
810043e5:	b9 04 00 00 00       	mov    $0x4,%ecx
810043ea:	eb 05                	jmp    810043f1 <BYTECMP>

810043ec <L5>:
810043ec:	83 e3 03             	and    $0x3,%ebx
810043ef:	89 d9                	mov    %ebx,%ecx

810043f1 <BYTECMP>:
810043f1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810043f3 <L3>:
810043f3:	31 d2                	xor    %edx,%edx
810043f5:	8a 56 ff             	mov    -0x1(%esi),%dl
810043f8:	31 c0                	xor    %eax,%eax
810043fa:	8a 47 ff             	mov    -0x1(%edi),%al
810043fd:	29 d0                	sub    %edx,%eax

810043ff <L4>:
810043ff:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004402:	5e                   	pop    %esi
81004403:	5f                   	pop    %edi
81004404:	5b                   	pop    %ebx
81004405:	c9                   	leave  
81004406:	c3                   	ret    
81004407:	90                   	nop

81004408 <memcpy>:
81004408:	55                   	push   %ebp
81004409:	89 e5                	mov    %esp,%ebp
8100440b:	56                   	push   %esi
8100440c:	57                   	push   %edi
8100440d:	53                   	push   %ebx
8100440e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004411:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004414:	8b 75 0c             	mov    0xc(%ebp),%esi
81004417:	fc                   	cld    
81004418:	83 f9 08             	cmp    $0x8,%ecx
8100441b:	76 26                	jbe    81004443 <memcpy+0x3b>
8100441d:	89 fa                	mov    %edi,%edx
8100441f:	89 cb                	mov    %ecx,%ebx
81004421:	83 e2 03             	and    $0x3,%edx
81004424:	74 10                	je     81004436 <memcpy+0x2e>
81004426:	b9 04 00 00 00       	mov    $0x4,%ecx
8100442b:	29 d1                	sub    %edx,%ecx
8100442d:	83 e1 03             	and    $0x3,%ecx
81004430:	29 cb                	sub    %ecx,%ebx
81004432:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004434:	89 d9                	mov    %ebx,%ecx
81004436:	c1 e9 02             	shr    $0x2,%ecx
81004439:	8d 76 00             	lea    0x0(%esi),%esi
8100443c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100443e:	89 d9                	mov    %ebx,%ecx
81004440:	83 e1 03             	and    $0x3,%ecx
81004443:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004445:	8b 45 08             	mov    0x8(%ebp),%eax
81004448:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100444b:	5b                   	pop    %ebx
8100444c:	5f                   	pop    %edi
8100444d:	5e                   	pop    %esi
8100444e:	c9                   	leave  
8100444f:	c3                   	ret    

81004450 <memmove>:
81004450:	55                   	push   %ebp
81004451:	89 e5                	mov    %esp,%ebp
81004453:	56                   	push   %esi
81004454:	57                   	push   %edi
81004455:	53                   	push   %ebx
81004456:	8b 7d 08             	mov    0x8(%ebp),%edi
81004459:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100445c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100445f:	fc                   	cld    
81004460:	39 fe                	cmp    %edi,%esi
81004462:	73 43                	jae    810044a7 <memmove+0x57>
81004464:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004468:	39 df                	cmp    %ebx,%edi
8100446a:	77 3b                	ja     810044a7 <memmove+0x57>
8100446c:	01 ce                	add    %ecx,%esi
8100446e:	01 cf                	add    %ecx,%edi
81004470:	fd                   	std    
81004471:	83 f9 08             	cmp    $0x8,%ecx
81004474:	76 2b                	jbe    810044a1 <memmove+0x51>
81004476:	89 fa                	mov    %edi,%edx
81004478:	89 cb                	mov    %ecx,%ebx
8100447a:	83 e2 03             	and    $0x3,%edx
8100447d:	74 0c                	je     8100448b <memmove+0x3b>
8100447f:	89 d1                	mov    %edx,%ecx
81004481:	4e                   	dec    %esi
81004482:	4f                   	dec    %edi
81004483:	29 cb                	sub    %ecx,%ebx
81004485:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004487:	89 d9                	mov    %ebx,%ecx
81004489:	46                   	inc    %esi
8100448a:	47                   	inc    %edi
8100448b:	c1 e9 02             	shr    $0x2,%ecx
8100448e:	83 ee 04             	sub    $0x4,%esi
81004491:	83 ef 04             	sub    $0x4,%edi
81004494:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004496:	83 c6 04             	add    $0x4,%esi
81004499:	83 c7 04             	add    $0x4,%edi
8100449c:	89 d9                	mov    %ebx,%ecx
8100449e:	83 e1 03             	and    $0x3,%ecx
810044a1:	4e                   	dec    %esi
810044a2:	4f                   	dec    %edi
810044a3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044a5:	eb 2a                	jmp    810044d1 <memmove+0x81>
810044a7:	83 f9 08             	cmp    $0x8,%ecx
810044aa:	76 23                	jbe    810044cf <memmove+0x7f>
810044ac:	89 fa                	mov    %edi,%edx
810044ae:	89 cb                	mov    %ecx,%ebx
810044b0:	83 e2 03             	and    $0x3,%edx
810044b3:	74 10                	je     810044c5 <memmove+0x75>
810044b5:	b9 04 00 00 00       	mov    $0x4,%ecx
810044ba:	29 d1                	sub    %edx,%ecx
810044bc:	83 e1 03             	and    $0x3,%ecx
810044bf:	29 cb                	sub    %ecx,%ebx
810044c1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044c3:	89 d9                	mov    %ebx,%ecx
810044c5:	c1 e9 02             	shr    $0x2,%ecx
810044c8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810044ca:	89 d9                	mov    %ebx,%ecx
810044cc:	83 e1 03             	and    $0x3,%ecx
810044cf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044d1:	8b 45 08             	mov    0x8(%ebp),%eax
810044d4:	fc                   	cld    
810044d5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810044d8:	5b                   	pop    %ebx
810044d9:	5f                   	pop    %edi
810044da:	5e                   	pop    %esi
810044db:	c9                   	leave  
810044dc:	c3                   	ret    

810044dd <memset>:
810044dd:	55                   	push   %ebp
810044de:	89 e5                	mov    %esp,%ebp
810044e0:	57                   	push   %edi
810044e1:	8b 7d 08             	mov    0x8(%ebp),%edi
810044e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810044e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810044eb:	fc                   	cld    
810044ec:	83 f9 10             	cmp    $0x10,%ecx
810044ef:	76 69                	jbe    8100455a <memset+0x7d>
810044f1:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044f7:	74 4c                	je     81004545 <memset+0x68>
810044f9:	88 07                	mov    %al,(%edi)
810044fb:	47                   	inc    %edi
810044fc:	49                   	dec    %ecx
810044fd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004503:	74 40                	je     81004545 <memset+0x68>
81004505:	88 07                	mov    %al,(%edi)
81004507:	47                   	inc    %edi
81004508:	49                   	dec    %ecx
81004509:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100450f:	74 34                	je     81004545 <memset+0x68>
81004511:	88 07                	mov    %al,(%edi)
81004513:	47                   	inc    %edi
81004514:	49                   	dec    %ecx
81004515:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100451b:	74 28                	je     81004545 <memset+0x68>
8100451d:	88 07                	mov    %al,(%edi)
8100451f:	47                   	inc    %edi
81004520:	49                   	dec    %ecx
81004521:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004527:	74 1c                	je     81004545 <memset+0x68>
81004529:	88 07                	mov    %al,(%edi)
8100452b:	47                   	inc    %edi
8100452c:	49                   	dec    %ecx
8100452d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004533:	74 10                	je     81004545 <memset+0x68>
81004535:	88 07                	mov    %al,(%edi)
81004537:	47                   	inc    %edi
81004538:	49                   	dec    %ecx
81004539:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100453f:	74 04                	je     81004545 <memset+0x68>
81004541:	88 07                	mov    %al,(%edi)
81004543:	47                   	inc    %edi
81004544:	49                   	dec    %ecx
81004545:	88 c4                	mov    %al,%ah
81004547:	89 c2                	mov    %eax,%edx
81004549:	c1 e2 10             	shl    $0x10,%edx
8100454c:	09 d0                	or     %edx,%eax
8100454e:	89 ca                	mov    %ecx,%edx
81004550:	c1 e9 02             	shr    $0x2,%ecx
81004553:	83 e2 03             	and    $0x3,%edx
81004556:	f3 ab                	rep stos %eax,%es:(%edi)
81004558:	89 d1                	mov    %edx,%ecx
8100455a:	f3 aa                	rep stos %al,%es:(%edi)
8100455c:	8b 45 08             	mov    0x8(%ebp),%eax
8100455f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004562:	5f                   	pop    %edi
81004563:	c9                   	leave  
81004564:	c3                   	ret    

81004565 <__malloc_lock>:
81004565:	55                   	push   %ebp
81004566:	89 e5                	mov    %esp,%ebp
81004568:	90                   	nop
81004569:	5d                   	pop    %ebp
8100456a:	c3                   	ret    

8100456b <__malloc_unlock>:
8100456b:	55                   	push   %ebp
8100456c:	89 e5                	mov    %esp,%ebp
8100456e:	90                   	nop
8100456f:	5d                   	pop    %ebp
81004570:	c3                   	ret    

81004571 <__sprint_r>:
81004571:	55                   	push   %ebp
81004572:	89 e5                	mov    %esp,%ebp
81004574:	56                   	push   %esi
81004575:	53                   	push   %ebx
81004576:	83 ec 10             	sub    $0x10,%esp
81004579:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100457c:	be 00 00 00 00       	mov    $0x0,%esi
81004581:	8b 43 08             	mov    0x8(%ebx),%eax
81004584:	85 c0                	test   %eax,%eax
81004586:	75 11                	jne    81004599 <__sprint_r+0x28>
81004588:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100458f:	b8 00 00 00 00       	mov    $0x0,%eax
81004594:	e9 ad 00 00 00       	jmp    81004646 <__sprint_r+0xd5>
81004599:	8b 45 0c             	mov    0xc(%ebp),%eax
8100459c:	8b 40 64             	mov    0x64(%eax),%eax
8100459f:	25 00 20 00 00       	and    $0x2000,%eax
810045a4:	85 c0                	test   %eax,%eax
810045a6:	74 7a                	je     81004622 <__sprint_r+0xb1>
810045a8:	8b 03                	mov    (%ebx),%eax
810045aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045ad:	eb 6a                	jmp    81004619 <__sprint_r+0xa8>
810045af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045b2:	8b 00                	mov    (%eax),%eax
810045b4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810045b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ba:	8b 40 04             	mov    0x4(%eax),%eax
810045bd:	c1 e8 02             	shr    $0x2,%eax
810045c0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810045c3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810045ca:	eb 33                	jmp    810045ff <__sprint_r+0x8e>
810045cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045cf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810045d6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810045d9:	01 d0                	add    %edx,%eax
810045db:	8b 00                	mov    (%eax),%eax
810045dd:	83 ec 04             	sub    $0x4,%esp
810045e0:	ff 75 0c             	push   0xc(%ebp)
810045e3:	50                   	push   %eax
810045e4:	ff 75 08             	push   0x8(%ebp)
810045e7:	e8 9a 26 00 00       	call   81006c86 <_fputwc_r>
810045ec:	83 c4 10             	add    $0x10,%esp
810045ef:	83 f8 ff             	cmp    $0xffffffff,%eax
810045f2:	75 07                	jne    810045fb <__sprint_r+0x8a>
810045f4:	be ff ff ff ff       	mov    $0xffffffff,%esi
810045f9:	eb 3b                	jmp    81004636 <__sprint_r+0xc5>
810045fb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810045ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004602:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004605:	7c c5                	jl     810045cc <__sprint_r+0x5b>
81004607:	8b 43 08             	mov    0x8(%ebx),%eax
8100460a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100460d:	c1 e2 02             	shl    $0x2,%edx
81004610:	29 d0                	sub    %edx,%eax
81004612:	89 43 08             	mov    %eax,0x8(%ebx)
81004615:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004619:	8b 43 08             	mov    0x8(%ebx),%eax
8100461c:	85 c0                	test   %eax,%eax
8100461e:	75 8f                	jne    810045af <__sprint_r+0x3e>
81004620:	eb 14                	jmp    81004636 <__sprint_r+0xc5>
81004622:	83 ec 04             	sub    $0x4,%esp
81004625:	53                   	push   %ebx
81004626:	ff 75 0c             	push   0xc(%ebp)
81004629:	ff 75 08             	push   0x8(%ebp)
8100462c:	e8 36 dc ff ff       	call   81002267 <__sfvwrite_r>
81004631:	83 c4 10             	add    $0x10,%esp
81004634:	89 c6                	mov    %eax,%esi
81004636:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100463d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004644:	89 f0                	mov    %esi,%eax
81004646:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004649:	5b                   	pop    %ebx
8100464a:	5e                   	pop    %esi
8100464b:	5d                   	pop    %ebp
8100464c:	c3                   	ret    

8100464d <__sfputc_r>:
8100464d:	55                   	push   %ebp
8100464e:	89 e5                	mov    %esp,%ebp
81004650:	83 ec 08             	sub    $0x8,%esp
81004653:	8b 45 10             	mov    0x10(%ebp),%eax
81004656:	8b 40 08             	mov    0x8(%eax),%eax
81004659:	8d 50 ff             	lea    -0x1(%eax),%edx
8100465c:	8b 45 10             	mov    0x10(%ebp),%eax
8100465f:	89 50 08             	mov    %edx,0x8(%eax)
81004662:	8b 45 10             	mov    0x10(%ebp),%eax
81004665:	8b 40 08             	mov    0x8(%eax),%eax
81004668:	85 c0                	test   %eax,%eax
8100466a:	79 17                	jns    81004683 <__sfputc_r+0x36>
8100466c:	8b 45 10             	mov    0x10(%ebp),%eax
8100466f:	8b 50 08             	mov    0x8(%eax),%edx
81004672:	8b 45 10             	mov    0x10(%ebp),%eax
81004675:	8b 40 18             	mov    0x18(%eax),%eax
81004678:	39 c2                	cmp    %eax,%edx
8100467a:	7c 21                	jl     8100469d <__sfputc_r+0x50>
8100467c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100467f:	3c 0a                	cmp    $0xa,%al
81004681:	74 1a                	je     8100469d <__sfputc_r+0x50>
81004683:	8b 45 10             	mov    0x10(%ebp),%eax
81004686:	8b 00                	mov    (%eax),%eax
81004688:	8d 48 01             	lea    0x1(%eax),%ecx
8100468b:	8b 55 10             	mov    0x10(%ebp),%edx
8100468e:	89 0a                	mov    %ecx,(%edx)
81004690:	8b 55 0c             	mov    0xc(%ebp),%edx
81004693:	88 10                	mov    %dl,(%eax)
81004695:	0f b6 00             	movzbl (%eax),%eax
81004698:	0f b6 c0             	movzbl %al,%eax
8100469b:	eb 14                	jmp    810046b1 <__sfputc_r+0x64>
8100469d:	83 ec 04             	sub    $0x4,%esp
810046a0:	ff 75 10             	push   0x10(%ebp)
810046a3:	ff 75 0c             	push   0xc(%ebp)
810046a6:	ff 75 08             	push   0x8(%ebp)
810046a9:	e8 41 1f 00 00       	call   810065ef <__swbuf_r>
810046ae:	83 c4 10             	add    $0x10,%esp
810046b1:	c9                   	leave  
810046b2:	c3                   	ret    

810046b3 <__sfputs_r>:
810046b3:	55                   	push   %ebp
810046b4:	89 e5                	mov    %esp,%ebp
810046b6:	53                   	push   %ebx
810046b7:	83 ec 14             	sub    $0x14,%esp
810046ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810046bd:	8b 40 64             	mov    0x64(%eax),%eax
810046c0:	25 00 20 00 00       	and    $0x2000,%eax
810046c5:	85 c0                	test   %eax,%eax
810046c7:	74 4c                	je     81004715 <__sfputs_r+0x62>
810046c9:	8b 45 10             	mov    0x10(%ebp),%eax
810046cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046cf:	bb 00 00 00 00       	mov    $0x0,%ebx
810046d4:	eb 31                	jmp    81004707 <__sfputs_r+0x54>
810046d6:	89 d8                	mov    %ebx,%eax
810046d8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810046df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046e2:	01 d0                	add    %edx,%eax
810046e4:	8b 00                	mov    (%eax),%eax
810046e6:	83 ec 04             	sub    $0x4,%esp
810046e9:	ff 75 0c             	push   0xc(%ebp)
810046ec:	50                   	push   %eax
810046ed:	ff 75 08             	push   0x8(%ebp)
810046f0:	e8 91 25 00 00       	call   81006c86 <_fputwc_r>
810046f5:	83 c4 10             	add    $0x10,%esp
810046f8:	83 f8 ff             	cmp    $0xffffffff,%eax
810046fb:	75 07                	jne    81004704 <__sfputs_r+0x51>
810046fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004702:	eb 52                	jmp    81004756 <__sfputs_r+0xa3>
81004704:	83 c3 01             	add    $0x1,%ebx
81004707:	8b 45 14             	mov    0x14(%ebp),%eax
8100470a:	c1 e8 02             	shr    $0x2,%eax
8100470d:	89 da                	mov    %ebx,%edx
8100470f:	39 d0                	cmp    %edx,%eax
81004711:	77 c3                	ja     810046d6 <__sfputs_r+0x23>
81004713:	eb 3c                	jmp    81004751 <__sfputs_r+0x9e>
81004715:	bb 00 00 00 00       	mov    $0x0,%ebx
8100471a:	eb 2e                	jmp    8100474a <__sfputs_r+0x97>
8100471c:	89 da                	mov    %ebx,%edx
8100471e:	8b 45 10             	mov    0x10(%ebp),%eax
81004721:	01 d0                	add    %edx,%eax
81004723:	0f b6 00             	movzbl (%eax),%eax
81004726:	0f be c0             	movsbl %al,%eax
81004729:	83 ec 04             	sub    $0x4,%esp
8100472c:	ff 75 0c             	push   0xc(%ebp)
8100472f:	50                   	push   %eax
81004730:	ff 75 08             	push   0x8(%ebp)
81004733:	e8 15 ff ff ff       	call   8100464d <__sfputc_r>
81004738:	83 c4 10             	add    $0x10,%esp
8100473b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100473e:	75 07                	jne    81004747 <__sfputs_r+0x94>
81004740:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004745:	eb 0f                	jmp    81004756 <__sfputs_r+0xa3>
81004747:	83 c3 01             	add    $0x1,%ebx
8100474a:	89 d8                	mov    %ebx,%eax
8100474c:	39 45 14             	cmp    %eax,0x14(%ebp)
8100474f:	77 cb                	ja     8100471c <__sfputs_r+0x69>
81004751:	b8 00 00 00 00       	mov    $0x0,%eax
81004756:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004759:	c9                   	leave  
8100475a:	c3                   	ret    

8100475b <vfiprintf>:
8100475b:	55                   	push   %ebp
8100475c:	89 e5                	mov    %esp,%ebp
8100475e:	83 ec 18             	sub    $0x18,%esp
81004761:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81004766:	ff 75 10             	push   0x10(%ebp)
81004769:	ff 75 0c             	push   0xc(%ebp)
8100476c:	ff 75 08             	push   0x8(%ebp)
8100476f:	50                   	push   %eax
81004770:	e8 0b 00 00 00       	call   81004780 <_vfiprintf_r>
81004775:	83 c4 10             	add    $0x10,%esp
81004778:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100477b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100477e:	c9                   	leave  
8100477f:	c3                   	ret    

81004780 <_vfiprintf_r>:
81004780:	55                   	push   %ebp
81004781:	89 e5                	mov    %esp,%ebp
81004783:	57                   	push   %edi
81004784:	56                   	push   %esi
81004785:	53                   	push   %ebx
81004786:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100478c:	c7 45 e4 b3 46 00 81 	movl   $0x810046b3,-0x1c(%ebp)
81004793:	8b 45 08             	mov    0x8(%ebp),%eax
81004796:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004799:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100479d:	74 18                	je     810047b7 <_vfiprintf_r+0x37>
8100479f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810047a2:	8b 40 38             	mov    0x38(%eax),%eax
810047a5:	85 c0                	test   %eax,%eax
810047a7:	75 0e                	jne    810047b7 <_vfiprintf_r+0x37>
810047a9:	83 ec 0c             	sub    $0xc,%esp
810047ac:	ff 75 e0             	push   -0x20(%ebp)
810047af:	e8 0b cd ff ff       	call   810014bf <__sinit>
810047b4:	83 c4 10             	add    $0x10,%esp
810047b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ba:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810047be:	98                   	cwtl   
810047bf:	83 e0 08             	and    $0x8,%eax
810047c2:	85 c0                	test   %eax,%eax
810047c4:	74 0a                	je     810047d0 <_vfiprintf_r+0x50>
810047c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810047c9:	8b 40 10             	mov    0x10(%eax),%eax
810047cc:	85 c0                	test   %eax,%eax
810047ce:	75 1f                	jne    810047ef <_vfiprintf_r+0x6f>
810047d0:	83 ec 08             	sub    $0x8,%esp
810047d3:	ff 75 0c             	push   0xc(%ebp)
810047d6:	ff 75 08             	push   0x8(%ebp)
810047d9:	e8 8a 1f 00 00       	call   81006768 <__swsetup_r>
810047de:	83 c4 10             	add    $0x10,%esp
810047e1:	85 c0                	test   %eax,%eax
810047e3:	74 0a                	je     810047ef <_vfiprintf_r+0x6f>
810047e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810047ea:	e9 df 02 00 00       	jmp    81004ace <_vfiprintf_r+0x34e>
810047ef:	8b 5d 10             	mov    0x10(%ebp),%ebx
810047f2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810047f9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810047fd:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004801:	8b 45 14             	mov    0x14(%ebp),%eax
81004804:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100480a:	89 de                	mov    %ebx,%esi
8100480c:	eb 03                	jmp    81004811 <_vfiprintf_r+0x91>
8100480e:	83 c3 01             	add    $0x1,%ebx
81004811:	0f b6 03             	movzbl (%ebx),%eax
81004814:	84 c0                	test   %al,%al
81004816:	74 07                	je     8100481f <_vfiprintf_r+0x9f>
81004818:	0f b6 03             	movzbl (%ebx),%eax
8100481b:	3c 25                	cmp    $0x25,%al
8100481d:	75 ef                	jne    8100480e <_vfiprintf_r+0x8e>
8100481f:	89 d8                	mov    %ebx,%eax
81004821:	29 f0                	sub    %esi,%eax
81004823:	85 c0                	test   %eax,%eax
81004825:	74 2b                	je     81004852 <_vfiprintf_r+0xd2>
81004827:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
8100482d:	50                   	push   %eax
8100482e:	56                   	push   %esi
8100482f:	ff 75 0c             	push   0xc(%ebp)
81004832:	ff 75 08             	push   0x8(%ebp)
81004835:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004838:	ff d0                	call   *%eax
8100483a:	83 c4 10             	add    $0x10,%esp
8100483d:	83 f8 ff             	cmp    $0xffffffff,%eax
81004840:	0f 84 68 02 00 00    	je     81004aae <_vfiprintf_r+0x32e>
81004846:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004849:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8100484f:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004852:	0f b6 03             	movzbl (%ebx),%eax
81004855:	84 c0                	test   %al,%al
81004857:	0f 84 54 02 00 00    	je     81004ab1 <_vfiprintf_r+0x331>
8100485d:	83 c3 01             	add    $0x1,%ebx
81004860:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004867:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
8100486e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004875:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100487c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004880:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004887:	c7 45 dc 7c 77 00 81 	movl   $0x8100777c,-0x24(%ebp)
8100488e:	eb 1b                	jmp    810048ab <_vfiprintf_r+0x12b>
81004890:	8b 55 80             	mov    -0x80(%ebp),%edx
81004893:	89 f0                	mov    %esi,%eax
81004895:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004898:	be 01 00 00 00       	mov    $0x1,%esi
8100489d:	89 c1                	mov    %eax,%ecx
8100489f:	d3 e6                	shl    %cl,%esi
810048a1:	89 f0                	mov    %esi,%eax
810048a3:	09 d0                	or     %edx,%eax
810048a5:	89 45 80             	mov    %eax,-0x80(%ebp)
810048a8:	83 c3 01             	add    $0x1,%ebx
810048ab:	0f b6 03             	movzbl (%ebx),%eax
810048ae:	0f be c0             	movsbl %al,%eax
810048b1:	83 ec 04             	sub    $0x4,%esp
810048b4:	6a 05                	push   $0x5
810048b6:	50                   	push   %eax
810048b7:	ff 75 dc             	push   -0x24(%ebp)
810048ba:	e8 61 fa ff ff       	call   81004320 <memchr>
810048bf:	83 c4 10             	add    $0x10,%esp
810048c2:	89 c6                	mov    %eax,%esi
810048c4:	85 f6                	test   %esi,%esi
810048c6:	75 c8                	jne    81004890 <_vfiprintf_r+0x110>
810048c8:	8b 45 80             	mov    -0x80(%ebp),%eax
810048cb:	83 e0 10             	and    $0x10,%eax
810048ce:	85 c0                	test   %eax,%eax
810048d0:	74 04                	je     810048d6 <_vfiprintf_r+0x156>
810048d2:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810048d6:	8b 45 80             	mov    -0x80(%ebp),%eax
810048d9:	83 e0 08             	and    $0x8,%eax
810048dc:	85 c0                	test   %eax,%eax
810048de:	74 04                	je     810048e4 <_vfiprintf_r+0x164>
810048e0:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810048e4:	0f b6 03             	movzbl (%ebx),%eax
810048e7:	3c 2a                	cmp    $0x2a,%al
810048e9:	75 50                	jne    8100493b <_vfiprintf_r+0x1bb>
810048eb:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810048f1:	8d 50 04             	lea    0x4(%eax),%edx
810048f4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810048fa:	8b 00                	mov    (%eax),%eax
810048fc:	89 45 8c             	mov    %eax,-0x74(%ebp)
810048ff:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004902:	85 c0                	test   %eax,%eax
81004904:	79 11                	jns    81004917 <_vfiprintf_r+0x197>
81004906:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004909:	f7 d8                	neg    %eax
8100490b:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100490e:	8b 45 80             	mov    -0x80(%ebp),%eax
81004911:	83 c8 02             	or     $0x2,%eax
81004914:	89 45 80             	mov    %eax,-0x80(%ebp)
81004917:	83 c3 01             	add    $0x1,%ebx
8100491a:	eb 2d                	jmp    81004949 <_vfiprintf_r+0x1c9>
8100491c:	8b 55 8c             	mov    -0x74(%ebp),%edx
8100491f:	89 d0                	mov    %edx,%eax
81004921:	c1 e0 02             	shl    $0x2,%eax
81004924:	01 d0                	add    %edx,%eax
81004926:	01 c0                	add    %eax,%eax
81004928:	89 c2                	mov    %eax,%edx
8100492a:	0f b6 03             	movzbl (%ebx),%eax
8100492d:	0f be c0             	movsbl %al,%eax
81004930:	83 e8 30             	sub    $0x30,%eax
81004933:	01 d0                	add    %edx,%eax
81004935:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004938:	83 c3 01             	add    $0x1,%ebx
8100493b:	0f b6 03             	movzbl (%ebx),%eax
8100493e:	0f be c0             	movsbl %al,%eax
81004941:	83 e8 30             	sub    $0x30,%eax
81004944:	83 f8 09             	cmp    $0x9,%eax
81004947:	76 d3                	jbe    8100491c <_vfiprintf_r+0x19c>
81004949:	0f b6 03             	movzbl (%ebx),%eax
8100494c:	3c 2e                	cmp    $0x2e,%al
8100494e:	75 67                	jne    810049b7 <_vfiprintf_r+0x237>
81004950:	83 c3 01             	add    $0x1,%ebx
81004953:	0f b6 03             	movzbl (%ebx),%eax
81004956:	3c 2a                	cmp    $0x2a,%al
81004958:	75 27                	jne    81004981 <_vfiprintf_r+0x201>
8100495a:	83 c3 01             	add    $0x1,%ebx
8100495d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004963:	8d 50 04             	lea    0x4(%eax),%edx
81004966:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100496c:	8b 00                	mov    (%eax),%eax
8100496e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004971:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004974:	85 c0                	test   %eax,%eax
81004976:	79 3f                	jns    810049b7 <_vfiprintf_r+0x237>
81004978:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100497f:	eb 36                	jmp    810049b7 <_vfiprintf_r+0x237>
81004981:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81004988:	eb 1f                	jmp    810049a9 <_vfiprintf_r+0x229>
8100498a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100498d:	89 d0                	mov    %edx,%eax
8100498f:	c1 e0 02             	shl    $0x2,%eax
81004992:	01 d0                	add    %edx,%eax
81004994:	01 c0                	add    %eax,%eax
81004996:	89 c2                	mov    %eax,%edx
81004998:	0f b6 03             	movzbl (%ebx),%eax
8100499b:	0f be c0             	movsbl %al,%eax
8100499e:	83 e8 30             	sub    $0x30,%eax
810049a1:	01 d0                	add    %edx,%eax
810049a3:	89 45 84             	mov    %eax,-0x7c(%ebp)
810049a6:	83 c3 01             	add    $0x1,%ebx
810049a9:	0f b6 03             	movzbl (%ebx),%eax
810049ac:	0f be c0             	movsbl %al,%eax
810049af:	83 e8 30             	sub    $0x30,%eax
810049b2:	83 f8 09             	cmp    $0x9,%eax
810049b5:	76 d3                	jbe    8100498a <_vfiprintf_r+0x20a>
810049b7:	c7 45 dc 82 77 00 81 	movl   $0x81007782,-0x24(%ebp)
810049be:	0f b6 03             	movzbl (%ebx),%eax
810049c1:	0f be c0             	movsbl %al,%eax
810049c4:	83 ec 04             	sub    $0x4,%esp
810049c7:	6a 03                	push   $0x3
810049c9:	50                   	push   %eax
810049ca:	ff 75 dc             	push   -0x24(%ebp)
810049cd:	e8 4e f9 ff ff       	call   81004320 <memchr>
810049d2:	83 c4 10             	add    $0x10,%esp
810049d5:	89 c6                	mov    %eax,%esi
810049d7:	85 f6                	test   %esi,%esi
810049d9:	74 1b                	je     810049f6 <_vfiprintf_r+0x276>
810049db:	8b 55 80             	mov    -0x80(%ebp),%edx
810049de:	89 f0                	mov    %esi,%eax
810049e0:	2b 45 dc             	sub    -0x24(%ebp),%eax
810049e3:	be 40 00 00 00       	mov    $0x40,%esi
810049e8:	89 c1                	mov    %eax,%ecx
810049ea:	d3 e6                	shl    %cl,%esi
810049ec:	89 f0                	mov    %esi,%eax
810049ee:	09 d0                	or     %edx,%eax
810049f0:	89 45 80             	mov    %eax,-0x80(%ebp)
810049f3:	83 c3 01             	add    $0x1,%ebx
810049f6:	89 d8                	mov    %ebx,%eax
810049f8:	8d 58 01             	lea    0x1(%eax),%ebx
810049fb:	0f b6 00             	movzbl (%eax),%eax
810049fe:	88 45 98             	mov    %al,-0x68(%ebp)
81004a01:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004a05:	0f be c0             	movsbl %al,%eax
81004a08:	83 ec 04             	sub    $0x4,%esp
81004a0b:	6a 06                	push   $0x6
81004a0d:	50                   	push   %eax
81004a0e:	68 86 77 00 81       	push   $0x81007786
81004a13:	e8 08 f9 ff ff       	call   81004320 <memchr>
81004a18:	83 c4 10             	add    $0x10,%esp
81004a1b:	89 c6                	mov    %eax,%esi
81004a1d:	85 f6                	test   %esi,%esi
81004a1f:	74 5a                	je     81004a7b <_vfiprintf_r+0x2fb>
81004a21:	b8 00 00 00 00       	mov    $0x0,%eax
81004a26:	85 c0                	test   %eax,%eax
81004a28:	75 2e                	jne    81004a58 <_vfiprintf_r+0x2d8>
81004a2a:	8b 45 80             	mov    -0x80(%ebp),%eax
81004a2d:	25 00 01 00 00       	and    $0x100,%eax
81004a32:	85 c0                	test   %eax,%eax
81004a34:	74 11                	je     81004a47 <_vfiprintf_r+0x2c7>
81004a36:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a3c:	83 c0 0c             	add    $0xc,%eax
81004a3f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a45:	eb 55                	jmp    81004a9c <_vfiprintf_r+0x31c>
81004a47:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a4d:	83 c0 08             	add    $0x8,%eax
81004a50:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a56:	eb 44                	jmp    81004a9c <_vfiprintf_r+0x31c>
81004a58:	83 ec 0c             	sub    $0xc,%esp
81004a5b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a61:	50                   	push   %eax
81004a62:	ff 75 e4             	push   -0x1c(%ebp)
81004a65:	ff 75 0c             	push   0xc(%ebp)
81004a68:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a6b:	50                   	push   %eax
81004a6c:	ff 75 08             	push   0x8(%ebp)
81004a6f:	e8 8c b5 ff 7e       	call   0 <do_help-0x81000000>
81004a74:	83 c4 20             	add    $0x20,%esp
81004a77:	89 c7                	mov    %eax,%edi
81004a79:	eb 21                	jmp    81004a9c <_vfiprintf_r+0x31c>
81004a7b:	83 ec 0c             	sub    $0xc,%esp
81004a7e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a84:	50                   	push   %eax
81004a85:	ff 75 e4             	push   -0x1c(%ebp)
81004a88:	ff 75 0c             	push   0xc(%ebp)
81004a8b:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a8e:	50                   	push   %eax
81004a8f:	ff 75 08             	push   0x8(%ebp)
81004a92:	e8 da 01 00 00       	call   81004c71 <_printf_i>
81004a97:	83 c4 20             	add    $0x20,%esp
81004a9a:	89 c7                	mov    %eax,%edi
81004a9c:	83 ff ff             	cmp    $0xffffffff,%edi
81004a9f:	74 13                	je     81004ab4 <_vfiprintf_r+0x334>
81004aa1:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004aa4:	01 f8                	add    %edi,%eax
81004aa6:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004aa9:	e9 5c fd ff ff       	jmp    8100480a <_vfiprintf_r+0x8a>
81004aae:	90                   	nop
81004aaf:	eb 04                	jmp    81004ab5 <_vfiprintf_r+0x335>
81004ab1:	90                   	nop
81004ab2:	eb 01                	jmp    81004ab5 <_vfiprintf_r+0x335>
81004ab4:	90                   	nop
81004ab5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ab8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004abc:	98                   	cwtl   
81004abd:	83 e0 40             	and    $0x40,%eax
81004ac0:	85 c0                	test   %eax,%eax
81004ac2:	75 05                	jne    81004ac9 <_vfiprintf_r+0x349>
81004ac4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ac7:	eb 05                	jmp    81004ace <_vfiprintf_r+0x34e>
81004ac9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ace:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004ad1:	5b                   	pop    %ebx
81004ad2:	5e                   	pop    %esi
81004ad3:	5f                   	pop    %edi
81004ad4:	5d                   	pop    %ebp
81004ad5:	c3                   	ret    

81004ad6 <_printf_common>:
81004ad6:	55                   	push   %ebp
81004ad7:	89 e5                	mov    %esp,%ebp
81004ad9:	83 ec 18             	sub    $0x18,%esp
81004adc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004adf:	8b 50 10             	mov    0x10(%eax),%edx
81004ae2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ae5:	8b 40 08             	mov    0x8(%eax),%eax
81004ae8:	39 c2                	cmp    %eax,%edx
81004aea:	0f 4c d0             	cmovl  %eax,%edx
81004aed:	8b 45 10             	mov    0x10(%ebp),%eax
81004af0:	89 10                	mov    %edx,(%eax)
81004af2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004af5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004af9:	84 c0                	test   %al,%al
81004afb:	74 0d                	je     81004b0a <_printf_common+0x34>
81004afd:	8b 45 10             	mov    0x10(%ebp),%eax
81004b00:	8b 00                	mov    (%eax),%eax
81004b02:	8d 50 01             	lea    0x1(%eax),%edx
81004b05:	8b 45 10             	mov    0x10(%ebp),%eax
81004b08:	89 10                	mov    %edx,(%eax)
81004b0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b0d:	8b 00                	mov    (%eax),%eax
81004b0f:	83 e0 20             	and    $0x20,%eax
81004b12:	85 c0                	test   %eax,%eax
81004b14:	74 0d                	je     81004b23 <_printf_common+0x4d>
81004b16:	8b 45 10             	mov    0x10(%ebp),%eax
81004b19:	8b 00                	mov    (%eax),%eax
81004b1b:	8d 50 02             	lea    0x2(%eax),%edx
81004b1e:	8b 45 10             	mov    0x10(%ebp),%eax
81004b21:	89 10                	mov    %edx,(%eax)
81004b23:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b26:	8b 00                	mov    (%eax),%eax
81004b28:	83 e0 06             	and    $0x6,%eax
81004b2b:	85 c0                	test   %eax,%eax
81004b2d:	75 41                	jne    81004b70 <_printf_common+0x9a>
81004b2f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004b36:	eb 24                	jmp    81004b5c <_printf_common+0x86>
81004b38:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b3b:	83 c0 19             	add    $0x19,%eax
81004b3e:	6a 01                	push   $0x1
81004b40:	50                   	push   %eax
81004b41:	ff 75 14             	push   0x14(%ebp)
81004b44:	ff 75 08             	push   0x8(%ebp)
81004b47:	8b 45 18             	mov    0x18(%ebp),%eax
81004b4a:	ff d0                	call   *%eax
81004b4c:	83 c4 10             	add    $0x10,%esp
81004b4f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b52:	0f 84 0b 01 00 00    	je     81004c63 <_printf_common+0x18d>
81004b58:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004b5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b5f:	8b 50 0c             	mov    0xc(%eax),%edx
81004b62:	8b 45 10             	mov    0x10(%ebp),%eax
81004b65:	8b 08                	mov    (%eax),%ecx
81004b67:	89 d0                	mov    %edx,%eax
81004b69:	29 c8                	sub    %ecx,%eax
81004b6b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004b6e:	7c c8                	jl     81004b38 <_printf_common+0x62>
81004b70:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b7a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004b7e:	84 c0                	test   %al,%al
81004b80:	74 04                	je     81004b86 <_printf_common+0xb0>
81004b82:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004b86:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b89:	8b 00                	mov    (%eax),%eax
81004b8b:	83 e0 20             	and    $0x20,%eax
81004b8e:	85 c0                	test   %eax,%eax
81004b90:	74 28                	je     81004bba <_printf_common+0xe4>
81004b92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b95:	8d 50 01             	lea    0x1(%eax),%edx
81004b98:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004b9b:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b9e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ba6:	8d 50 01             	lea    0x1(%eax),%edx
81004ba9:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004bac:	8b 55 0c             	mov    0xc(%ebp),%edx
81004baf:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004bb3:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bb6:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81004bba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bbd:	8b 55 0c             	mov    0xc(%ebp),%edx
81004bc0:	83 c2 43             	add    $0x43,%edx
81004bc3:	50                   	push   %eax
81004bc4:	52                   	push   %edx
81004bc5:	ff 75 14             	push   0x14(%ebp)
81004bc8:	ff 75 08             	push   0x8(%ebp)
81004bcb:	8b 45 18             	mov    0x18(%ebp),%eax
81004bce:	ff d0                	call   *%eax
81004bd0:	83 c4 10             	add    $0x10,%esp
81004bd3:	83 f8 ff             	cmp    $0xffffffff,%eax
81004bd6:	0f 84 8a 00 00 00    	je     81004c66 <_printf_common+0x190>
81004bdc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bdf:	8b 50 0c             	mov    0xc(%eax),%edx
81004be2:	8b 45 10             	mov    0x10(%ebp),%eax
81004be5:	8b 08                	mov    (%eax),%ecx
81004be7:	89 d0                	mov    %edx,%eax
81004be9:	29 c8                	sub    %ecx,%eax
81004beb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bee:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bf1:	8b 00                	mov    (%eax),%eax
81004bf3:	83 e0 06             	and    $0x6,%eax
81004bf6:	83 f8 04             	cmp    $0x4,%eax
81004bf9:	75 06                	jne    81004c01 <_printf_common+0x12b>
81004bfb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004bff:	79 07                	jns    81004c08 <_printf_common+0x132>
81004c01:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004c08:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c0b:	8b 50 08             	mov    0x8(%eax),%edx
81004c0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c11:	8b 40 10             	mov    0x10(%eax),%eax
81004c14:	39 c2                	cmp    %eax,%edx
81004c16:	7e 13                	jle    81004c2b <_printf_common+0x155>
81004c18:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c1b:	8b 50 08             	mov    0x8(%eax),%edx
81004c1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c21:	8b 48 10             	mov    0x10(%eax),%ecx
81004c24:	89 d0                	mov    %edx,%eax
81004c26:	29 c8                	sub    %ecx,%eax
81004c28:	01 45 f4             	add    %eax,-0xc(%ebp)
81004c2b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004c32:	eb 20                	jmp    81004c54 <_printf_common+0x17e>
81004c34:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c37:	83 c0 1a             	add    $0x1a,%eax
81004c3a:	6a 01                	push   $0x1
81004c3c:	50                   	push   %eax
81004c3d:	ff 75 14             	push   0x14(%ebp)
81004c40:	ff 75 08             	push   0x8(%ebp)
81004c43:	8b 45 18             	mov    0x18(%ebp),%eax
81004c46:	ff d0                	call   *%eax
81004c48:	83 c4 10             	add    $0x10,%esp
81004c4b:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c4e:	74 19                	je     81004c69 <_printf_common+0x193>
81004c50:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004c54:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c57:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81004c5a:	7c d8                	jl     81004c34 <_printf_common+0x15e>
81004c5c:	b8 00 00 00 00       	mov    $0x0,%eax
81004c61:	eb 0c                	jmp    81004c6f <_printf_common+0x199>
81004c63:	90                   	nop
81004c64:	eb 04                	jmp    81004c6a <_printf_common+0x194>
81004c66:	90                   	nop
81004c67:	eb 01                	jmp    81004c6a <_printf_common+0x194>
81004c69:	90                   	nop
81004c6a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c6f:	c9                   	leave  
81004c70:	c3                   	ret    

81004c71 <_printf_i>:
81004c71:	55                   	push   %ebp
81004c72:	89 e5                	mov    %esp,%ebp
81004c74:	53                   	push   %ebx
81004c75:	83 ec 24             	sub    $0x24,%esp
81004c78:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c7b:	83 c0 1b             	add    $0x1b,%eax
81004c7e:	83 c0 28             	add    $0x28,%eax
81004c81:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c84:	c7 45 e8 90 77 00 81 	movl   $0x81007790,-0x18(%ebp)
81004c8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c8e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004c92:	0f be c0             	movsbl %al,%eax
81004c95:	85 c0                	test   %eax,%eax
81004c97:	0f 84 00 03 00 00    	je     81004f9d <_printf_i+0x32c>
81004c9d:	85 c0                	test   %eax,%eax
81004c9f:	0f 88 52 03 00 00    	js     81004ff7 <_printf_i+0x386>
81004ca5:	83 f8 78             	cmp    $0x78,%eax
81004ca8:	0f 8f 49 03 00 00    	jg     81004ff7 <_printf_i+0x386>
81004cae:	83 f8 58             	cmp    $0x58,%eax
81004cb1:	0f 8c 40 03 00 00    	jl     81004ff7 <_printf_i+0x386>
81004cb7:	83 e8 58             	sub    $0x58,%eax
81004cba:	83 f8 20             	cmp    $0x20,%eax
81004cbd:	0f 87 34 03 00 00    	ja     81004ff7 <_printf_i+0x386>
81004cc3:	8b 04 85 b4 77 00 81 	mov    -0x7eff884c(,%eax,4),%eax
81004cca:	ff e0                	jmp    *%eax
81004ccc:	8b 45 18             	mov    0x18(%ebp),%eax
81004ccf:	8b 00                	mov    (%eax),%eax
81004cd1:	8d 48 04             	lea    0x4(%eax),%ecx
81004cd4:	8b 55 18             	mov    0x18(%ebp),%edx
81004cd7:	89 0a                	mov    %ecx,(%edx)
81004cd9:	8b 00                	mov    (%eax),%eax
81004cdb:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004cdf:	89 c2                	mov    %eax,%edx
81004ce1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004ce4:	88 10                	mov    %dl,(%eax)
81004ce6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ce9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004cf0:	e9 1c 03 00 00       	jmp    81005011 <_printf_i+0x3a0>
81004cf5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cf8:	8b 00                	mov    (%eax),%eax
81004cfa:	25 80 00 00 00       	and    $0x80,%eax
81004cff:	85 c0                	test   %eax,%eax
81004d01:	74 11                	je     81004d14 <_printf_i+0xa3>
81004d03:	8b 45 18             	mov    0x18(%ebp),%eax
81004d06:	8b 00                	mov    (%eax),%eax
81004d08:	8d 48 04             	lea    0x4(%eax),%ecx
81004d0b:	8b 55 18             	mov    0x18(%ebp),%edx
81004d0e:	89 0a                	mov    %ecx,(%edx)
81004d10:	8b 00                	mov    (%eax),%eax
81004d12:	eb 2d                	jmp    81004d41 <_printf_i+0xd0>
81004d14:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d17:	8b 00                	mov    (%eax),%eax
81004d19:	83 e0 40             	and    $0x40,%eax
81004d1c:	85 c0                	test   %eax,%eax
81004d1e:	74 12                	je     81004d32 <_printf_i+0xc1>
81004d20:	8b 45 18             	mov    0x18(%ebp),%eax
81004d23:	8b 00                	mov    (%eax),%eax
81004d25:	8d 48 04             	lea    0x4(%eax),%ecx
81004d28:	8b 55 18             	mov    0x18(%ebp),%edx
81004d2b:	89 0a                	mov    %ecx,(%edx)
81004d2d:	8b 00                	mov    (%eax),%eax
81004d2f:	98                   	cwtl   
81004d30:	eb 0f                	jmp    81004d41 <_printf_i+0xd0>
81004d32:	8b 45 18             	mov    0x18(%ebp),%eax
81004d35:	8b 00                	mov    (%eax),%eax
81004d37:	8d 48 04             	lea    0x4(%eax),%ecx
81004d3a:	8b 55 18             	mov    0x18(%ebp),%edx
81004d3d:	89 0a                	mov    %ecx,(%edx)
81004d3f:	8b 00                	mov    (%eax),%eax
81004d41:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d47:	85 c0                	test   %eax,%eax
81004d49:	79 0a                	jns    81004d55 <_printf_i+0xe4>
81004d4b:	f7 5d f4             	negl   -0xc(%ebp)
81004d4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d51:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004d55:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81004d5c:	e9 28 01 00 00       	jmp    81004e89 <_printf_i+0x218>
81004d61:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d64:	8b 00                	mov    (%eax),%eax
81004d66:	25 80 00 00 00       	and    $0x80,%eax
81004d6b:	85 c0                	test   %eax,%eax
81004d6d:	74 11                	je     81004d80 <_printf_i+0x10f>
81004d6f:	8b 45 18             	mov    0x18(%ebp),%eax
81004d72:	8b 00                	mov    (%eax),%eax
81004d74:	8d 48 04             	lea    0x4(%eax),%ecx
81004d77:	8b 55 18             	mov    0x18(%ebp),%edx
81004d7a:	89 0a                	mov    %ecx,(%edx)
81004d7c:	8b 00                	mov    (%eax),%eax
81004d7e:	eb 2f                	jmp    81004daf <_printf_i+0x13e>
81004d80:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d83:	8b 00                	mov    (%eax),%eax
81004d85:	83 e0 40             	and    $0x40,%eax
81004d88:	85 c0                	test   %eax,%eax
81004d8a:	74 14                	je     81004da0 <_printf_i+0x12f>
81004d8c:	8b 45 18             	mov    0x18(%ebp),%eax
81004d8f:	8b 00                	mov    (%eax),%eax
81004d91:	8d 48 04             	lea    0x4(%eax),%ecx
81004d94:	8b 55 18             	mov    0x18(%ebp),%edx
81004d97:	89 0a                	mov    %ecx,(%edx)
81004d99:	8b 00                	mov    (%eax),%eax
81004d9b:	0f b7 c0             	movzwl %ax,%eax
81004d9e:	eb 0f                	jmp    81004daf <_printf_i+0x13e>
81004da0:	8b 45 18             	mov    0x18(%ebp),%eax
81004da3:	8b 00                	mov    (%eax),%eax
81004da5:	8d 48 04             	lea    0x4(%eax),%ecx
81004da8:	8b 55 18             	mov    0x18(%ebp),%edx
81004dab:	89 0a                	mov    %ecx,(%edx)
81004dad:	8b 00                	mov    (%eax),%eax
81004daf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004db2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004db5:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004db9:	3c 6f                	cmp    $0x6f,%al
81004dbb:	75 07                	jne    81004dc4 <_printf_i+0x153>
81004dbd:	b8 08 00 00 00       	mov    $0x8,%eax
81004dc2:	eb 05                	jmp    81004dc9 <_printf_i+0x158>
81004dc4:	b8 0a 00 00 00       	mov    $0xa,%eax
81004dc9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dcc:	e9 b1 00 00 00       	jmp    81004e82 <_printf_i+0x211>
81004dd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dd4:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81004dd8:	eb 1d                	jmp    81004df7 <_printf_i+0x186>
81004dda:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ddd:	8b 00                	mov    (%eax),%eax
81004ddf:	83 c8 20             	or     $0x20,%eax
81004de2:	89 c2                	mov    %eax,%edx
81004de4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004de7:	89 10                	mov    %edx,(%eax)
81004de9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dec:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004df0:	c7 45 e8 a1 77 00 81 	movl   $0x810077a1,-0x18(%ebp)
81004df7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dfa:	8b 00                	mov    (%eax),%eax
81004dfc:	25 80 00 00 00       	and    $0x80,%eax
81004e01:	85 c0                	test   %eax,%eax
81004e03:	74 11                	je     81004e16 <_printf_i+0x1a5>
81004e05:	8b 45 18             	mov    0x18(%ebp),%eax
81004e08:	8b 00                	mov    (%eax),%eax
81004e0a:	8d 48 04             	lea    0x4(%eax),%ecx
81004e0d:	8b 55 18             	mov    0x18(%ebp),%edx
81004e10:	89 0a                	mov    %ecx,(%edx)
81004e12:	8b 00                	mov    (%eax),%eax
81004e14:	eb 2f                	jmp    81004e45 <_printf_i+0x1d4>
81004e16:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e19:	8b 00                	mov    (%eax),%eax
81004e1b:	83 e0 40             	and    $0x40,%eax
81004e1e:	85 c0                	test   %eax,%eax
81004e20:	74 14                	je     81004e36 <_printf_i+0x1c5>
81004e22:	8b 45 18             	mov    0x18(%ebp),%eax
81004e25:	8b 00                	mov    (%eax),%eax
81004e27:	8d 48 04             	lea    0x4(%eax),%ecx
81004e2a:	8b 55 18             	mov    0x18(%ebp),%edx
81004e2d:	89 0a                	mov    %ecx,(%edx)
81004e2f:	8b 00                	mov    (%eax),%eax
81004e31:	0f b7 c0             	movzwl %ax,%eax
81004e34:	eb 0f                	jmp    81004e45 <_printf_i+0x1d4>
81004e36:	8b 45 18             	mov    0x18(%ebp),%eax
81004e39:	8b 00                	mov    (%eax),%eax
81004e3b:	8d 48 04             	lea    0x4(%eax),%ecx
81004e3e:	8b 55 18             	mov    0x18(%ebp),%edx
81004e41:	89 0a                	mov    %ecx,(%edx)
81004e43:	8b 00                	mov    (%eax),%eax
81004e45:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e48:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004e4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e52:	8b 00                	mov    (%eax),%eax
81004e54:	83 e0 01             	and    $0x1,%eax
81004e57:	85 c0                	test   %eax,%eax
81004e59:	74 0f                	je     81004e6a <_printf_i+0x1f9>
81004e5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e5e:	8b 00                	mov    (%eax),%eax
81004e60:	83 c8 20             	or     $0x20,%eax
81004e63:	89 c2                	mov    %eax,%edx
81004e65:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e68:	89 10                	mov    %edx,(%eax)
81004e6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e6e:	75 11                	jne    81004e81 <_printf_i+0x210>
81004e70:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e73:	8b 00                	mov    (%eax),%eax
81004e75:	83 e0 df             	and    $0xffffffdf,%eax
81004e78:	89 c2                	mov    %eax,%edx
81004e7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e7d:	89 10                	mov    %edx,(%eax)
81004e7f:	eb 01                	jmp    81004e82 <_printf_i+0x211>
81004e81:	90                   	nop
81004e82:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e85:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004e89:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e8c:	8b 50 04             	mov    0x4(%eax),%edx
81004e8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e92:	89 50 08             	mov    %edx,0x8(%eax)
81004e95:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e98:	8b 40 08             	mov    0x8(%eax),%eax
81004e9b:	85 c0                	test   %eax,%eax
81004e9d:	78 0f                	js     81004eae <_printf_i+0x23d>
81004e9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea2:	8b 00                	mov    (%eax),%eax
81004ea4:	83 e0 fb             	and    $0xfffffffb,%eax
81004ea7:	89 c2                	mov    %eax,%edx
81004ea9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eac:	89 10                	mov    %edx,(%eax)
81004eae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004eb2:	75 0a                	jne    81004ebe <_printf_i+0x24d>
81004eb4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb7:	8b 40 04             	mov    0x4(%eax),%eax
81004eba:	85 c0                	test   %eax,%eax
81004ebc:	74 34                	je     81004ef2 <_printf_i+0x281>
81004ebe:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ec4:	ba 00 00 00 00       	mov    $0x0,%edx
81004ec9:	f7 f1                	div    %ecx
81004ecb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004ece:	01 d0                	add    %edx,%eax
81004ed0:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004ed4:	0f b6 10             	movzbl (%eax),%edx
81004ed7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004eda:	88 10                	mov    %dl,(%eax)
81004edc:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004edf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ee2:	ba 00 00 00 00       	mov    $0x0,%edx
81004ee7:	f7 f3                	div    %ebx
81004ee9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004eec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ef0:	75 cc                	jne    81004ebe <_printf_i+0x24d>
81004ef2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004ef6:	75 26                	jne    81004f1e <_printf_i+0x2ad>
81004ef8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004efb:	8b 00                	mov    (%eax),%eax
81004efd:	83 e0 01             	and    $0x1,%eax
81004f00:	85 c0                	test   %eax,%eax
81004f02:	74 1a                	je     81004f1e <_printf_i+0x2ad>
81004f04:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f07:	8b 50 04             	mov    0x4(%eax),%edx
81004f0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f0d:	8b 40 10             	mov    0x10(%eax),%eax
81004f10:	39 c2                	cmp    %eax,%edx
81004f12:	7f 0a                	jg     81004f1e <_printf_i+0x2ad>
81004f14:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004f18:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f1b:	c6 00 30             	movb   $0x30,(%eax)
81004f1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f21:	83 c0 1b             	add    $0x1b,%eax
81004f24:	83 c0 28             	add    $0x28,%eax
81004f27:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004f2a:	89 c2                	mov    %eax,%edx
81004f2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f2f:	89 50 10             	mov    %edx,0x10(%eax)
81004f32:	e9 e2 00 00 00       	jmp    81005019 <_printf_i+0x3a8>
81004f37:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f3a:	8b 00                	mov    (%eax),%eax
81004f3c:	25 80 00 00 00       	and    $0x80,%eax
81004f41:	85 c0                	test   %eax,%eax
81004f43:	74 19                	je     81004f5e <_printf_i+0x2ed>
81004f45:	8b 45 18             	mov    0x18(%ebp),%eax
81004f48:	8b 00                	mov    (%eax),%eax
81004f4a:	8d 48 04             	lea    0x4(%eax),%ecx
81004f4d:	8b 55 18             	mov    0x18(%ebp),%edx
81004f50:	89 0a                	mov    %ecx,(%edx)
81004f52:	8b 00                	mov    (%eax),%eax
81004f54:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f57:	8b 52 14             	mov    0x14(%edx),%edx
81004f5a:	89 10                	mov    %edx,(%eax)
81004f5c:	eb 3f                	jmp    81004f9d <_printf_i+0x32c>
81004f5e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f61:	8b 00                	mov    (%eax),%eax
81004f63:	83 e0 40             	and    $0x40,%eax
81004f66:	85 c0                	test   %eax,%eax
81004f68:	74 1c                	je     81004f86 <_printf_i+0x315>
81004f6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f6d:	8b 58 14             	mov    0x14(%eax),%ebx
81004f70:	8b 45 18             	mov    0x18(%ebp),%eax
81004f73:	8b 00                	mov    (%eax),%eax
81004f75:	8d 48 04             	lea    0x4(%eax),%ecx
81004f78:	8b 55 18             	mov    0x18(%ebp),%edx
81004f7b:	89 0a                	mov    %ecx,(%edx)
81004f7d:	8b 00                	mov    (%eax),%eax
81004f7f:	89 da                	mov    %ebx,%edx
81004f81:	66 89 10             	mov    %dx,(%eax)
81004f84:	eb 17                	jmp    81004f9d <_printf_i+0x32c>
81004f86:	8b 45 18             	mov    0x18(%ebp),%eax
81004f89:	8b 00                	mov    (%eax),%eax
81004f8b:	8d 48 04             	lea    0x4(%eax),%ecx
81004f8e:	8b 55 18             	mov    0x18(%ebp),%edx
81004f91:	89 0a                	mov    %ecx,(%edx)
81004f93:	8b 00                	mov    (%eax),%eax
81004f95:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f98:	8b 52 14             	mov    0x14(%edx),%edx
81004f9b:	89 10                	mov    %edx,(%eax)
81004f9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fa0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004fa7:	eb 70                	jmp    81005019 <_printf_i+0x3a8>
81004fa9:	8b 45 18             	mov    0x18(%ebp),%eax
81004fac:	8b 00                	mov    (%eax),%eax
81004fae:	8d 48 04             	lea    0x4(%eax),%ecx
81004fb1:	8b 55 18             	mov    0x18(%ebp),%edx
81004fb4:	89 0a                	mov    %ecx,(%edx)
81004fb6:	8b 00                	mov    (%eax),%eax
81004fb8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fbe:	8b 40 04             	mov    0x4(%eax),%eax
81004fc1:	83 ec 04             	sub    $0x4,%esp
81004fc4:	50                   	push   %eax
81004fc5:	6a 00                	push   $0x0
81004fc7:	ff 75 ec             	push   -0x14(%ebp)
81004fca:	e8 51 f3 ff ff       	call   81004320 <memchr>
81004fcf:	83 c4 10             	add    $0x10,%esp
81004fd2:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004fd5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004fd9:	74 0e                	je     81004fe9 <_printf_i+0x378>
81004fdb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004fde:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004fe1:	89 c2                	mov    %eax,%edx
81004fe3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fe6:	89 50 04             	mov    %edx,0x4(%eax)
81004fe9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fec:	8b 50 04             	mov    0x4(%eax),%edx
81004fef:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff2:	89 50 10             	mov    %edx,0x10(%eax)
81004ff5:	eb 1a                	jmp    81005011 <_printf_i+0x3a0>
81004ff7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004ffb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ffe:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005002:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005005:	88 10                	mov    %dl,(%eax)
81005007:	8b 45 0c             	mov    0xc(%ebp),%eax
8100500a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005011:	8b 45 0c             	mov    0xc(%ebp),%eax
81005014:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005018:	90                   	nop
81005019:	83 ec 0c             	sub    $0xc,%esp
8100501c:	ff 75 14             	push   0x14(%ebp)
8100501f:	ff 75 10             	push   0x10(%ebp)
81005022:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005025:	50                   	push   %eax
81005026:	ff 75 0c             	push   0xc(%ebp)
81005029:	ff 75 08             	push   0x8(%ebp)
8100502c:	e8 a5 fa ff ff       	call   81004ad6 <_printf_common>
81005031:	83 c4 20             	add    $0x20,%esp
81005034:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005037:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100503b:	74 72                	je     810050af <_printf_i+0x43e>
8100503d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005040:	8b 40 10             	mov    0x10(%eax),%eax
81005043:	50                   	push   %eax
81005044:	ff 75 ec             	push   -0x14(%ebp)
81005047:	ff 75 10             	push   0x10(%ebp)
8100504a:	ff 75 08             	push   0x8(%ebp)
8100504d:	8b 45 14             	mov    0x14(%ebp),%eax
81005050:	ff d0                	call   *%eax
81005052:	83 c4 10             	add    $0x10,%esp
81005055:	83 f8 ff             	cmp    $0xffffffff,%eax
81005058:	74 58                	je     810050b2 <_printf_i+0x441>
8100505a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100505d:	8b 00                	mov    (%eax),%eax
8100505f:	83 e0 02             	and    $0x2,%eax
81005062:	85 c0                	test   %eax,%eax
81005064:	74 39                	je     8100509f <_printf_i+0x42e>
81005066:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100506d:	eb 20                	jmp    8100508f <_printf_i+0x41e>
8100506f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005072:	83 c0 19             	add    $0x19,%eax
81005075:	6a 01                	push   $0x1
81005077:	50                   	push   %eax
81005078:	ff 75 10             	push   0x10(%ebp)
8100507b:	ff 75 08             	push   0x8(%ebp)
8100507e:	8b 45 14             	mov    0x14(%ebp),%eax
81005081:	ff d0                	call   *%eax
81005083:	83 c4 10             	add    $0x10,%esp
81005086:	83 f8 ff             	cmp    $0xffffffff,%eax
81005089:	74 2a                	je     810050b5 <_printf_i+0x444>
8100508b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100508f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005092:	8b 40 0c             	mov    0xc(%eax),%eax
81005095:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005098:	29 d0                	sub    %edx,%eax
8100509a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100509d:	7c d0                	jl     8100506f <_printf_i+0x3fe>
8100509f:	8b 45 0c             	mov    0xc(%ebp),%eax
810050a2:	8b 50 0c             	mov    0xc(%eax),%edx
810050a5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810050a8:	39 c2                	cmp    %eax,%edx
810050aa:	0f 4d c2             	cmovge %edx,%eax
810050ad:	eb 0c                	jmp    810050bb <_printf_i+0x44a>
810050af:	90                   	nop
810050b0:	eb 04                	jmp    810050b6 <_printf_i+0x445>
810050b2:	90                   	nop
810050b3:	eb 01                	jmp    810050b6 <_printf_i+0x445>
810050b5:	90                   	nop
810050b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810050be:	c9                   	leave  
810050bf:	c3                   	ret    

810050c0 <_open_r>:
810050c0:	55                   	push   %ebp
810050c1:	89 e5                	mov    %esp,%ebp
810050c3:	83 ec 18             	sub    $0x18,%esp
810050c6:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
810050cd:	00 00 00 
810050d0:	83 ec 04             	sub    $0x4,%esp
810050d3:	ff 75 14             	push   0x14(%ebp)
810050d6:	ff 75 10             	push   0x10(%ebp)
810050d9:	ff 75 0c             	push   0xc(%ebp)
810050dc:	e8 a0 b8 ff ff       	call   81000981 <open>
810050e1:	83 c4 10             	add    $0x10,%esp
810050e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050e7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810050eb:	75 14                	jne    81005101 <_open_r+0x41>
810050ed:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
810050f2:	85 c0                	test   %eax,%eax
810050f4:	74 0b                	je     81005101 <_open_r+0x41>
810050f6:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
810050fc:	8b 45 08             	mov    0x8(%ebp),%eax
810050ff:	89 10                	mov    %edx,(%eax)
81005101:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005104:	c9                   	leave  
81005105:	c3                   	ret    

81005106 <_iprintf_r>:
81005106:	55                   	push   %ebp
81005107:	89 e5                	mov    %esp,%ebp
81005109:	83 ec 18             	sub    $0x18,%esp
8100510c:	8d 45 10             	lea    0x10(%ebp),%eax
8100510f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005112:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005115:	8b 45 08             	mov    0x8(%ebp),%eax
81005118:	8b 40 08             	mov    0x8(%eax),%eax
8100511b:	52                   	push   %edx
8100511c:	ff 75 0c             	push   0xc(%ebp)
8100511f:	50                   	push   %eax
81005120:	ff 75 08             	push   0x8(%ebp)
81005123:	e8 58 f6 ff ff       	call   81004780 <_vfiprintf_r>
81005128:	83 c4 10             	add    $0x10,%esp
8100512b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100512e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005131:	c9                   	leave  
81005132:	c3                   	ret    

81005133 <iprintf>:
81005133:	55                   	push   %ebp
81005134:	89 e5                	mov    %esp,%ebp
81005136:	83 ec 18             	sub    $0x18,%esp
81005139:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100513e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005141:	8d 45 0c             	lea    0xc(%ebp),%eax
81005144:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005147:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100514a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100514d:	8b 40 08             	mov    0x8(%eax),%eax
81005150:	52                   	push   %edx
81005151:	ff 75 08             	push   0x8(%ebp)
81005154:	50                   	push   %eax
81005155:	ff 75 f4             	push   -0xc(%ebp)
81005158:	e8 23 f6 ff ff       	call   81004780 <_vfiprintf_r>
8100515d:	83 c4 10             	add    $0x10,%esp
81005160:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005163:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005166:	c9                   	leave  
81005167:	c3                   	ret    

81005168 <_puts_r>:
81005168:	55                   	push   %ebp
81005169:	89 e5                	mov    %esp,%ebp
8100516b:	83 ec 38             	sub    $0x38,%esp
8100516e:	83 ec 0c             	sub    $0xc,%esp
81005171:	ff 75 0c             	push   0xc(%ebp)
81005174:	e8 97 10 00 00       	call   81006210 <strlen>
81005179:	83 c4 10             	add    $0x10,%esp
8100517c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100517f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005182:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005185:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005188:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100518b:	c7 45 d4 38 78 00 81 	movl   $0x81007838,-0x2c(%ebp)
81005192:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005199:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100519c:	83 c0 01             	add    $0x1,%eax
8100519f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810051a2:	8d 45 cc             	lea    -0x34(%ebp),%eax
810051a5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810051a8:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810051af:	8b 45 08             	mov    0x8(%ebp),%eax
810051b2:	8b 40 08             	mov    0x8(%eax),%eax
810051b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810051b8:	8b 45 08             	mov    0x8(%ebp),%eax
810051bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810051be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810051c2:	74 18                	je     810051dc <_puts_r+0x74>
810051c4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810051c7:	8b 40 38             	mov    0x38(%eax),%eax
810051ca:	85 c0                	test   %eax,%eax
810051cc:	75 0e                	jne    810051dc <_puts_r+0x74>
810051ce:	83 ec 0c             	sub    $0xc,%esp
810051d1:	ff 75 ec             	push   -0x14(%ebp)
810051d4:	e8 e6 c2 ff ff       	call   810014bf <__sinit>
810051d9:	83 c4 10             	add    $0x10,%esp
810051dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051df:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051e3:	98                   	cwtl   
810051e4:	25 00 20 00 00       	and    $0x2000,%eax
810051e9:	85 c0                	test   %eax,%eax
810051eb:	75 24                	jne    81005211 <_puts_r+0xa9>
810051ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051f0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051f4:	80 cc 20             	or     $0x20,%ah
810051f7:	89 c2                	mov    %eax,%edx
810051f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051fc:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005200:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005203:	8b 40 64             	mov    0x64(%eax),%eax
81005206:	80 e4 df             	and    $0xdf,%ah
81005209:	89 c2                	mov    %eax,%edx
8100520b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100520e:	89 50 64             	mov    %edx,0x64(%eax)
81005211:	83 ec 04             	sub    $0x4,%esp
81005214:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005217:	50                   	push   %eax
81005218:	ff 75 f0             	push   -0x10(%ebp)
8100521b:	ff 75 08             	push   0x8(%ebp)
8100521e:	e8 44 d0 ff ff       	call   81002267 <__sfvwrite_r>
81005223:	83 c4 10             	add    $0x10,%esp
81005226:	85 c0                	test   %eax,%eax
81005228:	74 07                	je     81005231 <_puts_r+0xc9>
8100522a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100522f:	eb 05                	jmp    81005236 <_puts_r+0xce>
81005231:	b8 0a 00 00 00       	mov    $0xa,%eax
81005236:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005239:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100523c:	c9                   	leave  
8100523d:	c3                   	ret    

8100523e <puts>:
8100523e:	55                   	push   %ebp
8100523f:	89 e5                	mov    %esp,%ebp
81005241:	83 ec 08             	sub    $0x8,%esp
81005244:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81005249:	83 ec 08             	sub    $0x8,%esp
8100524c:	ff 75 08             	push   0x8(%ebp)
8100524f:	50                   	push   %eax
81005250:	e8 13 ff ff ff       	call   81005168 <_puts_r>
81005255:	83 c4 10             	add    $0x10,%esp
81005258:	c9                   	leave  
81005259:	c3                   	ret    

8100525a <_realloc_r>:
8100525a:	55                   	push   %ebp
8100525b:	89 e5                	mov    %esp,%ebp
8100525d:	83 ec 78             	sub    $0x78,%esp
81005260:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005264:	75 16                	jne    8100527c <_realloc_r+0x22>
81005266:	83 ec 08             	sub    $0x8,%esp
81005269:	ff 75 10             	push   0x10(%ebp)
8100526c:	ff 75 08             	push   0x8(%ebp)
8100526f:	e8 85 e8 ff ff       	call   81003af9 <_malloc_r>
81005274:	83 c4 10             	add    $0x10,%esp
81005277:	e9 b6 08 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
8100527c:	83 ec 0c             	sub    $0xc,%esp
8100527f:	ff 75 08             	push   0x8(%ebp)
81005282:	e8 de f2 ff ff       	call   81004565 <__malloc_lock>
81005287:	83 c4 10             	add    $0x10,%esp
8100528a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100528d:	83 e8 08             	sub    $0x8,%eax
81005290:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005293:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005296:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005299:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100529c:	8b 40 04             	mov    0x4(%eax),%eax
8100529f:	83 e0 fc             	and    $0xfffffffc,%eax
810052a2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810052a5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810052a8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810052ab:	8b 45 10             	mov    0x10(%ebp),%eax
810052ae:	83 c0 0b             	add    $0xb,%eax
810052b1:	83 f8 16             	cmp    $0x16,%eax
810052b4:	76 0b                	jbe    810052c1 <_realloc_r+0x67>
810052b6:	8b 45 10             	mov    0x10(%ebp),%eax
810052b9:	83 c0 0b             	add    $0xb,%eax
810052bc:	83 e0 f8             	and    $0xfffffff8,%eax
810052bf:	eb 05                	jmp    810052c6 <_realloc_r+0x6c>
810052c1:	b8 10 00 00 00       	mov    $0x10,%eax
810052c6:	89 45 bc             	mov    %eax,-0x44(%ebp)
810052c9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052cc:	85 c0                	test   %eax,%eax
810052ce:	78 08                	js     810052d8 <_realloc_r+0x7e>
810052d0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052d3:	3b 45 10             	cmp    0x10(%ebp),%eax
810052d6:	73 13                	jae    810052eb <_realloc_r+0x91>
810052d8:	8b 45 08             	mov    0x8(%ebp),%eax
810052db:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810052e1:	b8 00 00 00 00       	mov    $0x0,%eax
810052e6:	e9 47 08 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
810052eb:	8b 55 c0             	mov    -0x40(%ebp),%edx
810052ee:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052f1:	39 c2                	cmp    %eax,%edx
810052f3:	0f 8d 8b 07 00 00    	jge    81005a84 <_realloc_r+0x82a>
810052f9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810052fc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810052ff:	01 d0                	add    %edx,%eax
81005301:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005304:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81005309:	8b 40 08             	mov    0x8(%eax),%eax
8100530c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100530f:	74 1e                	je     8100532f <_realloc_r+0xd5>
81005311:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005314:	8b 40 04             	mov    0x4(%eax),%eax
81005317:	83 e0 fe             	and    $0xfffffffe,%eax
8100531a:	89 c2                	mov    %eax,%edx
8100531c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100531f:	01 d0                	add    %edx,%eax
81005321:	8b 40 04             	mov    0x4(%eax),%eax
81005324:	83 e0 01             	and    $0x1,%eax
81005327:	85 c0                	test   %eax,%eax
81005329:	0f 85 ca 00 00 00    	jne    810053f9 <_realloc_r+0x19f>
8100532f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005332:	8b 40 04             	mov    0x4(%eax),%eax
81005335:	83 e0 fc             	and    $0xfffffffc,%eax
81005338:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100533b:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81005340:	8b 40 08             	mov    0x8(%eax),%eax
81005343:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005346:	75 71                	jne    810053b9 <_realloc_r+0x15f>
81005348:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100534b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100534e:	01 d0                	add    %edx,%eax
81005350:	89 c2                	mov    %eax,%edx
81005352:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005355:	83 c0 10             	add    $0x10,%eax
81005358:	39 c2                	cmp    %eax,%edx
8100535a:	0f 8c a9 00 00 00    	jl     81005409 <_realloc_r+0x1af>
81005360:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005363:	01 45 f0             	add    %eax,-0x10(%ebp)
81005366:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
8100536b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
8100536e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005371:	01 c8                	add    %ecx,%eax
81005373:	89 42 08             	mov    %eax,0x8(%edx)
81005376:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005379:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100537c:	89 c2                	mov    %eax,%edx
8100537e:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81005383:	8b 40 08             	mov    0x8(%eax),%eax
81005386:	83 ca 01             	or     $0x1,%edx
81005389:	89 50 04             	mov    %edx,0x4(%eax)
8100538c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100538f:	8b 40 04             	mov    0x4(%eax),%eax
81005392:	83 e0 01             	and    $0x1,%eax
81005395:	0b 45 bc             	or     -0x44(%ebp),%eax
81005398:	89 c2                	mov    %eax,%edx
8100539a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100539d:	89 50 04             	mov    %edx,0x4(%eax)
810053a0:	83 ec 0c             	sub    $0xc,%esp
810053a3:	ff 75 08             	push   0x8(%ebp)
810053a6:	e8 c0 f1 ff ff       	call   8100456b <__malloc_unlock>
810053ab:	83 c4 10             	add    $0x10,%esp
810053ae:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810053b1:	83 c0 08             	add    $0x8,%eax
810053b4:	e9 79 07 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
810053b9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810053bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810053bf:	01 d0                	add    %edx,%eax
810053c1:	89 c2                	mov    %eax,%edx
810053c3:	8b 45 bc             	mov    -0x44(%ebp),%eax
810053c6:	39 c2                	cmp    %eax,%edx
810053c8:	7c 3f                	jl     81005409 <_realloc_r+0x1af>
810053ca:	8b 45 ec             	mov    -0x14(%ebp),%eax
810053cd:	8b 40 0c             	mov    0xc(%eax),%eax
810053d0:	89 45 b8             	mov    %eax,-0x48(%ebp)
810053d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810053d6:	8b 40 08             	mov    0x8(%eax),%eax
810053d9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810053dc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810053df:	8b 55 b8             	mov    -0x48(%ebp),%edx
810053e2:	89 50 0c             	mov    %edx,0xc(%eax)
810053e5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810053e8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810053eb:	89 50 08             	mov    %edx,0x8(%eax)
810053ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810053f1:	01 45 f0             	add    %eax,-0x10(%ebp)
810053f4:	e9 8c 06 00 00       	jmp    81005a85 <_realloc_r+0x82b>
810053f9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005400:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005407:	eb 01                	jmp    8100540a <_realloc_r+0x1b0>
81005409:	90                   	nop
8100540a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100540d:	8b 40 04             	mov    0x4(%eax),%eax
81005410:	83 e0 01             	and    $0x1,%eax
81005413:	85 c0                	test   %eax,%eax
81005415:	0f 85 d6 04 00 00    	jne    810058f1 <_realloc_r+0x697>
8100541b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100541e:	8b 00                	mov    (%eax),%eax
81005420:	f7 d8                	neg    %eax
81005422:	89 c2                	mov    %eax,%edx
81005424:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005427:	01 d0                	add    %edx,%eax
81005429:	89 45 b0             	mov    %eax,-0x50(%ebp)
8100542c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100542f:	8b 40 04             	mov    0x4(%eax),%eax
81005432:	83 e0 fc             	and    $0xfffffffc,%eax
81005435:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005438:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100543c:	0f 84 4a 03 00 00    	je     8100578c <_realloc_r+0x532>
81005442:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
81005447:	8b 40 08             	mov    0x8(%eax),%eax
8100544a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100544d:	0f 85 b0 01 00 00    	jne    81005603 <_realloc_r+0x3a9>
81005453:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005456:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005459:	01 c2                	add    %eax,%edx
8100545b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100545e:	01 d0                	add    %edx,%eax
81005460:	89 c2                	mov    %eax,%edx
81005462:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005465:	83 c0 10             	add    $0x10,%eax
81005468:	39 c2                	cmp    %eax,%edx
8100546a:	0f 8c 1c 03 00 00    	jl     8100578c <_realloc_r+0x532>
81005470:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005473:	8b 40 0c             	mov    0xc(%eax),%eax
81005476:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005479:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100547c:	8b 40 08             	mov    0x8(%eax),%eax
8100547f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005482:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005485:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005488:	89 50 0c             	mov    %edx,0xc(%eax)
8100548b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100548e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005491:	89 50 08             	mov    %edx,0x8(%eax)
81005494:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005497:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100549a:	8b 55 ac             	mov    -0x54(%ebp),%edx
8100549d:	8b 45 e8             	mov    -0x18(%ebp),%eax
810054a0:	01 d0                	add    %edx,%eax
810054a2:	01 45 f0             	add    %eax,-0x10(%ebp)
810054a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810054a8:	83 c0 08             	add    $0x8,%eax
810054ab:	89 45 a8             	mov    %eax,-0x58(%ebp)
810054ae:	8b 45 c0             	mov    -0x40(%ebp),%eax
810054b1:	83 e8 04             	sub    $0x4,%eax
810054b4:	89 45 a0             	mov    %eax,-0x60(%ebp)
810054b7:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810054bb:	0f 87 de 00 00 00    	ja     8100559f <_realloc_r+0x345>
810054c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810054c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054c7:	8b 45 a8             	mov    -0x58(%ebp),%eax
810054ca:	89 45 e0             	mov    %eax,-0x20(%ebp)
810054cd:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810054d1:	0f 86 90 00 00 00    	jbe    81005567 <_realloc_r+0x30d>
810054d7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810054da:	8d 42 04             	lea    0x4(%edx),%eax
810054dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054e0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054e3:	8d 48 04             	lea    0x4(%eax),%ecx
810054e6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810054e9:	8b 12                	mov    (%edx),%edx
810054eb:	89 10                	mov    %edx,(%eax)
810054ed:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810054f0:	8d 42 04             	lea    0x4(%edx),%eax
810054f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054f6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054f9:	8d 48 04             	lea    0x4(%eax),%ecx
810054fc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810054ff:	8b 12                	mov    (%edx),%edx
81005501:	89 10                	mov    %edx,(%eax)
81005503:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005507:	76 5e                	jbe    81005567 <_realloc_r+0x30d>
81005509:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100550c:	8d 42 04             	lea    0x4(%edx),%eax
8100550f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005512:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005515:	8d 48 04             	lea    0x4(%eax),%ecx
81005518:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100551b:	8b 12                	mov    (%edx),%edx
8100551d:	89 10                	mov    %edx,(%eax)
8100551f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005522:	8d 42 04             	lea    0x4(%edx),%eax
81005525:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005528:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100552b:	8d 48 04             	lea    0x4(%eax),%ecx
8100552e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005531:	8b 12                	mov    (%edx),%edx
81005533:	89 10                	mov    %edx,(%eax)
81005535:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005539:	76 2c                	jbe    81005567 <_realloc_r+0x30d>
8100553b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100553e:	8d 42 04             	lea    0x4(%edx),%eax
81005541:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005544:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005547:	8d 48 04             	lea    0x4(%eax),%ecx
8100554a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100554d:	8b 12                	mov    (%edx),%edx
8100554f:	89 10                	mov    %edx,(%eax)
81005551:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005554:	8d 42 04             	lea    0x4(%edx),%eax
81005557:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100555a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100555d:	8d 48 04             	lea    0x4(%eax),%ecx
81005560:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005563:	8b 12                	mov    (%edx),%edx
81005565:	89 10                	mov    %edx,(%eax)
81005567:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100556a:	8d 42 04             	lea    0x4(%edx),%eax
8100556d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005570:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005573:	8d 48 04             	lea    0x4(%eax),%ecx
81005576:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005579:	8b 12                	mov    (%edx),%edx
8100557b:	89 10                	mov    %edx,(%eax)
8100557d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005580:	8d 42 04             	lea    0x4(%edx),%eax
81005583:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005586:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005589:	8d 48 04             	lea    0x4(%eax),%ecx
8100558c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100558f:	8b 12                	mov    (%edx),%edx
81005591:	89 10                	mov    %edx,(%eax)
81005593:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005596:	8b 10                	mov    (%eax),%edx
81005598:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100559b:	89 10                	mov    %edx,(%eax)
8100559d:	eb 14                	jmp    810055b3 <_realloc_r+0x359>
8100559f:	83 ec 04             	sub    $0x4,%esp
810055a2:	ff 75 a0             	push   -0x60(%ebp)
810055a5:	ff 75 0c             	push   0xc(%ebp)
810055a8:	ff 75 a8             	push   -0x58(%ebp)
810055ab:	e8 a0 ee ff ff       	call   81004450 <memmove>
810055b0:	83 c4 10             	add    $0x10,%esp
810055b3:	ba 40 7f 00 81       	mov    $0x81007f40,%edx
810055b8:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810055bb:	8b 45 bc             	mov    -0x44(%ebp),%eax
810055be:	01 c8                	add    %ecx,%eax
810055c0:	89 42 08             	mov    %eax,0x8(%edx)
810055c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810055c6:	2b 45 bc             	sub    -0x44(%ebp),%eax
810055c9:	89 c2                	mov    %eax,%edx
810055cb:	b8 40 7f 00 81       	mov    $0x81007f40,%eax
810055d0:	8b 40 08             	mov    0x8(%eax),%eax
810055d3:	83 ca 01             	or     $0x1,%edx
810055d6:	89 50 04             	mov    %edx,0x4(%eax)
810055d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055dc:	8b 40 04             	mov    0x4(%eax),%eax
810055df:	83 e0 01             	and    $0x1,%eax
810055e2:	0b 45 bc             	or     -0x44(%ebp),%eax
810055e5:	89 c2                	mov    %eax,%edx
810055e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055ea:	89 50 04             	mov    %edx,0x4(%eax)
810055ed:	83 ec 0c             	sub    $0xc,%esp
810055f0:	ff 75 08             	push   0x8(%ebp)
810055f3:	e8 73 ef ff ff       	call   8100456b <__malloc_unlock>
810055f8:	83 c4 10             	add    $0x10,%esp
810055fb:	8b 45 a8             	mov    -0x58(%ebp),%eax
810055fe:	e9 2f 05 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
81005603:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005606:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005609:	01 c2                	add    %eax,%edx
8100560b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100560e:	01 d0                	add    %edx,%eax
81005610:	89 c2                	mov    %eax,%edx
81005612:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005615:	39 c2                	cmp    %eax,%edx
81005617:	0f 8c 6f 01 00 00    	jl     8100578c <_realloc_r+0x532>
8100561d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005620:	8b 40 0c             	mov    0xc(%eax),%eax
81005623:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005626:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005629:	8b 40 08             	mov    0x8(%eax),%eax
8100562c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100562f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005632:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005635:	89 50 0c             	mov    %edx,0xc(%eax)
81005638:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100563b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100563e:	89 50 08             	mov    %edx,0x8(%eax)
81005641:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005644:	8b 40 0c             	mov    0xc(%eax),%eax
81005647:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100564a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100564d:	8b 40 08             	mov    0x8(%eax),%eax
81005650:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005653:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005656:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005659:	89 50 0c             	mov    %edx,0xc(%eax)
8100565c:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100565f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005662:	89 50 08             	mov    %edx,0x8(%eax)
81005665:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005668:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100566b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100566e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005671:	01 d0                	add    %edx,%eax
81005673:	01 45 f0             	add    %eax,-0x10(%ebp)
81005676:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005679:	83 c0 08             	add    $0x8,%eax
8100567c:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100567f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005682:	83 e8 04             	sub    $0x4,%eax
81005685:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005688:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
8100568c:	0f 87 e1 00 00 00    	ja     81005773 <_realloc_r+0x519>
81005692:	8b 45 0c             	mov    0xc(%ebp),%eax
81005695:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005698:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100569b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100569e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
810056a2:	0f 86 90 00 00 00    	jbe    81005738 <_realloc_r+0x4de>
810056a8:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056ab:	8d 42 04             	lea    0x4(%edx),%eax
810056ae:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056b4:	8d 48 04             	lea    0x4(%eax),%ecx
810056b7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056ba:	8b 12                	mov    (%edx),%edx
810056bc:	89 10                	mov    %edx,(%eax)
810056be:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056c1:	8d 42 04             	lea    0x4(%edx),%eax
810056c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056c7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056ca:	8d 48 04             	lea    0x4(%eax),%ecx
810056cd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056d0:	8b 12                	mov    (%edx),%edx
810056d2:	89 10                	mov    %edx,(%eax)
810056d4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
810056d8:	76 5e                	jbe    81005738 <_realloc_r+0x4de>
810056da:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056dd:	8d 42 04             	lea    0x4(%edx),%eax
810056e0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056e6:	8d 48 04             	lea    0x4(%eax),%ecx
810056e9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056ec:	8b 12                	mov    (%edx),%edx
810056ee:	89 10                	mov    %edx,(%eax)
810056f0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056f3:	8d 42 04             	lea    0x4(%edx),%eax
810056f6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056f9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056fc:	8d 48 04             	lea    0x4(%eax),%ecx
810056ff:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005702:	8b 12                	mov    (%edx),%edx
81005704:	89 10                	mov    %edx,(%eax)
81005706:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
8100570a:	76 2c                	jbe    81005738 <_realloc_r+0x4de>
8100570c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100570f:	8d 42 04             	lea    0x4(%edx),%eax
81005712:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005715:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005718:	8d 48 04             	lea    0x4(%eax),%ecx
8100571b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100571e:	8b 12                	mov    (%edx),%edx
81005720:	89 10                	mov    %edx,(%eax)
81005722:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005725:	8d 42 04             	lea    0x4(%edx),%eax
81005728:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100572b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100572e:	8d 48 04             	lea    0x4(%eax),%ecx
81005731:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005734:	8b 12                	mov    (%edx),%edx
81005736:	89 10                	mov    %edx,(%eax)
81005738:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100573b:	8d 42 04             	lea    0x4(%edx),%eax
8100573e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005741:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005744:	8d 48 04             	lea    0x4(%eax),%ecx
81005747:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100574a:	8b 12                	mov    (%edx),%edx
8100574c:	89 10                	mov    %edx,(%eax)
8100574e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005751:	8d 42 04             	lea    0x4(%edx),%eax
81005754:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005757:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100575a:	8d 48 04             	lea    0x4(%eax),%ecx
8100575d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005760:	8b 12                	mov    (%edx),%edx
81005762:	89 10                	mov    %edx,(%eax)
81005764:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005767:	8b 10                	mov    (%eax),%edx
81005769:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100576c:	89 10                	mov    %edx,(%eax)
8100576e:	e9 12 03 00 00       	jmp    81005a85 <_realloc_r+0x82b>
81005773:	83 ec 04             	sub    $0x4,%esp
81005776:	ff 75 a4             	push   -0x5c(%ebp)
81005779:	ff 75 0c             	push   0xc(%ebp)
8100577c:	ff 75 a8             	push   -0x58(%ebp)
8100577f:	e8 cc ec ff ff       	call   81004450 <memmove>
81005784:	83 c4 10             	add    $0x10,%esp
81005787:	e9 f9 02 00 00       	jmp    81005a85 <_realloc_r+0x82b>
8100578c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005790:	0f 84 5b 01 00 00    	je     810058f1 <_realloc_r+0x697>
81005796:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005799:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100579c:	01 d0                	add    %edx,%eax
8100579e:	89 c2                	mov    %eax,%edx
810057a0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810057a3:	39 c2                	cmp    %eax,%edx
810057a5:	0f 8c 46 01 00 00    	jl     810058f1 <_realloc_r+0x697>
810057ab:	8b 45 b0             	mov    -0x50(%ebp),%eax
810057ae:	8b 40 0c             	mov    0xc(%eax),%eax
810057b1:	89 45 b8             	mov    %eax,-0x48(%ebp)
810057b4:	8b 45 b0             	mov    -0x50(%ebp),%eax
810057b7:	8b 40 08             	mov    0x8(%eax),%eax
810057ba:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810057bd:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810057c0:	8b 55 b8             	mov    -0x48(%ebp),%edx
810057c3:	89 50 0c             	mov    %edx,0xc(%eax)
810057c6:	8b 45 b8             	mov    -0x48(%ebp),%eax
810057c9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810057cc:	89 50 08             	mov    %edx,0x8(%eax)
810057cf:	8b 45 b0             	mov    -0x50(%ebp),%eax
810057d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057d5:	8b 45 ac             	mov    -0x54(%ebp),%eax
810057d8:	01 45 f0             	add    %eax,-0x10(%ebp)
810057db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057de:	83 c0 08             	add    $0x8,%eax
810057e1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810057e4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810057e7:	83 e8 04             	sub    $0x4,%eax
810057ea:	89 45 9c             	mov    %eax,-0x64(%ebp)
810057ed:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810057f1:	0f 87 e1 00 00 00    	ja     810058d8 <_realloc_r+0x67e>
810057f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810057fa:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810057fd:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005800:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005803:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005807:	0f 86 90 00 00 00    	jbe    8100589d <_realloc_r+0x643>
8100580d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005810:	8d 42 04             	lea    0x4(%edx),%eax
81005813:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005816:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005819:	8d 48 04             	lea    0x4(%eax),%ecx
8100581c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100581f:	8b 12                	mov    (%edx),%edx
81005821:	89 10                	mov    %edx,(%eax)
81005823:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005826:	8d 42 04             	lea    0x4(%edx),%eax
81005829:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100582c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100582f:	8d 48 04             	lea    0x4(%eax),%ecx
81005832:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005835:	8b 12                	mov    (%edx),%edx
81005837:	89 10                	mov    %edx,(%eax)
81005839:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100583d:	76 5e                	jbe    8100589d <_realloc_r+0x643>
8100583f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005842:	8d 42 04             	lea    0x4(%edx),%eax
81005845:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005848:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100584b:	8d 48 04             	lea    0x4(%eax),%ecx
8100584e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005851:	8b 12                	mov    (%edx),%edx
81005853:	89 10                	mov    %edx,(%eax)
81005855:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005858:	8d 42 04             	lea    0x4(%edx),%eax
8100585b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100585e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005861:	8d 48 04             	lea    0x4(%eax),%ecx
81005864:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005867:	8b 12                	mov    (%edx),%edx
81005869:	89 10                	mov    %edx,(%eax)
8100586b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100586f:	76 2c                	jbe    8100589d <_realloc_r+0x643>
81005871:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005874:	8d 42 04             	lea    0x4(%edx),%eax
81005877:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100587a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100587d:	8d 48 04             	lea    0x4(%eax),%ecx
81005880:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005883:	8b 12                	mov    (%edx),%edx
81005885:	89 10                	mov    %edx,(%eax)
81005887:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100588a:	8d 42 04             	lea    0x4(%edx),%eax
8100588d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005890:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005893:	8d 48 04             	lea    0x4(%eax),%ecx
81005896:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005899:	8b 12                	mov    (%edx),%edx
8100589b:	89 10                	mov    %edx,(%eax)
8100589d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810058a0:	8d 42 04             	lea    0x4(%edx),%eax
810058a3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810058a6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810058a9:	8d 48 04             	lea    0x4(%eax),%ecx
810058ac:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810058af:	8b 12                	mov    (%edx),%edx
810058b1:	89 10                	mov    %edx,(%eax)
810058b3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810058b6:	8d 42 04             	lea    0x4(%edx),%eax
810058b9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810058bc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810058bf:	8d 48 04             	lea    0x4(%eax),%ecx
810058c2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810058c5:	8b 12                	mov    (%edx),%edx
810058c7:	89 10                	mov    %edx,(%eax)
810058c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810058cc:	8b 10                	mov    (%eax),%edx
810058ce:	8b 45 d0             	mov    -0x30(%ebp),%eax
810058d1:	89 10                	mov    %edx,(%eax)
810058d3:	e9 ad 01 00 00       	jmp    81005a85 <_realloc_r+0x82b>
810058d8:	83 ec 04             	sub    $0x4,%esp
810058db:	ff 75 9c             	push   -0x64(%ebp)
810058de:	ff 75 0c             	push   0xc(%ebp)
810058e1:	ff 75 a8             	push   -0x58(%ebp)
810058e4:	e8 67 eb ff ff       	call   81004450 <memmove>
810058e9:	83 c4 10             	add    $0x10,%esp
810058ec:	e9 94 01 00 00       	jmp    81005a85 <_realloc_r+0x82b>
810058f1:	83 ec 08             	sub    $0x8,%esp
810058f4:	ff 75 10             	push   0x10(%ebp)
810058f7:	ff 75 08             	push   0x8(%ebp)
810058fa:	e8 fa e1 ff ff       	call   81003af9 <_malloc_r>
810058ff:	83 c4 10             	add    $0x10,%esp
81005902:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005905:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005909:	75 18                	jne    81005923 <_realloc_r+0x6c9>
8100590b:	83 ec 0c             	sub    $0xc,%esp
8100590e:	ff 75 08             	push   0x8(%ebp)
81005911:	e8 55 ec ff ff       	call   8100456b <__malloc_unlock>
81005916:	83 c4 10             	add    $0x10,%esp
81005919:	b8 00 00 00 00       	mov    $0x0,%eax
8100591e:	e9 0f 02 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
81005923:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005926:	83 e8 08             	sub    $0x8,%eax
81005929:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100592c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100592f:	8b 40 04             	mov    0x4(%eax),%eax
81005932:	83 e0 fe             	and    $0xfffffffe,%eax
81005935:	89 c2                	mov    %eax,%edx
81005937:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100593a:	01 d0                	add    %edx,%eax
8100593c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100593f:	75 17                	jne    81005958 <_realloc_r+0x6fe>
81005941:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005944:	8b 40 04             	mov    0x4(%eax),%eax
81005947:	83 e0 fc             	and    $0xfffffffc,%eax
8100594a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100594d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005950:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005953:	e9 2d 01 00 00       	jmp    81005a85 <_realloc_r+0x82b>
81005958:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100595b:	83 e8 04             	sub    $0x4,%eax
8100595e:	89 45 98             	mov    %eax,-0x68(%ebp)
81005961:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81005965:	0f 87 de 00 00 00    	ja     81005a49 <_realloc_r+0x7ef>
8100596b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100596e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005971:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005974:	89 45 c8             	mov    %eax,-0x38(%ebp)
81005977:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100597b:	0f 86 90 00 00 00    	jbe    81005a11 <_realloc_r+0x7b7>
81005981:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005984:	8d 42 04             	lea    0x4(%edx),%eax
81005987:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100598a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100598d:	8d 48 04             	lea    0x4(%eax),%ecx
81005990:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005993:	8b 12                	mov    (%edx),%edx
81005995:	89 10                	mov    %edx,(%eax)
81005997:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100599a:	8d 42 04             	lea    0x4(%edx),%eax
8100599d:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059a0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059a3:	8d 48 04             	lea    0x4(%eax),%ecx
810059a6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059a9:	8b 12                	mov    (%edx),%edx
810059ab:	89 10                	mov    %edx,(%eax)
810059ad:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810059b1:	76 5e                	jbe    81005a11 <_realloc_r+0x7b7>
810059b3:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059b6:	8d 42 04             	lea    0x4(%edx),%eax
810059b9:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059bc:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059bf:	8d 48 04             	lea    0x4(%eax),%ecx
810059c2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059c5:	8b 12                	mov    (%edx),%edx
810059c7:	89 10                	mov    %edx,(%eax)
810059c9:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059cc:	8d 42 04             	lea    0x4(%edx),%eax
810059cf:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059d2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059d5:	8d 48 04             	lea    0x4(%eax),%ecx
810059d8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059db:	8b 12                	mov    (%edx),%edx
810059dd:	89 10                	mov    %edx,(%eax)
810059df:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810059e3:	76 2c                	jbe    81005a11 <_realloc_r+0x7b7>
810059e5:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059e8:	8d 42 04             	lea    0x4(%edx),%eax
810059eb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059ee:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059f1:	8d 48 04             	lea    0x4(%eax),%ecx
810059f4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059f7:	8b 12                	mov    (%edx),%edx
810059f9:	89 10                	mov    %edx,(%eax)
810059fb:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059fe:	8d 42 04             	lea    0x4(%edx),%eax
81005a01:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005a04:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a07:	8d 48 04             	lea    0x4(%eax),%ecx
81005a0a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005a0d:	8b 12                	mov    (%edx),%edx
81005a0f:	89 10                	mov    %edx,(%eax)
81005a11:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005a14:	8d 42 04             	lea    0x4(%edx),%eax
81005a17:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005a1a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a1d:	8d 48 04             	lea    0x4(%eax),%ecx
81005a20:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005a23:	8b 12                	mov    (%edx),%edx
81005a25:	89 10                	mov    %edx,(%eax)
81005a27:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005a2a:	8d 42 04             	lea    0x4(%edx),%eax
81005a2d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005a30:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a33:	8d 48 04             	lea    0x4(%eax),%ecx
81005a36:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005a39:	8b 12                	mov    (%edx),%edx
81005a3b:	89 10                	mov    %edx,(%eax)
81005a3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81005a40:	8b 10                	mov    (%eax),%edx
81005a42:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a45:	89 10                	mov    %edx,(%eax)
81005a47:	eb 14                	jmp    81005a5d <_realloc_r+0x803>
81005a49:	83 ec 04             	sub    $0x4,%esp
81005a4c:	ff 75 98             	push   -0x68(%ebp)
81005a4f:	ff 75 0c             	push   0xc(%ebp)
81005a52:	ff 75 a8             	push   -0x58(%ebp)
81005a55:	e8 f6 e9 ff ff       	call   81004450 <memmove>
81005a5a:	83 c4 10             	add    $0x10,%esp
81005a5d:	83 ec 08             	sub    $0x8,%esp
81005a60:	ff 75 0c             	push   0xc(%ebp)
81005a63:	ff 75 08             	push   0x8(%ebp)
81005a66:	e8 6f bd ff ff       	call   810017da <_free_r>
81005a6b:	83 c4 10             	add    $0x10,%esp
81005a6e:	83 ec 0c             	sub    $0xc,%esp
81005a71:	ff 75 08             	push   0x8(%ebp)
81005a74:	e8 f2 ea ff ff       	call   8100456b <__malloc_unlock>
81005a79:	83 c4 10             	add    $0x10,%esp
81005a7c:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005a7f:	e9 ae 00 00 00       	jmp    81005b32 <_realloc_r+0x8d8>
81005a84:	90                   	nop
81005a85:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a88:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a8b:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005a8e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81005a92:	76 5d                	jbe    81005af1 <_realloc_r+0x897>
81005a94:	8b 55 f4             	mov    -0xc(%ebp),%edx
81005a97:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a9a:	01 d0                	add    %edx,%eax
81005a9c:	89 45 90             	mov    %eax,-0x70(%ebp)
81005a9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005aa2:	8b 40 04             	mov    0x4(%eax),%eax
81005aa5:	83 e0 01             	and    $0x1,%eax
81005aa8:	0b 45 bc             	or     -0x44(%ebp),%eax
81005aab:	89 c2                	mov    %eax,%edx
81005aad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ab0:	89 50 04             	mov    %edx,0x4(%eax)
81005ab3:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005ab6:	83 c8 01             	or     $0x1,%eax
81005ab9:	89 c2                	mov    %eax,%edx
81005abb:	8b 45 90             	mov    -0x70(%ebp),%eax
81005abe:	89 50 04             	mov    %edx,0x4(%eax)
81005ac1:	8b 55 90             	mov    -0x70(%ebp),%edx
81005ac4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005ac7:	01 d0                	add    %edx,%eax
81005ac9:	8b 50 04             	mov    0x4(%eax),%edx
81005acc:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81005acf:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005ad2:	01 c8                	add    %ecx,%eax
81005ad4:	83 ca 01             	or     $0x1,%edx
81005ad7:	89 50 04             	mov    %edx,0x4(%eax)
81005ada:	8b 45 90             	mov    -0x70(%ebp),%eax
81005add:	83 c0 08             	add    $0x8,%eax
81005ae0:	83 ec 08             	sub    $0x8,%esp
81005ae3:	50                   	push   %eax
81005ae4:	ff 75 08             	push   0x8(%ebp)
81005ae7:	e8 ee bc ff ff       	call   810017da <_free_r>
81005aec:	83 c4 10             	add    $0x10,%esp
81005aef:	eb 2d                	jmp    81005b1e <_realloc_r+0x8c4>
81005af1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005af4:	8b 40 04             	mov    0x4(%eax),%eax
81005af7:	83 e0 01             	and    $0x1,%eax
81005afa:	0b 45 f0             	or     -0x10(%ebp),%eax
81005afd:	89 c2                	mov    %eax,%edx
81005aff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b02:	89 50 04             	mov    %edx,0x4(%eax)
81005b05:	8b 55 f4             	mov    -0xc(%ebp),%edx
81005b08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b0b:	01 d0                	add    %edx,%eax
81005b0d:	8b 50 04             	mov    0x4(%eax),%edx
81005b10:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005b13:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b16:	01 c8                	add    %ecx,%eax
81005b18:	83 ca 01             	or     $0x1,%edx
81005b1b:	89 50 04             	mov    %edx,0x4(%eax)
81005b1e:	83 ec 0c             	sub    $0xc,%esp
81005b21:	ff 75 08             	push   0x8(%ebp)
81005b24:	e8 42 ea ff ff       	call   8100456b <__malloc_unlock>
81005b29:	83 c4 10             	add    $0x10,%esp
81005b2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b2f:	83 c0 08             	add    $0x8,%eax
81005b32:	c9                   	leave  
81005b33:	c3                   	ret    

81005b34 <cleanup_glue>:
81005b34:	55                   	push   %ebp
81005b35:	89 e5                	mov    %esp,%ebp
81005b37:	83 ec 08             	sub    $0x8,%esp
81005b3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b3d:	8b 00                	mov    (%eax),%eax
81005b3f:	85 c0                	test   %eax,%eax
81005b41:	74 14                	je     81005b57 <cleanup_glue+0x23>
81005b43:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b46:	8b 00                	mov    (%eax),%eax
81005b48:	83 ec 08             	sub    $0x8,%esp
81005b4b:	50                   	push   %eax
81005b4c:	ff 75 08             	push   0x8(%ebp)
81005b4f:	e8 e0 ff ff ff       	call   81005b34 <cleanup_glue>
81005b54:	83 c4 10             	add    $0x10,%esp
81005b57:	83 ec 08             	sub    $0x8,%esp
81005b5a:	ff 75 0c             	push   0xc(%ebp)
81005b5d:	ff 75 08             	push   0x8(%ebp)
81005b60:	e8 75 bc ff ff       	call   810017da <_free_r>
81005b65:	83 c4 10             	add    $0x10,%esp
81005b68:	90                   	nop
81005b69:	c9                   	leave  
81005b6a:	c3                   	ret    

81005b6b <_reclaim_reent>:
81005b6b:	55                   	push   %ebp
81005b6c:	89 e5                	mov    %esp,%ebp
81005b6e:	83 ec 28             	sub    $0x28,%esp
81005b71:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81005b76:	39 45 08             	cmp    %eax,0x8(%ebp)
81005b79:	0f 84 49 01 00 00    	je     81005cc8 <_reclaim_reent+0x15d>
81005b7f:	8b 45 08             	mov    0x8(%ebp),%eax
81005b82:	8b 40 4c             	mov    0x4c(%eax),%eax
81005b85:	85 c0                	test   %eax,%eax
81005b87:	74 64                	je     81005bed <_reclaim_reent+0x82>
81005b89:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005b90:	eb 3e                	jmp    81005bd0 <_reclaim_reent+0x65>
81005b92:	8b 45 08             	mov    0x8(%ebp),%eax
81005b95:	8b 50 4c             	mov    0x4c(%eax),%edx
81005b98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b9b:	c1 e0 02             	shl    $0x2,%eax
81005b9e:	01 d0                	add    %edx,%eax
81005ba0:	8b 00                	mov    (%eax),%eax
81005ba2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005ba5:	eb 1f                	jmp    81005bc6 <_reclaim_reent+0x5b>
81005ba7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005baa:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005bad:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005bb0:	8b 00                	mov    (%eax),%eax
81005bb2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005bb5:	83 ec 08             	sub    $0x8,%esp
81005bb8:	ff 75 e8             	push   -0x18(%ebp)
81005bbb:	ff 75 08             	push   0x8(%ebp)
81005bbe:	e8 17 bc ff ff       	call   810017da <_free_r>
81005bc3:	83 c4 10             	add    $0x10,%esp
81005bc6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005bca:	75 db                	jne    81005ba7 <_reclaim_reent+0x3c>
81005bcc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005bd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bd3:	83 f8 1f             	cmp    $0x1f,%eax
81005bd6:	76 ba                	jbe    81005b92 <_reclaim_reent+0x27>
81005bd8:	8b 45 08             	mov    0x8(%ebp),%eax
81005bdb:	8b 40 4c             	mov    0x4c(%eax),%eax
81005bde:	83 ec 08             	sub    $0x8,%esp
81005be1:	50                   	push   %eax
81005be2:	ff 75 08             	push   0x8(%ebp)
81005be5:	e8 f0 bb ff ff       	call   810017da <_free_r>
81005bea:	83 c4 10             	add    $0x10,%esp
81005bed:	8b 45 08             	mov    0x8(%ebp),%eax
81005bf0:	8b 40 40             	mov    0x40(%eax),%eax
81005bf3:	85 c0                	test   %eax,%eax
81005bf5:	74 15                	je     81005c0c <_reclaim_reent+0xa1>
81005bf7:	8b 45 08             	mov    0x8(%ebp),%eax
81005bfa:	8b 40 40             	mov    0x40(%eax),%eax
81005bfd:	83 ec 08             	sub    $0x8,%esp
81005c00:	50                   	push   %eax
81005c01:	ff 75 08             	push   0x8(%ebp)
81005c04:	e8 d1 bb ff ff       	call   810017da <_free_r>
81005c09:	83 c4 10             	add    $0x10,%esp
81005c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81005c0f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005c15:	85 c0                	test   %eax,%eax
81005c17:	74 50                	je     81005c69 <_reclaim_reent+0xfe>
81005c19:	8b 45 08             	mov    0x8(%ebp),%eax
81005c1c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005c22:	8b 55 08             	mov    0x8(%ebp),%edx
81005c25:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81005c2b:	39 d0                	cmp    %edx,%eax
81005c2d:	74 3a                	je     81005c69 <_reclaim_reent+0xfe>
81005c2f:	8b 45 08             	mov    0x8(%ebp),%eax
81005c32:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005c38:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c3b:	eb 1f                	jmp    81005c5c <_reclaim_reent+0xf1>
81005c3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c40:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c43:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c46:	8b 00                	mov    (%eax),%eax
81005c48:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c4b:	83 ec 08             	sub    $0x8,%esp
81005c4e:	ff 75 e4             	push   -0x1c(%ebp)
81005c51:	ff 75 08             	push   0x8(%ebp)
81005c54:	e8 81 bb ff ff       	call   810017da <_free_r>
81005c59:	83 c4 10             	add    $0x10,%esp
81005c5c:	8b 45 08             	mov    0x8(%ebp),%eax
81005c5f:	05 4c 01 00 00       	add    $0x14c,%eax
81005c64:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005c67:	75 d4                	jne    81005c3d <_reclaim_reent+0xd2>
81005c69:	8b 45 08             	mov    0x8(%ebp),%eax
81005c6c:	8b 40 54             	mov    0x54(%eax),%eax
81005c6f:	85 c0                	test   %eax,%eax
81005c71:	74 15                	je     81005c88 <_reclaim_reent+0x11d>
81005c73:	8b 45 08             	mov    0x8(%ebp),%eax
81005c76:	8b 40 54             	mov    0x54(%eax),%eax
81005c79:	83 ec 08             	sub    $0x8,%esp
81005c7c:	50                   	push   %eax
81005c7d:	ff 75 08             	push   0x8(%ebp)
81005c80:	e8 55 bb ff ff       	call   810017da <_free_r>
81005c85:	83 c4 10             	add    $0x10,%esp
81005c88:	8b 45 08             	mov    0x8(%ebp),%eax
81005c8b:	8b 40 38             	mov    0x38(%eax),%eax
81005c8e:	85 c0                	test   %eax,%eax
81005c90:	74 36                	je     81005cc8 <_reclaim_reent+0x15d>
81005c92:	8b 45 08             	mov    0x8(%ebp),%eax
81005c95:	8b 40 3c             	mov    0x3c(%eax),%eax
81005c98:	83 ec 0c             	sub    $0xc,%esp
81005c9b:	ff 75 08             	push   0x8(%ebp)
81005c9e:	ff d0                	call   *%eax
81005ca0:	83 c4 10             	add    $0x10,%esp
81005ca3:	8b 45 08             	mov    0x8(%ebp),%eax
81005ca6:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005cac:	85 c0                	test   %eax,%eax
81005cae:	74 18                	je     81005cc8 <_reclaim_reent+0x15d>
81005cb0:	8b 45 08             	mov    0x8(%ebp),%eax
81005cb3:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005cb9:	83 ec 08             	sub    $0x8,%esp
81005cbc:	50                   	push   %eax
81005cbd:	ff 75 08             	push   0x8(%ebp)
81005cc0:	e8 6f fe ff ff       	call   81005b34 <cleanup_glue>
81005cc5:	83 c4 10             	add    $0x10,%esp
81005cc8:	90                   	nop
81005cc9:	c9                   	leave  
81005cca:	c3                   	ret    

81005ccb <lflush>:
81005ccb:	55                   	push   %ebp
81005ccc:	89 e5                	mov    %esp,%ebp
81005cce:	83 ec 08             	sub    $0x8,%esp
81005cd1:	8b 45 08             	mov    0x8(%ebp),%eax
81005cd4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005cd8:	98                   	cwtl   
81005cd9:	83 e0 09             	and    $0x9,%eax
81005cdc:	83 f8 09             	cmp    $0x9,%eax
81005cdf:	75 10                	jne    81005cf1 <lflush+0x26>
81005ce1:	83 ec 0c             	sub    $0xc,%esp
81005ce4:	ff 75 08             	push   0x8(%ebp)
81005ce7:	e8 28 b3 ff ff       	call   81001014 <fflush>
81005cec:	83 c4 10             	add    $0x10,%esp
81005cef:	eb 05                	jmp    81005cf6 <lflush+0x2b>
81005cf1:	b8 00 00 00 00       	mov    $0x0,%eax
81005cf6:	c9                   	leave  
81005cf7:	c3                   	ret    

81005cf8 <__srefill_r>:
81005cf8:	55                   	push   %ebp
81005cf9:	89 e5                	mov    %esp,%ebp
81005cfb:	56                   	push   %esi
81005cfc:	53                   	push   %ebx
81005cfd:	83 ec 10             	sub    $0x10,%esp
81005d00:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005d03:	8b 45 08             	mov    0x8(%ebp),%eax
81005d06:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d09:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005d0d:	74 18                	je     81005d27 <__srefill_r+0x2f>
81005d0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d12:	8b 40 38             	mov    0x38(%eax),%eax
81005d15:	85 c0                	test   %eax,%eax
81005d17:	75 0e                	jne    81005d27 <__srefill_r+0x2f>
81005d19:	83 ec 0c             	sub    $0xc,%esp
81005d1c:	ff 75 f4             	push   -0xc(%ebp)
81005d1f:	e8 9b b7 ff ff       	call   810014bf <__sinit>
81005d24:	83 c4 10             	add    $0x10,%esp
81005d27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d2b:	98                   	cwtl   
81005d2c:	25 00 20 00 00       	and    $0x2000,%eax
81005d31:	85 c0                	test   %eax,%eax
81005d33:	75 14                	jne    81005d49 <__srefill_r+0x51>
81005d35:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d39:	80 cc 20             	or     $0x20,%ah
81005d3c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d40:	8b 43 64             	mov    0x64(%ebx),%eax
81005d43:	80 e4 df             	and    $0xdf,%ah
81005d46:	89 43 64             	mov    %eax,0x64(%ebx)
81005d49:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005d50:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d54:	98                   	cwtl   
81005d55:	83 e0 20             	and    $0x20,%eax
81005d58:	85 c0                	test   %eax,%eax
81005d5a:	74 0a                	je     81005d66 <__srefill_r+0x6e>
81005d5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d61:	e9 8c 01 00 00       	jmp    81005ef2 <__srefill_r+0x1fa>
81005d66:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d6a:	98                   	cwtl   
81005d6b:	83 e0 04             	and    $0x4,%eax
81005d6e:	85 c0                	test   %eax,%eax
81005d70:	75 79                	jne    81005deb <__srefill_r+0xf3>
81005d72:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d76:	98                   	cwtl   
81005d77:	83 e0 10             	and    $0x10,%eax
81005d7a:	85 c0                	test   %eax,%eax
81005d7c:	75 1e                	jne    81005d9c <__srefill_r+0xa4>
81005d7e:	8b 45 08             	mov    0x8(%ebp),%eax
81005d81:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005d87:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d8b:	83 c8 40             	or     $0x40,%eax
81005d8e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d97:	e9 56 01 00 00       	jmp    81005ef2 <__srefill_r+0x1fa>
81005d9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005da0:	98                   	cwtl   
81005da1:	83 e0 08             	and    $0x8,%eax
81005da4:	85 c0                	test   %eax,%eax
81005da6:	74 36                	je     81005dde <__srefill_r+0xe6>
81005da8:	83 ec 08             	sub    $0x8,%esp
81005dab:	53                   	push   %ebx
81005dac:	ff 75 08             	push   0x8(%ebp)
81005daf:	e8 08 b2 ff ff       	call   81000fbc <_fflush_r>
81005db4:	83 c4 10             	add    $0x10,%esp
81005db7:	85 c0                	test   %eax,%eax
81005db9:	74 0a                	je     81005dc5 <__srefill_r+0xcd>
81005dbb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005dc0:	e9 2d 01 00 00       	jmp    81005ef2 <__srefill_r+0x1fa>
81005dc5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005dc9:	83 e0 f7             	and    $0xfffffff7,%eax
81005dcc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005dd0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005dd7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005dde:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005de2:	83 c8 04             	or     $0x4,%eax
81005de5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005de9:	eb 46                	jmp    81005e31 <__srefill_r+0x139>
81005deb:	8b 43 30             	mov    0x30(%ebx),%eax
81005dee:	85 c0                	test   %eax,%eax
81005df0:	74 3f                	je     81005e31 <__srefill_r+0x139>
81005df2:	8b 53 30             	mov    0x30(%ebx),%edx
81005df5:	8d 43 40             	lea    0x40(%ebx),%eax
81005df8:	39 c2                	cmp    %eax,%edx
81005dfa:	74 12                	je     81005e0e <__srefill_r+0x116>
81005dfc:	8b 43 30             	mov    0x30(%ebx),%eax
81005dff:	83 ec 08             	sub    $0x8,%esp
81005e02:	50                   	push   %eax
81005e03:	ff 75 08             	push   0x8(%ebp)
81005e06:	e8 cf b9 ff ff       	call   810017da <_free_r>
81005e0b:	83 c4 10             	add    $0x10,%esp
81005e0e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005e15:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005e18:	89 43 04             	mov    %eax,0x4(%ebx)
81005e1b:	8b 43 04             	mov    0x4(%ebx),%eax
81005e1e:	85 c0                	test   %eax,%eax
81005e20:	74 0f                	je     81005e31 <__srefill_r+0x139>
81005e22:	8b 43 38             	mov    0x38(%ebx),%eax
81005e25:	89 03                	mov    %eax,(%ebx)
81005e27:	b8 00 00 00 00       	mov    $0x0,%eax
81005e2c:	e9 c1 00 00 00       	jmp    81005ef2 <__srefill_r+0x1fa>
81005e31:	8b 43 10             	mov    0x10(%ebx),%eax
81005e34:	85 c0                	test   %eax,%eax
81005e36:	75 0f                	jne    81005e47 <__srefill_r+0x14f>
81005e38:	83 ec 08             	sub    $0x8,%esp
81005e3b:	53                   	push   %ebx
81005e3c:	ff 75 08             	push   0x8(%ebp)
81005e3f:	e8 69 d8 ff ff       	call   810036ad <__smakebuf_r>
81005e44:	83 c4 10             	add    $0x10,%esp
81005e47:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e4b:	98                   	cwtl   
81005e4c:	83 e0 03             	and    $0x3,%eax
81005e4f:	85 c0                	test   %eax,%eax
81005e51:	74 48                	je     81005e9b <__srefill_r+0x1a3>
81005e53:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e57:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005e5b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81005e61:	a1 78 77 00 81       	mov    0x81007778,%eax
81005e66:	83 ec 08             	sub    $0x8,%esp
81005e69:	68 cb 5c 00 81       	push   $0x81005ccb
81005e6e:	50                   	push   %eax
81005e6f:	e8 91 c8 ff ff       	call   81002705 <_fwalk>
81005e74:	83 c4 10             	add    $0x10,%esp
81005e77:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81005e7b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005e7f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e83:	98                   	cwtl   
81005e84:	83 e0 09             	and    $0x9,%eax
81005e87:	83 f8 09             	cmp    $0x9,%eax
81005e8a:	75 0f                	jne    81005e9b <__srefill_r+0x1a3>
81005e8c:	83 ec 08             	sub    $0x8,%esp
81005e8f:	53                   	push   %ebx
81005e90:	ff 75 08             	push   0x8(%ebp)
81005e93:	e8 fe ae ff ff       	call   81000d96 <__sflush_r>
81005e98:	83 c4 10             	add    $0x10,%esp
81005e9b:	8b 43 10             	mov    0x10(%ebx),%eax
81005e9e:	89 03                	mov    %eax,(%ebx)
81005ea0:	8b 43 20             	mov    0x20(%ebx),%eax
81005ea3:	8b 73 14             	mov    0x14(%ebx),%esi
81005ea6:	8b 0b                	mov    (%ebx),%ecx
81005ea8:	8b 53 1c             	mov    0x1c(%ebx),%edx
81005eab:	56                   	push   %esi
81005eac:	51                   	push   %ecx
81005ead:	52                   	push   %edx
81005eae:	ff 75 08             	push   0x8(%ebp)
81005eb1:	ff d0                	call   *%eax
81005eb3:	83 c4 10             	add    $0x10,%esp
81005eb6:	89 43 04             	mov    %eax,0x4(%ebx)
81005eb9:	8b 43 04             	mov    0x4(%ebx),%eax
81005ebc:	85 c0                	test   %eax,%eax
81005ebe:	7f 2d                	jg     81005eed <__srefill_r+0x1f5>
81005ec0:	8b 43 04             	mov    0x4(%ebx),%eax
81005ec3:	85 c0                	test   %eax,%eax
81005ec5:	75 0d                	jne    81005ed4 <__srefill_r+0x1dc>
81005ec7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ecb:	83 c8 20             	or     $0x20,%eax
81005ece:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ed2:	eb 12                	jmp    81005ee6 <__srefill_r+0x1ee>
81005ed4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005edb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005edf:	83 c8 40             	or     $0x40,%eax
81005ee2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ee6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005eeb:	eb 05                	jmp    81005ef2 <__srefill_r+0x1fa>
81005eed:	b8 00 00 00 00       	mov    $0x0,%eax
81005ef2:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005ef5:	5b                   	pop    %ebx
81005ef6:	5e                   	pop    %esi
81005ef7:	5d                   	pop    %ebp
81005ef8:	c3                   	ret    

81005ef9 <_sbrk_r>:
81005ef9:	55                   	push   %ebp
81005efa:	89 e5                	mov    %esp,%ebp
81005efc:	83 ec 18             	sub    $0x18,%esp
81005eff:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
81005f06:	00 00 00 
81005f09:	83 ec 0c             	sub    $0xc,%esp
81005f0c:	ff 75 0c             	push   0xc(%ebp)
81005f0f:	e8 84 ab ff ff       	call   81000a98 <sbrk>
81005f14:	83 c4 10             	add    $0x10,%esp
81005f17:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f1a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005f1e:	75 14                	jne    81005f34 <_sbrk_r+0x3b>
81005f20:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81005f25:	85 c0                	test   %eax,%eax
81005f27:	74 0b                	je     81005f34 <_sbrk_r+0x3b>
81005f29:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
81005f2f:	8b 45 08             	mov    0x8(%ebp),%eax
81005f32:	89 10                	mov    %edx,(%eax)
81005f34:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f37:	c9                   	leave  
81005f38:	c3                   	ret    

81005f39 <__sread>:
81005f39:	55                   	push   %ebp
81005f3a:	89 e5                	mov    %esp,%ebp
81005f3c:	56                   	push   %esi
81005f3d:	53                   	push   %ebx
81005f3e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005f41:	8b 55 14             	mov    0x14(%ebp),%edx
81005f44:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005f48:	98                   	cwtl   
81005f49:	52                   	push   %edx
81005f4a:	ff 75 10             	push   0x10(%ebp)
81005f4d:	50                   	push   %eax
81005f4e:	ff 75 08             	push   0x8(%ebp)
81005f51:	e8 df 11 00 00       	call   81007135 <_read_r>
81005f56:	83 c4 10             	add    $0x10,%esp
81005f59:	89 c6                	mov    %eax,%esi
81005f5b:	85 f6                	test   %esi,%esi
81005f5d:	78 0a                	js     81005f69 <__sread+0x30>
81005f5f:	8b 43 50             	mov    0x50(%ebx),%eax
81005f62:	01 f0                	add    %esi,%eax
81005f64:	89 43 50             	mov    %eax,0x50(%ebx)
81005f67:	eb 0b                	jmp    81005f74 <__sread+0x3b>
81005f69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f6d:	80 e4 ef             	and    $0xef,%ah
81005f70:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005f74:	89 f0                	mov    %esi,%eax
81005f76:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005f79:	5b                   	pop    %ebx
81005f7a:	5e                   	pop    %esi
81005f7b:	5d                   	pop    %ebp
81005f7c:	c3                   	ret    

81005f7d <__seofread>:
81005f7d:	55                   	push   %ebp
81005f7e:	89 e5                	mov    %esp,%ebp
81005f80:	b8 00 00 00 00       	mov    $0x0,%eax
81005f85:	5d                   	pop    %ebp
81005f86:	c3                   	ret    

81005f87 <__swrite>:
81005f87:	55                   	push   %ebp
81005f88:	89 e5                	mov    %esp,%ebp
81005f8a:	53                   	push   %ebx
81005f8b:	83 ec 14             	sub    $0x14,%esp
81005f8e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005f91:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f95:	98                   	cwtl   
81005f96:	25 00 01 00 00       	and    $0x100,%eax
81005f9b:	85 c0                	test   %eax,%eax
81005f9d:	74 15                	je     81005fb4 <__swrite+0x2d>
81005f9f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005fa3:	98                   	cwtl   
81005fa4:	6a 02                	push   $0x2
81005fa6:	6a 00                	push   $0x0
81005fa8:	50                   	push   %eax
81005fa9:	ff 75 08             	push   0x8(%ebp)
81005fac:	e8 a4 0f 00 00       	call   81006f55 <_lseek_r>
81005fb1:	83 c4 10             	add    $0x10,%esp
81005fb4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005fb8:	80 e4 ef             	and    $0xef,%ah
81005fbb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005fbf:	8b 55 14             	mov    0x14(%ebp),%edx
81005fc2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005fc6:	98                   	cwtl   
81005fc7:	52                   	push   %edx
81005fc8:	ff 75 10             	push   0x10(%ebp)
81005fcb:	50                   	push   %eax
81005fcc:	ff 75 08             	push   0x8(%ebp)
81005fcf:	e8 4e 07 00 00       	call   81006722 <_write_r>
81005fd4:	83 c4 10             	add    $0x10,%esp
81005fd7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fda:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fdd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005fe0:	c9                   	leave  
81005fe1:	c3                   	ret    

81005fe2 <__sseek>:
81005fe2:	55                   	push   %ebp
81005fe3:	89 e5                	mov    %esp,%ebp
81005fe5:	56                   	push   %esi
81005fe6:	53                   	push   %ebx
81005fe7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005fea:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005fee:	98                   	cwtl   
81005fef:	ff 75 14             	push   0x14(%ebp)
81005ff2:	ff 75 10             	push   0x10(%ebp)
81005ff5:	50                   	push   %eax
81005ff6:	ff 75 08             	push   0x8(%ebp)
81005ff9:	e8 57 0f 00 00       	call   81006f55 <_lseek_r>
81005ffe:	83 c4 10             	add    $0x10,%esp
81006001:	89 c6                	mov    %eax,%esi
81006003:	83 fe ff             	cmp    $0xffffffff,%esi
81006006:	75 0d                	jne    81006015 <__sseek+0x33>
81006008:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100600c:	80 e4 ef             	and    $0xef,%ah
8100600f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006013:	eb 0e                	jmp    81006023 <__sseek+0x41>
81006015:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006019:	80 cc 10             	or     $0x10,%ah
8100601c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006020:	89 73 50             	mov    %esi,0x50(%ebx)
81006023:	89 f0                	mov    %esi,%eax
81006025:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006028:	5b                   	pop    %ebx
81006029:	5e                   	pop    %esi
8100602a:	5d                   	pop    %ebp
8100602b:	c3                   	ret    

8100602c <__sclose>:
8100602c:	55                   	push   %ebp
8100602d:	89 e5                	mov    %esp,%ebp
8100602f:	83 ec 18             	sub    $0x18,%esp
81006032:	8b 45 0c             	mov    0xc(%ebp),%eax
81006035:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006038:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100603b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100603f:	98                   	cwtl   
81006040:	83 ec 08             	sub    $0x8,%esp
81006043:	50                   	push   %eax
81006044:	ff 75 08             	push   0x8(%ebp)
81006047:	e8 8c 09 00 00       	call   810069d8 <_close_r>
8100604c:	83 c4 10             	add    $0x10,%esp
8100604f:	c9                   	leave  
81006050:	c3                   	ret    
81006051:	66 90                	xchg   %ax,%ax
81006053:	66 90                	xchg   %ax,%ax
81006055:	66 90                	xchg   %ax,%ax
81006057:	66 90                	xchg   %ax,%ax
81006059:	66 90                	xchg   %ax,%ax
8100605b:	66 90                	xchg   %ax,%ax
8100605d:	66 90                	xchg   %ax,%ax
8100605f:	90                   	nop

81006060 <strchr>:
81006060:	55                   	push   %ebp
81006061:	89 e5                	mov    %esp,%ebp
81006063:	57                   	push   %edi
81006064:	53                   	push   %ebx
81006065:	31 db                	xor    %ebx,%ebx
81006067:	8b 7d 08             	mov    0x8(%ebp),%edi
8100606a:	02 5d 0c             	add    0xc(%ebp),%bl
8100606d:	0f 84 98 00 00 00    	je     8100610b <L25>
81006073:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006079:	74 37                	je     810060b2 <L5>
8100607b:	89 f8                	mov    %edi,%eax
8100607d:	8a 08                	mov    (%eax),%cl
8100607f:	84 c9                	test   %cl,%cl
81006081:	74 7b                	je     810060fe <L14>
81006083:	38 d9                	cmp    %bl,%cl
81006085:	74 7d                	je     81006104 <L19>
81006087:	47                   	inc    %edi
81006088:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100608e:	74 22                	je     810060b2 <L5>
81006090:	89 f8                	mov    %edi,%eax
81006092:	8a 08                	mov    (%eax),%cl
81006094:	84 c9                	test   %cl,%cl
81006096:	74 66                	je     810060fe <L14>
81006098:	38 d9                	cmp    %bl,%cl
8100609a:	74 68                	je     81006104 <L19>
8100609c:	47                   	inc    %edi
8100609d:	f7 c7 03 00 00 00    	test   $0x3,%edi
810060a3:	74 0d                	je     810060b2 <L5>
810060a5:	89 f8                	mov    %edi,%eax
810060a7:	8a 08                	mov    (%eax),%cl
810060a9:	84 c9                	test   %cl,%cl
810060ab:	74 51                	je     810060fe <L14>
810060ad:	38 d9                	cmp    %bl,%cl
810060af:	74 53                	je     81006104 <L19>
810060b1:	47                   	inc    %edi

810060b2 <L5>:
810060b2:	89 d9                	mov    %ebx,%ecx
810060b4:	c1 e3 08             	shl    $0x8,%ebx
810060b7:	83 ef 04             	sub    $0x4,%edi
810060ba:	09 cb                	or     %ecx,%ebx
810060bc:	89 da                	mov    %ebx,%edx
810060be:	c1 e3 10             	shl    $0x10,%ebx
810060c1:	09 d3                	or     %edx,%ebx

810060c3 <L10>:
810060c3:	83 c7 04             	add    $0x4,%edi
810060c6:	8b 0f                	mov    (%edi),%ecx
810060c8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810060ce:	89 c8                	mov    %ecx,%eax
810060d0:	f7 d0                	not    %eax
810060d2:	21 c2                	and    %eax,%edx
810060d4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810060da:	75 14                	jne    810060f0 <L9>
810060dc:	31 d9                	xor    %ebx,%ecx
810060de:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810060e4:	f7 d1                	not    %ecx
810060e6:	21 ca                	and    %ecx,%edx
810060e8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810060ee:	74 d3                	je     810060c3 <L10>

810060f0 <L9>:
810060f0:	8d 47 ff             	lea    -0x1(%edi),%eax

810060f3 <L15>:
810060f3:	40                   	inc    %eax
810060f4:	8a 10                	mov    (%eax),%dl
810060f6:	84 d2                	test   %dl,%dl
810060f8:	74 04                	je     810060fe <L14>
810060fa:	38 da                	cmp    %bl,%dl
810060fc:	75 f5                	jne    810060f3 <L15>

810060fe <L14>:
810060fe:	38 18                	cmp    %bl,(%eax)
81006100:	74 02                	je     81006104 <L19>
81006102:	31 c0                	xor    %eax,%eax

81006104 <L19>:
81006104:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006107:	5b                   	pop    %ebx
81006108:	5f                   	pop    %edi
81006109:	c9                   	leave  
8100610a:	c3                   	ret    

8100610b <L25>:
8100610b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006111:	74 2b                	je     8100613e <L26>
81006113:	89 f8                	mov    %edi,%eax
81006115:	8a 08                	mov    (%eax),%cl
81006117:	84 c9                	test   %cl,%cl
81006119:	74 e9                	je     81006104 <L19>
8100611b:	47                   	inc    %edi
8100611c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006122:	74 1a                	je     8100613e <L26>
81006124:	89 f8                	mov    %edi,%eax
81006126:	8a 08                	mov    (%eax),%cl
81006128:	84 c9                	test   %cl,%cl
8100612a:	74 d8                	je     81006104 <L19>
8100612c:	47                   	inc    %edi
8100612d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006133:	74 09                	je     8100613e <L26>
81006135:	89 f8                	mov    %edi,%eax
81006137:	8a 08                	mov    (%eax),%cl
81006139:	84 c9                	test   %cl,%cl
8100613b:	74 c7                	je     81006104 <L19>
8100613d:	47                   	inc    %edi

8100613e <L26>:
8100613e:	83 ef 04             	sub    $0x4,%edi

81006141 <L27>:
81006141:	83 c7 04             	add    $0x4,%edi
81006144:	8b 0f                	mov    (%edi),%ecx
81006146:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100614c:	89 c8                	mov    %ecx,%eax
8100614e:	f7 d0                	not    %eax
81006150:	21 c2                	and    %eax,%edx
81006152:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006158:	74 e7                	je     81006141 <L27>
8100615a:	eb 94                	jmp    810060f0 <L9>

8100615c <strcmp>:
8100615c:	55                   	push   %ebp
8100615d:	89 e5                	mov    %esp,%ebp
8100615f:	83 ec 10             	sub    $0x10,%esp
81006162:	8b 55 08             	mov    0x8(%ebp),%edx
81006165:	8b 45 0c             	mov    0xc(%ebp),%eax
81006168:	09 d0                	or     %edx,%eax
8100616a:	83 e0 03             	and    $0x3,%eax
8100616d:	85 c0                	test   %eax,%eax
8100616f:	75 5e                	jne    810061cf <strcmp+0x73>
81006171:	8b 45 08             	mov    0x8(%ebp),%eax
81006174:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006177:	8b 45 0c             	mov    0xc(%ebp),%eax
8100617a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100617d:	eb 2c                	jmp    810061ab <strcmp+0x4f>
8100617f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006182:	8b 00                	mov    (%eax),%eax
81006184:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100618a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100618d:	8b 00                	mov    (%eax),%eax
8100618f:	f7 d0                	not    %eax
81006191:	21 d0                	and    %edx,%eax
81006193:	25 80 80 80 80       	and    $0x80808080,%eax
81006198:	85 c0                	test   %eax,%eax
8100619a:	74 07                	je     810061a3 <strcmp+0x47>
8100619c:	b8 00 00 00 00       	mov    $0x0,%eax
810061a1:	eb 5c                	jmp    810061ff <strcmp+0xa3>
810061a3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810061a7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810061ab:	8b 45 fc             	mov    -0x4(%ebp),%eax
810061ae:	8b 10                	mov    (%eax),%edx
810061b0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810061b3:	8b 00                	mov    (%eax),%eax
810061b5:	39 c2                	cmp    %eax,%edx
810061b7:	74 c6                	je     8100617f <strcmp+0x23>
810061b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810061bc:	89 45 08             	mov    %eax,0x8(%ebp)
810061bf:	8b 45 f8             	mov    -0x8(%ebp),%eax
810061c2:	89 45 0c             	mov    %eax,0xc(%ebp)
810061c5:	eb 08                	jmp    810061cf <strcmp+0x73>
810061c7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810061cb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810061cf:	8b 45 08             	mov    0x8(%ebp),%eax
810061d2:	0f b6 00             	movzbl (%eax),%eax
810061d5:	84 c0                	test   %al,%al
810061d7:	74 10                	je     810061e9 <strcmp+0x8d>
810061d9:	8b 45 08             	mov    0x8(%ebp),%eax
810061dc:	0f b6 10             	movzbl (%eax),%edx
810061df:	8b 45 0c             	mov    0xc(%ebp),%eax
810061e2:	0f b6 00             	movzbl (%eax),%eax
810061e5:	38 c2                	cmp    %al,%dl
810061e7:	74 de                	je     810061c7 <strcmp+0x6b>
810061e9:	8b 45 08             	mov    0x8(%ebp),%eax
810061ec:	0f b6 00             	movzbl (%eax),%eax
810061ef:	0f b6 d0             	movzbl %al,%edx
810061f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810061f5:	0f b6 00             	movzbl (%eax),%eax
810061f8:	0f b6 c8             	movzbl %al,%ecx
810061fb:	89 d0                	mov    %edx,%eax
810061fd:	29 c8                	sub    %ecx,%eax
810061ff:	c9                   	leave  
81006200:	c3                   	ret    
81006201:	66 90                	xchg   %ax,%ax
81006203:	66 90                	xchg   %ax,%ax
81006205:	66 90                	xchg   %ax,%ax
81006207:	66 90                	xchg   %ax,%ax
81006209:	66 90                	xchg   %ax,%ax
8100620b:	66 90                	xchg   %ax,%ax
8100620d:	66 90                	xchg   %ax,%ax
8100620f:	90                   	nop

81006210 <strlen>:
81006210:	55                   	push   %ebp
81006211:	89 e5                	mov    %esp,%ebp
81006213:	57                   	push   %edi
81006214:	8b 55 08             	mov    0x8(%ebp),%edx
81006217:	89 d7                	mov    %edx,%edi
81006219:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100621f:	74 25                	je     81006246 <L5>
81006221:	8a 0f                	mov    (%edi),%cl
81006223:	47                   	inc    %edi
81006224:	84 c9                	test   %cl,%cl
81006226:	74 56                	je     8100627e <L15>
81006228:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100622e:	74 16                	je     81006246 <L5>
81006230:	8a 0f                	mov    (%edi),%cl
81006232:	47                   	inc    %edi
81006233:	84 c9                	test   %cl,%cl
81006235:	74 47                	je     8100627e <L15>
81006237:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100623d:	74 07                	je     81006246 <L5>
8100623f:	8a 0f                	mov    (%edi),%cl
81006241:	47                   	inc    %edi
81006242:	84 c9                	test   %cl,%cl
81006244:	74 38                	je     8100627e <L15>

81006246 <L5>:
81006246:	83 ef 04             	sub    $0x4,%edi
81006249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006250 <L10>:
81006250:	83 c7 04             	add    $0x4,%edi
81006253:	8b 0f                	mov    (%edi),%ecx
81006255:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100625b:	f7 d1                	not    %ecx
8100625d:	21 c8                	and    %ecx,%eax
8100625f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006264:	74 ea                	je     81006250 <L10>
81006266:	f7 d1                	not    %ecx
81006268:	47                   	inc    %edi
81006269:	84 c9                	test   %cl,%cl
8100626b:	74 11                	je     8100627e <L15>
8100626d:	47                   	inc    %edi
8100626e:	c1 e9 08             	shr    $0x8,%ecx
81006271:	84 c9                	test   %cl,%cl
81006273:	74 09                	je     8100627e <L15>
81006275:	47                   	inc    %edi
81006276:	c1 e9 08             	shr    $0x8,%ecx
81006279:	84 c9                	test   %cl,%cl
8100627b:	74 01                	je     8100627e <L15>
8100627d:	47                   	inc    %edi

8100627e <L15>:
8100627e:	29 d7                	sub    %edx,%edi
81006280:	8d 47 ff             	lea    -0x1(%edi),%eax
81006283:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006286:	5f                   	pop    %edi
81006287:	c9                   	leave  
81006288:	c3                   	ret    

81006289 <strtok>:
81006289:	55                   	push   %ebp
8100628a:	89 e5                	mov    %esp,%ebp
8100628c:	83 ec 18             	sub    $0x18,%esp
8100628f:	8b 55 08             	mov    0x8(%ebp),%edx
81006292:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006295:	a1 24 7f 00 81       	mov    0x81007f24,%eax
8100629a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100629d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062a0:	83 c0 5c             	add    $0x5c,%eax
810062a3:	6a 01                	push   $0x1
810062a5:	50                   	push   %eax
810062a6:	51                   	push   %ecx
810062a7:	52                   	push   %edx
810062a8:	e8 05 00 00 00       	call   810062b2 <__strtok_r>
810062ad:	83 c4 10             	add    $0x10,%esp
810062b0:	c9                   	leave  
810062b1:	c3                   	ret    

810062b2 <__strtok_r>:
810062b2:	55                   	push   %ebp
810062b3:	89 e5                	mov    %esp,%ebp
810062b5:	57                   	push   %edi
810062b6:	56                   	push   %esi
810062b7:	53                   	push   %ebx
810062b8:	83 ec 10             	sub    $0x10,%esp
810062bb:	8b 45 08             	mov    0x8(%ebp),%eax
810062be:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810062c1:	85 c0                	test   %eax,%eax
810062c3:	75 13                	jne    810062d8 <__strtok_r+0x26>
810062c5:	8b 45 10             	mov    0x10(%ebp),%eax
810062c8:	8b 00                	mov    (%eax),%eax
810062ca:	85 c0                	test   %eax,%eax
810062cc:	75 0a                	jne    810062d8 <__strtok_r+0x26>
810062ce:	b8 00 00 00 00       	mov    $0x0,%eax
810062d3:	e9 92 00 00 00       	jmp    8100636a <__strtok_r+0xb8>
810062d8:	90                   	nop
810062d9:	89 c2                	mov    %eax,%edx
810062db:	8d 42 01             	lea    0x1(%edx),%eax
810062de:	0f b6 12             	movzbl (%edx),%edx
810062e1:	0f be f2             	movsbl %dl,%esi
810062e4:	89 cf                	mov    %ecx,%edi
810062e6:	eb 1c                	jmp    81006304 <__strtok_r+0x52>
810062e8:	39 de                	cmp    %ebx,%esi
810062ea:	75 18                	jne    81006304 <__strtok_r+0x52>
810062ec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810062f0:	74 02                	je     810062f4 <__strtok_r+0x42>
810062f2:	eb e5                	jmp    810062d9 <__strtok_r+0x27>
810062f4:	8b 55 10             	mov    0x10(%ebp),%edx
810062f7:	89 02                	mov    %eax,(%edx)
810062f9:	8d 50 ff             	lea    -0x1(%eax),%edx
810062fc:	c6 02 00             	movb   $0x0,(%edx)
810062ff:	83 e8 01             	sub    $0x1,%eax
81006302:	eb 66                	jmp    8100636a <__strtok_r+0xb8>
81006304:	89 fa                	mov    %edi,%edx
81006306:	8d 7a 01             	lea    0x1(%edx),%edi
81006309:	0f b6 12             	movzbl (%edx),%edx
8100630c:	0f be da             	movsbl %dl,%ebx
8100630f:	85 db                	test   %ebx,%ebx
81006311:	75 d5                	jne    810062e8 <__strtok_r+0x36>
81006313:	85 f6                	test   %esi,%esi
81006315:	75 10                	jne    81006327 <__strtok_r+0x75>
81006317:	8b 45 10             	mov    0x10(%ebp),%eax
8100631a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006320:	b8 00 00 00 00       	mov    $0x0,%eax
81006325:	eb 43                	jmp    8100636a <__strtok_r+0xb8>
81006327:	8d 50 ff             	lea    -0x1(%eax),%edx
8100632a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100632d:	89 c2                	mov    %eax,%edx
8100632f:	8d 42 01             	lea    0x1(%edx),%eax
81006332:	0f b6 12             	movzbl (%edx),%edx
81006335:	0f be f2             	movsbl %dl,%esi
81006338:	89 cf                	mov    %ecx,%edi
8100633a:	89 fa                	mov    %edi,%edx
8100633c:	8d 7a 01             	lea    0x1(%edx),%edi
8100633f:	0f b6 12             	movzbl (%edx),%edx
81006342:	0f be da             	movsbl %dl,%ebx
81006345:	39 f3                	cmp    %esi,%ebx
81006347:	75 1b                	jne    81006364 <__strtok_r+0xb2>
81006349:	85 f6                	test   %esi,%esi
8100634b:	75 07                	jne    81006354 <__strtok_r+0xa2>
8100634d:	b8 00 00 00 00       	mov    $0x0,%eax
81006352:	eb 06                	jmp    8100635a <__strtok_r+0xa8>
81006354:	8d 50 ff             	lea    -0x1(%eax),%edx
81006357:	c6 02 00             	movb   $0x0,(%edx)
8100635a:	8b 55 10             	mov    0x10(%ebp),%edx
8100635d:	89 02                	mov    %eax,(%edx)
8100635f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006362:	eb 06                	jmp    8100636a <__strtok_r+0xb8>
81006364:	85 db                	test   %ebx,%ebx
81006366:	75 d2                	jne    8100633a <__strtok_r+0x88>
81006368:	eb c3                	jmp    8100632d <__strtok_r+0x7b>
8100636a:	83 c4 10             	add    $0x10,%esp
8100636d:	5b                   	pop    %ebx
8100636e:	5e                   	pop    %esi
8100636f:	5f                   	pop    %edi
81006370:	5d                   	pop    %ebp
81006371:	c3                   	ret    

81006372 <strtok_r>:
81006372:	55                   	push   %ebp
81006373:	89 e5                	mov    %esp,%ebp
81006375:	8b 45 08             	mov    0x8(%ebp),%eax
81006378:	8b 55 0c             	mov    0xc(%ebp),%edx
8100637b:	6a 01                	push   $0x1
8100637d:	ff 75 10             	push   0x10(%ebp)
81006380:	52                   	push   %edx
81006381:	50                   	push   %eax
81006382:	e8 2b ff ff ff       	call   810062b2 <__strtok_r>
81006387:	83 c4 10             	add    $0x10,%esp
8100638a:	c9                   	leave  
8100638b:	c3                   	ret    

8100638c <__locale_ctype_ptr_l>:
8100638c:	55                   	push   %ebp
8100638d:	89 e5                	mov    %esp,%ebp
8100638f:	b8 c0 79 00 81       	mov    $0x810079c0,%eax
81006394:	5d                   	pop    %ebp
81006395:	c3                   	ret    

81006396 <__get_global_locale>:
81006396:	55                   	push   %ebp
81006397:	89 e5                	mov    %esp,%ebp
81006399:	b8 60 83 00 81       	mov    $0x81008360,%eax
8100639e:	5d                   	pop    %ebp
8100639f:	c3                   	ret    

810063a0 <__get_current_locale>:
810063a0:	55                   	push   %ebp
810063a1:	89 e5                	mov    %esp,%ebp
810063a3:	e8 ee ff ff ff       	call   81006396 <__get_global_locale>
810063a8:	5d                   	pop    %ebp
810063a9:	c3                   	ret    

810063aa <_strtol_l>:
810063aa:	55                   	push   %ebp
810063ab:	89 e5                	mov    %esp,%ebp
810063ad:	57                   	push   %edi
810063ae:	56                   	push   %esi
810063af:	53                   	push   %ebx
810063b0:	83 ec 1c             	sub    $0x1c,%esp
810063b3:	8b 75 0c             	mov    0xc(%ebp),%esi
810063b6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810063bd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810063c1:	78 0c                	js     810063cf <_strtol_l+0x25>
810063c3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810063c7:	74 06                	je     810063cf <_strtol_l+0x25>
810063c9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810063cd:	7e 15                	jle    810063e4 <_strtol_l+0x3a>
810063cf:	e8 44 06 00 00       	call   81006a18 <__errno>
810063d4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810063da:	b8 00 00 00 00       	mov    $0x0,%eax
810063df:	e9 90 01 00 00       	jmp    81006574 <_strtol_l+0x1ca>
810063e4:	89 f0                	mov    %esi,%eax
810063e6:	8d 70 01             	lea    0x1(%eax),%esi
810063e9:	0f b6 00             	movzbl (%eax),%eax
810063ec:	0f b6 d8             	movzbl %al,%ebx
810063ef:	83 ec 0c             	sub    $0xc,%esp
810063f2:	ff 75 18             	push   0x18(%ebp)
810063f5:	e8 92 ff ff ff       	call   8100638c <__locale_ctype_ptr_l>
810063fa:	83 c4 10             	add    $0x10,%esp
810063fd:	89 da                	mov    %ebx,%edx
810063ff:	83 c2 01             	add    $0x1,%edx
81006402:	01 d0                	add    %edx,%eax
81006404:	0f b6 00             	movzbl (%eax),%eax
81006407:	0f be c0             	movsbl %al,%eax
8100640a:	83 e0 08             	and    $0x8,%eax
8100640d:	85 c0                	test   %eax,%eax
8100640f:	75 d3                	jne    810063e4 <_strtol_l+0x3a>
81006411:	83 fb 2d             	cmp    $0x2d,%ebx
81006414:	75 14                	jne    8100642a <_strtol_l+0x80>
81006416:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100641d:	89 f0                	mov    %esi,%eax
8100641f:	8d 70 01             	lea    0x1(%eax),%esi
81006422:	0f b6 00             	movzbl (%eax),%eax
81006425:	0f b6 d8             	movzbl %al,%ebx
81006428:	eb 10                	jmp    8100643a <_strtol_l+0x90>
8100642a:	83 fb 2b             	cmp    $0x2b,%ebx
8100642d:	75 0b                	jne    8100643a <_strtol_l+0x90>
8100642f:	89 f0                	mov    %esi,%eax
81006431:	8d 70 01             	lea    0x1(%eax),%esi
81006434:	0f b6 00             	movzbl (%eax),%eax
81006437:	0f b6 d8             	movzbl %al,%ebx
8100643a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100643e:	74 06                	je     81006446 <_strtol_l+0x9c>
81006440:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006444:	75 26                	jne    8100646c <_strtol_l+0xc2>
81006446:	83 fb 30             	cmp    $0x30,%ebx
81006449:	75 21                	jne    8100646c <_strtol_l+0xc2>
8100644b:	0f b6 06             	movzbl (%esi),%eax
8100644e:	3c 78                	cmp    $0x78,%al
81006450:	74 07                	je     81006459 <_strtol_l+0xaf>
81006452:	0f b6 06             	movzbl (%esi),%eax
81006455:	3c 58                	cmp    $0x58,%al
81006457:	75 13                	jne    8100646c <_strtol_l+0xc2>
81006459:	8d 46 01             	lea    0x1(%esi),%eax
8100645c:	0f b6 00             	movzbl (%eax),%eax
8100645f:	0f b6 d8             	movzbl %al,%ebx
81006462:	83 c6 02             	add    $0x2,%esi
81006465:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100646c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006470:	75 14                	jne    81006486 <_strtol_l+0xdc>
81006472:	83 fb 30             	cmp    $0x30,%ebx
81006475:	75 07                	jne    8100647e <_strtol_l+0xd4>
81006477:	b8 08 00 00 00       	mov    $0x8,%eax
8100647c:	eb 05                	jmp    81006483 <_strtol_l+0xd9>
8100647e:	b8 0a 00 00 00       	mov    $0xa,%eax
81006483:	89 45 14             	mov    %eax,0x14(%ebp)
81006486:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100648a:	74 07                	je     81006493 <_strtol_l+0xe9>
8100648c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006491:	eb 05                	jmp    81006498 <_strtol_l+0xee>
81006493:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006498:	89 c7                	mov    %eax,%edi
8100649a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100649d:	89 f8                	mov    %edi,%eax
8100649f:	ba 00 00 00 00       	mov    $0x0,%edx
810064a4:	f7 f1                	div    %ecx
810064a6:	89 d0                	mov    %edx,%eax
810064a8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810064ab:	8b 4d 14             	mov    0x14(%ebp),%ecx
810064ae:	89 f8                	mov    %edi,%eax
810064b0:	ba 00 00 00 00       	mov    $0x0,%edx
810064b5:	f7 f1                	div    %ecx
810064b7:	89 c2                	mov    %eax,%edx
810064b9:	bf 00 00 00 00       	mov    $0x0,%edi
810064be:	b9 00 00 00 00       	mov    $0x0,%ecx
810064c3:	83 fb 2f             	cmp    $0x2f,%ebx
810064c6:	7e 0a                	jle    810064d2 <_strtol_l+0x128>
810064c8:	83 fb 39             	cmp    $0x39,%ebx
810064cb:	7f 05                	jg     810064d2 <_strtol_l+0x128>
810064cd:	83 eb 30             	sub    $0x30,%ebx
810064d0:	eb 1c                	jmp    810064ee <_strtol_l+0x144>
810064d2:	83 fb 40             	cmp    $0x40,%ebx
810064d5:	7e 0a                	jle    810064e1 <_strtol_l+0x137>
810064d7:	83 fb 5a             	cmp    $0x5a,%ebx
810064da:	7f 05                	jg     810064e1 <_strtol_l+0x137>
810064dc:	83 eb 37             	sub    $0x37,%ebx
810064df:	eb 0d                	jmp    810064ee <_strtol_l+0x144>
810064e1:	83 fb 60             	cmp    $0x60,%ebx
810064e4:	7e 46                	jle    8100652c <_strtol_l+0x182>
810064e6:	83 fb 7a             	cmp    $0x7a,%ebx
810064e9:	7f 41                	jg     8100652c <_strtol_l+0x182>
810064eb:	83 eb 57             	sub    $0x57,%ebx
810064ee:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810064f1:	7d 38                	jge    8100652b <_strtol_l+0x181>
810064f3:	89 c8                	mov    %ecx,%eax
810064f5:	85 c0                	test   %eax,%eax
810064f7:	78 0f                	js     81006508 <_strtol_l+0x15e>
810064f9:	89 d0                	mov    %edx,%eax
810064fb:	39 c7                	cmp    %eax,%edi
810064fd:	77 09                	ja     81006508 <_strtol_l+0x15e>
810064ff:	39 c7                	cmp    %eax,%edi
81006501:	75 0c                	jne    8100650f <_strtol_l+0x165>
81006503:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006506:	7e 07                	jle    8100650f <_strtol_l+0x165>
81006508:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100650d:	eb 0f                	jmp    8100651e <_strtol_l+0x174>
8100650f:	b9 01 00 00 00       	mov    $0x1,%ecx
81006514:	8b 45 14             	mov    0x14(%ebp),%eax
81006517:	0f af f8             	imul   %eax,%edi
8100651a:	89 d8                	mov    %ebx,%eax
8100651c:	01 c7                	add    %eax,%edi
8100651e:	89 f0                	mov    %esi,%eax
81006520:	8d 70 01             	lea    0x1(%eax),%esi
81006523:	0f b6 00             	movzbl (%eax),%eax
81006526:	0f b6 d8             	movzbl %al,%ebx
81006529:	eb 98                	jmp    810064c3 <_strtol_l+0x119>
8100652b:	90                   	nop
8100652c:	89 c8                	mov    %ecx,%eax
8100652e:	85 c0                	test   %eax,%eax
81006530:	79 1f                	jns    81006551 <_strtol_l+0x1a7>
81006532:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006536:	74 07                	je     8100653f <_strtol_l+0x195>
81006538:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100653d:	eb 05                	jmp    81006544 <_strtol_l+0x19a>
8100653f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006544:	89 c7                	mov    %eax,%edi
81006546:	8b 45 08             	mov    0x8(%ebp),%eax
81006549:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100654f:	eb 08                	jmp    81006559 <_strtol_l+0x1af>
81006551:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006555:	74 02                	je     81006559 <_strtol_l+0x1af>
81006557:	f7 df                	neg    %edi
81006559:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100655d:	74 13                	je     81006572 <_strtol_l+0x1c8>
8100655f:	89 c8                	mov    %ecx,%eax
81006561:	85 c0                	test   %eax,%eax
81006563:	74 05                	je     8100656a <_strtol_l+0x1c0>
81006565:	8d 46 ff             	lea    -0x1(%esi),%eax
81006568:	eb 03                	jmp    8100656d <_strtol_l+0x1c3>
8100656a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100656d:	8b 55 10             	mov    0x10(%ebp),%edx
81006570:	89 02                	mov    %eax,(%edx)
81006572:	89 f8                	mov    %edi,%eax
81006574:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006577:	5b                   	pop    %ebx
81006578:	5e                   	pop    %esi
81006579:	5f                   	pop    %edi
8100657a:	5d                   	pop    %ebp
8100657b:	c3                   	ret    

8100657c <_strtol_r>:
8100657c:	55                   	push   %ebp
8100657d:	89 e5                	mov    %esp,%ebp
8100657f:	83 ec 08             	sub    $0x8,%esp
81006582:	e8 19 fe ff ff       	call   810063a0 <__get_current_locale>
81006587:	83 ec 0c             	sub    $0xc,%esp
8100658a:	50                   	push   %eax
8100658b:	ff 75 14             	push   0x14(%ebp)
8100658e:	ff 75 10             	push   0x10(%ebp)
81006591:	ff 75 0c             	push   0xc(%ebp)
81006594:	ff 75 08             	push   0x8(%ebp)
81006597:	e8 0e fe ff ff       	call   810063aa <_strtol_l>
8100659c:	83 c4 20             	add    $0x20,%esp
8100659f:	c9                   	leave  
810065a0:	c3                   	ret    

810065a1 <strtol_l>:
810065a1:	55                   	push   %ebp
810065a2:	89 e5                	mov    %esp,%ebp
810065a4:	83 ec 08             	sub    $0x8,%esp
810065a7:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810065ac:	83 ec 0c             	sub    $0xc,%esp
810065af:	ff 75 14             	push   0x14(%ebp)
810065b2:	ff 75 10             	push   0x10(%ebp)
810065b5:	ff 75 0c             	push   0xc(%ebp)
810065b8:	ff 75 08             	push   0x8(%ebp)
810065bb:	50                   	push   %eax
810065bc:	e8 e9 fd ff ff       	call   810063aa <_strtol_l>
810065c1:	83 c4 20             	add    $0x20,%esp
810065c4:	c9                   	leave  
810065c5:	c3                   	ret    

810065c6 <strtol>:
810065c6:	55                   	push   %ebp
810065c7:	89 e5                	mov    %esp,%ebp
810065c9:	83 ec 08             	sub    $0x8,%esp
810065cc:	e8 cf fd ff ff       	call   810063a0 <__get_current_locale>
810065d1:	8b 15 24 7f 00 81    	mov    0x81007f24,%edx
810065d7:	83 ec 0c             	sub    $0xc,%esp
810065da:	50                   	push   %eax
810065db:	ff 75 10             	push   0x10(%ebp)
810065de:	ff 75 0c             	push   0xc(%ebp)
810065e1:	ff 75 08             	push   0x8(%ebp)
810065e4:	52                   	push   %edx
810065e5:	e8 c0 fd ff ff       	call   810063aa <_strtol_l>
810065ea:	83 c4 20             	add    $0x20,%esp
810065ed:	c9                   	leave  
810065ee:	c3                   	ret    

810065ef <__swbuf_r>:
810065ef:	55                   	push   %ebp
810065f0:	89 e5                	mov    %esp,%ebp
810065f2:	57                   	push   %edi
810065f3:	56                   	push   %esi
810065f4:	53                   	push   %ebx
810065f5:	83 ec 1c             	sub    $0x1c,%esp
810065f8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810065fb:	8b 5d 10             	mov    0x10(%ebp),%ebx
810065fe:	8b 45 08             	mov    0x8(%ebp),%eax
81006601:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006604:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006608:	74 18                	je     81006622 <__swbuf_r+0x33>
8100660a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100660d:	8b 40 38             	mov    0x38(%eax),%eax
81006610:	85 c0                	test   %eax,%eax
81006612:	75 0e                	jne    81006622 <__swbuf_r+0x33>
81006614:	83 ec 0c             	sub    $0xc,%esp
81006617:	ff 75 e4             	push   -0x1c(%ebp)
8100661a:	e8 a0 ae ff ff       	call   810014bf <__sinit>
8100661f:	83 c4 10             	add    $0x10,%esp
81006622:	8b 43 18             	mov    0x18(%ebx),%eax
81006625:	89 43 08             	mov    %eax,0x8(%ebx)
81006628:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100662c:	98                   	cwtl   
8100662d:	83 e0 08             	and    $0x8,%eax
81006630:	85 c0                	test   %eax,%eax
81006632:	74 07                	je     8100663b <__swbuf_r+0x4c>
81006634:	8b 43 10             	mov    0x10(%ebx),%eax
81006637:	85 c0                	test   %eax,%eax
81006639:	75 1d                	jne    81006658 <__swbuf_r+0x69>
8100663b:	83 ec 08             	sub    $0x8,%esp
8100663e:	53                   	push   %ebx
8100663f:	ff 75 08             	push   0x8(%ebp)
81006642:	e8 21 01 00 00       	call   81006768 <__swsetup_r>
81006647:	83 c4 10             	add    $0x10,%esp
8100664a:	85 c0                	test   %eax,%eax
8100664c:	74 0a                	je     81006658 <__swbuf_r+0x69>
8100664e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006653:	e9 a1 00 00 00       	jmp    810066f9 <__swbuf_r+0x10a>
81006658:	89 f8                	mov    %edi,%eax
8100665a:	0f b6 f8             	movzbl %al,%edi
8100665d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006661:	98                   	cwtl   
81006662:	25 00 20 00 00       	and    $0x2000,%eax
81006667:	85 c0                	test   %eax,%eax
81006669:	75 14                	jne    8100667f <__swbuf_r+0x90>
8100666b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100666f:	80 cc 20             	or     $0x20,%ah
81006672:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006676:	8b 43 64             	mov    0x64(%ebx),%eax
81006679:	80 e4 df             	and    $0xdf,%ah
8100667c:	89 43 64             	mov    %eax,0x64(%ebx)
8100667f:	8b 03                	mov    (%ebx),%eax
81006681:	8b 53 10             	mov    0x10(%ebx),%edx
81006684:	29 d0                	sub    %edx,%eax
81006686:	89 c6                	mov    %eax,%esi
81006688:	8b 43 14             	mov    0x14(%ebx),%eax
8100668b:	39 c6                	cmp    %eax,%esi
8100668d:	7c 1f                	jl     810066ae <__swbuf_r+0xbf>
8100668f:	83 ec 08             	sub    $0x8,%esp
81006692:	53                   	push   %ebx
81006693:	ff 75 08             	push   0x8(%ebp)
81006696:	e8 21 a9 ff ff       	call   81000fbc <_fflush_r>
8100669b:	83 c4 10             	add    $0x10,%esp
8100669e:	85 c0                	test   %eax,%eax
810066a0:	74 07                	je     810066a9 <__swbuf_r+0xba>
810066a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066a7:	eb 50                	jmp    810066f9 <__swbuf_r+0x10a>
810066a9:	be 00 00 00 00       	mov    $0x0,%esi
810066ae:	8b 43 08             	mov    0x8(%ebx),%eax
810066b1:	83 e8 01             	sub    $0x1,%eax
810066b4:	89 43 08             	mov    %eax,0x8(%ebx)
810066b7:	8b 03                	mov    (%ebx),%eax
810066b9:	8d 50 01             	lea    0x1(%eax),%edx
810066bc:	89 13                	mov    %edx,(%ebx)
810066be:	89 fa                	mov    %edi,%edx
810066c0:	88 10                	mov    %dl,(%eax)
810066c2:	83 c6 01             	add    $0x1,%esi
810066c5:	8b 43 14             	mov    0x14(%ebx),%eax
810066c8:	39 c6                	cmp    %eax,%esi
810066ca:	74 11                	je     810066dd <__swbuf_r+0xee>
810066cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066d0:	98                   	cwtl   
810066d1:	83 e0 01             	and    $0x1,%eax
810066d4:	85 c0                	test   %eax,%eax
810066d6:	74 1f                	je     810066f7 <__swbuf_r+0x108>
810066d8:	83 ff 0a             	cmp    $0xa,%edi
810066db:	75 1a                	jne    810066f7 <__swbuf_r+0x108>
810066dd:	83 ec 08             	sub    $0x8,%esp
810066e0:	53                   	push   %ebx
810066e1:	ff 75 08             	push   0x8(%ebp)
810066e4:	e8 d3 a8 ff ff       	call   81000fbc <_fflush_r>
810066e9:	83 c4 10             	add    $0x10,%esp
810066ec:	85 c0                	test   %eax,%eax
810066ee:	74 07                	je     810066f7 <__swbuf_r+0x108>
810066f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066f5:	eb 02                	jmp    810066f9 <__swbuf_r+0x10a>
810066f7:	89 f8                	mov    %edi,%eax
810066f9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810066fc:	5b                   	pop    %ebx
810066fd:	5e                   	pop    %esi
810066fe:	5f                   	pop    %edi
810066ff:	5d                   	pop    %ebp
81006700:	c3                   	ret    

81006701 <__swbuf>:
81006701:	55                   	push   %ebp
81006702:	89 e5                	mov    %esp,%ebp
81006704:	83 ec 08             	sub    $0x8,%esp
81006707:	8b 55 08             	mov    0x8(%ebp),%edx
8100670a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100670d:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006712:	83 ec 04             	sub    $0x4,%esp
81006715:	51                   	push   %ecx
81006716:	52                   	push   %edx
81006717:	50                   	push   %eax
81006718:	e8 d2 fe ff ff       	call   810065ef <__swbuf_r>
8100671d:	83 c4 10             	add    $0x10,%esp
81006720:	c9                   	leave  
81006721:	c3                   	ret    

81006722 <_write_r>:
81006722:	55                   	push   %ebp
81006723:	89 e5                	mov    %esp,%ebp
81006725:	83 ec 18             	sub    $0x18,%esp
81006728:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
8100672f:	00 00 00 
81006732:	83 ec 04             	sub    $0x4,%esp
81006735:	ff 75 14             	push   0x14(%ebp)
81006738:	ff 75 10             	push   0x10(%ebp)
8100673b:	ff 75 0c             	push   0xc(%ebp)
8100673e:	e8 92 a2 ff ff       	call   810009d5 <write>
81006743:	83 c4 10             	add    $0x10,%esp
81006746:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006749:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100674d:	75 14                	jne    81006763 <_write_r+0x41>
8100674f:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81006754:	85 c0                	test   %eax,%eax
81006756:	74 0b                	je     81006763 <_write_r+0x41>
81006758:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
8100675e:	8b 45 08             	mov    0x8(%ebp),%eax
81006761:	89 10                	mov    %edx,(%eax)
81006763:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006766:	c9                   	leave  
81006767:	c3                   	ret    

81006768 <__swsetup_r>:
81006768:	55                   	push   %ebp
81006769:	89 e5                	mov    %esp,%ebp
8100676b:	53                   	push   %ebx
8100676c:	83 ec 14             	sub    $0x14,%esp
8100676f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006772:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006777:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100677a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100677e:	74 18                	je     81006798 <__swsetup_r+0x30>
81006780:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006783:	8b 40 38             	mov    0x38(%eax),%eax
81006786:	85 c0                	test   %eax,%eax
81006788:	75 0e                	jne    81006798 <__swsetup_r+0x30>
8100678a:	83 ec 0c             	sub    $0xc,%esp
8100678d:	ff 75 f4             	push   -0xc(%ebp)
81006790:	e8 2a ad ff ff       	call   810014bf <__sinit>
81006795:	83 c4 10             	add    $0x10,%esp
81006798:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100679c:	98                   	cwtl   
8100679d:	83 e0 08             	and    $0x8,%eax
810067a0:	85 c0                	test   %eax,%eax
810067a2:	0f 85 82 00 00 00    	jne    8100682a <__swsetup_r+0xc2>
810067a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067ac:	98                   	cwtl   
810067ad:	83 e0 10             	and    $0x10,%eax
810067b0:	85 c0                	test   %eax,%eax
810067b2:	75 1e                	jne    810067d2 <__swsetup_r+0x6a>
810067b4:	8b 45 08             	mov    0x8(%ebp),%eax
810067b7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810067bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067c1:	83 c8 40             	or     $0x40,%eax
810067c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810067cd:	e9 ec 00 00 00       	jmp    810068be <__swsetup_r+0x156>
810067d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067d6:	98                   	cwtl   
810067d7:	83 e0 04             	and    $0x4,%eax
810067da:	85 c0                	test   %eax,%eax
810067dc:	74 41                	je     8100681f <__swsetup_r+0xb7>
810067de:	8b 43 30             	mov    0x30(%ebx),%eax
810067e1:	85 c0                	test   %eax,%eax
810067e3:	74 23                	je     81006808 <__swsetup_r+0xa0>
810067e5:	8b 53 30             	mov    0x30(%ebx),%edx
810067e8:	8d 43 40             	lea    0x40(%ebx),%eax
810067eb:	39 c2                	cmp    %eax,%edx
810067ed:	74 12                	je     81006801 <__swsetup_r+0x99>
810067ef:	8b 43 30             	mov    0x30(%ebx),%eax
810067f2:	83 ec 08             	sub    $0x8,%esp
810067f5:	50                   	push   %eax
810067f6:	ff 75 08             	push   0x8(%ebp)
810067f9:	e8 dc af ff ff       	call   810017da <_free_r>
810067fe:	83 c4 10             	add    $0x10,%esp
81006801:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006808:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100680c:	83 e0 db             	and    $0xffffffdb,%eax
8100680f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006813:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100681a:	8b 43 10             	mov    0x10(%ebx),%eax
8100681d:	89 03                	mov    %eax,(%ebx)
8100681f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006823:	83 c8 08             	or     $0x8,%eax
81006826:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100682a:	8b 43 10             	mov    0x10(%ebx),%eax
8100682d:	85 c0                	test   %eax,%eax
8100682f:	75 2b                	jne    8100685c <__swsetup_r+0xf4>
81006831:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006835:	98                   	cwtl   
81006836:	25 00 02 00 00       	and    $0x200,%eax
8100683b:	85 c0                	test   %eax,%eax
8100683d:	74 0e                	je     8100684d <__swsetup_r+0xe5>
8100683f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006843:	98                   	cwtl   
81006844:	25 80 00 00 00       	and    $0x80,%eax
81006849:	85 c0                	test   %eax,%eax
8100684b:	74 0f                	je     8100685c <__swsetup_r+0xf4>
8100684d:	83 ec 08             	sub    $0x8,%esp
81006850:	53                   	push   %ebx
81006851:	ff 75 08             	push   0x8(%ebp)
81006854:	e8 54 ce ff ff       	call   810036ad <__smakebuf_r>
81006859:	83 c4 10             	add    $0x10,%esp
8100685c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006860:	98                   	cwtl   
81006861:	83 e0 01             	and    $0x1,%eax
81006864:	85 c0                	test   %eax,%eax
81006866:	74 11                	je     81006879 <__swsetup_r+0x111>
81006868:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100686f:	8b 43 14             	mov    0x14(%ebx),%eax
81006872:	f7 d8                	neg    %eax
81006874:	89 43 18             	mov    %eax,0x18(%ebx)
81006877:	eb 19                	jmp    81006892 <__swsetup_r+0x12a>
81006879:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100687d:	98                   	cwtl   
8100687e:	83 e0 02             	and    $0x2,%eax
81006881:	85 c0                	test   %eax,%eax
81006883:	75 05                	jne    8100688a <__swsetup_r+0x122>
81006885:	8b 43 14             	mov    0x14(%ebx),%eax
81006888:	eb 05                	jmp    8100688f <__swsetup_r+0x127>
8100688a:	b8 00 00 00 00       	mov    $0x0,%eax
8100688f:	89 43 08             	mov    %eax,0x8(%ebx)
81006892:	8b 43 10             	mov    0x10(%ebx),%eax
81006895:	85 c0                	test   %eax,%eax
81006897:	75 20                	jne    810068b9 <__swsetup_r+0x151>
81006899:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100689d:	98                   	cwtl   
8100689e:	25 80 00 00 00       	and    $0x80,%eax
810068a3:	85 c0                	test   %eax,%eax
810068a5:	74 12                	je     810068b9 <__swsetup_r+0x151>
810068a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068ab:	83 c8 40             	or     $0x40,%eax
810068ae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810068b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810068b7:	eb 05                	jmp    810068be <__swsetup_r+0x156>
810068b9:	b8 00 00 00 00       	mov    $0x0,%eax
810068be:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810068c1:	c9                   	leave  
810068c2:	c3                   	ret    

810068c3 <__call_exitprocs>:
810068c3:	55                   	push   %ebp
810068c4:	89 e5                	mov    %esp,%ebp
810068c6:	57                   	push   %edi
810068c7:	56                   	push   %esi
810068c8:	53                   	push   %ebx
810068c9:	83 ec 1c             	sub    $0x1c,%esp
810068cc:	a1 78 77 00 81       	mov    0x81007778,%eax
810068d1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810068d7:	a1 78 77 00 81       	mov    0x81007778,%eax
810068dc:	05 48 01 00 00       	add    $0x148,%eax
810068e1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810068e4:	90                   	nop
810068e5:	85 db                	test   %ebx,%ebx
810068e7:	0f 84 e1 00 00 00    	je     810069ce <__call_exitprocs+0x10b>
810068ed:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
810068f3:	8b 43 04             	mov    0x4(%ebx),%eax
810068f6:	8d 70 ff             	lea    -0x1(%eax),%esi
810068f9:	e9 c6 00 00 00       	jmp    810069c4 <__call_exitprocs+0x101>
810068fe:	b8 01 00 00 00       	mov    $0x1,%eax
81006903:	89 f1                	mov    %esi,%ecx
81006905:	d3 e0                	shl    %cl,%eax
81006907:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100690a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100690e:	74 17                	je     81006927 <__call_exitprocs+0x64>
81006910:	85 ff                	test   %edi,%edi
81006912:	0f 84 a5 00 00 00    	je     810069bd <__call_exitprocs+0xfa>
81006918:	8d 46 20             	lea    0x20(%esi),%eax
8100691b:	8b 04 87             	mov    (%edi,%eax,4),%eax
8100691e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81006921:	0f 85 96 00 00 00    	jne    810069bd <__call_exitprocs+0xfa>
81006927:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100692b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100692e:	8b 43 04             	mov    0x4(%ebx),%eax
81006931:	83 e8 01             	sub    $0x1,%eax
81006934:	39 c6                	cmp    %eax,%esi
81006936:	75 0b                	jne    81006943 <__call_exitprocs+0x80>
81006938:	8b 43 04             	mov    0x4(%ebx),%eax
8100693b:	83 e8 01             	sub    $0x1,%eax
8100693e:	89 43 04             	mov    %eax,0x4(%ebx)
81006941:	eb 08                	jmp    8100694b <__call_exitprocs+0x88>
81006943:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100694a:	00 
8100694b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100694f:	74 6f                	je     810069c0 <__call_exitprocs+0xfd>
81006951:	8b 43 04             	mov    0x4(%ebx),%eax
81006954:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006957:	85 ff                	test   %edi,%edi
81006959:	74 0f                	je     8100696a <__call_exitprocs+0xa7>
8100695b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81006961:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006964:	21 d0                	and    %edx,%eax
81006966:	85 c0                	test   %eax,%eax
81006968:	75 07                	jne    81006971 <__call_exitprocs+0xae>
8100696a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100696d:	ff d0                	call   *%eax
8100696f:	eb 32                	jmp    810069a3 <__call_exitprocs+0xe0>
81006971:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81006977:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100697a:	21 d0                	and    %edx,%eax
8100697c:	85 c0                	test   %eax,%eax
8100697e:	75 14                	jne    81006994 <__call_exitprocs+0xd1>
81006980:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006983:	83 ec 08             	sub    $0x8,%esp
81006986:	50                   	push   %eax
81006987:	ff 75 08             	push   0x8(%ebp)
8100698a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100698d:	ff d0                	call   *%eax
8100698f:	83 c4 10             	add    $0x10,%esp
81006992:	eb 0f                	jmp    810069a3 <__call_exitprocs+0xe0>
81006994:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006997:	83 ec 0c             	sub    $0xc,%esp
8100699a:	50                   	push   %eax
8100699b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100699e:	ff d0                	call   *%eax
810069a0:	83 c4 10             	add    $0x10,%esp
810069a3:	8b 43 04             	mov    0x4(%ebx),%eax
810069a6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810069a9:	0f 85 1d ff ff ff    	jne    810068cc <__call_exitprocs+0x9>
810069af:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810069b2:	8b 00                	mov    (%eax),%eax
810069b4:	39 c3                	cmp    %eax,%ebx
810069b6:	74 09                	je     810069c1 <__call_exitprocs+0xfe>
810069b8:	e9 0f ff ff ff       	jmp    810068cc <__call_exitprocs+0x9>
810069bd:	90                   	nop
810069be:	eb 01                	jmp    810069c1 <__call_exitprocs+0xfe>
810069c0:	90                   	nop
810069c1:	83 ee 01             	sub    $0x1,%esi
810069c4:	85 f6                	test   %esi,%esi
810069c6:	0f 89 32 ff ff ff    	jns    810068fe <__call_exitprocs+0x3b>
810069cc:	eb 01                	jmp    810069cf <__call_exitprocs+0x10c>
810069ce:	90                   	nop
810069cf:	90                   	nop
810069d0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810069d3:	5b                   	pop    %ebx
810069d4:	5e                   	pop    %esi
810069d5:	5f                   	pop    %edi
810069d6:	5d                   	pop    %ebp
810069d7:	c3                   	ret    

810069d8 <_close_r>:
810069d8:	55                   	push   %ebp
810069d9:	89 e5                	mov    %esp,%ebp
810069db:	83 ec 18             	sub    $0x18,%esp
810069de:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
810069e5:	00 00 00 
810069e8:	83 ec 0c             	sub    $0xc,%esp
810069eb:	ff 75 0c             	push   0xc(%ebp)
810069ee:	e8 0f a0 ff ff       	call   81000a02 <close>
810069f3:	83 c4 10             	add    $0x10,%esp
810069f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069f9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810069fd:	75 14                	jne    81006a13 <_close_r+0x3b>
810069ff:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81006a04:	85 c0                	test   %eax,%eax
81006a06:	74 0b                	je     81006a13 <_close_r+0x3b>
81006a08:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
81006a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81006a11:	89 10                	mov    %edx,(%eax)
81006a13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a16:	c9                   	leave  
81006a17:	c3                   	ret    

81006a18 <__errno>:
81006a18:	55                   	push   %ebp
81006a19:	89 e5                	mov    %esp,%ebp
81006a1b:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006a20:	5d                   	pop    %ebp
81006a21:	c3                   	ret    

81006a22 <__sflags>:
81006a22:	55                   	push   %ebp
81006a23:	89 e5                	mov    %esp,%ebp
81006a25:	57                   	push   %edi
81006a26:	56                   	push   %esi
81006a27:	53                   	push   %ebx
81006a28:	8b 55 0c             	mov    0xc(%ebp),%edx
81006a2b:	0f b6 02             	movzbl (%edx),%eax
81006a2e:	0f be c0             	movsbl %al,%eax
81006a31:	83 f8 77             	cmp    $0x77,%eax
81006a34:	74 20                	je     81006a56 <__sflags+0x34>
81006a36:	83 f8 77             	cmp    $0x77,%eax
81006a39:	7f 3d                	jg     81006a78 <__sflags+0x56>
81006a3b:	83 f8 61             	cmp    $0x61,%eax
81006a3e:	74 27                	je     81006a67 <__sflags+0x45>
81006a40:	83 f8 72             	cmp    $0x72,%eax
81006a43:	75 33                	jne    81006a78 <__sflags+0x56>
81006a45:	be 04 00 00 00       	mov    $0x4,%esi
81006a4a:	bb 00 00 00 00       	mov    $0x0,%ebx
81006a4f:	bf 00 00 00 00       	mov    $0x0,%edi
81006a54:	eb 32                	jmp    81006a88 <__sflags+0x66>
81006a56:	be 08 00 00 00       	mov    $0x8,%esi
81006a5b:	bb 01 00 00 00       	mov    $0x1,%ebx
81006a60:	bf 00 06 00 00       	mov    $0x600,%edi
81006a65:	eb 21                	jmp    81006a88 <__sflags+0x66>
81006a67:	be 08 01 00 00       	mov    $0x108,%esi
81006a6c:	bb 01 00 00 00       	mov    $0x1,%ebx
81006a71:	bf 08 02 00 00       	mov    $0x208,%edi
81006a76:	eb 10                	jmp    81006a88 <__sflags+0x66>
81006a78:	8b 45 08             	mov    0x8(%ebp),%eax
81006a7b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006a81:	b8 00 00 00 00       	mov    $0x0,%eax
81006a86:	eb 4f                	jmp    81006ad7 <__sflags+0xb5>
81006a88:	eb 38                	jmp    81006ac2 <__sflags+0xa0>
81006a8a:	0f b6 02             	movzbl (%edx),%eax
81006a8d:	0f be c0             	movsbl %al,%eax
81006a90:	83 f8 78             	cmp    $0x78,%eax
81006a93:	74 27                	je     81006abc <__sflags+0x9a>
81006a95:	83 f8 78             	cmp    $0x78,%eax
81006a98:	7f 27                	jg     81006ac1 <__sflags+0x9f>
81006a9a:	83 f8 2b             	cmp    $0x2b,%eax
81006a9d:	74 07                	je     81006aa6 <__sflags+0x84>
81006a9f:	83 f8 62             	cmp    $0x62,%eax
81006aa2:	74 1e                	je     81006ac2 <__sflags+0xa0>
81006aa4:	eb 1b                	jmp    81006ac1 <__sflags+0x9f>
81006aa6:	89 f0                	mov    %esi,%eax
81006aa8:	83 e0 e3             	and    $0xffffffe3,%eax
81006aab:	83 c8 10             	or     $0x10,%eax
81006aae:	89 c6                	mov    %eax,%esi
81006ab0:	89 d8                	mov    %ebx,%eax
81006ab2:	83 e0 fc             	and    $0xfffffffc,%eax
81006ab5:	83 c8 02             	or     $0x2,%eax
81006ab8:	89 c3                	mov    %eax,%ebx
81006aba:	eb 06                	jmp    81006ac2 <__sflags+0xa0>
81006abc:	80 cf 08             	or     $0x8,%bh
81006abf:	eb 01                	jmp    81006ac2 <__sflags+0xa0>
81006ac1:	90                   	nop
81006ac2:	83 c2 01             	add    $0x1,%edx
81006ac5:	0f b6 02             	movzbl (%edx),%eax
81006ac8:	84 c0                	test   %al,%al
81006aca:	75 be                	jne    81006a8a <__sflags+0x68>
81006acc:	89 da                	mov    %ebx,%edx
81006ace:	09 fa                	or     %edi,%edx
81006ad0:	8b 45 10             	mov    0x10(%ebp),%eax
81006ad3:	89 10                	mov    %edx,(%eax)
81006ad5:	89 f0                	mov    %esi,%eax
81006ad7:	5b                   	pop    %ebx
81006ad8:	5e                   	pop    %esi
81006ad9:	5f                   	pop    %edi
81006ada:	5d                   	pop    %ebp
81006adb:	c3                   	ret    

81006adc <_fputc_r>:
81006adc:	55                   	push   %ebp
81006add:	89 e5                	mov    %esp,%ebp
81006adf:	83 ec 18             	sub    $0x18,%esp
81006ae2:	8b 45 08             	mov    0x8(%ebp),%eax
81006ae5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ae8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006aec:	74 18                	je     81006b06 <_fputc_r+0x2a>
81006aee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006af1:	8b 40 38             	mov    0x38(%eax),%eax
81006af4:	85 c0                	test   %eax,%eax
81006af6:	75 0e                	jne    81006b06 <_fputc_r+0x2a>
81006af8:	83 ec 0c             	sub    $0xc,%esp
81006afb:	ff 75 f4             	push   -0xc(%ebp)
81006afe:	e8 bc a9 ff ff       	call   810014bf <__sinit>
81006b03:	83 c4 10             	add    $0x10,%esp
81006b06:	83 ec 04             	sub    $0x4,%esp
81006b09:	ff 75 10             	push   0x10(%ebp)
81006b0c:	ff 75 0c             	push   0xc(%ebp)
81006b0f:	ff 75 08             	push   0x8(%ebp)
81006b12:	e8 80 05 00 00       	call   81007097 <_putc_r>
81006b17:	83 c4 10             	add    $0x10,%esp
81006b1a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006b1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006b20:	c9                   	leave  
81006b21:	c3                   	ret    

81006b22 <fputc>:
81006b22:	55                   	push   %ebp
81006b23:	89 e5                	mov    %esp,%ebp
81006b25:	83 ec 18             	sub    $0x18,%esp
81006b28:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006b2d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b30:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b33:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006b36:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006b3a:	74 18                	je     81006b54 <fputc+0x32>
81006b3c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006b3f:	8b 40 38             	mov    0x38(%eax),%eax
81006b42:	85 c0                	test   %eax,%eax
81006b44:	75 0e                	jne    81006b54 <fputc+0x32>
81006b46:	83 ec 0c             	sub    $0xc,%esp
81006b49:	ff 75 f0             	push   -0x10(%ebp)
81006b4c:	e8 6e a9 ff ff       	call   810014bf <__sinit>
81006b51:	83 c4 10             	add    $0x10,%esp
81006b54:	83 ec 04             	sub    $0x4,%esp
81006b57:	ff 75 0c             	push   0xc(%ebp)
81006b5a:	ff 75 08             	push   0x8(%ebp)
81006b5d:	ff 75 f4             	push   -0xc(%ebp)
81006b60:	e8 32 05 00 00       	call   81007097 <_putc_r>
81006b65:	83 c4 10             	add    $0x10,%esp
81006b68:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006b6b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006b6e:	c9                   	leave  
81006b6f:	c3                   	ret    

81006b70 <__sputc_r>:
81006b70:	55                   	push   %ebp
81006b71:	89 e5                	mov    %esp,%ebp
81006b73:	83 ec 08             	sub    $0x8,%esp
81006b76:	8b 45 10             	mov    0x10(%ebp),%eax
81006b79:	8b 40 08             	mov    0x8(%eax),%eax
81006b7c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006b7f:	8b 45 10             	mov    0x10(%ebp),%eax
81006b82:	89 50 08             	mov    %edx,0x8(%eax)
81006b85:	8b 45 10             	mov    0x10(%ebp),%eax
81006b88:	8b 40 08             	mov    0x8(%eax),%eax
81006b8b:	85 c0                	test   %eax,%eax
81006b8d:	79 17                	jns    81006ba6 <__sputc_r+0x36>
81006b8f:	8b 45 10             	mov    0x10(%ebp),%eax
81006b92:	8b 50 08             	mov    0x8(%eax),%edx
81006b95:	8b 45 10             	mov    0x10(%ebp),%eax
81006b98:	8b 40 18             	mov    0x18(%eax),%eax
81006b9b:	39 c2                	cmp    %eax,%edx
81006b9d:	7c 21                	jl     81006bc0 <__sputc_r+0x50>
81006b9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ba2:	3c 0a                	cmp    $0xa,%al
81006ba4:	74 1a                	je     81006bc0 <__sputc_r+0x50>
81006ba6:	8b 45 10             	mov    0x10(%ebp),%eax
81006ba9:	8b 00                	mov    (%eax),%eax
81006bab:	8d 48 01             	lea    0x1(%eax),%ecx
81006bae:	8b 55 10             	mov    0x10(%ebp),%edx
81006bb1:	89 0a                	mov    %ecx,(%edx)
81006bb3:	8b 55 0c             	mov    0xc(%ebp),%edx
81006bb6:	88 10                	mov    %dl,(%eax)
81006bb8:	0f b6 00             	movzbl (%eax),%eax
81006bbb:	0f b6 c0             	movzbl %al,%eax
81006bbe:	eb 14                	jmp    81006bd4 <__sputc_r+0x64>
81006bc0:	83 ec 04             	sub    $0x4,%esp
81006bc3:	ff 75 10             	push   0x10(%ebp)
81006bc6:	ff 75 0c             	push   0xc(%ebp)
81006bc9:	ff 75 08             	push   0x8(%ebp)
81006bcc:	e8 1e fa ff ff       	call   810065ef <__swbuf_r>
81006bd1:	83 c4 10             	add    $0x10,%esp
81006bd4:	c9                   	leave  
81006bd5:	c3                   	ret    

81006bd6 <__fputwc>:
81006bd6:	55                   	push   %ebp
81006bd7:	89 e5                	mov    %esp,%ebp
81006bd9:	83 ec 18             	sub    $0x18,%esp
81006bdc:	e8 41 03 00 00       	call   81006f22 <__locale_mb_cur_max>
81006be1:	83 f8 01             	cmp    $0x1,%eax
81006be4:	75 1e                	jne    81006c04 <__fputwc+0x2e>
81006be6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006bea:	7e 18                	jle    81006c04 <__fputwc+0x2e>
81006bec:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006bf3:	7f 0f                	jg     81006c04 <__fputwc+0x2e>
81006bf5:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bf8:	88 45 ef             	mov    %al,-0x11(%ebp)
81006bfb:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006c02:	eb 3c                	jmp    81006c40 <__fputwc+0x6a>
81006c04:	8b 45 10             	mov    0x10(%ebp),%eax
81006c07:	83 c0 5c             	add    $0x5c,%eax
81006c0a:	50                   	push   %eax
81006c0b:	ff 75 0c             	push   0xc(%ebp)
81006c0e:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006c11:	50                   	push   %eax
81006c12:	ff 75 08             	push   0x8(%ebp)
81006c15:	e8 58 06 00 00       	call   81007272 <_wcrtomb_r>
81006c1a:	83 c4 10             	add    $0x10,%esp
81006c1d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c20:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006c24:	75 1a                	jne    81006c40 <__fputwc+0x6a>
81006c26:	8b 45 10             	mov    0x10(%ebp),%eax
81006c29:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006c2d:	83 c8 40             	or     $0x40,%eax
81006c30:	89 c2                	mov    %eax,%edx
81006c32:	8b 45 10             	mov    0x10(%ebp),%eax
81006c35:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006c39:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c3e:	eb 44                	jmp    81006c84 <__fputwc+0xae>
81006c40:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006c47:	eb 30                	jmp    81006c79 <__fputwc+0xa3>
81006c49:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006c4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c4f:	01 d0                	add    %edx,%eax
81006c51:	0f b6 00             	movzbl (%eax),%eax
81006c54:	0f b6 c0             	movzbl %al,%eax
81006c57:	83 ec 04             	sub    $0x4,%esp
81006c5a:	ff 75 10             	push   0x10(%ebp)
81006c5d:	50                   	push   %eax
81006c5e:	ff 75 08             	push   0x8(%ebp)
81006c61:	e8 0a ff ff ff       	call   81006b70 <__sputc_r>
81006c66:	83 c4 10             	add    $0x10,%esp
81006c69:	83 f8 ff             	cmp    $0xffffffff,%eax
81006c6c:	75 07                	jne    81006c75 <__fputwc+0x9f>
81006c6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c73:	eb 0f                	jmp    81006c84 <__fputwc+0xae>
81006c75:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006c79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c7c:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006c7f:	72 c8                	jb     81006c49 <__fputwc+0x73>
81006c81:	8b 45 0c             	mov    0xc(%ebp),%eax
81006c84:	c9                   	leave  
81006c85:	c3                   	ret    

81006c86 <_fputwc_r>:
81006c86:	55                   	push   %ebp
81006c87:	89 e5                	mov    %esp,%ebp
81006c89:	83 ec 18             	sub    $0x18,%esp
81006c8c:	8b 45 10             	mov    0x10(%ebp),%eax
81006c8f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006c93:	98                   	cwtl   
81006c94:	25 00 20 00 00       	and    $0x2000,%eax
81006c99:	85 c0                	test   %eax,%eax
81006c9b:	75 24                	jne    81006cc1 <_fputwc_r+0x3b>
81006c9d:	8b 45 10             	mov    0x10(%ebp),%eax
81006ca0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006ca4:	80 cc 20             	or     $0x20,%ah
81006ca7:	89 c2                	mov    %eax,%edx
81006ca9:	8b 45 10             	mov    0x10(%ebp),%eax
81006cac:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006cb0:	8b 45 10             	mov    0x10(%ebp),%eax
81006cb3:	8b 40 64             	mov    0x64(%eax),%eax
81006cb6:	80 cc 20             	or     $0x20,%ah
81006cb9:	89 c2                	mov    %eax,%edx
81006cbb:	8b 45 10             	mov    0x10(%ebp),%eax
81006cbe:	89 50 64             	mov    %edx,0x64(%eax)
81006cc1:	83 ec 04             	sub    $0x4,%esp
81006cc4:	ff 75 10             	push   0x10(%ebp)
81006cc7:	ff 75 0c             	push   0xc(%ebp)
81006cca:	ff 75 08             	push   0x8(%ebp)
81006ccd:	e8 04 ff ff ff       	call   81006bd6 <__fputwc>
81006cd2:	83 c4 10             	add    $0x10,%esp
81006cd5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cdb:	c9                   	leave  
81006cdc:	c3                   	ret    

81006cdd <fputwc>:
81006cdd:	55                   	push   %ebp
81006cde:	89 e5                	mov    %esp,%ebp
81006ce0:	83 ec 18             	sub    $0x18,%esp
81006ce3:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006ce8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ceb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cee:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006cf1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006cf5:	74 18                	je     81006d0f <fputwc+0x32>
81006cf7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006cfa:	8b 40 38             	mov    0x38(%eax),%eax
81006cfd:	85 c0                	test   %eax,%eax
81006cff:	75 0e                	jne    81006d0f <fputwc+0x32>
81006d01:	83 ec 0c             	sub    $0xc,%esp
81006d04:	ff 75 f0             	push   -0x10(%ebp)
81006d07:	e8 b3 a7 ff ff       	call   810014bf <__sinit>
81006d0c:	83 c4 10             	add    $0x10,%esp
81006d0f:	83 ec 04             	sub    $0x4,%esp
81006d12:	ff 75 0c             	push   0xc(%ebp)
81006d15:	ff 75 08             	push   0x8(%ebp)
81006d18:	ff 75 f4             	push   -0xc(%ebp)
81006d1b:	e8 66 ff ff ff       	call   81006c86 <_fputwc_r>
81006d20:	83 c4 10             	add    $0x10,%esp
81006d23:	c9                   	leave  
81006d24:	c3                   	ret    

81006d25 <_findenv>:
81006d25:	55                   	push   %ebp
81006d26:	89 e5                	mov    %esp,%ebp
81006d28:	83 ec 08             	sub    $0x8,%esp
81006d2b:	8b 55 08             	mov    0x8(%ebp),%edx
81006d2e:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006d33:	83 ec 04             	sub    $0x4,%esp
81006d36:	ff 75 0c             	push   0xc(%ebp)
81006d39:	52                   	push   %edx
81006d3a:	50                   	push   %eax
81006d3b:	e8 25 00 00 00       	call   81006d65 <_findenv_r>
81006d40:	83 c4 10             	add    $0x10,%esp
81006d43:	c9                   	leave  
81006d44:	c3                   	ret    

81006d45 <getenv>:
81006d45:	55                   	push   %ebp
81006d46:	89 e5                	mov    %esp,%ebp
81006d48:	83 ec 18             	sub    $0x18,%esp
81006d4b:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006d50:	83 ec 04             	sub    $0x4,%esp
81006d53:	8d 55 f4             	lea    -0xc(%ebp),%edx
81006d56:	52                   	push   %edx
81006d57:	ff 75 08             	push   0x8(%ebp)
81006d5a:	50                   	push   %eax
81006d5b:	e8 05 00 00 00       	call   81006d65 <_findenv_r>
81006d60:	83 c4 10             	add    $0x10,%esp
81006d63:	c9                   	leave  
81006d64:	c3                   	ret    

81006d65 <_findenv_r>:
81006d65:	55                   	push   %ebp
81006d66:	89 e5                	mov    %esp,%ebp
81006d68:	57                   	push   %edi
81006d69:	56                   	push   %esi
81006d6a:	53                   	push   %ebx
81006d6b:	83 ec 1c             	sub    $0x1c,%esp
81006d6e:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006d71:	83 ec 0c             	sub    $0xc,%esp
81006d74:	ff 75 08             	push   0x8(%ebp)
81006d77:	e8 67 06 00 00       	call   810073e3 <__env_lock>
81006d7c:	83 c4 10             	add    $0x10,%esp
81006d7f:	a1 50 83 00 81       	mov    0x81008350,%eax
81006d84:	8b 00                	mov    (%eax),%eax
81006d86:	85 c0                	test   %eax,%eax
81006d88:	75 18                	jne    81006da2 <_findenv_r+0x3d>
81006d8a:	83 ec 0c             	sub    $0xc,%esp
81006d8d:	ff 75 08             	push   0x8(%ebp)
81006d90:	e8 54 06 00 00       	call   810073e9 <__env_unlock>
81006d95:	83 c4 10             	add    $0x10,%esp
81006d98:	b8 00 00 00 00       	mov    $0x0,%eax
81006d9d:	e9 a8 00 00 00       	jmp    81006e4a <_findenv_r+0xe5>
81006da2:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81006da5:	eb 04                	jmp    81006dab <_findenv_r+0x46>
81006da7:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006dab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dae:	0f b6 00             	movzbl (%eax),%eax
81006db1:	84 c0                	test   %al,%al
81006db3:	74 0a                	je     81006dbf <_findenv_r+0x5a>
81006db5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006db8:	0f b6 00             	movzbl (%eax),%eax
81006dbb:	3c 3d                	cmp    $0x3d,%al
81006dbd:	75 e8                	jne    81006da7 <_findenv_r+0x42>
81006dbf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dc2:	0f b6 00             	movzbl (%eax),%eax
81006dc5:	3c 3d                	cmp    $0x3d,%al
81006dc7:	74 6e                	je     81006e37 <_findenv_r+0xd2>
81006dc9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dcc:	29 f8                	sub    %edi,%eax
81006dce:	89 c6                	mov    %eax,%esi
81006dd0:	a1 50 83 00 81       	mov    0x81008350,%eax
81006dd5:	8b 18                	mov    (%eax),%ebx
81006dd7:	eb 58                	jmp    81006e31 <_findenv_r+0xcc>
81006dd9:	89 f2                	mov    %esi,%edx
81006ddb:	8b 03                	mov    (%ebx),%eax
81006ddd:	83 ec 04             	sub    $0x4,%esp
81006de0:	52                   	push   %edx
81006de1:	57                   	push   %edi
81006de2:	50                   	push   %eax
81006de3:	e8 93 03 00 00       	call   8100717b <strncmp>
81006de8:	83 c4 10             	add    $0x10,%esp
81006deb:	85 c0                	test   %eax,%eax
81006ded:	75 3f                	jne    81006e2e <_findenv_r+0xc9>
81006def:	8b 03                	mov    (%ebx),%eax
81006df1:	89 f2                	mov    %esi,%edx
81006df3:	01 d0                	add    %edx,%eax
81006df5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006df8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dfb:	0f b6 00             	movzbl (%eax),%eax
81006dfe:	3c 3d                	cmp    $0x3d,%al
81006e00:	75 2c                	jne    81006e2e <_findenv_r+0xc9>
81006e02:	a1 50 83 00 81       	mov    0x81008350,%eax
81006e07:	8b 10                	mov    (%eax),%edx
81006e09:	89 d8                	mov    %ebx,%eax
81006e0b:	29 d0                	sub    %edx,%eax
81006e0d:	c1 f8 02             	sar    $0x2,%eax
81006e10:	89 c2                	mov    %eax,%edx
81006e12:	8b 45 10             	mov    0x10(%ebp),%eax
81006e15:	89 10                	mov    %edx,(%eax)
81006e17:	83 ec 0c             	sub    $0xc,%esp
81006e1a:	ff 75 08             	push   0x8(%ebp)
81006e1d:	e8 c7 05 00 00       	call   810073e9 <__env_unlock>
81006e22:	83 c4 10             	add    $0x10,%esp
81006e25:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006e29:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e2c:	eb 1c                	jmp    81006e4a <_findenv_r+0xe5>
81006e2e:	83 c3 04             	add    $0x4,%ebx
81006e31:	8b 03                	mov    (%ebx),%eax
81006e33:	85 c0                	test   %eax,%eax
81006e35:	75 a2                	jne    81006dd9 <_findenv_r+0x74>
81006e37:	83 ec 0c             	sub    $0xc,%esp
81006e3a:	ff 75 08             	push   0x8(%ebp)
81006e3d:	e8 a7 05 00 00       	call   810073e9 <__env_unlock>
81006e42:	83 c4 10             	add    $0x10,%esp
81006e45:	b8 00 00 00 00       	mov    $0x0,%eax
81006e4a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e4d:	5b                   	pop    %ebx
81006e4e:	5e                   	pop    %esi
81006e4f:	5f                   	pop    %edi
81006e50:	5d                   	pop    %ebp
81006e51:	c3                   	ret    

81006e52 <_getenv_r>:
81006e52:	55                   	push   %ebp
81006e53:	89 e5                	mov    %esp,%ebp
81006e55:	83 ec 18             	sub    $0x18,%esp
81006e58:	83 ec 04             	sub    $0x4,%esp
81006e5b:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006e5e:	50                   	push   %eax
81006e5f:	ff 75 0c             	push   0xc(%ebp)
81006e62:	ff 75 08             	push   0x8(%ebp)
81006e65:	e8 fb fe ff ff       	call   81006d65 <_findenv_r>
81006e6a:	83 c4 10             	add    $0x10,%esp
81006e6d:	c9                   	leave  
81006e6e:	c3                   	ret    

81006e6f <_isatty_r>:
81006e6f:	55                   	push   %ebp
81006e70:	89 e5                	mov    %esp,%ebp
81006e72:	83 ec 18             	sub    $0x18,%esp
81006e75:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
81006e7c:	00 00 00 
81006e7f:	83 ec 0c             	sub    $0xc,%esp
81006e82:	ff 75 0c             	push   0xc(%ebp)
81006e85:	e8 c6 9b ff ff       	call   81000a50 <isatty>
81006e8a:	83 c4 10             	add    $0x10,%esp
81006e8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006e90:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006e94:	75 14                	jne    81006eaa <_isatty_r+0x3b>
81006e96:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81006e9b:	85 c0                	test   %eax,%eax
81006e9d:	74 0b                	je     81006eaa <_isatty_r+0x3b>
81006e9f:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
81006ea5:	8b 45 08             	mov    0x8(%ebp),%eax
81006ea8:	89 10                	mov    %edx,(%eax)
81006eaa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ead:	c9                   	leave  
81006eae:	c3                   	ret    

81006eaf <__get_global_locale>:
81006eaf:	55                   	push   %ebp
81006eb0:	89 e5                	mov    %esp,%ebp
81006eb2:	b8 60 83 00 81       	mov    $0x81008360,%eax
81006eb7:	5d                   	pop    %ebp
81006eb8:	c3                   	ret    

81006eb9 <__get_current_locale>:
81006eb9:	55                   	push   %ebp
81006eba:	89 e5                	mov    %esp,%ebp
81006ebc:	e8 ee ff ff ff       	call   81006eaf <__get_global_locale>
81006ec1:	5d                   	pop    %ebp
81006ec2:	c3                   	ret    

81006ec3 <_setlocale_r>:
81006ec3:	55                   	push   %ebp
81006ec4:	89 e5                	mov    %esp,%ebp
81006ec6:	83 ec 08             	sub    $0x8,%esp
81006ec9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006ecd:	74 4c                	je     81006f1b <_setlocale_r+0x58>
81006ecf:	83 ec 08             	sub    $0x8,%esp
81006ed2:	68 c4 7a 00 81       	push   $0x81007ac4
81006ed7:	ff 75 10             	push   0x10(%ebp)
81006eda:	e8 7d f2 ff ff       	call   8100615c <strcmp>
81006edf:	83 c4 10             	add    $0x10,%esp
81006ee2:	85 c0                	test   %eax,%eax
81006ee4:	74 35                	je     81006f1b <_setlocale_r+0x58>
81006ee6:	83 ec 08             	sub    $0x8,%esp
81006ee9:	68 ca 7a 00 81       	push   $0x81007aca
81006eee:	ff 75 10             	push   0x10(%ebp)
81006ef1:	e8 66 f2 ff ff       	call   8100615c <strcmp>
81006ef6:	83 c4 10             	add    $0x10,%esp
81006ef9:	85 c0                	test   %eax,%eax
81006efb:	74 1e                	je     81006f1b <_setlocale_r+0x58>
81006efd:	83 ec 08             	sub    $0x8,%esp
81006f00:	68 c3 7a 00 81       	push   $0x81007ac3
81006f05:	ff 75 10             	push   0x10(%ebp)
81006f08:	e8 4f f2 ff ff       	call   8100615c <strcmp>
81006f0d:	83 c4 10             	add    $0x10,%esp
81006f10:	85 c0                	test   %eax,%eax
81006f12:	74 07                	je     81006f1b <_setlocale_r+0x58>
81006f14:	b8 00 00 00 00       	mov    $0x0,%eax
81006f19:	eb 05                	jmp    81006f20 <_setlocale_r+0x5d>
81006f1b:	b8 ca 7a 00 81       	mov    $0x81007aca,%eax
81006f20:	c9                   	leave  
81006f21:	c3                   	ret    

81006f22 <__locale_mb_cur_max>:
81006f22:	55                   	push   %ebp
81006f23:	89 e5                	mov    %esp,%ebp
81006f25:	e8 8f ff ff ff       	call   81006eb9 <__get_current_locale>
81006f2a:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006f31:	0f be c0             	movsbl %al,%eax
81006f34:	5d                   	pop    %ebp
81006f35:	c3                   	ret    

81006f36 <setlocale>:
81006f36:	55                   	push   %ebp
81006f37:	89 e5                	mov    %esp,%ebp
81006f39:	83 ec 08             	sub    $0x8,%esp
81006f3c:	a1 24 7f 00 81       	mov    0x81007f24,%eax
81006f41:	83 ec 04             	sub    $0x4,%esp
81006f44:	ff 75 0c             	push   0xc(%ebp)
81006f47:	ff 75 08             	push   0x8(%ebp)
81006f4a:	50                   	push   %eax
81006f4b:	e8 73 ff ff ff       	call   81006ec3 <_setlocale_r>
81006f50:	83 c4 10             	add    $0x10,%esp
81006f53:	c9                   	leave  
81006f54:	c3                   	ret    

81006f55 <_lseek_r>:
81006f55:	55                   	push   %ebp
81006f56:	89 e5                	mov    %esp,%ebp
81006f58:	83 ec 18             	sub    $0x18,%esp
81006f5b:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
81006f62:	00 00 00 
81006f65:	83 ec 04             	sub    $0x4,%esp
81006f68:	ff 75 14             	push   0x14(%ebp)
81006f6b:	ff 75 10             	push   0x10(%ebp)
81006f6e:	ff 75 0c             	push   0xc(%ebp)
81006f71:	e8 ad 9a ff ff       	call   81000a23 <lseek>
81006f76:	83 c4 10             	add    $0x10,%esp
81006f79:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006f7c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006f80:	75 14                	jne    81006f96 <_lseek_r+0x41>
81006f82:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81006f87:	85 c0                	test   %eax,%eax
81006f89:	74 0b                	je     81006f96 <_lseek_r+0x41>
81006f8b:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
81006f91:	8b 45 08             	mov    0x8(%ebp),%eax
81006f94:	89 10                	mov    %edx,(%eax)
81006f96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006f99:	c9                   	leave  
81006f9a:	c3                   	ret    

81006f9b <__get_global_locale>:
81006f9b:	55                   	push   %ebp
81006f9c:	89 e5                	mov    %esp,%ebp
81006f9e:	b8 60 83 00 81       	mov    $0x81008360,%eax
81006fa3:	5d                   	pop    %ebp
81006fa4:	c3                   	ret    

81006fa5 <__get_current_locale>:
81006fa5:	55                   	push   %ebp
81006fa6:	89 e5                	mov    %esp,%ebp
81006fa8:	e8 ee ff ff ff       	call   81006f9b <__get_global_locale>
81006fad:	5d                   	pop    %ebp
81006fae:	c3                   	ret    

81006faf <_mbtowc_r>:
81006faf:	55                   	push   %ebp
81006fb0:	89 e5                	mov    %esp,%ebp
81006fb2:	83 ec 08             	sub    $0x8,%esp
81006fb5:	e8 eb ff ff ff       	call   81006fa5 <__get_current_locale>
81006fba:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006fc0:	83 ec 0c             	sub    $0xc,%esp
81006fc3:	ff 75 18             	push   0x18(%ebp)
81006fc6:	ff 75 14             	push   0x14(%ebp)
81006fc9:	ff 75 10             	push   0x10(%ebp)
81006fcc:	ff 75 0c             	push   0xc(%ebp)
81006fcf:	ff 75 08             	push   0x8(%ebp)
81006fd2:	ff d0                	call   *%eax
81006fd4:	83 c4 20             	add    $0x20,%esp
81006fd7:	c9                   	leave  
81006fd8:	c3                   	ret    

81006fd9 <__ascii_mbtowc>:
81006fd9:	55                   	push   %ebp
81006fda:	89 e5                	mov    %esp,%ebp
81006fdc:	83 ec 10             	sub    $0x10,%esp
81006fdf:	8b 45 10             	mov    0x10(%ebp),%eax
81006fe2:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006fe5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006fe9:	75 06                	jne    81006ff1 <__ascii_mbtowc+0x18>
81006feb:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006fee:	89 45 0c             	mov    %eax,0xc(%ebp)
81006ff1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006ff5:	75 07                	jne    81006ffe <__ascii_mbtowc+0x25>
81006ff7:	b8 00 00 00 00       	mov    $0x0,%eax
81006ffc:	eb 31                	jmp    8100702f <__ascii_mbtowc+0x56>
81006ffe:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81007002:	75 07                	jne    8100700b <__ascii_mbtowc+0x32>
81007004:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007009:	eb 24                	jmp    8100702f <__ascii_mbtowc+0x56>
8100700b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100700e:	0f b6 00             	movzbl (%eax),%eax
81007011:	0f b6 d0             	movzbl %al,%edx
81007014:	8b 45 0c             	mov    0xc(%ebp),%eax
81007017:	89 10                	mov    %edx,(%eax)
81007019:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100701c:	0f b6 00             	movzbl (%eax),%eax
8100701f:	84 c0                	test   %al,%al
81007021:	75 07                	jne    8100702a <__ascii_mbtowc+0x51>
81007023:	b8 00 00 00 00       	mov    $0x0,%eax
81007028:	eb 05                	jmp    8100702f <__ascii_mbtowc+0x56>
8100702a:	b8 01 00 00 00       	mov    $0x1,%eax
8100702f:	c9                   	leave  
81007030:	c3                   	ret    

81007031 <__sputc_r>:
81007031:	55                   	push   %ebp
81007032:	89 e5                	mov    %esp,%ebp
81007034:	83 ec 08             	sub    $0x8,%esp
81007037:	8b 45 10             	mov    0x10(%ebp),%eax
8100703a:	8b 40 08             	mov    0x8(%eax),%eax
8100703d:	8d 50 ff             	lea    -0x1(%eax),%edx
81007040:	8b 45 10             	mov    0x10(%ebp),%eax
81007043:	89 50 08             	mov    %edx,0x8(%eax)
81007046:	8b 45 10             	mov    0x10(%ebp),%eax
81007049:	8b 40 08             	mov    0x8(%eax),%eax
8100704c:	85 c0                	test   %eax,%eax
8100704e:	79 17                	jns    81007067 <__sputc_r+0x36>
81007050:	8b 45 10             	mov    0x10(%ebp),%eax
81007053:	8b 50 08             	mov    0x8(%eax),%edx
81007056:	8b 45 10             	mov    0x10(%ebp),%eax
81007059:	8b 40 18             	mov    0x18(%eax),%eax
8100705c:	39 c2                	cmp    %eax,%edx
8100705e:	7c 21                	jl     81007081 <__sputc_r+0x50>
81007060:	8b 45 0c             	mov    0xc(%ebp),%eax
81007063:	3c 0a                	cmp    $0xa,%al
81007065:	74 1a                	je     81007081 <__sputc_r+0x50>
81007067:	8b 45 10             	mov    0x10(%ebp),%eax
8100706a:	8b 00                	mov    (%eax),%eax
8100706c:	8d 48 01             	lea    0x1(%eax),%ecx
8100706f:	8b 55 10             	mov    0x10(%ebp),%edx
81007072:	89 0a                	mov    %ecx,(%edx)
81007074:	8b 55 0c             	mov    0xc(%ebp),%edx
81007077:	88 10                	mov    %dl,(%eax)
81007079:	0f b6 00             	movzbl (%eax),%eax
8100707c:	0f b6 c0             	movzbl %al,%eax
8100707f:	eb 14                	jmp    81007095 <__sputc_r+0x64>
81007081:	83 ec 04             	sub    $0x4,%esp
81007084:	ff 75 10             	push   0x10(%ebp)
81007087:	ff 75 0c             	push   0xc(%ebp)
8100708a:	ff 75 08             	push   0x8(%ebp)
8100708d:	e8 5d f5 ff ff       	call   810065ef <__swbuf_r>
81007092:	83 c4 10             	add    $0x10,%esp
81007095:	c9                   	leave  
81007096:	c3                   	ret    

81007097 <_putc_r>:
81007097:	55                   	push   %ebp
81007098:	89 e5                	mov    %esp,%ebp
8100709a:	53                   	push   %ebx
8100709b:	83 ec 14             	sub    $0x14,%esp
8100709e:	8b 5d 10             	mov    0x10(%ebp),%ebx
810070a1:	8b 45 08             	mov    0x8(%ebp),%eax
810070a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810070a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810070ab:	74 18                	je     810070c5 <_putc_r+0x2e>
810070ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070b0:	8b 40 38             	mov    0x38(%eax),%eax
810070b3:	85 c0                	test   %eax,%eax
810070b5:	75 0e                	jne    810070c5 <_putc_r+0x2e>
810070b7:	83 ec 0c             	sub    $0xc,%esp
810070ba:	ff 75 f4             	push   -0xc(%ebp)
810070bd:	e8 fd a3 ff ff       	call   810014bf <__sinit>
810070c2:	83 c4 10             	add    $0x10,%esp
810070c5:	83 ec 04             	sub    $0x4,%esp
810070c8:	53                   	push   %ebx
810070c9:	ff 75 0c             	push   0xc(%ebp)
810070cc:	ff 75 08             	push   0x8(%ebp)
810070cf:	e8 5d ff ff ff       	call   81007031 <__sputc_r>
810070d4:	83 c4 10             	add    $0x10,%esp
810070d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810070dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810070e0:	c9                   	leave  
810070e1:	c3                   	ret    

810070e2 <putc>:
810070e2:	55                   	push   %ebp
810070e3:	89 e5                	mov    %esp,%ebp
810070e5:	53                   	push   %ebx
810070e6:	83 ec 14             	sub    $0x14,%esp
810070e9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810070ec:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810070f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810070f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070fa:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810070fe:	74 18                	je     81007118 <putc+0x36>
81007100:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007103:	8b 40 38             	mov    0x38(%eax),%eax
81007106:	85 c0                	test   %eax,%eax
81007108:	75 0e                	jne    81007118 <putc+0x36>
8100710a:	83 ec 0c             	sub    $0xc,%esp
8100710d:	ff 75 f0             	push   -0x10(%ebp)
81007110:	e8 aa a3 ff ff       	call   810014bf <__sinit>
81007115:	83 c4 10             	add    $0x10,%esp
81007118:	83 ec 04             	sub    $0x4,%esp
8100711b:	53                   	push   %ebx
8100711c:	ff 75 08             	push   0x8(%ebp)
8100711f:	ff 75 f4             	push   -0xc(%ebp)
81007122:	e8 0a ff ff ff       	call   81007031 <__sputc_r>
81007127:	83 c4 10             	add    $0x10,%esp
8100712a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100712d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007130:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007133:	c9                   	leave  
81007134:	c3                   	ret    

81007135 <_read_r>:
81007135:	55                   	push   %ebp
81007136:	89 e5                	mov    %esp,%ebp
81007138:	83 ec 18             	sub    $0x18,%esp
8100713b:	c7 05 6c 8b 00 81 00 	movl   $0x0,0x81008b6c
81007142:	00 00 00 
81007145:	83 ec 04             	sub    $0x4,%esp
81007148:	ff 75 14             	push   0x14(%ebp)
8100714b:	ff 75 10             	push   0x10(%ebp)
8100714e:	ff 75 0c             	push   0xc(%ebp)
81007151:	e8 52 98 ff ff       	call   810009a8 <read>
81007156:	83 c4 10             	add    $0x10,%esp
81007159:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100715c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007160:	75 14                	jne    81007176 <_read_r+0x41>
81007162:	a1 6c 8b 00 81       	mov    0x81008b6c,%eax
81007167:	85 c0                	test   %eax,%eax
81007169:	74 0b                	je     81007176 <_read_r+0x41>
8100716b:	8b 15 6c 8b 00 81    	mov    0x81008b6c,%edx
81007171:	8b 45 08             	mov    0x8(%ebp),%eax
81007174:	89 10                	mov    %edx,(%eax)
81007176:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007179:	c9                   	leave  
8100717a:	c3                   	ret    

8100717b <strncmp>:
8100717b:	55                   	push   %ebp
8100717c:	89 e5                	mov    %esp,%ebp
8100717e:	83 ec 10             	sub    $0x10,%esp
81007181:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007185:	75 0a                	jne    81007191 <strncmp+0x16>
81007187:	b8 00 00 00 00       	mov    $0x0,%eax
8100718c:	e9 cb 00 00 00       	jmp    8100725c <strncmp+0xe1>
81007191:	8b 55 08             	mov    0x8(%ebp),%edx
81007194:	8b 45 0c             	mov    0xc(%ebp),%eax
81007197:	09 d0                	or     %edx,%eax
81007199:	83 e0 03             	and    $0x3,%eax
8100719c:	85 c0                	test   %eax,%eax
8100719e:	0f 85 85 00 00 00    	jne    81007229 <strncmp+0xae>
810071a4:	8b 45 08             	mov    0x8(%ebp),%eax
810071a7:	89 45 fc             	mov    %eax,-0x4(%ebp)
810071aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810071ad:	89 45 f8             	mov    %eax,-0x8(%ebp)
810071b0:	eb 36                	jmp    810071e8 <strncmp+0x6d>
810071b2:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810071b6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810071ba:	74 1d                	je     810071d9 <strncmp+0x5e>
810071bc:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071bf:	8b 00                	mov    (%eax),%eax
810071c1:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810071c7:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071ca:	8b 00                	mov    (%eax),%eax
810071cc:	f7 d0                	not    %eax
810071ce:	21 d0                	and    %edx,%eax
810071d0:	25 80 80 80 80       	and    $0x80808080,%eax
810071d5:	85 c0                	test   %eax,%eax
810071d7:	74 07                	je     810071e0 <strncmp+0x65>
810071d9:	b8 00 00 00 00       	mov    $0x0,%eax
810071de:	eb 7c                	jmp    8100725c <strncmp+0xe1>
810071e0:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810071e4:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810071e8:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810071ec:	76 0e                	jbe    810071fc <strncmp+0x81>
810071ee:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071f1:	8b 10                	mov    (%eax),%edx
810071f3:	8b 45 f8             	mov    -0x8(%ebp),%eax
810071f6:	8b 00                	mov    (%eax),%eax
810071f8:	39 c2                	cmp    %eax,%edx
810071fa:	74 b6                	je     810071b2 <strncmp+0x37>
810071fc:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071ff:	89 45 08             	mov    %eax,0x8(%ebp)
81007202:	8b 45 f8             	mov    -0x8(%ebp),%eax
81007205:	89 45 0c             	mov    %eax,0xc(%ebp)
81007208:	eb 1f                	jmp    81007229 <strncmp+0xae>
8100720a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100720e:	74 0a                	je     8100721a <strncmp+0x9f>
81007210:	8b 45 08             	mov    0x8(%ebp),%eax
81007213:	0f b6 00             	movzbl (%eax),%eax
81007216:	84 c0                	test   %al,%al
81007218:	75 07                	jne    81007221 <strncmp+0xa6>
8100721a:	b8 00 00 00 00       	mov    $0x0,%eax
8100721f:	eb 3b                	jmp    8100725c <strncmp+0xe1>
81007221:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81007225:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81007229:	8b 45 10             	mov    0x10(%ebp),%eax
8100722c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100722f:	89 55 10             	mov    %edx,0x10(%ebp)
81007232:	85 c0                	test   %eax,%eax
81007234:	74 10                	je     81007246 <strncmp+0xcb>
81007236:	8b 45 08             	mov    0x8(%ebp),%eax
81007239:	0f b6 10             	movzbl (%eax),%edx
8100723c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100723f:	0f b6 00             	movzbl (%eax),%eax
81007242:	38 c2                	cmp    %al,%dl
81007244:	74 c4                	je     8100720a <strncmp+0x8f>
81007246:	8b 45 08             	mov    0x8(%ebp),%eax
81007249:	0f b6 00             	movzbl (%eax),%eax
8100724c:	0f b6 d0             	movzbl %al,%edx
8100724f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007252:	0f b6 00             	movzbl (%eax),%eax
81007255:	0f b6 c8             	movzbl %al,%ecx
81007258:	89 d0                	mov    %edx,%eax
8100725a:	29 c8                	sub    %ecx,%eax
8100725c:	c9                   	leave  
8100725d:	c3                   	ret    

8100725e <__get_global_locale>:
8100725e:	55                   	push   %ebp
8100725f:	89 e5                	mov    %esp,%ebp
81007261:	b8 60 83 00 81       	mov    $0x81008360,%eax
81007266:	5d                   	pop    %ebp
81007267:	c3                   	ret    

81007268 <__get_current_locale>:
81007268:	55                   	push   %ebp
81007269:	89 e5                	mov    %esp,%ebp
8100726b:	e8 ee ff ff ff       	call   8100725e <__get_global_locale>
81007270:	5d                   	pop    %ebp
81007271:	c3                   	ret    

81007272 <_wcrtomb_r>:
81007272:	55                   	push   %ebp
81007273:	89 e5                	mov    %esp,%ebp
81007275:	83 ec 18             	sub    $0x18,%esp
81007278:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100727f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007283:	75 21                	jne    810072a6 <_wcrtomb_r+0x34>
81007285:	e8 de ff ff ff       	call   81007268 <__get_current_locale>
8100728a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007290:	ff 75 14             	push   0x14(%ebp)
81007293:	6a 00                	push   $0x0
81007295:	8d 55 ea             	lea    -0x16(%ebp),%edx
81007298:	52                   	push   %edx
81007299:	ff 75 08             	push   0x8(%ebp)
8100729c:	ff d0                	call   *%eax
8100729e:	83 c4 10             	add    $0x10,%esp
810072a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072a4:	eb 1f                	jmp    810072c5 <_wcrtomb_r+0x53>
810072a6:	e8 bd ff ff ff       	call   81007268 <__get_current_locale>
810072ab:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810072b1:	ff 75 14             	push   0x14(%ebp)
810072b4:	ff 75 10             	push   0x10(%ebp)
810072b7:	ff 75 0c             	push   0xc(%ebp)
810072ba:	ff 75 08             	push   0x8(%ebp)
810072bd:	ff d0                	call   *%eax
810072bf:	83 c4 10             	add    $0x10,%esp
810072c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072c5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810072c9:	75 19                	jne    810072e4 <_wcrtomb_r+0x72>
810072cb:	8b 45 14             	mov    0x14(%ebp),%eax
810072ce:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810072d4:	8b 45 08             	mov    0x8(%ebp),%eax
810072d7:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810072dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072e2:	eb 03                	jmp    810072e7 <_wcrtomb_r+0x75>
810072e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810072e7:	c9                   	leave  
810072e8:	c3                   	ret    

810072e9 <wcrtomb>:
810072e9:	55                   	push   %ebp
810072ea:	89 e5                	mov    %esp,%ebp
810072ec:	83 ec 28             	sub    $0x28,%esp
810072ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810072f6:	a1 24 7f 00 81       	mov    0x81007f24,%eax
810072fb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810072fe:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007302:	75 21                	jne    81007325 <wcrtomb+0x3c>
81007304:	e8 5f ff ff ff       	call   81007268 <__get_current_locale>
81007309:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100730f:	ff 75 10             	push   0x10(%ebp)
81007312:	6a 00                	push   $0x0
81007314:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81007317:	52                   	push   %edx
81007318:	ff 75 f0             	push   -0x10(%ebp)
8100731b:	ff d0                	call   *%eax
8100731d:	83 c4 10             	add    $0x10,%esp
81007320:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007323:	eb 1f                	jmp    81007344 <wcrtomb+0x5b>
81007325:	e8 3e ff ff ff       	call   81007268 <__get_current_locale>
8100732a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007330:	ff 75 10             	push   0x10(%ebp)
81007333:	ff 75 0c             	push   0xc(%ebp)
81007336:	ff 75 08             	push   0x8(%ebp)
81007339:	ff 75 f0             	push   -0x10(%ebp)
8100733c:	ff d0                	call   *%eax
8100733e:	83 c4 10             	add    $0x10,%esp
81007341:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007344:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007348:	75 19                	jne    81007363 <wcrtomb+0x7a>
8100734a:	8b 45 10             	mov    0x10(%ebp),%eax
8100734d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007353:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007356:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100735c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007361:	eb 03                	jmp    81007366 <wcrtomb+0x7d>
81007363:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007366:	c9                   	leave  
81007367:	c3                   	ret    

81007368 <__get_global_locale>:
81007368:	55                   	push   %ebp
81007369:	89 e5                	mov    %esp,%ebp
8100736b:	b8 60 83 00 81       	mov    $0x81008360,%eax
81007370:	5d                   	pop    %ebp
81007371:	c3                   	ret    

81007372 <__get_current_locale>:
81007372:	55                   	push   %ebp
81007373:	89 e5                	mov    %esp,%ebp
81007375:	e8 ee ff ff ff       	call   81007368 <__get_global_locale>
8100737a:	5d                   	pop    %ebp
8100737b:	c3                   	ret    

8100737c <_wctomb_r>:
8100737c:	55                   	push   %ebp
8100737d:	89 e5                	mov    %esp,%ebp
8100737f:	83 ec 08             	sub    $0x8,%esp
81007382:	e8 eb ff ff ff       	call   81007372 <__get_current_locale>
81007387:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100738d:	ff 75 14             	push   0x14(%ebp)
81007390:	ff 75 10             	push   0x10(%ebp)
81007393:	ff 75 0c             	push   0xc(%ebp)
81007396:	ff 75 08             	push   0x8(%ebp)
81007399:	ff d0                	call   *%eax
8100739b:	83 c4 10             	add    $0x10,%esp
8100739e:	c9                   	leave  
8100739f:	c3                   	ret    

810073a0 <__ascii_wctomb>:
810073a0:	55                   	push   %ebp
810073a1:	89 e5                	mov    %esp,%ebp
810073a3:	83 ec 10             	sub    $0x10,%esp
810073a6:	8b 45 10             	mov    0x10(%ebp),%eax
810073a9:	89 45 fc             	mov    %eax,-0x4(%ebp)
810073ac:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810073b0:	75 07                	jne    810073b9 <__ascii_wctomb+0x19>
810073b2:	b8 00 00 00 00       	mov    $0x0,%eax
810073b7:	eb 28                	jmp    810073e1 <__ascii_wctomb+0x41>
810073b9:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810073c0:	76 10                	jbe    810073d2 <__ascii_wctomb+0x32>
810073c2:	8b 45 08             	mov    0x8(%ebp),%eax
810073c5:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810073cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810073d0:	eb 0f                	jmp    810073e1 <__ascii_wctomb+0x41>
810073d2:	8b 45 fc             	mov    -0x4(%ebp),%eax
810073d5:	89 c2                	mov    %eax,%edx
810073d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810073da:	88 10                	mov    %dl,(%eax)
810073dc:	b8 01 00 00 00       	mov    $0x1,%eax
810073e1:	c9                   	leave  
810073e2:	c3                   	ret    

810073e3 <__env_lock>:
810073e3:	55                   	push   %ebp
810073e4:	89 e5                	mov    %esp,%ebp
810073e6:	90                   	nop
810073e7:	5d                   	pop    %ebp
810073e8:	c3                   	ret    

810073e9 <__env_unlock>:
810073e9:	55                   	push   %ebp
810073ea:	89 e5                	mov    %esp,%ebp
810073ec:	90                   	nop
810073ed:	5d                   	pop    %ebp
810073ee:	c3                   	ret    
