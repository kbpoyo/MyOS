
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100059a

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007a90 memsz 0x00008140 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006a6f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000060c  81006a80  81006a80  00007a80  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  810070a0  810070a0  000080a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81007aa0  81007aa0  00008a90  2**5
                  ALLOC
  4 .debug_info   00022a69  00000000  00000000  00008a90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00007d3a  00000000  00000000  0002b4f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000828  00000000  00000000  00033238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00004cbf  00000000  00000000  00033a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    000015d3  00000000  00000000  0003871f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00001488  00000000  00000000  00039cf2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0003b17a  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001a1c  00000000  00000000  0003b1b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0003cbd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007aa0 l     O .bss	00000200 cmd_buf
810070a0 l     O .data	00000004 prompt
81007ca0 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
81006be0 l     O .rodata	00000030 cmd_list
8100024b l     F .text	0000003e cli_init
81000289 l     F .text	00000033 show_prompt
810002bc l     F .text	00000043 find_builtin
810002ff l     F .text	00000049 run_builtin
81000348 l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000e2c l     F .text	000000ad std
81000ed9 l     F .text	0000001b stdin_init
81000ef4 l     F .text	0000001b stdout_init
81000f0f l     F .text	0000001b stderr_init
810080ac l     O .bss	00000004 __sfp_recursive_mutex
810080b0 l     O .bss	00000004 __sinit_recursive_mutex
810011d2 l     F .text	0000000a __fp_lock
810011dc l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
810080bc l     O .bss	00000004 optwhere
810080c0 l     O .bss	00000004 permute_from
810080c4 l     O .bss	00000004 num_nonopts
8100196f l     F .text	0000007b reverse_argv_elements
810019ea l     F .text	00000036 permute
81001a20 l     F .text	00000031 is_option
81001a51 l     F .text	00000059 read_globals
81001aaa l     F .text	00000052 write_globals
81001afc l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
810070c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
810027a0 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810032ed l       .text	00000000 L20
810032a4 l       .text	00000000 L5
810032ea l       .text	00000000 L15
810032b0 l       .text	00000000 L8
810032d1 l       .text	00000000 L9
810032e0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100333f l       .text	00000000 L4
81003331 l       .text	00000000 BYTECMP
8100332c l       .text	00000000 L5
81003333 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008128 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003500 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
810040c7 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810044fb l       .text	00000000 L25
810044a2 l       .text	00000000 L5
810044ee l       .text	00000000 L14
810044f4 l       .text	00000000 L19
810044b3 l       .text	00000000 L10
810044e0 l       .text	00000000 L9
810044e3 l       .text	00000000 L15
8100452e l       .text	00000000 L26
81004531 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81004636 l       .text	00000000 L5
8100466e l       .text	00000000 L15
81004640 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100477c l     F .text	0000000a __locale_ctype_ptr_l
81004786 l     F .text	0000000a __get_global_locale
81004790 l     F .text	0000000a __get_current_locale
8100479a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8100812c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
8100508f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81007910 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
8100582c l     F .text	0000000a __get_global_locale
81005836 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005a98 l     F .text	0000000a __get_global_locale
81005aa2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81005bbd l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100685b l     F .text	0000000a __get_global_locale
81006865 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81006965 l     F .text	0000000a __get_global_locale
8100696f l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008138 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
8100813c l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81006a2f g     F .text	00000040 _isatty_r
810065e1 g     F .text	00000037 cleanup_glue
81003fd5 g     F .text	000000d6 _puts_r
810058d2 g     F .text	00000046 _lseek_r
810006e9 g     F .text	0000001b yield
81004762 g     F .text	0000001a strtok_r
81003fa0 g     F .text	00000035 printf
8100686f g     F .text	00000077 _wcrtomb_r
810043de g     F .text	0000004a __sseek
81001121 g     F .text	00000099 __sinit
810049df g     F .text	00000112 __swbuf_r
81005840 g     F .text	0000005f _setlocale_r
81000f2a g     F .text	0000006f __sfmoreglue
8100341e g     F .text	00000006 __malloc_unlock
81005b30 g       .text	00000000 memmove
81002658 g     F .text	00000049 getopt_long
81001107 g     F .text	0000001a _cleanup
810046a2 g     F .text	000000c0 __strtok_r
81004e08 g     F .text	0000000a __errno
81005702 g     F .text	00000020 getenv
810069ec g     F .text	00000043 _fstat_r
81008134 g     O .bss	00000004 errno
81004379 g     F .text	0000000a __seofread
810006bc g     F .text	0000002d execve
8100065e g     F .text	0000001b getpid
81000e0d g     F .text	0000001f fgets
81003348 g       .text	00000000 memcpy
810010e6 g     F .text	00000021 _cleanup_r
810040ab g     F .text	0000001c puts
81002767 g     F .text	0000001c malloc
81003f73 g     F .text	0000002d _printf_r
810007d3 g     F .text	00000021 isatty
8100275d g     F .text	0000000a __getreent
810080b4 g     O .bss	00000004 optarg
810080e0 g     O .bss	00000004 __malloc_top_pad
81007aa0 g       .bss	00000000 __bss_start__
81005244 g     F .text	0000049e __sfvwrite_r
810042f5 g     F .text	00000040 _sbrk_r
810070a4 g     O .data	00000004 opterr
8100090b g     F .text	00000040 readdir
81005cc1 g     F .text	00000046 _read_r
81004e12 g     F .text	00000107 _fclose_r
81000c76 g     F .text	00000039 fflush
810080e4 g     O .bss	00000004 __malloc_max_sbrked_mem
810007a6 g     F .text	0000002d lseek
81006d20 g     O .rodata	00000004 _global_impure_ptr
81005d07 g     F .text	000008da _realloc_r
81004991 g     F .text	00000025 strtol_l
810051a5 g     F .text	00000057 _fputwc_r
810011e6 g     F .text	00000024 __fp_lock_all
810049b6 g     F .text	00000029 strtol
81006618 g     F .text	00000160 _reclaim_reent
81004f36 g     F .text	00000046 _fputc_r
81000758 g     F .text	0000002d write
81005c23 g     F .text	0000004b _putc_r
81007a8c g     O .data	00000004 environ
810007f4 g     F .text	00000027 fstat
81001257 g     F .text	0000002c fprintf
81002736 g     F .text	00000027 __getopt_long_only_r
8100099a g     F .text	0000001a _atoi_r
810005e8 g     F .text	0000004c sys_call
81003566 g     F .text	000000a8 __sfputs_r
810080b8 g     O .bss	00000004 optind
810011ba g     F .text	00000006 __sfp_lock_acquire
81003260 g       .text	00000000 memchr
81008140 g       .bss	00000000 __bss_end__
81001283 g     F .text	000003db _free_r
8100087f g     F .text	00000021 wait
81006e00 g     O .rodata	00000180 _ctype_b
8100589f g     F .text	00000014 __locale_mb_cur_max
81004cb3 g     F .text	00000115 __call_exitprocs
8100790c g     O .data	00000004 __malloc_sbrk_base
8100059a g       .text	00000000 _start
8100072b g     F .text	0000002d read
81006778 g     F .text	000000e3 strncmp
8100270f g     F .text	00000027 __getopt_long_r
81008100 g     O .bss	00000028 __malloc_current_mallinfo
81003f73 g     F .text	0000002d _iprintf_r
81004dc8 g     F .text	00000040 _close_r
81004679 g     F .text	00000029 strtok
810032f5 g       .text	00000000 memcmp
81001892 g     F .text	000000b8 _fwrite_r
810006a1 g     F .text	0000001b fork
81004b58 g     F .text	0000015b __swsetup_r
81000f99 g     F .text	0000014d __sfp
81007500 g     O .data	00000408 __malloc_av_
810011cc g     F .text	00000006 __sinit_lock_release
81004335 g     F .text	00000044 __sread
81003418 g     F .text	00000006 __malloc_lock
8100122e g     F .text	00000029 _fprintf_r
8100081b g     F .text	00000021 sbrk
81000c1e g     F .text	00000058 _fflush_r
810005aa g     F .text	0000003e cstart
81002611 g     F .text	00000047 getopt
81003390 g       .text	00000000 memset
81000406 g     F .text	00000194 main
810080e8 g     O .bss	00000004 __malloc_max_total_mem
81004af1 g     F .text	00000021 __swbuf
81004428 g     F .text	00000025 __sclose
81004f19 g     F .text	0000001d fclose
8100496c g     F .text	00000025 _strtol_r
81005722 g     F .text	000000ed _findenv_r
81002a33 g     F .text	00000822 _malloc_r
8100699d g     F .text	00000043 __ascii_wctomb
810008a0 g     F .text	0000006b opendir
8100122e g     F .text	00000029 _fiprintf_r
810069e6 g     F .text	00000006 __env_unlock
810056e2 g     F .text	00000020 _findenv
810017bf g     F .text	00000068 _fwalk
81000caf g     F .text	0000015e _fgets_r
81005aac g     F .text	0000002a _mbtowc_r
81005c6e g     F .text	00000053 putc
810026a1 g     F .text	00000049 getopt_long_only
8100165e g     F .text	00000161 _malloc_trim_r
8100454c g     F .text	000000a5 strcmp
8100360e g     F .text	00000025 vfiprintf
8100083c g     F .text	00000021 dup
81003fa0 g     F .text	00000035 iprintf
81008130 g     O .bss	00000004 _PathLocale
81004b12 g     F .text	00000046 _write_r
810058b3 g     F .text	0000001f setlocale
81003989 g     F .text	0000019b _printf_common
810074e4 g     O .data	00000004 _impure_ptr
810009f8 g     F .text	00000226 __sflush_r
810040f4 g     F .text	00000201 __srefill_r
81005ad6 g     F .text	00000058 __ascii_mbtowc
8100120a g     F .text	00000024 __fp_unlock_all
81004f7c g     F .text	0000004e fputc
81000679 g     F .text	00000028 print_msg
810070a8 g     O .data	00000004 optopt
81005a05 g     F .text	00000093 __swhatbuf_r
8100194a g     F .text	00000025 fwrite
810050f5 g     F .text	000000b0 __fputwc
81004fca g     F .text	000000a6 _fputs_r
81004383 g     F .text	0000005b __swrite
81007908 g     O .data	00000004 __malloc_trim_threshold
810009b4 g     F .text	00000044 exit
81001257 g     F .text	0000002c fiprintf
81003633 g     F .text	00000356 _vfiprintf_r
81001827 g     F .text	0000006b _fwalk_reent
810011c0 g     F .text	00000006 __sfp_lock_release
81000980 g     F .text	0000001a atoi
81006f80 g     O .rodata	00000101 _ctype_
810026ea g     F .text	00000025 __getopt_r
8100085d g     F .text	00000022 _exit
81005918 g     F .text	000000ed __smakebuf_r
81004600 g       .text	00000000 strlen
81003b24 g     F .text	0000044f _printf_i
81000704 g     F .text	00000027 open
81003424 g     F .text	000000dc __sprint_r
81004450 g       .text	00000000 strchr
81005070 g     F .text	0000001f fputs
8100094b g     F .text	00000035 closedir
81006979 g     F .text	00000024 _wctomb_r
810069e0 g     F .text	00000006 __env_lock
81003633 g     F .text	00000356 _vfprintf_r
81000634 g     F .text	0000002a msleep
810068e6 g     F .text	0000007f wcrtomb
81000785 g     F .text	00000021 close
81007920 g     O .data	0000016c __global_locale
8100360e g     F .text	00000025 vfprintf
810051fc g     F .text	00000048 fputwc
81002783 g     F .text	0000001d free
810011c6 g     F .text	00000006 __sinit_lock_acquire
8100580f g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 a0 80 00 81       	mov    0x810080a0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 86 6a 00 81       	push   $0x81006a86
81000025:	e8 76 3f 00 00       	call   81003fa0 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 a4 80 00 81       	mov    0x810080a4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 91 6a 00 81       	push   $0x81006a91
81000050:	68 96 6a 00 81       	push   $0x81006a96
81000055:	e8 46 3f 00 00       	call   81003fa0 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 99 6a 00 81       	push   $0x81006a99
81000065:	68 96 6a 00 81       	push   $0x81006a96
8100006a:	e8 31 3f 00 00       	call   81003fa0 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 cf 26 00 00       	call   8100275d <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 67 0d 00 00       	call   81000e0d <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 ef 3f 00 00       	call   810040ab <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 b8 80 00 81 01 	movl   $0x1,0x810080b8
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 a0 6a 00 81       	push   $0x81006aa0
81000107:	e8 9f 3f 00 00       	call   810040ab <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 a6 6a 00 81       	push   $0x81006aa6
81000117:	e8 8f 3f 00 00       	call   810040ab <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 b8 6a 00 81       	push   $0x81006ab8
81000127:	e8 7f 3f 00 00       	call   810040ab <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 b4 80 00 81       	mov    0x810080b4,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 39 08 00 00       	call   81000980 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 b4 80 00 81       	mov    0x810080b4,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d b4 80 00 81    	mov    0x810080b4,%ebx
8100015e:	e8 fa 25 00 00       	call   8100275d <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 d8 6a 00 81       	push   $0x81006ad8
8100016f:	50                   	push   %eax
81000170:	e8 e2 10 00 00       	call   81001257 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 f7 6a 00 81       	push   $0x81006af7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 7b 24 00 00       	call   81002611 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 ac 25 00 00       	call   8100275d <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 fc 6a 00 81       	push   $0x81006afc
810001be:	e8 87 17 00 00       	call   8100194a <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 b8 80 00 81       	mov    0x810080b8,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 81 25 00 00       	call   8100275d <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 2f 6b 00 81       	push   $0x81006b2f
810001e9:	e8 5c 17 00 00       	call   8100194a <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 b8 80 00 81       	mov    0x810080b8,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 89 3e 00 00       	call   810040ab <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_exit(int argc, const char ** argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 69 07 00 00       	call   810009b4 <exit>

8100024b <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000251:	a1 a0 70 00 81       	mov    0x810070a0,%eax
81000256:	a3 a8 80 00 81       	mov    %eax,0x810080a8
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100025b:	83 ec 04             	sub    $0x4,%esp
8100025e:	68 00 04 00 00       	push   $0x400
81000263:	6a 00                	push   $0x0
81000265:	68 a0 7c 00 81       	push   $0x81007ca0
8100026a:	e8 21 31 00 00       	call   81003390 <memset>
8100026f:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000272:	c7 05 a0 80 00 81 e0 	movl   $0x81006be0,0x810080a0
81000279:	6b 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100027c:	b8 10 6c 00 81       	mov    $0x81006c10,%eax
81000281:	a3 a4 80 00 81       	mov    %eax,0x810080a4
}
81000286:	90                   	nop
81000287:	c9                   	leave  
81000288:	c3                   	ret    

81000289 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000289:	55                   	push   %ebp
8100028a:	89 e5                	mov    %esp,%ebp
8100028c:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100028f:	a1 a8 80 00 81       	mov    0x810080a8,%eax
81000294:	83 ec 08             	sub    $0x8,%esp
81000297:	50                   	push   %eax
81000298:	68 96 6a 00 81       	push   $0x81006a96
8100029d:	e8 fe 3c 00 00       	call   81003fa0 <iprintf>
810002a2:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810002a5:	e8 b3 24 00 00       	call   8100275d <__getreent>
810002aa:	8b 40 08             	mov    0x8(%eax),%eax
810002ad:	83 ec 0c             	sub    $0xc,%esp
810002b0:	50                   	push   %eax
810002b1:	e8 c0 09 00 00       	call   81000c76 <fflush>
810002b6:	83 c4 10             	add    $0x10,%esp
}
810002b9:	90                   	nop
810002ba:	c9                   	leave  
810002bb:	c3                   	ret    

810002bc <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810002bc:	55                   	push   %ebp
810002bd:	89 e5                	mov    %esp,%ebp
810002bf:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002c2:	a1 a0 80 00 81       	mov    0x810080a0,%eax
810002c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002ca:	eb 22                	jmp    810002ee <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810002cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002cf:	8b 00                	mov    (%eax),%eax
810002d1:	83 ec 08             	sub    $0x8,%esp
810002d4:	ff 75 08             	push   0x8(%ebp)
810002d7:	50                   	push   %eax
810002d8:	e8 6f 42 00 00       	call   8100454c <strcmp>
810002dd:	83 c4 10             	add    $0x10,%esp
810002e0:	85 c0                	test   %eax,%eax
810002e2:	75 05                	jne    810002e9 <find_builtin+0x2d>
      continue;
    }
    return cmd;
810002e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002e7:	eb 14                	jmp    810002fd <find_builtin+0x41>
      continue;
810002e9:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002ea:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810002ee:	a1 a4 80 00 81       	mov    0x810080a4,%eax
810002f3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002f6:	72 d4                	jb     810002cc <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810002f8:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002fd:	c9                   	leave  
810002fe:	c3                   	ret    

810002ff <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810002ff:	55                   	push   %ebp
81000300:	89 e5                	mov    %esp,%ebp
81000302:	53                   	push   %ebx
81000303:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000306:	8b 45 08             	mov    0x8(%ebp),%eax
81000309:	8b 40 08             	mov    0x8(%eax),%eax
8100030c:	83 ec 08             	sub    $0x8,%esp
8100030f:	ff 75 10             	push   0x10(%ebp)
81000312:	ff 75 0c             	push   0xc(%ebp)
81000315:	ff d0                	call   *%eax
81000317:	83 c4 10             	add    $0x10,%esp
8100031a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
8100031d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000321:	79 1f                	jns    81000342 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR"%s error: %d\n"ESC_COLOR_DEFAULT, cmd->name, ret);
81000323:	8b 45 08             	mov    0x8(%ebp),%eax
81000326:	8b 18                	mov    (%eax),%ebx
81000328:	e8 30 24 00 00       	call   8100275d <__getreent>
8100032d:	8b 40 0c             	mov    0xc(%eax),%eax
81000330:	ff 75 f4             	push   -0xc(%ebp)
81000333:	53                   	push   %ebx
81000334:	68 10 6c 00 81       	push   $0x81006c10
81000339:	50                   	push   %eax
8100033a:	e8 18 0f 00 00       	call   81001257 <fiprintf>
8100033f:	83 c4 10             	add    $0x10,%esp
  }
}
81000342:	90                   	nop
81000343:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000346:	c9                   	leave  
81000347:	c3                   	ret    

81000348 <run_exec_file>:
 * 
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
81000348:	55                   	push   %ebp
81000349:	89 e5                	mov    %esp,%ebp
8100034b:	53                   	push   %ebx
8100034c:	83 ec 14             	sub    $0x14,%esp
  //1.创建子进程
  int pid = fork();
8100034f:	e8 4d 03 00 00       	call   810006a1 <fork>
81000354:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
81000357:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100035b:	79 21                	jns    8100037e <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR"fork failed: %s"ESC_COLOR_DEFAULT, path);
8100035d:	e8 fb 23 00 00       	call   8100275d <__getreent>
81000362:	8b 40 0c             	mov    0xc(%eax),%eax
81000365:	83 ec 04             	sub    $0x4,%esp
81000368:	ff 75 08             	push   0x8(%ebp)
8100036b:	68 28 6c 00 81       	push   $0x81006c28
81000370:	50                   	push   %eax
81000371:	e8 e1 0e 00 00       	call   81001257 <fiprintf>
81000376:	83 c4 10             	add    $0x10,%esp
    int status;
    //3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
  }
}
81000379:	e9 82 00 00 00       	jmp    81000400 <run_exec_file+0xb8>
  } else if (pid == 0) {
8100037e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000382:	75 44                	jne    810003c8 <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000384:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100038b:	eb 29                	jmp    810003b6 <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
8100038d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000390:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000397:	8b 45 10             	mov    0x10(%ebp),%eax
8100039a:	01 d0                	add    %edx,%eax
8100039c:	8b 00                	mov    (%eax),%eax
8100039e:	83 ec 04             	sub    $0x4,%esp
810003a1:	50                   	push   %eax
810003a2:	ff 75 f4             	push   -0xc(%ebp)
810003a5:	68 42 6c 00 81       	push   $0x81006c42
810003aa:	e8 f1 3b 00 00       	call   81003fa0 <iprintf>
810003af:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810003b2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810003b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003b9:	3b 45 0c             	cmp    0xc(%ebp),%eax
810003bc:	7c cf                	jl     8100038d <run_exec_file+0x45>
    exit(-1);
810003be:	83 ec 0c             	sub    $0xc,%esp
810003c1:	6a ff                	push   $0xffffffff
810003c3:	e8 ec 05 00 00       	call   810009b4 <exit>
    int cpid = wait(&status);
810003c8:	83 ec 0c             	sub    $0xc,%esp
810003cb:	8d 45 e8             	lea    -0x18(%ebp),%eax
810003ce:	50                   	push   %eax
810003cf:	e8 ab 04 00 00       	call   8100087f <wait>
810003d4:	83 c4 10             	add    $0x10,%esp
810003d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
810003da:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810003dd:	e8 7b 23 00 00       	call   8100275d <__getreent>
810003e2:	8b 40 0c             	mov    0xc(%eax),%eax
810003e5:	83 ec 08             	sub    $0x8,%esp
810003e8:	ff 75 ec             	push   -0x14(%ebp)
810003eb:	ff 75 f0             	push   -0x10(%ebp)
810003ee:	53                   	push   %ebx
810003ef:	ff 75 08             	push   0x8(%ebp)
810003f2:	68 50 6c 00 81       	push   $0x81006c50
810003f7:	50                   	push   %eax
810003f8:	e8 5a 0e 00 00       	call   81001257 <fiprintf>
810003fd:	83 c4 20             	add    $0x20,%esp
}
81000400:	90                   	nop
81000401:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000404:	c9                   	leave  
81000405:	c3                   	ret    

81000406 <main>:

int main(int argc, char **argv) {
81000406:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100040a:	83 e4 f0             	and    $0xfffffff0,%esp
8100040d:	ff 71 fc             	push   -0x4(%ecx)
81000410:	55                   	push   %ebp
81000411:	89 e5                	mov    %esp,%ebp
81000413:	51                   	push   %ecx
81000414:	83 ec 44             	sub    $0x44,%esp
81000417:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
81000419:	8b 40 04             	mov    0x4(%eax),%eax
8100041c:	8b 00                	mov    (%eax),%eax
8100041e:	83 ec 08             	sub    $0x8,%esp
81000421:	6a 02                	push   $0x2
81000423:	50                   	push   %eax
81000424:	e8 db 02 00 00       	call   81000704 <open>
81000429:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
8100042c:	83 ec 0c             	sub    $0xc,%esp
8100042f:	6a 00                	push   $0x0
81000431:	e8 06 04 00 00       	call   8100083c <dup>
81000436:	83 c4 10             	add    $0x10,%esp
  dup(0);
81000439:	83 ec 0c             	sub    $0xc,%esp
8100043c:	6a 00                	push   $0x0
8100043e:	e8 f9 03 00 00       	call   8100083c <dup>
81000443:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000446:	e8 00 fe ff ff       	call   8100024b <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100044b:	e8 39 fe ff ff       	call   81000289 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000450:	e8 08 23 00 00       	call   8100275d <__getreent>
81000455:	8b 40 04             	mov    0x4(%eax),%eax
81000458:	83 ec 04             	sub    $0x4,%esp
8100045b:	50                   	push   %eax
8100045c:	68 00 04 00 00       	push   $0x400
81000461:	68 a0 7c 00 81       	push   $0x81007ca0
81000466:	e8 a2 09 00 00       	call   81000e0d <fgets>
8100046b:	83 c4 10             	add    $0x10,%esp
8100046e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000471:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000475:	0f 84 13 01 00 00    	je     8100058e <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
8100047b:	83 ec 08             	sub    $0x8,%esp
8100047e:	6a 0a                	push   $0xa
81000480:	68 a0 7c 00 81       	push   $0x81007ca0
81000485:	e8 c6 3f 00 00       	call   81004450 <strchr>
8100048a:	83 c4 10             	add    $0x10,%esp
8100048d:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000490:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000494:	74 06                	je     8100049c <main+0x96>
      *cr = '\0';
81000496:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000499:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
8100049c:	83 ec 08             	sub    $0x8,%esp
8100049f:	6a 0d                	push   $0xd
810004a1:	68 a0 7c 00 81       	push   $0x81007ca0
810004a6:	e8 a5 3f 00 00       	call   81004450 <strchr>
810004ab:	83 c4 10             	add    $0x10,%esp
810004ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810004b1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810004b5:	74 06                	je     810004bd <main+0xb7>
      *cr = '\0';
810004b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810004ba:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810004bd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810004c4:	83 ec 04             	sub    $0x4,%esp
810004c7:	6a 28                	push   $0x28
810004c9:	6a 00                	push   $0x0
810004cb:	8d 45 b8             	lea    -0x48(%ebp),%eax
810004ce:	50                   	push   %eax
810004cf:	e8 bc 2e 00 00       	call   81003390 <memset>
810004d4:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
810004d7:	c7 45 e4 74 6c 00 81 	movl   $0x81006c74,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
810004de:	83 ec 08             	sub    $0x8,%esp
810004e1:	ff 75 e4             	push   -0x1c(%ebp)
810004e4:	68 a0 7c 00 81       	push   $0x81007ca0
810004e9:	e8 8b 41 00 00       	call   81004679 <strtok>
810004ee:	83 c4 10             	add    $0x10,%esp
810004f1:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810004f4:	eb 23                	jmp    81000519 <main+0x113>
      argv[argc++] = token;
810004f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004f9:	8d 50 01             	lea    0x1(%eax),%edx
810004fc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810004ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000502:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000506:	83 ec 08             	sub    $0x8,%esp
81000509:	ff 75 e4             	push   -0x1c(%ebp)
8100050c:	6a 00                	push   $0x0
8100050e:	e8 66 41 00 00       	call   81004679 <strtok>
81000513:	83 c4 10             	add    $0x10,%esp
81000516:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000519:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100051d:	75 d7                	jne    810004f6 <main+0xf0>
    }

    if (argc == 0) {
8100051f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000523:	74 6f                	je     81000594 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000525:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000528:	83 ec 0c             	sub    $0xc,%esp
8100052b:	50                   	push   %eax
8100052c:	e8 8b fd ff ff       	call   810002bc <find_builtin>
81000531:	83 c4 10             	add    $0x10,%esp
81000534:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000537:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100053b:	74 17                	je     81000554 <main+0x14e>
      run_builtin(cmd, argc, argv);
8100053d:	83 ec 04             	sub    $0x4,%esp
81000540:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000543:	50                   	push   %eax
81000544:	ff 75 f4             	push   -0xc(%ebp)
81000547:	ff 75 e0             	push   -0x20(%ebp)
8100054a:	e8 b0 fd ff ff       	call   810002ff <run_builtin>
8100054f:	83 c4 10             	add    $0x10,%esp
      continue;
81000552:	eb 41                	jmp    81000595 <main+0x18f>
    }

    //5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
81000554:	83 ec 04             	sub    $0x4,%esp
81000557:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100055a:	50                   	push   %eax
8100055b:	ff 75 f4             	push   -0xc(%ebp)
8100055e:	68 76 6c 00 81       	push   $0x81006c76
81000563:	e8 e0 fd ff ff       	call   81000348 <run_exec_file>
81000568:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
8100056b:	e8 ed 21 00 00       	call   8100275d <__getreent>
81000570:	8b 40 0c             	mov    0xc(%eax),%eax
81000573:	83 ec 04             	sub    $0x4,%esp
81000576:	68 a0 7c 00 81       	push   $0x81007ca0
8100057b:	68 78 6c 00 81       	push   $0x81006c78
81000580:	50                   	push   %eax
81000581:	e8 d1 0c 00 00       	call   81001257 <fiprintf>
81000586:	83 c4 10             	add    $0x10,%esp
81000589:	e9 bd fe ff ff       	jmp    8100044b <main+0x45>
      continue;
8100058e:	90                   	nop
8100058f:	e9 b7 fe ff ff       	jmp    8100044b <main+0x45>
      continue;
81000594:	90                   	nop
  for (;;) {
81000595:	e9 b1 fe ff ff       	jmp    8100044b <main+0x45>

8100059a <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100059a:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100059d:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100059f:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810005a1:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810005a3:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810005a5:	e9 00 00 00 00       	jmp    810005aa <cstart>

810005aa <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810005aa:	55                   	push   %ebp
810005ab:	89 e5                	mov    %esp,%ebp
810005ad:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810005b0:	c7 45 f4 a0 7a 00 81 	movl   $0x81007aa0,-0xc(%ebp)
    while (start < __bss_end__) {
810005b7:	eb 0c                	jmp    810005c5 <cstart+0x1b>
        *(start++) = 0;
810005b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005bc:	8d 50 01             	lea    0x1(%eax),%edx
810005bf:	89 55 f4             	mov    %edx,-0xc(%ebp)
810005c2:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810005c5:	81 7d f4 40 81 00 81 	cmpl   $0x81008140,-0xc(%ebp)
810005cc:	72 eb                	jb     810005b9 <cstart+0xf>
    }
    
    exit(main(argc, argv));
810005ce:	83 ec 08             	sub    $0x8,%esp
810005d1:	ff 75 0c             	push   0xc(%ebp)
810005d4:	ff 75 08             	push   0x8(%ebp)
810005d7:	e8 2a fe ff ff       	call   81000406 <main>
810005dc:	83 c4 10             	add    $0x10,%esp
810005df:	83 ec 0c             	sub    $0xc,%esp
810005e2:	50                   	push   %eax
810005e3:	e8 cc 03 00 00       	call   810009b4 <exit>

810005e8 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
810005e8:	55                   	push   %ebp
810005e9:	89 e5                	mov    %esp,%ebp
810005eb:	57                   	push   %edi
810005ec:	56                   	push   %esi
810005ed:	53                   	push   %ebx
810005ee:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810005f1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810005f8:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810005ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000602:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000605:	8b 55 08             	mov    0x8(%ebp),%edx
81000608:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
8100060b:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100060e:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000611:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000614:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000617:	8b 75 08             	mov    0x8(%ebp),%esi
8100061a:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
8100061c:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100061f:	50                   	push   %eax
81000620:	52                   	push   %edx
81000621:	51                   	push   %ecx
81000622:	53                   	push   %ebx
81000623:	56                   	push   %esi
81000624:	ff 1f                	lcall  *(%edi)
81000626:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000629:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100062c:	83 c4 10             	add    $0x10,%esp
8100062f:	5b                   	pop    %ebx
81000630:	5e                   	pop    %esi
81000631:	5f                   	pop    %edi
81000632:	5d                   	pop    %ebp
81000633:	c3                   	ret    

81000634 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000634:	55                   	push   %ebp
81000635:	89 e5                	mov    %esp,%ebp
81000637:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100063a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100063e:	7e 1b                	jle    8100065b <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000640:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000647:	8b 45 08             	mov    0x8(%ebp),%eax
8100064a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100064d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000650:	50                   	push   %eax
81000651:	e8 92 ff ff ff       	call   810005e8 <sys_call>
81000656:	83 c4 04             	add    $0x4,%esp
81000659:	eb 01                	jmp    8100065c <msleep+0x28>
    if (ms <= 0) return;
8100065b:	90                   	nop

}
8100065c:	c9                   	leave  
8100065d:	c3                   	ret    

8100065e <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100065e:	55                   	push   %ebp
8100065f:	89 e5                	mov    %esp,%ebp
81000661:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000664:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100066b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100066e:	50                   	push   %eax
8100066f:	e8 74 ff ff ff       	call   810005e8 <sys_call>
81000674:	83 c4 04             	add    $0x4,%esp
}
81000677:	c9                   	leave  
81000678:	c3                   	ret    

81000679 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000679:	55                   	push   %ebp
8100067a:	89 e5                	mov    %esp,%ebp
8100067c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100067f:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000686:	8b 45 08             	mov    0x8(%ebp),%eax
81000689:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100068c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100068f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000692:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000695:	50                   	push   %eax
81000696:	e8 4d ff ff ff       	call   810005e8 <sys_call>
8100069b:	83 c4 04             	add    $0x4,%esp
}
8100069e:	90                   	nop
8100069f:	c9                   	leave  
810006a0:	c3                   	ret    

810006a1 <fork>:

int fork (void) {
810006a1:	55                   	push   %ebp
810006a2:	89 e5                	mov    %esp,%ebp
810006a4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810006a7:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810006ae:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006b1:	50                   	push   %eax
810006b2:	e8 31 ff ff ff       	call   810005e8 <sys_call>
810006b7:	83 c4 04             	add    $0x4,%esp
}
810006ba:	c9                   	leave  
810006bb:	c3                   	ret    

810006bc <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810006bc:	55                   	push   %ebp
810006bd:	89 e5                	mov    %esp,%ebp
810006bf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810006c2:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810006c9:	8b 45 08             	mov    0x8(%ebp),%eax
810006cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810006cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810006d5:	8b 45 10             	mov    0x10(%ebp),%eax
810006d8:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810006db:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006de:	50                   	push   %eax
810006df:	e8 04 ff ff ff       	call   810005e8 <sys_call>
810006e4:	83 c4 04             	add    $0x4,%esp
}
810006e7:	c9                   	leave  
810006e8:	c3                   	ret    

810006e9 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810006e9:	55                   	push   %ebp
810006ea:	89 e5                	mov    %esp,%ebp
810006ec:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810006ef:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810006f6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006f9:	50                   	push   %eax
810006fa:	e8 e9 fe ff ff       	call   810005e8 <sys_call>
810006ff:	83 c4 04             	add    $0x4,%esp
}
81000702:	c9                   	leave  
81000703:	c3                   	ret    

81000704 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000704:	55                   	push   %ebp
81000705:	89 e5                	mov    %esp,%ebp
81000707:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100070a:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000711:	8b 45 08             	mov    0x8(%ebp),%eax
81000714:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000717:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100071d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000720:	50                   	push   %eax
81000721:	e8 c2 fe ff ff       	call   810005e8 <sys_call>
81000726:	83 c4 04             	add    $0x4,%esp
}
81000729:	c9                   	leave  
8100072a:	c3                   	ret    

8100072b <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
8100072b:	55                   	push   %ebp
8100072c:	89 e5                	mov    %esp,%ebp
8100072e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000731:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000738:	8b 45 08             	mov    0x8(%ebp),%eax
8100073b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100073e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000741:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000744:	8b 45 10             	mov    0x10(%ebp),%eax
81000747:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100074a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100074d:	50                   	push   %eax
8100074e:	e8 95 fe ff ff       	call   810005e8 <sys_call>
81000753:	83 c4 04             	add    $0x4,%esp
}
81000756:	c9                   	leave  
81000757:	c3                   	ret    

81000758 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000758:	55                   	push   %ebp
81000759:	89 e5                	mov    %esp,%ebp
8100075b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100075e:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000765:	8b 45 08             	mov    0x8(%ebp),%eax
81000768:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100076b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100076e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000771:	8b 45 10             	mov    0x10(%ebp),%eax
81000774:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000777:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100077a:	50                   	push   %eax
8100077b:	e8 68 fe ff ff       	call   810005e8 <sys_call>
81000780:	83 c4 04             	add    $0x4,%esp
}
81000783:	c9                   	leave  
81000784:	c3                   	ret    

81000785 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000785:	55                   	push   %ebp
81000786:	89 e5                	mov    %esp,%ebp
81000788:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100078b:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000792:	8b 45 08             	mov    0x8(%ebp),%eax
81000795:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000798:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100079b:	50                   	push   %eax
8100079c:	e8 47 fe ff ff       	call   810005e8 <sys_call>
810007a1:	83 c4 04             	add    $0x4,%esp
}
810007a4:	c9                   	leave  
810007a5:	c3                   	ret    

810007a6 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810007a6:	55                   	push   %ebp
810007a7:	89 e5                	mov    %esp,%ebp
810007a9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810007ac:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810007b3:	8b 45 08             	mov    0x8(%ebp),%eax
810007b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810007b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810007bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810007bf:	8b 45 10             	mov    0x10(%ebp),%eax
810007c2:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810007c5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007c8:	50                   	push   %eax
810007c9:	e8 1a fe ff ff       	call   810005e8 <sys_call>
810007ce:	83 c4 04             	add    $0x4,%esp
}
810007d1:	c9                   	leave  
810007d2:	c3                   	ret    

810007d3 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810007d3:	55                   	push   %ebp
810007d4:	89 e5                	mov    %esp,%ebp
810007d6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810007d9:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810007e0:	8b 45 08             	mov    0x8(%ebp),%eax
810007e3:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810007e6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007e9:	50                   	push   %eax
810007ea:	e8 f9 fd ff ff       	call   810005e8 <sys_call>
810007ef:	83 c4 04             	add    $0x4,%esp
}
810007f2:	c9                   	leave  
810007f3:	c3                   	ret    

810007f4 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810007f4:	55                   	push   %ebp
810007f5:	89 e5                	mov    %esp,%ebp
810007f7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810007fa:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000801:	8b 45 08             	mov    0x8(%ebp),%eax
81000804:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000807:	8b 45 0c             	mov    0xc(%ebp),%eax
8100080a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100080d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000810:	50                   	push   %eax
81000811:	e8 d2 fd ff ff       	call   810005e8 <sys_call>
81000816:	83 c4 04             	add    $0x4,%esp
}
81000819:	c9                   	leave  
8100081a:	c3                   	ret    

8100081b <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
8100081b:	55                   	push   %ebp
8100081c:	89 e5                	mov    %esp,%ebp
8100081e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000821:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
81000828:	8b 45 08             	mov    0x8(%ebp),%eax
8100082b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
8100082e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000831:	50                   	push   %eax
81000832:	e8 b1 fd ff ff       	call   810005e8 <sys_call>
81000837:	83 c4 04             	add    $0x4,%esp
}
8100083a:	c9                   	leave  
8100083b:	c3                   	ret    

8100083c <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
8100083c:	55                   	push   %ebp
8100083d:	89 e5                	mov    %esp,%ebp
8100083f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000842:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000849:	8b 45 08             	mov    0x8(%ebp),%eax
8100084c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100084f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000852:	50                   	push   %eax
81000853:	e8 90 fd ff ff       	call   810005e8 <sys_call>
81000858:	83 c4 04             	add    $0x4,%esp
}
8100085b:	c9                   	leave  
8100085c:	c3                   	ret    

8100085d <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
8100085d:	55                   	push   %ebp
8100085e:	89 e5                	mov    %esp,%ebp
81000860:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000863:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
8100086a:	8b 45 08             	mov    0x8(%ebp),%eax
8100086d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000870:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000873:	50                   	push   %eax
81000874:	e8 6f fd ff ff       	call   810005e8 <sys_call>
81000879:	83 c4 04             	add    $0x4,%esp
}
8100087c:	90                   	nop
8100087d:	c9                   	leave  
8100087e:	c3                   	ret    

8100087f <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
8100087f:	55                   	push   %ebp
81000880:	89 e5                	mov    %esp,%ebp
81000882:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000885:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
8100088c:	8b 45 08             	mov    0x8(%ebp),%eax
8100088f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000892:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000895:	50                   	push   %eax
81000896:	e8 4d fd ff ff       	call   810005e8 <sys_call>
8100089b:	83 c4 04             	add    $0x4,%esp
}
8100089e:	c9                   	leave  
8100089f:	c3                   	ret    

810008a0 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
810008a0:	55                   	push   %ebp
810008a1:	89 e5                	mov    %esp,%ebp
810008a3:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
810008a6:	83 ec 0c             	sub    $0xc,%esp
810008a9:	68 10 01 00 00       	push   $0x110
810008ae:	e8 b4 1e 00 00       	call   81002767 <malloc>
810008b3:	83 c4 10             	add    $0x10,%esp
810008b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
810008b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008bd:	75 07                	jne    810008c6 <opendir+0x26>
        return (DIR*)0;
810008bf:	b8 00 00 00 00       	mov    $0x0,%eax
810008c4:	eb 43                	jmp    81000909 <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
810008c6:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
810008cd:	8b 45 08             	mov    0x8(%ebp),%eax
810008d0:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
810008d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
810008d9:	83 ec 0c             	sub    $0xc,%esp
810008dc:	8d 45 dc             	lea    -0x24(%ebp),%eax
810008df:	50                   	push   %eax
810008e0:	e8 03 fd ff ff       	call   810005e8 <sys_call>
810008e5:	83 c4 10             	add    $0x10,%esp
810008e8:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
810008eb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810008ef:	79 15                	jns    81000906 <opendir+0x66>
        free(dir);
810008f1:	83 ec 0c             	sub    $0xc,%esp
810008f4:	ff 75 f4             	push   -0xc(%ebp)
810008f7:	e8 87 1e 00 00       	call   81002783 <free>
810008fc:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
810008ff:	b8 00 00 00 00       	mov    $0x0,%eax
81000904:	eb 03                	jmp    81000909 <opendir+0x69>
    }

    return dir;    
81000906:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000909:	c9                   	leave  
8100090a:	c3                   	ret    

8100090b <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8100090b:	55                   	push   %ebp
8100090c:	89 e5                	mov    %esp,%ebp
8100090e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000911:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000918:	8b 45 08             	mov    0x8(%ebp),%eax
8100091b:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
8100091e:	8b 45 08             	mov    0x8(%ebp),%eax
81000921:	83 c0 04             	add    $0x4,%eax
81000924:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000927:	8d 45 e8             	lea    -0x18(%ebp),%eax
8100092a:	50                   	push   %eax
8100092b:	e8 b8 fc ff ff       	call   810005e8 <sys_call>
81000930:	83 c4 04             	add    $0x4,%esp
81000933:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000936:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
8100093a:	79 07                	jns    81000943 <readdir+0x38>
        return (struct dirent*)0;
8100093c:	b8 00 00 00 00       	mov    $0x0,%eax
81000941:	eb 06                	jmp    81000949 <readdir+0x3e>
    }

    return &dir->dirent;   
81000943:	8b 45 08             	mov    0x8(%ebp),%eax
81000946:	83 c0 04             	add    $0x4,%eax
}
81000949:	c9                   	leave  
8100094a:	c3                   	ret    

8100094b <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
8100094b:	55                   	push   %ebp
8100094c:	89 e5                	mov    %esp,%ebp
8100094e:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000951:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000958:	8b 45 08             	mov    0x8(%ebp),%eax
8100095b:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8100095e:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000961:	50                   	push   %eax
81000962:	e8 81 fc ff ff       	call   810005e8 <sys_call>
81000967:	83 c4 04             	add    $0x4,%esp
8100096a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
8100096d:	83 ec 0c             	sub    $0xc,%esp
81000970:	ff 75 08             	push   0x8(%ebp)
81000973:	e8 0b 1e 00 00       	call   81002783 <free>
81000978:	83 c4 10             	add    $0x10,%esp

    return err;   
8100097b:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8100097e:	c9                   	leave  
8100097f:	c3                   	ret    

81000980 <atoi>:
81000980:	55                   	push   %ebp
81000981:	89 e5                	mov    %esp,%ebp
81000983:	83 ec 08             	sub    $0x8,%esp
81000986:	83 ec 04             	sub    $0x4,%esp
81000989:	6a 0a                	push   $0xa
8100098b:	6a 00                	push   $0x0
8100098d:	ff 75 08             	push   0x8(%ebp)
81000990:	e8 21 40 00 00       	call   810049b6 <strtol>
81000995:	83 c4 10             	add    $0x10,%esp
81000998:	c9                   	leave  
81000999:	c3                   	ret    

8100099a <_atoi_r>:
8100099a:	55                   	push   %ebp
8100099b:	89 e5                	mov    %esp,%ebp
8100099d:	83 ec 08             	sub    $0x8,%esp
810009a0:	6a 0a                	push   $0xa
810009a2:	6a 00                	push   $0x0
810009a4:	ff 75 0c             	push   0xc(%ebp)
810009a7:	ff 75 08             	push   0x8(%ebp)
810009aa:	e8 bd 3f 00 00       	call   8100496c <_strtol_r>
810009af:	83 c4 10             	add    $0x10,%esp
810009b2:	c9                   	leave  
810009b3:	c3                   	ret    

810009b4 <exit>:
810009b4:	55                   	push   %ebp
810009b5:	89 e5                	mov    %esp,%ebp
810009b7:	83 ec 08             	sub    $0x8,%esp
810009ba:	83 ec 08             	sub    $0x8,%esp
810009bd:	6a 00                	push   $0x0
810009bf:	ff 75 08             	push   0x8(%ebp)
810009c2:	e8 ec 42 00 00       	call   81004cb3 <__call_exitprocs>
810009c7:	83 c4 10             	add    $0x10,%esp
810009ca:	a1 20 6d 00 81       	mov    0x81006d20,%eax
810009cf:	8b 40 3c             	mov    0x3c(%eax),%eax
810009d2:	85 c0                	test   %eax,%eax
810009d4:	74 17                	je     810009ed <exit+0x39>
810009d6:	a1 20 6d 00 81       	mov    0x81006d20,%eax
810009db:	8b 40 3c             	mov    0x3c(%eax),%eax
810009de:	8b 15 20 6d 00 81    	mov    0x81006d20,%edx
810009e4:	83 ec 0c             	sub    $0xc,%esp
810009e7:	52                   	push   %edx
810009e8:	ff d0                	call   *%eax
810009ea:	83 c4 10             	add    $0x10,%esp
810009ed:	83 ec 0c             	sub    $0xc,%esp
810009f0:	ff 75 08             	push   0x8(%ebp)
810009f3:	e8 65 fe ff ff       	call   8100085d <_exit>

810009f8 <__sflush_r>:
810009f8:	55                   	push   %ebp
810009f9:	89 e5                	mov    %esp,%ebp
810009fb:	57                   	push   %edi
810009fc:	56                   	push   %esi
810009fd:	53                   	push   %ebx
810009fe:	83 ec 1c             	sub    $0x1c,%esp
81000a01:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a04:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a08:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000a0c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000a10:	83 e0 08             	and    $0x8,%eax
81000a13:	85 c0                	test   %eax,%eax
81000a15:	0f 85 93 01 00 00    	jne    81000bae <__sflush_r+0x1b6>
81000a1b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a1f:	80 cc 08             	or     $0x8,%ah
81000a22:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a26:	8b 43 04             	mov    0x4(%ebx),%eax
81000a29:	85 c0                	test   %eax,%eax
81000a2b:	7f 0b                	jg     81000a38 <__sflush_r+0x40>
81000a2d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000a30:	85 c0                	test   %eax,%eax
81000a32:	0f 8e 6f 01 00 00    	jle    81000ba7 <__sflush_r+0x1af>
81000a38:	8b 43 28             	mov    0x28(%ebx),%eax
81000a3b:	85 c0                	test   %eax,%eax
81000a3d:	0f 84 64 01 00 00    	je     81000ba7 <__sflush_r+0x1af>
81000a43:	8b 45 08             	mov    0x8(%ebp),%eax
81000a46:	8b 00                	mov    (%eax),%eax
81000a48:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a4b:	8b 45 08             	mov    0x8(%ebp),%eax
81000a4e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000a54:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a58:	98                   	cwtl   
81000a59:	25 00 10 00 00       	and    $0x1000,%eax
81000a5e:	85 c0                	test   %eax,%eax
81000a60:	74 08                	je     81000a6a <__sflush_r+0x72>
81000a62:	8b 43 50             	mov    0x50(%ebx),%eax
81000a65:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a68:	eb 64                	jmp    81000ace <__sflush_r+0xd6>
81000a6a:	8b 43 28             	mov    0x28(%ebx),%eax
81000a6d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000a70:	6a 01                	push   $0x1
81000a72:	6a 00                	push   $0x0
81000a74:	52                   	push   %edx
81000a75:	ff 75 08             	push   0x8(%ebp)
81000a78:	ff d0                	call   *%eax
81000a7a:	83 c4 10             	add    $0x10,%esp
81000a7d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a80:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a84:	75 48                	jne    81000ace <__sflush_r+0xd6>
81000a86:	8b 45 08             	mov    0x8(%ebp),%eax
81000a89:	8b 00                	mov    (%eax),%eax
81000a8b:	85 c0                	test   %eax,%eax
81000a8d:	74 3f                	je     81000ace <__sflush_r+0xd6>
81000a8f:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000a96:	8b 45 08             	mov    0x8(%ebp),%eax
81000a99:	8b 00                	mov    (%eax),%eax
81000a9b:	83 f8 1d             	cmp    $0x1d,%eax
81000a9e:	74 0a                	je     81000aaa <__sflush_r+0xb2>
81000aa0:	8b 45 08             	mov    0x8(%ebp),%eax
81000aa3:	8b 00                	mov    (%eax),%eax
81000aa5:	83 f8 16             	cmp    $0x16,%eax
81000aa8:	75 11                	jne    81000abb <__sflush_r+0xc3>
81000aaa:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000ab1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ab4:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000ab7:	89 10                	mov    %edx,(%eax)
81000ab9:	eb 0b                	jmp    81000ac6 <__sflush_r+0xce>
81000abb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000abf:	83 c8 40             	or     $0x40,%eax
81000ac2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ac6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000ac9:	e9 48 01 00 00       	jmp    81000c16 <__sflush_r+0x21e>
81000ace:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ad2:	98                   	cwtl   
81000ad3:	83 e0 04             	and    $0x4,%eax
81000ad6:	85 c0                	test   %eax,%eax
81000ad8:	74 13                	je     81000aed <__sflush_r+0xf5>
81000ada:	8b 43 04             	mov    0x4(%ebx),%eax
81000add:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000ae0:	8b 43 30             	mov    0x30(%ebx),%eax
81000ae3:	85 c0                	test   %eax,%eax
81000ae5:	74 06                	je     81000aed <__sflush_r+0xf5>
81000ae7:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000aea:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000aed:	8b 43 28             	mov    0x28(%ebx),%eax
81000af0:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000af3:	6a 00                	push   $0x0
81000af5:	ff 75 e4             	push   -0x1c(%ebp)
81000af8:	52                   	push   %edx
81000af9:	ff 75 08             	push   0x8(%ebp)
81000afc:	ff d0                	call   *%eax
81000afe:	83 c4 10             	add    $0x10,%esp
81000b01:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b04:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b08:	75 1d                	jne    81000b27 <__sflush_r+0x12f>
81000b0a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b0d:	8b 00                	mov    (%eax),%eax
81000b0f:	85 c0                	test   %eax,%eax
81000b11:	74 14                	je     81000b27 <__sflush_r+0x12f>
81000b13:	8b 45 08             	mov    0x8(%ebp),%eax
81000b16:	8b 00                	mov    (%eax),%eax
81000b18:	83 f8 1d             	cmp    $0x1d,%eax
81000b1b:	74 0a                	je     81000b27 <__sflush_r+0x12f>
81000b1d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b20:	8b 00                	mov    (%eax),%eax
81000b22:	83 f8 16             	cmp    $0x16,%eax
81000b25:	75 6e                	jne    81000b95 <__sflush_r+0x19d>
81000b27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b2b:	80 e4 f7             	and    $0xf7,%ah
81000b2e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b32:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000b39:	8b 43 10             	mov    0x10(%ebx),%eax
81000b3c:	89 03                	mov    %eax,(%ebx)
81000b3e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b42:	98                   	cwtl   
81000b43:	25 00 10 00 00       	and    $0x1000,%eax
81000b48:	85 c0                	test   %eax,%eax
81000b4a:	74 15                	je     81000b61 <__sflush_r+0x169>
81000b4c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b50:	75 09                	jne    81000b5b <__sflush_r+0x163>
81000b52:	8b 45 08             	mov    0x8(%ebp),%eax
81000b55:	8b 00                	mov    (%eax),%eax
81000b57:	85 c0                	test   %eax,%eax
81000b59:	75 06                	jne    81000b61 <__sflush_r+0x169>
81000b5b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000b5e:	89 43 50             	mov    %eax,0x50(%ebx)
81000b61:	8b 45 08             	mov    0x8(%ebp),%eax
81000b64:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b67:	89 10                	mov    %edx,(%eax)
81000b69:	8b 43 30             	mov    0x30(%ebx),%eax
81000b6c:	85 c0                	test   %eax,%eax
81000b6e:	74 37                	je     81000ba7 <__sflush_r+0x1af>
81000b70:	8b 53 30             	mov    0x30(%ebx),%edx
81000b73:	8d 43 40             	lea    0x40(%ebx),%eax
81000b76:	39 c2                	cmp    %eax,%edx
81000b78:	74 12                	je     81000b8c <__sflush_r+0x194>
81000b7a:	8b 43 30             	mov    0x30(%ebx),%eax
81000b7d:	83 ec 08             	sub    $0x8,%esp
81000b80:	50                   	push   %eax
81000b81:	ff 75 08             	push   0x8(%ebp)
81000b84:	e8 fa 06 00 00       	call   81001283 <_free_r>
81000b89:	83 c4 10             	add    $0x10,%esp
81000b8c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000b93:	eb 12                	jmp    81000ba7 <__sflush_r+0x1af>
81000b95:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b99:	83 c8 40             	or     $0x40,%eax
81000b9c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ba0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000ba5:	eb 6f                	jmp    81000c16 <__sflush_r+0x21e>
81000ba7:	b8 00 00 00 00       	mov    $0x0,%eax
81000bac:	eb 68                	jmp    81000c16 <__sflush_r+0x21e>
81000bae:	8b 73 10             	mov    0x10(%ebx),%esi
81000bb1:	85 f6                	test   %esi,%esi
81000bb3:	75 07                	jne    81000bbc <__sflush_r+0x1c4>
81000bb5:	b8 00 00 00 00       	mov    $0x0,%eax
81000bba:	eb 5a                	jmp    81000c16 <__sflush_r+0x21e>
81000bbc:	8b 03                	mov    (%ebx),%eax
81000bbe:	29 f0                	sub    %esi,%eax
81000bc0:	89 c7                	mov    %eax,%edi
81000bc2:	89 33                	mov    %esi,(%ebx)
81000bc4:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000bc8:	83 e0 03             	and    $0x3,%eax
81000bcb:	85 c0                	test   %eax,%eax
81000bcd:	75 05                	jne    81000bd4 <__sflush_r+0x1dc>
81000bcf:	8b 43 14             	mov    0x14(%ebx),%eax
81000bd2:	eb 05                	jmp    81000bd9 <__sflush_r+0x1e1>
81000bd4:	b8 00 00 00 00       	mov    $0x0,%eax
81000bd9:	89 43 08             	mov    %eax,0x8(%ebx)
81000bdc:	eb 2f                	jmp    81000c0d <__sflush_r+0x215>
81000bde:	8b 43 24             	mov    0x24(%ebx),%eax
81000be1:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000be4:	57                   	push   %edi
81000be5:	56                   	push   %esi
81000be6:	52                   	push   %edx
81000be7:	ff 75 08             	push   0x8(%ebp)
81000bea:	ff d0                	call   *%eax
81000bec:	83 c4 10             	add    $0x10,%esp
81000bef:	85 c0                	test   %eax,%eax
81000bf1:	7f 12                	jg     81000c05 <__sflush_r+0x20d>
81000bf3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bf7:	83 c8 40             	or     $0x40,%eax
81000bfa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bfe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000c03:	eb 11                	jmp    81000c16 <__sflush_r+0x21e>
81000c05:	89 c1                	mov    %eax,%ecx
81000c07:	89 c8                	mov    %ecx,%eax
81000c09:	01 c6                	add    %eax,%esi
81000c0b:	29 cf                	sub    %ecx,%edi
81000c0d:	85 ff                	test   %edi,%edi
81000c0f:	7f cd                	jg     81000bde <__sflush_r+0x1e6>
81000c11:	b8 00 00 00 00       	mov    $0x0,%eax
81000c16:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000c19:	5b                   	pop    %ebx
81000c1a:	5e                   	pop    %esi
81000c1b:	5f                   	pop    %edi
81000c1c:	5d                   	pop    %ebp
81000c1d:	c3                   	ret    

81000c1e <_fflush_r>:
81000c1e:	55                   	push   %ebp
81000c1f:	89 e5                	mov    %esp,%ebp
81000c21:	53                   	push   %ebx
81000c22:	83 ec 14             	sub    $0x14,%esp
81000c25:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000c28:	8b 45 08             	mov    0x8(%ebp),%eax
81000c2b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c2e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000c32:	74 18                	je     81000c4c <_fflush_r+0x2e>
81000c34:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c37:	8b 40 38             	mov    0x38(%eax),%eax
81000c3a:	85 c0                	test   %eax,%eax
81000c3c:	75 0e                	jne    81000c4c <_fflush_r+0x2e>
81000c3e:	83 ec 0c             	sub    $0xc,%esp
81000c41:	ff 75 f4             	push   -0xc(%ebp)
81000c44:	e8 d8 04 00 00       	call   81001121 <__sinit>
81000c49:	83 c4 10             	add    $0x10,%esp
81000c4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c50:	66 85 c0             	test   %ax,%ax
81000c53:	75 07                	jne    81000c5c <_fflush_r+0x3e>
81000c55:	b8 00 00 00 00       	mov    $0x0,%eax
81000c5a:	eb 15                	jmp    81000c71 <_fflush_r+0x53>
81000c5c:	83 ec 08             	sub    $0x8,%esp
81000c5f:	53                   	push   %ebx
81000c60:	ff 75 08             	push   0x8(%ebp)
81000c63:	e8 90 fd ff ff       	call   810009f8 <__sflush_r>
81000c68:	83 c4 10             	add    $0x10,%esp
81000c6b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000c6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c71:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000c74:	c9                   	leave  
81000c75:	c3                   	ret    

81000c76 <fflush>:
81000c76:	55                   	push   %ebp
81000c77:	89 e5                	mov    %esp,%ebp
81000c79:	83 ec 08             	sub    $0x8,%esp
81000c7c:	8b 55 08             	mov    0x8(%ebp),%edx
81000c7f:	85 d2                	test   %edx,%edx
81000c81:	75 18                	jne    81000c9b <fflush+0x25>
81000c83:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81000c88:	83 ec 08             	sub    $0x8,%esp
81000c8b:	68 1e 0c 00 81       	push   $0x81000c1e
81000c90:	50                   	push   %eax
81000c91:	e8 91 0b 00 00       	call   81001827 <_fwalk_reent>
81000c96:	83 c4 10             	add    $0x10,%esp
81000c99:	eb 12                	jmp    81000cad <fflush+0x37>
81000c9b:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81000ca0:	83 ec 08             	sub    $0x8,%esp
81000ca3:	52                   	push   %edx
81000ca4:	50                   	push   %eax
81000ca5:	e8 74 ff ff ff       	call   81000c1e <_fflush_r>
81000caa:	83 c4 10             	add    $0x10,%esp
81000cad:	c9                   	leave  
81000cae:	c3                   	ret    

81000caf <_fgets_r>:
81000caf:	55                   	push   %ebp
81000cb0:	89 e5                	mov    %esp,%ebp
81000cb2:	83 ec 28             	sub    $0x28,%esp
81000cb5:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000cb9:	7f 0a                	jg     81000cc5 <_fgets_r+0x16>
81000cbb:	b8 00 00 00 00       	mov    $0x0,%eax
81000cc0:	e9 46 01 00 00       	jmp    81000e0b <_fgets_r+0x15c>
81000cc5:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cc8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000ccb:	8b 45 08             	mov    0x8(%ebp),%eax
81000cce:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000cd1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000cd5:	74 18                	je     81000cef <_fgets_r+0x40>
81000cd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000cda:	8b 40 38             	mov    0x38(%eax),%eax
81000cdd:	85 c0                	test   %eax,%eax
81000cdf:	75 0e                	jne    81000cef <_fgets_r+0x40>
81000ce1:	83 ec 0c             	sub    $0xc,%esp
81000ce4:	ff 75 ec             	push   -0x14(%ebp)
81000ce7:	e8 35 04 00 00       	call   81001121 <__sinit>
81000cec:	83 c4 10             	add    $0x10,%esp
81000cef:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000cf3:	8b 45 14             	mov    0x14(%ebp),%eax
81000cf6:	8b 40 04             	mov    0x4(%eax),%eax
81000cf9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cfc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d00:	75 34                	jne    81000d36 <_fgets_r+0x87>
81000d02:	83 ec 08             	sub    $0x8,%esp
81000d05:	ff 75 14             	push   0x14(%ebp)
81000d08:	ff 75 08             	push   0x8(%ebp)
81000d0b:	e8 e4 33 00 00       	call   810040f4 <__srefill_r>
81000d10:	83 c4 10             	add    $0x10,%esp
81000d13:	85 c0                	test   %eax,%eax
81000d15:	74 16                	je     81000d2d <_fgets_r+0x7e>
81000d17:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d1a:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000d1d:	0f 85 de 00 00 00    	jne    81000e01 <_fgets_r+0x152>
81000d23:	b8 00 00 00 00       	mov    $0x0,%eax
81000d28:	e9 de 00 00 00       	jmp    81000e0b <_fgets_r+0x15c>
81000d2d:	8b 45 14             	mov    0x14(%ebp),%eax
81000d30:	8b 40 04             	mov    0x4(%eax),%eax
81000d33:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d36:	8b 45 14             	mov    0x14(%ebp),%eax
81000d39:	8b 00                	mov    (%eax),%eax
81000d3b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000d3e:	8b 45 10             	mov    0x10(%ebp),%eax
81000d41:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000d44:	76 06                	jbe    81000d4c <_fgets_r+0x9d>
81000d46:	8b 45 10             	mov    0x10(%ebp),%eax
81000d49:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d4c:	83 ec 04             	sub    $0x4,%esp
81000d4f:	ff 75 f4             	push   -0xc(%ebp)
81000d52:	6a 0a                	push   $0xa
81000d54:	ff 75 e8             	push   -0x18(%ebp)
81000d57:	e8 04 25 00 00       	call   81003260 <memchr>
81000d5c:	83 c4 10             	add    $0x10,%esp
81000d5f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000d62:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d66:	74 4a                	je     81000db2 <_fgets_r+0x103>
81000d68:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000d6c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000d6f:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000d72:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d75:	8b 45 14             	mov    0x14(%ebp),%eax
81000d78:	8b 40 04             	mov    0x4(%eax),%eax
81000d7b:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000d7e:	89 c2                	mov    %eax,%edx
81000d80:	8b 45 14             	mov    0x14(%ebp),%eax
81000d83:	89 50 04             	mov    %edx,0x4(%eax)
81000d86:	8b 45 14             	mov    0x14(%ebp),%eax
81000d89:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000d8c:	89 10                	mov    %edx,(%eax)
81000d8e:	83 ec 04             	sub    $0x4,%esp
81000d91:	ff 75 f4             	push   -0xc(%ebp)
81000d94:	ff 75 e8             	push   -0x18(%ebp)
81000d97:	ff 75 f0             	push   -0x10(%ebp)
81000d9a:	e8 a9 25 00 00       	call   81003348 <memcpy>
81000d9f:	83 c4 10             	add    $0x10,%esp
81000da2:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000da5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000da8:	01 d0                	add    %edx,%eax
81000daa:	c6 00 00             	movb   $0x0,(%eax)
81000dad:	8b 45 0c             	mov    0xc(%ebp),%eax
81000db0:	eb 59                	jmp    81000e0b <_fgets_r+0x15c>
81000db2:	8b 45 14             	mov    0x14(%ebp),%eax
81000db5:	8b 40 04             	mov    0x4(%eax),%eax
81000db8:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000dbb:	89 c2                	mov    %eax,%edx
81000dbd:	8b 45 14             	mov    0x14(%ebp),%eax
81000dc0:	89 50 04             	mov    %edx,0x4(%eax)
81000dc3:	8b 45 14             	mov    0x14(%ebp),%eax
81000dc6:	8b 10                	mov    (%eax),%edx
81000dc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dcb:	01 c2                	add    %eax,%edx
81000dcd:	8b 45 14             	mov    0x14(%ebp),%eax
81000dd0:	89 10                	mov    %edx,(%eax)
81000dd2:	83 ec 04             	sub    $0x4,%esp
81000dd5:	ff 75 f4             	push   -0xc(%ebp)
81000dd8:	ff 75 e8             	push   -0x18(%ebp)
81000ddb:	ff 75 f0             	push   -0x10(%ebp)
81000dde:	e8 65 25 00 00       	call   81003348 <memcpy>
81000de3:	83 c4 10             	add    $0x10,%esp
81000de6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000de9:	01 45 f0             	add    %eax,-0x10(%ebp)
81000dec:	8b 45 10             	mov    0x10(%ebp),%eax
81000def:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000df2:	89 45 10             	mov    %eax,0x10(%ebp)
81000df5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000df9:	0f 85 f4 fe ff ff    	jne    81000cf3 <_fgets_r+0x44>
81000dff:	eb 01                	jmp    81000e02 <_fgets_r+0x153>
81000e01:	90                   	nop
81000e02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e05:	c6 00 00             	movb   $0x0,(%eax)
81000e08:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e0b:	c9                   	leave  
81000e0c:	c3                   	ret    

81000e0d <fgets>:
81000e0d:	55                   	push   %ebp
81000e0e:	89 e5                	mov    %esp,%ebp
81000e10:	83 ec 08             	sub    $0x8,%esp
81000e13:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81000e18:	ff 75 10             	push   0x10(%ebp)
81000e1b:	ff 75 0c             	push   0xc(%ebp)
81000e1e:	ff 75 08             	push   0x8(%ebp)
81000e21:	50                   	push   %eax
81000e22:	e8 88 fe ff ff       	call   81000caf <_fgets_r>
81000e27:	83 c4 10             	add    $0x10,%esp
81000e2a:	c9                   	leave  
81000e2b:	c3                   	ret    

81000e2c <std>:
81000e2c:	55                   	push   %ebp
81000e2d:	89 e5                	mov    %esp,%ebp
81000e2f:	83 ec 08             	sub    $0x8,%esp
81000e32:	8b 45 08             	mov    0x8(%ebp),%eax
81000e35:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000e3b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e3e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000e45:	8b 45 08             	mov    0x8(%ebp),%eax
81000e48:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000e4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e52:	89 c2                	mov    %eax,%edx
81000e54:	8b 45 08             	mov    0x8(%ebp),%eax
81000e57:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000e5b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e5e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000e65:	8b 45 10             	mov    0x10(%ebp),%eax
81000e68:	89 c2                	mov    %eax,%edx
81000e6a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6d:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000e71:	8b 45 08             	mov    0x8(%ebp),%eax
81000e74:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000e7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e7e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000e85:	8b 45 08             	mov    0x8(%ebp),%eax
81000e88:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000e8f:	8b 45 08             	mov    0x8(%ebp),%eax
81000e92:	83 c0 5c             	add    $0x5c,%eax
81000e95:	83 ec 04             	sub    $0x4,%esp
81000e98:	6a 08                	push   $0x8
81000e9a:	6a 00                	push   $0x0
81000e9c:	50                   	push   %eax
81000e9d:	e8 ee 24 00 00       	call   81003390 <memset>
81000ea2:	83 c4 10             	add    $0x10,%esp
81000ea5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea8:	8b 55 08             	mov    0x8(%ebp),%edx
81000eab:	89 50 1c             	mov    %edx,0x1c(%eax)
81000eae:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb1:	c7 40 20 35 43 00 81 	movl   $0x81004335,0x20(%eax)
81000eb8:	8b 45 08             	mov    0x8(%ebp),%eax
81000ebb:	c7 40 24 83 43 00 81 	movl   $0x81004383,0x24(%eax)
81000ec2:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec5:	c7 40 28 de 43 00 81 	movl   $0x810043de,0x28(%eax)
81000ecc:	8b 45 08             	mov    0x8(%ebp),%eax
81000ecf:	c7 40 2c 28 44 00 81 	movl   $0x81004428,0x2c(%eax)
81000ed6:	90                   	nop
81000ed7:	c9                   	leave  
81000ed8:	c3                   	ret    

81000ed9 <stdin_init>:
81000ed9:	55                   	push   %ebp
81000eda:	89 e5                	mov    %esp,%ebp
81000edc:	83 ec 08             	sub    $0x8,%esp
81000edf:	83 ec 04             	sub    $0x4,%esp
81000ee2:	6a 00                	push   $0x0
81000ee4:	6a 04                	push   $0x4
81000ee6:	ff 75 08             	push   0x8(%ebp)
81000ee9:	e8 3e ff ff ff       	call   81000e2c <std>
81000eee:	83 c4 10             	add    $0x10,%esp
81000ef1:	90                   	nop
81000ef2:	c9                   	leave  
81000ef3:	c3                   	ret    

81000ef4 <stdout_init>:
81000ef4:	55                   	push   %ebp
81000ef5:	89 e5                	mov    %esp,%ebp
81000ef7:	83 ec 08             	sub    $0x8,%esp
81000efa:	83 ec 04             	sub    $0x4,%esp
81000efd:	6a 01                	push   $0x1
81000eff:	6a 09                	push   $0x9
81000f01:	ff 75 08             	push   0x8(%ebp)
81000f04:	e8 23 ff ff ff       	call   81000e2c <std>
81000f09:	83 c4 10             	add    $0x10,%esp
81000f0c:	90                   	nop
81000f0d:	c9                   	leave  
81000f0e:	c3                   	ret    

81000f0f <stderr_init>:
81000f0f:	55                   	push   %ebp
81000f10:	89 e5                	mov    %esp,%ebp
81000f12:	83 ec 08             	sub    $0x8,%esp
81000f15:	83 ec 04             	sub    $0x4,%esp
81000f18:	6a 02                	push   $0x2
81000f1a:	6a 12                	push   $0x12
81000f1c:	ff 75 08             	push   0x8(%ebp)
81000f1f:	e8 08 ff ff ff       	call   81000e2c <std>
81000f24:	83 c4 10             	add    $0x10,%esp
81000f27:	90                   	nop
81000f28:	c9                   	leave  
81000f29:	c3                   	ret    

81000f2a <__sfmoreglue>:
81000f2a:	55                   	push   %ebp
81000f2b:	89 e5                	mov    %esp,%ebp
81000f2d:	53                   	push   %ebx
81000f2e:	83 ec 14             	sub    $0x14,%esp
81000f31:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000f34:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000f37:	6b c0 68             	imul   $0x68,%eax,%eax
81000f3a:	83 c0 74             	add    $0x74,%eax
81000f3d:	83 ec 08             	sub    $0x8,%esp
81000f40:	50                   	push   %eax
81000f41:	ff 75 08             	push   0x8(%ebp)
81000f44:	e8 ea 1a 00 00       	call   81002a33 <_malloc_r>
81000f49:	83 c4 10             	add    $0x10,%esp
81000f4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f4f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000f53:	75 07                	jne    81000f5c <__sfmoreglue+0x32>
81000f55:	b8 00 00 00 00       	mov    $0x0,%eax
81000f5a:	eb 38                	jmp    81000f94 <__sfmoreglue+0x6a>
81000f5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f5f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000f65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f68:	89 58 04             	mov    %ebx,0x4(%eax)
81000f6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f6e:	8d 50 0c             	lea    0xc(%eax),%edx
81000f71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f74:	89 50 08             	mov    %edx,0x8(%eax)
81000f77:	89 d8                	mov    %ebx,%eax
81000f79:	6b c0 68             	imul   $0x68,%eax,%eax
81000f7c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f7f:	83 c2 0c             	add    $0xc,%edx
81000f82:	83 ec 04             	sub    $0x4,%esp
81000f85:	50                   	push   %eax
81000f86:	6a 00                	push   $0x0
81000f88:	52                   	push   %edx
81000f89:	e8 02 24 00 00       	call   81003390 <memset>
81000f8e:	83 c4 10             	add    $0x10,%esp
81000f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f94:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000f97:	c9                   	leave  
81000f98:	c3                   	ret    

81000f99 <__sfp>:
81000f99:	55                   	push   %ebp
81000f9a:	89 e5                	mov    %esp,%ebp
81000f9c:	83 ec 18             	sub    $0x18,%esp
81000f9f:	e8 16 02 00 00       	call   810011ba <__sfp_lock_acquire>
81000fa4:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81000fa9:	8b 40 38             	mov    0x38(%eax),%eax
81000fac:	85 c0                	test   %eax,%eax
81000fae:	75 11                	jne    81000fc1 <__sfp+0x28>
81000fb0:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81000fb5:	83 ec 0c             	sub    $0xc,%esp
81000fb8:	50                   	push   %eax
81000fb9:	e8 63 01 00 00       	call   81001121 <__sinit>
81000fbe:	83 c4 10             	add    $0x10,%esp
81000fc1:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81000fc6:	05 e0 02 00 00       	add    $0x2e0,%eax
81000fcb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fce:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fd1:	8b 40 08             	mov    0x8(%eax),%eax
81000fd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fda:	8b 40 04             	mov    0x4(%eax),%eax
81000fdd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fe0:	eb 10                	jmp    81000ff2 <__sfp+0x59>
81000fe2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000fe9:	66 85 c0             	test   %ax,%ax
81000fec:	74 58                	je     81001046 <__sfp+0xad>
81000fee:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000ff2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000ff6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000ffa:	79 e6                	jns    81000fe2 <__sfp+0x49>
81000ffc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fff:	8b 00                	mov    (%eax),%eax
81001001:	85 c0                	test   %eax,%eax
81001003:	75 1e                	jne    81001023 <__sfp+0x8a>
81001005:	83 ec 08             	sub    $0x8,%esp
81001008:	6a 04                	push   $0x4
8100100a:	ff 75 08             	push   0x8(%ebp)
8100100d:	e8 18 ff ff ff       	call   81000f2a <__sfmoreglue>
81001012:	83 c4 10             	add    $0x10,%esp
81001015:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001018:	89 02                	mov    %eax,(%edx)
8100101a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100101d:	8b 00                	mov    (%eax),%eax
8100101f:	85 c0                	test   %eax,%eax
81001021:	74 0a                	je     8100102d <__sfp+0x94>
81001023:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001026:	8b 00                	mov    (%eax),%eax
81001028:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100102b:	eb a1                	jmp    81000fce <__sfp+0x35>
8100102d:	90                   	nop
8100102e:	e8 8d 01 00 00       	call   810011c0 <__sfp_lock_release>
81001033:	8b 45 08             	mov    0x8(%ebp),%eax
81001036:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100103c:	b8 00 00 00 00       	mov    $0x0,%eax
81001041:	e9 9e 00 00 00       	jmp    810010e4 <__sfp+0x14b>
81001046:	90                   	nop
81001047:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100104a:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001050:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001053:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81001059:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100105c:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001063:	e8 58 01 00 00       	call   810011c0 <__sfp_lock_release>
81001068:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001071:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001074:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100107b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100107e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001085:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001088:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100108f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001092:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001099:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100109c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810010a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010a6:	83 c0 5c             	add    $0x5c,%eax
810010a9:	83 ec 04             	sub    $0x4,%esp
810010ac:	6a 08                	push   $0x8
810010ae:	6a 00                	push   $0x0
810010b0:	50                   	push   %eax
810010b1:	e8 da 22 00 00       	call   81003390 <memset>
810010b6:	83 c4 10             	add    $0x10,%esp
810010b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010bc:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810010c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010c6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810010cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d0:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810010d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010da:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810010e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010e4:	c9                   	leave  
810010e5:	c3                   	ret    

810010e6 <_cleanup_r>:
810010e6:	55                   	push   %ebp
810010e7:	89 e5                	mov    %esp,%ebp
810010e9:	83 ec 18             	sub    $0x18,%esp
810010ec:	c7 45 f4 12 4e 00 81 	movl   $0x81004e12,-0xc(%ebp)
810010f3:	83 ec 08             	sub    $0x8,%esp
810010f6:	ff 75 f4             	push   -0xc(%ebp)
810010f9:	ff 75 08             	push   0x8(%ebp)
810010fc:	e8 26 07 00 00       	call   81001827 <_fwalk_reent>
81001101:	83 c4 10             	add    $0x10,%esp
81001104:	90                   	nop
81001105:	c9                   	leave  
81001106:	c3                   	ret    

81001107 <_cleanup>:
81001107:	55                   	push   %ebp
81001108:	89 e5                	mov    %esp,%ebp
8100110a:	83 ec 08             	sub    $0x8,%esp
8100110d:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81001112:	83 ec 0c             	sub    $0xc,%esp
81001115:	50                   	push   %eax
81001116:	e8 cb ff ff ff       	call   810010e6 <_cleanup_r>
8100111b:	83 c4 10             	add    $0x10,%esp
8100111e:	90                   	nop
8100111f:	c9                   	leave  
81001120:	c3                   	ret    

81001121 <__sinit>:
81001121:	55                   	push   %ebp
81001122:	89 e5                	mov    %esp,%ebp
81001124:	83 ec 08             	sub    $0x8,%esp
81001127:	e8 9a 00 00 00       	call   810011c6 <__sinit_lock_acquire>
8100112c:	8b 45 08             	mov    0x8(%ebp),%eax
8100112f:	8b 40 38             	mov    0x38(%eax),%eax
81001132:	85 c0                	test   %eax,%eax
81001134:	74 07                	je     8100113d <__sinit+0x1c>
81001136:	e8 91 00 00 00       	call   810011cc <__sinit_lock_release>
8100113b:	eb 7b                	jmp    810011b8 <__sinit+0x97>
8100113d:	8b 45 08             	mov    0x8(%ebp),%eax
81001140:	c7 40 3c e6 10 00 81 	movl   $0x810010e6,0x3c(%eax)
81001147:	8b 45 08             	mov    0x8(%ebp),%eax
8100114a:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001151:	00 00 00 
81001154:	8b 45 08             	mov    0x8(%ebp),%eax
81001157:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100115e:	00 00 00 
81001161:	8b 45 08             	mov    0x8(%ebp),%eax
81001164:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100116a:	8b 45 08             	mov    0x8(%ebp),%eax
8100116d:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001173:	8b 45 08             	mov    0x8(%ebp),%eax
81001176:	8b 40 04             	mov    0x4(%eax),%eax
81001179:	83 ec 0c             	sub    $0xc,%esp
8100117c:	50                   	push   %eax
8100117d:	e8 57 fd ff ff       	call   81000ed9 <stdin_init>
81001182:	83 c4 10             	add    $0x10,%esp
81001185:	8b 45 08             	mov    0x8(%ebp),%eax
81001188:	8b 40 08             	mov    0x8(%eax),%eax
8100118b:	83 ec 0c             	sub    $0xc,%esp
8100118e:	50                   	push   %eax
8100118f:	e8 60 fd ff ff       	call   81000ef4 <stdout_init>
81001194:	83 c4 10             	add    $0x10,%esp
81001197:	8b 45 08             	mov    0x8(%ebp),%eax
8100119a:	8b 40 0c             	mov    0xc(%eax),%eax
8100119d:	83 ec 0c             	sub    $0xc,%esp
810011a0:	50                   	push   %eax
810011a1:	e8 69 fd ff ff       	call   81000f0f <stderr_init>
810011a6:	83 c4 10             	add    $0x10,%esp
810011a9:	8b 45 08             	mov    0x8(%ebp),%eax
810011ac:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810011b3:	e8 14 00 00 00       	call   810011cc <__sinit_lock_release>
810011b8:	c9                   	leave  
810011b9:	c3                   	ret    

810011ba <__sfp_lock_acquire>:
810011ba:	55                   	push   %ebp
810011bb:	89 e5                	mov    %esp,%ebp
810011bd:	90                   	nop
810011be:	5d                   	pop    %ebp
810011bf:	c3                   	ret    

810011c0 <__sfp_lock_release>:
810011c0:	55                   	push   %ebp
810011c1:	89 e5                	mov    %esp,%ebp
810011c3:	90                   	nop
810011c4:	5d                   	pop    %ebp
810011c5:	c3                   	ret    

810011c6 <__sinit_lock_acquire>:
810011c6:	55                   	push   %ebp
810011c7:	89 e5                	mov    %esp,%ebp
810011c9:	90                   	nop
810011ca:	5d                   	pop    %ebp
810011cb:	c3                   	ret    

810011cc <__sinit_lock_release>:
810011cc:	55                   	push   %ebp
810011cd:	89 e5                	mov    %esp,%ebp
810011cf:	90                   	nop
810011d0:	5d                   	pop    %ebp
810011d1:	c3                   	ret    

810011d2 <__fp_lock>:
810011d2:	55                   	push   %ebp
810011d3:	89 e5                	mov    %esp,%ebp
810011d5:	b8 00 00 00 00       	mov    $0x0,%eax
810011da:	5d                   	pop    %ebp
810011db:	c3                   	ret    

810011dc <__fp_unlock>:
810011dc:	55                   	push   %ebp
810011dd:	89 e5                	mov    %esp,%ebp
810011df:	b8 00 00 00 00       	mov    $0x0,%eax
810011e4:	5d                   	pop    %ebp
810011e5:	c3                   	ret    

810011e6 <__fp_lock_all>:
810011e6:	55                   	push   %ebp
810011e7:	89 e5                	mov    %esp,%ebp
810011e9:	83 ec 08             	sub    $0x8,%esp
810011ec:	e8 c9 ff ff ff       	call   810011ba <__sfp_lock_acquire>
810011f1:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810011f6:	83 ec 08             	sub    $0x8,%esp
810011f9:	68 d2 11 00 81       	push   $0x810011d2
810011fe:	50                   	push   %eax
810011ff:	e8 bb 05 00 00       	call   810017bf <_fwalk>
81001204:	83 c4 10             	add    $0x10,%esp
81001207:	90                   	nop
81001208:	c9                   	leave  
81001209:	c3                   	ret    

8100120a <__fp_unlock_all>:
8100120a:	55                   	push   %ebp
8100120b:	89 e5                	mov    %esp,%ebp
8100120d:	83 ec 08             	sub    $0x8,%esp
81001210:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81001215:	83 ec 08             	sub    $0x8,%esp
81001218:	68 dc 11 00 81       	push   $0x810011dc
8100121d:	50                   	push   %eax
8100121e:	e8 9c 05 00 00       	call   810017bf <_fwalk>
81001223:	83 c4 10             	add    $0x10,%esp
81001226:	e8 95 ff ff ff       	call   810011c0 <__sfp_lock_release>
8100122b:	90                   	nop
8100122c:	c9                   	leave  
8100122d:	c3                   	ret    

8100122e <_fiprintf_r>:
8100122e:	55                   	push   %ebp
8100122f:	89 e5                	mov    %esp,%ebp
81001231:	83 ec 18             	sub    $0x18,%esp
81001234:	8d 45 14             	lea    0x14(%ebp),%eax
81001237:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100123a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100123d:	50                   	push   %eax
8100123e:	ff 75 10             	push   0x10(%ebp)
81001241:	ff 75 0c             	push   0xc(%ebp)
81001244:	ff 75 08             	push   0x8(%ebp)
81001247:	e8 e7 23 00 00       	call   81003633 <_vfiprintf_r>
8100124c:	83 c4 10             	add    $0x10,%esp
8100124f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001252:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001255:	c9                   	leave  
81001256:	c3                   	ret    

81001257 <fiprintf>:
81001257:	55                   	push   %ebp
81001258:	89 e5                	mov    %esp,%ebp
8100125a:	83 ec 18             	sub    $0x18,%esp
8100125d:	8d 45 10             	lea    0x10(%ebp),%eax
81001260:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001263:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001266:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100126b:	52                   	push   %edx
8100126c:	ff 75 0c             	push   0xc(%ebp)
8100126f:	ff 75 08             	push   0x8(%ebp)
81001272:	50                   	push   %eax
81001273:	e8 bb 23 00 00       	call   81003633 <_vfiprintf_r>
81001278:	83 c4 10             	add    $0x10,%esp
8100127b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100127e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001281:	c9                   	leave  
81001282:	c3                   	ret    

81001283 <_free_r>:
81001283:	55                   	push   %ebp
81001284:	89 e5                	mov    %esp,%ebp
81001286:	53                   	push   %ebx
81001287:	83 ec 34             	sub    $0x34,%esp
8100128a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100128e:	0f 84 c4 03 00 00    	je     81001658 <_free_r+0x3d5>
81001294:	83 ec 0c             	sub    $0xc,%esp
81001297:	ff 75 08             	push   0x8(%ebp)
8100129a:	e8 79 21 00 00       	call   81003418 <__malloc_lock>
8100129f:	83 c4 10             	add    $0x10,%esp
810012a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810012a5:	83 e8 08             	sub    $0x8,%eax
810012a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ae:	8b 40 04             	mov    0x4(%eax),%eax
810012b1:	89 45 e0             	mov    %eax,-0x20(%ebp)
810012b4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810012b7:	83 e0 fe             	and    $0xfffffffe,%eax
810012ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012bd:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012c3:	01 d0                	add    %edx,%eax
810012c5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012c8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012cb:	8b 40 04             	mov    0x4(%eax),%eax
810012ce:	83 e0 fc             	and    $0xfffffffc,%eax
810012d1:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012d4:	b8 00 75 00 81       	mov    $0x81007500,%eax
810012d9:	8b 40 08             	mov    0x8(%eax),%eax
810012dc:	39 45 dc             	cmp    %eax,-0x24(%ebp)
810012df:	0f 85 94 00 00 00    	jne    81001379 <_free_r+0xf6>
810012e5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012e8:	01 45 f0             	add    %eax,-0x10(%ebp)
810012eb:	8b 45 e0             	mov    -0x20(%ebp),%eax
810012ee:	83 e0 01             	and    $0x1,%eax
810012f1:	85 c0                	test   %eax,%eax
810012f3:	75 3a                	jne    8100132f <_free_r+0xac>
810012f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f8:	8b 00                	mov    (%eax),%eax
810012fa:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810012fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001300:	f7 d8                	neg    %eax
81001302:	01 45 f4             	add    %eax,-0xc(%ebp)
81001305:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001308:	01 45 f0             	add    %eax,-0x10(%ebp)
8100130b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130e:	8b 40 0c             	mov    0xc(%eax),%eax
81001311:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001314:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001317:	8b 40 08             	mov    0x8(%eax),%eax
8100131a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100131d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001320:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001323:	89 50 0c             	mov    %edx,0xc(%eax)
81001326:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001329:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100132c:	89 50 08             	mov    %edx,0x8(%eax)
8100132f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001332:	83 c8 01             	or     $0x1,%eax
81001335:	89 c2                	mov    %eax,%edx
81001337:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100133a:	89 50 04             	mov    %edx,0x4(%eax)
8100133d:	ba 00 75 00 81       	mov    $0x81007500,%edx
81001342:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001345:	89 42 08             	mov    %eax,0x8(%edx)
81001348:	a1 08 79 00 81       	mov    0x81007908,%eax
8100134d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001350:	72 14                	jb     81001366 <_free_r+0xe3>
81001352:	a1 e0 80 00 81       	mov    0x810080e0,%eax
81001357:	83 ec 08             	sub    $0x8,%esp
8100135a:	50                   	push   %eax
8100135b:	ff 75 08             	push   0x8(%ebp)
8100135e:	e8 fb 02 00 00       	call   8100165e <_malloc_trim_r>
81001363:	83 c4 10             	add    $0x10,%esp
81001366:	83 ec 0c             	sub    $0xc,%esp
81001369:	ff 75 08             	push   0x8(%ebp)
8100136c:	e8 ad 20 00 00       	call   8100341e <__malloc_unlock>
81001371:	83 c4 10             	add    $0x10,%esp
81001374:	e9 e0 02 00 00       	jmp    81001659 <_free_r+0x3d6>
81001379:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100137c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100137f:	89 50 04             	mov    %edx,0x4(%eax)
81001382:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001389:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100138c:	83 e0 01             	and    $0x1,%eax
8100138f:	85 c0                	test   %eax,%eax
81001391:	75 52                	jne    810013e5 <_free_r+0x162>
81001393:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001396:	8b 00                	mov    (%eax),%eax
81001398:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100139b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100139e:	f7 d8                	neg    %eax
810013a0:	01 45 f4             	add    %eax,-0xc(%ebp)
810013a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810013a6:	01 45 f0             	add    %eax,-0x10(%ebp)
810013a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ac:	8b 40 08             	mov    0x8(%eax),%eax
810013af:	ba 08 75 00 81       	mov    $0x81007508,%edx
810013b4:	39 d0                	cmp    %edx,%eax
810013b6:	75 09                	jne    810013c1 <_free_r+0x13e>
810013b8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810013bf:	eb 24                	jmp    810013e5 <_free_r+0x162>
810013c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c4:	8b 40 0c             	mov    0xc(%eax),%eax
810013c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013cd:	8b 40 08             	mov    0x8(%eax),%eax
810013d0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013d3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013d6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810013d9:	89 50 0c             	mov    %edx,0xc(%eax)
810013dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013df:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013e2:	89 50 08             	mov    %edx,0x8(%eax)
810013e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013e8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013eb:	01 d0                	add    %edx,%eax
810013ed:	8b 40 04             	mov    0x4(%eax),%eax
810013f0:	83 e0 01             	and    $0x1,%eax
810013f3:	85 c0                	test   %eax,%eax
810013f5:	75 75                	jne    8100146c <_free_r+0x1e9>
810013f7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013fa:	01 45 f0             	add    %eax,-0x10(%ebp)
810013fd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001401:	75 45                	jne    81001448 <_free_r+0x1c5>
81001403:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001406:	8b 40 08             	mov    0x8(%eax),%eax
81001409:	ba 08 75 00 81       	mov    $0x81007508,%edx
8100140e:	39 d0                	cmp    %edx,%eax
81001410:	75 36                	jne    81001448 <_free_r+0x1c5>
81001412:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001419:	b8 08 75 00 81       	mov    $0x81007508,%eax
8100141e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001421:	89 50 0c             	mov    %edx,0xc(%eax)
81001424:	ba 08 75 00 81       	mov    $0x81007508,%edx
81001429:	8b 40 0c             	mov    0xc(%eax),%eax
8100142c:	89 42 08             	mov    %eax,0x8(%edx)
8100142f:	ba 08 75 00 81       	mov    $0x81007508,%edx
81001434:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001437:	89 50 0c             	mov    %edx,0xc(%eax)
8100143a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143d:	8b 50 0c             	mov    0xc(%eax),%edx
81001440:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001443:	89 50 08             	mov    %edx,0x8(%eax)
81001446:	eb 24                	jmp    8100146c <_free_r+0x1e9>
81001448:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100144b:	8b 40 0c             	mov    0xc(%eax),%eax
8100144e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001451:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001454:	8b 40 08             	mov    0x8(%eax),%eax
81001457:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100145a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100145d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001460:	89 50 0c             	mov    %edx,0xc(%eax)
81001463:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001466:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001469:	89 50 08             	mov    %edx,0x8(%eax)
8100146c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100146f:	83 c8 01             	or     $0x1,%eax
81001472:	89 c2                	mov    %eax,%edx
81001474:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001477:	89 50 04             	mov    %edx,0x4(%eax)
8100147a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100147d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001480:	01 c2                	add    %eax,%edx
81001482:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001485:	89 02                	mov    %eax,(%edx)
81001487:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100148b:	0f 85 b7 01 00 00    	jne    81001648 <_free_r+0x3c5>
81001491:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001498:	77 7f                	ja     81001519 <_free_r+0x296>
8100149a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100149d:	c1 e8 03             	shr    $0x3,%eax
810014a0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810014a3:	b8 00 75 00 81       	mov    $0x81007500,%eax
810014a8:	8b 58 04             	mov    0x4(%eax),%ebx
810014ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014ae:	8d 50 03             	lea    0x3(%eax),%edx
810014b1:	85 c0                	test   %eax,%eax
810014b3:	0f 48 c2             	cmovs  %edx,%eax
810014b6:	c1 f8 02             	sar    $0x2,%eax
810014b9:	ba 01 00 00 00       	mov    $0x1,%edx
810014be:	89 c1                	mov    %eax,%ecx
810014c0:	d3 e2                	shl    %cl,%edx
810014c2:	89 d0                	mov    %edx,%eax
810014c4:	ba 00 75 00 81       	mov    $0x81007500,%edx
810014c9:	09 d8                	or     %ebx,%eax
810014cb:	89 42 04             	mov    %eax,0x4(%edx)
810014ce:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014d1:	83 c0 01             	add    $0x1,%eax
810014d4:	01 c0                	add    %eax,%eax
810014d6:	c1 e0 02             	shl    $0x2,%eax
810014d9:	05 00 75 00 81       	add    $0x81007500,%eax
810014de:	83 e8 08             	sub    $0x8,%eax
810014e1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014e7:	8b 40 08             	mov    0x8(%eax),%eax
810014ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f0:	8b 55 ec             	mov    -0x14(%ebp),%edx
810014f3:	89 50 0c             	mov    %edx,0xc(%eax)
810014f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014fc:	89 50 08             	mov    %edx,0x8(%eax)
810014ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001502:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001505:	89 50 08             	mov    %edx,0x8(%eax)
81001508:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100150b:	8b 50 08             	mov    0x8(%eax),%edx
8100150e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001511:	89 50 0c             	mov    %edx,0xc(%eax)
81001514:	e9 2f 01 00 00       	jmp    81001648 <_free_r+0x3c5>
81001519:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100151c:	c1 e8 09             	shr    $0x9,%eax
8100151f:	85 c0                	test   %eax,%eax
81001521:	75 08                	jne    8100152b <_free_r+0x2a8>
81001523:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001526:	c1 e8 03             	shr    $0x3,%eax
81001529:	eb 77                	jmp    810015a2 <_free_r+0x31f>
8100152b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100152e:	c1 e8 09             	shr    $0x9,%eax
81001531:	83 f8 04             	cmp    $0x4,%eax
81001534:	77 0b                	ja     81001541 <_free_r+0x2be>
81001536:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001539:	c1 e8 06             	shr    $0x6,%eax
8100153c:	83 c0 38             	add    $0x38,%eax
8100153f:	eb 61                	jmp    810015a2 <_free_r+0x31f>
81001541:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001544:	c1 e8 09             	shr    $0x9,%eax
81001547:	83 f8 14             	cmp    $0x14,%eax
8100154a:	77 0b                	ja     81001557 <_free_r+0x2d4>
8100154c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100154f:	c1 e8 09             	shr    $0x9,%eax
81001552:	83 c0 5b             	add    $0x5b,%eax
81001555:	eb 4b                	jmp    810015a2 <_free_r+0x31f>
81001557:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100155a:	c1 e8 09             	shr    $0x9,%eax
8100155d:	83 f8 54             	cmp    $0x54,%eax
81001560:	77 0b                	ja     8100156d <_free_r+0x2ea>
81001562:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001565:	c1 e8 0c             	shr    $0xc,%eax
81001568:	83 c0 6e             	add    $0x6e,%eax
8100156b:	eb 35                	jmp    810015a2 <_free_r+0x31f>
8100156d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001570:	c1 e8 09             	shr    $0x9,%eax
81001573:	3d 54 01 00 00       	cmp    $0x154,%eax
81001578:	77 0b                	ja     81001585 <_free_r+0x302>
8100157a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100157d:	c1 e8 0f             	shr    $0xf,%eax
81001580:	83 c0 77             	add    $0x77,%eax
81001583:	eb 1d                	jmp    810015a2 <_free_r+0x31f>
81001585:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001588:	c1 e8 09             	shr    $0x9,%eax
8100158b:	3d 54 05 00 00       	cmp    $0x554,%eax
81001590:	77 0b                	ja     8100159d <_free_r+0x31a>
81001592:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001595:	c1 e8 12             	shr    $0x12,%eax
81001598:	83 c0 7c             	add    $0x7c,%eax
8100159b:	eb 05                	jmp    810015a2 <_free_r+0x31f>
8100159d:	b8 7e 00 00 00       	mov    $0x7e,%eax
810015a2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810015a5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810015a8:	83 c0 01             	add    $0x1,%eax
810015ab:	01 c0                	add    %eax,%eax
810015ad:	c1 e0 02             	shl    $0x2,%eax
810015b0:	05 00 75 00 81       	add    $0x81007500,%eax
810015b5:	83 e8 08             	sub    $0x8,%eax
810015b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810015bb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810015be:	8b 40 08             	mov    0x8(%eax),%eax
810015c1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810015c4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015c7:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810015ca:	75 36                	jne    81001602 <_free_r+0x37f>
810015cc:	b8 00 75 00 81       	mov    $0x81007500,%eax
810015d1:	8b 58 04             	mov    0x4(%eax),%ebx
810015d4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810015d7:	8d 50 03             	lea    0x3(%eax),%edx
810015da:	85 c0                	test   %eax,%eax
810015dc:	0f 48 c2             	cmovs  %edx,%eax
810015df:	c1 f8 02             	sar    $0x2,%eax
810015e2:	ba 01 00 00 00       	mov    $0x1,%edx
810015e7:	89 c1                	mov    %eax,%ecx
810015e9:	d3 e2                	shl    %cl,%edx
810015eb:	89 d0                	mov    %edx,%eax
810015ed:	ba 00 75 00 81       	mov    $0x81007500,%edx
810015f2:	09 d8                	or     %ebx,%eax
810015f4:	89 42 04             	mov    %eax,0x4(%edx)
810015f7:	eb 28                	jmp    81001621 <_free_r+0x39e>
810015f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015fc:	8b 40 08             	mov    0x8(%eax),%eax
810015ff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001602:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001605:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001608:	74 0e                	je     81001618 <_free_r+0x395>
8100160a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100160d:	8b 40 04             	mov    0x4(%eax),%eax
81001610:	83 e0 fc             	and    $0xfffffffc,%eax
81001613:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001616:	72 e1                	jb     810015f9 <_free_r+0x376>
81001618:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100161b:	8b 40 0c             	mov    0xc(%eax),%eax
8100161e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001621:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001624:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001627:	89 50 0c             	mov    %edx,0xc(%eax)
8100162a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100162d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001630:	89 50 08             	mov    %edx,0x8(%eax)
81001633:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001636:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001639:	89 50 08             	mov    %edx,0x8(%eax)
8100163c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100163f:	8b 50 08             	mov    0x8(%eax),%edx
81001642:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001645:	89 50 0c             	mov    %edx,0xc(%eax)
81001648:	83 ec 0c             	sub    $0xc,%esp
8100164b:	ff 75 08             	push   0x8(%ebp)
8100164e:	e8 cb 1d 00 00       	call   8100341e <__malloc_unlock>
81001653:	83 c4 10             	add    $0x10,%esp
81001656:	eb 01                	jmp    81001659 <_free_r+0x3d6>
81001658:	90                   	nop
81001659:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100165c:	c9                   	leave  
8100165d:	c3                   	ret    

8100165e <_malloc_trim_r>:
8100165e:	55                   	push   %ebp
8100165f:	89 e5                	mov    %esp,%ebp
81001661:	83 ec 28             	sub    $0x28,%esp
81001664:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
8100166b:	83 ec 0c             	sub    $0xc,%esp
8100166e:	ff 75 08             	push   0x8(%ebp)
81001671:	e8 a2 1d 00 00       	call   81003418 <__malloc_lock>
81001676:	83 c4 10             	add    $0x10,%esp
81001679:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100167e:	8b 40 08             	mov    0x8(%eax),%eax
81001681:	8b 40 04             	mov    0x4(%eax),%eax
81001684:	83 e0 fc             	and    $0xfffffffc,%eax
81001687:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100168a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100168d:	2b 45 0c             	sub    0xc(%ebp),%eax
81001690:	89 c2                	mov    %eax,%edx
81001692:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001695:	01 d0                	add    %edx,%eax
81001697:	83 e8 11             	sub    $0x11,%eax
8100169a:	ba 00 00 00 00       	mov    $0x0,%edx
8100169f:	f7 75 f4             	divl   -0xc(%ebp)
810016a2:	83 e8 01             	sub    $0x1,%eax
810016a5:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810016a9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016af:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810016b2:	7d 18                	jge    810016cc <_malloc_trim_r+0x6e>
810016b4:	83 ec 0c             	sub    $0xc,%esp
810016b7:	ff 75 08             	push   0x8(%ebp)
810016ba:	e8 5f 1d 00 00       	call   8100341e <__malloc_unlock>
810016bf:	83 c4 10             	add    $0x10,%esp
810016c2:	b8 00 00 00 00       	mov    $0x0,%eax
810016c7:	e9 f1 00 00 00       	jmp    810017bd <_malloc_trim_r+0x15f>
810016cc:	83 ec 08             	sub    $0x8,%esp
810016cf:	6a 00                	push   $0x0
810016d1:	ff 75 08             	push   0x8(%ebp)
810016d4:	e8 1c 2c 00 00       	call   810042f5 <_sbrk_r>
810016d9:	83 c4 10             	add    $0x10,%esp
810016dc:	89 45 e8             	mov    %eax,-0x18(%ebp)
810016df:	b8 00 75 00 81       	mov    $0x81007500,%eax
810016e4:	8b 50 08             	mov    0x8(%eax),%edx
810016e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016ea:	01 d0                	add    %edx,%eax
810016ec:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810016ef:	74 18                	je     81001709 <_malloc_trim_r+0xab>
810016f1:	83 ec 0c             	sub    $0xc,%esp
810016f4:	ff 75 08             	push   0x8(%ebp)
810016f7:	e8 22 1d 00 00       	call   8100341e <__malloc_unlock>
810016fc:	83 c4 10             	add    $0x10,%esp
810016ff:	b8 00 00 00 00       	mov    $0x0,%eax
81001704:	e9 b4 00 00 00       	jmp    810017bd <_malloc_trim_r+0x15f>
81001709:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100170c:	f7 d8                	neg    %eax
8100170e:	83 ec 08             	sub    $0x8,%esp
81001711:	50                   	push   %eax
81001712:	ff 75 08             	push   0x8(%ebp)
81001715:	e8 db 2b 00 00       	call   810042f5 <_sbrk_r>
8100171a:	83 c4 10             	add    $0x10,%esp
8100171d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001720:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001724:	75 61                	jne    81001787 <_malloc_trim_r+0x129>
81001726:	83 ec 08             	sub    $0x8,%esp
81001729:	6a 00                	push   $0x0
8100172b:	ff 75 08             	push   0x8(%ebp)
8100172e:	e8 c2 2b 00 00       	call   810042f5 <_sbrk_r>
81001733:	83 c4 10             	add    $0x10,%esp
81001736:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001739:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100173e:	8b 50 08             	mov    0x8(%eax),%edx
81001741:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001744:	29 d0                	sub    %edx,%eax
81001746:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001749:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
8100174d:	7e 23                	jle    81001772 <_malloc_trim_r+0x114>
8100174f:	8b 15 0c 79 00 81    	mov    0x8100790c,%edx
81001755:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001758:	29 d0                	sub    %edx,%eax
8100175a:	a3 00 81 00 81       	mov    %eax,0x81008100
8100175f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001762:	83 c8 01             	or     $0x1,%eax
81001765:	89 c2                	mov    %eax,%edx
81001767:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100176c:	8b 40 08             	mov    0x8(%eax),%eax
8100176f:	89 50 04             	mov    %edx,0x4(%eax)
81001772:	83 ec 0c             	sub    $0xc,%esp
81001775:	ff 75 08             	push   0x8(%ebp)
81001778:	e8 a1 1c 00 00       	call   8100341e <__malloc_unlock>
8100177d:	83 c4 10             	add    $0x10,%esp
81001780:	b8 00 00 00 00       	mov    $0x0,%eax
81001785:	eb 36                	jmp    810017bd <_malloc_trim_r+0x15f>
81001787:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100178a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100178d:	83 c8 01             	or     $0x1,%eax
81001790:	89 c2                	mov    %eax,%edx
81001792:	b8 00 75 00 81       	mov    $0x81007500,%eax
81001797:	8b 40 08             	mov    0x8(%eax),%eax
8100179a:	89 50 04             	mov    %edx,0x4(%eax)
8100179d:	a1 00 81 00 81       	mov    0x81008100,%eax
810017a2:	2b 45 ec             	sub    -0x14(%ebp),%eax
810017a5:	a3 00 81 00 81       	mov    %eax,0x81008100
810017aa:	83 ec 0c             	sub    $0xc,%esp
810017ad:	ff 75 08             	push   0x8(%ebp)
810017b0:	e8 69 1c 00 00       	call   8100341e <__malloc_unlock>
810017b5:	83 c4 10             	add    $0x10,%esp
810017b8:	b8 01 00 00 00       	mov    $0x1,%eax
810017bd:	c9                   	leave  
810017be:	c3                   	ret    

810017bf <_fwalk>:
810017bf:	55                   	push   %ebp
810017c0:	89 e5                	mov    %esp,%ebp
810017c2:	57                   	push   %edi
810017c3:	56                   	push   %esi
810017c4:	53                   	push   %ebx
810017c5:	83 ec 1c             	sub    $0x1c,%esp
810017c8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810017cf:	8b 45 08             	mov    0x8(%ebp),%eax
810017d2:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810017d8:	eb 3e                	jmp    81001818 <_fwalk+0x59>
810017da:	8b 5e 08             	mov    0x8(%esi),%ebx
810017dd:	8b 7e 04             	mov    0x4(%esi),%edi
810017e0:	eb 2d                	jmp    8100180f <_fwalk+0x50>
810017e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810017e6:	66 85 c0             	test   %ax,%ax
810017e9:	74 21                	je     8100180c <_fwalk+0x4d>
810017eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810017ef:	66 83 f8 01          	cmp    $0x1,%ax
810017f3:	74 17                	je     8100180c <_fwalk+0x4d>
810017f5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810017f9:	66 83 f8 ff          	cmp    $0xffff,%ax
810017fd:	74 0d                	je     8100180c <_fwalk+0x4d>
810017ff:	83 ec 0c             	sub    $0xc,%esp
81001802:	53                   	push   %ebx
81001803:	ff 55 0c             	call   *0xc(%ebp)
81001806:	83 c4 10             	add    $0x10,%esp
81001809:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100180c:	83 c3 68             	add    $0x68,%ebx
8100180f:	83 ef 01             	sub    $0x1,%edi
81001812:	85 ff                	test   %edi,%edi
81001814:	79 cc                	jns    810017e2 <_fwalk+0x23>
81001816:	8b 36                	mov    (%esi),%esi
81001818:	85 f6                	test   %esi,%esi
8100181a:	75 be                	jne    810017da <_fwalk+0x1b>
8100181c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100181f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001822:	5b                   	pop    %ebx
81001823:	5e                   	pop    %esi
81001824:	5f                   	pop    %edi
81001825:	5d                   	pop    %ebp
81001826:	c3                   	ret    

81001827 <_fwalk_reent>:
81001827:	55                   	push   %ebp
81001828:	89 e5                	mov    %esp,%ebp
8100182a:	57                   	push   %edi
8100182b:	56                   	push   %esi
8100182c:	53                   	push   %ebx
8100182d:	83 ec 1c             	sub    $0x1c,%esp
81001830:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001837:	8b 45 08             	mov    0x8(%ebp),%eax
8100183a:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001840:	eb 41                	jmp    81001883 <_fwalk_reent+0x5c>
81001842:	8b 5e 08             	mov    0x8(%esi),%ebx
81001845:	8b 7e 04             	mov    0x4(%esi),%edi
81001848:	eb 30                	jmp    8100187a <_fwalk_reent+0x53>
8100184a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100184e:	66 85 c0             	test   %ax,%ax
81001851:	74 24                	je     81001877 <_fwalk_reent+0x50>
81001853:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001857:	66 83 f8 01          	cmp    $0x1,%ax
8100185b:	74 1a                	je     81001877 <_fwalk_reent+0x50>
8100185d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001861:	66 83 f8 ff          	cmp    $0xffff,%ax
81001865:	74 10                	je     81001877 <_fwalk_reent+0x50>
81001867:	83 ec 08             	sub    $0x8,%esp
8100186a:	53                   	push   %ebx
8100186b:	ff 75 08             	push   0x8(%ebp)
8100186e:	ff 55 0c             	call   *0xc(%ebp)
81001871:	83 c4 10             	add    $0x10,%esp
81001874:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001877:	83 c3 68             	add    $0x68,%ebx
8100187a:	83 ef 01             	sub    $0x1,%edi
8100187d:	85 ff                	test   %edi,%edi
8100187f:	79 c9                	jns    8100184a <_fwalk_reent+0x23>
81001881:	8b 36                	mov    (%esi),%esi
81001883:	85 f6                	test   %esi,%esi
81001885:	75 bb                	jne    81001842 <_fwalk_reent+0x1b>
81001887:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100188a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100188d:	5b                   	pop    %ebx
8100188e:	5e                   	pop    %esi
8100188f:	5f                   	pop    %edi
81001890:	5d                   	pop    %ebp
81001891:	c3                   	ret    

81001892 <_fwrite_r>:
81001892:	55                   	push   %ebp
81001893:	89 e5                	mov    %esp,%ebp
81001895:	83 ec 28             	sub    $0x28,%esp
81001898:	8b 45 0c             	mov    0xc(%ebp),%eax
8100189b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100189e:	8b 45 14             	mov    0x14(%ebp),%eax
810018a1:	0f af 45 10          	imul   0x10(%ebp),%eax
810018a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ab:	89 45 e0             	mov    %eax,-0x20(%ebp)
810018ae:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018b1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810018b4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810018b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810018ba:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810018c1:	8b 45 08             	mov    0x8(%ebp),%eax
810018c4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810018c7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810018cb:	74 18                	je     810018e5 <_fwrite_r+0x53>
810018cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018d0:	8b 40 38             	mov    0x38(%eax),%eax
810018d3:	85 c0                	test   %eax,%eax
810018d5:	75 0e                	jne    810018e5 <_fwrite_r+0x53>
810018d7:	83 ec 0c             	sub    $0xc,%esp
810018da:	ff 75 f0             	push   -0x10(%ebp)
810018dd:	e8 3f f8 ff ff       	call   81001121 <__sinit>
810018e2:	83 c4 10             	add    $0x10,%esp
810018e5:	8b 45 18             	mov    0x18(%ebp),%eax
810018e8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810018ec:	98                   	cwtl   
810018ed:	25 00 20 00 00       	and    $0x2000,%eax
810018f2:	85 c0                	test   %eax,%eax
810018f4:	75 24                	jne    8100191a <_fwrite_r+0x88>
810018f6:	8b 45 18             	mov    0x18(%ebp),%eax
810018f9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810018fd:	80 cc 20             	or     $0x20,%ah
81001900:	89 c2                	mov    %eax,%edx
81001902:	8b 45 18             	mov    0x18(%ebp),%eax
81001905:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001909:	8b 45 18             	mov    0x18(%ebp),%eax
8100190c:	8b 40 64             	mov    0x64(%eax),%eax
8100190f:	80 e4 df             	and    $0xdf,%ah
81001912:	89 c2                	mov    %eax,%edx
81001914:	8b 45 18             	mov    0x18(%ebp),%eax
81001917:	89 50 64             	mov    %edx,0x64(%eax)
8100191a:	83 ec 04             	sub    $0x4,%esp
8100191d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001920:	50                   	push   %eax
81001921:	ff 75 18             	push   0x18(%ebp)
81001924:	ff 75 08             	push   0x8(%ebp)
81001927:	e8 18 39 00 00       	call   81005244 <__sfvwrite_r>
8100192c:	83 c4 10             	add    $0x10,%esp
8100192f:	85 c0                	test   %eax,%eax
81001931:	75 05                	jne    81001938 <_fwrite_r+0xa6>
81001933:	8b 45 14             	mov    0x14(%ebp),%eax
81001936:	eb 10                	jmp    81001948 <_fwrite_r+0xb6>
81001938:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100193b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100193e:	29 d0                	sub    %edx,%eax
81001940:	ba 00 00 00 00       	mov    $0x0,%edx
81001945:	f7 75 10             	divl   0x10(%ebp)
81001948:	c9                   	leave  
81001949:	c3                   	ret    

8100194a <fwrite>:
8100194a:	55                   	push   %ebp
8100194b:	89 e5                	mov    %esp,%ebp
8100194d:	83 ec 08             	sub    $0x8,%esp
81001950:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81001955:	83 ec 0c             	sub    $0xc,%esp
81001958:	ff 75 14             	push   0x14(%ebp)
8100195b:	ff 75 10             	push   0x10(%ebp)
8100195e:	ff 75 0c             	push   0xc(%ebp)
81001961:	ff 75 08             	push   0x8(%ebp)
81001964:	50                   	push   %eax
81001965:	e8 28 ff ff ff       	call   81001892 <_fwrite_r>
8100196a:	83 c4 20             	add    $0x20,%esp
8100196d:	c9                   	leave  
8100196e:	c3                   	ret    

8100196f <reverse_argv_elements>:
8100196f:	55                   	push   %ebp
81001970:	89 e5                	mov    %esp,%ebp
81001972:	83 ec 10             	sub    $0x10,%esp
81001975:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100197c:	eb 5e                	jmp    810019dc <reverse_argv_elements+0x6d>
8100197e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81001981:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001988:	8b 45 08             	mov    0x8(%ebp),%eax
8100198b:	01 d0                	add    %edx,%eax
8100198d:	8b 00                	mov    (%eax),%eax
8100198f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81001992:	8b 45 0c             	mov    0xc(%ebp),%eax
81001995:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001998:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100199d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810019a4:	8b 45 08             	mov    0x8(%ebp),%eax
810019a7:	01 d0                	add    %edx,%eax
810019a9:	8b 55 fc             	mov    -0x4(%ebp),%edx
810019ac:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810019b3:	8b 55 08             	mov    0x8(%ebp),%edx
810019b6:	01 ca                	add    %ecx,%edx
810019b8:	8b 00                	mov    (%eax),%eax
810019ba:	89 02                	mov    %eax,(%edx)
810019bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810019bf:	2b 45 fc             	sub    -0x4(%ebp),%eax
810019c2:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810019c7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810019ce:	8b 45 08             	mov    0x8(%ebp),%eax
810019d1:	01 c2                	add    %eax,%edx
810019d3:	8b 45 f8             	mov    -0x8(%ebp),%eax
810019d6:	89 02                	mov    %eax,(%edx)
810019d8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810019dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810019df:	d1 f8                	sar    %eax
810019e1:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810019e4:	7c 98                	jl     8100197e <reverse_argv_elements+0xf>
810019e6:	90                   	nop
810019e7:	90                   	nop
810019e8:	c9                   	leave  
810019e9:	c3                   	ret    

810019ea <permute>:
810019ea:	55                   	push   %ebp
810019eb:	89 e5                	mov    %esp,%ebp
810019ed:	ff 75 0c             	push   0xc(%ebp)
810019f0:	ff 75 08             	push   0x8(%ebp)
810019f3:	e8 77 ff ff ff       	call   8100196f <reverse_argv_elements>
810019f8:	83 c4 08             	add    $0x8,%esp
810019fb:	8b 55 0c             	mov    0xc(%ebp),%edx
810019fe:	8b 45 10             	mov    0x10(%ebp),%eax
81001a01:	01 d0                	add    %edx,%eax
81001a03:	50                   	push   %eax
81001a04:	ff 75 08             	push   0x8(%ebp)
81001a07:	e8 63 ff ff ff       	call   8100196f <reverse_argv_elements>
81001a0c:	83 c4 08             	add    $0x8,%esp
81001a0f:	ff 75 10             	push   0x10(%ebp)
81001a12:	ff 75 08             	push   0x8(%ebp)
81001a15:	e8 55 ff ff ff       	call   8100196f <reverse_argv_elements>
81001a1a:	83 c4 08             	add    $0x8,%esp
81001a1d:	90                   	nop
81001a1e:	c9                   	leave  
81001a1f:	c3                   	ret    

81001a20 <is_option>:
81001a20:	55                   	push   %ebp
81001a21:	89 e5                	mov    %esp,%ebp
81001a23:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001a27:	74 1a                	je     81001a43 <is_option+0x23>
81001a29:	8b 45 08             	mov    0x8(%ebp),%eax
81001a2c:	0f b6 00             	movzbl (%eax),%eax
81001a2f:	3c 2d                	cmp    $0x2d,%al
81001a31:	74 10                	je     81001a43 <is_option+0x23>
81001a33:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001a37:	74 11                	je     81001a4a <is_option+0x2a>
81001a39:	8b 45 08             	mov    0x8(%ebp),%eax
81001a3c:	0f b6 00             	movzbl (%eax),%eax
81001a3f:	3c 2b                	cmp    $0x2b,%al
81001a41:	75 07                	jne    81001a4a <is_option+0x2a>
81001a43:	b8 01 00 00 00       	mov    $0x1,%eax
81001a48:	eb 05                	jmp    81001a4f <is_option+0x2f>
81001a4a:	b8 00 00 00 00       	mov    $0x0,%eax
81001a4f:	5d                   	pop    %ebp
81001a50:	c3                   	ret    

81001a51 <read_globals>:
81001a51:	55                   	push   %ebp
81001a52:	89 e5                	mov    %esp,%ebp
81001a54:	8b 15 b4 80 00 81    	mov    0x810080b4,%edx
81001a5a:	8b 45 08             	mov    0x8(%ebp),%eax
81001a5d:	89 10                	mov    %edx,(%eax)
81001a5f:	8b 15 b8 80 00 81    	mov    0x810080b8,%edx
81001a65:	8b 45 08             	mov    0x8(%ebp),%eax
81001a68:	89 50 04             	mov    %edx,0x4(%eax)
81001a6b:	8b 15 a4 70 00 81    	mov    0x810070a4,%edx
81001a71:	8b 45 08             	mov    0x8(%ebp),%eax
81001a74:	89 50 08             	mov    %edx,0x8(%eax)
81001a77:	8b 15 a8 70 00 81    	mov    0x810070a8,%edx
81001a7d:	8b 45 08             	mov    0x8(%ebp),%eax
81001a80:	89 50 0c             	mov    %edx,0xc(%eax)
81001a83:	8b 15 bc 80 00 81    	mov    0x810080bc,%edx
81001a89:	8b 45 08             	mov    0x8(%ebp),%eax
81001a8c:	89 50 10             	mov    %edx,0x10(%eax)
81001a8f:	8b 15 c0 80 00 81    	mov    0x810080c0,%edx
81001a95:	8b 45 08             	mov    0x8(%ebp),%eax
81001a98:	89 50 14             	mov    %edx,0x14(%eax)
81001a9b:	8b 15 c4 80 00 81    	mov    0x810080c4,%edx
81001aa1:	8b 45 08             	mov    0x8(%ebp),%eax
81001aa4:	89 50 18             	mov    %edx,0x18(%eax)
81001aa7:	90                   	nop
81001aa8:	5d                   	pop    %ebp
81001aa9:	c3                   	ret    

81001aaa <write_globals>:
81001aaa:	55                   	push   %ebp
81001aab:	89 e5                	mov    %esp,%ebp
81001aad:	8b 45 08             	mov    0x8(%ebp),%eax
81001ab0:	8b 00                	mov    (%eax),%eax
81001ab2:	a3 b4 80 00 81       	mov    %eax,0x810080b4
81001ab7:	8b 45 08             	mov    0x8(%ebp),%eax
81001aba:	8b 40 04             	mov    0x4(%eax),%eax
81001abd:	a3 b8 80 00 81       	mov    %eax,0x810080b8
81001ac2:	8b 45 08             	mov    0x8(%ebp),%eax
81001ac5:	8b 40 08             	mov    0x8(%eax),%eax
81001ac8:	a3 a4 70 00 81       	mov    %eax,0x810070a4
81001acd:	8b 45 08             	mov    0x8(%ebp),%eax
81001ad0:	8b 40 0c             	mov    0xc(%eax),%eax
81001ad3:	a3 a8 70 00 81       	mov    %eax,0x810070a8
81001ad8:	8b 45 08             	mov    0x8(%ebp),%eax
81001adb:	8b 40 10             	mov    0x10(%eax),%eax
81001ade:	a3 bc 80 00 81       	mov    %eax,0x810080bc
81001ae3:	8b 45 08             	mov    0x8(%ebp),%eax
81001ae6:	8b 40 14             	mov    0x14(%eax),%eax
81001ae9:	a3 c0 80 00 81       	mov    %eax,0x810080c0
81001aee:	8b 45 08             	mov    0x8(%ebp),%eax
81001af1:	8b 40 18             	mov    0x18(%eax),%eax
81001af4:	a3 c4 80 00 81       	mov    %eax,0x810080c4
81001af9:	90                   	nop
81001afa:	5d                   	pop    %ebp
81001afb:	c3                   	ret    

81001afc <getopt_internal>:
81001afc:	55                   	push   %ebp
81001afd:	89 e5                	mov    %esp,%ebp
81001aff:	53                   	push   %ebx
81001b00:	83 ec 34             	sub    $0x34,%esp
81001b03:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001b0a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001b11:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001b18:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001b1f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001b26:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001b2d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001b34:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001b3b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001b42:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001b46:	74 35                	je     81001b7d <getopt_internal+0x81>
81001b48:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001b4c:	74 2f                	je     81001b7d <getopt_internal+0x81>
81001b4e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b52:	75 06                	jne    81001b5a <getopt_internal+0x5e>
81001b54:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001b58:	74 23                	je     81001b7d <getopt_internal+0x81>
81001b5a:	8b 45 20             	mov    0x20(%ebp),%eax
81001b5d:	8b 40 04             	mov    0x4(%eax),%eax
81001b60:	39 45 08             	cmp    %eax,0x8(%ebp)
81001b63:	7e 18                	jle    81001b7d <getopt_internal+0x81>
81001b65:	8b 45 20             	mov    0x20(%ebp),%eax
81001b68:	8b 40 04             	mov    0x4(%eax),%eax
81001b6b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b72:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b75:	01 d0                	add    %edx,%eax
81001b77:	8b 00                	mov    (%eax),%eax
81001b79:	85 c0                	test   %eax,%eax
81001b7b:	75 0a                	jne    81001b87 <getopt_internal+0x8b>
81001b7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001b82:	e9 85 0a 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001b87:	8b 45 20             	mov    0x20(%ebp),%eax
81001b8a:	8b 40 04             	mov    0x4(%eax),%eax
81001b8d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b94:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b97:	01 d0                	add    %edx,%eax
81001b99:	8b 00                	mov    (%eax),%eax
81001b9b:	83 ec 08             	sub    $0x8,%esp
81001b9e:	68 98 6c 00 81       	push   $0x81006c98
81001ba3:	50                   	push   %eax
81001ba4:	e8 a3 29 00 00       	call   8100454c <strcmp>
81001ba9:	83 c4 10             	add    $0x10,%esp
81001bac:	85 c0                	test   %eax,%eax
81001bae:	75 19                	jne    81001bc9 <getopt_internal+0xcd>
81001bb0:	8b 45 20             	mov    0x20(%ebp),%eax
81001bb3:	8b 40 04             	mov    0x4(%eax),%eax
81001bb6:	8d 50 01             	lea    0x1(%eax),%edx
81001bb9:	8b 45 20             	mov    0x20(%ebp),%eax
81001bbc:	89 50 04             	mov    %edx,0x4(%eax)
81001bbf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001bc4:	e9 43 0a 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001bc9:	8b 45 20             	mov    0x20(%ebp),%eax
81001bcc:	8b 40 04             	mov    0x4(%eax),%eax
81001bcf:	85 c0                	test   %eax,%eax
81001bd1:	75 28                	jne    81001bfb <getopt_internal+0xff>
81001bd3:	8b 45 20             	mov    0x20(%ebp),%eax
81001bd6:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001bdd:	8b 45 20             	mov    0x20(%ebp),%eax
81001be0:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001be7:	8b 45 20             	mov    0x20(%ebp),%eax
81001bea:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001bf1:	8b 45 20             	mov    0x20(%ebp),%eax
81001bf4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001bfb:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001bff:	74 33                	je     81001c34 <getopt_internal+0x138>
81001c01:	8b 45 10             	mov    0x10(%ebp),%eax
81001c04:	0f b6 00             	movzbl (%eax),%eax
81001c07:	3c 2d                	cmp    $0x2d,%al
81001c09:	74 0a                	je     81001c15 <getopt_internal+0x119>
81001c0b:	8b 45 10             	mov    0x10(%ebp),%eax
81001c0e:	0f b6 00             	movzbl (%eax),%eax
81001c11:	3c 2b                	cmp    $0x2b,%al
81001c13:	75 1f                	jne    81001c34 <getopt_internal+0x138>
81001c15:	8b 45 10             	mov    0x10(%ebp),%eax
81001c18:	0f b6 00             	movzbl (%eax),%eax
81001c1b:	3c 2d                	cmp    $0x2d,%al
81001c1d:	75 07                	jne    81001c26 <getopt_internal+0x12a>
81001c1f:	b8 01 00 00 00       	mov    $0x1,%eax
81001c24:	eb 05                	jmp    81001c2b <getopt_internal+0x12f>
81001c26:	b8 02 00 00 00       	mov    $0x2,%eax
81001c2b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c2e:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001c32:	eb 23                	jmp    81001c57 <getopt_internal+0x15b>
81001c34:	83 ec 0c             	sub    $0xc,%esp
81001c37:	68 9b 6c 00 81       	push   $0x81006c9b
81001c3c:	e8 c1 3a 00 00       	call   81005702 <getenv>
81001c41:	83 c4 10             	add    $0x10,%esp
81001c44:	85 c0                	test   %eax,%eax
81001c46:	74 07                	je     81001c4f <getopt_internal+0x153>
81001c48:	b8 02 00 00 00       	mov    $0x2,%eax
81001c4d:	eb 05                	jmp    81001c54 <getopt_internal+0x158>
81001c4f:	b8 00 00 00 00       	mov    $0x0,%eax
81001c54:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c57:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001c5b:	74 15                	je     81001c72 <getopt_internal+0x176>
81001c5d:	8b 45 10             	mov    0x10(%ebp),%eax
81001c60:	0f b6 00             	movzbl (%eax),%eax
81001c63:	3c 3a                	cmp    $0x3a,%al
81001c65:	75 0b                	jne    81001c72 <getopt_internal+0x176>
81001c67:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001c6b:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001c72:	8b 45 20             	mov    0x20(%ebp),%eax
81001c75:	8b 40 10             	mov    0x10(%eax),%eax
81001c78:	83 f8 01             	cmp    $0x1,%eax
81001c7b:	0f 85 a2 01 00 00    	jne    81001e23 <getopt_internal+0x327>
81001c81:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001c85:	0f 84 02 01 00 00    	je     81001d8d <getopt_internal+0x291>
81001c8b:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001c8f:	0f 84 56 01 00 00    	je     81001deb <getopt_internal+0x2ef>
81001c95:	8b 45 20             	mov    0x20(%ebp),%eax
81001c98:	8b 50 04             	mov    0x4(%eax),%edx
81001c9b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c9e:	89 50 14             	mov    %edx,0x14(%eax)
81001ca1:	8b 45 20             	mov    0x20(%ebp),%eax
81001ca4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001cab:	eb 1e                	jmp    81001ccb <getopt_internal+0x1cf>
81001cad:	8b 45 20             	mov    0x20(%ebp),%eax
81001cb0:	8b 40 04             	mov    0x4(%eax),%eax
81001cb3:	8d 50 01             	lea    0x1(%eax),%edx
81001cb6:	8b 45 20             	mov    0x20(%ebp),%eax
81001cb9:	89 50 04             	mov    %edx,0x4(%eax)
81001cbc:	8b 45 20             	mov    0x20(%ebp),%eax
81001cbf:	8b 40 18             	mov    0x18(%eax),%eax
81001cc2:	8d 50 01             	lea    0x1(%eax),%edx
81001cc5:	8b 45 20             	mov    0x20(%ebp),%eax
81001cc8:	89 50 18             	mov    %edx,0x18(%eax)
81001ccb:	8b 45 20             	mov    0x20(%ebp),%eax
81001cce:	8b 40 04             	mov    0x4(%eax),%eax
81001cd1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cd8:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cdb:	01 d0                	add    %edx,%eax
81001cdd:	8b 00                	mov    (%eax),%eax
81001cdf:	83 ec 08             	sub    $0x8,%esp
81001ce2:	ff 75 1c             	push   0x1c(%ebp)
81001ce5:	50                   	push   %eax
81001ce6:	e8 35 fd ff ff       	call   81001a20 <is_option>
81001ceb:	83 c4 10             	add    $0x10,%esp
81001cee:	85 c0                	test   %eax,%eax
81001cf0:	74 bb                	je     81001cad <getopt_internal+0x1b1>
81001cf2:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf5:	8b 40 04             	mov    0x4(%eax),%eax
81001cf8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cff:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d02:	01 d0                	add    %edx,%eax
81001d04:	8b 00                	mov    (%eax),%eax
81001d06:	85 c0                	test   %eax,%eax
81001d08:	75 16                	jne    81001d20 <getopt_internal+0x224>
81001d0a:	8b 45 20             	mov    0x20(%ebp),%eax
81001d0d:	8b 50 14             	mov    0x14(%eax),%edx
81001d10:	8b 45 20             	mov    0x20(%ebp),%eax
81001d13:	89 50 04             	mov    %edx,0x4(%eax)
81001d16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d1b:	e9 ec 08 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001d20:	8b 45 20             	mov    0x20(%ebp),%eax
81001d23:	8b 40 04             	mov    0x4(%eax),%eax
81001d26:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d30:	01 d0                	add    %edx,%eax
81001d32:	8b 00                	mov    (%eax),%eax
81001d34:	83 ec 08             	sub    $0x8,%esp
81001d37:	68 98 6c 00 81       	push   $0x81006c98
81001d3c:	50                   	push   %eax
81001d3d:	e8 0a 28 00 00       	call   8100454c <strcmp>
81001d42:	83 c4 10             	add    $0x10,%esp
81001d45:	85 c0                	test   %eax,%eax
81001d47:	0f 85 cf 00 00 00    	jne    81001e1c <getopt_internal+0x320>
81001d4d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d50:	8b 40 18             	mov    0x18(%eax),%eax
81001d53:	8b 55 20             	mov    0x20(%ebp),%edx
81001d56:	8b 52 14             	mov    0x14(%edx),%edx
81001d59:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001d60:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d63:	01 ca                	add    %ecx,%edx
81001d65:	83 ec 04             	sub    $0x4,%esp
81001d68:	6a 01                	push   $0x1
81001d6a:	50                   	push   %eax
81001d6b:	52                   	push   %edx
81001d6c:	e8 79 fc ff ff       	call   810019ea <permute>
81001d71:	83 c4 10             	add    $0x10,%esp
81001d74:	8b 45 20             	mov    0x20(%ebp),%eax
81001d77:	8b 40 14             	mov    0x14(%eax),%eax
81001d7a:	8d 50 01             	lea    0x1(%eax),%edx
81001d7d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d80:	89 50 04             	mov    %edx,0x4(%eax)
81001d83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d88:	e9 7f 08 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001d8d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d90:	8b 40 04             	mov    0x4(%eax),%eax
81001d93:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d9d:	01 d0                	add    %edx,%eax
81001d9f:	8b 00                	mov    (%eax),%eax
81001da1:	83 ec 08             	sub    $0x8,%esp
81001da4:	ff 75 1c             	push   0x1c(%ebp)
81001da7:	50                   	push   %eax
81001da8:	e8 73 fc ff ff       	call   81001a20 <is_option>
81001dad:	83 c4 10             	add    $0x10,%esp
81001db0:	85 c0                	test   %eax,%eax
81001db2:	75 6b                	jne    81001e1f <getopt_internal+0x323>
81001db4:	8b 45 20             	mov    0x20(%ebp),%eax
81001db7:	8b 40 04             	mov    0x4(%eax),%eax
81001dba:	8d 48 01             	lea    0x1(%eax),%ecx
81001dbd:	8b 55 20             	mov    0x20(%ebp),%edx
81001dc0:	89 4a 04             	mov    %ecx,0x4(%edx)
81001dc3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001dca:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dcd:	01 d0                	add    %edx,%eax
81001dcf:	8b 10                	mov    (%eax),%edx
81001dd1:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd4:	89 10                	mov    %edx,(%eax)
81001dd6:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd9:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001de0:	8b 45 20             	mov    0x20(%ebp),%eax
81001de3:	8b 40 0c             	mov    0xc(%eax),%eax
81001de6:	e9 21 08 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001deb:	8b 45 20             	mov    0x20(%ebp),%eax
81001dee:	8b 40 04             	mov    0x4(%eax),%eax
81001df1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001df8:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dfb:	01 d0                	add    %edx,%eax
81001dfd:	8b 00                	mov    (%eax),%eax
81001dff:	83 ec 08             	sub    $0x8,%esp
81001e02:	ff 75 1c             	push   0x1c(%ebp)
81001e05:	50                   	push   %eax
81001e06:	e8 15 fc ff ff       	call   81001a20 <is_option>
81001e0b:	83 c4 10             	add    $0x10,%esp
81001e0e:	85 c0                	test   %eax,%eax
81001e10:	75 10                	jne    81001e22 <getopt_internal+0x326>
81001e12:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e17:	e9 f0 07 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001e1c:	90                   	nop
81001e1d:	eb 04                	jmp    81001e23 <getopt_internal+0x327>
81001e1f:	90                   	nop
81001e20:	eb 01                	jmp    81001e23 <getopt_internal+0x327>
81001e22:	90                   	nop
81001e23:	8b 45 20             	mov    0x20(%ebp),%eax
81001e26:	8b 40 04             	mov    0x4(%eax),%eax
81001e29:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e30:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e33:	01 d0                	add    %edx,%eax
81001e35:	8b 00                	mov    (%eax),%eax
81001e37:	85 c0                	test   %eax,%eax
81001e39:	75 0a                	jne    81001e45 <getopt_internal+0x349>
81001e3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e40:	e9 c7 07 00 00       	jmp    8100260c <getopt_internal+0xb10>
81001e45:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001e49:	0f 84 15 03 00 00    	je     81002164 <getopt_internal+0x668>
81001e4f:	8b 45 20             	mov    0x20(%ebp),%eax
81001e52:	8b 40 04             	mov    0x4(%eax),%eax
81001e55:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e5f:	01 d0                	add    %edx,%eax
81001e61:	8b 00                	mov    (%eax),%eax
81001e63:	83 ec 04             	sub    $0x4,%esp
81001e66:	6a 02                	push   $0x2
81001e68:	68 98 6c 00 81       	push   $0x81006c98
81001e6d:	50                   	push   %eax
81001e6e:	e8 82 14 00 00       	call   810032f5 <memcmp>
81001e73:	83 c4 10             	add    $0x10,%esp
81001e76:	85 c0                	test   %eax,%eax
81001e78:	74 29                	je     81001ea3 <getopt_internal+0x3a7>
81001e7a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001e7e:	0f 84 e0 02 00 00    	je     81002164 <getopt_internal+0x668>
81001e84:	8b 45 20             	mov    0x20(%ebp),%eax
81001e87:	8b 40 04             	mov    0x4(%eax),%eax
81001e8a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e91:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e94:	01 d0                	add    %edx,%eax
81001e96:	8b 00                	mov    (%eax),%eax
81001e98:	0f b6 00             	movzbl (%eax),%eax
81001e9b:	3c 2b                	cmp    $0x2b,%al
81001e9d:	0f 85 c1 02 00 00    	jne    81002164 <getopt_internal+0x668>
81001ea3:	8b 45 20             	mov    0x20(%ebp),%eax
81001ea6:	8b 40 10             	mov    0x10(%eax),%eax
81001ea9:	83 f8 01             	cmp    $0x1,%eax
81001eac:	0f 85 b2 02 00 00    	jne    81002164 <getopt_internal+0x668>
81001eb2:	8b 45 20             	mov    0x20(%ebp),%eax
81001eb5:	8b 40 04             	mov    0x4(%eax),%eax
81001eb8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ebf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ec2:	01 d0                	add    %edx,%eax
81001ec4:	8b 00                	mov    (%eax),%eax
81001ec6:	83 ec 04             	sub    $0x4,%esp
81001ec9:	6a 02                	push   $0x2
81001ecb:	68 98 6c 00 81       	push   $0x81006c98
81001ed0:	50                   	push   %eax
81001ed1:	e8 1f 14 00 00       	call   810032f5 <memcmp>
81001ed6:	83 c4 10             	add    $0x10,%esp
81001ed9:	85 c0                	test   %eax,%eax
81001edb:	75 0a                	jne    81001ee7 <getopt_internal+0x3eb>
81001edd:	8b 45 20             	mov    0x20(%ebp),%eax
81001ee0:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001ee7:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001eee:	8b 45 20             	mov    0x20(%ebp),%eax
81001ef1:	8b 40 04             	mov    0x4(%eax),%eax
81001ef4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001efb:	8b 45 0c             	mov    0xc(%ebp),%eax
81001efe:	01 d0                	add    %edx,%eax
81001f00:	8b 10                	mov    (%eax),%edx
81001f02:	8b 45 20             	mov    0x20(%ebp),%eax
81001f05:	8b 40 10             	mov    0x10(%eax),%eax
81001f08:	01 d0                	add    %edx,%eax
81001f0a:	83 ec 08             	sub    $0x8,%esp
81001f0d:	6a 3d                	push   $0x3d
81001f0f:	50                   	push   %eax
81001f10:	e8 3b 25 00 00       	call   81004450 <strchr>
81001f15:	83 c4 10             	add    $0x10,%esp
81001f18:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f1b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f1f:	75 4a                	jne    81001f6b <getopt_internal+0x46f>
81001f21:	8b 45 20             	mov    0x20(%ebp),%eax
81001f24:	8b 40 04             	mov    0x4(%eax),%eax
81001f27:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f31:	01 d0                	add    %edx,%eax
81001f33:	8b 00                	mov    (%eax),%eax
81001f35:	83 ec 0c             	sub    $0xc,%esp
81001f38:	50                   	push   %eax
81001f39:	e8 c2 26 00 00       	call   81004600 <strlen>
81001f3e:	83 c4 10             	add    $0x10,%esp
81001f41:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f44:	8b 45 20             	mov    0x20(%ebp),%eax
81001f47:	8b 40 04             	mov    0x4(%eax),%eax
81001f4a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f51:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f54:	01 d0                	add    %edx,%eax
81001f56:	8b 10                	mov    (%eax),%edx
81001f58:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f5b:	01 d0                	add    %edx,%eax
81001f5d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f60:	8b 45 20             	mov    0x20(%ebp),%eax
81001f63:	8b 40 10             	mov    0x10(%eax),%eax
81001f66:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001f69:	eb 28                	jmp    81001f93 <getopt_internal+0x497>
81001f6b:	8b 45 20             	mov    0x20(%ebp),%eax
81001f6e:	8b 40 04             	mov    0x4(%eax),%eax
81001f71:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f78:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f7b:	01 d0                	add    %edx,%eax
81001f7d:	8b 08                	mov    (%eax),%ecx
81001f7f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f82:	29 c8                	sub    %ecx,%eax
81001f84:	89 c2                	mov    %eax,%edx
81001f86:	8b 45 20             	mov    0x20(%ebp),%eax
81001f89:	8b 48 10             	mov    0x10(%eax),%ecx
81001f8c:	89 d0                	mov    %edx,%eax
81001f8e:	29 c8                	sub    %ecx,%eax
81001f90:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f93:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001f9a:	e9 95 01 00 00       	jmp    81002134 <getopt_internal+0x638>
81001f9f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fa2:	c1 e0 04             	shl    $0x4,%eax
81001fa5:	89 c2                	mov    %eax,%edx
81001fa7:	8b 45 14             	mov    0x14(%ebp),%eax
81001faa:	01 d0                	add    %edx,%eax
81001fac:	8b 00                	mov    (%eax),%eax
81001fae:	8b 55 20             	mov    0x20(%ebp),%edx
81001fb1:	8b 52 04             	mov    0x4(%edx),%edx
81001fb4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001fbb:	8b 55 0c             	mov    0xc(%ebp),%edx
81001fbe:	01 ca                	add    %ecx,%edx
81001fc0:	8b 0a                	mov    (%edx),%ecx
81001fc2:	8b 55 20             	mov    0x20(%ebp),%edx
81001fc5:	8b 52 10             	mov    0x10(%edx),%edx
81001fc8:	01 ca                	add    %ecx,%edx
81001fca:	83 ec 04             	sub    $0x4,%esp
81001fcd:	ff 75 ec             	push   -0x14(%ebp)
81001fd0:	50                   	push   %eax
81001fd1:	52                   	push   %edx
81001fd2:	e8 1e 13 00 00       	call   810032f5 <memcmp>
81001fd7:	83 c4 10             	add    $0x10,%esp
81001fda:	85 c0                	test   %eax,%eax
81001fdc:	0f 85 4e 01 00 00    	jne    81002130 <getopt_internal+0x634>
81001fe2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fe5:	c1 e0 04             	shl    $0x4,%eax
81001fe8:	89 c2                	mov    %eax,%edx
81001fea:	8b 45 14             	mov    0x14(%ebp),%eax
81001fed:	01 d0                	add    %edx,%eax
81001fef:	8b 00                	mov    (%eax),%eax
81001ff1:	83 ec 0c             	sub    $0xc,%esp
81001ff4:	50                   	push   %eax
81001ff5:	e8 06 26 00 00       	call   81004600 <strlen>
81001ffa:	83 c4 10             	add    $0x10,%esp
81001ffd:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002000:	75 0b                	jne    8100200d <getopt_internal+0x511>
81002002:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002005:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002008:	e9 3e 01 00 00       	jmp    8100214b <getopt_internal+0x64f>
8100200d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002011:	79 0b                	jns    8100201e <getopt_internal+0x522>
81002013:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002016:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002019:	e9 12 01 00 00       	jmp    81002130 <getopt_internal+0x634>
8100201e:	8b 45 20             	mov    0x20(%ebp),%eax
81002021:	8b 40 08             	mov    0x8(%eax),%eax
81002024:	85 c0                	test   %eax,%eax
81002026:	0f 84 ef 00 00 00    	je     8100211b <getopt_internal+0x61f>
8100202c:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002031:	8b 50 0c             	mov    0xc(%eax),%edx
81002034:	8b 45 0c             	mov    0xc(%ebp),%eax
81002037:	8b 00                	mov    (%eax),%eax
81002039:	83 ec 08             	sub    $0x8,%esp
8100203c:	52                   	push   %edx
8100203d:	50                   	push   %eax
8100203e:	e8 2d 30 00 00       	call   81005070 <fputs>
81002043:	83 c4 10             	add    $0x10,%esp
81002046:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100204b:	8b 40 0c             	mov    0xc(%eax),%eax
8100204e:	83 ec 08             	sub    $0x8,%esp
81002051:	50                   	push   %eax
81002052:	68 ab 6c 00 81       	push   $0x81006cab
81002057:	e8 14 30 00 00       	call   81005070 <fputs>
8100205c:	83 c4 10             	add    $0x10,%esp
8100205f:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002064:	8b 50 0c             	mov    0xc(%eax),%edx
81002067:	8b 45 20             	mov    0x20(%ebp),%eax
8100206a:	8b 40 04             	mov    0x4(%eax),%eax
8100206d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002074:	8b 45 0c             	mov    0xc(%ebp),%eax
81002077:	01 c8                	add    %ecx,%eax
81002079:	8b 00                	mov    (%eax),%eax
8100207b:	83 ec 08             	sub    $0x8,%esp
8100207e:	52                   	push   %edx
8100207f:	50                   	push   %eax
81002080:	e8 eb 2f 00 00       	call   81005070 <fputs>
81002085:	83 c4 10             	add    $0x10,%esp
81002088:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100208d:	8b 40 0c             	mov    0xc(%eax),%eax
81002090:	83 ec 08             	sub    $0x8,%esp
81002093:	50                   	push   %eax
81002094:	68 b6 6c 00 81       	push   $0x81006cb6
81002099:	e8 d2 2f 00 00       	call   81005070 <fputs>
8100209e:	83 c4 10             	add    $0x10,%esp
810020a1:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810020a6:	8b 50 0c             	mov    0xc(%eax),%edx
810020a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810020ac:	c1 e0 04             	shl    $0x4,%eax
810020af:	89 c1                	mov    %eax,%ecx
810020b1:	8b 45 14             	mov    0x14(%ebp),%eax
810020b4:	01 c8                	add    %ecx,%eax
810020b6:	8b 00                	mov    (%eax),%eax
810020b8:	83 ec 08             	sub    $0x8,%esp
810020bb:	52                   	push   %edx
810020bc:	50                   	push   %eax
810020bd:	e8 ae 2f 00 00       	call   81005070 <fputs>
810020c2:	83 c4 10             	add    $0x10,%esp
810020c5:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810020ca:	8b 40 0c             	mov    0xc(%eax),%eax
810020cd:	83 ec 08             	sub    $0x8,%esp
810020d0:	50                   	push   %eax
810020d1:	68 d3 6c 00 81       	push   $0x81006cd3
810020d6:	e8 95 2f 00 00       	call   81005070 <fputs>
810020db:	83 c4 10             	add    $0x10,%esp
810020de:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810020e3:	8b 50 0c             	mov    0xc(%eax),%edx
810020e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020e9:	c1 e0 04             	shl    $0x4,%eax
810020ec:	89 c1                	mov    %eax,%ecx
810020ee:	8b 45 14             	mov    0x14(%ebp),%eax
810020f1:	01 c8                	add    %ecx,%eax
810020f3:	8b 00                	mov    (%eax),%eax
810020f5:	83 ec 08             	sub    $0x8,%esp
810020f8:	52                   	push   %edx
810020f9:	50                   	push   %eax
810020fa:	e8 71 2f 00 00       	call   81005070 <fputs>
810020ff:	83 c4 10             	add    $0x10,%esp
81002102:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002107:	8b 40 0c             	mov    0xc(%eax),%eax
8100210a:	83 ec 08             	sub    $0x8,%esp
8100210d:	50                   	push   %eax
8100210e:	68 dc 6c 00 81       	push   $0x81006cdc
81002113:	e8 58 2f 00 00       	call   81005070 <fputs>
81002118:	83 c4 10             	add    $0x10,%esp
8100211b:	8b 45 20             	mov    0x20(%ebp),%eax
8100211e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002125:	8b 45 20             	mov    0x20(%ebp),%eax
81002128:	8b 40 0c             	mov    0xc(%eax),%eax
8100212b:	e9 dc 04 00 00       	jmp    8100260c <getopt_internal+0xb10>
81002130:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002134:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002137:	c1 e0 04             	shl    $0x4,%eax
8100213a:	89 c2                	mov    %eax,%edx
8100213c:	8b 45 14             	mov    0x14(%ebp),%eax
8100213f:	01 d0                	add    %edx,%eax
81002141:	8b 00                	mov    (%eax),%eax
81002143:	85 c0                	test   %eax,%eax
81002145:	0f 85 54 fe ff ff    	jne    81001f9f <getopt_internal+0x4a3>
8100214b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100214f:	78 13                	js     81002164 <getopt_internal+0x668>
81002151:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002154:	c1 e0 04             	shl    $0x4,%eax
81002157:	89 c2                	mov    %eax,%edx
81002159:	8b 45 14             	mov    0x14(%ebp),%eax
8100215c:	01 d0                	add    %edx,%eax
8100215e:	8b 40 04             	mov    0x4(%eax),%eax
81002161:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002164:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002168:	0f 89 9a 01 00 00    	jns    81002308 <getopt_internal+0x80c>
8100216e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002172:	0f 84 90 01 00 00    	je     81002308 <getopt_internal+0x80c>
81002178:	8b 45 20             	mov    0x20(%ebp),%eax
8100217b:	8b 40 04             	mov    0x4(%eax),%eax
8100217e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002185:	8b 45 0c             	mov    0xc(%ebp),%eax
81002188:	01 d0                	add    %edx,%eax
8100218a:	8b 10                	mov    (%eax),%edx
8100218c:	8b 45 20             	mov    0x20(%ebp),%eax
8100218f:	8b 40 10             	mov    0x10(%eax),%eax
81002192:	01 d0                	add    %edx,%eax
81002194:	0f b6 00             	movzbl (%eax),%eax
81002197:	0f be c0             	movsbl %al,%eax
8100219a:	83 ec 08             	sub    $0x8,%esp
8100219d:	50                   	push   %eax
8100219e:	ff 75 10             	push   0x10(%ebp)
810021a1:	e8 aa 22 00 00       	call   81004450 <strchr>
810021a6:	83 c4 10             	add    $0x10,%esp
810021a9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810021ac:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810021b0:	0f 85 f1 00 00 00    	jne    810022a7 <getopt_internal+0x7ab>
810021b6:	8b 45 20             	mov    0x20(%ebp),%eax
810021b9:	8b 40 08             	mov    0x8(%eax),%eax
810021bc:	85 c0                	test   %eax,%eax
810021be:	0f 84 83 00 00 00    	je     81002247 <getopt_internal+0x74b>
810021c4:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810021c9:	8b 50 0c             	mov    0xc(%eax),%edx
810021cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810021cf:	8b 00                	mov    (%eax),%eax
810021d1:	83 ec 08             	sub    $0x8,%esp
810021d4:	52                   	push   %edx
810021d5:	50                   	push   %eax
810021d6:	e8 95 2e 00 00       	call   81005070 <fputs>
810021db:	83 c4 10             	add    $0x10,%esp
810021de:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810021e3:	8b 40 0c             	mov    0xc(%eax),%eax
810021e6:	83 ec 08             	sub    $0x8,%esp
810021e9:	50                   	push   %eax
810021ea:	68 e0 6c 00 81       	push   $0x81006ce0
810021ef:	e8 7c 2e 00 00       	call   81005070 <fputs>
810021f4:	83 c4 10             	add    $0x10,%esp
810021f7:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810021fc:	8b 50 0c             	mov    0xc(%eax),%edx
810021ff:	8b 45 20             	mov    0x20(%ebp),%eax
81002202:	8b 40 04             	mov    0x4(%eax),%eax
81002205:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100220c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100220f:	01 c8                	add    %ecx,%eax
81002211:	8b 08                	mov    (%eax),%ecx
81002213:	8b 45 20             	mov    0x20(%ebp),%eax
81002216:	8b 40 10             	mov    0x10(%eax),%eax
81002219:	01 c8                	add    %ecx,%eax
8100221b:	0f b6 00             	movzbl (%eax),%eax
8100221e:	0f be c0             	movsbl %al,%eax
81002221:	83 ec 08             	sub    $0x8,%esp
81002224:	52                   	push   %edx
81002225:	50                   	push   %eax
81002226:	e8 51 2d 00 00       	call   81004f7c <fputc>
8100222b:	83 c4 10             	add    $0x10,%esp
8100222e:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002233:	8b 40 0c             	mov    0xc(%eax),%eax
81002236:	83 ec 08             	sub    $0x8,%esp
81002239:	50                   	push   %eax
8100223a:	68 f7 6c 00 81       	push   $0x81006cf7
8100223f:	e8 2c 2e 00 00       	call   81005070 <fputs>
81002244:	83 c4 10             	add    $0x10,%esp
81002247:	8b 45 20             	mov    0x20(%ebp),%eax
8100224a:	8b 40 10             	mov    0x10(%eax),%eax
8100224d:	8d 50 01             	lea    0x1(%eax),%edx
81002250:	8b 45 20             	mov    0x20(%ebp),%eax
81002253:	89 50 10             	mov    %edx,0x10(%eax)
81002256:	8b 45 20             	mov    0x20(%ebp),%eax
81002259:	8b 40 04             	mov    0x4(%eax),%eax
8100225c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002263:	8b 45 0c             	mov    0xc(%ebp),%eax
81002266:	01 d0                	add    %edx,%eax
81002268:	8b 10                	mov    (%eax),%edx
8100226a:	8b 45 20             	mov    0x20(%ebp),%eax
8100226d:	8b 40 10             	mov    0x10(%eax),%eax
81002270:	01 d0                	add    %edx,%eax
81002272:	0f b6 00             	movzbl (%eax),%eax
81002275:	84 c0                	test   %al,%al
81002277:	75 19                	jne    81002292 <getopt_internal+0x796>
81002279:	8b 45 20             	mov    0x20(%ebp),%eax
8100227c:	8b 40 04             	mov    0x4(%eax),%eax
8100227f:	8d 50 01             	lea    0x1(%eax),%edx
81002282:	8b 45 20             	mov    0x20(%ebp),%eax
81002285:	89 50 04             	mov    %edx,0x4(%eax)
81002288:	8b 45 20             	mov    0x20(%ebp),%eax
8100228b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002292:	8b 45 20             	mov    0x20(%ebp),%eax
81002295:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100229c:	8b 45 20             	mov    0x20(%ebp),%eax
8100229f:	8b 40 0c             	mov    0xc(%eax),%eax
810022a2:	e9 65 03 00 00       	jmp    8100260c <getopt_internal+0xb10>
810022a7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810022aa:	83 c0 01             	add    $0x1,%eax
810022ad:	0f b6 00             	movzbl (%eax),%eax
810022b0:	3c 3a                	cmp    $0x3a,%al
810022b2:	75 1b                	jne    810022cf <getopt_internal+0x7d3>
810022b4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810022b7:	83 c0 02             	add    $0x2,%eax
810022ba:	0f b6 00             	movzbl (%eax),%eax
810022bd:	3c 3a                	cmp    $0x3a,%al
810022bf:	75 07                	jne    810022c8 <getopt_internal+0x7cc>
810022c1:	b8 02 00 00 00       	mov    $0x2,%eax
810022c6:	eb 0c                	jmp    810022d4 <getopt_internal+0x7d8>
810022c8:	b8 01 00 00 00       	mov    $0x1,%eax
810022cd:	eb 05                	jmp    810022d4 <getopt_internal+0x7d8>
810022cf:	b8 00 00 00 00       	mov    $0x0,%eax
810022d4:	89 45 e0             	mov    %eax,-0x20(%ebp)
810022d7:	8b 45 20             	mov    0x20(%ebp),%eax
810022da:	8b 40 04             	mov    0x4(%eax),%eax
810022dd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810022e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e7:	01 d0                	add    %edx,%eax
810022e9:	8b 10                	mov    (%eax),%edx
810022eb:	8b 45 20             	mov    0x20(%ebp),%eax
810022ee:	8b 40 10             	mov    0x10(%eax),%eax
810022f1:	83 c0 01             	add    $0x1,%eax
810022f4:	01 d0                	add    %edx,%eax
810022f6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810022fc:	0f b6 00             	movzbl (%eax),%eax
810022ff:	0f be d0             	movsbl %al,%edx
81002302:	8b 45 20             	mov    0x20(%ebp),%eax
81002305:	89 50 0c             	mov    %edx,0xc(%eax)
81002308:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100230f:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002313:	74 40                	je     81002355 <getopt_internal+0x859>
81002315:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002319:	0f 85 b0 01 00 00    	jne    810024cf <getopt_internal+0x9d3>
8100231f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002322:	0f b6 00             	movzbl (%eax),%eax
81002325:	3c 3d                	cmp    $0x3d,%al
81002327:	75 04                	jne    8100232d <getopt_internal+0x831>
81002329:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100232d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002330:	0f b6 00             	movzbl (%eax),%eax
81002333:	84 c0                	test   %al,%al
81002335:	74 05                	je     8100233c <getopt_internal+0x840>
81002337:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100233a:	eb 05                	jmp    81002341 <getopt_internal+0x845>
8100233c:	b8 00 00 00 00       	mov    $0x0,%eax
81002341:	8b 55 20             	mov    0x20(%ebp),%edx
81002344:	89 02                	mov    %eax,(%edx)
81002346:	8b 45 20             	mov    0x20(%ebp),%eax
81002349:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002350:	e9 d2 01 00 00       	jmp    81002527 <getopt_internal+0xa2b>
81002355:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002358:	0f b6 00             	movzbl (%eax),%eax
8100235b:	3c 3d                	cmp    $0x3d,%al
8100235d:	75 04                	jne    81002363 <getopt_internal+0x867>
8100235f:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002363:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002366:	0f b6 00             	movzbl (%eax),%eax
81002369:	84 c0                	test   %al,%al
8100236b:	74 17                	je     81002384 <getopt_internal+0x888>
8100236d:	8b 45 20             	mov    0x20(%ebp),%eax
81002370:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002373:	89 10                	mov    %edx,(%eax)
81002375:	8b 45 20             	mov    0x20(%ebp),%eax
81002378:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100237f:	e9 a3 01 00 00       	jmp    81002527 <getopt_internal+0xa2b>
81002384:	8b 45 20             	mov    0x20(%ebp),%eax
81002387:	8b 40 04             	mov    0x4(%eax),%eax
8100238a:	83 c0 01             	add    $0x1,%eax
8100238d:	39 45 08             	cmp    %eax,0x8(%ebp)
81002390:	0f 8f 0a 01 00 00    	jg     810024a0 <getopt_internal+0x9a4>
81002396:	8b 45 20             	mov    0x20(%ebp),%eax
81002399:	8b 40 08             	mov    0x8(%eax),%eax
8100239c:	85 c0                	test   %eax,%eax
8100239e:	0f 84 d3 00 00 00    	je     81002477 <getopt_internal+0x97b>
810023a4:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810023a9:	8b 50 0c             	mov    0xc(%eax),%edx
810023ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810023af:	8b 00                	mov    (%eax),%eax
810023b1:	83 ec 08             	sub    $0x8,%esp
810023b4:	52                   	push   %edx
810023b5:	50                   	push   %eax
810023b6:	e8 b5 2c 00 00       	call   81005070 <fputs>
810023bb:	83 c4 10             	add    $0x10,%esp
810023be:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810023c3:	8b 40 0c             	mov    0xc(%eax),%eax
810023c6:	83 ec 08             	sub    $0x8,%esp
810023c9:	50                   	push   %eax
810023ca:	68 fc 6c 00 81       	push   $0x81006cfc
810023cf:	e8 9c 2c 00 00       	call   81005070 <fputs>
810023d4:	83 c4 10             	add    $0x10,%esp
810023d7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810023db:	78 54                	js     81002431 <getopt_internal+0x935>
810023dd:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810023e2:	8b 40 0c             	mov    0xc(%eax),%eax
810023e5:	83 ec 08             	sub    $0x8,%esp
810023e8:	50                   	push   %eax
810023e9:	6a 2d                	push   $0x2d
810023eb:	e8 8c 2b 00 00       	call   81004f7c <fputc>
810023f0:	83 c4 10             	add    $0x10,%esp
810023f3:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810023f8:	8b 50 0c             	mov    0xc(%eax),%edx
810023fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810023fe:	c1 e0 04             	shl    $0x4,%eax
81002401:	89 c1                	mov    %eax,%ecx
81002403:	8b 45 14             	mov    0x14(%ebp),%eax
81002406:	01 c8                	add    %ecx,%eax
81002408:	8b 00                	mov    (%eax),%eax
8100240a:	83 ec 08             	sub    $0x8,%esp
8100240d:	52                   	push   %edx
8100240e:	50                   	push   %eax
8100240f:	e8 5c 2c 00 00       	call   81005070 <fputs>
81002414:	83 c4 10             	add    $0x10,%esp
81002417:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100241b:	74 07                	je     81002424 <getopt_internal+0x928>
8100241d:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002422:	eb 05                	jmp    81002429 <getopt_internal+0x92d>
81002424:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002429:	8b 45 20             	mov    0x20(%ebp),%eax
8100242c:	89 50 0c             	mov    %edx,0xc(%eax)
8100242f:	eb 2d                	jmp    8100245e <getopt_internal+0x962>
81002431:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002436:	8b 50 0c             	mov    0xc(%eax),%edx
81002439:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100243c:	0f b6 00             	movzbl (%eax),%eax
8100243f:	0f be c0             	movsbl %al,%eax
81002442:	83 ec 08             	sub    $0x8,%esp
81002445:	52                   	push   %edx
81002446:	50                   	push   %eax
81002447:	e8 30 2b 00 00       	call   81004f7c <fputc>
8100244c:	83 c4 10             	add    $0x10,%esp
8100244f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002452:	0f b6 00             	movzbl (%eax),%eax
81002455:	0f be d0             	movsbl %al,%edx
81002458:	8b 45 20             	mov    0x20(%ebp),%eax
8100245b:	89 50 0c             	mov    %edx,0xc(%eax)
8100245e:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002463:	8b 40 0c             	mov    0xc(%eax),%eax
81002466:	83 ec 08             	sub    $0x8,%esp
81002469:	50                   	push   %eax
8100246a:	68 f7 6c 00 81       	push   $0x81006cf7
8100246f:	e8 fc 2b 00 00       	call   81005070 <fputs>
81002474:	83 c4 10             	add    $0x10,%esp
81002477:	8b 45 20             	mov    0x20(%ebp),%eax
8100247a:	8b 40 04             	mov    0x4(%eax),%eax
8100247d:	8d 50 01             	lea    0x1(%eax),%edx
81002480:	8b 45 20             	mov    0x20(%ebp),%eax
81002483:	89 50 04             	mov    %edx,0x4(%eax)
81002486:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100248a:	74 0a                	je     81002496 <getopt_internal+0x99a>
8100248c:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002491:	e9 76 01 00 00       	jmp    8100260c <getopt_internal+0xb10>
81002496:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100249b:	e9 6c 01 00 00       	jmp    8100260c <getopt_internal+0xb10>
810024a0:	8b 45 20             	mov    0x20(%ebp),%eax
810024a3:	8b 40 04             	mov    0x4(%eax),%eax
810024a6:	83 c0 01             	add    $0x1,%eax
810024a9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810024b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810024b3:	01 d0                	add    %edx,%eax
810024b5:	8b 10                	mov    (%eax),%edx
810024b7:	8b 45 20             	mov    0x20(%ebp),%eax
810024ba:	89 10                	mov    %edx,(%eax)
810024bc:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810024c3:	8b 45 20             	mov    0x20(%ebp),%eax
810024c6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810024cd:	eb 58                	jmp    81002527 <getopt_internal+0xa2b>
810024cf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810024d3:	79 3e                	jns    81002513 <getopt_internal+0xa17>
810024d5:	8b 45 20             	mov    0x20(%ebp),%eax
810024d8:	8b 40 10             	mov    0x10(%eax),%eax
810024db:	8d 50 01             	lea    0x1(%eax),%edx
810024de:	8b 45 20             	mov    0x20(%ebp),%eax
810024e1:	89 50 10             	mov    %edx,0x10(%eax)
810024e4:	8b 45 20             	mov    0x20(%ebp),%eax
810024e7:	8b 40 04             	mov    0x4(%eax),%eax
810024ea:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810024f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810024f4:	01 d0                	add    %edx,%eax
810024f6:	8b 10                	mov    (%eax),%edx
810024f8:	8b 45 20             	mov    0x20(%ebp),%eax
810024fb:	8b 40 10             	mov    0x10(%eax),%eax
810024fe:	01 d0                	add    %edx,%eax
81002500:	0f b6 00             	movzbl (%eax),%eax
81002503:	84 c0                	test   %al,%al
81002505:	75 16                	jne    8100251d <getopt_internal+0xa21>
81002507:	8b 45 20             	mov    0x20(%ebp),%eax
8100250a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002511:	eb 0a                	jmp    8100251d <getopt_internal+0xa21>
81002513:	8b 45 20             	mov    0x20(%ebp),%eax
81002516:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100251d:	8b 45 20             	mov    0x20(%ebp),%eax
81002520:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002526:	90                   	nop
81002527:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100252b:	75 57                	jne    81002584 <getopt_internal+0xa88>
8100252d:	8b 45 20             	mov    0x20(%ebp),%eax
81002530:	8b 40 10             	mov    0x10(%eax),%eax
81002533:	83 f8 01             	cmp    $0x1,%eax
81002536:	75 4c                	jne    81002584 <getopt_internal+0xa88>
81002538:	8b 45 20             	mov    0x20(%ebp),%eax
8100253b:	8b 40 18             	mov    0x18(%eax),%eax
8100253e:	85 c0                	test   %eax,%eax
81002540:	74 42                	je     81002584 <getopt_internal+0xa88>
81002542:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002545:	8d 48 01             	lea    0x1(%eax),%ecx
81002548:	8b 45 20             	mov    0x20(%ebp),%eax
8100254b:	8b 40 18             	mov    0x18(%eax),%eax
8100254e:	8b 55 20             	mov    0x20(%ebp),%edx
81002551:	8b 52 14             	mov    0x14(%edx),%edx
81002554:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100255b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100255e:	01 da                	add    %ebx,%edx
81002560:	83 ec 04             	sub    $0x4,%esp
81002563:	51                   	push   %ecx
81002564:	50                   	push   %eax
81002565:	52                   	push   %edx
81002566:	e8 7f f4 ff ff       	call   810019ea <permute>
8100256b:	83 c4 10             	add    $0x10,%esp
8100256e:	8b 45 20             	mov    0x20(%ebp),%eax
81002571:	8b 40 14             	mov    0x14(%eax),%eax
81002574:	8d 50 01             	lea    0x1(%eax),%edx
81002577:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100257a:	01 c2                	add    %eax,%edx
8100257c:	8b 45 20             	mov    0x20(%ebp),%eax
8100257f:	89 50 04             	mov    %edx,0x4(%eax)
81002582:	eb 1f                	jmp    810025a3 <getopt_internal+0xaa7>
81002584:	8b 45 20             	mov    0x20(%ebp),%eax
81002587:	8b 40 10             	mov    0x10(%eax),%eax
8100258a:	83 f8 01             	cmp    $0x1,%eax
8100258d:	75 14                	jne    810025a3 <getopt_internal+0xaa7>
8100258f:	8b 45 20             	mov    0x20(%ebp),%eax
81002592:	8b 40 04             	mov    0x4(%eax),%eax
81002595:	8d 50 01             	lea    0x1(%eax),%edx
81002598:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100259b:	01 c2                	add    %eax,%edx
8100259d:	8b 45 20             	mov    0x20(%ebp),%eax
810025a0:	89 50 04             	mov    %edx,0x4(%eax)
810025a3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810025a7:	78 5d                	js     81002606 <getopt_internal+0xb0a>
810025a9:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810025ad:	74 08                	je     810025b7 <getopt_internal+0xabb>
810025af:	8b 45 18             	mov    0x18(%ebp),%eax
810025b2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810025b5:	89 10                	mov    %edx,(%eax)
810025b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810025ba:	c1 e0 04             	shl    $0x4,%eax
810025bd:	89 c2                	mov    %eax,%edx
810025bf:	8b 45 14             	mov    0x14(%ebp),%eax
810025c2:	01 d0                	add    %edx,%eax
810025c4:	8b 40 08             	mov    0x8(%eax),%eax
810025c7:	85 c0                	test   %eax,%eax
810025c9:	74 29                	je     810025f4 <getopt_internal+0xaf8>
810025cb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810025ce:	c1 e0 04             	shl    $0x4,%eax
810025d1:	89 c2                	mov    %eax,%edx
810025d3:	8b 45 14             	mov    0x14(%ebp),%eax
810025d6:	01 c2                	add    %eax,%edx
810025d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810025db:	c1 e0 04             	shl    $0x4,%eax
810025de:	89 c1                	mov    %eax,%ecx
810025e0:	8b 45 14             	mov    0x14(%ebp),%eax
810025e3:	01 c8                	add    %ecx,%eax
810025e5:	8b 40 08             	mov    0x8(%eax),%eax
810025e8:	8b 52 0c             	mov    0xc(%edx),%edx
810025eb:	89 10                	mov    %edx,(%eax)
810025ed:	b8 00 00 00 00       	mov    $0x0,%eax
810025f2:	eb 18                	jmp    8100260c <getopt_internal+0xb10>
810025f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810025f7:	c1 e0 04             	shl    $0x4,%eax
810025fa:	89 c2                	mov    %eax,%edx
810025fc:	8b 45 14             	mov    0x14(%ebp),%eax
810025ff:	01 d0                	add    %edx,%eax
81002601:	8b 40 0c             	mov    0xc(%eax),%eax
81002604:	eb 06                	jmp    8100260c <getopt_internal+0xb10>
81002606:	8b 45 20             	mov    0x20(%ebp),%eax
81002609:	8b 40 0c             	mov    0xc(%eax),%eax
8100260c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100260f:	c9                   	leave  
81002610:	c3                   	ret    

81002611 <getopt>:
81002611:	55                   	push   %ebp
81002612:	89 e5                	mov    %esp,%ebp
81002614:	83 ec 28             	sub    $0x28,%esp
81002617:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100261a:	50                   	push   %eax
8100261b:	e8 31 f4 ff ff       	call   81001a51 <read_globals>
81002620:	83 c4 04             	add    $0x4,%esp
81002623:	83 ec 04             	sub    $0x4,%esp
81002626:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002629:	50                   	push   %eax
8100262a:	6a 00                	push   $0x0
8100262c:	6a 00                	push   $0x0
8100262e:	6a 00                	push   $0x0
81002630:	ff 75 10             	push   0x10(%ebp)
81002633:	ff 75 0c             	push   0xc(%ebp)
81002636:	ff 75 08             	push   0x8(%ebp)
81002639:	e8 be f4 ff ff       	call   81001afc <getopt_internal>
8100263e:	83 c4 20             	add    $0x20,%esp
81002641:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002644:	83 ec 0c             	sub    $0xc,%esp
81002647:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100264a:	50                   	push   %eax
8100264b:	e8 5a f4 ff ff       	call   81001aaa <write_globals>
81002650:	83 c4 10             	add    $0x10,%esp
81002653:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002656:	c9                   	leave  
81002657:	c3                   	ret    

81002658 <getopt_long>:
81002658:	55                   	push   %ebp
81002659:	89 e5                	mov    %esp,%ebp
8100265b:	83 ec 28             	sub    $0x28,%esp
8100265e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002661:	50                   	push   %eax
81002662:	e8 ea f3 ff ff       	call   81001a51 <read_globals>
81002667:	83 c4 04             	add    $0x4,%esp
8100266a:	83 ec 04             	sub    $0x4,%esp
8100266d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002670:	50                   	push   %eax
81002671:	6a 00                	push   $0x0
81002673:	ff 75 18             	push   0x18(%ebp)
81002676:	ff 75 14             	push   0x14(%ebp)
81002679:	ff 75 10             	push   0x10(%ebp)
8100267c:	ff 75 0c             	push   0xc(%ebp)
8100267f:	ff 75 08             	push   0x8(%ebp)
81002682:	e8 75 f4 ff ff       	call   81001afc <getopt_internal>
81002687:	83 c4 20             	add    $0x20,%esp
8100268a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100268d:	83 ec 0c             	sub    $0xc,%esp
81002690:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002693:	50                   	push   %eax
81002694:	e8 11 f4 ff ff       	call   81001aaa <write_globals>
81002699:	83 c4 10             	add    $0x10,%esp
8100269c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100269f:	c9                   	leave  
810026a0:	c3                   	ret    

810026a1 <getopt_long_only>:
810026a1:	55                   	push   %ebp
810026a2:	89 e5                	mov    %esp,%ebp
810026a4:	83 ec 28             	sub    $0x28,%esp
810026a7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026aa:	50                   	push   %eax
810026ab:	e8 a1 f3 ff ff       	call   81001a51 <read_globals>
810026b0:	83 c4 04             	add    $0x4,%esp
810026b3:	83 ec 04             	sub    $0x4,%esp
810026b6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026b9:	50                   	push   %eax
810026ba:	6a 01                	push   $0x1
810026bc:	ff 75 18             	push   0x18(%ebp)
810026bf:	ff 75 14             	push   0x14(%ebp)
810026c2:	ff 75 10             	push   0x10(%ebp)
810026c5:	ff 75 0c             	push   0xc(%ebp)
810026c8:	ff 75 08             	push   0x8(%ebp)
810026cb:	e8 2c f4 ff ff       	call   81001afc <getopt_internal>
810026d0:	83 c4 20             	add    $0x20,%esp
810026d3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026d6:	83 ec 0c             	sub    $0xc,%esp
810026d9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026dc:	50                   	push   %eax
810026dd:	e8 c8 f3 ff ff       	call   81001aaa <write_globals>
810026e2:	83 c4 10             	add    $0x10,%esp
810026e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026e8:	c9                   	leave  
810026e9:	c3                   	ret    

810026ea <__getopt_r>:
810026ea:	55                   	push   %ebp
810026eb:	89 e5                	mov    %esp,%ebp
810026ed:	83 ec 08             	sub    $0x8,%esp
810026f0:	83 ec 04             	sub    $0x4,%esp
810026f3:	ff 75 14             	push   0x14(%ebp)
810026f6:	6a 00                	push   $0x0
810026f8:	6a 00                	push   $0x0
810026fa:	6a 00                	push   $0x0
810026fc:	ff 75 10             	push   0x10(%ebp)
810026ff:	ff 75 0c             	push   0xc(%ebp)
81002702:	ff 75 08             	push   0x8(%ebp)
81002705:	e8 f2 f3 ff ff       	call   81001afc <getopt_internal>
8100270a:	83 c4 20             	add    $0x20,%esp
8100270d:	c9                   	leave  
8100270e:	c3                   	ret    

8100270f <__getopt_long_r>:
8100270f:	55                   	push   %ebp
81002710:	89 e5                	mov    %esp,%ebp
81002712:	83 ec 08             	sub    $0x8,%esp
81002715:	83 ec 04             	sub    $0x4,%esp
81002718:	ff 75 1c             	push   0x1c(%ebp)
8100271b:	6a 00                	push   $0x0
8100271d:	ff 75 18             	push   0x18(%ebp)
81002720:	ff 75 14             	push   0x14(%ebp)
81002723:	ff 75 10             	push   0x10(%ebp)
81002726:	ff 75 0c             	push   0xc(%ebp)
81002729:	ff 75 08             	push   0x8(%ebp)
8100272c:	e8 cb f3 ff ff       	call   81001afc <getopt_internal>
81002731:	83 c4 20             	add    $0x20,%esp
81002734:	c9                   	leave  
81002735:	c3                   	ret    

81002736 <__getopt_long_only_r>:
81002736:	55                   	push   %ebp
81002737:	89 e5                	mov    %esp,%ebp
81002739:	83 ec 08             	sub    $0x8,%esp
8100273c:	83 ec 04             	sub    $0x4,%esp
8100273f:	ff 75 1c             	push   0x1c(%ebp)
81002742:	6a 01                	push   $0x1
81002744:	ff 75 18             	push   0x18(%ebp)
81002747:	ff 75 14             	push   0x14(%ebp)
8100274a:	ff 75 10             	push   0x10(%ebp)
8100274d:	ff 75 0c             	push   0xc(%ebp)
81002750:	ff 75 08             	push   0x8(%ebp)
81002753:	e8 a4 f3 ff ff       	call   81001afc <getopt_internal>
81002758:	83 c4 20             	add    $0x20,%esp
8100275b:	c9                   	leave  
8100275c:	c3                   	ret    

8100275d <__getreent>:
8100275d:	55                   	push   %ebp
8100275e:	89 e5                	mov    %esp,%ebp
81002760:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002765:	5d                   	pop    %ebp
81002766:	c3                   	ret    

81002767 <malloc>:
81002767:	55                   	push   %ebp
81002768:	89 e5                	mov    %esp,%ebp
8100276a:	83 ec 08             	sub    $0x8,%esp
8100276d:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81002772:	83 ec 08             	sub    $0x8,%esp
81002775:	ff 75 08             	push   0x8(%ebp)
81002778:	50                   	push   %eax
81002779:	e8 b5 02 00 00       	call   81002a33 <_malloc_r>
8100277e:	83 c4 10             	add    $0x10,%esp
81002781:	c9                   	leave  
81002782:	c3                   	ret    

81002783 <free>:
81002783:	55                   	push   %ebp
81002784:	89 e5                	mov    %esp,%ebp
81002786:	83 ec 08             	sub    $0x8,%esp
81002789:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100278e:	83 ec 08             	sub    $0x8,%esp
81002791:	ff 75 08             	push   0x8(%ebp)
81002794:	50                   	push   %eax
81002795:	e8 e9 ea ff ff       	call   81001283 <_free_r>
8100279a:	83 c4 10             	add    $0x10,%esp
8100279d:	90                   	nop
8100279e:	c9                   	leave  
8100279f:	c3                   	ret    

810027a0 <malloc_extend_top>:
810027a0:	55                   	push   %ebp
810027a1:	89 e5                	mov    %esp,%ebp
810027a3:	83 ec 38             	sub    $0x38,%esp
810027a6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810027ad:	b8 00 75 00 81       	mov    $0x81007500,%eax
810027b2:	8b 40 08             	mov    0x8(%eax),%eax
810027b5:	89 45 e0             	mov    %eax,-0x20(%ebp)
810027b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027bb:	8b 40 04             	mov    0x4(%eax),%eax
810027be:	83 e0 fc             	and    $0xfffffffc,%eax
810027c1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810027c4:	8b 55 e0             	mov    -0x20(%ebp),%edx
810027c7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810027ca:	01 d0                	add    %edx,%eax
810027cc:	89 45 d8             	mov    %eax,-0x28(%ebp)
810027cf:	8b 15 e0 80 00 81    	mov    0x810080e0,%edx
810027d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810027d8:	01 d0                	add    %edx,%eax
810027da:	83 c0 10             	add    $0x10,%eax
810027dd:	89 45 e8             	mov    %eax,-0x18(%ebp)
810027e0:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810027e7:	a1 0c 79 00 81       	mov    0x8100790c,%eax
810027ec:	83 f8 ff             	cmp    $0xffffffff,%eax
810027ef:	74 15                	je     81002806 <malloc_extend_top+0x66>
810027f1:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810027f4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810027f7:	01 d0                	add    %edx,%eax
810027f9:	8d 50 ff             	lea    -0x1(%eax),%edx
810027fc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027ff:	f7 d8                	neg    %eax
81002801:	21 d0                	and    %edx,%eax
81002803:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002806:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002809:	83 ec 08             	sub    $0x8,%esp
8100280c:	50                   	push   %eax
8100280d:	ff 75 08             	push   0x8(%ebp)
81002810:	e8 e0 1a 00 00       	call   810042f5 <_sbrk_r>
81002815:	83 c4 10             	add    $0x10,%esp
81002818:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100281b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100281f:	0f 84 0b 02 00 00    	je     81002a30 <malloc_extend_top+0x290>
81002825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002828:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100282b:	73 0e                	jae    8100283b <malloc_extend_top+0x9b>
8100282d:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002832:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002835:	0f 85 f5 01 00 00    	jne    81002a30 <malloc_extend_top+0x290>
8100283b:	a1 00 81 00 81       	mov    0x81008100,%eax
81002840:	89 c2                	mov    %eax,%edx
81002842:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002845:	01 d0                	add    %edx,%eax
81002847:	a3 00 81 00 81       	mov    %eax,0x81008100
8100284c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100284f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002852:	75 30                	jne    81002884 <malloc_extend_top+0xe4>
81002854:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002857:	8d 50 ff             	lea    -0x1(%eax),%edx
8100285a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100285d:	21 d0                	and    %edx,%eax
8100285f:	85 c0                	test   %eax,%eax
81002861:	75 21                	jne    81002884 <malloc_extend_top+0xe4>
81002863:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002866:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002869:	01 d0                	add    %edx,%eax
8100286b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100286e:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002873:	8b 40 08             	mov    0x8(%eax),%eax
81002876:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002879:	83 ca 01             	or     $0x1,%edx
8100287c:	89 50 04             	mov    %edx,0x4(%eax)
8100287f:	e9 76 01 00 00       	jmp    810029fa <malloc_extend_top+0x25a>
81002884:	a1 0c 79 00 81       	mov    0x8100790c,%eax
81002889:	83 f8 ff             	cmp    $0xffffffff,%eax
8100288c:	75 0a                	jne    81002898 <malloc_extend_top+0xf8>
8100288e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002891:	a3 0c 79 00 81       	mov    %eax,0x8100790c
81002896:	eb 13                	jmp    810028ab <malloc_extend_top+0x10b>
81002898:	8b 15 00 81 00 81    	mov    0x81008100,%edx
8100289e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028a1:	2b 45 d8             	sub    -0x28(%ebp),%eax
810028a4:	01 d0                	add    %edx,%eax
810028a6:	a3 00 81 00 81       	mov    %eax,0x81008100
810028ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028ae:	83 c0 08             	add    $0x8,%eax
810028b1:	83 e0 07             	and    $0x7,%eax
810028b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810028b7:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810028bb:	74 13                	je     810028d0 <malloc_extend_top+0x130>
810028bd:	b8 08 00 00 00       	mov    $0x8,%eax
810028c2:	2b 45 cc             	sub    -0x34(%ebp),%eax
810028c5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810028c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028cb:	01 45 f4             	add    %eax,-0xc(%ebp)
810028ce:	eb 07                	jmp    810028d7 <malloc_extend_top+0x137>
810028d0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810028d7:	8b 55 f4             	mov    -0xc(%ebp),%edx
810028da:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028dd:	01 d0                	add    %edx,%eax
810028df:	89 c2                	mov    %eax,%edx
810028e1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028e4:	83 e8 01             	sub    $0x1,%eax
810028e7:	21 c2                	and    %eax,%edx
810028e9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028ec:	29 d0                	sub    %edx,%eax
810028ee:	01 45 f0             	add    %eax,-0x10(%ebp)
810028f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028f4:	83 e8 01             	sub    $0x1,%eax
810028f7:	21 45 f0             	and    %eax,-0x10(%ebp)
810028fa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028fd:	83 ec 08             	sub    $0x8,%esp
81002900:	50                   	push   %eax
81002901:	ff 75 08             	push   0x8(%ebp)
81002904:	e8 ec 19 00 00       	call   810042f5 <_sbrk_r>
81002909:	83 c4 10             	add    $0x10,%esp
8100290c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100290f:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81002913:	75 28                	jne    8100293d <malloc_extend_top+0x19d>
81002915:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100291c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002923:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002926:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002929:	01 d0                	add    %edx,%eax
8100292b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100292e:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002932:	74 09                	je     8100293d <malloc_extend_top+0x19d>
81002934:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002937:	83 e8 08             	sub    $0x8,%eax
8100293a:	01 45 ec             	add    %eax,-0x14(%ebp)
8100293d:	a1 00 81 00 81       	mov    0x81008100,%eax
81002942:	89 c2                	mov    %eax,%edx
81002944:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002947:	01 d0                	add    %edx,%eax
81002949:	a3 00 81 00 81       	mov    %eax,0x81008100
8100294e:	ba 00 75 00 81       	mov    $0x81007500,%edx
81002953:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002956:	89 42 08             	mov    %eax,0x8(%edx)
81002959:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100295c:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100295f:	89 c2                	mov    %eax,%edx
81002961:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002964:	01 d0                	add    %edx,%eax
81002966:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002969:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100296e:	8b 40 08             	mov    0x8(%eax),%eax
81002971:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002974:	83 ca 01             	or     $0x1,%edx
81002977:	89 50 04             	mov    %edx,0x4(%eax)
8100297a:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100297f:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002982:	74 76                	je     810029fa <malloc_extend_top+0x25a>
81002984:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002988:	77 14                	ja     8100299e <malloc_extend_top+0x1fe>
8100298a:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100298f:	8b 40 08             	mov    0x8(%eax),%eax
81002992:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002999:	e9 93 00 00 00       	jmp    81002a31 <malloc_extend_top+0x291>
8100299e:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029a1:	83 e8 0c             	sub    $0xc,%eax
810029a4:	83 e0 f8             	and    $0xfffffff8,%eax
810029a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810029aa:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029ad:	8b 40 04             	mov    0x4(%eax),%eax
810029b0:	83 e0 01             	and    $0x1,%eax
810029b3:	0b 45 dc             	or     -0x24(%ebp),%eax
810029b6:	89 c2                	mov    %eax,%edx
810029b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029bb:	89 50 04             	mov    %edx,0x4(%eax)
810029be:	8b 55 e0             	mov    -0x20(%ebp),%edx
810029c1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029c4:	01 d0                	add    %edx,%eax
810029c6:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810029cd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029d0:	8d 50 04             	lea    0x4(%eax),%edx
810029d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029d6:	01 d0                	add    %edx,%eax
810029d8:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810029df:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810029e3:	76 15                	jbe    810029fa <malloc_extend_top+0x25a>
810029e5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029e8:	83 c0 08             	add    $0x8,%eax
810029eb:	83 ec 08             	sub    $0x8,%esp
810029ee:	50                   	push   %eax
810029ef:	ff 75 08             	push   0x8(%ebp)
810029f2:	e8 8c e8 ff ff       	call   81001283 <_free_r>
810029f7:	83 c4 10             	add    $0x10,%esp
810029fa:	a1 00 81 00 81       	mov    0x81008100,%eax
810029ff:	89 c2                	mov    %eax,%edx
81002a01:	a1 e4 80 00 81       	mov    0x810080e4,%eax
81002a06:	39 c2                	cmp    %eax,%edx
81002a08:	76 0a                	jbe    81002a14 <malloc_extend_top+0x274>
81002a0a:	a1 00 81 00 81       	mov    0x81008100,%eax
81002a0f:	a3 e4 80 00 81       	mov    %eax,0x810080e4
81002a14:	a1 00 81 00 81       	mov    0x81008100,%eax
81002a19:	89 c2                	mov    %eax,%edx
81002a1b:	a1 e8 80 00 81       	mov    0x810080e8,%eax
81002a20:	39 c2                	cmp    %eax,%edx
81002a22:	76 0d                	jbe    81002a31 <malloc_extend_top+0x291>
81002a24:	a1 00 81 00 81       	mov    0x81008100,%eax
81002a29:	a3 e8 80 00 81       	mov    %eax,0x810080e8
81002a2e:	eb 01                	jmp    81002a31 <malloc_extend_top+0x291>
81002a30:	90                   	nop
81002a31:	c9                   	leave  
81002a32:	c3                   	ret    

81002a33 <_malloc_r>:
81002a33:	55                   	push   %ebp
81002a34:	89 e5                	mov    %esp,%ebp
81002a36:	53                   	push   %ebx
81002a37:	83 ec 44             	sub    $0x44,%esp
81002a3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a3d:	83 c0 0b             	add    $0xb,%eax
81002a40:	83 f8 16             	cmp    $0x16,%eax
81002a43:	76 0b                	jbe    81002a50 <_malloc_r+0x1d>
81002a45:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a48:	83 c0 0b             	add    $0xb,%eax
81002a4b:	83 e0 f8             	and    $0xfffffff8,%eax
81002a4e:	eb 05                	jmp    81002a55 <_malloc_r+0x22>
81002a50:	b8 10 00 00 00       	mov    $0x10,%eax
81002a55:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a58:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a5b:	85 c0                	test   %eax,%eax
81002a5d:	78 08                	js     81002a67 <_malloc_r+0x34>
81002a5f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a62:	3b 45 0c             	cmp    0xc(%ebp),%eax
81002a65:	73 13                	jae    81002a7a <_malloc_r+0x47>
81002a67:	8b 45 08             	mov    0x8(%ebp),%eax
81002a6a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002a70:	b8 00 00 00 00       	mov    $0x0,%eax
81002a75:	e9 d6 07 00 00       	jmp    81003250 <_malloc_r+0x81d>
81002a7a:	83 ec 0c             	sub    $0xc,%esp
81002a7d:	ff 75 08             	push   0x8(%ebp)
81002a80:	e8 93 09 00 00       	call   81003418 <__malloc_lock>
81002a85:	83 c4 10             	add    $0x10,%esp
81002a88:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002a8f:	0f 87 b0 00 00 00    	ja     81002b45 <_malloc_r+0x112>
81002a95:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a98:	c1 e8 03             	shr    $0x3,%eax
81002a9b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aa1:	83 c0 01             	add    $0x1,%eax
81002aa4:	01 c0                	add    %eax,%eax
81002aa6:	c1 e0 02             	shl    $0x2,%eax
81002aa9:	05 00 75 00 81       	add    $0x81007500,%eax
81002aae:	83 e8 08             	sub    $0x8,%eax
81002ab1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002ab4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002ab7:	8b 40 0c             	mov    0xc(%eax),%eax
81002aba:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002abd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ac0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002ac3:	75 0d                	jne    81002ad2 <_malloc_r+0x9f>
81002ac5:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81002ac9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002acc:	8b 40 0c             	mov    0xc(%eax),%eax
81002acf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ad2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ad5:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002ad8:	74 62                	je     81002b3c <_malloc_r+0x109>
81002ada:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002add:	8b 40 04             	mov    0x4(%eax),%eax
81002ae0:	83 e0 fc             	and    $0xfffffffc,%eax
81002ae3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ae6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ae9:	8b 40 0c             	mov    0xc(%eax),%eax
81002aec:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002aef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002af2:	8b 40 08             	mov    0x8(%eax),%eax
81002af5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002af8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002afb:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002afe:	89 50 0c             	mov    %edx,0xc(%eax)
81002b01:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b04:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b07:	89 50 08             	mov    %edx,0x8(%eax)
81002b0a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b0d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b10:	01 d0                	add    %edx,%eax
81002b12:	8b 50 04             	mov    0x4(%eax),%edx
81002b15:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002b18:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b1b:	01 c8                	add    %ecx,%eax
81002b1d:	83 ca 01             	or     $0x1,%edx
81002b20:	89 50 04             	mov    %edx,0x4(%eax)
81002b23:	83 ec 0c             	sub    $0xc,%esp
81002b26:	ff 75 08             	push   0x8(%ebp)
81002b29:	e8 f0 08 00 00       	call   8100341e <__malloc_unlock>
81002b2e:	83 c4 10             	add    $0x10,%esp
81002b31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b34:	83 c0 08             	add    $0x8,%eax
81002b37:	e9 14 07 00 00       	jmp    81003250 <_malloc_r+0x81d>
81002b3c:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002b40:	e9 46 01 00 00       	jmp    81002c8b <_malloc_r+0x258>
81002b45:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b48:	c1 e8 09             	shr    $0x9,%eax
81002b4b:	85 c0                	test   %eax,%eax
81002b4d:	75 08                	jne    81002b57 <_malloc_r+0x124>
81002b4f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b52:	c1 e8 03             	shr    $0x3,%eax
81002b55:	eb 77                	jmp    81002bce <_malloc_r+0x19b>
81002b57:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b5a:	c1 e8 09             	shr    $0x9,%eax
81002b5d:	83 f8 04             	cmp    $0x4,%eax
81002b60:	77 0b                	ja     81002b6d <_malloc_r+0x13a>
81002b62:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b65:	c1 e8 06             	shr    $0x6,%eax
81002b68:	83 c0 38             	add    $0x38,%eax
81002b6b:	eb 61                	jmp    81002bce <_malloc_r+0x19b>
81002b6d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b70:	c1 e8 09             	shr    $0x9,%eax
81002b73:	83 f8 14             	cmp    $0x14,%eax
81002b76:	77 0b                	ja     81002b83 <_malloc_r+0x150>
81002b78:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b7b:	c1 e8 09             	shr    $0x9,%eax
81002b7e:	83 c0 5b             	add    $0x5b,%eax
81002b81:	eb 4b                	jmp    81002bce <_malloc_r+0x19b>
81002b83:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b86:	c1 e8 09             	shr    $0x9,%eax
81002b89:	83 f8 54             	cmp    $0x54,%eax
81002b8c:	77 0b                	ja     81002b99 <_malloc_r+0x166>
81002b8e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b91:	c1 e8 0c             	shr    $0xc,%eax
81002b94:	83 c0 6e             	add    $0x6e,%eax
81002b97:	eb 35                	jmp    81002bce <_malloc_r+0x19b>
81002b99:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b9c:	c1 e8 09             	shr    $0x9,%eax
81002b9f:	3d 54 01 00 00       	cmp    $0x154,%eax
81002ba4:	77 0b                	ja     81002bb1 <_malloc_r+0x17e>
81002ba6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ba9:	c1 e8 0f             	shr    $0xf,%eax
81002bac:	83 c0 77             	add    $0x77,%eax
81002baf:	eb 1d                	jmp    81002bce <_malloc_r+0x19b>
81002bb1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bb4:	c1 e8 09             	shr    $0x9,%eax
81002bb7:	3d 54 05 00 00       	cmp    $0x554,%eax
81002bbc:	77 0b                	ja     81002bc9 <_malloc_r+0x196>
81002bbe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bc1:	c1 e8 12             	shr    $0x12,%eax
81002bc4:	83 c0 7c             	add    $0x7c,%eax
81002bc7:	eb 05                	jmp    81002bce <_malloc_r+0x19b>
81002bc9:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002bce:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002bd1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bd4:	83 c0 01             	add    $0x1,%eax
81002bd7:	01 c0                	add    %eax,%eax
81002bd9:	c1 e0 02             	shl    $0x2,%eax
81002bdc:	05 00 75 00 81       	add    $0x81007500,%eax
81002be1:	83 e8 08             	sub    $0x8,%eax
81002be4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002be7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002bea:	8b 40 0c             	mov    0xc(%eax),%eax
81002bed:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bf0:	e9 86 00 00 00       	jmp    81002c7b <_malloc_r+0x248>
81002bf5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bf8:	8b 40 04             	mov    0x4(%eax),%eax
81002bfb:	83 e0 fc             	and    $0xfffffffc,%eax
81002bfe:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002c01:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c04:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002c07:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c0a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002c0e:	7e 06                	jle    81002c16 <_malloc_r+0x1e3>
81002c10:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002c14:	eb 71                	jmp    81002c87 <_malloc_r+0x254>
81002c16:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002c1a:	78 56                	js     81002c72 <_malloc_r+0x23f>
81002c1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c1f:	8b 40 0c             	mov    0xc(%eax),%eax
81002c22:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002c25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c28:	8b 40 08             	mov    0x8(%eax),%eax
81002c2b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c2e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c31:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002c34:	89 50 0c             	mov    %edx,0xc(%eax)
81002c37:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c3a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c3d:	89 50 08             	mov    %edx,0x8(%eax)
81002c40:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c43:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c46:	01 d0                	add    %edx,%eax
81002c48:	8b 50 04             	mov    0x4(%eax),%edx
81002c4b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002c4e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c51:	01 c8                	add    %ecx,%eax
81002c53:	83 ca 01             	or     $0x1,%edx
81002c56:	89 50 04             	mov    %edx,0x4(%eax)
81002c59:	83 ec 0c             	sub    $0xc,%esp
81002c5c:	ff 75 08             	push   0x8(%ebp)
81002c5f:	e8 ba 07 00 00       	call   8100341e <__malloc_unlock>
81002c64:	83 c4 10             	add    $0x10,%esp
81002c67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c6a:	83 c0 08             	add    $0x8,%eax
81002c6d:	e9 de 05 00 00       	jmp    81003250 <_malloc_r+0x81d>
81002c72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c75:	8b 40 0c             	mov    0xc(%eax),%eax
81002c78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c7e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002c81:	0f 85 6e ff ff ff    	jne    81002bf5 <_malloc_r+0x1c2>
81002c87:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002c8b:	b8 08 75 00 81       	mov    $0x81007508,%eax
81002c90:	8b 40 08             	mov    0x8(%eax),%eax
81002c93:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c96:	b8 08 75 00 81       	mov    $0x81007508,%eax
81002c9b:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002c9e:	0f 84 9c 02 00 00    	je     81002f40 <_malloc_r+0x50d>
81002ca4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ca7:	8b 40 04             	mov    0x4(%eax),%eax
81002caa:	83 e0 fc             	and    $0xfffffffc,%eax
81002cad:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002cb0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cb3:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002cb6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002cb9:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002cbd:	7e 7a                	jle    81002d39 <_malloc_r+0x306>
81002cbf:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cc2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002cc5:	01 d0                	add    %edx,%eax
81002cc7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002cca:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ccd:	83 c8 01             	or     $0x1,%eax
81002cd0:	89 c2                	mov    %eax,%edx
81002cd2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cd5:	89 50 04             	mov    %edx,0x4(%eax)
81002cd8:	b8 08 75 00 81       	mov    $0x81007508,%eax
81002cdd:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002ce0:	89 50 0c             	mov    %edx,0xc(%eax)
81002ce3:	ba 08 75 00 81       	mov    $0x81007508,%edx
81002ce8:	8b 40 0c             	mov    0xc(%eax),%eax
81002ceb:	89 42 08             	mov    %eax,0x8(%edx)
81002cee:	ba 08 75 00 81       	mov    $0x81007508,%edx
81002cf3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002cf6:	89 50 0c             	mov    %edx,0xc(%eax)
81002cf9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002cfc:	8b 50 0c             	mov    0xc(%eax),%edx
81002cff:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d02:	89 50 08             	mov    %edx,0x8(%eax)
81002d05:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d08:	83 c8 01             	or     $0x1,%eax
81002d0b:	89 c2                	mov    %eax,%edx
81002d0d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d10:	89 50 04             	mov    %edx,0x4(%eax)
81002d13:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002d16:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d19:	01 c2                	add    %eax,%edx
81002d1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d1e:	89 02                	mov    %eax,(%edx)
81002d20:	83 ec 0c             	sub    $0xc,%esp
81002d23:	ff 75 08             	push   0x8(%ebp)
81002d26:	e8 f3 06 00 00       	call   8100341e <__malloc_unlock>
81002d2b:	83 c4 10             	add    $0x10,%esp
81002d2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d31:	83 c0 08             	add    $0x8,%eax
81002d34:	e9 17 05 00 00       	jmp    81003250 <_malloc_r+0x81d>
81002d39:	b8 08 75 00 81       	mov    $0x81007508,%eax
81002d3e:	ba 08 75 00 81       	mov    $0x81007508,%edx
81002d43:	89 50 0c             	mov    %edx,0xc(%eax)
81002d46:	ba 08 75 00 81       	mov    $0x81007508,%edx
81002d4b:	8b 40 0c             	mov    0xc(%eax),%eax
81002d4e:	89 42 08             	mov    %eax,0x8(%edx)
81002d51:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002d55:	78 32                	js     81002d89 <_malloc_r+0x356>
81002d57:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d5a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d5d:	01 d0                	add    %edx,%eax
81002d5f:	8b 50 04             	mov    0x4(%eax),%edx
81002d62:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002d65:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d68:	01 c8                	add    %ecx,%eax
81002d6a:	83 ca 01             	or     $0x1,%edx
81002d6d:	89 50 04             	mov    %edx,0x4(%eax)
81002d70:	83 ec 0c             	sub    $0xc,%esp
81002d73:	ff 75 08             	push   0x8(%ebp)
81002d76:	e8 a3 06 00 00       	call   8100341e <__malloc_unlock>
81002d7b:	83 c4 10             	add    $0x10,%esp
81002d7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d81:	83 c0 08             	add    $0x8,%eax
81002d84:	e9 c7 04 00 00       	jmp    81003250 <_malloc_r+0x81d>
81002d89:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002d90:	77 7f                	ja     81002e11 <_malloc_r+0x3de>
81002d92:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d95:	c1 e8 03             	shr    $0x3,%eax
81002d98:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002d9b:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002da0:	8b 58 04             	mov    0x4(%eax),%ebx
81002da3:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002da6:	8d 50 03             	lea    0x3(%eax),%edx
81002da9:	85 c0                	test   %eax,%eax
81002dab:	0f 48 c2             	cmovs  %edx,%eax
81002dae:	c1 f8 02             	sar    $0x2,%eax
81002db1:	ba 01 00 00 00       	mov    $0x1,%edx
81002db6:	89 c1                	mov    %eax,%ecx
81002db8:	d3 e2                	shl    %cl,%edx
81002dba:	89 d0                	mov    %edx,%eax
81002dbc:	ba 00 75 00 81       	mov    $0x81007500,%edx
81002dc1:	09 d8                	or     %ebx,%eax
81002dc3:	89 42 04             	mov    %eax,0x4(%edx)
81002dc6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002dc9:	83 c0 01             	add    $0x1,%eax
81002dcc:	01 c0                	add    %eax,%eax
81002dce:	c1 e0 02             	shl    $0x2,%eax
81002dd1:	05 00 75 00 81       	add    $0x81007500,%eax
81002dd6:	83 e8 08             	sub    $0x8,%eax
81002dd9:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002ddc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ddf:	8b 40 08             	mov    0x8(%eax),%eax
81002de2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002de5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002de8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002deb:	89 50 0c             	mov    %edx,0xc(%eax)
81002dee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002df1:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002df4:	89 50 08             	mov    %edx,0x8(%eax)
81002df7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002dfa:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002dfd:	89 50 08             	mov    %edx,0x8(%eax)
81002e00:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e03:	8b 50 08             	mov    0x8(%eax),%edx
81002e06:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e09:	89 50 0c             	mov    %edx,0xc(%eax)
81002e0c:	e9 2f 01 00 00       	jmp    81002f40 <_malloc_r+0x50d>
81002e11:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e14:	c1 e8 09             	shr    $0x9,%eax
81002e17:	85 c0                	test   %eax,%eax
81002e19:	75 08                	jne    81002e23 <_malloc_r+0x3f0>
81002e1b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e1e:	c1 e8 03             	shr    $0x3,%eax
81002e21:	eb 77                	jmp    81002e9a <_malloc_r+0x467>
81002e23:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e26:	c1 e8 09             	shr    $0x9,%eax
81002e29:	83 f8 04             	cmp    $0x4,%eax
81002e2c:	77 0b                	ja     81002e39 <_malloc_r+0x406>
81002e2e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e31:	c1 e8 06             	shr    $0x6,%eax
81002e34:	83 c0 38             	add    $0x38,%eax
81002e37:	eb 61                	jmp    81002e9a <_malloc_r+0x467>
81002e39:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e3c:	c1 e8 09             	shr    $0x9,%eax
81002e3f:	83 f8 14             	cmp    $0x14,%eax
81002e42:	77 0b                	ja     81002e4f <_malloc_r+0x41c>
81002e44:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e47:	c1 e8 09             	shr    $0x9,%eax
81002e4a:	83 c0 5b             	add    $0x5b,%eax
81002e4d:	eb 4b                	jmp    81002e9a <_malloc_r+0x467>
81002e4f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e52:	c1 e8 09             	shr    $0x9,%eax
81002e55:	83 f8 54             	cmp    $0x54,%eax
81002e58:	77 0b                	ja     81002e65 <_malloc_r+0x432>
81002e5a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e5d:	c1 e8 0c             	shr    $0xc,%eax
81002e60:	83 c0 6e             	add    $0x6e,%eax
81002e63:	eb 35                	jmp    81002e9a <_malloc_r+0x467>
81002e65:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e68:	c1 e8 09             	shr    $0x9,%eax
81002e6b:	3d 54 01 00 00       	cmp    $0x154,%eax
81002e70:	77 0b                	ja     81002e7d <_malloc_r+0x44a>
81002e72:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e75:	c1 e8 0f             	shr    $0xf,%eax
81002e78:	83 c0 77             	add    $0x77,%eax
81002e7b:	eb 1d                	jmp    81002e9a <_malloc_r+0x467>
81002e7d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e80:	c1 e8 09             	shr    $0x9,%eax
81002e83:	3d 54 05 00 00       	cmp    $0x554,%eax
81002e88:	77 0b                	ja     81002e95 <_malloc_r+0x462>
81002e8a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e8d:	c1 e8 12             	shr    $0x12,%eax
81002e90:	83 c0 7c             	add    $0x7c,%eax
81002e93:	eb 05                	jmp    81002e9a <_malloc_r+0x467>
81002e95:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002e9a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e9d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ea0:	83 c0 01             	add    $0x1,%eax
81002ea3:	01 c0                	add    %eax,%eax
81002ea5:	c1 e0 02             	shl    $0x2,%eax
81002ea8:	05 00 75 00 81       	add    $0x81007500,%eax
81002ead:	83 e8 08             	sub    $0x8,%eax
81002eb0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002eb3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002eb6:	8b 40 08             	mov    0x8(%eax),%eax
81002eb9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ebc:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ebf:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002ec2:	75 36                	jne    81002efa <_malloc_r+0x4c7>
81002ec4:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002ec9:	8b 58 04             	mov    0x4(%eax),%ebx
81002ecc:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ecf:	8d 50 03             	lea    0x3(%eax),%edx
81002ed2:	85 c0                	test   %eax,%eax
81002ed4:	0f 48 c2             	cmovs  %edx,%eax
81002ed7:	c1 f8 02             	sar    $0x2,%eax
81002eda:	ba 01 00 00 00       	mov    $0x1,%edx
81002edf:	89 c1                	mov    %eax,%ecx
81002ee1:	d3 e2                	shl    %cl,%edx
81002ee3:	89 d0                	mov    %edx,%eax
81002ee5:	ba 00 75 00 81       	mov    $0x81007500,%edx
81002eea:	09 d8                	or     %ebx,%eax
81002eec:	89 42 04             	mov    %eax,0x4(%edx)
81002eef:	eb 28                	jmp    81002f19 <_malloc_r+0x4e6>
81002ef1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ef4:	8b 40 08             	mov    0x8(%eax),%eax
81002ef7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002efa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002efd:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002f00:	74 0e                	je     81002f10 <_malloc_r+0x4dd>
81002f02:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f05:	8b 40 04             	mov    0x4(%eax),%eax
81002f08:	83 e0 fc             	and    $0xfffffffc,%eax
81002f0b:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002f0e:	72 e1                	jb     81002ef1 <_malloc_r+0x4be>
81002f10:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f13:	8b 40 0c             	mov    0xc(%eax),%eax
81002f16:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f1c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002f1f:	89 50 0c             	mov    %edx,0xc(%eax)
81002f22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f25:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f28:	89 50 08             	mov    %edx,0x8(%eax)
81002f2b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f2e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f31:	89 50 08             	mov    %edx,0x8(%eax)
81002f34:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f37:	8b 50 08             	mov    0x8(%eax),%edx
81002f3a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f3d:	89 50 0c             	mov    %edx,0xc(%eax)
81002f40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f43:	8d 50 03             	lea    0x3(%eax),%edx
81002f46:	85 c0                	test   %eax,%eax
81002f48:	0f 48 c2             	cmovs  %edx,%eax
81002f4b:	c1 f8 02             	sar    $0x2,%eax
81002f4e:	ba 01 00 00 00       	mov    $0x1,%edx
81002f53:	89 c1                	mov    %eax,%ecx
81002f55:	d3 e2                	shl    %cl,%edx
81002f57:	89 d0                	mov    %edx,%eax
81002f59:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f5c:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002f61:	8b 40 04             	mov    0x4(%eax),%eax
81002f64:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002f67:	0f 87 13 02 00 00    	ja     81003180 <_malloc_r+0x74d>
81002f6d:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002f72:	8b 40 04             	mov    0x4(%eax),%eax
81002f75:	23 45 e4             	and    -0x1c(%ebp),%eax
81002f78:	85 c0                	test   %eax,%eax
81002f7a:	75 27                	jne    81002fa3 <_malloc_r+0x570>
81002f7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f7f:	83 e0 fc             	and    $0xfffffffc,%eax
81002f82:	83 c0 04             	add    $0x4,%eax
81002f85:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002f88:	d1 65 e4             	shll   -0x1c(%ebp)
81002f8b:	eb 07                	jmp    81002f94 <_malloc_r+0x561>
81002f8d:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002f91:	d1 65 e4             	shll   -0x1c(%ebp)
81002f94:	b8 00 75 00 81       	mov    $0x81007500,%eax
81002f99:	8b 40 04             	mov    0x4(%eax),%eax
81002f9c:	23 45 e4             	and    -0x1c(%ebp),%eax
81002f9f:	85 c0                	test   %eax,%eax
81002fa1:	74 ea                	je     81002f8d <_malloc_r+0x55a>
81002fa3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fa6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002fa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fac:	83 c0 01             	add    $0x1,%eax
81002faf:	01 c0                	add    %eax,%eax
81002fb1:	c1 e0 02             	shl    $0x2,%eax
81002fb4:	05 00 75 00 81       	add    $0x81007500,%eax
81002fb9:	83 e8 08             	sub    $0x8,%eax
81002fbc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002fbf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fc2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002fc5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fc8:	8b 40 0c             	mov    0xc(%eax),%eax
81002fcb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002fce:	e9 22 01 00 00       	jmp    810030f5 <_malloc_r+0x6c2>
81002fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fd6:	8b 40 04             	mov    0x4(%eax),%eax
81002fd9:	83 e0 fc             	and    $0xfffffffc,%eax
81002fdc:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002fdf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002fe2:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002fe5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fe8:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002fec:	0f 8e 9e 00 00 00    	jle    81003090 <_malloc_r+0x65d>
81002ff2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ff5:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ff8:	01 d0                	add    %edx,%eax
81002ffa:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002ffd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003000:	83 c8 01             	or     $0x1,%eax
81003003:	89 c2                	mov    %eax,%edx
81003005:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003008:	89 50 04             	mov    %edx,0x4(%eax)
8100300b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100300e:	8b 40 0c             	mov    0xc(%eax),%eax
81003011:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003014:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003017:	8b 40 08             	mov    0x8(%eax),%eax
8100301a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100301d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003020:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003023:	89 50 0c             	mov    %edx,0xc(%eax)
81003026:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003029:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100302c:	89 50 08             	mov    %edx,0x8(%eax)
8100302f:	b8 08 75 00 81       	mov    $0x81007508,%eax
81003034:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003037:	89 50 0c             	mov    %edx,0xc(%eax)
8100303a:	ba 08 75 00 81       	mov    $0x81007508,%edx
8100303f:	8b 40 0c             	mov    0xc(%eax),%eax
81003042:	89 42 08             	mov    %eax,0x8(%edx)
81003045:	ba 08 75 00 81       	mov    $0x81007508,%edx
8100304a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100304d:	89 50 0c             	mov    %edx,0xc(%eax)
81003050:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003053:	8b 50 0c             	mov    0xc(%eax),%edx
81003056:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003059:	89 50 08             	mov    %edx,0x8(%eax)
8100305c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100305f:	83 c8 01             	or     $0x1,%eax
81003062:	89 c2                	mov    %eax,%edx
81003064:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003067:	89 50 04             	mov    %edx,0x4(%eax)
8100306a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100306d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003070:	01 c2                	add    %eax,%edx
81003072:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003075:	89 02                	mov    %eax,(%edx)
81003077:	83 ec 0c             	sub    $0xc,%esp
8100307a:	ff 75 08             	push   0x8(%ebp)
8100307d:	e8 9c 03 00 00       	call   8100341e <__malloc_unlock>
81003082:	83 c4 10             	add    $0x10,%esp
81003085:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003088:	83 c0 08             	add    $0x8,%eax
8100308b:	e9 c0 01 00 00       	jmp    81003250 <_malloc_r+0x81d>
81003090:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003094:	78 56                	js     810030ec <_malloc_r+0x6b9>
81003096:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003099:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100309c:	01 d0                	add    %edx,%eax
8100309e:	8b 50 04             	mov    0x4(%eax),%edx
810030a1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810030a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810030a7:	01 c8                	add    %ecx,%eax
810030a9:	83 ca 01             	or     $0x1,%edx
810030ac:	89 50 04             	mov    %edx,0x4(%eax)
810030af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030b2:	8b 40 0c             	mov    0xc(%eax),%eax
810030b5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810030b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030bb:	8b 40 08             	mov    0x8(%eax),%eax
810030be:	89 45 dc             	mov    %eax,-0x24(%ebp)
810030c1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030c4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810030c7:	89 50 0c             	mov    %edx,0xc(%eax)
810030ca:	8b 45 d8             	mov    -0x28(%ebp),%eax
810030cd:	8b 55 dc             	mov    -0x24(%ebp),%edx
810030d0:	89 50 08             	mov    %edx,0x8(%eax)
810030d3:	83 ec 0c             	sub    $0xc,%esp
810030d6:	ff 75 08             	push   0x8(%ebp)
810030d9:	e8 40 03 00 00       	call   8100341e <__malloc_unlock>
810030de:	83 c4 10             	add    $0x10,%esp
810030e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030e4:	83 c0 08             	add    $0x8,%eax
810030e7:	e9 64 01 00 00       	jmp    81003250 <_malloc_r+0x81d>
810030ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030ef:	8b 40 0c             	mov    0xc(%eax),%eax
810030f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030f8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810030fb:	0f 85 d2 fe ff ff    	jne    81002fd3 <_malloc_r+0x5a0>
81003101:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003105:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003109:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100310c:	83 e0 03             	and    $0x3,%eax
8100310f:	85 c0                	test   %eax,%eax
81003111:	0f 85 ae fe ff ff    	jne    81002fc5 <_malloc_r+0x592>
81003117:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100311a:	83 e0 03             	and    $0x3,%eax
8100311d:	85 c0                	test   %eax,%eax
8100311f:	75 19                	jne    8100313a <_malloc_r+0x707>
81003121:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003126:	8b 48 04             	mov    0x4(%eax),%ecx
81003129:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100312c:	f7 d0                	not    %eax
8100312e:	ba 00 75 00 81       	mov    $0x81007500,%edx
81003133:	21 c8                	and    %ecx,%eax
81003135:	89 42 04             	mov    %eax,0x4(%edx)
81003138:	eb 13                	jmp    8100314d <_malloc_r+0x71a>
8100313a:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8100313e:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003142:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003145:	8b 40 08             	mov    0x8(%eax),%eax
81003148:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
8100314b:	74 ca                	je     81003117 <_malloc_r+0x6e4>
8100314d:	d1 65 e4             	shll   -0x1c(%ebp)
81003150:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003155:	8b 40 04             	mov    0x4(%eax),%eax
81003158:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100315b:	77 23                	ja     81003180 <_malloc_r+0x74d>
8100315d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003161:	74 1d                	je     81003180 <_malloc_r+0x74d>
81003163:	eb 07                	jmp    8100316c <_malloc_r+0x739>
81003165:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003169:	d1 65 e4             	shll   -0x1c(%ebp)
8100316c:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003171:	8b 40 04             	mov    0x4(%eax),%eax
81003174:	23 45 e4             	and    -0x1c(%ebp),%eax
81003177:	85 c0                	test   %eax,%eax
81003179:	74 ea                	je     81003165 <_malloc_r+0x732>
8100317b:	e9 23 fe ff ff       	jmp    81002fa3 <_malloc_r+0x570>
81003180:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003185:	8b 40 08             	mov    0x8(%eax),%eax
81003188:	8b 40 04             	mov    0x4(%eax),%eax
8100318b:	83 e0 fc             	and    $0xfffffffc,%eax
8100318e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003191:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003194:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003199:	8b 40 08             	mov    0x8(%eax),%eax
8100319c:	8b 40 04             	mov    0x4(%eax),%eax
8100319f:	83 e0 fc             	and    $0xfffffffc,%eax
810031a2:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810031a5:	77 06                	ja     810031ad <_malloc_r+0x77a>
810031a7:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810031ab:	7f 53                	jg     81003200 <_malloc_r+0x7cd>
810031ad:	83 ec 08             	sub    $0x8,%esp
810031b0:	ff 75 d0             	push   -0x30(%ebp)
810031b3:	ff 75 08             	push   0x8(%ebp)
810031b6:	e8 e5 f5 ff ff       	call   810027a0 <malloc_extend_top>
810031bb:	83 c4 10             	add    $0x10,%esp
810031be:	b8 00 75 00 81       	mov    $0x81007500,%eax
810031c3:	8b 40 08             	mov    0x8(%eax),%eax
810031c6:	8b 40 04             	mov    0x4(%eax),%eax
810031c9:	83 e0 fc             	and    $0xfffffffc,%eax
810031cc:	2b 45 d0             	sub    -0x30(%ebp),%eax
810031cf:	89 45 e8             	mov    %eax,-0x18(%ebp)
810031d2:	b8 00 75 00 81       	mov    $0x81007500,%eax
810031d7:	8b 40 08             	mov    0x8(%eax),%eax
810031da:	8b 40 04             	mov    0x4(%eax),%eax
810031dd:	83 e0 fc             	and    $0xfffffffc,%eax
810031e0:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810031e3:	77 06                	ja     810031eb <_malloc_r+0x7b8>
810031e5:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810031e9:	7f 15                	jg     81003200 <_malloc_r+0x7cd>
810031eb:	83 ec 0c             	sub    $0xc,%esp
810031ee:	ff 75 08             	push   0x8(%ebp)
810031f1:	e8 28 02 00 00       	call   8100341e <__malloc_unlock>
810031f6:	83 c4 10             	add    $0x10,%esp
810031f9:	b8 00 00 00 00       	mov    $0x0,%eax
810031fe:	eb 50                	jmp    81003250 <_malloc_r+0x81d>
81003200:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003205:	8b 40 08             	mov    0x8(%eax),%eax
81003208:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100320b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100320e:	83 c8 01             	or     $0x1,%eax
81003211:	89 c2                	mov    %eax,%edx
81003213:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003216:	89 50 04             	mov    %edx,0x4(%eax)
81003219:	ba 00 75 00 81       	mov    $0x81007500,%edx
8100321e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003221:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003224:	01 c8                	add    %ecx,%eax
81003226:	89 42 08             	mov    %eax,0x8(%edx)
81003229:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100322c:	83 c8 01             	or     $0x1,%eax
8100322f:	89 c2                	mov    %eax,%edx
81003231:	b8 00 75 00 81       	mov    $0x81007500,%eax
81003236:	8b 40 08             	mov    0x8(%eax),%eax
81003239:	89 50 04             	mov    %edx,0x4(%eax)
8100323c:	83 ec 0c             	sub    $0xc,%esp
8100323f:	ff 75 08             	push   0x8(%ebp)
81003242:	e8 d7 01 00 00       	call   8100341e <__malloc_unlock>
81003247:	83 c4 10             	add    $0x10,%esp
8100324a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100324d:	83 c0 08             	add    $0x8,%eax
81003250:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003253:	c9                   	leave  
81003254:	c3                   	ret    
81003255:	66 90                	xchg   %ax,%ax
81003257:	66 90                	xchg   %ax,%ax
81003259:	66 90                	xchg   %ax,%ax
8100325b:	66 90                	xchg   %ax,%ax
8100325d:	66 90                	xchg   %ax,%ax
8100325f:	90                   	nop

81003260 <memchr>:
81003260:	55                   	push   %ebp
81003261:	89 e5                	mov    %esp,%ebp
81003263:	57                   	push   %edi
81003264:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003268:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100326b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100326e:	31 d2                	xor    %edx,%edx
81003270:	85 c9                	test   %ecx,%ecx
81003272:	74 79                	je     810032ed <L20>
81003274:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100327a:	74 28                	je     810032a4 <L5>
8100327c:	3a 07                	cmp    (%edi),%al
8100327e:	74 6a                	je     810032ea <L15>
81003280:	47                   	inc    %edi
81003281:	49                   	dec    %ecx
81003282:	74 69                	je     810032ed <L20>
81003284:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100328a:	74 18                	je     810032a4 <L5>
8100328c:	3a 07                	cmp    (%edi),%al
8100328e:	74 5a                	je     810032ea <L15>
81003290:	47                   	inc    %edi
81003291:	49                   	dec    %ecx
81003292:	74 59                	je     810032ed <L20>
81003294:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100329a:	74 08                	je     810032a4 <L5>
8100329c:	3a 07                	cmp    (%edi),%al
8100329e:	74 4a                	je     810032ea <L15>
810032a0:	47                   	inc    %edi
810032a1:	49                   	dec    %ecx
810032a2:	74 49                	je     810032ed <L20>

810032a4 <L5>:
810032a4:	88 c4                	mov    %al,%ah
810032a6:	89 c2                	mov    %eax,%edx
810032a8:	c1 e2 10             	shl    $0x10,%edx
810032ab:	09 d0                	or     %edx,%eax
810032ad:	53                   	push   %ebx
810032ae:	66 90                	xchg   %ax,%ax

810032b0 <L8>:
810032b0:	83 e9 04             	sub    $0x4,%ecx
810032b3:	72 1c                	jb     810032d1 <L9>
810032b5:	8b 17                	mov    (%edi),%edx
810032b7:	83 c7 04             	add    $0x4,%edi
810032ba:	31 c2                	xor    %eax,%edx
810032bc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
810032c2:	f7 d2                	not    %edx
810032c4:	21 d3                	and    %edx,%ebx
810032c6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
810032cc:	74 e2                	je     810032b0 <L8>
810032ce:	83 ef 04             	sub    $0x4,%edi

810032d1 <L9>:
810032d1:	5b                   	pop    %ebx
810032d2:	31 d2                	xor    %edx,%edx
810032d4:	83 c1 04             	add    $0x4,%ecx
810032d7:	74 14                	je     810032ed <L20>
810032d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810032e0 <L10>:
810032e0:	3a 07                	cmp    (%edi),%al
810032e2:	74 06                	je     810032ea <L15>
810032e4:	47                   	inc    %edi
810032e5:	49                   	dec    %ecx
810032e6:	75 f8                	jne    810032e0 <L10>
810032e8:	31 ff                	xor    %edi,%edi

810032ea <L15>:
810032ea:	4a                   	dec    %edx
810032eb:	21 fa                	and    %edi,%edx

810032ed <L20>:
810032ed:	89 d0                	mov    %edx,%eax
810032ef:	8d 65 fc             	lea    -0x4(%ebp),%esp
810032f2:	5f                   	pop    %edi
810032f3:	c9                   	leave  
810032f4:	c3                   	ret    

810032f5 <memcmp>:
810032f5:	55                   	push   %ebp
810032f6:	89 e5                	mov    %esp,%ebp
810032f8:	83 ec 10             	sub    $0x10,%esp
810032fb:	53                   	push   %ebx
810032fc:	57                   	push   %edi
810032fd:	56                   	push   %esi
810032fe:	8b 7d 08             	mov    0x8(%ebp),%edi
81003301:	8b 75 0c             	mov    0xc(%ebp),%esi
81003304:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003307:	fc                   	cld    
81003308:	31 c0                	xor    %eax,%eax
8100330a:	85 c9                	test   %ecx,%ecx
8100330c:	74 31                	je     8100333f <L4>
8100330e:	89 f8                	mov    %edi,%eax
81003310:	09 f0                	or     %esi,%eax
81003312:	a8 03                	test   $0x3,%al
81003314:	75 1b                	jne    81003331 <BYTECMP>
81003316:	89 cb                	mov    %ecx,%ebx
81003318:	c1 e9 02             	shr    $0x2,%ecx
8100331b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100331d:	74 0d                	je     8100332c <L5>
8100331f:	83 ee 04             	sub    $0x4,%esi
81003322:	83 ef 04             	sub    $0x4,%edi
81003325:	b9 04 00 00 00       	mov    $0x4,%ecx
8100332a:	eb 05                	jmp    81003331 <BYTECMP>

8100332c <L5>:
8100332c:	83 e3 03             	and    $0x3,%ebx
8100332f:	89 d9                	mov    %ebx,%ecx

81003331 <BYTECMP>:
81003331:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003333 <L3>:
81003333:	31 d2                	xor    %edx,%edx
81003335:	8a 56 ff             	mov    -0x1(%esi),%dl
81003338:	31 c0                	xor    %eax,%eax
8100333a:	8a 47 ff             	mov    -0x1(%edi),%al
8100333d:	29 d0                	sub    %edx,%eax

8100333f <L4>:
8100333f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003342:	5e                   	pop    %esi
81003343:	5f                   	pop    %edi
81003344:	5b                   	pop    %ebx
81003345:	c9                   	leave  
81003346:	c3                   	ret    
81003347:	90                   	nop

81003348 <memcpy>:
81003348:	55                   	push   %ebp
81003349:	89 e5                	mov    %esp,%ebp
8100334b:	56                   	push   %esi
8100334c:	57                   	push   %edi
8100334d:	53                   	push   %ebx
8100334e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003351:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003354:	8b 75 0c             	mov    0xc(%ebp),%esi
81003357:	fc                   	cld    
81003358:	83 f9 08             	cmp    $0x8,%ecx
8100335b:	76 26                	jbe    81003383 <memcpy+0x3b>
8100335d:	89 fa                	mov    %edi,%edx
8100335f:	89 cb                	mov    %ecx,%ebx
81003361:	83 e2 03             	and    $0x3,%edx
81003364:	74 10                	je     81003376 <memcpy+0x2e>
81003366:	b9 04 00 00 00       	mov    $0x4,%ecx
8100336b:	29 d1                	sub    %edx,%ecx
8100336d:	83 e1 03             	and    $0x3,%ecx
81003370:	29 cb                	sub    %ecx,%ebx
81003372:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003374:	89 d9                	mov    %ebx,%ecx
81003376:	c1 e9 02             	shr    $0x2,%ecx
81003379:	8d 76 00             	lea    0x0(%esi),%esi
8100337c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100337e:	89 d9                	mov    %ebx,%ecx
81003380:	83 e1 03             	and    $0x3,%ecx
81003383:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003385:	8b 45 08             	mov    0x8(%ebp),%eax
81003388:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100338b:	5b                   	pop    %ebx
8100338c:	5f                   	pop    %edi
8100338d:	5e                   	pop    %esi
8100338e:	c9                   	leave  
8100338f:	c3                   	ret    

81003390 <memset>:
81003390:	55                   	push   %ebp
81003391:	89 e5                	mov    %esp,%ebp
81003393:	57                   	push   %edi
81003394:	8b 7d 08             	mov    0x8(%ebp),%edi
81003397:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100339b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100339e:	fc                   	cld    
8100339f:	83 f9 10             	cmp    $0x10,%ecx
810033a2:	76 69                	jbe    8100340d <memset+0x7d>
810033a4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033aa:	74 4c                	je     810033f8 <memset+0x68>
810033ac:	88 07                	mov    %al,(%edi)
810033ae:	47                   	inc    %edi
810033af:	49                   	dec    %ecx
810033b0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033b6:	74 40                	je     810033f8 <memset+0x68>
810033b8:	88 07                	mov    %al,(%edi)
810033ba:	47                   	inc    %edi
810033bb:	49                   	dec    %ecx
810033bc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033c2:	74 34                	je     810033f8 <memset+0x68>
810033c4:	88 07                	mov    %al,(%edi)
810033c6:	47                   	inc    %edi
810033c7:	49                   	dec    %ecx
810033c8:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033ce:	74 28                	je     810033f8 <memset+0x68>
810033d0:	88 07                	mov    %al,(%edi)
810033d2:	47                   	inc    %edi
810033d3:	49                   	dec    %ecx
810033d4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033da:	74 1c                	je     810033f8 <memset+0x68>
810033dc:	88 07                	mov    %al,(%edi)
810033de:	47                   	inc    %edi
810033df:	49                   	dec    %ecx
810033e0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033e6:	74 10                	je     810033f8 <memset+0x68>
810033e8:	88 07                	mov    %al,(%edi)
810033ea:	47                   	inc    %edi
810033eb:	49                   	dec    %ecx
810033ec:	f7 c7 07 00 00 00    	test   $0x7,%edi
810033f2:	74 04                	je     810033f8 <memset+0x68>
810033f4:	88 07                	mov    %al,(%edi)
810033f6:	47                   	inc    %edi
810033f7:	49                   	dec    %ecx
810033f8:	88 c4                	mov    %al,%ah
810033fa:	89 c2                	mov    %eax,%edx
810033fc:	c1 e2 10             	shl    $0x10,%edx
810033ff:	09 d0                	or     %edx,%eax
81003401:	89 ca                	mov    %ecx,%edx
81003403:	c1 e9 02             	shr    $0x2,%ecx
81003406:	83 e2 03             	and    $0x3,%edx
81003409:	f3 ab                	rep stos %eax,%es:(%edi)
8100340b:	89 d1                	mov    %edx,%ecx
8100340d:	f3 aa                	rep stos %al,%es:(%edi)
8100340f:	8b 45 08             	mov    0x8(%ebp),%eax
81003412:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003415:	5f                   	pop    %edi
81003416:	c9                   	leave  
81003417:	c3                   	ret    

81003418 <__malloc_lock>:
81003418:	55                   	push   %ebp
81003419:	89 e5                	mov    %esp,%ebp
8100341b:	90                   	nop
8100341c:	5d                   	pop    %ebp
8100341d:	c3                   	ret    

8100341e <__malloc_unlock>:
8100341e:	55                   	push   %ebp
8100341f:	89 e5                	mov    %esp,%ebp
81003421:	90                   	nop
81003422:	5d                   	pop    %ebp
81003423:	c3                   	ret    

81003424 <__sprint_r>:
81003424:	55                   	push   %ebp
81003425:	89 e5                	mov    %esp,%ebp
81003427:	56                   	push   %esi
81003428:	53                   	push   %ebx
81003429:	83 ec 10             	sub    $0x10,%esp
8100342c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100342f:	be 00 00 00 00       	mov    $0x0,%esi
81003434:	8b 43 08             	mov    0x8(%ebx),%eax
81003437:	85 c0                	test   %eax,%eax
81003439:	75 11                	jne    8100344c <__sprint_r+0x28>
8100343b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003442:	b8 00 00 00 00       	mov    $0x0,%eax
81003447:	e9 ad 00 00 00       	jmp    810034f9 <__sprint_r+0xd5>
8100344c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100344f:	8b 40 64             	mov    0x64(%eax),%eax
81003452:	25 00 20 00 00       	and    $0x2000,%eax
81003457:	85 c0                	test   %eax,%eax
81003459:	74 7a                	je     810034d5 <__sprint_r+0xb1>
8100345b:	8b 03                	mov    (%ebx),%eax
8100345d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003460:	eb 6a                	jmp    810034cc <__sprint_r+0xa8>
81003462:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003465:	8b 00                	mov    (%eax),%eax
81003467:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100346a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100346d:	8b 40 04             	mov    0x4(%eax),%eax
81003470:	c1 e8 02             	shr    $0x2,%eax
81003473:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003476:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100347d:	eb 33                	jmp    810034b2 <__sprint_r+0x8e>
8100347f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003482:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003489:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100348c:	01 d0                	add    %edx,%eax
8100348e:	8b 00                	mov    (%eax),%eax
81003490:	83 ec 04             	sub    $0x4,%esp
81003493:	ff 75 0c             	push   0xc(%ebp)
81003496:	50                   	push   %eax
81003497:	ff 75 08             	push   0x8(%ebp)
8100349a:	e8 06 1d 00 00       	call   810051a5 <_fputwc_r>
8100349f:	83 c4 10             	add    $0x10,%esp
810034a2:	83 f8 ff             	cmp    $0xffffffff,%eax
810034a5:	75 07                	jne    810034ae <__sprint_r+0x8a>
810034a7:	be ff ff ff ff       	mov    $0xffffffff,%esi
810034ac:	eb 3b                	jmp    810034e9 <__sprint_r+0xc5>
810034ae:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810034b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034b5:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810034b8:	7c c5                	jl     8100347f <__sprint_r+0x5b>
810034ba:	8b 43 08             	mov    0x8(%ebx),%eax
810034bd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810034c0:	c1 e2 02             	shl    $0x2,%edx
810034c3:	29 d0                	sub    %edx,%eax
810034c5:	89 43 08             	mov    %eax,0x8(%ebx)
810034c8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810034cc:	8b 43 08             	mov    0x8(%ebx),%eax
810034cf:	85 c0                	test   %eax,%eax
810034d1:	75 8f                	jne    81003462 <__sprint_r+0x3e>
810034d3:	eb 14                	jmp    810034e9 <__sprint_r+0xc5>
810034d5:	83 ec 04             	sub    $0x4,%esp
810034d8:	53                   	push   %ebx
810034d9:	ff 75 0c             	push   0xc(%ebp)
810034dc:	ff 75 08             	push   0x8(%ebp)
810034df:	e8 60 1d 00 00       	call   81005244 <__sfvwrite_r>
810034e4:	83 c4 10             	add    $0x10,%esp
810034e7:	89 c6                	mov    %eax,%esi
810034e9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810034f0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810034f7:	89 f0                	mov    %esi,%eax
810034f9:	8d 65 f8             	lea    -0x8(%ebp),%esp
810034fc:	5b                   	pop    %ebx
810034fd:	5e                   	pop    %esi
810034fe:	5d                   	pop    %ebp
810034ff:	c3                   	ret    

81003500 <__sfputc_r>:
81003500:	55                   	push   %ebp
81003501:	89 e5                	mov    %esp,%ebp
81003503:	83 ec 08             	sub    $0x8,%esp
81003506:	8b 45 10             	mov    0x10(%ebp),%eax
81003509:	8b 40 08             	mov    0x8(%eax),%eax
8100350c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100350f:	8b 45 10             	mov    0x10(%ebp),%eax
81003512:	89 50 08             	mov    %edx,0x8(%eax)
81003515:	8b 45 10             	mov    0x10(%ebp),%eax
81003518:	8b 40 08             	mov    0x8(%eax),%eax
8100351b:	85 c0                	test   %eax,%eax
8100351d:	79 17                	jns    81003536 <__sfputc_r+0x36>
8100351f:	8b 45 10             	mov    0x10(%ebp),%eax
81003522:	8b 50 08             	mov    0x8(%eax),%edx
81003525:	8b 45 10             	mov    0x10(%ebp),%eax
81003528:	8b 40 18             	mov    0x18(%eax),%eax
8100352b:	39 c2                	cmp    %eax,%edx
8100352d:	7c 21                	jl     81003550 <__sfputc_r+0x50>
8100352f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003532:	3c 0a                	cmp    $0xa,%al
81003534:	74 1a                	je     81003550 <__sfputc_r+0x50>
81003536:	8b 45 10             	mov    0x10(%ebp),%eax
81003539:	8b 00                	mov    (%eax),%eax
8100353b:	8d 48 01             	lea    0x1(%eax),%ecx
8100353e:	8b 55 10             	mov    0x10(%ebp),%edx
81003541:	89 0a                	mov    %ecx,(%edx)
81003543:	8b 55 0c             	mov    0xc(%ebp),%edx
81003546:	88 10                	mov    %dl,(%eax)
81003548:	0f b6 00             	movzbl (%eax),%eax
8100354b:	0f b6 c0             	movzbl %al,%eax
8100354e:	eb 14                	jmp    81003564 <__sfputc_r+0x64>
81003550:	83 ec 04             	sub    $0x4,%esp
81003553:	ff 75 10             	push   0x10(%ebp)
81003556:	ff 75 0c             	push   0xc(%ebp)
81003559:	ff 75 08             	push   0x8(%ebp)
8100355c:	e8 7e 14 00 00       	call   810049df <__swbuf_r>
81003561:	83 c4 10             	add    $0x10,%esp
81003564:	c9                   	leave  
81003565:	c3                   	ret    

81003566 <__sfputs_r>:
81003566:	55                   	push   %ebp
81003567:	89 e5                	mov    %esp,%ebp
81003569:	53                   	push   %ebx
8100356a:	83 ec 14             	sub    $0x14,%esp
8100356d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003570:	8b 40 64             	mov    0x64(%eax),%eax
81003573:	25 00 20 00 00       	and    $0x2000,%eax
81003578:	85 c0                	test   %eax,%eax
8100357a:	74 4c                	je     810035c8 <__sfputs_r+0x62>
8100357c:	8b 45 10             	mov    0x10(%ebp),%eax
8100357f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003582:	bb 00 00 00 00       	mov    $0x0,%ebx
81003587:	eb 31                	jmp    810035ba <__sfputs_r+0x54>
81003589:	89 d8                	mov    %ebx,%eax
8100358b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003592:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003595:	01 d0                	add    %edx,%eax
81003597:	8b 00                	mov    (%eax),%eax
81003599:	83 ec 04             	sub    $0x4,%esp
8100359c:	ff 75 0c             	push   0xc(%ebp)
8100359f:	50                   	push   %eax
810035a0:	ff 75 08             	push   0x8(%ebp)
810035a3:	e8 fd 1b 00 00       	call   810051a5 <_fputwc_r>
810035a8:	83 c4 10             	add    $0x10,%esp
810035ab:	83 f8 ff             	cmp    $0xffffffff,%eax
810035ae:	75 07                	jne    810035b7 <__sfputs_r+0x51>
810035b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810035b5:	eb 52                	jmp    81003609 <__sfputs_r+0xa3>
810035b7:	83 c3 01             	add    $0x1,%ebx
810035ba:	8b 45 14             	mov    0x14(%ebp),%eax
810035bd:	c1 e8 02             	shr    $0x2,%eax
810035c0:	89 da                	mov    %ebx,%edx
810035c2:	39 d0                	cmp    %edx,%eax
810035c4:	77 c3                	ja     81003589 <__sfputs_r+0x23>
810035c6:	eb 3c                	jmp    81003604 <__sfputs_r+0x9e>
810035c8:	bb 00 00 00 00       	mov    $0x0,%ebx
810035cd:	eb 2e                	jmp    810035fd <__sfputs_r+0x97>
810035cf:	89 da                	mov    %ebx,%edx
810035d1:	8b 45 10             	mov    0x10(%ebp),%eax
810035d4:	01 d0                	add    %edx,%eax
810035d6:	0f b6 00             	movzbl (%eax),%eax
810035d9:	0f be c0             	movsbl %al,%eax
810035dc:	83 ec 04             	sub    $0x4,%esp
810035df:	ff 75 0c             	push   0xc(%ebp)
810035e2:	50                   	push   %eax
810035e3:	ff 75 08             	push   0x8(%ebp)
810035e6:	e8 15 ff ff ff       	call   81003500 <__sfputc_r>
810035eb:	83 c4 10             	add    $0x10,%esp
810035ee:	83 f8 ff             	cmp    $0xffffffff,%eax
810035f1:	75 07                	jne    810035fa <__sfputs_r+0x94>
810035f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810035f8:	eb 0f                	jmp    81003609 <__sfputs_r+0xa3>
810035fa:	83 c3 01             	add    $0x1,%ebx
810035fd:	89 d8                	mov    %ebx,%eax
810035ff:	39 45 14             	cmp    %eax,0x14(%ebp)
81003602:	77 cb                	ja     810035cf <__sfputs_r+0x69>
81003604:	b8 00 00 00 00       	mov    $0x0,%eax
81003609:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100360c:	c9                   	leave  
8100360d:	c3                   	ret    

8100360e <vfiprintf>:
8100360e:	55                   	push   %ebp
8100360f:	89 e5                	mov    %esp,%ebp
81003611:	83 ec 18             	sub    $0x18,%esp
81003614:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81003619:	ff 75 10             	push   0x10(%ebp)
8100361c:	ff 75 0c             	push   0xc(%ebp)
8100361f:	ff 75 08             	push   0x8(%ebp)
81003622:	50                   	push   %eax
81003623:	e8 0b 00 00 00       	call   81003633 <_vfiprintf_r>
81003628:	83 c4 10             	add    $0x10,%esp
8100362b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100362e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003631:	c9                   	leave  
81003632:	c3                   	ret    

81003633 <_vfiprintf_r>:
81003633:	55                   	push   %ebp
81003634:	89 e5                	mov    %esp,%ebp
81003636:	57                   	push   %edi
81003637:	56                   	push   %esi
81003638:	53                   	push   %ebx
81003639:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100363f:	c7 45 e4 66 35 00 81 	movl   $0x81003566,-0x1c(%ebp)
81003646:	8b 45 08             	mov    0x8(%ebp),%eax
81003649:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100364c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003650:	74 18                	je     8100366a <_vfiprintf_r+0x37>
81003652:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003655:	8b 40 38             	mov    0x38(%eax),%eax
81003658:	85 c0                	test   %eax,%eax
8100365a:	75 0e                	jne    8100366a <_vfiprintf_r+0x37>
8100365c:	83 ec 0c             	sub    $0xc,%esp
8100365f:	ff 75 e0             	push   -0x20(%ebp)
81003662:	e8 ba da ff ff       	call   81001121 <__sinit>
81003667:	83 c4 10             	add    $0x10,%esp
8100366a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100366d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003671:	98                   	cwtl   
81003672:	83 e0 08             	and    $0x8,%eax
81003675:	85 c0                	test   %eax,%eax
81003677:	74 0a                	je     81003683 <_vfiprintf_r+0x50>
81003679:	8b 45 0c             	mov    0xc(%ebp),%eax
8100367c:	8b 40 10             	mov    0x10(%eax),%eax
8100367f:	85 c0                	test   %eax,%eax
81003681:	75 1f                	jne    810036a2 <_vfiprintf_r+0x6f>
81003683:	83 ec 08             	sub    $0x8,%esp
81003686:	ff 75 0c             	push   0xc(%ebp)
81003689:	ff 75 08             	push   0x8(%ebp)
8100368c:	e8 c7 14 00 00       	call   81004b58 <__swsetup_r>
81003691:	83 c4 10             	add    $0x10,%esp
81003694:	85 c0                	test   %eax,%eax
81003696:	74 0a                	je     810036a2 <_vfiprintf_r+0x6f>
81003698:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100369d:	e9 df 02 00 00       	jmp    81003981 <_vfiprintf_r+0x34e>
810036a2:	8b 5d 10             	mov    0x10(%ebp),%ebx
810036a5:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810036ac:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810036b0:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810036b4:	8b 45 14             	mov    0x14(%ebp),%eax
810036b7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810036bd:	89 de                	mov    %ebx,%esi
810036bf:	eb 03                	jmp    810036c4 <_vfiprintf_r+0x91>
810036c1:	83 c3 01             	add    $0x1,%ebx
810036c4:	0f b6 03             	movzbl (%ebx),%eax
810036c7:	84 c0                	test   %al,%al
810036c9:	74 07                	je     810036d2 <_vfiprintf_r+0x9f>
810036cb:	0f b6 03             	movzbl (%ebx),%eax
810036ce:	3c 25                	cmp    $0x25,%al
810036d0:	75 ef                	jne    810036c1 <_vfiprintf_r+0x8e>
810036d2:	89 d8                	mov    %ebx,%eax
810036d4:	29 f0                	sub    %esi,%eax
810036d6:	85 c0                	test   %eax,%eax
810036d8:	74 2b                	je     81003705 <_vfiprintf_r+0xd2>
810036da:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810036e0:	50                   	push   %eax
810036e1:	56                   	push   %esi
810036e2:	ff 75 0c             	push   0xc(%ebp)
810036e5:	ff 75 08             	push   0x8(%ebp)
810036e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810036eb:	ff d0                	call   *%eax
810036ed:	83 c4 10             	add    $0x10,%esp
810036f0:	83 f8 ff             	cmp    $0xffffffff,%eax
810036f3:	0f 84 68 02 00 00    	je     81003961 <_vfiprintf_r+0x32e>
810036f9:	8b 45 94             	mov    -0x6c(%ebp),%eax
810036fc:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003702:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003705:	0f b6 03             	movzbl (%ebx),%eax
81003708:	84 c0                	test   %al,%al
8100370a:	0f 84 54 02 00 00    	je     81003964 <_vfiprintf_r+0x331>
81003710:	83 c3 01             	add    $0x1,%ebx
81003713:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100371a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81003721:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003728:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100372f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81003733:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100373a:	c7 45 dc 24 6d 00 81 	movl   $0x81006d24,-0x24(%ebp)
81003741:	eb 1b                	jmp    8100375e <_vfiprintf_r+0x12b>
81003743:	8b 55 80             	mov    -0x80(%ebp),%edx
81003746:	89 f0                	mov    %esi,%eax
81003748:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100374b:	be 01 00 00 00       	mov    $0x1,%esi
81003750:	89 c1                	mov    %eax,%ecx
81003752:	d3 e6                	shl    %cl,%esi
81003754:	89 f0                	mov    %esi,%eax
81003756:	09 d0                	or     %edx,%eax
81003758:	89 45 80             	mov    %eax,-0x80(%ebp)
8100375b:	83 c3 01             	add    $0x1,%ebx
8100375e:	0f b6 03             	movzbl (%ebx),%eax
81003761:	0f be c0             	movsbl %al,%eax
81003764:	83 ec 04             	sub    $0x4,%esp
81003767:	6a 05                	push   $0x5
81003769:	50                   	push   %eax
8100376a:	ff 75 dc             	push   -0x24(%ebp)
8100376d:	e8 ee fa ff ff       	call   81003260 <memchr>
81003772:	83 c4 10             	add    $0x10,%esp
81003775:	89 c6                	mov    %eax,%esi
81003777:	85 f6                	test   %esi,%esi
81003779:	75 c8                	jne    81003743 <_vfiprintf_r+0x110>
8100377b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100377e:	83 e0 10             	and    $0x10,%eax
81003781:	85 c0                	test   %eax,%eax
81003783:	74 04                	je     81003789 <_vfiprintf_r+0x156>
81003785:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003789:	8b 45 80             	mov    -0x80(%ebp),%eax
8100378c:	83 e0 08             	and    $0x8,%eax
8100378f:	85 c0                	test   %eax,%eax
81003791:	74 04                	je     81003797 <_vfiprintf_r+0x164>
81003793:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003797:	0f b6 03             	movzbl (%ebx),%eax
8100379a:	3c 2a                	cmp    $0x2a,%al
8100379c:	75 50                	jne    810037ee <_vfiprintf_r+0x1bb>
8100379e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810037a4:	8d 50 04             	lea    0x4(%eax),%edx
810037a7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810037ad:	8b 00                	mov    (%eax),%eax
810037af:	89 45 8c             	mov    %eax,-0x74(%ebp)
810037b2:	8b 45 8c             	mov    -0x74(%ebp),%eax
810037b5:	85 c0                	test   %eax,%eax
810037b7:	79 11                	jns    810037ca <_vfiprintf_r+0x197>
810037b9:	8b 45 8c             	mov    -0x74(%ebp),%eax
810037bc:	f7 d8                	neg    %eax
810037be:	89 45 8c             	mov    %eax,-0x74(%ebp)
810037c1:	8b 45 80             	mov    -0x80(%ebp),%eax
810037c4:	83 c8 02             	or     $0x2,%eax
810037c7:	89 45 80             	mov    %eax,-0x80(%ebp)
810037ca:	83 c3 01             	add    $0x1,%ebx
810037cd:	eb 2d                	jmp    810037fc <_vfiprintf_r+0x1c9>
810037cf:	8b 55 8c             	mov    -0x74(%ebp),%edx
810037d2:	89 d0                	mov    %edx,%eax
810037d4:	c1 e0 02             	shl    $0x2,%eax
810037d7:	01 d0                	add    %edx,%eax
810037d9:	01 c0                	add    %eax,%eax
810037db:	89 c2                	mov    %eax,%edx
810037dd:	0f b6 03             	movzbl (%ebx),%eax
810037e0:	0f be c0             	movsbl %al,%eax
810037e3:	83 e8 30             	sub    $0x30,%eax
810037e6:	01 d0                	add    %edx,%eax
810037e8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810037eb:	83 c3 01             	add    $0x1,%ebx
810037ee:	0f b6 03             	movzbl (%ebx),%eax
810037f1:	0f be c0             	movsbl %al,%eax
810037f4:	83 e8 30             	sub    $0x30,%eax
810037f7:	83 f8 09             	cmp    $0x9,%eax
810037fa:	76 d3                	jbe    810037cf <_vfiprintf_r+0x19c>
810037fc:	0f b6 03             	movzbl (%ebx),%eax
810037ff:	3c 2e                	cmp    $0x2e,%al
81003801:	75 67                	jne    8100386a <_vfiprintf_r+0x237>
81003803:	83 c3 01             	add    $0x1,%ebx
81003806:	0f b6 03             	movzbl (%ebx),%eax
81003809:	3c 2a                	cmp    $0x2a,%al
8100380b:	75 27                	jne    81003834 <_vfiprintf_r+0x201>
8100380d:	83 c3 01             	add    $0x1,%ebx
81003810:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003816:	8d 50 04             	lea    0x4(%eax),%edx
81003819:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100381f:	8b 00                	mov    (%eax),%eax
81003821:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003824:	8b 45 84             	mov    -0x7c(%ebp),%eax
81003827:	85 c0                	test   %eax,%eax
81003829:	79 3f                	jns    8100386a <_vfiprintf_r+0x237>
8100382b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003832:	eb 36                	jmp    8100386a <_vfiprintf_r+0x237>
81003834:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100383b:	eb 1f                	jmp    8100385c <_vfiprintf_r+0x229>
8100383d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81003840:	89 d0                	mov    %edx,%eax
81003842:	c1 e0 02             	shl    $0x2,%eax
81003845:	01 d0                	add    %edx,%eax
81003847:	01 c0                	add    %eax,%eax
81003849:	89 c2                	mov    %eax,%edx
8100384b:	0f b6 03             	movzbl (%ebx),%eax
8100384e:	0f be c0             	movsbl %al,%eax
81003851:	83 e8 30             	sub    $0x30,%eax
81003854:	01 d0                	add    %edx,%eax
81003856:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003859:	83 c3 01             	add    $0x1,%ebx
8100385c:	0f b6 03             	movzbl (%ebx),%eax
8100385f:	0f be c0             	movsbl %al,%eax
81003862:	83 e8 30             	sub    $0x30,%eax
81003865:	83 f8 09             	cmp    $0x9,%eax
81003868:	76 d3                	jbe    8100383d <_vfiprintf_r+0x20a>
8100386a:	c7 45 dc 2a 6d 00 81 	movl   $0x81006d2a,-0x24(%ebp)
81003871:	0f b6 03             	movzbl (%ebx),%eax
81003874:	0f be c0             	movsbl %al,%eax
81003877:	83 ec 04             	sub    $0x4,%esp
8100387a:	6a 03                	push   $0x3
8100387c:	50                   	push   %eax
8100387d:	ff 75 dc             	push   -0x24(%ebp)
81003880:	e8 db f9 ff ff       	call   81003260 <memchr>
81003885:	83 c4 10             	add    $0x10,%esp
81003888:	89 c6                	mov    %eax,%esi
8100388a:	85 f6                	test   %esi,%esi
8100388c:	74 1b                	je     810038a9 <_vfiprintf_r+0x276>
8100388e:	8b 55 80             	mov    -0x80(%ebp),%edx
81003891:	89 f0                	mov    %esi,%eax
81003893:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003896:	be 40 00 00 00       	mov    $0x40,%esi
8100389b:	89 c1                	mov    %eax,%ecx
8100389d:	d3 e6                	shl    %cl,%esi
8100389f:	89 f0                	mov    %esi,%eax
810038a1:	09 d0                	or     %edx,%eax
810038a3:	89 45 80             	mov    %eax,-0x80(%ebp)
810038a6:	83 c3 01             	add    $0x1,%ebx
810038a9:	89 d8                	mov    %ebx,%eax
810038ab:	8d 58 01             	lea    0x1(%eax),%ebx
810038ae:	0f b6 00             	movzbl (%eax),%eax
810038b1:	88 45 98             	mov    %al,-0x68(%ebp)
810038b4:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810038b8:	0f be c0             	movsbl %al,%eax
810038bb:	83 ec 04             	sub    $0x4,%esp
810038be:	6a 06                	push   $0x6
810038c0:	50                   	push   %eax
810038c1:	68 2e 6d 00 81       	push   $0x81006d2e
810038c6:	e8 95 f9 ff ff       	call   81003260 <memchr>
810038cb:	83 c4 10             	add    $0x10,%esp
810038ce:	89 c6                	mov    %eax,%esi
810038d0:	85 f6                	test   %esi,%esi
810038d2:	74 5a                	je     8100392e <_vfiprintf_r+0x2fb>
810038d4:	b8 00 00 00 00       	mov    $0x0,%eax
810038d9:	85 c0                	test   %eax,%eax
810038db:	75 2e                	jne    8100390b <_vfiprintf_r+0x2d8>
810038dd:	8b 45 80             	mov    -0x80(%ebp),%eax
810038e0:	25 00 01 00 00       	and    $0x100,%eax
810038e5:	85 c0                	test   %eax,%eax
810038e7:	74 11                	je     810038fa <_vfiprintf_r+0x2c7>
810038e9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810038ef:	83 c0 0c             	add    $0xc,%eax
810038f2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810038f8:	eb 55                	jmp    8100394f <_vfiprintf_r+0x31c>
810038fa:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003900:	83 c0 08             	add    $0x8,%eax
81003903:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003909:	eb 44                	jmp    8100394f <_vfiprintf_r+0x31c>
8100390b:	83 ec 0c             	sub    $0xc,%esp
8100390e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003914:	50                   	push   %eax
81003915:	ff 75 e4             	push   -0x1c(%ebp)
81003918:	ff 75 0c             	push   0xc(%ebp)
8100391b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100391e:	50                   	push   %eax
8100391f:	ff 75 08             	push   0x8(%ebp)
81003922:	e8 d9 c6 ff 7e       	call   0 <do_help-0x81000000>
81003927:	83 c4 20             	add    $0x20,%esp
8100392a:	89 c7                	mov    %eax,%edi
8100392c:	eb 21                	jmp    8100394f <_vfiprintf_r+0x31c>
8100392e:	83 ec 0c             	sub    $0xc,%esp
81003931:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003937:	50                   	push   %eax
81003938:	ff 75 e4             	push   -0x1c(%ebp)
8100393b:	ff 75 0c             	push   0xc(%ebp)
8100393e:	8d 45 80             	lea    -0x80(%ebp),%eax
81003941:	50                   	push   %eax
81003942:	ff 75 08             	push   0x8(%ebp)
81003945:	e8 da 01 00 00       	call   81003b24 <_printf_i>
8100394a:	83 c4 20             	add    $0x20,%esp
8100394d:	89 c7                	mov    %eax,%edi
8100394f:	83 ff ff             	cmp    $0xffffffff,%edi
81003952:	74 13                	je     81003967 <_vfiprintf_r+0x334>
81003954:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003957:	01 f8                	add    %edi,%eax
81003959:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100395c:	e9 5c fd ff ff       	jmp    810036bd <_vfiprintf_r+0x8a>
81003961:	90                   	nop
81003962:	eb 04                	jmp    81003968 <_vfiprintf_r+0x335>
81003964:	90                   	nop
81003965:	eb 01                	jmp    81003968 <_vfiprintf_r+0x335>
81003967:	90                   	nop
81003968:	8b 45 0c             	mov    0xc(%ebp),%eax
8100396b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100396f:	98                   	cwtl   
81003970:	83 e0 40             	and    $0x40,%eax
81003973:	85 c0                	test   %eax,%eax
81003975:	75 05                	jne    8100397c <_vfiprintf_r+0x349>
81003977:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100397a:	eb 05                	jmp    81003981 <_vfiprintf_r+0x34e>
8100397c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003981:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003984:	5b                   	pop    %ebx
81003985:	5e                   	pop    %esi
81003986:	5f                   	pop    %edi
81003987:	5d                   	pop    %ebp
81003988:	c3                   	ret    

81003989 <_printf_common>:
81003989:	55                   	push   %ebp
8100398a:	89 e5                	mov    %esp,%ebp
8100398c:	83 ec 18             	sub    $0x18,%esp
8100398f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003992:	8b 50 10             	mov    0x10(%eax),%edx
81003995:	8b 45 0c             	mov    0xc(%ebp),%eax
81003998:	8b 40 08             	mov    0x8(%eax),%eax
8100399b:	39 c2                	cmp    %eax,%edx
8100399d:	0f 4c d0             	cmovl  %eax,%edx
810039a0:	8b 45 10             	mov    0x10(%ebp),%eax
810039a3:	89 10                	mov    %edx,(%eax)
810039a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a8:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810039ac:	84 c0                	test   %al,%al
810039ae:	74 0d                	je     810039bd <_printf_common+0x34>
810039b0:	8b 45 10             	mov    0x10(%ebp),%eax
810039b3:	8b 00                	mov    (%eax),%eax
810039b5:	8d 50 01             	lea    0x1(%eax),%edx
810039b8:	8b 45 10             	mov    0x10(%ebp),%eax
810039bb:	89 10                	mov    %edx,(%eax)
810039bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810039c0:	8b 00                	mov    (%eax),%eax
810039c2:	83 e0 20             	and    $0x20,%eax
810039c5:	85 c0                	test   %eax,%eax
810039c7:	74 0d                	je     810039d6 <_printf_common+0x4d>
810039c9:	8b 45 10             	mov    0x10(%ebp),%eax
810039cc:	8b 00                	mov    (%eax),%eax
810039ce:	8d 50 02             	lea    0x2(%eax),%edx
810039d1:	8b 45 10             	mov    0x10(%ebp),%eax
810039d4:	89 10                	mov    %edx,(%eax)
810039d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810039d9:	8b 00                	mov    (%eax),%eax
810039db:	83 e0 06             	and    $0x6,%eax
810039de:	85 c0                	test   %eax,%eax
810039e0:	75 41                	jne    81003a23 <_printf_common+0x9a>
810039e2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810039e9:	eb 24                	jmp    81003a0f <_printf_common+0x86>
810039eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ee:	83 c0 19             	add    $0x19,%eax
810039f1:	6a 01                	push   $0x1
810039f3:	50                   	push   %eax
810039f4:	ff 75 14             	push   0x14(%ebp)
810039f7:	ff 75 08             	push   0x8(%ebp)
810039fa:	8b 45 18             	mov    0x18(%ebp),%eax
810039fd:	ff d0                	call   *%eax
810039ff:	83 c4 10             	add    $0x10,%esp
81003a02:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a05:	0f 84 0b 01 00 00    	je     81003b16 <_printf_common+0x18d>
81003a0b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003a0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a12:	8b 50 0c             	mov    0xc(%eax),%edx
81003a15:	8b 45 10             	mov    0x10(%ebp),%eax
81003a18:	8b 08                	mov    (%eax),%ecx
81003a1a:	89 d0                	mov    %edx,%eax
81003a1c:	29 c8                	sub    %ecx,%eax
81003a1e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003a21:	7c c8                	jl     810039eb <_printf_common+0x62>
81003a23:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003a2a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a2d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003a31:	84 c0                	test   %al,%al
81003a33:	74 04                	je     81003a39 <_printf_common+0xb0>
81003a35:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003a39:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a3c:	8b 00                	mov    (%eax),%eax
81003a3e:	83 e0 20             	and    $0x20,%eax
81003a41:	85 c0                	test   %eax,%eax
81003a43:	74 28                	je     81003a6d <_printf_common+0xe4>
81003a45:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a48:	8d 50 01             	lea    0x1(%eax),%edx
81003a4b:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003a4e:	8b 55 0c             	mov    0xc(%ebp),%edx
81003a51:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003a56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a59:	8d 50 01             	lea    0x1(%eax),%edx
81003a5c:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003a5f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003a62:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003a66:	8b 55 0c             	mov    0xc(%ebp),%edx
81003a69:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81003a6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a70:	8b 55 0c             	mov    0xc(%ebp),%edx
81003a73:	83 c2 43             	add    $0x43,%edx
81003a76:	50                   	push   %eax
81003a77:	52                   	push   %edx
81003a78:	ff 75 14             	push   0x14(%ebp)
81003a7b:	ff 75 08             	push   0x8(%ebp)
81003a7e:	8b 45 18             	mov    0x18(%ebp),%eax
81003a81:	ff d0                	call   *%eax
81003a83:	83 c4 10             	add    $0x10,%esp
81003a86:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a89:	0f 84 8a 00 00 00    	je     81003b19 <_printf_common+0x190>
81003a8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a92:	8b 50 0c             	mov    0xc(%eax),%edx
81003a95:	8b 45 10             	mov    0x10(%ebp),%eax
81003a98:	8b 08                	mov    (%eax),%ecx
81003a9a:	89 d0                	mov    %edx,%eax
81003a9c:	29 c8                	sub    %ecx,%eax
81003a9e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003aa1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa4:	8b 00                	mov    (%eax),%eax
81003aa6:	83 e0 06             	and    $0x6,%eax
81003aa9:	83 f8 04             	cmp    $0x4,%eax
81003aac:	75 06                	jne    81003ab4 <_printf_common+0x12b>
81003aae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003ab2:	79 07                	jns    81003abb <_printf_common+0x132>
81003ab4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003abb:	8b 45 0c             	mov    0xc(%ebp),%eax
81003abe:	8b 50 08             	mov    0x8(%eax),%edx
81003ac1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ac4:	8b 40 10             	mov    0x10(%eax),%eax
81003ac7:	39 c2                	cmp    %eax,%edx
81003ac9:	7e 13                	jle    81003ade <_printf_common+0x155>
81003acb:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ace:	8b 50 08             	mov    0x8(%eax),%edx
81003ad1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ad4:	8b 48 10             	mov    0x10(%eax),%ecx
81003ad7:	89 d0                	mov    %edx,%eax
81003ad9:	29 c8                	sub    %ecx,%eax
81003adb:	01 45 f4             	add    %eax,-0xc(%ebp)
81003ade:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003ae5:	eb 20                	jmp    81003b07 <_printf_common+0x17e>
81003ae7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aea:	83 c0 1a             	add    $0x1a,%eax
81003aed:	6a 01                	push   $0x1
81003aef:	50                   	push   %eax
81003af0:	ff 75 14             	push   0x14(%ebp)
81003af3:	ff 75 08             	push   0x8(%ebp)
81003af6:	8b 45 18             	mov    0x18(%ebp),%eax
81003af9:	ff d0                	call   *%eax
81003afb:	83 c4 10             	add    $0x10,%esp
81003afe:	83 f8 ff             	cmp    $0xffffffff,%eax
81003b01:	74 19                	je     81003b1c <_printf_common+0x193>
81003b03:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003b07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b0a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81003b0d:	7c d8                	jl     81003ae7 <_printf_common+0x15e>
81003b0f:	b8 00 00 00 00       	mov    $0x0,%eax
81003b14:	eb 0c                	jmp    81003b22 <_printf_common+0x199>
81003b16:	90                   	nop
81003b17:	eb 04                	jmp    81003b1d <_printf_common+0x194>
81003b19:	90                   	nop
81003b1a:	eb 01                	jmp    81003b1d <_printf_common+0x194>
81003b1c:	90                   	nop
81003b1d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003b22:	c9                   	leave  
81003b23:	c3                   	ret    

81003b24 <_printf_i>:
81003b24:	55                   	push   %ebp
81003b25:	89 e5                	mov    %esp,%ebp
81003b27:	53                   	push   %ebx
81003b28:	83 ec 24             	sub    $0x24,%esp
81003b2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b2e:	83 c0 1b             	add    $0x1b,%eax
81003b31:	83 c0 28             	add    $0x28,%eax
81003b34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b37:	c7 45 e8 38 6d 00 81 	movl   $0x81006d38,-0x18(%ebp)
81003b3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b41:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003b45:	0f be c0             	movsbl %al,%eax
81003b48:	85 c0                	test   %eax,%eax
81003b4a:	0f 84 00 03 00 00    	je     81003e50 <_printf_i+0x32c>
81003b50:	85 c0                	test   %eax,%eax
81003b52:	0f 88 52 03 00 00    	js     81003eaa <_printf_i+0x386>
81003b58:	83 f8 78             	cmp    $0x78,%eax
81003b5b:	0f 8f 49 03 00 00    	jg     81003eaa <_printf_i+0x386>
81003b61:	83 f8 58             	cmp    $0x58,%eax
81003b64:	0f 8c 40 03 00 00    	jl     81003eaa <_printf_i+0x386>
81003b6a:	83 e8 58             	sub    $0x58,%eax
81003b6d:	83 f8 20             	cmp    $0x20,%eax
81003b70:	0f 87 34 03 00 00    	ja     81003eaa <_printf_i+0x386>
81003b76:	8b 04 85 5c 6d 00 81 	mov    -0x7eff92a4(,%eax,4),%eax
81003b7d:	ff e0                	jmp    *%eax
81003b7f:	8b 45 18             	mov    0x18(%ebp),%eax
81003b82:	8b 00                	mov    (%eax),%eax
81003b84:	8d 48 04             	lea    0x4(%eax),%ecx
81003b87:	8b 55 18             	mov    0x18(%ebp),%edx
81003b8a:	89 0a                	mov    %ecx,(%edx)
81003b8c:	8b 00                	mov    (%eax),%eax
81003b8e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003b92:	89 c2                	mov    %eax,%edx
81003b94:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b97:	88 10                	mov    %dl,(%eax)
81003b99:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b9c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ba3:	e9 1c 03 00 00       	jmp    81003ec4 <_printf_i+0x3a0>
81003ba8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bab:	8b 00                	mov    (%eax),%eax
81003bad:	25 80 00 00 00       	and    $0x80,%eax
81003bb2:	85 c0                	test   %eax,%eax
81003bb4:	74 11                	je     81003bc7 <_printf_i+0xa3>
81003bb6:	8b 45 18             	mov    0x18(%ebp),%eax
81003bb9:	8b 00                	mov    (%eax),%eax
81003bbb:	8d 48 04             	lea    0x4(%eax),%ecx
81003bbe:	8b 55 18             	mov    0x18(%ebp),%edx
81003bc1:	89 0a                	mov    %ecx,(%edx)
81003bc3:	8b 00                	mov    (%eax),%eax
81003bc5:	eb 2d                	jmp    81003bf4 <_printf_i+0xd0>
81003bc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bca:	8b 00                	mov    (%eax),%eax
81003bcc:	83 e0 40             	and    $0x40,%eax
81003bcf:	85 c0                	test   %eax,%eax
81003bd1:	74 12                	je     81003be5 <_printf_i+0xc1>
81003bd3:	8b 45 18             	mov    0x18(%ebp),%eax
81003bd6:	8b 00                	mov    (%eax),%eax
81003bd8:	8d 48 04             	lea    0x4(%eax),%ecx
81003bdb:	8b 55 18             	mov    0x18(%ebp),%edx
81003bde:	89 0a                	mov    %ecx,(%edx)
81003be0:	8b 00                	mov    (%eax),%eax
81003be2:	98                   	cwtl   
81003be3:	eb 0f                	jmp    81003bf4 <_printf_i+0xd0>
81003be5:	8b 45 18             	mov    0x18(%ebp),%eax
81003be8:	8b 00                	mov    (%eax),%eax
81003bea:	8d 48 04             	lea    0x4(%eax),%ecx
81003bed:	8b 55 18             	mov    0x18(%ebp),%edx
81003bf0:	89 0a                	mov    %ecx,(%edx)
81003bf2:	8b 00                	mov    (%eax),%eax
81003bf4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bfa:	85 c0                	test   %eax,%eax
81003bfc:	79 0a                	jns    81003c08 <_printf_i+0xe4>
81003bfe:	f7 5d f4             	negl   -0xc(%ebp)
81003c01:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c04:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003c08:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003c0f:	e9 28 01 00 00       	jmp    81003d3c <_printf_i+0x218>
81003c14:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c17:	8b 00                	mov    (%eax),%eax
81003c19:	25 80 00 00 00       	and    $0x80,%eax
81003c1e:	85 c0                	test   %eax,%eax
81003c20:	74 11                	je     81003c33 <_printf_i+0x10f>
81003c22:	8b 45 18             	mov    0x18(%ebp),%eax
81003c25:	8b 00                	mov    (%eax),%eax
81003c27:	8d 48 04             	lea    0x4(%eax),%ecx
81003c2a:	8b 55 18             	mov    0x18(%ebp),%edx
81003c2d:	89 0a                	mov    %ecx,(%edx)
81003c2f:	8b 00                	mov    (%eax),%eax
81003c31:	eb 2f                	jmp    81003c62 <_printf_i+0x13e>
81003c33:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c36:	8b 00                	mov    (%eax),%eax
81003c38:	83 e0 40             	and    $0x40,%eax
81003c3b:	85 c0                	test   %eax,%eax
81003c3d:	74 14                	je     81003c53 <_printf_i+0x12f>
81003c3f:	8b 45 18             	mov    0x18(%ebp),%eax
81003c42:	8b 00                	mov    (%eax),%eax
81003c44:	8d 48 04             	lea    0x4(%eax),%ecx
81003c47:	8b 55 18             	mov    0x18(%ebp),%edx
81003c4a:	89 0a                	mov    %ecx,(%edx)
81003c4c:	8b 00                	mov    (%eax),%eax
81003c4e:	0f b7 c0             	movzwl %ax,%eax
81003c51:	eb 0f                	jmp    81003c62 <_printf_i+0x13e>
81003c53:	8b 45 18             	mov    0x18(%ebp),%eax
81003c56:	8b 00                	mov    (%eax),%eax
81003c58:	8d 48 04             	lea    0x4(%eax),%ecx
81003c5b:	8b 55 18             	mov    0x18(%ebp),%edx
81003c5e:	89 0a                	mov    %ecx,(%edx)
81003c60:	8b 00                	mov    (%eax),%eax
81003c62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c65:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c68:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003c6c:	3c 6f                	cmp    $0x6f,%al
81003c6e:	75 07                	jne    81003c77 <_printf_i+0x153>
81003c70:	b8 08 00 00 00       	mov    $0x8,%eax
81003c75:	eb 05                	jmp    81003c7c <_printf_i+0x158>
81003c77:	b8 0a 00 00 00       	mov    $0xa,%eax
81003c7c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c7f:	e9 b1 00 00 00       	jmp    81003d35 <_printf_i+0x211>
81003c84:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c87:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003c8b:	eb 1d                	jmp    81003caa <_printf_i+0x186>
81003c8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c90:	8b 00                	mov    (%eax),%eax
81003c92:	83 c8 20             	or     $0x20,%eax
81003c95:	89 c2                	mov    %eax,%edx
81003c97:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c9a:	89 10                	mov    %edx,(%eax)
81003c9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c9f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003ca3:	c7 45 e8 49 6d 00 81 	movl   $0x81006d49,-0x18(%ebp)
81003caa:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cad:	8b 00                	mov    (%eax),%eax
81003caf:	25 80 00 00 00       	and    $0x80,%eax
81003cb4:	85 c0                	test   %eax,%eax
81003cb6:	74 11                	je     81003cc9 <_printf_i+0x1a5>
81003cb8:	8b 45 18             	mov    0x18(%ebp),%eax
81003cbb:	8b 00                	mov    (%eax),%eax
81003cbd:	8d 48 04             	lea    0x4(%eax),%ecx
81003cc0:	8b 55 18             	mov    0x18(%ebp),%edx
81003cc3:	89 0a                	mov    %ecx,(%edx)
81003cc5:	8b 00                	mov    (%eax),%eax
81003cc7:	eb 2f                	jmp    81003cf8 <_printf_i+0x1d4>
81003cc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ccc:	8b 00                	mov    (%eax),%eax
81003cce:	83 e0 40             	and    $0x40,%eax
81003cd1:	85 c0                	test   %eax,%eax
81003cd3:	74 14                	je     81003ce9 <_printf_i+0x1c5>
81003cd5:	8b 45 18             	mov    0x18(%ebp),%eax
81003cd8:	8b 00                	mov    (%eax),%eax
81003cda:	8d 48 04             	lea    0x4(%eax),%ecx
81003cdd:	8b 55 18             	mov    0x18(%ebp),%edx
81003ce0:	89 0a                	mov    %ecx,(%edx)
81003ce2:	8b 00                	mov    (%eax),%eax
81003ce4:	0f b7 c0             	movzwl %ax,%eax
81003ce7:	eb 0f                	jmp    81003cf8 <_printf_i+0x1d4>
81003ce9:	8b 45 18             	mov    0x18(%ebp),%eax
81003cec:	8b 00                	mov    (%eax),%eax
81003cee:	8d 48 04             	lea    0x4(%eax),%ecx
81003cf1:	8b 55 18             	mov    0x18(%ebp),%edx
81003cf4:	89 0a                	mov    %ecx,(%edx)
81003cf6:	8b 00                	mov    (%eax),%eax
81003cf8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cfb:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003d02:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d05:	8b 00                	mov    (%eax),%eax
81003d07:	83 e0 01             	and    $0x1,%eax
81003d0a:	85 c0                	test   %eax,%eax
81003d0c:	74 0f                	je     81003d1d <_printf_i+0x1f9>
81003d0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d11:	8b 00                	mov    (%eax),%eax
81003d13:	83 c8 20             	or     $0x20,%eax
81003d16:	89 c2                	mov    %eax,%edx
81003d18:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d1b:	89 10                	mov    %edx,(%eax)
81003d1d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003d21:	75 11                	jne    81003d34 <_printf_i+0x210>
81003d23:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d26:	8b 00                	mov    (%eax),%eax
81003d28:	83 e0 df             	and    $0xffffffdf,%eax
81003d2b:	89 c2                	mov    %eax,%edx
81003d2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d30:	89 10                	mov    %edx,(%eax)
81003d32:	eb 01                	jmp    81003d35 <_printf_i+0x211>
81003d34:	90                   	nop
81003d35:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d38:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003d3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d3f:	8b 50 04             	mov    0x4(%eax),%edx
81003d42:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d45:	89 50 08             	mov    %edx,0x8(%eax)
81003d48:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d4b:	8b 40 08             	mov    0x8(%eax),%eax
81003d4e:	85 c0                	test   %eax,%eax
81003d50:	78 0f                	js     81003d61 <_printf_i+0x23d>
81003d52:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d55:	8b 00                	mov    (%eax),%eax
81003d57:	83 e0 fb             	and    $0xfffffffb,%eax
81003d5a:	89 c2                	mov    %eax,%edx
81003d5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d5f:	89 10                	mov    %edx,(%eax)
81003d61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003d65:	75 0a                	jne    81003d71 <_printf_i+0x24d>
81003d67:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d6a:	8b 40 04             	mov    0x4(%eax),%eax
81003d6d:	85 c0                	test   %eax,%eax
81003d6f:	74 34                	je     81003da5 <_printf_i+0x281>
81003d71:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003d74:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d77:	ba 00 00 00 00       	mov    $0x0,%edx
81003d7c:	f7 f1                	div    %ecx
81003d7e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d81:	01 d0                	add    %edx,%eax
81003d83:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003d87:	0f b6 10             	movzbl (%eax),%edx
81003d8a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d8d:	88 10                	mov    %dl,(%eax)
81003d8f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003d92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d95:	ba 00 00 00 00       	mov    $0x0,%edx
81003d9a:	f7 f3                	div    %ebx
81003d9c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d9f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003da3:	75 cc                	jne    81003d71 <_printf_i+0x24d>
81003da5:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003da9:	75 26                	jne    81003dd1 <_printf_i+0x2ad>
81003dab:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dae:	8b 00                	mov    (%eax),%eax
81003db0:	83 e0 01             	and    $0x1,%eax
81003db3:	85 c0                	test   %eax,%eax
81003db5:	74 1a                	je     81003dd1 <_printf_i+0x2ad>
81003db7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dba:	8b 50 04             	mov    0x4(%eax),%edx
81003dbd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc0:	8b 40 10             	mov    0x10(%eax),%eax
81003dc3:	39 c2                	cmp    %eax,%edx
81003dc5:	7f 0a                	jg     81003dd1 <_printf_i+0x2ad>
81003dc7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003dcb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003dce:	c6 00 30             	movb   $0x30,(%eax)
81003dd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dd4:	83 c0 1b             	add    $0x1b,%eax
81003dd7:	83 c0 28             	add    $0x28,%eax
81003dda:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003ddd:	89 c2                	mov    %eax,%edx
81003ddf:	8b 45 0c             	mov    0xc(%ebp),%eax
81003de2:	89 50 10             	mov    %edx,0x10(%eax)
81003de5:	e9 e2 00 00 00       	jmp    81003ecc <_printf_i+0x3a8>
81003dea:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ded:	8b 00                	mov    (%eax),%eax
81003def:	25 80 00 00 00       	and    $0x80,%eax
81003df4:	85 c0                	test   %eax,%eax
81003df6:	74 19                	je     81003e11 <_printf_i+0x2ed>
81003df8:	8b 45 18             	mov    0x18(%ebp),%eax
81003dfb:	8b 00                	mov    (%eax),%eax
81003dfd:	8d 48 04             	lea    0x4(%eax),%ecx
81003e00:	8b 55 18             	mov    0x18(%ebp),%edx
81003e03:	89 0a                	mov    %ecx,(%edx)
81003e05:	8b 00                	mov    (%eax),%eax
81003e07:	8b 55 0c             	mov    0xc(%ebp),%edx
81003e0a:	8b 52 14             	mov    0x14(%edx),%edx
81003e0d:	89 10                	mov    %edx,(%eax)
81003e0f:	eb 3f                	jmp    81003e50 <_printf_i+0x32c>
81003e11:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e14:	8b 00                	mov    (%eax),%eax
81003e16:	83 e0 40             	and    $0x40,%eax
81003e19:	85 c0                	test   %eax,%eax
81003e1b:	74 1c                	je     81003e39 <_printf_i+0x315>
81003e1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e20:	8b 58 14             	mov    0x14(%eax),%ebx
81003e23:	8b 45 18             	mov    0x18(%ebp),%eax
81003e26:	8b 00                	mov    (%eax),%eax
81003e28:	8d 48 04             	lea    0x4(%eax),%ecx
81003e2b:	8b 55 18             	mov    0x18(%ebp),%edx
81003e2e:	89 0a                	mov    %ecx,(%edx)
81003e30:	8b 00                	mov    (%eax),%eax
81003e32:	89 da                	mov    %ebx,%edx
81003e34:	66 89 10             	mov    %dx,(%eax)
81003e37:	eb 17                	jmp    81003e50 <_printf_i+0x32c>
81003e39:	8b 45 18             	mov    0x18(%ebp),%eax
81003e3c:	8b 00                	mov    (%eax),%eax
81003e3e:	8d 48 04             	lea    0x4(%eax),%ecx
81003e41:	8b 55 18             	mov    0x18(%ebp),%edx
81003e44:	89 0a                	mov    %ecx,(%edx)
81003e46:	8b 00                	mov    (%eax),%eax
81003e48:	8b 55 0c             	mov    0xc(%ebp),%edx
81003e4b:	8b 52 14             	mov    0x14(%edx),%edx
81003e4e:	89 10                	mov    %edx,(%eax)
81003e50:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e53:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003e5a:	eb 70                	jmp    81003ecc <_printf_i+0x3a8>
81003e5c:	8b 45 18             	mov    0x18(%ebp),%eax
81003e5f:	8b 00                	mov    (%eax),%eax
81003e61:	8d 48 04             	lea    0x4(%eax),%ecx
81003e64:	8b 55 18             	mov    0x18(%ebp),%edx
81003e67:	89 0a                	mov    %ecx,(%edx)
81003e69:	8b 00                	mov    (%eax),%eax
81003e6b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e71:	8b 40 04             	mov    0x4(%eax),%eax
81003e74:	83 ec 04             	sub    $0x4,%esp
81003e77:	50                   	push   %eax
81003e78:	6a 00                	push   $0x0
81003e7a:	ff 75 ec             	push   -0x14(%ebp)
81003e7d:	e8 de f3 ff ff       	call   81003260 <memchr>
81003e82:	83 c4 10             	add    $0x10,%esp
81003e85:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003e88:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003e8c:	74 0e                	je     81003e9c <_printf_i+0x378>
81003e8e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003e91:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e94:	89 c2                	mov    %eax,%edx
81003e96:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e99:	89 50 04             	mov    %edx,0x4(%eax)
81003e9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e9f:	8b 50 04             	mov    0x4(%eax),%edx
81003ea2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ea5:	89 50 10             	mov    %edx,0x10(%eax)
81003ea8:	eb 1a                	jmp    81003ec4 <_printf_i+0x3a0>
81003eaa:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003eae:	8b 45 0c             	mov    0xc(%ebp),%eax
81003eb1:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003eb5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003eb8:	88 10                	mov    %dl,(%eax)
81003eba:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ebd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ec4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ec7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003ecb:	90                   	nop
81003ecc:	83 ec 0c             	sub    $0xc,%esp
81003ecf:	ff 75 14             	push   0x14(%ebp)
81003ed2:	ff 75 10             	push   0x10(%ebp)
81003ed5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003ed8:	50                   	push   %eax
81003ed9:	ff 75 0c             	push   0xc(%ebp)
81003edc:	ff 75 08             	push   0x8(%ebp)
81003edf:	e8 a5 fa ff ff       	call   81003989 <_printf_common>
81003ee4:	83 c4 20             	add    $0x20,%esp
81003ee7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003eea:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003eee:	74 72                	je     81003f62 <_printf_i+0x43e>
81003ef0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ef3:	8b 40 10             	mov    0x10(%eax),%eax
81003ef6:	50                   	push   %eax
81003ef7:	ff 75 ec             	push   -0x14(%ebp)
81003efa:	ff 75 10             	push   0x10(%ebp)
81003efd:	ff 75 08             	push   0x8(%ebp)
81003f00:	8b 45 14             	mov    0x14(%ebp),%eax
81003f03:	ff d0                	call   *%eax
81003f05:	83 c4 10             	add    $0x10,%esp
81003f08:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f0b:	74 58                	je     81003f65 <_printf_i+0x441>
81003f0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f10:	8b 00                	mov    (%eax),%eax
81003f12:	83 e0 02             	and    $0x2,%eax
81003f15:	85 c0                	test   %eax,%eax
81003f17:	74 39                	je     81003f52 <_printf_i+0x42e>
81003f19:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003f20:	eb 20                	jmp    81003f42 <_printf_i+0x41e>
81003f22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f25:	83 c0 19             	add    $0x19,%eax
81003f28:	6a 01                	push   $0x1
81003f2a:	50                   	push   %eax
81003f2b:	ff 75 10             	push   0x10(%ebp)
81003f2e:	ff 75 08             	push   0x8(%ebp)
81003f31:	8b 45 14             	mov    0x14(%ebp),%eax
81003f34:	ff d0                	call   *%eax
81003f36:	83 c4 10             	add    $0x10,%esp
81003f39:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f3c:	74 2a                	je     81003f68 <_printf_i+0x444>
81003f3e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003f42:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f45:	8b 40 0c             	mov    0xc(%eax),%eax
81003f48:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003f4b:	29 d0                	sub    %edx,%eax
81003f4d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003f50:	7c d0                	jl     81003f22 <_printf_i+0x3fe>
81003f52:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f55:	8b 50 0c             	mov    0xc(%eax),%edx
81003f58:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f5b:	39 c2                	cmp    %eax,%edx
81003f5d:	0f 4d c2             	cmovge %edx,%eax
81003f60:	eb 0c                	jmp    81003f6e <_printf_i+0x44a>
81003f62:	90                   	nop
81003f63:	eb 04                	jmp    81003f69 <_printf_i+0x445>
81003f65:	90                   	nop
81003f66:	eb 01                	jmp    81003f69 <_printf_i+0x445>
81003f68:	90                   	nop
81003f69:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f6e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003f71:	c9                   	leave  
81003f72:	c3                   	ret    

81003f73 <_iprintf_r>:
81003f73:	55                   	push   %ebp
81003f74:	89 e5                	mov    %esp,%ebp
81003f76:	83 ec 18             	sub    $0x18,%esp
81003f79:	8d 45 10             	lea    0x10(%ebp),%eax
81003f7c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f7f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003f82:	8b 45 08             	mov    0x8(%ebp),%eax
81003f85:	8b 40 08             	mov    0x8(%eax),%eax
81003f88:	52                   	push   %edx
81003f89:	ff 75 0c             	push   0xc(%ebp)
81003f8c:	50                   	push   %eax
81003f8d:	ff 75 08             	push   0x8(%ebp)
81003f90:	e8 9e f6 ff ff       	call   81003633 <_vfiprintf_r>
81003f95:	83 c4 10             	add    $0x10,%esp
81003f98:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f9e:	c9                   	leave  
81003f9f:	c3                   	ret    

81003fa0 <iprintf>:
81003fa0:	55                   	push   %ebp
81003fa1:	89 e5                	mov    %esp,%ebp
81003fa3:	83 ec 18             	sub    $0x18,%esp
81003fa6:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81003fab:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003fae:	8d 45 0c             	lea    0xc(%ebp),%eax
81003fb1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003fb4:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fba:	8b 40 08             	mov    0x8(%eax),%eax
81003fbd:	52                   	push   %edx
81003fbe:	ff 75 08             	push   0x8(%ebp)
81003fc1:	50                   	push   %eax
81003fc2:	ff 75 f4             	push   -0xc(%ebp)
81003fc5:	e8 69 f6 ff ff       	call   81003633 <_vfiprintf_r>
81003fca:	83 c4 10             	add    $0x10,%esp
81003fcd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003fd0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fd3:	c9                   	leave  
81003fd4:	c3                   	ret    

81003fd5 <_puts_r>:
81003fd5:	55                   	push   %ebp
81003fd6:	89 e5                	mov    %esp,%ebp
81003fd8:	83 ec 38             	sub    $0x38,%esp
81003fdb:	83 ec 0c             	sub    $0xc,%esp
81003fde:	ff 75 0c             	push   0xc(%ebp)
81003fe1:	e8 1a 06 00 00       	call   81004600 <strlen>
81003fe6:	83 c4 10             	add    $0x10,%esp
81003fe9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003fec:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fef:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003ff2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ff5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ff8:	c7 45 d4 e0 6d 00 81 	movl   $0x81006de0,-0x2c(%ebp)
81003fff:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004006:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004009:	83 c0 01             	add    $0x1,%eax
8100400c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100400f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004012:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004015:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100401c:	8b 45 08             	mov    0x8(%ebp),%eax
8100401f:	8b 40 08             	mov    0x8(%eax),%eax
81004022:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004025:	8b 45 08             	mov    0x8(%ebp),%eax
81004028:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100402b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100402f:	74 18                	je     81004049 <_puts_r+0x74>
81004031:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004034:	8b 40 38             	mov    0x38(%eax),%eax
81004037:	85 c0                	test   %eax,%eax
81004039:	75 0e                	jne    81004049 <_puts_r+0x74>
8100403b:	83 ec 0c             	sub    $0xc,%esp
8100403e:	ff 75 ec             	push   -0x14(%ebp)
81004041:	e8 db d0 ff ff       	call   81001121 <__sinit>
81004046:	83 c4 10             	add    $0x10,%esp
81004049:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100404c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004050:	98                   	cwtl   
81004051:	25 00 20 00 00       	and    $0x2000,%eax
81004056:	85 c0                	test   %eax,%eax
81004058:	75 24                	jne    8100407e <_puts_r+0xa9>
8100405a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100405d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004061:	80 cc 20             	or     $0x20,%ah
81004064:	89 c2                	mov    %eax,%edx
81004066:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004069:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100406d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004070:	8b 40 64             	mov    0x64(%eax),%eax
81004073:	80 e4 df             	and    $0xdf,%ah
81004076:	89 c2                	mov    %eax,%edx
81004078:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100407b:	89 50 64             	mov    %edx,0x64(%eax)
8100407e:	83 ec 04             	sub    $0x4,%esp
81004081:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004084:	50                   	push   %eax
81004085:	ff 75 f0             	push   -0x10(%ebp)
81004088:	ff 75 08             	push   0x8(%ebp)
8100408b:	e8 b4 11 00 00       	call   81005244 <__sfvwrite_r>
81004090:	83 c4 10             	add    $0x10,%esp
81004093:	85 c0                	test   %eax,%eax
81004095:	74 07                	je     8100409e <_puts_r+0xc9>
81004097:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100409c:	eb 05                	jmp    810040a3 <_puts_r+0xce>
8100409e:	b8 0a 00 00 00       	mov    $0xa,%eax
810040a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810040a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810040a9:	c9                   	leave  
810040aa:	c3                   	ret    

810040ab <puts>:
810040ab:	55                   	push   %ebp
810040ac:	89 e5                	mov    %esp,%ebp
810040ae:	83 ec 08             	sub    $0x8,%esp
810040b1:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810040b6:	83 ec 08             	sub    $0x8,%esp
810040b9:	ff 75 08             	push   0x8(%ebp)
810040bc:	50                   	push   %eax
810040bd:	e8 13 ff ff ff       	call   81003fd5 <_puts_r>
810040c2:	83 c4 10             	add    $0x10,%esp
810040c5:	c9                   	leave  
810040c6:	c3                   	ret    

810040c7 <lflush>:
810040c7:	55                   	push   %ebp
810040c8:	89 e5                	mov    %esp,%ebp
810040ca:	83 ec 08             	sub    $0x8,%esp
810040cd:	8b 45 08             	mov    0x8(%ebp),%eax
810040d0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810040d4:	98                   	cwtl   
810040d5:	83 e0 09             	and    $0x9,%eax
810040d8:	83 f8 09             	cmp    $0x9,%eax
810040db:	75 10                	jne    810040ed <lflush+0x26>
810040dd:	83 ec 0c             	sub    $0xc,%esp
810040e0:	ff 75 08             	push   0x8(%ebp)
810040e3:	e8 8e cb ff ff       	call   81000c76 <fflush>
810040e8:	83 c4 10             	add    $0x10,%esp
810040eb:	eb 05                	jmp    810040f2 <lflush+0x2b>
810040ed:	b8 00 00 00 00       	mov    $0x0,%eax
810040f2:	c9                   	leave  
810040f3:	c3                   	ret    

810040f4 <__srefill_r>:
810040f4:	55                   	push   %ebp
810040f5:	89 e5                	mov    %esp,%ebp
810040f7:	56                   	push   %esi
810040f8:	53                   	push   %ebx
810040f9:	83 ec 10             	sub    $0x10,%esp
810040fc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810040ff:	8b 45 08             	mov    0x8(%ebp),%eax
81004102:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004105:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004109:	74 18                	je     81004123 <__srefill_r+0x2f>
8100410b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100410e:	8b 40 38             	mov    0x38(%eax),%eax
81004111:	85 c0                	test   %eax,%eax
81004113:	75 0e                	jne    81004123 <__srefill_r+0x2f>
81004115:	83 ec 0c             	sub    $0xc,%esp
81004118:	ff 75 f4             	push   -0xc(%ebp)
8100411b:	e8 01 d0 ff ff       	call   81001121 <__sinit>
81004120:	83 c4 10             	add    $0x10,%esp
81004123:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004127:	98                   	cwtl   
81004128:	25 00 20 00 00       	and    $0x2000,%eax
8100412d:	85 c0                	test   %eax,%eax
8100412f:	75 14                	jne    81004145 <__srefill_r+0x51>
81004131:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004135:	80 cc 20             	or     $0x20,%ah
81004138:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100413c:	8b 43 64             	mov    0x64(%ebx),%eax
8100413f:	80 e4 df             	and    $0xdf,%ah
81004142:	89 43 64             	mov    %eax,0x64(%ebx)
81004145:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100414c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004150:	98                   	cwtl   
81004151:	83 e0 20             	and    $0x20,%eax
81004154:	85 c0                	test   %eax,%eax
81004156:	74 0a                	je     81004162 <__srefill_r+0x6e>
81004158:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100415d:	e9 8c 01 00 00       	jmp    810042ee <__srefill_r+0x1fa>
81004162:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004166:	98                   	cwtl   
81004167:	83 e0 04             	and    $0x4,%eax
8100416a:	85 c0                	test   %eax,%eax
8100416c:	75 79                	jne    810041e7 <__srefill_r+0xf3>
8100416e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004172:	98                   	cwtl   
81004173:	83 e0 10             	and    $0x10,%eax
81004176:	85 c0                	test   %eax,%eax
81004178:	75 1e                	jne    81004198 <__srefill_r+0xa4>
8100417a:	8b 45 08             	mov    0x8(%ebp),%eax
8100417d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004183:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004187:	83 c8 40             	or     $0x40,%eax
8100418a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100418e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004193:	e9 56 01 00 00       	jmp    810042ee <__srefill_r+0x1fa>
81004198:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100419c:	98                   	cwtl   
8100419d:	83 e0 08             	and    $0x8,%eax
810041a0:	85 c0                	test   %eax,%eax
810041a2:	74 36                	je     810041da <__srefill_r+0xe6>
810041a4:	83 ec 08             	sub    $0x8,%esp
810041a7:	53                   	push   %ebx
810041a8:	ff 75 08             	push   0x8(%ebp)
810041ab:	e8 6e ca ff ff       	call   81000c1e <_fflush_r>
810041b0:	83 c4 10             	add    $0x10,%esp
810041b3:	85 c0                	test   %eax,%eax
810041b5:	74 0a                	je     810041c1 <__srefill_r+0xcd>
810041b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041bc:	e9 2d 01 00 00       	jmp    810042ee <__srefill_r+0x1fa>
810041c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041c5:	83 e0 f7             	and    $0xfffffff7,%eax
810041c8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041cc:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810041d3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810041da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041de:	83 c8 04             	or     $0x4,%eax
810041e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041e5:	eb 46                	jmp    8100422d <__srefill_r+0x139>
810041e7:	8b 43 30             	mov    0x30(%ebx),%eax
810041ea:	85 c0                	test   %eax,%eax
810041ec:	74 3f                	je     8100422d <__srefill_r+0x139>
810041ee:	8b 53 30             	mov    0x30(%ebx),%edx
810041f1:	8d 43 40             	lea    0x40(%ebx),%eax
810041f4:	39 c2                	cmp    %eax,%edx
810041f6:	74 12                	je     8100420a <__srefill_r+0x116>
810041f8:	8b 43 30             	mov    0x30(%ebx),%eax
810041fb:	83 ec 08             	sub    $0x8,%esp
810041fe:	50                   	push   %eax
810041ff:	ff 75 08             	push   0x8(%ebp)
81004202:	e8 7c d0 ff ff       	call   81001283 <_free_r>
81004207:	83 c4 10             	add    $0x10,%esp
8100420a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004211:	8b 43 3c             	mov    0x3c(%ebx),%eax
81004214:	89 43 04             	mov    %eax,0x4(%ebx)
81004217:	8b 43 04             	mov    0x4(%ebx),%eax
8100421a:	85 c0                	test   %eax,%eax
8100421c:	74 0f                	je     8100422d <__srefill_r+0x139>
8100421e:	8b 43 38             	mov    0x38(%ebx),%eax
81004221:	89 03                	mov    %eax,(%ebx)
81004223:	b8 00 00 00 00       	mov    $0x0,%eax
81004228:	e9 c1 00 00 00       	jmp    810042ee <__srefill_r+0x1fa>
8100422d:	8b 43 10             	mov    0x10(%ebx),%eax
81004230:	85 c0                	test   %eax,%eax
81004232:	75 0f                	jne    81004243 <__srefill_r+0x14f>
81004234:	83 ec 08             	sub    $0x8,%esp
81004237:	53                   	push   %ebx
81004238:	ff 75 08             	push   0x8(%ebp)
8100423b:	e8 d8 16 00 00       	call   81005918 <__smakebuf_r>
81004240:	83 c4 10             	add    $0x10,%esp
81004243:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004247:	98                   	cwtl   
81004248:	83 e0 03             	and    $0x3,%eax
8100424b:	85 c0                	test   %eax,%eax
8100424d:	74 48                	je     81004297 <__srefill_r+0x1a3>
8100424f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004253:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81004257:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100425d:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81004262:	83 ec 08             	sub    $0x8,%esp
81004265:	68 c7 40 00 81       	push   $0x810040c7
8100426a:	50                   	push   %eax
8100426b:	e8 4f d5 ff ff       	call   810017bf <_fwalk>
81004270:	83 c4 10             	add    $0x10,%esp
81004273:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81004277:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100427b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100427f:	98                   	cwtl   
81004280:	83 e0 09             	and    $0x9,%eax
81004283:	83 f8 09             	cmp    $0x9,%eax
81004286:	75 0f                	jne    81004297 <__srefill_r+0x1a3>
81004288:	83 ec 08             	sub    $0x8,%esp
8100428b:	53                   	push   %ebx
8100428c:	ff 75 08             	push   0x8(%ebp)
8100428f:	e8 64 c7 ff ff       	call   810009f8 <__sflush_r>
81004294:	83 c4 10             	add    $0x10,%esp
81004297:	8b 43 10             	mov    0x10(%ebx),%eax
8100429a:	89 03                	mov    %eax,(%ebx)
8100429c:	8b 43 20             	mov    0x20(%ebx),%eax
8100429f:	8b 73 14             	mov    0x14(%ebx),%esi
810042a2:	8b 0b                	mov    (%ebx),%ecx
810042a4:	8b 53 1c             	mov    0x1c(%ebx),%edx
810042a7:	56                   	push   %esi
810042a8:	51                   	push   %ecx
810042a9:	52                   	push   %edx
810042aa:	ff 75 08             	push   0x8(%ebp)
810042ad:	ff d0                	call   *%eax
810042af:	83 c4 10             	add    $0x10,%esp
810042b2:	89 43 04             	mov    %eax,0x4(%ebx)
810042b5:	8b 43 04             	mov    0x4(%ebx),%eax
810042b8:	85 c0                	test   %eax,%eax
810042ba:	7f 2d                	jg     810042e9 <__srefill_r+0x1f5>
810042bc:	8b 43 04             	mov    0x4(%ebx),%eax
810042bf:	85 c0                	test   %eax,%eax
810042c1:	75 0d                	jne    810042d0 <__srefill_r+0x1dc>
810042c3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042c7:	83 c8 20             	or     $0x20,%eax
810042ca:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042ce:	eb 12                	jmp    810042e2 <__srefill_r+0x1ee>
810042d0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810042d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042db:	83 c8 40             	or     $0x40,%eax
810042de:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810042e7:	eb 05                	jmp    810042ee <__srefill_r+0x1fa>
810042e9:	b8 00 00 00 00       	mov    $0x0,%eax
810042ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
810042f1:	5b                   	pop    %ebx
810042f2:	5e                   	pop    %esi
810042f3:	5d                   	pop    %ebp
810042f4:	c3                   	ret    

810042f5 <_sbrk_r>:
810042f5:	55                   	push   %ebp
810042f6:	89 e5                	mov    %esp,%ebp
810042f8:	83 ec 18             	sub    $0x18,%esp
810042fb:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
81004302:	00 00 00 
81004305:	83 ec 0c             	sub    $0xc,%esp
81004308:	ff 75 0c             	push   0xc(%ebp)
8100430b:	e8 0b c5 ff ff       	call   8100081b <sbrk>
81004310:	83 c4 10             	add    $0x10,%esp
81004313:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004316:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100431a:	75 14                	jne    81004330 <_sbrk_r+0x3b>
8100431c:	a1 34 81 00 81       	mov    0x81008134,%eax
81004321:	85 c0                	test   %eax,%eax
81004323:	74 0b                	je     81004330 <_sbrk_r+0x3b>
81004325:	8b 15 34 81 00 81    	mov    0x81008134,%edx
8100432b:	8b 45 08             	mov    0x8(%ebp),%eax
8100432e:	89 10                	mov    %edx,(%eax)
81004330:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004333:	c9                   	leave  
81004334:	c3                   	ret    

81004335 <__sread>:
81004335:	55                   	push   %ebp
81004336:	89 e5                	mov    %esp,%ebp
81004338:	56                   	push   %esi
81004339:	53                   	push   %ebx
8100433a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100433d:	8b 55 14             	mov    0x14(%ebp),%edx
81004340:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004344:	98                   	cwtl   
81004345:	52                   	push   %edx
81004346:	ff 75 10             	push   0x10(%ebp)
81004349:	50                   	push   %eax
8100434a:	ff 75 08             	push   0x8(%ebp)
8100434d:	e8 6f 19 00 00       	call   81005cc1 <_read_r>
81004352:	83 c4 10             	add    $0x10,%esp
81004355:	89 c6                	mov    %eax,%esi
81004357:	85 f6                	test   %esi,%esi
81004359:	78 0a                	js     81004365 <__sread+0x30>
8100435b:	8b 43 50             	mov    0x50(%ebx),%eax
8100435e:	01 f0                	add    %esi,%eax
81004360:	89 43 50             	mov    %eax,0x50(%ebx)
81004363:	eb 0b                	jmp    81004370 <__sread+0x3b>
81004365:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004369:	80 e4 ef             	and    $0xef,%ah
8100436c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004370:	89 f0                	mov    %esi,%eax
81004372:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004375:	5b                   	pop    %ebx
81004376:	5e                   	pop    %esi
81004377:	5d                   	pop    %ebp
81004378:	c3                   	ret    

81004379 <__seofread>:
81004379:	55                   	push   %ebp
8100437a:	89 e5                	mov    %esp,%ebp
8100437c:	b8 00 00 00 00       	mov    $0x0,%eax
81004381:	5d                   	pop    %ebp
81004382:	c3                   	ret    

81004383 <__swrite>:
81004383:	55                   	push   %ebp
81004384:	89 e5                	mov    %esp,%ebp
81004386:	53                   	push   %ebx
81004387:	83 ec 14             	sub    $0x14,%esp
8100438a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100438d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004391:	98                   	cwtl   
81004392:	25 00 01 00 00       	and    $0x100,%eax
81004397:	85 c0                	test   %eax,%eax
81004399:	74 15                	je     810043b0 <__swrite+0x2d>
8100439b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100439f:	98                   	cwtl   
810043a0:	6a 02                	push   $0x2
810043a2:	6a 00                	push   $0x0
810043a4:	50                   	push   %eax
810043a5:	ff 75 08             	push   0x8(%ebp)
810043a8:	e8 25 15 00 00       	call   810058d2 <_lseek_r>
810043ad:	83 c4 10             	add    $0x10,%esp
810043b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810043b4:	80 e4 ef             	and    $0xef,%ah
810043b7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810043bb:	8b 55 14             	mov    0x14(%ebp),%edx
810043be:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043c2:	98                   	cwtl   
810043c3:	52                   	push   %edx
810043c4:	ff 75 10             	push   0x10(%ebp)
810043c7:	50                   	push   %eax
810043c8:	ff 75 08             	push   0x8(%ebp)
810043cb:	e8 42 07 00 00       	call   81004b12 <_write_r>
810043d0:	83 c4 10             	add    $0x10,%esp
810043d3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810043dc:	c9                   	leave  
810043dd:	c3                   	ret    

810043de <__sseek>:
810043de:	55                   	push   %ebp
810043df:	89 e5                	mov    %esp,%ebp
810043e1:	56                   	push   %esi
810043e2:	53                   	push   %ebx
810043e3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810043e6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043ea:	98                   	cwtl   
810043eb:	ff 75 14             	push   0x14(%ebp)
810043ee:	ff 75 10             	push   0x10(%ebp)
810043f1:	50                   	push   %eax
810043f2:	ff 75 08             	push   0x8(%ebp)
810043f5:	e8 d8 14 00 00       	call   810058d2 <_lseek_r>
810043fa:	83 c4 10             	add    $0x10,%esp
810043fd:	89 c6                	mov    %eax,%esi
810043ff:	83 fe ff             	cmp    $0xffffffff,%esi
81004402:	75 0d                	jne    81004411 <__sseek+0x33>
81004404:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004408:	80 e4 ef             	and    $0xef,%ah
8100440b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100440f:	eb 0e                	jmp    8100441f <__sseek+0x41>
81004411:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004415:	80 cc 10             	or     $0x10,%ah
81004418:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100441c:	89 73 50             	mov    %esi,0x50(%ebx)
8100441f:	89 f0                	mov    %esi,%eax
81004421:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004424:	5b                   	pop    %ebx
81004425:	5e                   	pop    %esi
81004426:	5d                   	pop    %ebp
81004427:	c3                   	ret    

81004428 <__sclose>:
81004428:	55                   	push   %ebp
81004429:	89 e5                	mov    %esp,%ebp
8100442b:	83 ec 18             	sub    $0x18,%esp
8100442e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004431:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004434:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004437:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100443b:	98                   	cwtl   
8100443c:	83 ec 08             	sub    $0x8,%esp
8100443f:	50                   	push   %eax
81004440:	ff 75 08             	push   0x8(%ebp)
81004443:	e8 80 09 00 00       	call   81004dc8 <_close_r>
81004448:	83 c4 10             	add    $0x10,%esp
8100444b:	c9                   	leave  
8100444c:	c3                   	ret    
8100444d:	66 90                	xchg   %ax,%ax
8100444f:	90                   	nop

81004450 <strchr>:
81004450:	55                   	push   %ebp
81004451:	89 e5                	mov    %esp,%ebp
81004453:	57                   	push   %edi
81004454:	53                   	push   %ebx
81004455:	31 db                	xor    %ebx,%ebx
81004457:	8b 7d 08             	mov    0x8(%ebp),%edi
8100445a:	02 5d 0c             	add    0xc(%ebp),%bl
8100445d:	0f 84 98 00 00 00    	je     810044fb <L25>
81004463:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004469:	74 37                	je     810044a2 <L5>
8100446b:	89 f8                	mov    %edi,%eax
8100446d:	8a 08                	mov    (%eax),%cl
8100446f:	84 c9                	test   %cl,%cl
81004471:	74 7b                	je     810044ee <L14>
81004473:	38 d9                	cmp    %bl,%cl
81004475:	74 7d                	je     810044f4 <L19>
81004477:	47                   	inc    %edi
81004478:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100447e:	74 22                	je     810044a2 <L5>
81004480:	89 f8                	mov    %edi,%eax
81004482:	8a 08                	mov    (%eax),%cl
81004484:	84 c9                	test   %cl,%cl
81004486:	74 66                	je     810044ee <L14>
81004488:	38 d9                	cmp    %bl,%cl
8100448a:	74 68                	je     810044f4 <L19>
8100448c:	47                   	inc    %edi
8100448d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004493:	74 0d                	je     810044a2 <L5>
81004495:	89 f8                	mov    %edi,%eax
81004497:	8a 08                	mov    (%eax),%cl
81004499:	84 c9                	test   %cl,%cl
8100449b:	74 51                	je     810044ee <L14>
8100449d:	38 d9                	cmp    %bl,%cl
8100449f:	74 53                	je     810044f4 <L19>
810044a1:	47                   	inc    %edi

810044a2 <L5>:
810044a2:	89 d9                	mov    %ebx,%ecx
810044a4:	c1 e3 08             	shl    $0x8,%ebx
810044a7:	83 ef 04             	sub    $0x4,%edi
810044aa:	09 cb                	or     %ecx,%ebx
810044ac:	89 da                	mov    %ebx,%edx
810044ae:	c1 e3 10             	shl    $0x10,%ebx
810044b1:	09 d3                	or     %edx,%ebx

810044b3 <L10>:
810044b3:	83 c7 04             	add    $0x4,%edi
810044b6:	8b 0f                	mov    (%edi),%ecx
810044b8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810044be:	89 c8                	mov    %ecx,%eax
810044c0:	f7 d0                	not    %eax
810044c2:	21 c2                	and    %eax,%edx
810044c4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810044ca:	75 14                	jne    810044e0 <L9>
810044cc:	31 d9                	xor    %ebx,%ecx
810044ce:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810044d4:	f7 d1                	not    %ecx
810044d6:	21 ca                	and    %ecx,%edx
810044d8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810044de:	74 d3                	je     810044b3 <L10>

810044e0 <L9>:
810044e0:	8d 47 ff             	lea    -0x1(%edi),%eax

810044e3 <L15>:
810044e3:	40                   	inc    %eax
810044e4:	8a 10                	mov    (%eax),%dl
810044e6:	84 d2                	test   %dl,%dl
810044e8:	74 04                	je     810044ee <L14>
810044ea:	38 da                	cmp    %bl,%dl
810044ec:	75 f5                	jne    810044e3 <L15>

810044ee <L14>:
810044ee:	38 18                	cmp    %bl,(%eax)
810044f0:	74 02                	je     810044f4 <L19>
810044f2:	31 c0                	xor    %eax,%eax

810044f4 <L19>:
810044f4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810044f7:	5b                   	pop    %ebx
810044f8:	5f                   	pop    %edi
810044f9:	c9                   	leave  
810044fa:	c3                   	ret    

810044fb <L25>:
810044fb:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004501:	74 2b                	je     8100452e <L26>
81004503:	89 f8                	mov    %edi,%eax
81004505:	8a 08                	mov    (%eax),%cl
81004507:	84 c9                	test   %cl,%cl
81004509:	74 e9                	je     810044f4 <L19>
8100450b:	47                   	inc    %edi
8100450c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004512:	74 1a                	je     8100452e <L26>
81004514:	89 f8                	mov    %edi,%eax
81004516:	8a 08                	mov    (%eax),%cl
81004518:	84 c9                	test   %cl,%cl
8100451a:	74 d8                	je     810044f4 <L19>
8100451c:	47                   	inc    %edi
8100451d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004523:	74 09                	je     8100452e <L26>
81004525:	89 f8                	mov    %edi,%eax
81004527:	8a 08                	mov    (%eax),%cl
81004529:	84 c9                	test   %cl,%cl
8100452b:	74 c7                	je     810044f4 <L19>
8100452d:	47                   	inc    %edi

8100452e <L26>:
8100452e:	83 ef 04             	sub    $0x4,%edi

81004531 <L27>:
81004531:	83 c7 04             	add    $0x4,%edi
81004534:	8b 0f                	mov    (%edi),%ecx
81004536:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100453c:	89 c8                	mov    %ecx,%eax
8100453e:	f7 d0                	not    %eax
81004540:	21 c2                	and    %eax,%edx
81004542:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81004548:	74 e7                	je     81004531 <L27>
8100454a:	eb 94                	jmp    810044e0 <L9>

8100454c <strcmp>:
8100454c:	55                   	push   %ebp
8100454d:	89 e5                	mov    %esp,%ebp
8100454f:	83 ec 10             	sub    $0x10,%esp
81004552:	8b 55 08             	mov    0x8(%ebp),%edx
81004555:	8b 45 0c             	mov    0xc(%ebp),%eax
81004558:	09 d0                	or     %edx,%eax
8100455a:	83 e0 03             	and    $0x3,%eax
8100455d:	85 c0                	test   %eax,%eax
8100455f:	75 5e                	jne    810045bf <strcmp+0x73>
81004561:	8b 45 08             	mov    0x8(%ebp),%eax
81004564:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004567:	8b 45 0c             	mov    0xc(%ebp),%eax
8100456a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100456d:	eb 2c                	jmp    8100459b <strcmp+0x4f>
8100456f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004572:	8b 00                	mov    (%eax),%eax
81004574:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100457a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100457d:	8b 00                	mov    (%eax),%eax
8100457f:	f7 d0                	not    %eax
81004581:	21 d0                	and    %edx,%eax
81004583:	25 80 80 80 80       	and    $0x80808080,%eax
81004588:	85 c0                	test   %eax,%eax
8100458a:	74 07                	je     81004593 <strcmp+0x47>
8100458c:	b8 00 00 00 00       	mov    $0x0,%eax
81004591:	eb 5c                	jmp    810045ef <strcmp+0xa3>
81004593:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004597:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100459b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100459e:	8b 10                	mov    (%eax),%edx
810045a0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810045a3:	8b 00                	mov    (%eax),%eax
810045a5:	39 c2                	cmp    %eax,%edx
810045a7:	74 c6                	je     8100456f <strcmp+0x23>
810045a9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810045ac:	89 45 08             	mov    %eax,0x8(%ebp)
810045af:	8b 45 f8             	mov    -0x8(%ebp),%eax
810045b2:	89 45 0c             	mov    %eax,0xc(%ebp)
810045b5:	eb 08                	jmp    810045bf <strcmp+0x73>
810045b7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810045bb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810045bf:	8b 45 08             	mov    0x8(%ebp),%eax
810045c2:	0f b6 00             	movzbl (%eax),%eax
810045c5:	84 c0                	test   %al,%al
810045c7:	74 10                	je     810045d9 <strcmp+0x8d>
810045c9:	8b 45 08             	mov    0x8(%ebp),%eax
810045cc:	0f b6 10             	movzbl (%eax),%edx
810045cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810045d2:	0f b6 00             	movzbl (%eax),%eax
810045d5:	38 c2                	cmp    %al,%dl
810045d7:	74 de                	je     810045b7 <strcmp+0x6b>
810045d9:	8b 45 08             	mov    0x8(%ebp),%eax
810045dc:	0f b6 00             	movzbl (%eax),%eax
810045df:	0f b6 d0             	movzbl %al,%edx
810045e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810045e5:	0f b6 00             	movzbl (%eax),%eax
810045e8:	0f b6 c8             	movzbl %al,%ecx
810045eb:	89 d0                	mov    %edx,%eax
810045ed:	29 c8                	sub    %ecx,%eax
810045ef:	c9                   	leave  
810045f0:	c3                   	ret    
810045f1:	66 90                	xchg   %ax,%ax
810045f3:	66 90                	xchg   %ax,%ax
810045f5:	66 90                	xchg   %ax,%ax
810045f7:	66 90                	xchg   %ax,%ax
810045f9:	66 90                	xchg   %ax,%ax
810045fb:	66 90                	xchg   %ax,%ax
810045fd:	66 90                	xchg   %ax,%ax
810045ff:	90                   	nop

81004600 <strlen>:
81004600:	55                   	push   %ebp
81004601:	89 e5                	mov    %esp,%ebp
81004603:	57                   	push   %edi
81004604:	8b 55 08             	mov    0x8(%ebp),%edx
81004607:	89 d7                	mov    %edx,%edi
81004609:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100460f:	74 25                	je     81004636 <L5>
81004611:	8a 0f                	mov    (%edi),%cl
81004613:	47                   	inc    %edi
81004614:	84 c9                	test   %cl,%cl
81004616:	74 56                	je     8100466e <L15>
81004618:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100461e:	74 16                	je     81004636 <L5>
81004620:	8a 0f                	mov    (%edi),%cl
81004622:	47                   	inc    %edi
81004623:	84 c9                	test   %cl,%cl
81004625:	74 47                	je     8100466e <L15>
81004627:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100462d:	74 07                	je     81004636 <L5>
8100462f:	8a 0f                	mov    (%edi),%cl
81004631:	47                   	inc    %edi
81004632:	84 c9                	test   %cl,%cl
81004634:	74 38                	je     8100466e <L15>

81004636 <L5>:
81004636:	83 ef 04             	sub    $0x4,%edi
81004639:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004640 <L10>:
81004640:	83 c7 04             	add    $0x4,%edi
81004643:	8b 0f                	mov    (%edi),%ecx
81004645:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100464b:	f7 d1                	not    %ecx
8100464d:	21 c8                	and    %ecx,%eax
8100464f:	a9 80 80 80 80       	test   $0x80808080,%eax
81004654:	74 ea                	je     81004640 <L10>
81004656:	f7 d1                	not    %ecx
81004658:	47                   	inc    %edi
81004659:	84 c9                	test   %cl,%cl
8100465b:	74 11                	je     8100466e <L15>
8100465d:	47                   	inc    %edi
8100465e:	c1 e9 08             	shr    $0x8,%ecx
81004661:	84 c9                	test   %cl,%cl
81004663:	74 09                	je     8100466e <L15>
81004665:	47                   	inc    %edi
81004666:	c1 e9 08             	shr    $0x8,%ecx
81004669:	84 c9                	test   %cl,%cl
8100466b:	74 01                	je     8100466e <L15>
8100466d:	47                   	inc    %edi

8100466e <L15>:
8100466e:	29 d7                	sub    %edx,%edi
81004670:	8d 47 ff             	lea    -0x1(%edi),%eax
81004673:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004676:	5f                   	pop    %edi
81004677:	c9                   	leave  
81004678:	c3                   	ret    

81004679 <strtok>:
81004679:	55                   	push   %ebp
8100467a:	89 e5                	mov    %esp,%ebp
8100467c:	83 ec 18             	sub    $0x18,%esp
8100467f:	8b 55 08             	mov    0x8(%ebp),%edx
81004682:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004685:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100468a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100468d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004690:	83 c0 5c             	add    $0x5c,%eax
81004693:	6a 01                	push   $0x1
81004695:	50                   	push   %eax
81004696:	51                   	push   %ecx
81004697:	52                   	push   %edx
81004698:	e8 05 00 00 00       	call   810046a2 <__strtok_r>
8100469d:	83 c4 10             	add    $0x10,%esp
810046a0:	c9                   	leave  
810046a1:	c3                   	ret    

810046a2 <__strtok_r>:
810046a2:	55                   	push   %ebp
810046a3:	89 e5                	mov    %esp,%ebp
810046a5:	57                   	push   %edi
810046a6:	56                   	push   %esi
810046a7:	53                   	push   %ebx
810046a8:	83 ec 10             	sub    $0x10,%esp
810046ab:	8b 45 08             	mov    0x8(%ebp),%eax
810046ae:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810046b1:	85 c0                	test   %eax,%eax
810046b3:	75 13                	jne    810046c8 <__strtok_r+0x26>
810046b5:	8b 45 10             	mov    0x10(%ebp),%eax
810046b8:	8b 00                	mov    (%eax),%eax
810046ba:	85 c0                	test   %eax,%eax
810046bc:	75 0a                	jne    810046c8 <__strtok_r+0x26>
810046be:	b8 00 00 00 00       	mov    $0x0,%eax
810046c3:	e9 92 00 00 00       	jmp    8100475a <__strtok_r+0xb8>
810046c8:	90                   	nop
810046c9:	89 c2                	mov    %eax,%edx
810046cb:	8d 42 01             	lea    0x1(%edx),%eax
810046ce:	0f b6 12             	movzbl (%edx),%edx
810046d1:	0f be f2             	movsbl %dl,%esi
810046d4:	89 cf                	mov    %ecx,%edi
810046d6:	eb 1c                	jmp    810046f4 <__strtok_r+0x52>
810046d8:	39 de                	cmp    %ebx,%esi
810046da:	75 18                	jne    810046f4 <__strtok_r+0x52>
810046dc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810046e0:	74 02                	je     810046e4 <__strtok_r+0x42>
810046e2:	eb e5                	jmp    810046c9 <__strtok_r+0x27>
810046e4:	8b 55 10             	mov    0x10(%ebp),%edx
810046e7:	89 02                	mov    %eax,(%edx)
810046e9:	8d 50 ff             	lea    -0x1(%eax),%edx
810046ec:	c6 02 00             	movb   $0x0,(%edx)
810046ef:	83 e8 01             	sub    $0x1,%eax
810046f2:	eb 66                	jmp    8100475a <__strtok_r+0xb8>
810046f4:	89 fa                	mov    %edi,%edx
810046f6:	8d 7a 01             	lea    0x1(%edx),%edi
810046f9:	0f b6 12             	movzbl (%edx),%edx
810046fc:	0f be da             	movsbl %dl,%ebx
810046ff:	85 db                	test   %ebx,%ebx
81004701:	75 d5                	jne    810046d8 <__strtok_r+0x36>
81004703:	85 f6                	test   %esi,%esi
81004705:	75 10                	jne    81004717 <__strtok_r+0x75>
81004707:	8b 45 10             	mov    0x10(%ebp),%eax
8100470a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004710:	b8 00 00 00 00       	mov    $0x0,%eax
81004715:	eb 43                	jmp    8100475a <__strtok_r+0xb8>
81004717:	8d 50 ff             	lea    -0x1(%eax),%edx
8100471a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100471d:	89 c2                	mov    %eax,%edx
8100471f:	8d 42 01             	lea    0x1(%edx),%eax
81004722:	0f b6 12             	movzbl (%edx),%edx
81004725:	0f be f2             	movsbl %dl,%esi
81004728:	89 cf                	mov    %ecx,%edi
8100472a:	89 fa                	mov    %edi,%edx
8100472c:	8d 7a 01             	lea    0x1(%edx),%edi
8100472f:	0f b6 12             	movzbl (%edx),%edx
81004732:	0f be da             	movsbl %dl,%ebx
81004735:	39 f3                	cmp    %esi,%ebx
81004737:	75 1b                	jne    81004754 <__strtok_r+0xb2>
81004739:	85 f6                	test   %esi,%esi
8100473b:	75 07                	jne    81004744 <__strtok_r+0xa2>
8100473d:	b8 00 00 00 00       	mov    $0x0,%eax
81004742:	eb 06                	jmp    8100474a <__strtok_r+0xa8>
81004744:	8d 50 ff             	lea    -0x1(%eax),%edx
81004747:	c6 02 00             	movb   $0x0,(%edx)
8100474a:	8b 55 10             	mov    0x10(%ebp),%edx
8100474d:	89 02                	mov    %eax,(%edx)
8100474f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004752:	eb 06                	jmp    8100475a <__strtok_r+0xb8>
81004754:	85 db                	test   %ebx,%ebx
81004756:	75 d2                	jne    8100472a <__strtok_r+0x88>
81004758:	eb c3                	jmp    8100471d <__strtok_r+0x7b>
8100475a:	83 c4 10             	add    $0x10,%esp
8100475d:	5b                   	pop    %ebx
8100475e:	5e                   	pop    %esi
8100475f:	5f                   	pop    %edi
81004760:	5d                   	pop    %ebp
81004761:	c3                   	ret    

81004762 <strtok_r>:
81004762:	55                   	push   %ebp
81004763:	89 e5                	mov    %esp,%ebp
81004765:	8b 45 08             	mov    0x8(%ebp),%eax
81004768:	8b 55 0c             	mov    0xc(%ebp),%edx
8100476b:	6a 01                	push   $0x1
8100476d:	ff 75 10             	push   0x10(%ebp)
81004770:	52                   	push   %edx
81004771:	50                   	push   %eax
81004772:	e8 2b ff ff ff       	call   810046a2 <__strtok_r>
81004777:	83 c4 10             	add    $0x10,%esp
8100477a:	c9                   	leave  
8100477b:	c3                   	ret    

8100477c <__locale_ctype_ptr_l>:
8100477c:	55                   	push   %ebp
8100477d:	89 e5                	mov    %esp,%ebp
8100477f:	b8 80 6f 00 81       	mov    $0x81006f80,%eax
81004784:	5d                   	pop    %ebp
81004785:	c3                   	ret    

81004786 <__get_global_locale>:
81004786:	55                   	push   %ebp
81004787:	89 e5                	mov    %esp,%ebp
81004789:	b8 20 79 00 81       	mov    $0x81007920,%eax
8100478e:	5d                   	pop    %ebp
8100478f:	c3                   	ret    

81004790 <__get_current_locale>:
81004790:	55                   	push   %ebp
81004791:	89 e5                	mov    %esp,%ebp
81004793:	e8 ee ff ff ff       	call   81004786 <__get_global_locale>
81004798:	5d                   	pop    %ebp
81004799:	c3                   	ret    

8100479a <_strtol_l>:
8100479a:	55                   	push   %ebp
8100479b:	89 e5                	mov    %esp,%ebp
8100479d:	57                   	push   %edi
8100479e:	56                   	push   %esi
8100479f:	53                   	push   %ebx
810047a0:	83 ec 1c             	sub    $0x1c,%esp
810047a3:	8b 75 0c             	mov    0xc(%ebp),%esi
810047a6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810047ad:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810047b1:	78 0c                	js     810047bf <_strtol_l+0x25>
810047b3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810047b7:	74 06                	je     810047bf <_strtol_l+0x25>
810047b9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810047bd:	7e 15                	jle    810047d4 <_strtol_l+0x3a>
810047bf:	e8 44 06 00 00       	call   81004e08 <__errno>
810047c4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810047ca:	b8 00 00 00 00       	mov    $0x0,%eax
810047cf:	e9 90 01 00 00       	jmp    81004964 <_strtol_l+0x1ca>
810047d4:	89 f0                	mov    %esi,%eax
810047d6:	8d 70 01             	lea    0x1(%eax),%esi
810047d9:	0f b6 00             	movzbl (%eax),%eax
810047dc:	0f b6 d8             	movzbl %al,%ebx
810047df:	83 ec 0c             	sub    $0xc,%esp
810047e2:	ff 75 18             	push   0x18(%ebp)
810047e5:	e8 92 ff ff ff       	call   8100477c <__locale_ctype_ptr_l>
810047ea:	83 c4 10             	add    $0x10,%esp
810047ed:	89 da                	mov    %ebx,%edx
810047ef:	83 c2 01             	add    $0x1,%edx
810047f2:	01 d0                	add    %edx,%eax
810047f4:	0f b6 00             	movzbl (%eax),%eax
810047f7:	0f be c0             	movsbl %al,%eax
810047fa:	83 e0 08             	and    $0x8,%eax
810047fd:	85 c0                	test   %eax,%eax
810047ff:	75 d3                	jne    810047d4 <_strtol_l+0x3a>
81004801:	83 fb 2d             	cmp    $0x2d,%ebx
81004804:	75 14                	jne    8100481a <_strtol_l+0x80>
81004806:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100480d:	89 f0                	mov    %esi,%eax
8100480f:	8d 70 01             	lea    0x1(%eax),%esi
81004812:	0f b6 00             	movzbl (%eax),%eax
81004815:	0f b6 d8             	movzbl %al,%ebx
81004818:	eb 10                	jmp    8100482a <_strtol_l+0x90>
8100481a:	83 fb 2b             	cmp    $0x2b,%ebx
8100481d:	75 0b                	jne    8100482a <_strtol_l+0x90>
8100481f:	89 f0                	mov    %esi,%eax
81004821:	8d 70 01             	lea    0x1(%eax),%esi
81004824:	0f b6 00             	movzbl (%eax),%eax
81004827:	0f b6 d8             	movzbl %al,%ebx
8100482a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100482e:	74 06                	je     81004836 <_strtol_l+0x9c>
81004830:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81004834:	75 26                	jne    8100485c <_strtol_l+0xc2>
81004836:	83 fb 30             	cmp    $0x30,%ebx
81004839:	75 21                	jne    8100485c <_strtol_l+0xc2>
8100483b:	0f b6 06             	movzbl (%esi),%eax
8100483e:	3c 78                	cmp    $0x78,%al
81004840:	74 07                	je     81004849 <_strtol_l+0xaf>
81004842:	0f b6 06             	movzbl (%esi),%eax
81004845:	3c 58                	cmp    $0x58,%al
81004847:	75 13                	jne    8100485c <_strtol_l+0xc2>
81004849:	8d 46 01             	lea    0x1(%esi),%eax
8100484c:	0f b6 00             	movzbl (%eax),%eax
8100484f:	0f b6 d8             	movzbl %al,%ebx
81004852:	83 c6 02             	add    $0x2,%esi
81004855:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100485c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004860:	75 14                	jne    81004876 <_strtol_l+0xdc>
81004862:	83 fb 30             	cmp    $0x30,%ebx
81004865:	75 07                	jne    8100486e <_strtol_l+0xd4>
81004867:	b8 08 00 00 00       	mov    $0x8,%eax
8100486c:	eb 05                	jmp    81004873 <_strtol_l+0xd9>
8100486e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004873:	89 45 14             	mov    %eax,0x14(%ebp)
81004876:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100487a:	74 07                	je     81004883 <_strtol_l+0xe9>
8100487c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004881:	eb 05                	jmp    81004888 <_strtol_l+0xee>
81004883:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004888:	89 c7                	mov    %eax,%edi
8100488a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100488d:	89 f8                	mov    %edi,%eax
8100488f:	ba 00 00 00 00       	mov    $0x0,%edx
81004894:	f7 f1                	div    %ecx
81004896:	89 d0                	mov    %edx,%eax
81004898:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100489b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100489e:	89 f8                	mov    %edi,%eax
810048a0:	ba 00 00 00 00       	mov    $0x0,%edx
810048a5:	f7 f1                	div    %ecx
810048a7:	89 c2                	mov    %eax,%edx
810048a9:	bf 00 00 00 00       	mov    $0x0,%edi
810048ae:	b9 00 00 00 00       	mov    $0x0,%ecx
810048b3:	83 fb 2f             	cmp    $0x2f,%ebx
810048b6:	7e 0a                	jle    810048c2 <_strtol_l+0x128>
810048b8:	83 fb 39             	cmp    $0x39,%ebx
810048bb:	7f 05                	jg     810048c2 <_strtol_l+0x128>
810048bd:	83 eb 30             	sub    $0x30,%ebx
810048c0:	eb 1c                	jmp    810048de <_strtol_l+0x144>
810048c2:	83 fb 40             	cmp    $0x40,%ebx
810048c5:	7e 0a                	jle    810048d1 <_strtol_l+0x137>
810048c7:	83 fb 5a             	cmp    $0x5a,%ebx
810048ca:	7f 05                	jg     810048d1 <_strtol_l+0x137>
810048cc:	83 eb 37             	sub    $0x37,%ebx
810048cf:	eb 0d                	jmp    810048de <_strtol_l+0x144>
810048d1:	83 fb 60             	cmp    $0x60,%ebx
810048d4:	7e 46                	jle    8100491c <_strtol_l+0x182>
810048d6:	83 fb 7a             	cmp    $0x7a,%ebx
810048d9:	7f 41                	jg     8100491c <_strtol_l+0x182>
810048db:	83 eb 57             	sub    $0x57,%ebx
810048de:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810048e1:	7d 38                	jge    8100491b <_strtol_l+0x181>
810048e3:	89 c8                	mov    %ecx,%eax
810048e5:	85 c0                	test   %eax,%eax
810048e7:	78 0f                	js     810048f8 <_strtol_l+0x15e>
810048e9:	89 d0                	mov    %edx,%eax
810048eb:	39 c7                	cmp    %eax,%edi
810048ed:	77 09                	ja     810048f8 <_strtol_l+0x15e>
810048ef:	39 c7                	cmp    %eax,%edi
810048f1:	75 0c                	jne    810048ff <_strtol_l+0x165>
810048f3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
810048f6:	7e 07                	jle    810048ff <_strtol_l+0x165>
810048f8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
810048fd:	eb 0f                	jmp    8100490e <_strtol_l+0x174>
810048ff:	b9 01 00 00 00       	mov    $0x1,%ecx
81004904:	8b 45 14             	mov    0x14(%ebp),%eax
81004907:	0f af f8             	imul   %eax,%edi
8100490a:	89 d8                	mov    %ebx,%eax
8100490c:	01 c7                	add    %eax,%edi
8100490e:	89 f0                	mov    %esi,%eax
81004910:	8d 70 01             	lea    0x1(%eax),%esi
81004913:	0f b6 00             	movzbl (%eax),%eax
81004916:	0f b6 d8             	movzbl %al,%ebx
81004919:	eb 98                	jmp    810048b3 <_strtol_l+0x119>
8100491b:	90                   	nop
8100491c:	89 c8                	mov    %ecx,%eax
8100491e:	85 c0                	test   %eax,%eax
81004920:	79 1f                	jns    81004941 <_strtol_l+0x1a7>
81004922:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004926:	74 07                	je     8100492f <_strtol_l+0x195>
81004928:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100492d:	eb 05                	jmp    81004934 <_strtol_l+0x19a>
8100492f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004934:	89 c7                	mov    %eax,%edi
81004936:	8b 45 08             	mov    0x8(%ebp),%eax
81004939:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100493f:	eb 08                	jmp    81004949 <_strtol_l+0x1af>
81004941:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004945:	74 02                	je     81004949 <_strtol_l+0x1af>
81004947:	f7 df                	neg    %edi
81004949:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100494d:	74 13                	je     81004962 <_strtol_l+0x1c8>
8100494f:	89 c8                	mov    %ecx,%eax
81004951:	85 c0                	test   %eax,%eax
81004953:	74 05                	je     8100495a <_strtol_l+0x1c0>
81004955:	8d 46 ff             	lea    -0x1(%esi),%eax
81004958:	eb 03                	jmp    8100495d <_strtol_l+0x1c3>
8100495a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100495d:	8b 55 10             	mov    0x10(%ebp),%edx
81004960:	89 02                	mov    %eax,(%edx)
81004962:	89 f8                	mov    %edi,%eax
81004964:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004967:	5b                   	pop    %ebx
81004968:	5e                   	pop    %esi
81004969:	5f                   	pop    %edi
8100496a:	5d                   	pop    %ebp
8100496b:	c3                   	ret    

8100496c <_strtol_r>:
8100496c:	55                   	push   %ebp
8100496d:	89 e5                	mov    %esp,%ebp
8100496f:	83 ec 08             	sub    $0x8,%esp
81004972:	e8 19 fe ff ff       	call   81004790 <__get_current_locale>
81004977:	83 ec 0c             	sub    $0xc,%esp
8100497a:	50                   	push   %eax
8100497b:	ff 75 14             	push   0x14(%ebp)
8100497e:	ff 75 10             	push   0x10(%ebp)
81004981:	ff 75 0c             	push   0xc(%ebp)
81004984:	ff 75 08             	push   0x8(%ebp)
81004987:	e8 0e fe ff ff       	call   8100479a <_strtol_l>
8100498c:	83 c4 20             	add    $0x20,%esp
8100498f:	c9                   	leave  
81004990:	c3                   	ret    

81004991 <strtol_l>:
81004991:	55                   	push   %ebp
81004992:	89 e5                	mov    %esp,%ebp
81004994:	83 ec 08             	sub    $0x8,%esp
81004997:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100499c:	83 ec 0c             	sub    $0xc,%esp
8100499f:	ff 75 14             	push   0x14(%ebp)
810049a2:	ff 75 10             	push   0x10(%ebp)
810049a5:	ff 75 0c             	push   0xc(%ebp)
810049a8:	ff 75 08             	push   0x8(%ebp)
810049ab:	50                   	push   %eax
810049ac:	e8 e9 fd ff ff       	call   8100479a <_strtol_l>
810049b1:	83 c4 20             	add    $0x20,%esp
810049b4:	c9                   	leave  
810049b5:	c3                   	ret    

810049b6 <strtol>:
810049b6:	55                   	push   %ebp
810049b7:	89 e5                	mov    %esp,%ebp
810049b9:	83 ec 08             	sub    $0x8,%esp
810049bc:	e8 cf fd ff ff       	call   81004790 <__get_current_locale>
810049c1:	8b 15 e4 74 00 81    	mov    0x810074e4,%edx
810049c7:	83 ec 0c             	sub    $0xc,%esp
810049ca:	50                   	push   %eax
810049cb:	ff 75 10             	push   0x10(%ebp)
810049ce:	ff 75 0c             	push   0xc(%ebp)
810049d1:	ff 75 08             	push   0x8(%ebp)
810049d4:	52                   	push   %edx
810049d5:	e8 c0 fd ff ff       	call   8100479a <_strtol_l>
810049da:	83 c4 20             	add    $0x20,%esp
810049dd:	c9                   	leave  
810049de:	c3                   	ret    

810049df <__swbuf_r>:
810049df:	55                   	push   %ebp
810049e0:	89 e5                	mov    %esp,%ebp
810049e2:	57                   	push   %edi
810049e3:	56                   	push   %esi
810049e4:	53                   	push   %ebx
810049e5:	83 ec 1c             	sub    $0x1c,%esp
810049e8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810049eb:	8b 5d 10             	mov    0x10(%ebp),%ebx
810049ee:	8b 45 08             	mov    0x8(%ebp),%eax
810049f1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810049f4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810049f8:	74 18                	je     81004a12 <__swbuf_r+0x33>
810049fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810049fd:	8b 40 38             	mov    0x38(%eax),%eax
81004a00:	85 c0                	test   %eax,%eax
81004a02:	75 0e                	jne    81004a12 <__swbuf_r+0x33>
81004a04:	83 ec 0c             	sub    $0xc,%esp
81004a07:	ff 75 e4             	push   -0x1c(%ebp)
81004a0a:	e8 12 c7 ff ff       	call   81001121 <__sinit>
81004a0f:	83 c4 10             	add    $0x10,%esp
81004a12:	8b 43 18             	mov    0x18(%ebx),%eax
81004a15:	89 43 08             	mov    %eax,0x8(%ebx)
81004a18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a1c:	98                   	cwtl   
81004a1d:	83 e0 08             	and    $0x8,%eax
81004a20:	85 c0                	test   %eax,%eax
81004a22:	74 07                	je     81004a2b <__swbuf_r+0x4c>
81004a24:	8b 43 10             	mov    0x10(%ebx),%eax
81004a27:	85 c0                	test   %eax,%eax
81004a29:	75 1d                	jne    81004a48 <__swbuf_r+0x69>
81004a2b:	83 ec 08             	sub    $0x8,%esp
81004a2e:	53                   	push   %ebx
81004a2f:	ff 75 08             	push   0x8(%ebp)
81004a32:	e8 21 01 00 00       	call   81004b58 <__swsetup_r>
81004a37:	83 c4 10             	add    $0x10,%esp
81004a3a:	85 c0                	test   %eax,%eax
81004a3c:	74 0a                	je     81004a48 <__swbuf_r+0x69>
81004a3e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a43:	e9 a1 00 00 00       	jmp    81004ae9 <__swbuf_r+0x10a>
81004a48:	89 f8                	mov    %edi,%eax
81004a4a:	0f b6 f8             	movzbl %al,%edi
81004a4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a51:	98                   	cwtl   
81004a52:	25 00 20 00 00       	and    $0x2000,%eax
81004a57:	85 c0                	test   %eax,%eax
81004a59:	75 14                	jne    81004a6f <__swbuf_r+0x90>
81004a5b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a5f:	80 cc 20             	or     $0x20,%ah
81004a62:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a66:	8b 43 64             	mov    0x64(%ebx),%eax
81004a69:	80 e4 df             	and    $0xdf,%ah
81004a6c:	89 43 64             	mov    %eax,0x64(%ebx)
81004a6f:	8b 03                	mov    (%ebx),%eax
81004a71:	8b 53 10             	mov    0x10(%ebx),%edx
81004a74:	29 d0                	sub    %edx,%eax
81004a76:	89 c6                	mov    %eax,%esi
81004a78:	8b 43 14             	mov    0x14(%ebx),%eax
81004a7b:	39 c6                	cmp    %eax,%esi
81004a7d:	7c 1f                	jl     81004a9e <__swbuf_r+0xbf>
81004a7f:	83 ec 08             	sub    $0x8,%esp
81004a82:	53                   	push   %ebx
81004a83:	ff 75 08             	push   0x8(%ebp)
81004a86:	e8 93 c1 ff ff       	call   81000c1e <_fflush_r>
81004a8b:	83 c4 10             	add    $0x10,%esp
81004a8e:	85 c0                	test   %eax,%eax
81004a90:	74 07                	je     81004a99 <__swbuf_r+0xba>
81004a92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a97:	eb 50                	jmp    81004ae9 <__swbuf_r+0x10a>
81004a99:	be 00 00 00 00       	mov    $0x0,%esi
81004a9e:	8b 43 08             	mov    0x8(%ebx),%eax
81004aa1:	83 e8 01             	sub    $0x1,%eax
81004aa4:	89 43 08             	mov    %eax,0x8(%ebx)
81004aa7:	8b 03                	mov    (%ebx),%eax
81004aa9:	8d 50 01             	lea    0x1(%eax),%edx
81004aac:	89 13                	mov    %edx,(%ebx)
81004aae:	89 fa                	mov    %edi,%edx
81004ab0:	88 10                	mov    %dl,(%eax)
81004ab2:	83 c6 01             	add    $0x1,%esi
81004ab5:	8b 43 14             	mov    0x14(%ebx),%eax
81004ab8:	39 c6                	cmp    %eax,%esi
81004aba:	74 11                	je     81004acd <__swbuf_r+0xee>
81004abc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ac0:	98                   	cwtl   
81004ac1:	83 e0 01             	and    $0x1,%eax
81004ac4:	85 c0                	test   %eax,%eax
81004ac6:	74 1f                	je     81004ae7 <__swbuf_r+0x108>
81004ac8:	83 ff 0a             	cmp    $0xa,%edi
81004acb:	75 1a                	jne    81004ae7 <__swbuf_r+0x108>
81004acd:	83 ec 08             	sub    $0x8,%esp
81004ad0:	53                   	push   %ebx
81004ad1:	ff 75 08             	push   0x8(%ebp)
81004ad4:	e8 45 c1 ff ff       	call   81000c1e <_fflush_r>
81004ad9:	83 c4 10             	add    $0x10,%esp
81004adc:	85 c0                	test   %eax,%eax
81004ade:	74 07                	je     81004ae7 <__swbuf_r+0x108>
81004ae0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ae5:	eb 02                	jmp    81004ae9 <__swbuf_r+0x10a>
81004ae7:	89 f8                	mov    %edi,%eax
81004ae9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004aec:	5b                   	pop    %ebx
81004aed:	5e                   	pop    %esi
81004aee:	5f                   	pop    %edi
81004aef:	5d                   	pop    %ebp
81004af0:	c3                   	ret    

81004af1 <__swbuf>:
81004af1:	55                   	push   %ebp
81004af2:	89 e5                	mov    %esp,%ebp
81004af4:	83 ec 08             	sub    $0x8,%esp
81004af7:	8b 55 08             	mov    0x8(%ebp),%edx
81004afa:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004afd:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81004b02:	83 ec 04             	sub    $0x4,%esp
81004b05:	51                   	push   %ecx
81004b06:	52                   	push   %edx
81004b07:	50                   	push   %eax
81004b08:	e8 d2 fe ff ff       	call   810049df <__swbuf_r>
81004b0d:	83 c4 10             	add    $0x10,%esp
81004b10:	c9                   	leave  
81004b11:	c3                   	ret    

81004b12 <_write_r>:
81004b12:	55                   	push   %ebp
81004b13:	89 e5                	mov    %esp,%ebp
81004b15:	83 ec 18             	sub    $0x18,%esp
81004b18:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
81004b1f:	00 00 00 
81004b22:	83 ec 04             	sub    $0x4,%esp
81004b25:	ff 75 14             	push   0x14(%ebp)
81004b28:	ff 75 10             	push   0x10(%ebp)
81004b2b:	ff 75 0c             	push   0xc(%ebp)
81004b2e:	e8 25 bc ff ff       	call   81000758 <write>
81004b33:	83 c4 10             	add    $0x10,%esp
81004b36:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b39:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004b3d:	75 14                	jne    81004b53 <_write_r+0x41>
81004b3f:	a1 34 81 00 81       	mov    0x81008134,%eax
81004b44:	85 c0                	test   %eax,%eax
81004b46:	74 0b                	je     81004b53 <_write_r+0x41>
81004b48:	8b 15 34 81 00 81    	mov    0x81008134,%edx
81004b4e:	8b 45 08             	mov    0x8(%ebp),%eax
81004b51:	89 10                	mov    %edx,(%eax)
81004b53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b56:	c9                   	leave  
81004b57:	c3                   	ret    

81004b58 <__swsetup_r>:
81004b58:	55                   	push   %ebp
81004b59:	89 e5                	mov    %esp,%ebp
81004b5b:	53                   	push   %ebx
81004b5c:	83 ec 14             	sub    $0x14,%esp
81004b5f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004b62:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81004b67:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004b6e:	74 18                	je     81004b88 <__swsetup_r+0x30>
81004b70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b73:	8b 40 38             	mov    0x38(%eax),%eax
81004b76:	85 c0                	test   %eax,%eax
81004b78:	75 0e                	jne    81004b88 <__swsetup_r+0x30>
81004b7a:	83 ec 0c             	sub    $0xc,%esp
81004b7d:	ff 75 f4             	push   -0xc(%ebp)
81004b80:	e8 9c c5 ff ff       	call   81001121 <__sinit>
81004b85:	83 c4 10             	add    $0x10,%esp
81004b88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b8c:	98                   	cwtl   
81004b8d:	83 e0 08             	and    $0x8,%eax
81004b90:	85 c0                	test   %eax,%eax
81004b92:	0f 85 82 00 00 00    	jne    81004c1a <__swsetup_r+0xc2>
81004b98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b9c:	98                   	cwtl   
81004b9d:	83 e0 10             	and    $0x10,%eax
81004ba0:	85 c0                	test   %eax,%eax
81004ba2:	75 1e                	jne    81004bc2 <__swsetup_r+0x6a>
81004ba4:	8b 45 08             	mov    0x8(%ebp),%eax
81004ba7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004bad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bb1:	83 c8 40             	or     $0x40,%eax
81004bb4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004bb8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bbd:	e9 ec 00 00 00       	jmp    81004cae <__swsetup_r+0x156>
81004bc2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bc6:	98                   	cwtl   
81004bc7:	83 e0 04             	and    $0x4,%eax
81004bca:	85 c0                	test   %eax,%eax
81004bcc:	74 41                	je     81004c0f <__swsetup_r+0xb7>
81004bce:	8b 43 30             	mov    0x30(%ebx),%eax
81004bd1:	85 c0                	test   %eax,%eax
81004bd3:	74 23                	je     81004bf8 <__swsetup_r+0xa0>
81004bd5:	8b 53 30             	mov    0x30(%ebx),%edx
81004bd8:	8d 43 40             	lea    0x40(%ebx),%eax
81004bdb:	39 c2                	cmp    %eax,%edx
81004bdd:	74 12                	je     81004bf1 <__swsetup_r+0x99>
81004bdf:	8b 43 30             	mov    0x30(%ebx),%eax
81004be2:	83 ec 08             	sub    $0x8,%esp
81004be5:	50                   	push   %eax
81004be6:	ff 75 08             	push   0x8(%ebp)
81004be9:	e8 95 c6 ff ff       	call   81001283 <_free_r>
81004bee:	83 c4 10             	add    $0x10,%esp
81004bf1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004bf8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004bfc:	83 e0 db             	and    $0xffffffdb,%eax
81004bff:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c03:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c0a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c0d:	89 03                	mov    %eax,(%ebx)
81004c0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c13:	83 c8 08             	or     $0x8,%eax
81004c16:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c1a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c1d:	85 c0                	test   %eax,%eax
81004c1f:	75 2b                	jne    81004c4c <__swsetup_r+0xf4>
81004c21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c25:	98                   	cwtl   
81004c26:	25 00 02 00 00       	and    $0x200,%eax
81004c2b:	85 c0                	test   %eax,%eax
81004c2d:	74 0e                	je     81004c3d <__swsetup_r+0xe5>
81004c2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c33:	98                   	cwtl   
81004c34:	25 80 00 00 00       	and    $0x80,%eax
81004c39:	85 c0                	test   %eax,%eax
81004c3b:	74 0f                	je     81004c4c <__swsetup_r+0xf4>
81004c3d:	83 ec 08             	sub    $0x8,%esp
81004c40:	53                   	push   %ebx
81004c41:	ff 75 08             	push   0x8(%ebp)
81004c44:	e8 cf 0c 00 00       	call   81005918 <__smakebuf_r>
81004c49:	83 c4 10             	add    $0x10,%esp
81004c4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c50:	98                   	cwtl   
81004c51:	83 e0 01             	and    $0x1,%eax
81004c54:	85 c0                	test   %eax,%eax
81004c56:	74 11                	je     81004c69 <__swsetup_r+0x111>
81004c58:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004c5f:	8b 43 14             	mov    0x14(%ebx),%eax
81004c62:	f7 d8                	neg    %eax
81004c64:	89 43 18             	mov    %eax,0x18(%ebx)
81004c67:	eb 19                	jmp    81004c82 <__swsetup_r+0x12a>
81004c69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c6d:	98                   	cwtl   
81004c6e:	83 e0 02             	and    $0x2,%eax
81004c71:	85 c0                	test   %eax,%eax
81004c73:	75 05                	jne    81004c7a <__swsetup_r+0x122>
81004c75:	8b 43 14             	mov    0x14(%ebx),%eax
81004c78:	eb 05                	jmp    81004c7f <__swsetup_r+0x127>
81004c7a:	b8 00 00 00 00       	mov    $0x0,%eax
81004c7f:	89 43 08             	mov    %eax,0x8(%ebx)
81004c82:	8b 43 10             	mov    0x10(%ebx),%eax
81004c85:	85 c0                	test   %eax,%eax
81004c87:	75 20                	jne    81004ca9 <__swsetup_r+0x151>
81004c89:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c8d:	98                   	cwtl   
81004c8e:	25 80 00 00 00       	and    $0x80,%eax
81004c93:	85 c0                	test   %eax,%eax
81004c95:	74 12                	je     81004ca9 <__swsetup_r+0x151>
81004c97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c9b:	83 c8 40             	or     $0x40,%eax
81004c9e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004ca2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ca7:	eb 05                	jmp    81004cae <__swsetup_r+0x156>
81004ca9:	b8 00 00 00 00       	mov    $0x0,%eax
81004cae:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004cb1:	c9                   	leave  
81004cb2:	c3                   	ret    

81004cb3 <__call_exitprocs>:
81004cb3:	55                   	push   %ebp
81004cb4:	89 e5                	mov    %esp,%ebp
81004cb6:	57                   	push   %edi
81004cb7:	56                   	push   %esi
81004cb8:	53                   	push   %ebx
81004cb9:	83 ec 1c             	sub    $0x1c,%esp
81004cbc:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81004cc1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004cc7:	a1 20 6d 00 81       	mov    0x81006d20,%eax
81004ccc:	05 48 01 00 00       	add    $0x148,%eax
81004cd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004cd4:	90                   	nop
81004cd5:	85 db                	test   %ebx,%ebx
81004cd7:	0f 84 e1 00 00 00    	je     81004dbe <__call_exitprocs+0x10b>
81004cdd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004ce3:	8b 43 04             	mov    0x4(%ebx),%eax
81004ce6:	8d 70 ff             	lea    -0x1(%eax),%esi
81004ce9:	e9 c6 00 00 00       	jmp    81004db4 <__call_exitprocs+0x101>
81004cee:	b8 01 00 00 00       	mov    $0x1,%eax
81004cf3:	89 f1                	mov    %esi,%ecx
81004cf5:	d3 e0                	shl    %cl,%eax
81004cf7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004cfa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004cfe:	74 17                	je     81004d17 <__call_exitprocs+0x64>
81004d00:	85 ff                	test   %edi,%edi
81004d02:	0f 84 a5 00 00 00    	je     81004dad <__call_exitprocs+0xfa>
81004d08:	8d 46 20             	lea    0x20(%esi),%eax
81004d0b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004d0e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004d11:	0f 85 96 00 00 00    	jne    81004dad <__call_exitprocs+0xfa>
81004d17:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004d1b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004d1e:	8b 43 04             	mov    0x4(%ebx),%eax
81004d21:	83 e8 01             	sub    $0x1,%eax
81004d24:	39 c6                	cmp    %eax,%esi
81004d26:	75 0b                	jne    81004d33 <__call_exitprocs+0x80>
81004d28:	8b 43 04             	mov    0x4(%ebx),%eax
81004d2b:	83 e8 01             	sub    $0x1,%eax
81004d2e:	89 43 04             	mov    %eax,0x4(%ebx)
81004d31:	eb 08                	jmp    81004d3b <__call_exitprocs+0x88>
81004d33:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004d3a:	00 
81004d3b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004d3f:	74 6f                	je     81004db0 <__call_exitprocs+0xfd>
81004d41:	8b 43 04             	mov    0x4(%ebx),%eax
81004d44:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004d47:	85 ff                	test   %edi,%edi
81004d49:	74 0f                	je     81004d5a <__call_exitprocs+0xa7>
81004d4b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004d51:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004d54:	21 d0                	and    %edx,%eax
81004d56:	85 c0                	test   %eax,%eax
81004d58:	75 07                	jne    81004d61 <__call_exitprocs+0xae>
81004d5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004d5d:	ff d0                	call   *%eax
81004d5f:	eb 32                	jmp    81004d93 <__call_exitprocs+0xe0>
81004d61:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004d67:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004d6a:	21 d0                	and    %edx,%eax
81004d6c:	85 c0                	test   %eax,%eax
81004d6e:	75 14                	jne    81004d84 <__call_exitprocs+0xd1>
81004d70:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004d73:	83 ec 08             	sub    $0x8,%esp
81004d76:	50                   	push   %eax
81004d77:	ff 75 08             	push   0x8(%ebp)
81004d7a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004d7d:	ff d0                	call   *%eax
81004d7f:	83 c4 10             	add    $0x10,%esp
81004d82:	eb 0f                	jmp    81004d93 <__call_exitprocs+0xe0>
81004d84:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004d87:	83 ec 0c             	sub    $0xc,%esp
81004d8a:	50                   	push   %eax
81004d8b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004d8e:	ff d0                	call   *%eax
81004d90:	83 c4 10             	add    $0x10,%esp
81004d93:	8b 43 04             	mov    0x4(%ebx),%eax
81004d96:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004d99:	0f 85 1d ff ff ff    	jne    81004cbc <__call_exitprocs+0x9>
81004d9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004da2:	8b 00                	mov    (%eax),%eax
81004da4:	39 c3                	cmp    %eax,%ebx
81004da6:	74 09                	je     81004db1 <__call_exitprocs+0xfe>
81004da8:	e9 0f ff ff ff       	jmp    81004cbc <__call_exitprocs+0x9>
81004dad:	90                   	nop
81004dae:	eb 01                	jmp    81004db1 <__call_exitprocs+0xfe>
81004db0:	90                   	nop
81004db1:	83 ee 01             	sub    $0x1,%esi
81004db4:	85 f6                	test   %esi,%esi
81004db6:	0f 89 32 ff ff ff    	jns    81004cee <__call_exitprocs+0x3b>
81004dbc:	eb 01                	jmp    81004dbf <__call_exitprocs+0x10c>
81004dbe:	90                   	nop
81004dbf:	90                   	nop
81004dc0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004dc3:	5b                   	pop    %ebx
81004dc4:	5e                   	pop    %esi
81004dc5:	5f                   	pop    %edi
81004dc6:	5d                   	pop    %ebp
81004dc7:	c3                   	ret    

81004dc8 <_close_r>:
81004dc8:	55                   	push   %ebp
81004dc9:	89 e5                	mov    %esp,%ebp
81004dcb:	83 ec 18             	sub    $0x18,%esp
81004dce:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
81004dd5:	00 00 00 
81004dd8:	83 ec 0c             	sub    $0xc,%esp
81004ddb:	ff 75 0c             	push   0xc(%ebp)
81004dde:	e8 a2 b9 ff ff       	call   81000785 <close>
81004de3:	83 c4 10             	add    $0x10,%esp
81004de6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004de9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004ded:	75 14                	jne    81004e03 <_close_r+0x3b>
81004def:	a1 34 81 00 81       	mov    0x81008134,%eax
81004df4:	85 c0                	test   %eax,%eax
81004df6:	74 0b                	je     81004e03 <_close_r+0x3b>
81004df8:	8b 15 34 81 00 81    	mov    0x81008134,%edx
81004dfe:	8b 45 08             	mov    0x8(%ebp),%eax
81004e01:	89 10                	mov    %edx,(%eax)
81004e03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e06:	c9                   	leave  
81004e07:	c3                   	ret    

81004e08 <__errno>:
81004e08:	55                   	push   %ebp
81004e09:	89 e5                	mov    %esp,%ebp
81004e0b:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81004e10:	5d                   	pop    %ebp
81004e11:	c3                   	ret    

81004e12 <_fclose_r>:
81004e12:	55                   	push   %ebp
81004e13:	89 e5                	mov    %esp,%ebp
81004e15:	53                   	push   %ebx
81004e16:	83 ec 14             	sub    $0x14,%esp
81004e19:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004e1c:	85 db                	test   %ebx,%ebx
81004e1e:	75 0a                	jne    81004e2a <_fclose_r+0x18>
81004e20:	b8 00 00 00 00       	mov    $0x0,%eax
81004e25:	e9 ea 00 00 00       	jmp    81004f14 <_fclose_r+0x102>
81004e2a:	8b 45 08             	mov    0x8(%ebp),%eax
81004e2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e30:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e34:	74 18                	je     81004e4e <_fclose_r+0x3c>
81004e36:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e39:	8b 40 38             	mov    0x38(%eax),%eax
81004e3c:	85 c0                	test   %eax,%eax
81004e3e:	75 0e                	jne    81004e4e <_fclose_r+0x3c>
81004e40:	83 ec 0c             	sub    $0xc,%esp
81004e43:	ff 75 f0             	push   -0x10(%ebp)
81004e46:	e8 d6 c2 ff ff       	call   81001121 <__sinit>
81004e4b:	83 c4 10             	add    $0x10,%esp
81004e4e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004e52:	66 85 c0             	test   %ax,%ax
81004e55:	75 0a                	jne    81004e61 <_fclose_r+0x4f>
81004e57:	b8 00 00 00 00       	mov    $0x0,%eax
81004e5c:	e9 b3 00 00 00       	jmp    81004f14 <_fclose_r+0x102>
81004e61:	83 ec 08             	sub    $0x8,%esp
81004e64:	53                   	push   %ebx
81004e65:	ff 75 08             	push   0x8(%ebp)
81004e68:	e8 8b bb ff ff       	call   810009f8 <__sflush_r>
81004e6d:	83 c4 10             	add    $0x10,%esp
81004e70:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e73:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004e76:	85 c0                	test   %eax,%eax
81004e78:	74 1d                	je     81004e97 <_fclose_r+0x85>
81004e7a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004e7d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004e80:	83 ec 08             	sub    $0x8,%esp
81004e83:	52                   	push   %edx
81004e84:	ff 75 08             	push   0x8(%ebp)
81004e87:	ff d0                	call   *%eax
81004e89:	83 c4 10             	add    $0x10,%esp
81004e8c:	85 c0                	test   %eax,%eax
81004e8e:	79 07                	jns    81004e97 <_fclose_r+0x85>
81004e90:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004e97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004e9b:	98                   	cwtl   
81004e9c:	25 80 00 00 00       	and    $0x80,%eax
81004ea1:	85 c0                	test   %eax,%eax
81004ea3:	74 12                	je     81004eb7 <_fclose_r+0xa5>
81004ea5:	8b 43 10             	mov    0x10(%ebx),%eax
81004ea8:	83 ec 08             	sub    $0x8,%esp
81004eab:	50                   	push   %eax
81004eac:	ff 75 08             	push   0x8(%ebp)
81004eaf:	e8 cf c3 ff ff       	call   81001283 <_free_r>
81004eb4:	83 c4 10             	add    $0x10,%esp
81004eb7:	8b 43 30             	mov    0x30(%ebx),%eax
81004eba:	85 c0                	test   %eax,%eax
81004ebc:	74 23                	je     81004ee1 <_fclose_r+0xcf>
81004ebe:	8b 53 30             	mov    0x30(%ebx),%edx
81004ec1:	8d 43 40             	lea    0x40(%ebx),%eax
81004ec4:	39 c2                	cmp    %eax,%edx
81004ec6:	74 12                	je     81004eda <_fclose_r+0xc8>
81004ec8:	8b 43 30             	mov    0x30(%ebx),%eax
81004ecb:	83 ec 08             	sub    $0x8,%esp
81004ece:	50                   	push   %eax
81004ecf:	ff 75 08             	push   0x8(%ebp)
81004ed2:	e8 ac c3 ff ff       	call   81001283 <_free_r>
81004ed7:	83 c4 10             	add    $0x10,%esp
81004eda:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004ee1:	8b 43 44             	mov    0x44(%ebx),%eax
81004ee4:	85 c0                	test   %eax,%eax
81004ee6:	74 19                	je     81004f01 <_fclose_r+0xef>
81004ee8:	8b 43 44             	mov    0x44(%ebx),%eax
81004eeb:	83 ec 08             	sub    $0x8,%esp
81004eee:	50                   	push   %eax
81004eef:	ff 75 08             	push   0x8(%ebp)
81004ef2:	e8 8c c3 ff ff       	call   81001283 <_free_r>
81004ef7:	83 c4 10             	add    $0x10,%esp
81004efa:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004f01:	e8 b4 c2 ff ff       	call   810011ba <__sfp_lock_acquire>
81004f06:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004f0c:	e8 af c2 ff ff       	call   810011c0 <__sfp_lock_release>
81004f11:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f14:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004f17:	c9                   	leave  
81004f18:	c3                   	ret    

81004f19 <fclose>:
81004f19:	55                   	push   %ebp
81004f1a:	89 e5                	mov    %esp,%ebp
81004f1c:	83 ec 08             	sub    $0x8,%esp
81004f1f:	8b 55 08             	mov    0x8(%ebp),%edx
81004f22:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81004f27:	83 ec 08             	sub    $0x8,%esp
81004f2a:	52                   	push   %edx
81004f2b:	50                   	push   %eax
81004f2c:	e8 e1 fe ff ff       	call   81004e12 <_fclose_r>
81004f31:	83 c4 10             	add    $0x10,%esp
81004f34:	c9                   	leave  
81004f35:	c3                   	ret    

81004f36 <_fputc_r>:
81004f36:	55                   	push   %ebp
81004f37:	89 e5                	mov    %esp,%ebp
81004f39:	83 ec 18             	sub    $0x18,%esp
81004f3c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f3f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f42:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f46:	74 18                	je     81004f60 <_fputc_r+0x2a>
81004f48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f4b:	8b 40 38             	mov    0x38(%eax),%eax
81004f4e:	85 c0                	test   %eax,%eax
81004f50:	75 0e                	jne    81004f60 <_fputc_r+0x2a>
81004f52:	83 ec 0c             	sub    $0xc,%esp
81004f55:	ff 75 f4             	push   -0xc(%ebp)
81004f58:	e8 c4 c1 ff ff       	call   81001121 <__sinit>
81004f5d:	83 c4 10             	add    $0x10,%esp
81004f60:	83 ec 04             	sub    $0x4,%esp
81004f63:	ff 75 10             	push   0x10(%ebp)
81004f66:	ff 75 0c             	push   0xc(%ebp)
81004f69:	ff 75 08             	push   0x8(%ebp)
81004f6c:	e8 b2 0c 00 00       	call   81005c23 <_putc_r>
81004f71:	83 c4 10             	add    $0x10,%esp
81004f74:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f77:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004f7a:	c9                   	leave  
81004f7b:	c3                   	ret    

81004f7c <fputc>:
81004f7c:	55                   	push   %ebp
81004f7d:	89 e5                	mov    %esp,%ebp
81004f7f:	83 ec 18             	sub    $0x18,%esp
81004f82:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81004f87:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f8a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f90:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004f94:	74 18                	je     81004fae <fputc+0x32>
81004f96:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004f99:	8b 40 38             	mov    0x38(%eax),%eax
81004f9c:	85 c0                	test   %eax,%eax
81004f9e:	75 0e                	jne    81004fae <fputc+0x32>
81004fa0:	83 ec 0c             	sub    $0xc,%esp
81004fa3:	ff 75 f0             	push   -0x10(%ebp)
81004fa6:	e8 76 c1 ff ff       	call   81001121 <__sinit>
81004fab:	83 c4 10             	add    $0x10,%esp
81004fae:	83 ec 04             	sub    $0x4,%esp
81004fb1:	ff 75 0c             	push   0xc(%ebp)
81004fb4:	ff 75 08             	push   0x8(%ebp)
81004fb7:	ff 75 f4             	push   -0xc(%ebp)
81004fba:	e8 64 0c 00 00       	call   81005c23 <_putc_r>
81004fbf:	83 c4 10             	add    $0x10,%esp
81004fc2:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fc5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004fc8:	c9                   	leave  
81004fc9:	c3                   	ret    

81004fca <_fputs_r>:
81004fca:	55                   	push   %ebp
81004fcb:	89 e5                	mov    %esp,%ebp
81004fcd:	83 ec 28             	sub    $0x28,%esp
81004fd0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fd3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004fd6:	83 ec 0c             	sub    $0xc,%esp
81004fd9:	ff 75 0c             	push   0xc(%ebp)
81004fdc:	e8 1f f6 ff ff       	call   81004600 <strlen>
81004fe1:	83 c4 10             	add    $0x10,%esp
81004fe4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004fe7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004fea:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004fed:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004ff0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004ff3:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81004ffa:	8b 45 08             	mov    0x8(%ebp),%eax
81004ffd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005000:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005004:	74 18                	je     8100501e <_fputs_r+0x54>
81005006:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005009:	8b 40 38             	mov    0x38(%eax),%eax
8100500c:	85 c0                	test   %eax,%eax
8100500e:	75 0e                	jne    8100501e <_fputs_r+0x54>
81005010:	83 ec 0c             	sub    $0xc,%esp
81005013:	ff 75 f4             	push   -0xc(%ebp)
81005016:	e8 06 c1 ff ff       	call   81001121 <__sinit>
8100501b:	83 c4 10             	add    $0x10,%esp
8100501e:	8b 45 10             	mov    0x10(%ebp),%eax
81005021:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005025:	98                   	cwtl   
81005026:	25 00 20 00 00       	and    $0x2000,%eax
8100502b:	85 c0                	test   %eax,%eax
8100502d:	75 24                	jne    81005053 <_fputs_r+0x89>
8100502f:	8b 45 10             	mov    0x10(%ebp),%eax
81005032:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005036:	80 cc 20             	or     $0x20,%ah
81005039:	89 c2                	mov    %eax,%edx
8100503b:	8b 45 10             	mov    0x10(%ebp),%eax
8100503e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005042:	8b 45 10             	mov    0x10(%ebp),%eax
81005045:	8b 40 64             	mov    0x64(%eax),%eax
81005048:	80 e4 df             	and    $0xdf,%ah
8100504b:	89 c2                	mov    %eax,%edx
8100504d:	8b 45 10             	mov    0x10(%ebp),%eax
81005050:	89 50 64             	mov    %edx,0x64(%eax)
81005053:	83 ec 04             	sub    $0x4,%esp
81005056:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81005059:	50                   	push   %eax
8100505a:	ff 75 10             	push   0x10(%ebp)
8100505d:	ff 75 08             	push   0x8(%ebp)
81005060:	e8 df 01 00 00       	call   81005244 <__sfvwrite_r>
81005065:	83 c4 10             	add    $0x10,%esp
81005068:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100506b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100506e:	c9                   	leave  
8100506f:	c3                   	ret    

81005070 <fputs>:
81005070:	55                   	push   %ebp
81005071:	89 e5                	mov    %esp,%ebp
81005073:	83 ec 08             	sub    $0x8,%esp
81005076:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100507b:	83 ec 04             	sub    $0x4,%esp
8100507e:	ff 75 0c             	push   0xc(%ebp)
81005081:	ff 75 08             	push   0x8(%ebp)
81005084:	50                   	push   %eax
81005085:	e8 40 ff ff ff       	call   81004fca <_fputs_r>
8100508a:	83 c4 10             	add    $0x10,%esp
8100508d:	c9                   	leave  
8100508e:	c3                   	ret    

8100508f <__sputc_r>:
8100508f:	55                   	push   %ebp
81005090:	89 e5                	mov    %esp,%ebp
81005092:	83 ec 08             	sub    $0x8,%esp
81005095:	8b 45 10             	mov    0x10(%ebp),%eax
81005098:	8b 40 08             	mov    0x8(%eax),%eax
8100509b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100509e:	8b 45 10             	mov    0x10(%ebp),%eax
810050a1:	89 50 08             	mov    %edx,0x8(%eax)
810050a4:	8b 45 10             	mov    0x10(%ebp),%eax
810050a7:	8b 40 08             	mov    0x8(%eax),%eax
810050aa:	85 c0                	test   %eax,%eax
810050ac:	79 17                	jns    810050c5 <__sputc_r+0x36>
810050ae:	8b 45 10             	mov    0x10(%ebp),%eax
810050b1:	8b 50 08             	mov    0x8(%eax),%edx
810050b4:	8b 45 10             	mov    0x10(%ebp),%eax
810050b7:	8b 40 18             	mov    0x18(%eax),%eax
810050ba:	39 c2                	cmp    %eax,%edx
810050bc:	7c 21                	jl     810050df <__sputc_r+0x50>
810050be:	8b 45 0c             	mov    0xc(%ebp),%eax
810050c1:	3c 0a                	cmp    $0xa,%al
810050c3:	74 1a                	je     810050df <__sputc_r+0x50>
810050c5:	8b 45 10             	mov    0x10(%ebp),%eax
810050c8:	8b 00                	mov    (%eax),%eax
810050ca:	8d 48 01             	lea    0x1(%eax),%ecx
810050cd:	8b 55 10             	mov    0x10(%ebp),%edx
810050d0:	89 0a                	mov    %ecx,(%edx)
810050d2:	8b 55 0c             	mov    0xc(%ebp),%edx
810050d5:	88 10                	mov    %dl,(%eax)
810050d7:	0f b6 00             	movzbl (%eax),%eax
810050da:	0f b6 c0             	movzbl %al,%eax
810050dd:	eb 14                	jmp    810050f3 <__sputc_r+0x64>
810050df:	83 ec 04             	sub    $0x4,%esp
810050e2:	ff 75 10             	push   0x10(%ebp)
810050e5:	ff 75 0c             	push   0xc(%ebp)
810050e8:	ff 75 08             	push   0x8(%ebp)
810050eb:	e8 ef f8 ff ff       	call   810049df <__swbuf_r>
810050f0:	83 c4 10             	add    $0x10,%esp
810050f3:	c9                   	leave  
810050f4:	c3                   	ret    

810050f5 <__fputwc>:
810050f5:	55                   	push   %ebp
810050f6:	89 e5                	mov    %esp,%ebp
810050f8:	83 ec 18             	sub    $0x18,%esp
810050fb:	e8 9f 07 00 00       	call   8100589f <__locale_mb_cur_max>
81005100:	83 f8 01             	cmp    $0x1,%eax
81005103:	75 1e                	jne    81005123 <__fputwc+0x2e>
81005105:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005109:	7e 18                	jle    81005123 <__fputwc+0x2e>
8100510b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81005112:	7f 0f                	jg     81005123 <__fputwc+0x2e>
81005114:	8b 45 0c             	mov    0xc(%ebp),%eax
81005117:	88 45 ef             	mov    %al,-0x11(%ebp)
8100511a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81005121:	eb 3c                	jmp    8100515f <__fputwc+0x6a>
81005123:	8b 45 10             	mov    0x10(%ebp),%eax
81005126:	83 c0 5c             	add    $0x5c,%eax
81005129:	50                   	push   %eax
8100512a:	ff 75 0c             	push   0xc(%ebp)
8100512d:	8d 45 ef             	lea    -0x11(%ebp),%eax
81005130:	50                   	push   %eax
81005131:	ff 75 08             	push   0x8(%ebp)
81005134:	e8 36 17 00 00       	call   8100686f <_wcrtomb_r>
81005139:	83 c4 10             	add    $0x10,%esp
8100513c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100513f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81005143:	75 1a                	jne    8100515f <__fputwc+0x6a>
81005145:	8b 45 10             	mov    0x10(%ebp),%eax
81005148:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100514c:	83 c8 40             	or     $0x40,%eax
8100514f:	89 c2                	mov    %eax,%edx
81005151:	8b 45 10             	mov    0x10(%ebp),%eax
81005154:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005158:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100515d:	eb 44                	jmp    810051a3 <__fputwc+0xae>
8100515f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005166:	eb 30                	jmp    81005198 <__fputwc+0xa3>
81005168:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100516b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100516e:	01 d0                	add    %edx,%eax
81005170:	0f b6 00             	movzbl (%eax),%eax
81005173:	0f b6 c0             	movzbl %al,%eax
81005176:	83 ec 04             	sub    $0x4,%esp
81005179:	ff 75 10             	push   0x10(%ebp)
8100517c:	50                   	push   %eax
8100517d:	ff 75 08             	push   0x8(%ebp)
81005180:	e8 0a ff ff ff       	call   8100508f <__sputc_r>
81005185:	83 c4 10             	add    $0x10,%esp
81005188:	83 f8 ff             	cmp    $0xffffffff,%eax
8100518b:	75 07                	jne    81005194 <__fputwc+0x9f>
8100518d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005192:	eb 0f                	jmp    810051a3 <__fputwc+0xae>
81005194:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005198:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100519b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100519e:	72 c8                	jb     81005168 <__fputwc+0x73>
810051a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810051a3:	c9                   	leave  
810051a4:	c3                   	ret    

810051a5 <_fputwc_r>:
810051a5:	55                   	push   %ebp
810051a6:	89 e5                	mov    %esp,%ebp
810051a8:	83 ec 18             	sub    $0x18,%esp
810051ab:	8b 45 10             	mov    0x10(%ebp),%eax
810051ae:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051b2:	98                   	cwtl   
810051b3:	25 00 20 00 00       	and    $0x2000,%eax
810051b8:	85 c0                	test   %eax,%eax
810051ba:	75 24                	jne    810051e0 <_fputwc_r+0x3b>
810051bc:	8b 45 10             	mov    0x10(%ebp),%eax
810051bf:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051c3:	80 cc 20             	or     $0x20,%ah
810051c6:	89 c2                	mov    %eax,%edx
810051c8:	8b 45 10             	mov    0x10(%ebp),%eax
810051cb:	66 89 50 0c          	mov    %dx,0xc(%eax)
810051cf:	8b 45 10             	mov    0x10(%ebp),%eax
810051d2:	8b 40 64             	mov    0x64(%eax),%eax
810051d5:	80 cc 20             	or     $0x20,%ah
810051d8:	89 c2                	mov    %eax,%edx
810051da:	8b 45 10             	mov    0x10(%ebp),%eax
810051dd:	89 50 64             	mov    %edx,0x64(%eax)
810051e0:	83 ec 04             	sub    $0x4,%esp
810051e3:	ff 75 10             	push   0x10(%ebp)
810051e6:	ff 75 0c             	push   0xc(%ebp)
810051e9:	ff 75 08             	push   0x8(%ebp)
810051ec:	e8 04 ff ff ff       	call   810050f5 <__fputwc>
810051f1:	83 c4 10             	add    $0x10,%esp
810051f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810051f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051fa:	c9                   	leave  
810051fb:	c3                   	ret    

810051fc <fputwc>:
810051fc:	55                   	push   %ebp
810051fd:	89 e5                	mov    %esp,%ebp
810051ff:	83 ec 18             	sub    $0x18,%esp
81005202:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81005207:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100520a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100520d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005210:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005214:	74 18                	je     8100522e <fputwc+0x32>
81005216:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005219:	8b 40 38             	mov    0x38(%eax),%eax
8100521c:	85 c0                	test   %eax,%eax
8100521e:	75 0e                	jne    8100522e <fputwc+0x32>
81005220:	83 ec 0c             	sub    $0xc,%esp
81005223:	ff 75 f0             	push   -0x10(%ebp)
81005226:	e8 f6 be ff ff       	call   81001121 <__sinit>
8100522b:	83 c4 10             	add    $0x10,%esp
8100522e:	83 ec 04             	sub    $0x4,%esp
81005231:	ff 75 0c             	push   0xc(%ebp)
81005234:	ff 75 08             	push   0x8(%ebp)
81005237:	ff 75 f4             	push   -0xc(%ebp)
8100523a:	e8 66 ff ff ff       	call   810051a5 <_fputwc_r>
8100523f:	83 c4 10             	add    $0x10,%esp
81005242:	c9                   	leave  
81005243:	c3                   	ret    

81005244 <__sfvwrite_r>:
81005244:	55                   	push   %ebp
81005245:	89 e5                	mov    %esp,%ebp
81005247:	57                   	push   %edi
81005248:	56                   	push   %esi
81005249:	53                   	push   %ebx
8100524a:	83 ec 3c             	sub    $0x3c,%esp
8100524d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005250:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81005257:	8b 45 10             	mov    0x10(%ebp),%eax
8100525a:	8b 78 08             	mov    0x8(%eax),%edi
8100525d:	85 ff                	test   %edi,%edi
8100525f:	75 0a                	jne    8100526b <__sfvwrite_r+0x27>
81005261:	b8 00 00 00 00       	mov    $0x0,%eax
81005266:	e9 6f 04 00 00       	jmp    810056da <__sfvwrite_r+0x496>
8100526b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100526f:	98                   	cwtl   
81005270:	83 e0 08             	and    $0x8,%eax
81005273:	85 c0                	test   %eax,%eax
81005275:	74 07                	je     8100527e <__sfvwrite_r+0x3a>
81005277:	8b 43 10             	mov    0x10(%ebx),%eax
8100527a:	85 c0                	test   %eax,%eax
8100527c:	75 1d                	jne    8100529b <__sfvwrite_r+0x57>
8100527e:	83 ec 08             	sub    $0x8,%esp
81005281:	53                   	push   %ebx
81005282:	ff 75 08             	push   0x8(%ebp)
81005285:	e8 ce f8 ff ff       	call   81004b58 <__swsetup_r>
8100528a:	83 c4 10             	add    $0x10,%esp
8100528d:	85 c0                	test   %eax,%eax
8100528f:	74 0a                	je     8100529b <__sfvwrite_r+0x57>
81005291:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005296:	e9 3f 04 00 00       	jmp    810056da <__sfvwrite_r+0x496>
8100529b:	8b 45 10             	mov    0x10(%ebp),%eax
8100529e:	8b 00                	mov    (%eax),%eax
810052a0:	89 45 c0             	mov    %eax,-0x40(%ebp)
810052a3:	bf 00 00 00 00       	mov    $0x0,%edi
810052a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ac:	98                   	cwtl   
810052ad:	83 e0 02             	and    $0x2,%eax
810052b0:	85 c0                	test   %eax,%eax
810052b2:	74 68                	je     8100531c <__sfvwrite_r+0xd8>
810052b4:	eb 11                	jmp    810052c7 <__sfvwrite_r+0x83>
810052b6:	8b 45 c0             	mov    -0x40(%ebp),%eax
810052b9:	8b 08                	mov    (%eax),%ecx
810052bb:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810052be:	8b 78 04             	mov    0x4(%eax),%edi
810052c1:	83 c0 08             	add    $0x8,%eax
810052c4:	89 45 c0             	mov    %eax,-0x40(%ebp)
810052c7:	85 ff                	test   %edi,%edi
810052c9:	74 eb                	je     810052b6 <__sfvwrite_r+0x72>
810052cb:	8b 4b 24             	mov    0x24(%ebx),%ecx
810052ce:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810052d3:	39 c7                	cmp    %eax,%edi
810052d5:	0f 46 c7             	cmovbe %edi,%eax
810052d8:	89 c2                	mov    %eax,%edx
810052da:	8b 43 1c             	mov    0x1c(%ebx),%eax
810052dd:	52                   	push   %edx
810052de:	ff 75 c4             	push   -0x3c(%ebp)
810052e1:	50                   	push   %eax
810052e2:	ff 75 08             	push   0x8(%ebp)
810052e5:	ff d1                	call   *%ecx
810052e7:	83 c4 10             	add    $0x10,%esp
810052ea:	89 c6                	mov    %eax,%esi
810052ec:	85 f6                	test   %esi,%esi
810052ee:	0f 8e cf 03 00 00    	jle    810056c3 <__sfvwrite_r+0x47f>
810052f4:	89 f0                	mov    %esi,%eax
810052f6:	01 45 c4             	add    %eax,-0x3c(%ebp)
810052f9:	89 f0                	mov    %esi,%eax
810052fb:	29 c7                	sub    %eax,%edi
810052fd:	8b 45 10             	mov    0x10(%ebp),%eax
81005300:	8b 40 08             	mov    0x8(%eax),%eax
81005303:	89 f2                	mov    %esi,%edx
81005305:	29 d0                	sub    %edx,%eax
81005307:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100530a:	89 41 08             	mov    %eax,0x8(%ecx)
8100530d:	8b 45 10             	mov    0x10(%ebp),%eax
81005310:	8b 40 08             	mov    0x8(%eax),%eax
81005313:	85 c0                	test   %eax,%eax
81005315:	75 b0                	jne    810052c7 <__sfvwrite_r+0x83>
81005317:	e9 a0 03 00 00       	jmp    810056bc <__sfvwrite_r+0x478>
8100531c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005320:	98                   	cwtl   
81005321:	83 e0 01             	and    $0x1,%eax
81005324:	85 c0                	test   %eax,%eax
81005326:	0f 85 44 02 00 00    	jne    81005570 <__sfvwrite_r+0x32c>
8100532c:	eb 11                	jmp    8100533f <__sfvwrite_r+0xfb>
8100532e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005331:	8b 08                	mov    (%eax),%ecx
81005333:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81005336:	8b 78 04             	mov    0x4(%eax),%edi
81005339:	83 c0 08             	add    $0x8,%eax
8100533c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100533f:	85 ff                	test   %edi,%edi
81005341:	74 eb                	je     8100532e <__sfvwrite_r+0xea>
81005343:	8b 73 08             	mov    0x8(%ebx),%esi
81005346:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100534a:	98                   	cwtl   
8100534b:	25 00 02 00 00       	and    $0x200,%eax
81005350:	85 c0                	test   %eax,%eax
81005352:	0f 84 4f 01 00 00    	je     810054a7 <__sfvwrite_r+0x263>
81005358:	89 f0                	mov    %esi,%eax
8100535a:	39 c7                	cmp    %eax,%edi
8100535c:	0f 82 12 01 00 00    	jb     81005474 <__sfvwrite_r+0x230>
81005362:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005366:	98                   	cwtl   
81005367:	25 80 04 00 00       	and    $0x480,%eax
8100536c:	85 c0                	test   %eax,%eax
8100536e:	0f 84 00 01 00 00    	je     81005474 <__sfvwrite_r+0x230>
81005374:	8b 03                	mov    (%ebx),%eax
81005376:	8b 53 10             	mov    0x10(%ebx),%edx
81005379:	29 d0                	sub    %edx,%eax
8100537b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100537e:	8b 53 14             	mov    0x14(%ebx),%edx
81005381:	89 d0                	mov    %edx,%eax
81005383:	01 c0                	add    %eax,%eax
81005385:	01 d0                	add    %edx,%eax
81005387:	89 c2                	mov    %eax,%edx
81005389:	c1 ea 1f             	shr    $0x1f,%edx
8100538c:	01 d0                	add    %edx,%eax
8100538e:	d1 f8                	sar    %eax
81005390:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005393:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005396:	01 f8                	add    %edi,%eax
81005398:	8d 50 01             	lea    0x1(%eax),%edx
8100539b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100539e:	39 c2                	cmp    %eax,%edx
810053a0:	76 0b                	jbe    810053ad <__sfvwrite_r+0x169>
810053a2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810053a5:	01 f8                	add    %edi,%eax
810053a7:	83 c0 01             	add    $0x1,%eax
810053aa:	89 45 d8             	mov    %eax,-0x28(%ebp)
810053ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053b1:	98                   	cwtl   
810053b2:	25 00 04 00 00       	and    $0x400,%eax
810053b7:	85 c0                	test   %eax,%eax
810053b9:	74 4f                	je     8100540a <__sfvwrite_r+0x1c6>
810053bb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810053be:	83 ec 08             	sub    $0x8,%esp
810053c1:	50                   	push   %eax
810053c2:	ff 75 08             	push   0x8(%ebp)
810053c5:	e8 69 d6 ff ff       	call   81002a33 <_malloc_r>
810053ca:	83 c4 10             	add    $0x10,%esp
810053cd:	89 45 dc             	mov    %eax,-0x24(%ebp)
810053d0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810053d4:	75 0e                	jne    810053e4 <__sfvwrite_r+0x1a0>
810053d6:	8b 45 08             	mov    0x8(%ebp),%eax
810053d9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810053df:	e9 e6 02 00 00       	jmp    810056ca <__sfvwrite_r+0x486>
810053e4:	8b 55 d0             	mov    -0x30(%ebp),%edx
810053e7:	8b 43 10             	mov    0x10(%ebx),%eax
810053ea:	83 ec 04             	sub    $0x4,%esp
810053ed:	52                   	push   %edx
810053ee:	50                   	push   %eax
810053ef:	ff 75 dc             	push   -0x24(%ebp)
810053f2:	e8 51 df ff ff       	call   81003348 <memcpy>
810053f7:	83 c4 10             	add    $0x10,%esp
810053fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053fe:	66 25 7f fb          	and    $0xfb7f,%ax
81005402:	0c 80                	or     $0x80,%al
81005404:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005408:	eb 49                	jmp    81005453 <__sfvwrite_r+0x20f>
8100540a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100540d:	8b 43 10             	mov    0x10(%ebx),%eax
81005410:	83 ec 04             	sub    $0x4,%esp
81005413:	52                   	push   %edx
81005414:	50                   	push   %eax
81005415:	ff 75 08             	push   0x8(%ebp)
81005418:	e8 ea 08 00 00       	call   81005d07 <_realloc_r>
8100541d:	83 c4 10             	add    $0x10,%esp
81005420:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005423:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005427:	75 2a                	jne    81005453 <__sfvwrite_r+0x20f>
81005429:	8b 43 10             	mov    0x10(%ebx),%eax
8100542c:	83 ec 08             	sub    $0x8,%esp
8100542f:	50                   	push   %eax
81005430:	ff 75 08             	push   0x8(%ebp)
81005433:	e8 4b be ff ff       	call   81001283 <_free_r>
81005438:	83 c4 10             	add    $0x10,%esp
8100543b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100543f:	24 7f                	and    $0x7f,%al
81005441:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005445:	8b 45 08             	mov    0x8(%ebp),%eax
81005448:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100544e:	e9 77 02 00 00       	jmp    810056ca <__sfvwrite_r+0x486>
81005453:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005456:	89 43 10             	mov    %eax,0x10(%ebx)
81005459:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100545c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100545f:	01 d0                	add    %edx,%eax
81005461:	89 03                	mov    %eax,(%ebx)
81005463:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005466:	89 43 14             	mov    %eax,0x14(%ebx)
81005469:	89 fe                	mov    %edi,%esi
8100546b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100546e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005471:	89 43 08             	mov    %eax,0x8(%ebx)
81005474:	89 f0                	mov    %esi,%eax
81005476:	39 c7                	cmp    %eax,%edi
81005478:	73 02                	jae    8100547c <__sfvwrite_r+0x238>
8100547a:	89 fe                	mov    %edi,%esi
8100547c:	89 f2                	mov    %esi,%edx
8100547e:	8b 03                	mov    (%ebx),%eax
81005480:	83 ec 04             	sub    $0x4,%esp
81005483:	52                   	push   %edx
81005484:	ff 75 c4             	push   -0x3c(%ebp)
81005487:	50                   	push   %eax
81005488:	e8 a3 06 00 00       	call   81005b30 <memmove>
8100548d:	83 c4 10             	add    $0x10,%esp
81005490:	8b 43 08             	mov    0x8(%ebx),%eax
81005493:	29 f0                	sub    %esi,%eax
81005495:	89 43 08             	mov    %eax,0x8(%ebx)
81005498:	8b 03                	mov    (%ebx),%eax
8100549a:	89 f2                	mov    %esi,%edx
8100549c:	01 d0                	add    %edx,%eax
8100549e:	89 03                	mov    %eax,(%ebx)
810054a0:	89 fe                	mov    %edi,%esi
810054a2:	e9 9d 00 00 00       	jmp    81005544 <__sfvwrite_r+0x300>
810054a7:	8b 13                	mov    (%ebx),%edx
810054a9:	8b 43 10             	mov    0x10(%ebx),%eax
810054ac:	39 c2                	cmp    %eax,%edx
810054ae:	77 07                	ja     810054b7 <__sfvwrite_r+0x273>
810054b0:	8b 43 14             	mov    0x14(%ebx),%eax
810054b3:	39 c7                	cmp    %eax,%edi
810054b5:	73 4c                	jae    81005503 <__sfvwrite_r+0x2bf>
810054b7:	89 f0                	mov    %esi,%eax
810054b9:	39 c7                	cmp    %eax,%edi
810054bb:	0f 46 c7             	cmovbe %edi,%eax
810054be:	89 c6                	mov    %eax,%esi
810054c0:	89 f2                	mov    %esi,%edx
810054c2:	8b 03                	mov    (%ebx),%eax
810054c4:	83 ec 04             	sub    $0x4,%esp
810054c7:	52                   	push   %edx
810054c8:	ff 75 c4             	push   -0x3c(%ebp)
810054cb:	50                   	push   %eax
810054cc:	e8 5f 06 00 00       	call   81005b30 <memmove>
810054d1:	83 c4 10             	add    $0x10,%esp
810054d4:	8b 43 08             	mov    0x8(%ebx),%eax
810054d7:	29 f0                	sub    %esi,%eax
810054d9:	89 43 08             	mov    %eax,0x8(%ebx)
810054dc:	8b 03                	mov    (%ebx),%eax
810054de:	89 f2                	mov    %esi,%edx
810054e0:	01 d0                	add    %edx,%eax
810054e2:	89 03                	mov    %eax,(%ebx)
810054e4:	8b 43 08             	mov    0x8(%ebx),%eax
810054e7:	85 c0                	test   %eax,%eax
810054e9:	75 58                	jne    81005543 <__sfvwrite_r+0x2ff>
810054eb:	83 ec 08             	sub    $0x8,%esp
810054ee:	53                   	push   %ebx
810054ef:	ff 75 08             	push   0x8(%ebp)
810054f2:	e8 27 b7 ff ff       	call   81000c1e <_fflush_r>
810054f7:	83 c4 10             	add    $0x10,%esp
810054fa:	85 c0                	test   %eax,%eax
810054fc:	74 45                	je     81005543 <__sfvwrite_r+0x2ff>
810054fe:	e9 c7 01 00 00       	jmp    810056ca <__sfvwrite_r+0x486>
81005503:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005509:	77 04                	ja     8100550f <__sfvwrite_r+0x2cb>
8100550b:	89 f8                	mov    %edi,%eax
8100550d:	eb 05                	jmp    81005514 <__sfvwrite_r+0x2d0>
8100550f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005514:	8b 4b 14             	mov    0x14(%ebx),%ecx
81005517:	99                   	cltd   
81005518:	f7 f9                	idiv   %ecx
8100551a:	89 c2                	mov    %eax,%edx
8100551c:	8b 43 14             	mov    0x14(%ebx),%eax
8100551f:	89 d6                	mov    %edx,%esi
81005521:	0f af f0             	imul   %eax,%esi
81005524:	8b 53 24             	mov    0x24(%ebx),%edx
81005527:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100552a:	56                   	push   %esi
8100552b:	ff 75 c4             	push   -0x3c(%ebp)
8100552e:	50                   	push   %eax
8100552f:	ff 75 08             	push   0x8(%ebp)
81005532:	ff d2                	call   *%edx
81005534:	83 c4 10             	add    $0x10,%esp
81005537:	89 c6                	mov    %eax,%esi
81005539:	85 f6                	test   %esi,%esi
8100553b:	0f 8e 85 01 00 00    	jle    810056c6 <__sfvwrite_r+0x482>
81005541:	eb 01                	jmp    81005544 <__sfvwrite_r+0x300>
81005543:	90                   	nop
81005544:	89 f0                	mov    %esi,%eax
81005546:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005549:	89 f0                	mov    %esi,%eax
8100554b:	29 c7                	sub    %eax,%edi
8100554d:	8b 45 10             	mov    0x10(%ebp),%eax
81005550:	8b 40 08             	mov    0x8(%eax),%eax
81005553:	89 f2                	mov    %esi,%edx
81005555:	29 d0                	sub    %edx,%eax
81005557:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100555a:	89 41 08             	mov    %eax,0x8(%ecx)
8100555d:	8b 45 10             	mov    0x10(%ebp),%eax
81005560:	8b 40 08             	mov    0x8(%eax),%eax
81005563:	85 c0                	test   %eax,%eax
81005565:	0f 85 d4 fd ff ff    	jne    8100533f <__sfvwrite_r+0xfb>
8100556b:	e9 4c 01 00 00       	jmp    810056bc <__sfvwrite_r+0x478>
81005570:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005577:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100557e:	eb 18                	jmp    81005598 <__sfvwrite_r+0x354>
81005580:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005587:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100558a:	8b 08                	mov    (%eax),%ecx
8100558c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100558f:	8b 78 04             	mov    0x4(%eax),%edi
81005592:	83 c0 08             	add    $0x8,%eax
81005595:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005598:	85 ff                	test   %edi,%edi
8100559a:	74 e4                	je     81005580 <__sfvwrite_r+0x33c>
8100559c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810055a0:	75 32                	jne    810055d4 <__sfvwrite_r+0x390>
810055a2:	83 ec 04             	sub    $0x4,%esp
810055a5:	57                   	push   %edi
810055a6:	6a 0a                	push   $0xa
810055a8:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810055ab:	56                   	push   %esi
810055ac:	e8 af dc ff ff       	call   81003260 <memchr>
810055b1:	83 c4 10             	add    $0x10,%esp
810055b4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810055b7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810055bb:	74 0a                	je     810055c7 <__sfvwrite_r+0x383>
810055bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810055c0:	83 c0 01             	add    $0x1,%eax
810055c3:	29 f0                	sub    %esi,%eax
810055c5:	eb 03                	jmp    810055ca <__sfvwrite_r+0x386>
810055c7:	8d 47 01             	lea    0x1(%edi),%eax
810055ca:	89 45 e0             	mov    %eax,-0x20(%ebp)
810055cd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810055d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810055d7:	39 c7                	cmp    %eax,%edi
810055d9:	0f 46 c7             	cmovbe %edi,%eax
810055dc:	89 c1                	mov    %eax,%ecx
810055de:	8b 53 08             	mov    0x8(%ebx),%edx
810055e1:	8b 43 14             	mov    0x14(%ebx),%eax
810055e4:	8d 34 02             	lea    (%edx,%eax,1),%esi
810055e7:	8b 13                	mov    (%ebx),%edx
810055e9:	8b 43 10             	mov    0x10(%ebx),%eax
810055ec:	39 c2                	cmp    %eax,%edx
810055ee:	76 38                	jbe    81005628 <__sfvwrite_r+0x3e4>
810055f0:	39 f1                	cmp    %esi,%ecx
810055f2:	7e 34                	jle    81005628 <__sfvwrite_r+0x3e4>
810055f4:	89 f2                	mov    %esi,%edx
810055f6:	8b 03                	mov    (%ebx),%eax
810055f8:	83 ec 04             	sub    $0x4,%esp
810055fb:	52                   	push   %edx
810055fc:	ff 75 c4             	push   -0x3c(%ebp)
810055ff:	50                   	push   %eax
81005600:	e8 2b 05 00 00       	call   81005b30 <memmove>
81005605:	83 c4 10             	add    $0x10,%esp
81005608:	8b 03                	mov    (%ebx),%eax
8100560a:	89 f2                	mov    %esi,%edx
8100560c:	01 d0                	add    %edx,%eax
8100560e:	89 03                	mov    %eax,(%ebx)
81005610:	83 ec 08             	sub    $0x8,%esp
81005613:	53                   	push   %ebx
81005614:	ff 75 08             	push   0x8(%ebp)
81005617:	e8 02 b6 ff ff       	call   81000c1e <_fflush_r>
8100561c:	83 c4 10             	add    $0x10,%esp
8100561f:	85 c0                	test   %eax,%eax
81005621:	74 4f                	je     81005672 <__sfvwrite_r+0x42e>
81005623:	e9 a2 00 00 00       	jmp    810056ca <__sfvwrite_r+0x486>
81005628:	8b 73 14             	mov    0x14(%ebx),%esi
8100562b:	89 c8                	mov    %ecx,%eax
8100562d:	39 c6                	cmp    %eax,%esi
8100562f:	7f 1b                	jg     8100564c <__sfvwrite_r+0x408>
81005631:	8b 53 24             	mov    0x24(%ebx),%edx
81005634:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005637:	56                   	push   %esi
81005638:	ff 75 c4             	push   -0x3c(%ebp)
8100563b:	50                   	push   %eax
8100563c:	ff 75 08             	push   0x8(%ebp)
8100563f:	ff d2                	call   *%edx
81005641:	83 c4 10             	add    $0x10,%esp
81005644:	89 c6                	mov    %eax,%esi
81005646:	85 f6                	test   %esi,%esi
81005648:	7f 28                	jg     81005672 <__sfvwrite_r+0x42e>
8100564a:	eb 7e                	jmp    810056ca <__sfvwrite_r+0x486>
8100564c:	89 ce                	mov    %ecx,%esi
8100564e:	89 f2                	mov    %esi,%edx
81005650:	8b 03                	mov    (%ebx),%eax
81005652:	83 ec 04             	sub    $0x4,%esp
81005655:	52                   	push   %edx
81005656:	ff 75 c4             	push   -0x3c(%ebp)
81005659:	50                   	push   %eax
8100565a:	e8 d1 04 00 00       	call   81005b30 <memmove>
8100565f:	83 c4 10             	add    $0x10,%esp
81005662:	8b 43 08             	mov    0x8(%ebx),%eax
81005665:	29 f0                	sub    %esi,%eax
81005667:	89 43 08             	mov    %eax,0x8(%ebx)
8100566a:	8b 03                	mov    (%ebx),%eax
8100566c:	89 f2                	mov    %esi,%edx
8100566e:	01 d0                	add    %edx,%eax
81005670:	89 03                	mov    %eax,(%ebx)
81005672:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005675:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005679:	75 1a                	jne    81005695 <__sfvwrite_r+0x451>
8100567b:	83 ec 08             	sub    $0x8,%esp
8100567e:	53                   	push   %ebx
8100567f:	ff 75 08             	push   0x8(%ebp)
81005682:	e8 97 b5 ff ff       	call   81000c1e <_fflush_r>
81005687:	83 c4 10             	add    $0x10,%esp
8100568a:	85 c0                	test   %eax,%eax
8100568c:	75 3b                	jne    810056c9 <__sfvwrite_r+0x485>
8100568e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005695:	89 f0                	mov    %esi,%eax
81005697:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100569a:	89 f0                	mov    %esi,%eax
8100569c:	29 c7                	sub    %eax,%edi
8100569e:	8b 45 10             	mov    0x10(%ebp),%eax
810056a1:	8b 40 08             	mov    0x8(%eax),%eax
810056a4:	89 f2                	mov    %esi,%edx
810056a6:	29 d0                	sub    %edx,%eax
810056a8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810056ab:	89 41 08             	mov    %eax,0x8(%ecx)
810056ae:	8b 45 10             	mov    0x10(%ebp),%eax
810056b1:	8b 40 08             	mov    0x8(%eax),%eax
810056b4:	85 c0                	test   %eax,%eax
810056b6:	0f 85 dc fe ff ff    	jne    81005598 <__sfvwrite_r+0x354>
810056bc:	b8 00 00 00 00       	mov    $0x0,%eax
810056c1:	eb 17                	jmp    810056da <__sfvwrite_r+0x496>
810056c3:	90                   	nop
810056c4:	eb 04                	jmp    810056ca <__sfvwrite_r+0x486>
810056c6:	90                   	nop
810056c7:	eb 01                	jmp    810056ca <__sfvwrite_r+0x486>
810056c9:	90                   	nop
810056ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810056ce:	83 c8 40             	or     $0x40,%eax
810056d1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810056d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810056da:	8d 65 f4             	lea    -0xc(%ebp),%esp
810056dd:	5b                   	pop    %ebx
810056de:	5e                   	pop    %esi
810056df:	5f                   	pop    %edi
810056e0:	5d                   	pop    %ebp
810056e1:	c3                   	ret    

810056e2 <_findenv>:
810056e2:	55                   	push   %ebp
810056e3:	89 e5                	mov    %esp,%ebp
810056e5:	83 ec 08             	sub    $0x8,%esp
810056e8:	8b 55 08             	mov    0x8(%ebp),%edx
810056eb:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810056f0:	83 ec 04             	sub    $0x4,%esp
810056f3:	ff 75 0c             	push   0xc(%ebp)
810056f6:	52                   	push   %edx
810056f7:	50                   	push   %eax
810056f8:	e8 25 00 00 00       	call   81005722 <_findenv_r>
810056fd:	83 c4 10             	add    $0x10,%esp
81005700:	c9                   	leave  
81005701:	c3                   	ret    

81005702 <getenv>:
81005702:	55                   	push   %ebp
81005703:	89 e5                	mov    %esp,%ebp
81005705:	83 ec 18             	sub    $0x18,%esp
81005708:	a1 e4 74 00 81       	mov    0x810074e4,%eax
8100570d:	83 ec 04             	sub    $0x4,%esp
81005710:	8d 55 f4             	lea    -0xc(%ebp),%edx
81005713:	52                   	push   %edx
81005714:	ff 75 08             	push   0x8(%ebp)
81005717:	50                   	push   %eax
81005718:	e8 05 00 00 00       	call   81005722 <_findenv_r>
8100571d:	83 c4 10             	add    $0x10,%esp
81005720:	c9                   	leave  
81005721:	c3                   	ret    

81005722 <_findenv_r>:
81005722:	55                   	push   %ebp
81005723:	89 e5                	mov    %esp,%ebp
81005725:	57                   	push   %edi
81005726:	56                   	push   %esi
81005727:	53                   	push   %ebx
81005728:	83 ec 1c             	sub    $0x1c,%esp
8100572b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100572e:	83 ec 0c             	sub    $0xc,%esp
81005731:	ff 75 08             	push   0x8(%ebp)
81005734:	e8 a7 12 00 00       	call   810069e0 <__env_lock>
81005739:	83 c4 10             	add    $0x10,%esp
8100573c:	a1 10 79 00 81       	mov    0x81007910,%eax
81005741:	8b 00                	mov    (%eax),%eax
81005743:	85 c0                	test   %eax,%eax
81005745:	75 18                	jne    8100575f <_findenv_r+0x3d>
81005747:	83 ec 0c             	sub    $0xc,%esp
8100574a:	ff 75 08             	push   0x8(%ebp)
8100574d:	e8 94 12 00 00       	call   810069e6 <__env_unlock>
81005752:	83 c4 10             	add    $0x10,%esp
81005755:	b8 00 00 00 00       	mov    $0x0,%eax
8100575a:	e9 a8 00 00 00       	jmp    81005807 <_findenv_r+0xe5>
8100575f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81005762:	eb 04                	jmp    81005768 <_findenv_r+0x46>
81005764:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005768:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100576b:	0f b6 00             	movzbl (%eax),%eax
8100576e:	84 c0                	test   %al,%al
81005770:	74 0a                	je     8100577c <_findenv_r+0x5a>
81005772:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005775:	0f b6 00             	movzbl (%eax),%eax
81005778:	3c 3d                	cmp    $0x3d,%al
8100577a:	75 e8                	jne    81005764 <_findenv_r+0x42>
8100577c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100577f:	0f b6 00             	movzbl (%eax),%eax
81005782:	3c 3d                	cmp    $0x3d,%al
81005784:	74 6e                	je     810057f4 <_findenv_r+0xd2>
81005786:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005789:	29 f8                	sub    %edi,%eax
8100578b:	89 c6                	mov    %eax,%esi
8100578d:	a1 10 79 00 81       	mov    0x81007910,%eax
81005792:	8b 18                	mov    (%eax),%ebx
81005794:	eb 58                	jmp    810057ee <_findenv_r+0xcc>
81005796:	89 f2                	mov    %esi,%edx
81005798:	8b 03                	mov    (%ebx),%eax
8100579a:	83 ec 04             	sub    $0x4,%esp
8100579d:	52                   	push   %edx
8100579e:	57                   	push   %edi
8100579f:	50                   	push   %eax
810057a0:	e8 d3 0f 00 00       	call   81006778 <strncmp>
810057a5:	83 c4 10             	add    $0x10,%esp
810057a8:	85 c0                	test   %eax,%eax
810057aa:	75 3f                	jne    810057eb <_findenv_r+0xc9>
810057ac:	8b 03                	mov    (%ebx),%eax
810057ae:	89 f2                	mov    %esi,%edx
810057b0:	01 d0                	add    %edx,%eax
810057b2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810057b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057b8:	0f b6 00             	movzbl (%eax),%eax
810057bb:	3c 3d                	cmp    $0x3d,%al
810057bd:	75 2c                	jne    810057eb <_findenv_r+0xc9>
810057bf:	a1 10 79 00 81       	mov    0x81007910,%eax
810057c4:	8b 10                	mov    (%eax),%edx
810057c6:	89 d8                	mov    %ebx,%eax
810057c8:	29 d0                	sub    %edx,%eax
810057ca:	c1 f8 02             	sar    $0x2,%eax
810057cd:	89 c2                	mov    %eax,%edx
810057cf:	8b 45 10             	mov    0x10(%ebp),%eax
810057d2:	89 10                	mov    %edx,(%eax)
810057d4:	83 ec 0c             	sub    $0xc,%esp
810057d7:	ff 75 08             	push   0x8(%ebp)
810057da:	e8 07 12 00 00       	call   810069e6 <__env_unlock>
810057df:	83 c4 10             	add    $0x10,%esp
810057e2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810057e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057e9:	eb 1c                	jmp    81005807 <_findenv_r+0xe5>
810057eb:	83 c3 04             	add    $0x4,%ebx
810057ee:	8b 03                	mov    (%ebx),%eax
810057f0:	85 c0                	test   %eax,%eax
810057f2:	75 a2                	jne    81005796 <_findenv_r+0x74>
810057f4:	83 ec 0c             	sub    $0xc,%esp
810057f7:	ff 75 08             	push   0x8(%ebp)
810057fa:	e8 e7 11 00 00       	call   810069e6 <__env_unlock>
810057ff:	83 c4 10             	add    $0x10,%esp
81005802:	b8 00 00 00 00       	mov    $0x0,%eax
81005807:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100580a:	5b                   	pop    %ebx
8100580b:	5e                   	pop    %esi
8100580c:	5f                   	pop    %edi
8100580d:	5d                   	pop    %ebp
8100580e:	c3                   	ret    

8100580f <_getenv_r>:
8100580f:	55                   	push   %ebp
81005810:	89 e5                	mov    %esp,%ebp
81005812:	83 ec 18             	sub    $0x18,%esp
81005815:	83 ec 04             	sub    $0x4,%esp
81005818:	8d 45 f4             	lea    -0xc(%ebp),%eax
8100581b:	50                   	push   %eax
8100581c:	ff 75 0c             	push   0xc(%ebp)
8100581f:	ff 75 08             	push   0x8(%ebp)
81005822:	e8 fb fe ff ff       	call   81005722 <_findenv_r>
81005827:	83 c4 10             	add    $0x10,%esp
8100582a:	c9                   	leave  
8100582b:	c3                   	ret    

8100582c <__get_global_locale>:
8100582c:	55                   	push   %ebp
8100582d:	89 e5                	mov    %esp,%ebp
8100582f:	b8 20 79 00 81       	mov    $0x81007920,%eax
81005834:	5d                   	pop    %ebp
81005835:	c3                   	ret    

81005836 <__get_current_locale>:
81005836:	55                   	push   %ebp
81005837:	89 e5                	mov    %esp,%ebp
81005839:	e8 ee ff ff ff       	call   8100582c <__get_global_locale>
8100583e:	5d                   	pop    %ebp
8100583f:	c3                   	ret    

81005840 <_setlocale_r>:
81005840:	55                   	push   %ebp
81005841:	89 e5                	mov    %esp,%ebp
81005843:	83 ec 08             	sub    $0x8,%esp
81005846:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100584a:	74 4c                	je     81005898 <_setlocale_r+0x58>
8100584c:	83 ec 08             	sub    $0x8,%esp
8100584f:	68 84 70 00 81       	push   $0x81007084
81005854:	ff 75 10             	push   0x10(%ebp)
81005857:	e8 f0 ec ff ff       	call   8100454c <strcmp>
8100585c:	83 c4 10             	add    $0x10,%esp
8100585f:	85 c0                	test   %eax,%eax
81005861:	74 35                	je     81005898 <_setlocale_r+0x58>
81005863:	83 ec 08             	sub    $0x8,%esp
81005866:	68 8a 70 00 81       	push   $0x8100708a
8100586b:	ff 75 10             	push   0x10(%ebp)
8100586e:	e8 d9 ec ff ff       	call   8100454c <strcmp>
81005873:	83 c4 10             	add    $0x10,%esp
81005876:	85 c0                	test   %eax,%eax
81005878:	74 1e                	je     81005898 <_setlocale_r+0x58>
8100587a:	83 ec 08             	sub    $0x8,%esp
8100587d:	68 83 70 00 81       	push   $0x81007083
81005882:	ff 75 10             	push   0x10(%ebp)
81005885:	e8 c2 ec ff ff       	call   8100454c <strcmp>
8100588a:	83 c4 10             	add    $0x10,%esp
8100588d:	85 c0                	test   %eax,%eax
8100588f:	74 07                	je     81005898 <_setlocale_r+0x58>
81005891:	b8 00 00 00 00       	mov    $0x0,%eax
81005896:	eb 05                	jmp    8100589d <_setlocale_r+0x5d>
81005898:	b8 8a 70 00 81       	mov    $0x8100708a,%eax
8100589d:	c9                   	leave  
8100589e:	c3                   	ret    

8100589f <__locale_mb_cur_max>:
8100589f:	55                   	push   %ebp
810058a0:	89 e5                	mov    %esp,%ebp
810058a2:	e8 8f ff ff ff       	call   81005836 <__get_current_locale>
810058a7:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810058ae:	0f be c0             	movsbl %al,%eax
810058b1:	5d                   	pop    %ebp
810058b2:	c3                   	ret    

810058b3 <setlocale>:
810058b3:	55                   	push   %ebp
810058b4:	89 e5                	mov    %esp,%ebp
810058b6:	83 ec 08             	sub    $0x8,%esp
810058b9:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810058be:	83 ec 04             	sub    $0x4,%esp
810058c1:	ff 75 0c             	push   0xc(%ebp)
810058c4:	ff 75 08             	push   0x8(%ebp)
810058c7:	50                   	push   %eax
810058c8:	e8 73 ff ff ff       	call   81005840 <_setlocale_r>
810058cd:	83 c4 10             	add    $0x10,%esp
810058d0:	c9                   	leave  
810058d1:	c3                   	ret    

810058d2 <_lseek_r>:
810058d2:	55                   	push   %ebp
810058d3:	89 e5                	mov    %esp,%ebp
810058d5:	83 ec 18             	sub    $0x18,%esp
810058d8:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
810058df:	00 00 00 
810058e2:	83 ec 04             	sub    $0x4,%esp
810058e5:	ff 75 14             	push   0x14(%ebp)
810058e8:	ff 75 10             	push   0x10(%ebp)
810058eb:	ff 75 0c             	push   0xc(%ebp)
810058ee:	e8 b3 ae ff ff       	call   810007a6 <lseek>
810058f3:	83 c4 10             	add    $0x10,%esp
810058f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810058f9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810058fd:	75 14                	jne    81005913 <_lseek_r+0x41>
810058ff:	a1 34 81 00 81       	mov    0x81008134,%eax
81005904:	85 c0                	test   %eax,%eax
81005906:	74 0b                	je     81005913 <_lseek_r+0x41>
81005908:	8b 15 34 81 00 81    	mov    0x81008134,%edx
8100590e:	8b 45 08             	mov    0x8(%ebp),%eax
81005911:	89 10                	mov    %edx,(%eax)
81005913:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005916:	c9                   	leave  
81005917:	c3                   	ret    

81005918 <__smakebuf_r>:
81005918:	55                   	push   %ebp
81005919:	89 e5                	mov    %esp,%ebp
8100591b:	56                   	push   %esi
8100591c:	53                   	push   %ebx
8100591d:	83 ec 10             	sub    $0x10,%esp
81005920:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005923:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005927:	98                   	cwtl   
81005928:	83 e0 02             	and    $0x2,%eax
8100592b:	85 c0                	test   %eax,%eax
8100592d:	74 16                	je     81005945 <__smakebuf_r+0x2d>
8100592f:	8d 43 43             	lea    0x43(%ebx),%eax
81005932:	89 03                	mov    %eax,(%ebx)
81005934:	8b 03                	mov    (%ebx),%eax
81005936:	89 43 10             	mov    %eax,0x10(%ebx)
81005939:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005940:	e9 b9 00 00 00       	jmp    810059fe <__smakebuf_r+0xe6>
81005945:	8d 45 ec             	lea    -0x14(%ebp),%eax
81005948:	50                   	push   %eax
81005949:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100594c:	50                   	push   %eax
8100594d:	53                   	push   %ebx
8100594e:	ff 75 08             	push   0x8(%ebp)
81005951:	e8 af 00 00 00       	call   81005a05 <__swhatbuf_r>
81005956:	83 c4 10             	add    $0x10,%esp
81005959:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100595c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100595f:	83 ec 08             	sub    $0x8,%esp
81005962:	50                   	push   %eax
81005963:	ff 75 08             	push   0x8(%ebp)
81005966:	e8 c8 d0 ff ff       	call   81002a33 <_malloc_r>
8100596b:	83 c4 10             	add    $0x10,%esp
8100596e:	89 c6                	mov    %eax,%esi
81005970:	85 f6                	test   %esi,%esi
81005972:	75 2f                	jne    810059a3 <__smakebuf_r+0x8b>
81005974:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005978:	98                   	cwtl   
81005979:	25 00 02 00 00       	and    $0x200,%eax
8100597e:	85 c0                	test   %eax,%eax
81005980:	75 7c                	jne    810059fe <__smakebuf_r+0xe6>
81005982:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005986:	83 e0 fc             	and    $0xfffffffc,%eax
81005989:	83 c8 02             	or     $0x2,%eax
8100598c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005990:	8d 43 43             	lea    0x43(%ebx),%eax
81005993:	89 03                	mov    %eax,(%ebx)
81005995:	8b 03                	mov    (%ebx),%eax
81005997:	89 43 10             	mov    %eax,0x10(%ebx)
8100599a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810059a1:	eb 5b                	jmp    810059fe <__smakebuf_r+0xe6>
810059a3:	8b 45 08             	mov    0x8(%ebp),%eax
810059a6:	c7 40 3c e6 10 00 81 	movl   $0x810010e6,0x3c(%eax)
810059ad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059b1:	0c 80                	or     $0x80,%al
810059b3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059b7:	89 33                	mov    %esi,(%ebx)
810059b9:	8b 03                	mov    (%ebx),%eax
810059bb:	89 43 10             	mov    %eax,0x10(%ebx)
810059be:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059c1:	89 43 14             	mov    %eax,0x14(%ebx)
810059c4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059c7:	85 c0                	test   %eax,%eax
810059c9:	74 26                	je     810059f1 <__smakebuf_r+0xd9>
810059cb:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810059cf:	98                   	cwtl   
810059d0:	83 ec 08             	sub    $0x8,%esp
810059d3:	50                   	push   %eax
810059d4:	ff 75 08             	push   0x8(%ebp)
810059d7:	e8 53 10 00 00       	call   81006a2f <_isatty_r>
810059dc:	83 c4 10             	add    $0x10,%esp
810059df:	85 c0                	test   %eax,%eax
810059e1:	74 0e                	je     810059f1 <__smakebuf_r+0xd9>
810059e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059e7:	83 e0 fc             	and    $0xfffffffc,%eax
810059ea:	83 c8 01             	or     $0x1,%eax
810059ed:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059f1:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810059f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810059f8:	09 d0                	or     %edx,%eax
810059fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810059fe:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a01:	5b                   	pop    %ebx
81005a02:	5e                   	pop    %esi
81005a03:	5d                   	pop    %ebp
81005a04:	c3                   	ret    

81005a05 <__swhatbuf_r>:
81005a05:	55                   	push   %ebp
81005a06:	89 e5                	mov    %esp,%ebp
81005a08:	83 ec 58             	sub    $0x58,%esp
81005a0b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81005a12:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a15:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a19:	66 85 c0             	test   %ax,%ax
81005a1c:	78 1f                	js     81005a3d <__swhatbuf_r+0x38>
81005a1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a21:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005a25:	98                   	cwtl   
81005a26:	83 ec 04             	sub    $0x4,%esp
81005a29:	8d 55 ac             	lea    -0x54(%ebp),%edx
81005a2c:	52                   	push   %edx
81005a2d:	50                   	push   %eax
81005a2e:	ff 75 08             	push   0x8(%ebp)
81005a31:	e8 b6 0f 00 00       	call   810069ec <_fstat_r>
81005a36:	83 c4 10             	add    $0x10,%esp
81005a39:	85 c0                	test   %eax,%eax
81005a3b:	79 35                	jns    81005a72 <__swhatbuf_r+0x6d>
81005a3d:	8b 45 14             	mov    0x14(%ebp),%eax
81005a40:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005a46:	8b 45 0c             	mov    0xc(%ebp),%eax
81005a49:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005a4d:	98                   	cwtl   
81005a4e:	25 80 00 00 00       	and    $0x80,%eax
81005a53:	85 c0                	test   %eax,%eax
81005a55:	74 0b                	je     81005a62 <__swhatbuf_r+0x5d>
81005a57:	8b 45 10             	mov    0x10(%ebp),%eax
81005a5a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005a60:	eb 09                	jmp    81005a6b <__swhatbuf_r+0x66>
81005a62:	8b 45 10             	mov    0x10(%ebp),%eax
81005a65:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005a6b:	b8 00 00 00 00       	mov    $0x0,%eax
81005a70:	eb 24                	jmp    81005a96 <__swhatbuf_r+0x91>
81005a72:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005a75:	25 00 f0 00 00       	and    $0xf000,%eax
81005a7a:	3d 00 20 00 00       	cmp    $0x2000,%eax
81005a7f:	0f 94 c0             	sete   %al
81005a82:	0f b6 d0             	movzbl %al,%edx
81005a85:	8b 45 14             	mov    0x14(%ebp),%eax
81005a88:	89 10                	mov    %edx,(%eax)
81005a8a:	8b 45 10             	mov    0x10(%ebp),%eax
81005a8d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005a93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a96:	c9                   	leave  
81005a97:	c3                   	ret    

81005a98 <__get_global_locale>:
81005a98:	55                   	push   %ebp
81005a99:	89 e5                	mov    %esp,%ebp
81005a9b:	b8 20 79 00 81       	mov    $0x81007920,%eax
81005aa0:	5d                   	pop    %ebp
81005aa1:	c3                   	ret    

81005aa2 <__get_current_locale>:
81005aa2:	55                   	push   %ebp
81005aa3:	89 e5                	mov    %esp,%ebp
81005aa5:	e8 ee ff ff ff       	call   81005a98 <__get_global_locale>
81005aaa:	5d                   	pop    %ebp
81005aab:	c3                   	ret    

81005aac <_mbtowc_r>:
81005aac:	55                   	push   %ebp
81005aad:	89 e5                	mov    %esp,%ebp
81005aaf:	83 ec 08             	sub    $0x8,%esp
81005ab2:	e8 eb ff ff ff       	call   81005aa2 <__get_current_locale>
81005ab7:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81005abd:	83 ec 0c             	sub    $0xc,%esp
81005ac0:	ff 75 18             	push   0x18(%ebp)
81005ac3:	ff 75 14             	push   0x14(%ebp)
81005ac6:	ff 75 10             	push   0x10(%ebp)
81005ac9:	ff 75 0c             	push   0xc(%ebp)
81005acc:	ff 75 08             	push   0x8(%ebp)
81005acf:	ff d0                	call   *%eax
81005ad1:	83 c4 20             	add    $0x20,%esp
81005ad4:	c9                   	leave  
81005ad5:	c3                   	ret    

81005ad6 <__ascii_mbtowc>:
81005ad6:	55                   	push   %ebp
81005ad7:	89 e5                	mov    %esp,%ebp
81005ad9:	83 ec 10             	sub    $0x10,%esp
81005adc:	8b 45 10             	mov    0x10(%ebp),%eax
81005adf:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005ae2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005ae6:	75 06                	jne    81005aee <__ascii_mbtowc+0x18>
81005ae8:	8d 45 f8             	lea    -0x8(%ebp),%eax
81005aeb:	89 45 0c             	mov    %eax,0xc(%ebp)
81005aee:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005af2:	75 07                	jne    81005afb <__ascii_mbtowc+0x25>
81005af4:	b8 00 00 00 00       	mov    $0x0,%eax
81005af9:	eb 31                	jmp    81005b2c <__ascii_mbtowc+0x56>
81005afb:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005aff:	75 07                	jne    81005b08 <__ascii_mbtowc+0x32>
81005b01:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005b06:	eb 24                	jmp    81005b2c <__ascii_mbtowc+0x56>
81005b08:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b0b:	0f b6 00             	movzbl (%eax),%eax
81005b0e:	0f b6 d0             	movzbl %al,%edx
81005b11:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b14:	89 10                	mov    %edx,(%eax)
81005b16:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b19:	0f b6 00             	movzbl (%eax),%eax
81005b1c:	84 c0                	test   %al,%al
81005b1e:	75 07                	jne    81005b27 <__ascii_mbtowc+0x51>
81005b20:	b8 00 00 00 00       	mov    $0x0,%eax
81005b25:	eb 05                	jmp    81005b2c <__ascii_mbtowc+0x56>
81005b27:	b8 01 00 00 00       	mov    $0x1,%eax
81005b2c:	c9                   	leave  
81005b2d:	c3                   	ret    
81005b2e:	66 90                	xchg   %ax,%ax

81005b30 <memmove>:
81005b30:	55                   	push   %ebp
81005b31:	89 e5                	mov    %esp,%ebp
81005b33:	56                   	push   %esi
81005b34:	57                   	push   %edi
81005b35:	53                   	push   %ebx
81005b36:	8b 7d 08             	mov    0x8(%ebp),%edi
81005b39:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005b3c:	8b 75 0c             	mov    0xc(%ebp),%esi
81005b3f:	fc                   	cld    
81005b40:	39 fe                	cmp    %edi,%esi
81005b42:	73 43                	jae    81005b87 <memmove+0x57>
81005b44:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005b48:	39 df                	cmp    %ebx,%edi
81005b4a:	77 3b                	ja     81005b87 <memmove+0x57>
81005b4c:	01 ce                	add    %ecx,%esi
81005b4e:	01 cf                	add    %ecx,%edi
81005b50:	fd                   	std    
81005b51:	83 f9 08             	cmp    $0x8,%ecx
81005b54:	76 2b                	jbe    81005b81 <memmove+0x51>
81005b56:	89 fa                	mov    %edi,%edx
81005b58:	89 cb                	mov    %ecx,%ebx
81005b5a:	83 e2 03             	and    $0x3,%edx
81005b5d:	74 0c                	je     81005b6b <memmove+0x3b>
81005b5f:	89 d1                	mov    %edx,%ecx
81005b61:	4e                   	dec    %esi
81005b62:	4f                   	dec    %edi
81005b63:	29 cb                	sub    %ecx,%ebx
81005b65:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005b67:	89 d9                	mov    %ebx,%ecx
81005b69:	46                   	inc    %esi
81005b6a:	47                   	inc    %edi
81005b6b:	c1 e9 02             	shr    $0x2,%ecx
81005b6e:	83 ee 04             	sub    $0x4,%esi
81005b71:	83 ef 04             	sub    $0x4,%edi
81005b74:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005b76:	83 c6 04             	add    $0x4,%esi
81005b79:	83 c7 04             	add    $0x4,%edi
81005b7c:	89 d9                	mov    %ebx,%ecx
81005b7e:	83 e1 03             	and    $0x3,%ecx
81005b81:	4e                   	dec    %esi
81005b82:	4f                   	dec    %edi
81005b83:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005b85:	eb 2a                	jmp    81005bb1 <memmove+0x81>
81005b87:	83 f9 08             	cmp    $0x8,%ecx
81005b8a:	76 23                	jbe    81005baf <memmove+0x7f>
81005b8c:	89 fa                	mov    %edi,%edx
81005b8e:	89 cb                	mov    %ecx,%ebx
81005b90:	83 e2 03             	and    $0x3,%edx
81005b93:	74 10                	je     81005ba5 <memmove+0x75>
81005b95:	b9 04 00 00 00       	mov    $0x4,%ecx
81005b9a:	29 d1                	sub    %edx,%ecx
81005b9c:	83 e1 03             	and    $0x3,%ecx
81005b9f:	29 cb                	sub    %ecx,%ebx
81005ba1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005ba3:	89 d9                	mov    %ebx,%ecx
81005ba5:	c1 e9 02             	shr    $0x2,%ecx
81005ba8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005baa:	89 d9                	mov    %ebx,%ecx
81005bac:	83 e1 03             	and    $0x3,%ecx
81005baf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005bb1:	8b 45 08             	mov    0x8(%ebp),%eax
81005bb4:	fc                   	cld    
81005bb5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005bb8:	5b                   	pop    %ebx
81005bb9:	5f                   	pop    %edi
81005bba:	5e                   	pop    %esi
81005bbb:	c9                   	leave  
81005bbc:	c3                   	ret    

81005bbd <__sputc_r>:
81005bbd:	55                   	push   %ebp
81005bbe:	89 e5                	mov    %esp,%ebp
81005bc0:	83 ec 08             	sub    $0x8,%esp
81005bc3:	8b 45 10             	mov    0x10(%ebp),%eax
81005bc6:	8b 40 08             	mov    0x8(%eax),%eax
81005bc9:	8d 50 ff             	lea    -0x1(%eax),%edx
81005bcc:	8b 45 10             	mov    0x10(%ebp),%eax
81005bcf:	89 50 08             	mov    %edx,0x8(%eax)
81005bd2:	8b 45 10             	mov    0x10(%ebp),%eax
81005bd5:	8b 40 08             	mov    0x8(%eax),%eax
81005bd8:	85 c0                	test   %eax,%eax
81005bda:	79 17                	jns    81005bf3 <__sputc_r+0x36>
81005bdc:	8b 45 10             	mov    0x10(%ebp),%eax
81005bdf:	8b 50 08             	mov    0x8(%eax),%edx
81005be2:	8b 45 10             	mov    0x10(%ebp),%eax
81005be5:	8b 40 18             	mov    0x18(%eax),%eax
81005be8:	39 c2                	cmp    %eax,%edx
81005bea:	7c 21                	jl     81005c0d <__sputc_r+0x50>
81005bec:	8b 45 0c             	mov    0xc(%ebp),%eax
81005bef:	3c 0a                	cmp    $0xa,%al
81005bf1:	74 1a                	je     81005c0d <__sputc_r+0x50>
81005bf3:	8b 45 10             	mov    0x10(%ebp),%eax
81005bf6:	8b 00                	mov    (%eax),%eax
81005bf8:	8d 48 01             	lea    0x1(%eax),%ecx
81005bfb:	8b 55 10             	mov    0x10(%ebp),%edx
81005bfe:	89 0a                	mov    %ecx,(%edx)
81005c00:	8b 55 0c             	mov    0xc(%ebp),%edx
81005c03:	88 10                	mov    %dl,(%eax)
81005c05:	0f b6 00             	movzbl (%eax),%eax
81005c08:	0f b6 c0             	movzbl %al,%eax
81005c0b:	eb 14                	jmp    81005c21 <__sputc_r+0x64>
81005c0d:	83 ec 04             	sub    $0x4,%esp
81005c10:	ff 75 10             	push   0x10(%ebp)
81005c13:	ff 75 0c             	push   0xc(%ebp)
81005c16:	ff 75 08             	push   0x8(%ebp)
81005c19:	e8 c1 ed ff ff       	call   810049df <__swbuf_r>
81005c1e:	83 c4 10             	add    $0x10,%esp
81005c21:	c9                   	leave  
81005c22:	c3                   	ret    

81005c23 <_putc_r>:
81005c23:	55                   	push   %ebp
81005c24:	89 e5                	mov    %esp,%ebp
81005c26:	53                   	push   %ebx
81005c27:	83 ec 14             	sub    $0x14,%esp
81005c2a:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005c2d:	8b 45 08             	mov    0x8(%ebp),%eax
81005c30:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c33:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005c37:	74 18                	je     81005c51 <_putc_r+0x2e>
81005c39:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c3c:	8b 40 38             	mov    0x38(%eax),%eax
81005c3f:	85 c0                	test   %eax,%eax
81005c41:	75 0e                	jne    81005c51 <_putc_r+0x2e>
81005c43:	83 ec 0c             	sub    $0xc,%esp
81005c46:	ff 75 f4             	push   -0xc(%ebp)
81005c49:	e8 d3 b4 ff ff       	call   81001121 <__sinit>
81005c4e:	83 c4 10             	add    $0x10,%esp
81005c51:	83 ec 04             	sub    $0x4,%esp
81005c54:	53                   	push   %ebx
81005c55:	ff 75 0c             	push   0xc(%ebp)
81005c58:	ff 75 08             	push   0x8(%ebp)
81005c5b:	e8 5d ff ff ff       	call   81005bbd <__sputc_r>
81005c60:	83 c4 10             	add    $0x10,%esp
81005c63:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c66:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c69:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005c6c:	c9                   	leave  
81005c6d:	c3                   	ret    

81005c6e <putc>:
81005c6e:	55                   	push   %ebp
81005c6f:	89 e5                	mov    %esp,%ebp
81005c71:	53                   	push   %ebx
81005c72:	83 ec 14             	sub    $0x14,%esp
81005c75:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005c78:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81005c7d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c83:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c86:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005c8a:	74 18                	je     81005ca4 <putc+0x36>
81005c8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c8f:	8b 40 38             	mov    0x38(%eax),%eax
81005c92:	85 c0                	test   %eax,%eax
81005c94:	75 0e                	jne    81005ca4 <putc+0x36>
81005c96:	83 ec 0c             	sub    $0xc,%esp
81005c99:	ff 75 f0             	push   -0x10(%ebp)
81005c9c:	e8 80 b4 ff ff       	call   81001121 <__sinit>
81005ca1:	83 c4 10             	add    $0x10,%esp
81005ca4:	83 ec 04             	sub    $0x4,%esp
81005ca7:	53                   	push   %ebx
81005ca8:	ff 75 08             	push   0x8(%ebp)
81005cab:	ff 75 f4             	push   -0xc(%ebp)
81005cae:	e8 0a ff ff ff       	call   81005bbd <__sputc_r>
81005cb3:	83 c4 10             	add    $0x10,%esp
81005cb6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005cb9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cbc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005cbf:	c9                   	leave  
81005cc0:	c3                   	ret    

81005cc1 <_read_r>:
81005cc1:	55                   	push   %ebp
81005cc2:	89 e5                	mov    %esp,%ebp
81005cc4:	83 ec 18             	sub    $0x18,%esp
81005cc7:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
81005cce:	00 00 00 
81005cd1:	83 ec 04             	sub    $0x4,%esp
81005cd4:	ff 75 14             	push   0x14(%ebp)
81005cd7:	ff 75 10             	push   0x10(%ebp)
81005cda:	ff 75 0c             	push   0xc(%ebp)
81005cdd:	e8 49 aa ff ff       	call   8100072b <read>
81005ce2:	83 c4 10             	add    $0x10,%esp
81005ce5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ce8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005cec:	75 14                	jne    81005d02 <_read_r+0x41>
81005cee:	a1 34 81 00 81       	mov    0x81008134,%eax
81005cf3:	85 c0                	test   %eax,%eax
81005cf5:	74 0b                	je     81005d02 <_read_r+0x41>
81005cf7:	8b 15 34 81 00 81    	mov    0x81008134,%edx
81005cfd:	8b 45 08             	mov    0x8(%ebp),%eax
81005d00:	89 10                	mov    %edx,(%eax)
81005d02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d05:	c9                   	leave  
81005d06:	c3                   	ret    

81005d07 <_realloc_r>:
81005d07:	55                   	push   %ebp
81005d08:	89 e5                	mov    %esp,%ebp
81005d0a:	83 ec 78             	sub    $0x78,%esp
81005d0d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005d11:	75 16                	jne    81005d29 <_realloc_r+0x22>
81005d13:	83 ec 08             	sub    $0x8,%esp
81005d16:	ff 75 10             	push   0x10(%ebp)
81005d19:	ff 75 08             	push   0x8(%ebp)
81005d1c:	e8 12 cd ff ff       	call   81002a33 <_malloc_r>
81005d21:	83 c4 10             	add    $0x10,%esp
81005d24:	e9 b6 08 00 00       	jmp    810065df <_realloc_r+0x8d8>
81005d29:	83 ec 0c             	sub    $0xc,%esp
81005d2c:	ff 75 08             	push   0x8(%ebp)
81005d2f:	e8 e4 d6 ff ff       	call   81003418 <__malloc_lock>
81005d34:	83 c4 10             	add    $0x10,%esp
81005d37:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d3a:	83 e8 08             	sub    $0x8,%eax
81005d3d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005d40:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d43:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d46:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d49:	8b 40 04             	mov    0x4(%eax),%eax
81005d4c:	83 e0 fc             	and    $0xfffffffc,%eax
81005d4f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005d52:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d55:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005d58:	8b 45 10             	mov    0x10(%ebp),%eax
81005d5b:	83 c0 0b             	add    $0xb,%eax
81005d5e:	83 f8 16             	cmp    $0x16,%eax
81005d61:	76 0b                	jbe    81005d6e <_realloc_r+0x67>
81005d63:	8b 45 10             	mov    0x10(%ebp),%eax
81005d66:	83 c0 0b             	add    $0xb,%eax
81005d69:	83 e0 f8             	and    $0xfffffff8,%eax
81005d6c:	eb 05                	jmp    81005d73 <_realloc_r+0x6c>
81005d6e:	b8 10 00 00 00       	mov    $0x10,%eax
81005d73:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005d76:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d79:	85 c0                	test   %eax,%eax
81005d7b:	78 08                	js     81005d85 <_realloc_r+0x7e>
81005d7d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d80:	3b 45 10             	cmp    0x10(%ebp),%eax
81005d83:	73 13                	jae    81005d98 <_realloc_r+0x91>
81005d85:	8b 45 08             	mov    0x8(%ebp),%eax
81005d88:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005d8e:	b8 00 00 00 00       	mov    $0x0,%eax
81005d93:	e9 47 08 00 00       	jmp    810065df <_realloc_r+0x8d8>
81005d98:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005d9b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d9e:	39 c2                	cmp    %eax,%edx
81005da0:	0f 8d 8b 07 00 00    	jge    81006531 <_realloc_r+0x82a>
81005da6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005da9:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005dac:	01 d0                	add    %edx,%eax
81005dae:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005db1:	b8 00 75 00 81       	mov    $0x81007500,%eax
81005db6:	8b 40 08             	mov    0x8(%eax),%eax
81005db9:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005dbc:	74 1e                	je     81005ddc <_realloc_r+0xd5>
81005dbe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005dc1:	8b 40 04             	mov    0x4(%eax),%eax
81005dc4:	83 e0 fe             	and    $0xfffffffe,%eax
81005dc7:	89 c2                	mov    %eax,%edx
81005dc9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005dcc:	01 d0                	add    %edx,%eax
81005dce:	8b 40 04             	mov    0x4(%eax),%eax
81005dd1:	83 e0 01             	and    $0x1,%eax
81005dd4:	85 c0                	test   %eax,%eax
81005dd6:	0f 85 ca 00 00 00    	jne    81005ea6 <_realloc_r+0x19f>
81005ddc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005ddf:	8b 40 04             	mov    0x4(%eax),%eax
81005de2:	83 e0 fc             	and    $0xfffffffc,%eax
81005de5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005de8:	b8 00 75 00 81       	mov    $0x81007500,%eax
81005ded:	8b 40 08             	mov    0x8(%eax),%eax
81005df0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005df3:	75 71                	jne    81005e66 <_realloc_r+0x15f>
81005df5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005df8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005dfb:	01 d0                	add    %edx,%eax
81005dfd:	89 c2                	mov    %eax,%edx
81005dff:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e02:	83 c0 10             	add    $0x10,%eax
81005e05:	39 c2                	cmp    %eax,%edx
81005e07:	0f 8c a9 00 00 00    	jl     81005eb6 <_realloc_r+0x1af>
81005e0d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005e10:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e13:	ba 00 75 00 81       	mov    $0x81007500,%edx
81005e18:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005e1b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e1e:	01 c8                	add    %ecx,%eax
81005e20:	89 42 08             	mov    %eax,0x8(%edx)
81005e23:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e26:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005e29:	89 c2                	mov    %eax,%edx
81005e2b:	b8 00 75 00 81       	mov    $0x81007500,%eax
81005e30:	8b 40 08             	mov    0x8(%eax),%eax
81005e33:	83 ca 01             	or     $0x1,%edx
81005e36:	89 50 04             	mov    %edx,0x4(%eax)
81005e39:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005e3c:	8b 40 04             	mov    0x4(%eax),%eax
81005e3f:	83 e0 01             	and    $0x1,%eax
81005e42:	0b 45 bc             	or     -0x44(%ebp),%eax
81005e45:	89 c2                	mov    %eax,%edx
81005e47:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005e4a:	89 50 04             	mov    %edx,0x4(%eax)
81005e4d:	83 ec 0c             	sub    $0xc,%esp
81005e50:	ff 75 08             	push   0x8(%ebp)
81005e53:	e8 c6 d5 ff ff       	call   8100341e <__malloc_unlock>
81005e58:	83 c4 10             	add    $0x10,%esp
81005e5b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005e5e:	83 c0 08             	add    $0x8,%eax
81005e61:	e9 79 07 00 00       	jmp    810065df <_realloc_r+0x8d8>
81005e66:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005e69:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e6c:	01 d0                	add    %edx,%eax
81005e6e:	89 c2                	mov    %eax,%edx
81005e70:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e73:	39 c2                	cmp    %eax,%edx
81005e75:	7c 3f                	jl     81005eb6 <_realloc_r+0x1af>
81005e77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e7a:	8b 40 0c             	mov    0xc(%eax),%eax
81005e7d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e80:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e83:	8b 40 08             	mov    0x8(%eax),%eax
81005e86:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e89:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e8c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e8f:	89 50 0c             	mov    %edx,0xc(%eax)
81005e92:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e95:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e98:	89 50 08             	mov    %edx,0x8(%eax)
81005e9b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005e9e:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ea1:	e9 8c 06 00 00       	jmp    81006532 <_realloc_r+0x82b>
81005ea6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005ead:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005eb4:	eb 01                	jmp    81005eb7 <_realloc_r+0x1b0>
81005eb6:	90                   	nop
81005eb7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005eba:	8b 40 04             	mov    0x4(%eax),%eax
81005ebd:	83 e0 01             	and    $0x1,%eax
81005ec0:	85 c0                	test   %eax,%eax
81005ec2:	0f 85 d6 04 00 00    	jne    8100639e <_realloc_r+0x697>
81005ec8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ecb:	8b 00                	mov    (%eax),%eax
81005ecd:	f7 d8                	neg    %eax
81005ecf:	89 c2                	mov    %eax,%edx
81005ed1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ed4:	01 d0                	add    %edx,%eax
81005ed6:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005ed9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005edc:	8b 40 04             	mov    0x4(%eax),%eax
81005edf:	83 e0 fc             	and    $0xfffffffc,%eax
81005ee2:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005ee5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005ee9:	0f 84 4a 03 00 00    	je     81006239 <_realloc_r+0x532>
81005eef:	b8 00 75 00 81       	mov    $0x81007500,%eax
81005ef4:	8b 40 08             	mov    0x8(%eax),%eax
81005ef7:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005efa:	0f 85 b0 01 00 00    	jne    810060b0 <_realloc_r+0x3a9>
81005f00:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f03:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f06:	01 c2                	add    %eax,%edx
81005f08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f0b:	01 d0                	add    %edx,%eax
81005f0d:	89 c2                	mov    %eax,%edx
81005f0f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f12:	83 c0 10             	add    $0x10,%eax
81005f15:	39 c2                	cmp    %eax,%edx
81005f17:	0f 8c 1c 03 00 00    	jl     81006239 <_realloc_r+0x532>
81005f1d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f20:	8b 40 0c             	mov    0xc(%eax),%eax
81005f23:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005f26:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f29:	8b 40 08             	mov    0x8(%eax),%eax
81005f2c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005f2f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005f32:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005f35:	89 50 0c             	mov    %edx,0xc(%eax)
81005f38:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005f3b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005f3e:	89 50 08             	mov    %edx,0x8(%eax)
81005f41:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f44:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f47:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005f4a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005f4d:	01 d0                	add    %edx,%eax
81005f4f:	01 45 f0             	add    %eax,-0x10(%ebp)
81005f52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f55:	83 c0 08             	add    $0x8,%eax
81005f58:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005f5b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005f5e:	83 e8 04             	sub    $0x4,%eax
81005f61:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005f64:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005f68:	0f 87 de 00 00 00    	ja     8100604c <_realloc_r+0x345>
81005f6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f71:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f74:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f77:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005f7a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005f7e:	0f 86 90 00 00 00    	jbe    81006014 <_realloc_r+0x30d>
81005f84:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005f87:	8d 42 04             	lea    0x4(%edx),%eax
81005f8a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f8d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f90:	8d 48 04             	lea    0x4(%eax),%ecx
81005f93:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005f96:	8b 12                	mov    (%edx),%edx
81005f98:	89 10                	mov    %edx,(%eax)
81005f9a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005f9d:	8d 42 04             	lea    0x4(%edx),%eax
81005fa0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005fa3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005fa6:	8d 48 04             	lea    0x4(%eax),%ecx
81005fa9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005fac:	8b 12                	mov    (%edx),%edx
81005fae:	89 10                	mov    %edx,(%eax)
81005fb0:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005fb4:	76 5e                	jbe    81006014 <_realloc_r+0x30d>
81005fb6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005fb9:	8d 42 04             	lea    0x4(%edx),%eax
81005fbc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005fbf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005fc2:	8d 48 04             	lea    0x4(%eax),%ecx
81005fc5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005fc8:	8b 12                	mov    (%edx),%edx
81005fca:	89 10                	mov    %edx,(%eax)
81005fcc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005fcf:	8d 42 04             	lea    0x4(%edx),%eax
81005fd2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005fd5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005fd8:	8d 48 04             	lea    0x4(%eax),%ecx
81005fdb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005fde:	8b 12                	mov    (%edx),%edx
81005fe0:	89 10                	mov    %edx,(%eax)
81005fe2:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005fe6:	76 2c                	jbe    81006014 <_realloc_r+0x30d>
81005fe8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005feb:	8d 42 04             	lea    0x4(%edx),%eax
81005fee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ff1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ff4:	8d 48 04             	lea    0x4(%eax),%ecx
81005ff7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ffa:	8b 12                	mov    (%edx),%edx
81005ffc:	89 10                	mov    %edx,(%eax)
81005ffe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006001:	8d 42 04             	lea    0x4(%edx),%eax
81006004:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006007:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100600a:	8d 48 04             	lea    0x4(%eax),%ecx
8100600d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006010:	8b 12                	mov    (%edx),%edx
81006012:	89 10                	mov    %edx,(%eax)
81006014:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006017:	8d 42 04             	lea    0x4(%edx),%eax
8100601a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100601d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006020:	8d 48 04             	lea    0x4(%eax),%ecx
81006023:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006026:	8b 12                	mov    (%edx),%edx
81006028:	89 10                	mov    %edx,(%eax)
8100602a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100602d:	8d 42 04             	lea    0x4(%edx),%eax
81006030:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006033:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006036:	8d 48 04             	lea    0x4(%eax),%ecx
81006039:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100603c:	8b 12                	mov    (%edx),%edx
8100603e:	89 10                	mov    %edx,(%eax)
81006040:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006043:	8b 10                	mov    (%eax),%edx
81006045:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006048:	89 10                	mov    %edx,(%eax)
8100604a:	eb 14                	jmp    81006060 <_realloc_r+0x359>
8100604c:	83 ec 04             	sub    $0x4,%esp
8100604f:	ff 75 a0             	push   -0x60(%ebp)
81006052:	ff 75 0c             	push   0xc(%ebp)
81006055:	ff 75 a8             	push   -0x58(%ebp)
81006058:	e8 d3 fa ff ff       	call   81005b30 <memmove>
8100605d:	83 c4 10             	add    $0x10,%esp
81006060:	ba 00 75 00 81       	mov    $0x81007500,%edx
81006065:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006068:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100606b:	01 c8                	add    %ecx,%eax
8100606d:	89 42 08             	mov    %eax,0x8(%edx)
81006070:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006073:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006076:	89 c2                	mov    %eax,%edx
81006078:	b8 00 75 00 81       	mov    $0x81007500,%eax
8100607d:	8b 40 08             	mov    0x8(%eax),%eax
81006080:	83 ca 01             	or     $0x1,%edx
81006083:	89 50 04             	mov    %edx,0x4(%eax)
81006086:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006089:	8b 40 04             	mov    0x4(%eax),%eax
8100608c:	83 e0 01             	and    $0x1,%eax
8100608f:	0b 45 bc             	or     -0x44(%ebp),%eax
81006092:	89 c2                	mov    %eax,%edx
81006094:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006097:	89 50 04             	mov    %edx,0x4(%eax)
8100609a:	83 ec 0c             	sub    $0xc,%esp
8100609d:	ff 75 08             	push   0x8(%ebp)
810060a0:	e8 79 d3 ff ff       	call   8100341e <__malloc_unlock>
810060a5:	83 c4 10             	add    $0x10,%esp
810060a8:	8b 45 a8             	mov    -0x58(%ebp),%eax
810060ab:	e9 2f 05 00 00       	jmp    810065df <_realloc_r+0x8d8>
810060b0:	8b 55 e8             	mov    -0x18(%ebp),%edx
810060b3:	8b 45 ac             	mov    -0x54(%ebp),%eax
810060b6:	01 c2                	add    %eax,%edx
810060b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060bb:	01 d0                	add    %edx,%eax
810060bd:	89 c2                	mov    %eax,%edx
810060bf:	8b 45 bc             	mov    -0x44(%ebp),%eax
810060c2:	39 c2                	cmp    %eax,%edx
810060c4:	0f 8c 6f 01 00 00    	jl     81006239 <_realloc_r+0x532>
810060ca:	8b 45 ec             	mov    -0x14(%ebp),%eax
810060cd:	8b 40 0c             	mov    0xc(%eax),%eax
810060d0:	89 45 b8             	mov    %eax,-0x48(%ebp)
810060d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810060d6:	8b 40 08             	mov    0x8(%eax),%eax
810060d9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810060dc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810060df:	8b 55 b8             	mov    -0x48(%ebp),%edx
810060e2:	89 50 0c             	mov    %edx,0xc(%eax)
810060e5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810060e8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810060eb:	89 50 08             	mov    %edx,0x8(%eax)
810060ee:	8b 45 b0             	mov    -0x50(%ebp),%eax
810060f1:	8b 40 0c             	mov    0xc(%eax),%eax
810060f4:	89 45 b8             	mov    %eax,-0x48(%ebp)
810060f7:	8b 45 b0             	mov    -0x50(%ebp),%eax
810060fa:	8b 40 08             	mov    0x8(%eax),%eax
810060fd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006100:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006103:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006106:	89 50 0c             	mov    %edx,0xc(%eax)
81006109:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100610c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100610f:	89 50 08             	mov    %edx,0x8(%eax)
81006112:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006115:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006118:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100611b:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100611e:	01 d0                	add    %edx,%eax
81006120:	01 45 f0             	add    %eax,-0x10(%ebp)
81006123:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006126:	83 c0 08             	add    $0x8,%eax
81006129:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100612c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100612f:	83 e8 04             	sub    $0x4,%eax
81006132:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81006135:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81006139:	0f 87 e1 00 00 00    	ja     81006220 <_realloc_r+0x519>
8100613f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006142:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006145:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006148:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100614b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
8100614f:	0f 86 90 00 00 00    	jbe    810061e5 <_realloc_r+0x4de>
81006155:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006158:	8d 42 04             	lea    0x4(%edx),%eax
8100615b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100615e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006161:	8d 48 04             	lea    0x4(%eax),%ecx
81006164:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006167:	8b 12                	mov    (%edx),%edx
81006169:	89 10                	mov    %edx,(%eax)
8100616b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100616e:	8d 42 04             	lea    0x4(%edx),%eax
81006171:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006174:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006177:	8d 48 04             	lea    0x4(%eax),%ecx
8100617a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100617d:	8b 12                	mov    (%edx),%edx
8100617f:	89 10                	mov    %edx,(%eax)
81006181:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81006185:	76 5e                	jbe    810061e5 <_realloc_r+0x4de>
81006187:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100618a:	8d 42 04             	lea    0x4(%edx),%eax
8100618d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006190:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006193:	8d 48 04             	lea    0x4(%eax),%ecx
81006196:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006199:	8b 12                	mov    (%edx),%edx
8100619b:	89 10                	mov    %edx,(%eax)
8100619d:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061a0:	8d 42 04             	lea    0x4(%edx),%eax
810061a3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061a6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061a9:	8d 48 04             	lea    0x4(%eax),%ecx
810061ac:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061af:	8b 12                	mov    (%edx),%edx
810061b1:	89 10                	mov    %edx,(%eax)
810061b3:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810061b7:	76 2c                	jbe    810061e5 <_realloc_r+0x4de>
810061b9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061bc:	8d 42 04             	lea    0x4(%edx),%eax
810061bf:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061c5:	8d 48 04             	lea    0x4(%eax),%ecx
810061c8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061cb:	8b 12                	mov    (%edx),%edx
810061cd:	89 10                	mov    %edx,(%eax)
810061cf:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061d2:	8d 42 04             	lea    0x4(%edx),%eax
810061d5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061d8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061db:	8d 48 04             	lea    0x4(%eax),%ecx
810061de:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061e1:	8b 12                	mov    (%edx),%edx
810061e3:	89 10                	mov    %edx,(%eax)
810061e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061e8:	8d 42 04             	lea    0x4(%edx),%eax
810061eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061f1:	8d 48 04             	lea    0x4(%eax),%ecx
810061f4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061f7:	8b 12                	mov    (%edx),%edx
810061f9:	89 10                	mov    %edx,(%eax)
810061fb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061fe:	8d 42 04             	lea    0x4(%edx),%eax
81006201:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006204:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006207:	8d 48 04             	lea    0x4(%eax),%ecx
8100620a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100620d:	8b 12                	mov    (%edx),%edx
8100620f:	89 10                	mov    %edx,(%eax)
81006211:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006214:	8b 10                	mov    (%eax),%edx
81006216:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006219:	89 10                	mov    %edx,(%eax)
8100621b:	e9 12 03 00 00       	jmp    81006532 <_realloc_r+0x82b>
81006220:	83 ec 04             	sub    $0x4,%esp
81006223:	ff 75 a4             	push   -0x5c(%ebp)
81006226:	ff 75 0c             	push   0xc(%ebp)
81006229:	ff 75 a8             	push   -0x58(%ebp)
8100622c:	e8 ff f8 ff ff       	call   81005b30 <memmove>
81006231:	83 c4 10             	add    $0x10,%esp
81006234:	e9 f9 02 00 00       	jmp    81006532 <_realloc_r+0x82b>
81006239:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
8100623d:	0f 84 5b 01 00 00    	je     8100639e <_realloc_r+0x697>
81006243:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006246:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006249:	01 d0                	add    %edx,%eax
8100624b:	89 c2                	mov    %eax,%edx
8100624d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006250:	39 c2                	cmp    %eax,%edx
81006252:	0f 8c 46 01 00 00    	jl     8100639e <_realloc_r+0x697>
81006258:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100625b:	8b 40 0c             	mov    0xc(%eax),%eax
8100625e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006261:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006264:	8b 40 08             	mov    0x8(%eax),%eax
81006267:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100626a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100626d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006270:	89 50 0c             	mov    %edx,0xc(%eax)
81006273:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006276:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006279:	89 50 08             	mov    %edx,0x8(%eax)
8100627c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100627f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006282:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006285:	01 45 f0             	add    %eax,-0x10(%ebp)
81006288:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100628b:	83 c0 08             	add    $0x8,%eax
8100628e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006291:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006294:	83 e8 04             	sub    $0x4,%eax
81006297:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100629a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100629e:	0f 87 e1 00 00 00    	ja     81006385 <_realloc_r+0x67e>
810062a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810062a7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810062aa:	8b 45 a8             	mov    -0x58(%ebp),%eax
810062ad:	89 45 d0             	mov    %eax,-0x30(%ebp)
810062b0:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810062b4:	0f 86 90 00 00 00    	jbe    8100634a <_realloc_r+0x643>
810062ba:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810062bd:	8d 42 04             	lea    0x4(%edx),%eax
810062c0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810062c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810062c6:	8d 48 04             	lea    0x4(%eax),%ecx
810062c9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810062cc:	8b 12                	mov    (%edx),%edx
810062ce:	89 10                	mov    %edx,(%eax)
810062d0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810062d3:	8d 42 04             	lea    0x4(%edx),%eax
810062d6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810062d9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810062dc:	8d 48 04             	lea    0x4(%eax),%ecx
810062df:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810062e2:	8b 12                	mov    (%edx),%edx
810062e4:	89 10                	mov    %edx,(%eax)
810062e6:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810062ea:	76 5e                	jbe    8100634a <_realloc_r+0x643>
810062ec:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810062ef:	8d 42 04             	lea    0x4(%edx),%eax
810062f2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810062f5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810062f8:	8d 48 04             	lea    0x4(%eax),%ecx
810062fb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810062fe:	8b 12                	mov    (%edx),%edx
81006300:	89 10                	mov    %edx,(%eax)
81006302:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006305:	8d 42 04             	lea    0x4(%edx),%eax
81006308:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100630b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100630e:	8d 48 04             	lea    0x4(%eax),%ecx
81006311:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006314:	8b 12                	mov    (%edx),%edx
81006316:	89 10                	mov    %edx,(%eax)
81006318:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100631c:	76 2c                	jbe    8100634a <_realloc_r+0x643>
8100631e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006321:	8d 42 04             	lea    0x4(%edx),%eax
81006324:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006327:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100632a:	8d 48 04             	lea    0x4(%eax),%ecx
8100632d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006330:	8b 12                	mov    (%edx),%edx
81006332:	89 10                	mov    %edx,(%eax)
81006334:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006337:	8d 42 04             	lea    0x4(%edx),%eax
8100633a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100633d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006340:	8d 48 04             	lea    0x4(%eax),%ecx
81006343:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006346:	8b 12                	mov    (%edx),%edx
81006348:	89 10                	mov    %edx,(%eax)
8100634a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100634d:	8d 42 04             	lea    0x4(%edx),%eax
81006350:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006353:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006356:	8d 48 04             	lea    0x4(%eax),%ecx
81006359:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100635c:	8b 12                	mov    (%edx),%edx
8100635e:	89 10                	mov    %edx,(%eax)
81006360:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006363:	8d 42 04             	lea    0x4(%edx),%eax
81006366:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006369:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100636c:	8d 48 04             	lea    0x4(%eax),%ecx
8100636f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006372:	8b 12                	mov    (%edx),%edx
81006374:	89 10                	mov    %edx,(%eax)
81006376:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006379:	8b 10                	mov    (%eax),%edx
8100637b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100637e:	89 10                	mov    %edx,(%eax)
81006380:	e9 ad 01 00 00       	jmp    81006532 <_realloc_r+0x82b>
81006385:	83 ec 04             	sub    $0x4,%esp
81006388:	ff 75 9c             	push   -0x64(%ebp)
8100638b:	ff 75 0c             	push   0xc(%ebp)
8100638e:	ff 75 a8             	push   -0x58(%ebp)
81006391:	e8 9a f7 ff ff       	call   81005b30 <memmove>
81006396:	83 c4 10             	add    $0x10,%esp
81006399:	e9 94 01 00 00       	jmp    81006532 <_realloc_r+0x82b>
8100639e:	83 ec 08             	sub    $0x8,%esp
810063a1:	ff 75 10             	push   0x10(%ebp)
810063a4:	ff 75 08             	push   0x8(%ebp)
810063a7:	e8 87 c6 ff ff       	call   81002a33 <_malloc_r>
810063ac:	83 c4 10             	add    $0x10,%esp
810063af:	89 45 a8             	mov    %eax,-0x58(%ebp)
810063b2:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810063b6:	75 18                	jne    810063d0 <_realloc_r+0x6c9>
810063b8:	83 ec 0c             	sub    $0xc,%esp
810063bb:	ff 75 08             	push   0x8(%ebp)
810063be:	e8 5b d0 ff ff       	call   8100341e <__malloc_unlock>
810063c3:	83 c4 10             	add    $0x10,%esp
810063c6:	b8 00 00 00 00       	mov    $0x0,%eax
810063cb:	e9 0f 02 00 00       	jmp    810065df <_realloc_r+0x8d8>
810063d0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810063d3:	83 e8 08             	sub    $0x8,%eax
810063d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063d9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810063dc:	8b 40 04             	mov    0x4(%eax),%eax
810063df:	83 e0 fe             	and    $0xfffffffe,%eax
810063e2:	89 c2                	mov    %eax,%edx
810063e4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810063e7:	01 d0                	add    %edx,%eax
810063e9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810063ec:	75 17                	jne    81006405 <_realloc_r+0x6fe>
810063ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063f1:	8b 40 04             	mov    0x4(%eax),%eax
810063f4:	83 e0 fc             	and    $0xfffffffc,%eax
810063f7:	01 45 f0             	add    %eax,-0x10(%ebp)
810063fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810063fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006400:	e9 2d 01 00 00       	jmp    81006532 <_realloc_r+0x82b>
81006405:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006408:	83 e8 04             	sub    $0x4,%eax
8100640b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100640e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006412:	0f 87 de 00 00 00    	ja     810064f6 <_realloc_r+0x7ef>
81006418:	8b 45 0c             	mov    0xc(%ebp),%eax
8100641b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100641e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006421:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006424:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81006428:	0f 86 90 00 00 00    	jbe    810064be <_realloc_r+0x7b7>
8100642e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006431:	8d 42 04             	lea    0x4(%edx),%eax
81006434:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006437:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100643a:	8d 48 04             	lea    0x4(%eax),%ecx
8100643d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006440:	8b 12                	mov    (%edx),%edx
81006442:	89 10                	mov    %edx,(%eax)
81006444:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006447:	8d 42 04             	lea    0x4(%edx),%eax
8100644a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100644d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006450:	8d 48 04             	lea    0x4(%eax),%ecx
81006453:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006456:	8b 12                	mov    (%edx),%edx
81006458:	89 10                	mov    %edx,(%eax)
8100645a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100645e:	76 5e                	jbe    810064be <_realloc_r+0x7b7>
81006460:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006463:	8d 42 04             	lea    0x4(%edx),%eax
81006466:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006469:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100646c:	8d 48 04             	lea    0x4(%eax),%ecx
8100646f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006472:	8b 12                	mov    (%edx),%edx
81006474:	89 10                	mov    %edx,(%eax)
81006476:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006479:	8d 42 04             	lea    0x4(%edx),%eax
8100647c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100647f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006482:	8d 48 04             	lea    0x4(%eax),%ecx
81006485:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006488:	8b 12                	mov    (%edx),%edx
8100648a:	89 10                	mov    %edx,(%eax)
8100648c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006490:	76 2c                	jbe    810064be <_realloc_r+0x7b7>
81006492:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006495:	8d 42 04             	lea    0x4(%edx),%eax
81006498:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100649b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100649e:	8d 48 04             	lea    0x4(%eax),%ecx
810064a1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064a4:	8b 12                	mov    (%edx),%edx
810064a6:	89 10                	mov    %edx,(%eax)
810064a8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064ab:	8d 42 04             	lea    0x4(%edx),%eax
810064ae:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064b1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064b4:	8d 48 04             	lea    0x4(%eax),%ecx
810064b7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064ba:	8b 12                	mov    (%edx),%edx
810064bc:	89 10                	mov    %edx,(%eax)
810064be:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064c1:	8d 42 04             	lea    0x4(%edx),%eax
810064c4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064ca:	8d 48 04             	lea    0x4(%eax),%ecx
810064cd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064d0:	8b 12                	mov    (%edx),%edx
810064d2:	89 10                	mov    %edx,(%eax)
810064d4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064d7:	8d 42 04             	lea    0x4(%edx),%eax
810064da:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064dd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064e0:	8d 48 04             	lea    0x4(%eax),%ecx
810064e3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064e6:	8b 12                	mov    (%edx),%edx
810064e8:	89 10                	mov    %edx,(%eax)
810064ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
810064ed:	8b 10                	mov    (%eax),%edx
810064ef:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064f2:	89 10                	mov    %edx,(%eax)
810064f4:	eb 14                	jmp    8100650a <_realloc_r+0x803>
810064f6:	83 ec 04             	sub    $0x4,%esp
810064f9:	ff 75 98             	push   -0x68(%ebp)
810064fc:	ff 75 0c             	push   0xc(%ebp)
810064ff:	ff 75 a8             	push   -0x58(%ebp)
81006502:	e8 29 f6 ff ff       	call   81005b30 <memmove>
81006507:	83 c4 10             	add    $0x10,%esp
8100650a:	83 ec 08             	sub    $0x8,%esp
8100650d:	ff 75 0c             	push   0xc(%ebp)
81006510:	ff 75 08             	push   0x8(%ebp)
81006513:	e8 6b ad ff ff       	call   81001283 <_free_r>
81006518:	83 c4 10             	add    $0x10,%esp
8100651b:	83 ec 0c             	sub    $0xc,%esp
8100651e:	ff 75 08             	push   0x8(%ebp)
81006521:	e8 f8 ce ff ff       	call   8100341e <__malloc_unlock>
81006526:	83 c4 10             	add    $0x10,%esp
81006529:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100652c:	e9 ae 00 00 00       	jmp    810065df <_realloc_r+0x8d8>
81006531:	90                   	nop
81006532:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006535:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006538:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100653b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100653f:	76 5d                	jbe    8100659e <_realloc_r+0x897>
81006541:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006544:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006547:	01 d0                	add    %edx,%eax
81006549:	89 45 90             	mov    %eax,-0x70(%ebp)
8100654c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100654f:	8b 40 04             	mov    0x4(%eax),%eax
81006552:	83 e0 01             	and    $0x1,%eax
81006555:	0b 45 bc             	or     -0x44(%ebp),%eax
81006558:	89 c2                	mov    %eax,%edx
8100655a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100655d:	89 50 04             	mov    %edx,0x4(%eax)
81006560:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006563:	83 c8 01             	or     $0x1,%eax
81006566:	89 c2                	mov    %eax,%edx
81006568:	8b 45 90             	mov    -0x70(%ebp),%eax
8100656b:	89 50 04             	mov    %edx,0x4(%eax)
8100656e:	8b 55 90             	mov    -0x70(%ebp),%edx
81006571:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006574:	01 d0                	add    %edx,%eax
81006576:	8b 50 04             	mov    0x4(%eax),%edx
81006579:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100657c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100657f:	01 c8                	add    %ecx,%eax
81006581:	83 ca 01             	or     $0x1,%edx
81006584:	89 50 04             	mov    %edx,0x4(%eax)
81006587:	8b 45 90             	mov    -0x70(%ebp),%eax
8100658a:	83 c0 08             	add    $0x8,%eax
8100658d:	83 ec 08             	sub    $0x8,%esp
81006590:	50                   	push   %eax
81006591:	ff 75 08             	push   0x8(%ebp)
81006594:	e8 ea ac ff ff       	call   81001283 <_free_r>
81006599:	83 c4 10             	add    $0x10,%esp
8100659c:	eb 2d                	jmp    810065cb <_realloc_r+0x8c4>
8100659e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065a1:	8b 40 04             	mov    0x4(%eax),%eax
810065a4:	83 e0 01             	and    $0x1,%eax
810065a7:	0b 45 f0             	or     -0x10(%ebp),%eax
810065aa:	89 c2                	mov    %eax,%edx
810065ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065af:	89 50 04             	mov    %edx,0x4(%eax)
810065b2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810065b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065b8:	01 d0                	add    %edx,%eax
810065ba:	8b 50 04             	mov    0x4(%eax),%edx
810065bd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810065c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065c3:	01 c8                	add    %ecx,%eax
810065c5:	83 ca 01             	or     $0x1,%edx
810065c8:	89 50 04             	mov    %edx,0x4(%eax)
810065cb:	83 ec 0c             	sub    $0xc,%esp
810065ce:	ff 75 08             	push   0x8(%ebp)
810065d1:	e8 48 ce ff ff       	call   8100341e <__malloc_unlock>
810065d6:	83 c4 10             	add    $0x10,%esp
810065d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065dc:	83 c0 08             	add    $0x8,%eax
810065df:	c9                   	leave  
810065e0:	c3                   	ret    

810065e1 <cleanup_glue>:
810065e1:	55                   	push   %ebp
810065e2:	89 e5                	mov    %esp,%ebp
810065e4:	83 ec 08             	sub    $0x8,%esp
810065e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810065ea:	8b 00                	mov    (%eax),%eax
810065ec:	85 c0                	test   %eax,%eax
810065ee:	74 14                	je     81006604 <cleanup_glue+0x23>
810065f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810065f3:	8b 00                	mov    (%eax),%eax
810065f5:	83 ec 08             	sub    $0x8,%esp
810065f8:	50                   	push   %eax
810065f9:	ff 75 08             	push   0x8(%ebp)
810065fc:	e8 e0 ff ff ff       	call   810065e1 <cleanup_glue>
81006601:	83 c4 10             	add    $0x10,%esp
81006604:	83 ec 08             	sub    $0x8,%esp
81006607:	ff 75 0c             	push   0xc(%ebp)
8100660a:	ff 75 08             	push   0x8(%ebp)
8100660d:	e8 71 ac ff ff       	call   81001283 <_free_r>
81006612:	83 c4 10             	add    $0x10,%esp
81006615:	90                   	nop
81006616:	c9                   	leave  
81006617:	c3                   	ret    

81006618 <_reclaim_reent>:
81006618:	55                   	push   %ebp
81006619:	89 e5                	mov    %esp,%ebp
8100661b:	83 ec 28             	sub    $0x28,%esp
8100661e:	a1 e4 74 00 81       	mov    0x810074e4,%eax
81006623:	39 45 08             	cmp    %eax,0x8(%ebp)
81006626:	0f 84 49 01 00 00    	je     81006775 <_reclaim_reent+0x15d>
8100662c:	8b 45 08             	mov    0x8(%ebp),%eax
8100662f:	8b 40 4c             	mov    0x4c(%eax),%eax
81006632:	85 c0                	test   %eax,%eax
81006634:	74 64                	je     8100669a <_reclaim_reent+0x82>
81006636:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100663d:	eb 3e                	jmp    8100667d <_reclaim_reent+0x65>
8100663f:	8b 45 08             	mov    0x8(%ebp),%eax
81006642:	8b 50 4c             	mov    0x4c(%eax),%edx
81006645:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006648:	c1 e0 02             	shl    $0x2,%eax
8100664b:	01 d0                	add    %edx,%eax
8100664d:	8b 00                	mov    (%eax),%eax
8100664f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006652:	eb 1f                	jmp    81006673 <_reclaim_reent+0x5b>
81006654:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006657:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100665a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100665d:	8b 00                	mov    (%eax),%eax
8100665f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006662:	83 ec 08             	sub    $0x8,%esp
81006665:	ff 75 e8             	push   -0x18(%ebp)
81006668:	ff 75 08             	push   0x8(%ebp)
8100666b:	e8 13 ac ff ff       	call   81001283 <_free_r>
81006670:	83 c4 10             	add    $0x10,%esp
81006673:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006677:	75 db                	jne    81006654 <_reclaim_reent+0x3c>
81006679:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100667d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006680:	83 f8 1f             	cmp    $0x1f,%eax
81006683:	76 ba                	jbe    8100663f <_reclaim_reent+0x27>
81006685:	8b 45 08             	mov    0x8(%ebp),%eax
81006688:	8b 40 4c             	mov    0x4c(%eax),%eax
8100668b:	83 ec 08             	sub    $0x8,%esp
8100668e:	50                   	push   %eax
8100668f:	ff 75 08             	push   0x8(%ebp)
81006692:	e8 ec ab ff ff       	call   81001283 <_free_r>
81006697:	83 c4 10             	add    $0x10,%esp
8100669a:	8b 45 08             	mov    0x8(%ebp),%eax
8100669d:	8b 40 40             	mov    0x40(%eax),%eax
810066a0:	85 c0                	test   %eax,%eax
810066a2:	74 15                	je     810066b9 <_reclaim_reent+0xa1>
810066a4:	8b 45 08             	mov    0x8(%ebp),%eax
810066a7:	8b 40 40             	mov    0x40(%eax),%eax
810066aa:	83 ec 08             	sub    $0x8,%esp
810066ad:	50                   	push   %eax
810066ae:	ff 75 08             	push   0x8(%ebp)
810066b1:	e8 cd ab ff ff       	call   81001283 <_free_r>
810066b6:	83 c4 10             	add    $0x10,%esp
810066b9:	8b 45 08             	mov    0x8(%ebp),%eax
810066bc:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810066c2:	85 c0                	test   %eax,%eax
810066c4:	74 50                	je     81006716 <_reclaim_reent+0xfe>
810066c6:	8b 45 08             	mov    0x8(%ebp),%eax
810066c9:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810066cf:	8b 55 08             	mov    0x8(%ebp),%edx
810066d2:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810066d8:	39 d0                	cmp    %edx,%eax
810066da:	74 3a                	je     81006716 <_reclaim_reent+0xfe>
810066dc:	8b 45 08             	mov    0x8(%ebp),%eax
810066df:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810066e5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810066e8:	eb 1f                	jmp    81006709 <_reclaim_reent+0xf1>
810066ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810066ed:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810066f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810066f3:	8b 00                	mov    (%eax),%eax
810066f5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810066f8:	83 ec 08             	sub    $0x8,%esp
810066fb:	ff 75 e4             	push   -0x1c(%ebp)
810066fe:	ff 75 08             	push   0x8(%ebp)
81006701:	e8 7d ab ff ff       	call   81001283 <_free_r>
81006706:	83 c4 10             	add    $0x10,%esp
81006709:	8b 45 08             	mov    0x8(%ebp),%eax
8100670c:	05 4c 01 00 00       	add    $0x14c,%eax
81006711:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006714:	75 d4                	jne    810066ea <_reclaim_reent+0xd2>
81006716:	8b 45 08             	mov    0x8(%ebp),%eax
81006719:	8b 40 54             	mov    0x54(%eax),%eax
8100671c:	85 c0                	test   %eax,%eax
8100671e:	74 15                	je     81006735 <_reclaim_reent+0x11d>
81006720:	8b 45 08             	mov    0x8(%ebp),%eax
81006723:	8b 40 54             	mov    0x54(%eax),%eax
81006726:	83 ec 08             	sub    $0x8,%esp
81006729:	50                   	push   %eax
8100672a:	ff 75 08             	push   0x8(%ebp)
8100672d:	e8 51 ab ff ff       	call   81001283 <_free_r>
81006732:	83 c4 10             	add    $0x10,%esp
81006735:	8b 45 08             	mov    0x8(%ebp),%eax
81006738:	8b 40 38             	mov    0x38(%eax),%eax
8100673b:	85 c0                	test   %eax,%eax
8100673d:	74 36                	je     81006775 <_reclaim_reent+0x15d>
8100673f:	8b 45 08             	mov    0x8(%ebp),%eax
81006742:	8b 40 3c             	mov    0x3c(%eax),%eax
81006745:	83 ec 0c             	sub    $0xc,%esp
81006748:	ff 75 08             	push   0x8(%ebp)
8100674b:	ff d0                	call   *%eax
8100674d:	83 c4 10             	add    $0x10,%esp
81006750:	8b 45 08             	mov    0x8(%ebp),%eax
81006753:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006759:	85 c0                	test   %eax,%eax
8100675b:	74 18                	je     81006775 <_reclaim_reent+0x15d>
8100675d:	8b 45 08             	mov    0x8(%ebp),%eax
81006760:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006766:	83 ec 08             	sub    $0x8,%esp
81006769:	50                   	push   %eax
8100676a:	ff 75 08             	push   0x8(%ebp)
8100676d:	e8 6f fe ff ff       	call   810065e1 <cleanup_glue>
81006772:	83 c4 10             	add    $0x10,%esp
81006775:	90                   	nop
81006776:	c9                   	leave  
81006777:	c3                   	ret    

81006778 <strncmp>:
81006778:	55                   	push   %ebp
81006779:	89 e5                	mov    %esp,%ebp
8100677b:	83 ec 10             	sub    $0x10,%esp
8100677e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006782:	75 0a                	jne    8100678e <strncmp+0x16>
81006784:	b8 00 00 00 00       	mov    $0x0,%eax
81006789:	e9 cb 00 00 00       	jmp    81006859 <strncmp+0xe1>
8100678e:	8b 55 08             	mov    0x8(%ebp),%edx
81006791:	8b 45 0c             	mov    0xc(%ebp),%eax
81006794:	09 d0                	or     %edx,%eax
81006796:	83 e0 03             	and    $0x3,%eax
81006799:	85 c0                	test   %eax,%eax
8100679b:	0f 85 85 00 00 00    	jne    81006826 <strncmp+0xae>
810067a1:	8b 45 08             	mov    0x8(%ebp),%eax
810067a4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810067a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810067aa:	89 45 f8             	mov    %eax,-0x8(%ebp)
810067ad:	eb 36                	jmp    810067e5 <strncmp+0x6d>
810067af:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810067b3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810067b7:	74 1d                	je     810067d6 <strncmp+0x5e>
810067b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810067bc:	8b 00                	mov    (%eax),%eax
810067be:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810067c4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810067c7:	8b 00                	mov    (%eax),%eax
810067c9:	f7 d0                	not    %eax
810067cb:	21 d0                	and    %edx,%eax
810067cd:	25 80 80 80 80       	and    $0x80808080,%eax
810067d2:	85 c0                	test   %eax,%eax
810067d4:	74 07                	je     810067dd <strncmp+0x65>
810067d6:	b8 00 00 00 00       	mov    $0x0,%eax
810067db:	eb 7c                	jmp    81006859 <strncmp+0xe1>
810067dd:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810067e1:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810067e5:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810067e9:	76 0e                	jbe    810067f9 <strncmp+0x81>
810067eb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810067ee:	8b 10                	mov    (%eax),%edx
810067f0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810067f3:	8b 00                	mov    (%eax),%eax
810067f5:	39 c2                	cmp    %eax,%edx
810067f7:	74 b6                	je     810067af <strncmp+0x37>
810067f9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810067fc:	89 45 08             	mov    %eax,0x8(%ebp)
810067ff:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006802:	89 45 0c             	mov    %eax,0xc(%ebp)
81006805:	eb 1f                	jmp    81006826 <strncmp+0xae>
81006807:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100680b:	74 0a                	je     81006817 <strncmp+0x9f>
8100680d:	8b 45 08             	mov    0x8(%ebp),%eax
81006810:	0f b6 00             	movzbl (%eax),%eax
81006813:	84 c0                	test   %al,%al
81006815:	75 07                	jne    8100681e <strncmp+0xa6>
81006817:	b8 00 00 00 00       	mov    $0x0,%eax
8100681c:	eb 3b                	jmp    81006859 <strncmp+0xe1>
8100681e:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006822:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006826:	8b 45 10             	mov    0x10(%ebp),%eax
81006829:	8d 50 ff             	lea    -0x1(%eax),%edx
8100682c:	89 55 10             	mov    %edx,0x10(%ebp)
8100682f:	85 c0                	test   %eax,%eax
81006831:	74 10                	je     81006843 <strncmp+0xcb>
81006833:	8b 45 08             	mov    0x8(%ebp),%eax
81006836:	0f b6 10             	movzbl (%eax),%edx
81006839:	8b 45 0c             	mov    0xc(%ebp),%eax
8100683c:	0f b6 00             	movzbl (%eax),%eax
8100683f:	38 c2                	cmp    %al,%dl
81006841:	74 c4                	je     81006807 <strncmp+0x8f>
81006843:	8b 45 08             	mov    0x8(%ebp),%eax
81006846:	0f b6 00             	movzbl (%eax),%eax
81006849:	0f b6 d0             	movzbl %al,%edx
8100684c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100684f:	0f b6 00             	movzbl (%eax),%eax
81006852:	0f b6 c8             	movzbl %al,%ecx
81006855:	89 d0                	mov    %edx,%eax
81006857:	29 c8                	sub    %ecx,%eax
81006859:	c9                   	leave  
8100685a:	c3                   	ret    

8100685b <__get_global_locale>:
8100685b:	55                   	push   %ebp
8100685c:	89 e5                	mov    %esp,%ebp
8100685e:	b8 20 79 00 81       	mov    $0x81007920,%eax
81006863:	5d                   	pop    %ebp
81006864:	c3                   	ret    

81006865 <__get_current_locale>:
81006865:	55                   	push   %ebp
81006866:	89 e5                	mov    %esp,%ebp
81006868:	e8 ee ff ff ff       	call   8100685b <__get_global_locale>
8100686d:	5d                   	pop    %ebp
8100686e:	c3                   	ret    

8100686f <_wcrtomb_r>:
8100686f:	55                   	push   %ebp
81006870:	89 e5                	mov    %esp,%ebp
81006872:	83 ec 18             	sub    $0x18,%esp
81006875:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100687c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006880:	75 21                	jne    810068a3 <_wcrtomb_r+0x34>
81006882:	e8 de ff ff ff       	call   81006865 <__get_current_locale>
81006887:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100688d:	ff 75 14             	push   0x14(%ebp)
81006890:	6a 00                	push   $0x0
81006892:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006895:	52                   	push   %edx
81006896:	ff 75 08             	push   0x8(%ebp)
81006899:	ff d0                	call   *%eax
8100689b:	83 c4 10             	add    $0x10,%esp
8100689e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068a1:	eb 1f                	jmp    810068c2 <_wcrtomb_r+0x53>
810068a3:	e8 bd ff ff ff       	call   81006865 <__get_current_locale>
810068a8:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810068ae:	ff 75 14             	push   0x14(%ebp)
810068b1:	ff 75 10             	push   0x10(%ebp)
810068b4:	ff 75 0c             	push   0xc(%ebp)
810068b7:	ff 75 08             	push   0x8(%ebp)
810068ba:	ff d0                	call   *%eax
810068bc:	83 c4 10             	add    $0x10,%esp
810068bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068c2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810068c6:	75 19                	jne    810068e1 <_wcrtomb_r+0x72>
810068c8:	8b 45 14             	mov    0x14(%ebp),%eax
810068cb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810068d1:	8b 45 08             	mov    0x8(%ebp),%eax
810068d4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810068da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810068df:	eb 03                	jmp    810068e4 <_wcrtomb_r+0x75>
810068e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068e4:	c9                   	leave  
810068e5:	c3                   	ret    

810068e6 <wcrtomb>:
810068e6:	55                   	push   %ebp
810068e7:	89 e5                	mov    %esp,%ebp
810068e9:	83 ec 28             	sub    $0x28,%esp
810068ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810068f3:	a1 e4 74 00 81       	mov    0x810074e4,%eax
810068f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068fb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810068ff:	75 21                	jne    81006922 <wcrtomb+0x3c>
81006901:	e8 5f ff ff ff       	call   81006865 <__get_current_locale>
81006906:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100690c:	ff 75 10             	push   0x10(%ebp)
8100690f:	6a 00                	push   $0x0
81006911:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81006914:	52                   	push   %edx
81006915:	ff 75 f0             	push   -0x10(%ebp)
81006918:	ff d0                	call   *%eax
8100691a:	83 c4 10             	add    $0x10,%esp
8100691d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006920:	eb 1f                	jmp    81006941 <wcrtomb+0x5b>
81006922:	e8 3e ff ff ff       	call   81006865 <__get_current_locale>
81006927:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100692d:	ff 75 10             	push   0x10(%ebp)
81006930:	ff 75 0c             	push   0xc(%ebp)
81006933:	ff 75 08             	push   0x8(%ebp)
81006936:	ff 75 f0             	push   -0x10(%ebp)
81006939:	ff d0                	call   *%eax
8100693b:	83 c4 10             	add    $0x10,%esp
8100693e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006941:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006945:	75 19                	jne    81006960 <wcrtomb+0x7a>
81006947:	8b 45 10             	mov    0x10(%ebp),%eax
8100694a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006950:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006953:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006959:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100695e:	eb 03                	jmp    81006963 <wcrtomb+0x7d>
81006960:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006963:	c9                   	leave  
81006964:	c3                   	ret    

81006965 <__get_global_locale>:
81006965:	55                   	push   %ebp
81006966:	89 e5                	mov    %esp,%ebp
81006968:	b8 20 79 00 81       	mov    $0x81007920,%eax
8100696d:	5d                   	pop    %ebp
8100696e:	c3                   	ret    

8100696f <__get_current_locale>:
8100696f:	55                   	push   %ebp
81006970:	89 e5                	mov    %esp,%ebp
81006972:	e8 ee ff ff ff       	call   81006965 <__get_global_locale>
81006977:	5d                   	pop    %ebp
81006978:	c3                   	ret    

81006979 <_wctomb_r>:
81006979:	55                   	push   %ebp
8100697a:	89 e5                	mov    %esp,%ebp
8100697c:	83 ec 08             	sub    $0x8,%esp
8100697f:	e8 eb ff ff ff       	call   8100696f <__get_current_locale>
81006984:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100698a:	ff 75 14             	push   0x14(%ebp)
8100698d:	ff 75 10             	push   0x10(%ebp)
81006990:	ff 75 0c             	push   0xc(%ebp)
81006993:	ff 75 08             	push   0x8(%ebp)
81006996:	ff d0                	call   *%eax
81006998:	83 c4 10             	add    $0x10,%esp
8100699b:	c9                   	leave  
8100699c:	c3                   	ret    

8100699d <__ascii_wctomb>:
8100699d:	55                   	push   %ebp
8100699e:	89 e5                	mov    %esp,%ebp
810069a0:	83 ec 10             	sub    $0x10,%esp
810069a3:	8b 45 10             	mov    0x10(%ebp),%eax
810069a6:	89 45 fc             	mov    %eax,-0x4(%ebp)
810069a9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810069ad:	75 07                	jne    810069b6 <__ascii_wctomb+0x19>
810069af:	b8 00 00 00 00       	mov    $0x0,%eax
810069b4:	eb 28                	jmp    810069de <__ascii_wctomb+0x41>
810069b6:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810069bd:	76 10                	jbe    810069cf <__ascii_wctomb+0x32>
810069bf:	8b 45 08             	mov    0x8(%ebp),%eax
810069c2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810069c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810069cd:	eb 0f                	jmp    810069de <__ascii_wctomb+0x41>
810069cf:	8b 45 fc             	mov    -0x4(%ebp),%eax
810069d2:	89 c2                	mov    %eax,%edx
810069d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810069d7:	88 10                	mov    %dl,(%eax)
810069d9:	b8 01 00 00 00       	mov    $0x1,%eax
810069de:	c9                   	leave  
810069df:	c3                   	ret    

810069e0 <__env_lock>:
810069e0:	55                   	push   %ebp
810069e1:	89 e5                	mov    %esp,%ebp
810069e3:	90                   	nop
810069e4:	5d                   	pop    %ebp
810069e5:	c3                   	ret    

810069e6 <__env_unlock>:
810069e6:	55                   	push   %ebp
810069e7:	89 e5                	mov    %esp,%ebp
810069e9:	90                   	nop
810069ea:	5d                   	pop    %ebp
810069eb:	c3                   	ret    

810069ec <_fstat_r>:
810069ec:	55                   	push   %ebp
810069ed:	89 e5                	mov    %esp,%ebp
810069ef:	83 ec 18             	sub    $0x18,%esp
810069f2:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
810069f9:	00 00 00 
810069fc:	83 ec 08             	sub    $0x8,%esp
810069ff:	ff 75 10             	push   0x10(%ebp)
81006a02:	ff 75 0c             	push   0xc(%ebp)
81006a05:	e8 ea 9d ff ff       	call   810007f4 <fstat>
81006a0a:	83 c4 10             	add    $0x10,%esp
81006a0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a10:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006a14:	75 14                	jne    81006a2a <_fstat_r+0x3e>
81006a16:	a1 34 81 00 81       	mov    0x81008134,%eax
81006a1b:	85 c0                	test   %eax,%eax
81006a1d:	74 0b                	je     81006a2a <_fstat_r+0x3e>
81006a1f:	8b 15 34 81 00 81    	mov    0x81008134,%edx
81006a25:	8b 45 08             	mov    0x8(%ebp),%eax
81006a28:	89 10                	mov    %edx,(%eax)
81006a2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a2d:	c9                   	leave  
81006a2e:	c3                   	ret    

81006a2f <_isatty_r>:
81006a2f:	55                   	push   %ebp
81006a30:	89 e5                	mov    %esp,%ebp
81006a32:	83 ec 18             	sub    $0x18,%esp
81006a35:	c7 05 34 81 00 81 00 	movl   $0x0,0x81008134
81006a3c:	00 00 00 
81006a3f:	83 ec 0c             	sub    $0xc,%esp
81006a42:	ff 75 0c             	push   0xc(%ebp)
81006a45:	e8 89 9d ff ff       	call   810007d3 <isatty>
81006a4a:	83 c4 10             	add    $0x10,%esp
81006a4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a50:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006a54:	75 14                	jne    81006a6a <_isatty_r+0x3b>
81006a56:	a1 34 81 00 81       	mov    0x81008134,%eax
81006a5b:	85 c0                	test   %eax,%eax
81006a5d:	74 0b                	je     81006a6a <_isatty_r+0x3b>
81006a5f:	8b 15 34 81 00 81    	mov    0x81008134,%edx
81006a65:	8b 45 08             	mov    0x8(%ebp),%eax
81006a68:	89 10                	mov    %edx,(%eax)
81006a6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a6d:	c9                   	leave  
81006a6e:	c3                   	ret    
