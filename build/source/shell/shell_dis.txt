
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100089e

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00008930 memsz 0x00008fe0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007855  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000006cc  81007860  81007860  00008860  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007f40  81007f40  00008f40  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81008940  81008940  00009930  2**5
                  ALLOC
  4 .debug_info   000285d4  00000000  00000000  00009930  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009265  00000000  00000000  00031f04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000948  00000000  00000000  0003b170  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000065  00000000  00000000  0003bab8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005736  00000000  00000000  0003bb1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    000016e8  00000000  00000000  00041253  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 000016c6  00000000  00000000  0004293b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00044001  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001d48  00000000  00000000  00044040  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81008940 l     O .bss	00000200 cmd_buf
81007f40 l     O .data	00000004 prompt
81008b40 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
81007a80 l     O .rodata	00000048 cmd_list
8100054f l     F .text	0000003e cli_init
8100058d l     F .text	00000033 show_prompt
810005c0 l     F .text	00000043 find_builtin
81000603 l     F .text	00000049 run_builtin
8100064c l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
8100128a l     F .text	000000ad std
81001337 l     F .text	0000001b stdin_init
81001352 l     F .text	0000001b stdout_init
8100136d l     F .text	0000001b stderr_init
81008f4c l     O .bss	00000004 __sfp_recursive_mutex
81008f50 l     O .bss	00000004 __sinit_recursive_mutex
81001630 l     F .text	0000000a __fp_lock
8100163a l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81008f5c l     O .bss	00000004 optwhere
81008f60 l     O .bss	00000004 permute_from
81008f64 l     O .bss	00000004 num_nonopts
81002454 l     F .text	0000007b reverse_argv_elements
810024cf l     F .text	00000036 permute
81002505 l     F .text	00000031 is_option
81002536 l     F .text	00000059 read_globals
8100258f l     F .text	00000052 write_globals
810025e1 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007f60 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003405 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81003f4d l       .text	00000000 L20
81003f04 l       .text	00000000 L5
81003f4a l       .text	00000000 L15
81003f10 l       .text	00000000 L8
81003f31 l       .text	00000000 L9
81003f40 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81003f9f l       .text	00000000 L4
81003f91 l       .text	00000000 BYTECMP
81003f8c l       .text	00000000 L5
81003f93 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008fc8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004160 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81004f04 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100554b l       .text	00000000 L25
810054f2 l       .text	00000000 L5
8100553e l       .text	00000000 L14
81005544 l       .text	00000000 L19
81005503 l       .text	00000000 L10
81005530 l       .text	00000000 L9
81005533 l       .text	00000000 L15
8100557e l       .text	00000000 L26
81005581 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005686 l       .text	00000000 L5
810056be l       .text	00000000 L15
81005690 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
810057cc l     F .text	0000000a __locale_ctype_ptr_l
810057d6 l     F .text	0000000a __get_global_locale
810057e0 l     F .text	0000000a __get_current_locale
810057ea l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81008fd0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006075 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810087b0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006928 l     F .text	0000000a __get_global_locale
81006932 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006a14 l     F .text	0000000a __get_global_locale
81006a1e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81006b3d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810076c4 l     F .text	0000000a __get_global_locale
810076ce l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810077ce l     F .text	0000000a __get_global_locale
810077d8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008fd8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81008fdc l     O .bss	00000004 __env_recursive_mutex
810068e8 g     F .text	00000040 _isatty_r
81004d6d g     F .text	00000037 cleanup_glue
81004c7b g     F .text	000000d6 _puts_r
810069ce g     F .text	00000046 _lseek_r
810009ed g     F .text	0000001b yield
81005e62 g     F .text	000000ba __sflags
81000c81 g     F .text	00000039 ioctl
810057b2 g     F .text	0000001a strtok_r
81004c46 g     F .text	00000035 printf
810076d8 g     F .text	00000077 _wcrtomb_r
81005427 g     F .text	0000004a __sseek
8100157f g     F .text	00000099 __sinit
81005a2f g     F .text	00000112 __swbuf_r
8100693c g     F .text	0000005f _setlocale_r
81001388 g     F .text	0000006f __sfmoreglue
8100407e g     F .text	00000006 __malloc_unlock
81006ab0 g       .text	00000000 memmove
8100313d g     F .text	00000049 getopt_long
81001565 g     F .text	0000001a _cleanup
810056f2 g     F .text	000000c0 __strtok_r
81005e58 g     F .text	0000000a __errno
810067be g     F .text	00000020 getenv
8100221f g     F .text	00000043 _fstat_r
81008fcc g     O .bss	00000004 errno
810075c4 g     F .text	0000001d __srget
810053c2 g     F .text	0000000a __seofread
810009c0 g     F .text	0000002d execve
81000962 g     F .text	0000001b getpid
8100126b g     F .text	0000001f fgets
810066c8 g     F .text	00000067 _getc_r
8100672f g     F .text	0000006f getc
81003fa8 g       .text	00000000 memcpy
81005172 g     F .text	0000020c setvbuf
81001544 g     F .text	00000021 _cleanup_r
81004d51 g     F .text	0000001c puts
810033cc g     F .text	0000001c malloc
81004c19 g     F .text	0000002d _printf_r
81000ad7 g     F .text	00000021 isatty
81003242 g     F .text	0000000a __getreent
81008f54 g     O .bss	00000004 optarg
81008f80 g     O .bss	00000004 __malloc_top_pad
81008940 g       .bss	00000000 __bss_start__
8100622a g     F .text	0000049e __sfvwrite_r
81005132 g     F .text	00000040 _sbrk_r
81007f44 g     O .data	00000004 opterr
81000c0c g     F .text	00000040 readdir
81006c41 g     F .text	00000046 _read_r
81000d32 g     F .text	00000107 _fclose_r
810010d4 g     F .text	00000039 fflush
81008f84 g     O .bss	00000004 __malloc_max_sbrked_mem
81000aaa g     F .text	0000002d lseek
81007bd8 g     O .rodata	00000004 _global_impure_ptr
81006c87 g     F .text	000008da _realloc_r
810059e1 g     F .text	00000025 strtol_l
8100618b g     F .text	00000057 _fputwc_r
81001644 g     F .text	00000024 __fp_lock_all
81005a06 g     F .text	00000029 strtol
81001d4e g     F .text	000004b1 _fseeko_r
81004da4 g     F .text	00000160 _reclaim_reent
81005f1c g     F .text	00000046 _fputc_r
81000a5c g     F .text	0000002d write
81006ba3 g     F .text	0000004b _putc_r
8100892c g     O .data	00000004 environ
81000af8 g     F .text	00000027 fstat
810017a9 g     F .text	0000002c fprintf
8100321b g     F .text	00000027 __getopt_long_only_r
810021ff g     F .text	00000020 fseeko
81000cd4 g     F .text	0000001a _atoi_r
81001d2e g     F .text	00000020 fseek
810008ec g     F .text	0000004c sys_call
810041c6 g     F .text	000000a8 __sfputs_r
81008f58 g     O .bss	00000004 optind
81001618 g     F .text	00000006 __sfp_lock_acquire
81003ec0 g       .text	00000000 memchr
81008fe0 g       .bss	00000000 __bss_end__
810017d5 g     F .text	000003db _free_r
81000b83 g     F .text	00000021 wait
81007ca0 g     O .rodata	00000180 _ctype_b
8100699b g     F .text	00000014 __locale_mb_cur_max
81007561 g     F .text	00000063 __srget_r
81005d03 g     F .text	00000115 __call_exitprocs
810087ac g     O .data	00000004 __malloc_sbrk_base
8100089e g       .text	00000000 _start
81000a2f g     F .text	0000002d read
81004bd3 g     F .text	00000046 _open_r
810075e1 g     F .text	000000e3 strncmp
810031f4 g     F .text	00000027 __getopt_long_r
81008fa0 g     O .bss	00000028 __malloc_current_mallinfo
81004c19 g     F .text	0000002d _iprintf_r
81005e18 g     F .text	00000040 _close_r
810056c9 g     F .text	00000029 strtok
81003f55 g       .text	00000000 memcmp
81002335 g     F .text	000000b8 _fwrite_r
810009a5 g     F .text	0000001b fork
81005ba8 g     F .text	0000015b __swsetup_r
810013f7 g     F .text	0000014d __sfp
810083a0 g     O .data	00000408 __malloc_av_
8100162a g     F .text	00000006 __sinit_lock_release
8100537e g     F .text	00000044 __sread
81004078 g     F .text	00000006 __malloc_lock
81001780 g     F .text	00000029 _fprintf_r
81000b1f g     F .text	00000021 sbrk
8100107c g     F .text	00000058 _fflush_r
810008ae g     F .text	0000003e cstart
81001761 g     F .text	0000001f fopen
810030f6 g     F .text	00000047 getopt
81003ff0 g       .text	00000000 memset
8100070a g     F .text	00000194 main
81008f88 g     O .bss	00000004 __malloc_max_total_mem
81005b41 g     F .text	00000021 __swbuf
81005471 g     F .text	00000025 __sclose
81000e39 g     F .text	0000001d fclose
810059bc g     F .text	00000025 _strtol_r
8100242f g     F .text	00000025 getchar
810067de g     F .text	000000ed _findenv_r
81003698 g     F .text	00000822 _malloc_r
81007806 g     F .text	00000043 __ascii_wctomb
81000ba4 g     F .text	00000068 opendir
81001780 g     F .text	00000029 _fiprintf_r
8100784f g     F .text	00000006 __env_unlock
8100679e g     F .text	00000020 _findenv
81002262 g     F .text	00000068 _fwalk
8100110d g     F .text	0000015e _fgets_r
81006a28 g     F .text	0000002a _mbtowc_r
81006bee g     F .text	00000053 putc
81003186 g     F .text	00000049 getopt_long_only
81001bb0 g     F .text	00000161 _malloc_trim_r
8100559c g     F .text	000000a5 strcmp
8100426e g     F .text	00000025 vfiprintf
81000b40 g     F .text	00000021 dup
81004c46 g     F .text	00000035 iprintf
81008fd4 g     O .bss	00000004 _PathLocale
81005b62 g     F .text	00000046 _write_r
810069af g     F .text	0000001f setlocale
810045e9 g     F .text	0000019b _printf_common
81008384 g     O .data	00000004 _impure_ptr
81000e56 g     F .text	00000226 __sflush_r
81001d11 g     F .text	0000001d _fseek_r
81004f31 g     F .text	00000201 __srefill_r
81006a52 g     F .text	00000058 __ascii_mbtowc
81001668 g     F .text	00000024 __fp_unlock_all
81005f62 g     F .text	0000004e fputc
8100097d g     F .text	00000028 print_msg
81007f48 g     O .data	00000004 optopt
81003339 g     F .text	00000093 __swhatbuf_r
810023ed g     F .text	00000025 fwrite
81002412 g     F .text	0000001d _getchar_r
810060db g     F .text	000000b0 __fputwc
81005fb0 g     F .text	000000a6 _fputs_r
810053cc g     F .text	0000005b __swrite
810087a8 g     O .data	00000004 __malloc_trim_threshold
81000cee g     F .text	00000044 exit
810017a9 g     F .text	0000002c fiprintf
81004293 g     F .text	00000356 _vfiprintf_r
810022ca g     F .text	0000006b _fwalk_reent
8100161e g     F .text	00000006 __sfp_lock_release
81000cba g     F .text	0000001a atoi
81007e20 g     O .rodata	00000101 _ctype_
810031cf g     F .text	00000025 __getopt_r
8100168c g     F .text	000000d5 _fopen_r
81000b61 g     F .text	00000022 _exit
8100324c g     F .text	000000ed __smakebuf_r
81005650 g       .text	00000000 strlen
81004784 g     F .text	0000044f _printf_i
81000a08 g     F .text	00000027 open
81004084 g     F .text	000000dc __sprint_r
810054a0 g       .text	00000000 strchr
81006056 g     F .text	0000001f fputs
81000c4c g     F .text	00000035 closedir
810077e2 g     F .text	00000024 _wctomb_r
81007849 g     F .text	00000006 __env_lock
81004293 g     F .text	00000356 _vfprintf_r
81000938 g     F .text	0000002a msleep
8100774f g     F .text	0000007f wcrtomb
81000a89 g     F .text	00000021 close
810087c0 g     O .data	0000016c __global_locale
8100426e g     F .text	00000025 vfprintf
810061e2 g     F .text	00000048 fputwc
810033e8 g     F .text	0000001d free
81001624 g     F .text	00000006 __sinit_lock_acquire
810068cb g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 40 8f 00 81       	mov    0x81008f40,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 66 78 00 81       	push   $0x81007866
81000025:	e8 1c 4c 00 00       	call   81004c46 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 44 8f 00 81       	mov    0x81008f44,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 71 78 00 81       	push   $0x81007871
81000050:	68 76 78 00 81       	push   $0x81007876
81000055:	e8 ec 4b 00 00       	call   81004c46 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 79 78 00 81       	push   $0x81007879
81000065:	68 76 78 00 81       	push   $0x81007876
8100006a:	e8 d7 4b 00 00       	call   81004c46 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 b4 31 00 00       	call   81003242 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 c5 11 00 00       	call   8100126b <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 95 4c 00 00       	call   81004d51 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 58 8f 00 81 00 	movl   $0x0,0x81008f58
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 80 78 00 81       	push   $0x81007880
81000107:	e8 45 4c 00 00       	call   81004d51 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 86 78 00 81       	push   $0x81007886
81000117:	e8 35 4c 00 00       	call   81004d51 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 98 78 00 81       	push   $0x81007898
81000127:	e8 25 4c 00 00       	call   81004d51 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 54 8f 00 81       	mov    0x81008f54,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 73 0b 00 00       	call   81000cba <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 54 8f 00 81       	mov    0x81008f54,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 54 8f 00 81    	mov    0x81008f54,%ebx
8100015e:	e8 df 30 00 00       	call   81003242 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 b8 78 00 81       	push   $0x810078b8
8100016f:	50                   	push   %eax
81000170:	e8 34 16 00 00       	call   810017a9 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 d7 78 00 81       	push   $0x810078d7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 60 2f 00 00       	call   810030f6 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 91 30 00 00       	call   81003242 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 dc 78 00 81       	push   $0x810078dc
810001be:	e8 2a 22 00 00       	call   810023ed <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 58 8f 00 81       	mov    0x81008f58,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 66 30 00 00       	call   81003242 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 0f 79 00 81       	push   $0x8100790f
810001e9:	e8 ff 21 00 00       	call   810023ed <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 58 8f 00 81       	mov    0x81008f58,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 2f 4b 00 00       	call   81004d51 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 a3 0a 00 00       	call   81000cee <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 2b 79 00 81       	push   $0x8100792b
81000259:	e8 46 09 00 00       	call   81000ba4 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 30 79 00 81       	push   $0x81007930
81000272:	e8 da 4a 00 00       	call   81004d51 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 41 79 00 81       	push   $0x81007941
810002ac:	e8 95 49 00 00       	call   81004c46 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 4d 09 00 00       	call   81000c0c <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 76 09 00 00       	call   81000c4c <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 58 8f 00 81 00 	movl   $0x0,0x81008f58
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 80 78 00 81       	push   $0x81007880
81000321:	e8 2b 4a 00 00       	call   81004d51 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 4b 79 00 81       	push   $0x8100794b
81000331:	e8 1b 4a 00 00       	call   81004d51 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 5e 79 00 81       	push   $0x8100795e
81000341:	e8 0b 4a 00 00       	call   81004d51 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 54 8f 00 81       	mov    0x81008f54,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 54 8f 00 81    	mov    0x81008f54,%ebx
8100036b:	e8 d2 2e 00 00       	call   81003242 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 b8 78 00 81       	push   $0x810078b8
8100037c:	50                   	push   %eax
8100037d:	e8 27 14 00 00       	call   810017a9 <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 75 79 00 81       	push   $0x81007975
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 53 2d 00 00       	call   810030f6 <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 58 8f 00 81       	mov    0x81008f58,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 80 2e 00 00       	call   81003242 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 78 79 00 81       	push   $0x81007978
810003cf:	e8 19 20 00 00       	call   810023ed <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 58 8f 00 81       	mov    0x81008f58,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 91 79 00 81       	push   $0x81007991
810003fc:	50                   	push   %eax
810003fd:	e8 5f 13 00 00       	call   81001761 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 58 8f 00 81       	mov    0x81008f58,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 1c 2e 00 00       	call   81003242 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 94 79 00 81       	push   $0x81007994
81000432:	50                   	push   %eax
81000433:	e8 71 13 00 00       	call   810017a9 <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 74 2f 00 00       	call   810033cc <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 e0 48 00 00       	call   81004d51 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 e6 0d 00 00       	call   8100126b <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 ac 2d 00 00       	call   81003242 <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 cd 4c 00 00       	call   81005172 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 cc 07 00 00       	call   81000c81 <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 a2 0d 00 00       	call   8100126b <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 71 48 00 00       	call   81004d51 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 3f 1f 00 00       	call   8100242f <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 3e 2d 00 00       	call   81003242 <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 5c 4c 00 00       	call   81005172 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 5b 07 00 00       	call   81000c81 <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 b4 2e 00 00       	call   810033e8 <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 f7 08 00 00       	call   81000e39 <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000555:	a1 40 7f 00 81       	mov    0x81007f40,%eax
8100055a:	a3 48 8f 00 81       	mov    %eax,0x81008f48
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100055f:	83 ec 04             	sub    $0x4,%esp
81000562:	68 00 04 00 00       	push   $0x400
81000567:	6a 00                	push   $0x0
81000569:	68 40 8b 00 81       	push   $0x81008b40
8100056e:	e8 7d 3a 00 00       	call   81003ff0 <memset>
81000573:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000576:	c7 05 40 8f 00 81 80 	movl   $0x81007a80,0x81008f40
8100057d:	7a 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000580:	b8 c8 7a 00 81       	mov    $0x81007ac8,%eax
81000585:	a3 44 8f 00 81       	mov    %eax,0x81008f44
}
8100058a:	90                   	nop
8100058b:	c9                   	leave  
8100058c:	c3                   	ret    

8100058d <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100058d:	55                   	push   %ebp
8100058e:	89 e5                	mov    %esp,%ebp
81000590:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000593:	a1 48 8f 00 81       	mov    0x81008f48,%eax
81000598:	83 ec 08             	sub    $0x8,%esp
8100059b:	50                   	push   %eax
8100059c:	68 76 78 00 81       	push   $0x81007876
810005a1:	e8 a0 46 00 00       	call   81004c46 <iprintf>
810005a6:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810005a9:	e8 94 2c 00 00       	call   81003242 <__getreent>
810005ae:	8b 40 08             	mov    0x8(%eax),%eax
810005b1:	83 ec 0c             	sub    $0xc,%esp
810005b4:	50                   	push   %eax
810005b5:	e8 1a 0b 00 00       	call   810010d4 <fflush>
810005ba:	83 c4 10             	add    $0x10,%esp
}
810005bd:	90                   	nop
810005be:	c9                   	leave  
810005bf:	c3                   	ret    

810005c0 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810005c0:	55                   	push   %ebp
810005c1:	89 e5                	mov    %esp,%ebp
810005c3:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005c6:	a1 40 8f 00 81       	mov    0x81008f40,%eax
810005cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005ce:	eb 22                	jmp    810005f2 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810005d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005d3:	8b 00                	mov    (%eax),%eax
810005d5:	83 ec 08             	sub    $0x8,%esp
810005d8:	ff 75 08             	push   0x8(%ebp)
810005db:	50                   	push   %eax
810005dc:	e8 bb 4f 00 00       	call   8100559c <strcmp>
810005e1:	83 c4 10             	add    $0x10,%esp
810005e4:	85 c0                	test   %eax,%eax
810005e6:	75 05                	jne    810005ed <find_builtin+0x2d>
      continue;
    }
    return cmd;
810005e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005eb:	eb 14                	jmp    81000601 <find_builtin+0x41>
      continue;
810005ed:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005ee:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810005f2:	a1 44 8f 00 81       	mov    0x81008f44,%eax
810005f7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810005fa:	72 d4                	jb     810005d0 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810005fc:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000601:	c9                   	leave  
81000602:	c3                   	ret    

81000603 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000603:	55                   	push   %ebp
81000604:	89 e5                	mov    %esp,%ebp
81000606:	53                   	push   %ebx
81000607:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100060a:	8b 45 08             	mov    0x8(%ebp),%eax
8100060d:	8b 40 08             	mov    0x8(%eax),%eax
81000610:	83 ec 08             	sub    $0x8,%esp
81000613:	ff 75 10             	push   0x10(%ebp)
81000616:	ff 75 0c             	push   0xc(%ebp)
81000619:	ff d0                	call   *%eax
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
81000621:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000625:	79 1f                	jns    81000646 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
81000627:	8b 45 08             	mov    0x8(%ebp),%eax
8100062a:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
8100062c:	e8 11 2c 00 00       	call   81003242 <__getreent>
81000631:	8b 40 0c             	mov    0xc(%eax),%eax
81000634:	ff 75 f4             	push   -0xc(%ebp)
81000637:	53                   	push   %ebx
81000638:	68 c8 7a 00 81       	push   $0x81007ac8
8100063d:	50                   	push   %eax
8100063e:	e8 66 11 00 00       	call   810017a9 <fiprintf>
81000643:	83 c4 10             	add    $0x10,%esp
  }
}
81000646:	90                   	nop
81000647:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100064a:	c9                   	leave  
8100064b:	c3                   	ret    

8100064c <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
8100064c:	55                   	push   %ebp
8100064d:	89 e5                	mov    %esp,%ebp
8100064f:	53                   	push   %ebx
81000650:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
81000653:	e8 4d 03 00 00       	call   810009a5 <fork>
81000658:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
8100065b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100065f:	79 21                	jns    81000682 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
81000661:	e8 dc 2b 00 00       	call   81003242 <__getreent>
81000666:	8b 40 0c             	mov    0xc(%eax),%eax
81000669:	83 ec 04             	sub    $0x4,%esp
8100066c:	ff 75 08             	push   0x8(%ebp)
8100066f:	68 e0 7a 00 81       	push   $0x81007ae0
81000674:	50                   	push   %eax
81000675:	e8 2f 11 00 00       	call   810017a9 <fiprintf>
8100067a:	83 c4 10             	add    $0x10,%esp
    // 3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
            cpid);
  }
}
8100067d:	e9 82 00 00 00       	jmp    81000704 <run_exec_file+0xb8>
  } else if (pid == 0) {
81000682:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000686:	75 44                	jne    810006cc <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000688:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100068f:	eb 29                	jmp    810006ba <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
81000691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000694:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100069b:	8b 45 10             	mov    0x10(%ebp),%eax
8100069e:	01 d0                	add    %edx,%eax
810006a0:	8b 00                	mov    (%eax),%eax
810006a2:	83 ec 04             	sub    $0x4,%esp
810006a5:	50                   	push   %eax
810006a6:	ff 75 f4             	push   -0xc(%ebp)
810006a9:	68 fa 7a 00 81       	push   $0x81007afa
810006ae:	e8 93 45 00 00       	call   81004c46 <iprintf>
810006b3:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810006b6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810006ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006bd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810006c0:	7c cf                	jl     81000691 <run_exec_file+0x45>
    exit(-1);
810006c2:	83 ec 0c             	sub    $0xc,%esp
810006c5:	6a ff                	push   $0xffffffff
810006c7:	e8 22 06 00 00       	call   81000cee <exit>
    int cpid = wait(&status);
810006cc:	83 ec 0c             	sub    $0xc,%esp
810006cf:	8d 45 e8             	lea    -0x18(%ebp),%eax
810006d2:	50                   	push   %eax
810006d3:	e8 ab 04 00 00       	call   81000b83 <wait>
810006d8:	83 c4 10             	add    $0x10,%esp
810006db:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
810006de:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810006e1:	e8 5c 2b 00 00       	call   81003242 <__getreent>
810006e6:	8b 40 0c             	mov    0xc(%eax),%eax
810006e9:	83 ec 08             	sub    $0x8,%esp
810006ec:	ff 75 ec             	push   -0x14(%ebp)
810006ef:	ff 75 f0             	push   -0x10(%ebp)
810006f2:	53                   	push   %ebx
810006f3:	ff 75 08             	push   0x8(%ebp)
810006f6:	68 08 7b 00 81       	push   $0x81007b08
810006fb:	50                   	push   %eax
810006fc:	e8 a8 10 00 00       	call   810017a9 <fiprintf>
81000701:	83 c4 20             	add    $0x20,%esp
}
81000704:	90                   	nop
81000705:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000708:	c9                   	leave  
81000709:	c3                   	ret    

8100070a <main>:

int main(int argc, char **argv) {
8100070a:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100070e:	83 e4 f0             	and    $0xfffffff0,%esp
81000711:	ff 71 fc             	push   -0x4(%ecx)
81000714:	55                   	push   %ebp
81000715:	89 e5                	mov    %esp,%ebp
81000717:	51                   	push   %ecx
81000718:	83 ec 44             	sub    $0x44,%esp
8100071b:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
8100071d:	8b 40 04             	mov    0x4(%eax),%eax
81000720:	8b 00                	mov    (%eax),%eax
81000722:	83 ec 08             	sub    $0x8,%esp
81000725:	6a 02                	push   $0x2
81000727:	50                   	push   %eax
81000728:	e8 db 02 00 00       	call   81000a08 <open>
8100072d:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
81000730:	83 ec 0c             	sub    $0xc,%esp
81000733:	6a 00                	push   $0x0
81000735:	e8 06 04 00 00       	call   81000b40 <dup>
8100073a:	83 c4 10             	add    $0x10,%esp
  dup(0);
8100073d:	83 ec 0c             	sub    $0xc,%esp
81000740:	6a 00                	push   $0x0
81000742:	e8 f9 03 00 00       	call   81000b40 <dup>
81000747:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
8100074a:	e8 00 fe ff ff       	call   8100054f <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100074f:	e8 39 fe ff ff       	call   8100058d <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000754:	e8 e9 2a 00 00       	call   81003242 <__getreent>
81000759:	8b 40 04             	mov    0x4(%eax),%eax
8100075c:	83 ec 04             	sub    $0x4,%esp
8100075f:	50                   	push   %eax
81000760:	68 00 04 00 00       	push   $0x400
81000765:	68 40 8b 00 81       	push   $0x81008b40
8100076a:	e8 fc 0a 00 00       	call   8100126b <fgets>
8100076f:	83 c4 10             	add    $0x10,%esp
81000772:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000775:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000779:	0f 84 13 01 00 00    	je     81000892 <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
8100077f:	83 ec 08             	sub    $0x8,%esp
81000782:	6a 0a                	push   $0xa
81000784:	68 40 8b 00 81       	push   $0x81008b40
81000789:	e8 12 4d 00 00       	call   810054a0 <strchr>
8100078e:	83 c4 10             	add    $0x10,%esp
81000791:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000794:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000798:	74 06                	je     810007a0 <main+0x96>
      *cr = '\0';
8100079a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100079d:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810007a0:	83 ec 08             	sub    $0x8,%esp
810007a3:	6a 0d                	push   $0xd
810007a5:	68 40 8b 00 81       	push   $0x81008b40
810007aa:	e8 f1 4c 00 00       	call   810054a0 <strchr>
810007af:	83 c4 10             	add    $0x10,%esp
810007b2:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810007b5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810007b9:	74 06                	je     810007c1 <main+0xb7>
      *cr = '\0';
810007bb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810007be:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810007c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810007c8:	83 ec 04             	sub    $0x4,%esp
810007cb:	6a 28                	push   $0x28
810007cd:	6a 00                	push   $0x0
810007cf:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007d2:	50                   	push   %eax
810007d3:	e8 18 38 00 00       	call   81003ff0 <memset>
810007d8:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
810007db:	c7 45 e4 2c 7b 00 81 	movl   $0x81007b2c,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
810007e2:	83 ec 08             	sub    $0x8,%esp
810007e5:	ff 75 e4             	push   -0x1c(%ebp)
810007e8:	68 40 8b 00 81       	push   $0x81008b40
810007ed:	e8 d7 4e 00 00       	call   810056c9 <strtok>
810007f2:	83 c4 10             	add    $0x10,%esp
810007f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810007f8:	eb 23                	jmp    8100081d <main+0x113>
      argv[argc++] = token;
810007fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007fd:	8d 50 01             	lea    0x1(%eax),%edx
81000800:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000803:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000806:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
8100080a:	83 ec 08             	sub    $0x8,%esp
8100080d:	ff 75 e4             	push   -0x1c(%ebp)
81000810:	6a 00                	push   $0x0
81000812:	e8 b2 4e 00 00       	call   810056c9 <strtok>
81000817:	83 c4 10             	add    $0x10,%esp
8100081a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
8100081d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000821:	75 d7                	jne    810007fa <main+0xf0>
    }

    if (argc == 0) {
81000823:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000827:	74 6f                	je     81000898 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000829:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100082c:	83 ec 0c             	sub    $0xc,%esp
8100082f:	50                   	push   %eax
81000830:	e8 8b fd ff ff       	call   810005c0 <find_builtin>
81000835:	83 c4 10             	add    $0x10,%esp
81000838:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
8100083b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100083f:	74 17                	je     81000858 <main+0x14e>
      run_builtin(cmd, argc, argv);
81000841:	83 ec 04             	sub    $0x4,%esp
81000844:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000847:	50                   	push   %eax
81000848:	ff 75 f4             	push   -0xc(%ebp)
8100084b:	ff 75 e0             	push   -0x20(%ebp)
8100084e:	e8 b0 fd ff ff       	call   81000603 <run_builtin>
81000853:	83 c4 10             	add    $0x10,%esp
      continue;
81000856:	eb 41                	jmp    81000899 <main+0x18f>
    }

    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
81000858:	83 ec 04             	sub    $0x4,%esp
8100085b:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100085e:	50                   	push   %eax
8100085f:	ff 75 f4             	push   -0xc(%ebp)
81000862:	68 2e 7b 00 81       	push   $0x81007b2e
81000867:	e8 e0 fd ff ff       	call   8100064c <run_exec_file>
8100086c:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
8100086f:	e8 ce 29 00 00       	call   81003242 <__getreent>
81000874:	8b 40 0c             	mov    0xc(%eax),%eax
81000877:	83 ec 04             	sub    $0x4,%esp
8100087a:	68 40 8b 00 81       	push   $0x81008b40
8100087f:	68 30 7b 00 81       	push   $0x81007b30
81000884:	50                   	push   %eax
81000885:	e8 1f 0f 00 00       	call   810017a9 <fiprintf>
8100088a:	83 c4 10             	add    $0x10,%esp
8100088d:	e9 bd fe ff ff       	jmp    8100074f <main+0x45>
      continue;
81000892:	90                   	nop
81000893:	e9 b7 fe ff ff       	jmp    8100074f <main+0x45>
      continue;
81000898:	90                   	nop
  for (;;) {
81000899:	e9 b1 fe ff ff       	jmp    8100074f <main+0x45>

8100089e <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100089e:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810008a1:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810008a3:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810008a5:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810008a7:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810008a9:	e9 00 00 00 00       	jmp    810008ae <cstart>

810008ae <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810008ae:	55                   	push   %ebp
810008af:	89 e5                	mov    %esp,%ebp
810008b1:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810008b4:	c7 45 f4 40 89 00 81 	movl   $0x81008940,-0xc(%ebp)
    while (start < __bss_end__) {
810008bb:	eb 0c                	jmp    810008c9 <cstart+0x1b>
        *(start++) = 0;
810008bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008c0:	8d 50 01             	lea    0x1(%eax),%edx
810008c3:	89 55 f4             	mov    %edx,-0xc(%ebp)
810008c6:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810008c9:	81 7d f4 e0 8f 00 81 	cmpl   $0x81008fe0,-0xc(%ebp)
810008d0:	72 eb                	jb     810008bd <cstart+0xf>
    }
    
    exit(main(argc, argv));
810008d2:	83 ec 08             	sub    $0x8,%esp
810008d5:	ff 75 0c             	push   0xc(%ebp)
810008d8:	ff 75 08             	push   0x8(%ebp)
810008db:	e8 2a fe ff ff       	call   8100070a <main>
810008e0:	83 c4 10             	add    $0x10,%esp
810008e3:	83 ec 0c             	sub    $0xc,%esp
810008e6:	50                   	push   %eax
810008e7:	e8 02 04 00 00       	call   81000cee <exit>

810008ec <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
810008ec:	55                   	push   %ebp
810008ed:	89 e5                	mov    %esp,%ebp
810008ef:	57                   	push   %edi
810008f0:	56                   	push   %esi
810008f1:	53                   	push   %ebx
810008f2:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810008f5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810008fc:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000903:	8b 45 08             	mov    0x8(%ebp),%eax
81000906:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000909:	8b 55 08             	mov    0x8(%ebp),%edx
8100090c:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
8100090f:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000912:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000915:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000918:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8100091b:	8b 75 08             	mov    0x8(%ebp),%esi
8100091e:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000920:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000923:	50                   	push   %eax
81000924:	52                   	push   %edx
81000925:	51                   	push   %ecx
81000926:	53                   	push   %ebx
81000927:	56                   	push   %esi
81000928:	ff 1f                	lcall  *(%edi)
8100092a:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8100092d:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000930:	83 c4 10             	add    $0x10,%esp
81000933:	5b                   	pop    %ebx
81000934:	5e                   	pop    %esi
81000935:	5f                   	pop    %edi
81000936:	5d                   	pop    %ebp
81000937:	c3                   	ret    

81000938 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000938:	55                   	push   %ebp
81000939:	89 e5                	mov    %esp,%ebp
8100093b:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100093e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000942:	7e 1b                	jle    8100095f <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000944:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
8100094b:	8b 45 08             	mov    0x8(%ebp),%eax
8100094e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000951:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000954:	50                   	push   %eax
81000955:	e8 92 ff ff ff       	call   810008ec <sys_call>
8100095a:	83 c4 04             	add    $0x4,%esp
8100095d:	eb 01                	jmp    81000960 <msleep+0x28>
    if (ms <= 0) return;
8100095f:	90                   	nop

}
81000960:	c9                   	leave  
81000961:	c3                   	ret    

81000962 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000962:	55                   	push   %ebp
81000963:	89 e5                	mov    %esp,%ebp
81000965:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000968:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100096f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000972:	50                   	push   %eax
81000973:	e8 74 ff ff ff       	call   810008ec <sys_call>
81000978:	83 c4 04             	add    $0x4,%esp
}
8100097b:	c9                   	leave  
8100097c:	c3                   	ret    

8100097d <print_msg>:

void print_msg(const char *fmt, int arg) {
8100097d:	55                   	push   %ebp
8100097e:	89 e5                	mov    %esp,%ebp
81000980:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000983:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100098a:	8b 45 08             	mov    0x8(%ebp),%eax
8100098d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000990:	8b 45 0c             	mov    0xc(%ebp),%eax
81000993:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000996:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000999:	50                   	push   %eax
8100099a:	e8 4d ff ff ff       	call   810008ec <sys_call>
8100099f:	83 c4 04             	add    $0x4,%esp
}
810009a2:	90                   	nop
810009a3:	c9                   	leave  
810009a4:	c3                   	ret    

810009a5 <fork>:

int fork (void) {
810009a5:	55                   	push   %ebp
810009a6:	89 e5                	mov    %esp,%ebp
810009a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810009ab:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810009b2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009b5:	50                   	push   %eax
810009b6:	e8 31 ff ff ff       	call   810008ec <sys_call>
810009bb:	83 c4 04             	add    $0x4,%esp
}
810009be:	c9                   	leave  
810009bf:	c3                   	ret    

810009c0 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810009c0:	55                   	push   %ebp
810009c1:	89 e5                	mov    %esp,%ebp
810009c3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810009c6:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810009cd:	8b 45 08             	mov    0x8(%ebp),%eax
810009d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810009d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810009d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810009d9:	8b 45 10             	mov    0x10(%ebp),%eax
810009dc:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810009df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009e2:	50                   	push   %eax
810009e3:	e8 04 ff ff ff       	call   810008ec <sys_call>
810009e8:	83 c4 04             	add    $0x4,%esp
}
810009eb:	c9                   	leave  
810009ec:	c3                   	ret    

810009ed <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810009ed:	55                   	push   %ebp
810009ee:	89 e5                	mov    %esp,%ebp
810009f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810009f3:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810009fa:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009fd:	50                   	push   %eax
810009fe:	e8 e9 fe ff ff       	call   810008ec <sys_call>
81000a03:	83 c4 04             	add    $0x4,%esp
}
81000a06:	c9                   	leave  
81000a07:	c3                   	ret    

81000a08 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000a08:	55                   	push   %ebp
81000a09:	89 e5                	mov    %esp,%ebp
81000a0b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000a0e:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000a15:	8b 45 08             	mov    0x8(%ebp),%eax
81000a18:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000a1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a1e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000a21:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a24:	50                   	push   %eax
81000a25:	e8 c2 fe ff ff       	call   810008ec <sys_call>
81000a2a:	83 c4 04             	add    $0x4,%esp
}
81000a2d:	c9                   	leave  
81000a2e:	c3                   	ret    

81000a2f <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000a2f:	55                   	push   %ebp
81000a30:	89 e5                	mov    %esp,%ebp
81000a32:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000a35:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000a3c:	8b 45 08             	mov    0x8(%ebp),%eax
81000a3f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a42:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a45:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a48:	8b 45 10             	mov    0x10(%ebp),%eax
81000a4b:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a4e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a51:	50                   	push   %eax
81000a52:	e8 95 fe ff ff       	call   810008ec <sys_call>
81000a57:	83 c4 04             	add    $0x4,%esp
}
81000a5a:	c9                   	leave  
81000a5b:	c3                   	ret    

81000a5c <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000a5c:	55                   	push   %ebp
81000a5d:	89 e5                	mov    %esp,%ebp
81000a5f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000a62:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000a69:	8b 45 08             	mov    0x8(%ebp),%eax
81000a6c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a72:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a75:	8b 45 10             	mov    0x10(%ebp),%eax
81000a78:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a7b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a7e:	50                   	push   %eax
81000a7f:	e8 68 fe ff ff       	call   810008ec <sys_call>
81000a84:	83 c4 04             	add    $0x4,%esp
}
81000a87:	c9                   	leave  
81000a88:	c3                   	ret    

81000a89 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000a89:	55                   	push   %ebp
81000a8a:	89 e5                	mov    %esp,%ebp
81000a8c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000a8f:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000a96:	8b 45 08             	mov    0x8(%ebp),%eax
81000a99:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000a9c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a9f:	50                   	push   %eax
81000aa0:	e8 47 fe ff ff       	call   810008ec <sys_call>
81000aa5:	83 c4 04             	add    $0x4,%esp
}
81000aa8:	c9                   	leave  
81000aa9:	c3                   	ret    

81000aaa <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000aaa:	55                   	push   %ebp
81000aab:	89 e5                	mov    %esp,%ebp
81000aad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000ab0:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000ab7:	8b 45 08             	mov    0x8(%ebp),%eax
81000aba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000abd:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ac0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000ac3:	8b 45 10             	mov    0x10(%ebp),%eax
81000ac6:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000ac9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000acc:	50                   	push   %eax
81000acd:	e8 1a fe ff ff       	call   810008ec <sys_call>
81000ad2:	83 c4 04             	add    $0x4,%esp
}
81000ad5:	c9                   	leave  
81000ad6:	c3                   	ret    

81000ad7 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000ad7:	55                   	push   %ebp
81000ad8:	89 e5                	mov    %esp,%ebp
81000ada:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000add:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000ae4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ae7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000aea:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aed:	50                   	push   %eax
81000aee:	e8 f9 fd ff ff       	call   810008ec <sys_call>
81000af3:	83 c4 04             	add    $0x4,%esp
}
81000af6:	c9                   	leave  
81000af7:	c3                   	ret    

81000af8 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000af8:	55                   	push   %ebp
81000af9:	89 e5                	mov    %esp,%ebp
81000afb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000afe:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000b05:	8b 45 08             	mov    0x8(%ebp),%eax
81000b08:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000b0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b0e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000b11:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b14:	50                   	push   %eax
81000b15:	e8 d2 fd ff ff       	call   810008ec <sys_call>
81000b1a:	83 c4 04             	add    $0x4,%esp
}
81000b1d:	c9                   	leave  
81000b1e:	c3                   	ret    

81000b1f <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000b1f:	55                   	push   %ebp
81000b20:	89 e5                	mov    %esp,%ebp
81000b22:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000b25:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
81000b2c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b2f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000b32:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b35:	50                   	push   %eax
81000b36:	e8 b1 fd ff ff       	call   810008ec <sys_call>
81000b3b:	83 c4 04             	add    $0x4,%esp
}
81000b3e:	c9                   	leave  
81000b3f:	c3                   	ret    

81000b40 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000b40:	55                   	push   %ebp
81000b41:	89 e5                	mov    %esp,%ebp
81000b43:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000b46:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000b4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b50:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000b53:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b56:	50                   	push   %eax
81000b57:	e8 90 fd ff ff       	call   810008ec <sys_call>
81000b5c:	83 c4 04             	add    $0x4,%esp
}
81000b5f:	c9                   	leave  
81000b60:	c3                   	ret    

81000b61 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000b61:	55                   	push   %ebp
81000b62:	89 e5                	mov    %esp,%ebp
81000b64:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000b67:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000b6e:	8b 45 08             	mov    0x8(%ebp),%eax
81000b71:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000b74:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b77:	50                   	push   %eax
81000b78:	e8 6f fd ff ff       	call   810008ec <sys_call>
81000b7d:	83 c4 04             	add    $0x4,%esp
}
81000b80:	90                   	nop
81000b81:	c9                   	leave  
81000b82:	c3                   	ret    

81000b83 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000b83:	55                   	push   %ebp
81000b84:	89 e5                	mov    %esp,%ebp
81000b86:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000b89:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000b90:	8b 45 08             	mov    0x8(%ebp),%eax
81000b93:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000b96:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b99:	50                   	push   %eax
81000b9a:	e8 4d fd ff ff       	call   810008ec <sys_call>
81000b9f:	83 c4 04             	add    $0x4,%esp
}
81000ba2:	c9                   	leave  
81000ba3:	c3                   	ret    

81000ba4 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000ba4:	55                   	push   %ebp
81000ba5:	89 e5                	mov    %esp,%ebp
81000ba7:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000baa:	83 ec 0c             	sub    $0xc,%esp
81000bad:	6a 20                	push   $0x20
81000baf:	e8 18 28 00 00       	call   810033cc <malloc>
81000bb4:	83 c4 10             	add    $0x10,%esp
81000bb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000bba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000bbe:	75 07                	jne    81000bc7 <opendir+0x23>
        return (DIR*)0;
81000bc0:	b8 00 00 00 00       	mov    $0x0,%eax
81000bc5:	eb 43                	jmp    81000c0a <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000bc7:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000bce:	8b 45 08             	mov    0x8(%ebp),%eax
81000bd1:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000bd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bd7:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000bda:	83 ec 0c             	sub    $0xc,%esp
81000bdd:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000be0:	50                   	push   %eax
81000be1:	e8 06 fd ff ff       	call   810008ec <sys_call>
81000be6:	83 c4 10             	add    $0x10,%esp
81000be9:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000bec:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000bf0:	79 15                	jns    81000c07 <opendir+0x63>
        free(dir);
81000bf2:	83 ec 0c             	sub    $0xc,%esp
81000bf5:	ff 75 f4             	push   -0xc(%ebp)
81000bf8:	e8 eb 27 00 00       	call   810033e8 <free>
81000bfd:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000c00:	b8 00 00 00 00       	mov    $0x0,%eax
81000c05:	eb 03                	jmp    81000c0a <opendir+0x66>
    }

    return dir;    
81000c07:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000c0a:	c9                   	leave  
81000c0b:	c3                   	ret    

81000c0c <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000c0c:	55                   	push   %ebp
81000c0d:	89 e5                	mov    %esp,%ebp
81000c0f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000c12:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000c19:	8b 45 08             	mov    0x8(%ebp),%eax
81000c1c:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000c1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c22:	83 c0 04             	add    $0x4,%eax
81000c25:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000c28:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000c2b:	50                   	push   %eax
81000c2c:	e8 bb fc ff ff       	call   810008ec <sys_call>
81000c31:	83 c4 04             	add    $0x4,%esp
81000c34:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000c37:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000c3b:	79 07                	jns    81000c44 <readdir+0x38>
        return (struct dirent*)0;
81000c3d:	b8 00 00 00 00       	mov    $0x0,%eax
81000c42:	eb 06                	jmp    81000c4a <readdir+0x3e>
    }

    return &dir->dirent;   
81000c44:	8b 45 08             	mov    0x8(%ebp),%eax
81000c47:	83 c0 04             	add    $0x4,%eax
}
81000c4a:	c9                   	leave  
81000c4b:	c3                   	ret    

81000c4c <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000c4c:	55                   	push   %ebp
81000c4d:	89 e5                	mov    %esp,%ebp
81000c4f:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000c52:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000c59:	8b 45 08             	mov    0x8(%ebp),%eax
81000c5c:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000c5f:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000c62:	50                   	push   %eax
81000c63:	e8 84 fc ff ff       	call   810008ec <sys_call>
81000c68:	83 c4 04             	add    $0x4,%esp
81000c6b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000c6e:	83 ec 0c             	sub    $0xc,%esp
81000c71:	ff 75 08             	push   0x8(%ebp)
81000c74:	e8 6f 27 00 00       	call   810033e8 <free>
81000c79:	83 c4 10             	add    $0x10,%esp

    return err;   
81000c7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000c7f:	c9                   	leave  
81000c80:	c3                   	ret    

81000c81 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000c81:	55                   	push   %ebp
81000c82:	89 e5                	mov    %esp,%ebp
81000c84:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000c87:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000c8e:	8b 45 08             	mov    0x8(%ebp),%eax
81000c91:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000c94:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c97:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000c9a:	8b 45 10             	mov    0x10(%ebp),%eax
81000c9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000ca0:	8b 45 14             	mov    0x14(%ebp),%eax
81000ca3:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000ca6:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000ca9:	50                   	push   %eax
81000caa:	e8 3d fc ff ff       	call   810008ec <sys_call>
81000caf:	83 c4 04             	add    $0x4,%esp
81000cb2:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000cb5:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000cb8:	c9                   	leave  
81000cb9:	c3                   	ret    

81000cba <atoi>:
81000cba:	55                   	push   %ebp
81000cbb:	89 e5                	mov    %esp,%ebp
81000cbd:	83 ec 08             	sub    $0x8,%esp
81000cc0:	83 ec 04             	sub    $0x4,%esp
81000cc3:	6a 0a                	push   $0xa
81000cc5:	6a 00                	push   $0x0
81000cc7:	ff 75 08             	push   0x8(%ebp)
81000cca:	e8 37 4d 00 00       	call   81005a06 <strtol>
81000ccf:	83 c4 10             	add    $0x10,%esp
81000cd2:	c9                   	leave  
81000cd3:	c3                   	ret    

81000cd4 <_atoi_r>:
81000cd4:	55                   	push   %ebp
81000cd5:	89 e5                	mov    %esp,%ebp
81000cd7:	83 ec 08             	sub    $0x8,%esp
81000cda:	6a 0a                	push   $0xa
81000cdc:	6a 00                	push   $0x0
81000cde:	ff 75 0c             	push   0xc(%ebp)
81000ce1:	ff 75 08             	push   0x8(%ebp)
81000ce4:	e8 d3 4c 00 00       	call   810059bc <_strtol_r>
81000ce9:	83 c4 10             	add    $0x10,%esp
81000cec:	c9                   	leave  
81000ced:	c3                   	ret    

81000cee <exit>:
81000cee:	55                   	push   %ebp
81000cef:	89 e5                	mov    %esp,%ebp
81000cf1:	83 ec 08             	sub    $0x8,%esp
81000cf4:	83 ec 08             	sub    $0x8,%esp
81000cf7:	6a 00                	push   $0x0
81000cf9:	ff 75 08             	push   0x8(%ebp)
81000cfc:	e8 02 50 00 00       	call   81005d03 <__call_exitprocs>
81000d01:	83 c4 10             	add    $0x10,%esp
81000d04:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81000d09:	8b 40 3c             	mov    0x3c(%eax),%eax
81000d0c:	85 c0                	test   %eax,%eax
81000d0e:	74 17                	je     81000d27 <exit+0x39>
81000d10:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81000d15:	8b 40 3c             	mov    0x3c(%eax),%eax
81000d18:	8b 15 d8 7b 00 81    	mov    0x81007bd8,%edx
81000d1e:	83 ec 0c             	sub    $0xc,%esp
81000d21:	52                   	push   %edx
81000d22:	ff d0                	call   *%eax
81000d24:	83 c4 10             	add    $0x10,%esp
81000d27:	83 ec 0c             	sub    $0xc,%esp
81000d2a:	ff 75 08             	push   0x8(%ebp)
81000d2d:	e8 2f fe ff ff       	call   81000b61 <_exit>

81000d32 <_fclose_r>:
81000d32:	55                   	push   %ebp
81000d33:	89 e5                	mov    %esp,%ebp
81000d35:	53                   	push   %ebx
81000d36:	83 ec 14             	sub    $0x14,%esp
81000d39:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000d3c:	85 db                	test   %ebx,%ebx
81000d3e:	75 0a                	jne    81000d4a <_fclose_r+0x18>
81000d40:	b8 00 00 00 00       	mov    $0x0,%eax
81000d45:	e9 ea 00 00 00       	jmp    81000e34 <_fclose_r+0x102>
81000d4a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d4d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d50:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000d54:	74 18                	je     81000d6e <_fclose_r+0x3c>
81000d56:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d59:	8b 40 38             	mov    0x38(%eax),%eax
81000d5c:	85 c0                	test   %eax,%eax
81000d5e:	75 0e                	jne    81000d6e <_fclose_r+0x3c>
81000d60:	83 ec 0c             	sub    $0xc,%esp
81000d63:	ff 75 f0             	push   -0x10(%ebp)
81000d66:	e8 14 08 00 00       	call   8100157f <__sinit>
81000d6b:	83 c4 10             	add    $0x10,%esp
81000d6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d72:	66 85 c0             	test   %ax,%ax
81000d75:	75 0a                	jne    81000d81 <_fclose_r+0x4f>
81000d77:	b8 00 00 00 00       	mov    $0x0,%eax
81000d7c:	e9 b3 00 00 00       	jmp    81000e34 <_fclose_r+0x102>
81000d81:	83 ec 08             	sub    $0x8,%esp
81000d84:	53                   	push   %ebx
81000d85:	ff 75 08             	push   0x8(%ebp)
81000d88:	e8 c9 00 00 00       	call   81000e56 <__sflush_r>
81000d8d:	83 c4 10             	add    $0x10,%esp
81000d90:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d93:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000d96:	85 c0                	test   %eax,%eax
81000d98:	74 1d                	je     81000db7 <_fclose_r+0x85>
81000d9a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000d9d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000da0:	83 ec 08             	sub    $0x8,%esp
81000da3:	52                   	push   %edx
81000da4:	ff 75 08             	push   0x8(%ebp)
81000da7:	ff d0                	call   *%eax
81000da9:	83 c4 10             	add    $0x10,%esp
81000dac:	85 c0                	test   %eax,%eax
81000dae:	79 07                	jns    81000db7 <_fclose_r+0x85>
81000db0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000db7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000dbb:	98                   	cwtl   
81000dbc:	25 80 00 00 00       	and    $0x80,%eax
81000dc1:	85 c0                	test   %eax,%eax
81000dc3:	74 12                	je     81000dd7 <_fclose_r+0xa5>
81000dc5:	8b 43 10             	mov    0x10(%ebx),%eax
81000dc8:	83 ec 08             	sub    $0x8,%esp
81000dcb:	50                   	push   %eax
81000dcc:	ff 75 08             	push   0x8(%ebp)
81000dcf:	e8 01 0a 00 00       	call   810017d5 <_free_r>
81000dd4:	83 c4 10             	add    $0x10,%esp
81000dd7:	8b 43 30             	mov    0x30(%ebx),%eax
81000dda:	85 c0                	test   %eax,%eax
81000ddc:	74 23                	je     81000e01 <_fclose_r+0xcf>
81000dde:	8b 53 30             	mov    0x30(%ebx),%edx
81000de1:	8d 43 40             	lea    0x40(%ebx),%eax
81000de4:	39 c2                	cmp    %eax,%edx
81000de6:	74 12                	je     81000dfa <_fclose_r+0xc8>
81000de8:	8b 43 30             	mov    0x30(%ebx),%eax
81000deb:	83 ec 08             	sub    $0x8,%esp
81000dee:	50                   	push   %eax
81000def:	ff 75 08             	push   0x8(%ebp)
81000df2:	e8 de 09 00 00       	call   810017d5 <_free_r>
81000df7:	83 c4 10             	add    $0x10,%esp
81000dfa:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000e01:	8b 43 44             	mov    0x44(%ebx),%eax
81000e04:	85 c0                	test   %eax,%eax
81000e06:	74 19                	je     81000e21 <_fclose_r+0xef>
81000e08:	8b 43 44             	mov    0x44(%ebx),%eax
81000e0b:	83 ec 08             	sub    $0x8,%esp
81000e0e:	50                   	push   %eax
81000e0f:	ff 75 08             	push   0x8(%ebp)
81000e12:	e8 be 09 00 00       	call   810017d5 <_free_r>
81000e17:	83 c4 10             	add    $0x10,%esp
81000e1a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000e21:	e8 f2 07 00 00       	call   81001618 <__sfp_lock_acquire>
81000e26:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000e2c:	e8 ed 07 00 00       	call   8100161e <__sfp_lock_release>
81000e31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e34:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000e37:	c9                   	leave  
81000e38:	c3                   	ret    

81000e39 <fclose>:
81000e39:	55                   	push   %ebp
81000e3a:	89 e5                	mov    %esp,%ebp
81000e3c:	83 ec 08             	sub    $0x8,%esp
81000e3f:	8b 55 08             	mov    0x8(%ebp),%edx
81000e42:	a1 84 83 00 81       	mov    0x81008384,%eax
81000e47:	83 ec 08             	sub    $0x8,%esp
81000e4a:	52                   	push   %edx
81000e4b:	50                   	push   %eax
81000e4c:	e8 e1 fe ff ff       	call   81000d32 <_fclose_r>
81000e51:	83 c4 10             	add    $0x10,%esp
81000e54:	c9                   	leave  
81000e55:	c3                   	ret    

81000e56 <__sflush_r>:
81000e56:	55                   	push   %ebp
81000e57:	89 e5                	mov    %esp,%ebp
81000e59:	57                   	push   %edi
81000e5a:	56                   	push   %esi
81000e5b:	53                   	push   %ebx
81000e5c:	83 ec 1c             	sub    $0x1c,%esp
81000e5f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e62:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e66:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000e6a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000e6e:	83 e0 08             	and    $0x8,%eax
81000e71:	85 c0                	test   %eax,%eax
81000e73:	0f 85 93 01 00 00    	jne    8100100c <__sflush_r+0x1b6>
81000e79:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e7d:	80 cc 08             	or     $0x8,%ah
81000e80:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e84:	8b 43 04             	mov    0x4(%ebx),%eax
81000e87:	85 c0                	test   %eax,%eax
81000e89:	7f 0b                	jg     81000e96 <__sflush_r+0x40>
81000e8b:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000e8e:	85 c0                	test   %eax,%eax
81000e90:	0f 8e 6f 01 00 00    	jle    81001005 <__sflush_r+0x1af>
81000e96:	8b 43 28             	mov    0x28(%ebx),%eax
81000e99:	85 c0                	test   %eax,%eax
81000e9b:	0f 84 64 01 00 00    	je     81001005 <__sflush_r+0x1af>
81000ea1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea4:	8b 00                	mov    (%eax),%eax
81000ea6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000ea9:	8b 45 08             	mov    0x8(%ebp),%eax
81000eac:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000eb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eb6:	98                   	cwtl   
81000eb7:	25 00 10 00 00       	and    $0x1000,%eax
81000ebc:	85 c0                	test   %eax,%eax
81000ebe:	74 08                	je     81000ec8 <__sflush_r+0x72>
81000ec0:	8b 43 50             	mov    0x50(%ebx),%eax
81000ec3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ec6:	eb 64                	jmp    81000f2c <__sflush_r+0xd6>
81000ec8:	8b 43 28             	mov    0x28(%ebx),%eax
81000ecb:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000ece:	6a 01                	push   $0x1
81000ed0:	6a 00                	push   $0x0
81000ed2:	52                   	push   %edx
81000ed3:	ff 75 08             	push   0x8(%ebp)
81000ed6:	ff d0                	call   *%eax
81000ed8:	83 c4 10             	add    $0x10,%esp
81000edb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000ede:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000ee2:	75 48                	jne    81000f2c <__sflush_r+0xd6>
81000ee4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee7:	8b 00                	mov    (%eax),%eax
81000ee9:	85 c0                	test   %eax,%eax
81000eeb:	74 3f                	je     81000f2c <__sflush_r+0xd6>
81000eed:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000ef4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef7:	8b 00                	mov    (%eax),%eax
81000ef9:	83 f8 1d             	cmp    $0x1d,%eax
81000efc:	74 0a                	je     81000f08 <__sflush_r+0xb2>
81000efe:	8b 45 08             	mov    0x8(%ebp),%eax
81000f01:	8b 00                	mov    (%eax),%eax
81000f03:	83 f8 16             	cmp    $0x16,%eax
81000f06:	75 11                	jne    81000f19 <__sflush_r+0xc3>
81000f08:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000f0f:	8b 45 08             	mov    0x8(%ebp),%eax
81000f12:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000f15:	89 10                	mov    %edx,(%eax)
81000f17:	eb 0b                	jmp    81000f24 <__sflush_r+0xce>
81000f19:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f1d:	83 c8 40             	or     $0x40,%eax
81000f20:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f24:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f27:	e9 48 01 00 00       	jmp    81001074 <__sflush_r+0x21e>
81000f2c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f30:	98                   	cwtl   
81000f31:	83 e0 04             	and    $0x4,%eax
81000f34:	85 c0                	test   %eax,%eax
81000f36:	74 13                	je     81000f4b <__sflush_r+0xf5>
81000f38:	8b 43 04             	mov    0x4(%ebx),%eax
81000f3b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000f3e:	8b 43 30             	mov    0x30(%ebx),%eax
81000f41:	85 c0                	test   %eax,%eax
81000f43:	74 06                	je     81000f4b <__sflush_r+0xf5>
81000f45:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000f48:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000f4b:	8b 43 28             	mov    0x28(%ebx),%eax
81000f4e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f51:	6a 00                	push   $0x0
81000f53:	ff 75 e4             	push   -0x1c(%ebp)
81000f56:	52                   	push   %edx
81000f57:	ff 75 08             	push   0x8(%ebp)
81000f5a:	ff d0                	call   *%eax
81000f5c:	83 c4 10             	add    $0x10,%esp
81000f5f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000f62:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000f66:	75 1d                	jne    81000f85 <__sflush_r+0x12f>
81000f68:	8b 45 08             	mov    0x8(%ebp),%eax
81000f6b:	8b 00                	mov    (%eax),%eax
81000f6d:	85 c0                	test   %eax,%eax
81000f6f:	74 14                	je     81000f85 <__sflush_r+0x12f>
81000f71:	8b 45 08             	mov    0x8(%ebp),%eax
81000f74:	8b 00                	mov    (%eax),%eax
81000f76:	83 f8 1d             	cmp    $0x1d,%eax
81000f79:	74 0a                	je     81000f85 <__sflush_r+0x12f>
81000f7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000f7e:	8b 00                	mov    (%eax),%eax
81000f80:	83 f8 16             	cmp    $0x16,%eax
81000f83:	75 6e                	jne    81000ff3 <__sflush_r+0x19d>
81000f85:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f89:	80 e4 f7             	and    $0xf7,%ah
81000f8c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f90:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000f97:	8b 43 10             	mov    0x10(%ebx),%eax
81000f9a:	89 03                	mov    %eax,(%ebx)
81000f9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fa0:	98                   	cwtl   
81000fa1:	25 00 10 00 00       	and    $0x1000,%eax
81000fa6:	85 c0                	test   %eax,%eax
81000fa8:	74 15                	je     81000fbf <__sflush_r+0x169>
81000faa:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000fae:	75 09                	jne    81000fb9 <__sflush_r+0x163>
81000fb0:	8b 45 08             	mov    0x8(%ebp),%eax
81000fb3:	8b 00                	mov    (%eax),%eax
81000fb5:	85 c0                	test   %eax,%eax
81000fb7:	75 06                	jne    81000fbf <__sflush_r+0x169>
81000fb9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000fbc:	89 43 50             	mov    %eax,0x50(%ebx)
81000fbf:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000fc5:	89 10                	mov    %edx,(%eax)
81000fc7:	8b 43 30             	mov    0x30(%ebx),%eax
81000fca:	85 c0                	test   %eax,%eax
81000fcc:	74 37                	je     81001005 <__sflush_r+0x1af>
81000fce:	8b 53 30             	mov    0x30(%ebx),%edx
81000fd1:	8d 43 40             	lea    0x40(%ebx),%eax
81000fd4:	39 c2                	cmp    %eax,%edx
81000fd6:	74 12                	je     81000fea <__sflush_r+0x194>
81000fd8:	8b 43 30             	mov    0x30(%ebx),%eax
81000fdb:	83 ec 08             	sub    $0x8,%esp
81000fde:	50                   	push   %eax
81000fdf:	ff 75 08             	push   0x8(%ebp)
81000fe2:	e8 ee 07 00 00       	call   810017d5 <_free_r>
81000fe7:	83 c4 10             	add    $0x10,%esp
81000fea:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000ff1:	eb 12                	jmp    81001005 <__sflush_r+0x1af>
81000ff3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ff7:	83 c8 40             	or     $0x40,%eax
81000ffa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ffe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001003:	eb 6f                	jmp    81001074 <__sflush_r+0x21e>
81001005:	b8 00 00 00 00       	mov    $0x0,%eax
8100100a:	eb 68                	jmp    81001074 <__sflush_r+0x21e>
8100100c:	8b 73 10             	mov    0x10(%ebx),%esi
8100100f:	85 f6                	test   %esi,%esi
81001011:	75 07                	jne    8100101a <__sflush_r+0x1c4>
81001013:	b8 00 00 00 00       	mov    $0x0,%eax
81001018:	eb 5a                	jmp    81001074 <__sflush_r+0x21e>
8100101a:	8b 03                	mov    (%ebx),%eax
8100101c:	29 f0                	sub    %esi,%eax
8100101e:	89 c7                	mov    %eax,%edi
81001020:	89 33                	mov    %esi,(%ebx)
81001022:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001026:	83 e0 03             	and    $0x3,%eax
81001029:	85 c0                	test   %eax,%eax
8100102b:	75 05                	jne    81001032 <__sflush_r+0x1dc>
8100102d:	8b 43 14             	mov    0x14(%ebx),%eax
81001030:	eb 05                	jmp    81001037 <__sflush_r+0x1e1>
81001032:	b8 00 00 00 00       	mov    $0x0,%eax
81001037:	89 43 08             	mov    %eax,0x8(%ebx)
8100103a:	eb 2f                	jmp    8100106b <__sflush_r+0x215>
8100103c:	8b 43 24             	mov    0x24(%ebx),%eax
8100103f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001042:	57                   	push   %edi
81001043:	56                   	push   %esi
81001044:	52                   	push   %edx
81001045:	ff 75 08             	push   0x8(%ebp)
81001048:	ff d0                	call   *%eax
8100104a:	83 c4 10             	add    $0x10,%esp
8100104d:	85 c0                	test   %eax,%eax
8100104f:	7f 12                	jg     81001063 <__sflush_r+0x20d>
81001051:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001055:	83 c8 40             	or     $0x40,%eax
81001058:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100105c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001061:	eb 11                	jmp    81001074 <__sflush_r+0x21e>
81001063:	89 c1                	mov    %eax,%ecx
81001065:	89 c8                	mov    %ecx,%eax
81001067:	01 c6                	add    %eax,%esi
81001069:	29 cf                	sub    %ecx,%edi
8100106b:	85 ff                	test   %edi,%edi
8100106d:	7f cd                	jg     8100103c <__sflush_r+0x1e6>
8100106f:	b8 00 00 00 00       	mov    $0x0,%eax
81001074:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001077:	5b                   	pop    %ebx
81001078:	5e                   	pop    %esi
81001079:	5f                   	pop    %edi
8100107a:	5d                   	pop    %ebp
8100107b:	c3                   	ret    

8100107c <_fflush_r>:
8100107c:	55                   	push   %ebp
8100107d:	89 e5                	mov    %esp,%ebp
8100107f:	53                   	push   %ebx
81001080:	83 ec 14             	sub    $0x14,%esp
81001083:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001086:	8b 45 08             	mov    0x8(%ebp),%eax
81001089:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100108c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001090:	74 18                	je     810010aa <_fflush_r+0x2e>
81001092:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001095:	8b 40 38             	mov    0x38(%eax),%eax
81001098:	85 c0                	test   %eax,%eax
8100109a:	75 0e                	jne    810010aa <_fflush_r+0x2e>
8100109c:	83 ec 0c             	sub    $0xc,%esp
8100109f:	ff 75 f4             	push   -0xc(%ebp)
810010a2:	e8 d8 04 00 00       	call   8100157f <__sinit>
810010a7:	83 c4 10             	add    $0x10,%esp
810010aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010ae:	66 85 c0             	test   %ax,%ax
810010b1:	75 07                	jne    810010ba <_fflush_r+0x3e>
810010b3:	b8 00 00 00 00       	mov    $0x0,%eax
810010b8:	eb 15                	jmp    810010cf <_fflush_r+0x53>
810010ba:	83 ec 08             	sub    $0x8,%esp
810010bd:	53                   	push   %ebx
810010be:	ff 75 08             	push   0x8(%ebp)
810010c1:	e8 90 fd ff ff       	call   81000e56 <__sflush_r>
810010c6:	83 c4 10             	add    $0x10,%esp
810010c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810010cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010d2:	c9                   	leave  
810010d3:	c3                   	ret    

810010d4 <fflush>:
810010d4:	55                   	push   %ebp
810010d5:	89 e5                	mov    %esp,%ebp
810010d7:	83 ec 08             	sub    $0x8,%esp
810010da:	8b 55 08             	mov    0x8(%ebp),%edx
810010dd:	85 d2                	test   %edx,%edx
810010df:	75 18                	jne    810010f9 <fflush+0x25>
810010e1:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
810010e6:	83 ec 08             	sub    $0x8,%esp
810010e9:	68 7c 10 00 81       	push   $0x8100107c
810010ee:	50                   	push   %eax
810010ef:	e8 d6 11 00 00       	call   810022ca <_fwalk_reent>
810010f4:	83 c4 10             	add    $0x10,%esp
810010f7:	eb 12                	jmp    8100110b <fflush+0x37>
810010f9:	a1 84 83 00 81       	mov    0x81008384,%eax
810010fe:	83 ec 08             	sub    $0x8,%esp
81001101:	52                   	push   %edx
81001102:	50                   	push   %eax
81001103:	e8 74 ff ff ff       	call   8100107c <_fflush_r>
81001108:	83 c4 10             	add    $0x10,%esp
8100110b:	c9                   	leave  
8100110c:	c3                   	ret    

8100110d <_fgets_r>:
8100110d:	55                   	push   %ebp
8100110e:	89 e5                	mov    %esp,%ebp
81001110:	83 ec 28             	sub    $0x28,%esp
81001113:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81001117:	7f 0a                	jg     81001123 <_fgets_r+0x16>
81001119:	b8 00 00 00 00       	mov    $0x0,%eax
8100111e:	e9 46 01 00 00       	jmp    81001269 <_fgets_r+0x15c>
81001123:	8b 45 0c             	mov    0xc(%ebp),%eax
81001126:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001129:	8b 45 08             	mov    0x8(%ebp),%eax
8100112c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100112f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001133:	74 18                	je     8100114d <_fgets_r+0x40>
81001135:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001138:	8b 40 38             	mov    0x38(%eax),%eax
8100113b:	85 c0                	test   %eax,%eax
8100113d:	75 0e                	jne    8100114d <_fgets_r+0x40>
8100113f:	83 ec 0c             	sub    $0xc,%esp
81001142:	ff 75 ec             	push   -0x14(%ebp)
81001145:	e8 35 04 00 00       	call   8100157f <__sinit>
8100114a:	83 c4 10             	add    $0x10,%esp
8100114d:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001151:	8b 45 14             	mov    0x14(%ebp),%eax
81001154:	8b 40 04             	mov    0x4(%eax),%eax
81001157:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100115a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100115e:	75 34                	jne    81001194 <_fgets_r+0x87>
81001160:	83 ec 08             	sub    $0x8,%esp
81001163:	ff 75 14             	push   0x14(%ebp)
81001166:	ff 75 08             	push   0x8(%ebp)
81001169:	e8 c3 3d 00 00       	call   81004f31 <__srefill_r>
8100116e:	83 c4 10             	add    $0x10,%esp
81001171:	85 c0                	test   %eax,%eax
81001173:	74 16                	je     8100118b <_fgets_r+0x7e>
81001175:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001178:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100117b:	0f 85 de 00 00 00    	jne    8100125f <_fgets_r+0x152>
81001181:	b8 00 00 00 00       	mov    $0x0,%eax
81001186:	e9 de 00 00 00       	jmp    81001269 <_fgets_r+0x15c>
8100118b:	8b 45 14             	mov    0x14(%ebp),%eax
8100118e:	8b 40 04             	mov    0x4(%eax),%eax
81001191:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001194:	8b 45 14             	mov    0x14(%ebp),%eax
81001197:	8b 00                	mov    (%eax),%eax
81001199:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100119c:	8b 45 10             	mov    0x10(%ebp),%eax
8100119f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810011a2:	76 06                	jbe    810011aa <_fgets_r+0x9d>
810011a4:	8b 45 10             	mov    0x10(%ebp),%eax
810011a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011aa:	83 ec 04             	sub    $0x4,%esp
810011ad:	ff 75 f4             	push   -0xc(%ebp)
810011b0:	6a 0a                	push   $0xa
810011b2:	ff 75 e8             	push   -0x18(%ebp)
810011b5:	e8 06 2d 00 00       	call   81003ec0 <memchr>
810011ba:	83 c4 10             	add    $0x10,%esp
810011bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011c0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810011c4:	74 4a                	je     81001210 <_fgets_r+0x103>
810011c6:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810011ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810011cd:	2b 45 e8             	sub    -0x18(%ebp),%eax
810011d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011d3:	8b 45 14             	mov    0x14(%ebp),%eax
810011d6:	8b 40 04             	mov    0x4(%eax),%eax
810011d9:	2b 45 f4             	sub    -0xc(%ebp),%eax
810011dc:	89 c2                	mov    %eax,%edx
810011de:	8b 45 14             	mov    0x14(%ebp),%eax
810011e1:	89 50 04             	mov    %edx,0x4(%eax)
810011e4:	8b 45 14             	mov    0x14(%ebp),%eax
810011e7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810011ea:	89 10                	mov    %edx,(%eax)
810011ec:	83 ec 04             	sub    $0x4,%esp
810011ef:	ff 75 f4             	push   -0xc(%ebp)
810011f2:	ff 75 e8             	push   -0x18(%ebp)
810011f5:	ff 75 f0             	push   -0x10(%ebp)
810011f8:	e8 ab 2d 00 00       	call   81003fa8 <memcpy>
810011fd:	83 c4 10             	add    $0x10,%esp
81001200:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001203:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001206:	01 d0                	add    %edx,%eax
81001208:	c6 00 00             	movb   $0x0,(%eax)
8100120b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100120e:	eb 59                	jmp    81001269 <_fgets_r+0x15c>
81001210:	8b 45 14             	mov    0x14(%ebp),%eax
81001213:	8b 40 04             	mov    0x4(%eax),%eax
81001216:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001219:	89 c2                	mov    %eax,%edx
8100121b:	8b 45 14             	mov    0x14(%ebp),%eax
8100121e:	89 50 04             	mov    %edx,0x4(%eax)
81001221:	8b 45 14             	mov    0x14(%ebp),%eax
81001224:	8b 10                	mov    (%eax),%edx
81001226:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001229:	01 c2                	add    %eax,%edx
8100122b:	8b 45 14             	mov    0x14(%ebp),%eax
8100122e:	89 10                	mov    %edx,(%eax)
81001230:	83 ec 04             	sub    $0x4,%esp
81001233:	ff 75 f4             	push   -0xc(%ebp)
81001236:	ff 75 e8             	push   -0x18(%ebp)
81001239:	ff 75 f0             	push   -0x10(%ebp)
8100123c:	e8 67 2d 00 00       	call   81003fa8 <memcpy>
81001241:	83 c4 10             	add    $0x10,%esp
81001244:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001247:	01 45 f0             	add    %eax,-0x10(%ebp)
8100124a:	8b 45 10             	mov    0x10(%ebp),%eax
8100124d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001250:	89 45 10             	mov    %eax,0x10(%ebp)
81001253:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001257:	0f 85 f4 fe ff ff    	jne    81001151 <_fgets_r+0x44>
8100125d:	eb 01                	jmp    81001260 <_fgets_r+0x153>
8100125f:	90                   	nop
81001260:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001263:	c6 00 00             	movb   $0x0,(%eax)
81001266:	8b 45 0c             	mov    0xc(%ebp),%eax
81001269:	c9                   	leave  
8100126a:	c3                   	ret    

8100126b <fgets>:
8100126b:	55                   	push   %ebp
8100126c:	89 e5                	mov    %esp,%ebp
8100126e:	83 ec 08             	sub    $0x8,%esp
81001271:	a1 84 83 00 81       	mov    0x81008384,%eax
81001276:	ff 75 10             	push   0x10(%ebp)
81001279:	ff 75 0c             	push   0xc(%ebp)
8100127c:	ff 75 08             	push   0x8(%ebp)
8100127f:	50                   	push   %eax
81001280:	e8 88 fe ff ff       	call   8100110d <_fgets_r>
81001285:	83 c4 10             	add    $0x10,%esp
81001288:	c9                   	leave  
81001289:	c3                   	ret    

8100128a <std>:
8100128a:	55                   	push   %ebp
8100128b:	89 e5                	mov    %esp,%ebp
8100128d:	83 ec 08             	sub    $0x8,%esp
81001290:	8b 45 08             	mov    0x8(%ebp),%eax
81001293:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001299:	8b 45 08             	mov    0x8(%ebp),%eax
8100129c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810012a3:	8b 45 08             	mov    0x8(%ebp),%eax
810012a6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810012ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810012b0:	89 c2                	mov    %eax,%edx
810012b2:	8b 45 08             	mov    0x8(%ebp),%eax
810012b5:	66 89 50 0c          	mov    %dx,0xc(%eax)
810012b9:	8b 45 08             	mov    0x8(%ebp),%eax
810012bc:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810012c3:	8b 45 10             	mov    0x10(%ebp),%eax
810012c6:	89 c2                	mov    %eax,%edx
810012c8:	8b 45 08             	mov    0x8(%ebp),%eax
810012cb:	66 89 50 0e          	mov    %dx,0xe(%eax)
810012cf:	8b 45 08             	mov    0x8(%ebp),%eax
810012d2:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810012d9:	8b 45 08             	mov    0x8(%ebp),%eax
810012dc:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810012e3:	8b 45 08             	mov    0x8(%ebp),%eax
810012e6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810012ed:	8b 45 08             	mov    0x8(%ebp),%eax
810012f0:	83 c0 5c             	add    $0x5c,%eax
810012f3:	83 ec 04             	sub    $0x4,%esp
810012f6:	6a 08                	push   $0x8
810012f8:	6a 00                	push   $0x0
810012fa:	50                   	push   %eax
810012fb:	e8 f0 2c 00 00       	call   81003ff0 <memset>
81001300:	83 c4 10             	add    $0x10,%esp
81001303:	8b 45 08             	mov    0x8(%ebp),%eax
81001306:	8b 55 08             	mov    0x8(%ebp),%edx
81001309:	89 50 1c             	mov    %edx,0x1c(%eax)
8100130c:	8b 45 08             	mov    0x8(%ebp),%eax
8100130f:	c7 40 20 7e 53 00 81 	movl   $0x8100537e,0x20(%eax)
81001316:	8b 45 08             	mov    0x8(%ebp),%eax
81001319:	c7 40 24 cc 53 00 81 	movl   $0x810053cc,0x24(%eax)
81001320:	8b 45 08             	mov    0x8(%ebp),%eax
81001323:	c7 40 28 27 54 00 81 	movl   $0x81005427,0x28(%eax)
8100132a:	8b 45 08             	mov    0x8(%ebp),%eax
8100132d:	c7 40 2c 71 54 00 81 	movl   $0x81005471,0x2c(%eax)
81001334:	90                   	nop
81001335:	c9                   	leave  
81001336:	c3                   	ret    

81001337 <stdin_init>:
81001337:	55                   	push   %ebp
81001338:	89 e5                	mov    %esp,%ebp
8100133a:	83 ec 08             	sub    $0x8,%esp
8100133d:	83 ec 04             	sub    $0x4,%esp
81001340:	6a 00                	push   $0x0
81001342:	6a 04                	push   $0x4
81001344:	ff 75 08             	push   0x8(%ebp)
81001347:	e8 3e ff ff ff       	call   8100128a <std>
8100134c:	83 c4 10             	add    $0x10,%esp
8100134f:	90                   	nop
81001350:	c9                   	leave  
81001351:	c3                   	ret    

81001352 <stdout_init>:
81001352:	55                   	push   %ebp
81001353:	89 e5                	mov    %esp,%ebp
81001355:	83 ec 08             	sub    $0x8,%esp
81001358:	83 ec 04             	sub    $0x4,%esp
8100135b:	6a 01                	push   $0x1
8100135d:	6a 09                	push   $0x9
8100135f:	ff 75 08             	push   0x8(%ebp)
81001362:	e8 23 ff ff ff       	call   8100128a <std>
81001367:	83 c4 10             	add    $0x10,%esp
8100136a:	90                   	nop
8100136b:	c9                   	leave  
8100136c:	c3                   	ret    

8100136d <stderr_init>:
8100136d:	55                   	push   %ebp
8100136e:	89 e5                	mov    %esp,%ebp
81001370:	83 ec 08             	sub    $0x8,%esp
81001373:	83 ec 04             	sub    $0x4,%esp
81001376:	6a 02                	push   $0x2
81001378:	6a 12                	push   $0x12
8100137a:	ff 75 08             	push   0x8(%ebp)
8100137d:	e8 08 ff ff ff       	call   8100128a <std>
81001382:	83 c4 10             	add    $0x10,%esp
81001385:	90                   	nop
81001386:	c9                   	leave  
81001387:	c3                   	ret    

81001388 <__sfmoreglue>:
81001388:	55                   	push   %ebp
81001389:	89 e5                	mov    %esp,%ebp
8100138b:	53                   	push   %ebx
8100138c:	83 ec 14             	sub    $0x14,%esp
8100138f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001392:	8d 43 ff             	lea    -0x1(%ebx),%eax
81001395:	6b c0 68             	imul   $0x68,%eax,%eax
81001398:	83 c0 74             	add    $0x74,%eax
8100139b:	83 ec 08             	sub    $0x8,%esp
8100139e:	50                   	push   %eax
8100139f:	ff 75 08             	push   0x8(%ebp)
810013a2:	e8 f1 22 00 00       	call   81003698 <_malloc_r>
810013a7:	83 c4 10             	add    $0x10,%esp
810013aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810013b1:	75 07                	jne    810013ba <__sfmoreglue+0x32>
810013b3:	b8 00 00 00 00       	mov    $0x0,%eax
810013b8:	eb 38                	jmp    810013f2 <__sfmoreglue+0x6a>
810013ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013bd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810013c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c6:	89 58 04             	mov    %ebx,0x4(%eax)
810013c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013cc:	8d 50 0c             	lea    0xc(%eax),%edx
810013cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d2:	89 50 08             	mov    %edx,0x8(%eax)
810013d5:	89 d8                	mov    %ebx,%eax
810013d7:	6b c0 68             	imul   $0x68,%eax,%eax
810013da:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013dd:	83 c2 0c             	add    $0xc,%edx
810013e0:	83 ec 04             	sub    $0x4,%esp
810013e3:	50                   	push   %eax
810013e4:	6a 00                	push   $0x0
810013e6:	52                   	push   %edx
810013e7:	e8 04 2c 00 00       	call   81003ff0 <memset>
810013ec:	83 c4 10             	add    $0x10,%esp
810013ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810013f5:	c9                   	leave  
810013f6:	c3                   	ret    

810013f7 <__sfp>:
810013f7:	55                   	push   %ebp
810013f8:	89 e5                	mov    %esp,%ebp
810013fa:	83 ec 18             	sub    $0x18,%esp
810013fd:	e8 16 02 00 00       	call   81001618 <__sfp_lock_acquire>
81001402:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81001407:	8b 40 38             	mov    0x38(%eax),%eax
8100140a:	85 c0                	test   %eax,%eax
8100140c:	75 11                	jne    8100141f <__sfp+0x28>
8100140e:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81001413:	83 ec 0c             	sub    $0xc,%esp
81001416:	50                   	push   %eax
81001417:	e8 63 01 00 00       	call   8100157f <__sinit>
8100141c:	83 c4 10             	add    $0x10,%esp
8100141f:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81001424:	05 e0 02 00 00       	add    $0x2e0,%eax
81001429:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100142c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100142f:	8b 40 08             	mov    0x8(%eax),%eax
81001432:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001435:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001438:	8b 40 04             	mov    0x4(%eax),%eax
8100143b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100143e:	eb 10                	jmp    81001450 <__sfp+0x59>
81001440:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001443:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001447:	66 85 c0             	test   %ax,%ax
8100144a:	74 58                	je     810014a4 <__sfp+0xad>
8100144c:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001450:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001454:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001458:	79 e6                	jns    81001440 <__sfp+0x49>
8100145a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100145d:	8b 00                	mov    (%eax),%eax
8100145f:	85 c0                	test   %eax,%eax
81001461:	75 1e                	jne    81001481 <__sfp+0x8a>
81001463:	83 ec 08             	sub    $0x8,%esp
81001466:	6a 04                	push   $0x4
81001468:	ff 75 08             	push   0x8(%ebp)
8100146b:	e8 18 ff ff ff       	call   81001388 <__sfmoreglue>
81001470:	83 c4 10             	add    $0x10,%esp
81001473:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001476:	89 02                	mov    %eax,(%edx)
81001478:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100147b:	8b 00                	mov    (%eax),%eax
8100147d:	85 c0                	test   %eax,%eax
8100147f:	74 0a                	je     8100148b <__sfp+0x94>
81001481:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001484:	8b 00                	mov    (%eax),%eax
81001486:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001489:	eb a1                	jmp    8100142c <__sfp+0x35>
8100148b:	90                   	nop
8100148c:	e8 8d 01 00 00       	call   8100161e <__sfp_lock_release>
81001491:	8b 45 08             	mov    0x8(%ebp),%eax
81001494:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100149a:	b8 00 00 00 00       	mov    $0x0,%eax
8100149f:	e9 9e 00 00 00       	jmp    81001542 <__sfp+0x14b>
810014a4:	90                   	nop
810014a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014a8:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810014ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014b1:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810014b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ba:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810014c1:	e8 58 01 00 00       	call   8100161e <__sfp_lock_release>
810014c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810014cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810014d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014dc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810014e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014e6:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810014ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f0:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810014f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fa:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001501:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001504:	83 c0 5c             	add    $0x5c,%eax
81001507:	83 ec 04             	sub    $0x4,%esp
8100150a:	6a 08                	push   $0x8
8100150c:	6a 00                	push   $0x0
8100150e:	50                   	push   %eax
8100150f:	e8 dc 2a 00 00       	call   81003ff0 <memset>
81001514:	83 c4 10             	add    $0x10,%esp
81001517:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100151a:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001521:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001524:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100152b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100152e:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001535:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001538:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100153f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001542:	c9                   	leave  
81001543:	c3                   	ret    

81001544 <_cleanup_r>:
81001544:	55                   	push   %ebp
81001545:	89 e5                	mov    %esp,%ebp
81001547:	83 ec 18             	sub    $0x18,%esp
8100154a:	c7 45 f4 32 0d 00 81 	movl   $0x81000d32,-0xc(%ebp)
81001551:	83 ec 08             	sub    $0x8,%esp
81001554:	ff 75 f4             	push   -0xc(%ebp)
81001557:	ff 75 08             	push   0x8(%ebp)
8100155a:	e8 6b 0d 00 00       	call   810022ca <_fwalk_reent>
8100155f:	83 c4 10             	add    $0x10,%esp
81001562:	90                   	nop
81001563:	c9                   	leave  
81001564:	c3                   	ret    

81001565 <_cleanup>:
81001565:	55                   	push   %ebp
81001566:	89 e5                	mov    %esp,%ebp
81001568:	83 ec 08             	sub    $0x8,%esp
8100156b:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81001570:	83 ec 0c             	sub    $0xc,%esp
81001573:	50                   	push   %eax
81001574:	e8 cb ff ff ff       	call   81001544 <_cleanup_r>
81001579:	83 c4 10             	add    $0x10,%esp
8100157c:	90                   	nop
8100157d:	c9                   	leave  
8100157e:	c3                   	ret    

8100157f <__sinit>:
8100157f:	55                   	push   %ebp
81001580:	89 e5                	mov    %esp,%ebp
81001582:	83 ec 08             	sub    $0x8,%esp
81001585:	e8 9a 00 00 00       	call   81001624 <__sinit_lock_acquire>
8100158a:	8b 45 08             	mov    0x8(%ebp),%eax
8100158d:	8b 40 38             	mov    0x38(%eax),%eax
81001590:	85 c0                	test   %eax,%eax
81001592:	74 07                	je     8100159b <__sinit+0x1c>
81001594:	e8 91 00 00 00       	call   8100162a <__sinit_lock_release>
81001599:	eb 7b                	jmp    81001616 <__sinit+0x97>
8100159b:	8b 45 08             	mov    0x8(%ebp),%eax
8100159e:	c7 40 3c 44 15 00 81 	movl   $0x81001544,0x3c(%eax)
810015a5:	8b 45 08             	mov    0x8(%ebp),%eax
810015a8:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810015af:	00 00 00 
810015b2:	8b 45 08             	mov    0x8(%ebp),%eax
810015b5:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810015bc:	00 00 00 
810015bf:	8b 45 08             	mov    0x8(%ebp),%eax
810015c2:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810015c8:	8b 45 08             	mov    0x8(%ebp),%eax
810015cb:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810015d1:	8b 45 08             	mov    0x8(%ebp),%eax
810015d4:	8b 40 04             	mov    0x4(%eax),%eax
810015d7:	83 ec 0c             	sub    $0xc,%esp
810015da:	50                   	push   %eax
810015db:	e8 57 fd ff ff       	call   81001337 <stdin_init>
810015e0:	83 c4 10             	add    $0x10,%esp
810015e3:	8b 45 08             	mov    0x8(%ebp),%eax
810015e6:	8b 40 08             	mov    0x8(%eax),%eax
810015e9:	83 ec 0c             	sub    $0xc,%esp
810015ec:	50                   	push   %eax
810015ed:	e8 60 fd ff ff       	call   81001352 <stdout_init>
810015f2:	83 c4 10             	add    $0x10,%esp
810015f5:	8b 45 08             	mov    0x8(%ebp),%eax
810015f8:	8b 40 0c             	mov    0xc(%eax),%eax
810015fb:	83 ec 0c             	sub    $0xc,%esp
810015fe:	50                   	push   %eax
810015ff:	e8 69 fd ff ff       	call   8100136d <stderr_init>
81001604:	83 c4 10             	add    $0x10,%esp
81001607:	8b 45 08             	mov    0x8(%ebp),%eax
8100160a:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001611:	e8 14 00 00 00       	call   8100162a <__sinit_lock_release>
81001616:	c9                   	leave  
81001617:	c3                   	ret    

81001618 <__sfp_lock_acquire>:
81001618:	55                   	push   %ebp
81001619:	89 e5                	mov    %esp,%ebp
8100161b:	90                   	nop
8100161c:	5d                   	pop    %ebp
8100161d:	c3                   	ret    

8100161e <__sfp_lock_release>:
8100161e:	55                   	push   %ebp
8100161f:	89 e5                	mov    %esp,%ebp
81001621:	90                   	nop
81001622:	5d                   	pop    %ebp
81001623:	c3                   	ret    

81001624 <__sinit_lock_acquire>:
81001624:	55                   	push   %ebp
81001625:	89 e5                	mov    %esp,%ebp
81001627:	90                   	nop
81001628:	5d                   	pop    %ebp
81001629:	c3                   	ret    

8100162a <__sinit_lock_release>:
8100162a:	55                   	push   %ebp
8100162b:	89 e5                	mov    %esp,%ebp
8100162d:	90                   	nop
8100162e:	5d                   	pop    %ebp
8100162f:	c3                   	ret    

81001630 <__fp_lock>:
81001630:	55                   	push   %ebp
81001631:	89 e5                	mov    %esp,%ebp
81001633:	b8 00 00 00 00       	mov    $0x0,%eax
81001638:	5d                   	pop    %ebp
81001639:	c3                   	ret    

8100163a <__fp_unlock>:
8100163a:	55                   	push   %ebp
8100163b:	89 e5                	mov    %esp,%ebp
8100163d:	b8 00 00 00 00       	mov    $0x0,%eax
81001642:	5d                   	pop    %ebp
81001643:	c3                   	ret    

81001644 <__fp_lock_all>:
81001644:	55                   	push   %ebp
81001645:	89 e5                	mov    %esp,%ebp
81001647:	83 ec 08             	sub    $0x8,%esp
8100164a:	e8 c9 ff ff ff       	call   81001618 <__sfp_lock_acquire>
8100164f:	a1 84 83 00 81       	mov    0x81008384,%eax
81001654:	83 ec 08             	sub    $0x8,%esp
81001657:	68 30 16 00 81       	push   $0x81001630
8100165c:	50                   	push   %eax
8100165d:	e8 00 0c 00 00       	call   81002262 <_fwalk>
81001662:	83 c4 10             	add    $0x10,%esp
81001665:	90                   	nop
81001666:	c9                   	leave  
81001667:	c3                   	ret    

81001668 <__fp_unlock_all>:
81001668:	55                   	push   %ebp
81001669:	89 e5                	mov    %esp,%ebp
8100166b:	83 ec 08             	sub    $0x8,%esp
8100166e:	a1 84 83 00 81       	mov    0x81008384,%eax
81001673:	83 ec 08             	sub    $0x8,%esp
81001676:	68 3a 16 00 81       	push   $0x8100163a
8100167b:	50                   	push   %eax
8100167c:	e8 e1 0b 00 00       	call   81002262 <_fwalk>
81001681:	83 c4 10             	add    $0x10,%esp
81001684:	e8 95 ff ff ff       	call   8100161e <__sfp_lock_release>
81001689:	90                   	nop
8100168a:	c9                   	leave  
8100168b:	c3                   	ret    

8100168c <_fopen_r>:
8100168c:	55                   	push   %ebp
8100168d:	89 e5                	mov    %esp,%ebp
8100168f:	56                   	push   %esi
81001690:	53                   	push   %ebx
81001691:	83 ec 10             	sub    $0x10,%esp
81001694:	83 ec 04             	sub    $0x4,%esp
81001697:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100169a:	50                   	push   %eax
8100169b:	ff 75 10             	push   0x10(%ebp)
8100169e:	ff 75 08             	push   0x8(%ebp)
810016a1:	e8 bc 47 00 00       	call   81005e62 <__sflags>
810016a6:	83 c4 10             	add    $0x10,%esp
810016a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016ac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810016b0:	75 0a                	jne    810016bc <_fopen_r+0x30>
810016b2:	b8 00 00 00 00       	mov    $0x0,%eax
810016b7:	e9 9e 00 00 00       	jmp    8100175a <_fopen_r+0xce>
810016bc:	83 ec 0c             	sub    $0xc,%esp
810016bf:	ff 75 08             	push   0x8(%ebp)
810016c2:	e8 30 fd ff ff       	call   810013f7 <__sfp>
810016c7:	83 c4 10             	add    $0x10,%esp
810016ca:	89 c3                	mov    %eax,%ebx
810016cc:	85 db                	test   %ebx,%ebx
810016ce:	75 0a                	jne    810016da <_fopen_r+0x4e>
810016d0:	b8 00 00 00 00       	mov    $0x0,%eax
810016d5:	e9 80 00 00 00       	jmp    8100175a <_fopen_r+0xce>
810016da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016dd:	68 b6 01 00 00       	push   $0x1b6
810016e2:	50                   	push   %eax
810016e3:	ff 75 0c             	push   0xc(%ebp)
810016e6:	ff 75 08             	push   0x8(%ebp)
810016e9:	e8 e5 34 00 00       	call   81004bd3 <_open_r>
810016ee:	83 c4 10             	add    $0x10,%esp
810016f1:	89 c6                	mov    %eax,%esi
810016f3:	85 f6                	test   %esi,%esi
810016f5:	79 17                	jns    8100170e <_fopen_r+0x82>
810016f7:	e8 1c ff ff ff       	call   81001618 <__sfp_lock_acquire>
810016fc:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001702:	e8 17 ff ff ff       	call   8100161e <__sfp_lock_release>
81001707:	b8 00 00 00 00       	mov    $0x0,%eax
8100170c:	eb 4c                	jmp    8100175a <_fopen_r+0xce>
8100170e:	89 f0                	mov    %esi,%eax
81001710:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001714:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001717:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100171b:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
8100171e:	c7 43 20 7e 53 00 81 	movl   $0x8100537e,0x20(%ebx)
81001725:	c7 43 24 cc 53 00 81 	movl   $0x810053cc,0x24(%ebx)
8100172c:	c7 43 28 27 54 00 81 	movl   $0x81005427,0x28(%ebx)
81001733:	c7 43 2c 71 54 00 81 	movl   $0x81005471,0x2c(%ebx)
8100173a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100173e:	98                   	cwtl   
8100173f:	25 00 01 00 00       	and    $0x100,%eax
81001744:	85 c0                	test   %eax,%eax
81001746:	74 10                	je     81001758 <_fopen_r+0xcc>
81001748:	6a 02                	push   $0x2
8100174a:	6a 00                	push   $0x0
8100174c:	53                   	push   %ebx
8100174d:	ff 75 08             	push   0x8(%ebp)
81001750:	e8 bc 05 00 00       	call   81001d11 <_fseek_r>
81001755:	83 c4 10             	add    $0x10,%esp
81001758:	89 d8                	mov    %ebx,%eax
8100175a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100175d:	5b                   	pop    %ebx
8100175e:	5e                   	pop    %esi
8100175f:	5d                   	pop    %ebp
81001760:	c3                   	ret    

81001761 <fopen>:
81001761:	55                   	push   %ebp
81001762:	89 e5                	mov    %esp,%ebp
81001764:	83 ec 08             	sub    $0x8,%esp
81001767:	a1 84 83 00 81       	mov    0x81008384,%eax
8100176c:	83 ec 04             	sub    $0x4,%esp
8100176f:	ff 75 0c             	push   0xc(%ebp)
81001772:	ff 75 08             	push   0x8(%ebp)
81001775:	50                   	push   %eax
81001776:	e8 11 ff ff ff       	call   8100168c <_fopen_r>
8100177b:	83 c4 10             	add    $0x10,%esp
8100177e:	c9                   	leave  
8100177f:	c3                   	ret    

81001780 <_fiprintf_r>:
81001780:	55                   	push   %ebp
81001781:	89 e5                	mov    %esp,%ebp
81001783:	83 ec 18             	sub    $0x18,%esp
81001786:	8d 45 14             	lea    0x14(%ebp),%eax
81001789:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100178c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100178f:	50                   	push   %eax
81001790:	ff 75 10             	push   0x10(%ebp)
81001793:	ff 75 0c             	push   0xc(%ebp)
81001796:	ff 75 08             	push   0x8(%ebp)
81001799:	e8 f5 2a 00 00       	call   81004293 <_vfiprintf_r>
8100179e:	83 c4 10             	add    $0x10,%esp
810017a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a7:	c9                   	leave  
810017a8:	c3                   	ret    

810017a9 <fiprintf>:
810017a9:	55                   	push   %ebp
810017aa:	89 e5                	mov    %esp,%ebp
810017ac:	83 ec 18             	sub    $0x18,%esp
810017af:	8d 45 10             	lea    0x10(%ebp),%eax
810017b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017b5:	8b 55 f0             	mov    -0x10(%ebp),%edx
810017b8:	a1 84 83 00 81       	mov    0x81008384,%eax
810017bd:	52                   	push   %edx
810017be:	ff 75 0c             	push   0xc(%ebp)
810017c1:	ff 75 08             	push   0x8(%ebp)
810017c4:	50                   	push   %eax
810017c5:	e8 c9 2a 00 00       	call   81004293 <_vfiprintf_r>
810017ca:	83 c4 10             	add    $0x10,%esp
810017cd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d3:	c9                   	leave  
810017d4:	c3                   	ret    

810017d5 <_free_r>:
810017d5:	55                   	push   %ebp
810017d6:	89 e5                	mov    %esp,%ebp
810017d8:	53                   	push   %ebx
810017d9:	83 ec 34             	sub    $0x34,%esp
810017dc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810017e0:	0f 84 c4 03 00 00    	je     81001baa <_free_r+0x3d5>
810017e6:	83 ec 0c             	sub    $0xc,%esp
810017e9:	ff 75 08             	push   0x8(%ebp)
810017ec:	e8 87 28 00 00       	call   81004078 <__malloc_lock>
810017f1:	83 c4 10             	add    $0x10,%esp
810017f4:	8b 45 0c             	mov    0xc(%ebp),%eax
810017f7:	83 e8 08             	sub    $0x8,%eax
810017fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001800:	8b 40 04             	mov    0x4(%eax),%eax
81001803:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001806:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001809:	83 e0 fe             	and    $0xfffffffe,%eax
8100180c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100180f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001812:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001815:	01 d0                	add    %edx,%eax
81001817:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100181a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100181d:	8b 40 04             	mov    0x4(%eax),%eax
81001820:	83 e0 fc             	and    $0xfffffffc,%eax
81001823:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001826:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
8100182b:	8b 40 08             	mov    0x8(%eax),%eax
8100182e:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001831:	0f 85 94 00 00 00    	jne    810018cb <_free_r+0xf6>
81001837:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100183a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100183d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001840:	83 e0 01             	and    $0x1,%eax
81001843:	85 c0                	test   %eax,%eax
81001845:	75 3a                	jne    81001881 <_free_r+0xac>
81001847:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100184a:	8b 00                	mov    (%eax),%eax
8100184c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100184f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001852:	f7 d8                	neg    %eax
81001854:	01 45 f4             	add    %eax,-0xc(%ebp)
81001857:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100185a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100185d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001860:	8b 40 0c             	mov    0xc(%eax),%eax
81001863:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001866:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001869:	8b 40 08             	mov    0x8(%eax),%eax
8100186c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100186f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001872:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001875:	89 50 0c             	mov    %edx,0xc(%eax)
81001878:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100187b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100187e:	89 50 08             	mov    %edx,0x8(%eax)
81001881:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001884:	83 c8 01             	or     $0x1,%eax
81001887:	89 c2                	mov    %eax,%edx
81001889:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100188c:	89 50 04             	mov    %edx,0x4(%eax)
8100188f:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81001894:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001897:	89 42 08             	mov    %eax,0x8(%edx)
8100189a:	a1 a8 87 00 81       	mov    0x810087a8,%eax
8100189f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810018a2:	72 14                	jb     810018b8 <_free_r+0xe3>
810018a4:	a1 80 8f 00 81       	mov    0x81008f80,%eax
810018a9:	83 ec 08             	sub    $0x8,%esp
810018ac:	50                   	push   %eax
810018ad:	ff 75 08             	push   0x8(%ebp)
810018b0:	e8 fb 02 00 00       	call   81001bb0 <_malloc_trim_r>
810018b5:	83 c4 10             	add    $0x10,%esp
810018b8:	83 ec 0c             	sub    $0xc,%esp
810018bb:	ff 75 08             	push   0x8(%ebp)
810018be:	e8 bb 27 00 00       	call   8100407e <__malloc_unlock>
810018c3:	83 c4 10             	add    $0x10,%esp
810018c6:	e9 e0 02 00 00       	jmp    81001bab <_free_r+0x3d6>
810018cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018ce:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018d1:	89 50 04             	mov    %edx,0x4(%eax)
810018d4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018db:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018de:	83 e0 01             	and    $0x1,%eax
810018e1:	85 c0                	test   %eax,%eax
810018e3:	75 52                	jne    81001937 <_free_r+0x162>
810018e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018e8:	8b 00                	mov    (%eax),%eax
810018ea:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810018ed:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018f0:	f7 d8                	neg    %eax
810018f2:	01 45 f4             	add    %eax,-0xc(%ebp)
810018f5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018f8:	01 45 f0             	add    %eax,-0x10(%ebp)
810018fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018fe:	8b 40 08             	mov    0x8(%eax),%eax
81001901:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81001906:	39 d0                	cmp    %edx,%eax
81001908:	75 09                	jne    81001913 <_free_r+0x13e>
8100190a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001911:	eb 24                	jmp    81001937 <_free_r+0x162>
81001913:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001916:	8b 40 0c             	mov    0xc(%eax),%eax
81001919:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100191c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100191f:	8b 40 08             	mov    0x8(%eax),%eax
81001922:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001925:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001928:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100192b:	89 50 0c             	mov    %edx,0xc(%eax)
8100192e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001931:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001934:	89 50 08             	mov    %edx,0x8(%eax)
81001937:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100193a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100193d:	01 d0                	add    %edx,%eax
8100193f:	8b 40 04             	mov    0x4(%eax),%eax
81001942:	83 e0 01             	and    $0x1,%eax
81001945:	85 c0                	test   %eax,%eax
81001947:	75 75                	jne    810019be <_free_r+0x1e9>
81001949:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100194c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100194f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001953:	75 45                	jne    8100199a <_free_r+0x1c5>
81001955:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001958:	8b 40 08             	mov    0x8(%eax),%eax
8100195b:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81001960:	39 d0                	cmp    %edx,%eax
81001962:	75 36                	jne    8100199a <_free_r+0x1c5>
81001964:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100196b:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
81001970:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001973:	89 50 0c             	mov    %edx,0xc(%eax)
81001976:	ba a8 83 00 81       	mov    $0x810083a8,%edx
8100197b:	8b 40 0c             	mov    0xc(%eax),%eax
8100197e:	89 42 08             	mov    %eax,0x8(%edx)
81001981:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81001986:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001989:	89 50 0c             	mov    %edx,0xc(%eax)
8100198c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100198f:	8b 50 0c             	mov    0xc(%eax),%edx
81001992:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001995:	89 50 08             	mov    %edx,0x8(%eax)
81001998:	eb 24                	jmp    810019be <_free_r+0x1e9>
8100199a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100199d:	8b 40 0c             	mov    0xc(%eax),%eax
810019a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810019a3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810019a6:	8b 40 08             	mov    0x8(%eax),%eax
810019a9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019ac:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019af:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019b2:	89 50 0c             	mov    %edx,0xc(%eax)
810019b5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019b8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810019bb:	89 50 08             	mov    %edx,0x8(%eax)
810019be:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019c1:	83 c8 01             	or     $0x1,%eax
810019c4:	89 c2                	mov    %eax,%edx
810019c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019c9:	89 50 04             	mov    %edx,0x4(%eax)
810019cc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019d2:	01 c2                	add    %eax,%edx
810019d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019d7:	89 02                	mov    %eax,(%edx)
810019d9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810019dd:	0f 85 b7 01 00 00    	jne    81001b9a <_free_r+0x3c5>
810019e3:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810019ea:	77 7f                	ja     81001a6b <_free_r+0x296>
810019ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019ef:	c1 e8 03             	shr    $0x3,%eax
810019f2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810019f5:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
810019fa:	8b 58 04             	mov    0x4(%eax),%ebx
810019fd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a00:	8d 50 03             	lea    0x3(%eax),%edx
81001a03:	85 c0                	test   %eax,%eax
81001a05:	0f 48 c2             	cmovs  %edx,%eax
81001a08:	c1 f8 02             	sar    $0x2,%eax
81001a0b:	ba 01 00 00 00       	mov    $0x1,%edx
81001a10:	89 c1                	mov    %eax,%ecx
81001a12:	d3 e2                	shl    %cl,%edx
81001a14:	89 d0                	mov    %edx,%eax
81001a16:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81001a1b:	09 d8                	or     %ebx,%eax
81001a1d:	89 42 04             	mov    %eax,0x4(%edx)
81001a20:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a23:	83 c0 01             	add    $0x1,%eax
81001a26:	01 c0                	add    %eax,%eax
81001a28:	c1 e0 02             	shl    $0x2,%eax
81001a2b:	05 a0 83 00 81       	add    $0x810083a0,%eax
81001a30:	83 e8 08             	sub    $0x8,%eax
81001a33:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a39:	8b 40 08             	mov    0x8(%eax),%eax
81001a3c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a42:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001a45:	89 50 0c             	mov    %edx,0xc(%eax)
81001a48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a4b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a4e:	89 50 08             	mov    %edx,0x8(%eax)
81001a51:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a54:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a57:	89 50 08             	mov    %edx,0x8(%eax)
81001a5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a5d:	8b 50 08             	mov    0x8(%eax),%edx
81001a60:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a63:	89 50 0c             	mov    %edx,0xc(%eax)
81001a66:	e9 2f 01 00 00       	jmp    81001b9a <_free_r+0x3c5>
81001a6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a6e:	c1 e8 09             	shr    $0x9,%eax
81001a71:	85 c0                	test   %eax,%eax
81001a73:	75 08                	jne    81001a7d <_free_r+0x2a8>
81001a75:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a78:	c1 e8 03             	shr    $0x3,%eax
81001a7b:	eb 77                	jmp    81001af4 <_free_r+0x31f>
81001a7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a80:	c1 e8 09             	shr    $0x9,%eax
81001a83:	83 f8 04             	cmp    $0x4,%eax
81001a86:	77 0b                	ja     81001a93 <_free_r+0x2be>
81001a88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a8b:	c1 e8 06             	shr    $0x6,%eax
81001a8e:	83 c0 38             	add    $0x38,%eax
81001a91:	eb 61                	jmp    81001af4 <_free_r+0x31f>
81001a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a96:	c1 e8 09             	shr    $0x9,%eax
81001a99:	83 f8 14             	cmp    $0x14,%eax
81001a9c:	77 0b                	ja     81001aa9 <_free_r+0x2d4>
81001a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa1:	c1 e8 09             	shr    $0x9,%eax
81001aa4:	83 c0 5b             	add    $0x5b,%eax
81001aa7:	eb 4b                	jmp    81001af4 <_free_r+0x31f>
81001aa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aac:	c1 e8 09             	shr    $0x9,%eax
81001aaf:	83 f8 54             	cmp    $0x54,%eax
81001ab2:	77 0b                	ja     81001abf <_free_r+0x2ea>
81001ab4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ab7:	c1 e8 0c             	shr    $0xc,%eax
81001aba:	83 c0 6e             	add    $0x6e,%eax
81001abd:	eb 35                	jmp    81001af4 <_free_r+0x31f>
81001abf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ac2:	c1 e8 09             	shr    $0x9,%eax
81001ac5:	3d 54 01 00 00       	cmp    $0x154,%eax
81001aca:	77 0b                	ja     81001ad7 <_free_r+0x302>
81001acc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001acf:	c1 e8 0f             	shr    $0xf,%eax
81001ad2:	83 c0 77             	add    $0x77,%eax
81001ad5:	eb 1d                	jmp    81001af4 <_free_r+0x31f>
81001ad7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ada:	c1 e8 09             	shr    $0x9,%eax
81001add:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ae2:	77 0b                	ja     81001aef <_free_r+0x31a>
81001ae4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ae7:	c1 e8 12             	shr    $0x12,%eax
81001aea:	83 c0 7c             	add    $0x7c,%eax
81001aed:	eb 05                	jmp    81001af4 <_free_r+0x31f>
81001aef:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001af4:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001af7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001afa:	83 c0 01             	add    $0x1,%eax
81001afd:	01 c0                	add    %eax,%eax
81001aff:	c1 e0 02             	shl    $0x2,%eax
81001b02:	05 a0 83 00 81       	add    $0x810083a0,%eax
81001b07:	83 e8 08             	sub    $0x8,%eax
81001b0a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b0d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b10:	8b 40 08             	mov    0x8(%eax),%eax
81001b13:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b16:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b19:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b1c:	75 36                	jne    81001b54 <_free_r+0x37f>
81001b1e:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001b23:	8b 58 04             	mov    0x4(%eax),%ebx
81001b26:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001b29:	8d 50 03             	lea    0x3(%eax),%edx
81001b2c:	85 c0                	test   %eax,%eax
81001b2e:	0f 48 c2             	cmovs  %edx,%eax
81001b31:	c1 f8 02             	sar    $0x2,%eax
81001b34:	ba 01 00 00 00       	mov    $0x1,%edx
81001b39:	89 c1                	mov    %eax,%ecx
81001b3b:	d3 e2                	shl    %cl,%edx
81001b3d:	89 d0                	mov    %edx,%eax
81001b3f:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81001b44:	09 d8                	or     %ebx,%eax
81001b46:	89 42 04             	mov    %eax,0x4(%edx)
81001b49:	eb 28                	jmp    81001b73 <_free_r+0x39e>
81001b4b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b4e:	8b 40 08             	mov    0x8(%eax),%eax
81001b51:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b54:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b57:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b5a:	74 0e                	je     81001b6a <_free_r+0x395>
81001b5c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b5f:	8b 40 04             	mov    0x4(%eax),%eax
81001b62:	83 e0 fc             	and    $0xfffffffc,%eax
81001b65:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001b68:	72 e1                	jb     81001b4b <_free_r+0x376>
81001b6a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b6d:	8b 40 0c             	mov    0xc(%eax),%eax
81001b70:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b73:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b76:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b79:	89 50 0c             	mov    %edx,0xc(%eax)
81001b7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b7f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b82:	89 50 08             	mov    %edx,0x8(%eax)
81001b85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b88:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b8b:	89 50 08             	mov    %edx,0x8(%eax)
81001b8e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b91:	8b 50 08             	mov    0x8(%eax),%edx
81001b94:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b97:	89 50 0c             	mov    %edx,0xc(%eax)
81001b9a:	83 ec 0c             	sub    $0xc,%esp
81001b9d:	ff 75 08             	push   0x8(%ebp)
81001ba0:	e8 d9 24 00 00       	call   8100407e <__malloc_unlock>
81001ba5:	83 c4 10             	add    $0x10,%esp
81001ba8:	eb 01                	jmp    81001bab <_free_r+0x3d6>
81001baa:	90                   	nop
81001bab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001bae:	c9                   	leave  
81001baf:	c3                   	ret    

81001bb0 <_malloc_trim_r>:
81001bb0:	55                   	push   %ebp
81001bb1:	89 e5                	mov    %esp,%ebp
81001bb3:	83 ec 28             	sub    $0x28,%esp
81001bb6:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001bbd:	83 ec 0c             	sub    $0xc,%esp
81001bc0:	ff 75 08             	push   0x8(%ebp)
81001bc3:	e8 b0 24 00 00       	call   81004078 <__malloc_lock>
81001bc8:	83 c4 10             	add    $0x10,%esp
81001bcb:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001bd0:	8b 40 08             	mov    0x8(%eax),%eax
81001bd3:	8b 40 04             	mov    0x4(%eax),%eax
81001bd6:	83 e0 fc             	and    $0xfffffffc,%eax
81001bd9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bdc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bdf:	2b 45 0c             	sub    0xc(%ebp),%eax
81001be2:	89 c2                	mov    %eax,%edx
81001be4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001be7:	01 d0                	add    %edx,%eax
81001be9:	83 e8 11             	sub    $0x11,%eax
81001bec:	ba 00 00 00 00       	mov    $0x0,%edx
81001bf1:	f7 75 f4             	divl   -0xc(%ebp)
81001bf4:	83 e8 01             	sub    $0x1,%eax
81001bf7:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001bfb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001bfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c01:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c04:	7d 18                	jge    81001c1e <_malloc_trim_r+0x6e>
81001c06:	83 ec 0c             	sub    $0xc,%esp
81001c09:	ff 75 08             	push   0x8(%ebp)
81001c0c:	e8 6d 24 00 00       	call   8100407e <__malloc_unlock>
81001c11:	83 c4 10             	add    $0x10,%esp
81001c14:	b8 00 00 00 00       	mov    $0x0,%eax
81001c19:	e9 f1 00 00 00       	jmp    81001d0f <_malloc_trim_r+0x15f>
81001c1e:	83 ec 08             	sub    $0x8,%esp
81001c21:	6a 00                	push   $0x0
81001c23:	ff 75 08             	push   0x8(%ebp)
81001c26:	e8 07 35 00 00       	call   81005132 <_sbrk_r>
81001c2b:	83 c4 10             	add    $0x10,%esp
81001c2e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c31:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001c36:	8b 50 08             	mov    0x8(%eax),%edx
81001c39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c3c:	01 d0                	add    %edx,%eax
81001c3e:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001c41:	74 18                	je     81001c5b <_malloc_trim_r+0xab>
81001c43:	83 ec 0c             	sub    $0xc,%esp
81001c46:	ff 75 08             	push   0x8(%ebp)
81001c49:	e8 30 24 00 00       	call   8100407e <__malloc_unlock>
81001c4e:	83 c4 10             	add    $0x10,%esp
81001c51:	b8 00 00 00 00       	mov    $0x0,%eax
81001c56:	e9 b4 00 00 00       	jmp    81001d0f <_malloc_trim_r+0x15f>
81001c5b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c5e:	f7 d8                	neg    %eax
81001c60:	83 ec 08             	sub    $0x8,%esp
81001c63:	50                   	push   %eax
81001c64:	ff 75 08             	push   0x8(%ebp)
81001c67:	e8 c6 34 00 00       	call   81005132 <_sbrk_r>
81001c6c:	83 c4 10             	add    $0x10,%esp
81001c6f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c72:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001c76:	75 61                	jne    81001cd9 <_malloc_trim_r+0x129>
81001c78:	83 ec 08             	sub    $0x8,%esp
81001c7b:	6a 00                	push   $0x0
81001c7d:	ff 75 08             	push   0x8(%ebp)
81001c80:	e8 ad 34 00 00       	call   81005132 <_sbrk_r>
81001c85:	83 c4 10             	add    $0x10,%esp
81001c88:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c8b:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001c90:	8b 50 08             	mov    0x8(%eax),%edx
81001c93:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c96:	29 d0                	sub    %edx,%eax
81001c98:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c9b:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001c9f:	7e 23                	jle    81001cc4 <_malloc_trim_r+0x114>
81001ca1:	8b 15 ac 87 00 81    	mov    0x810087ac,%edx
81001ca7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001caa:	29 d0                	sub    %edx,%eax
81001cac:	a3 a0 8f 00 81       	mov    %eax,0x81008fa0
81001cb1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cb4:	83 c8 01             	or     $0x1,%eax
81001cb7:	89 c2                	mov    %eax,%edx
81001cb9:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001cbe:	8b 40 08             	mov    0x8(%eax),%eax
81001cc1:	89 50 04             	mov    %edx,0x4(%eax)
81001cc4:	83 ec 0c             	sub    $0xc,%esp
81001cc7:	ff 75 08             	push   0x8(%ebp)
81001cca:	e8 af 23 00 00       	call   8100407e <__malloc_unlock>
81001ccf:	83 c4 10             	add    $0x10,%esp
81001cd2:	b8 00 00 00 00       	mov    $0x0,%eax
81001cd7:	eb 36                	jmp    81001d0f <_malloc_trim_r+0x15f>
81001cd9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cdc:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cdf:	83 c8 01             	or     $0x1,%eax
81001ce2:	89 c2                	mov    %eax,%edx
81001ce4:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81001ce9:	8b 40 08             	mov    0x8(%eax),%eax
81001cec:	89 50 04             	mov    %edx,0x4(%eax)
81001cef:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
81001cf4:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cf7:	a3 a0 8f 00 81       	mov    %eax,0x81008fa0
81001cfc:	83 ec 0c             	sub    $0xc,%esp
81001cff:	ff 75 08             	push   0x8(%ebp)
81001d02:	e8 77 23 00 00       	call   8100407e <__malloc_unlock>
81001d07:	83 c4 10             	add    $0x10,%esp
81001d0a:	b8 01 00 00 00       	mov    $0x1,%eax
81001d0f:	c9                   	leave  
81001d10:	c3                   	ret    

81001d11 <_fseek_r>:
81001d11:	55                   	push   %ebp
81001d12:	89 e5                	mov    %esp,%ebp
81001d14:	83 ec 08             	sub    $0x8,%esp
81001d17:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d1a:	ff 75 14             	push   0x14(%ebp)
81001d1d:	ff 75 10             	push   0x10(%ebp)
81001d20:	50                   	push   %eax
81001d21:	ff 75 08             	push   0x8(%ebp)
81001d24:	e8 25 00 00 00       	call   81001d4e <_fseeko_r>
81001d29:	83 c4 10             	add    $0x10,%esp
81001d2c:	c9                   	leave  
81001d2d:	c3                   	ret    

81001d2e <fseek>:
81001d2e:	55                   	push   %ebp
81001d2f:	89 e5                	mov    %esp,%ebp
81001d31:	83 ec 08             	sub    $0x8,%esp
81001d34:	8b 55 08             	mov    0x8(%ebp),%edx
81001d37:	a1 84 83 00 81       	mov    0x81008384,%eax
81001d3c:	ff 75 10             	push   0x10(%ebp)
81001d3f:	ff 75 0c             	push   0xc(%ebp)
81001d42:	52                   	push   %edx
81001d43:	50                   	push   %eax
81001d44:	e8 c8 ff ff ff       	call   81001d11 <_fseek_r>
81001d49:	83 c4 10             	add    $0x10,%esp
81001d4c:	c9                   	leave  
81001d4d:	c3                   	ret    

81001d4e <_fseeko_r>:
81001d4e:	55                   	push   %ebp
81001d4f:	89 e5                	mov    %esp,%ebp
81001d51:	56                   	push   %esi
81001d52:	53                   	push   %ebx
81001d53:	83 ec 60             	sub    $0x60,%esp
81001d56:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001d59:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d60:	8b 45 08             	mov    0x8(%ebp),%eax
81001d63:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001d6a:	74 18                	je     81001d84 <_fseeko_r+0x36>
81001d6c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d6f:	8b 40 38             	mov    0x38(%eax),%eax
81001d72:	85 c0                	test   %eax,%eax
81001d74:	75 0e                	jne    81001d84 <_fseeko_r+0x36>
81001d76:	83 ec 0c             	sub    $0xc,%esp
81001d79:	ff 75 e4             	push   -0x1c(%ebp)
81001d7c:	e8 fe f7 ff ff       	call   8100157f <__sinit>
81001d81:	83 c4 10             	add    $0x10,%esp
81001d84:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d88:	98                   	cwtl   
81001d89:	25 00 01 00 00       	and    $0x100,%eax
81001d8e:	85 c0                	test   %eax,%eax
81001d90:	74 1b                	je     81001dad <_fseeko_r+0x5f>
81001d92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d96:	98                   	cwtl   
81001d97:	83 e0 08             	and    $0x8,%eax
81001d9a:	85 c0                	test   %eax,%eax
81001d9c:	74 0f                	je     81001dad <_fseeko_r+0x5f>
81001d9e:	83 ec 08             	sub    $0x8,%esp
81001da1:	53                   	push   %ebx
81001da2:	ff 75 08             	push   0x8(%ebp)
81001da5:	e8 d2 f2 ff ff       	call   8100107c <_fflush_r>
81001daa:	83 c4 10             	add    $0x10,%esp
81001dad:	8b 43 28             	mov    0x28(%ebx),%eax
81001db0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001db3:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001db7:	75 13                	jne    81001dcc <_fseeko_r+0x7e>
81001db9:	8b 45 08             	mov    0x8(%ebp),%eax
81001dbc:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001dc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dc7:	e9 2c 04 00 00       	jmp    810021f8 <_fseeko_r+0x4aa>
81001dcc:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001dd0:	0f 84 bc 00 00 00    	je     81001e92 <_fseeko_r+0x144>
81001dd6:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001dda:	0f 8f bb 00 00 00    	jg     81001e9b <_fseeko_r+0x14d>
81001de0:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001de4:	0f 84 a8 00 00 00    	je     81001e92 <_fseeko_r+0x144>
81001dea:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001dee:	0f 85 a7 00 00 00    	jne    81001e9b <_fseeko_r+0x14d>
81001df4:	83 ec 08             	sub    $0x8,%esp
81001df7:	53                   	push   %ebx
81001df8:	ff 75 08             	push   0x8(%ebp)
81001dfb:	e8 7c f2 ff ff       	call   8100107c <_fflush_r>
81001e00:	83 c4 10             	add    $0x10,%esp
81001e03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e07:	98                   	cwtl   
81001e08:	25 00 10 00 00       	and    $0x1000,%eax
81001e0d:	85 c0                	test   %eax,%eax
81001e0f:	74 08                	je     81001e19 <_fseeko_r+0xcb>
81001e11:	8b 43 50             	mov    0x50(%ebx),%eax
81001e14:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e17:	eb 26                	jmp    81001e3f <_fseeko_r+0xf1>
81001e19:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001e1c:	6a 01                	push   $0x1
81001e1e:	6a 00                	push   $0x0
81001e20:	50                   	push   %eax
81001e21:	ff 75 08             	push   0x8(%ebp)
81001e24:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e27:	ff d0                	call   *%eax
81001e29:	83 c4 10             	add    $0x10,%esp
81001e2c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e2f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001e33:	75 0a                	jne    81001e3f <_fseeko_r+0xf1>
81001e35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e3a:	e9 b9 03 00 00       	jmp    810021f8 <_fseeko_r+0x4aa>
81001e3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e43:	98                   	cwtl   
81001e44:	83 e0 04             	and    $0x4,%eax
81001e47:	85 c0                	test   %eax,%eax
81001e49:	74 15                	je     81001e60 <_fseeko_r+0x112>
81001e4b:	8b 43 04             	mov    0x4(%ebx),%eax
81001e4e:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e51:	8b 43 30             	mov    0x30(%ebx),%eax
81001e54:	85 c0                	test   %eax,%eax
81001e56:	74 24                	je     81001e7c <_fseeko_r+0x12e>
81001e58:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001e5b:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e5e:	eb 1c                	jmp    81001e7c <_fseeko_r+0x12e>
81001e60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e64:	98                   	cwtl   
81001e65:	83 e0 08             	and    $0x8,%eax
81001e68:	85 c0                	test   %eax,%eax
81001e6a:	74 10                	je     81001e7c <_fseeko_r+0x12e>
81001e6c:	8b 03                	mov    (%ebx),%eax
81001e6e:	85 c0                	test   %eax,%eax
81001e70:	74 0a                	je     81001e7c <_fseeko_r+0x12e>
81001e72:	8b 03                	mov    (%ebx),%eax
81001e74:	8b 53 10             	mov    0x10(%ebx),%edx
81001e77:	29 d0                	sub    %edx,%eax
81001e79:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e7f:	01 45 10             	add    %eax,0x10(%ebp)
81001e82:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001e89:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001e90:	eb 1c                	jmp    81001eae <_fseeko_r+0x160>
81001e92:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001e99:	eb 13                	jmp    81001eae <_fseeko_r+0x160>
81001e9b:	8b 45 08             	mov    0x8(%ebp),%eax
81001e9e:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001ea4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ea9:	e9 4a 03 00 00       	jmp    810021f8 <_fseeko_r+0x4aa>
81001eae:	8b 43 10             	mov    0x10(%ebx),%eax
81001eb1:	85 c0                	test   %eax,%eax
81001eb3:	75 0f                	jne    81001ec4 <_fseeko_r+0x176>
81001eb5:	83 ec 08             	sub    $0x8,%esp
81001eb8:	53                   	push   %ebx
81001eb9:	ff 75 08             	push   0x8(%ebp)
81001ebc:	e8 8b 13 00 00       	call   8100324c <__smakebuf_r>
81001ec1:	83 c4 10             	add    $0x10,%esp
81001ec4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ec8:	98                   	cwtl   
81001ec9:	25 1a 08 00 00       	and    $0x81a,%eax
81001ece:	85 c0                	test   %eax,%eax
81001ed0:	0f 85 7d 02 00 00    	jne    81002153 <_fseeko_r+0x405>
81001ed6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001eda:	98                   	cwtl   
81001edb:	25 00 04 00 00       	and    $0x400,%eax
81001ee0:	85 c0                	test   %eax,%eax
81001ee2:	75 5f                	jne    81001f43 <_fseeko_r+0x1f5>
81001ee4:	81 7d e0 27 54 00 81 	cmpl   $0x81005427,-0x20(%ebp)
81001eeb:	75 34                	jne    81001f21 <_fseeko_r+0x1d3>
81001eed:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001ef1:	66 85 c0             	test   %ax,%ax
81001ef4:	78 2b                	js     81001f21 <_fseeko_r+0x1d3>
81001ef6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001efa:	98                   	cwtl   
81001efb:	83 ec 04             	sub    $0x4,%esp
81001efe:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f01:	52                   	push   %edx
81001f02:	50                   	push   %eax
81001f03:	ff 75 08             	push   0x8(%ebp)
81001f06:	e8 14 03 00 00       	call   8100221f <_fstat_r>
81001f0b:	83 c4 10             	add    $0x10,%esp
81001f0e:	85 c0                	test   %eax,%eax
81001f10:	75 0f                	jne    81001f21 <_fseeko_r+0x1d3>
81001f12:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001f15:	25 00 f0 00 00       	and    $0xf000,%eax
81001f1a:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001f1f:	74 10                	je     81001f31 <_fseeko_r+0x1e3>
81001f21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f25:	80 cc 08             	or     $0x8,%ah
81001f28:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f2c:	e9 2f 02 00 00       	jmp    81002160 <_fseeko_r+0x412>
81001f31:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001f38:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f3c:	80 cc 04             	or     $0x4,%ah
81001f3f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f43:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001f47:	75 08                	jne    81001f51 <_fseeko_r+0x203>
81001f49:	8b 45 10             	mov    0x10(%ebp),%eax
81001f4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f4f:	eb 2b                	jmp    81001f7c <_fseeko_r+0x22e>
81001f51:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f55:	98                   	cwtl   
81001f56:	83 ec 04             	sub    $0x4,%esp
81001f59:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f5c:	52                   	push   %edx
81001f5d:	50                   	push   %eax
81001f5e:	ff 75 08             	push   0x8(%ebp)
81001f61:	e8 b9 02 00 00       	call   8100221f <_fstat_r>
81001f66:	83 c4 10             	add    $0x10,%esp
81001f69:	85 c0                	test   %eax,%eax
81001f6b:	0f 85 e5 01 00 00    	jne    81002156 <_fseeko_r+0x408>
81001f71:	8b 55 a8             	mov    -0x58(%ebp),%edx
81001f74:	8b 45 10             	mov    0x10(%ebp),%eax
81001f77:	01 d0                	add    %edx,%eax
81001f79:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f7c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f80:	75 49                	jne    81001fcb <_fseeko_r+0x27d>
81001f82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f86:	98                   	cwtl   
81001f87:	25 00 10 00 00       	and    $0x1000,%eax
81001f8c:	85 c0                	test   %eax,%eax
81001f8e:	74 08                	je     81001f98 <_fseeko_r+0x24a>
81001f90:	8b 43 50             	mov    0x50(%ebx),%eax
81001f93:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f96:	eb 20                	jmp    81001fb8 <_fseeko_r+0x26a>
81001f98:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001f9b:	6a 01                	push   $0x1
81001f9d:	6a 00                	push   $0x0
81001f9f:	50                   	push   %eax
81001fa0:	ff 75 08             	push   0x8(%ebp)
81001fa3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fa6:	ff d0                	call   *%eax
81001fa8:	83 c4 10             	add    $0x10,%esp
81001fab:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fae:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001fb2:	0f 84 a1 01 00 00    	je     81002159 <_fseeko_r+0x40b>
81001fb8:	8b 43 04             	mov    0x4(%ebx),%eax
81001fbb:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fbe:	8b 43 30             	mov    0x30(%ebx),%eax
81001fc1:	85 c0                	test   %eax,%eax
81001fc3:	74 06                	je     81001fcb <_fseeko_r+0x27d>
81001fc5:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fc8:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001fcb:	8b 43 30             	mov    0x30(%ebx),%eax
81001fce:	85 c0                	test   %eax,%eax
81001fd0:	74 22                	je     81001ff4 <_fseeko_r+0x2a6>
81001fd2:	8b 43 04             	mov    0x4(%ebx),%eax
81001fd5:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fd8:	8b 43 38             	mov    0x38(%ebx),%eax
81001fdb:	8b 53 10             	mov    0x10(%ebx),%edx
81001fde:	29 d0                	sub    %edx,%eax
81001fe0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fe3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fe6:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fe9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fec:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fef:	01 45 ec             	add    %eax,-0x14(%ebp)
81001ff2:	eb 19                	jmp    8100200d <_fseeko_r+0x2bf>
81001ff4:	8b 03                	mov    (%ebx),%eax
81001ff6:	8b 53 10             	mov    0x10(%ebx),%edx
81001ff9:	29 d0                	sub    %edx,%eax
81001ffb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ffe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002001:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002004:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002007:	8b 43 04             	mov    0x4(%ebx),%eax
8100200a:	01 45 ec             	add    %eax,-0x14(%ebp)
8100200d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002010:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002013:	7c 7c                	jl     81002091 <_fseeko_r+0x343>
81002015:	8b 55 f0             	mov    -0x10(%ebp),%edx
81002018:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100201b:	01 c2                	add    %eax,%edx
8100201d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002020:	39 c2                	cmp    %eax,%edx
81002022:	76 6d                	jbe    81002091 <_fseeko_r+0x343>
81002024:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002027:	2b 45 f0             	sub    -0x10(%ebp),%eax
8100202a:	89 c6                	mov    %eax,%esi
8100202c:	8b 43 10             	mov    0x10(%ebx),%eax
8100202f:	89 f2                	mov    %esi,%edx
81002031:	01 d0                	add    %edx,%eax
81002033:	89 03                	mov    %eax,(%ebx)
81002035:	89 f2                	mov    %esi,%edx
81002037:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100203a:	29 d0                	sub    %edx,%eax
8100203c:	89 43 04             	mov    %eax,0x4(%ebx)
8100203f:	8b 43 30             	mov    0x30(%ebx),%eax
81002042:	85 c0                	test   %eax,%eax
81002044:	74 23                	je     81002069 <_fseeko_r+0x31b>
81002046:	8b 53 30             	mov    0x30(%ebx),%edx
81002049:	8d 43 40             	lea    0x40(%ebx),%eax
8100204c:	39 c2                	cmp    %eax,%edx
8100204e:	74 12                	je     81002062 <_fseeko_r+0x314>
81002050:	8b 43 30             	mov    0x30(%ebx),%eax
81002053:	83 ec 08             	sub    $0x8,%esp
81002056:	50                   	push   %eax
81002057:	ff 75 08             	push   0x8(%ebp)
8100205a:	e8 76 f7 ff ff       	call   810017d5 <_free_r>
8100205f:	83 c4 10             	add    $0x10,%esp
81002062:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002069:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100206d:	83 e0 df             	and    $0xffffffdf,%eax
81002070:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002074:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002077:	83 ec 04             	sub    $0x4,%esp
8100207a:	6a 08                	push   $0x8
8100207c:	6a 00                	push   $0x0
8100207e:	50                   	push   %eax
8100207f:	e8 6c 1f 00 00       	call   81003ff0 <memset>
81002084:	83 c4 10             	add    $0x10,%esp
81002087:	b8 00 00 00 00       	mov    $0x0,%eax
8100208c:	e9 67 01 00 00       	jmp    810021f8 <_fseeko_r+0x4aa>
81002091:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002094:	f7 d8                	neg    %eax
81002096:	23 45 f4             	and    -0xc(%ebp),%eax
81002099:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100209c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100209f:	6a 00                	push   $0x0
810020a1:	ff 75 f0             	push   -0x10(%ebp)
810020a4:	50                   	push   %eax
810020a5:	ff 75 08             	push   0x8(%ebp)
810020a8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810020ab:	ff d0                	call   *%eax
810020ad:	83 c4 10             	add    $0x10,%esp
810020b0:	83 f8 ff             	cmp    $0xffffffff,%eax
810020b3:	0f 84 a3 00 00 00    	je     8100215c <_fseeko_r+0x40e>
810020b9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810020c0:	8b 43 10             	mov    0x10(%ebx),%eax
810020c3:	89 03                	mov    %eax,(%ebx)
810020c5:	8b 43 30             	mov    0x30(%ebx),%eax
810020c8:	85 c0                	test   %eax,%eax
810020ca:	74 23                	je     810020ef <_fseeko_r+0x3a1>
810020cc:	8b 53 30             	mov    0x30(%ebx),%edx
810020cf:	8d 43 40             	lea    0x40(%ebx),%eax
810020d2:	39 c2                	cmp    %eax,%edx
810020d4:	74 12                	je     810020e8 <_fseeko_r+0x39a>
810020d6:	8b 43 30             	mov    0x30(%ebx),%eax
810020d9:	83 ec 08             	sub    $0x8,%esp
810020dc:	50                   	push   %eax
810020dd:	ff 75 08             	push   0x8(%ebp)
810020e0:	e8 f0 f6 ff ff       	call   810017d5 <_free_r>
810020e5:	83 c4 10             	add    $0x10,%esp
810020e8:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810020ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020f3:	83 e0 df             	and    $0xffffffdf,%eax
810020f6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810020fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020fd:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002100:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002103:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002107:	74 2d                	je     81002136 <_fseeko_r+0x3e8>
81002109:	83 ec 08             	sub    $0x8,%esp
8100210c:	53                   	push   %ebx
8100210d:	ff 75 08             	push   0x8(%ebp)
81002110:	e8 1c 2e 00 00       	call   81004f31 <__srefill_r>
81002115:	83 c4 10             	add    $0x10,%esp
81002118:	85 c0                	test   %eax,%eax
8100211a:	75 43                	jne    8100215f <_fseeko_r+0x411>
8100211c:	8b 43 04             	mov    0x4(%ebx),%eax
8100211f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002122:	77 3b                	ja     8100215f <_fseeko_r+0x411>
81002124:	8b 13                	mov    (%ebx),%edx
81002126:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002129:	01 d0                	add    %edx,%eax
8100212b:	89 03                	mov    %eax,(%ebx)
8100212d:	8b 43 04             	mov    0x4(%ebx),%eax
81002130:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002133:	89 43 04             	mov    %eax,0x4(%ebx)
81002136:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002139:	83 ec 04             	sub    $0x4,%esp
8100213c:	6a 08                	push   $0x8
8100213e:	6a 00                	push   $0x0
81002140:	50                   	push   %eax
81002141:	e8 aa 1e 00 00       	call   81003ff0 <memset>
81002146:	83 c4 10             	add    $0x10,%esp
81002149:	b8 00 00 00 00       	mov    $0x0,%eax
8100214e:	e9 a5 00 00 00       	jmp    810021f8 <_fseeko_r+0x4aa>
81002153:	90                   	nop
81002154:	eb 0a                	jmp    81002160 <_fseeko_r+0x412>
81002156:	90                   	nop
81002157:	eb 07                	jmp    81002160 <_fseeko_r+0x412>
81002159:	90                   	nop
8100215a:	eb 04                	jmp    81002160 <_fseeko_r+0x412>
8100215c:	90                   	nop
8100215d:	eb 01                	jmp    81002160 <_fseeko_r+0x412>
8100215f:	90                   	nop
81002160:	83 ec 08             	sub    $0x8,%esp
81002163:	53                   	push   %ebx
81002164:	ff 75 08             	push   0x8(%ebp)
81002167:	e8 10 ef ff ff       	call   8100107c <_fflush_r>
8100216c:	83 c4 10             	add    $0x10,%esp
8100216f:	85 c0                	test   %eax,%eax
81002171:	75 1a                	jne    8100218d <_fseeko_r+0x43f>
81002173:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002176:	ff 75 14             	push   0x14(%ebp)
81002179:	ff 75 10             	push   0x10(%ebp)
8100217c:	50                   	push   %eax
8100217d:	ff 75 08             	push   0x8(%ebp)
81002180:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002183:	ff d0                	call   *%eax
81002185:	83 c4 10             	add    $0x10,%esp
81002188:	83 f8 ff             	cmp    $0xffffffff,%eax
8100218b:	75 07                	jne    81002194 <_fseeko_r+0x446>
8100218d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002192:	eb 64                	jmp    810021f8 <_fseeko_r+0x4aa>
81002194:	8b 43 30             	mov    0x30(%ebx),%eax
81002197:	85 c0                	test   %eax,%eax
81002199:	74 23                	je     810021be <_fseeko_r+0x470>
8100219b:	8b 53 30             	mov    0x30(%ebx),%edx
8100219e:	8d 43 40             	lea    0x40(%ebx),%eax
810021a1:	39 c2                	cmp    %eax,%edx
810021a3:	74 12                	je     810021b7 <_fseeko_r+0x469>
810021a5:	8b 43 30             	mov    0x30(%ebx),%eax
810021a8:	83 ec 08             	sub    $0x8,%esp
810021ab:	50                   	push   %eax
810021ac:	ff 75 08             	push   0x8(%ebp)
810021af:	e8 21 f6 ff ff       	call   810017d5 <_free_r>
810021b4:	83 c4 10             	add    $0x10,%esp
810021b7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810021be:	8b 43 10             	mov    0x10(%ebx),%eax
810021c1:	89 03                	mov    %eax,(%ebx)
810021c3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810021ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021ce:	83 e0 df             	and    $0xffffffdf,%eax
810021d1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021d9:	80 e4 f7             	and    $0xf7,%ah
810021dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021e0:	8d 43 5c             	lea    0x5c(%ebx),%eax
810021e3:	83 ec 04             	sub    $0x4,%esp
810021e6:	6a 08                	push   $0x8
810021e8:	6a 00                	push   $0x0
810021ea:	50                   	push   %eax
810021eb:	e8 00 1e 00 00       	call   81003ff0 <memset>
810021f0:	83 c4 10             	add    $0x10,%esp
810021f3:	b8 00 00 00 00       	mov    $0x0,%eax
810021f8:	8d 65 f8             	lea    -0x8(%ebp),%esp
810021fb:	5b                   	pop    %ebx
810021fc:	5e                   	pop    %esi
810021fd:	5d                   	pop    %ebp
810021fe:	c3                   	ret    

810021ff <fseeko>:
810021ff:	55                   	push   %ebp
81002200:	89 e5                	mov    %esp,%ebp
81002202:	83 ec 08             	sub    $0x8,%esp
81002205:	8b 55 08             	mov    0x8(%ebp),%edx
81002208:	a1 84 83 00 81       	mov    0x81008384,%eax
8100220d:	ff 75 10             	push   0x10(%ebp)
81002210:	ff 75 0c             	push   0xc(%ebp)
81002213:	52                   	push   %edx
81002214:	50                   	push   %eax
81002215:	e8 34 fb ff ff       	call   81001d4e <_fseeko_r>
8100221a:	83 c4 10             	add    $0x10,%esp
8100221d:	c9                   	leave  
8100221e:	c3                   	ret    

8100221f <_fstat_r>:
8100221f:	55                   	push   %ebp
81002220:	89 e5                	mov    %esp,%ebp
81002222:	83 ec 18             	sub    $0x18,%esp
81002225:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
8100222c:	00 00 00 
8100222f:	83 ec 08             	sub    $0x8,%esp
81002232:	ff 75 10             	push   0x10(%ebp)
81002235:	ff 75 0c             	push   0xc(%ebp)
81002238:	e8 bb e8 ff ff       	call   81000af8 <fstat>
8100223d:	83 c4 10             	add    $0x10,%esp
81002240:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002243:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002247:	75 14                	jne    8100225d <_fstat_r+0x3e>
81002249:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
8100224e:	85 c0                	test   %eax,%eax
81002250:	74 0b                	je     8100225d <_fstat_r+0x3e>
81002252:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81002258:	8b 45 08             	mov    0x8(%ebp),%eax
8100225b:	89 10                	mov    %edx,(%eax)
8100225d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002260:	c9                   	leave  
81002261:	c3                   	ret    

81002262 <_fwalk>:
81002262:	55                   	push   %ebp
81002263:	89 e5                	mov    %esp,%ebp
81002265:	57                   	push   %edi
81002266:	56                   	push   %esi
81002267:	53                   	push   %ebx
81002268:	83 ec 1c             	sub    $0x1c,%esp
8100226b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002272:	8b 45 08             	mov    0x8(%ebp),%eax
81002275:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100227b:	eb 3e                	jmp    810022bb <_fwalk+0x59>
8100227d:	8b 5e 08             	mov    0x8(%esi),%ebx
81002280:	8b 7e 04             	mov    0x4(%esi),%edi
81002283:	eb 2d                	jmp    810022b2 <_fwalk+0x50>
81002285:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002289:	66 85 c0             	test   %ax,%ax
8100228c:	74 21                	je     810022af <_fwalk+0x4d>
8100228e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002292:	66 83 f8 01          	cmp    $0x1,%ax
81002296:	74 17                	je     810022af <_fwalk+0x4d>
81002298:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100229c:	66 83 f8 ff          	cmp    $0xffff,%ax
810022a0:	74 0d                	je     810022af <_fwalk+0x4d>
810022a2:	83 ec 0c             	sub    $0xc,%esp
810022a5:	53                   	push   %ebx
810022a6:	ff 55 0c             	call   *0xc(%ebp)
810022a9:	83 c4 10             	add    $0x10,%esp
810022ac:	09 45 e4             	or     %eax,-0x1c(%ebp)
810022af:	83 c3 68             	add    $0x68,%ebx
810022b2:	83 ef 01             	sub    $0x1,%edi
810022b5:	85 ff                	test   %edi,%edi
810022b7:	79 cc                	jns    81002285 <_fwalk+0x23>
810022b9:	8b 36                	mov    (%esi),%esi
810022bb:	85 f6                	test   %esi,%esi
810022bd:	75 be                	jne    8100227d <_fwalk+0x1b>
810022bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810022c2:	8d 65 f4             	lea    -0xc(%ebp),%esp
810022c5:	5b                   	pop    %ebx
810022c6:	5e                   	pop    %esi
810022c7:	5f                   	pop    %edi
810022c8:	5d                   	pop    %ebp
810022c9:	c3                   	ret    

810022ca <_fwalk_reent>:
810022ca:	55                   	push   %ebp
810022cb:	89 e5                	mov    %esp,%ebp
810022cd:	57                   	push   %edi
810022ce:	56                   	push   %esi
810022cf:	53                   	push   %ebx
810022d0:	83 ec 1c             	sub    $0x1c,%esp
810022d3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810022da:	8b 45 08             	mov    0x8(%ebp),%eax
810022dd:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810022e3:	eb 41                	jmp    81002326 <_fwalk_reent+0x5c>
810022e5:	8b 5e 08             	mov    0x8(%esi),%ebx
810022e8:	8b 7e 04             	mov    0x4(%esi),%edi
810022eb:	eb 30                	jmp    8100231d <_fwalk_reent+0x53>
810022ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022f1:	66 85 c0             	test   %ax,%ax
810022f4:	74 24                	je     8100231a <_fwalk_reent+0x50>
810022f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022fa:	66 83 f8 01          	cmp    $0x1,%ax
810022fe:	74 1a                	je     8100231a <_fwalk_reent+0x50>
81002300:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002304:	66 83 f8 ff          	cmp    $0xffff,%ax
81002308:	74 10                	je     8100231a <_fwalk_reent+0x50>
8100230a:	83 ec 08             	sub    $0x8,%esp
8100230d:	53                   	push   %ebx
8100230e:	ff 75 08             	push   0x8(%ebp)
81002311:	ff 55 0c             	call   *0xc(%ebp)
81002314:	83 c4 10             	add    $0x10,%esp
81002317:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100231a:	83 c3 68             	add    $0x68,%ebx
8100231d:	83 ef 01             	sub    $0x1,%edi
81002320:	85 ff                	test   %edi,%edi
81002322:	79 c9                	jns    810022ed <_fwalk_reent+0x23>
81002324:	8b 36                	mov    (%esi),%esi
81002326:	85 f6                	test   %esi,%esi
81002328:	75 bb                	jne    810022e5 <_fwalk_reent+0x1b>
8100232a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100232d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002330:	5b                   	pop    %ebx
81002331:	5e                   	pop    %esi
81002332:	5f                   	pop    %edi
81002333:	5d                   	pop    %ebp
81002334:	c3                   	ret    

81002335 <_fwrite_r>:
81002335:	55                   	push   %ebp
81002336:	89 e5                	mov    %esp,%ebp
81002338:	83 ec 28             	sub    $0x28,%esp
8100233b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100233e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002341:	8b 45 14             	mov    0x14(%ebp),%eax
81002344:	0f af 45 10          	imul   0x10(%ebp),%eax
81002348:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100234b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100234e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002351:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002354:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002357:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100235a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100235d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002364:	8b 45 08             	mov    0x8(%ebp),%eax
81002367:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100236a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100236e:	74 18                	je     81002388 <_fwrite_r+0x53>
81002370:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002373:	8b 40 38             	mov    0x38(%eax),%eax
81002376:	85 c0                	test   %eax,%eax
81002378:	75 0e                	jne    81002388 <_fwrite_r+0x53>
8100237a:	83 ec 0c             	sub    $0xc,%esp
8100237d:	ff 75 f0             	push   -0x10(%ebp)
81002380:	e8 fa f1 ff ff       	call   8100157f <__sinit>
81002385:	83 c4 10             	add    $0x10,%esp
81002388:	8b 45 18             	mov    0x18(%ebp),%eax
8100238b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100238f:	98                   	cwtl   
81002390:	25 00 20 00 00       	and    $0x2000,%eax
81002395:	85 c0                	test   %eax,%eax
81002397:	75 24                	jne    810023bd <_fwrite_r+0x88>
81002399:	8b 45 18             	mov    0x18(%ebp),%eax
8100239c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810023a0:	80 cc 20             	or     $0x20,%ah
810023a3:	89 c2                	mov    %eax,%edx
810023a5:	8b 45 18             	mov    0x18(%ebp),%eax
810023a8:	66 89 50 0c          	mov    %dx,0xc(%eax)
810023ac:	8b 45 18             	mov    0x18(%ebp),%eax
810023af:	8b 40 64             	mov    0x64(%eax),%eax
810023b2:	80 e4 df             	and    $0xdf,%ah
810023b5:	89 c2                	mov    %eax,%edx
810023b7:	8b 45 18             	mov    0x18(%ebp),%eax
810023ba:	89 50 64             	mov    %edx,0x64(%eax)
810023bd:	83 ec 04             	sub    $0x4,%esp
810023c0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810023c3:	50                   	push   %eax
810023c4:	ff 75 18             	push   0x18(%ebp)
810023c7:	ff 75 08             	push   0x8(%ebp)
810023ca:	e8 5b 3e 00 00       	call   8100622a <__sfvwrite_r>
810023cf:	83 c4 10             	add    $0x10,%esp
810023d2:	85 c0                	test   %eax,%eax
810023d4:	75 05                	jne    810023db <_fwrite_r+0xa6>
810023d6:	8b 45 14             	mov    0x14(%ebp),%eax
810023d9:	eb 10                	jmp    810023eb <_fwrite_r+0xb6>
810023db:	8b 55 ec             	mov    -0x14(%ebp),%edx
810023de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023e1:	29 d0                	sub    %edx,%eax
810023e3:	ba 00 00 00 00       	mov    $0x0,%edx
810023e8:	f7 75 10             	divl   0x10(%ebp)
810023eb:	c9                   	leave  
810023ec:	c3                   	ret    

810023ed <fwrite>:
810023ed:	55                   	push   %ebp
810023ee:	89 e5                	mov    %esp,%ebp
810023f0:	83 ec 08             	sub    $0x8,%esp
810023f3:	a1 84 83 00 81       	mov    0x81008384,%eax
810023f8:	83 ec 0c             	sub    $0xc,%esp
810023fb:	ff 75 14             	push   0x14(%ebp)
810023fe:	ff 75 10             	push   0x10(%ebp)
81002401:	ff 75 0c             	push   0xc(%ebp)
81002404:	ff 75 08             	push   0x8(%ebp)
81002407:	50                   	push   %eax
81002408:	e8 28 ff ff ff       	call   81002335 <_fwrite_r>
8100240d:	83 c4 20             	add    $0x20,%esp
81002410:	c9                   	leave  
81002411:	c3                   	ret    

81002412 <_getchar_r>:
81002412:	55                   	push   %ebp
81002413:	89 e5                	mov    %esp,%ebp
81002415:	83 ec 08             	sub    $0x8,%esp
81002418:	8b 45 08             	mov    0x8(%ebp),%eax
8100241b:	8b 40 04             	mov    0x4(%eax),%eax
8100241e:	83 ec 08             	sub    $0x8,%esp
81002421:	50                   	push   %eax
81002422:	ff 75 08             	push   0x8(%ebp)
81002425:	e8 9e 42 00 00       	call   810066c8 <_getc_r>
8100242a:	83 c4 10             	add    $0x10,%esp
8100242d:	c9                   	leave  
8100242e:	c3                   	ret    

8100242f <getchar>:
8100242f:	55                   	push   %ebp
81002430:	89 e5                	mov    %esp,%ebp
81002432:	83 ec 18             	sub    $0x18,%esp
81002435:	a1 84 83 00 81       	mov    0x81008384,%eax
8100243a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100243d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002440:	8b 40 04             	mov    0x4(%eax),%eax
81002443:	83 ec 08             	sub    $0x8,%esp
81002446:	50                   	push   %eax
81002447:	ff 75 f4             	push   -0xc(%ebp)
8100244a:	e8 79 42 00 00       	call   810066c8 <_getc_r>
8100244f:	83 c4 10             	add    $0x10,%esp
81002452:	c9                   	leave  
81002453:	c3                   	ret    

81002454 <reverse_argv_elements>:
81002454:	55                   	push   %ebp
81002455:	89 e5                	mov    %esp,%ebp
81002457:	83 ec 10             	sub    $0x10,%esp
8100245a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002461:	eb 5e                	jmp    810024c1 <reverse_argv_elements+0x6d>
81002463:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002466:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100246d:	8b 45 08             	mov    0x8(%ebp),%eax
81002470:	01 d0                	add    %edx,%eax
81002472:	8b 00                	mov    (%eax),%eax
81002474:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002477:	8b 45 0c             	mov    0xc(%ebp),%eax
8100247a:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100247d:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002482:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002489:	8b 45 08             	mov    0x8(%ebp),%eax
8100248c:	01 d0                	add    %edx,%eax
8100248e:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002491:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002498:	8b 55 08             	mov    0x8(%ebp),%edx
8100249b:	01 ca                	add    %ecx,%edx
8100249d:	8b 00                	mov    (%eax),%eax
8100249f:	89 02                	mov    %eax,(%edx)
810024a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810024a4:	2b 45 fc             	sub    -0x4(%ebp),%eax
810024a7:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810024ac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810024b3:	8b 45 08             	mov    0x8(%ebp),%eax
810024b6:	01 c2                	add    %eax,%edx
810024b8:	8b 45 f8             	mov    -0x8(%ebp),%eax
810024bb:	89 02                	mov    %eax,(%edx)
810024bd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810024c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810024c4:	d1 f8                	sar    %eax
810024c6:	39 45 fc             	cmp    %eax,-0x4(%ebp)
810024c9:	7c 98                	jl     81002463 <reverse_argv_elements+0xf>
810024cb:	90                   	nop
810024cc:	90                   	nop
810024cd:	c9                   	leave  
810024ce:	c3                   	ret    

810024cf <permute>:
810024cf:	55                   	push   %ebp
810024d0:	89 e5                	mov    %esp,%ebp
810024d2:	ff 75 0c             	push   0xc(%ebp)
810024d5:	ff 75 08             	push   0x8(%ebp)
810024d8:	e8 77 ff ff ff       	call   81002454 <reverse_argv_elements>
810024dd:	83 c4 08             	add    $0x8,%esp
810024e0:	8b 55 0c             	mov    0xc(%ebp),%edx
810024e3:	8b 45 10             	mov    0x10(%ebp),%eax
810024e6:	01 d0                	add    %edx,%eax
810024e8:	50                   	push   %eax
810024e9:	ff 75 08             	push   0x8(%ebp)
810024ec:	e8 63 ff ff ff       	call   81002454 <reverse_argv_elements>
810024f1:	83 c4 08             	add    $0x8,%esp
810024f4:	ff 75 10             	push   0x10(%ebp)
810024f7:	ff 75 08             	push   0x8(%ebp)
810024fa:	e8 55 ff ff ff       	call   81002454 <reverse_argv_elements>
810024ff:	83 c4 08             	add    $0x8,%esp
81002502:	90                   	nop
81002503:	c9                   	leave  
81002504:	c3                   	ret    

81002505 <is_option>:
81002505:	55                   	push   %ebp
81002506:	89 e5                	mov    %esp,%ebp
81002508:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100250c:	74 1a                	je     81002528 <is_option+0x23>
8100250e:	8b 45 08             	mov    0x8(%ebp),%eax
81002511:	0f b6 00             	movzbl (%eax),%eax
81002514:	3c 2d                	cmp    $0x2d,%al
81002516:	74 10                	je     81002528 <is_option+0x23>
81002518:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100251c:	74 11                	je     8100252f <is_option+0x2a>
8100251e:	8b 45 08             	mov    0x8(%ebp),%eax
81002521:	0f b6 00             	movzbl (%eax),%eax
81002524:	3c 2b                	cmp    $0x2b,%al
81002526:	75 07                	jne    8100252f <is_option+0x2a>
81002528:	b8 01 00 00 00       	mov    $0x1,%eax
8100252d:	eb 05                	jmp    81002534 <is_option+0x2f>
8100252f:	b8 00 00 00 00       	mov    $0x0,%eax
81002534:	5d                   	pop    %ebp
81002535:	c3                   	ret    

81002536 <read_globals>:
81002536:	55                   	push   %ebp
81002537:	89 e5                	mov    %esp,%ebp
81002539:	8b 15 54 8f 00 81    	mov    0x81008f54,%edx
8100253f:	8b 45 08             	mov    0x8(%ebp),%eax
81002542:	89 10                	mov    %edx,(%eax)
81002544:	8b 15 58 8f 00 81    	mov    0x81008f58,%edx
8100254a:	8b 45 08             	mov    0x8(%ebp),%eax
8100254d:	89 50 04             	mov    %edx,0x4(%eax)
81002550:	8b 15 44 7f 00 81    	mov    0x81007f44,%edx
81002556:	8b 45 08             	mov    0x8(%ebp),%eax
81002559:	89 50 08             	mov    %edx,0x8(%eax)
8100255c:	8b 15 48 7f 00 81    	mov    0x81007f48,%edx
81002562:	8b 45 08             	mov    0x8(%ebp),%eax
81002565:	89 50 0c             	mov    %edx,0xc(%eax)
81002568:	8b 15 5c 8f 00 81    	mov    0x81008f5c,%edx
8100256e:	8b 45 08             	mov    0x8(%ebp),%eax
81002571:	89 50 10             	mov    %edx,0x10(%eax)
81002574:	8b 15 60 8f 00 81    	mov    0x81008f60,%edx
8100257a:	8b 45 08             	mov    0x8(%ebp),%eax
8100257d:	89 50 14             	mov    %edx,0x14(%eax)
81002580:	8b 15 64 8f 00 81    	mov    0x81008f64,%edx
81002586:	8b 45 08             	mov    0x8(%ebp),%eax
81002589:	89 50 18             	mov    %edx,0x18(%eax)
8100258c:	90                   	nop
8100258d:	5d                   	pop    %ebp
8100258e:	c3                   	ret    

8100258f <write_globals>:
8100258f:	55                   	push   %ebp
81002590:	89 e5                	mov    %esp,%ebp
81002592:	8b 45 08             	mov    0x8(%ebp),%eax
81002595:	8b 00                	mov    (%eax),%eax
81002597:	a3 54 8f 00 81       	mov    %eax,0x81008f54
8100259c:	8b 45 08             	mov    0x8(%ebp),%eax
8100259f:	8b 40 04             	mov    0x4(%eax),%eax
810025a2:	a3 58 8f 00 81       	mov    %eax,0x81008f58
810025a7:	8b 45 08             	mov    0x8(%ebp),%eax
810025aa:	8b 40 08             	mov    0x8(%eax),%eax
810025ad:	a3 44 7f 00 81       	mov    %eax,0x81007f44
810025b2:	8b 45 08             	mov    0x8(%ebp),%eax
810025b5:	8b 40 0c             	mov    0xc(%eax),%eax
810025b8:	a3 48 7f 00 81       	mov    %eax,0x81007f48
810025bd:	8b 45 08             	mov    0x8(%ebp),%eax
810025c0:	8b 40 10             	mov    0x10(%eax),%eax
810025c3:	a3 5c 8f 00 81       	mov    %eax,0x81008f5c
810025c8:	8b 45 08             	mov    0x8(%ebp),%eax
810025cb:	8b 40 14             	mov    0x14(%eax),%eax
810025ce:	a3 60 8f 00 81       	mov    %eax,0x81008f60
810025d3:	8b 45 08             	mov    0x8(%ebp),%eax
810025d6:	8b 40 18             	mov    0x18(%eax),%eax
810025d9:	a3 64 8f 00 81       	mov    %eax,0x81008f64
810025de:	90                   	nop
810025df:	5d                   	pop    %ebp
810025e0:	c3                   	ret    

810025e1 <getopt_internal>:
810025e1:	55                   	push   %ebp
810025e2:	89 e5                	mov    %esp,%ebp
810025e4:	53                   	push   %ebx
810025e5:	83 ec 34             	sub    $0x34,%esp
810025e8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810025ef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810025f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810025fd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002604:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100260b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002612:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002619:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002620:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002627:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100262b:	74 35                	je     81002662 <getopt_internal+0x81>
8100262d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002631:	74 2f                	je     81002662 <getopt_internal+0x81>
81002633:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002637:	75 06                	jne    8100263f <getopt_internal+0x5e>
81002639:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100263d:	74 23                	je     81002662 <getopt_internal+0x81>
8100263f:	8b 45 20             	mov    0x20(%ebp),%eax
81002642:	8b 40 04             	mov    0x4(%eax),%eax
81002645:	39 45 08             	cmp    %eax,0x8(%ebp)
81002648:	7e 18                	jle    81002662 <getopt_internal+0x81>
8100264a:	8b 45 20             	mov    0x20(%ebp),%eax
8100264d:	8b 40 04             	mov    0x4(%eax),%eax
81002650:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002657:	8b 45 0c             	mov    0xc(%ebp),%eax
8100265a:	01 d0                	add    %edx,%eax
8100265c:	8b 00                	mov    (%eax),%eax
8100265e:	85 c0                	test   %eax,%eax
81002660:	75 0a                	jne    8100266c <getopt_internal+0x8b>
81002662:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002667:	e9 85 0a 00 00       	jmp    810030f1 <getopt_internal+0xb10>
8100266c:	8b 45 20             	mov    0x20(%ebp),%eax
8100266f:	8b 40 04             	mov    0x4(%eax),%eax
81002672:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002679:	8b 45 0c             	mov    0xc(%ebp),%eax
8100267c:	01 d0                	add    %edx,%eax
8100267e:	8b 00                	mov    (%eax),%eax
81002680:	83 ec 08             	sub    $0x8,%esp
81002683:	68 50 7b 00 81       	push   $0x81007b50
81002688:	50                   	push   %eax
81002689:	e8 0e 2f 00 00       	call   8100559c <strcmp>
8100268e:	83 c4 10             	add    $0x10,%esp
81002691:	85 c0                	test   %eax,%eax
81002693:	75 19                	jne    810026ae <getopt_internal+0xcd>
81002695:	8b 45 20             	mov    0x20(%ebp),%eax
81002698:	8b 40 04             	mov    0x4(%eax),%eax
8100269b:	8d 50 01             	lea    0x1(%eax),%edx
8100269e:	8b 45 20             	mov    0x20(%ebp),%eax
810026a1:	89 50 04             	mov    %edx,0x4(%eax)
810026a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026a9:	e9 43 0a 00 00       	jmp    810030f1 <getopt_internal+0xb10>
810026ae:	8b 45 20             	mov    0x20(%ebp),%eax
810026b1:	8b 40 04             	mov    0x4(%eax),%eax
810026b4:	85 c0                	test   %eax,%eax
810026b6:	75 28                	jne    810026e0 <getopt_internal+0xff>
810026b8:	8b 45 20             	mov    0x20(%ebp),%eax
810026bb:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810026c2:	8b 45 20             	mov    0x20(%ebp),%eax
810026c5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810026cc:	8b 45 20             	mov    0x20(%ebp),%eax
810026cf:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810026d6:	8b 45 20             	mov    0x20(%ebp),%eax
810026d9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810026e0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810026e4:	74 33                	je     81002719 <getopt_internal+0x138>
810026e6:	8b 45 10             	mov    0x10(%ebp),%eax
810026e9:	0f b6 00             	movzbl (%eax),%eax
810026ec:	3c 2d                	cmp    $0x2d,%al
810026ee:	74 0a                	je     810026fa <getopt_internal+0x119>
810026f0:	8b 45 10             	mov    0x10(%ebp),%eax
810026f3:	0f b6 00             	movzbl (%eax),%eax
810026f6:	3c 2b                	cmp    $0x2b,%al
810026f8:	75 1f                	jne    81002719 <getopt_internal+0x138>
810026fa:	8b 45 10             	mov    0x10(%ebp),%eax
810026fd:	0f b6 00             	movzbl (%eax),%eax
81002700:	3c 2d                	cmp    $0x2d,%al
81002702:	75 07                	jne    8100270b <getopt_internal+0x12a>
81002704:	b8 01 00 00 00       	mov    $0x1,%eax
81002709:	eb 05                	jmp    81002710 <getopt_internal+0x12f>
8100270b:	b8 02 00 00 00       	mov    $0x2,%eax
81002710:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002713:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002717:	eb 23                	jmp    8100273c <getopt_internal+0x15b>
81002719:	83 ec 0c             	sub    $0xc,%esp
8100271c:	68 53 7b 00 81       	push   $0x81007b53
81002721:	e8 98 40 00 00       	call   810067be <getenv>
81002726:	83 c4 10             	add    $0x10,%esp
81002729:	85 c0                	test   %eax,%eax
8100272b:	74 07                	je     81002734 <getopt_internal+0x153>
8100272d:	b8 02 00 00 00       	mov    $0x2,%eax
81002732:	eb 05                	jmp    81002739 <getopt_internal+0x158>
81002734:	b8 00 00 00 00       	mov    $0x0,%eax
81002739:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100273c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002740:	74 15                	je     81002757 <getopt_internal+0x176>
81002742:	8b 45 10             	mov    0x10(%ebp),%eax
81002745:	0f b6 00             	movzbl (%eax),%eax
81002748:	3c 3a                	cmp    $0x3a,%al
8100274a:	75 0b                	jne    81002757 <getopt_internal+0x176>
8100274c:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002750:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002757:	8b 45 20             	mov    0x20(%ebp),%eax
8100275a:	8b 40 10             	mov    0x10(%eax),%eax
8100275d:	83 f8 01             	cmp    $0x1,%eax
81002760:	0f 85 a2 01 00 00    	jne    81002908 <getopt_internal+0x327>
81002766:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100276a:	0f 84 02 01 00 00    	je     81002872 <getopt_internal+0x291>
81002770:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002774:	0f 84 56 01 00 00    	je     810028d0 <getopt_internal+0x2ef>
8100277a:	8b 45 20             	mov    0x20(%ebp),%eax
8100277d:	8b 50 04             	mov    0x4(%eax),%edx
81002780:	8b 45 20             	mov    0x20(%ebp),%eax
81002783:	89 50 14             	mov    %edx,0x14(%eax)
81002786:	8b 45 20             	mov    0x20(%ebp),%eax
81002789:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002790:	eb 1e                	jmp    810027b0 <getopt_internal+0x1cf>
81002792:	8b 45 20             	mov    0x20(%ebp),%eax
81002795:	8b 40 04             	mov    0x4(%eax),%eax
81002798:	8d 50 01             	lea    0x1(%eax),%edx
8100279b:	8b 45 20             	mov    0x20(%ebp),%eax
8100279e:	89 50 04             	mov    %edx,0x4(%eax)
810027a1:	8b 45 20             	mov    0x20(%ebp),%eax
810027a4:	8b 40 18             	mov    0x18(%eax),%eax
810027a7:	8d 50 01             	lea    0x1(%eax),%edx
810027aa:	8b 45 20             	mov    0x20(%ebp),%eax
810027ad:	89 50 18             	mov    %edx,0x18(%eax)
810027b0:	8b 45 20             	mov    0x20(%ebp),%eax
810027b3:	8b 40 04             	mov    0x4(%eax),%eax
810027b6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810027bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810027c0:	01 d0                	add    %edx,%eax
810027c2:	8b 00                	mov    (%eax),%eax
810027c4:	83 ec 08             	sub    $0x8,%esp
810027c7:	ff 75 1c             	push   0x1c(%ebp)
810027ca:	50                   	push   %eax
810027cb:	e8 35 fd ff ff       	call   81002505 <is_option>
810027d0:	83 c4 10             	add    $0x10,%esp
810027d3:	85 c0                	test   %eax,%eax
810027d5:	74 bb                	je     81002792 <getopt_internal+0x1b1>
810027d7:	8b 45 20             	mov    0x20(%ebp),%eax
810027da:	8b 40 04             	mov    0x4(%eax),%eax
810027dd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810027e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810027e7:	01 d0                	add    %edx,%eax
810027e9:	8b 00                	mov    (%eax),%eax
810027eb:	85 c0                	test   %eax,%eax
810027ed:	75 16                	jne    81002805 <getopt_internal+0x224>
810027ef:	8b 45 20             	mov    0x20(%ebp),%eax
810027f2:	8b 50 14             	mov    0x14(%eax),%edx
810027f5:	8b 45 20             	mov    0x20(%ebp),%eax
810027f8:	89 50 04             	mov    %edx,0x4(%eax)
810027fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002800:	e9 ec 08 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002805:	8b 45 20             	mov    0x20(%ebp),%eax
81002808:	8b 40 04             	mov    0x4(%eax),%eax
8100280b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002812:	8b 45 0c             	mov    0xc(%ebp),%eax
81002815:	01 d0                	add    %edx,%eax
81002817:	8b 00                	mov    (%eax),%eax
81002819:	83 ec 08             	sub    $0x8,%esp
8100281c:	68 50 7b 00 81       	push   $0x81007b50
81002821:	50                   	push   %eax
81002822:	e8 75 2d 00 00       	call   8100559c <strcmp>
81002827:	83 c4 10             	add    $0x10,%esp
8100282a:	85 c0                	test   %eax,%eax
8100282c:	0f 85 cf 00 00 00    	jne    81002901 <getopt_internal+0x320>
81002832:	8b 45 20             	mov    0x20(%ebp),%eax
81002835:	8b 40 18             	mov    0x18(%eax),%eax
81002838:	8b 55 20             	mov    0x20(%ebp),%edx
8100283b:	8b 52 14             	mov    0x14(%edx),%edx
8100283e:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002845:	8b 55 0c             	mov    0xc(%ebp),%edx
81002848:	01 ca                	add    %ecx,%edx
8100284a:	83 ec 04             	sub    $0x4,%esp
8100284d:	6a 01                	push   $0x1
8100284f:	50                   	push   %eax
81002850:	52                   	push   %edx
81002851:	e8 79 fc ff ff       	call   810024cf <permute>
81002856:	83 c4 10             	add    $0x10,%esp
81002859:	8b 45 20             	mov    0x20(%ebp),%eax
8100285c:	8b 40 14             	mov    0x14(%eax),%eax
8100285f:	8d 50 01             	lea    0x1(%eax),%edx
81002862:	8b 45 20             	mov    0x20(%ebp),%eax
81002865:	89 50 04             	mov    %edx,0x4(%eax)
81002868:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100286d:	e9 7f 08 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002872:	8b 45 20             	mov    0x20(%ebp),%eax
81002875:	8b 40 04             	mov    0x4(%eax),%eax
81002878:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100287f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002882:	01 d0                	add    %edx,%eax
81002884:	8b 00                	mov    (%eax),%eax
81002886:	83 ec 08             	sub    $0x8,%esp
81002889:	ff 75 1c             	push   0x1c(%ebp)
8100288c:	50                   	push   %eax
8100288d:	e8 73 fc ff ff       	call   81002505 <is_option>
81002892:	83 c4 10             	add    $0x10,%esp
81002895:	85 c0                	test   %eax,%eax
81002897:	75 6b                	jne    81002904 <getopt_internal+0x323>
81002899:	8b 45 20             	mov    0x20(%ebp),%eax
8100289c:	8b 40 04             	mov    0x4(%eax),%eax
8100289f:	8d 48 01             	lea    0x1(%eax),%ecx
810028a2:	8b 55 20             	mov    0x20(%ebp),%edx
810028a5:	89 4a 04             	mov    %ecx,0x4(%edx)
810028a8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028af:	8b 45 0c             	mov    0xc(%ebp),%eax
810028b2:	01 d0                	add    %edx,%eax
810028b4:	8b 10                	mov    (%eax),%edx
810028b6:	8b 45 20             	mov    0x20(%ebp),%eax
810028b9:	89 10                	mov    %edx,(%eax)
810028bb:	8b 45 20             	mov    0x20(%ebp),%eax
810028be:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810028c5:	8b 45 20             	mov    0x20(%ebp),%eax
810028c8:	8b 40 0c             	mov    0xc(%eax),%eax
810028cb:	e9 21 08 00 00       	jmp    810030f1 <getopt_internal+0xb10>
810028d0:	8b 45 20             	mov    0x20(%ebp),%eax
810028d3:	8b 40 04             	mov    0x4(%eax),%eax
810028d6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810028e0:	01 d0                	add    %edx,%eax
810028e2:	8b 00                	mov    (%eax),%eax
810028e4:	83 ec 08             	sub    $0x8,%esp
810028e7:	ff 75 1c             	push   0x1c(%ebp)
810028ea:	50                   	push   %eax
810028eb:	e8 15 fc ff ff       	call   81002505 <is_option>
810028f0:	83 c4 10             	add    $0x10,%esp
810028f3:	85 c0                	test   %eax,%eax
810028f5:	75 10                	jne    81002907 <getopt_internal+0x326>
810028f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028fc:	e9 f0 07 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002901:	90                   	nop
81002902:	eb 04                	jmp    81002908 <getopt_internal+0x327>
81002904:	90                   	nop
81002905:	eb 01                	jmp    81002908 <getopt_internal+0x327>
81002907:	90                   	nop
81002908:	8b 45 20             	mov    0x20(%ebp),%eax
8100290b:	8b 40 04             	mov    0x4(%eax),%eax
8100290e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002915:	8b 45 0c             	mov    0xc(%ebp),%eax
81002918:	01 d0                	add    %edx,%eax
8100291a:	8b 00                	mov    (%eax),%eax
8100291c:	85 c0                	test   %eax,%eax
8100291e:	75 0a                	jne    8100292a <getopt_internal+0x349>
81002920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002925:	e9 c7 07 00 00       	jmp    810030f1 <getopt_internal+0xb10>
8100292a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100292e:	0f 84 15 03 00 00    	je     81002c49 <getopt_internal+0x668>
81002934:	8b 45 20             	mov    0x20(%ebp),%eax
81002937:	8b 40 04             	mov    0x4(%eax),%eax
8100293a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002941:	8b 45 0c             	mov    0xc(%ebp),%eax
81002944:	01 d0                	add    %edx,%eax
81002946:	8b 00                	mov    (%eax),%eax
81002948:	83 ec 04             	sub    $0x4,%esp
8100294b:	6a 02                	push   $0x2
8100294d:	68 50 7b 00 81       	push   $0x81007b50
81002952:	50                   	push   %eax
81002953:	e8 fd 15 00 00       	call   81003f55 <memcmp>
81002958:	83 c4 10             	add    $0x10,%esp
8100295b:	85 c0                	test   %eax,%eax
8100295d:	74 29                	je     81002988 <getopt_internal+0x3a7>
8100295f:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002963:	0f 84 e0 02 00 00    	je     81002c49 <getopt_internal+0x668>
81002969:	8b 45 20             	mov    0x20(%ebp),%eax
8100296c:	8b 40 04             	mov    0x4(%eax),%eax
8100296f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002976:	8b 45 0c             	mov    0xc(%ebp),%eax
81002979:	01 d0                	add    %edx,%eax
8100297b:	8b 00                	mov    (%eax),%eax
8100297d:	0f b6 00             	movzbl (%eax),%eax
81002980:	3c 2b                	cmp    $0x2b,%al
81002982:	0f 85 c1 02 00 00    	jne    81002c49 <getopt_internal+0x668>
81002988:	8b 45 20             	mov    0x20(%ebp),%eax
8100298b:	8b 40 10             	mov    0x10(%eax),%eax
8100298e:	83 f8 01             	cmp    $0x1,%eax
81002991:	0f 85 b2 02 00 00    	jne    81002c49 <getopt_internal+0x668>
81002997:	8b 45 20             	mov    0x20(%ebp),%eax
8100299a:	8b 40 04             	mov    0x4(%eax),%eax
8100299d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810029a7:	01 d0                	add    %edx,%eax
810029a9:	8b 00                	mov    (%eax),%eax
810029ab:	83 ec 04             	sub    $0x4,%esp
810029ae:	6a 02                	push   $0x2
810029b0:	68 50 7b 00 81       	push   $0x81007b50
810029b5:	50                   	push   %eax
810029b6:	e8 9a 15 00 00       	call   81003f55 <memcmp>
810029bb:	83 c4 10             	add    $0x10,%esp
810029be:	85 c0                	test   %eax,%eax
810029c0:	75 0a                	jne    810029cc <getopt_internal+0x3eb>
810029c2:	8b 45 20             	mov    0x20(%ebp),%eax
810029c5:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810029cc:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810029d3:	8b 45 20             	mov    0x20(%ebp),%eax
810029d6:	8b 40 04             	mov    0x4(%eax),%eax
810029d9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810029e3:	01 d0                	add    %edx,%eax
810029e5:	8b 10                	mov    (%eax),%edx
810029e7:	8b 45 20             	mov    0x20(%ebp),%eax
810029ea:	8b 40 10             	mov    0x10(%eax),%eax
810029ed:	01 d0                	add    %edx,%eax
810029ef:	83 ec 08             	sub    $0x8,%esp
810029f2:	6a 3d                	push   $0x3d
810029f4:	50                   	push   %eax
810029f5:	e8 a6 2a 00 00       	call   810054a0 <strchr>
810029fa:	83 c4 10             	add    $0x10,%esp
810029fd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a00:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002a04:	75 4a                	jne    81002a50 <getopt_internal+0x46f>
81002a06:	8b 45 20             	mov    0x20(%ebp),%eax
81002a09:	8b 40 04             	mov    0x4(%eax),%eax
81002a0c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a13:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a16:	01 d0                	add    %edx,%eax
81002a18:	8b 00                	mov    (%eax),%eax
81002a1a:	83 ec 0c             	sub    $0xc,%esp
81002a1d:	50                   	push   %eax
81002a1e:	e8 2d 2c 00 00       	call   81005650 <strlen>
81002a23:	83 c4 10             	add    $0x10,%esp
81002a26:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a29:	8b 45 20             	mov    0x20(%ebp),%eax
81002a2c:	8b 40 04             	mov    0x4(%eax),%eax
81002a2f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a36:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a39:	01 d0                	add    %edx,%eax
81002a3b:	8b 10                	mov    (%eax),%edx
81002a3d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a40:	01 d0                	add    %edx,%eax
81002a42:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002a45:	8b 45 20             	mov    0x20(%ebp),%eax
81002a48:	8b 40 10             	mov    0x10(%eax),%eax
81002a4b:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002a4e:	eb 28                	jmp    81002a78 <getopt_internal+0x497>
81002a50:	8b 45 20             	mov    0x20(%ebp),%eax
81002a53:	8b 40 04             	mov    0x4(%eax),%eax
81002a56:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a60:	01 d0                	add    %edx,%eax
81002a62:	8b 08                	mov    (%eax),%ecx
81002a64:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a67:	29 c8                	sub    %ecx,%eax
81002a69:	89 c2                	mov    %eax,%edx
81002a6b:	8b 45 20             	mov    0x20(%ebp),%eax
81002a6e:	8b 48 10             	mov    0x10(%eax),%ecx
81002a71:	89 d0                	mov    %edx,%eax
81002a73:	29 c8                	sub    %ecx,%eax
81002a75:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a78:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a7f:	e9 95 01 00 00       	jmp    81002c19 <getopt_internal+0x638>
81002a84:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a87:	c1 e0 04             	shl    $0x4,%eax
81002a8a:	89 c2                	mov    %eax,%edx
81002a8c:	8b 45 14             	mov    0x14(%ebp),%eax
81002a8f:	01 d0                	add    %edx,%eax
81002a91:	8b 00                	mov    (%eax),%eax
81002a93:	8b 55 20             	mov    0x20(%ebp),%edx
81002a96:	8b 52 04             	mov    0x4(%edx),%edx
81002a99:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002aa0:	8b 55 0c             	mov    0xc(%ebp),%edx
81002aa3:	01 ca                	add    %ecx,%edx
81002aa5:	8b 0a                	mov    (%edx),%ecx
81002aa7:	8b 55 20             	mov    0x20(%ebp),%edx
81002aaa:	8b 52 10             	mov    0x10(%edx),%edx
81002aad:	01 ca                	add    %ecx,%edx
81002aaf:	83 ec 04             	sub    $0x4,%esp
81002ab2:	ff 75 ec             	push   -0x14(%ebp)
81002ab5:	50                   	push   %eax
81002ab6:	52                   	push   %edx
81002ab7:	e8 99 14 00 00       	call   81003f55 <memcmp>
81002abc:	83 c4 10             	add    $0x10,%esp
81002abf:	85 c0                	test   %eax,%eax
81002ac1:	0f 85 4e 01 00 00    	jne    81002c15 <getopt_internal+0x634>
81002ac7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aca:	c1 e0 04             	shl    $0x4,%eax
81002acd:	89 c2                	mov    %eax,%edx
81002acf:	8b 45 14             	mov    0x14(%ebp),%eax
81002ad2:	01 d0                	add    %edx,%eax
81002ad4:	8b 00                	mov    (%eax),%eax
81002ad6:	83 ec 0c             	sub    $0xc,%esp
81002ad9:	50                   	push   %eax
81002ada:	e8 71 2b 00 00       	call   81005650 <strlen>
81002adf:	83 c4 10             	add    $0x10,%esp
81002ae2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002ae5:	75 0b                	jne    81002af2 <getopt_internal+0x511>
81002ae7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002aed:	e9 3e 01 00 00       	jmp    81002c30 <getopt_internal+0x64f>
81002af2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002af6:	79 0b                	jns    81002b03 <getopt_internal+0x522>
81002af8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002afb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002afe:	e9 12 01 00 00       	jmp    81002c15 <getopt_internal+0x634>
81002b03:	8b 45 20             	mov    0x20(%ebp),%eax
81002b06:	8b 40 08             	mov    0x8(%eax),%eax
81002b09:	85 c0                	test   %eax,%eax
81002b0b:	0f 84 ef 00 00 00    	je     81002c00 <getopt_internal+0x61f>
81002b11:	a1 84 83 00 81       	mov    0x81008384,%eax
81002b16:	8b 50 0c             	mov    0xc(%eax),%edx
81002b19:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b1c:	8b 00                	mov    (%eax),%eax
81002b1e:	83 ec 08             	sub    $0x8,%esp
81002b21:	52                   	push   %edx
81002b22:	50                   	push   %eax
81002b23:	e8 2e 35 00 00       	call   81006056 <fputs>
81002b28:	83 c4 10             	add    $0x10,%esp
81002b2b:	a1 84 83 00 81       	mov    0x81008384,%eax
81002b30:	8b 40 0c             	mov    0xc(%eax),%eax
81002b33:	83 ec 08             	sub    $0x8,%esp
81002b36:	50                   	push   %eax
81002b37:	68 63 7b 00 81       	push   $0x81007b63
81002b3c:	e8 15 35 00 00       	call   81006056 <fputs>
81002b41:	83 c4 10             	add    $0x10,%esp
81002b44:	a1 84 83 00 81       	mov    0x81008384,%eax
81002b49:	8b 50 0c             	mov    0xc(%eax),%edx
81002b4c:	8b 45 20             	mov    0x20(%ebp),%eax
81002b4f:	8b 40 04             	mov    0x4(%eax),%eax
81002b52:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002b59:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b5c:	01 c8                	add    %ecx,%eax
81002b5e:	8b 00                	mov    (%eax),%eax
81002b60:	83 ec 08             	sub    $0x8,%esp
81002b63:	52                   	push   %edx
81002b64:	50                   	push   %eax
81002b65:	e8 ec 34 00 00       	call   81006056 <fputs>
81002b6a:	83 c4 10             	add    $0x10,%esp
81002b6d:	a1 84 83 00 81       	mov    0x81008384,%eax
81002b72:	8b 40 0c             	mov    0xc(%eax),%eax
81002b75:	83 ec 08             	sub    $0x8,%esp
81002b78:	50                   	push   %eax
81002b79:	68 6e 7b 00 81       	push   $0x81007b6e
81002b7e:	e8 d3 34 00 00       	call   81006056 <fputs>
81002b83:	83 c4 10             	add    $0x10,%esp
81002b86:	a1 84 83 00 81       	mov    0x81008384,%eax
81002b8b:	8b 50 0c             	mov    0xc(%eax),%edx
81002b8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002b91:	c1 e0 04             	shl    $0x4,%eax
81002b94:	89 c1                	mov    %eax,%ecx
81002b96:	8b 45 14             	mov    0x14(%ebp),%eax
81002b99:	01 c8                	add    %ecx,%eax
81002b9b:	8b 00                	mov    (%eax),%eax
81002b9d:	83 ec 08             	sub    $0x8,%esp
81002ba0:	52                   	push   %edx
81002ba1:	50                   	push   %eax
81002ba2:	e8 af 34 00 00       	call   81006056 <fputs>
81002ba7:	83 c4 10             	add    $0x10,%esp
81002baa:	a1 84 83 00 81       	mov    0x81008384,%eax
81002baf:	8b 40 0c             	mov    0xc(%eax),%eax
81002bb2:	83 ec 08             	sub    $0x8,%esp
81002bb5:	50                   	push   %eax
81002bb6:	68 8b 7b 00 81       	push   $0x81007b8b
81002bbb:	e8 96 34 00 00       	call   81006056 <fputs>
81002bc0:	83 c4 10             	add    $0x10,%esp
81002bc3:	a1 84 83 00 81       	mov    0x81008384,%eax
81002bc8:	8b 50 0c             	mov    0xc(%eax),%edx
81002bcb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bce:	c1 e0 04             	shl    $0x4,%eax
81002bd1:	89 c1                	mov    %eax,%ecx
81002bd3:	8b 45 14             	mov    0x14(%ebp),%eax
81002bd6:	01 c8                	add    %ecx,%eax
81002bd8:	8b 00                	mov    (%eax),%eax
81002bda:	83 ec 08             	sub    $0x8,%esp
81002bdd:	52                   	push   %edx
81002bde:	50                   	push   %eax
81002bdf:	e8 72 34 00 00       	call   81006056 <fputs>
81002be4:	83 c4 10             	add    $0x10,%esp
81002be7:	a1 84 83 00 81       	mov    0x81008384,%eax
81002bec:	8b 40 0c             	mov    0xc(%eax),%eax
81002bef:	83 ec 08             	sub    $0x8,%esp
81002bf2:	50                   	push   %eax
81002bf3:	68 94 7b 00 81       	push   $0x81007b94
81002bf8:	e8 59 34 00 00       	call   81006056 <fputs>
81002bfd:	83 c4 10             	add    $0x10,%esp
81002c00:	8b 45 20             	mov    0x20(%ebp),%eax
81002c03:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002c0a:	8b 45 20             	mov    0x20(%ebp),%eax
81002c0d:	8b 40 0c             	mov    0xc(%eax),%eax
81002c10:	e9 dc 04 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002c15:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002c19:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c1c:	c1 e0 04             	shl    $0x4,%eax
81002c1f:	89 c2                	mov    %eax,%edx
81002c21:	8b 45 14             	mov    0x14(%ebp),%eax
81002c24:	01 d0                	add    %edx,%eax
81002c26:	8b 00                	mov    (%eax),%eax
81002c28:	85 c0                	test   %eax,%eax
81002c2a:	0f 85 54 fe ff ff    	jne    81002a84 <getopt_internal+0x4a3>
81002c30:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c34:	78 13                	js     81002c49 <getopt_internal+0x668>
81002c36:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002c39:	c1 e0 04             	shl    $0x4,%eax
81002c3c:	89 c2                	mov    %eax,%edx
81002c3e:	8b 45 14             	mov    0x14(%ebp),%eax
81002c41:	01 d0                	add    %edx,%eax
81002c43:	8b 40 04             	mov    0x4(%eax),%eax
81002c46:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002c49:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c4d:	0f 89 9a 01 00 00    	jns    81002ded <getopt_internal+0x80c>
81002c53:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002c57:	0f 84 90 01 00 00    	je     81002ded <getopt_internal+0x80c>
81002c5d:	8b 45 20             	mov    0x20(%ebp),%eax
81002c60:	8b 40 04             	mov    0x4(%eax),%eax
81002c63:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c6d:	01 d0                	add    %edx,%eax
81002c6f:	8b 10                	mov    (%eax),%edx
81002c71:	8b 45 20             	mov    0x20(%ebp),%eax
81002c74:	8b 40 10             	mov    0x10(%eax),%eax
81002c77:	01 d0                	add    %edx,%eax
81002c79:	0f b6 00             	movzbl (%eax),%eax
81002c7c:	0f be c0             	movsbl %al,%eax
81002c7f:	83 ec 08             	sub    $0x8,%esp
81002c82:	50                   	push   %eax
81002c83:	ff 75 10             	push   0x10(%ebp)
81002c86:	e8 15 28 00 00       	call   810054a0 <strchr>
81002c8b:	83 c4 10             	add    $0x10,%esp
81002c8e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c91:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002c95:	0f 85 f1 00 00 00    	jne    81002d8c <getopt_internal+0x7ab>
81002c9b:	8b 45 20             	mov    0x20(%ebp),%eax
81002c9e:	8b 40 08             	mov    0x8(%eax),%eax
81002ca1:	85 c0                	test   %eax,%eax
81002ca3:	0f 84 83 00 00 00    	je     81002d2c <getopt_internal+0x74b>
81002ca9:	a1 84 83 00 81       	mov    0x81008384,%eax
81002cae:	8b 50 0c             	mov    0xc(%eax),%edx
81002cb1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cb4:	8b 00                	mov    (%eax),%eax
81002cb6:	83 ec 08             	sub    $0x8,%esp
81002cb9:	52                   	push   %edx
81002cba:	50                   	push   %eax
81002cbb:	e8 96 33 00 00       	call   81006056 <fputs>
81002cc0:	83 c4 10             	add    $0x10,%esp
81002cc3:	a1 84 83 00 81       	mov    0x81008384,%eax
81002cc8:	8b 40 0c             	mov    0xc(%eax),%eax
81002ccb:	83 ec 08             	sub    $0x8,%esp
81002cce:	50                   	push   %eax
81002ccf:	68 98 7b 00 81       	push   $0x81007b98
81002cd4:	e8 7d 33 00 00       	call   81006056 <fputs>
81002cd9:	83 c4 10             	add    $0x10,%esp
81002cdc:	a1 84 83 00 81       	mov    0x81008384,%eax
81002ce1:	8b 50 0c             	mov    0xc(%eax),%edx
81002ce4:	8b 45 20             	mov    0x20(%ebp),%eax
81002ce7:	8b 40 04             	mov    0x4(%eax),%eax
81002cea:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002cf1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cf4:	01 c8                	add    %ecx,%eax
81002cf6:	8b 08                	mov    (%eax),%ecx
81002cf8:	8b 45 20             	mov    0x20(%ebp),%eax
81002cfb:	8b 40 10             	mov    0x10(%eax),%eax
81002cfe:	01 c8                	add    %ecx,%eax
81002d00:	0f b6 00             	movzbl (%eax),%eax
81002d03:	0f be c0             	movsbl %al,%eax
81002d06:	83 ec 08             	sub    $0x8,%esp
81002d09:	52                   	push   %edx
81002d0a:	50                   	push   %eax
81002d0b:	e8 52 32 00 00       	call   81005f62 <fputc>
81002d10:	83 c4 10             	add    $0x10,%esp
81002d13:	a1 84 83 00 81       	mov    0x81008384,%eax
81002d18:	8b 40 0c             	mov    0xc(%eax),%eax
81002d1b:	83 ec 08             	sub    $0x8,%esp
81002d1e:	50                   	push   %eax
81002d1f:	68 af 7b 00 81       	push   $0x81007baf
81002d24:	e8 2d 33 00 00       	call   81006056 <fputs>
81002d29:	83 c4 10             	add    $0x10,%esp
81002d2c:	8b 45 20             	mov    0x20(%ebp),%eax
81002d2f:	8b 40 10             	mov    0x10(%eax),%eax
81002d32:	8d 50 01             	lea    0x1(%eax),%edx
81002d35:	8b 45 20             	mov    0x20(%ebp),%eax
81002d38:	89 50 10             	mov    %edx,0x10(%eax)
81002d3b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d3e:	8b 40 04             	mov    0x4(%eax),%eax
81002d41:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d48:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d4b:	01 d0                	add    %edx,%eax
81002d4d:	8b 10                	mov    (%eax),%edx
81002d4f:	8b 45 20             	mov    0x20(%ebp),%eax
81002d52:	8b 40 10             	mov    0x10(%eax),%eax
81002d55:	01 d0                	add    %edx,%eax
81002d57:	0f b6 00             	movzbl (%eax),%eax
81002d5a:	84 c0                	test   %al,%al
81002d5c:	75 19                	jne    81002d77 <getopt_internal+0x796>
81002d5e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d61:	8b 40 04             	mov    0x4(%eax),%eax
81002d64:	8d 50 01             	lea    0x1(%eax),%edx
81002d67:	8b 45 20             	mov    0x20(%ebp),%eax
81002d6a:	89 50 04             	mov    %edx,0x4(%eax)
81002d6d:	8b 45 20             	mov    0x20(%ebp),%eax
81002d70:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002d77:	8b 45 20             	mov    0x20(%ebp),%eax
81002d7a:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002d81:	8b 45 20             	mov    0x20(%ebp),%eax
81002d84:	8b 40 0c             	mov    0xc(%eax),%eax
81002d87:	e9 65 03 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002d8c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d8f:	83 c0 01             	add    $0x1,%eax
81002d92:	0f b6 00             	movzbl (%eax),%eax
81002d95:	3c 3a                	cmp    $0x3a,%al
81002d97:	75 1b                	jne    81002db4 <getopt_internal+0x7d3>
81002d99:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d9c:	83 c0 02             	add    $0x2,%eax
81002d9f:	0f b6 00             	movzbl (%eax),%eax
81002da2:	3c 3a                	cmp    $0x3a,%al
81002da4:	75 07                	jne    81002dad <getopt_internal+0x7cc>
81002da6:	b8 02 00 00 00       	mov    $0x2,%eax
81002dab:	eb 0c                	jmp    81002db9 <getopt_internal+0x7d8>
81002dad:	b8 01 00 00 00       	mov    $0x1,%eax
81002db2:	eb 05                	jmp    81002db9 <getopt_internal+0x7d8>
81002db4:	b8 00 00 00 00       	mov    $0x0,%eax
81002db9:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002dbc:	8b 45 20             	mov    0x20(%ebp),%eax
81002dbf:	8b 40 04             	mov    0x4(%eax),%eax
81002dc2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002dc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dcc:	01 d0                	add    %edx,%eax
81002dce:	8b 10                	mov    (%eax),%edx
81002dd0:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd3:	8b 40 10             	mov    0x10(%eax),%eax
81002dd6:	83 c0 01             	add    $0x1,%eax
81002dd9:	01 d0                	add    %edx,%eax
81002ddb:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002dde:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002de1:	0f b6 00             	movzbl (%eax),%eax
81002de4:	0f be d0             	movsbl %al,%edx
81002de7:	8b 45 20             	mov    0x20(%ebp),%eax
81002dea:	89 50 0c             	mov    %edx,0xc(%eax)
81002ded:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002df4:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002df8:	74 40                	je     81002e3a <getopt_internal+0x859>
81002dfa:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002dfe:	0f 85 b0 01 00 00    	jne    81002fb4 <getopt_internal+0x9d3>
81002e04:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e07:	0f b6 00             	movzbl (%eax),%eax
81002e0a:	3c 3d                	cmp    $0x3d,%al
81002e0c:	75 04                	jne    81002e12 <getopt_internal+0x831>
81002e0e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002e12:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e15:	0f b6 00             	movzbl (%eax),%eax
81002e18:	84 c0                	test   %al,%al
81002e1a:	74 05                	je     81002e21 <getopt_internal+0x840>
81002e1c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e1f:	eb 05                	jmp    81002e26 <getopt_internal+0x845>
81002e21:	b8 00 00 00 00       	mov    $0x0,%eax
81002e26:	8b 55 20             	mov    0x20(%ebp),%edx
81002e29:	89 02                	mov    %eax,(%edx)
81002e2b:	8b 45 20             	mov    0x20(%ebp),%eax
81002e2e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e35:	e9 d2 01 00 00       	jmp    8100300c <getopt_internal+0xa2b>
81002e3a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e3d:	0f b6 00             	movzbl (%eax),%eax
81002e40:	3c 3d                	cmp    $0x3d,%al
81002e42:	75 04                	jne    81002e48 <getopt_internal+0x867>
81002e44:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002e48:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e4b:	0f b6 00             	movzbl (%eax),%eax
81002e4e:	84 c0                	test   %al,%al
81002e50:	74 17                	je     81002e69 <getopt_internal+0x888>
81002e52:	8b 45 20             	mov    0x20(%ebp),%eax
81002e55:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e58:	89 10                	mov    %edx,(%eax)
81002e5a:	8b 45 20             	mov    0x20(%ebp),%eax
81002e5d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e64:	e9 a3 01 00 00       	jmp    8100300c <getopt_internal+0xa2b>
81002e69:	8b 45 20             	mov    0x20(%ebp),%eax
81002e6c:	8b 40 04             	mov    0x4(%eax),%eax
81002e6f:	83 c0 01             	add    $0x1,%eax
81002e72:	39 45 08             	cmp    %eax,0x8(%ebp)
81002e75:	0f 8f 0a 01 00 00    	jg     81002f85 <getopt_internal+0x9a4>
81002e7b:	8b 45 20             	mov    0x20(%ebp),%eax
81002e7e:	8b 40 08             	mov    0x8(%eax),%eax
81002e81:	85 c0                	test   %eax,%eax
81002e83:	0f 84 d3 00 00 00    	je     81002f5c <getopt_internal+0x97b>
81002e89:	a1 84 83 00 81       	mov    0x81008384,%eax
81002e8e:	8b 50 0c             	mov    0xc(%eax),%edx
81002e91:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e94:	8b 00                	mov    (%eax),%eax
81002e96:	83 ec 08             	sub    $0x8,%esp
81002e99:	52                   	push   %edx
81002e9a:	50                   	push   %eax
81002e9b:	e8 b6 31 00 00       	call   81006056 <fputs>
81002ea0:	83 c4 10             	add    $0x10,%esp
81002ea3:	a1 84 83 00 81       	mov    0x81008384,%eax
81002ea8:	8b 40 0c             	mov    0xc(%eax),%eax
81002eab:	83 ec 08             	sub    $0x8,%esp
81002eae:	50                   	push   %eax
81002eaf:	68 b4 7b 00 81       	push   $0x81007bb4
81002eb4:	e8 9d 31 00 00       	call   81006056 <fputs>
81002eb9:	83 c4 10             	add    $0x10,%esp
81002ebc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002ec0:	78 54                	js     81002f16 <getopt_internal+0x935>
81002ec2:	a1 84 83 00 81       	mov    0x81008384,%eax
81002ec7:	8b 40 0c             	mov    0xc(%eax),%eax
81002eca:	83 ec 08             	sub    $0x8,%esp
81002ecd:	50                   	push   %eax
81002ece:	6a 2d                	push   $0x2d
81002ed0:	e8 8d 30 00 00       	call   81005f62 <fputc>
81002ed5:	83 c4 10             	add    $0x10,%esp
81002ed8:	a1 84 83 00 81       	mov    0x81008384,%eax
81002edd:	8b 50 0c             	mov    0xc(%eax),%edx
81002ee0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ee3:	c1 e0 04             	shl    $0x4,%eax
81002ee6:	89 c1                	mov    %eax,%ecx
81002ee8:	8b 45 14             	mov    0x14(%ebp),%eax
81002eeb:	01 c8                	add    %ecx,%eax
81002eed:	8b 00                	mov    (%eax),%eax
81002eef:	83 ec 08             	sub    $0x8,%esp
81002ef2:	52                   	push   %edx
81002ef3:	50                   	push   %eax
81002ef4:	e8 5d 31 00 00       	call   81006056 <fputs>
81002ef9:	83 c4 10             	add    $0x10,%esp
81002efc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002f00:	74 07                	je     81002f09 <getopt_internal+0x928>
81002f02:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002f07:	eb 05                	jmp    81002f0e <getopt_internal+0x92d>
81002f09:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002f0e:	8b 45 20             	mov    0x20(%ebp),%eax
81002f11:	89 50 0c             	mov    %edx,0xc(%eax)
81002f14:	eb 2d                	jmp    81002f43 <getopt_internal+0x962>
81002f16:	a1 84 83 00 81       	mov    0x81008384,%eax
81002f1b:	8b 50 0c             	mov    0xc(%eax),%edx
81002f1e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f21:	0f b6 00             	movzbl (%eax),%eax
81002f24:	0f be c0             	movsbl %al,%eax
81002f27:	83 ec 08             	sub    $0x8,%esp
81002f2a:	52                   	push   %edx
81002f2b:	50                   	push   %eax
81002f2c:	e8 31 30 00 00       	call   81005f62 <fputc>
81002f31:	83 c4 10             	add    $0x10,%esp
81002f34:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f37:	0f b6 00             	movzbl (%eax),%eax
81002f3a:	0f be d0             	movsbl %al,%edx
81002f3d:	8b 45 20             	mov    0x20(%ebp),%eax
81002f40:	89 50 0c             	mov    %edx,0xc(%eax)
81002f43:	a1 84 83 00 81       	mov    0x81008384,%eax
81002f48:	8b 40 0c             	mov    0xc(%eax),%eax
81002f4b:	83 ec 08             	sub    $0x8,%esp
81002f4e:	50                   	push   %eax
81002f4f:	68 af 7b 00 81       	push   $0x81007baf
81002f54:	e8 fd 30 00 00       	call   81006056 <fputs>
81002f59:	83 c4 10             	add    $0x10,%esp
81002f5c:	8b 45 20             	mov    0x20(%ebp),%eax
81002f5f:	8b 40 04             	mov    0x4(%eax),%eax
81002f62:	8d 50 01             	lea    0x1(%eax),%edx
81002f65:	8b 45 20             	mov    0x20(%ebp),%eax
81002f68:	89 50 04             	mov    %edx,0x4(%eax)
81002f6b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002f6f:	74 0a                	je     81002f7b <getopt_internal+0x99a>
81002f71:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002f76:	e9 76 01 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002f7b:	b8 3f 00 00 00       	mov    $0x3f,%eax
81002f80:	e9 6c 01 00 00       	jmp    810030f1 <getopt_internal+0xb10>
81002f85:	8b 45 20             	mov    0x20(%ebp),%eax
81002f88:	8b 40 04             	mov    0x4(%eax),%eax
81002f8b:	83 c0 01             	add    $0x1,%eax
81002f8e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f95:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f98:	01 d0                	add    %edx,%eax
81002f9a:	8b 10                	mov    (%eax),%edx
81002f9c:	8b 45 20             	mov    0x20(%ebp),%eax
81002f9f:	89 10                	mov    %edx,(%eax)
81002fa1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002fa8:	8b 45 20             	mov    0x20(%ebp),%eax
81002fab:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002fb2:	eb 58                	jmp    8100300c <getopt_internal+0xa2b>
81002fb4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002fb8:	79 3e                	jns    81002ff8 <getopt_internal+0xa17>
81002fba:	8b 45 20             	mov    0x20(%ebp),%eax
81002fbd:	8b 40 10             	mov    0x10(%eax),%eax
81002fc0:	8d 50 01             	lea    0x1(%eax),%edx
81002fc3:	8b 45 20             	mov    0x20(%ebp),%eax
81002fc6:	89 50 10             	mov    %edx,0x10(%eax)
81002fc9:	8b 45 20             	mov    0x20(%ebp),%eax
81002fcc:	8b 40 04             	mov    0x4(%eax),%eax
81002fcf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fd6:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fd9:	01 d0                	add    %edx,%eax
81002fdb:	8b 10                	mov    (%eax),%edx
81002fdd:	8b 45 20             	mov    0x20(%ebp),%eax
81002fe0:	8b 40 10             	mov    0x10(%eax),%eax
81002fe3:	01 d0                	add    %edx,%eax
81002fe5:	0f b6 00             	movzbl (%eax),%eax
81002fe8:	84 c0                	test   %al,%al
81002fea:	75 16                	jne    81003002 <getopt_internal+0xa21>
81002fec:	8b 45 20             	mov    0x20(%ebp),%eax
81002fef:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002ff6:	eb 0a                	jmp    81003002 <getopt_internal+0xa21>
81002ff8:	8b 45 20             	mov    0x20(%ebp),%eax
81002ffb:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003002:	8b 45 20             	mov    0x20(%ebp),%eax
81003005:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100300b:	90                   	nop
8100300c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003010:	75 57                	jne    81003069 <getopt_internal+0xa88>
81003012:	8b 45 20             	mov    0x20(%ebp),%eax
81003015:	8b 40 10             	mov    0x10(%eax),%eax
81003018:	83 f8 01             	cmp    $0x1,%eax
8100301b:	75 4c                	jne    81003069 <getopt_internal+0xa88>
8100301d:	8b 45 20             	mov    0x20(%ebp),%eax
81003020:	8b 40 18             	mov    0x18(%eax),%eax
81003023:	85 c0                	test   %eax,%eax
81003025:	74 42                	je     81003069 <getopt_internal+0xa88>
81003027:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100302a:	8d 48 01             	lea    0x1(%eax),%ecx
8100302d:	8b 45 20             	mov    0x20(%ebp),%eax
81003030:	8b 40 18             	mov    0x18(%eax),%eax
81003033:	8b 55 20             	mov    0x20(%ebp),%edx
81003036:	8b 52 14             	mov    0x14(%edx),%edx
81003039:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003040:	8b 55 0c             	mov    0xc(%ebp),%edx
81003043:	01 da                	add    %ebx,%edx
81003045:	83 ec 04             	sub    $0x4,%esp
81003048:	51                   	push   %ecx
81003049:	50                   	push   %eax
8100304a:	52                   	push   %edx
8100304b:	e8 7f f4 ff ff       	call   810024cf <permute>
81003050:	83 c4 10             	add    $0x10,%esp
81003053:	8b 45 20             	mov    0x20(%ebp),%eax
81003056:	8b 40 14             	mov    0x14(%eax),%eax
81003059:	8d 50 01             	lea    0x1(%eax),%edx
8100305c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100305f:	01 c2                	add    %eax,%edx
81003061:	8b 45 20             	mov    0x20(%ebp),%eax
81003064:	89 50 04             	mov    %edx,0x4(%eax)
81003067:	eb 1f                	jmp    81003088 <getopt_internal+0xaa7>
81003069:	8b 45 20             	mov    0x20(%ebp),%eax
8100306c:	8b 40 10             	mov    0x10(%eax),%eax
8100306f:	83 f8 01             	cmp    $0x1,%eax
81003072:	75 14                	jne    81003088 <getopt_internal+0xaa7>
81003074:	8b 45 20             	mov    0x20(%ebp),%eax
81003077:	8b 40 04             	mov    0x4(%eax),%eax
8100307a:	8d 50 01             	lea    0x1(%eax),%edx
8100307d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003080:	01 c2                	add    %eax,%edx
81003082:	8b 45 20             	mov    0x20(%ebp),%eax
81003085:	89 50 04             	mov    %edx,0x4(%eax)
81003088:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100308c:	78 5d                	js     810030eb <getopt_internal+0xb0a>
8100308e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003092:	74 08                	je     8100309c <getopt_internal+0xabb>
81003094:	8b 45 18             	mov    0x18(%ebp),%eax
81003097:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100309a:	89 10                	mov    %edx,(%eax)
8100309c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100309f:	c1 e0 04             	shl    $0x4,%eax
810030a2:	89 c2                	mov    %eax,%edx
810030a4:	8b 45 14             	mov    0x14(%ebp),%eax
810030a7:	01 d0                	add    %edx,%eax
810030a9:	8b 40 08             	mov    0x8(%eax),%eax
810030ac:	85 c0                	test   %eax,%eax
810030ae:	74 29                	je     810030d9 <getopt_internal+0xaf8>
810030b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030b3:	c1 e0 04             	shl    $0x4,%eax
810030b6:	89 c2                	mov    %eax,%edx
810030b8:	8b 45 14             	mov    0x14(%ebp),%eax
810030bb:	01 c2                	add    %eax,%edx
810030bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030c0:	c1 e0 04             	shl    $0x4,%eax
810030c3:	89 c1                	mov    %eax,%ecx
810030c5:	8b 45 14             	mov    0x14(%ebp),%eax
810030c8:	01 c8                	add    %ecx,%eax
810030ca:	8b 40 08             	mov    0x8(%eax),%eax
810030cd:	8b 52 0c             	mov    0xc(%edx),%edx
810030d0:	89 10                	mov    %edx,(%eax)
810030d2:	b8 00 00 00 00       	mov    $0x0,%eax
810030d7:	eb 18                	jmp    810030f1 <getopt_internal+0xb10>
810030d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030dc:	c1 e0 04             	shl    $0x4,%eax
810030df:	89 c2                	mov    %eax,%edx
810030e1:	8b 45 14             	mov    0x14(%ebp),%eax
810030e4:	01 d0                	add    %edx,%eax
810030e6:	8b 40 0c             	mov    0xc(%eax),%eax
810030e9:	eb 06                	jmp    810030f1 <getopt_internal+0xb10>
810030eb:	8b 45 20             	mov    0x20(%ebp),%eax
810030ee:	8b 40 0c             	mov    0xc(%eax),%eax
810030f1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810030f4:	c9                   	leave  
810030f5:	c3                   	ret    

810030f6 <getopt>:
810030f6:	55                   	push   %ebp
810030f7:	89 e5                	mov    %esp,%ebp
810030f9:	83 ec 28             	sub    $0x28,%esp
810030fc:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030ff:	50                   	push   %eax
81003100:	e8 31 f4 ff ff       	call   81002536 <read_globals>
81003105:	83 c4 04             	add    $0x4,%esp
81003108:	83 ec 04             	sub    $0x4,%esp
8100310b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100310e:	50                   	push   %eax
8100310f:	6a 00                	push   $0x0
81003111:	6a 00                	push   $0x0
81003113:	6a 00                	push   $0x0
81003115:	ff 75 10             	push   0x10(%ebp)
81003118:	ff 75 0c             	push   0xc(%ebp)
8100311b:	ff 75 08             	push   0x8(%ebp)
8100311e:	e8 be f4 ff ff       	call   810025e1 <getopt_internal>
81003123:	83 c4 20             	add    $0x20,%esp
81003126:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003129:	83 ec 0c             	sub    $0xc,%esp
8100312c:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100312f:	50                   	push   %eax
81003130:	e8 5a f4 ff ff       	call   8100258f <write_globals>
81003135:	83 c4 10             	add    $0x10,%esp
81003138:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100313b:	c9                   	leave  
8100313c:	c3                   	ret    

8100313d <getopt_long>:
8100313d:	55                   	push   %ebp
8100313e:	89 e5                	mov    %esp,%ebp
81003140:	83 ec 28             	sub    $0x28,%esp
81003143:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003146:	50                   	push   %eax
81003147:	e8 ea f3 ff ff       	call   81002536 <read_globals>
8100314c:	83 c4 04             	add    $0x4,%esp
8100314f:	83 ec 04             	sub    $0x4,%esp
81003152:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003155:	50                   	push   %eax
81003156:	6a 00                	push   $0x0
81003158:	ff 75 18             	push   0x18(%ebp)
8100315b:	ff 75 14             	push   0x14(%ebp)
8100315e:	ff 75 10             	push   0x10(%ebp)
81003161:	ff 75 0c             	push   0xc(%ebp)
81003164:	ff 75 08             	push   0x8(%ebp)
81003167:	e8 75 f4 ff ff       	call   810025e1 <getopt_internal>
8100316c:	83 c4 20             	add    $0x20,%esp
8100316f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003172:	83 ec 0c             	sub    $0xc,%esp
81003175:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003178:	50                   	push   %eax
81003179:	e8 11 f4 ff ff       	call   8100258f <write_globals>
8100317e:	83 c4 10             	add    $0x10,%esp
81003181:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003184:	c9                   	leave  
81003185:	c3                   	ret    

81003186 <getopt_long_only>:
81003186:	55                   	push   %ebp
81003187:	89 e5                	mov    %esp,%ebp
81003189:	83 ec 28             	sub    $0x28,%esp
8100318c:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100318f:	50                   	push   %eax
81003190:	e8 a1 f3 ff ff       	call   81002536 <read_globals>
81003195:	83 c4 04             	add    $0x4,%esp
81003198:	83 ec 04             	sub    $0x4,%esp
8100319b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100319e:	50                   	push   %eax
8100319f:	6a 01                	push   $0x1
810031a1:	ff 75 18             	push   0x18(%ebp)
810031a4:	ff 75 14             	push   0x14(%ebp)
810031a7:	ff 75 10             	push   0x10(%ebp)
810031aa:	ff 75 0c             	push   0xc(%ebp)
810031ad:	ff 75 08             	push   0x8(%ebp)
810031b0:	e8 2c f4 ff ff       	call   810025e1 <getopt_internal>
810031b5:	83 c4 20             	add    $0x20,%esp
810031b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031bb:	83 ec 0c             	sub    $0xc,%esp
810031be:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031c1:	50                   	push   %eax
810031c2:	e8 c8 f3 ff ff       	call   8100258f <write_globals>
810031c7:	83 c4 10             	add    $0x10,%esp
810031ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031cd:	c9                   	leave  
810031ce:	c3                   	ret    

810031cf <__getopt_r>:
810031cf:	55                   	push   %ebp
810031d0:	89 e5                	mov    %esp,%ebp
810031d2:	83 ec 08             	sub    $0x8,%esp
810031d5:	83 ec 04             	sub    $0x4,%esp
810031d8:	ff 75 14             	push   0x14(%ebp)
810031db:	6a 00                	push   $0x0
810031dd:	6a 00                	push   $0x0
810031df:	6a 00                	push   $0x0
810031e1:	ff 75 10             	push   0x10(%ebp)
810031e4:	ff 75 0c             	push   0xc(%ebp)
810031e7:	ff 75 08             	push   0x8(%ebp)
810031ea:	e8 f2 f3 ff ff       	call   810025e1 <getopt_internal>
810031ef:	83 c4 20             	add    $0x20,%esp
810031f2:	c9                   	leave  
810031f3:	c3                   	ret    

810031f4 <__getopt_long_r>:
810031f4:	55                   	push   %ebp
810031f5:	89 e5                	mov    %esp,%ebp
810031f7:	83 ec 08             	sub    $0x8,%esp
810031fa:	83 ec 04             	sub    $0x4,%esp
810031fd:	ff 75 1c             	push   0x1c(%ebp)
81003200:	6a 00                	push   $0x0
81003202:	ff 75 18             	push   0x18(%ebp)
81003205:	ff 75 14             	push   0x14(%ebp)
81003208:	ff 75 10             	push   0x10(%ebp)
8100320b:	ff 75 0c             	push   0xc(%ebp)
8100320e:	ff 75 08             	push   0x8(%ebp)
81003211:	e8 cb f3 ff ff       	call   810025e1 <getopt_internal>
81003216:	83 c4 20             	add    $0x20,%esp
81003219:	c9                   	leave  
8100321a:	c3                   	ret    

8100321b <__getopt_long_only_r>:
8100321b:	55                   	push   %ebp
8100321c:	89 e5                	mov    %esp,%ebp
8100321e:	83 ec 08             	sub    $0x8,%esp
81003221:	83 ec 04             	sub    $0x4,%esp
81003224:	ff 75 1c             	push   0x1c(%ebp)
81003227:	6a 01                	push   $0x1
81003229:	ff 75 18             	push   0x18(%ebp)
8100322c:	ff 75 14             	push   0x14(%ebp)
8100322f:	ff 75 10             	push   0x10(%ebp)
81003232:	ff 75 0c             	push   0xc(%ebp)
81003235:	ff 75 08             	push   0x8(%ebp)
81003238:	e8 a4 f3 ff ff       	call   810025e1 <getopt_internal>
8100323d:	83 c4 20             	add    $0x20,%esp
81003240:	c9                   	leave  
81003241:	c3                   	ret    

81003242 <__getreent>:
81003242:	55                   	push   %ebp
81003243:	89 e5                	mov    %esp,%ebp
81003245:	a1 84 83 00 81       	mov    0x81008384,%eax
8100324a:	5d                   	pop    %ebp
8100324b:	c3                   	ret    

8100324c <__smakebuf_r>:
8100324c:	55                   	push   %ebp
8100324d:	89 e5                	mov    %esp,%ebp
8100324f:	56                   	push   %esi
81003250:	53                   	push   %ebx
81003251:	83 ec 10             	sub    $0x10,%esp
81003254:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003257:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100325b:	98                   	cwtl   
8100325c:	83 e0 02             	and    $0x2,%eax
8100325f:	85 c0                	test   %eax,%eax
81003261:	74 16                	je     81003279 <__smakebuf_r+0x2d>
81003263:	8d 43 43             	lea    0x43(%ebx),%eax
81003266:	89 03                	mov    %eax,(%ebx)
81003268:	8b 03                	mov    (%ebx),%eax
8100326a:	89 43 10             	mov    %eax,0x10(%ebx)
8100326d:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003274:	e9 b9 00 00 00       	jmp    81003332 <__smakebuf_r+0xe6>
81003279:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100327c:	50                   	push   %eax
8100327d:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003280:	50                   	push   %eax
81003281:	53                   	push   %ebx
81003282:	ff 75 08             	push   0x8(%ebp)
81003285:	e8 af 00 00 00       	call   81003339 <__swhatbuf_r>
8100328a:	83 c4 10             	add    $0x10,%esp
8100328d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003290:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003293:	83 ec 08             	sub    $0x8,%esp
81003296:	50                   	push   %eax
81003297:	ff 75 08             	push   0x8(%ebp)
8100329a:	e8 f9 03 00 00       	call   81003698 <_malloc_r>
8100329f:	83 c4 10             	add    $0x10,%esp
810032a2:	89 c6                	mov    %eax,%esi
810032a4:	85 f6                	test   %esi,%esi
810032a6:	75 2f                	jne    810032d7 <__smakebuf_r+0x8b>
810032a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032ac:	98                   	cwtl   
810032ad:	25 00 02 00 00       	and    $0x200,%eax
810032b2:	85 c0                	test   %eax,%eax
810032b4:	75 7c                	jne    81003332 <__smakebuf_r+0xe6>
810032b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032ba:	83 e0 fc             	and    $0xfffffffc,%eax
810032bd:	83 c8 02             	or     $0x2,%eax
810032c0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032c4:	8d 43 43             	lea    0x43(%ebx),%eax
810032c7:	89 03                	mov    %eax,(%ebx)
810032c9:	8b 03                	mov    (%ebx),%eax
810032cb:	89 43 10             	mov    %eax,0x10(%ebx)
810032ce:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810032d5:	eb 5b                	jmp    81003332 <__smakebuf_r+0xe6>
810032d7:	8b 45 08             	mov    0x8(%ebp),%eax
810032da:	c7 40 3c 44 15 00 81 	movl   $0x81001544,0x3c(%eax)
810032e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032e5:	0c 80                	or     $0x80,%al
810032e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032eb:	89 33                	mov    %esi,(%ebx)
810032ed:	8b 03                	mov    (%ebx),%eax
810032ef:	89 43 10             	mov    %eax,0x10(%ebx)
810032f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032f5:	89 43 14             	mov    %eax,0x14(%ebx)
810032f8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810032fb:	85 c0                	test   %eax,%eax
810032fd:	74 26                	je     81003325 <__smakebuf_r+0xd9>
810032ff:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003303:	98                   	cwtl   
81003304:	83 ec 08             	sub    $0x8,%esp
81003307:	50                   	push   %eax
81003308:	ff 75 08             	push   0x8(%ebp)
8100330b:	e8 d8 35 00 00       	call   810068e8 <_isatty_r>
81003310:	83 c4 10             	add    $0x10,%esp
81003313:	85 c0                	test   %eax,%eax
81003315:	74 0e                	je     81003325 <__smakebuf_r+0xd9>
81003317:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100331b:	83 e0 fc             	and    $0xfffffffc,%eax
8100331e:	83 c8 01             	or     $0x1,%eax
81003321:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003325:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003329:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100332c:	09 d0                	or     %edx,%eax
8100332e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003332:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003335:	5b                   	pop    %ebx
81003336:	5e                   	pop    %esi
81003337:	5d                   	pop    %ebp
81003338:	c3                   	ret    

81003339 <__swhatbuf_r>:
81003339:	55                   	push   %ebp
8100333a:	89 e5                	mov    %esp,%ebp
8100333c:	83 ec 58             	sub    $0x58,%esp
8100333f:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003346:	8b 45 0c             	mov    0xc(%ebp),%eax
81003349:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100334d:	66 85 c0             	test   %ax,%ax
81003350:	78 1f                	js     81003371 <__swhatbuf_r+0x38>
81003352:	8b 45 0c             	mov    0xc(%ebp),%eax
81003355:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003359:	98                   	cwtl   
8100335a:	83 ec 04             	sub    $0x4,%esp
8100335d:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003360:	52                   	push   %edx
81003361:	50                   	push   %eax
81003362:	ff 75 08             	push   0x8(%ebp)
81003365:	e8 b5 ee ff ff       	call   8100221f <_fstat_r>
8100336a:	83 c4 10             	add    $0x10,%esp
8100336d:	85 c0                	test   %eax,%eax
8100336f:	79 35                	jns    810033a6 <__swhatbuf_r+0x6d>
81003371:	8b 45 14             	mov    0x14(%ebp),%eax
81003374:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100337a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100337d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003381:	98                   	cwtl   
81003382:	25 80 00 00 00       	and    $0x80,%eax
81003387:	85 c0                	test   %eax,%eax
81003389:	74 0b                	je     81003396 <__swhatbuf_r+0x5d>
8100338b:	8b 45 10             	mov    0x10(%ebp),%eax
8100338e:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003394:	eb 09                	jmp    8100339f <__swhatbuf_r+0x66>
81003396:	8b 45 10             	mov    0x10(%ebp),%eax
81003399:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100339f:	b8 00 00 00 00       	mov    $0x0,%eax
810033a4:	eb 24                	jmp    810033ca <__swhatbuf_r+0x91>
810033a6:	8b 45 b0             	mov    -0x50(%ebp),%eax
810033a9:	25 00 f0 00 00       	and    $0xf000,%eax
810033ae:	3d 00 20 00 00       	cmp    $0x2000,%eax
810033b3:	0f 94 c0             	sete   %al
810033b6:	0f b6 d0             	movzbl %al,%edx
810033b9:	8b 45 14             	mov    0x14(%ebp),%eax
810033bc:	89 10                	mov    %edx,(%eax)
810033be:	8b 45 10             	mov    0x10(%ebp),%eax
810033c1:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810033c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033ca:	c9                   	leave  
810033cb:	c3                   	ret    

810033cc <malloc>:
810033cc:	55                   	push   %ebp
810033cd:	89 e5                	mov    %esp,%ebp
810033cf:	83 ec 08             	sub    $0x8,%esp
810033d2:	a1 84 83 00 81       	mov    0x81008384,%eax
810033d7:	83 ec 08             	sub    $0x8,%esp
810033da:	ff 75 08             	push   0x8(%ebp)
810033dd:	50                   	push   %eax
810033de:	e8 b5 02 00 00       	call   81003698 <_malloc_r>
810033e3:	83 c4 10             	add    $0x10,%esp
810033e6:	c9                   	leave  
810033e7:	c3                   	ret    

810033e8 <free>:
810033e8:	55                   	push   %ebp
810033e9:	89 e5                	mov    %esp,%ebp
810033eb:	83 ec 08             	sub    $0x8,%esp
810033ee:	a1 84 83 00 81       	mov    0x81008384,%eax
810033f3:	83 ec 08             	sub    $0x8,%esp
810033f6:	ff 75 08             	push   0x8(%ebp)
810033f9:	50                   	push   %eax
810033fa:	e8 d6 e3 ff ff       	call   810017d5 <_free_r>
810033ff:	83 c4 10             	add    $0x10,%esp
81003402:	90                   	nop
81003403:	c9                   	leave  
81003404:	c3                   	ret    

81003405 <malloc_extend_top>:
81003405:	55                   	push   %ebp
81003406:	89 e5                	mov    %esp,%ebp
81003408:	83 ec 38             	sub    $0x38,%esp
8100340b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003412:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003417:	8b 40 08             	mov    0x8(%eax),%eax
8100341a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100341d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003420:	8b 40 04             	mov    0x4(%eax),%eax
81003423:	83 e0 fc             	and    $0xfffffffc,%eax
81003426:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003429:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100342c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100342f:	01 d0                	add    %edx,%eax
81003431:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003434:	8b 15 80 8f 00 81    	mov    0x81008f80,%edx
8100343a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100343d:	01 d0                	add    %edx,%eax
8100343f:	83 c0 10             	add    $0x10,%eax
81003442:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003445:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
8100344c:	a1 ac 87 00 81       	mov    0x810087ac,%eax
81003451:	83 f8 ff             	cmp    $0xffffffff,%eax
81003454:	74 15                	je     8100346b <malloc_extend_top+0x66>
81003456:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003459:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100345c:	01 d0                	add    %edx,%eax
8100345e:	8d 50 ff             	lea    -0x1(%eax),%edx
81003461:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003464:	f7 d8                	neg    %eax
81003466:	21 d0                	and    %edx,%eax
81003468:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100346b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100346e:	83 ec 08             	sub    $0x8,%esp
81003471:	50                   	push   %eax
81003472:	ff 75 08             	push   0x8(%ebp)
81003475:	e8 b8 1c 00 00       	call   81005132 <_sbrk_r>
8100347a:	83 c4 10             	add    $0x10,%esp
8100347d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003480:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003484:	0f 84 0b 02 00 00    	je     81003695 <malloc_extend_top+0x290>
8100348a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100348d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003490:	73 0e                	jae    810034a0 <malloc_extend_top+0x9b>
81003492:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003497:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100349a:	0f 85 f5 01 00 00    	jne    81003695 <malloc_extend_top+0x290>
810034a0:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
810034a5:	89 c2                	mov    %eax,%edx
810034a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810034aa:	01 d0                	add    %edx,%eax
810034ac:	a3 a0 8f 00 81       	mov    %eax,0x81008fa0
810034b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034b4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810034b7:	75 30                	jne    810034e9 <malloc_extend_top+0xe4>
810034b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810034bc:	8d 50 ff             	lea    -0x1(%eax),%edx
810034bf:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034c2:	21 d0                	and    %edx,%eax
810034c4:	85 c0                	test   %eax,%eax
810034c6:	75 21                	jne    810034e9 <malloc_extend_top+0xe4>
810034c8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810034cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810034ce:	01 d0                	add    %edx,%eax
810034d0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810034d3:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
810034d8:	8b 40 08             	mov    0x8(%eax),%eax
810034db:	8b 55 d0             	mov    -0x30(%ebp),%edx
810034de:	83 ca 01             	or     $0x1,%edx
810034e1:	89 50 04             	mov    %edx,0x4(%eax)
810034e4:	e9 76 01 00 00       	jmp    8100365f <malloc_extend_top+0x25a>
810034e9:	a1 ac 87 00 81       	mov    0x810087ac,%eax
810034ee:	83 f8 ff             	cmp    $0xffffffff,%eax
810034f1:	75 0a                	jne    810034fd <malloc_extend_top+0xf8>
810034f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034f6:	a3 ac 87 00 81       	mov    %eax,0x810087ac
810034fb:	eb 13                	jmp    81003510 <malloc_extend_top+0x10b>
810034fd:	8b 15 a0 8f 00 81    	mov    0x81008fa0,%edx
81003503:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003506:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003509:	01 d0                	add    %edx,%eax
8100350b:	a3 a0 8f 00 81       	mov    %eax,0x81008fa0
81003510:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003513:	83 c0 08             	add    $0x8,%eax
81003516:	83 e0 07             	and    $0x7,%eax
81003519:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100351c:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003520:	74 13                	je     81003535 <malloc_extend_top+0x130>
81003522:	b8 08 00 00 00       	mov    $0x8,%eax
81003527:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100352a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100352d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003530:	01 45 f4             	add    %eax,-0xc(%ebp)
81003533:	eb 07                	jmp    8100353c <malloc_extend_top+0x137>
81003535:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100353c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100353f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003542:	01 d0                	add    %edx,%eax
81003544:	89 c2                	mov    %eax,%edx
81003546:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003549:	83 e8 01             	sub    $0x1,%eax
8100354c:	21 c2                	and    %eax,%edx
8100354e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003551:	29 d0                	sub    %edx,%eax
81003553:	01 45 f0             	add    %eax,-0x10(%ebp)
81003556:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003559:	83 e8 01             	sub    $0x1,%eax
8100355c:	21 45 f0             	and    %eax,-0x10(%ebp)
8100355f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003562:	83 ec 08             	sub    $0x8,%esp
81003565:	50                   	push   %eax
81003566:	ff 75 08             	push   0x8(%ebp)
81003569:	e8 c4 1b 00 00       	call   81005132 <_sbrk_r>
8100356e:	83 c4 10             	add    $0x10,%esp
81003571:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003574:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81003578:	75 28                	jne    810035a2 <malloc_extend_top+0x19d>
8100357a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003581:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003588:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100358b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100358e:	01 d0                	add    %edx,%eax
81003590:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003593:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003597:	74 09                	je     810035a2 <malloc_extend_top+0x19d>
81003599:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100359c:	83 e8 08             	sub    $0x8,%eax
8100359f:	01 45 ec             	add    %eax,-0x14(%ebp)
810035a2:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
810035a7:	89 c2                	mov    %eax,%edx
810035a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035ac:	01 d0                	add    %edx,%eax
810035ae:	a3 a0 8f 00 81       	mov    %eax,0x81008fa0
810035b3:	ba a0 83 00 81       	mov    $0x810083a0,%edx
810035b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035bb:	89 42 08             	mov    %eax,0x8(%edx)
810035be:	8b 45 ec             	mov    -0x14(%ebp),%eax
810035c1:	2b 45 f4             	sub    -0xc(%ebp),%eax
810035c4:	89 c2                	mov    %eax,%edx
810035c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035c9:	01 d0                	add    %edx,%eax
810035cb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810035ce:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
810035d3:	8b 40 08             	mov    0x8(%eax),%eax
810035d6:	8b 55 d0             	mov    -0x30(%ebp),%edx
810035d9:	83 ca 01             	or     $0x1,%edx
810035dc:	89 50 04             	mov    %edx,0x4(%eax)
810035df:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
810035e4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810035e7:	74 76                	je     8100365f <malloc_extend_top+0x25a>
810035e9:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810035ed:	77 14                	ja     81003603 <malloc_extend_top+0x1fe>
810035ef:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
810035f4:	8b 40 08             	mov    0x8(%eax),%eax
810035f7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810035fe:	e9 93 00 00 00       	jmp    81003696 <malloc_extend_top+0x291>
81003603:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003606:	83 e8 0c             	sub    $0xc,%eax
81003609:	83 e0 f8             	and    $0xfffffff8,%eax
8100360c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100360f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003612:	8b 40 04             	mov    0x4(%eax),%eax
81003615:	83 e0 01             	and    $0x1,%eax
81003618:	0b 45 dc             	or     -0x24(%ebp),%eax
8100361b:	89 c2                	mov    %eax,%edx
8100361d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003620:	89 50 04             	mov    %edx,0x4(%eax)
81003623:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003626:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003629:	01 d0                	add    %edx,%eax
8100362b:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003632:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003635:	8d 50 04             	lea    0x4(%eax),%edx
81003638:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100363b:	01 d0                	add    %edx,%eax
8100363d:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003644:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003648:	76 15                	jbe    8100365f <malloc_extend_top+0x25a>
8100364a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100364d:	83 c0 08             	add    $0x8,%eax
81003650:	83 ec 08             	sub    $0x8,%esp
81003653:	50                   	push   %eax
81003654:	ff 75 08             	push   0x8(%ebp)
81003657:	e8 79 e1 ff ff       	call   810017d5 <_free_r>
8100365c:	83 c4 10             	add    $0x10,%esp
8100365f:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
81003664:	89 c2                	mov    %eax,%edx
81003666:	a1 84 8f 00 81       	mov    0x81008f84,%eax
8100366b:	39 c2                	cmp    %eax,%edx
8100366d:	76 0a                	jbe    81003679 <malloc_extend_top+0x274>
8100366f:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
81003674:	a3 84 8f 00 81       	mov    %eax,0x81008f84
81003679:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
8100367e:	89 c2                	mov    %eax,%edx
81003680:	a1 88 8f 00 81       	mov    0x81008f88,%eax
81003685:	39 c2                	cmp    %eax,%edx
81003687:	76 0d                	jbe    81003696 <malloc_extend_top+0x291>
81003689:	a1 a0 8f 00 81       	mov    0x81008fa0,%eax
8100368e:	a3 88 8f 00 81       	mov    %eax,0x81008f88
81003693:	eb 01                	jmp    81003696 <malloc_extend_top+0x291>
81003695:	90                   	nop
81003696:	c9                   	leave  
81003697:	c3                   	ret    

81003698 <_malloc_r>:
81003698:	55                   	push   %ebp
81003699:	89 e5                	mov    %esp,%ebp
8100369b:	53                   	push   %ebx
8100369c:	83 ec 44             	sub    $0x44,%esp
8100369f:	8b 45 0c             	mov    0xc(%ebp),%eax
810036a2:	83 c0 0b             	add    $0xb,%eax
810036a5:	83 f8 16             	cmp    $0x16,%eax
810036a8:	76 0b                	jbe    810036b5 <_malloc_r+0x1d>
810036aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810036ad:	83 c0 0b             	add    $0xb,%eax
810036b0:	83 e0 f8             	and    $0xfffffff8,%eax
810036b3:	eb 05                	jmp    810036ba <_malloc_r+0x22>
810036b5:	b8 10 00 00 00       	mov    $0x10,%eax
810036ba:	89 45 d0             	mov    %eax,-0x30(%ebp)
810036bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036c0:	85 c0                	test   %eax,%eax
810036c2:	78 08                	js     810036cc <_malloc_r+0x34>
810036c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036c7:	3b 45 0c             	cmp    0xc(%ebp),%eax
810036ca:	73 13                	jae    810036df <_malloc_r+0x47>
810036cc:	8b 45 08             	mov    0x8(%ebp),%eax
810036cf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810036d5:	b8 00 00 00 00       	mov    $0x0,%eax
810036da:	e9 d6 07 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
810036df:	83 ec 0c             	sub    $0xc,%esp
810036e2:	ff 75 08             	push   0x8(%ebp)
810036e5:	e8 8e 09 00 00       	call   81004078 <__malloc_lock>
810036ea:	83 c4 10             	add    $0x10,%esp
810036ed:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810036f4:	0f 87 b0 00 00 00    	ja     810037aa <_malloc_r+0x112>
810036fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036fd:	c1 e8 03             	shr    $0x3,%eax
81003700:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003703:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003706:	83 c0 01             	add    $0x1,%eax
81003709:	01 c0                	add    %eax,%eax
8100370b:	c1 e0 02             	shl    $0x2,%eax
8100370e:	05 a0 83 00 81       	add    $0x810083a0,%eax
81003713:	83 e8 08             	sub    $0x8,%eax
81003716:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003719:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100371c:	8b 40 0c             	mov    0xc(%eax),%eax
8100371f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003725:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003728:	75 0d                	jne    81003737 <_malloc_r+0x9f>
8100372a:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
8100372e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003731:	8b 40 0c             	mov    0xc(%eax),%eax
81003734:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003737:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100373a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100373d:	74 62                	je     810037a1 <_malloc_r+0x109>
8100373f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003742:	8b 40 04             	mov    0x4(%eax),%eax
81003745:	83 e0 fc             	and    $0xfffffffc,%eax
81003748:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100374b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100374e:	8b 40 0c             	mov    0xc(%eax),%eax
81003751:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003754:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003757:	8b 40 08             	mov    0x8(%eax),%eax
8100375a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100375d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003760:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003763:	89 50 0c             	mov    %edx,0xc(%eax)
81003766:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003769:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100376c:	89 50 08             	mov    %edx,0x8(%eax)
8100376f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003772:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003775:	01 d0                	add    %edx,%eax
81003777:	8b 50 04             	mov    0x4(%eax),%edx
8100377a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100377d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003780:	01 c8                	add    %ecx,%eax
81003782:	83 ca 01             	or     $0x1,%edx
81003785:	89 50 04             	mov    %edx,0x4(%eax)
81003788:	83 ec 0c             	sub    $0xc,%esp
8100378b:	ff 75 08             	push   0x8(%ebp)
8100378e:	e8 eb 08 00 00       	call   8100407e <__malloc_unlock>
81003793:	83 c4 10             	add    $0x10,%esp
81003796:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003799:	83 c0 08             	add    $0x8,%eax
8100379c:	e9 14 07 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
810037a1:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810037a5:	e9 46 01 00 00       	jmp    810038f0 <_malloc_r+0x258>
810037aa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037ad:	c1 e8 09             	shr    $0x9,%eax
810037b0:	85 c0                	test   %eax,%eax
810037b2:	75 08                	jne    810037bc <_malloc_r+0x124>
810037b4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037b7:	c1 e8 03             	shr    $0x3,%eax
810037ba:	eb 77                	jmp    81003833 <_malloc_r+0x19b>
810037bc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037bf:	c1 e8 09             	shr    $0x9,%eax
810037c2:	83 f8 04             	cmp    $0x4,%eax
810037c5:	77 0b                	ja     810037d2 <_malloc_r+0x13a>
810037c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037ca:	c1 e8 06             	shr    $0x6,%eax
810037cd:	83 c0 38             	add    $0x38,%eax
810037d0:	eb 61                	jmp    81003833 <_malloc_r+0x19b>
810037d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037d5:	c1 e8 09             	shr    $0x9,%eax
810037d8:	83 f8 14             	cmp    $0x14,%eax
810037db:	77 0b                	ja     810037e8 <_malloc_r+0x150>
810037dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037e0:	c1 e8 09             	shr    $0x9,%eax
810037e3:	83 c0 5b             	add    $0x5b,%eax
810037e6:	eb 4b                	jmp    81003833 <_malloc_r+0x19b>
810037e8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037eb:	c1 e8 09             	shr    $0x9,%eax
810037ee:	83 f8 54             	cmp    $0x54,%eax
810037f1:	77 0b                	ja     810037fe <_malloc_r+0x166>
810037f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037f6:	c1 e8 0c             	shr    $0xc,%eax
810037f9:	83 c0 6e             	add    $0x6e,%eax
810037fc:	eb 35                	jmp    81003833 <_malloc_r+0x19b>
810037fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003801:	c1 e8 09             	shr    $0x9,%eax
81003804:	3d 54 01 00 00       	cmp    $0x154,%eax
81003809:	77 0b                	ja     81003816 <_malloc_r+0x17e>
8100380b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100380e:	c1 e8 0f             	shr    $0xf,%eax
81003811:	83 c0 77             	add    $0x77,%eax
81003814:	eb 1d                	jmp    81003833 <_malloc_r+0x19b>
81003816:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003819:	c1 e8 09             	shr    $0x9,%eax
8100381c:	3d 54 05 00 00       	cmp    $0x554,%eax
81003821:	77 0b                	ja     8100382e <_malloc_r+0x196>
81003823:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003826:	c1 e8 12             	shr    $0x12,%eax
81003829:	83 c0 7c             	add    $0x7c,%eax
8100382c:	eb 05                	jmp    81003833 <_malloc_r+0x19b>
8100382e:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003833:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003836:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003839:	83 c0 01             	add    $0x1,%eax
8100383c:	01 c0                	add    %eax,%eax
8100383e:	c1 e0 02             	shl    $0x2,%eax
81003841:	05 a0 83 00 81       	add    $0x810083a0,%eax
81003846:	83 e8 08             	sub    $0x8,%eax
81003849:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100384c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100384f:	8b 40 0c             	mov    0xc(%eax),%eax
81003852:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003855:	e9 86 00 00 00       	jmp    810038e0 <_malloc_r+0x248>
8100385a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100385d:	8b 40 04             	mov    0x4(%eax),%eax
81003860:	83 e0 fc             	and    $0xfffffffc,%eax
81003863:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003866:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003869:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100386c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100386f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003873:	7e 06                	jle    8100387b <_malloc_r+0x1e3>
81003875:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003879:	eb 71                	jmp    810038ec <_malloc_r+0x254>
8100387b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100387f:	78 56                	js     810038d7 <_malloc_r+0x23f>
81003881:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003884:	8b 40 0c             	mov    0xc(%eax),%eax
81003887:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100388a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100388d:	8b 40 08             	mov    0x8(%eax),%eax
81003890:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003893:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003896:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003899:	89 50 0c             	mov    %edx,0xc(%eax)
8100389c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100389f:	8b 55 dc             	mov    -0x24(%ebp),%edx
810038a2:	89 50 08             	mov    %edx,0x8(%eax)
810038a5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810038a8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810038ab:	01 d0                	add    %edx,%eax
810038ad:	8b 50 04             	mov    0x4(%eax),%edx
810038b0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810038b3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810038b6:	01 c8                	add    %ecx,%eax
810038b8:	83 ca 01             	or     $0x1,%edx
810038bb:	89 50 04             	mov    %edx,0x4(%eax)
810038be:	83 ec 0c             	sub    $0xc,%esp
810038c1:	ff 75 08             	push   0x8(%ebp)
810038c4:	e8 b5 07 00 00       	call   8100407e <__malloc_unlock>
810038c9:	83 c4 10             	add    $0x10,%esp
810038cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038cf:	83 c0 08             	add    $0x8,%eax
810038d2:	e9 de 05 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
810038d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038da:	8b 40 0c             	mov    0xc(%eax),%eax
810038dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038e3:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810038e6:	0f 85 6e ff ff ff    	jne    8100385a <_malloc_r+0x1c2>
810038ec:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810038f0:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
810038f5:	8b 40 08             	mov    0x8(%eax),%eax
810038f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038fb:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
81003900:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003903:	0f 84 9c 02 00 00    	je     81003ba5 <_malloc_r+0x50d>
81003909:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100390c:	8b 40 04             	mov    0x4(%eax),%eax
8100390f:	83 e0 fc             	and    $0xfffffffc,%eax
81003912:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003915:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003918:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100391b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100391e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003922:	7e 7a                	jle    8100399e <_malloc_r+0x306>
81003924:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003927:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100392a:	01 d0                	add    %edx,%eax
8100392c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100392f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003932:	83 c8 01             	or     $0x1,%eax
81003935:	89 c2                	mov    %eax,%edx
81003937:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100393a:	89 50 04             	mov    %edx,0x4(%eax)
8100393d:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
81003942:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003945:	89 50 0c             	mov    %edx,0xc(%eax)
81003948:	ba a8 83 00 81       	mov    $0x810083a8,%edx
8100394d:	8b 40 0c             	mov    0xc(%eax),%eax
81003950:	89 42 08             	mov    %eax,0x8(%edx)
81003953:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81003958:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100395b:	89 50 0c             	mov    %edx,0xc(%eax)
8100395e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003961:	8b 50 0c             	mov    0xc(%eax),%edx
81003964:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003967:	89 50 08             	mov    %edx,0x8(%eax)
8100396a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100396d:	83 c8 01             	or     $0x1,%eax
81003970:	89 c2                	mov    %eax,%edx
81003972:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003975:	89 50 04             	mov    %edx,0x4(%eax)
81003978:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100397b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100397e:	01 c2                	add    %eax,%edx
81003980:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003983:	89 02                	mov    %eax,(%edx)
81003985:	83 ec 0c             	sub    $0xc,%esp
81003988:	ff 75 08             	push   0x8(%ebp)
8100398b:	e8 ee 06 00 00       	call   8100407e <__malloc_unlock>
81003990:	83 c4 10             	add    $0x10,%esp
81003993:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003996:	83 c0 08             	add    $0x8,%eax
81003999:	e9 17 05 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
8100399e:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
810039a3:	ba a8 83 00 81       	mov    $0x810083a8,%edx
810039a8:	89 50 0c             	mov    %edx,0xc(%eax)
810039ab:	ba a8 83 00 81       	mov    $0x810083a8,%edx
810039b0:	8b 40 0c             	mov    0xc(%eax),%eax
810039b3:	89 42 08             	mov    %eax,0x8(%edx)
810039b6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810039ba:	78 32                	js     810039ee <_malloc_r+0x356>
810039bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039c2:	01 d0                	add    %edx,%eax
810039c4:	8b 50 04             	mov    0x4(%eax),%edx
810039c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810039ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039cd:	01 c8                	add    %ecx,%eax
810039cf:	83 ca 01             	or     $0x1,%edx
810039d2:	89 50 04             	mov    %edx,0x4(%eax)
810039d5:	83 ec 0c             	sub    $0xc,%esp
810039d8:	ff 75 08             	push   0x8(%ebp)
810039db:	e8 9e 06 00 00       	call   8100407e <__malloc_unlock>
810039e0:	83 c4 10             	add    $0x10,%esp
810039e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039e6:	83 c0 08             	add    $0x8,%eax
810039e9:	e9 c7 04 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
810039ee:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810039f5:	77 7f                	ja     81003a76 <_malloc_r+0x3de>
810039f7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039fa:	c1 e8 03             	shr    $0x3,%eax
810039fd:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003a00:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003a05:	8b 58 04             	mov    0x4(%eax),%ebx
81003a08:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003a0b:	8d 50 03             	lea    0x3(%eax),%edx
81003a0e:	85 c0                	test   %eax,%eax
81003a10:	0f 48 c2             	cmovs  %edx,%eax
81003a13:	c1 f8 02             	sar    $0x2,%eax
81003a16:	ba 01 00 00 00       	mov    $0x1,%edx
81003a1b:	89 c1                	mov    %eax,%ecx
81003a1d:	d3 e2                	shl    %cl,%edx
81003a1f:	89 d0                	mov    %edx,%eax
81003a21:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81003a26:	09 d8                	or     %ebx,%eax
81003a28:	89 42 04             	mov    %eax,0x4(%edx)
81003a2b:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003a2e:	83 c0 01             	add    $0x1,%eax
81003a31:	01 c0                	add    %eax,%eax
81003a33:	c1 e0 02             	shl    $0x2,%eax
81003a36:	05 a0 83 00 81       	add    $0x810083a0,%eax
81003a3b:	83 e8 08             	sub    $0x8,%eax
81003a3e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003a41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a44:	8b 40 08             	mov    0x8(%eax),%eax
81003a47:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a4d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003a50:	89 50 0c             	mov    %edx,0xc(%eax)
81003a53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a56:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003a59:	89 50 08             	mov    %edx,0x8(%eax)
81003a5c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a5f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a62:	89 50 08             	mov    %edx,0x8(%eax)
81003a65:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a68:	8b 50 08             	mov    0x8(%eax),%edx
81003a6b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a6e:	89 50 0c             	mov    %edx,0xc(%eax)
81003a71:	e9 2f 01 00 00       	jmp    81003ba5 <_malloc_r+0x50d>
81003a76:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a79:	c1 e8 09             	shr    $0x9,%eax
81003a7c:	85 c0                	test   %eax,%eax
81003a7e:	75 08                	jne    81003a88 <_malloc_r+0x3f0>
81003a80:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a83:	c1 e8 03             	shr    $0x3,%eax
81003a86:	eb 77                	jmp    81003aff <_malloc_r+0x467>
81003a88:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a8b:	c1 e8 09             	shr    $0x9,%eax
81003a8e:	83 f8 04             	cmp    $0x4,%eax
81003a91:	77 0b                	ja     81003a9e <_malloc_r+0x406>
81003a93:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a96:	c1 e8 06             	shr    $0x6,%eax
81003a99:	83 c0 38             	add    $0x38,%eax
81003a9c:	eb 61                	jmp    81003aff <_malloc_r+0x467>
81003a9e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003aa1:	c1 e8 09             	shr    $0x9,%eax
81003aa4:	83 f8 14             	cmp    $0x14,%eax
81003aa7:	77 0b                	ja     81003ab4 <_malloc_r+0x41c>
81003aa9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003aac:	c1 e8 09             	shr    $0x9,%eax
81003aaf:	83 c0 5b             	add    $0x5b,%eax
81003ab2:	eb 4b                	jmp    81003aff <_malloc_r+0x467>
81003ab4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ab7:	c1 e8 09             	shr    $0x9,%eax
81003aba:	83 f8 54             	cmp    $0x54,%eax
81003abd:	77 0b                	ja     81003aca <_malloc_r+0x432>
81003abf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ac2:	c1 e8 0c             	shr    $0xc,%eax
81003ac5:	83 c0 6e             	add    $0x6e,%eax
81003ac8:	eb 35                	jmp    81003aff <_malloc_r+0x467>
81003aca:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003acd:	c1 e8 09             	shr    $0x9,%eax
81003ad0:	3d 54 01 00 00       	cmp    $0x154,%eax
81003ad5:	77 0b                	ja     81003ae2 <_malloc_r+0x44a>
81003ad7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ada:	c1 e8 0f             	shr    $0xf,%eax
81003add:	83 c0 77             	add    $0x77,%eax
81003ae0:	eb 1d                	jmp    81003aff <_malloc_r+0x467>
81003ae2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ae5:	c1 e8 09             	shr    $0x9,%eax
81003ae8:	3d 54 05 00 00       	cmp    $0x554,%eax
81003aed:	77 0b                	ja     81003afa <_malloc_r+0x462>
81003aef:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003af2:	c1 e8 12             	shr    $0x12,%eax
81003af5:	83 c0 7c             	add    $0x7c,%eax
81003af8:	eb 05                	jmp    81003aff <_malloc_r+0x467>
81003afa:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003aff:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003b02:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003b05:	83 c0 01             	add    $0x1,%eax
81003b08:	01 c0                	add    %eax,%eax
81003b0a:	c1 e0 02             	shl    $0x2,%eax
81003b0d:	05 a0 83 00 81       	add    $0x810083a0,%eax
81003b12:	83 e8 08             	sub    $0x8,%eax
81003b15:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b18:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b1b:	8b 40 08             	mov    0x8(%eax),%eax
81003b1e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b21:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b24:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003b27:	75 36                	jne    81003b5f <_malloc_r+0x4c7>
81003b29:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003b2e:	8b 58 04             	mov    0x4(%eax),%ebx
81003b31:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003b34:	8d 50 03             	lea    0x3(%eax),%edx
81003b37:	85 c0                	test   %eax,%eax
81003b39:	0f 48 c2             	cmovs  %edx,%eax
81003b3c:	c1 f8 02             	sar    $0x2,%eax
81003b3f:	ba 01 00 00 00       	mov    $0x1,%edx
81003b44:	89 c1                	mov    %eax,%ecx
81003b46:	d3 e2                	shl    %cl,%edx
81003b48:	89 d0                	mov    %edx,%eax
81003b4a:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81003b4f:	09 d8                	or     %ebx,%eax
81003b51:	89 42 04             	mov    %eax,0x4(%edx)
81003b54:	eb 28                	jmp    81003b7e <_malloc_r+0x4e6>
81003b56:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b59:	8b 40 08             	mov    0x8(%eax),%eax
81003b5c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b5f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b62:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003b65:	74 0e                	je     81003b75 <_malloc_r+0x4dd>
81003b67:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b6a:	8b 40 04             	mov    0x4(%eax),%eax
81003b6d:	83 e0 fc             	and    $0xfffffffc,%eax
81003b70:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003b73:	72 e1                	jb     81003b56 <_malloc_r+0x4be>
81003b75:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b78:	8b 40 0c             	mov    0xc(%eax),%eax
81003b7b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b81:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b84:	89 50 0c             	mov    %edx,0xc(%eax)
81003b87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b8a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003b8d:	89 50 08             	mov    %edx,0x8(%eax)
81003b90:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b93:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003b96:	89 50 08             	mov    %edx,0x8(%eax)
81003b99:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b9c:	8b 50 08             	mov    0x8(%eax),%edx
81003b9f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ba2:	89 50 0c             	mov    %edx,0xc(%eax)
81003ba5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ba8:	8d 50 03             	lea    0x3(%eax),%edx
81003bab:	85 c0                	test   %eax,%eax
81003bad:	0f 48 c2             	cmovs  %edx,%eax
81003bb0:	c1 f8 02             	sar    $0x2,%eax
81003bb3:	ba 01 00 00 00       	mov    $0x1,%edx
81003bb8:	89 c1                	mov    %eax,%ecx
81003bba:	d3 e2                	shl    %cl,%edx
81003bbc:	89 d0                	mov    %edx,%eax
81003bbe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003bc1:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003bc6:	8b 40 04             	mov    0x4(%eax),%eax
81003bc9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003bcc:	0f 87 13 02 00 00    	ja     81003de5 <_malloc_r+0x74d>
81003bd2:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003bd7:	8b 40 04             	mov    0x4(%eax),%eax
81003bda:	23 45 e4             	and    -0x1c(%ebp),%eax
81003bdd:	85 c0                	test   %eax,%eax
81003bdf:	75 27                	jne    81003c08 <_malloc_r+0x570>
81003be1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003be4:	83 e0 fc             	and    $0xfffffffc,%eax
81003be7:	83 c0 04             	add    $0x4,%eax
81003bea:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003bed:	d1 65 e4             	shll   -0x1c(%ebp)
81003bf0:	eb 07                	jmp    81003bf9 <_malloc_r+0x561>
81003bf2:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003bf6:	d1 65 e4             	shll   -0x1c(%ebp)
81003bf9:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003bfe:	8b 40 04             	mov    0x4(%eax),%eax
81003c01:	23 45 e4             	and    -0x1c(%ebp),%eax
81003c04:	85 c0                	test   %eax,%eax
81003c06:	74 ea                	je     81003bf2 <_malloc_r+0x55a>
81003c08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c0b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003c0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c11:	83 c0 01             	add    $0x1,%eax
81003c14:	01 c0                	add    %eax,%eax
81003c16:	c1 e0 02             	shl    $0x2,%eax
81003c19:	05 a0 83 00 81       	add    $0x810083a0,%eax
81003c1e:	83 e8 08             	sub    $0x8,%eax
81003c21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c24:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c27:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003c2a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c2d:	8b 40 0c             	mov    0xc(%eax),%eax
81003c30:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c33:	e9 22 01 00 00       	jmp    81003d5a <_malloc_r+0x6c2>
81003c38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c3b:	8b 40 04             	mov    0x4(%eax),%eax
81003c3e:	83 e0 fc             	and    $0xfffffffc,%eax
81003c41:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003c44:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003c47:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003c4a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c4d:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003c51:	0f 8e 9e 00 00 00    	jle    81003cf5 <_malloc_r+0x65d>
81003c57:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c5a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c5d:	01 d0                	add    %edx,%eax
81003c5f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003c62:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c65:	83 c8 01             	or     $0x1,%eax
81003c68:	89 c2                	mov    %eax,%edx
81003c6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c6d:	89 50 04             	mov    %edx,0x4(%eax)
81003c70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c73:	8b 40 0c             	mov    0xc(%eax),%eax
81003c76:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c7c:	8b 40 08             	mov    0x8(%eax),%eax
81003c7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c85:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c88:	89 50 0c             	mov    %edx,0xc(%eax)
81003c8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c8e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c91:	89 50 08             	mov    %edx,0x8(%eax)
81003c94:	b8 a8 83 00 81       	mov    $0x810083a8,%eax
81003c99:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003c9c:	89 50 0c             	mov    %edx,0xc(%eax)
81003c9f:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81003ca4:	8b 40 0c             	mov    0xc(%eax),%eax
81003ca7:	89 42 08             	mov    %eax,0x8(%edx)
81003caa:	ba a8 83 00 81       	mov    $0x810083a8,%edx
81003caf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cb2:	89 50 0c             	mov    %edx,0xc(%eax)
81003cb5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cb8:	8b 50 0c             	mov    0xc(%eax),%edx
81003cbb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cbe:	89 50 08             	mov    %edx,0x8(%eax)
81003cc1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cc4:	83 c8 01             	or     $0x1,%eax
81003cc7:	89 c2                	mov    %eax,%edx
81003cc9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003ccc:	89 50 04             	mov    %edx,0x4(%eax)
81003ccf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003cd2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003cd5:	01 c2                	add    %eax,%edx
81003cd7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cda:	89 02                	mov    %eax,(%edx)
81003cdc:	83 ec 0c             	sub    $0xc,%esp
81003cdf:	ff 75 08             	push   0x8(%ebp)
81003ce2:	e8 97 03 00 00       	call   8100407e <__malloc_unlock>
81003ce7:	83 c4 10             	add    $0x10,%esp
81003cea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ced:	83 c0 08             	add    $0x8,%eax
81003cf0:	e9 c0 01 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
81003cf5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003cf9:	78 56                	js     81003d51 <_malloc_r+0x6b9>
81003cfb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003cfe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d01:	01 d0                	add    %edx,%eax
81003d03:	8b 50 04             	mov    0x4(%eax),%edx
81003d06:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003d09:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d0c:	01 c8                	add    %ecx,%eax
81003d0e:	83 ca 01             	or     $0x1,%edx
81003d11:	89 50 04             	mov    %edx,0x4(%eax)
81003d14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d17:	8b 40 0c             	mov    0xc(%eax),%eax
81003d1a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003d1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d20:	8b 40 08             	mov    0x8(%eax),%eax
81003d23:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d26:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003d29:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003d2c:	89 50 0c             	mov    %edx,0xc(%eax)
81003d2f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d32:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003d35:	89 50 08             	mov    %edx,0x8(%eax)
81003d38:	83 ec 0c             	sub    $0xc,%esp
81003d3b:	ff 75 08             	push   0x8(%ebp)
81003d3e:	e8 3b 03 00 00       	call   8100407e <__malloc_unlock>
81003d43:	83 c4 10             	add    $0x10,%esp
81003d46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d49:	83 c0 08             	add    $0x8,%eax
81003d4c:	e9 64 01 00 00       	jmp    81003eb5 <_malloc_r+0x81d>
81003d51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d54:	8b 40 0c             	mov    0xc(%eax),%eax
81003d57:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d5d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d60:	0f 85 d2 fe ff ff    	jne    81003c38 <_malloc_r+0x5a0>
81003d66:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003d6a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d71:	83 e0 03             	and    $0x3,%eax
81003d74:	85 c0                	test   %eax,%eax
81003d76:	0f 85 ae fe ff ff    	jne    81003c2a <_malloc_r+0x592>
81003d7c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d7f:	83 e0 03             	and    $0x3,%eax
81003d82:	85 c0                	test   %eax,%eax
81003d84:	75 19                	jne    81003d9f <_malloc_r+0x707>
81003d86:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003d8b:	8b 48 04             	mov    0x4(%eax),%ecx
81003d8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003d91:	f7 d0                	not    %eax
81003d93:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81003d98:	21 c8                	and    %ecx,%eax
81003d9a:	89 42 04             	mov    %eax,0x4(%edx)
81003d9d:	eb 13                	jmp    81003db2 <_malloc_r+0x71a>
81003d9f:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003da3:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003da7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003daa:	8b 40 08             	mov    0x8(%eax),%eax
81003dad:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003db0:	74 ca                	je     81003d7c <_malloc_r+0x6e4>
81003db2:	d1 65 e4             	shll   -0x1c(%ebp)
81003db5:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003dba:	8b 40 04             	mov    0x4(%eax),%eax
81003dbd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003dc0:	77 23                	ja     81003de5 <_malloc_r+0x74d>
81003dc2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003dc6:	74 1d                	je     81003de5 <_malloc_r+0x74d>
81003dc8:	eb 07                	jmp    81003dd1 <_malloc_r+0x739>
81003dca:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003dce:	d1 65 e4             	shll   -0x1c(%ebp)
81003dd1:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003dd6:	8b 40 04             	mov    0x4(%eax),%eax
81003dd9:	23 45 e4             	and    -0x1c(%ebp),%eax
81003ddc:	85 c0                	test   %eax,%eax
81003dde:	74 ea                	je     81003dca <_malloc_r+0x732>
81003de0:	e9 23 fe ff ff       	jmp    81003c08 <_malloc_r+0x570>
81003de5:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003dea:	8b 40 08             	mov    0x8(%eax),%eax
81003ded:	8b 40 04             	mov    0x4(%eax),%eax
81003df0:	83 e0 fc             	and    $0xfffffffc,%eax
81003df3:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003df6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003df9:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003dfe:	8b 40 08             	mov    0x8(%eax),%eax
81003e01:	8b 40 04             	mov    0x4(%eax),%eax
81003e04:	83 e0 fc             	and    $0xfffffffc,%eax
81003e07:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003e0a:	77 06                	ja     81003e12 <_malloc_r+0x77a>
81003e0c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e10:	7f 53                	jg     81003e65 <_malloc_r+0x7cd>
81003e12:	83 ec 08             	sub    $0x8,%esp
81003e15:	ff 75 d0             	push   -0x30(%ebp)
81003e18:	ff 75 08             	push   0x8(%ebp)
81003e1b:	e8 e5 f5 ff ff       	call   81003405 <malloc_extend_top>
81003e20:	83 c4 10             	add    $0x10,%esp
81003e23:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003e28:	8b 40 08             	mov    0x8(%eax),%eax
81003e2b:	8b 40 04             	mov    0x4(%eax),%eax
81003e2e:	83 e0 fc             	and    $0xfffffffc,%eax
81003e31:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003e34:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003e37:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003e3c:	8b 40 08             	mov    0x8(%eax),%eax
81003e3f:	8b 40 04             	mov    0x4(%eax),%eax
81003e42:	83 e0 fc             	and    $0xfffffffc,%eax
81003e45:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003e48:	77 06                	ja     81003e50 <_malloc_r+0x7b8>
81003e4a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003e4e:	7f 15                	jg     81003e65 <_malloc_r+0x7cd>
81003e50:	83 ec 0c             	sub    $0xc,%esp
81003e53:	ff 75 08             	push   0x8(%ebp)
81003e56:	e8 23 02 00 00       	call   8100407e <__malloc_unlock>
81003e5b:	83 c4 10             	add    $0x10,%esp
81003e5e:	b8 00 00 00 00       	mov    $0x0,%eax
81003e63:	eb 50                	jmp    81003eb5 <_malloc_r+0x81d>
81003e65:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003e6a:	8b 40 08             	mov    0x8(%eax),%eax
81003e6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e73:	83 c8 01             	or     $0x1,%eax
81003e76:	89 c2                	mov    %eax,%edx
81003e78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e7b:	89 50 04             	mov    %edx,0x4(%eax)
81003e7e:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81003e83:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e89:	01 c8                	add    %ecx,%eax
81003e8b:	89 42 08             	mov    %eax,0x8(%edx)
81003e8e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e91:	83 c8 01             	or     $0x1,%eax
81003e94:	89 c2                	mov    %eax,%edx
81003e96:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81003e9b:	8b 40 08             	mov    0x8(%eax),%eax
81003e9e:	89 50 04             	mov    %edx,0x4(%eax)
81003ea1:	83 ec 0c             	sub    $0xc,%esp
81003ea4:	ff 75 08             	push   0x8(%ebp)
81003ea7:	e8 d2 01 00 00       	call   8100407e <__malloc_unlock>
81003eac:	83 c4 10             	add    $0x10,%esp
81003eaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003eb2:	83 c0 08             	add    $0x8,%eax
81003eb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003eb8:	c9                   	leave  
81003eb9:	c3                   	ret    
81003eba:	66 90                	xchg   %ax,%ax
81003ebc:	66 90                	xchg   %ax,%ax
81003ebe:	66 90                	xchg   %ax,%ax

81003ec0 <memchr>:
81003ec0:	55                   	push   %ebp
81003ec1:	89 e5                	mov    %esp,%ebp
81003ec3:	57                   	push   %edi
81003ec4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003ec8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003ecb:	8b 7d 08             	mov    0x8(%ebp),%edi
81003ece:	31 d2                	xor    %edx,%edx
81003ed0:	85 c9                	test   %ecx,%ecx
81003ed2:	74 79                	je     81003f4d <L20>
81003ed4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003eda:	74 28                	je     81003f04 <L5>
81003edc:	3a 07                	cmp    (%edi),%al
81003ede:	74 6a                	je     81003f4a <L15>
81003ee0:	47                   	inc    %edi
81003ee1:	49                   	dec    %ecx
81003ee2:	74 69                	je     81003f4d <L20>
81003ee4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003eea:	74 18                	je     81003f04 <L5>
81003eec:	3a 07                	cmp    (%edi),%al
81003eee:	74 5a                	je     81003f4a <L15>
81003ef0:	47                   	inc    %edi
81003ef1:	49                   	dec    %ecx
81003ef2:	74 59                	je     81003f4d <L20>
81003ef4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003efa:	74 08                	je     81003f04 <L5>
81003efc:	3a 07                	cmp    (%edi),%al
81003efe:	74 4a                	je     81003f4a <L15>
81003f00:	47                   	inc    %edi
81003f01:	49                   	dec    %ecx
81003f02:	74 49                	je     81003f4d <L20>

81003f04 <L5>:
81003f04:	88 c4                	mov    %al,%ah
81003f06:	89 c2                	mov    %eax,%edx
81003f08:	c1 e2 10             	shl    $0x10,%edx
81003f0b:	09 d0                	or     %edx,%eax
81003f0d:	53                   	push   %ebx
81003f0e:	66 90                	xchg   %ax,%ax

81003f10 <L8>:
81003f10:	83 e9 04             	sub    $0x4,%ecx
81003f13:	72 1c                	jb     81003f31 <L9>
81003f15:	8b 17                	mov    (%edi),%edx
81003f17:	83 c7 04             	add    $0x4,%edi
81003f1a:	31 c2                	xor    %eax,%edx
81003f1c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003f22:	f7 d2                	not    %edx
81003f24:	21 d3                	and    %edx,%ebx
81003f26:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81003f2c:	74 e2                	je     81003f10 <L8>
81003f2e:	83 ef 04             	sub    $0x4,%edi

81003f31 <L9>:
81003f31:	5b                   	pop    %ebx
81003f32:	31 d2                	xor    %edx,%edx
81003f34:	83 c1 04             	add    $0x4,%ecx
81003f37:	74 14                	je     81003f4d <L20>
81003f39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003f40 <L10>:
81003f40:	3a 07                	cmp    (%edi),%al
81003f42:	74 06                	je     81003f4a <L15>
81003f44:	47                   	inc    %edi
81003f45:	49                   	dec    %ecx
81003f46:	75 f8                	jne    81003f40 <L10>
81003f48:	31 ff                	xor    %edi,%edi

81003f4a <L15>:
81003f4a:	4a                   	dec    %edx
81003f4b:	21 fa                	and    %edi,%edx

81003f4d <L20>:
81003f4d:	89 d0                	mov    %edx,%eax
81003f4f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003f52:	5f                   	pop    %edi
81003f53:	c9                   	leave  
81003f54:	c3                   	ret    

81003f55 <memcmp>:
81003f55:	55                   	push   %ebp
81003f56:	89 e5                	mov    %esp,%ebp
81003f58:	83 ec 10             	sub    $0x10,%esp
81003f5b:	53                   	push   %ebx
81003f5c:	57                   	push   %edi
81003f5d:	56                   	push   %esi
81003f5e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f61:	8b 75 0c             	mov    0xc(%ebp),%esi
81003f64:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f67:	fc                   	cld    
81003f68:	31 c0                	xor    %eax,%eax
81003f6a:	85 c9                	test   %ecx,%ecx
81003f6c:	74 31                	je     81003f9f <L4>
81003f6e:	89 f8                	mov    %edi,%eax
81003f70:	09 f0                	or     %esi,%eax
81003f72:	a8 03                	test   $0x3,%al
81003f74:	75 1b                	jne    81003f91 <BYTECMP>
81003f76:	89 cb                	mov    %ecx,%ebx
81003f78:	c1 e9 02             	shr    $0x2,%ecx
81003f7b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81003f7d:	74 0d                	je     81003f8c <L5>
81003f7f:	83 ee 04             	sub    $0x4,%esi
81003f82:	83 ef 04             	sub    $0x4,%edi
81003f85:	b9 04 00 00 00       	mov    $0x4,%ecx
81003f8a:	eb 05                	jmp    81003f91 <BYTECMP>

81003f8c <L5>:
81003f8c:	83 e3 03             	and    $0x3,%ebx
81003f8f:	89 d9                	mov    %ebx,%ecx

81003f91 <BYTECMP>:
81003f91:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003f93 <L3>:
81003f93:	31 d2                	xor    %edx,%edx
81003f95:	8a 56 ff             	mov    -0x1(%esi),%dl
81003f98:	31 c0                	xor    %eax,%eax
81003f9a:	8a 47 ff             	mov    -0x1(%edi),%al
81003f9d:	29 d0                	sub    %edx,%eax

81003f9f <L4>:
81003f9f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003fa2:	5e                   	pop    %esi
81003fa3:	5f                   	pop    %edi
81003fa4:	5b                   	pop    %ebx
81003fa5:	c9                   	leave  
81003fa6:	c3                   	ret    
81003fa7:	90                   	nop

81003fa8 <memcpy>:
81003fa8:	55                   	push   %ebp
81003fa9:	89 e5                	mov    %esp,%ebp
81003fab:	56                   	push   %esi
81003fac:	57                   	push   %edi
81003fad:	53                   	push   %ebx
81003fae:	8b 7d 08             	mov    0x8(%ebp),%edi
81003fb1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003fb4:	8b 75 0c             	mov    0xc(%ebp),%esi
81003fb7:	fc                   	cld    
81003fb8:	83 f9 08             	cmp    $0x8,%ecx
81003fbb:	76 26                	jbe    81003fe3 <memcpy+0x3b>
81003fbd:	89 fa                	mov    %edi,%edx
81003fbf:	89 cb                	mov    %ecx,%ebx
81003fc1:	83 e2 03             	and    $0x3,%edx
81003fc4:	74 10                	je     81003fd6 <memcpy+0x2e>
81003fc6:	b9 04 00 00 00       	mov    $0x4,%ecx
81003fcb:	29 d1                	sub    %edx,%ecx
81003fcd:	83 e1 03             	and    $0x3,%ecx
81003fd0:	29 cb                	sub    %ecx,%ebx
81003fd2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003fd4:	89 d9                	mov    %ebx,%ecx
81003fd6:	c1 e9 02             	shr    $0x2,%ecx
81003fd9:	8d 76 00             	lea    0x0(%esi),%esi
81003fdc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003fde:	89 d9                	mov    %ebx,%ecx
81003fe0:	83 e1 03             	and    $0x3,%ecx
81003fe3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003fe5:	8b 45 08             	mov    0x8(%ebp),%eax
81003fe8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003feb:	5b                   	pop    %ebx
81003fec:	5f                   	pop    %edi
81003fed:	5e                   	pop    %esi
81003fee:	c9                   	leave  
81003fef:	c3                   	ret    

81003ff0 <memset>:
81003ff0:	55                   	push   %ebp
81003ff1:	89 e5                	mov    %esp,%ebp
81003ff3:	57                   	push   %edi
81003ff4:	8b 7d 08             	mov    0x8(%ebp),%edi
81003ff7:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003ffb:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003ffe:	fc                   	cld    
81003fff:	83 f9 10             	cmp    $0x10,%ecx
81004002:	76 69                	jbe    8100406d <memset+0x7d>
81004004:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100400a:	74 4c                	je     81004058 <memset+0x68>
8100400c:	88 07                	mov    %al,(%edi)
8100400e:	47                   	inc    %edi
8100400f:	49                   	dec    %ecx
81004010:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004016:	74 40                	je     81004058 <memset+0x68>
81004018:	88 07                	mov    %al,(%edi)
8100401a:	47                   	inc    %edi
8100401b:	49                   	dec    %ecx
8100401c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004022:	74 34                	je     81004058 <memset+0x68>
81004024:	88 07                	mov    %al,(%edi)
81004026:	47                   	inc    %edi
81004027:	49                   	dec    %ecx
81004028:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100402e:	74 28                	je     81004058 <memset+0x68>
81004030:	88 07                	mov    %al,(%edi)
81004032:	47                   	inc    %edi
81004033:	49                   	dec    %ecx
81004034:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100403a:	74 1c                	je     81004058 <memset+0x68>
8100403c:	88 07                	mov    %al,(%edi)
8100403e:	47                   	inc    %edi
8100403f:	49                   	dec    %ecx
81004040:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004046:	74 10                	je     81004058 <memset+0x68>
81004048:	88 07                	mov    %al,(%edi)
8100404a:	47                   	inc    %edi
8100404b:	49                   	dec    %ecx
8100404c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004052:	74 04                	je     81004058 <memset+0x68>
81004054:	88 07                	mov    %al,(%edi)
81004056:	47                   	inc    %edi
81004057:	49                   	dec    %ecx
81004058:	88 c4                	mov    %al,%ah
8100405a:	89 c2                	mov    %eax,%edx
8100405c:	c1 e2 10             	shl    $0x10,%edx
8100405f:	09 d0                	or     %edx,%eax
81004061:	89 ca                	mov    %ecx,%edx
81004063:	c1 e9 02             	shr    $0x2,%ecx
81004066:	83 e2 03             	and    $0x3,%edx
81004069:	f3 ab                	rep stos %eax,%es:(%edi)
8100406b:	89 d1                	mov    %edx,%ecx
8100406d:	f3 aa                	rep stos %al,%es:(%edi)
8100406f:	8b 45 08             	mov    0x8(%ebp),%eax
81004072:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004075:	5f                   	pop    %edi
81004076:	c9                   	leave  
81004077:	c3                   	ret    

81004078 <__malloc_lock>:
81004078:	55                   	push   %ebp
81004079:	89 e5                	mov    %esp,%ebp
8100407b:	90                   	nop
8100407c:	5d                   	pop    %ebp
8100407d:	c3                   	ret    

8100407e <__malloc_unlock>:
8100407e:	55                   	push   %ebp
8100407f:	89 e5                	mov    %esp,%ebp
81004081:	90                   	nop
81004082:	5d                   	pop    %ebp
81004083:	c3                   	ret    

81004084 <__sprint_r>:
81004084:	55                   	push   %ebp
81004085:	89 e5                	mov    %esp,%ebp
81004087:	56                   	push   %esi
81004088:	53                   	push   %ebx
81004089:	83 ec 10             	sub    $0x10,%esp
8100408c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100408f:	be 00 00 00 00       	mov    $0x0,%esi
81004094:	8b 43 08             	mov    0x8(%ebx),%eax
81004097:	85 c0                	test   %eax,%eax
81004099:	75 11                	jne    810040ac <__sprint_r+0x28>
8100409b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810040a2:	b8 00 00 00 00       	mov    $0x0,%eax
810040a7:	e9 ad 00 00 00       	jmp    81004159 <__sprint_r+0xd5>
810040ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810040af:	8b 40 64             	mov    0x64(%eax),%eax
810040b2:	25 00 20 00 00       	and    $0x2000,%eax
810040b7:	85 c0                	test   %eax,%eax
810040b9:	74 7a                	je     81004135 <__sprint_r+0xb1>
810040bb:	8b 03                	mov    (%ebx),%eax
810040bd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040c0:	eb 6a                	jmp    8100412c <__sprint_r+0xa8>
810040c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040c5:	8b 00                	mov    (%eax),%eax
810040c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810040ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040cd:	8b 40 04             	mov    0x4(%eax),%eax
810040d0:	c1 e8 02             	shr    $0x2,%eax
810040d3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810040d6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810040dd:	eb 33                	jmp    81004112 <__sprint_r+0x8e>
810040df:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040e2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810040e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040ec:	01 d0                	add    %edx,%eax
810040ee:	8b 00                	mov    (%eax),%eax
810040f0:	83 ec 04             	sub    $0x4,%esp
810040f3:	ff 75 0c             	push   0xc(%ebp)
810040f6:	50                   	push   %eax
810040f7:	ff 75 08             	push   0x8(%ebp)
810040fa:	e8 8c 20 00 00       	call   8100618b <_fputwc_r>
810040ff:	83 c4 10             	add    $0x10,%esp
81004102:	83 f8 ff             	cmp    $0xffffffff,%eax
81004105:	75 07                	jne    8100410e <__sprint_r+0x8a>
81004107:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100410c:	eb 3b                	jmp    81004149 <__sprint_r+0xc5>
8100410e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004112:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004115:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004118:	7c c5                	jl     810040df <__sprint_r+0x5b>
8100411a:	8b 43 08             	mov    0x8(%ebx),%eax
8100411d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004120:	c1 e2 02             	shl    $0x2,%edx
81004123:	29 d0                	sub    %edx,%eax
81004125:	89 43 08             	mov    %eax,0x8(%ebx)
81004128:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100412c:	8b 43 08             	mov    0x8(%ebx),%eax
8100412f:	85 c0                	test   %eax,%eax
81004131:	75 8f                	jne    810040c2 <__sprint_r+0x3e>
81004133:	eb 14                	jmp    81004149 <__sprint_r+0xc5>
81004135:	83 ec 04             	sub    $0x4,%esp
81004138:	53                   	push   %ebx
81004139:	ff 75 0c             	push   0xc(%ebp)
8100413c:	ff 75 08             	push   0x8(%ebp)
8100413f:	e8 e6 20 00 00       	call   8100622a <__sfvwrite_r>
81004144:	83 c4 10             	add    $0x10,%esp
81004147:	89 c6                	mov    %eax,%esi
81004149:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004150:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004157:	89 f0                	mov    %esi,%eax
81004159:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100415c:	5b                   	pop    %ebx
8100415d:	5e                   	pop    %esi
8100415e:	5d                   	pop    %ebp
8100415f:	c3                   	ret    

81004160 <__sfputc_r>:
81004160:	55                   	push   %ebp
81004161:	89 e5                	mov    %esp,%ebp
81004163:	83 ec 08             	sub    $0x8,%esp
81004166:	8b 45 10             	mov    0x10(%ebp),%eax
81004169:	8b 40 08             	mov    0x8(%eax),%eax
8100416c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100416f:	8b 45 10             	mov    0x10(%ebp),%eax
81004172:	89 50 08             	mov    %edx,0x8(%eax)
81004175:	8b 45 10             	mov    0x10(%ebp),%eax
81004178:	8b 40 08             	mov    0x8(%eax),%eax
8100417b:	85 c0                	test   %eax,%eax
8100417d:	79 17                	jns    81004196 <__sfputc_r+0x36>
8100417f:	8b 45 10             	mov    0x10(%ebp),%eax
81004182:	8b 50 08             	mov    0x8(%eax),%edx
81004185:	8b 45 10             	mov    0x10(%ebp),%eax
81004188:	8b 40 18             	mov    0x18(%eax),%eax
8100418b:	39 c2                	cmp    %eax,%edx
8100418d:	7c 21                	jl     810041b0 <__sfputc_r+0x50>
8100418f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004192:	3c 0a                	cmp    $0xa,%al
81004194:	74 1a                	je     810041b0 <__sfputc_r+0x50>
81004196:	8b 45 10             	mov    0x10(%ebp),%eax
81004199:	8b 00                	mov    (%eax),%eax
8100419b:	8d 48 01             	lea    0x1(%eax),%ecx
8100419e:	8b 55 10             	mov    0x10(%ebp),%edx
810041a1:	89 0a                	mov    %ecx,(%edx)
810041a3:	8b 55 0c             	mov    0xc(%ebp),%edx
810041a6:	88 10                	mov    %dl,(%eax)
810041a8:	0f b6 00             	movzbl (%eax),%eax
810041ab:	0f b6 c0             	movzbl %al,%eax
810041ae:	eb 14                	jmp    810041c4 <__sfputc_r+0x64>
810041b0:	83 ec 04             	sub    $0x4,%esp
810041b3:	ff 75 10             	push   0x10(%ebp)
810041b6:	ff 75 0c             	push   0xc(%ebp)
810041b9:	ff 75 08             	push   0x8(%ebp)
810041bc:	e8 6e 18 00 00       	call   81005a2f <__swbuf_r>
810041c1:	83 c4 10             	add    $0x10,%esp
810041c4:	c9                   	leave  
810041c5:	c3                   	ret    

810041c6 <__sfputs_r>:
810041c6:	55                   	push   %ebp
810041c7:	89 e5                	mov    %esp,%ebp
810041c9:	53                   	push   %ebx
810041ca:	83 ec 14             	sub    $0x14,%esp
810041cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810041d0:	8b 40 64             	mov    0x64(%eax),%eax
810041d3:	25 00 20 00 00       	and    $0x2000,%eax
810041d8:	85 c0                	test   %eax,%eax
810041da:	74 4c                	je     81004228 <__sfputs_r+0x62>
810041dc:	8b 45 10             	mov    0x10(%ebp),%eax
810041df:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041e2:	bb 00 00 00 00       	mov    $0x0,%ebx
810041e7:	eb 31                	jmp    8100421a <__sfputs_r+0x54>
810041e9:	89 d8                	mov    %ebx,%eax
810041eb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810041f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041f5:	01 d0                	add    %edx,%eax
810041f7:	8b 00                	mov    (%eax),%eax
810041f9:	83 ec 04             	sub    $0x4,%esp
810041fc:	ff 75 0c             	push   0xc(%ebp)
810041ff:	50                   	push   %eax
81004200:	ff 75 08             	push   0x8(%ebp)
81004203:	e8 83 1f 00 00       	call   8100618b <_fputwc_r>
81004208:	83 c4 10             	add    $0x10,%esp
8100420b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100420e:	75 07                	jne    81004217 <__sfputs_r+0x51>
81004210:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004215:	eb 52                	jmp    81004269 <__sfputs_r+0xa3>
81004217:	83 c3 01             	add    $0x1,%ebx
8100421a:	8b 45 14             	mov    0x14(%ebp),%eax
8100421d:	c1 e8 02             	shr    $0x2,%eax
81004220:	89 da                	mov    %ebx,%edx
81004222:	39 d0                	cmp    %edx,%eax
81004224:	77 c3                	ja     810041e9 <__sfputs_r+0x23>
81004226:	eb 3c                	jmp    81004264 <__sfputs_r+0x9e>
81004228:	bb 00 00 00 00       	mov    $0x0,%ebx
8100422d:	eb 2e                	jmp    8100425d <__sfputs_r+0x97>
8100422f:	89 da                	mov    %ebx,%edx
81004231:	8b 45 10             	mov    0x10(%ebp),%eax
81004234:	01 d0                	add    %edx,%eax
81004236:	0f b6 00             	movzbl (%eax),%eax
81004239:	0f be c0             	movsbl %al,%eax
8100423c:	83 ec 04             	sub    $0x4,%esp
8100423f:	ff 75 0c             	push   0xc(%ebp)
81004242:	50                   	push   %eax
81004243:	ff 75 08             	push   0x8(%ebp)
81004246:	e8 15 ff ff ff       	call   81004160 <__sfputc_r>
8100424b:	83 c4 10             	add    $0x10,%esp
8100424e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004251:	75 07                	jne    8100425a <__sfputs_r+0x94>
81004253:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004258:	eb 0f                	jmp    81004269 <__sfputs_r+0xa3>
8100425a:	83 c3 01             	add    $0x1,%ebx
8100425d:	89 d8                	mov    %ebx,%eax
8100425f:	39 45 14             	cmp    %eax,0x14(%ebp)
81004262:	77 cb                	ja     8100422f <__sfputs_r+0x69>
81004264:	b8 00 00 00 00       	mov    $0x0,%eax
81004269:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100426c:	c9                   	leave  
8100426d:	c3                   	ret    

8100426e <vfiprintf>:
8100426e:	55                   	push   %ebp
8100426f:	89 e5                	mov    %esp,%ebp
81004271:	83 ec 18             	sub    $0x18,%esp
81004274:	a1 84 83 00 81       	mov    0x81008384,%eax
81004279:	ff 75 10             	push   0x10(%ebp)
8100427c:	ff 75 0c             	push   0xc(%ebp)
8100427f:	ff 75 08             	push   0x8(%ebp)
81004282:	50                   	push   %eax
81004283:	e8 0b 00 00 00       	call   81004293 <_vfiprintf_r>
81004288:	83 c4 10             	add    $0x10,%esp
8100428b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100428e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004291:	c9                   	leave  
81004292:	c3                   	ret    

81004293 <_vfiprintf_r>:
81004293:	55                   	push   %ebp
81004294:	89 e5                	mov    %esp,%ebp
81004296:	57                   	push   %edi
81004297:	56                   	push   %esi
81004298:	53                   	push   %ebx
81004299:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100429f:	c7 45 e4 c6 41 00 81 	movl   $0x810041c6,-0x1c(%ebp)
810042a6:	8b 45 08             	mov    0x8(%ebp),%eax
810042a9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810042ac:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810042b0:	74 18                	je     810042ca <_vfiprintf_r+0x37>
810042b2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810042b5:	8b 40 38             	mov    0x38(%eax),%eax
810042b8:	85 c0                	test   %eax,%eax
810042ba:	75 0e                	jne    810042ca <_vfiprintf_r+0x37>
810042bc:	83 ec 0c             	sub    $0xc,%esp
810042bf:	ff 75 e0             	push   -0x20(%ebp)
810042c2:	e8 b8 d2 ff ff       	call   8100157f <__sinit>
810042c7:	83 c4 10             	add    $0x10,%esp
810042ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810042cd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810042d1:	98                   	cwtl   
810042d2:	83 e0 08             	and    $0x8,%eax
810042d5:	85 c0                	test   %eax,%eax
810042d7:	74 0a                	je     810042e3 <_vfiprintf_r+0x50>
810042d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042dc:	8b 40 10             	mov    0x10(%eax),%eax
810042df:	85 c0                	test   %eax,%eax
810042e1:	75 1f                	jne    81004302 <_vfiprintf_r+0x6f>
810042e3:	83 ec 08             	sub    $0x8,%esp
810042e6:	ff 75 0c             	push   0xc(%ebp)
810042e9:	ff 75 08             	push   0x8(%ebp)
810042ec:	e8 b7 18 00 00       	call   81005ba8 <__swsetup_r>
810042f1:	83 c4 10             	add    $0x10,%esp
810042f4:	85 c0                	test   %eax,%eax
810042f6:	74 0a                	je     81004302 <_vfiprintf_r+0x6f>
810042f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810042fd:	e9 df 02 00 00       	jmp    810045e1 <_vfiprintf_r+0x34e>
81004302:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004305:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100430c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004310:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004314:	8b 45 14             	mov    0x14(%ebp),%eax
81004317:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100431d:	89 de                	mov    %ebx,%esi
8100431f:	eb 03                	jmp    81004324 <_vfiprintf_r+0x91>
81004321:	83 c3 01             	add    $0x1,%ebx
81004324:	0f b6 03             	movzbl (%ebx),%eax
81004327:	84 c0                	test   %al,%al
81004329:	74 07                	je     81004332 <_vfiprintf_r+0x9f>
8100432b:	0f b6 03             	movzbl (%ebx),%eax
8100432e:	3c 25                	cmp    $0x25,%al
81004330:	75 ef                	jne    81004321 <_vfiprintf_r+0x8e>
81004332:	89 d8                	mov    %ebx,%eax
81004334:	29 f0                	sub    %esi,%eax
81004336:	85 c0                	test   %eax,%eax
81004338:	74 2b                	je     81004365 <_vfiprintf_r+0xd2>
8100433a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004340:	50                   	push   %eax
81004341:	56                   	push   %esi
81004342:	ff 75 0c             	push   0xc(%ebp)
81004345:	ff 75 08             	push   0x8(%ebp)
81004348:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100434b:	ff d0                	call   *%eax
8100434d:	83 c4 10             	add    $0x10,%esp
81004350:	83 f8 ff             	cmp    $0xffffffff,%eax
81004353:	0f 84 68 02 00 00    	je     810045c1 <_vfiprintf_r+0x32e>
81004359:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100435c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004362:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004365:	0f b6 03             	movzbl (%ebx),%eax
81004368:	84 c0                	test   %al,%al
8100436a:	0f 84 54 02 00 00    	je     810045c4 <_vfiprintf_r+0x331>
81004370:	83 c3 01             	add    $0x1,%ebx
81004373:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100437a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004381:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004388:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100438f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004393:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100439a:	c7 45 dc dc 7b 00 81 	movl   $0x81007bdc,-0x24(%ebp)
810043a1:	eb 1b                	jmp    810043be <_vfiprintf_r+0x12b>
810043a3:	8b 55 80             	mov    -0x80(%ebp),%edx
810043a6:	89 f0                	mov    %esi,%eax
810043a8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810043ab:	be 01 00 00 00       	mov    $0x1,%esi
810043b0:	89 c1                	mov    %eax,%ecx
810043b2:	d3 e6                	shl    %cl,%esi
810043b4:	89 f0                	mov    %esi,%eax
810043b6:	09 d0                	or     %edx,%eax
810043b8:	89 45 80             	mov    %eax,-0x80(%ebp)
810043bb:	83 c3 01             	add    $0x1,%ebx
810043be:	0f b6 03             	movzbl (%ebx),%eax
810043c1:	0f be c0             	movsbl %al,%eax
810043c4:	83 ec 04             	sub    $0x4,%esp
810043c7:	6a 05                	push   $0x5
810043c9:	50                   	push   %eax
810043ca:	ff 75 dc             	push   -0x24(%ebp)
810043cd:	e8 ee fa ff ff       	call   81003ec0 <memchr>
810043d2:	83 c4 10             	add    $0x10,%esp
810043d5:	89 c6                	mov    %eax,%esi
810043d7:	85 f6                	test   %esi,%esi
810043d9:	75 c8                	jne    810043a3 <_vfiprintf_r+0x110>
810043db:	8b 45 80             	mov    -0x80(%ebp),%eax
810043de:	83 e0 10             	and    $0x10,%eax
810043e1:	85 c0                	test   %eax,%eax
810043e3:	74 04                	je     810043e9 <_vfiprintf_r+0x156>
810043e5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810043e9:	8b 45 80             	mov    -0x80(%ebp),%eax
810043ec:	83 e0 08             	and    $0x8,%eax
810043ef:	85 c0                	test   %eax,%eax
810043f1:	74 04                	je     810043f7 <_vfiprintf_r+0x164>
810043f3:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810043f7:	0f b6 03             	movzbl (%ebx),%eax
810043fa:	3c 2a                	cmp    $0x2a,%al
810043fc:	75 50                	jne    8100444e <_vfiprintf_r+0x1bb>
810043fe:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004404:	8d 50 04             	lea    0x4(%eax),%edx
81004407:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100440d:	8b 00                	mov    (%eax),%eax
8100440f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004412:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004415:	85 c0                	test   %eax,%eax
81004417:	79 11                	jns    8100442a <_vfiprintf_r+0x197>
81004419:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100441c:	f7 d8                	neg    %eax
8100441e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004421:	8b 45 80             	mov    -0x80(%ebp),%eax
81004424:	83 c8 02             	or     $0x2,%eax
81004427:	89 45 80             	mov    %eax,-0x80(%ebp)
8100442a:	83 c3 01             	add    $0x1,%ebx
8100442d:	eb 2d                	jmp    8100445c <_vfiprintf_r+0x1c9>
8100442f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004432:	89 d0                	mov    %edx,%eax
81004434:	c1 e0 02             	shl    $0x2,%eax
81004437:	01 d0                	add    %edx,%eax
81004439:	01 c0                	add    %eax,%eax
8100443b:	89 c2                	mov    %eax,%edx
8100443d:	0f b6 03             	movzbl (%ebx),%eax
81004440:	0f be c0             	movsbl %al,%eax
81004443:	83 e8 30             	sub    $0x30,%eax
81004446:	01 d0                	add    %edx,%eax
81004448:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100444b:	83 c3 01             	add    $0x1,%ebx
8100444e:	0f b6 03             	movzbl (%ebx),%eax
81004451:	0f be c0             	movsbl %al,%eax
81004454:	83 e8 30             	sub    $0x30,%eax
81004457:	83 f8 09             	cmp    $0x9,%eax
8100445a:	76 d3                	jbe    8100442f <_vfiprintf_r+0x19c>
8100445c:	0f b6 03             	movzbl (%ebx),%eax
8100445f:	3c 2e                	cmp    $0x2e,%al
81004461:	75 67                	jne    810044ca <_vfiprintf_r+0x237>
81004463:	83 c3 01             	add    $0x1,%ebx
81004466:	0f b6 03             	movzbl (%ebx),%eax
81004469:	3c 2a                	cmp    $0x2a,%al
8100446b:	75 27                	jne    81004494 <_vfiprintf_r+0x201>
8100446d:	83 c3 01             	add    $0x1,%ebx
81004470:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004476:	8d 50 04             	lea    0x4(%eax),%edx
81004479:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100447f:	8b 00                	mov    (%eax),%eax
81004481:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004484:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004487:	85 c0                	test   %eax,%eax
81004489:	79 3f                	jns    810044ca <_vfiprintf_r+0x237>
8100448b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004492:	eb 36                	jmp    810044ca <_vfiprintf_r+0x237>
81004494:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100449b:	eb 1f                	jmp    810044bc <_vfiprintf_r+0x229>
8100449d:	8b 55 84             	mov    -0x7c(%ebp),%edx
810044a0:	89 d0                	mov    %edx,%eax
810044a2:	c1 e0 02             	shl    $0x2,%eax
810044a5:	01 d0                	add    %edx,%eax
810044a7:	01 c0                	add    %eax,%eax
810044a9:	89 c2                	mov    %eax,%edx
810044ab:	0f b6 03             	movzbl (%ebx),%eax
810044ae:	0f be c0             	movsbl %al,%eax
810044b1:	83 e8 30             	sub    $0x30,%eax
810044b4:	01 d0                	add    %edx,%eax
810044b6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810044b9:	83 c3 01             	add    $0x1,%ebx
810044bc:	0f b6 03             	movzbl (%ebx),%eax
810044bf:	0f be c0             	movsbl %al,%eax
810044c2:	83 e8 30             	sub    $0x30,%eax
810044c5:	83 f8 09             	cmp    $0x9,%eax
810044c8:	76 d3                	jbe    8100449d <_vfiprintf_r+0x20a>
810044ca:	c7 45 dc e2 7b 00 81 	movl   $0x81007be2,-0x24(%ebp)
810044d1:	0f b6 03             	movzbl (%ebx),%eax
810044d4:	0f be c0             	movsbl %al,%eax
810044d7:	83 ec 04             	sub    $0x4,%esp
810044da:	6a 03                	push   $0x3
810044dc:	50                   	push   %eax
810044dd:	ff 75 dc             	push   -0x24(%ebp)
810044e0:	e8 db f9 ff ff       	call   81003ec0 <memchr>
810044e5:	83 c4 10             	add    $0x10,%esp
810044e8:	89 c6                	mov    %eax,%esi
810044ea:	85 f6                	test   %esi,%esi
810044ec:	74 1b                	je     81004509 <_vfiprintf_r+0x276>
810044ee:	8b 55 80             	mov    -0x80(%ebp),%edx
810044f1:	89 f0                	mov    %esi,%eax
810044f3:	2b 45 dc             	sub    -0x24(%ebp),%eax
810044f6:	be 40 00 00 00       	mov    $0x40,%esi
810044fb:	89 c1                	mov    %eax,%ecx
810044fd:	d3 e6                	shl    %cl,%esi
810044ff:	89 f0                	mov    %esi,%eax
81004501:	09 d0                	or     %edx,%eax
81004503:	89 45 80             	mov    %eax,-0x80(%ebp)
81004506:	83 c3 01             	add    $0x1,%ebx
81004509:	89 d8                	mov    %ebx,%eax
8100450b:	8d 58 01             	lea    0x1(%eax),%ebx
8100450e:	0f b6 00             	movzbl (%eax),%eax
81004511:	88 45 98             	mov    %al,-0x68(%ebp)
81004514:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004518:	0f be c0             	movsbl %al,%eax
8100451b:	83 ec 04             	sub    $0x4,%esp
8100451e:	6a 06                	push   $0x6
81004520:	50                   	push   %eax
81004521:	68 e6 7b 00 81       	push   $0x81007be6
81004526:	e8 95 f9 ff ff       	call   81003ec0 <memchr>
8100452b:	83 c4 10             	add    $0x10,%esp
8100452e:	89 c6                	mov    %eax,%esi
81004530:	85 f6                	test   %esi,%esi
81004532:	74 5a                	je     8100458e <_vfiprintf_r+0x2fb>
81004534:	b8 00 00 00 00       	mov    $0x0,%eax
81004539:	85 c0                	test   %eax,%eax
8100453b:	75 2e                	jne    8100456b <_vfiprintf_r+0x2d8>
8100453d:	8b 45 80             	mov    -0x80(%ebp),%eax
81004540:	25 00 01 00 00       	and    $0x100,%eax
81004545:	85 c0                	test   %eax,%eax
81004547:	74 11                	je     8100455a <_vfiprintf_r+0x2c7>
81004549:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100454f:	83 c0 0c             	add    $0xc,%eax
81004552:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004558:	eb 55                	jmp    810045af <_vfiprintf_r+0x31c>
8100455a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004560:	83 c0 08             	add    $0x8,%eax
81004563:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004569:	eb 44                	jmp    810045af <_vfiprintf_r+0x31c>
8100456b:	83 ec 0c             	sub    $0xc,%esp
8100456e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004574:	50                   	push   %eax
81004575:	ff 75 e4             	push   -0x1c(%ebp)
81004578:	ff 75 0c             	push   0xc(%ebp)
8100457b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100457e:	50                   	push   %eax
8100457f:	ff 75 08             	push   0x8(%ebp)
81004582:	e8 79 ba ff 7e       	call   0 <do_help-0x81000000>
81004587:	83 c4 20             	add    $0x20,%esp
8100458a:	89 c7                	mov    %eax,%edi
8100458c:	eb 21                	jmp    810045af <_vfiprintf_r+0x31c>
8100458e:	83 ec 0c             	sub    $0xc,%esp
81004591:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004597:	50                   	push   %eax
81004598:	ff 75 e4             	push   -0x1c(%ebp)
8100459b:	ff 75 0c             	push   0xc(%ebp)
8100459e:	8d 45 80             	lea    -0x80(%ebp),%eax
810045a1:	50                   	push   %eax
810045a2:	ff 75 08             	push   0x8(%ebp)
810045a5:	e8 da 01 00 00       	call   81004784 <_printf_i>
810045aa:	83 c4 20             	add    $0x20,%esp
810045ad:	89 c7                	mov    %eax,%edi
810045af:	83 ff ff             	cmp    $0xffffffff,%edi
810045b2:	74 13                	je     810045c7 <_vfiprintf_r+0x334>
810045b4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810045b7:	01 f8                	add    %edi,%eax
810045b9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810045bc:	e9 5c fd ff ff       	jmp    8100431d <_vfiprintf_r+0x8a>
810045c1:	90                   	nop
810045c2:	eb 04                	jmp    810045c8 <_vfiprintf_r+0x335>
810045c4:	90                   	nop
810045c5:	eb 01                	jmp    810045c8 <_vfiprintf_r+0x335>
810045c7:	90                   	nop
810045c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810045cb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810045cf:	98                   	cwtl   
810045d0:	83 e0 40             	and    $0x40,%eax
810045d3:	85 c0                	test   %eax,%eax
810045d5:	75 05                	jne    810045dc <_vfiprintf_r+0x349>
810045d7:	8b 45 94             	mov    -0x6c(%ebp),%eax
810045da:	eb 05                	jmp    810045e1 <_vfiprintf_r+0x34e>
810045dc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810045e1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810045e4:	5b                   	pop    %ebx
810045e5:	5e                   	pop    %esi
810045e6:	5f                   	pop    %edi
810045e7:	5d                   	pop    %ebp
810045e8:	c3                   	ret    

810045e9 <_printf_common>:
810045e9:	55                   	push   %ebp
810045ea:	89 e5                	mov    %esp,%ebp
810045ec:	83 ec 18             	sub    $0x18,%esp
810045ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810045f2:	8b 50 10             	mov    0x10(%eax),%edx
810045f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810045f8:	8b 40 08             	mov    0x8(%eax),%eax
810045fb:	39 c2                	cmp    %eax,%edx
810045fd:	0f 4c d0             	cmovl  %eax,%edx
81004600:	8b 45 10             	mov    0x10(%ebp),%eax
81004603:	89 10                	mov    %edx,(%eax)
81004605:	8b 45 0c             	mov    0xc(%ebp),%eax
81004608:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100460c:	84 c0                	test   %al,%al
8100460e:	74 0d                	je     8100461d <_printf_common+0x34>
81004610:	8b 45 10             	mov    0x10(%ebp),%eax
81004613:	8b 00                	mov    (%eax),%eax
81004615:	8d 50 01             	lea    0x1(%eax),%edx
81004618:	8b 45 10             	mov    0x10(%ebp),%eax
8100461b:	89 10                	mov    %edx,(%eax)
8100461d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004620:	8b 00                	mov    (%eax),%eax
81004622:	83 e0 20             	and    $0x20,%eax
81004625:	85 c0                	test   %eax,%eax
81004627:	74 0d                	je     81004636 <_printf_common+0x4d>
81004629:	8b 45 10             	mov    0x10(%ebp),%eax
8100462c:	8b 00                	mov    (%eax),%eax
8100462e:	8d 50 02             	lea    0x2(%eax),%edx
81004631:	8b 45 10             	mov    0x10(%ebp),%eax
81004634:	89 10                	mov    %edx,(%eax)
81004636:	8b 45 0c             	mov    0xc(%ebp),%eax
81004639:	8b 00                	mov    (%eax),%eax
8100463b:	83 e0 06             	and    $0x6,%eax
8100463e:	85 c0                	test   %eax,%eax
81004640:	75 41                	jne    81004683 <_printf_common+0x9a>
81004642:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004649:	eb 24                	jmp    8100466f <_printf_common+0x86>
8100464b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100464e:	83 c0 19             	add    $0x19,%eax
81004651:	6a 01                	push   $0x1
81004653:	50                   	push   %eax
81004654:	ff 75 14             	push   0x14(%ebp)
81004657:	ff 75 08             	push   0x8(%ebp)
8100465a:	8b 45 18             	mov    0x18(%ebp),%eax
8100465d:	ff d0                	call   *%eax
8100465f:	83 c4 10             	add    $0x10,%esp
81004662:	83 f8 ff             	cmp    $0xffffffff,%eax
81004665:	0f 84 0b 01 00 00    	je     81004776 <_printf_common+0x18d>
8100466b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100466f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004672:	8b 50 0c             	mov    0xc(%eax),%edx
81004675:	8b 45 10             	mov    0x10(%ebp),%eax
81004678:	8b 08                	mov    (%eax),%ecx
8100467a:	89 d0                	mov    %edx,%eax
8100467c:	29 c8                	sub    %ecx,%eax
8100467e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004681:	7c c8                	jl     8100464b <_printf_common+0x62>
81004683:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100468a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100468d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004691:	84 c0                	test   %al,%al
81004693:	74 04                	je     81004699 <_printf_common+0xb0>
81004695:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004699:	8b 45 0c             	mov    0xc(%ebp),%eax
8100469c:	8b 00                	mov    (%eax),%eax
8100469e:	83 e0 20             	and    $0x20,%eax
810046a1:	85 c0                	test   %eax,%eax
810046a3:	74 28                	je     810046cd <_printf_common+0xe4>
810046a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046a8:	8d 50 01             	lea    0x1(%eax),%edx
810046ab:	89 55 f4             	mov    %edx,-0xc(%ebp)
810046ae:	8b 55 0c             	mov    0xc(%ebp),%edx
810046b1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
810046b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046b9:	8d 50 01             	lea    0x1(%eax),%edx
810046bc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810046bf:	8b 55 0c             	mov    0xc(%ebp),%edx
810046c2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
810046c6:	8b 55 0c             	mov    0xc(%ebp),%edx
810046c9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
810046cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046d0:	8b 55 0c             	mov    0xc(%ebp),%edx
810046d3:	83 c2 43             	add    $0x43,%edx
810046d6:	50                   	push   %eax
810046d7:	52                   	push   %edx
810046d8:	ff 75 14             	push   0x14(%ebp)
810046db:	ff 75 08             	push   0x8(%ebp)
810046de:	8b 45 18             	mov    0x18(%ebp),%eax
810046e1:	ff d0                	call   *%eax
810046e3:	83 c4 10             	add    $0x10,%esp
810046e6:	83 f8 ff             	cmp    $0xffffffff,%eax
810046e9:	0f 84 8a 00 00 00    	je     81004779 <_printf_common+0x190>
810046ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810046f2:	8b 50 0c             	mov    0xc(%eax),%edx
810046f5:	8b 45 10             	mov    0x10(%ebp),%eax
810046f8:	8b 08                	mov    (%eax),%ecx
810046fa:	89 d0                	mov    %edx,%eax
810046fc:	29 c8                	sub    %ecx,%eax
810046fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004701:	8b 45 0c             	mov    0xc(%ebp),%eax
81004704:	8b 00                	mov    (%eax),%eax
81004706:	83 e0 06             	and    $0x6,%eax
81004709:	83 f8 04             	cmp    $0x4,%eax
8100470c:	75 06                	jne    81004714 <_printf_common+0x12b>
8100470e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004712:	79 07                	jns    8100471b <_printf_common+0x132>
81004714:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100471b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100471e:	8b 50 08             	mov    0x8(%eax),%edx
81004721:	8b 45 0c             	mov    0xc(%ebp),%eax
81004724:	8b 40 10             	mov    0x10(%eax),%eax
81004727:	39 c2                	cmp    %eax,%edx
81004729:	7e 13                	jle    8100473e <_printf_common+0x155>
8100472b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100472e:	8b 50 08             	mov    0x8(%eax),%edx
81004731:	8b 45 0c             	mov    0xc(%ebp),%eax
81004734:	8b 48 10             	mov    0x10(%eax),%ecx
81004737:	89 d0                	mov    %edx,%eax
81004739:	29 c8                	sub    %ecx,%eax
8100473b:	01 45 f4             	add    %eax,-0xc(%ebp)
8100473e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004745:	eb 20                	jmp    81004767 <_printf_common+0x17e>
81004747:	8b 45 0c             	mov    0xc(%ebp),%eax
8100474a:	83 c0 1a             	add    $0x1a,%eax
8100474d:	6a 01                	push   $0x1
8100474f:	50                   	push   %eax
81004750:	ff 75 14             	push   0x14(%ebp)
81004753:	ff 75 08             	push   0x8(%ebp)
81004756:	8b 45 18             	mov    0x18(%ebp),%eax
81004759:	ff d0                	call   *%eax
8100475b:	83 c4 10             	add    $0x10,%esp
8100475e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004761:	74 19                	je     8100477c <_printf_common+0x193>
81004763:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004767:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100476a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100476d:	7c d8                	jl     81004747 <_printf_common+0x15e>
8100476f:	b8 00 00 00 00       	mov    $0x0,%eax
81004774:	eb 0c                	jmp    81004782 <_printf_common+0x199>
81004776:	90                   	nop
81004777:	eb 04                	jmp    8100477d <_printf_common+0x194>
81004779:	90                   	nop
8100477a:	eb 01                	jmp    8100477d <_printf_common+0x194>
8100477c:	90                   	nop
8100477d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004782:	c9                   	leave  
81004783:	c3                   	ret    

81004784 <_printf_i>:
81004784:	55                   	push   %ebp
81004785:	89 e5                	mov    %esp,%ebp
81004787:	53                   	push   %ebx
81004788:	83 ec 24             	sub    $0x24,%esp
8100478b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100478e:	83 c0 1b             	add    $0x1b,%eax
81004791:	83 c0 28             	add    $0x28,%eax
81004794:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004797:	c7 45 e8 f0 7b 00 81 	movl   $0x81007bf0,-0x18(%ebp)
8100479e:	8b 45 0c             	mov    0xc(%ebp),%eax
810047a1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810047a5:	0f be c0             	movsbl %al,%eax
810047a8:	85 c0                	test   %eax,%eax
810047aa:	0f 84 00 03 00 00    	je     81004ab0 <_printf_i+0x32c>
810047b0:	85 c0                	test   %eax,%eax
810047b2:	0f 88 52 03 00 00    	js     81004b0a <_printf_i+0x386>
810047b8:	83 f8 78             	cmp    $0x78,%eax
810047bb:	0f 8f 49 03 00 00    	jg     81004b0a <_printf_i+0x386>
810047c1:	83 f8 58             	cmp    $0x58,%eax
810047c4:	0f 8c 40 03 00 00    	jl     81004b0a <_printf_i+0x386>
810047ca:	83 e8 58             	sub    $0x58,%eax
810047cd:	83 f8 20             	cmp    $0x20,%eax
810047d0:	0f 87 34 03 00 00    	ja     81004b0a <_printf_i+0x386>
810047d6:	8b 04 85 14 7c 00 81 	mov    -0x7eff83ec(,%eax,4),%eax
810047dd:	ff e0                	jmp    *%eax
810047df:	8b 45 18             	mov    0x18(%ebp),%eax
810047e2:	8b 00                	mov    (%eax),%eax
810047e4:	8d 48 04             	lea    0x4(%eax),%ecx
810047e7:	8b 55 18             	mov    0x18(%ebp),%edx
810047ea:	89 0a                	mov    %ecx,(%edx)
810047ec:	8b 00                	mov    (%eax),%eax
810047ee:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810047f2:	89 c2                	mov    %eax,%edx
810047f4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810047f7:	88 10                	mov    %dl,(%eax)
810047f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810047fc:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004803:	e9 1c 03 00 00       	jmp    81004b24 <_printf_i+0x3a0>
81004808:	8b 45 0c             	mov    0xc(%ebp),%eax
8100480b:	8b 00                	mov    (%eax),%eax
8100480d:	25 80 00 00 00       	and    $0x80,%eax
81004812:	85 c0                	test   %eax,%eax
81004814:	74 11                	je     81004827 <_printf_i+0xa3>
81004816:	8b 45 18             	mov    0x18(%ebp),%eax
81004819:	8b 00                	mov    (%eax),%eax
8100481b:	8d 48 04             	lea    0x4(%eax),%ecx
8100481e:	8b 55 18             	mov    0x18(%ebp),%edx
81004821:	89 0a                	mov    %ecx,(%edx)
81004823:	8b 00                	mov    (%eax),%eax
81004825:	eb 2d                	jmp    81004854 <_printf_i+0xd0>
81004827:	8b 45 0c             	mov    0xc(%ebp),%eax
8100482a:	8b 00                	mov    (%eax),%eax
8100482c:	83 e0 40             	and    $0x40,%eax
8100482f:	85 c0                	test   %eax,%eax
81004831:	74 12                	je     81004845 <_printf_i+0xc1>
81004833:	8b 45 18             	mov    0x18(%ebp),%eax
81004836:	8b 00                	mov    (%eax),%eax
81004838:	8d 48 04             	lea    0x4(%eax),%ecx
8100483b:	8b 55 18             	mov    0x18(%ebp),%edx
8100483e:	89 0a                	mov    %ecx,(%edx)
81004840:	8b 00                	mov    (%eax),%eax
81004842:	98                   	cwtl   
81004843:	eb 0f                	jmp    81004854 <_printf_i+0xd0>
81004845:	8b 45 18             	mov    0x18(%ebp),%eax
81004848:	8b 00                	mov    (%eax),%eax
8100484a:	8d 48 04             	lea    0x4(%eax),%ecx
8100484d:	8b 55 18             	mov    0x18(%ebp),%edx
81004850:	89 0a                	mov    %ecx,(%edx)
81004852:	8b 00                	mov    (%eax),%eax
81004854:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004857:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100485a:	85 c0                	test   %eax,%eax
8100485c:	79 0a                	jns    81004868 <_printf_i+0xe4>
8100485e:	f7 5d f4             	negl   -0xc(%ebp)
81004861:	8b 45 0c             	mov    0xc(%ebp),%eax
81004864:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004868:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100486f:	e9 28 01 00 00       	jmp    8100499c <_printf_i+0x218>
81004874:	8b 45 0c             	mov    0xc(%ebp),%eax
81004877:	8b 00                	mov    (%eax),%eax
81004879:	25 80 00 00 00       	and    $0x80,%eax
8100487e:	85 c0                	test   %eax,%eax
81004880:	74 11                	je     81004893 <_printf_i+0x10f>
81004882:	8b 45 18             	mov    0x18(%ebp),%eax
81004885:	8b 00                	mov    (%eax),%eax
81004887:	8d 48 04             	lea    0x4(%eax),%ecx
8100488a:	8b 55 18             	mov    0x18(%ebp),%edx
8100488d:	89 0a                	mov    %ecx,(%edx)
8100488f:	8b 00                	mov    (%eax),%eax
81004891:	eb 2f                	jmp    810048c2 <_printf_i+0x13e>
81004893:	8b 45 0c             	mov    0xc(%ebp),%eax
81004896:	8b 00                	mov    (%eax),%eax
81004898:	83 e0 40             	and    $0x40,%eax
8100489b:	85 c0                	test   %eax,%eax
8100489d:	74 14                	je     810048b3 <_printf_i+0x12f>
8100489f:	8b 45 18             	mov    0x18(%ebp),%eax
810048a2:	8b 00                	mov    (%eax),%eax
810048a4:	8d 48 04             	lea    0x4(%eax),%ecx
810048a7:	8b 55 18             	mov    0x18(%ebp),%edx
810048aa:	89 0a                	mov    %ecx,(%edx)
810048ac:	8b 00                	mov    (%eax),%eax
810048ae:	0f b7 c0             	movzwl %ax,%eax
810048b1:	eb 0f                	jmp    810048c2 <_printf_i+0x13e>
810048b3:	8b 45 18             	mov    0x18(%ebp),%eax
810048b6:	8b 00                	mov    (%eax),%eax
810048b8:	8d 48 04             	lea    0x4(%eax),%ecx
810048bb:	8b 55 18             	mov    0x18(%ebp),%edx
810048be:	89 0a                	mov    %ecx,(%edx)
810048c0:	8b 00                	mov    (%eax),%eax
810048c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810048c8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
810048cc:	3c 6f                	cmp    $0x6f,%al
810048ce:	75 07                	jne    810048d7 <_printf_i+0x153>
810048d0:	b8 08 00 00 00       	mov    $0x8,%eax
810048d5:	eb 05                	jmp    810048dc <_printf_i+0x158>
810048d7:	b8 0a 00 00 00       	mov    $0xa,%eax
810048dc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810048df:	e9 b1 00 00 00       	jmp    81004995 <_printf_i+0x211>
810048e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810048e7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810048eb:	eb 1d                	jmp    8100490a <_printf_i+0x186>
810048ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810048f0:	8b 00                	mov    (%eax),%eax
810048f2:	83 c8 20             	or     $0x20,%eax
810048f5:	89 c2                	mov    %eax,%edx
810048f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810048fa:	89 10                	mov    %edx,(%eax)
810048fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810048ff:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004903:	c7 45 e8 01 7c 00 81 	movl   $0x81007c01,-0x18(%ebp)
8100490a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100490d:	8b 00                	mov    (%eax),%eax
8100490f:	25 80 00 00 00       	and    $0x80,%eax
81004914:	85 c0                	test   %eax,%eax
81004916:	74 11                	je     81004929 <_printf_i+0x1a5>
81004918:	8b 45 18             	mov    0x18(%ebp),%eax
8100491b:	8b 00                	mov    (%eax),%eax
8100491d:	8d 48 04             	lea    0x4(%eax),%ecx
81004920:	8b 55 18             	mov    0x18(%ebp),%edx
81004923:	89 0a                	mov    %ecx,(%edx)
81004925:	8b 00                	mov    (%eax),%eax
81004927:	eb 2f                	jmp    81004958 <_printf_i+0x1d4>
81004929:	8b 45 0c             	mov    0xc(%ebp),%eax
8100492c:	8b 00                	mov    (%eax),%eax
8100492e:	83 e0 40             	and    $0x40,%eax
81004931:	85 c0                	test   %eax,%eax
81004933:	74 14                	je     81004949 <_printf_i+0x1c5>
81004935:	8b 45 18             	mov    0x18(%ebp),%eax
81004938:	8b 00                	mov    (%eax),%eax
8100493a:	8d 48 04             	lea    0x4(%eax),%ecx
8100493d:	8b 55 18             	mov    0x18(%ebp),%edx
81004940:	89 0a                	mov    %ecx,(%edx)
81004942:	8b 00                	mov    (%eax),%eax
81004944:	0f b7 c0             	movzwl %ax,%eax
81004947:	eb 0f                	jmp    81004958 <_printf_i+0x1d4>
81004949:	8b 45 18             	mov    0x18(%ebp),%eax
8100494c:	8b 00                	mov    (%eax),%eax
8100494e:	8d 48 04             	lea    0x4(%eax),%ecx
81004951:	8b 55 18             	mov    0x18(%ebp),%edx
81004954:	89 0a                	mov    %ecx,(%edx)
81004956:	8b 00                	mov    (%eax),%eax
81004958:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100495b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004962:	8b 45 0c             	mov    0xc(%ebp),%eax
81004965:	8b 00                	mov    (%eax),%eax
81004967:	83 e0 01             	and    $0x1,%eax
8100496a:	85 c0                	test   %eax,%eax
8100496c:	74 0f                	je     8100497d <_printf_i+0x1f9>
8100496e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004971:	8b 00                	mov    (%eax),%eax
81004973:	83 c8 20             	or     $0x20,%eax
81004976:	89 c2                	mov    %eax,%edx
81004978:	8b 45 0c             	mov    0xc(%ebp),%eax
8100497b:	89 10                	mov    %edx,(%eax)
8100497d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004981:	75 11                	jne    81004994 <_printf_i+0x210>
81004983:	8b 45 0c             	mov    0xc(%ebp),%eax
81004986:	8b 00                	mov    (%eax),%eax
81004988:	83 e0 df             	and    $0xffffffdf,%eax
8100498b:	89 c2                	mov    %eax,%edx
8100498d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004990:	89 10                	mov    %edx,(%eax)
81004992:	eb 01                	jmp    81004995 <_printf_i+0x211>
81004994:	90                   	nop
81004995:	8b 45 0c             	mov    0xc(%ebp),%eax
81004998:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8100499c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100499f:	8b 50 04             	mov    0x4(%eax),%edx
810049a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810049a5:	89 50 08             	mov    %edx,0x8(%eax)
810049a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ab:	8b 40 08             	mov    0x8(%eax),%eax
810049ae:	85 c0                	test   %eax,%eax
810049b0:	78 0f                	js     810049c1 <_printf_i+0x23d>
810049b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810049b5:	8b 00                	mov    (%eax),%eax
810049b7:	83 e0 fb             	and    $0xfffffffb,%eax
810049ba:	89 c2                	mov    %eax,%edx
810049bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810049bf:	89 10                	mov    %edx,(%eax)
810049c1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810049c5:	75 0a                	jne    810049d1 <_printf_i+0x24d>
810049c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ca:	8b 40 04             	mov    0x4(%eax),%eax
810049cd:	85 c0                	test   %eax,%eax
810049cf:	74 34                	je     81004a05 <_printf_i+0x281>
810049d1:	8b 4d f0             	mov    -0x10(%ebp),%ecx
810049d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049d7:	ba 00 00 00 00       	mov    $0x0,%edx
810049dc:	f7 f1                	div    %ecx
810049de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810049e1:	01 d0                	add    %edx,%eax
810049e3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810049e7:	0f b6 10             	movzbl (%eax),%edx
810049ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810049ed:	88 10                	mov    %dl,(%eax)
810049ef:	8b 5d f0             	mov    -0x10(%ebp),%ebx
810049f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049f5:	ba 00 00 00 00       	mov    $0x0,%edx
810049fa:	f7 f3                	div    %ebx
810049fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810049ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a03:	75 cc                	jne    810049d1 <_printf_i+0x24d>
81004a05:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004a09:	75 26                	jne    81004a31 <_printf_i+0x2ad>
81004a0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a0e:	8b 00                	mov    (%eax),%eax
81004a10:	83 e0 01             	and    $0x1,%eax
81004a13:	85 c0                	test   %eax,%eax
81004a15:	74 1a                	je     81004a31 <_printf_i+0x2ad>
81004a17:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a1a:	8b 50 04             	mov    0x4(%eax),%edx
81004a1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a20:	8b 40 10             	mov    0x10(%eax),%eax
81004a23:	39 c2                	cmp    %eax,%edx
81004a25:	7f 0a                	jg     81004a31 <_printf_i+0x2ad>
81004a27:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004a2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004a2e:	c6 00 30             	movb   $0x30,(%eax)
81004a31:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a34:	83 c0 1b             	add    $0x1b,%eax
81004a37:	83 c0 28             	add    $0x28,%eax
81004a3a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004a3d:	89 c2                	mov    %eax,%edx
81004a3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a42:	89 50 10             	mov    %edx,0x10(%eax)
81004a45:	e9 e2 00 00 00       	jmp    81004b2c <_printf_i+0x3a8>
81004a4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a4d:	8b 00                	mov    (%eax),%eax
81004a4f:	25 80 00 00 00       	and    $0x80,%eax
81004a54:	85 c0                	test   %eax,%eax
81004a56:	74 19                	je     81004a71 <_printf_i+0x2ed>
81004a58:	8b 45 18             	mov    0x18(%ebp),%eax
81004a5b:	8b 00                	mov    (%eax),%eax
81004a5d:	8d 48 04             	lea    0x4(%eax),%ecx
81004a60:	8b 55 18             	mov    0x18(%ebp),%edx
81004a63:	89 0a                	mov    %ecx,(%edx)
81004a65:	8b 00                	mov    (%eax),%eax
81004a67:	8b 55 0c             	mov    0xc(%ebp),%edx
81004a6a:	8b 52 14             	mov    0x14(%edx),%edx
81004a6d:	89 10                	mov    %edx,(%eax)
81004a6f:	eb 3f                	jmp    81004ab0 <_printf_i+0x32c>
81004a71:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a74:	8b 00                	mov    (%eax),%eax
81004a76:	83 e0 40             	and    $0x40,%eax
81004a79:	85 c0                	test   %eax,%eax
81004a7b:	74 1c                	je     81004a99 <_printf_i+0x315>
81004a7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a80:	8b 58 14             	mov    0x14(%eax),%ebx
81004a83:	8b 45 18             	mov    0x18(%ebp),%eax
81004a86:	8b 00                	mov    (%eax),%eax
81004a88:	8d 48 04             	lea    0x4(%eax),%ecx
81004a8b:	8b 55 18             	mov    0x18(%ebp),%edx
81004a8e:	89 0a                	mov    %ecx,(%edx)
81004a90:	8b 00                	mov    (%eax),%eax
81004a92:	89 da                	mov    %ebx,%edx
81004a94:	66 89 10             	mov    %dx,(%eax)
81004a97:	eb 17                	jmp    81004ab0 <_printf_i+0x32c>
81004a99:	8b 45 18             	mov    0x18(%ebp),%eax
81004a9c:	8b 00                	mov    (%eax),%eax
81004a9e:	8d 48 04             	lea    0x4(%eax),%ecx
81004aa1:	8b 55 18             	mov    0x18(%ebp),%edx
81004aa4:	89 0a                	mov    %ecx,(%edx)
81004aa6:	8b 00                	mov    (%eax),%eax
81004aa8:	8b 55 0c             	mov    0xc(%ebp),%edx
81004aab:	8b 52 14             	mov    0x14(%edx),%edx
81004aae:	89 10                	mov    %edx,(%eax)
81004ab0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ab3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004aba:	eb 70                	jmp    81004b2c <_printf_i+0x3a8>
81004abc:	8b 45 18             	mov    0x18(%ebp),%eax
81004abf:	8b 00                	mov    (%eax),%eax
81004ac1:	8d 48 04             	lea    0x4(%eax),%ecx
81004ac4:	8b 55 18             	mov    0x18(%ebp),%edx
81004ac7:	89 0a                	mov    %ecx,(%edx)
81004ac9:	8b 00                	mov    (%eax),%eax
81004acb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ace:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ad1:	8b 40 04             	mov    0x4(%eax),%eax
81004ad4:	83 ec 04             	sub    $0x4,%esp
81004ad7:	50                   	push   %eax
81004ad8:	6a 00                	push   $0x0
81004ada:	ff 75 ec             	push   -0x14(%ebp)
81004add:	e8 de f3 ff ff       	call   81003ec0 <memchr>
81004ae2:	83 c4 10             	add    $0x10,%esp
81004ae5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004ae8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004aec:	74 0e                	je     81004afc <_printf_i+0x378>
81004aee:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004af1:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004af4:	89 c2                	mov    %eax,%edx
81004af6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004af9:	89 50 04             	mov    %edx,0x4(%eax)
81004afc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004aff:	8b 50 04             	mov    0x4(%eax),%edx
81004b02:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b05:	89 50 10             	mov    %edx,0x10(%eax)
81004b08:	eb 1a                	jmp    81004b24 <_printf_i+0x3a0>
81004b0a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004b0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b11:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004b15:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004b18:	88 10                	mov    %dl,(%eax)
81004b1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b1d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004b24:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b27:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004b2b:	90                   	nop
81004b2c:	83 ec 0c             	sub    $0xc,%esp
81004b2f:	ff 75 14             	push   0x14(%ebp)
81004b32:	ff 75 10             	push   0x10(%ebp)
81004b35:	8d 45 d8             	lea    -0x28(%ebp),%eax
81004b38:	50                   	push   %eax
81004b39:	ff 75 0c             	push   0xc(%ebp)
81004b3c:	ff 75 08             	push   0x8(%ebp)
81004b3f:	e8 a5 fa ff ff       	call   810045e9 <_printf_common>
81004b44:	83 c4 20             	add    $0x20,%esp
81004b47:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004b4a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81004b4e:	74 72                	je     81004bc2 <_printf_i+0x43e>
81004b50:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b53:	8b 40 10             	mov    0x10(%eax),%eax
81004b56:	50                   	push   %eax
81004b57:	ff 75 ec             	push   -0x14(%ebp)
81004b5a:	ff 75 10             	push   0x10(%ebp)
81004b5d:	ff 75 08             	push   0x8(%ebp)
81004b60:	8b 45 14             	mov    0x14(%ebp),%eax
81004b63:	ff d0                	call   *%eax
81004b65:	83 c4 10             	add    $0x10,%esp
81004b68:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b6b:	74 58                	je     81004bc5 <_printf_i+0x441>
81004b6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b70:	8b 00                	mov    (%eax),%eax
81004b72:	83 e0 02             	and    $0x2,%eax
81004b75:	85 c0                	test   %eax,%eax
81004b77:	74 39                	je     81004bb2 <_printf_i+0x42e>
81004b79:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81004b80:	eb 20                	jmp    81004ba2 <_printf_i+0x41e>
81004b82:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b85:	83 c0 19             	add    $0x19,%eax
81004b88:	6a 01                	push   $0x1
81004b8a:	50                   	push   %eax
81004b8b:	ff 75 10             	push   0x10(%ebp)
81004b8e:	ff 75 08             	push   0x8(%ebp)
81004b91:	8b 45 14             	mov    0x14(%ebp),%eax
81004b94:	ff d0                	call   *%eax
81004b96:	83 c4 10             	add    $0x10,%esp
81004b99:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b9c:	74 2a                	je     81004bc8 <_printf_i+0x444>
81004b9e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81004ba2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ba5:	8b 40 0c             	mov    0xc(%eax),%eax
81004ba8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004bab:	29 d0                	sub    %edx,%eax
81004bad:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004bb0:	7c d0                	jl     81004b82 <_printf_i+0x3fe>
81004bb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bb5:	8b 50 0c             	mov    0xc(%eax),%edx
81004bb8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004bbb:	39 c2                	cmp    %eax,%edx
81004bbd:	0f 4d c2             	cmovge %edx,%eax
81004bc0:	eb 0c                	jmp    81004bce <_printf_i+0x44a>
81004bc2:	90                   	nop
81004bc3:	eb 04                	jmp    81004bc9 <_printf_i+0x445>
81004bc5:	90                   	nop
81004bc6:	eb 01                	jmp    81004bc9 <_printf_i+0x445>
81004bc8:	90                   	nop
81004bc9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004bd1:	c9                   	leave  
81004bd2:	c3                   	ret    

81004bd3 <_open_r>:
81004bd3:	55                   	push   %ebp
81004bd4:	89 e5                	mov    %esp,%ebp
81004bd6:	83 ec 18             	sub    $0x18,%esp
81004bd9:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
81004be0:	00 00 00 
81004be3:	83 ec 04             	sub    $0x4,%esp
81004be6:	ff 75 14             	push   0x14(%ebp)
81004be9:	ff 75 10             	push   0x10(%ebp)
81004bec:	ff 75 0c             	push   0xc(%ebp)
81004bef:	e8 14 be ff ff       	call   81000a08 <open>
81004bf4:	83 c4 10             	add    $0x10,%esp
81004bf7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bfa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004bfe:	75 14                	jne    81004c14 <_open_r+0x41>
81004c00:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81004c05:	85 c0                	test   %eax,%eax
81004c07:	74 0b                	je     81004c14 <_open_r+0x41>
81004c09:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81004c0f:	8b 45 08             	mov    0x8(%ebp),%eax
81004c12:	89 10                	mov    %edx,(%eax)
81004c14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c17:	c9                   	leave  
81004c18:	c3                   	ret    

81004c19 <_iprintf_r>:
81004c19:	55                   	push   %ebp
81004c1a:	89 e5                	mov    %esp,%ebp
81004c1c:	83 ec 18             	sub    $0x18,%esp
81004c1f:	8d 45 10             	lea    0x10(%ebp),%eax
81004c22:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c25:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004c28:	8b 45 08             	mov    0x8(%ebp),%eax
81004c2b:	8b 40 08             	mov    0x8(%eax),%eax
81004c2e:	52                   	push   %edx
81004c2f:	ff 75 0c             	push   0xc(%ebp)
81004c32:	50                   	push   %eax
81004c33:	ff 75 08             	push   0x8(%ebp)
81004c36:	e8 58 f6 ff ff       	call   81004293 <_vfiprintf_r>
81004c3b:	83 c4 10             	add    $0x10,%esp
81004c3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c41:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c44:	c9                   	leave  
81004c45:	c3                   	ret    

81004c46 <iprintf>:
81004c46:	55                   	push   %ebp
81004c47:	89 e5                	mov    %esp,%ebp
81004c49:	83 ec 18             	sub    $0x18,%esp
81004c4c:	a1 84 83 00 81       	mov    0x81008384,%eax
81004c51:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c54:	8d 45 0c             	lea    0xc(%ebp),%eax
81004c57:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c5a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c60:	8b 40 08             	mov    0x8(%eax),%eax
81004c63:	52                   	push   %edx
81004c64:	ff 75 08             	push   0x8(%ebp)
81004c67:	50                   	push   %eax
81004c68:	ff 75 f4             	push   -0xc(%ebp)
81004c6b:	e8 23 f6 ff ff       	call   81004293 <_vfiprintf_r>
81004c70:	83 c4 10             	add    $0x10,%esp
81004c73:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c79:	c9                   	leave  
81004c7a:	c3                   	ret    

81004c7b <_puts_r>:
81004c7b:	55                   	push   %ebp
81004c7c:	89 e5                	mov    %esp,%ebp
81004c7e:	83 ec 38             	sub    $0x38,%esp
81004c81:	83 ec 0c             	sub    $0xc,%esp
81004c84:	ff 75 0c             	push   0xc(%ebp)
81004c87:	e8 c4 09 00 00       	call   81005650 <strlen>
81004c8c:	83 c4 10             	add    $0x10,%esp
81004c8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c92:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c95:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004c98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c9b:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004c9e:	c7 45 d4 98 7c 00 81 	movl   $0x81007c98,-0x2c(%ebp)
81004ca5:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004cac:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004caf:	83 c0 01             	add    $0x1,%eax
81004cb2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004cb5:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004cb8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004cbb:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81004cc2:	8b 45 08             	mov    0x8(%ebp),%eax
81004cc5:	8b 40 08             	mov    0x8(%eax),%eax
81004cc8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004ccb:	8b 45 08             	mov    0x8(%ebp),%eax
81004cce:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004cd1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81004cd5:	74 18                	je     81004cef <_puts_r+0x74>
81004cd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004cda:	8b 40 38             	mov    0x38(%eax),%eax
81004cdd:	85 c0                	test   %eax,%eax
81004cdf:	75 0e                	jne    81004cef <_puts_r+0x74>
81004ce1:	83 ec 0c             	sub    $0xc,%esp
81004ce4:	ff 75 ec             	push   -0x14(%ebp)
81004ce7:	e8 93 c8 ff ff       	call   8100157f <__sinit>
81004cec:	83 c4 10             	add    $0x10,%esp
81004cef:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cf2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004cf6:	98                   	cwtl   
81004cf7:	25 00 20 00 00       	and    $0x2000,%eax
81004cfc:	85 c0                	test   %eax,%eax
81004cfe:	75 24                	jne    81004d24 <_puts_r+0xa9>
81004d00:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d03:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004d07:	80 cc 20             	or     $0x20,%ah
81004d0a:	89 c2                	mov    %eax,%edx
81004d0c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d0f:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004d13:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d16:	8b 40 64             	mov    0x64(%eax),%eax
81004d19:	80 e4 df             	and    $0xdf,%ah
81004d1c:	89 c2                	mov    %eax,%edx
81004d1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d21:	89 50 64             	mov    %edx,0x64(%eax)
81004d24:	83 ec 04             	sub    $0x4,%esp
81004d27:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004d2a:	50                   	push   %eax
81004d2b:	ff 75 f0             	push   -0x10(%ebp)
81004d2e:	ff 75 08             	push   0x8(%ebp)
81004d31:	e8 f4 14 00 00       	call   8100622a <__sfvwrite_r>
81004d36:	83 c4 10             	add    $0x10,%esp
81004d39:	85 c0                	test   %eax,%eax
81004d3b:	74 07                	je     81004d44 <_puts_r+0xc9>
81004d3d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d42:	eb 05                	jmp    81004d49 <_puts_r+0xce>
81004d44:	b8 0a 00 00 00       	mov    $0xa,%eax
81004d49:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004d4c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004d4f:	c9                   	leave  
81004d50:	c3                   	ret    

81004d51 <puts>:
81004d51:	55                   	push   %ebp
81004d52:	89 e5                	mov    %esp,%ebp
81004d54:	83 ec 08             	sub    $0x8,%esp
81004d57:	a1 84 83 00 81       	mov    0x81008384,%eax
81004d5c:	83 ec 08             	sub    $0x8,%esp
81004d5f:	ff 75 08             	push   0x8(%ebp)
81004d62:	50                   	push   %eax
81004d63:	e8 13 ff ff ff       	call   81004c7b <_puts_r>
81004d68:	83 c4 10             	add    $0x10,%esp
81004d6b:	c9                   	leave  
81004d6c:	c3                   	ret    

81004d6d <cleanup_glue>:
81004d6d:	55                   	push   %ebp
81004d6e:	89 e5                	mov    %esp,%ebp
81004d70:	83 ec 08             	sub    $0x8,%esp
81004d73:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d76:	8b 00                	mov    (%eax),%eax
81004d78:	85 c0                	test   %eax,%eax
81004d7a:	74 14                	je     81004d90 <cleanup_glue+0x23>
81004d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d7f:	8b 00                	mov    (%eax),%eax
81004d81:	83 ec 08             	sub    $0x8,%esp
81004d84:	50                   	push   %eax
81004d85:	ff 75 08             	push   0x8(%ebp)
81004d88:	e8 e0 ff ff ff       	call   81004d6d <cleanup_glue>
81004d8d:	83 c4 10             	add    $0x10,%esp
81004d90:	83 ec 08             	sub    $0x8,%esp
81004d93:	ff 75 0c             	push   0xc(%ebp)
81004d96:	ff 75 08             	push   0x8(%ebp)
81004d99:	e8 37 ca ff ff       	call   810017d5 <_free_r>
81004d9e:	83 c4 10             	add    $0x10,%esp
81004da1:	90                   	nop
81004da2:	c9                   	leave  
81004da3:	c3                   	ret    

81004da4 <_reclaim_reent>:
81004da4:	55                   	push   %ebp
81004da5:	89 e5                	mov    %esp,%ebp
81004da7:	83 ec 28             	sub    $0x28,%esp
81004daa:	a1 84 83 00 81       	mov    0x81008384,%eax
81004daf:	39 45 08             	cmp    %eax,0x8(%ebp)
81004db2:	0f 84 49 01 00 00    	je     81004f01 <_reclaim_reent+0x15d>
81004db8:	8b 45 08             	mov    0x8(%ebp),%eax
81004dbb:	8b 40 4c             	mov    0x4c(%eax),%eax
81004dbe:	85 c0                	test   %eax,%eax
81004dc0:	74 64                	je     81004e26 <_reclaim_reent+0x82>
81004dc2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004dc9:	eb 3e                	jmp    81004e09 <_reclaim_reent+0x65>
81004dcb:	8b 45 08             	mov    0x8(%ebp),%eax
81004dce:	8b 50 4c             	mov    0x4c(%eax),%edx
81004dd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004dd4:	c1 e0 02             	shl    $0x2,%eax
81004dd7:	01 d0                	add    %edx,%eax
81004dd9:	8b 00                	mov    (%eax),%eax
81004ddb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dde:	eb 1f                	jmp    81004dff <_reclaim_reent+0x5b>
81004de0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004de3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004de6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004de9:	8b 00                	mov    (%eax),%eax
81004deb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dee:	83 ec 08             	sub    $0x8,%esp
81004df1:	ff 75 e8             	push   -0x18(%ebp)
81004df4:	ff 75 08             	push   0x8(%ebp)
81004df7:	e8 d9 c9 ff ff       	call   810017d5 <_free_r>
81004dfc:	83 c4 10             	add    $0x10,%esp
81004dff:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e03:	75 db                	jne    81004de0 <_reclaim_reent+0x3c>
81004e05:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004e09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e0c:	83 f8 1f             	cmp    $0x1f,%eax
81004e0f:	76 ba                	jbe    81004dcb <_reclaim_reent+0x27>
81004e11:	8b 45 08             	mov    0x8(%ebp),%eax
81004e14:	8b 40 4c             	mov    0x4c(%eax),%eax
81004e17:	83 ec 08             	sub    $0x8,%esp
81004e1a:	50                   	push   %eax
81004e1b:	ff 75 08             	push   0x8(%ebp)
81004e1e:	e8 b2 c9 ff ff       	call   810017d5 <_free_r>
81004e23:	83 c4 10             	add    $0x10,%esp
81004e26:	8b 45 08             	mov    0x8(%ebp),%eax
81004e29:	8b 40 40             	mov    0x40(%eax),%eax
81004e2c:	85 c0                	test   %eax,%eax
81004e2e:	74 15                	je     81004e45 <_reclaim_reent+0xa1>
81004e30:	8b 45 08             	mov    0x8(%ebp),%eax
81004e33:	8b 40 40             	mov    0x40(%eax),%eax
81004e36:	83 ec 08             	sub    $0x8,%esp
81004e39:	50                   	push   %eax
81004e3a:	ff 75 08             	push   0x8(%ebp)
81004e3d:	e8 93 c9 ff ff       	call   810017d5 <_free_r>
81004e42:	83 c4 10             	add    $0x10,%esp
81004e45:	8b 45 08             	mov    0x8(%ebp),%eax
81004e48:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e4e:	85 c0                	test   %eax,%eax
81004e50:	74 50                	je     81004ea2 <_reclaim_reent+0xfe>
81004e52:	8b 45 08             	mov    0x8(%ebp),%eax
81004e55:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e5b:	8b 55 08             	mov    0x8(%ebp),%edx
81004e5e:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004e64:	39 d0                	cmp    %edx,%eax
81004e66:	74 3a                	je     81004ea2 <_reclaim_reent+0xfe>
81004e68:	8b 45 08             	mov    0x8(%ebp),%eax
81004e6b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e71:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e74:	eb 1f                	jmp    81004e95 <_reclaim_reent+0xf1>
81004e76:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e79:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004e7c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e7f:	8b 00                	mov    (%eax),%eax
81004e81:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e84:	83 ec 08             	sub    $0x8,%esp
81004e87:	ff 75 e4             	push   -0x1c(%ebp)
81004e8a:	ff 75 08             	push   0x8(%ebp)
81004e8d:	e8 43 c9 ff ff       	call   810017d5 <_free_r>
81004e92:	83 c4 10             	add    $0x10,%esp
81004e95:	8b 45 08             	mov    0x8(%ebp),%eax
81004e98:	05 4c 01 00 00       	add    $0x14c,%eax
81004e9d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81004ea0:	75 d4                	jne    81004e76 <_reclaim_reent+0xd2>
81004ea2:	8b 45 08             	mov    0x8(%ebp),%eax
81004ea5:	8b 40 54             	mov    0x54(%eax),%eax
81004ea8:	85 c0                	test   %eax,%eax
81004eaa:	74 15                	je     81004ec1 <_reclaim_reent+0x11d>
81004eac:	8b 45 08             	mov    0x8(%ebp),%eax
81004eaf:	8b 40 54             	mov    0x54(%eax),%eax
81004eb2:	83 ec 08             	sub    $0x8,%esp
81004eb5:	50                   	push   %eax
81004eb6:	ff 75 08             	push   0x8(%ebp)
81004eb9:	e8 17 c9 ff ff       	call   810017d5 <_free_r>
81004ebe:	83 c4 10             	add    $0x10,%esp
81004ec1:	8b 45 08             	mov    0x8(%ebp),%eax
81004ec4:	8b 40 38             	mov    0x38(%eax),%eax
81004ec7:	85 c0                	test   %eax,%eax
81004ec9:	74 36                	je     81004f01 <_reclaim_reent+0x15d>
81004ecb:	8b 45 08             	mov    0x8(%ebp),%eax
81004ece:	8b 40 3c             	mov    0x3c(%eax),%eax
81004ed1:	83 ec 0c             	sub    $0xc,%esp
81004ed4:	ff 75 08             	push   0x8(%ebp)
81004ed7:	ff d0                	call   *%eax
81004ed9:	83 c4 10             	add    $0x10,%esp
81004edc:	8b 45 08             	mov    0x8(%ebp),%eax
81004edf:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004ee5:	85 c0                	test   %eax,%eax
81004ee7:	74 18                	je     81004f01 <_reclaim_reent+0x15d>
81004ee9:	8b 45 08             	mov    0x8(%ebp),%eax
81004eec:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004ef2:	83 ec 08             	sub    $0x8,%esp
81004ef5:	50                   	push   %eax
81004ef6:	ff 75 08             	push   0x8(%ebp)
81004ef9:	e8 6f fe ff ff       	call   81004d6d <cleanup_glue>
81004efe:	83 c4 10             	add    $0x10,%esp
81004f01:	90                   	nop
81004f02:	c9                   	leave  
81004f03:	c3                   	ret    

81004f04 <lflush>:
81004f04:	55                   	push   %ebp
81004f05:	89 e5                	mov    %esp,%ebp
81004f07:	83 ec 08             	sub    $0x8,%esp
81004f0a:	8b 45 08             	mov    0x8(%ebp),%eax
81004f0d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f11:	98                   	cwtl   
81004f12:	83 e0 09             	and    $0x9,%eax
81004f15:	83 f8 09             	cmp    $0x9,%eax
81004f18:	75 10                	jne    81004f2a <lflush+0x26>
81004f1a:	83 ec 0c             	sub    $0xc,%esp
81004f1d:	ff 75 08             	push   0x8(%ebp)
81004f20:	e8 af c1 ff ff       	call   810010d4 <fflush>
81004f25:	83 c4 10             	add    $0x10,%esp
81004f28:	eb 05                	jmp    81004f2f <lflush+0x2b>
81004f2a:	b8 00 00 00 00       	mov    $0x0,%eax
81004f2f:	c9                   	leave  
81004f30:	c3                   	ret    

81004f31 <__srefill_r>:
81004f31:	55                   	push   %ebp
81004f32:	89 e5                	mov    %esp,%ebp
81004f34:	56                   	push   %esi
81004f35:	53                   	push   %ebx
81004f36:	83 ec 10             	sub    $0x10,%esp
81004f39:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004f3c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f3f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f42:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004f46:	74 18                	je     81004f60 <__srefill_r+0x2f>
81004f48:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004f4b:	8b 40 38             	mov    0x38(%eax),%eax
81004f4e:	85 c0                	test   %eax,%eax
81004f50:	75 0e                	jne    81004f60 <__srefill_r+0x2f>
81004f52:	83 ec 0c             	sub    $0xc,%esp
81004f55:	ff 75 f4             	push   -0xc(%ebp)
81004f58:	e8 22 c6 ff ff       	call   8100157f <__sinit>
81004f5d:	83 c4 10             	add    $0x10,%esp
81004f60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f64:	98                   	cwtl   
81004f65:	25 00 20 00 00       	and    $0x2000,%eax
81004f6a:	85 c0                	test   %eax,%eax
81004f6c:	75 14                	jne    81004f82 <__srefill_r+0x51>
81004f6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f72:	80 cc 20             	or     $0x20,%ah
81004f75:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004f79:	8b 43 64             	mov    0x64(%ebx),%eax
81004f7c:	80 e4 df             	and    $0xdf,%ah
81004f7f:	89 43 64             	mov    %eax,0x64(%ebx)
81004f82:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004f89:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f8d:	98                   	cwtl   
81004f8e:	83 e0 20             	and    $0x20,%eax
81004f91:	85 c0                	test   %eax,%eax
81004f93:	74 0a                	je     81004f9f <__srefill_r+0x6e>
81004f95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004f9a:	e9 8c 01 00 00       	jmp    8100512b <__srefill_r+0x1fa>
81004f9f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fa3:	98                   	cwtl   
81004fa4:	83 e0 04             	and    $0x4,%eax
81004fa7:	85 c0                	test   %eax,%eax
81004fa9:	75 79                	jne    81005024 <__srefill_r+0xf3>
81004fab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004faf:	98                   	cwtl   
81004fb0:	83 e0 10             	and    $0x10,%eax
81004fb3:	85 c0                	test   %eax,%eax
81004fb5:	75 1e                	jne    81004fd5 <__srefill_r+0xa4>
81004fb7:	8b 45 08             	mov    0x8(%ebp),%eax
81004fba:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004fc0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fc4:	83 c8 40             	or     $0x40,%eax
81004fc7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004fcb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004fd0:	e9 56 01 00 00       	jmp    8100512b <__srefill_r+0x1fa>
81004fd5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fd9:	98                   	cwtl   
81004fda:	83 e0 08             	and    $0x8,%eax
81004fdd:	85 c0                	test   %eax,%eax
81004fdf:	74 36                	je     81005017 <__srefill_r+0xe6>
81004fe1:	83 ec 08             	sub    $0x8,%esp
81004fe4:	53                   	push   %ebx
81004fe5:	ff 75 08             	push   0x8(%ebp)
81004fe8:	e8 8f c0 ff ff       	call   8100107c <_fflush_r>
81004fed:	83 c4 10             	add    $0x10,%esp
81004ff0:	85 c0                	test   %eax,%eax
81004ff2:	74 0a                	je     81004ffe <__srefill_r+0xcd>
81004ff4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ff9:	e9 2d 01 00 00       	jmp    8100512b <__srefill_r+0x1fa>
81004ffe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005002:	83 e0 f7             	and    $0xfffffff7,%eax
81005005:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005009:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005010:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005017:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100501b:	83 c8 04             	or     $0x4,%eax
8100501e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005022:	eb 46                	jmp    8100506a <__srefill_r+0x139>
81005024:	8b 43 30             	mov    0x30(%ebx),%eax
81005027:	85 c0                	test   %eax,%eax
81005029:	74 3f                	je     8100506a <__srefill_r+0x139>
8100502b:	8b 53 30             	mov    0x30(%ebx),%edx
8100502e:	8d 43 40             	lea    0x40(%ebx),%eax
81005031:	39 c2                	cmp    %eax,%edx
81005033:	74 12                	je     81005047 <__srefill_r+0x116>
81005035:	8b 43 30             	mov    0x30(%ebx),%eax
81005038:	83 ec 08             	sub    $0x8,%esp
8100503b:	50                   	push   %eax
8100503c:	ff 75 08             	push   0x8(%ebp)
8100503f:	e8 91 c7 ff ff       	call   810017d5 <_free_r>
81005044:	83 c4 10             	add    $0x10,%esp
81005047:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100504e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005051:	89 43 04             	mov    %eax,0x4(%ebx)
81005054:	8b 43 04             	mov    0x4(%ebx),%eax
81005057:	85 c0                	test   %eax,%eax
81005059:	74 0f                	je     8100506a <__srefill_r+0x139>
8100505b:	8b 43 38             	mov    0x38(%ebx),%eax
8100505e:	89 03                	mov    %eax,(%ebx)
81005060:	b8 00 00 00 00       	mov    $0x0,%eax
81005065:	e9 c1 00 00 00       	jmp    8100512b <__srefill_r+0x1fa>
8100506a:	8b 43 10             	mov    0x10(%ebx),%eax
8100506d:	85 c0                	test   %eax,%eax
8100506f:	75 0f                	jne    81005080 <__srefill_r+0x14f>
81005071:	83 ec 08             	sub    $0x8,%esp
81005074:	53                   	push   %ebx
81005075:	ff 75 08             	push   0x8(%ebp)
81005078:	e8 cf e1 ff ff       	call   8100324c <__smakebuf_r>
8100507d:	83 c4 10             	add    $0x10,%esp
81005080:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005084:	98                   	cwtl   
81005085:	83 e0 03             	and    $0x3,%eax
81005088:	85 c0                	test   %eax,%eax
8100508a:	74 48                	je     810050d4 <__srefill_r+0x1a3>
8100508c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005090:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005094:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100509a:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
8100509f:	83 ec 08             	sub    $0x8,%esp
810050a2:	68 04 4f 00 81       	push   $0x81004f04
810050a7:	50                   	push   %eax
810050a8:	e8 b5 d1 ff ff       	call   81002262 <_fwalk>
810050ad:	83 c4 10             	add    $0x10,%esp
810050b0:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
810050b4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050bc:	98                   	cwtl   
810050bd:	83 e0 09             	and    $0x9,%eax
810050c0:	83 f8 09             	cmp    $0x9,%eax
810050c3:	75 0f                	jne    810050d4 <__srefill_r+0x1a3>
810050c5:	83 ec 08             	sub    $0x8,%esp
810050c8:	53                   	push   %ebx
810050c9:	ff 75 08             	push   0x8(%ebp)
810050cc:	e8 85 bd ff ff       	call   81000e56 <__sflush_r>
810050d1:	83 c4 10             	add    $0x10,%esp
810050d4:	8b 43 10             	mov    0x10(%ebx),%eax
810050d7:	89 03                	mov    %eax,(%ebx)
810050d9:	8b 43 20             	mov    0x20(%ebx),%eax
810050dc:	8b 73 14             	mov    0x14(%ebx),%esi
810050df:	8b 0b                	mov    (%ebx),%ecx
810050e1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810050e4:	56                   	push   %esi
810050e5:	51                   	push   %ecx
810050e6:	52                   	push   %edx
810050e7:	ff 75 08             	push   0x8(%ebp)
810050ea:	ff d0                	call   *%eax
810050ec:	83 c4 10             	add    $0x10,%esp
810050ef:	89 43 04             	mov    %eax,0x4(%ebx)
810050f2:	8b 43 04             	mov    0x4(%ebx),%eax
810050f5:	85 c0                	test   %eax,%eax
810050f7:	7f 2d                	jg     81005126 <__srefill_r+0x1f5>
810050f9:	8b 43 04             	mov    0x4(%ebx),%eax
810050fc:	85 c0                	test   %eax,%eax
810050fe:	75 0d                	jne    8100510d <__srefill_r+0x1dc>
81005100:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005104:	83 c8 20             	or     $0x20,%eax
81005107:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100510b:	eb 12                	jmp    8100511f <__srefill_r+0x1ee>
8100510d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005114:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005118:	83 c8 40             	or     $0x40,%eax
8100511b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100511f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005124:	eb 05                	jmp    8100512b <__srefill_r+0x1fa>
81005126:	b8 00 00 00 00       	mov    $0x0,%eax
8100512b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100512e:	5b                   	pop    %ebx
8100512f:	5e                   	pop    %esi
81005130:	5d                   	pop    %ebp
81005131:	c3                   	ret    

81005132 <_sbrk_r>:
81005132:	55                   	push   %ebp
81005133:	89 e5                	mov    %esp,%ebp
81005135:	83 ec 18             	sub    $0x18,%esp
81005138:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
8100513f:	00 00 00 
81005142:	83 ec 0c             	sub    $0xc,%esp
81005145:	ff 75 0c             	push   0xc(%ebp)
81005148:	e8 d2 b9 ff ff       	call   81000b1f <sbrk>
8100514d:	83 c4 10             	add    $0x10,%esp
81005150:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005153:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005157:	75 14                	jne    8100516d <_sbrk_r+0x3b>
81005159:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
8100515e:	85 c0                	test   %eax,%eax
81005160:	74 0b                	je     8100516d <_sbrk_r+0x3b>
81005162:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81005168:	8b 45 08             	mov    0x8(%ebp),%eax
8100516b:	89 10                	mov    %edx,(%eax)
8100516d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005170:	c9                   	leave  
81005171:	c3                   	ret    

81005172 <setvbuf>:
81005172:	55                   	push   %ebp
81005173:	89 e5                	mov    %esp,%ebp
81005175:	57                   	push   %edi
81005176:	56                   	push   %esi
81005177:	53                   	push   %ebx
81005178:	83 ec 2c             	sub    $0x2c,%esp
8100517b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100517e:	8b 7d 10             	mov    0x10(%ebp),%edi
81005181:	8b 75 14             	mov    0x14(%ebp),%esi
81005184:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100518b:	a1 84 83 00 81       	mov    0x81008384,%eax
81005190:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005193:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005196:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005199:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100519d:	74 18                	je     810051b7 <setvbuf+0x45>
8100519f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810051a2:	8b 40 38             	mov    0x38(%eax),%eax
810051a5:	85 c0                	test   %eax,%eax
810051a7:	75 0e                	jne    810051b7 <setvbuf+0x45>
810051a9:	83 ec 0c             	sub    $0xc,%esp
810051ac:	ff 75 dc             	push   -0x24(%ebp)
810051af:	e8 cb c3 ff ff       	call   8100157f <__sinit>
810051b4:	83 c4 10             	add    $0x10,%esp
810051b7:	83 ff 02             	cmp    $0x2,%edi
810051ba:	74 19                	je     810051d5 <setvbuf+0x63>
810051bc:	85 ff                	test   %edi,%edi
810051be:	74 05                	je     810051c5 <setvbuf+0x53>
810051c0:	83 ff 01             	cmp    $0x1,%edi
810051c3:	75 06                	jne    810051cb <setvbuf+0x59>
810051c5:	89 f0                	mov    %esi,%eax
810051c7:	85 c0                	test   %eax,%eax
810051c9:	79 0a                	jns    810051d5 <setvbuf+0x63>
810051cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051d0:	e9 a1 01 00 00       	jmp    81005376 <setvbuf+0x204>
810051d5:	83 ec 08             	sub    $0x8,%esp
810051d8:	53                   	push   %ebx
810051d9:	ff 75 e0             	push   -0x20(%ebp)
810051dc:	e8 9b be ff ff       	call   8100107c <_fflush_r>
810051e1:	83 c4 10             	add    $0x10,%esp
810051e4:	8b 43 30             	mov    0x30(%ebx),%eax
810051e7:	85 c0                	test   %eax,%eax
810051e9:	74 23                	je     8100520e <setvbuf+0x9c>
810051eb:	8b 53 30             	mov    0x30(%ebx),%edx
810051ee:	8d 43 40             	lea    0x40(%ebx),%eax
810051f1:	39 c2                	cmp    %eax,%edx
810051f3:	74 12                	je     81005207 <setvbuf+0x95>
810051f5:	8b 43 30             	mov    0x30(%ebx),%eax
810051f8:	83 ec 08             	sub    $0x8,%esp
810051fb:	50                   	push   %eax
810051fc:	ff 75 e0             	push   -0x20(%ebp)
810051ff:	e8 d1 c5 ff ff       	call   810017d5 <_free_r>
81005204:	83 c4 10             	add    $0x10,%esp
81005207:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100520e:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005215:	8b 43 18             	mov    0x18(%ebx),%eax
81005218:	89 43 04             	mov    %eax,0x4(%ebx)
8100521b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100521f:	98                   	cwtl   
81005220:	25 80 00 00 00       	and    $0x80,%eax
81005225:	85 c0                	test   %eax,%eax
81005227:	74 12                	je     8100523b <setvbuf+0xc9>
81005229:	8b 43 10             	mov    0x10(%ebx),%eax
8100522c:	83 ec 08             	sub    $0x8,%esp
8100522f:	50                   	push   %eax
81005230:	ff 75 e0             	push   -0x20(%ebp)
81005233:	e8 9d c5 ff ff       	call   810017d5 <_free_r>
81005238:	83 c4 10             	add    $0x10,%esp
8100523b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100523f:	66 25 5c f3          	and    $0xf35c,%ax
81005243:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005247:	83 ff 02             	cmp    $0x2,%edi
8100524a:	74 6f                	je     810052bb <setvbuf+0x149>
8100524c:	8d 45 d4             	lea    -0x2c(%ebp),%eax
8100524f:	50                   	push   %eax
81005250:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005253:	50                   	push   %eax
81005254:	53                   	push   %ebx
81005255:	ff 75 e0             	push   -0x20(%ebp)
81005258:	e8 dc e0 ff ff       	call   81003339 <__swhatbuf_r>
8100525d:	83 c4 10             	add    $0x10,%esp
81005260:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005264:	09 d0                	or     %edx,%eax
81005266:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100526a:	85 f6                	test   %esi,%esi
8100526c:	75 0a                	jne    81005278 <setvbuf+0x106>
8100526e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005275:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005278:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100527c:	75 73                	jne    810052f1 <setvbuf+0x17f>
8100527e:	83 ec 0c             	sub    $0xc,%esp
81005281:	56                   	push   %esi
81005282:	e8 45 e1 ff ff       	call   810033cc <malloc>
81005287:	83 c4 10             	add    $0x10,%esp
8100528a:	89 45 0c             	mov    %eax,0xc(%ebp)
8100528d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005291:	75 20                	jne    810052b3 <setvbuf+0x141>
81005293:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100529a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100529d:	39 c6                	cmp    %eax,%esi
8100529f:	74 12                	je     810052b3 <setvbuf+0x141>
810052a1:	8b 75 d8             	mov    -0x28(%ebp),%esi
810052a4:	83 ec 0c             	sub    $0xc,%esp
810052a7:	56                   	push   %esi
810052a8:	e8 1f e1 ff ff       	call   810033cc <malloc>
810052ad:	83 c4 10             	add    $0x10,%esp
810052b0:	89 45 0c             	mov    %eax,0xc(%ebp)
810052b3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810052b7:	75 2e                	jne    810052e7 <setvbuf+0x175>
810052b9:	eb 01                	jmp    810052bc <setvbuf+0x14a>
810052bb:	90                   	nop
810052bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052c0:	83 c8 02             	or     $0x2,%eax
810052c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052c7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810052ce:	8d 43 43             	lea    0x43(%ebx),%eax
810052d1:	89 03                	mov    %eax,(%ebx)
810052d3:	8b 03                	mov    (%ebx),%eax
810052d5:	89 43 10             	mov    %eax,0x10(%ebx)
810052d8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810052df:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810052e2:	e9 8f 00 00 00       	jmp    81005376 <setvbuf+0x204>
810052e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052eb:	0c 80                	or     $0x80,%al
810052ed:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052f1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810052f4:	8b 40 38             	mov    0x38(%eax),%eax
810052f7:	85 c0                	test   %eax,%eax
810052f9:	75 0e                	jne    81005309 <setvbuf+0x197>
810052fb:	83 ec 0c             	sub    $0xc,%esp
810052fe:	ff 75 e0             	push   -0x20(%ebp)
81005301:	e8 79 c2 ff ff       	call   8100157f <__sinit>
81005306:	83 c4 10             	add    $0x10,%esp
81005309:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100530c:	39 c6                	cmp    %eax,%esi
8100530e:	74 0b                	je     8100531b <setvbuf+0x1a9>
81005310:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005314:	80 cc 08             	or     $0x8,%ah
81005317:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100531b:	83 ff 01             	cmp    $0x1,%edi
8100531e:	75 0b                	jne    8100532b <setvbuf+0x1b9>
81005320:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005324:	83 c8 01             	or     $0x1,%eax
81005327:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100532b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100532e:	89 03                	mov    %eax,(%ebx)
81005330:	8b 03                	mov    (%ebx),%eax
81005332:	89 43 10             	mov    %eax,0x10(%ebx)
81005335:	89 f0                	mov    %esi,%eax
81005337:	89 43 14             	mov    %eax,0x14(%ebx)
8100533a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100533e:	98                   	cwtl   
8100533f:	83 e0 08             	and    $0x8,%eax
81005342:	85 c0                	test   %eax,%eax
81005344:	74 24                	je     8100536a <setvbuf+0x1f8>
81005346:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100534a:	98                   	cwtl   
8100534b:	83 e0 01             	and    $0x1,%eax
8100534e:	85 c0                	test   %eax,%eax
81005350:	74 11                	je     81005363 <setvbuf+0x1f1>
81005352:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005359:	8b 43 14             	mov    0x14(%ebx),%eax
8100535c:	f7 d8                	neg    %eax
8100535e:	89 43 18             	mov    %eax,0x18(%ebx)
81005361:	eb 0e                	jmp    81005371 <setvbuf+0x1ff>
81005363:	89 f0                	mov    %esi,%eax
81005365:	89 43 08             	mov    %eax,0x8(%ebx)
81005368:	eb 07                	jmp    81005371 <setvbuf+0x1ff>
8100536a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005371:	b8 00 00 00 00       	mov    $0x0,%eax
81005376:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005379:	5b                   	pop    %ebx
8100537a:	5e                   	pop    %esi
8100537b:	5f                   	pop    %edi
8100537c:	5d                   	pop    %ebp
8100537d:	c3                   	ret    

8100537e <__sread>:
8100537e:	55                   	push   %ebp
8100537f:	89 e5                	mov    %esp,%ebp
81005381:	56                   	push   %esi
81005382:	53                   	push   %ebx
81005383:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005386:	8b 55 14             	mov    0x14(%ebp),%edx
81005389:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100538d:	98                   	cwtl   
8100538e:	52                   	push   %edx
8100538f:	ff 75 10             	push   0x10(%ebp)
81005392:	50                   	push   %eax
81005393:	ff 75 08             	push   0x8(%ebp)
81005396:	e8 a6 18 00 00       	call   81006c41 <_read_r>
8100539b:	83 c4 10             	add    $0x10,%esp
8100539e:	89 c6                	mov    %eax,%esi
810053a0:	85 f6                	test   %esi,%esi
810053a2:	78 0a                	js     810053ae <__sread+0x30>
810053a4:	8b 43 50             	mov    0x50(%ebx),%eax
810053a7:	01 f0                	add    %esi,%eax
810053a9:	89 43 50             	mov    %eax,0x50(%ebx)
810053ac:	eb 0b                	jmp    810053b9 <__sread+0x3b>
810053ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053b2:	80 e4 ef             	and    $0xef,%ah
810053b5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053b9:	89 f0                	mov    %esi,%eax
810053bb:	8d 65 f8             	lea    -0x8(%ebp),%esp
810053be:	5b                   	pop    %ebx
810053bf:	5e                   	pop    %esi
810053c0:	5d                   	pop    %ebp
810053c1:	c3                   	ret    

810053c2 <__seofread>:
810053c2:	55                   	push   %ebp
810053c3:	89 e5                	mov    %esp,%ebp
810053c5:	b8 00 00 00 00       	mov    $0x0,%eax
810053ca:	5d                   	pop    %ebp
810053cb:	c3                   	ret    

810053cc <__swrite>:
810053cc:	55                   	push   %ebp
810053cd:	89 e5                	mov    %esp,%ebp
810053cf:	53                   	push   %ebx
810053d0:	83 ec 14             	sub    $0x14,%esp
810053d3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810053d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053da:	98                   	cwtl   
810053db:	25 00 01 00 00       	and    $0x100,%eax
810053e0:	85 c0                	test   %eax,%eax
810053e2:	74 15                	je     810053f9 <__swrite+0x2d>
810053e4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810053e8:	98                   	cwtl   
810053e9:	6a 02                	push   $0x2
810053eb:	6a 00                	push   $0x0
810053ed:	50                   	push   %eax
810053ee:	ff 75 08             	push   0x8(%ebp)
810053f1:	e8 d8 15 00 00       	call   810069ce <_lseek_r>
810053f6:	83 c4 10             	add    $0x10,%esp
810053f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053fd:	80 e4 ef             	and    $0xef,%ah
81005400:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005404:	8b 55 14             	mov    0x14(%ebp),%edx
81005407:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100540b:	98                   	cwtl   
8100540c:	52                   	push   %edx
8100540d:	ff 75 10             	push   0x10(%ebp)
81005410:	50                   	push   %eax
81005411:	ff 75 08             	push   0x8(%ebp)
81005414:	e8 49 07 00 00       	call   81005b62 <_write_r>
81005419:	83 c4 10             	add    $0x10,%esp
8100541c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100541f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005422:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005425:	c9                   	leave  
81005426:	c3                   	ret    

81005427 <__sseek>:
81005427:	55                   	push   %ebp
81005428:	89 e5                	mov    %esp,%ebp
8100542a:	56                   	push   %esi
8100542b:	53                   	push   %ebx
8100542c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100542f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005433:	98                   	cwtl   
81005434:	ff 75 14             	push   0x14(%ebp)
81005437:	ff 75 10             	push   0x10(%ebp)
8100543a:	50                   	push   %eax
8100543b:	ff 75 08             	push   0x8(%ebp)
8100543e:	e8 8b 15 00 00       	call   810069ce <_lseek_r>
81005443:	83 c4 10             	add    $0x10,%esp
81005446:	89 c6                	mov    %eax,%esi
81005448:	83 fe ff             	cmp    $0xffffffff,%esi
8100544b:	75 0d                	jne    8100545a <__sseek+0x33>
8100544d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005451:	80 e4 ef             	and    $0xef,%ah
81005454:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005458:	eb 0e                	jmp    81005468 <__sseek+0x41>
8100545a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100545e:	80 cc 10             	or     $0x10,%ah
81005461:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005465:	89 73 50             	mov    %esi,0x50(%ebx)
81005468:	89 f0                	mov    %esi,%eax
8100546a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100546d:	5b                   	pop    %ebx
8100546e:	5e                   	pop    %esi
8100546f:	5d                   	pop    %ebp
81005470:	c3                   	ret    

81005471 <__sclose>:
81005471:	55                   	push   %ebp
81005472:	89 e5                	mov    %esp,%ebp
81005474:	83 ec 18             	sub    $0x18,%esp
81005477:	8b 45 0c             	mov    0xc(%ebp),%eax
8100547a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100547d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005480:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005484:	98                   	cwtl   
81005485:	83 ec 08             	sub    $0x8,%esp
81005488:	50                   	push   %eax
81005489:	ff 75 08             	push   0x8(%ebp)
8100548c:	e8 87 09 00 00       	call   81005e18 <_close_r>
81005491:	83 c4 10             	add    $0x10,%esp
81005494:	c9                   	leave  
81005495:	c3                   	ret    
81005496:	66 90                	xchg   %ax,%ax
81005498:	66 90                	xchg   %ax,%ax
8100549a:	66 90                	xchg   %ax,%ax
8100549c:	66 90                	xchg   %ax,%ax
8100549e:	66 90                	xchg   %ax,%ax

810054a0 <strchr>:
810054a0:	55                   	push   %ebp
810054a1:	89 e5                	mov    %esp,%ebp
810054a3:	57                   	push   %edi
810054a4:	53                   	push   %ebx
810054a5:	31 db                	xor    %ebx,%ebx
810054a7:	8b 7d 08             	mov    0x8(%ebp),%edi
810054aa:	02 5d 0c             	add    0xc(%ebp),%bl
810054ad:	0f 84 98 00 00 00    	je     8100554b <L25>
810054b3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054b9:	74 37                	je     810054f2 <L5>
810054bb:	89 f8                	mov    %edi,%eax
810054bd:	8a 08                	mov    (%eax),%cl
810054bf:	84 c9                	test   %cl,%cl
810054c1:	74 7b                	je     8100553e <L14>
810054c3:	38 d9                	cmp    %bl,%cl
810054c5:	74 7d                	je     81005544 <L19>
810054c7:	47                   	inc    %edi
810054c8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054ce:	74 22                	je     810054f2 <L5>
810054d0:	89 f8                	mov    %edi,%eax
810054d2:	8a 08                	mov    (%eax),%cl
810054d4:	84 c9                	test   %cl,%cl
810054d6:	74 66                	je     8100553e <L14>
810054d8:	38 d9                	cmp    %bl,%cl
810054da:	74 68                	je     81005544 <L19>
810054dc:	47                   	inc    %edi
810054dd:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054e3:	74 0d                	je     810054f2 <L5>
810054e5:	89 f8                	mov    %edi,%eax
810054e7:	8a 08                	mov    (%eax),%cl
810054e9:	84 c9                	test   %cl,%cl
810054eb:	74 51                	je     8100553e <L14>
810054ed:	38 d9                	cmp    %bl,%cl
810054ef:	74 53                	je     81005544 <L19>
810054f1:	47                   	inc    %edi

810054f2 <L5>:
810054f2:	89 d9                	mov    %ebx,%ecx
810054f4:	c1 e3 08             	shl    $0x8,%ebx
810054f7:	83 ef 04             	sub    $0x4,%edi
810054fa:	09 cb                	or     %ecx,%ebx
810054fc:	89 da                	mov    %ebx,%edx
810054fe:	c1 e3 10             	shl    $0x10,%ebx
81005501:	09 d3                	or     %edx,%ebx

81005503 <L10>:
81005503:	83 c7 04             	add    $0x4,%edi
81005506:	8b 0f                	mov    (%edi),%ecx
81005508:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100550e:	89 c8                	mov    %ecx,%eax
81005510:	f7 d0                	not    %eax
81005512:	21 c2                	and    %eax,%edx
81005514:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100551a:	75 14                	jne    81005530 <L9>
8100551c:	31 d9                	xor    %ebx,%ecx
8100551e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005524:	f7 d1                	not    %ecx
81005526:	21 ca                	and    %ecx,%edx
81005528:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100552e:	74 d3                	je     81005503 <L10>

81005530 <L9>:
81005530:	8d 47 ff             	lea    -0x1(%edi),%eax

81005533 <L15>:
81005533:	40                   	inc    %eax
81005534:	8a 10                	mov    (%eax),%dl
81005536:	84 d2                	test   %dl,%dl
81005538:	74 04                	je     8100553e <L14>
8100553a:	38 da                	cmp    %bl,%dl
8100553c:	75 f5                	jne    81005533 <L15>

8100553e <L14>:
8100553e:	38 18                	cmp    %bl,(%eax)
81005540:	74 02                	je     81005544 <L19>
81005542:	31 c0                	xor    %eax,%eax

81005544 <L19>:
81005544:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005547:	5b                   	pop    %ebx
81005548:	5f                   	pop    %edi
81005549:	c9                   	leave  
8100554a:	c3                   	ret    

8100554b <L25>:
8100554b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005551:	74 2b                	je     8100557e <L26>
81005553:	89 f8                	mov    %edi,%eax
81005555:	8a 08                	mov    (%eax),%cl
81005557:	84 c9                	test   %cl,%cl
81005559:	74 e9                	je     81005544 <L19>
8100555b:	47                   	inc    %edi
8100555c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005562:	74 1a                	je     8100557e <L26>
81005564:	89 f8                	mov    %edi,%eax
81005566:	8a 08                	mov    (%eax),%cl
81005568:	84 c9                	test   %cl,%cl
8100556a:	74 d8                	je     81005544 <L19>
8100556c:	47                   	inc    %edi
8100556d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005573:	74 09                	je     8100557e <L26>
81005575:	89 f8                	mov    %edi,%eax
81005577:	8a 08                	mov    (%eax),%cl
81005579:	84 c9                	test   %cl,%cl
8100557b:	74 c7                	je     81005544 <L19>
8100557d:	47                   	inc    %edi

8100557e <L26>:
8100557e:	83 ef 04             	sub    $0x4,%edi

81005581 <L27>:
81005581:	83 c7 04             	add    $0x4,%edi
81005584:	8b 0f                	mov    (%edi),%ecx
81005586:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100558c:	89 c8                	mov    %ecx,%eax
8100558e:	f7 d0                	not    %eax
81005590:	21 c2                	and    %eax,%edx
81005592:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005598:	74 e7                	je     81005581 <L27>
8100559a:	eb 94                	jmp    81005530 <L9>

8100559c <strcmp>:
8100559c:	55                   	push   %ebp
8100559d:	89 e5                	mov    %esp,%ebp
8100559f:	83 ec 10             	sub    $0x10,%esp
810055a2:	8b 55 08             	mov    0x8(%ebp),%edx
810055a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810055a8:	09 d0                	or     %edx,%eax
810055aa:	83 e0 03             	and    $0x3,%eax
810055ad:	85 c0                	test   %eax,%eax
810055af:	75 5e                	jne    8100560f <strcmp+0x73>
810055b1:	8b 45 08             	mov    0x8(%ebp),%eax
810055b4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810055b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ba:	89 45 f8             	mov    %eax,-0x8(%ebp)
810055bd:	eb 2c                	jmp    810055eb <strcmp+0x4f>
810055bf:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055c2:	8b 00                	mov    (%eax),%eax
810055c4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810055ca:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055cd:	8b 00                	mov    (%eax),%eax
810055cf:	f7 d0                	not    %eax
810055d1:	21 d0                	and    %edx,%eax
810055d3:	25 80 80 80 80       	and    $0x80808080,%eax
810055d8:	85 c0                	test   %eax,%eax
810055da:	74 07                	je     810055e3 <strcmp+0x47>
810055dc:	b8 00 00 00 00       	mov    $0x0,%eax
810055e1:	eb 5c                	jmp    8100563f <strcmp+0xa3>
810055e3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810055e7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810055eb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055ee:	8b 10                	mov    (%eax),%edx
810055f0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810055f3:	8b 00                	mov    (%eax),%eax
810055f5:	39 c2                	cmp    %eax,%edx
810055f7:	74 c6                	je     810055bf <strcmp+0x23>
810055f9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810055fc:	89 45 08             	mov    %eax,0x8(%ebp)
810055ff:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005602:	89 45 0c             	mov    %eax,0xc(%ebp)
81005605:	eb 08                	jmp    8100560f <strcmp+0x73>
81005607:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100560b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100560f:	8b 45 08             	mov    0x8(%ebp),%eax
81005612:	0f b6 00             	movzbl (%eax),%eax
81005615:	84 c0                	test   %al,%al
81005617:	74 10                	je     81005629 <strcmp+0x8d>
81005619:	8b 45 08             	mov    0x8(%ebp),%eax
8100561c:	0f b6 10             	movzbl (%eax),%edx
8100561f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005622:	0f b6 00             	movzbl (%eax),%eax
81005625:	38 c2                	cmp    %al,%dl
81005627:	74 de                	je     81005607 <strcmp+0x6b>
81005629:	8b 45 08             	mov    0x8(%ebp),%eax
8100562c:	0f b6 00             	movzbl (%eax),%eax
8100562f:	0f b6 d0             	movzbl %al,%edx
81005632:	8b 45 0c             	mov    0xc(%ebp),%eax
81005635:	0f b6 00             	movzbl (%eax),%eax
81005638:	0f b6 c8             	movzbl %al,%ecx
8100563b:	89 d0                	mov    %edx,%eax
8100563d:	29 c8                	sub    %ecx,%eax
8100563f:	c9                   	leave  
81005640:	c3                   	ret    
81005641:	66 90                	xchg   %ax,%ax
81005643:	66 90                	xchg   %ax,%ax
81005645:	66 90                	xchg   %ax,%ax
81005647:	66 90                	xchg   %ax,%ax
81005649:	66 90                	xchg   %ax,%ax
8100564b:	66 90                	xchg   %ax,%ax
8100564d:	66 90                	xchg   %ax,%ax
8100564f:	90                   	nop

81005650 <strlen>:
81005650:	55                   	push   %ebp
81005651:	89 e5                	mov    %esp,%ebp
81005653:	57                   	push   %edi
81005654:	8b 55 08             	mov    0x8(%ebp),%edx
81005657:	89 d7                	mov    %edx,%edi
81005659:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100565f:	74 25                	je     81005686 <L5>
81005661:	8a 0f                	mov    (%edi),%cl
81005663:	47                   	inc    %edi
81005664:	84 c9                	test   %cl,%cl
81005666:	74 56                	je     810056be <L15>
81005668:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100566e:	74 16                	je     81005686 <L5>
81005670:	8a 0f                	mov    (%edi),%cl
81005672:	47                   	inc    %edi
81005673:	84 c9                	test   %cl,%cl
81005675:	74 47                	je     810056be <L15>
81005677:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100567d:	74 07                	je     81005686 <L5>
8100567f:	8a 0f                	mov    (%edi),%cl
81005681:	47                   	inc    %edi
81005682:	84 c9                	test   %cl,%cl
81005684:	74 38                	je     810056be <L15>

81005686 <L5>:
81005686:	83 ef 04             	sub    $0x4,%edi
81005689:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005690 <L10>:
81005690:	83 c7 04             	add    $0x4,%edi
81005693:	8b 0f                	mov    (%edi),%ecx
81005695:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100569b:	f7 d1                	not    %ecx
8100569d:	21 c8                	and    %ecx,%eax
8100569f:	a9 80 80 80 80       	test   $0x80808080,%eax
810056a4:	74 ea                	je     81005690 <L10>
810056a6:	f7 d1                	not    %ecx
810056a8:	47                   	inc    %edi
810056a9:	84 c9                	test   %cl,%cl
810056ab:	74 11                	je     810056be <L15>
810056ad:	47                   	inc    %edi
810056ae:	c1 e9 08             	shr    $0x8,%ecx
810056b1:	84 c9                	test   %cl,%cl
810056b3:	74 09                	je     810056be <L15>
810056b5:	47                   	inc    %edi
810056b6:	c1 e9 08             	shr    $0x8,%ecx
810056b9:	84 c9                	test   %cl,%cl
810056bb:	74 01                	je     810056be <L15>
810056bd:	47                   	inc    %edi

810056be <L15>:
810056be:	29 d7                	sub    %edx,%edi
810056c0:	8d 47 ff             	lea    -0x1(%edi),%eax
810056c3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810056c6:	5f                   	pop    %edi
810056c7:	c9                   	leave  
810056c8:	c3                   	ret    

810056c9 <strtok>:
810056c9:	55                   	push   %ebp
810056ca:	89 e5                	mov    %esp,%ebp
810056cc:	83 ec 18             	sub    $0x18,%esp
810056cf:	8b 55 08             	mov    0x8(%ebp),%edx
810056d2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810056d5:	a1 84 83 00 81       	mov    0x81008384,%eax
810056da:	89 45 f4             	mov    %eax,-0xc(%ebp)
810056dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810056e0:	83 c0 5c             	add    $0x5c,%eax
810056e3:	6a 01                	push   $0x1
810056e5:	50                   	push   %eax
810056e6:	51                   	push   %ecx
810056e7:	52                   	push   %edx
810056e8:	e8 05 00 00 00       	call   810056f2 <__strtok_r>
810056ed:	83 c4 10             	add    $0x10,%esp
810056f0:	c9                   	leave  
810056f1:	c3                   	ret    

810056f2 <__strtok_r>:
810056f2:	55                   	push   %ebp
810056f3:	89 e5                	mov    %esp,%ebp
810056f5:	57                   	push   %edi
810056f6:	56                   	push   %esi
810056f7:	53                   	push   %ebx
810056f8:	83 ec 10             	sub    $0x10,%esp
810056fb:	8b 45 08             	mov    0x8(%ebp),%eax
810056fe:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005701:	85 c0                	test   %eax,%eax
81005703:	75 13                	jne    81005718 <__strtok_r+0x26>
81005705:	8b 45 10             	mov    0x10(%ebp),%eax
81005708:	8b 00                	mov    (%eax),%eax
8100570a:	85 c0                	test   %eax,%eax
8100570c:	75 0a                	jne    81005718 <__strtok_r+0x26>
8100570e:	b8 00 00 00 00       	mov    $0x0,%eax
81005713:	e9 92 00 00 00       	jmp    810057aa <__strtok_r+0xb8>
81005718:	90                   	nop
81005719:	89 c2                	mov    %eax,%edx
8100571b:	8d 42 01             	lea    0x1(%edx),%eax
8100571e:	0f b6 12             	movzbl (%edx),%edx
81005721:	0f be f2             	movsbl %dl,%esi
81005724:	89 cf                	mov    %ecx,%edi
81005726:	eb 1c                	jmp    81005744 <__strtok_r+0x52>
81005728:	39 de                	cmp    %ebx,%esi
8100572a:	75 18                	jne    81005744 <__strtok_r+0x52>
8100572c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005730:	74 02                	je     81005734 <__strtok_r+0x42>
81005732:	eb e5                	jmp    81005719 <__strtok_r+0x27>
81005734:	8b 55 10             	mov    0x10(%ebp),%edx
81005737:	89 02                	mov    %eax,(%edx)
81005739:	8d 50 ff             	lea    -0x1(%eax),%edx
8100573c:	c6 02 00             	movb   $0x0,(%edx)
8100573f:	83 e8 01             	sub    $0x1,%eax
81005742:	eb 66                	jmp    810057aa <__strtok_r+0xb8>
81005744:	89 fa                	mov    %edi,%edx
81005746:	8d 7a 01             	lea    0x1(%edx),%edi
81005749:	0f b6 12             	movzbl (%edx),%edx
8100574c:	0f be da             	movsbl %dl,%ebx
8100574f:	85 db                	test   %ebx,%ebx
81005751:	75 d5                	jne    81005728 <__strtok_r+0x36>
81005753:	85 f6                	test   %esi,%esi
81005755:	75 10                	jne    81005767 <__strtok_r+0x75>
81005757:	8b 45 10             	mov    0x10(%ebp),%eax
8100575a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005760:	b8 00 00 00 00       	mov    $0x0,%eax
81005765:	eb 43                	jmp    810057aa <__strtok_r+0xb8>
81005767:	8d 50 ff             	lea    -0x1(%eax),%edx
8100576a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100576d:	89 c2                	mov    %eax,%edx
8100576f:	8d 42 01             	lea    0x1(%edx),%eax
81005772:	0f b6 12             	movzbl (%edx),%edx
81005775:	0f be f2             	movsbl %dl,%esi
81005778:	89 cf                	mov    %ecx,%edi
8100577a:	89 fa                	mov    %edi,%edx
8100577c:	8d 7a 01             	lea    0x1(%edx),%edi
8100577f:	0f b6 12             	movzbl (%edx),%edx
81005782:	0f be da             	movsbl %dl,%ebx
81005785:	39 f3                	cmp    %esi,%ebx
81005787:	75 1b                	jne    810057a4 <__strtok_r+0xb2>
81005789:	85 f6                	test   %esi,%esi
8100578b:	75 07                	jne    81005794 <__strtok_r+0xa2>
8100578d:	b8 00 00 00 00       	mov    $0x0,%eax
81005792:	eb 06                	jmp    8100579a <__strtok_r+0xa8>
81005794:	8d 50 ff             	lea    -0x1(%eax),%edx
81005797:	c6 02 00             	movb   $0x0,(%edx)
8100579a:	8b 55 10             	mov    0x10(%ebp),%edx
8100579d:	89 02                	mov    %eax,(%edx)
8100579f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810057a2:	eb 06                	jmp    810057aa <__strtok_r+0xb8>
810057a4:	85 db                	test   %ebx,%ebx
810057a6:	75 d2                	jne    8100577a <__strtok_r+0x88>
810057a8:	eb c3                	jmp    8100576d <__strtok_r+0x7b>
810057aa:	83 c4 10             	add    $0x10,%esp
810057ad:	5b                   	pop    %ebx
810057ae:	5e                   	pop    %esi
810057af:	5f                   	pop    %edi
810057b0:	5d                   	pop    %ebp
810057b1:	c3                   	ret    

810057b2 <strtok_r>:
810057b2:	55                   	push   %ebp
810057b3:	89 e5                	mov    %esp,%ebp
810057b5:	8b 45 08             	mov    0x8(%ebp),%eax
810057b8:	8b 55 0c             	mov    0xc(%ebp),%edx
810057bb:	6a 01                	push   $0x1
810057bd:	ff 75 10             	push   0x10(%ebp)
810057c0:	52                   	push   %edx
810057c1:	50                   	push   %eax
810057c2:	e8 2b ff ff ff       	call   810056f2 <__strtok_r>
810057c7:	83 c4 10             	add    $0x10,%esp
810057ca:	c9                   	leave  
810057cb:	c3                   	ret    

810057cc <__locale_ctype_ptr_l>:
810057cc:	55                   	push   %ebp
810057cd:	89 e5                	mov    %esp,%ebp
810057cf:	b8 20 7e 00 81       	mov    $0x81007e20,%eax
810057d4:	5d                   	pop    %ebp
810057d5:	c3                   	ret    

810057d6 <__get_global_locale>:
810057d6:	55                   	push   %ebp
810057d7:	89 e5                	mov    %esp,%ebp
810057d9:	b8 c0 87 00 81       	mov    $0x810087c0,%eax
810057de:	5d                   	pop    %ebp
810057df:	c3                   	ret    

810057e0 <__get_current_locale>:
810057e0:	55                   	push   %ebp
810057e1:	89 e5                	mov    %esp,%ebp
810057e3:	e8 ee ff ff ff       	call   810057d6 <__get_global_locale>
810057e8:	5d                   	pop    %ebp
810057e9:	c3                   	ret    

810057ea <_strtol_l>:
810057ea:	55                   	push   %ebp
810057eb:	89 e5                	mov    %esp,%ebp
810057ed:	57                   	push   %edi
810057ee:	56                   	push   %esi
810057ef:	53                   	push   %ebx
810057f0:	83 ec 1c             	sub    $0x1c,%esp
810057f3:	8b 75 0c             	mov    0xc(%ebp),%esi
810057f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810057fd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005801:	78 0c                	js     8100580f <_strtol_l+0x25>
81005803:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005807:	74 06                	je     8100580f <_strtol_l+0x25>
81005809:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100580d:	7e 15                	jle    81005824 <_strtol_l+0x3a>
8100580f:	e8 44 06 00 00       	call   81005e58 <__errno>
81005814:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100581a:	b8 00 00 00 00       	mov    $0x0,%eax
8100581f:	e9 90 01 00 00       	jmp    810059b4 <_strtol_l+0x1ca>
81005824:	89 f0                	mov    %esi,%eax
81005826:	8d 70 01             	lea    0x1(%eax),%esi
81005829:	0f b6 00             	movzbl (%eax),%eax
8100582c:	0f b6 d8             	movzbl %al,%ebx
8100582f:	83 ec 0c             	sub    $0xc,%esp
81005832:	ff 75 18             	push   0x18(%ebp)
81005835:	e8 92 ff ff ff       	call   810057cc <__locale_ctype_ptr_l>
8100583a:	83 c4 10             	add    $0x10,%esp
8100583d:	89 da                	mov    %ebx,%edx
8100583f:	83 c2 01             	add    $0x1,%edx
81005842:	01 d0                	add    %edx,%eax
81005844:	0f b6 00             	movzbl (%eax),%eax
81005847:	0f be c0             	movsbl %al,%eax
8100584a:	83 e0 08             	and    $0x8,%eax
8100584d:	85 c0                	test   %eax,%eax
8100584f:	75 d3                	jne    81005824 <_strtol_l+0x3a>
81005851:	83 fb 2d             	cmp    $0x2d,%ebx
81005854:	75 14                	jne    8100586a <_strtol_l+0x80>
81005856:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100585d:	89 f0                	mov    %esi,%eax
8100585f:	8d 70 01             	lea    0x1(%eax),%esi
81005862:	0f b6 00             	movzbl (%eax),%eax
81005865:	0f b6 d8             	movzbl %al,%ebx
81005868:	eb 10                	jmp    8100587a <_strtol_l+0x90>
8100586a:	83 fb 2b             	cmp    $0x2b,%ebx
8100586d:	75 0b                	jne    8100587a <_strtol_l+0x90>
8100586f:	89 f0                	mov    %esi,%eax
81005871:	8d 70 01             	lea    0x1(%eax),%esi
81005874:	0f b6 00             	movzbl (%eax),%eax
81005877:	0f b6 d8             	movzbl %al,%ebx
8100587a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100587e:	74 06                	je     81005886 <_strtol_l+0x9c>
81005880:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005884:	75 26                	jne    810058ac <_strtol_l+0xc2>
81005886:	83 fb 30             	cmp    $0x30,%ebx
81005889:	75 21                	jne    810058ac <_strtol_l+0xc2>
8100588b:	0f b6 06             	movzbl (%esi),%eax
8100588e:	3c 78                	cmp    $0x78,%al
81005890:	74 07                	je     81005899 <_strtol_l+0xaf>
81005892:	0f b6 06             	movzbl (%esi),%eax
81005895:	3c 58                	cmp    $0x58,%al
81005897:	75 13                	jne    810058ac <_strtol_l+0xc2>
81005899:	8d 46 01             	lea    0x1(%esi),%eax
8100589c:	0f b6 00             	movzbl (%eax),%eax
8100589f:	0f b6 d8             	movzbl %al,%ebx
810058a2:	83 c6 02             	add    $0x2,%esi
810058a5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
810058ac:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810058b0:	75 14                	jne    810058c6 <_strtol_l+0xdc>
810058b2:	83 fb 30             	cmp    $0x30,%ebx
810058b5:	75 07                	jne    810058be <_strtol_l+0xd4>
810058b7:	b8 08 00 00 00       	mov    $0x8,%eax
810058bc:	eb 05                	jmp    810058c3 <_strtol_l+0xd9>
810058be:	b8 0a 00 00 00       	mov    $0xa,%eax
810058c3:	89 45 14             	mov    %eax,0x14(%ebp)
810058c6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810058ca:	74 07                	je     810058d3 <_strtol_l+0xe9>
810058cc:	b8 00 00 00 80       	mov    $0x80000000,%eax
810058d1:	eb 05                	jmp    810058d8 <_strtol_l+0xee>
810058d3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810058d8:	89 c7                	mov    %eax,%edi
810058da:	8b 4d 14             	mov    0x14(%ebp),%ecx
810058dd:	89 f8                	mov    %edi,%eax
810058df:	ba 00 00 00 00       	mov    $0x0,%edx
810058e4:	f7 f1                	div    %ecx
810058e6:	89 d0                	mov    %edx,%eax
810058e8:	89 45 e0             	mov    %eax,-0x20(%ebp)
810058eb:	8b 4d 14             	mov    0x14(%ebp),%ecx
810058ee:	89 f8                	mov    %edi,%eax
810058f0:	ba 00 00 00 00       	mov    $0x0,%edx
810058f5:	f7 f1                	div    %ecx
810058f7:	89 c2                	mov    %eax,%edx
810058f9:	bf 00 00 00 00       	mov    $0x0,%edi
810058fe:	b9 00 00 00 00       	mov    $0x0,%ecx
81005903:	83 fb 2f             	cmp    $0x2f,%ebx
81005906:	7e 0a                	jle    81005912 <_strtol_l+0x128>
81005908:	83 fb 39             	cmp    $0x39,%ebx
8100590b:	7f 05                	jg     81005912 <_strtol_l+0x128>
8100590d:	83 eb 30             	sub    $0x30,%ebx
81005910:	eb 1c                	jmp    8100592e <_strtol_l+0x144>
81005912:	83 fb 40             	cmp    $0x40,%ebx
81005915:	7e 0a                	jle    81005921 <_strtol_l+0x137>
81005917:	83 fb 5a             	cmp    $0x5a,%ebx
8100591a:	7f 05                	jg     81005921 <_strtol_l+0x137>
8100591c:	83 eb 37             	sub    $0x37,%ebx
8100591f:	eb 0d                	jmp    8100592e <_strtol_l+0x144>
81005921:	83 fb 60             	cmp    $0x60,%ebx
81005924:	7e 46                	jle    8100596c <_strtol_l+0x182>
81005926:	83 fb 7a             	cmp    $0x7a,%ebx
81005929:	7f 41                	jg     8100596c <_strtol_l+0x182>
8100592b:	83 eb 57             	sub    $0x57,%ebx
8100592e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005931:	7d 38                	jge    8100596b <_strtol_l+0x181>
81005933:	89 c8                	mov    %ecx,%eax
81005935:	85 c0                	test   %eax,%eax
81005937:	78 0f                	js     81005948 <_strtol_l+0x15e>
81005939:	89 d0                	mov    %edx,%eax
8100593b:	39 c7                	cmp    %eax,%edi
8100593d:	77 09                	ja     81005948 <_strtol_l+0x15e>
8100593f:	39 c7                	cmp    %eax,%edi
81005941:	75 0c                	jne    8100594f <_strtol_l+0x165>
81005943:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005946:	7e 07                	jle    8100594f <_strtol_l+0x165>
81005948:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100594d:	eb 0f                	jmp    8100595e <_strtol_l+0x174>
8100594f:	b9 01 00 00 00       	mov    $0x1,%ecx
81005954:	8b 45 14             	mov    0x14(%ebp),%eax
81005957:	0f af f8             	imul   %eax,%edi
8100595a:	89 d8                	mov    %ebx,%eax
8100595c:	01 c7                	add    %eax,%edi
8100595e:	89 f0                	mov    %esi,%eax
81005960:	8d 70 01             	lea    0x1(%eax),%esi
81005963:	0f b6 00             	movzbl (%eax),%eax
81005966:	0f b6 d8             	movzbl %al,%ebx
81005969:	eb 98                	jmp    81005903 <_strtol_l+0x119>
8100596b:	90                   	nop
8100596c:	89 c8                	mov    %ecx,%eax
8100596e:	85 c0                	test   %eax,%eax
81005970:	79 1f                	jns    81005991 <_strtol_l+0x1a7>
81005972:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005976:	74 07                	je     8100597f <_strtol_l+0x195>
81005978:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100597d:	eb 05                	jmp    81005984 <_strtol_l+0x19a>
8100597f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005984:	89 c7                	mov    %eax,%edi
81005986:	8b 45 08             	mov    0x8(%ebp),%eax
81005989:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100598f:	eb 08                	jmp    81005999 <_strtol_l+0x1af>
81005991:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005995:	74 02                	je     81005999 <_strtol_l+0x1af>
81005997:	f7 df                	neg    %edi
81005999:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100599d:	74 13                	je     810059b2 <_strtol_l+0x1c8>
8100599f:	89 c8                	mov    %ecx,%eax
810059a1:	85 c0                	test   %eax,%eax
810059a3:	74 05                	je     810059aa <_strtol_l+0x1c0>
810059a5:	8d 46 ff             	lea    -0x1(%esi),%eax
810059a8:	eb 03                	jmp    810059ad <_strtol_l+0x1c3>
810059aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810059ad:	8b 55 10             	mov    0x10(%ebp),%edx
810059b0:	89 02                	mov    %eax,(%edx)
810059b2:	89 f8                	mov    %edi,%eax
810059b4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810059b7:	5b                   	pop    %ebx
810059b8:	5e                   	pop    %esi
810059b9:	5f                   	pop    %edi
810059ba:	5d                   	pop    %ebp
810059bb:	c3                   	ret    

810059bc <_strtol_r>:
810059bc:	55                   	push   %ebp
810059bd:	89 e5                	mov    %esp,%ebp
810059bf:	83 ec 08             	sub    $0x8,%esp
810059c2:	e8 19 fe ff ff       	call   810057e0 <__get_current_locale>
810059c7:	83 ec 0c             	sub    $0xc,%esp
810059ca:	50                   	push   %eax
810059cb:	ff 75 14             	push   0x14(%ebp)
810059ce:	ff 75 10             	push   0x10(%ebp)
810059d1:	ff 75 0c             	push   0xc(%ebp)
810059d4:	ff 75 08             	push   0x8(%ebp)
810059d7:	e8 0e fe ff ff       	call   810057ea <_strtol_l>
810059dc:	83 c4 20             	add    $0x20,%esp
810059df:	c9                   	leave  
810059e0:	c3                   	ret    

810059e1 <strtol_l>:
810059e1:	55                   	push   %ebp
810059e2:	89 e5                	mov    %esp,%ebp
810059e4:	83 ec 08             	sub    $0x8,%esp
810059e7:	a1 84 83 00 81       	mov    0x81008384,%eax
810059ec:	83 ec 0c             	sub    $0xc,%esp
810059ef:	ff 75 14             	push   0x14(%ebp)
810059f2:	ff 75 10             	push   0x10(%ebp)
810059f5:	ff 75 0c             	push   0xc(%ebp)
810059f8:	ff 75 08             	push   0x8(%ebp)
810059fb:	50                   	push   %eax
810059fc:	e8 e9 fd ff ff       	call   810057ea <_strtol_l>
81005a01:	83 c4 20             	add    $0x20,%esp
81005a04:	c9                   	leave  
81005a05:	c3                   	ret    

81005a06 <strtol>:
81005a06:	55                   	push   %ebp
81005a07:	89 e5                	mov    %esp,%ebp
81005a09:	83 ec 08             	sub    $0x8,%esp
81005a0c:	e8 cf fd ff ff       	call   810057e0 <__get_current_locale>
81005a11:	8b 15 84 83 00 81    	mov    0x81008384,%edx
81005a17:	83 ec 0c             	sub    $0xc,%esp
81005a1a:	50                   	push   %eax
81005a1b:	ff 75 10             	push   0x10(%ebp)
81005a1e:	ff 75 0c             	push   0xc(%ebp)
81005a21:	ff 75 08             	push   0x8(%ebp)
81005a24:	52                   	push   %edx
81005a25:	e8 c0 fd ff ff       	call   810057ea <_strtol_l>
81005a2a:	83 c4 20             	add    $0x20,%esp
81005a2d:	c9                   	leave  
81005a2e:	c3                   	ret    

81005a2f <__swbuf_r>:
81005a2f:	55                   	push   %ebp
81005a30:	89 e5                	mov    %esp,%ebp
81005a32:	57                   	push   %edi
81005a33:	56                   	push   %esi
81005a34:	53                   	push   %ebx
81005a35:	83 ec 1c             	sub    $0x1c,%esp
81005a38:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005a3b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005a3e:	8b 45 08             	mov    0x8(%ebp),%eax
81005a41:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005a44:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005a48:	74 18                	je     81005a62 <__swbuf_r+0x33>
81005a4a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005a4d:	8b 40 38             	mov    0x38(%eax),%eax
81005a50:	85 c0                	test   %eax,%eax
81005a52:	75 0e                	jne    81005a62 <__swbuf_r+0x33>
81005a54:	83 ec 0c             	sub    $0xc,%esp
81005a57:	ff 75 e4             	push   -0x1c(%ebp)
81005a5a:	e8 20 bb ff ff       	call   8100157f <__sinit>
81005a5f:	83 c4 10             	add    $0x10,%esp
81005a62:	8b 43 18             	mov    0x18(%ebx),%eax
81005a65:	89 43 08             	mov    %eax,0x8(%ebx)
81005a68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a6c:	98                   	cwtl   
81005a6d:	83 e0 08             	and    $0x8,%eax
81005a70:	85 c0                	test   %eax,%eax
81005a72:	74 07                	je     81005a7b <__swbuf_r+0x4c>
81005a74:	8b 43 10             	mov    0x10(%ebx),%eax
81005a77:	85 c0                	test   %eax,%eax
81005a79:	75 1d                	jne    81005a98 <__swbuf_r+0x69>
81005a7b:	83 ec 08             	sub    $0x8,%esp
81005a7e:	53                   	push   %ebx
81005a7f:	ff 75 08             	push   0x8(%ebp)
81005a82:	e8 21 01 00 00       	call   81005ba8 <__swsetup_r>
81005a87:	83 c4 10             	add    $0x10,%esp
81005a8a:	85 c0                	test   %eax,%eax
81005a8c:	74 0a                	je     81005a98 <__swbuf_r+0x69>
81005a8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005a93:	e9 a1 00 00 00       	jmp    81005b39 <__swbuf_r+0x10a>
81005a98:	89 f8                	mov    %edi,%eax
81005a9a:	0f b6 f8             	movzbl %al,%edi
81005a9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005aa1:	98                   	cwtl   
81005aa2:	25 00 20 00 00       	and    $0x2000,%eax
81005aa7:	85 c0                	test   %eax,%eax
81005aa9:	75 14                	jne    81005abf <__swbuf_r+0x90>
81005aab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005aaf:	80 cc 20             	or     $0x20,%ah
81005ab2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ab6:	8b 43 64             	mov    0x64(%ebx),%eax
81005ab9:	80 e4 df             	and    $0xdf,%ah
81005abc:	89 43 64             	mov    %eax,0x64(%ebx)
81005abf:	8b 03                	mov    (%ebx),%eax
81005ac1:	8b 53 10             	mov    0x10(%ebx),%edx
81005ac4:	29 d0                	sub    %edx,%eax
81005ac6:	89 c6                	mov    %eax,%esi
81005ac8:	8b 43 14             	mov    0x14(%ebx),%eax
81005acb:	39 c6                	cmp    %eax,%esi
81005acd:	7c 1f                	jl     81005aee <__swbuf_r+0xbf>
81005acf:	83 ec 08             	sub    $0x8,%esp
81005ad2:	53                   	push   %ebx
81005ad3:	ff 75 08             	push   0x8(%ebp)
81005ad6:	e8 a1 b5 ff ff       	call   8100107c <_fflush_r>
81005adb:	83 c4 10             	add    $0x10,%esp
81005ade:	85 c0                	test   %eax,%eax
81005ae0:	74 07                	je     81005ae9 <__swbuf_r+0xba>
81005ae2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005ae7:	eb 50                	jmp    81005b39 <__swbuf_r+0x10a>
81005ae9:	be 00 00 00 00       	mov    $0x0,%esi
81005aee:	8b 43 08             	mov    0x8(%ebx),%eax
81005af1:	83 e8 01             	sub    $0x1,%eax
81005af4:	89 43 08             	mov    %eax,0x8(%ebx)
81005af7:	8b 03                	mov    (%ebx),%eax
81005af9:	8d 50 01             	lea    0x1(%eax),%edx
81005afc:	89 13                	mov    %edx,(%ebx)
81005afe:	89 fa                	mov    %edi,%edx
81005b00:	88 10                	mov    %dl,(%eax)
81005b02:	83 c6 01             	add    $0x1,%esi
81005b05:	8b 43 14             	mov    0x14(%ebx),%eax
81005b08:	39 c6                	cmp    %eax,%esi
81005b0a:	74 11                	je     81005b1d <__swbuf_r+0xee>
81005b0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005b10:	98                   	cwtl   
81005b11:	83 e0 01             	and    $0x1,%eax
81005b14:	85 c0                	test   %eax,%eax
81005b16:	74 1f                	je     81005b37 <__swbuf_r+0x108>
81005b18:	83 ff 0a             	cmp    $0xa,%edi
81005b1b:	75 1a                	jne    81005b37 <__swbuf_r+0x108>
81005b1d:	83 ec 08             	sub    $0x8,%esp
81005b20:	53                   	push   %ebx
81005b21:	ff 75 08             	push   0x8(%ebp)
81005b24:	e8 53 b5 ff ff       	call   8100107c <_fflush_r>
81005b29:	83 c4 10             	add    $0x10,%esp
81005b2c:	85 c0                	test   %eax,%eax
81005b2e:	74 07                	je     81005b37 <__swbuf_r+0x108>
81005b30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005b35:	eb 02                	jmp    81005b39 <__swbuf_r+0x10a>
81005b37:	89 f8                	mov    %edi,%eax
81005b39:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005b3c:	5b                   	pop    %ebx
81005b3d:	5e                   	pop    %esi
81005b3e:	5f                   	pop    %edi
81005b3f:	5d                   	pop    %ebp
81005b40:	c3                   	ret    

81005b41 <__swbuf>:
81005b41:	55                   	push   %ebp
81005b42:	89 e5                	mov    %esp,%ebp
81005b44:	83 ec 08             	sub    $0x8,%esp
81005b47:	8b 55 08             	mov    0x8(%ebp),%edx
81005b4a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005b4d:	a1 84 83 00 81       	mov    0x81008384,%eax
81005b52:	83 ec 04             	sub    $0x4,%esp
81005b55:	51                   	push   %ecx
81005b56:	52                   	push   %edx
81005b57:	50                   	push   %eax
81005b58:	e8 d2 fe ff ff       	call   81005a2f <__swbuf_r>
81005b5d:	83 c4 10             	add    $0x10,%esp
81005b60:	c9                   	leave  
81005b61:	c3                   	ret    

81005b62 <_write_r>:
81005b62:	55                   	push   %ebp
81005b63:	89 e5                	mov    %esp,%ebp
81005b65:	83 ec 18             	sub    $0x18,%esp
81005b68:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
81005b6f:	00 00 00 
81005b72:	83 ec 04             	sub    $0x4,%esp
81005b75:	ff 75 14             	push   0x14(%ebp)
81005b78:	ff 75 10             	push   0x10(%ebp)
81005b7b:	ff 75 0c             	push   0xc(%ebp)
81005b7e:	e8 d9 ae ff ff       	call   81000a5c <write>
81005b83:	83 c4 10             	add    $0x10,%esp
81005b86:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b89:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005b8d:	75 14                	jne    81005ba3 <_write_r+0x41>
81005b8f:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81005b94:	85 c0                	test   %eax,%eax
81005b96:	74 0b                	je     81005ba3 <_write_r+0x41>
81005b98:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81005b9e:	8b 45 08             	mov    0x8(%ebp),%eax
81005ba1:	89 10                	mov    %edx,(%eax)
81005ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ba6:	c9                   	leave  
81005ba7:	c3                   	ret    

81005ba8 <__swsetup_r>:
81005ba8:	55                   	push   %ebp
81005ba9:	89 e5                	mov    %esp,%ebp
81005bab:	53                   	push   %ebx
81005bac:	83 ec 14             	sub    $0x14,%esp
81005baf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005bb2:	a1 84 83 00 81       	mov    0x81008384,%eax
81005bb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005bbe:	74 18                	je     81005bd8 <__swsetup_r+0x30>
81005bc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bc3:	8b 40 38             	mov    0x38(%eax),%eax
81005bc6:	85 c0                	test   %eax,%eax
81005bc8:	75 0e                	jne    81005bd8 <__swsetup_r+0x30>
81005bca:	83 ec 0c             	sub    $0xc,%esp
81005bcd:	ff 75 f4             	push   -0xc(%ebp)
81005bd0:	e8 aa b9 ff ff       	call   8100157f <__sinit>
81005bd5:	83 c4 10             	add    $0x10,%esp
81005bd8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bdc:	98                   	cwtl   
81005bdd:	83 e0 08             	and    $0x8,%eax
81005be0:	85 c0                	test   %eax,%eax
81005be2:	0f 85 82 00 00 00    	jne    81005c6a <__swsetup_r+0xc2>
81005be8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bec:	98                   	cwtl   
81005bed:	83 e0 10             	and    $0x10,%eax
81005bf0:	85 c0                	test   %eax,%eax
81005bf2:	75 1e                	jne    81005c12 <__swsetup_r+0x6a>
81005bf4:	8b 45 08             	mov    0x8(%ebp),%eax
81005bf7:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005bfd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c01:	83 c8 40             	or     $0x40,%eax
81005c04:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005c0d:	e9 ec 00 00 00       	jmp    81005cfe <__swsetup_r+0x156>
81005c12:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c16:	98                   	cwtl   
81005c17:	83 e0 04             	and    $0x4,%eax
81005c1a:	85 c0                	test   %eax,%eax
81005c1c:	74 41                	je     81005c5f <__swsetup_r+0xb7>
81005c1e:	8b 43 30             	mov    0x30(%ebx),%eax
81005c21:	85 c0                	test   %eax,%eax
81005c23:	74 23                	je     81005c48 <__swsetup_r+0xa0>
81005c25:	8b 53 30             	mov    0x30(%ebx),%edx
81005c28:	8d 43 40             	lea    0x40(%ebx),%eax
81005c2b:	39 c2                	cmp    %eax,%edx
81005c2d:	74 12                	je     81005c41 <__swsetup_r+0x99>
81005c2f:	8b 43 30             	mov    0x30(%ebx),%eax
81005c32:	83 ec 08             	sub    $0x8,%esp
81005c35:	50                   	push   %eax
81005c36:	ff 75 08             	push   0x8(%ebp)
81005c39:	e8 97 bb ff ff       	call   810017d5 <_free_r>
81005c3e:	83 c4 10             	add    $0x10,%esp
81005c41:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005c48:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c4c:	83 e0 db             	and    $0xffffffdb,%eax
81005c4f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c53:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005c5a:	8b 43 10             	mov    0x10(%ebx),%eax
81005c5d:	89 03                	mov    %eax,(%ebx)
81005c5f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c63:	83 c8 08             	or     $0x8,%eax
81005c66:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c6a:	8b 43 10             	mov    0x10(%ebx),%eax
81005c6d:	85 c0                	test   %eax,%eax
81005c6f:	75 2b                	jne    81005c9c <__swsetup_r+0xf4>
81005c71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c75:	98                   	cwtl   
81005c76:	25 00 02 00 00       	and    $0x200,%eax
81005c7b:	85 c0                	test   %eax,%eax
81005c7d:	74 0e                	je     81005c8d <__swsetup_r+0xe5>
81005c7f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c83:	98                   	cwtl   
81005c84:	25 80 00 00 00       	and    $0x80,%eax
81005c89:	85 c0                	test   %eax,%eax
81005c8b:	74 0f                	je     81005c9c <__swsetup_r+0xf4>
81005c8d:	83 ec 08             	sub    $0x8,%esp
81005c90:	53                   	push   %ebx
81005c91:	ff 75 08             	push   0x8(%ebp)
81005c94:	e8 b3 d5 ff ff       	call   8100324c <__smakebuf_r>
81005c99:	83 c4 10             	add    $0x10,%esp
81005c9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ca0:	98                   	cwtl   
81005ca1:	83 e0 01             	and    $0x1,%eax
81005ca4:	85 c0                	test   %eax,%eax
81005ca6:	74 11                	je     81005cb9 <__swsetup_r+0x111>
81005ca8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005caf:	8b 43 14             	mov    0x14(%ebx),%eax
81005cb2:	f7 d8                	neg    %eax
81005cb4:	89 43 18             	mov    %eax,0x18(%ebx)
81005cb7:	eb 19                	jmp    81005cd2 <__swsetup_r+0x12a>
81005cb9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005cbd:	98                   	cwtl   
81005cbe:	83 e0 02             	and    $0x2,%eax
81005cc1:	85 c0                	test   %eax,%eax
81005cc3:	75 05                	jne    81005cca <__swsetup_r+0x122>
81005cc5:	8b 43 14             	mov    0x14(%ebx),%eax
81005cc8:	eb 05                	jmp    81005ccf <__swsetup_r+0x127>
81005cca:	b8 00 00 00 00       	mov    $0x0,%eax
81005ccf:	89 43 08             	mov    %eax,0x8(%ebx)
81005cd2:	8b 43 10             	mov    0x10(%ebx),%eax
81005cd5:	85 c0                	test   %eax,%eax
81005cd7:	75 20                	jne    81005cf9 <__swsetup_r+0x151>
81005cd9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005cdd:	98                   	cwtl   
81005cde:	25 80 00 00 00       	and    $0x80,%eax
81005ce3:	85 c0                	test   %eax,%eax
81005ce5:	74 12                	je     81005cf9 <__swsetup_r+0x151>
81005ce7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ceb:	83 c8 40             	or     $0x40,%eax
81005cee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005cf2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005cf7:	eb 05                	jmp    81005cfe <__swsetup_r+0x156>
81005cf9:	b8 00 00 00 00       	mov    $0x0,%eax
81005cfe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005d01:	c9                   	leave  
81005d02:	c3                   	ret    

81005d03 <__call_exitprocs>:
81005d03:	55                   	push   %ebp
81005d04:	89 e5                	mov    %esp,%ebp
81005d06:	57                   	push   %edi
81005d07:	56                   	push   %esi
81005d08:	53                   	push   %ebx
81005d09:	83 ec 1c             	sub    $0x1c,%esp
81005d0c:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81005d11:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81005d17:	a1 d8 7b 00 81       	mov    0x81007bd8,%eax
81005d1c:	05 48 01 00 00       	add    $0x148,%eax
81005d21:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005d24:	90                   	nop
81005d25:	85 db                	test   %ebx,%ebx
81005d27:	0f 84 e1 00 00 00    	je     81005e0e <__call_exitprocs+0x10b>
81005d2d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81005d33:	8b 43 04             	mov    0x4(%ebx),%eax
81005d36:	8d 70 ff             	lea    -0x1(%eax),%esi
81005d39:	e9 c6 00 00 00       	jmp    81005e04 <__call_exitprocs+0x101>
81005d3e:	b8 01 00 00 00       	mov    $0x1,%eax
81005d43:	89 f1                	mov    %esi,%ecx
81005d45:	d3 e0                	shl    %cl,%eax
81005d47:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005d4a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005d4e:	74 17                	je     81005d67 <__call_exitprocs+0x64>
81005d50:	85 ff                	test   %edi,%edi
81005d52:	0f 84 a5 00 00 00    	je     81005dfd <__call_exitprocs+0xfa>
81005d58:	8d 46 20             	lea    0x20(%esi),%eax
81005d5b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81005d5e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81005d61:	0f 85 96 00 00 00    	jne    81005dfd <__call_exitprocs+0xfa>
81005d67:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81005d6b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d6e:	8b 43 04             	mov    0x4(%ebx),%eax
81005d71:	83 e8 01             	sub    $0x1,%eax
81005d74:	39 c6                	cmp    %eax,%esi
81005d76:	75 0b                	jne    81005d83 <__call_exitprocs+0x80>
81005d78:	8b 43 04             	mov    0x4(%ebx),%eax
81005d7b:	83 e8 01             	sub    $0x1,%eax
81005d7e:	89 43 04             	mov    %eax,0x4(%ebx)
81005d81:	eb 08                	jmp    81005d8b <__call_exitprocs+0x88>
81005d83:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81005d8a:	00 
81005d8b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005d8f:	74 6f                	je     81005e00 <__call_exitprocs+0xfd>
81005d91:	8b 43 04             	mov    0x4(%ebx),%eax
81005d94:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d97:	85 ff                	test   %edi,%edi
81005d99:	74 0f                	je     81005daa <__call_exitprocs+0xa7>
81005d9b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81005da1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005da4:	21 d0                	and    %edx,%eax
81005da6:	85 c0                	test   %eax,%eax
81005da8:	75 07                	jne    81005db1 <__call_exitprocs+0xae>
81005daa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dad:	ff d0                	call   *%eax
81005daf:	eb 32                	jmp    81005de3 <__call_exitprocs+0xe0>
81005db1:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81005db7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005dba:	21 d0                	and    %edx,%eax
81005dbc:	85 c0                	test   %eax,%eax
81005dbe:	75 14                	jne    81005dd4 <__call_exitprocs+0xd1>
81005dc0:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005dc3:	83 ec 08             	sub    $0x8,%esp
81005dc6:	50                   	push   %eax
81005dc7:	ff 75 08             	push   0x8(%ebp)
81005dca:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dcd:	ff d0                	call   *%eax
81005dcf:	83 c4 10             	add    $0x10,%esp
81005dd2:	eb 0f                	jmp    81005de3 <__call_exitprocs+0xe0>
81005dd4:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005dd7:	83 ec 0c             	sub    $0xc,%esp
81005dda:	50                   	push   %eax
81005ddb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005dde:	ff d0                	call   *%eax
81005de0:	83 c4 10             	add    $0x10,%esp
81005de3:	8b 43 04             	mov    0x4(%ebx),%eax
81005de6:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81005de9:	0f 85 1d ff ff ff    	jne    81005d0c <__call_exitprocs+0x9>
81005def:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005df2:	8b 00                	mov    (%eax),%eax
81005df4:	39 c3                	cmp    %eax,%ebx
81005df6:	74 09                	je     81005e01 <__call_exitprocs+0xfe>
81005df8:	e9 0f ff ff ff       	jmp    81005d0c <__call_exitprocs+0x9>
81005dfd:	90                   	nop
81005dfe:	eb 01                	jmp    81005e01 <__call_exitprocs+0xfe>
81005e00:	90                   	nop
81005e01:	83 ee 01             	sub    $0x1,%esi
81005e04:	85 f6                	test   %esi,%esi
81005e06:	0f 89 32 ff ff ff    	jns    81005d3e <__call_exitprocs+0x3b>
81005e0c:	eb 01                	jmp    81005e0f <__call_exitprocs+0x10c>
81005e0e:	90                   	nop
81005e0f:	90                   	nop
81005e10:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005e13:	5b                   	pop    %ebx
81005e14:	5e                   	pop    %esi
81005e15:	5f                   	pop    %edi
81005e16:	5d                   	pop    %ebp
81005e17:	c3                   	ret    

81005e18 <_close_r>:
81005e18:	55                   	push   %ebp
81005e19:	89 e5                	mov    %esp,%ebp
81005e1b:	83 ec 18             	sub    $0x18,%esp
81005e1e:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
81005e25:	00 00 00 
81005e28:	83 ec 0c             	sub    $0xc,%esp
81005e2b:	ff 75 0c             	push   0xc(%ebp)
81005e2e:	e8 56 ac ff ff       	call   81000a89 <close>
81005e33:	83 c4 10             	add    $0x10,%esp
81005e36:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e39:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005e3d:	75 14                	jne    81005e53 <_close_r+0x3b>
81005e3f:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81005e44:	85 c0                	test   %eax,%eax
81005e46:	74 0b                	je     81005e53 <_close_r+0x3b>
81005e48:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81005e4e:	8b 45 08             	mov    0x8(%ebp),%eax
81005e51:	89 10                	mov    %edx,(%eax)
81005e53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e56:	c9                   	leave  
81005e57:	c3                   	ret    

81005e58 <__errno>:
81005e58:	55                   	push   %ebp
81005e59:	89 e5                	mov    %esp,%ebp
81005e5b:	a1 84 83 00 81       	mov    0x81008384,%eax
81005e60:	5d                   	pop    %ebp
81005e61:	c3                   	ret    

81005e62 <__sflags>:
81005e62:	55                   	push   %ebp
81005e63:	89 e5                	mov    %esp,%ebp
81005e65:	57                   	push   %edi
81005e66:	56                   	push   %esi
81005e67:	53                   	push   %ebx
81005e68:	8b 55 0c             	mov    0xc(%ebp),%edx
81005e6b:	0f b6 02             	movzbl (%edx),%eax
81005e6e:	0f be c0             	movsbl %al,%eax
81005e71:	83 f8 77             	cmp    $0x77,%eax
81005e74:	74 20                	je     81005e96 <__sflags+0x34>
81005e76:	83 f8 77             	cmp    $0x77,%eax
81005e79:	7f 3d                	jg     81005eb8 <__sflags+0x56>
81005e7b:	83 f8 61             	cmp    $0x61,%eax
81005e7e:	74 27                	je     81005ea7 <__sflags+0x45>
81005e80:	83 f8 72             	cmp    $0x72,%eax
81005e83:	75 33                	jne    81005eb8 <__sflags+0x56>
81005e85:	be 04 00 00 00       	mov    $0x4,%esi
81005e8a:	bb 00 00 00 00       	mov    $0x0,%ebx
81005e8f:	bf 00 00 00 00       	mov    $0x0,%edi
81005e94:	eb 32                	jmp    81005ec8 <__sflags+0x66>
81005e96:	be 08 00 00 00       	mov    $0x8,%esi
81005e9b:	bb 01 00 00 00       	mov    $0x1,%ebx
81005ea0:	bf 00 06 00 00       	mov    $0x600,%edi
81005ea5:	eb 21                	jmp    81005ec8 <__sflags+0x66>
81005ea7:	be 08 01 00 00       	mov    $0x108,%esi
81005eac:	bb 01 00 00 00       	mov    $0x1,%ebx
81005eb1:	bf 08 02 00 00       	mov    $0x208,%edi
81005eb6:	eb 10                	jmp    81005ec8 <__sflags+0x66>
81005eb8:	8b 45 08             	mov    0x8(%ebp),%eax
81005ebb:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005ec1:	b8 00 00 00 00       	mov    $0x0,%eax
81005ec6:	eb 4f                	jmp    81005f17 <__sflags+0xb5>
81005ec8:	eb 38                	jmp    81005f02 <__sflags+0xa0>
81005eca:	0f b6 02             	movzbl (%edx),%eax
81005ecd:	0f be c0             	movsbl %al,%eax
81005ed0:	83 f8 78             	cmp    $0x78,%eax
81005ed3:	74 27                	je     81005efc <__sflags+0x9a>
81005ed5:	83 f8 78             	cmp    $0x78,%eax
81005ed8:	7f 27                	jg     81005f01 <__sflags+0x9f>
81005eda:	83 f8 2b             	cmp    $0x2b,%eax
81005edd:	74 07                	je     81005ee6 <__sflags+0x84>
81005edf:	83 f8 62             	cmp    $0x62,%eax
81005ee2:	74 1e                	je     81005f02 <__sflags+0xa0>
81005ee4:	eb 1b                	jmp    81005f01 <__sflags+0x9f>
81005ee6:	89 f0                	mov    %esi,%eax
81005ee8:	83 e0 e3             	and    $0xffffffe3,%eax
81005eeb:	83 c8 10             	or     $0x10,%eax
81005eee:	89 c6                	mov    %eax,%esi
81005ef0:	89 d8                	mov    %ebx,%eax
81005ef2:	83 e0 fc             	and    $0xfffffffc,%eax
81005ef5:	83 c8 02             	or     $0x2,%eax
81005ef8:	89 c3                	mov    %eax,%ebx
81005efa:	eb 06                	jmp    81005f02 <__sflags+0xa0>
81005efc:	80 cf 08             	or     $0x8,%bh
81005eff:	eb 01                	jmp    81005f02 <__sflags+0xa0>
81005f01:	90                   	nop
81005f02:	83 c2 01             	add    $0x1,%edx
81005f05:	0f b6 02             	movzbl (%edx),%eax
81005f08:	84 c0                	test   %al,%al
81005f0a:	75 be                	jne    81005eca <__sflags+0x68>
81005f0c:	89 da                	mov    %ebx,%edx
81005f0e:	09 fa                	or     %edi,%edx
81005f10:	8b 45 10             	mov    0x10(%ebp),%eax
81005f13:	89 10                	mov    %edx,(%eax)
81005f15:	89 f0                	mov    %esi,%eax
81005f17:	5b                   	pop    %ebx
81005f18:	5e                   	pop    %esi
81005f19:	5f                   	pop    %edi
81005f1a:	5d                   	pop    %ebp
81005f1b:	c3                   	ret    

81005f1c <_fputc_r>:
81005f1c:	55                   	push   %ebp
81005f1d:	89 e5                	mov    %esp,%ebp
81005f1f:	83 ec 18             	sub    $0x18,%esp
81005f22:	8b 45 08             	mov    0x8(%ebp),%eax
81005f25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f28:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005f2c:	74 18                	je     81005f46 <_fputc_r+0x2a>
81005f2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f31:	8b 40 38             	mov    0x38(%eax),%eax
81005f34:	85 c0                	test   %eax,%eax
81005f36:	75 0e                	jne    81005f46 <_fputc_r+0x2a>
81005f38:	83 ec 0c             	sub    $0xc,%esp
81005f3b:	ff 75 f4             	push   -0xc(%ebp)
81005f3e:	e8 3c b6 ff ff       	call   8100157f <__sinit>
81005f43:	83 c4 10             	add    $0x10,%esp
81005f46:	83 ec 04             	sub    $0x4,%esp
81005f49:	ff 75 10             	push   0x10(%ebp)
81005f4c:	ff 75 0c             	push   0xc(%ebp)
81005f4f:	ff 75 08             	push   0x8(%ebp)
81005f52:	e8 4c 0c 00 00       	call   81006ba3 <_putc_r>
81005f57:	83 c4 10             	add    $0x10,%esp
81005f5a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005f5d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f60:	c9                   	leave  
81005f61:	c3                   	ret    

81005f62 <fputc>:
81005f62:	55                   	push   %ebp
81005f63:	89 e5                	mov    %esp,%ebp
81005f65:	83 ec 18             	sub    $0x18,%esp
81005f68:	a1 84 83 00 81       	mov    0x81008384,%eax
81005f6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f73:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005f76:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005f7a:	74 18                	je     81005f94 <fputc+0x32>
81005f7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f7f:	8b 40 38             	mov    0x38(%eax),%eax
81005f82:	85 c0                	test   %eax,%eax
81005f84:	75 0e                	jne    81005f94 <fputc+0x32>
81005f86:	83 ec 0c             	sub    $0xc,%esp
81005f89:	ff 75 f0             	push   -0x10(%ebp)
81005f8c:	e8 ee b5 ff ff       	call   8100157f <__sinit>
81005f91:	83 c4 10             	add    $0x10,%esp
81005f94:	83 ec 04             	sub    $0x4,%esp
81005f97:	ff 75 0c             	push   0xc(%ebp)
81005f9a:	ff 75 08             	push   0x8(%ebp)
81005f9d:	ff 75 f4             	push   -0xc(%ebp)
81005fa0:	e8 fe 0b 00 00       	call   81006ba3 <_putc_r>
81005fa5:	83 c4 10             	add    $0x10,%esp
81005fa8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005fab:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fae:	c9                   	leave  
81005faf:	c3                   	ret    

81005fb0 <_fputs_r>:
81005fb0:	55                   	push   %ebp
81005fb1:	89 e5                	mov    %esp,%ebp
81005fb3:	83 ec 28             	sub    $0x28,%esp
81005fb6:	8b 45 0c             	mov    0xc(%ebp),%eax
81005fb9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005fbc:	83 ec 0c             	sub    $0xc,%esp
81005fbf:	ff 75 0c             	push   0xc(%ebp)
81005fc2:	e8 89 f6 ff ff       	call   81005650 <strlen>
81005fc7:	83 c4 10             	add    $0x10,%esp
81005fca:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005fcd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fd0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005fd3:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005fd6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005fd9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81005fe0:	8b 45 08             	mov    0x8(%ebp),%eax
81005fe3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fe6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005fea:	74 18                	je     81006004 <_fputs_r+0x54>
81005fec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fef:	8b 40 38             	mov    0x38(%eax),%eax
81005ff2:	85 c0                	test   %eax,%eax
81005ff4:	75 0e                	jne    81006004 <_fputs_r+0x54>
81005ff6:	83 ec 0c             	sub    $0xc,%esp
81005ff9:	ff 75 f4             	push   -0xc(%ebp)
81005ffc:	e8 7e b5 ff ff       	call   8100157f <__sinit>
81006001:	83 c4 10             	add    $0x10,%esp
81006004:	8b 45 10             	mov    0x10(%ebp),%eax
81006007:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100600b:	98                   	cwtl   
8100600c:	25 00 20 00 00       	and    $0x2000,%eax
81006011:	85 c0                	test   %eax,%eax
81006013:	75 24                	jne    81006039 <_fputs_r+0x89>
81006015:	8b 45 10             	mov    0x10(%ebp),%eax
81006018:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100601c:	80 cc 20             	or     $0x20,%ah
8100601f:	89 c2                	mov    %eax,%edx
81006021:	8b 45 10             	mov    0x10(%ebp),%eax
81006024:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006028:	8b 45 10             	mov    0x10(%ebp),%eax
8100602b:	8b 40 64             	mov    0x64(%eax),%eax
8100602e:	80 e4 df             	and    $0xdf,%ah
81006031:	89 c2                	mov    %eax,%edx
81006033:	8b 45 10             	mov    0x10(%ebp),%eax
81006036:	89 50 64             	mov    %edx,0x64(%eax)
81006039:	83 ec 04             	sub    $0x4,%esp
8100603c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100603f:	50                   	push   %eax
81006040:	ff 75 10             	push   0x10(%ebp)
81006043:	ff 75 08             	push   0x8(%ebp)
81006046:	e8 df 01 00 00       	call   8100622a <__sfvwrite_r>
8100604b:	83 c4 10             	add    $0x10,%esp
8100604e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006051:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006054:	c9                   	leave  
81006055:	c3                   	ret    

81006056 <fputs>:
81006056:	55                   	push   %ebp
81006057:	89 e5                	mov    %esp,%ebp
81006059:	83 ec 08             	sub    $0x8,%esp
8100605c:	a1 84 83 00 81       	mov    0x81008384,%eax
81006061:	83 ec 04             	sub    $0x4,%esp
81006064:	ff 75 0c             	push   0xc(%ebp)
81006067:	ff 75 08             	push   0x8(%ebp)
8100606a:	50                   	push   %eax
8100606b:	e8 40 ff ff ff       	call   81005fb0 <_fputs_r>
81006070:	83 c4 10             	add    $0x10,%esp
81006073:	c9                   	leave  
81006074:	c3                   	ret    

81006075 <__sputc_r>:
81006075:	55                   	push   %ebp
81006076:	89 e5                	mov    %esp,%ebp
81006078:	83 ec 08             	sub    $0x8,%esp
8100607b:	8b 45 10             	mov    0x10(%ebp),%eax
8100607e:	8b 40 08             	mov    0x8(%eax),%eax
81006081:	8d 50 ff             	lea    -0x1(%eax),%edx
81006084:	8b 45 10             	mov    0x10(%ebp),%eax
81006087:	89 50 08             	mov    %edx,0x8(%eax)
8100608a:	8b 45 10             	mov    0x10(%ebp),%eax
8100608d:	8b 40 08             	mov    0x8(%eax),%eax
81006090:	85 c0                	test   %eax,%eax
81006092:	79 17                	jns    810060ab <__sputc_r+0x36>
81006094:	8b 45 10             	mov    0x10(%ebp),%eax
81006097:	8b 50 08             	mov    0x8(%eax),%edx
8100609a:	8b 45 10             	mov    0x10(%ebp),%eax
8100609d:	8b 40 18             	mov    0x18(%eax),%eax
810060a0:	39 c2                	cmp    %eax,%edx
810060a2:	7c 21                	jl     810060c5 <__sputc_r+0x50>
810060a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810060a7:	3c 0a                	cmp    $0xa,%al
810060a9:	74 1a                	je     810060c5 <__sputc_r+0x50>
810060ab:	8b 45 10             	mov    0x10(%ebp),%eax
810060ae:	8b 00                	mov    (%eax),%eax
810060b0:	8d 48 01             	lea    0x1(%eax),%ecx
810060b3:	8b 55 10             	mov    0x10(%ebp),%edx
810060b6:	89 0a                	mov    %ecx,(%edx)
810060b8:	8b 55 0c             	mov    0xc(%ebp),%edx
810060bb:	88 10                	mov    %dl,(%eax)
810060bd:	0f b6 00             	movzbl (%eax),%eax
810060c0:	0f b6 c0             	movzbl %al,%eax
810060c3:	eb 14                	jmp    810060d9 <__sputc_r+0x64>
810060c5:	83 ec 04             	sub    $0x4,%esp
810060c8:	ff 75 10             	push   0x10(%ebp)
810060cb:	ff 75 0c             	push   0xc(%ebp)
810060ce:	ff 75 08             	push   0x8(%ebp)
810060d1:	e8 59 f9 ff ff       	call   81005a2f <__swbuf_r>
810060d6:	83 c4 10             	add    $0x10,%esp
810060d9:	c9                   	leave  
810060da:	c3                   	ret    

810060db <__fputwc>:
810060db:	55                   	push   %ebp
810060dc:	89 e5                	mov    %esp,%ebp
810060de:	83 ec 18             	sub    $0x18,%esp
810060e1:	e8 b5 08 00 00       	call   8100699b <__locale_mb_cur_max>
810060e6:	83 f8 01             	cmp    $0x1,%eax
810060e9:	75 1e                	jne    81006109 <__fputwc+0x2e>
810060eb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810060ef:	7e 18                	jle    81006109 <__fputwc+0x2e>
810060f1:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810060f8:	7f 0f                	jg     81006109 <__fputwc+0x2e>
810060fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810060fd:	88 45 ef             	mov    %al,-0x11(%ebp)
81006100:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006107:	eb 3c                	jmp    81006145 <__fputwc+0x6a>
81006109:	8b 45 10             	mov    0x10(%ebp),%eax
8100610c:	83 c0 5c             	add    $0x5c,%eax
8100610f:	50                   	push   %eax
81006110:	ff 75 0c             	push   0xc(%ebp)
81006113:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006116:	50                   	push   %eax
81006117:	ff 75 08             	push   0x8(%ebp)
8100611a:	e8 b9 15 00 00       	call   810076d8 <_wcrtomb_r>
8100611f:	83 c4 10             	add    $0x10,%esp
81006122:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006125:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006129:	75 1a                	jne    81006145 <__fputwc+0x6a>
8100612b:	8b 45 10             	mov    0x10(%ebp),%eax
8100612e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006132:	83 c8 40             	or     $0x40,%eax
81006135:	89 c2                	mov    %eax,%edx
81006137:	8b 45 10             	mov    0x10(%ebp),%eax
8100613a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100613e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006143:	eb 44                	jmp    81006189 <__fputwc+0xae>
81006145:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100614c:	eb 30                	jmp    8100617e <__fputwc+0xa3>
8100614e:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006151:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006154:	01 d0                	add    %edx,%eax
81006156:	0f b6 00             	movzbl (%eax),%eax
81006159:	0f b6 c0             	movzbl %al,%eax
8100615c:	83 ec 04             	sub    $0x4,%esp
8100615f:	ff 75 10             	push   0x10(%ebp)
81006162:	50                   	push   %eax
81006163:	ff 75 08             	push   0x8(%ebp)
81006166:	e8 0a ff ff ff       	call   81006075 <__sputc_r>
8100616b:	83 c4 10             	add    $0x10,%esp
8100616e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006171:	75 07                	jne    8100617a <__fputwc+0x9f>
81006173:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006178:	eb 0f                	jmp    81006189 <__fputwc+0xae>
8100617a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100617e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006181:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006184:	72 c8                	jb     8100614e <__fputwc+0x73>
81006186:	8b 45 0c             	mov    0xc(%ebp),%eax
81006189:	c9                   	leave  
8100618a:	c3                   	ret    

8100618b <_fputwc_r>:
8100618b:	55                   	push   %ebp
8100618c:	89 e5                	mov    %esp,%ebp
8100618e:	83 ec 18             	sub    $0x18,%esp
81006191:	8b 45 10             	mov    0x10(%ebp),%eax
81006194:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006198:	98                   	cwtl   
81006199:	25 00 20 00 00       	and    $0x2000,%eax
8100619e:	85 c0                	test   %eax,%eax
810061a0:	75 24                	jne    810061c6 <_fputwc_r+0x3b>
810061a2:	8b 45 10             	mov    0x10(%ebp),%eax
810061a5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810061a9:	80 cc 20             	or     $0x20,%ah
810061ac:	89 c2                	mov    %eax,%edx
810061ae:	8b 45 10             	mov    0x10(%ebp),%eax
810061b1:	66 89 50 0c          	mov    %dx,0xc(%eax)
810061b5:	8b 45 10             	mov    0x10(%ebp),%eax
810061b8:	8b 40 64             	mov    0x64(%eax),%eax
810061bb:	80 cc 20             	or     $0x20,%ah
810061be:	89 c2                	mov    %eax,%edx
810061c0:	8b 45 10             	mov    0x10(%ebp),%eax
810061c3:	89 50 64             	mov    %edx,0x64(%eax)
810061c6:	83 ec 04             	sub    $0x4,%esp
810061c9:	ff 75 10             	push   0x10(%ebp)
810061cc:	ff 75 0c             	push   0xc(%ebp)
810061cf:	ff 75 08             	push   0x8(%ebp)
810061d2:	e8 04 ff ff ff       	call   810060db <__fputwc>
810061d7:	83 c4 10             	add    $0x10,%esp
810061da:	89 45 f4             	mov    %eax,-0xc(%ebp)
810061dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061e0:	c9                   	leave  
810061e1:	c3                   	ret    

810061e2 <fputwc>:
810061e2:	55                   	push   %ebp
810061e3:	89 e5                	mov    %esp,%ebp
810061e5:	83 ec 18             	sub    $0x18,%esp
810061e8:	a1 84 83 00 81       	mov    0x81008384,%eax
810061ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810061f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810061f6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810061fa:	74 18                	je     81006214 <fputwc+0x32>
810061fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061ff:	8b 40 38             	mov    0x38(%eax),%eax
81006202:	85 c0                	test   %eax,%eax
81006204:	75 0e                	jne    81006214 <fputwc+0x32>
81006206:	83 ec 0c             	sub    $0xc,%esp
81006209:	ff 75 f0             	push   -0x10(%ebp)
8100620c:	e8 6e b3 ff ff       	call   8100157f <__sinit>
81006211:	83 c4 10             	add    $0x10,%esp
81006214:	83 ec 04             	sub    $0x4,%esp
81006217:	ff 75 0c             	push   0xc(%ebp)
8100621a:	ff 75 08             	push   0x8(%ebp)
8100621d:	ff 75 f4             	push   -0xc(%ebp)
81006220:	e8 66 ff ff ff       	call   8100618b <_fputwc_r>
81006225:	83 c4 10             	add    $0x10,%esp
81006228:	c9                   	leave  
81006229:	c3                   	ret    

8100622a <__sfvwrite_r>:
8100622a:	55                   	push   %ebp
8100622b:	89 e5                	mov    %esp,%ebp
8100622d:	57                   	push   %edi
8100622e:	56                   	push   %esi
8100622f:	53                   	push   %ebx
81006230:	83 ec 3c             	sub    $0x3c,%esp
81006233:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006236:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100623d:	8b 45 10             	mov    0x10(%ebp),%eax
81006240:	8b 78 08             	mov    0x8(%eax),%edi
81006243:	85 ff                	test   %edi,%edi
81006245:	75 0a                	jne    81006251 <__sfvwrite_r+0x27>
81006247:	b8 00 00 00 00       	mov    $0x0,%eax
8100624c:	e9 6f 04 00 00       	jmp    810066c0 <__sfvwrite_r+0x496>
81006251:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006255:	98                   	cwtl   
81006256:	83 e0 08             	and    $0x8,%eax
81006259:	85 c0                	test   %eax,%eax
8100625b:	74 07                	je     81006264 <__sfvwrite_r+0x3a>
8100625d:	8b 43 10             	mov    0x10(%ebx),%eax
81006260:	85 c0                	test   %eax,%eax
81006262:	75 1d                	jne    81006281 <__sfvwrite_r+0x57>
81006264:	83 ec 08             	sub    $0x8,%esp
81006267:	53                   	push   %ebx
81006268:	ff 75 08             	push   0x8(%ebp)
8100626b:	e8 38 f9 ff ff       	call   81005ba8 <__swsetup_r>
81006270:	83 c4 10             	add    $0x10,%esp
81006273:	85 c0                	test   %eax,%eax
81006275:	74 0a                	je     81006281 <__sfvwrite_r+0x57>
81006277:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100627c:	e9 3f 04 00 00       	jmp    810066c0 <__sfvwrite_r+0x496>
81006281:	8b 45 10             	mov    0x10(%ebp),%eax
81006284:	8b 00                	mov    (%eax),%eax
81006286:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006289:	bf 00 00 00 00       	mov    $0x0,%edi
8100628e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006292:	98                   	cwtl   
81006293:	83 e0 02             	and    $0x2,%eax
81006296:	85 c0                	test   %eax,%eax
81006298:	74 68                	je     81006302 <__sfvwrite_r+0xd8>
8100629a:	eb 11                	jmp    810062ad <__sfvwrite_r+0x83>
8100629c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100629f:	8b 08                	mov    (%eax),%ecx
810062a1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810062a4:	8b 78 04             	mov    0x4(%eax),%edi
810062a7:	83 c0 08             	add    $0x8,%eax
810062aa:	89 45 c0             	mov    %eax,-0x40(%ebp)
810062ad:	85 ff                	test   %edi,%edi
810062af:	74 eb                	je     8100629c <__sfvwrite_r+0x72>
810062b1:	8b 4b 24             	mov    0x24(%ebx),%ecx
810062b4:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810062b9:	39 c7                	cmp    %eax,%edi
810062bb:	0f 46 c7             	cmovbe %edi,%eax
810062be:	89 c2                	mov    %eax,%edx
810062c0:	8b 43 1c             	mov    0x1c(%ebx),%eax
810062c3:	52                   	push   %edx
810062c4:	ff 75 c4             	push   -0x3c(%ebp)
810062c7:	50                   	push   %eax
810062c8:	ff 75 08             	push   0x8(%ebp)
810062cb:	ff d1                	call   *%ecx
810062cd:	83 c4 10             	add    $0x10,%esp
810062d0:	89 c6                	mov    %eax,%esi
810062d2:	85 f6                	test   %esi,%esi
810062d4:	0f 8e cf 03 00 00    	jle    810066a9 <__sfvwrite_r+0x47f>
810062da:	89 f0                	mov    %esi,%eax
810062dc:	01 45 c4             	add    %eax,-0x3c(%ebp)
810062df:	89 f0                	mov    %esi,%eax
810062e1:	29 c7                	sub    %eax,%edi
810062e3:	8b 45 10             	mov    0x10(%ebp),%eax
810062e6:	8b 40 08             	mov    0x8(%eax),%eax
810062e9:	89 f2                	mov    %esi,%edx
810062eb:	29 d0                	sub    %edx,%eax
810062ed:	8b 4d 10             	mov    0x10(%ebp),%ecx
810062f0:	89 41 08             	mov    %eax,0x8(%ecx)
810062f3:	8b 45 10             	mov    0x10(%ebp),%eax
810062f6:	8b 40 08             	mov    0x8(%eax),%eax
810062f9:	85 c0                	test   %eax,%eax
810062fb:	75 b0                	jne    810062ad <__sfvwrite_r+0x83>
810062fd:	e9 a0 03 00 00       	jmp    810066a2 <__sfvwrite_r+0x478>
81006302:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006306:	98                   	cwtl   
81006307:	83 e0 01             	and    $0x1,%eax
8100630a:	85 c0                	test   %eax,%eax
8100630c:	0f 85 44 02 00 00    	jne    81006556 <__sfvwrite_r+0x32c>
81006312:	eb 11                	jmp    81006325 <__sfvwrite_r+0xfb>
81006314:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006317:	8b 08                	mov    (%eax),%ecx
81006319:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100631c:	8b 78 04             	mov    0x4(%eax),%edi
8100631f:	83 c0 08             	add    $0x8,%eax
81006322:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006325:	85 ff                	test   %edi,%edi
81006327:	74 eb                	je     81006314 <__sfvwrite_r+0xea>
81006329:	8b 73 08             	mov    0x8(%ebx),%esi
8100632c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006330:	98                   	cwtl   
81006331:	25 00 02 00 00       	and    $0x200,%eax
81006336:	85 c0                	test   %eax,%eax
81006338:	0f 84 4f 01 00 00    	je     8100648d <__sfvwrite_r+0x263>
8100633e:	89 f0                	mov    %esi,%eax
81006340:	39 c7                	cmp    %eax,%edi
81006342:	0f 82 12 01 00 00    	jb     8100645a <__sfvwrite_r+0x230>
81006348:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100634c:	98                   	cwtl   
8100634d:	25 80 04 00 00       	and    $0x480,%eax
81006352:	85 c0                	test   %eax,%eax
81006354:	0f 84 00 01 00 00    	je     8100645a <__sfvwrite_r+0x230>
8100635a:	8b 03                	mov    (%ebx),%eax
8100635c:	8b 53 10             	mov    0x10(%ebx),%edx
8100635f:	29 d0                	sub    %edx,%eax
81006361:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006364:	8b 53 14             	mov    0x14(%ebx),%edx
81006367:	89 d0                	mov    %edx,%eax
81006369:	01 c0                	add    %eax,%eax
8100636b:	01 d0                	add    %edx,%eax
8100636d:	89 c2                	mov    %eax,%edx
8100636f:	c1 ea 1f             	shr    $0x1f,%edx
81006372:	01 d0                	add    %edx,%eax
81006374:	d1 f8                	sar    %eax
81006376:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006379:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100637c:	01 f8                	add    %edi,%eax
8100637e:	8d 50 01             	lea    0x1(%eax),%edx
81006381:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006384:	39 c2                	cmp    %eax,%edx
81006386:	76 0b                	jbe    81006393 <__sfvwrite_r+0x169>
81006388:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100638b:	01 f8                	add    %edi,%eax
8100638d:	83 c0 01             	add    $0x1,%eax
81006390:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006393:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006397:	98                   	cwtl   
81006398:	25 00 04 00 00       	and    $0x400,%eax
8100639d:	85 c0                	test   %eax,%eax
8100639f:	74 4f                	je     810063f0 <__sfvwrite_r+0x1c6>
810063a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810063a4:	83 ec 08             	sub    $0x8,%esp
810063a7:	50                   	push   %eax
810063a8:	ff 75 08             	push   0x8(%ebp)
810063ab:	e8 e8 d2 ff ff       	call   81003698 <_malloc_r>
810063b0:	83 c4 10             	add    $0x10,%esp
810063b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810063b6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810063ba:	75 0e                	jne    810063ca <__sfvwrite_r+0x1a0>
810063bc:	8b 45 08             	mov    0x8(%ebp),%eax
810063bf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810063c5:	e9 e6 02 00 00       	jmp    810066b0 <__sfvwrite_r+0x486>
810063ca:	8b 55 d0             	mov    -0x30(%ebp),%edx
810063cd:	8b 43 10             	mov    0x10(%ebx),%eax
810063d0:	83 ec 04             	sub    $0x4,%esp
810063d3:	52                   	push   %edx
810063d4:	50                   	push   %eax
810063d5:	ff 75 dc             	push   -0x24(%ebp)
810063d8:	e8 cb db ff ff       	call   81003fa8 <memcpy>
810063dd:	83 c4 10             	add    $0x10,%esp
810063e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063e4:	66 25 7f fb          	and    $0xfb7f,%ax
810063e8:	0c 80                	or     $0x80,%al
810063ea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063ee:	eb 49                	jmp    81006439 <__sfvwrite_r+0x20f>
810063f0:	8b 55 d8             	mov    -0x28(%ebp),%edx
810063f3:	8b 43 10             	mov    0x10(%ebx),%eax
810063f6:	83 ec 04             	sub    $0x4,%esp
810063f9:	52                   	push   %edx
810063fa:	50                   	push   %eax
810063fb:	ff 75 08             	push   0x8(%ebp)
810063fe:	e8 84 08 00 00       	call   81006c87 <_realloc_r>
81006403:	83 c4 10             	add    $0x10,%esp
81006406:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006409:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100640d:	75 2a                	jne    81006439 <__sfvwrite_r+0x20f>
8100640f:	8b 43 10             	mov    0x10(%ebx),%eax
81006412:	83 ec 08             	sub    $0x8,%esp
81006415:	50                   	push   %eax
81006416:	ff 75 08             	push   0x8(%ebp)
81006419:	e8 b7 b3 ff ff       	call   810017d5 <_free_r>
8100641e:	83 c4 10             	add    $0x10,%esp
81006421:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006425:	24 7f                	and    $0x7f,%al
81006427:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100642b:	8b 45 08             	mov    0x8(%ebp),%eax
8100642e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006434:	e9 77 02 00 00       	jmp    810066b0 <__sfvwrite_r+0x486>
81006439:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100643c:	89 43 10             	mov    %eax,0x10(%ebx)
8100643f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81006442:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006445:	01 d0                	add    %edx,%eax
81006447:	89 03                	mov    %eax,(%ebx)
81006449:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100644c:	89 43 14             	mov    %eax,0x14(%ebx)
8100644f:	89 fe                	mov    %edi,%esi
81006451:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006454:	2b 45 d0             	sub    -0x30(%ebp),%eax
81006457:	89 43 08             	mov    %eax,0x8(%ebx)
8100645a:	89 f0                	mov    %esi,%eax
8100645c:	39 c7                	cmp    %eax,%edi
8100645e:	73 02                	jae    81006462 <__sfvwrite_r+0x238>
81006460:	89 fe                	mov    %edi,%esi
81006462:	89 f2                	mov    %esi,%edx
81006464:	8b 03                	mov    (%ebx),%eax
81006466:	83 ec 04             	sub    $0x4,%esp
81006469:	52                   	push   %edx
8100646a:	ff 75 c4             	push   -0x3c(%ebp)
8100646d:	50                   	push   %eax
8100646e:	e8 3d 06 00 00       	call   81006ab0 <memmove>
81006473:	83 c4 10             	add    $0x10,%esp
81006476:	8b 43 08             	mov    0x8(%ebx),%eax
81006479:	29 f0                	sub    %esi,%eax
8100647b:	89 43 08             	mov    %eax,0x8(%ebx)
8100647e:	8b 03                	mov    (%ebx),%eax
81006480:	89 f2                	mov    %esi,%edx
81006482:	01 d0                	add    %edx,%eax
81006484:	89 03                	mov    %eax,(%ebx)
81006486:	89 fe                	mov    %edi,%esi
81006488:	e9 9d 00 00 00       	jmp    8100652a <__sfvwrite_r+0x300>
8100648d:	8b 13                	mov    (%ebx),%edx
8100648f:	8b 43 10             	mov    0x10(%ebx),%eax
81006492:	39 c2                	cmp    %eax,%edx
81006494:	77 07                	ja     8100649d <__sfvwrite_r+0x273>
81006496:	8b 43 14             	mov    0x14(%ebx),%eax
81006499:	39 c7                	cmp    %eax,%edi
8100649b:	73 4c                	jae    810064e9 <__sfvwrite_r+0x2bf>
8100649d:	89 f0                	mov    %esi,%eax
8100649f:	39 c7                	cmp    %eax,%edi
810064a1:	0f 46 c7             	cmovbe %edi,%eax
810064a4:	89 c6                	mov    %eax,%esi
810064a6:	89 f2                	mov    %esi,%edx
810064a8:	8b 03                	mov    (%ebx),%eax
810064aa:	83 ec 04             	sub    $0x4,%esp
810064ad:	52                   	push   %edx
810064ae:	ff 75 c4             	push   -0x3c(%ebp)
810064b1:	50                   	push   %eax
810064b2:	e8 f9 05 00 00       	call   81006ab0 <memmove>
810064b7:	83 c4 10             	add    $0x10,%esp
810064ba:	8b 43 08             	mov    0x8(%ebx),%eax
810064bd:	29 f0                	sub    %esi,%eax
810064bf:	89 43 08             	mov    %eax,0x8(%ebx)
810064c2:	8b 03                	mov    (%ebx),%eax
810064c4:	89 f2                	mov    %esi,%edx
810064c6:	01 d0                	add    %edx,%eax
810064c8:	89 03                	mov    %eax,(%ebx)
810064ca:	8b 43 08             	mov    0x8(%ebx),%eax
810064cd:	85 c0                	test   %eax,%eax
810064cf:	75 58                	jne    81006529 <__sfvwrite_r+0x2ff>
810064d1:	83 ec 08             	sub    $0x8,%esp
810064d4:	53                   	push   %ebx
810064d5:	ff 75 08             	push   0x8(%ebp)
810064d8:	e8 9f ab ff ff       	call   8100107c <_fflush_r>
810064dd:	83 c4 10             	add    $0x10,%esp
810064e0:	85 c0                	test   %eax,%eax
810064e2:	74 45                	je     81006529 <__sfvwrite_r+0x2ff>
810064e4:	e9 c7 01 00 00       	jmp    810066b0 <__sfvwrite_r+0x486>
810064e9:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
810064ef:	77 04                	ja     810064f5 <__sfvwrite_r+0x2cb>
810064f1:	89 f8                	mov    %edi,%eax
810064f3:	eb 05                	jmp    810064fa <__sfvwrite_r+0x2d0>
810064f5:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810064fa:	8b 4b 14             	mov    0x14(%ebx),%ecx
810064fd:	99                   	cltd   
810064fe:	f7 f9                	idiv   %ecx
81006500:	89 c2                	mov    %eax,%edx
81006502:	8b 43 14             	mov    0x14(%ebx),%eax
81006505:	89 d6                	mov    %edx,%esi
81006507:	0f af f0             	imul   %eax,%esi
8100650a:	8b 53 24             	mov    0x24(%ebx),%edx
8100650d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006510:	56                   	push   %esi
81006511:	ff 75 c4             	push   -0x3c(%ebp)
81006514:	50                   	push   %eax
81006515:	ff 75 08             	push   0x8(%ebp)
81006518:	ff d2                	call   *%edx
8100651a:	83 c4 10             	add    $0x10,%esp
8100651d:	89 c6                	mov    %eax,%esi
8100651f:	85 f6                	test   %esi,%esi
81006521:	0f 8e 85 01 00 00    	jle    810066ac <__sfvwrite_r+0x482>
81006527:	eb 01                	jmp    8100652a <__sfvwrite_r+0x300>
81006529:	90                   	nop
8100652a:	89 f0                	mov    %esi,%eax
8100652c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100652f:	89 f0                	mov    %esi,%eax
81006531:	29 c7                	sub    %eax,%edi
81006533:	8b 45 10             	mov    0x10(%ebp),%eax
81006536:	8b 40 08             	mov    0x8(%eax),%eax
81006539:	89 f2                	mov    %esi,%edx
8100653b:	29 d0                	sub    %edx,%eax
8100653d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006540:	89 41 08             	mov    %eax,0x8(%ecx)
81006543:	8b 45 10             	mov    0x10(%ebp),%eax
81006546:	8b 40 08             	mov    0x8(%eax),%eax
81006549:	85 c0                	test   %eax,%eax
8100654b:	0f 85 d4 fd ff ff    	jne    81006325 <__sfvwrite_r+0xfb>
81006551:	e9 4c 01 00 00       	jmp    810066a2 <__sfvwrite_r+0x478>
81006556:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100655d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006564:	eb 18                	jmp    8100657e <__sfvwrite_r+0x354>
81006566:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100656d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006570:	8b 08                	mov    (%eax),%ecx
81006572:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006575:	8b 78 04             	mov    0x4(%eax),%edi
81006578:	83 c0 08             	add    $0x8,%eax
8100657b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100657e:	85 ff                	test   %edi,%edi
81006580:	74 e4                	je     81006566 <__sfvwrite_r+0x33c>
81006582:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006586:	75 32                	jne    810065ba <__sfvwrite_r+0x390>
81006588:	83 ec 04             	sub    $0x4,%esp
8100658b:	57                   	push   %edi
8100658c:	6a 0a                	push   $0xa
8100658e:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006591:	56                   	push   %esi
81006592:	e8 29 d9 ff ff       	call   81003ec0 <memchr>
81006597:	83 c4 10             	add    $0x10,%esp
8100659a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100659d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810065a1:	74 0a                	je     810065ad <__sfvwrite_r+0x383>
810065a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810065a6:	83 c0 01             	add    $0x1,%eax
810065a9:	29 f0                	sub    %esi,%eax
810065ab:	eb 03                	jmp    810065b0 <__sfvwrite_r+0x386>
810065ad:	8d 47 01             	lea    0x1(%edi),%eax
810065b0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810065b3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810065ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
810065bd:	39 c7                	cmp    %eax,%edi
810065bf:	0f 46 c7             	cmovbe %edi,%eax
810065c2:	89 c1                	mov    %eax,%ecx
810065c4:	8b 53 08             	mov    0x8(%ebx),%edx
810065c7:	8b 43 14             	mov    0x14(%ebx),%eax
810065ca:	8d 34 02             	lea    (%edx,%eax,1),%esi
810065cd:	8b 13                	mov    (%ebx),%edx
810065cf:	8b 43 10             	mov    0x10(%ebx),%eax
810065d2:	39 c2                	cmp    %eax,%edx
810065d4:	76 38                	jbe    8100660e <__sfvwrite_r+0x3e4>
810065d6:	39 f1                	cmp    %esi,%ecx
810065d8:	7e 34                	jle    8100660e <__sfvwrite_r+0x3e4>
810065da:	89 f2                	mov    %esi,%edx
810065dc:	8b 03                	mov    (%ebx),%eax
810065de:	83 ec 04             	sub    $0x4,%esp
810065e1:	52                   	push   %edx
810065e2:	ff 75 c4             	push   -0x3c(%ebp)
810065e5:	50                   	push   %eax
810065e6:	e8 c5 04 00 00       	call   81006ab0 <memmove>
810065eb:	83 c4 10             	add    $0x10,%esp
810065ee:	8b 03                	mov    (%ebx),%eax
810065f0:	89 f2                	mov    %esi,%edx
810065f2:	01 d0                	add    %edx,%eax
810065f4:	89 03                	mov    %eax,(%ebx)
810065f6:	83 ec 08             	sub    $0x8,%esp
810065f9:	53                   	push   %ebx
810065fa:	ff 75 08             	push   0x8(%ebp)
810065fd:	e8 7a aa ff ff       	call   8100107c <_fflush_r>
81006602:	83 c4 10             	add    $0x10,%esp
81006605:	85 c0                	test   %eax,%eax
81006607:	74 4f                	je     81006658 <__sfvwrite_r+0x42e>
81006609:	e9 a2 00 00 00       	jmp    810066b0 <__sfvwrite_r+0x486>
8100660e:	8b 73 14             	mov    0x14(%ebx),%esi
81006611:	89 c8                	mov    %ecx,%eax
81006613:	39 c6                	cmp    %eax,%esi
81006615:	7f 1b                	jg     81006632 <__sfvwrite_r+0x408>
81006617:	8b 53 24             	mov    0x24(%ebx),%edx
8100661a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100661d:	56                   	push   %esi
8100661e:	ff 75 c4             	push   -0x3c(%ebp)
81006621:	50                   	push   %eax
81006622:	ff 75 08             	push   0x8(%ebp)
81006625:	ff d2                	call   *%edx
81006627:	83 c4 10             	add    $0x10,%esp
8100662a:	89 c6                	mov    %eax,%esi
8100662c:	85 f6                	test   %esi,%esi
8100662e:	7f 28                	jg     81006658 <__sfvwrite_r+0x42e>
81006630:	eb 7e                	jmp    810066b0 <__sfvwrite_r+0x486>
81006632:	89 ce                	mov    %ecx,%esi
81006634:	89 f2                	mov    %esi,%edx
81006636:	8b 03                	mov    (%ebx),%eax
81006638:	83 ec 04             	sub    $0x4,%esp
8100663b:	52                   	push   %edx
8100663c:	ff 75 c4             	push   -0x3c(%ebp)
8100663f:	50                   	push   %eax
81006640:	e8 6b 04 00 00       	call   81006ab0 <memmove>
81006645:	83 c4 10             	add    $0x10,%esp
81006648:	8b 43 08             	mov    0x8(%ebx),%eax
8100664b:	29 f0                	sub    %esi,%eax
8100664d:	89 43 08             	mov    %eax,0x8(%ebx)
81006650:	8b 03                	mov    (%ebx),%eax
81006652:	89 f2                	mov    %esi,%edx
81006654:	01 d0                	add    %edx,%eax
81006656:	89 03                	mov    %eax,(%ebx)
81006658:	29 75 e0             	sub    %esi,-0x20(%ebp)
8100665b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100665f:	75 1a                	jne    8100667b <__sfvwrite_r+0x451>
81006661:	83 ec 08             	sub    $0x8,%esp
81006664:	53                   	push   %ebx
81006665:	ff 75 08             	push   0x8(%ebp)
81006668:	e8 0f aa ff ff       	call   8100107c <_fflush_r>
8100666d:	83 c4 10             	add    $0x10,%esp
81006670:	85 c0                	test   %eax,%eax
81006672:	75 3b                	jne    810066af <__sfvwrite_r+0x485>
81006674:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100667b:	89 f0                	mov    %esi,%eax
8100667d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006680:	89 f0                	mov    %esi,%eax
81006682:	29 c7                	sub    %eax,%edi
81006684:	8b 45 10             	mov    0x10(%ebp),%eax
81006687:	8b 40 08             	mov    0x8(%eax),%eax
8100668a:	89 f2                	mov    %esi,%edx
8100668c:	29 d0                	sub    %edx,%eax
8100668e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006691:	89 41 08             	mov    %eax,0x8(%ecx)
81006694:	8b 45 10             	mov    0x10(%ebp),%eax
81006697:	8b 40 08             	mov    0x8(%eax),%eax
8100669a:	85 c0                	test   %eax,%eax
8100669c:	0f 85 dc fe ff ff    	jne    8100657e <__sfvwrite_r+0x354>
810066a2:	b8 00 00 00 00       	mov    $0x0,%eax
810066a7:	eb 17                	jmp    810066c0 <__sfvwrite_r+0x496>
810066a9:	90                   	nop
810066aa:	eb 04                	jmp    810066b0 <__sfvwrite_r+0x486>
810066ac:	90                   	nop
810066ad:	eb 01                	jmp    810066b0 <__sfvwrite_r+0x486>
810066af:	90                   	nop
810066b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066b4:	83 c8 40             	or     $0x40,%eax
810066b7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810066bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066c0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810066c3:	5b                   	pop    %ebx
810066c4:	5e                   	pop    %esi
810066c5:	5f                   	pop    %edi
810066c6:	5d                   	pop    %ebp
810066c7:	c3                   	ret    

810066c8 <_getc_r>:
810066c8:	55                   	push   %ebp
810066c9:	89 e5                	mov    %esp,%ebp
810066cb:	53                   	push   %ebx
810066cc:	83 ec 14             	sub    $0x14,%esp
810066cf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810066d2:	8b 45 08             	mov    0x8(%ebp),%eax
810066d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066d8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810066dc:	74 18                	je     810066f6 <_getc_r+0x2e>
810066de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066e1:	8b 40 38             	mov    0x38(%eax),%eax
810066e4:	85 c0                	test   %eax,%eax
810066e6:	75 0e                	jne    810066f6 <_getc_r+0x2e>
810066e8:	83 ec 0c             	sub    $0xc,%esp
810066eb:	ff 75 f4             	push   -0xc(%ebp)
810066ee:	e8 8c ae ff ff       	call   8100157f <__sinit>
810066f3:	83 c4 10             	add    $0x10,%esp
810066f6:	8b 43 04             	mov    0x4(%ebx),%eax
810066f9:	83 e8 01             	sub    $0x1,%eax
810066fc:	89 43 04             	mov    %eax,0x4(%ebx)
810066ff:	8b 43 04             	mov    0x4(%ebx),%eax
81006702:	85 c0                	test   %eax,%eax
81006704:	79 11                	jns    81006717 <_getc_r+0x4f>
81006706:	83 ec 08             	sub    $0x8,%esp
81006709:	53                   	push   %ebx
8100670a:	ff 75 08             	push   0x8(%ebp)
8100670d:	e8 4f 0e 00 00       	call   81007561 <__srget_r>
81006712:	83 c4 10             	add    $0x10,%esp
81006715:	eb 0d                	jmp    81006724 <_getc_r+0x5c>
81006717:	8b 03                	mov    (%ebx),%eax
81006719:	8d 50 01             	lea    0x1(%eax),%edx
8100671c:	89 13                	mov    %edx,(%ebx)
8100671e:	0f b6 00             	movzbl (%eax),%eax
81006721:	0f b6 c0             	movzbl %al,%eax
81006724:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006727:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100672a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100672d:	c9                   	leave  
8100672e:	c3                   	ret    

8100672f <getc>:
8100672f:	55                   	push   %ebp
81006730:	89 e5                	mov    %esp,%ebp
81006732:	53                   	push   %ebx
81006733:	83 ec 14             	sub    $0x14,%esp
81006736:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006739:	a1 84 83 00 81       	mov    0x81008384,%eax
8100673e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006741:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006744:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006747:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100674b:	74 18                	je     81006765 <getc+0x36>
8100674d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006750:	8b 40 38             	mov    0x38(%eax),%eax
81006753:	85 c0                	test   %eax,%eax
81006755:	75 0e                	jne    81006765 <getc+0x36>
81006757:	83 ec 0c             	sub    $0xc,%esp
8100675a:	ff 75 f0             	push   -0x10(%ebp)
8100675d:	e8 1d ae ff ff       	call   8100157f <__sinit>
81006762:	83 c4 10             	add    $0x10,%esp
81006765:	8b 43 04             	mov    0x4(%ebx),%eax
81006768:	83 e8 01             	sub    $0x1,%eax
8100676b:	89 43 04             	mov    %eax,0x4(%ebx)
8100676e:	8b 43 04             	mov    0x4(%ebx),%eax
81006771:	85 c0                	test   %eax,%eax
81006773:	79 11                	jns    81006786 <getc+0x57>
81006775:	83 ec 08             	sub    $0x8,%esp
81006778:	53                   	push   %ebx
81006779:	ff 75 f4             	push   -0xc(%ebp)
8100677c:	e8 e0 0d 00 00       	call   81007561 <__srget_r>
81006781:	83 c4 10             	add    $0x10,%esp
81006784:	eb 0d                	jmp    81006793 <getc+0x64>
81006786:	8b 03                	mov    (%ebx),%eax
81006788:	8d 50 01             	lea    0x1(%eax),%edx
8100678b:	89 13                	mov    %edx,(%ebx)
8100678d:	0f b6 00             	movzbl (%eax),%eax
81006790:	0f b6 c0             	movzbl %al,%eax
81006793:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006796:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006799:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100679c:	c9                   	leave  
8100679d:	c3                   	ret    

8100679e <_findenv>:
8100679e:	55                   	push   %ebp
8100679f:	89 e5                	mov    %esp,%ebp
810067a1:	83 ec 08             	sub    $0x8,%esp
810067a4:	8b 55 08             	mov    0x8(%ebp),%edx
810067a7:	a1 84 83 00 81       	mov    0x81008384,%eax
810067ac:	83 ec 04             	sub    $0x4,%esp
810067af:	ff 75 0c             	push   0xc(%ebp)
810067b2:	52                   	push   %edx
810067b3:	50                   	push   %eax
810067b4:	e8 25 00 00 00       	call   810067de <_findenv_r>
810067b9:	83 c4 10             	add    $0x10,%esp
810067bc:	c9                   	leave  
810067bd:	c3                   	ret    

810067be <getenv>:
810067be:	55                   	push   %ebp
810067bf:	89 e5                	mov    %esp,%ebp
810067c1:	83 ec 18             	sub    $0x18,%esp
810067c4:	a1 84 83 00 81       	mov    0x81008384,%eax
810067c9:	83 ec 04             	sub    $0x4,%esp
810067cc:	8d 55 f4             	lea    -0xc(%ebp),%edx
810067cf:	52                   	push   %edx
810067d0:	ff 75 08             	push   0x8(%ebp)
810067d3:	50                   	push   %eax
810067d4:	e8 05 00 00 00       	call   810067de <_findenv_r>
810067d9:	83 c4 10             	add    $0x10,%esp
810067dc:	c9                   	leave  
810067dd:	c3                   	ret    

810067de <_findenv_r>:
810067de:	55                   	push   %ebp
810067df:	89 e5                	mov    %esp,%ebp
810067e1:	57                   	push   %edi
810067e2:	56                   	push   %esi
810067e3:	53                   	push   %ebx
810067e4:	83 ec 1c             	sub    $0x1c,%esp
810067e7:	8b 7d 0c             	mov    0xc(%ebp),%edi
810067ea:	83 ec 0c             	sub    $0xc,%esp
810067ed:	ff 75 08             	push   0x8(%ebp)
810067f0:	e8 54 10 00 00       	call   81007849 <__env_lock>
810067f5:	83 c4 10             	add    $0x10,%esp
810067f8:	a1 b0 87 00 81       	mov    0x810087b0,%eax
810067fd:	8b 00                	mov    (%eax),%eax
810067ff:	85 c0                	test   %eax,%eax
81006801:	75 18                	jne    8100681b <_findenv_r+0x3d>
81006803:	83 ec 0c             	sub    $0xc,%esp
81006806:	ff 75 08             	push   0x8(%ebp)
81006809:	e8 41 10 00 00       	call   8100784f <__env_unlock>
8100680e:	83 c4 10             	add    $0x10,%esp
81006811:	b8 00 00 00 00       	mov    $0x0,%eax
81006816:	e9 a8 00 00 00       	jmp    810068c3 <_findenv_r+0xe5>
8100681b:	89 7d e4             	mov    %edi,-0x1c(%ebp)
8100681e:	eb 04                	jmp    81006824 <_findenv_r+0x46>
81006820:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006824:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006827:	0f b6 00             	movzbl (%eax),%eax
8100682a:	84 c0                	test   %al,%al
8100682c:	74 0a                	je     81006838 <_findenv_r+0x5a>
8100682e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006831:	0f b6 00             	movzbl (%eax),%eax
81006834:	3c 3d                	cmp    $0x3d,%al
81006836:	75 e8                	jne    81006820 <_findenv_r+0x42>
81006838:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100683b:	0f b6 00             	movzbl (%eax),%eax
8100683e:	3c 3d                	cmp    $0x3d,%al
81006840:	74 6e                	je     810068b0 <_findenv_r+0xd2>
81006842:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006845:	29 f8                	sub    %edi,%eax
81006847:	89 c6                	mov    %eax,%esi
81006849:	a1 b0 87 00 81       	mov    0x810087b0,%eax
8100684e:	8b 18                	mov    (%eax),%ebx
81006850:	eb 58                	jmp    810068aa <_findenv_r+0xcc>
81006852:	89 f2                	mov    %esi,%edx
81006854:	8b 03                	mov    (%ebx),%eax
81006856:	83 ec 04             	sub    $0x4,%esp
81006859:	52                   	push   %edx
8100685a:	57                   	push   %edi
8100685b:	50                   	push   %eax
8100685c:	e8 80 0d 00 00       	call   810075e1 <strncmp>
81006861:	83 c4 10             	add    $0x10,%esp
81006864:	85 c0                	test   %eax,%eax
81006866:	75 3f                	jne    810068a7 <_findenv_r+0xc9>
81006868:	8b 03                	mov    (%ebx),%eax
8100686a:	89 f2                	mov    %esi,%edx
8100686c:	01 d0                	add    %edx,%eax
8100686e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006871:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006874:	0f b6 00             	movzbl (%eax),%eax
81006877:	3c 3d                	cmp    $0x3d,%al
81006879:	75 2c                	jne    810068a7 <_findenv_r+0xc9>
8100687b:	a1 b0 87 00 81       	mov    0x810087b0,%eax
81006880:	8b 10                	mov    (%eax),%edx
81006882:	89 d8                	mov    %ebx,%eax
81006884:	29 d0                	sub    %edx,%eax
81006886:	c1 f8 02             	sar    $0x2,%eax
81006889:	89 c2                	mov    %eax,%edx
8100688b:	8b 45 10             	mov    0x10(%ebp),%eax
8100688e:	89 10                	mov    %edx,(%eax)
81006890:	83 ec 0c             	sub    $0xc,%esp
81006893:	ff 75 08             	push   0x8(%ebp)
81006896:	e8 b4 0f 00 00       	call   8100784f <__env_unlock>
8100689b:	83 c4 10             	add    $0x10,%esp
8100689e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810068a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810068a5:	eb 1c                	jmp    810068c3 <_findenv_r+0xe5>
810068a7:	83 c3 04             	add    $0x4,%ebx
810068aa:	8b 03                	mov    (%ebx),%eax
810068ac:	85 c0                	test   %eax,%eax
810068ae:	75 a2                	jne    81006852 <_findenv_r+0x74>
810068b0:	83 ec 0c             	sub    $0xc,%esp
810068b3:	ff 75 08             	push   0x8(%ebp)
810068b6:	e8 94 0f 00 00       	call   8100784f <__env_unlock>
810068bb:	83 c4 10             	add    $0x10,%esp
810068be:	b8 00 00 00 00       	mov    $0x0,%eax
810068c3:	8d 65 f4             	lea    -0xc(%ebp),%esp
810068c6:	5b                   	pop    %ebx
810068c7:	5e                   	pop    %esi
810068c8:	5f                   	pop    %edi
810068c9:	5d                   	pop    %ebp
810068ca:	c3                   	ret    

810068cb <_getenv_r>:
810068cb:	55                   	push   %ebp
810068cc:	89 e5                	mov    %esp,%ebp
810068ce:	83 ec 18             	sub    $0x18,%esp
810068d1:	83 ec 04             	sub    $0x4,%esp
810068d4:	8d 45 f4             	lea    -0xc(%ebp),%eax
810068d7:	50                   	push   %eax
810068d8:	ff 75 0c             	push   0xc(%ebp)
810068db:	ff 75 08             	push   0x8(%ebp)
810068de:	e8 fb fe ff ff       	call   810067de <_findenv_r>
810068e3:	83 c4 10             	add    $0x10,%esp
810068e6:	c9                   	leave  
810068e7:	c3                   	ret    

810068e8 <_isatty_r>:
810068e8:	55                   	push   %ebp
810068e9:	89 e5                	mov    %esp,%ebp
810068eb:	83 ec 18             	sub    $0x18,%esp
810068ee:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
810068f5:	00 00 00 
810068f8:	83 ec 0c             	sub    $0xc,%esp
810068fb:	ff 75 0c             	push   0xc(%ebp)
810068fe:	e8 d4 a1 ff ff       	call   81000ad7 <isatty>
81006903:	83 c4 10             	add    $0x10,%esp
81006906:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006909:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100690d:	75 14                	jne    81006923 <_isatty_r+0x3b>
8100690f:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81006914:	85 c0                	test   %eax,%eax
81006916:	74 0b                	je     81006923 <_isatty_r+0x3b>
81006918:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
8100691e:	8b 45 08             	mov    0x8(%ebp),%eax
81006921:	89 10                	mov    %edx,(%eax)
81006923:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006926:	c9                   	leave  
81006927:	c3                   	ret    

81006928 <__get_global_locale>:
81006928:	55                   	push   %ebp
81006929:	89 e5                	mov    %esp,%ebp
8100692b:	b8 c0 87 00 81       	mov    $0x810087c0,%eax
81006930:	5d                   	pop    %ebp
81006931:	c3                   	ret    

81006932 <__get_current_locale>:
81006932:	55                   	push   %ebp
81006933:	89 e5                	mov    %esp,%ebp
81006935:	e8 ee ff ff ff       	call   81006928 <__get_global_locale>
8100693a:	5d                   	pop    %ebp
8100693b:	c3                   	ret    

8100693c <_setlocale_r>:
8100693c:	55                   	push   %ebp
8100693d:	89 e5                	mov    %esp,%ebp
8100693f:	83 ec 08             	sub    $0x8,%esp
81006942:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006946:	74 4c                	je     81006994 <_setlocale_r+0x58>
81006948:	83 ec 08             	sub    $0x8,%esp
8100694b:	68 24 7f 00 81       	push   $0x81007f24
81006950:	ff 75 10             	push   0x10(%ebp)
81006953:	e8 44 ec ff ff       	call   8100559c <strcmp>
81006958:	83 c4 10             	add    $0x10,%esp
8100695b:	85 c0                	test   %eax,%eax
8100695d:	74 35                	je     81006994 <_setlocale_r+0x58>
8100695f:	83 ec 08             	sub    $0x8,%esp
81006962:	68 2a 7f 00 81       	push   $0x81007f2a
81006967:	ff 75 10             	push   0x10(%ebp)
8100696a:	e8 2d ec ff ff       	call   8100559c <strcmp>
8100696f:	83 c4 10             	add    $0x10,%esp
81006972:	85 c0                	test   %eax,%eax
81006974:	74 1e                	je     81006994 <_setlocale_r+0x58>
81006976:	83 ec 08             	sub    $0x8,%esp
81006979:	68 23 7f 00 81       	push   $0x81007f23
8100697e:	ff 75 10             	push   0x10(%ebp)
81006981:	e8 16 ec ff ff       	call   8100559c <strcmp>
81006986:	83 c4 10             	add    $0x10,%esp
81006989:	85 c0                	test   %eax,%eax
8100698b:	74 07                	je     81006994 <_setlocale_r+0x58>
8100698d:	b8 00 00 00 00       	mov    $0x0,%eax
81006992:	eb 05                	jmp    81006999 <_setlocale_r+0x5d>
81006994:	b8 2a 7f 00 81       	mov    $0x81007f2a,%eax
81006999:	c9                   	leave  
8100699a:	c3                   	ret    

8100699b <__locale_mb_cur_max>:
8100699b:	55                   	push   %ebp
8100699c:	89 e5                	mov    %esp,%ebp
8100699e:	e8 8f ff ff ff       	call   81006932 <__get_current_locale>
810069a3:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
810069aa:	0f be c0             	movsbl %al,%eax
810069ad:	5d                   	pop    %ebp
810069ae:	c3                   	ret    

810069af <setlocale>:
810069af:	55                   	push   %ebp
810069b0:	89 e5                	mov    %esp,%ebp
810069b2:	83 ec 08             	sub    $0x8,%esp
810069b5:	a1 84 83 00 81       	mov    0x81008384,%eax
810069ba:	83 ec 04             	sub    $0x4,%esp
810069bd:	ff 75 0c             	push   0xc(%ebp)
810069c0:	ff 75 08             	push   0x8(%ebp)
810069c3:	50                   	push   %eax
810069c4:	e8 73 ff ff ff       	call   8100693c <_setlocale_r>
810069c9:	83 c4 10             	add    $0x10,%esp
810069cc:	c9                   	leave  
810069cd:	c3                   	ret    

810069ce <_lseek_r>:
810069ce:	55                   	push   %ebp
810069cf:	89 e5                	mov    %esp,%ebp
810069d1:	83 ec 18             	sub    $0x18,%esp
810069d4:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
810069db:	00 00 00 
810069de:	83 ec 04             	sub    $0x4,%esp
810069e1:	ff 75 14             	push   0x14(%ebp)
810069e4:	ff 75 10             	push   0x10(%ebp)
810069e7:	ff 75 0c             	push   0xc(%ebp)
810069ea:	e8 bb a0 ff ff       	call   81000aaa <lseek>
810069ef:	83 c4 10             	add    $0x10,%esp
810069f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069f5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810069f9:	75 14                	jne    81006a0f <_lseek_r+0x41>
810069fb:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81006a00:	85 c0                	test   %eax,%eax
81006a02:	74 0b                	je     81006a0f <_lseek_r+0x41>
81006a04:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81006a0a:	8b 45 08             	mov    0x8(%ebp),%eax
81006a0d:	89 10                	mov    %edx,(%eax)
81006a0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a12:	c9                   	leave  
81006a13:	c3                   	ret    

81006a14 <__get_global_locale>:
81006a14:	55                   	push   %ebp
81006a15:	89 e5                	mov    %esp,%ebp
81006a17:	b8 c0 87 00 81       	mov    $0x810087c0,%eax
81006a1c:	5d                   	pop    %ebp
81006a1d:	c3                   	ret    

81006a1e <__get_current_locale>:
81006a1e:	55                   	push   %ebp
81006a1f:	89 e5                	mov    %esp,%ebp
81006a21:	e8 ee ff ff ff       	call   81006a14 <__get_global_locale>
81006a26:	5d                   	pop    %ebp
81006a27:	c3                   	ret    

81006a28 <_mbtowc_r>:
81006a28:	55                   	push   %ebp
81006a29:	89 e5                	mov    %esp,%ebp
81006a2b:	83 ec 08             	sub    $0x8,%esp
81006a2e:	e8 eb ff ff ff       	call   81006a1e <__get_current_locale>
81006a33:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006a39:	83 ec 0c             	sub    $0xc,%esp
81006a3c:	ff 75 18             	push   0x18(%ebp)
81006a3f:	ff 75 14             	push   0x14(%ebp)
81006a42:	ff 75 10             	push   0x10(%ebp)
81006a45:	ff 75 0c             	push   0xc(%ebp)
81006a48:	ff 75 08             	push   0x8(%ebp)
81006a4b:	ff d0                	call   *%eax
81006a4d:	83 c4 20             	add    $0x20,%esp
81006a50:	c9                   	leave  
81006a51:	c3                   	ret    

81006a52 <__ascii_mbtowc>:
81006a52:	55                   	push   %ebp
81006a53:	89 e5                	mov    %esp,%ebp
81006a55:	83 ec 10             	sub    $0x10,%esp
81006a58:	8b 45 10             	mov    0x10(%ebp),%eax
81006a5b:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a5e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006a62:	75 06                	jne    81006a6a <__ascii_mbtowc+0x18>
81006a64:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006a67:	89 45 0c             	mov    %eax,0xc(%ebp)
81006a6a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006a6e:	75 07                	jne    81006a77 <__ascii_mbtowc+0x25>
81006a70:	b8 00 00 00 00       	mov    $0x0,%eax
81006a75:	eb 31                	jmp    81006aa8 <__ascii_mbtowc+0x56>
81006a77:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006a7b:	75 07                	jne    81006a84 <__ascii_mbtowc+0x32>
81006a7d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006a82:	eb 24                	jmp    81006aa8 <__ascii_mbtowc+0x56>
81006a84:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a87:	0f b6 00             	movzbl (%eax),%eax
81006a8a:	0f b6 d0             	movzbl %al,%edx
81006a8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a90:	89 10                	mov    %edx,(%eax)
81006a92:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a95:	0f b6 00             	movzbl (%eax),%eax
81006a98:	84 c0                	test   %al,%al
81006a9a:	75 07                	jne    81006aa3 <__ascii_mbtowc+0x51>
81006a9c:	b8 00 00 00 00       	mov    $0x0,%eax
81006aa1:	eb 05                	jmp    81006aa8 <__ascii_mbtowc+0x56>
81006aa3:	b8 01 00 00 00       	mov    $0x1,%eax
81006aa8:	c9                   	leave  
81006aa9:	c3                   	ret    
81006aaa:	66 90                	xchg   %ax,%ax
81006aac:	66 90                	xchg   %ax,%ax
81006aae:	66 90                	xchg   %ax,%ax

81006ab0 <memmove>:
81006ab0:	55                   	push   %ebp
81006ab1:	89 e5                	mov    %esp,%ebp
81006ab3:	56                   	push   %esi
81006ab4:	57                   	push   %edi
81006ab5:	53                   	push   %ebx
81006ab6:	8b 7d 08             	mov    0x8(%ebp),%edi
81006ab9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006abc:	8b 75 0c             	mov    0xc(%ebp),%esi
81006abf:	fc                   	cld    
81006ac0:	39 fe                	cmp    %edi,%esi
81006ac2:	73 43                	jae    81006b07 <memmove+0x57>
81006ac4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81006ac8:	39 df                	cmp    %ebx,%edi
81006aca:	77 3b                	ja     81006b07 <memmove+0x57>
81006acc:	01 ce                	add    %ecx,%esi
81006ace:	01 cf                	add    %ecx,%edi
81006ad0:	fd                   	std    
81006ad1:	83 f9 08             	cmp    $0x8,%ecx
81006ad4:	76 2b                	jbe    81006b01 <memmove+0x51>
81006ad6:	89 fa                	mov    %edi,%edx
81006ad8:	89 cb                	mov    %ecx,%ebx
81006ada:	83 e2 03             	and    $0x3,%edx
81006add:	74 0c                	je     81006aeb <memmove+0x3b>
81006adf:	89 d1                	mov    %edx,%ecx
81006ae1:	4e                   	dec    %esi
81006ae2:	4f                   	dec    %edi
81006ae3:	29 cb                	sub    %ecx,%ebx
81006ae5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006ae7:	89 d9                	mov    %ebx,%ecx
81006ae9:	46                   	inc    %esi
81006aea:	47                   	inc    %edi
81006aeb:	c1 e9 02             	shr    $0x2,%ecx
81006aee:	83 ee 04             	sub    $0x4,%esi
81006af1:	83 ef 04             	sub    $0x4,%edi
81006af4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006af6:	83 c6 04             	add    $0x4,%esi
81006af9:	83 c7 04             	add    $0x4,%edi
81006afc:	89 d9                	mov    %ebx,%ecx
81006afe:	83 e1 03             	and    $0x3,%ecx
81006b01:	4e                   	dec    %esi
81006b02:	4f                   	dec    %edi
81006b03:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b05:	eb 2a                	jmp    81006b31 <memmove+0x81>
81006b07:	83 f9 08             	cmp    $0x8,%ecx
81006b0a:	76 23                	jbe    81006b2f <memmove+0x7f>
81006b0c:	89 fa                	mov    %edi,%edx
81006b0e:	89 cb                	mov    %ecx,%ebx
81006b10:	83 e2 03             	and    $0x3,%edx
81006b13:	74 10                	je     81006b25 <memmove+0x75>
81006b15:	b9 04 00 00 00       	mov    $0x4,%ecx
81006b1a:	29 d1                	sub    %edx,%ecx
81006b1c:	83 e1 03             	and    $0x3,%ecx
81006b1f:	29 cb                	sub    %ecx,%ebx
81006b21:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b23:	89 d9                	mov    %ebx,%ecx
81006b25:	c1 e9 02             	shr    $0x2,%ecx
81006b28:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006b2a:	89 d9                	mov    %ebx,%ecx
81006b2c:	83 e1 03             	and    $0x3,%ecx
81006b2f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006b31:	8b 45 08             	mov    0x8(%ebp),%eax
81006b34:	fc                   	cld    
81006b35:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006b38:	5b                   	pop    %ebx
81006b39:	5f                   	pop    %edi
81006b3a:	5e                   	pop    %esi
81006b3b:	c9                   	leave  
81006b3c:	c3                   	ret    

81006b3d <__sputc_r>:
81006b3d:	55                   	push   %ebp
81006b3e:	89 e5                	mov    %esp,%ebp
81006b40:	83 ec 08             	sub    $0x8,%esp
81006b43:	8b 45 10             	mov    0x10(%ebp),%eax
81006b46:	8b 40 08             	mov    0x8(%eax),%eax
81006b49:	8d 50 ff             	lea    -0x1(%eax),%edx
81006b4c:	8b 45 10             	mov    0x10(%ebp),%eax
81006b4f:	89 50 08             	mov    %edx,0x8(%eax)
81006b52:	8b 45 10             	mov    0x10(%ebp),%eax
81006b55:	8b 40 08             	mov    0x8(%eax),%eax
81006b58:	85 c0                	test   %eax,%eax
81006b5a:	79 17                	jns    81006b73 <__sputc_r+0x36>
81006b5c:	8b 45 10             	mov    0x10(%ebp),%eax
81006b5f:	8b 50 08             	mov    0x8(%eax),%edx
81006b62:	8b 45 10             	mov    0x10(%ebp),%eax
81006b65:	8b 40 18             	mov    0x18(%eax),%eax
81006b68:	39 c2                	cmp    %eax,%edx
81006b6a:	7c 21                	jl     81006b8d <__sputc_r+0x50>
81006b6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b6f:	3c 0a                	cmp    $0xa,%al
81006b71:	74 1a                	je     81006b8d <__sputc_r+0x50>
81006b73:	8b 45 10             	mov    0x10(%ebp),%eax
81006b76:	8b 00                	mov    (%eax),%eax
81006b78:	8d 48 01             	lea    0x1(%eax),%ecx
81006b7b:	8b 55 10             	mov    0x10(%ebp),%edx
81006b7e:	89 0a                	mov    %ecx,(%edx)
81006b80:	8b 55 0c             	mov    0xc(%ebp),%edx
81006b83:	88 10                	mov    %dl,(%eax)
81006b85:	0f b6 00             	movzbl (%eax),%eax
81006b88:	0f b6 c0             	movzbl %al,%eax
81006b8b:	eb 14                	jmp    81006ba1 <__sputc_r+0x64>
81006b8d:	83 ec 04             	sub    $0x4,%esp
81006b90:	ff 75 10             	push   0x10(%ebp)
81006b93:	ff 75 0c             	push   0xc(%ebp)
81006b96:	ff 75 08             	push   0x8(%ebp)
81006b99:	e8 91 ee ff ff       	call   81005a2f <__swbuf_r>
81006b9e:	83 c4 10             	add    $0x10,%esp
81006ba1:	c9                   	leave  
81006ba2:	c3                   	ret    

81006ba3 <_putc_r>:
81006ba3:	55                   	push   %ebp
81006ba4:	89 e5                	mov    %esp,%ebp
81006ba6:	53                   	push   %ebx
81006ba7:	83 ec 14             	sub    $0x14,%esp
81006baa:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006bad:	8b 45 08             	mov    0x8(%ebp),%eax
81006bb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006bb3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006bb7:	74 18                	je     81006bd1 <_putc_r+0x2e>
81006bb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006bbc:	8b 40 38             	mov    0x38(%eax),%eax
81006bbf:	85 c0                	test   %eax,%eax
81006bc1:	75 0e                	jne    81006bd1 <_putc_r+0x2e>
81006bc3:	83 ec 0c             	sub    $0xc,%esp
81006bc6:	ff 75 f4             	push   -0xc(%ebp)
81006bc9:	e8 b1 a9 ff ff       	call   8100157f <__sinit>
81006bce:	83 c4 10             	add    $0x10,%esp
81006bd1:	83 ec 04             	sub    $0x4,%esp
81006bd4:	53                   	push   %ebx
81006bd5:	ff 75 0c             	push   0xc(%ebp)
81006bd8:	ff 75 08             	push   0x8(%ebp)
81006bdb:	e8 5d ff ff ff       	call   81006b3d <__sputc_r>
81006be0:	83 c4 10             	add    $0x10,%esp
81006be3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006be6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006be9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006bec:	c9                   	leave  
81006bed:	c3                   	ret    

81006bee <putc>:
81006bee:	55                   	push   %ebp
81006bef:	89 e5                	mov    %esp,%ebp
81006bf1:	53                   	push   %ebx
81006bf2:	83 ec 14             	sub    $0x14,%esp
81006bf5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006bf8:	a1 84 83 00 81       	mov    0x81008384,%eax
81006bfd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c03:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c06:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006c0a:	74 18                	je     81006c24 <putc+0x36>
81006c0c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c0f:	8b 40 38             	mov    0x38(%eax),%eax
81006c12:	85 c0                	test   %eax,%eax
81006c14:	75 0e                	jne    81006c24 <putc+0x36>
81006c16:	83 ec 0c             	sub    $0xc,%esp
81006c19:	ff 75 f0             	push   -0x10(%ebp)
81006c1c:	e8 5e a9 ff ff       	call   8100157f <__sinit>
81006c21:	83 c4 10             	add    $0x10,%esp
81006c24:	83 ec 04             	sub    $0x4,%esp
81006c27:	53                   	push   %ebx
81006c28:	ff 75 08             	push   0x8(%ebp)
81006c2b:	ff 75 f4             	push   -0xc(%ebp)
81006c2e:	e8 0a ff ff ff       	call   81006b3d <__sputc_r>
81006c33:	83 c4 10             	add    $0x10,%esp
81006c36:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006c39:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006c3c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006c3f:	c9                   	leave  
81006c40:	c3                   	ret    

81006c41 <_read_r>:
81006c41:	55                   	push   %ebp
81006c42:	89 e5                	mov    %esp,%ebp
81006c44:	83 ec 18             	sub    $0x18,%esp
81006c47:	c7 05 cc 8f 00 81 00 	movl   $0x0,0x81008fcc
81006c4e:	00 00 00 
81006c51:	83 ec 04             	sub    $0x4,%esp
81006c54:	ff 75 14             	push   0x14(%ebp)
81006c57:	ff 75 10             	push   0x10(%ebp)
81006c5a:	ff 75 0c             	push   0xc(%ebp)
81006c5d:	e8 cd 9d ff ff       	call   81000a2f <read>
81006c62:	83 c4 10             	add    $0x10,%esp
81006c65:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c68:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006c6c:	75 14                	jne    81006c82 <_read_r+0x41>
81006c6e:	a1 cc 8f 00 81       	mov    0x81008fcc,%eax
81006c73:	85 c0                	test   %eax,%eax
81006c75:	74 0b                	je     81006c82 <_read_r+0x41>
81006c77:	8b 15 cc 8f 00 81    	mov    0x81008fcc,%edx
81006c7d:	8b 45 08             	mov    0x8(%ebp),%eax
81006c80:	89 10                	mov    %edx,(%eax)
81006c82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c85:	c9                   	leave  
81006c86:	c3                   	ret    

81006c87 <_realloc_r>:
81006c87:	55                   	push   %ebp
81006c88:	89 e5                	mov    %esp,%ebp
81006c8a:	83 ec 78             	sub    $0x78,%esp
81006c8d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006c91:	75 16                	jne    81006ca9 <_realloc_r+0x22>
81006c93:	83 ec 08             	sub    $0x8,%esp
81006c96:	ff 75 10             	push   0x10(%ebp)
81006c99:	ff 75 08             	push   0x8(%ebp)
81006c9c:	e8 f7 c9 ff ff       	call   81003698 <_malloc_r>
81006ca1:	83 c4 10             	add    $0x10,%esp
81006ca4:	e9 b6 08 00 00       	jmp    8100755f <_realloc_r+0x8d8>
81006ca9:	83 ec 0c             	sub    $0xc,%esp
81006cac:	ff 75 08             	push   0x8(%ebp)
81006caf:	e8 c4 d3 ff ff       	call   81004078 <__malloc_lock>
81006cb4:	83 c4 10             	add    $0x10,%esp
81006cb7:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cba:	83 e8 08             	sub    $0x8,%eax
81006cbd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81006cc0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006cc3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cc6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006cc9:	8b 40 04             	mov    0x4(%eax),%eax
81006ccc:	83 e0 fc             	and    $0xfffffffc,%eax
81006ccf:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006cd2:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006cd5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006cd8:	8b 45 10             	mov    0x10(%ebp),%eax
81006cdb:	83 c0 0b             	add    $0xb,%eax
81006cde:	83 f8 16             	cmp    $0x16,%eax
81006ce1:	76 0b                	jbe    81006cee <_realloc_r+0x67>
81006ce3:	8b 45 10             	mov    0x10(%ebp),%eax
81006ce6:	83 c0 0b             	add    $0xb,%eax
81006ce9:	83 e0 f8             	and    $0xfffffff8,%eax
81006cec:	eb 05                	jmp    81006cf3 <_realloc_r+0x6c>
81006cee:	b8 10 00 00 00       	mov    $0x10,%eax
81006cf3:	89 45 bc             	mov    %eax,-0x44(%ebp)
81006cf6:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006cf9:	85 c0                	test   %eax,%eax
81006cfb:	78 08                	js     81006d05 <_realloc_r+0x7e>
81006cfd:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d00:	3b 45 10             	cmp    0x10(%ebp),%eax
81006d03:	73 13                	jae    81006d18 <_realloc_r+0x91>
81006d05:	8b 45 08             	mov    0x8(%ebp),%eax
81006d08:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006d0e:	b8 00 00 00 00       	mov    $0x0,%eax
81006d13:	e9 47 08 00 00       	jmp    8100755f <_realloc_r+0x8d8>
81006d18:	8b 55 c0             	mov    -0x40(%ebp),%edx
81006d1b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d1e:	39 c2                	cmp    %eax,%edx
81006d20:	0f 8d 8b 07 00 00    	jge    810074b1 <_realloc_r+0x82a>
81006d26:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81006d29:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006d2c:	01 d0                	add    %edx,%eax
81006d2e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006d31:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81006d36:	8b 40 08             	mov    0x8(%eax),%eax
81006d39:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006d3c:	74 1e                	je     81006d5c <_realloc_r+0xd5>
81006d3e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d41:	8b 40 04             	mov    0x4(%eax),%eax
81006d44:	83 e0 fe             	and    $0xfffffffe,%eax
81006d47:	89 c2                	mov    %eax,%edx
81006d49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d4c:	01 d0                	add    %edx,%eax
81006d4e:	8b 40 04             	mov    0x4(%eax),%eax
81006d51:	83 e0 01             	and    $0x1,%eax
81006d54:	85 c0                	test   %eax,%eax
81006d56:	0f 85 ca 00 00 00    	jne    81006e26 <_realloc_r+0x19f>
81006d5c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d5f:	8b 40 04             	mov    0x4(%eax),%eax
81006d62:	83 e0 fc             	and    $0xfffffffc,%eax
81006d65:	89 45 e8             	mov    %eax,-0x18(%ebp)
81006d68:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81006d6d:	8b 40 08             	mov    0x8(%eax),%eax
81006d70:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006d73:	75 71                	jne    81006de6 <_realloc_r+0x15f>
81006d75:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006d78:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d7b:	01 d0                	add    %edx,%eax
81006d7d:	89 c2                	mov    %eax,%edx
81006d7f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d82:	83 c0 10             	add    $0x10,%eax
81006d85:	39 c2                	cmp    %eax,%edx
81006d87:	0f 8c a9 00 00 00    	jl     81006e36 <_realloc_r+0x1af>
81006d8d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006d90:	01 45 f0             	add    %eax,-0x10(%ebp)
81006d93:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81006d98:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81006d9b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d9e:	01 c8                	add    %ecx,%eax
81006da0:	89 42 08             	mov    %eax,0x8(%edx)
81006da3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006da6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006da9:	89 c2                	mov    %eax,%edx
81006dab:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81006db0:	8b 40 08             	mov    0x8(%eax),%eax
81006db3:	83 ca 01             	or     $0x1,%edx
81006db6:	89 50 04             	mov    %edx,0x4(%eax)
81006db9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dbc:	8b 40 04             	mov    0x4(%eax),%eax
81006dbf:	83 e0 01             	and    $0x1,%eax
81006dc2:	0b 45 bc             	or     -0x44(%ebp),%eax
81006dc5:	89 c2                	mov    %eax,%edx
81006dc7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dca:	89 50 04             	mov    %edx,0x4(%eax)
81006dcd:	83 ec 0c             	sub    $0xc,%esp
81006dd0:	ff 75 08             	push   0x8(%ebp)
81006dd3:	e8 a6 d2 ff ff       	call   8100407e <__malloc_unlock>
81006dd8:	83 c4 10             	add    $0x10,%esp
81006ddb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dde:	83 c0 08             	add    $0x8,%eax
81006de1:	e9 79 07 00 00       	jmp    8100755f <_realloc_r+0x8d8>
81006de6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006de9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006dec:	01 d0                	add    %edx,%eax
81006dee:	89 c2                	mov    %eax,%edx
81006df0:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006df3:	39 c2                	cmp    %eax,%edx
81006df5:	7c 3f                	jl     81006e36 <_realloc_r+0x1af>
81006df7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006dfa:	8b 40 0c             	mov    0xc(%eax),%eax
81006dfd:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006e00:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006e03:	8b 40 08             	mov    0x8(%eax),%eax
81006e06:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006e09:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006e0c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006e0f:	89 50 0c             	mov    %edx,0xc(%eax)
81006e12:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006e15:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006e18:	89 50 08             	mov    %edx,0x8(%eax)
81006e1b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006e1e:	01 45 f0             	add    %eax,-0x10(%ebp)
81006e21:	e9 8c 06 00 00       	jmp    810074b2 <_realloc_r+0x82b>
81006e26:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81006e2d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81006e34:	eb 01                	jmp    81006e37 <_realloc_r+0x1b0>
81006e36:	90                   	nop
81006e37:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e3a:	8b 40 04             	mov    0x4(%eax),%eax
81006e3d:	83 e0 01             	and    $0x1,%eax
81006e40:	85 c0                	test   %eax,%eax
81006e42:	0f 85 d6 04 00 00    	jne    8100731e <_realloc_r+0x697>
81006e48:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e4b:	8b 00                	mov    (%eax),%eax
81006e4d:	f7 d8                	neg    %eax
81006e4f:	89 c2                	mov    %eax,%edx
81006e51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006e54:	01 d0                	add    %edx,%eax
81006e56:	89 45 b0             	mov    %eax,-0x50(%ebp)
81006e59:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006e5c:	8b 40 04             	mov    0x4(%eax),%eax
81006e5f:	83 e0 fc             	and    $0xfffffffc,%eax
81006e62:	89 45 ac             	mov    %eax,-0x54(%ebp)
81006e65:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81006e69:	0f 84 4a 03 00 00    	je     810071b9 <_realloc_r+0x532>
81006e6f:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81006e74:	8b 40 08             	mov    0x8(%eax),%eax
81006e77:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006e7a:	0f 85 b0 01 00 00    	jne    81007030 <_realloc_r+0x3a9>
81006e80:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006e83:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006e86:	01 c2                	add    %eax,%edx
81006e88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006e8b:	01 d0                	add    %edx,%eax
81006e8d:	89 c2                	mov    %eax,%edx
81006e8f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006e92:	83 c0 10             	add    $0x10,%eax
81006e95:	39 c2                	cmp    %eax,%edx
81006e97:	0f 8c 1c 03 00 00    	jl     810071b9 <_realloc_r+0x532>
81006e9d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006ea0:	8b 40 0c             	mov    0xc(%eax),%eax
81006ea3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006ea6:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006ea9:	8b 40 08             	mov    0x8(%eax),%eax
81006eac:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006eaf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006eb2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006eb5:	89 50 0c             	mov    %edx,0xc(%eax)
81006eb8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006ebb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006ebe:	89 50 08             	mov    %edx,0x8(%eax)
81006ec1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006ec4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ec7:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006eca:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006ecd:	01 d0                	add    %edx,%eax
81006ecf:	01 45 f0             	add    %eax,-0x10(%ebp)
81006ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ed5:	83 c0 08             	add    $0x8,%eax
81006ed8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006edb:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006ede:	83 e8 04             	sub    $0x4,%eax
81006ee1:	89 45 a0             	mov    %eax,-0x60(%ebp)
81006ee4:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81006ee8:	0f 87 de 00 00 00    	ja     81006fcc <_realloc_r+0x345>
81006eee:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ef1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ef4:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006ef7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006efa:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81006efe:	0f 86 90 00 00 00    	jbe    81006f94 <_realloc_r+0x30d>
81006f04:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f07:	8d 42 04             	lea    0x4(%edx),%eax
81006f0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f0d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f10:	8d 48 04             	lea    0x4(%eax),%ecx
81006f13:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f16:	8b 12                	mov    (%edx),%edx
81006f18:	89 10                	mov    %edx,(%eax)
81006f1a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f1d:	8d 42 04             	lea    0x4(%edx),%eax
81006f20:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f23:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f26:	8d 48 04             	lea    0x4(%eax),%ecx
81006f29:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f2c:	8b 12                	mov    (%edx),%edx
81006f2e:	89 10                	mov    %edx,(%eax)
81006f30:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81006f34:	76 5e                	jbe    81006f94 <_realloc_r+0x30d>
81006f36:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f39:	8d 42 04             	lea    0x4(%edx),%eax
81006f3c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f3f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f42:	8d 48 04             	lea    0x4(%eax),%ecx
81006f45:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f48:	8b 12                	mov    (%edx),%edx
81006f4a:	89 10                	mov    %edx,(%eax)
81006f4c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f4f:	8d 42 04             	lea    0x4(%edx),%eax
81006f52:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f55:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f58:	8d 48 04             	lea    0x4(%eax),%ecx
81006f5b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f5e:	8b 12                	mov    (%edx),%edx
81006f60:	89 10                	mov    %edx,(%eax)
81006f62:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006f66:	76 2c                	jbe    81006f94 <_realloc_r+0x30d>
81006f68:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f6b:	8d 42 04             	lea    0x4(%edx),%eax
81006f6e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f71:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f74:	8d 48 04             	lea    0x4(%eax),%ecx
81006f77:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f7a:	8b 12                	mov    (%edx),%edx
81006f7c:	89 10                	mov    %edx,(%eax)
81006f7e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f81:	8d 42 04             	lea    0x4(%edx),%eax
81006f84:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f87:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f8a:	8d 48 04             	lea    0x4(%eax),%ecx
81006f8d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f90:	8b 12                	mov    (%edx),%edx
81006f92:	89 10                	mov    %edx,(%eax)
81006f94:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f97:	8d 42 04             	lea    0x4(%edx),%eax
81006f9a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f9d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fa0:	8d 48 04             	lea    0x4(%eax),%ecx
81006fa3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006fa6:	8b 12                	mov    (%edx),%edx
81006fa8:	89 10                	mov    %edx,(%eax)
81006faa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006fad:	8d 42 04             	lea    0x4(%edx),%eax
81006fb0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006fb3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fb6:	8d 48 04             	lea    0x4(%eax),%ecx
81006fb9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006fbc:	8b 12                	mov    (%edx),%edx
81006fbe:	89 10                	mov    %edx,(%eax)
81006fc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006fc3:	8b 10                	mov    (%eax),%edx
81006fc5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006fc8:	89 10                	mov    %edx,(%eax)
81006fca:	eb 14                	jmp    81006fe0 <_realloc_r+0x359>
81006fcc:	83 ec 04             	sub    $0x4,%esp
81006fcf:	ff 75 a0             	push   -0x60(%ebp)
81006fd2:	ff 75 0c             	push   0xc(%ebp)
81006fd5:	ff 75 a8             	push   -0x58(%ebp)
81006fd8:	e8 d3 fa ff ff       	call   81006ab0 <memmove>
81006fdd:	83 c4 10             	add    $0x10,%esp
81006fe0:	ba a0 83 00 81       	mov    $0x810083a0,%edx
81006fe5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006fe8:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006feb:	01 c8                	add    %ecx,%eax
81006fed:	89 42 08             	mov    %eax,0x8(%edx)
81006ff0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006ff3:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006ff6:	89 c2                	mov    %eax,%edx
81006ff8:	b8 a0 83 00 81       	mov    $0x810083a0,%eax
81006ffd:	8b 40 08             	mov    0x8(%eax),%eax
81007000:	83 ca 01             	or     $0x1,%edx
81007003:	89 50 04             	mov    %edx,0x4(%eax)
81007006:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007009:	8b 40 04             	mov    0x4(%eax),%eax
8100700c:	83 e0 01             	and    $0x1,%eax
8100700f:	0b 45 bc             	or     -0x44(%ebp),%eax
81007012:	89 c2                	mov    %eax,%edx
81007014:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007017:	89 50 04             	mov    %edx,0x4(%eax)
8100701a:	83 ec 0c             	sub    $0xc,%esp
8100701d:	ff 75 08             	push   0x8(%ebp)
81007020:	e8 59 d0 ff ff       	call   8100407e <__malloc_unlock>
81007025:	83 c4 10             	add    $0x10,%esp
81007028:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100702b:	e9 2f 05 00 00       	jmp    8100755f <_realloc_r+0x8d8>
81007030:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007033:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007036:	01 c2                	add    %eax,%edx
81007038:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100703b:	01 d0                	add    %edx,%eax
8100703d:	89 c2                	mov    %eax,%edx
8100703f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007042:	39 c2                	cmp    %eax,%edx
81007044:	0f 8c 6f 01 00 00    	jl     810071b9 <_realloc_r+0x532>
8100704a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100704d:	8b 40 0c             	mov    0xc(%eax),%eax
81007050:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007053:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007056:	8b 40 08             	mov    0x8(%eax),%eax
81007059:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100705c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100705f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007062:	89 50 0c             	mov    %edx,0xc(%eax)
81007065:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007068:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100706b:	89 50 08             	mov    %edx,0x8(%eax)
8100706e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007071:	8b 40 0c             	mov    0xc(%eax),%eax
81007074:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007077:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100707a:	8b 40 08             	mov    0x8(%eax),%eax
8100707d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007080:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007083:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007086:	89 50 0c             	mov    %edx,0xc(%eax)
81007089:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100708c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100708f:	89 50 08             	mov    %edx,0x8(%eax)
81007092:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007095:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007098:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100709b:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100709e:	01 d0                	add    %edx,%eax
810070a0:	01 45 f0             	add    %eax,-0x10(%ebp)
810070a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070a6:	83 c0 08             	add    $0x8,%eax
810070a9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810070ac:	8b 45 c0             	mov    -0x40(%ebp),%eax
810070af:	83 e8 04             	sub    $0x4,%eax
810070b2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
810070b5:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
810070b9:	0f 87 e1 00 00 00    	ja     810071a0 <_realloc_r+0x519>
810070bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810070c2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070c5:	8b 45 a8             	mov    -0x58(%ebp),%eax
810070c8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810070cb:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
810070cf:	0f 86 90 00 00 00    	jbe    81007165 <_realloc_r+0x4de>
810070d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070d8:	8d 42 04             	lea    0x4(%edx),%eax
810070db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070e1:	8d 48 04             	lea    0x4(%eax),%ecx
810070e4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070e7:	8b 12                	mov    (%edx),%edx
810070e9:	89 10                	mov    %edx,(%eax)
810070eb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070ee:	8d 42 04             	lea    0x4(%edx),%eax
810070f1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070f4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070f7:	8d 48 04             	lea    0x4(%eax),%ecx
810070fa:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070fd:	8b 12                	mov    (%edx),%edx
810070ff:	89 10                	mov    %edx,(%eax)
81007101:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007105:	76 5e                	jbe    81007165 <_realloc_r+0x4de>
81007107:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100710a:	8d 42 04             	lea    0x4(%edx),%eax
8100710d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007110:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007113:	8d 48 04             	lea    0x4(%eax),%ecx
81007116:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007119:	8b 12                	mov    (%edx),%edx
8100711b:	89 10                	mov    %edx,(%eax)
8100711d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007120:	8d 42 04             	lea    0x4(%edx),%eax
81007123:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007126:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007129:	8d 48 04             	lea    0x4(%eax),%ecx
8100712c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100712f:	8b 12                	mov    (%edx),%edx
81007131:	89 10                	mov    %edx,(%eax)
81007133:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81007137:	76 2c                	jbe    81007165 <_realloc_r+0x4de>
81007139:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100713c:	8d 42 04             	lea    0x4(%edx),%eax
8100713f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007142:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007145:	8d 48 04             	lea    0x4(%eax),%ecx
81007148:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100714b:	8b 12                	mov    (%edx),%edx
8100714d:	89 10                	mov    %edx,(%eax)
8100714f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007152:	8d 42 04             	lea    0x4(%edx),%eax
81007155:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007158:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100715b:	8d 48 04             	lea    0x4(%eax),%ecx
8100715e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007161:	8b 12                	mov    (%edx),%edx
81007163:	89 10                	mov    %edx,(%eax)
81007165:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007168:	8d 42 04             	lea    0x4(%edx),%eax
8100716b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100716e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007171:	8d 48 04             	lea    0x4(%eax),%ecx
81007174:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007177:	8b 12                	mov    (%edx),%edx
81007179:	89 10                	mov    %edx,(%eax)
8100717b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100717e:	8d 42 04             	lea    0x4(%edx),%eax
81007181:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007184:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007187:	8d 48 04             	lea    0x4(%eax),%ecx
8100718a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100718d:	8b 12                	mov    (%edx),%edx
8100718f:	89 10                	mov    %edx,(%eax)
81007191:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007194:	8b 10                	mov    (%eax),%edx
81007196:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007199:	89 10                	mov    %edx,(%eax)
8100719b:	e9 12 03 00 00       	jmp    810074b2 <_realloc_r+0x82b>
810071a0:	83 ec 04             	sub    $0x4,%esp
810071a3:	ff 75 a4             	push   -0x5c(%ebp)
810071a6:	ff 75 0c             	push   0xc(%ebp)
810071a9:	ff 75 a8             	push   -0x58(%ebp)
810071ac:	e8 ff f8 ff ff       	call   81006ab0 <memmove>
810071b1:	83 c4 10             	add    $0x10,%esp
810071b4:	e9 f9 02 00 00       	jmp    810074b2 <_realloc_r+0x82b>
810071b9:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
810071bd:	0f 84 5b 01 00 00    	je     8100731e <_realloc_r+0x697>
810071c3:	8b 55 ac             	mov    -0x54(%ebp),%edx
810071c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810071c9:	01 d0                	add    %edx,%eax
810071cb:	89 c2                	mov    %eax,%edx
810071cd:	8b 45 bc             	mov    -0x44(%ebp),%eax
810071d0:	39 c2                	cmp    %eax,%edx
810071d2:	0f 8c 46 01 00 00    	jl     8100731e <_realloc_r+0x697>
810071d8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810071db:	8b 40 0c             	mov    0xc(%eax),%eax
810071de:	89 45 b8             	mov    %eax,-0x48(%ebp)
810071e1:	8b 45 b0             	mov    -0x50(%ebp),%eax
810071e4:	8b 40 08             	mov    0x8(%eax),%eax
810071e7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810071ea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810071ed:	8b 55 b8             	mov    -0x48(%ebp),%edx
810071f0:	89 50 0c             	mov    %edx,0xc(%eax)
810071f3:	8b 45 b8             	mov    -0x48(%ebp),%eax
810071f6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810071f9:	89 50 08             	mov    %edx,0x8(%eax)
810071fc:	8b 45 b0             	mov    -0x50(%ebp),%eax
810071ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007202:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007205:	01 45 f0             	add    %eax,-0x10(%ebp)
81007208:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100720b:	83 c0 08             	add    $0x8,%eax
8100720e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007211:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007214:	83 e8 04             	sub    $0x4,%eax
81007217:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100721a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100721e:	0f 87 e1 00 00 00    	ja     81007305 <_realloc_r+0x67e>
81007224:	8b 45 0c             	mov    0xc(%ebp),%eax
81007227:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100722a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100722d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007230:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007234:	0f 86 90 00 00 00    	jbe    810072ca <_realloc_r+0x643>
8100723a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100723d:	8d 42 04             	lea    0x4(%edx),%eax
81007240:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007243:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007246:	8d 48 04             	lea    0x4(%eax),%ecx
81007249:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100724c:	8b 12                	mov    (%edx),%edx
8100724e:	89 10                	mov    %edx,(%eax)
81007250:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007253:	8d 42 04             	lea    0x4(%edx),%eax
81007256:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007259:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100725c:	8d 48 04             	lea    0x4(%eax),%ecx
8100725f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007262:	8b 12                	mov    (%edx),%edx
81007264:	89 10                	mov    %edx,(%eax)
81007266:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100726a:	76 5e                	jbe    810072ca <_realloc_r+0x643>
8100726c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100726f:	8d 42 04             	lea    0x4(%edx),%eax
81007272:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007275:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007278:	8d 48 04             	lea    0x4(%eax),%ecx
8100727b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100727e:	8b 12                	mov    (%edx),%edx
81007280:	89 10                	mov    %edx,(%eax)
81007282:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007285:	8d 42 04             	lea    0x4(%edx),%eax
81007288:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100728b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100728e:	8d 48 04             	lea    0x4(%eax),%ecx
81007291:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007294:	8b 12                	mov    (%edx),%edx
81007296:	89 10                	mov    %edx,(%eax)
81007298:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100729c:	76 2c                	jbe    810072ca <_realloc_r+0x643>
8100729e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072a1:	8d 42 04             	lea    0x4(%edx),%eax
810072a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072aa:	8d 48 04             	lea    0x4(%eax),%ecx
810072ad:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072b0:	8b 12                	mov    (%edx),%edx
810072b2:	89 10                	mov    %edx,(%eax)
810072b4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072b7:	8d 42 04             	lea    0x4(%edx),%eax
810072ba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072c0:	8d 48 04             	lea    0x4(%eax),%ecx
810072c3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072c6:	8b 12                	mov    (%edx),%edx
810072c8:	89 10                	mov    %edx,(%eax)
810072ca:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072cd:	8d 42 04             	lea    0x4(%edx),%eax
810072d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072d6:	8d 48 04             	lea    0x4(%eax),%ecx
810072d9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072dc:	8b 12                	mov    (%edx),%edx
810072de:	89 10                	mov    %edx,(%eax)
810072e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810072e3:	8d 42 04             	lea    0x4(%edx),%eax
810072e6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810072e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072ec:	8d 48 04             	lea    0x4(%eax),%ecx
810072ef:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810072f2:	8b 12                	mov    (%edx),%edx
810072f4:	89 10                	mov    %edx,(%eax)
810072f6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810072f9:	8b 10                	mov    (%eax),%edx
810072fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810072fe:	89 10                	mov    %edx,(%eax)
81007300:	e9 ad 01 00 00       	jmp    810074b2 <_realloc_r+0x82b>
81007305:	83 ec 04             	sub    $0x4,%esp
81007308:	ff 75 9c             	push   -0x64(%ebp)
8100730b:	ff 75 0c             	push   0xc(%ebp)
8100730e:	ff 75 a8             	push   -0x58(%ebp)
81007311:	e8 9a f7 ff ff       	call   81006ab0 <memmove>
81007316:	83 c4 10             	add    $0x10,%esp
81007319:	e9 94 01 00 00       	jmp    810074b2 <_realloc_r+0x82b>
8100731e:	83 ec 08             	sub    $0x8,%esp
81007321:	ff 75 10             	push   0x10(%ebp)
81007324:	ff 75 08             	push   0x8(%ebp)
81007327:	e8 6c c3 ff ff       	call   81003698 <_malloc_r>
8100732c:	83 c4 10             	add    $0x10,%esp
8100732f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007332:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81007336:	75 18                	jne    81007350 <_realloc_r+0x6c9>
81007338:	83 ec 0c             	sub    $0xc,%esp
8100733b:	ff 75 08             	push   0x8(%ebp)
8100733e:	e8 3b cd ff ff       	call   8100407e <__malloc_unlock>
81007343:	83 c4 10             	add    $0x10,%esp
81007346:	b8 00 00 00 00       	mov    $0x0,%eax
8100734b:	e9 0f 02 00 00       	jmp    8100755f <_realloc_r+0x8d8>
81007350:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007353:	83 e8 08             	sub    $0x8,%eax
81007356:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007359:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100735c:	8b 40 04             	mov    0x4(%eax),%eax
8100735f:	83 e0 fe             	and    $0xfffffffe,%eax
81007362:	89 c2                	mov    %eax,%edx
81007364:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007367:	01 d0                	add    %edx,%eax
81007369:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100736c:	75 17                	jne    81007385 <_realloc_r+0x6fe>
8100736e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007371:	8b 40 04             	mov    0x4(%eax),%eax
81007374:	83 e0 fc             	and    $0xfffffffc,%eax
81007377:	01 45 f0             	add    %eax,-0x10(%ebp)
8100737a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100737d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007380:	e9 2d 01 00 00       	jmp    810074b2 <_realloc_r+0x82b>
81007385:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007388:	83 e8 04             	sub    $0x4,%eax
8100738b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100738e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81007392:	0f 87 de 00 00 00    	ja     81007476 <_realloc_r+0x7ef>
81007398:	8b 45 0c             	mov    0xc(%ebp),%eax
8100739b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100739e:	8b 45 a8             	mov    -0x58(%ebp),%eax
810073a1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810073a4:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810073a8:	0f 86 90 00 00 00    	jbe    8100743e <_realloc_r+0x7b7>
810073ae:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073b1:	8d 42 04             	lea    0x4(%edx),%eax
810073b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073b7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073ba:	8d 48 04             	lea    0x4(%eax),%ecx
810073bd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073c0:	8b 12                	mov    (%edx),%edx
810073c2:	89 10                	mov    %edx,(%eax)
810073c4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073c7:	8d 42 04             	lea    0x4(%edx),%eax
810073ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073cd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073d0:	8d 48 04             	lea    0x4(%eax),%ecx
810073d3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073d6:	8b 12                	mov    (%edx),%edx
810073d8:	89 10                	mov    %edx,(%eax)
810073da:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810073de:	76 5e                	jbe    8100743e <_realloc_r+0x7b7>
810073e0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073e3:	8d 42 04             	lea    0x4(%edx),%eax
810073e6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073e9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073ec:	8d 48 04             	lea    0x4(%eax),%ecx
810073ef:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073f2:	8b 12                	mov    (%edx),%edx
810073f4:	89 10                	mov    %edx,(%eax)
810073f6:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073f9:	8d 42 04             	lea    0x4(%edx),%eax
810073fc:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073ff:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007402:	8d 48 04             	lea    0x4(%eax),%ecx
81007405:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007408:	8b 12                	mov    (%edx),%edx
8100740a:	89 10                	mov    %edx,(%eax)
8100740c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81007410:	76 2c                	jbe    8100743e <_realloc_r+0x7b7>
81007412:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007415:	8d 42 04             	lea    0x4(%edx),%eax
81007418:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100741b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100741e:	8d 48 04             	lea    0x4(%eax),%ecx
81007421:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007424:	8b 12                	mov    (%edx),%edx
81007426:	89 10                	mov    %edx,(%eax)
81007428:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100742b:	8d 42 04             	lea    0x4(%edx),%eax
8100742e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007431:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007434:	8d 48 04             	lea    0x4(%eax),%ecx
81007437:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100743a:	8b 12                	mov    (%edx),%edx
8100743c:	89 10                	mov    %edx,(%eax)
8100743e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007441:	8d 42 04             	lea    0x4(%edx),%eax
81007444:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007447:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100744a:	8d 48 04             	lea    0x4(%eax),%ecx
8100744d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007450:	8b 12                	mov    (%edx),%edx
81007452:	89 10                	mov    %edx,(%eax)
81007454:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007457:	8d 42 04             	lea    0x4(%edx),%eax
8100745a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100745d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007460:	8d 48 04             	lea    0x4(%eax),%ecx
81007463:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007466:	8b 12                	mov    (%edx),%edx
81007468:	89 10                	mov    %edx,(%eax)
8100746a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100746d:	8b 10                	mov    (%eax),%edx
8100746f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007472:	89 10                	mov    %edx,(%eax)
81007474:	eb 14                	jmp    8100748a <_realloc_r+0x803>
81007476:	83 ec 04             	sub    $0x4,%esp
81007479:	ff 75 98             	push   -0x68(%ebp)
8100747c:	ff 75 0c             	push   0xc(%ebp)
8100747f:	ff 75 a8             	push   -0x58(%ebp)
81007482:	e8 29 f6 ff ff       	call   81006ab0 <memmove>
81007487:	83 c4 10             	add    $0x10,%esp
8100748a:	83 ec 08             	sub    $0x8,%esp
8100748d:	ff 75 0c             	push   0xc(%ebp)
81007490:	ff 75 08             	push   0x8(%ebp)
81007493:	e8 3d a3 ff ff       	call   810017d5 <_free_r>
81007498:	83 c4 10             	add    $0x10,%esp
8100749b:	83 ec 0c             	sub    $0xc,%esp
8100749e:	ff 75 08             	push   0x8(%ebp)
810074a1:	e8 d8 cb ff ff       	call   8100407e <__malloc_unlock>
810074a6:	83 c4 10             	add    $0x10,%esp
810074a9:	8b 45 a8             	mov    -0x58(%ebp),%eax
810074ac:	e9 ae 00 00 00       	jmp    8100755f <_realloc_r+0x8d8>
810074b1:	90                   	nop
810074b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810074b5:	2b 45 bc             	sub    -0x44(%ebp),%eax
810074b8:	89 45 94             	mov    %eax,-0x6c(%ebp)
810074bb:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810074bf:	76 5d                	jbe    8100751e <_realloc_r+0x897>
810074c1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810074c4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810074c7:	01 d0                	add    %edx,%eax
810074c9:	89 45 90             	mov    %eax,-0x70(%ebp)
810074cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074cf:	8b 40 04             	mov    0x4(%eax),%eax
810074d2:	83 e0 01             	and    $0x1,%eax
810074d5:	0b 45 bc             	or     -0x44(%ebp),%eax
810074d8:	89 c2                	mov    %eax,%edx
810074da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074dd:	89 50 04             	mov    %edx,0x4(%eax)
810074e0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810074e3:	83 c8 01             	or     $0x1,%eax
810074e6:	89 c2                	mov    %eax,%edx
810074e8:	8b 45 90             	mov    -0x70(%ebp),%eax
810074eb:	89 50 04             	mov    %edx,0x4(%eax)
810074ee:	8b 55 90             	mov    -0x70(%ebp),%edx
810074f1:	8b 45 94             	mov    -0x6c(%ebp),%eax
810074f4:	01 d0                	add    %edx,%eax
810074f6:	8b 50 04             	mov    0x4(%eax),%edx
810074f9:	8b 4d 90             	mov    -0x70(%ebp),%ecx
810074fc:	8b 45 94             	mov    -0x6c(%ebp),%eax
810074ff:	01 c8                	add    %ecx,%eax
81007501:	83 ca 01             	or     $0x1,%edx
81007504:	89 50 04             	mov    %edx,0x4(%eax)
81007507:	8b 45 90             	mov    -0x70(%ebp),%eax
8100750a:	83 c0 08             	add    $0x8,%eax
8100750d:	83 ec 08             	sub    $0x8,%esp
81007510:	50                   	push   %eax
81007511:	ff 75 08             	push   0x8(%ebp)
81007514:	e8 bc a2 ff ff       	call   810017d5 <_free_r>
81007519:	83 c4 10             	add    $0x10,%esp
8100751c:	eb 2d                	jmp    8100754b <_realloc_r+0x8c4>
8100751e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007521:	8b 40 04             	mov    0x4(%eax),%eax
81007524:	83 e0 01             	and    $0x1,%eax
81007527:	0b 45 f0             	or     -0x10(%ebp),%eax
8100752a:	89 c2                	mov    %eax,%edx
8100752c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100752f:	89 50 04             	mov    %edx,0x4(%eax)
81007532:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007535:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007538:	01 d0                	add    %edx,%eax
8100753a:	8b 50 04             	mov    0x4(%eax),%edx
8100753d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007540:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007543:	01 c8                	add    %ecx,%eax
81007545:	83 ca 01             	or     $0x1,%edx
81007548:	89 50 04             	mov    %edx,0x4(%eax)
8100754b:	83 ec 0c             	sub    $0xc,%esp
8100754e:	ff 75 08             	push   0x8(%ebp)
81007551:	e8 28 cb ff ff       	call   8100407e <__malloc_unlock>
81007556:	83 c4 10             	add    $0x10,%esp
81007559:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100755c:	83 c0 08             	add    $0x8,%eax
8100755f:	c9                   	leave  
81007560:	c3                   	ret    

81007561 <__srget_r>:
81007561:	55                   	push   %ebp
81007562:	89 e5                	mov    %esp,%ebp
81007564:	53                   	push   %ebx
81007565:	83 ec 14             	sub    $0x14,%esp
81007568:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100756b:	8b 45 08             	mov    0x8(%ebp),%eax
8100756e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007571:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007575:	74 18                	je     8100758f <__srget_r+0x2e>
81007577:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100757a:	8b 40 38             	mov    0x38(%eax),%eax
8100757d:	85 c0                	test   %eax,%eax
8100757f:	75 0e                	jne    8100758f <__srget_r+0x2e>
81007581:	83 ec 0c             	sub    $0xc,%esp
81007584:	ff 75 f4             	push   -0xc(%ebp)
81007587:	e8 f3 9f ff ff       	call   8100157f <__sinit>
8100758c:	83 c4 10             	add    $0x10,%esp
8100758f:	83 ec 08             	sub    $0x8,%esp
81007592:	53                   	push   %ebx
81007593:	ff 75 08             	push   0x8(%ebp)
81007596:	e8 96 d9 ff ff       	call   81004f31 <__srefill_r>
8100759b:	83 c4 10             	add    $0x10,%esp
8100759e:	85 c0                	test   %eax,%eax
810075a0:	75 18                	jne    810075ba <__srget_r+0x59>
810075a2:	8b 43 04             	mov    0x4(%ebx),%eax
810075a5:	83 e8 01             	sub    $0x1,%eax
810075a8:	89 43 04             	mov    %eax,0x4(%ebx)
810075ab:	8b 03                	mov    (%ebx),%eax
810075ad:	8d 50 01             	lea    0x1(%eax),%edx
810075b0:	89 13                	mov    %edx,(%ebx)
810075b2:	0f b6 00             	movzbl (%eax),%eax
810075b5:	0f b6 c0             	movzbl %al,%eax
810075b8:	eb 05                	jmp    810075bf <__srget_r+0x5e>
810075ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810075bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810075c2:	c9                   	leave  
810075c3:	c3                   	ret    

810075c4 <__srget>:
810075c4:	55                   	push   %ebp
810075c5:	89 e5                	mov    %esp,%ebp
810075c7:	83 ec 08             	sub    $0x8,%esp
810075ca:	8b 55 08             	mov    0x8(%ebp),%edx
810075cd:	a1 84 83 00 81       	mov    0x81008384,%eax
810075d2:	83 ec 08             	sub    $0x8,%esp
810075d5:	52                   	push   %edx
810075d6:	50                   	push   %eax
810075d7:	e8 85 ff ff ff       	call   81007561 <__srget_r>
810075dc:	83 c4 10             	add    $0x10,%esp
810075df:	c9                   	leave  
810075e0:	c3                   	ret    

810075e1 <strncmp>:
810075e1:	55                   	push   %ebp
810075e2:	89 e5                	mov    %esp,%ebp
810075e4:	83 ec 10             	sub    $0x10,%esp
810075e7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810075eb:	75 0a                	jne    810075f7 <strncmp+0x16>
810075ed:	b8 00 00 00 00       	mov    $0x0,%eax
810075f2:	e9 cb 00 00 00       	jmp    810076c2 <strncmp+0xe1>
810075f7:	8b 55 08             	mov    0x8(%ebp),%edx
810075fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810075fd:	09 d0                	or     %edx,%eax
810075ff:	83 e0 03             	and    $0x3,%eax
81007602:	85 c0                	test   %eax,%eax
81007604:	0f 85 85 00 00 00    	jne    8100768f <strncmp+0xae>
8100760a:	8b 45 08             	mov    0x8(%ebp),%eax
8100760d:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007610:	8b 45 0c             	mov    0xc(%ebp),%eax
81007613:	89 45 f8             	mov    %eax,-0x8(%ebp)
81007616:	eb 36                	jmp    8100764e <strncmp+0x6d>
81007618:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
8100761c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007620:	74 1d                	je     8100763f <strncmp+0x5e>
81007622:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007625:	8b 00                	mov    (%eax),%eax
81007627:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100762d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007630:	8b 00                	mov    (%eax),%eax
81007632:	f7 d0                	not    %eax
81007634:	21 d0                	and    %edx,%eax
81007636:	25 80 80 80 80       	and    $0x80808080,%eax
8100763b:	85 c0                	test   %eax,%eax
8100763d:	74 07                	je     81007646 <strncmp+0x65>
8100763f:	b8 00 00 00 00       	mov    $0x0,%eax
81007644:	eb 7c                	jmp    810076c2 <strncmp+0xe1>
81007646:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100764a:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100764e:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81007652:	76 0e                	jbe    81007662 <strncmp+0x81>
81007654:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007657:	8b 10                	mov    (%eax),%edx
81007659:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100765c:	8b 00                	mov    (%eax),%eax
8100765e:	39 c2                	cmp    %eax,%edx
81007660:	74 b6                	je     81007618 <strncmp+0x37>
81007662:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007665:	89 45 08             	mov    %eax,0x8(%ebp)
81007668:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100766b:	89 45 0c             	mov    %eax,0xc(%ebp)
8100766e:	eb 1f                	jmp    8100768f <strncmp+0xae>
81007670:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007674:	74 0a                	je     81007680 <strncmp+0x9f>
81007676:	8b 45 08             	mov    0x8(%ebp),%eax
81007679:	0f b6 00             	movzbl (%eax),%eax
8100767c:	84 c0                	test   %al,%al
8100767e:	75 07                	jne    81007687 <strncmp+0xa6>
81007680:	b8 00 00 00 00       	mov    $0x0,%eax
81007685:	eb 3b                	jmp    810076c2 <strncmp+0xe1>
81007687:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100768b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100768f:	8b 45 10             	mov    0x10(%ebp),%eax
81007692:	8d 50 ff             	lea    -0x1(%eax),%edx
81007695:	89 55 10             	mov    %edx,0x10(%ebp)
81007698:	85 c0                	test   %eax,%eax
8100769a:	74 10                	je     810076ac <strncmp+0xcb>
8100769c:	8b 45 08             	mov    0x8(%ebp),%eax
8100769f:	0f b6 10             	movzbl (%eax),%edx
810076a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810076a5:	0f b6 00             	movzbl (%eax),%eax
810076a8:	38 c2                	cmp    %al,%dl
810076aa:	74 c4                	je     81007670 <strncmp+0x8f>
810076ac:	8b 45 08             	mov    0x8(%ebp),%eax
810076af:	0f b6 00             	movzbl (%eax),%eax
810076b2:	0f b6 d0             	movzbl %al,%edx
810076b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810076b8:	0f b6 00             	movzbl (%eax),%eax
810076bb:	0f b6 c8             	movzbl %al,%ecx
810076be:	89 d0                	mov    %edx,%eax
810076c0:	29 c8                	sub    %ecx,%eax
810076c2:	c9                   	leave  
810076c3:	c3                   	ret    

810076c4 <__get_global_locale>:
810076c4:	55                   	push   %ebp
810076c5:	89 e5                	mov    %esp,%ebp
810076c7:	b8 c0 87 00 81       	mov    $0x810087c0,%eax
810076cc:	5d                   	pop    %ebp
810076cd:	c3                   	ret    

810076ce <__get_current_locale>:
810076ce:	55                   	push   %ebp
810076cf:	89 e5                	mov    %esp,%ebp
810076d1:	e8 ee ff ff ff       	call   810076c4 <__get_global_locale>
810076d6:	5d                   	pop    %ebp
810076d7:	c3                   	ret    

810076d8 <_wcrtomb_r>:
810076d8:	55                   	push   %ebp
810076d9:	89 e5                	mov    %esp,%ebp
810076db:	83 ec 18             	sub    $0x18,%esp
810076de:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810076e5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810076e9:	75 21                	jne    8100770c <_wcrtomb_r+0x34>
810076eb:	e8 de ff ff ff       	call   810076ce <__get_current_locale>
810076f0:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810076f6:	ff 75 14             	push   0x14(%ebp)
810076f9:	6a 00                	push   $0x0
810076fb:	8d 55 ea             	lea    -0x16(%ebp),%edx
810076fe:	52                   	push   %edx
810076ff:	ff 75 08             	push   0x8(%ebp)
81007702:	ff d0                	call   *%eax
81007704:	83 c4 10             	add    $0x10,%esp
81007707:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100770a:	eb 1f                	jmp    8100772b <_wcrtomb_r+0x53>
8100770c:	e8 bd ff ff ff       	call   810076ce <__get_current_locale>
81007711:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007717:	ff 75 14             	push   0x14(%ebp)
8100771a:	ff 75 10             	push   0x10(%ebp)
8100771d:	ff 75 0c             	push   0xc(%ebp)
81007720:	ff 75 08             	push   0x8(%ebp)
81007723:	ff d0                	call   *%eax
81007725:	83 c4 10             	add    $0x10,%esp
81007728:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100772b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100772f:	75 19                	jne    8100774a <_wcrtomb_r+0x72>
81007731:	8b 45 14             	mov    0x14(%ebp),%eax
81007734:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100773a:	8b 45 08             	mov    0x8(%ebp),%eax
8100773d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007743:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007748:	eb 03                	jmp    8100774d <_wcrtomb_r+0x75>
8100774a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100774d:	c9                   	leave  
8100774e:	c3                   	ret    

8100774f <wcrtomb>:
8100774f:	55                   	push   %ebp
81007750:	89 e5                	mov    %esp,%ebp
81007752:	83 ec 28             	sub    $0x28,%esp
81007755:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100775c:	a1 84 83 00 81       	mov    0x81008384,%eax
81007761:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007764:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007768:	75 21                	jne    8100778b <wcrtomb+0x3c>
8100776a:	e8 5f ff ff ff       	call   810076ce <__get_current_locale>
8100776f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007775:	ff 75 10             	push   0x10(%ebp)
81007778:	6a 00                	push   $0x0
8100777a:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100777d:	52                   	push   %edx
8100777e:	ff 75 f0             	push   -0x10(%ebp)
81007781:	ff d0                	call   *%eax
81007783:	83 c4 10             	add    $0x10,%esp
81007786:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007789:	eb 1f                	jmp    810077aa <wcrtomb+0x5b>
8100778b:	e8 3e ff ff ff       	call   810076ce <__get_current_locale>
81007790:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007796:	ff 75 10             	push   0x10(%ebp)
81007799:	ff 75 0c             	push   0xc(%ebp)
8100779c:	ff 75 08             	push   0x8(%ebp)
8100779f:	ff 75 f0             	push   -0x10(%ebp)
810077a2:	ff d0                	call   *%eax
810077a4:	83 c4 10             	add    $0x10,%esp
810077a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810077aa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810077ae:	75 19                	jne    810077c9 <wcrtomb+0x7a>
810077b0:	8b 45 10             	mov    0x10(%ebp),%eax
810077b3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810077b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810077bc:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810077c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810077c7:	eb 03                	jmp    810077cc <wcrtomb+0x7d>
810077c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810077cc:	c9                   	leave  
810077cd:	c3                   	ret    

810077ce <__get_global_locale>:
810077ce:	55                   	push   %ebp
810077cf:	89 e5                	mov    %esp,%ebp
810077d1:	b8 c0 87 00 81       	mov    $0x810087c0,%eax
810077d6:	5d                   	pop    %ebp
810077d7:	c3                   	ret    

810077d8 <__get_current_locale>:
810077d8:	55                   	push   %ebp
810077d9:	89 e5                	mov    %esp,%ebp
810077db:	e8 ee ff ff ff       	call   810077ce <__get_global_locale>
810077e0:	5d                   	pop    %ebp
810077e1:	c3                   	ret    

810077e2 <_wctomb_r>:
810077e2:	55                   	push   %ebp
810077e3:	89 e5                	mov    %esp,%ebp
810077e5:	83 ec 08             	sub    $0x8,%esp
810077e8:	e8 eb ff ff ff       	call   810077d8 <__get_current_locale>
810077ed:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810077f3:	ff 75 14             	push   0x14(%ebp)
810077f6:	ff 75 10             	push   0x10(%ebp)
810077f9:	ff 75 0c             	push   0xc(%ebp)
810077fc:	ff 75 08             	push   0x8(%ebp)
810077ff:	ff d0                	call   *%eax
81007801:	83 c4 10             	add    $0x10,%esp
81007804:	c9                   	leave  
81007805:	c3                   	ret    

81007806 <__ascii_wctomb>:
81007806:	55                   	push   %ebp
81007807:	89 e5                	mov    %esp,%ebp
81007809:	83 ec 10             	sub    $0x10,%esp
8100780c:	8b 45 10             	mov    0x10(%ebp),%eax
8100780f:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007812:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007816:	75 07                	jne    8100781f <__ascii_wctomb+0x19>
81007818:	b8 00 00 00 00       	mov    $0x0,%eax
8100781d:	eb 28                	jmp    81007847 <__ascii_wctomb+0x41>
8100781f:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81007826:	76 10                	jbe    81007838 <__ascii_wctomb+0x32>
81007828:	8b 45 08             	mov    0x8(%ebp),%eax
8100782b:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007831:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007836:	eb 0f                	jmp    81007847 <__ascii_wctomb+0x41>
81007838:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100783b:	89 c2                	mov    %eax,%edx
8100783d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007840:	88 10                	mov    %dl,(%eax)
81007842:	b8 01 00 00 00       	mov    $0x1,%eax
81007847:	c9                   	leave  
81007848:	c3                   	ret    

81007849 <__env_lock>:
81007849:	55                   	push   %ebp
8100784a:	89 e5                	mov    %esp,%ebp
8100784c:	90                   	nop
8100784d:	5d                   	pop    %ebp
8100784e:	c3                   	ret    

8100784f <__env_unlock>:
8100784f:	55                   	push   %ebp
81007850:	89 e5                	mov    %esp,%ebp
81007852:	90                   	nop
81007853:	5d                   	pop    %ebp
81007854:	c3                   	ret    
