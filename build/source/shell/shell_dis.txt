
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810000d3

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00003d10 memsz 0x00003d90 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003461  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000054  81003464  81003464  00004464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  810034c0  810034c0  000044c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000070  81003d20  81003d20  00004d10  2**5
                  ALLOC
  4 .debug_info   0000e9da  00000000  00000000  00004d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00003580  00000000  00000000  000136ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000003d8  00000000  00000000  00016c70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000022f6  00000000  00000000  00017048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000da5  00000000  00000000  0001933e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000009d6  00000000  00000000  0001a0e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0001aab9  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000ad8  00000000  00000000  0001aaf8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000022  00000000  00000000  0001b5d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000496 l       .text	00000000 L5
810004ce l       .text	00000000 L15
810004a0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810004d9 l     F .text	000000ad std
81000586 l     F .text	0000001b stdin_init
810005a1 l     F .text	0000001b stdout_init
810005bc l     F .text	0000001b stderr_init
81003d20 l     O .bss	00000004 __sfp_recursive_mutex
81003d24 l     O .bss	00000004 __sinit_recursive_mutex
8100087f l     F .text	0000000a __fp_lock
81000889 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
810034c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000e4c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100199d l       .text	00000000 L20
81001954 l       .text	00000000 L5
8100199a l       .text	00000000 L15
81001960 l       .text	00000000 L8
81001981 l       .text	00000000 L9
81001990 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81003d88 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81003421 g     F .text	00000040 _isatty_r
81003247 g     F .text	00000037 cleanup_glue
8100036c g     F .text	000000d6 _puts_r
8100303b g     F .text	00000046 _lseek_r
81000219 g     F .text	0000001b yield
810024d4 g     F .text	0000004a __sseek
810007ce g     F .text	00000099 __sinit
810005d7 g     F .text	0000006f __sfmoreglue
81001b0b g     F .text	00000006 __malloc_unlock
810019f0 g       .text	00000000 memmove
810007b4 g     F .text	0000001a _cleanup
810033de g     F .text	00000043 _fstat_r
81003d8c g     O .bss	00000004 errno
8100246f g     F .text	0000000a __seofread
810001ec g     F .text	0000002d execve
8100018e g     F .text	0000001b getpid
810019a8 g       .text	00000000 memcpy
81000793 g     F .text	00000021 _cleanup_r
81000442 g     F .text	0000001c puts
81000303 g     F .text	00000021 isatty
81003d40 g     O .bss	00000004 __malloc_top_pad
81003d20 g       .bss	00000000 __bss_start__
810008db g     F .text	0000049e __sfvwrite_r
810023eb g     F .text	00000040 _sbrk_r
81003201 g     F .text	00000046 _read_r
81002724 g     F .text	00000107 _fclose_r
81002ac6 g     F .text	00000039 fflush
81003d44 g     O .bss	00000004 __malloc_max_sbrked_mem
810002d6 g     F .text	0000002d lseek
810034b4 g     O .rodata	00000004 _global_impure_ptr
81001b11 g     F .text	000008da _realloc_r
81000893 g     F .text	00000024 __fp_lock_all
8100327e g     F .text	00000160 _reclaim_reent
81000288 g     F .text	0000002d write
81000324 g     F .text	00000027 fstat
81000118 g     F .text	0000004c sys_call
81000867 g     F .text	00000006 __sfp_lock_acquire
81001910 g       .text	00000000 memchr
81003d90 g       .bss	00000000 __bss_end__
81002aff g     F .text	000003db _free_r
81003d0c g     O .data	00000004 __malloc_sbrk_base
810000d3 g       .text	00000000 _start
8100025b g     F .text	0000002d read
81003d60 g     O .bss	00000028 __malloc_current_mallinfo
810026e4 g     F .text	00000040 _close_r
810001d1 g     F .text	0000001b fork
81002589 g     F .text	0000015b __swsetup_r
81000646 g     F .text	0000014d __sfp
81003900 g     O .data	00000408 __malloc_av_
81000879 g     F .text	00000006 __sinit_lock_release
8100242b g     F .text	00000044 __sread
81001b05 g     F .text	00000006 __malloc_lock
8100034b g     F .text	00000021 sbrk
81002a6e g     F .text	00000058 _fflush_r
810000e3 g     F .text	00000035 cstart
81001a7d g       .text	00000000 memset
81000000 g     F .text	000000d3 main
81003d48 g     O .bss	00000004 __malloc_max_total_mem
8100251e g     F .text	00000025 __sclose
8100282b g     F .text	0000001d fclose
810010df g     F .text	00000822 _malloc_r
81000d79 g     F .text	00000068 _fwalk
81002eda g     F .text	00000161 _malloc_trim_r
81002543 g     F .text	00000046 _write_r
810038e4 g     O .data	00000004 _impure_ptr
81002848 g     F .text	00000226 __sflush_r
810008b7 g     F .text	00000024 __fp_unlock_all
810001a9 g     F .text	00000028 print_msg
8100316e g     F .text	00000093 __swhatbuf_r
81002479 g     F .text	0000005b __swrite
81003d08 g     O .data	00000004 __malloc_trim_threshold
81000de1 g     F .text	0000006b _fwalk_reent
8100086d g     F .text	00000006 __sfp_lock_release
81003081 g     F .text	000000ed __smakebuf_r
81000460 g       .text	00000000 strlen
81000234 g     F .text	00000027 open
81000164 g     F .text	0000002a msleep
810002b5 g     F .text	00000021 close
81000873 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    printf("hello from shell\n");
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	68 64 34 00 81       	push   $0x81003464
8100001c:	e8 21 04 00 00       	call   81000442 <puts>
81000021:	83 c4 10             	add    $0x10,%esp

    print_msg("main pid %d", getpid());
81000024:	e8 65 01 00 00       	call   8100018e <getpid>
81000029:	83 ec 08             	sub    $0x8,%esp
8100002c:	50                   	push   %eax
8100002d:	68 75 34 00 81       	push   $0x81003475
81000032:	e8 72 01 00 00       	call   810001a9 <print_msg>
81000037:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
8100003a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000041:	eb 26                	jmp    81000069 <main+0x69>
        print_msg("arg: %s", argv[i]);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100004d:	8b 43 04             	mov    0x4(%ebx),%eax
81000050:	01 d0                	add    %edx,%eax
81000052:	8b 00                	mov    (%eax),%eax
81000054:	83 ec 08             	sub    $0x8,%esp
81000057:	50                   	push   %eax
81000058:	68 81 34 00 81       	push   $0x81003481
8100005d:	e8 47 01 00 00       	call   810001a9 <print_msg>
81000062:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000065:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000069:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100006c:	3b 03                	cmp    (%ebx),%eax
8100006e:	7c d3                	jl     81000043 <main+0x43>
    }

    int pid = fork();
81000070:	e8 5c 01 00 00       	call   810001d1 <fork>
81000075:	89 45 f0             	mov    %eax,-0x10(%ebp)
    yield();
81000078:	e8 9c 01 00 00       	call   81000219 <yield>
    if (pid > 0) print_msg("parent pid=%d", pid);
8100007d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000081:	7e 15                	jle    81000098 <main+0x98>
81000083:	83 ec 08             	sub    $0x8,%esp
81000086:	ff 75 f0             	push   -0x10(%ebp)
81000089:	68 89 34 00 81       	push   $0x81003489
8100008e:	e8 16 01 00 00       	call   810001a9 <print_msg>
81000093:	83 c4 10             	add    $0x10,%esp
81000096:	eb 13                	jmp    810000ab <main+0xab>
    else print_msg("chiled pid=%d", pid);
81000098:	83 ec 08             	sub    $0x8,%esp
8100009b:	ff 75 f0             	push   -0x10(%ebp)
8100009e:	68 97 34 00 81       	push   $0x81003497
810000a3:	e8 01 01 00 00       	call   810001a9 <print_msg>
810000a8:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        print_msg("shell pid=%d", getpid());
810000ab:	e8 de 00 00 00       	call   8100018e <getpid>
810000b0:	83 ec 08             	sub    $0x8,%esp
810000b3:	50                   	push   %eax
810000b4:	68 a5 34 00 81       	push   $0x810034a5
810000b9:	e8 eb 00 00 00       	call   810001a9 <print_msg>
810000be:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
810000c1:	83 ec 0c             	sub    $0xc,%esp
810000c4:	68 e8 03 00 00       	push   $0x3e8
810000c9:	e8 96 00 00 00       	call   81000164 <msleep>
810000ce:	83 c4 10             	add    $0x10,%esp
        print_msg("shell pid=%d", getpid());
810000d1:	eb d8                	jmp    810000ab <main+0xab>

810000d3 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810000d3:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810000d6:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810000d8:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810000da:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810000dc:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810000de:	e9 00 00 00 00       	jmp    810000e3 <cstart>

810000e3 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810000e3:	55                   	push   %ebp
810000e4:	89 e5                	mov    %esp,%ebp
810000e6:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810000e9:	c7 45 f4 20 3d 00 81 	movl   $0x81003d20,-0xc(%ebp)
    while (start < __bss_end__) {
810000f0:	eb 09                	jmp    810000fb <cstart+0x18>
        *(start++);
810000f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000f5:	83 c0 01             	add    $0x1,%eax
810000f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < __bss_end__) {
810000fb:	81 7d f4 90 3d 00 81 	cmpl   $0x81003d90,-0xc(%ebp)
81000102:	72 ee                	jb     810000f2 <cstart+0xf>
    }
    
    main(argc, argv);
81000104:	83 ec 08             	sub    $0x8,%esp
81000107:	ff 75 0c             	push   0xc(%ebp)
8100010a:	ff 75 08             	push   0x8(%ebp)
8100010d:	e8 ee fe ff ff       	call   81000000 <main>
81000112:	83 c4 10             	add    $0x10,%esp
}
81000115:	90                   	nop
81000116:	c9                   	leave  
81000117:	c3                   	ret    

81000118 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
81000118:	55                   	push   %ebp
81000119:	89 e5                	mov    %esp,%ebp
8100011b:	57                   	push   %edi
8100011c:	56                   	push   %esi
8100011d:	53                   	push   %ebx
8100011e:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000121:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000128:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
8100012f:	8b 45 08             	mov    0x8(%ebp),%eax
81000132:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000135:	8b 55 08             	mov    0x8(%ebp),%edx
81000138:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
8100013b:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100013e:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000141:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000144:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000147:	8b 75 08             	mov    0x8(%ebp),%esi
8100014a:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
8100014c:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100014f:	50                   	push   %eax
81000150:	52                   	push   %edx
81000151:	51                   	push   %ecx
81000152:	53                   	push   %ebx
81000153:	56                   	push   %esi
81000154:	ff 1f                	lcall  *(%edi)
81000156:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000159:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100015c:	83 c4 10             	add    $0x10,%esp
8100015f:	5b                   	pop    %ebx
81000160:	5e                   	pop    %esi
81000161:	5f                   	pop    %edi
81000162:	5d                   	pop    %ebp
81000163:	c3                   	ret    

81000164 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000164:	55                   	push   %ebp
81000165:	89 e5                	mov    %esp,%ebp
81000167:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100016a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100016e:	7e 1b                	jle    8100018b <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000170:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000177:	8b 45 08             	mov    0x8(%ebp),%eax
8100017a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100017d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000180:	50                   	push   %eax
81000181:	e8 92 ff ff ff       	call   81000118 <sys_call>
81000186:	83 c4 04             	add    $0x4,%esp
81000189:	eb 01                	jmp    8100018c <msleep+0x28>
    if (ms <= 0) return;
8100018b:	90                   	nop

}
8100018c:	c9                   	leave  
8100018d:	c3                   	ret    

8100018e <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100018e:	55                   	push   %ebp
8100018f:	89 e5                	mov    %esp,%ebp
81000191:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000194:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100019b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100019e:	50                   	push   %eax
8100019f:	e8 74 ff ff ff       	call   81000118 <sys_call>
810001a4:	83 c4 04             	add    $0x4,%esp
}
810001a7:	c9                   	leave  
810001a8:	c3                   	ret    

810001a9 <print_msg>:

void print_msg(const char *fmt, int arg) {
810001a9:	55                   	push   %ebp
810001aa:	89 e5                	mov    %esp,%ebp
810001ac:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
810001af:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
810001b6:	8b 45 08             	mov    0x8(%ebp),%eax
810001b9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810001bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810001bf:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810001c2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001c5:	50                   	push   %eax
810001c6:	e8 4d ff ff ff       	call   81000118 <sys_call>
810001cb:	83 c4 04             	add    $0x4,%esp
}
810001ce:	90                   	nop
810001cf:	c9                   	leave  
810001d0:	c3                   	ret    

810001d1 <fork>:

int fork (void) {
810001d1:	55                   	push   %ebp
810001d2:	89 e5                	mov    %esp,%ebp
810001d4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810001d7:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810001de:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001e1:	50                   	push   %eax
810001e2:	e8 31 ff ff ff       	call   81000118 <sys_call>
810001e7:	83 c4 04             	add    $0x4,%esp
}
810001ea:	c9                   	leave  
810001eb:	c3                   	ret    

810001ec <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810001ec:	55                   	push   %ebp
810001ed:	89 e5                	mov    %esp,%ebp
810001ef:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810001f2:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810001f9:	8b 45 08             	mov    0x8(%ebp),%eax
810001fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810001ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81000202:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000205:	8b 45 10             	mov    0x10(%ebp),%eax
81000208:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
8100020b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100020e:	50                   	push   %eax
8100020f:	e8 04 ff ff ff       	call   81000118 <sys_call>
81000214:	83 c4 04             	add    $0x4,%esp
}
81000217:	c9                   	leave  
81000218:	c3                   	ret    

81000219 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000219:	55                   	push   %ebp
8100021a:	89 e5                	mov    %esp,%ebp
8100021c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
8100021f:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000226:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000229:	50                   	push   %eax
8100022a:	e8 e9 fe ff ff       	call   81000118 <sys_call>
8100022f:	83 c4 04             	add    $0x4,%esp
}
81000232:	c9                   	leave  
81000233:	c3                   	ret    

81000234 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000234:	55                   	push   %ebp
81000235:	89 e5                	mov    %esp,%ebp
81000237:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100023a:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000241:	8b 45 08             	mov    0x8(%ebp),%eax
81000244:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000247:	8b 45 0c             	mov    0xc(%ebp),%eax
8100024a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100024d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000250:	50                   	push   %eax
81000251:	e8 c2 fe ff ff       	call   81000118 <sys_call>
81000256:	83 c4 04             	add    $0x4,%esp
}
81000259:	c9                   	leave  
8100025a:	c3                   	ret    

8100025b <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
8100025b:	55                   	push   %ebp
8100025c:	89 e5                	mov    %esp,%ebp
8100025e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000261:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000268:	8b 45 08             	mov    0x8(%ebp),%eax
8100026b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100026e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000271:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000274:	8b 45 10             	mov    0x10(%ebp),%eax
81000277:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100027a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100027d:	50                   	push   %eax
8100027e:	e8 95 fe ff ff       	call   81000118 <sys_call>
81000283:	83 c4 04             	add    $0x4,%esp
}
81000286:	c9                   	leave  
81000287:	c3                   	ret    

81000288 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000288:	55                   	push   %ebp
81000289:	89 e5                	mov    %esp,%ebp
8100028b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100028e:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000295:	8b 45 08             	mov    0x8(%ebp),%eax
81000298:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100029b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100029e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810002a1:	8b 45 10             	mov    0x10(%ebp),%eax
810002a4:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810002a7:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002aa:	50                   	push   %eax
810002ab:	e8 68 fe ff ff       	call   81000118 <sys_call>
810002b0:	83 c4 04             	add    $0x4,%esp
}
810002b3:	c9                   	leave  
810002b4:	c3                   	ret    

810002b5 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
810002b5:	55                   	push   %ebp
810002b6:	89 e5                	mov    %esp,%ebp
810002b8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
810002bb:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
810002c2:	8b 45 08             	mov    0x8(%ebp),%eax
810002c5:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810002c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002cb:	50                   	push   %eax
810002cc:	e8 47 fe ff ff       	call   81000118 <sys_call>
810002d1:	83 c4 04             	add    $0x4,%esp
}
810002d4:	c9                   	leave  
810002d5:	c3                   	ret    

810002d6 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810002d6:	55                   	push   %ebp
810002d7:	89 e5                	mov    %esp,%ebp
810002d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810002dc:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810002e3:	8b 45 08             	mov    0x8(%ebp),%eax
810002e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810002e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810002ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810002ef:	8b 45 10             	mov    0x10(%ebp),%eax
810002f2:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810002f5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002f8:	50                   	push   %eax
810002f9:	e8 1a fe ff ff       	call   81000118 <sys_call>
810002fe:	83 c4 04             	add    $0x4,%esp
}
81000301:	c9                   	leave  
81000302:	c3                   	ret    

81000303 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000303:	55                   	push   %ebp
81000304:	89 e5                	mov    %esp,%ebp
81000306:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000309:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000310:	8b 45 08             	mov    0x8(%ebp),%eax
81000313:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000316:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000319:	50                   	push   %eax
8100031a:	e8 f9 fd ff ff       	call   81000118 <sys_call>
8100031f:	83 c4 04             	add    $0x4,%esp
}
81000322:	c9                   	leave  
81000323:	c3                   	ret    

81000324 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000324:	55                   	push   %ebp
81000325:	89 e5                	mov    %esp,%ebp
81000327:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100032a:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000331:	8b 45 08             	mov    0x8(%ebp),%eax
81000334:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000337:	8b 45 0c             	mov    0xc(%ebp),%eax
8100033a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100033d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000340:	50                   	push   %eax
81000341:	e8 d2 fd ff ff       	call   81000118 <sys_call>
81000346:	83 c4 04             	add    $0x4,%esp
}
81000349:	c9                   	leave  
8100034a:	c3                   	ret    

8100034b <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
8100034b:	55                   	push   %ebp
8100034c:	89 e5                	mov    %esp,%ebp
8100034e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000351:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000358:	8b 45 08             	mov    0x8(%ebp),%eax
8100035b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100035e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000361:	50                   	push   %eax
81000362:	e8 b1 fd ff ff       	call   81000118 <sys_call>
81000367:	83 c4 04             	add    $0x4,%esp
8100036a:	c9                   	leave  
8100036b:	c3                   	ret    

8100036c <_puts_r>:
8100036c:	55                   	push   %ebp
8100036d:	89 e5                	mov    %esp,%ebp
8100036f:	83 ec 38             	sub    $0x38,%esp
81000372:	83 ec 0c             	sub    $0xc,%esp
81000375:	ff 75 0c             	push   0xc(%ebp)
81000378:	e8 e3 00 00 00       	call   81000460 <strlen>
8100037d:	83 c4 10             	add    $0x10,%esp
81000380:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000383:	8b 45 0c             	mov    0xc(%ebp),%eax
81000386:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000389:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100038c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100038f:	c7 45 d4 b2 34 00 81 	movl   $0x810034b2,-0x2c(%ebp)
81000396:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100039d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003a0:	83 c0 01             	add    $0x1,%eax
810003a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810003a6:	8d 45 cc             	lea    -0x34(%ebp),%eax
810003a9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810003ac:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810003b3:	8b 45 08             	mov    0x8(%ebp),%eax
810003b6:	8b 40 08             	mov    0x8(%eax),%eax
810003b9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003bc:	8b 45 08             	mov    0x8(%ebp),%eax
810003bf:	89 45 ec             	mov    %eax,-0x14(%ebp)
810003c2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003c6:	74 18                	je     810003e0 <_puts_r+0x74>
810003c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810003cb:	8b 40 38             	mov    0x38(%eax),%eax
810003ce:	85 c0                	test   %eax,%eax
810003d0:	75 0e                	jne    810003e0 <_puts_r+0x74>
810003d2:	83 ec 0c             	sub    $0xc,%esp
810003d5:	ff 75 ec             	push   -0x14(%ebp)
810003d8:	e8 f1 03 00 00       	call   810007ce <__sinit>
810003dd:	83 c4 10             	add    $0x10,%esp
810003e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003e3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003e7:	98                   	cwtl   
810003e8:	25 00 20 00 00       	and    $0x2000,%eax
810003ed:	85 c0                	test   %eax,%eax
810003ef:	75 24                	jne    81000415 <_puts_r+0xa9>
810003f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003f4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003f8:	80 cc 20             	or     $0x20,%ah
810003fb:	89 c2                	mov    %eax,%edx
810003fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000400:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000404:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000407:	8b 40 64             	mov    0x64(%eax),%eax
8100040a:	80 e4 df             	and    $0xdf,%ah
8100040d:	89 c2                	mov    %eax,%edx
8100040f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000412:	89 50 64             	mov    %edx,0x64(%eax)
81000415:	83 ec 04             	sub    $0x4,%esp
81000418:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100041b:	50                   	push   %eax
8100041c:	ff 75 f0             	push   -0x10(%ebp)
8100041f:	ff 75 08             	push   0x8(%ebp)
81000422:	e8 b4 04 00 00       	call   810008db <__sfvwrite_r>
81000427:	83 c4 10             	add    $0x10,%esp
8100042a:	85 c0                	test   %eax,%eax
8100042c:	74 07                	je     81000435 <_puts_r+0xc9>
8100042e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000433:	eb 05                	jmp    8100043a <_puts_r+0xce>
81000435:	b8 0a 00 00 00       	mov    $0xa,%eax
8100043a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100043d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000440:	c9                   	leave  
81000441:	c3                   	ret    

81000442 <puts>:
81000442:	55                   	push   %ebp
81000443:	89 e5                	mov    %esp,%ebp
81000445:	83 ec 08             	sub    $0x8,%esp
81000448:	a1 e4 38 00 81       	mov    0x810038e4,%eax
8100044d:	83 ec 08             	sub    $0x8,%esp
81000450:	ff 75 08             	push   0x8(%ebp)
81000453:	50                   	push   %eax
81000454:	e8 13 ff ff ff       	call   8100036c <_puts_r>
81000459:	83 c4 10             	add    $0x10,%esp
8100045c:	c9                   	leave  
8100045d:	c3                   	ret    
8100045e:	66 90                	xchg   %ax,%ax

81000460 <strlen>:
81000460:	55                   	push   %ebp
81000461:	89 e5                	mov    %esp,%ebp
81000463:	57                   	push   %edi
81000464:	8b 55 08             	mov    0x8(%ebp),%edx
81000467:	89 d7                	mov    %edx,%edi
81000469:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100046f:	74 25                	je     81000496 <L5>
81000471:	8a 0f                	mov    (%edi),%cl
81000473:	47                   	inc    %edi
81000474:	84 c9                	test   %cl,%cl
81000476:	74 56                	je     810004ce <L15>
81000478:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100047e:	74 16                	je     81000496 <L5>
81000480:	8a 0f                	mov    (%edi),%cl
81000482:	47                   	inc    %edi
81000483:	84 c9                	test   %cl,%cl
81000485:	74 47                	je     810004ce <L15>
81000487:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100048d:	74 07                	je     81000496 <L5>
8100048f:	8a 0f                	mov    (%edi),%cl
81000491:	47                   	inc    %edi
81000492:	84 c9                	test   %cl,%cl
81000494:	74 38                	je     810004ce <L15>

81000496 <L5>:
81000496:	83 ef 04             	sub    $0x4,%edi
81000499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810004a0 <L10>:
810004a0:	83 c7 04             	add    $0x4,%edi
810004a3:	8b 0f                	mov    (%edi),%ecx
810004a5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810004ab:	f7 d1                	not    %ecx
810004ad:	21 c8                	and    %ecx,%eax
810004af:	a9 80 80 80 80       	test   $0x80808080,%eax
810004b4:	74 ea                	je     810004a0 <L10>
810004b6:	f7 d1                	not    %ecx
810004b8:	47                   	inc    %edi
810004b9:	84 c9                	test   %cl,%cl
810004bb:	74 11                	je     810004ce <L15>
810004bd:	47                   	inc    %edi
810004be:	c1 e9 08             	shr    $0x8,%ecx
810004c1:	84 c9                	test   %cl,%cl
810004c3:	74 09                	je     810004ce <L15>
810004c5:	47                   	inc    %edi
810004c6:	c1 e9 08             	shr    $0x8,%ecx
810004c9:	84 c9                	test   %cl,%cl
810004cb:	74 01                	je     810004ce <L15>
810004cd:	47                   	inc    %edi

810004ce <L15>:
810004ce:	29 d7                	sub    %edx,%edi
810004d0:	8d 47 ff             	lea    -0x1(%edi),%eax
810004d3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810004d6:	5f                   	pop    %edi
810004d7:	c9                   	leave  
810004d8:	c3                   	ret    

810004d9 <std>:
810004d9:	55                   	push   %ebp
810004da:	89 e5                	mov    %esp,%ebp
810004dc:	83 ec 08             	sub    $0x8,%esp
810004df:	8b 45 08             	mov    0x8(%ebp),%eax
810004e2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810004e8:	8b 45 08             	mov    0x8(%ebp),%eax
810004eb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810004f2:	8b 45 08             	mov    0x8(%ebp),%eax
810004f5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810004fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810004ff:	89 c2                	mov    %eax,%edx
81000501:	8b 45 08             	mov    0x8(%ebp),%eax
81000504:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000508:	8b 45 08             	mov    0x8(%ebp),%eax
8100050b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000512:	8b 45 10             	mov    0x10(%ebp),%eax
81000515:	89 c2                	mov    %eax,%edx
81000517:	8b 45 08             	mov    0x8(%ebp),%eax
8100051a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100051e:	8b 45 08             	mov    0x8(%ebp),%eax
81000521:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000528:	8b 45 08             	mov    0x8(%ebp),%eax
8100052b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000532:	8b 45 08             	mov    0x8(%ebp),%eax
81000535:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100053c:	8b 45 08             	mov    0x8(%ebp),%eax
8100053f:	83 c0 5c             	add    $0x5c,%eax
81000542:	83 ec 04             	sub    $0x4,%esp
81000545:	6a 08                	push   $0x8
81000547:	6a 00                	push   $0x0
81000549:	50                   	push   %eax
8100054a:	e8 2e 15 00 00       	call   81001a7d <memset>
8100054f:	83 c4 10             	add    $0x10,%esp
81000552:	8b 45 08             	mov    0x8(%ebp),%eax
81000555:	8b 55 08             	mov    0x8(%ebp),%edx
81000558:	89 50 1c             	mov    %edx,0x1c(%eax)
8100055b:	8b 45 08             	mov    0x8(%ebp),%eax
8100055e:	c7 40 20 2b 24 00 81 	movl   $0x8100242b,0x20(%eax)
81000565:	8b 45 08             	mov    0x8(%ebp),%eax
81000568:	c7 40 24 79 24 00 81 	movl   $0x81002479,0x24(%eax)
8100056f:	8b 45 08             	mov    0x8(%ebp),%eax
81000572:	c7 40 28 d4 24 00 81 	movl   $0x810024d4,0x28(%eax)
81000579:	8b 45 08             	mov    0x8(%ebp),%eax
8100057c:	c7 40 2c 1e 25 00 81 	movl   $0x8100251e,0x2c(%eax)
81000583:	90                   	nop
81000584:	c9                   	leave  
81000585:	c3                   	ret    

81000586 <stdin_init>:
81000586:	55                   	push   %ebp
81000587:	89 e5                	mov    %esp,%ebp
81000589:	83 ec 08             	sub    $0x8,%esp
8100058c:	83 ec 04             	sub    $0x4,%esp
8100058f:	6a 00                	push   $0x0
81000591:	6a 04                	push   $0x4
81000593:	ff 75 08             	push   0x8(%ebp)
81000596:	e8 3e ff ff ff       	call   810004d9 <std>
8100059b:	83 c4 10             	add    $0x10,%esp
8100059e:	90                   	nop
8100059f:	c9                   	leave  
810005a0:	c3                   	ret    

810005a1 <stdout_init>:
810005a1:	55                   	push   %ebp
810005a2:	89 e5                	mov    %esp,%ebp
810005a4:	83 ec 08             	sub    $0x8,%esp
810005a7:	83 ec 04             	sub    $0x4,%esp
810005aa:	6a 01                	push   $0x1
810005ac:	6a 09                	push   $0x9
810005ae:	ff 75 08             	push   0x8(%ebp)
810005b1:	e8 23 ff ff ff       	call   810004d9 <std>
810005b6:	83 c4 10             	add    $0x10,%esp
810005b9:	90                   	nop
810005ba:	c9                   	leave  
810005bb:	c3                   	ret    

810005bc <stderr_init>:
810005bc:	55                   	push   %ebp
810005bd:	89 e5                	mov    %esp,%ebp
810005bf:	83 ec 08             	sub    $0x8,%esp
810005c2:	83 ec 04             	sub    $0x4,%esp
810005c5:	6a 02                	push   $0x2
810005c7:	6a 12                	push   $0x12
810005c9:	ff 75 08             	push   0x8(%ebp)
810005cc:	e8 08 ff ff ff       	call   810004d9 <std>
810005d1:	83 c4 10             	add    $0x10,%esp
810005d4:	90                   	nop
810005d5:	c9                   	leave  
810005d6:	c3                   	ret    

810005d7 <__sfmoreglue>:
810005d7:	55                   	push   %ebp
810005d8:	89 e5                	mov    %esp,%ebp
810005da:	53                   	push   %ebx
810005db:	83 ec 14             	sub    $0x14,%esp
810005de:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810005e1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810005e4:	6b c0 68             	imul   $0x68,%eax,%eax
810005e7:	83 c0 74             	add    $0x74,%eax
810005ea:	83 ec 08             	sub    $0x8,%esp
810005ed:	50                   	push   %eax
810005ee:	ff 75 08             	push   0x8(%ebp)
810005f1:	e8 e9 0a 00 00       	call   810010df <_malloc_r>
810005f6:	83 c4 10             	add    $0x10,%esp
810005f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005fc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000600:	75 07                	jne    81000609 <__sfmoreglue+0x32>
81000602:	b8 00 00 00 00       	mov    $0x0,%eax
81000607:	eb 38                	jmp    81000641 <__sfmoreglue+0x6a>
81000609:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100060c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000612:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000615:	89 58 04             	mov    %ebx,0x4(%eax)
81000618:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100061b:	8d 50 0c             	lea    0xc(%eax),%edx
8100061e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000621:	89 50 08             	mov    %edx,0x8(%eax)
81000624:	89 d8                	mov    %ebx,%eax
81000626:	6b c0 68             	imul   $0x68,%eax,%eax
81000629:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100062c:	83 c2 0c             	add    $0xc,%edx
8100062f:	83 ec 04             	sub    $0x4,%esp
81000632:	50                   	push   %eax
81000633:	6a 00                	push   $0x0
81000635:	52                   	push   %edx
81000636:	e8 42 14 00 00       	call   81001a7d <memset>
8100063b:	83 c4 10             	add    $0x10,%esp
8100063e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000641:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000644:	c9                   	leave  
81000645:	c3                   	ret    

81000646 <__sfp>:
81000646:	55                   	push   %ebp
81000647:	89 e5                	mov    %esp,%ebp
81000649:	83 ec 18             	sub    $0x18,%esp
8100064c:	e8 16 02 00 00       	call   81000867 <__sfp_lock_acquire>
81000651:	a1 b4 34 00 81       	mov    0x810034b4,%eax
81000656:	8b 40 38             	mov    0x38(%eax),%eax
81000659:	85 c0                	test   %eax,%eax
8100065b:	75 11                	jne    8100066e <__sfp+0x28>
8100065d:	a1 b4 34 00 81       	mov    0x810034b4,%eax
81000662:	83 ec 0c             	sub    $0xc,%esp
81000665:	50                   	push   %eax
81000666:	e8 63 01 00 00       	call   810007ce <__sinit>
8100066b:	83 c4 10             	add    $0x10,%esp
8100066e:	a1 b4 34 00 81       	mov    0x810034b4,%eax
81000673:	05 e0 02 00 00       	add    $0x2e0,%eax
81000678:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100067b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100067e:	8b 40 08             	mov    0x8(%eax),%eax
81000681:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000684:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000687:	8b 40 04             	mov    0x4(%eax),%eax
8100068a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100068d:	eb 10                	jmp    8100069f <__sfp+0x59>
8100068f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000692:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000696:	66 85 c0             	test   %ax,%ax
81000699:	74 58                	je     810006f3 <__sfp+0xad>
8100069b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100069f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810006a3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810006a7:	79 e6                	jns    8100068f <__sfp+0x49>
810006a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006ac:	8b 00                	mov    (%eax),%eax
810006ae:	85 c0                	test   %eax,%eax
810006b0:	75 1e                	jne    810006d0 <__sfp+0x8a>
810006b2:	83 ec 08             	sub    $0x8,%esp
810006b5:	6a 04                	push   $0x4
810006b7:	ff 75 08             	push   0x8(%ebp)
810006ba:	e8 18 ff ff ff       	call   810005d7 <__sfmoreglue>
810006bf:	83 c4 10             	add    $0x10,%esp
810006c2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810006c5:	89 02                	mov    %eax,(%edx)
810006c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006ca:	8b 00                	mov    (%eax),%eax
810006cc:	85 c0                	test   %eax,%eax
810006ce:	74 0a                	je     810006da <__sfp+0x94>
810006d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006d3:	8b 00                	mov    (%eax),%eax
810006d5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810006d8:	eb a1                	jmp    8100067b <__sfp+0x35>
810006da:	90                   	nop
810006db:	e8 8d 01 00 00       	call   8100086d <__sfp_lock_release>
810006e0:	8b 45 08             	mov    0x8(%ebp),%eax
810006e3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810006e9:	b8 00 00 00 00       	mov    $0x0,%eax
810006ee:	e9 9e 00 00 00       	jmp    81000791 <__sfp+0x14b>
810006f3:	90                   	nop
810006f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810006fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000700:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000706:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000709:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000710:	e8 58 01 00 00       	call   8100086d <__sfp_lock_release>
81000715:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000718:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100071e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000721:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000728:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100072b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000732:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000735:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100073c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100073f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000746:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000749:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000750:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000753:	83 c0 5c             	add    $0x5c,%eax
81000756:	83 ec 04             	sub    $0x4,%esp
81000759:	6a 08                	push   $0x8
8100075b:	6a 00                	push   $0x0
8100075d:	50                   	push   %eax
8100075e:	e8 1a 13 00 00       	call   81001a7d <memset>
81000763:	83 c4 10             	add    $0x10,%esp
81000766:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000769:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000770:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000773:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100077a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100077d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000784:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000787:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100078e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000791:	c9                   	leave  
81000792:	c3                   	ret    

81000793 <_cleanup_r>:
81000793:	55                   	push   %ebp
81000794:	89 e5                	mov    %esp,%ebp
81000796:	83 ec 18             	sub    $0x18,%esp
81000799:	c7 45 f4 24 27 00 81 	movl   $0x81002724,-0xc(%ebp)
810007a0:	83 ec 08             	sub    $0x8,%esp
810007a3:	ff 75 f4             	push   -0xc(%ebp)
810007a6:	ff 75 08             	push   0x8(%ebp)
810007a9:	e8 33 06 00 00       	call   81000de1 <_fwalk_reent>
810007ae:	83 c4 10             	add    $0x10,%esp
810007b1:	90                   	nop
810007b2:	c9                   	leave  
810007b3:	c3                   	ret    

810007b4 <_cleanup>:
810007b4:	55                   	push   %ebp
810007b5:	89 e5                	mov    %esp,%ebp
810007b7:	83 ec 08             	sub    $0x8,%esp
810007ba:	a1 b4 34 00 81       	mov    0x810034b4,%eax
810007bf:	83 ec 0c             	sub    $0xc,%esp
810007c2:	50                   	push   %eax
810007c3:	e8 cb ff ff ff       	call   81000793 <_cleanup_r>
810007c8:	83 c4 10             	add    $0x10,%esp
810007cb:	90                   	nop
810007cc:	c9                   	leave  
810007cd:	c3                   	ret    

810007ce <__sinit>:
810007ce:	55                   	push   %ebp
810007cf:	89 e5                	mov    %esp,%ebp
810007d1:	83 ec 08             	sub    $0x8,%esp
810007d4:	e8 9a 00 00 00       	call   81000873 <__sinit_lock_acquire>
810007d9:	8b 45 08             	mov    0x8(%ebp),%eax
810007dc:	8b 40 38             	mov    0x38(%eax),%eax
810007df:	85 c0                	test   %eax,%eax
810007e1:	74 07                	je     810007ea <__sinit+0x1c>
810007e3:	e8 91 00 00 00       	call   81000879 <__sinit_lock_release>
810007e8:	eb 7b                	jmp    81000865 <__sinit+0x97>
810007ea:	8b 45 08             	mov    0x8(%ebp),%eax
810007ed:	c7 40 3c 93 07 00 81 	movl   $0x81000793,0x3c(%eax)
810007f4:	8b 45 08             	mov    0x8(%ebp),%eax
810007f7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810007fe:	00 00 00 
81000801:	8b 45 08             	mov    0x8(%ebp),%eax
81000804:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100080b:	00 00 00 
8100080e:	8b 45 08             	mov    0x8(%ebp),%eax
81000811:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000817:	8b 45 08             	mov    0x8(%ebp),%eax
8100081a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000820:	8b 45 08             	mov    0x8(%ebp),%eax
81000823:	8b 40 04             	mov    0x4(%eax),%eax
81000826:	83 ec 0c             	sub    $0xc,%esp
81000829:	50                   	push   %eax
8100082a:	e8 57 fd ff ff       	call   81000586 <stdin_init>
8100082f:	83 c4 10             	add    $0x10,%esp
81000832:	8b 45 08             	mov    0x8(%ebp),%eax
81000835:	8b 40 08             	mov    0x8(%eax),%eax
81000838:	83 ec 0c             	sub    $0xc,%esp
8100083b:	50                   	push   %eax
8100083c:	e8 60 fd ff ff       	call   810005a1 <stdout_init>
81000841:	83 c4 10             	add    $0x10,%esp
81000844:	8b 45 08             	mov    0x8(%ebp),%eax
81000847:	8b 40 0c             	mov    0xc(%eax),%eax
8100084a:	83 ec 0c             	sub    $0xc,%esp
8100084d:	50                   	push   %eax
8100084e:	e8 69 fd ff ff       	call   810005bc <stderr_init>
81000853:	83 c4 10             	add    $0x10,%esp
81000856:	8b 45 08             	mov    0x8(%ebp),%eax
81000859:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000860:	e8 14 00 00 00       	call   81000879 <__sinit_lock_release>
81000865:	c9                   	leave  
81000866:	c3                   	ret    

81000867 <__sfp_lock_acquire>:
81000867:	55                   	push   %ebp
81000868:	89 e5                	mov    %esp,%ebp
8100086a:	90                   	nop
8100086b:	5d                   	pop    %ebp
8100086c:	c3                   	ret    

8100086d <__sfp_lock_release>:
8100086d:	55                   	push   %ebp
8100086e:	89 e5                	mov    %esp,%ebp
81000870:	90                   	nop
81000871:	5d                   	pop    %ebp
81000872:	c3                   	ret    

81000873 <__sinit_lock_acquire>:
81000873:	55                   	push   %ebp
81000874:	89 e5                	mov    %esp,%ebp
81000876:	90                   	nop
81000877:	5d                   	pop    %ebp
81000878:	c3                   	ret    

81000879 <__sinit_lock_release>:
81000879:	55                   	push   %ebp
8100087a:	89 e5                	mov    %esp,%ebp
8100087c:	90                   	nop
8100087d:	5d                   	pop    %ebp
8100087e:	c3                   	ret    

8100087f <__fp_lock>:
8100087f:	55                   	push   %ebp
81000880:	89 e5                	mov    %esp,%ebp
81000882:	b8 00 00 00 00       	mov    $0x0,%eax
81000887:	5d                   	pop    %ebp
81000888:	c3                   	ret    

81000889 <__fp_unlock>:
81000889:	55                   	push   %ebp
8100088a:	89 e5                	mov    %esp,%ebp
8100088c:	b8 00 00 00 00       	mov    $0x0,%eax
81000891:	5d                   	pop    %ebp
81000892:	c3                   	ret    

81000893 <__fp_lock_all>:
81000893:	55                   	push   %ebp
81000894:	89 e5                	mov    %esp,%ebp
81000896:	83 ec 08             	sub    $0x8,%esp
81000899:	e8 c9 ff ff ff       	call   81000867 <__sfp_lock_acquire>
8100089e:	a1 e4 38 00 81       	mov    0x810038e4,%eax
810008a3:	83 ec 08             	sub    $0x8,%esp
810008a6:	68 7f 08 00 81       	push   $0x8100087f
810008ab:	50                   	push   %eax
810008ac:	e8 c8 04 00 00       	call   81000d79 <_fwalk>
810008b1:	83 c4 10             	add    $0x10,%esp
810008b4:	90                   	nop
810008b5:	c9                   	leave  
810008b6:	c3                   	ret    

810008b7 <__fp_unlock_all>:
810008b7:	55                   	push   %ebp
810008b8:	89 e5                	mov    %esp,%ebp
810008ba:	83 ec 08             	sub    $0x8,%esp
810008bd:	a1 e4 38 00 81       	mov    0x810038e4,%eax
810008c2:	83 ec 08             	sub    $0x8,%esp
810008c5:	68 89 08 00 81       	push   $0x81000889
810008ca:	50                   	push   %eax
810008cb:	e8 a9 04 00 00       	call   81000d79 <_fwalk>
810008d0:	83 c4 10             	add    $0x10,%esp
810008d3:	e8 95 ff ff ff       	call   8100086d <__sfp_lock_release>
810008d8:	90                   	nop
810008d9:	c9                   	leave  
810008da:	c3                   	ret    

810008db <__sfvwrite_r>:
810008db:	55                   	push   %ebp
810008dc:	89 e5                	mov    %esp,%ebp
810008de:	57                   	push   %edi
810008df:	56                   	push   %esi
810008e0:	53                   	push   %ebx
810008e1:	83 ec 3c             	sub    $0x3c,%esp
810008e4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810008e7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810008ee:	8b 45 10             	mov    0x10(%ebp),%eax
810008f1:	8b 78 08             	mov    0x8(%eax),%edi
810008f4:	85 ff                	test   %edi,%edi
810008f6:	75 0a                	jne    81000902 <__sfvwrite_r+0x27>
810008f8:	b8 00 00 00 00       	mov    $0x0,%eax
810008fd:	e9 6f 04 00 00       	jmp    81000d71 <__sfvwrite_r+0x496>
81000902:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000906:	98                   	cwtl   
81000907:	83 e0 08             	and    $0x8,%eax
8100090a:	85 c0                	test   %eax,%eax
8100090c:	74 07                	je     81000915 <__sfvwrite_r+0x3a>
8100090e:	8b 43 10             	mov    0x10(%ebx),%eax
81000911:	85 c0                	test   %eax,%eax
81000913:	75 1d                	jne    81000932 <__sfvwrite_r+0x57>
81000915:	83 ec 08             	sub    $0x8,%esp
81000918:	53                   	push   %ebx
81000919:	ff 75 08             	push   0x8(%ebp)
8100091c:	e8 68 1c 00 00       	call   81002589 <__swsetup_r>
81000921:	83 c4 10             	add    $0x10,%esp
81000924:	85 c0                	test   %eax,%eax
81000926:	74 0a                	je     81000932 <__sfvwrite_r+0x57>
81000928:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100092d:	e9 3f 04 00 00       	jmp    81000d71 <__sfvwrite_r+0x496>
81000932:	8b 45 10             	mov    0x10(%ebp),%eax
81000935:	8b 00                	mov    (%eax),%eax
81000937:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100093a:	bf 00 00 00 00       	mov    $0x0,%edi
8100093f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000943:	98                   	cwtl   
81000944:	83 e0 02             	and    $0x2,%eax
81000947:	85 c0                	test   %eax,%eax
81000949:	74 68                	je     810009b3 <__sfvwrite_r+0xd8>
8100094b:	eb 11                	jmp    8100095e <__sfvwrite_r+0x83>
8100094d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000950:	8b 08                	mov    (%eax),%ecx
81000952:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000955:	8b 78 04             	mov    0x4(%eax),%edi
81000958:	83 c0 08             	add    $0x8,%eax
8100095b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100095e:	85 ff                	test   %edi,%edi
81000960:	74 eb                	je     8100094d <__sfvwrite_r+0x72>
81000962:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000965:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8100096a:	39 c7                	cmp    %eax,%edi
8100096c:	0f 46 c7             	cmovbe %edi,%eax
8100096f:	89 c2                	mov    %eax,%edx
81000971:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000974:	52                   	push   %edx
81000975:	ff 75 c4             	push   -0x3c(%ebp)
81000978:	50                   	push   %eax
81000979:	ff 75 08             	push   0x8(%ebp)
8100097c:	ff d1                	call   *%ecx
8100097e:	83 c4 10             	add    $0x10,%esp
81000981:	89 c6                	mov    %eax,%esi
81000983:	85 f6                	test   %esi,%esi
81000985:	0f 8e cf 03 00 00    	jle    81000d5a <__sfvwrite_r+0x47f>
8100098b:	89 f0                	mov    %esi,%eax
8100098d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000990:	89 f0                	mov    %esi,%eax
81000992:	29 c7                	sub    %eax,%edi
81000994:	8b 45 10             	mov    0x10(%ebp),%eax
81000997:	8b 40 08             	mov    0x8(%eax),%eax
8100099a:	89 f2                	mov    %esi,%edx
8100099c:	29 d0                	sub    %edx,%eax
8100099e:	8b 4d 10             	mov    0x10(%ebp),%ecx
810009a1:	89 41 08             	mov    %eax,0x8(%ecx)
810009a4:	8b 45 10             	mov    0x10(%ebp),%eax
810009a7:	8b 40 08             	mov    0x8(%eax),%eax
810009aa:	85 c0                	test   %eax,%eax
810009ac:	75 b0                	jne    8100095e <__sfvwrite_r+0x83>
810009ae:	e9 a0 03 00 00       	jmp    81000d53 <__sfvwrite_r+0x478>
810009b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009b7:	98                   	cwtl   
810009b8:	83 e0 01             	and    $0x1,%eax
810009bb:	85 c0                	test   %eax,%eax
810009bd:	0f 85 44 02 00 00    	jne    81000c07 <__sfvwrite_r+0x32c>
810009c3:	eb 11                	jmp    810009d6 <__sfvwrite_r+0xfb>
810009c5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810009c8:	8b 08                	mov    (%eax),%ecx
810009ca:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810009cd:	8b 78 04             	mov    0x4(%eax),%edi
810009d0:	83 c0 08             	add    $0x8,%eax
810009d3:	89 45 c0             	mov    %eax,-0x40(%ebp)
810009d6:	85 ff                	test   %edi,%edi
810009d8:	74 eb                	je     810009c5 <__sfvwrite_r+0xea>
810009da:	8b 73 08             	mov    0x8(%ebx),%esi
810009dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009e1:	98                   	cwtl   
810009e2:	25 00 02 00 00       	and    $0x200,%eax
810009e7:	85 c0                	test   %eax,%eax
810009e9:	0f 84 4f 01 00 00    	je     81000b3e <__sfvwrite_r+0x263>
810009ef:	89 f0                	mov    %esi,%eax
810009f1:	39 c7                	cmp    %eax,%edi
810009f3:	0f 82 12 01 00 00    	jb     81000b0b <__sfvwrite_r+0x230>
810009f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009fd:	98                   	cwtl   
810009fe:	25 80 04 00 00       	and    $0x480,%eax
81000a03:	85 c0                	test   %eax,%eax
81000a05:	0f 84 00 01 00 00    	je     81000b0b <__sfvwrite_r+0x230>
81000a0b:	8b 03                	mov    (%ebx),%eax
81000a0d:	8b 53 10             	mov    0x10(%ebx),%edx
81000a10:	29 d0                	sub    %edx,%eax
81000a12:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000a15:	8b 53 14             	mov    0x14(%ebx),%edx
81000a18:	89 d0                	mov    %edx,%eax
81000a1a:	01 c0                	add    %eax,%eax
81000a1c:	01 d0                	add    %edx,%eax
81000a1e:	89 c2                	mov    %eax,%edx
81000a20:	c1 ea 1f             	shr    $0x1f,%edx
81000a23:	01 d0                	add    %edx,%eax
81000a25:	d1 f8                	sar    %eax
81000a27:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a2d:	01 f8                	add    %edi,%eax
81000a2f:	8d 50 01             	lea    0x1(%eax),%edx
81000a32:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a35:	39 c2                	cmp    %eax,%edx
81000a37:	76 0b                	jbe    81000a44 <__sfvwrite_r+0x169>
81000a39:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a3c:	01 f8                	add    %edi,%eax
81000a3e:	83 c0 01             	add    $0x1,%eax
81000a41:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a44:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a48:	98                   	cwtl   
81000a49:	25 00 04 00 00       	and    $0x400,%eax
81000a4e:	85 c0                	test   %eax,%eax
81000a50:	74 4f                	je     81000aa1 <__sfvwrite_r+0x1c6>
81000a52:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a55:	83 ec 08             	sub    $0x8,%esp
81000a58:	50                   	push   %eax
81000a59:	ff 75 08             	push   0x8(%ebp)
81000a5c:	e8 7e 06 00 00       	call   810010df <_malloc_r>
81000a61:	83 c4 10             	add    $0x10,%esp
81000a64:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000a67:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a6b:	75 0e                	jne    81000a7b <__sfvwrite_r+0x1a0>
81000a6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a70:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000a76:	e9 e6 02 00 00       	jmp    81000d61 <__sfvwrite_r+0x486>
81000a7b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000a7e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a81:	83 ec 04             	sub    $0x4,%esp
81000a84:	52                   	push   %edx
81000a85:	50                   	push   %eax
81000a86:	ff 75 dc             	push   -0x24(%ebp)
81000a89:	e8 1a 0f 00 00       	call   810019a8 <memcpy>
81000a8e:	83 c4 10             	add    $0x10,%esp
81000a91:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a95:	66 25 7f fb          	and    $0xfb7f,%ax
81000a99:	0c 80                	or     $0x80,%al
81000a9b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a9f:	eb 49                	jmp    81000aea <__sfvwrite_r+0x20f>
81000aa1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000aa4:	8b 43 10             	mov    0x10(%ebx),%eax
81000aa7:	83 ec 04             	sub    $0x4,%esp
81000aaa:	52                   	push   %edx
81000aab:	50                   	push   %eax
81000aac:	ff 75 08             	push   0x8(%ebp)
81000aaf:	e8 5d 10 00 00       	call   81001b11 <_realloc_r>
81000ab4:	83 c4 10             	add    $0x10,%esp
81000ab7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000aba:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000abe:	75 2a                	jne    81000aea <__sfvwrite_r+0x20f>
81000ac0:	8b 43 10             	mov    0x10(%ebx),%eax
81000ac3:	83 ec 08             	sub    $0x8,%esp
81000ac6:	50                   	push   %eax
81000ac7:	ff 75 08             	push   0x8(%ebp)
81000aca:	e8 30 20 00 00       	call   81002aff <_free_r>
81000acf:	83 c4 10             	add    $0x10,%esp
81000ad2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ad6:	24 7f                	and    $0x7f,%al
81000ad8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000adc:	8b 45 08             	mov    0x8(%ebp),%eax
81000adf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ae5:	e9 77 02 00 00       	jmp    81000d61 <__sfvwrite_r+0x486>
81000aea:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000aed:	89 43 10             	mov    %eax,0x10(%ebx)
81000af0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000af3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000af6:	01 d0                	add    %edx,%eax
81000af8:	89 03                	mov    %eax,(%ebx)
81000afa:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000afd:	89 43 14             	mov    %eax,0x14(%ebx)
81000b00:	89 fe                	mov    %edi,%esi
81000b02:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b05:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000b08:	89 43 08             	mov    %eax,0x8(%ebx)
81000b0b:	89 f0                	mov    %esi,%eax
81000b0d:	39 c7                	cmp    %eax,%edi
81000b0f:	73 02                	jae    81000b13 <__sfvwrite_r+0x238>
81000b11:	89 fe                	mov    %edi,%esi
81000b13:	89 f2                	mov    %esi,%edx
81000b15:	8b 03                	mov    (%ebx),%eax
81000b17:	83 ec 04             	sub    $0x4,%esp
81000b1a:	52                   	push   %edx
81000b1b:	ff 75 c4             	push   -0x3c(%ebp)
81000b1e:	50                   	push   %eax
81000b1f:	e8 cc 0e 00 00       	call   810019f0 <memmove>
81000b24:	83 c4 10             	add    $0x10,%esp
81000b27:	8b 43 08             	mov    0x8(%ebx),%eax
81000b2a:	29 f0                	sub    %esi,%eax
81000b2c:	89 43 08             	mov    %eax,0x8(%ebx)
81000b2f:	8b 03                	mov    (%ebx),%eax
81000b31:	89 f2                	mov    %esi,%edx
81000b33:	01 d0                	add    %edx,%eax
81000b35:	89 03                	mov    %eax,(%ebx)
81000b37:	89 fe                	mov    %edi,%esi
81000b39:	e9 9d 00 00 00       	jmp    81000bdb <__sfvwrite_r+0x300>
81000b3e:	8b 13                	mov    (%ebx),%edx
81000b40:	8b 43 10             	mov    0x10(%ebx),%eax
81000b43:	39 c2                	cmp    %eax,%edx
81000b45:	77 07                	ja     81000b4e <__sfvwrite_r+0x273>
81000b47:	8b 43 14             	mov    0x14(%ebx),%eax
81000b4a:	39 c7                	cmp    %eax,%edi
81000b4c:	73 4c                	jae    81000b9a <__sfvwrite_r+0x2bf>
81000b4e:	89 f0                	mov    %esi,%eax
81000b50:	39 c7                	cmp    %eax,%edi
81000b52:	0f 46 c7             	cmovbe %edi,%eax
81000b55:	89 c6                	mov    %eax,%esi
81000b57:	89 f2                	mov    %esi,%edx
81000b59:	8b 03                	mov    (%ebx),%eax
81000b5b:	83 ec 04             	sub    $0x4,%esp
81000b5e:	52                   	push   %edx
81000b5f:	ff 75 c4             	push   -0x3c(%ebp)
81000b62:	50                   	push   %eax
81000b63:	e8 88 0e 00 00       	call   810019f0 <memmove>
81000b68:	83 c4 10             	add    $0x10,%esp
81000b6b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b6e:	29 f0                	sub    %esi,%eax
81000b70:	89 43 08             	mov    %eax,0x8(%ebx)
81000b73:	8b 03                	mov    (%ebx),%eax
81000b75:	89 f2                	mov    %esi,%edx
81000b77:	01 d0                	add    %edx,%eax
81000b79:	89 03                	mov    %eax,(%ebx)
81000b7b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b7e:	85 c0                	test   %eax,%eax
81000b80:	75 58                	jne    81000bda <__sfvwrite_r+0x2ff>
81000b82:	83 ec 08             	sub    $0x8,%esp
81000b85:	53                   	push   %ebx
81000b86:	ff 75 08             	push   0x8(%ebp)
81000b89:	e8 e0 1e 00 00       	call   81002a6e <_fflush_r>
81000b8e:	83 c4 10             	add    $0x10,%esp
81000b91:	85 c0                	test   %eax,%eax
81000b93:	74 45                	je     81000bda <__sfvwrite_r+0x2ff>
81000b95:	e9 c7 01 00 00       	jmp    81000d61 <__sfvwrite_r+0x486>
81000b9a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000ba0:	77 04                	ja     81000ba6 <__sfvwrite_r+0x2cb>
81000ba2:	89 f8                	mov    %edi,%eax
81000ba4:	eb 05                	jmp    81000bab <__sfvwrite_r+0x2d0>
81000ba6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000bab:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000bae:	99                   	cltd   
81000baf:	f7 f9                	idiv   %ecx
81000bb1:	89 c2                	mov    %eax,%edx
81000bb3:	8b 43 14             	mov    0x14(%ebx),%eax
81000bb6:	89 d6                	mov    %edx,%esi
81000bb8:	0f af f0             	imul   %eax,%esi
81000bbb:	8b 53 24             	mov    0x24(%ebx),%edx
81000bbe:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000bc1:	56                   	push   %esi
81000bc2:	ff 75 c4             	push   -0x3c(%ebp)
81000bc5:	50                   	push   %eax
81000bc6:	ff 75 08             	push   0x8(%ebp)
81000bc9:	ff d2                	call   *%edx
81000bcb:	83 c4 10             	add    $0x10,%esp
81000bce:	89 c6                	mov    %eax,%esi
81000bd0:	85 f6                	test   %esi,%esi
81000bd2:	0f 8e 85 01 00 00    	jle    81000d5d <__sfvwrite_r+0x482>
81000bd8:	eb 01                	jmp    81000bdb <__sfvwrite_r+0x300>
81000bda:	90                   	nop
81000bdb:	89 f0                	mov    %esi,%eax
81000bdd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000be0:	89 f0                	mov    %esi,%eax
81000be2:	29 c7                	sub    %eax,%edi
81000be4:	8b 45 10             	mov    0x10(%ebp),%eax
81000be7:	8b 40 08             	mov    0x8(%eax),%eax
81000bea:	89 f2                	mov    %esi,%edx
81000bec:	29 d0                	sub    %edx,%eax
81000bee:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000bf1:	89 41 08             	mov    %eax,0x8(%ecx)
81000bf4:	8b 45 10             	mov    0x10(%ebp),%eax
81000bf7:	8b 40 08             	mov    0x8(%eax),%eax
81000bfa:	85 c0                	test   %eax,%eax
81000bfc:	0f 85 d4 fd ff ff    	jne    810009d6 <__sfvwrite_r+0xfb>
81000c02:	e9 4c 01 00 00       	jmp    81000d53 <__sfvwrite_r+0x478>
81000c07:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000c0e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000c15:	eb 18                	jmp    81000c2f <__sfvwrite_r+0x354>
81000c17:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000c1e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000c21:	8b 08                	mov    (%eax),%ecx
81000c23:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000c26:	8b 78 04             	mov    0x4(%eax),%edi
81000c29:	83 c0 08             	add    $0x8,%eax
81000c2c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000c2f:	85 ff                	test   %edi,%edi
81000c31:	74 e4                	je     81000c17 <__sfvwrite_r+0x33c>
81000c33:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c37:	75 32                	jne    81000c6b <__sfvwrite_r+0x390>
81000c39:	83 ec 04             	sub    $0x4,%esp
81000c3c:	57                   	push   %edi
81000c3d:	6a 0a                	push   $0xa
81000c3f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000c42:	56                   	push   %esi
81000c43:	e8 c8 0c 00 00       	call   81001910 <memchr>
81000c48:	83 c4 10             	add    $0x10,%esp
81000c4b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000c4e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000c52:	74 0a                	je     81000c5e <__sfvwrite_r+0x383>
81000c54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000c57:	83 c0 01             	add    $0x1,%eax
81000c5a:	29 f0                	sub    %esi,%eax
81000c5c:	eb 03                	jmp    81000c61 <__sfvwrite_r+0x386>
81000c5e:	8d 47 01             	lea    0x1(%edi),%eax
81000c61:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000c64:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000c6b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000c6e:	39 c7                	cmp    %eax,%edi
81000c70:	0f 46 c7             	cmovbe %edi,%eax
81000c73:	89 c1                	mov    %eax,%ecx
81000c75:	8b 53 08             	mov    0x8(%ebx),%edx
81000c78:	8b 43 14             	mov    0x14(%ebx),%eax
81000c7b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000c7e:	8b 13                	mov    (%ebx),%edx
81000c80:	8b 43 10             	mov    0x10(%ebx),%eax
81000c83:	39 c2                	cmp    %eax,%edx
81000c85:	76 38                	jbe    81000cbf <__sfvwrite_r+0x3e4>
81000c87:	39 f1                	cmp    %esi,%ecx
81000c89:	7e 34                	jle    81000cbf <__sfvwrite_r+0x3e4>
81000c8b:	89 f2                	mov    %esi,%edx
81000c8d:	8b 03                	mov    (%ebx),%eax
81000c8f:	83 ec 04             	sub    $0x4,%esp
81000c92:	52                   	push   %edx
81000c93:	ff 75 c4             	push   -0x3c(%ebp)
81000c96:	50                   	push   %eax
81000c97:	e8 54 0d 00 00       	call   810019f0 <memmove>
81000c9c:	83 c4 10             	add    $0x10,%esp
81000c9f:	8b 03                	mov    (%ebx),%eax
81000ca1:	89 f2                	mov    %esi,%edx
81000ca3:	01 d0                	add    %edx,%eax
81000ca5:	89 03                	mov    %eax,(%ebx)
81000ca7:	83 ec 08             	sub    $0x8,%esp
81000caa:	53                   	push   %ebx
81000cab:	ff 75 08             	push   0x8(%ebp)
81000cae:	e8 bb 1d 00 00       	call   81002a6e <_fflush_r>
81000cb3:	83 c4 10             	add    $0x10,%esp
81000cb6:	85 c0                	test   %eax,%eax
81000cb8:	74 4f                	je     81000d09 <__sfvwrite_r+0x42e>
81000cba:	e9 a2 00 00 00       	jmp    81000d61 <__sfvwrite_r+0x486>
81000cbf:	8b 73 14             	mov    0x14(%ebx),%esi
81000cc2:	89 c8                	mov    %ecx,%eax
81000cc4:	39 c6                	cmp    %eax,%esi
81000cc6:	7f 1b                	jg     81000ce3 <__sfvwrite_r+0x408>
81000cc8:	8b 53 24             	mov    0x24(%ebx),%edx
81000ccb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cce:	56                   	push   %esi
81000ccf:	ff 75 c4             	push   -0x3c(%ebp)
81000cd2:	50                   	push   %eax
81000cd3:	ff 75 08             	push   0x8(%ebp)
81000cd6:	ff d2                	call   *%edx
81000cd8:	83 c4 10             	add    $0x10,%esp
81000cdb:	89 c6                	mov    %eax,%esi
81000cdd:	85 f6                	test   %esi,%esi
81000cdf:	7f 28                	jg     81000d09 <__sfvwrite_r+0x42e>
81000ce1:	eb 7e                	jmp    81000d61 <__sfvwrite_r+0x486>
81000ce3:	89 ce                	mov    %ecx,%esi
81000ce5:	89 f2                	mov    %esi,%edx
81000ce7:	8b 03                	mov    (%ebx),%eax
81000ce9:	83 ec 04             	sub    $0x4,%esp
81000cec:	52                   	push   %edx
81000ced:	ff 75 c4             	push   -0x3c(%ebp)
81000cf0:	50                   	push   %eax
81000cf1:	e8 fa 0c 00 00       	call   810019f0 <memmove>
81000cf6:	83 c4 10             	add    $0x10,%esp
81000cf9:	8b 43 08             	mov    0x8(%ebx),%eax
81000cfc:	29 f0                	sub    %esi,%eax
81000cfe:	89 43 08             	mov    %eax,0x8(%ebx)
81000d01:	8b 03                	mov    (%ebx),%eax
81000d03:	89 f2                	mov    %esi,%edx
81000d05:	01 d0                	add    %edx,%eax
81000d07:	89 03                	mov    %eax,(%ebx)
81000d09:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000d0c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000d10:	75 1a                	jne    81000d2c <__sfvwrite_r+0x451>
81000d12:	83 ec 08             	sub    $0x8,%esp
81000d15:	53                   	push   %ebx
81000d16:	ff 75 08             	push   0x8(%ebp)
81000d19:	e8 50 1d 00 00       	call   81002a6e <_fflush_r>
81000d1e:	83 c4 10             	add    $0x10,%esp
81000d21:	85 c0                	test   %eax,%eax
81000d23:	75 3b                	jne    81000d60 <__sfvwrite_r+0x485>
81000d25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d2c:	89 f0                	mov    %esi,%eax
81000d2e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000d31:	89 f0                	mov    %esi,%eax
81000d33:	29 c7                	sub    %eax,%edi
81000d35:	8b 45 10             	mov    0x10(%ebp),%eax
81000d38:	8b 40 08             	mov    0x8(%eax),%eax
81000d3b:	89 f2                	mov    %esi,%edx
81000d3d:	29 d0                	sub    %edx,%eax
81000d3f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d42:	89 41 08             	mov    %eax,0x8(%ecx)
81000d45:	8b 45 10             	mov    0x10(%ebp),%eax
81000d48:	8b 40 08             	mov    0x8(%eax),%eax
81000d4b:	85 c0                	test   %eax,%eax
81000d4d:	0f 85 dc fe ff ff    	jne    81000c2f <__sfvwrite_r+0x354>
81000d53:	b8 00 00 00 00       	mov    $0x0,%eax
81000d58:	eb 17                	jmp    81000d71 <__sfvwrite_r+0x496>
81000d5a:	90                   	nop
81000d5b:	eb 04                	jmp    81000d61 <__sfvwrite_r+0x486>
81000d5d:	90                   	nop
81000d5e:	eb 01                	jmp    81000d61 <__sfvwrite_r+0x486>
81000d60:	90                   	nop
81000d61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d65:	83 c8 40             	or     $0x40,%eax
81000d68:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000d6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000d71:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000d74:	5b                   	pop    %ebx
81000d75:	5e                   	pop    %esi
81000d76:	5f                   	pop    %edi
81000d77:	5d                   	pop    %ebp
81000d78:	c3                   	ret    

81000d79 <_fwalk>:
81000d79:	55                   	push   %ebp
81000d7a:	89 e5                	mov    %esp,%ebp
81000d7c:	57                   	push   %edi
81000d7d:	56                   	push   %esi
81000d7e:	53                   	push   %ebx
81000d7f:	83 ec 1c             	sub    $0x1c,%esp
81000d82:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d89:	8b 45 08             	mov    0x8(%ebp),%eax
81000d8c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000d92:	eb 3e                	jmp    81000dd2 <_fwalk+0x59>
81000d94:	8b 5e 08             	mov    0x8(%esi),%ebx
81000d97:	8b 7e 04             	mov    0x4(%esi),%edi
81000d9a:	eb 2d                	jmp    81000dc9 <_fwalk+0x50>
81000d9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000da0:	66 85 c0             	test   %ax,%ax
81000da3:	74 21                	je     81000dc6 <_fwalk+0x4d>
81000da5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000da9:	66 83 f8 01          	cmp    $0x1,%ax
81000dad:	74 17                	je     81000dc6 <_fwalk+0x4d>
81000daf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000db3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000db7:	74 0d                	je     81000dc6 <_fwalk+0x4d>
81000db9:	83 ec 0c             	sub    $0xc,%esp
81000dbc:	53                   	push   %ebx
81000dbd:	ff 55 0c             	call   *0xc(%ebp)
81000dc0:	83 c4 10             	add    $0x10,%esp
81000dc3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000dc6:	83 c3 68             	add    $0x68,%ebx
81000dc9:	83 ef 01             	sub    $0x1,%edi
81000dcc:	85 ff                	test   %edi,%edi
81000dce:	79 cc                	jns    81000d9c <_fwalk+0x23>
81000dd0:	8b 36                	mov    (%esi),%esi
81000dd2:	85 f6                	test   %esi,%esi
81000dd4:	75 be                	jne    81000d94 <_fwalk+0x1b>
81000dd6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000dd9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000ddc:	5b                   	pop    %ebx
81000ddd:	5e                   	pop    %esi
81000dde:	5f                   	pop    %edi
81000ddf:	5d                   	pop    %ebp
81000de0:	c3                   	ret    

81000de1 <_fwalk_reent>:
81000de1:	55                   	push   %ebp
81000de2:	89 e5                	mov    %esp,%ebp
81000de4:	57                   	push   %edi
81000de5:	56                   	push   %esi
81000de6:	53                   	push   %ebx
81000de7:	83 ec 1c             	sub    $0x1c,%esp
81000dea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000df1:	8b 45 08             	mov    0x8(%ebp),%eax
81000df4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000dfa:	eb 41                	jmp    81000e3d <_fwalk_reent+0x5c>
81000dfc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000dff:	8b 7e 04             	mov    0x4(%esi),%edi
81000e02:	eb 30                	jmp    81000e34 <_fwalk_reent+0x53>
81000e04:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e08:	66 85 c0             	test   %ax,%ax
81000e0b:	74 24                	je     81000e31 <_fwalk_reent+0x50>
81000e0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e11:	66 83 f8 01          	cmp    $0x1,%ax
81000e15:	74 1a                	je     81000e31 <_fwalk_reent+0x50>
81000e17:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e1b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e1f:	74 10                	je     81000e31 <_fwalk_reent+0x50>
81000e21:	83 ec 08             	sub    $0x8,%esp
81000e24:	53                   	push   %ebx
81000e25:	ff 75 08             	push   0x8(%ebp)
81000e28:	ff 55 0c             	call   *0xc(%ebp)
81000e2b:	83 c4 10             	add    $0x10,%esp
81000e2e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e31:	83 c3 68             	add    $0x68,%ebx
81000e34:	83 ef 01             	sub    $0x1,%edi
81000e37:	85 ff                	test   %edi,%edi
81000e39:	79 c9                	jns    81000e04 <_fwalk_reent+0x23>
81000e3b:	8b 36                	mov    (%esi),%esi
81000e3d:	85 f6                	test   %esi,%esi
81000e3f:	75 bb                	jne    81000dfc <_fwalk_reent+0x1b>
81000e41:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000e44:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e47:	5b                   	pop    %ebx
81000e48:	5e                   	pop    %esi
81000e49:	5f                   	pop    %edi
81000e4a:	5d                   	pop    %ebp
81000e4b:	c3                   	ret    

81000e4c <malloc_extend_top>:
81000e4c:	55                   	push   %ebp
81000e4d:	89 e5                	mov    %esp,%ebp
81000e4f:	83 ec 38             	sub    $0x38,%esp
81000e52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e59:	b8 00 39 00 81       	mov    $0x81003900,%eax
81000e5e:	8b 40 08             	mov    0x8(%eax),%eax
81000e61:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000e64:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e67:	8b 40 04             	mov    0x4(%eax),%eax
81000e6a:	83 e0 fc             	and    $0xfffffffc,%eax
81000e6d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000e70:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000e73:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e76:	01 d0                	add    %edx,%eax
81000e78:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000e7b:	8b 15 40 3d 00 81    	mov    0x81003d40,%edx
81000e81:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e84:	01 d0                	add    %edx,%eax
81000e86:	83 c0 10             	add    $0x10,%eax
81000e89:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e8c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000e93:	a1 0c 3d 00 81       	mov    0x81003d0c,%eax
81000e98:	83 f8 ff             	cmp    $0xffffffff,%eax
81000e9b:	74 15                	je     81000eb2 <malloc_extend_top+0x66>
81000e9d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000ea0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ea3:	01 d0                	add    %edx,%eax
81000ea5:	8d 50 ff             	lea    -0x1(%eax),%edx
81000ea8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000eab:	f7 d8                	neg    %eax
81000ead:	21 d0                	and    %edx,%eax
81000eaf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000eb2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000eb5:	83 ec 08             	sub    $0x8,%esp
81000eb8:	50                   	push   %eax
81000eb9:	ff 75 08             	push   0x8(%ebp)
81000ebc:	e8 2a 15 00 00       	call   810023eb <_sbrk_r>
81000ec1:	83 c4 10             	add    $0x10,%esp
81000ec4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ec7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000ecb:	0f 84 0b 02 00 00    	je     810010dc <malloc_extend_top+0x290>
81000ed1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ed4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000ed7:	73 0e                	jae    81000ee7 <malloc_extend_top+0x9b>
81000ed9:	b8 00 39 00 81       	mov    $0x81003900,%eax
81000ede:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000ee1:	0f 85 f5 01 00 00    	jne    810010dc <malloc_extend_top+0x290>
81000ee7:	a1 60 3d 00 81       	mov    0x81003d60,%eax
81000eec:	89 c2                	mov    %eax,%edx
81000eee:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ef1:	01 d0                	add    %edx,%eax
81000ef3:	a3 60 3d 00 81       	mov    %eax,0x81003d60
81000ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000efb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000efe:	75 30                	jne    81000f30 <malloc_extend_top+0xe4>
81000f00:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f03:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f06:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000f09:	21 d0                	and    %edx,%eax
81000f0b:	85 c0                	test   %eax,%eax
81000f0d:	75 21                	jne    81000f30 <malloc_extend_top+0xe4>
81000f0f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000f12:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f15:	01 d0                	add    %edx,%eax
81000f17:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000f1a:	b8 00 39 00 81       	mov    $0x81003900,%eax
81000f1f:	8b 40 08             	mov    0x8(%eax),%eax
81000f22:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000f25:	83 ca 01             	or     $0x1,%edx
81000f28:	89 50 04             	mov    %edx,0x4(%eax)
81000f2b:	e9 76 01 00 00       	jmp    810010a6 <malloc_extend_top+0x25a>
81000f30:	a1 0c 3d 00 81       	mov    0x81003d0c,%eax
81000f35:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f38:	75 0a                	jne    81000f44 <malloc_extend_top+0xf8>
81000f3a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f3d:	a3 0c 3d 00 81       	mov    %eax,0x81003d0c
81000f42:	eb 13                	jmp    81000f57 <malloc_extend_top+0x10b>
81000f44:	8b 15 60 3d 00 81    	mov    0x81003d60,%edx
81000f4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f4d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81000f50:	01 d0                	add    %edx,%eax
81000f52:	a3 60 3d 00 81       	mov    %eax,0x81003d60
81000f57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f5a:	83 c0 08             	add    $0x8,%eax
81000f5d:	83 e0 07             	and    $0x7,%eax
81000f60:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000f63:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000f67:	74 13                	je     81000f7c <malloc_extend_top+0x130>
81000f69:	b8 08 00 00 00       	mov    $0x8,%eax
81000f6e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81000f71:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f74:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f77:	01 45 f4             	add    %eax,-0xc(%ebp)
81000f7a:	eb 07                	jmp    81000f83 <malloc_extend_top+0x137>
81000f7c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000f83:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f89:	01 d0                	add    %edx,%eax
81000f8b:	89 c2                	mov    %eax,%edx
81000f8d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f90:	83 e8 01             	sub    $0x1,%eax
81000f93:	21 c2                	and    %eax,%edx
81000f95:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f98:	29 d0                	sub    %edx,%eax
81000f9a:	01 45 f0             	add    %eax,-0x10(%ebp)
81000f9d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fa0:	83 e8 01             	sub    $0x1,%eax
81000fa3:	21 45 f0             	and    %eax,-0x10(%ebp)
81000fa6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fa9:	83 ec 08             	sub    $0x8,%esp
81000fac:	50                   	push   %eax
81000fad:	ff 75 08             	push   0x8(%ebp)
81000fb0:	e8 36 14 00 00       	call   810023eb <_sbrk_r>
81000fb5:	83 c4 10             	add    $0x10,%esp
81000fb8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fbb:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81000fbf:	75 28                	jne    81000fe9 <malloc_extend_top+0x19d>
81000fc1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000fc8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000fcf:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000fd2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fd5:	01 d0                	add    %edx,%eax
81000fd7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fda:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000fde:	74 09                	je     81000fe9 <malloc_extend_top+0x19d>
81000fe0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81000fe3:	83 e8 08             	sub    $0x8,%eax
81000fe6:	01 45 ec             	add    %eax,-0x14(%ebp)
81000fe9:	a1 60 3d 00 81       	mov    0x81003d60,%eax
81000fee:	89 c2                	mov    %eax,%edx
81000ff0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000ff3:	01 d0                	add    %edx,%eax
81000ff5:	a3 60 3d 00 81       	mov    %eax,0x81003d60
81000ffa:	ba 00 39 00 81       	mov    $0x81003900,%edx
81000fff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001002:	89 42 08             	mov    %eax,0x8(%edx)
81001005:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001008:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100100b:	89 c2                	mov    %eax,%edx
8100100d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001010:	01 d0                	add    %edx,%eax
81001012:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001015:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100101a:	8b 40 08             	mov    0x8(%eax),%eax
8100101d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001020:	83 ca 01             	or     $0x1,%edx
81001023:	89 50 04             	mov    %edx,0x4(%eax)
81001026:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100102b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100102e:	74 76                	je     810010a6 <malloc_extend_top+0x25a>
81001030:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001034:	77 14                	ja     8100104a <malloc_extend_top+0x1fe>
81001036:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100103b:	8b 40 08             	mov    0x8(%eax),%eax
8100103e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001045:	e9 93 00 00 00       	jmp    810010dd <malloc_extend_top+0x291>
8100104a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100104d:	83 e8 0c             	sub    $0xc,%eax
81001050:	83 e0 f8             	and    $0xfffffff8,%eax
81001053:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001056:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001059:	8b 40 04             	mov    0x4(%eax),%eax
8100105c:	83 e0 01             	and    $0x1,%eax
8100105f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001062:	89 c2                	mov    %eax,%edx
81001064:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001067:	89 50 04             	mov    %edx,0x4(%eax)
8100106a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100106d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001070:	01 d0                	add    %edx,%eax
81001072:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001079:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100107c:	8d 50 04             	lea    0x4(%eax),%edx
8100107f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001082:	01 d0                	add    %edx,%eax
81001084:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100108b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100108f:	76 15                	jbe    810010a6 <malloc_extend_top+0x25a>
81001091:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001094:	83 c0 08             	add    $0x8,%eax
81001097:	83 ec 08             	sub    $0x8,%esp
8100109a:	50                   	push   %eax
8100109b:	ff 75 08             	push   0x8(%ebp)
8100109e:	e8 5c 1a 00 00       	call   81002aff <_free_r>
810010a3:	83 c4 10             	add    $0x10,%esp
810010a6:	a1 60 3d 00 81       	mov    0x81003d60,%eax
810010ab:	89 c2                	mov    %eax,%edx
810010ad:	a1 44 3d 00 81       	mov    0x81003d44,%eax
810010b2:	39 c2                	cmp    %eax,%edx
810010b4:	76 0a                	jbe    810010c0 <malloc_extend_top+0x274>
810010b6:	a1 60 3d 00 81       	mov    0x81003d60,%eax
810010bb:	a3 44 3d 00 81       	mov    %eax,0x81003d44
810010c0:	a1 60 3d 00 81       	mov    0x81003d60,%eax
810010c5:	89 c2                	mov    %eax,%edx
810010c7:	a1 48 3d 00 81       	mov    0x81003d48,%eax
810010cc:	39 c2                	cmp    %eax,%edx
810010ce:	76 0d                	jbe    810010dd <malloc_extend_top+0x291>
810010d0:	a1 60 3d 00 81       	mov    0x81003d60,%eax
810010d5:	a3 48 3d 00 81       	mov    %eax,0x81003d48
810010da:	eb 01                	jmp    810010dd <malloc_extend_top+0x291>
810010dc:	90                   	nop
810010dd:	c9                   	leave  
810010de:	c3                   	ret    

810010df <_malloc_r>:
810010df:	55                   	push   %ebp
810010e0:	89 e5                	mov    %esp,%ebp
810010e2:	53                   	push   %ebx
810010e3:	83 ec 44             	sub    $0x44,%esp
810010e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810010e9:	83 c0 0b             	add    $0xb,%eax
810010ec:	83 f8 16             	cmp    $0x16,%eax
810010ef:	76 0b                	jbe    810010fc <_malloc_r+0x1d>
810010f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810010f4:	83 c0 0b             	add    $0xb,%eax
810010f7:	83 e0 f8             	and    $0xfffffff8,%eax
810010fa:	eb 05                	jmp    81001101 <_malloc_r+0x22>
810010fc:	b8 10 00 00 00       	mov    $0x10,%eax
81001101:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001104:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001107:	85 c0                	test   %eax,%eax
81001109:	78 08                	js     81001113 <_malloc_r+0x34>
8100110b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100110e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001111:	73 13                	jae    81001126 <_malloc_r+0x47>
81001113:	8b 45 08             	mov    0x8(%ebp),%eax
81001116:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100111c:	b8 00 00 00 00       	mov    $0x0,%eax
81001121:	e9 d6 07 00 00       	jmp    810018fc <_malloc_r+0x81d>
81001126:	83 ec 0c             	sub    $0xc,%esp
81001129:	ff 75 08             	push   0x8(%ebp)
8100112c:	e8 d4 09 00 00       	call   81001b05 <__malloc_lock>
81001131:	83 c4 10             	add    $0x10,%esp
81001134:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100113b:	0f 87 b0 00 00 00    	ja     810011f1 <_malloc_r+0x112>
81001141:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001144:	c1 e8 03             	shr    $0x3,%eax
81001147:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100114a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100114d:	83 c0 01             	add    $0x1,%eax
81001150:	01 c0                	add    %eax,%eax
81001152:	c1 e0 02             	shl    $0x2,%eax
81001155:	05 00 39 00 81       	add    $0x81003900,%eax
8100115a:	83 e8 08             	sub    $0x8,%eax
8100115d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001160:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001163:	8b 40 0c             	mov    0xc(%eax),%eax
81001166:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001169:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100116c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100116f:	75 0d                	jne    8100117e <_malloc_r+0x9f>
81001171:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001175:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001178:	8b 40 0c             	mov    0xc(%eax),%eax
8100117b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100117e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001181:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001184:	74 62                	je     810011e8 <_malloc_r+0x109>
81001186:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001189:	8b 40 04             	mov    0x4(%eax),%eax
8100118c:	83 e0 fc             	and    $0xfffffffc,%eax
8100118f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001192:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001195:	8b 40 0c             	mov    0xc(%eax),%eax
81001198:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100119b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100119e:	8b 40 08             	mov    0x8(%eax),%eax
810011a1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810011a4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011a7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810011aa:	89 50 0c             	mov    %edx,0xc(%eax)
810011ad:	8b 45 d8             	mov    -0x28(%ebp),%eax
810011b0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810011b3:	89 50 08             	mov    %edx,0x8(%eax)
810011b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011b9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011bc:	01 d0                	add    %edx,%eax
810011be:	8b 50 04             	mov    0x4(%eax),%edx
810011c1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810011c4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011c7:	01 c8                	add    %ecx,%eax
810011c9:	83 ca 01             	or     $0x1,%edx
810011cc:	89 50 04             	mov    %edx,0x4(%eax)
810011cf:	83 ec 0c             	sub    $0xc,%esp
810011d2:	ff 75 08             	push   0x8(%ebp)
810011d5:	e8 31 09 00 00       	call   81001b0b <__malloc_unlock>
810011da:	83 c4 10             	add    $0x10,%esp
810011dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011e0:	83 c0 08             	add    $0x8,%eax
810011e3:	e9 14 07 00 00       	jmp    810018fc <_malloc_r+0x81d>
810011e8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810011ec:	e9 46 01 00 00       	jmp    81001337 <_malloc_r+0x258>
810011f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011f4:	c1 e8 09             	shr    $0x9,%eax
810011f7:	85 c0                	test   %eax,%eax
810011f9:	75 08                	jne    81001203 <_malloc_r+0x124>
810011fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011fe:	c1 e8 03             	shr    $0x3,%eax
81001201:	eb 77                	jmp    8100127a <_malloc_r+0x19b>
81001203:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001206:	c1 e8 09             	shr    $0x9,%eax
81001209:	83 f8 04             	cmp    $0x4,%eax
8100120c:	77 0b                	ja     81001219 <_malloc_r+0x13a>
8100120e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001211:	c1 e8 06             	shr    $0x6,%eax
81001214:	83 c0 38             	add    $0x38,%eax
81001217:	eb 61                	jmp    8100127a <_malloc_r+0x19b>
81001219:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100121c:	c1 e8 09             	shr    $0x9,%eax
8100121f:	83 f8 14             	cmp    $0x14,%eax
81001222:	77 0b                	ja     8100122f <_malloc_r+0x150>
81001224:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001227:	c1 e8 09             	shr    $0x9,%eax
8100122a:	83 c0 5b             	add    $0x5b,%eax
8100122d:	eb 4b                	jmp    8100127a <_malloc_r+0x19b>
8100122f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001232:	c1 e8 09             	shr    $0x9,%eax
81001235:	83 f8 54             	cmp    $0x54,%eax
81001238:	77 0b                	ja     81001245 <_malloc_r+0x166>
8100123a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100123d:	c1 e8 0c             	shr    $0xc,%eax
81001240:	83 c0 6e             	add    $0x6e,%eax
81001243:	eb 35                	jmp    8100127a <_malloc_r+0x19b>
81001245:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001248:	c1 e8 09             	shr    $0x9,%eax
8100124b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001250:	77 0b                	ja     8100125d <_malloc_r+0x17e>
81001252:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001255:	c1 e8 0f             	shr    $0xf,%eax
81001258:	83 c0 77             	add    $0x77,%eax
8100125b:	eb 1d                	jmp    8100127a <_malloc_r+0x19b>
8100125d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001260:	c1 e8 09             	shr    $0x9,%eax
81001263:	3d 54 05 00 00       	cmp    $0x554,%eax
81001268:	77 0b                	ja     81001275 <_malloc_r+0x196>
8100126a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100126d:	c1 e8 12             	shr    $0x12,%eax
81001270:	83 c0 7c             	add    $0x7c,%eax
81001273:	eb 05                	jmp    8100127a <_malloc_r+0x19b>
81001275:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100127a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100127d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001280:	83 c0 01             	add    $0x1,%eax
81001283:	01 c0                	add    %eax,%eax
81001285:	c1 e0 02             	shl    $0x2,%eax
81001288:	05 00 39 00 81       	add    $0x81003900,%eax
8100128d:	83 e8 08             	sub    $0x8,%eax
81001290:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001293:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001296:	8b 40 0c             	mov    0xc(%eax),%eax
81001299:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100129c:	e9 86 00 00 00       	jmp    81001327 <_malloc_r+0x248>
810012a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a4:	8b 40 04             	mov    0x4(%eax),%eax
810012a7:	83 e0 fc             	and    $0xfffffffc,%eax
810012aa:	89 45 cc             	mov    %eax,-0x34(%ebp)
810012ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012b0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810012b3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012b6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810012ba:	7e 06                	jle    810012c2 <_malloc_r+0x1e3>
810012bc:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810012c0:	eb 71                	jmp    81001333 <_malloc_r+0x254>
810012c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810012c6:	78 56                	js     8100131e <_malloc_r+0x23f>
810012c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012cb:	8b 40 0c             	mov    0xc(%eax),%eax
810012ce:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012d4:	8b 40 08             	mov    0x8(%eax),%eax
810012d7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012da:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012dd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012e0:	89 50 0c             	mov    %edx,0xc(%eax)
810012e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012e6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012e9:	89 50 08             	mov    %edx,0x8(%eax)
810012ec:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012ef:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012f2:	01 d0                	add    %edx,%eax
810012f4:	8b 50 04             	mov    0x4(%eax),%edx
810012f7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012fa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012fd:	01 c8                	add    %ecx,%eax
810012ff:	83 ca 01             	or     $0x1,%edx
81001302:	89 50 04             	mov    %edx,0x4(%eax)
81001305:	83 ec 0c             	sub    $0xc,%esp
81001308:	ff 75 08             	push   0x8(%ebp)
8100130b:	e8 fb 07 00 00       	call   81001b0b <__malloc_unlock>
81001310:	83 c4 10             	add    $0x10,%esp
81001313:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001316:	83 c0 08             	add    $0x8,%eax
81001319:	e9 de 05 00 00       	jmp    810018fc <_malloc_r+0x81d>
8100131e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001321:	8b 40 0c             	mov    0xc(%eax),%eax
81001324:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001327:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100132a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100132d:	0f 85 6e ff ff ff    	jne    810012a1 <_malloc_r+0x1c2>
81001333:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001337:	b8 08 39 00 81       	mov    $0x81003908,%eax
8100133c:	8b 40 08             	mov    0x8(%eax),%eax
8100133f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001342:	b8 08 39 00 81       	mov    $0x81003908,%eax
81001347:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100134a:	0f 84 9c 02 00 00    	je     810015ec <_malloc_r+0x50d>
81001350:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001353:	8b 40 04             	mov    0x4(%eax),%eax
81001356:	83 e0 fc             	and    $0xfffffffc,%eax
81001359:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100135c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100135f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001362:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001365:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001369:	7e 7a                	jle    810013e5 <_malloc_r+0x306>
8100136b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100136e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001371:	01 d0                	add    %edx,%eax
81001373:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001376:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001379:	83 c8 01             	or     $0x1,%eax
8100137c:	89 c2                	mov    %eax,%edx
8100137e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001381:	89 50 04             	mov    %edx,0x4(%eax)
81001384:	b8 08 39 00 81       	mov    $0x81003908,%eax
81001389:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100138c:	89 50 0c             	mov    %edx,0xc(%eax)
8100138f:	ba 08 39 00 81       	mov    $0x81003908,%edx
81001394:	8b 40 0c             	mov    0xc(%eax),%eax
81001397:	89 42 08             	mov    %eax,0x8(%edx)
8100139a:	ba 08 39 00 81       	mov    $0x81003908,%edx
8100139f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013a2:	89 50 0c             	mov    %edx,0xc(%eax)
810013a5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013a8:	8b 50 0c             	mov    0xc(%eax),%edx
810013ab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013ae:	89 50 08             	mov    %edx,0x8(%eax)
810013b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013b4:	83 c8 01             	or     $0x1,%eax
810013b7:	89 c2                	mov    %eax,%edx
810013b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013bc:	89 50 04             	mov    %edx,0x4(%eax)
810013bf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013c5:	01 c2                	add    %eax,%edx
810013c7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013ca:	89 02                	mov    %eax,(%edx)
810013cc:	83 ec 0c             	sub    $0xc,%esp
810013cf:	ff 75 08             	push   0x8(%ebp)
810013d2:	e8 34 07 00 00       	call   81001b0b <__malloc_unlock>
810013d7:	83 c4 10             	add    $0x10,%esp
810013da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013dd:	83 c0 08             	add    $0x8,%eax
810013e0:	e9 17 05 00 00       	jmp    810018fc <_malloc_r+0x81d>
810013e5:	b8 08 39 00 81       	mov    $0x81003908,%eax
810013ea:	ba 08 39 00 81       	mov    $0x81003908,%edx
810013ef:	89 50 0c             	mov    %edx,0xc(%eax)
810013f2:	ba 08 39 00 81       	mov    $0x81003908,%edx
810013f7:	8b 40 0c             	mov    0xc(%eax),%eax
810013fa:	89 42 08             	mov    %eax,0x8(%edx)
810013fd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001401:	78 32                	js     81001435 <_malloc_r+0x356>
81001403:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001406:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001409:	01 d0                	add    %edx,%eax
8100140b:	8b 50 04             	mov    0x4(%eax),%edx
8100140e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001411:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001414:	01 c8                	add    %ecx,%eax
81001416:	83 ca 01             	or     $0x1,%edx
81001419:	89 50 04             	mov    %edx,0x4(%eax)
8100141c:	83 ec 0c             	sub    $0xc,%esp
8100141f:	ff 75 08             	push   0x8(%ebp)
81001422:	e8 e4 06 00 00       	call   81001b0b <__malloc_unlock>
81001427:	83 c4 10             	add    $0x10,%esp
8100142a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100142d:	83 c0 08             	add    $0x8,%eax
81001430:	e9 c7 04 00 00       	jmp    810018fc <_malloc_r+0x81d>
81001435:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100143c:	77 7f                	ja     810014bd <_malloc_r+0x3de>
8100143e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001441:	c1 e8 03             	shr    $0x3,%eax
81001444:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001447:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100144c:	8b 58 04             	mov    0x4(%eax),%ebx
8100144f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001452:	8d 50 03             	lea    0x3(%eax),%edx
81001455:	85 c0                	test   %eax,%eax
81001457:	0f 48 c2             	cmovs  %edx,%eax
8100145a:	c1 f8 02             	sar    $0x2,%eax
8100145d:	ba 01 00 00 00       	mov    $0x1,%edx
81001462:	89 c1                	mov    %eax,%ecx
81001464:	d3 e2                	shl    %cl,%edx
81001466:	89 d0                	mov    %edx,%eax
81001468:	ba 00 39 00 81       	mov    $0x81003900,%edx
8100146d:	09 d8                	or     %ebx,%eax
8100146f:	89 42 04             	mov    %eax,0x4(%edx)
81001472:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001475:	83 c0 01             	add    $0x1,%eax
81001478:	01 c0                	add    %eax,%eax
8100147a:	c1 e0 02             	shl    $0x2,%eax
8100147d:	05 00 39 00 81       	add    $0x81003900,%eax
81001482:	83 e8 08             	sub    $0x8,%eax
81001485:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001488:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100148b:	8b 40 08             	mov    0x8(%eax),%eax
8100148e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001491:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001494:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001497:	89 50 0c             	mov    %edx,0xc(%eax)
8100149a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149d:	8b 55 dc             	mov    -0x24(%ebp),%edx
810014a0:	89 50 08             	mov    %edx,0x8(%eax)
810014a3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810014a6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014a9:	89 50 08             	mov    %edx,0x8(%eax)
810014ac:	8b 45 d8             	mov    -0x28(%ebp),%eax
810014af:	8b 50 08             	mov    0x8(%eax),%edx
810014b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014b5:	89 50 0c             	mov    %edx,0xc(%eax)
810014b8:	e9 2f 01 00 00       	jmp    810015ec <_malloc_r+0x50d>
810014bd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014c0:	c1 e8 09             	shr    $0x9,%eax
810014c3:	85 c0                	test   %eax,%eax
810014c5:	75 08                	jne    810014cf <_malloc_r+0x3f0>
810014c7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014ca:	c1 e8 03             	shr    $0x3,%eax
810014cd:	eb 77                	jmp    81001546 <_malloc_r+0x467>
810014cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d2:	c1 e8 09             	shr    $0x9,%eax
810014d5:	83 f8 04             	cmp    $0x4,%eax
810014d8:	77 0b                	ja     810014e5 <_malloc_r+0x406>
810014da:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014dd:	c1 e8 06             	shr    $0x6,%eax
810014e0:	83 c0 38             	add    $0x38,%eax
810014e3:	eb 61                	jmp    81001546 <_malloc_r+0x467>
810014e5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e8:	c1 e8 09             	shr    $0x9,%eax
810014eb:	83 f8 14             	cmp    $0x14,%eax
810014ee:	77 0b                	ja     810014fb <_malloc_r+0x41c>
810014f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f3:	c1 e8 09             	shr    $0x9,%eax
810014f6:	83 c0 5b             	add    $0x5b,%eax
810014f9:	eb 4b                	jmp    81001546 <_malloc_r+0x467>
810014fb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014fe:	c1 e8 09             	shr    $0x9,%eax
81001501:	83 f8 54             	cmp    $0x54,%eax
81001504:	77 0b                	ja     81001511 <_malloc_r+0x432>
81001506:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001509:	c1 e8 0c             	shr    $0xc,%eax
8100150c:	83 c0 6e             	add    $0x6e,%eax
8100150f:	eb 35                	jmp    81001546 <_malloc_r+0x467>
81001511:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001514:	c1 e8 09             	shr    $0x9,%eax
81001517:	3d 54 01 00 00       	cmp    $0x154,%eax
8100151c:	77 0b                	ja     81001529 <_malloc_r+0x44a>
8100151e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001521:	c1 e8 0f             	shr    $0xf,%eax
81001524:	83 c0 77             	add    $0x77,%eax
81001527:	eb 1d                	jmp    81001546 <_malloc_r+0x467>
81001529:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100152c:	c1 e8 09             	shr    $0x9,%eax
8100152f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001534:	77 0b                	ja     81001541 <_malloc_r+0x462>
81001536:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001539:	c1 e8 12             	shr    $0x12,%eax
8100153c:	83 c0 7c             	add    $0x7c,%eax
8100153f:	eb 05                	jmp    81001546 <_malloc_r+0x467>
81001541:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001546:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001549:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100154c:	83 c0 01             	add    $0x1,%eax
8100154f:	01 c0                	add    %eax,%eax
81001551:	c1 e0 02             	shl    $0x2,%eax
81001554:	05 00 39 00 81       	add    $0x81003900,%eax
81001559:	83 e8 08             	sub    $0x8,%eax
8100155c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100155f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001562:	8b 40 08             	mov    0x8(%eax),%eax
81001565:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001568:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100156b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100156e:	75 36                	jne    810015a6 <_malloc_r+0x4c7>
81001570:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001575:	8b 58 04             	mov    0x4(%eax),%ebx
81001578:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100157b:	8d 50 03             	lea    0x3(%eax),%edx
8100157e:	85 c0                	test   %eax,%eax
81001580:	0f 48 c2             	cmovs  %edx,%eax
81001583:	c1 f8 02             	sar    $0x2,%eax
81001586:	ba 01 00 00 00       	mov    $0x1,%edx
8100158b:	89 c1                	mov    %eax,%ecx
8100158d:	d3 e2                	shl    %cl,%edx
8100158f:	89 d0                	mov    %edx,%eax
81001591:	ba 00 39 00 81       	mov    $0x81003900,%edx
81001596:	09 d8                	or     %ebx,%eax
81001598:	89 42 04             	mov    %eax,0x4(%edx)
8100159b:	eb 28                	jmp    810015c5 <_malloc_r+0x4e6>
8100159d:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015a0:	8b 40 08             	mov    0x8(%eax),%eax
810015a3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015a6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015a9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810015ac:	74 0e                	je     810015bc <_malloc_r+0x4dd>
810015ae:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015b1:	8b 40 04             	mov    0x4(%eax),%eax
810015b4:	83 e0 fc             	and    $0xfffffffc,%eax
810015b7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810015ba:	72 e1                	jb     8100159d <_malloc_r+0x4be>
810015bc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015bf:	8b 40 0c             	mov    0xc(%eax),%eax
810015c2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015c8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015cb:	89 50 0c             	mov    %edx,0xc(%eax)
810015ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015d1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015d4:	89 50 08             	mov    %edx,0x8(%eax)
810015d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015da:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015dd:	89 50 08             	mov    %edx,0x8(%eax)
810015e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015e3:	8b 50 08             	mov    0x8(%eax),%edx
810015e6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015e9:	89 50 0c             	mov    %edx,0xc(%eax)
810015ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ef:	8d 50 03             	lea    0x3(%eax),%edx
810015f2:	85 c0                	test   %eax,%eax
810015f4:	0f 48 c2             	cmovs  %edx,%eax
810015f7:	c1 f8 02             	sar    $0x2,%eax
810015fa:	ba 01 00 00 00       	mov    $0x1,%edx
810015ff:	89 c1                	mov    %eax,%ecx
81001601:	d3 e2                	shl    %cl,%edx
81001603:	89 d0                	mov    %edx,%eax
81001605:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001608:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100160d:	8b 40 04             	mov    0x4(%eax),%eax
81001610:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001613:	0f 87 13 02 00 00    	ja     8100182c <_malloc_r+0x74d>
81001619:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100161e:	8b 40 04             	mov    0x4(%eax),%eax
81001621:	23 45 e4             	and    -0x1c(%ebp),%eax
81001624:	85 c0                	test   %eax,%eax
81001626:	75 27                	jne    8100164f <_malloc_r+0x570>
81001628:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100162b:	83 e0 fc             	and    $0xfffffffc,%eax
8100162e:	83 c0 04             	add    $0x4,%eax
81001631:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001634:	d1 65 e4             	shll   -0x1c(%ebp)
81001637:	eb 07                	jmp    81001640 <_malloc_r+0x561>
81001639:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100163d:	d1 65 e4             	shll   -0x1c(%ebp)
81001640:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001645:	8b 40 04             	mov    0x4(%eax),%eax
81001648:	23 45 e4             	and    -0x1c(%ebp),%eax
8100164b:	85 c0                	test   %eax,%eax
8100164d:	74 ea                	je     81001639 <_malloc_r+0x55a>
8100164f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001652:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001655:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001658:	83 c0 01             	add    $0x1,%eax
8100165b:	01 c0                	add    %eax,%eax
8100165d:	c1 e0 02             	shl    $0x2,%eax
81001660:	05 00 39 00 81       	add    $0x81003900,%eax
81001665:	83 e8 08             	sub    $0x8,%eax
81001668:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100166b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100166e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001671:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001674:	8b 40 0c             	mov    0xc(%eax),%eax
81001677:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100167a:	e9 22 01 00 00       	jmp    810017a1 <_malloc_r+0x6c2>
8100167f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001682:	8b 40 04             	mov    0x4(%eax),%eax
81001685:	83 e0 fc             	and    $0xfffffffc,%eax
81001688:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100168b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100168e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001691:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001694:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001698:	0f 8e 9e 00 00 00    	jle    8100173c <_malloc_r+0x65d>
8100169e:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016a4:	01 d0                	add    %edx,%eax
810016a6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810016a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016ac:	83 c8 01             	or     $0x1,%eax
810016af:	89 c2                	mov    %eax,%edx
810016b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b4:	89 50 04             	mov    %edx,0x4(%eax)
810016b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ba:	8b 40 0c             	mov    0xc(%eax),%eax
810016bd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c3:	8b 40 08             	mov    0x8(%eax),%eax
810016c6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016c9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016cc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016cf:	89 50 0c             	mov    %edx,0xc(%eax)
810016d2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016d8:	89 50 08             	mov    %edx,0x8(%eax)
810016db:	b8 08 39 00 81       	mov    $0x81003908,%eax
810016e0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810016e3:	89 50 0c             	mov    %edx,0xc(%eax)
810016e6:	ba 08 39 00 81       	mov    $0x81003908,%edx
810016eb:	8b 40 0c             	mov    0xc(%eax),%eax
810016ee:	89 42 08             	mov    %eax,0x8(%edx)
810016f1:	ba 08 39 00 81       	mov    $0x81003908,%edx
810016f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016f9:	89 50 0c             	mov    %edx,0xc(%eax)
810016fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016ff:	8b 50 0c             	mov    0xc(%eax),%edx
81001702:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001705:	89 50 08             	mov    %edx,0x8(%eax)
81001708:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100170b:	83 c8 01             	or     $0x1,%eax
8100170e:	89 c2                	mov    %eax,%edx
81001710:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001713:	89 50 04             	mov    %edx,0x4(%eax)
81001716:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001719:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100171c:	01 c2                	add    %eax,%edx
8100171e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001721:	89 02                	mov    %eax,(%edx)
81001723:	83 ec 0c             	sub    $0xc,%esp
81001726:	ff 75 08             	push   0x8(%ebp)
81001729:	e8 dd 03 00 00       	call   81001b0b <__malloc_unlock>
8100172e:	83 c4 10             	add    $0x10,%esp
81001731:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001734:	83 c0 08             	add    $0x8,%eax
81001737:	e9 c0 01 00 00       	jmp    810018fc <_malloc_r+0x81d>
8100173c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001740:	78 56                	js     81001798 <_malloc_r+0x6b9>
81001742:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001745:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001748:	01 d0                	add    %edx,%eax
8100174a:	8b 50 04             	mov    0x4(%eax),%edx
8100174d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001750:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001753:	01 c8                	add    %ecx,%eax
81001755:	83 ca 01             	or     $0x1,%edx
81001758:	89 50 04             	mov    %edx,0x4(%eax)
8100175b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100175e:	8b 40 0c             	mov    0xc(%eax),%eax
81001761:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001764:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001767:	8b 40 08             	mov    0x8(%eax),%eax
8100176a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100176d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001770:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001773:	89 50 0c             	mov    %edx,0xc(%eax)
81001776:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001779:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100177c:	89 50 08             	mov    %edx,0x8(%eax)
8100177f:	83 ec 0c             	sub    $0xc,%esp
81001782:	ff 75 08             	push   0x8(%ebp)
81001785:	e8 81 03 00 00       	call   81001b0b <__malloc_unlock>
8100178a:	83 c4 10             	add    $0x10,%esp
8100178d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001790:	83 c0 08             	add    $0x8,%eax
81001793:	e9 64 01 00 00       	jmp    810018fc <_malloc_r+0x81d>
81001798:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100179b:	8b 40 0c             	mov    0xc(%eax),%eax
8100179e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810017a7:	0f 85 d2 fe ff ff    	jne    8100167f <_malloc_r+0x5a0>
810017ad:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810017b1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810017b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017b8:	83 e0 03             	and    $0x3,%eax
810017bb:	85 c0                	test   %eax,%eax
810017bd:	0f 85 ae fe ff ff    	jne    81001671 <_malloc_r+0x592>
810017c3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017c6:	83 e0 03             	and    $0x3,%eax
810017c9:	85 c0                	test   %eax,%eax
810017cb:	75 19                	jne    810017e6 <_malloc_r+0x707>
810017cd:	b8 00 39 00 81       	mov    $0x81003900,%eax
810017d2:	8b 48 04             	mov    0x4(%eax),%ecx
810017d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017d8:	f7 d0                	not    %eax
810017da:	ba 00 39 00 81       	mov    $0x81003900,%edx
810017df:	21 c8                	and    %ecx,%eax
810017e1:	89 42 04             	mov    %eax,0x4(%edx)
810017e4:	eb 13                	jmp    810017f9 <_malloc_r+0x71a>
810017e6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810017ea:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810017ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810017f1:	8b 40 08             	mov    0x8(%eax),%eax
810017f4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810017f7:	74 ca                	je     810017c3 <_malloc_r+0x6e4>
810017f9:	d1 65 e4             	shll   -0x1c(%ebp)
810017fc:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001801:	8b 40 04             	mov    0x4(%eax),%eax
81001804:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001807:	77 23                	ja     8100182c <_malloc_r+0x74d>
81001809:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100180d:	74 1d                	je     8100182c <_malloc_r+0x74d>
8100180f:	eb 07                	jmp    81001818 <_malloc_r+0x739>
81001811:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001815:	d1 65 e4             	shll   -0x1c(%ebp)
81001818:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100181d:	8b 40 04             	mov    0x4(%eax),%eax
81001820:	23 45 e4             	and    -0x1c(%ebp),%eax
81001823:	85 c0                	test   %eax,%eax
81001825:	74 ea                	je     81001811 <_malloc_r+0x732>
81001827:	e9 23 fe ff ff       	jmp    8100164f <_malloc_r+0x570>
8100182c:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001831:	8b 40 08             	mov    0x8(%eax),%eax
81001834:	8b 40 04             	mov    0x4(%eax),%eax
81001837:	83 e0 fc             	and    $0xfffffffc,%eax
8100183a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100183d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001840:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001845:	8b 40 08             	mov    0x8(%eax),%eax
81001848:	8b 40 04             	mov    0x4(%eax),%eax
8100184b:	83 e0 fc             	and    $0xfffffffc,%eax
8100184e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001851:	77 06                	ja     81001859 <_malloc_r+0x77a>
81001853:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001857:	7f 53                	jg     810018ac <_malloc_r+0x7cd>
81001859:	83 ec 08             	sub    $0x8,%esp
8100185c:	ff 75 d0             	push   -0x30(%ebp)
8100185f:	ff 75 08             	push   0x8(%ebp)
81001862:	e8 e5 f5 ff ff       	call   81000e4c <malloc_extend_top>
81001867:	83 c4 10             	add    $0x10,%esp
8100186a:	b8 00 39 00 81       	mov    $0x81003900,%eax
8100186f:	8b 40 08             	mov    0x8(%eax),%eax
81001872:	8b 40 04             	mov    0x4(%eax),%eax
81001875:	83 e0 fc             	and    $0xfffffffc,%eax
81001878:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100187b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100187e:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001883:	8b 40 08             	mov    0x8(%eax),%eax
81001886:	8b 40 04             	mov    0x4(%eax),%eax
81001889:	83 e0 fc             	and    $0xfffffffc,%eax
8100188c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100188f:	77 06                	ja     81001897 <_malloc_r+0x7b8>
81001891:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001895:	7f 15                	jg     810018ac <_malloc_r+0x7cd>
81001897:	83 ec 0c             	sub    $0xc,%esp
8100189a:	ff 75 08             	push   0x8(%ebp)
8100189d:	e8 69 02 00 00       	call   81001b0b <__malloc_unlock>
810018a2:	83 c4 10             	add    $0x10,%esp
810018a5:	b8 00 00 00 00       	mov    $0x0,%eax
810018aa:	eb 50                	jmp    810018fc <_malloc_r+0x81d>
810018ac:	b8 00 39 00 81       	mov    $0x81003900,%eax
810018b1:	8b 40 08             	mov    0x8(%eax),%eax
810018b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018b7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018ba:	83 c8 01             	or     $0x1,%eax
810018bd:	89 c2                	mov    %eax,%edx
810018bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c2:	89 50 04             	mov    %edx,0x4(%eax)
810018c5:	ba 00 39 00 81       	mov    $0x81003900,%edx
810018ca:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810018cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018d0:	01 c8                	add    %ecx,%eax
810018d2:	89 42 08             	mov    %eax,0x8(%edx)
810018d5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810018d8:	83 c8 01             	or     $0x1,%eax
810018db:	89 c2                	mov    %eax,%edx
810018dd:	b8 00 39 00 81       	mov    $0x81003900,%eax
810018e2:	8b 40 08             	mov    0x8(%eax),%eax
810018e5:	89 50 04             	mov    %edx,0x4(%eax)
810018e8:	83 ec 0c             	sub    $0xc,%esp
810018eb:	ff 75 08             	push   0x8(%ebp)
810018ee:	e8 18 02 00 00       	call   81001b0b <__malloc_unlock>
810018f3:	83 c4 10             	add    $0x10,%esp
810018f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018f9:	83 c0 08             	add    $0x8,%eax
810018fc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810018ff:	c9                   	leave  
81001900:	c3                   	ret    
81001901:	66 90                	xchg   %ax,%ax
81001903:	66 90                	xchg   %ax,%ax
81001905:	66 90                	xchg   %ax,%ax
81001907:	66 90                	xchg   %ax,%ax
81001909:	66 90                	xchg   %ax,%ax
8100190b:	66 90                	xchg   %ax,%ax
8100190d:	66 90                	xchg   %ax,%ax
8100190f:	90                   	nop

81001910 <memchr>:
81001910:	55                   	push   %ebp
81001911:	89 e5                	mov    %esp,%ebp
81001913:	57                   	push   %edi
81001914:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001918:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100191b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100191e:	31 d2                	xor    %edx,%edx
81001920:	85 c9                	test   %ecx,%ecx
81001922:	74 79                	je     8100199d <L20>
81001924:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100192a:	74 28                	je     81001954 <L5>
8100192c:	3a 07                	cmp    (%edi),%al
8100192e:	74 6a                	je     8100199a <L15>
81001930:	47                   	inc    %edi
81001931:	49                   	dec    %ecx
81001932:	74 69                	je     8100199d <L20>
81001934:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100193a:	74 18                	je     81001954 <L5>
8100193c:	3a 07                	cmp    (%edi),%al
8100193e:	74 5a                	je     8100199a <L15>
81001940:	47                   	inc    %edi
81001941:	49                   	dec    %ecx
81001942:	74 59                	je     8100199d <L20>
81001944:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100194a:	74 08                	je     81001954 <L5>
8100194c:	3a 07                	cmp    (%edi),%al
8100194e:	74 4a                	je     8100199a <L15>
81001950:	47                   	inc    %edi
81001951:	49                   	dec    %ecx
81001952:	74 49                	je     8100199d <L20>

81001954 <L5>:
81001954:	88 c4                	mov    %al,%ah
81001956:	89 c2                	mov    %eax,%edx
81001958:	c1 e2 10             	shl    $0x10,%edx
8100195b:	09 d0                	or     %edx,%eax
8100195d:	53                   	push   %ebx
8100195e:	66 90                	xchg   %ax,%ax

81001960 <L8>:
81001960:	83 e9 04             	sub    $0x4,%ecx
81001963:	72 1c                	jb     81001981 <L9>
81001965:	8b 17                	mov    (%edi),%edx
81001967:	83 c7 04             	add    $0x4,%edi
8100196a:	31 c2                	xor    %eax,%edx
8100196c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001972:	f7 d2                	not    %edx
81001974:	21 d3                	and    %edx,%ebx
81001976:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100197c:	74 e2                	je     81001960 <L8>
8100197e:	83 ef 04             	sub    $0x4,%edi

81001981 <L9>:
81001981:	5b                   	pop    %ebx
81001982:	31 d2                	xor    %edx,%edx
81001984:	83 c1 04             	add    $0x4,%ecx
81001987:	74 14                	je     8100199d <L20>
81001989:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001990 <L10>:
81001990:	3a 07                	cmp    (%edi),%al
81001992:	74 06                	je     8100199a <L15>
81001994:	47                   	inc    %edi
81001995:	49                   	dec    %ecx
81001996:	75 f8                	jne    81001990 <L10>
81001998:	31 ff                	xor    %edi,%edi

8100199a <L15>:
8100199a:	4a                   	dec    %edx
8100199b:	21 fa                	and    %edi,%edx

8100199d <L20>:
8100199d:	89 d0                	mov    %edx,%eax
8100199f:	8d 65 fc             	lea    -0x4(%ebp),%esp
810019a2:	5f                   	pop    %edi
810019a3:	c9                   	leave  
810019a4:	c3                   	ret    
810019a5:	66 90                	xchg   %ax,%ax
810019a7:	90                   	nop

810019a8 <memcpy>:
810019a8:	55                   	push   %ebp
810019a9:	89 e5                	mov    %esp,%ebp
810019ab:	56                   	push   %esi
810019ac:	57                   	push   %edi
810019ad:	53                   	push   %ebx
810019ae:	8b 7d 08             	mov    0x8(%ebp),%edi
810019b1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019b4:	8b 75 0c             	mov    0xc(%ebp),%esi
810019b7:	fc                   	cld    
810019b8:	83 f9 08             	cmp    $0x8,%ecx
810019bb:	76 26                	jbe    810019e3 <memcpy+0x3b>
810019bd:	89 fa                	mov    %edi,%edx
810019bf:	89 cb                	mov    %ecx,%ebx
810019c1:	83 e2 03             	and    $0x3,%edx
810019c4:	74 10                	je     810019d6 <memcpy+0x2e>
810019c6:	b9 04 00 00 00       	mov    $0x4,%ecx
810019cb:	29 d1                	sub    %edx,%ecx
810019cd:	83 e1 03             	and    $0x3,%ecx
810019d0:	29 cb                	sub    %ecx,%ebx
810019d2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019d4:	89 d9                	mov    %ebx,%ecx
810019d6:	c1 e9 02             	shr    $0x2,%ecx
810019d9:	8d 76 00             	lea    0x0(%esi),%esi
810019dc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810019de:	89 d9                	mov    %ebx,%ecx
810019e0:	83 e1 03             	and    $0x3,%ecx
810019e3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019e5:	8b 45 08             	mov    0x8(%ebp),%eax
810019e8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810019eb:	5b                   	pop    %ebx
810019ec:	5f                   	pop    %edi
810019ed:	5e                   	pop    %esi
810019ee:	c9                   	leave  
810019ef:	c3                   	ret    

810019f0 <memmove>:
810019f0:	55                   	push   %ebp
810019f1:	89 e5                	mov    %esp,%ebp
810019f3:	56                   	push   %esi
810019f4:	57                   	push   %edi
810019f5:	53                   	push   %ebx
810019f6:	8b 7d 08             	mov    0x8(%ebp),%edi
810019f9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019fc:	8b 75 0c             	mov    0xc(%ebp),%esi
810019ff:	fc                   	cld    
81001a00:	39 fe                	cmp    %edi,%esi
81001a02:	73 43                	jae    81001a47 <memmove+0x57>
81001a04:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001a08:	39 df                	cmp    %ebx,%edi
81001a0a:	77 3b                	ja     81001a47 <memmove+0x57>
81001a0c:	01 ce                	add    %ecx,%esi
81001a0e:	01 cf                	add    %ecx,%edi
81001a10:	fd                   	std    
81001a11:	83 f9 08             	cmp    $0x8,%ecx
81001a14:	76 2b                	jbe    81001a41 <memmove+0x51>
81001a16:	89 fa                	mov    %edi,%edx
81001a18:	89 cb                	mov    %ecx,%ebx
81001a1a:	83 e2 03             	and    $0x3,%edx
81001a1d:	74 0c                	je     81001a2b <memmove+0x3b>
81001a1f:	89 d1                	mov    %edx,%ecx
81001a21:	4e                   	dec    %esi
81001a22:	4f                   	dec    %edi
81001a23:	29 cb                	sub    %ecx,%ebx
81001a25:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a27:	89 d9                	mov    %ebx,%ecx
81001a29:	46                   	inc    %esi
81001a2a:	47                   	inc    %edi
81001a2b:	c1 e9 02             	shr    $0x2,%ecx
81001a2e:	83 ee 04             	sub    $0x4,%esi
81001a31:	83 ef 04             	sub    $0x4,%edi
81001a34:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a36:	83 c6 04             	add    $0x4,%esi
81001a39:	83 c7 04             	add    $0x4,%edi
81001a3c:	89 d9                	mov    %ebx,%ecx
81001a3e:	83 e1 03             	and    $0x3,%ecx
81001a41:	4e                   	dec    %esi
81001a42:	4f                   	dec    %edi
81001a43:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a45:	eb 2a                	jmp    81001a71 <memmove+0x81>
81001a47:	83 f9 08             	cmp    $0x8,%ecx
81001a4a:	76 23                	jbe    81001a6f <memmove+0x7f>
81001a4c:	89 fa                	mov    %edi,%edx
81001a4e:	89 cb                	mov    %ecx,%ebx
81001a50:	83 e2 03             	and    $0x3,%edx
81001a53:	74 10                	je     81001a65 <memmove+0x75>
81001a55:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a5a:	29 d1                	sub    %edx,%ecx
81001a5c:	83 e1 03             	and    $0x3,%ecx
81001a5f:	29 cb                	sub    %ecx,%ebx
81001a61:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a63:	89 d9                	mov    %ebx,%ecx
81001a65:	c1 e9 02             	shr    $0x2,%ecx
81001a68:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a6a:	89 d9                	mov    %ebx,%ecx
81001a6c:	83 e1 03             	and    $0x3,%ecx
81001a6f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a71:	8b 45 08             	mov    0x8(%ebp),%eax
81001a74:	fc                   	cld    
81001a75:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001a78:	5b                   	pop    %ebx
81001a79:	5f                   	pop    %edi
81001a7a:	5e                   	pop    %esi
81001a7b:	c9                   	leave  
81001a7c:	c3                   	ret    

81001a7d <memset>:
81001a7d:	55                   	push   %ebp
81001a7e:	89 e5                	mov    %esp,%ebp
81001a80:	57                   	push   %edi
81001a81:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a84:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a88:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a8b:	fc                   	cld    
81001a8c:	83 f9 10             	cmp    $0x10,%ecx
81001a8f:	76 69                	jbe    81001afa <memset+0x7d>
81001a91:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a97:	74 4c                	je     81001ae5 <memset+0x68>
81001a99:	88 07                	mov    %al,(%edi)
81001a9b:	47                   	inc    %edi
81001a9c:	49                   	dec    %ecx
81001a9d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001aa3:	74 40                	je     81001ae5 <memset+0x68>
81001aa5:	88 07                	mov    %al,(%edi)
81001aa7:	47                   	inc    %edi
81001aa8:	49                   	dec    %ecx
81001aa9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001aaf:	74 34                	je     81001ae5 <memset+0x68>
81001ab1:	88 07                	mov    %al,(%edi)
81001ab3:	47                   	inc    %edi
81001ab4:	49                   	dec    %ecx
81001ab5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001abb:	74 28                	je     81001ae5 <memset+0x68>
81001abd:	88 07                	mov    %al,(%edi)
81001abf:	47                   	inc    %edi
81001ac0:	49                   	dec    %ecx
81001ac1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ac7:	74 1c                	je     81001ae5 <memset+0x68>
81001ac9:	88 07                	mov    %al,(%edi)
81001acb:	47                   	inc    %edi
81001acc:	49                   	dec    %ecx
81001acd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ad3:	74 10                	je     81001ae5 <memset+0x68>
81001ad5:	88 07                	mov    %al,(%edi)
81001ad7:	47                   	inc    %edi
81001ad8:	49                   	dec    %ecx
81001ad9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001adf:	74 04                	je     81001ae5 <memset+0x68>
81001ae1:	88 07                	mov    %al,(%edi)
81001ae3:	47                   	inc    %edi
81001ae4:	49                   	dec    %ecx
81001ae5:	88 c4                	mov    %al,%ah
81001ae7:	89 c2                	mov    %eax,%edx
81001ae9:	c1 e2 10             	shl    $0x10,%edx
81001aec:	09 d0                	or     %edx,%eax
81001aee:	89 ca                	mov    %ecx,%edx
81001af0:	c1 e9 02             	shr    $0x2,%ecx
81001af3:	83 e2 03             	and    $0x3,%edx
81001af6:	f3 ab                	rep stos %eax,%es:(%edi)
81001af8:	89 d1                	mov    %edx,%ecx
81001afa:	f3 aa                	rep stos %al,%es:(%edi)
81001afc:	8b 45 08             	mov    0x8(%ebp),%eax
81001aff:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001b02:	5f                   	pop    %edi
81001b03:	c9                   	leave  
81001b04:	c3                   	ret    

81001b05 <__malloc_lock>:
81001b05:	55                   	push   %ebp
81001b06:	89 e5                	mov    %esp,%ebp
81001b08:	90                   	nop
81001b09:	5d                   	pop    %ebp
81001b0a:	c3                   	ret    

81001b0b <__malloc_unlock>:
81001b0b:	55                   	push   %ebp
81001b0c:	89 e5                	mov    %esp,%ebp
81001b0e:	90                   	nop
81001b0f:	5d                   	pop    %ebp
81001b10:	c3                   	ret    

81001b11 <_realloc_r>:
81001b11:	55                   	push   %ebp
81001b12:	89 e5                	mov    %esp,%ebp
81001b14:	83 ec 78             	sub    $0x78,%esp
81001b17:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001b1b:	75 16                	jne    81001b33 <_realloc_r+0x22>
81001b1d:	83 ec 08             	sub    $0x8,%esp
81001b20:	ff 75 10             	push   0x10(%ebp)
81001b23:	ff 75 08             	push   0x8(%ebp)
81001b26:	e8 b4 f5 ff ff       	call   810010df <_malloc_r>
81001b2b:	83 c4 10             	add    $0x10,%esp
81001b2e:	e9 b6 08 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
81001b33:	83 ec 0c             	sub    $0xc,%esp
81001b36:	ff 75 08             	push   0x8(%ebp)
81001b39:	e8 c7 ff ff ff       	call   81001b05 <__malloc_lock>
81001b3e:	83 c4 10             	add    $0x10,%esp
81001b41:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b44:	83 e8 08             	sub    $0x8,%eax
81001b47:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001b4a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b50:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b53:	8b 40 04             	mov    0x4(%eax),%eax
81001b56:	83 e0 fc             	and    $0xfffffffc,%eax
81001b59:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001b5c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001b5f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b62:	8b 45 10             	mov    0x10(%ebp),%eax
81001b65:	83 c0 0b             	add    $0xb,%eax
81001b68:	83 f8 16             	cmp    $0x16,%eax
81001b6b:	76 0b                	jbe    81001b78 <_realloc_r+0x67>
81001b6d:	8b 45 10             	mov    0x10(%ebp),%eax
81001b70:	83 c0 0b             	add    $0xb,%eax
81001b73:	83 e0 f8             	and    $0xfffffff8,%eax
81001b76:	eb 05                	jmp    81001b7d <_realloc_r+0x6c>
81001b78:	b8 10 00 00 00       	mov    $0x10,%eax
81001b7d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001b80:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001b83:	85 c0                	test   %eax,%eax
81001b85:	78 08                	js     81001b8f <_realloc_r+0x7e>
81001b87:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001b8a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001b8d:	73 13                	jae    81001ba2 <_realloc_r+0x91>
81001b8f:	8b 45 08             	mov    0x8(%ebp),%eax
81001b92:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001b98:	b8 00 00 00 00       	mov    $0x0,%eax
81001b9d:	e9 47 08 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
81001ba2:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001ba5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001ba8:	39 c2                	cmp    %eax,%edx
81001baa:	0f 8d 8b 07 00 00    	jge    8100233b <_realloc_r+0x82a>
81001bb0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001bb3:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001bb6:	01 d0                	add    %edx,%eax
81001bb8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001bbb:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001bc0:	8b 40 08             	mov    0x8(%eax),%eax
81001bc3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001bc6:	74 1e                	je     81001be6 <_realloc_r+0xd5>
81001bc8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bcb:	8b 40 04             	mov    0x4(%eax),%eax
81001bce:	83 e0 fe             	and    $0xfffffffe,%eax
81001bd1:	89 c2                	mov    %eax,%edx
81001bd3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bd6:	01 d0                	add    %edx,%eax
81001bd8:	8b 40 04             	mov    0x4(%eax),%eax
81001bdb:	83 e0 01             	and    $0x1,%eax
81001bde:	85 c0                	test   %eax,%eax
81001be0:	0f 85 ca 00 00 00    	jne    81001cb0 <_realloc_r+0x19f>
81001be6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001be9:	8b 40 04             	mov    0x4(%eax),%eax
81001bec:	83 e0 fc             	and    $0xfffffffc,%eax
81001bef:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001bf2:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001bf7:	8b 40 08             	mov    0x8(%eax),%eax
81001bfa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001bfd:	75 71                	jne    81001c70 <_realloc_r+0x15f>
81001bff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c05:	01 d0                	add    %edx,%eax
81001c07:	89 c2                	mov    %eax,%edx
81001c09:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c0c:	83 c0 10             	add    $0x10,%eax
81001c0f:	39 c2                	cmp    %eax,%edx
81001c11:	0f 8c a9 00 00 00    	jl     81001cc0 <_realloc_r+0x1af>
81001c17:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c1a:	01 45 f0             	add    %eax,-0x10(%ebp)
81001c1d:	ba 00 39 00 81       	mov    $0x81003900,%edx
81001c22:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001c25:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c28:	01 c8                	add    %ecx,%eax
81001c2a:	89 42 08             	mov    %eax,0x8(%edx)
81001c2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c30:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001c33:	89 c2                	mov    %eax,%edx
81001c35:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001c3a:	8b 40 08             	mov    0x8(%eax),%eax
81001c3d:	83 ca 01             	or     $0x1,%edx
81001c40:	89 50 04             	mov    %edx,0x4(%eax)
81001c43:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c46:	8b 40 04             	mov    0x4(%eax),%eax
81001c49:	83 e0 01             	and    $0x1,%eax
81001c4c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001c4f:	89 c2                	mov    %eax,%edx
81001c51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c54:	89 50 04             	mov    %edx,0x4(%eax)
81001c57:	83 ec 0c             	sub    $0xc,%esp
81001c5a:	ff 75 08             	push   0x8(%ebp)
81001c5d:	e8 a9 fe ff ff       	call   81001b0b <__malloc_unlock>
81001c62:	83 c4 10             	add    $0x10,%esp
81001c65:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c68:	83 c0 08             	add    $0x8,%eax
81001c6b:	e9 79 07 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
81001c70:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c73:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c76:	01 d0                	add    %edx,%eax
81001c78:	89 c2                	mov    %eax,%edx
81001c7a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c7d:	39 c2                	cmp    %eax,%edx
81001c7f:	7c 3f                	jl     81001cc0 <_realloc_r+0x1af>
81001c81:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c84:	8b 40 0c             	mov    0xc(%eax),%eax
81001c87:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001c8a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c8d:	8b 40 08             	mov    0x8(%eax),%eax
81001c90:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001c93:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001c96:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001c99:	89 50 0c             	mov    %edx,0xc(%eax)
81001c9c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001c9f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001ca2:	89 50 08             	mov    %edx,0x8(%eax)
81001ca5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ca8:	01 45 f0             	add    %eax,-0x10(%ebp)
81001cab:	e9 8c 06 00 00       	jmp    8100233c <_realloc_r+0x82b>
81001cb0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001cb7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001cbe:	eb 01                	jmp    81001cc1 <_realloc_r+0x1b0>
81001cc0:	90                   	nop
81001cc1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cc4:	8b 40 04             	mov    0x4(%eax),%eax
81001cc7:	83 e0 01             	and    $0x1,%eax
81001cca:	85 c0                	test   %eax,%eax
81001ccc:	0f 85 d6 04 00 00    	jne    810021a8 <_realloc_r+0x697>
81001cd2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cd5:	8b 00                	mov    (%eax),%eax
81001cd7:	f7 d8                	neg    %eax
81001cd9:	89 c2                	mov    %eax,%edx
81001cdb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cde:	01 d0                	add    %edx,%eax
81001ce0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001ce3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001ce6:	8b 40 04             	mov    0x4(%eax),%eax
81001ce9:	83 e0 fc             	and    $0xfffffffc,%eax
81001cec:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001cef:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001cf3:	0f 84 4a 03 00 00    	je     81002043 <_realloc_r+0x532>
81001cf9:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001cfe:	8b 40 08             	mov    0x8(%eax),%eax
81001d01:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001d04:	0f 85 b0 01 00 00    	jne    81001eba <_realloc_r+0x3a9>
81001d0a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d0d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001d10:	01 c2                	add    %eax,%edx
81001d12:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d15:	01 d0                	add    %edx,%eax
81001d17:	89 c2                	mov    %eax,%edx
81001d19:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d1c:	83 c0 10             	add    $0x10,%eax
81001d1f:	39 c2                	cmp    %eax,%edx
81001d21:	0f 8c 1c 03 00 00    	jl     81002043 <_realloc_r+0x532>
81001d27:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d2a:	8b 40 0c             	mov    0xc(%eax),%eax
81001d2d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d30:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d33:	8b 40 08             	mov    0x8(%eax),%eax
81001d36:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001d39:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001d3c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001d3f:	89 50 0c             	mov    %edx,0xc(%eax)
81001d42:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001d45:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001d48:	89 50 08             	mov    %edx,0x8(%eax)
81001d4b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d51:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001d54:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d57:	01 d0                	add    %edx,%eax
81001d59:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d5f:	83 c0 08             	add    $0x8,%eax
81001d62:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001d65:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001d68:	83 e8 04             	sub    $0x4,%eax
81001d6b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001d6e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001d72:	0f 87 de 00 00 00    	ja     81001e56 <_realloc_r+0x345>
81001d78:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d7e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001d81:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d84:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001d88:	0f 86 90 00 00 00    	jbe    81001e1e <_realloc_r+0x30d>
81001d8e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001d91:	8d 42 04             	lea    0x4(%edx),%eax
81001d94:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d97:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d9a:	8d 48 04             	lea    0x4(%eax),%ecx
81001d9d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001da0:	8b 12                	mov    (%edx),%edx
81001da2:	89 10                	mov    %edx,(%eax)
81001da4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001da7:	8d 42 04             	lea    0x4(%edx),%eax
81001daa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001dad:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001db0:	8d 48 04             	lea    0x4(%eax),%ecx
81001db3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001db6:	8b 12                	mov    (%edx),%edx
81001db8:	89 10                	mov    %edx,(%eax)
81001dba:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001dbe:	76 5e                	jbe    81001e1e <_realloc_r+0x30d>
81001dc0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001dc3:	8d 42 04             	lea    0x4(%edx),%eax
81001dc6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001dc9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dcc:	8d 48 04             	lea    0x4(%eax),%ecx
81001dcf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001dd2:	8b 12                	mov    (%edx),%edx
81001dd4:	89 10                	mov    %edx,(%eax)
81001dd6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001dd9:	8d 42 04             	lea    0x4(%edx),%eax
81001ddc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ddf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001de2:	8d 48 04             	lea    0x4(%eax),%ecx
81001de5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001de8:	8b 12                	mov    (%edx),%edx
81001dea:	89 10                	mov    %edx,(%eax)
81001dec:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001df0:	76 2c                	jbe    81001e1e <_realloc_r+0x30d>
81001df2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001df5:	8d 42 04             	lea    0x4(%edx),%eax
81001df8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001dfb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dfe:	8d 48 04             	lea    0x4(%eax),%ecx
81001e01:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e04:	8b 12                	mov    (%edx),%edx
81001e06:	89 10                	mov    %edx,(%eax)
81001e08:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e0b:	8d 42 04             	lea    0x4(%edx),%eax
81001e0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e11:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e14:	8d 48 04             	lea    0x4(%eax),%ecx
81001e17:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e1a:	8b 12                	mov    (%edx),%edx
81001e1c:	89 10                	mov    %edx,(%eax)
81001e1e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e21:	8d 42 04             	lea    0x4(%edx),%eax
81001e24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e27:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e2a:	8d 48 04             	lea    0x4(%eax),%ecx
81001e2d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e30:	8b 12                	mov    (%edx),%edx
81001e32:	89 10                	mov    %edx,(%eax)
81001e34:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e37:	8d 42 04             	lea    0x4(%edx),%eax
81001e3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e3d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e40:	8d 48 04             	lea    0x4(%eax),%ecx
81001e43:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e46:	8b 12                	mov    (%edx),%edx
81001e48:	89 10                	mov    %edx,(%eax)
81001e4a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001e4d:	8b 10                	mov    (%eax),%edx
81001e4f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e52:	89 10                	mov    %edx,(%eax)
81001e54:	eb 14                	jmp    81001e6a <_realloc_r+0x359>
81001e56:	83 ec 04             	sub    $0x4,%esp
81001e59:	ff 75 a0             	push   -0x60(%ebp)
81001e5c:	ff 75 0c             	push   0xc(%ebp)
81001e5f:	ff 75 a8             	push   -0x58(%ebp)
81001e62:	e8 89 fb ff ff       	call   810019f0 <memmove>
81001e67:	83 c4 10             	add    $0x10,%esp
81001e6a:	ba 00 39 00 81       	mov    $0x81003900,%edx
81001e6f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001e72:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e75:	01 c8                	add    %ecx,%eax
81001e77:	89 42 08             	mov    %eax,0x8(%edx)
81001e7a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e7d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001e80:	89 c2                	mov    %eax,%edx
81001e82:	b8 00 39 00 81       	mov    $0x81003900,%eax
81001e87:	8b 40 08             	mov    0x8(%eax),%eax
81001e8a:	83 ca 01             	or     $0x1,%edx
81001e8d:	89 50 04             	mov    %edx,0x4(%eax)
81001e90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e93:	8b 40 04             	mov    0x4(%eax),%eax
81001e96:	83 e0 01             	and    $0x1,%eax
81001e99:	0b 45 bc             	or     -0x44(%ebp),%eax
81001e9c:	89 c2                	mov    %eax,%edx
81001e9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ea1:	89 50 04             	mov    %edx,0x4(%eax)
81001ea4:	83 ec 0c             	sub    $0xc,%esp
81001ea7:	ff 75 08             	push   0x8(%ebp)
81001eaa:	e8 5c fc ff ff       	call   81001b0b <__malloc_unlock>
81001eaf:	83 c4 10             	add    $0x10,%esp
81001eb2:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001eb5:	e9 2f 05 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
81001eba:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ebd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001ec0:	01 c2                	add    %eax,%edx
81001ec2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ec5:	01 d0                	add    %edx,%eax
81001ec7:	89 c2                	mov    %eax,%edx
81001ec9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001ecc:	39 c2                	cmp    %eax,%edx
81001ece:	0f 8c 6f 01 00 00    	jl     81002043 <_realloc_r+0x532>
81001ed4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ed7:	8b 40 0c             	mov    0xc(%eax),%eax
81001eda:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001edd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ee0:	8b 40 08             	mov    0x8(%eax),%eax
81001ee3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001ee6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001ee9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001eec:	89 50 0c             	mov    %edx,0xc(%eax)
81001eef:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001ef2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001ef5:	89 50 08             	mov    %edx,0x8(%eax)
81001ef8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001efb:	8b 40 0c             	mov    0xc(%eax),%eax
81001efe:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001f01:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001f04:	8b 40 08             	mov    0x8(%eax),%eax
81001f07:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001f0a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001f0d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001f10:	89 50 0c             	mov    %edx,0xc(%eax)
81001f13:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001f16:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001f19:	89 50 08             	mov    %edx,0x8(%eax)
81001f1c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001f1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f22:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f25:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f28:	01 d0                	add    %edx,%eax
81001f2a:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f30:	83 c0 08             	add    $0x8,%eax
81001f33:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001f36:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001f39:	83 e8 04             	sub    $0x4,%eax
81001f3c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81001f3f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81001f43:	0f 87 e1 00 00 00    	ja     8100202a <_realloc_r+0x519>
81001f49:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f4c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f4f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f52:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001f55:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81001f59:	0f 86 90 00 00 00    	jbe    81001fef <_realloc_r+0x4de>
81001f5f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f62:	8d 42 04             	lea    0x4(%edx),%eax
81001f65:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f68:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f6b:	8d 48 04             	lea    0x4(%eax),%ecx
81001f6e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f71:	8b 12                	mov    (%edx),%edx
81001f73:	89 10                	mov    %edx,(%eax)
81001f75:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f78:	8d 42 04             	lea    0x4(%edx),%eax
81001f7b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f7e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f81:	8d 48 04             	lea    0x4(%eax),%ecx
81001f84:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f87:	8b 12                	mov    (%edx),%edx
81001f89:	89 10                	mov    %edx,(%eax)
81001f8b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81001f8f:	76 5e                	jbe    81001fef <_realloc_r+0x4de>
81001f91:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f94:	8d 42 04             	lea    0x4(%edx),%eax
81001f97:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f9a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f9d:	8d 48 04             	lea    0x4(%eax),%ecx
81001fa0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fa3:	8b 12                	mov    (%edx),%edx
81001fa5:	89 10                	mov    %edx,(%eax)
81001fa7:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001faa:	8d 42 04             	lea    0x4(%edx),%eax
81001fad:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fb0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fb3:	8d 48 04             	lea    0x4(%eax),%ecx
81001fb6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fb9:	8b 12                	mov    (%edx),%edx
81001fbb:	89 10                	mov    %edx,(%eax)
81001fbd:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81001fc1:	76 2c                	jbe    81001fef <_realloc_r+0x4de>
81001fc3:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fc6:	8d 42 04             	lea    0x4(%edx),%eax
81001fc9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fcc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fcf:	8d 48 04             	lea    0x4(%eax),%ecx
81001fd2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fd5:	8b 12                	mov    (%edx),%edx
81001fd7:	89 10                	mov    %edx,(%eax)
81001fd9:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fdc:	8d 42 04             	lea    0x4(%edx),%eax
81001fdf:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fe2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fe5:	8d 48 04             	lea    0x4(%eax),%ecx
81001fe8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001feb:	8b 12                	mov    (%edx),%edx
81001fed:	89 10                	mov    %edx,(%eax)
81001fef:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001ff2:	8d 42 04             	lea    0x4(%edx),%eax
81001ff5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ff8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ffb:	8d 48 04             	lea    0x4(%eax),%ecx
81001ffe:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002001:	8b 12                	mov    (%edx),%edx
81002003:	89 10                	mov    %edx,(%eax)
81002005:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002008:	8d 42 04             	lea    0x4(%edx),%eax
8100200b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100200e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002011:	8d 48 04             	lea    0x4(%eax),%ecx
81002014:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002017:	8b 12                	mov    (%edx),%edx
81002019:	89 10                	mov    %edx,(%eax)
8100201b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100201e:	8b 10                	mov    (%eax),%edx
81002020:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002023:	89 10                	mov    %edx,(%eax)
81002025:	e9 12 03 00 00       	jmp    8100233c <_realloc_r+0x82b>
8100202a:	83 ec 04             	sub    $0x4,%esp
8100202d:	ff 75 a4             	push   -0x5c(%ebp)
81002030:	ff 75 0c             	push   0xc(%ebp)
81002033:	ff 75 a8             	push   -0x58(%ebp)
81002036:	e8 b5 f9 ff ff       	call   810019f0 <memmove>
8100203b:	83 c4 10             	add    $0x10,%esp
8100203e:	e9 f9 02 00 00       	jmp    8100233c <_realloc_r+0x82b>
81002043:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002047:	0f 84 5b 01 00 00    	je     810021a8 <_realloc_r+0x697>
8100204d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002050:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002053:	01 d0                	add    %edx,%eax
81002055:	89 c2                	mov    %eax,%edx
81002057:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100205a:	39 c2                	cmp    %eax,%edx
8100205c:	0f 8c 46 01 00 00    	jl     810021a8 <_realloc_r+0x697>
81002062:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002065:	8b 40 0c             	mov    0xc(%eax),%eax
81002068:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100206b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100206e:	8b 40 08             	mov    0x8(%eax),%eax
81002071:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002074:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002077:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100207a:	89 50 0c             	mov    %edx,0xc(%eax)
8100207d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002080:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002083:	89 50 08             	mov    %edx,0x8(%eax)
81002086:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002089:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100208c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100208f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002092:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002095:	83 c0 08             	add    $0x8,%eax
81002098:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100209b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100209e:	83 e8 04             	sub    $0x4,%eax
810020a1:	89 45 9c             	mov    %eax,-0x64(%ebp)
810020a4:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810020a8:	0f 87 e1 00 00 00    	ja     8100218f <_realloc_r+0x67e>
810020ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810020b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020b4:	8b 45 a8             	mov    -0x58(%ebp),%eax
810020b7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810020ba:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810020be:	0f 86 90 00 00 00    	jbe    81002154 <_realloc_r+0x643>
810020c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020c7:	8d 42 04             	lea    0x4(%edx),%eax
810020ca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020d0:	8d 48 04             	lea    0x4(%eax),%ecx
810020d3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020d6:	8b 12                	mov    (%edx),%edx
810020d8:	89 10                	mov    %edx,(%eax)
810020da:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020dd:	8d 42 04             	lea    0x4(%edx),%eax
810020e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020e6:	8d 48 04             	lea    0x4(%eax),%ecx
810020e9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020ec:	8b 12                	mov    (%edx),%edx
810020ee:	89 10                	mov    %edx,(%eax)
810020f0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810020f4:	76 5e                	jbe    81002154 <_realloc_r+0x643>
810020f6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020f9:	8d 42 04             	lea    0x4(%edx),%eax
810020fc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002102:	8d 48 04             	lea    0x4(%eax),%ecx
81002105:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002108:	8b 12                	mov    (%edx),%edx
8100210a:	89 10                	mov    %edx,(%eax)
8100210c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100210f:	8d 42 04             	lea    0x4(%edx),%eax
81002112:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002115:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002118:	8d 48 04             	lea    0x4(%eax),%ecx
8100211b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100211e:	8b 12                	mov    (%edx),%edx
81002120:	89 10                	mov    %edx,(%eax)
81002122:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002126:	76 2c                	jbe    81002154 <_realloc_r+0x643>
81002128:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100212b:	8d 42 04             	lea    0x4(%edx),%eax
8100212e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002131:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002134:	8d 48 04             	lea    0x4(%eax),%ecx
81002137:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100213a:	8b 12                	mov    (%edx),%edx
8100213c:	89 10                	mov    %edx,(%eax)
8100213e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002141:	8d 42 04             	lea    0x4(%edx),%eax
81002144:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002147:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100214a:	8d 48 04             	lea    0x4(%eax),%ecx
8100214d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002150:	8b 12                	mov    (%edx),%edx
81002152:	89 10                	mov    %edx,(%eax)
81002154:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002157:	8d 42 04             	lea    0x4(%edx),%eax
8100215a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100215d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002160:	8d 48 04             	lea    0x4(%eax),%ecx
81002163:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002166:	8b 12                	mov    (%edx),%edx
81002168:	89 10                	mov    %edx,(%eax)
8100216a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100216d:	8d 42 04             	lea    0x4(%edx),%eax
81002170:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002173:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002176:	8d 48 04             	lea    0x4(%eax),%ecx
81002179:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100217c:	8b 12                	mov    (%edx),%edx
8100217e:	89 10                	mov    %edx,(%eax)
81002180:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002183:	8b 10                	mov    (%eax),%edx
81002185:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002188:	89 10                	mov    %edx,(%eax)
8100218a:	e9 ad 01 00 00       	jmp    8100233c <_realloc_r+0x82b>
8100218f:	83 ec 04             	sub    $0x4,%esp
81002192:	ff 75 9c             	push   -0x64(%ebp)
81002195:	ff 75 0c             	push   0xc(%ebp)
81002198:	ff 75 a8             	push   -0x58(%ebp)
8100219b:	e8 50 f8 ff ff       	call   810019f0 <memmove>
810021a0:	83 c4 10             	add    $0x10,%esp
810021a3:	e9 94 01 00 00       	jmp    8100233c <_realloc_r+0x82b>
810021a8:	83 ec 08             	sub    $0x8,%esp
810021ab:	ff 75 10             	push   0x10(%ebp)
810021ae:	ff 75 08             	push   0x8(%ebp)
810021b1:	e8 29 ef ff ff       	call   810010df <_malloc_r>
810021b6:	83 c4 10             	add    $0x10,%esp
810021b9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810021bc:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810021c0:	75 18                	jne    810021da <_realloc_r+0x6c9>
810021c2:	83 ec 0c             	sub    $0xc,%esp
810021c5:	ff 75 08             	push   0x8(%ebp)
810021c8:	e8 3e f9 ff ff       	call   81001b0b <__malloc_unlock>
810021cd:	83 c4 10             	add    $0x10,%esp
810021d0:	b8 00 00 00 00       	mov    $0x0,%eax
810021d5:	e9 0f 02 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
810021da:	8b 45 a8             	mov    -0x58(%ebp),%eax
810021dd:	83 e8 08             	sub    $0x8,%eax
810021e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810021e3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810021e6:	8b 40 04             	mov    0x4(%eax),%eax
810021e9:	83 e0 fe             	and    $0xfffffffe,%eax
810021ec:	89 c2                	mov    %eax,%edx
810021ee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810021f1:	01 d0                	add    %edx,%eax
810021f3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810021f6:	75 17                	jne    8100220f <_realloc_r+0x6fe>
810021f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021fb:	8b 40 04             	mov    0x4(%eax),%eax
810021fe:	83 e0 fc             	and    $0xfffffffc,%eax
81002201:	01 45 f0             	add    %eax,-0x10(%ebp)
81002204:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002207:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100220a:	e9 2d 01 00 00       	jmp    8100233c <_realloc_r+0x82b>
8100220f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002212:	83 e8 04             	sub    $0x4,%eax
81002215:	89 45 98             	mov    %eax,-0x68(%ebp)
81002218:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
8100221c:	0f 87 de 00 00 00    	ja     81002300 <_realloc_r+0x7ef>
81002222:	8b 45 0c             	mov    0xc(%ebp),%eax
81002225:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002228:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100222b:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100222e:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002232:	0f 86 90 00 00 00    	jbe    810022c8 <_realloc_r+0x7b7>
81002238:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100223b:	8d 42 04             	lea    0x4(%edx),%eax
8100223e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002241:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002244:	8d 48 04             	lea    0x4(%eax),%ecx
81002247:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100224a:	8b 12                	mov    (%edx),%edx
8100224c:	89 10                	mov    %edx,(%eax)
8100224e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002251:	8d 42 04             	lea    0x4(%edx),%eax
81002254:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002257:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100225a:	8d 48 04             	lea    0x4(%eax),%ecx
8100225d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002260:	8b 12                	mov    (%edx),%edx
81002262:	89 10                	mov    %edx,(%eax)
81002264:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002268:	76 5e                	jbe    810022c8 <_realloc_r+0x7b7>
8100226a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100226d:	8d 42 04             	lea    0x4(%edx),%eax
81002270:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002273:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002276:	8d 48 04             	lea    0x4(%eax),%ecx
81002279:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100227c:	8b 12                	mov    (%edx),%edx
8100227e:	89 10                	mov    %edx,(%eax)
81002280:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002283:	8d 42 04             	lea    0x4(%edx),%eax
81002286:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002289:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100228c:	8d 48 04             	lea    0x4(%eax),%ecx
8100228f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002292:	8b 12                	mov    (%edx),%edx
81002294:	89 10                	mov    %edx,(%eax)
81002296:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100229a:	76 2c                	jbe    810022c8 <_realloc_r+0x7b7>
8100229c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100229f:	8d 42 04             	lea    0x4(%edx),%eax
810022a2:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022a5:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022a8:	8d 48 04             	lea    0x4(%eax),%ecx
810022ab:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022ae:	8b 12                	mov    (%edx),%edx
810022b0:	89 10                	mov    %edx,(%eax)
810022b2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022b5:	8d 42 04             	lea    0x4(%edx),%eax
810022b8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022bb:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022be:	8d 48 04             	lea    0x4(%eax),%ecx
810022c1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022c4:	8b 12                	mov    (%edx),%edx
810022c6:	89 10                	mov    %edx,(%eax)
810022c8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022cb:	8d 42 04             	lea    0x4(%edx),%eax
810022ce:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022d1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022d4:	8d 48 04             	lea    0x4(%eax),%ecx
810022d7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022da:	8b 12                	mov    (%edx),%edx
810022dc:	89 10                	mov    %edx,(%eax)
810022de:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022e1:	8d 42 04             	lea    0x4(%edx),%eax
810022e4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022e7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022ea:	8d 48 04             	lea    0x4(%eax),%ecx
810022ed:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022f0:	8b 12                	mov    (%edx),%edx
810022f2:	89 10                	mov    %edx,(%eax)
810022f4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810022f7:	8b 10                	mov    (%eax),%edx
810022f9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022fc:	89 10                	mov    %edx,(%eax)
810022fe:	eb 14                	jmp    81002314 <_realloc_r+0x803>
81002300:	83 ec 04             	sub    $0x4,%esp
81002303:	ff 75 98             	push   -0x68(%ebp)
81002306:	ff 75 0c             	push   0xc(%ebp)
81002309:	ff 75 a8             	push   -0x58(%ebp)
8100230c:	e8 df f6 ff ff       	call   810019f0 <memmove>
81002311:	83 c4 10             	add    $0x10,%esp
81002314:	83 ec 08             	sub    $0x8,%esp
81002317:	ff 75 0c             	push   0xc(%ebp)
8100231a:	ff 75 08             	push   0x8(%ebp)
8100231d:	e8 dd 07 00 00       	call   81002aff <_free_r>
81002322:	83 c4 10             	add    $0x10,%esp
81002325:	83 ec 0c             	sub    $0xc,%esp
81002328:	ff 75 08             	push   0x8(%ebp)
8100232b:	e8 db f7 ff ff       	call   81001b0b <__malloc_unlock>
81002330:	83 c4 10             	add    $0x10,%esp
81002333:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002336:	e9 ae 00 00 00       	jmp    810023e9 <_realloc_r+0x8d8>
8100233b:	90                   	nop
8100233c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100233f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002342:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002345:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002349:	76 5d                	jbe    810023a8 <_realloc_r+0x897>
8100234b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100234e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002351:	01 d0                	add    %edx,%eax
81002353:	89 45 90             	mov    %eax,-0x70(%ebp)
81002356:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002359:	8b 40 04             	mov    0x4(%eax),%eax
8100235c:	83 e0 01             	and    $0x1,%eax
8100235f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002362:	89 c2                	mov    %eax,%edx
81002364:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002367:	89 50 04             	mov    %edx,0x4(%eax)
8100236a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100236d:	83 c8 01             	or     $0x1,%eax
81002370:	89 c2                	mov    %eax,%edx
81002372:	8b 45 90             	mov    -0x70(%ebp),%eax
81002375:	89 50 04             	mov    %edx,0x4(%eax)
81002378:	8b 55 90             	mov    -0x70(%ebp),%edx
8100237b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100237e:	01 d0                	add    %edx,%eax
81002380:	8b 50 04             	mov    0x4(%eax),%edx
81002383:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002386:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002389:	01 c8                	add    %ecx,%eax
8100238b:	83 ca 01             	or     $0x1,%edx
8100238e:	89 50 04             	mov    %edx,0x4(%eax)
81002391:	8b 45 90             	mov    -0x70(%ebp),%eax
81002394:	83 c0 08             	add    $0x8,%eax
81002397:	83 ec 08             	sub    $0x8,%esp
8100239a:	50                   	push   %eax
8100239b:	ff 75 08             	push   0x8(%ebp)
8100239e:	e8 5c 07 00 00       	call   81002aff <_free_r>
810023a3:	83 c4 10             	add    $0x10,%esp
810023a6:	eb 2d                	jmp    810023d5 <_realloc_r+0x8c4>
810023a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023ab:	8b 40 04             	mov    0x4(%eax),%eax
810023ae:	83 e0 01             	and    $0x1,%eax
810023b1:	0b 45 f0             	or     -0x10(%ebp),%eax
810023b4:	89 c2                	mov    %eax,%edx
810023b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023b9:	89 50 04             	mov    %edx,0x4(%eax)
810023bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810023bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023c2:	01 d0                	add    %edx,%eax
810023c4:	8b 50 04             	mov    0x4(%eax),%edx
810023c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810023ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023cd:	01 c8                	add    %ecx,%eax
810023cf:	83 ca 01             	or     $0x1,%edx
810023d2:	89 50 04             	mov    %edx,0x4(%eax)
810023d5:	83 ec 0c             	sub    $0xc,%esp
810023d8:	ff 75 08             	push   0x8(%ebp)
810023db:	e8 2b f7 ff ff       	call   81001b0b <__malloc_unlock>
810023e0:	83 c4 10             	add    $0x10,%esp
810023e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023e6:	83 c0 08             	add    $0x8,%eax
810023e9:	c9                   	leave  
810023ea:	c3                   	ret    

810023eb <_sbrk_r>:
810023eb:	55                   	push   %ebp
810023ec:	89 e5                	mov    %esp,%ebp
810023ee:	83 ec 18             	sub    $0x18,%esp
810023f1:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
810023f8:	00 00 00 
810023fb:	83 ec 0c             	sub    $0xc,%esp
810023fe:	ff 75 0c             	push   0xc(%ebp)
81002401:	e8 45 df ff ff       	call   8100034b <sbrk>
81002406:	83 c4 10             	add    $0x10,%esp
81002409:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100240c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002410:	75 14                	jne    81002426 <_sbrk_r+0x3b>
81002412:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
81002417:	85 c0                	test   %eax,%eax
81002419:	74 0b                	je     81002426 <_sbrk_r+0x3b>
8100241b:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
81002421:	8b 45 08             	mov    0x8(%ebp),%eax
81002424:	89 10                	mov    %edx,(%eax)
81002426:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002429:	c9                   	leave  
8100242a:	c3                   	ret    

8100242b <__sread>:
8100242b:	55                   	push   %ebp
8100242c:	89 e5                	mov    %esp,%ebp
8100242e:	56                   	push   %esi
8100242f:	53                   	push   %ebx
81002430:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002433:	8b 55 14             	mov    0x14(%ebp),%edx
81002436:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100243a:	98                   	cwtl   
8100243b:	52                   	push   %edx
8100243c:	ff 75 10             	push   0x10(%ebp)
8100243f:	50                   	push   %eax
81002440:	ff 75 08             	push   0x8(%ebp)
81002443:	e8 b9 0d 00 00       	call   81003201 <_read_r>
81002448:	83 c4 10             	add    $0x10,%esp
8100244b:	89 c6                	mov    %eax,%esi
8100244d:	85 f6                	test   %esi,%esi
8100244f:	78 0a                	js     8100245b <__sread+0x30>
81002451:	8b 43 50             	mov    0x50(%ebx),%eax
81002454:	01 f0                	add    %esi,%eax
81002456:	89 43 50             	mov    %eax,0x50(%ebx)
81002459:	eb 0b                	jmp    81002466 <__sread+0x3b>
8100245b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100245f:	80 e4 ef             	and    $0xef,%ah
81002462:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002466:	89 f0                	mov    %esi,%eax
81002468:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100246b:	5b                   	pop    %ebx
8100246c:	5e                   	pop    %esi
8100246d:	5d                   	pop    %ebp
8100246e:	c3                   	ret    

8100246f <__seofread>:
8100246f:	55                   	push   %ebp
81002470:	89 e5                	mov    %esp,%ebp
81002472:	b8 00 00 00 00       	mov    $0x0,%eax
81002477:	5d                   	pop    %ebp
81002478:	c3                   	ret    

81002479 <__swrite>:
81002479:	55                   	push   %ebp
8100247a:	89 e5                	mov    %esp,%ebp
8100247c:	53                   	push   %ebx
8100247d:	83 ec 14             	sub    $0x14,%esp
81002480:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002483:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002487:	98                   	cwtl   
81002488:	25 00 01 00 00       	and    $0x100,%eax
8100248d:	85 c0                	test   %eax,%eax
8100248f:	74 15                	je     810024a6 <__swrite+0x2d>
81002491:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002495:	98                   	cwtl   
81002496:	6a 02                	push   $0x2
81002498:	6a 00                	push   $0x0
8100249a:	50                   	push   %eax
8100249b:	ff 75 08             	push   0x8(%ebp)
8100249e:	e8 98 0b 00 00       	call   8100303b <_lseek_r>
810024a3:	83 c4 10             	add    $0x10,%esp
810024a6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024aa:	80 e4 ef             	and    $0xef,%ah
810024ad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024b1:	8b 55 14             	mov    0x14(%ebp),%edx
810024b4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810024b8:	98                   	cwtl   
810024b9:	52                   	push   %edx
810024ba:	ff 75 10             	push   0x10(%ebp)
810024bd:	50                   	push   %eax
810024be:	ff 75 08             	push   0x8(%ebp)
810024c1:	e8 7d 00 00 00       	call   81002543 <_write_r>
810024c6:	83 c4 10             	add    $0x10,%esp
810024c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810024d2:	c9                   	leave  
810024d3:	c3                   	ret    

810024d4 <__sseek>:
810024d4:	55                   	push   %ebp
810024d5:	89 e5                	mov    %esp,%ebp
810024d7:	56                   	push   %esi
810024d8:	53                   	push   %ebx
810024d9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810024dc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810024e0:	98                   	cwtl   
810024e1:	ff 75 14             	push   0x14(%ebp)
810024e4:	ff 75 10             	push   0x10(%ebp)
810024e7:	50                   	push   %eax
810024e8:	ff 75 08             	push   0x8(%ebp)
810024eb:	e8 4b 0b 00 00       	call   8100303b <_lseek_r>
810024f0:	83 c4 10             	add    $0x10,%esp
810024f3:	89 c6                	mov    %eax,%esi
810024f5:	83 fe ff             	cmp    $0xffffffff,%esi
810024f8:	75 0d                	jne    81002507 <__sseek+0x33>
810024fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024fe:	80 e4 ef             	and    $0xef,%ah
81002501:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002505:	eb 0e                	jmp    81002515 <__sseek+0x41>
81002507:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100250b:	80 cc 10             	or     $0x10,%ah
8100250e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002512:	89 73 50             	mov    %esi,0x50(%ebx)
81002515:	89 f0                	mov    %esi,%eax
81002517:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100251a:	5b                   	pop    %ebx
8100251b:	5e                   	pop    %esi
8100251c:	5d                   	pop    %ebp
8100251d:	c3                   	ret    

8100251e <__sclose>:
8100251e:	55                   	push   %ebp
8100251f:	89 e5                	mov    %esp,%ebp
81002521:	83 ec 18             	sub    $0x18,%esp
81002524:	8b 45 0c             	mov    0xc(%ebp),%eax
81002527:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100252a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100252d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81002531:	98                   	cwtl   
81002532:	83 ec 08             	sub    $0x8,%esp
81002535:	50                   	push   %eax
81002536:	ff 75 08             	push   0x8(%ebp)
81002539:	e8 a6 01 00 00       	call   810026e4 <_close_r>
8100253e:	83 c4 10             	add    $0x10,%esp
81002541:	c9                   	leave  
81002542:	c3                   	ret    

81002543 <_write_r>:
81002543:	55                   	push   %ebp
81002544:	89 e5                	mov    %esp,%ebp
81002546:	83 ec 18             	sub    $0x18,%esp
81002549:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
81002550:	00 00 00 
81002553:	83 ec 04             	sub    $0x4,%esp
81002556:	ff 75 14             	push   0x14(%ebp)
81002559:	ff 75 10             	push   0x10(%ebp)
8100255c:	ff 75 0c             	push   0xc(%ebp)
8100255f:	e8 24 dd ff ff       	call   81000288 <write>
81002564:	83 c4 10             	add    $0x10,%esp
81002567:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100256a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100256e:	75 14                	jne    81002584 <_write_r+0x41>
81002570:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
81002575:	85 c0                	test   %eax,%eax
81002577:	74 0b                	je     81002584 <_write_r+0x41>
81002579:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
8100257f:	8b 45 08             	mov    0x8(%ebp),%eax
81002582:	89 10                	mov    %edx,(%eax)
81002584:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002587:	c9                   	leave  
81002588:	c3                   	ret    

81002589 <__swsetup_r>:
81002589:	55                   	push   %ebp
8100258a:	89 e5                	mov    %esp,%ebp
8100258c:	53                   	push   %ebx
8100258d:	83 ec 14             	sub    $0x14,%esp
81002590:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002593:	a1 e4 38 00 81       	mov    0x810038e4,%eax
81002598:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100259b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100259f:	74 18                	je     810025b9 <__swsetup_r+0x30>
810025a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025a4:	8b 40 38             	mov    0x38(%eax),%eax
810025a7:	85 c0                	test   %eax,%eax
810025a9:	75 0e                	jne    810025b9 <__swsetup_r+0x30>
810025ab:	83 ec 0c             	sub    $0xc,%esp
810025ae:	ff 75 f4             	push   -0xc(%ebp)
810025b1:	e8 18 e2 ff ff       	call   810007ce <__sinit>
810025b6:	83 c4 10             	add    $0x10,%esp
810025b9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025bd:	98                   	cwtl   
810025be:	83 e0 08             	and    $0x8,%eax
810025c1:	85 c0                	test   %eax,%eax
810025c3:	0f 85 82 00 00 00    	jne    8100264b <__swsetup_r+0xc2>
810025c9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025cd:	98                   	cwtl   
810025ce:	83 e0 10             	and    $0x10,%eax
810025d1:	85 c0                	test   %eax,%eax
810025d3:	75 1e                	jne    810025f3 <__swsetup_r+0x6a>
810025d5:	8b 45 08             	mov    0x8(%ebp),%eax
810025d8:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810025de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025e2:	83 c8 40             	or     $0x40,%eax
810025e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025ee:	e9 ec 00 00 00       	jmp    810026df <__swsetup_r+0x156>
810025f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025f7:	98                   	cwtl   
810025f8:	83 e0 04             	and    $0x4,%eax
810025fb:	85 c0                	test   %eax,%eax
810025fd:	74 41                	je     81002640 <__swsetup_r+0xb7>
810025ff:	8b 43 30             	mov    0x30(%ebx),%eax
81002602:	85 c0                	test   %eax,%eax
81002604:	74 23                	je     81002629 <__swsetup_r+0xa0>
81002606:	8b 53 30             	mov    0x30(%ebx),%edx
81002609:	8d 43 40             	lea    0x40(%ebx),%eax
8100260c:	39 c2                	cmp    %eax,%edx
8100260e:	74 12                	je     81002622 <__swsetup_r+0x99>
81002610:	8b 43 30             	mov    0x30(%ebx),%eax
81002613:	83 ec 08             	sub    $0x8,%esp
81002616:	50                   	push   %eax
81002617:	ff 75 08             	push   0x8(%ebp)
8100261a:	e8 e0 04 00 00       	call   81002aff <_free_r>
8100261f:	83 c4 10             	add    $0x10,%esp
81002622:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002629:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100262d:	83 e0 db             	and    $0xffffffdb,%eax
81002630:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002634:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100263b:	8b 43 10             	mov    0x10(%ebx),%eax
8100263e:	89 03                	mov    %eax,(%ebx)
81002640:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002644:	83 c8 08             	or     $0x8,%eax
81002647:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100264b:	8b 43 10             	mov    0x10(%ebx),%eax
8100264e:	85 c0                	test   %eax,%eax
81002650:	75 2b                	jne    8100267d <__swsetup_r+0xf4>
81002652:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002656:	98                   	cwtl   
81002657:	25 00 02 00 00       	and    $0x200,%eax
8100265c:	85 c0                	test   %eax,%eax
8100265e:	74 0e                	je     8100266e <__swsetup_r+0xe5>
81002660:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002664:	98                   	cwtl   
81002665:	25 80 00 00 00       	and    $0x80,%eax
8100266a:	85 c0                	test   %eax,%eax
8100266c:	74 0f                	je     8100267d <__swsetup_r+0xf4>
8100266e:	83 ec 08             	sub    $0x8,%esp
81002671:	53                   	push   %ebx
81002672:	ff 75 08             	push   0x8(%ebp)
81002675:	e8 07 0a 00 00       	call   81003081 <__smakebuf_r>
8100267a:	83 c4 10             	add    $0x10,%esp
8100267d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002681:	98                   	cwtl   
81002682:	83 e0 01             	and    $0x1,%eax
81002685:	85 c0                	test   %eax,%eax
81002687:	74 11                	je     8100269a <__swsetup_r+0x111>
81002689:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002690:	8b 43 14             	mov    0x14(%ebx),%eax
81002693:	f7 d8                	neg    %eax
81002695:	89 43 18             	mov    %eax,0x18(%ebx)
81002698:	eb 19                	jmp    810026b3 <__swsetup_r+0x12a>
8100269a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100269e:	98                   	cwtl   
8100269f:	83 e0 02             	and    $0x2,%eax
810026a2:	85 c0                	test   %eax,%eax
810026a4:	75 05                	jne    810026ab <__swsetup_r+0x122>
810026a6:	8b 43 14             	mov    0x14(%ebx),%eax
810026a9:	eb 05                	jmp    810026b0 <__swsetup_r+0x127>
810026ab:	b8 00 00 00 00       	mov    $0x0,%eax
810026b0:	89 43 08             	mov    %eax,0x8(%ebx)
810026b3:	8b 43 10             	mov    0x10(%ebx),%eax
810026b6:	85 c0                	test   %eax,%eax
810026b8:	75 20                	jne    810026da <__swsetup_r+0x151>
810026ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026be:	98                   	cwtl   
810026bf:	25 80 00 00 00       	and    $0x80,%eax
810026c4:	85 c0                	test   %eax,%eax
810026c6:	74 12                	je     810026da <__swsetup_r+0x151>
810026c8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026cc:	83 c8 40             	or     $0x40,%eax
810026cf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026d8:	eb 05                	jmp    810026df <__swsetup_r+0x156>
810026da:	b8 00 00 00 00       	mov    $0x0,%eax
810026df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810026e2:	c9                   	leave  
810026e3:	c3                   	ret    

810026e4 <_close_r>:
810026e4:	55                   	push   %ebp
810026e5:	89 e5                	mov    %esp,%ebp
810026e7:	83 ec 18             	sub    $0x18,%esp
810026ea:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
810026f1:	00 00 00 
810026f4:	83 ec 0c             	sub    $0xc,%esp
810026f7:	ff 75 0c             	push   0xc(%ebp)
810026fa:	e8 b6 db ff ff       	call   810002b5 <close>
810026ff:	83 c4 10             	add    $0x10,%esp
81002702:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002705:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002709:	75 14                	jne    8100271f <_close_r+0x3b>
8100270b:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
81002710:	85 c0                	test   %eax,%eax
81002712:	74 0b                	je     8100271f <_close_r+0x3b>
81002714:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
8100271a:	8b 45 08             	mov    0x8(%ebp),%eax
8100271d:	89 10                	mov    %edx,(%eax)
8100271f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002722:	c9                   	leave  
81002723:	c3                   	ret    

81002724 <_fclose_r>:
81002724:	55                   	push   %ebp
81002725:	89 e5                	mov    %esp,%ebp
81002727:	53                   	push   %ebx
81002728:	83 ec 14             	sub    $0x14,%esp
8100272b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100272e:	85 db                	test   %ebx,%ebx
81002730:	75 0a                	jne    8100273c <_fclose_r+0x18>
81002732:	b8 00 00 00 00       	mov    $0x0,%eax
81002737:	e9 ea 00 00 00       	jmp    81002826 <_fclose_r+0x102>
8100273c:	8b 45 08             	mov    0x8(%ebp),%eax
8100273f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002742:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002746:	74 18                	je     81002760 <_fclose_r+0x3c>
81002748:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100274b:	8b 40 38             	mov    0x38(%eax),%eax
8100274e:	85 c0                	test   %eax,%eax
81002750:	75 0e                	jne    81002760 <_fclose_r+0x3c>
81002752:	83 ec 0c             	sub    $0xc,%esp
81002755:	ff 75 f0             	push   -0x10(%ebp)
81002758:	e8 71 e0 ff ff       	call   810007ce <__sinit>
8100275d:	83 c4 10             	add    $0x10,%esp
81002760:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002764:	66 85 c0             	test   %ax,%ax
81002767:	75 0a                	jne    81002773 <_fclose_r+0x4f>
81002769:	b8 00 00 00 00       	mov    $0x0,%eax
8100276e:	e9 b3 00 00 00       	jmp    81002826 <_fclose_r+0x102>
81002773:	83 ec 08             	sub    $0x8,%esp
81002776:	53                   	push   %ebx
81002777:	ff 75 08             	push   0x8(%ebp)
8100277a:	e8 c9 00 00 00       	call   81002848 <__sflush_r>
8100277f:	83 c4 10             	add    $0x10,%esp
81002782:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002785:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002788:	85 c0                	test   %eax,%eax
8100278a:	74 1d                	je     810027a9 <_fclose_r+0x85>
8100278c:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100278f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002792:	83 ec 08             	sub    $0x8,%esp
81002795:	52                   	push   %edx
81002796:	ff 75 08             	push   0x8(%ebp)
81002799:	ff d0                	call   *%eax
8100279b:	83 c4 10             	add    $0x10,%esp
8100279e:	85 c0                	test   %eax,%eax
810027a0:	79 07                	jns    810027a9 <_fclose_r+0x85>
810027a2:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
810027a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027ad:	98                   	cwtl   
810027ae:	25 80 00 00 00       	and    $0x80,%eax
810027b3:	85 c0                	test   %eax,%eax
810027b5:	74 12                	je     810027c9 <_fclose_r+0xa5>
810027b7:	8b 43 10             	mov    0x10(%ebx),%eax
810027ba:	83 ec 08             	sub    $0x8,%esp
810027bd:	50                   	push   %eax
810027be:	ff 75 08             	push   0x8(%ebp)
810027c1:	e8 39 03 00 00       	call   81002aff <_free_r>
810027c6:	83 c4 10             	add    $0x10,%esp
810027c9:	8b 43 30             	mov    0x30(%ebx),%eax
810027cc:	85 c0                	test   %eax,%eax
810027ce:	74 23                	je     810027f3 <_fclose_r+0xcf>
810027d0:	8b 53 30             	mov    0x30(%ebx),%edx
810027d3:	8d 43 40             	lea    0x40(%ebx),%eax
810027d6:	39 c2                	cmp    %eax,%edx
810027d8:	74 12                	je     810027ec <_fclose_r+0xc8>
810027da:	8b 43 30             	mov    0x30(%ebx),%eax
810027dd:	83 ec 08             	sub    $0x8,%esp
810027e0:	50                   	push   %eax
810027e1:	ff 75 08             	push   0x8(%ebp)
810027e4:	e8 16 03 00 00       	call   81002aff <_free_r>
810027e9:	83 c4 10             	add    $0x10,%esp
810027ec:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810027f3:	8b 43 44             	mov    0x44(%ebx),%eax
810027f6:	85 c0                	test   %eax,%eax
810027f8:	74 19                	je     81002813 <_fclose_r+0xef>
810027fa:	8b 43 44             	mov    0x44(%ebx),%eax
810027fd:	83 ec 08             	sub    $0x8,%esp
81002800:	50                   	push   %eax
81002801:	ff 75 08             	push   0x8(%ebp)
81002804:	e8 f6 02 00 00       	call   81002aff <_free_r>
81002809:	83 c4 10             	add    $0x10,%esp
8100280c:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002813:	e8 4f e0 ff ff       	call   81000867 <__sfp_lock_acquire>
81002818:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
8100281e:	e8 4a e0 ff ff       	call   8100086d <__sfp_lock_release>
81002823:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002826:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002829:	c9                   	leave  
8100282a:	c3                   	ret    

8100282b <fclose>:
8100282b:	55                   	push   %ebp
8100282c:	89 e5                	mov    %esp,%ebp
8100282e:	83 ec 08             	sub    $0x8,%esp
81002831:	8b 55 08             	mov    0x8(%ebp),%edx
81002834:	a1 e4 38 00 81       	mov    0x810038e4,%eax
81002839:	83 ec 08             	sub    $0x8,%esp
8100283c:	52                   	push   %edx
8100283d:	50                   	push   %eax
8100283e:	e8 e1 fe ff ff       	call   81002724 <_fclose_r>
81002843:	83 c4 10             	add    $0x10,%esp
81002846:	c9                   	leave  
81002847:	c3                   	ret    

81002848 <__sflush_r>:
81002848:	55                   	push   %ebp
81002849:	89 e5                	mov    %esp,%ebp
8100284b:	57                   	push   %edi
8100284c:	56                   	push   %esi
8100284d:	53                   	push   %ebx
8100284e:	83 ec 1c             	sub    $0x1c,%esp
81002851:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002854:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002858:	66 89 45 de          	mov    %ax,-0x22(%ebp)
8100285c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002860:	83 e0 08             	and    $0x8,%eax
81002863:	85 c0                	test   %eax,%eax
81002865:	0f 85 93 01 00 00    	jne    810029fe <__sflush_r+0x1b6>
8100286b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100286f:	80 cc 08             	or     $0x8,%ah
81002872:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002876:	8b 43 04             	mov    0x4(%ebx),%eax
81002879:	85 c0                	test   %eax,%eax
8100287b:	7f 0b                	jg     81002888 <__sflush_r+0x40>
8100287d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002880:	85 c0                	test   %eax,%eax
81002882:	0f 8e 6f 01 00 00    	jle    810029f7 <__sflush_r+0x1af>
81002888:	8b 43 28             	mov    0x28(%ebx),%eax
8100288b:	85 c0                	test   %eax,%eax
8100288d:	0f 84 64 01 00 00    	je     810029f7 <__sflush_r+0x1af>
81002893:	8b 45 08             	mov    0x8(%ebp),%eax
81002896:	8b 00                	mov    (%eax),%eax
81002898:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100289b:	8b 45 08             	mov    0x8(%ebp),%eax
8100289e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810028a4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028a8:	98                   	cwtl   
810028a9:	25 00 10 00 00       	and    $0x1000,%eax
810028ae:	85 c0                	test   %eax,%eax
810028b0:	74 08                	je     810028ba <__sflush_r+0x72>
810028b2:	8b 43 50             	mov    0x50(%ebx),%eax
810028b5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028b8:	eb 64                	jmp    8100291e <__sflush_r+0xd6>
810028ba:	8b 43 28             	mov    0x28(%ebx),%eax
810028bd:	8b 53 1c             	mov    0x1c(%ebx),%edx
810028c0:	6a 01                	push   $0x1
810028c2:	6a 00                	push   $0x0
810028c4:	52                   	push   %edx
810028c5:	ff 75 08             	push   0x8(%ebp)
810028c8:	ff d0                	call   *%eax
810028ca:	83 c4 10             	add    $0x10,%esp
810028cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028d0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810028d4:	75 48                	jne    8100291e <__sflush_r+0xd6>
810028d6:	8b 45 08             	mov    0x8(%ebp),%eax
810028d9:	8b 00                	mov    (%eax),%eax
810028db:	85 c0                	test   %eax,%eax
810028dd:	74 3f                	je     8100291e <__sflush_r+0xd6>
810028df:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810028e6:	8b 45 08             	mov    0x8(%ebp),%eax
810028e9:	8b 00                	mov    (%eax),%eax
810028eb:	83 f8 1d             	cmp    $0x1d,%eax
810028ee:	74 0a                	je     810028fa <__sflush_r+0xb2>
810028f0:	8b 45 08             	mov    0x8(%ebp),%eax
810028f3:	8b 00                	mov    (%eax),%eax
810028f5:	83 f8 16             	cmp    $0x16,%eax
810028f8:	75 11                	jne    8100290b <__sflush_r+0xc3>
810028fa:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002901:	8b 45 08             	mov    0x8(%ebp),%eax
81002904:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002907:	89 10                	mov    %edx,(%eax)
81002909:	eb 0b                	jmp    81002916 <__sflush_r+0xce>
8100290b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100290f:	83 c8 40             	or     $0x40,%eax
81002912:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002916:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002919:	e9 48 01 00 00       	jmp    81002a66 <__sflush_r+0x21e>
8100291e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002922:	98                   	cwtl   
81002923:	83 e0 04             	and    $0x4,%eax
81002926:	85 c0                	test   %eax,%eax
81002928:	74 13                	je     8100293d <__sflush_r+0xf5>
8100292a:	8b 43 04             	mov    0x4(%ebx),%eax
8100292d:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002930:	8b 43 30             	mov    0x30(%ebx),%eax
81002933:	85 c0                	test   %eax,%eax
81002935:	74 06                	je     8100293d <__sflush_r+0xf5>
81002937:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100293a:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100293d:	8b 43 28             	mov    0x28(%ebx),%eax
81002940:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002943:	6a 00                	push   $0x0
81002945:	ff 75 e4             	push   -0x1c(%ebp)
81002948:	52                   	push   %edx
81002949:	ff 75 08             	push   0x8(%ebp)
8100294c:	ff d0                	call   *%eax
8100294e:	83 c4 10             	add    $0x10,%esp
81002951:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002954:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002958:	75 1d                	jne    81002977 <__sflush_r+0x12f>
8100295a:	8b 45 08             	mov    0x8(%ebp),%eax
8100295d:	8b 00                	mov    (%eax),%eax
8100295f:	85 c0                	test   %eax,%eax
81002961:	74 14                	je     81002977 <__sflush_r+0x12f>
81002963:	8b 45 08             	mov    0x8(%ebp),%eax
81002966:	8b 00                	mov    (%eax),%eax
81002968:	83 f8 1d             	cmp    $0x1d,%eax
8100296b:	74 0a                	je     81002977 <__sflush_r+0x12f>
8100296d:	8b 45 08             	mov    0x8(%ebp),%eax
81002970:	8b 00                	mov    (%eax),%eax
81002972:	83 f8 16             	cmp    $0x16,%eax
81002975:	75 6e                	jne    810029e5 <__sflush_r+0x19d>
81002977:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100297b:	80 e4 f7             	and    $0xf7,%ah
8100297e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002982:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002989:	8b 43 10             	mov    0x10(%ebx),%eax
8100298c:	89 03                	mov    %eax,(%ebx)
8100298e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002992:	98                   	cwtl   
81002993:	25 00 10 00 00       	and    $0x1000,%eax
81002998:	85 c0                	test   %eax,%eax
8100299a:	74 15                	je     810029b1 <__sflush_r+0x169>
8100299c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810029a0:	75 09                	jne    810029ab <__sflush_r+0x163>
810029a2:	8b 45 08             	mov    0x8(%ebp),%eax
810029a5:	8b 00                	mov    (%eax),%eax
810029a7:	85 c0                	test   %eax,%eax
810029a9:	75 06                	jne    810029b1 <__sflush_r+0x169>
810029ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810029ae:	89 43 50             	mov    %eax,0x50(%ebx)
810029b1:	8b 45 08             	mov    0x8(%ebp),%eax
810029b4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810029b7:	89 10                	mov    %edx,(%eax)
810029b9:	8b 43 30             	mov    0x30(%ebx),%eax
810029bc:	85 c0                	test   %eax,%eax
810029be:	74 37                	je     810029f7 <__sflush_r+0x1af>
810029c0:	8b 53 30             	mov    0x30(%ebx),%edx
810029c3:	8d 43 40             	lea    0x40(%ebx),%eax
810029c6:	39 c2                	cmp    %eax,%edx
810029c8:	74 12                	je     810029dc <__sflush_r+0x194>
810029ca:	8b 43 30             	mov    0x30(%ebx),%eax
810029cd:	83 ec 08             	sub    $0x8,%esp
810029d0:	50                   	push   %eax
810029d1:	ff 75 08             	push   0x8(%ebp)
810029d4:	e8 26 01 00 00       	call   81002aff <_free_r>
810029d9:	83 c4 10             	add    $0x10,%esp
810029dc:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810029e3:	eb 12                	jmp    810029f7 <__sflush_r+0x1af>
810029e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029e9:	83 c8 40             	or     $0x40,%eax
810029ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029f5:	eb 6f                	jmp    81002a66 <__sflush_r+0x21e>
810029f7:	b8 00 00 00 00       	mov    $0x0,%eax
810029fc:	eb 68                	jmp    81002a66 <__sflush_r+0x21e>
810029fe:	8b 73 10             	mov    0x10(%ebx),%esi
81002a01:	85 f6                	test   %esi,%esi
81002a03:	75 07                	jne    81002a0c <__sflush_r+0x1c4>
81002a05:	b8 00 00 00 00       	mov    $0x0,%eax
81002a0a:	eb 5a                	jmp    81002a66 <__sflush_r+0x21e>
81002a0c:	8b 03                	mov    (%ebx),%eax
81002a0e:	29 f0                	sub    %esi,%eax
81002a10:	89 c7                	mov    %eax,%edi
81002a12:	89 33                	mov    %esi,(%ebx)
81002a14:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002a18:	83 e0 03             	and    $0x3,%eax
81002a1b:	85 c0                	test   %eax,%eax
81002a1d:	75 05                	jne    81002a24 <__sflush_r+0x1dc>
81002a1f:	8b 43 14             	mov    0x14(%ebx),%eax
81002a22:	eb 05                	jmp    81002a29 <__sflush_r+0x1e1>
81002a24:	b8 00 00 00 00       	mov    $0x0,%eax
81002a29:	89 43 08             	mov    %eax,0x8(%ebx)
81002a2c:	eb 2f                	jmp    81002a5d <__sflush_r+0x215>
81002a2e:	8b 43 24             	mov    0x24(%ebx),%eax
81002a31:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002a34:	57                   	push   %edi
81002a35:	56                   	push   %esi
81002a36:	52                   	push   %edx
81002a37:	ff 75 08             	push   0x8(%ebp)
81002a3a:	ff d0                	call   *%eax
81002a3c:	83 c4 10             	add    $0x10,%esp
81002a3f:	85 c0                	test   %eax,%eax
81002a41:	7f 12                	jg     81002a55 <__sflush_r+0x20d>
81002a43:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a47:	83 c8 40             	or     $0x40,%eax
81002a4a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a4e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002a53:	eb 11                	jmp    81002a66 <__sflush_r+0x21e>
81002a55:	89 c1                	mov    %eax,%ecx
81002a57:	89 c8                	mov    %ecx,%eax
81002a59:	01 c6                	add    %eax,%esi
81002a5b:	29 cf                	sub    %ecx,%edi
81002a5d:	85 ff                	test   %edi,%edi
81002a5f:	7f cd                	jg     81002a2e <__sflush_r+0x1e6>
81002a61:	b8 00 00 00 00       	mov    $0x0,%eax
81002a66:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002a69:	5b                   	pop    %ebx
81002a6a:	5e                   	pop    %esi
81002a6b:	5f                   	pop    %edi
81002a6c:	5d                   	pop    %ebp
81002a6d:	c3                   	ret    

81002a6e <_fflush_r>:
81002a6e:	55                   	push   %ebp
81002a6f:	89 e5                	mov    %esp,%ebp
81002a71:	53                   	push   %ebx
81002a72:	83 ec 14             	sub    $0x14,%esp
81002a75:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a78:	8b 45 08             	mov    0x8(%ebp),%eax
81002a7b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a7e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002a82:	74 18                	je     81002a9c <_fflush_r+0x2e>
81002a84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a87:	8b 40 38             	mov    0x38(%eax),%eax
81002a8a:	85 c0                	test   %eax,%eax
81002a8c:	75 0e                	jne    81002a9c <_fflush_r+0x2e>
81002a8e:	83 ec 0c             	sub    $0xc,%esp
81002a91:	ff 75 f4             	push   -0xc(%ebp)
81002a94:	e8 35 dd ff ff       	call   810007ce <__sinit>
81002a99:	83 c4 10             	add    $0x10,%esp
81002a9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aa0:	66 85 c0             	test   %ax,%ax
81002aa3:	75 07                	jne    81002aac <_fflush_r+0x3e>
81002aa5:	b8 00 00 00 00       	mov    $0x0,%eax
81002aaa:	eb 15                	jmp    81002ac1 <_fflush_r+0x53>
81002aac:	83 ec 08             	sub    $0x8,%esp
81002aaf:	53                   	push   %ebx
81002ab0:	ff 75 08             	push   0x8(%ebp)
81002ab3:	e8 90 fd ff ff       	call   81002848 <__sflush_r>
81002ab8:	83 c4 10             	add    $0x10,%esp
81002abb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002abe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ac1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002ac4:	c9                   	leave  
81002ac5:	c3                   	ret    

81002ac6 <fflush>:
81002ac6:	55                   	push   %ebp
81002ac7:	89 e5                	mov    %esp,%ebp
81002ac9:	83 ec 08             	sub    $0x8,%esp
81002acc:	8b 55 08             	mov    0x8(%ebp),%edx
81002acf:	85 d2                	test   %edx,%edx
81002ad1:	75 18                	jne    81002aeb <fflush+0x25>
81002ad3:	a1 b4 34 00 81       	mov    0x810034b4,%eax
81002ad8:	83 ec 08             	sub    $0x8,%esp
81002adb:	68 6e 2a 00 81       	push   $0x81002a6e
81002ae0:	50                   	push   %eax
81002ae1:	e8 fb e2 ff ff       	call   81000de1 <_fwalk_reent>
81002ae6:	83 c4 10             	add    $0x10,%esp
81002ae9:	eb 12                	jmp    81002afd <fflush+0x37>
81002aeb:	a1 e4 38 00 81       	mov    0x810038e4,%eax
81002af0:	83 ec 08             	sub    $0x8,%esp
81002af3:	52                   	push   %edx
81002af4:	50                   	push   %eax
81002af5:	e8 74 ff ff ff       	call   81002a6e <_fflush_r>
81002afa:	83 c4 10             	add    $0x10,%esp
81002afd:	c9                   	leave  
81002afe:	c3                   	ret    

81002aff <_free_r>:
81002aff:	55                   	push   %ebp
81002b00:	89 e5                	mov    %esp,%ebp
81002b02:	53                   	push   %ebx
81002b03:	83 ec 34             	sub    $0x34,%esp
81002b06:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002b0a:	0f 84 c4 03 00 00    	je     81002ed4 <_free_r+0x3d5>
81002b10:	83 ec 0c             	sub    $0xc,%esp
81002b13:	ff 75 08             	push   0x8(%ebp)
81002b16:	e8 ea ef ff ff       	call   81001b05 <__malloc_lock>
81002b1b:	83 c4 10             	add    $0x10,%esp
81002b1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b21:	83 e8 08             	sub    $0x8,%eax
81002b24:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b2a:	8b 40 04             	mov    0x4(%eax),%eax
81002b2d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002b30:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b33:	83 e0 fe             	and    $0xfffffffe,%eax
81002b36:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b39:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b3c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b3f:	01 d0                	add    %edx,%eax
81002b41:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b44:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b47:	8b 40 04             	mov    0x4(%eax),%eax
81002b4a:	83 e0 fc             	and    $0xfffffffc,%eax
81002b4d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b50:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002b55:	8b 40 08             	mov    0x8(%eax),%eax
81002b58:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002b5b:	0f 85 94 00 00 00    	jne    81002bf5 <_free_r+0xf6>
81002b61:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b64:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b67:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b6a:	83 e0 01             	and    $0x1,%eax
81002b6d:	85 c0                	test   %eax,%eax
81002b6f:	75 3a                	jne    81002bab <_free_r+0xac>
81002b71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b74:	8b 00                	mov    (%eax),%eax
81002b76:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002b79:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b7c:	f7 d8                	neg    %eax
81002b7e:	01 45 f4             	add    %eax,-0xc(%ebp)
81002b81:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b84:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b8a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b8d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002b90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b93:	8b 40 08             	mov    0x8(%eax),%eax
81002b96:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002b99:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002b9c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002b9f:	89 50 0c             	mov    %edx,0xc(%eax)
81002ba2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ba5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002ba8:	89 50 08             	mov    %edx,0x8(%eax)
81002bab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bae:	83 c8 01             	or     $0x1,%eax
81002bb1:	89 c2                	mov    %eax,%edx
81002bb3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bb6:	89 50 04             	mov    %edx,0x4(%eax)
81002bb9:	ba 00 39 00 81       	mov    $0x81003900,%edx
81002bbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bc1:	89 42 08             	mov    %eax,0x8(%edx)
81002bc4:	a1 08 3d 00 81       	mov    0x81003d08,%eax
81002bc9:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002bcc:	72 14                	jb     81002be2 <_free_r+0xe3>
81002bce:	a1 40 3d 00 81       	mov    0x81003d40,%eax
81002bd3:	83 ec 08             	sub    $0x8,%esp
81002bd6:	50                   	push   %eax
81002bd7:	ff 75 08             	push   0x8(%ebp)
81002bda:	e8 fb 02 00 00       	call   81002eda <_malloc_trim_r>
81002bdf:	83 c4 10             	add    $0x10,%esp
81002be2:	83 ec 0c             	sub    $0xc,%esp
81002be5:	ff 75 08             	push   0x8(%ebp)
81002be8:	e8 1e ef ff ff       	call   81001b0b <__malloc_unlock>
81002bed:	83 c4 10             	add    $0x10,%esp
81002bf0:	e9 e0 02 00 00       	jmp    81002ed5 <_free_r+0x3d6>
81002bf5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002bf8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002bfb:	89 50 04             	mov    %edx,0x4(%eax)
81002bfe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c05:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c08:	83 e0 01             	and    $0x1,%eax
81002c0b:	85 c0                	test   %eax,%eax
81002c0d:	75 52                	jne    81002c61 <_free_r+0x162>
81002c0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c12:	8b 00                	mov    (%eax),%eax
81002c14:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c17:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c1a:	f7 d8                	neg    %eax
81002c1c:	01 45 f4             	add    %eax,-0xc(%ebp)
81002c1f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c22:	01 45 f0             	add    %eax,-0x10(%ebp)
81002c25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c28:	8b 40 08             	mov    0x8(%eax),%eax
81002c2b:	ba 08 39 00 81       	mov    $0x81003908,%edx
81002c30:	39 d0                	cmp    %edx,%eax
81002c32:	75 09                	jne    81002c3d <_free_r+0x13e>
81002c34:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c3b:	eb 24                	jmp    81002c61 <_free_r+0x162>
81002c3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c40:	8b 40 0c             	mov    0xc(%eax),%eax
81002c43:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002c46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c49:	8b 40 08             	mov    0x8(%eax),%eax
81002c4c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c4f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002c52:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002c55:	89 50 0c             	mov    %edx,0xc(%eax)
81002c58:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c5b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002c5e:	89 50 08             	mov    %edx,0x8(%eax)
81002c61:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c64:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c67:	01 d0                	add    %edx,%eax
81002c69:	8b 40 04             	mov    0x4(%eax),%eax
81002c6c:	83 e0 01             	and    $0x1,%eax
81002c6f:	85 c0                	test   %eax,%eax
81002c71:	75 75                	jne    81002ce8 <_free_r+0x1e9>
81002c73:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c76:	01 45 f0             	add    %eax,-0x10(%ebp)
81002c79:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c7d:	75 45                	jne    81002cc4 <_free_r+0x1c5>
81002c7f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c82:	8b 40 08             	mov    0x8(%eax),%eax
81002c85:	ba 08 39 00 81       	mov    $0x81003908,%edx
81002c8a:	39 d0                	cmp    %edx,%eax
81002c8c:	75 36                	jne    81002cc4 <_free_r+0x1c5>
81002c8e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c95:	b8 08 39 00 81       	mov    $0x81003908,%eax
81002c9a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c9d:	89 50 0c             	mov    %edx,0xc(%eax)
81002ca0:	ba 08 39 00 81       	mov    $0x81003908,%edx
81002ca5:	8b 40 0c             	mov    0xc(%eax),%eax
81002ca8:	89 42 08             	mov    %eax,0x8(%edx)
81002cab:	ba 08 39 00 81       	mov    $0x81003908,%edx
81002cb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cb3:	89 50 0c             	mov    %edx,0xc(%eax)
81002cb6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cb9:	8b 50 0c             	mov    0xc(%eax),%edx
81002cbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cbf:	89 50 08             	mov    %edx,0x8(%eax)
81002cc2:	eb 24                	jmp    81002ce8 <_free_r+0x1e9>
81002cc4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cc7:	8b 40 0c             	mov    0xc(%eax),%eax
81002cca:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ccd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cd0:	8b 40 08             	mov    0x8(%eax),%eax
81002cd3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002cd6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002cd9:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002cdc:	89 50 0c             	mov    %edx,0xc(%eax)
81002cdf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ce2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002ce5:	89 50 08             	mov    %edx,0x8(%eax)
81002ce8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ceb:	83 c8 01             	or     $0x1,%eax
81002cee:	89 c2                	mov    %eax,%edx
81002cf0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cf3:	89 50 04             	mov    %edx,0x4(%eax)
81002cf6:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cf9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cfc:	01 c2                	add    %eax,%edx
81002cfe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d01:	89 02                	mov    %eax,(%edx)
81002d03:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002d07:	0f 85 b7 01 00 00    	jne    81002ec4 <_free_r+0x3c5>
81002d0d:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81002d14:	77 7f                	ja     81002d95 <_free_r+0x296>
81002d16:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d19:	c1 e8 03             	shr    $0x3,%eax
81002d1c:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002d1f:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002d24:	8b 58 04             	mov    0x4(%eax),%ebx
81002d27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d2a:	8d 50 03             	lea    0x3(%eax),%edx
81002d2d:	85 c0                	test   %eax,%eax
81002d2f:	0f 48 c2             	cmovs  %edx,%eax
81002d32:	c1 f8 02             	sar    $0x2,%eax
81002d35:	ba 01 00 00 00       	mov    $0x1,%edx
81002d3a:	89 c1                	mov    %eax,%ecx
81002d3c:	d3 e2                	shl    %cl,%edx
81002d3e:	89 d0                	mov    %edx,%eax
81002d40:	ba 00 39 00 81       	mov    $0x81003900,%edx
81002d45:	09 d8                	or     %ebx,%eax
81002d47:	89 42 04             	mov    %eax,0x4(%edx)
81002d4a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d4d:	83 c0 01             	add    $0x1,%eax
81002d50:	01 c0                	add    %eax,%eax
81002d52:	c1 e0 02             	shl    $0x2,%eax
81002d55:	05 00 39 00 81       	add    $0x81003900,%eax
81002d5a:	83 e8 08             	sub    $0x8,%eax
81002d5d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d60:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d63:	8b 40 08             	mov    0x8(%eax),%eax
81002d66:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d6c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002d6f:	89 50 0c             	mov    %edx,0xc(%eax)
81002d72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d75:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002d78:	89 50 08             	mov    %edx,0x8(%eax)
81002d7b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d7e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d81:	89 50 08             	mov    %edx,0x8(%eax)
81002d84:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d87:	8b 50 08             	mov    0x8(%eax),%edx
81002d8a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d8d:	89 50 0c             	mov    %edx,0xc(%eax)
81002d90:	e9 2f 01 00 00       	jmp    81002ec4 <_free_r+0x3c5>
81002d95:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d98:	c1 e8 09             	shr    $0x9,%eax
81002d9b:	85 c0                	test   %eax,%eax
81002d9d:	75 08                	jne    81002da7 <_free_r+0x2a8>
81002d9f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002da2:	c1 e8 03             	shr    $0x3,%eax
81002da5:	eb 77                	jmp    81002e1e <_free_r+0x31f>
81002da7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002daa:	c1 e8 09             	shr    $0x9,%eax
81002dad:	83 f8 04             	cmp    $0x4,%eax
81002db0:	77 0b                	ja     81002dbd <_free_r+0x2be>
81002db2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002db5:	c1 e8 06             	shr    $0x6,%eax
81002db8:	83 c0 38             	add    $0x38,%eax
81002dbb:	eb 61                	jmp    81002e1e <_free_r+0x31f>
81002dbd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dc0:	c1 e8 09             	shr    $0x9,%eax
81002dc3:	83 f8 14             	cmp    $0x14,%eax
81002dc6:	77 0b                	ja     81002dd3 <_free_r+0x2d4>
81002dc8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dcb:	c1 e8 09             	shr    $0x9,%eax
81002dce:	83 c0 5b             	add    $0x5b,%eax
81002dd1:	eb 4b                	jmp    81002e1e <_free_r+0x31f>
81002dd3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dd6:	c1 e8 09             	shr    $0x9,%eax
81002dd9:	83 f8 54             	cmp    $0x54,%eax
81002ddc:	77 0b                	ja     81002de9 <_free_r+0x2ea>
81002dde:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002de1:	c1 e8 0c             	shr    $0xc,%eax
81002de4:	83 c0 6e             	add    $0x6e,%eax
81002de7:	eb 35                	jmp    81002e1e <_free_r+0x31f>
81002de9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dec:	c1 e8 09             	shr    $0x9,%eax
81002def:	3d 54 01 00 00       	cmp    $0x154,%eax
81002df4:	77 0b                	ja     81002e01 <_free_r+0x302>
81002df6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002df9:	c1 e8 0f             	shr    $0xf,%eax
81002dfc:	83 c0 77             	add    $0x77,%eax
81002dff:	eb 1d                	jmp    81002e1e <_free_r+0x31f>
81002e01:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e04:	c1 e8 09             	shr    $0x9,%eax
81002e07:	3d 54 05 00 00       	cmp    $0x554,%eax
81002e0c:	77 0b                	ja     81002e19 <_free_r+0x31a>
81002e0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e11:	c1 e8 12             	shr    $0x12,%eax
81002e14:	83 c0 7c             	add    $0x7c,%eax
81002e17:	eb 05                	jmp    81002e1e <_free_r+0x31f>
81002e19:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002e1e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002e21:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e24:	83 c0 01             	add    $0x1,%eax
81002e27:	01 c0                	add    %eax,%eax
81002e29:	c1 e0 02             	shl    $0x2,%eax
81002e2c:	05 00 39 00 81       	add    $0x81003900,%eax
81002e31:	83 e8 08             	sub    $0x8,%eax
81002e34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e37:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e3a:	8b 40 08             	mov    0x8(%eax),%eax
81002e3d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e40:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e43:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002e46:	75 36                	jne    81002e7e <_free_r+0x37f>
81002e48:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002e4d:	8b 58 04             	mov    0x4(%eax),%ebx
81002e50:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e53:	8d 50 03             	lea    0x3(%eax),%edx
81002e56:	85 c0                	test   %eax,%eax
81002e58:	0f 48 c2             	cmovs  %edx,%eax
81002e5b:	c1 f8 02             	sar    $0x2,%eax
81002e5e:	ba 01 00 00 00       	mov    $0x1,%edx
81002e63:	89 c1                	mov    %eax,%ecx
81002e65:	d3 e2                	shl    %cl,%edx
81002e67:	89 d0                	mov    %edx,%eax
81002e69:	ba 00 39 00 81       	mov    $0x81003900,%edx
81002e6e:	09 d8                	or     %ebx,%eax
81002e70:	89 42 04             	mov    %eax,0x4(%edx)
81002e73:	eb 28                	jmp    81002e9d <_free_r+0x39e>
81002e75:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e78:	8b 40 08             	mov    0x8(%eax),%eax
81002e7b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e7e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e81:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002e84:	74 0e                	je     81002e94 <_free_r+0x395>
81002e86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e89:	8b 40 04             	mov    0x4(%eax),%eax
81002e8c:	83 e0 fc             	and    $0xfffffffc,%eax
81002e8f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002e92:	72 e1                	jb     81002e75 <_free_r+0x376>
81002e94:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e97:	8b 40 0c             	mov    0xc(%eax),%eax
81002e9a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002ea3:	89 50 0c             	mov    %edx,0xc(%eax)
81002ea6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002eac:	89 50 08             	mov    %edx,0x8(%eax)
81002eaf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002eb2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002eb5:	89 50 08             	mov    %edx,0x8(%eax)
81002eb8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ebb:	8b 50 08             	mov    0x8(%eax),%edx
81002ebe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ec1:	89 50 0c             	mov    %edx,0xc(%eax)
81002ec4:	83 ec 0c             	sub    $0xc,%esp
81002ec7:	ff 75 08             	push   0x8(%ebp)
81002eca:	e8 3c ec ff ff       	call   81001b0b <__malloc_unlock>
81002ecf:	83 c4 10             	add    $0x10,%esp
81002ed2:	eb 01                	jmp    81002ed5 <_free_r+0x3d6>
81002ed4:	90                   	nop
81002ed5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002ed8:	c9                   	leave  
81002ed9:	c3                   	ret    

81002eda <_malloc_trim_r>:
81002eda:	55                   	push   %ebp
81002edb:	89 e5                	mov    %esp,%ebp
81002edd:	83 ec 28             	sub    $0x28,%esp
81002ee0:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002ee7:	83 ec 0c             	sub    $0xc,%esp
81002eea:	ff 75 08             	push   0x8(%ebp)
81002eed:	e8 13 ec ff ff       	call   81001b05 <__malloc_lock>
81002ef2:	83 c4 10             	add    $0x10,%esp
81002ef5:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002efa:	8b 40 08             	mov    0x8(%eax),%eax
81002efd:	8b 40 04             	mov    0x4(%eax),%eax
81002f00:	83 e0 fc             	and    $0xfffffffc,%eax
81002f03:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002f06:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f09:	2b 45 0c             	sub    0xc(%ebp),%eax
81002f0c:	89 c2                	mov    %eax,%edx
81002f0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f11:	01 d0                	add    %edx,%eax
81002f13:	83 e8 11             	sub    $0x11,%eax
81002f16:	ba 00 00 00 00       	mov    $0x0,%edx
81002f1b:	f7 75 f4             	divl   -0xc(%ebp)
81002f1e:	83 e8 01             	sub    $0x1,%eax
81002f21:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81002f25:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f28:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f2b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002f2e:	7d 18                	jge    81002f48 <_malloc_trim_r+0x6e>
81002f30:	83 ec 0c             	sub    $0xc,%esp
81002f33:	ff 75 08             	push   0x8(%ebp)
81002f36:	e8 d0 eb ff ff       	call   81001b0b <__malloc_unlock>
81002f3b:	83 c4 10             	add    $0x10,%esp
81002f3e:	b8 00 00 00 00       	mov    $0x0,%eax
81002f43:	e9 f1 00 00 00       	jmp    81003039 <_malloc_trim_r+0x15f>
81002f48:	83 ec 08             	sub    $0x8,%esp
81002f4b:	6a 00                	push   $0x0
81002f4d:	ff 75 08             	push   0x8(%ebp)
81002f50:	e8 96 f4 ff ff       	call   810023eb <_sbrk_r>
81002f55:	83 c4 10             	add    $0x10,%esp
81002f58:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f5b:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002f60:	8b 50 08             	mov    0x8(%eax),%edx
81002f63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f66:	01 d0                	add    %edx,%eax
81002f68:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81002f6b:	74 18                	je     81002f85 <_malloc_trim_r+0xab>
81002f6d:	83 ec 0c             	sub    $0xc,%esp
81002f70:	ff 75 08             	push   0x8(%ebp)
81002f73:	e8 93 eb ff ff       	call   81001b0b <__malloc_unlock>
81002f78:	83 c4 10             	add    $0x10,%esp
81002f7b:	b8 00 00 00 00       	mov    $0x0,%eax
81002f80:	e9 b4 00 00 00       	jmp    81003039 <_malloc_trim_r+0x15f>
81002f85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f88:	f7 d8                	neg    %eax
81002f8a:	83 ec 08             	sub    $0x8,%esp
81002f8d:	50                   	push   %eax
81002f8e:	ff 75 08             	push   0x8(%ebp)
81002f91:	e8 55 f4 ff ff       	call   810023eb <_sbrk_r>
81002f96:	83 c4 10             	add    $0x10,%esp
81002f99:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f9c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002fa0:	75 61                	jne    81003003 <_malloc_trim_r+0x129>
81002fa2:	83 ec 08             	sub    $0x8,%esp
81002fa5:	6a 00                	push   $0x0
81002fa7:	ff 75 08             	push   0x8(%ebp)
81002faa:	e8 3c f4 ff ff       	call   810023eb <_sbrk_r>
81002faf:	83 c4 10             	add    $0x10,%esp
81002fb2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fb5:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002fba:	8b 50 08             	mov    0x8(%eax),%edx
81002fbd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fc0:	29 d0                	sub    %edx,%eax
81002fc2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002fc5:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002fc9:	7e 23                	jle    81002fee <_malloc_trim_r+0x114>
81002fcb:	8b 15 0c 3d 00 81    	mov    0x81003d0c,%edx
81002fd1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fd4:	29 d0                	sub    %edx,%eax
81002fd6:	a3 60 3d 00 81       	mov    %eax,0x81003d60
81002fdb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fde:	83 c8 01             	or     $0x1,%eax
81002fe1:	89 c2                	mov    %eax,%edx
81002fe3:	b8 00 39 00 81       	mov    $0x81003900,%eax
81002fe8:	8b 40 08             	mov    0x8(%eax),%eax
81002feb:	89 50 04             	mov    %edx,0x4(%eax)
81002fee:	83 ec 0c             	sub    $0xc,%esp
81002ff1:	ff 75 08             	push   0x8(%ebp)
81002ff4:	e8 12 eb ff ff       	call   81001b0b <__malloc_unlock>
81002ff9:	83 c4 10             	add    $0x10,%esp
81002ffc:	b8 00 00 00 00       	mov    $0x0,%eax
81003001:	eb 36                	jmp    81003039 <_malloc_trim_r+0x15f>
81003003:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003006:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003009:	83 c8 01             	or     $0x1,%eax
8100300c:	89 c2                	mov    %eax,%edx
8100300e:	b8 00 39 00 81       	mov    $0x81003900,%eax
81003013:	8b 40 08             	mov    0x8(%eax),%eax
81003016:	89 50 04             	mov    %edx,0x4(%eax)
81003019:	a1 60 3d 00 81       	mov    0x81003d60,%eax
8100301e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003021:	a3 60 3d 00 81       	mov    %eax,0x81003d60
81003026:	83 ec 0c             	sub    $0xc,%esp
81003029:	ff 75 08             	push   0x8(%ebp)
8100302c:	e8 da ea ff ff       	call   81001b0b <__malloc_unlock>
81003031:	83 c4 10             	add    $0x10,%esp
81003034:	b8 01 00 00 00       	mov    $0x1,%eax
81003039:	c9                   	leave  
8100303a:	c3                   	ret    

8100303b <_lseek_r>:
8100303b:	55                   	push   %ebp
8100303c:	89 e5                	mov    %esp,%ebp
8100303e:	83 ec 18             	sub    $0x18,%esp
81003041:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
81003048:	00 00 00 
8100304b:	83 ec 04             	sub    $0x4,%esp
8100304e:	ff 75 14             	push   0x14(%ebp)
81003051:	ff 75 10             	push   0x10(%ebp)
81003054:	ff 75 0c             	push   0xc(%ebp)
81003057:	e8 7a d2 ff ff       	call   810002d6 <lseek>
8100305c:	83 c4 10             	add    $0x10,%esp
8100305f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003062:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003066:	75 14                	jne    8100307c <_lseek_r+0x41>
81003068:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
8100306d:	85 c0                	test   %eax,%eax
8100306f:	74 0b                	je     8100307c <_lseek_r+0x41>
81003071:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
81003077:	8b 45 08             	mov    0x8(%ebp),%eax
8100307a:	89 10                	mov    %edx,(%eax)
8100307c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100307f:	c9                   	leave  
81003080:	c3                   	ret    

81003081 <__smakebuf_r>:
81003081:	55                   	push   %ebp
81003082:	89 e5                	mov    %esp,%ebp
81003084:	56                   	push   %esi
81003085:	53                   	push   %ebx
81003086:	83 ec 10             	sub    $0x10,%esp
81003089:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100308c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003090:	98                   	cwtl   
81003091:	83 e0 02             	and    $0x2,%eax
81003094:	85 c0                	test   %eax,%eax
81003096:	74 16                	je     810030ae <__smakebuf_r+0x2d>
81003098:	8d 43 43             	lea    0x43(%ebx),%eax
8100309b:	89 03                	mov    %eax,(%ebx)
8100309d:	8b 03                	mov    (%ebx),%eax
8100309f:	89 43 10             	mov    %eax,0x10(%ebx)
810030a2:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810030a9:	e9 b9 00 00 00       	jmp    81003167 <__smakebuf_r+0xe6>
810030ae:	8d 45 ec             	lea    -0x14(%ebp),%eax
810030b1:	50                   	push   %eax
810030b2:	8d 45 f0             	lea    -0x10(%ebp),%eax
810030b5:	50                   	push   %eax
810030b6:	53                   	push   %ebx
810030b7:	ff 75 08             	push   0x8(%ebp)
810030ba:	e8 af 00 00 00       	call   8100316e <__swhatbuf_r>
810030bf:	83 c4 10             	add    $0x10,%esp
810030c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030c8:	83 ec 08             	sub    $0x8,%esp
810030cb:	50                   	push   %eax
810030cc:	ff 75 08             	push   0x8(%ebp)
810030cf:	e8 0b e0 ff ff       	call   810010df <_malloc_r>
810030d4:	83 c4 10             	add    $0x10,%esp
810030d7:	89 c6                	mov    %eax,%esi
810030d9:	85 f6                	test   %esi,%esi
810030db:	75 2f                	jne    8100310c <__smakebuf_r+0x8b>
810030dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030e1:	98                   	cwtl   
810030e2:	25 00 02 00 00       	and    $0x200,%eax
810030e7:	85 c0                	test   %eax,%eax
810030e9:	75 7c                	jne    81003167 <__smakebuf_r+0xe6>
810030eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030ef:	83 e0 fc             	and    $0xfffffffc,%eax
810030f2:	83 c8 02             	or     $0x2,%eax
810030f5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030f9:	8d 43 43             	lea    0x43(%ebx),%eax
810030fc:	89 03                	mov    %eax,(%ebx)
810030fe:	8b 03                	mov    (%ebx),%eax
81003100:	89 43 10             	mov    %eax,0x10(%ebx)
81003103:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100310a:	eb 5b                	jmp    81003167 <__smakebuf_r+0xe6>
8100310c:	8b 45 08             	mov    0x8(%ebp),%eax
8100310f:	c7 40 3c 93 07 00 81 	movl   $0x81000793,0x3c(%eax)
81003116:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100311a:	0c 80                	or     $0x80,%al
8100311c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003120:	89 33                	mov    %esi,(%ebx)
81003122:	8b 03                	mov    (%ebx),%eax
81003124:	89 43 10             	mov    %eax,0x10(%ebx)
81003127:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100312a:	89 43 14             	mov    %eax,0x14(%ebx)
8100312d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003130:	85 c0                	test   %eax,%eax
81003132:	74 26                	je     8100315a <__smakebuf_r+0xd9>
81003134:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003138:	98                   	cwtl   
81003139:	83 ec 08             	sub    $0x8,%esp
8100313c:	50                   	push   %eax
8100313d:	ff 75 08             	push   0x8(%ebp)
81003140:	e8 dc 02 00 00       	call   81003421 <_isatty_r>
81003145:	83 c4 10             	add    $0x10,%esp
81003148:	85 c0                	test   %eax,%eax
8100314a:	74 0e                	je     8100315a <__smakebuf_r+0xd9>
8100314c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003150:	83 e0 fc             	and    $0xfffffffc,%eax
81003153:	83 c8 01             	or     $0x1,%eax
81003156:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100315a:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100315e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003161:	09 d0                	or     %edx,%eax
81003163:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003167:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100316a:	5b                   	pop    %ebx
8100316b:	5e                   	pop    %esi
8100316c:	5d                   	pop    %ebp
8100316d:	c3                   	ret    

8100316e <__swhatbuf_r>:
8100316e:	55                   	push   %ebp
8100316f:	89 e5                	mov    %esp,%ebp
81003171:	83 ec 58             	sub    $0x58,%esp
81003174:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
8100317b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100317e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003182:	66 85 c0             	test   %ax,%ax
81003185:	78 1f                	js     810031a6 <__swhatbuf_r+0x38>
81003187:	8b 45 0c             	mov    0xc(%ebp),%eax
8100318a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100318e:	98                   	cwtl   
8100318f:	83 ec 04             	sub    $0x4,%esp
81003192:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003195:	52                   	push   %edx
81003196:	50                   	push   %eax
81003197:	ff 75 08             	push   0x8(%ebp)
8100319a:	e8 3f 02 00 00       	call   810033de <_fstat_r>
8100319f:	83 c4 10             	add    $0x10,%esp
810031a2:	85 c0                	test   %eax,%eax
810031a4:	79 35                	jns    810031db <__swhatbuf_r+0x6d>
810031a6:	8b 45 14             	mov    0x14(%ebp),%eax
810031a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810031af:	8b 45 0c             	mov    0xc(%ebp),%eax
810031b2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810031b6:	98                   	cwtl   
810031b7:	25 80 00 00 00       	and    $0x80,%eax
810031bc:	85 c0                	test   %eax,%eax
810031be:	74 0b                	je     810031cb <__swhatbuf_r+0x5d>
810031c0:	8b 45 10             	mov    0x10(%ebp),%eax
810031c3:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810031c9:	eb 09                	jmp    810031d4 <__swhatbuf_r+0x66>
810031cb:	8b 45 10             	mov    0x10(%ebp),%eax
810031ce:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810031d4:	b8 00 00 00 00       	mov    $0x0,%eax
810031d9:	eb 24                	jmp    810031ff <__swhatbuf_r+0x91>
810031db:	8b 45 b0             	mov    -0x50(%ebp),%eax
810031de:	25 00 f0 00 00       	and    $0xf000,%eax
810031e3:	3d 00 20 00 00       	cmp    $0x2000,%eax
810031e8:	0f 94 c0             	sete   %al
810031eb:	0f b6 d0             	movzbl %al,%edx
810031ee:	8b 45 14             	mov    0x14(%ebp),%eax
810031f1:	89 10                	mov    %edx,(%eax)
810031f3:	8b 45 10             	mov    0x10(%ebp),%eax
810031f6:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810031fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031ff:	c9                   	leave  
81003200:	c3                   	ret    

81003201 <_read_r>:
81003201:	55                   	push   %ebp
81003202:	89 e5                	mov    %esp,%ebp
81003204:	83 ec 18             	sub    $0x18,%esp
81003207:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
8100320e:	00 00 00 
81003211:	83 ec 04             	sub    $0x4,%esp
81003214:	ff 75 14             	push   0x14(%ebp)
81003217:	ff 75 10             	push   0x10(%ebp)
8100321a:	ff 75 0c             	push   0xc(%ebp)
8100321d:	e8 39 d0 ff ff       	call   8100025b <read>
81003222:	83 c4 10             	add    $0x10,%esp
81003225:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003228:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100322c:	75 14                	jne    81003242 <_read_r+0x41>
8100322e:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
81003233:	85 c0                	test   %eax,%eax
81003235:	74 0b                	je     81003242 <_read_r+0x41>
81003237:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
8100323d:	8b 45 08             	mov    0x8(%ebp),%eax
81003240:	89 10                	mov    %edx,(%eax)
81003242:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003245:	c9                   	leave  
81003246:	c3                   	ret    

81003247 <cleanup_glue>:
81003247:	55                   	push   %ebp
81003248:	89 e5                	mov    %esp,%ebp
8100324a:	83 ec 08             	sub    $0x8,%esp
8100324d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003250:	8b 00                	mov    (%eax),%eax
81003252:	85 c0                	test   %eax,%eax
81003254:	74 14                	je     8100326a <cleanup_glue+0x23>
81003256:	8b 45 0c             	mov    0xc(%ebp),%eax
81003259:	8b 00                	mov    (%eax),%eax
8100325b:	83 ec 08             	sub    $0x8,%esp
8100325e:	50                   	push   %eax
8100325f:	ff 75 08             	push   0x8(%ebp)
81003262:	e8 e0 ff ff ff       	call   81003247 <cleanup_glue>
81003267:	83 c4 10             	add    $0x10,%esp
8100326a:	83 ec 08             	sub    $0x8,%esp
8100326d:	ff 75 0c             	push   0xc(%ebp)
81003270:	ff 75 08             	push   0x8(%ebp)
81003273:	e8 87 f8 ff ff       	call   81002aff <_free_r>
81003278:	83 c4 10             	add    $0x10,%esp
8100327b:	90                   	nop
8100327c:	c9                   	leave  
8100327d:	c3                   	ret    

8100327e <_reclaim_reent>:
8100327e:	55                   	push   %ebp
8100327f:	89 e5                	mov    %esp,%ebp
81003281:	83 ec 28             	sub    $0x28,%esp
81003284:	a1 e4 38 00 81       	mov    0x810038e4,%eax
81003289:	39 45 08             	cmp    %eax,0x8(%ebp)
8100328c:	0f 84 49 01 00 00    	je     810033db <_reclaim_reent+0x15d>
81003292:	8b 45 08             	mov    0x8(%ebp),%eax
81003295:	8b 40 4c             	mov    0x4c(%eax),%eax
81003298:	85 c0                	test   %eax,%eax
8100329a:	74 64                	je     81003300 <_reclaim_reent+0x82>
8100329c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810032a3:	eb 3e                	jmp    810032e3 <_reclaim_reent+0x65>
810032a5:	8b 45 08             	mov    0x8(%ebp),%eax
810032a8:	8b 50 4c             	mov    0x4c(%eax),%edx
810032ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032ae:	c1 e0 02             	shl    $0x2,%eax
810032b1:	01 d0                	add    %edx,%eax
810032b3:	8b 00                	mov    (%eax),%eax
810032b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032b8:	eb 1f                	jmp    810032d9 <_reclaim_reent+0x5b>
810032ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032bd:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032c3:	8b 00                	mov    (%eax),%eax
810032c5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032c8:	83 ec 08             	sub    $0x8,%esp
810032cb:	ff 75 e8             	push   -0x18(%ebp)
810032ce:	ff 75 08             	push   0x8(%ebp)
810032d1:	e8 29 f8 ff ff       	call   81002aff <_free_r>
810032d6:	83 c4 10             	add    $0x10,%esp
810032d9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810032dd:	75 db                	jne    810032ba <_reclaim_reent+0x3c>
810032df:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810032e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032e6:	83 f8 1f             	cmp    $0x1f,%eax
810032e9:	76 ba                	jbe    810032a5 <_reclaim_reent+0x27>
810032eb:	8b 45 08             	mov    0x8(%ebp),%eax
810032ee:	8b 40 4c             	mov    0x4c(%eax),%eax
810032f1:	83 ec 08             	sub    $0x8,%esp
810032f4:	50                   	push   %eax
810032f5:	ff 75 08             	push   0x8(%ebp)
810032f8:	e8 02 f8 ff ff       	call   81002aff <_free_r>
810032fd:	83 c4 10             	add    $0x10,%esp
81003300:	8b 45 08             	mov    0x8(%ebp),%eax
81003303:	8b 40 40             	mov    0x40(%eax),%eax
81003306:	85 c0                	test   %eax,%eax
81003308:	74 15                	je     8100331f <_reclaim_reent+0xa1>
8100330a:	8b 45 08             	mov    0x8(%ebp),%eax
8100330d:	8b 40 40             	mov    0x40(%eax),%eax
81003310:	83 ec 08             	sub    $0x8,%esp
81003313:	50                   	push   %eax
81003314:	ff 75 08             	push   0x8(%ebp)
81003317:	e8 e3 f7 ff ff       	call   81002aff <_free_r>
8100331c:	83 c4 10             	add    $0x10,%esp
8100331f:	8b 45 08             	mov    0x8(%ebp),%eax
81003322:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003328:	85 c0                	test   %eax,%eax
8100332a:	74 50                	je     8100337c <_reclaim_reent+0xfe>
8100332c:	8b 45 08             	mov    0x8(%ebp),%eax
8100332f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003335:	8b 55 08             	mov    0x8(%ebp),%edx
81003338:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100333e:	39 d0                	cmp    %edx,%eax
81003340:	74 3a                	je     8100337c <_reclaim_reent+0xfe>
81003342:	8b 45 08             	mov    0x8(%ebp),%eax
81003345:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100334b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100334e:	eb 1f                	jmp    8100336f <_reclaim_reent+0xf1>
81003350:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003353:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003356:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003359:	8b 00                	mov    (%eax),%eax
8100335b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100335e:	83 ec 08             	sub    $0x8,%esp
81003361:	ff 75 e4             	push   -0x1c(%ebp)
81003364:	ff 75 08             	push   0x8(%ebp)
81003367:	e8 93 f7 ff ff       	call   81002aff <_free_r>
8100336c:	83 c4 10             	add    $0x10,%esp
8100336f:	8b 45 08             	mov    0x8(%ebp),%eax
81003372:	05 4c 01 00 00       	add    $0x14c,%eax
81003377:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100337a:	75 d4                	jne    81003350 <_reclaim_reent+0xd2>
8100337c:	8b 45 08             	mov    0x8(%ebp),%eax
8100337f:	8b 40 54             	mov    0x54(%eax),%eax
81003382:	85 c0                	test   %eax,%eax
81003384:	74 15                	je     8100339b <_reclaim_reent+0x11d>
81003386:	8b 45 08             	mov    0x8(%ebp),%eax
81003389:	8b 40 54             	mov    0x54(%eax),%eax
8100338c:	83 ec 08             	sub    $0x8,%esp
8100338f:	50                   	push   %eax
81003390:	ff 75 08             	push   0x8(%ebp)
81003393:	e8 67 f7 ff ff       	call   81002aff <_free_r>
81003398:	83 c4 10             	add    $0x10,%esp
8100339b:	8b 45 08             	mov    0x8(%ebp),%eax
8100339e:	8b 40 38             	mov    0x38(%eax),%eax
810033a1:	85 c0                	test   %eax,%eax
810033a3:	74 36                	je     810033db <_reclaim_reent+0x15d>
810033a5:	8b 45 08             	mov    0x8(%ebp),%eax
810033a8:	8b 40 3c             	mov    0x3c(%eax),%eax
810033ab:	83 ec 0c             	sub    $0xc,%esp
810033ae:	ff 75 08             	push   0x8(%ebp)
810033b1:	ff d0                	call   *%eax
810033b3:	83 c4 10             	add    $0x10,%esp
810033b6:	8b 45 08             	mov    0x8(%ebp),%eax
810033b9:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810033bf:	85 c0                	test   %eax,%eax
810033c1:	74 18                	je     810033db <_reclaim_reent+0x15d>
810033c3:	8b 45 08             	mov    0x8(%ebp),%eax
810033c6:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810033cc:	83 ec 08             	sub    $0x8,%esp
810033cf:	50                   	push   %eax
810033d0:	ff 75 08             	push   0x8(%ebp)
810033d3:	e8 6f fe ff ff       	call   81003247 <cleanup_glue>
810033d8:	83 c4 10             	add    $0x10,%esp
810033db:	90                   	nop
810033dc:	c9                   	leave  
810033dd:	c3                   	ret    

810033de <_fstat_r>:
810033de:	55                   	push   %ebp
810033df:	89 e5                	mov    %esp,%ebp
810033e1:	83 ec 18             	sub    $0x18,%esp
810033e4:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
810033eb:	00 00 00 
810033ee:	83 ec 08             	sub    $0x8,%esp
810033f1:	ff 75 10             	push   0x10(%ebp)
810033f4:	ff 75 0c             	push   0xc(%ebp)
810033f7:	e8 28 cf ff ff       	call   81000324 <fstat>
810033fc:	83 c4 10             	add    $0x10,%esp
810033ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003402:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003406:	75 14                	jne    8100341c <_fstat_r+0x3e>
81003408:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
8100340d:	85 c0                	test   %eax,%eax
8100340f:	74 0b                	je     8100341c <_fstat_r+0x3e>
81003411:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
81003417:	8b 45 08             	mov    0x8(%ebp),%eax
8100341a:	89 10                	mov    %edx,(%eax)
8100341c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100341f:	c9                   	leave  
81003420:	c3                   	ret    

81003421 <_isatty_r>:
81003421:	55                   	push   %ebp
81003422:	89 e5                	mov    %esp,%ebp
81003424:	83 ec 18             	sub    $0x18,%esp
81003427:	c7 05 8c 3d 00 81 00 	movl   $0x0,0x81003d8c
8100342e:	00 00 00 
81003431:	83 ec 0c             	sub    $0xc,%esp
81003434:	ff 75 0c             	push   0xc(%ebp)
81003437:	e8 c7 ce ff ff       	call   81000303 <isatty>
8100343c:	83 c4 10             	add    $0x10,%esp
8100343f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003442:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003446:	75 14                	jne    8100345c <_isatty_r+0x3b>
81003448:	a1 8c 3d 00 81       	mov    0x81003d8c,%eax
8100344d:	85 c0                	test   %eax,%eax
8100344f:	74 0b                	je     8100345c <_isatty_r+0x3b>
81003451:	8b 15 8c 3d 00 81    	mov    0x81003d8c,%edx
81003457:	8b 45 08             	mov    0x8(%ebp),%eax
8100345a:	89 10                	mov    %edx,(%eax)
8100345c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100345f:	c9                   	leave  
81003460:	c3                   	ret    
