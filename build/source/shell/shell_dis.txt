
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000962

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009210 memsz 0x000099c0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000080e8  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000071d  81008100  81008100  00009100  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008820  81008820  00009820  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000007a0  81009220  81009220  0000a210  2**5
                  ALLOC
  4 .debug_info   0002a06c  00000000  00000000  0000a210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 000097bc  00000000  00000000  0003427c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000988  00000000  00000000  0003da38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000070  00000000  00000000  0003e3c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005c87  00000000  00000000  0003e430  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000172e  00000000  00000000  000440b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 000016ff  00000000  00000000  000457e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00046ee4  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001e4c  00000000  00000000  00046f24  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81009220 l     O .bss	00000200 cmd_buf
81008820 l     O .data	00000004 prompt
81009420 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
81008320 l     O .rodata	00000048 cmd_list
8100054f l     F .text	0000003e cli_init
8100058d l     F .text	00000033 show_prompt
810005c0 l     F .text	00000043 find_builtin
81000603 l     F .text	00000049 run_builtin
8100064c l     F .text	000000e5 run_exec_file
81000731 l     F .text	00000081 find_exec_path
81009840 l     O .bss	000000ff path.0
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
8100134e l     F .text	000000ad std
810013fb l     F .text	0000001b stdin_init
81001416 l     F .text	0000001b stdout_init
81001431 l     F .text	0000001b stderr_init
81009940 l     O .bss	00000004 __sfp_recursive_mutex
81009944 l     O .bss	00000004 __sinit_recursive_mutex
810016f4 l     F .text	0000000a __fp_lock
810016fe l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81009950 l     O .bss	00000004 optwhere
81009954 l     O .bss	00000004 permute_from
81009958 l     O .bss	00000004 num_nonopts
81002518 l     F .text	0000007b reverse_argv_elements
81002593 l     F .text	00000036 permute
810025c9 l     F .text	00000031 is_option
810025fa l     F .text	00000059 read_globals
81002653 l     F .text	00000052 write_globals
810026a5 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81008840 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
810034c9 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100400d l       .text	00000000 L20
81003fc4 l       .text	00000000 L5
8100400a l       .text	00000000 L15
81003fd0 l       .text	00000000 L8
81003ff1 l       .text	00000000 L9
81004000 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100405f l       .text	00000000 L4
81004051 l       .text	00000000 BYTECMP
8100404c l       .text	00000000 L5
81004053 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
810099a8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004220 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81004fc4 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810056bb l       .text	00000000 L25
81005662 l       .text	00000000 L5
810056ae l       .text	00000000 L14
810056b4 l       .text	00000000 L19
81005673 l       .text	00000000 L10
810056a0 l       .text	00000000 L9
810056a3 l       .text	00000000 L15
810056ee l       .text	00000000 L26
810056f1 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810057f6 l       .text	00000000 L5
8100582e l       .text	00000000 L15
81005800 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100593c l     F .text	0000000a __locale_ctype_ptr_l
81005946 l     F .text	0000000a __get_global_locale
81005950 l     F .text	0000000a __get_current_locale
8100595a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
810099b0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
810061e5 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81009090 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006a98 l     F .text	0000000a __get_global_locale
81006aa2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006b84 l     F .text	0000000a __get_global_locale
81006b8e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
810073d0 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81007f57 l     F .text	0000000a __get_global_locale
81007f61 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81008061 l     F .text	0000000a __get_global_locale
8100806b l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
810099b8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
810099bc l     O .bss	00000004 __env_recursive_mutex
81006a58 g     F .text	00000040 _isatty_r
81004e2d g     F .text	00000037 cleanup_glue
81004d3b g     F .text	000000d6 _puts_r
81006b3e g     F .text	00000046 _lseek_r
81000ab1 g     F .text	0000001b yield
8100543e g     F .text	00000055 _siprintf_r
81005fd2 g     F .text	000000ba __sflags
81000d45 g     F .text	00000039 ioctl
81005922 g     F .text	0000001a strtok_r
81004d06 g     F .text	00000035 printf
81007f6b g     F .text	00000077 _wcrtomb_r
81005594 g     F .text	0000004a __sseek
81001643 g     F .text	00000099 __sinit
81005b9f g     F .text	00000112 __swbuf_r
81006aac g     F .text	0000005f _setlocale_r
8100144c g     F .text	0000006f __sfmoreglue
8100413e g     F .text	00000006 __malloc_unlock
81006c20 g       .text	00000000 memmove
81003201 g     F .text	00000049 getopt_long
81001629 g     F .text	0000001a _cleanup
81005862 g     F .text	000000c0 __strtok_r
81005fc8 g     F .text	0000000a __errno
8100692e g     F .text	00000020 getenv
810022e3 g     F .text	00000043 _fstat_r
810099ac g     O .bss	00000004 errno
81007e57 g     F .text	0000001d __srget
8100552f g     F .text	0000000a __seofread
81000a84 g     F .text	0000002d execve
81000a26 g     F .text	0000001b getpid
8100132f g     F .text	0000001f fgets
81006838 g     F .text	00000067 _getc_r
8100689f g     F .text	0000006f getc
81004068 g       .text	00000000 memcpy
81005232 g     F .text	0000020c setvbuf
81001608 g     F .text	00000021 _cleanup_r
81007096 g     F .text	0000033a _svfprintf_r
81004e11 g     F .text	0000001c puts
81003490 g     F .text	0000001c malloc
81004cd9 g     F .text	0000002d _printf_r
81000b9b g     F .text	00000021 isatty
81003306 g     F .text	0000000a __getreent
81009948 g     O .bss	00000004 optarg
81009960 g     O .bss	00000004 __malloc_top_pad
81009220 g       .bss	00000000 __bss_start__
8100639a g     F .text	0000049e __sfvwrite_r
810051f2 g     F .text	00000040 _sbrk_r
81008824 g     O .data	00000004 opterr
81000cd0 g     F .text	00000040 readdir
810074d4 g     F .text	00000046 _read_r
81000df6 g     F .text	00000107 _fclose_r
81001198 g     F .text	00000039 fflush
81009964 g     O .bss	00000004 __malloc_max_sbrked_mem
81000b6e g     F .text	0000002d lseek
810084b8 g     O .rodata	00000004 _global_impure_ptr
8100751a g     F .text	000008da _realloc_r
81005b51 g     F .text	00000025 strtol_l
810062fb g     F .text	00000057 _fputwc_r
81001708 g     F .text	00000024 __fp_lock_all
81005b76 g     F .text	00000029 strtol
81001e12 g     F .text	000004b1 _fseeko_r
81004e64 g     F .text	00000160 _reclaim_reent
8100608c g     F .text	00000046 _fputc_r
81000b20 g     F .text	0000002d write
81007436 g     F .text	0000004b _putc_r
8100920c g     O .data	00000004 environ
81000bbc g     F .text	00000027 fstat
8100186d g     F .text	0000002c fprintf
810032df g     F .text	00000027 __getopt_long_only_r
810022c3 g     F .text	00000020 fseeko
81000d98 g     F .text	0000001a _atoi_r
81006cad g     F .text	000001b7 __ssputs_r
81001df2 g     F .text	00000020 fseek
810009b0 g     F .text	0000004c sys_call
81004286 g     F .text	000000a8 __sfputs_r
8100994c g     O .bss	00000004 optind
810016dc g     F .text	00000006 __sfp_lock_acquire
81003f80 g       .text	00000000 memchr
8100543e g     F .text	00000055 _sprintf_r
810099c0 g       .bss	00000000 __bss_end__
81001899 g     F .text	000003db _free_r
81000c47 g     F .text	00000021 wait
81008580 g     O .rodata	00000180 _ctype_b
81006b0b g     F .text	00000014 __locale_mb_cur_max
81007df4 g     F .text	00000063 __srget_r
81005e73 g     F .text	00000115 __call_exitprocs
8100908c g     O .data	00000004 __malloc_sbrk_base
81000962 g       .text	00000000 _start
81000af3 g     F .text	0000002d read
81006e64 g     F .text	00000232 __ssprint_r
81004c93 g     F .text	00000046 _open_r
81007e74 g     F .text	000000e3 strncmp
810032b8 g     F .text	00000027 __getopt_long_r
81009980 g     O .bss	00000028 __malloc_current_mallinfo
81004cd9 g     F .text	0000002d _iprintf_r
81005f88 g     F .text	00000040 _close_r
81005839 g     F .text	00000029 strtok
81004015 g       .text	00000000 memcmp
810023f9 g     F .text	000000b8 _fwrite_r
81000a69 g     F .text	0000001b fork
81005d18 g     F .text	0000015b __swsetup_r
810014bb g     F .text	0000014d __sfp
81008c80 g     O .data	00000408 __malloc_av_
810016ee g     F .text	00000006 __sinit_lock_release
810054eb g     F .text	00000044 __sread
81004138 g     F .text	00000006 __malloc_lock
81001844 g     F .text	00000029 _fprintf_r
81000be3 g     F .text	00000021 sbrk
81001140 g     F .text	00000058 _fflush_r
81000972 g     F .text	0000003e cstart
81001825 g     F .text	0000001f fopen
810031ba g     F .text	00000047 getopt
810040b0 g       .text	00000000 memset
810007b2 g     F .text	000001b0 main
81009968 g     O .bss	00000004 __malloc_max_total_mem
81005cb1 g     F .text	00000021 __swbuf
810055de g     F .text	00000025 __sclose
81000efd g     F .text	0000001d fclose
81005b2c g     F .text	00000025 _strtol_r
810024f3 g     F .text	00000025 getchar
8100694e g     F .text	000000ed _findenv_r
8100375c g     F .text	00000822 _malloc_r
81008099 g     F .text	00000043 __ascii_wctomb
81000c68 g     F .text	00000068 opendir
81001844 g     F .text	00000029 _fiprintf_r
810080e2 g     F .text	00000006 __env_unlock
8100690e g     F .text	00000020 _findenv
81002326 g     F .text	00000068 _fwalk
810011d1 g     F .text	0000015e _fgets_r
81006b98 g     F .text	0000002a _mbtowc_r
81007481 g     F .text	00000053 putc
8100324a g     F .text	00000049 getopt_long_only
81001c74 g     F .text	00000161 _malloc_trim_r
8100570c g     F .text	000000a5 strcmp
8100432e g     F .text	00000025 vfiprintf
81000c04 g     F .text	00000021 dup
81004d06 g     F .text	00000035 iprintf
81005493 g     F .text	00000058 sprintf
810099b4 g     O .bss	00000004 _PathLocale
81005cd2 g     F .text	00000046 _write_r
81006b1f g     F .text	0000001f setlocale
810046a9 g     F .text	0000019b _printf_common
81008c64 g     O .data	00000004 _impure_ptr
81000f1a g     F .text	00000226 __sflush_r
81001dd5 g     F .text	0000001d _fseek_r
81007096 g     F .text	0000033a _svfiprintf_r
81004ff1 g     F .text	00000201 __srefill_r
81006bc2 g     F .text	00000058 __ascii_mbtowc
8100172c g     F .text	00000024 __fp_unlock_all
810060d2 g     F .text	0000004e fputc
81000a41 g     F .text	00000028 print_msg
81008828 g     O .data	00000004 optopt
810033fd g     F .text	00000093 __swhatbuf_r
810024b1 g     F .text	00000025 fwrite
810024d6 g     F .text	0000001d _getchar_r
8100624b g     F .text	000000b0 __fputwc
81006120 g     F .text	000000a6 _fputs_r
81005539 g     F .text	0000005b __swrite
81009088 g     O .data	00000004 __malloc_trim_threshold
81000db2 g     F .text	00000044 exit
8100186d g     F .text	0000002c fiprintf
81004353 g     F .text	00000356 _vfiprintf_r
8100238e g     F .text	0000006b _fwalk_reent
810016e2 g     F .text	00000006 __sfp_lock_release
81005493 g     F .text	00000058 siprintf
81000d7e g     F .text	0000001a atoi
81008700 g     O .rodata	00000101 _ctype_
81003293 g     F .text	00000025 __getopt_r
81001750 g     F .text	000000d5 _fopen_r
81000c25 g     F .text	00000022 _exit
81003310 g     F .text	000000ed __smakebuf_r
810057c0 g       .text	00000000 strlen
81004844 g     F .text	0000044f _printf_i
81000acc g     F .text	00000027 open
81004144 g     F .text	000000dc __sprint_r
81005610 g       .text	00000000 strchr
810061c6 g     F .text	0000001f fputs
81000d10 g     F .text	00000035 closedir
81008075 g     F .text	00000024 _wctomb_r
810080dc g     F .text	00000006 __env_lock
81004353 g     F .text	00000356 _vfprintf_r
810009fc g     F .text	0000002a msleep
81007fe2 g     F .text	0000007f wcrtomb
81000b4d g     F .text	00000021 close
810090a0 g     O .data	0000016c __global_locale
8100432e g     F .text	00000025 vfprintf
81006352 g     F .text	00000048 fputwc
810034ac g     F .text	0000001d free
810016e8 g     F .text	00000006 __sinit_lock_acquire
81006a3b g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 20 98 00 81       	mov    0x81009820,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 81 00 81       	push   $0x81008106
81000025:	e8 dc 4c 00 00       	call   81004d06 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 24 98 00 81       	mov    0x81009824,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 11 81 00 81       	push   $0x81008111
81000050:	68 16 81 00 81       	push   $0x81008116
81000055:	e8 ac 4c 00 00       	call   81004d06 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 19 81 00 81       	push   $0x81008119
81000065:	68 16 81 00 81       	push   $0x81008116
8100006a:	e8 97 4c 00 00       	call   81004d06 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 78 32 00 00       	call   81003306 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 89 12 00 00       	call   8100132f <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 55 4d 00 00       	call   81004e11 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 4c 99 00 81 00 	movl   $0x0,0x8100994c
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 20 81 00 81       	push   $0x81008120
81000107:	e8 05 4d 00 00       	call   81004e11 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 26 81 00 81       	push   $0x81008126
81000117:	e8 f5 4c 00 00       	call   81004e11 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 38 81 00 81       	push   $0x81008138
81000127:	e8 e5 4c 00 00       	call   81004e11 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 48 99 00 81       	mov    0x81009948,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 37 0c 00 00       	call   81000d7e <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 48 99 00 81       	mov    0x81009948,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 48 99 00 81    	mov    0x81009948,%ebx
8100015e:	e8 a3 31 00 00       	call   81003306 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 58 81 00 81       	push   $0x81008158
8100016f:	50                   	push   %eax
81000170:	e8 f8 16 00 00       	call   8100186d <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 77 81 00 81       	push   $0x81008177
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 24 30 00 00       	call   810031ba <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 55 31 00 00       	call   81003306 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 7c 81 00 81       	push   $0x8100817c
810001be:	e8 ee 22 00 00       	call   810024b1 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 4c 99 00 81       	mov    0x8100994c,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 2a 31 00 00       	call   81003306 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 af 81 00 81       	push   $0x810081af
810001e9:	e8 c3 22 00 00       	call   810024b1 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 4c 99 00 81       	mov    0x8100994c,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 ef 4b 00 00       	call   81004e11 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 67 0b 00 00       	call   81000db2 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 cb 81 00 81       	push   $0x810081cb
81000259:	e8 0a 0a 00 00       	call   81000c68 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 d0 81 00 81       	push   $0x810081d0
81000272:	e8 9a 4b 00 00       	call   81004e11 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 e1 81 00 81       	push   $0x810081e1
810002ac:	e8 55 4a 00 00       	call   81004d06 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 11 0a 00 00       	call   81000cd0 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 3a 0a 00 00       	call   81000d10 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 4c 99 00 81 00 	movl   $0x0,0x8100994c
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 20 81 00 81       	push   $0x81008120
81000321:	e8 eb 4a 00 00       	call   81004e11 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 eb 81 00 81       	push   $0x810081eb
81000331:	e8 db 4a 00 00       	call   81004e11 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 fe 81 00 81       	push   $0x810081fe
81000341:	e8 cb 4a 00 00       	call   81004e11 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 48 99 00 81       	mov    0x81009948,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 48 99 00 81    	mov    0x81009948,%ebx
8100036b:	e8 96 2f 00 00       	call   81003306 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 58 81 00 81       	push   $0x81008158
8100037c:	50                   	push   %eax
8100037d:	e8 eb 14 00 00       	call   8100186d <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 15 82 00 81       	push   $0x81008215
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 17 2e 00 00       	call   810031ba <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 4c 99 00 81       	mov    0x8100994c,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 44 2f 00 00       	call   81003306 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 18 82 00 81       	push   $0x81008218
810003cf:	e8 dd 20 00 00       	call   810024b1 <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 4c 99 00 81       	mov    0x8100994c,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 31 82 00 81       	push   $0x81008231
810003fc:	50                   	push   %eax
810003fd:	e8 23 14 00 00       	call   81001825 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 4c 99 00 81       	mov    0x8100994c,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 e0 2e 00 00       	call   81003306 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 34 82 00 81       	push   $0x81008234
81000432:	50                   	push   %eax
81000433:	e8 35 14 00 00       	call   8100186d <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 38 30 00 00       	call   81003490 <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 a0 49 00 00       	call   81004e11 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 aa 0e 00 00       	call   8100132f <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 70 2e 00 00       	call   81003306 <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 8d 4d 00 00       	call   81005232 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 90 08 00 00       	call   81000d45 <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 66 0e 00 00       	call   8100132f <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 31 49 00 00       	call   81004e11 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 03 20 00 00       	call   810024f3 <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 02 2e 00 00       	call   81003306 <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 1c 4d 00 00       	call   81005232 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 1f 08 00 00       	call   81000d45 <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 78 2f 00 00       	call   810034ac <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 bb 09 00 00       	call   81000efd <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000555:	a1 20 88 00 81       	mov    0x81008820,%eax
8100055a:	a3 28 98 00 81       	mov    %eax,0x81009828
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100055f:	83 ec 04             	sub    $0x4,%esp
81000562:	68 00 04 00 00       	push   $0x400
81000567:	6a 00                	push   $0x0
81000569:	68 20 94 00 81       	push   $0x81009420
8100056e:	e8 3d 3b 00 00       	call   810040b0 <memset>
81000573:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000576:	c7 05 20 98 00 81 20 	movl   $0x81008320,0x81009820
8100057d:	83 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000580:	b8 68 83 00 81       	mov    $0x81008368,%eax
81000585:	a3 24 98 00 81       	mov    %eax,0x81009824
}
8100058a:	90                   	nop
8100058b:	c9                   	leave  
8100058c:	c3                   	ret    

8100058d <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100058d:	55                   	push   %ebp
8100058e:	89 e5                	mov    %esp,%ebp
81000590:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000593:	a1 28 98 00 81       	mov    0x81009828,%eax
81000598:	83 ec 08             	sub    $0x8,%esp
8100059b:	50                   	push   %eax
8100059c:	68 16 81 00 81       	push   $0x81008116
810005a1:	e8 60 47 00 00       	call   81004d06 <iprintf>
810005a6:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810005a9:	e8 58 2d 00 00       	call   81003306 <__getreent>
810005ae:	8b 40 08             	mov    0x8(%eax),%eax
810005b1:	83 ec 0c             	sub    $0xc,%esp
810005b4:	50                   	push   %eax
810005b5:	e8 de 0b 00 00       	call   81001198 <fflush>
810005ba:	83 c4 10             	add    $0x10,%esp
}
810005bd:	90                   	nop
810005be:	c9                   	leave  
810005bf:	c3                   	ret    

810005c0 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810005c0:	55                   	push   %ebp
810005c1:	89 e5                	mov    %esp,%ebp
810005c3:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005c6:	a1 20 98 00 81       	mov    0x81009820,%eax
810005cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005ce:	eb 22                	jmp    810005f2 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810005d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005d3:	8b 00                	mov    (%eax),%eax
810005d5:	83 ec 08             	sub    $0x8,%esp
810005d8:	ff 75 08             	push   0x8(%ebp)
810005db:	50                   	push   %eax
810005dc:	e8 2b 51 00 00       	call   8100570c <strcmp>
810005e1:	83 c4 10             	add    $0x10,%esp
810005e4:	85 c0                	test   %eax,%eax
810005e6:	75 05                	jne    810005ed <find_builtin+0x2d>
      continue;
    }
    return cmd;
810005e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005eb:	eb 14                	jmp    81000601 <find_builtin+0x41>
      continue;
810005ed:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005ee:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810005f2:	a1 24 98 00 81       	mov    0x81009824,%eax
810005f7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810005fa:	72 d4                	jb     810005d0 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810005fc:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000601:	c9                   	leave  
81000602:	c3                   	ret    

81000603 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000603:	55                   	push   %ebp
81000604:	89 e5                	mov    %esp,%ebp
81000606:	53                   	push   %ebx
81000607:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100060a:	8b 45 08             	mov    0x8(%ebp),%eax
8100060d:	8b 40 08             	mov    0x8(%eax),%eax
81000610:	83 ec 08             	sub    $0x8,%esp
81000613:	ff 75 10             	push   0x10(%ebp)
81000616:	ff 75 0c             	push   0xc(%ebp)
81000619:	ff d0                	call   *%eax
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
81000621:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000625:	79 1f                	jns    81000646 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
81000627:	8b 45 08             	mov    0x8(%ebp),%eax
8100062a:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
8100062c:	e8 d5 2c 00 00       	call   81003306 <__getreent>
81000631:	8b 40 0c             	mov    0xc(%eax),%eax
81000634:	ff 75 f4             	push   -0xc(%ebp)
81000637:	53                   	push   %ebx
81000638:	68 68 83 00 81       	push   $0x81008368
8100063d:	50                   	push   %eax
8100063e:	e8 2a 12 00 00       	call   8100186d <fiprintf>
81000643:	83 c4 10             	add    $0x10,%esp
  }
}
81000646:	90                   	nop
81000647:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100064a:	c9                   	leave  
8100064b:	c3                   	ret    

8100064c <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
8100064c:	55                   	push   %ebp
8100064d:	89 e5                	mov    %esp,%ebp
8100064f:	53                   	push   %ebx
81000650:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
81000653:	e8 11 04 00 00       	call   81000a69 <fork>
81000658:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (pid < 0) {
8100065b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100065f:	79 21                	jns    81000682 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
81000661:	e8 a0 2c 00 00       	call   81003306 <__getreent>
81000666:	8b 40 0c             	mov    0xc(%eax),%eax
81000669:	83 ec 04             	sub    $0x4,%esp
8100066c:	ff 75 08             	push   0x8(%ebp)
8100066f:	68 80 83 00 81       	push   $0x81008380
81000674:	50                   	push   %eax
81000675:	e8 f3 11 00 00       	call   8100186d <fiprintf>
8100067a:	83 c4 10             	add    $0x10,%esp
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
    } else {
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
    }
  }
}
8100067d:	e9 a9 00 00 00       	jmp    8100072b <run_exec_file+0xdf>
  } else if (pid == 0) {
81000682:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000686:	75 42                	jne    810006ca <run_exec_file+0x7e>
    int err = execve(path, (char * const *)argv, (char *const *) 0);
81000688:	83 ec 04             	sub    $0x4,%esp
8100068b:	6a 00                	push   $0x0
8100068d:	ff 75 10             	push   0x10(%ebp)
81000690:	ff 75 08             	push   0x8(%ebp)
81000693:	e8 ec 03 00 00       	call   81000a84 <execve>
81000698:	83 c4 10             	add    $0x10,%esp
8100069b:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (err < 0) {
8100069e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810006a2:	79 1c                	jns    810006c0 <run_exec_file+0x74>
      fprintf(stderr, "exec failed: %s\n", path);
810006a4:	e8 5d 2c 00 00       	call   81003306 <__getreent>
810006a9:	8b 40 0c             	mov    0xc(%eax),%eax
810006ac:	83 ec 04             	sub    $0x4,%esp
810006af:	ff 75 08             	push   0x8(%ebp)
810006b2:	68 9a 83 00 81       	push   $0x8100839a
810006b7:	50                   	push   %eax
810006b8:	e8 b0 11 00 00       	call   8100186d <fiprintf>
810006bd:	83 c4 10             	add    $0x10,%esp
    exit(-1);
810006c0:	83 ec 0c             	sub    $0xc,%esp
810006c3:	6a ff                	push   $0xffffffff
810006c5:	e8 e8 06 00 00       	call   81000db2 <exit>
    int cpid = wait(&status);
810006ca:	83 ec 0c             	sub    $0xc,%esp
810006cd:	8d 45 e8             	lea    -0x18(%ebp),%eax
810006d0:	50                   	push   %eax
810006d1:	e8 71 05 00 00       	call   81000c47 <wait>
810006d6:	83 c4 10             	add    $0x10,%esp
810006d9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (status != 0) {
810006dc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810006df:	85 c0                	test   %eax,%eax
810006e1:	74 25                	je     81000708 <run_exec_file+0xbc>
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
810006e3:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810006e6:	e8 1b 2c 00 00       	call   81003306 <__getreent>
810006eb:	8b 40 0c             	mov    0xc(%eax),%eax
810006ee:	83 ec 0c             	sub    $0xc,%esp
810006f1:	ff 75 f4             	push   -0xc(%ebp)
810006f4:	53                   	push   %ebx
810006f5:	ff 75 08             	push   0x8(%ebp)
810006f8:	68 ac 83 00 81       	push   $0x810083ac
810006fd:	50                   	push   %eax
810006fe:	e8 6a 11 00 00       	call   8100186d <fiprintf>
81000703:	83 c4 20             	add    $0x20,%esp
}
81000706:	eb 23                	jmp    8100072b <run_exec_file+0xdf>
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
81000708:	8b 5d e8             	mov    -0x18(%ebp),%ebx
8100070b:	e8 f6 2b 00 00       	call   81003306 <__getreent>
81000710:	8b 40 0c             	mov    0xc(%eax),%eax
81000713:	83 ec 0c             	sub    $0xc,%esp
81000716:	ff 75 f4             	push   -0xc(%ebp)
81000719:	53                   	push   %ebx
8100071a:	ff 75 08             	push   0x8(%ebp)
8100071d:	68 e0 83 00 81       	push   $0x810083e0
81000722:	50                   	push   %eax
81000723:	e8 45 11 00 00       	call   8100186d <fiprintf>
81000728:	83 c4 20             	add    $0x20,%esp
}
8100072b:	90                   	nop
8100072c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100072f:	c9                   	leave  
81000730:	c3                   	ret    

81000731 <find_exec_path>:
 * @brief 根据文件名判断文件是否存在
 * 
 * @param file_name 
 * @return const char* 
 */
static const char* find_exec_path(const char *file_name) {
81000731:	55                   	push   %ebp
81000732:	89 e5                	mov    %esp,%ebp
81000734:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
81000737:	83 ec 08             	sub    $0x8,%esp
8100073a:	6a 00                	push   $0x0
8100073c:	ff 75 08             	push   0x8(%ebp)
8100073f:	e8 88 03 00 00       	call   81000acc <open>
81000744:	83 c4 10             	add    $0x10,%esp
81000747:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
8100074a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100074e:	79 4f                	jns    8100079f <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
81000750:	83 ec 04             	sub    $0x4,%esp
81000753:	ff 75 08             	push   0x8(%ebp)
81000756:	68 04 84 00 81       	push   $0x81008404
8100075b:	68 40 98 00 81       	push   $0x81009840
81000760:	e8 2e 4d 00 00       	call   81005493 <siprintf>
81000765:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000768:	83 ec 08             	sub    $0x8,%esp
8100076b:	6a 00                	push   $0x0
8100076d:	68 40 98 00 81       	push   $0x81009840
81000772:	e8 55 03 00 00       	call   81000acc <open>
81000777:	83 c4 10             	add    $0x10,%esp
8100077a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
8100077d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000781:	79 07                	jns    8100078a <find_exec_path+0x59>
            return (const char * )0;
81000783:	b8 00 00 00 00       	mov    $0x0,%eax
81000788:	eb 26                	jmp    810007b0 <find_exec_path+0x7f>
        }
        close(fd);
8100078a:	83 ec 0c             	sub    $0xc,%esp
8100078d:	ff 75 f4             	push   -0xc(%ebp)
81000790:	e8 b8 03 00 00       	call   81000b4d <close>
81000795:	83 c4 10             	add    $0x10,%esp
        return path;
81000798:	b8 40 98 00 81       	mov    $0x81009840,%eax
8100079d:	eb 11                	jmp    810007b0 <find_exec_path+0x7f>
    } else {
        close(fd);
8100079f:	83 ec 0c             	sub    $0xc,%esp
810007a2:	ff 75 f4             	push   -0xc(%ebp)
810007a5:	e8 a3 03 00 00       	call   81000b4d <close>
810007aa:	83 c4 10             	add    $0x10,%esp
        return file_name;
810007ad:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
810007b0:	c9                   	leave  
810007b1:	c3                   	ret    

810007b2 <main>:

int main(int argc, char **argv) {
810007b2:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810007b6:	83 e4 f0             	and    $0xfffffff0,%esp
810007b9:	ff 71 fc             	push   -0x4(%ecx)
810007bc:	55                   	push   %ebp
810007bd:	89 e5                	mov    %esp,%ebp
810007bf:	51                   	push   %ecx
810007c0:	83 ec 54             	sub    $0x54,%esp
810007c3:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
810007c5:	8b 40 04             	mov    0x4(%eax),%eax
810007c8:	8b 00                	mov    (%eax),%eax
810007ca:	83 ec 08             	sub    $0x8,%esp
810007cd:	6a 02                	push   $0x2
810007cf:	50                   	push   %eax
810007d0:	e8 f7 02 00 00       	call   81000acc <open>
810007d5:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
810007d8:	83 ec 0c             	sub    $0xc,%esp
810007db:	6a 00                	push   $0x0
810007dd:	e8 22 04 00 00       	call   81000c04 <dup>
810007e2:	83 c4 10             	add    $0x10,%esp
  dup(0);
810007e5:	83 ec 0c             	sub    $0xc,%esp
810007e8:	6a 00                	push   $0x0
810007ea:	e8 15 04 00 00       	call   81000c04 <dup>
810007ef:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
810007f2:	e8 58 fd ff ff       	call   8100054f <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
810007f7:	e8 91 fd ff ff       	call   8100058d <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810007fc:	e8 05 2b 00 00       	call   81003306 <__getreent>
81000801:	8b 40 04             	mov    0x4(%eax),%eax
81000804:	83 ec 04             	sub    $0x4,%esp
81000807:	50                   	push   %eax
81000808:	68 00 04 00 00       	push   $0x400
8100080d:	68 20 94 00 81       	push   $0x81009420
81000812:	e8 18 0b 00 00       	call   8100132f <fgets>
81000817:	83 c4 10             	add    $0x10,%esp
8100081a:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
8100081d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000821:	0f 84 2f 01 00 00    	je     81000956 <main+0x1a4>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
81000827:	83 ec 08             	sub    $0x8,%esp
8100082a:	6a 0a                	push   $0xa
8100082c:	68 20 94 00 81       	push   $0x81009420
81000831:	e8 da 4d 00 00       	call   81005610 <strchr>
81000836:	83 c4 10             	add    $0x10,%esp
81000839:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100083c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000840:	74 06                	je     81000848 <main+0x96>
      *cr = '\0';
81000842:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000845:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
81000848:	83 ec 08             	sub    $0x8,%esp
8100084b:	6a 0d                	push   $0xd
8100084d:	68 20 94 00 81       	push   $0x81009420
81000852:	e8 b9 4d 00 00       	call   81005610 <strchr>
81000857:	83 c4 10             	add    $0x10,%esp
8100085a:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
8100085d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000861:	74 06                	je     81000869 <main+0xb7>
      *cr = '\0';
81000863:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000866:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
81000869:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000870:	83 ec 04             	sub    $0x4,%esp
81000873:	6a 28                	push   $0x28
81000875:	6a 00                	push   $0x0
81000877:	8d 45 b4             	lea    -0x4c(%ebp),%eax
8100087a:	50                   	push   %eax
8100087b:	e8 30 38 00 00       	call   810040b0 <memset>
81000880:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000883:	c7 45 e4 0b 84 00 81 	movl   $0x8100840b,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
8100088a:	83 ec 08             	sub    $0x8,%esp
8100088d:	ff 75 e4             	push   -0x1c(%ebp)
81000890:	68 20 94 00 81       	push   $0x81009420
81000895:	e8 9f 4f 00 00       	call   81005839 <strtok>
8100089a:	83 c4 10             	add    $0x10,%esp
8100089d:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810008a0:	eb 23                	jmp    810008c5 <main+0x113>
      argv[argc++] = token;
810008a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a5:	8d 50 01             	lea    0x1(%eax),%edx
810008a8:	89 55 f4             	mov    %edx,-0xc(%ebp)
810008ab:	8b 55 f0             	mov    -0x10(%ebp),%edx
810008ae:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
810008b2:	83 ec 08             	sub    $0x8,%esp
810008b5:	ff 75 e4             	push   -0x1c(%ebp)
810008b8:	6a 00                	push   $0x0
810008ba:	e8 7a 4f 00 00       	call   81005839 <strtok>
810008bf:	83 c4 10             	add    $0x10,%esp
810008c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
810008c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810008c9:	75 d7                	jne    810008a2 <main+0xf0>
    }

    if (argc == 0) {
810008cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008cf:	0f 84 87 00 00 00    	je     8100095c <main+0x1aa>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
810008d5:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810008d8:	83 ec 0c             	sub    $0xc,%esp
810008db:	50                   	push   %eax
810008dc:	e8 df fc ff ff       	call   810005c0 <find_builtin>
810008e1:	83 c4 10             	add    $0x10,%esp
810008e4:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
810008e7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810008eb:	74 17                	je     81000904 <main+0x152>
      run_builtin(cmd, argc, argv);
810008ed:	83 ec 04             	sub    $0x4,%esp
810008f0:	8d 45 b4             	lea    -0x4c(%ebp),%eax
810008f3:	50                   	push   %eax
810008f4:	ff 75 f4             	push   -0xc(%ebp)
810008f7:	ff 75 e0             	push   -0x20(%ebp)
810008fa:	e8 04 fd ff ff       	call   81000603 <run_builtin>
810008ff:	83 c4 10             	add    $0x10,%esp
      continue;
81000902:	eb 59                	jmp    8100095d <main+0x1ab>
    }



    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    const char *path = find_exec_path(argv[0]);
81000904:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000907:	83 ec 0c             	sub    $0xc,%esp
8100090a:	50                   	push   %eax
8100090b:	e8 21 fe ff ff       	call   81000731 <find_exec_path>
81000910:	83 c4 10             	add    $0x10,%esp
81000913:	89 45 dc             	mov    %eax,-0x24(%ebp)
    if (path) {
81000916:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100091a:	74 17                	je     81000933 <main+0x181>
      run_exec_file(path, argc, argv);
8100091c:	83 ec 04             	sub    $0x4,%esp
8100091f:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000922:	50                   	push   %eax
81000923:	ff 75 f4             	push   -0xc(%ebp)
81000926:	ff 75 dc             	push   -0x24(%ebp)
81000929:	e8 1e fd ff ff       	call   8100064c <run_exec_file>
8100092e:	83 c4 10             	add    $0x10,%esp
      continue;
81000931:	eb 2a                	jmp    8100095d <main+0x1ab>
    } else {

      fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000933:	e8 ce 29 00 00       	call   81003306 <__getreent>
81000938:	8b 40 0c             	mov    0xc(%eax),%eax
8100093b:	83 ec 04             	sub    $0x4,%esp
8100093e:	68 20 94 00 81       	push   $0x81009420
81000943:	68 10 84 00 81       	push   $0x81008410
81000948:	50                   	push   %eax
81000949:	e8 1f 0f 00 00       	call   8100186d <fiprintf>
8100094e:	83 c4 10             	add    $0x10,%esp
81000951:	e9 a1 fe ff ff       	jmp    810007f7 <main+0x45>
      continue;
81000956:	90                   	nop
81000957:	e9 9b fe ff ff       	jmp    810007f7 <main+0x45>
      continue;
8100095c:	90                   	nop
  for (;;) {
8100095d:	e9 95 fe ff ff       	jmp    810007f7 <main+0x45>

81000962 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000962:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000965:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000967:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000969:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100096b:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8100096d:	e9 00 00 00 00       	jmp    81000972 <cstart>

81000972 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000972:	55                   	push   %ebp
81000973:	89 e5                	mov    %esp,%ebp
81000975:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000978:	c7 45 f4 20 92 00 81 	movl   $0x81009220,-0xc(%ebp)
    while (start < __bss_end__) {
8100097f:	eb 0c                	jmp    8100098d <cstart+0x1b>
        *(start++) = 0;
81000981:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000984:	8d 50 01             	lea    0x1(%eax),%edx
81000987:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100098a:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8100098d:	81 7d f4 c0 99 00 81 	cmpl   $0x810099c0,-0xc(%ebp)
81000994:	72 eb                	jb     81000981 <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000996:	83 ec 08             	sub    $0x8,%esp
81000999:	ff 75 0c             	push   0xc(%ebp)
8100099c:	ff 75 08             	push   0x8(%ebp)
8100099f:	e8 0e fe ff ff       	call   810007b2 <main>
810009a4:	83 c4 10             	add    $0x10,%esp
810009a7:	83 ec 0c             	sub    $0xc,%esp
810009aa:	50                   	push   %eax
810009ab:	e8 02 04 00 00       	call   81000db2 <exit>

810009b0 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
810009b0:	55                   	push   %ebp
810009b1:	89 e5                	mov    %esp,%ebp
810009b3:	57                   	push   %edi
810009b4:	56                   	push   %esi
810009b5:	53                   	push   %ebx
810009b6:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810009b9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810009c0:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810009c7:	8b 45 08             	mov    0x8(%ebp),%eax
810009ca:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810009cd:	8b 55 08             	mov    0x8(%ebp),%edx
810009d0:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810009d3:	8b 4d 08             	mov    0x8(%ebp),%ecx
810009d6:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810009d9:	8b 5d 08             	mov    0x8(%ebp),%ebx
810009dc:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810009df:	8b 75 08             	mov    0x8(%ebp),%esi
810009e2:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810009e4:	8d 7d e8             	lea    -0x18(%ebp),%edi
810009e7:	50                   	push   %eax
810009e8:	52                   	push   %edx
810009e9:	51                   	push   %ecx
810009ea:	53                   	push   %ebx
810009eb:	56                   	push   %esi
810009ec:	ff 1f                	lcall  *(%edi)
810009ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810009f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810009f4:	83 c4 10             	add    $0x10,%esp
810009f7:	5b                   	pop    %ebx
810009f8:	5e                   	pop    %esi
810009f9:	5f                   	pop    %edi
810009fa:	5d                   	pop    %ebp
810009fb:	c3                   	ret    

810009fc <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810009fc:	55                   	push   %ebp
810009fd:	89 e5                	mov    %esp,%ebp
810009ff:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000a02:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000a06:	7e 1b                	jle    81000a23 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000a08:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000a0f:	8b 45 08             	mov    0x8(%ebp),%eax
81000a12:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000a15:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a18:	50                   	push   %eax
81000a19:	e8 92 ff ff ff       	call   810009b0 <sys_call>
81000a1e:	83 c4 04             	add    $0x4,%esp
81000a21:	eb 01                	jmp    81000a24 <msleep+0x28>
    if (ms <= 0) return;
81000a23:	90                   	nop

}
81000a24:	c9                   	leave  
81000a25:	c3                   	ret    

81000a26 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000a26:	55                   	push   %ebp
81000a27:	89 e5                	mov    %esp,%ebp
81000a29:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000a2c:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000a33:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a36:	50                   	push   %eax
81000a37:	e8 74 ff ff ff       	call   810009b0 <sys_call>
81000a3c:	83 c4 04             	add    $0x4,%esp
}
81000a3f:	c9                   	leave  
81000a40:	c3                   	ret    

81000a41 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000a41:	55                   	push   %ebp
81000a42:	89 e5                	mov    %esp,%ebp
81000a44:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000a47:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000a4e:	8b 45 08             	mov    0x8(%ebp),%eax
81000a51:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000a54:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a57:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000a5a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a5d:	50                   	push   %eax
81000a5e:	e8 4d ff ff ff       	call   810009b0 <sys_call>
81000a63:	83 c4 04             	add    $0x4,%esp
}
81000a66:	90                   	nop
81000a67:	c9                   	leave  
81000a68:	c3                   	ret    

81000a69 <fork>:

int fork (void) {
81000a69:	55                   	push   %ebp
81000a6a:	89 e5                	mov    %esp,%ebp
81000a6c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000a6f:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000a76:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a79:	50                   	push   %eax
81000a7a:	e8 31 ff ff ff       	call   810009b0 <sys_call>
81000a7f:	83 c4 04             	add    $0x4,%esp
}
81000a82:	c9                   	leave  
81000a83:	c3                   	ret    

81000a84 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000a84:	55                   	push   %ebp
81000a85:	89 e5                	mov    %esp,%ebp
81000a87:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000a8a:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000a91:	8b 45 08             	mov    0x8(%ebp),%eax
81000a94:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000a97:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000a9d:	8b 45 10             	mov    0x10(%ebp),%eax
81000aa0:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000aa3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aa6:	50                   	push   %eax
81000aa7:	e8 04 ff ff ff       	call   810009b0 <sys_call>
81000aac:	83 c4 04             	add    $0x4,%esp
}
81000aaf:	c9                   	leave  
81000ab0:	c3                   	ret    

81000ab1 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000ab1:	55                   	push   %ebp
81000ab2:	89 e5                	mov    %esp,%ebp
81000ab4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000ab7:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000abe:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ac1:	50                   	push   %eax
81000ac2:	e8 e9 fe ff ff       	call   810009b0 <sys_call>
81000ac7:	83 c4 04             	add    $0x4,%esp
}
81000aca:	c9                   	leave  
81000acb:	c3                   	ret    

81000acc <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000acc:	55                   	push   %ebp
81000acd:	89 e5                	mov    %esp,%ebp
81000acf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000ad2:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000ad9:	8b 45 08             	mov    0x8(%ebp),%eax
81000adc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000adf:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ae2:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000ae5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ae8:	50                   	push   %eax
81000ae9:	e8 c2 fe ff ff       	call   810009b0 <sys_call>
81000aee:	83 c4 04             	add    $0x4,%esp
}
81000af1:	c9                   	leave  
81000af2:	c3                   	ret    

81000af3 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000af3:	55                   	push   %ebp
81000af4:	89 e5                	mov    %esp,%ebp
81000af6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000af9:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000b00:	8b 45 08             	mov    0x8(%ebp),%eax
81000b03:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000b06:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b09:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000b0c:	8b 45 10             	mov    0x10(%ebp),%eax
81000b0f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000b12:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b15:	50                   	push   %eax
81000b16:	e8 95 fe ff ff       	call   810009b0 <sys_call>
81000b1b:	83 c4 04             	add    $0x4,%esp
}
81000b1e:	c9                   	leave  
81000b1f:	c3                   	ret    

81000b20 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000b20:	55                   	push   %ebp
81000b21:	89 e5                	mov    %esp,%ebp
81000b23:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000b26:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000b2d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b30:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000b33:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b36:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000b39:	8b 45 10             	mov    0x10(%ebp),%eax
81000b3c:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000b3f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b42:	50                   	push   %eax
81000b43:	e8 68 fe ff ff       	call   810009b0 <sys_call>
81000b48:	83 c4 04             	add    $0x4,%esp
}
81000b4b:	c9                   	leave  
81000b4c:	c3                   	ret    

81000b4d <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000b4d:	55                   	push   %ebp
81000b4e:	89 e5                	mov    %esp,%ebp
81000b50:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000b53:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000b5a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b5d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000b60:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b63:	50                   	push   %eax
81000b64:	e8 47 fe ff ff       	call   810009b0 <sys_call>
81000b69:	83 c4 04             	add    $0x4,%esp
}
81000b6c:	c9                   	leave  
81000b6d:	c3                   	ret    

81000b6e <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000b6e:	55                   	push   %ebp
81000b6f:	89 e5                	mov    %esp,%ebp
81000b71:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000b74:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000b7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000b7e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000b81:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b84:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000b87:	8b 45 10             	mov    0x10(%ebp),%eax
81000b8a:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000b8d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b90:	50                   	push   %eax
81000b91:	e8 1a fe ff ff       	call   810009b0 <sys_call>
81000b96:	83 c4 04             	add    $0x4,%esp
}
81000b99:	c9                   	leave  
81000b9a:	c3                   	ret    

81000b9b <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000b9b:	55                   	push   %ebp
81000b9c:	89 e5                	mov    %esp,%ebp
81000b9e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000ba1:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000ba8:	8b 45 08             	mov    0x8(%ebp),%eax
81000bab:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000bae:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bb1:	50                   	push   %eax
81000bb2:	e8 f9 fd ff ff       	call   810009b0 <sys_call>
81000bb7:	83 c4 04             	add    $0x4,%esp
}
81000bba:	c9                   	leave  
81000bbb:	c3                   	ret    

81000bbc <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000bbc:	55                   	push   %ebp
81000bbd:	89 e5                	mov    %esp,%ebp
81000bbf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000bc2:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000bc9:	8b 45 08             	mov    0x8(%ebp),%eax
81000bcc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000bcf:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bd2:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000bd5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bd8:	50                   	push   %eax
81000bd9:	e8 d2 fd ff ff       	call   810009b0 <sys_call>
81000bde:	83 c4 04             	add    $0x4,%esp
}
81000be1:	c9                   	leave  
81000be2:	c3                   	ret    

81000be3 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000be3:	55                   	push   %ebp
81000be4:	89 e5                	mov    %esp,%ebp
81000be6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000be9:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
81000bf0:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf3:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000bf6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bf9:	50                   	push   %eax
81000bfa:	e8 b1 fd ff ff       	call   810009b0 <sys_call>
81000bff:	83 c4 04             	add    $0x4,%esp
}
81000c02:	c9                   	leave  
81000c03:	c3                   	ret    

81000c04 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000c04:	55                   	push   %ebp
81000c05:	89 e5                	mov    %esp,%ebp
81000c07:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000c0a:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000c11:	8b 45 08             	mov    0x8(%ebp),%eax
81000c14:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000c17:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c1a:	50                   	push   %eax
81000c1b:	e8 90 fd ff ff       	call   810009b0 <sys_call>
81000c20:	83 c4 04             	add    $0x4,%esp
}
81000c23:	c9                   	leave  
81000c24:	c3                   	ret    

81000c25 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000c25:	55                   	push   %ebp
81000c26:	89 e5                	mov    %esp,%ebp
81000c28:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000c2b:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000c32:	8b 45 08             	mov    0x8(%ebp),%eax
81000c35:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000c38:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c3b:	50                   	push   %eax
81000c3c:	e8 6f fd ff ff       	call   810009b0 <sys_call>
81000c41:	83 c4 04             	add    $0x4,%esp
}
81000c44:	90                   	nop
81000c45:	c9                   	leave  
81000c46:	c3                   	ret    

81000c47 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000c47:	55                   	push   %ebp
81000c48:	89 e5                	mov    %esp,%ebp
81000c4a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000c4d:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000c54:	8b 45 08             	mov    0x8(%ebp),%eax
81000c57:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000c5a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c5d:	50                   	push   %eax
81000c5e:	e8 4d fd ff ff       	call   810009b0 <sys_call>
81000c63:	83 c4 04             	add    $0x4,%esp
}
81000c66:	c9                   	leave  
81000c67:	c3                   	ret    

81000c68 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000c68:	55                   	push   %ebp
81000c69:	89 e5                	mov    %esp,%ebp
81000c6b:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000c6e:	83 ec 0c             	sub    $0xc,%esp
81000c71:	6a 20                	push   $0x20
81000c73:	e8 18 28 00 00       	call   81003490 <malloc>
81000c78:	83 c4 10             	add    $0x10,%esp
81000c7b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000c7e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000c82:	75 07                	jne    81000c8b <opendir+0x23>
        return (DIR*)0;
81000c84:	b8 00 00 00 00       	mov    $0x0,%eax
81000c89:	eb 43                	jmp    81000cce <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000c8b:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000c92:	8b 45 08             	mov    0x8(%ebp),%eax
81000c95:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000c98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000c9e:	83 ec 0c             	sub    $0xc,%esp
81000ca1:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000ca4:	50                   	push   %eax
81000ca5:	e8 06 fd ff ff       	call   810009b0 <sys_call>
81000caa:	83 c4 10             	add    $0x10,%esp
81000cad:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000cb0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000cb4:	79 15                	jns    81000ccb <opendir+0x63>
        free(dir);
81000cb6:	83 ec 0c             	sub    $0xc,%esp
81000cb9:	ff 75 f4             	push   -0xc(%ebp)
81000cbc:	e8 eb 27 00 00       	call   810034ac <free>
81000cc1:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000cc4:	b8 00 00 00 00       	mov    $0x0,%eax
81000cc9:	eb 03                	jmp    81000cce <opendir+0x66>
    }

    return dir;    
81000ccb:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000cce:	c9                   	leave  
81000ccf:	c3                   	ret    

81000cd0 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000cd0:	55                   	push   %ebp
81000cd1:	89 e5                	mov    %esp,%ebp
81000cd3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000cd6:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000cdd:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce0:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000ce3:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce6:	83 c0 04             	add    $0x4,%eax
81000ce9:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000cec:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000cef:	50                   	push   %eax
81000cf0:	e8 bb fc ff ff       	call   810009b0 <sys_call>
81000cf5:	83 c4 04             	add    $0x4,%esp
81000cf8:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000cfb:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000cff:	79 07                	jns    81000d08 <readdir+0x38>
        return (struct dirent*)0;
81000d01:	b8 00 00 00 00       	mov    $0x0,%eax
81000d06:	eb 06                	jmp    81000d0e <readdir+0x3e>
    }

    return &dir->dirent;   
81000d08:	8b 45 08             	mov    0x8(%ebp),%eax
81000d0b:	83 c0 04             	add    $0x4,%eax
}
81000d0e:	c9                   	leave  
81000d0f:	c3                   	ret    

81000d10 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000d10:	55                   	push   %ebp
81000d11:	89 e5                	mov    %esp,%ebp
81000d13:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000d16:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000d1d:	8b 45 08             	mov    0x8(%ebp),%eax
81000d20:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000d23:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000d26:	50                   	push   %eax
81000d27:	e8 84 fc ff ff       	call   810009b0 <sys_call>
81000d2c:	83 c4 04             	add    $0x4,%esp
81000d2f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000d32:	83 ec 0c             	sub    $0xc,%esp
81000d35:	ff 75 08             	push   0x8(%ebp)
81000d38:	e8 6f 27 00 00       	call   810034ac <free>
81000d3d:	83 c4 10             	add    $0x10,%esp

    return err;   
81000d40:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000d43:	c9                   	leave  
81000d44:	c3                   	ret    

81000d45 <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000d45:	55                   	push   %ebp
81000d46:	89 e5                	mov    %esp,%ebp
81000d48:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000d4b:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000d52:	8b 45 08             	mov    0x8(%ebp),%eax
81000d55:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000d58:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d5b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000d5e:	8b 45 10             	mov    0x10(%ebp),%eax
81000d61:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000d64:	8b 45 14             	mov    0x14(%ebp),%eax
81000d67:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000d6a:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000d6d:	50                   	push   %eax
81000d6e:	e8 3d fc ff ff       	call   810009b0 <sys_call>
81000d73:	83 c4 04             	add    $0x4,%esp
81000d76:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000d79:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000d7c:	c9                   	leave  
81000d7d:	c3                   	ret    

81000d7e <atoi>:
81000d7e:	55                   	push   %ebp
81000d7f:	89 e5                	mov    %esp,%ebp
81000d81:	83 ec 08             	sub    $0x8,%esp
81000d84:	83 ec 04             	sub    $0x4,%esp
81000d87:	6a 0a                	push   $0xa
81000d89:	6a 00                	push   $0x0
81000d8b:	ff 75 08             	push   0x8(%ebp)
81000d8e:	e8 e3 4d 00 00       	call   81005b76 <strtol>
81000d93:	83 c4 10             	add    $0x10,%esp
81000d96:	c9                   	leave  
81000d97:	c3                   	ret    

81000d98 <_atoi_r>:
81000d98:	55                   	push   %ebp
81000d99:	89 e5                	mov    %esp,%ebp
81000d9b:	83 ec 08             	sub    $0x8,%esp
81000d9e:	6a 0a                	push   $0xa
81000da0:	6a 00                	push   $0x0
81000da2:	ff 75 0c             	push   0xc(%ebp)
81000da5:	ff 75 08             	push   0x8(%ebp)
81000da8:	e8 7f 4d 00 00       	call   81005b2c <_strtol_r>
81000dad:	83 c4 10             	add    $0x10,%esp
81000db0:	c9                   	leave  
81000db1:	c3                   	ret    

81000db2 <exit>:
81000db2:	55                   	push   %ebp
81000db3:	89 e5                	mov    %esp,%ebp
81000db5:	83 ec 08             	sub    $0x8,%esp
81000db8:	83 ec 08             	sub    $0x8,%esp
81000dbb:	6a 00                	push   $0x0
81000dbd:	ff 75 08             	push   0x8(%ebp)
81000dc0:	e8 ae 50 00 00       	call   81005e73 <__call_exitprocs>
81000dc5:	83 c4 10             	add    $0x10,%esp
81000dc8:	a1 b8 84 00 81       	mov    0x810084b8,%eax
81000dcd:	8b 40 3c             	mov    0x3c(%eax),%eax
81000dd0:	85 c0                	test   %eax,%eax
81000dd2:	74 17                	je     81000deb <exit+0x39>
81000dd4:	a1 b8 84 00 81       	mov    0x810084b8,%eax
81000dd9:	8b 40 3c             	mov    0x3c(%eax),%eax
81000ddc:	8b 15 b8 84 00 81    	mov    0x810084b8,%edx
81000de2:	83 ec 0c             	sub    $0xc,%esp
81000de5:	52                   	push   %edx
81000de6:	ff d0                	call   *%eax
81000de8:	83 c4 10             	add    $0x10,%esp
81000deb:	83 ec 0c             	sub    $0xc,%esp
81000dee:	ff 75 08             	push   0x8(%ebp)
81000df1:	e8 2f fe ff ff       	call   81000c25 <_exit>

81000df6 <_fclose_r>:
81000df6:	55                   	push   %ebp
81000df7:	89 e5                	mov    %esp,%ebp
81000df9:	53                   	push   %ebx
81000dfa:	83 ec 14             	sub    $0x14,%esp
81000dfd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e00:	85 db                	test   %ebx,%ebx
81000e02:	75 0a                	jne    81000e0e <_fclose_r+0x18>
81000e04:	b8 00 00 00 00       	mov    $0x0,%eax
81000e09:	e9 ea 00 00 00       	jmp    81000ef8 <_fclose_r+0x102>
81000e0e:	8b 45 08             	mov    0x8(%ebp),%eax
81000e11:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000e14:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e18:	74 18                	je     81000e32 <_fclose_r+0x3c>
81000e1a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e1d:	8b 40 38             	mov    0x38(%eax),%eax
81000e20:	85 c0                	test   %eax,%eax
81000e22:	75 0e                	jne    81000e32 <_fclose_r+0x3c>
81000e24:	83 ec 0c             	sub    $0xc,%esp
81000e27:	ff 75 f0             	push   -0x10(%ebp)
81000e2a:	e8 14 08 00 00       	call   81001643 <__sinit>
81000e2f:	83 c4 10             	add    $0x10,%esp
81000e32:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e36:	66 85 c0             	test   %ax,%ax
81000e39:	75 0a                	jne    81000e45 <_fclose_r+0x4f>
81000e3b:	b8 00 00 00 00       	mov    $0x0,%eax
81000e40:	e9 b3 00 00 00       	jmp    81000ef8 <_fclose_r+0x102>
81000e45:	83 ec 08             	sub    $0x8,%esp
81000e48:	53                   	push   %ebx
81000e49:	ff 75 08             	push   0x8(%ebp)
81000e4c:	e8 c9 00 00 00       	call   81000f1a <__sflush_r>
81000e51:	83 c4 10             	add    $0x10,%esp
81000e54:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e57:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000e5a:	85 c0                	test   %eax,%eax
81000e5c:	74 1d                	je     81000e7b <_fclose_r+0x85>
81000e5e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000e61:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000e64:	83 ec 08             	sub    $0x8,%esp
81000e67:	52                   	push   %edx
81000e68:	ff 75 08             	push   0x8(%ebp)
81000e6b:	ff d0                	call   *%eax
81000e6d:	83 c4 10             	add    $0x10,%esp
81000e70:	85 c0                	test   %eax,%eax
81000e72:	79 07                	jns    81000e7b <_fclose_r+0x85>
81000e74:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000e7b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e7f:	98                   	cwtl   
81000e80:	25 80 00 00 00       	and    $0x80,%eax
81000e85:	85 c0                	test   %eax,%eax
81000e87:	74 12                	je     81000e9b <_fclose_r+0xa5>
81000e89:	8b 43 10             	mov    0x10(%ebx),%eax
81000e8c:	83 ec 08             	sub    $0x8,%esp
81000e8f:	50                   	push   %eax
81000e90:	ff 75 08             	push   0x8(%ebp)
81000e93:	e8 01 0a 00 00       	call   81001899 <_free_r>
81000e98:	83 c4 10             	add    $0x10,%esp
81000e9b:	8b 43 30             	mov    0x30(%ebx),%eax
81000e9e:	85 c0                	test   %eax,%eax
81000ea0:	74 23                	je     81000ec5 <_fclose_r+0xcf>
81000ea2:	8b 53 30             	mov    0x30(%ebx),%edx
81000ea5:	8d 43 40             	lea    0x40(%ebx),%eax
81000ea8:	39 c2                	cmp    %eax,%edx
81000eaa:	74 12                	je     81000ebe <_fclose_r+0xc8>
81000eac:	8b 43 30             	mov    0x30(%ebx),%eax
81000eaf:	83 ec 08             	sub    $0x8,%esp
81000eb2:	50                   	push   %eax
81000eb3:	ff 75 08             	push   0x8(%ebp)
81000eb6:	e8 de 09 00 00       	call   81001899 <_free_r>
81000ebb:	83 c4 10             	add    $0x10,%esp
81000ebe:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000ec5:	8b 43 44             	mov    0x44(%ebx),%eax
81000ec8:	85 c0                	test   %eax,%eax
81000eca:	74 19                	je     81000ee5 <_fclose_r+0xef>
81000ecc:	8b 43 44             	mov    0x44(%ebx),%eax
81000ecf:	83 ec 08             	sub    $0x8,%esp
81000ed2:	50                   	push   %eax
81000ed3:	ff 75 08             	push   0x8(%ebp)
81000ed6:	e8 be 09 00 00       	call   81001899 <_free_r>
81000edb:	83 c4 10             	add    $0x10,%esp
81000ede:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000ee5:	e8 f2 07 00 00       	call   810016dc <__sfp_lock_acquire>
81000eea:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000ef0:	e8 ed 07 00 00       	call   810016e2 <__sfp_lock_release>
81000ef5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ef8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000efb:	c9                   	leave  
81000efc:	c3                   	ret    

81000efd <fclose>:
81000efd:	55                   	push   %ebp
81000efe:	89 e5                	mov    %esp,%ebp
81000f00:	83 ec 08             	sub    $0x8,%esp
81000f03:	8b 55 08             	mov    0x8(%ebp),%edx
81000f06:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81000f0b:	83 ec 08             	sub    $0x8,%esp
81000f0e:	52                   	push   %edx
81000f0f:	50                   	push   %eax
81000f10:	e8 e1 fe ff ff       	call   81000df6 <_fclose_r>
81000f15:	83 c4 10             	add    $0x10,%esp
81000f18:	c9                   	leave  
81000f19:	c3                   	ret    

81000f1a <__sflush_r>:
81000f1a:	55                   	push   %ebp
81000f1b:	89 e5                	mov    %esp,%ebp
81000f1d:	57                   	push   %edi
81000f1e:	56                   	push   %esi
81000f1f:	53                   	push   %ebx
81000f20:	83 ec 1c             	sub    $0x1c,%esp
81000f23:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000f26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f2a:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000f2e:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000f32:	83 e0 08             	and    $0x8,%eax
81000f35:	85 c0                	test   %eax,%eax
81000f37:	0f 85 93 01 00 00    	jne    810010d0 <__sflush_r+0x1b6>
81000f3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f41:	80 cc 08             	or     $0x8,%ah
81000f44:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f48:	8b 43 04             	mov    0x4(%ebx),%eax
81000f4b:	85 c0                	test   %eax,%eax
81000f4d:	7f 0b                	jg     81000f5a <__sflush_r+0x40>
81000f4f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000f52:	85 c0                	test   %eax,%eax
81000f54:	0f 8e 6f 01 00 00    	jle    810010c9 <__sflush_r+0x1af>
81000f5a:	8b 43 28             	mov    0x28(%ebx),%eax
81000f5d:	85 c0                	test   %eax,%eax
81000f5f:	0f 84 64 01 00 00    	je     810010c9 <__sflush_r+0x1af>
81000f65:	8b 45 08             	mov    0x8(%ebp),%eax
81000f68:	8b 00                	mov    (%eax),%eax
81000f6a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000f70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000f76:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f7a:	98                   	cwtl   
81000f7b:	25 00 10 00 00       	and    $0x1000,%eax
81000f80:	85 c0                	test   %eax,%eax
81000f82:	74 08                	je     81000f8c <__sflush_r+0x72>
81000f84:	8b 43 50             	mov    0x50(%ebx),%eax
81000f87:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000f8a:	eb 64                	jmp    81000ff0 <__sflush_r+0xd6>
81000f8c:	8b 43 28             	mov    0x28(%ebx),%eax
81000f8f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f92:	6a 01                	push   $0x1
81000f94:	6a 00                	push   $0x0
81000f96:	52                   	push   %edx
81000f97:	ff 75 08             	push   0x8(%ebp)
81000f9a:	ff d0                	call   *%eax
81000f9c:	83 c4 10             	add    $0x10,%esp
81000f9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000fa2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000fa6:	75 48                	jne    81000ff0 <__sflush_r+0xd6>
81000fa8:	8b 45 08             	mov    0x8(%ebp),%eax
81000fab:	8b 00                	mov    (%eax),%eax
81000fad:	85 c0                	test   %eax,%eax
81000faf:	74 3f                	je     81000ff0 <__sflush_r+0xd6>
81000fb1:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000fb8:	8b 45 08             	mov    0x8(%ebp),%eax
81000fbb:	8b 00                	mov    (%eax),%eax
81000fbd:	83 f8 1d             	cmp    $0x1d,%eax
81000fc0:	74 0a                	je     81000fcc <__sflush_r+0xb2>
81000fc2:	8b 45 08             	mov    0x8(%ebp),%eax
81000fc5:	8b 00                	mov    (%eax),%eax
81000fc7:	83 f8 16             	cmp    $0x16,%eax
81000fca:	75 11                	jne    81000fdd <__sflush_r+0xc3>
81000fcc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000fd3:	8b 45 08             	mov    0x8(%ebp),%eax
81000fd6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000fd9:	89 10                	mov    %edx,(%eax)
81000fdb:	eb 0b                	jmp    81000fe8 <__sflush_r+0xce>
81000fdd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fe1:	83 c8 40             	or     $0x40,%eax
81000fe4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000fe8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000feb:	e9 48 01 00 00       	jmp    81001138 <__sflush_r+0x21e>
81000ff0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ff4:	98                   	cwtl   
81000ff5:	83 e0 04             	and    $0x4,%eax
81000ff8:	85 c0                	test   %eax,%eax
81000ffa:	74 13                	je     8100100f <__sflush_r+0xf5>
81000ffc:	8b 43 04             	mov    0x4(%ebx),%eax
81000fff:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001002:	8b 43 30             	mov    0x30(%ebx),%eax
81001005:	85 c0                	test   %eax,%eax
81001007:	74 06                	je     8100100f <__sflush_r+0xf5>
81001009:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100100c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100100f:	8b 43 28             	mov    0x28(%ebx),%eax
81001012:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001015:	6a 00                	push   $0x0
81001017:	ff 75 e4             	push   -0x1c(%ebp)
8100101a:	52                   	push   %edx
8100101b:	ff 75 08             	push   0x8(%ebp)
8100101e:	ff d0                	call   *%eax
81001020:	83 c4 10             	add    $0x10,%esp
81001023:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001026:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100102a:	75 1d                	jne    81001049 <__sflush_r+0x12f>
8100102c:	8b 45 08             	mov    0x8(%ebp),%eax
8100102f:	8b 00                	mov    (%eax),%eax
81001031:	85 c0                	test   %eax,%eax
81001033:	74 14                	je     81001049 <__sflush_r+0x12f>
81001035:	8b 45 08             	mov    0x8(%ebp),%eax
81001038:	8b 00                	mov    (%eax),%eax
8100103a:	83 f8 1d             	cmp    $0x1d,%eax
8100103d:	74 0a                	je     81001049 <__sflush_r+0x12f>
8100103f:	8b 45 08             	mov    0x8(%ebp),%eax
81001042:	8b 00                	mov    (%eax),%eax
81001044:	83 f8 16             	cmp    $0x16,%eax
81001047:	75 6e                	jne    810010b7 <__sflush_r+0x19d>
81001049:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100104d:	80 e4 f7             	and    $0xf7,%ah
81001050:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001054:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100105b:	8b 43 10             	mov    0x10(%ebx),%eax
8100105e:	89 03                	mov    %eax,(%ebx)
81001060:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001064:	98                   	cwtl   
81001065:	25 00 10 00 00       	and    $0x1000,%eax
8100106a:	85 c0                	test   %eax,%eax
8100106c:	74 15                	je     81001083 <__sflush_r+0x169>
8100106e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001072:	75 09                	jne    8100107d <__sflush_r+0x163>
81001074:	8b 45 08             	mov    0x8(%ebp),%eax
81001077:	8b 00                	mov    (%eax),%eax
81001079:	85 c0                	test   %eax,%eax
8100107b:	75 06                	jne    81001083 <__sflush_r+0x169>
8100107d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001080:	89 43 50             	mov    %eax,0x50(%ebx)
81001083:	8b 45 08             	mov    0x8(%ebp),%eax
81001086:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001089:	89 10                	mov    %edx,(%eax)
8100108b:	8b 43 30             	mov    0x30(%ebx),%eax
8100108e:	85 c0                	test   %eax,%eax
81001090:	74 37                	je     810010c9 <__sflush_r+0x1af>
81001092:	8b 53 30             	mov    0x30(%ebx),%edx
81001095:	8d 43 40             	lea    0x40(%ebx),%eax
81001098:	39 c2                	cmp    %eax,%edx
8100109a:	74 12                	je     810010ae <__sflush_r+0x194>
8100109c:	8b 43 30             	mov    0x30(%ebx),%eax
8100109f:	83 ec 08             	sub    $0x8,%esp
810010a2:	50                   	push   %eax
810010a3:	ff 75 08             	push   0x8(%ebp)
810010a6:	e8 ee 07 00 00       	call   81001899 <_free_r>
810010ab:	83 c4 10             	add    $0x10,%esp
810010ae:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810010b5:	eb 12                	jmp    810010c9 <__sflush_r+0x1af>
810010b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010bb:	83 c8 40             	or     $0x40,%eax
810010be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810010c7:	eb 6f                	jmp    81001138 <__sflush_r+0x21e>
810010c9:	b8 00 00 00 00       	mov    $0x0,%eax
810010ce:	eb 68                	jmp    81001138 <__sflush_r+0x21e>
810010d0:	8b 73 10             	mov    0x10(%ebx),%esi
810010d3:	85 f6                	test   %esi,%esi
810010d5:	75 07                	jne    810010de <__sflush_r+0x1c4>
810010d7:	b8 00 00 00 00       	mov    $0x0,%eax
810010dc:	eb 5a                	jmp    81001138 <__sflush_r+0x21e>
810010de:	8b 03                	mov    (%ebx),%eax
810010e0:	29 f0                	sub    %esi,%eax
810010e2:	89 c7                	mov    %eax,%edi
810010e4:	89 33                	mov    %esi,(%ebx)
810010e6:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010ea:	83 e0 03             	and    $0x3,%eax
810010ed:	85 c0                	test   %eax,%eax
810010ef:	75 05                	jne    810010f6 <__sflush_r+0x1dc>
810010f1:	8b 43 14             	mov    0x14(%ebx),%eax
810010f4:	eb 05                	jmp    810010fb <__sflush_r+0x1e1>
810010f6:	b8 00 00 00 00       	mov    $0x0,%eax
810010fb:	89 43 08             	mov    %eax,0x8(%ebx)
810010fe:	eb 2f                	jmp    8100112f <__sflush_r+0x215>
81001100:	8b 43 24             	mov    0x24(%ebx),%eax
81001103:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001106:	57                   	push   %edi
81001107:	56                   	push   %esi
81001108:	52                   	push   %edx
81001109:	ff 75 08             	push   0x8(%ebp)
8100110c:	ff d0                	call   *%eax
8100110e:	83 c4 10             	add    $0x10,%esp
81001111:	85 c0                	test   %eax,%eax
81001113:	7f 12                	jg     81001127 <__sflush_r+0x20d>
81001115:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001119:	83 c8 40             	or     $0x40,%eax
8100111c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001120:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001125:	eb 11                	jmp    81001138 <__sflush_r+0x21e>
81001127:	89 c1                	mov    %eax,%ecx
81001129:	89 c8                	mov    %ecx,%eax
8100112b:	01 c6                	add    %eax,%esi
8100112d:	29 cf                	sub    %ecx,%edi
8100112f:	85 ff                	test   %edi,%edi
81001131:	7f cd                	jg     81001100 <__sflush_r+0x1e6>
81001133:	b8 00 00 00 00       	mov    $0x0,%eax
81001138:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100113b:	5b                   	pop    %ebx
8100113c:	5e                   	pop    %esi
8100113d:	5f                   	pop    %edi
8100113e:	5d                   	pop    %ebp
8100113f:	c3                   	ret    

81001140 <_fflush_r>:
81001140:	55                   	push   %ebp
81001141:	89 e5                	mov    %esp,%ebp
81001143:	53                   	push   %ebx
81001144:	83 ec 14             	sub    $0x14,%esp
81001147:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100114a:	8b 45 08             	mov    0x8(%ebp),%eax
8100114d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001150:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001154:	74 18                	je     8100116e <_fflush_r+0x2e>
81001156:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001159:	8b 40 38             	mov    0x38(%eax),%eax
8100115c:	85 c0                	test   %eax,%eax
8100115e:	75 0e                	jne    8100116e <_fflush_r+0x2e>
81001160:	83 ec 0c             	sub    $0xc,%esp
81001163:	ff 75 f4             	push   -0xc(%ebp)
81001166:	e8 d8 04 00 00       	call   81001643 <__sinit>
8100116b:	83 c4 10             	add    $0x10,%esp
8100116e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001172:	66 85 c0             	test   %ax,%ax
81001175:	75 07                	jne    8100117e <_fflush_r+0x3e>
81001177:	b8 00 00 00 00       	mov    $0x0,%eax
8100117c:	eb 15                	jmp    81001193 <_fflush_r+0x53>
8100117e:	83 ec 08             	sub    $0x8,%esp
81001181:	53                   	push   %ebx
81001182:	ff 75 08             	push   0x8(%ebp)
81001185:	e8 90 fd ff ff       	call   81000f1a <__sflush_r>
8100118a:	83 c4 10             	add    $0x10,%esp
8100118d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001190:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001193:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001196:	c9                   	leave  
81001197:	c3                   	ret    

81001198 <fflush>:
81001198:	55                   	push   %ebp
81001199:	89 e5                	mov    %esp,%ebp
8100119b:	83 ec 08             	sub    $0x8,%esp
8100119e:	8b 55 08             	mov    0x8(%ebp),%edx
810011a1:	85 d2                	test   %edx,%edx
810011a3:	75 18                	jne    810011bd <fflush+0x25>
810011a5:	a1 b8 84 00 81       	mov    0x810084b8,%eax
810011aa:	83 ec 08             	sub    $0x8,%esp
810011ad:	68 40 11 00 81       	push   $0x81001140
810011b2:	50                   	push   %eax
810011b3:	e8 d6 11 00 00       	call   8100238e <_fwalk_reent>
810011b8:	83 c4 10             	add    $0x10,%esp
810011bb:	eb 12                	jmp    810011cf <fflush+0x37>
810011bd:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810011c2:	83 ec 08             	sub    $0x8,%esp
810011c5:	52                   	push   %edx
810011c6:	50                   	push   %eax
810011c7:	e8 74 ff ff ff       	call   81001140 <_fflush_r>
810011cc:	83 c4 10             	add    $0x10,%esp
810011cf:	c9                   	leave  
810011d0:	c3                   	ret    

810011d1 <_fgets_r>:
810011d1:	55                   	push   %ebp
810011d2:	89 e5                	mov    %esp,%ebp
810011d4:	83 ec 28             	sub    $0x28,%esp
810011d7:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
810011db:	7f 0a                	jg     810011e7 <_fgets_r+0x16>
810011dd:	b8 00 00 00 00       	mov    $0x0,%eax
810011e2:	e9 46 01 00 00       	jmp    8100132d <_fgets_r+0x15c>
810011e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810011ea:	89 45 f0             	mov    %eax,-0x10(%ebp)
810011ed:	8b 45 08             	mov    0x8(%ebp),%eax
810011f0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810011f3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810011f7:	74 18                	je     81001211 <_fgets_r+0x40>
810011f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810011fc:	8b 40 38             	mov    0x38(%eax),%eax
810011ff:	85 c0                	test   %eax,%eax
81001201:	75 0e                	jne    81001211 <_fgets_r+0x40>
81001203:	83 ec 0c             	sub    $0xc,%esp
81001206:	ff 75 ec             	push   -0x14(%ebp)
81001209:	e8 35 04 00 00       	call   81001643 <__sinit>
8100120e:	83 c4 10             	add    $0x10,%esp
81001211:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001215:	8b 45 14             	mov    0x14(%ebp),%eax
81001218:	8b 40 04             	mov    0x4(%eax),%eax
8100121b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100121e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001222:	75 34                	jne    81001258 <_fgets_r+0x87>
81001224:	83 ec 08             	sub    $0x8,%esp
81001227:	ff 75 14             	push   0x14(%ebp)
8100122a:	ff 75 08             	push   0x8(%ebp)
8100122d:	e8 bf 3d 00 00       	call   81004ff1 <__srefill_r>
81001232:	83 c4 10             	add    $0x10,%esp
81001235:	85 c0                	test   %eax,%eax
81001237:	74 16                	je     8100124f <_fgets_r+0x7e>
81001239:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100123c:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100123f:	0f 85 de 00 00 00    	jne    81001323 <_fgets_r+0x152>
81001245:	b8 00 00 00 00       	mov    $0x0,%eax
8100124a:	e9 de 00 00 00       	jmp    8100132d <_fgets_r+0x15c>
8100124f:	8b 45 14             	mov    0x14(%ebp),%eax
81001252:	8b 40 04             	mov    0x4(%eax),%eax
81001255:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001258:	8b 45 14             	mov    0x14(%ebp),%eax
8100125b:	8b 00                	mov    (%eax),%eax
8100125d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001260:	8b 45 10             	mov    0x10(%ebp),%eax
81001263:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001266:	76 06                	jbe    8100126e <_fgets_r+0x9d>
81001268:	8b 45 10             	mov    0x10(%ebp),%eax
8100126b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100126e:	83 ec 04             	sub    $0x4,%esp
81001271:	ff 75 f4             	push   -0xc(%ebp)
81001274:	6a 0a                	push   $0xa
81001276:	ff 75 e8             	push   -0x18(%ebp)
81001279:	e8 02 2d 00 00       	call   81003f80 <memchr>
8100127e:	83 c4 10             	add    $0x10,%esp
81001281:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001284:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001288:	74 4a                	je     810012d4 <_fgets_r+0x103>
8100128a:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100128e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001291:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001294:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001297:	8b 45 14             	mov    0x14(%ebp),%eax
8100129a:	8b 40 04             	mov    0x4(%eax),%eax
8100129d:	2b 45 f4             	sub    -0xc(%ebp),%eax
810012a0:	89 c2                	mov    %eax,%edx
810012a2:	8b 45 14             	mov    0x14(%ebp),%eax
810012a5:	89 50 04             	mov    %edx,0x4(%eax)
810012a8:	8b 45 14             	mov    0x14(%ebp),%eax
810012ab:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810012ae:	89 10                	mov    %edx,(%eax)
810012b0:	83 ec 04             	sub    $0x4,%esp
810012b3:	ff 75 f4             	push   -0xc(%ebp)
810012b6:	ff 75 e8             	push   -0x18(%ebp)
810012b9:	ff 75 f0             	push   -0x10(%ebp)
810012bc:	e8 a7 2d 00 00       	call   81004068 <memcpy>
810012c1:	83 c4 10             	add    $0x10,%esp
810012c4:	8b 55 f0             	mov    -0x10(%ebp),%edx
810012c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ca:	01 d0                	add    %edx,%eax
810012cc:	c6 00 00             	movb   $0x0,(%eax)
810012cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810012d2:	eb 59                	jmp    8100132d <_fgets_r+0x15c>
810012d4:	8b 45 14             	mov    0x14(%ebp),%eax
810012d7:	8b 40 04             	mov    0x4(%eax),%eax
810012da:	2b 45 f4             	sub    -0xc(%ebp),%eax
810012dd:	89 c2                	mov    %eax,%edx
810012df:	8b 45 14             	mov    0x14(%ebp),%eax
810012e2:	89 50 04             	mov    %edx,0x4(%eax)
810012e5:	8b 45 14             	mov    0x14(%ebp),%eax
810012e8:	8b 10                	mov    (%eax),%edx
810012ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ed:	01 c2                	add    %eax,%edx
810012ef:	8b 45 14             	mov    0x14(%ebp),%eax
810012f2:	89 10                	mov    %edx,(%eax)
810012f4:	83 ec 04             	sub    $0x4,%esp
810012f7:	ff 75 f4             	push   -0xc(%ebp)
810012fa:	ff 75 e8             	push   -0x18(%ebp)
810012fd:	ff 75 f0             	push   -0x10(%ebp)
81001300:	e8 63 2d 00 00       	call   81004068 <memcpy>
81001305:	83 c4 10             	add    $0x10,%esp
81001308:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100130e:	8b 45 10             	mov    0x10(%ebp),%eax
81001311:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001314:	89 45 10             	mov    %eax,0x10(%ebp)
81001317:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100131b:	0f 85 f4 fe ff ff    	jne    81001215 <_fgets_r+0x44>
81001321:	eb 01                	jmp    81001324 <_fgets_r+0x153>
81001323:	90                   	nop
81001324:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001327:	c6 00 00             	movb   $0x0,(%eax)
8100132a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100132d:	c9                   	leave  
8100132e:	c3                   	ret    

8100132f <fgets>:
8100132f:	55                   	push   %ebp
81001330:	89 e5                	mov    %esp,%ebp
81001332:	83 ec 08             	sub    $0x8,%esp
81001335:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100133a:	ff 75 10             	push   0x10(%ebp)
8100133d:	ff 75 0c             	push   0xc(%ebp)
81001340:	ff 75 08             	push   0x8(%ebp)
81001343:	50                   	push   %eax
81001344:	e8 88 fe ff ff       	call   810011d1 <_fgets_r>
81001349:	83 c4 10             	add    $0x10,%esp
8100134c:	c9                   	leave  
8100134d:	c3                   	ret    

8100134e <std>:
8100134e:	55                   	push   %ebp
8100134f:	89 e5                	mov    %esp,%ebp
81001351:	83 ec 08             	sub    $0x8,%esp
81001354:	8b 45 08             	mov    0x8(%ebp),%eax
81001357:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100135d:	8b 45 08             	mov    0x8(%ebp),%eax
81001360:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001367:	8b 45 08             	mov    0x8(%ebp),%eax
8100136a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001371:	8b 45 0c             	mov    0xc(%ebp),%eax
81001374:	89 c2                	mov    %eax,%edx
81001376:	8b 45 08             	mov    0x8(%ebp),%eax
81001379:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100137d:	8b 45 08             	mov    0x8(%ebp),%eax
81001380:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001387:	8b 45 10             	mov    0x10(%ebp),%eax
8100138a:	89 c2                	mov    %eax,%edx
8100138c:	8b 45 08             	mov    0x8(%ebp),%eax
8100138f:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001393:	8b 45 08             	mov    0x8(%ebp),%eax
81001396:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100139d:	8b 45 08             	mov    0x8(%ebp),%eax
810013a0:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810013a7:	8b 45 08             	mov    0x8(%ebp),%eax
810013aa:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810013b1:	8b 45 08             	mov    0x8(%ebp),%eax
810013b4:	83 c0 5c             	add    $0x5c,%eax
810013b7:	83 ec 04             	sub    $0x4,%esp
810013ba:	6a 08                	push   $0x8
810013bc:	6a 00                	push   $0x0
810013be:	50                   	push   %eax
810013bf:	e8 ec 2c 00 00       	call   810040b0 <memset>
810013c4:	83 c4 10             	add    $0x10,%esp
810013c7:	8b 45 08             	mov    0x8(%ebp),%eax
810013ca:	8b 55 08             	mov    0x8(%ebp),%edx
810013cd:	89 50 1c             	mov    %edx,0x1c(%eax)
810013d0:	8b 45 08             	mov    0x8(%ebp),%eax
810013d3:	c7 40 20 eb 54 00 81 	movl   $0x810054eb,0x20(%eax)
810013da:	8b 45 08             	mov    0x8(%ebp),%eax
810013dd:	c7 40 24 39 55 00 81 	movl   $0x81005539,0x24(%eax)
810013e4:	8b 45 08             	mov    0x8(%ebp),%eax
810013e7:	c7 40 28 94 55 00 81 	movl   $0x81005594,0x28(%eax)
810013ee:	8b 45 08             	mov    0x8(%ebp),%eax
810013f1:	c7 40 2c de 55 00 81 	movl   $0x810055de,0x2c(%eax)
810013f8:	90                   	nop
810013f9:	c9                   	leave  
810013fa:	c3                   	ret    

810013fb <stdin_init>:
810013fb:	55                   	push   %ebp
810013fc:	89 e5                	mov    %esp,%ebp
810013fe:	83 ec 08             	sub    $0x8,%esp
81001401:	83 ec 04             	sub    $0x4,%esp
81001404:	6a 00                	push   $0x0
81001406:	6a 04                	push   $0x4
81001408:	ff 75 08             	push   0x8(%ebp)
8100140b:	e8 3e ff ff ff       	call   8100134e <std>
81001410:	83 c4 10             	add    $0x10,%esp
81001413:	90                   	nop
81001414:	c9                   	leave  
81001415:	c3                   	ret    

81001416 <stdout_init>:
81001416:	55                   	push   %ebp
81001417:	89 e5                	mov    %esp,%ebp
81001419:	83 ec 08             	sub    $0x8,%esp
8100141c:	83 ec 04             	sub    $0x4,%esp
8100141f:	6a 01                	push   $0x1
81001421:	6a 09                	push   $0x9
81001423:	ff 75 08             	push   0x8(%ebp)
81001426:	e8 23 ff ff ff       	call   8100134e <std>
8100142b:	83 c4 10             	add    $0x10,%esp
8100142e:	90                   	nop
8100142f:	c9                   	leave  
81001430:	c3                   	ret    

81001431 <stderr_init>:
81001431:	55                   	push   %ebp
81001432:	89 e5                	mov    %esp,%ebp
81001434:	83 ec 08             	sub    $0x8,%esp
81001437:	83 ec 04             	sub    $0x4,%esp
8100143a:	6a 02                	push   $0x2
8100143c:	6a 12                	push   $0x12
8100143e:	ff 75 08             	push   0x8(%ebp)
81001441:	e8 08 ff ff ff       	call   8100134e <std>
81001446:	83 c4 10             	add    $0x10,%esp
81001449:	90                   	nop
8100144a:	c9                   	leave  
8100144b:	c3                   	ret    

8100144c <__sfmoreglue>:
8100144c:	55                   	push   %ebp
8100144d:	89 e5                	mov    %esp,%ebp
8100144f:	53                   	push   %ebx
81001450:	83 ec 14             	sub    $0x14,%esp
81001453:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001456:	8d 43 ff             	lea    -0x1(%ebx),%eax
81001459:	6b c0 68             	imul   $0x68,%eax,%eax
8100145c:	83 c0 74             	add    $0x74,%eax
8100145f:	83 ec 08             	sub    $0x8,%esp
81001462:	50                   	push   %eax
81001463:	ff 75 08             	push   0x8(%ebp)
81001466:	e8 f1 22 00 00       	call   8100375c <_malloc_r>
8100146b:	83 c4 10             	add    $0x10,%esp
8100146e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001471:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001475:	75 07                	jne    8100147e <__sfmoreglue+0x32>
81001477:	b8 00 00 00 00       	mov    $0x0,%eax
8100147c:	eb 38                	jmp    810014b6 <__sfmoreglue+0x6a>
8100147e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001481:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001487:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148a:	89 58 04             	mov    %ebx,0x4(%eax)
8100148d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001490:	8d 50 0c             	lea    0xc(%eax),%edx
81001493:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001496:	89 50 08             	mov    %edx,0x8(%eax)
81001499:	89 d8                	mov    %ebx,%eax
8100149b:	6b c0 68             	imul   $0x68,%eax,%eax
8100149e:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014a1:	83 c2 0c             	add    $0xc,%edx
810014a4:	83 ec 04             	sub    $0x4,%esp
810014a7:	50                   	push   %eax
810014a8:	6a 00                	push   $0x0
810014aa:	52                   	push   %edx
810014ab:	e8 00 2c 00 00       	call   810040b0 <memset>
810014b0:	83 c4 10             	add    $0x10,%esp
810014b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810014b9:	c9                   	leave  
810014ba:	c3                   	ret    

810014bb <__sfp>:
810014bb:	55                   	push   %ebp
810014bc:	89 e5                	mov    %esp,%ebp
810014be:	83 ec 18             	sub    $0x18,%esp
810014c1:	e8 16 02 00 00       	call   810016dc <__sfp_lock_acquire>
810014c6:	a1 b8 84 00 81       	mov    0x810084b8,%eax
810014cb:	8b 40 38             	mov    0x38(%eax),%eax
810014ce:	85 c0                	test   %eax,%eax
810014d0:	75 11                	jne    810014e3 <__sfp+0x28>
810014d2:	a1 b8 84 00 81       	mov    0x810084b8,%eax
810014d7:	83 ec 0c             	sub    $0xc,%esp
810014da:	50                   	push   %eax
810014db:	e8 63 01 00 00       	call   81001643 <__sinit>
810014e0:	83 c4 10             	add    $0x10,%esp
810014e3:	a1 b8 84 00 81       	mov    0x810084b8,%eax
810014e8:	05 e0 02 00 00       	add    $0x2e0,%eax
810014ed:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014f3:	8b 40 08             	mov    0x8(%eax),%eax
810014f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014fc:	8b 40 04             	mov    0x4(%eax),%eax
810014ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001502:	eb 10                	jmp    81001514 <__sfp+0x59>
81001504:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001507:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100150b:	66 85 c0             	test   %ax,%ax
8100150e:	74 58                	je     81001568 <__sfp+0xad>
81001510:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001514:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001518:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100151c:	79 e6                	jns    81001504 <__sfp+0x49>
8100151e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001521:	8b 00                	mov    (%eax),%eax
81001523:	85 c0                	test   %eax,%eax
81001525:	75 1e                	jne    81001545 <__sfp+0x8a>
81001527:	83 ec 08             	sub    $0x8,%esp
8100152a:	6a 04                	push   $0x4
8100152c:	ff 75 08             	push   0x8(%ebp)
8100152f:	e8 18 ff ff ff       	call   8100144c <__sfmoreglue>
81001534:	83 c4 10             	add    $0x10,%esp
81001537:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100153a:	89 02                	mov    %eax,(%edx)
8100153c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100153f:	8b 00                	mov    (%eax),%eax
81001541:	85 c0                	test   %eax,%eax
81001543:	74 0a                	je     8100154f <__sfp+0x94>
81001545:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001548:	8b 00                	mov    (%eax),%eax
8100154a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100154d:	eb a1                	jmp    810014f0 <__sfp+0x35>
8100154f:	90                   	nop
81001550:	e8 8d 01 00 00       	call   810016e2 <__sfp_lock_release>
81001555:	8b 45 08             	mov    0x8(%ebp),%eax
81001558:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100155e:	b8 00 00 00 00       	mov    $0x0,%eax
81001563:	e9 9e 00 00 00       	jmp    81001606 <__sfp+0x14b>
81001568:	90                   	nop
81001569:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100156c:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001572:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001575:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8100157b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100157e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001585:	e8 58 01 00 00       	call   810016e2 <__sfp_lock_release>
8100158a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100158d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001593:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001596:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100159d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015a0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810015a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015aa:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810015b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b4:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810015bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015be:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810015c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015c8:	83 c0 5c             	add    $0x5c,%eax
810015cb:	83 ec 04             	sub    $0x4,%esp
810015ce:	6a 08                	push   $0x8
810015d0:	6a 00                	push   $0x0
810015d2:	50                   	push   %eax
810015d3:	e8 d8 2a 00 00       	call   810040b0 <memset>
810015d8:	83 c4 10             	add    $0x10,%esp
810015db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015de:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810015e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015e8:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810015ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015f2:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810015f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015fc:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001603:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001606:	c9                   	leave  
81001607:	c3                   	ret    

81001608 <_cleanup_r>:
81001608:	55                   	push   %ebp
81001609:	89 e5                	mov    %esp,%ebp
8100160b:	83 ec 18             	sub    $0x18,%esp
8100160e:	c7 45 f4 f6 0d 00 81 	movl   $0x81000df6,-0xc(%ebp)
81001615:	83 ec 08             	sub    $0x8,%esp
81001618:	ff 75 f4             	push   -0xc(%ebp)
8100161b:	ff 75 08             	push   0x8(%ebp)
8100161e:	e8 6b 0d 00 00       	call   8100238e <_fwalk_reent>
81001623:	83 c4 10             	add    $0x10,%esp
81001626:	90                   	nop
81001627:	c9                   	leave  
81001628:	c3                   	ret    

81001629 <_cleanup>:
81001629:	55                   	push   %ebp
8100162a:	89 e5                	mov    %esp,%ebp
8100162c:	83 ec 08             	sub    $0x8,%esp
8100162f:	a1 b8 84 00 81       	mov    0x810084b8,%eax
81001634:	83 ec 0c             	sub    $0xc,%esp
81001637:	50                   	push   %eax
81001638:	e8 cb ff ff ff       	call   81001608 <_cleanup_r>
8100163d:	83 c4 10             	add    $0x10,%esp
81001640:	90                   	nop
81001641:	c9                   	leave  
81001642:	c3                   	ret    

81001643 <__sinit>:
81001643:	55                   	push   %ebp
81001644:	89 e5                	mov    %esp,%ebp
81001646:	83 ec 08             	sub    $0x8,%esp
81001649:	e8 9a 00 00 00       	call   810016e8 <__sinit_lock_acquire>
8100164e:	8b 45 08             	mov    0x8(%ebp),%eax
81001651:	8b 40 38             	mov    0x38(%eax),%eax
81001654:	85 c0                	test   %eax,%eax
81001656:	74 07                	je     8100165f <__sinit+0x1c>
81001658:	e8 91 00 00 00       	call   810016ee <__sinit_lock_release>
8100165d:	eb 7b                	jmp    810016da <__sinit+0x97>
8100165f:	8b 45 08             	mov    0x8(%ebp),%eax
81001662:	c7 40 3c 08 16 00 81 	movl   $0x81001608,0x3c(%eax)
81001669:	8b 45 08             	mov    0x8(%ebp),%eax
8100166c:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001673:	00 00 00 
81001676:	8b 45 08             	mov    0x8(%ebp),%eax
81001679:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001680:	00 00 00 
81001683:	8b 45 08             	mov    0x8(%ebp),%eax
81001686:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100168c:	8b 45 08             	mov    0x8(%ebp),%eax
8100168f:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001695:	8b 45 08             	mov    0x8(%ebp),%eax
81001698:	8b 40 04             	mov    0x4(%eax),%eax
8100169b:	83 ec 0c             	sub    $0xc,%esp
8100169e:	50                   	push   %eax
8100169f:	e8 57 fd ff ff       	call   810013fb <stdin_init>
810016a4:	83 c4 10             	add    $0x10,%esp
810016a7:	8b 45 08             	mov    0x8(%ebp),%eax
810016aa:	8b 40 08             	mov    0x8(%eax),%eax
810016ad:	83 ec 0c             	sub    $0xc,%esp
810016b0:	50                   	push   %eax
810016b1:	e8 60 fd ff ff       	call   81001416 <stdout_init>
810016b6:	83 c4 10             	add    $0x10,%esp
810016b9:	8b 45 08             	mov    0x8(%ebp),%eax
810016bc:	8b 40 0c             	mov    0xc(%eax),%eax
810016bf:	83 ec 0c             	sub    $0xc,%esp
810016c2:	50                   	push   %eax
810016c3:	e8 69 fd ff ff       	call   81001431 <stderr_init>
810016c8:	83 c4 10             	add    $0x10,%esp
810016cb:	8b 45 08             	mov    0x8(%ebp),%eax
810016ce:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810016d5:	e8 14 00 00 00       	call   810016ee <__sinit_lock_release>
810016da:	c9                   	leave  
810016db:	c3                   	ret    

810016dc <__sfp_lock_acquire>:
810016dc:	55                   	push   %ebp
810016dd:	89 e5                	mov    %esp,%ebp
810016df:	90                   	nop
810016e0:	5d                   	pop    %ebp
810016e1:	c3                   	ret    

810016e2 <__sfp_lock_release>:
810016e2:	55                   	push   %ebp
810016e3:	89 e5                	mov    %esp,%ebp
810016e5:	90                   	nop
810016e6:	5d                   	pop    %ebp
810016e7:	c3                   	ret    

810016e8 <__sinit_lock_acquire>:
810016e8:	55                   	push   %ebp
810016e9:	89 e5                	mov    %esp,%ebp
810016eb:	90                   	nop
810016ec:	5d                   	pop    %ebp
810016ed:	c3                   	ret    

810016ee <__sinit_lock_release>:
810016ee:	55                   	push   %ebp
810016ef:	89 e5                	mov    %esp,%ebp
810016f1:	90                   	nop
810016f2:	5d                   	pop    %ebp
810016f3:	c3                   	ret    

810016f4 <__fp_lock>:
810016f4:	55                   	push   %ebp
810016f5:	89 e5                	mov    %esp,%ebp
810016f7:	b8 00 00 00 00       	mov    $0x0,%eax
810016fc:	5d                   	pop    %ebp
810016fd:	c3                   	ret    

810016fe <__fp_unlock>:
810016fe:	55                   	push   %ebp
810016ff:	89 e5                	mov    %esp,%ebp
81001701:	b8 00 00 00 00       	mov    $0x0,%eax
81001706:	5d                   	pop    %ebp
81001707:	c3                   	ret    

81001708 <__fp_lock_all>:
81001708:	55                   	push   %ebp
81001709:	89 e5                	mov    %esp,%ebp
8100170b:	83 ec 08             	sub    $0x8,%esp
8100170e:	e8 c9 ff ff ff       	call   810016dc <__sfp_lock_acquire>
81001713:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81001718:	83 ec 08             	sub    $0x8,%esp
8100171b:	68 f4 16 00 81       	push   $0x810016f4
81001720:	50                   	push   %eax
81001721:	e8 00 0c 00 00       	call   81002326 <_fwalk>
81001726:	83 c4 10             	add    $0x10,%esp
81001729:	90                   	nop
8100172a:	c9                   	leave  
8100172b:	c3                   	ret    

8100172c <__fp_unlock_all>:
8100172c:	55                   	push   %ebp
8100172d:	89 e5                	mov    %esp,%ebp
8100172f:	83 ec 08             	sub    $0x8,%esp
81001732:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81001737:	83 ec 08             	sub    $0x8,%esp
8100173a:	68 fe 16 00 81       	push   $0x810016fe
8100173f:	50                   	push   %eax
81001740:	e8 e1 0b 00 00       	call   81002326 <_fwalk>
81001745:	83 c4 10             	add    $0x10,%esp
81001748:	e8 95 ff ff ff       	call   810016e2 <__sfp_lock_release>
8100174d:	90                   	nop
8100174e:	c9                   	leave  
8100174f:	c3                   	ret    

81001750 <_fopen_r>:
81001750:	55                   	push   %ebp
81001751:	89 e5                	mov    %esp,%ebp
81001753:	56                   	push   %esi
81001754:	53                   	push   %ebx
81001755:	83 ec 10             	sub    $0x10,%esp
81001758:	83 ec 04             	sub    $0x4,%esp
8100175b:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100175e:	50                   	push   %eax
8100175f:	ff 75 10             	push   0x10(%ebp)
81001762:	ff 75 08             	push   0x8(%ebp)
81001765:	e8 68 48 00 00       	call   81005fd2 <__sflags>
8100176a:	83 c4 10             	add    $0x10,%esp
8100176d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001770:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001774:	75 0a                	jne    81001780 <_fopen_r+0x30>
81001776:	b8 00 00 00 00       	mov    $0x0,%eax
8100177b:	e9 9e 00 00 00       	jmp    8100181e <_fopen_r+0xce>
81001780:	83 ec 0c             	sub    $0xc,%esp
81001783:	ff 75 08             	push   0x8(%ebp)
81001786:	e8 30 fd ff ff       	call   810014bb <__sfp>
8100178b:	83 c4 10             	add    $0x10,%esp
8100178e:	89 c3                	mov    %eax,%ebx
81001790:	85 db                	test   %ebx,%ebx
81001792:	75 0a                	jne    8100179e <_fopen_r+0x4e>
81001794:	b8 00 00 00 00       	mov    $0x0,%eax
81001799:	e9 80 00 00 00       	jmp    8100181e <_fopen_r+0xce>
8100179e:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017a1:	68 b6 01 00 00       	push   $0x1b6
810017a6:	50                   	push   %eax
810017a7:	ff 75 0c             	push   0xc(%ebp)
810017aa:	ff 75 08             	push   0x8(%ebp)
810017ad:	e8 e1 34 00 00       	call   81004c93 <_open_r>
810017b2:	83 c4 10             	add    $0x10,%esp
810017b5:	89 c6                	mov    %eax,%esi
810017b7:	85 f6                	test   %esi,%esi
810017b9:	79 17                	jns    810017d2 <_fopen_r+0x82>
810017bb:	e8 1c ff ff ff       	call   810016dc <__sfp_lock_acquire>
810017c0:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810017c6:	e8 17 ff ff ff       	call   810016e2 <__sfp_lock_release>
810017cb:	b8 00 00 00 00       	mov    $0x0,%eax
810017d0:	eb 4c                	jmp    8100181e <_fopen_r+0xce>
810017d2:	89 f0                	mov    %esi,%eax
810017d4:	66 89 43 0e          	mov    %ax,0xe(%ebx)
810017d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810017df:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
810017e2:	c7 43 20 eb 54 00 81 	movl   $0x810054eb,0x20(%ebx)
810017e9:	c7 43 24 39 55 00 81 	movl   $0x81005539,0x24(%ebx)
810017f0:	c7 43 28 94 55 00 81 	movl   $0x81005594,0x28(%ebx)
810017f7:	c7 43 2c de 55 00 81 	movl   $0x810055de,0x2c(%ebx)
810017fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001802:	98                   	cwtl   
81001803:	25 00 01 00 00       	and    $0x100,%eax
81001808:	85 c0                	test   %eax,%eax
8100180a:	74 10                	je     8100181c <_fopen_r+0xcc>
8100180c:	6a 02                	push   $0x2
8100180e:	6a 00                	push   $0x0
81001810:	53                   	push   %ebx
81001811:	ff 75 08             	push   0x8(%ebp)
81001814:	e8 bc 05 00 00       	call   81001dd5 <_fseek_r>
81001819:	83 c4 10             	add    $0x10,%esp
8100181c:	89 d8                	mov    %ebx,%eax
8100181e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001821:	5b                   	pop    %ebx
81001822:	5e                   	pop    %esi
81001823:	5d                   	pop    %ebp
81001824:	c3                   	ret    

81001825 <fopen>:
81001825:	55                   	push   %ebp
81001826:	89 e5                	mov    %esp,%ebp
81001828:	83 ec 08             	sub    $0x8,%esp
8100182b:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81001830:	83 ec 04             	sub    $0x4,%esp
81001833:	ff 75 0c             	push   0xc(%ebp)
81001836:	ff 75 08             	push   0x8(%ebp)
81001839:	50                   	push   %eax
8100183a:	e8 11 ff ff ff       	call   81001750 <_fopen_r>
8100183f:	83 c4 10             	add    $0x10,%esp
81001842:	c9                   	leave  
81001843:	c3                   	ret    

81001844 <_fiprintf_r>:
81001844:	55                   	push   %ebp
81001845:	89 e5                	mov    %esp,%ebp
81001847:	83 ec 18             	sub    $0x18,%esp
8100184a:	8d 45 14             	lea    0x14(%ebp),%eax
8100184d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001850:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001853:	50                   	push   %eax
81001854:	ff 75 10             	push   0x10(%ebp)
81001857:	ff 75 0c             	push   0xc(%ebp)
8100185a:	ff 75 08             	push   0x8(%ebp)
8100185d:	e8 f1 2a 00 00       	call   81004353 <_vfiprintf_r>
81001862:	83 c4 10             	add    $0x10,%esp
81001865:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186b:	c9                   	leave  
8100186c:	c3                   	ret    

8100186d <fiprintf>:
8100186d:	55                   	push   %ebp
8100186e:	89 e5                	mov    %esp,%ebp
81001870:	83 ec 18             	sub    $0x18,%esp
81001873:	8d 45 10             	lea    0x10(%ebp),%eax
81001876:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001879:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100187c:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81001881:	52                   	push   %edx
81001882:	ff 75 0c             	push   0xc(%ebp)
81001885:	ff 75 08             	push   0x8(%ebp)
81001888:	50                   	push   %eax
81001889:	e8 c5 2a 00 00       	call   81004353 <_vfiprintf_r>
8100188e:	83 c4 10             	add    $0x10,%esp
81001891:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001894:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001897:	c9                   	leave  
81001898:	c3                   	ret    

81001899 <_free_r>:
81001899:	55                   	push   %ebp
8100189a:	89 e5                	mov    %esp,%ebp
8100189c:	53                   	push   %ebx
8100189d:	83 ec 34             	sub    $0x34,%esp
810018a0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810018a4:	0f 84 c4 03 00 00    	je     81001c6e <_free_r+0x3d5>
810018aa:	83 ec 0c             	sub    $0xc,%esp
810018ad:	ff 75 08             	push   0x8(%ebp)
810018b0:	e8 83 28 00 00       	call   81004138 <__malloc_lock>
810018b5:	83 c4 10             	add    $0x10,%esp
810018b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810018bb:	83 e8 08             	sub    $0x8,%eax
810018be:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c4:	8b 40 04             	mov    0x4(%eax),%eax
810018c7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810018ca:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018cd:	83 e0 fe             	and    $0xfffffffe,%eax
810018d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810018d3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018d9:	01 d0                	add    %edx,%eax
810018db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810018de:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018e1:	8b 40 04             	mov    0x4(%eax),%eax
810018e4:	83 e0 fc             	and    $0xfffffffc,%eax
810018e7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810018ea:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
810018ef:	8b 40 08             	mov    0x8(%eax),%eax
810018f2:	39 45 dc             	cmp    %eax,-0x24(%ebp)
810018f5:	0f 85 94 00 00 00    	jne    8100198f <_free_r+0xf6>
810018fb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018fe:	01 45 f0             	add    %eax,-0x10(%ebp)
81001901:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001904:	83 e0 01             	and    $0x1,%eax
81001907:	85 c0                	test   %eax,%eax
81001909:	75 3a                	jne    81001945 <_free_r+0xac>
8100190b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100190e:	8b 00                	mov    (%eax),%eax
81001910:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001913:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001916:	f7 d8                	neg    %eax
81001918:	01 45 f4             	add    %eax,-0xc(%ebp)
8100191b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100191e:	01 45 f0             	add    %eax,-0x10(%ebp)
81001921:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001924:	8b 40 0c             	mov    0xc(%eax),%eax
81001927:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100192a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100192d:	8b 40 08             	mov    0x8(%eax),%eax
81001930:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001933:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001936:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001939:	89 50 0c             	mov    %edx,0xc(%eax)
8100193c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100193f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001942:	89 50 08             	mov    %edx,0x8(%eax)
81001945:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001948:	83 c8 01             	or     $0x1,%eax
8100194b:	89 c2                	mov    %eax,%edx
8100194d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001950:	89 50 04             	mov    %edx,0x4(%eax)
81001953:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81001958:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100195b:	89 42 08             	mov    %eax,0x8(%edx)
8100195e:	a1 88 90 00 81       	mov    0x81009088,%eax
81001963:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001966:	72 14                	jb     8100197c <_free_r+0xe3>
81001968:	a1 60 99 00 81       	mov    0x81009960,%eax
8100196d:	83 ec 08             	sub    $0x8,%esp
81001970:	50                   	push   %eax
81001971:	ff 75 08             	push   0x8(%ebp)
81001974:	e8 fb 02 00 00       	call   81001c74 <_malloc_trim_r>
81001979:	83 c4 10             	add    $0x10,%esp
8100197c:	83 ec 0c             	sub    $0xc,%esp
8100197f:	ff 75 08             	push   0x8(%ebp)
81001982:	e8 b7 27 00 00       	call   8100413e <__malloc_unlock>
81001987:	83 c4 10             	add    $0x10,%esp
8100198a:	e9 e0 02 00 00       	jmp    81001c6f <_free_r+0x3d6>
8100198f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001992:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001995:	89 50 04             	mov    %edx,0x4(%eax)
81001998:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100199f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810019a2:	83 e0 01             	and    $0x1,%eax
810019a5:	85 c0                	test   %eax,%eax
810019a7:	75 52                	jne    810019fb <_free_r+0x162>
810019a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ac:	8b 00                	mov    (%eax),%eax
810019ae:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810019b1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810019b4:	f7 d8                	neg    %eax
810019b6:	01 45 f4             	add    %eax,-0xc(%ebp)
810019b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810019bc:	01 45 f0             	add    %eax,-0x10(%ebp)
810019bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019c2:	8b 40 08             	mov    0x8(%eax),%eax
810019c5:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
810019ca:	39 d0                	cmp    %edx,%eax
810019cc:	75 09                	jne    810019d7 <_free_r+0x13e>
810019ce:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810019d5:	eb 24                	jmp    810019fb <_free_r+0x162>
810019d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019da:	8b 40 0c             	mov    0xc(%eax),%eax
810019dd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810019e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019e3:	8b 40 08             	mov    0x8(%eax),%eax
810019e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019ec:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019ef:	89 50 0c             	mov    %edx,0xc(%eax)
810019f2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019f5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810019f8:	89 50 08             	mov    %edx,0x8(%eax)
810019fb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810019fe:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a01:	01 d0                	add    %edx,%eax
81001a03:	8b 40 04             	mov    0x4(%eax),%eax
81001a06:	83 e0 01             	and    $0x1,%eax
81001a09:	85 c0                	test   %eax,%eax
81001a0b:	75 75                	jne    81001a82 <_free_r+0x1e9>
81001a0d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a10:	01 45 f0             	add    %eax,-0x10(%ebp)
81001a13:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001a17:	75 45                	jne    81001a5e <_free_r+0x1c5>
81001a19:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a1c:	8b 40 08             	mov    0x8(%eax),%eax
81001a1f:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81001a24:	39 d0                	cmp    %edx,%eax
81001a26:	75 36                	jne    81001a5e <_free_r+0x1c5>
81001a28:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001a2f:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
81001a34:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a37:	89 50 0c             	mov    %edx,0xc(%eax)
81001a3a:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81001a3f:	8b 40 0c             	mov    0xc(%eax),%eax
81001a42:	89 42 08             	mov    %eax,0x8(%edx)
81001a45:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81001a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a4d:	89 50 0c             	mov    %edx,0xc(%eax)
81001a50:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a53:	8b 50 0c             	mov    0xc(%eax),%edx
81001a56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a59:	89 50 08             	mov    %edx,0x8(%eax)
81001a5c:	eb 24                	jmp    81001a82 <_free_r+0x1e9>
81001a5e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a61:	8b 40 0c             	mov    0xc(%eax),%eax
81001a64:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a67:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a6a:	8b 40 08             	mov    0x8(%eax),%eax
81001a6d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a70:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a73:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001a76:	89 50 0c             	mov    %edx,0xc(%eax)
81001a79:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a7c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a7f:	89 50 08             	mov    %edx,0x8(%eax)
81001a82:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a85:	83 c8 01             	or     $0x1,%eax
81001a88:	89 c2                	mov    %eax,%edx
81001a8a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a8d:	89 50 04             	mov    %edx,0x4(%eax)
81001a90:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a96:	01 c2                	add    %eax,%edx
81001a98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a9b:	89 02                	mov    %eax,(%edx)
81001a9d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001aa1:	0f 85 b7 01 00 00    	jne    81001c5e <_free_r+0x3c5>
81001aa7:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001aae:	77 7f                	ja     81001b2f <_free_r+0x296>
81001ab0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ab3:	c1 e8 03             	shr    $0x3,%eax
81001ab6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001ab9:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001abe:	8b 58 04             	mov    0x4(%eax),%ebx
81001ac1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001ac4:	8d 50 03             	lea    0x3(%eax),%edx
81001ac7:	85 c0                	test   %eax,%eax
81001ac9:	0f 48 c2             	cmovs  %edx,%eax
81001acc:	c1 f8 02             	sar    $0x2,%eax
81001acf:	ba 01 00 00 00       	mov    $0x1,%edx
81001ad4:	89 c1                	mov    %eax,%ecx
81001ad6:	d3 e2                	shl    %cl,%edx
81001ad8:	89 d0                	mov    %edx,%eax
81001ada:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81001adf:	09 d8                	or     %ebx,%eax
81001ae1:	89 42 04             	mov    %eax,0x4(%edx)
81001ae4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001ae7:	83 c0 01             	add    $0x1,%eax
81001aea:	01 c0                	add    %eax,%eax
81001aec:	c1 e0 02             	shl    $0x2,%eax
81001aef:	05 80 8c 00 81       	add    $0x81008c80,%eax
81001af4:	83 e8 08             	sub    $0x8,%eax
81001af7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001afa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001afd:	8b 40 08             	mov    0x8(%eax),%eax
81001b00:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b06:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b09:	89 50 0c             	mov    %edx,0xc(%eax)
81001b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b0f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b12:	89 50 08             	mov    %edx,0x8(%eax)
81001b15:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b18:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b1b:	89 50 08             	mov    %edx,0x8(%eax)
81001b1e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b21:	8b 50 08             	mov    0x8(%eax),%edx
81001b24:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b27:	89 50 0c             	mov    %edx,0xc(%eax)
81001b2a:	e9 2f 01 00 00       	jmp    81001c5e <_free_r+0x3c5>
81001b2f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b32:	c1 e8 09             	shr    $0x9,%eax
81001b35:	85 c0                	test   %eax,%eax
81001b37:	75 08                	jne    81001b41 <_free_r+0x2a8>
81001b39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b3c:	c1 e8 03             	shr    $0x3,%eax
81001b3f:	eb 77                	jmp    81001bb8 <_free_r+0x31f>
81001b41:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b44:	c1 e8 09             	shr    $0x9,%eax
81001b47:	83 f8 04             	cmp    $0x4,%eax
81001b4a:	77 0b                	ja     81001b57 <_free_r+0x2be>
81001b4c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b4f:	c1 e8 06             	shr    $0x6,%eax
81001b52:	83 c0 38             	add    $0x38,%eax
81001b55:	eb 61                	jmp    81001bb8 <_free_r+0x31f>
81001b57:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b5a:	c1 e8 09             	shr    $0x9,%eax
81001b5d:	83 f8 14             	cmp    $0x14,%eax
81001b60:	77 0b                	ja     81001b6d <_free_r+0x2d4>
81001b62:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b65:	c1 e8 09             	shr    $0x9,%eax
81001b68:	83 c0 5b             	add    $0x5b,%eax
81001b6b:	eb 4b                	jmp    81001bb8 <_free_r+0x31f>
81001b6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b70:	c1 e8 09             	shr    $0x9,%eax
81001b73:	83 f8 54             	cmp    $0x54,%eax
81001b76:	77 0b                	ja     81001b83 <_free_r+0x2ea>
81001b78:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b7b:	c1 e8 0c             	shr    $0xc,%eax
81001b7e:	83 c0 6e             	add    $0x6e,%eax
81001b81:	eb 35                	jmp    81001bb8 <_free_r+0x31f>
81001b83:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b86:	c1 e8 09             	shr    $0x9,%eax
81001b89:	3d 54 01 00 00       	cmp    $0x154,%eax
81001b8e:	77 0b                	ja     81001b9b <_free_r+0x302>
81001b90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b93:	c1 e8 0f             	shr    $0xf,%eax
81001b96:	83 c0 77             	add    $0x77,%eax
81001b99:	eb 1d                	jmp    81001bb8 <_free_r+0x31f>
81001b9b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b9e:	c1 e8 09             	shr    $0x9,%eax
81001ba1:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ba6:	77 0b                	ja     81001bb3 <_free_r+0x31a>
81001ba8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bab:	c1 e8 12             	shr    $0x12,%eax
81001bae:	83 c0 7c             	add    $0x7c,%eax
81001bb1:	eb 05                	jmp    81001bb8 <_free_r+0x31f>
81001bb3:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001bb8:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001bbb:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001bbe:	83 c0 01             	add    $0x1,%eax
81001bc1:	01 c0                	add    %eax,%eax
81001bc3:	c1 e0 02             	shl    $0x2,%eax
81001bc6:	05 80 8c 00 81       	add    $0x81008c80,%eax
81001bcb:	83 e8 08             	sub    $0x8,%eax
81001bce:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001bd1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bd4:	8b 40 08             	mov    0x8(%eax),%eax
81001bd7:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001bda:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001bdd:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001be0:	75 36                	jne    81001c18 <_free_r+0x37f>
81001be2:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001be7:	8b 58 04             	mov    0x4(%eax),%ebx
81001bea:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001bed:	8d 50 03             	lea    0x3(%eax),%edx
81001bf0:	85 c0                	test   %eax,%eax
81001bf2:	0f 48 c2             	cmovs  %edx,%eax
81001bf5:	c1 f8 02             	sar    $0x2,%eax
81001bf8:	ba 01 00 00 00       	mov    $0x1,%edx
81001bfd:	89 c1                	mov    %eax,%ecx
81001bff:	d3 e2                	shl    %cl,%edx
81001c01:	89 d0                	mov    %edx,%eax
81001c03:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81001c08:	09 d8                	or     %ebx,%eax
81001c0a:	89 42 04             	mov    %eax,0x4(%edx)
81001c0d:	eb 28                	jmp    81001c37 <_free_r+0x39e>
81001c0f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c12:	8b 40 08             	mov    0x8(%eax),%eax
81001c15:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c18:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c1b:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001c1e:	74 0e                	je     81001c2e <_free_r+0x395>
81001c20:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c23:	8b 40 04             	mov    0x4(%eax),%eax
81001c26:	83 e0 fc             	and    $0xfffffffc,%eax
81001c29:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001c2c:	72 e1                	jb     81001c0f <_free_r+0x376>
81001c2e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c31:	8b 40 0c             	mov    0xc(%eax),%eax
81001c34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c3a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001c3d:	89 50 0c             	mov    %edx,0xc(%eax)
81001c40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c43:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c46:	89 50 08             	mov    %edx,0x8(%eax)
81001c49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c4c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001c4f:	89 50 08             	mov    %edx,0x8(%eax)
81001c52:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c55:	8b 50 08             	mov    0x8(%eax),%edx
81001c58:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c5b:	89 50 0c             	mov    %edx,0xc(%eax)
81001c5e:	83 ec 0c             	sub    $0xc,%esp
81001c61:	ff 75 08             	push   0x8(%ebp)
81001c64:	e8 d5 24 00 00       	call   8100413e <__malloc_unlock>
81001c69:	83 c4 10             	add    $0x10,%esp
81001c6c:	eb 01                	jmp    81001c6f <_free_r+0x3d6>
81001c6e:	90                   	nop
81001c6f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001c72:	c9                   	leave  
81001c73:	c3                   	ret    

81001c74 <_malloc_trim_r>:
81001c74:	55                   	push   %ebp
81001c75:	89 e5                	mov    %esp,%ebp
81001c77:	83 ec 28             	sub    $0x28,%esp
81001c7a:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001c81:	83 ec 0c             	sub    $0xc,%esp
81001c84:	ff 75 08             	push   0x8(%ebp)
81001c87:	e8 ac 24 00 00       	call   81004138 <__malloc_lock>
81001c8c:	83 c4 10             	add    $0x10,%esp
81001c8f:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001c94:	8b 40 08             	mov    0x8(%eax),%eax
81001c97:	8b 40 04             	mov    0x4(%eax),%eax
81001c9a:	83 e0 fc             	and    $0xfffffffc,%eax
81001c9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ca0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ca3:	2b 45 0c             	sub    0xc(%ebp),%eax
81001ca6:	89 c2                	mov    %eax,%edx
81001ca8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cab:	01 d0                	add    %edx,%eax
81001cad:	83 e8 11             	sub    $0x11,%eax
81001cb0:	ba 00 00 00 00       	mov    $0x0,%edx
81001cb5:	f7 75 f4             	divl   -0xc(%ebp)
81001cb8:	83 e8 01             	sub    $0x1,%eax
81001cbb:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001cbf:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001cc2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cc5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001cc8:	7d 18                	jge    81001ce2 <_malloc_trim_r+0x6e>
81001cca:	83 ec 0c             	sub    $0xc,%esp
81001ccd:	ff 75 08             	push   0x8(%ebp)
81001cd0:	e8 69 24 00 00       	call   8100413e <__malloc_unlock>
81001cd5:	83 c4 10             	add    $0x10,%esp
81001cd8:	b8 00 00 00 00       	mov    $0x0,%eax
81001cdd:	e9 f1 00 00 00       	jmp    81001dd3 <_malloc_trim_r+0x15f>
81001ce2:	83 ec 08             	sub    $0x8,%esp
81001ce5:	6a 00                	push   $0x0
81001ce7:	ff 75 08             	push   0x8(%ebp)
81001cea:	e8 03 35 00 00       	call   810051f2 <_sbrk_r>
81001cef:	83 c4 10             	add    $0x10,%esp
81001cf2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cf5:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001cfa:	8b 50 08             	mov    0x8(%eax),%edx
81001cfd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d00:	01 d0                	add    %edx,%eax
81001d02:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001d05:	74 18                	je     81001d1f <_malloc_trim_r+0xab>
81001d07:	83 ec 0c             	sub    $0xc,%esp
81001d0a:	ff 75 08             	push   0x8(%ebp)
81001d0d:	e8 2c 24 00 00       	call   8100413e <__malloc_unlock>
81001d12:	83 c4 10             	add    $0x10,%esp
81001d15:	b8 00 00 00 00       	mov    $0x0,%eax
81001d1a:	e9 b4 00 00 00       	jmp    81001dd3 <_malloc_trim_r+0x15f>
81001d1f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d22:	f7 d8                	neg    %eax
81001d24:	83 ec 08             	sub    $0x8,%esp
81001d27:	50                   	push   %eax
81001d28:	ff 75 08             	push   0x8(%ebp)
81001d2b:	e8 c2 34 00 00       	call   810051f2 <_sbrk_r>
81001d30:	83 c4 10             	add    $0x10,%esp
81001d33:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d36:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001d3a:	75 61                	jne    81001d9d <_malloc_trim_r+0x129>
81001d3c:	83 ec 08             	sub    $0x8,%esp
81001d3f:	6a 00                	push   $0x0
81001d41:	ff 75 08             	push   0x8(%ebp)
81001d44:	e8 a9 34 00 00       	call   810051f2 <_sbrk_r>
81001d49:	83 c4 10             	add    $0x10,%esp
81001d4c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d4f:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001d54:	8b 50 08             	mov    0x8(%eax),%edx
81001d57:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d5a:	29 d0                	sub    %edx,%eax
81001d5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001d5f:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001d63:	7e 23                	jle    81001d88 <_malloc_trim_r+0x114>
81001d65:	8b 15 8c 90 00 81    	mov    0x8100908c,%edx
81001d6b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d6e:	29 d0                	sub    %edx,%eax
81001d70:	a3 80 99 00 81       	mov    %eax,0x81009980
81001d75:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d78:	83 c8 01             	or     $0x1,%eax
81001d7b:	89 c2                	mov    %eax,%edx
81001d7d:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001d82:	8b 40 08             	mov    0x8(%eax),%eax
81001d85:	89 50 04             	mov    %edx,0x4(%eax)
81001d88:	83 ec 0c             	sub    $0xc,%esp
81001d8b:	ff 75 08             	push   0x8(%ebp)
81001d8e:	e8 ab 23 00 00       	call   8100413e <__malloc_unlock>
81001d93:	83 c4 10             	add    $0x10,%esp
81001d96:	b8 00 00 00 00       	mov    $0x0,%eax
81001d9b:	eb 36                	jmp    81001dd3 <_malloc_trim_r+0x15f>
81001d9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001da0:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001da3:	83 c8 01             	or     $0x1,%eax
81001da6:	89 c2                	mov    %eax,%edx
81001da8:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81001dad:	8b 40 08             	mov    0x8(%eax),%eax
81001db0:	89 50 04             	mov    %edx,0x4(%eax)
81001db3:	a1 80 99 00 81       	mov    0x81009980,%eax
81001db8:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001dbb:	a3 80 99 00 81       	mov    %eax,0x81009980
81001dc0:	83 ec 0c             	sub    $0xc,%esp
81001dc3:	ff 75 08             	push   0x8(%ebp)
81001dc6:	e8 73 23 00 00       	call   8100413e <__malloc_unlock>
81001dcb:	83 c4 10             	add    $0x10,%esp
81001dce:	b8 01 00 00 00       	mov    $0x1,%eax
81001dd3:	c9                   	leave  
81001dd4:	c3                   	ret    

81001dd5 <_fseek_r>:
81001dd5:	55                   	push   %ebp
81001dd6:	89 e5                	mov    %esp,%ebp
81001dd8:	83 ec 08             	sub    $0x8,%esp
81001ddb:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dde:	ff 75 14             	push   0x14(%ebp)
81001de1:	ff 75 10             	push   0x10(%ebp)
81001de4:	50                   	push   %eax
81001de5:	ff 75 08             	push   0x8(%ebp)
81001de8:	e8 25 00 00 00       	call   81001e12 <_fseeko_r>
81001ded:	83 c4 10             	add    $0x10,%esp
81001df0:	c9                   	leave  
81001df1:	c3                   	ret    

81001df2 <fseek>:
81001df2:	55                   	push   %ebp
81001df3:	89 e5                	mov    %esp,%ebp
81001df5:	83 ec 08             	sub    $0x8,%esp
81001df8:	8b 55 08             	mov    0x8(%ebp),%edx
81001dfb:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81001e00:	ff 75 10             	push   0x10(%ebp)
81001e03:	ff 75 0c             	push   0xc(%ebp)
81001e06:	52                   	push   %edx
81001e07:	50                   	push   %eax
81001e08:	e8 c8 ff ff ff       	call   81001dd5 <_fseek_r>
81001e0d:	83 c4 10             	add    $0x10,%esp
81001e10:	c9                   	leave  
81001e11:	c3                   	ret    

81001e12 <_fseeko_r>:
81001e12:	55                   	push   %ebp
81001e13:	89 e5                	mov    %esp,%ebp
81001e15:	56                   	push   %esi
81001e16:	53                   	push   %ebx
81001e17:	83 ec 60             	sub    $0x60,%esp
81001e1a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001e1d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001e24:	8b 45 08             	mov    0x8(%ebp),%eax
81001e27:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e2a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001e2e:	74 18                	je     81001e48 <_fseeko_r+0x36>
81001e30:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001e33:	8b 40 38             	mov    0x38(%eax),%eax
81001e36:	85 c0                	test   %eax,%eax
81001e38:	75 0e                	jne    81001e48 <_fseeko_r+0x36>
81001e3a:	83 ec 0c             	sub    $0xc,%esp
81001e3d:	ff 75 e4             	push   -0x1c(%ebp)
81001e40:	e8 fe f7 ff ff       	call   81001643 <__sinit>
81001e45:	83 c4 10             	add    $0x10,%esp
81001e48:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e4c:	98                   	cwtl   
81001e4d:	25 00 01 00 00       	and    $0x100,%eax
81001e52:	85 c0                	test   %eax,%eax
81001e54:	74 1b                	je     81001e71 <_fseeko_r+0x5f>
81001e56:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e5a:	98                   	cwtl   
81001e5b:	83 e0 08             	and    $0x8,%eax
81001e5e:	85 c0                	test   %eax,%eax
81001e60:	74 0f                	je     81001e71 <_fseeko_r+0x5f>
81001e62:	83 ec 08             	sub    $0x8,%esp
81001e65:	53                   	push   %ebx
81001e66:	ff 75 08             	push   0x8(%ebp)
81001e69:	e8 d2 f2 ff ff       	call   81001140 <_fflush_r>
81001e6e:	83 c4 10             	add    $0x10,%esp
81001e71:	8b 43 28             	mov    0x28(%ebx),%eax
81001e74:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e77:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001e7b:	75 13                	jne    81001e90 <_fseeko_r+0x7e>
81001e7d:	8b 45 08             	mov    0x8(%ebp),%eax
81001e80:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001e86:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e8b:	e9 2c 04 00 00       	jmp    810022bc <_fseeko_r+0x4aa>
81001e90:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001e94:	0f 84 bc 00 00 00    	je     81001f56 <_fseeko_r+0x144>
81001e9a:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001e9e:	0f 8f bb 00 00 00    	jg     81001f5f <_fseeko_r+0x14d>
81001ea4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001ea8:	0f 84 a8 00 00 00    	je     81001f56 <_fseeko_r+0x144>
81001eae:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001eb2:	0f 85 a7 00 00 00    	jne    81001f5f <_fseeko_r+0x14d>
81001eb8:	83 ec 08             	sub    $0x8,%esp
81001ebb:	53                   	push   %ebx
81001ebc:	ff 75 08             	push   0x8(%ebp)
81001ebf:	e8 7c f2 ff ff       	call   81001140 <_fflush_r>
81001ec4:	83 c4 10             	add    $0x10,%esp
81001ec7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ecb:	98                   	cwtl   
81001ecc:	25 00 10 00 00       	and    $0x1000,%eax
81001ed1:	85 c0                	test   %eax,%eax
81001ed3:	74 08                	je     81001edd <_fseeko_r+0xcb>
81001ed5:	8b 43 50             	mov    0x50(%ebx),%eax
81001ed8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001edb:	eb 26                	jmp    81001f03 <_fseeko_r+0xf1>
81001edd:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001ee0:	6a 01                	push   $0x1
81001ee2:	6a 00                	push   $0x0
81001ee4:	50                   	push   %eax
81001ee5:	ff 75 08             	push   0x8(%ebp)
81001ee8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eeb:	ff d0                	call   *%eax
81001eed:	83 c4 10             	add    $0x10,%esp
81001ef0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ef3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001ef7:	75 0a                	jne    81001f03 <_fseeko_r+0xf1>
81001ef9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001efe:	e9 b9 03 00 00       	jmp    810022bc <_fseeko_r+0x4aa>
81001f03:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f07:	98                   	cwtl   
81001f08:	83 e0 04             	and    $0x4,%eax
81001f0b:	85 c0                	test   %eax,%eax
81001f0d:	74 15                	je     81001f24 <_fseeko_r+0x112>
81001f0f:	8b 43 04             	mov    0x4(%ebx),%eax
81001f12:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001f15:	8b 43 30             	mov    0x30(%ebx),%eax
81001f18:	85 c0                	test   %eax,%eax
81001f1a:	74 24                	je     81001f40 <_fseeko_r+0x12e>
81001f1c:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001f1f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001f22:	eb 1c                	jmp    81001f40 <_fseeko_r+0x12e>
81001f24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f28:	98                   	cwtl   
81001f29:	83 e0 08             	and    $0x8,%eax
81001f2c:	85 c0                	test   %eax,%eax
81001f2e:	74 10                	je     81001f40 <_fseeko_r+0x12e>
81001f30:	8b 03                	mov    (%ebx),%eax
81001f32:	85 c0                	test   %eax,%eax
81001f34:	74 0a                	je     81001f40 <_fseeko_r+0x12e>
81001f36:	8b 03                	mov    (%ebx),%eax
81001f38:	8b 53 10             	mov    0x10(%ebx),%edx
81001f3b:	29 d0                	sub    %edx,%eax
81001f3d:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f43:	01 45 10             	add    %eax,0x10(%ebp)
81001f46:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001f4d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001f54:	eb 1c                	jmp    81001f72 <_fseeko_r+0x160>
81001f56:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001f5d:	eb 13                	jmp    81001f72 <_fseeko_r+0x160>
81001f5f:	8b 45 08             	mov    0x8(%ebp),%eax
81001f62:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001f68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001f6d:	e9 4a 03 00 00       	jmp    810022bc <_fseeko_r+0x4aa>
81001f72:	8b 43 10             	mov    0x10(%ebx),%eax
81001f75:	85 c0                	test   %eax,%eax
81001f77:	75 0f                	jne    81001f88 <_fseeko_r+0x176>
81001f79:	83 ec 08             	sub    $0x8,%esp
81001f7c:	53                   	push   %ebx
81001f7d:	ff 75 08             	push   0x8(%ebp)
81001f80:	e8 8b 13 00 00       	call   81003310 <__smakebuf_r>
81001f85:	83 c4 10             	add    $0x10,%esp
81001f88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f8c:	98                   	cwtl   
81001f8d:	25 1a 08 00 00       	and    $0x81a,%eax
81001f92:	85 c0                	test   %eax,%eax
81001f94:	0f 85 7d 02 00 00    	jne    81002217 <_fseeko_r+0x405>
81001f9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f9e:	98                   	cwtl   
81001f9f:	25 00 04 00 00       	and    $0x400,%eax
81001fa4:	85 c0                	test   %eax,%eax
81001fa6:	75 5f                	jne    81002007 <_fseeko_r+0x1f5>
81001fa8:	81 7d e0 94 55 00 81 	cmpl   $0x81005594,-0x20(%ebp)
81001faf:	75 34                	jne    81001fe5 <_fseeko_r+0x1d3>
81001fb1:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001fb5:	66 85 c0             	test   %ax,%ax
81001fb8:	78 2b                	js     81001fe5 <_fseeko_r+0x1d3>
81001fba:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001fbe:	98                   	cwtl   
81001fbf:	83 ec 04             	sub    $0x4,%esp
81001fc2:	8d 55 98             	lea    -0x68(%ebp),%edx
81001fc5:	52                   	push   %edx
81001fc6:	50                   	push   %eax
81001fc7:	ff 75 08             	push   0x8(%ebp)
81001fca:	e8 14 03 00 00       	call   810022e3 <_fstat_r>
81001fcf:	83 c4 10             	add    $0x10,%esp
81001fd2:	85 c0                	test   %eax,%eax
81001fd4:	75 0f                	jne    81001fe5 <_fseeko_r+0x1d3>
81001fd6:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001fd9:	25 00 f0 00 00       	and    $0xf000,%eax
81001fde:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001fe3:	74 10                	je     81001ff5 <_fseeko_r+0x1e3>
81001fe5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001fe9:	80 cc 08             	or     $0x8,%ah
81001fec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001ff0:	e9 2f 02 00 00       	jmp    81002224 <_fseeko_r+0x412>
81001ff5:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001ffc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002000:	80 cc 04             	or     $0x4,%ah
81002003:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002007:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100200b:	75 08                	jne    81002015 <_fseeko_r+0x203>
8100200d:	8b 45 10             	mov    0x10(%ebp),%eax
81002010:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002013:	eb 2b                	jmp    81002040 <_fseeko_r+0x22e>
81002015:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002019:	98                   	cwtl   
8100201a:	83 ec 04             	sub    $0x4,%esp
8100201d:	8d 55 98             	lea    -0x68(%ebp),%edx
81002020:	52                   	push   %edx
81002021:	50                   	push   %eax
81002022:	ff 75 08             	push   0x8(%ebp)
81002025:	e8 b9 02 00 00       	call   810022e3 <_fstat_r>
8100202a:	83 c4 10             	add    $0x10,%esp
8100202d:	85 c0                	test   %eax,%eax
8100202f:	0f 85 e5 01 00 00    	jne    8100221a <_fseeko_r+0x408>
81002035:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002038:	8b 45 10             	mov    0x10(%ebp),%eax
8100203b:	01 d0                	add    %edx,%eax
8100203d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002040:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002044:	75 49                	jne    8100208f <_fseeko_r+0x27d>
81002046:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100204a:	98                   	cwtl   
8100204b:	25 00 10 00 00       	and    $0x1000,%eax
81002050:	85 c0                	test   %eax,%eax
81002052:	74 08                	je     8100205c <_fseeko_r+0x24a>
81002054:	8b 43 50             	mov    0x50(%ebx),%eax
81002057:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100205a:	eb 20                	jmp    8100207c <_fseeko_r+0x26a>
8100205c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100205f:	6a 01                	push   $0x1
81002061:	6a 00                	push   $0x0
81002063:	50                   	push   %eax
81002064:	ff 75 08             	push   0x8(%ebp)
81002067:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100206a:	ff d0                	call   *%eax
8100206c:	83 c4 10             	add    $0x10,%esp
8100206f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002072:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002076:	0f 84 a1 01 00 00    	je     8100221d <_fseeko_r+0x40b>
8100207c:	8b 43 04             	mov    0x4(%ebx),%eax
8100207f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002082:	8b 43 30             	mov    0x30(%ebx),%eax
81002085:	85 c0                	test   %eax,%eax
81002087:	74 06                	je     8100208f <_fseeko_r+0x27d>
81002089:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100208c:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100208f:	8b 43 30             	mov    0x30(%ebx),%eax
81002092:	85 c0                	test   %eax,%eax
81002094:	74 22                	je     810020b8 <_fseeko_r+0x2a6>
81002096:	8b 43 04             	mov    0x4(%ebx),%eax
81002099:	01 45 f0             	add    %eax,-0x10(%ebp)
8100209c:	8b 43 38             	mov    0x38(%ebx),%eax
8100209f:	8b 53 10             	mov    0x10(%ebx),%edx
810020a2:	29 d0                	sub    %edx,%eax
810020a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020a7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020aa:	2b 45 ec             	sub    -0x14(%ebp),%eax
810020ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020b0:	8b 43 3c             	mov    0x3c(%ebx),%eax
810020b3:	01 45 ec             	add    %eax,-0x14(%ebp)
810020b6:	eb 19                	jmp    810020d1 <_fseeko_r+0x2bf>
810020b8:	8b 03                	mov    (%ebx),%eax
810020ba:	8b 53 10             	mov    0x10(%ebx),%edx
810020bd:	29 d0                	sub    %edx,%eax
810020bf:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020c5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810020c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810020cb:	8b 43 04             	mov    0x4(%ebx),%eax
810020ce:	01 45 ec             	add    %eax,-0x14(%ebp)
810020d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020d4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810020d7:	7c 7c                	jl     81002155 <_fseeko_r+0x343>
810020d9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810020dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020df:	01 c2                	add    %eax,%edx
810020e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020e4:	39 c2                	cmp    %eax,%edx
810020e6:	76 6d                	jbe    81002155 <_fseeko_r+0x343>
810020e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020eb:	2b 45 f0             	sub    -0x10(%ebp),%eax
810020ee:	89 c6                	mov    %eax,%esi
810020f0:	8b 43 10             	mov    0x10(%ebx),%eax
810020f3:	89 f2                	mov    %esi,%edx
810020f5:	01 d0                	add    %edx,%eax
810020f7:	89 03                	mov    %eax,(%ebx)
810020f9:	89 f2                	mov    %esi,%edx
810020fb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020fe:	29 d0                	sub    %edx,%eax
81002100:	89 43 04             	mov    %eax,0x4(%ebx)
81002103:	8b 43 30             	mov    0x30(%ebx),%eax
81002106:	85 c0                	test   %eax,%eax
81002108:	74 23                	je     8100212d <_fseeko_r+0x31b>
8100210a:	8b 53 30             	mov    0x30(%ebx),%edx
8100210d:	8d 43 40             	lea    0x40(%ebx),%eax
81002110:	39 c2                	cmp    %eax,%edx
81002112:	74 12                	je     81002126 <_fseeko_r+0x314>
81002114:	8b 43 30             	mov    0x30(%ebx),%eax
81002117:	83 ec 08             	sub    $0x8,%esp
8100211a:	50                   	push   %eax
8100211b:	ff 75 08             	push   0x8(%ebp)
8100211e:	e8 76 f7 ff ff       	call   81001899 <_free_r>
81002123:	83 c4 10             	add    $0x10,%esp
81002126:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100212d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002131:	83 e0 df             	and    $0xffffffdf,%eax
81002134:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002138:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100213b:	83 ec 04             	sub    $0x4,%esp
8100213e:	6a 08                	push   $0x8
81002140:	6a 00                	push   $0x0
81002142:	50                   	push   %eax
81002143:	e8 68 1f 00 00       	call   810040b0 <memset>
81002148:	83 c4 10             	add    $0x10,%esp
8100214b:	b8 00 00 00 00       	mov    $0x0,%eax
81002150:	e9 67 01 00 00       	jmp    810022bc <_fseeko_r+0x4aa>
81002155:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002158:	f7 d8                	neg    %eax
8100215a:	23 45 f4             	and    -0xc(%ebp),%eax
8100215d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002160:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002163:	6a 00                	push   $0x0
81002165:	ff 75 f0             	push   -0x10(%ebp)
81002168:	50                   	push   %eax
81002169:	ff 75 08             	push   0x8(%ebp)
8100216c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100216f:	ff d0                	call   *%eax
81002171:	83 c4 10             	add    $0x10,%esp
81002174:	83 f8 ff             	cmp    $0xffffffff,%eax
81002177:	0f 84 a3 00 00 00    	je     81002220 <_fseeko_r+0x40e>
8100217d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002184:	8b 43 10             	mov    0x10(%ebx),%eax
81002187:	89 03                	mov    %eax,(%ebx)
81002189:	8b 43 30             	mov    0x30(%ebx),%eax
8100218c:	85 c0                	test   %eax,%eax
8100218e:	74 23                	je     810021b3 <_fseeko_r+0x3a1>
81002190:	8b 53 30             	mov    0x30(%ebx),%edx
81002193:	8d 43 40             	lea    0x40(%ebx),%eax
81002196:	39 c2                	cmp    %eax,%edx
81002198:	74 12                	je     810021ac <_fseeko_r+0x39a>
8100219a:	8b 43 30             	mov    0x30(%ebx),%eax
8100219d:	83 ec 08             	sub    $0x8,%esp
810021a0:	50                   	push   %eax
810021a1:	ff 75 08             	push   0x8(%ebp)
810021a4:	e8 f0 f6 ff ff       	call   81001899 <_free_r>
810021a9:	83 c4 10             	add    $0x10,%esp
810021ac:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810021b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021b7:	83 e0 df             	and    $0xffffffdf,%eax
810021ba:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021c1:	2b 45 f0             	sub    -0x10(%ebp),%eax
810021c4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021c7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810021cb:	74 2d                	je     810021fa <_fseeko_r+0x3e8>
810021cd:	83 ec 08             	sub    $0x8,%esp
810021d0:	53                   	push   %ebx
810021d1:	ff 75 08             	push   0x8(%ebp)
810021d4:	e8 18 2e 00 00       	call   81004ff1 <__srefill_r>
810021d9:	83 c4 10             	add    $0x10,%esp
810021dc:	85 c0                	test   %eax,%eax
810021de:	75 43                	jne    81002223 <_fseeko_r+0x411>
810021e0:	8b 43 04             	mov    0x4(%ebx),%eax
810021e3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810021e6:	77 3b                	ja     81002223 <_fseeko_r+0x411>
810021e8:	8b 13                	mov    (%ebx),%edx
810021ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021ed:	01 d0                	add    %edx,%eax
810021ef:	89 03                	mov    %eax,(%ebx)
810021f1:	8b 43 04             	mov    0x4(%ebx),%eax
810021f4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810021f7:	89 43 04             	mov    %eax,0x4(%ebx)
810021fa:	8d 43 5c             	lea    0x5c(%ebx),%eax
810021fd:	83 ec 04             	sub    $0x4,%esp
81002200:	6a 08                	push   $0x8
81002202:	6a 00                	push   $0x0
81002204:	50                   	push   %eax
81002205:	e8 a6 1e 00 00       	call   810040b0 <memset>
8100220a:	83 c4 10             	add    $0x10,%esp
8100220d:	b8 00 00 00 00       	mov    $0x0,%eax
81002212:	e9 a5 00 00 00       	jmp    810022bc <_fseeko_r+0x4aa>
81002217:	90                   	nop
81002218:	eb 0a                	jmp    81002224 <_fseeko_r+0x412>
8100221a:	90                   	nop
8100221b:	eb 07                	jmp    81002224 <_fseeko_r+0x412>
8100221d:	90                   	nop
8100221e:	eb 04                	jmp    81002224 <_fseeko_r+0x412>
81002220:	90                   	nop
81002221:	eb 01                	jmp    81002224 <_fseeko_r+0x412>
81002223:	90                   	nop
81002224:	83 ec 08             	sub    $0x8,%esp
81002227:	53                   	push   %ebx
81002228:	ff 75 08             	push   0x8(%ebp)
8100222b:	e8 10 ef ff ff       	call   81001140 <_fflush_r>
81002230:	83 c4 10             	add    $0x10,%esp
81002233:	85 c0                	test   %eax,%eax
81002235:	75 1a                	jne    81002251 <_fseeko_r+0x43f>
81002237:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100223a:	ff 75 14             	push   0x14(%ebp)
8100223d:	ff 75 10             	push   0x10(%ebp)
81002240:	50                   	push   %eax
81002241:	ff 75 08             	push   0x8(%ebp)
81002244:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002247:	ff d0                	call   *%eax
81002249:	83 c4 10             	add    $0x10,%esp
8100224c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100224f:	75 07                	jne    81002258 <_fseeko_r+0x446>
81002251:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002256:	eb 64                	jmp    810022bc <_fseeko_r+0x4aa>
81002258:	8b 43 30             	mov    0x30(%ebx),%eax
8100225b:	85 c0                	test   %eax,%eax
8100225d:	74 23                	je     81002282 <_fseeko_r+0x470>
8100225f:	8b 53 30             	mov    0x30(%ebx),%edx
81002262:	8d 43 40             	lea    0x40(%ebx),%eax
81002265:	39 c2                	cmp    %eax,%edx
81002267:	74 12                	je     8100227b <_fseeko_r+0x469>
81002269:	8b 43 30             	mov    0x30(%ebx),%eax
8100226c:	83 ec 08             	sub    $0x8,%esp
8100226f:	50                   	push   %eax
81002270:	ff 75 08             	push   0x8(%ebp)
81002273:	e8 21 f6 ff ff       	call   81001899 <_free_r>
81002278:	83 c4 10             	add    $0x10,%esp
8100227b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002282:	8b 43 10             	mov    0x10(%ebx),%eax
81002285:	89 03                	mov    %eax,(%ebx)
81002287:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100228e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002292:	83 e0 df             	and    $0xffffffdf,%eax
81002295:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002299:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100229d:	80 e4 f7             	and    $0xf7,%ah
810022a0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810022a4:	8d 43 5c             	lea    0x5c(%ebx),%eax
810022a7:	83 ec 04             	sub    $0x4,%esp
810022aa:	6a 08                	push   $0x8
810022ac:	6a 00                	push   $0x0
810022ae:	50                   	push   %eax
810022af:	e8 fc 1d 00 00       	call   810040b0 <memset>
810022b4:	83 c4 10             	add    $0x10,%esp
810022b7:	b8 00 00 00 00       	mov    $0x0,%eax
810022bc:	8d 65 f8             	lea    -0x8(%ebp),%esp
810022bf:	5b                   	pop    %ebx
810022c0:	5e                   	pop    %esi
810022c1:	5d                   	pop    %ebp
810022c2:	c3                   	ret    

810022c3 <fseeko>:
810022c3:	55                   	push   %ebp
810022c4:	89 e5                	mov    %esp,%ebp
810022c6:	83 ec 08             	sub    $0x8,%esp
810022c9:	8b 55 08             	mov    0x8(%ebp),%edx
810022cc:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810022d1:	ff 75 10             	push   0x10(%ebp)
810022d4:	ff 75 0c             	push   0xc(%ebp)
810022d7:	52                   	push   %edx
810022d8:	50                   	push   %eax
810022d9:	e8 34 fb ff ff       	call   81001e12 <_fseeko_r>
810022de:	83 c4 10             	add    $0x10,%esp
810022e1:	c9                   	leave  
810022e2:	c3                   	ret    

810022e3 <_fstat_r>:
810022e3:	55                   	push   %ebp
810022e4:	89 e5                	mov    %esp,%ebp
810022e6:	83 ec 18             	sub    $0x18,%esp
810022e9:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
810022f0:	00 00 00 
810022f3:	83 ec 08             	sub    $0x8,%esp
810022f6:	ff 75 10             	push   0x10(%ebp)
810022f9:	ff 75 0c             	push   0xc(%ebp)
810022fc:	e8 bb e8 ff ff       	call   81000bbc <fstat>
81002301:	83 c4 10             	add    $0x10,%esp
81002304:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002307:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100230b:	75 14                	jne    81002321 <_fstat_r+0x3e>
8100230d:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81002312:	85 c0                	test   %eax,%eax
81002314:	74 0b                	je     81002321 <_fstat_r+0x3e>
81002316:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
8100231c:	8b 45 08             	mov    0x8(%ebp),%eax
8100231f:	89 10                	mov    %edx,(%eax)
81002321:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002324:	c9                   	leave  
81002325:	c3                   	ret    

81002326 <_fwalk>:
81002326:	55                   	push   %ebp
81002327:	89 e5                	mov    %esp,%ebp
81002329:	57                   	push   %edi
8100232a:	56                   	push   %esi
8100232b:	53                   	push   %ebx
8100232c:	83 ec 1c             	sub    $0x1c,%esp
8100232f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002336:	8b 45 08             	mov    0x8(%ebp),%eax
81002339:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100233f:	eb 3e                	jmp    8100237f <_fwalk+0x59>
81002341:	8b 5e 08             	mov    0x8(%esi),%ebx
81002344:	8b 7e 04             	mov    0x4(%esi),%edi
81002347:	eb 2d                	jmp    81002376 <_fwalk+0x50>
81002349:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100234d:	66 85 c0             	test   %ax,%ax
81002350:	74 21                	je     81002373 <_fwalk+0x4d>
81002352:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002356:	66 83 f8 01          	cmp    $0x1,%ax
8100235a:	74 17                	je     81002373 <_fwalk+0x4d>
8100235c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002360:	66 83 f8 ff          	cmp    $0xffff,%ax
81002364:	74 0d                	je     81002373 <_fwalk+0x4d>
81002366:	83 ec 0c             	sub    $0xc,%esp
81002369:	53                   	push   %ebx
8100236a:	ff 55 0c             	call   *0xc(%ebp)
8100236d:	83 c4 10             	add    $0x10,%esp
81002370:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002373:	83 c3 68             	add    $0x68,%ebx
81002376:	83 ef 01             	sub    $0x1,%edi
81002379:	85 ff                	test   %edi,%edi
8100237b:	79 cc                	jns    81002349 <_fwalk+0x23>
8100237d:	8b 36                	mov    (%esi),%esi
8100237f:	85 f6                	test   %esi,%esi
81002381:	75 be                	jne    81002341 <_fwalk+0x1b>
81002383:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002386:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002389:	5b                   	pop    %ebx
8100238a:	5e                   	pop    %esi
8100238b:	5f                   	pop    %edi
8100238c:	5d                   	pop    %ebp
8100238d:	c3                   	ret    

8100238e <_fwalk_reent>:
8100238e:	55                   	push   %ebp
8100238f:	89 e5                	mov    %esp,%ebp
81002391:	57                   	push   %edi
81002392:	56                   	push   %esi
81002393:	53                   	push   %ebx
81002394:	83 ec 1c             	sub    $0x1c,%esp
81002397:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100239e:	8b 45 08             	mov    0x8(%ebp),%eax
810023a1:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810023a7:	eb 41                	jmp    810023ea <_fwalk_reent+0x5c>
810023a9:	8b 5e 08             	mov    0x8(%esi),%ebx
810023ac:	8b 7e 04             	mov    0x4(%esi),%edi
810023af:	eb 30                	jmp    810023e1 <_fwalk_reent+0x53>
810023b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023b5:	66 85 c0             	test   %ax,%ax
810023b8:	74 24                	je     810023de <_fwalk_reent+0x50>
810023ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023be:	66 83 f8 01          	cmp    $0x1,%ax
810023c2:	74 1a                	je     810023de <_fwalk_reent+0x50>
810023c4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810023c8:	66 83 f8 ff          	cmp    $0xffff,%ax
810023cc:	74 10                	je     810023de <_fwalk_reent+0x50>
810023ce:	83 ec 08             	sub    $0x8,%esp
810023d1:	53                   	push   %ebx
810023d2:	ff 75 08             	push   0x8(%ebp)
810023d5:	ff 55 0c             	call   *0xc(%ebp)
810023d8:	83 c4 10             	add    $0x10,%esp
810023db:	09 45 e4             	or     %eax,-0x1c(%ebp)
810023de:	83 c3 68             	add    $0x68,%ebx
810023e1:	83 ef 01             	sub    $0x1,%edi
810023e4:	85 ff                	test   %edi,%edi
810023e6:	79 c9                	jns    810023b1 <_fwalk_reent+0x23>
810023e8:	8b 36                	mov    (%esi),%esi
810023ea:	85 f6                	test   %esi,%esi
810023ec:	75 bb                	jne    810023a9 <_fwalk_reent+0x1b>
810023ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810023f1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810023f4:	5b                   	pop    %ebx
810023f5:	5e                   	pop    %esi
810023f6:	5f                   	pop    %edi
810023f7:	5d                   	pop    %ebp
810023f8:	c3                   	ret    

810023f9 <_fwrite_r>:
810023f9:	55                   	push   %ebp
810023fa:	89 e5                	mov    %esp,%ebp
810023fc:	83 ec 28             	sub    $0x28,%esp
810023ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002402:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002405:	8b 45 14             	mov    0x14(%ebp),%eax
81002408:	0f af 45 10          	imul   0x10(%ebp),%eax
8100240c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100240f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002412:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002415:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002418:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100241b:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100241e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002421:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002428:	8b 45 08             	mov    0x8(%ebp),%eax
8100242b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100242e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002432:	74 18                	je     8100244c <_fwrite_r+0x53>
81002434:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002437:	8b 40 38             	mov    0x38(%eax),%eax
8100243a:	85 c0                	test   %eax,%eax
8100243c:	75 0e                	jne    8100244c <_fwrite_r+0x53>
8100243e:	83 ec 0c             	sub    $0xc,%esp
81002441:	ff 75 f0             	push   -0x10(%ebp)
81002444:	e8 fa f1 ff ff       	call   81001643 <__sinit>
81002449:	83 c4 10             	add    $0x10,%esp
8100244c:	8b 45 18             	mov    0x18(%ebp),%eax
8100244f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002453:	98                   	cwtl   
81002454:	25 00 20 00 00       	and    $0x2000,%eax
81002459:	85 c0                	test   %eax,%eax
8100245b:	75 24                	jne    81002481 <_fwrite_r+0x88>
8100245d:	8b 45 18             	mov    0x18(%ebp),%eax
81002460:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002464:	80 cc 20             	or     $0x20,%ah
81002467:	89 c2                	mov    %eax,%edx
81002469:	8b 45 18             	mov    0x18(%ebp),%eax
8100246c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002470:	8b 45 18             	mov    0x18(%ebp),%eax
81002473:	8b 40 64             	mov    0x64(%eax),%eax
81002476:	80 e4 df             	and    $0xdf,%ah
81002479:	89 c2                	mov    %eax,%edx
8100247b:	8b 45 18             	mov    0x18(%ebp),%eax
8100247e:	89 50 64             	mov    %edx,0x64(%eax)
81002481:	83 ec 04             	sub    $0x4,%esp
81002484:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002487:	50                   	push   %eax
81002488:	ff 75 18             	push   0x18(%ebp)
8100248b:	ff 75 08             	push   0x8(%ebp)
8100248e:	e8 07 3f 00 00       	call   8100639a <__sfvwrite_r>
81002493:	83 c4 10             	add    $0x10,%esp
81002496:	85 c0                	test   %eax,%eax
81002498:	75 05                	jne    8100249f <_fwrite_r+0xa6>
8100249a:	8b 45 14             	mov    0x14(%ebp),%eax
8100249d:	eb 10                	jmp    810024af <_fwrite_r+0xb6>
8100249f:	8b 55 ec             	mov    -0x14(%ebp),%edx
810024a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024a5:	29 d0                	sub    %edx,%eax
810024a7:	ba 00 00 00 00       	mov    $0x0,%edx
810024ac:	f7 75 10             	divl   0x10(%ebp)
810024af:	c9                   	leave  
810024b0:	c3                   	ret    

810024b1 <fwrite>:
810024b1:	55                   	push   %ebp
810024b2:	89 e5                	mov    %esp,%ebp
810024b4:	83 ec 08             	sub    $0x8,%esp
810024b7:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810024bc:	83 ec 0c             	sub    $0xc,%esp
810024bf:	ff 75 14             	push   0x14(%ebp)
810024c2:	ff 75 10             	push   0x10(%ebp)
810024c5:	ff 75 0c             	push   0xc(%ebp)
810024c8:	ff 75 08             	push   0x8(%ebp)
810024cb:	50                   	push   %eax
810024cc:	e8 28 ff ff ff       	call   810023f9 <_fwrite_r>
810024d1:	83 c4 20             	add    $0x20,%esp
810024d4:	c9                   	leave  
810024d5:	c3                   	ret    

810024d6 <_getchar_r>:
810024d6:	55                   	push   %ebp
810024d7:	89 e5                	mov    %esp,%ebp
810024d9:	83 ec 08             	sub    $0x8,%esp
810024dc:	8b 45 08             	mov    0x8(%ebp),%eax
810024df:	8b 40 04             	mov    0x4(%eax),%eax
810024e2:	83 ec 08             	sub    $0x8,%esp
810024e5:	50                   	push   %eax
810024e6:	ff 75 08             	push   0x8(%ebp)
810024e9:	e8 4a 43 00 00       	call   81006838 <_getc_r>
810024ee:	83 c4 10             	add    $0x10,%esp
810024f1:	c9                   	leave  
810024f2:	c3                   	ret    

810024f3 <getchar>:
810024f3:	55                   	push   %ebp
810024f4:	89 e5                	mov    %esp,%ebp
810024f6:	83 ec 18             	sub    $0x18,%esp
810024f9:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810024fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002501:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002504:	8b 40 04             	mov    0x4(%eax),%eax
81002507:	83 ec 08             	sub    $0x8,%esp
8100250a:	50                   	push   %eax
8100250b:	ff 75 f4             	push   -0xc(%ebp)
8100250e:	e8 25 43 00 00       	call   81006838 <_getc_r>
81002513:	83 c4 10             	add    $0x10,%esp
81002516:	c9                   	leave  
81002517:	c3                   	ret    

81002518 <reverse_argv_elements>:
81002518:	55                   	push   %ebp
81002519:	89 e5                	mov    %esp,%ebp
8100251b:	83 ec 10             	sub    $0x10,%esp
8100251e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002525:	eb 5e                	jmp    81002585 <reverse_argv_elements+0x6d>
81002527:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100252a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002531:	8b 45 08             	mov    0x8(%ebp),%eax
81002534:	01 d0                	add    %edx,%eax
81002536:	8b 00                	mov    (%eax),%eax
81002538:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100253b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100253e:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002541:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002546:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100254d:	8b 45 08             	mov    0x8(%ebp),%eax
81002550:	01 d0                	add    %edx,%eax
81002552:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002555:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100255c:	8b 55 08             	mov    0x8(%ebp),%edx
8100255f:	01 ca                	add    %ecx,%edx
81002561:	8b 00                	mov    (%eax),%eax
81002563:	89 02                	mov    %eax,(%edx)
81002565:	8b 45 0c             	mov    0xc(%ebp),%eax
81002568:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100256b:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002570:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002577:	8b 45 08             	mov    0x8(%ebp),%eax
8100257a:	01 c2                	add    %eax,%edx
8100257c:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100257f:	89 02                	mov    %eax,(%edx)
81002581:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002585:	8b 45 0c             	mov    0xc(%ebp),%eax
81002588:	d1 f8                	sar    %eax
8100258a:	39 45 fc             	cmp    %eax,-0x4(%ebp)
8100258d:	7c 98                	jl     81002527 <reverse_argv_elements+0xf>
8100258f:	90                   	nop
81002590:	90                   	nop
81002591:	c9                   	leave  
81002592:	c3                   	ret    

81002593 <permute>:
81002593:	55                   	push   %ebp
81002594:	89 e5                	mov    %esp,%ebp
81002596:	ff 75 0c             	push   0xc(%ebp)
81002599:	ff 75 08             	push   0x8(%ebp)
8100259c:	e8 77 ff ff ff       	call   81002518 <reverse_argv_elements>
810025a1:	83 c4 08             	add    $0x8,%esp
810025a4:	8b 55 0c             	mov    0xc(%ebp),%edx
810025a7:	8b 45 10             	mov    0x10(%ebp),%eax
810025aa:	01 d0                	add    %edx,%eax
810025ac:	50                   	push   %eax
810025ad:	ff 75 08             	push   0x8(%ebp)
810025b0:	e8 63 ff ff ff       	call   81002518 <reverse_argv_elements>
810025b5:	83 c4 08             	add    $0x8,%esp
810025b8:	ff 75 10             	push   0x10(%ebp)
810025bb:	ff 75 08             	push   0x8(%ebp)
810025be:	e8 55 ff ff ff       	call   81002518 <reverse_argv_elements>
810025c3:	83 c4 08             	add    $0x8,%esp
810025c6:	90                   	nop
810025c7:	c9                   	leave  
810025c8:	c3                   	ret    

810025c9 <is_option>:
810025c9:	55                   	push   %ebp
810025ca:	89 e5                	mov    %esp,%ebp
810025cc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810025d0:	74 1a                	je     810025ec <is_option+0x23>
810025d2:	8b 45 08             	mov    0x8(%ebp),%eax
810025d5:	0f b6 00             	movzbl (%eax),%eax
810025d8:	3c 2d                	cmp    $0x2d,%al
810025da:	74 10                	je     810025ec <is_option+0x23>
810025dc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810025e0:	74 11                	je     810025f3 <is_option+0x2a>
810025e2:	8b 45 08             	mov    0x8(%ebp),%eax
810025e5:	0f b6 00             	movzbl (%eax),%eax
810025e8:	3c 2b                	cmp    $0x2b,%al
810025ea:	75 07                	jne    810025f3 <is_option+0x2a>
810025ec:	b8 01 00 00 00       	mov    $0x1,%eax
810025f1:	eb 05                	jmp    810025f8 <is_option+0x2f>
810025f3:	b8 00 00 00 00       	mov    $0x0,%eax
810025f8:	5d                   	pop    %ebp
810025f9:	c3                   	ret    

810025fa <read_globals>:
810025fa:	55                   	push   %ebp
810025fb:	89 e5                	mov    %esp,%ebp
810025fd:	8b 15 48 99 00 81    	mov    0x81009948,%edx
81002603:	8b 45 08             	mov    0x8(%ebp),%eax
81002606:	89 10                	mov    %edx,(%eax)
81002608:	8b 15 4c 99 00 81    	mov    0x8100994c,%edx
8100260e:	8b 45 08             	mov    0x8(%ebp),%eax
81002611:	89 50 04             	mov    %edx,0x4(%eax)
81002614:	8b 15 24 88 00 81    	mov    0x81008824,%edx
8100261a:	8b 45 08             	mov    0x8(%ebp),%eax
8100261d:	89 50 08             	mov    %edx,0x8(%eax)
81002620:	8b 15 28 88 00 81    	mov    0x81008828,%edx
81002626:	8b 45 08             	mov    0x8(%ebp),%eax
81002629:	89 50 0c             	mov    %edx,0xc(%eax)
8100262c:	8b 15 50 99 00 81    	mov    0x81009950,%edx
81002632:	8b 45 08             	mov    0x8(%ebp),%eax
81002635:	89 50 10             	mov    %edx,0x10(%eax)
81002638:	8b 15 54 99 00 81    	mov    0x81009954,%edx
8100263e:	8b 45 08             	mov    0x8(%ebp),%eax
81002641:	89 50 14             	mov    %edx,0x14(%eax)
81002644:	8b 15 58 99 00 81    	mov    0x81009958,%edx
8100264a:	8b 45 08             	mov    0x8(%ebp),%eax
8100264d:	89 50 18             	mov    %edx,0x18(%eax)
81002650:	90                   	nop
81002651:	5d                   	pop    %ebp
81002652:	c3                   	ret    

81002653 <write_globals>:
81002653:	55                   	push   %ebp
81002654:	89 e5                	mov    %esp,%ebp
81002656:	8b 45 08             	mov    0x8(%ebp),%eax
81002659:	8b 00                	mov    (%eax),%eax
8100265b:	a3 48 99 00 81       	mov    %eax,0x81009948
81002660:	8b 45 08             	mov    0x8(%ebp),%eax
81002663:	8b 40 04             	mov    0x4(%eax),%eax
81002666:	a3 4c 99 00 81       	mov    %eax,0x8100994c
8100266b:	8b 45 08             	mov    0x8(%ebp),%eax
8100266e:	8b 40 08             	mov    0x8(%eax),%eax
81002671:	a3 24 88 00 81       	mov    %eax,0x81008824
81002676:	8b 45 08             	mov    0x8(%ebp),%eax
81002679:	8b 40 0c             	mov    0xc(%eax),%eax
8100267c:	a3 28 88 00 81       	mov    %eax,0x81008828
81002681:	8b 45 08             	mov    0x8(%ebp),%eax
81002684:	8b 40 10             	mov    0x10(%eax),%eax
81002687:	a3 50 99 00 81       	mov    %eax,0x81009950
8100268c:	8b 45 08             	mov    0x8(%ebp),%eax
8100268f:	8b 40 14             	mov    0x14(%eax),%eax
81002692:	a3 54 99 00 81       	mov    %eax,0x81009954
81002697:	8b 45 08             	mov    0x8(%ebp),%eax
8100269a:	8b 40 18             	mov    0x18(%eax),%eax
8100269d:	a3 58 99 00 81       	mov    %eax,0x81009958
810026a2:	90                   	nop
810026a3:	5d                   	pop    %ebp
810026a4:	c3                   	ret    

810026a5 <getopt_internal>:
810026a5:	55                   	push   %ebp
810026a6:	89 e5                	mov    %esp,%ebp
810026a8:	53                   	push   %ebx
810026a9:	83 ec 34             	sub    $0x34,%esp
810026ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810026b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810026ba:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810026c1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810026c8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810026cf:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810026d6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810026dd:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810026e4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810026eb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810026ef:	74 35                	je     81002726 <getopt_internal+0x81>
810026f1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810026f5:	74 2f                	je     81002726 <getopt_internal+0x81>
810026f7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810026fb:	75 06                	jne    81002703 <getopt_internal+0x5e>
810026fd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002701:	74 23                	je     81002726 <getopt_internal+0x81>
81002703:	8b 45 20             	mov    0x20(%ebp),%eax
81002706:	8b 40 04             	mov    0x4(%eax),%eax
81002709:	39 45 08             	cmp    %eax,0x8(%ebp)
8100270c:	7e 18                	jle    81002726 <getopt_internal+0x81>
8100270e:	8b 45 20             	mov    0x20(%ebp),%eax
81002711:	8b 40 04             	mov    0x4(%eax),%eax
81002714:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100271b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100271e:	01 d0                	add    %edx,%eax
81002720:	8b 00                	mov    (%eax),%eax
81002722:	85 c0                	test   %eax,%eax
81002724:	75 0a                	jne    81002730 <getopt_internal+0x8b>
81002726:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100272b:	e9 85 0a 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002730:	8b 45 20             	mov    0x20(%ebp),%eax
81002733:	8b 40 04             	mov    0x4(%eax),%eax
81002736:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100273d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002740:	01 d0                	add    %edx,%eax
81002742:	8b 00                	mov    (%eax),%eax
81002744:	83 ec 08             	sub    $0x8,%esp
81002747:	68 30 84 00 81       	push   $0x81008430
8100274c:	50                   	push   %eax
8100274d:	e8 ba 2f 00 00       	call   8100570c <strcmp>
81002752:	83 c4 10             	add    $0x10,%esp
81002755:	85 c0                	test   %eax,%eax
81002757:	75 19                	jne    81002772 <getopt_internal+0xcd>
81002759:	8b 45 20             	mov    0x20(%ebp),%eax
8100275c:	8b 40 04             	mov    0x4(%eax),%eax
8100275f:	8d 50 01             	lea    0x1(%eax),%edx
81002762:	8b 45 20             	mov    0x20(%ebp),%eax
81002765:	89 50 04             	mov    %edx,0x4(%eax)
81002768:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100276d:	e9 43 0a 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002772:	8b 45 20             	mov    0x20(%ebp),%eax
81002775:	8b 40 04             	mov    0x4(%eax),%eax
81002778:	85 c0                	test   %eax,%eax
8100277a:	75 28                	jne    810027a4 <getopt_internal+0xff>
8100277c:	8b 45 20             	mov    0x20(%ebp),%eax
8100277f:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002786:	8b 45 20             	mov    0x20(%ebp),%eax
81002789:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002790:	8b 45 20             	mov    0x20(%ebp),%eax
81002793:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100279a:	8b 45 20             	mov    0x20(%ebp),%eax
8100279d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810027a4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810027a8:	74 33                	je     810027dd <getopt_internal+0x138>
810027aa:	8b 45 10             	mov    0x10(%ebp),%eax
810027ad:	0f b6 00             	movzbl (%eax),%eax
810027b0:	3c 2d                	cmp    $0x2d,%al
810027b2:	74 0a                	je     810027be <getopt_internal+0x119>
810027b4:	8b 45 10             	mov    0x10(%ebp),%eax
810027b7:	0f b6 00             	movzbl (%eax),%eax
810027ba:	3c 2b                	cmp    $0x2b,%al
810027bc:	75 1f                	jne    810027dd <getopt_internal+0x138>
810027be:	8b 45 10             	mov    0x10(%ebp),%eax
810027c1:	0f b6 00             	movzbl (%eax),%eax
810027c4:	3c 2d                	cmp    $0x2d,%al
810027c6:	75 07                	jne    810027cf <getopt_internal+0x12a>
810027c8:	b8 01 00 00 00       	mov    $0x1,%eax
810027cd:	eb 05                	jmp    810027d4 <getopt_internal+0x12f>
810027cf:	b8 02 00 00 00       	mov    $0x2,%eax
810027d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027d7:	83 45 10 01          	addl   $0x1,0x10(%ebp)
810027db:	eb 23                	jmp    81002800 <getopt_internal+0x15b>
810027dd:	83 ec 0c             	sub    $0xc,%esp
810027e0:	68 33 84 00 81       	push   $0x81008433
810027e5:	e8 44 41 00 00       	call   8100692e <getenv>
810027ea:	83 c4 10             	add    $0x10,%esp
810027ed:	85 c0                	test   %eax,%eax
810027ef:	74 07                	je     810027f8 <getopt_internal+0x153>
810027f1:	b8 02 00 00 00       	mov    $0x2,%eax
810027f6:	eb 05                	jmp    810027fd <getopt_internal+0x158>
810027f8:	b8 00 00 00 00       	mov    $0x0,%eax
810027fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002800:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002804:	74 15                	je     8100281b <getopt_internal+0x176>
81002806:	8b 45 10             	mov    0x10(%ebp),%eax
81002809:	0f b6 00             	movzbl (%eax),%eax
8100280c:	3c 3a                	cmp    $0x3a,%al
8100280e:	75 0b                	jne    8100281b <getopt_internal+0x176>
81002810:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002814:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
8100281b:	8b 45 20             	mov    0x20(%ebp),%eax
8100281e:	8b 40 10             	mov    0x10(%eax),%eax
81002821:	83 f8 01             	cmp    $0x1,%eax
81002824:	0f 85 a2 01 00 00    	jne    810029cc <getopt_internal+0x327>
8100282a:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100282e:	0f 84 02 01 00 00    	je     81002936 <getopt_internal+0x291>
81002834:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002838:	0f 84 56 01 00 00    	je     81002994 <getopt_internal+0x2ef>
8100283e:	8b 45 20             	mov    0x20(%ebp),%eax
81002841:	8b 50 04             	mov    0x4(%eax),%edx
81002844:	8b 45 20             	mov    0x20(%ebp),%eax
81002847:	89 50 14             	mov    %edx,0x14(%eax)
8100284a:	8b 45 20             	mov    0x20(%ebp),%eax
8100284d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002854:	eb 1e                	jmp    81002874 <getopt_internal+0x1cf>
81002856:	8b 45 20             	mov    0x20(%ebp),%eax
81002859:	8b 40 04             	mov    0x4(%eax),%eax
8100285c:	8d 50 01             	lea    0x1(%eax),%edx
8100285f:	8b 45 20             	mov    0x20(%ebp),%eax
81002862:	89 50 04             	mov    %edx,0x4(%eax)
81002865:	8b 45 20             	mov    0x20(%ebp),%eax
81002868:	8b 40 18             	mov    0x18(%eax),%eax
8100286b:	8d 50 01             	lea    0x1(%eax),%edx
8100286e:	8b 45 20             	mov    0x20(%ebp),%eax
81002871:	89 50 18             	mov    %edx,0x18(%eax)
81002874:	8b 45 20             	mov    0x20(%ebp),%eax
81002877:	8b 40 04             	mov    0x4(%eax),%eax
8100287a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002881:	8b 45 0c             	mov    0xc(%ebp),%eax
81002884:	01 d0                	add    %edx,%eax
81002886:	8b 00                	mov    (%eax),%eax
81002888:	83 ec 08             	sub    $0x8,%esp
8100288b:	ff 75 1c             	push   0x1c(%ebp)
8100288e:	50                   	push   %eax
8100288f:	e8 35 fd ff ff       	call   810025c9 <is_option>
81002894:	83 c4 10             	add    $0x10,%esp
81002897:	85 c0                	test   %eax,%eax
81002899:	74 bb                	je     81002856 <getopt_internal+0x1b1>
8100289b:	8b 45 20             	mov    0x20(%ebp),%eax
8100289e:	8b 40 04             	mov    0x4(%eax),%eax
810028a1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810028ab:	01 d0                	add    %edx,%eax
810028ad:	8b 00                	mov    (%eax),%eax
810028af:	85 c0                	test   %eax,%eax
810028b1:	75 16                	jne    810028c9 <getopt_internal+0x224>
810028b3:	8b 45 20             	mov    0x20(%ebp),%eax
810028b6:	8b 50 14             	mov    0x14(%eax),%edx
810028b9:	8b 45 20             	mov    0x20(%ebp),%eax
810028bc:	89 50 04             	mov    %edx,0x4(%eax)
810028bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028c4:	e9 ec 08 00 00       	jmp    810031b5 <getopt_internal+0xb10>
810028c9:	8b 45 20             	mov    0x20(%ebp),%eax
810028cc:	8b 40 04             	mov    0x4(%eax),%eax
810028cf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810028d9:	01 d0                	add    %edx,%eax
810028db:	8b 00                	mov    (%eax),%eax
810028dd:	83 ec 08             	sub    $0x8,%esp
810028e0:	68 30 84 00 81       	push   $0x81008430
810028e5:	50                   	push   %eax
810028e6:	e8 21 2e 00 00       	call   8100570c <strcmp>
810028eb:	83 c4 10             	add    $0x10,%esp
810028ee:	85 c0                	test   %eax,%eax
810028f0:	0f 85 cf 00 00 00    	jne    810029c5 <getopt_internal+0x320>
810028f6:	8b 45 20             	mov    0x20(%ebp),%eax
810028f9:	8b 40 18             	mov    0x18(%eax),%eax
810028fc:	8b 55 20             	mov    0x20(%ebp),%edx
810028ff:	8b 52 14             	mov    0x14(%edx),%edx
81002902:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002909:	8b 55 0c             	mov    0xc(%ebp),%edx
8100290c:	01 ca                	add    %ecx,%edx
8100290e:	83 ec 04             	sub    $0x4,%esp
81002911:	6a 01                	push   $0x1
81002913:	50                   	push   %eax
81002914:	52                   	push   %edx
81002915:	e8 79 fc ff ff       	call   81002593 <permute>
8100291a:	83 c4 10             	add    $0x10,%esp
8100291d:	8b 45 20             	mov    0x20(%ebp),%eax
81002920:	8b 40 14             	mov    0x14(%eax),%eax
81002923:	8d 50 01             	lea    0x1(%eax),%edx
81002926:	8b 45 20             	mov    0x20(%ebp),%eax
81002929:	89 50 04             	mov    %edx,0x4(%eax)
8100292c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002931:	e9 7f 08 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002936:	8b 45 20             	mov    0x20(%ebp),%eax
81002939:	8b 40 04             	mov    0x4(%eax),%eax
8100293c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002943:	8b 45 0c             	mov    0xc(%ebp),%eax
81002946:	01 d0                	add    %edx,%eax
81002948:	8b 00                	mov    (%eax),%eax
8100294a:	83 ec 08             	sub    $0x8,%esp
8100294d:	ff 75 1c             	push   0x1c(%ebp)
81002950:	50                   	push   %eax
81002951:	e8 73 fc ff ff       	call   810025c9 <is_option>
81002956:	83 c4 10             	add    $0x10,%esp
81002959:	85 c0                	test   %eax,%eax
8100295b:	75 6b                	jne    810029c8 <getopt_internal+0x323>
8100295d:	8b 45 20             	mov    0x20(%ebp),%eax
81002960:	8b 40 04             	mov    0x4(%eax),%eax
81002963:	8d 48 01             	lea    0x1(%eax),%ecx
81002966:	8b 55 20             	mov    0x20(%ebp),%edx
81002969:	89 4a 04             	mov    %ecx,0x4(%edx)
8100296c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002973:	8b 45 0c             	mov    0xc(%ebp),%eax
81002976:	01 d0                	add    %edx,%eax
81002978:	8b 10                	mov    (%eax),%edx
8100297a:	8b 45 20             	mov    0x20(%ebp),%eax
8100297d:	89 10                	mov    %edx,(%eax)
8100297f:	8b 45 20             	mov    0x20(%ebp),%eax
81002982:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002989:	8b 45 20             	mov    0x20(%ebp),%eax
8100298c:	8b 40 0c             	mov    0xc(%eax),%eax
8100298f:	e9 21 08 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002994:	8b 45 20             	mov    0x20(%ebp),%eax
81002997:	8b 40 04             	mov    0x4(%eax),%eax
8100299a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810029a4:	01 d0                	add    %edx,%eax
810029a6:	8b 00                	mov    (%eax),%eax
810029a8:	83 ec 08             	sub    $0x8,%esp
810029ab:	ff 75 1c             	push   0x1c(%ebp)
810029ae:	50                   	push   %eax
810029af:	e8 15 fc ff ff       	call   810025c9 <is_option>
810029b4:	83 c4 10             	add    $0x10,%esp
810029b7:	85 c0                	test   %eax,%eax
810029b9:	75 10                	jne    810029cb <getopt_internal+0x326>
810029bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029c0:	e9 f0 07 00 00       	jmp    810031b5 <getopt_internal+0xb10>
810029c5:	90                   	nop
810029c6:	eb 04                	jmp    810029cc <getopt_internal+0x327>
810029c8:	90                   	nop
810029c9:	eb 01                	jmp    810029cc <getopt_internal+0x327>
810029cb:	90                   	nop
810029cc:	8b 45 20             	mov    0x20(%ebp),%eax
810029cf:	8b 40 04             	mov    0x4(%eax),%eax
810029d2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810029dc:	01 d0                	add    %edx,%eax
810029de:	8b 00                	mov    (%eax),%eax
810029e0:	85 c0                	test   %eax,%eax
810029e2:	75 0a                	jne    810029ee <getopt_internal+0x349>
810029e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029e9:	e9 c7 07 00 00       	jmp    810031b5 <getopt_internal+0xb10>
810029ee:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810029f2:	0f 84 15 03 00 00    	je     81002d0d <getopt_internal+0x668>
810029f8:	8b 45 20             	mov    0x20(%ebp),%eax
810029fb:	8b 40 04             	mov    0x4(%eax),%eax
810029fe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a05:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a08:	01 d0                	add    %edx,%eax
81002a0a:	8b 00                	mov    (%eax),%eax
81002a0c:	83 ec 04             	sub    $0x4,%esp
81002a0f:	6a 02                	push   $0x2
81002a11:	68 30 84 00 81       	push   $0x81008430
81002a16:	50                   	push   %eax
81002a17:	e8 f9 15 00 00       	call   81004015 <memcmp>
81002a1c:	83 c4 10             	add    $0x10,%esp
81002a1f:	85 c0                	test   %eax,%eax
81002a21:	74 29                	je     81002a4c <getopt_internal+0x3a7>
81002a23:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002a27:	0f 84 e0 02 00 00    	je     81002d0d <getopt_internal+0x668>
81002a2d:	8b 45 20             	mov    0x20(%ebp),%eax
81002a30:	8b 40 04             	mov    0x4(%eax),%eax
81002a33:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a3d:	01 d0                	add    %edx,%eax
81002a3f:	8b 00                	mov    (%eax),%eax
81002a41:	0f b6 00             	movzbl (%eax),%eax
81002a44:	3c 2b                	cmp    $0x2b,%al
81002a46:	0f 85 c1 02 00 00    	jne    81002d0d <getopt_internal+0x668>
81002a4c:	8b 45 20             	mov    0x20(%ebp),%eax
81002a4f:	8b 40 10             	mov    0x10(%eax),%eax
81002a52:	83 f8 01             	cmp    $0x1,%eax
81002a55:	0f 85 b2 02 00 00    	jne    81002d0d <getopt_internal+0x668>
81002a5b:	8b 45 20             	mov    0x20(%ebp),%eax
81002a5e:	8b 40 04             	mov    0x4(%eax),%eax
81002a61:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a68:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a6b:	01 d0                	add    %edx,%eax
81002a6d:	8b 00                	mov    (%eax),%eax
81002a6f:	83 ec 04             	sub    $0x4,%esp
81002a72:	6a 02                	push   $0x2
81002a74:	68 30 84 00 81       	push   $0x81008430
81002a79:	50                   	push   %eax
81002a7a:	e8 96 15 00 00       	call   81004015 <memcmp>
81002a7f:	83 c4 10             	add    $0x10,%esp
81002a82:	85 c0                	test   %eax,%eax
81002a84:	75 0a                	jne    81002a90 <getopt_internal+0x3eb>
81002a86:	8b 45 20             	mov    0x20(%ebp),%eax
81002a89:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002a90:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002a97:	8b 45 20             	mov    0x20(%ebp),%eax
81002a9a:	8b 40 04             	mov    0x4(%eax),%eax
81002a9d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002aa4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aa7:	01 d0                	add    %edx,%eax
81002aa9:	8b 10                	mov    (%eax),%edx
81002aab:	8b 45 20             	mov    0x20(%ebp),%eax
81002aae:	8b 40 10             	mov    0x10(%eax),%eax
81002ab1:	01 d0                	add    %edx,%eax
81002ab3:	83 ec 08             	sub    $0x8,%esp
81002ab6:	6a 3d                	push   $0x3d
81002ab8:	50                   	push   %eax
81002ab9:	e8 52 2b 00 00       	call   81005610 <strchr>
81002abe:	83 c4 10             	add    $0x10,%esp
81002ac1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ac4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002ac8:	75 4a                	jne    81002b14 <getopt_internal+0x46f>
81002aca:	8b 45 20             	mov    0x20(%ebp),%eax
81002acd:	8b 40 04             	mov    0x4(%eax),%eax
81002ad0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ad7:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ada:	01 d0                	add    %edx,%eax
81002adc:	8b 00                	mov    (%eax),%eax
81002ade:	83 ec 0c             	sub    $0xc,%esp
81002ae1:	50                   	push   %eax
81002ae2:	e8 d9 2c 00 00       	call   810057c0 <strlen>
81002ae7:	83 c4 10             	add    $0x10,%esp
81002aea:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002aed:	8b 45 20             	mov    0x20(%ebp),%eax
81002af0:	8b 40 04             	mov    0x4(%eax),%eax
81002af3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002afa:	8b 45 0c             	mov    0xc(%ebp),%eax
81002afd:	01 d0                	add    %edx,%eax
81002aff:	8b 10                	mov    (%eax),%edx
81002b01:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b04:	01 d0                	add    %edx,%eax
81002b06:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002b09:	8b 45 20             	mov    0x20(%ebp),%eax
81002b0c:	8b 40 10             	mov    0x10(%eax),%eax
81002b0f:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002b12:	eb 28                	jmp    81002b3c <getopt_internal+0x497>
81002b14:	8b 45 20             	mov    0x20(%ebp),%eax
81002b17:	8b 40 04             	mov    0x4(%eax),%eax
81002b1a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b24:	01 d0                	add    %edx,%eax
81002b26:	8b 08                	mov    (%eax),%ecx
81002b28:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002b2b:	29 c8                	sub    %ecx,%eax
81002b2d:	89 c2                	mov    %eax,%edx
81002b2f:	8b 45 20             	mov    0x20(%ebp),%eax
81002b32:	8b 48 10             	mov    0x10(%eax),%ecx
81002b35:	89 d0                	mov    %edx,%eax
81002b37:	29 c8                	sub    %ecx,%eax
81002b39:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002b3c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002b43:	e9 95 01 00 00       	jmp    81002cdd <getopt_internal+0x638>
81002b48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b4b:	c1 e0 04             	shl    $0x4,%eax
81002b4e:	89 c2                	mov    %eax,%edx
81002b50:	8b 45 14             	mov    0x14(%ebp),%eax
81002b53:	01 d0                	add    %edx,%eax
81002b55:	8b 00                	mov    (%eax),%eax
81002b57:	8b 55 20             	mov    0x20(%ebp),%edx
81002b5a:	8b 52 04             	mov    0x4(%edx),%edx
81002b5d:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002b64:	8b 55 0c             	mov    0xc(%ebp),%edx
81002b67:	01 ca                	add    %ecx,%edx
81002b69:	8b 0a                	mov    (%edx),%ecx
81002b6b:	8b 55 20             	mov    0x20(%ebp),%edx
81002b6e:	8b 52 10             	mov    0x10(%edx),%edx
81002b71:	01 ca                	add    %ecx,%edx
81002b73:	83 ec 04             	sub    $0x4,%esp
81002b76:	ff 75 ec             	push   -0x14(%ebp)
81002b79:	50                   	push   %eax
81002b7a:	52                   	push   %edx
81002b7b:	e8 95 14 00 00       	call   81004015 <memcmp>
81002b80:	83 c4 10             	add    $0x10,%esp
81002b83:	85 c0                	test   %eax,%eax
81002b85:	0f 85 4e 01 00 00    	jne    81002cd9 <getopt_internal+0x634>
81002b8b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b8e:	c1 e0 04             	shl    $0x4,%eax
81002b91:	89 c2                	mov    %eax,%edx
81002b93:	8b 45 14             	mov    0x14(%ebp),%eax
81002b96:	01 d0                	add    %edx,%eax
81002b98:	8b 00                	mov    (%eax),%eax
81002b9a:	83 ec 0c             	sub    $0xc,%esp
81002b9d:	50                   	push   %eax
81002b9e:	e8 1d 2c 00 00       	call   810057c0 <strlen>
81002ba3:	83 c4 10             	add    $0x10,%esp
81002ba6:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002ba9:	75 0b                	jne    81002bb6 <getopt_internal+0x511>
81002bab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bae:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bb1:	e9 3e 01 00 00       	jmp    81002cf4 <getopt_internal+0x64f>
81002bb6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002bba:	79 0b                	jns    81002bc7 <getopt_internal+0x522>
81002bbc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bbf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bc2:	e9 12 01 00 00       	jmp    81002cd9 <getopt_internal+0x634>
81002bc7:	8b 45 20             	mov    0x20(%ebp),%eax
81002bca:	8b 40 08             	mov    0x8(%eax),%eax
81002bcd:	85 c0                	test   %eax,%eax
81002bcf:	0f 84 ef 00 00 00    	je     81002cc4 <getopt_internal+0x61f>
81002bd5:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002bda:	8b 50 0c             	mov    0xc(%eax),%edx
81002bdd:	8b 45 0c             	mov    0xc(%ebp),%eax
81002be0:	8b 00                	mov    (%eax),%eax
81002be2:	83 ec 08             	sub    $0x8,%esp
81002be5:	52                   	push   %edx
81002be6:	50                   	push   %eax
81002be7:	e8 da 35 00 00       	call   810061c6 <fputs>
81002bec:	83 c4 10             	add    $0x10,%esp
81002bef:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002bf4:	8b 40 0c             	mov    0xc(%eax),%eax
81002bf7:	83 ec 08             	sub    $0x8,%esp
81002bfa:	50                   	push   %eax
81002bfb:	68 43 84 00 81       	push   $0x81008443
81002c00:	e8 c1 35 00 00       	call   810061c6 <fputs>
81002c05:	83 c4 10             	add    $0x10,%esp
81002c08:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002c0d:	8b 50 0c             	mov    0xc(%eax),%edx
81002c10:	8b 45 20             	mov    0x20(%ebp),%eax
81002c13:	8b 40 04             	mov    0x4(%eax),%eax
81002c16:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002c1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c20:	01 c8                	add    %ecx,%eax
81002c22:	8b 00                	mov    (%eax),%eax
81002c24:	83 ec 08             	sub    $0x8,%esp
81002c27:	52                   	push   %edx
81002c28:	50                   	push   %eax
81002c29:	e8 98 35 00 00       	call   810061c6 <fputs>
81002c2e:	83 c4 10             	add    $0x10,%esp
81002c31:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002c36:	8b 40 0c             	mov    0xc(%eax),%eax
81002c39:	83 ec 08             	sub    $0x8,%esp
81002c3c:	50                   	push   %eax
81002c3d:	68 4e 84 00 81       	push   $0x8100844e
81002c42:	e8 7f 35 00 00       	call   810061c6 <fputs>
81002c47:	83 c4 10             	add    $0x10,%esp
81002c4a:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002c4f:	8b 50 0c             	mov    0xc(%eax),%edx
81002c52:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002c55:	c1 e0 04             	shl    $0x4,%eax
81002c58:	89 c1                	mov    %eax,%ecx
81002c5a:	8b 45 14             	mov    0x14(%ebp),%eax
81002c5d:	01 c8                	add    %ecx,%eax
81002c5f:	8b 00                	mov    (%eax),%eax
81002c61:	83 ec 08             	sub    $0x8,%esp
81002c64:	52                   	push   %edx
81002c65:	50                   	push   %eax
81002c66:	e8 5b 35 00 00       	call   810061c6 <fputs>
81002c6b:	83 c4 10             	add    $0x10,%esp
81002c6e:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002c73:	8b 40 0c             	mov    0xc(%eax),%eax
81002c76:	83 ec 08             	sub    $0x8,%esp
81002c79:	50                   	push   %eax
81002c7a:	68 6b 84 00 81       	push   $0x8100846b
81002c7f:	e8 42 35 00 00       	call   810061c6 <fputs>
81002c84:	83 c4 10             	add    $0x10,%esp
81002c87:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002c8c:	8b 50 0c             	mov    0xc(%eax),%edx
81002c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c92:	c1 e0 04             	shl    $0x4,%eax
81002c95:	89 c1                	mov    %eax,%ecx
81002c97:	8b 45 14             	mov    0x14(%ebp),%eax
81002c9a:	01 c8                	add    %ecx,%eax
81002c9c:	8b 00                	mov    (%eax),%eax
81002c9e:	83 ec 08             	sub    $0x8,%esp
81002ca1:	52                   	push   %edx
81002ca2:	50                   	push   %eax
81002ca3:	e8 1e 35 00 00       	call   810061c6 <fputs>
81002ca8:	83 c4 10             	add    $0x10,%esp
81002cab:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002cb0:	8b 40 0c             	mov    0xc(%eax),%eax
81002cb3:	83 ec 08             	sub    $0x8,%esp
81002cb6:	50                   	push   %eax
81002cb7:	68 74 84 00 81       	push   $0x81008474
81002cbc:	e8 05 35 00 00       	call   810061c6 <fputs>
81002cc1:	83 c4 10             	add    $0x10,%esp
81002cc4:	8b 45 20             	mov    0x20(%ebp),%eax
81002cc7:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002cce:	8b 45 20             	mov    0x20(%ebp),%eax
81002cd1:	8b 40 0c             	mov    0xc(%eax),%eax
81002cd4:	e9 dc 04 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002cd9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002cdd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ce0:	c1 e0 04             	shl    $0x4,%eax
81002ce3:	89 c2                	mov    %eax,%edx
81002ce5:	8b 45 14             	mov    0x14(%ebp),%eax
81002ce8:	01 d0                	add    %edx,%eax
81002cea:	8b 00                	mov    (%eax),%eax
81002cec:	85 c0                	test   %eax,%eax
81002cee:	0f 85 54 fe ff ff    	jne    81002b48 <getopt_internal+0x4a3>
81002cf4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002cf8:	78 13                	js     81002d0d <getopt_internal+0x668>
81002cfa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002cfd:	c1 e0 04             	shl    $0x4,%eax
81002d00:	89 c2                	mov    %eax,%edx
81002d02:	8b 45 14             	mov    0x14(%ebp),%eax
81002d05:	01 d0                	add    %edx,%eax
81002d07:	8b 40 04             	mov    0x4(%eax),%eax
81002d0a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002d0d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002d11:	0f 89 9a 01 00 00    	jns    81002eb1 <getopt_internal+0x80c>
81002d17:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002d1b:	0f 84 90 01 00 00    	je     81002eb1 <getopt_internal+0x80c>
81002d21:	8b 45 20             	mov    0x20(%ebp),%eax
81002d24:	8b 40 04             	mov    0x4(%eax),%eax
81002d27:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d31:	01 d0                	add    %edx,%eax
81002d33:	8b 10                	mov    (%eax),%edx
81002d35:	8b 45 20             	mov    0x20(%ebp),%eax
81002d38:	8b 40 10             	mov    0x10(%eax),%eax
81002d3b:	01 d0                	add    %edx,%eax
81002d3d:	0f b6 00             	movzbl (%eax),%eax
81002d40:	0f be c0             	movsbl %al,%eax
81002d43:	83 ec 08             	sub    $0x8,%esp
81002d46:	50                   	push   %eax
81002d47:	ff 75 10             	push   0x10(%ebp)
81002d4a:	e8 c1 28 00 00       	call   81005610 <strchr>
81002d4f:	83 c4 10             	add    $0x10,%esp
81002d52:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002d55:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002d59:	0f 85 f1 00 00 00    	jne    81002e50 <getopt_internal+0x7ab>
81002d5f:	8b 45 20             	mov    0x20(%ebp),%eax
81002d62:	8b 40 08             	mov    0x8(%eax),%eax
81002d65:	85 c0                	test   %eax,%eax
81002d67:	0f 84 83 00 00 00    	je     81002df0 <getopt_internal+0x74b>
81002d6d:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002d72:	8b 50 0c             	mov    0xc(%eax),%edx
81002d75:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d78:	8b 00                	mov    (%eax),%eax
81002d7a:	83 ec 08             	sub    $0x8,%esp
81002d7d:	52                   	push   %edx
81002d7e:	50                   	push   %eax
81002d7f:	e8 42 34 00 00       	call   810061c6 <fputs>
81002d84:	83 c4 10             	add    $0x10,%esp
81002d87:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002d8c:	8b 40 0c             	mov    0xc(%eax),%eax
81002d8f:	83 ec 08             	sub    $0x8,%esp
81002d92:	50                   	push   %eax
81002d93:	68 78 84 00 81       	push   $0x81008478
81002d98:	e8 29 34 00 00       	call   810061c6 <fputs>
81002d9d:	83 c4 10             	add    $0x10,%esp
81002da0:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002da5:	8b 50 0c             	mov    0xc(%eax),%edx
81002da8:	8b 45 20             	mov    0x20(%ebp),%eax
81002dab:	8b 40 04             	mov    0x4(%eax),%eax
81002dae:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002db5:	8b 45 0c             	mov    0xc(%ebp),%eax
81002db8:	01 c8                	add    %ecx,%eax
81002dba:	8b 08                	mov    (%eax),%ecx
81002dbc:	8b 45 20             	mov    0x20(%ebp),%eax
81002dbf:	8b 40 10             	mov    0x10(%eax),%eax
81002dc2:	01 c8                	add    %ecx,%eax
81002dc4:	0f b6 00             	movzbl (%eax),%eax
81002dc7:	0f be c0             	movsbl %al,%eax
81002dca:	83 ec 08             	sub    $0x8,%esp
81002dcd:	52                   	push   %edx
81002dce:	50                   	push   %eax
81002dcf:	e8 fe 32 00 00       	call   810060d2 <fputc>
81002dd4:	83 c4 10             	add    $0x10,%esp
81002dd7:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002ddc:	8b 40 0c             	mov    0xc(%eax),%eax
81002ddf:	83 ec 08             	sub    $0x8,%esp
81002de2:	50                   	push   %eax
81002de3:	68 8f 84 00 81       	push   $0x8100848f
81002de8:	e8 d9 33 00 00       	call   810061c6 <fputs>
81002ded:	83 c4 10             	add    $0x10,%esp
81002df0:	8b 45 20             	mov    0x20(%ebp),%eax
81002df3:	8b 40 10             	mov    0x10(%eax),%eax
81002df6:	8d 50 01             	lea    0x1(%eax),%edx
81002df9:	8b 45 20             	mov    0x20(%ebp),%eax
81002dfc:	89 50 10             	mov    %edx,0x10(%eax)
81002dff:	8b 45 20             	mov    0x20(%ebp),%eax
81002e02:	8b 40 04             	mov    0x4(%eax),%eax
81002e05:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e0f:	01 d0                	add    %edx,%eax
81002e11:	8b 10                	mov    (%eax),%edx
81002e13:	8b 45 20             	mov    0x20(%ebp),%eax
81002e16:	8b 40 10             	mov    0x10(%eax),%eax
81002e19:	01 d0                	add    %edx,%eax
81002e1b:	0f b6 00             	movzbl (%eax),%eax
81002e1e:	84 c0                	test   %al,%al
81002e20:	75 19                	jne    81002e3b <getopt_internal+0x796>
81002e22:	8b 45 20             	mov    0x20(%ebp),%eax
81002e25:	8b 40 04             	mov    0x4(%eax),%eax
81002e28:	8d 50 01             	lea    0x1(%eax),%edx
81002e2b:	8b 45 20             	mov    0x20(%ebp),%eax
81002e2e:	89 50 04             	mov    %edx,0x4(%eax)
81002e31:	8b 45 20             	mov    0x20(%ebp),%eax
81002e34:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e3b:	8b 45 20             	mov    0x20(%ebp),%eax
81002e3e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002e45:	8b 45 20             	mov    0x20(%ebp),%eax
81002e48:	8b 40 0c             	mov    0xc(%eax),%eax
81002e4b:	e9 65 03 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81002e50:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e53:	83 c0 01             	add    $0x1,%eax
81002e56:	0f b6 00             	movzbl (%eax),%eax
81002e59:	3c 3a                	cmp    $0x3a,%al
81002e5b:	75 1b                	jne    81002e78 <getopt_internal+0x7d3>
81002e5d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e60:	83 c0 02             	add    $0x2,%eax
81002e63:	0f b6 00             	movzbl (%eax),%eax
81002e66:	3c 3a                	cmp    $0x3a,%al
81002e68:	75 07                	jne    81002e71 <getopt_internal+0x7cc>
81002e6a:	b8 02 00 00 00       	mov    $0x2,%eax
81002e6f:	eb 0c                	jmp    81002e7d <getopt_internal+0x7d8>
81002e71:	b8 01 00 00 00       	mov    $0x1,%eax
81002e76:	eb 05                	jmp    81002e7d <getopt_internal+0x7d8>
81002e78:	b8 00 00 00 00       	mov    $0x0,%eax
81002e7d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e80:	8b 45 20             	mov    0x20(%ebp),%eax
81002e83:	8b 40 04             	mov    0x4(%eax),%eax
81002e86:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e90:	01 d0                	add    %edx,%eax
81002e92:	8b 10                	mov    (%eax),%edx
81002e94:	8b 45 20             	mov    0x20(%ebp),%eax
81002e97:	8b 40 10             	mov    0x10(%eax),%eax
81002e9a:	83 c0 01             	add    $0x1,%eax
81002e9d:	01 d0                	add    %edx,%eax
81002e9f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ea2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ea5:	0f b6 00             	movzbl (%eax),%eax
81002ea8:	0f be d0             	movsbl %al,%edx
81002eab:	8b 45 20             	mov    0x20(%ebp),%eax
81002eae:	89 50 0c             	mov    %edx,0xc(%eax)
81002eb1:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002eb8:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002ebc:	74 40                	je     81002efe <getopt_internal+0x859>
81002ebe:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002ec2:	0f 85 b0 01 00 00    	jne    81003078 <getopt_internal+0x9d3>
81002ec8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ecb:	0f b6 00             	movzbl (%eax),%eax
81002ece:	3c 3d                	cmp    $0x3d,%al
81002ed0:	75 04                	jne    81002ed6 <getopt_internal+0x831>
81002ed2:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002ed6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ed9:	0f b6 00             	movzbl (%eax),%eax
81002edc:	84 c0                	test   %al,%al
81002ede:	74 05                	je     81002ee5 <getopt_internal+0x840>
81002ee0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ee3:	eb 05                	jmp    81002eea <getopt_internal+0x845>
81002ee5:	b8 00 00 00 00       	mov    $0x0,%eax
81002eea:	8b 55 20             	mov    0x20(%ebp),%edx
81002eed:	89 02                	mov    %eax,(%edx)
81002eef:	8b 45 20             	mov    0x20(%ebp),%eax
81002ef2:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002ef9:	e9 d2 01 00 00       	jmp    810030d0 <getopt_internal+0xa2b>
81002efe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f01:	0f b6 00             	movzbl (%eax),%eax
81002f04:	3c 3d                	cmp    $0x3d,%al
81002f06:	75 04                	jne    81002f0c <getopt_internal+0x867>
81002f08:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002f0c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f0f:	0f b6 00             	movzbl (%eax),%eax
81002f12:	84 c0                	test   %al,%al
81002f14:	74 17                	je     81002f2d <getopt_internal+0x888>
81002f16:	8b 45 20             	mov    0x20(%ebp),%eax
81002f19:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f1c:	89 10                	mov    %edx,(%eax)
81002f1e:	8b 45 20             	mov    0x20(%ebp),%eax
81002f21:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002f28:	e9 a3 01 00 00       	jmp    810030d0 <getopt_internal+0xa2b>
81002f2d:	8b 45 20             	mov    0x20(%ebp),%eax
81002f30:	8b 40 04             	mov    0x4(%eax),%eax
81002f33:	83 c0 01             	add    $0x1,%eax
81002f36:	39 45 08             	cmp    %eax,0x8(%ebp)
81002f39:	0f 8f 0a 01 00 00    	jg     81003049 <getopt_internal+0x9a4>
81002f3f:	8b 45 20             	mov    0x20(%ebp),%eax
81002f42:	8b 40 08             	mov    0x8(%eax),%eax
81002f45:	85 c0                	test   %eax,%eax
81002f47:	0f 84 d3 00 00 00    	je     81003020 <getopt_internal+0x97b>
81002f4d:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002f52:	8b 50 0c             	mov    0xc(%eax),%edx
81002f55:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f58:	8b 00                	mov    (%eax),%eax
81002f5a:	83 ec 08             	sub    $0x8,%esp
81002f5d:	52                   	push   %edx
81002f5e:	50                   	push   %eax
81002f5f:	e8 62 32 00 00       	call   810061c6 <fputs>
81002f64:	83 c4 10             	add    $0x10,%esp
81002f67:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002f6c:	8b 40 0c             	mov    0xc(%eax),%eax
81002f6f:	83 ec 08             	sub    $0x8,%esp
81002f72:	50                   	push   %eax
81002f73:	68 94 84 00 81       	push   $0x81008494
81002f78:	e8 49 32 00 00       	call   810061c6 <fputs>
81002f7d:	83 c4 10             	add    $0x10,%esp
81002f80:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f84:	78 54                	js     81002fda <getopt_internal+0x935>
81002f86:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002f8b:	8b 40 0c             	mov    0xc(%eax),%eax
81002f8e:	83 ec 08             	sub    $0x8,%esp
81002f91:	50                   	push   %eax
81002f92:	6a 2d                	push   $0x2d
81002f94:	e8 39 31 00 00       	call   810060d2 <fputc>
81002f99:	83 c4 10             	add    $0x10,%esp
81002f9c:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002fa1:	8b 50 0c             	mov    0xc(%eax),%edx
81002fa4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002fa7:	c1 e0 04             	shl    $0x4,%eax
81002faa:	89 c1                	mov    %eax,%ecx
81002fac:	8b 45 14             	mov    0x14(%ebp),%eax
81002faf:	01 c8                	add    %ecx,%eax
81002fb1:	8b 00                	mov    (%eax),%eax
81002fb3:	83 ec 08             	sub    $0x8,%esp
81002fb6:	52                   	push   %edx
81002fb7:	50                   	push   %eax
81002fb8:	e8 09 32 00 00       	call   810061c6 <fputs>
81002fbd:	83 c4 10             	add    $0x10,%esp
81002fc0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002fc4:	74 07                	je     81002fcd <getopt_internal+0x928>
81002fc6:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002fcb:	eb 05                	jmp    81002fd2 <getopt_internal+0x92d>
81002fcd:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002fd2:	8b 45 20             	mov    0x20(%ebp),%eax
81002fd5:	89 50 0c             	mov    %edx,0xc(%eax)
81002fd8:	eb 2d                	jmp    81003007 <getopt_internal+0x962>
81002fda:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81002fdf:	8b 50 0c             	mov    0xc(%eax),%edx
81002fe2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fe5:	0f b6 00             	movzbl (%eax),%eax
81002fe8:	0f be c0             	movsbl %al,%eax
81002feb:	83 ec 08             	sub    $0x8,%esp
81002fee:	52                   	push   %edx
81002fef:	50                   	push   %eax
81002ff0:	e8 dd 30 00 00       	call   810060d2 <fputc>
81002ff5:	83 c4 10             	add    $0x10,%esp
81002ff8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ffb:	0f b6 00             	movzbl (%eax),%eax
81002ffe:	0f be d0             	movsbl %al,%edx
81003001:	8b 45 20             	mov    0x20(%ebp),%eax
81003004:	89 50 0c             	mov    %edx,0xc(%eax)
81003007:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100300c:	8b 40 0c             	mov    0xc(%eax),%eax
8100300f:	83 ec 08             	sub    $0x8,%esp
81003012:	50                   	push   %eax
81003013:	68 8f 84 00 81       	push   $0x8100848f
81003018:	e8 a9 31 00 00       	call   810061c6 <fputs>
8100301d:	83 c4 10             	add    $0x10,%esp
81003020:	8b 45 20             	mov    0x20(%ebp),%eax
81003023:	8b 40 04             	mov    0x4(%eax),%eax
81003026:	8d 50 01             	lea    0x1(%eax),%edx
81003029:	8b 45 20             	mov    0x20(%ebp),%eax
8100302c:	89 50 04             	mov    %edx,0x4(%eax)
8100302f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003033:	74 0a                	je     8100303f <getopt_internal+0x99a>
81003035:	b8 3a 00 00 00       	mov    $0x3a,%eax
8100303a:	e9 76 01 00 00       	jmp    810031b5 <getopt_internal+0xb10>
8100303f:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003044:	e9 6c 01 00 00       	jmp    810031b5 <getopt_internal+0xb10>
81003049:	8b 45 20             	mov    0x20(%ebp),%eax
8100304c:	8b 40 04             	mov    0x4(%eax),%eax
8100304f:	83 c0 01             	add    $0x1,%eax
81003052:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003059:	8b 45 0c             	mov    0xc(%ebp),%eax
8100305c:	01 d0                	add    %edx,%eax
8100305e:	8b 10                	mov    (%eax),%edx
81003060:	8b 45 20             	mov    0x20(%ebp),%eax
81003063:	89 10                	mov    %edx,(%eax)
81003065:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100306c:	8b 45 20             	mov    0x20(%ebp),%eax
8100306f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003076:	eb 58                	jmp    810030d0 <getopt_internal+0xa2b>
81003078:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100307c:	79 3e                	jns    810030bc <getopt_internal+0xa17>
8100307e:	8b 45 20             	mov    0x20(%ebp),%eax
81003081:	8b 40 10             	mov    0x10(%eax),%eax
81003084:	8d 50 01             	lea    0x1(%eax),%edx
81003087:	8b 45 20             	mov    0x20(%ebp),%eax
8100308a:	89 50 10             	mov    %edx,0x10(%eax)
8100308d:	8b 45 20             	mov    0x20(%ebp),%eax
81003090:	8b 40 04             	mov    0x4(%eax),%eax
81003093:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100309a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100309d:	01 d0                	add    %edx,%eax
8100309f:	8b 10                	mov    (%eax),%edx
810030a1:	8b 45 20             	mov    0x20(%ebp),%eax
810030a4:	8b 40 10             	mov    0x10(%eax),%eax
810030a7:	01 d0                	add    %edx,%eax
810030a9:	0f b6 00             	movzbl (%eax),%eax
810030ac:	84 c0                	test   %al,%al
810030ae:	75 16                	jne    810030c6 <getopt_internal+0xa21>
810030b0:	8b 45 20             	mov    0x20(%ebp),%eax
810030b3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810030ba:	eb 0a                	jmp    810030c6 <getopt_internal+0xa21>
810030bc:	8b 45 20             	mov    0x20(%ebp),%eax
810030bf:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810030c6:	8b 45 20             	mov    0x20(%ebp),%eax
810030c9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810030cf:	90                   	nop
810030d0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810030d4:	75 57                	jne    8100312d <getopt_internal+0xa88>
810030d6:	8b 45 20             	mov    0x20(%ebp),%eax
810030d9:	8b 40 10             	mov    0x10(%eax),%eax
810030dc:	83 f8 01             	cmp    $0x1,%eax
810030df:	75 4c                	jne    8100312d <getopt_internal+0xa88>
810030e1:	8b 45 20             	mov    0x20(%ebp),%eax
810030e4:	8b 40 18             	mov    0x18(%eax),%eax
810030e7:	85 c0                	test   %eax,%eax
810030e9:	74 42                	je     8100312d <getopt_internal+0xa88>
810030eb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810030ee:	8d 48 01             	lea    0x1(%eax),%ecx
810030f1:	8b 45 20             	mov    0x20(%ebp),%eax
810030f4:	8b 40 18             	mov    0x18(%eax),%eax
810030f7:	8b 55 20             	mov    0x20(%ebp),%edx
810030fa:	8b 52 14             	mov    0x14(%edx),%edx
810030fd:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003104:	8b 55 0c             	mov    0xc(%ebp),%edx
81003107:	01 da                	add    %ebx,%edx
81003109:	83 ec 04             	sub    $0x4,%esp
8100310c:	51                   	push   %ecx
8100310d:	50                   	push   %eax
8100310e:	52                   	push   %edx
8100310f:	e8 7f f4 ff ff       	call   81002593 <permute>
81003114:	83 c4 10             	add    $0x10,%esp
81003117:	8b 45 20             	mov    0x20(%ebp),%eax
8100311a:	8b 40 14             	mov    0x14(%eax),%eax
8100311d:	8d 50 01             	lea    0x1(%eax),%edx
81003120:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003123:	01 c2                	add    %eax,%edx
81003125:	8b 45 20             	mov    0x20(%ebp),%eax
81003128:	89 50 04             	mov    %edx,0x4(%eax)
8100312b:	eb 1f                	jmp    8100314c <getopt_internal+0xaa7>
8100312d:	8b 45 20             	mov    0x20(%ebp),%eax
81003130:	8b 40 10             	mov    0x10(%eax),%eax
81003133:	83 f8 01             	cmp    $0x1,%eax
81003136:	75 14                	jne    8100314c <getopt_internal+0xaa7>
81003138:	8b 45 20             	mov    0x20(%ebp),%eax
8100313b:	8b 40 04             	mov    0x4(%eax),%eax
8100313e:	8d 50 01             	lea    0x1(%eax),%edx
81003141:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003144:	01 c2                	add    %eax,%edx
81003146:	8b 45 20             	mov    0x20(%ebp),%eax
81003149:	89 50 04             	mov    %edx,0x4(%eax)
8100314c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003150:	78 5d                	js     810031af <getopt_internal+0xb0a>
81003152:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003156:	74 08                	je     81003160 <getopt_internal+0xabb>
81003158:	8b 45 18             	mov    0x18(%ebp),%eax
8100315b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100315e:	89 10                	mov    %edx,(%eax)
81003160:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003163:	c1 e0 04             	shl    $0x4,%eax
81003166:	89 c2                	mov    %eax,%edx
81003168:	8b 45 14             	mov    0x14(%ebp),%eax
8100316b:	01 d0                	add    %edx,%eax
8100316d:	8b 40 08             	mov    0x8(%eax),%eax
81003170:	85 c0                	test   %eax,%eax
81003172:	74 29                	je     8100319d <getopt_internal+0xaf8>
81003174:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003177:	c1 e0 04             	shl    $0x4,%eax
8100317a:	89 c2                	mov    %eax,%edx
8100317c:	8b 45 14             	mov    0x14(%ebp),%eax
8100317f:	01 c2                	add    %eax,%edx
81003181:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003184:	c1 e0 04             	shl    $0x4,%eax
81003187:	89 c1                	mov    %eax,%ecx
81003189:	8b 45 14             	mov    0x14(%ebp),%eax
8100318c:	01 c8                	add    %ecx,%eax
8100318e:	8b 40 08             	mov    0x8(%eax),%eax
81003191:	8b 52 0c             	mov    0xc(%edx),%edx
81003194:	89 10                	mov    %edx,(%eax)
81003196:	b8 00 00 00 00       	mov    $0x0,%eax
8100319b:	eb 18                	jmp    810031b5 <getopt_internal+0xb10>
8100319d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031a0:	c1 e0 04             	shl    $0x4,%eax
810031a3:	89 c2                	mov    %eax,%edx
810031a5:	8b 45 14             	mov    0x14(%ebp),%eax
810031a8:	01 d0                	add    %edx,%eax
810031aa:	8b 40 0c             	mov    0xc(%eax),%eax
810031ad:	eb 06                	jmp    810031b5 <getopt_internal+0xb10>
810031af:	8b 45 20             	mov    0x20(%ebp),%eax
810031b2:	8b 40 0c             	mov    0xc(%eax),%eax
810031b5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810031b8:	c9                   	leave  
810031b9:	c3                   	ret    

810031ba <getopt>:
810031ba:	55                   	push   %ebp
810031bb:	89 e5                	mov    %esp,%ebp
810031bd:	83 ec 28             	sub    $0x28,%esp
810031c0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031c3:	50                   	push   %eax
810031c4:	e8 31 f4 ff ff       	call   810025fa <read_globals>
810031c9:	83 c4 04             	add    $0x4,%esp
810031cc:	83 ec 04             	sub    $0x4,%esp
810031cf:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031d2:	50                   	push   %eax
810031d3:	6a 00                	push   $0x0
810031d5:	6a 00                	push   $0x0
810031d7:	6a 00                	push   $0x0
810031d9:	ff 75 10             	push   0x10(%ebp)
810031dc:	ff 75 0c             	push   0xc(%ebp)
810031df:	ff 75 08             	push   0x8(%ebp)
810031e2:	e8 be f4 ff ff       	call   810026a5 <getopt_internal>
810031e7:	83 c4 20             	add    $0x20,%esp
810031ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031ed:	83 ec 0c             	sub    $0xc,%esp
810031f0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810031f3:	50                   	push   %eax
810031f4:	e8 5a f4 ff ff       	call   81002653 <write_globals>
810031f9:	83 c4 10             	add    $0x10,%esp
810031fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031ff:	c9                   	leave  
81003200:	c3                   	ret    

81003201 <getopt_long>:
81003201:	55                   	push   %ebp
81003202:	89 e5                	mov    %esp,%ebp
81003204:	83 ec 28             	sub    $0x28,%esp
81003207:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100320a:	50                   	push   %eax
8100320b:	e8 ea f3 ff ff       	call   810025fa <read_globals>
81003210:	83 c4 04             	add    $0x4,%esp
81003213:	83 ec 04             	sub    $0x4,%esp
81003216:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003219:	50                   	push   %eax
8100321a:	6a 00                	push   $0x0
8100321c:	ff 75 18             	push   0x18(%ebp)
8100321f:	ff 75 14             	push   0x14(%ebp)
81003222:	ff 75 10             	push   0x10(%ebp)
81003225:	ff 75 0c             	push   0xc(%ebp)
81003228:	ff 75 08             	push   0x8(%ebp)
8100322b:	e8 75 f4 ff ff       	call   810026a5 <getopt_internal>
81003230:	83 c4 20             	add    $0x20,%esp
81003233:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003236:	83 ec 0c             	sub    $0xc,%esp
81003239:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100323c:	50                   	push   %eax
8100323d:	e8 11 f4 ff ff       	call   81002653 <write_globals>
81003242:	83 c4 10             	add    $0x10,%esp
81003245:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003248:	c9                   	leave  
81003249:	c3                   	ret    

8100324a <getopt_long_only>:
8100324a:	55                   	push   %ebp
8100324b:	89 e5                	mov    %esp,%ebp
8100324d:	83 ec 28             	sub    $0x28,%esp
81003250:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003253:	50                   	push   %eax
81003254:	e8 a1 f3 ff ff       	call   810025fa <read_globals>
81003259:	83 c4 04             	add    $0x4,%esp
8100325c:	83 ec 04             	sub    $0x4,%esp
8100325f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003262:	50                   	push   %eax
81003263:	6a 01                	push   $0x1
81003265:	ff 75 18             	push   0x18(%ebp)
81003268:	ff 75 14             	push   0x14(%ebp)
8100326b:	ff 75 10             	push   0x10(%ebp)
8100326e:	ff 75 0c             	push   0xc(%ebp)
81003271:	ff 75 08             	push   0x8(%ebp)
81003274:	e8 2c f4 ff ff       	call   810026a5 <getopt_internal>
81003279:	83 c4 20             	add    $0x20,%esp
8100327c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100327f:	83 ec 0c             	sub    $0xc,%esp
81003282:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003285:	50                   	push   %eax
81003286:	e8 c8 f3 ff ff       	call   81002653 <write_globals>
8100328b:	83 c4 10             	add    $0x10,%esp
8100328e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003291:	c9                   	leave  
81003292:	c3                   	ret    

81003293 <__getopt_r>:
81003293:	55                   	push   %ebp
81003294:	89 e5                	mov    %esp,%ebp
81003296:	83 ec 08             	sub    $0x8,%esp
81003299:	83 ec 04             	sub    $0x4,%esp
8100329c:	ff 75 14             	push   0x14(%ebp)
8100329f:	6a 00                	push   $0x0
810032a1:	6a 00                	push   $0x0
810032a3:	6a 00                	push   $0x0
810032a5:	ff 75 10             	push   0x10(%ebp)
810032a8:	ff 75 0c             	push   0xc(%ebp)
810032ab:	ff 75 08             	push   0x8(%ebp)
810032ae:	e8 f2 f3 ff ff       	call   810026a5 <getopt_internal>
810032b3:	83 c4 20             	add    $0x20,%esp
810032b6:	c9                   	leave  
810032b7:	c3                   	ret    

810032b8 <__getopt_long_r>:
810032b8:	55                   	push   %ebp
810032b9:	89 e5                	mov    %esp,%ebp
810032bb:	83 ec 08             	sub    $0x8,%esp
810032be:	83 ec 04             	sub    $0x4,%esp
810032c1:	ff 75 1c             	push   0x1c(%ebp)
810032c4:	6a 00                	push   $0x0
810032c6:	ff 75 18             	push   0x18(%ebp)
810032c9:	ff 75 14             	push   0x14(%ebp)
810032cc:	ff 75 10             	push   0x10(%ebp)
810032cf:	ff 75 0c             	push   0xc(%ebp)
810032d2:	ff 75 08             	push   0x8(%ebp)
810032d5:	e8 cb f3 ff ff       	call   810026a5 <getopt_internal>
810032da:	83 c4 20             	add    $0x20,%esp
810032dd:	c9                   	leave  
810032de:	c3                   	ret    

810032df <__getopt_long_only_r>:
810032df:	55                   	push   %ebp
810032e0:	89 e5                	mov    %esp,%ebp
810032e2:	83 ec 08             	sub    $0x8,%esp
810032e5:	83 ec 04             	sub    $0x4,%esp
810032e8:	ff 75 1c             	push   0x1c(%ebp)
810032eb:	6a 01                	push   $0x1
810032ed:	ff 75 18             	push   0x18(%ebp)
810032f0:	ff 75 14             	push   0x14(%ebp)
810032f3:	ff 75 10             	push   0x10(%ebp)
810032f6:	ff 75 0c             	push   0xc(%ebp)
810032f9:	ff 75 08             	push   0x8(%ebp)
810032fc:	e8 a4 f3 ff ff       	call   810026a5 <getopt_internal>
81003301:	83 c4 20             	add    $0x20,%esp
81003304:	c9                   	leave  
81003305:	c3                   	ret    

81003306 <__getreent>:
81003306:	55                   	push   %ebp
81003307:	89 e5                	mov    %esp,%ebp
81003309:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100330e:	5d                   	pop    %ebp
8100330f:	c3                   	ret    

81003310 <__smakebuf_r>:
81003310:	55                   	push   %ebp
81003311:	89 e5                	mov    %esp,%ebp
81003313:	56                   	push   %esi
81003314:	53                   	push   %ebx
81003315:	83 ec 10             	sub    $0x10,%esp
81003318:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100331b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100331f:	98                   	cwtl   
81003320:	83 e0 02             	and    $0x2,%eax
81003323:	85 c0                	test   %eax,%eax
81003325:	74 16                	je     8100333d <__smakebuf_r+0x2d>
81003327:	8d 43 43             	lea    0x43(%ebx),%eax
8100332a:	89 03                	mov    %eax,(%ebx)
8100332c:	8b 03                	mov    (%ebx),%eax
8100332e:	89 43 10             	mov    %eax,0x10(%ebx)
81003331:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003338:	e9 b9 00 00 00       	jmp    810033f6 <__smakebuf_r+0xe6>
8100333d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003340:	50                   	push   %eax
81003341:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003344:	50                   	push   %eax
81003345:	53                   	push   %ebx
81003346:	ff 75 08             	push   0x8(%ebp)
81003349:	e8 af 00 00 00       	call   810033fd <__swhatbuf_r>
8100334e:	83 c4 10             	add    $0x10,%esp
81003351:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003354:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003357:	83 ec 08             	sub    $0x8,%esp
8100335a:	50                   	push   %eax
8100335b:	ff 75 08             	push   0x8(%ebp)
8100335e:	e8 f9 03 00 00       	call   8100375c <_malloc_r>
81003363:	83 c4 10             	add    $0x10,%esp
81003366:	89 c6                	mov    %eax,%esi
81003368:	85 f6                	test   %esi,%esi
8100336a:	75 2f                	jne    8100339b <__smakebuf_r+0x8b>
8100336c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003370:	98                   	cwtl   
81003371:	25 00 02 00 00       	and    $0x200,%eax
81003376:	85 c0                	test   %eax,%eax
81003378:	75 7c                	jne    810033f6 <__smakebuf_r+0xe6>
8100337a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100337e:	83 e0 fc             	and    $0xfffffffc,%eax
81003381:	83 c8 02             	or     $0x2,%eax
81003384:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003388:	8d 43 43             	lea    0x43(%ebx),%eax
8100338b:	89 03                	mov    %eax,(%ebx)
8100338d:	8b 03                	mov    (%ebx),%eax
8100338f:	89 43 10             	mov    %eax,0x10(%ebx)
81003392:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003399:	eb 5b                	jmp    810033f6 <__smakebuf_r+0xe6>
8100339b:	8b 45 08             	mov    0x8(%ebp),%eax
8100339e:	c7 40 3c 08 16 00 81 	movl   $0x81001608,0x3c(%eax)
810033a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033a9:	0c 80                	or     $0x80,%al
810033ab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033af:	89 33                	mov    %esi,(%ebx)
810033b1:	8b 03                	mov    (%ebx),%eax
810033b3:	89 43 10             	mov    %eax,0x10(%ebx)
810033b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033b9:	89 43 14             	mov    %eax,0x14(%ebx)
810033bc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810033bf:	85 c0                	test   %eax,%eax
810033c1:	74 26                	je     810033e9 <__smakebuf_r+0xd9>
810033c3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810033c7:	98                   	cwtl   
810033c8:	83 ec 08             	sub    $0x8,%esp
810033cb:	50                   	push   %eax
810033cc:	ff 75 08             	push   0x8(%ebp)
810033cf:	e8 84 36 00 00       	call   81006a58 <_isatty_r>
810033d4:	83 c4 10             	add    $0x10,%esp
810033d7:	85 c0                	test   %eax,%eax
810033d9:	74 0e                	je     810033e9 <__smakebuf_r+0xd9>
810033db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033df:	83 e0 fc             	and    $0xfffffffc,%eax
810033e2:	83 c8 01             	or     $0x1,%eax
810033e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033e9:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810033ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033f0:	09 d0                	or     %edx,%eax
810033f2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033f6:	8d 65 f8             	lea    -0x8(%ebp),%esp
810033f9:	5b                   	pop    %ebx
810033fa:	5e                   	pop    %esi
810033fb:	5d                   	pop    %ebp
810033fc:	c3                   	ret    

810033fd <__swhatbuf_r>:
810033fd:	55                   	push   %ebp
810033fe:	89 e5                	mov    %esp,%ebp
81003400:	83 ec 58             	sub    $0x58,%esp
81003403:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
8100340a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100340d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003411:	66 85 c0             	test   %ax,%ax
81003414:	78 1f                	js     81003435 <__swhatbuf_r+0x38>
81003416:	8b 45 0c             	mov    0xc(%ebp),%eax
81003419:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100341d:	98                   	cwtl   
8100341e:	83 ec 04             	sub    $0x4,%esp
81003421:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003424:	52                   	push   %edx
81003425:	50                   	push   %eax
81003426:	ff 75 08             	push   0x8(%ebp)
81003429:	e8 b5 ee ff ff       	call   810022e3 <_fstat_r>
8100342e:	83 c4 10             	add    $0x10,%esp
81003431:	85 c0                	test   %eax,%eax
81003433:	79 35                	jns    8100346a <__swhatbuf_r+0x6d>
81003435:	8b 45 14             	mov    0x14(%ebp),%eax
81003438:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100343e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003441:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003445:	98                   	cwtl   
81003446:	25 80 00 00 00       	and    $0x80,%eax
8100344b:	85 c0                	test   %eax,%eax
8100344d:	74 0b                	je     8100345a <__swhatbuf_r+0x5d>
8100344f:	8b 45 10             	mov    0x10(%ebp),%eax
81003452:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003458:	eb 09                	jmp    81003463 <__swhatbuf_r+0x66>
8100345a:	8b 45 10             	mov    0x10(%ebp),%eax
8100345d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003463:	b8 00 00 00 00       	mov    $0x0,%eax
81003468:	eb 24                	jmp    8100348e <__swhatbuf_r+0x91>
8100346a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100346d:	25 00 f0 00 00       	and    $0xf000,%eax
81003472:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003477:	0f 94 c0             	sete   %al
8100347a:	0f b6 d0             	movzbl %al,%edx
8100347d:	8b 45 14             	mov    0x14(%ebp),%eax
81003480:	89 10                	mov    %edx,(%eax)
81003482:	8b 45 10             	mov    0x10(%ebp),%eax
81003485:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100348b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100348e:	c9                   	leave  
8100348f:	c3                   	ret    

81003490 <malloc>:
81003490:	55                   	push   %ebp
81003491:	89 e5                	mov    %esp,%ebp
81003493:	83 ec 08             	sub    $0x8,%esp
81003496:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100349b:	83 ec 08             	sub    $0x8,%esp
8100349e:	ff 75 08             	push   0x8(%ebp)
810034a1:	50                   	push   %eax
810034a2:	e8 b5 02 00 00       	call   8100375c <_malloc_r>
810034a7:	83 c4 10             	add    $0x10,%esp
810034aa:	c9                   	leave  
810034ab:	c3                   	ret    

810034ac <free>:
810034ac:	55                   	push   %ebp
810034ad:	89 e5                	mov    %esp,%ebp
810034af:	83 ec 08             	sub    $0x8,%esp
810034b2:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810034b7:	83 ec 08             	sub    $0x8,%esp
810034ba:	ff 75 08             	push   0x8(%ebp)
810034bd:	50                   	push   %eax
810034be:	e8 d6 e3 ff ff       	call   81001899 <_free_r>
810034c3:	83 c4 10             	add    $0x10,%esp
810034c6:	90                   	nop
810034c7:	c9                   	leave  
810034c8:	c3                   	ret    

810034c9 <malloc_extend_top>:
810034c9:	55                   	push   %ebp
810034ca:	89 e5                	mov    %esp,%ebp
810034cc:	83 ec 38             	sub    $0x38,%esp
810034cf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810034d6:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
810034db:	8b 40 08             	mov    0x8(%eax),%eax
810034de:	89 45 e0             	mov    %eax,-0x20(%ebp)
810034e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810034e4:	8b 40 04             	mov    0x4(%eax),%eax
810034e7:	83 e0 fc             	and    $0xfffffffc,%eax
810034ea:	89 45 dc             	mov    %eax,-0x24(%ebp)
810034ed:	8b 55 e0             	mov    -0x20(%ebp),%edx
810034f0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810034f3:	01 d0                	add    %edx,%eax
810034f5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810034f8:	8b 15 60 99 00 81    	mov    0x81009960,%edx
810034fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003501:	01 d0                	add    %edx,%eax
81003503:	83 c0 10             	add    $0x10,%eax
81003506:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003509:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003510:	a1 8c 90 00 81       	mov    0x8100908c,%eax
81003515:	83 f8 ff             	cmp    $0xffffffff,%eax
81003518:	74 15                	je     8100352f <malloc_extend_top+0x66>
8100351a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100351d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003520:	01 d0                	add    %edx,%eax
81003522:	8d 50 ff             	lea    -0x1(%eax),%edx
81003525:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003528:	f7 d8                	neg    %eax
8100352a:	21 d0                	and    %edx,%eax
8100352c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100352f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003532:	83 ec 08             	sub    $0x8,%esp
81003535:	50                   	push   %eax
81003536:	ff 75 08             	push   0x8(%ebp)
81003539:	e8 b4 1c 00 00       	call   810051f2 <_sbrk_r>
8100353e:	83 c4 10             	add    $0x10,%esp
81003541:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003544:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003548:	0f 84 0b 02 00 00    	je     81003759 <malloc_extend_top+0x290>
8100354e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003551:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003554:	73 0e                	jae    81003564 <malloc_extend_top+0x9b>
81003556:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
8100355b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100355e:	0f 85 f5 01 00 00    	jne    81003759 <malloc_extend_top+0x290>
81003564:	a1 80 99 00 81       	mov    0x81009980,%eax
81003569:	89 c2                	mov    %eax,%edx
8100356b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100356e:	01 d0                	add    %edx,%eax
81003570:	a3 80 99 00 81       	mov    %eax,0x81009980
81003575:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003578:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100357b:	75 30                	jne    810035ad <malloc_extend_top+0xe4>
8100357d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003580:	8d 50 ff             	lea    -0x1(%eax),%edx
81003583:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003586:	21 d0                	and    %edx,%eax
81003588:	85 c0                	test   %eax,%eax
8100358a:	75 21                	jne    810035ad <malloc_extend_top+0xe4>
8100358c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100358f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003592:	01 d0                	add    %edx,%eax
81003594:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003597:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
8100359c:	8b 40 08             	mov    0x8(%eax),%eax
8100359f:	8b 55 d0             	mov    -0x30(%ebp),%edx
810035a2:	83 ca 01             	or     $0x1,%edx
810035a5:	89 50 04             	mov    %edx,0x4(%eax)
810035a8:	e9 76 01 00 00       	jmp    81003723 <malloc_extend_top+0x25a>
810035ad:	a1 8c 90 00 81       	mov    0x8100908c,%eax
810035b2:	83 f8 ff             	cmp    $0xffffffff,%eax
810035b5:	75 0a                	jne    810035c1 <malloc_extend_top+0xf8>
810035b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ba:	a3 8c 90 00 81       	mov    %eax,0x8100908c
810035bf:	eb 13                	jmp    810035d4 <malloc_extend_top+0x10b>
810035c1:	8b 15 80 99 00 81    	mov    0x81009980,%edx
810035c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ca:	2b 45 d8             	sub    -0x28(%ebp),%eax
810035cd:	01 d0                	add    %edx,%eax
810035cf:	a3 80 99 00 81       	mov    %eax,0x81009980
810035d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035d7:	83 c0 08             	add    $0x8,%eax
810035da:	83 e0 07             	and    $0x7,%eax
810035dd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810035e0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810035e4:	74 13                	je     810035f9 <malloc_extend_top+0x130>
810035e6:	b8 08 00 00 00       	mov    $0x8,%eax
810035eb:	2b 45 cc             	sub    -0x34(%ebp),%eax
810035ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035f4:	01 45 f4             	add    %eax,-0xc(%ebp)
810035f7:	eb 07                	jmp    81003600 <malloc_extend_top+0x137>
810035f9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003600:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003603:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003606:	01 d0                	add    %edx,%eax
81003608:	89 c2                	mov    %eax,%edx
8100360a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100360d:	83 e8 01             	sub    $0x1,%eax
81003610:	21 c2                	and    %eax,%edx
81003612:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003615:	29 d0                	sub    %edx,%eax
81003617:	01 45 f0             	add    %eax,-0x10(%ebp)
8100361a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100361d:	83 e8 01             	sub    $0x1,%eax
81003620:	21 45 f0             	and    %eax,-0x10(%ebp)
81003623:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003626:	83 ec 08             	sub    $0x8,%esp
81003629:	50                   	push   %eax
8100362a:	ff 75 08             	push   0x8(%ebp)
8100362d:	e8 c0 1b 00 00       	call   810051f2 <_sbrk_r>
81003632:	83 c4 10             	add    $0x10,%esp
81003635:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003638:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100363c:	75 28                	jne    81003666 <malloc_extend_top+0x19d>
8100363e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003645:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100364c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100364f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003652:	01 d0                	add    %edx,%eax
81003654:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003657:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100365b:	74 09                	je     81003666 <malloc_extend_top+0x19d>
8100365d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003660:	83 e8 08             	sub    $0x8,%eax
81003663:	01 45 ec             	add    %eax,-0x14(%ebp)
81003666:	a1 80 99 00 81       	mov    0x81009980,%eax
8100366b:	89 c2                	mov    %eax,%edx
8100366d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003670:	01 d0                	add    %edx,%eax
81003672:	a3 80 99 00 81       	mov    %eax,0x81009980
81003677:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
8100367c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100367f:	89 42 08             	mov    %eax,0x8(%edx)
81003682:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003685:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003688:	89 c2                	mov    %eax,%edx
8100368a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100368d:	01 d0                	add    %edx,%eax
8100368f:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003692:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003697:	8b 40 08             	mov    0x8(%eax),%eax
8100369a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100369d:	83 ca 01             	or     $0x1,%edx
810036a0:	89 50 04             	mov    %edx,0x4(%eax)
810036a3:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
810036a8:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810036ab:	74 76                	je     81003723 <malloc_extend_top+0x25a>
810036ad:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810036b1:	77 14                	ja     810036c7 <malloc_extend_top+0x1fe>
810036b3:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
810036b8:	8b 40 08             	mov    0x8(%eax),%eax
810036bb:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810036c2:	e9 93 00 00 00       	jmp    8100375a <malloc_extend_top+0x291>
810036c7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810036ca:	83 e8 0c             	sub    $0xc,%eax
810036cd:	83 e0 f8             	and    $0xfffffff8,%eax
810036d0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810036d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036d6:	8b 40 04             	mov    0x4(%eax),%eax
810036d9:	83 e0 01             	and    $0x1,%eax
810036dc:	0b 45 dc             	or     -0x24(%ebp),%eax
810036df:	89 c2                	mov    %eax,%edx
810036e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036e4:	89 50 04             	mov    %edx,0x4(%eax)
810036e7:	8b 55 e0             	mov    -0x20(%ebp),%edx
810036ea:	8b 45 dc             	mov    -0x24(%ebp),%eax
810036ed:	01 d0                	add    %edx,%eax
810036ef:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810036f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810036f9:	8d 50 04             	lea    0x4(%eax),%edx
810036fc:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036ff:	01 d0                	add    %edx,%eax
81003701:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003708:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100370c:	76 15                	jbe    81003723 <malloc_extend_top+0x25a>
8100370e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003711:	83 c0 08             	add    $0x8,%eax
81003714:	83 ec 08             	sub    $0x8,%esp
81003717:	50                   	push   %eax
81003718:	ff 75 08             	push   0x8(%ebp)
8100371b:	e8 79 e1 ff ff       	call   81001899 <_free_r>
81003720:	83 c4 10             	add    $0x10,%esp
81003723:	a1 80 99 00 81       	mov    0x81009980,%eax
81003728:	89 c2                	mov    %eax,%edx
8100372a:	a1 64 99 00 81       	mov    0x81009964,%eax
8100372f:	39 c2                	cmp    %eax,%edx
81003731:	76 0a                	jbe    8100373d <malloc_extend_top+0x274>
81003733:	a1 80 99 00 81       	mov    0x81009980,%eax
81003738:	a3 64 99 00 81       	mov    %eax,0x81009964
8100373d:	a1 80 99 00 81       	mov    0x81009980,%eax
81003742:	89 c2                	mov    %eax,%edx
81003744:	a1 68 99 00 81       	mov    0x81009968,%eax
81003749:	39 c2                	cmp    %eax,%edx
8100374b:	76 0d                	jbe    8100375a <malloc_extend_top+0x291>
8100374d:	a1 80 99 00 81       	mov    0x81009980,%eax
81003752:	a3 68 99 00 81       	mov    %eax,0x81009968
81003757:	eb 01                	jmp    8100375a <malloc_extend_top+0x291>
81003759:	90                   	nop
8100375a:	c9                   	leave  
8100375b:	c3                   	ret    

8100375c <_malloc_r>:
8100375c:	55                   	push   %ebp
8100375d:	89 e5                	mov    %esp,%ebp
8100375f:	53                   	push   %ebx
81003760:	83 ec 44             	sub    $0x44,%esp
81003763:	8b 45 0c             	mov    0xc(%ebp),%eax
81003766:	83 c0 0b             	add    $0xb,%eax
81003769:	83 f8 16             	cmp    $0x16,%eax
8100376c:	76 0b                	jbe    81003779 <_malloc_r+0x1d>
8100376e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003771:	83 c0 0b             	add    $0xb,%eax
81003774:	83 e0 f8             	and    $0xfffffff8,%eax
81003777:	eb 05                	jmp    8100377e <_malloc_r+0x22>
81003779:	b8 10 00 00 00       	mov    $0x10,%eax
8100377e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003781:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003784:	85 c0                	test   %eax,%eax
81003786:	78 08                	js     81003790 <_malloc_r+0x34>
81003788:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100378b:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100378e:	73 13                	jae    810037a3 <_malloc_r+0x47>
81003790:	8b 45 08             	mov    0x8(%ebp),%eax
81003793:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003799:	b8 00 00 00 00       	mov    $0x0,%eax
8100379e:	e9 d6 07 00 00       	jmp    81003f79 <_malloc_r+0x81d>
810037a3:	83 ec 0c             	sub    $0xc,%esp
810037a6:	ff 75 08             	push   0x8(%ebp)
810037a9:	e8 8a 09 00 00       	call   81004138 <__malloc_lock>
810037ae:	83 c4 10             	add    $0x10,%esp
810037b1:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810037b8:	0f 87 b0 00 00 00    	ja     8100386e <_malloc_r+0x112>
810037be:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037c1:	c1 e8 03             	shr    $0x3,%eax
810037c4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810037c7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810037ca:	83 c0 01             	add    $0x1,%eax
810037cd:	01 c0                	add    %eax,%eax
810037cf:	c1 e0 02             	shl    $0x2,%eax
810037d2:	05 80 8c 00 81       	add    $0x81008c80,%eax
810037d7:	83 e8 08             	sub    $0x8,%eax
810037da:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810037dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810037e0:	8b 40 0c             	mov    0xc(%eax),%eax
810037e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037e9:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810037ec:	75 0d                	jne    810037fb <_malloc_r+0x9f>
810037ee:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810037f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810037f5:	8b 40 0c             	mov    0xc(%eax),%eax
810037f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037fe:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003801:	74 62                	je     81003865 <_malloc_r+0x109>
81003803:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003806:	8b 40 04             	mov    0x4(%eax),%eax
81003809:	83 e0 fc             	and    $0xfffffffc,%eax
8100380c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100380f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003812:	8b 40 0c             	mov    0xc(%eax),%eax
81003815:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003818:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100381b:	8b 40 08             	mov    0x8(%eax),%eax
8100381e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003821:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003824:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003827:	89 50 0c             	mov    %edx,0xc(%eax)
8100382a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100382d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003830:	89 50 08             	mov    %edx,0x8(%eax)
81003833:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003836:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003839:	01 d0                	add    %edx,%eax
8100383b:	8b 50 04             	mov    0x4(%eax),%edx
8100383e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003841:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003844:	01 c8                	add    %ecx,%eax
81003846:	83 ca 01             	or     $0x1,%edx
81003849:	89 50 04             	mov    %edx,0x4(%eax)
8100384c:	83 ec 0c             	sub    $0xc,%esp
8100384f:	ff 75 08             	push   0x8(%ebp)
81003852:	e8 e7 08 00 00       	call   8100413e <__malloc_unlock>
81003857:	83 c4 10             	add    $0x10,%esp
8100385a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100385d:	83 c0 08             	add    $0x8,%eax
81003860:	e9 14 07 00 00       	jmp    81003f79 <_malloc_r+0x81d>
81003865:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003869:	e9 46 01 00 00       	jmp    810039b4 <_malloc_r+0x258>
8100386e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003871:	c1 e8 09             	shr    $0x9,%eax
81003874:	85 c0                	test   %eax,%eax
81003876:	75 08                	jne    81003880 <_malloc_r+0x124>
81003878:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100387b:	c1 e8 03             	shr    $0x3,%eax
8100387e:	eb 77                	jmp    810038f7 <_malloc_r+0x19b>
81003880:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003883:	c1 e8 09             	shr    $0x9,%eax
81003886:	83 f8 04             	cmp    $0x4,%eax
81003889:	77 0b                	ja     81003896 <_malloc_r+0x13a>
8100388b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100388e:	c1 e8 06             	shr    $0x6,%eax
81003891:	83 c0 38             	add    $0x38,%eax
81003894:	eb 61                	jmp    810038f7 <_malloc_r+0x19b>
81003896:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003899:	c1 e8 09             	shr    $0x9,%eax
8100389c:	83 f8 14             	cmp    $0x14,%eax
8100389f:	77 0b                	ja     810038ac <_malloc_r+0x150>
810038a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038a4:	c1 e8 09             	shr    $0x9,%eax
810038a7:	83 c0 5b             	add    $0x5b,%eax
810038aa:	eb 4b                	jmp    810038f7 <_malloc_r+0x19b>
810038ac:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038af:	c1 e8 09             	shr    $0x9,%eax
810038b2:	83 f8 54             	cmp    $0x54,%eax
810038b5:	77 0b                	ja     810038c2 <_malloc_r+0x166>
810038b7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038ba:	c1 e8 0c             	shr    $0xc,%eax
810038bd:	83 c0 6e             	add    $0x6e,%eax
810038c0:	eb 35                	jmp    810038f7 <_malloc_r+0x19b>
810038c2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038c5:	c1 e8 09             	shr    $0x9,%eax
810038c8:	3d 54 01 00 00       	cmp    $0x154,%eax
810038cd:	77 0b                	ja     810038da <_malloc_r+0x17e>
810038cf:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038d2:	c1 e8 0f             	shr    $0xf,%eax
810038d5:	83 c0 77             	add    $0x77,%eax
810038d8:	eb 1d                	jmp    810038f7 <_malloc_r+0x19b>
810038da:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038dd:	c1 e8 09             	shr    $0x9,%eax
810038e0:	3d 54 05 00 00       	cmp    $0x554,%eax
810038e5:	77 0b                	ja     810038f2 <_malloc_r+0x196>
810038e7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038ea:	c1 e8 12             	shr    $0x12,%eax
810038ed:	83 c0 7c             	add    $0x7c,%eax
810038f0:	eb 05                	jmp    810038f7 <_malloc_r+0x19b>
810038f2:	b8 7e 00 00 00       	mov    $0x7e,%eax
810038f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810038fa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810038fd:	83 c0 01             	add    $0x1,%eax
81003900:	01 c0                	add    %eax,%eax
81003902:	c1 e0 02             	shl    $0x2,%eax
81003905:	05 80 8c 00 81       	add    $0x81008c80,%eax
8100390a:	83 e8 08             	sub    $0x8,%eax
8100390d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003910:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003913:	8b 40 0c             	mov    0xc(%eax),%eax
81003916:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003919:	e9 86 00 00 00       	jmp    810039a4 <_malloc_r+0x248>
8100391e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003921:	8b 40 04             	mov    0x4(%eax),%eax
81003924:	83 e0 fc             	and    $0xfffffffc,%eax
81003927:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100392a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100392d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003930:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003933:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003937:	7e 06                	jle    8100393f <_malloc_r+0x1e3>
81003939:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100393d:	eb 71                	jmp    810039b0 <_malloc_r+0x254>
8100393f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003943:	78 56                	js     8100399b <_malloc_r+0x23f>
81003945:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003948:	8b 40 0c             	mov    0xc(%eax),%eax
8100394b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100394e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003951:	8b 40 08             	mov    0x8(%eax),%eax
81003954:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003957:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100395a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100395d:	89 50 0c             	mov    %edx,0xc(%eax)
81003960:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003963:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003966:	89 50 08             	mov    %edx,0x8(%eax)
81003969:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100396c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100396f:	01 d0                	add    %edx,%eax
81003971:	8b 50 04             	mov    0x4(%eax),%edx
81003974:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003977:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100397a:	01 c8                	add    %ecx,%eax
8100397c:	83 ca 01             	or     $0x1,%edx
8100397f:	89 50 04             	mov    %edx,0x4(%eax)
81003982:	83 ec 0c             	sub    $0xc,%esp
81003985:	ff 75 08             	push   0x8(%ebp)
81003988:	e8 b1 07 00 00       	call   8100413e <__malloc_unlock>
8100398d:	83 c4 10             	add    $0x10,%esp
81003990:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003993:	83 c0 08             	add    $0x8,%eax
81003996:	e9 de 05 00 00       	jmp    81003f79 <_malloc_r+0x81d>
8100399b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100399e:	8b 40 0c             	mov    0xc(%eax),%eax
810039a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039a7:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810039aa:	0f 85 6e ff ff ff    	jne    8100391e <_malloc_r+0x1c2>
810039b0:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810039b4:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
810039b9:	8b 40 08             	mov    0x8(%eax),%eax
810039bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039bf:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
810039c4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810039c7:	0f 84 9c 02 00 00    	je     81003c69 <_malloc_r+0x50d>
810039cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039d0:	8b 40 04             	mov    0x4(%eax),%eax
810039d3:	83 e0 fc             	and    $0xfffffffc,%eax
810039d6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810039d9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039dc:	2b 45 d0             	sub    -0x30(%ebp),%eax
810039df:	89 45 e8             	mov    %eax,-0x18(%ebp)
810039e2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810039e6:	7e 7a                	jle    81003a62 <_malloc_r+0x306>
810039e8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810039ee:	01 d0                	add    %edx,%eax
810039f0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810039f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810039f6:	83 c8 01             	or     $0x1,%eax
810039f9:	89 c2                	mov    %eax,%edx
810039fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039fe:	89 50 04             	mov    %edx,0x4(%eax)
81003a01:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
81003a06:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003a09:	89 50 0c             	mov    %edx,0xc(%eax)
81003a0c:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003a11:	8b 40 0c             	mov    0xc(%eax),%eax
81003a14:	89 42 08             	mov    %eax,0x8(%edx)
81003a17:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003a1c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a1f:	89 50 0c             	mov    %edx,0xc(%eax)
81003a22:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a25:	8b 50 0c             	mov    0xc(%eax),%edx
81003a28:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a2b:	89 50 08             	mov    %edx,0x8(%eax)
81003a2e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a31:	83 c8 01             	or     $0x1,%eax
81003a34:	89 c2                	mov    %eax,%edx
81003a36:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a39:	89 50 04             	mov    %edx,0x4(%eax)
81003a3c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003a3f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003a42:	01 c2                	add    %eax,%edx
81003a44:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a47:	89 02                	mov    %eax,(%edx)
81003a49:	83 ec 0c             	sub    $0xc,%esp
81003a4c:	ff 75 08             	push   0x8(%ebp)
81003a4f:	e8 ea 06 00 00       	call   8100413e <__malloc_unlock>
81003a54:	83 c4 10             	add    $0x10,%esp
81003a57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a5a:	83 c0 08             	add    $0x8,%eax
81003a5d:	e9 17 05 00 00       	jmp    81003f79 <_malloc_r+0x81d>
81003a62:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
81003a67:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003a6c:	89 50 0c             	mov    %edx,0xc(%eax)
81003a6f:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003a74:	8b 40 0c             	mov    0xc(%eax),%eax
81003a77:	89 42 08             	mov    %eax,0x8(%edx)
81003a7a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003a7e:	78 32                	js     81003ab2 <_malloc_r+0x356>
81003a80:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a83:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a86:	01 d0                	add    %edx,%eax
81003a88:	8b 50 04             	mov    0x4(%eax),%edx
81003a8b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003a8e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a91:	01 c8                	add    %ecx,%eax
81003a93:	83 ca 01             	or     $0x1,%edx
81003a96:	89 50 04             	mov    %edx,0x4(%eax)
81003a99:	83 ec 0c             	sub    $0xc,%esp
81003a9c:	ff 75 08             	push   0x8(%ebp)
81003a9f:	e8 9a 06 00 00       	call   8100413e <__malloc_unlock>
81003aa4:	83 c4 10             	add    $0x10,%esp
81003aa7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003aaa:	83 c0 08             	add    $0x8,%eax
81003aad:	e9 c7 04 00 00       	jmp    81003f79 <_malloc_r+0x81d>
81003ab2:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003ab9:	77 7f                	ja     81003b3a <_malloc_r+0x3de>
81003abb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003abe:	c1 e8 03             	shr    $0x3,%eax
81003ac1:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003ac4:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003ac9:	8b 58 04             	mov    0x4(%eax),%ebx
81003acc:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003acf:	8d 50 03             	lea    0x3(%eax),%edx
81003ad2:	85 c0                	test   %eax,%eax
81003ad4:	0f 48 c2             	cmovs  %edx,%eax
81003ad7:	c1 f8 02             	sar    $0x2,%eax
81003ada:	ba 01 00 00 00       	mov    $0x1,%edx
81003adf:	89 c1                	mov    %eax,%ecx
81003ae1:	d3 e2                	shl    %cl,%edx
81003ae3:	89 d0                	mov    %edx,%eax
81003ae5:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81003aea:	09 d8                	or     %ebx,%eax
81003aec:	89 42 04             	mov    %eax,0x4(%edx)
81003aef:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003af2:	83 c0 01             	add    $0x1,%eax
81003af5:	01 c0                	add    %eax,%eax
81003af7:	c1 e0 02             	shl    $0x2,%eax
81003afa:	05 80 8c 00 81       	add    $0x81008c80,%eax
81003aff:	83 e8 08             	sub    $0x8,%eax
81003b02:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b05:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b08:	8b 40 08             	mov    0x8(%eax),%eax
81003b0b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b11:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b14:	89 50 0c             	mov    %edx,0xc(%eax)
81003b17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b1a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003b1d:	89 50 08             	mov    %edx,0x8(%eax)
81003b20:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b23:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003b26:	89 50 08             	mov    %edx,0x8(%eax)
81003b29:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b2c:	8b 50 08             	mov    0x8(%eax),%edx
81003b2f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b32:	89 50 0c             	mov    %edx,0xc(%eax)
81003b35:	e9 2f 01 00 00       	jmp    81003c69 <_malloc_r+0x50d>
81003b3a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b3d:	c1 e8 09             	shr    $0x9,%eax
81003b40:	85 c0                	test   %eax,%eax
81003b42:	75 08                	jne    81003b4c <_malloc_r+0x3f0>
81003b44:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b47:	c1 e8 03             	shr    $0x3,%eax
81003b4a:	eb 77                	jmp    81003bc3 <_malloc_r+0x467>
81003b4c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b4f:	c1 e8 09             	shr    $0x9,%eax
81003b52:	83 f8 04             	cmp    $0x4,%eax
81003b55:	77 0b                	ja     81003b62 <_malloc_r+0x406>
81003b57:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b5a:	c1 e8 06             	shr    $0x6,%eax
81003b5d:	83 c0 38             	add    $0x38,%eax
81003b60:	eb 61                	jmp    81003bc3 <_malloc_r+0x467>
81003b62:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b65:	c1 e8 09             	shr    $0x9,%eax
81003b68:	83 f8 14             	cmp    $0x14,%eax
81003b6b:	77 0b                	ja     81003b78 <_malloc_r+0x41c>
81003b6d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b70:	c1 e8 09             	shr    $0x9,%eax
81003b73:	83 c0 5b             	add    $0x5b,%eax
81003b76:	eb 4b                	jmp    81003bc3 <_malloc_r+0x467>
81003b78:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b7b:	c1 e8 09             	shr    $0x9,%eax
81003b7e:	83 f8 54             	cmp    $0x54,%eax
81003b81:	77 0b                	ja     81003b8e <_malloc_r+0x432>
81003b83:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b86:	c1 e8 0c             	shr    $0xc,%eax
81003b89:	83 c0 6e             	add    $0x6e,%eax
81003b8c:	eb 35                	jmp    81003bc3 <_malloc_r+0x467>
81003b8e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b91:	c1 e8 09             	shr    $0x9,%eax
81003b94:	3d 54 01 00 00       	cmp    $0x154,%eax
81003b99:	77 0b                	ja     81003ba6 <_malloc_r+0x44a>
81003b9b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003b9e:	c1 e8 0f             	shr    $0xf,%eax
81003ba1:	83 c0 77             	add    $0x77,%eax
81003ba4:	eb 1d                	jmp    81003bc3 <_malloc_r+0x467>
81003ba6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ba9:	c1 e8 09             	shr    $0x9,%eax
81003bac:	3d 54 05 00 00       	cmp    $0x554,%eax
81003bb1:	77 0b                	ja     81003bbe <_malloc_r+0x462>
81003bb3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003bb6:	c1 e8 12             	shr    $0x12,%eax
81003bb9:	83 c0 7c             	add    $0x7c,%eax
81003bbc:	eb 05                	jmp    81003bc3 <_malloc_r+0x467>
81003bbe:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003bc3:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003bc6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003bc9:	83 c0 01             	add    $0x1,%eax
81003bcc:	01 c0                	add    %eax,%eax
81003bce:	c1 e0 02             	shl    $0x2,%eax
81003bd1:	05 80 8c 00 81       	add    $0x81008c80,%eax
81003bd6:	83 e8 08             	sub    $0x8,%eax
81003bd9:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003bdc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bdf:	8b 40 08             	mov    0x8(%eax),%eax
81003be2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003be5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003be8:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003beb:	75 36                	jne    81003c23 <_malloc_r+0x4c7>
81003bed:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003bf2:	8b 58 04             	mov    0x4(%eax),%ebx
81003bf5:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003bf8:	8d 50 03             	lea    0x3(%eax),%edx
81003bfb:	85 c0                	test   %eax,%eax
81003bfd:	0f 48 c2             	cmovs  %edx,%eax
81003c00:	c1 f8 02             	sar    $0x2,%eax
81003c03:	ba 01 00 00 00       	mov    $0x1,%edx
81003c08:	89 c1                	mov    %eax,%ecx
81003c0a:	d3 e2                	shl    %cl,%edx
81003c0c:	89 d0                	mov    %edx,%eax
81003c0e:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81003c13:	09 d8                	or     %ebx,%eax
81003c15:	89 42 04             	mov    %eax,0x4(%edx)
81003c18:	eb 28                	jmp    81003c42 <_malloc_r+0x4e6>
81003c1a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c1d:	8b 40 08             	mov    0x8(%eax),%eax
81003c20:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c23:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c26:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003c29:	74 0e                	je     81003c39 <_malloc_r+0x4dd>
81003c2b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c2e:	8b 40 04             	mov    0x4(%eax),%eax
81003c31:	83 e0 fc             	and    $0xfffffffc,%eax
81003c34:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003c37:	72 e1                	jb     81003c1a <_malloc_r+0x4be>
81003c39:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c3c:	8b 40 0c             	mov    0xc(%eax),%eax
81003c3f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c42:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c45:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c48:	89 50 0c             	mov    %edx,0xc(%eax)
81003c4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c4e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c51:	89 50 08             	mov    %edx,0x8(%eax)
81003c54:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c57:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c5a:	89 50 08             	mov    %edx,0x8(%eax)
81003c5d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c60:	8b 50 08             	mov    0x8(%eax),%edx
81003c63:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c66:	89 50 0c             	mov    %edx,0xc(%eax)
81003c69:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c6c:	8d 50 03             	lea    0x3(%eax),%edx
81003c6f:	85 c0                	test   %eax,%eax
81003c71:	0f 48 c2             	cmovs  %edx,%eax
81003c74:	c1 f8 02             	sar    $0x2,%eax
81003c77:	ba 01 00 00 00       	mov    $0x1,%edx
81003c7c:	89 c1                	mov    %eax,%ecx
81003c7e:	d3 e2                	shl    %cl,%edx
81003c80:	89 d0                	mov    %edx,%eax
81003c82:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003c85:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003c8a:	8b 40 04             	mov    0x4(%eax),%eax
81003c8d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003c90:	0f 87 13 02 00 00    	ja     81003ea9 <_malloc_r+0x74d>
81003c96:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003c9b:	8b 40 04             	mov    0x4(%eax),%eax
81003c9e:	23 45 e4             	and    -0x1c(%ebp),%eax
81003ca1:	85 c0                	test   %eax,%eax
81003ca3:	75 27                	jne    81003ccc <_malloc_r+0x570>
81003ca5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ca8:	83 e0 fc             	and    $0xfffffffc,%eax
81003cab:	83 c0 04             	add    $0x4,%eax
81003cae:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003cb1:	d1 65 e4             	shll   -0x1c(%ebp)
81003cb4:	eb 07                	jmp    81003cbd <_malloc_r+0x561>
81003cb6:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003cba:	d1 65 e4             	shll   -0x1c(%ebp)
81003cbd:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003cc2:	8b 40 04             	mov    0x4(%eax),%eax
81003cc5:	23 45 e4             	and    -0x1c(%ebp),%eax
81003cc8:	85 c0                	test   %eax,%eax
81003cca:	74 ea                	je     81003cb6 <_malloc_r+0x55a>
81003ccc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ccf:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003cd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cd5:	83 c0 01             	add    $0x1,%eax
81003cd8:	01 c0                	add    %eax,%eax
81003cda:	c1 e0 02             	shl    $0x2,%eax
81003cdd:	05 80 8c 00 81       	add    $0x81008c80,%eax
81003ce2:	83 e8 08             	sub    $0x8,%eax
81003ce5:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ce8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ceb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003cee:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cf1:	8b 40 0c             	mov    0xc(%eax),%eax
81003cf4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cf7:	e9 22 01 00 00       	jmp    81003e1e <_malloc_r+0x6c2>
81003cfc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cff:	8b 40 04             	mov    0x4(%eax),%eax
81003d02:	83 e0 fc             	and    $0xfffffffc,%eax
81003d05:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d08:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d0b:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d0e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d11:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d15:	0f 8e 9e 00 00 00    	jle    81003db9 <_malloc_r+0x65d>
81003d1b:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d1e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d21:	01 d0                	add    %edx,%eax
81003d23:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003d26:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d29:	83 c8 01             	or     $0x1,%eax
81003d2c:	89 c2                	mov    %eax,%edx
81003d2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d31:	89 50 04             	mov    %edx,0x4(%eax)
81003d34:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d37:	8b 40 0c             	mov    0xc(%eax),%eax
81003d3a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003d3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d40:	8b 40 08             	mov    0x8(%eax),%eax
81003d43:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d46:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003d49:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003d4c:	89 50 0c             	mov    %edx,0xc(%eax)
81003d4f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d52:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003d55:	89 50 08             	mov    %edx,0x8(%eax)
81003d58:	b8 88 8c 00 81       	mov    $0x81008c88,%eax
81003d5d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003d60:	89 50 0c             	mov    %edx,0xc(%eax)
81003d63:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003d68:	8b 40 0c             	mov    0xc(%eax),%eax
81003d6b:	89 42 08             	mov    %eax,0x8(%edx)
81003d6e:	ba 88 8c 00 81       	mov    $0x81008c88,%edx
81003d73:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d76:	89 50 0c             	mov    %edx,0xc(%eax)
81003d79:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d7c:	8b 50 0c             	mov    0xc(%eax),%edx
81003d7f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d82:	89 50 08             	mov    %edx,0x8(%eax)
81003d85:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d88:	83 c8 01             	or     $0x1,%eax
81003d8b:	89 c2                	mov    %eax,%edx
81003d8d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d90:	89 50 04             	mov    %edx,0x4(%eax)
81003d93:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003d96:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d99:	01 c2                	add    %eax,%edx
81003d9b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d9e:	89 02                	mov    %eax,(%edx)
81003da0:	83 ec 0c             	sub    $0xc,%esp
81003da3:	ff 75 08             	push   0x8(%ebp)
81003da6:	e8 93 03 00 00       	call   8100413e <__malloc_unlock>
81003dab:	83 c4 10             	add    $0x10,%esp
81003dae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003db1:	83 c0 08             	add    $0x8,%eax
81003db4:	e9 c0 01 00 00       	jmp    81003f79 <_malloc_r+0x81d>
81003db9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003dbd:	78 56                	js     81003e15 <_malloc_r+0x6b9>
81003dbf:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003dc2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dc5:	01 d0                	add    %edx,%eax
81003dc7:	8b 50 04             	mov    0x4(%eax),%edx
81003dca:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003dcd:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dd0:	01 c8                	add    %ecx,%eax
81003dd2:	83 ca 01             	or     $0x1,%edx
81003dd5:	89 50 04             	mov    %edx,0x4(%eax)
81003dd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ddb:	8b 40 0c             	mov    0xc(%eax),%eax
81003dde:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003de1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003de4:	8b 40 08             	mov    0x8(%eax),%eax
81003de7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003dea:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ded:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003df0:	89 50 0c             	mov    %edx,0xc(%eax)
81003df3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003df6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003df9:	89 50 08             	mov    %edx,0x8(%eax)
81003dfc:	83 ec 0c             	sub    $0xc,%esp
81003dff:	ff 75 08             	push   0x8(%ebp)
81003e02:	e8 37 03 00 00       	call   8100413e <__malloc_unlock>
81003e07:	83 c4 10             	add    $0x10,%esp
81003e0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e0d:	83 c0 08             	add    $0x8,%eax
81003e10:	e9 64 01 00 00       	jmp    81003f79 <_malloc_r+0x81d>
81003e15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e18:	8b 40 0c             	mov    0xc(%eax),%eax
81003e1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e21:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003e24:	0f 85 d2 fe ff ff    	jne    81003cfc <_malloc_r+0x5a0>
81003e2a:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003e2e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003e32:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e35:	83 e0 03             	and    $0x3,%eax
81003e38:	85 c0                	test   %eax,%eax
81003e3a:	0f 85 ae fe ff ff    	jne    81003cee <_malloc_r+0x592>
81003e40:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003e43:	83 e0 03             	and    $0x3,%eax
81003e46:	85 c0                	test   %eax,%eax
81003e48:	75 19                	jne    81003e63 <_malloc_r+0x707>
81003e4a:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003e4f:	8b 48 04             	mov    0x4(%eax),%ecx
81003e52:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003e55:	f7 d0                	not    %eax
81003e57:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81003e5c:	21 c8                	and    %ecx,%eax
81003e5e:	89 42 04             	mov    %eax,0x4(%edx)
81003e61:	eb 13                	jmp    81003e76 <_malloc_r+0x71a>
81003e63:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003e67:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003e6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003e6e:	8b 40 08             	mov    0x8(%eax),%eax
81003e71:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003e74:	74 ca                	je     81003e40 <_malloc_r+0x6e4>
81003e76:	d1 65 e4             	shll   -0x1c(%ebp)
81003e79:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003e7e:	8b 40 04             	mov    0x4(%eax),%eax
81003e81:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003e84:	77 23                	ja     81003ea9 <_malloc_r+0x74d>
81003e86:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003e8a:	74 1d                	je     81003ea9 <_malloc_r+0x74d>
81003e8c:	eb 07                	jmp    81003e95 <_malloc_r+0x739>
81003e8e:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003e92:	d1 65 e4             	shll   -0x1c(%ebp)
81003e95:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003e9a:	8b 40 04             	mov    0x4(%eax),%eax
81003e9d:	23 45 e4             	and    -0x1c(%ebp),%eax
81003ea0:	85 c0                	test   %eax,%eax
81003ea2:	74 ea                	je     81003e8e <_malloc_r+0x732>
81003ea4:	e9 23 fe ff ff       	jmp    81003ccc <_malloc_r+0x570>
81003ea9:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003eae:	8b 40 08             	mov    0x8(%eax),%eax
81003eb1:	8b 40 04             	mov    0x4(%eax),%eax
81003eb4:	83 e0 fc             	and    $0xfffffffc,%eax
81003eb7:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003eba:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ebd:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003ec2:	8b 40 08             	mov    0x8(%eax),%eax
81003ec5:	8b 40 04             	mov    0x4(%eax),%eax
81003ec8:	83 e0 fc             	and    $0xfffffffc,%eax
81003ecb:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003ece:	77 06                	ja     81003ed6 <_malloc_r+0x77a>
81003ed0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003ed4:	7f 53                	jg     81003f29 <_malloc_r+0x7cd>
81003ed6:	83 ec 08             	sub    $0x8,%esp
81003ed9:	ff 75 d0             	push   -0x30(%ebp)
81003edc:	ff 75 08             	push   0x8(%ebp)
81003edf:	e8 e5 f5 ff ff       	call   810034c9 <malloc_extend_top>
81003ee4:	83 c4 10             	add    $0x10,%esp
81003ee7:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003eec:	8b 40 08             	mov    0x8(%eax),%eax
81003eef:	8b 40 04             	mov    0x4(%eax),%eax
81003ef2:	83 e0 fc             	and    $0xfffffffc,%eax
81003ef5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003ef8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003efb:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003f00:	8b 40 08             	mov    0x8(%eax),%eax
81003f03:	8b 40 04             	mov    0x4(%eax),%eax
81003f06:	83 e0 fc             	and    $0xfffffffc,%eax
81003f09:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003f0c:	77 06                	ja     81003f14 <_malloc_r+0x7b8>
81003f0e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003f12:	7f 15                	jg     81003f29 <_malloc_r+0x7cd>
81003f14:	83 ec 0c             	sub    $0xc,%esp
81003f17:	ff 75 08             	push   0x8(%ebp)
81003f1a:	e8 1f 02 00 00       	call   8100413e <__malloc_unlock>
81003f1f:	83 c4 10             	add    $0x10,%esp
81003f22:	b8 00 00 00 00       	mov    $0x0,%eax
81003f27:	eb 50                	jmp    81003f79 <_malloc_r+0x81d>
81003f29:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003f2e:	8b 40 08             	mov    0x8(%eax),%eax
81003f31:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f34:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f37:	83 c8 01             	or     $0x1,%eax
81003f3a:	89 c2                	mov    %eax,%edx
81003f3c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f3f:	89 50 04             	mov    %edx,0x4(%eax)
81003f42:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81003f47:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003f4a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003f4d:	01 c8                	add    %ecx,%eax
81003f4f:	89 42 08             	mov    %eax,0x8(%edx)
81003f52:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f55:	83 c8 01             	or     $0x1,%eax
81003f58:	89 c2                	mov    %eax,%edx
81003f5a:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81003f5f:	8b 40 08             	mov    0x8(%eax),%eax
81003f62:	89 50 04             	mov    %edx,0x4(%eax)
81003f65:	83 ec 0c             	sub    $0xc,%esp
81003f68:	ff 75 08             	push   0x8(%ebp)
81003f6b:	e8 ce 01 00 00       	call   8100413e <__malloc_unlock>
81003f70:	83 c4 10             	add    $0x10,%esp
81003f73:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f76:	83 c0 08             	add    $0x8,%eax
81003f79:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003f7c:	c9                   	leave  
81003f7d:	c3                   	ret    
81003f7e:	66 90                	xchg   %ax,%ax

81003f80 <memchr>:
81003f80:	55                   	push   %ebp
81003f81:	89 e5                	mov    %esp,%ebp
81003f83:	57                   	push   %edi
81003f84:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003f88:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f8b:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f8e:	31 d2                	xor    %edx,%edx
81003f90:	85 c9                	test   %ecx,%ecx
81003f92:	74 79                	je     8100400d <L20>
81003f94:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003f9a:	74 28                	je     81003fc4 <L5>
81003f9c:	3a 07                	cmp    (%edi),%al
81003f9e:	74 6a                	je     8100400a <L15>
81003fa0:	47                   	inc    %edi
81003fa1:	49                   	dec    %ecx
81003fa2:	74 69                	je     8100400d <L20>
81003fa4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003faa:	74 18                	je     81003fc4 <L5>
81003fac:	3a 07                	cmp    (%edi),%al
81003fae:	74 5a                	je     8100400a <L15>
81003fb0:	47                   	inc    %edi
81003fb1:	49                   	dec    %ecx
81003fb2:	74 59                	je     8100400d <L20>
81003fb4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003fba:	74 08                	je     81003fc4 <L5>
81003fbc:	3a 07                	cmp    (%edi),%al
81003fbe:	74 4a                	je     8100400a <L15>
81003fc0:	47                   	inc    %edi
81003fc1:	49                   	dec    %ecx
81003fc2:	74 49                	je     8100400d <L20>

81003fc4 <L5>:
81003fc4:	88 c4                	mov    %al,%ah
81003fc6:	89 c2                	mov    %eax,%edx
81003fc8:	c1 e2 10             	shl    $0x10,%edx
81003fcb:	09 d0                	or     %edx,%eax
81003fcd:	53                   	push   %ebx
81003fce:	66 90                	xchg   %ax,%ax

81003fd0 <L8>:
81003fd0:	83 e9 04             	sub    $0x4,%ecx
81003fd3:	72 1c                	jb     81003ff1 <L9>
81003fd5:	8b 17                	mov    (%edi),%edx
81003fd7:	83 c7 04             	add    $0x4,%edi
81003fda:	31 c2                	xor    %eax,%edx
81003fdc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003fe2:	f7 d2                	not    %edx
81003fe4:	21 d3                	and    %edx,%ebx
81003fe6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81003fec:	74 e2                	je     81003fd0 <L8>
81003fee:	83 ef 04             	sub    $0x4,%edi

81003ff1 <L9>:
81003ff1:	5b                   	pop    %ebx
81003ff2:	31 d2                	xor    %edx,%edx
81003ff4:	83 c1 04             	add    $0x4,%ecx
81003ff7:	74 14                	je     8100400d <L20>
81003ff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004000 <L10>:
81004000:	3a 07                	cmp    (%edi),%al
81004002:	74 06                	je     8100400a <L15>
81004004:	47                   	inc    %edi
81004005:	49                   	dec    %ecx
81004006:	75 f8                	jne    81004000 <L10>
81004008:	31 ff                	xor    %edi,%edi

8100400a <L15>:
8100400a:	4a                   	dec    %edx
8100400b:	21 fa                	and    %edi,%edx

8100400d <L20>:
8100400d:	89 d0                	mov    %edx,%eax
8100400f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004012:	5f                   	pop    %edi
81004013:	c9                   	leave  
81004014:	c3                   	ret    

81004015 <memcmp>:
81004015:	55                   	push   %ebp
81004016:	89 e5                	mov    %esp,%ebp
81004018:	83 ec 10             	sub    $0x10,%esp
8100401b:	53                   	push   %ebx
8100401c:	57                   	push   %edi
8100401d:	56                   	push   %esi
8100401e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004021:	8b 75 0c             	mov    0xc(%ebp),%esi
81004024:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004027:	fc                   	cld    
81004028:	31 c0                	xor    %eax,%eax
8100402a:	85 c9                	test   %ecx,%ecx
8100402c:	74 31                	je     8100405f <L4>
8100402e:	89 f8                	mov    %edi,%eax
81004030:	09 f0                	or     %esi,%eax
81004032:	a8 03                	test   $0x3,%al
81004034:	75 1b                	jne    81004051 <BYTECMP>
81004036:	89 cb                	mov    %ecx,%ebx
81004038:	c1 e9 02             	shr    $0x2,%ecx
8100403b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
8100403d:	74 0d                	je     8100404c <L5>
8100403f:	83 ee 04             	sub    $0x4,%esi
81004042:	83 ef 04             	sub    $0x4,%edi
81004045:	b9 04 00 00 00       	mov    $0x4,%ecx
8100404a:	eb 05                	jmp    81004051 <BYTECMP>

8100404c <L5>:
8100404c:	83 e3 03             	and    $0x3,%ebx
8100404f:	89 d9                	mov    %ebx,%ecx

81004051 <BYTECMP>:
81004051:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004053 <L3>:
81004053:	31 d2                	xor    %edx,%edx
81004055:	8a 56 ff             	mov    -0x1(%esi),%dl
81004058:	31 c0                	xor    %eax,%eax
8100405a:	8a 47 ff             	mov    -0x1(%edi),%al
8100405d:	29 d0                	sub    %edx,%eax

8100405f <L4>:
8100405f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004062:	5e                   	pop    %esi
81004063:	5f                   	pop    %edi
81004064:	5b                   	pop    %ebx
81004065:	c9                   	leave  
81004066:	c3                   	ret    
81004067:	90                   	nop

81004068 <memcpy>:
81004068:	55                   	push   %ebp
81004069:	89 e5                	mov    %esp,%ebp
8100406b:	56                   	push   %esi
8100406c:	57                   	push   %edi
8100406d:	53                   	push   %ebx
8100406e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004071:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004074:	8b 75 0c             	mov    0xc(%ebp),%esi
81004077:	fc                   	cld    
81004078:	83 f9 08             	cmp    $0x8,%ecx
8100407b:	76 26                	jbe    810040a3 <memcpy+0x3b>
8100407d:	89 fa                	mov    %edi,%edx
8100407f:	89 cb                	mov    %ecx,%ebx
81004081:	83 e2 03             	and    $0x3,%edx
81004084:	74 10                	je     81004096 <memcpy+0x2e>
81004086:	b9 04 00 00 00       	mov    $0x4,%ecx
8100408b:	29 d1                	sub    %edx,%ecx
8100408d:	83 e1 03             	and    $0x3,%ecx
81004090:	29 cb                	sub    %ecx,%ebx
81004092:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004094:	89 d9                	mov    %ebx,%ecx
81004096:	c1 e9 02             	shr    $0x2,%ecx
81004099:	8d 76 00             	lea    0x0(%esi),%esi
8100409c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100409e:	89 d9                	mov    %ebx,%ecx
810040a0:	83 e1 03             	and    $0x3,%ecx
810040a3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810040a5:	8b 45 08             	mov    0x8(%ebp),%eax
810040a8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810040ab:	5b                   	pop    %ebx
810040ac:	5f                   	pop    %edi
810040ad:	5e                   	pop    %esi
810040ae:	c9                   	leave  
810040af:	c3                   	ret    

810040b0 <memset>:
810040b0:	55                   	push   %ebp
810040b1:	89 e5                	mov    %esp,%ebp
810040b3:	57                   	push   %edi
810040b4:	8b 7d 08             	mov    0x8(%ebp),%edi
810040b7:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810040bb:	8b 4d 10             	mov    0x10(%ebp),%ecx
810040be:	fc                   	cld    
810040bf:	83 f9 10             	cmp    $0x10,%ecx
810040c2:	76 69                	jbe    8100412d <memset+0x7d>
810040c4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810040ca:	74 4c                	je     81004118 <memset+0x68>
810040cc:	88 07                	mov    %al,(%edi)
810040ce:	47                   	inc    %edi
810040cf:	49                   	dec    %ecx
810040d0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810040d6:	74 40                	je     81004118 <memset+0x68>
810040d8:	88 07                	mov    %al,(%edi)
810040da:	47                   	inc    %edi
810040db:	49                   	dec    %ecx
810040dc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810040e2:	74 34                	je     81004118 <memset+0x68>
810040e4:	88 07                	mov    %al,(%edi)
810040e6:	47                   	inc    %edi
810040e7:	49                   	dec    %ecx
810040e8:	f7 c7 07 00 00 00    	test   $0x7,%edi
810040ee:	74 28                	je     81004118 <memset+0x68>
810040f0:	88 07                	mov    %al,(%edi)
810040f2:	47                   	inc    %edi
810040f3:	49                   	dec    %ecx
810040f4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810040fa:	74 1c                	je     81004118 <memset+0x68>
810040fc:	88 07                	mov    %al,(%edi)
810040fe:	47                   	inc    %edi
810040ff:	49                   	dec    %ecx
81004100:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004106:	74 10                	je     81004118 <memset+0x68>
81004108:	88 07                	mov    %al,(%edi)
8100410a:	47                   	inc    %edi
8100410b:	49                   	dec    %ecx
8100410c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004112:	74 04                	je     81004118 <memset+0x68>
81004114:	88 07                	mov    %al,(%edi)
81004116:	47                   	inc    %edi
81004117:	49                   	dec    %ecx
81004118:	88 c4                	mov    %al,%ah
8100411a:	89 c2                	mov    %eax,%edx
8100411c:	c1 e2 10             	shl    $0x10,%edx
8100411f:	09 d0                	or     %edx,%eax
81004121:	89 ca                	mov    %ecx,%edx
81004123:	c1 e9 02             	shr    $0x2,%ecx
81004126:	83 e2 03             	and    $0x3,%edx
81004129:	f3 ab                	rep stos %eax,%es:(%edi)
8100412b:	89 d1                	mov    %edx,%ecx
8100412d:	f3 aa                	rep stos %al,%es:(%edi)
8100412f:	8b 45 08             	mov    0x8(%ebp),%eax
81004132:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004135:	5f                   	pop    %edi
81004136:	c9                   	leave  
81004137:	c3                   	ret    

81004138 <__malloc_lock>:
81004138:	55                   	push   %ebp
81004139:	89 e5                	mov    %esp,%ebp
8100413b:	90                   	nop
8100413c:	5d                   	pop    %ebp
8100413d:	c3                   	ret    

8100413e <__malloc_unlock>:
8100413e:	55                   	push   %ebp
8100413f:	89 e5                	mov    %esp,%ebp
81004141:	90                   	nop
81004142:	5d                   	pop    %ebp
81004143:	c3                   	ret    

81004144 <__sprint_r>:
81004144:	55                   	push   %ebp
81004145:	89 e5                	mov    %esp,%ebp
81004147:	56                   	push   %esi
81004148:	53                   	push   %ebx
81004149:	83 ec 10             	sub    $0x10,%esp
8100414c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100414f:	be 00 00 00 00       	mov    $0x0,%esi
81004154:	8b 43 08             	mov    0x8(%ebx),%eax
81004157:	85 c0                	test   %eax,%eax
81004159:	75 11                	jne    8100416c <__sprint_r+0x28>
8100415b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004162:	b8 00 00 00 00       	mov    $0x0,%eax
81004167:	e9 ad 00 00 00       	jmp    81004219 <__sprint_r+0xd5>
8100416c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100416f:	8b 40 64             	mov    0x64(%eax),%eax
81004172:	25 00 20 00 00       	and    $0x2000,%eax
81004177:	85 c0                	test   %eax,%eax
81004179:	74 7a                	je     810041f5 <__sprint_r+0xb1>
8100417b:	8b 03                	mov    (%ebx),%eax
8100417d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004180:	eb 6a                	jmp    810041ec <__sprint_r+0xa8>
81004182:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004185:	8b 00                	mov    (%eax),%eax
81004187:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100418a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418d:	8b 40 04             	mov    0x4(%eax),%eax
81004190:	c1 e8 02             	shr    $0x2,%eax
81004193:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004196:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100419d:	eb 33                	jmp    810041d2 <__sprint_r+0x8e>
8100419f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041a2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810041a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810041ac:	01 d0                	add    %edx,%eax
810041ae:	8b 00                	mov    (%eax),%eax
810041b0:	83 ec 04             	sub    $0x4,%esp
810041b3:	ff 75 0c             	push   0xc(%ebp)
810041b6:	50                   	push   %eax
810041b7:	ff 75 08             	push   0x8(%ebp)
810041ba:	e8 3c 21 00 00       	call   810062fb <_fputwc_r>
810041bf:	83 c4 10             	add    $0x10,%esp
810041c2:	83 f8 ff             	cmp    $0xffffffff,%eax
810041c5:	75 07                	jne    810041ce <__sprint_r+0x8a>
810041c7:	be ff ff ff ff       	mov    $0xffffffff,%esi
810041cc:	eb 3b                	jmp    81004209 <__sprint_r+0xc5>
810041ce:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810041d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041d5:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810041d8:	7c c5                	jl     8100419f <__sprint_r+0x5b>
810041da:	8b 43 08             	mov    0x8(%ebx),%eax
810041dd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810041e0:	c1 e2 02             	shl    $0x2,%edx
810041e3:	29 d0                	sub    %edx,%eax
810041e5:	89 43 08             	mov    %eax,0x8(%ebx)
810041e8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810041ec:	8b 43 08             	mov    0x8(%ebx),%eax
810041ef:	85 c0                	test   %eax,%eax
810041f1:	75 8f                	jne    81004182 <__sprint_r+0x3e>
810041f3:	eb 14                	jmp    81004209 <__sprint_r+0xc5>
810041f5:	83 ec 04             	sub    $0x4,%esp
810041f8:	53                   	push   %ebx
810041f9:	ff 75 0c             	push   0xc(%ebp)
810041fc:	ff 75 08             	push   0x8(%ebp)
810041ff:	e8 96 21 00 00       	call   8100639a <__sfvwrite_r>
81004204:	83 c4 10             	add    $0x10,%esp
81004207:	89 c6                	mov    %eax,%esi
81004209:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004210:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004217:	89 f0                	mov    %esi,%eax
81004219:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100421c:	5b                   	pop    %ebx
8100421d:	5e                   	pop    %esi
8100421e:	5d                   	pop    %ebp
8100421f:	c3                   	ret    

81004220 <__sfputc_r>:
81004220:	55                   	push   %ebp
81004221:	89 e5                	mov    %esp,%ebp
81004223:	83 ec 08             	sub    $0x8,%esp
81004226:	8b 45 10             	mov    0x10(%ebp),%eax
81004229:	8b 40 08             	mov    0x8(%eax),%eax
8100422c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100422f:	8b 45 10             	mov    0x10(%ebp),%eax
81004232:	89 50 08             	mov    %edx,0x8(%eax)
81004235:	8b 45 10             	mov    0x10(%ebp),%eax
81004238:	8b 40 08             	mov    0x8(%eax),%eax
8100423b:	85 c0                	test   %eax,%eax
8100423d:	79 17                	jns    81004256 <__sfputc_r+0x36>
8100423f:	8b 45 10             	mov    0x10(%ebp),%eax
81004242:	8b 50 08             	mov    0x8(%eax),%edx
81004245:	8b 45 10             	mov    0x10(%ebp),%eax
81004248:	8b 40 18             	mov    0x18(%eax),%eax
8100424b:	39 c2                	cmp    %eax,%edx
8100424d:	7c 21                	jl     81004270 <__sfputc_r+0x50>
8100424f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004252:	3c 0a                	cmp    $0xa,%al
81004254:	74 1a                	je     81004270 <__sfputc_r+0x50>
81004256:	8b 45 10             	mov    0x10(%ebp),%eax
81004259:	8b 00                	mov    (%eax),%eax
8100425b:	8d 48 01             	lea    0x1(%eax),%ecx
8100425e:	8b 55 10             	mov    0x10(%ebp),%edx
81004261:	89 0a                	mov    %ecx,(%edx)
81004263:	8b 55 0c             	mov    0xc(%ebp),%edx
81004266:	88 10                	mov    %dl,(%eax)
81004268:	0f b6 00             	movzbl (%eax),%eax
8100426b:	0f b6 c0             	movzbl %al,%eax
8100426e:	eb 14                	jmp    81004284 <__sfputc_r+0x64>
81004270:	83 ec 04             	sub    $0x4,%esp
81004273:	ff 75 10             	push   0x10(%ebp)
81004276:	ff 75 0c             	push   0xc(%ebp)
81004279:	ff 75 08             	push   0x8(%ebp)
8100427c:	e8 1e 19 00 00       	call   81005b9f <__swbuf_r>
81004281:	83 c4 10             	add    $0x10,%esp
81004284:	c9                   	leave  
81004285:	c3                   	ret    

81004286 <__sfputs_r>:
81004286:	55                   	push   %ebp
81004287:	89 e5                	mov    %esp,%ebp
81004289:	53                   	push   %ebx
8100428a:	83 ec 14             	sub    $0x14,%esp
8100428d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004290:	8b 40 64             	mov    0x64(%eax),%eax
81004293:	25 00 20 00 00       	and    $0x2000,%eax
81004298:	85 c0                	test   %eax,%eax
8100429a:	74 4c                	je     810042e8 <__sfputs_r+0x62>
8100429c:	8b 45 10             	mov    0x10(%ebp),%eax
8100429f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042a2:	bb 00 00 00 00       	mov    $0x0,%ebx
810042a7:	eb 31                	jmp    810042da <__sfputs_r+0x54>
810042a9:	89 d8                	mov    %ebx,%eax
810042ab:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810042b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042b5:	01 d0                	add    %edx,%eax
810042b7:	8b 00                	mov    (%eax),%eax
810042b9:	83 ec 04             	sub    $0x4,%esp
810042bc:	ff 75 0c             	push   0xc(%ebp)
810042bf:	50                   	push   %eax
810042c0:	ff 75 08             	push   0x8(%ebp)
810042c3:	e8 33 20 00 00       	call   810062fb <_fputwc_r>
810042c8:	83 c4 10             	add    $0x10,%esp
810042cb:	83 f8 ff             	cmp    $0xffffffff,%eax
810042ce:	75 07                	jne    810042d7 <__sfputs_r+0x51>
810042d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810042d5:	eb 52                	jmp    81004329 <__sfputs_r+0xa3>
810042d7:	83 c3 01             	add    $0x1,%ebx
810042da:	8b 45 14             	mov    0x14(%ebp),%eax
810042dd:	c1 e8 02             	shr    $0x2,%eax
810042e0:	89 da                	mov    %ebx,%edx
810042e2:	39 d0                	cmp    %edx,%eax
810042e4:	77 c3                	ja     810042a9 <__sfputs_r+0x23>
810042e6:	eb 3c                	jmp    81004324 <__sfputs_r+0x9e>
810042e8:	bb 00 00 00 00       	mov    $0x0,%ebx
810042ed:	eb 2e                	jmp    8100431d <__sfputs_r+0x97>
810042ef:	89 da                	mov    %ebx,%edx
810042f1:	8b 45 10             	mov    0x10(%ebp),%eax
810042f4:	01 d0                	add    %edx,%eax
810042f6:	0f b6 00             	movzbl (%eax),%eax
810042f9:	0f be c0             	movsbl %al,%eax
810042fc:	83 ec 04             	sub    $0x4,%esp
810042ff:	ff 75 0c             	push   0xc(%ebp)
81004302:	50                   	push   %eax
81004303:	ff 75 08             	push   0x8(%ebp)
81004306:	e8 15 ff ff ff       	call   81004220 <__sfputc_r>
8100430b:	83 c4 10             	add    $0x10,%esp
8100430e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004311:	75 07                	jne    8100431a <__sfputs_r+0x94>
81004313:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004318:	eb 0f                	jmp    81004329 <__sfputs_r+0xa3>
8100431a:	83 c3 01             	add    $0x1,%ebx
8100431d:	89 d8                	mov    %ebx,%eax
8100431f:	39 45 14             	cmp    %eax,0x14(%ebp)
81004322:	77 cb                	ja     810042ef <__sfputs_r+0x69>
81004324:	b8 00 00 00 00       	mov    $0x0,%eax
81004329:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100432c:	c9                   	leave  
8100432d:	c3                   	ret    

8100432e <vfiprintf>:
8100432e:	55                   	push   %ebp
8100432f:	89 e5                	mov    %esp,%ebp
81004331:	83 ec 18             	sub    $0x18,%esp
81004334:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81004339:	ff 75 10             	push   0x10(%ebp)
8100433c:	ff 75 0c             	push   0xc(%ebp)
8100433f:	ff 75 08             	push   0x8(%ebp)
81004342:	50                   	push   %eax
81004343:	e8 0b 00 00 00       	call   81004353 <_vfiprintf_r>
81004348:	83 c4 10             	add    $0x10,%esp
8100434b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100434e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004351:	c9                   	leave  
81004352:	c3                   	ret    

81004353 <_vfiprintf_r>:
81004353:	55                   	push   %ebp
81004354:	89 e5                	mov    %esp,%ebp
81004356:	57                   	push   %edi
81004357:	56                   	push   %esi
81004358:	53                   	push   %ebx
81004359:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100435f:	c7 45 e4 86 42 00 81 	movl   $0x81004286,-0x1c(%ebp)
81004366:	8b 45 08             	mov    0x8(%ebp),%eax
81004369:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100436c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004370:	74 18                	je     8100438a <_vfiprintf_r+0x37>
81004372:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004375:	8b 40 38             	mov    0x38(%eax),%eax
81004378:	85 c0                	test   %eax,%eax
8100437a:	75 0e                	jne    8100438a <_vfiprintf_r+0x37>
8100437c:	83 ec 0c             	sub    $0xc,%esp
8100437f:	ff 75 e0             	push   -0x20(%ebp)
81004382:	e8 bc d2 ff ff       	call   81001643 <__sinit>
81004387:	83 c4 10             	add    $0x10,%esp
8100438a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100438d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004391:	98                   	cwtl   
81004392:	83 e0 08             	and    $0x8,%eax
81004395:	85 c0                	test   %eax,%eax
81004397:	74 0a                	je     810043a3 <_vfiprintf_r+0x50>
81004399:	8b 45 0c             	mov    0xc(%ebp),%eax
8100439c:	8b 40 10             	mov    0x10(%eax),%eax
8100439f:	85 c0                	test   %eax,%eax
810043a1:	75 1f                	jne    810043c2 <_vfiprintf_r+0x6f>
810043a3:	83 ec 08             	sub    $0x8,%esp
810043a6:	ff 75 0c             	push   0xc(%ebp)
810043a9:	ff 75 08             	push   0x8(%ebp)
810043ac:	e8 67 19 00 00       	call   81005d18 <__swsetup_r>
810043b1:	83 c4 10             	add    $0x10,%esp
810043b4:	85 c0                	test   %eax,%eax
810043b6:	74 0a                	je     810043c2 <_vfiprintf_r+0x6f>
810043b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810043bd:	e9 df 02 00 00       	jmp    810046a1 <_vfiprintf_r+0x34e>
810043c2:	8b 5d 10             	mov    0x10(%ebp),%ebx
810043c5:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810043cc:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810043d0:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810043d4:	8b 45 14             	mov    0x14(%ebp),%eax
810043d7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810043dd:	89 de                	mov    %ebx,%esi
810043df:	eb 03                	jmp    810043e4 <_vfiprintf_r+0x91>
810043e1:	83 c3 01             	add    $0x1,%ebx
810043e4:	0f b6 03             	movzbl (%ebx),%eax
810043e7:	84 c0                	test   %al,%al
810043e9:	74 07                	je     810043f2 <_vfiprintf_r+0x9f>
810043eb:	0f b6 03             	movzbl (%ebx),%eax
810043ee:	3c 25                	cmp    $0x25,%al
810043f0:	75 ef                	jne    810043e1 <_vfiprintf_r+0x8e>
810043f2:	89 d8                	mov    %ebx,%eax
810043f4:	29 f0                	sub    %esi,%eax
810043f6:	85 c0                	test   %eax,%eax
810043f8:	74 2b                	je     81004425 <_vfiprintf_r+0xd2>
810043fa:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004400:	50                   	push   %eax
81004401:	56                   	push   %esi
81004402:	ff 75 0c             	push   0xc(%ebp)
81004405:	ff 75 08             	push   0x8(%ebp)
81004408:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100440b:	ff d0                	call   *%eax
8100440d:	83 c4 10             	add    $0x10,%esp
81004410:	83 f8 ff             	cmp    $0xffffffff,%eax
81004413:	0f 84 68 02 00 00    	je     81004681 <_vfiprintf_r+0x32e>
81004419:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100441c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004422:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004425:	0f b6 03             	movzbl (%ebx),%eax
81004428:	84 c0                	test   %al,%al
8100442a:	0f 84 54 02 00 00    	je     81004684 <_vfiprintf_r+0x331>
81004430:	83 c3 01             	add    $0x1,%ebx
81004433:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100443a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004441:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004448:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100444f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004453:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100445a:	c7 45 dc bc 84 00 81 	movl   $0x810084bc,-0x24(%ebp)
81004461:	eb 1b                	jmp    8100447e <_vfiprintf_r+0x12b>
81004463:	8b 55 80             	mov    -0x80(%ebp),%edx
81004466:	89 f0                	mov    %esi,%eax
81004468:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100446b:	be 01 00 00 00       	mov    $0x1,%esi
81004470:	89 c1                	mov    %eax,%ecx
81004472:	d3 e6                	shl    %cl,%esi
81004474:	89 f0                	mov    %esi,%eax
81004476:	09 d0                	or     %edx,%eax
81004478:	89 45 80             	mov    %eax,-0x80(%ebp)
8100447b:	83 c3 01             	add    $0x1,%ebx
8100447e:	0f b6 03             	movzbl (%ebx),%eax
81004481:	0f be c0             	movsbl %al,%eax
81004484:	83 ec 04             	sub    $0x4,%esp
81004487:	6a 05                	push   $0x5
81004489:	50                   	push   %eax
8100448a:	ff 75 dc             	push   -0x24(%ebp)
8100448d:	e8 ee fa ff ff       	call   81003f80 <memchr>
81004492:	83 c4 10             	add    $0x10,%esp
81004495:	89 c6                	mov    %eax,%esi
81004497:	85 f6                	test   %esi,%esi
81004499:	75 c8                	jne    81004463 <_vfiprintf_r+0x110>
8100449b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100449e:	83 e0 10             	and    $0x10,%eax
810044a1:	85 c0                	test   %eax,%eax
810044a3:	74 04                	je     810044a9 <_vfiprintf_r+0x156>
810044a5:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810044a9:	8b 45 80             	mov    -0x80(%ebp),%eax
810044ac:	83 e0 08             	and    $0x8,%eax
810044af:	85 c0                	test   %eax,%eax
810044b1:	74 04                	je     810044b7 <_vfiprintf_r+0x164>
810044b3:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810044b7:	0f b6 03             	movzbl (%ebx),%eax
810044ba:	3c 2a                	cmp    $0x2a,%al
810044bc:	75 50                	jne    8100450e <_vfiprintf_r+0x1bb>
810044be:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810044c4:	8d 50 04             	lea    0x4(%eax),%edx
810044c7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810044cd:	8b 00                	mov    (%eax),%eax
810044cf:	89 45 8c             	mov    %eax,-0x74(%ebp)
810044d2:	8b 45 8c             	mov    -0x74(%ebp),%eax
810044d5:	85 c0                	test   %eax,%eax
810044d7:	79 11                	jns    810044ea <_vfiprintf_r+0x197>
810044d9:	8b 45 8c             	mov    -0x74(%ebp),%eax
810044dc:	f7 d8                	neg    %eax
810044de:	89 45 8c             	mov    %eax,-0x74(%ebp)
810044e1:	8b 45 80             	mov    -0x80(%ebp),%eax
810044e4:	83 c8 02             	or     $0x2,%eax
810044e7:	89 45 80             	mov    %eax,-0x80(%ebp)
810044ea:	83 c3 01             	add    $0x1,%ebx
810044ed:	eb 2d                	jmp    8100451c <_vfiprintf_r+0x1c9>
810044ef:	8b 55 8c             	mov    -0x74(%ebp),%edx
810044f2:	89 d0                	mov    %edx,%eax
810044f4:	c1 e0 02             	shl    $0x2,%eax
810044f7:	01 d0                	add    %edx,%eax
810044f9:	01 c0                	add    %eax,%eax
810044fb:	89 c2                	mov    %eax,%edx
810044fd:	0f b6 03             	movzbl (%ebx),%eax
81004500:	0f be c0             	movsbl %al,%eax
81004503:	83 e8 30             	sub    $0x30,%eax
81004506:	01 d0                	add    %edx,%eax
81004508:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100450b:	83 c3 01             	add    $0x1,%ebx
8100450e:	0f b6 03             	movzbl (%ebx),%eax
81004511:	0f be c0             	movsbl %al,%eax
81004514:	83 e8 30             	sub    $0x30,%eax
81004517:	83 f8 09             	cmp    $0x9,%eax
8100451a:	76 d3                	jbe    810044ef <_vfiprintf_r+0x19c>
8100451c:	0f b6 03             	movzbl (%ebx),%eax
8100451f:	3c 2e                	cmp    $0x2e,%al
81004521:	75 67                	jne    8100458a <_vfiprintf_r+0x237>
81004523:	83 c3 01             	add    $0x1,%ebx
81004526:	0f b6 03             	movzbl (%ebx),%eax
81004529:	3c 2a                	cmp    $0x2a,%al
8100452b:	75 27                	jne    81004554 <_vfiprintf_r+0x201>
8100452d:	83 c3 01             	add    $0x1,%ebx
81004530:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004536:	8d 50 04             	lea    0x4(%eax),%edx
81004539:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100453f:	8b 00                	mov    (%eax),%eax
81004541:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004544:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004547:	85 c0                	test   %eax,%eax
81004549:	79 3f                	jns    8100458a <_vfiprintf_r+0x237>
8100454b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004552:	eb 36                	jmp    8100458a <_vfiprintf_r+0x237>
81004554:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100455b:	eb 1f                	jmp    8100457c <_vfiprintf_r+0x229>
8100455d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81004560:	89 d0                	mov    %edx,%eax
81004562:	c1 e0 02             	shl    $0x2,%eax
81004565:	01 d0                	add    %edx,%eax
81004567:	01 c0                	add    %eax,%eax
81004569:	89 c2                	mov    %eax,%edx
8100456b:	0f b6 03             	movzbl (%ebx),%eax
8100456e:	0f be c0             	movsbl %al,%eax
81004571:	83 e8 30             	sub    $0x30,%eax
81004574:	01 d0                	add    %edx,%eax
81004576:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004579:	83 c3 01             	add    $0x1,%ebx
8100457c:	0f b6 03             	movzbl (%ebx),%eax
8100457f:	0f be c0             	movsbl %al,%eax
81004582:	83 e8 30             	sub    $0x30,%eax
81004585:	83 f8 09             	cmp    $0x9,%eax
81004588:	76 d3                	jbe    8100455d <_vfiprintf_r+0x20a>
8100458a:	c7 45 dc c2 84 00 81 	movl   $0x810084c2,-0x24(%ebp)
81004591:	0f b6 03             	movzbl (%ebx),%eax
81004594:	0f be c0             	movsbl %al,%eax
81004597:	83 ec 04             	sub    $0x4,%esp
8100459a:	6a 03                	push   $0x3
8100459c:	50                   	push   %eax
8100459d:	ff 75 dc             	push   -0x24(%ebp)
810045a0:	e8 db f9 ff ff       	call   81003f80 <memchr>
810045a5:	83 c4 10             	add    $0x10,%esp
810045a8:	89 c6                	mov    %eax,%esi
810045aa:	85 f6                	test   %esi,%esi
810045ac:	74 1b                	je     810045c9 <_vfiprintf_r+0x276>
810045ae:	8b 55 80             	mov    -0x80(%ebp),%edx
810045b1:	89 f0                	mov    %esi,%eax
810045b3:	2b 45 dc             	sub    -0x24(%ebp),%eax
810045b6:	be 40 00 00 00       	mov    $0x40,%esi
810045bb:	89 c1                	mov    %eax,%ecx
810045bd:	d3 e6                	shl    %cl,%esi
810045bf:	89 f0                	mov    %esi,%eax
810045c1:	09 d0                	or     %edx,%eax
810045c3:	89 45 80             	mov    %eax,-0x80(%ebp)
810045c6:	83 c3 01             	add    $0x1,%ebx
810045c9:	89 d8                	mov    %ebx,%eax
810045cb:	8d 58 01             	lea    0x1(%eax),%ebx
810045ce:	0f b6 00             	movzbl (%eax),%eax
810045d1:	88 45 98             	mov    %al,-0x68(%ebp)
810045d4:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810045d8:	0f be c0             	movsbl %al,%eax
810045db:	83 ec 04             	sub    $0x4,%esp
810045de:	6a 06                	push   $0x6
810045e0:	50                   	push   %eax
810045e1:	68 c6 84 00 81       	push   $0x810084c6
810045e6:	e8 95 f9 ff ff       	call   81003f80 <memchr>
810045eb:	83 c4 10             	add    $0x10,%esp
810045ee:	89 c6                	mov    %eax,%esi
810045f0:	85 f6                	test   %esi,%esi
810045f2:	74 5a                	je     8100464e <_vfiprintf_r+0x2fb>
810045f4:	b8 00 00 00 00       	mov    $0x0,%eax
810045f9:	85 c0                	test   %eax,%eax
810045fb:	75 2e                	jne    8100462b <_vfiprintf_r+0x2d8>
810045fd:	8b 45 80             	mov    -0x80(%ebp),%eax
81004600:	25 00 01 00 00       	and    $0x100,%eax
81004605:	85 c0                	test   %eax,%eax
81004607:	74 11                	je     8100461a <_vfiprintf_r+0x2c7>
81004609:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100460f:	83 c0 0c             	add    $0xc,%eax
81004612:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004618:	eb 55                	jmp    8100466f <_vfiprintf_r+0x31c>
8100461a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004620:	83 c0 08             	add    $0x8,%eax
81004623:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004629:	eb 44                	jmp    8100466f <_vfiprintf_r+0x31c>
8100462b:	83 ec 0c             	sub    $0xc,%esp
8100462e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004634:	50                   	push   %eax
81004635:	ff 75 e4             	push   -0x1c(%ebp)
81004638:	ff 75 0c             	push   0xc(%ebp)
8100463b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100463e:	50                   	push   %eax
8100463f:	ff 75 08             	push   0x8(%ebp)
81004642:	e8 b9 b9 ff 7e       	call   0 <do_help-0x81000000>
81004647:	83 c4 20             	add    $0x20,%esp
8100464a:	89 c7                	mov    %eax,%edi
8100464c:	eb 21                	jmp    8100466f <_vfiprintf_r+0x31c>
8100464e:	83 ec 0c             	sub    $0xc,%esp
81004651:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004657:	50                   	push   %eax
81004658:	ff 75 e4             	push   -0x1c(%ebp)
8100465b:	ff 75 0c             	push   0xc(%ebp)
8100465e:	8d 45 80             	lea    -0x80(%ebp),%eax
81004661:	50                   	push   %eax
81004662:	ff 75 08             	push   0x8(%ebp)
81004665:	e8 da 01 00 00       	call   81004844 <_printf_i>
8100466a:	83 c4 20             	add    $0x20,%esp
8100466d:	89 c7                	mov    %eax,%edi
8100466f:	83 ff ff             	cmp    $0xffffffff,%edi
81004672:	74 13                	je     81004687 <_vfiprintf_r+0x334>
81004674:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004677:	01 f8                	add    %edi,%eax
81004679:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100467c:	e9 5c fd ff ff       	jmp    810043dd <_vfiprintf_r+0x8a>
81004681:	90                   	nop
81004682:	eb 04                	jmp    81004688 <_vfiprintf_r+0x335>
81004684:	90                   	nop
81004685:	eb 01                	jmp    81004688 <_vfiprintf_r+0x335>
81004687:	90                   	nop
81004688:	8b 45 0c             	mov    0xc(%ebp),%eax
8100468b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100468f:	98                   	cwtl   
81004690:	83 e0 40             	and    $0x40,%eax
81004693:	85 c0                	test   %eax,%eax
81004695:	75 05                	jne    8100469c <_vfiprintf_r+0x349>
81004697:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100469a:	eb 05                	jmp    810046a1 <_vfiprintf_r+0x34e>
8100469c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810046a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810046a4:	5b                   	pop    %ebx
810046a5:	5e                   	pop    %esi
810046a6:	5f                   	pop    %edi
810046a7:	5d                   	pop    %ebp
810046a8:	c3                   	ret    

810046a9 <_printf_common>:
810046a9:	55                   	push   %ebp
810046aa:	89 e5                	mov    %esp,%ebp
810046ac:	83 ec 18             	sub    $0x18,%esp
810046af:	8b 45 0c             	mov    0xc(%ebp),%eax
810046b2:	8b 50 10             	mov    0x10(%eax),%edx
810046b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810046b8:	8b 40 08             	mov    0x8(%eax),%eax
810046bb:	39 c2                	cmp    %eax,%edx
810046bd:	0f 4c d0             	cmovl  %eax,%edx
810046c0:	8b 45 10             	mov    0x10(%ebp),%eax
810046c3:	89 10                	mov    %edx,(%eax)
810046c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810046c8:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810046cc:	84 c0                	test   %al,%al
810046ce:	74 0d                	je     810046dd <_printf_common+0x34>
810046d0:	8b 45 10             	mov    0x10(%ebp),%eax
810046d3:	8b 00                	mov    (%eax),%eax
810046d5:	8d 50 01             	lea    0x1(%eax),%edx
810046d8:	8b 45 10             	mov    0x10(%ebp),%eax
810046db:	89 10                	mov    %edx,(%eax)
810046dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810046e0:	8b 00                	mov    (%eax),%eax
810046e2:	83 e0 20             	and    $0x20,%eax
810046e5:	85 c0                	test   %eax,%eax
810046e7:	74 0d                	je     810046f6 <_printf_common+0x4d>
810046e9:	8b 45 10             	mov    0x10(%ebp),%eax
810046ec:	8b 00                	mov    (%eax),%eax
810046ee:	8d 50 02             	lea    0x2(%eax),%edx
810046f1:	8b 45 10             	mov    0x10(%ebp),%eax
810046f4:	89 10                	mov    %edx,(%eax)
810046f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810046f9:	8b 00                	mov    (%eax),%eax
810046fb:	83 e0 06             	and    $0x6,%eax
810046fe:	85 c0                	test   %eax,%eax
81004700:	75 41                	jne    81004743 <_printf_common+0x9a>
81004702:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004709:	eb 24                	jmp    8100472f <_printf_common+0x86>
8100470b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100470e:	83 c0 19             	add    $0x19,%eax
81004711:	6a 01                	push   $0x1
81004713:	50                   	push   %eax
81004714:	ff 75 14             	push   0x14(%ebp)
81004717:	ff 75 08             	push   0x8(%ebp)
8100471a:	8b 45 18             	mov    0x18(%ebp),%eax
8100471d:	ff d0                	call   *%eax
8100471f:	83 c4 10             	add    $0x10,%esp
81004722:	83 f8 ff             	cmp    $0xffffffff,%eax
81004725:	0f 84 0b 01 00 00    	je     81004836 <_printf_common+0x18d>
8100472b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100472f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004732:	8b 50 0c             	mov    0xc(%eax),%edx
81004735:	8b 45 10             	mov    0x10(%ebp),%eax
81004738:	8b 08                	mov    (%eax),%ecx
8100473a:	89 d0                	mov    %edx,%eax
8100473c:	29 c8                	sub    %ecx,%eax
8100473e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004741:	7c c8                	jl     8100470b <_printf_common+0x62>
81004743:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100474a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100474d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004751:	84 c0                	test   %al,%al
81004753:	74 04                	je     81004759 <_printf_common+0xb0>
81004755:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004759:	8b 45 0c             	mov    0xc(%ebp),%eax
8100475c:	8b 00                	mov    (%eax),%eax
8100475e:	83 e0 20             	and    $0x20,%eax
81004761:	85 c0                	test   %eax,%eax
81004763:	74 28                	je     8100478d <_printf_common+0xe4>
81004765:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004768:	8d 50 01             	lea    0x1(%eax),%edx
8100476b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100476e:	8b 55 0c             	mov    0xc(%ebp),%edx
81004771:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004776:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004779:	8d 50 01             	lea    0x1(%eax),%edx
8100477c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100477f:	8b 55 0c             	mov    0xc(%ebp),%edx
81004782:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004786:	8b 55 0c             	mov    0xc(%ebp),%edx
81004789:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100478d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004790:	8b 55 0c             	mov    0xc(%ebp),%edx
81004793:	83 c2 43             	add    $0x43,%edx
81004796:	50                   	push   %eax
81004797:	52                   	push   %edx
81004798:	ff 75 14             	push   0x14(%ebp)
8100479b:	ff 75 08             	push   0x8(%ebp)
8100479e:	8b 45 18             	mov    0x18(%ebp),%eax
810047a1:	ff d0                	call   *%eax
810047a3:	83 c4 10             	add    $0x10,%esp
810047a6:	83 f8 ff             	cmp    $0xffffffff,%eax
810047a9:	0f 84 8a 00 00 00    	je     81004839 <_printf_common+0x190>
810047af:	8b 45 0c             	mov    0xc(%ebp),%eax
810047b2:	8b 50 0c             	mov    0xc(%eax),%edx
810047b5:	8b 45 10             	mov    0x10(%ebp),%eax
810047b8:	8b 08                	mov    (%eax),%ecx
810047ba:	89 d0                	mov    %edx,%eax
810047bc:	29 c8                	sub    %ecx,%eax
810047be:	89 45 f4             	mov    %eax,-0xc(%ebp)
810047c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810047c4:	8b 00                	mov    (%eax),%eax
810047c6:	83 e0 06             	and    $0x6,%eax
810047c9:	83 f8 04             	cmp    $0x4,%eax
810047cc:	75 06                	jne    810047d4 <_printf_common+0x12b>
810047ce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810047d2:	79 07                	jns    810047db <_printf_common+0x132>
810047d4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810047db:	8b 45 0c             	mov    0xc(%ebp),%eax
810047de:	8b 50 08             	mov    0x8(%eax),%edx
810047e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810047e4:	8b 40 10             	mov    0x10(%eax),%eax
810047e7:	39 c2                	cmp    %eax,%edx
810047e9:	7e 13                	jle    810047fe <_printf_common+0x155>
810047eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ee:	8b 50 08             	mov    0x8(%eax),%edx
810047f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810047f4:	8b 48 10             	mov    0x10(%eax),%ecx
810047f7:	89 d0                	mov    %edx,%eax
810047f9:	29 c8                	sub    %ecx,%eax
810047fb:	01 45 f4             	add    %eax,-0xc(%ebp)
810047fe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004805:	eb 20                	jmp    81004827 <_printf_common+0x17e>
81004807:	8b 45 0c             	mov    0xc(%ebp),%eax
8100480a:	83 c0 1a             	add    $0x1a,%eax
8100480d:	6a 01                	push   $0x1
8100480f:	50                   	push   %eax
81004810:	ff 75 14             	push   0x14(%ebp)
81004813:	ff 75 08             	push   0x8(%ebp)
81004816:	8b 45 18             	mov    0x18(%ebp),%eax
81004819:	ff d0                	call   *%eax
8100481b:	83 c4 10             	add    $0x10,%esp
8100481e:	83 f8 ff             	cmp    $0xffffffff,%eax
81004821:	74 19                	je     8100483c <_printf_common+0x193>
81004823:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004827:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100482a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100482d:	7c d8                	jl     81004807 <_printf_common+0x15e>
8100482f:	b8 00 00 00 00       	mov    $0x0,%eax
81004834:	eb 0c                	jmp    81004842 <_printf_common+0x199>
81004836:	90                   	nop
81004837:	eb 04                	jmp    8100483d <_printf_common+0x194>
81004839:	90                   	nop
8100483a:	eb 01                	jmp    8100483d <_printf_common+0x194>
8100483c:	90                   	nop
8100483d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004842:	c9                   	leave  
81004843:	c3                   	ret    

81004844 <_printf_i>:
81004844:	55                   	push   %ebp
81004845:	89 e5                	mov    %esp,%ebp
81004847:	53                   	push   %ebx
81004848:	83 ec 24             	sub    $0x24,%esp
8100484b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100484e:	83 c0 1b             	add    $0x1b,%eax
81004851:	83 c0 28             	add    $0x28,%eax
81004854:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004857:	c7 45 e8 d0 84 00 81 	movl   $0x810084d0,-0x18(%ebp)
8100485e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004861:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004865:	0f be c0             	movsbl %al,%eax
81004868:	85 c0                	test   %eax,%eax
8100486a:	0f 84 00 03 00 00    	je     81004b70 <_printf_i+0x32c>
81004870:	85 c0                	test   %eax,%eax
81004872:	0f 88 52 03 00 00    	js     81004bca <_printf_i+0x386>
81004878:	83 f8 78             	cmp    $0x78,%eax
8100487b:	0f 8f 49 03 00 00    	jg     81004bca <_printf_i+0x386>
81004881:	83 f8 58             	cmp    $0x58,%eax
81004884:	0f 8c 40 03 00 00    	jl     81004bca <_printf_i+0x386>
8100488a:	83 e8 58             	sub    $0x58,%eax
8100488d:	83 f8 20             	cmp    $0x20,%eax
81004890:	0f 87 34 03 00 00    	ja     81004bca <_printf_i+0x386>
81004896:	8b 04 85 f4 84 00 81 	mov    -0x7eff7b0c(,%eax,4),%eax
8100489d:	ff e0                	jmp    *%eax
8100489f:	8b 45 18             	mov    0x18(%ebp),%eax
810048a2:	8b 00                	mov    (%eax),%eax
810048a4:	8d 48 04             	lea    0x4(%eax),%ecx
810048a7:	8b 55 18             	mov    0x18(%ebp),%edx
810048aa:	89 0a                	mov    %ecx,(%edx)
810048ac:	8b 00                	mov    (%eax),%eax
810048ae:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810048b2:	89 c2                	mov    %eax,%edx
810048b4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810048b7:	88 10                	mov    %dl,(%eax)
810048b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810048bc:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810048c3:	e9 1c 03 00 00       	jmp    81004be4 <_printf_i+0x3a0>
810048c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810048cb:	8b 00                	mov    (%eax),%eax
810048cd:	25 80 00 00 00       	and    $0x80,%eax
810048d2:	85 c0                	test   %eax,%eax
810048d4:	74 11                	je     810048e7 <_printf_i+0xa3>
810048d6:	8b 45 18             	mov    0x18(%ebp),%eax
810048d9:	8b 00                	mov    (%eax),%eax
810048db:	8d 48 04             	lea    0x4(%eax),%ecx
810048de:	8b 55 18             	mov    0x18(%ebp),%edx
810048e1:	89 0a                	mov    %ecx,(%edx)
810048e3:	8b 00                	mov    (%eax),%eax
810048e5:	eb 2d                	jmp    81004914 <_printf_i+0xd0>
810048e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810048ea:	8b 00                	mov    (%eax),%eax
810048ec:	83 e0 40             	and    $0x40,%eax
810048ef:	85 c0                	test   %eax,%eax
810048f1:	74 12                	je     81004905 <_printf_i+0xc1>
810048f3:	8b 45 18             	mov    0x18(%ebp),%eax
810048f6:	8b 00                	mov    (%eax),%eax
810048f8:	8d 48 04             	lea    0x4(%eax),%ecx
810048fb:	8b 55 18             	mov    0x18(%ebp),%edx
810048fe:	89 0a                	mov    %ecx,(%edx)
81004900:	8b 00                	mov    (%eax),%eax
81004902:	98                   	cwtl   
81004903:	eb 0f                	jmp    81004914 <_printf_i+0xd0>
81004905:	8b 45 18             	mov    0x18(%ebp),%eax
81004908:	8b 00                	mov    (%eax),%eax
8100490a:	8d 48 04             	lea    0x4(%eax),%ecx
8100490d:	8b 55 18             	mov    0x18(%ebp),%edx
81004910:	89 0a                	mov    %ecx,(%edx)
81004912:	8b 00                	mov    (%eax),%eax
81004914:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004917:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100491a:	85 c0                	test   %eax,%eax
8100491c:	79 0a                	jns    81004928 <_printf_i+0xe4>
8100491e:	f7 5d f4             	negl   -0xc(%ebp)
81004921:	8b 45 0c             	mov    0xc(%ebp),%eax
81004924:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004928:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100492f:	e9 28 01 00 00       	jmp    81004a5c <_printf_i+0x218>
81004934:	8b 45 0c             	mov    0xc(%ebp),%eax
81004937:	8b 00                	mov    (%eax),%eax
81004939:	25 80 00 00 00       	and    $0x80,%eax
8100493e:	85 c0                	test   %eax,%eax
81004940:	74 11                	je     81004953 <_printf_i+0x10f>
81004942:	8b 45 18             	mov    0x18(%ebp),%eax
81004945:	8b 00                	mov    (%eax),%eax
81004947:	8d 48 04             	lea    0x4(%eax),%ecx
8100494a:	8b 55 18             	mov    0x18(%ebp),%edx
8100494d:	89 0a                	mov    %ecx,(%edx)
8100494f:	8b 00                	mov    (%eax),%eax
81004951:	eb 2f                	jmp    81004982 <_printf_i+0x13e>
81004953:	8b 45 0c             	mov    0xc(%ebp),%eax
81004956:	8b 00                	mov    (%eax),%eax
81004958:	83 e0 40             	and    $0x40,%eax
8100495b:	85 c0                	test   %eax,%eax
8100495d:	74 14                	je     81004973 <_printf_i+0x12f>
8100495f:	8b 45 18             	mov    0x18(%ebp),%eax
81004962:	8b 00                	mov    (%eax),%eax
81004964:	8d 48 04             	lea    0x4(%eax),%ecx
81004967:	8b 55 18             	mov    0x18(%ebp),%edx
8100496a:	89 0a                	mov    %ecx,(%edx)
8100496c:	8b 00                	mov    (%eax),%eax
8100496e:	0f b7 c0             	movzwl %ax,%eax
81004971:	eb 0f                	jmp    81004982 <_printf_i+0x13e>
81004973:	8b 45 18             	mov    0x18(%ebp),%eax
81004976:	8b 00                	mov    (%eax),%eax
81004978:	8d 48 04             	lea    0x4(%eax),%ecx
8100497b:	8b 55 18             	mov    0x18(%ebp),%edx
8100497e:	89 0a                	mov    %ecx,(%edx)
81004980:	8b 00                	mov    (%eax),%eax
81004982:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004985:	8b 45 0c             	mov    0xc(%ebp),%eax
81004988:	0f b6 40 18          	movzbl 0x18(%eax),%eax
8100498c:	3c 6f                	cmp    $0x6f,%al
8100498e:	75 07                	jne    81004997 <_printf_i+0x153>
81004990:	b8 08 00 00 00       	mov    $0x8,%eax
81004995:	eb 05                	jmp    8100499c <_printf_i+0x158>
81004997:	b8 0a 00 00 00       	mov    $0xa,%eax
8100499c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100499f:	e9 b1 00 00 00       	jmp    81004a55 <_printf_i+0x211>
810049a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810049a7:	c6 40 45 58          	movb   $0x58,0x45(%eax)
810049ab:	eb 1d                	jmp    810049ca <_printf_i+0x186>
810049ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810049b0:	8b 00                	mov    (%eax),%eax
810049b2:	83 c8 20             	or     $0x20,%eax
810049b5:	89 c2                	mov    %eax,%edx
810049b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ba:	89 10                	mov    %edx,(%eax)
810049bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810049bf:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810049c3:	c7 45 e8 e1 84 00 81 	movl   $0x810084e1,-0x18(%ebp)
810049ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810049cd:	8b 00                	mov    (%eax),%eax
810049cf:	25 80 00 00 00       	and    $0x80,%eax
810049d4:	85 c0                	test   %eax,%eax
810049d6:	74 11                	je     810049e9 <_printf_i+0x1a5>
810049d8:	8b 45 18             	mov    0x18(%ebp),%eax
810049db:	8b 00                	mov    (%eax),%eax
810049dd:	8d 48 04             	lea    0x4(%eax),%ecx
810049e0:	8b 55 18             	mov    0x18(%ebp),%edx
810049e3:	89 0a                	mov    %ecx,(%edx)
810049e5:	8b 00                	mov    (%eax),%eax
810049e7:	eb 2f                	jmp    81004a18 <_printf_i+0x1d4>
810049e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ec:	8b 00                	mov    (%eax),%eax
810049ee:	83 e0 40             	and    $0x40,%eax
810049f1:	85 c0                	test   %eax,%eax
810049f3:	74 14                	je     81004a09 <_printf_i+0x1c5>
810049f5:	8b 45 18             	mov    0x18(%ebp),%eax
810049f8:	8b 00                	mov    (%eax),%eax
810049fa:	8d 48 04             	lea    0x4(%eax),%ecx
810049fd:	8b 55 18             	mov    0x18(%ebp),%edx
81004a00:	89 0a                	mov    %ecx,(%edx)
81004a02:	8b 00                	mov    (%eax),%eax
81004a04:	0f b7 c0             	movzwl %ax,%eax
81004a07:	eb 0f                	jmp    81004a18 <_printf_i+0x1d4>
81004a09:	8b 45 18             	mov    0x18(%ebp),%eax
81004a0c:	8b 00                	mov    (%eax),%eax
81004a0e:	8d 48 04             	lea    0x4(%eax),%ecx
81004a11:	8b 55 18             	mov    0x18(%ebp),%edx
81004a14:	89 0a                	mov    %ecx,(%edx)
81004a16:	8b 00                	mov    (%eax),%eax
81004a18:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a1b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004a22:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a25:	8b 00                	mov    (%eax),%eax
81004a27:	83 e0 01             	and    $0x1,%eax
81004a2a:	85 c0                	test   %eax,%eax
81004a2c:	74 0f                	je     81004a3d <_printf_i+0x1f9>
81004a2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a31:	8b 00                	mov    (%eax),%eax
81004a33:	83 c8 20             	or     $0x20,%eax
81004a36:	89 c2                	mov    %eax,%edx
81004a38:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a3b:	89 10                	mov    %edx,(%eax)
81004a3d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a41:	75 11                	jne    81004a54 <_printf_i+0x210>
81004a43:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a46:	8b 00                	mov    (%eax),%eax
81004a48:	83 e0 df             	and    $0xffffffdf,%eax
81004a4b:	89 c2                	mov    %eax,%edx
81004a4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a50:	89 10                	mov    %edx,(%eax)
81004a52:	eb 01                	jmp    81004a55 <_printf_i+0x211>
81004a54:	90                   	nop
81004a55:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a58:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004a5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a5f:	8b 50 04             	mov    0x4(%eax),%edx
81004a62:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a65:	89 50 08             	mov    %edx,0x8(%eax)
81004a68:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a6b:	8b 40 08             	mov    0x8(%eax),%eax
81004a6e:	85 c0                	test   %eax,%eax
81004a70:	78 0f                	js     81004a81 <_printf_i+0x23d>
81004a72:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a75:	8b 00                	mov    (%eax),%eax
81004a77:	83 e0 fb             	and    $0xfffffffb,%eax
81004a7a:	89 c2                	mov    %eax,%edx
81004a7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a7f:	89 10                	mov    %edx,(%eax)
81004a81:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a85:	75 0a                	jne    81004a91 <_printf_i+0x24d>
81004a87:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a8a:	8b 40 04             	mov    0x4(%eax),%eax
81004a8d:	85 c0                	test   %eax,%eax
81004a8f:	74 34                	je     81004ac5 <_printf_i+0x281>
81004a91:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004a94:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a97:	ba 00 00 00 00       	mov    $0x0,%edx
81004a9c:	f7 f1                	div    %ecx
81004a9e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004aa1:	01 d0                	add    %edx,%eax
81004aa3:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004aa7:	0f b6 10             	movzbl (%eax),%edx
81004aaa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004aad:	88 10                	mov    %dl,(%eax)
81004aaf:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004ab2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ab5:	ba 00 00 00 00       	mov    $0x0,%edx
81004aba:	f7 f3                	div    %ebx
81004abc:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004abf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ac3:	75 cc                	jne    81004a91 <_printf_i+0x24d>
81004ac5:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004ac9:	75 26                	jne    81004af1 <_printf_i+0x2ad>
81004acb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ace:	8b 00                	mov    (%eax),%eax
81004ad0:	83 e0 01             	and    $0x1,%eax
81004ad3:	85 c0                	test   %eax,%eax
81004ad5:	74 1a                	je     81004af1 <_printf_i+0x2ad>
81004ad7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ada:	8b 50 04             	mov    0x4(%eax),%edx
81004add:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ae0:	8b 40 10             	mov    0x10(%eax),%eax
81004ae3:	39 c2                	cmp    %eax,%edx
81004ae5:	7f 0a                	jg     81004af1 <_printf_i+0x2ad>
81004ae7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004aeb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004aee:	c6 00 30             	movb   $0x30,(%eax)
81004af1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004af4:	83 c0 1b             	add    $0x1b,%eax
81004af7:	83 c0 28             	add    $0x28,%eax
81004afa:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004afd:	89 c2                	mov    %eax,%edx
81004aff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b02:	89 50 10             	mov    %edx,0x10(%eax)
81004b05:	e9 e2 00 00 00       	jmp    81004bec <_printf_i+0x3a8>
81004b0a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b0d:	8b 00                	mov    (%eax),%eax
81004b0f:	25 80 00 00 00       	and    $0x80,%eax
81004b14:	85 c0                	test   %eax,%eax
81004b16:	74 19                	je     81004b31 <_printf_i+0x2ed>
81004b18:	8b 45 18             	mov    0x18(%ebp),%eax
81004b1b:	8b 00                	mov    (%eax),%eax
81004b1d:	8d 48 04             	lea    0x4(%eax),%ecx
81004b20:	8b 55 18             	mov    0x18(%ebp),%edx
81004b23:	89 0a                	mov    %ecx,(%edx)
81004b25:	8b 00                	mov    (%eax),%eax
81004b27:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b2a:	8b 52 14             	mov    0x14(%edx),%edx
81004b2d:	89 10                	mov    %edx,(%eax)
81004b2f:	eb 3f                	jmp    81004b70 <_printf_i+0x32c>
81004b31:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b34:	8b 00                	mov    (%eax),%eax
81004b36:	83 e0 40             	and    $0x40,%eax
81004b39:	85 c0                	test   %eax,%eax
81004b3b:	74 1c                	je     81004b59 <_printf_i+0x315>
81004b3d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b40:	8b 58 14             	mov    0x14(%eax),%ebx
81004b43:	8b 45 18             	mov    0x18(%ebp),%eax
81004b46:	8b 00                	mov    (%eax),%eax
81004b48:	8d 48 04             	lea    0x4(%eax),%ecx
81004b4b:	8b 55 18             	mov    0x18(%ebp),%edx
81004b4e:	89 0a                	mov    %ecx,(%edx)
81004b50:	8b 00                	mov    (%eax),%eax
81004b52:	89 da                	mov    %ebx,%edx
81004b54:	66 89 10             	mov    %dx,(%eax)
81004b57:	eb 17                	jmp    81004b70 <_printf_i+0x32c>
81004b59:	8b 45 18             	mov    0x18(%ebp),%eax
81004b5c:	8b 00                	mov    (%eax),%eax
81004b5e:	8d 48 04             	lea    0x4(%eax),%ecx
81004b61:	8b 55 18             	mov    0x18(%ebp),%edx
81004b64:	89 0a                	mov    %ecx,(%edx)
81004b66:	8b 00                	mov    (%eax),%eax
81004b68:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b6b:	8b 52 14             	mov    0x14(%edx),%edx
81004b6e:	89 10                	mov    %edx,(%eax)
81004b70:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b73:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004b7a:	eb 70                	jmp    81004bec <_printf_i+0x3a8>
81004b7c:	8b 45 18             	mov    0x18(%ebp),%eax
81004b7f:	8b 00                	mov    (%eax),%eax
81004b81:	8d 48 04             	lea    0x4(%eax),%ecx
81004b84:	8b 55 18             	mov    0x18(%ebp),%edx
81004b87:	89 0a                	mov    %ecx,(%edx)
81004b89:	8b 00                	mov    (%eax),%eax
81004b8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004b8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b91:	8b 40 04             	mov    0x4(%eax),%eax
81004b94:	83 ec 04             	sub    $0x4,%esp
81004b97:	50                   	push   %eax
81004b98:	6a 00                	push   $0x0
81004b9a:	ff 75 ec             	push   -0x14(%ebp)
81004b9d:	e8 de f3 ff ff       	call   81003f80 <memchr>
81004ba2:	83 c4 10             	add    $0x10,%esp
81004ba5:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004ba8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004bac:	74 0e                	je     81004bbc <_printf_i+0x378>
81004bae:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004bb1:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004bb4:	89 c2                	mov    %eax,%edx
81004bb6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bb9:	89 50 04             	mov    %edx,0x4(%eax)
81004bbc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bbf:	8b 50 04             	mov    0x4(%eax),%edx
81004bc2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bc5:	89 50 10             	mov    %edx,0x10(%eax)
81004bc8:	eb 1a                	jmp    81004be4 <_printf_i+0x3a0>
81004bca:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bd1:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004bd5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004bd8:	88 10                	mov    %dl,(%eax)
81004bda:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bdd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004be4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004be7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004beb:	90                   	nop
81004bec:	83 ec 0c             	sub    $0xc,%esp
81004bef:	ff 75 14             	push   0x14(%ebp)
81004bf2:	ff 75 10             	push   0x10(%ebp)
81004bf5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81004bf8:	50                   	push   %eax
81004bf9:	ff 75 0c             	push   0xc(%ebp)
81004bfc:	ff 75 08             	push   0x8(%ebp)
81004bff:	e8 a5 fa ff ff       	call   810046a9 <_printf_common>
81004c04:	83 c4 20             	add    $0x20,%esp
81004c07:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004c0a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81004c0e:	74 72                	je     81004c82 <_printf_i+0x43e>
81004c10:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c13:	8b 40 10             	mov    0x10(%eax),%eax
81004c16:	50                   	push   %eax
81004c17:	ff 75 ec             	push   -0x14(%ebp)
81004c1a:	ff 75 10             	push   0x10(%ebp)
81004c1d:	ff 75 08             	push   0x8(%ebp)
81004c20:	8b 45 14             	mov    0x14(%ebp),%eax
81004c23:	ff d0                	call   *%eax
81004c25:	83 c4 10             	add    $0x10,%esp
81004c28:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c2b:	74 58                	je     81004c85 <_printf_i+0x441>
81004c2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c30:	8b 00                	mov    (%eax),%eax
81004c32:	83 e0 02             	and    $0x2,%eax
81004c35:	85 c0                	test   %eax,%eax
81004c37:	74 39                	je     81004c72 <_printf_i+0x42e>
81004c39:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81004c40:	eb 20                	jmp    81004c62 <_printf_i+0x41e>
81004c42:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c45:	83 c0 19             	add    $0x19,%eax
81004c48:	6a 01                	push   $0x1
81004c4a:	50                   	push   %eax
81004c4b:	ff 75 10             	push   0x10(%ebp)
81004c4e:	ff 75 08             	push   0x8(%ebp)
81004c51:	8b 45 14             	mov    0x14(%ebp),%eax
81004c54:	ff d0                	call   *%eax
81004c56:	83 c4 10             	add    $0x10,%esp
81004c59:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c5c:	74 2a                	je     81004c88 <_printf_i+0x444>
81004c5e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81004c62:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c65:	8b 40 0c             	mov    0xc(%eax),%eax
81004c68:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004c6b:	29 d0                	sub    %edx,%eax
81004c6d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004c70:	7c d0                	jl     81004c42 <_printf_i+0x3fe>
81004c72:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c75:	8b 50 0c             	mov    0xc(%eax),%edx
81004c78:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004c7b:	39 c2                	cmp    %eax,%edx
81004c7d:	0f 4d c2             	cmovge %edx,%eax
81004c80:	eb 0c                	jmp    81004c8e <_printf_i+0x44a>
81004c82:	90                   	nop
81004c83:	eb 04                	jmp    81004c89 <_printf_i+0x445>
81004c85:	90                   	nop
81004c86:	eb 01                	jmp    81004c89 <_printf_i+0x445>
81004c88:	90                   	nop
81004c89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c8e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004c91:	c9                   	leave  
81004c92:	c3                   	ret    

81004c93 <_open_r>:
81004c93:	55                   	push   %ebp
81004c94:	89 e5                	mov    %esp,%ebp
81004c96:	83 ec 18             	sub    $0x18,%esp
81004c99:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
81004ca0:	00 00 00 
81004ca3:	83 ec 04             	sub    $0x4,%esp
81004ca6:	ff 75 14             	push   0x14(%ebp)
81004ca9:	ff 75 10             	push   0x10(%ebp)
81004cac:	ff 75 0c             	push   0xc(%ebp)
81004caf:	e8 18 be ff ff       	call   81000acc <open>
81004cb4:	83 c4 10             	add    $0x10,%esp
81004cb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004cba:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004cbe:	75 14                	jne    81004cd4 <_open_r+0x41>
81004cc0:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81004cc5:	85 c0                	test   %eax,%eax
81004cc7:	74 0b                	je     81004cd4 <_open_r+0x41>
81004cc9:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81004ccf:	8b 45 08             	mov    0x8(%ebp),%eax
81004cd2:	89 10                	mov    %edx,(%eax)
81004cd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004cd7:	c9                   	leave  
81004cd8:	c3                   	ret    

81004cd9 <_iprintf_r>:
81004cd9:	55                   	push   %ebp
81004cda:	89 e5                	mov    %esp,%ebp
81004cdc:	83 ec 18             	sub    $0x18,%esp
81004cdf:	8d 45 10             	lea    0x10(%ebp),%eax
81004ce2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004ce5:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004ce8:	8b 45 08             	mov    0x8(%ebp),%eax
81004ceb:	8b 40 08             	mov    0x8(%eax),%eax
81004cee:	52                   	push   %edx
81004cef:	ff 75 0c             	push   0xc(%ebp)
81004cf2:	50                   	push   %eax
81004cf3:	ff 75 08             	push   0x8(%ebp)
81004cf6:	e8 58 f6 ff ff       	call   81004353 <_vfiprintf_r>
81004cfb:	83 c4 10             	add    $0x10,%esp
81004cfe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d04:	c9                   	leave  
81004d05:	c3                   	ret    

81004d06 <iprintf>:
81004d06:	55                   	push   %ebp
81004d07:	89 e5                	mov    %esp,%ebp
81004d09:	83 ec 18             	sub    $0x18,%esp
81004d0c:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81004d11:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d14:	8d 45 0c             	lea    0xc(%ebp),%eax
81004d17:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004d1a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004d1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d20:	8b 40 08             	mov    0x8(%eax),%eax
81004d23:	52                   	push   %edx
81004d24:	ff 75 08             	push   0x8(%ebp)
81004d27:	50                   	push   %eax
81004d28:	ff 75 f4             	push   -0xc(%ebp)
81004d2b:	e8 23 f6 ff ff       	call   81004353 <_vfiprintf_r>
81004d30:	83 c4 10             	add    $0x10,%esp
81004d33:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d36:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d39:	c9                   	leave  
81004d3a:	c3                   	ret    

81004d3b <_puts_r>:
81004d3b:	55                   	push   %ebp
81004d3c:	89 e5                	mov    %esp,%ebp
81004d3e:	83 ec 38             	sub    $0x38,%esp
81004d41:	83 ec 0c             	sub    $0xc,%esp
81004d44:	ff 75 0c             	push   0xc(%ebp)
81004d47:	e8 74 0a 00 00       	call   810057c0 <strlen>
81004d4c:	83 c4 10             	add    $0x10,%esp
81004d4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d52:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d55:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004d58:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d5b:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004d5e:	c7 45 d4 78 85 00 81 	movl   $0x81008578,-0x2c(%ebp)
81004d65:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004d6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d6f:	83 c0 01             	add    $0x1,%eax
81004d72:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004d75:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004d78:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004d7b:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81004d82:	8b 45 08             	mov    0x8(%ebp),%eax
81004d85:	8b 40 08             	mov    0x8(%eax),%eax
81004d88:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d8b:	8b 45 08             	mov    0x8(%ebp),%eax
81004d8e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004d91:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81004d95:	74 18                	je     81004daf <_puts_r+0x74>
81004d97:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004d9a:	8b 40 38             	mov    0x38(%eax),%eax
81004d9d:	85 c0                	test   %eax,%eax
81004d9f:	75 0e                	jne    81004daf <_puts_r+0x74>
81004da1:	83 ec 0c             	sub    $0xc,%esp
81004da4:	ff 75 ec             	push   -0x14(%ebp)
81004da7:	e8 97 c8 ff ff       	call   81001643 <__sinit>
81004dac:	83 c4 10             	add    $0x10,%esp
81004daf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004db2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004db6:	98                   	cwtl   
81004db7:	25 00 20 00 00       	and    $0x2000,%eax
81004dbc:	85 c0                	test   %eax,%eax
81004dbe:	75 24                	jne    81004de4 <_puts_r+0xa9>
81004dc0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004dc3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004dc7:	80 cc 20             	or     $0x20,%ah
81004dca:	89 c2                	mov    %eax,%edx
81004dcc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004dcf:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004dd3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004dd6:	8b 40 64             	mov    0x64(%eax),%eax
81004dd9:	80 e4 df             	and    $0xdf,%ah
81004ddc:	89 c2                	mov    %eax,%edx
81004dde:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004de1:	89 50 64             	mov    %edx,0x64(%eax)
81004de4:	83 ec 04             	sub    $0x4,%esp
81004de7:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004dea:	50                   	push   %eax
81004deb:	ff 75 f0             	push   -0x10(%ebp)
81004dee:	ff 75 08             	push   0x8(%ebp)
81004df1:	e8 a4 15 00 00       	call   8100639a <__sfvwrite_r>
81004df6:	83 c4 10             	add    $0x10,%esp
81004df9:	85 c0                	test   %eax,%eax
81004dfb:	74 07                	je     81004e04 <_puts_r+0xc9>
81004dfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e02:	eb 05                	jmp    81004e09 <_puts_r+0xce>
81004e04:	b8 0a 00 00 00       	mov    $0xa,%eax
81004e09:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004e0c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004e0f:	c9                   	leave  
81004e10:	c3                   	ret    

81004e11 <puts>:
81004e11:	55                   	push   %ebp
81004e12:	89 e5                	mov    %esp,%ebp
81004e14:	83 ec 08             	sub    $0x8,%esp
81004e17:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81004e1c:	83 ec 08             	sub    $0x8,%esp
81004e1f:	ff 75 08             	push   0x8(%ebp)
81004e22:	50                   	push   %eax
81004e23:	e8 13 ff ff ff       	call   81004d3b <_puts_r>
81004e28:	83 c4 10             	add    $0x10,%esp
81004e2b:	c9                   	leave  
81004e2c:	c3                   	ret    

81004e2d <cleanup_glue>:
81004e2d:	55                   	push   %ebp
81004e2e:	89 e5                	mov    %esp,%ebp
81004e30:	83 ec 08             	sub    $0x8,%esp
81004e33:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e36:	8b 00                	mov    (%eax),%eax
81004e38:	85 c0                	test   %eax,%eax
81004e3a:	74 14                	je     81004e50 <cleanup_glue+0x23>
81004e3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e3f:	8b 00                	mov    (%eax),%eax
81004e41:	83 ec 08             	sub    $0x8,%esp
81004e44:	50                   	push   %eax
81004e45:	ff 75 08             	push   0x8(%ebp)
81004e48:	e8 e0 ff ff ff       	call   81004e2d <cleanup_glue>
81004e4d:	83 c4 10             	add    $0x10,%esp
81004e50:	83 ec 08             	sub    $0x8,%esp
81004e53:	ff 75 0c             	push   0xc(%ebp)
81004e56:	ff 75 08             	push   0x8(%ebp)
81004e59:	e8 3b ca ff ff       	call   81001899 <_free_r>
81004e5e:	83 c4 10             	add    $0x10,%esp
81004e61:	90                   	nop
81004e62:	c9                   	leave  
81004e63:	c3                   	ret    

81004e64 <_reclaim_reent>:
81004e64:	55                   	push   %ebp
81004e65:	89 e5                	mov    %esp,%ebp
81004e67:	83 ec 28             	sub    $0x28,%esp
81004e6a:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81004e6f:	39 45 08             	cmp    %eax,0x8(%ebp)
81004e72:	0f 84 49 01 00 00    	je     81004fc1 <_reclaim_reent+0x15d>
81004e78:	8b 45 08             	mov    0x8(%ebp),%eax
81004e7b:	8b 40 4c             	mov    0x4c(%eax),%eax
81004e7e:	85 c0                	test   %eax,%eax
81004e80:	74 64                	je     81004ee6 <_reclaim_reent+0x82>
81004e82:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004e89:	eb 3e                	jmp    81004ec9 <_reclaim_reent+0x65>
81004e8b:	8b 45 08             	mov    0x8(%ebp),%eax
81004e8e:	8b 50 4c             	mov    0x4c(%eax),%edx
81004e91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e94:	c1 e0 02             	shl    $0x2,%eax
81004e97:	01 d0                	add    %edx,%eax
81004e99:	8b 00                	mov    (%eax),%eax
81004e9b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e9e:	eb 1f                	jmp    81004ebf <_reclaim_reent+0x5b>
81004ea0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ea3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004ea6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ea9:	8b 00                	mov    (%eax),%eax
81004eab:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004eae:	83 ec 08             	sub    $0x8,%esp
81004eb1:	ff 75 e8             	push   -0x18(%ebp)
81004eb4:	ff 75 08             	push   0x8(%ebp)
81004eb7:	e8 dd c9 ff ff       	call   81001899 <_free_r>
81004ebc:	83 c4 10             	add    $0x10,%esp
81004ebf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004ec3:	75 db                	jne    81004ea0 <_reclaim_reent+0x3c>
81004ec5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004ec9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ecc:	83 f8 1f             	cmp    $0x1f,%eax
81004ecf:	76 ba                	jbe    81004e8b <_reclaim_reent+0x27>
81004ed1:	8b 45 08             	mov    0x8(%ebp),%eax
81004ed4:	8b 40 4c             	mov    0x4c(%eax),%eax
81004ed7:	83 ec 08             	sub    $0x8,%esp
81004eda:	50                   	push   %eax
81004edb:	ff 75 08             	push   0x8(%ebp)
81004ede:	e8 b6 c9 ff ff       	call   81001899 <_free_r>
81004ee3:	83 c4 10             	add    $0x10,%esp
81004ee6:	8b 45 08             	mov    0x8(%ebp),%eax
81004ee9:	8b 40 40             	mov    0x40(%eax),%eax
81004eec:	85 c0                	test   %eax,%eax
81004eee:	74 15                	je     81004f05 <_reclaim_reent+0xa1>
81004ef0:	8b 45 08             	mov    0x8(%ebp),%eax
81004ef3:	8b 40 40             	mov    0x40(%eax),%eax
81004ef6:	83 ec 08             	sub    $0x8,%esp
81004ef9:	50                   	push   %eax
81004efa:	ff 75 08             	push   0x8(%ebp)
81004efd:	e8 97 c9 ff ff       	call   81001899 <_free_r>
81004f02:	83 c4 10             	add    $0x10,%esp
81004f05:	8b 45 08             	mov    0x8(%ebp),%eax
81004f08:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004f0e:	85 c0                	test   %eax,%eax
81004f10:	74 50                	je     81004f62 <_reclaim_reent+0xfe>
81004f12:	8b 45 08             	mov    0x8(%ebp),%eax
81004f15:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004f1b:	8b 55 08             	mov    0x8(%ebp),%edx
81004f1e:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004f24:	39 d0                	cmp    %edx,%eax
81004f26:	74 3a                	je     81004f62 <_reclaim_reent+0xfe>
81004f28:	8b 45 08             	mov    0x8(%ebp),%eax
81004f2b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004f31:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004f34:	eb 1f                	jmp    81004f55 <_reclaim_reent+0xf1>
81004f36:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f39:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004f3c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f3f:	8b 00                	mov    (%eax),%eax
81004f41:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004f44:	83 ec 08             	sub    $0x8,%esp
81004f47:	ff 75 e4             	push   -0x1c(%ebp)
81004f4a:	ff 75 08             	push   0x8(%ebp)
81004f4d:	e8 47 c9 ff ff       	call   81001899 <_free_r>
81004f52:	83 c4 10             	add    $0x10,%esp
81004f55:	8b 45 08             	mov    0x8(%ebp),%eax
81004f58:	05 4c 01 00 00       	add    $0x14c,%eax
81004f5d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81004f60:	75 d4                	jne    81004f36 <_reclaim_reent+0xd2>
81004f62:	8b 45 08             	mov    0x8(%ebp),%eax
81004f65:	8b 40 54             	mov    0x54(%eax),%eax
81004f68:	85 c0                	test   %eax,%eax
81004f6a:	74 15                	je     81004f81 <_reclaim_reent+0x11d>
81004f6c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f6f:	8b 40 54             	mov    0x54(%eax),%eax
81004f72:	83 ec 08             	sub    $0x8,%esp
81004f75:	50                   	push   %eax
81004f76:	ff 75 08             	push   0x8(%ebp)
81004f79:	e8 1b c9 ff ff       	call   81001899 <_free_r>
81004f7e:	83 c4 10             	add    $0x10,%esp
81004f81:	8b 45 08             	mov    0x8(%ebp),%eax
81004f84:	8b 40 38             	mov    0x38(%eax),%eax
81004f87:	85 c0                	test   %eax,%eax
81004f89:	74 36                	je     81004fc1 <_reclaim_reent+0x15d>
81004f8b:	8b 45 08             	mov    0x8(%ebp),%eax
81004f8e:	8b 40 3c             	mov    0x3c(%eax),%eax
81004f91:	83 ec 0c             	sub    $0xc,%esp
81004f94:	ff 75 08             	push   0x8(%ebp)
81004f97:	ff d0                	call   *%eax
81004f99:	83 c4 10             	add    $0x10,%esp
81004f9c:	8b 45 08             	mov    0x8(%ebp),%eax
81004f9f:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004fa5:	85 c0                	test   %eax,%eax
81004fa7:	74 18                	je     81004fc1 <_reclaim_reent+0x15d>
81004fa9:	8b 45 08             	mov    0x8(%ebp),%eax
81004fac:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004fb2:	83 ec 08             	sub    $0x8,%esp
81004fb5:	50                   	push   %eax
81004fb6:	ff 75 08             	push   0x8(%ebp)
81004fb9:	e8 6f fe ff ff       	call   81004e2d <cleanup_glue>
81004fbe:	83 c4 10             	add    $0x10,%esp
81004fc1:	90                   	nop
81004fc2:	c9                   	leave  
81004fc3:	c3                   	ret    

81004fc4 <lflush>:
81004fc4:	55                   	push   %ebp
81004fc5:	89 e5                	mov    %esp,%ebp
81004fc7:	83 ec 08             	sub    $0x8,%esp
81004fca:	8b 45 08             	mov    0x8(%ebp),%eax
81004fcd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004fd1:	98                   	cwtl   
81004fd2:	83 e0 09             	and    $0x9,%eax
81004fd5:	83 f8 09             	cmp    $0x9,%eax
81004fd8:	75 10                	jne    81004fea <lflush+0x26>
81004fda:	83 ec 0c             	sub    $0xc,%esp
81004fdd:	ff 75 08             	push   0x8(%ebp)
81004fe0:	e8 b3 c1 ff ff       	call   81001198 <fflush>
81004fe5:	83 c4 10             	add    $0x10,%esp
81004fe8:	eb 05                	jmp    81004fef <lflush+0x2b>
81004fea:	b8 00 00 00 00       	mov    $0x0,%eax
81004fef:	c9                   	leave  
81004ff0:	c3                   	ret    

81004ff1 <__srefill_r>:
81004ff1:	55                   	push   %ebp
81004ff2:	89 e5                	mov    %esp,%ebp
81004ff4:	56                   	push   %esi
81004ff5:	53                   	push   %ebx
81004ff6:	83 ec 10             	sub    $0x10,%esp
81004ff9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004ffc:	8b 45 08             	mov    0x8(%ebp),%eax
81004fff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005002:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005006:	74 18                	je     81005020 <__srefill_r+0x2f>
81005008:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100500b:	8b 40 38             	mov    0x38(%eax),%eax
8100500e:	85 c0                	test   %eax,%eax
81005010:	75 0e                	jne    81005020 <__srefill_r+0x2f>
81005012:	83 ec 0c             	sub    $0xc,%esp
81005015:	ff 75 f4             	push   -0xc(%ebp)
81005018:	e8 26 c6 ff ff       	call   81001643 <__sinit>
8100501d:	83 c4 10             	add    $0x10,%esp
81005020:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005024:	98                   	cwtl   
81005025:	25 00 20 00 00       	and    $0x2000,%eax
8100502a:	85 c0                	test   %eax,%eax
8100502c:	75 14                	jne    81005042 <__srefill_r+0x51>
8100502e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005032:	80 cc 20             	or     $0x20,%ah
81005035:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005039:	8b 43 64             	mov    0x64(%ebx),%eax
8100503c:	80 e4 df             	and    $0xdf,%ah
8100503f:	89 43 64             	mov    %eax,0x64(%ebx)
81005042:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005049:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100504d:	98                   	cwtl   
8100504e:	83 e0 20             	and    $0x20,%eax
81005051:	85 c0                	test   %eax,%eax
81005053:	74 0a                	je     8100505f <__srefill_r+0x6e>
81005055:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100505a:	e9 8c 01 00 00       	jmp    810051eb <__srefill_r+0x1fa>
8100505f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005063:	98                   	cwtl   
81005064:	83 e0 04             	and    $0x4,%eax
81005067:	85 c0                	test   %eax,%eax
81005069:	75 79                	jne    810050e4 <__srefill_r+0xf3>
8100506b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100506f:	98                   	cwtl   
81005070:	83 e0 10             	and    $0x10,%eax
81005073:	85 c0                	test   %eax,%eax
81005075:	75 1e                	jne    81005095 <__srefill_r+0xa4>
81005077:	8b 45 08             	mov    0x8(%ebp),%eax
8100507a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005080:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005084:	83 c8 40             	or     $0x40,%eax
81005087:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100508b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005090:	e9 56 01 00 00       	jmp    810051eb <__srefill_r+0x1fa>
81005095:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005099:	98                   	cwtl   
8100509a:	83 e0 08             	and    $0x8,%eax
8100509d:	85 c0                	test   %eax,%eax
8100509f:	74 36                	je     810050d7 <__srefill_r+0xe6>
810050a1:	83 ec 08             	sub    $0x8,%esp
810050a4:	53                   	push   %ebx
810050a5:	ff 75 08             	push   0x8(%ebp)
810050a8:	e8 93 c0 ff ff       	call   81001140 <_fflush_r>
810050ad:	83 c4 10             	add    $0x10,%esp
810050b0:	85 c0                	test   %eax,%eax
810050b2:	74 0a                	je     810050be <__srefill_r+0xcd>
810050b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050b9:	e9 2d 01 00 00       	jmp    810051eb <__srefill_r+0x1fa>
810050be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050c2:	83 e0 f7             	and    $0xfffffff7,%eax
810050c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050c9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810050d0:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810050d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050db:	83 c8 04             	or     $0x4,%eax
810050de:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050e2:	eb 46                	jmp    8100512a <__srefill_r+0x139>
810050e4:	8b 43 30             	mov    0x30(%ebx),%eax
810050e7:	85 c0                	test   %eax,%eax
810050e9:	74 3f                	je     8100512a <__srefill_r+0x139>
810050eb:	8b 53 30             	mov    0x30(%ebx),%edx
810050ee:	8d 43 40             	lea    0x40(%ebx),%eax
810050f1:	39 c2                	cmp    %eax,%edx
810050f3:	74 12                	je     81005107 <__srefill_r+0x116>
810050f5:	8b 43 30             	mov    0x30(%ebx),%eax
810050f8:	83 ec 08             	sub    $0x8,%esp
810050fb:	50                   	push   %eax
810050fc:	ff 75 08             	push   0x8(%ebp)
810050ff:	e8 95 c7 ff ff       	call   81001899 <_free_r>
81005104:	83 c4 10             	add    $0x10,%esp
81005107:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100510e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005111:	89 43 04             	mov    %eax,0x4(%ebx)
81005114:	8b 43 04             	mov    0x4(%ebx),%eax
81005117:	85 c0                	test   %eax,%eax
81005119:	74 0f                	je     8100512a <__srefill_r+0x139>
8100511b:	8b 43 38             	mov    0x38(%ebx),%eax
8100511e:	89 03                	mov    %eax,(%ebx)
81005120:	b8 00 00 00 00       	mov    $0x0,%eax
81005125:	e9 c1 00 00 00       	jmp    810051eb <__srefill_r+0x1fa>
8100512a:	8b 43 10             	mov    0x10(%ebx),%eax
8100512d:	85 c0                	test   %eax,%eax
8100512f:	75 0f                	jne    81005140 <__srefill_r+0x14f>
81005131:	83 ec 08             	sub    $0x8,%esp
81005134:	53                   	push   %ebx
81005135:	ff 75 08             	push   0x8(%ebp)
81005138:	e8 d3 e1 ff ff       	call   81003310 <__smakebuf_r>
8100513d:	83 c4 10             	add    $0x10,%esp
81005140:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005144:	98                   	cwtl   
81005145:	83 e0 03             	and    $0x3,%eax
81005148:	85 c0                	test   %eax,%eax
8100514a:	74 48                	je     81005194 <__srefill_r+0x1a3>
8100514c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005150:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005154:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100515a:	a1 b8 84 00 81       	mov    0x810084b8,%eax
8100515f:	83 ec 08             	sub    $0x8,%esp
81005162:	68 c4 4f 00 81       	push   $0x81004fc4
81005167:	50                   	push   %eax
81005168:	e8 b9 d1 ff ff       	call   81002326 <_fwalk>
8100516d:	83 c4 10             	add    $0x10,%esp
81005170:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81005174:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005178:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100517c:	98                   	cwtl   
8100517d:	83 e0 09             	and    $0x9,%eax
81005180:	83 f8 09             	cmp    $0x9,%eax
81005183:	75 0f                	jne    81005194 <__srefill_r+0x1a3>
81005185:	83 ec 08             	sub    $0x8,%esp
81005188:	53                   	push   %ebx
81005189:	ff 75 08             	push   0x8(%ebp)
8100518c:	e8 89 bd ff ff       	call   81000f1a <__sflush_r>
81005191:	83 c4 10             	add    $0x10,%esp
81005194:	8b 43 10             	mov    0x10(%ebx),%eax
81005197:	89 03                	mov    %eax,(%ebx)
81005199:	8b 43 20             	mov    0x20(%ebx),%eax
8100519c:	8b 73 14             	mov    0x14(%ebx),%esi
8100519f:	8b 0b                	mov    (%ebx),%ecx
810051a1:	8b 53 1c             	mov    0x1c(%ebx),%edx
810051a4:	56                   	push   %esi
810051a5:	51                   	push   %ecx
810051a6:	52                   	push   %edx
810051a7:	ff 75 08             	push   0x8(%ebp)
810051aa:	ff d0                	call   *%eax
810051ac:	83 c4 10             	add    $0x10,%esp
810051af:	89 43 04             	mov    %eax,0x4(%ebx)
810051b2:	8b 43 04             	mov    0x4(%ebx),%eax
810051b5:	85 c0                	test   %eax,%eax
810051b7:	7f 2d                	jg     810051e6 <__srefill_r+0x1f5>
810051b9:	8b 43 04             	mov    0x4(%ebx),%eax
810051bc:	85 c0                	test   %eax,%eax
810051be:	75 0d                	jne    810051cd <__srefill_r+0x1dc>
810051c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051c4:	83 c8 20             	or     $0x20,%eax
810051c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810051cb:	eb 12                	jmp    810051df <__srefill_r+0x1ee>
810051cd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810051d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051d8:	83 c8 40             	or     $0x40,%eax
810051db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810051df:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051e4:	eb 05                	jmp    810051eb <__srefill_r+0x1fa>
810051e6:	b8 00 00 00 00       	mov    $0x0,%eax
810051eb:	8d 65 f8             	lea    -0x8(%ebp),%esp
810051ee:	5b                   	pop    %ebx
810051ef:	5e                   	pop    %esi
810051f0:	5d                   	pop    %ebp
810051f1:	c3                   	ret    

810051f2 <_sbrk_r>:
810051f2:	55                   	push   %ebp
810051f3:	89 e5                	mov    %esp,%ebp
810051f5:	83 ec 18             	sub    $0x18,%esp
810051f8:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
810051ff:	00 00 00 
81005202:	83 ec 0c             	sub    $0xc,%esp
81005205:	ff 75 0c             	push   0xc(%ebp)
81005208:	e8 d6 b9 ff ff       	call   81000be3 <sbrk>
8100520d:	83 c4 10             	add    $0x10,%esp
81005210:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005213:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005217:	75 14                	jne    8100522d <_sbrk_r+0x3b>
81005219:	a1 ac 99 00 81       	mov    0x810099ac,%eax
8100521e:	85 c0                	test   %eax,%eax
81005220:	74 0b                	je     8100522d <_sbrk_r+0x3b>
81005222:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81005228:	8b 45 08             	mov    0x8(%ebp),%eax
8100522b:	89 10                	mov    %edx,(%eax)
8100522d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005230:	c9                   	leave  
81005231:	c3                   	ret    

81005232 <setvbuf>:
81005232:	55                   	push   %ebp
81005233:	89 e5                	mov    %esp,%ebp
81005235:	57                   	push   %edi
81005236:	56                   	push   %esi
81005237:	53                   	push   %ebx
81005238:	83 ec 2c             	sub    $0x2c,%esp
8100523b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100523e:	8b 7d 10             	mov    0x10(%ebp),%edi
81005241:	8b 75 14             	mov    0x14(%ebp),%esi
81005244:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100524b:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81005250:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005253:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005256:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005259:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100525d:	74 18                	je     81005277 <setvbuf+0x45>
8100525f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005262:	8b 40 38             	mov    0x38(%eax),%eax
81005265:	85 c0                	test   %eax,%eax
81005267:	75 0e                	jne    81005277 <setvbuf+0x45>
81005269:	83 ec 0c             	sub    $0xc,%esp
8100526c:	ff 75 dc             	push   -0x24(%ebp)
8100526f:	e8 cf c3 ff ff       	call   81001643 <__sinit>
81005274:	83 c4 10             	add    $0x10,%esp
81005277:	83 ff 02             	cmp    $0x2,%edi
8100527a:	74 19                	je     81005295 <setvbuf+0x63>
8100527c:	85 ff                	test   %edi,%edi
8100527e:	74 05                	je     81005285 <setvbuf+0x53>
81005280:	83 ff 01             	cmp    $0x1,%edi
81005283:	75 06                	jne    8100528b <setvbuf+0x59>
81005285:	89 f0                	mov    %esi,%eax
81005287:	85 c0                	test   %eax,%eax
81005289:	79 0a                	jns    81005295 <setvbuf+0x63>
8100528b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005290:	e9 a1 01 00 00       	jmp    81005436 <setvbuf+0x204>
81005295:	83 ec 08             	sub    $0x8,%esp
81005298:	53                   	push   %ebx
81005299:	ff 75 e0             	push   -0x20(%ebp)
8100529c:	e8 9f be ff ff       	call   81001140 <_fflush_r>
810052a1:	83 c4 10             	add    $0x10,%esp
810052a4:	8b 43 30             	mov    0x30(%ebx),%eax
810052a7:	85 c0                	test   %eax,%eax
810052a9:	74 23                	je     810052ce <setvbuf+0x9c>
810052ab:	8b 53 30             	mov    0x30(%ebx),%edx
810052ae:	8d 43 40             	lea    0x40(%ebx),%eax
810052b1:	39 c2                	cmp    %eax,%edx
810052b3:	74 12                	je     810052c7 <setvbuf+0x95>
810052b5:	8b 43 30             	mov    0x30(%ebx),%eax
810052b8:	83 ec 08             	sub    $0x8,%esp
810052bb:	50                   	push   %eax
810052bc:	ff 75 e0             	push   -0x20(%ebp)
810052bf:	e8 d5 c5 ff ff       	call   81001899 <_free_r>
810052c4:	83 c4 10             	add    $0x10,%esp
810052c7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810052ce:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810052d5:	8b 43 18             	mov    0x18(%ebx),%eax
810052d8:	89 43 04             	mov    %eax,0x4(%ebx)
810052db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052df:	98                   	cwtl   
810052e0:	25 80 00 00 00       	and    $0x80,%eax
810052e5:	85 c0                	test   %eax,%eax
810052e7:	74 12                	je     810052fb <setvbuf+0xc9>
810052e9:	8b 43 10             	mov    0x10(%ebx),%eax
810052ec:	83 ec 08             	sub    $0x8,%esp
810052ef:	50                   	push   %eax
810052f0:	ff 75 e0             	push   -0x20(%ebp)
810052f3:	e8 a1 c5 ff ff       	call   81001899 <_free_r>
810052f8:	83 c4 10             	add    $0x10,%esp
810052fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ff:	66 25 5c f3          	and    $0xf35c,%ax
81005303:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005307:	83 ff 02             	cmp    $0x2,%edi
8100530a:	74 6f                	je     8100537b <setvbuf+0x149>
8100530c:	8d 45 d4             	lea    -0x2c(%ebp),%eax
8100530f:	50                   	push   %eax
81005310:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005313:	50                   	push   %eax
81005314:	53                   	push   %ebx
81005315:	ff 75 e0             	push   -0x20(%ebp)
81005318:	e8 e0 e0 ff ff       	call   810033fd <__swhatbuf_r>
8100531d:	83 c4 10             	add    $0x10,%esp
81005320:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005324:	09 d0                	or     %edx,%eax
81005326:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100532a:	85 f6                	test   %esi,%esi
8100532c:	75 0a                	jne    81005338 <setvbuf+0x106>
8100532e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005335:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005338:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100533c:	75 73                	jne    810053b1 <setvbuf+0x17f>
8100533e:	83 ec 0c             	sub    $0xc,%esp
81005341:	56                   	push   %esi
81005342:	e8 49 e1 ff ff       	call   81003490 <malloc>
81005347:	83 c4 10             	add    $0x10,%esp
8100534a:	89 45 0c             	mov    %eax,0xc(%ebp)
8100534d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005351:	75 20                	jne    81005373 <setvbuf+0x141>
81005353:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100535a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100535d:	39 c6                	cmp    %eax,%esi
8100535f:	74 12                	je     81005373 <setvbuf+0x141>
81005361:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005364:	83 ec 0c             	sub    $0xc,%esp
81005367:	56                   	push   %esi
81005368:	e8 23 e1 ff ff       	call   81003490 <malloc>
8100536d:	83 c4 10             	add    $0x10,%esp
81005370:	89 45 0c             	mov    %eax,0xc(%ebp)
81005373:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005377:	75 2e                	jne    810053a7 <setvbuf+0x175>
81005379:	eb 01                	jmp    8100537c <setvbuf+0x14a>
8100537b:	90                   	nop
8100537c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005380:	83 c8 02             	or     $0x2,%eax
81005383:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005387:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100538e:	8d 43 43             	lea    0x43(%ebx),%eax
81005391:	89 03                	mov    %eax,(%ebx)
81005393:	8b 03                	mov    (%ebx),%eax
81005395:	89 43 10             	mov    %eax,0x10(%ebx)
81005398:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100539f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810053a2:	e9 8f 00 00 00       	jmp    81005436 <setvbuf+0x204>
810053a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053ab:	0c 80                	or     $0x80,%al
810053ad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053b1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810053b4:	8b 40 38             	mov    0x38(%eax),%eax
810053b7:	85 c0                	test   %eax,%eax
810053b9:	75 0e                	jne    810053c9 <setvbuf+0x197>
810053bb:	83 ec 0c             	sub    $0xc,%esp
810053be:	ff 75 e0             	push   -0x20(%ebp)
810053c1:	e8 7d c2 ff ff       	call   81001643 <__sinit>
810053c6:	83 c4 10             	add    $0x10,%esp
810053c9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810053cc:	39 c6                	cmp    %eax,%esi
810053ce:	74 0b                	je     810053db <setvbuf+0x1a9>
810053d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053d4:	80 cc 08             	or     $0x8,%ah
810053d7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053db:	83 ff 01             	cmp    $0x1,%edi
810053de:	75 0b                	jne    810053eb <setvbuf+0x1b9>
810053e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053e4:	83 c8 01             	or     $0x1,%eax
810053e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810053ee:	89 03                	mov    %eax,(%ebx)
810053f0:	8b 03                	mov    (%ebx),%eax
810053f2:	89 43 10             	mov    %eax,0x10(%ebx)
810053f5:	89 f0                	mov    %esi,%eax
810053f7:	89 43 14             	mov    %eax,0x14(%ebx)
810053fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053fe:	98                   	cwtl   
810053ff:	83 e0 08             	and    $0x8,%eax
81005402:	85 c0                	test   %eax,%eax
81005404:	74 24                	je     8100542a <setvbuf+0x1f8>
81005406:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100540a:	98                   	cwtl   
8100540b:	83 e0 01             	and    $0x1,%eax
8100540e:	85 c0                	test   %eax,%eax
81005410:	74 11                	je     81005423 <setvbuf+0x1f1>
81005412:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005419:	8b 43 14             	mov    0x14(%ebx),%eax
8100541c:	f7 d8                	neg    %eax
8100541e:	89 43 18             	mov    %eax,0x18(%ebx)
81005421:	eb 0e                	jmp    81005431 <setvbuf+0x1ff>
81005423:	89 f0                	mov    %esi,%eax
81005425:	89 43 08             	mov    %eax,0x8(%ebx)
81005428:	eb 07                	jmp    81005431 <setvbuf+0x1ff>
8100542a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005431:	b8 00 00 00 00       	mov    $0x0,%eax
81005436:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005439:	5b                   	pop    %ebx
8100543a:	5e                   	pop    %esi
8100543b:	5f                   	pop    %edi
8100543c:	5d                   	pop    %ebp
8100543d:	c3                   	ret    

8100543e <_siprintf_r>:
8100543e:	55                   	push   %ebp
8100543f:	89 e5                	mov    %esp,%ebp
81005441:	83 ec 78             	sub    $0x78,%esp
81005444:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
8100544a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100544d:	89 45 88             	mov    %eax,-0x78(%ebp)
81005450:	8b 45 88             	mov    -0x78(%ebp),%eax
81005453:	89 45 98             	mov    %eax,-0x68(%ebp)
81005456:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
8100545d:	8b 45 90             	mov    -0x70(%ebp),%eax
81005460:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005463:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81005469:	8d 45 14             	lea    0x14(%ebp),%eax
8100546c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100546f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005472:	50                   	push   %eax
81005473:	ff 75 10             	push   0x10(%ebp)
81005476:	8d 45 88             	lea    -0x78(%ebp),%eax
81005479:	50                   	push   %eax
8100547a:	ff 75 08             	push   0x8(%ebp)
8100547d:	e8 14 1c 00 00       	call   81007096 <_svfiprintf_r>
81005482:	83 c4 10             	add    $0x10,%esp
81005485:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005488:	8b 45 88             	mov    -0x78(%ebp),%eax
8100548b:	c6 00 00             	movb   $0x0,(%eax)
8100548e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005491:	c9                   	leave  
81005492:	c3                   	ret    

81005493 <siprintf>:
81005493:	55                   	push   %ebp
81005494:	89 e5                	mov    %esp,%ebp
81005496:	83 ec 78             	sub    $0x78,%esp
81005499:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
8100549f:	8b 45 08             	mov    0x8(%ebp),%eax
810054a2:	89 45 88             	mov    %eax,-0x78(%ebp)
810054a5:	8b 45 88             	mov    -0x78(%ebp),%eax
810054a8:	89 45 98             	mov    %eax,-0x68(%ebp)
810054ab:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810054b2:	8b 45 90             	mov    -0x70(%ebp),%eax
810054b5:	89 45 9c             	mov    %eax,-0x64(%ebp)
810054b8:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810054be:	8d 45 10             	lea    0x10(%ebp),%eax
810054c1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810054c4:	8b 55 f0             	mov    -0x10(%ebp),%edx
810054c7:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810054cc:	52                   	push   %edx
810054cd:	ff 75 0c             	push   0xc(%ebp)
810054d0:	8d 55 88             	lea    -0x78(%ebp),%edx
810054d3:	52                   	push   %edx
810054d4:	50                   	push   %eax
810054d5:	e8 bc 1b 00 00       	call   81007096 <_svfiprintf_r>
810054da:	83 c4 10             	add    $0x10,%esp
810054dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810054e0:	8b 45 88             	mov    -0x78(%ebp),%eax
810054e3:	c6 00 00             	movb   $0x0,(%eax)
810054e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810054e9:	c9                   	leave  
810054ea:	c3                   	ret    

810054eb <__sread>:
810054eb:	55                   	push   %ebp
810054ec:	89 e5                	mov    %esp,%ebp
810054ee:	56                   	push   %esi
810054ef:	53                   	push   %ebx
810054f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810054f3:	8b 55 14             	mov    0x14(%ebp),%edx
810054f6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810054fa:	98                   	cwtl   
810054fb:	52                   	push   %edx
810054fc:	ff 75 10             	push   0x10(%ebp)
810054ff:	50                   	push   %eax
81005500:	ff 75 08             	push   0x8(%ebp)
81005503:	e8 cc 1f 00 00       	call   810074d4 <_read_r>
81005508:	83 c4 10             	add    $0x10,%esp
8100550b:	89 c6                	mov    %eax,%esi
8100550d:	85 f6                	test   %esi,%esi
8100550f:	78 0a                	js     8100551b <__sread+0x30>
81005511:	8b 43 50             	mov    0x50(%ebx),%eax
81005514:	01 f0                	add    %esi,%eax
81005516:	89 43 50             	mov    %eax,0x50(%ebx)
81005519:	eb 0b                	jmp    81005526 <__sread+0x3b>
8100551b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100551f:	80 e4 ef             	and    $0xef,%ah
81005522:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005526:	89 f0                	mov    %esi,%eax
81005528:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100552b:	5b                   	pop    %ebx
8100552c:	5e                   	pop    %esi
8100552d:	5d                   	pop    %ebp
8100552e:	c3                   	ret    

8100552f <__seofread>:
8100552f:	55                   	push   %ebp
81005530:	89 e5                	mov    %esp,%ebp
81005532:	b8 00 00 00 00       	mov    $0x0,%eax
81005537:	5d                   	pop    %ebp
81005538:	c3                   	ret    

81005539 <__swrite>:
81005539:	55                   	push   %ebp
8100553a:	89 e5                	mov    %esp,%ebp
8100553c:	53                   	push   %ebx
8100553d:	83 ec 14             	sub    $0x14,%esp
81005540:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005543:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005547:	98                   	cwtl   
81005548:	25 00 01 00 00       	and    $0x100,%eax
8100554d:	85 c0                	test   %eax,%eax
8100554f:	74 15                	je     81005566 <__swrite+0x2d>
81005551:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005555:	98                   	cwtl   
81005556:	6a 02                	push   $0x2
81005558:	6a 00                	push   $0x0
8100555a:	50                   	push   %eax
8100555b:	ff 75 08             	push   0x8(%ebp)
8100555e:	e8 db 15 00 00       	call   81006b3e <_lseek_r>
81005563:	83 c4 10             	add    $0x10,%esp
81005566:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100556a:	80 e4 ef             	and    $0xef,%ah
8100556d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005571:	8b 55 14             	mov    0x14(%ebp),%edx
81005574:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005578:	98                   	cwtl   
81005579:	52                   	push   %edx
8100557a:	ff 75 10             	push   0x10(%ebp)
8100557d:	50                   	push   %eax
8100557e:	ff 75 08             	push   0x8(%ebp)
81005581:	e8 4c 07 00 00       	call   81005cd2 <_write_r>
81005586:	83 c4 10             	add    $0x10,%esp
81005589:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100558c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100558f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005592:	c9                   	leave  
81005593:	c3                   	ret    

81005594 <__sseek>:
81005594:	55                   	push   %ebp
81005595:	89 e5                	mov    %esp,%ebp
81005597:	56                   	push   %esi
81005598:	53                   	push   %ebx
81005599:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100559c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810055a0:	98                   	cwtl   
810055a1:	ff 75 14             	push   0x14(%ebp)
810055a4:	ff 75 10             	push   0x10(%ebp)
810055a7:	50                   	push   %eax
810055a8:	ff 75 08             	push   0x8(%ebp)
810055ab:	e8 8e 15 00 00       	call   81006b3e <_lseek_r>
810055b0:	83 c4 10             	add    $0x10,%esp
810055b3:	89 c6                	mov    %eax,%esi
810055b5:	83 fe ff             	cmp    $0xffffffff,%esi
810055b8:	75 0d                	jne    810055c7 <__sseek+0x33>
810055ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055be:	80 e4 ef             	and    $0xef,%ah
810055c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055c5:	eb 0e                	jmp    810055d5 <__sseek+0x41>
810055c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055cb:	80 cc 10             	or     $0x10,%ah
810055ce:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055d2:	89 73 50             	mov    %esi,0x50(%ebx)
810055d5:	89 f0                	mov    %esi,%eax
810055d7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810055da:	5b                   	pop    %ebx
810055db:	5e                   	pop    %esi
810055dc:	5d                   	pop    %ebp
810055dd:	c3                   	ret    

810055de <__sclose>:
810055de:	55                   	push   %ebp
810055df:	89 e5                	mov    %esp,%ebp
810055e1:	83 ec 18             	sub    $0x18,%esp
810055e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810055e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810055ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055ed:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810055f1:	98                   	cwtl   
810055f2:	83 ec 08             	sub    $0x8,%esp
810055f5:	50                   	push   %eax
810055f6:	ff 75 08             	push   0x8(%ebp)
810055f9:	e8 8a 09 00 00       	call   81005f88 <_close_r>
810055fe:	83 c4 10             	add    $0x10,%esp
81005601:	c9                   	leave  
81005602:	c3                   	ret    
81005603:	66 90                	xchg   %ax,%ax
81005605:	66 90                	xchg   %ax,%ax
81005607:	66 90                	xchg   %ax,%ax
81005609:	66 90                	xchg   %ax,%ax
8100560b:	66 90                	xchg   %ax,%ax
8100560d:	66 90                	xchg   %ax,%ax
8100560f:	90                   	nop

81005610 <strchr>:
81005610:	55                   	push   %ebp
81005611:	89 e5                	mov    %esp,%ebp
81005613:	57                   	push   %edi
81005614:	53                   	push   %ebx
81005615:	31 db                	xor    %ebx,%ebx
81005617:	8b 7d 08             	mov    0x8(%ebp),%edi
8100561a:	02 5d 0c             	add    0xc(%ebp),%bl
8100561d:	0f 84 98 00 00 00    	je     810056bb <L25>
81005623:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005629:	74 37                	je     81005662 <L5>
8100562b:	89 f8                	mov    %edi,%eax
8100562d:	8a 08                	mov    (%eax),%cl
8100562f:	84 c9                	test   %cl,%cl
81005631:	74 7b                	je     810056ae <L14>
81005633:	38 d9                	cmp    %bl,%cl
81005635:	74 7d                	je     810056b4 <L19>
81005637:	47                   	inc    %edi
81005638:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100563e:	74 22                	je     81005662 <L5>
81005640:	89 f8                	mov    %edi,%eax
81005642:	8a 08                	mov    (%eax),%cl
81005644:	84 c9                	test   %cl,%cl
81005646:	74 66                	je     810056ae <L14>
81005648:	38 d9                	cmp    %bl,%cl
8100564a:	74 68                	je     810056b4 <L19>
8100564c:	47                   	inc    %edi
8100564d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005653:	74 0d                	je     81005662 <L5>
81005655:	89 f8                	mov    %edi,%eax
81005657:	8a 08                	mov    (%eax),%cl
81005659:	84 c9                	test   %cl,%cl
8100565b:	74 51                	je     810056ae <L14>
8100565d:	38 d9                	cmp    %bl,%cl
8100565f:	74 53                	je     810056b4 <L19>
81005661:	47                   	inc    %edi

81005662 <L5>:
81005662:	89 d9                	mov    %ebx,%ecx
81005664:	c1 e3 08             	shl    $0x8,%ebx
81005667:	83 ef 04             	sub    $0x4,%edi
8100566a:	09 cb                	or     %ecx,%ebx
8100566c:	89 da                	mov    %ebx,%edx
8100566e:	c1 e3 10             	shl    $0x10,%ebx
81005671:	09 d3                	or     %edx,%ebx

81005673 <L10>:
81005673:	83 c7 04             	add    $0x4,%edi
81005676:	8b 0f                	mov    (%edi),%ecx
81005678:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100567e:	89 c8                	mov    %ecx,%eax
81005680:	f7 d0                	not    %eax
81005682:	21 c2                	and    %eax,%edx
81005684:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100568a:	75 14                	jne    810056a0 <L9>
8100568c:	31 d9                	xor    %ebx,%ecx
8100568e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005694:	f7 d1                	not    %ecx
81005696:	21 ca                	and    %ecx,%edx
81005698:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100569e:	74 d3                	je     81005673 <L10>

810056a0 <L9>:
810056a0:	8d 47 ff             	lea    -0x1(%edi),%eax

810056a3 <L15>:
810056a3:	40                   	inc    %eax
810056a4:	8a 10                	mov    (%eax),%dl
810056a6:	84 d2                	test   %dl,%dl
810056a8:	74 04                	je     810056ae <L14>
810056aa:	38 da                	cmp    %bl,%dl
810056ac:	75 f5                	jne    810056a3 <L15>

810056ae <L14>:
810056ae:	38 18                	cmp    %bl,(%eax)
810056b0:	74 02                	je     810056b4 <L19>
810056b2:	31 c0                	xor    %eax,%eax

810056b4 <L19>:
810056b4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810056b7:	5b                   	pop    %ebx
810056b8:	5f                   	pop    %edi
810056b9:	c9                   	leave  
810056ba:	c3                   	ret    

810056bb <L25>:
810056bb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810056c1:	74 2b                	je     810056ee <L26>
810056c3:	89 f8                	mov    %edi,%eax
810056c5:	8a 08                	mov    (%eax),%cl
810056c7:	84 c9                	test   %cl,%cl
810056c9:	74 e9                	je     810056b4 <L19>
810056cb:	47                   	inc    %edi
810056cc:	f7 c7 03 00 00 00    	test   $0x3,%edi
810056d2:	74 1a                	je     810056ee <L26>
810056d4:	89 f8                	mov    %edi,%eax
810056d6:	8a 08                	mov    (%eax),%cl
810056d8:	84 c9                	test   %cl,%cl
810056da:	74 d8                	je     810056b4 <L19>
810056dc:	47                   	inc    %edi
810056dd:	f7 c7 03 00 00 00    	test   $0x3,%edi
810056e3:	74 09                	je     810056ee <L26>
810056e5:	89 f8                	mov    %edi,%eax
810056e7:	8a 08                	mov    (%eax),%cl
810056e9:	84 c9                	test   %cl,%cl
810056eb:	74 c7                	je     810056b4 <L19>
810056ed:	47                   	inc    %edi

810056ee <L26>:
810056ee:	83 ef 04             	sub    $0x4,%edi

810056f1 <L27>:
810056f1:	83 c7 04             	add    $0x4,%edi
810056f4:	8b 0f                	mov    (%edi),%ecx
810056f6:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810056fc:	89 c8                	mov    %ecx,%eax
810056fe:	f7 d0                	not    %eax
81005700:	21 c2                	and    %eax,%edx
81005702:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005708:	74 e7                	je     810056f1 <L27>
8100570a:	eb 94                	jmp    810056a0 <L9>

8100570c <strcmp>:
8100570c:	55                   	push   %ebp
8100570d:	89 e5                	mov    %esp,%ebp
8100570f:	83 ec 10             	sub    $0x10,%esp
81005712:	8b 55 08             	mov    0x8(%ebp),%edx
81005715:	8b 45 0c             	mov    0xc(%ebp),%eax
81005718:	09 d0                	or     %edx,%eax
8100571a:	83 e0 03             	and    $0x3,%eax
8100571d:	85 c0                	test   %eax,%eax
8100571f:	75 5e                	jne    8100577f <strcmp+0x73>
81005721:	8b 45 08             	mov    0x8(%ebp),%eax
81005724:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005727:	8b 45 0c             	mov    0xc(%ebp),%eax
8100572a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100572d:	eb 2c                	jmp    8100575b <strcmp+0x4f>
8100572f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005732:	8b 00                	mov    (%eax),%eax
81005734:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100573a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100573d:	8b 00                	mov    (%eax),%eax
8100573f:	f7 d0                	not    %eax
81005741:	21 d0                	and    %edx,%eax
81005743:	25 80 80 80 80       	and    $0x80808080,%eax
81005748:	85 c0                	test   %eax,%eax
8100574a:	74 07                	je     81005753 <strcmp+0x47>
8100574c:	b8 00 00 00 00       	mov    $0x0,%eax
81005751:	eb 5c                	jmp    810057af <strcmp+0xa3>
81005753:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81005757:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100575b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100575e:	8b 10                	mov    (%eax),%edx
81005760:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005763:	8b 00                	mov    (%eax),%eax
81005765:	39 c2                	cmp    %eax,%edx
81005767:	74 c6                	je     8100572f <strcmp+0x23>
81005769:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100576c:	89 45 08             	mov    %eax,0x8(%ebp)
8100576f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005772:	89 45 0c             	mov    %eax,0xc(%ebp)
81005775:	eb 08                	jmp    8100577f <strcmp+0x73>
81005777:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100577b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100577f:	8b 45 08             	mov    0x8(%ebp),%eax
81005782:	0f b6 00             	movzbl (%eax),%eax
81005785:	84 c0                	test   %al,%al
81005787:	74 10                	je     81005799 <strcmp+0x8d>
81005789:	8b 45 08             	mov    0x8(%ebp),%eax
8100578c:	0f b6 10             	movzbl (%eax),%edx
8100578f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005792:	0f b6 00             	movzbl (%eax),%eax
81005795:	38 c2                	cmp    %al,%dl
81005797:	74 de                	je     81005777 <strcmp+0x6b>
81005799:	8b 45 08             	mov    0x8(%ebp),%eax
8100579c:	0f b6 00             	movzbl (%eax),%eax
8100579f:	0f b6 d0             	movzbl %al,%edx
810057a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810057a5:	0f b6 00             	movzbl (%eax),%eax
810057a8:	0f b6 c8             	movzbl %al,%ecx
810057ab:	89 d0                	mov    %edx,%eax
810057ad:	29 c8                	sub    %ecx,%eax
810057af:	c9                   	leave  
810057b0:	c3                   	ret    
810057b1:	66 90                	xchg   %ax,%ax
810057b3:	66 90                	xchg   %ax,%ax
810057b5:	66 90                	xchg   %ax,%ax
810057b7:	66 90                	xchg   %ax,%ax
810057b9:	66 90                	xchg   %ax,%ax
810057bb:	66 90                	xchg   %ax,%ax
810057bd:	66 90                	xchg   %ax,%ax
810057bf:	90                   	nop

810057c0 <strlen>:
810057c0:	55                   	push   %ebp
810057c1:	89 e5                	mov    %esp,%ebp
810057c3:	57                   	push   %edi
810057c4:	8b 55 08             	mov    0x8(%ebp),%edx
810057c7:	89 d7                	mov    %edx,%edi
810057c9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810057cf:	74 25                	je     810057f6 <L5>
810057d1:	8a 0f                	mov    (%edi),%cl
810057d3:	47                   	inc    %edi
810057d4:	84 c9                	test   %cl,%cl
810057d6:	74 56                	je     8100582e <L15>
810057d8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810057de:	74 16                	je     810057f6 <L5>
810057e0:	8a 0f                	mov    (%edi),%cl
810057e2:	47                   	inc    %edi
810057e3:	84 c9                	test   %cl,%cl
810057e5:	74 47                	je     8100582e <L15>
810057e7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810057ed:	74 07                	je     810057f6 <L5>
810057ef:	8a 0f                	mov    (%edi),%cl
810057f1:	47                   	inc    %edi
810057f2:	84 c9                	test   %cl,%cl
810057f4:	74 38                	je     8100582e <L15>

810057f6 <L5>:
810057f6:	83 ef 04             	sub    $0x4,%edi
810057f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005800 <L10>:
81005800:	83 c7 04             	add    $0x4,%edi
81005803:	8b 0f                	mov    (%edi),%ecx
81005805:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100580b:	f7 d1                	not    %ecx
8100580d:	21 c8                	and    %ecx,%eax
8100580f:	a9 80 80 80 80       	test   $0x80808080,%eax
81005814:	74 ea                	je     81005800 <L10>
81005816:	f7 d1                	not    %ecx
81005818:	47                   	inc    %edi
81005819:	84 c9                	test   %cl,%cl
8100581b:	74 11                	je     8100582e <L15>
8100581d:	47                   	inc    %edi
8100581e:	c1 e9 08             	shr    $0x8,%ecx
81005821:	84 c9                	test   %cl,%cl
81005823:	74 09                	je     8100582e <L15>
81005825:	47                   	inc    %edi
81005826:	c1 e9 08             	shr    $0x8,%ecx
81005829:	84 c9                	test   %cl,%cl
8100582b:	74 01                	je     8100582e <L15>
8100582d:	47                   	inc    %edi

8100582e <L15>:
8100582e:	29 d7                	sub    %edx,%edi
81005830:	8d 47 ff             	lea    -0x1(%edi),%eax
81005833:	8d 65 fc             	lea    -0x4(%ebp),%esp
81005836:	5f                   	pop    %edi
81005837:	c9                   	leave  
81005838:	c3                   	ret    

81005839 <strtok>:
81005839:	55                   	push   %ebp
8100583a:	89 e5                	mov    %esp,%ebp
8100583c:	83 ec 18             	sub    $0x18,%esp
8100583f:	8b 55 08             	mov    0x8(%ebp),%edx
81005842:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005845:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100584a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100584d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005850:	83 c0 5c             	add    $0x5c,%eax
81005853:	6a 01                	push   $0x1
81005855:	50                   	push   %eax
81005856:	51                   	push   %ecx
81005857:	52                   	push   %edx
81005858:	e8 05 00 00 00       	call   81005862 <__strtok_r>
8100585d:	83 c4 10             	add    $0x10,%esp
81005860:	c9                   	leave  
81005861:	c3                   	ret    

81005862 <__strtok_r>:
81005862:	55                   	push   %ebp
81005863:	89 e5                	mov    %esp,%ebp
81005865:	57                   	push   %edi
81005866:	56                   	push   %esi
81005867:	53                   	push   %ebx
81005868:	83 ec 10             	sub    $0x10,%esp
8100586b:	8b 45 08             	mov    0x8(%ebp),%eax
8100586e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005871:	85 c0                	test   %eax,%eax
81005873:	75 13                	jne    81005888 <__strtok_r+0x26>
81005875:	8b 45 10             	mov    0x10(%ebp),%eax
81005878:	8b 00                	mov    (%eax),%eax
8100587a:	85 c0                	test   %eax,%eax
8100587c:	75 0a                	jne    81005888 <__strtok_r+0x26>
8100587e:	b8 00 00 00 00       	mov    $0x0,%eax
81005883:	e9 92 00 00 00       	jmp    8100591a <__strtok_r+0xb8>
81005888:	90                   	nop
81005889:	89 c2                	mov    %eax,%edx
8100588b:	8d 42 01             	lea    0x1(%edx),%eax
8100588e:	0f b6 12             	movzbl (%edx),%edx
81005891:	0f be f2             	movsbl %dl,%esi
81005894:	89 cf                	mov    %ecx,%edi
81005896:	eb 1c                	jmp    810058b4 <__strtok_r+0x52>
81005898:	39 de                	cmp    %ebx,%esi
8100589a:	75 18                	jne    810058b4 <__strtok_r+0x52>
8100589c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810058a0:	74 02                	je     810058a4 <__strtok_r+0x42>
810058a2:	eb e5                	jmp    81005889 <__strtok_r+0x27>
810058a4:	8b 55 10             	mov    0x10(%ebp),%edx
810058a7:	89 02                	mov    %eax,(%edx)
810058a9:	8d 50 ff             	lea    -0x1(%eax),%edx
810058ac:	c6 02 00             	movb   $0x0,(%edx)
810058af:	83 e8 01             	sub    $0x1,%eax
810058b2:	eb 66                	jmp    8100591a <__strtok_r+0xb8>
810058b4:	89 fa                	mov    %edi,%edx
810058b6:	8d 7a 01             	lea    0x1(%edx),%edi
810058b9:	0f b6 12             	movzbl (%edx),%edx
810058bc:	0f be da             	movsbl %dl,%ebx
810058bf:	85 db                	test   %ebx,%ebx
810058c1:	75 d5                	jne    81005898 <__strtok_r+0x36>
810058c3:	85 f6                	test   %esi,%esi
810058c5:	75 10                	jne    810058d7 <__strtok_r+0x75>
810058c7:	8b 45 10             	mov    0x10(%ebp),%eax
810058ca:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810058d0:	b8 00 00 00 00       	mov    $0x0,%eax
810058d5:	eb 43                	jmp    8100591a <__strtok_r+0xb8>
810058d7:	8d 50 ff             	lea    -0x1(%eax),%edx
810058da:	89 55 f0             	mov    %edx,-0x10(%ebp)
810058dd:	89 c2                	mov    %eax,%edx
810058df:	8d 42 01             	lea    0x1(%edx),%eax
810058e2:	0f b6 12             	movzbl (%edx),%edx
810058e5:	0f be f2             	movsbl %dl,%esi
810058e8:	89 cf                	mov    %ecx,%edi
810058ea:	89 fa                	mov    %edi,%edx
810058ec:	8d 7a 01             	lea    0x1(%edx),%edi
810058ef:	0f b6 12             	movzbl (%edx),%edx
810058f2:	0f be da             	movsbl %dl,%ebx
810058f5:	39 f3                	cmp    %esi,%ebx
810058f7:	75 1b                	jne    81005914 <__strtok_r+0xb2>
810058f9:	85 f6                	test   %esi,%esi
810058fb:	75 07                	jne    81005904 <__strtok_r+0xa2>
810058fd:	b8 00 00 00 00       	mov    $0x0,%eax
81005902:	eb 06                	jmp    8100590a <__strtok_r+0xa8>
81005904:	8d 50 ff             	lea    -0x1(%eax),%edx
81005907:	c6 02 00             	movb   $0x0,(%edx)
8100590a:	8b 55 10             	mov    0x10(%ebp),%edx
8100590d:	89 02                	mov    %eax,(%edx)
8100590f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005912:	eb 06                	jmp    8100591a <__strtok_r+0xb8>
81005914:	85 db                	test   %ebx,%ebx
81005916:	75 d2                	jne    810058ea <__strtok_r+0x88>
81005918:	eb c3                	jmp    810058dd <__strtok_r+0x7b>
8100591a:	83 c4 10             	add    $0x10,%esp
8100591d:	5b                   	pop    %ebx
8100591e:	5e                   	pop    %esi
8100591f:	5f                   	pop    %edi
81005920:	5d                   	pop    %ebp
81005921:	c3                   	ret    

81005922 <strtok_r>:
81005922:	55                   	push   %ebp
81005923:	89 e5                	mov    %esp,%ebp
81005925:	8b 45 08             	mov    0x8(%ebp),%eax
81005928:	8b 55 0c             	mov    0xc(%ebp),%edx
8100592b:	6a 01                	push   $0x1
8100592d:	ff 75 10             	push   0x10(%ebp)
81005930:	52                   	push   %edx
81005931:	50                   	push   %eax
81005932:	e8 2b ff ff ff       	call   81005862 <__strtok_r>
81005937:	83 c4 10             	add    $0x10,%esp
8100593a:	c9                   	leave  
8100593b:	c3                   	ret    

8100593c <__locale_ctype_ptr_l>:
8100593c:	55                   	push   %ebp
8100593d:	89 e5                	mov    %esp,%ebp
8100593f:	b8 00 87 00 81       	mov    $0x81008700,%eax
81005944:	5d                   	pop    %ebp
81005945:	c3                   	ret    

81005946 <__get_global_locale>:
81005946:	55                   	push   %ebp
81005947:	89 e5                	mov    %esp,%ebp
81005949:	b8 a0 90 00 81       	mov    $0x810090a0,%eax
8100594e:	5d                   	pop    %ebp
8100594f:	c3                   	ret    

81005950 <__get_current_locale>:
81005950:	55                   	push   %ebp
81005951:	89 e5                	mov    %esp,%ebp
81005953:	e8 ee ff ff ff       	call   81005946 <__get_global_locale>
81005958:	5d                   	pop    %ebp
81005959:	c3                   	ret    

8100595a <_strtol_l>:
8100595a:	55                   	push   %ebp
8100595b:	89 e5                	mov    %esp,%ebp
8100595d:	57                   	push   %edi
8100595e:	56                   	push   %esi
8100595f:	53                   	push   %ebx
81005960:	83 ec 1c             	sub    $0x1c,%esp
81005963:	8b 75 0c             	mov    0xc(%ebp),%esi
81005966:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100596d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005971:	78 0c                	js     8100597f <_strtol_l+0x25>
81005973:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005977:	74 06                	je     8100597f <_strtol_l+0x25>
81005979:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100597d:	7e 15                	jle    81005994 <_strtol_l+0x3a>
8100597f:	e8 44 06 00 00       	call   81005fc8 <__errno>
81005984:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100598a:	b8 00 00 00 00       	mov    $0x0,%eax
8100598f:	e9 90 01 00 00       	jmp    81005b24 <_strtol_l+0x1ca>
81005994:	89 f0                	mov    %esi,%eax
81005996:	8d 70 01             	lea    0x1(%eax),%esi
81005999:	0f b6 00             	movzbl (%eax),%eax
8100599c:	0f b6 d8             	movzbl %al,%ebx
8100599f:	83 ec 0c             	sub    $0xc,%esp
810059a2:	ff 75 18             	push   0x18(%ebp)
810059a5:	e8 92 ff ff ff       	call   8100593c <__locale_ctype_ptr_l>
810059aa:	83 c4 10             	add    $0x10,%esp
810059ad:	89 da                	mov    %ebx,%edx
810059af:	83 c2 01             	add    $0x1,%edx
810059b2:	01 d0                	add    %edx,%eax
810059b4:	0f b6 00             	movzbl (%eax),%eax
810059b7:	0f be c0             	movsbl %al,%eax
810059ba:	83 e0 08             	and    $0x8,%eax
810059bd:	85 c0                	test   %eax,%eax
810059bf:	75 d3                	jne    81005994 <_strtol_l+0x3a>
810059c1:	83 fb 2d             	cmp    $0x2d,%ebx
810059c4:	75 14                	jne    810059da <_strtol_l+0x80>
810059c6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810059cd:	89 f0                	mov    %esi,%eax
810059cf:	8d 70 01             	lea    0x1(%eax),%esi
810059d2:	0f b6 00             	movzbl (%eax),%eax
810059d5:	0f b6 d8             	movzbl %al,%ebx
810059d8:	eb 10                	jmp    810059ea <_strtol_l+0x90>
810059da:	83 fb 2b             	cmp    $0x2b,%ebx
810059dd:	75 0b                	jne    810059ea <_strtol_l+0x90>
810059df:	89 f0                	mov    %esi,%eax
810059e1:	8d 70 01             	lea    0x1(%eax),%esi
810059e4:	0f b6 00             	movzbl (%eax),%eax
810059e7:	0f b6 d8             	movzbl %al,%ebx
810059ea:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810059ee:	74 06                	je     810059f6 <_strtol_l+0x9c>
810059f0:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
810059f4:	75 26                	jne    81005a1c <_strtol_l+0xc2>
810059f6:	83 fb 30             	cmp    $0x30,%ebx
810059f9:	75 21                	jne    81005a1c <_strtol_l+0xc2>
810059fb:	0f b6 06             	movzbl (%esi),%eax
810059fe:	3c 78                	cmp    $0x78,%al
81005a00:	74 07                	je     81005a09 <_strtol_l+0xaf>
81005a02:	0f b6 06             	movzbl (%esi),%eax
81005a05:	3c 58                	cmp    $0x58,%al
81005a07:	75 13                	jne    81005a1c <_strtol_l+0xc2>
81005a09:	8d 46 01             	lea    0x1(%esi),%eax
81005a0c:	0f b6 00             	movzbl (%eax),%eax
81005a0f:	0f b6 d8             	movzbl %al,%ebx
81005a12:	83 c6 02             	add    $0x2,%esi
81005a15:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81005a1c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005a20:	75 14                	jne    81005a36 <_strtol_l+0xdc>
81005a22:	83 fb 30             	cmp    $0x30,%ebx
81005a25:	75 07                	jne    81005a2e <_strtol_l+0xd4>
81005a27:	b8 08 00 00 00       	mov    $0x8,%eax
81005a2c:	eb 05                	jmp    81005a33 <_strtol_l+0xd9>
81005a2e:	b8 0a 00 00 00       	mov    $0xa,%eax
81005a33:	89 45 14             	mov    %eax,0x14(%ebp)
81005a36:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005a3a:	74 07                	je     81005a43 <_strtol_l+0xe9>
81005a3c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005a41:	eb 05                	jmp    81005a48 <_strtol_l+0xee>
81005a43:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005a48:	89 c7                	mov    %eax,%edi
81005a4a:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005a4d:	89 f8                	mov    %edi,%eax
81005a4f:	ba 00 00 00 00       	mov    $0x0,%edx
81005a54:	f7 f1                	div    %ecx
81005a56:	89 d0                	mov    %edx,%eax
81005a58:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005a5b:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005a5e:	89 f8                	mov    %edi,%eax
81005a60:	ba 00 00 00 00       	mov    $0x0,%edx
81005a65:	f7 f1                	div    %ecx
81005a67:	89 c2                	mov    %eax,%edx
81005a69:	bf 00 00 00 00       	mov    $0x0,%edi
81005a6e:	b9 00 00 00 00       	mov    $0x0,%ecx
81005a73:	83 fb 2f             	cmp    $0x2f,%ebx
81005a76:	7e 0a                	jle    81005a82 <_strtol_l+0x128>
81005a78:	83 fb 39             	cmp    $0x39,%ebx
81005a7b:	7f 05                	jg     81005a82 <_strtol_l+0x128>
81005a7d:	83 eb 30             	sub    $0x30,%ebx
81005a80:	eb 1c                	jmp    81005a9e <_strtol_l+0x144>
81005a82:	83 fb 40             	cmp    $0x40,%ebx
81005a85:	7e 0a                	jle    81005a91 <_strtol_l+0x137>
81005a87:	83 fb 5a             	cmp    $0x5a,%ebx
81005a8a:	7f 05                	jg     81005a91 <_strtol_l+0x137>
81005a8c:	83 eb 37             	sub    $0x37,%ebx
81005a8f:	eb 0d                	jmp    81005a9e <_strtol_l+0x144>
81005a91:	83 fb 60             	cmp    $0x60,%ebx
81005a94:	7e 46                	jle    81005adc <_strtol_l+0x182>
81005a96:	83 fb 7a             	cmp    $0x7a,%ebx
81005a99:	7f 41                	jg     81005adc <_strtol_l+0x182>
81005a9b:	83 eb 57             	sub    $0x57,%ebx
81005a9e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005aa1:	7d 38                	jge    81005adb <_strtol_l+0x181>
81005aa3:	89 c8                	mov    %ecx,%eax
81005aa5:	85 c0                	test   %eax,%eax
81005aa7:	78 0f                	js     81005ab8 <_strtol_l+0x15e>
81005aa9:	89 d0                	mov    %edx,%eax
81005aab:	39 c7                	cmp    %eax,%edi
81005aad:	77 09                	ja     81005ab8 <_strtol_l+0x15e>
81005aaf:	39 c7                	cmp    %eax,%edi
81005ab1:	75 0c                	jne    81005abf <_strtol_l+0x165>
81005ab3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005ab6:	7e 07                	jle    81005abf <_strtol_l+0x165>
81005ab8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81005abd:	eb 0f                	jmp    81005ace <_strtol_l+0x174>
81005abf:	b9 01 00 00 00       	mov    $0x1,%ecx
81005ac4:	8b 45 14             	mov    0x14(%ebp),%eax
81005ac7:	0f af f8             	imul   %eax,%edi
81005aca:	89 d8                	mov    %ebx,%eax
81005acc:	01 c7                	add    %eax,%edi
81005ace:	89 f0                	mov    %esi,%eax
81005ad0:	8d 70 01             	lea    0x1(%eax),%esi
81005ad3:	0f b6 00             	movzbl (%eax),%eax
81005ad6:	0f b6 d8             	movzbl %al,%ebx
81005ad9:	eb 98                	jmp    81005a73 <_strtol_l+0x119>
81005adb:	90                   	nop
81005adc:	89 c8                	mov    %ecx,%eax
81005ade:	85 c0                	test   %eax,%eax
81005ae0:	79 1f                	jns    81005b01 <_strtol_l+0x1a7>
81005ae2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005ae6:	74 07                	je     81005aef <_strtol_l+0x195>
81005ae8:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005aed:	eb 05                	jmp    81005af4 <_strtol_l+0x19a>
81005aef:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005af4:	89 c7                	mov    %eax,%edi
81005af6:	8b 45 08             	mov    0x8(%ebp),%eax
81005af9:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81005aff:	eb 08                	jmp    81005b09 <_strtol_l+0x1af>
81005b01:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005b05:	74 02                	je     81005b09 <_strtol_l+0x1af>
81005b07:	f7 df                	neg    %edi
81005b09:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005b0d:	74 13                	je     81005b22 <_strtol_l+0x1c8>
81005b0f:	89 c8                	mov    %ecx,%eax
81005b11:	85 c0                	test   %eax,%eax
81005b13:	74 05                	je     81005b1a <_strtol_l+0x1c0>
81005b15:	8d 46 ff             	lea    -0x1(%esi),%eax
81005b18:	eb 03                	jmp    81005b1d <_strtol_l+0x1c3>
81005b1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b1d:	8b 55 10             	mov    0x10(%ebp),%edx
81005b20:	89 02                	mov    %eax,(%edx)
81005b22:	89 f8                	mov    %edi,%eax
81005b24:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005b27:	5b                   	pop    %ebx
81005b28:	5e                   	pop    %esi
81005b29:	5f                   	pop    %edi
81005b2a:	5d                   	pop    %ebp
81005b2b:	c3                   	ret    

81005b2c <_strtol_r>:
81005b2c:	55                   	push   %ebp
81005b2d:	89 e5                	mov    %esp,%ebp
81005b2f:	83 ec 08             	sub    $0x8,%esp
81005b32:	e8 19 fe ff ff       	call   81005950 <__get_current_locale>
81005b37:	83 ec 0c             	sub    $0xc,%esp
81005b3a:	50                   	push   %eax
81005b3b:	ff 75 14             	push   0x14(%ebp)
81005b3e:	ff 75 10             	push   0x10(%ebp)
81005b41:	ff 75 0c             	push   0xc(%ebp)
81005b44:	ff 75 08             	push   0x8(%ebp)
81005b47:	e8 0e fe ff ff       	call   8100595a <_strtol_l>
81005b4c:	83 c4 20             	add    $0x20,%esp
81005b4f:	c9                   	leave  
81005b50:	c3                   	ret    

81005b51 <strtol_l>:
81005b51:	55                   	push   %ebp
81005b52:	89 e5                	mov    %esp,%ebp
81005b54:	83 ec 08             	sub    $0x8,%esp
81005b57:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81005b5c:	83 ec 0c             	sub    $0xc,%esp
81005b5f:	ff 75 14             	push   0x14(%ebp)
81005b62:	ff 75 10             	push   0x10(%ebp)
81005b65:	ff 75 0c             	push   0xc(%ebp)
81005b68:	ff 75 08             	push   0x8(%ebp)
81005b6b:	50                   	push   %eax
81005b6c:	e8 e9 fd ff ff       	call   8100595a <_strtol_l>
81005b71:	83 c4 20             	add    $0x20,%esp
81005b74:	c9                   	leave  
81005b75:	c3                   	ret    

81005b76 <strtol>:
81005b76:	55                   	push   %ebp
81005b77:	89 e5                	mov    %esp,%ebp
81005b79:	83 ec 08             	sub    $0x8,%esp
81005b7c:	e8 cf fd ff ff       	call   81005950 <__get_current_locale>
81005b81:	8b 15 64 8c 00 81    	mov    0x81008c64,%edx
81005b87:	83 ec 0c             	sub    $0xc,%esp
81005b8a:	50                   	push   %eax
81005b8b:	ff 75 10             	push   0x10(%ebp)
81005b8e:	ff 75 0c             	push   0xc(%ebp)
81005b91:	ff 75 08             	push   0x8(%ebp)
81005b94:	52                   	push   %edx
81005b95:	e8 c0 fd ff ff       	call   8100595a <_strtol_l>
81005b9a:	83 c4 20             	add    $0x20,%esp
81005b9d:	c9                   	leave  
81005b9e:	c3                   	ret    

81005b9f <__swbuf_r>:
81005b9f:	55                   	push   %ebp
81005ba0:	89 e5                	mov    %esp,%ebp
81005ba2:	57                   	push   %edi
81005ba3:	56                   	push   %esi
81005ba4:	53                   	push   %ebx
81005ba5:	83 ec 1c             	sub    $0x1c,%esp
81005ba8:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005bab:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005bae:	8b 45 08             	mov    0x8(%ebp),%eax
81005bb1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bb4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005bb8:	74 18                	je     81005bd2 <__swbuf_r+0x33>
81005bba:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005bbd:	8b 40 38             	mov    0x38(%eax),%eax
81005bc0:	85 c0                	test   %eax,%eax
81005bc2:	75 0e                	jne    81005bd2 <__swbuf_r+0x33>
81005bc4:	83 ec 0c             	sub    $0xc,%esp
81005bc7:	ff 75 e4             	push   -0x1c(%ebp)
81005bca:	e8 74 ba ff ff       	call   81001643 <__sinit>
81005bcf:	83 c4 10             	add    $0x10,%esp
81005bd2:	8b 43 18             	mov    0x18(%ebx),%eax
81005bd5:	89 43 08             	mov    %eax,0x8(%ebx)
81005bd8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bdc:	98                   	cwtl   
81005bdd:	83 e0 08             	and    $0x8,%eax
81005be0:	85 c0                	test   %eax,%eax
81005be2:	74 07                	je     81005beb <__swbuf_r+0x4c>
81005be4:	8b 43 10             	mov    0x10(%ebx),%eax
81005be7:	85 c0                	test   %eax,%eax
81005be9:	75 1d                	jne    81005c08 <__swbuf_r+0x69>
81005beb:	83 ec 08             	sub    $0x8,%esp
81005bee:	53                   	push   %ebx
81005bef:	ff 75 08             	push   0x8(%ebp)
81005bf2:	e8 21 01 00 00       	call   81005d18 <__swsetup_r>
81005bf7:	83 c4 10             	add    $0x10,%esp
81005bfa:	85 c0                	test   %eax,%eax
81005bfc:	74 0a                	je     81005c08 <__swbuf_r+0x69>
81005bfe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005c03:	e9 a1 00 00 00       	jmp    81005ca9 <__swbuf_r+0x10a>
81005c08:	89 f8                	mov    %edi,%eax
81005c0a:	0f b6 f8             	movzbl %al,%edi
81005c0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c11:	98                   	cwtl   
81005c12:	25 00 20 00 00       	and    $0x2000,%eax
81005c17:	85 c0                	test   %eax,%eax
81005c19:	75 14                	jne    81005c2f <__swbuf_r+0x90>
81005c1b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c1f:	80 cc 20             	or     $0x20,%ah
81005c22:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c26:	8b 43 64             	mov    0x64(%ebx),%eax
81005c29:	80 e4 df             	and    $0xdf,%ah
81005c2c:	89 43 64             	mov    %eax,0x64(%ebx)
81005c2f:	8b 03                	mov    (%ebx),%eax
81005c31:	8b 53 10             	mov    0x10(%ebx),%edx
81005c34:	29 d0                	sub    %edx,%eax
81005c36:	89 c6                	mov    %eax,%esi
81005c38:	8b 43 14             	mov    0x14(%ebx),%eax
81005c3b:	39 c6                	cmp    %eax,%esi
81005c3d:	7c 1f                	jl     81005c5e <__swbuf_r+0xbf>
81005c3f:	83 ec 08             	sub    $0x8,%esp
81005c42:	53                   	push   %ebx
81005c43:	ff 75 08             	push   0x8(%ebp)
81005c46:	e8 f5 b4 ff ff       	call   81001140 <_fflush_r>
81005c4b:	83 c4 10             	add    $0x10,%esp
81005c4e:	85 c0                	test   %eax,%eax
81005c50:	74 07                	je     81005c59 <__swbuf_r+0xba>
81005c52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005c57:	eb 50                	jmp    81005ca9 <__swbuf_r+0x10a>
81005c59:	be 00 00 00 00       	mov    $0x0,%esi
81005c5e:	8b 43 08             	mov    0x8(%ebx),%eax
81005c61:	83 e8 01             	sub    $0x1,%eax
81005c64:	89 43 08             	mov    %eax,0x8(%ebx)
81005c67:	8b 03                	mov    (%ebx),%eax
81005c69:	8d 50 01             	lea    0x1(%eax),%edx
81005c6c:	89 13                	mov    %edx,(%ebx)
81005c6e:	89 fa                	mov    %edi,%edx
81005c70:	88 10                	mov    %dl,(%eax)
81005c72:	83 c6 01             	add    $0x1,%esi
81005c75:	8b 43 14             	mov    0x14(%ebx),%eax
81005c78:	39 c6                	cmp    %eax,%esi
81005c7a:	74 11                	je     81005c8d <__swbuf_r+0xee>
81005c7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c80:	98                   	cwtl   
81005c81:	83 e0 01             	and    $0x1,%eax
81005c84:	85 c0                	test   %eax,%eax
81005c86:	74 1f                	je     81005ca7 <__swbuf_r+0x108>
81005c88:	83 ff 0a             	cmp    $0xa,%edi
81005c8b:	75 1a                	jne    81005ca7 <__swbuf_r+0x108>
81005c8d:	83 ec 08             	sub    $0x8,%esp
81005c90:	53                   	push   %ebx
81005c91:	ff 75 08             	push   0x8(%ebp)
81005c94:	e8 a7 b4 ff ff       	call   81001140 <_fflush_r>
81005c99:	83 c4 10             	add    $0x10,%esp
81005c9c:	85 c0                	test   %eax,%eax
81005c9e:	74 07                	je     81005ca7 <__swbuf_r+0x108>
81005ca0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005ca5:	eb 02                	jmp    81005ca9 <__swbuf_r+0x10a>
81005ca7:	89 f8                	mov    %edi,%eax
81005ca9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005cac:	5b                   	pop    %ebx
81005cad:	5e                   	pop    %esi
81005cae:	5f                   	pop    %edi
81005caf:	5d                   	pop    %ebp
81005cb0:	c3                   	ret    

81005cb1 <__swbuf>:
81005cb1:	55                   	push   %ebp
81005cb2:	89 e5                	mov    %esp,%ebp
81005cb4:	83 ec 08             	sub    $0x8,%esp
81005cb7:	8b 55 08             	mov    0x8(%ebp),%edx
81005cba:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005cbd:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81005cc2:	83 ec 04             	sub    $0x4,%esp
81005cc5:	51                   	push   %ecx
81005cc6:	52                   	push   %edx
81005cc7:	50                   	push   %eax
81005cc8:	e8 d2 fe ff ff       	call   81005b9f <__swbuf_r>
81005ccd:	83 c4 10             	add    $0x10,%esp
81005cd0:	c9                   	leave  
81005cd1:	c3                   	ret    

81005cd2 <_write_r>:
81005cd2:	55                   	push   %ebp
81005cd3:	89 e5                	mov    %esp,%ebp
81005cd5:	83 ec 18             	sub    $0x18,%esp
81005cd8:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
81005cdf:	00 00 00 
81005ce2:	83 ec 04             	sub    $0x4,%esp
81005ce5:	ff 75 14             	push   0x14(%ebp)
81005ce8:	ff 75 10             	push   0x10(%ebp)
81005ceb:	ff 75 0c             	push   0xc(%ebp)
81005cee:	e8 2d ae ff ff       	call   81000b20 <write>
81005cf3:	83 c4 10             	add    $0x10,%esp
81005cf6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cf9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005cfd:	75 14                	jne    81005d13 <_write_r+0x41>
81005cff:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81005d04:	85 c0                	test   %eax,%eax
81005d06:	74 0b                	je     81005d13 <_write_r+0x41>
81005d08:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81005d0e:	8b 45 08             	mov    0x8(%ebp),%eax
81005d11:	89 10                	mov    %edx,(%eax)
81005d13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d16:	c9                   	leave  
81005d17:	c3                   	ret    

81005d18 <__swsetup_r>:
81005d18:	55                   	push   %ebp
81005d19:	89 e5                	mov    %esp,%ebp
81005d1b:	53                   	push   %ebx
81005d1c:	83 ec 14             	sub    $0x14,%esp
81005d1f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005d22:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81005d27:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005d2e:	74 18                	je     81005d48 <__swsetup_r+0x30>
81005d30:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d33:	8b 40 38             	mov    0x38(%eax),%eax
81005d36:	85 c0                	test   %eax,%eax
81005d38:	75 0e                	jne    81005d48 <__swsetup_r+0x30>
81005d3a:	83 ec 0c             	sub    $0xc,%esp
81005d3d:	ff 75 f4             	push   -0xc(%ebp)
81005d40:	e8 fe b8 ff ff       	call   81001643 <__sinit>
81005d45:	83 c4 10             	add    $0x10,%esp
81005d48:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d4c:	98                   	cwtl   
81005d4d:	83 e0 08             	and    $0x8,%eax
81005d50:	85 c0                	test   %eax,%eax
81005d52:	0f 85 82 00 00 00    	jne    81005dda <__swsetup_r+0xc2>
81005d58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d5c:	98                   	cwtl   
81005d5d:	83 e0 10             	and    $0x10,%eax
81005d60:	85 c0                	test   %eax,%eax
81005d62:	75 1e                	jne    81005d82 <__swsetup_r+0x6a>
81005d64:	8b 45 08             	mov    0x8(%ebp),%eax
81005d67:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005d6d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d71:	83 c8 40             	or     $0x40,%eax
81005d74:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d78:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d7d:	e9 ec 00 00 00       	jmp    81005e6e <__swsetup_r+0x156>
81005d82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d86:	98                   	cwtl   
81005d87:	83 e0 04             	and    $0x4,%eax
81005d8a:	85 c0                	test   %eax,%eax
81005d8c:	74 41                	je     81005dcf <__swsetup_r+0xb7>
81005d8e:	8b 43 30             	mov    0x30(%ebx),%eax
81005d91:	85 c0                	test   %eax,%eax
81005d93:	74 23                	je     81005db8 <__swsetup_r+0xa0>
81005d95:	8b 53 30             	mov    0x30(%ebx),%edx
81005d98:	8d 43 40             	lea    0x40(%ebx),%eax
81005d9b:	39 c2                	cmp    %eax,%edx
81005d9d:	74 12                	je     81005db1 <__swsetup_r+0x99>
81005d9f:	8b 43 30             	mov    0x30(%ebx),%eax
81005da2:	83 ec 08             	sub    $0x8,%esp
81005da5:	50                   	push   %eax
81005da6:	ff 75 08             	push   0x8(%ebp)
81005da9:	e8 eb ba ff ff       	call   81001899 <_free_r>
81005dae:	83 c4 10             	add    $0x10,%esp
81005db1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005db8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005dbc:	83 e0 db             	and    $0xffffffdb,%eax
81005dbf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005dc3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005dca:	8b 43 10             	mov    0x10(%ebx),%eax
81005dcd:	89 03                	mov    %eax,(%ebx)
81005dcf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005dd3:	83 c8 08             	or     $0x8,%eax
81005dd6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005dda:	8b 43 10             	mov    0x10(%ebx),%eax
81005ddd:	85 c0                	test   %eax,%eax
81005ddf:	75 2b                	jne    81005e0c <__swsetup_r+0xf4>
81005de1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005de5:	98                   	cwtl   
81005de6:	25 00 02 00 00       	and    $0x200,%eax
81005deb:	85 c0                	test   %eax,%eax
81005ded:	74 0e                	je     81005dfd <__swsetup_r+0xe5>
81005def:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005df3:	98                   	cwtl   
81005df4:	25 80 00 00 00       	and    $0x80,%eax
81005df9:	85 c0                	test   %eax,%eax
81005dfb:	74 0f                	je     81005e0c <__swsetup_r+0xf4>
81005dfd:	83 ec 08             	sub    $0x8,%esp
81005e00:	53                   	push   %ebx
81005e01:	ff 75 08             	push   0x8(%ebp)
81005e04:	e8 07 d5 ff ff       	call   81003310 <__smakebuf_r>
81005e09:	83 c4 10             	add    $0x10,%esp
81005e0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e10:	98                   	cwtl   
81005e11:	83 e0 01             	and    $0x1,%eax
81005e14:	85 c0                	test   %eax,%eax
81005e16:	74 11                	je     81005e29 <__swsetup_r+0x111>
81005e18:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005e1f:	8b 43 14             	mov    0x14(%ebx),%eax
81005e22:	f7 d8                	neg    %eax
81005e24:	89 43 18             	mov    %eax,0x18(%ebx)
81005e27:	eb 19                	jmp    81005e42 <__swsetup_r+0x12a>
81005e29:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e2d:	98                   	cwtl   
81005e2e:	83 e0 02             	and    $0x2,%eax
81005e31:	85 c0                	test   %eax,%eax
81005e33:	75 05                	jne    81005e3a <__swsetup_r+0x122>
81005e35:	8b 43 14             	mov    0x14(%ebx),%eax
81005e38:	eb 05                	jmp    81005e3f <__swsetup_r+0x127>
81005e3a:	b8 00 00 00 00       	mov    $0x0,%eax
81005e3f:	89 43 08             	mov    %eax,0x8(%ebx)
81005e42:	8b 43 10             	mov    0x10(%ebx),%eax
81005e45:	85 c0                	test   %eax,%eax
81005e47:	75 20                	jne    81005e69 <__swsetup_r+0x151>
81005e49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e4d:	98                   	cwtl   
81005e4e:	25 80 00 00 00       	and    $0x80,%eax
81005e53:	85 c0                	test   %eax,%eax
81005e55:	74 12                	je     81005e69 <__swsetup_r+0x151>
81005e57:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e5b:	83 c8 40             	or     $0x40,%eax
81005e5e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005e62:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005e67:	eb 05                	jmp    81005e6e <__swsetup_r+0x156>
81005e69:	b8 00 00 00 00       	mov    $0x0,%eax
81005e6e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005e71:	c9                   	leave  
81005e72:	c3                   	ret    

81005e73 <__call_exitprocs>:
81005e73:	55                   	push   %ebp
81005e74:	89 e5                	mov    %esp,%ebp
81005e76:	57                   	push   %edi
81005e77:	56                   	push   %esi
81005e78:	53                   	push   %ebx
81005e79:	83 ec 1c             	sub    $0x1c,%esp
81005e7c:	a1 b8 84 00 81       	mov    0x810084b8,%eax
81005e81:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81005e87:	a1 b8 84 00 81       	mov    0x810084b8,%eax
81005e8c:	05 48 01 00 00       	add    $0x148,%eax
81005e91:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e94:	90                   	nop
81005e95:	85 db                	test   %ebx,%ebx
81005e97:	0f 84 e1 00 00 00    	je     81005f7e <__call_exitprocs+0x10b>
81005e9d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81005ea3:	8b 43 04             	mov    0x4(%ebx),%eax
81005ea6:	8d 70 ff             	lea    -0x1(%eax),%esi
81005ea9:	e9 c6 00 00 00       	jmp    81005f74 <__call_exitprocs+0x101>
81005eae:	b8 01 00 00 00       	mov    $0x1,%eax
81005eb3:	89 f1                	mov    %esi,%ecx
81005eb5:	d3 e0                	shl    %cl,%eax
81005eb7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005eba:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005ebe:	74 17                	je     81005ed7 <__call_exitprocs+0x64>
81005ec0:	85 ff                	test   %edi,%edi
81005ec2:	0f 84 a5 00 00 00    	je     81005f6d <__call_exitprocs+0xfa>
81005ec8:	8d 46 20             	lea    0x20(%esi),%eax
81005ecb:	8b 04 87             	mov    (%edi,%eax,4),%eax
81005ece:	39 45 0c             	cmp    %eax,0xc(%ebp)
81005ed1:	0f 85 96 00 00 00    	jne    81005f6d <__call_exitprocs+0xfa>
81005ed7:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81005edb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005ede:	8b 43 04             	mov    0x4(%ebx),%eax
81005ee1:	83 e8 01             	sub    $0x1,%eax
81005ee4:	39 c6                	cmp    %eax,%esi
81005ee6:	75 0b                	jne    81005ef3 <__call_exitprocs+0x80>
81005ee8:	8b 43 04             	mov    0x4(%ebx),%eax
81005eeb:	83 e8 01             	sub    $0x1,%eax
81005eee:	89 43 04             	mov    %eax,0x4(%ebx)
81005ef1:	eb 08                	jmp    81005efb <__call_exitprocs+0x88>
81005ef3:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81005efa:	00 
81005efb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005eff:	74 6f                	je     81005f70 <__call_exitprocs+0xfd>
81005f01:	8b 43 04             	mov    0x4(%ebx),%eax
81005f04:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005f07:	85 ff                	test   %edi,%edi
81005f09:	74 0f                	je     81005f1a <__call_exitprocs+0xa7>
81005f0b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81005f11:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f14:	21 d0                	and    %edx,%eax
81005f16:	85 c0                	test   %eax,%eax
81005f18:	75 07                	jne    81005f21 <__call_exitprocs+0xae>
81005f1a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005f1d:	ff d0                	call   *%eax
81005f1f:	eb 32                	jmp    81005f53 <__call_exitprocs+0xe0>
81005f21:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81005f27:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f2a:	21 d0                	and    %edx,%eax
81005f2c:	85 c0                	test   %eax,%eax
81005f2e:	75 14                	jne    81005f44 <__call_exitprocs+0xd1>
81005f30:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005f33:	83 ec 08             	sub    $0x8,%esp
81005f36:	50                   	push   %eax
81005f37:	ff 75 08             	push   0x8(%ebp)
81005f3a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005f3d:	ff d0                	call   *%eax
81005f3f:	83 c4 10             	add    $0x10,%esp
81005f42:	eb 0f                	jmp    81005f53 <__call_exitprocs+0xe0>
81005f44:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005f47:	83 ec 0c             	sub    $0xc,%esp
81005f4a:	50                   	push   %eax
81005f4b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005f4e:	ff d0                	call   *%eax
81005f50:	83 c4 10             	add    $0x10,%esp
81005f53:	8b 43 04             	mov    0x4(%ebx),%eax
81005f56:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81005f59:	0f 85 1d ff ff ff    	jne    81005e7c <__call_exitprocs+0x9>
81005f5f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005f62:	8b 00                	mov    (%eax),%eax
81005f64:	39 c3                	cmp    %eax,%ebx
81005f66:	74 09                	je     81005f71 <__call_exitprocs+0xfe>
81005f68:	e9 0f ff ff ff       	jmp    81005e7c <__call_exitprocs+0x9>
81005f6d:	90                   	nop
81005f6e:	eb 01                	jmp    81005f71 <__call_exitprocs+0xfe>
81005f70:	90                   	nop
81005f71:	83 ee 01             	sub    $0x1,%esi
81005f74:	85 f6                	test   %esi,%esi
81005f76:	0f 89 32 ff ff ff    	jns    81005eae <__call_exitprocs+0x3b>
81005f7c:	eb 01                	jmp    81005f7f <__call_exitprocs+0x10c>
81005f7e:	90                   	nop
81005f7f:	90                   	nop
81005f80:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005f83:	5b                   	pop    %ebx
81005f84:	5e                   	pop    %esi
81005f85:	5f                   	pop    %edi
81005f86:	5d                   	pop    %ebp
81005f87:	c3                   	ret    

81005f88 <_close_r>:
81005f88:	55                   	push   %ebp
81005f89:	89 e5                	mov    %esp,%ebp
81005f8b:	83 ec 18             	sub    $0x18,%esp
81005f8e:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
81005f95:	00 00 00 
81005f98:	83 ec 0c             	sub    $0xc,%esp
81005f9b:	ff 75 0c             	push   0xc(%ebp)
81005f9e:	e8 aa ab ff ff       	call   81000b4d <close>
81005fa3:	83 c4 10             	add    $0x10,%esp
81005fa6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fa9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005fad:	75 14                	jne    81005fc3 <_close_r+0x3b>
81005faf:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81005fb4:	85 c0                	test   %eax,%eax
81005fb6:	74 0b                	je     81005fc3 <_close_r+0x3b>
81005fb8:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81005fbe:	8b 45 08             	mov    0x8(%ebp),%eax
81005fc1:	89 10                	mov    %edx,(%eax)
81005fc3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fc6:	c9                   	leave  
81005fc7:	c3                   	ret    

81005fc8 <__errno>:
81005fc8:	55                   	push   %ebp
81005fc9:	89 e5                	mov    %esp,%ebp
81005fcb:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81005fd0:	5d                   	pop    %ebp
81005fd1:	c3                   	ret    

81005fd2 <__sflags>:
81005fd2:	55                   	push   %ebp
81005fd3:	89 e5                	mov    %esp,%ebp
81005fd5:	57                   	push   %edi
81005fd6:	56                   	push   %esi
81005fd7:	53                   	push   %ebx
81005fd8:	8b 55 0c             	mov    0xc(%ebp),%edx
81005fdb:	0f b6 02             	movzbl (%edx),%eax
81005fde:	0f be c0             	movsbl %al,%eax
81005fe1:	83 f8 77             	cmp    $0x77,%eax
81005fe4:	74 20                	je     81006006 <__sflags+0x34>
81005fe6:	83 f8 77             	cmp    $0x77,%eax
81005fe9:	7f 3d                	jg     81006028 <__sflags+0x56>
81005feb:	83 f8 61             	cmp    $0x61,%eax
81005fee:	74 27                	je     81006017 <__sflags+0x45>
81005ff0:	83 f8 72             	cmp    $0x72,%eax
81005ff3:	75 33                	jne    81006028 <__sflags+0x56>
81005ff5:	be 04 00 00 00       	mov    $0x4,%esi
81005ffa:	bb 00 00 00 00       	mov    $0x0,%ebx
81005fff:	bf 00 00 00 00       	mov    $0x0,%edi
81006004:	eb 32                	jmp    81006038 <__sflags+0x66>
81006006:	be 08 00 00 00       	mov    $0x8,%esi
8100600b:	bb 01 00 00 00       	mov    $0x1,%ebx
81006010:	bf 00 06 00 00       	mov    $0x600,%edi
81006015:	eb 21                	jmp    81006038 <__sflags+0x66>
81006017:	be 08 01 00 00       	mov    $0x108,%esi
8100601c:	bb 01 00 00 00       	mov    $0x1,%ebx
81006021:	bf 08 02 00 00       	mov    $0x208,%edi
81006026:	eb 10                	jmp    81006038 <__sflags+0x66>
81006028:	8b 45 08             	mov    0x8(%ebp),%eax
8100602b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006031:	b8 00 00 00 00       	mov    $0x0,%eax
81006036:	eb 4f                	jmp    81006087 <__sflags+0xb5>
81006038:	eb 38                	jmp    81006072 <__sflags+0xa0>
8100603a:	0f b6 02             	movzbl (%edx),%eax
8100603d:	0f be c0             	movsbl %al,%eax
81006040:	83 f8 78             	cmp    $0x78,%eax
81006043:	74 27                	je     8100606c <__sflags+0x9a>
81006045:	83 f8 78             	cmp    $0x78,%eax
81006048:	7f 27                	jg     81006071 <__sflags+0x9f>
8100604a:	83 f8 2b             	cmp    $0x2b,%eax
8100604d:	74 07                	je     81006056 <__sflags+0x84>
8100604f:	83 f8 62             	cmp    $0x62,%eax
81006052:	74 1e                	je     81006072 <__sflags+0xa0>
81006054:	eb 1b                	jmp    81006071 <__sflags+0x9f>
81006056:	89 f0                	mov    %esi,%eax
81006058:	83 e0 e3             	and    $0xffffffe3,%eax
8100605b:	83 c8 10             	or     $0x10,%eax
8100605e:	89 c6                	mov    %eax,%esi
81006060:	89 d8                	mov    %ebx,%eax
81006062:	83 e0 fc             	and    $0xfffffffc,%eax
81006065:	83 c8 02             	or     $0x2,%eax
81006068:	89 c3                	mov    %eax,%ebx
8100606a:	eb 06                	jmp    81006072 <__sflags+0xa0>
8100606c:	80 cf 08             	or     $0x8,%bh
8100606f:	eb 01                	jmp    81006072 <__sflags+0xa0>
81006071:	90                   	nop
81006072:	83 c2 01             	add    $0x1,%edx
81006075:	0f b6 02             	movzbl (%edx),%eax
81006078:	84 c0                	test   %al,%al
8100607a:	75 be                	jne    8100603a <__sflags+0x68>
8100607c:	89 da                	mov    %ebx,%edx
8100607e:	09 fa                	or     %edi,%edx
81006080:	8b 45 10             	mov    0x10(%ebp),%eax
81006083:	89 10                	mov    %edx,(%eax)
81006085:	89 f0                	mov    %esi,%eax
81006087:	5b                   	pop    %ebx
81006088:	5e                   	pop    %esi
81006089:	5f                   	pop    %edi
8100608a:	5d                   	pop    %ebp
8100608b:	c3                   	ret    

8100608c <_fputc_r>:
8100608c:	55                   	push   %ebp
8100608d:	89 e5                	mov    %esp,%ebp
8100608f:	83 ec 18             	sub    $0x18,%esp
81006092:	8b 45 08             	mov    0x8(%ebp),%eax
81006095:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006098:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100609c:	74 18                	je     810060b6 <_fputc_r+0x2a>
8100609e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060a1:	8b 40 38             	mov    0x38(%eax),%eax
810060a4:	85 c0                	test   %eax,%eax
810060a6:	75 0e                	jne    810060b6 <_fputc_r+0x2a>
810060a8:	83 ec 0c             	sub    $0xc,%esp
810060ab:	ff 75 f4             	push   -0xc(%ebp)
810060ae:	e8 90 b5 ff ff       	call   81001643 <__sinit>
810060b3:	83 c4 10             	add    $0x10,%esp
810060b6:	83 ec 04             	sub    $0x4,%esp
810060b9:	ff 75 10             	push   0x10(%ebp)
810060bc:	ff 75 0c             	push   0xc(%ebp)
810060bf:	ff 75 08             	push   0x8(%ebp)
810060c2:	e8 6f 13 00 00       	call   81007436 <_putc_r>
810060c7:	83 c4 10             	add    $0x10,%esp
810060ca:	89 45 f0             	mov    %eax,-0x10(%ebp)
810060cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060d0:	c9                   	leave  
810060d1:	c3                   	ret    

810060d2 <fputc>:
810060d2:	55                   	push   %ebp
810060d3:	89 e5                	mov    %esp,%ebp
810060d5:	83 ec 18             	sub    $0x18,%esp
810060d8:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810060dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810060e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810060e6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810060ea:	74 18                	je     81006104 <fputc+0x32>
810060ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810060ef:	8b 40 38             	mov    0x38(%eax),%eax
810060f2:	85 c0                	test   %eax,%eax
810060f4:	75 0e                	jne    81006104 <fputc+0x32>
810060f6:	83 ec 0c             	sub    $0xc,%esp
810060f9:	ff 75 f0             	push   -0x10(%ebp)
810060fc:	e8 42 b5 ff ff       	call   81001643 <__sinit>
81006101:	83 c4 10             	add    $0x10,%esp
81006104:	83 ec 04             	sub    $0x4,%esp
81006107:	ff 75 0c             	push   0xc(%ebp)
8100610a:	ff 75 08             	push   0x8(%ebp)
8100610d:	ff 75 f4             	push   -0xc(%ebp)
81006110:	e8 21 13 00 00       	call   81007436 <_putc_r>
81006115:	83 c4 10             	add    $0x10,%esp
81006118:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100611b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100611e:	c9                   	leave  
8100611f:	c3                   	ret    

81006120 <_fputs_r>:
81006120:	55                   	push   %ebp
81006121:	89 e5                	mov    %esp,%ebp
81006123:	83 ec 28             	sub    $0x28,%esp
81006126:	8b 45 0c             	mov    0xc(%ebp),%eax
81006129:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100612c:	83 ec 0c             	sub    $0xc,%esp
8100612f:	ff 75 0c             	push   0xc(%ebp)
81006132:	e8 89 f6 ff ff       	call   810057c0 <strlen>
81006137:	83 c4 10             	add    $0x10,%esp
8100613a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100613d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006140:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006143:	8d 45 dc             	lea    -0x24(%ebp),%eax
81006146:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006149:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81006150:	8b 45 08             	mov    0x8(%ebp),%eax
81006153:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006156:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100615a:	74 18                	je     81006174 <_fputs_r+0x54>
8100615c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100615f:	8b 40 38             	mov    0x38(%eax),%eax
81006162:	85 c0                	test   %eax,%eax
81006164:	75 0e                	jne    81006174 <_fputs_r+0x54>
81006166:	83 ec 0c             	sub    $0xc,%esp
81006169:	ff 75 f4             	push   -0xc(%ebp)
8100616c:	e8 d2 b4 ff ff       	call   81001643 <__sinit>
81006171:	83 c4 10             	add    $0x10,%esp
81006174:	8b 45 10             	mov    0x10(%ebp),%eax
81006177:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100617b:	98                   	cwtl   
8100617c:	25 00 20 00 00       	and    $0x2000,%eax
81006181:	85 c0                	test   %eax,%eax
81006183:	75 24                	jne    810061a9 <_fputs_r+0x89>
81006185:	8b 45 10             	mov    0x10(%ebp),%eax
81006188:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100618c:	80 cc 20             	or     $0x20,%ah
8100618f:	89 c2                	mov    %eax,%edx
81006191:	8b 45 10             	mov    0x10(%ebp),%eax
81006194:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006198:	8b 45 10             	mov    0x10(%ebp),%eax
8100619b:	8b 40 64             	mov    0x64(%eax),%eax
8100619e:	80 e4 df             	and    $0xdf,%ah
810061a1:	89 c2                	mov    %eax,%edx
810061a3:	8b 45 10             	mov    0x10(%ebp),%eax
810061a6:	89 50 64             	mov    %edx,0x64(%eax)
810061a9:	83 ec 04             	sub    $0x4,%esp
810061ac:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810061af:	50                   	push   %eax
810061b0:	ff 75 10             	push   0x10(%ebp)
810061b3:	ff 75 08             	push   0x8(%ebp)
810061b6:	e8 df 01 00 00       	call   8100639a <__sfvwrite_r>
810061bb:	83 c4 10             	add    $0x10,%esp
810061be:	89 45 f0             	mov    %eax,-0x10(%ebp)
810061c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061c4:	c9                   	leave  
810061c5:	c3                   	ret    

810061c6 <fputs>:
810061c6:	55                   	push   %ebp
810061c7:	89 e5                	mov    %esp,%ebp
810061c9:	83 ec 08             	sub    $0x8,%esp
810061cc:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810061d1:	83 ec 04             	sub    $0x4,%esp
810061d4:	ff 75 0c             	push   0xc(%ebp)
810061d7:	ff 75 08             	push   0x8(%ebp)
810061da:	50                   	push   %eax
810061db:	e8 40 ff ff ff       	call   81006120 <_fputs_r>
810061e0:	83 c4 10             	add    $0x10,%esp
810061e3:	c9                   	leave  
810061e4:	c3                   	ret    

810061e5 <__sputc_r>:
810061e5:	55                   	push   %ebp
810061e6:	89 e5                	mov    %esp,%ebp
810061e8:	83 ec 08             	sub    $0x8,%esp
810061eb:	8b 45 10             	mov    0x10(%ebp),%eax
810061ee:	8b 40 08             	mov    0x8(%eax),%eax
810061f1:	8d 50 ff             	lea    -0x1(%eax),%edx
810061f4:	8b 45 10             	mov    0x10(%ebp),%eax
810061f7:	89 50 08             	mov    %edx,0x8(%eax)
810061fa:	8b 45 10             	mov    0x10(%ebp),%eax
810061fd:	8b 40 08             	mov    0x8(%eax),%eax
81006200:	85 c0                	test   %eax,%eax
81006202:	79 17                	jns    8100621b <__sputc_r+0x36>
81006204:	8b 45 10             	mov    0x10(%ebp),%eax
81006207:	8b 50 08             	mov    0x8(%eax),%edx
8100620a:	8b 45 10             	mov    0x10(%ebp),%eax
8100620d:	8b 40 18             	mov    0x18(%eax),%eax
81006210:	39 c2                	cmp    %eax,%edx
81006212:	7c 21                	jl     81006235 <__sputc_r+0x50>
81006214:	8b 45 0c             	mov    0xc(%ebp),%eax
81006217:	3c 0a                	cmp    $0xa,%al
81006219:	74 1a                	je     81006235 <__sputc_r+0x50>
8100621b:	8b 45 10             	mov    0x10(%ebp),%eax
8100621e:	8b 00                	mov    (%eax),%eax
81006220:	8d 48 01             	lea    0x1(%eax),%ecx
81006223:	8b 55 10             	mov    0x10(%ebp),%edx
81006226:	89 0a                	mov    %ecx,(%edx)
81006228:	8b 55 0c             	mov    0xc(%ebp),%edx
8100622b:	88 10                	mov    %dl,(%eax)
8100622d:	0f b6 00             	movzbl (%eax),%eax
81006230:	0f b6 c0             	movzbl %al,%eax
81006233:	eb 14                	jmp    81006249 <__sputc_r+0x64>
81006235:	83 ec 04             	sub    $0x4,%esp
81006238:	ff 75 10             	push   0x10(%ebp)
8100623b:	ff 75 0c             	push   0xc(%ebp)
8100623e:	ff 75 08             	push   0x8(%ebp)
81006241:	e8 59 f9 ff ff       	call   81005b9f <__swbuf_r>
81006246:	83 c4 10             	add    $0x10,%esp
81006249:	c9                   	leave  
8100624a:	c3                   	ret    

8100624b <__fputwc>:
8100624b:	55                   	push   %ebp
8100624c:	89 e5                	mov    %esp,%ebp
8100624e:	83 ec 18             	sub    $0x18,%esp
81006251:	e8 b5 08 00 00       	call   81006b0b <__locale_mb_cur_max>
81006256:	83 f8 01             	cmp    $0x1,%eax
81006259:	75 1e                	jne    81006279 <__fputwc+0x2e>
8100625b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100625f:	7e 18                	jle    81006279 <__fputwc+0x2e>
81006261:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006268:	7f 0f                	jg     81006279 <__fputwc+0x2e>
8100626a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100626d:	88 45 ef             	mov    %al,-0x11(%ebp)
81006270:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006277:	eb 3c                	jmp    810062b5 <__fputwc+0x6a>
81006279:	8b 45 10             	mov    0x10(%ebp),%eax
8100627c:	83 c0 5c             	add    $0x5c,%eax
8100627f:	50                   	push   %eax
81006280:	ff 75 0c             	push   0xc(%ebp)
81006283:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006286:	50                   	push   %eax
81006287:	ff 75 08             	push   0x8(%ebp)
8100628a:	e8 dc 1c 00 00       	call   81007f6b <_wcrtomb_r>
8100628f:	83 c4 10             	add    $0x10,%esp
81006292:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006295:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006299:	75 1a                	jne    810062b5 <__fputwc+0x6a>
8100629b:	8b 45 10             	mov    0x10(%ebp),%eax
8100629e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810062a2:	83 c8 40             	or     $0x40,%eax
810062a5:	89 c2                	mov    %eax,%edx
810062a7:	8b 45 10             	mov    0x10(%ebp),%eax
810062aa:	66 89 50 0c          	mov    %dx,0xc(%eax)
810062ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062b3:	eb 44                	jmp    810062f9 <__fputwc+0xae>
810062b5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810062bc:	eb 30                	jmp    810062ee <__fputwc+0xa3>
810062be:	8d 55 ef             	lea    -0x11(%ebp),%edx
810062c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062c4:	01 d0                	add    %edx,%eax
810062c6:	0f b6 00             	movzbl (%eax),%eax
810062c9:	0f b6 c0             	movzbl %al,%eax
810062cc:	83 ec 04             	sub    $0x4,%esp
810062cf:	ff 75 10             	push   0x10(%ebp)
810062d2:	50                   	push   %eax
810062d3:	ff 75 08             	push   0x8(%ebp)
810062d6:	e8 0a ff ff ff       	call   810061e5 <__sputc_r>
810062db:	83 c4 10             	add    $0x10,%esp
810062de:	83 f8 ff             	cmp    $0xffffffff,%eax
810062e1:	75 07                	jne    810062ea <__fputwc+0x9f>
810062e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810062e8:	eb 0f                	jmp    810062f9 <__fputwc+0xae>
810062ea:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810062ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062f1:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810062f4:	72 c8                	jb     810062be <__fputwc+0x73>
810062f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810062f9:	c9                   	leave  
810062fa:	c3                   	ret    

810062fb <_fputwc_r>:
810062fb:	55                   	push   %ebp
810062fc:	89 e5                	mov    %esp,%ebp
810062fe:	83 ec 18             	sub    $0x18,%esp
81006301:	8b 45 10             	mov    0x10(%ebp),%eax
81006304:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006308:	98                   	cwtl   
81006309:	25 00 20 00 00       	and    $0x2000,%eax
8100630e:	85 c0                	test   %eax,%eax
81006310:	75 24                	jne    81006336 <_fputwc_r+0x3b>
81006312:	8b 45 10             	mov    0x10(%ebp),%eax
81006315:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006319:	80 cc 20             	or     $0x20,%ah
8100631c:	89 c2                	mov    %eax,%edx
8100631e:	8b 45 10             	mov    0x10(%ebp),%eax
81006321:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006325:	8b 45 10             	mov    0x10(%ebp),%eax
81006328:	8b 40 64             	mov    0x64(%eax),%eax
8100632b:	80 cc 20             	or     $0x20,%ah
8100632e:	89 c2                	mov    %eax,%edx
81006330:	8b 45 10             	mov    0x10(%ebp),%eax
81006333:	89 50 64             	mov    %edx,0x64(%eax)
81006336:	83 ec 04             	sub    $0x4,%esp
81006339:	ff 75 10             	push   0x10(%ebp)
8100633c:	ff 75 0c             	push   0xc(%ebp)
8100633f:	ff 75 08             	push   0x8(%ebp)
81006342:	e8 04 ff ff ff       	call   8100624b <__fputwc>
81006347:	83 c4 10             	add    $0x10,%esp
8100634a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100634d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006350:	c9                   	leave  
81006351:	c3                   	ret    

81006352 <fputwc>:
81006352:	55                   	push   %ebp
81006353:	89 e5                	mov    %esp,%ebp
81006355:	83 ec 18             	sub    $0x18,%esp
81006358:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100635d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006360:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006363:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006366:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100636a:	74 18                	je     81006384 <fputwc+0x32>
8100636c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100636f:	8b 40 38             	mov    0x38(%eax),%eax
81006372:	85 c0                	test   %eax,%eax
81006374:	75 0e                	jne    81006384 <fputwc+0x32>
81006376:	83 ec 0c             	sub    $0xc,%esp
81006379:	ff 75 f0             	push   -0x10(%ebp)
8100637c:	e8 c2 b2 ff ff       	call   81001643 <__sinit>
81006381:	83 c4 10             	add    $0x10,%esp
81006384:	83 ec 04             	sub    $0x4,%esp
81006387:	ff 75 0c             	push   0xc(%ebp)
8100638a:	ff 75 08             	push   0x8(%ebp)
8100638d:	ff 75 f4             	push   -0xc(%ebp)
81006390:	e8 66 ff ff ff       	call   810062fb <_fputwc_r>
81006395:	83 c4 10             	add    $0x10,%esp
81006398:	c9                   	leave  
81006399:	c3                   	ret    

8100639a <__sfvwrite_r>:
8100639a:	55                   	push   %ebp
8100639b:	89 e5                	mov    %esp,%ebp
8100639d:	57                   	push   %edi
8100639e:	56                   	push   %esi
8100639f:	53                   	push   %ebx
810063a0:	83 ec 3c             	sub    $0x3c,%esp
810063a3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810063a6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810063ad:	8b 45 10             	mov    0x10(%ebp),%eax
810063b0:	8b 78 08             	mov    0x8(%eax),%edi
810063b3:	85 ff                	test   %edi,%edi
810063b5:	75 0a                	jne    810063c1 <__sfvwrite_r+0x27>
810063b7:	b8 00 00 00 00       	mov    $0x0,%eax
810063bc:	e9 6f 04 00 00       	jmp    81006830 <__sfvwrite_r+0x496>
810063c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063c5:	98                   	cwtl   
810063c6:	83 e0 08             	and    $0x8,%eax
810063c9:	85 c0                	test   %eax,%eax
810063cb:	74 07                	je     810063d4 <__sfvwrite_r+0x3a>
810063cd:	8b 43 10             	mov    0x10(%ebx),%eax
810063d0:	85 c0                	test   %eax,%eax
810063d2:	75 1d                	jne    810063f1 <__sfvwrite_r+0x57>
810063d4:	83 ec 08             	sub    $0x8,%esp
810063d7:	53                   	push   %ebx
810063d8:	ff 75 08             	push   0x8(%ebp)
810063db:	e8 38 f9 ff ff       	call   81005d18 <__swsetup_r>
810063e0:	83 c4 10             	add    $0x10,%esp
810063e3:	85 c0                	test   %eax,%eax
810063e5:	74 0a                	je     810063f1 <__sfvwrite_r+0x57>
810063e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810063ec:	e9 3f 04 00 00       	jmp    81006830 <__sfvwrite_r+0x496>
810063f1:	8b 45 10             	mov    0x10(%ebp),%eax
810063f4:	8b 00                	mov    (%eax),%eax
810063f6:	89 45 c0             	mov    %eax,-0x40(%ebp)
810063f9:	bf 00 00 00 00       	mov    $0x0,%edi
810063fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006402:	98                   	cwtl   
81006403:	83 e0 02             	and    $0x2,%eax
81006406:	85 c0                	test   %eax,%eax
81006408:	74 68                	je     81006472 <__sfvwrite_r+0xd8>
8100640a:	eb 11                	jmp    8100641d <__sfvwrite_r+0x83>
8100640c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100640f:	8b 08                	mov    (%eax),%ecx
81006411:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006414:	8b 78 04             	mov    0x4(%eax),%edi
81006417:	83 c0 08             	add    $0x8,%eax
8100641a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100641d:	85 ff                	test   %edi,%edi
8100641f:	74 eb                	je     8100640c <__sfvwrite_r+0x72>
81006421:	8b 4b 24             	mov    0x24(%ebx),%ecx
81006424:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81006429:	39 c7                	cmp    %eax,%edi
8100642b:	0f 46 c7             	cmovbe %edi,%eax
8100642e:	89 c2                	mov    %eax,%edx
81006430:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006433:	52                   	push   %edx
81006434:	ff 75 c4             	push   -0x3c(%ebp)
81006437:	50                   	push   %eax
81006438:	ff 75 08             	push   0x8(%ebp)
8100643b:	ff d1                	call   *%ecx
8100643d:	83 c4 10             	add    $0x10,%esp
81006440:	89 c6                	mov    %eax,%esi
81006442:	85 f6                	test   %esi,%esi
81006444:	0f 8e cf 03 00 00    	jle    81006819 <__sfvwrite_r+0x47f>
8100644a:	89 f0                	mov    %esi,%eax
8100644c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100644f:	89 f0                	mov    %esi,%eax
81006451:	29 c7                	sub    %eax,%edi
81006453:	8b 45 10             	mov    0x10(%ebp),%eax
81006456:	8b 40 08             	mov    0x8(%eax),%eax
81006459:	89 f2                	mov    %esi,%edx
8100645b:	29 d0                	sub    %edx,%eax
8100645d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006460:	89 41 08             	mov    %eax,0x8(%ecx)
81006463:	8b 45 10             	mov    0x10(%ebp),%eax
81006466:	8b 40 08             	mov    0x8(%eax),%eax
81006469:	85 c0                	test   %eax,%eax
8100646b:	75 b0                	jne    8100641d <__sfvwrite_r+0x83>
8100646d:	e9 a0 03 00 00       	jmp    81006812 <__sfvwrite_r+0x478>
81006472:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006476:	98                   	cwtl   
81006477:	83 e0 01             	and    $0x1,%eax
8100647a:	85 c0                	test   %eax,%eax
8100647c:	0f 85 44 02 00 00    	jne    810066c6 <__sfvwrite_r+0x32c>
81006482:	eb 11                	jmp    81006495 <__sfvwrite_r+0xfb>
81006484:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006487:	8b 08                	mov    (%eax),%ecx
81006489:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100648c:	8b 78 04             	mov    0x4(%eax),%edi
8100648f:	83 c0 08             	add    $0x8,%eax
81006492:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006495:	85 ff                	test   %edi,%edi
81006497:	74 eb                	je     81006484 <__sfvwrite_r+0xea>
81006499:	8b 73 08             	mov    0x8(%ebx),%esi
8100649c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064a0:	98                   	cwtl   
810064a1:	25 00 02 00 00       	and    $0x200,%eax
810064a6:	85 c0                	test   %eax,%eax
810064a8:	0f 84 4f 01 00 00    	je     810065fd <__sfvwrite_r+0x263>
810064ae:	89 f0                	mov    %esi,%eax
810064b0:	39 c7                	cmp    %eax,%edi
810064b2:	0f 82 12 01 00 00    	jb     810065ca <__sfvwrite_r+0x230>
810064b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064bc:	98                   	cwtl   
810064bd:	25 80 04 00 00       	and    $0x480,%eax
810064c2:	85 c0                	test   %eax,%eax
810064c4:	0f 84 00 01 00 00    	je     810065ca <__sfvwrite_r+0x230>
810064ca:	8b 03                	mov    (%ebx),%eax
810064cc:	8b 53 10             	mov    0x10(%ebx),%edx
810064cf:	29 d0                	sub    %edx,%eax
810064d1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810064d4:	8b 53 14             	mov    0x14(%ebx),%edx
810064d7:	89 d0                	mov    %edx,%eax
810064d9:	01 c0                	add    %eax,%eax
810064db:	01 d0                	add    %edx,%eax
810064dd:	89 c2                	mov    %eax,%edx
810064df:	c1 ea 1f             	shr    $0x1f,%edx
810064e2:	01 d0                	add    %edx,%eax
810064e4:	d1 f8                	sar    %eax
810064e6:	89 45 d8             	mov    %eax,-0x28(%ebp)
810064e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810064ec:	01 f8                	add    %edi,%eax
810064ee:	8d 50 01             	lea    0x1(%eax),%edx
810064f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810064f4:	39 c2                	cmp    %eax,%edx
810064f6:	76 0b                	jbe    81006503 <__sfvwrite_r+0x169>
810064f8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810064fb:	01 f8                	add    %edi,%eax
810064fd:	83 c0 01             	add    $0x1,%eax
81006500:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006503:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006507:	98                   	cwtl   
81006508:	25 00 04 00 00       	and    $0x400,%eax
8100650d:	85 c0                	test   %eax,%eax
8100650f:	74 4f                	je     81006560 <__sfvwrite_r+0x1c6>
81006511:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006514:	83 ec 08             	sub    $0x8,%esp
81006517:	50                   	push   %eax
81006518:	ff 75 08             	push   0x8(%ebp)
8100651b:	e8 3c d2 ff ff       	call   8100375c <_malloc_r>
81006520:	83 c4 10             	add    $0x10,%esp
81006523:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006526:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100652a:	75 0e                	jne    8100653a <__sfvwrite_r+0x1a0>
8100652c:	8b 45 08             	mov    0x8(%ebp),%eax
8100652f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006535:	e9 e6 02 00 00       	jmp    81006820 <__sfvwrite_r+0x486>
8100653a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100653d:	8b 43 10             	mov    0x10(%ebx),%eax
81006540:	83 ec 04             	sub    $0x4,%esp
81006543:	52                   	push   %edx
81006544:	50                   	push   %eax
81006545:	ff 75 dc             	push   -0x24(%ebp)
81006548:	e8 1b db ff ff       	call   81004068 <memcpy>
8100654d:	83 c4 10             	add    $0x10,%esp
81006550:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006554:	66 25 7f fb          	and    $0xfb7f,%ax
81006558:	0c 80                	or     $0x80,%al
8100655a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100655e:	eb 49                	jmp    810065a9 <__sfvwrite_r+0x20f>
81006560:	8b 55 d8             	mov    -0x28(%ebp),%edx
81006563:	8b 43 10             	mov    0x10(%ebx),%eax
81006566:	83 ec 04             	sub    $0x4,%esp
81006569:	52                   	push   %edx
8100656a:	50                   	push   %eax
8100656b:	ff 75 08             	push   0x8(%ebp)
8100656e:	e8 a7 0f 00 00       	call   8100751a <_realloc_r>
81006573:	83 c4 10             	add    $0x10,%esp
81006576:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006579:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100657d:	75 2a                	jne    810065a9 <__sfvwrite_r+0x20f>
8100657f:	8b 43 10             	mov    0x10(%ebx),%eax
81006582:	83 ec 08             	sub    $0x8,%esp
81006585:	50                   	push   %eax
81006586:	ff 75 08             	push   0x8(%ebp)
81006589:	e8 0b b3 ff ff       	call   81001899 <_free_r>
8100658e:	83 c4 10             	add    $0x10,%esp
81006591:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006595:	24 7f                	and    $0x7f,%al
81006597:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100659b:	8b 45 08             	mov    0x8(%ebp),%eax
8100659e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810065a4:	e9 77 02 00 00       	jmp    81006820 <__sfvwrite_r+0x486>
810065a9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810065ac:	89 43 10             	mov    %eax,0x10(%ebx)
810065af:	8b 55 d0             	mov    -0x30(%ebp),%edx
810065b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810065b5:	01 d0                	add    %edx,%eax
810065b7:	89 03                	mov    %eax,(%ebx)
810065b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810065bc:	89 43 14             	mov    %eax,0x14(%ebx)
810065bf:	89 fe                	mov    %edi,%esi
810065c1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810065c4:	2b 45 d0             	sub    -0x30(%ebp),%eax
810065c7:	89 43 08             	mov    %eax,0x8(%ebx)
810065ca:	89 f0                	mov    %esi,%eax
810065cc:	39 c7                	cmp    %eax,%edi
810065ce:	73 02                	jae    810065d2 <__sfvwrite_r+0x238>
810065d0:	89 fe                	mov    %edi,%esi
810065d2:	89 f2                	mov    %esi,%edx
810065d4:	8b 03                	mov    (%ebx),%eax
810065d6:	83 ec 04             	sub    $0x4,%esp
810065d9:	52                   	push   %edx
810065da:	ff 75 c4             	push   -0x3c(%ebp)
810065dd:	50                   	push   %eax
810065de:	e8 3d 06 00 00       	call   81006c20 <memmove>
810065e3:	83 c4 10             	add    $0x10,%esp
810065e6:	8b 43 08             	mov    0x8(%ebx),%eax
810065e9:	29 f0                	sub    %esi,%eax
810065eb:	89 43 08             	mov    %eax,0x8(%ebx)
810065ee:	8b 03                	mov    (%ebx),%eax
810065f0:	89 f2                	mov    %esi,%edx
810065f2:	01 d0                	add    %edx,%eax
810065f4:	89 03                	mov    %eax,(%ebx)
810065f6:	89 fe                	mov    %edi,%esi
810065f8:	e9 9d 00 00 00       	jmp    8100669a <__sfvwrite_r+0x300>
810065fd:	8b 13                	mov    (%ebx),%edx
810065ff:	8b 43 10             	mov    0x10(%ebx),%eax
81006602:	39 c2                	cmp    %eax,%edx
81006604:	77 07                	ja     8100660d <__sfvwrite_r+0x273>
81006606:	8b 43 14             	mov    0x14(%ebx),%eax
81006609:	39 c7                	cmp    %eax,%edi
8100660b:	73 4c                	jae    81006659 <__sfvwrite_r+0x2bf>
8100660d:	89 f0                	mov    %esi,%eax
8100660f:	39 c7                	cmp    %eax,%edi
81006611:	0f 46 c7             	cmovbe %edi,%eax
81006614:	89 c6                	mov    %eax,%esi
81006616:	89 f2                	mov    %esi,%edx
81006618:	8b 03                	mov    (%ebx),%eax
8100661a:	83 ec 04             	sub    $0x4,%esp
8100661d:	52                   	push   %edx
8100661e:	ff 75 c4             	push   -0x3c(%ebp)
81006621:	50                   	push   %eax
81006622:	e8 f9 05 00 00       	call   81006c20 <memmove>
81006627:	83 c4 10             	add    $0x10,%esp
8100662a:	8b 43 08             	mov    0x8(%ebx),%eax
8100662d:	29 f0                	sub    %esi,%eax
8100662f:	89 43 08             	mov    %eax,0x8(%ebx)
81006632:	8b 03                	mov    (%ebx),%eax
81006634:	89 f2                	mov    %esi,%edx
81006636:	01 d0                	add    %edx,%eax
81006638:	89 03                	mov    %eax,(%ebx)
8100663a:	8b 43 08             	mov    0x8(%ebx),%eax
8100663d:	85 c0                	test   %eax,%eax
8100663f:	75 58                	jne    81006699 <__sfvwrite_r+0x2ff>
81006641:	83 ec 08             	sub    $0x8,%esp
81006644:	53                   	push   %ebx
81006645:	ff 75 08             	push   0x8(%ebp)
81006648:	e8 f3 aa ff ff       	call   81001140 <_fflush_r>
8100664d:	83 c4 10             	add    $0x10,%esp
81006650:	85 c0                	test   %eax,%eax
81006652:	74 45                	je     81006699 <__sfvwrite_r+0x2ff>
81006654:	e9 c7 01 00 00       	jmp    81006820 <__sfvwrite_r+0x486>
81006659:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
8100665f:	77 04                	ja     81006665 <__sfvwrite_r+0x2cb>
81006661:	89 f8                	mov    %edi,%eax
81006663:	eb 05                	jmp    8100666a <__sfvwrite_r+0x2d0>
81006665:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8100666a:	8b 4b 14             	mov    0x14(%ebx),%ecx
8100666d:	99                   	cltd   
8100666e:	f7 f9                	idiv   %ecx
81006670:	89 c2                	mov    %eax,%edx
81006672:	8b 43 14             	mov    0x14(%ebx),%eax
81006675:	89 d6                	mov    %edx,%esi
81006677:	0f af f0             	imul   %eax,%esi
8100667a:	8b 53 24             	mov    0x24(%ebx),%edx
8100667d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006680:	56                   	push   %esi
81006681:	ff 75 c4             	push   -0x3c(%ebp)
81006684:	50                   	push   %eax
81006685:	ff 75 08             	push   0x8(%ebp)
81006688:	ff d2                	call   *%edx
8100668a:	83 c4 10             	add    $0x10,%esp
8100668d:	89 c6                	mov    %eax,%esi
8100668f:	85 f6                	test   %esi,%esi
81006691:	0f 8e 85 01 00 00    	jle    8100681c <__sfvwrite_r+0x482>
81006697:	eb 01                	jmp    8100669a <__sfvwrite_r+0x300>
81006699:	90                   	nop
8100669a:	89 f0                	mov    %esi,%eax
8100669c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100669f:	89 f0                	mov    %esi,%eax
810066a1:	29 c7                	sub    %eax,%edi
810066a3:	8b 45 10             	mov    0x10(%ebp),%eax
810066a6:	8b 40 08             	mov    0x8(%eax),%eax
810066a9:	89 f2                	mov    %esi,%edx
810066ab:	29 d0                	sub    %edx,%eax
810066ad:	8b 4d 10             	mov    0x10(%ebp),%ecx
810066b0:	89 41 08             	mov    %eax,0x8(%ecx)
810066b3:	8b 45 10             	mov    0x10(%ebp),%eax
810066b6:	8b 40 08             	mov    0x8(%eax),%eax
810066b9:	85 c0                	test   %eax,%eax
810066bb:	0f 85 d4 fd ff ff    	jne    81006495 <__sfvwrite_r+0xfb>
810066c1:	e9 4c 01 00 00       	jmp    81006812 <__sfvwrite_r+0x478>
810066c6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810066cd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810066d4:	eb 18                	jmp    810066ee <__sfvwrite_r+0x354>
810066d6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810066dd:	8b 45 c0             	mov    -0x40(%ebp),%eax
810066e0:	8b 08                	mov    (%eax),%ecx
810066e2:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810066e5:	8b 78 04             	mov    0x4(%eax),%edi
810066e8:	83 c0 08             	add    $0x8,%eax
810066eb:	89 45 c0             	mov    %eax,-0x40(%ebp)
810066ee:	85 ff                	test   %edi,%edi
810066f0:	74 e4                	je     810066d6 <__sfvwrite_r+0x33c>
810066f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810066f6:	75 32                	jne    8100672a <__sfvwrite_r+0x390>
810066f8:	83 ec 04             	sub    $0x4,%esp
810066fb:	57                   	push   %edi
810066fc:	6a 0a                	push   $0xa
810066fe:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006701:	56                   	push   %esi
81006702:	e8 79 d8 ff ff       	call   81003f80 <memchr>
81006707:	83 c4 10             	add    $0x10,%esp
8100670a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100670d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81006711:	74 0a                	je     8100671d <__sfvwrite_r+0x383>
81006713:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006716:	83 c0 01             	add    $0x1,%eax
81006719:	29 f0                	sub    %esi,%eax
8100671b:	eb 03                	jmp    81006720 <__sfvwrite_r+0x386>
8100671d:	8d 47 01             	lea    0x1(%edi),%eax
81006720:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006723:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100672a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100672d:	39 c7                	cmp    %eax,%edi
8100672f:	0f 46 c7             	cmovbe %edi,%eax
81006732:	89 c1                	mov    %eax,%ecx
81006734:	8b 53 08             	mov    0x8(%ebx),%edx
81006737:	8b 43 14             	mov    0x14(%ebx),%eax
8100673a:	8d 34 02             	lea    (%edx,%eax,1),%esi
8100673d:	8b 13                	mov    (%ebx),%edx
8100673f:	8b 43 10             	mov    0x10(%ebx),%eax
81006742:	39 c2                	cmp    %eax,%edx
81006744:	76 38                	jbe    8100677e <__sfvwrite_r+0x3e4>
81006746:	39 f1                	cmp    %esi,%ecx
81006748:	7e 34                	jle    8100677e <__sfvwrite_r+0x3e4>
8100674a:	89 f2                	mov    %esi,%edx
8100674c:	8b 03                	mov    (%ebx),%eax
8100674e:	83 ec 04             	sub    $0x4,%esp
81006751:	52                   	push   %edx
81006752:	ff 75 c4             	push   -0x3c(%ebp)
81006755:	50                   	push   %eax
81006756:	e8 c5 04 00 00       	call   81006c20 <memmove>
8100675b:	83 c4 10             	add    $0x10,%esp
8100675e:	8b 03                	mov    (%ebx),%eax
81006760:	89 f2                	mov    %esi,%edx
81006762:	01 d0                	add    %edx,%eax
81006764:	89 03                	mov    %eax,(%ebx)
81006766:	83 ec 08             	sub    $0x8,%esp
81006769:	53                   	push   %ebx
8100676a:	ff 75 08             	push   0x8(%ebp)
8100676d:	e8 ce a9 ff ff       	call   81001140 <_fflush_r>
81006772:	83 c4 10             	add    $0x10,%esp
81006775:	85 c0                	test   %eax,%eax
81006777:	74 4f                	je     810067c8 <__sfvwrite_r+0x42e>
81006779:	e9 a2 00 00 00       	jmp    81006820 <__sfvwrite_r+0x486>
8100677e:	8b 73 14             	mov    0x14(%ebx),%esi
81006781:	89 c8                	mov    %ecx,%eax
81006783:	39 c6                	cmp    %eax,%esi
81006785:	7f 1b                	jg     810067a2 <__sfvwrite_r+0x408>
81006787:	8b 53 24             	mov    0x24(%ebx),%edx
8100678a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100678d:	56                   	push   %esi
8100678e:	ff 75 c4             	push   -0x3c(%ebp)
81006791:	50                   	push   %eax
81006792:	ff 75 08             	push   0x8(%ebp)
81006795:	ff d2                	call   *%edx
81006797:	83 c4 10             	add    $0x10,%esp
8100679a:	89 c6                	mov    %eax,%esi
8100679c:	85 f6                	test   %esi,%esi
8100679e:	7f 28                	jg     810067c8 <__sfvwrite_r+0x42e>
810067a0:	eb 7e                	jmp    81006820 <__sfvwrite_r+0x486>
810067a2:	89 ce                	mov    %ecx,%esi
810067a4:	89 f2                	mov    %esi,%edx
810067a6:	8b 03                	mov    (%ebx),%eax
810067a8:	83 ec 04             	sub    $0x4,%esp
810067ab:	52                   	push   %edx
810067ac:	ff 75 c4             	push   -0x3c(%ebp)
810067af:	50                   	push   %eax
810067b0:	e8 6b 04 00 00       	call   81006c20 <memmove>
810067b5:	83 c4 10             	add    $0x10,%esp
810067b8:	8b 43 08             	mov    0x8(%ebx),%eax
810067bb:	29 f0                	sub    %esi,%eax
810067bd:	89 43 08             	mov    %eax,0x8(%ebx)
810067c0:	8b 03                	mov    (%ebx),%eax
810067c2:	89 f2                	mov    %esi,%edx
810067c4:	01 d0                	add    %edx,%eax
810067c6:	89 03                	mov    %eax,(%ebx)
810067c8:	29 75 e0             	sub    %esi,-0x20(%ebp)
810067cb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810067cf:	75 1a                	jne    810067eb <__sfvwrite_r+0x451>
810067d1:	83 ec 08             	sub    $0x8,%esp
810067d4:	53                   	push   %ebx
810067d5:	ff 75 08             	push   0x8(%ebp)
810067d8:	e8 63 a9 ff ff       	call   81001140 <_fflush_r>
810067dd:	83 c4 10             	add    $0x10,%esp
810067e0:	85 c0                	test   %eax,%eax
810067e2:	75 3b                	jne    8100681f <__sfvwrite_r+0x485>
810067e4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810067eb:	89 f0                	mov    %esi,%eax
810067ed:	01 45 c4             	add    %eax,-0x3c(%ebp)
810067f0:	89 f0                	mov    %esi,%eax
810067f2:	29 c7                	sub    %eax,%edi
810067f4:	8b 45 10             	mov    0x10(%ebp),%eax
810067f7:	8b 40 08             	mov    0x8(%eax),%eax
810067fa:	89 f2                	mov    %esi,%edx
810067fc:	29 d0                	sub    %edx,%eax
810067fe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006801:	89 41 08             	mov    %eax,0x8(%ecx)
81006804:	8b 45 10             	mov    0x10(%ebp),%eax
81006807:	8b 40 08             	mov    0x8(%eax),%eax
8100680a:	85 c0                	test   %eax,%eax
8100680c:	0f 85 dc fe ff ff    	jne    810066ee <__sfvwrite_r+0x354>
81006812:	b8 00 00 00 00       	mov    $0x0,%eax
81006817:	eb 17                	jmp    81006830 <__sfvwrite_r+0x496>
81006819:	90                   	nop
8100681a:	eb 04                	jmp    81006820 <__sfvwrite_r+0x486>
8100681c:	90                   	nop
8100681d:	eb 01                	jmp    81006820 <__sfvwrite_r+0x486>
8100681f:	90                   	nop
81006820:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006824:	83 c8 40             	or     $0x40,%eax
81006827:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100682b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006830:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006833:	5b                   	pop    %ebx
81006834:	5e                   	pop    %esi
81006835:	5f                   	pop    %edi
81006836:	5d                   	pop    %ebp
81006837:	c3                   	ret    

81006838 <_getc_r>:
81006838:	55                   	push   %ebp
81006839:	89 e5                	mov    %esp,%ebp
8100683b:	53                   	push   %ebx
8100683c:	83 ec 14             	sub    $0x14,%esp
8100683f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006842:	8b 45 08             	mov    0x8(%ebp),%eax
81006845:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006848:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100684c:	74 18                	je     81006866 <_getc_r+0x2e>
8100684e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006851:	8b 40 38             	mov    0x38(%eax),%eax
81006854:	85 c0                	test   %eax,%eax
81006856:	75 0e                	jne    81006866 <_getc_r+0x2e>
81006858:	83 ec 0c             	sub    $0xc,%esp
8100685b:	ff 75 f4             	push   -0xc(%ebp)
8100685e:	e8 e0 ad ff ff       	call   81001643 <__sinit>
81006863:	83 c4 10             	add    $0x10,%esp
81006866:	8b 43 04             	mov    0x4(%ebx),%eax
81006869:	83 e8 01             	sub    $0x1,%eax
8100686c:	89 43 04             	mov    %eax,0x4(%ebx)
8100686f:	8b 43 04             	mov    0x4(%ebx),%eax
81006872:	85 c0                	test   %eax,%eax
81006874:	79 11                	jns    81006887 <_getc_r+0x4f>
81006876:	83 ec 08             	sub    $0x8,%esp
81006879:	53                   	push   %ebx
8100687a:	ff 75 08             	push   0x8(%ebp)
8100687d:	e8 72 15 00 00       	call   81007df4 <__srget_r>
81006882:	83 c4 10             	add    $0x10,%esp
81006885:	eb 0d                	jmp    81006894 <_getc_r+0x5c>
81006887:	8b 03                	mov    (%ebx),%eax
81006889:	8d 50 01             	lea    0x1(%eax),%edx
8100688c:	89 13                	mov    %edx,(%ebx)
8100688e:	0f b6 00             	movzbl (%eax),%eax
81006891:	0f b6 c0             	movzbl %al,%eax
81006894:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006897:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100689a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100689d:	c9                   	leave  
8100689e:	c3                   	ret    

8100689f <getc>:
8100689f:	55                   	push   %ebp
810068a0:	89 e5                	mov    %esp,%ebp
810068a2:	53                   	push   %ebx
810068a3:	83 ec 14             	sub    $0x14,%esp
810068a6:	8b 5d 08             	mov    0x8(%ebp),%ebx
810068a9:	a1 64 8c 00 81       	mov    0x81008c64,%eax
810068ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068b7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810068bb:	74 18                	je     810068d5 <getc+0x36>
810068bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810068c0:	8b 40 38             	mov    0x38(%eax),%eax
810068c3:	85 c0                	test   %eax,%eax
810068c5:	75 0e                	jne    810068d5 <getc+0x36>
810068c7:	83 ec 0c             	sub    $0xc,%esp
810068ca:	ff 75 f0             	push   -0x10(%ebp)
810068cd:	e8 71 ad ff ff       	call   81001643 <__sinit>
810068d2:	83 c4 10             	add    $0x10,%esp
810068d5:	8b 43 04             	mov    0x4(%ebx),%eax
810068d8:	83 e8 01             	sub    $0x1,%eax
810068db:	89 43 04             	mov    %eax,0x4(%ebx)
810068de:	8b 43 04             	mov    0x4(%ebx),%eax
810068e1:	85 c0                	test   %eax,%eax
810068e3:	79 11                	jns    810068f6 <getc+0x57>
810068e5:	83 ec 08             	sub    $0x8,%esp
810068e8:	53                   	push   %ebx
810068e9:	ff 75 f4             	push   -0xc(%ebp)
810068ec:	e8 03 15 00 00       	call   81007df4 <__srget_r>
810068f1:	83 c4 10             	add    $0x10,%esp
810068f4:	eb 0d                	jmp    81006903 <getc+0x64>
810068f6:	8b 03                	mov    (%ebx),%eax
810068f8:	8d 50 01             	lea    0x1(%eax),%edx
810068fb:	89 13                	mov    %edx,(%ebx)
810068fd:	0f b6 00             	movzbl (%eax),%eax
81006900:	0f b6 c0             	movzbl %al,%eax
81006903:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006906:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006909:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100690c:	c9                   	leave  
8100690d:	c3                   	ret    

8100690e <_findenv>:
8100690e:	55                   	push   %ebp
8100690f:	89 e5                	mov    %esp,%ebp
81006911:	83 ec 08             	sub    $0x8,%esp
81006914:	8b 55 08             	mov    0x8(%ebp),%edx
81006917:	a1 64 8c 00 81       	mov    0x81008c64,%eax
8100691c:	83 ec 04             	sub    $0x4,%esp
8100691f:	ff 75 0c             	push   0xc(%ebp)
81006922:	52                   	push   %edx
81006923:	50                   	push   %eax
81006924:	e8 25 00 00 00       	call   8100694e <_findenv_r>
81006929:	83 c4 10             	add    $0x10,%esp
8100692c:	c9                   	leave  
8100692d:	c3                   	ret    

8100692e <getenv>:
8100692e:	55                   	push   %ebp
8100692f:	89 e5                	mov    %esp,%ebp
81006931:	83 ec 18             	sub    $0x18,%esp
81006934:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81006939:	83 ec 04             	sub    $0x4,%esp
8100693c:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100693f:	52                   	push   %edx
81006940:	ff 75 08             	push   0x8(%ebp)
81006943:	50                   	push   %eax
81006944:	e8 05 00 00 00       	call   8100694e <_findenv_r>
81006949:	83 c4 10             	add    $0x10,%esp
8100694c:	c9                   	leave  
8100694d:	c3                   	ret    

8100694e <_findenv_r>:
8100694e:	55                   	push   %ebp
8100694f:	89 e5                	mov    %esp,%ebp
81006951:	57                   	push   %edi
81006952:	56                   	push   %esi
81006953:	53                   	push   %ebx
81006954:	83 ec 1c             	sub    $0x1c,%esp
81006957:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100695a:	83 ec 0c             	sub    $0xc,%esp
8100695d:	ff 75 08             	push   0x8(%ebp)
81006960:	e8 77 17 00 00       	call   810080dc <__env_lock>
81006965:	83 c4 10             	add    $0x10,%esp
81006968:	a1 90 90 00 81       	mov    0x81009090,%eax
8100696d:	8b 00                	mov    (%eax),%eax
8100696f:	85 c0                	test   %eax,%eax
81006971:	75 18                	jne    8100698b <_findenv_r+0x3d>
81006973:	83 ec 0c             	sub    $0xc,%esp
81006976:	ff 75 08             	push   0x8(%ebp)
81006979:	e8 64 17 00 00       	call   810080e2 <__env_unlock>
8100697e:	83 c4 10             	add    $0x10,%esp
81006981:	b8 00 00 00 00       	mov    $0x0,%eax
81006986:	e9 a8 00 00 00       	jmp    81006a33 <_findenv_r+0xe5>
8100698b:	89 7d e4             	mov    %edi,-0x1c(%ebp)
8100698e:	eb 04                	jmp    81006994 <_findenv_r+0x46>
81006990:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006994:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006997:	0f b6 00             	movzbl (%eax),%eax
8100699a:	84 c0                	test   %al,%al
8100699c:	74 0a                	je     810069a8 <_findenv_r+0x5a>
8100699e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810069a1:	0f b6 00             	movzbl (%eax),%eax
810069a4:	3c 3d                	cmp    $0x3d,%al
810069a6:	75 e8                	jne    81006990 <_findenv_r+0x42>
810069a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810069ab:	0f b6 00             	movzbl (%eax),%eax
810069ae:	3c 3d                	cmp    $0x3d,%al
810069b0:	74 6e                	je     81006a20 <_findenv_r+0xd2>
810069b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810069b5:	29 f8                	sub    %edi,%eax
810069b7:	89 c6                	mov    %eax,%esi
810069b9:	a1 90 90 00 81       	mov    0x81009090,%eax
810069be:	8b 18                	mov    (%eax),%ebx
810069c0:	eb 58                	jmp    81006a1a <_findenv_r+0xcc>
810069c2:	89 f2                	mov    %esi,%edx
810069c4:	8b 03                	mov    (%ebx),%eax
810069c6:	83 ec 04             	sub    $0x4,%esp
810069c9:	52                   	push   %edx
810069ca:	57                   	push   %edi
810069cb:	50                   	push   %eax
810069cc:	e8 a3 14 00 00       	call   81007e74 <strncmp>
810069d1:	83 c4 10             	add    $0x10,%esp
810069d4:	85 c0                	test   %eax,%eax
810069d6:	75 3f                	jne    81006a17 <_findenv_r+0xc9>
810069d8:	8b 03                	mov    (%ebx),%eax
810069da:	89 f2                	mov    %esi,%edx
810069dc:	01 d0                	add    %edx,%eax
810069de:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810069e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810069e4:	0f b6 00             	movzbl (%eax),%eax
810069e7:	3c 3d                	cmp    $0x3d,%al
810069e9:	75 2c                	jne    81006a17 <_findenv_r+0xc9>
810069eb:	a1 90 90 00 81       	mov    0x81009090,%eax
810069f0:	8b 10                	mov    (%eax),%edx
810069f2:	89 d8                	mov    %ebx,%eax
810069f4:	29 d0                	sub    %edx,%eax
810069f6:	c1 f8 02             	sar    $0x2,%eax
810069f9:	89 c2                	mov    %eax,%edx
810069fb:	8b 45 10             	mov    0x10(%ebp),%eax
810069fe:	89 10                	mov    %edx,(%eax)
81006a00:	83 ec 0c             	sub    $0xc,%esp
81006a03:	ff 75 08             	push   0x8(%ebp)
81006a06:	e8 d7 16 00 00       	call   810080e2 <__env_unlock>
81006a0b:	83 c4 10             	add    $0x10,%esp
81006a0e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006a12:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006a15:	eb 1c                	jmp    81006a33 <_findenv_r+0xe5>
81006a17:	83 c3 04             	add    $0x4,%ebx
81006a1a:	8b 03                	mov    (%ebx),%eax
81006a1c:	85 c0                	test   %eax,%eax
81006a1e:	75 a2                	jne    810069c2 <_findenv_r+0x74>
81006a20:	83 ec 0c             	sub    $0xc,%esp
81006a23:	ff 75 08             	push   0x8(%ebp)
81006a26:	e8 b7 16 00 00       	call   810080e2 <__env_unlock>
81006a2b:	83 c4 10             	add    $0x10,%esp
81006a2e:	b8 00 00 00 00       	mov    $0x0,%eax
81006a33:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006a36:	5b                   	pop    %ebx
81006a37:	5e                   	pop    %esi
81006a38:	5f                   	pop    %edi
81006a39:	5d                   	pop    %ebp
81006a3a:	c3                   	ret    

81006a3b <_getenv_r>:
81006a3b:	55                   	push   %ebp
81006a3c:	89 e5                	mov    %esp,%ebp
81006a3e:	83 ec 18             	sub    $0x18,%esp
81006a41:	83 ec 04             	sub    $0x4,%esp
81006a44:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006a47:	50                   	push   %eax
81006a48:	ff 75 0c             	push   0xc(%ebp)
81006a4b:	ff 75 08             	push   0x8(%ebp)
81006a4e:	e8 fb fe ff ff       	call   8100694e <_findenv_r>
81006a53:	83 c4 10             	add    $0x10,%esp
81006a56:	c9                   	leave  
81006a57:	c3                   	ret    

81006a58 <_isatty_r>:
81006a58:	55                   	push   %ebp
81006a59:	89 e5                	mov    %esp,%ebp
81006a5b:	83 ec 18             	sub    $0x18,%esp
81006a5e:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
81006a65:	00 00 00 
81006a68:	83 ec 0c             	sub    $0xc,%esp
81006a6b:	ff 75 0c             	push   0xc(%ebp)
81006a6e:	e8 28 a1 ff ff       	call   81000b9b <isatty>
81006a73:	83 c4 10             	add    $0x10,%esp
81006a76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a79:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006a7d:	75 14                	jne    81006a93 <_isatty_r+0x3b>
81006a7f:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81006a84:	85 c0                	test   %eax,%eax
81006a86:	74 0b                	je     81006a93 <_isatty_r+0x3b>
81006a88:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81006a8e:	8b 45 08             	mov    0x8(%ebp),%eax
81006a91:	89 10                	mov    %edx,(%eax)
81006a93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a96:	c9                   	leave  
81006a97:	c3                   	ret    

81006a98 <__get_global_locale>:
81006a98:	55                   	push   %ebp
81006a99:	89 e5                	mov    %esp,%ebp
81006a9b:	b8 a0 90 00 81       	mov    $0x810090a0,%eax
81006aa0:	5d                   	pop    %ebp
81006aa1:	c3                   	ret    

81006aa2 <__get_current_locale>:
81006aa2:	55                   	push   %ebp
81006aa3:	89 e5                	mov    %esp,%ebp
81006aa5:	e8 ee ff ff ff       	call   81006a98 <__get_global_locale>
81006aaa:	5d                   	pop    %ebp
81006aab:	c3                   	ret    

81006aac <_setlocale_r>:
81006aac:	55                   	push   %ebp
81006aad:	89 e5                	mov    %esp,%ebp
81006aaf:	83 ec 08             	sub    $0x8,%esp
81006ab2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006ab6:	74 4c                	je     81006b04 <_setlocale_r+0x58>
81006ab8:	83 ec 08             	sub    $0x8,%esp
81006abb:	68 04 88 00 81       	push   $0x81008804
81006ac0:	ff 75 10             	push   0x10(%ebp)
81006ac3:	e8 44 ec ff ff       	call   8100570c <strcmp>
81006ac8:	83 c4 10             	add    $0x10,%esp
81006acb:	85 c0                	test   %eax,%eax
81006acd:	74 35                	je     81006b04 <_setlocale_r+0x58>
81006acf:	83 ec 08             	sub    $0x8,%esp
81006ad2:	68 0a 88 00 81       	push   $0x8100880a
81006ad7:	ff 75 10             	push   0x10(%ebp)
81006ada:	e8 2d ec ff ff       	call   8100570c <strcmp>
81006adf:	83 c4 10             	add    $0x10,%esp
81006ae2:	85 c0                	test   %eax,%eax
81006ae4:	74 1e                	je     81006b04 <_setlocale_r+0x58>
81006ae6:	83 ec 08             	sub    $0x8,%esp
81006ae9:	68 03 88 00 81       	push   $0x81008803
81006aee:	ff 75 10             	push   0x10(%ebp)
81006af1:	e8 16 ec ff ff       	call   8100570c <strcmp>
81006af6:	83 c4 10             	add    $0x10,%esp
81006af9:	85 c0                	test   %eax,%eax
81006afb:	74 07                	je     81006b04 <_setlocale_r+0x58>
81006afd:	b8 00 00 00 00       	mov    $0x0,%eax
81006b02:	eb 05                	jmp    81006b09 <_setlocale_r+0x5d>
81006b04:	b8 0a 88 00 81       	mov    $0x8100880a,%eax
81006b09:	c9                   	leave  
81006b0a:	c3                   	ret    

81006b0b <__locale_mb_cur_max>:
81006b0b:	55                   	push   %ebp
81006b0c:	89 e5                	mov    %esp,%ebp
81006b0e:	e8 8f ff ff ff       	call   81006aa2 <__get_current_locale>
81006b13:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006b1a:	0f be c0             	movsbl %al,%eax
81006b1d:	5d                   	pop    %ebp
81006b1e:	c3                   	ret    

81006b1f <setlocale>:
81006b1f:	55                   	push   %ebp
81006b20:	89 e5                	mov    %esp,%ebp
81006b22:	83 ec 08             	sub    $0x8,%esp
81006b25:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81006b2a:	83 ec 04             	sub    $0x4,%esp
81006b2d:	ff 75 0c             	push   0xc(%ebp)
81006b30:	ff 75 08             	push   0x8(%ebp)
81006b33:	50                   	push   %eax
81006b34:	e8 73 ff ff ff       	call   81006aac <_setlocale_r>
81006b39:	83 c4 10             	add    $0x10,%esp
81006b3c:	c9                   	leave  
81006b3d:	c3                   	ret    

81006b3e <_lseek_r>:
81006b3e:	55                   	push   %ebp
81006b3f:	89 e5                	mov    %esp,%ebp
81006b41:	83 ec 18             	sub    $0x18,%esp
81006b44:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
81006b4b:	00 00 00 
81006b4e:	83 ec 04             	sub    $0x4,%esp
81006b51:	ff 75 14             	push   0x14(%ebp)
81006b54:	ff 75 10             	push   0x10(%ebp)
81006b57:	ff 75 0c             	push   0xc(%ebp)
81006b5a:	e8 0f a0 ff ff       	call   81000b6e <lseek>
81006b5f:	83 c4 10             	add    $0x10,%esp
81006b62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b65:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006b69:	75 14                	jne    81006b7f <_lseek_r+0x41>
81006b6b:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81006b70:	85 c0                	test   %eax,%eax
81006b72:	74 0b                	je     81006b7f <_lseek_r+0x41>
81006b74:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81006b7a:	8b 45 08             	mov    0x8(%ebp),%eax
81006b7d:	89 10                	mov    %edx,(%eax)
81006b7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b82:	c9                   	leave  
81006b83:	c3                   	ret    

81006b84 <__get_global_locale>:
81006b84:	55                   	push   %ebp
81006b85:	89 e5                	mov    %esp,%ebp
81006b87:	b8 a0 90 00 81       	mov    $0x810090a0,%eax
81006b8c:	5d                   	pop    %ebp
81006b8d:	c3                   	ret    

81006b8e <__get_current_locale>:
81006b8e:	55                   	push   %ebp
81006b8f:	89 e5                	mov    %esp,%ebp
81006b91:	e8 ee ff ff ff       	call   81006b84 <__get_global_locale>
81006b96:	5d                   	pop    %ebp
81006b97:	c3                   	ret    

81006b98 <_mbtowc_r>:
81006b98:	55                   	push   %ebp
81006b99:	89 e5                	mov    %esp,%ebp
81006b9b:	83 ec 08             	sub    $0x8,%esp
81006b9e:	e8 eb ff ff ff       	call   81006b8e <__get_current_locale>
81006ba3:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006ba9:	83 ec 0c             	sub    $0xc,%esp
81006bac:	ff 75 18             	push   0x18(%ebp)
81006baf:	ff 75 14             	push   0x14(%ebp)
81006bb2:	ff 75 10             	push   0x10(%ebp)
81006bb5:	ff 75 0c             	push   0xc(%ebp)
81006bb8:	ff 75 08             	push   0x8(%ebp)
81006bbb:	ff d0                	call   *%eax
81006bbd:	83 c4 20             	add    $0x20,%esp
81006bc0:	c9                   	leave  
81006bc1:	c3                   	ret    

81006bc2 <__ascii_mbtowc>:
81006bc2:	55                   	push   %ebp
81006bc3:	89 e5                	mov    %esp,%ebp
81006bc5:	83 ec 10             	sub    $0x10,%esp
81006bc8:	8b 45 10             	mov    0x10(%ebp),%eax
81006bcb:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006bce:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006bd2:	75 06                	jne    81006bda <__ascii_mbtowc+0x18>
81006bd4:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006bd7:	89 45 0c             	mov    %eax,0xc(%ebp)
81006bda:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006bde:	75 07                	jne    81006be7 <__ascii_mbtowc+0x25>
81006be0:	b8 00 00 00 00       	mov    $0x0,%eax
81006be5:	eb 31                	jmp    81006c18 <__ascii_mbtowc+0x56>
81006be7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006beb:	75 07                	jne    81006bf4 <__ascii_mbtowc+0x32>
81006bed:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006bf2:	eb 24                	jmp    81006c18 <__ascii_mbtowc+0x56>
81006bf4:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006bf7:	0f b6 00             	movzbl (%eax),%eax
81006bfa:	0f b6 d0             	movzbl %al,%edx
81006bfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81006c00:	89 10                	mov    %edx,(%eax)
81006c02:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c05:	0f b6 00             	movzbl (%eax),%eax
81006c08:	84 c0                	test   %al,%al
81006c0a:	75 07                	jne    81006c13 <__ascii_mbtowc+0x51>
81006c0c:	b8 00 00 00 00       	mov    $0x0,%eax
81006c11:	eb 05                	jmp    81006c18 <__ascii_mbtowc+0x56>
81006c13:	b8 01 00 00 00       	mov    $0x1,%eax
81006c18:	c9                   	leave  
81006c19:	c3                   	ret    
81006c1a:	66 90                	xchg   %ax,%ax
81006c1c:	66 90                	xchg   %ax,%ax
81006c1e:	66 90                	xchg   %ax,%ax

81006c20 <memmove>:
81006c20:	55                   	push   %ebp
81006c21:	89 e5                	mov    %esp,%ebp
81006c23:	56                   	push   %esi
81006c24:	57                   	push   %edi
81006c25:	53                   	push   %ebx
81006c26:	8b 7d 08             	mov    0x8(%ebp),%edi
81006c29:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006c2c:	8b 75 0c             	mov    0xc(%ebp),%esi
81006c2f:	fc                   	cld    
81006c30:	39 fe                	cmp    %edi,%esi
81006c32:	73 43                	jae    81006c77 <memmove+0x57>
81006c34:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81006c38:	39 df                	cmp    %ebx,%edi
81006c3a:	77 3b                	ja     81006c77 <memmove+0x57>
81006c3c:	01 ce                	add    %ecx,%esi
81006c3e:	01 cf                	add    %ecx,%edi
81006c40:	fd                   	std    
81006c41:	83 f9 08             	cmp    $0x8,%ecx
81006c44:	76 2b                	jbe    81006c71 <memmove+0x51>
81006c46:	89 fa                	mov    %edi,%edx
81006c48:	89 cb                	mov    %ecx,%ebx
81006c4a:	83 e2 03             	and    $0x3,%edx
81006c4d:	74 0c                	je     81006c5b <memmove+0x3b>
81006c4f:	89 d1                	mov    %edx,%ecx
81006c51:	4e                   	dec    %esi
81006c52:	4f                   	dec    %edi
81006c53:	29 cb                	sub    %ecx,%ebx
81006c55:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006c57:	89 d9                	mov    %ebx,%ecx
81006c59:	46                   	inc    %esi
81006c5a:	47                   	inc    %edi
81006c5b:	c1 e9 02             	shr    $0x2,%ecx
81006c5e:	83 ee 04             	sub    $0x4,%esi
81006c61:	83 ef 04             	sub    $0x4,%edi
81006c64:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006c66:	83 c6 04             	add    $0x4,%esi
81006c69:	83 c7 04             	add    $0x4,%edi
81006c6c:	89 d9                	mov    %ebx,%ecx
81006c6e:	83 e1 03             	and    $0x3,%ecx
81006c71:	4e                   	dec    %esi
81006c72:	4f                   	dec    %edi
81006c73:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006c75:	eb 2a                	jmp    81006ca1 <memmove+0x81>
81006c77:	83 f9 08             	cmp    $0x8,%ecx
81006c7a:	76 23                	jbe    81006c9f <memmove+0x7f>
81006c7c:	89 fa                	mov    %edi,%edx
81006c7e:	89 cb                	mov    %ecx,%ebx
81006c80:	83 e2 03             	and    $0x3,%edx
81006c83:	74 10                	je     81006c95 <memmove+0x75>
81006c85:	b9 04 00 00 00       	mov    $0x4,%ecx
81006c8a:	29 d1                	sub    %edx,%ecx
81006c8c:	83 e1 03             	and    $0x3,%ecx
81006c8f:	29 cb                	sub    %ecx,%ebx
81006c91:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006c93:	89 d9                	mov    %ebx,%ecx
81006c95:	c1 e9 02             	shr    $0x2,%ecx
81006c98:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006c9a:	89 d9                	mov    %ebx,%ecx
81006c9c:	83 e1 03             	and    $0x3,%ecx
81006c9f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006ca1:	8b 45 08             	mov    0x8(%ebp),%eax
81006ca4:	fc                   	cld    
81006ca5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006ca8:	5b                   	pop    %ebx
81006ca9:	5f                   	pop    %edi
81006caa:	5e                   	pop    %esi
81006cab:	c9                   	leave  
81006cac:	c3                   	ret    

81006cad <__ssputs_r>:
81006cad:	55                   	push   %ebp
81006cae:	89 e5                	mov    %esp,%ebp
81006cb0:	53                   	push   %ebx
81006cb1:	83 ec 14             	sub    $0x14,%esp
81006cb4:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cb7:	8b 58 08             	mov    0x8(%eax),%ebx
81006cba:	89 d8                	mov    %ebx,%eax
81006cbc:	39 45 14             	cmp    %eax,0x14(%ebp)
81006cbf:	0f 82 3c 01 00 00    	jb     81006e01 <__ssputs_r+0x154>
81006cc5:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cc8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006ccc:	98                   	cwtl   
81006ccd:	25 80 04 00 00       	and    $0x480,%eax
81006cd2:	85 c0                	test   %eax,%eax
81006cd4:	0f 84 27 01 00 00    	je     81006e01 <__ssputs_r+0x154>
81006cda:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cdd:	8b 10                	mov    (%eax),%edx
81006cdf:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ce2:	8b 48 10             	mov    0x10(%eax),%ecx
81006ce5:	89 d0                	mov    %edx,%eax
81006ce7:	29 c8                	sub    %ecx,%eax
81006ce9:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006cec:	8b 45 0c             	mov    0xc(%ebp),%eax
81006cef:	8b 50 14             	mov    0x14(%eax),%edx
81006cf2:	89 d0                	mov    %edx,%eax
81006cf4:	01 c0                	add    %eax,%eax
81006cf6:	01 d0                	add    %edx,%eax
81006cf8:	89 c2                	mov    %eax,%edx
81006cfa:	c1 ea 1f             	shr    $0x1f,%edx
81006cfd:	01 d0                	add    %edx,%eax
81006cff:	d1 f8                	sar    %eax
81006d01:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006d04:	8b 55 ec             	mov    -0x14(%ebp),%edx
81006d07:	8b 45 14             	mov    0x14(%ebp),%eax
81006d0a:	01 d0                	add    %edx,%eax
81006d0c:	8d 50 01             	lea    0x1(%eax),%edx
81006d0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d12:	39 c2                	cmp    %eax,%edx
81006d14:	76 0e                	jbe    81006d24 <__ssputs_r+0x77>
81006d16:	8b 55 ec             	mov    -0x14(%ebp),%edx
81006d19:	8b 45 14             	mov    0x14(%ebp),%eax
81006d1c:	01 d0                	add    %edx,%eax
81006d1e:	83 c0 01             	add    $0x1,%eax
81006d21:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006d24:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d27:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006d2b:	98                   	cwtl   
81006d2c:	25 00 04 00 00       	and    $0x400,%eax
81006d31:	85 c0                	test   %eax,%eax
81006d33:	74 5a                	je     81006d8f <__ssputs_r+0xe2>
81006d35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d38:	83 ec 08             	sub    $0x8,%esp
81006d3b:	50                   	push   %eax
81006d3c:	ff 75 08             	push   0x8(%ebp)
81006d3f:	e8 18 ca ff ff       	call   8100375c <_malloc_r>
81006d44:	83 c4 10             	add    $0x10,%esp
81006d47:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006d4a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006d4e:	75 0e                	jne    81006d5e <__ssputs_r+0xb1>
81006d50:	8b 45 08             	mov    0x8(%ebp),%eax
81006d53:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006d59:	e9 e9 00 00 00       	jmp    81006e47 <__ssputs_r+0x19a>
81006d5e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81006d61:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d64:	8b 40 10             	mov    0x10(%eax),%eax
81006d67:	83 ec 04             	sub    $0x4,%esp
81006d6a:	52                   	push   %edx
81006d6b:	50                   	push   %eax
81006d6c:	ff 75 f4             	push   -0xc(%ebp)
81006d6f:	e8 f4 d2 ff ff       	call   81004068 <memcpy>
81006d74:	83 c4 10             	add    $0x10,%esp
81006d77:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d7a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006d7e:	66 25 7f fb          	and    $0xfb7f,%ax
81006d82:	0c 80                	or     $0x80,%al
81006d84:	89 c2                	mov    %eax,%edx
81006d86:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d89:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006d8d:	eb 42                	jmp    81006dd1 <__ssputs_r+0x124>
81006d8f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81006d92:	8b 45 0c             	mov    0xc(%ebp),%eax
81006d95:	8b 40 10             	mov    0x10(%eax),%eax
81006d98:	83 ec 04             	sub    $0x4,%esp
81006d9b:	52                   	push   %edx
81006d9c:	50                   	push   %eax
81006d9d:	ff 75 08             	push   0x8(%ebp)
81006da0:	e8 75 07 00 00       	call   8100751a <_realloc_r>
81006da5:	83 c4 10             	add    $0x10,%esp
81006da8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006dab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006daf:	75 20                	jne    81006dd1 <__ssputs_r+0x124>
81006db1:	8b 45 0c             	mov    0xc(%ebp),%eax
81006db4:	8b 40 10             	mov    0x10(%eax),%eax
81006db7:	83 ec 08             	sub    $0x8,%esp
81006dba:	50                   	push   %eax
81006dbb:	ff 75 08             	push   0x8(%ebp)
81006dbe:	e8 d6 aa ff ff       	call   81001899 <_free_r>
81006dc3:	83 c4 10             	add    $0x10,%esp
81006dc6:	8b 45 08             	mov    0x8(%ebp),%eax
81006dc9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006dcf:	eb 76                	jmp    81006e47 <__ssputs_r+0x19a>
81006dd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81006dd4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006dd7:	89 50 10             	mov    %edx,0x10(%eax)
81006dda:	8b 55 ec             	mov    -0x14(%ebp),%edx
81006ddd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006de0:	01 c2                	add    %eax,%edx
81006de2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006de5:	89 10                	mov    %edx,(%eax)
81006de7:	8b 45 0c             	mov    0xc(%ebp),%eax
81006dea:	8b 55 f0             	mov    -0x10(%ebp),%edx
81006ded:	89 50 14             	mov    %edx,0x14(%eax)
81006df0:	8b 5d 14             	mov    0x14(%ebp),%ebx
81006df3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006df6:	2b 45 ec             	sub    -0x14(%ebp),%eax
81006df9:	89 c2                	mov    %eax,%edx
81006dfb:	8b 45 0c             	mov    0xc(%ebp),%eax
81006dfe:	89 50 08             	mov    %edx,0x8(%eax)
81006e01:	89 d8                	mov    %ebx,%eax
81006e03:	39 45 14             	cmp    %eax,0x14(%ebp)
81006e06:	73 03                	jae    81006e0b <__ssputs_r+0x15e>
81006e08:	8b 5d 14             	mov    0x14(%ebp),%ebx
81006e0b:	89 da                	mov    %ebx,%edx
81006e0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e10:	8b 00                	mov    (%eax),%eax
81006e12:	83 ec 04             	sub    $0x4,%esp
81006e15:	52                   	push   %edx
81006e16:	ff 75 10             	push   0x10(%ebp)
81006e19:	50                   	push   %eax
81006e1a:	e8 01 fe ff ff       	call   81006c20 <memmove>
81006e1f:	83 c4 10             	add    $0x10,%esp
81006e22:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e25:	8b 40 08             	mov    0x8(%eax),%eax
81006e28:	29 d8                	sub    %ebx,%eax
81006e2a:	89 c2                	mov    %eax,%edx
81006e2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e2f:	89 50 08             	mov    %edx,0x8(%eax)
81006e32:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e35:	8b 00                	mov    (%eax),%eax
81006e37:	89 da                	mov    %ebx,%edx
81006e39:	01 c2                	add    %eax,%edx
81006e3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e3e:	89 10                	mov    %edx,(%eax)
81006e40:	b8 00 00 00 00       	mov    $0x0,%eax
81006e45:	eb 18                	jmp    81006e5f <__ssputs_r+0x1b2>
81006e47:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006e4e:	83 c8 40             	or     $0x40,%eax
81006e51:	89 c2                	mov    %eax,%edx
81006e53:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e56:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006e5a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006e5f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006e62:	c9                   	leave  
81006e63:	c3                   	ret    

81006e64 <__ssprint_r>:
81006e64:	55                   	push   %ebp
81006e65:	89 e5                	mov    %esp,%ebp
81006e67:	57                   	push   %edi
81006e68:	56                   	push   %esi
81006e69:	53                   	push   %ebx
81006e6a:	83 ec 2c             	sub    $0x2c,%esp
81006e6d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006e70:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81006e77:	8b 03                	mov    (%ebx),%eax
81006e79:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006e7c:	be 00 00 00 00       	mov    $0x0,%esi
81006e81:	8b 43 08             	mov    0x8(%ebx),%eax
81006e84:	85 c0                	test   %eax,%eax
81006e86:	75 22                	jne    81006eaa <__ssprint_r+0x46>
81006e88:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81006e8f:	b8 00 00 00 00       	mov    $0x0,%eax
81006e94:	e9 f5 01 00 00       	jmp    8100708e <__ssprint_r+0x22a>
81006e99:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006e9c:	8b 08                	mov    (%eax),%ecx
81006e9e:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81006ea1:	8b 70 04             	mov    0x4(%eax),%esi
81006ea4:	83 c0 08             	add    $0x8,%eax
81006ea7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006eaa:	85 f6                	test   %esi,%esi
81006eac:	74 eb                	je     81006e99 <__ssprint_r+0x35>
81006eae:	8b 45 0c             	mov    0xc(%ebp),%eax
81006eb1:	8b 78 08             	mov    0x8(%eax),%edi
81006eb4:	89 f8                	mov    %edi,%eax
81006eb6:	39 c6                	cmp    %eax,%esi
81006eb8:	0f 82 38 01 00 00    	jb     81006ff6 <__ssprint_r+0x192>
81006ebe:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ec1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006ec5:	98                   	cwtl   
81006ec6:	25 80 04 00 00       	and    $0x480,%eax
81006ecb:	85 c0                	test   %eax,%eax
81006ecd:	0f 84 23 01 00 00    	je     81006ff6 <__ssprint_r+0x192>
81006ed3:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ed6:	8b 10                	mov    (%eax),%edx
81006ed8:	8b 45 0c             	mov    0xc(%ebp),%eax
81006edb:	8b 48 10             	mov    0x10(%eax),%ecx
81006ede:	89 d0                	mov    %edx,%eax
81006ee0:	29 c8                	sub    %ecx,%eax
81006ee2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006ee5:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ee8:	8b 50 14             	mov    0x14(%eax),%edx
81006eeb:	89 d0                	mov    %edx,%eax
81006eed:	01 c0                	add    %eax,%eax
81006eef:	01 d0                	add    %edx,%eax
81006ef1:	89 c2                	mov    %eax,%edx
81006ef3:	c1 ea 1f             	shr    $0x1f,%edx
81006ef6:	01 d0                	add    %edx,%eax
81006ef8:	d1 f8                	sar    %eax
81006efa:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006efd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006f00:	01 f0                	add    %esi,%eax
81006f02:	8d 50 01             	lea    0x1(%eax),%edx
81006f05:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f08:	39 c2                	cmp    %eax,%edx
81006f0a:	76 0b                	jbe    81006f17 <__ssprint_r+0xb3>
81006f0c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006f0f:	01 f0                	add    %esi,%eax
81006f11:	83 c0 01             	add    $0x1,%eax
81006f14:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006f17:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f1a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006f1e:	98                   	cwtl   
81006f1f:	25 00 04 00 00       	and    $0x400,%eax
81006f24:	85 c0                	test   %eax,%eax
81006f26:	74 5a                	je     81006f82 <__ssprint_r+0x11e>
81006f28:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f2b:	83 ec 08             	sub    $0x8,%esp
81006f2e:	50                   	push   %eax
81006f2f:	ff 75 08             	push   0x8(%ebp)
81006f32:	e8 25 c8 ff ff       	call   8100375c <_malloc_r>
81006f37:	83 c4 10             	add    $0x10,%esp
81006f3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f3d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f41:	75 0e                	jne    81006f51 <__ssprint_r+0xed>
81006f43:	8b 45 08             	mov    0x8(%ebp),%eax
81006f46:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006f4c:	e9 17 01 00 00       	jmp    81007068 <__ssprint_r+0x204>
81006f51:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006f54:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f57:	8b 40 10             	mov    0x10(%eax),%eax
81006f5a:	83 ec 04             	sub    $0x4,%esp
81006f5d:	52                   	push   %edx
81006f5e:	50                   	push   %eax
81006f5f:	ff 75 e4             	push   -0x1c(%ebp)
81006f62:	e8 01 d1 ff ff       	call   81004068 <memcpy>
81006f67:	83 c4 10             	add    $0x10,%esp
81006f6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f6d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006f71:	66 25 7f fb          	and    $0xfb7f,%ax
81006f75:	0c 80                	or     $0x80,%al
81006f77:	89 c2                	mov    %eax,%edx
81006f79:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f7c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006f80:	eb 45                	jmp    81006fc7 <__ssprint_r+0x163>
81006f82:	8b 55 e0             	mov    -0x20(%ebp),%edx
81006f85:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f88:	8b 40 10             	mov    0x10(%eax),%eax
81006f8b:	83 ec 04             	sub    $0x4,%esp
81006f8e:	52                   	push   %edx
81006f8f:	50                   	push   %eax
81006f90:	ff 75 08             	push   0x8(%ebp)
81006f93:	e8 82 05 00 00       	call   8100751a <_realloc_r>
81006f98:	83 c4 10             	add    $0x10,%esp
81006f9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f9e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006fa2:	75 23                	jne    81006fc7 <__ssprint_r+0x163>
81006fa4:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fa7:	8b 40 10             	mov    0x10(%eax),%eax
81006faa:	83 ec 08             	sub    $0x8,%esp
81006fad:	50                   	push   %eax
81006fae:	ff 75 08             	push   0x8(%ebp)
81006fb1:	e8 e3 a8 ff ff       	call   81001899 <_free_r>
81006fb6:	83 c4 10             	add    $0x10,%esp
81006fb9:	8b 45 08             	mov    0x8(%ebp),%eax
81006fbc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006fc2:	e9 a1 00 00 00       	jmp    81007068 <__ssprint_r+0x204>
81006fc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fca:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006fcd:	89 50 10             	mov    %edx,0x10(%eax)
81006fd0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006fd3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006fd6:	01 c2                	add    %eax,%edx
81006fd8:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fdb:	89 10                	mov    %edx,(%eax)
81006fdd:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fe0:	8b 55 e0             	mov    -0x20(%ebp),%edx
81006fe3:	89 50 14             	mov    %edx,0x14(%eax)
81006fe6:	89 f7                	mov    %esi,%edi
81006fe8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006feb:	2b 45 dc             	sub    -0x24(%ebp),%eax
81006fee:	89 c2                	mov    %eax,%edx
81006ff0:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ff3:	89 50 08             	mov    %edx,0x8(%eax)
81006ff6:	89 f8                	mov    %edi,%eax
81006ff8:	39 c6                	cmp    %eax,%esi
81006ffa:	73 02                	jae    81006ffe <__ssprint_r+0x19a>
81006ffc:	89 f7                	mov    %esi,%edi
81006ffe:	89 fa                	mov    %edi,%edx
81007000:	8b 45 0c             	mov    0xc(%ebp),%eax
81007003:	8b 00                	mov    (%eax),%eax
81007005:	83 ec 04             	sub    $0x4,%esp
81007008:	52                   	push   %edx
81007009:	ff 75 d4             	push   -0x2c(%ebp)
8100700c:	50                   	push   %eax
8100700d:	e8 0e fc ff ff       	call   81006c20 <memmove>
81007012:	83 c4 10             	add    $0x10,%esp
81007015:	8b 45 0c             	mov    0xc(%ebp),%eax
81007018:	8b 40 08             	mov    0x8(%eax),%eax
8100701b:	29 f8                	sub    %edi,%eax
8100701d:	89 c2                	mov    %eax,%edx
8100701f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007022:	89 50 08             	mov    %edx,0x8(%eax)
81007025:	8b 45 0c             	mov    0xc(%ebp),%eax
81007028:	8b 00                	mov    (%eax),%eax
8100702a:	89 fa                	mov    %edi,%edx
8100702c:	01 c2                	add    %eax,%edx
8100702e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007031:	89 10                	mov    %edx,(%eax)
81007033:	89 f7                	mov    %esi,%edi
81007035:	89 f8                	mov    %edi,%eax
81007037:	01 45 d4             	add    %eax,-0x2c(%ebp)
8100703a:	89 f8                	mov    %edi,%eax
8100703c:	29 c6                	sub    %eax,%esi
8100703e:	8b 43 08             	mov    0x8(%ebx),%eax
81007041:	89 fa                	mov    %edi,%edx
81007043:	29 d0                	sub    %edx,%eax
81007045:	89 43 08             	mov    %eax,0x8(%ebx)
81007048:	8b 43 08             	mov    0x8(%ebx),%eax
8100704b:	85 c0                	test   %eax,%eax
8100704d:	0f 85 57 fe ff ff    	jne    81006eaa <__ssprint_r+0x46>
81007053:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100705a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007061:	b8 00 00 00 00       	mov    $0x0,%eax
81007066:	eb 26                	jmp    8100708e <__ssprint_r+0x22a>
81007068:	8b 45 0c             	mov    0xc(%ebp),%eax
8100706b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100706f:	83 c8 40             	or     $0x40,%eax
81007072:	89 c2                	mov    %eax,%edx
81007074:	8b 45 0c             	mov    0xc(%ebp),%eax
81007077:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100707b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007082:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007089:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100708e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007091:	5b                   	pop    %ebx
81007092:	5e                   	pop    %esi
81007093:	5f                   	pop    %edi
81007094:	5d                   	pop    %ebp
81007095:	c3                   	ret    

81007096 <_svfiprintf_r>:
81007096:	55                   	push   %ebp
81007097:	89 e5                	mov    %esp,%ebp
81007099:	57                   	push   %edi
8100709a:	56                   	push   %esi
8100709b:	53                   	push   %ebx
8100709c:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810070a2:	c7 45 e4 ad 6c 00 81 	movl   $0x81006cad,-0x1c(%ebp)
810070a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810070ac:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810070b0:	98                   	cwtl   
810070b1:	25 80 00 00 00       	and    $0x80,%eax
810070b6:	85 c0                	test   %eax,%eax
810070b8:	74 50                	je     8100710a <_svfiprintf_r+0x74>
810070ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810070bd:	8b 40 10             	mov    0x10(%eax),%eax
810070c0:	85 c0                	test   %eax,%eax
810070c2:	75 46                	jne    8100710a <_svfiprintf_r+0x74>
810070c4:	83 ec 08             	sub    $0x8,%esp
810070c7:	6a 40                	push   $0x40
810070c9:	ff 75 08             	push   0x8(%ebp)
810070cc:	e8 8b c6 ff ff       	call   8100375c <_malloc_r>
810070d1:	83 c4 10             	add    $0x10,%esp
810070d4:	8b 55 0c             	mov    0xc(%ebp),%edx
810070d7:	89 02                	mov    %eax,(%edx)
810070d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810070dc:	8b 10                	mov    (%eax),%edx
810070de:	8b 45 0c             	mov    0xc(%ebp),%eax
810070e1:	89 50 10             	mov    %edx,0x10(%eax)
810070e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810070e7:	8b 00                	mov    (%eax),%eax
810070e9:	85 c0                	test   %eax,%eax
810070eb:	75 13                	jne    81007100 <_svfiprintf_r+0x6a>
810070ed:	8b 45 08             	mov    0x8(%ebp),%eax
810070f0:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810070f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070fb:	e9 c8 02 00 00       	jmp    810073c8 <_svfiprintf_r+0x332>
81007100:	8b 45 0c             	mov    0xc(%ebp),%eax
81007103:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
8100710a:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100710d:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007114:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007118:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
8100711c:	8b 45 14             	mov    0x14(%ebp),%eax
8100711f:	89 45 80             	mov    %eax,-0x80(%ebp)
81007122:	89 de                	mov    %ebx,%esi
81007124:	eb 03                	jmp    81007129 <_svfiprintf_r+0x93>
81007126:	83 c3 01             	add    $0x1,%ebx
81007129:	0f b6 03             	movzbl (%ebx),%eax
8100712c:	84 c0                	test   %al,%al
8100712e:	74 07                	je     81007137 <_svfiprintf_r+0xa1>
81007130:	0f b6 03             	movzbl (%ebx),%eax
81007133:	3c 25                	cmp    $0x25,%al
81007135:	75 ef                	jne    81007126 <_svfiprintf_r+0x90>
81007137:	89 d8                	mov    %ebx,%eax
81007139:	29 f0                	sub    %esi,%eax
8100713b:	85 c0                	test   %eax,%eax
8100713d:	74 2b                	je     8100716a <_svfiprintf_r+0xd4>
8100713f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007145:	50                   	push   %eax
81007146:	56                   	push   %esi
81007147:	ff 75 0c             	push   0xc(%ebp)
8100714a:	ff 75 08             	push   0x8(%ebp)
8100714d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007150:	ff d0                	call   *%eax
81007152:	83 c4 10             	add    $0x10,%esp
81007155:	83 f8 ff             	cmp    $0xffffffff,%eax
81007158:	0f 84 4a 02 00 00    	je     810073a8 <_svfiprintf_r+0x312>
8100715e:	8b 45 98             	mov    -0x68(%ebp),%eax
81007161:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007167:	89 45 98             	mov    %eax,-0x68(%ebp)
8100716a:	0f b6 03             	movzbl (%ebx),%eax
8100716d:	84 c0                	test   %al,%al
8100716f:	0f 84 36 02 00 00    	je     810073ab <_svfiprintf_r+0x315>
81007175:	83 c3 01             	add    $0x1,%ebx
81007178:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100717f:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007186:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
8100718d:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007194:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007198:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
8100719f:	c7 45 e0 0c 88 00 81 	movl   $0x8100880c,-0x20(%ebp)
810071a6:	eb 1b                	jmp    810071c3 <_svfiprintf_r+0x12d>
810071a8:	8b 55 84             	mov    -0x7c(%ebp),%edx
810071ab:	89 f0                	mov    %esi,%eax
810071ad:	2b 45 e0             	sub    -0x20(%ebp),%eax
810071b0:	be 01 00 00 00       	mov    $0x1,%esi
810071b5:	89 c1                	mov    %eax,%ecx
810071b7:	d3 e6                	shl    %cl,%esi
810071b9:	89 f0                	mov    %esi,%eax
810071bb:	09 d0                	or     %edx,%eax
810071bd:	89 45 84             	mov    %eax,-0x7c(%ebp)
810071c0:	83 c3 01             	add    $0x1,%ebx
810071c3:	0f b6 03             	movzbl (%ebx),%eax
810071c6:	0f be c0             	movsbl %al,%eax
810071c9:	83 ec 04             	sub    $0x4,%esp
810071cc:	6a 05                	push   $0x5
810071ce:	50                   	push   %eax
810071cf:	ff 75 e0             	push   -0x20(%ebp)
810071d2:	e8 a9 cd ff ff       	call   81003f80 <memchr>
810071d7:	83 c4 10             	add    $0x10,%esp
810071da:	89 c6                	mov    %eax,%esi
810071dc:	85 f6                	test   %esi,%esi
810071de:	75 c8                	jne    810071a8 <_svfiprintf_r+0x112>
810071e0:	8b 45 84             	mov    -0x7c(%ebp),%eax
810071e3:	83 e0 10             	and    $0x10,%eax
810071e6:	85 c0                	test   %eax,%eax
810071e8:	74 04                	je     810071ee <_svfiprintf_r+0x158>
810071ea:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
810071ee:	8b 45 84             	mov    -0x7c(%ebp),%eax
810071f1:	83 e0 08             	and    $0x8,%eax
810071f4:	85 c0                	test   %eax,%eax
810071f6:	74 04                	je     810071fc <_svfiprintf_r+0x166>
810071f8:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
810071fc:	0f b6 03             	movzbl (%ebx),%eax
810071ff:	3c 2a                	cmp    $0x2a,%al
81007201:	75 4a                	jne    8100724d <_svfiprintf_r+0x1b7>
81007203:	8b 45 80             	mov    -0x80(%ebp),%eax
81007206:	8d 50 04             	lea    0x4(%eax),%edx
81007209:	89 55 80             	mov    %edx,-0x80(%ebp)
8100720c:	8b 00                	mov    (%eax),%eax
8100720e:	89 45 90             	mov    %eax,-0x70(%ebp)
81007211:	8b 45 90             	mov    -0x70(%ebp),%eax
81007214:	85 c0                	test   %eax,%eax
81007216:	79 11                	jns    81007229 <_svfiprintf_r+0x193>
81007218:	8b 45 90             	mov    -0x70(%ebp),%eax
8100721b:	f7 d8                	neg    %eax
8100721d:	89 45 90             	mov    %eax,-0x70(%ebp)
81007220:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007223:	83 c8 02             	or     $0x2,%eax
81007226:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007229:	83 c3 01             	add    $0x1,%ebx
8100722c:	eb 2d                	jmp    8100725b <_svfiprintf_r+0x1c5>
8100722e:	8b 55 90             	mov    -0x70(%ebp),%edx
81007231:	89 d0                	mov    %edx,%eax
81007233:	c1 e0 02             	shl    $0x2,%eax
81007236:	01 d0                	add    %edx,%eax
81007238:	01 c0                	add    %eax,%eax
8100723a:	89 c2                	mov    %eax,%edx
8100723c:	0f b6 03             	movzbl (%ebx),%eax
8100723f:	0f be c0             	movsbl %al,%eax
81007242:	83 e8 30             	sub    $0x30,%eax
81007245:	01 d0                	add    %edx,%eax
81007247:	89 45 90             	mov    %eax,-0x70(%ebp)
8100724a:	83 c3 01             	add    $0x1,%ebx
8100724d:	0f b6 03             	movzbl (%ebx),%eax
81007250:	0f be c0             	movsbl %al,%eax
81007253:	83 e8 30             	sub    $0x30,%eax
81007256:	83 f8 09             	cmp    $0x9,%eax
81007259:	76 d3                	jbe    8100722e <_svfiprintf_r+0x198>
8100725b:	0f b6 03             	movzbl (%ebx),%eax
8100725e:	3c 2e                	cmp    $0x2e,%al
81007260:	75 61                	jne    810072c3 <_svfiprintf_r+0x22d>
81007262:	83 c3 01             	add    $0x1,%ebx
81007265:	0f b6 03             	movzbl (%ebx),%eax
81007268:	3c 2a                	cmp    $0x2a,%al
8100726a:	75 21                	jne    8100728d <_svfiprintf_r+0x1f7>
8100726c:	83 c3 01             	add    $0x1,%ebx
8100726f:	8b 45 80             	mov    -0x80(%ebp),%eax
81007272:	8d 50 04             	lea    0x4(%eax),%edx
81007275:	89 55 80             	mov    %edx,-0x80(%ebp)
81007278:	8b 00                	mov    (%eax),%eax
8100727a:	89 45 88             	mov    %eax,-0x78(%ebp)
8100727d:	8b 45 88             	mov    -0x78(%ebp),%eax
81007280:	85 c0                	test   %eax,%eax
81007282:	79 3f                	jns    810072c3 <_svfiprintf_r+0x22d>
81007284:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
8100728b:	eb 36                	jmp    810072c3 <_svfiprintf_r+0x22d>
8100728d:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81007294:	eb 1f                	jmp    810072b5 <_svfiprintf_r+0x21f>
81007296:	8b 55 88             	mov    -0x78(%ebp),%edx
81007299:	89 d0                	mov    %edx,%eax
8100729b:	c1 e0 02             	shl    $0x2,%eax
8100729e:	01 d0                	add    %edx,%eax
810072a0:	01 c0                	add    %eax,%eax
810072a2:	89 c2                	mov    %eax,%edx
810072a4:	0f b6 03             	movzbl (%ebx),%eax
810072a7:	0f be c0             	movsbl %al,%eax
810072aa:	83 e8 30             	sub    $0x30,%eax
810072ad:	01 d0                	add    %edx,%eax
810072af:	89 45 88             	mov    %eax,-0x78(%ebp)
810072b2:	83 c3 01             	add    $0x1,%ebx
810072b5:	0f b6 03             	movzbl (%ebx),%eax
810072b8:	0f be c0             	movsbl %al,%eax
810072bb:	83 e8 30             	sub    $0x30,%eax
810072be:	83 f8 09             	cmp    $0x9,%eax
810072c1:	76 d3                	jbe    81007296 <_svfiprintf_r+0x200>
810072c3:	c7 45 e0 12 88 00 81 	movl   $0x81008812,-0x20(%ebp)
810072ca:	0f b6 03             	movzbl (%ebx),%eax
810072cd:	0f be c0             	movsbl %al,%eax
810072d0:	83 ec 04             	sub    $0x4,%esp
810072d3:	6a 03                	push   $0x3
810072d5:	50                   	push   %eax
810072d6:	ff 75 e0             	push   -0x20(%ebp)
810072d9:	e8 a2 cc ff ff       	call   81003f80 <memchr>
810072de:	83 c4 10             	add    $0x10,%esp
810072e1:	89 c6                	mov    %eax,%esi
810072e3:	85 f6                	test   %esi,%esi
810072e5:	74 1b                	je     81007302 <_svfiprintf_r+0x26c>
810072e7:	8b 55 84             	mov    -0x7c(%ebp),%edx
810072ea:	89 f0                	mov    %esi,%eax
810072ec:	2b 45 e0             	sub    -0x20(%ebp),%eax
810072ef:	be 40 00 00 00       	mov    $0x40,%esi
810072f4:	89 c1                	mov    %eax,%ecx
810072f6:	d3 e6                	shl    %cl,%esi
810072f8:	89 f0                	mov    %esi,%eax
810072fa:	09 d0                	or     %edx,%eax
810072fc:	89 45 84             	mov    %eax,-0x7c(%ebp)
810072ff:	83 c3 01             	add    $0x1,%ebx
81007302:	89 d8                	mov    %ebx,%eax
81007304:	8d 58 01             	lea    0x1(%eax),%ebx
81007307:	0f b6 00             	movzbl (%eax),%eax
8100730a:	88 45 9c             	mov    %al,-0x64(%ebp)
8100730d:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
81007311:	0f be c0             	movsbl %al,%eax
81007314:	83 ec 04             	sub    $0x4,%esp
81007317:	6a 06                	push   $0x6
81007319:	50                   	push   %eax
8100731a:	68 16 88 00 81       	push   $0x81008816
8100731f:	e8 5c cc ff ff       	call   81003f80 <memchr>
81007324:	83 c4 10             	add    $0x10,%esp
81007327:	89 c6                	mov    %eax,%esi
81007329:	85 f6                	test   %esi,%esi
8100732b:	74 4b                	je     81007378 <_svfiprintf_r+0x2e2>
8100732d:	b8 00 00 00 00       	mov    $0x0,%eax
81007332:	85 c0                	test   %eax,%eax
81007334:	75 22                	jne    81007358 <_svfiprintf_r+0x2c2>
81007336:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007339:	25 00 01 00 00       	and    $0x100,%eax
8100733e:	85 c0                	test   %eax,%eax
81007340:	74 0b                	je     8100734d <_svfiprintf_r+0x2b7>
81007342:	8b 45 80             	mov    -0x80(%ebp),%eax
81007345:	83 c0 0c             	add    $0xc,%eax
81007348:	89 45 80             	mov    %eax,-0x80(%ebp)
8100734b:	eb 49                	jmp    81007396 <_svfiprintf_r+0x300>
8100734d:	8b 45 80             	mov    -0x80(%ebp),%eax
81007350:	83 c0 08             	add    $0x8,%eax
81007353:	89 45 80             	mov    %eax,-0x80(%ebp)
81007356:	eb 3e                	jmp    81007396 <_svfiprintf_r+0x300>
81007358:	83 ec 0c             	sub    $0xc,%esp
8100735b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100735e:	50                   	push   %eax
8100735f:	ff 75 e4             	push   -0x1c(%ebp)
81007362:	ff 75 0c             	push   0xc(%ebp)
81007365:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007368:	50                   	push   %eax
81007369:	ff 75 08             	push   0x8(%ebp)
8100736c:	e8 8f 8c ff 7e       	call   0 <do_help-0x81000000>
81007371:	83 c4 20             	add    $0x20,%esp
81007374:	89 c7                	mov    %eax,%edi
81007376:	eb 1e                	jmp    81007396 <_svfiprintf_r+0x300>
81007378:	83 ec 0c             	sub    $0xc,%esp
8100737b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100737e:	50                   	push   %eax
8100737f:	ff 75 e4             	push   -0x1c(%ebp)
81007382:	ff 75 0c             	push   0xc(%ebp)
81007385:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007388:	50                   	push   %eax
81007389:	ff 75 08             	push   0x8(%ebp)
8100738c:	e8 b3 d4 ff ff       	call   81004844 <_printf_i>
81007391:	83 c4 20             	add    $0x20,%esp
81007394:	89 c7                	mov    %eax,%edi
81007396:	83 ff ff             	cmp    $0xffffffff,%edi
81007399:	74 13                	je     810073ae <_svfiprintf_r+0x318>
8100739b:	8b 45 98             	mov    -0x68(%ebp),%eax
8100739e:	01 f8                	add    %edi,%eax
810073a0:	89 45 98             	mov    %eax,-0x68(%ebp)
810073a3:	e9 7a fd ff ff       	jmp    81007122 <_svfiprintf_r+0x8c>
810073a8:	90                   	nop
810073a9:	eb 04                	jmp    810073af <_svfiprintf_r+0x319>
810073ab:	90                   	nop
810073ac:	eb 01                	jmp    810073af <_svfiprintf_r+0x319>
810073ae:	90                   	nop
810073af:	8b 45 0c             	mov    0xc(%ebp),%eax
810073b2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810073b6:	98                   	cwtl   
810073b7:	83 e0 40             	and    $0x40,%eax
810073ba:	85 c0                	test   %eax,%eax
810073bc:	75 05                	jne    810073c3 <_svfiprintf_r+0x32d>
810073be:	8b 45 98             	mov    -0x68(%ebp),%eax
810073c1:	eb 05                	jmp    810073c8 <_svfiprintf_r+0x332>
810073c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810073c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810073cb:	5b                   	pop    %ebx
810073cc:	5e                   	pop    %esi
810073cd:	5f                   	pop    %edi
810073ce:	5d                   	pop    %ebp
810073cf:	c3                   	ret    

810073d0 <__sputc_r>:
810073d0:	55                   	push   %ebp
810073d1:	89 e5                	mov    %esp,%ebp
810073d3:	83 ec 08             	sub    $0x8,%esp
810073d6:	8b 45 10             	mov    0x10(%ebp),%eax
810073d9:	8b 40 08             	mov    0x8(%eax),%eax
810073dc:	8d 50 ff             	lea    -0x1(%eax),%edx
810073df:	8b 45 10             	mov    0x10(%ebp),%eax
810073e2:	89 50 08             	mov    %edx,0x8(%eax)
810073e5:	8b 45 10             	mov    0x10(%ebp),%eax
810073e8:	8b 40 08             	mov    0x8(%eax),%eax
810073eb:	85 c0                	test   %eax,%eax
810073ed:	79 17                	jns    81007406 <__sputc_r+0x36>
810073ef:	8b 45 10             	mov    0x10(%ebp),%eax
810073f2:	8b 50 08             	mov    0x8(%eax),%edx
810073f5:	8b 45 10             	mov    0x10(%ebp),%eax
810073f8:	8b 40 18             	mov    0x18(%eax),%eax
810073fb:	39 c2                	cmp    %eax,%edx
810073fd:	7c 21                	jl     81007420 <__sputc_r+0x50>
810073ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81007402:	3c 0a                	cmp    $0xa,%al
81007404:	74 1a                	je     81007420 <__sputc_r+0x50>
81007406:	8b 45 10             	mov    0x10(%ebp),%eax
81007409:	8b 00                	mov    (%eax),%eax
8100740b:	8d 48 01             	lea    0x1(%eax),%ecx
8100740e:	8b 55 10             	mov    0x10(%ebp),%edx
81007411:	89 0a                	mov    %ecx,(%edx)
81007413:	8b 55 0c             	mov    0xc(%ebp),%edx
81007416:	88 10                	mov    %dl,(%eax)
81007418:	0f b6 00             	movzbl (%eax),%eax
8100741b:	0f b6 c0             	movzbl %al,%eax
8100741e:	eb 14                	jmp    81007434 <__sputc_r+0x64>
81007420:	83 ec 04             	sub    $0x4,%esp
81007423:	ff 75 10             	push   0x10(%ebp)
81007426:	ff 75 0c             	push   0xc(%ebp)
81007429:	ff 75 08             	push   0x8(%ebp)
8100742c:	e8 6e e7 ff ff       	call   81005b9f <__swbuf_r>
81007431:	83 c4 10             	add    $0x10,%esp
81007434:	c9                   	leave  
81007435:	c3                   	ret    

81007436 <_putc_r>:
81007436:	55                   	push   %ebp
81007437:	89 e5                	mov    %esp,%ebp
81007439:	53                   	push   %ebx
8100743a:	83 ec 14             	sub    $0x14,%esp
8100743d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007440:	8b 45 08             	mov    0x8(%ebp),%eax
81007443:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007446:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100744a:	74 18                	je     81007464 <_putc_r+0x2e>
8100744c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100744f:	8b 40 38             	mov    0x38(%eax),%eax
81007452:	85 c0                	test   %eax,%eax
81007454:	75 0e                	jne    81007464 <_putc_r+0x2e>
81007456:	83 ec 0c             	sub    $0xc,%esp
81007459:	ff 75 f4             	push   -0xc(%ebp)
8100745c:	e8 e2 a1 ff ff       	call   81001643 <__sinit>
81007461:	83 c4 10             	add    $0x10,%esp
81007464:	83 ec 04             	sub    $0x4,%esp
81007467:	53                   	push   %ebx
81007468:	ff 75 0c             	push   0xc(%ebp)
8100746b:	ff 75 08             	push   0x8(%ebp)
8100746e:	e8 5d ff ff ff       	call   810073d0 <__sputc_r>
81007473:	83 c4 10             	add    $0x10,%esp
81007476:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007479:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100747c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100747f:	c9                   	leave  
81007480:	c3                   	ret    

81007481 <putc>:
81007481:	55                   	push   %ebp
81007482:	89 e5                	mov    %esp,%ebp
81007484:	53                   	push   %ebx
81007485:	83 ec 14             	sub    $0x14,%esp
81007488:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100748b:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81007490:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007493:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007496:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007499:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100749d:	74 18                	je     810074b7 <putc+0x36>
8100749f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810074a2:	8b 40 38             	mov    0x38(%eax),%eax
810074a5:	85 c0                	test   %eax,%eax
810074a7:	75 0e                	jne    810074b7 <putc+0x36>
810074a9:	83 ec 0c             	sub    $0xc,%esp
810074ac:	ff 75 f0             	push   -0x10(%ebp)
810074af:	e8 8f a1 ff ff       	call   81001643 <__sinit>
810074b4:	83 c4 10             	add    $0x10,%esp
810074b7:	83 ec 04             	sub    $0x4,%esp
810074ba:	53                   	push   %ebx
810074bb:	ff 75 08             	push   0x8(%ebp)
810074be:	ff 75 f4             	push   -0xc(%ebp)
810074c1:	e8 0a ff ff ff       	call   810073d0 <__sputc_r>
810074c6:	83 c4 10             	add    $0x10,%esp
810074c9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810074cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810074cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810074d2:	c9                   	leave  
810074d3:	c3                   	ret    

810074d4 <_read_r>:
810074d4:	55                   	push   %ebp
810074d5:	89 e5                	mov    %esp,%ebp
810074d7:	83 ec 18             	sub    $0x18,%esp
810074da:	c7 05 ac 99 00 81 00 	movl   $0x0,0x810099ac
810074e1:	00 00 00 
810074e4:	83 ec 04             	sub    $0x4,%esp
810074e7:	ff 75 14             	push   0x14(%ebp)
810074ea:	ff 75 10             	push   0x10(%ebp)
810074ed:	ff 75 0c             	push   0xc(%ebp)
810074f0:	e8 fe 95 ff ff       	call   81000af3 <read>
810074f5:	83 c4 10             	add    $0x10,%esp
810074f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810074fb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810074ff:	75 14                	jne    81007515 <_read_r+0x41>
81007501:	a1 ac 99 00 81       	mov    0x810099ac,%eax
81007506:	85 c0                	test   %eax,%eax
81007508:	74 0b                	je     81007515 <_read_r+0x41>
8100750a:	8b 15 ac 99 00 81    	mov    0x810099ac,%edx
81007510:	8b 45 08             	mov    0x8(%ebp),%eax
81007513:	89 10                	mov    %edx,(%eax)
81007515:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007518:	c9                   	leave  
81007519:	c3                   	ret    

8100751a <_realloc_r>:
8100751a:	55                   	push   %ebp
8100751b:	89 e5                	mov    %esp,%ebp
8100751d:	83 ec 78             	sub    $0x78,%esp
81007520:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007524:	75 16                	jne    8100753c <_realloc_r+0x22>
81007526:	83 ec 08             	sub    $0x8,%esp
81007529:	ff 75 10             	push   0x10(%ebp)
8100752c:	ff 75 08             	push   0x8(%ebp)
8100752f:	e8 28 c2 ff ff       	call   8100375c <_malloc_r>
81007534:	83 c4 10             	add    $0x10,%esp
81007537:	e9 b6 08 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
8100753c:	83 ec 0c             	sub    $0xc,%esp
8100753f:	ff 75 08             	push   0x8(%ebp)
81007542:	e8 f1 cb ff ff       	call   81004138 <__malloc_lock>
81007547:	83 c4 10             	add    $0x10,%esp
8100754a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100754d:	83 e8 08             	sub    $0x8,%eax
81007550:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81007553:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007556:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007559:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100755c:	8b 40 04             	mov    0x4(%eax),%eax
8100755f:	83 e0 fc             	and    $0xfffffffc,%eax
81007562:	89 45 c0             	mov    %eax,-0x40(%ebp)
81007565:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007568:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100756b:	8b 45 10             	mov    0x10(%ebp),%eax
8100756e:	83 c0 0b             	add    $0xb,%eax
81007571:	83 f8 16             	cmp    $0x16,%eax
81007574:	76 0b                	jbe    81007581 <_realloc_r+0x67>
81007576:	8b 45 10             	mov    0x10(%ebp),%eax
81007579:	83 c0 0b             	add    $0xb,%eax
8100757c:	83 e0 f8             	and    $0xfffffff8,%eax
8100757f:	eb 05                	jmp    81007586 <_realloc_r+0x6c>
81007581:	b8 10 00 00 00       	mov    $0x10,%eax
81007586:	89 45 bc             	mov    %eax,-0x44(%ebp)
81007589:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100758c:	85 c0                	test   %eax,%eax
8100758e:	78 08                	js     81007598 <_realloc_r+0x7e>
81007590:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007593:	3b 45 10             	cmp    0x10(%ebp),%eax
81007596:	73 13                	jae    810075ab <_realloc_r+0x91>
81007598:	8b 45 08             	mov    0x8(%ebp),%eax
8100759b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810075a1:	b8 00 00 00 00       	mov    $0x0,%eax
810075a6:	e9 47 08 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
810075ab:	8b 55 c0             	mov    -0x40(%ebp),%edx
810075ae:	8b 45 bc             	mov    -0x44(%ebp),%eax
810075b1:	39 c2                	cmp    %eax,%edx
810075b3:	0f 8d 8b 07 00 00    	jge    81007d44 <_realloc_r+0x82a>
810075b9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810075bc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810075bf:	01 d0                	add    %edx,%eax
810075c1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810075c4:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
810075c9:	8b 40 08             	mov    0x8(%eax),%eax
810075cc:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810075cf:	74 1e                	je     810075ef <_realloc_r+0xd5>
810075d1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810075d4:	8b 40 04             	mov    0x4(%eax),%eax
810075d7:	83 e0 fe             	and    $0xfffffffe,%eax
810075da:	89 c2                	mov    %eax,%edx
810075dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810075df:	01 d0                	add    %edx,%eax
810075e1:	8b 40 04             	mov    0x4(%eax),%eax
810075e4:	83 e0 01             	and    $0x1,%eax
810075e7:	85 c0                	test   %eax,%eax
810075e9:	0f 85 ca 00 00 00    	jne    810076b9 <_realloc_r+0x19f>
810075ef:	8b 45 ec             	mov    -0x14(%ebp),%eax
810075f2:	8b 40 04             	mov    0x4(%eax),%eax
810075f5:	83 e0 fc             	and    $0xfffffffc,%eax
810075f8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810075fb:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007600:	8b 40 08             	mov    0x8(%eax),%eax
81007603:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007606:	75 71                	jne    81007679 <_realloc_r+0x15f>
81007608:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100760b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100760e:	01 d0                	add    %edx,%eax
81007610:	89 c2                	mov    %eax,%edx
81007612:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007615:	83 c0 10             	add    $0x10,%eax
81007618:	39 c2                	cmp    %eax,%edx
8100761a:	0f 8c a9 00 00 00    	jl     810076c9 <_realloc_r+0x1af>
81007620:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007623:	01 45 f0             	add    %eax,-0x10(%ebp)
81007626:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
8100762b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
8100762e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007631:	01 c8                	add    %ecx,%eax
81007633:	89 42 08             	mov    %eax,0x8(%edx)
81007636:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007639:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100763c:	89 c2                	mov    %eax,%edx
8100763e:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007643:	8b 40 08             	mov    0x8(%eax),%eax
81007646:	83 ca 01             	or     $0x1,%edx
81007649:	89 50 04             	mov    %edx,0x4(%eax)
8100764c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100764f:	8b 40 04             	mov    0x4(%eax),%eax
81007652:	83 e0 01             	and    $0x1,%eax
81007655:	0b 45 bc             	or     -0x44(%ebp),%eax
81007658:	89 c2                	mov    %eax,%edx
8100765a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100765d:	89 50 04             	mov    %edx,0x4(%eax)
81007660:	83 ec 0c             	sub    $0xc,%esp
81007663:	ff 75 08             	push   0x8(%ebp)
81007666:	e8 d3 ca ff ff       	call   8100413e <__malloc_unlock>
8100766b:	83 c4 10             	add    $0x10,%esp
8100766e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007671:	83 c0 08             	add    $0x8,%eax
81007674:	e9 79 07 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
81007679:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100767c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100767f:	01 d0                	add    %edx,%eax
81007681:	89 c2                	mov    %eax,%edx
81007683:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007686:	39 c2                	cmp    %eax,%edx
81007688:	7c 3f                	jl     810076c9 <_realloc_r+0x1af>
8100768a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100768d:	8b 40 0c             	mov    0xc(%eax),%eax
81007690:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007693:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007696:	8b 40 08             	mov    0x8(%eax),%eax
81007699:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100769c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100769f:	8b 55 b8             	mov    -0x48(%ebp),%edx
810076a2:	89 50 0c             	mov    %edx,0xc(%eax)
810076a5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810076a8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810076ab:	89 50 08             	mov    %edx,0x8(%eax)
810076ae:	8b 45 e8             	mov    -0x18(%ebp),%eax
810076b1:	01 45 f0             	add    %eax,-0x10(%ebp)
810076b4:	e9 8c 06 00 00       	jmp    81007d45 <_realloc_r+0x82b>
810076b9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810076c0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810076c7:	eb 01                	jmp    810076ca <_realloc_r+0x1b0>
810076c9:	90                   	nop
810076ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810076cd:	8b 40 04             	mov    0x4(%eax),%eax
810076d0:	83 e0 01             	and    $0x1,%eax
810076d3:	85 c0                	test   %eax,%eax
810076d5:	0f 85 d6 04 00 00    	jne    81007bb1 <_realloc_r+0x697>
810076db:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810076de:	8b 00                	mov    (%eax),%eax
810076e0:	f7 d8                	neg    %eax
810076e2:	89 c2                	mov    %eax,%edx
810076e4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810076e7:	01 d0                	add    %edx,%eax
810076e9:	89 45 b0             	mov    %eax,-0x50(%ebp)
810076ec:	8b 45 b0             	mov    -0x50(%ebp),%eax
810076ef:	8b 40 04             	mov    0x4(%eax),%eax
810076f2:	83 e0 fc             	and    $0xfffffffc,%eax
810076f5:	89 45 ac             	mov    %eax,-0x54(%ebp)
810076f8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810076fc:	0f 84 4a 03 00 00    	je     81007a4c <_realloc_r+0x532>
81007702:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007707:	8b 40 08             	mov    0x8(%eax),%eax
8100770a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100770d:	0f 85 b0 01 00 00    	jne    810078c3 <_realloc_r+0x3a9>
81007713:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007716:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007719:	01 c2                	add    %eax,%edx
8100771b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100771e:	01 d0                	add    %edx,%eax
81007720:	89 c2                	mov    %eax,%edx
81007722:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007725:	83 c0 10             	add    $0x10,%eax
81007728:	39 c2                	cmp    %eax,%edx
8100772a:	0f 8c 1c 03 00 00    	jl     81007a4c <_realloc_r+0x532>
81007730:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007733:	8b 40 0c             	mov    0xc(%eax),%eax
81007736:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007739:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100773c:	8b 40 08             	mov    0x8(%eax),%eax
8100773f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007742:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007745:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007748:	89 50 0c             	mov    %edx,0xc(%eax)
8100774b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100774e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007751:	89 50 08             	mov    %edx,0x8(%eax)
81007754:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007757:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100775a:	8b 55 ac             	mov    -0x54(%ebp),%edx
8100775d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007760:	01 d0                	add    %edx,%eax
81007762:	01 45 f0             	add    %eax,-0x10(%ebp)
81007765:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007768:	83 c0 08             	add    $0x8,%eax
8100776b:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100776e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007771:	83 e8 04             	sub    $0x4,%eax
81007774:	89 45 a0             	mov    %eax,-0x60(%ebp)
81007777:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
8100777b:	0f 87 de 00 00 00    	ja     8100785f <_realloc_r+0x345>
81007781:	8b 45 0c             	mov    0xc(%ebp),%eax
81007784:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007787:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100778a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100778d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81007791:	0f 86 90 00 00 00    	jbe    81007827 <_realloc_r+0x30d>
81007797:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100779a:	8d 42 04             	lea    0x4(%edx),%eax
8100779d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810077a0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810077a3:	8d 48 04             	lea    0x4(%eax),%ecx
810077a6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810077a9:	8b 12                	mov    (%edx),%edx
810077ab:	89 10                	mov    %edx,(%eax)
810077ad:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810077b0:	8d 42 04             	lea    0x4(%edx),%eax
810077b3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810077b6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810077b9:	8d 48 04             	lea    0x4(%eax),%ecx
810077bc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810077bf:	8b 12                	mov    (%edx),%edx
810077c1:	89 10                	mov    %edx,(%eax)
810077c3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810077c7:	76 5e                	jbe    81007827 <_realloc_r+0x30d>
810077c9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810077cc:	8d 42 04             	lea    0x4(%edx),%eax
810077cf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810077d2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810077d5:	8d 48 04             	lea    0x4(%eax),%ecx
810077d8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810077db:	8b 12                	mov    (%edx),%edx
810077dd:	89 10                	mov    %edx,(%eax)
810077df:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810077e2:	8d 42 04             	lea    0x4(%edx),%eax
810077e5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810077e8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810077eb:	8d 48 04             	lea    0x4(%eax),%ecx
810077ee:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810077f1:	8b 12                	mov    (%edx),%edx
810077f3:	89 10                	mov    %edx,(%eax)
810077f5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
810077f9:	76 2c                	jbe    81007827 <_realloc_r+0x30d>
810077fb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810077fe:	8d 42 04             	lea    0x4(%edx),%eax
81007801:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007804:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007807:	8d 48 04             	lea    0x4(%eax),%ecx
8100780a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100780d:	8b 12                	mov    (%edx),%edx
8100780f:	89 10                	mov    %edx,(%eax)
81007811:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007814:	8d 42 04             	lea    0x4(%edx),%eax
81007817:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100781a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100781d:	8d 48 04             	lea    0x4(%eax),%ecx
81007820:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007823:	8b 12                	mov    (%edx),%edx
81007825:	89 10                	mov    %edx,(%eax)
81007827:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100782a:	8d 42 04             	lea    0x4(%edx),%eax
8100782d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007830:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007833:	8d 48 04             	lea    0x4(%eax),%ecx
81007836:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007839:	8b 12                	mov    (%edx),%edx
8100783b:	89 10                	mov    %edx,(%eax)
8100783d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007840:	8d 42 04             	lea    0x4(%edx),%eax
81007843:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007846:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007849:	8d 48 04             	lea    0x4(%eax),%ecx
8100784c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100784f:	8b 12                	mov    (%edx),%edx
81007851:	89 10                	mov    %edx,(%eax)
81007853:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007856:	8b 10                	mov    (%eax),%edx
81007858:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100785b:	89 10                	mov    %edx,(%eax)
8100785d:	eb 14                	jmp    81007873 <_realloc_r+0x359>
8100785f:	83 ec 04             	sub    $0x4,%esp
81007862:	ff 75 a0             	push   -0x60(%ebp)
81007865:	ff 75 0c             	push   0xc(%ebp)
81007868:	ff 75 a8             	push   -0x58(%ebp)
8100786b:	e8 b0 f3 ff ff       	call   81006c20 <memmove>
81007870:	83 c4 10             	add    $0x10,%esp
81007873:	ba 80 8c 00 81       	mov    $0x81008c80,%edx
81007878:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100787b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100787e:	01 c8                	add    %ecx,%eax
81007880:	89 42 08             	mov    %eax,0x8(%edx)
81007883:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007886:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007889:	89 c2                	mov    %eax,%edx
8100788b:	b8 80 8c 00 81       	mov    $0x81008c80,%eax
81007890:	8b 40 08             	mov    0x8(%eax),%eax
81007893:	83 ca 01             	or     $0x1,%edx
81007896:	89 50 04             	mov    %edx,0x4(%eax)
81007899:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100789c:	8b 40 04             	mov    0x4(%eax),%eax
8100789f:	83 e0 01             	and    $0x1,%eax
810078a2:	0b 45 bc             	or     -0x44(%ebp),%eax
810078a5:	89 c2                	mov    %eax,%edx
810078a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078aa:	89 50 04             	mov    %edx,0x4(%eax)
810078ad:	83 ec 0c             	sub    $0xc,%esp
810078b0:	ff 75 08             	push   0x8(%ebp)
810078b3:	e8 86 c8 ff ff       	call   8100413e <__malloc_unlock>
810078b8:	83 c4 10             	add    $0x10,%esp
810078bb:	8b 45 a8             	mov    -0x58(%ebp),%eax
810078be:	e9 2f 05 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
810078c3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810078c6:	8b 45 ac             	mov    -0x54(%ebp),%eax
810078c9:	01 c2                	add    %eax,%edx
810078cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810078ce:	01 d0                	add    %edx,%eax
810078d0:	89 c2                	mov    %eax,%edx
810078d2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810078d5:	39 c2                	cmp    %eax,%edx
810078d7:	0f 8c 6f 01 00 00    	jl     81007a4c <_realloc_r+0x532>
810078dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810078e0:	8b 40 0c             	mov    0xc(%eax),%eax
810078e3:	89 45 b8             	mov    %eax,-0x48(%ebp)
810078e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810078e9:	8b 40 08             	mov    0x8(%eax),%eax
810078ec:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810078ef:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810078f2:	8b 55 b8             	mov    -0x48(%ebp),%edx
810078f5:	89 50 0c             	mov    %edx,0xc(%eax)
810078f8:	8b 45 b8             	mov    -0x48(%ebp),%eax
810078fb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810078fe:	89 50 08             	mov    %edx,0x8(%eax)
81007901:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007904:	8b 40 0c             	mov    0xc(%eax),%eax
81007907:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100790a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100790d:	8b 40 08             	mov    0x8(%eax),%eax
81007910:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007913:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007916:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007919:	89 50 0c             	mov    %edx,0xc(%eax)
8100791c:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100791f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007922:	89 50 08             	mov    %edx,0x8(%eax)
81007925:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007928:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100792b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100792e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007931:	01 d0                	add    %edx,%eax
81007933:	01 45 f0             	add    %eax,-0x10(%ebp)
81007936:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007939:	83 c0 08             	add    $0x8,%eax
8100793c:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100793f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007942:	83 e8 04             	sub    $0x4,%eax
81007945:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81007948:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
8100794c:	0f 87 e1 00 00 00    	ja     81007a33 <_realloc_r+0x519>
81007952:	8b 45 0c             	mov    0xc(%ebp),%eax
81007955:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007958:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100795b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100795e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81007962:	0f 86 90 00 00 00    	jbe    810079f8 <_realloc_r+0x4de>
81007968:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100796b:	8d 42 04             	lea    0x4(%edx),%eax
8100796e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007971:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007974:	8d 48 04             	lea    0x4(%eax),%ecx
81007977:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100797a:	8b 12                	mov    (%edx),%edx
8100797c:	89 10                	mov    %edx,(%eax)
8100797e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007981:	8d 42 04             	lea    0x4(%edx),%eax
81007984:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007987:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100798a:	8d 48 04             	lea    0x4(%eax),%ecx
8100798d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007990:	8b 12                	mov    (%edx),%edx
81007992:	89 10                	mov    %edx,(%eax)
81007994:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007998:	76 5e                	jbe    810079f8 <_realloc_r+0x4de>
8100799a:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100799d:	8d 42 04             	lea    0x4(%edx),%eax
810079a0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810079a3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810079a6:	8d 48 04             	lea    0x4(%eax),%ecx
810079a9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810079ac:	8b 12                	mov    (%edx),%edx
810079ae:	89 10                	mov    %edx,(%eax)
810079b0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810079b3:	8d 42 04             	lea    0x4(%edx),%eax
810079b6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810079b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810079bc:	8d 48 04             	lea    0x4(%eax),%ecx
810079bf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810079c2:	8b 12                	mov    (%edx),%edx
810079c4:	89 10                	mov    %edx,(%eax)
810079c6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810079ca:	76 2c                	jbe    810079f8 <_realloc_r+0x4de>
810079cc:	8b 55 dc             	mov    -0x24(%ebp),%edx
810079cf:	8d 42 04             	lea    0x4(%edx),%eax
810079d2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810079d5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810079d8:	8d 48 04             	lea    0x4(%eax),%ecx
810079db:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810079de:	8b 12                	mov    (%edx),%edx
810079e0:	89 10                	mov    %edx,(%eax)
810079e2:	8b 55 dc             	mov    -0x24(%ebp),%edx
810079e5:	8d 42 04             	lea    0x4(%edx),%eax
810079e8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810079eb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810079ee:	8d 48 04             	lea    0x4(%eax),%ecx
810079f1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810079f4:	8b 12                	mov    (%edx),%edx
810079f6:	89 10                	mov    %edx,(%eax)
810079f8:	8b 55 dc             	mov    -0x24(%ebp),%edx
810079fb:	8d 42 04             	lea    0x4(%edx),%eax
810079fe:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007a01:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007a04:	8d 48 04             	lea    0x4(%eax),%ecx
81007a07:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007a0a:	8b 12                	mov    (%edx),%edx
81007a0c:	89 10                	mov    %edx,(%eax)
81007a0e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007a11:	8d 42 04             	lea    0x4(%edx),%eax
81007a14:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007a17:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007a1a:	8d 48 04             	lea    0x4(%eax),%ecx
81007a1d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007a20:	8b 12                	mov    (%edx),%edx
81007a22:	89 10                	mov    %edx,(%eax)
81007a24:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007a27:	8b 10                	mov    (%eax),%edx
81007a29:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007a2c:	89 10                	mov    %edx,(%eax)
81007a2e:	e9 12 03 00 00       	jmp    81007d45 <_realloc_r+0x82b>
81007a33:	83 ec 04             	sub    $0x4,%esp
81007a36:	ff 75 a4             	push   -0x5c(%ebp)
81007a39:	ff 75 0c             	push   0xc(%ebp)
81007a3c:	ff 75 a8             	push   -0x58(%ebp)
81007a3f:	e8 dc f1 ff ff       	call   81006c20 <memmove>
81007a44:	83 c4 10             	add    $0x10,%esp
81007a47:	e9 f9 02 00 00       	jmp    81007d45 <_realloc_r+0x82b>
81007a4c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81007a50:	0f 84 5b 01 00 00    	je     81007bb1 <_realloc_r+0x697>
81007a56:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007a59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a5c:	01 d0                	add    %edx,%eax
81007a5e:	89 c2                	mov    %eax,%edx
81007a60:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a63:	39 c2                	cmp    %eax,%edx
81007a65:	0f 8c 46 01 00 00    	jl     81007bb1 <_realloc_r+0x697>
81007a6b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007a6e:	8b 40 0c             	mov    0xc(%eax),%eax
81007a71:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007a74:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007a77:	8b 40 08             	mov    0x8(%eax),%eax
81007a7a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007a7d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007a80:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007a83:	89 50 0c             	mov    %edx,0xc(%eax)
81007a86:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007a89:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007a8c:	89 50 08             	mov    %edx,0x8(%eax)
81007a8f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007a92:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007a95:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007a98:	01 45 f0             	add    %eax,-0x10(%ebp)
81007a9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007a9e:	83 c0 08             	add    $0x8,%eax
81007aa1:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007aa4:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007aa7:	83 e8 04             	sub    $0x4,%eax
81007aaa:	89 45 9c             	mov    %eax,-0x64(%ebp)
81007aad:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81007ab1:	0f 87 e1 00 00 00    	ja     81007b98 <_realloc_r+0x67e>
81007ab7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007aba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007abd:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007ac0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007ac3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007ac7:	0f 86 90 00 00 00    	jbe    81007b5d <_realloc_r+0x643>
81007acd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007ad0:	8d 42 04             	lea    0x4(%edx),%eax
81007ad3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007ad6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007ad9:	8d 48 04             	lea    0x4(%eax),%ecx
81007adc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007adf:	8b 12                	mov    (%edx),%edx
81007ae1:	89 10                	mov    %edx,(%eax)
81007ae3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007ae6:	8d 42 04             	lea    0x4(%edx),%eax
81007ae9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007aec:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007aef:	8d 48 04             	lea    0x4(%eax),%ecx
81007af2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007af5:	8b 12                	mov    (%edx),%edx
81007af7:	89 10                	mov    %edx,(%eax)
81007af9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81007afd:	76 5e                	jbe    81007b5d <_realloc_r+0x643>
81007aff:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b02:	8d 42 04             	lea    0x4(%edx),%eax
81007b05:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b08:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b0b:	8d 48 04             	lea    0x4(%eax),%ecx
81007b0e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b11:	8b 12                	mov    (%edx),%edx
81007b13:	89 10                	mov    %edx,(%eax)
81007b15:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b18:	8d 42 04             	lea    0x4(%edx),%eax
81007b1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b1e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b21:	8d 48 04             	lea    0x4(%eax),%ecx
81007b24:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b27:	8b 12                	mov    (%edx),%edx
81007b29:	89 10                	mov    %edx,(%eax)
81007b2b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81007b2f:	76 2c                	jbe    81007b5d <_realloc_r+0x643>
81007b31:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b34:	8d 42 04             	lea    0x4(%edx),%eax
81007b37:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b3d:	8d 48 04             	lea    0x4(%eax),%ecx
81007b40:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b43:	8b 12                	mov    (%edx),%edx
81007b45:	89 10                	mov    %edx,(%eax)
81007b47:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b4a:	8d 42 04             	lea    0x4(%edx),%eax
81007b4d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b50:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b53:	8d 48 04             	lea    0x4(%eax),%ecx
81007b56:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b59:	8b 12                	mov    (%edx),%edx
81007b5b:	89 10                	mov    %edx,(%eax)
81007b5d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b60:	8d 42 04             	lea    0x4(%edx),%eax
81007b63:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b66:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b69:	8d 48 04             	lea    0x4(%eax),%ecx
81007b6c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b6f:	8b 12                	mov    (%edx),%edx
81007b71:	89 10                	mov    %edx,(%eax)
81007b73:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007b76:	8d 42 04             	lea    0x4(%edx),%eax
81007b79:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007b7c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b7f:	8d 48 04             	lea    0x4(%eax),%ecx
81007b82:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007b85:	8b 12                	mov    (%edx),%edx
81007b87:	89 10                	mov    %edx,(%eax)
81007b89:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007b8c:	8b 10                	mov    (%eax),%edx
81007b8e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007b91:	89 10                	mov    %edx,(%eax)
81007b93:	e9 ad 01 00 00       	jmp    81007d45 <_realloc_r+0x82b>
81007b98:	83 ec 04             	sub    $0x4,%esp
81007b9b:	ff 75 9c             	push   -0x64(%ebp)
81007b9e:	ff 75 0c             	push   0xc(%ebp)
81007ba1:	ff 75 a8             	push   -0x58(%ebp)
81007ba4:	e8 77 f0 ff ff       	call   81006c20 <memmove>
81007ba9:	83 c4 10             	add    $0x10,%esp
81007bac:	e9 94 01 00 00       	jmp    81007d45 <_realloc_r+0x82b>
81007bb1:	83 ec 08             	sub    $0x8,%esp
81007bb4:	ff 75 10             	push   0x10(%ebp)
81007bb7:	ff 75 08             	push   0x8(%ebp)
81007bba:	e8 9d bb ff ff       	call   8100375c <_malloc_r>
81007bbf:	83 c4 10             	add    $0x10,%esp
81007bc2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007bc5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81007bc9:	75 18                	jne    81007be3 <_realloc_r+0x6c9>
81007bcb:	83 ec 0c             	sub    $0xc,%esp
81007bce:	ff 75 08             	push   0x8(%ebp)
81007bd1:	e8 68 c5 ff ff       	call   8100413e <__malloc_unlock>
81007bd6:	83 c4 10             	add    $0x10,%esp
81007bd9:	b8 00 00 00 00       	mov    $0x0,%eax
81007bde:	e9 0f 02 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
81007be3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007be6:	83 e8 08             	sub    $0x8,%eax
81007be9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007bec:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007bef:	8b 40 04             	mov    0x4(%eax),%eax
81007bf2:	83 e0 fe             	and    $0xfffffffe,%eax
81007bf5:	89 c2                	mov    %eax,%edx
81007bf7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007bfa:	01 d0                	add    %edx,%eax
81007bfc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81007bff:	75 17                	jne    81007c18 <_realloc_r+0x6fe>
81007c01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007c04:	8b 40 04             	mov    0x4(%eax),%eax
81007c07:	83 e0 fc             	and    $0xfffffffc,%eax
81007c0a:	01 45 f0             	add    %eax,-0x10(%ebp)
81007c0d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007c10:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007c13:	e9 2d 01 00 00       	jmp    81007d45 <_realloc_r+0x82b>
81007c18:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007c1b:	83 e8 04             	sub    $0x4,%eax
81007c1e:	89 45 98             	mov    %eax,-0x68(%ebp)
81007c21:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81007c25:	0f 87 de 00 00 00    	ja     81007d09 <_realloc_r+0x7ef>
81007c2b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c2e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007c31:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007c34:	89 45 c8             	mov    %eax,-0x38(%ebp)
81007c37:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81007c3b:	0f 86 90 00 00 00    	jbe    81007cd1 <_realloc_r+0x7b7>
81007c41:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007c44:	8d 42 04             	lea    0x4(%edx),%eax
81007c47:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007c4a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007c4d:	8d 48 04             	lea    0x4(%eax),%ecx
81007c50:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007c53:	8b 12                	mov    (%edx),%edx
81007c55:	89 10                	mov    %edx,(%eax)
81007c57:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007c5a:	8d 42 04             	lea    0x4(%edx),%eax
81007c5d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007c60:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007c63:	8d 48 04             	lea    0x4(%eax),%ecx
81007c66:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007c69:	8b 12                	mov    (%edx),%edx
81007c6b:	89 10                	mov    %edx,(%eax)
81007c6d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81007c71:	76 5e                	jbe    81007cd1 <_realloc_r+0x7b7>
81007c73:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007c76:	8d 42 04             	lea    0x4(%edx),%eax
81007c79:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007c7c:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007c7f:	8d 48 04             	lea    0x4(%eax),%ecx
81007c82:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007c85:	8b 12                	mov    (%edx),%edx
81007c87:	89 10                	mov    %edx,(%eax)
81007c89:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007c8c:	8d 42 04             	lea    0x4(%edx),%eax
81007c8f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007c92:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007c95:	8d 48 04             	lea    0x4(%eax),%ecx
81007c98:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007c9b:	8b 12                	mov    (%edx),%edx
81007c9d:	89 10                	mov    %edx,(%eax)
81007c9f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81007ca3:	76 2c                	jbe    81007cd1 <_realloc_r+0x7b7>
81007ca5:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007ca8:	8d 42 04             	lea    0x4(%edx),%eax
81007cab:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007cae:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007cb1:	8d 48 04             	lea    0x4(%eax),%ecx
81007cb4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007cb7:	8b 12                	mov    (%edx),%edx
81007cb9:	89 10                	mov    %edx,(%eax)
81007cbb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007cbe:	8d 42 04             	lea    0x4(%edx),%eax
81007cc1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007cc4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007cc7:	8d 48 04             	lea    0x4(%eax),%ecx
81007cca:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007ccd:	8b 12                	mov    (%edx),%edx
81007ccf:	89 10                	mov    %edx,(%eax)
81007cd1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007cd4:	8d 42 04             	lea    0x4(%edx),%eax
81007cd7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007cda:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007cdd:	8d 48 04             	lea    0x4(%eax),%ecx
81007ce0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007ce3:	8b 12                	mov    (%edx),%edx
81007ce5:	89 10                	mov    %edx,(%eax)
81007ce7:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007cea:	8d 42 04             	lea    0x4(%edx),%eax
81007ced:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007cf0:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007cf3:	8d 48 04             	lea    0x4(%eax),%ecx
81007cf6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007cf9:	8b 12                	mov    (%edx),%edx
81007cfb:	89 10                	mov    %edx,(%eax)
81007cfd:	8b 45 cc             	mov    -0x34(%ebp),%eax
81007d00:	8b 10                	mov    (%eax),%edx
81007d02:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007d05:	89 10                	mov    %edx,(%eax)
81007d07:	eb 14                	jmp    81007d1d <_realloc_r+0x803>
81007d09:	83 ec 04             	sub    $0x4,%esp
81007d0c:	ff 75 98             	push   -0x68(%ebp)
81007d0f:	ff 75 0c             	push   0xc(%ebp)
81007d12:	ff 75 a8             	push   -0x58(%ebp)
81007d15:	e8 06 ef ff ff       	call   81006c20 <memmove>
81007d1a:	83 c4 10             	add    $0x10,%esp
81007d1d:	83 ec 08             	sub    $0x8,%esp
81007d20:	ff 75 0c             	push   0xc(%ebp)
81007d23:	ff 75 08             	push   0x8(%ebp)
81007d26:	e8 6e 9b ff ff       	call   81001899 <_free_r>
81007d2b:	83 c4 10             	add    $0x10,%esp
81007d2e:	83 ec 0c             	sub    $0xc,%esp
81007d31:	ff 75 08             	push   0x8(%ebp)
81007d34:	e8 05 c4 ff ff       	call   8100413e <__malloc_unlock>
81007d39:	83 c4 10             	add    $0x10,%esp
81007d3c:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007d3f:	e9 ae 00 00 00       	jmp    81007df2 <_realloc_r+0x8d8>
81007d44:	90                   	nop
81007d45:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007d48:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007d4b:	89 45 94             	mov    %eax,-0x6c(%ebp)
81007d4e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81007d52:	76 5d                	jbe    81007db1 <_realloc_r+0x897>
81007d54:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007d57:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007d5a:	01 d0                	add    %edx,%eax
81007d5c:	89 45 90             	mov    %eax,-0x70(%ebp)
81007d5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007d62:	8b 40 04             	mov    0x4(%eax),%eax
81007d65:	83 e0 01             	and    $0x1,%eax
81007d68:	0b 45 bc             	or     -0x44(%ebp),%eax
81007d6b:	89 c2                	mov    %eax,%edx
81007d6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007d70:	89 50 04             	mov    %edx,0x4(%eax)
81007d73:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007d76:	83 c8 01             	or     $0x1,%eax
81007d79:	89 c2                	mov    %eax,%edx
81007d7b:	8b 45 90             	mov    -0x70(%ebp),%eax
81007d7e:	89 50 04             	mov    %edx,0x4(%eax)
81007d81:	8b 55 90             	mov    -0x70(%ebp),%edx
81007d84:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007d87:	01 d0                	add    %edx,%eax
81007d89:	8b 50 04             	mov    0x4(%eax),%edx
81007d8c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81007d8f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007d92:	01 c8                	add    %ecx,%eax
81007d94:	83 ca 01             	or     $0x1,%edx
81007d97:	89 50 04             	mov    %edx,0x4(%eax)
81007d9a:	8b 45 90             	mov    -0x70(%ebp),%eax
81007d9d:	83 c0 08             	add    $0x8,%eax
81007da0:	83 ec 08             	sub    $0x8,%esp
81007da3:	50                   	push   %eax
81007da4:	ff 75 08             	push   0x8(%ebp)
81007da7:	e8 ed 9a ff ff       	call   81001899 <_free_r>
81007dac:	83 c4 10             	add    $0x10,%esp
81007daf:	eb 2d                	jmp    81007dde <_realloc_r+0x8c4>
81007db1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007db4:	8b 40 04             	mov    0x4(%eax),%eax
81007db7:	83 e0 01             	and    $0x1,%eax
81007dba:	0b 45 f0             	or     -0x10(%ebp),%eax
81007dbd:	89 c2                	mov    %eax,%edx
81007dbf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007dc2:	89 50 04             	mov    %edx,0x4(%eax)
81007dc5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007dc8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007dcb:	01 d0                	add    %edx,%eax
81007dcd:	8b 50 04             	mov    0x4(%eax),%edx
81007dd0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007dd3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007dd6:	01 c8                	add    %ecx,%eax
81007dd8:	83 ca 01             	or     $0x1,%edx
81007ddb:	89 50 04             	mov    %edx,0x4(%eax)
81007dde:	83 ec 0c             	sub    $0xc,%esp
81007de1:	ff 75 08             	push   0x8(%ebp)
81007de4:	e8 55 c3 ff ff       	call   8100413e <__malloc_unlock>
81007de9:	83 c4 10             	add    $0x10,%esp
81007dec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007def:	83 c0 08             	add    $0x8,%eax
81007df2:	c9                   	leave  
81007df3:	c3                   	ret    

81007df4 <__srget_r>:
81007df4:	55                   	push   %ebp
81007df5:	89 e5                	mov    %esp,%ebp
81007df7:	53                   	push   %ebx
81007df8:	83 ec 14             	sub    $0x14,%esp
81007dfb:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81007dfe:	8b 45 08             	mov    0x8(%ebp),%eax
81007e01:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007e04:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007e08:	74 18                	je     81007e22 <__srget_r+0x2e>
81007e0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007e0d:	8b 40 38             	mov    0x38(%eax),%eax
81007e10:	85 c0                	test   %eax,%eax
81007e12:	75 0e                	jne    81007e22 <__srget_r+0x2e>
81007e14:	83 ec 0c             	sub    $0xc,%esp
81007e17:	ff 75 f4             	push   -0xc(%ebp)
81007e1a:	e8 24 98 ff ff       	call   81001643 <__sinit>
81007e1f:	83 c4 10             	add    $0x10,%esp
81007e22:	83 ec 08             	sub    $0x8,%esp
81007e25:	53                   	push   %ebx
81007e26:	ff 75 08             	push   0x8(%ebp)
81007e29:	e8 c3 d1 ff ff       	call   81004ff1 <__srefill_r>
81007e2e:	83 c4 10             	add    $0x10,%esp
81007e31:	85 c0                	test   %eax,%eax
81007e33:	75 18                	jne    81007e4d <__srget_r+0x59>
81007e35:	8b 43 04             	mov    0x4(%ebx),%eax
81007e38:	83 e8 01             	sub    $0x1,%eax
81007e3b:	89 43 04             	mov    %eax,0x4(%ebx)
81007e3e:	8b 03                	mov    (%ebx),%eax
81007e40:	8d 50 01             	lea    0x1(%eax),%edx
81007e43:	89 13                	mov    %edx,(%ebx)
81007e45:	0f b6 00             	movzbl (%eax),%eax
81007e48:	0f b6 c0             	movzbl %al,%eax
81007e4b:	eb 05                	jmp    81007e52 <__srget_r+0x5e>
81007e4d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e52:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007e55:	c9                   	leave  
81007e56:	c3                   	ret    

81007e57 <__srget>:
81007e57:	55                   	push   %ebp
81007e58:	89 e5                	mov    %esp,%ebp
81007e5a:	83 ec 08             	sub    $0x8,%esp
81007e5d:	8b 55 08             	mov    0x8(%ebp),%edx
81007e60:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81007e65:	83 ec 08             	sub    $0x8,%esp
81007e68:	52                   	push   %edx
81007e69:	50                   	push   %eax
81007e6a:	e8 85 ff ff ff       	call   81007df4 <__srget_r>
81007e6f:	83 c4 10             	add    $0x10,%esp
81007e72:	c9                   	leave  
81007e73:	c3                   	ret    

81007e74 <strncmp>:
81007e74:	55                   	push   %ebp
81007e75:	89 e5                	mov    %esp,%ebp
81007e77:	83 ec 10             	sub    $0x10,%esp
81007e7a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007e7e:	75 0a                	jne    81007e8a <strncmp+0x16>
81007e80:	b8 00 00 00 00       	mov    $0x0,%eax
81007e85:	e9 cb 00 00 00       	jmp    81007f55 <strncmp+0xe1>
81007e8a:	8b 55 08             	mov    0x8(%ebp),%edx
81007e8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e90:	09 d0                	or     %edx,%eax
81007e92:	83 e0 03             	and    $0x3,%eax
81007e95:	85 c0                	test   %eax,%eax
81007e97:	0f 85 85 00 00 00    	jne    81007f22 <strncmp+0xae>
81007e9d:	8b 45 08             	mov    0x8(%ebp),%eax
81007ea0:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007ea3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ea6:	89 45 f8             	mov    %eax,-0x8(%ebp)
81007ea9:	eb 36                	jmp    81007ee1 <strncmp+0x6d>
81007eab:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81007eaf:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007eb3:	74 1d                	je     81007ed2 <strncmp+0x5e>
81007eb5:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007eb8:	8b 00                	mov    (%eax),%eax
81007eba:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81007ec0:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007ec3:	8b 00                	mov    (%eax),%eax
81007ec5:	f7 d0                	not    %eax
81007ec7:	21 d0                	and    %edx,%eax
81007ec9:	25 80 80 80 80       	and    $0x80808080,%eax
81007ece:	85 c0                	test   %eax,%eax
81007ed0:	74 07                	je     81007ed9 <strncmp+0x65>
81007ed2:	b8 00 00 00 00       	mov    $0x0,%eax
81007ed7:	eb 7c                	jmp    81007f55 <strncmp+0xe1>
81007ed9:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81007edd:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81007ee1:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81007ee5:	76 0e                	jbe    81007ef5 <strncmp+0x81>
81007ee7:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007eea:	8b 10                	mov    (%eax),%edx
81007eec:	8b 45 f8             	mov    -0x8(%ebp),%eax
81007eef:	8b 00                	mov    (%eax),%eax
81007ef1:	39 c2                	cmp    %eax,%edx
81007ef3:	74 b6                	je     81007eab <strncmp+0x37>
81007ef5:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007ef8:	89 45 08             	mov    %eax,0x8(%ebp)
81007efb:	8b 45 f8             	mov    -0x8(%ebp),%eax
81007efe:	89 45 0c             	mov    %eax,0xc(%ebp)
81007f01:	eb 1f                	jmp    81007f22 <strncmp+0xae>
81007f03:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007f07:	74 0a                	je     81007f13 <strncmp+0x9f>
81007f09:	8b 45 08             	mov    0x8(%ebp),%eax
81007f0c:	0f b6 00             	movzbl (%eax),%eax
81007f0f:	84 c0                	test   %al,%al
81007f11:	75 07                	jne    81007f1a <strncmp+0xa6>
81007f13:	b8 00 00 00 00       	mov    $0x0,%eax
81007f18:	eb 3b                	jmp    81007f55 <strncmp+0xe1>
81007f1a:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81007f1e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81007f22:	8b 45 10             	mov    0x10(%ebp),%eax
81007f25:	8d 50 ff             	lea    -0x1(%eax),%edx
81007f28:	89 55 10             	mov    %edx,0x10(%ebp)
81007f2b:	85 c0                	test   %eax,%eax
81007f2d:	74 10                	je     81007f3f <strncmp+0xcb>
81007f2f:	8b 45 08             	mov    0x8(%ebp),%eax
81007f32:	0f b6 10             	movzbl (%eax),%edx
81007f35:	8b 45 0c             	mov    0xc(%ebp),%eax
81007f38:	0f b6 00             	movzbl (%eax),%eax
81007f3b:	38 c2                	cmp    %al,%dl
81007f3d:	74 c4                	je     81007f03 <strncmp+0x8f>
81007f3f:	8b 45 08             	mov    0x8(%ebp),%eax
81007f42:	0f b6 00             	movzbl (%eax),%eax
81007f45:	0f b6 d0             	movzbl %al,%edx
81007f48:	8b 45 0c             	mov    0xc(%ebp),%eax
81007f4b:	0f b6 00             	movzbl (%eax),%eax
81007f4e:	0f b6 c8             	movzbl %al,%ecx
81007f51:	89 d0                	mov    %edx,%eax
81007f53:	29 c8                	sub    %ecx,%eax
81007f55:	c9                   	leave  
81007f56:	c3                   	ret    

81007f57 <__get_global_locale>:
81007f57:	55                   	push   %ebp
81007f58:	89 e5                	mov    %esp,%ebp
81007f5a:	b8 a0 90 00 81       	mov    $0x810090a0,%eax
81007f5f:	5d                   	pop    %ebp
81007f60:	c3                   	ret    

81007f61 <__get_current_locale>:
81007f61:	55                   	push   %ebp
81007f62:	89 e5                	mov    %esp,%ebp
81007f64:	e8 ee ff ff ff       	call   81007f57 <__get_global_locale>
81007f69:	5d                   	pop    %ebp
81007f6a:	c3                   	ret    

81007f6b <_wcrtomb_r>:
81007f6b:	55                   	push   %ebp
81007f6c:	89 e5                	mov    %esp,%ebp
81007f6e:	83 ec 18             	sub    $0x18,%esp
81007f71:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007f78:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007f7c:	75 21                	jne    81007f9f <_wcrtomb_r+0x34>
81007f7e:	e8 de ff ff ff       	call   81007f61 <__get_current_locale>
81007f83:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007f89:	ff 75 14             	push   0x14(%ebp)
81007f8c:	6a 00                	push   $0x0
81007f8e:	8d 55 ea             	lea    -0x16(%ebp),%edx
81007f91:	52                   	push   %edx
81007f92:	ff 75 08             	push   0x8(%ebp)
81007f95:	ff d0                	call   *%eax
81007f97:	83 c4 10             	add    $0x10,%esp
81007f9a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007f9d:	eb 1f                	jmp    81007fbe <_wcrtomb_r+0x53>
81007f9f:	e8 bd ff ff ff       	call   81007f61 <__get_current_locale>
81007fa4:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007faa:	ff 75 14             	push   0x14(%ebp)
81007fad:	ff 75 10             	push   0x10(%ebp)
81007fb0:	ff 75 0c             	push   0xc(%ebp)
81007fb3:	ff 75 08             	push   0x8(%ebp)
81007fb6:	ff d0                	call   *%eax
81007fb8:	83 c4 10             	add    $0x10,%esp
81007fbb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007fbe:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007fc2:	75 19                	jne    81007fdd <_wcrtomb_r+0x72>
81007fc4:	8b 45 14             	mov    0x14(%ebp),%eax
81007fc7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007fcd:	8b 45 08             	mov    0x8(%ebp),%eax
81007fd0:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007fd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007fdb:	eb 03                	jmp    81007fe0 <_wcrtomb_r+0x75>
81007fdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007fe0:	c9                   	leave  
81007fe1:	c3                   	ret    

81007fe2 <wcrtomb>:
81007fe2:	55                   	push   %ebp
81007fe3:	89 e5                	mov    %esp,%ebp
81007fe5:	83 ec 28             	sub    $0x28,%esp
81007fe8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007fef:	a1 64 8c 00 81       	mov    0x81008c64,%eax
81007ff4:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ff7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007ffb:	75 21                	jne    8100801e <wcrtomb+0x3c>
81007ffd:	e8 5f ff ff ff       	call   81007f61 <__get_current_locale>
81008002:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008008:	ff 75 10             	push   0x10(%ebp)
8100800b:	6a 00                	push   $0x0
8100800d:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008010:	52                   	push   %edx
81008011:	ff 75 f0             	push   -0x10(%ebp)
81008014:	ff d0                	call   *%eax
81008016:	83 c4 10             	add    $0x10,%esp
81008019:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100801c:	eb 1f                	jmp    8100803d <wcrtomb+0x5b>
8100801e:	e8 3e ff ff ff       	call   81007f61 <__get_current_locale>
81008023:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008029:	ff 75 10             	push   0x10(%ebp)
8100802c:	ff 75 0c             	push   0xc(%ebp)
8100802f:	ff 75 08             	push   0x8(%ebp)
81008032:	ff 75 f0             	push   -0x10(%ebp)
81008035:	ff d0                	call   *%eax
81008037:	83 c4 10             	add    $0x10,%esp
8100803a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100803d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008041:	75 19                	jne    8100805c <wcrtomb+0x7a>
81008043:	8b 45 10             	mov    0x10(%ebp),%eax
81008046:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100804c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100804f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008055:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100805a:	eb 03                	jmp    8100805f <wcrtomb+0x7d>
8100805c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100805f:	c9                   	leave  
81008060:	c3                   	ret    

81008061 <__get_global_locale>:
81008061:	55                   	push   %ebp
81008062:	89 e5                	mov    %esp,%ebp
81008064:	b8 a0 90 00 81       	mov    $0x810090a0,%eax
81008069:	5d                   	pop    %ebp
8100806a:	c3                   	ret    

8100806b <__get_current_locale>:
8100806b:	55                   	push   %ebp
8100806c:	89 e5                	mov    %esp,%ebp
8100806e:	e8 ee ff ff ff       	call   81008061 <__get_global_locale>
81008073:	5d                   	pop    %ebp
81008074:	c3                   	ret    

81008075 <_wctomb_r>:
81008075:	55                   	push   %ebp
81008076:	89 e5                	mov    %esp,%ebp
81008078:	83 ec 08             	sub    $0x8,%esp
8100807b:	e8 eb ff ff ff       	call   8100806b <__get_current_locale>
81008080:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008086:	ff 75 14             	push   0x14(%ebp)
81008089:	ff 75 10             	push   0x10(%ebp)
8100808c:	ff 75 0c             	push   0xc(%ebp)
8100808f:	ff 75 08             	push   0x8(%ebp)
81008092:	ff d0                	call   *%eax
81008094:	83 c4 10             	add    $0x10,%esp
81008097:	c9                   	leave  
81008098:	c3                   	ret    

81008099 <__ascii_wctomb>:
81008099:	55                   	push   %ebp
8100809a:	89 e5                	mov    %esp,%ebp
8100809c:	83 ec 10             	sub    $0x10,%esp
8100809f:	8b 45 10             	mov    0x10(%ebp),%eax
810080a2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810080a5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810080a9:	75 07                	jne    810080b2 <__ascii_wctomb+0x19>
810080ab:	b8 00 00 00 00       	mov    $0x0,%eax
810080b0:	eb 28                	jmp    810080da <__ascii_wctomb+0x41>
810080b2:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810080b9:	76 10                	jbe    810080cb <__ascii_wctomb+0x32>
810080bb:	8b 45 08             	mov    0x8(%ebp),%eax
810080be:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810080c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810080c9:	eb 0f                	jmp    810080da <__ascii_wctomb+0x41>
810080cb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810080ce:	89 c2                	mov    %eax,%edx
810080d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810080d3:	88 10                	mov    %dl,(%eax)
810080d5:	b8 01 00 00 00       	mov    $0x1,%eax
810080da:	c9                   	leave  
810080db:	c3                   	ret    

810080dc <__env_lock>:
810080dc:	55                   	push   %ebp
810080dd:	89 e5                	mov    %esp,%ebp
810080df:	90                   	nop
810080e0:	5d                   	pop    %ebp
810080e1:	c3                   	ret    

810080e2 <__env_unlock>:
810080e2:	55                   	push   %ebp
810080e3:	89 e5                	mov    %esp,%ebp
810080e5:	90                   	nop
810080e6:	5d                   	pop    %ebp
810080e7:	c3                   	ret    
