
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810002a4

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00005c2c memsz 0x000062b4 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004e6c  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000003a1  81004e80  81004e80  00005e80  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009ec  81005240  81005240  00006240  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000674  81005c40  81005c40  00006c2c  2**5
                  ALLOC
  4 .debug_info   00019645  00000000  00000000  00006c2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00005ad2  00000000  00000000  00020271  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000610  00000000  00000000  00025d48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00003826  00000000  00000000  00026358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001252  00000000  00000000  00029b7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00001061  00000000  00000000  0002add0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0002be31  2**0
                  CONTENTS, READONLY
 11 .debug_frame  0000126c  00000000  00000000  0002be70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0002d0dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81005c40 l     O .bss	00000200 cmd_buf
81005240 l     O .data	00000004 prompt
81005e40 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81004eb4 l     O .rodata	0000000c cmd_list
81000042 l     F .text	0000003e cli_init
81000080 l     F .text	00000033 show_prompt
810000b3 l     F .text	00000043 find_builtin
810000f6 l     F .text	00000042 run_builtin
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000995 l     F .text	000000ad std
81000a42 l     F .text	0000001b stdin_init
81000a5d l     F .text	0000001b stdout_init
81000a78 l     F .text	0000001b stderr_init
8100624c l     O .bss	00000004 __sfp_recursive_mutex
81006250 l     O .bss	00000004 __sinit_recursive_mutex
81000d3b l     F .text	0000000a __fp_lock
81000d45 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81005260 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81001405 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001f4d l       .text	00000000 L20
81001f04 l       .text	00000000 L5
81001f4a l       .text	00000000 L15
81001f10 l       .text	00000000 L8
81001f31 l       .text	00000000 L9
81001f40 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
810062a8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81002110 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81002cd7 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100310b l       .text	00000000 L25
810030b2 l       .text	00000000 L5
810030fe l       .text	00000000 L14
81003104 l       .text	00000000 L19
810030c3 l       .text	00000000 L10
810030f0 l       .text	00000000 L9
810030f3 l       .text	00000000 L15
8100313e l       .text	00000000 L26
81003141 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81003246 l       .text	00000000 L5
8100327e l       .text	00000000 L15
81003250 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
810037c4 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 locale.c
81003e17 l     F .text	0000000a __get_global_locale
81003e21 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81004083 l     F .text	0000000a __get_global_locale
8100408d l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81004c64 l     F .text	0000000a __get_global_locale
81004c6e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81004d6e l     F .text	0000000a __get_global_locale
81004d78 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81004e2c g     F .text	00000040 _isatty_r
81004acd g     F .text	00000037 cleanup_glue
81002be5 g     F .text	000000d6 _puts_r
81003ebd g     F .text	00000046 _lseek_r
810003ed g     F .text	0000001b yield
81003372 g     F .text	0000001a strtok_r
81002bb0 g     F .text	00000035 printf
81004c78 g     F .text	00000077 _wcrtomb_r
81002fee g     F .text	0000004a __sseek
81000c8a g     F .text	00000099 __sinit
8100338c g     F .text	00000112 __swbuf_r
81003e2b g     F .text	0000005f _setlocale_r
81000a93 g     F .text	0000006f __sfmoreglue
8100202e g     F .text	00000006 __malloc_unlock
81004120 g       .text	00000000 memmove
81000c70 g     F .text	0000001a _cleanup
810032b2 g     F .text	000000c0 __strtok_r
81004de9 g     F .text	00000043 _fstat_r
810062b0 g     O .bss	00000004 errno
81002f89 g     F .text	0000000a __seofread
810003c0 g     F .text	0000002d execve
81000362 g     F .text	0000001b getpid
81000976 g     F .text	0000001f fgets
81001f58 g       .text	00000000 memcpy
81000c4f g     F .text	00000021 _cleanup_r
81002cbb g     F .text	0000001c puts
81002b83 g     F .text	0000002d _printf_r
810004d7 g     F .text	00000021 isatty
810013fb g     F .text	0000000a __getreent
81006260 g     O .bss	00000004 __malloc_top_pad
81005c40 g       .bss	00000000 __bss_start__
81003979 g     F .text	0000049e __sfvwrite_r
81002f05 g     F .text	00000040 _sbrk_r
810041ad g     F .text	00000046 _read_r
810036a0 g     F .text	00000107 _fclose_r
810007df g     F .text	00000039 fflush
81006264 g     O .bss	00000004 __malloc_max_sbrked_mem
810004aa g     F .text	0000002d lseek
81004ed0 g     O .rodata	00000004 _global_impure_ptr
810041f3 g     F .text	000008da _realloc_r
810038da g     F .text	00000057 _fputwc_r
81000d4f g     F .text	00000024 __fp_lock_all
81004b04 g     F .text	00000160 _reclaim_reent
8100045c g     F .text	0000002d write
810004f8 g     F .text	00000027 fstat
81000dc0 g     F .text	0000002c fprintf
810002ec g     F .text	0000004c sys_call
81002176 g     F .text	000000a8 __sfputs_r
81000d23 g     F .text	00000006 __sfp_lock_acquire
81001ec0 g       .text	00000000 memchr
810062b4 g       .bss	00000000 __bss_end__
81000dec g     F .text	000003db _free_r
81004fa0 g     O .rodata	00000180 _ctype_b
81003e8a g     F .text	00000014 __locale_mb_cur_max
81005aac g     O .data	00000004 __malloc_sbrk_base
810002a4 g       .text	00000000 _start
8100042f g     F .text	0000002d read
81006280 g     O .bss	00000028 __malloc_current_mallinfo
81002b83 g     F .text	0000002d _iprintf_r
81003660 g     F .text	00000040 _close_r
81003289 g     F .text	00000029 strtok
810003a5 g     F .text	0000001b fork
81003505 g     F .text	0000015b __swsetup_r
81000b02 g     F .text	0000014d __sfp
810056a0 g     O .data	00000408 __malloc_av_
81000d35 g     F .text	00000006 __sinit_lock_release
81002f45 g     F .text	00000044 __sread
81002028 g     F .text	00000006 __malloc_lock
81000d97 g     F .text	00000029 _fprintf_r
8100051f g     F .text	00000021 sbrk
81000787 g     F .text	00000058 _fflush_r
810002b4 g     F .text	00000038 cstart
81001fa0 g       .text	00000000 memset
81000138 g     F .text	0000016c main
81006268 g     O .bss	00000004 __malloc_max_total_mem
8100349e g     F .text	00000021 __swbuf
81003038 g     F .text	00000025 __sclose
810037a7 g     F .text	0000001d fclose
81001698 g     F .text	00000822 _malloc_r
81004da6 g     F .text	00000043 __ascii_wctomb
81000d97 g     F .text	00000029 _fiprintf_r
81001328 g     F .text	00000068 _fwalk
81000818 g     F .text	0000015e _fgets_r
81004097 g     F .text	0000002a _mbtowc_r
810011c7 g     F .text	00000161 _malloc_trim_r
8100315c g     F .text	000000a5 strcmp
8100221e g     F .text	00000025 vfiprintf
81000540 g     F .text	00000021 dup
81002bb0 g     F .text	00000035 iprintf
810062ac g     O .bss	00000004 _PathLocale
810034bf g     F .text	00000046 _write_r
81003e9e g     F .text	0000001f setlocale
81002599 g     F .text	0000019b _printf_common
81005684 g     O .data	00000004 _impure_ptr
81000561 g     F .text	00000226 __sflush_r
81002d04 g     F .text	00000201 __srefill_r
810040c1 g     F .text	00000058 __ascii_mbtowc
81000d73 g     F .text	00000024 __fp_unlock_all
8100037d g     F .text	00000028 print_msg
81003ff0 g     F .text	00000093 __swhatbuf_r
8100382a g     F .text	000000b0 __fputwc
81002f93 g     F .text	0000005b __swrite
81005aa8 g     O .data	00000004 __malloc_trim_threshold
81000dc0 g     F .text	0000002c fiprintf
81002243 g     F .text	00000356 _vfiprintf_r
81001390 g     F .text	0000006b _fwalk_reent
81000d29 g     F .text	00000006 __sfp_lock_release
81005120 g     O .rodata	00000101 _ctype_
81003f03 g     F .text	000000ed __smakebuf_r
81003210 g       .text	00000000 strlen
81002734 g     F .text	0000044f _printf_i
81000408 g     F .text	00000027 open
81002034 g     F .text	000000dc __sprint_r
81003060 g       .text	00000000 strchr
81004d82 g     F .text	00000024 _wctomb_r
81002243 g     F .text	00000356 _vfprintf_r
81000338 g     F .text	0000002a msleep
81004cef g     F .text	0000007f wcrtomb
81000489 g     F .text	00000021 close
81005ac0 g     O .data	0000016c __global_locale
8100221e g     F .text	00000025 vfprintf
81003931 g     F .text	00000048 fputwc
81000d2f g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <do_help>:
 * 
 * @param argc 
 * @param arg 
 * @return int 
 */
static int do_help(int argc, char **arg) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 40 62 00 81       	mov    0x81006240,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
        printf("%s --> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 86 4e 00 81       	push   $0x81004e86
81000025:	e8 86 2b 00 00       	call   81002bb0 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
        start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end) {
81000031:	a1 44 62 00 81       	mov    0x81006244,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
    }
    
    
    return  0;   
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <cli_init>:

/**
 * @brief 初始化终端结构
 * 
 */
static void cli_init() {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
    cli.prompt = prompt;
81000048:	a1 40 52 00 81       	mov    0x81005240,%eax
8100004d:	a3 48 62 00 81       	mov    %eax,0x81006248
    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
81000052:	83 ec 04             	sub    $0x4,%esp
81000055:	68 00 04 00 00       	push   $0x400
8100005a:	6a 00                	push   $0x0
8100005c:	68 40 5e 00 81       	push   $0x81005e40
81000061:	e8 3a 1f 00 00       	call   81001fa0 <memset>
81000066:	83 c4 10             	add    $0x10,%esp
    cli.cmd_start = cmd_list;
81000069:	c7 05 40 62 00 81 b4 	movl   $0x81004eb4,0x81006240
81000070:	4e 00 81 
    cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000073:	b8 c0 4e 00 81       	mov    $0x81004ec0,%eax
81000078:	a3 44 62 00 81       	mov    %eax,0x81006244
}
8100007d:	90                   	nop
8100007e:	c9                   	leave  
8100007f:	c3                   	ret    

81000080 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 * 
 */
static void show_prompt(void) {
81000080:	55                   	push   %ebp
81000081:	89 e5                	mov    %esp,%ebp
81000083:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.prompt);
81000086:	a1 48 62 00 81       	mov    0x81006248,%eax
8100008b:	83 ec 08             	sub    $0x8,%esp
8100008e:	50                   	push   %eax
8100008f:	68 c0 4e 00 81       	push   $0x81004ec0
81000094:	e8 17 2b 00 00       	call   81002bb0 <iprintf>
81000099:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100009c:	e8 5a 13 00 00       	call   810013fb <__getreent>
810000a1:	8b 40 08             	mov    0x8(%eax),%eax
810000a4:	83 ec 0c             	sub    $0xc,%esp
810000a7:	50                   	push   %eax
810000a8:	e8 32 07 00 00       	call   810007df <fflush>
810000ad:	83 c4 10             	add    $0x10,%esp
}
810000b0:	90                   	nop
810000b1:	c9                   	leave  
810000b2:	c3                   	ret    

810000b3 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 * 
 * @param name 
 * @return const cli_cmd_t* 
 */
static const cli_cmd_t *find_builtin(const char *name) {
810000b3:	55                   	push   %ebp
810000b4:	89 e5                	mov    %esp,%ebp
810000b6:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810000b9:	a1 40 62 00 81       	mov    0x81006240,%eax
810000be:	89 45 f4             	mov    %eax,-0xc(%ebp)
810000c1:	eb 22                	jmp    810000e5 <find_builtin+0x32>
        if (strcmp(cmd->name, name) != 0) {
810000c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000c6:	8b 00                	mov    (%eax),%eax
810000c8:	83 ec 08             	sub    $0x8,%esp
810000cb:	ff 75 08             	push   0x8(%ebp)
810000ce:	50                   	push   %eax
810000cf:	e8 88 30 00 00       	call   8100315c <strcmp>
810000d4:	83 c4 10             	add    $0x10,%esp
810000d7:	85 c0                	test   %eax,%eax
810000d9:	75 05                	jne    810000e0 <find_builtin+0x2d>
            continue;
        }
        return cmd;
810000db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000de:	eb 14                	jmp    810000f4 <find_builtin+0x41>
            continue;
810000e0:	90                   	nop
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810000e1:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810000e5:	a1 44 62 00 81       	mov    0x81006244,%eax
810000ea:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810000ed:	72 d4                	jb     810000c3 <find_builtin+0x10>
    }

    return (const cli_cmd_t*)0;
810000ef:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000f4:	c9                   	leave  
810000f5:	c3                   	ret    

810000f6 <run_builtin>:
 * 
 * @param cmd 
 * @param argc 
 * @param argv 
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810000f6:	55                   	push   %ebp
810000f7:	89 e5                	mov    %esp,%ebp
810000f9:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810000fc:	8b 45 08             	mov    0x8(%ebp),%eax
810000ff:	8b 40 08             	mov    0x8(%eax),%eax
81000102:	83 ec 08             	sub    $0x8,%esp
81000105:	ff 75 10             	push   0x10(%ebp)
81000108:	ff 75 0c             	push   0xc(%ebp)
8100010b:	ff d0                	call   *%eax
8100010d:	83 c4 10             	add    $0x10,%esp
81000110:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0) {
81000113:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000117:	79 1c                	jns    81000135 <run_builtin+0x3f>
        fprintf(stderr, "error: %d\n", ret);
81000119:	e8 dd 12 00 00       	call   810013fb <__getreent>
8100011e:	8b 40 0c             	mov    0xc(%eax),%eax
81000121:	83 ec 04             	sub    $0x4,%esp
81000124:	ff 75 f4             	push   -0xc(%ebp)
81000127:	68 c3 4e 00 81       	push   $0x81004ec3
8100012c:	50                   	push   %eax
8100012d:	e8 8e 0c 00 00       	call   81000dc0 <fiprintf>
81000132:	83 c4 10             	add    $0x10,%esp
    }
}
81000135:	90                   	nop
81000136:	c9                   	leave  
81000137:	c3                   	ret    

81000138 <main>:

int main(int argc, char** argv) {
81000138:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100013c:	83 e4 f0             	and    $0xfffffff0,%esp
8100013f:	ff 71 fc             	push   -0x4(%ecx)
81000142:	55                   	push   %ebp
81000143:	89 e5                	mov    %esp,%ebp
81000145:	51                   	push   %ecx
81000146:	83 ec 44             	sub    $0x44,%esp
81000149:	89 c8                	mov    %ecx,%eax

    //1.打开shell对应的tty设备绑定为stdin
    open(argv[0], 0);
8100014b:	8b 40 04             	mov    0x4(%eax),%eax
8100014e:	8b 00                	mov    (%eax),%eax
81000150:	83 ec 08             	sub    $0x8,%esp
81000153:	6a 00                	push   $0x0
81000155:	50                   	push   %eax
81000156:	e8 ad 02 00 00       	call   81000408 <open>
8100015b:	83 c4 10             	add    $0x10,%esp
    //2.复用该0号描述符的文件，打开shell的stdout和stderr
    dup(0);
8100015e:	83 ec 0c             	sub    $0xc,%esp
81000161:	6a 00                	push   $0x0
81000163:	e8 d8 03 00 00       	call   81000540 <dup>
81000168:	83 c4 10             	add    $0x10,%esp
    dup(0);
8100016b:	83 ec 0c             	sub    $0xc,%esp
8100016e:	6a 00                	push   $0x0
81000170:	e8 cb 03 00 00       	call   81000540 <dup>
81000175:	83 c4 10             	add    $0x10,%esp

    //3.初始化终端结构
    cli_init();
81000178:	e8 c5 fe ff ff       	call   81000042 <cli_init>



    //4.循环读取命令行输入并执行指令
    for (;;) {
        show_prompt();
8100017d:	e8 fe fe ff ff       	call   81000080 <show_prompt>
        //4.1获取命令行输入并清空末尾的"\r\n"
        char * str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000182:	e8 74 12 00 00       	call   810013fb <__getreent>
81000187:	8b 40 04             	mov    0x4(%eax),%eax
8100018a:	83 ec 04             	sub    $0x4,%esp
8100018d:	50                   	push   %eax
8100018e:	68 00 04 00 00       	push   $0x400
81000193:	68 40 5e 00 81       	push   $0x81005e40
81000198:	e8 d9 07 00 00       	call   81000976 <fgets>
8100019d:	83 c4 10             	add    $0x10,%esp
810001a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (!str) {
810001a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810001a7:	0f 84 eb 00 00 00    	je     81000298 <main+0x160>
            continue;
        }
        char *cr = strchr(cli.curr_input, '\n');
810001ad:	83 ec 08             	sub    $0x8,%esp
810001b0:	6a 0a                	push   $0xa
810001b2:	68 40 5e 00 81       	push   $0x81005e40
810001b7:	e8 a4 2e 00 00       	call   81003060 <strchr>
810001bc:	83 c4 10             	add    $0x10,%esp
810001bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810001c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810001c6:	74 06                	je     810001ce <main+0x96>
            *cr = '\0'; 
810001c8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810001cb:	c6 00 00             	movb   $0x0,(%eax)
        }
        cr = strchr(cli.curr_input, '\r');
810001ce:	83 ec 08             	sub    $0x8,%esp
810001d1:	6a 0d                	push   $0xd
810001d3:	68 40 5e 00 81       	push   $0x81005e40
810001d8:	e8 83 2e 00 00       	call   81003060 <strchr>
810001dd:	83 c4 10             	add    $0x10,%esp
810001e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810001e3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810001e7:	74 06                	je     810001ef <main+0xb7>
            *cr = '\0';
810001e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810001ec:	c6 00 00             	movb   $0x0,(%eax)
        }

        //4.2解析命令行输入的程序和参数
        int argc = 0;
810001ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        const char *argv[CLI_MAX_ARG_COUNT];
        memset(argv, 0, sizeof(argv));
810001f6:	83 ec 04             	sub    $0x4,%esp
810001f9:	6a 28                	push   $0x28
810001fb:	6a 00                	push   $0x0
810001fd:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000200:	50                   	push   %eax
81000201:	e8 9a 1d 00 00       	call   81001fa0 <memset>
81000206:	83 c4 10             	add    $0x10,%esp
        const char *split = " ";
81000209:	c7 45 e4 ce 4e 00 81 	movl   $0x81004ece,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, split);    //将字符串中的第一个split字符换成'\0'并放回起始索引
81000210:	83 ec 08             	sub    $0x8,%esp
81000213:	ff 75 e4             	push   -0x1c(%ebp)
81000216:	68 40 5e 00 81       	push   $0x81005e40
8100021b:	e8 69 30 00 00       	call   81003289 <strtok>
81000220:	83 c4 10             	add    $0x10,%esp
81000223:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000226:	eb 31                	jmp    81000259 <main+0x121>
            puts(token);
81000228:	83 ec 0c             	sub    $0xc,%esp
8100022b:	ff 75 f0             	push   -0x10(%ebp)
8100022e:	e8 88 2a 00 00       	call   81002cbb <puts>
81000233:	83 c4 10             	add    $0x10,%esp
            argv[argc++] = token;
81000236:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000239:	8d 50 01             	lea    0x1(%eax),%edx
8100023c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100023f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000242:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
            token = strtok(NULL, split);    //填空默认从之前找到的位置的下一个位置开始
81000246:	83 ec 08             	sub    $0x8,%esp
81000249:	ff 75 e4             	push   -0x1c(%ebp)
8100024c:	6a 00                	push   $0x0
8100024e:	e8 36 30 00 00       	call   81003289 <strtok>
81000253:	83 c4 10             	add    $0x10,%esp
81000256:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000259:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100025d:	75 c9                	jne    81000228 <main+0xf0>
        }

        if (argc == 0) {
8100025f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000263:	74 39                	je     8100029e <main+0x166>
            continue;
        }

        //4.3 获取可执行的命令结构，并执行
        const cli_cmd_t *cmd = find_builtin(argv[0]);
81000265:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000268:	83 ec 0c             	sub    $0xc,%esp
8100026b:	50                   	push   %eax
8100026c:	e8 42 fe ff ff       	call   810000b3 <find_builtin>
81000271:	83 c4 10             	add    $0x10,%esp
81000274:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd) {
81000277:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100027b:	0f 84 fc fe ff ff    	je     8100017d <main+0x45>
            run_builtin(cmd, argc, argv);
81000281:	83 ec 04             	sub    $0x4,%esp
81000284:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000287:	50                   	push   %eax
81000288:	ff 75 f4             	push   -0xc(%ebp)
8100028b:	ff 75 e0             	push   -0x20(%ebp)
8100028e:	e8 63 fe ff ff       	call   810000f6 <run_builtin>
81000293:	83 c4 10             	add    $0x10,%esp
            continue;
81000296:	eb 07                	jmp    8100029f <main+0x167>
            continue;
81000298:	90                   	nop
81000299:	e9 df fe ff ff       	jmp    8100017d <main+0x45>
            continue;
8100029e:	90                   	nop
    for (;;) {
8100029f:	e9 d9 fe ff ff       	jmp    8100017d <main+0x45>

810002a4 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810002a4:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810002a7:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810002a9:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810002ab:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810002ad:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810002af:	e9 00 00 00 00       	jmp    810002b4 <cstart>

810002b4 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810002b4:	55                   	push   %ebp
810002b5:	89 e5                	mov    %esp,%ebp
810002b7:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810002ba:	c7 45 f4 40 5c 00 81 	movl   $0x81005c40,-0xc(%ebp)
    while (start < __bss_end__) {
810002c1:	eb 0c                	jmp    810002cf <cstart+0x1b>
        *(start++) = 0;
810002c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002c6:	8d 50 01             	lea    0x1(%eax),%edx
810002c9:	89 55 f4             	mov    %edx,-0xc(%ebp)
810002cc:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810002cf:	81 7d f4 b4 62 00 81 	cmpl   $0x810062b4,-0xc(%ebp)
810002d6:	72 eb                	jb     810002c3 <cstart+0xf>
    }
    
    main(argc, argv);
810002d8:	83 ec 08             	sub    $0x8,%esp
810002db:	ff 75 0c             	push   0xc(%ebp)
810002de:	ff 75 08             	push   0x8(%ebp)
810002e1:	e8 52 fe ff ff       	call   81000138 <main>
810002e6:	83 c4 10             	add    $0x10,%esp
}
810002e9:	90                   	nop
810002ea:	c9                   	leave  
810002eb:	c3                   	ret    

810002ec <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810002ec:	55                   	push   %ebp
810002ed:	89 e5                	mov    %esp,%ebp
810002ef:	57                   	push   %edi
810002f0:	56                   	push   %esi
810002f1:	53                   	push   %ebx
810002f2:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810002f5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810002fc:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000303:	8b 45 08             	mov    0x8(%ebp),%eax
81000306:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000309:	8b 55 08             	mov    0x8(%ebp),%edx
8100030c:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
8100030f:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000312:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000315:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000318:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8100031b:	8b 75 08             	mov    0x8(%ebp),%esi
8100031e:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000320:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000323:	50                   	push   %eax
81000324:	52                   	push   %edx
81000325:	51                   	push   %ecx
81000326:	53                   	push   %ebx
81000327:	56                   	push   %esi
81000328:	ff 1f                	lcall  *(%edi)
8100032a:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8100032d:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000330:	83 c4 10             	add    $0x10,%esp
81000333:	5b                   	pop    %ebx
81000334:	5e                   	pop    %esi
81000335:	5f                   	pop    %edi
81000336:	5d                   	pop    %ebp
81000337:	c3                   	ret    

81000338 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000338:	55                   	push   %ebp
81000339:	89 e5                	mov    %esp,%ebp
8100033b:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100033e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000342:	7e 1b                	jle    8100035f <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000344:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
8100034b:	8b 45 08             	mov    0x8(%ebp),%eax
8100034e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000351:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000354:	50                   	push   %eax
81000355:	e8 92 ff ff ff       	call   810002ec <sys_call>
8100035a:	83 c4 04             	add    $0x4,%esp
8100035d:	eb 01                	jmp    81000360 <msleep+0x28>
    if (ms <= 0) return;
8100035f:	90                   	nop

}
81000360:	c9                   	leave  
81000361:	c3                   	ret    

81000362 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000362:	55                   	push   %ebp
81000363:	89 e5                	mov    %esp,%ebp
81000365:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000368:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100036f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000372:	50                   	push   %eax
81000373:	e8 74 ff ff ff       	call   810002ec <sys_call>
81000378:	83 c4 04             	add    $0x4,%esp
}
8100037b:	c9                   	leave  
8100037c:	c3                   	ret    

8100037d <print_msg>:

void print_msg(const char *fmt, int arg) {
8100037d:	55                   	push   %ebp
8100037e:	89 e5                	mov    %esp,%ebp
81000380:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000383:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100038a:	8b 45 08             	mov    0x8(%ebp),%eax
8100038d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000390:	8b 45 0c             	mov    0xc(%ebp),%eax
81000393:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000396:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000399:	50                   	push   %eax
8100039a:	e8 4d ff ff ff       	call   810002ec <sys_call>
8100039f:	83 c4 04             	add    $0x4,%esp
}
810003a2:	90                   	nop
810003a3:	c9                   	leave  
810003a4:	c3                   	ret    

810003a5 <fork>:

int fork (void) {
810003a5:	55                   	push   %ebp
810003a6:	89 e5                	mov    %esp,%ebp
810003a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810003ab:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810003b2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003b5:	50                   	push   %eax
810003b6:	e8 31 ff ff ff       	call   810002ec <sys_call>
810003bb:	83 c4 04             	add    $0x4,%esp
}
810003be:	c9                   	leave  
810003bf:	c3                   	ret    

810003c0 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810003c0:	55                   	push   %ebp
810003c1:	89 e5                	mov    %esp,%ebp
810003c3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810003c6:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810003cd:	8b 45 08             	mov    0x8(%ebp),%eax
810003d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810003d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810003d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810003d9:	8b 45 10             	mov    0x10(%ebp),%eax
810003dc:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810003df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003e2:	50                   	push   %eax
810003e3:	e8 04 ff ff ff       	call   810002ec <sys_call>
810003e8:	83 c4 04             	add    $0x4,%esp
}
810003eb:	c9                   	leave  
810003ec:	c3                   	ret    

810003ed <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810003ed:	55                   	push   %ebp
810003ee:	89 e5                	mov    %esp,%ebp
810003f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810003f3:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810003fa:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003fd:	50                   	push   %eax
810003fe:	e8 e9 fe ff ff       	call   810002ec <sys_call>
81000403:	83 c4 04             	add    $0x4,%esp
}
81000406:	c9                   	leave  
81000407:	c3                   	ret    

81000408 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000408:	55                   	push   %ebp
81000409:	89 e5                	mov    %esp,%ebp
8100040b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100040e:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000415:	8b 45 08             	mov    0x8(%ebp),%eax
81000418:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8100041b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000421:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000424:	50                   	push   %eax
81000425:	e8 c2 fe ff ff       	call   810002ec <sys_call>
8100042a:	83 c4 04             	add    $0x4,%esp
}
8100042d:	c9                   	leave  
8100042e:	c3                   	ret    

8100042f <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
8100042f:	55                   	push   %ebp
81000430:	89 e5                	mov    %esp,%ebp
81000432:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000435:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8100043c:	8b 45 08             	mov    0x8(%ebp),%eax
8100043f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000442:	8b 45 0c             	mov    0xc(%ebp),%eax
81000445:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000448:	8b 45 10             	mov    0x10(%ebp),%eax
8100044b:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100044e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000451:	50                   	push   %eax
81000452:	e8 95 fe ff ff       	call   810002ec <sys_call>
81000457:	83 c4 04             	add    $0x4,%esp
}
8100045a:	c9                   	leave  
8100045b:	c3                   	ret    

8100045c <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
8100045c:	55                   	push   %ebp
8100045d:	89 e5                	mov    %esp,%ebp
8100045f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000462:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000469:	8b 45 08             	mov    0x8(%ebp),%eax
8100046c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100046f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000472:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000475:	8b 45 10             	mov    0x10(%ebp),%eax
81000478:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100047b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100047e:	50                   	push   %eax
8100047f:	e8 68 fe ff ff       	call   810002ec <sys_call>
81000484:	83 c4 04             	add    $0x4,%esp
}
81000487:	c9                   	leave  
81000488:	c3                   	ret    

81000489 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000489:	55                   	push   %ebp
8100048a:	89 e5                	mov    %esp,%ebp
8100048c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100048f:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000496:	8b 45 08             	mov    0x8(%ebp),%eax
81000499:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100049c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100049f:	50                   	push   %eax
810004a0:	e8 47 fe ff ff       	call   810002ec <sys_call>
810004a5:	83 c4 04             	add    $0x4,%esp
}
810004a8:	c9                   	leave  
810004a9:	c3                   	ret    

810004aa <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810004aa:	55                   	push   %ebp
810004ab:	89 e5                	mov    %esp,%ebp
810004ad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810004b0:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810004b7:	8b 45 08             	mov    0x8(%ebp),%eax
810004ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810004bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810004c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810004c3:	8b 45 10             	mov    0x10(%ebp),%eax
810004c6:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810004c9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810004cc:	50                   	push   %eax
810004cd:	e8 1a fe ff ff       	call   810002ec <sys_call>
810004d2:	83 c4 04             	add    $0x4,%esp
}
810004d5:	c9                   	leave  
810004d6:	c3                   	ret    

810004d7 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810004d7:	55                   	push   %ebp
810004d8:	89 e5                	mov    %esp,%ebp
810004da:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810004dd:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810004e4:	8b 45 08             	mov    0x8(%ebp),%eax
810004e7:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810004ea:	8d 45 ec             	lea    -0x14(%ebp),%eax
810004ed:	50                   	push   %eax
810004ee:	e8 f9 fd ff ff       	call   810002ec <sys_call>
810004f3:	83 c4 04             	add    $0x4,%esp
}
810004f6:	c9                   	leave  
810004f7:	c3                   	ret    

810004f8 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810004f8:	55                   	push   %ebp
810004f9:	89 e5                	mov    %esp,%ebp
810004fb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810004fe:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000505:	8b 45 08             	mov    0x8(%ebp),%eax
81000508:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8100050b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100050e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000511:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000514:	50                   	push   %eax
81000515:	e8 d2 fd ff ff       	call   810002ec <sys_call>
8100051a:	83 c4 04             	add    $0x4,%esp
}
8100051d:	c9                   	leave  
8100051e:	c3                   	ret    

8100051f <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
8100051f:	55                   	push   %ebp
81000520:	89 e5                	mov    %esp,%ebp
81000522:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000525:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
8100052c:	8b 45 08             	mov    0x8(%ebp),%eax
8100052f:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000532:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000535:	50                   	push   %eax
81000536:	e8 b1 fd ff ff       	call   810002ec <sys_call>
8100053b:	83 c4 04             	add    $0x4,%esp
}
8100053e:	c9                   	leave  
8100053f:	c3                   	ret    

81000540 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000540:	55                   	push   %ebp
81000541:	89 e5                	mov    %esp,%ebp
81000543:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000546:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
8100054d:	8b 45 08             	mov    0x8(%ebp),%eax
81000550:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000553:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000556:	50                   	push   %eax
81000557:	e8 90 fd ff ff       	call   810002ec <sys_call>
8100055c:	83 c4 04             	add    $0x4,%esp
8100055f:	c9                   	leave  
81000560:	c3                   	ret    

81000561 <__sflush_r>:
81000561:	55                   	push   %ebp
81000562:	89 e5                	mov    %esp,%ebp
81000564:	57                   	push   %edi
81000565:	56                   	push   %esi
81000566:	53                   	push   %ebx
81000567:	83 ec 1c             	sub    $0x1c,%esp
8100056a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100056d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000571:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000575:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000579:	83 e0 08             	and    $0x8,%eax
8100057c:	85 c0                	test   %eax,%eax
8100057e:	0f 85 93 01 00 00    	jne    81000717 <__sflush_r+0x1b6>
81000584:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000588:	80 cc 08             	or     $0x8,%ah
8100058b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100058f:	8b 43 04             	mov    0x4(%ebx),%eax
81000592:	85 c0                	test   %eax,%eax
81000594:	7f 0b                	jg     810005a1 <__sflush_r+0x40>
81000596:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000599:	85 c0                	test   %eax,%eax
8100059b:	0f 8e 6f 01 00 00    	jle    81000710 <__sflush_r+0x1af>
810005a1:	8b 43 28             	mov    0x28(%ebx),%eax
810005a4:	85 c0                	test   %eax,%eax
810005a6:	0f 84 64 01 00 00    	je     81000710 <__sflush_r+0x1af>
810005ac:	8b 45 08             	mov    0x8(%ebp),%eax
810005af:	8b 00                	mov    (%eax),%eax
810005b1:	89 45 d8             	mov    %eax,-0x28(%ebp)
810005b4:	8b 45 08             	mov    0x8(%ebp),%eax
810005b7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810005c1:	98                   	cwtl   
810005c2:	25 00 10 00 00       	and    $0x1000,%eax
810005c7:	85 c0                	test   %eax,%eax
810005c9:	74 08                	je     810005d3 <__sflush_r+0x72>
810005cb:	8b 43 50             	mov    0x50(%ebx),%eax
810005ce:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810005d1:	eb 64                	jmp    81000637 <__sflush_r+0xd6>
810005d3:	8b 43 28             	mov    0x28(%ebx),%eax
810005d6:	8b 53 1c             	mov    0x1c(%ebx),%edx
810005d9:	6a 01                	push   $0x1
810005db:	6a 00                	push   $0x0
810005dd:	52                   	push   %edx
810005de:	ff 75 08             	push   0x8(%ebp)
810005e1:	ff d0                	call   *%eax
810005e3:	83 c4 10             	add    $0x10,%esp
810005e6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810005e9:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810005ed:	75 48                	jne    81000637 <__sflush_r+0xd6>
810005ef:	8b 45 08             	mov    0x8(%ebp),%eax
810005f2:	8b 00                	mov    (%eax),%eax
810005f4:	85 c0                	test   %eax,%eax
810005f6:	74 3f                	je     81000637 <__sflush_r+0xd6>
810005f8:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810005ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000602:	8b 00                	mov    (%eax),%eax
81000604:	83 f8 1d             	cmp    $0x1d,%eax
81000607:	74 0a                	je     81000613 <__sflush_r+0xb2>
81000609:	8b 45 08             	mov    0x8(%ebp),%eax
8100060c:	8b 00                	mov    (%eax),%eax
8100060e:	83 f8 16             	cmp    $0x16,%eax
81000611:	75 11                	jne    81000624 <__sflush_r+0xc3>
81000613:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100061a:	8b 45 08             	mov    0x8(%ebp),%eax
8100061d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000620:	89 10                	mov    %edx,(%eax)
81000622:	eb 0b                	jmp    8100062f <__sflush_r+0xce>
81000624:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000628:	83 c8 40             	or     $0x40,%eax
8100062b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100062f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000632:	e9 48 01 00 00       	jmp    8100077f <__sflush_r+0x21e>
81000637:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100063b:	98                   	cwtl   
8100063c:	83 e0 04             	and    $0x4,%eax
8100063f:	85 c0                	test   %eax,%eax
81000641:	74 13                	je     81000656 <__sflush_r+0xf5>
81000643:	8b 43 04             	mov    0x4(%ebx),%eax
81000646:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000649:	8b 43 30             	mov    0x30(%ebx),%eax
8100064c:	85 c0                	test   %eax,%eax
8100064e:	74 06                	je     81000656 <__sflush_r+0xf5>
81000650:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000653:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000656:	8b 43 28             	mov    0x28(%ebx),%eax
81000659:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100065c:	6a 00                	push   $0x0
8100065e:	ff 75 e4             	push   -0x1c(%ebp)
81000661:	52                   	push   %edx
81000662:	ff 75 08             	push   0x8(%ebp)
81000665:	ff d0                	call   *%eax
81000667:	83 c4 10             	add    $0x10,%esp
8100066a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100066d:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000671:	75 1d                	jne    81000690 <__sflush_r+0x12f>
81000673:	8b 45 08             	mov    0x8(%ebp),%eax
81000676:	8b 00                	mov    (%eax),%eax
81000678:	85 c0                	test   %eax,%eax
8100067a:	74 14                	je     81000690 <__sflush_r+0x12f>
8100067c:	8b 45 08             	mov    0x8(%ebp),%eax
8100067f:	8b 00                	mov    (%eax),%eax
81000681:	83 f8 1d             	cmp    $0x1d,%eax
81000684:	74 0a                	je     81000690 <__sflush_r+0x12f>
81000686:	8b 45 08             	mov    0x8(%ebp),%eax
81000689:	8b 00                	mov    (%eax),%eax
8100068b:	83 f8 16             	cmp    $0x16,%eax
8100068e:	75 6e                	jne    810006fe <__sflush_r+0x19d>
81000690:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000694:	80 e4 f7             	and    $0xf7,%ah
81000697:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100069b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810006a2:	8b 43 10             	mov    0x10(%ebx),%eax
810006a5:	89 03                	mov    %eax,(%ebx)
810006a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810006ab:	98                   	cwtl   
810006ac:	25 00 10 00 00       	and    $0x1000,%eax
810006b1:	85 c0                	test   %eax,%eax
810006b3:	74 15                	je     810006ca <__sflush_r+0x169>
810006b5:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810006b9:	75 09                	jne    810006c4 <__sflush_r+0x163>
810006bb:	8b 45 08             	mov    0x8(%ebp),%eax
810006be:	8b 00                	mov    (%eax),%eax
810006c0:	85 c0                	test   %eax,%eax
810006c2:	75 06                	jne    810006ca <__sflush_r+0x169>
810006c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810006c7:	89 43 50             	mov    %eax,0x50(%ebx)
810006ca:	8b 45 08             	mov    0x8(%ebp),%eax
810006cd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810006d0:	89 10                	mov    %edx,(%eax)
810006d2:	8b 43 30             	mov    0x30(%ebx),%eax
810006d5:	85 c0                	test   %eax,%eax
810006d7:	74 37                	je     81000710 <__sflush_r+0x1af>
810006d9:	8b 53 30             	mov    0x30(%ebx),%edx
810006dc:	8d 43 40             	lea    0x40(%ebx),%eax
810006df:	39 c2                	cmp    %eax,%edx
810006e1:	74 12                	je     810006f5 <__sflush_r+0x194>
810006e3:	8b 43 30             	mov    0x30(%ebx),%eax
810006e6:	83 ec 08             	sub    $0x8,%esp
810006e9:	50                   	push   %eax
810006ea:	ff 75 08             	push   0x8(%ebp)
810006ed:	e8 fa 06 00 00       	call   81000dec <_free_r>
810006f2:	83 c4 10             	add    $0x10,%esp
810006f5:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810006fc:	eb 12                	jmp    81000710 <__sflush_r+0x1af>
810006fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000702:	83 c8 40             	or     $0x40,%eax
81000705:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000709:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100070e:	eb 6f                	jmp    8100077f <__sflush_r+0x21e>
81000710:	b8 00 00 00 00       	mov    $0x0,%eax
81000715:	eb 68                	jmp    8100077f <__sflush_r+0x21e>
81000717:	8b 73 10             	mov    0x10(%ebx),%esi
8100071a:	85 f6                	test   %esi,%esi
8100071c:	75 07                	jne    81000725 <__sflush_r+0x1c4>
8100071e:	b8 00 00 00 00       	mov    $0x0,%eax
81000723:	eb 5a                	jmp    8100077f <__sflush_r+0x21e>
81000725:	8b 03                	mov    (%ebx),%eax
81000727:	29 f0                	sub    %esi,%eax
81000729:	89 c7                	mov    %eax,%edi
8100072b:	89 33                	mov    %esi,(%ebx)
8100072d:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000731:	83 e0 03             	and    $0x3,%eax
81000734:	85 c0                	test   %eax,%eax
81000736:	75 05                	jne    8100073d <__sflush_r+0x1dc>
81000738:	8b 43 14             	mov    0x14(%ebx),%eax
8100073b:	eb 05                	jmp    81000742 <__sflush_r+0x1e1>
8100073d:	b8 00 00 00 00       	mov    $0x0,%eax
81000742:	89 43 08             	mov    %eax,0x8(%ebx)
81000745:	eb 2f                	jmp    81000776 <__sflush_r+0x215>
81000747:	8b 43 24             	mov    0x24(%ebx),%eax
8100074a:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100074d:	57                   	push   %edi
8100074e:	56                   	push   %esi
8100074f:	52                   	push   %edx
81000750:	ff 75 08             	push   0x8(%ebp)
81000753:	ff d0                	call   *%eax
81000755:	83 c4 10             	add    $0x10,%esp
81000758:	85 c0                	test   %eax,%eax
8100075a:	7f 12                	jg     8100076e <__sflush_r+0x20d>
8100075c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000760:	83 c8 40             	or     $0x40,%eax
81000763:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000767:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100076c:	eb 11                	jmp    8100077f <__sflush_r+0x21e>
8100076e:	89 c1                	mov    %eax,%ecx
81000770:	89 c8                	mov    %ecx,%eax
81000772:	01 c6                	add    %eax,%esi
81000774:	29 cf                	sub    %ecx,%edi
81000776:	85 ff                	test   %edi,%edi
81000778:	7f cd                	jg     81000747 <__sflush_r+0x1e6>
8100077a:	b8 00 00 00 00       	mov    $0x0,%eax
8100077f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000782:	5b                   	pop    %ebx
81000783:	5e                   	pop    %esi
81000784:	5f                   	pop    %edi
81000785:	5d                   	pop    %ebp
81000786:	c3                   	ret    

81000787 <_fflush_r>:
81000787:	55                   	push   %ebp
81000788:	89 e5                	mov    %esp,%ebp
8100078a:	53                   	push   %ebx
8100078b:	83 ec 14             	sub    $0x14,%esp
8100078e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000791:	8b 45 08             	mov    0x8(%ebp),%eax
81000794:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000797:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100079b:	74 18                	je     810007b5 <_fflush_r+0x2e>
8100079d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a0:	8b 40 38             	mov    0x38(%eax),%eax
810007a3:	85 c0                	test   %eax,%eax
810007a5:	75 0e                	jne    810007b5 <_fflush_r+0x2e>
810007a7:	83 ec 0c             	sub    $0xc,%esp
810007aa:	ff 75 f4             	push   -0xc(%ebp)
810007ad:	e8 d8 04 00 00       	call   81000c8a <__sinit>
810007b2:	83 c4 10             	add    $0x10,%esp
810007b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810007b9:	66 85 c0             	test   %ax,%ax
810007bc:	75 07                	jne    810007c5 <_fflush_r+0x3e>
810007be:	b8 00 00 00 00       	mov    $0x0,%eax
810007c3:	eb 15                	jmp    810007da <_fflush_r+0x53>
810007c5:	83 ec 08             	sub    $0x8,%esp
810007c8:	53                   	push   %ebx
810007c9:	ff 75 08             	push   0x8(%ebp)
810007cc:	e8 90 fd ff ff       	call   81000561 <__sflush_r>
810007d1:	83 c4 10             	add    $0x10,%esp
810007d4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810007d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810007da:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810007dd:	c9                   	leave  
810007de:	c3                   	ret    

810007df <fflush>:
810007df:	55                   	push   %ebp
810007e0:	89 e5                	mov    %esp,%ebp
810007e2:	83 ec 08             	sub    $0x8,%esp
810007e5:	8b 55 08             	mov    0x8(%ebp),%edx
810007e8:	85 d2                	test   %edx,%edx
810007ea:	75 18                	jne    81000804 <fflush+0x25>
810007ec:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
810007f1:	83 ec 08             	sub    $0x8,%esp
810007f4:	68 87 07 00 81       	push   $0x81000787
810007f9:	50                   	push   %eax
810007fa:	e8 91 0b 00 00       	call   81001390 <_fwalk_reent>
810007ff:	83 c4 10             	add    $0x10,%esp
81000802:	eb 12                	jmp    81000816 <fflush+0x37>
81000804:	a1 84 56 00 81       	mov    0x81005684,%eax
81000809:	83 ec 08             	sub    $0x8,%esp
8100080c:	52                   	push   %edx
8100080d:	50                   	push   %eax
8100080e:	e8 74 ff ff ff       	call   81000787 <_fflush_r>
81000813:	83 c4 10             	add    $0x10,%esp
81000816:	c9                   	leave  
81000817:	c3                   	ret    

81000818 <_fgets_r>:
81000818:	55                   	push   %ebp
81000819:	89 e5                	mov    %esp,%ebp
8100081b:	83 ec 28             	sub    $0x28,%esp
8100081e:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000822:	7f 0a                	jg     8100082e <_fgets_r+0x16>
81000824:	b8 00 00 00 00       	mov    $0x0,%eax
81000829:	e9 46 01 00 00       	jmp    81000974 <_fgets_r+0x15c>
8100082e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000831:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000834:	8b 45 08             	mov    0x8(%ebp),%eax
81000837:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100083a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100083e:	74 18                	je     81000858 <_fgets_r+0x40>
81000840:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000843:	8b 40 38             	mov    0x38(%eax),%eax
81000846:	85 c0                	test   %eax,%eax
81000848:	75 0e                	jne    81000858 <_fgets_r+0x40>
8100084a:	83 ec 0c             	sub    $0xc,%esp
8100084d:	ff 75 ec             	push   -0x14(%ebp)
81000850:	e8 35 04 00 00       	call   81000c8a <__sinit>
81000855:	83 c4 10             	add    $0x10,%esp
81000858:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
8100085c:	8b 45 14             	mov    0x14(%ebp),%eax
8100085f:	8b 40 04             	mov    0x4(%eax),%eax
81000862:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000865:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000869:	75 34                	jne    8100089f <_fgets_r+0x87>
8100086b:	83 ec 08             	sub    $0x8,%esp
8100086e:	ff 75 14             	push   0x14(%ebp)
81000871:	ff 75 08             	push   0x8(%ebp)
81000874:	e8 8b 24 00 00       	call   81002d04 <__srefill_r>
81000879:	83 c4 10             	add    $0x10,%esp
8100087c:	85 c0                	test   %eax,%eax
8100087e:	74 16                	je     81000896 <_fgets_r+0x7e>
81000880:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000883:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000886:	0f 85 de 00 00 00    	jne    8100096a <_fgets_r+0x152>
8100088c:	b8 00 00 00 00       	mov    $0x0,%eax
81000891:	e9 de 00 00 00       	jmp    81000974 <_fgets_r+0x15c>
81000896:	8b 45 14             	mov    0x14(%ebp),%eax
81000899:	8b 40 04             	mov    0x4(%eax),%eax
8100089c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100089f:	8b 45 14             	mov    0x14(%ebp),%eax
810008a2:	8b 00                	mov    (%eax),%eax
810008a4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810008a7:	8b 45 10             	mov    0x10(%ebp),%eax
810008aa:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810008ad:	76 06                	jbe    810008b5 <_fgets_r+0x9d>
810008af:	8b 45 10             	mov    0x10(%ebp),%eax
810008b2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810008b5:	83 ec 04             	sub    $0x4,%esp
810008b8:	ff 75 f4             	push   -0xc(%ebp)
810008bb:	6a 0a                	push   $0xa
810008bd:	ff 75 e8             	push   -0x18(%ebp)
810008c0:	e8 fb 15 00 00       	call   81001ec0 <memchr>
810008c5:	83 c4 10             	add    $0x10,%esp
810008c8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810008cb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810008cf:	74 4a                	je     8100091b <_fgets_r+0x103>
810008d1:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810008d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810008d8:	2b 45 e8             	sub    -0x18(%ebp),%eax
810008db:	89 45 f4             	mov    %eax,-0xc(%ebp)
810008de:	8b 45 14             	mov    0x14(%ebp),%eax
810008e1:	8b 40 04             	mov    0x4(%eax),%eax
810008e4:	2b 45 f4             	sub    -0xc(%ebp),%eax
810008e7:	89 c2                	mov    %eax,%edx
810008e9:	8b 45 14             	mov    0x14(%ebp),%eax
810008ec:	89 50 04             	mov    %edx,0x4(%eax)
810008ef:	8b 45 14             	mov    0x14(%ebp),%eax
810008f2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810008f5:	89 10                	mov    %edx,(%eax)
810008f7:	83 ec 04             	sub    $0x4,%esp
810008fa:	ff 75 f4             	push   -0xc(%ebp)
810008fd:	ff 75 e8             	push   -0x18(%ebp)
81000900:	ff 75 f0             	push   -0x10(%ebp)
81000903:	e8 50 16 00 00       	call   81001f58 <memcpy>
81000908:	83 c4 10             	add    $0x10,%esp
8100090b:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100090e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000911:	01 d0                	add    %edx,%eax
81000913:	c6 00 00             	movb   $0x0,(%eax)
81000916:	8b 45 0c             	mov    0xc(%ebp),%eax
81000919:	eb 59                	jmp    81000974 <_fgets_r+0x15c>
8100091b:	8b 45 14             	mov    0x14(%ebp),%eax
8100091e:	8b 40 04             	mov    0x4(%eax),%eax
81000921:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000924:	89 c2                	mov    %eax,%edx
81000926:	8b 45 14             	mov    0x14(%ebp),%eax
81000929:	89 50 04             	mov    %edx,0x4(%eax)
8100092c:	8b 45 14             	mov    0x14(%ebp),%eax
8100092f:	8b 10                	mov    (%eax),%edx
81000931:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000934:	01 c2                	add    %eax,%edx
81000936:	8b 45 14             	mov    0x14(%ebp),%eax
81000939:	89 10                	mov    %edx,(%eax)
8100093b:	83 ec 04             	sub    $0x4,%esp
8100093e:	ff 75 f4             	push   -0xc(%ebp)
81000941:	ff 75 e8             	push   -0x18(%ebp)
81000944:	ff 75 f0             	push   -0x10(%ebp)
81000947:	e8 0c 16 00 00       	call   81001f58 <memcpy>
8100094c:	83 c4 10             	add    $0x10,%esp
8100094f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000952:	01 45 f0             	add    %eax,-0x10(%ebp)
81000955:	8b 45 10             	mov    0x10(%ebp),%eax
81000958:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100095b:	89 45 10             	mov    %eax,0x10(%ebp)
8100095e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000962:	0f 85 f4 fe ff ff    	jne    8100085c <_fgets_r+0x44>
81000968:	eb 01                	jmp    8100096b <_fgets_r+0x153>
8100096a:	90                   	nop
8100096b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100096e:	c6 00 00             	movb   $0x0,(%eax)
81000971:	8b 45 0c             	mov    0xc(%ebp),%eax
81000974:	c9                   	leave  
81000975:	c3                   	ret    

81000976 <fgets>:
81000976:	55                   	push   %ebp
81000977:	89 e5                	mov    %esp,%ebp
81000979:	83 ec 08             	sub    $0x8,%esp
8100097c:	a1 84 56 00 81       	mov    0x81005684,%eax
81000981:	ff 75 10             	push   0x10(%ebp)
81000984:	ff 75 0c             	push   0xc(%ebp)
81000987:	ff 75 08             	push   0x8(%ebp)
8100098a:	50                   	push   %eax
8100098b:	e8 88 fe ff ff       	call   81000818 <_fgets_r>
81000990:	83 c4 10             	add    $0x10,%esp
81000993:	c9                   	leave  
81000994:	c3                   	ret    

81000995 <std>:
81000995:	55                   	push   %ebp
81000996:	89 e5                	mov    %esp,%ebp
81000998:	83 ec 08             	sub    $0x8,%esp
8100099b:	8b 45 08             	mov    0x8(%ebp),%eax
8100099e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810009a4:	8b 45 08             	mov    0x8(%ebp),%eax
810009a7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810009ae:	8b 45 08             	mov    0x8(%ebp),%eax
810009b1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810009b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810009bb:	89 c2                	mov    %eax,%edx
810009bd:	8b 45 08             	mov    0x8(%ebp),%eax
810009c0:	66 89 50 0c          	mov    %dx,0xc(%eax)
810009c4:	8b 45 08             	mov    0x8(%ebp),%eax
810009c7:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810009ce:	8b 45 10             	mov    0x10(%ebp),%eax
810009d1:	89 c2                	mov    %eax,%edx
810009d3:	8b 45 08             	mov    0x8(%ebp),%eax
810009d6:	66 89 50 0e          	mov    %dx,0xe(%eax)
810009da:	8b 45 08             	mov    0x8(%ebp),%eax
810009dd:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810009e4:	8b 45 08             	mov    0x8(%ebp),%eax
810009e7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810009ee:	8b 45 08             	mov    0x8(%ebp),%eax
810009f1:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810009f8:	8b 45 08             	mov    0x8(%ebp),%eax
810009fb:	83 c0 5c             	add    $0x5c,%eax
810009fe:	83 ec 04             	sub    $0x4,%esp
81000a01:	6a 08                	push   $0x8
81000a03:	6a 00                	push   $0x0
81000a05:	50                   	push   %eax
81000a06:	e8 95 15 00 00       	call   81001fa0 <memset>
81000a0b:	83 c4 10             	add    $0x10,%esp
81000a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81000a11:	8b 55 08             	mov    0x8(%ebp),%edx
81000a14:	89 50 1c             	mov    %edx,0x1c(%eax)
81000a17:	8b 45 08             	mov    0x8(%ebp),%eax
81000a1a:	c7 40 20 45 2f 00 81 	movl   $0x81002f45,0x20(%eax)
81000a21:	8b 45 08             	mov    0x8(%ebp),%eax
81000a24:	c7 40 24 93 2f 00 81 	movl   $0x81002f93,0x24(%eax)
81000a2b:	8b 45 08             	mov    0x8(%ebp),%eax
81000a2e:	c7 40 28 ee 2f 00 81 	movl   $0x81002fee,0x28(%eax)
81000a35:	8b 45 08             	mov    0x8(%ebp),%eax
81000a38:	c7 40 2c 38 30 00 81 	movl   $0x81003038,0x2c(%eax)
81000a3f:	90                   	nop
81000a40:	c9                   	leave  
81000a41:	c3                   	ret    

81000a42 <stdin_init>:
81000a42:	55                   	push   %ebp
81000a43:	89 e5                	mov    %esp,%ebp
81000a45:	83 ec 08             	sub    $0x8,%esp
81000a48:	83 ec 04             	sub    $0x4,%esp
81000a4b:	6a 00                	push   $0x0
81000a4d:	6a 04                	push   $0x4
81000a4f:	ff 75 08             	push   0x8(%ebp)
81000a52:	e8 3e ff ff ff       	call   81000995 <std>
81000a57:	83 c4 10             	add    $0x10,%esp
81000a5a:	90                   	nop
81000a5b:	c9                   	leave  
81000a5c:	c3                   	ret    

81000a5d <stdout_init>:
81000a5d:	55                   	push   %ebp
81000a5e:	89 e5                	mov    %esp,%ebp
81000a60:	83 ec 08             	sub    $0x8,%esp
81000a63:	83 ec 04             	sub    $0x4,%esp
81000a66:	6a 01                	push   $0x1
81000a68:	6a 09                	push   $0x9
81000a6a:	ff 75 08             	push   0x8(%ebp)
81000a6d:	e8 23 ff ff ff       	call   81000995 <std>
81000a72:	83 c4 10             	add    $0x10,%esp
81000a75:	90                   	nop
81000a76:	c9                   	leave  
81000a77:	c3                   	ret    

81000a78 <stderr_init>:
81000a78:	55                   	push   %ebp
81000a79:	89 e5                	mov    %esp,%ebp
81000a7b:	83 ec 08             	sub    $0x8,%esp
81000a7e:	83 ec 04             	sub    $0x4,%esp
81000a81:	6a 02                	push   $0x2
81000a83:	6a 12                	push   $0x12
81000a85:	ff 75 08             	push   0x8(%ebp)
81000a88:	e8 08 ff ff ff       	call   81000995 <std>
81000a8d:	83 c4 10             	add    $0x10,%esp
81000a90:	90                   	nop
81000a91:	c9                   	leave  
81000a92:	c3                   	ret    

81000a93 <__sfmoreglue>:
81000a93:	55                   	push   %ebp
81000a94:	89 e5                	mov    %esp,%ebp
81000a96:	53                   	push   %ebx
81000a97:	83 ec 14             	sub    $0x14,%esp
81000a9a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a9d:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000aa0:	6b c0 68             	imul   $0x68,%eax,%eax
81000aa3:	83 c0 74             	add    $0x74,%eax
81000aa6:	83 ec 08             	sub    $0x8,%esp
81000aa9:	50                   	push   %eax
81000aaa:	ff 75 08             	push   0x8(%ebp)
81000aad:	e8 e6 0b 00 00       	call   81001698 <_malloc_r>
81000ab2:	83 c4 10             	add    $0x10,%esp
81000ab5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ab8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000abc:	75 07                	jne    81000ac5 <__sfmoreglue+0x32>
81000abe:	b8 00 00 00 00       	mov    $0x0,%eax
81000ac3:	eb 38                	jmp    81000afd <__sfmoreglue+0x6a>
81000ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ac8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ad1:	89 58 04             	mov    %ebx,0x4(%eax)
81000ad4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ad7:	8d 50 0c             	lea    0xc(%eax),%edx
81000ada:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000add:	89 50 08             	mov    %edx,0x8(%eax)
81000ae0:	89 d8                	mov    %ebx,%eax
81000ae2:	6b c0 68             	imul   $0x68,%eax,%eax
81000ae5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000ae8:	83 c2 0c             	add    $0xc,%edx
81000aeb:	83 ec 04             	sub    $0x4,%esp
81000aee:	50                   	push   %eax
81000aef:	6a 00                	push   $0x0
81000af1:	52                   	push   %edx
81000af2:	e8 a9 14 00 00       	call   81001fa0 <memset>
81000af7:	83 c4 10             	add    $0x10,%esp
81000afa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000afd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000b00:	c9                   	leave  
81000b01:	c3                   	ret    

81000b02 <__sfp>:
81000b02:	55                   	push   %ebp
81000b03:	89 e5                	mov    %esp,%ebp
81000b05:	83 ec 18             	sub    $0x18,%esp
81000b08:	e8 16 02 00 00       	call   81000d23 <__sfp_lock_acquire>
81000b0d:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
81000b12:	8b 40 38             	mov    0x38(%eax),%eax
81000b15:	85 c0                	test   %eax,%eax
81000b17:	75 11                	jne    81000b2a <__sfp+0x28>
81000b19:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
81000b1e:	83 ec 0c             	sub    $0xc,%esp
81000b21:	50                   	push   %eax
81000b22:	e8 63 01 00 00       	call   81000c8a <__sinit>
81000b27:	83 c4 10             	add    $0x10,%esp
81000b2a:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
81000b2f:	05 e0 02 00 00       	add    $0x2e0,%eax
81000b34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000b37:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b3a:	8b 40 08             	mov    0x8(%eax),%eax
81000b3d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b40:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b43:	8b 40 04             	mov    0x4(%eax),%eax
81000b46:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000b49:	eb 10                	jmp    81000b5b <__sfp+0x59>
81000b4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b4e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000b52:	66 85 c0             	test   %ax,%ax
81000b55:	74 58                	je     81000baf <__sfp+0xad>
81000b57:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000b5b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000b5f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000b63:	79 e6                	jns    81000b4b <__sfp+0x49>
81000b65:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b68:	8b 00                	mov    (%eax),%eax
81000b6a:	85 c0                	test   %eax,%eax
81000b6c:	75 1e                	jne    81000b8c <__sfp+0x8a>
81000b6e:	83 ec 08             	sub    $0x8,%esp
81000b71:	6a 04                	push   $0x4
81000b73:	ff 75 08             	push   0x8(%ebp)
81000b76:	e8 18 ff ff ff       	call   81000a93 <__sfmoreglue>
81000b7b:	83 c4 10             	add    $0x10,%esp
81000b7e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000b81:	89 02                	mov    %eax,(%edx)
81000b83:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b86:	8b 00                	mov    (%eax),%eax
81000b88:	85 c0                	test   %eax,%eax
81000b8a:	74 0a                	je     81000b96 <__sfp+0x94>
81000b8c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000b8f:	8b 00                	mov    (%eax),%eax
81000b91:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000b94:	eb a1                	jmp    81000b37 <__sfp+0x35>
81000b96:	90                   	nop
81000b97:	e8 8d 01 00 00       	call   81000d29 <__sfp_lock_release>
81000b9c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ba5:	b8 00 00 00 00       	mov    $0x0,%eax
81000baa:	e9 9e 00 00 00       	jmp    81000c4d <__sfp+0x14b>
81000baf:	90                   	nop
81000bb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bb3:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000bb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bbc:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000bc2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bc5:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000bcc:	e8 58 01 00 00       	call   81000d29 <__sfp_lock_release>
81000bd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bd4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000bda:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bdd:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000be4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000be7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000bee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bf1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000bf8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bfb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000c02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c05:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000c0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c0f:	83 c0 5c             	add    $0x5c,%eax
81000c12:	83 ec 04             	sub    $0x4,%esp
81000c15:	6a 08                	push   $0x8
81000c17:	6a 00                	push   $0x0
81000c19:	50                   	push   %eax
81000c1a:	e8 81 13 00 00       	call   81001fa0 <memset>
81000c1f:	83 c4 10             	add    $0x10,%esp
81000c22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c25:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000c2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c2f:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000c36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c39:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000c40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c43:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81000c4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000c4d:	c9                   	leave  
81000c4e:	c3                   	ret    

81000c4f <_cleanup_r>:
81000c4f:	55                   	push   %ebp
81000c50:	89 e5                	mov    %esp,%ebp
81000c52:	83 ec 18             	sub    $0x18,%esp
81000c55:	c7 45 f4 a0 36 00 81 	movl   $0x810036a0,-0xc(%ebp)
81000c5c:	83 ec 08             	sub    $0x8,%esp
81000c5f:	ff 75 f4             	push   -0xc(%ebp)
81000c62:	ff 75 08             	push   0x8(%ebp)
81000c65:	e8 26 07 00 00       	call   81001390 <_fwalk_reent>
81000c6a:	83 c4 10             	add    $0x10,%esp
81000c6d:	90                   	nop
81000c6e:	c9                   	leave  
81000c6f:	c3                   	ret    

81000c70 <_cleanup>:
81000c70:	55                   	push   %ebp
81000c71:	89 e5                	mov    %esp,%ebp
81000c73:	83 ec 08             	sub    $0x8,%esp
81000c76:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
81000c7b:	83 ec 0c             	sub    $0xc,%esp
81000c7e:	50                   	push   %eax
81000c7f:	e8 cb ff ff ff       	call   81000c4f <_cleanup_r>
81000c84:	83 c4 10             	add    $0x10,%esp
81000c87:	90                   	nop
81000c88:	c9                   	leave  
81000c89:	c3                   	ret    

81000c8a <__sinit>:
81000c8a:	55                   	push   %ebp
81000c8b:	89 e5                	mov    %esp,%ebp
81000c8d:	83 ec 08             	sub    $0x8,%esp
81000c90:	e8 9a 00 00 00       	call   81000d2f <__sinit_lock_acquire>
81000c95:	8b 45 08             	mov    0x8(%ebp),%eax
81000c98:	8b 40 38             	mov    0x38(%eax),%eax
81000c9b:	85 c0                	test   %eax,%eax
81000c9d:	74 07                	je     81000ca6 <__sinit+0x1c>
81000c9f:	e8 91 00 00 00       	call   81000d35 <__sinit_lock_release>
81000ca4:	eb 7b                	jmp    81000d21 <__sinit+0x97>
81000ca6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ca9:	c7 40 3c 4f 0c 00 81 	movl   $0x81000c4f,0x3c(%eax)
81000cb0:	8b 45 08             	mov    0x8(%ebp),%eax
81000cb3:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81000cba:	00 00 00 
81000cbd:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc0:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000cc7:	00 00 00 
81000cca:	8b 45 08             	mov    0x8(%ebp),%eax
81000ccd:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000cd3:	8b 45 08             	mov    0x8(%ebp),%eax
81000cd6:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000cdc:	8b 45 08             	mov    0x8(%ebp),%eax
81000cdf:	8b 40 04             	mov    0x4(%eax),%eax
81000ce2:	83 ec 0c             	sub    $0xc,%esp
81000ce5:	50                   	push   %eax
81000ce6:	e8 57 fd ff ff       	call   81000a42 <stdin_init>
81000ceb:	83 c4 10             	add    $0x10,%esp
81000cee:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf1:	8b 40 08             	mov    0x8(%eax),%eax
81000cf4:	83 ec 0c             	sub    $0xc,%esp
81000cf7:	50                   	push   %eax
81000cf8:	e8 60 fd ff ff       	call   81000a5d <stdout_init>
81000cfd:	83 c4 10             	add    $0x10,%esp
81000d00:	8b 45 08             	mov    0x8(%ebp),%eax
81000d03:	8b 40 0c             	mov    0xc(%eax),%eax
81000d06:	83 ec 0c             	sub    $0xc,%esp
81000d09:	50                   	push   %eax
81000d0a:	e8 69 fd ff ff       	call   81000a78 <stderr_init>
81000d0f:	83 c4 10             	add    $0x10,%esp
81000d12:	8b 45 08             	mov    0x8(%ebp),%eax
81000d15:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000d1c:	e8 14 00 00 00       	call   81000d35 <__sinit_lock_release>
81000d21:	c9                   	leave  
81000d22:	c3                   	ret    

81000d23 <__sfp_lock_acquire>:
81000d23:	55                   	push   %ebp
81000d24:	89 e5                	mov    %esp,%ebp
81000d26:	90                   	nop
81000d27:	5d                   	pop    %ebp
81000d28:	c3                   	ret    

81000d29 <__sfp_lock_release>:
81000d29:	55                   	push   %ebp
81000d2a:	89 e5                	mov    %esp,%ebp
81000d2c:	90                   	nop
81000d2d:	5d                   	pop    %ebp
81000d2e:	c3                   	ret    

81000d2f <__sinit_lock_acquire>:
81000d2f:	55                   	push   %ebp
81000d30:	89 e5                	mov    %esp,%ebp
81000d32:	90                   	nop
81000d33:	5d                   	pop    %ebp
81000d34:	c3                   	ret    

81000d35 <__sinit_lock_release>:
81000d35:	55                   	push   %ebp
81000d36:	89 e5                	mov    %esp,%ebp
81000d38:	90                   	nop
81000d39:	5d                   	pop    %ebp
81000d3a:	c3                   	ret    

81000d3b <__fp_lock>:
81000d3b:	55                   	push   %ebp
81000d3c:	89 e5                	mov    %esp,%ebp
81000d3e:	b8 00 00 00 00       	mov    $0x0,%eax
81000d43:	5d                   	pop    %ebp
81000d44:	c3                   	ret    

81000d45 <__fp_unlock>:
81000d45:	55                   	push   %ebp
81000d46:	89 e5                	mov    %esp,%ebp
81000d48:	b8 00 00 00 00       	mov    $0x0,%eax
81000d4d:	5d                   	pop    %ebp
81000d4e:	c3                   	ret    

81000d4f <__fp_lock_all>:
81000d4f:	55                   	push   %ebp
81000d50:	89 e5                	mov    %esp,%ebp
81000d52:	83 ec 08             	sub    $0x8,%esp
81000d55:	e8 c9 ff ff ff       	call   81000d23 <__sfp_lock_acquire>
81000d5a:	a1 84 56 00 81       	mov    0x81005684,%eax
81000d5f:	83 ec 08             	sub    $0x8,%esp
81000d62:	68 3b 0d 00 81       	push   $0x81000d3b
81000d67:	50                   	push   %eax
81000d68:	e8 bb 05 00 00       	call   81001328 <_fwalk>
81000d6d:	83 c4 10             	add    $0x10,%esp
81000d70:	90                   	nop
81000d71:	c9                   	leave  
81000d72:	c3                   	ret    

81000d73 <__fp_unlock_all>:
81000d73:	55                   	push   %ebp
81000d74:	89 e5                	mov    %esp,%ebp
81000d76:	83 ec 08             	sub    $0x8,%esp
81000d79:	a1 84 56 00 81       	mov    0x81005684,%eax
81000d7e:	83 ec 08             	sub    $0x8,%esp
81000d81:	68 45 0d 00 81       	push   $0x81000d45
81000d86:	50                   	push   %eax
81000d87:	e8 9c 05 00 00       	call   81001328 <_fwalk>
81000d8c:	83 c4 10             	add    $0x10,%esp
81000d8f:	e8 95 ff ff ff       	call   81000d29 <__sfp_lock_release>
81000d94:	90                   	nop
81000d95:	c9                   	leave  
81000d96:	c3                   	ret    

81000d97 <_fiprintf_r>:
81000d97:	55                   	push   %ebp
81000d98:	89 e5                	mov    %esp,%ebp
81000d9a:	83 ec 18             	sub    $0x18,%esp
81000d9d:	8d 45 14             	lea    0x14(%ebp),%eax
81000da0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000da3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000da6:	50                   	push   %eax
81000da7:	ff 75 10             	push   0x10(%ebp)
81000daa:	ff 75 0c             	push   0xc(%ebp)
81000dad:	ff 75 08             	push   0x8(%ebp)
81000db0:	e8 8e 14 00 00       	call   81002243 <_vfiprintf_r>
81000db5:	83 c4 10             	add    $0x10,%esp
81000db8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000dbb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dbe:	c9                   	leave  
81000dbf:	c3                   	ret    

81000dc0 <fiprintf>:
81000dc0:	55                   	push   %ebp
81000dc1:	89 e5                	mov    %esp,%ebp
81000dc3:	83 ec 18             	sub    $0x18,%esp
81000dc6:	8d 45 10             	lea    0x10(%ebp),%eax
81000dc9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000dcc:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000dcf:	a1 84 56 00 81       	mov    0x81005684,%eax
81000dd4:	52                   	push   %edx
81000dd5:	ff 75 0c             	push   0xc(%ebp)
81000dd8:	ff 75 08             	push   0x8(%ebp)
81000ddb:	50                   	push   %eax
81000ddc:	e8 62 14 00 00       	call   81002243 <_vfiprintf_r>
81000de1:	83 c4 10             	add    $0x10,%esp
81000de4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000de7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dea:	c9                   	leave  
81000deb:	c3                   	ret    

81000dec <_free_r>:
81000dec:	55                   	push   %ebp
81000ded:	89 e5                	mov    %esp,%ebp
81000def:	53                   	push   %ebx
81000df0:	83 ec 34             	sub    $0x34,%esp
81000df3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81000df7:	0f 84 c4 03 00 00    	je     810011c1 <_free_r+0x3d5>
81000dfd:	83 ec 0c             	sub    $0xc,%esp
81000e00:	ff 75 08             	push   0x8(%ebp)
81000e03:	e8 20 12 00 00       	call   81002028 <__malloc_lock>
81000e08:	83 c4 10             	add    $0x10,%esp
81000e0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e0e:	83 e8 08             	sub    $0x8,%eax
81000e11:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e17:	8b 40 04             	mov    0x4(%eax),%eax
81000e1a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000e1d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e20:	83 e0 fe             	and    $0xfffffffe,%eax
81000e23:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000e26:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e29:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e2c:	01 d0                	add    %edx,%eax
81000e2e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000e31:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e34:	8b 40 04             	mov    0x4(%eax),%eax
81000e37:	83 e0 fc             	and    $0xfffffffc,%eax
81000e3a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000e3d:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81000e42:	8b 40 08             	mov    0x8(%eax),%eax
81000e45:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81000e48:	0f 85 94 00 00 00    	jne    81000ee2 <_free_r+0xf6>
81000e4e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000e51:	01 45 f0             	add    %eax,-0x10(%ebp)
81000e54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e57:	83 e0 01             	and    $0x1,%eax
81000e5a:	85 c0                	test   %eax,%eax
81000e5c:	75 3a                	jne    81000e98 <_free_r+0xac>
81000e5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e61:	8b 00                	mov    (%eax),%eax
81000e63:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000e66:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000e69:	f7 d8                	neg    %eax
81000e6b:	01 45 f4             	add    %eax,-0xc(%ebp)
81000e6e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000e71:	01 45 f0             	add    %eax,-0x10(%ebp)
81000e74:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e77:	8b 40 0c             	mov    0xc(%eax),%eax
81000e7a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000e7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e80:	8b 40 08             	mov    0x8(%eax),%eax
81000e83:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e89:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000e8c:	89 50 0c             	mov    %edx,0xc(%eax)
81000e8f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000e92:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000e95:	89 50 08             	mov    %edx,0x8(%eax)
81000e98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e9b:	83 c8 01             	or     $0x1,%eax
81000e9e:	89 c2                	mov    %eax,%edx
81000ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ea3:	89 50 04             	mov    %edx,0x4(%eax)
81000ea6:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81000eab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eae:	89 42 08             	mov    %eax,0x8(%edx)
81000eb1:	a1 a8 5a 00 81       	mov    0x81005aa8,%eax
81000eb6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81000eb9:	72 14                	jb     81000ecf <_free_r+0xe3>
81000ebb:	a1 60 62 00 81       	mov    0x81006260,%eax
81000ec0:	83 ec 08             	sub    $0x8,%esp
81000ec3:	50                   	push   %eax
81000ec4:	ff 75 08             	push   0x8(%ebp)
81000ec7:	e8 fb 02 00 00       	call   810011c7 <_malloc_trim_r>
81000ecc:	83 c4 10             	add    $0x10,%esp
81000ecf:	83 ec 0c             	sub    $0xc,%esp
81000ed2:	ff 75 08             	push   0x8(%ebp)
81000ed5:	e8 54 11 00 00       	call   8100202e <__malloc_unlock>
81000eda:	83 c4 10             	add    $0x10,%esp
81000edd:	e9 e0 02 00 00       	jmp    810011c2 <_free_r+0x3d6>
81000ee2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ee5:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000ee8:	89 50 04             	mov    %edx,0x4(%eax)
81000eeb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ef2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000ef5:	83 e0 01             	and    $0x1,%eax
81000ef8:	85 c0                	test   %eax,%eax
81000efa:	75 52                	jne    81000f4e <_free_r+0x162>
81000efc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eff:	8b 00                	mov    (%eax),%eax
81000f01:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000f04:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f07:	f7 d8                	neg    %eax
81000f09:	01 45 f4             	add    %eax,-0xc(%ebp)
81000f0c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f0f:	01 45 f0             	add    %eax,-0x10(%ebp)
81000f12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f15:	8b 40 08             	mov    0x8(%eax),%eax
81000f18:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81000f1d:	39 d0                	cmp    %edx,%eax
81000f1f:	75 09                	jne    81000f2a <_free_r+0x13e>
81000f21:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000f28:	eb 24                	jmp    81000f4e <_free_r+0x162>
81000f2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f2d:	8b 40 0c             	mov    0xc(%eax),%eax
81000f30:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000f33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f36:	8b 40 08             	mov    0x8(%eax),%eax
81000f39:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f3c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f3f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000f42:	89 50 0c             	mov    %edx,0xc(%eax)
81000f45:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f48:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000f4b:	89 50 08             	mov    %edx,0x8(%eax)
81000f4e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81000f51:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000f54:	01 d0                	add    %edx,%eax
81000f56:	8b 40 04             	mov    0x4(%eax),%eax
81000f59:	83 e0 01             	and    $0x1,%eax
81000f5c:	85 c0                	test   %eax,%eax
81000f5e:	75 75                	jne    81000fd5 <_free_r+0x1e9>
81000f60:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000f63:	01 45 f0             	add    %eax,-0x10(%ebp)
81000f66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000f6a:	75 45                	jne    81000fb1 <_free_r+0x1c5>
81000f6c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f6f:	8b 40 08             	mov    0x8(%eax),%eax
81000f72:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81000f77:	39 d0                	cmp    %edx,%eax
81000f79:	75 36                	jne    81000fb1 <_free_r+0x1c5>
81000f7b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000f82:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
81000f87:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f8a:	89 50 0c             	mov    %edx,0xc(%eax)
81000f8d:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81000f92:	8b 40 0c             	mov    0xc(%eax),%eax
81000f95:	89 42 08             	mov    %eax,0x8(%edx)
81000f98:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81000f9d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa0:	89 50 0c             	mov    %edx,0xc(%eax)
81000fa3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa6:	8b 50 0c             	mov    0xc(%eax),%edx
81000fa9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fac:	89 50 08             	mov    %edx,0x8(%eax)
81000faf:	eb 24                	jmp    81000fd5 <_free_r+0x1e9>
81000fb1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fb4:	8b 40 0c             	mov    0xc(%eax),%eax
81000fb7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fba:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fbd:	8b 40 08             	mov    0x8(%eax),%eax
81000fc0:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fc3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc6:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000fc9:	89 50 0c             	mov    %edx,0xc(%eax)
81000fcc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fcf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000fd2:	89 50 08             	mov    %edx,0x8(%eax)
81000fd5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fd8:	83 c8 01             	or     $0x1,%eax
81000fdb:	89 c2                	mov    %eax,%edx
81000fdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe0:	89 50 04             	mov    %edx,0x4(%eax)
81000fe3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fe9:	01 c2                	add    %eax,%edx
81000feb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fee:	89 02                	mov    %eax,(%edx)
81000ff0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000ff4:	0f 85 b7 01 00 00    	jne    810011b1 <_free_r+0x3c5>
81000ffa:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001001:	77 7f                	ja     81001082 <_free_r+0x296>
81001003:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001006:	c1 e8 03             	shr    $0x3,%eax
81001009:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100100c:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001011:	8b 58 04             	mov    0x4(%eax),%ebx
81001014:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001017:	8d 50 03             	lea    0x3(%eax),%edx
8100101a:	85 c0                	test   %eax,%eax
8100101c:	0f 48 c2             	cmovs  %edx,%eax
8100101f:	c1 f8 02             	sar    $0x2,%eax
81001022:	ba 01 00 00 00       	mov    $0x1,%edx
81001027:	89 c1                	mov    %eax,%ecx
81001029:	d3 e2                	shl    %cl,%edx
8100102b:	89 d0                	mov    %edx,%eax
8100102d:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81001032:	09 d8                	or     %ebx,%eax
81001034:	89 42 04             	mov    %eax,0x4(%edx)
81001037:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100103a:	83 c0 01             	add    $0x1,%eax
8100103d:	01 c0                	add    %eax,%eax
8100103f:	c1 e0 02             	shl    $0x2,%eax
81001042:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001047:	83 e8 08             	sub    $0x8,%eax
8100104a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100104d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001050:	8b 40 08             	mov    0x8(%eax),%eax
81001053:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001056:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001059:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100105c:	89 50 0c             	mov    %edx,0xc(%eax)
8100105f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001062:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001065:	89 50 08             	mov    %edx,0x8(%eax)
81001068:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100106b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100106e:	89 50 08             	mov    %edx,0x8(%eax)
81001071:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001074:	8b 50 08             	mov    0x8(%eax),%edx
81001077:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100107a:	89 50 0c             	mov    %edx,0xc(%eax)
8100107d:	e9 2f 01 00 00       	jmp    810011b1 <_free_r+0x3c5>
81001082:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001085:	c1 e8 09             	shr    $0x9,%eax
81001088:	85 c0                	test   %eax,%eax
8100108a:	75 08                	jne    81001094 <_free_r+0x2a8>
8100108c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100108f:	c1 e8 03             	shr    $0x3,%eax
81001092:	eb 77                	jmp    8100110b <_free_r+0x31f>
81001094:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001097:	c1 e8 09             	shr    $0x9,%eax
8100109a:	83 f8 04             	cmp    $0x4,%eax
8100109d:	77 0b                	ja     810010aa <_free_r+0x2be>
8100109f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010a2:	c1 e8 06             	shr    $0x6,%eax
810010a5:	83 c0 38             	add    $0x38,%eax
810010a8:	eb 61                	jmp    8100110b <_free_r+0x31f>
810010aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010ad:	c1 e8 09             	shr    $0x9,%eax
810010b0:	83 f8 14             	cmp    $0x14,%eax
810010b3:	77 0b                	ja     810010c0 <_free_r+0x2d4>
810010b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010b8:	c1 e8 09             	shr    $0x9,%eax
810010bb:	83 c0 5b             	add    $0x5b,%eax
810010be:	eb 4b                	jmp    8100110b <_free_r+0x31f>
810010c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010c3:	c1 e8 09             	shr    $0x9,%eax
810010c6:	83 f8 54             	cmp    $0x54,%eax
810010c9:	77 0b                	ja     810010d6 <_free_r+0x2ea>
810010cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010ce:	c1 e8 0c             	shr    $0xc,%eax
810010d1:	83 c0 6e             	add    $0x6e,%eax
810010d4:	eb 35                	jmp    8100110b <_free_r+0x31f>
810010d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010d9:	c1 e8 09             	shr    $0x9,%eax
810010dc:	3d 54 01 00 00       	cmp    $0x154,%eax
810010e1:	77 0b                	ja     810010ee <_free_r+0x302>
810010e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e6:	c1 e8 0f             	shr    $0xf,%eax
810010e9:	83 c0 77             	add    $0x77,%eax
810010ec:	eb 1d                	jmp    8100110b <_free_r+0x31f>
810010ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010f1:	c1 e8 09             	shr    $0x9,%eax
810010f4:	3d 54 05 00 00       	cmp    $0x554,%eax
810010f9:	77 0b                	ja     81001106 <_free_r+0x31a>
810010fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010fe:	c1 e8 12             	shr    $0x12,%eax
81001101:	83 c0 7c             	add    $0x7c,%eax
81001104:	eb 05                	jmp    8100110b <_free_r+0x31f>
81001106:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100110b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100110e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001111:	83 c0 01             	add    $0x1,%eax
81001114:	01 c0                	add    %eax,%eax
81001116:	c1 e0 02             	shl    $0x2,%eax
81001119:	05 a0 56 00 81       	add    $0x810056a0,%eax
8100111e:	83 e8 08             	sub    $0x8,%eax
81001121:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001124:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001127:	8b 40 08             	mov    0x8(%eax),%eax
8100112a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100112d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001130:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001133:	75 36                	jne    8100116b <_free_r+0x37f>
81001135:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
8100113a:	8b 58 04             	mov    0x4(%eax),%ebx
8100113d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001140:	8d 50 03             	lea    0x3(%eax),%edx
81001143:	85 c0                	test   %eax,%eax
81001145:	0f 48 c2             	cmovs  %edx,%eax
81001148:	c1 f8 02             	sar    $0x2,%eax
8100114b:	ba 01 00 00 00       	mov    $0x1,%edx
81001150:	89 c1                	mov    %eax,%ecx
81001152:	d3 e2                	shl    %cl,%edx
81001154:	89 d0                	mov    %edx,%eax
81001156:	ba a0 56 00 81       	mov    $0x810056a0,%edx
8100115b:	09 d8                	or     %ebx,%eax
8100115d:	89 42 04             	mov    %eax,0x4(%edx)
81001160:	eb 28                	jmp    8100118a <_free_r+0x39e>
81001162:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001165:	8b 40 08             	mov    0x8(%eax),%eax
81001168:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100116b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100116e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001171:	74 0e                	je     81001181 <_free_r+0x395>
81001173:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001176:	8b 40 04             	mov    0x4(%eax),%eax
81001179:	83 e0 fc             	and    $0xfffffffc,%eax
8100117c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100117f:	72 e1                	jb     81001162 <_free_r+0x376>
81001181:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001184:	8b 40 0c             	mov    0xc(%eax),%eax
81001187:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100118a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100118d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001190:	89 50 0c             	mov    %edx,0xc(%eax)
81001193:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001196:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001199:	89 50 08             	mov    %edx,0x8(%eax)
8100119c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100119f:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011a2:	89 50 08             	mov    %edx,0x8(%eax)
810011a5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810011a8:	8b 50 08             	mov    0x8(%eax),%edx
810011ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
810011ae:	89 50 0c             	mov    %edx,0xc(%eax)
810011b1:	83 ec 0c             	sub    $0xc,%esp
810011b4:	ff 75 08             	push   0x8(%ebp)
810011b7:	e8 72 0e 00 00       	call   8100202e <__malloc_unlock>
810011bc:	83 c4 10             	add    $0x10,%esp
810011bf:	eb 01                	jmp    810011c2 <_free_r+0x3d6>
810011c1:	90                   	nop
810011c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810011c5:	c9                   	leave  
810011c6:	c3                   	ret    

810011c7 <_malloc_trim_r>:
810011c7:	55                   	push   %ebp
810011c8:	89 e5                	mov    %esp,%ebp
810011ca:	83 ec 28             	sub    $0x28,%esp
810011cd:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810011d4:	83 ec 0c             	sub    $0xc,%esp
810011d7:	ff 75 08             	push   0x8(%ebp)
810011da:	e8 49 0e 00 00       	call   81002028 <__malloc_lock>
810011df:	83 c4 10             	add    $0x10,%esp
810011e2:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810011e7:	8b 40 08             	mov    0x8(%eax),%eax
810011ea:	8b 40 04             	mov    0x4(%eax),%eax
810011ed:	83 e0 fc             	and    $0xfffffffc,%eax
810011f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810011f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011f6:	2b 45 0c             	sub    0xc(%ebp),%eax
810011f9:	89 c2                	mov    %eax,%edx
810011fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011fe:	01 d0                	add    %edx,%eax
81001200:	83 e8 11             	sub    $0x11,%eax
81001203:	ba 00 00 00 00       	mov    $0x0,%edx
81001208:	f7 75 f4             	divl   -0xc(%ebp)
8100120b:	83 e8 01             	sub    $0x1,%eax
8100120e:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001212:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001215:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001218:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100121b:	7d 18                	jge    81001235 <_malloc_trim_r+0x6e>
8100121d:	83 ec 0c             	sub    $0xc,%esp
81001220:	ff 75 08             	push   0x8(%ebp)
81001223:	e8 06 0e 00 00       	call   8100202e <__malloc_unlock>
81001228:	83 c4 10             	add    $0x10,%esp
8100122b:	b8 00 00 00 00       	mov    $0x0,%eax
81001230:	e9 f1 00 00 00       	jmp    81001326 <_malloc_trim_r+0x15f>
81001235:	83 ec 08             	sub    $0x8,%esp
81001238:	6a 00                	push   $0x0
8100123a:	ff 75 08             	push   0x8(%ebp)
8100123d:	e8 c3 1c 00 00       	call   81002f05 <_sbrk_r>
81001242:	83 c4 10             	add    $0x10,%esp
81001245:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001248:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
8100124d:	8b 50 08             	mov    0x8(%eax),%edx
81001250:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001253:	01 d0                	add    %edx,%eax
81001255:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001258:	74 18                	je     81001272 <_malloc_trim_r+0xab>
8100125a:	83 ec 0c             	sub    $0xc,%esp
8100125d:	ff 75 08             	push   0x8(%ebp)
81001260:	e8 c9 0d 00 00       	call   8100202e <__malloc_unlock>
81001265:	83 c4 10             	add    $0x10,%esp
81001268:	b8 00 00 00 00       	mov    $0x0,%eax
8100126d:	e9 b4 00 00 00       	jmp    81001326 <_malloc_trim_r+0x15f>
81001272:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001275:	f7 d8                	neg    %eax
81001277:	83 ec 08             	sub    $0x8,%esp
8100127a:	50                   	push   %eax
8100127b:	ff 75 08             	push   0x8(%ebp)
8100127e:	e8 82 1c 00 00       	call   81002f05 <_sbrk_r>
81001283:	83 c4 10             	add    $0x10,%esp
81001286:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001289:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100128d:	75 61                	jne    810012f0 <_malloc_trim_r+0x129>
8100128f:	83 ec 08             	sub    $0x8,%esp
81001292:	6a 00                	push   $0x0
81001294:	ff 75 08             	push   0x8(%ebp)
81001297:	e8 69 1c 00 00       	call   81002f05 <_sbrk_r>
8100129c:	83 c4 10             	add    $0x10,%esp
8100129f:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012a2:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810012a7:	8b 50 08             	mov    0x8(%eax),%edx
810012aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012ad:	29 d0                	sub    %edx,%eax
810012af:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012b2:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810012b6:	7e 23                	jle    810012db <_malloc_trim_r+0x114>
810012b8:	8b 15 ac 5a 00 81    	mov    0x81005aac,%edx
810012be:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012c1:	29 d0                	sub    %edx,%eax
810012c3:	a3 80 62 00 81       	mov    %eax,0x81006280
810012c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012cb:	83 c8 01             	or     $0x1,%eax
810012ce:	89 c2                	mov    %eax,%edx
810012d0:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810012d5:	8b 40 08             	mov    0x8(%eax),%eax
810012d8:	89 50 04             	mov    %edx,0x4(%eax)
810012db:	83 ec 0c             	sub    $0xc,%esp
810012de:	ff 75 08             	push   0x8(%ebp)
810012e1:	e8 48 0d 00 00       	call   8100202e <__malloc_unlock>
810012e6:	83 c4 10             	add    $0x10,%esp
810012e9:	b8 00 00 00 00       	mov    $0x0,%eax
810012ee:	eb 36                	jmp    81001326 <_malloc_trim_r+0x15f>
810012f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012f3:	2b 45 ec             	sub    -0x14(%ebp),%eax
810012f6:	83 c8 01             	or     $0x1,%eax
810012f9:	89 c2                	mov    %eax,%edx
810012fb:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001300:	8b 40 08             	mov    0x8(%eax),%eax
81001303:	89 50 04             	mov    %edx,0x4(%eax)
81001306:	a1 80 62 00 81       	mov    0x81006280,%eax
8100130b:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100130e:	a3 80 62 00 81       	mov    %eax,0x81006280
81001313:	83 ec 0c             	sub    $0xc,%esp
81001316:	ff 75 08             	push   0x8(%ebp)
81001319:	e8 10 0d 00 00       	call   8100202e <__malloc_unlock>
8100131e:	83 c4 10             	add    $0x10,%esp
81001321:	b8 01 00 00 00       	mov    $0x1,%eax
81001326:	c9                   	leave  
81001327:	c3                   	ret    

81001328 <_fwalk>:
81001328:	55                   	push   %ebp
81001329:	89 e5                	mov    %esp,%ebp
8100132b:	57                   	push   %edi
8100132c:	56                   	push   %esi
8100132d:	53                   	push   %ebx
8100132e:	83 ec 1c             	sub    $0x1c,%esp
81001331:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001338:	8b 45 08             	mov    0x8(%ebp),%eax
8100133b:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001341:	eb 3e                	jmp    81001381 <_fwalk+0x59>
81001343:	8b 5e 08             	mov    0x8(%esi),%ebx
81001346:	8b 7e 04             	mov    0x4(%esi),%edi
81001349:	eb 2d                	jmp    81001378 <_fwalk+0x50>
8100134b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100134f:	66 85 c0             	test   %ax,%ax
81001352:	74 21                	je     81001375 <_fwalk+0x4d>
81001354:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001358:	66 83 f8 01          	cmp    $0x1,%ax
8100135c:	74 17                	je     81001375 <_fwalk+0x4d>
8100135e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001362:	66 83 f8 ff          	cmp    $0xffff,%ax
81001366:	74 0d                	je     81001375 <_fwalk+0x4d>
81001368:	83 ec 0c             	sub    $0xc,%esp
8100136b:	53                   	push   %ebx
8100136c:	ff 55 0c             	call   *0xc(%ebp)
8100136f:	83 c4 10             	add    $0x10,%esp
81001372:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001375:	83 c3 68             	add    $0x68,%ebx
81001378:	83 ef 01             	sub    $0x1,%edi
8100137b:	85 ff                	test   %edi,%edi
8100137d:	79 cc                	jns    8100134b <_fwalk+0x23>
8100137f:	8b 36                	mov    (%esi),%esi
81001381:	85 f6                	test   %esi,%esi
81001383:	75 be                	jne    81001343 <_fwalk+0x1b>
81001385:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001388:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100138b:	5b                   	pop    %ebx
8100138c:	5e                   	pop    %esi
8100138d:	5f                   	pop    %edi
8100138e:	5d                   	pop    %ebp
8100138f:	c3                   	ret    

81001390 <_fwalk_reent>:
81001390:	55                   	push   %ebp
81001391:	89 e5                	mov    %esp,%ebp
81001393:	57                   	push   %edi
81001394:	56                   	push   %esi
81001395:	53                   	push   %ebx
81001396:	83 ec 1c             	sub    $0x1c,%esp
81001399:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810013a0:	8b 45 08             	mov    0x8(%ebp),%eax
810013a3:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810013a9:	eb 41                	jmp    810013ec <_fwalk_reent+0x5c>
810013ab:	8b 5e 08             	mov    0x8(%esi),%ebx
810013ae:	8b 7e 04             	mov    0x4(%esi),%edi
810013b1:	eb 30                	jmp    810013e3 <_fwalk_reent+0x53>
810013b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810013b7:	66 85 c0             	test   %ax,%ax
810013ba:	74 24                	je     810013e0 <_fwalk_reent+0x50>
810013bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810013c0:	66 83 f8 01          	cmp    $0x1,%ax
810013c4:	74 1a                	je     810013e0 <_fwalk_reent+0x50>
810013c6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810013ca:	66 83 f8 ff          	cmp    $0xffff,%ax
810013ce:	74 10                	je     810013e0 <_fwalk_reent+0x50>
810013d0:	83 ec 08             	sub    $0x8,%esp
810013d3:	53                   	push   %ebx
810013d4:	ff 75 08             	push   0x8(%ebp)
810013d7:	ff 55 0c             	call   *0xc(%ebp)
810013da:	83 c4 10             	add    $0x10,%esp
810013dd:	09 45 e4             	or     %eax,-0x1c(%ebp)
810013e0:	83 c3 68             	add    $0x68,%ebx
810013e3:	83 ef 01             	sub    $0x1,%edi
810013e6:	85 ff                	test   %edi,%edi
810013e8:	79 c9                	jns    810013b3 <_fwalk_reent+0x23>
810013ea:	8b 36                	mov    (%esi),%esi
810013ec:	85 f6                	test   %esi,%esi
810013ee:	75 bb                	jne    810013ab <_fwalk_reent+0x1b>
810013f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810013f3:	8d 65 f4             	lea    -0xc(%ebp),%esp
810013f6:	5b                   	pop    %ebx
810013f7:	5e                   	pop    %esi
810013f8:	5f                   	pop    %edi
810013f9:	5d                   	pop    %ebp
810013fa:	c3                   	ret    

810013fb <__getreent>:
810013fb:	55                   	push   %ebp
810013fc:	89 e5                	mov    %esp,%ebp
810013fe:	a1 84 56 00 81       	mov    0x81005684,%eax
81001403:	5d                   	pop    %ebp
81001404:	c3                   	ret    

81001405 <malloc_extend_top>:
81001405:	55                   	push   %ebp
81001406:	89 e5                	mov    %esp,%ebp
81001408:	83 ec 38             	sub    $0x38,%esp
8100140b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001412:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001417:	8b 40 08             	mov    0x8(%eax),%eax
8100141a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100141d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001420:	8b 40 04             	mov    0x4(%eax),%eax
81001423:	83 e0 fc             	and    $0xfffffffc,%eax
81001426:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001429:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100142c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100142f:	01 d0                	add    %edx,%eax
81001431:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001434:	8b 15 60 62 00 81    	mov    0x81006260,%edx
8100143a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100143d:	01 d0                	add    %edx,%eax
8100143f:	83 c0 10             	add    $0x10,%eax
81001442:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001445:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
8100144c:	a1 ac 5a 00 81       	mov    0x81005aac,%eax
81001451:	83 f8 ff             	cmp    $0xffffffff,%eax
81001454:	74 15                	je     8100146b <malloc_extend_top+0x66>
81001456:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001459:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100145c:	01 d0                	add    %edx,%eax
8100145e:	8d 50 ff             	lea    -0x1(%eax),%edx
81001461:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001464:	f7 d8                	neg    %eax
81001466:	21 d0                	and    %edx,%eax
81001468:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100146b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100146e:	83 ec 08             	sub    $0x8,%esp
81001471:	50                   	push   %eax
81001472:	ff 75 08             	push   0x8(%ebp)
81001475:	e8 8b 1a 00 00       	call   81002f05 <_sbrk_r>
8100147a:	83 c4 10             	add    $0x10,%esp
8100147d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001480:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81001484:	0f 84 0b 02 00 00    	je     81001695 <malloc_extend_top+0x290>
8100148a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81001490:	73 0e                	jae    810014a0 <malloc_extend_top+0x9b>
81001492:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001497:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100149a:	0f 85 f5 01 00 00    	jne    81001695 <malloc_extend_top+0x290>
810014a0:	a1 80 62 00 81       	mov    0x81006280,%eax
810014a5:	89 c2                	mov    %eax,%edx
810014a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014aa:	01 d0                	add    %edx,%eax
810014ac:	a3 80 62 00 81       	mov    %eax,0x81006280
810014b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014b4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810014b7:	75 30                	jne    810014e9 <malloc_extend_top+0xe4>
810014b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810014bc:	8d 50 ff             	lea    -0x1(%eax),%edx
810014bf:	8b 45 d8             	mov    -0x28(%ebp),%eax
810014c2:	21 d0                	and    %edx,%eax
810014c4:	85 c0                	test   %eax,%eax
810014c6:	75 21                	jne    810014e9 <malloc_extend_top+0xe4>
810014c8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014ce:	01 d0                	add    %edx,%eax
810014d0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810014d3:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810014d8:	8b 40 08             	mov    0x8(%eax),%eax
810014db:	8b 55 d0             	mov    -0x30(%ebp),%edx
810014de:	83 ca 01             	or     $0x1,%edx
810014e1:	89 50 04             	mov    %edx,0x4(%eax)
810014e4:	e9 76 01 00 00       	jmp    8100165f <malloc_extend_top+0x25a>
810014e9:	a1 ac 5a 00 81       	mov    0x81005aac,%eax
810014ee:	83 f8 ff             	cmp    $0xffffffff,%eax
810014f1:	75 0a                	jne    810014fd <malloc_extend_top+0xf8>
810014f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014f6:	a3 ac 5a 00 81       	mov    %eax,0x81005aac
810014fb:	eb 13                	jmp    81001510 <malloc_extend_top+0x10b>
810014fd:	8b 15 80 62 00 81    	mov    0x81006280,%edx
81001503:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001506:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001509:	01 d0                	add    %edx,%eax
8100150b:	a3 80 62 00 81       	mov    %eax,0x81006280
81001510:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001513:	83 c0 08             	add    $0x8,%eax
81001516:	83 e0 07             	and    $0x7,%eax
81001519:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100151c:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001520:	74 13                	je     81001535 <malloc_extend_top+0x130>
81001522:	b8 08 00 00 00       	mov    $0x8,%eax
81001527:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100152a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100152d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001530:	01 45 f4             	add    %eax,-0xc(%ebp)
81001533:	eb 07                	jmp    8100153c <malloc_extend_top+0x137>
81001535:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100153c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100153f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001542:	01 d0                	add    %edx,%eax
81001544:	89 c2                	mov    %eax,%edx
81001546:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001549:	83 e8 01             	sub    $0x1,%eax
8100154c:	21 c2                	and    %eax,%edx
8100154e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001551:	29 d0                	sub    %edx,%eax
81001553:	01 45 f0             	add    %eax,-0x10(%ebp)
81001556:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001559:	83 e8 01             	sub    $0x1,%eax
8100155c:	21 45 f0             	and    %eax,-0x10(%ebp)
8100155f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001562:	83 ec 08             	sub    $0x8,%esp
81001565:	50                   	push   %eax
81001566:	ff 75 08             	push   0x8(%ebp)
81001569:	e8 97 19 00 00       	call   81002f05 <_sbrk_r>
8100156e:	83 c4 10             	add    $0x10,%esp
81001571:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001574:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81001578:	75 28                	jne    810015a2 <malloc_extend_top+0x19d>
8100157a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001581:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001588:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100158b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100158e:	01 d0                	add    %edx,%eax
81001590:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001593:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001597:	74 09                	je     810015a2 <malloc_extend_top+0x19d>
81001599:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100159c:	83 e8 08             	sub    $0x8,%eax
8100159f:	01 45 ec             	add    %eax,-0x14(%ebp)
810015a2:	a1 80 62 00 81       	mov    0x81006280,%eax
810015a7:	89 c2                	mov    %eax,%edx
810015a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ac:	01 d0                	add    %edx,%eax
810015ae:	a3 80 62 00 81       	mov    %eax,0x81006280
810015b3:	ba a0 56 00 81       	mov    $0x810056a0,%edx
810015b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015bb:	89 42 08             	mov    %eax,0x8(%edx)
810015be:	8b 45 ec             	mov    -0x14(%ebp),%eax
810015c1:	2b 45 f4             	sub    -0xc(%ebp),%eax
810015c4:	89 c2                	mov    %eax,%edx
810015c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015c9:	01 d0                	add    %edx,%eax
810015cb:	89 45 d0             	mov    %eax,-0x30(%ebp)
810015ce:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810015d3:	8b 40 08             	mov    0x8(%eax),%eax
810015d6:	8b 55 d0             	mov    -0x30(%ebp),%edx
810015d9:	83 ca 01             	or     $0x1,%edx
810015dc:	89 50 04             	mov    %edx,0x4(%eax)
810015df:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810015e4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810015e7:	74 76                	je     8100165f <malloc_extend_top+0x25a>
810015e9:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810015ed:	77 14                	ja     81001603 <malloc_extend_top+0x1fe>
810015ef:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810015f4:	8b 40 08             	mov    0x8(%eax),%eax
810015f7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810015fe:	e9 93 00 00 00       	jmp    81001696 <malloc_extend_top+0x291>
81001603:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001606:	83 e8 0c             	sub    $0xc,%eax
81001609:	83 e0 f8             	and    $0xfffffff8,%eax
8100160c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100160f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001612:	8b 40 04             	mov    0x4(%eax),%eax
81001615:	83 e0 01             	and    $0x1,%eax
81001618:	0b 45 dc             	or     -0x24(%ebp),%eax
8100161b:	89 c2                	mov    %eax,%edx
8100161d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001620:	89 50 04             	mov    %edx,0x4(%eax)
81001623:	8b 55 e0             	mov    -0x20(%ebp),%edx
81001626:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001629:	01 d0                	add    %edx,%eax
8100162b:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001632:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001635:	8d 50 04             	lea    0x4(%eax),%edx
81001638:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100163b:	01 d0                	add    %edx,%eax
8100163d:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001644:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001648:	76 15                	jbe    8100165f <malloc_extend_top+0x25a>
8100164a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100164d:	83 c0 08             	add    $0x8,%eax
81001650:	83 ec 08             	sub    $0x8,%esp
81001653:	50                   	push   %eax
81001654:	ff 75 08             	push   0x8(%ebp)
81001657:	e8 90 f7 ff ff       	call   81000dec <_free_r>
8100165c:	83 c4 10             	add    $0x10,%esp
8100165f:	a1 80 62 00 81       	mov    0x81006280,%eax
81001664:	89 c2                	mov    %eax,%edx
81001666:	a1 64 62 00 81       	mov    0x81006264,%eax
8100166b:	39 c2                	cmp    %eax,%edx
8100166d:	76 0a                	jbe    81001679 <malloc_extend_top+0x274>
8100166f:	a1 80 62 00 81       	mov    0x81006280,%eax
81001674:	a3 64 62 00 81       	mov    %eax,0x81006264
81001679:	a1 80 62 00 81       	mov    0x81006280,%eax
8100167e:	89 c2                	mov    %eax,%edx
81001680:	a1 68 62 00 81       	mov    0x81006268,%eax
81001685:	39 c2                	cmp    %eax,%edx
81001687:	76 0d                	jbe    81001696 <malloc_extend_top+0x291>
81001689:	a1 80 62 00 81       	mov    0x81006280,%eax
8100168e:	a3 68 62 00 81       	mov    %eax,0x81006268
81001693:	eb 01                	jmp    81001696 <malloc_extend_top+0x291>
81001695:	90                   	nop
81001696:	c9                   	leave  
81001697:	c3                   	ret    

81001698 <_malloc_r>:
81001698:	55                   	push   %ebp
81001699:	89 e5                	mov    %esp,%ebp
8100169b:	53                   	push   %ebx
8100169c:	83 ec 44             	sub    $0x44,%esp
8100169f:	8b 45 0c             	mov    0xc(%ebp),%eax
810016a2:	83 c0 0b             	add    $0xb,%eax
810016a5:	83 f8 16             	cmp    $0x16,%eax
810016a8:	76 0b                	jbe    810016b5 <_malloc_r+0x1d>
810016aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810016ad:	83 c0 0b             	add    $0xb,%eax
810016b0:	83 e0 f8             	and    $0xfffffff8,%eax
810016b3:	eb 05                	jmp    810016ba <_malloc_r+0x22>
810016b5:	b8 10 00 00 00       	mov    $0x10,%eax
810016ba:	89 45 d0             	mov    %eax,-0x30(%ebp)
810016bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016c0:	85 c0                	test   %eax,%eax
810016c2:	78 08                	js     810016cc <_malloc_r+0x34>
810016c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016c7:	3b 45 0c             	cmp    0xc(%ebp),%eax
810016ca:	73 13                	jae    810016df <_malloc_r+0x47>
810016cc:	8b 45 08             	mov    0x8(%ebp),%eax
810016cf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810016d5:	b8 00 00 00 00       	mov    $0x0,%eax
810016da:	e9 d6 07 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
810016df:	83 ec 0c             	sub    $0xc,%esp
810016e2:	ff 75 08             	push   0x8(%ebp)
810016e5:	e8 3e 09 00 00       	call   81002028 <__malloc_lock>
810016ea:	83 c4 10             	add    $0x10,%esp
810016ed:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810016f4:	0f 87 b0 00 00 00    	ja     810017aa <_malloc_r+0x112>
810016fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810016fd:	c1 e8 03             	shr    $0x3,%eax
81001700:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001703:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001706:	83 c0 01             	add    $0x1,%eax
81001709:	01 c0                	add    %eax,%eax
8100170b:	c1 e0 02             	shl    $0x2,%eax
8100170e:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001713:	83 e8 08             	sub    $0x8,%eax
81001716:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001719:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100171c:	8b 40 0c             	mov    0xc(%eax),%eax
8100171f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001725:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001728:	75 0d                	jne    81001737 <_malloc_r+0x9f>
8100172a:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
8100172e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001731:	8b 40 0c             	mov    0xc(%eax),%eax
81001734:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001737:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100173d:	74 62                	je     810017a1 <_malloc_r+0x109>
8100173f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001742:	8b 40 04             	mov    0x4(%eax),%eax
81001745:	83 e0 fc             	and    $0xfffffffc,%eax
81001748:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100174b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174e:	8b 40 0c             	mov    0xc(%eax),%eax
81001751:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001754:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001757:	8b 40 08             	mov    0x8(%eax),%eax
8100175a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100175d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001760:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001763:	89 50 0c             	mov    %edx,0xc(%eax)
81001766:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001769:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100176c:	89 50 08             	mov    %edx,0x8(%eax)
8100176f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001772:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001775:	01 d0                	add    %edx,%eax
81001777:	8b 50 04             	mov    0x4(%eax),%edx
8100177a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100177d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001780:	01 c8                	add    %ecx,%eax
81001782:	83 ca 01             	or     $0x1,%edx
81001785:	89 50 04             	mov    %edx,0x4(%eax)
81001788:	83 ec 0c             	sub    $0xc,%esp
8100178b:	ff 75 08             	push   0x8(%ebp)
8100178e:	e8 9b 08 00 00       	call   8100202e <__malloc_unlock>
81001793:	83 c4 10             	add    $0x10,%esp
81001796:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001799:	83 c0 08             	add    $0x8,%eax
8100179c:	e9 14 07 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
810017a1:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810017a5:	e9 46 01 00 00       	jmp    810018f0 <_malloc_r+0x258>
810017aa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017ad:	c1 e8 09             	shr    $0x9,%eax
810017b0:	85 c0                	test   %eax,%eax
810017b2:	75 08                	jne    810017bc <_malloc_r+0x124>
810017b4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017b7:	c1 e8 03             	shr    $0x3,%eax
810017ba:	eb 77                	jmp    81001833 <_malloc_r+0x19b>
810017bc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017bf:	c1 e8 09             	shr    $0x9,%eax
810017c2:	83 f8 04             	cmp    $0x4,%eax
810017c5:	77 0b                	ja     810017d2 <_malloc_r+0x13a>
810017c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017ca:	c1 e8 06             	shr    $0x6,%eax
810017cd:	83 c0 38             	add    $0x38,%eax
810017d0:	eb 61                	jmp    81001833 <_malloc_r+0x19b>
810017d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017d5:	c1 e8 09             	shr    $0x9,%eax
810017d8:	83 f8 14             	cmp    $0x14,%eax
810017db:	77 0b                	ja     810017e8 <_malloc_r+0x150>
810017dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017e0:	c1 e8 09             	shr    $0x9,%eax
810017e3:	83 c0 5b             	add    $0x5b,%eax
810017e6:	eb 4b                	jmp    81001833 <_malloc_r+0x19b>
810017e8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017eb:	c1 e8 09             	shr    $0x9,%eax
810017ee:	83 f8 54             	cmp    $0x54,%eax
810017f1:	77 0b                	ja     810017fe <_malloc_r+0x166>
810017f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017f6:	c1 e8 0c             	shr    $0xc,%eax
810017f9:	83 c0 6e             	add    $0x6e,%eax
810017fc:	eb 35                	jmp    81001833 <_malloc_r+0x19b>
810017fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001801:	c1 e8 09             	shr    $0x9,%eax
81001804:	3d 54 01 00 00       	cmp    $0x154,%eax
81001809:	77 0b                	ja     81001816 <_malloc_r+0x17e>
8100180b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100180e:	c1 e8 0f             	shr    $0xf,%eax
81001811:	83 c0 77             	add    $0x77,%eax
81001814:	eb 1d                	jmp    81001833 <_malloc_r+0x19b>
81001816:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001819:	c1 e8 09             	shr    $0x9,%eax
8100181c:	3d 54 05 00 00       	cmp    $0x554,%eax
81001821:	77 0b                	ja     8100182e <_malloc_r+0x196>
81001823:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001826:	c1 e8 12             	shr    $0x12,%eax
81001829:	83 c0 7c             	add    $0x7c,%eax
8100182c:	eb 05                	jmp    81001833 <_malloc_r+0x19b>
8100182e:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001833:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001836:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001839:	83 c0 01             	add    $0x1,%eax
8100183c:	01 c0                	add    %eax,%eax
8100183e:	c1 e0 02             	shl    $0x2,%eax
81001841:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001846:	83 e8 08             	sub    $0x8,%eax
81001849:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100184c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100184f:	8b 40 0c             	mov    0xc(%eax),%eax
81001852:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001855:	e9 86 00 00 00       	jmp    810018e0 <_malloc_r+0x248>
8100185a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185d:	8b 40 04             	mov    0x4(%eax),%eax
81001860:	83 e0 fc             	and    $0xfffffffc,%eax
81001863:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001866:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001869:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100186c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100186f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001873:	7e 06                	jle    8100187b <_malloc_r+0x1e3>
81001875:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001879:	eb 71                	jmp    810018ec <_malloc_r+0x254>
8100187b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100187f:	78 56                	js     810018d7 <_malloc_r+0x23f>
81001881:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001884:	8b 40 0c             	mov    0xc(%eax),%eax
81001887:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100188a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100188d:	8b 40 08             	mov    0x8(%eax),%eax
81001890:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001893:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001896:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001899:	89 50 0c             	mov    %edx,0xc(%eax)
8100189c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100189f:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018a2:	89 50 08             	mov    %edx,0x8(%eax)
810018a5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018a8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810018ab:	01 d0                	add    %edx,%eax
810018ad:	8b 50 04             	mov    0x4(%eax),%edx
810018b0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810018b3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810018b6:	01 c8                	add    %ecx,%eax
810018b8:	83 ca 01             	or     $0x1,%edx
810018bb:	89 50 04             	mov    %edx,0x4(%eax)
810018be:	83 ec 0c             	sub    $0xc,%esp
810018c1:	ff 75 08             	push   0x8(%ebp)
810018c4:	e8 65 07 00 00       	call   8100202e <__malloc_unlock>
810018c9:	83 c4 10             	add    $0x10,%esp
810018cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018cf:	83 c0 08             	add    $0x8,%eax
810018d2:	e9 de 05 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
810018d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018da:	8b 40 0c             	mov    0xc(%eax),%eax
810018dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018e3:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810018e6:	0f 85 6e ff ff ff    	jne    8100185a <_malloc_r+0x1c2>
810018ec:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810018f0:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
810018f5:	8b 40 08             	mov    0x8(%eax),%eax
810018f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018fb:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
81001900:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001903:	0f 84 9c 02 00 00    	je     81001ba5 <_malloc_r+0x50d>
81001909:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100190c:	8b 40 04             	mov    0x4(%eax),%eax
8100190f:	83 e0 fc             	and    $0xfffffffc,%eax
81001912:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001915:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001918:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100191b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100191e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001922:	7e 7a                	jle    8100199e <_malloc_r+0x306>
81001924:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001927:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100192a:	01 d0                	add    %edx,%eax
8100192c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100192f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001932:	83 c8 01             	or     $0x1,%eax
81001935:	89 c2                	mov    %eax,%edx
81001937:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100193a:	89 50 04             	mov    %edx,0x4(%eax)
8100193d:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
81001942:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001945:	89 50 0c             	mov    %edx,0xc(%eax)
81001948:	ba a8 56 00 81       	mov    $0x810056a8,%edx
8100194d:	8b 40 0c             	mov    0xc(%eax),%eax
81001950:	89 42 08             	mov    %eax,0x8(%edx)
81001953:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81001958:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100195b:	89 50 0c             	mov    %edx,0xc(%eax)
8100195e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001961:	8b 50 0c             	mov    0xc(%eax),%edx
81001964:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001967:	89 50 08             	mov    %edx,0x8(%eax)
8100196a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100196d:	83 c8 01             	or     $0x1,%eax
81001970:	89 c2                	mov    %eax,%edx
81001972:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001975:	89 50 04             	mov    %edx,0x4(%eax)
81001978:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100197b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100197e:	01 c2                	add    %eax,%edx
81001980:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001983:	89 02                	mov    %eax,(%edx)
81001985:	83 ec 0c             	sub    $0xc,%esp
81001988:	ff 75 08             	push   0x8(%ebp)
8100198b:	e8 9e 06 00 00       	call   8100202e <__malloc_unlock>
81001990:	83 c4 10             	add    $0x10,%esp
81001993:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001996:	83 c0 08             	add    $0x8,%eax
81001999:	e9 17 05 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
8100199e:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
810019a3:	ba a8 56 00 81       	mov    $0x810056a8,%edx
810019a8:	89 50 0c             	mov    %edx,0xc(%eax)
810019ab:	ba a8 56 00 81       	mov    $0x810056a8,%edx
810019b0:	8b 40 0c             	mov    0xc(%eax),%eax
810019b3:	89 42 08             	mov    %eax,0x8(%edx)
810019b6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810019ba:	78 32                	js     810019ee <_malloc_r+0x356>
810019bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810019c2:	01 d0                	add    %edx,%eax
810019c4:	8b 50 04             	mov    0x4(%eax),%edx
810019c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810019cd:	01 c8                	add    %ecx,%eax
810019cf:	83 ca 01             	or     $0x1,%edx
810019d2:	89 50 04             	mov    %edx,0x4(%eax)
810019d5:	83 ec 0c             	sub    $0xc,%esp
810019d8:	ff 75 08             	push   0x8(%ebp)
810019db:	e8 4e 06 00 00       	call   8100202e <__malloc_unlock>
810019e0:	83 c4 10             	add    $0x10,%esp
810019e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019e6:	83 c0 08             	add    $0x8,%eax
810019e9:	e9 c7 04 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
810019ee:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810019f5:	77 7f                	ja     81001a76 <_malloc_r+0x3de>
810019f7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810019fa:	c1 e8 03             	shr    $0x3,%eax
810019fd:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001a00:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001a05:	8b 58 04             	mov    0x4(%eax),%ebx
81001a08:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001a0b:	8d 50 03             	lea    0x3(%eax),%edx
81001a0e:	85 c0                	test   %eax,%eax
81001a10:	0f 48 c2             	cmovs  %edx,%eax
81001a13:	c1 f8 02             	sar    $0x2,%eax
81001a16:	ba 01 00 00 00       	mov    $0x1,%edx
81001a1b:	89 c1                	mov    %eax,%ecx
81001a1d:	d3 e2                	shl    %cl,%edx
81001a1f:	89 d0                	mov    %edx,%eax
81001a21:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81001a26:	09 d8                	or     %ebx,%eax
81001a28:	89 42 04             	mov    %eax,0x4(%edx)
81001a2b:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001a2e:	83 c0 01             	add    $0x1,%eax
81001a31:	01 c0                	add    %eax,%eax
81001a33:	c1 e0 02             	shl    $0x2,%eax
81001a36:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001a3b:	83 e8 08             	sub    $0x8,%eax
81001a3e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001a41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a44:	8b 40 08             	mov    0x8(%eax),%eax
81001a47:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001a4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a4d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001a50:	89 50 0c             	mov    %edx,0xc(%eax)
81001a53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a56:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001a59:	89 50 08             	mov    %edx,0x8(%eax)
81001a5c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a5f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a62:	89 50 08             	mov    %edx,0x8(%eax)
81001a65:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001a68:	8b 50 08             	mov    0x8(%eax),%edx
81001a6b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a6e:	89 50 0c             	mov    %edx,0xc(%eax)
81001a71:	e9 2f 01 00 00       	jmp    81001ba5 <_malloc_r+0x50d>
81001a76:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a79:	c1 e8 09             	shr    $0x9,%eax
81001a7c:	85 c0                	test   %eax,%eax
81001a7e:	75 08                	jne    81001a88 <_malloc_r+0x3f0>
81001a80:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a83:	c1 e8 03             	shr    $0x3,%eax
81001a86:	eb 77                	jmp    81001aff <_malloc_r+0x467>
81001a88:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a8b:	c1 e8 09             	shr    $0x9,%eax
81001a8e:	83 f8 04             	cmp    $0x4,%eax
81001a91:	77 0b                	ja     81001a9e <_malloc_r+0x406>
81001a93:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001a96:	c1 e8 06             	shr    $0x6,%eax
81001a99:	83 c0 38             	add    $0x38,%eax
81001a9c:	eb 61                	jmp    81001aff <_malloc_r+0x467>
81001a9e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001aa1:	c1 e8 09             	shr    $0x9,%eax
81001aa4:	83 f8 14             	cmp    $0x14,%eax
81001aa7:	77 0b                	ja     81001ab4 <_malloc_r+0x41c>
81001aa9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001aac:	c1 e8 09             	shr    $0x9,%eax
81001aaf:	83 c0 5b             	add    $0x5b,%eax
81001ab2:	eb 4b                	jmp    81001aff <_malloc_r+0x467>
81001ab4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001ab7:	c1 e8 09             	shr    $0x9,%eax
81001aba:	83 f8 54             	cmp    $0x54,%eax
81001abd:	77 0b                	ja     81001aca <_malloc_r+0x432>
81001abf:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001ac2:	c1 e8 0c             	shr    $0xc,%eax
81001ac5:	83 c0 6e             	add    $0x6e,%eax
81001ac8:	eb 35                	jmp    81001aff <_malloc_r+0x467>
81001aca:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001acd:	c1 e8 09             	shr    $0x9,%eax
81001ad0:	3d 54 01 00 00       	cmp    $0x154,%eax
81001ad5:	77 0b                	ja     81001ae2 <_malloc_r+0x44a>
81001ad7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001ada:	c1 e8 0f             	shr    $0xf,%eax
81001add:	83 c0 77             	add    $0x77,%eax
81001ae0:	eb 1d                	jmp    81001aff <_malloc_r+0x467>
81001ae2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001ae5:	c1 e8 09             	shr    $0x9,%eax
81001ae8:	3d 54 05 00 00       	cmp    $0x554,%eax
81001aed:	77 0b                	ja     81001afa <_malloc_r+0x462>
81001aef:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001af2:	c1 e8 12             	shr    $0x12,%eax
81001af5:	83 c0 7c             	add    $0x7c,%eax
81001af8:	eb 05                	jmp    81001aff <_malloc_r+0x467>
81001afa:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001aff:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001b02:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001b05:	83 c0 01             	add    $0x1,%eax
81001b08:	01 c0                	add    %eax,%eax
81001b0a:	c1 e0 02             	shl    $0x2,%eax
81001b0d:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001b12:	83 e8 08             	sub    $0x8,%eax
81001b15:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001b18:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001b1b:	8b 40 08             	mov    0x8(%eax),%eax
81001b1e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b21:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b24:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81001b27:	75 36                	jne    81001b5f <_malloc_r+0x4c7>
81001b29:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001b2e:	8b 58 04             	mov    0x4(%eax),%ebx
81001b31:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001b34:	8d 50 03             	lea    0x3(%eax),%edx
81001b37:	85 c0                	test   %eax,%eax
81001b39:	0f 48 c2             	cmovs  %edx,%eax
81001b3c:	c1 f8 02             	sar    $0x2,%eax
81001b3f:	ba 01 00 00 00       	mov    $0x1,%edx
81001b44:	89 c1                	mov    %eax,%ecx
81001b46:	d3 e2                	shl    %cl,%edx
81001b48:	89 d0                	mov    %edx,%eax
81001b4a:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81001b4f:	09 d8                	or     %ebx,%eax
81001b51:	89 42 04             	mov    %eax,0x4(%edx)
81001b54:	eb 28                	jmp    81001b7e <_malloc_r+0x4e6>
81001b56:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b59:	8b 40 08             	mov    0x8(%eax),%eax
81001b5c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b5f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b62:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81001b65:	74 0e                	je     81001b75 <_malloc_r+0x4dd>
81001b67:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b6a:	8b 40 04             	mov    0x4(%eax),%eax
81001b6d:	83 e0 fc             	and    $0xfffffffc,%eax
81001b70:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81001b73:	72 e1                	jb     81001b56 <_malloc_r+0x4be>
81001b75:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001b78:	8b 40 0c             	mov    0xc(%eax),%eax
81001b7b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001b7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b81:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001b84:	89 50 0c             	mov    %edx,0xc(%eax)
81001b87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b8a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001b8d:	89 50 08             	mov    %edx,0x8(%eax)
81001b90:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001b93:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b96:	89 50 08             	mov    %edx,0x8(%eax)
81001b99:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001b9c:	8b 50 08             	mov    0x8(%eax),%edx
81001b9f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ba2:	89 50 0c             	mov    %edx,0xc(%eax)
81001ba5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ba8:	8d 50 03             	lea    0x3(%eax),%edx
81001bab:	85 c0                	test   %eax,%eax
81001bad:	0f 48 c2             	cmovs  %edx,%eax
81001bb0:	c1 f8 02             	sar    $0x2,%eax
81001bb3:	ba 01 00 00 00       	mov    $0x1,%edx
81001bb8:	89 c1                	mov    %eax,%ecx
81001bba:	d3 e2                	shl    %cl,%edx
81001bbc:	89 d0                	mov    %edx,%eax
81001bbe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001bc1:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001bc6:	8b 40 04             	mov    0x4(%eax),%eax
81001bc9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001bcc:	0f 87 13 02 00 00    	ja     81001de5 <_malloc_r+0x74d>
81001bd2:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001bd7:	8b 40 04             	mov    0x4(%eax),%eax
81001bda:	23 45 e4             	and    -0x1c(%ebp),%eax
81001bdd:	85 c0                	test   %eax,%eax
81001bdf:	75 27                	jne    81001c08 <_malloc_r+0x570>
81001be1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001be4:	83 e0 fc             	and    $0xfffffffc,%eax
81001be7:	83 c0 04             	add    $0x4,%eax
81001bea:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bed:	d1 65 e4             	shll   -0x1c(%ebp)
81001bf0:	eb 07                	jmp    81001bf9 <_malloc_r+0x561>
81001bf2:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001bf6:	d1 65 e4             	shll   -0x1c(%ebp)
81001bf9:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001bfe:	8b 40 04             	mov    0x4(%eax),%eax
81001c01:	23 45 e4             	and    -0x1c(%ebp),%eax
81001c04:	85 c0                	test   %eax,%eax
81001c06:	74 ea                	je     81001bf2 <_malloc_r+0x55a>
81001c08:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c0b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001c0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c11:	83 c0 01             	add    $0x1,%eax
81001c14:	01 c0                	add    %eax,%eax
81001c16:	c1 e0 02             	shl    $0x2,%eax
81001c19:	05 a0 56 00 81       	add    $0x810056a0,%eax
81001c1e:	83 e8 08             	sub    $0x8,%eax
81001c21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c24:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c27:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001c2a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c2d:	8b 40 0c             	mov    0xc(%eax),%eax
81001c30:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c33:	e9 22 01 00 00       	jmp    81001d5a <_malloc_r+0x6c2>
81001c38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c3b:	8b 40 04             	mov    0x4(%eax),%eax
81001c3e:	83 e0 fc             	and    $0xfffffffc,%eax
81001c41:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001c44:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001c47:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001c4a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c4d:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001c51:	0f 8e 9e 00 00 00    	jle    81001cf5 <_malloc_r+0x65d>
81001c57:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001c5a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001c5d:	01 d0                	add    %edx,%eax
81001c5f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001c62:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001c65:	83 c8 01             	or     $0x1,%eax
81001c68:	89 c2                	mov    %eax,%edx
81001c6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c6d:	89 50 04             	mov    %edx,0x4(%eax)
81001c70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c73:	8b 40 0c             	mov    0xc(%eax),%eax
81001c76:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001c79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c7c:	8b 40 08             	mov    0x8(%eax),%eax
81001c7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001c82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001c85:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001c88:	89 50 0c             	mov    %edx,0xc(%eax)
81001c8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001c8e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001c91:	89 50 08             	mov    %edx,0x8(%eax)
81001c94:	b8 a8 56 00 81       	mov    $0x810056a8,%eax
81001c99:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001c9c:	89 50 0c             	mov    %edx,0xc(%eax)
81001c9f:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81001ca4:	8b 40 0c             	mov    0xc(%eax),%eax
81001ca7:	89 42 08             	mov    %eax,0x8(%edx)
81001caa:	ba a8 56 00 81       	mov    $0x810056a8,%edx
81001caf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cb2:	89 50 0c             	mov    %edx,0xc(%eax)
81001cb5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cb8:	8b 50 0c             	mov    0xc(%eax),%edx
81001cbb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cbe:	89 50 08             	mov    %edx,0x8(%eax)
81001cc1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cc4:	83 c8 01             	or     $0x1,%eax
81001cc7:	89 c2                	mov    %eax,%edx
81001cc9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001ccc:	89 50 04             	mov    %edx,0x4(%eax)
81001ccf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cd2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cd5:	01 c2                	add    %eax,%edx
81001cd7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cda:	89 02                	mov    %eax,(%edx)
81001cdc:	83 ec 0c             	sub    $0xc,%esp
81001cdf:	ff 75 08             	push   0x8(%ebp)
81001ce2:	e8 47 03 00 00       	call   8100202e <__malloc_unlock>
81001ce7:	83 c4 10             	add    $0x10,%esp
81001cea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ced:	83 c0 08             	add    $0x8,%eax
81001cf0:	e9 c0 01 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
81001cf5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001cf9:	78 56                	js     81001d51 <_malloc_r+0x6b9>
81001cfb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001cfe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001d01:	01 d0                	add    %edx,%eax
81001d03:	8b 50 04             	mov    0x4(%eax),%edx
81001d06:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001d09:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001d0c:	01 c8                	add    %ecx,%eax
81001d0e:	83 ca 01             	or     $0x1,%edx
81001d11:	89 50 04             	mov    %edx,0x4(%eax)
81001d14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d17:	8b 40 0c             	mov    0xc(%eax),%eax
81001d1a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d20:	8b 40 08             	mov    0x8(%eax),%eax
81001d23:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001d26:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001d29:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001d2c:	89 50 0c             	mov    %edx,0xc(%eax)
81001d2f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001d32:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001d35:	89 50 08             	mov    %edx,0x8(%eax)
81001d38:	83 ec 0c             	sub    $0xc,%esp
81001d3b:	ff 75 08             	push   0x8(%ebp)
81001d3e:	e8 eb 02 00 00       	call   8100202e <__malloc_unlock>
81001d43:	83 c4 10             	add    $0x10,%esp
81001d46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d49:	83 c0 08             	add    $0x8,%eax
81001d4c:	e9 64 01 00 00       	jmp    81001eb5 <_malloc_r+0x81d>
81001d51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d54:	8b 40 0c             	mov    0xc(%eax),%eax
81001d57:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d5d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001d60:	0f 85 d2 fe ff ff    	jne    81001c38 <_malloc_r+0x5a0>
81001d66:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001d6a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001d6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d71:	83 e0 03             	and    $0x3,%eax
81001d74:	85 c0                	test   %eax,%eax
81001d76:	0f 85 ae fe ff ff    	jne    81001c2a <_malloc_r+0x592>
81001d7c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d7f:	83 e0 03             	and    $0x3,%eax
81001d82:	85 c0                	test   %eax,%eax
81001d84:	75 19                	jne    81001d9f <_malloc_r+0x707>
81001d86:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001d8b:	8b 48 04             	mov    0x4(%eax),%ecx
81001d8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d91:	f7 d0                	not    %eax
81001d93:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81001d98:	21 c8                	and    %ecx,%eax
81001d9a:	89 42 04             	mov    %eax,0x4(%edx)
81001d9d:	eb 13                	jmp    81001db2 <_malloc_r+0x71a>
81001d9f:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81001da3:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81001da7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001daa:	8b 40 08             	mov    0x8(%eax),%eax
81001dad:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001db0:	74 ca                	je     81001d7c <_malloc_r+0x6e4>
81001db2:	d1 65 e4             	shll   -0x1c(%ebp)
81001db5:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001dba:	8b 40 04             	mov    0x4(%eax),%eax
81001dbd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001dc0:	77 23                	ja     81001de5 <_malloc_r+0x74d>
81001dc2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001dc6:	74 1d                	je     81001de5 <_malloc_r+0x74d>
81001dc8:	eb 07                	jmp    81001dd1 <_malloc_r+0x739>
81001dca:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001dce:	d1 65 e4             	shll   -0x1c(%ebp)
81001dd1:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001dd6:	8b 40 04             	mov    0x4(%eax),%eax
81001dd9:	23 45 e4             	and    -0x1c(%ebp),%eax
81001ddc:	85 c0                	test   %eax,%eax
81001dde:	74 ea                	je     81001dca <_malloc_r+0x732>
81001de0:	e9 23 fe ff ff       	jmp    81001c08 <_malloc_r+0x570>
81001de5:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001dea:	8b 40 08             	mov    0x8(%eax),%eax
81001ded:	8b 40 04             	mov    0x4(%eax),%eax
81001df0:	83 e0 fc             	and    $0xfffffffc,%eax
81001df3:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001df6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001df9:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001dfe:	8b 40 08             	mov    0x8(%eax),%eax
81001e01:	8b 40 04             	mov    0x4(%eax),%eax
81001e04:	83 e0 fc             	and    $0xfffffffc,%eax
81001e07:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001e0a:	77 06                	ja     81001e12 <_malloc_r+0x77a>
81001e0c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001e10:	7f 53                	jg     81001e65 <_malloc_r+0x7cd>
81001e12:	83 ec 08             	sub    $0x8,%esp
81001e15:	ff 75 d0             	push   -0x30(%ebp)
81001e18:	ff 75 08             	push   0x8(%ebp)
81001e1b:	e8 e5 f5 ff ff       	call   81001405 <malloc_extend_top>
81001e20:	83 c4 10             	add    $0x10,%esp
81001e23:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001e28:	8b 40 08             	mov    0x8(%eax),%eax
81001e2b:	8b 40 04             	mov    0x4(%eax),%eax
81001e2e:	83 e0 fc             	and    $0xfffffffc,%eax
81001e31:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001e34:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e37:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001e3c:	8b 40 08             	mov    0x8(%eax),%eax
81001e3f:	8b 40 04             	mov    0x4(%eax),%eax
81001e42:	83 e0 fc             	and    $0xfffffffc,%eax
81001e45:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001e48:	77 06                	ja     81001e50 <_malloc_r+0x7b8>
81001e4a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001e4e:	7f 15                	jg     81001e65 <_malloc_r+0x7cd>
81001e50:	83 ec 0c             	sub    $0xc,%esp
81001e53:	ff 75 08             	push   0x8(%ebp)
81001e56:	e8 d3 01 00 00       	call   8100202e <__malloc_unlock>
81001e5b:	83 c4 10             	add    $0x10,%esp
81001e5e:	b8 00 00 00 00       	mov    $0x0,%eax
81001e63:	eb 50                	jmp    81001eb5 <_malloc_r+0x81d>
81001e65:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001e6a:	8b 40 08             	mov    0x8(%eax),%eax
81001e6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001e73:	83 c8 01             	or     $0x1,%eax
81001e76:	89 c2                	mov    %eax,%edx
81001e78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e7b:	89 50 04             	mov    %edx,0x4(%eax)
81001e7e:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81001e83:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001e86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001e89:	01 c8                	add    %ecx,%eax
81001e8b:	89 42 08             	mov    %eax,0x8(%edx)
81001e8e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e91:	83 c8 01             	or     $0x1,%eax
81001e94:	89 c2                	mov    %eax,%edx
81001e96:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81001e9b:	8b 40 08             	mov    0x8(%eax),%eax
81001e9e:	89 50 04             	mov    %edx,0x4(%eax)
81001ea1:	83 ec 0c             	sub    $0xc,%esp
81001ea4:	ff 75 08             	push   0x8(%ebp)
81001ea7:	e8 82 01 00 00       	call   8100202e <__malloc_unlock>
81001eac:	83 c4 10             	add    $0x10,%esp
81001eaf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb2:	83 c0 08             	add    $0x8,%eax
81001eb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001eb8:	c9                   	leave  
81001eb9:	c3                   	ret    
81001eba:	66 90                	xchg   %ax,%ax
81001ebc:	66 90                	xchg   %ax,%ax
81001ebe:	66 90                	xchg   %ax,%ax

81001ec0 <memchr>:
81001ec0:	55                   	push   %ebp
81001ec1:	89 e5                	mov    %esp,%ebp
81001ec3:	57                   	push   %edi
81001ec4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001ec8:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001ecb:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ece:	31 d2                	xor    %edx,%edx
81001ed0:	85 c9                	test   %ecx,%ecx
81001ed2:	74 79                	je     81001f4d <L20>
81001ed4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001eda:	74 28                	je     81001f04 <L5>
81001edc:	3a 07                	cmp    (%edi),%al
81001ede:	74 6a                	je     81001f4a <L15>
81001ee0:	47                   	inc    %edi
81001ee1:	49                   	dec    %ecx
81001ee2:	74 69                	je     81001f4d <L20>
81001ee4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001eea:	74 18                	je     81001f04 <L5>
81001eec:	3a 07                	cmp    (%edi),%al
81001eee:	74 5a                	je     81001f4a <L15>
81001ef0:	47                   	inc    %edi
81001ef1:	49                   	dec    %ecx
81001ef2:	74 59                	je     81001f4d <L20>
81001ef4:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001efa:	74 08                	je     81001f04 <L5>
81001efc:	3a 07                	cmp    (%edi),%al
81001efe:	74 4a                	je     81001f4a <L15>
81001f00:	47                   	inc    %edi
81001f01:	49                   	dec    %ecx
81001f02:	74 49                	je     81001f4d <L20>

81001f04 <L5>:
81001f04:	88 c4                	mov    %al,%ah
81001f06:	89 c2                	mov    %eax,%edx
81001f08:	c1 e2 10             	shl    $0x10,%edx
81001f0b:	09 d0                	or     %edx,%eax
81001f0d:	53                   	push   %ebx
81001f0e:	66 90                	xchg   %ax,%ax

81001f10 <L8>:
81001f10:	83 e9 04             	sub    $0x4,%ecx
81001f13:	72 1c                	jb     81001f31 <L9>
81001f15:	8b 17                	mov    (%edi),%edx
81001f17:	83 c7 04             	add    $0x4,%edi
81001f1a:	31 c2                	xor    %eax,%edx
81001f1c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001f22:	f7 d2                	not    %edx
81001f24:	21 d3                	and    %edx,%ebx
81001f26:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001f2c:	74 e2                	je     81001f10 <L8>
81001f2e:	83 ef 04             	sub    $0x4,%edi

81001f31 <L9>:
81001f31:	5b                   	pop    %ebx
81001f32:	31 d2                	xor    %edx,%edx
81001f34:	83 c1 04             	add    $0x4,%ecx
81001f37:	74 14                	je     81001f4d <L20>
81001f39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001f40 <L10>:
81001f40:	3a 07                	cmp    (%edi),%al
81001f42:	74 06                	je     81001f4a <L15>
81001f44:	47                   	inc    %edi
81001f45:	49                   	dec    %ecx
81001f46:	75 f8                	jne    81001f40 <L10>
81001f48:	31 ff                	xor    %edi,%edi

81001f4a <L15>:
81001f4a:	4a                   	dec    %edx
81001f4b:	21 fa                	and    %edi,%edx

81001f4d <L20>:
81001f4d:	89 d0                	mov    %edx,%eax
81001f4f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001f52:	5f                   	pop    %edi
81001f53:	c9                   	leave  
81001f54:	c3                   	ret    
81001f55:	66 90                	xchg   %ax,%ax
81001f57:	90                   	nop

81001f58 <memcpy>:
81001f58:	55                   	push   %ebp
81001f59:	89 e5                	mov    %esp,%ebp
81001f5b:	56                   	push   %esi
81001f5c:	57                   	push   %edi
81001f5d:	53                   	push   %ebx
81001f5e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001f61:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001f64:	8b 75 0c             	mov    0xc(%ebp),%esi
81001f67:	fc                   	cld    
81001f68:	83 f9 08             	cmp    $0x8,%ecx
81001f6b:	76 26                	jbe    81001f93 <memcpy+0x3b>
81001f6d:	89 fa                	mov    %edi,%edx
81001f6f:	89 cb                	mov    %ecx,%ebx
81001f71:	83 e2 03             	and    $0x3,%edx
81001f74:	74 10                	je     81001f86 <memcpy+0x2e>
81001f76:	b9 04 00 00 00       	mov    $0x4,%ecx
81001f7b:	29 d1                	sub    %edx,%ecx
81001f7d:	83 e1 03             	and    $0x3,%ecx
81001f80:	29 cb                	sub    %ecx,%ebx
81001f82:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001f84:	89 d9                	mov    %ebx,%ecx
81001f86:	c1 e9 02             	shr    $0x2,%ecx
81001f89:	8d 76 00             	lea    0x0(%esi),%esi
81001f8c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001f8e:	89 d9                	mov    %ebx,%ecx
81001f90:	83 e1 03             	and    $0x3,%ecx
81001f93:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001f95:	8b 45 08             	mov    0x8(%ebp),%eax
81001f98:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001f9b:	5b                   	pop    %ebx
81001f9c:	5f                   	pop    %edi
81001f9d:	5e                   	pop    %esi
81001f9e:	c9                   	leave  
81001f9f:	c3                   	ret    

81001fa0 <memset>:
81001fa0:	55                   	push   %ebp
81001fa1:	89 e5                	mov    %esp,%ebp
81001fa3:	57                   	push   %edi
81001fa4:	8b 7d 08             	mov    0x8(%ebp),%edi
81001fa7:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001fab:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001fae:	fc                   	cld    
81001faf:	83 f9 10             	cmp    $0x10,%ecx
81001fb2:	76 69                	jbe    8100201d <memset+0x7d>
81001fb4:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001fba:	74 4c                	je     81002008 <memset+0x68>
81001fbc:	88 07                	mov    %al,(%edi)
81001fbe:	47                   	inc    %edi
81001fbf:	49                   	dec    %ecx
81001fc0:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001fc6:	74 40                	je     81002008 <memset+0x68>
81001fc8:	88 07                	mov    %al,(%edi)
81001fca:	47                   	inc    %edi
81001fcb:	49                   	dec    %ecx
81001fcc:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001fd2:	74 34                	je     81002008 <memset+0x68>
81001fd4:	88 07                	mov    %al,(%edi)
81001fd6:	47                   	inc    %edi
81001fd7:	49                   	dec    %ecx
81001fd8:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001fde:	74 28                	je     81002008 <memset+0x68>
81001fe0:	88 07                	mov    %al,(%edi)
81001fe2:	47                   	inc    %edi
81001fe3:	49                   	dec    %ecx
81001fe4:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001fea:	74 1c                	je     81002008 <memset+0x68>
81001fec:	88 07                	mov    %al,(%edi)
81001fee:	47                   	inc    %edi
81001fef:	49                   	dec    %ecx
81001ff0:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ff6:	74 10                	je     81002008 <memset+0x68>
81001ff8:	88 07                	mov    %al,(%edi)
81001ffa:	47                   	inc    %edi
81001ffb:	49                   	dec    %ecx
81001ffc:	f7 c7 07 00 00 00    	test   $0x7,%edi
81002002:	74 04                	je     81002008 <memset+0x68>
81002004:	88 07                	mov    %al,(%edi)
81002006:	47                   	inc    %edi
81002007:	49                   	dec    %ecx
81002008:	88 c4                	mov    %al,%ah
8100200a:	89 c2                	mov    %eax,%edx
8100200c:	c1 e2 10             	shl    $0x10,%edx
8100200f:	09 d0                	or     %edx,%eax
81002011:	89 ca                	mov    %ecx,%edx
81002013:	c1 e9 02             	shr    $0x2,%ecx
81002016:	83 e2 03             	and    $0x3,%edx
81002019:	f3 ab                	rep stos %eax,%es:(%edi)
8100201b:	89 d1                	mov    %edx,%ecx
8100201d:	f3 aa                	rep stos %al,%es:(%edi)
8100201f:	8b 45 08             	mov    0x8(%ebp),%eax
81002022:	8d 65 fc             	lea    -0x4(%ebp),%esp
81002025:	5f                   	pop    %edi
81002026:	c9                   	leave  
81002027:	c3                   	ret    

81002028 <__malloc_lock>:
81002028:	55                   	push   %ebp
81002029:	89 e5                	mov    %esp,%ebp
8100202b:	90                   	nop
8100202c:	5d                   	pop    %ebp
8100202d:	c3                   	ret    

8100202e <__malloc_unlock>:
8100202e:	55                   	push   %ebp
8100202f:	89 e5                	mov    %esp,%ebp
81002031:	90                   	nop
81002032:	5d                   	pop    %ebp
81002033:	c3                   	ret    

81002034 <__sprint_r>:
81002034:	55                   	push   %ebp
81002035:	89 e5                	mov    %esp,%ebp
81002037:	56                   	push   %esi
81002038:	53                   	push   %ebx
81002039:	83 ec 10             	sub    $0x10,%esp
8100203c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100203f:	be 00 00 00 00       	mov    $0x0,%esi
81002044:	8b 43 08             	mov    0x8(%ebx),%eax
81002047:	85 c0                	test   %eax,%eax
81002049:	75 11                	jne    8100205c <__sprint_r+0x28>
8100204b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002052:	b8 00 00 00 00       	mov    $0x0,%eax
81002057:	e9 ad 00 00 00       	jmp    81002109 <__sprint_r+0xd5>
8100205c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100205f:	8b 40 64             	mov    0x64(%eax),%eax
81002062:	25 00 20 00 00       	and    $0x2000,%eax
81002067:	85 c0                	test   %eax,%eax
81002069:	74 7a                	je     810020e5 <__sprint_r+0xb1>
8100206b:	8b 03                	mov    (%ebx),%eax
8100206d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002070:	eb 6a                	jmp    810020dc <__sprint_r+0xa8>
81002072:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002075:	8b 00                	mov    (%eax),%eax
81002077:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100207a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100207d:	8b 40 04             	mov    0x4(%eax),%eax
81002080:	c1 e8 02             	shr    $0x2,%eax
81002083:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002086:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100208d:	eb 33                	jmp    810020c2 <__sprint_r+0x8e>
8100208f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002092:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002099:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100209c:	01 d0                	add    %edx,%eax
8100209e:	8b 00                	mov    (%eax),%eax
810020a0:	83 ec 04             	sub    $0x4,%esp
810020a3:	ff 75 0c             	push   0xc(%ebp)
810020a6:	50                   	push   %eax
810020a7:	ff 75 08             	push   0x8(%ebp)
810020aa:	e8 2b 18 00 00       	call   810038da <_fputwc_r>
810020af:	83 c4 10             	add    $0x10,%esp
810020b2:	83 f8 ff             	cmp    $0xffffffff,%eax
810020b5:	75 07                	jne    810020be <__sprint_r+0x8a>
810020b7:	be ff ff ff ff       	mov    $0xffffffff,%esi
810020bc:	eb 3b                	jmp    810020f9 <__sprint_r+0xc5>
810020be:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810020c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020c5:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810020c8:	7c c5                	jl     8100208f <__sprint_r+0x5b>
810020ca:	8b 43 08             	mov    0x8(%ebx),%eax
810020cd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810020d0:	c1 e2 02             	shl    $0x2,%edx
810020d3:	29 d0                	sub    %edx,%eax
810020d5:	89 43 08             	mov    %eax,0x8(%ebx)
810020d8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810020dc:	8b 43 08             	mov    0x8(%ebx),%eax
810020df:	85 c0                	test   %eax,%eax
810020e1:	75 8f                	jne    81002072 <__sprint_r+0x3e>
810020e3:	eb 14                	jmp    810020f9 <__sprint_r+0xc5>
810020e5:	83 ec 04             	sub    $0x4,%esp
810020e8:	53                   	push   %ebx
810020e9:	ff 75 0c             	push   0xc(%ebp)
810020ec:	ff 75 08             	push   0x8(%ebp)
810020ef:	e8 85 18 00 00       	call   81003979 <__sfvwrite_r>
810020f4:	83 c4 10             	add    $0x10,%esp
810020f7:	89 c6                	mov    %eax,%esi
810020f9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002100:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002107:	89 f0                	mov    %esi,%eax
81002109:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100210c:	5b                   	pop    %ebx
8100210d:	5e                   	pop    %esi
8100210e:	5d                   	pop    %ebp
8100210f:	c3                   	ret    

81002110 <__sfputc_r>:
81002110:	55                   	push   %ebp
81002111:	89 e5                	mov    %esp,%ebp
81002113:	83 ec 08             	sub    $0x8,%esp
81002116:	8b 45 10             	mov    0x10(%ebp),%eax
81002119:	8b 40 08             	mov    0x8(%eax),%eax
8100211c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100211f:	8b 45 10             	mov    0x10(%ebp),%eax
81002122:	89 50 08             	mov    %edx,0x8(%eax)
81002125:	8b 45 10             	mov    0x10(%ebp),%eax
81002128:	8b 40 08             	mov    0x8(%eax),%eax
8100212b:	85 c0                	test   %eax,%eax
8100212d:	79 17                	jns    81002146 <__sfputc_r+0x36>
8100212f:	8b 45 10             	mov    0x10(%ebp),%eax
81002132:	8b 50 08             	mov    0x8(%eax),%edx
81002135:	8b 45 10             	mov    0x10(%ebp),%eax
81002138:	8b 40 18             	mov    0x18(%eax),%eax
8100213b:	39 c2                	cmp    %eax,%edx
8100213d:	7c 21                	jl     81002160 <__sfputc_r+0x50>
8100213f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002142:	3c 0a                	cmp    $0xa,%al
81002144:	74 1a                	je     81002160 <__sfputc_r+0x50>
81002146:	8b 45 10             	mov    0x10(%ebp),%eax
81002149:	8b 00                	mov    (%eax),%eax
8100214b:	8d 48 01             	lea    0x1(%eax),%ecx
8100214e:	8b 55 10             	mov    0x10(%ebp),%edx
81002151:	89 0a                	mov    %ecx,(%edx)
81002153:	8b 55 0c             	mov    0xc(%ebp),%edx
81002156:	88 10                	mov    %dl,(%eax)
81002158:	0f b6 00             	movzbl (%eax),%eax
8100215b:	0f b6 c0             	movzbl %al,%eax
8100215e:	eb 14                	jmp    81002174 <__sfputc_r+0x64>
81002160:	83 ec 04             	sub    $0x4,%esp
81002163:	ff 75 10             	push   0x10(%ebp)
81002166:	ff 75 0c             	push   0xc(%ebp)
81002169:	ff 75 08             	push   0x8(%ebp)
8100216c:	e8 1b 12 00 00       	call   8100338c <__swbuf_r>
81002171:	83 c4 10             	add    $0x10,%esp
81002174:	c9                   	leave  
81002175:	c3                   	ret    

81002176 <__sfputs_r>:
81002176:	55                   	push   %ebp
81002177:	89 e5                	mov    %esp,%ebp
81002179:	53                   	push   %ebx
8100217a:	83 ec 14             	sub    $0x14,%esp
8100217d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002180:	8b 40 64             	mov    0x64(%eax),%eax
81002183:	25 00 20 00 00       	and    $0x2000,%eax
81002188:	85 c0                	test   %eax,%eax
8100218a:	74 4c                	je     810021d8 <__sfputs_r+0x62>
8100218c:	8b 45 10             	mov    0x10(%ebp),%eax
8100218f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002192:	bb 00 00 00 00       	mov    $0x0,%ebx
81002197:	eb 31                	jmp    810021ca <__sfputs_r+0x54>
81002199:	89 d8                	mov    %ebx,%eax
8100219b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810021a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021a5:	01 d0                	add    %edx,%eax
810021a7:	8b 00                	mov    (%eax),%eax
810021a9:	83 ec 04             	sub    $0x4,%esp
810021ac:	ff 75 0c             	push   0xc(%ebp)
810021af:	50                   	push   %eax
810021b0:	ff 75 08             	push   0x8(%ebp)
810021b3:	e8 22 17 00 00       	call   810038da <_fputwc_r>
810021b8:	83 c4 10             	add    $0x10,%esp
810021bb:	83 f8 ff             	cmp    $0xffffffff,%eax
810021be:	75 07                	jne    810021c7 <__sfputs_r+0x51>
810021c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810021c5:	eb 52                	jmp    81002219 <__sfputs_r+0xa3>
810021c7:	83 c3 01             	add    $0x1,%ebx
810021ca:	8b 45 14             	mov    0x14(%ebp),%eax
810021cd:	c1 e8 02             	shr    $0x2,%eax
810021d0:	89 da                	mov    %ebx,%edx
810021d2:	39 d0                	cmp    %edx,%eax
810021d4:	77 c3                	ja     81002199 <__sfputs_r+0x23>
810021d6:	eb 3c                	jmp    81002214 <__sfputs_r+0x9e>
810021d8:	bb 00 00 00 00       	mov    $0x0,%ebx
810021dd:	eb 2e                	jmp    8100220d <__sfputs_r+0x97>
810021df:	89 da                	mov    %ebx,%edx
810021e1:	8b 45 10             	mov    0x10(%ebp),%eax
810021e4:	01 d0                	add    %edx,%eax
810021e6:	0f b6 00             	movzbl (%eax),%eax
810021e9:	0f be c0             	movsbl %al,%eax
810021ec:	83 ec 04             	sub    $0x4,%esp
810021ef:	ff 75 0c             	push   0xc(%ebp)
810021f2:	50                   	push   %eax
810021f3:	ff 75 08             	push   0x8(%ebp)
810021f6:	e8 15 ff ff ff       	call   81002110 <__sfputc_r>
810021fb:	83 c4 10             	add    $0x10,%esp
810021fe:	83 f8 ff             	cmp    $0xffffffff,%eax
81002201:	75 07                	jne    8100220a <__sfputs_r+0x94>
81002203:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002208:	eb 0f                	jmp    81002219 <__sfputs_r+0xa3>
8100220a:	83 c3 01             	add    $0x1,%ebx
8100220d:	89 d8                	mov    %ebx,%eax
8100220f:	39 45 14             	cmp    %eax,0x14(%ebp)
81002212:	77 cb                	ja     810021df <__sfputs_r+0x69>
81002214:	b8 00 00 00 00       	mov    $0x0,%eax
81002219:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100221c:	c9                   	leave  
8100221d:	c3                   	ret    

8100221e <vfiprintf>:
8100221e:	55                   	push   %ebp
8100221f:	89 e5                	mov    %esp,%ebp
81002221:	83 ec 18             	sub    $0x18,%esp
81002224:	a1 84 56 00 81       	mov    0x81005684,%eax
81002229:	ff 75 10             	push   0x10(%ebp)
8100222c:	ff 75 0c             	push   0xc(%ebp)
8100222f:	ff 75 08             	push   0x8(%ebp)
81002232:	50                   	push   %eax
81002233:	e8 0b 00 00 00       	call   81002243 <_vfiprintf_r>
81002238:	83 c4 10             	add    $0x10,%esp
8100223b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100223e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002241:	c9                   	leave  
81002242:	c3                   	ret    

81002243 <_vfiprintf_r>:
81002243:	55                   	push   %ebp
81002244:	89 e5                	mov    %esp,%ebp
81002246:	57                   	push   %edi
81002247:	56                   	push   %esi
81002248:	53                   	push   %ebx
81002249:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100224f:	c7 45 e4 76 21 00 81 	movl   $0x81002176,-0x1c(%ebp)
81002256:	8b 45 08             	mov    0x8(%ebp),%eax
81002259:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100225c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002260:	74 18                	je     8100227a <_vfiprintf_r+0x37>
81002262:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002265:	8b 40 38             	mov    0x38(%eax),%eax
81002268:	85 c0                	test   %eax,%eax
8100226a:	75 0e                	jne    8100227a <_vfiprintf_r+0x37>
8100226c:	83 ec 0c             	sub    $0xc,%esp
8100226f:	ff 75 e0             	push   -0x20(%ebp)
81002272:	e8 13 ea ff ff       	call   81000c8a <__sinit>
81002277:	83 c4 10             	add    $0x10,%esp
8100227a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100227d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002281:	98                   	cwtl   
81002282:	83 e0 08             	and    $0x8,%eax
81002285:	85 c0                	test   %eax,%eax
81002287:	74 0a                	je     81002293 <_vfiprintf_r+0x50>
81002289:	8b 45 0c             	mov    0xc(%ebp),%eax
8100228c:	8b 40 10             	mov    0x10(%eax),%eax
8100228f:	85 c0                	test   %eax,%eax
81002291:	75 1f                	jne    810022b2 <_vfiprintf_r+0x6f>
81002293:	83 ec 08             	sub    $0x8,%esp
81002296:	ff 75 0c             	push   0xc(%ebp)
81002299:	ff 75 08             	push   0x8(%ebp)
8100229c:	e8 64 12 00 00       	call   81003505 <__swsetup_r>
810022a1:	83 c4 10             	add    $0x10,%esp
810022a4:	85 c0                	test   %eax,%eax
810022a6:	74 0a                	je     810022b2 <_vfiprintf_r+0x6f>
810022a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022ad:	e9 df 02 00 00       	jmp    81002591 <_vfiprintf_r+0x34e>
810022b2:	8b 5d 10             	mov    0x10(%ebp),%ebx
810022b5:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810022bc:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810022c0:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810022c4:	8b 45 14             	mov    0x14(%ebp),%eax
810022c7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810022cd:	89 de                	mov    %ebx,%esi
810022cf:	eb 03                	jmp    810022d4 <_vfiprintf_r+0x91>
810022d1:	83 c3 01             	add    $0x1,%ebx
810022d4:	0f b6 03             	movzbl (%ebx),%eax
810022d7:	84 c0                	test   %al,%al
810022d9:	74 07                	je     810022e2 <_vfiprintf_r+0x9f>
810022db:	0f b6 03             	movzbl (%ebx),%eax
810022de:	3c 25                	cmp    $0x25,%al
810022e0:	75 ef                	jne    810022d1 <_vfiprintf_r+0x8e>
810022e2:	89 d8                	mov    %ebx,%eax
810022e4:	29 f0                	sub    %esi,%eax
810022e6:	85 c0                	test   %eax,%eax
810022e8:	74 2b                	je     81002315 <_vfiprintf_r+0xd2>
810022ea:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810022f0:	50                   	push   %eax
810022f1:	56                   	push   %esi
810022f2:	ff 75 0c             	push   0xc(%ebp)
810022f5:	ff 75 08             	push   0x8(%ebp)
810022f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810022fb:	ff d0                	call   *%eax
810022fd:	83 c4 10             	add    $0x10,%esp
81002300:	83 f8 ff             	cmp    $0xffffffff,%eax
81002303:	0f 84 68 02 00 00    	je     81002571 <_vfiprintf_r+0x32e>
81002309:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100230c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81002312:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002315:	0f b6 03             	movzbl (%ebx),%eax
81002318:	84 c0                	test   %al,%al
8100231a:	0f 84 54 02 00 00    	je     81002574 <_vfiprintf_r+0x331>
81002320:	83 c3 01             	add    $0x1,%ebx
81002323:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100232a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81002331:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81002338:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100233f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81002343:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100234a:	c7 45 dc d4 4e 00 81 	movl   $0x81004ed4,-0x24(%ebp)
81002351:	eb 1b                	jmp    8100236e <_vfiprintf_r+0x12b>
81002353:	8b 55 80             	mov    -0x80(%ebp),%edx
81002356:	89 f0                	mov    %esi,%eax
81002358:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100235b:	be 01 00 00 00       	mov    $0x1,%esi
81002360:	89 c1                	mov    %eax,%ecx
81002362:	d3 e6                	shl    %cl,%esi
81002364:	89 f0                	mov    %esi,%eax
81002366:	09 d0                	or     %edx,%eax
81002368:	89 45 80             	mov    %eax,-0x80(%ebp)
8100236b:	83 c3 01             	add    $0x1,%ebx
8100236e:	0f b6 03             	movzbl (%ebx),%eax
81002371:	0f be c0             	movsbl %al,%eax
81002374:	83 ec 04             	sub    $0x4,%esp
81002377:	6a 05                	push   $0x5
81002379:	50                   	push   %eax
8100237a:	ff 75 dc             	push   -0x24(%ebp)
8100237d:	e8 3e fb ff ff       	call   81001ec0 <memchr>
81002382:	83 c4 10             	add    $0x10,%esp
81002385:	89 c6                	mov    %eax,%esi
81002387:	85 f6                	test   %esi,%esi
81002389:	75 c8                	jne    81002353 <_vfiprintf_r+0x110>
8100238b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100238e:	83 e0 10             	and    $0x10,%eax
81002391:	85 c0                	test   %eax,%eax
81002393:	74 04                	je     81002399 <_vfiprintf_r+0x156>
81002395:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81002399:	8b 45 80             	mov    -0x80(%ebp),%eax
8100239c:	83 e0 08             	and    $0x8,%eax
8100239f:	85 c0                	test   %eax,%eax
810023a1:	74 04                	je     810023a7 <_vfiprintf_r+0x164>
810023a3:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810023a7:	0f b6 03             	movzbl (%ebx),%eax
810023aa:	3c 2a                	cmp    $0x2a,%al
810023ac:	75 50                	jne    810023fe <_vfiprintf_r+0x1bb>
810023ae:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810023b4:	8d 50 04             	lea    0x4(%eax),%edx
810023b7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810023bd:	8b 00                	mov    (%eax),%eax
810023bf:	89 45 8c             	mov    %eax,-0x74(%ebp)
810023c2:	8b 45 8c             	mov    -0x74(%ebp),%eax
810023c5:	85 c0                	test   %eax,%eax
810023c7:	79 11                	jns    810023da <_vfiprintf_r+0x197>
810023c9:	8b 45 8c             	mov    -0x74(%ebp),%eax
810023cc:	f7 d8                	neg    %eax
810023ce:	89 45 8c             	mov    %eax,-0x74(%ebp)
810023d1:	8b 45 80             	mov    -0x80(%ebp),%eax
810023d4:	83 c8 02             	or     $0x2,%eax
810023d7:	89 45 80             	mov    %eax,-0x80(%ebp)
810023da:	83 c3 01             	add    $0x1,%ebx
810023dd:	eb 2d                	jmp    8100240c <_vfiprintf_r+0x1c9>
810023df:	8b 55 8c             	mov    -0x74(%ebp),%edx
810023e2:	89 d0                	mov    %edx,%eax
810023e4:	c1 e0 02             	shl    $0x2,%eax
810023e7:	01 d0                	add    %edx,%eax
810023e9:	01 c0                	add    %eax,%eax
810023eb:	89 c2                	mov    %eax,%edx
810023ed:	0f b6 03             	movzbl (%ebx),%eax
810023f0:	0f be c0             	movsbl %al,%eax
810023f3:	83 e8 30             	sub    $0x30,%eax
810023f6:	01 d0                	add    %edx,%eax
810023f8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810023fb:	83 c3 01             	add    $0x1,%ebx
810023fe:	0f b6 03             	movzbl (%ebx),%eax
81002401:	0f be c0             	movsbl %al,%eax
81002404:	83 e8 30             	sub    $0x30,%eax
81002407:	83 f8 09             	cmp    $0x9,%eax
8100240a:	76 d3                	jbe    810023df <_vfiprintf_r+0x19c>
8100240c:	0f b6 03             	movzbl (%ebx),%eax
8100240f:	3c 2e                	cmp    $0x2e,%al
81002411:	75 67                	jne    8100247a <_vfiprintf_r+0x237>
81002413:	83 c3 01             	add    $0x1,%ebx
81002416:	0f b6 03             	movzbl (%ebx),%eax
81002419:	3c 2a                	cmp    $0x2a,%al
8100241b:	75 27                	jne    81002444 <_vfiprintf_r+0x201>
8100241d:	83 c3 01             	add    $0x1,%ebx
81002420:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002426:	8d 50 04             	lea    0x4(%eax),%edx
81002429:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100242f:	8b 00                	mov    (%eax),%eax
81002431:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002434:	8b 45 84             	mov    -0x7c(%ebp),%eax
81002437:	85 c0                	test   %eax,%eax
81002439:	79 3f                	jns    8100247a <_vfiprintf_r+0x237>
8100243b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81002442:	eb 36                	jmp    8100247a <_vfiprintf_r+0x237>
81002444:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100244b:	eb 1f                	jmp    8100246c <_vfiprintf_r+0x229>
8100244d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81002450:	89 d0                	mov    %edx,%eax
81002452:	c1 e0 02             	shl    $0x2,%eax
81002455:	01 d0                	add    %edx,%eax
81002457:	01 c0                	add    %eax,%eax
81002459:	89 c2                	mov    %eax,%edx
8100245b:	0f b6 03             	movzbl (%ebx),%eax
8100245e:	0f be c0             	movsbl %al,%eax
81002461:	83 e8 30             	sub    $0x30,%eax
81002464:	01 d0                	add    %edx,%eax
81002466:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002469:	83 c3 01             	add    $0x1,%ebx
8100246c:	0f b6 03             	movzbl (%ebx),%eax
8100246f:	0f be c0             	movsbl %al,%eax
81002472:	83 e8 30             	sub    $0x30,%eax
81002475:	83 f8 09             	cmp    $0x9,%eax
81002478:	76 d3                	jbe    8100244d <_vfiprintf_r+0x20a>
8100247a:	c7 45 dc da 4e 00 81 	movl   $0x81004eda,-0x24(%ebp)
81002481:	0f b6 03             	movzbl (%ebx),%eax
81002484:	0f be c0             	movsbl %al,%eax
81002487:	83 ec 04             	sub    $0x4,%esp
8100248a:	6a 03                	push   $0x3
8100248c:	50                   	push   %eax
8100248d:	ff 75 dc             	push   -0x24(%ebp)
81002490:	e8 2b fa ff ff       	call   81001ec0 <memchr>
81002495:	83 c4 10             	add    $0x10,%esp
81002498:	89 c6                	mov    %eax,%esi
8100249a:	85 f6                	test   %esi,%esi
8100249c:	74 1b                	je     810024b9 <_vfiprintf_r+0x276>
8100249e:	8b 55 80             	mov    -0x80(%ebp),%edx
810024a1:	89 f0                	mov    %esi,%eax
810024a3:	2b 45 dc             	sub    -0x24(%ebp),%eax
810024a6:	be 40 00 00 00       	mov    $0x40,%esi
810024ab:	89 c1                	mov    %eax,%ecx
810024ad:	d3 e6                	shl    %cl,%esi
810024af:	89 f0                	mov    %esi,%eax
810024b1:	09 d0                	or     %edx,%eax
810024b3:	89 45 80             	mov    %eax,-0x80(%ebp)
810024b6:	83 c3 01             	add    $0x1,%ebx
810024b9:	89 d8                	mov    %ebx,%eax
810024bb:	8d 58 01             	lea    0x1(%eax),%ebx
810024be:	0f b6 00             	movzbl (%eax),%eax
810024c1:	88 45 98             	mov    %al,-0x68(%ebp)
810024c4:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810024c8:	0f be c0             	movsbl %al,%eax
810024cb:	83 ec 04             	sub    $0x4,%esp
810024ce:	6a 06                	push   $0x6
810024d0:	50                   	push   %eax
810024d1:	68 de 4e 00 81       	push   $0x81004ede
810024d6:	e8 e5 f9 ff ff       	call   81001ec0 <memchr>
810024db:	83 c4 10             	add    $0x10,%esp
810024de:	89 c6                	mov    %eax,%esi
810024e0:	85 f6                	test   %esi,%esi
810024e2:	74 5a                	je     8100253e <_vfiprintf_r+0x2fb>
810024e4:	b8 00 00 00 00       	mov    $0x0,%eax
810024e9:	85 c0                	test   %eax,%eax
810024eb:	75 2e                	jne    8100251b <_vfiprintf_r+0x2d8>
810024ed:	8b 45 80             	mov    -0x80(%ebp),%eax
810024f0:	25 00 01 00 00       	and    $0x100,%eax
810024f5:	85 c0                	test   %eax,%eax
810024f7:	74 11                	je     8100250a <_vfiprintf_r+0x2c7>
810024f9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810024ff:	83 c0 0c             	add    $0xc,%eax
81002502:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002508:	eb 55                	jmp    8100255f <_vfiprintf_r+0x31c>
8100250a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002510:	83 c0 08             	add    $0x8,%eax
81002513:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002519:	eb 44                	jmp    8100255f <_vfiprintf_r+0x31c>
8100251b:	83 ec 0c             	sub    $0xc,%esp
8100251e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002524:	50                   	push   %eax
81002525:	ff 75 e4             	push   -0x1c(%ebp)
81002528:	ff 75 0c             	push   0xc(%ebp)
8100252b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100252e:	50                   	push   %eax
8100252f:	ff 75 08             	push   0x8(%ebp)
81002532:	e8 c9 da ff 7e       	call   0 <do_help-0x81000000>
81002537:	83 c4 20             	add    $0x20,%esp
8100253a:	89 c7                	mov    %eax,%edi
8100253c:	eb 21                	jmp    8100255f <_vfiprintf_r+0x31c>
8100253e:	83 ec 0c             	sub    $0xc,%esp
81002541:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002547:	50                   	push   %eax
81002548:	ff 75 e4             	push   -0x1c(%ebp)
8100254b:	ff 75 0c             	push   0xc(%ebp)
8100254e:	8d 45 80             	lea    -0x80(%ebp),%eax
81002551:	50                   	push   %eax
81002552:	ff 75 08             	push   0x8(%ebp)
81002555:	e8 da 01 00 00       	call   81002734 <_printf_i>
8100255a:	83 c4 20             	add    $0x20,%esp
8100255d:	89 c7                	mov    %eax,%edi
8100255f:	83 ff ff             	cmp    $0xffffffff,%edi
81002562:	74 13                	je     81002577 <_vfiprintf_r+0x334>
81002564:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002567:	01 f8                	add    %edi,%eax
81002569:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100256c:	e9 5c fd ff ff       	jmp    810022cd <_vfiprintf_r+0x8a>
81002571:	90                   	nop
81002572:	eb 04                	jmp    81002578 <_vfiprintf_r+0x335>
81002574:	90                   	nop
81002575:	eb 01                	jmp    81002578 <_vfiprintf_r+0x335>
81002577:	90                   	nop
81002578:	8b 45 0c             	mov    0xc(%ebp),%eax
8100257b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100257f:	98                   	cwtl   
81002580:	83 e0 40             	and    $0x40,%eax
81002583:	85 c0                	test   %eax,%eax
81002585:	75 05                	jne    8100258c <_vfiprintf_r+0x349>
81002587:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100258a:	eb 05                	jmp    81002591 <_vfiprintf_r+0x34e>
8100258c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002591:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002594:	5b                   	pop    %ebx
81002595:	5e                   	pop    %esi
81002596:	5f                   	pop    %edi
81002597:	5d                   	pop    %ebp
81002598:	c3                   	ret    

81002599 <_printf_common>:
81002599:	55                   	push   %ebp
8100259a:	89 e5                	mov    %esp,%ebp
8100259c:	83 ec 18             	sub    $0x18,%esp
8100259f:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a2:	8b 50 10             	mov    0x10(%eax),%edx
810025a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a8:	8b 40 08             	mov    0x8(%eax),%eax
810025ab:	39 c2                	cmp    %eax,%edx
810025ad:	0f 4c d0             	cmovl  %eax,%edx
810025b0:	8b 45 10             	mov    0x10(%ebp),%eax
810025b3:	89 10                	mov    %edx,(%eax)
810025b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810025b8:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810025bc:	84 c0                	test   %al,%al
810025be:	74 0d                	je     810025cd <_printf_common+0x34>
810025c0:	8b 45 10             	mov    0x10(%ebp),%eax
810025c3:	8b 00                	mov    (%eax),%eax
810025c5:	8d 50 01             	lea    0x1(%eax),%edx
810025c8:	8b 45 10             	mov    0x10(%ebp),%eax
810025cb:	89 10                	mov    %edx,(%eax)
810025cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810025d0:	8b 00                	mov    (%eax),%eax
810025d2:	83 e0 20             	and    $0x20,%eax
810025d5:	85 c0                	test   %eax,%eax
810025d7:	74 0d                	je     810025e6 <_printf_common+0x4d>
810025d9:	8b 45 10             	mov    0x10(%ebp),%eax
810025dc:	8b 00                	mov    (%eax),%eax
810025de:	8d 50 02             	lea    0x2(%eax),%edx
810025e1:	8b 45 10             	mov    0x10(%ebp),%eax
810025e4:	89 10                	mov    %edx,(%eax)
810025e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810025e9:	8b 00                	mov    (%eax),%eax
810025eb:	83 e0 06             	and    $0x6,%eax
810025ee:	85 c0                	test   %eax,%eax
810025f0:	75 41                	jne    81002633 <_printf_common+0x9a>
810025f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810025f9:	eb 24                	jmp    8100261f <_printf_common+0x86>
810025fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810025fe:	83 c0 19             	add    $0x19,%eax
81002601:	6a 01                	push   $0x1
81002603:	50                   	push   %eax
81002604:	ff 75 14             	push   0x14(%ebp)
81002607:	ff 75 08             	push   0x8(%ebp)
8100260a:	8b 45 18             	mov    0x18(%ebp),%eax
8100260d:	ff d0                	call   *%eax
8100260f:	83 c4 10             	add    $0x10,%esp
81002612:	83 f8 ff             	cmp    $0xffffffff,%eax
81002615:	0f 84 0b 01 00 00    	je     81002726 <_printf_common+0x18d>
8100261b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100261f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002622:	8b 50 0c             	mov    0xc(%eax),%edx
81002625:	8b 45 10             	mov    0x10(%ebp),%eax
81002628:	8b 08                	mov    (%eax),%ecx
8100262a:	89 d0                	mov    %edx,%eax
8100262c:	29 c8                	sub    %ecx,%eax
8100262e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002631:	7c c8                	jl     810025fb <_printf_common+0x62>
81002633:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100263a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100263d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002641:	84 c0                	test   %al,%al
81002643:	74 04                	je     81002649 <_printf_common+0xb0>
81002645:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002649:	8b 45 0c             	mov    0xc(%ebp),%eax
8100264c:	8b 00                	mov    (%eax),%eax
8100264e:	83 e0 20             	and    $0x20,%eax
81002651:	85 c0                	test   %eax,%eax
81002653:	74 28                	je     8100267d <_printf_common+0xe4>
81002655:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002658:	8d 50 01             	lea    0x1(%eax),%edx
8100265b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100265e:	8b 55 0c             	mov    0xc(%ebp),%edx
81002661:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002666:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002669:	8d 50 01             	lea    0x1(%eax),%edx
8100266c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100266f:	8b 55 0c             	mov    0xc(%ebp),%edx
81002672:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002676:	8b 55 0c             	mov    0xc(%ebp),%edx
81002679:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100267d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002680:	8b 55 0c             	mov    0xc(%ebp),%edx
81002683:	83 c2 43             	add    $0x43,%edx
81002686:	50                   	push   %eax
81002687:	52                   	push   %edx
81002688:	ff 75 14             	push   0x14(%ebp)
8100268b:	ff 75 08             	push   0x8(%ebp)
8100268e:	8b 45 18             	mov    0x18(%ebp),%eax
81002691:	ff d0                	call   *%eax
81002693:	83 c4 10             	add    $0x10,%esp
81002696:	83 f8 ff             	cmp    $0xffffffff,%eax
81002699:	0f 84 8a 00 00 00    	je     81002729 <_printf_common+0x190>
8100269f:	8b 45 0c             	mov    0xc(%ebp),%eax
810026a2:	8b 50 0c             	mov    0xc(%eax),%edx
810026a5:	8b 45 10             	mov    0x10(%ebp),%eax
810026a8:	8b 08                	mov    (%eax),%ecx
810026aa:	89 d0                	mov    %edx,%eax
810026ac:	29 c8                	sub    %ecx,%eax
810026ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026b4:	8b 00                	mov    (%eax),%eax
810026b6:	83 e0 06             	and    $0x6,%eax
810026b9:	83 f8 04             	cmp    $0x4,%eax
810026bc:	75 06                	jne    810026c4 <_printf_common+0x12b>
810026be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810026c2:	79 07                	jns    810026cb <_printf_common+0x132>
810026c4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810026cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ce:	8b 50 08             	mov    0x8(%eax),%edx
810026d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026d4:	8b 40 10             	mov    0x10(%eax),%eax
810026d7:	39 c2                	cmp    %eax,%edx
810026d9:	7e 13                	jle    810026ee <_printf_common+0x155>
810026db:	8b 45 0c             	mov    0xc(%ebp),%eax
810026de:	8b 50 08             	mov    0x8(%eax),%edx
810026e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026e4:	8b 48 10             	mov    0x10(%eax),%ecx
810026e7:	89 d0                	mov    %edx,%eax
810026e9:	29 c8                	sub    %ecx,%eax
810026eb:	01 45 f4             	add    %eax,-0xc(%ebp)
810026ee:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810026f5:	eb 20                	jmp    81002717 <_printf_common+0x17e>
810026f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810026fa:	83 c0 1a             	add    $0x1a,%eax
810026fd:	6a 01                	push   $0x1
810026ff:	50                   	push   %eax
81002700:	ff 75 14             	push   0x14(%ebp)
81002703:	ff 75 08             	push   0x8(%ebp)
81002706:	8b 45 18             	mov    0x18(%ebp),%eax
81002709:	ff d0                	call   *%eax
8100270b:	83 c4 10             	add    $0x10,%esp
8100270e:	83 f8 ff             	cmp    $0xffffffff,%eax
81002711:	74 19                	je     8100272c <_printf_common+0x193>
81002713:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81002717:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100271a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100271d:	7c d8                	jl     810026f7 <_printf_common+0x15e>
8100271f:	b8 00 00 00 00       	mov    $0x0,%eax
81002724:	eb 0c                	jmp    81002732 <_printf_common+0x199>
81002726:	90                   	nop
81002727:	eb 04                	jmp    8100272d <_printf_common+0x194>
81002729:	90                   	nop
8100272a:	eb 01                	jmp    8100272d <_printf_common+0x194>
8100272c:	90                   	nop
8100272d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002732:	c9                   	leave  
81002733:	c3                   	ret    

81002734 <_printf_i>:
81002734:	55                   	push   %ebp
81002735:	89 e5                	mov    %esp,%ebp
81002737:	53                   	push   %ebx
81002738:	83 ec 24             	sub    $0x24,%esp
8100273b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100273e:	83 c0 1b             	add    $0x1b,%eax
81002741:	83 c0 28             	add    $0x28,%eax
81002744:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002747:	c7 45 e8 e8 4e 00 81 	movl   $0x81004ee8,-0x18(%ebp)
8100274e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002751:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002755:	0f be c0             	movsbl %al,%eax
81002758:	85 c0                	test   %eax,%eax
8100275a:	0f 84 00 03 00 00    	je     81002a60 <_printf_i+0x32c>
81002760:	85 c0                	test   %eax,%eax
81002762:	0f 88 52 03 00 00    	js     81002aba <_printf_i+0x386>
81002768:	83 f8 78             	cmp    $0x78,%eax
8100276b:	0f 8f 49 03 00 00    	jg     81002aba <_printf_i+0x386>
81002771:	83 f8 58             	cmp    $0x58,%eax
81002774:	0f 8c 40 03 00 00    	jl     81002aba <_printf_i+0x386>
8100277a:	83 e8 58             	sub    $0x58,%eax
8100277d:	83 f8 20             	cmp    $0x20,%eax
81002780:	0f 87 34 03 00 00    	ja     81002aba <_printf_i+0x386>
81002786:	8b 04 85 0c 4f 00 81 	mov    -0x7effb0f4(,%eax,4),%eax
8100278d:	ff e0                	jmp    *%eax
8100278f:	8b 45 18             	mov    0x18(%ebp),%eax
81002792:	8b 00                	mov    (%eax),%eax
81002794:	8d 48 04             	lea    0x4(%eax),%ecx
81002797:	8b 55 18             	mov    0x18(%ebp),%edx
8100279a:	89 0a                	mov    %ecx,(%edx)
8100279c:	8b 00                	mov    (%eax),%eax
8100279e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810027a2:	89 c2                	mov    %eax,%edx
810027a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027a7:	88 10                	mov    %dl,(%eax)
810027a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810027ac:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810027b3:	e9 1c 03 00 00       	jmp    81002ad4 <_printf_i+0x3a0>
810027b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810027bb:	8b 00                	mov    (%eax),%eax
810027bd:	25 80 00 00 00       	and    $0x80,%eax
810027c2:	85 c0                	test   %eax,%eax
810027c4:	74 11                	je     810027d7 <_printf_i+0xa3>
810027c6:	8b 45 18             	mov    0x18(%ebp),%eax
810027c9:	8b 00                	mov    (%eax),%eax
810027cb:	8d 48 04             	lea    0x4(%eax),%ecx
810027ce:	8b 55 18             	mov    0x18(%ebp),%edx
810027d1:	89 0a                	mov    %ecx,(%edx)
810027d3:	8b 00                	mov    (%eax),%eax
810027d5:	eb 2d                	jmp    81002804 <_printf_i+0xd0>
810027d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810027da:	8b 00                	mov    (%eax),%eax
810027dc:	83 e0 40             	and    $0x40,%eax
810027df:	85 c0                	test   %eax,%eax
810027e1:	74 12                	je     810027f5 <_printf_i+0xc1>
810027e3:	8b 45 18             	mov    0x18(%ebp),%eax
810027e6:	8b 00                	mov    (%eax),%eax
810027e8:	8d 48 04             	lea    0x4(%eax),%ecx
810027eb:	8b 55 18             	mov    0x18(%ebp),%edx
810027ee:	89 0a                	mov    %ecx,(%edx)
810027f0:	8b 00                	mov    (%eax),%eax
810027f2:	98                   	cwtl   
810027f3:	eb 0f                	jmp    81002804 <_printf_i+0xd0>
810027f5:	8b 45 18             	mov    0x18(%ebp),%eax
810027f8:	8b 00                	mov    (%eax),%eax
810027fa:	8d 48 04             	lea    0x4(%eax),%ecx
810027fd:	8b 55 18             	mov    0x18(%ebp),%edx
81002800:	89 0a                	mov    %ecx,(%edx)
81002802:	8b 00                	mov    (%eax),%eax
81002804:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002807:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100280a:	85 c0                	test   %eax,%eax
8100280c:	79 0a                	jns    81002818 <_printf_i+0xe4>
8100280e:	f7 5d f4             	negl   -0xc(%ebp)
81002811:	8b 45 0c             	mov    0xc(%ebp),%eax
81002814:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81002818:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100281f:	e9 28 01 00 00       	jmp    8100294c <_printf_i+0x218>
81002824:	8b 45 0c             	mov    0xc(%ebp),%eax
81002827:	8b 00                	mov    (%eax),%eax
81002829:	25 80 00 00 00       	and    $0x80,%eax
8100282e:	85 c0                	test   %eax,%eax
81002830:	74 11                	je     81002843 <_printf_i+0x10f>
81002832:	8b 45 18             	mov    0x18(%ebp),%eax
81002835:	8b 00                	mov    (%eax),%eax
81002837:	8d 48 04             	lea    0x4(%eax),%ecx
8100283a:	8b 55 18             	mov    0x18(%ebp),%edx
8100283d:	89 0a                	mov    %ecx,(%edx)
8100283f:	8b 00                	mov    (%eax),%eax
81002841:	eb 2f                	jmp    81002872 <_printf_i+0x13e>
81002843:	8b 45 0c             	mov    0xc(%ebp),%eax
81002846:	8b 00                	mov    (%eax),%eax
81002848:	83 e0 40             	and    $0x40,%eax
8100284b:	85 c0                	test   %eax,%eax
8100284d:	74 14                	je     81002863 <_printf_i+0x12f>
8100284f:	8b 45 18             	mov    0x18(%ebp),%eax
81002852:	8b 00                	mov    (%eax),%eax
81002854:	8d 48 04             	lea    0x4(%eax),%ecx
81002857:	8b 55 18             	mov    0x18(%ebp),%edx
8100285a:	89 0a                	mov    %ecx,(%edx)
8100285c:	8b 00                	mov    (%eax),%eax
8100285e:	0f b7 c0             	movzwl %ax,%eax
81002861:	eb 0f                	jmp    81002872 <_printf_i+0x13e>
81002863:	8b 45 18             	mov    0x18(%ebp),%eax
81002866:	8b 00                	mov    (%eax),%eax
81002868:	8d 48 04             	lea    0x4(%eax),%ecx
8100286b:	8b 55 18             	mov    0x18(%ebp),%edx
8100286e:	89 0a                	mov    %ecx,(%edx)
81002870:	8b 00                	mov    (%eax),%eax
81002872:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002875:	8b 45 0c             	mov    0xc(%ebp),%eax
81002878:	0f b6 40 18          	movzbl 0x18(%eax),%eax
8100287c:	3c 6f                	cmp    $0x6f,%al
8100287e:	75 07                	jne    81002887 <_printf_i+0x153>
81002880:	b8 08 00 00 00       	mov    $0x8,%eax
81002885:	eb 05                	jmp    8100288c <_printf_i+0x158>
81002887:	b8 0a 00 00 00       	mov    $0xa,%eax
8100288c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100288f:	e9 b1 00 00 00       	jmp    81002945 <_printf_i+0x211>
81002894:	8b 45 0c             	mov    0xc(%ebp),%eax
81002897:	c6 40 45 58          	movb   $0x58,0x45(%eax)
8100289b:	eb 1d                	jmp    810028ba <_printf_i+0x186>
8100289d:	8b 45 0c             	mov    0xc(%ebp),%eax
810028a0:	8b 00                	mov    (%eax),%eax
810028a2:	83 c8 20             	or     $0x20,%eax
810028a5:	89 c2                	mov    %eax,%edx
810028a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810028aa:	89 10                	mov    %edx,(%eax)
810028ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810028af:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810028b3:	c7 45 e8 f9 4e 00 81 	movl   $0x81004ef9,-0x18(%ebp)
810028ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810028bd:	8b 00                	mov    (%eax),%eax
810028bf:	25 80 00 00 00       	and    $0x80,%eax
810028c4:	85 c0                	test   %eax,%eax
810028c6:	74 11                	je     810028d9 <_printf_i+0x1a5>
810028c8:	8b 45 18             	mov    0x18(%ebp),%eax
810028cb:	8b 00                	mov    (%eax),%eax
810028cd:	8d 48 04             	lea    0x4(%eax),%ecx
810028d0:	8b 55 18             	mov    0x18(%ebp),%edx
810028d3:	89 0a                	mov    %ecx,(%edx)
810028d5:	8b 00                	mov    (%eax),%eax
810028d7:	eb 2f                	jmp    81002908 <_printf_i+0x1d4>
810028d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810028dc:	8b 00                	mov    (%eax),%eax
810028de:	83 e0 40             	and    $0x40,%eax
810028e1:	85 c0                	test   %eax,%eax
810028e3:	74 14                	je     810028f9 <_printf_i+0x1c5>
810028e5:	8b 45 18             	mov    0x18(%ebp),%eax
810028e8:	8b 00                	mov    (%eax),%eax
810028ea:	8d 48 04             	lea    0x4(%eax),%ecx
810028ed:	8b 55 18             	mov    0x18(%ebp),%edx
810028f0:	89 0a                	mov    %ecx,(%edx)
810028f2:	8b 00                	mov    (%eax),%eax
810028f4:	0f b7 c0             	movzwl %ax,%eax
810028f7:	eb 0f                	jmp    81002908 <_printf_i+0x1d4>
810028f9:	8b 45 18             	mov    0x18(%ebp),%eax
810028fc:	8b 00                	mov    (%eax),%eax
810028fe:	8d 48 04             	lea    0x4(%eax),%ecx
81002901:	8b 55 18             	mov    0x18(%ebp),%edx
81002904:	89 0a                	mov    %ecx,(%edx)
81002906:	8b 00                	mov    (%eax),%eax
81002908:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100290b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81002912:	8b 45 0c             	mov    0xc(%ebp),%eax
81002915:	8b 00                	mov    (%eax),%eax
81002917:	83 e0 01             	and    $0x1,%eax
8100291a:	85 c0                	test   %eax,%eax
8100291c:	74 0f                	je     8100292d <_printf_i+0x1f9>
8100291e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002921:	8b 00                	mov    (%eax),%eax
81002923:	83 c8 20             	or     $0x20,%eax
81002926:	89 c2                	mov    %eax,%edx
81002928:	8b 45 0c             	mov    0xc(%ebp),%eax
8100292b:	89 10                	mov    %edx,(%eax)
8100292d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002931:	75 11                	jne    81002944 <_printf_i+0x210>
81002933:	8b 45 0c             	mov    0xc(%ebp),%eax
81002936:	8b 00                	mov    (%eax),%eax
81002938:	83 e0 df             	and    $0xffffffdf,%eax
8100293b:	89 c2                	mov    %eax,%edx
8100293d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002940:	89 10                	mov    %edx,(%eax)
81002942:	eb 01                	jmp    81002945 <_printf_i+0x211>
81002944:	90                   	nop
81002945:	8b 45 0c             	mov    0xc(%ebp),%eax
81002948:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8100294c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100294f:	8b 50 04             	mov    0x4(%eax),%edx
81002952:	8b 45 0c             	mov    0xc(%ebp),%eax
81002955:	89 50 08             	mov    %edx,0x8(%eax)
81002958:	8b 45 0c             	mov    0xc(%ebp),%eax
8100295b:	8b 40 08             	mov    0x8(%eax),%eax
8100295e:	85 c0                	test   %eax,%eax
81002960:	78 0f                	js     81002971 <_printf_i+0x23d>
81002962:	8b 45 0c             	mov    0xc(%ebp),%eax
81002965:	8b 00                	mov    (%eax),%eax
81002967:	83 e0 fb             	and    $0xfffffffb,%eax
8100296a:	89 c2                	mov    %eax,%edx
8100296c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100296f:	89 10                	mov    %edx,(%eax)
81002971:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002975:	75 0a                	jne    81002981 <_printf_i+0x24d>
81002977:	8b 45 0c             	mov    0xc(%ebp),%eax
8100297a:	8b 40 04             	mov    0x4(%eax),%eax
8100297d:	85 c0                	test   %eax,%eax
8100297f:	74 34                	je     810029b5 <_printf_i+0x281>
81002981:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002984:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002987:	ba 00 00 00 00       	mov    $0x0,%edx
8100298c:	f7 f1                	div    %ecx
8100298e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002991:	01 d0                	add    %edx,%eax
81002993:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002997:	0f b6 10             	movzbl (%eax),%edx
8100299a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100299d:	88 10                	mov    %dl,(%eax)
8100299f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
810029a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029a5:	ba 00 00 00 00       	mov    $0x0,%edx
810029aa:	f7 f3                	div    %ebx
810029ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029af:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810029b3:	75 cc                	jne    81002981 <_printf_i+0x24d>
810029b5:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810029b9:	75 26                	jne    810029e1 <_printf_i+0x2ad>
810029bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810029be:	8b 00                	mov    (%eax),%eax
810029c0:	83 e0 01             	and    $0x1,%eax
810029c3:	85 c0                	test   %eax,%eax
810029c5:	74 1a                	je     810029e1 <_printf_i+0x2ad>
810029c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029ca:	8b 50 04             	mov    0x4(%eax),%edx
810029cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810029d0:	8b 40 10             	mov    0x10(%eax),%eax
810029d3:	39 c2                	cmp    %eax,%edx
810029d5:	7f 0a                	jg     810029e1 <_printf_i+0x2ad>
810029d7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810029db:	8b 45 ec             	mov    -0x14(%ebp),%eax
810029de:	c6 00 30             	movb   $0x30,(%eax)
810029e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810029e4:	83 c0 1b             	add    $0x1b,%eax
810029e7:	83 c0 28             	add    $0x28,%eax
810029ea:	2b 45 ec             	sub    -0x14(%ebp),%eax
810029ed:	89 c2                	mov    %eax,%edx
810029ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810029f2:	89 50 10             	mov    %edx,0x10(%eax)
810029f5:	e9 e2 00 00 00       	jmp    81002adc <_printf_i+0x3a8>
810029fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810029fd:	8b 00                	mov    (%eax),%eax
810029ff:	25 80 00 00 00       	and    $0x80,%eax
81002a04:	85 c0                	test   %eax,%eax
81002a06:	74 19                	je     81002a21 <_printf_i+0x2ed>
81002a08:	8b 45 18             	mov    0x18(%ebp),%eax
81002a0b:	8b 00                	mov    (%eax),%eax
81002a0d:	8d 48 04             	lea    0x4(%eax),%ecx
81002a10:	8b 55 18             	mov    0x18(%ebp),%edx
81002a13:	89 0a                	mov    %ecx,(%edx)
81002a15:	8b 00                	mov    (%eax),%eax
81002a17:	8b 55 0c             	mov    0xc(%ebp),%edx
81002a1a:	8b 52 14             	mov    0x14(%edx),%edx
81002a1d:	89 10                	mov    %edx,(%eax)
81002a1f:	eb 3f                	jmp    81002a60 <_printf_i+0x32c>
81002a21:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a24:	8b 00                	mov    (%eax),%eax
81002a26:	83 e0 40             	and    $0x40,%eax
81002a29:	85 c0                	test   %eax,%eax
81002a2b:	74 1c                	je     81002a49 <_printf_i+0x315>
81002a2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a30:	8b 58 14             	mov    0x14(%eax),%ebx
81002a33:	8b 45 18             	mov    0x18(%ebp),%eax
81002a36:	8b 00                	mov    (%eax),%eax
81002a38:	8d 48 04             	lea    0x4(%eax),%ecx
81002a3b:	8b 55 18             	mov    0x18(%ebp),%edx
81002a3e:	89 0a                	mov    %ecx,(%edx)
81002a40:	8b 00                	mov    (%eax),%eax
81002a42:	89 da                	mov    %ebx,%edx
81002a44:	66 89 10             	mov    %dx,(%eax)
81002a47:	eb 17                	jmp    81002a60 <_printf_i+0x32c>
81002a49:	8b 45 18             	mov    0x18(%ebp),%eax
81002a4c:	8b 00                	mov    (%eax),%eax
81002a4e:	8d 48 04             	lea    0x4(%eax),%ecx
81002a51:	8b 55 18             	mov    0x18(%ebp),%edx
81002a54:	89 0a                	mov    %ecx,(%edx)
81002a56:	8b 00                	mov    (%eax),%eax
81002a58:	8b 55 0c             	mov    0xc(%ebp),%edx
81002a5b:	8b 52 14             	mov    0x14(%edx),%edx
81002a5e:	89 10                	mov    %edx,(%eax)
81002a60:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a63:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002a6a:	eb 70                	jmp    81002adc <_printf_i+0x3a8>
81002a6c:	8b 45 18             	mov    0x18(%ebp),%eax
81002a6f:	8b 00                	mov    (%eax),%eax
81002a71:	8d 48 04             	lea    0x4(%eax),%ecx
81002a74:	8b 55 18             	mov    0x18(%ebp),%edx
81002a77:	89 0a                	mov    %ecx,(%edx)
81002a79:	8b 00                	mov    (%eax),%eax
81002a7b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a81:	8b 40 04             	mov    0x4(%eax),%eax
81002a84:	83 ec 04             	sub    $0x4,%esp
81002a87:	50                   	push   %eax
81002a88:	6a 00                	push   $0x0
81002a8a:	ff 75 ec             	push   -0x14(%ebp)
81002a8d:	e8 2e f4 ff ff       	call   81001ec0 <memchr>
81002a92:	83 c4 10             	add    $0x10,%esp
81002a95:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002a98:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002a9c:	74 0e                	je     81002aac <_printf_i+0x378>
81002a9e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002aa1:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002aa4:	89 c2                	mov    %eax,%edx
81002aa6:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aa9:	89 50 04             	mov    %edx,0x4(%eax)
81002aac:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aaf:	8b 50 04             	mov    0x4(%eax),%edx
81002ab2:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ab5:	89 50 10             	mov    %edx,0x10(%eax)
81002ab8:	eb 1a                	jmp    81002ad4 <_printf_i+0x3a0>
81002aba:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002abe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ac1:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002ac5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ac8:	88 10                	mov    %dl,(%eax)
81002aca:	8b 45 0c             	mov    0xc(%ebp),%eax
81002acd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002ad4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ad7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002adb:	90                   	nop
81002adc:	83 ec 0c             	sub    $0xc,%esp
81002adf:	ff 75 14             	push   0x14(%ebp)
81002ae2:	ff 75 10             	push   0x10(%ebp)
81002ae5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002ae8:	50                   	push   %eax
81002ae9:	ff 75 0c             	push   0xc(%ebp)
81002aec:	ff 75 08             	push   0x8(%ebp)
81002aef:	e8 a5 fa ff ff       	call   81002599 <_printf_common>
81002af4:	83 c4 20             	add    $0x20,%esp
81002af7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002afa:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81002afe:	74 72                	je     81002b72 <_printf_i+0x43e>
81002b00:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b03:	8b 40 10             	mov    0x10(%eax),%eax
81002b06:	50                   	push   %eax
81002b07:	ff 75 ec             	push   -0x14(%ebp)
81002b0a:	ff 75 10             	push   0x10(%ebp)
81002b0d:	ff 75 08             	push   0x8(%ebp)
81002b10:	8b 45 14             	mov    0x14(%ebp),%eax
81002b13:	ff d0                	call   *%eax
81002b15:	83 c4 10             	add    $0x10,%esp
81002b18:	83 f8 ff             	cmp    $0xffffffff,%eax
81002b1b:	74 58                	je     81002b75 <_printf_i+0x441>
81002b1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b20:	8b 00                	mov    (%eax),%eax
81002b22:	83 e0 02             	and    $0x2,%eax
81002b25:	85 c0                	test   %eax,%eax
81002b27:	74 39                	je     81002b62 <_printf_i+0x42e>
81002b29:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002b30:	eb 20                	jmp    81002b52 <_printf_i+0x41e>
81002b32:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b35:	83 c0 19             	add    $0x19,%eax
81002b38:	6a 01                	push   $0x1
81002b3a:	50                   	push   %eax
81002b3b:	ff 75 10             	push   0x10(%ebp)
81002b3e:	ff 75 08             	push   0x8(%ebp)
81002b41:	8b 45 14             	mov    0x14(%ebp),%eax
81002b44:	ff d0                	call   *%eax
81002b46:	83 c4 10             	add    $0x10,%esp
81002b49:	83 f8 ff             	cmp    $0xffffffff,%eax
81002b4c:	74 2a                	je     81002b78 <_printf_i+0x444>
81002b4e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81002b52:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b55:	8b 40 0c             	mov    0xc(%eax),%eax
81002b58:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b5b:	29 d0                	sub    %edx,%eax
81002b5d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002b60:	7c d0                	jl     81002b32 <_printf_i+0x3fe>
81002b62:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b65:	8b 50 0c             	mov    0xc(%eax),%edx
81002b68:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b6b:	39 c2                	cmp    %eax,%edx
81002b6d:	0f 4d c2             	cmovge %edx,%eax
81002b70:	eb 0c                	jmp    81002b7e <_printf_i+0x44a>
81002b72:	90                   	nop
81002b73:	eb 04                	jmp    81002b79 <_printf_i+0x445>
81002b75:	90                   	nop
81002b76:	eb 01                	jmp    81002b79 <_printf_i+0x445>
81002b78:	90                   	nop
81002b79:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b7e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b81:	c9                   	leave  
81002b82:	c3                   	ret    

81002b83 <_iprintf_r>:
81002b83:	55                   	push   %ebp
81002b84:	89 e5                	mov    %esp,%ebp
81002b86:	83 ec 18             	sub    $0x18,%esp
81002b89:	8d 45 10             	lea    0x10(%ebp),%eax
81002b8c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b8f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81002b92:	8b 45 08             	mov    0x8(%ebp),%eax
81002b95:	8b 40 08             	mov    0x8(%eax),%eax
81002b98:	52                   	push   %edx
81002b99:	ff 75 0c             	push   0xc(%ebp)
81002b9c:	50                   	push   %eax
81002b9d:	ff 75 08             	push   0x8(%ebp)
81002ba0:	e8 9e f6 ff ff       	call   81002243 <_vfiprintf_r>
81002ba5:	83 c4 10             	add    $0x10,%esp
81002ba8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bae:	c9                   	leave  
81002baf:	c3                   	ret    

81002bb0 <iprintf>:
81002bb0:	55                   	push   %ebp
81002bb1:	89 e5                	mov    %esp,%ebp
81002bb3:	83 ec 18             	sub    $0x18,%esp
81002bb6:	a1 84 56 00 81       	mov    0x81005684,%eax
81002bbb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bbe:	8d 45 0c             	lea    0xc(%ebp),%eax
81002bc1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002bc4:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002bc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bca:	8b 40 08             	mov    0x8(%eax),%eax
81002bcd:	52                   	push   %edx
81002bce:	ff 75 08             	push   0x8(%ebp)
81002bd1:	50                   	push   %eax
81002bd2:	ff 75 f4             	push   -0xc(%ebp)
81002bd5:	e8 69 f6 ff ff       	call   81002243 <_vfiprintf_r>
81002bda:	83 c4 10             	add    $0x10,%esp
81002bdd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002be0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002be3:	c9                   	leave  
81002be4:	c3                   	ret    

81002be5 <_puts_r>:
81002be5:	55                   	push   %ebp
81002be6:	89 e5                	mov    %esp,%ebp
81002be8:	83 ec 38             	sub    $0x38,%esp
81002beb:	83 ec 0c             	sub    $0xc,%esp
81002bee:	ff 75 0c             	push   0xc(%ebp)
81002bf1:	e8 1a 06 00 00       	call   81003210 <strlen>
81002bf6:	83 c4 10             	add    $0x10,%esp
81002bf9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bfc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bff:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002c02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c05:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002c08:	c7 45 d4 90 4f 00 81 	movl   $0x81004f90,-0x2c(%ebp)
81002c0f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002c16:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c19:	83 c0 01             	add    $0x1,%eax
81002c1c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c1f:	8d 45 cc             	lea    -0x34(%ebp),%eax
81002c22:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c25:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81002c2c:	8b 45 08             	mov    0x8(%ebp),%eax
81002c2f:	8b 40 08             	mov    0x8(%eax),%eax
81002c32:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002c35:	8b 45 08             	mov    0x8(%ebp),%eax
81002c38:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002c3b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002c3f:	74 18                	je     81002c59 <_puts_r+0x74>
81002c41:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c44:	8b 40 38             	mov    0x38(%eax),%eax
81002c47:	85 c0                	test   %eax,%eax
81002c49:	75 0e                	jne    81002c59 <_puts_r+0x74>
81002c4b:	83 ec 0c             	sub    $0xc,%esp
81002c4e:	ff 75 ec             	push   -0x14(%ebp)
81002c51:	e8 34 e0 ff ff       	call   81000c8a <__sinit>
81002c56:	83 c4 10             	add    $0x10,%esp
81002c59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c5c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002c60:	98                   	cwtl   
81002c61:	25 00 20 00 00       	and    $0x2000,%eax
81002c66:	85 c0                	test   %eax,%eax
81002c68:	75 24                	jne    81002c8e <_puts_r+0xa9>
81002c6a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c6d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002c71:	80 cc 20             	or     $0x20,%ah
81002c74:	89 c2                	mov    %eax,%edx
81002c76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c79:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002c7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c80:	8b 40 64             	mov    0x64(%eax),%eax
81002c83:	80 e4 df             	and    $0xdf,%ah
81002c86:	89 c2                	mov    %eax,%edx
81002c88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c8b:	89 50 64             	mov    %edx,0x64(%eax)
81002c8e:	83 ec 04             	sub    $0x4,%esp
81002c91:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002c94:	50                   	push   %eax
81002c95:	ff 75 f0             	push   -0x10(%ebp)
81002c98:	ff 75 08             	push   0x8(%ebp)
81002c9b:	e8 d9 0c 00 00       	call   81003979 <__sfvwrite_r>
81002ca0:	83 c4 10             	add    $0x10,%esp
81002ca3:	85 c0                	test   %eax,%eax
81002ca5:	74 07                	je     81002cae <_puts_r+0xc9>
81002ca7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002cac:	eb 05                	jmp    81002cb3 <_puts_r+0xce>
81002cae:	b8 0a 00 00 00       	mov    $0xa,%eax
81002cb3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002cb6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002cb9:	c9                   	leave  
81002cba:	c3                   	ret    

81002cbb <puts>:
81002cbb:	55                   	push   %ebp
81002cbc:	89 e5                	mov    %esp,%ebp
81002cbe:	83 ec 08             	sub    $0x8,%esp
81002cc1:	a1 84 56 00 81       	mov    0x81005684,%eax
81002cc6:	83 ec 08             	sub    $0x8,%esp
81002cc9:	ff 75 08             	push   0x8(%ebp)
81002ccc:	50                   	push   %eax
81002ccd:	e8 13 ff ff ff       	call   81002be5 <_puts_r>
81002cd2:	83 c4 10             	add    $0x10,%esp
81002cd5:	c9                   	leave  
81002cd6:	c3                   	ret    

81002cd7 <lflush>:
81002cd7:	55                   	push   %ebp
81002cd8:	89 e5                	mov    %esp,%ebp
81002cda:	83 ec 08             	sub    $0x8,%esp
81002cdd:	8b 45 08             	mov    0x8(%ebp),%eax
81002ce0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ce4:	98                   	cwtl   
81002ce5:	83 e0 09             	and    $0x9,%eax
81002ce8:	83 f8 09             	cmp    $0x9,%eax
81002ceb:	75 10                	jne    81002cfd <lflush+0x26>
81002ced:	83 ec 0c             	sub    $0xc,%esp
81002cf0:	ff 75 08             	push   0x8(%ebp)
81002cf3:	e8 e7 da ff ff       	call   810007df <fflush>
81002cf8:	83 c4 10             	add    $0x10,%esp
81002cfb:	eb 05                	jmp    81002d02 <lflush+0x2b>
81002cfd:	b8 00 00 00 00       	mov    $0x0,%eax
81002d02:	c9                   	leave  
81002d03:	c3                   	ret    

81002d04 <__srefill_r>:
81002d04:	55                   	push   %ebp
81002d05:	89 e5                	mov    %esp,%ebp
81002d07:	56                   	push   %esi
81002d08:	53                   	push   %ebx
81002d09:	83 ec 10             	sub    $0x10,%esp
81002d0c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002d0f:	8b 45 08             	mov    0x8(%ebp),%eax
81002d12:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002d19:	74 18                	je     81002d33 <__srefill_r+0x2f>
81002d1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d1e:	8b 40 38             	mov    0x38(%eax),%eax
81002d21:	85 c0                	test   %eax,%eax
81002d23:	75 0e                	jne    81002d33 <__srefill_r+0x2f>
81002d25:	83 ec 0c             	sub    $0xc,%esp
81002d28:	ff 75 f4             	push   -0xc(%ebp)
81002d2b:	e8 5a df ff ff       	call   81000c8a <__sinit>
81002d30:	83 c4 10             	add    $0x10,%esp
81002d33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d37:	98                   	cwtl   
81002d38:	25 00 20 00 00       	and    $0x2000,%eax
81002d3d:	85 c0                	test   %eax,%eax
81002d3f:	75 14                	jne    81002d55 <__srefill_r+0x51>
81002d41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d45:	80 cc 20             	or     $0x20,%ah
81002d48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d4c:	8b 43 64             	mov    0x64(%ebx),%eax
81002d4f:	80 e4 df             	and    $0xdf,%ah
81002d52:	89 43 64             	mov    %eax,0x64(%ebx)
81002d55:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002d5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d60:	98                   	cwtl   
81002d61:	83 e0 20             	and    $0x20,%eax
81002d64:	85 c0                	test   %eax,%eax
81002d66:	74 0a                	je     81002d72 <__srefill_r+0x6e>
81002d68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d6d:	e9 8c 01 00 00       	jmp    81002efe <__srefill_r+0x1fa>
81002d72:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d76:	98                   	cwtl   
81002d77:	83 e0 04             	and    $0x4,%eax
81002d7a:	85 c0                	test   %eax,%eax
81002d7c:	75 79                	jne    81002df7 <__srefill_r+0xf3>
81002d7e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d82:	98                   	cwtl   
81002d83:	83 e0 10             	and    $0x10,%eax
81002d86:	85 c0                	test   %eax,%eax
81002d88:	75 1e                	jne    81002da8 <__srefill_r+0xa4>
81002d8a:	8b 45 08             	mov    0x8(%ebp),%eax
81002d8d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002d93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d97:	83 c8 40             	or     $0x40,%eax
81002d9a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002da3:	e9 56 01 00 00       	jmp    81002efe <__srefill_r+0x1fa>
81002da8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dac:	98                   	cwtl   
81002dad:	83 e0 08             	and    $0x8,%eax
81002db0:	85 c0                	test   %eax,%eax
81002db2:	74 36                	je     81002dea <__srefill_r+0xe6>
81002db4:	83 ec 08             	sub    $0x8,%esp
81002db7:	53                   	push   %ebx
81002db8:	ff 75 08             	push   0x8(%ebp)
81002dbb:	e8 c7 d9 ff ff       	call   81000787 <_fflush_r>
81002dc0:	83 c4 10             	add    $0x10,%esp
81002dc3:	85 c0                	test   %eax,%eax
81002dc5:	74 0a                	je     81002dd1 <__srefill_r+0xcd>
81002dc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002dcc:	e9 2d 01 00 00       	jmp    81002efe <__srefill_r+0x1fa>
81002dd1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dd5:	83 e0 f7             	and    $0xfffffff7,%eax
81002dd8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ddc:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002de3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81002dea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dee:	83 c8 04             	or     $0x4,%eax
81002df1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002df5:	eb 46                	jmp    81002e3d <__srefill_r+0x139>
81002df7:	8b 43 30             	mov    0x30(%ebx),%eax
81002dfa:	85 c0                	test   %eax,%eax
81002dfc:	74 3f                	je     81002e3d <__srefill_r+0x139>
81002dfe:	8b 53 30             	mov    0x30(%ebx),%edx
81002e01:	8d 43 40             	lea    0x40(%ebx),%eax
81002e04:	39 c2                	cmp    %eax,%edx
81002e06:	74 12                	je     81002e1a <__srefill_r+0x116>
81002e08:	8b 43 30             	mov    0x30(%ebx),%eax
81002e0b:	83 ec 08             	sub    $0x8,%esp
81002e0e:	50                   	push   %eax
81002e0f:	ff 75 08             	push   0x8(%ebp)
81002e12:	e8 d5 df ff ff       	call   81000dec <_free_r>
81002e17:	83 c4 10             	add    $0x10,%esp
81002e1a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002e21:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002e24:	89 43 04             	mov    %eax,0x4(%ebx)
81002e27:	8b 43 04             	mov    0x4(%ebx),%eax
81002e2a:	85 c0                	test   %eax,%eax
81002e2c:	74 0f                	je     81002e3d <__srefill_r+0x139>
81002e2e:	8b 43 38             	mov    0x38(%ebx),%eax
81002e31:	89 03                	mov    %eax,(%ebx)
81002e33:	b8 00 00 00 00       	mov    $0x0,%eax
81002e38:	e9 c1 00 00 00       	jmp    81002efe <__srefill_r+0x1fa>
81002e3d:	8b 43 10             	mov    0x10(%ebx),%eax
81002e40:	85 c0                	test   %eax,%eax
81002e42:	75 0f                	jne    81002e53 <__srefill_r+0x14f>
81002e44:	83 ec 08             	sub    $0x8,%esp
81002e47:	53                   	push   %ebx
81002e48:	ff 75 08             	push   0x8(%ebp)
81002e4b:	e8 b3 10 00 00       	call   81003f03 <__smakebuf_r>
81002e50:	83 c4 10             	add    $0x10,%esp
81002e53:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e57:	98                   	cwtl   
81002e58:	83 e0 03             	and    $0x3,%eax
81002e5b:	85 c0                	test   %eax,%eax
81002e5d:	74 48                	je     81002ea7 <__srefill_r+0x1a3>
81002e5f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e63:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81002e67:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002e6d:	a1 d0 4e 00 81       	mov    0x81004ed0,%eax
81002e72:	83 ec 08             	sub    $0x8,%esp
81002e75:	68 d7 2c 00 81       	push   $0x81002cd7
81002e7a:	50                   	push   %eax
81002e7b:	e8 a8 e4 ff ff       	call   81001328 <_fwalk>
81002e80:	83 c4 10             	add    $0x10,%esp
81002e83:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81002e87:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002e8b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e8f:	98                   	cwtl   
81002e90:	83 e0 09             	and    $0x9,%eax
81002e93:	83 f8 09             	cmp    $0x9,%eax
81002e96:	75 0f                	jne    81002ea7 <__srefill_r+0x1a3>
81002e98:	83 ec 08             	sub    $0x8,%esp
81002e9b:	53                   	push   %ebx
81002e9c:	ff 75 08             	push   0x8(%ebp)
81002e9f:	e8 bd d6 ff ff       	call   81000561 <__sflush_r>
81002ea4:	83 c4 10             	add    $0x10,%esp
81002ea7:	8b 43 10             	mov    0x10(%ebx),%eax
81002eaa:	89 03                	mov    %eax,(%ebx)
81002eac:	8b 43 20             	mov    0x20(%ebx),%eax
81002eaf:	8b 73 14             	mov    0x14(%ebx),%esi
81002eb2:	8b 0b                	mov    (%ebx),%ecx
81002eb4:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002eb7:	56                   	push   %esi
81002eb8:	51                   	push   %ecx
81002eb9:	52                   	push   %edx
81002eba:	ff 75 08             	push   0x8(%ebp)
81002ebd:	ff d0                	call   *%eax
81002ebf:	83 c4 10             	add    $0x10,%esp
81002ec2:	89 43 04             	mov    %eax,0x4(%ebx)
81002ec5:	8b 43 04             	mov    0x4(%ebx),%eax
81002ec8:	85 c0                	test   %eax,%eax
81002eca:	7f 2d                	jg     81002ef9 <__srefill_r+0x1f5>
81002ecc:	8b 43 04             	mov    0x4(%ebx),%eax
81002ecf:	85 c0                	test   %eax,%eax
81002ed1:	75 0d                	jne    81002ee0 <__srefill_r+0x1dc>
81002ed3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ed7:	83 c8 20             	or     $0x20,%eax
81002eda:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ede:	eb 12                	jmp    81002ef2 <__srefill_r+0x1ee>
81002ee0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002ee7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002eeb:	83 c8 40             	or     $0x40,%eax
81002eee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ef2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ef7:	eb 05                	jmp    81002efe <__srefill_r+0x1fa>
81002ef9:	b8 00 00 00 00       	mov    $0x0,%eax
81002efe:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002f01:	5b                   	pop    %ebx
81002f02:	5e                   	pop    %esi
81002f03:	5d                   	pop    %ebp
81002f04:	c3                   	ret    

81002f05 <_sbrk_r>:
81002f05:	55                   	push   %ebp
81002f06:	89 e5                	mov    %esp,%ebp
81002f08:	83 ec 18             	sub    $0x18,%esp
81002f0b:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
81002f12:	00 00 00 
81002f15:	83 ec 0c             	sub    $0xc,%esp
81002f18:	ff 75 0c             	push   0xc(%ebp)
81002f1b:	e8 ff d5 ff ff       	call   8100051f <sbrk>
81002f20:	83 c4 10             	add    $0x10,%esp
81002f23:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f26:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002f2a:	75 14                	jne    81002f40 <_sbrk_r+0x3b>
81002f2c:	a1 b0 62 00 81       	mov    0x810062b0,%eax
81002f31:	85 c0                	test   %eax,%eax
81002f33:	74 0b                	je     81002f40 <_sbrk_r+0x3b>
81002f35:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
81002f3b:	8b 45 08             	mov    0x8(%ebp),%eax
81002f3e:	89 10                	mov    %edx,(%eax)
81002f40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f43:	c9                   	leave  
81002f44:	c3                   	ret    

81002f45 <__sread>:
81002f45:	55                   	push   %ebp
81002f46:	89 e5                	mov    %esp,%ebp
81002f48:	56                   	push   %esi
81002f49:	53                   	push   %ebx
81002f4a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002f4d:	8b 55 14             	mov    0x14(%ebp),%edx
81002f50:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002f54:	98                   	cwtl   
81002f55:	52                   	push   %edx
81002f56:	ff 75 10             	push   0x10(%ebp)
81002f59:	50                   	push   %eax
81002f5a:	ff 75 08             	push   0x8(%ebp)
81002f5d:	e8 4b 12 00 00       	call   810041ad <_read_r>
81002f62:	83 c4 10             	add    $0x10,%esp
81002f65:	89 c6                	mov    %eax,%esi
81002f67:	85 f6                	test   %esi,%esi
81002f69:	78 0a                	js     81002f75 <__sread+0x30>
81002f6b:	8b 43 50             	mov    0x50(%ebx),%eax
81002f6e:	01 f0                	add    %esi,%eax
81002f70:	89 43 50             	mov    %eax,0x50(%ebx)
81002f73:	eb 0b                	jmp    81002f80 <__sread+0x3b>
81002f75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002f79:	80 e4 ef             	and    $0xef,%ah
81002f7c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002f80:	89 f0                	mov    %esi,%eax
81002f82:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002f85:	5b                   	pop    %ebx
81002f86:	5e                   	pop    %esi
81002f87:	5d                   	pop    %ebp
81002f88:	c3                   	ret    

81002f89 <__seofread>:
81002f89:	55                   	push   %ebp
81002f8a:	89 e5                	mov    %esp,%ebp
81002f8c:	b8 00 00 00 00       	mov    $0x0,%eax
81002f91:	5d                   	pop    %ebp
81002f92:	c3                   	ret    

81002f93 <__swrite>:
81002f93:	55                   	push   %ebp
81002f94:	89 e5                	mov    %esp,%ebp
81002f96:	53                   	push   %ebx
81002f97:	83 ec 14             	sub    $0x14,%esp
81002f9a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002f9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002fa1:	98                   	cwtl   
81002fa2:	25 00 01 00 00       	and    $0x100,%eax
81002fa7:	85 c0                	test   %eax,%eax
81002fa9:	74 15                	je     81002fc0 <__swrite+0x2d>
81002fab:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002faf:	98                   	cwtl   
81002fb0:	6a 02                	push   $0x2
81002fb2:	6a 00                	push   $0x0
81002fb4:	50                   	push   %eax
81002fb5:	ff 75 08             	push   0x8(%ebp)
81002fb8:	e8 00 0f 00 00       	call   81003ebd <_lseek_r>
81002fbd:	83 c4 10             	add    $0x10,%esp
81002fc0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002fc4:	80 e4 ef             	and    $0xef,%ah
81002fc7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002fcb:	8b 55 14             	mov    0x14(%ebp),%edx
81002fce:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002fd2:	98                   	cwtl   
81002fd3:	52                   	push   %edx
81002fd4:	ff 75 10             	push   0x10(%ebp)
81002fd7:	50                   	push   %eax
81002fd8:	ff 75 08             	push   0x8(%ebp)
81002fdb:	e8 df 04 00 00       	call   810034bf <_write_r>
81002fe0:	83 c4 10             	add    $0x10,%esp
81002fe3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002fe6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fe9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002fec:	c9                   	leave  
81002fed:	c3                   	ret    

81002fee <__sseek>:
81002fee:	55                   	push   %ebp
81002fef:	89 e5                	mov    %esp,%ebp
81002ff1:	56                   	push   %esi
81002ff2:	53                   	push   %ebx
81002ff3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002ff6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002ffa:	98                   	cwtl   
81002ffb:	ff 75 14             	push   0x14(%ebp)
81002ffe:	ff 75 10             	push   0x10(%ebp)
81003001:	50                   	push   %eax
81003002:	ff 75 08             	push   0x8(%ebp)
81003005:	e8 b3 0e 00 00       	call   81003ebd <_lseek_r>
8100300a:	83 c4 10             	add    $0x10,%esp
8100300d:	89 c6                	mov    %eax,%esi
8100300f:	83 fe ff             	cmp    $0xffffffff,%esi
81003012:	75 0d                	jne    81003021 <__sseek+0x33>
81003014:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003018:	80 e4 ef             	and    $0xef,%ah
8100301b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100301f:	eb 0e                	jmp    8100302f <__sseek+0x41>
81003021:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003025:	80 cc 10             	or     $0x10,%ah
81003028:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100302c:	89 73 50             	mov    %esi,0x50(%ebx)
8100302f:	89 f0                	mov    %esi,%eax
81003031:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003034:	5b                   	pop    %ebx
81003035:	5e                   	pop    %esi
81003036:	5d                   	pop    %ebp
81003037:	c3                   	ret    

81003038 <__sclose>:
81003038:	55                   	push   %ebp
81003039:	89 e5                	mov    %esp,%ebp
8100303b:	83 ec 18             	sub    $0x18,%esp
8100303e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003041:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003044:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003047:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100304b:	98                   	cwtl   
8100304c:	83 ec 08             	sub    $0x8,%esp
8100304f:	50                   	push   %eax
81003050:	ff 75 08             	push   0x8(%ebp)
81003053:	e8 08 06 00 00       	call   81003660 <_close_r>
81003058:	83 c4 10             	add    $0x10,%esp
8100305b:	c9                   	leave  
8100305c:	c3                   	ret    
8100305d:	66 90                	xchg   %ax,%ax
8100305f:	90                   	nop

81003060 <strchr>:
81003060:	55                   	push   %ebp
81003061:	89 e5                	mov    %esp,%ebp
81003063:	57                   	push   %edi
81003064:	53                   	push   %ebx
81003065:	31 db                	xor    %ebx,%ebx
81003067:	8b 7d 08             	mov    0x8(%ebp),%edi
8100306a:	02 5d 0c             	add    0xc(%ebp),%bl
8100306d:	0f 84 98 00 00 00    	je     8100310b <L25>
81003073:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003079:	74 37                	je     810030b2 <L5>
8100307b:	89 f8                	mov    %edi,%eax
8100307d:	8a 08                	mov    (%eax),%cl
8100307f:	84 c9                	test   %cl,%cl
81003081:	74 7b                	je     810030fe <L14>
81003083:	38 d9                	cmp    %bl,%cl
81003085:	74 7d                	je     81003104 <L19>
81003087:	47                   	inc    %edi
81003088:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100308e:	74 22                	je     810030b2 <L5>
81003090:	89 f8                	mov    %edi,%eax
81003092:	8a 08                	mov    (%eax),%cl
81003094:	84 c9                	test   %cl,%cl
81003096:	74 66                	je     810030fe <L14>
81003098:	38 d9                	cmp    %bl,%cl
8100309a:	74 68                	je     81003104 <L19>
8100309c:	47                   	inc    %edi
8100309d:	f7 c7 03 00 00 00    	test   $0x3,%edi
810030a3:	74 0d                	je     810030b2 <L5>
810030a5:	89 f8                	mov    %edi,%eax
810030a7:	8a 08                	mov    (%eax),%cl
810030a9:	84 c9                	test   %cl,%cl
810030ab:	74 51                	je     810030fe <L14>
810030ad:	38 d9                	cmp    %bl,%cl
810030af:	74 53                	je     81003104 <L19>
810030b1:	47                   	inc    %edi

810030b2 <L5>:
810030b2:	89 d9                	mov    %ebx,%ecx
810030b4:	c1 e3 08             	shl    $0x8,%ebx
810030b7:	83 ef 04             	sub    $0x4,%edi
810030ba:	09 cb                	or     %ecx,%ebx
810030bc:	89 da                	mov    %ebx,%edx
810030be:	c1 e3 10             	shl    $0x10,%ebx
810030c1:	09 d3                	or     %edx,%ebx

810030c3 <L10>:
810030c3:	83 c7 04             	add    $0x4,%edi
810030c6:	8b 0f                	mov    (%edi),%ecx
810030c8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810030ce:	89 c8                	mov    %ecx,%eax
810030d0:	f7 d0                	not    %eax
810030d2:	21 c2                	and    %eax,%edx
810030d4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810030da:	75 14                	jne    810030f0 <L9>
810030dc:	31 d9                	xor    %ebx,%ecx
810030de:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810030e4:	f7 d1                	not    %ecx
810030e6:	21 ca                	and    %ecx,%edx
810030e8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810030ee:	74 d3                	je     810030c3 <L10>

810030f0 <L9>:
810030f0:	8d 47 ff             	lea    -0x1(%edi),%eax

810030f3 <L15>:
810030f3:	40                   	inc    %eax
810030f4:	8a 10                	mov    (%eax),%dl
810030f6:	84 d2                	test   %dl,%dl
810030f8:	74 04                	je     810030fe <L14>
810030fa:	38 da                	cmp    %bl,%dl
810030fc:	75 f5                	jne    810030f3 <L15>

810030fe <L14>:
810030fe:	38 18                	cmp    %bl,(%eax)
81003100:	74 02                	je     81003104 <L19>
81003102:	31 c0                	xor    %eax,%eax

81003104 <L19>:
81003104:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003107:	5b                   	pop    %ebx
81003108:	5f                   	pop    %edi
81003109:	c9                   	leave  
8100310a:	c3                   	ret    

8100310b <L25>:
8100310b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003111:	74 2b                	je     8100313e <L26>
81003113:	89 f8                	mov    %edi,%eax
81003115:	8a 08                	mov    (%eax),%cl
81003117:	84 c9                	test   %cl,%cl
81003119:	74 e9                	je     81003104 <L19>
8100311b:	47                   	inc    %edi
8100311c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003122:	74 1a                	je     8100313e <L26>
81003124:	89 f8                	mov    %edi,%eax
81003126:	8a 08                	mov    (%eax),%cl
81003128:	84 c9                	test   %cl,%cl
8100312a:	74 d8                	je     81003104 <L19>
8100312c:	47                   	inc    %edi
8100312d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003133:	74 09                	je     8100313e <L26>
81003135:	89 f8                	mov    %edi,%eax
81003137:	8a 08                	mov    (%eax),%cl
81003139:	84 c9                	test   %cl,%cl
8100313b:	74 c7                	je     81003104 <L19>
8100313d:	47                   	inc    %edi

8100313e <L26>:
8100313e:	83 ef 04             	sub    $0x4,%edi

81003141 <L27>:
81003141:	83 c7 04             	add    $0x4,%edi
81003144:	8b 0f                	mov    (%edi),%ecx
81003146:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100314c:	89 c8                	mov    %ecx,%eax
8100314e:	f7 d0                	not    %eax
81003150:	21 c2                	and    %eax,%edx
81003152:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81003158:	74 e7                	je     81003141 <L27>
8100315a:	eb 94                	jmp    810030f0 <L9>

8100315c <strcmp>:
8100315c:	55                   	push   %ebp
8100315d:	89 e5                	mov    %esp,%ebp
8100315f:	83 ec 10             	sub    $0x10,%esp
81003162:	8b 55 08             	mov    0x8(%ebp),%edx
81003165:	8b 45 0c             	mov    0xc(%ebp),%eax
81003168:	09 d0                	or     %edx,%eax
8100316a:	83 e0 03             	and    $0x3,%eax
8100316d:	85 c0                	test   %eax,%eax
8100316f:	75 5e                	jne    810031cf <strcmp+0x73>
81003171:	8b 45 08             	mov    0x8(%ebp),%eax
81003174:	89 45 fc             	mov    %eax,-0x4(%ebp)
81003177:	8b 45 0c             	mov    0xc(%ebp),%eax
8100317a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100317d:	eb 2c                	jmp    810031ab <strcmp+0x4f>
8100317f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81003182:	8b 00                	mov    (%eax),%eax
81003184:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100318a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100318d:	8b 00                	mov    (%eax),%eax
8100318f:	f7 d0                	not    %eax
81003191:	21 d0                	and    %edx,%eax
81003193:	25 80 80 80 80       	and    $0x80808080,%eax
81003198:	85 c0                	test   %eax,%eax
8100319a:	74 07                	je     810031a3 <strcmp+0x47>
8100319c:	b8 00 00 00 00       	mov    $0x0,%eax
810031a1:	eb 5c                	jmp    810031ff <strcmp+0xa3>
810031a3:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810031a7:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810031ab:	8b 45 fc             	mov    -0x4(%ebp),%eax
810031ae:	8b 10                	mov    (%eax),%edx
810031b0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810031b3:	8b 00                	mov    (%eax),%eax
810031b5:	39 c2                	cmp    %eax,%edx
810031b7:	74 c6                	je     8100317f <strcmp+0x23>
810031b9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810031bc:	89 45 08             	mov    %eax,0x8(%ebp)
810031bf:	8b 45 f8             	mov    -0x8(%ebp),%eax
810031c2:	89 45 0c             	mov    %eax,0xc(%ebp)
810031c5:	eb 08                	jmp    810031cf <strcmp+0x73>
810031c7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810031cb:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810031cf:	8b 45 08             	mov    0x8(%ebp),%eax
810031d2:	0f b6 00             	movzbl (%eax),%eax
810031d5:	84 c0                	test   %al,%al
810031d7:	74 10                	je     810031e9 <strcmp+0x8d>
810031d9:	8b 45 08             	mov    0x8(%ebp),%eax
810031dc:	0f b6 10             	movzbl (%eax),%edx
810031df:	8b 45 0c             	mov    0xc(%ebp),%eax
810031e2:	0f b6 00             	movzbl (%eax),%eax
810031e5:	38 c2                	cmp    %al,%dl
810031e7:	74 de                	je     810031c7 <strcmp+0x6b>
810031e9:	8b 45 08             	mov    0x8(%ebp),%eax
810031ec:	0f b6 00             	movzbl (%eax),%eax
810031ef:	0f b6 d0             	movzbl %al,%edx
810031f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810031f5:	0f b6 00             	movzbl (%eax),%eax
810031f8:	0f b6 c8             	movzbl %al,%ecx
810031fb:	89 d0                	mov    %edx,%eax
810031fd:	29 c8                	sub    %ecx,%eax
810031ff:	c9                   	leave  
81003200:	c3                   	ret    
81003201:	66 90                	xchg   %ax,%ax
81003203:	66 90                	xchg   %ax,%ax
81003205:	66 90                	xchg   %ax,%ax
81003207:	66 90                	xchg   %ax,%ax
81003209:	66 90                	xchg   %ax,%ax
8100320b:	66 90                	xchg   %ax,%ax
8100320d:	66 90                	xchg   %ax,%ax
8100320f:	90                   	nop

81003210 <strlen>:
81003210:	55                   	push   %ebp
81003211:	89 e5                	mov    %esp,%ebp
81003213:	57                   	push   %edi
81003214:	8b 55 08             	mov    0x8(%ebp),%edx
81003217:	89 d7                	mov    %edx,%edi
81003219:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100321f:	74 25                	je     81003246 <L5>
81003221:	8a 0f                	mov    (%edi),%cl
81003223:	47                   	inc    %edi
81003224:	84 c9                	test   %cl,%cl
81003226:	74 56                	je     8100327e <L15>
81003228:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100322e:	74 16                	je     81003246 <L5>
81003230:	8a 0f                	mov    (%edi),%cl
81003232:	47                   	inc    %edi
81003233:	84 c9                	test   %cl,%cl
81003235:	74 47                	je     8100327e <L15>
81003237:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100323d:	74 07                	je     81003246 <L5>
8100323f:	8a 0f                	mov    (%edi),%cl
81003241:	47                   	inc    %edi
81003242:	84 c9                	test   %cl,%cl
81003244:	74 38                	je     8100327e <L15>

81003246 <L5>:
81003246:	83 ef 04             	sub    $0x4,%edi
81003249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003250 <L10>:
81003250:	83 c7 04             	add    $0x4,%edi
81003253:	8b 0f                	mov    (%edi),%ecx
81003255:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100325b:	f7 d1                	not    %ecx
8100325d:	21 c8                	and    %ecx,%eax
8100325f:	a9 80 80 80 80       	test   $0x80808080,%eax
81003264:	74 ea                	je     81003250 <L10>
81003266:	f7 d1                	not    %ecx
81003268:	47                   	inc    %edi
81003269:	84 c9                	test   %cl,%cl
8100326b:	74 11                	je     8100327e <L15>
8100326d:	47                   	inc    %edi
8100326e:	c1 e9 08             	shr    $0x8,%ecx
81003271:	84 c9                	test   %cl,%cl
81003273:	74 09                	je     8100327e <L15>
81003275:	47                   	inc    %edi
81003276:	c1 e9 08             	shr    $0x8,%ecx
81003279:	84 c9                	test   %cl,%cl
8100327b:	74 01                	je     8100327e <L15>
8100327d:	47                   	inc    %edi

8100327e <L15>:
8100327e:	29 d7                	sub    %edx,%edi
81003280:	8d 47 ff             	lea    -0x1(%edi),%eax
81003283:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003286:	5f                   	pop    %edi
81003287:	c9                   	leave  
81003288:	c3                   	ret    

81003289 <strtok>:
81003289:	55                   	push   %ebp
8100328a:	89 e5                	mov    %esp,%ebp
8100328c:	83 ec 18             	sub    $0x18,%esp
8100328f:	8b 55 08             	mov    0x8(%ebp),%edx
81003292:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81003295:	a1 84 56 00 81       	mov    0x81005684,%eax
8100329a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100329d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032a0:	83 c0 5c             	add    $0x5c,%eax
810032a3:	6a 01                	push   $0x1
810032a5:	50                   	push   %eax
810032a6:	51                   	push   %ecx
810032a7:	52                   	push   %edx
810032a8:	e8 05 00 00 00       	call   810032b2 <__strtok_r>
810032ad:	83 c4 10             	add    $0x10,%esp
810032b0:	c9                   	leave  
810032b1:	c3                   	ret    

810032b2 <__strtok_r>:
810032b2:	55                   	push   %ebp
810032b3:	89 e5                	mov    %esp,%ebp
810032b5:	57                   	push   %edi
810032b6:	56                   	push   %esi
810032b7:	53                   	push   %ebx
810032b8:	83 ec 10             	sub    $0x10,%esp
810032bb:	8b 45 08             	mov    0x8(%ebp),%eax
810032be:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810032c1:	85 c0                	test   %eax,%eax
810032c3:	75 13                	jne    810032d8 <__strtok_r+0x26>
810032c5:	8b 45 10             	mov    0x10(%ebp),%eax
810032c8:	8b 00                	mov    (%eax),%eax
810032ca:	85 c0                	test   %eax,%eax
810032cc:	75 0a                	jne    810032d8 <__strtok_r+0x26>
810032ce:	b8 00 00 00 00       	mov    $0x0,%eax
810032d3:	e9 92 00 00 00       	jmp    8100336a <__strtok_r+0xb8>
810032d8:	90                   	nop
810032d9:	89 c2                	mov    %eax,%edx
810032db:	8d 42 01             	lea    0x1(%edx),%eax
810032de:	0f b6 12             	movzbl (%edx),%edx
810032e1:	0f be f2             	movsbl %dl,%esi
810032e4:	89 cf                	mov    %ecx,%edi
810032e6:	eb 1c                	jmp    81003304 <__strtok_r+0x52>
810032e8:	39 de                	cmp    %ebx,%esi
810032ea:	75 18                	jne    81003304 <__strtok_r+0x52>
810032ec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810032f0:	74 02                	je     810032f4 <__strtok_r+0x42>
810032f2:	eb e5                	jmp    810032d9 <__strtok_r+0x27>
810032f4:	8b 55 10             	mov    0x10(%ebp),%edx
810032f7:	89 02                	mov    %eax,(%edx)
810032f9:	8d 50 ff             	lea    -0x1(%eax),%edx
810032fc:	c6 02 00             	movb   $0x0,(%edx)
810032ff:	83 e8 01             	sub    $0x1,%eax
81003302:	eb 66                	jmp    8100336a <__strtok_r+0xb8>
81003304:	89 fa                	mov    %edi,%edx
81003306:	8d 7a 01             	lea    0x1(%edx),%edi
81003309:	0f b6 12             	movzbl (%edx),%edx
8100330c:	0f be da             	movsbl %dl,%ebx
8100330f:	85 db                	test   %ebx,%ebx
81003311:	75 d5                	jne    810032e8 <__strtok_r+0x36>
81003313:	85 f6                	test   %esi,%esi
81003315:	75 10                	jne    81003327 <__strtok_r+0x75>
81003317:	8b 45 10             	mov    0x10(%ebp),%eax
8100331a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003320:	b8 00 00 00 00       	mov    $0x0,%eax
81003325:	eb 43                	jmp    8100336a <__strtok_r+0xb8>
81003327:	8d 50 ff             	lea    -0x1(%eax),%edx
8100332a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100332d:	89 c2                	mov    %eax,%edx
8100332f:	8d 42 01             	lea    0x1(%edx),%eax
81003332:	0f b6 12             	movzbl (%edx),%edx
81003335:	0f be f2             	movsbl %dl,%esi
81003338:	89 cf                	mov    %ecx,%edi
8100333a:	89 fa                	mov    %edi,%edx
8100333c:	8d 7a 01             	lea    0x1(%edx),%edi
8100333f:	0f b6 12             	movzbl (%edx),%edx
81003342:	0f be da             	movsbl %dl,%ebx
81003345:	39 f3                	cmp    %esi,%ebx
81003347:	75 1b                	jne    81003364 <__strtok_r+0xb2>
81003349:	85 f6                	test   %esi,%esi
8100334b:	75 07                	jne    81003354 <__strtok_r+0xa2>
8100334d:	b8 00 00 00 00       	mov    $0x0,%eax
81003352:	eb 06                	jmp    8100335a <__strtok_r+0xa8>
81003354:	8d 50 ff             	lea    -0x1(%eax),%edx
81003357:	c6 02 00             	movb   $0x0,(%edx)
8100335a:	8b 55 10             	mov    0x10(%ebp),%edx
8100335d:	89 02                	mov    %eax,(%edx)
8100335f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003362:	eb 06                	jmp    8100336a <__strtok_r+0xb8>
81003364:	85 db                	test   %ebx,%ebx
81003366:	75 d2                	jne    8100333a <__strtok_r+0x88>
81003368:	eb c3                	jmp    8100332d <__strtok_r+0x7b>
8100336a:	83 c4 10             	add    $0x10,%esp
8100336d:	5b                   	pop    %ebx
8100336e:	5e                   	pop    %esi
8100336f:	5f                   	pop    %edi
81003370:	5d                   	pop    %ebp
81003371:	c3                   	ret    

81003372 <strtok_r>:
81003372:	55                   	push   %ebp
81003373:	89 e5                	mov    %esp,%ebp
81003375:	8b 45 08             	mov    0x8(%ebp),%eax
81003378:	8b 55 0c             	mov    0xc(%ebp),%edx
8100337b:	6a 01                	push   $0x1
8100337d:	ff 75 10             	push   0x10(%ebp)
81003380:	52                   	push   %edx
81003381:	50                   	push   %eax
81003382:	e8 2b ff ff ff       	call   810032b2 <__strtok_r>
81003387:	83 c4 10             	add    $0x10,%esp
8100338a:	c9                   	leave  
8100338b:	c3                   	ret    

8100338c <__swbuf_r>:
8100338c:	55                   	push   %ebp
8100338d:	89 e5                	mov    %esp,%ebp
8100338f:	57                   	push   %edi
81003390:	56                   	push   %esi
81003391:	53                   	push   %ebx
81003392:	83 ec 1c             	sub    $0x1c,%esp
81003395:	8b 7d 0c             	mov    0xc(%ebp),%edi
81003398:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100339b:	8b 45 08             	mov    0x8(%ebp),%eax
8100339e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810033a1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810033a5:	74 18                	je     810033bf <__swbuf_r+0x33>
810033a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810033aa:	8b 40 38             	mov    0x38(%eax),%eax
810033ad:	85 c0                	test   %eax,%eax
810033af:	75 0e                	jne    810033bf <__swbuf_r+0x33>
810033b1:	83 ec 0c             	sub    $0xc,%esp
810033b4:	ff 75 e4             	push   -0x1c(%ebp)
810033b7:	e8 ce d8 ff ff       	call   81000c8a <__sinit>
810033bc:	83 c4 10             	add    $0x10,%esp
810033bf:	8b 43 18             	mov    0x18(%ebx),%eax
810033c2:	89 43 08             	mov    %eax,0x8(%ebx)
810033c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033c9:	98                   	cwtl   
810033ca:	83 e0 08             	and    $0x8,%eax
810033cd:	85 c0                	test   %eax,%eax
810033cf:	74 07                	je     810033d8 <__swbuf_r+0x4c>
810033d1:	8b 43 10             	mov    0x10(%ebx),%eax
810033d4:	85 c0                	test   %eax,%eax
810033d6:	75 1d                	jne    810033f5 <__swbuf_r+0x69>
810033d8:	83 ec 08             	sub    $0x8,%esp
810033db:	53                   	push   %ebx
810033dc:	ff 75 08             	push   0x8(%ebp)
810033df:	e8 21 01 00 00       	call   81003505 <__swsetup_r>
810033e4:	83 c4 10             	add    $0x10,%esp
810033e7:	85 c0                	test   %eax,%eax
810033e9:	74 0a                	je     810033f5 <__swbuf_r+0x69>
810033eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033f0:	e9 a1 00 00 00       	jmp    81003496 <__swbuf_r+0x10a>
810033f5:	89 f8                	mov    %edi,%eax
810033f7:	0f b6 f8             	movzbl %al,%edi
810033fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033fe:	98                   	cwtl   
810033ff:	25 00 20 00 00       	and    $0x2000,%eax
81003404:	85 c0                	test   %eax,%eax
81003406:	75 14                	jne    8100341c <__swbuf_r+0x90>
81003408:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100340c:	80 cc 20             	or     $0x20,%ah
8100340f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003413:	8b 43 64             	mov    0x64(%ebx),%eax
81003416:	80 e4 df             	and    $0xdf,%ah
81003419:	89 43 64             	mov    %eax,0x64(%ebx)
8100341c:	8b 03                	mov    (%ebx),%eax
8100341e:	8b 53 10             	mov    0x10(%ebx),%edx
81003421:	29 d0                	sub    %edx,%eax
81003423:	89 c6                	mov    %eax,%esi
81003425:	8b 43 14             	mov    0x14(%ebx),%eax
81003428:	39 c6                	cmp    %eax,%esi
8100342a:	7c 1f                	jl     8100344b <__swbuf_r+0xbf>
8100342c:	83 ec 08             	sub    $0x8,%esp
8100342f:	53                   	push   %ebx
81003430:	ff 75 08             	push   0x8(%ebp)
81003433:	e8 4f d3 ff ff       	call   81000787 <_fflush_r>
81003438:	83 c4 10             	add    $0x10,%esp
8100343b:	85 c0                	test   %eax,%eax
8100343d:	74 07                	je     81003446 <__swbuf_r+0xba>
8100343f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003444:	eb 50                	jmp    81003496 <__swbuf_r+0x10a>
81003446:	be 00 00 00 00       	mov    $0x0,%esi
8100344b:	8b 43 08             	mov    0x8(%ebx),%eax
8100344e:	83 e8 01             	sub    $0x1,%eax
81003451:	89 43 08             	mov    %eax,0x8(%ebx)
81003454:	8b 03                	mov    (%ebx),%eax
81003456:	8d 50 01             	lea    0x1(%eax),%edx
81003459:	89 13                	mov    %edx,(%ebx)
8100345b:	89 fa                	mov    %edi,%edx
8100345d:	88 10                	mov    %dl,(%eax)
8100345f:	83 c6 01             	add    $0x1,%esi
81003462:	8b 43 14             	mov    0x14(%ebx),%eax
81003465:	39 c6                	cmp    %eax,%esi
81003467:	74 11                	je     8100347a <__swbuf_r+0xee>
81003469:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100346d:	98                   	cwtl   
8100346e:	83 e0 01             	and    $0x1,%eax
81003471:	85 c0                	test   %eax,%eax
81003473:	74 1f                	je     81003494 <__swbuf_r+0x108>
81003475:	83 ff 0a             	cmp    $0xa,%edi
81003478:	75 1a                	jne    81003494 <__swbuf_r+0x108>
8100347a:	83 ec 08             	sub    $0x8,%esp
8100347d:	53                   	push   %ebx
8100347e:	ff 75 08             	push   0x8(%ebp)
81003481:	e8 01 d3 ff ff       	call   81000787 <_fflush_r>
81003486:	83 c4 10             	add    $0x10,%esp
81003489:	85 c0                	test   %eax,%eax
8100348b:	74 07                	je     81003494 <__swbuf_r+0x108>
8100348d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003492:	eb 02                	jmp    81003496 <__swbuf_r+0x10a>
81003494:	89 f8                	mov    %edi,%eax
81003496:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003499:	5b                   	pop    %ebx
8100349a:	5e                   	pop    %esi
8100349b:	5f                   	pop    %edi
8100349c:	5d                   	pop    %ebp
8100349d:	c3                   	ret    

8100349e <__swbuf>:
8100349e:	55                   	push   %ebp
8100349f:	89 e5                	mov    %esp,%ebp
810034a1:	83 ec 08             	sub    $0x8,%esp
810034a4:	8b 55 08             	mov    0x8(%ebp),%edx
810034a7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810034aa:	a1 84 56 00 81       	mov    0x81005684,%eax
810034af:	83 ec 04             	sub    $0x4,%esp
810034b2:	51                   	push   %ecx
810034b3:	52                   	push   %edx
810034b4:	50                   	push   %eax
810034b5:	e8 d2 fe ff ff       	call   8100338c <__swbuf_r>
810034ba:	83 c4 10             	add    $0x10,%esp
810034bd:	c9                   	leave  
810034be:	c3                   	ret    

810034bf <_write_r>:
810034bf:	55                   	push   %ebp
810034c0:	89 e5                	mov    %esp,%ebp
810034c2:	83 ec 18             	sub    $0x18,%esp
810034c5:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
810034cc:	00 00 00 
810034cf:	83 ec 04             	sub    $0x4,%esp
810034d2:	ff 75 14             	push   0x14(%ebp)
810034d5:	ff 75 10             	push   0x10(%ebp)
810034d8:	ff 75 0c             	push   0xc(%ebp)
810034db:	e8 7c cf ff ff       	call   8100045c <write>
810034e0:	83 c4 10             	add    $0x10,%esp
810034e3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034e6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810034ea:	75 14                	jne    81003500 <_write_r+0x41>
810034ec:	a1 b0 62 00 81       	mov    0x810062b0,%eax
810034f1:	85 c0                	test   %eax,%eax
810034f3:	74 0b                	je     81003500 <_write_r+0x41>
810034f5:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
810034fb:	8b 45 08             	mov    0x8(%ebp),%eax
810034fe:	89 10                	mov    %edx,(%eax)
81003500:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003503:	c9                   	leave  
81003504:	c3                   	ret    

81003505 <__swsetup_r>:
81003505:	55                   	push   %ebp
81003506:	89 e5                	mov    %esp,%ebp
81003508:	53                   	push   %ebx
81003509:	83 ec 14             	sub    $0x14,%esp
8100350c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100350f:	a1 84 56 00 81       	mov    0x81005684,%eax
81003514:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003517:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100351b:	74 18                	je     81003535 <__swsetup_r+0x30>
8100351d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003520:	8b 40 38             	mov    0x38(%eax),%eax
81003523:	85 c0                	test   %eax,%eax
81003525:	75 0e                	jne    81003535 <__swsetup_r+0x30>
81003527:	83 ec 0c             	sub    $0xc,%esp
8100352a:	ff 75 f4             	push   -0xc(%ebp)
8100352d:	e8 58 d7 ff ff       	call   81000c8a <__sinit>
81003532:	83 c4 10             	add    $0x10,%esp
81003535:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003539:	98                   	cwtl   
8100353a:	83 e0 08             	and    $0x8,%eax
8100353d:	85 c0                	test   %eax,%eax
8100353f:	0f 85 82 00 00 00    	jne    810035c7 <__swsetup_r+0xc2>
81003545:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003549:	98                   	cwtl   
8100354a:	83 e0 10             	and    $0x10,%eax
8100354d:	85 c0                	test   %eax,%eax
8100354f:	75 1e                	jne    8100356f <__swsetup_r+0x6a>
81003551:	8b 45 08             	mov    0x8(%ebp),%eax
81003554:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100355a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100355e:	83 c8 40             	or     $0x40,%eax
81003561:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003565:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100356a:	e9 ec 00 00 00       	jmp    8100365b <__swsetup_r+0x156>
8100356f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003573:	98                   	cwtl   
81003574:	83 e0 04             	and    $0x4,%eax
81003577:	85 c0                	test   %eax,%eax
81003579:	74 41                	je     810035bc <__swsetup_r+0xb7>
8100357b:	8b 43 30             	mov    0x30(%ebx),%eax
8100357e:	85 c0                	test   %eax,%eax
81003580:	74 23                	je     810035a5 <__swsetup_r+0xa0>
81003582:	8b 53 30             	mov    0x30(%ebx),%edx
81003585:	8d 43 40             	lea    0x40(%ebx),%eax
81003588:	39 c2                	cmp    %eax,%edx
8100358a:	74 12                	je     8100359e <__swsetup_r+0x99>
8100358c:	8b 43 30             	mov    0x30(%ebx),%eax
8100358f:	83 ec 08             	sub    $0x8,%esp
81003592:	50                   	push   %eax
81003593:	ff 75 08             	push   0x8(%ebp)
81003596:	e8 51 d8 ff ff       	call   81000dec <_free_r>
8100359b:	83 c4 10             	add    $0x10,%esp
8100359e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810035a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035a9:	83 e0 db             	and    $0xffffffdb,%eax
810035ac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810035b0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810035b7:	8b 43 10             	mov    0x10(%ebx),%eax
810035ba:	89 03                	mov    %eax,(%ebx)
810035bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035c0:	83 c8 08             	or     $0x8,%eax
810035c3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810035c7:	8b 43 10             	mov    0x10(%ebx),%eax
810035ca:	85 c0                	test   %eax,%eax
810035cc:	75 2b                	jne    810035f9 <__swsetup_r+0xf4>
810035ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035d2:	98                   	cwtl   
810035d3:	25 00 02 00 00       	and    $0x200,%eax
810035d8:	85 c0                	test   %eax,%eax
810035da:	74 0e                	je     810035ea <__swsetup_r+0xe5>
810035dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035e0:	98                   	cwtl   
810035e1:	25 80 00 00 00       	and    $0x80,%eax
810035e6:	85 c0                	test   %eax,%eax
810035e8:	74 0f                	je     810035f9 <__swsetup_r+0xf4>
810035ea:	83 ec 08             	sub    $0x8,%esp
810035ed:	53                   	push   %ebx
810035ee:	ff 75 08             	push   0x8(%ebp)
810035f1:	e8 0d 09 00 00       	call   81003f03 <__smakebuf_r>
810035f6:	83 c4 10             	add    $0x10,%esp
810035f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035fd:	98                   	cwtl   
810035fe:	83 e0 01             	and    $0x1,%eax
81003601:	85 c0                	test   %eax,%eax
81003603:	74 11                	je     81003616 <__swsetup_r+0x111>
81003605:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100360c:	8b 43 14             	mov    0x14(%ebx),%eax
8100360f:	f7 d8                	neg    %eax
81003611:	89 43 18             	mov    %eax,0x18(%ebx)
81003614:	eb 19                	jmp    8100362f <__swsetup_r+0x12a>
81003616:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100361a:	98                   	cwtl   
8100361b:	83 e0 02             	and    $0x2,%eax
8100361e:	85 c0                	test   %eax,%eax
81003620:	75 05                	jne    81003627 <__swsetup_r+0x122>
81003622:	8b 43 14             	mov    0x14(%ebx),%eax
81003625:	eb 05                	jmp    8100362c <__swsetup_r+0x127>
81003627:	b8 00 00 00 00       	mov    $0x0,%eax
8100362c:	89 43 08             	mov    %eax,0x8(%ebx)
8100362f:	8b 43 10             	mov    0x10(%ebx),%eax
81003632:	85 c0                	test   %eax,%eax
81003634:	75 20                	jne    81003656 <__swsetup_r+0x151>
81003636:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100363a:	98                   	cwtl   
8100363b:	25 80 00 00 00       	and    $0x80,%eax
81003640:	85 c0                	test   %eax,%eax
81003642:	74 12                	je     81003656 <__swsetup_r+0x151>
81003644:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003648:	83 c8 40             	or     $0x40,%eax
8100364b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100364f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003654:	eb 05                	jmp    8100365b <__swsetup_r+0x156>
81003656:	b8 00 00 00 00       	mov    $0x0,%eax
8100365b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100365e:	c9                   	leave  
8100365f:	c3                   	ret    

81003660 <_close_r>:
81003660:	55                   	push   %ebp
81003661:	89 e5                	mov    %esp,%ebp
81003663:	83 ec 18             	sub    $0x18,%esp
81003666:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
8100366d:	00 00 00 
81003670:	83 ec 0c             	sub    $0xc,%esp
81003673:	ff 75 0c             	push   0xc(%ebp)
81003676:	e8 0e ce ff ff       	call   81000489 <close>
8100367b:	83 c4 10             	add    $0x10,%esp
8100367e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003681:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003685:	75 14                	jne    8100369b <_close_r+0x3b>
81003687:	a1 b0 62 00 81       	mov    0x810062b0,%eax
8100368c:	85 c0                	test   %eax,%eax
8100368e:	74 0b                	je     8100369b <_close_r+0x3b>
81003690:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
81003696:	8b 45 08             	mov    0x8(%ebp),%eax
81003699:	89 10                	mov    %edx,(%eax)
8100369b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100369e:	c9                   	leave  
8100369f:	c3                   	ret    

810036a0 <_fclose_r>:
810036a0:	55                   	push   %ebp
810036a1:	89 e5                	mov    %esp,%ebp
810036a3:	53                   	push   %ebx
810036a4:	83 ec 14             	sub    $0x14,%esp
810036a7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810036aa:	85 db                	test   %ebx,%ebx
810036ac:	75 0a                	jne    810036b8 <_fclose_r+0x18>
810036ae:	b8 00 00 00 00       	mov    $0x0,%eax
810036b3:	e9 ea 00 00 00       	jmp    810037a2 <_fclose_r+0x102>
810036b8:	8b 45 08             	mov    0x8(%ebp),%eax
810036bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810036be:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810036c2:	74 18                	je     810036dc <_fclose_r+0x3c>
810036c4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036c7:	8b 40 38             	mov    0x38(%eax),%eax
810036ca:	85 c0                	test   %eax,%eax
810036cc:	75 0e                	jne    810036dc <_fclose_r+0x3c>
810036ce:	83 ec 0c             	sub    $0xc,%esp
810036d1:	ff 75 f0             	push   -0x10(%ebp)
810036d4:	e8 b1 d5 ff ff       	call   81000c8a <__sinit>
810036d9:	83 c4 10             	add    $0x10,%esp
810036dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036e0:	66 85 c0             	test   %ax,%ax
810036e3:	75 0a                	jne    810036ef <_fclose_r+0x4f>
810036e5:	b8 00 00 00 00       	mov    $0x0,%eax
810036ea:	e9 b3 00 00 00       	jmp    810037a2 <_fclose_r+0x102>
810036ef:	83 ec 08             	sub    $0x8,%esp
810036f2:	53                   	push   %ebx
810036f3:	ff 75 08             	push   0x8(%ebp)
810036f6:	e8 66 ce ff ff       	call   81000561 <__sflush_r>
810036fb:	83 c4 10             	add    $0x10,%esp
810036fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003701:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003704:	85 c0                	test   %eax,%eax
81003706:	74 1d                	je     81003725 <_fclose_r+0x85>
81003708:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100370b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100370e:	83 ec 08             	sub    $0x8,%esp
81003711:	52                   	push   %edx
81003712:	ff 75 08             	push   0x8(%ebp)
81003715:	ff d0                	call   *%eax
81003717:	83 c4 10             	add    $0x10,%esp
8100371a:	85 c0                	test   %eax,%eax
8100371c:	79 07                	jns    81003725 <_fclose_r+0x85>
8100371e:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81003725:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003729:	98                   	cwtl   
8100372a:	25 80 00 00 00       	and    $0x80,%eax
8100372f:	85 c0                	test   %eax,%eax
81003731:	74 12                	je     81003745 <_fclose_r+0xa5>
81003733:	8b 43 10             	mov    0x10(%ebx),%eax
81003736:	83 ec 08             	sub    $0x8,%esp
81003739:	50                   	push   %eax
8100373a:	ff 75 08             	push   0x8(%ebp)
8100373d:	e8 aa d6 ff ff       	call   81000dec <_free_r>
81003742:	83 c4 10             	add    $0x10,%esp
81003745:	8b 43 30             	mov    0x30(%ebx),%eax
81003748:	85 c0                	test   %eax,%eax
8100374a:	74 23                	je     8100376f <_fclose_r+0xcf>
8100374c:	8b 53 30             	mov    0x30(%ebx),%edx
8100374f:	8d 43 40             	lea    0x40(%ebx),%eax
81003752:	39 c2                	cmp    %eax,%edx
81003754:	74 12                	je     81003768 <_fclose_r+0xc8>
81003756:	8b 43 30             	mov    0x30(%ebx),%eax
81003759:	83 ec 08             	sub    $0x8,%esp
8100375c:	50                   	push   %eax
8100375d:	ff 75 08             	push   0x8(%ebp)
81003760:	e8 87 d6 ff ff       	call   81000dec <_free_r>
81003765:	83 c4 10             	add    $0x10,%esp
81003768:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100376f:	8b 43 44             	mov    0x44(%ebx),%eax
81003772:	85 c0                	test   %eax,%eax
81003774:	74 19                	je     8100378f <_fclose_r+0xef>
81003776:	8b 43 44             	mov    0x44(%ebx),%eax
81003779:	83 ec 08             	sub    $0x8,%esp
8100377c:	50                   	push   %eax
8100377d:	ff 75 08             	push   0x8(%ebp)
81003780:	e8 67 d6 ff ff       	call   81000dec <_free_r>
81003785:	83 c4 10             	add    $0x10,%esp
81003788:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100378f:	e8 8f d5 ff ff       	call   81000d23 <__sfp_lock_acquire>
81003794:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
8100379a:	e8 8a d5 ff ff       	call   81000d29 <__sfp_lock_release>
8100379f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810037a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810037a5:	c9                   	leave  
810037a6:	c3                   	ret    

810037a7 <fclose>:
810037a7:	55                   	push   %ebp
810037a8:	89 e5                	mov    %esp,%ebp
810037aa:	83 ec 08             	sub    $0x8,%esp
810037ad:	8b 55 08             	mov    0x8(%ebp),%edx
810037b0:	a1 84 56 00 81       	mov    0x81005684,%eax
810037b5:	83 ec 08             	sub    $0x8,%esp
810037b8:	52                   	push   %edx
810037b9:	50                   	push   %eax
810037ba:	e8 e1 fe ff ff       	call   810036a0 <_fclose_r>
810037bf:	83 c4 10             	add    $0x10,%esp
810037c2:	c9                   	leave  
810037c3:	c3                   	ret    

810037c4 <__sputc_r>:
810037c4:	55                   	push   %ebp
810037c5:	89 e5                	mov    %esp,%ebp
810037c7:	83 ec 08             	sub    $0x8,%esp
810037ca:	8b 45 10             	mov    0x10(%ebp),%eax
810037cd:	8b 40 08             	mov    0x8(%eax),%eax
810037d0:	8d 50 ff             	lea    -0x1(%eax),%edx
810037d3:	8b 45 10             	mov    0x10(%ebp),%eax
810037d6:	89 50 08             	mov    %edx,0x8(%eax)
810037d9:	8b 45 10             	mov    0x10(%ebp),%eax
810037dc:	8b 40 08             	mov    0x8(%eax),%eax
810037df:	85 c0                	test   %eax,%eax
810037e1:	79 17                	jns    810037fa <__sputc_r+0x36>
810037e3:	8b 45 10             	mov    0x10(%ebp),%eax
810037e6:	8b 50 08             	mov    0x8(%eax),%edx
810037e9:	8b 45 10             	mov    0x10(%ebp),%eax
810037ec:	8b 40 18             	mov    0x18(%eax),%eax
810037ef:	39 c2                	cmp    %eax,%edx
810037f1:	7c 21                	jl     81003814 <__sputc_r+0x50>
810037f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810037f6:	3c 0a                	cmp    $0xa,%al
810037f8:	74 1a                	je     81003814 <__sputc_r+0x50>
810037fa:	8b 45 10             	mov    0x10(%ebp),%eax
810037fd:	8b 00                	mov    (%eax),%eax
810037ff:	8d 48 01             	lea    0x1(%eax),%ecx
81003802:	8b 55 10             	mov    0x10(%ebp),%edx
81003805:	89 0a                	mov    %ecx,(%edx)
81003807:	8b 55 0c             	mov    0xc(%ebp),%edx
8100380a:	88 10                	mov    %dl,(%eax)
8100380c:	0f b6 00             	movzbl (%eax),%eax
8100380f:	0f b6 c0             	movzbl %al,%eax
81003812:	eb 14                	jmp    81003828 <__sputc_r+0x64>
81003814:	83 ec 04             	sub    $0x4,%esp
81003817:	ff 75 10             	push   0x10(%ebp)
8100381a:	ff 75 0c             	push   0xc(%ebp)
8100381d:	ff 75 08             	push   0x8(%ebp)
81003820:	e8 67 fb ff ff       	call   8100338c <__swbuf_r>
81003825:	83 c4 10             	add    $0x10,%esp
81003828:	c9                   	leave  
81003829:	c3                   	ret    

8100382a <__fputwc>:
8100382a:	55                   	push   %ebp
8100382b:	89 e5                	mov    %esp,%ebp
8100382d:	83 ec 18             	sub    $0x18,%esp
81003830:	e8 55 06 00 00       	call   81003e8a <__locale_mb_cur_max>
81003835:	83 f8 01             	cmp    $0x1,%eax
81003838:	75 1e                	jne    81003858 <__fputwc+0x2e>
8100383a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100383e:	7e 18                	jle    81003858 <__fputwc+0x2e>
81003840:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81003847:	7f 0f                	jg     81003858 <__fputwc+0x2e>
81003849:	8b 45 0c             	mov    0xc(%ebp),%eax
8100384c:	88 45 ef             	mov    %al,-0x11(%ebp)
8100384f:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003856:	eb 3c                	jmp    81003894 <__fputwc+0x6a>
81003858:	8b 45 10             	mov    0x10(%ebp),%eax
8100385b:	83 c0 5c             	add    $0x5c,%eax
8100385e:	50                   	push   %eax
8100385f:	ff 75 0c             	push   0xc(%ebp)
81003862:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003865:	50                   	push   %eax
81003866:	ff 75 08             	push   0x8(%ebp)
81003869:	e8 0a 14 00 00       	call   81004c78 <_wcrtomb_r>
8100386e:	83 c4 10             	add    $0x10,%esp
81003871:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003874:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003878:	75 1a                	jne    81003894 <__fputwc+0x6a>
8100387a:	8b 45 10             	mov    0x10(%ebp),%eax
8100387d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003881:	83 c8 40             	or     $0x40,%eax
81003884:	89 c2                	mov    %eax,%edx
81003886:	8b 45 10             	mov    0x10(%ebp),%eax
81003889:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100388d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003892:	eb 44                	jmp    810038d8 <__fputwc+0xae>
81003894:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100389b:	eb 30                	jmp    810038cd <__fputwc+0xa3>
8100389d:	8d 55 ef             	lea    -0x11(%ebp),%edx
810038a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038a3:	01 d0                	add    %edx,%eax
810038a5:	0f b6 00             	movzbl (%eax),%eax
810038a8:	0f b6 c0             	movzbl %al,%eax
810038ab:	83 ec 04             	sub    $0x4,%esp
810038ae:	ff 75 10             	push   0x10(%ebp)
810038b1:	50                   	push   %eax
810038b2:	ff 75 08             	push   0x8(%ebp)
810038b5:	e8 0a ff ff ff       	call   810037c4 <__sputc_r>
810038ba:	83 c4 10             	add    $0x10,%esp
810038bd:	83 f8 ff             	cmp    $0xffffffff,%eax
810038c0:	75 07                	jne    810038c9 <__fputwc+0x9f>
810038c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810038c7:	eb 0f                	jmp    810038d8 <__fputwc+0xae>
810038c9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810038cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038d0:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810038d3:	72 c8                	jb     8100389d <__fputwc+0x73>
810038d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810038d8:	c9                   	leave  
810038d9:	c3                   	ret    

810038da <_fputwc_r>:
810038da:	55                   	push   %ebp
810038db:	89 e5                	mov    %esp,%ebp
810038dd:	83 ec 18             	sub    $0x18,%esp
810038e0:	8b 45 10             	mov    0x10(%ebp),%eax
810038e3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810038e7:	98                   	cwtl   
810038e8:	25 00 20 00 00       	and    $0x2000,%eax
810038ed:	85 c0                	test   %eax,%eax
810038ef:	75 24                	jne    81003915 <_fputwc_r+0x3b>
810038f1:	8b 45 10             	mov    0x10(%ebp),%eax
810038f4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810038f8:	80 cc 20             	or     $0x20,%ah
810038fb:	89 c2                	mov    %eax,%edx
810038fd:	8b 45 10             	mov    0x10(%ebp),%eax
81003900:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003904:	8b 45 10             	mov    0x10(%ebp),%eax
81003907:	8b 40 64             	mov    0x64(%eax),%eax
8100390a:	80 cc 20             	or     $0x20,%ah
8100390d:	89 c2                	mov    %eax,%edx
8100390f:	8b 45 10             	mov    0x10(%ebp),%eax
81003912:	89 50 64             	mov    %edx,0x64(%eax)
81003915:	83 ec 04             	sub    $0x4,%esp
81003918:	ff 75 10             	push   0x10(%ebp)
8100391b:	ff 75 0c             	push   0xc(%ebp)
8100391e:	ff 75 08             	push   0x8(%ebp)
81003921:	e8 04 ff ff ff       	call   8100382a <__fputwc>
81003926:	83 c4 10             	add    $0x10,%esp
81003929:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100392c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100392f:	c9                   	leave  
81003930:	c3                   	ret    

81003931 <fputwc>:
81003931:	55                   	push   %ebp
81003932:	89 e5                	mov    %esp,%ebp
81003934:	83 ec 18             	sub    $0x18,%esp
81003937:	a1 84 56 00 81       	mov    0x81005684,%eax
8100393c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100393f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003942:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003945:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81003949:	74 18                	je     81003963 <fputwc+0x32>
8100394b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100394e:	8b 40 38             	mov    0x38(%eax),%eax
81003951:	85 c0                	test   %eax,%eax
81003953:	75 0e                	jne    81003963 <fputwc+0x32>
81003955:	83 ec 0c             	sub    $0xc,%esp
81003958:	ff 75 f0             	push   -0x10(%ebp)
8100395b:	e8 2a d3 ff ff       	call   81000c8a <__sinit>
81003960:	83 c4 10             	add    $0x10,%esp
81003963:	83 ec 04             	sub    $0x4,%esp
81003966:	ff 75 0c             	push   0xc(%ebp)
81003969:	ff 75 08             	push   0x8(%ebp)
8100396c:	ff 75 f4             	push   -0xc(%ebp)
8100396f:	e8 66 ff ff ff       	call   810038da <_fputwc_r>
81003974:	83 c4 10             	add    $0x10,%esp
81003977:	c9                   	leave  
81003978:	c3                   	ret    

81003979 <__sfvwrite_r>:
81003979:	55                   	push   %ebp
8100397a:	89 e5                	mov    %esp,%ebp
8100397c:	57                   	push   %edi
8100397d:	56                   	push   %esi
8100397e:	53                   	push   %ebx
8100397f:	83 ec 3c             	sub    $0x3c,%esp
81003982:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003985:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100398c:	8b 45 10             	mov    0x10(%ebp),%eax
8100398f:	8b 78 08             	mov    0x8(%eax),%edi
81003992:	85 ff                	test   %edi,%edi
81003994:	75 0a                	jne    810039a0 <__sfvwrite_r+0x27>
81003996:	b8 00 00 00 00       	mov    $0x0,%eax
8100399b:	e9 6f 04 00 00       	jmp    81003e0f <__sfvwrite_r+0x496>
810039a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810039a4:	98                   	cwtl   
810039a5:	83 e0 08             	and    $0x8,%eax
810039a8:	85 c0                	test   %eax,%eax
810039aa:	74 07                	je     810039b3 <__sfvwrite_r+0x3a>
810039ac:	8b 43 10             	mov    0x10(%ebx),%eax
810039af:	85 c0                	test   %eax,%eax
810039b1:	75 1d                	jne    810039d0 <__sfvwrite_r+0x57>
810039b3:	83 ec 08             	sub    $0x8,%esp
810039b6:	53                   	push   %ebx
810039b7:	ff 75 08             	push   0x8(%ebp)
810039ba:	e8 46 fb ff ff       	call   81003505 <__swsetup_r>
810039bf:	83 c4 10             	add    $0x10,%esp
810039c2:	85 c0                	test   %eax,%eax
810039c4:	74 0a                	je     810039d0 <__sfvwrite_r+0x57>
810039c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810039cb:	e9 3f 04 00 00       	jmp    81003e0f <__sfvwrite_r+0x496>
810039d0:	8b 45 10             	mov    0x10(%ebp),%eax
810039d3:	8b 00                	mov    (%eax),%eax
810039d5:	89 45 c0             	mov    %eax,-0x40(%ebp)
810039d8:	bf 00 00 00 00       	mov    $0x0,%edi
810039dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810039e1:	98                   	cwtl   
810039e2:	83 e0 02             	and    $0x2,%eax
810039e5:	85 c0                	test   %eax,%eax
810039e7:	74 68                	je     81003a51 <__sfvwrite_r+0xd8>
810039e9:	eb 11                	jmp    810039fc <__sfvwrite_r+0x83>
810039eb:	8b 45 c0             	mov    -0x40(%ebp),%eax
810039ee:	8b 08                	mov    (%eax),%ecx
810039f0:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810039f3:	8b 78 04             	mov    0x4(%eax),%edi
810039f6:	83 c0 08             	add    $0x8,%eax
810039f9:	89 45 c0             	mov    %eax,-0x40(%ebp)
810039fc:	85 ff                	test   %edi,%edi
810039fe:	74 eb                	je     810039eb <__sfvwrite_r+0x72>
81003a00:	8b 4b 24             	mov    0x24(%ebx),%ecx
81003a03:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81003a08:	39 c7                	cmp    %eax,%edi
81003a0a:	0f 46 c7             	cmovbe %edi,%eax
81003a0d:	89 c2                	mov    %eax,%edx
81003a0f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81003a12:	52                   	push   %edx
81003a13:	ff 75 c4             	push   -0x3c(%ebp)
81003a16:	50                   	push   %eax
81003a17:	ff 75 08             	push   0x8(%ebp)
81003a1a:	ff d1                	call   *%ecx
81003a1c:	83 c4 10             	add    $0x10,%esp
81003a1f:	89 c6                	mov    %eax,%esi
81003a21:	85 f6                	test   %esi,%esi
81003a23:	0f 8e cf 03 00 00    	jle    81003df8 <__sfvwrite_r+0x47f>
81003a29:	89 f0                	mov    %esi,%eax
81003a2b:	01 45 c4             	add    %eax,-0x3c(%ebp)
81003a2e:	89 f0                	mov    %esi,%eax
81003a30:	29 c7                	sub    %eax,%edi
81003a32:	8b 45 10             	mov    0x10(%ebp),%eax
81003a35:	8b 40 08             	mov    0x8(%eax),%eax
81003a38:	89 f2                	mov    %esi,%edx
81003a3a:	29 d0                	sub    %edx,%eax
81003a3c:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003a3f:	89 41 08             	mov    %eax,0x8(%ecx)
81003a42:	8b 45 10             	mov    0x10(%ebp),%eax
81003a45:	8b 40 08             	mov    0x8(%eax),%eax
81003a48:	85 c0                	test   %eax,%eax
81003a4a:	75 b0                	jne    810039fc <__sfvwrite_r+0x83>
81003a4c:	e9 a0 03 00 00       	jmp    81003df1 <__sfvwrite_r+0x478>
81003a51:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003a55:	98                   	cwtl   
81003a56:	83 e0 01             	and    $0x1,%eax
81003a59:	85 c0                	test   %eax,%eax
81003a5b:	0f 85 44 02 00 00    	jne    81003ca5 <__sfvwrite_r+0x32c>
81003a61:	eb 11                	jmp    81003a74 <__sfvwrite_r+0xfb>
81003a63:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003a66:	8b 08                	mov    (%eax),%ecx
81003a68:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81003a6b:	8b 78 04             	mov    0x4(%eax),%edi
81003a6e:	83 c0 08             	add    $0x8,%eax
81003a71:	89 45 c0             	mov    %eax,-0x40(%ebp)
81003a74:	85 ff                	test   %edi,%edi
81003a76:	74 eb                	je     81003a63 <__sfvwrite_r+0xea>
81003a78:	8b 73 08             	mov    0x8(%ebx),%esi
81003a7b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003a7f:	98                   	cwtl   
81003a80:	25 00 02 00 00       	and    $0x200,%eax
81003a85:	85 c0                	test   %eax,%eax
81003a87:	0f 84 4f 01 00 00    	je     81003bdc <__sfvwrite_r+0x263>
81003a8d:	89 f0                	mov    %esi,%eax
81003a8f:	39 c7                	cmp    %eax,%edi
81003a91:	0f 82 12 01 00 00    	jb     81003ba9 <__sfvwrite_r+0x230>
81003a97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003a9b:	98                   	cwtl   
81003a9c:	25 80 04 00 00       	and    $0x480,%eax
81003aa1:	85 c0                	test   %eax,%eax
81003aa3:	0f 84 00 01 00 00    	je     81003ba9 <__sfvwrite_r+0x230>
81003aa9:	8b 03                	mov    (%ebx),%eax
81003aab:	8b 53 10             	mov    0x10(%ebx),%edx
81003aae:	29 d0                	sub    %edx,%eax
81003ab0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ab3:	8b 53 14             	mov    0x14(%ebx),%edx
81003ab6:	89 d0                	mov    %edx,%eax
81003ab8:	01 c0                	add    %eax,%eax
81003aba:	01 d0                	add    %edx,%eax
81003abc:	89 c2                	mov    %eax,%edx
81003abe:	c1 ea 1f             	shr    $0x1f,%edx
81003ac1:	01 d0                	add    %edx,%eax
81003ac3:	d1 f8                	sar    %eax
81003ac5:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003ac8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003acb:	01 f8                	add    %edi,%eax
81003acd:	8d 50 01             	lea    0x1(%eax),%edx
81003ad0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ad3:	39 c2                	cmp    %eax,%edx
81003ad5:	76 0b                	jbe    81003ae2 <__sfvwrite_r+0x169>
81003ad7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003ada:	01 f8                	add    %edi,%eax
81003adc:	83 c0 01             	add    $0x1,%eax
81003adf:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003ae2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ae6:	98                   	cwtl   
81003ae7:	25 00 04 00 00       	and    $0x400,%eax
81003aec:	85 c0                	test   %eax,%eax
81003aee:	74 4f                	je     81003b3f <__sfvwrite_r+0x1c6>
81003af0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003af3:	83 ec 08             	sub    $0x8,%esp
81003af6:	50                   	push   %eax
81003af7:	ff 75 08             	push   0x8(%ebp)
81003afa:	e8 99 db ff ff       	call   81001698 <_malloc_r>
81003aff:	83 c4 10             	add    $0x10,%esp
81003b02:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b05:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003b09:	75 0e                	jne    81003b19 <__sfvwrite_r+0x1a0>
81003b0b:	8b 45 08             	mov    0x8(%ebp),%eax
81003b0e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003b14:	e9 e6 02 00 00       	jmp    81003dff <__sfvwrite_r+0x486>
81003b19:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003b1c:	8b 43 10             	mov    0x10(%ebx),%eax
81003b1f:	83 ec 04             	sub    $0x4,%esp
81003b22:	52                   	push   %edx
81003b23:	50                   	push   %eax
81003b24:	ff 75 dc             	push   -0x24(%ebp)
81003b27:	e8 2c e4 ff ff       	call   81001f58 <memcpy>
81003b2c:	83 c4 10             	add    $0x10,%esp
81003b2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003b33:	66 25 7f fb          	and    $0xfb7f,%ax
81003b37:	0c 80                	or     $0x80,%al
81003b39:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003b3d:	eb 49                	jmp    81003b88 <__sfvwrite_r+0x20f>
81003b3f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b42:	8b 43 10             	mov    0x10(%ebx),%eax
81003b45:	83 ec 04             	sub    $0x4,%esp
81003b48:	52                   	push   %edx
81003b49:	50                   	push   %eax
81003b4a:	ff 75 08             	push   0x8(%ebp)
81003b4d:	e8 a1 06 00 00       	call   810041f3 <_realloc_r>
81003b52:	83 c4 10             	add    $0x10,%esp
81003b55:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b58:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003b5c:	75 2a                	jne    81003b88 <__sfvwrite_r+0x20f>
81003b5e:	8b 43 10             	mov    0x10(%ebx),%eax
81003b61:	83 ec 08             	sub    $0x8,%esp
81003b64:	50                   	push   %eax
81003b65:	ff 75 08             	push   0x8(%ebp)
81003b68:	e8 7f d2 ff ff       	call   81000dec <_free_r>
81003b6d:	83 c4 10             	add    $0x10,%esp
81003b70:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003b74:	24 7f                	and    $0x7f,%al
81003b76:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003b7a:	8b 45 08             	mov    0x8(%ebp),%eax
81003b7d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003b83:	e9 77 02 00 00       	jmp    81003dff <__sfvwrite_r+0x486>
81003b88:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b8b:	89 43 10             	mov    %eax,0x10(%ebx)
81003b8e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003b91:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b94:	01 d0                	add    %edx,%eax
81003b96:	89 03                	mov    %eax,(%ebx)
81003b98:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b9b:	89 43 14             	mov    %eax,0x14(%ebx)
81003b9e:	89 fe                	mov    %edi,%esi
81003ba0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ba3:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003ba6:	89 43 08             	mov    %eax,0x8(%ebx)
81003ba9:	89 f0                	mov    %esi,%eax
81003bab:	39 c7                	cmp    %eax,%edi
81003bad:	73 02                	jae    81003bb1 <__sfvwrite_r+0x238>
81003baf:	89 fe                	mov    %edi,%esi
81003bb1:	89 f2                	mov    %esi,%edx
81003bb3:	8b 03                	mov    (%ebx),%eax
81003bb5:	83 ec 04             	sub    $0x4,%esp
81003bb8:	52                   	push   %edx
81003bb9:	ff 75 c4             	push   -0x3c(%ebp)
81003bbc:	50                   	push   %eax
81003bbd:	e8 5e 05 00 00       	call   81004120 <memmove>
81003bc2:	83 c4 10             	add    $0x10,%esp
81003bc5:	8b 43 08             	mov    0x8(%ebx),%eax
81003bc8:	29 f0                	sub    %esi,%eax
81003bca:	89 43 08             	mov    %eax,0x8(%ebx)
81003bcd:	8b 03                	mov    (%ebx),%eax
81003bcf:	89 f2                	mov    %esi,%edx
81003bd1:	01 d0                	add    %edx,%eax
81003bd3:	89 03                	mov    %eax,(%ebx)
81003bd5:	89 fe                	mov    %edi,%esi
81003bd7:	e9 9d 00 00 00       	jmp    81003c79 <__sfvwrite_r+0x300>
81003bdc:	8b 13                	mov    (%ebx),%edx
81003bde:	8b 43 10             	mov    0x10(%ebx),%eax
81003be1:	39 c2                	cmp    %eax,%edx
81003be3:	77 07                	ja     81003bec <__sfvwrite_r+0x273>
81003be5:	8b 43 14             	mov    0x14(%ebx),%eax
81003be8:	39 c7                	cmp    %eax,%edi
81003bea:	73 4c                	jae    81003c38 <__sfvwrite_r+0x2bf>
81003bec:	89 f0                	mov    %esi,%eax
81003bee:	39 c7                	cmp    %eax,%edi
81003bf0:	0f 46 c7             	cmovbe %edi,%eax
81003bf3:	89 c6                	mov    %eax,%esi
81003bf5:	89 f2                	mov    %esi,%edx
81003bf7:	8b 03                	mov    (%ebx),%eax
81003bf9:	83 ec 04             	sub    $0x4,%esp
81003bfc:	52                   	push   %edx
81003bfd:	ff 75 c4             	push   -0x3c(%ebp)
81003c00:	50                   	push   %eax
81003c01:	e8 1a 05 00 00       	call   81004120 <memmove>
81003c06:	83 c4 10             	add    $0x10,%esp
81003c09:	8b 43 08             	mov    0x8(%ebx),%eax
81003c0c:	29 f0                	sub    %esi,%eax
81003c0e:	89 43 08             	mov    %eax,0x8(%ebx)
81003c11:	8b 03                	mov    (%ebx),%eax
81003c13:	89 f2                	mov    %esi,%edx
81003c15:	01 d0                	add    %edx,%eax
81003c17:	89 03                	mov    %eax,(%ebx)
81003c19:	8b 43 08             	mov    0x8(%ebx),%eax
81003c1c:	85 c0                	test   %eax,%eax
81003c1e:	75 58                	jne    81003c78 <__sfvwrite_r+0x2ff>
81003c20:	83 ec 08             	sub    $0x8,%esp
81003c23:	53                   	push   %ebx
81003c24:	ff 75 08             	push   0x8(%ebp)
81003c27:	e8 5b cb ff ff       	call   81000787 <_fflush_r>
81003c2c:	83 c4 10             	add    $0x10,%esp
81003c2f:	85 c0                	test   %eax,%eax
81003c31:	74 45                	je     81003c78 <__sfvwrite_r+0x2ff>
81003c33:	e9 c7 01 00 00       	jmp    81003dff <__sfvwrite_r+0x486>
81003c38:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81003c3e:	77 04                	ja     81003c44 <__sfvwrite_r+0x2cb>
81003c40:	89 f8                	mov    %edi,%eax
81003c42:	eb 05                	jmp    81003c49 <__sfvwrite_r+0x2d0>
81003c44:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81003c49:	8b 4b 14             	mov    0x14(%ebx),%ecx
81003c4c:	99                   	cltd   
81003c4d:	f7 f9                	idiv   %ecx
81003c4f:	89 c2                	mov    %eax,%edx
81003c51:	8b 43 14             	mov    0x14(%ebx),%eax
81003c54:	89 d6                	mov    %edx,%esi
81003c56:	0f af f0             	imul   %eax,%esi
81003c59:	8b 53 24             	mov    0x24(%ebx),%edx
81003c5c:	8b 43 1c             	mov    0x1c(%ebx),%eax
81003c5f:	56                   	push   %esi
81003c60:	ff 75 c4             	push   -0x3c(%ebp)
81003c63:	50                   	push   %eax
81003c64:	ff 75 08             	push   0x8(%ebp)
81003c67:	ff d2                	call   *%edx
81003c69:	83 c4 10             	add    $0x10,%esp
81003c6c:	89 c6                	mov    %eax,%esi
81003c6e:	85 f6                	test   %esi,%esi
81003c70:	0f 8e 85 01 00 00    	jle    81003dfb <__sfvwrite_r+0x482>
81003c76:	eb 01                	jmp    81003c79 <__sfvwrite_r+0x300>
81003c78:	90                   	nop
81003c79:	89 f0                	mov    %esi,%eax
81003c7b:	01 45 c4             	add    %eax,-0x3c(%ebp)
81003c7e:	89 f0                	mov    %esi,%eax
81003c80:	29 c7                	sub    %eax,%edi
81003c82:	8b 45 10             	mov    0x10(%ebp),%eax
81003c85:	8b 40 08             	mov    0x8(%eax),%eax
81003c88:	89 f2                	mov    %esi,%edx
81003c8a:	29 d0                	sub    %edx,%eax
81003c8c:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003c8f:	89 41 08             	mov    %eax,0x8(%ecx)
81003c92:	8b 45 10             	mov    0x10(%ebp),%eax
81003c95:	8b 40 08             	mov    0x8(%eax),%eax
81003c98:	85 c0                	test   %eax,%eax
81003c9a:	0f 85 d4 fd ff ff    	jne    81003a74 <__sfvwrite_r+0xfb>
81003ca0:	e9 4c 01 00 00       	jmp    81003df1 <__sfvwrite_r+0x478>
81003ca5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003cac:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003cb3:	eb 18                	jmp    81003ccd <__sfvwrite_r+0x354>
81003cb5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003cbc:	8b 45 c0             	mov    -0x40(%ebp),%eax
81003cbf:	8b 08                	mov    (%eax),%ecx
81003cc1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81003cc4:	8b 78 04             	mov    0x4(%eax),%edi
81003cc7:	83 c0 08             	add    $0x8,%eax
81003cca:	89 45 c0             	mov    %eax,-0x40(%ebp)
81003ccd:	85 ff                	test   %edi,%edi
81003ccf:	74 e4                	je     81003cb5 <__sfvwrite_r+0x33c>
81003cd1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003cd5:	75 32                	jne    81003d09 <__sfvwrite_r+0x390>
81003cd7:	83 ec 04             	sub    $0x4,%esp
81003cda:	57                   	push   %edi
81003cdb:	6a 0a                	push   $0xa
81003cdd:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81003ce0:	56                   	push   %esi
81003ce1:	e8 da e1 ff ff       	call   81001ec0 <memchr>
81003ce6:	83 c4 10             	add    $0x10,%esp
81003ce9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003cec:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003cf0:	74 0a                	je     81003cfc <__sfvwrite_r+0x383>
81003cf2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003cf5:	83 c0 01             	add    $0x1,%eax
81003cf8:	29 f0                	sub    %esi,%eax
81003cfa:	eb 03                	jmp    81003cff <__sfvwrite_r+0x386>
81003cfc:	8d 47 01             	lea    0x1(%edi),%eax
81003cff:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003d02:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003d09:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d0c:	39 c7                	cmp    %eax,%edi
81003d0e:	0f 46 c7             	cmovbe %edi,%eax
81003d11:	89 c1                	mov    %eax,%ecx
81003d13:	8b 53 08             	mov    0x8(%ebx),%edx
81003d16:	8b 43 14             	mov    0x14(%ebx),%eax
81003d19:	8d 34 02             	lea    (%edx,%eax,1),%esi
81003d1c:	8b 13                	mov    (%ebx),%edx
81003d1e:	8b 43 10             	mov    0x10(%ebx),%eax
81003d21:	39 c2                	cmp    %eax,%edx
81003d23:	76 38                	jbe    81003d5d <__sfvwrite_r+0x3e4>
81003d25:	39 f1                	cmp    %esi,%ecx
81003d27:	7e 34                	jle    81003d5d <__sfvwrite_r+0x3e4>
81003d29:	89 f2                	mov    %esi,%edx
81003d2b:	8b 03                	mov    (%ebx),%eax
81003d2d:	83 ec 04             	sub    $0x4,%esp
81003d30:	52                   	push   %edx
81003d31:	ff 75 c4             	push   -0x3c(%ebp)
81003d34:	50                   	push   %eax
81003d35:	e8 e6 03 00 00       	call   81004120 <memmove>
81003d3a:	83 c4 10             	add    $0x10,%esp
81003d3d:	8b 03                	mov    (%ebx),%eax
81003d3f:	89 f2                	mov    %esi,%edx
81003d41:	01 d0                	add    %edx,%eax
81003d43:	89 03                	mov    %eax,(%ebx)
81003d45:	83 ec 08             	sub    $0x8,%esp
81003d48:	53                   	push   %ebx
81003d49:	ff 75 08             	push   0x8(%ebp)
81003d4c:	e8 36 ca ff ff       	call   81000787 <_fflush_r>
81003d51:	83 c4 10             	add    $0x10,%esp
81003d54:	85 c0                	test   %eax,%eax
81003d56:	74 4f                	je     81003da7 <__sfvwrite_r+0x42e>
81003d58:	e9 a2 00 00 00       	jmp    81003dff <__sfvwrite_r+0x486>
81003d5d:	8b 73 14             	mov    0x14(%ebx),%esi
81003d60:	89 c8                	mov    %ecx,%eax
81003d62:	39 c6                	cmp    %eax,%esi
81003d64:	7f 1b                	jg     81003d81 <__sfvwrite_r+0x408>
81003d66:	8b 53 24             	mov    0x24(%ebx),%edx
81003d69:	8b 43 1c             	mov    0x1c(%ebx),%eax
81003d6c:	56                   	push   %esi
81003d6d:	ff 75 c4             	push   -0x3c(%ebp)
81003d70:	50                   	push   %eax
81003d71:	ff 75 08             	push   0x8(%ebp)
81003d74:	ff d2                	call   *%edx
81003d76:	83 c4 10             	add    $0x10,%esp
81003d79:	89 c6                	mov    %eax,%esi
81003d7b:	85 f6                	test   %esi,%esi
81003d7d:	7f 28                	jg     81003da7 <__sfvwrite_r+0x42e>
81003d7f:	eb 7e                	jmp    81003dff <__sfvwrite_r+0x486>
81003d81:	89 ce                	mov    %ecx,%esi
81003d83:	89 f2                	mov    %esi,%edx
81003d85:	8b 03                	mov    (%ebx),%eax
81003d87:	83 ec 04             	sub    $0x4,%esp
81003d8a:	52                   	push   %edx
81003d8b:	ff 75 c4             	push   -0x3c(%ebp)
81003d8e:	50                   	push   %eax
81003d8f:	e8 8c 03 00 00       	call   81004120 <memmove>
81003d94:	83 c4 10             	add    $0x10,%esp
81003d97:	8b 43 08             	mov    0x8(%ebx),%eax
81003d9a:	29 f0                	sub    %esi,%eax
81003d9c:	89 43 08             	mov    %eax,0x8(%ebx)
81003d9f:	8b 03                	mov    (%ebx),%eax
81003da1:	89 f2                	mov    %esi,%edx
81003da3:	01 d0                	add    %edx,%eax
81003da5:	89 03                	mov    %eax,(%ebx)
81003da7:	29 75 e0             	sub    %esi,-0x20(%ebp)
81003daa:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003dae:	75 1a                	jne    81003dca <__sfvwrite_r+0x451>
81003db0:	83 ec 08             	sub    $0x8,%esp
81003db3:	53                   	push   %ebx
81003db4:	ff 75 08             	push   0x8(%ebp)
81003db7:	e8 cb c9 ff ff       	call   81000787 <_fflush_r>
81003dbc:	83 c4 10             	add    $0x10,%esp
81003dbf:	85 c0                	test   %eax,%eax
81003dc1:	75 3b                	jne    81003dfe <__sfvwrite_r+0x485>
81003dc3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003dca:	89 f0                	mov    %esi,%eax
81003dcc:	01 45 c4             	add    %eax,-0x3c(%ebp)
81003dcf:	89 f0                	mov    %esi,%eax
81003dd1:	29 c7                	sub    %eax,%edi
81003dd3:	8b 45 10             	mov    0x10(%ebp),%eax
81003dd6:	8b 40 08             	mov    0x8(%eax),%eax
81003dd9:	89 f2                	mov    %esi,%edx
81003ddb:	29 d0                	sub    %edx,%eax
81003ddd:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003de0:	89 41 08             	mov    %eax,0x8(%ecx)
81003de3:	8b 45 10             	mov    0x10(%ebp),%eax
81003de6:	8b 40 08             	mov    0x8(%eax),%eax
81003de9:	85 c0                	test   %eax,%eax
81003deb:	0f 85 dc fe ff ff    	jne    81003ccd <__sfvwrite_r+0x354>
81003df1:	b8 00 00 00 00       	mov    $0x0,%eax
81003df6:	eb 17                	jmp    81003e0f <__sfvwrite_r+0x496>
81003df8:	90                   	nop
81003df9:	eb 04                	jmp    81003dff <__sfvwrite_r+0x486>
81003dfb:	90                   	nop
81003dfc:	eb 01                	jmp    81003dff <__sfvwrite_r+0x486>
81003dfe:	90                   	nop
81003dff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e03:	83 c8 40             	or     $0x40,%eax
81003e06:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e0a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003e0f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003e12:	5b                   	pop    %ebx
81003e13:	5e                   	pop    %esi
81003e14:	5f                   	pop    %edi
81003e15:	5d                   	pop    %ebp
81003e16:	c3                   	ret    

81003e17 <__get_global_locale>:
81003e17:	55                   	push   %ebp
81003e18:	89 e5                	mov    %esp,%ebp
81003e1a:	b8 c0 5a 00 81       	mov    $0x81005ac0,%eax
81003e1f:	5d                   	pop    %ebp
81003e20:	c3                   	ret    

81003e21 <__get_current_locale>:
81003e21:	55                   	push   %ebp
81003e22:	89 e5                	mov    %esp,%ebp
81003e24:	e8 ee ff ff ff       	call   81003e17 <__get_global_locale>
81003e29:	5d                   	pop    %ebp
81003e2a:	c3                   	ret    

81003e2b <_setlocale_r>:
81003e2b:	55                   	push   %ebp
81003e2c:	89 e5                	mov    %esp,%ebp
81003e2e:	83 ec 08             	sub    $0x8,%esp
81003e31:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003e35:	74 4c                	je     81003e83 <_setlocale_r+0x58>
81003e37:	83 ec 08             	sub    $0x8,%esp
81003e3a:	68 95 4f 00 81       	push   $0x81004f95
81003e3f:	ff 75 10             	push   0x10(%ebp)
81003e42:	e8 15 f3 ff ff       	call   8100315c <strcmp>
81003e47:	83 c4 10             	add    $0x10,%esp
81003e4a:	85 c0                	test   %eax,%eax
81003e4c:	74 35                	je     81003e83 <_setlocale_r+0x58>
81003e4e:	83 ec 08             	sub    $0x8,%esp
81003e51:	68 9b 4f 00 81       	push   $0x81004f9b
81003e56:	ff 75 10             	push   0x10(%ebp)
81003e59:	e8 fe f2 ff ff       	call   8100315c <strcmp>
81003e5e:	83 c4 10             	add    $0x10,%esp
81003e61:	85 c0                	test   %eax,%eax
81003e63:	74 1e                	je     81003e83 <_setlocale_r+0x58>
81003e65:	83 ec 08             	sub    $0x8,%esp
81003e68:	68 94 4f 00 81       	push   $0x81004f94
81003e6d:	ff 75 10             	push   0x10(%ebp)
81003e70:	e8 e7 f2 ff ff       	call   8100315c <strcmp>
81003e75:	83 c4 10             	add    $0x10,%esp
81003e78:	85 c0                	test   %eax,%eax
81003e7a:	74 07                	je     81003e83 <_setlocale_r+0x58>
81003e7c:	b8 00 00 00 00       	mov    $0x0,%eax
81003e81:	eb 05                	jmp    81003e88 <_setlocale_r+0x5d>
81003e83:	b8 9b 4f 00 81       	mov    $0x81004f9b,%eax
81003e88:	c9                   	leave  
81003e89:	c3                   	ret    

81003e8a <__locale_mb_cur_max>:
81003e8a:	55                   	push   %ebp
81003e8b:	89 e5                	mov    %esp,%ebp
81003e8d:	e8 8f ff ff ff       	call   81003e21 <__get_current_locale>
81003e92:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81003e99:	0f be c0             	movsbl %al,%eax
81003e9c:	5d                   	pop    %ebp
81003e9d:	c3                   	ret    

81003e9e <setlocale>:
81003e9e:	55                   	push   %ebp
81003e9f:	89 e5                	mov    %esp,%ebp
81003ea1:	83 ec 08             	sub    $0x8,%esp
81003ea4:	a1 84 56 00 81       	mov    0x81005684,%eax
81003ea9:	83 ec 04             	sub    $0x4,%esp
81003eac:	ff 75 0c             	push   0xc(%ebp)
81003eaf:	ff 75 08             	push   0x8(%ebp)
81003eb2:	50                   	push   %eax
81003eb3:	e8 73 ff ff ff       	call   81003e2b <_setlocale_r>
81003eb8:	83 c4 10             	add    $0x10,%esp
81003ebb:	c9                   	leave  
81003ebc:	c3                   	ret    

81003ebd <_lseek_r>:
81003ebd:	55                   	push   %ebp
81003ebe:	89 e5                	mov    %esp,%ebp
81003ec0:	83 ec 18             	sub    $0x18,%esp
81003ec3:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
81003eca:	00 00 00 
81003ecd:	83 ec 04             	sub    $0x4,%esp
81003ed0:	ff 75 14             	push   0x14(%ebp)
81003ed3:	ff 75 10             	push   0x10(%ebp)
81003ed6:	ff 75 0c             	push   0xc(%ebp)
81003ed9:	e8 cc c5 ff ff       	call   810004aa <lseek>
81003ede:	83 c4 10             	add    $0x10,%esp
81003ee1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ee4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003ee8:	75 14                	jne    81003efe <_lseek_r+0x41>
81003eea:	a1 b0 62 00 81       	mov    0x810062b0,%eax
81003eef:	85 c0                	test   %eax,%eax
81003ef1:	74 0b                	je     81003efe <_lseek_r+0x41>
81003ef3:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
81003ef9:	8b 45 08             	mov    0x8(%ebp),%eax
81003efc:	89 10                	mov    %edx,(%eax)
81003efe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f01:	c9                   	leave  
81003f02:	c3                   	ret    

81003f03 <__smakebuf_r>:
81003f03:	55                   	push   %ebp
81003f04:	89 e5                	mov    %esp,%ebp
81003f06:	56                   	push   %esi
81003f07:	53                   	push   %ebx
81003f08:	83 ec 10             	sub    $0x10,%esp
81003f0b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003f0e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f12:	98                   	cwtl   
81003f13:	83 e0 02             	and    $0x2,%eax
81003f16:	85 c0                	test   %eax,%eax
81003f18:	74 16                	je     81003f30 <__smakebuf_r+0x2d>
81003f1a:	8d 43 43             	lea    0x43(%ebx),%eax
81003f1d:	89 03                	mov    %eax,(%ebx)
81003f1f:	8b 03                	mov    (%ebx),%eax
81003f21:	89 43 10             	mov    %eax,0x10(%ebx)
81003f24:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003f2b:	e9 b9 00 00 00       	jmp    81003fe9 <__smakebuf_r+0xe6>
81003f30:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003f33:	50                   	push   %eax
81003f34:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003f37:	50                   	push   %eax
81003f38:	53                   	push   %ebx
81003f39:	ff 75 08             	push   0x8(%ebp)
81003f3c:	e8 af 00 00 00       	call   81003ff0 <__swhatbuf_r>
81003f41:	83 c4 10             	add    $0x10,%esp
81003f44:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f47:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f4a:	83 ec 08             	sub    $0x8,%esp
81003f4d:	50                   	push   %eax
81003f4e:	ff 75 08             	push   0x8(%ebp)
81003f51:	e8 42 d7 ff ff       	call   81001698 <_malloc_r>
81003f56:	83 c4 10             	add    $0x10,%esp
81003f59:	89 c6                	mov    %eax,%esi
81003f5b:	85 f6                	test   %esi,%esi
81003f5d:	75 2f                	jne    81003f8e <__smakebuf_r+0x8b>
81003f5f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f63:	98                   	cwtl   
81003f64:	25 00 02 00 00       	and    $0x200,%eax
81003f69:	85 c0                	test   %eax,%eax
81003f6b:	75 7c                	jne    81003fe9 <__smakebuf_r+0xe6>
81003f6d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f71:	83 e0 fc             	and    $0xfffffffc,%eax
81003f74:	83 c8 02             	or     $0x2,%eax
81003f77:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003f7b:	8d 43 43             	lea    0x43(%ebx),%eax
81003f7e:	89 03                	mov    %eax,(%ebx)
81003f80:	8b 03                	mov    (%ebx),%eax
81003f82:	89 43 10             	mov    %eax,0x10(%ebx)
81003f85:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003f8c:	eb 5b                	jmp    81003fe9 <__smakebuf_r+0xe6>
81003f8e:	8b 45 08             	mov    0x8(%ebp),%eax
81003f91:	c7 40 3c 4f 0c 00 81 	movl   $0x81000c4f,0x3c(%eax)
81003f98:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f9c:	0c 80                	or     $0x80,%al
81003f9e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fa2:	89 33                	mov    %esi,(%ebx)
81003fa4:	8b 03                	mov    (%ebx),%eax
81003fa6:	89 43 10             	mov    %eax,0x10(%ebx)
81003fa9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fac:	89 43 14             	mov    %eax,0x14(%ebx)
81003faf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003fb2:	85 c0                	test   %eax,%eax
81003fb4:	74 26                	je     81003fdc <__smakebuf_r+0xd9>
81003fb6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003fba:	98                   	cwtl   
81003fbb:	83 ec 08             	sub    $0x8,%esp
81003fbe:	50                   	push   %eax
81003fbf:	ff 75 08             	push   0x8(%ebp)
81003fc2:	e8 65 0e 00 00       	call   81004e2c <_isatty_r>
81003fc7:	83 c4 10             	add    $0x10,%esp
81003fca:	85 c0                	test   %eax,%eax
81003fcc:	74 0e                	je     81003fdc <__smakebuf_r+0xd9>
81003fce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fd2:	83 e0 fc             	and    $0xfffffffc,%eax
81003fd5:	83 c8 01             	or     $0x1,%eax
81003fd8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fdc:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003fe0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fe3:	09 d0                	or     %edx,%eax
81003fe5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fe9:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003fec:	5b                   	pop    %ebx
81003fed:	5e                   	pop    %esi
81003fee:	5d                   	pop    %ebp
81003fef:	c3                   	ret    

81003ff0 <__swhatbuf_r>:
81003ff0:	55                   	push   %ebp
81003ff1:	89 e5                	mov    %esp,%ebp
81003ff3:	83 ec 58             	sub    $0x58,%esp
81003ff6:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003ffd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004000:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81004004:	66 85 c0             	test   %ax,%ax
81004007:	78 1f                	js     81004028 <__swhatbuf_r+0x38>
81004009:	8b 45 0c             	mov    0xc(%ebp),%eax
8100400c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81004010:	98                   	cwtl   
81004011:	83 ec 04             	sub    $0x4,%esp
81004014:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004017:	52                   	push   %edx
81004018:	50                   	push   %eax
81004019:	ff 75 08             	push   0x8(%ebp)
8100401c:	e8 c8 0d 00 00       	call   81004de9 <_fstat_r>
81004021:	83 c4 10             	add    $0x10,%esp
81004024:	85 c0                	test   %eax,%eax
81004026:	79 35                	jns    8100405d <__swhatbuf_r+0x6d>
81004028:	8b 45 14             	mov    0x14(%ebp),%eax
8100402b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004031:	8b 45 0c             	mov    0xc(%ebp),%eax
81004034:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004038:	98                   	cwtl   
81004039:	25 80 00 00 00       	and    $0x80,%eax
8100403e:	85 c0                	test   %eax,%eax
81004040:	74 0b                	je     8100404d <__swhatbuf_r+0x5d>
81004042:	8b 45 10             	mov    0x10(%ebp),%eax
81004045:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
8100404b:	eb 09                	jmp    81004056 <__swhatbuf_r+0x66>
8100404d:	8b 45 10             	mov    0x10(%ebp),%eax
81004050:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81004056:	b8 00 00 00 00       	mov    $0x0,%eax
8100405b:	eb 24                	jmp    81004081 <__swhatbuf_r+0x91>
8100405d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004060:	25 00 f0 00 00       	and    $0xf000,%eax
81004065:	3d 00 20 00 00       	cmp    $0x2000,%eax
8100406a:	0f 94 c0             	sete   %al
8100406d:	0f b6 d0             	movzbl %al,%edx
81004070:	8b 45 14             	mov    0x14(%ebp),%eax
81004073:	89 10                	mov    %edx,(%eax)
81004075:	8b 45 10             	mov    0x10(%ebp),%eax
81004078:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100407e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004081:	c9                   	leave  
81004082:	c3                   	ret    

81004083 <__get_global_locale>:
81004083:	55                   	push   %ebp
81004084:	89 e5                	mov    %esp,%ebp
81004086:	b8 c0 5a 00 81       	mov    $0x81005ac0,%eax
8100408b:	5d                   	pop    %ebp
8100408c:	c3                   	ret    

8100408d <__get_current_locale>:
8100408d:	55                   	push   %ebp
8100408e:	89 e5                	mov    %esp,%ebp
81004090:	e8 ee ff ff ff       	call   81004083 <__get_global_locale>
81004095:	5d                   	pop    %ebp
81004096:	c3                   	ret    

81004097 <_mbtowc_r>:
81004097:	55                   	push   %ebp
81004098:	89 e5                	mov    %esp,%ebp
8100409a:	83 ec 08             	sub    $0x8,%esp
8100409d:	e8 eb ff ff ff       	call   8100408d <__get_current_locale>
810040a2:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810040a8:	83 ec 0c             	sub    $0xc,%esp
810040ab:	ff 75 18             	push   0x18(%ebp)
810040ae:	ff 75 14             	push   0x14(%ebp)
810040b1:	ff 75 10             	push   0x10(%ebp)
810040b4:	ff 75 0c             	push   0xc(%ebp)
810040b7:	ff 75 08             	push   0x8(%ebp)
810040ba:	ff d0                	call   *%eax
810040bc:	83 c4 20             	add    $0x20,%esp
810040bf:	c9                   	leave  
810040c0:	c3                   	ret    

810040c1 <__ascii_mbtowc>:
810040c1:	55                   	push   %ebp
810040c2:	89 e5                	mov    %esp,%ebp
810040c4:	83 ec 10             	sub    $0x10,%esp
810040c7:	8b 45 10             	mov    0x10(%ebp),%eax
810040ca:	89 45 fc             	mov    %eax,-0x4(%ebp)
810040cd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810040d1:	75 06                	jne    810040d9 <__ascii_mbtowc+0x18>
810040d3:	8d 45 f8             	lea    -0x8(%ebp),%eax
810040d6:	89 45 0c             	mov    %eax,0xc(%ebp)
810040d9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810040dd:	75 07                	jne    810040e6 <__ascii_mbtowc+0x25>
810040df:	b8 00 00 00 00       	mov    $0x0,%eax
810040e4:	eb 31                	jmp    81004117 <__ascii_mbtowc+0x56>
810040e6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810040ea:	75 07                	jne    810040f3 <__ascii_mbtowc+0x32>
810040ec:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810040f1:	eb 24                	jmp    81004117 <__ascii_mbtowc+0x56>
810040f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
810040f6:	0f b6 00             	movzbl (%eax),%eax
810040f9:	0f b6 d0             	movzbl %al,%edx
810040fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810040ff:	89 10                	mov    %edx,(%eax)
81004101:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004104:	0f b6 00             	movzbl (%eax),%eax
81004107:	84 c0                	test   %al,%al
81004109:	75 07                	jne    81004112 <__ascii_mbtowc+0x51>
8100410b:	b8 00 00 00 00       	mov    $0x0,%eax
81004110:	eb 05                	jmp    81004117 <__ascii_mbtowc+0x56>
81004112:	b8 01 00 00 00       	mov    $0x1,%eax
81004117:	c9                   	leave  
81004118:	c3                   	ret    
81004119:	66 90                	xchg   %ax,%ax
8100411b:	66 90                	xchg   %ax,%ax
8100411d:	66 90                	xchg   %ax,%ax
8100411f:	90                   	nop

81004120 <memmove>:
81004120:	55                   	push   %ebp
81004121:	89 e5                	mov    %esp,%ebp
81004123:	56                   	push   %esi
81004124:	57                   	push   %edi
81004125:	53                   	push   %ebx
81004126:	8b 7d 08             	mov    0x8(%ebp),%edi
81004129:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100412c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100412f:	fc                   	cld    
81004130:	39 fe                	cmp    %edi,%esi
81004132:	73 43                	jae    81004177 <memmove+0x57>
81004134:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004138:	39 df                	cmp    %ebx,%edi
8100413a:	77 3b                	ja     81004177 <memmove+0x57>
8100413c:	01 ce                	add    %ecx,%esi
8100413e:	01 cf                	add    %ecx,%edi
81004140:	fd                   	std    
81004141:	83 f9 08             	cmp    $0x8,%ecx
81004144:	76 2b                	jbe    81004171 <memmove+0x51>
81004146:	89 fa                	mov    %edi,%edx
81004148:	89 cb                	mov    %ecx,%ebx
8100414a:	83 e2 03             	and    $0x3,%edx
8100414d:	74 0c                	je     8100415b <memmove+0x3b>
8100414f:	89 d1                	mov    %edx,%ecx
81004151:	4e                   	dec    %esi
81004152:	4f                   	dec    %edi
81004153:	29 cb                	sub    %ecx,%ebx
81004155:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004157:	89 d9                	mov    %ebx,%ecx
81004159:	46                   	inc    %esi
8100415a:	47                   	inc    %edi
8100415b:	c1 e9 02             	shr    $0x2,%ecx
8100415e:	83 ee 04             	sub    $0x4,%esi
81004161:	83 ef 04             	sub    $0x4,%edi
81004164:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004166:	83 c6 04             	add    $0x4,%esi
81004169:	83 c7 04             	add    $0x4,%edi
8100416c:	89 d9                	mov    %ebx,%ecx
8100416e:	83 e1 03             	and    $0x3,%ecx
81004171:	4e                   	dec    %esi
81004172:	4f                   	dec    %edi
81004173:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004175:	eb 2a                	jmp    810041a1 <memmove+0x81>
81004177:	83 f9 08             	cmp    $0x8,%ecx
8100417a:	76 23                	jbe    8100419f <memmove+0x7f>
8100417c:	89 fa                	mov    %edi,%edx
8100417e:	89 cb                	mov    %ecx,%ebx
81004180:	83 e2 03             	and    $0x3,%edx
81004183:	74 10                	je     81004195 <memmove+0x75>
81004185:	b9 04 00 00 00       	mov    $0x4,%ecx
8100418a:	29 d1                	sub    %edx,%ecx
8100418c:	83 e1 03             	and    $0x3,%ecx
8100418f:	29 cb                	sub    %ecx,%ebx
81004191:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004193:	89 d9                	mov    %ebx,%ecx
81004195:	c1 e9 02             	shr    $0x2,%ecx
81004198:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100419a:	89 d9                	mov    %ebx,%ecx
8100419c:	83 e1 03             	and    $0x3,%ecx
8100419f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810041a1:	8b 45 08             	mov    0x8(%ebp),%eax
810041a4:	fc                   	cld    
810041a5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810041a8:	5b                   	pop    %ebx
810041a9:	5f                   	pop    %edi
810041aa:	5e                   	pop    %esi
810041ab:	c9                   	leave  
810041ac:	c3                   	ret    

810041ad <_read_r>:
810041ad:	55                   	push   %ebp
810041ae:	89 e5                	mov    %esp,%ebp
810041b0:	83 ec 18             	sub    $0x18,%esp
810041b3:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
810041ba:	00 00 00 
810041bd:	83 ec 04             	sub    $0x4,%esp
810041c0:	ff 75 14             	push   0x14(%ebp)
810041c3:	ff 75 10             	push   0x10(%ebp)
810041c6:	ff 75 0c             	push   0xc(%ebp)
810041c9:	e8 61 c2 ff ff       	call   8100042f <read>
810041ce:	83 c4 10             	add    $0x10,%esp
810041d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041d4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810041d8:	75 14                	jne    810041ee <_read_r+0x41>
810041da:	a1 b0 62 00 81       	mov    0x810062b0,%eax
810041df:	85 c0                	test   %eax,%eax
810041e1:	74 0b                	je     810041ee <_read_r+0x41>
810041e3:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
810041e9:	8b 45 08             	mov    0x8(%ebp),%eax
810041ec:	89 10                	mov    %edx,(%eax)
810041ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041f1:	c9                   	leave  
810041f2:	c3                   	ret    

810041f3 <_realloc_r>:
810041f3:	55                   	push   %ebp
810041f4:	89 e5                	mov    %esp,%ebp
810041f6:	83 ec 78             	sub    $0x78,%esp
810041f9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810041fd:	75 16                	jne    81004215 <_realloc_r+0x22>
810041ff:	83 ec 08             	sub    $0x8,%esp
81004202:	ff 75 10             	push   0x10(%ebp)
81004205:	ff 75 08             	push   0x8(%ebp)
81004208:	e8 8b d4 ff ff       	call   81001698 <_malloc_r>
8100420d:	83 c4 10             	add    $0x10,%esp
81004210:	e9 b6 08 00 00       	jmp    81004acb <_realloc_r+0x8d8>
81004215:	83 ec 0c             	sub    $0xc,%esp
81004218:	ff 75 08             	push   0x8(%ebp)
8100421b:	e8 08 de ff ff       	call   81002028 <__malloc_lock>
81004220:	83 c4 10             	add    $0x10,%esp
81004223:	8b 45 0c             	mov    0xc(%ebp),%eax
81004226:	83 e8 08             	sub    $0x8,%eax
81004229:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100422c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100422f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004232:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004235:	8b 40 04             	mov    0x4(%eax),%eax
81004238:	83 e0 fc             	and    $0xfffffffc,%eax
8100423b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100423e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004241:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004244:	8b 45 10             	mov    0x10(%ebp),%eax
81004247:	83 c0 0b             	add    $0xb,%eax
8100424a:	83 f8 16             	cmp    $0x16,%eax
8100424d:	76 0b                	jbe    8100425a <_realloc_r+0x67>
8100424f:	8b 45 10             	mov    0x10(%ebp),%eax
81004252:	83 c0 0b             	add    $0xb,%eax
81004255:	83 e0 f8             	and    $0xfffffff8,%eax
81004258:	eb 05                	jmp    8100425f <_realloc_r+0x6c>
8100425a:	b8 10 00 00 00       	mov    $0x10,%eax
8100425f:	89 45 bc             	mov    %eax,-0x44(%ebp)
81004262:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004265:	85 c0                	test   %eax,%eax
81004267:	78 08                	js     81004271 <_realloc_r+0x7e>
81004269:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100426c:	3b 45 10             	cmp    0x10(%ebp),%eax
8100426f:	73 13                	jae    81004284 <_realloc_r+0x91>
81004271:	8b 45 08             	mov    0x8(%ebp),%eax
81004274:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100427a:	b8 00 00 00 00       	mov    $0x0,%eax
8100427f:	e9 47 08 00 00       	jmp    81004acb <_realloc_r+0x8d8>
81004284:	8b 55 c0             	mov    -0x40(%ebp),%edx
81004287:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100428a:	39 c2                	cmp    %eax,%edx
8100428c:	0f 8d 8b 07 00 00    	jge    81004a1d <_realloc_r+0x82a>
81004292:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81004295:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004298:	01 d0                	add    %edx,%eax
8100429a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100429d:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810042a2:	8b 40 08             	mov    0x8(%eax),%eax
810042a5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810042a8:	74 1e                	je     810042c8 <_realloc_r+0xd5>
810042aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810042ad:	8b 40 04             	mov    0x4(%eax),%eax
810042b0:	83 e0 fe             	and    $0xfffffffe,%eax
810042b3:	89 c2                	mov    %eax,%edx
810042b5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810042b8:	01 d0                	add    %edx,%eax
810042ba:	8b 40 04             	mov    0x4(%eax),%eax
810042bd:	83 e0 01             	and    $0x1,%eax
810042c0:	85 c0                	test   %eax,%eax
810042c2:	0f 85 ca 00 00 00    	jne    81004392 <_realloc_r+0x19f>
810042c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810042cb:	8b 40 04             	mov    0x4(%eax),%eax
810042ce:	83 e0 fc             	and    $0xfffffffc,%eax
810042d1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810042d4:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810042d9:	8b 40 08             	mov    0x8(%eax),%eax
810042dc:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810042df:	75 71                	jne    81004352 <_realloc_r+0x15f>
810042e1:	8b 55 e8             	mov    -0x18(%ebp),%edx
810042e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810042e7:	01 d0                	add    %edx,%eax
810042e9:	89 c2                	mov    %eax,%edx
810042eb:	8b 45 bc             	mov    -0x44(%ebp),%eax
810042ee:	83 c0 10             	add    $0x10,%eax
810042f1:	39 c2                	cmp    %eax,%edx
810042f3:	0f 8c a9 00 00 00    	jl     810043a2 <_realloc_r+0x1af>
810042f9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810042fc:	01 45 f0             	add    %eax,-0x10(%ebp)
810042ff:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81004304:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81004307:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100430a:	01 c8                	add    %ecx,%eax
8100430c:	89 42 08             	mov    %eax,0x8(%edx)
8100430f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004312:	2b 45 bc             	sub    -0x44(%ebp),%eax
81004315:	89 c2                	mov    %eax,%edx
81004317:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
8100431c:	8b 40 08             	mov    0x8(%eax),%eax
8100431f:	83 ca 01             	or     $0x1,%edx
81004322:	89 50 04             	mov    %edx,0x4(%eax)
81004325:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004328:	8b 40 04             	mov    0x4(%eax),%eax
8100432b:	83 e0 01             	and    $0x1,%eax
8100432e:	0b 45 bc             	or     -0x44(%ebp),%eax
81004331:	89 c2                	mov    %eax,%edx
81004333:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004336:	89 50 04             	mov    %edx,0x4(%eax)
81004339:	83 ec 0c             	sub    $0xc,%esp
8100433c:	ff 75 08             	push   0x8(%ebp)
8100433f:	e8 ea dc ff ff       	call   8100202e <__malloc_unlock>
81004344:	83 c4 10             	add    $0x10,%esp
81004347:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100434a:	83 c0 08             	add    $0x8,%eax
8100434d:	e9 79 07 00 00       	jmp    81004acb <_realloc_r+0x8d8>
81004352:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004355:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004358:	01 d0                	add    %edx,%eax
8100435a:	89 c2                	mov    %eax,%edx
8100435c:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100435f:	39 c2                	cmp    %eax,%edx
81004361:	7c 3f                	jl     810043a2 <_realloc_r+0x1af>
81004363:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004366:	8b 40 0c             	mov    0xc(%eax),%eax
81004369:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100436c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100436f:	8b 40 08             	mov    0x8(%eax),%eax
81004372:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81004375:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81004378:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100437b:	89 50 0c             	mov    %edx,0xc(%eax)
8100437e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81004381:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81004384:	89 50 08             	mov    %edx,0x8(%eax)
81004387:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100438a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100438d:	e9 8c 06 00 00       	jmp    81004a1e <_realloc_r+0x82b>
81004392:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004399:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810043a0:	eb 01                	jmp    810043a3 <_realloc_r+0x1b0>
810043a2:	90                   	nop
810043a3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810043a6:	8b 40 04             	mov    0x4(%eax),%eax
810043a9:	83 e0 01             	and    $0x1,%eax
810043ac:	85 c0                	test   %eax,%eax
810043ae:	0f 85 d6 04 00 00    	jne    8100488a <_realloc_r+0x697>
810043b4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810043b7:	8b 00                	mov    (%eax),%eax
810043b9:	f7 d8                	neg    %eax
810043bb:	89 c2                	mov    %eax,%edx
810043bd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810043c0:	01 d0                	add    %edx,%eax
810043c2:	89 45 b0             	mov    %eax,-0x50(%ebp)
810043c5:	8b 45 b0             	mov    -0x50(%ebp),%eax
810043c8:	8b 40 04             	mov    0x4(%eax),%eax
810043cb:	83 e0 fc             	and    $0xfffffffc,%eax
810043ce:	89 45 ac             	mov    %eax,-0x54(%ebp)
810043d1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810043d5:	0f 84 4a 03 00 00    	je     81004725 <_realloc_r+0x532>
810043db:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
810043e0:	8b 40 08             	mov    0x8(%eax),%eax
810043e3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810043e6:	0f 85 b0 01 00 00    	jne    8100459c <_realloc_r+0x3a9>
810043ec:	8b 55 e8             	mov    -0x18(%ebp),%edx
810043ef:	8b 45 ac             	mov    -0x54(%ebp),%eax
810043f2:	01 c2                	add    %eax,%edx
810043f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810043f7:	01 d0                	add    %edx,%eax
810043f9:	89 c2                	mov    %eax,%edx
810043fb:	8b 45 bc             	mov    -0x44(%ebp),%eax
810043fe:	83 c0 10             	add    $0x10,%eax
81004401:	39 c2                	cmp    %eax,%edx
81004403:	0f 8c 1c 03 00 00    	jl     81004725 <_realloc_r+0x532>
81004409:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100440c:	8b 40 0c             	mov    0xc(%eax),%eax
8100440f:	89 45 b8             	mov    %eax,-0x48(%ebp)
81004412:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004415:	8b 40 08             	mov    0x8(%eax),%eax
81004418:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100441b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100441e:	8b 55 b8             	mov    -0x48(%ebp),%edx
81004421:	89 50 0c             	mov    %edx,0xc(%eax)
81004424:	8b 45 b8             	mov    -0x48(%ebp),%eax
81004427:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100442a:	89 50 08             	mov    %edx,0x8(%eax)
8100442d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004430:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004433:	8b 55 ac             	mov    -0x54(%ebp),%edx
81004436:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004439:	01 d0                	add    %edx,%eax
8100443b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100443e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004441:	83 c0 08             	add    $0x8,%eax
81004444:	89 45 a8             	mov    %eax,-0x58(%ebp)
81004447:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100444a:	83 e8 04             	sub    $0x4,%eax
8100444d:	89 45 a0             	mov    %eax,-0x60(%ebp)
81004450:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81004454:	0f 87 de 00 00 00    	ja     81004538 <_realloc_r+0x345>
8100445a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100445d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004460:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004463:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004466:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
8100446a:	0f 86 90 00 00 00    	jbe    81004500 <_realloc_r+0x30d>
81004470:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004473:	8d 42 04             	lea    0x4(%edx),%eax
81004476:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004479:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100447c:	8d 48 04             	lea    0x4(%eax),%ecx
8100447f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004482:	8b 12                	mov    (%edx),%edx
81004484:	89 10                	mov    %edx,(%eax)
81004486:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004489:	8d 42 04             	lea    0x4(%edx),%eax
8100448c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100448f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004492:	8d 48 04             	lea    0x4(%eax),%ecx
81004495:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004498:	8b 12                	mov    (%edx),%edx
8100449a:	89 10                	mov    %edx,(%eax)
8100449c:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810044a0:	76 5e                	jbe    81004500 <_realloc_r+0x30d>
810044a2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810044a5:	8d 42 04             	lea    0x4(%edx),%eax
810044a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810044ab:	8b 45 e0             	mov    -0x20(%ebp),%eax
810044ae:	8d 48 04             	lea    0x4(%eax),%ecx
810044b1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810044b4:	8b 12                	mov    (%edx),%edx
810044b6:	89 10                	mov    %edx,(%eax)
810044b8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810044bb:	8d 42 04             	lea    0x4(%edx),%eax
810044be:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810044c1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810044c4:	8d 48 04             	lea    0x4(%eax),%ecx
810044c7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810044ca:	8b 12                	mov    (%edx),%edx
810044cc:	89 10                	mov    %edx,(%eax)
810044ce:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
810044d2:	76 2c                	jbe    81004500 <_realloc_r+0x30d>
810044d4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810044d7:	8d 42 04             	lea    0x4(%edx),%eax
810044da:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810044dd:	8b 45 e0             	mov    -0x20(%ebp),%eax
810044e0:	8d 48 04             	lea    0x4(%eax),%ecx
810044e3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810044e6:	8b 12                	mov    (%edx),%edx
810044e8:	89 10                	mov    %edx,(%eax)
810044ea:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810044ed:	8d 42 04             	lea    0x4(%edx),%eax
810044f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810044f3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810044f6:	8d 48 04             	lea    0x4(%eax),%ecx
810044f9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810044fc:	8b 12                	mov    (%edx),%edx
810044fe:	89 10                	mov    %edx,(%eax)
81004500:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004503:	8d 42 04             	lea    0x4(%edx),%eax
81004506:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004509:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100450c:	8d 48 04             	lea    0x4(%eax),%ecx
8100450f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004512:	8b 12                	mov    (%edx),%edx
81004514:	89 10                	mov    %edx,(%eax)
81004516:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81004519:	8d 42 04             	lea    0x4(%edx),%eax
8100451c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100451f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004522:	8d 48 04             	lea    0x4(%eax),%ecx
81004525:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81004528:	8b 12                	mov    (%edx),%edx
8100452a:	89 10                	mov    %edx,(%eax)
8100452c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100452f:	8b 10                	mov    (%eax),%edx
81004531:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004534:	89 10                	mov    %edx,(%eax)
81004536:	eb 14                	jmp    8100454c <_realloc_r+0x359>
81004538:	83 ec 04             	sub    $0x4,%esp
8100453b:	ff 75 a0             	push   -0x60(%ebp)
8100453e:	ff 75 0c             	push   0xc(%ebp)
81004541:	ff 75 a8             	push   -0x58(%ebp)
81004544:	e8 d7 fb ff ff       	call   81004120 <memmove>
81004549:	83 c4 10             	add    $0x10,%esp
8100454c:	ba a0 56 00 81       	mov    $0x810056a0,%edx
81004551:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004554:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004557:	01 c8                	add    %ecx,%eax
81004559:	89 42 08             	mov    %eax,0x8(%edx)
8100455c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100455f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81004562:	89 c2                	mov    %eax,%edx
81004564:	b8 a0 56 00 81       	mov    $0x810056a0,%eax
81004569:	8b 40 08             	mov    0x8(%eax),%eax
8100456c:	83 ca 01             	or     $0x1,%edx
8100456f:	89 50 04             	mov    %edx,0x4(%eax)
81004572:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004575:	8b 40 04             	mov    0x4(%eax),%eax
81004578:	83 e0 01             	and    $0x1,%eax
8100457b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100457e:	89 c2                	mov    %eax,%edx
81004580:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004583:	89 50 04             	mov    %edx,0x4(%eax)
81004586:	83 ec 0c             	sub    $0xc,%esp
81004589:	ff 75 08             	push   0x8(%ebp)
8100458c:	e8 9d da ff ff       	call   8100202e <__malloc_unlock>
81004591:	83 c4 10             	add    $0x10,%esp
81004594:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004597:	e9 2f 05 00 00       	jmp    81004acb <_realloc_r+0x8d8>
8100459c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100459f:	8b 45 ac             	mov    -0x54(%ebp),%eax
810045a2:	01 c2                	add    %eax,%edx
810045a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045a7:	01 d0                	add    %edx,%eax
810045a9:	89 c2                	mov    %eax,%edx
810045ab:	8b 45 bc             	mov    -0x44(%ebp),%eax
810045ae:	39 c2                	cmp    %eax,%edx
810045b0:	0f 8c 6f 01 00 00    	jl     81004725 <_realloc_r+0x532>
810045b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810045b9:	8b 40 0c             	mov    0xc(%eax),%eax
810045bc:	89 45 b8             	mov    %eax,-0x48(%ebp)
810045bf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810045c2:	8b 40 08             	mov    0x8(%eax),%eax
810045c5:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810045c8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810045cb:	8b 55 b8             	mov    -0x48(%ebp),%edx
810045ce:	89 50 0c             	mov    %edx,0xc(%eax)
810045d1:	8b 45 b8             	mov    -0x48(%ebp),%eax
810045d4:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810045d7:	89 50 08             	mov    %edx,0x8(%eax)
810045da:	8b 45 b0             	mov    -0x50(%ebp),%eax
810045dd:	8b 40 0c             	mov    0xc(%eax),%eax
810045e0:	89 45 b8             	mov    %eax,-0x48(%ebp)
810045e3:	8b 45 b0             	mov    -0x50(%ebp),%eax
810045e6:	8b 40 08             	mov    0x8(%eax),%eax
810045e9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810045ec:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810045ef:	8b 55 b8             	mov    -0x48(%ebp),%edx
810045f2:	89 50 0c             	mov    %edx,0xc(%eax)
810045f5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810045f8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810045fb:	89 50 08             	mov    %edx,0x8(%eax)
810045fe:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004601:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004604:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004607:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100460a:	01 d0                	add    %edx,%eax
8100460c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100460f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004612:	83 c0 08             	add    $0x8,%eax
81004615:	89 45 a8             	mov    %eax,-0x58(%ebp)
81004618:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100461b:	83 e8 04             	sub    $0x4,%eax
8100461e:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81004621:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81004625:	0f 87 e1 00 00 00    	ja     8100470c <_realloc_r+0x519>
8100462b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100462e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004631:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004634:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004637:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
8100463b:	0f 86 90 00 00 00    	jbe    810046d1 <_realloc_r+0x4de>
81004641:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004644:	8d 42 04             	lea    0x4(%edx),%eax
81004647:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100464a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100464d:	8d 48 04             	lea    0x4(%eax),%ecx
81004650:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81004653:	8b 12                	mov    (%edx),%edx
81004655:	89 10                	mov    %edx,(%eax)
81004657:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100465a:	8d 42 04             	lea    0x4(%edx),%eax
8100465d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004660:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004663:	8d 48 04             	lea    0x4(%eax),%ecx
81004666:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81004669:	8b 12                	mov    (%edx),%edx
8100466b:	89 10                	mov    %edx,(%eax)
8100466d:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81004671:	76 5e                	jbe    810046d1 <_realloc_r+0x4de>
81004673:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004676:	8d 42 04             	lea    0x4(%edx),%eax
81004679:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100467c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100467f:	8d 48 04             	lea    0x4(%eax),%ecx
81004682:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81004685:	8b 12                	mov    (%edx),%edx
81004687:	89 10                	mov    %edx,(%eax)
81004689:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100468c:	8d 42 04             	lea    0x4(%edx),%eax
8100468f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004692:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004695:	8d 48 04             	lea    0x4(%eax),%ecx
81004698:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100469b:	8b 12                	mov    (%edx),%edx
8100469d:	89 10                	mov    %edx,(%eax)
8100469f:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810046a3:	76 2c                	jbe    810046d1 <_realloc_r+0x4de>
810046a5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810046a8:	8d 42 04             	lea    0x4(%edx),%eax
810046ab:	89 45 dc             	mov    %eax,-0x24(%ebp)
810046ae:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046b1:	8d 48 04             	lea    0x4(%eax),%ecx
810046b4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810046b7:	8b 12                	mov    (%edx),%edx
810046b9:	89 10                	mov    %edx,(%eax)
810046bb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810046be:	8d 42 04             	lea    0x4(%edx),%eax
810046c1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810046c4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046c7:	8d 48 04             	lea    0x4(%eax),%ecx
810046ca:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810046cd:	8b 12                	mov    (%edx),%edx
810046cf:	89 10                	mov    %edx,(%eax)
810046d1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810046d4:	8d 42 04             	lea    0x4(%edx),%eax
810046d7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810046da:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046dd:	8d 48 04             	lea    0x4(%eax),%ecx
810046e0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810046e3:	8b 12                	mov    (%edx),%edx
810046e5:	89 10                	mov    %edx,(%eax)
810046e7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810046ea:	8d 42 04             	lea    0x4(%edx),%eax
810046ed:	89 45 dc             	mov    %eax,-0x24(%ebp)
810046f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046f3:	8d 48 04             	lea    0x4(%eax),%ecx
810046f6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810046f9:	8b 12                	mov    (%edx),%edx
810046fb:	89 10                	mov    %edx,(%eax)
810046fd:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004700:	8b 10                	mov    (%eax),%edx
81004702:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004705:	89 10                	mov    %edx,(%eax)
81004707:	e9 12 03 00 00       	jmp    81004a1e <_realloc_r+0x82b>
8100470c:	83 ec 04             	sub    $0x4,%esp
8100470f:	ff 75 a4             	push   -0x5c(%ebp)
81004712:	ff 75 0c             	push   0xc(%ebp)
81004715:	ff 75 a8             	push   -0x58(%ebp)
81004718:	e8 03 fa ff ff       	call   81004120 <memmove>
8100471d:	83 c4 10             	add    $0x10,%esp
81004720:	e9 f9 02 00 00       	jmp    81004a1e <_realloc_r+0x82b>
81004725:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81004729:	0f 84 5b 01 00 00    	je     8100488a <_realloc_r+0x697>
8100472f:	8b 55 ac             	mov    -0x54(%ebp),%edx
81004732:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004735:	01 d0                	add    %edx,%eax
81004737:	89 c2                	mov    %eax,%edx
81004739:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100473c:	39 c2                	cmp    %eax,%edx
8100473e:	0f 8c 46 01 00 00    	jl     8100488a <_realloc_r+0x697>
81004744:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004747:	8b 40 0c             	mov    0xc(%eax),%eax
8100474a:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100474d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81004750:	8b 40 08             	mov    0x8(%eax),%eax
81004753:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81004756:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81004759:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100475c:	89 50 0c             	mov    %edx,0xc(%eax)
8100475f:	8b 45 b8             	mov    -0x48(%ebp),%eax
81004762:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81004765:	89 50 08             	mov    %edx,0x8(%eax)
81004768:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100476b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100476e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81004771:	01 45 f0             	add    %eax,-0x10(%ebp)
81004774:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004777:	83 c0 08             	add    $0x8,%eax
8100477a:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100477d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81004780:	83 e8 04             	sub    $0x4,%eax
81004783:	89 45 9c             	mov    %eax,-0x64(%ebp)
81004786:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100478a:	0f 87 e1 00 00 00    	ja     81004871 <_realloc_r+0x67e>
81004790:	8b 45 0c             	mov    0xc(%ebp),%eax
81004793:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004796:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004799:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100479c:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810047a0:	0f 86 90 00 00 00    	jbe    81004836 <_realloc_r+0x643>
810047a6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810047a9:	8d 42 04             	lea    0x4(%edx),%eax
810047ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810047af:	8b 45 d0             	mov    -0x30(%ebp),%eax
810047b2:	8d 48 04             	lea    0x4(%eax),%ecx
810047b5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810047b8:	8b 12                	mov    (%edx),%edx
810047ba:	89 10                	mov    %edx,(%eax)
810047bc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810047bf:	8d 42 04             	lea    0x4(%edx),%eax
810047c2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810047c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810047c8:	8d 48 04             	lea    0x4(%eax),%ecx
810047cb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810047ce:	8b 12                	mov    (%edx),%edx
810047d0:	89 10                	mov    %edx,(%eax)
810047d2:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810047d6:	76 5e                	jbe    81004836 <_realloc_r+0x643>
810047d8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810047db:	8d 42 04             	lea    0x4(%edx),%eax
810047de:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810047e1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810047e4:	8d 48 04             	lea    0x4(%eax),%ecx
810047e7:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810047ea:	8b 12                	mov    (%edx),%edx
810047ec:	89 10                	mov    %edx,(%eax)
810047ee:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810047f1:	8d 42 04             	lea    0x4(%edx),%eax
810047f4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810047f7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810047fa:	8d 48 04             	lea    0x4(%eax),%ecx
810047fd:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004800:	8b 12                	mov    (%edx),%edx
81004802:	89 10                	mov    %edx,(%eax)
81004804:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81004808:	76 2c                	jbe    81004836 <_realloc_r+0x643>
8100480a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100480d:	8d 42 04             	lea    0x4(%edx),%eax
81004810:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004813:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004816:	8d 48 04             	lea    0x4(%eax),%ecx
81004819:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100481c:	8b 12                	mov    (%edx),%edx
8100481e:	89 10                	mov    %edx,(%eax)
81004820:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004823:	8d 42 04             	lea    0x4(%edx),%eax
81004826:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004829:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100482c:	8d 48 04             	lea    0x4(%eax),%ecx
8100482f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004832:	8b 12                	mov    (%edx),%edx
81004834:	89 10                	mov    %edx,(%eax)
81004836:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81004839:	8d 42 04             	lea    0x4(%edx),%eax
8100483c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100483f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004842:	8d 48 04             	lea    0x4(%eax),%ecx
81004845:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81004848:	8b 12                	mov    (%edx),%edx
8100484a:	89 10                	mov    %edx,(%eax)
8100484c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100484f:	8d 42 04             	lea    0x4(%edx),%eax
81004852:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004855:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004858:	8d 48 04             	lea    0x4(%eax),%ecx
8100485b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100485e:	8b 12                	mov    (%edx),%edx
81004860:	89 10                	mov    %edx,(%eax)
81004862:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004865:	8b 10                	mov    (%eax),%edx
81004867:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100486a:	89 10                	mov    %edx,(%eax)
8100486c:	e9 ad 01 00 00       	jmp    81004a1e <_realloc_r+0x82b>
81004871:	83 ec 04             	sub    $0x4,%esp
81004874:	ff 75 9c             	push   -0x64(%ebp)
81004877:	ff 75 0c             	push   0xc(%ebp)
8100487a:	ff 75 a8             	push   -0x58(%ebp)
8100487d:	e8 9e f8 ff ff       	call   81004120 <memmove>
81004882:	83 c4 10             	add    $0x10,%esp
81004885:	e9 94 01 00 00       	jmp    81004a1e <_realloc_r+0x82b>
8100488a:	83 ec 08             	sub    $0x8,%esp
8100488d:	ff 75 10             	push   0x10(%ebp)
81004890:	ff 75 08             	push   0x8(%ebp)
81004893:	e8 00 ce ff ff       	call   81001698 <_malloc_r>
81004898:	83 c4 10             	add    $0x10,%esp
8100489b:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100489e:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810048a2:	75 18                	jne    810048bc <_realloc_r+0x6c9>
810048a4:	83 ec 0c             	sub    $0xc,%esp
810048a7:	ff 75 08             	push   0x8(%ebp)
810048aa:	e8 7f d7 ff ff       	call   8100202e <__malloc_unlock>
810048af:	83 c4 10             	add    $0x10,%esp
810048b2:	b8 00 00 00 00       	mov    $0x0,%eax
810048b7:	e9 0f 02 00 00       	jmp    81004acb <_realloc_r+0x8d8>
810048bc:	8b 45 a8             	mov    -0x58(%ebp),%eax
810048bf:	83 e8 08             	sub    $0x8,%eax
810048c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048c5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810048c8:	8b 40 04             	mov    0x4(%eax),%eax
810048cb:	83 e0 fe             	and    $0xfffffffe,%eax
810048ce:	89 c2                	mov    %eax,%edx
810048d0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810048d3:	01 d0                	add    %edx,%eax
810048d5:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810048d8:	75 17                	jne    810048f1 <_realloc_r+0x6fe>
810048da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810048dd:	8b 40 04             	mov    0x4(%eax),%eax
810048e0:	83 e0 fc             	and    $0xfffffffc,%eax
810048e3:	01 45 f0             	add    %eax,-0x10(%ebp)
810048e6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810048e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048ec:	e9 2d 01 00 00       	jmp    81004a1e <_realloc_r+0x82b>
810048f1:	8b 45 c0             	mov    -0x40(%ebp),%eax
810048f4:	83 e8 04             	sub    $0x4,%eax
810048f7:	89 45 98             	mov    %eax,-0x68(%ebp)
810048fa:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810048fe:	0f 87 de 00 00 00    	ja     810049e2 <_realloc_r+0x7ef>
81004904:	8b 45 0c             	mov    0xc(%ebp),%eax
81004907:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100490a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100490d:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004910:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81004914:	0f 86 90 00 00 00    	jbe    810049aa <_realloc_r+0x7b7>
8100491a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100491d:	8d 42 04             	lea    0x4(%edx),%eax
81004920:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004923:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004926:	8d 48 04             	lea    0x4(%eax),%ecx
81004929:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100492c:	8b 12                	mov    (%edx),%edx
8100492e:	89 10                	mov    %edx,(%eax)
81004930:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004933:	8d 42 04             	lea    0x4(%edx),%eax
81004936:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004939:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100493c:	8d 48 04             	lea    0x4(%eax),%ecx
8100493f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004942:	8b 12                	mov    (%edx),%edx
81004944:	89 10                	mov    %edx,(%eax)
81004946:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100494a:	76 5e                	jbe    810049aa <_realloc_r+0x7b7>
8100494c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100494f:	8d 42 04             	lea    0x4(%edx),%eax
81004952:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004955:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004958:	8d 48 04             	lea    0x4(%eax),%ecx
8100495b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100495e:	8b 12                	mov    (%edx),%edx
81004960:	89 10                	mov    %edx,(%eax)
81004962:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004965:	8d 42 04             	lea    0x4(%edx),%eax
81004968:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100496b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100496e:	8d 48 04             	lea    0x4(%eax),%ecx
81004971:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004974:	8b 12                	mov    (%edx),%edx
81004976:	89 10                	mov    %edx,(%eax)
81004978:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100497c:	76 2c                	jbe    810049aa <_realloc_r+0x7b7>
8100497e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004981:	8d 42 04             	lea    0x4(%edx),%eax
81004984:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004987:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100498a:	8d 48 04             	lea    0x4(%eax),%ecx
8100498d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81004990:	8b 12                	mov    (%edx),%edx
81004992:	89 10                	mov    %edx,(%eax)
81004994:	8b 55 cc             	mov    -0x34(%ebp),%edx
81004997:	8d 42 04             	lea    0x4(%edx),%eax
8100499a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100499d:	8b 45 c8             	mov    -0x38(%ebp),%eax
810049a0:	8d 48 04             	lea    0x4(%eax),%ecx
810049a3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810049a6:	8b 12                	mov    (%edx),%edx
810049a8:	89 10                	mov    %edx,(%eax)
810049aa:	8b 55 cc             	mov    -0x34(%ebp),%edx
810049ad:	8d 42 04             	lea    0x4(%edx),%eax
810049b0:	89 45 cc             	mov    %eax,-0x34(%ebp)
810049b3:	8b 45 c8             	mov    -0x38(%ebp),%eax
810049b6:	8d 48 04             	lea    0x4(%eax),%ecx
810049b9:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810049bc:	8b 12                	mov    (%edx),%edx
810049be:	89 10                	mov    %edx,(%eax)
810049c0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810049c3:	8d 42 04             	lea    0x4(%edx),%eax
810049c6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810049c9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810049cc:	8d 48 04             	lea    0x4(%eax),%ecx
810049cf:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810049d2:	8b 12                	mov    (%edx),%edx
810049d4:	89 10                	mov    %edx,(%eax)
810049d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810049d9:	8b 10                	mov    (%eax),%edx
810049db:	8b 45 c8             	mov    -0x38(%ebp),%eax
810049de:	89 10                	mov    %edx,(%eax)
810049e0:	eb 14                	jmp    810049f6 <_realloc_r+0x803>
810049e2:	83 ec 04             	sub    $0x4,%esp
810049e5:	ff 75 98             	push   -0x68(%ebp)
810049e8:	ff 75 0c             	push   0xc(%ebp)
810049eb:	ff 75 a8             	push   -0x58(%ebp)
810049ee:	e8 2d f7 ff ff       	call   81004120 <memmove>
810049f3:	83 c4 10             	add    $0x10,%esp
810049f6:	83 ec 08             	sub    $0x8,%esp
810049f9:	ff 75 0c             	push   0xc(%ebp)
810049fc:	ff 75 08             	push   0x8(%ebp)
810049ff:	e8 e8 c3 ff ff       	call   81000dec <_free_r>
81004a04:	83 c4 10             	add    $0x10,%esp
81004a07:	83 ec 0c             	sub    $0xc,%esp
81004a0a:	ff 75 08             	push   0x8(%ebp)
81004a0d:	e8 1c d6 ff ff       	call   8100202e <__malloc_unlock>
81004a12:	83 c4 10             	add    $0x10,%esp
81004a15:	8b 45 a8             	mov    -0x58(%ebp),%eax
81004a18:	e9 ae 00 00 00       	jmp    81004acb <_realloc_r+0x8d8>
81004a1d:	90                   	nop
81004a1e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004a21:	2b 45 bc             	sub    -0x44(%ebp),%eax
81004a24:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004a27:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81004a2b:	76 5d                	jbe    81004a8a <_realloc_r+0x897>
81004a2d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004a30:	8b 45 bc             	mov    -0x44(%ebp),%eax
81004a33:	01 d0                	add    %edx,%eax
81004a35:	89 45 90             	mov    %eax,-0x70(%ebp)
81004a38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a3b:	8b 40 04             	mov    0x4(%eax),%eax
81004a3e:	83 e0 01             	and    $0x1,%eax
81004a41:	0b 45 bc             	or     -0x44(%ebp),%eax
81004a44:	89 c2                	mov    %eax,%edx
81004a46:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a49:	89 50 04             	mov    %edx,0x4(%eax)
81004a4c:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a4f:	83 c8 01             	or     $0x1,%eax
81004a52:	89 c2                	mov    %eax,%edx
81004a54:	8b 45 90             	mov    -0x70(%ebp),%eax
81004a57:	89 50 04             	mov    %edx,0x4(%eax)
81004a5a:	8b 55 90             	mov    -0x70(%ebp),%edx
81004a5d:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a60:	01 d0                	add    %edx,%eax
81004a62:	8b 50 04             	mov    0x4(%eax),%edx
81004a65:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81004a68:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a6b:	01 c8                	add    %ecx,%eax
81004a6d:	83 ca 01             	or     $0x1,%edx
81004a70:	89 50 04             	mov    %edx,0x4(%eax)
81004a73:	8b 45 90             	mov    -0x70(%ebp),%eax
81004a76:	83 c0 08             	add    $0x8,%eax
81004a79:	83 ec 08             	sub    $0x8,%esp
81004a7c:	50                   	push   %eax
81004a7d:	ff 75 08             	push   0x8(%ebp)
81004a80:	e8 67 c3 ff ff       	call   81000dec <_free_r>
81004a85:	83 c4 10             	add    $0x10,%esp
81004a88:	eb 2d                	jmp    81004ab7 <_realloc_r+0x8c4>
81004a8a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a8d:	8b 40 04             	mov    0x4(%eax),%eax
81004a90:	83 e0 01             	and    $0x1,%eax
81004a93:	0b 45 f0             	or     -0x10(%ebp),%eax
81004a96:	89 c2                	mov    %eax,%edx
81004a98:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a9b:	89 50 04             	mov    %edx,0x4(%eax)
81004a9e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004aa1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004aa4:	01 d0                	add    %edx,%eax
81004aa6:	8b 50 04             	mov    0x4(%eax),%edx
81004aa9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004aac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004aaf:	01 c8                	add    %ecx,%eax
81004ab1:	83 ca 01             	or     $0x1,%edx
81004ab4:	89 50 04             	mov    %edx,0x4(%eax)
81004ab7:	83 ec 0c             	sub    $0xc,%esp
81004aba:	ff 75 08             	push   0x8(%ebp)
81004abd:	e8 6c d5 ff ff       	call   8100202e <__malloc_unlock>
81004ac2:	83 c4 10             	add    $0x10,%esp
81004ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ac8:	83 c0 08             	add    $0x8,%eax
81004acb:	c9                   	leave  
81004acc:	c3                   	ret    

81004acd <cleanup_glue>:
81004acd:	55                   	push   %ebp
81004ace:	89 e5                	mov    %esp,%ebp
81004ad0:	83 ec 08             	sub    $0x8,%esp
81004ad3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ad6:	8b 00                	mov    (%eax),%eax
81004ad8:	85 c0                	test   %eax,%eax
81004ada:	74 14                	je     81004af0 <cleanup_glue+0x23>
81004adc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004adf:	8b 00                	mov    (%eax),%eax
81004ae1:	83 ec 08             	sub    $0x8,%esp
81004ae4:	50                   	push   %eax
81004ae5:	ff 75 08             	push   0x8(%ebp)
81004ae8:	e8 e0 ff ff ff       	call   81004acd <cleanup_glue>
81004aed:	83 c4 10             	add    $0x10,%esp
81004af0:	83 ec 08             	sub    $0x8,%esp
81004af3:	ff 75 0c             	push   0xc(%ebp)
81004af6:	ff 75 08             	push   0x8(%ebp)
81004af9:	e8 ee c2 ff ff       	call   81000dec <_free_r>
81004afe:	83 c4 10             	add    $0x10,%esp
81004b01:	90                   	nop
81004b02:	c9                   	leave  
81004b03:	c3                   	ret    

81004b04 <_reclaim_reent>:
81004b04:	55                   	push   %ebp
81004b05:	89 e5                	mov    %esp,%ebp
81004b07:	83 ec 28             	sub    $0x28,%esp
81004b0a:	a1 84 56 00 81       	mov    0x81005684,%eax
81004b0f:	39 45 08             	cmp    %eax,0x8(%ebp)
81004b12:	0f 84 49 01 00 00    	je     81004c61 <_reclaim_reent+0x15d>
81004b18:	8b 45 08             	mov    0x8(%ebp),%eax
81004b1b:	8b 40 4c             	mov    0x4c(%eax),%eax
81004b1e:	85 c0                	test   %eax,%eax
81004b20:	74 64                	je     81004b86 <_reclaim_reent+0x82>
81004b22:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b29:	eb 3e                	jmp    81004b69 <_reclaim_reent+0x65>
81004b2b:	8b 45 08             	mov    0x8(%ebp),%eax
81004b2e:	8b 50 4c             	mov    0x4c(%eax),%edx
81004b31:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b34:	c1 e0 02             	shl    $0x2,%eax
81004b37:	01 d0                	add    %edx,%eax
81004b39:	8b 00                	mov    (%eax),%eax
81004b3b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004b3e:	eb 1f                	jmp    81004b5f <_reclaim_reent+0x5b>
81004b40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004b43:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004b46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004b49:	8b 00                	mov    (%eax),%eax
81004b4b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004b4e:	83 ec 08             	sub    $0x8,%esp
81004b51:	ff 75 e8             	push   -0x18(%ebp)
81004b54:	ff 75 08             	push   0x8(%ebp)
81004b57:	e8 90 c2 ff ff       	call   81000dec <_free_r>
81004b5c:	83 c4 10             	add    $0x10,%esp
81004b5f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004b63:	75 db                	jne    81004b40 <_reclaim_reent+0x3c>
81004b65:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004b69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b6c:	83 f8 1f             	cmp    $0x1f,%eax
81004b6f:	76 ba                	jbe    81004b2b <_reclaim_reent+0x27>
81004b71:	8b 45 08             	mov    0x8(%ebp),%eax
81004b74:	8b 40 4c             	mov    0x4c(%eax),%eax
81004b77:	83 ec 08             	sub    $0x8,%esp
81004b7a:	50                   	push   %eax
81004b7b:	ff 75 08             	push   0x8(%ebp)
81004b7e:	e8 69 c2 ff ff       	call   81000dec <_free_r>
81004b83:	83 c4 10             	add    $0x10,%esp
81004b86:	8b 45 08             	mov    0x8(%ebp),%eax
81004b89:	8b 40 40             	mov    0x40(%eax),%eax
81004b8c:	85 c0                	test   %eax,%eax
81004b8e:	74 15                	je     81004ba5 <_reclaim_reent+0xa1>
81004b90:	8b 45 08             	mov    0x8(%ebp),%eax
81004b93:	8b 40 40             	mov    0x40(%eax),%eax
81004b96:	83 ec 08             	sub    $0x8,%esp
81004b99:	50                   	push   %eax
81004b9a:	ff 75 08             	push   0x8(%ebp)
81004b9d:	e8 4a c2 ff ff       	call   81000dec <_free_r>
81004ba2:	83 c4 10             	add    $0x10,%esp
81004ba5:	8b 45 08             	mov    0x8(%ebp),%eax
81004ba8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004bae:	85 c0                	test   %eax,%eax
81004bb0:	74 50                	je     81004c02 <_reclaim_reent+0xfe>
81004bb2:	8b 45 08             	mov    0x8(%ebp),%eax
81004bb5:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004bbb:	8b 55 08             	mov    0x8(%ebp),%edx
81004bbe:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004bc4:	39 d0                	cmp    %edx,%eax
81004bc6:	74 3a                	je     81004c02 <_reclaim_reent+0xfe>
81004bc8:	8b 45 08             	mov    0x8(%ebp),%eax
81004bcb:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004bd1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004bd4:	eb 1f                	jmp    81004bf5 <_reclaim_reent+0xf1>
81004bd6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004bd9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004bdc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004bdf:	8b 00                	mov    (%eax),%eax
81004be1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004be4:	83 ec 08             	sub    $0x8,%esp
81004be7:	ff 75 e4             	push   -0x1c(%ebp)
81004bea:	ff 75 08             	push   0x8(%ebp)
81004bed:	e8 fa c1 ff ff       	call   81000dec <_free_r>
81004bf2:	83 c4 10             	add    $0x10,%esp
81004bf5:	8b 45 08             	mov    0x8(%ebp),%eax
81004bf8:	05 4c 01 00 00       	add    $0x14c,%eax
81004bfd:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81004c00:	75 d4                	jne    81004bd6 <_reclaim_reent+0xd2>
81004c02:	8b 45 08             	mov    0x8(%ebp),%eax
81004c05:	8b 40 54             	mov    0x54(%eax),%eax
81004c08:	85 c0                	test   %eax,%eax
81004c0a:	74 15                	je     81004c21 <_reclaim_reent+0x11d>
81004c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81004c0f:	8b 40 54             	mov    0x54(%eax),%eax
81004c12:	83 ec 08             	sub    $0x8,%esp
81004c15:	50                   	push   %eax
81004c16:	ff 75 08             	push   0x8(%ebp)
81004c19:	e8 ce c1 ff ff       	call   81000dec <_free_r>
81004c1e:	83 c4 10             	add    $0x10,%esp
81004c21:	8b 45 08             	mov    0x8(%ebp),%eax
81004c24:	8b 40 38             	mov    0x38(%eax),%eax
81004c27:	85 c0                	test   %eax,%eax
81004c29:	74 36                	je     81004c61 <_reclaim_reent+0x15d>
81004c2b:	8b 45 08             	mov    0x8(%ebp),%eax
81004c2e:	8b 40 3c             	mov    0x3c(%eax),%eax
81004c31:	83 ec 0c             	sub    $0xc,%esp
81004c34:	ff 75 08             	push   0x8(%ebp)
81004c37:	ff d0                	call   *%eax
81004c39:	83 c4 10             	add    $0x10,%esp
81004c3c:	8b 45 08             	mov    0x8(%ebp),%eax
81004c3f:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004c45:	85 c0                	test   %eax,%eax
81004c47:	74 18                	je     81004c61 <_reclaim_reent+0x15d>
81004c49:	8b 45 08             	mov    0x8(%ebp),%eax
81004c4c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004c52:	83 ec 08             	sub    $0x8,%esp
81004c55:	50                   	push   %eax
81004c56:	ff 75 08             	push   0x8(%ebp)
81004c59:	e8 6f fe ff ff       	call   81004acd <cleanup_glue>
81004c5e:	83 c4 10             	add    $0x10,%esp
81004c61:	90                   	nop
81004c62:	c9                   	leave  
81004c63:	c3                   	ret    

81004c64 <__get_global_locale>:
81004c64:	55                   	push   %ebp
81004c65:	89 e5                	mov    %esp,%ebp
81004c67:	b8 c0 5a 00 81       	mov    $0x81005ac0,%eax
81004c6c:	5d                   	pop    %ebp
81004c6d:	c3                   	ret    

81004c6e <__get_current_locale>:
81004c6e:	55                   	push   %ebp
81004c6f:	89 e5                	mov    %esp,%ebp
81004c71:	e8 ee ff ff ff       	call   81004c64 <__get_global_locale>
81004c76:	5d                   	pop    %ebp
81004c77:	c3                   	ret    

81004c78 <_wcrtomb_r>:
81004c78:	55                   	push   %ebp
81004c79:	89 e5                	mov    %esp,%ebp
81004c7b:	83 ec 18             	sub    $0x18,%esp
81004c7e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004c85:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004c89:	75 21                	jne    81004cac <_wcrtomb_r+0x34>
81004c8b:	e8 de ff ff ff       	call   81004c6e <__get_current_locale>
81004c90:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004c96:	ff 75 14             	push   0x14(%ebp)
81004c99:	6a 00                	push   $0x0
81004c9b:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004c9e:	52                   	push   %edx
81004c9f:	ff 75 08             	push   0x8(%ebp)
81004ca2:	ff d0                	call   *%eax
81004ca4:	83 c4 10             	add    $0x10,%esp
81004ca7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004caa:	eb 1f                	jmp    81004ccb <_wcrtomb_r+0x53>
81004cac:	e8 bd ff ff ff       	call   81004c6e <__get_current_locale>
81004cb1:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004cb7:	ff 75 14             	push   0x14(%ebp)
81004cba:	ff 75 10             	push   0x10(%ebp)
81004cbd:	ff 75 0c             	push   0xc(%ebp)
81004cc0:	ff 75 08             	push   0x8(%ebp)
81004cc3:	ff d0                	call   *%eax
81004cc5:	83 c4 10             	add    $0x10,%esp
81004cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ccb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004ccf:	75 19                	jne    81004cea <_wcrtomb_r+0x72>
81004cd1:	8b 45 14             	mov    0x14(%ebp),%eax
81004cd4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004cda:	8b 45 08             	mov    0x8(%ebp),%eax
81004cdd:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004ce3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ce8:	eb 03                	jmp    81004ced <_wcrtomb_r+0x75>
81004cea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ced:	c9                   	leave  
81004cee:	c3                   	ret    

81004cef <wcrtomb>:
81004cef:	55                   	push   %ebp
81004cf0:	89 e5                	mov    %esp,%ebp
81004cf2:	83 ec 28             	sub    $0x28,%esp
81004cf5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004cfc:	a1 84 56 00 81       	mov    0x81005684,%eax
81004d01:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d04:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81004d08:	75 21                	jne    81004d2b <wcrtomb+0x3c>
81004d0a:	e8 5f ff ff ff       	call   81004c6e <__get_current_locale>
81004d0f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004d15:	ff 75 10             	push   0x10(%ebp)
81004d18:	6a 00                	push   $0x0
81004d1a:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81004d1d:	52                   	push   %edx
81004d1e:	ff 75 f0             	push   -0x10(%ebp)
81004d21:	ff d0                	call   *%eax
81004d23:	83 c4 10             	add    $0x10,%esp
81004d26:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d29:	eb 1f                	jmp    81004d4a <wcrtomb+0x5b>
81004d2b:	e8 3e ff ff ff       	call   81004c6e <__get_current_locale>
81004d30:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004d36:	ff 75 10             	push   0x10(%ebp)
81004d39:	ff 75 0c             	push   0xc(%ebp)
81004d3c:	ff 75 08             	push   0x8(%ebp)
81004d3f:	ff 75 f0             	push   -0x10(%ebp)
81004d42:	ff d0                	call   *%eax
81004d44:	83 c4 10             	add    $0x10,%esp
81004d47:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d4a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004d4e:	75 19                	jne    81004d69 <wcrtomb+0x7a>
81004d50:	8b 45 10             	mov    0x10(%ebp),%eax
81004d53:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81004d59:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d5c:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004d62:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d67:	eb 03                	jmp    81004d6c <wcrtomb+0x7d>
81004d69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d6c:	c9                   	leave  
81004d6d:	c3                   	ret    

81004d6e <__get_global_locale>:
81004d6e:	55                   	push   %ebp
81004d6f:	89 e5                	mov    %esp,%ebp
81004d71:	b8 c0 5a 00 81       	mov    $0x81005ac0,%eax
81004d76:	5d                   	pop    %ebp
81004d77:	c3                   	ret    

81004d78 <__get_current_locale>:
81004d78:	55                   	push   %ebp
81004d79:	89 e5                	mov    %esp,%ebp
81004d7b:	e8 ee ff ff ff       	call   81004d6e <__get_global_locale>
81004d80:	5d                   	pop    %ebp
81004d81:	c3                   	ret    

81004d82 <_wctomb_r>:
81004d82:	55                   	push   %ebp
81004d83:	89 e5                	mov    %esp,%ebp
81004d85:	83 ec 08             	sub    $0x8,%esp
81004d88:	e8 eb ff ff ff       	call   81004d78 <__get_current_locale>
81004d8d:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004d93:	ff 75 14             	push   0x14(%ebp)
81004d96:	ff 75 10             	push   0x10(%ebp)
81004d99:	ff 75 0c             	push   0xc(%ebp)
81004d9c:	ff 75 08             	push   0x8(%ebp)
81004d9f:	ff d0                	call   *%eax
81004da1:	83 c4 10             	add    $0x10,%esp
81004da4:	c9                   	leave  
81004da5:	c3                   	ret    

81004da6 <__ascii_wctomb>:
81004da6:	55                   	push   %ebp
81004da7:	89 e5                	mov    %esp,%ebp
81004da9:	83 ec 10             	sub    $0x10,%esp
81004dac:	8b 45 10             	mov    0x10(%ebp),%eax
81004daf:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004db2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004db6:	75 07                	jne    81004dbf <__ascii_wctomb+0x19>
81004db8:	b8 00 00 00 00       	mov    $0x0,%eax
81004dbd:	eb 28                	jmp    81004de7 <__ascii_wctomb+0x41>
81004dbf:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004dc6:	76 10                	jbe    81004dd8 <__ascii_wctomb+0x32>
81004dc8:	8b 45 08             	mov    0x8(%ebp),%eax
81004dcb:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004dd1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004dd6:	eb 0f                	jmp    81004de7 <__ascii_wctomb+0x41>
81004dd8:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004ddb:	89 c2                	mov    %eax,%edx
81004ddd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004de0:	88 10                	mov    %dl,(%eax)
81004de2:	b8 01 00 00 00       	mov    $0x1,%eax
81004de7:	c9                   	leave  
81004de8:	c3                   	ret    

81004de9 <_fstat_r>:
81004de9:	55                   	push   %ebp
81004dea:	89 e5                	mov    %esp,%ebp
81004dec:	83 ec 18             	sub    $0x18,%esp
81004def:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
81004df6:	00 00 00 
81004df9:	83 ec 08             	sub    $0x8,%esp
81004dfc:	ff 75 10             	push   0x10(%ebp)
81004dff:	ff 75 0c             	push   0xc(%ebp)
81004e02:	e8 f1 b6 ff ff       	call   810004f8 <fstat>
81004e07:	83 c4 10             	add    $0x10,%esp
81004e0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e0d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004e11:	75 14                	jne    81004e27 <_fstat_r+0x3e>
81004e13:	a1 b0 62 00 81       	mov    0x810062b0,%eax
81004e18:	85 c0                	test   %eax,%eax
81004e1a:	74 0b                	je     81004e27 <_fstat_r+0x3e>
81004e1c:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
81004e22:	8b 45 08             	mov    0x8(%ebp),%eax
81004e25:	89 10                	mov    %edx,(%eax)
81004e27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e2a:	c9                   	leave  
81004e2b:	c3                   	ret    

81004e2c <_isatty_r>:
81004e2c:	55                   	push   %ebp
81004e2d:	89 e5                	mov    %esp,%ebp
81004e2f:	83 ec 18             	sub    $0x18,%esp
81004e32:	c7 05 b0 62 00 81 00 	movl   $0x0,0x810062b0
81004e39:	00 00 00 
81004e3c:	83 ec 0c             	sub    $0xc,%esp
81004e3f:	ff 75 0c             	push   0xc(%ebp)
81004e42:	e8 90 b6 ff ff       	call   810004d7 <isatty>
81004e47:	83 c4 10             	add    $0x10,%esp
81004e4a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e4d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004e51:	75 14                	jne    81004e67 <_isatty_r+0x3b>
81004e53:	a1 b0 62 00 81       	mov    0x810062b0,%eax
81004e58:	85 c0                	test   %eax,%eax
81004e5a:	74 0b                	je     81004e67 <_isatty_r+0x3b>
81004e5c:	8b 15 b0 62 00 81    	mov    0x810062b0,%edx
81004e62:	8b 45 08             	mov    0x8(%ebp),%eax
81004e65:	89 10                	mov    %edx,(%eax)
81004e67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e6a:	c9                   	leave  
81004e6b:	c3                   	ret    
