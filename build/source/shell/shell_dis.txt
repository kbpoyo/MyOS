
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x810007f1

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000084b0 memsz 0x00008b60 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000073cf  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000006cc  810073e0  810073e0  000083e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007ac0  81007ac0  00008ac0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  810084c0  810084c0  000094b0  2**5
                  ALLOC
  4 .debug_info   00025f31  00000000  00000000  000094b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 0000891d  00000000  00000000  0002f3e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000008c8  00000000  00000000  00037d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00005353  00000000  00000000  000385c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000168a  00000000  00000000  0003d91b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000015e8  00000000  00000000  0003efa5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0004058d  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001be0  00000000  00000000  000405cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  000421ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
810084c0 l     O .bss	00000200 cmd_buf
81007ac0 l     O .data	00000004 prompt
810086c0 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	000001c2 do_less
81007600 l     O .rodata	00000048 cmd_list
810004a2 l     F .text	0000003e cli_init
810004e0 l     F .text	00000033 show_prompt
81000513 l     F .text	00000043 find_builtin
81000556 l     F .text	00000049 run_builtin
8100059f l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810011a4 l     F .text	000000ad std
81001251 l     F .text	0000001b stdin_init
8100126c l     F .text	0000001b stdout_init
81001287 l     F .text	0000001b stderr_init
81008acc l     O .bss	00000004 __sfp_recursive_mutex
81008ad0 l     O .bss	00000004 __sinit_recursive_mutex
8100154a l     F .text	0000000a __fp_lock
81001554 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81008adc l     O .bss	00000004 optwhere
81008ae0 l     O .bss	00000004 permute_from
81008ae4 l     O .bss	00000004 num_nonopts
8100288f l     F .text	0000007b reverse_argv_elements
8100290a l     F .text	00000036 permute
81002940 l     F .text	00000031 is_option
81002971 l     F .text	00000059 read_globals
810029ca l     F .text	00000052 write_globals
81002a1c l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007ae0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003840 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100438d l       .text	00000000 L20
81004344 l       .text	00000000 L5
8100438a l       .text	00000000 L15
81004350 l       .text	00000000 L8
81004371 l       .text	00000000 L9
81004380 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810043df l       .text	00000000 L4
810043d1 l       .text	00000000 BYTECMP
810043cc l       .text	00000000 L5
810043d3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008b48 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
8100462d l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81005cab l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810060eb l       .text	00000000 L25
81006092 l       .text	00000000 L5
810060de l       .text	00000000 L14
810060e4 l       .text	00000000 L19
810060a3 l       .text	00000000 L10
810060d0 l       .text	00000000 L9
810060d3 l       .text	00000000 L15
8100611e l       .text	00000000 L26
81006121 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006226 l       .text	00000000 L5
8100625e l       .text	00000000 L15
81006230 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100636c l     F .text	0000000a __locale_ctype_ptr_l
81006376 l     F .text	0000000a __get_global_locale
81006380 l     F .text	0000000a __get_current_locale
8100638a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81008b50 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81006b50 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81008330 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006e8f l     F .text	0000000a __get_global_locale
81006e99 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006f7b l     F .text	0000000a __get_global_locale
81006f85 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81007011 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100723e l     F .text	0000000a __get_global_locale
81007248 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81007348 l     F .text	0000000a __get_global_locale
81007352 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008b58 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81008b5c l     O .bss	00000004 __env_recursive_mutex
81006e4f g     F .text	00000040 _isatty_r
81005b14 g     F .text	00000037 cleanup_glue
81005148 g     F .text	000000d6 _puts_r
81006f35 g     F .text	00000046 _lseek_r
81000940 g     F .text	0000001b yield
81006a02 g     F .text	000000ba __sflags
81006352 g     F .text	0000001a strtok_r
81005113 g     F .text	00000035 printf
81007252 g     F .text	00000077 _wcrtomb_r
81005fc2 g     F .text	0000004a __sseek
81001499 g     F .text	00000099 __sinit
810065cf g     F .text	00000112 __swbuf_r
81006ea3 g     F .text	0000005f _setlocale_r
810012a2 g     F .text	0000006f __sfmoreglue
8100454b g     F .text	00000006 __malloc_unlock
81004430 g       .text	00000000 memmove
81003578 g     F .text	00000049 getopt_long
8100147f g     F .text	0000001a _cleanup
81006292 g     F .text	000000c0 __strtok_r
810069f8 g     F .text	0000000a __errno
81006d25 g     F .text	00000020 getenv
810021fe g     F .text	00000043 _fstat_r
81008b4c g     O .bss	00000004 errno
81005f5d g     F .text	0000000a __seofread
81000913 g     F .text	0000002d execve
810008b5 g     F .text	0000001b getpid
81001185 g     F .text	0000001f fgets
810043e8 g       .text	00000000 memcpy
8100145e g     F .text	00000021 _cleanup_r
8100521e g     F .text	0000001c puts
81003807 g     F .text	0000001c malloc
810050e6 g     F .text	0000002d _printf_r
81000a2a g     F .text	00000021 isatty
8100367d g     F .text	0000000a __getreent
81008ad4 g     O .bss	00000004 optarg
81008b00 g     O .bss	00000004 __malloc_top_pad
810084c0 g       .bss	00000000 __bss_start__
81002241 g     F .text	0000049e __sfvwrite_r
81005ed9 g     F .text	00000040 _sbrk_r
81007ac4 g     O .data	00000004 opterr
81000b5f g     F .text	00000040 readdir
81007115 g     F .text	00000046 _read_r
81000c4c g     F .text	00000107 _fclose_r
81000fee g     F .text	00000039 fflush
81008b04 g     O .bss	00000004 __malloc_max_sbrked_mem
810009fd g     F .text	0000002d lseek
81007758 g     O .rodata	00000004 _global_impure_ptr
8100523a g     F .text	000008da _realloc_r
81006581 g     F .text	00000025 strtol_l
81006c66 g     F .text	00000057 _fputwc_r
8100155e g     F .text	00000024 __fp_lock_all
810065a6 g     F .text	00000029 strtol
81001d2d g     F .text	000004b1 _fseeko_r
81005b4b g     F .text	00000160 _reclaim_reent
81006abc g     F .text	00000046 _fputc_r
810009af g     F .text	0000002d write
81007077 g     F .text	0000004b _putc_r
810084ac g     O .data	00000004 environ
81000a4b g     F .text	00000027 fstat
810016c3 g     F .text	0000002c fprintf
81003656 g     F .text	00000027 __getopt_long_only_r
810021de g     F .text	00000020 fseeko
81000bee g     F .text	0000001a _atoi_r
81001d0d g     F .text	00000020 fseek
8100083f g     F .text	0000004c sys_call
81004693 g     F .text	000000a8 __sfputs_r
81008ad8 g     O .bss	00000004 optind
81001532 g     F .text	00000006 __sfp_lock_acquire
81004300 g       .text	00000000 memchr
81008b60 g       .bss	00000000 __bss_end__
810017b4 g     F .text	000003db _free_r
81000ad6 g     F .text	00000021 wait
81007820 g     O .rodata	00000180 _ctype_b
81006f02 g     F .text	00000014 __locale_mb_cur_max
810068a3 g     F .text	00000115 __call_exitprocs
8100832c g     O .data	00000004 __malloc_sbrk_base
810007f1 g       .text	00000000 _start
81000982 g     F .text	0000002d read
810050a0 g     F .text	00000046 _open_r
8100715b g     F .text	000000e3 strncmp
8100362f g     F .text	00000027 __getopt_long_r
81008b20 g     O .bss	00000028 __malloc_current_mallinfo
810050e6 g     F .text	0000002d _iprintf_r
810069b8 g     F .text	00000040 _close_r
81006269 g     F .text	00000029 strtok
81004395 g       .text	00000000 memcmp
810027b2 g     F .text	000000b8 _fwrite_r
810008f8 g     F .text	0000001b fork
81006748 g     F .text	0000015b __swsetup_r
81001311 g     F .text	0000014d __sfp
81007f20 g     O .data	00000408 __malloc_av_
81001544 g     F .text	00000006 __sinit_lock_release
81005f19 g     F .text	00000044 __sread
81004545 g     F .text	00000006 __malloc_lock
8100169a g     F .text	00000029 _fprintf_r
81000a72 g     F .text	00000021 sbrk
81000f96 g     F .text	00000058 _fflush_r
81000801 g     F .text	0000003e cstart
8100167b g     F .text	0000001f fopen
81003531 g     F .text	00000047 getopt
810044bd g       .text	00000000 memset
8100065d g     F .text	00000194 main
81008b08 g     O .bss	00000004 __malloc_max_total_mem
810066e1 g     F .text	00000021 __swbuf
8100600c g     F .text	00000025 __sclose
81000d53 g     F .text	0000001d fclose
8100655c g     F .text	00000025 _strtol_r
81006d45 g     F .text	000000ed _findenv_r
81003ad3 g     F .text	00000822 _malloc_r
81007380 g     F .text	00000043 __ascii_wctomb
81000af7 g     F .text	00000068 opendir
8100169a g     F .text	00000029 _fiprintf_r
810073c9 g     F .text	00000006 __env_unlock
81006d05 g     F .text	00000020 _findenv
810026df g     F .text	00000068 _fwalk
81001027 g     F .text	0000015e _fgets_r
81006f8f g     F .text	0000002a _mbtowc_r
810070c2 g     F .text	00000053 putc
810035c1 g     F .text	00000049 getopt_long_only
81001b8f g     F .text	00000161 _malloc_trim_r
8100613c g     F .text	000000a5 strcmp
8100473b g     F .text	00000025 vfiprintf
81000a93 g     F .text	00000021 dup
81005113 g     F .text	00000035 iprintf
81008b54 g     O .bss	00000004 _PathLocale
81006702 g     F .text	00000046 _write_r
81006f16 g     F .text	0000001f setlocale
81004ab6 g     F .text	0000019b _printf_common
81007f04 g     O .data	00000004 _impure_ptr
81000d70 g     F .text	00000226 __sflush_r
81001cf0 g     F .text	0000001d _fseek_r
81005cd8 g     F .text	00000201 __srefill_r
81006fb9 g     F .text	00000058 __ascii_mbtowc
81001582 g     F .text	00000024 __fp_unlock_all
81006b02 g     F .text	0000004e fputc
810008d0 g     F .text	00000028 print_msg
81007ac8 g     O .data	00000004 optopt
81003774 g     F .text	00000093 __swhatbuf_r
8100286a g     F .text	00000025 fwrite
81006bb6 g     F .text	000000b0 __fputwc
810016ef g     F .text	000000a6 _fputs_r
81005f67 g     F .text	0000005b __swrite
81008328 g     O .data	00000004 __malloc_trim_threshold
81000c08 g     F .text	00000044 exit
810016c3 g     F .text	0000002c fiprintf
81004760 g     F .text	00000356 _vfiprintf_r
81002747 g     F .text	0000006b _fwalk_reent
81001538 g     F .text	00000006 __sfp_lock_release
81000bd4 g     F .text	0000001a atoi
810079a0 g     O .rodata	00000101 _ctype_
8100360a g     F .text	00000025 __getopt_r
810015a6 g     F .text	000000d5 _fopen_r
81000ab4 g     F .text	00000022 _exit
81003687 g     F .text	000000ed __smakebuf_r
810061f0 g       .text	00000000 strlen
81004c51 g     F .text	0000044f _printf_i
8100095b g     F .text	00000027 open
81004551 g     F .text	000000dc __sprint_r
81006040 g       .text	00000000 strchr
81001795 g     F .text	0000001f fputs
81000b9f g     F .text	00000035 closedir
8100735c g     F .text	00000024 _wctomb_r
810073c3 g     F .text	00000006 __env_lock
81004760 g     F .text	00000356 _vfprintf_r
8100088b g     F .text	0000002a msleep
810072c9 g     F .text	0000007f wcrtomb
810009dc g     F .text	00000021 close
81008340 g     O .data	0000016c __global_locale
8100473b g     F .text	00000025 vfprintf
81006cbd g     F .text	00000048 fputwc
81003823 g     F .text	0000001d free
8100153e g     F .text	00000006 __sinit_lock_acquire
81006e32 g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 c0 8a 00 81       	mov    0x81008ac0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 e6 73 00 81       	push   $0x810073e6
81000025:	e8 e9 50 00 00       	call   81005113 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 c4 8a 00 81       	mov    0x81008ac4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 f1 73 00 81       	push   $0x810073f1
81000050:	68 f6 73 00 81       	push   $0x810073f6
81000055:	e8 b9 50 00 00       	call   81005113 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 f9 73 00 81       	push   $0x810073f9
81000065:	68 f6 73 00 81       	push   $0x810073f6
8100006a:	e8 a4 50 00 00       	call   81005113 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 ef 35 00 00       	call   8100367d <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 df 10 00 00       	call   81001185 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 62 51 00 00       	call   8100521e <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 d8 8a 00 81 00 	movl   $0x0,0x81008ad8
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 00 74 00 81       	push   $0x81007400
81000107:	e8 12 51 00 00       	call   8100521e <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 06 74 00 81       	push   $0x81007406
81000117:	e8 02 51 00 00       	call   8100521e <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 18 74 00 81       	push   $0x81007418
81000127:	e8 f2 50 00 00       	call   8100521e <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 d4 8a 00 81       	mov    0x81008ad4,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 8d 0a 00 00       	call   81000bd4 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 d4 8a 00 81       	mov    0x81008ad4,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d d4 8a 00 81    	mov    0x81008ad4,%ebx
8100015e:	e8 1a 35 00 00       	call   8100367d <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 38 74 00 81       	push   $0x81007438
8100016f:	50                   	push   %eax
81000170:	e8 4e 15 00 00       	call   810016c3 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 57 74 00 81       	push   $0x81007457
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 9b 33 00 00       	call   81003531 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 cc 34 00 00       	call   8100367d <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 5c 74 00 81       	push   $0x8100745c
810001be:	e8 a7 26 00 00       	call   8100286a <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 d8 8a 00 81       	mov    0x81008ad8,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 a1 34 00 00       	call   8100367d <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 8f 74 00 81       	push   $0x8100748f
810001e9:	e8 7c 26 00 00       	call   8100286a <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 d8 8a 00 81       	mov    0x81008ad8,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 fc 4f 00 00       	call   8100521e <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 bd 09 00 00       	call   81000c08 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 ab 74 00 81       	push   $0x810074ab
81000259:	e8 99 08 00 00       	call   81000af7 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 b0 74 00 81       	push   $0x810074b0
81000272:	e8 a7 4f 00 00       	call   8100521e <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 c1 74 00 81       	push   $0x810074c1
810002ac:	e8 62 4e 00 00       	call   81005113 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 a0 08 00 00       	call   81000b5f <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 c9 08 00 00       	call   81000b9f <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 14             	sub    $0x14,%esp
  optind = 0;
810002e7:	c7 05 d8 8a 00 81 00 	movl   $0x0,0x81008ad8
810002ee:	00 00 00 
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "l:h")) != -1) {
810002f1:	e9 8a 00 00 00       	jmp    81000380 <do_less+0xa0>
    switch (ch) {
810002f6:	83 7d f4 6c          	cmpl   $0x6c,-0xc(%ebp)
810002fa:	0f 84 80 00 00 00    	je     81000380 <do_less+0xa0>
81000300:	83 7d f4 6c          	cmpl   $0x6c,-0xc(%ebp)
81000304:	7f 79                	jg     8100037f <do_less+0x9f>
81000306:	83 7d f4 3f          	cmpl   $0x3f,-0xc(%ebp)
8100030a:	74 40                	je     8100034c <do_less+0x6c>
8100030c:	83 7d f4 68          	cmpl   $0x68,-0xc(%ebp)
81000310:	75 6d                	jne    8100037f <do_less+0x9f>
      case 'h':
        puts("help:");
81000312:	83 ec 0c             	sub    $0xc,%esp
81000315:	68 00 74 00 81       	push   $0x81007400
8100031a:	e8 ff 4e 00 00       	call   8100521e <puts>
8100031f:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000322:	83 ec 0c             	sub    $0xc,%esp
81000325:	68 cb 74 00 81       	push   $0x810074cb
8100032a:	e8 ef 4e 00 00       	call   8100521e <puts>
8100032f:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000332:	83 ec 0c             	sub    $0xc,%esp
81000335:	68 de 74 00 81       	push   $0x810074de
8100033a:	e8 df 4e 00 00       	call   8100521e <puts>
8100033f:	83 c4 10             	add    $0x10,%esp
        return 0;
81000342:	b8 00 00 00 00       	mov    $0x0,%eax
81000347:	e9 51 01 00 00       	jmp    8100049d <do_less+0x1bd>
      case 'l':
        break;
      case '?':  // 找到未指定选项
        if (optarg) {
8100034c:	a1 d4 8a 00 81       	mov    0x81008ad4,%eax
81000351:	85 c0                	test   %eax,%eax
81000353:	74 20                	je     81000375 <do_less+0x95>
          fprintf(stderr,
81000355:	8b 1d d4 8a 00 81    	mov    0x81008ad4,%ebx
8100035b:	e8 1d 33 00 00       	call   8100367d <__getreent>
81000360:	8b 40 0c             	mov    0xc(%eax),%eax
81000363:	83 ec 04             	sub    $0x4,%esp
81000366:	53                   	push   %ebx
81000367:	68 38 74 00 81       	push   $0x81007438
8100036c:	50                   	push   %eax
8100036d:	e8 51 13 00 00       	call   810016c3 <fiprintf>
81000372:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000375:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100037a:	e9 1e 01 00 00       	jmp    8100049d <do_less+0x1bd>
      default:
        break;
8100037f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "l:h")) != -1) {
81000380:	83 ec 04             	sub    $0x4,%esp
81000383:	68 f5 74 00 81       	push   $0x810074f5
81000388:	ff 75 0c             	push   0xc(%ebp)
8100038b:	ff 75 08             	push   0x8(%ebp)
8100038e:	e8 9e 31 00 00       	call   81003531 <getopt>
81000393:	83 c4 10             	add    $0x10,%esp
81000396:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000399:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100039d:	0f 85 53 ff ff ff    	jne    810002f6 <do_less+0x16>
    }
  }

  if (optind >
810003a3:	a1 d8 8a 00 81       	mov    0x81008ad8,%eax
810003a8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003ab:	7f 24                	jg     810003d1 <do_less+0xf1>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003ad:	e8 cb 32 00 00       	call   8100367d <__getreent>
810003b2:	8b 40 0c             	mov    0xc(%eax),%eax
810003b5:	50                   	push   %eax
810003b6:	6a 18                	push   $0x18
810003b8:	6a 01                	push   $0x1
810003ba:	68 f9 74 00 81       	push   $0x810074f9
810003bf:	e8 a6 24 00 00       	call   8100286a <fwrite>
810003c4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003c7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003cc:	e9 cc 00 00 00       	jmp    8100049d <do_less+0x1bd>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003d1:	a1 d8 8a 00 81       	mov    0x81008ad8,%eax
810003d6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810003e0:	01 d0                	add    %edx,%eax
810003e2:	8b 00                	mov    (%eax),%eax
810003e4:	83 ec 08             	sub    $0x8,%esp
810003e7:	68 12 75 00 81       	push   $0x81007512
810003ec:	50                   	push   %eax
810003ed:	e8 89 12 00 00       	call   8100167b <fopen>
810003f2:	83 c4 10             	add    $0x10,%esp
810003f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (file == NULL) {
810003f8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810003fc:	75 34                	jne    81000432 <do_less+0x152>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
810003fe:	a1 d8 8a 00 81       	mov    0x81008ad8,%eax
81000403:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100040a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100040d:	01 d0                	add    %edx,%eax
8100040f:	8b 18                	mov    (%eax),%ebx
81000411:	e8 67 32 00 00       	call   8100367d <__getreent>
81000416:	8b 40 0c             	mov    0xc(%eax),%eax
81000419:	83 ec 04             	sub    $0x4,%esp
8100041c:	53                   	push   %ebx
8100041d:	68 14 75 00 81       	push   $0x81007514
81000422:	50                   	push   %eax
81000423:	e8 9b 12 00 00       	call   810016c3 <fiprintf>
81000428:	83 c4 10             	add    $0x10,%esp
    return -1;
8100042b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000430:	eb 6b                	jmp    8100049d <do_less+0x1bd>
  }
  

  //读取文件
  int buf_len = 255;
81000432:	c7 45 ec ff 00 00 00 	movl   $0xff,-0x14(%ebp)
  char *buf = (char *)malloc(buf_len);
81000439:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100043c:	83 ec 0c             	sub    $0xc,%esp
8100043f:	50                   	push   %eax
81000440:	e8 c2 33 00 00       	call   81003807 <malloc>
81000445:	83 c4 10             	add    $0x10,%esp
81000448:	89 45 e8             	mov    %eax,-0x18(%ebp)
  while (fgets(buf, buf_len, file) != NULL) {
8100044b:	eb 17                	jmp    81000464 <do_less+0x184>
    fputs(buf, stdout);
8100044d:	e8 2b 32 00 00       	call   8100367d <__getreent>
81000452:	8b 40 08             	mov    0x8(%eax),%eax
81000455:	83 ec 08             	sub    $0x8,%esp
81000458:	50                   	push   %eax
81000459:	ff 75 e8             	push   -0x18(%ebp)
8100045c:	e8 34 13 00 00       	call   81001795 <fputs>
81000461:	83 c4 10             	add    $0x10,%esp
  while (fgets(buf, buf_len, file) != NULL) {
81000464:	83 ec 04             	sub    $0x4,%esp
81000467:	ff 75 f0             	push   -0x10(%ebp)
8100046a:	ff 75 ec             	push   -0x14(%ebp)
8100046d:	ff 75 e8             	push   -0x18(%ebp)
81000470:	e8 10 0d 00 00       	call   81001185 <fgets>
81000475:	83 c4 10             	add    $0x10,%esp
81000478:	85 c0                	test   %eax,%eax
8100047a:	75 d1                	jne    8100044d <do_less+0x16d>
  }

  free(buf);
8100047c:	83 ec 0c             	sub    $0xc,%esp
8100047f:	ff 75 e8             	push   -0x18(%ebp)
81000482:	e8 9c 33 00 00       	call   81003823 <free>
81000487:	83 c4 10             	add    $0x10,%esp
  fclose(file);
8100048a:	83 ec 0c             	sub    $0xc,%esp
8100048d:	ff 75 f0             	push   -0x10(%ebp)
81000490:	e8 be 08 00 00       	call   81000d53 <fclose>
81000495:	83 c4 10             	add    $0x10,%esp
  return 0;
81000498:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100049d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810004a0:	c9                   	leave  
810004a1:	c3                   	ret    

810004a2 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810004a2:	55                   	push   %ebp
810004a3:	89 e5                	mov    %esp,%ebp
810004a5:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810004a8:	a1 c0 7a 00 81       	mov    0x81007ac0,%eax
810004ad:	a3 c8 8a 00 81       	mov    %eax,0x81008ac8
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810004b2:	83 ec 04             	sub    $0x4,%esp
810004b5:	68 00 04 00 00       	push   $0x400
810004ba:	6a 00                	push   $0x0
810004bc:	68 c0 86 00 81       	push   $0x810086c0
810004c1:	e8 f7 3f 00 00       	call   810044bd <memset>
810004c6:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
810004c9:	c7 05 c0 8a 00 81 00 	movl   $0x81007600,0x81008ac0
810004d0:	76 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
810004d3:	b8 48 76 00 81       	mov    $0x81007648,%eax
810004d8:	a3 c4 8a 00 81       	mov    %eax,0x81008ac4
}
810004dd:	90                   	nop
810004de:	c9                   	leave  
810004df:	c3                   	ret    

810004e0 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
810004e0:	55                   	push   %ebp
810004e1:	89 e5                	mov    %esp,%ebp
810004e3:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
810004e6:	a1 c8 8a 00 81       	mov    0x81008ac8,%eax
810004eb:	83 ec 08             	sub    $0x8,%esp
810004ee:	50                   	push   %eax
810004ef:	68 f6 73 00 81       	push   $0x810073f6
810004f4:	e8 1a 4c 00 00       	call   81005113 <iprintf>
810004f9:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810004fc:	e8 7c 31 00 00       	call   8100367d <__getreent>
81000501:	8b 40 08             	mov    0x8(%eax),%eax
81000504:	83 ec 0c             	sub    $0xc,%esp
81000507:	50                   	push   %eax
81000508:	e8 e1 0a 00 00       	call   81000fee <fflush>
8100050d:	83 c4 10             	add    $0x10,%esp
}
81000510:	90                   	nop
81000511:	c9                   	leave  
81000512:	c3                   	ret    

81000513 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
81000513:	55                   	push   %ebp
81000514:	89 e5                	mov    %esp,%ebp
81000516:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000519:	a1 c0 8a 00 81       	mov    0x81008ac0,%eax
8100051e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000521:	eb 22                	jmp    81000545 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
81000523:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000526:	8b 00                	mov    (%eax),%eax
81000528:	83 ec 08             	sub    $0x8,%esp
8100052b:	ff 75 08             	push   0x8(%ebp)
8100052e:	50                   	push   %eax
8100052f:	e8 08 5c 00 00       	call   8100613c <strcmp>
81000534:	83 c4 10             	add    $0x10,%esp
81000537:	85 c0                	test   %eax,%eax
81000539:	75 05                	jne    81000540 <find_builtin+0x2d>
      continue;
    }
    return cmd;
8100053b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100053e:	eb 14                	jmp    81000554 <find_builtin+0x41>
      continue;
81000540:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000541:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000545:	a1 c4 8a 00 81       	mov    0x81008ac4,%eax
8100054a:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100054d:	72 d4                	jb     81000523 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
8100054f:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000554:	c9                   	leave  
81000555:	c3                   	ret    

81000556 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000556:	55                   	push   %ebp
81000557:	89 e5                	mov    %esp,%ebp
81000559:	53                   	push   %ebx
8100055a:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100055d:	8b 45 08             	mov    0x8(%ebp),%eax
81000560:	8b 40 08             	mov    0x8(%eax),%eax
81000563:	83 ec 08             	sub    $0x8,%esp
81000566:	ff 75 10             	push   0x10(%ebp)
81000569:	ff 75 0c             	push   0xc(%ebp)
8100056c:	ff d0                	call   *%eax
8100056e:	83 c4 10             	add    $0x10,%esp
81000571:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
81000574:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000578:	79 1f                	jns    81000599 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
8100057a:	8b 45 08             	mov    0x8(%ebp),%eax
8100057d:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
8100057f:	e8 f9 30 00 00       	call   8100367d <__getreent>
81000584:	8b 40 0c             	mov    0xc(%eax),%eax
81000587:	ff 75 f4             	push   -0xc(%ebp)
8100058a:	53                   	push   %ebx
8100058b:	68 48 76 00 81       	push   $0x81007648
81000590:	50                   	push   %eax
81000591:	e8 2d 11 00 00       	call   810016c3 <fiprintf>
81000596:	83 c4 10             	add    $0x10,%esp
  }
}
81000599:	90                   	nop
8100059a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100059d:	c9                   	leave  
8100059e:	c3                   	ret    

8100059f <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
8100059f:	55                   	push   %ebp
810005a0:	89 e5                	mov    %esp,%ebp
810005a2:	53                   	push   %ebx
810005a3:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
810005a6:	e8 4d 03 00 00       	call   810008f8 <fork>
810005ab:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
810005ae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005b2:	79 21                	jns    810005d5 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
810005b4:	e8 c4 30 00 00       	call   8100367d <__getreent>
810005b9:	8b 40 0c             	mov    0xc(%eax),%eax
810005bc:	83 ec 04             	sub    $0x4,%esp
810005bf:	ff 75 08             	push   0x8(%ebp)
810005c2:	68 60 76 00 81       	push   $0x81007660
810005c7:	50                   	push   %eax
810005c8:	e8 f6 10 00 00       	call   810016c3 <fiprintf>
810005cd:	83 c4 10             	add    $0x10,%esp
    // 3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
            cpid);
  }
}
810005d0:	e9 82 00 00 00       	jmp    81000657 <run_exec_file+0xb8>
  } else if (pid == 0) {
810005d5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005d9:	75 44                	jne    8100061f <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
810005db:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810005e2:	eb 29                	jmp    8100060d <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
810005e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005e7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810005ee:	8b 45 10             	mov    0x10(%ebp),%eax
810005f1:	01 d0                	add    %edx,%eax
810005f3:	8b 00                	mov    (%eax),%eax
810005f5:	83 ec 04             	sub    $0x4,%esp
810005f8:	50                   	push   %eax
810005f9:	ff 75 f4             	push   -0xc(%ebp)
810005fc:	68 7a 76 00 81       	push   $0x8100767a
81000601:	e8 0d 4b 00 00       	call   81005113 <iprintf>
81000606:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000609:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100060d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000610:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000613:	7c cf                	jl     810005e4 <run_exec_file+0x45>
    exit(-1);
81000615:	83 ec 0c             	sub    $0xc,%esp
81000618:	6a ff                	push   $0xffffffff
8100061a:	e8 e9 05 00 00       	call   81000c08 <exit>
    int cpid = wait(&status);
8100061f:	83 ec 0c             	sub    $0xc,%esp
81000622:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000625:	50                   	push   %eax
81000626:	e8 ab 04 00 00       	call   81000ad6 <wait>
8100062b:	83 c4 10             	add    $0x10,%esp
8100062e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
81000631:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000634:	e8 44 30 00 00       	call   8100367d <__getreent>
81000639:	8b 40 0c             	mov    0xc(%eax),%eax
8100063c:	83 ec 08             	sub    $0x8,%esp
8100063f:	ff 75 ec             	push   -0x14(%ebp)
81000642:	ff 75 f0             	push   -0x10(%ebp)
81000645:	53                   	push   %ebx
81000646:	ff 75 08             	push   0x8(%ebp)
81000649:	68 88 76 00 81       	push   $0x81007688
8100064e:	50                   	push   %eax
8100064f:	e8 6f 10 00 00       	call   810016c3 <fiprintf>
81000654:	83 c4 20             	add    $0x20,%esp
}
81000657:	90                   	nop
81000658:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100065b:	c9                   	leave  
8100065c:	c3                   	ret    

8100065d <main>:

int main(int argc, char **argv) {
8100065d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000661:	83 e4 f0             	and    $0xfffffff0,%esp
81000664:	ff 71 fc             	push   -0x4(%ecx)
81000667:	55                   	push   %ebp
81000668:	89 e5                	mov    %esp,%ebp
8100066a:	51                   	push   %ecx
8100066b:	83 ec 44             	sub    $0x44,%esp
8100066e:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
81000670:	8b 40 04             	mov    0x4(%eax),%eax
81000673:	8b 00                	mov    (%eax),%eax
81000675:	83 ec 08             	sub    $0x8,%esp
81000678:	6a 02                	push   $0x2
8100067a:	50                   	push   %eax
8100067b:	e8 db 02 00 00       	call   8100095b <open>
81000680:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
81000683:	83 ec 0c             	sub    $0xc,%esp
81000686:	6a 00                	push   $0x0
81000688:	e8 06 04 00 00       	call   81000a93 <dup>
8100068d:	83 c4 10             	add    $0x10,%esp
  dup(0);
81000690:	83 ec 0c             	sub    $0xc,%esp
81000693:	6a 00                	push   $0x0
81000695:	e8 f9 03 00 00       	call   81000a93 <dup>
8100069a:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
8100069d:	e8 00 fe ff ff       	call   810004a2 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
810006a2:	e8 39 fe ff ff       	call   810004e0 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810006a7:	e8 d1 2f 00 00       	call   8100367d <__getreent>
810006ac:	8b 40 04             	mov    0x4(%eax),%eax
810006af:	83 ec 04             	sub    $0x4,%esp
810006b2:	50                   	push   %eax
810006b3:	68 00 04 00 00       	push   $0x400
810006b8:	68 c0 86 00 81       	push   $0x810086c0
810006bd:	e8 c3 0a 00 00       	call   81001185 <fgets>
810006c2:	83 c4 10             	add    $0x10,%esp
810006c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
810006c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810006cc:	0f 84 13 01 00 00    	je     810007e5 <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
810006d2:	83 ec 08             	sub    $0x8,%esp
810006d5:	6a 0a                	push   $0xa
810006d7:	68 c0 86 00 81       	push   $0x810086c0
810006dc:	e8 5f 59 00 00       	call   81006040 <strchr>
810006e1:	83 c4 10             	add    $0x10,%esp
810006e4:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810006e7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810006eb:	74 06                	je     810006f3 <main+0x96>
      *cr = '\0';
810006ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
810006f0:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
810006f3:	83 ec 08             	sub    $0x8,%esp
810006f6:	6a 0d                	push   $0xd
810006f8:	68 c0 86 00 81       	push   $0x810086c0
810006fd:	e8 3e 59 00 00       	call   81006040 <strchr>
81000702:	83 c4 10             	add    $0x10,%esp
81000705:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000708:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100070c:	74 06                	je     81000714 <main+0xb7>
      *cr = '\0';
8100070e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000711:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
81000714:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
8100071b:	83 ec 04             	sub    $0x4,%esp
8100071e:	6a 28                	push   $0x28
81000720:	6a 00                	push   $0x0
81000722:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000725:	50                   	push   %eax
81000726:	e8 92 3d 00 00       	call   810044bd <memset>
8100072b:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
8100072e:	c7 45 e4 ac 76 00 81 	movl   $0x810076ac,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
81000735:	83 ec 08             	sub    $0x8,%esp
81000738:	ff 75 e4             	push   -0x1c(%ebp)
8100073b:	68 c0 86 00 81       	push   $0x810086c0
81000740:	e8 24 5b 00 00       	call   81006269 <strtok>
81000745:	83 c4 10             	add    $0x10,%esp
81000748:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
8100074b:	eb 23                	jmp    81000770 <main+0x113>
      argv[argc++] = token;
8100074d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000750:	8d 50 01             	lea    0x1(%eax),%edx
81000753:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000756:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000759:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
8100075d:	83 ec 08             	sub    $0x8,%esp
81000760:	ff 75 e4             	push   -0x1c(%ebp)
81000763:	6a 00                	push   $0x0
81000765:	e8 ff 5a 00 00       	call   81006269 <strtok>
8100076a:	83 c4 10             	add    $0x10,%esp
8100076d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000770:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000774:	75 d7                	jne    8100074d <main+0xf0>
    }

    if (argc == 0) {
81000776:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100077a:	74 6f                	je     810007eb <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
8100077c:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100077f:	83 ec 0c             	sub    $0xc,%esp
81000782:	50                   	push   %eax
81000783:	e8 8b fd ff ff       	call   81000513 <find_builtin>
81000788:	83 c4 10             	add    $0x10,%esp
8100078b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
8100078e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000792:	74 17                	je     810007ab <main+0x14e>
      run_builtin(cmd, argc, argv);
81000794:	83 ec 04             	sub    $0x4,%esp
81000797:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100079a:	50                   	push   %eax
8100079b:	ff 75 f4             	push   -0xc(%ebp)
8100079e:	ff 75 e0             	push   -0x20(%ebp)
810007a1:	e8 b0 fd ff ff       	call   81000556 <run_builtin>
810007a6:	83 c4 10             	add    $0x10,%esp
      continue;
810007a9:	eb 41                	jmp    810007ec <main+0x18f>
    }

    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
810007ab:	83 ec 04             	sub    $0x4,%esp
810007ae:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007b1:	50                   	push   %eax
810007b2:	ff 75 f4             	push   -0xc(%ebp)
810007b5:	68 ae 76 00 81       	push   $0x810076ae
810007ba:	e8 e0 fd ff ff       	call   8100059f <run_exec_file>
810007bf:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
810007c2:	e8 b6 2e 00 00       	call   8100367d <__getreent>
810007c7:	8b 40 0c             	mov    0xc(%eax),%eax
810007ca:	83 ec 04             	sub    $0x4,%esp
810007cd:	68 c0 86 00 81       	push   $0x810086c0
810007d2:	68 b0 76 00 81       	push   $0x810076b0
810007d7:	50                   	push   %eax
810007d8:	e8 e6 0e 00 00       	call   810016c3 <fiprintf>
810007dd:	83 c4 10             	add    $0x10,%esp
810007e0:	e9 bd fe ff ff       	jmp    810006a2 <main+0x45>
      continue;
810007e5:	90                   	nop
810007e6:	e9 b7 fe ff ff       	jmp    810006a2 <main+0x45>
      continue;
810007eb:	90                   	nop
  for (;;) {
810007ec:	e9 b1 fe ff ff       	jmp    810006a2 <main+0x45>

810007f1 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
810007f1:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
810007f4:	8e d8                	mov    %eax,%ds
	mov %ax, %es
810007f6:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810007f8:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810007fa:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810007fc:	e9 00 00 00 00       	jmp    81000801 <cstart>

81000801 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000801:	55                   	push   %ebp
81000802:	89 e5                	mov    %esp,%ebp
81000804:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000807:	c7 45 f4 c0 84 00 81 	movl   $0x810084c0,-0xc(%ebp)
    while (start < __bss_end__) {
8100080e:	eb 0c                	jmp    8100081c <cstart+0x1b>
        *(start++) = 0;
81000810:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000813:	8d 50 01             	lea    0x1(%eax),%edx
81000816:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000819:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8100081c:	81 7d f4 60 8b 00 81 	cmpl   $0x81008b60,-0xc(%ebp)
81000823:	72 eb                	jb     81000810 <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000825:	83 ec 08             	sub    $0x8,%esp
81000828:	ff 75 0c             	push   0xc(%ebp)
8100082b:	ff 75 08             	push   0x8(%ebp)
8100082e:	e8 2a fe ff ff       	call   8100065d <main>
81000833:	83 c4 10             	add    $0x10,%esp
81000836:	83 ec 0c             	sub    $0xc,%esp
81000839:	50                   	push   %eax
8100083a:	e8 c9 03 00 00       	call   81000c08 <exit>

8100083f <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8100083f:	55                   	push   %ebp
81000840:	89 e5                	mov    %esp,%ebp
81000842:	57                   	push   %edi
81000843:	56                   	push   %esi
81000844:	53                   	push   %ebx
81000845:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000848:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100084f:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000856:	8b 45 08             	mov    0x8(%ebp),%eax
81000859:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8100085c:	8b 55 08             	mov    0x8(%ebp),%edx
8100085f:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000862:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000865:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000868:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100086b:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
8100086e:	8b 75 08             	mov    0x8(%ebp),%esi
81000871:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000873:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000876:	50                   	push   %eax
81000877:	52                   	push   %edx
81000878:	51                   	push   %ecx
81000879:	53                   	push   %ebx
8100087a:	56                   	push   %esi
8100087b:	ff 1f                	lcall  *(%edi)
8100087d:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000880:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000883:	83 c4 10             	add    $0x10,%esp
81000886:	5b                   	pop    %ebx
81000887:	5e                   	pop    %esi
81000888:	5f                   	pop    %edi
81000889:	5d                   	pop    %ebp
8100088a:	c3                   	ret    

8100088b <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8100088b:	55                   	push   %ebp
8100088c:	89 e5                	mov    %esp,%ebp
8100088e:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000891:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000895:	7e 1b                	jle    810008b2 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000897:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
8100089e:	8b 45 08             	mov    0x8(%ebp),%eax
810008a1:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810008a4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008a7:	50                   	push   %eax
810008a8:	e8 92 ff ff ff       	call   8100083f <sys_call>
810008ad:	83 c4 04             	add    $0x4,%esp
810008b0:	eb 01                	jmp    810008b3 <msleep+0x28>
    if (ms <= 0) return;
810008b2:	90                   	nop

}
810008b3:	c9                   	leave  
810008b4:	c3                   	ret    

810008b5 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
810008b5:	55                   	push   %ebp
810008b6:	89 e5                	mov    %esp,%ebp
810008b8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
810008bb:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
810008c2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008c5:	50                   	push   %eax
810008c6:	e8 74 ff ff ff       	call   8100083f <sys_call>
810008cb:	83 c4 04             	add    $0x4,%esp
}
810008ce:	c9                   	leave  
810008cf:	c3                   	ret    

810008d0 <print_msg>:

void print_msg(const char *fmt, int arg) {
810008d0:	55                   	push   %ebp
810008d1:	89 e5                	mov    %esp,%ebp
810008d3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
810008d6:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
810008dd:	8b 45 08             	mov    0x8(%ebp),%eax
810008e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
810008e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810008e6:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
810008e9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008ec:	50                   	push   %eax
810008ed:	e8 4d ff ff ff       	call   8100083f <sys_call>
810008f2:	83 c4 04             	add    $0x4,%esp
}
810008f5:	90                   	nop
810008f6:	c9                   	leave  
810008f7:	c3                   	ret    

810008f8 <fork>:

int fork (void) {
810008f8:	55                   	push   %ebp
810008f9:	89 e5                	mov    %esp,%ebp
810008fb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810008fe:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000905:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000908:	50                   	push   %eax
81000909:	e8 31 ff ff ff       	call   8100083f <sys_call>
8100090e:	83 c4 04             	add    $0x4,%esp
}
81000911:	c9                   	leave  
81000912:	c3                   	ret    

81000913 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000913:	55                   	push   %ebp
81000914:	89 e5                	mov    %esp,%ebp
81000916:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000919:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000920:	8b 45 08             	mov    0x8(%ebp),%eax
81000923:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000926:	8b 45 0c             	mov    0xc(%ebp),%eax
81000929:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8100092c:	8b 45 10             	mov    0x10(%ebp),%eax
8100092f:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000932:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000935:	50                   	push   %eax
81000936:	e8 04 ff ff ff       	call   8100083f <sys_call>
8100093b:	83 c4 04             	add    $0x4,%esp
}
8100093e:	c9                   	leave  
8100093f:	c3                   	ret    

81000940 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000940:	55                   	push   %ebp
81000941:	89 e5                	mov    %esp,%ebp
81000943:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000946:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8100094d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000950:	50                   	push   %eax
81000951:	e8 e9 fe ff ff       	call   8100083f <sys_call>
81000956:	83 c4 04             	add    $0x4,%esp
}
81000959:	c9                   	leave  
8100095a:	c3                   	ret    

8100095b <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
8100095b:	55                   	push   %ebp
8100095c:	89 e5                	mov    %esp,%ebp
8100095e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000961:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000968:	8b 45 08             	mov    0x8(%ebp),%eax
8100096b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
8100096e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000971:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000974:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000977:	50                   	push   %eax
81000978:	e8 c2 fe ff ff       	call   8100083f <sys_call>
8100097d:	83 c4 04             	add    $0x4,%esp
}
81000980:	c9                   	leave  
81000981:	c3                   	ret    

81000982 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000982:	55                   	push   %ebp
81000983:	89 e5                	mov    %esp,%ebp
81000985:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000988:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8100098f:	8b 45 08             	mov    0x8(%ebp),%eax
81000992:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000995:	8b 45 0c             	mov    0xc(%ebp),%eax
81000998:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100099b:	8b 45 10             	mov    0x10(%ebp),%eax
8100099e:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810009a1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009a4:	50                   	push   %eax
810009a5:	e8 95 fe ff ff       	call   8100083f <sys_call>
810009aa:	83 c4 04             	add    $0x4,%esp
}
810009ad:	c9                   	leave  
810009ae:	c3                   	ret    

810009af <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810009af:	55                   	push   %ebp
810009b0:	89 e5                	mov    %esp,%ebp
810009b2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
810009b5:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
810009bc:	8b 45 08             	mov    0x8(%ebp),%eax
810009bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810009c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810009c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810009c8:	8b 45 10             	mov    0x10(%ebp),%eax
810009cb:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810009ce:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009d1:	50                   	push   %eax
810009d2:	e8 68 fe ff ff       	call   8100083f <sys_call>
810009d7:	83 c4 04             	add    $0x4,%esp
}
810009da:	c9                   	leave  
810009db:	c3                   	ret    

810009dc <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
810009dc:	55                   	push   %ebp
810009dd:	89 e5                	mov    %esp,%ebp
810009df:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
810009e2:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
810009e9:	8b 45 08             	mov    0x8(%ebp),%eax
810009ec:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810009ef:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009f2:	50                   	push   %eax
810009f3:	e8 47 fe ff ff       	call   8100083f <sys_call>
810009f8:	83 c4 04             	add    $0x4,%esp
}
810009fb:	c9                   	leave  
810009fc:	c3                   	ret    

810009fd <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810009fd:	55                   	push   %ebp
810009fe:	89 e5                	mov    %esp,%ebp
81000a00:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000a03:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000a0a:	8b 45 08             	mov    0x8(%ebp),%eax
81000a0d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000a10:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a13:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000a16:	8b 45 10             	mov    0x10(%ebp),%eax
81000a19:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a1c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a1f:	50                   	push   %eax
81000a20:	e8 1a fe ff ff       	call   8100083f <sys_call>
81000a25:	83 c4 04             	add    $0x4,%esp
}
81000a28:	c9                   	leave  
81000a29:	c3                   	ret    

81000a2a <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000a2a:	55                   	push   %ebp
81000a2b:	89 e5                	mov    %esp,%ebp
81000a2d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000a30:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000a37:	8b 45 08             	mov    0x8(%ebp),%eax
81000a3a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000a3d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a40:	50                   	push   %eax
81000a41:	e8 f9 fd ff ff       	call   8100083f <sys_call>
81000a46:	83 c4 04             	add    $0x4,%esp
}
81000a49:	c9                   	leave  
81000a4a:	c3                   	ret    

81000a4b <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000a4b:	55                   	push   %ebp
81000a4c:	89 e5                	mov    %esp,%ebp
81000a4e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000a51:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000a58:	8b 45 08             	mov    0x8(%ebp),%eax
81000a5b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000a5e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a61:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000a64:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a67:	50                   	push   %eax
81000a68:	e8 d2 fd ff ff       	call   8100083f <sys_call>
81000a6d:	83 c4 04             	add    $0x4,%esp
}
81000a70:	c9                   	leave  
81000a71:	c3                   	ret    

81000a72 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000a72:	55                   	push   %ebp
81000a73:	89 e5                	mov    %esp,%ebp
81000a75:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000a78:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
81000a7f:	8b 45 08             	mov    0x8(%ebp),%eax
81000a82:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000a85:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a88:	50                   	push   %eax
81000a89:	e8 b1 fd ff ff       	call   8100083f <sys_call>
81000a8e:	83 c4 04             	add    $0x4,%esp
}
81000a91:	c9                   	leave  
81000a92:	c3                   	ret    

81000a93 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000a93:	55                   	push   %ebp
81000a94:	89 e5                	mov    %esp,%ebp
81000a96:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000a99:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000aa0:	8b 45 08             	mov    0x8(%ebp),%eax
81000aa3:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000aa6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aa9:	50                   	push   %eax
81000aaa:	e8 90 fd ff ff       	call   8100083f <sys_call>
81000aaf:	83 c4 04             	add    $0x4,%esp
}
81000ab2:	c9                   	leave  
81000ab3:	c3                   	ret    

81000ab4 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000ab4:	55                   	push   %ebp
81000ab5:	89 e5                	mov    %esp,%ebp
81000ab7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000aba:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000ac1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ac4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000ac7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aca:	50                   	push   %eax
81000acb:	e8 6f fd ff ff       	call   8100083f <sys_call>
81000ad0:	83 c4 04             	add    $0x4,%esp
}
81000ad3:	90                   	nop
81000ad4:	c9                   	leave  
81000ad5:	c3                   	ret    

81000ad6 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000ad6:	55                   	push   %ebp
81000ad7:	89 e5                	mov    %esp,%ebp
81000ad9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000adc:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000ae3:	8b 45 08             	mov    0x8(%ebp),%eax
81000ae6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000ae9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aec:	50                   	push   %eax
81000aed:	e8 4d fd ff ff       	call   8100083f <sys_call>
81000af2:	83 c4 04             	add    $0x4,%esp
}
81000af5:	c9                   	leave  
81000af6:	c3                   	ret    

81000af7 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000af7:	55                   	push   %ebp
81000af8:	89 e5                	mov    %esp,%ebp
81000afa:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000afd:	83 ec 0c             	sub    $0xc,%esp
81000b00:	6a 20                	push   $0x20
81000b02:	e8 00 2d 00 00       	call   81003807 <malloc>
81000b07:	83 c4 10             	add    $0x10,%esp
81000b0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000b0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b11:	75 07                	jne    81000b1a <opendir+0x23>
        return (DIR*)0;
81000b13:	b8 00 00 00 00       	mov    $0x0,%eax
81000b18:	eb 43                	jmp    81000b5d <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000b1a:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000b21:	8b 45 08             	mov    0x8(%ebp),%eax
81000b24:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000b27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b2a:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000b2d:	83 ec 0c             	sub    $0xc,%esp
81000b30:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000b33:	50                   	push   %eax
81000b34:	e8 06 fd ff ff       	call   8100083f <sys_call>
81000b39:	83 c4 10             	add    $0x10,%esp
81000b3c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000b3f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000b43:	79 15                	jns    81000b5a <opendir+0x63>
        free(dir);
81000b45:	83 ec 0c             	sub    $0xc,%esp
81000b48:	ff 75 f4             	push   -0xc(%ebp)
81000b4b:	e8 d3 2c 00 00       	call   81003823 <free>
81000b50:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000b53:	b8 00 00 00 00       	mov    $0x0,%eax
81000b58:	eb 03                	jmp    81000b5d <opendir+0x66>
    }

    return dir;    
81000b5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000b5d:	c9                   	leave  
81000b5e:	c3                   	ret    

81000b5f <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000b5f:	55                   	push   %ebp
81000b60:	89 e5                	mov    %esp,%ebp
81000b62:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000b65:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000b6c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b6f:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000b72:	8b 45 08             	mov    0x8(%ebp),%eax
81000b75:	83 c0 04             	add    $0x4,%eax
81000b78:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000b7b:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000b7e:	50                   	push   %eax
81000b7f:	e8 bb fc ff ff       	call   8100083f <sys_call>
81000b84:	83 c4 04             	add    $0x4,%esp
81000b87:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000b8a:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000b8e:	79 07                	jns    81000b97 <readdir+0x38>
        return (struct dirent*)0;
81000b90:	b8 00 00 00 00       	mov    $0x0,%eax
81000b95:	eb 06                	jmp    81000b9d <readdir+0x3e>
    }

    return &dir->dirent;   
81000b97:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9a:	83 c0 04             	add    $0x4,%eax
}
81000b9d:	c9                   	leave  
81000b9e:	c3                   	ret    

81000b9f <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000b9f:	55                   	push   %ebp
81000ba0:	89 e5                	mov    %esp,%ebp
81000ba2:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000ba5:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000bac:	8b 45 08             	mov    0x8(%ebp),%eax
81000baf:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000bb2:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000bb5:	50                   	push   %eax
81000bb6:	e8 84 fc ff ff       	call   8100083f <sys_call>
81000bbb:	83 c4 04             	add    $0x4,%esp
81000bbe:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000bc1:	83 ec 0c             	sub    $0xc,%esp
81000bc4:	ff 75 08             	push   0x8(%ebp)
81000bc7:	e8 57 2c 00 00       	call   81003823 <free>
81000bcc:	83 c4 10             	add    $0x10,%esp

    return err;   
81000bcf:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000bd2:	c9                   	leave  
81000bd3:	c3                   	ret    

81000bd4 <atoi>:
81000bd4:	55                   	push   %ebp
81000bd5:	89 e5                	mov    %esp,%ebp
81000bd7:	83 ec 08             	sub    $0x8,%esp
81000bda:	83 ec 04             	sub    $0x4,%esp
81000bdd:	6a 0a                	push   $0xa
81000bdf:	6a 00                	push   $0x0
81000be1:	ff 75 08             	push   0x8(%ebp)
81000be4:	e8 bd 59 00 00       	call   810065a6 <strtol>
81000be9:	83 c4 10             	add    $0x10,%esp
81000bec:	c9                   	leave  
81000bed:	c3                   	ret    

81000bee <_atoi_r>:
81000bee:	55                   	push   %ebp
81000bef:	89 e5                	mov    %esp,%ebp
81000bf1:	83 ec 08             	sub    $0x8,%esp
81000bf4:	6a 0a                	push   $0xa
81000bf6:	6a 00                	push   $0x0
81000bf8:	ff 75 0c             	push   0xc(%ebp)
81000bfb:	ff 75 08             	push   0x8(%ebp)
81000bfe:	e8 59 59 00 00       	call   8100655c <_strtol_r>
81000c03:	83 c4 10             	add    $0x10,%esp
81000c06:	c9                   	leave  
81000c07:	c3                   	ret    

81000c08 <exit>:
81000c08:	55                   	push   %ebp
81000c09:	89 e5                	mov    %esp,%ebp
81000c0b:	83 ec 08             	sub    $0x8,%esp
81000c0e:	83 ec 08             	sub    $0x8,%esp
81000c11:	6a 00                	push   $0x0
81000c13:	ff 75 08             	push   0x8(%ebp)
81000c16:	e8 88 5c 00 00       	call   810068a3 <__call_exitprocs>
81000c1b:	83 c4 10             	add    $0x10,%esp
81000c1e:	a1 58 77 00 81       	mov    0x81007758,%eax
81000c23:	8b 40 3c             	mov    0x3c(%eax),%eax
81000c26:	85 c0                	test   %eax,%eax
81000c28:	74 17                	je     81000c41 <exit+0x39>
81000c2a:	a1 58 77 00 81       	mov    0x81007758,%eax
81000c2f:	8b 40 3c             	mov    0x3c(%eax),%eax
81000c32:	8b 15 58 77 00 81    	mov    0x81007758,%edx
81000c38:	83 ec 0c             	sub    $0xc,%esp
81000c3b:	52                   	push   %edx
81000c3c:	ff d0                	call   *%eax
81000c3e:	83 c4 10             	add    $0x10,%esp
81000c41:	83 ec 0c             	sub    $0xc,%esp
81000c44:	ff 75 08             	push   0x8(%ebp)
81000c47:	e8 68 fe ff ff       	call   81000ab4 <_exit>

81000c4c <_fclose_r>:
81000c4c:	55                   	push   %ebp
81000c4d:	89 e5                	mov    %esp,%ebp
81000c4f:	53                   	push   %ebx
81000c50:	83 ec 14             	sub    $0x14,%esp
81000c53:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000c56:	85 db                	test   %ebx,%ebx
81000c58:	75 0a                	jne    81000c64 <_fclose_r+0x18>
81000c5a:	b8 00 00 00 00       	mov    $0x0,%eax
81000c5f:	e9 ea 00 00 00       	jmp    81000d4e <_fclose_r+0x102>
81000c64:	8b 45 08             	mov    0x8(%ebp),%eax
81000c67:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000c6a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000c6e:	74 18                	je     81000c88 <_fclose_r+0x3c>
81000c70:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c73:	8b 40 38             	mov    0x38(%eax),%eax
81000c76:	85 c0                	test   %eax,%eax
81000c78:	75 0e                	jne    81000c88 <_fclose_r+0x3c>
81000c7a:	83 ec 0c             	sub    $0xc,%esp
81000c7d:	ff 75 f0             	push   -0x10(%ebp)
81000c80:	e8 14 08 00 00       	call   81001499 <__sinit>
81000c85:	83 c4 10             	add    $0x10,%esp
81000c88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c8c:	66 85 c0             	test   %ax,%ax
81000c8f:	75 0a                	jne    81000c9b <_fclose_r+0x4f>
81000c91:	b8 00 00 00 00       	mov    $0x0,%eax
81000c96:	e9 b3 00 00 00       	jmp    81000d4e <_fclose_r+0x102>
81000c9b:	83 ec 08             	sub    $0x8,%esp
81000c9e:	53                   	push   %ebx
81000c9f:	ff 75 08             	push   0x8(%ebp)
81000ca2:	e8 c9 00 00 00       	call   81000d70 <__sflush_r>
81000ca7:	83 c4 10             	add    $0x10,%esp
81000caa:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cad:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000cb0:	85 c0                	test   %eax,%eax
81000cb2:	74 1d                	je     81000cd1 <_fclose_r+0x85>
81000cb4:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000cb7:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000cba:	83 ec 08             	sub    $0x8,%esp
81000cbd:	52                   	push   %edx
81000cbe:	ff 75 08             	push   0x8(%ebp)
81000cc1:	ff d0                	call   *%eax
81000cc3:	83 c4 10             	add    $0x10,%esp
81000cc6:	85 c0                	test   %eax,%eax
81000cc8:	79 07                	jns    81000cd1 <_fclose_r+0x85>
81000cca:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000cd1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000cd5:	98                   	cwtl   
81000cd6:	25 80 00 00 00       	and    $0x80,%eax
81000cdb:	85 c0                	test   %eax,%eax
81000cdd:	74 12                	je     81000cf1 <_fclose_r+0xa5>
81000cdf:	8b 43 10             	mov    0x10(%ebx),%eax
81000ce2:	83 ec 08             	sub    $0x8,%esp
81000ce5:	50                   	push   %eax
81000ce6:	ff 75 08             	push   0x8(%ebp)
81000ce9:	e8 c6 0a 00 00       	call   810017b4 <_free_r>
81000cee:	83 c4 10             	add    $0x10,%esp
81000cf1:	8b 43 30             	mov    0x30(%ebx),%eax
81000cf4:	85 c0                	test   %eax,%eax
81000cf6:	74 23                	je     81000d1b <_fclose_r+0xcf>
81000cf8:	8b 53 30             	mov    0x30(%ebx),%edx
81000cfb:	8d 43 40             	lea    0x40(%ebx),%eax
81000cfe:	39 c2                	cmp    %eax,%edx
81000d00:	74 12                	je     81000d14 <_fclose_r+0xc8>
81000d02:	8b 43 30             	mov    0x30(%ebx),%eax
81000d05:	83 ec 08             	sub    $0x8,%esp
81000d08:	50                   	push   %eax
81000d09:	ff 75 08             	push   0x8(%ebp)
81000d0c:	e8 a3 0a 00 00       	call   810017b4 <_free_r>
81000d11:	83 c4 10             	add    $0x10,%esp
81000d14:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000d1b:	8b 43 44             	mov    0x44(%ebx),%eax
81000d1e:	85 c0                	test   %eax,%eax
81000d20:	74 19                	je     81000d3b <_fclose_r+0xef>
81000d22:	8b 43 44             	mov    0x44(%ebx),%eax
81000d25:	83 ec 08             	sub    $0x8,%esp
81000d28:	50                   	push   %eax
81000d29:	ff 75 08             	push   0x8(%ebp)
81000d2c:	e8 83 0a 00 00       	call   810017b4 <_free_r>
81000d31:	83 c4 10             	add    $0x10,%esp
81000d34:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000d3b:	e8 f2 07 00 00       	call   81001532 <__sfp_lock_acquire>
81000d40:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000d46:	e8 ed 07 00 00       	call   81001538 <__sfp_lock_release>
81000d4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d4e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000d51:	c9                   	leave  
81000d52:	c3                   	ret    

81000d53 <fclose>:
81000d53:	55                   	push   %ebp
81000d54:	89 e5                	mov    %esp,%ebp
81000d56:	83 ec 08             	sub    $0x8,%esp
81000d59:	8b 55 08             	mov    0x8(%ebp),%edx
81000d5c:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81000d61:	83 ec 08             	sub    $0x8,%esp
81000d64:	52                   	push   %edx
81000d65:	50                   	push   %eax
81000d66:	e8 e1 fe ff ff       	call   81000c4c <_fclose_r>
81000d6b:	83 c4 10             	add    $0x10,%esp
81000d6e:	c9                   	leave  
81000d6f:	c3                   	ret    

81000d70 <__sflush_r>:
81000d70:	55                   	push   %ebp
81000d71:	89 e5                	mov    %esp,%ebp
81000d73:	57                   	push   %edi
81000d74:	56                   	push   %esi
81000d75:	53                   	push   %ebx
81000d76:	83 ec 1c             	sub    $0x1c,%esp
81000d79:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000d7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d80:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000d84:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000d88:	83 e0 08             	and    $0x8,%eax
81000d8b:	85 c0                	test   %eax,%eax
81000d8d:	0f 85 93 01 00 00    	jne    81000f26 <__sflush_r+0x1b6>
81000d93:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d97:	80 cc 08             	or     $0x8,%ah
81000d9a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000d9e:	8b 43 04             	mov    0x4(%ebx),%eax
81000da1:	85 c0                	test   %eax,%eax
81000da3:	7f 0b                	jg     81000db0 <__sflush_r+0x40>
81000da5:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000da8:	85 c0                	test   %eax,%eax
81000daa:	0f 8e 6f 01 00 00    	jle    81000f1f <__sflush_r+0x1af>
81000db0:	8b 43 28             	mov    0x28(%ebx),%eax
81000db3:	85 c0                	test   %eax,%eax
81000db5:	0f 84 64 01 00 00    	je     81000f1f <__sflush_r+0x1af>
81000dbb:	8b 45 08             	mov    0x8(%ebp),%eax
81000dbe:	8b 00                	mov    (%eax),%eax
81000dc0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000dc3:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000dcc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000dd0:	98                   	cwtl   
81000dd1:	25 00 10 00 00       	and    $0x1000,%eax
81000dd6:	85 c0                	test   %eax,%eax
81000dd8:	74 08                	je     81000de2 <__sflush_r+0x72>
81000dda:	8b 43 50             	mov    0x50(%ebx),%eax
81000ddd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000de0:	eb 64                	jmp    81000e46 <__sflush_r+0xd6>
81000de2:	8b 43 28             	mov    0x28(%ebx),%eax
81000de5:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000de8:	6a 01                	push   $0x1
81000dea:	6a 00                	push   $0x0
81000dec:	52                   	push   %edx
81000ded:	ff 75 08             	push   0x8(%ebp)
81000df0:	ff d0                	call   *%eax
81000df2:	83 c4 10             	add    $0x10,%esp
81000df5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000df8:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000dfc:	75 48                	jne    81000e46 <__sflush_r+0xd6>
81000dfe:	8b 45 08             	mov    0x8(%ebp),%eax
81000e01:	8b 00                	mov    (%eax),%eax
81000e03:	85 c0                	test   %eax,%eax
81000e05:	74 3f                	je     81000e46 <__sflush_r+0xd6>
81000e07:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000e0e:	8b 45 08             	mov    0x8(%ebp),%eax
81000e11:	8b 00                	mov    (%eax),%eax
81000e13:	83 f8 1d             	cmp    $0x1d,%eax
81000e16:	74 0a                	je     81000e22 <__sflush_r+0xb2>
81000e18:	8b 45 08             	mov    0x8(%ebp),%eax
81000e1b:	8b 00                	mov    (%eax),%eax
81000e1d:	83 f8 16             	cmp    $0x16,%eax
81000e20:	75 11                	jne    81000e33 <__sflush_r+0xc3>
81000e22:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000e29:	8b 45 08             	mov    0x8(%ebp),%eax
81000e2c:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000e2f:	89 10                	mov    %edx,(%eax)
81000e31:	eb 0b                	jmp    81000e3e <__sflush_r+0xce>
81000e33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e37:	83 c8 40             	or     $0x40,%eax
81000e3a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e3e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e41:	e9 48 01 00 00       	jmp    81000f8e <__sflush_r+0x21e>
81000e46:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e4a:	98                   	cwtl   
81000e4b:	83 e0 04             	and    $0x4,%eax
81000e4e:	85 c0                	test   %eax,%eax
81000e50:	74 13                	je     81000e65 <__sflush_r+0xf5>
81000e52:	8b 43 04             	mov    0x4(%ebx),%eax
81000e55:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000e58:	8b 43 30             	mov    0x30(%ebx),%eax
81000e5b:	85 c0                	test   %eax,%eax
81000e5d:	74 06                	je     81000e65 <__sflush_r+0xf5>
81000e5f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000e62:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000e65:	8b 43 28             	mov    0x28(%ebx),%eax
81000e68:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000e6b:	6a 00                	push   $0x0
81000e6d:	ff 75 e4             	push   -0x1c(%ebp)
81000e70:	52                   	push   %edx
81000e71:	ff 75 08             	push   0x8(%ebp)
81000e74:	ff d0                	call   *%eax
81000e76:	83 c4 10             	add    $0x10,%esp
81000e79:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000e7c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000e80:	75 1d                	jne    81000e9f <__sflush_r+0x12f>
81000e82:	8b 45 08             	mov    0x8(%ebp),%eax
81000e85:	8b 00                	mov    (%eax),%eax
81000e87:	85 c0                	test   %eax,%eax
81000e89:	74 14                	je     81000e9f <__sflush_r+0x12f>
81000e8b:	8b 45 08             	mov    0x8(%ebp),%eax
81000e8e:	8b 00                	mov    (%eax),%eax
81000e90:	83 f8 1d             	cmp    $0x1d,%eax
81000e93:	74 0a                	je     81000e9f <__sflush_r+0x12f>
81000e95:	8b 45 08             	mov    0x8(%ebp),%eax
81000e98:	8b 00                	mov    (%eax),%eax
81000e9a:	83 f8 16             	cmp    $0x16,%eax
81000e9d:	75 6e                	jne    81000f0d <__sflush_r+0x19d>
81000e9f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ea3:	80 e4 f7             	and    $0xf7,%ah
81000ea6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000eaa:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000eb1:	8b 43 10             	mov    0x10(%ebx),%eax
81000eb4:	89 03                	mov    %eax,(%ebx)
81000eb6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eba:	98                   	cwtl   
81000ebb:	25 00 10 00 00       	and    $0x1000,%eax
81000ec0:	85 c0                	test   %eax,%eax
81000ec2:	74 15                	je     81000ed9 <__sflush_r+0x169>
81000ec4:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000ec8:	75 09                	jne    81000ed3 <__sflush_r+0x163>
81000eca:	8b 45 08             	mov    0x8(%ebp),%eax
81000ecd:	8b 00                	mov    (%eax),%eax
81000ecf:	85 c0                	test   %eax,%eax
81000ed1:	75 06                	jne    81000ed9 <__sflush_r+0x169>
81000ed3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ed6:	89 43 50             	mov    %eax,0x50(%ebx)
81000ed9:	8b 45 08             	mov    0x8(%ebp),%eax
81000edc:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000edf:	89 10                	mov    %edx,(%eax)
81000ee1:	8b 43 30             	mov    0x30(%ebx),%eax
81000ee4:	85 c0                	test   %eax,%eax
81000ee6:	74 37                	je     81000f1f <__sflush_r+0x1af>
81000ee8:	8b 53 30             	mov    0x30(%ebx),%edx
81000eeb:	8d 43 40             	lea    0x40(%ebx),%eax
81000eee:	39 c2                	cmp    %eax,%edx
81000ef0:	74 12                	je     81000f04 <__sflush_r+0x194>
81000ef2:	8b 43 30             	mov    0x30(%ebx),%eax
81000ef5:	83 ec 08             	sub    $0x8,%esp
81000ef8:	50                   	push   %eax
81000ef9:	ff 75 08             	push   0x8(%ebp)
81000efc:	e8 b3 08 00 00       	call   810017b4 <_free_r>
81000f01:	83 c4 10             	add    $0x10,%esp
81000f04:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000f0b:	eb 12                	jmp    81000f1f <__sflush_r+0x1af>
81000f0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f11:	83 c8 40             	or     $0x40,%eax
81000f14:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000f1d:	eb 6f                	jmp    81000f8e <__sflush_r+0x21e>
81000f1f:	b8 00 00 00 00       	mov    $0x0,%eax
81000f24:	eb 68                	jmp    81000f8e <__sflush_r+0x21e>
81000f26:	8b 73 10             	mov    0x10(%ebx),%esi
81000f29:	85 f6                	test   %esi,%esi
81000f2b:	75 07                	jne    81000f34 <__sflush_r+0x1c4>
81000f2d:	b8 00 00 00 00       	mov    $0x0,%eax
81000f32:	eb 5a                	jmp    81000f8e <__sflush_r+0x21e>
81000f34:	8b 03                	mov    (%ebx),%eax
81000f36:	29 f0                	sub    %esi,%eax
81000f38:	89 c7                	mov    %eax,%edi
81000f3a:	89 33                	mov    %esi,(%ebx)
81000f3c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000f40:	83 e0 03             	and    $0x3,%eax
81000f43:	85 c0                	test   %eax,%eax
81000f45:	75 05                	jne    81000f4c <__sflush_r+0x1dc>
81000f47:	8b 43 14             	mov    0x14(%ebx),%eax
81000f4a:	eb 05                	jmp    81000f51 <__sflush_r+0x1e1>
81000f4c:	b8 00 00 00 00       	mov    $0x0,%eax
81000f51:	89 43 08             	mov    %eax,0x8(%ebx)
81000f54:	eb 2f                	jmp    81000f85 <__sflush_r+0x215>
81000f56:	8b 43 24             	mov    0x24(%ebx),%eax
81000f59:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f5c:	57                   	push   %edi
81000f5d:	56                   	push   %esi
81000f5e:	52                   	push   %edx
81000f5f:	ff 75 08             	push   0x8(%ebp)
81000f62:	ff d0                	call   *%eax
81000f64:	83 c4 10             	add    $0x10,%esp
81000f67:	85 c0                	test   %eax,%eax
81000f69:	7f 12                	jg     81000f7d <__sflush_r+0x20d>
81000f6b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f6f:	83 c8 40             	or     $0x40,%eax
81000f72:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000f7b:	eb 11                	jmp    81000f8e <__sflush_r+0x21e>
81000f7d:	89 c1                	mov    %eax,%ecx
81000f7f:	89 c8                	mov    %ecx,%eax
81000f81:	01 c6                	add    %eax,%esi
81000f83:	29 cf                	sub    %ecx,%edi
81000f85:	85 ff                	test   %edi,%edi
81000f87:	7f cd                	jg     81000f56 <__sflush_r+0x1e6>
81000f89:	b8 00 00 00 00       	mov    $0x0,%eax
81000f8e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f91:	5b                   	pop    %ebx
81000f92:	5e                   	pop    %esi
81000f93:	5f                   	pop    %edi
81000f94:	5d                   	pop    %ebp
81000f95:	c3                   	ret    

81000f96 <_fflush_r>:
81000f96:	55                   	push   %ebp
81000f97:	89 e5                	mov    %esp,%ebp
81000f99:	53                   	push   %ebx
81000f9a:	83 ec 14             	sub    $0x14,%esp
81000f9d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fa0:	8b 45 08             	mov    0x8(%ebp),%eax
81000fa3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fa6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000faa:	74 18                	je     81000fc4 <_fflush_r+0x2e>
81000fac:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000faf:	8b 40 38             	mov    0x38(%eax),%eax
81000fb2:	85 c0                	test   %eax,%eax
81000fb4:	75 0e                	jne    81000fc4 <_fflush_r+0x2e>
81000fb6:	83 ec 0c             	sub    $0xc,%esp
81000fb9:	ff 75 f4             	push   -0xc(%ebp)
81000fbc:	e8 d8 04 00 00       	call   81001499 <__sinit>
81000fc1:	83 c4 10             	add    $0x10,%esp
81000fc4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fc8:	66 85 c0             	test   %ax,%ax
81000fcb:	75 07                	jne    81000fd4 <_fflush_r+0x3e>
81000fcd:	b8 00 00 00 00       	mov    $0x0,%eax
81000fd2:	eb 15                	jmp    81000fe9 <_fflush_r+0x53>
81000fd4:	83 ec 08             	sub    $0x8,%esp
81000fd7:	53                   	push   %ebx
81000fd8:	ff 75 08             	push   0x8(%ebp)
81000fdb:	e8 90 fd ff ff       	call   81000d70 <__sflush_r>
81000fe0:	83 c4 10             	add    $0x10,%esp
81000fe3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fe9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000fec:	c9                   	leave  
81000fed:	c3                   	ret    

81000fee <fflush>:
81000fee:	55                   	push   %ebp
81000fef:	89 e5                	mov    %esp,%ebp
81000ff1:	83 ec 08             	sub    $0x8,%esp
81000ff4:	8b 55 08             	mov    0x8(%ebp),%edx
81000ff7:	85 d2                	test   %edx,%edx
81000ff9:	75 18                	jne    81001013 <fflush+0x25>
81000ffb:	a1 58 77 00 81       	mov    0x81007758,%eax
81001000:	83 ec 08             	sub    $0x8,%esp
81001003:	68 96 0f 00 81       	push   $0x81000f96
81001008:	50                   	push   %eax
81001009:	e8 39 17 00 00       	call   81002747 <_fwalk_reent>
8100100e:	83 c4 10             	add    $0x10,%esp
81001011:	eb 12                	jmp    81001025 <fflush+0x37>
81001013:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81001018:	83 ec 08             	sub    $0x8,%esp
8100101b:	52                   	push   %edx
8100101c:	50                   	push   %eax
8100101d:	e8 74 ff ff ff       	call   81000f96 <_fflush_r>
81001022:	83 c4 10             	add    $0x10,%esp
81001025:	c9                   	leave  
81001026:	c3                   	ret    

81001027 <_fgets_r>:
81001027:	55                   	push   %ebp
81001028:	89 e5                	mov    %esp,%ebp
8100102a:	83 ec 28             	sub    $0x28,%esp
8100102d:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81001031:	7f 0a                	jg     8100103d <_fgets_r+0x16>
81001033:	b8 00 00 00 00       	mov    $0x0,%eax
81001038:	e9 46 01 00 00       	jmp    81001183 <_fgets_r+0x15c>
8100103d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001040:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001043:	8b 45 08             	mov    0x8(%ebp),%eax
81001046:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001049:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100104d:	74 18                	je     81001067 <_fgets_r+0x40>
8100104f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001052:	8b 40 38             	mov    0x38(%eax),%eax
81001055:	85 c0                	test   %eax,%eax
81001057:	75 0e                	jne    81001067 <_fgets_r+0x40>
81001059:	83 ec 0c             	sub    $0xc,%esp
8100105c:	ff 75 ec             	push   -0x14(%ebp)
8100105f:	e8 35 04 00 00       	call   81001499 <__sinit>
81001064:	83 c4 10             	add    $0x10,%esp
81001067:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
8100106b:	8b 45 14             	mov    0x14(%ebp),%eax
8100106e:	8b 40 04             	mov    0x4(%eax),%eax
81001071:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001074:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001078:	75 34                	jne    810010ae <_fgets_r+0x87>
8100107a:	83 ec 08             	sub    $0x8,%esp
8100107d:	ff 75 14             	push   0x14(%ebp)
81001080:	ff 75 08             	push   0x8(%ebp)
81001083:	e8 50 4c 00 00       	call   81005cd8 <__srefill_r>
81001088:	83 c4 10             	add    $0x10,%esp
8100108b:	85 c0                	test   %eax,%eax
8100108d:	74 16                	je     810010a5 <_fgets_r+0x7e>
8100108f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001092:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001095:	0f 85 de 00 00 00    	jne    81001179 <_fgets_r+0x152>
8100109b:	b8 00 00 00 00       	mov    $0x0,%eax
810010a0:	e9 de 00 00 00       	jmp    81001183 <_fgets_r+0x15c>
810010a5:	8b 45 14             	mov    0x14(%ebp),%eax
810010a8:	8b 40 04             	mov    0x4(%eax),%eax
810010ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010ae:	8b 45 14             	mov    0x14(%ebp),%eax
810010b1:	8b 00                	mov    (%eax),%eax
810010b3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810010b6:	8b 45 10             	mov    0x10(%ebp),%eax
810010b9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810010bc:	76 06                	jbe    810010c4 <_fgets_r+0x9d>
810010be:	8b 45 10             	mov    0x10(%ebp),%eax
810010c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010c4:	83 ec 04             	sub    $0x4,%esp
810010c7:	ff 75 f4             	push   -0xc(%ebp)
810010ca:	6a 0a                	push   $0xa
810010cc:	ff 75 e8             	push   -0x18(%ebp)
810010cf:	e8 2c 32 00 00       	call   81004300 <memchr>
810010d4:	83 c4 10             	add    $0x10,%esp
810010d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810010da:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810010de:	74 4a                	je     8100112a <_fgets_r+0x103>
810010e0:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810010e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810010e7:	2b 45 e8             	sub    -0x18(%ebp),%eax
810010ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010ed:	8b 45 14             	mov    0x14(%ebp),%eax
810010f0:	8b 40 04             	mov    0x4(%eax),%eax
810010f3:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010f6:	89 c2                	mov    %eax,%edx
810010f8:	8b 45 14             	mov    0x14(%ebp),%eax
810010fb:	89 50 04             	mov    %edx,0x4(%eax)
810010fe:	8b 45 14             	mov    0x14(%ebp),%eax
81001101:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001104:	89 10                	mov    %edx,(%eax)
81001106:	83 ec 04             	sub    $0x4,%esp
81001109:	ff 75 f4             	push   -0xc(%ebp)
8100110c:	ff 75 e8             	push   -0x18(%ebp)
8100110f:	ff 75 f0             	push   -0x10(%ebp)
81001112:	e8 d1 32 00 00       	call   810043e8 <memcpy>
81001117:	83 c4 10             	add    $0x10,%esp
8100111a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100111d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001120:	01 d0                	add    %edx,%eax
81001122:	c6 00 00             	movb   $0x0,(%eax)
81001125:	8b 45 0c             	mov    0xc(%ebp),%eax
81001128:	eb 59                	jmp    81001183 <_fgets_r+0x15c>
8100112a:	8b 45 14             	mov    0x14(%ebp),%eax
8100112d:	8b 40 04             	mov    0x4(%eax),%eax
81001130:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001133:	89 c2                	mov    %eax,%edx
81001135:	8b 45 14             	mov    0x14(%ebp),%eax
81001138:	89 50 04             	mov    %edx,0x4(%eax)
8100113b:	8b 45 14             	mov    0x14(%ebp),%eax
8100113e:	8b 10                	mov    (%eax),%edx
81001140:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001143:	01 c2                	add    %eax,%edx
81001145:	8b 45 14             	mov    0x14(%ebp),%eax
81001148:	89 10                	mov    %edx,(%eax)
8100114a:	83 ec 04             	sub    $0x4,%esp
8100114d:	ff 75 f4             	push   -0xc(%ebp)
81001150:	ff 75 e8             	push   -0x18(%ebp)
81001153:	ff 75 f0             	push   -0x10(%ebp)
81001156:	e8 8d 32 00 00       	call   810043e8 <memcpy>
8100115b:	83 c4 10             	add    $0x10,%esp
8100115e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001161:	01 45 f0             	add    %eax,-0x10(%ebp)
81001164:	8b 45 10             	mov    0x10(%ebp),%eax
81001167:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100116a:	89 45 10             	mov    %eax,0x10(%ebp)
8100116d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001171:	0f 85 f4 fe ff ff    	jne    8100106b <_fgets_r+0x44>
81001177:	eb 01                	jmp    8100117a <_fgets_r+0x153>
81001179:	90                   	nop
8100117a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100117d:	c6 00 00             	movb   $0x0,(%eax)
81001180:	8b 45 0c             	mov    0xc(%ebp),%eax
81001183:	c9                   	leave  
81001184:	c3                   	ret    

81001185 <fgets>:
81001185:	55                   	push   %ebp
81001186:	89 e5                	mov    %esp,%ebp
81001188:	83 ec 08             	sub    $0x8,%esp
8100118b:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81001190:	ff 75 10             	push   0x10(%ebp)
81001193:	ff 75 0c             	push   0xc(%ebp)
81001196:	ff 75 08             	push   0x8(%ebp)
81001199:	50                   	push   %eax
8100119a:	e8 88 fe ff ff       	call   81001027 <_fgets_r>
8100119f:	83 c4 10             	add    $0x10,%esp
810011a2:	c9                   	leave  
810011a3:	c3                   	ret    

810011a4 <std>:
810011a4:	55                   	push   %ebp
810011a5:	89 e5                	mov    %esp,%ebp
810011a7:	83 ec 08             	sub    $0x8,%esp
810011aa:	8b 45 08             	mov    0x8(%ebp),%eax
810011ad:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810011b3:	8b 45 08             	mov    0x8(%ebp),%eax
810011b6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810011bd:	8b 45 08             	mov    0x8(%ebp),%eax
810011c0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810011c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810011ca:	89 c2                	mov    %eax,%edx
810011cc:	8b 45 08             	mov    0x8(%ebp),%eax
810011cf:	66 89 50 0c          	mov    %dx,0xc(%eax)
810011d3:	8b 45 08             	mov    0x8(%ebp),%eax
810011d6:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810011dd:	8b 45 10             	mov    0x10(%ebp),%eax
810011e0:	89 c2                	mov    %eax,%edx
810011e2:	8b 45 08             	mov    0x8(%ebp),%eax
810011e5:	66 89 50 0e          	mov    %dx,0xe(%eax)
810011e9:	8b 45 08             	mov    0x8(%ebp),%eax
810011ec:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810011f3:	8b 45 08             	mov    0x8(%ebp),%eax
810011f6:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810011fd:	8b 45 08             	mov    0x8(%ebp),%eax
81001200:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001207:	8b 45 08             	mov    0x8(%ebp),%eax
8100120a:	83 c0 5c             	add    $0x5c,%eax
8100120d:	83 ec 04             	sub    $0x4,%esp
81001210:	6a 08                	push   $0x8
81001212:	6a 00                	push   $0x0
81001214:	50                   	push   %eax
81001215:	e8 a3 32 00 00       	call   810044bd <memset>
8100121a:	83 c4 10             	add    $0x10,%esp
8100121d:	8b 45 08             	mov    0x8(%ebp),%eax
81001220:	8b 55 08             	mov    0x8(%ebp),%edx
81001223:	89 50 1c             	mov    %edx,0x1c(%eax)
81001226:	8b 45 08             	mov    0x8(%ebp),%eax
81001229:	c7 40 20 19 5f 00 81 	movl   $0x81005f19,0x20(%eax)
81001230:	8b 45 08             	mov    0x8(%ebp),%eax
81001233:	c7 40 24 67 5f 00 81 	movl   $0x81005f67,0x24(%eax)
8100123a:	8b 45 08             	mov    0x8(%ebp),%eax
8100123d:	c7 40 28 c2 5f 00 81 	movl   $0x81005fc2,0x28(%eax)
81001244:	8b 45 08             	mov    0x8(%ebp),%eax
81001247:	c7 40 2c 0c 60 00 81 	movl   $0x8100600c,0x2c(%eax)
8100124e:	90                   	nop
8100124f:	c9                   	leave  
81001250:	c3                   	ret    

81001251 <stdin_init>:
81001251:	55                   	push   %ebp
81001252:	89 e5                	mov    %esp,%ebp
81001254:	83 ec 08             	sub    $0x8,%esp
81001257:	83 ec 04             	sub    $0x4,%esp
8100125a:	6a 00                	push   $0x0
8100125c:	6a 04                	push   $0x4
8100125e:	ff 75 08             	push   0x8(%ebp)
81001261:	e8 3e ff ff ff       	call   810011a4 <std>
81001266:	83 c4 10             	add    $0x10,%esp
81001269:	90                   	nop
8100126a:	c9                   	leave  
8100126b:	c3                   	ret    

8100126c <stdout_init>:
8100126c:	55                   	push   %ebp
8100126d:	89 e5                	mov    %esp,%ebp
8100126f:	83 ec 08             	sub    $0x8,%esp
81001272:	83 ec 04             	sub    $0x4,%esp
81001275:	6a 01                	push   $0x1
81001277:	6a 09                	push   $0x9
81001279:	ff 75 08             	push   0x8(%ebp)
8100127c:	e8 23 ff ff ff       	call   810011a4 <std>
81001281:	83 c4 10             	add    $0x10,%esp
81001284:	90                   	nop
81001285:	c9                   	leave  
81001286:	c3                   	ret    

81001287 <stderr_init>:
81001287:	55                   	push   %ebp
81001288:	89 e5                	mov    %esp,%ebp
8100128a:	83 ec 08             	sub    $0x8,%esp
8100128d:	83 ec 04             	sub    $0x4,%esp
81001290:	6a 02                	push   $0x2
81001292:	6a 12                	push   $0x12
81001294:	ff 75 08             	push   0x8(%ebp)
81001297:	e8 08 ff ff ff       	call   810011a4 <std>
8100129c:	83 c4 10             	add    $0x10,%esp
8100129f:	90                   	nop
810012a0:	c9                   	leave  
810012a1:	c3                   	ret    

810012a2 <__sfmoreglue>:
810012a2:	55                   	push   %ebp
810012a3:	89 e5                	mov    %esp,%ebp
810012a5:	53                   	push   %ebx
810012a6:	83 ec 14             	sub    $0x14,%esp
810012a9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012ac:	8d 43 ff             	lea    -0x1(%ebx),%eax
810012af:	6b c0 68             	imul   $0x68,%eax,%eax
810012b2:	83 c0 74             	add    $0x74,%eax
810012b5:	83 ec 08             	sub    $0x8,%esp
810012b8:	50                   	push   %eax
810012b9:	ff 75 08             	push   0x8(%ebp)
810012bc:	e8 12 28 00 00       	call   81003ad3 <_malloc_r>
810012c1:	83 c4 10             	add    $0x10,%esp
810012c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012cb:	75 07                	jne    810012d4 <__sfmoreglue+0x32>
810012cd:	b8 00 00 00 00       	mov    $0x0,%eax
810012d2:	eb 38                	jmp    8100130c <__sfmoreglue+0x6a>
810012d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810012dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e0:	89 58 04             	mov    %ebx,0x4(%eax)
810012e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e6:	8d 50 0c             	lea    0xc(%eax),%edx
810012e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ec:	89 50 08             	mov    %edx,0x8(%eax)
810012ef:	89 d8                	mov    %ebx,%eax
810012f1:	6b c0 68             	imul   $0x68,%eax,%eax
810012f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012f7:	83 c2 0c             	add    $0xc,%edx
810012fa:	83 ec 04             	sub    $0x4,%esp
810012fd:	50                   	push   %eax
810012fe:	6a 00                	push   $0x0
81001300:	52                   	push   %edx
81001301:	e8 b7 31 00 00       	call   810044bd <memset>
81001306:	83 c4 10             	add    $0x10,%esp
81001309:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100130f:	c9                   	leave  
81001310:	c3                   	ret    

81001311 <__sfp>:
81001311:	55                   	push   %ebp
81001312:	89 e5                	mov    %esp,%ebp
81001314:	83 ec 18             	sub    $0x18,%esp
81001317:	e8 16 02 00 00       	call   81001532 <__sfp_lock_acquire>
8100131c:	a1 58 77 00 81       	mov    0x81007758,%eax
81001321:	8b 40 38             	mov    0x38(%eax),%eax
81001324:	85 c0                	test   %eax,%eax
81001326:	75 11                	jne    81001339 <__sfp+0x28>
81001328:	a1 58 77 00 81       	mov    0x81007758,%eax
8100132d:	83 ec 0c             	sub    $0xc,%esp
81001330:	50                   	push   %eax
81001331:	e8 63 01 00 00       	call   81001499 <__sinit>
81001336:	83 c4 10             	add    $0x10,%esp
81001339:	a1 58 77 00 81       	mov    0x81007758,%eax
8100133e:	05 e0 02 00 00       	add    $0x2e0,%eax
81001343:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001346:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001349:	8b 40 08             	mov    0x8(%eax),%eax
8100134c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100134f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001352:	8b 40 04             	mov    0x4(%eax),%eax
81001355:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001358:	eb 10                	jmp    8100136a <__sfp+0x59>
8100135a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100135d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001361:	66 85 c0             	test   %ax,%ax
81001364:	74 58                	je     810013be <__sfp+0xad>
81001366:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100136a:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100136e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001372:	79 e6                	jns    8100135a <__sfp+0x49>
81001374:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001377:	8b 00                	mov    (%eax),%eax
81001379:	85 c0                	test   %eax,%eax
8100137b:	75 1e                	jne    8100139b <__sfp+0x8a>
8100137d:	83 ec 08             	sub    $0x8,%esp
81001380:	6a 04                	push   $0x4
81001382:	ff 75 08             	push   0x8(%ebp)
81001385:	e8 18 ff ff ff       	call   810012a2 <__sfmoreglue>
8100138a:	83 c4 10             	add    $0x10,%esp
8100138d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001390:	89 02                	mov    %eax,(%edx)
81001392:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001395:	8b 00                	mov    (%eax),%eax
81001397:	85 c0                	test   %eax,%eax
81001399:	74 0a                	je     810013a5 <__sfp+0x94>
8100139b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100139e:	8b 00                	mov    (%eax),%eax
810013a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013a3:	eb a1                	jmp    81001346 <__sfp+0x35>
810013a5:	90                   	nop
810013a6:	e8 8d 01 00 00       	call   81001538 <__sfp_lock_release>
810013ab:	8b 45 08             	mov    0x8(%ebp),%eax
810013ae:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810013b4:	b8 00 00 00 00       	mov    $0x0,%eax
810013b9:	e9 9e 00 00 00       	jmp    8100145c <__sfp+0x14b>
810013be:	90                   	nop
810013bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013c2:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810013c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013cb:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810013d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d4:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810013db:	e8 58 01 00 00       	call   81001538 <__sfp_lock_release>
810013e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810013e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ec:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810013f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810013fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001400:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001407:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100140a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001411:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001414:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100141b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100141e:	83 c0 5c             	add    $0x5c,%eax
81001421:	83 ec 04             	sub    $0x4,%esp
81001424:	6a 08                	push   $0x8
81001426:	6a 00                	push   $0x0
81001428:	50                   	push   %eax
81001429:	e8 8f 30 00 00       	call   810044bd <memset>
8100142e:	83 c4 10             	add    $0x10,%esp
81001431:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001434:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
8100143b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143e:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001445:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001448:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100144f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001452:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001459:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145c:	c9                   	leave  
8100145d:	c3                   	ret    

8100145e <_cleanup_r>:
8100145e:	55                   	push   %ebp
8100145f:	89 e5                	mov    %esp,%ebp
81001461:	83 ec 18             	sub    $0x18,%esp
81001464:	c7 45 f4 4c 0c 00 81 	movl   $0x81000c4c,-0xc(%ebp)
8100146b:	83 ec 08             	sub    $0x8,%esp
8100146e:	ff 75 f4             	push   -0xc(%ebp)
81001471:	ff 75 08             	push   0x8(%ebp)
81001474:	e8 ce 12 00 00       	call   81002747 <_fwalk_reent>
81001479:	83 c4 10             	add    $0x10,%esp
8100147c:	90                   	nop
8100147d:	c9                   	leave  
8100147e:	c3                   	ret    

8100147f <_cleanup>:
8100147f:	55                   	push   %ebp
81001480:	89 e5                	mov    %esp,%ebp
81001482:	83 ec 08             	sub    $0x8,%esp
81001485:	a1 58 77 00 81       	mov    0x81007758,%eax
8100148a:	83 ec 0c             	sub    $0xc,%esp
8100148d:	50                   	push   %eax
8100148e:	e8 cb ff ff ff       	call   8100145e <_cleanup_r>
81001493:	83 c4 10             	add    $0x10,%esp
81001496:	90                   	nop
81001497:	c9                   	leave  
81001498:	c3                   	ret    

81001499 <__sinit>:
81001499:	55                   	push   %ebp
8100149a:	89 e5                	mov    %esp,%ebp
8100149c:	83 ec 08             	sub    $0x8,%esp
8100149f:	e8 9a 00 00 00       	call   8100153e <__sinit_lock_acquire>
810014a4:	8b 45 08             	mov    0x8(%ebp),%eax
810014a7:	8b 40 38             	mov    0x38(%eax),%eax
810014aa:	85 c0                	test   %eax,%eax
810014ac:	74 07                	je     810014b5 <__sinit+0x1c>
810014ae:	e8 91 00 00 00       	call   81001544 <__sinit_lock_release>
810014b3:	eb 7b                	jmp    81001530 <__sinit+0x97>
810014b5:	8b 45 08             	mov    0x8(%ebp),%eax
810014b8:	c7 40 3c 5e 14 00 81 	movl   $0x8100145e,0x3c(%eax)
810014bf:	8b 45 08             	mov    0x8(%ebp),%eax
810014c2:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810014c9:	00 00 00 
810014cc:	8b 45 08             	mov    0x8(%ebp),%eax
810014cf:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810014d6:	00 00 00 
810014d9:	8b 45 08             	mov    0x8(%ebp),%eax
810014dc:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810014e2:	8b 45 08             	mov    0x8(%ebp),%eax
810014e5:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810014eb:	8b 45 08             	mov    0x8(%ebp),%eax
810014ee:	8b 40 04             	mov    0x4(%eax),%eax
810014f1:	83 ec 0c             	sub    $0xc,%esp
810014f4:	50                   	push   %eax
810014f5:	e8 57 fd ff ff       	call   81001251 <stdin_init>
810014fa:	83 c4 10             	add    $0x10,%esp
810014fd:	8b 45 08             	mov    0x8(%ebp),%eax
81001500:	8b 40 08             	mov    0x8(%eax),%eax
81001503:	83 ec 0c             	sub    $0xc,%esp
81001506:	50                   	push   %eax
81001507:	e8 60 fd ff ff       	call   8100126c <stdout_init>
8100150c:	83 c4 10             	add    $0x10,%esp
8100150f:	8b 45 08             	mov    0x8(%ebp),%eax
81001512:	8b 40 0c             	mov    0xc(%eax),%eax
81001515:	83 ec 0c             	sub    $0xc,%esp
81001518:	50                   	push   %eax
81001519:	e8 69 fd ff ff       	call   81001287 <stderr_init>
8100151e:	83 c4 10             	add    $0x10,%esp
81001521:	8b 45 08             	mov    0x8(%ebp),%eax
81001524:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
8100152b:	e8 14 00 00 00       	call   81001544 <__sinit_lock_release>
81001530:	c9                   	leave  
81001531:	c3                   	ret    

81001532 <__sfp_lock_acquire>:
81001532:	55                   	push   %ebp
81001533:	89 e5                	mov    %esp,%ebp
81001535:	90                   	nop
81001536:	5d                   	pop    %ebp
81001537:	c3                   	ret    

81001538 <__sfp_lock_release>:
81001538:	55                   	push   %ebp
81001539:	89 e5                	mov    %esp,%ebp
8100153b:	90                   	nop
8100153c:	5d                   	pop    %ebp
8100153d:	c3                   	ret    

8100153e <__sinit_lock_acquire>:
8100153e:	55                   	push   %ebp
8100153f:	89 e5                	mov    %esp,%ebp
81001541:	90                   	nop
81001542:	5d                   	pop    %ebp
81001543:	c3                   	ret    

81001544 <__sinit_lock_release>:
81001544:	55                   	push   %ebp
81001545:	89 e5                	mov    %esp,%ebp
81001547:	90                   	nop
81001548:	5d                   	pop    %ebp
81001549:	c3                   	ret    

8100154a <__fp_lock>:
8100154a:	55                   	push   %ebp
8100154b:	89 e5                	mov    %esp,%ebp
8100154d:	b8 00 00 00 00       	mov    $0x0,%eax
81001552:	5d                   	pop    %ebp
81001553:	c3                   	ret    

81001554 <__fp_unlock>:
81001554:	55                   	push   %ebp
81001555:	89 e5                	mov    %esp,%ebp
81001557:	b8 00 00 00 00       	mov    $0x0,%eax
8100155c:	5d                   	pop    %ebp
8100155d:	c3                   	ret    

8100155e <__fp_lock_all>:
8100155e:	55                   	push   %ebp
8100155f:	89 e5                	mov    %esp,%ebp
81001561:	83 ec 08             	sub    $0x8,%esp
81001564:	e8 c9 ff ff ff       	call   81001532 <__sfp_lock_acquire>
81001569:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100156e:	83 ec 08             	sub    $0x8,%esp
81001571:	68 4a 15 00 81       	push   $0x8100154a
81001576:	50                   	push   %eax
81001577:	e8 63 11 00 00       	call   810026df <_fwalk>
8100157c:	83 c4 10             	add    $0x10,%esp
8100157f:	90                   	nop
81001580:	c9                   	leave  
81001581:	c3                   	ret    

81001582 <__fp_unlock_all>:
81001582:	55                   	push   %ebp
81001583:	89 e5                	mov    %esp,%ebp
81001585:	83 ec 08             	sub    $0x8,%esp
81001588:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100158d:	83 ec 08             	sub    $0x8,%esp
81001590:	68 54 15 00 81       	push   $0x81001554
81001595:	50                   	push   %eax
81001596:	e8 44 11 00 00       	call   810026df <_fwalk>
8100159b:	83 c4 10             	add    $0x10,%esp
8100159e:	e8 95 ff ff ff       	call   81001538 <__sfp_lock_release>
810015a3:	90                   	nop
810015a4:	c9                   	leave  
810015a5:	c3                   	ret    

810015a6 <_fopen_r>:
810015a6:	55                   	push   %ebp
810015a7:	89 e5                	mov    %esp,%ebp
810015a9:	56                   	push   %esi
810015aa:	53                   	push   %ebx
810015ab:	83 ec 10             	sub    $0x10,%esp
810015ae:	83 ec 04             	sub    $0x4,%esp
810015b1:	8d 45 f0             	lea    -0x10(%ebp),%eax
810015b4:	50                   	push   %eax
810015b5:	ff 75 10             	push   0x10(%ebp)
810015b8:	ff 75 08             	push   0x8(%ebp)
810015bb:	e8 42 54 00 00       	call   81006a02 <__sflags>
810015c0:	83 c4 10             	add    $0x10,%esp
810015c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810015c6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810015ca:	75 0a                	jne    810015d6 <_fopen_r+0x30>
810015cc:	b8 00 00 00 00       	mov    $0x0,%eax
810015d1:	e9 9e 00 00 00       	jmp    81001674 <_fopen_r+0xce>
810015d6:	83 ec 0c             	sub    $0xc,%esp
810015d9:	ff 75 08             	push   0x8(%ebp)
810015dc:	e8 30 fd ff ff       	call   81001311 <__sfp>
810015e1:	83 c4 10             	add    $0x10,%esp
810015e4:	89 c3                	mov    %eax,%ebx
810015e6:	85 db                	test   %ebx,%ebx
810015e8:	75 0a                	jne    810015f4 <_fopen_r+0x4e>
810015ea:	b8 00 00 00 00       	mov    $0x0,%eax
810015ef:	e9 80 00 00 00       	jmp    81001674 <_fopen_r+0xce>
810015f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015f7:	68 b6 01 00 00       	push   $0x1b6
810015fc:	50                   	push   %eax
810015fd:	ff 75 0c             	push   0xc(%ebp)
81001600:	ff 75 08             	push   0x8(%ebp)
81001603:	e8 98 3a 00 00       	call   810050a0 <_open_r>
81001608:	83 c4 10             	add    $0x10,%esp
8100160b:	89 c6                	mov    %eax,%esi
8100160d:	85 f6                	test   %esi,%esi
8100160f:	79 17                	jns    81001628 <_fopen_r+0x82>
81001611:	e8 1c ff ff ff       	call   81001532 <__sfp_lock_acquire>
81001616:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
8100161c:	e8 17 ff ff ff       	call   81001538 <__sfp_lock_release>
81001621:	b8 00 00 00 00       	mov    $0x0,%eax
81001626:	eb 4c                	jmp    81001674 <_fopen_r+0xce>
81001628:	89 f0                	mov    %esi,%eax
8100162a:	66 89 43 0e          	mov    %ax,0xe(%ebx)
8100162e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001631:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001635:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001638:	c7 43 20 19 5f 00 81 	movl   $0x81005f19,0x20(%ebx)
8100163f:	c7 43 24 67 5f 00 81 	movl   $0x81005f67,0x24(%ebx)
81001646:	c7 43 28 c2 5f 00 81 	movl   $0x81005fc2,0x28(%ebx)
8100164d:	c7 43 2c 0c 60 00 81 	movl   $0x8100600c,0x2c(%ebx)
81001654:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001658:	98                   	cwtl   
81001659:	25 00 01 00 00       	and    $0x100,%eax
8100165e:	85 c0                	test   %eax,%eax
81001660:	74 10                	je     81001672 <_fopen_r+0xcc>
81001662:	6a 02                	push   $0x2
81001664:	6a 00                	push   $0x0
81001666:	53                   	push   %ebx
81001667:	ff 75 08             	push   0x8(%ebp)
8100166a:	e8 81 06 00 00       	call   81001cf0 <_fseek_r>
8100166f:	83 c4 10             	add    $0x10,%esp
81001672:	89 d8                	mov    %ebx,%eax
81001674:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001677:	5b                   	pop    %ebx
81001678:	5e                   	pop    %esi
81001679:	5d                   	pop    %ebp
8100167a:	c3                   	ret    

8100167b <fopen>:
8100167b:	55                   	push   %ebp
8100167c:	89 e5                	mov    %esp,%ebp
8100167e:	83 ec 08             	sub    $0x8,%esp
81001681:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81001686:	83 ec 04             	sub    $0x4,%esp
81001689:	ff 75 0c             	push   0xc(%ebp)
8100168c:	ff 75 08             	push   0x8(%ebp)
8100168f:	50                   	push   %eax
81001690:	e8 11 ff ff ff       	call   810015a6 <_fopen_r>
81001695:	83 c4 10             	add    $0x10,%esp
81001698:	c9                   	leave  
81001699:	c3                   	ret    

8100169a <_fiprintf_r>:
8100169a:	55                   	push   %ebp
8100169b:	89 e5                	mov    %esp,%ebp
8100169d:	83 ec 18             	sub    $0x18,%esp
810016a0:	8d 45 14             	lea    0x14(%ebp),%eax
810016a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016a9:	50                   	push   %eax
810016aa:	ff 75 10             	push   0x10(%ebp)
810016ad:	ff 75 0c             	push   0xc(%ebp)
810016b0:	ff 75 08             	push   0x8(%ebp)
810016b3:	e8 a8 30 00 00       	call   81004760 <_vfiprintf_r>
810016b8:	83 c4 10             	add    $0x10,%esp
810016bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c1:	c9                   	leave  
810016c2:	c3                   	ret    

810016c3 <fiprintf>:
810016c3:	55                   	push   %ebp
810016c4:	89 e5                	mov    %esp,%ebp
810016c6:	83 ec 18             	sub    $0x18,%esp
810016c9:	8d 45 10             	lea    0x10(%ebp),%eax
810016cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016cf:	8b 55 f0             	mov    -0x10(%ebp),%edx
810016d2:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810016d7:	52                   	push   %edx
810016d8:	ff 75 0c             	push   0xc(%ebp)
810016db:	ff 75 08             	push   0x8(%ebp)
810016de:	50                   	push   %eax
810016df:	e8 7c 30 00 00       	call   81004760 <_vfiprintf_r>
810016e4:	83 c4 10             	add    $0x10,%esp
810016e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ed:	c9                   	leave  
810016ee:	c3                   	ret    

810016ef <_fputs_r>:
810016ef:	55                   	push   %ebp
810016f0:	89 e5                	mov    %esp,%ebp
810016f2:	83 ec 28             	sub    $0x28,%esp
810016f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810016f8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016fb:	83 ec 0c             	sub    $0xc,%esp
810016fe:	ff 75 0c             	push   0xc(%ebp)
81001701:	e8 ea 4a 00 00       	call   810061f0 <strlen>
81001706:	83 c4 10             	add    $0x10,%esp
81001709:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100170c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100170f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001712:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001715:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001718:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100171f:	8b 45 08             	mov    0x8(%ebp),%eax
81001722:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001725:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001729:	74 18                	je     81001743 <_fputs_r+0x54>
8100172b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172e:	8b 40 38             	mov    0x38(%eax),%eax
81001731:	85 c0                	test   %eax,%eax
81001733:	75 0e                	jne    81001743 <_fputs_r+0x54>
81001735:	83 ec 0c             	sub    $0xc,%esp
81001738:	ff 75 f4             	push   -0xc(%ebp)
8100173b:	e8 59 fd ff ff       	call   81001499 <__sinit>
81001740:	83 c4 10             	add    $0x10,%esp
81001743:	8b 45 10             	mov    0x10(%ebp),%eax
81001746:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100174a:	98                   	cwtl   
8100174b:	25 00 20 00 00       	and    $0x2000,%eax
81001750:	85 c0                	test   %eax,%eax
81001752:	75 24                	jne    81001778 <_fputs_r+0x89>
81001754:	8b 45 10             	mov    0x10(%ebp),%eax
81001757:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100175b:	80 cc 20             	or     $0x20,%ah
8100175e:	89 c2                	mov    %eax,%edx
81001760:	8b 45 10             	mov    0x10(%ebp),%eax
81001763:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001767:	8b 45 10             	mov    0x10(%ebp),%eax
8100176a:	8b 40 64             	mov    0x64(%eax),%eax
8100176d:	80 e4 df             	and    $0xdf,%ah
81001770:	89 c2                	mov    %eax,%edx
81001772:	8b 45 10             	mov    0x10(%ebp),%eax
81001775:	89 50 64             	mov    %edx,0x64(%eax)
81001778:	83 ec 04             	sub    $0x4,%esp
8100177b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100177e:	50                   	push   %eax
8100177f:	ff 75 10             	push   0x10(%ebp)
81001782:	ff 75 08             	push   0x8(%ebp)
81001785:	e8 b7 0a 00 00       	call   81002241 <__sfvwrite_r>
8100178a:	83 c4 10             	add    $0x10,%esp
8100178d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001790:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001793:	c9                   	leave  
81001794:	c3                   	ret    

81001795 <fputs>:
81001795:	55                   	push   %ebp
81001796:	89 e5                	mov    %esp,%ebp
81001798:	83 ec 08             	sub    $0x8,%esp
8100179b:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810017a0:	83 ec 04             	sub    $0x4,%esp
810017a3:	ff 75 0c             	push   0xc(%ebp)
810017a6:	ff 75 08             	push   0x8(%ebp)
810017a9:	50                   	push   %eax
810017aa:	e8 40 ff ff ff       	call   810016ef <_fputs_r>
810017af:	83 c4 10             	add    $0x10,%esp
810017b2:	c9                   	leave  
810017b3:	c3                   	ret    

810017b4 <_free_r>:
810017b4:	55                   	push   %ebp
810017b5:	89 e5                	mov    %esp,%ebp
810017b7:	53                   	push   %ebx
810017b8:	83 ec 34             	sub    $0x34,%esp
810017bb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810017bf:	0f 84 c4 03 00 00    	je     81001b89 <_free_r+0x3d5>
810017c5:	83 ec 0c             	sub    $0xc,%esp
810017c8:	ff 75 08             	push   0x8(%ebp)
810017cb:	e8 75 2d 00 00       	call   81004545 <__malloc_lock>
810017d0:	83 c4 10             	add    $0x10,%esp
810017d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810017d6:	83 e8 08             	sub    $0x8,%eax
810017d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017df:	8b 40 04             	mov    0x4(%eax),%eax
810017e2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810017e5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017e8:	83 e0 fe             	and    $0xfffffffe,%eax
810017eb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017ee:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017f4:	01 d0                	add    %edx,%eax
810017f6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017fc:	8b 40 04             	mov    0x4(%eax),%eax
810017ff:	83 e0 fc             	and    $0xfffffffc,%eax
81001802:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001805:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
8100180a:	8b 40 08             	mov    0x8(%eax),%eax
8100180d:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001810:	0f 85 94 00 00 00    	jne    810018aa <_free_r+0xf6>
81001816:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001819:	01 45 f0             	add    %eax,-0x10(%ebp)
8100181c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100181f:	83 e0 01             	and    $0x1,%eax
81001822:	85 c0                	test   %eax,%eax
81001824:	75 3a                	jne    81001860 <_free_r+0xac>
81001826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001829:	8b 00                	mov    (%eax),%eax
8100182b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100182e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001831:	f7 d8                	neg    %eax
81001833:	01 45 f4             	add    %eax,-0xc(%ebp)
81001836:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001839:	01 45 f0             	add    %eax,-0x10(%ebp)
8100183c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183f:	8b 40 0c             	mov    0xc(%eax),%eax
81001842:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001845:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001848:	8b 40 08             	mov    0x8(%eax),%eax
8100184b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100184e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001851:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001854:	89 50 0c             	mov    %edx,0xc(%eax)
81001857:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100185a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100185d:	89 50 08             	mov    %edx,0x8(%eax)
81001860:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001863:	83 c8 01             	or     $0x1,%eax
81001866:	89 c2                	mov    %eax,%edx
81001868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186b:	89 50 04             	mov    %edx,0x4(%eax)
8100186e:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
81001873:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001876:	89 42 08             	mov    %eax,0x8(%edx)
81001879:	a1 28 83 00 81       	mov    0x81008328,%eax
8100187e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001881:	72 14                	jb     81001897 <_free_r+0xe3>
81001883:	a1 00 8b 00 81       	mov    0x81008b00,%eax
81001888:	83 ec 08             	sub    $0x8,%esp
8100188b:	50                   	push   %eax
8100188c:	ff 75 08             	push   0x8(%ebp)
8100188f:	e8 fb 02 00 00       	call   81001b8f <_malloc_trim_r>
81001894:	83 c4 10             	add    $0x10,%esp
81001897:	83 ec 0c             	sub    $0xc,%esp
8100189a:	ff 75 08             	push   0x8(%ebp)
8100189d:	e8 a9 2c 00 00       	call   8100454b <__malloc_unlock>
810018a2:	83 c4 10             	add    $0x10,%esp
810018a5:	e9 e0 02 00 00       	jmp    81001b8a <_free_r+0x3d6>
810018aa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018ad:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018b0:	89 50 04             	mov    %edx,0x4(%eax)
810018b3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018bd:	83 e0 01             	and    $0x1,%eax
810018c0:	85 c0                	test   %eax,%eax
810018c2:	75 52                	jne    81001916 <_free_r+0x162>
810018c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c7:	8b 00                	mov    (%eax),%eax
810018c9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810018cc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018cf:	f7 d8                	neg    %eax
810018d1:	01 45 f4             	add    %eax,-0xc(%ebp)
810018d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018d7:	01 45 f0             	add    %eax,-0x10(%ebp)
810018da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018dd:	8b 40 08             	mov    0x8(%eax),%eax
810018e0:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
810018e5:	39 d0                	cmp    %edx,%eax
810018e7:	75 09                	jne    810018f2 <_free_r+0x13e>
810018e9:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810018f0:	eb 24                	jmp    81001916 <_free_r+0x162>
810018f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018f5:	8b 40 0c             	mov    0xc(%eax),%eax
810018f8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810018fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018fe:	8b 40 08             	mov    0x8(%eax),%eax
81001901:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001904:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001907:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100190a:	89 50 0c             	mov    %edx,0xc(%eax)
8100190d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001910:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001913:	89 50 08             	mov    %edx,0x8(%eax)
81001916:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001919:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100191c:	01 d0                	add    %edx,%eax
8100191e:	8b 40 04             	mov    0x4(%eax),%eax
81001921:	83 e0 01             	and    $0x1,%eax
81001924:	85 c0                	test   %eax,%eax
81001926:	75 75                	jne    8100199d <_free_r+0x1e9>
81001928:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100192b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100192e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001932:	75 45                	jne    81001979 <_free_r+0x1c5>
81001934:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001937:	8b 40 08             	mov    0x8(%eax),%eax
8100193a:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
8100193f:	39 d0                	cmp    %edx,%eax
81001941:	75 36                	jne    81001979 <_free_r+0x1c5>
81001943:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100194a:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
8100194f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001952:	89 50 0c             	mov    %edx,0xc(%eax)
81001955:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
8100195a:	8b 40 0c             	mov    0xc(%eax),%eax
8100195d:	89 42 08             	mov    %eax,0x8(%edx)
81001960:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
81001965:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001968:	89 50 0c             	mov    %edx,0xc(%eax)
8100196b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100196e:	8b 50 0c             	mov    0xc(%eax),%edx
81001971:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001974:	89 50 08             	mov    %edx,0x8(%eax)
81001977:	eb 24                	jmp    8100199d <_free_r+0x1e9>
81001979:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100197c:	8b 40 0c             	mov    0xc(%eax),%eax
8100197f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001982:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001985:	8b 40 08             	mov    0x8(%eax),%eax
81001988:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100198b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100198e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001991:	89 50 0c             	mov    %edx,0xc(%eax)
81001994:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001997:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100199a:	89 50 08             	mov    %edx,0x8(%eax)
8100199d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019a0:	83 c8 01             	or     $0x1,%eax
810019a3:	89 c2                	mov    %eax,%edx
810019a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019a8:	89 50 04             	mov    %edx,0x4(%eax)
810019ab:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019b1:	01 c2                	add    %eax,%edx
810019b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019b6:	89 02                	mov    %eax,(%edx)
810019b8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810019bc:	0f 85 b7 01 00 00    	jne    81001b79 <_free_r+0x3c5>
810019c2:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810019c9:	77 7f                	ja     81001a4a <_free_r+0x296>
810019cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019ce:	c1 e8 03             	shr    $0x3,%eax
810019d1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810019d4:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810019d9:	8b 58 04             	mov    0x4(%eax),%ebx
810019dc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019df:	8d 50 03             	lea    0x3(%eax),%edx
810019e2:	85 c0                	test   %eax,%eax
810019e4:	0f 48 c2             	cmovs  %edx,%eax
810019e7:	c1 f8 02             	sar    $0x2,%eax
810019ea:	ba 01 00 00 00       	mov    $0x1,%edx
810019ef:	89 c1                	mov    %eax,%ecx
810019f1:	d3 e2                	shl    %cl,%edx
810019f3:	89 d0                	mov    %edx,%eax
810019f5:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
810019fa:	09 d8                	or     %ebx,%eax
810019fc:	89 42 04             	mov    %eax,0x4(%edx)
810019ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a02:	83 c0 01             	add    $0x1,%eax
81001a05:	01 c0                	add    %eax,%eax
81001a07:	c1 e0 02             	shl    $0x2,%eax
81001a0a:	05 20 7f 00 81       	add    $0x81007f20,%eax
81001a0f:	83 e8 08             	sub    $0x8,%eax
81001a12:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001a15:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a18:	8b 40 08             	mov    0x8(%eax),%eax
81001a1b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a21:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001a24:	89 50 0c             	mov    %edx,0xc(%eax)
81001a27:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a2a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001a2d:	89 50 08             	mov    %edx,0x8(%eax)
81001a30:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a33:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001a36:	89 50 08             	mov    %edx,0x8(%eax)
81001a39:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a3c:	8b 50 08             	mov    0x8(%eax),%edx
81001a3f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a42:	89 50 0c             	mov    %edx,0xc(%eax)
81001a45:	e9 2f 01 00 00       	jmp    81001b79 <_free_r+0x3c5>
81001a4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a4d:	c1 e8 09             	shr    $0x9,%eax
81001a50:	85 c0                	test   %eax,%eax
81001a52:	75 08                	jne    81001a5c <_free_r+0x2a8>
81001a54:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a57:	c1 e8 03             	shr    $0x3,%eax
81001a5a:	eb 77                	jmp    81001ad3 <_free_r+0x31f>
81001a5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a5f:	c1 e8 09             	shr    $0x9,%eax
81001a62:	83 f8 04             	cmp    $0x4,%eax
81001a65:	77 0b                	ja     81001a72 <_free_r+0x2be>
81001a67:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a6a:	c1 e8 06             	shr    $0x6,%eax
81001a6d:	83 c0 38             	add    $0x38,%eax
81001a70:	eb 61                	jmp    81001ad3 <_free_r+0x31f>
81001a72:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a75:	c1 e8 09             	shr    $0x9,%eax
81001a78:	83 f8 14             	cmp    $0x14,%eax
81001a7b:	77 0b                	ja     81001a88 <_free_r+0x2d4>
81001a7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a80:	c1 e8 09             	shr    $0x9,%eax
81001a83:	83 c0 5b             	add    $0x5b,%eax
81001a86:	eb 4b                	jmp    81001ad3 <_free_r+0x31f>
81001a88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a8b:	c1 e8 09             	shr    $0x9,%eax
81001a8e:	83 f8 54             	cmp    $0x54,%eax
81001a91:	77 0b                	ja     81001a9e <_free_r+0x2ea>
81001a93:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a96:	c1 e8 0c             	shr    $0xc,%eax
81001a99:	83 c0 6e             	add    $0x6e,%eax
81001a9c:	eb 35                	jmp    81001ad3 <_free_r+0x31f>
81001a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aa1:	c1 e8 09             	shr    $0x9,%eax
81001aa4:	3d 54 01 00 00       	cmp    $0x154,%eax
81001aa9:	77 0b                	ja     81001ab6 <_free_r+0x302>
81001aab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001aae:	c1 e8 0f             	shr    $0xf,%eax
81001ab1:	83 c0 77             	add    $0x77,%eax
81001ab4:	eb 1d                	jmp    81001ad3 <_free_r+0x31f>
81001ab6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ab9:	c1 e8 09             	shr    $0x9,%eax
81001abc:	3d 54 05 00 00       	cmp    $0x554,%eax
81001ac1:	77 0b                	ja     81001ace <_free_r+0x31a>
81001ac3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ac6:	c1 e8 12             	shr    $0x12,%eax
81001ac9:	83 c0 7c             	add    $0x7c,%eax
81001acc:	eb 05                	jmp    81001ad3 <_free_r+0x31f>
81001ace:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001ad3:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001ad6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001ad9:	83 c0 01             	add    $0x1,%eax
81001adc:	01 c0                	add    %eax,%eax
81001ade:	c1 e0 02             	shl    $0x2,%eax
81001ae1:	05 20 7f 00 81       	add    $0x81007f20,%eax
81001ae6:	83 e8 08             	sub    $0x8,%eax
81001ae9:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001aec:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001aef:	8b 40 08             	mov    0x8(%eax),%eax
81001af2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001af5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001af8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001afb:	75 36                	jne    81001b33 <_free_r+0x37f>
81001afd:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001b02:	8b 58 04             	mov    0x4(%eax),%ebx
81001b05:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001b08:	8d 50 03             	lea    0x3(%eax),%edx
81001b0b:	85 c0                	test   %eax,%eax
81001b0d:	0f 48 c2             	cmovs  %edx,%eax
81001b10:	c1 f8 02             	sar    $0x2,%eax
81001b13:	ba 01 00 00 00       	mov    $0x1,%edx
81001b18:	89 c1                	mov    %eax,%ecx
81001b1a:	d3 e2                	shl    %cl,%edx
81001b1c:	89 d0                	mov    %edx,%eax
81001b1e:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
81001b23:	09 d8                	or     %ebx,%eax
81001b25:	89 42 04             	mov    %eax,0x4(%edx)
81001b28:	eb 28                	jmp    81001b52 <_free_r+0x39e>
81001b2a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b2d:	8b 40 08             	mov    0x8(%eax),%eax
81001b30:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b33:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b36:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001b39:	74 0e                	je     81001b49 <_free_r+0x395>
81001b3b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b3e:	8b 40 04             	mov    0x4(%eax),%eax
81001b41:	83 e0 fc             	and    $0xfffffffc,%eax
81001b44:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001b47:	72 e1                	jb     81001b2a <_free_r+0x376>
81001b49:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b4c:	8b 40 0c             	mov    0xc(%eax),%eax
81001b4f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b55:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b58:	89 50 0c             	mov    %edx,0xc(%eax)
81001b5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b5e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b61:	89 50 08             	mov    %edx,0x8(%eax)
81001b64:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b67:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b6a:	89 50 08             	mov    %edx,0x8(%eax)
81001b6d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b70:	8b 50 08             	mov    0x8(%eax),%edx
81001b73:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b76:	89 50 0c             	mov    %edx,0xc(%eax)
81001b79:	83 ec 0c             	sub    $0xc,%esp
81001b7c:	ff 75 08             	push   0x8(%ebp)
81001b7f:	e8 c7 29 00 00       	call   8100454b <__malloc_unlock>
81001b84:	83 c4 10             	add    $0x10,%esp
81001b87:	eb 01                	jmp    81001b8a <_free_r+0x3d6>
81001b89:	90                   	nop
81001b8a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001b8d:	c9                   	leave  
81001b8e:	c3                   	ret    

81001b8f <_malloc_trim_r>:
81001b8f:	55                   	push   %ebp
81001b90:	89 e5                	mov    %esp,%ebp
81001b92:	83 ec 28             	sub    $0x28,%esp
81001b95:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001b9c:	83 ec 0c             	sub    $0xc,%esp
81001b9f:	ff 75 08             	push   0x8(%ebp)
81001ba2:	e8 9e 29 00 00       	call   81004545 <__malloc_lock>
81001ba7:	83 c4 10             	add    $0x10,%esp
81001baa:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001baf:	8b 40 08             	mov    0x8(%eax),%eax
81001bb2:	8b 40 04             	mov    0x4(%eax),%eax
81001bb5:	83 e0 fc             	and    $0xfffffffc,%eax
81001bb8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bbe:	2b 45 0c             	sub    0xc(%ebp),%eax
81001bc1:	89 c2                	mov    %eax,%edx
81001bc3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001bc6:	01 d0                	add    %edx,%eax
81001bc8:	83 e8 11             	sub    $0x11,%eax
81001bcb:	ba 00 00 00 00       	mov    $0x0,%edx
81001bd0:	f7 75 f4             	divl   -0xc(%ebp)
81001bd3:	83 e8 01             	sub    $0x1,%eax
81001bd6:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001bda:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001bdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001be0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001be3:	7d 18                	jge    81001bfd <_malloc_trim_r+0x6e>
81001be5:	83 ec 0c             	sub    $0xc,%esp
81001be8:	ff 75 08             	push   0x8(%ebp)
81001beb:	e8 5b 29 00 00       	call   8100454b <__malloc_unlock>
81001bf0:	83 c4 10             	add    $0x10,%esp
81001bf3:	b8 00 00 00 00       	mov    $0x0,%eax
81001bf8:	e9 f1 00 00 00       	jmp    81001cee <_malloc_trim_r+0x15f>
81001bfd:	83 ec 08             	sub    $0x8,%esp
81001c00:	6a 00                	push   $0x0
81001c02:	ff 75 08             	push   0x8(%ebp)
81001c05:	e8 cf 42 00 00       	call   81005ed9 <_sbrk_r>
81001c0a:	83 c4 10             	add    $0x10,%esp
81001c0d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c10:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001c15:	8b 50 08             	mov    0x8(%eax),%edx
81001c18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c1b:	01 d0                	add    %edx,%eax
81001c1d:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001c20:	74 18                	je     81001c3a <_malloc_trim_r+0xab>
81001c22:	83 ec 0c             	sub    $0xc,%esp
81001c25:	ff 75 08             	push   0x8(%ebp)
81001c28:	e8 1e 29 00 00       	call   8100454b <__malloc_unlock>
81001c2d:	83 c4 10             	add    $0x10,%esp
81001c30:	b8 00 00 00 00       	mov    $0x0,%eax
81001c35:	e9 b4 00 00 00       	jmp    81001cee <_malloc_trim_r+0x15f>
81001c3a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c3d:	f7 d8                	neg    %eax
81001c3f:	83 ec 08             	sub    $0x8,%esp
81001c42:	50                   	push   %eax
81001c43:	ff 75 08             	push   0x8(%ebp)
81001c46:	e8 8e 42 00 00       	call   81005ed9 <_sbrk_r>
81001c4b:	83 c4 10             	add    $0x10,%esp
81001c4e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c51:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001c55:	75 61                	jne    81001cb8 <_malloc_trim_r+0x129>
81001c57:	83 ec 08             	sub    $0x8,%esp
81001c5a:	6a 00                	push   $0x0
81001c5c:	ff 75 08             	push   0x8(%ebp)
81001c5f:	e8 75 42 00 00       	call   81005ed9 <_sbrk_r>
81001c64:	83 c4 10             	add    $0x10,%esp
81001c67:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c6a:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001c6f:	8b 50 08             	mov    0x8(%eax),%edx
81001c72:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c75:	29 d0                	sub    %edx,%eax
81001c77:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c7a:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001c7e:	7e 23                	jle    81001ca3 <_malloc_trim_r+0x114>
81001c80:	8b 15 2c 83 00 81    	mov    0x8100832c,%edx
81001c86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c89:	29 d0                	sub    %edx,%eax
81001c8b:	a3 20 8b 00 81       	mov    %eax,0x81008b20
81001c90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c93:	83 c8 01             	or     $0x1,%eax
81001c96:	89 c2                	mov    %eax,%edx
81001c98:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001c9d:	8b 40 08             	mov    0x8(%eax),%eax
81001ca0:	89 50 04             	mov    %edx,0x4(%eax)
81001ca3:	83 ec 0c             	sub    $0xc,%esp
81001ca6:	ff 75 08             	push   0x8(%ebp)
81001ca9:	e8 9d 28 00 00       	call   8100454b <__malloc_unlock>
81001cae:	83 c4 10             	add    $0x10,%esp
81001cb1:	b8 00 00 00 00       	mov    $0x0,%eax
81001cb6:	eb 36                	jmp    81001cee <_malloc_trim_r+0x15f>
81001cb8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cbb:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cbe:	83 c8 01             	or     $0x1,%eax
81001cc1:	89 c2                	mov    %eax,%edx
81001cc3:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81001cc8:	8b 40 08             	mov    0x8(%eax),%eax
81001ccb:	89 50 04             	mov    %edx,0x4(%eax)
81001cce:	a1 20 8b 00 81       	mov    0x81008b20,%eax
81001cd3:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001cd6:	a3 20 8b 00 81       	mov    %eax,0x81008b20
81001cdb:	83 ec 0c             	sub    $0xc,%esp
81001cde:	ff 75 08             	push   0x8(%ebp)
81001ce1:	e8 65 28 00 00       	call   8100454b <__malloc_unlock>
81001ce6:	83 c4 10             	add    $0x10,%esp
81001ce9:	b8 01 00 00 00       	mov    $0x1,%eax
81001cee:	c9                   	leave  
81001cef:	c3                   	ret    

81001cf0 <_fseek_r>:
81001cf0:	55                   	push   %ebp
81001cf1:	89 e5                	mov    %esp,%ebp
81001cf3:	83 ec 08             	sub    $0x8,%esp
81001cf6:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cf9:	ff 75 14             	push   0x14(%ebp)
81001cfc:	ff 75 10             	push   0x10(%ebp)
81001cff:	50                   	push   %eax
81001d00:	ff 75 08             	push   0x8(%ebp)
81001d03:	e8 25 00 00 00       	call   81001d2d <_fseeko_r>
81001d08:	83 c4 10             	add    $0x10,%esp
81001d0b:	c9                   	leave  
81001d0c:	c3                   	ret    

81001d0d <fseek>:
81001d0d:	55                   	push   %ebp
81001d0e:	89 e5                	mov    %esp,%ebp
81001d10:	83 ec 08             	sub    $0x8,%esp
81001d13:	8b 55 08             	mov    0x8(%ebp),%edx
81001d16:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81001d1b:	ff 75 10             	push   0x10(%ebp)
81001d1e:	ff 75 0c             	push   0xc(%ebp)
81001d21:	52                   	push   %edx
81001d22:	50                   	push   %eax
81001d23:	e8 c8 ff ff ff       	call   81001cf0 <_fseek_r>
81001d28:	83 c4 10             	add    $0x10,%esp
81001d2b:	c9                   	leave  
81001d2c:	c3                   	ret    

81001d2d <_fseeko_r>:
81001d2d:	55                   	push   %ebp
81001d2e:	89 e5                	mov    %esp,%ebp
81001d30:	56                   	push   %esi
81001d31:	53                   	push   %ebx
81001d32:	83 ec 60             	sub    $0x60,%esp
81001d35:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001d38:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d3f:	8b 45 08             	mov    0x8(%ebp),%eax
81001d42:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d45:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001d49:	74 18                	je     81001d63 <_fseeko_r+0x36>
81001d4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d4e:	8b 40 38             	mov    0x38(%eax),%eax
81001d51:	85 c0                	test   %eax,%eax
81001d53:	75 0e                	jne    81001d63 <_fseeko_r+0x36>
81001d55:	83 ec 0c             	sub    $0xc,%esp
81001d58:	ff 75 e4             	push   -0x1c(%ebp)
81001d5b:	e8 39 f7 ff ff       	call   81001499 <__sinit>
81001d60:	83 c4 10             	add    $0x10,%esp
81001d63:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d67:	98                   	cwtl   
81001d68:	25 00 01 00 00       	and    $0x100,%eax
81001d6d:	85 c0                	test   %eax,%eax
81001d6f:	74 1b                	je     81001d8c <_fseeko_r+0x5f>
81001d71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d75:	98                   	cwtl   
81001d76:	83 e0 08             	and    $0x8,%eax
81001d79:	85 c0                	test   %eax,%eax
81001d7b:	74 0f                	je     81001d8c <_fseeko_r+0x5f>
81001d7d:	83 ec 08             	sub    $0x8,%esp
81001d80:	53                   	push   %ebx
81001d81:	ff 75 08             	push   0x8(%ebp)
81001d84:	e8 0d f2 ff ff       	call   81000f96 <_fflush_r>
81001d89:	83 c4 10             	add    $0x10,%esp
81001d8c:	8b 43 28             	mov    0x28(%ebx),%eax
81001d8f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d92:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001d96:	75 13                	jne    81001dab <_fseeko_r+0x7e>
81001d98:	8b 45 08             	mov    0x8(%ebp),%eax
81001d9b:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001da1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001da6:	e9 2c 04 00 00       	jmp    810021d7 <_fseeko_r+0x4aa>
81001dab:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001daf:	0f 84 bc 00 00 00    	je     81001e71 <_fseeko_r+0x144>
81001db5:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001db9:	0f 8f bb 00 00 00    	jg     81001e7a <_fseeko_r+0x14d>
81001dbf:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001dc3:	0f 84 a8 00 00 00    	je     81001e71 <_fseeko_r+0x144>
81001dc9:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001dcd:	0f 85 a7 00 00 00    	jne    81001e7a <_fseeko_r+0x14d>
81001dd3:	83 ec 08             	sub    $0x8,%esp
81001dd6:	53                   	push   %ebx
81001dd7:	ff 75 08             	push   0x8(%ebp)
81001dda:	e8 b7 f1 ff ff       	call   81000f96 <_fflush_r>
81001ddf:	83 c4 10             	add    $0x10,%esp
81001de2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001de6:	98                   	cwtl   
81001de7:	25 00 10 00 00       	and    $0x1000,%eax
81001dec:	85 c0                	test   %eax,%eax
81001dee:	74 08                	je     81001df8 <_fseeko_r+0xcb>
81001df0:	8b 43 50             	mov    0x50(%ebx),%eax
81001df3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001df6:	eb 26                	jmp    81001e1e <_fseeko_r+0xf1>
81001df8:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001dfb:	6a 01                	push   $0x1
81001dfd:	6a 00                	push   $0x0
81001dff:	50                   	push   %eax
81001e00:	ff 75 08             	push   0x8(%ebp)
81001e03:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e06:	ff d0                	call   *%eax
81001e08:	83 c4 10             	add    $0x10,%esp
81001e0b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001e0e:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001e12:	75 0a                	jne    81001e1e <_fseeko_r+0xf1>
81001e14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e19:	e9 b9 03 00 00       	jmp    810021d7 <_fseeko_r+0x4aa>
81001e1e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e22:	98                   	cwtl   
81001e23:	83 e0 04             	and    $0x4,%eax
81001e26:	85 c0                	test   %eax,%eax
81001e28:	74 15                	je     81001e3f <_fseeko_r+0x112>
81001e2a:	8b 43 04             	mov    0x4(%ebx),%eax
81001e2d:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e30:	8b 43 30             	mov    0x30(%ebx),%eax
81001e33:	85 c0                	test   %eax,%eax
81001e35:	74 24                	je     81001e5b <_fseeko_r+0x12e>
81001e37:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001e3a:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e3d:	eb 1c                	jmp    81001e5b <_fseeko_r+0x12e>
81001e3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e43:	98                   	cwtl   
81001e44:	83 e0 08             	and    $0x8,%eax
81001e47:	85 c0                	test   %eax,%eax
81001e49:	74 10                	je     81001e5b <_fseeko_r+0x12e>
81001e4b:	8b 03                	mov    (%ebx),%eax
81001e4d:	85 c0                	test   %eax,%eax
81001e4f:	74 0a                	je     81001e5b <_fseeko_r+0x12e>
81001e51:	8b 03                	mov    (%ebx),%eax
81001e53:	8b 53 10             	mov    0x10(%ebx),%edx
81001e56:	29 d0                	sub    %edx,%eax
81001e58:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e5b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e5e:	01 45 10             	add    %eax,0x10(%ebp)
81001e61:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001e68:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001e6f:	eb 1c                	jmp    81001e8d <_fseeko_r+0x160>
81001e71:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001e78:	eb 13                	jmp    81001e8d <_fseeko_r+0x160>
81001e7a:	8b 45 08             	mov    0x8(%ebp),%eax
81001e7d:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001e83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e88:	e9 4a 03 00 00       	jmp    810021d7 <_fseeko_r+0x4aa>
81001e8d:	8b 43 10             	mov    0x10(%ebx),%eax
81001e90:	85 c0                	test   %eax,%eax
81001e92:	75 0f                	jne    81001ea3 <_fseeko_r+0x176>
81001e94:	83 ec 08             	sub    $0x8,%esp
81001e97:	53                   	push   %ebx
81001e98:	ff 75 08             	push   0x8(%ebp)
81001e9b:	e8 e7 17 00 00       	call   81003687 <__smakebuf_r>
81001ea0:	83 c4 10             	add    $0x10,%esp
81001ea3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ea7:	98                   	cwtl   
81001ea8:	25 1a 08 00 00       	and    $0x81a,%eax
81001ead:	85 c0                	test   %eax,%eax
81001eaf:	0f 85 7d 02 00 00    	jne    81002132 <_fseeko_r+0x405>
81001eb5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001eb9:	98                   	cwtl   
81001eba:	25 00 04 00 00       	and    $0x400,%eax
81001ebf:	85 c0                	test   %eax,%eax
81001ec1:	75 5f                	jne    81001f22 <_fseeko_r+0x1f5>
81001ec3:	81 7d e0 c2 5f 00 81 	cmpl   $0x81005fc2,-0x20(%ebp)
81001eca:	75 34                	jne    81001f00 <_fseeko_r+0x1d3>
81001ecc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001ed0:	66 85 c0             	test   %ax,%ax
81001ed3:	78 2b                	js     81001f00 <_fseeko_r+0x1d3>
81001ed5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001ed9:	98                   	cwtl   
81001eda:	83 ec 04             	sub    $0x4,%esp
81001edd:	8d 55 98             	lea    -0x68(%ebp),%edx
81001ee0:	52                   	push   %edx
81001ee1:	50                   	push   %eax
81001ee2:	ff 75 08             	push   0x8(%ebp)
81001ee5:	e8 14 03 00 00       	call   810021fe <_fstat_r>
81001eea:	83 c4 10             	add    $0x10,%esp
81001eed:	85 c0                	test   %eax,%eax
81001eef:	75 0f                	jne    81001f00 <_fseeko_r+0x1d3>
81001ef1:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001ef4:	25 00 f0 00 00       	and    $0xf000,%eax
81001ef9:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001efe:	74 10                	je     81001f10 <_fseeko_r+0x1e3>
81001f00:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f04:	80 cc 08             	or     $0x8,%ah
81001f07:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f0b:	e9 2f 02 00 00       	jmp    8100213f <_fseeko_r+0x412>
81001f10:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001f17:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f1b:	80 cc 04             	or     $0x4,%ah
81001f1e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001f22:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001f26:	75 08                	jne    81001f30 <_fseeko_r+0x203>
81001f28:	8b 45 10             	mov    0x10(%ebp),%eax
81001f2b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f2e:	eb 2b                	jmp    81001f5b <_fseeko_r+0x22e>
81001f30:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001f34:	98                   	cwtl   
81001f35:	83 ec 04             	sub    $0x4,%esp
81001f38:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f3b:	52                   	push   %edx
81001f3c:	50                   	push   %eax
81001f3d:	ff 75 08             	push   0x8(%ebp)
81001f40:	e8 b9 02 00 00       	call   810021fe <_fstat_r>
81001f45:	83 c4 10             	add    $0x10,%esp
81001f48:	85 c0                	test   %eax,%eax
81001f4a:	0f 85 e5 01 00 00    	jne    81002135 <_fseeko_r+0x408>
81001f50:	8b 55 a8             	mov    -0x58(%ebp),%edx
81001f53:	8b 45 10             	mov    0x10(%ebp),%eax
81001f56:	01 d0                	add    %edx,%eax
81001f58:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f5b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f5f:	75 49                	jne    81001faa <_fseeko_r+0x27d>
81001f61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f65:	98                   	cwtl   
81001f66:	25 00 10 00 00       	and    $0x1000,%eax
81001f6b:	85 c0                	test   %eax,%eax
81001f6d:	74 08                	je     81001f77 <_fseeko_r+0x24a>
81001f6f:	8b 43 50             	mov    0x50(%ebx),%eax
81001f72:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f75:	eb 20                	jmp    81001f97 <_fseeko_r+0x26a>
81001f77:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001f7a:	6a 01                	push   $0x1
81001f7c:	6a 00                	push   $0x0
81001f7e:	50                   	push   %eax
81001f7f:	ff 75 08             	push   0x8(%ebp)
81001f82:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f85:	ff d0                	call   *%eax
81001f87:	83 c4 10             	add    $0x10,%esp
81001f8a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f8d:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001f91:	0f 84 a1 01 00 00    	je     81002138 <_fseeko_r+0x40b>
81001f97:	8b 43 04             	mov    0x4(%ebx),%eax
81001f9a:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001f9d:	8b 43 30             	mov    0x30(%ebx),%eax
81001fa0:	85 c0                	test   %eax,%eax
81001fa2:	74 06                	je     81001faa <_fseeko_r+0x27d>
81001fa4:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fa7:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001faa:	8b 43 30             	mov    0x30(%ebx),%eax
81001fad:	85 c0                	test   %eax,%eax
81001faf:	74 22                	je     81001fd3 <_fseeko_r+0x2a6>
81001fb1:	8b 43 04             	mov    0x4(%ebx),%eax
81001fb4:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fb7:	8b 43 38             	mov    0x38(%ebx),%eax
81001fba:	8b 53 10             	mov    0x10(%ebx),%edx
81001fbd:	29 d0                	sub    %edx,%eax
81001fbf:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fc2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fc5:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fc8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fcb:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001fce:	01 45 ec             	add    %eax,-0x14(%ebp)
81001fd1:	eb 19                	jmp    81001fec <_fseeko_r+0x2bf>
81001fd3:	8b 03                	mov    (%ebx),%eax
81001fd5:	8b 53 10             	mov    0x10(%ebx),%edx
81001fd8:	29 d0                	sub    %edx,%eax
81001fda:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fdd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fe0:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fe3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fe6:	8b 43 04             	mov    0x4(%ebx),%eax
81001fe9:	01 45 ec             	add    %eax,-0x14(%ebp)
81001fec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fef:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81001ff2:	7c 7c                	jl     81002070 <_fseeko_r+0x343>
81001ff4:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001ff7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ffa:	01 c2                	add    %eax,%edx
81001ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fff:	39 c2                	cmp    %eax,%edx
81002001:	76 6d                	jbe    81002070 <_fseeko_r+0x343>
81002003:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002006:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002009:	89 c6                	mov    %eax,%esi
8100200b:	8b 43 10             	mov    0x10(%ebx),%eax
8100200e:	89 f2                	mov    %esi,%edx
81002010:	01 d0                	add    %edx,%eax
81002012:	89 03                	mov    %eax,(%ebx)
81002014:	89 f2                	mov    %esi,%edx
81002016:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002019:	29 d0                	sub    %edx,%eax
8100201b:	89 43 04             	mov    %eax,0x4(%ebx)
8100201e:	8b 43 30             	mov    0x30(%ebx),%eax
81002021:	85 c0                	test   %eax,%eax
81002023:	74 23                	je     81002048 <_fseeko_r+0x31b>
81002025:	8b 53 30             	mov    0x30(%ebx),%edx
81002028:	8d 43 40             	lea    0x40(%ebx),%eax
8100202b:	39 c2                	cmp    %eax,%edx
8100202d:	74 12                	je     81002041 <_fseeko_r+0x314>
8100202f:	8b 43 30             	mov    0x30(%ebx),%eax
81002032:	83 ec 08             	sub    $0x8,%esp
81002035:	50                   	push   %eax
81002036:	ff 75 08             	push   0x8(%ebp)
81002039:	e8 76 f7 ff ff       	call   810017b4 <_free_r>
8100203e:	83 c4 10             	add    $0x10,%esp
81002041:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002048:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100204c:	83 e0 df             	and    $0xffffffdf,%eax
8100204f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002053:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002056:	83 ec 04             	sub    $0x4,%esp
81002059:	6a 08                	push   $0x8
8100205b:	6a 00                	push   $0x0
8100205d:	50                   	push   %eax
8100205e:	e8 5a 24 00 00       	call   810044bd <memset>
81002063:	83 c4 10             	add    $0x10,%esp
81002066:	b8 00 00 00 00       	mov    $0x0,%eax
8100206b:	e9 67 01 00 00       	jmp    810021d7 <_fseeko_r+0x4aa>
81002070:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002073:	f7 d8                	neg    %eax
81002075:	23 45 f4             	and    -0xc(%ebp),%eax
81002078:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100207b:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100207e:	6a 00                	push   $0x0
81002080:	ff 75 f0             	push   -0x10(%ebp)
81002083:	50                   	push   %eax
81002084:	ff 75 08             	push   0x8(%ebp)
81002087:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100208a:	ff d0                	call   *%eax
8100208c:	83 c4 10             	add    $0x10,%esp
8100208f:	83 f8 ff             	cmp    $0xffffffff,%eax
81002092:	0f 84 a3 00 00 00    	je     8100213b <_fseeko_r+0x40e>
81002098:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100209f:	8b 43 10             	mov    0x10(%ebx),%eax
810020a2:	89 03                	mov    %eax,(%ebx)
810020a4:	8b 43 30             	mov    0x30(%ebx),%eax
810020a7:	85 c0                	test   %eax,%eax
810020a9:	74 23                	je     810020ce <_fseeko_r+0x3a1>
810020ab:	8b 53 30             	mov    0x30(%ebx),%edx
810020ae:	8d 43 40             	lea    0x40(%ebx),%eax
810020b1:	39 c2                	cmp    %eax,%edx
810020b3:	74 12                	je     810020c7 <_fseeko_r+0x39a>
810020b5:	8b 43 30             	mov    0x30(%ebx),%eax
810020b8:	83 ec 08             	sub    $0x8,%esp
810020bb:	50                   	push   %eax
810020bc:	ff 75 08             	push   0x8(%ebp)
810020bf:	e8 f0 f6 ff ff       	call   810017b4 <_free_r>
810020c4:	83 c4 10             	add    $0x10,%esp
810020c7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810020ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810020d2:	83 e0 df             	and    $0xffffffdf,%eax
810020d5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810020d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020dc:	2b 45 f0             	sub    -0x10(%ebp),%eax
810020df:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020e2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810020e6:	74 2d                	je     81002115 <_fseeko_r+0x3e8>
810020e8:	83 ec 08             	sub    $0x8,%esp
810020eb:	53                   	push   %ebx
810020ec:	ff 75 08             	push   0x8(%ebp)
810020ef:	e8 e4 3b 00 00       	call   81005cd8 <__srefill_r>
810020f4:	83 c4 10             	add    $0x10,%esp
810020f7:	85 c0                	test   %eax,%eax
810020f9:	75 43                	jne    8100213e <_fseeko_r+0x411>
810020fb:	8b 43 04             	mov    0x4(%ebx),%eax
810020fe:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002101:	77 3b                	ja     8100213e <_fseeko_r+0x411>
81002103:	8b 13                	mov    (%ebx),%edx
81002105:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002108:	01 d0                	add    %edx,%eax
8100210a:	89 03                	mov    %eax,(%ebx)
8100210c:	8b 43 04             	mov    0x4(%ebx),%eax
8100210f:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002112:	89 43 04             	mov    %eax,0x4(%ebx)
81002115:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002118:	83 ec 04             	sub    $0x4,%esp
8100211b:	6a 08                	push   $0x8
8100211d:	6a 00                	push   $0x0
8100211f:	50                   	push   %eax
81002120:	e8 98 23 00 00       	call   810044bd <memset>
81002125:	83 c4 10             	add    $0x10,%esp
81002128:	b8 00 00 00 00       	mov    $0x0,%eax
8100212d:	e9 a5 00 00 00       	jmp    810021d7 <_fseeko_r+0x4aa>
81002132:	90                   	nop
81002133:	eb 0a                	jmp    8100213f <_fseeko_r+0x412>
81002135:	90                   	nop
81002136:	eb 07                	jmp    8100213f <_fseeko_r+0x412>
81002138:	90                   	nop
81002139:	eb 04                	jmp    8100213f <_fseeko_r+0x412>
8100213b:	90                   	nop
8100213c:	eb 01                	jmp    8100213f <_fseeko_r+0x412>
8100213e:	90                   	nop
8100213f:	83 ec 08             	sub    $0x8,%esp
81002142:	53                   	push   %ebx
81002143:	ff 75 08             	push   0x8(%ebp)
81002146:	e8 4b ee ff ff       	call   81000f96 <_fflush_r>
8100214b:	83 c4 10             	add    $0x10,%esp
8100214e:	85 c0                	test   %eax,%eax
81002150:	75 1a                	jne    8100216c <_fseeko_r+0x43f>
81002152:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002155:	ff 75 14             	push   0x14(%ebp)
81002158:	ff 75 10             	push   0x10(%ebp)
8100215b:	50                   	push   %eax
8100215c:	ff 75 08             	push   0x8(%ebp)
8100215f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002162:	ff d0                	call   *%eax
81002164:	83 c4 10             	add    $0x10,%esp
81002167:	83 f8 ff             	cmp    $0xffffffff,%eax
8100216a:	75 07                	jne    81002173 <_fseeko_r+0x446>
8100216c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002171:	eb 64                	jmp    810021d7 <_fseeko_r+0x4aa>
81002173:	8b 43 30             	mov    0x30(%ebx),%eax
81002176:	85 c0                	test   %eax,%eax
81002178:	74 23                	je     8100219d <_fseeko_r+0x470>
8100217a:	8b 53 30             	mov    0x30(%ebx),%edx
8100217d:	8d 43 40             	lea    0x40(%ebx),%eax
81002180:	39 c2                	cmp    %eax,%edx
81002182:	74 12                	je     81002196 <_fseeko_r+0x469>
81002184:	8b 43 30             	mov    0x30(%ebx),%eax
81002187:	83 ec 08             	sub    $0x8,%esp
8100218a:	50                   	push   %eax
8100218b:	ff 75 08             	push   0x8(%ebp)
8100218e:	e8 21 f6 ff ff       	call   810017b4 <_free_r>
81002193:	83 c4 10             	add    $0x10,%esp
81002196:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100219d:	8b 43 10             	mov    0x10(%ebx),%eax
810021a0:	89 03                	mov    %eax,(%ebx)
810021a2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810021a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021ad:	83 e0 df             	and    $0xffffffdf,%eax
810021b0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021b4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021b8:	80 e4 f7             	and    $0xf7,%ah
810021bb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810021bf:	8d 43 5c             	lea    0x5c(%ebx),%eax
810021c2:	83 ec 04             	sub    $0x4,%esp
810021c5:	6a 08                	push   $0x8
810021c7:	6a 00                	push   $0x0
810021c9:	50                   	push   %eax
810021ca:	e8 ee 22 00 00       	call   810044bd <memset>
810021cf:	83 c4 10             	add    $0x10,%esp
810021d2:	b8 00 00 00 00       	mov    $0x0,%eax
810021d7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810021da:	5b                   	pop    %ebx
810021db:	5e                   	pop    %esi
810021dc:	5d                   	pop    %ebp
810021dd:	c3                   	ret    

810021de <fseeko>:
810021de:	55                   	push   %ebp
810021df:	89 e5                	mov    %esp,%ebp
810021e1:	83 ec 08             	sub    $0x8,%esp
810021e4:	8b 55 08             	mov    0x8(%ebp),%edx
810021e7:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810021ec:	ff 75 10             	push   0x10(%ebp)
810021ef:	ff 75 0c             	push   0xc(%ebp)
810021f2:	52                   	push   %edx
810021f3:	50                   	push   %eax
810021f4:	e8 34 fb ff ff       	call   81001d2d <_fseeko_r>
810021f9:	83 c4 10             	add    $0x10,%esp
810021fc:	c9                   	leave  
810021fd:	c3                   	ret    

810021fe <_fstat_r>:
810021fe:	55                   	push   %ebp
810021ff:	89 e5                	mov    %esp,%ebp
81002201:	83 ec 18             	sub    $0x18,%esp
81002204:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
8100220b:	00 00 00 
8100220e:	83 ec 08             	sub    $0x8,%esp
81002211:	ff 75 10             	push   0x10(%ebp)
81002214:	ff 75 0c             	push   0xc(%ebp)
81002217:	e8 2f e8 ff ff       	call   81000a4b <fstat>
8100221c:	83 c4 10             	add    $0x10,%esp
8100221f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002222:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002226:	75 14                	jne    8100223c <_fstat_r+0x3e>
81002228:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
8100222d:	85 c0                	test   %eax,%eax
8100222f:	74 0b                	je     8100223c <_fstat_r+0x3e>
81002231:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
81002237:	8b 45 08             	mov    0x8(%ebp),%eax
8100223a:	89 10                	mov    %edx,(%eax)
8100223c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100223f:	c9                   	leave  
81002240:	c3                   	ret    

81002241 <__sfvwrite_r>:
81002241:	55                   	push   %ebp
81002242:	89 e5                	mov    %esp,%ebp
81002244:	57                   	push   %edi
81002245:	56                   	push   %esi
81002246:	53                   	push   %ebx
81002247:	83 ec 3c             	sub    $0x3c,%esp
8100224a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100224d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81002254:	8b 45 10             	mov    0x10(%ebp),%eax
81002257:	8b 78 08             	mov    0x8(%eax),%edi
8100225a:	85 ff                	test   %edi,%edi
8100225c:	75 0a                	jne    81002268 <__sfvwrite_r+0x27>
8100225e:	b8 00 00 00 00       	mov    $0x0,%eax
81002263:	e9 6f 04 00 00       	jmp    810026d7 <__sfvwrite_r+0x496>
81002268:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100226c:	98                   	cwtl   
8100226d:	83 e0 08             	and    $0x8,%eax
81002270:	85 c0                	test   %eax,%eax
81002272:	74 07                	je     8100227b <__sfvwrite_r+0x3a>
81002274:	8b 43 10             	mov    0x10(%ebx),%eax
81002277:	85 c0                	test   %eax,%eax
81002279:	75 1d                	jne    81002298 <__sfvwrite_r+0x57>
8100227b:	83 ec 08             	sub    $0x8,%esp
8100227e:	53                   	push   %ebx
8100227f:	ff 75 08             	push   0x8(%ebp)
81002282:	e8 c1 44 00 00       	call   81006748 <__swsetup_r>
81002287:	83 c4 10             	add    $0x10,%esp
8100228a:	85 c0                	test   %eax,%eax
8100228c:	74 0a                	je     81002298 <__sfvwrite_r+0x57>
8100228e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002293:	e9 3f 04 00 00       	jmp    810026d7 <__sfvwrite_r+0x496>
81002298:	8b 45 10             	mov    0x10(%ebp),%eax
8100229b:	8b 00                	mov    (%eax),%eax
8100229d:	89 45 c0             	mov    %eax,-0x40(%ebp)
810022a0:	bf 00 00 00 00       	mov    $0x0,%edi
810022a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022a9:	98                   	cwtl   
810022aa:	83 e0 02             	and    $0x2,%eax
810022ad:	85 c0                	test   %eax,%eax
810022af:	74 68                	je     81002319 <__sfvwrite_r+0xd8>
810022b1:	eb 11                	jmp    810022c4 <__sfvwrite_r+0x83>
810022b3:	8b 45 c0             	mov    -0x40(%ebp),%eax
810022b6:	8b 08                	mov    (%eax),%ecx
810022b8:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810022bb:	8b 78 04             	mov    0x4(%eax),%edi
810022be:	83 c0 08             	add    $0x8,%eax
810022c1:	89 45 c0             	mov    %eax,-0x40(%ebp)
810022c4:	85 ff                	test   %edi,%edi
810022c6:	74 eb                	je     810022b3 <__sfvwrite_r+0x72>
810022c8:	8b 4b 24             	mov    0x24(%ebx),%ecx
810022cb:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810022d0:	39 c7                	cmp    %eax,%edi
810022d2:	0f 46 c7             	cmovbe %edi,%eax
810022d5:	89 c2                	mov    %eax,%edx
810022d7:	8b 43 1c             	mov    0x1c(%ebx),%eax
810022da:	52                   	push   %edx
810022db:	ff 75 c4             	push   -0x3c(%ebp)
810022de:	50                   	push   %eax
810022df:	ff 75 08             	push   0x8(%ebp)
810022e2:	ff d1                	call   *%ecx
810022e4:	83 c4 10             	add    $0x10,%esp
810022e7:	89 c6                	mov    %eax,%esi
810022e9:	85 f6                	test   %esi,%esi
810022eb:	0f 8e cf 03 00 00    	jle    810026c0 <__sfvwrite_r+0x47f>
810022f1:	89 f0                	mov    %esi,%eax
810022f3:	01 45 c4             	add    %eax,-0x3c(%ebp)
810022f6:	89 f0                	mov    %esi,%eax
810022f8:	29 c7                	sub    %eax,%edi
810022fa:	8b 45 10             	mov    0x10(%ebp),%eax
810022fd:	8b 40 08             	mov    0x8(%eax),%eax
81002300:	89 f2                	mov    %esi,%edx
81002302:	29 d0                	sub    %edx,%eax
81002304:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002307:	89 41 08             	mov    %eax,0x8(%ecx)
8100230a:	8b 45 10             	mov    0x10(%ebp),%eax
8100230d:	8b 40 08             	mov    0x8(%eax),%eax
81002310:	85 c0                	test   %eax,%eax
81002312:	75 b0                	jne    810022c4 <__sfvwrite_r+0x83>
81002314:	e9 a0 03 00 00       	jmp    810026b9 <__sfvwrite_r+0x478>
81002319:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100231d:	98                   	cwtl   
8100231e:	83 e0 01             	and    $0x1,%eax
81002321:	85 c0                	test   %eax,%eax
81002323:	0f 85 44 02 00 00    	jne    8100256d <__sfvwrite_r+0x32c>
81002329:	eb 11                	jmp    8100233c <__sfvwrite_r+0xfb>
8100232b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100232e:	8b 08                	mov    (%eax),%ecx
81002330:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002333:	8b 78 04             	mov    0x4(%eax),%edi
81002336:	83 c0 08             	add    $0x8,%eax
81002339:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100233c:	85 ff                	test   %edi,%edi
8100233e:	74 eb                	je     8100232b <__sfvwrite_r+0xea>
81002340:	8b 73 08             	mov    0x8(%ebx),%esi
81002343:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002347:	98                   	cwtl   
81002348:	25 00 02 00 00       	and    $0x200,%eax
8100234d:	85 c0                	test   %eax,%eax
8100234f:	0f 84 4f 01 00 00    	je     810024a4 <__sfvwrite_r+0x263>
81002355:	89 f0                	mov    %esi,%eax
81002357:	39 c7                	cmp    %eax,%edi
81002359:	0f 82 12 01 00 00    	jb     81002471 <__sfvwrite_r+0x230>
8100235f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002363:	98                   	cwtl   
81002364:	25 80 04 00 00       	and    $0x480,%eax
81002369:	85 c0                	test   %eax,%eax
8100236b:	0f 84 00 01 00 00    	je     81002471 <__sfvwrite_r+0x230>
81002371:	8b 03                	mov    (%ebx),%eax
81002373:	8b 53 10             	mov    0x10(%ebx),%edx
81002376:	29 d0                	sub    %edx,%eax
81002378:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100237b:	8b 53 14             	mov    0x14(%ebx),%edx
8100237e:	89 d0                	mov    %edx,%eax
81002380:	01 c0                	add    %eax,%eax
81002382:	01 d0                	add    %edx,%eax
81002384:	89 c2                	mov    %eax,%edx
81002386:	c1 ea 1f             	shr    $0x1f,%edx
81002389:	01 d0                	add    %edx,%eax
8100238b:	d1 f8                	sar    %eax
8100238d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002390:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002393:	01 f8                	add    %edi,%eax
81002395:	8d 50 01             	lea    0x1(%eax),%edx
81002398:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100239b:	39 c2                	cmp    %eax,%edx
8100239d:	76 0b                	jbe    810023aa <__sfvwrite_r+0x169>
8100239f:	8b 45 d0             	mov    -0x30(%ebp),%eax
810023a2:	01 f8                	add    %edi,%eax
810023a4:	83 c0 01             	add    $0x1,%eax
810023a7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810023aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023ae:	98                   	cwtl   
810023af:	25 00 04 00 00       	and    $0x400,%eax
810023b4:	85 c0                	test   %eax,%eax
810023b6:	74 4f                	je     81002407 <__sfvwrite_r+0x1c6>
810023b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810023bb:	83 ec 08             	sub    $0x8,%esp
810023be:	50                   	push   %eax
810023bf:	ff 75 08             	push   0x8(%ebp)
810023c2:	e8 0c 17 00 00       	call   81003ad3 <_malloc_r>
810023c7:	83 c4 10             	add    $0x10,%esp
810023ca:	89 45 dc             	mov    %eax,-0x24(%ebp)
810023cd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810023d1:	75 0e                	jne    810023e1 <__sfvwrite_r+0x1a0>
810023d3:	8b 45 08             	mov    0x8(%ebp),%eax
810023d6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810023dc:	e9 e6 02 00 00       	jmp    810026c7 <__sfvwrite_r+0x486>
810023e1:	8b 55 d0             	mov    -0x30(%ebp),%edx
810023e4:	8b 43 10             	mov    0x10(%ebx),%eax
810023e7:	83 ec 04             	sub    $0x4,%esp
810023ea:	52                   	push   %edx
810023eb:	50                   	push   %eax
810023ec:	ff 75 dc             	push   -0x24(%ebp)
810023ef:	e8 f4 1f 00 00       	call   810043e8 <memcpy>
810023f4:	83 c4 10             	add    $0x10,%esp
810023f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023fb:	66 25 7f fb          	and    $0xfb7f,%ax
810023ff:	0c 80                	or     $0x80,%al
81002401:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002405:	eb 49                	jmp    81002450 <__sfvwrite_r+0x20f>
81002407:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100240a:	8b 43 10             	mov    0x10(%ebx),%eax
8100240d:	83 ec 04             	sub    $0x4,%esp
81002410:	52                   	push   %edx
81002411:	50                   	push   %eax
81002412:	ff 75 08             	push   0x8(%ebp)
81002415:	e8 20 2e 00 00       	call   8100523a <_realloc_r>
8100241a:	83 c4 10             	add    $0x10,%esp
8100241d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002420:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002424:	75 2a                	jne    81002450 <__sfvwrite_r+0x20f>
81002426:	8b 43 10             	mov    0x10(%ebx),%eax
81002429:	83 ec 08             	sub    $0x8,%esp
8100242c:	50                   	push   %eax
8100242d:	ff 75 08             	push   0x8(%ebp)
81002430:	e8 7f f3 ff ff       	call   810017b4 <_free_r>
81002435:	83 c4 10             	add    $0x10,%esp
81002438:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100243c:	24 7f                	and    $0x7f,%al
8100243e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002442:	8b 45 08             	mov    0x8(%ebp),%eax
81002445:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100244b:	e9 77 02 00 00       	jmp    810026c7 <__sfvwrite_r+0x486>
81002450:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002453:	89 43 10             	mov    %eax,0x10(%ebx)
81002456:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002459:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100245c:	01 d0                	add    %edx,%eax
8100245e:	89 03                	mov    %eax,(%ebx)
81002460:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002463:	89 43 14             	mov    %eax,0x14(%ebx)
81002466:	89 fe                	mov    %edi,%esi
81002468:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100246b:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100246e:	89 43 08             	mov    %eax,0x8(%ebx)
81002471:	89 f0                	mov    %esi,%eax
81002473:	39 c7                	cmp    %eax,%edi
81002475:	73 02                	jae    81002479 <__sfvwrite_r+0x238>
81002477:	89 fe                	mov    %edi,%esi
81002479:	89 f2                	mov    %esi,%edx
8100247b:	8b 03                	mov    (%ebx),%eax
8100247d:	83 ec 04             	sub    $0x4,%esp
81002480:	52                   	push   %edx
81002481:	ff 75 c4             	push   -0x3c(%ebp)
81002484:	50                   	push   %eax
81002485:	e8 a6 1f 00 00       	call   81004430 <memmove>
8100248a:	83 c4 10             	add    $0x10,%esp
8100248d:	8b 43 08             	mov    0x8(%ebx),%eax
81002490:	29 f0                	sub    %esi,%eax
81002492:	89 43 08             	mov    %eax,0x8(%ebx)
81002495:	8b 03                	mov    (%ebx),%eax
81002497:	89 f2                	mov    %esi,%edx
81002499:	01 d0                	add    %edx,%eax
8100249b:	89 03                	mov    %eax,(%ebx)
8100249d:	89 fe                	mov    %edi,%esi
8100249f:	e9 9d 00 00 00       	jmp    81002541 <__sfvwrite_r+0x300>
810024a4:	8b 13                	mov    (%ebx),%edx
810024a6:	8b 43 10             	mov    0x10(%ebx),%eax
810024a9:	39 c2                	cmp    %eax,%edx
810024ab:	77 07                	ja     810024b4 <__sfvwrite_r+0x273>
810024ad:	8b 43 14             	mov    0x14(%ebx),%eax
810024b0:	39 c7                	cmp    %eax,%edi
810024b2:	73 4c                	jae    81002500 <__sfvwrite_r+0x2bf>
810024b4:	89 f0                	mov    %esi,%eax
810024b6:	39 c7                	cmp    %eax,%edi
810024b8:	0f 46 c7             	cmovbe %edi,%eax
810024bb:	89 c6                	mov    %eax,%esi
810024bd:	89 f2                	mov    %esi,%edx
810024bf:	8b 03                	mov    (%ebx),%eax
810024c1:	83 ec 04             	sub    $0x4,%esp
810024c4:	52                   	push   %edx
810024c5:	ff 75 c4             	push   -0x3c(%ebp)
810024c8:	50                   	push   %eax
810024c9:	e8 62 1f 00 00       	call   81004430 <memmove>
810024ce:	83 c4 10             	add    $0x10,%esp
810024d1:	8b 43 08             	mov    0x8(%ebx),%eax
810024d4:	29 f0                	sub    %esi,%eax
810024d6:	89 43 08             	mov    %eax,0x8(%ebx)
810024d9:	8b 03                	mov    (%ebx),%eax
810024db:	89 f2                	mov    %esi,%edx
810024dd:	01 d0                	add    %edx,%eax
810024df:	89 03                	mov    %eax,(%ebx)
810024e1:	8b 43 08             	mov    0x8(%ebx),%eax
810024e4:	85 c0                	test   %eax,%eax
810024e6:	75 58                	jne    81002540 <__sfvwrite_r+0x2ff>
810024e8:	83 ec 08             	sub    $0x8,%esp
810024eb:	53                   	push   %ebx
810024ec:	ff 75 08             	push   0x8(%ebp)
810024ef:	e8 a2 ea ff ff       	call   81000f96 <_fflush_r>
810024f4:	83 c4 10             	add    $0x10,%esp
810024f7:	85 c0                	test   %eax,%eax
810024f9:	74 45                	je     81002540 <__sfvwrite_r+0x2ff>
810024fb:	e9 c7 01 00 00       	jmp    810026c7 <__sfvwrite_r+0x486>
81002500:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002506:	77 04                	ja     8100250c <__sfvwrite_r+0x2cb>
81002508:	89 f8                	mov    %edi,%eax
8100250a:	eb 05                	jmp    81002511 <__sfvwrite_r+0x2d0>
8100250c:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002511:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002514:	99                   	cltd   
81002515:	f7 f9                	idiv   %ecx
81002517:	89 c2                	mov    %eax,%edx
81002519:	8b 43 14             	mov    0x14(%ebx),%eax
8100251c:	89 d6                	mov    %edx,%esi
8100251e:	0f af f0             	imul   %eax,%esi
81002521:	8b 53 24             	mov    0x24(%ebx),%edx
81002524:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002527:	56                   	push   %esi
81002528:	ff 75 c4             	push   -0x3c(%ebp)
8100252b:	50                   	push   %eax
8100252c:	ff 75 08             	push   0x8(%ebp)
8100252f:	ff d2                	call   *%edx
81002531:	83 c4 10             	add    $0x10,%esp
81002534:	89 c6                	mov    %eax,%esi
81002536:	85 f6                	test   %esi,%esi
81002538:	0f 8e 85 01 00 00    	jle    810026c3 <__sfvwrite_r+0x482>
8100253e:	eb 01                	jmp    81002541 <__sfvwrite_r+0x300>
81002540:	90                   	nop
81002541:	89 f0                	mov    %esi,%eax
81002543:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002546:	89 f0                	mov    %esi,%eax
81002548:	29 c7                	sub    %eax,%edi
8100254a:	8b 45 10             	mov    0x10(%ebp),%eax
8100254d:	8b 40 08             	mov    0x8(%eax),%eax
81002550:	89 f2                	mov    %esi,%edx
81002552:	29 d0                	sub    %edx,%eax
81002554:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002557:	89 41 08             	mov    %eax,0x8(%ecx)
8100255a:	8b 45 10             	mov    0x10(%ebp),%eax
8100255d:	8b 40 08             	mov    0x8(%eax),%eax
81002560:	85 c0                	test   %eax,%eax
81002562:	0f 85 d4 fd ff ff    	jne    8100233c <__sfvwrite_r+0xfb>
81002568:	e9 4c 01 00 00       	jmp    810026b9 <__sfvwrite_r+0x478>
8100256d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002574:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100257b:	eb 18                	jmp    81002595 <__sfvwrite_r+0x354>
8100257d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002584:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002587:	8b 08                	mov    (%eax),%ecx
81002589:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100258c:	8b 78 04             	mov    0x4(%eax),%edi
8100258f:	83 c0 08             	add    $0x8,%eax
81002592:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002595:	85 ff                	test   %edi,%edi
81002597:	74 e4                	je     8100257d <__sfvwrite_r+0x33c>
81002599:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100259d:	75 32                	jne    810025d1 <__sfvwrite_r+0x390>
8100259f:	83 ec 04             	sub    $0x4,%esp
810025a2:	57                   	push   %edi
810025a3:	6a 0a                	push   $0xa
810025a5:	8b 75 c4             	mov    -0x3c(%ebp),%esi
810025a8:	56                   	push   %esi
810025a9:	e8 52 1d 00 00       	call   81004300 <memchr>
810025ae:	83 c4 10             	add    $0x10,%esp
810025b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810025b4:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810025b8:	74 0a                	je     810025c4 <__sfvwrite_r+0x383>
810025ba:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810025bd:	83 c0 01             	add    $0x1,%eax
810025c0:	29 f0                	sub    %esi,%eax
810025c2:	eb 03                	jmp    810025c7 <__sfvwrite_r+0x386>
810025c4:	8d 47 01             	lea    0x1(%edi),%eax
810025c7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810025ca:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810025d1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025d4:	39 c7                	cmp    %eax,%edi
810025d6:	0f 46 c7             	cmovbe %edi,%eax
810025d9:	89 c1                	mov    %eax,%ecx
810025db:	8b 53 08             	mov    0x8(%ebx),%edx
810025de:	8b 43 14             	mov    0x14(%ebx),%eax
810025e1:	8d 34 02             	lea    (%edx,%eax,1),%esi
810025e4:	8b 13                	mov    (%ebx),%edx
810025e6:	8b 43 10             	mov    0x10(%ebx),%eax
810025e9:	39 c2                	cmp    %eax,%edx
810025eb:	76 38                	jbe    81002625 <__sfvwrite_r+0x3e4>
810025ed:	39 f1                	cmp    %esi,%ecx
810025ef:	7e 34                	jle    81002625 <__sfvwrite_r+0x3e4>
810025f1:	89 f2                	mov    %esi,%edx
810025f3:	8b 03                	mov    (%ebx),%eax
810025f5:	83 ec 04             	sub    $0x4,%esp
810025f8:	52                   	push   %edx
810025f9:	ff 75 c4             	push   -0x3c(%ebp)
810025fc:	50                   	push   %eax
810025fd:	e8 2e 1e 00 00       	call   81004430 <memmove>
81002602:	83 c4 10             	add    $0x10,%esp
81002605:	8b 03                	mov    (%ebx),%eax
81002607:	89 f2                	mov    %esi,%edx
81002609:	01 d0                	add    %edx,%eax
8100260b:	89 03                	mov    %eax,(%ebx)
8100260d:	83 ec 08             	sub    $0x8,%esp
81002610:	53                   	push   %ebx
81002611:	ff 75 08             	push   0x8(%ebp)
81002614:	e8 7d e9 ff ff       	call   81000f96 <_fflush_r>
81002619:	83 c4 10             	add    $0x10,%esp
8100261c:	85 c0                	test   %eax,%eax
8100261e:	74 4f                	je     8100266f <__sfvwrite_r+0x42e>
81002620:	e9 a2 00 00 00       	jmp    810026c7 <__sfvwrite_r+0x486>
81002625:	8b 73 14             	mov    0x14(%ebx),%esi
81002628:	89 c8                	mov    %ecx,%eax
8100262a:	39 c6                	cmp    %eax,%esi
8100262c:	7f 1b                	jg     81002649 <__sfvwrite_r+0x408>
8100262e:	8b 53 24             	mov    0x24(%ebx),%edx
81002631:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002634:	56                   	push   %esi
81002635:	ff 75 c4             	push   -0x3c(%ebp)
81002638:	50                   	push   %eax
81002639:	ff 75 08             	push   0x8(%ebp)
8100263c:	ff d2                	call   *%edx
8100263e:	83 c4 10             	add    $0x10,%esp
81002641:	89 c6                	mov    %eax,%esi
81002643:	85 f6                	test   %esi,%esi
81002645:	7f 28                	jg     8100266f <__sfvwrite_r+0x42e>
81002647:	eb 7e                	jmp    810026c7 <__sfvwrite_r+0x486>
81002649:	89 ce                	mov    %ecx,%esi
8100264b:	89 f2                	mov    %esi,%edx
8100264d:	8b 03                	mov    (%ebx),%eax
8100264f:	83 ec 04             	sub    $0x4,%esp
81002652:	52                   	push   %edx
81002653:	ff 75 c4             	push   -0x3c(%ebp)
81002656:	50                   	push   %eax
81002657:	e8 d4 1d 00 00       	call   81004430 <memmove>
8100265c:	83 c4 10             	add    $0x10,%esp
8100265f:	8b 43 08             	mov    0x8(%ebx),%eax
81002662:	29 f0                	sub    %esi,%eax
81002664:	89 43 08             	mov    %eax,0x8(%ebx)
81002667:	8b 03                	mov    (%ebx),%eax
81002669:	89 f2                	mov    %esi,%edx
8100266b:	01 d0                	add    %edx,%eax
8100266d:	89 03                	mov    %eax,(%ebx)
8100266f:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002672:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002676:	75 1a                	jne    81002692 <__sfvwrite_r+0x451>
81002678:	83 ec 08             	sub    $0x8,%esp
8100267b:	53                   	push   %ebx
8100267c:	ff 75 08             	push   0x8(%ebp)
8100267f:	e8 12 e9 ff ff       	call   81000f96 <_fflush_r>
81002684:	83 c4 10             	add    $0x10,%esp
81002687:	85 c0                	test   %eax,%eax
81002689:	75 3b                	jne    810026c6 <__sfvwrite_r+0x485>
8100268b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002692:	89 f0                	mov    %esi,%eax
81002694:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002697:	89 f0                	mov    %esi,%eax
81002699:	29 c7                	sub    %eax,%edi
8100269b:	8b 45 10             	mov    0x10(%ebp),%eax
8100269e:	8b 40 08             	mov    0x8(%eax),%eax
810026a1:	89 f2                	mov    %esi,%edx
810026a3:	29 d0                	sub    %edx,%eax
810026a5:	8b 4d 10             	mov    0x10(%ebp),%ecx
810026a8:	89 41 08             	mov    %eax,0x8(%ecx)
810026ab:	8b 45 10             	mov    0x10(%ebp),%eax
810026ae:	8b 40 08             	mov    0x8(%eax),%eax
810026b1:	85 c0                	test   %eax,%eax
810026b3:	0f 85 dc fe ff ff    	jne    81002595 <__sfvwrite_r+0x354>
810026b9:	b8 00 00 00 00       	mov    $0x0,%eax
810026be:	eb 17                	jmp    810026d7 <__sfvwrite_r+0x496>
810026c0:	90                   	nop
810026c1:	eb 04                	jmp    810026c7 <__sfvwrite_r+0x486>
810026c3:	90                   	nop
810026c4:	eb 01                	jmp    810026c7 <__sfvwrite_r+0x486>
810026c6:	90                   	nop
810026c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026cb:	83 c8 40             	or     $0x40,%eax
810026ce:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026d7:	8d 65 f4             	lea    -0xc(%ebp),%esp
810026da:	5b                   	pop    %ebx
810026db:	5e                   	pop    %esi
810026dc:	5f                   	pop    %edi
810026dd:	5d                   	pop    %ebp
810026de:	c3                   	ret    

810026df <_fwalk>:
810026df:	55                   	push   %ebp
810026e0:	89 e5                	mov    %esp,%ebp
810026e2:	57                   	push   %edi
810026e3:	56                   	push   %esi
810026e4:	53                   	push   %ebx
810026e5:	83 ec 1c             	sub    $0x1c,%esp
810026e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810026ef:	8b 45 08             	mov    0x8(%ebp),%eax
810026f2:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810026f8:	eb 3e                	jmp    81002738 <_fwalk+0x59>
810026fa:	8b 5e 08             	mov    0x8(%esi),%ebx
810026fd:	8b 7e 04             	mov    0x4(%esi),%edi
81002700:	eb 2d                	jmp    8100272f <_fwalk+0x50>
81002702:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002706:	66 85 c0             	test   %ax,%ax
81002709:	74 21                	je     8100272c <_fwalk+0x4d>
8100270b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100270f:	66 83 f8 01          	cmp    $0x1,%ax
81002713:	74 17                	je     8100272c <_fwalk+0x4d>
81002715:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002719:	66 83 f8 ff          	cmp    $0xffff,%ax
8100271d:	74 0d                	je     8100272c <_fwalk+0x4d>
8100271f:	83 ec 0c             	sub    $0xc,%esp
81002722:	53                   	push   %ebx
81002723:	ff 55 0c             	call   *0xc(%ebp)
81002726:	83 c4 10             	add    $0x10,%esp
81002729:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100272c:	83 c3 68             	add    $0x68,%ebx
8100272f:	83 ef 01             	sub    $0x1,%edi
81002732:	85 ff                	test   %edi,%edi
81002734:	79 cc                	jns    81002702 <_fwalk+0x23>
81002736:	8b 36                	mov    (%esi),%esi
81002738:	85 f6                	test   %esi,%esi
8100273a:	75 be                	jne    810026fa <_fwalk+0x1b>
8100273c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100273f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002742:	5b                   	pop    %ebx
81002743:	5e                   	pop    %esi
81002744:	5f                   	pop    %edi
81002745:	5d                   	pop    %ebp
81002746:	c3                   	ret    

81002747 <_fwalk_reent>:
81002747:	55                   	push   %ebp
81002748:	89 e5                	mov    %esp,%ebp
8100274a:	57                   	push   %edi
8100274b:	56                   	push   %esi
8100274c:	53                   	push   %ebx
8100274d:	83 ec 1c             	sub    $0x1c,%esp
81002750:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002757:	8b 45 08             	mov    0x8(%ebp),%eax
8100275a:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002760:	eb 41                	jmp    810027a3 <_fwalk_reent+0x5c>
81002762:	8b 5e 08             	mov    0x8(%esi),%ebx
81002765:	8b 7e 04             	mov    0x4(%esi),%edi
81002768:	eb 30                	jmp    8100279a <_fwalk_reent+0x53>
8100276a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100276e:	66 85 c0             	test   %ax,%ax
81002771:	74 24                	je     81002797 <_fwalk_reent+0x50>
81002773:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002777:	66 83 f8 01          	cmp    $0x1,%ax
8100277b:	74 1a                	je     81002797 <_fwalk_reent+0x50>
8100277d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002781:	66 83 f8 ff          	cmp    $0xffff,%ax
81002785:	74 10                	je     81002797 <_fwalk_reent+0x50>
81002787:	83 ec 08             	sub    $0x8,%esp
8100278a:	53                   	push   %ebx
8100278b:	ff 75 08             	push   0x8(%ebp)
8100278e:	ff 55 0c             	call   *0xc(%ebp)
81002791:	83 c4 10             	add    $0x10,%esp
81002794:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002797:	83 c3 68             	add    $0x68,%ebx
8100279a:	83 ef 01             	sub    $0x1,%edi
8100279d:	85 ff                	test   %edi,%edi
8100279f:	79 c9                	jns    8100276a <_fwalk_reent+0x23>
810027a1:	8b 36                	mov    (%esi),%esi
810027a3:	85 f6                	test   %esi,%esi
810027a5:	75 bb                	jne    81002762 <_fwalk_reent+0x1b>
810027a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810027aa:	8d 65 f4             	lea    -0xc(%ebp),%esp
810027ad:	5b                   	pop    %ebx
810027ae:	5e                   	pop    %esi
810027af:	5f                   	pop    %edi
810027b0:	5d                   	pop    %ebp
810027b1:	c3                   	ret    

810027b2 <_fwrite_r>:
810027b2:	55                   	push   %ebp
810027b3:	89 e5                	mov    %esp,%ebp
810027b5:	83 ec 28             	sub    $0x28,%esp
810027b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810027bb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810027be:	8b 45 14             	mov    0x14(%ebp),%eax
810027c1:	0f af 45 10          	imul   0x10(%ebp),%eax
810027c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027cb:	89 45 e0             	mov    %eax,-0x20(%ebp)
810027ce:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027d1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027d4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810027d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810027da:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810027e1:	8b 45 08             	mov    0x8(%ebp),%eax
810027e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810027eb:	74 18                	je     81002805 <_fwrite_r+0x53>
810027ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027f0:	8b 40 38             	mov    0x38(%eax),%eax
810027f3:	85 c0                	test   %eax,%eax
810027f5:	75 0e                	jne    81002805 <_fwrite_r+0x53>
810027f7:	83 ec 0c             	sub    $0xc,%esp
810027fa:	ff 75 f0             	push   -0x10(%ebp)
810027fd:	e8 97 ec ff ff       	call   81001499 <__sinit>
81002802:	83 c4 10             	add    $0x10,%esp
81002805:	8b 45 18             	mov    0x18(%ebp),%eax
81002808:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100280c:	98                   	cwtl   
8100280d:	25 00 20 00 00       	and    $0x2000,%eax
81002812:	85 c0                	test   %eax,%eax
81002814:	75 24                	jne    8100283a <_fwrite_r+0x88>
81002816:	8b 45 18             	mov    0x18(%ebp),%eax
81002819:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100281d:	80 cc 20             	or     $0x20,%ah
81002820:	89 c2                	mov    %eax,%edx
81002822:	8b 45 18             	mov    0x18(%ebp),%eax
81002825:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002829:	8b 45 18             	mov    0x18(%ebp),%eax
8100282c:	8b 40 64             	mov    0x64(%eax),%eax
8100282f:	80 e4 df             	and    $0xdf,%ah
81002832:	89 c2                	mov    %eax,%edx
81002834:	8b 45 18             	mov    0x18(%ebp),%eax
81002837:	89 50 64             	mov    %edx,0x64(%eax)
8100283a:	83 ec 04             	sub    $0x4,%esp
8100283d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002840:	50                   	push   %eax
81002841:	ff 75 18             	push   0x18(%ebp)
81002844:	ff 75 08             	push   0x8(%ebp)
81002847:	e8 f5 f9 ff ff       	call   81002241 <__sfvwrite_r>
8100284c:	83 c4 10             	add    $0x10,%esp
8100284f:	85 c0                	test   %eax,%eax
81002851:	75 05                	jne    81002858 <_fwrite_r+0xa6>
81002853:	8b 45 14             	mov    0x14(%ebp),%eax
81002856:	eb 10                	jmp    81002868 <_fwrite_r+0xb6>
81002858:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100285b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100285e:	29 d0                	sub    %edx,%eax
81002860:	ba 00 00 00 00       	mov    $0x0,%edx
81002865:	f7 75 10             	divl   0x10(%ebp)
81002868:	c9                   	leave  
81002869:	c3                   	ret    

8100286a <fwrite>:
8100286a:	55                   	push   %ebp
8100286b:	89 e5                	mov    %esp,%ebp
8100286d:	83 ec 08             	sub    $0x8,%esp
81002870:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002875:	83 ec 0c             	sub    $0xc,%esp
81002878:	ff 75 14             	push   0x14(%ebp)
8100287b:	ff 75 10             	push   0x10(%ebp)
8100287e:	ff 75 0c             	push   0xc(%ebp)
81002881:	ff 75 08             	push   0x8(%ebp)
81002884:	50                   	push   %eax
81002885:	e8 28 ff ff ff       	call   810027b2 <_fwrite_r>
8100288a:	83 c4 20             	add    $0x20,%esp
8100288d:	c9                   	leave  
8100288e:	c3                   	ret    

8100288f <reverse_argv_elements>:
8100288f:	55                   	push   %ebp
81002890:	89 e5                	mov    %esp,%ebp
81002892:	83 ec 10             	sub    $0x10,%esp
81002895:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100289c:	eb 5e                	jmp    810028fc <reverse_argv_elements+0x6d>
8100289e:	8b 45 fc             	mov    -0x4(%ebp),%eax
810028a1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028a8:	8b 45 08             	mov    0x8(%ebp),%eax
810028ab:	01 d0                	add    %edx,%eax
810028ad:	8b 00                	mov    (%eax),%eax
810028af:	89 45 f8             	mov    %eax,-0x8(%ebp)
810028b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810028b5:	2b 45 fc             	sub    -0x4(%ebp),%eax
810028b8:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810028bd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028c4:	8b 45 08             	mov    0x8(%ebp),%eax
810028c7:	01 d0                	add    %edx,%eax
810028c9:	8b 55 fc             	mov    -0x4(%ebp),%edx
810028cc:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810028d3:	8b 55 08             	mov    0x8(%ebp),%edx
810028d6:	01 ca                	add    %ecx,%edx
810028d8:	8b 00                	mov    (%eax),%eax
810028da:	89 02                	mov    %eax,(%edx)
810028dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810028df:	2b 45 fc             	sub    -0x4(%ebp),%eax
810028e2:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810028e7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028ee:	8b 45 08             	mov    0x8(%ebp),%eax
810028f1:	01 c2                	add    %eax,%edx
810028f3:	8b 45 f8             	mov    -0x8(%ebp),%eax
810028f6:	89 02                	mov    %eax,(%edx)
810028f8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810028fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810028ff:	d1 f8                	sar    %eax
81002901:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002904:	7c 98                	jl     8100289e <reverse_argv_elements+0xf>
81002906:	90                   	nop
81002907:	90                   	nop
81002908:	c9                   	leave  
81002909:	c3                   	ret    

8100290a <permute>:
8100290a:	55                   	push   %ebp
8100290b:	89 e5                	mov    %esp,%ebp
8100290d:	ff 75 0c             	push   0xc(%ebp)
81002910:	ff 75 08             	push   0x8(%ebp)
81002913:	e8 77 ff ff ff       	call   8100288f <reverse_argv_elements>
81002918:	83 c4 08             	add    $0x8,%esp
8100291b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100291e:	8b 45 10             	mov    0x10(%ebp),%eax
81002921:	01 d0                	add    %edx,%eax
81002923:	50                   	push   %eax
81002924:	ff 75 08             	push   0x8(%ebp)
81002927:	e8 63 ff ff ff       	call   8100288f <reverse_argv_elements>
8100292c:	83 c4 08             	add    $0x8,%esp
8100292f:	ff 75 10             	push   0x10(%ebp)
81002932:	ff 75 08             	push   0x8(%ebp)
81002935:	e8 55 ff ff ff       	call   8100288f <reverse_argv_elements>
8100293a:	83 c4 08             	add    $0x8,%esp
8100293d:	90                   	nop
8100293e:	c9                   	leave  
8100293f:	c3                   	ret    

81002940 <is_option>:
81002940:	55                   	push   %ebp
81002941:	89 e5                	mov    %esp,%ebp
81002943:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002947:	74 1a                	je     81002963 <is_option+0x23>
81002949:	8b 45 08             	mov    0x8(%ebp),%eax
8100294c:	0f b6 00             	movzbl (%eax),%eax
8100294f:	3c 2d                	cmp    $0x2d,%al
81002951:	74 10                	je     81002963 <is_option+0x23>
81002953:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002957:	74 11                	je     8100296a <is_option+0x2a>
81002959:	8b 45 08             	mov    0x8(%ebp),%eax
8100295c:	0f b6 00             	movzbl (%eax),%eax
8100295f:	3c 2b                	cmp    $0x2b,%al
81002961:	75 07                	jne    8100296a <is_option+0x2a>
81002963:	b8 01 00 00 00       	mov    $0x1,%eax
81002968:	eb 05                	jmp    8100296f <is_option+0x2f>
8100296a:	b8 00 00 00 00       	mov    $0x0,%eax
8100296f:	5d                   	pop    %ebp
81002970:	c3                   	ret    

81002971 <read_globals>:
81002971:	55                   	push   %ebp
81002972:	89 e5                	mov    %esp,%ebp
81002974:	8b 15 d4 8a 00 81    	mov    0x81008ad4,%edx
8100297a:	8b 45 08             	mov    0x8(%ebp),%eax
8100297d:	89 10                	mov    %edx,(%eax)
8100297f:	8b 15 d8 8a 00 81    	mov    0x81008ad8,%edx
81002985:	8b 45 08             	mov    0x8(%ebp),%eax
81002988:	89 50 04             	mov    %edx,0x4(%eax)
8100298b:	8b 15 c4 7a 00 81    	mov    0x81007ac4,%edx
81002991:	8b 45 08             	mov    0x8(%ebp),%eax
81002994:	89 50 08             	mov    %edx,0x8(%eax)
81002997:	8b 15 c8 7a 00 81    	mov    0x81007ac8,%edx
8100299d:	8b 45 08             	mov    0x8(%ebp),%eax
810029a0:	89 50 0c             	mov    %edx,0xc(%eax)
810029a3:	8b 15 dc 8a 00 81    	mov    0x81008adc,%edx
810029a9:	8b 45 08             	mov    0x8(%ebp),%eax
810029ac:	89 50 10             	mov    %edx,0x10(%eax)
810029af:	8b 15 e0 8a 00 81    	mov    0x81008ae0,%edx
810029b5:	8b 45 08             	mov    0x8(%ebp),%eax
810029b8:	89 50 14             	mov    %edx,0x14(%eax)
810029bb:	8b 15 e4 8a 00 81    	mov    0x81008ae4,%edx
810029c1:	8b 45 08             	mov    0x8(%ebp),%eax
810029c4:	89 50 18             	mov    %edx,0x18(%eax)
810029c7:	90                   	nop
810029c8:	5d                   	pop    %ebp
810029c9:	c3                   	ret    

810029ca <write_globals>:
810029ca:	55                   	push   %ebp
810029cb:	89 e5                	mov    %esp,%ebp
810029cd:	8b 45 08             	mov    0x8(%ebp),%eax
810029d0:	8b 00                	mov    (%eax),%eax
810029d2:	a3 d4 8a 00 81       	mov    %eax,0x81008ad4
810029d7:	8b 45 08             	mov    0x8(%ebp),%eax
810029da:	8b 40 04             	mov    0x4(%eax),%eax
810029dd:	a3 d8 8a 00 81       	mov    %eax,0x81008ad8
810029e2:	8b 45 08             	mov    0x8(%ebp),%eax
810029e5:	8b 40 08             	mov    0x8(%eax),%eax
810029e8:	a3 c4 7a 00 81       	mov    %eax,0x81007ac4
810029ed:	8b 45 08             	mov    0x8(%ebp),%eax
810029f0:	8b 40 0c             	mov    0xc(%eax),%eax
810029f3:	a3 c8 7a 00 81       	mov    %eax,0x81007ac8
810029f8:	8b 45 08             	mov    0x8(%ebp),%eax
810029fb:	8b 40 10             	mov    0x10(%eax),%eax
810029fe:	a3 dc 8a 00 81       	mov    %eax,0x81008adc
81002a03:	8b 45 08             	mov    0x8(%ebp),%eax
81002a06:	8b 40 14             	mov    0x14(%eax),%eax
81002a09:	a3 e0 8a 00 81       	mov    %eax,0x81008ae0
81002a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81002a11:	8b 40 18             	mov    0x18(%eax),%eax
81002a14:	a3 e4 8a 00 81       	mov    %eax,0x81008ae4
81002a19:	90                   	nop
81002a1a:	5d                   	pop    %ebp
81002a1b:	c3                   	ret    

81002a1c <getopt_internal>:
81002a1c:	55                   	push   %ebp
81002a1d:	89 e5                	mov    %esp,%ebp
81002a1f:	53                   	push   %ebx
81002a20:	83 ec 34             	sub    $0x34,%esp
81002a23:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002a2a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a31:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002a38:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002a3f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002a46:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002a4d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002a54:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002a5b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002a62:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002a66:	74 35                	je     81002a9d <getopt_internal+0x81>
81002a68:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002a6c:	74 2f                	je     81002a9d <getopt_internal+0x81>
81002a6e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002a72:	75 06                	jne    81002a7a <getopt_internal+0x5e>
81002a74:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002a78:	74 23                	je     81002a9d <getopt_internal+0x81>
81002a7a:	8b 45 20             	mov    0x20(%ebp),%eax
81002a7d:	8b 40 04             	mov    0x4(%eax),%eax
81002a80:	39 45 08             	cmp    %eax,0x8(%ebp)
81002a83:	7e 18                	jle    81002a9d <getopt_internal+0x81>
81002a85:	8b 45 20             	mov    0x20(%ebp),%eax
81002a88:	8b 40 04             	mov    0x4(%eax),%eax
81002a8b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a92:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a95:	01 d0                	add    %edx,%eax
81002a97:	8b 00                	mov    (%eax),%eax
81002a99:	85 c0                	test   %eax,%eax
81002a9b:	75 0a                	jne    81002aa7 <getopt_internal+0x8b>
81002a9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002aa2:	e9 85 0a 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002aa7:	8b 45 20             	mov    0x20(%ebp),%eax
81002aaa:	8b 40 04             	mov    0x4(%eax),%eax
81002aad:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ab4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ab7:	01 d0                	add    %edx,%eax
81002ab9:	8b 00                	mov    (%eax),%eax
81002abb:	83 ec 08             	sub    $0x8,%esp
81002abe:	68 d0 76 00 81       	push   $0x810076d0
81002ac3:	50                   	push   %eax
81002ac4:	e8 73 36 00 00       	call   8100613c <strcmp>
81002ac9:	83 c4 10             	add    $0x10,%esp
81002acc:	85 c0                	test   %eax,%eax
81002ace:	75 19                	jne    81002ae9 <getopt_internal+0xcd>
81002ad0:	8b 45 20             	mov    0x20(%ebp),%eax
81002ad3:	8b 40 04             	mov    0x4(%eax),%eax
81002ad6:	8d 50 01             	lea    0x1(%eax),%edx
81002ad9:	8b 45 20             	mov    0x20(%ebp),%eax
81002adc:	89 50 04             	mov    %edx,0x4(%eax)
81002adf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ae4:	e9 43 0a 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002ae9:	8b 45 20             	mov    0x20(%ebp),%eax
81002aec:	8b 40 04             	mov    0x4(%eax),%eax
81002aef:	85 c0                	test   %eax,%eax
81002af1:	75 28                	jne    81002b1b <getopt_internal+0xff>
81002af3:	8b 45 20             	mov    0x20(%ebp),%eax
81002af6:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002afd:	8b 45 20             	mov    0x20(%ebp),%eax
81002b00:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002b07:	8b 45 20             	mov    0x20(%ebp),%eax
81002b0a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81002b11:	8b 45 20             	mov    0x20(%ebp),%eax
81002b14:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002b1b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b1f:	74 33                	je     81002b54 <getopt_internal+0x138>
81002b21:	8b 45 10             	mov    0x10(%ebp),%eax
81002b24:	0f b6 00             	movzbl (%eax),%eax
81002b27:	3c 2d                	cmp    $0x2d,%al
81002b29:	74 0a                	je     81002b35 <getopt_internal+0x119>
81002b2b:	8b 45 10             	mov    0x10(%ebp),%eax
81002b2e:	0f b6 00             	movzbl (%eax),%eax
81002b31:	3c 2b                	cmp    $0x2b,%al
81002b33:	75 1f                	jne    81002b54 <getopt_internal+0x138>
81002b35:	8b 45 10             	mov    0x10(%ebp),%eax
81002b38:	0f b6 00             	movzbl (%eax),%eax
81002b3b:	3c 2d                	cmp    $0x2d,%al
81002b3d:	75 07                	jne    81002b46 <getopt_internal+0x12a>
81002b3f:	b8 01 00 00 00       	mov    $0x1,%eax
81002b44:	eb 05                	jmp    81002b4b <getopt_internal+0x12f>
81002b46:	b8 02 00 00 00       	mov    $0x2,%eax
81002b4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b4e:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002b52:	eb 23                	jmp    81002b77 <getopt_internal+0x15b>
81002b54:	83 ec 0c             	sub    $0xc,%esp
81002b57:	68 d3 76 00 81       	push   $0x810076d3
81002b5c:	e8 c4 41 00 00       	call   81006d25 <getenv>
81002b61:	83 c4 10             	add    $0x10,%esp
81002b64:	85 c0                	test   %eax,%eax
81002b66:	74 07                	je     81002b6f <getopt_internal+0x153>
81002b68:	b8 02 00 00 00       	mov    $0x2,%eax
81002b6d:	eb 05                	jmp    81002b74 <getopt_internal+0x158>
81002b6f:	b8 00 00 00 00       	mov    $0x0,%eax
81002b74:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b77:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b7b:	74 15                	je     81002b92 <getopt_internal+0x176>
81002b7d:	8b 45 10             	mov    0x10(%ebp),%eax
81002b80:	0f b6 00             	movzbl (%eax),%eax
81002b83:	3c 3a                	cmp    $0x3a,%al
81002b85:	75 0b                	jne    81002b92 <getopt_internal+0x176>
81002b87:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002b8b:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002b92:	8b 45 20             	mov    0x20(%ebp),%eax
81002b95:	8b 40 10             	mov    0x10(%eax),%eax
81002b98:	83 f8 01             	cmp    $0x1,%eax
81002b9b:	0f 85 a2 01 00 00    	jne    81002d43 <getopt_internal+0x327>
81002ba1:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002ba5:	0f 84 02 01 00 00    	je     81002cad <getopt_internal+0x291>
81002bab:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002baf:	0f 84 56 01 00 00    	je     81002d0b <getopt_internal+0x2ef>
81002bb5:	8b 45 20             	mov    0x20(%ebp),%eax
81002bb8:	8b 50 04             	mov    0x4(%eax),%edx
81002bbb:	8b 45 20             	mov    0x20(%ebp),%eax
81002bbe:	89 50 14             	mov    %edx,0x14(%eax)
81002bc1:	8b 45 20             	mov    0x20(%ebp),%eax
81002bc4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002bcb:	eb 1e                	jmp    81002beb <getopt_internal+0x1cf>
81002bcd:	8b 45 20             	mov    0x20(%ebp),%eax
81002bd0:	8b 40 04             	mov    0x4(%eax),%eax
81002bd3:	8d 50 01             	lea    0x1(%eax),%edx
81002bd6:	8b 45 20             	mov    0x20(%ebp),%eax
81002bd9:	89 50 04             	mov    %edx,0x4(%eax)
81002bdc:	8b 45 20             	mov    0x20(%ebp),%eax
81002bdf:	8b 40 18             	mov    0x18(%eax),%eax
81002be2:	8d 50 01             	lea    0x1(%eax),%edx
81002be5:	8b 45 20             	mov    0x20(%ebp),%eax
81002be8:	89 50 18             	mov    %edx,0x18(%eax)
81002beb:	8b 45 20             	mov    0x20(%ebp),%eax
81002bee:	8b 40 04             	mov    0x4(%eax),%eax
81002bf1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002bf8:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bfb:	01 d0                	add    %edx,%eax
81002bfd:	8b 00                	mov    (%eax),%eax
81002bff:	83 ec 08             	sub    $0x8,%esp
81002c02:	ff 75 1c             	push   0x1c(%ebp)
81002c05:	50                   	push   %eax
81002c06:	e8 35 fd ff ff       	call   81002940 <is_option>
81002c0b:	83 c4 10             	add    $0x10,%esp
81002c0e:	85 c0                	test   %eax,%eax
81002c10:	74 bb                	je     81002bcd <getopt_internal+0x1b1>
81002c12:	8b 45 20             	mov    0x20(%ebp),%eax
81002c15:	8b 40 04             	mov    0x4(%eax),%eax
81002c18:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c22:	01 d0                	add    %edx,%eax
81002c24:	8b 00                	mov    (%eax),%eax
81002c26:	85 c0                	test   %eax,%eax
81002c28:	75 16                	jne    81002c40 <getopt_internal+0x224>
81002c2a:	8b 45 20             	mov    0x20(%ebp),%eax
81002c2d:	8b 50 14             	mov    0x14(%eax),%edx
81002c30:	8b 45 20             	mov    0x20(%ebp),%eax
81002c33:	89 50 04             	mov    %edx,0x4(%eax)
81002c36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002c3b:	e9 ec 08 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002c40:	8b 45 20             	mov    0x20(%ebp),%eax
81002c43:	8b 40 04             	mov    0x4(%eax),%eax
81002c46:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c50:	01 d0                	add    %edx,%eax
81002c52:	8b 00                	mov    (%eax),%eax
81002c54:	83 ec 08             	sub    $0x8,%esp
81002c57:	68 d0 76 00 81       	push   $0x810076d0
81002c5c:	50                   	push   %eax
81002c5d:	e8 da 34 00 00       	call   8100613c <strcmp>
81002c62:	83 c4 10             	add    $0x10,%esp
81002c65:	85 c0                	test   %eax,%eax
81002c67:	0f 85 cf 00 00 00    	jne    81002d3c <getopt_internal+0x320>
81002c6d:	8b 45 20             	mov    0x20(%ebp),%eax
81002c70:	8b 40 18             	mov    0x18(%eax),%eax
81002c73:	8b 55 20             	mov    0x20(%ebp),%edx
81002c76:	8b 52 14             	mov    0x14(%edx),%edx
81002c79:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002c80:	8b 55 0c             	mov    0xc(%ebp),%edx
81002c83:	01 ca                	add    %ecx,%edx
81002c85:	83 ec 04             	sub    $0x4,%esp
81002c88:	6a 01                	push   $0x1
81002c8a:	50                   	push   %eax
81002c8b:	52                   	push   %edx
81002c8c:	e8 79 fc ff ff       	call   8100290a <permute>
81002c91:	83 c4 10             	add    $0x10,%esp
81002c94:	8b 45 20             	mov    0x20(%ebp),%eax
81002c97:	8b 40 14             	mov    0x14(%eax),%eax
81002c9a:	8d 50 01             	lea    0x1(%eax),%edx
81002c9d:	8b 45 20             	mov    0x20(%ebp),%eax
81002ca0:	89 50 04             	mov    %edx,0x4(%eax)
81002ca3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ca8:	e9 7f 08 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002cad:	8b 45 20             	mov    0x20(%ebp),%eax
81002cb0:	8b 40 04             	mov    0x4(%eax),%eax
81002cb3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cba:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cbd:	01 d0                	add    %edx,%eax
81002cbf:	8b 00                	mov    (%eax),%eax
81002cc1:	83 ec 08             	sub    $0x8,%esp
81002cc4:	ff 75 1c             	push   0x1c(%ebp)
81002cc7:	50                   	push   %eax
81002cc8:	e8 73 fc ff ff       	call   81002940 <is_option>
81002ccd:	83 c4 10             	add    $0x10,%esp
81002cd0:	85 c0                	test   %eax,%eax
81002cd2:	75 6b                	jne    81002d3f <getopt_internal+0x323>
81002cd4:	8b 45 20             	mov    0x20(%ebp),%eax
81002cd7:	8b 40 04             	mov    0x4(%eax),%eax
81002cda:	8d 48 01             	lea    0x1(%eax),%ecx
81002cdd:	8b 55 20             	mov    0x20(%ebp),%edx
81002ce0:	89 4a 04             	mov    %ecx,0x4(%edx)
81002ce3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cea:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ced:	01 d0                	add    %edx,%eax
81002cef:	8b 10                	mov    (%eax),%edx
81002cf1:	8b 45 20             	mov    0x20(%ebp),%eax
81002cf4:	89 10                	mov    %edx,(%eax)
81002cf6:	8b 45 20             	mov    0x20(%ebp),%eax
81002cf9:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002d00:	8b 45 20             	mov    0x20(%ebp),%eax
81002d03:	8b 40 0c             	mov    0xc(%eax),%eax
81002d06:	e9 21 08 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002d0b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d0e:	8b 40 04             	mov    0x4(%eax),%eax
81002d11:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d18:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d1b:	01 d0                	add    %edx,%eax
81002d1d:	8b 00                	mov    (%eax),%eax
81002d1f:	83 ec 08             	sub    $0x8,%esp
81002d22:	ff 75 1c             	push   0x1c(%ebp)
81002d25:	50                   	push   %eax
81002d26:	e8 15 fc ff ff       	call   81002940 <is_option>
81002d2b:	83 c4 10             	add    $0x10,%esp
81002d2e:	85 c0                	test   %eax,%eax
81002d30:	75 10                	jne    81002d42 <getopt_internal+0x326>
81002d32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d37:	e9 f0 07 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002d3c:	90                   	nop
81002d3d:	eb 04                	jmp    81002d43 <getopt_internal+0x327>
81002d3f:	90                   	nop
81002d40:	eb 01                	jmp    81002d43 <getopt_internal+0x327>
81002d42:	90                   	nop
81002d43:	8b 45 20             	mov    0x20(%ebp),%eax
81002d46:	8b 40 04             	mov    0x4(%eax),%eax
81002d49:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d50:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d53:	01 d0                	add    %edx,%eax
81002d55:	8b 00                	mov    (%eax),%eax
81002d57:	85 c0                	test   %eax,%eax
81002d59:	75 0a                	jne    81002d65 <getopt_internal+0x349>
81002d5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d60:	e9 c7 07 00 00       	jmp    8100352c <getopt_internal+0xb10>
81002d65:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002d69:	0f 84 15 03 00 00    	je     81003084 <getopt_internal+0x668>
81002d6f:	8b 45 20             	mov    0x20(%ebp),%eax
81002d72:	8b 40 04             	mov    0x4(%eax),%eax
81002d75:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d7f:	01 d0                	add    %edx,%eax
81002d81:	8b 00                	mov    (%eax),%eax
81002d83:	83 ec 04             	sub    $0x4,%esp
81002d86:	6a 02                	push   $0x2
81002d88:	68 d0 76 00 81       	push   $0x810076d0
81002d8d:	50                   	push   %eax
81002d8e:	e8 02 16 00 00       	call   81004395 <memcmp>
81002d93:	83 c4 10             	add    $0x10,%esp
81002d96:	85 c0                	test   %eax,%eax
81002d98:	74 29                	je     81002dc3 <getopt_internal+0x3a7>
81002d9a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002d9e:	0f 84 e0 02 00 00    	je     81003084 <getopt_internal+0x668>
81002da4:	8b 45 20             	mov    0x20(%ebp),%eax
81002da7:	8b 40 04             	mov    0x4(%eax),%eax
81002daa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002db1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002db4:	01 d0                	add    %edx,%eax
81002db6:	8b 00                	mov    (%eax),%eax
81002db8:	0f b6 00             	movzbl (%eax),%eax
81002dbb:	3c 2b                	cmp    $0x2b,%al
81002dbd:	0f 85 c1 02 00 00    	jne    81003084 <getopt_internal+0x668>
81002dc3:	8b 45 20             	mov    0x20(%ebp),%eax
81002dc6:	8b 40 10             	mov    0x10(%eax),%eax
81002dc9:	83 f8 01             	cmp    $0x1,%eax
81002dcc:	0f 85 b2 02 00 00    	jne    81003084 <getopt_internal+0x668>
81002dd2:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd5:	8b 40 04             	mov    0x4(%eax),%eax
81002dd8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ddf:	8b 45 0c             	mov    0xc(%ebp),%eax
81002de2:	01 d0                	add    %edx,%eax
81002de4:	8b 00                	mov    (%eax),%eax
81002de6:	83 ec 04             	sub    $0x4,%esp
81002de9:	6a 02                	push   $0x2
81002deb:	68 d0 76 00 81       	push   $0x810076d0
81002df0:	50                   	push   %eax
81002df1:	e8 9f 15 00 00       	call   81004395 <memcmp>
81002df6:	83 c4 10             	add    $0x10,%esp
81002df9:	85 c0                	test   %eax,%eax
81002dfb:	75 0a                	jne    81002e07 <getopt_internal+0x3eb>
81002dfd:	8b 45 20             	mov    0x20(%ebp),%eax
81002e00:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002e07:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002e0e:	8b 45 20             	mov    0x20(%ebp),%eax
81002e11:	8b 40 04             	mov    0x4(%eax),%eax
81002e14:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e1e:	01 d0                	add    %edx,%eax
81002e20:	8b 10                	mov    (%eax),%edx
81002e22:	8b 45 20             	mov    0x20(%ebp),%eax
81002e25:	8b 40 10             	mov    0x10(%eax),%eax
81002e28:	01 d0                	add    %edx,%eax
81002e2a:	83 ec 08             	sub    $0x8,%esp
81002e2d:	6a 3d                	push   $0x3d
81002e2f:	50                   	push   %eax
81002e30:	e8 0b 32 00 00       	call   81006040 <strchr>
81002e35:	83 c4 10             	add    $0x10,%esp
81002e38:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e3b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002e3f:	75 4a                	jne    81002e8b <getopt_internal+0x46f>
81002e41:	8b 45 20             	mov    0x20(%ebp),%eax
81002e44:	8b 40 04             	mov    0x4(%eax),%eax
81002e47:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e51:	01 d0                	add    %edx,%eax
81002e53:	8b 00                	mov    (%eax),%eax
81002e55:	83 ec 0c             	sub    $0xc,%esp
81002e58:	50                   	push   %eax
81002e59:	e8 92 33 00 00       	call   810061f0 <strlen>
81002e5e:	83 c4 10             	add    $0x10,%esp
81002e61:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e64:	8b 45 20             	mov    0x20(%ebp),%eax
81002e67:	8b 40 04             	mov    0x4(%eax),%eax
81002e6a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e71:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e74:	01 d0                	add    %edx,%eax
81002e76:	8b 10                	mov    (%eax),%edx
81002e78:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e7b:	01 d0                	add    %edx,%eax
81002e7d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e80:	8b 45 20             	mov    0x20(%ebp),%eax
81002e83:	8b 40 10             	mov    0x10(%eax),%eax
81002e86:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002e89:	eb 28                	jmp    81002eb3 <getopt_internal+0x497>
81002e8b:	8b 45 20             	mov    0x20(%ebp),%eax
81002e8e:	8b 40 04             	mov    0x4(%eax),%eax
81002e91:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e98:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e9b:	01 d0                	add    %edx,%eax
81002e9d:	8b 08                	mov    (%eax),%ecx
81002e9f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ea2:	29 c8                	sub    %ecx,%eax
81002ea4:	89 c2                	mov    %eax,%edx
81002ea6:	8b 45 20             	mov    0x20(%ebp),%eax
81002ea9:	8b 48 10             	mov    0x10(%eax),%ecx
81002eac:	89 d0                	mov    %edx,%eax
81002eae:	29 c8                	sub    %ecx,%eax
81002eb0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002eb3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002eba:	e9 95 01 00 00       	jmp    81003054 <getopt_internal+0x638>
81002ebf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ec2:	c1 e0 04             	shl    $0x4,%eax
81002ec5:	89 c2                	mov    %eax,%edx
81002ec7:	8b 45 14             	mov    0x14(%ebp),%eax
81002eca:	01 d0                	add    %edx,%eax
81002ecc:	8b 00                	mov    (%eax),%eax
81002ece:	8b 55 20             	mov    0x20(%ebp),%edx
81002ed1:	8b 52 04             	mov    0x4(%edx),%edx
81002ed4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002edb:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ede:	01 ca                	add    %ecx,%edx
81002ee0:	8b 0a                	mov    (%edx),%ecx
81002ee2:	8b 55 20             	mov    0x20(%ebp),%edx
81002ee5:	8b 52 10             	mov    0x10(%edx),%edx
81002ee8:	01 ca                	add    %ecx,%edx
81002eea:	83 ec 04             	sub    $0x4,%esp
81002eed:	ff 75 ec             	push   -0x14(%ebp)
81002ef0:	50                   	push   %eax
81002ef1:	52                   	push   %edx
81002ef2:	e8 9e 14 00 00       	call   81004395 <memcmp>
81002ef7:	83 c4 10             	add    $0x10,%esp
81002efa:	85 c0                	test   %eax,%eax
81002efc:	0f 85 4e 01 00 00    	jne    81003050 <getopt_internal+0x634>
81002f02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f05:	c1 e0 04             	shl    $0x4,%eax
81002f08:	89 c2                	mov    %eax,%edx
81002f0a:	8b 45 14             	mov    0x14(%ebp),%eax
81002f0d:	01 d0                	add    %edx,%eax
81002f0f:	8b 00                	mov    (%eax),%eax
81002f11:	83 ec 0c             	sub    $0xc,%esp
81002f14:	50                   	push   %eax
81002f15:	e8 d6 32 00 00       	call   810061f0 <strlen>
81002f1a:	83 c4 10             	add    $0x10,%esp
81002f1d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002f20:	75 0b                	jne    81002f2d <getopt_internal+0x511>
81002f22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f25:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f28:	e9 3e 01 00 00       	jmp    8100306b <getopt_internal+0x64f>
81002f2d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f31:	79 0b                	jns    81002f3e <getopt_internal+0x522>
81002f33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f36:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f39:	e9 12 01 00 00       	jmp    81003050 <getopt_internal+0x634>
81002f3e:	8b 45 20             	mov    0x20(%ebp),%eax
81002f41:	8b 40 08             	mov    0x8(%eax),%eax
81002f44:	85 c0                	test   %eax,%eax
81002f46:	0f 84 ef 00 00 00    	je     8100303b <getopt_internal+0x61f>
81002f4c:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002f51:	8b 50 0c             	mov    0xc(%eax),%edx
81002f54:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f57:	8b 00                	mov    (%eax),%eax
81002f59:	83 ec 08             	sub    $0x8,%esp
81002f5c:	52                   	push   %edx
81002f5d:	50                   	push   %eax
81002f5e:	e8 32 e8 ff ff       	call   81001795 <fputs>
81002f63:	83 c4 10             	add    $0x10,%esp
81002f66:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002f6b:	8b 40 0c             	mov    0xc(%eax),%eax
81002f6e:	83 ec 08             	sub    $0x8,%esp
81002f71:	50                   	push   %eax
81002f72:	68 e3 76 00 81       	push   $0x810076e3
81002f77:	e8 19 e8 ff ff       	call   81001795 <fputs>
81002f7c:	83 c4 10             	add    $0x10,%esp
81002f7f:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002f84:	8b 50 0c             	mov    0xc(%eax),%edx
81002f87:	8b 45 20             	mov    0x20(%ebp),%eax
81002f8a:	8b 40 04             	mov    0x4(%eax),%eax
81002f8d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002f94:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f97:	01 c8                	add    %ecx,%eax
81002f99:	8b 00                	mov    (%eax),%eax
81002f9b:	83 ec 08             	sub    $0x8,%esp
81002f9e:	52                   	push   %edx
81002f9f:	50                   	push   %eax
81002fa0:	e8 f0 e7 ff ff       	call   81001795 <fputs>
81002fa5:	83 c4 10             	add    $0x10,%esp
81002fa8:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002fad:	8b 40 0c             	mov    0xc(%eax),%eax
81002fb0:	83 ec 08             	sub    $0x8,%esp
81002fb3:	50                   	push   %eax
81002fb4:	68 ee 76 00 81       	push   $0x810076ee
81002fb9:	e8 d7 e7 ff ff       	call   81001795 <fputs>
81002fbe:	83 c4 10             	add    $0x10,%esp
81002fc1:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002fc6:	8b 50 0c             	mov    0xc(%eax),%edx
81002fc9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002fcc:	c1 e0 04             	shl    $0x4,%eax
81002fcf:	89 c1                	mov    %eax,%ecx
81002fd1:	8b 45 14             	mov    0x14(%ebp),%eax
81002fd4:	01 c8                	add    %ecx,%eax
81002fd6:	8b 00                	mov    (%eax),%eax
81002fd8:	83 ec 08             	sub    $0x8,%esp
81002fdb:	52                   	push   %edx
81002fdc:	50                   	push   %eax
81002fdd:	e8 b3 e7 ff ff       	call   81001795 <fputs>
81002fe2:	83 c4 10             	add    $0x10,%esp
81002fe5:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81002fea:	8b 40 0c             	mov    0xc(%eax),%eax
81002fed:	83 ec 08             	sub    $0x8,%esp
81002ff0:	50                   	push   %eax
81002ff1:	68 0b 77 00 81       	push   $0x8100770b
81002ff6:	e8 9a e7 ff ff       	call   81001795 <fputs>
81002ffb:	83 c4 10             	add    $0x10,%esp
81002ffe:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003003:	8b 50 0c             	mov    0xc(%eax),%edx
81003006:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003009:	c1 e0 04             	shl    $0x4,%eax
8100300c:	89 c1                	mov    %eax,%ecx
8100300e:	8b 45 14             	mov    0x14(%ebp),%eax
81003011:	01 c8                	add    %ecx,%eax
81003013:	8b 00                	mov    (%eax),%eax
81003015:	83 ec 08             	sub    $0x8,%esp
81003018:	52                   	push   %edx
81003019:	50                   	push   %eax
8100301a:	e8 76 e7 ff ff       	call   81001795 <fputs>
8100301f:	83 c4 10             	add    $0x10,%esp
81003022:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003027:	8b 40 0c             	mov    0xc(%eax),%eax
8100302a:	83 ec 08             	sub    $0x8,%esp
8100302d:	50                   	push   %eax
8100302e:	68 14 77 00 81       	push   $0x81007714
81003033:	e8 5d e7 ff ff       	call   81001795 <fputs>
81003038:	83 c4 10             	add    $0x10,%esp
8100303b:	8b 45 20             	mov    0x20(%ebp),%eax
8100303e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003045:	8b 45 20             	mov    0x20(%ebp),%eax
81003048:	8b 40 0c             	mov    0xc(%eax),%eax
8100304b:	e9 dc 04 00 00       	jmp    8100352c <getopt_internal+0xb10>
81003050:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003054:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003057:	c1 e0 04             	shl    $0x4,%eax
8100305a:	89 c2                	mov    %eax,%edx
8100305c:	8b 45 14             	mov    0x14(%ebp),%eax
8100305f:	01 d0                	add    %edx,%eax
81003061:	8b 00                	mov    (%eax),%eax
81003063:	85 c0                	test   %eax,%eax
81003065:	0f 85 54 fe ff ff    	jne    81002ebf <getopt_internal+0x4a3>
8100306b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100306f:	78 13                	js     81003084 <getopt_internal+0x668>
81003071:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003074:	c1 e0 04             	shl    $0x4,%eax
81003077:	89 c2                	mov    %eax,%edx
81003079:	8b 45 14             	mov    0x14(%ebp),%eax
8100307c:	01 d0                	add    %edx,%eax
8100307e:	8b 40 04             	mov    0x4(%eax),%eax
81003081:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003084:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003088:	0f 89 9a 01 00 00    	jns    81003228 <getopt_internal+0x80c>
8100308e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003092:	0f 84 90 01 00 00    	je     81003228 <getopt_internal+0x80c>
81003098:	8b 45 20             	mov    0x20(%ebp),%eax
8100309b:	8b 40 04             	mov    0x4(%eax),%eax
8100309e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810030a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810030a8:	01 d0                	add    %edx,%eax
810030aa:	8b 10                	mov    (%eax),%edx
810030ac:	8b 45 20             	mov    0x20(%ebp),%eax
810030af:	8b 40 10             	mov    0x10(%eax),%eax
810030b2:	01 d0                	add    %edx,%eax
810030b4:	0f b6 00             	movzbl (%eax),%eax
810030b7:	0f be c0             	movsbl %al,%eax
810030ba:	83 ec 08             	sub    $0x8,%esp
810030bd:	50                   	push   %eax
810030be:	ff 75 10             	push   0x10(%ebp)
810030c1:	e8 7a 2f 00 00       	call   81006040 <strchr>
810030c6:	83 c4 10             	add    $0x10,%esp
810030c9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810030cc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810030d0:	0f 85 f1 00 00 00    	jne    810031c7 <getopt_internal+0x7ab>
810030d6:	8b 45 20             	mov    0x20(%ebp),%eax
810030d9:	8b 40 08             	mov    0x8(%eax),%eax
810030dc:	85 c0                	test   %eax,%eax
810030de:	0f 84 83 00 00 00    	je     81003167 <getopt_internal+0x74b>
810030e4:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810030e9:	8b 50 0c             	mov    0xc(%eax),%edx
810030ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810030ef:	8b 00                	mov    (%eax),%eax
810030f1:	83 ec 08             	sub    $0x8,%esp
810030f4:	52                   	push   %edx
810030f5:	50                   	push   %eax
810030f6:	e8 9a e6 ff ff       	call   81001795 <fputs>
810030fb:	83 c4 10             	add    $0x10,%esp
810030fe:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003103:	8b 40 0c             	mov    0xc(%eax),%eax
81003106:	83 ec 08             	sub    $0x8,%esp
81003109:	50                   	push   %eax
8100310a:	68 18 77 00 81       	push   $0x81007718
8100310f:	e8 81 e6 ff ff       	call   81001795 <fputs>
81003114:	83 c4 10             	add    $0x10,%esp
81003117:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100311c:	8b 50 0c             	mov    0xc(%eax),%edx
8100311f:	8b 45 20             	mov    0x20(%ebp),%eax
81003122:	8b 40 04             	mov    0x4(%eax),%eax
81003125:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100312c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100312f:	01 c8                	add    %ecx,%eax
81003131:	8b 08                	mov    (%eax),%ecx
81003133:	8b 45 20             	mov    0x20(%ebp),%eax
81003136:	8b 40 10             	mov    0x10(%eax),%eax
81003139:	01 c8                	add    %ecx,%eax
8100313b:	0f b6 00             	movzbl (%eax),%eax
8100313e:	0f be c0             	movsbl %al,%eax
81003141:	83 ec 08             	sub    $0x8,%esp
81003144:	52                   	push   %edx
81003145:	50                   	push   %eax
81003146:	e8 b7 39 00 00       	call   81006b02 <fputc>
8100314b:	83 c4 10             	add    $0x10,%esp
8100314e:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003153:	8b 40 0c             	mov    0xc(%eax),%eax
81003156:	83 ec 08             	sub    $0x8,%esp
81003159:	50                   	push   %eax
8100315a:	68 2f 77 00 81       	push   $0x8100772f
8100315f:	e8 31 e6 ff ff       	call   81001795 <fputs>
81003164:	83 c4 10             	add    $0x10,%esp
81003167:	8b 45 20             	mov    0x20(%ebp),%eax
8100316a:	8b 40 10             	mov    0x10(%eax),%eax
8100316d:	8d 50 01             	lea    0x1(%eax),%edx
81003170:	8b 45 20             	mov    0x20(%ebp),%eax
81003173:	89 50 10             	mov    %edx,0x10(%eax)
81003176:	8b 45 20             	mov    0x20(%ebp),%eax
81003179:	8b 40 04             	mov    0x4(%eax),%eax
8100317c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003183:	8b 45 0c             	mov    0xc(%ebp),%eax
81003186:	01 d0                	add    %edx,%eax
81003188:	8b 10                	mov    (%eax),%edx
8100318a:	8b 45 20             	mov    0x20(%ebp),%eax
8100318d:	8b 40 10             	mov    0x10(%eax),%eax
81003190:	01 d0                	add    %edx,%eax
81003192:	0f b6 00             	movzbl (%eax),%eax
81003195:	84 c0                	test   %al,%al
81003197:	75 19                	jne    810031b2 <getopt_internal+0x796>
81003199:	8b 45 20             	mov    0x20(%ebp),%eax
8100319c:	8b 40 04             	mov    0x4(%eax),%eax
8100319f:	8d 50 01             	lea    0x1(%eax),%edx
810031a2:	8b 45 20             	mov    0x20(%ebp),%eax
810031a5:	89 50 04             	mov    %edx,0x4(%eax)
810031a8:	8b 45 20             	mov    0x20(%ebp),%eax
810031ab:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031b2:	8b 45 20             	mov    0x20(%ebp),%eax
810031b5:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810031bc:	8b 45 20             	mov    0x20(%ebp),%eax
810031bf:	8b 40 0c             	mov    0xc(%eax),%eax
810031c2:	e9 65 03 00 00       	jmp    8100352c <getopt_internal+0xb10>
810031c7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810031ca:	83 c0 01             	add    $0x1,%eax
810031cd:	0f b6 00             	movzbl (%eax),%eax
810031d0:	3c 3a                	cmp    $0x3a,%al
810031d2:	75 1b                	jne    810031ef <getopt_internal+0x7d3>
810031d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810031d7:	83 c0 02             	add    $0x2,%eax
810031da:	0f b6 00             	movzbl (%eax),%eax
810031dd:	3c 3a                	cmp    $0x3a,%al
810031df:	75 07                	jne    810031e8 <getopt_internal+0x7cc>
810031e1:	b8 02 00 00 00       	mov    $0x2,%eax
810031e6:	eb 0c                	jmp    810031f4 <getopt_internal+0x7d8>
810031e8:	b8 01 00 00 00       	mov    $0x1,%eax
810031ed:	eb 05                	jmp    810031f4 <getopt_internal+0x7d8>
810031ef:	b8 00 00 00 00       	mov    $0x0,%eax
810031f4:	89 45 e0             	mov    %eax,-0x20(%ebp)
810031f7:	8b 45 20             	mov    0x20(%ebp),%eax
810031fa:	8b 40 04             	mov    0x4(%eax),%eax
810031fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003204:	8b 45 0c             	mov    0xc(%ebp),%eax
81003207:	01 d0                	add    %edx,%eax
81003209:	8b 10                	mov    (%eax),%edx
8100320b:	8b 45 20             	mov    0x20(%ebp),%eax
8100320e:	8b 40 10             	mov    0x10(%eax),%eax
81003211:	83 c0 01             	add    $0x1,%eax
81003214:	01 d0                	add    %edx,%eax
81003216:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003219:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100321c:	0f b6 00             	movzbl (%eax),%eax
8100321f:	0f be d0             	movsbl %al,%edx
81003222:	8b 45 20             	mov    0x20(%ebp),%eax
81003225:	89 50 0c             	mov    %edx,0xc(%eax)
81003228:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100322f:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81003233:	74 40                	je     81003275 <getopt_internal+0x859>
81003235:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81003239:	0f 85 b0 01 00 00    	jne    810033ef <getopt_internal+0x9d3>
8100323f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003242:	0f b6 00             	movzbl (%eax),%eax
81003245:	3c 3d                	cmp    $0x3d,%al
81003247:	75 04                	jne    8100324d <getopt_internal+0x831>
81003249:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100324d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003250:	0f b6 00             	movzbl (%eax),%eax
81003253:	84 c0                	test   %al,%al
81003255:	74 05                	je     8100325c <getopt_internal+0x840>
81003257:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100325a:	eb 05                	jmp    81003261 <getopt_internal+0x845>
8100325c:	b8 00 00 00 00       	mov    $0x0,%eax
81003261:	8b 55 20             	mov    0x20(%ebp),%edx
81003264:	89 02                	mov    %eax,(%edx)
81003266:	8b 45 20             	mov    0x20(%ebp),%eax
81003269:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003270:	e9 d2 01 00 00       	jmp    81003447 <getopt_internal+0xa2b>
81003275:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003278:	0f b6 00             	movzbl (%eax),%eax
8100327b:	3c 3d                	cmp    $0x3d,%al
8100327d:	75 04                	jne    81003283 <getopt_internal+0x867>
8100327f:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003283:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003286:	0f b6 00             	movzbl (%eax),%eax
81003289:	84 c0                	test   %al,%al
8100328b:	74 17                	je     810032a4 <getopt_internal+0x888>
8100328d:	8b 45 20             	mov    0x20(%ebp),%eax
81003290:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003293:	89 10                	mov    %edx,(%eax)
81003295:	8b 45 20             	mov    0x20(%ebp),%eax
81003298:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100329f:	e9 a3 01 00 00       	jmp    81003447 <getopt_internal+0xa2b>
810032a4:	8b 45 20             	mov    0x20(%ebp),%eax
810032a7:	8b 40 04             	mov    0x4(%eax),%eax
810032aa:	83 c0 01             	add    $0x1,%eax
810032ad:	39 45 08             	cmp    %eax,0x8(%ebp)
810032b0:	0f 8f 0a 01 00 00    	jg     810033c0 <getopt_internal+0x9a4>
810032b6:	8b 45 20             	mov    0x20(%ebp),%eax
810032b9:	8b 40 08             	mov    0x8(%eax),%eax
810032bc:	85 c0                	test   %eax,%eax
810032be:	0f 84 d3 00 00 00    	je     81003397 <getopt_internal+0x97b>
810032c4:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810032c9:	8b 50 0c             	mov    0xc(%eax),%edx
810032cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810032cf:	8b 00                	mov    (%eax),%eax
810032d1:	83 ec 08             	sub    $0x8,%esp
810032d4:	52                   	push   %edx
810032d5:	50                   	push   %eax
810032d6:	e8 ba e4 ff ff       	call   81001795 <fputs>
810032db:	83 c4 10             	add    $0x10,%esp
810032de:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810032e3:	8b 40 0c             	mov    0xc(%eax),%eax
810032e6:	83 ec 08             	sub    $0x8,%esp
810032e9:	50                   	push   %eax
810032ea:	68 34 77 00 81       	push   $0x81007734
810032ef:	e8 a1 e4 ff ff       	call   81001795 <fputs>
810032f4:	83 c4 10             	add    $0x10,%esp
810032f7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810032fb:	78 54                	js     81003351 <getopt_internal+0x935>
810032fd:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003302:	8b 40 0c             	mov    0xc(%eax),%eax
81003305:	83 ec 08             	sub    $0x8,%esp
81003308:	50                   	push   %eax
81003309:	6a 2d                	push   $0x2d
8100330b:	e8 f2 37 00 00       	call   81006b02 <fputc>
81003310:	83 c4 10             	add    $0x10,%esp
81003313:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003318:	8b 50 0c             	mov    0xc(%eax),%edx
8100331b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100331e:	c1 e0 04             	shl    $0x4,%eax
81003321:	89 c1                	mov    %eax,%ecx
81003323:	8b 45 14             	mov    0x14(%ebp),%eax
81003326:	01 c8                	add    %ecx,%eax
81003328:	8b 00                	mov    (%eax),%eax
8100332a:	83 ec 08             	sub    $0x8,%esp
8100332d:	52                   	push   %edx
8100332e:	50                   	push   %eax
8100332f:	e8 61 e4 ff ff       	call   81001795 <fputs>
81003334:	83 c4 10             	add    $0x10,%esp
81003337:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100333b:	74 07                	je     81003344 <getopt_internal+0x928>
8100333d:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003342:	eb 05                	jmp    81003349 <getopt_internal+0x92d>
81003344:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003349:	8b 45 20             	mov    0x20(%ebp),%eax
8100334c:	89 50 0c             	mov    %edx,0xc(%eax)
8100334f:	eb 2d                	jmp    8100337e <getopt_internal+0x962>
81003351:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003356:	8b 50 0c             	mov    0xc(%eax),%edx
81003359:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100335c:	0f b6 00             	movzbl (%eax),%eax
8100335f:	0f be c0             	movsbl %al,%eax
81003362:	83 ec 08             	sub    $0x8,%esp
81003365:	52                   	push   %edx
81003366:	50                   	push   %eax
81003367:	e8 96 37 00 00       	call   81006b02 <fputc>
8100336c:	83 c4 10             	add    $0x10,%esp
8100336f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003372:	0f b6 00             	movzbl (%eax),%eax
81003375:	0f be d0             	movsbl %al,%edx
81003378:	8b 45 20             	mov    0x20(%ebp),%eax
8100337b:	89 50 0c             	mov    %edx,0xc(%eax)
8100337e:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003383:	8b 40 0c             	mov    0xc(%eax),%eax
81003386:	83 ec 08             	sub    $0x8,%esp
81003389:	50                   	push   %eax
8100338a:	68 2f 77 00 81       	push   $0x8100772f
8100338f:	e8 01 e4 ff ff       	call   81001795 <fputs>
81003394:	83 c4 10             	add    $0x10,%esp
81003397:	8b 45 20             	mov    0x20(%ebp),%eax
8100339a:	8b 40 04             	mov    0x4(%eax),%eax
8100339d:	8d 50 01             	lea    0x1(%eax),%edx
810033a0:	8b 45 20             	mov    0x20(%ebp),%eax
810033a3:	89 50 04             	mov    %edx,0x4(%eax)
810033a6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810033aa:	74 0a                	je     810033b6 <getopt_internal+0x99a>
810033ac:	b8 3a 00 00 00       	mov    $0x3a,%eax
810033b1:	e9 76 01 00 00       	jmp    8100352c <getopt_internal+0xb10>
810033b6:	b8 3f 00 00 00       	mov    $0x3f,%eax
810033bb:	e9 6c 01 00 00       	jmp    8100352c <getopt_internal+0xb10>
810033c0:	8b 45 20             	mov    0x20(%ebp),%eax
810033c3:	8b 40 04             	mov    0x4(%eax),%eax
810033c6:	83 c0 01             	add    $0x1,%eax
810033c9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810033d3:	01 d0                	add    %edx,%eax
810033d5:	8b 10                	mov    (%eax),%edx
810033d7:	8b 45 20             	mov    0x20(%ebp),%eax
810033da:	89 10                	mov    %edx,(%eax)
810033dc:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810033e3:	8b 45 20             	mov    0x20(%ebp),%eax
810033e6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810033ed:	eb 58                	jmp    81003447 <getopt_internal+0xa2b>
810033ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810033f3:	79 3e                	jns    81003433 <getopt_internal+0xa17>
810033f5:	8b 45 20             	mov    0x20(%ebp),%eax
810033f8:	8b 40 10             	mov    0x10(%eax),%eax
810033fb:	8d 50 01             	lea    0x1(%eax),%edx
810033fe:	8b 45 20             	mov    0x20(%ebp),%eax
81003401:	89 50 10             	mov    %edx,0x10(%eax)
81003404:	8b 45 20             	mov    0x20(%ebp),%eax
81003407:	8b 40 04             	mov    0x4(%eax),%eax
8100340a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003411:	8b 45 0c             	mov    0xc(%ebp),%eax
81003414:	01 d0                	add    %edx,%eax
81003416:	8b 10                	mov    (%eax),%edx
81003418:	8b 45 20             	mov    0x20(%ebp),%eax
8100341b:	8b 40 10             	mov    0x10(%eax),%eax
8100341e:	01 d0                	add    %edx,%eax
81003420:	0f b6 00             	movzbl (%eax),%eax
81003423:	84 c0                	test   %al,%al
81003425:	75 16                	jne    8100343d <getopt_internal+0xa21>
81003427:	8b 45 20             	mov    0x20(%ebp),%eax
8100342a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003431:	eb 0a                	jmp    8100343d <getopt_internal+0xa21>
81003433:	8b 45 20             	mov    0x20(%ebp),%eax
81003436:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100343d:	8b 45 20             	mov    0x20(%ebp),%eax
81003440:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003446:	90                   	nop
81003447:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100344b:	75 57                	jne    810034a4 <getopt_internal+0xa88>
8100344d:	8b 45 20             	mov    0x20(%ebp),%eax
81003450:	8b 40 10             	mov    0x10(%eax),%eax
81003453:	83 f8 01             	cmp    $0x1,%eax
81003456:	75 4c                	jne    810034a4 <getopt_internal+0xa88>
81003458:	8b 45 20             	mov    0x20(%ebp),%eax
8100345b:	8b 40 18             	mov    0x18(%eax),%eax
8100345e:	85 c0                	test   %eax,%eax
81003460:	74 42                	je     810034a4 <getopt_internal+0xa88>
81003462:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003465:	8d 48 01             	lea    0x1(%eax),%ecx
81003468:	8b 45 20             	mov    0x20(%ebp),%eax
8100346b:	8b 40 18             	mov    0x18(%eax),%eax
8100346e:	8b 55 20             	mov    0x20(%ebp),%edx
81003471:	8b 52 14             	mov    0x14(%edx),%edx
81003474:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100347b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100347e:	01 da                	add    %ebx,%edx
81003480:	83 ec 04             	sub    $0x4,%esp
81003483:	51                   	push   %ecx
81003484:	50                   	push   %eax
81003485:	52                   	push   %edx
81003486:	e8 7f f4 ff ff       	call   8100290a <permute>
8100348b:	83 c4 10             	add    $0x10,%esp
8100348e:	8b 45 20             	mov    0x20(%ebp),%eax
81003491:	8b 40 14             	mov    0x14(%eax),%eax
81003494:	8d 50 01             	lea    0x1(%eax),%edx
81003497:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100349a:	01 c2                	add    %eax,%edx
8100349c:	8b 45 20             	mov    0x20(%ebp),%eax
8100349f:	89 50 04             	mov    %edx,0x4(%eax)
810034a2:	eb 1f                	jmp    810034c3 <getopt_internal+0xaa7>
810034a4:	8b 45 20             	mov    0x20(%ebp),%eax
810034a7:	8b 40 10             	mov    0x10(%eax),%eax
810034aa:	83 f8 01             	cmp    $0x1,%eax
810034ad:	75 14                	jne    810034c3 <getopt_internal+0xaa7>
810034af:	8b 45 20             	mov    0x20(%ebp),%eax
810034b2:	8b 40 04             	mov    0x4(%eax),%eax
810034b5:	8d 50 01             	lea    0x1(%eax),%edx
810034b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034bb:	01 c2                	add    %eax,%edx
810034bd:	8b 45 20             	mov    0x20(%ebp),%eax
810034c0:	89 50 04             	mov    %edx,0x4(%eax)
810034c3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034c7:	78 5d                	js     81003526 <getopt_internal+0xb0a>
810034c9:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810034cd:	74 08                	je     810034d7 <getopt_internal+0xabb>
810034cf:	8b 45 18             	mov    0x18(%ebp),%eax
810034d2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810034d5:	89 10                	mov    %edx,(%eax)
810034d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810034da:	c1 e0 04             	shl    $0x4,%eax
810034dd:	89 c2                	mov    %eax,%edx
810034df:	8b 45 14             	mov    0x14(%ebp),%eax
810034e2:	01 d0                	add    %edx,%eax
810034e4:	8b 40 08             	mov    0x8(%eax),%eax
810034e7:	85 c0                	test   %eax,%eax
810034e9:	74 29                	je     81003514 <getopt_internal+0xaf8>
810034eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810034ee:	c1 e0 04             	shl    $0x4,%eax
810034f1:	89 c2                	mov    %eax,%edx
810034f3:	8b 45 14             	mov    0x14(%ebp),%eax
810034f6:	01 c2                	add    %eax,%edx
810034f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810034fb:	c1 e0 04             	shl    $0x4,%eax
810034fe:	89 c1                	mov    %eax,%ecx
81003500:	8b 45 14             	mov    0x14(%ebp),%eax
81003503:	01 c8                	add    %ecx,%eax
81003505:	8b 40 08             	mov    0x8(%eax),%eax
81003508:	8b 52 0c             	mov    0xc(%edx),%edx
8100350b:	89 10                	mov    %edx,(%eax)
8100350d:	b8 00 00 00 00       	mov    $0x0,%eax
81003512:	eb 18                	jmp    8100352c <getopt_internal+0xb10>
81003514:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003517:	c1 e0 04             	shl    $0x4,%eax
8100351a:	89 c2                	mov    %eax,%edx
8100351c:	8b 45 14             	mov    0x14(%ebp),%eax
8100351f:	01 d0                	add    %edx,%eax
81003521:	8b 40 0c             	mov    0xc(%eax),%eax
81003524:	eb 06                	jmp    8100352c <getopt_internal+0xb10>
81003526:	8b 45 20             	mov    0x20(%ebp),%eax
81003529:	8b 40 0c             	mov    0xc(%eax),%eax
8100352c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100352f:	c9                   	leave  
81003530:	c3                   	ret    

81003531 <getopt>:
81003531:	55                   	push   %ebp
81003532:	89 e5                	mov    %esp,%ebp
81003534:	83 ec 28             	sub    $0x28,%esp
81003537:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100353a:	50                   	push   %eax
8100353b:	e8 31 f4 ff ff       	call   81002971 <read_globals>
81003540:	83 c4 04             	add    $0x4,%esp
81003543:	83 ec 04             	sub    $0x4,%esp
81003546:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003549:	50                   	push   %eax
8100354a:	6a 00                	push   $0x0
8100354c:	6a 00                	push   $0x0
8100354e:	6a 00                	push   $0x0
81003550:	ff 75 10             	push   0x10(%ebp)
81003553:	ff 75 0c             	push   0xc(%ebp)
81003556:	ff 75 08             	push   0x8(%ebp)
81003559:	e8 be f4 ff ff       	call   81002a1c <getopt_internal>
8100355e:	83 c4 20             	add    $0x20,%esp
81003561:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003564:	83 ec 0c             	sub    $0xc,%esp
81003567:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100356a:	50                   	push   %eax
8100356b:	e8 5a f4 ff ff       	call   810029ca <write_globals>
81003570:	83 c4 10             	add    $0x10,%esp
81003573:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003576:	c9                   	leave  
81003577:	c3                   	ret    

81003578 <getopt_long>:
81003578:	55                   	push   %ebp
81003579:	89 e5                	mov    %esp,%ebp
8100357b:	83 ec 28             	sub    $0x28,%esp
8100357e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003581:	50                   	push   %eax
81003582:	e8 ea f3 ff ff       	call   81002971 <read_globals>
81003587:	83 c4 04             	add    $0x4,%esp
8100358a:	83 ec 04             	sub    $0x4,%esp
8100358d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003590:	50                   	push   %eax
81003591:	6a 00                	push   $0x0
81003593:	ff 75 18             	push   0x18(%ebp)
81003596:	ff 75 14             	push   0x14(%ebp)
81003599:	ff 75 10             	push   0x10(%ebp)
8100359c:	ff 75 0c             	push   0xc(%ebp)
8100359f:	ff 75 08             	push   0x8(%ebp)
810035a2:	e8 75 f4 ff ff       	call   81002a1c <getopt_internal>
810035a7:	83 c4 20             	add    $0x20,%esp
810035aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810035ad:	83 ec 0c             	sub    $0xc,%esp
810035b0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035b3:	50                   	push   %eax
810035b4:	e8 11 f4 ff ff       	call   810029ca <write_globals>
810035b9:	83 c4 10             	add    $0x10,%esp
810035bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035bf:	c9                   	leave  
810035c0:	c3                   	ret    

810035c1 <getopt_long_only>:
810035c1:	55                   	push   %ebp
810035c2:	89 e5                	mov    %esp,%ebp
810035c4:	83 ec 28             	sub    $0x28,%esp
810035c7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035ca:	50                   	push   %eax
810035cb:	e8 a1 f3 ff ff       	call   81002971 <read_globals>
810035d0:	83 c4 04             	add    $0x4,%esp
810035d3:	83 ec 04             	sub    $0x4,%esp
810035d6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035d9:	50                   	push   %eax
810035da:	6a 01                	push   $0x1
810035dc:	ff 75 18             	push   0x18(%ebp)
810035df:	ff 75 14             	push   0x14(%ebp)
810035e2:	ff 75 10             	push   0x10(%ebp)
810035e5:	ff 75 0c             	push   0xc(%ebp)
810035e8:	ff 75 08             	push   0x8(%ebp)
810035eb:	e8 2c f4 ff ff       	call   81002a1c <getopt_internal>
810035f0:	83 c4 20             	add    $0x20,%esp
810035f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810035f6:	83 ec 0c             	sub    $0xc,%esp
810035f9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035fc:	50                   	push   %eax
810035fd:	e8 c8 f3 ff ff       	call   810029ca <write_globals>
81003602:	83 c4 10             	add    $0x10,%esp
81003605:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003608:	c9                   	leave  
81003609:	c3                   	ret    

8100360a <__getopt_r>:
8100360a:	55                   	push   %ebp
8100360b:	89 e5                	mov    %esp,%ebp
8100360d:	83 ec 08             	sub    $0x8,%esp
81003610:	83 ec 04             	sub    $0x4,%esp
81003613:	ff 75 14             	push   0x14(%ebp)
81003616:	6a 00                	push   $0x0
81003618:	6a 00                	push   $0x0
8100361a:	6a 00                	push   $0x0
8100361c:	ff 75 10             	push   0x10(%ebp)
8100361f:	ff 75 0c             	push   0xc(%ebp)
81003622:	ff 75 08             	push   0x8(%ebp)
81003625:	e8 f2 f3 ff ff       	call   81002a1c <getopt_internal>
8100362a:	83 c4 20             	add    $0x20,%esp
8100362d:	c9                   	leave  
8100362e:	c3                   	ret    

8100362f <__getopt_long_r>:
8100362f:	55                   	push   %ebp
81003630:	89 e5                	mov    %esp,%ebp
81003632:	83 ec 08             	sub    $0x8,%esp
81003635:	83 ec 04             	sub    $0x4,%esp
81003638:	ff 75 1c             	push   0x1c(%ebp)
8100363b:	6a 00                	push   $0x0
8100363d:	ff 75 18             	push   0x18(%ebp)
81003640:	ff 75 14             	push   0x14(%ebp)
81003643:	ff 75 10             	push   0x10(%ebp)
81003646:	ff 75 0c             	push   0xc(%ebp)
81003649:	ff 75 08             	push   0x8(%ebp)
8100364c:	e8 cb f3 ff ff       	call   81002a1c <getopt_internal>
81003651:	83 c4 20             	add    $0x20,%esp
81003654:	c9                   	leave  
81003655:	c3                   	ret    

81003656 <__getopt_long_only_r>:
81003656:	55                   	push   %ebp
81003657:	89 e5                	mov    %esp,%ebp
81003659:	83 ec 08             	sub    $0x8,%esp
8100365c:	83 ec 04             	sub    $0x4,%esp
8100365f:	ff 75 1c             	push   0x1c(%ebp)
81003662:	6a 01                	push   $0x1
81003664:	ff 75 18             	push   0x18(%ebp)
81003667:	ff 75 14             	push   0x14(%ebp)
8100366a:	ff 75 10             	push   0x10(%ebp)
8100366d:	ff 75 0c             	push   0xc(%ebp)
81003670:	ff 75 08             	push   0x8(%ebp)
81003673:	e8 a4 f3 ff ff       	call   81002a1c <getopt_internal>
81003678:	83 c4 20             	add    $0x20,%esp
8100367b:	c9                   	leave  
8100367c:	c3                   	ret    

8100367d <__getreent>:
8100367d:	55                   	push   %ebp
8100367e:	89 e5                	mov    %esp,%ebp
81003680:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003685:	5d                   	pop    %ebp
81003686:	c3                   	ret    

81003687 <__smakebuf_r>:
81003687:	55                   	push   %ebp
81003688:	89 e5                	mov    %esp,%ebp
8100368a:	56                   	push   %esi
8100368b:	53                   	push   %ebx
8100368c:	83 ec 10             	sub    $0x10,%esp
8100368f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003692:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003696:	98                   	cwtl   
81003697:	83 e0 02             	and    $0x2,%eax
8100369a:	85 c0                	test   %eax,%eax
8100369c:	74 16                	je     810036b4 <__smakebuf_r+0x2d>
8100369e:	8d 43 43             	lea    0x43(%ebx),%eax
810036a1:	89 03                	mov    %eax,(%ebx)
810036a3:	8b 03                	mov    (%ebx),%eax
810036a5:	89 43 10             	mov    %eax,0x10(%ebx)
810036a8:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810036af:	e9 b9 00 00 00       	jmp    8100376d <__smakebuf_r+0xe6>
810036b4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810036b7:	50                   	push   %eax
810036b8:	8d 45 f0             	lea    -0x10(%ebp),%eax
810036bb:	50                   	push   %eax
810036bc:	53                   	push   %ebx
810036bd:	ff 75 08             	push   0x8(%ebp)
810036c0:	e8 af 00 00 00       	call   81003774 <__swhatbuf_r>
810036c5:	83 c4 10             	add    $0x10,%esp
810036c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036ce:	83 ec 08             	sub    $0x8,%esp
810036d1:	50                   	push   %eax
810036d2:	ff 75 08             	push   0x8(%ebp)
810036d5:	e8 f9 03 00 00       	call   81003ad3 <_malloc_r>
810036da:	83 c4 10             	add    $0x10,%esp
810036dd:	89 c6                	mov    %eax,%esi
810036df:	85 f6                	test   %esi,%esi
810036e1:	75 2f                	jne    81003712 <__smakebuf_r+0x8b>
810036e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036e7:	98                   	cwtl   
810036e8:	25 00 02 00 00       	and    $0x200,%eax
810036ed:	85 c0                	test   %eax,%eax
810036ef:	75 7c                	jne    8100376d <__smakebuf_r+0xe6>
810036f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036f5:	83 e0 fc             	and    $0xfffffffc,%eax
810036f8:	83 c8 02             	or     $0x2,%eax
810036fb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036ff:	8d 43 43             	lea    0x43(%ebx),%eax
81003702:	89 03                	mov    %eax,(%ebx)
81003704:	8b 03                	mov    (%ebx),%eax
81003706:	89 43 10             	mov    %eax,0x10(%ebx)
81003709:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003710:	eb 5b                	jmp    8100376d <__smakebuf_r+0xe6>
81003712:	8b 45 08             	mov    0x8(%ebp),%eax
81003715:	c7 40 3c 5e 14 00 81 	movl   $0x8100145e,0x3c(%eax)
8100371c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003720:	0c 80                	or     $0x80,%al
81003722:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003726:	89 33                	mov    %esi,(%ebx)
81003728:	8b 03                	mov    (%ebx),%eax
8100372a:	89 43 10             	mov    %eax,0x10(%ebx)
8100372d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003730:	89 43 14             	mov    %eax,0x14(%ebx)
81003733:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003736:	85 c0                	test   %eax,%eax
81003738:	74 26                	je     81003760 <__smakebuf_r+0xd9>
8100373a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100373e:	98                   	cwtl   
8100373f:	83 ec 08             	sub    $0x8,%esp
81003742:	50                   	push   %eax
81003743:	ff 75 08             	push   0x8(%ebp)
81003746:	e8 04 37 00 00       	call   81006e4f <_isatty_r>
8100374b:	83 c4 10             	add    $0x10,%esp
8100374e:	85 c0                	test   %eax,%eax
81003750:	74 0e                	je     81003760 <__smakebuf_r+0xd9>
81003752:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003756:	83 e0 fc             	and    $0xfffffffc,%eax
81003759:	83 c8 01             	or     $0x1,%eax
8100375c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003760:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003764:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003767:	09 d0                	or     %edx,%eax
81003769:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100376d:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003770:	5b                   	pop    %ebx
81003771:	5e                   	pop    %esi
81003772:	5d                   	pop    %ebp
81003773:	c3                   	ret    

81003774 <__swhatbuf_r>:
81003774:	55                   	push   %ebp
81003775:	89 e5                	mov    %esp,%ebp
81003777:	83 ec 58             	sub    $0x58,%esp
8100377a:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003781:	8b 45 0c             	mov    0xc(%ebp),%eax
81003784:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003788:	66 85 c0             	test   %ax,%ax
8100378b:	78 1f                	js     810037ac <__swhatbuf_r+0x38>
8100378d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003790:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003794:	98                   	cwtl   
81003795:	83 ec 04             	sub    $0x4,%esp
81003798:	8d 55 ac             	lea    -0x54(%ebp),%edx
8100379b:	52                   	push   %edx
8100379c:	50                   	push   %eax
8100379d:	ff 75 08             	push   0x8(%ebp)
810037a0:	e8 59 ea ff ff       	call   810021fe <_fstat_r>
810037a5:	83 c4 10             	add    $0x10,%esp
810037a8:	85 c0                	test   %eax,%eax
810037aa:	79 35                	jns    810037e1 <__swhatbuf_r+0x6d>
810037ac:	8b 45 14             	mov    0x14(%ebp),%eax
810037af:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810037b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810037bc:	98                   	cwtl   
810037bd:	25 80 00 00 00       	and    $0x80,%eax
810037c2:	85 c0                	test   %eax,%eax
810037c4:	74 0b                	je     810037d1 <__swhatbuf_r+0x5d>
810037c6:	8b 45 10             	mov    0x10(%ebp),%eax
810037c9:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810037cf:	eb 09                	jmp    810037da <__swhatbuf_r+0x66>
810037d1:	8b 45 10             	mov    0x10(%ebp),%eax
810037d4:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810037da:	b8 00 00 00 00       	mov    $0x0,%eax
810037df:	eb 24                	jmp    81003805 <__swhatbuf_r+0x91>
810037e1:	8b 45 b0             	mov    -0x50(%ebp),%eax
810037e4:	25 00 f0 00 00       	and    $0xf000,%eax
810037e9:	3d 00 20 00 00       	cmp    $0x2000,%eax
810037ee:	0f 94 c0             	sete   %al
810037f1:	0f b6 d0             	movzbl %al,%edx
810037f4:	8b 45 14             	mov    0x14(%ebp),%eax
810037f7:	89 10                	mov    %edx,(%eax)
810037f9:	8b 45 10             	mov    0x10(%ebp),%eax
810037fc:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003802:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003805:	c9                   	leave  
81003806:	c3                   	ret    

81003807 <malloc>:
81003807:	55                   	push   %ebp
81003808:	89 e5                	mov    %esp,%ebp
8100380a:	83 ec 08             	sub    $0x8,%esp
8100380d:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81003812:	83 ec 08             	sub    $0x8,%esp
81003815:	ff 75 08             	push   0x8(%ebp)
81003818:	50                   	push   %eax
81003819:	e8 b5 02 00 00       	call   81003ad3 <_malloc_r>
8100381e:	83 c4 10             	add    $0x10,%esp
81003821:	c9                   	leave  
81003822:	c3                   	ret    

81003823 <free>:
81003823:	55                   	push   %ebp
81003824:	89 e5                	mov    %esp,%ebp
81003826:	83 ec 08             	sub    $0x8,%esp
81003829:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100382e:	83 ec 08             	sub    $0x8,%esp
81003831:	ff 75 08             	push   0x8(%ebp)
81003834:	50                   	push   %eax
81003835:	e8 7a df ff ff       	call   810017b4 <_free_r>
8100383a:	83 c4 10             	add    $0x10,%esp
8100383d:	90                   	nop
8100383e:	c9                   	leave  
8100383f:	c3                   	ret    

81003840 <malloc_extend_top>:
81003840:	55                   	push   %ebp
81003841:	89 e5                	mov    %esp,%ebp
81003843:	83 ec 38             	sub    $0x38,%esp
81003846:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100384d:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003852:	8b 40 08             	mov    0x8(%eax),%eax
81003855:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003858:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100385b:	8b 40 04             	mov    0x4(%eax),%eax
8100385e:	83 e0 fc             	and    $0xfffffffc,%eax
81003861:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003864:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003867:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100386a:	01 d0                	add    %edx,%eax
8100386c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100386f:	8b 15 00 8b 00 81    	mov    0x81008b00,%edx
81003875:	8b 45 0c             	mov    0xc(%ebp),%eax
81003878:	01 d0                	add    %edx,%eax
8100387a:	83 c0 10             	add    $0x10,%eax
8100387d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003880:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003887:	a1 2c 83 00 81       	mov    0x8100832c,%eax
8100388c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100388f:	74 15                	je     810038a6 <malloc_extend_top+0x66>
81003891:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003894:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003897:	01 d0                	add    %edx,%eax
81003899:	8d 50 ff             	lea    -0x1(%eax),%edx
8100389c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100389f:	f7 d8                	neg    %eax
810038a1:	21 d0                	and    %edx,%eax
810038a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038a6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038a9:	83 ec 08             	sub    $0x8,%esp
810038ac:	50                   	push   %eax
810038ad:	ff 75 08             	push   0x8(%ebp)
810038b0:	e8 24 26 00 00       	call   81005ed9 <_sbrk_r>
810038b5:	83 c4 10             	add    $0x10,%esp
810038b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038bb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810038bf:	0f 84 0b 02 00 00    	je     81003ad0 <malloc_extend_top+0x290>
810038c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038c8:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810038cb:	73 0e                	jae    810038db <malloc_extend_top+0x9b>
810038cd:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810038d2:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810038d5:	0f 85 f5 01 00 00    	jne    81003ad0 <malloc_extend_top+0x290>
810038db:	a1 20 8b 00 81       	mov    0x81008b20,%eax
810038e0:	89 c2                	mov    %eax,%edx
810038e2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038e5:	01 d0                	add    %edx,%eax
810038e7:	a3 20 8b 00 81       	mov    %eax,0x81008b20
810038ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038ef:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810038f2:	75 30                	jne    81003924 <malloc_extend_top+0xe4>
810038f4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810038f7:	8d 50 ff             	lea    -0x1(%eax),%edx
810038fa:	8b 45 d8             	mov    -0x28(%ebp),%eax
810038fd:	21 d0                	and    %edx,%eax
810038ff:	85 c0                	test   %eax,%eax
81003901:	75 21                	jne    81003924 <malloc_extend_top+0xe4>
81003903:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003906:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003909:	01 d0                	add    %edx,%eax
8100390b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100390e:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003913:	8b 40 08             	mov    0x8(%eax),%eax
81003916:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003919:	83 ca 01             	or     $0x1,%edx
8100391c:	89 50 04             	mov    %edx,0x4(%eax)
8100391f:	e9 76 01 00 00       	jmp    81003a9a <malloc_extend_top+0x25a>
81003924:	a1 2c 83 00 81       	mov    0x8100832c,%eax
81003929:	83 f8 ff             	cmp    $0xffffffff,%eax
8100392c:	75 0a                	jne    81003938 <malloc_extend_top+0xf8>
8100392e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003931:	a3 2c 83 00 81       	mov    %eax,0x8100832c
81003936:	eb 13                	jmp    8100394b <malloc_extend_top+0x10b>
81003938:	8b 15 20 8b 00 81    	mov    0x81008b20,%edx
8100393e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003941:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003944:	01 d0                	add    %edx,%eax
81003946:	a3 20 8b 00 81       	mov    %eax,0x81008b20
8100394b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100394e:	83 c0 08             	add    $0x8,%eax
81003951:	83 e0 07             	and    $0x7,%eax
81003954:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003957:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100395b:	74 13                	je     81003970 <malloc_extend_top+0x130>
8100395d:	b8 08 00 00 00       	mov    $0x8,%eax
81003962:	2b 45 cc             	sub    -0x34(%ebp),%eax
81003965:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003968:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100396b:	01 45 f4             	add    %eax,-0xc(%ebp)
8100396e:	eb 07                	jmp    81003977 <malloc_extend_top+0x137>
81003970:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003977:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100397a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100397d:	01 d0                	add    %edx,%eax
8100397f:	89 c2                	mov    %eax,%edx
81003981:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003984:	83 e8 01             	sub    $0x1,%eax
81003987:	21 c2                	and    %eax,%edx
81003989:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100398c:	29 d0                	sub    %edx,%eax
8100398e:	01 45 f0             	add    %eax,-0x10(%ebp)
81003991:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003994:	83 e8 01             	sub    $0x1,%eax
81003997:	21 45 f0             	and    %eax,-0x10(%ebp)
8100399a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100399d:	83 ec 08             	sub    $0x8,%esp
810039a0:	50                   	push   %eax
810039a1:	ff 75 08             	push   0x8(%ebp)
810039a4:	e8 30 25 00 00       	call   81005ed9 <_sbrk_r>
810039a9:	83 c4 10             	add    $0x10,%esp
810039ac:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039af:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810039b3:	75 28                	jne    810039dd <malloc_extend_top+0x19d>
810039b5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810039bc:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810039c3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039c6:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039c9:	01 d0                	add    %edx,%eax
810039cb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039ce:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810039d2:	74 09                	je     810039dd <malloc_extend_top+0x19d>
810039d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810039d7:	83 e8 08             	sub    $0x8,%eax
810039da:	01 45 ec             	add    %eax,-0x14(%ebp)
810039dd:	a1 20 8b 00 81       	mov    0x81008b20,%eax
810039e2:	89 c2                	mov    %eax,%edx
810039e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039e7:	01 d0                	add    %edx,%eax
810039e9:	a3 20 8b 00 81       	mov    %eax,0x81008b20
810039ee:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
810039f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039f6:	89 42 08             	mov    %eax,0x8(%edx)
810039f9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810039fc:	2b 45 f4             	sub    -0xc(%ebp),%eax
810039ff:	89 c2                	mov    %eax,%edx
81003a01:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a04:	01 d0                	add    %edx,%eax
81003a06:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003a09:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003a0e:	8b 40 08             	mov    0x8(%eax),%eax
81003a11:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003a14:	83 ca 01             	or     $0x1,%edx
81003a17:	89 50 04             	mov    %edx,0x4(%eax)
81003a1a:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003a1f:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003a22:	74 76                	je     81003a9a <malloc_extend_top+0x25a>
81003a24:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003a28:	77 14                	ja     81003a3e <malloc_extend_top+0x1fe>
81003a2a:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003a2f:	8b 40 08             	mov    0x8(%eax),%eax
81003a32:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003a39:	e9 93 00 00 00       	jmp    81003ad1 <malloc_extend_top+0x291>
81003a3e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a41:	83 e8 0c             	sub    $0xc,%eax
81003a44:	83 e0 f8             	and    $0xfffffff8,%eax
81003a47:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a4a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a4d:	8b 40 04             	mov    0x4(%eax),%eax
81003a50:	83 e0 01             	and    $0x1,%eax
81003a53:	0b 45 dc             	or     -0x24(%ebp),%eax
81003a56:	89 c2                	mov    %eax,%edx
81003a58:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a5b:	89 50 04             	mov    %edx,0x4(%eax)
81003a5e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003a61:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a64:	01 d0                	add    %edx,%eax
81003a66:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003a6d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a70:	8d 50 04             	lea    0x4(%eax),%edx
81003a73:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a76:	01 d0                	add    %edx,%eax
81003a78:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003a7f:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003a83:	76 15                	jbe    81003a9a <malloc_extend_top+0x25a>
81003a85:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a88:	83 c0 08             	add    $0x8,%eax
81003a8b:	83 ec 08             	sub    $0x8,%esp
81003a8e:	50                   	push   %eax
81003a8f:	ff 75 08             	push   0x8(%ebp)
81003a92:	e8 1d dd ff ff       	call   810017b4 <_free_r>
81003a97:	83 c4 10             	add    $0x10,%esp
81003a9a:	a1 20 8b 00 81       	mov    0x81008b20,%eax
81003a9f:	89 c2                	mov    %eax,%edx
81003aa1:	a1 04 8b 00 81       	mov    0x81008b04,%eax
81003aa6:	39 c2                	cmp    %eax,%edx
81003aa8:	76 0a                	jbe    81003ab4 <malloc_extend_top+0x274>
81003aaa:	a1 20 8b 00 81       	mov    0x81008b20,%eax
81003aaf:	a3 04 8b 00 81       	mov    %eax,0x81008b04
81003ab4:	a1 20 8b 00 81       	mov    0x81008b20,%eax
81003ab9:	89 c2                	mov    %eax,%edx
81003abb:	a1 08 8b 00 81       	mov    0x81008b08,%eax
81003ac0:	39 c2                	cmp    %eax,%edx
81003ac2:	76 0d                	jbe    81003ad1 <malloc_extend_top+0x291>
81003ac4:	a1 20 8b 00 81       	mov    0x81008b20,%eax
81003ac9:	a3 08 8b 00 81       	mov    %eax,0x81008b08
81003ace:	eb 01                	jmp    81003ad1 <malloc_extend_top+0x291>
81003ad0:	90                   	nop
81003ad1:	c9                   	leave  
81003ad2:	c3                   	ret    

81003ad3 <_malloc_r>:
81003ad3:	55                   	push   %ebp
81003ad4:	89 e5                	mov    %esp,%ebp
81003ad6:	53                   	push   %ebx
81003ad7:	83 ec 44             	sub    $0x44,%esp
81003ada:	8b 45 0c             	mov    0xc(%ebp),%eax
81003add:	83 c0 0b             	add    $0xb,%eax
81003ae0:	83 f8 16             	cmp    $0x16,%eax
81003ae3:	76 0b                	jbe    81003af0 <_malloc_r+0x1d>
81003ae5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ae8:	83 c0 0b             	add    $0xb,%eax
81003aeb:	83 e0 f8             	and    $0xfffffff8,%eax
81003aee:	eb 05                	jmp    81003af5 <_malloc_r+0x22>
81003af0:	b8 10 00 00 00       	mov    $0x10,%eax
81003af5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003af8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003afb:	85 c0                	test   %eax,%eax
81003afd:	78 08                	js     81003b07 <_malloc_r+0x34>
81003aff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b02:	3b 45 0c             	cmp    0xc(%ebp),%eax
81003b05:	73 13                	jae    81003b1a <_malloc_r+0x47>
81003b07:	8b 45 08             	mov    0x8(%ebp),%eax
81003b0a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003b10:	b8 00 00 00 00       	mov    $0x0,%eax
81003b15:	e9 d6 07 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81003b1a:	83 ec 0c             	sub    $0xc,%esp
81003b1d:	ff 75 08             	push   0x8(%ebp)
81003b20:	e8 20 0a 00 00       	call   81004545 <__malloc_lock>
81003b25:	83 c4 10             	add    $0x10,%esp
81003b28:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003b2f:	0f 87 b0 00 00 00    	ja     81003be5 <_malloc_r+0x112>
81003b35:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b38:	c1 e8 03             	shr    $0x3,%eax
81003b3b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b41:	83 c0 01             	add    $0x1,%eax
81003b44:	01 c0                	add    %eax,%eax
81003b46:	c1 e0 02             	shl    $0x2,%eax
81003b49:	05 20 7f 00 81       	add    $0x81007f20,%eax
81003b4e:	83 e8 08             	sub    $0x8,%eax
81003b51:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b57:	8b 40 0c             	mov    0xc(%eax),%eax
81003b5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b60:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003b63:	75 0d                	jne    81003b72 <_malloc_r+0x9f>
81003b65:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003b69:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b6c:	8b 40 0c             	mov    0xc(%eax),%eax
81003b6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b75:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003b78:	74 62                	je     81003bdc <_malloc_r+0x109>
81003b7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b7d:	8b 40 04             	mov    0x4(%eax),%eax
81003b80:	83 e0 fc             	and    $0xfffffffc,%eax
81003b83:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003b86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b89:	8b 40 0c             	mov    0xc(%eax),%eax
81003b8c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b92:	8b 40 08             	mov    0x8(%eax),%eax
81003b95:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b98:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b9b:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b9e:	89 50 0c             	mov    %edx,0xc(%eax)
81003ba1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ba4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003ba7:	89 50 08             	mov    %edx,0x8(%eax)
81003baa:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bad:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003bb0:	01 d0                	add    %edx,%eax
81003bb2:	8b 50 04             	mov    0x4(%eax),%edx
81003bb5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003bb8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003bbb:	01 c8                	add    %ecx,%eax
81003bbd:	83 ca 01             	or     $0x1,%edx
81003bc0:	89 50 04             	mov    %edx,0x4(%eax)
81003bc3:	83 ec 0c             	sub    $0xc,%esp
81003bc6:	ff 75 08             	push   0x8(%ebp)
81003bc9:	e8 7d 09 00 00       	call   8100454b <__malloc_unlock>
81003bce:	83 c4 10             	add    $0x10,%esp
81003bd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bd4:	83 c0 08             	add    $0x8,%eax
81003bd7:	e9 14 07 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81003bdc:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003be0:	e9 46 01 00 00       	jmp    81003d2b <_malloc_r+0x258>
81003be5:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003be8:	c1 e8 09             	shr    $0x9,%eax
81003beb:	85 c0                	test   %eax,%eax
81003bed:	75 08                	jne    81003bf7 <_malloc_r+0x124>
81003bef:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003bf2:	c1 e8 03             	shr    $0x3,%eax
81003bf5:	eb 77                	jmp    81003c6e <_malloc_r+0x19b>
81003bf7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003bfa:	c1 e8 09             	shr    $0x9,%eax
81003bfd:	83 f8 04             	cmp    $0x4,%eax
81003c00:	77 0b                	ja     81003c0d <_malloc_r+0x13a>
81003c02:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c05:	c1 e8 06             	shr    $0x6,%eax
81003c08:	83 c0 38             	add    $0x38,%eax
81003c0b:	eb 61                	jmp    81003c6e <_malloc_r+0x19b>
81003c0d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c10:	c1 e8 09             	shr    $0x9,%eax
81003c13:	83 f8 14             	cmp    $0x14,%eax
81003c16:	77 0b                	ja     81003c23 <_malloc_r+0x150>
81003c18:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c1b:	c1 e8 09             	shr    $0x9,%eax
81003c1e:	83 c0 5b             	add    $0x5b,%eax
81003c21:	eb 4b                	jmp    81003c6e <_malloc_r+0x19b>
81003c23:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c26:	c1 e8 09             	shr    $0x9,%eax
81003c29:	83 f8 54             	cmp    $0x54,%eax
81003c2c:	77 0b                	ja     81003c39 <_malloc_r+0x166>
81003c2e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c31:	c1 e8 0c             	shr    $0xc,%eax
81003c34:	83 c0 6e             	add    $0x6e,%eax
81003c37:	eb 35                	jmp    81003c6e <_malloc_r+0x19b>
81003c39:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c3c:	c1 e8 09             	shr    $0x9,%eax
81003c3f:	3d 54 01 00 00       	cmp    $0x154,%eax
81003c44:	77 0b                	ja     81003c51 <_malloc_r+0x17e>
81003c46:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c49:	c1 e8 0f             	shr    $0xf,%eax
81003c4c:	83 c0 77             	add    $0x77,%eax
81003c4f:	eb 1d                	jmp    81003c6e <_malloc_r+0x19b>
81003c51:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c54:	c1 e8 09             	shr    $0x9,%eax
81003c57:	3d 54 05 00 00       	cmp    $0x554,%eax
81003c5c:	77 0b                	ja     81003c69 <_malloc_r+0x196>
81003c5e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c61:	c1 e8 12             	shr    $0x12,%eax
81003c64:	83 c0 7c             	add    $0x7c,%eax
81003c67:	eb 05                	jmp    81003c6e <_malloc_r+0x19b>
81003c69:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003c6e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003c71:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c74:	83 c0 01             	add    $0x1,%eax
81003c77:	01 c0                	add    %eax,%eax
81003c79:	c1 e0 02             	shl    $0x2,%eax
81003c7c:	05 20 7f 00 81       	add    $0x81007f20,%eax
81003c81:	83 e8 08             	sub    $0x8,%eax
81003c84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c8a:	8b 40 0c             	mov    0xc(%eax),%eax
81003c8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c90:	e9 86 00 00 00       	jmp    81003d1b <_malloc_r+0x248>
81003c95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c98:	8b 40 04             	mov    0x4(%eax),%eax
81003c9b:	83 e0 fc             	and    $0xfffffffc,%eax
81003c9e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003ca1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ca4:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003ca7:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003caa:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003cae:	7e 06                	jle    81003cb6 <_malloc_r+0x1e3>
81003cb0:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003cb4:	eb 71                	jmp    81003d27 <_malloc_r+0x254>
81003cb6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003cba:	78 56                	js     81003d12 <_malloc_r+0x23f>
81003cbc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cbf:	8b 40 0c             	mov    0xc(%eax),%eax
81003cc2:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003cc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cc8:	8b 40 08             	mov    0x8(%eax),%eax
81003ccb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003cce:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003cd1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003cd4:	89 50 0c             	mov    %edx,0xc(%eax)
81003cd7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003cda:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003cdd:	89 50 08             	mov    %edx,0x8(%eax)
81003ce0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ce3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ce6:	01 d0                	add    %edx,%eax
81003ce8:	8b 50 04             	mov    0x4(%eax),%edx
81003ceb:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003cee:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003cf1:	01 c8                	add    %ecx,%eax
81003cf3:	83 ca 01             	or     $0x1,%edx
81003cf6:	89 50 04             	mov    %edx,0x4(%eax)
81003cf9:	83 ec 0c             	sub    $0xc,%esp
81003cfc:	ff 75 08             	push   0x8(%ebp)
81003cff:	e8 47 08 00 00       	call   8100454b <__malloc_unlock>
81003d04:	83 c4 10             	add    $0x10,%esp
81003d07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d0a:	83 c0 08             	add    $0x8,%eax
81003d0d:	e9 de 05 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81003d12:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d15:	8b 40 0c             	mov    0xc(%eax),%eax
81003d18:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d1e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d21:	0f 85 6e ff ff ff    	jne    81003c95 <_malloc_r+0x1c2>
81003d27:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d2b:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
81003d30:	8b 40 08             	mov    0x8(%eax),%eax
81003d33:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d36:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
81003d3b:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003d3e:	0f 84 9c 02 00 00    	je     81003fe0 <_malloc_r+0x50d>
81003d44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d47:	8b 40 04             	mov    0x4(%eax),%eax
81003d4a:	83 e0 fc             	and    $0xfffffffc,%eax
81003d4d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d50:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d53:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d56:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d59:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d5d:	7e 7a                	jle    81003dd9 <_malloc_r+0x306>
81003d5f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d62:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d65:	01 d0                	add    %edx,%eax
81003d67:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003d6a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d6d:	83 c8 01             	or     $0x1,%eax
81003d70:	89 c2                	mov    %eax,%edx
81003d72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d75:	89 50 04             	mov    %edx,0x4(%eax)
81003d78:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
81003d7d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003d80:	89 50 0c             	mov    %edx,0xc(%eax)
81003d83:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
81003d88:	8b 40 0c             	mov    0xc(%eax),%eax
81003d8b:	89 42 08             	mov    %eax,0x8(%edx)
81003d8e:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
81003d93:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d96:	89 50 0c             	mov    %edx,0xc(%eax)
81003d99:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003d9c:	8b 50 0c             	mov    0xc(%eax),%edx
81003d9f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003da2:	89 50 08             	mov    %edx,0x8(%eax)
81003da5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003da8:	83 c8 01             	or     $0x1,%eax
81003dab:	89 c2                	mov    %eax,%edx
81003dad:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003db0:	89 50 04             	mov    %edx,0x4(%eax)
81003db3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003db6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003db9:	01 c2                	add    %eax,%edx
81003dbb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dbe:	89 02                	mov    %eax,(%edx)
81003dc0:	83 ec 0c             	sub    $0xc,%esp
81003dc3:	ff 75 08             	push   0x8(%ebp)
81003dc6:	e8 80 07 00 00       	call   8100454b <__malloc_unlock>
81003dcb:	83 c4 10             	add    $0x10,%esp
81003dce:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dd1:	83 c0 08             	add    $0x8,%eax
81003dd4:	e9 17 05 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81003dd9:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
81003dde:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
81003de3:	89 50 0c             	mov    %edx,0xc(%eax)
81003de6:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
81003deb:	8b 40 0c             	mov    0xc(%eax),%eax
81003dee:	89 42 08             	mov    %eax,0x8(%edx)
81003df1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003df5:	78 32                	js     81003e29 <_malloc_r+0x356>
81003df7:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003dfa:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003dfd:	01 d0                	add    %edx,%eax
81003dff:	8b 50 04             	mov    0x4(%eax),%edx
81003e02:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e05:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e08:	01 c8                	add    %ecx,%eax
81003e0a:	83 ca 01             	or     $0x1,%edx
81003e0d:	89 50 04             	mov    %edx,0x4(%eax)
81003e10:	83 ec 0c             	sub    $0xc,%esp
81003e13:	ff 75 08             	push   0x8(%ebp)
81003e16:	e8 30 07 00 00       	call   8100454b <__malloc_unlock>
81003e1b:	83 c4 10             	add    $0x10,%esp
81003e1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e21:	83 c0 08             	add    $0x8,%eax
81003e24:	e9 c7 04 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81003e29:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003e30:	77 7f                	ja     81003eb1 <_malloc_r+0x3de>
81003e32:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e35:	c1 e8 03             	shr    $0x3,%eax
81003e38:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003e3b:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003e40:	8b 58 04             	mov    0x4(%eax),%ebx
81003e43:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003e46:	8d 50 03             	lea    0x3(%eax),%edx
81003e49:	85 c0                	test   %eax,%eax
81003e4b:	0f 48 c2             	cmovs  %edx,%eax
81003e4e:	c1 f8 02             	sar    $0x2,%eax
81003e51:	ba 01 00 00 00       	mov    $0x1,%edx
81003e56:	89 c1                	mov    %eax,%ecx
81003e58:	d3 e2                	shl    %cl,%edx
81003e5a:	89 d0                	mov    %edx,%eax
81003e5c:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
81003e61:	09 d8                	or     %ebx,%eax
81003e63:	89 42 04             	mov    %eax,0x4(%edx)
81003e66:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003e69:	83 c0 01             	add    $0x1,%eax
81003e6c:	01 c0                	add    %eax,%eax
81003e6e:	c1 e0 02             	shl    $0x2,%eax
81003e71:	05 20 7f 00 81       	add    $0x81007f20,%eax
81003e76:	83 e8 08             	sub    $0x8,%eax
81003e79:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003e7c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e7f:	8b 40 08             	mov    0x8(%eax),%eax
81003e82:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e88:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003e8b:	89 50 0c             	mov    %edx,0xc(%eax)
81003e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e91:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003e94:	89 50 08             	mov    %edx,0x8(%eax)
81003e97:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e9a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e9d:	89 50 08             	mov    %edx,0x8(%eax)
81003ea0:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ea3:	8b 50 08             	mov    0x8(%eax),%edx
81003ea6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ea9:	89 50 0c             	mov    %edx,0xc(%eax)
81003eac:	e9 2f 01 00 00       	jmp    81003fe0 <_malloc_r+0x50d>
81003eb1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003eb4:	c1 e8 09             	shr    $0x9,%eax
81003eb7:	85 c0                	test   %eax,%eax
81003eb9:	75 08                	jne    81003ec3 <_malloc_r+0x3f0>
81003ebb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ebe:	c1 e8 03             	shr    $0x3,%eax
81003ec1:	eb 77                	jmp    81003f3a <_malloc_r+0x467>
81003ec3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ec6:	c1 e8 09             	shr    $0x9,%eax
81003ec9:	83 f8 04             	cmp    $0x4,%eax
81003ecc:	77 0b                	ja     81003ed9 <_malloc_r+0x406>
81003ece:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ed1:	c1 e8 06             	shr    $0x6,%eax
81003ed4:	83 c0 38             	add    $0x38,%eax
81003ed7:	eb 61                	jmp    81003f3a <_malloc_r+0x467>
81003ed9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003edc:	c1 e8 09             	shr    $0x9,%eax
81003edf:	83 f8 14             	cmp    $0x14,%eax
81003ee2:	77 0b                	ja     81003eef <_malloc_r+0x41c>
81003ee4:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ee7:	c1 e8 09             	shr    $0x9,%eax
81003eea:	83 c0 5b             	add    $0x5b,%eax
81003eed:	eb 4b                	jmp    81003f3a <_malloc_r+0x467>
81003eef:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ef2:	c1 e8 09             	shr    $0x9,%eax
81003ef5:	83 f8 54             	cmp    $0x54,%eax
81003ef8:	77 0b                	ja     81003f05 <_malloc_r+0x432>
81003efa:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003efd:	c1 e8 0c             	shr    $0xc,%eax
81003f00:	83 c0 6e             	add    $0x6e,%eax
81003f03:	eb 35                	jmp    81003f3a <_malloc_r+0x467>
81003f05:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f08:	c1 e8 09             	shr    $0x9,%eax
81003f0b:	3d 54 01 00 00       	cmp    $0x154,%eax
81003f10:	77 0b                	ja     81003f1d <_malloc_r+0x44a>
81003f12:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f15:	c1 e8 0f             	shr    $0xf,%eax
81003f18:	83 c0 77             	add    $0x77,%eax
81003f1b:	eb 1d                	jmp    81003f3a <_malloc_r+0x467>
81003f1d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f20:	c1 e8 09             	shr    $0x9,%eax
81003f23:	3d 54 05 00 00       	cmp    $0x554,%eax
81003f28:	77 0b                	ja     81003f35 <_malloc_r+0x462>
81003f2a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f2d:	c1 e8 12             	shr    $0x12,%eax
81003f30:	83 c0 7c             	add    $0x7c,%eax
81003f33:	eb 05                	jmp    81003f3a <_malloc_r+0x467>
81003f35:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003f3a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003f3d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f40:	83 c0 01             	add    $0x1,%eax
81003f43:	01 c0                	add    %eax,%eax
81003f45:	c1 e0 02             	shl    $0x2,%eax
81003f48:	05 20 7f 00 81       	add    $0x81007f20,%eax
81003f4d:	83 e8 08             	sub    $0x8,%eax
81003f50:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f53:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f56:	8b 40 08             	mov    0x8(%eax),%eax
81003f59:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f5c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f5f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f62:	75 36                	jne    81003f9a <_malloc_r+0x4c7>
81003f64:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81003f69:	8b 58 04             	mov    0x4(%eax),%ebx
81003f6c:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f6f:	8d 50 03             	lea    0x3(%eax),%edx
81003f72:	85 c0                	test   %eax,%eax
81003f74:	0f 48 c2             	cmovs  %edx,%eax
81003f77:	c1 f8 02             	sar    $0x2,%eax
81003f7a:	ba 01 00 00 00       	mov    $0x1,%edx
81003f7f:	89 c1                	mov    %eax,%ecx
81003f81:	d3 e2                	shl    %cl,%edx
81003f83:	89 d0                	mov    %edx,%eax
81003f85:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
81003f8a:	09 d8                	or     %ebx,%eax
81003f8c:	89 42 04             	mov    %eax,0x4(%edx)
81003f8f:	eb 28                	jmp    81003fb9 <_malloc_r+0x4e6>
81003f91:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f94:	8b 40 08             	mov    0x8(%eax),%eax
81003f97:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f9a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f9d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fa0:	74 0e                	je     81003fb0 <_malloc_r+0x4dd>
81003fa2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fa5:	8b 40 04             	mov    0x4(%eax),%eax
81003fa8:	83 e0 fc             	and    $0xfffffffc,%eax
81003fab:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003fae:	72 e1                	jb     81003f91 <_malloc_r+0x4be>
81003fb0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fb3:	8b 40 0c             	mov    0xc(%eax),%eax
81003fb6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003fb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fbc:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003fbf:	89 50 0c             	mov    %edx,0xc(%eax)
81003fc2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fc5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003fc8:	89 50 08             	mov    %edx,0x8(%eax)
81003fcb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fce:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003fd1:	89 50 08             	mov    %edx,0x8(%eax)
81003fd4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fd7:	8b 50 08             	mov    0x8(%eax),%edx
81003fda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fdd:	89 50 0c             	mov    %edx,0xc(%eax)
81003fe0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003fe3:	8d 50 03             	lea    0x3(%eax),%edx
81003fe6:	85 c0                	test   %eax,%eax
81003fe8:	0f 48 c2             	cmovs  %edx,%eax
81003feb:	c1 f8 02             	sar    $0x2,%eax
81003fee:	ba 01 00 00 00       	mov    $0x1,%edx
81003ff3:	89 c1                	mov    %eax,%ecx
81003ff5:	d3 e2                	shl    %cl,%edx
81003ff7:	89 d0                	mov    %edx,%eax
81003ff9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003ffc:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004001:	8b 40 04             	mov    0x4(%eax),%eax
81004004:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004007:	0f 87 13 02 00 00    	ja     81004220 <_malloc_r+0x74d>
8100400d:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004012:	8b 40 04             	mov    0x4(%eax),%eax
81004015:	23 45 e4             	and    -0x1c(%ebp),%eax
81004018:	85 c0                	test   %eax,%eax
8100401a:	75 27                	jne    81004043 <_malloc_r+0x570>
8100401c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100401f:	83 e0 fc             	and    $0xfffffffc,%eax
81004022:	83 c0 04             	add    $0x4,%eax
81004025:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004028:	d1 65 e4             	shll   -0x1c(%ebp)
8100402b:	eb 07                	jmp    81004034 <_malloc_r+0x561>
8100402d:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004031:	d1 65 e4             	shll   -0x1c(%ebp)
81004034:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004039:	8b 40 04             	mov    0x4(%eax),%eax
8100403c:	23 45 e4             	and    -0x1c(%ebp),%eax
8100403f:	85 c0                	test   %eax,%eax
81004041:	74 ea                	je     8100402d <_malloc_r+0x55a>
81004043:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004046:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004049:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100404c:	83 c0 01             	add    $0x1,%eax
8100404f:	01 c0                	add    %eax,%eax
81004051:	c1 e0 02             	shl    $0x2,%eax
81004054:	05 20 7f 00 81       	add    $0x81007f20,%eax
81004059:	83 e8 08             	sub    $0x8,%eax
8100405c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100405f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004062:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004065:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004068:	8b 40 0c             	mov    0xc(%eax),%eax
8100406b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100406e:	e9 22 01 00 00       	jmp    81004195 <_malloc_r+0x6c2>
81004073:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004076:	8b 40 04             	mov    0x4(%eax),%eax
81004079:	83 e0 fc             	and    $0xfffffffc,%eax
8100407c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100407f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004082:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004085:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004088:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100408c:	0f 8e 9e 00 00 00    	jle    81004130 <_malloc_r+0x65d>
81004092:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004095:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004098:	01 d0                	add    %edx,%eax
8100409a:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100409d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040a0:	83 c8 01             	or     $0x1,%eax
810040a3:	89 c2                	mov    %eax,%edx
810040a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040a8:	89 50 04             	mov    %edx,0x4(%eax)
810040ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040ae:	8b 40 0c             	mov    0xc(%eax),%eax
810040b1:	89 45 d8             	mov    %eax,-0x28(%ebp)
810040b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040b7:	8b 40 08             	mov    0x8(%eax),%eax
810040ba:	89 45 dc             	mov    %eax,-0x24(%ebp)
810040bd:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040c0:	8b 55 d8             	mov    -0x28(%ebp),%edx
810040c3:	89 50 0c             	mov    %edx,0xc(%eax)
810040c6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810040c9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810040cc:	89 50 08             	mov    %edx,0x8(%eax)
810040cf:	b8 28 7f 00 81       	mov    $0x81007f28,%eax
810040d4:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810040d7:	89 50 0c             	mov    %edx,0xc(%eax)
810040da:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
810040df:	8b 40 0c             	mov    0xc(%eax),%eax
810040e2:	89 42 08             	mov    %eax,0x8(%edx)
810040e5:	ba 28 7f 00 81       	mov    $0x81007f28,%edx
810040ea:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810040ed:	89 50 0c             	mov    %edx,0xc(%eax)
810040f0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810040f3:	8b 50 0c             	mov    0xc(%eax),%edx
810040f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810040f9:	89 50 08             	mov    %edx,0x8(%eax)
810040fc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810040ff:	83 c8 01             	or     $0x1,%eax
81004102:	89 c2                	mov    %eax,%edx
81004104:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004107:	89 50 04             	mov    %edx,0x4(%eax)
8100410a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100410d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004110:	01 c2                	add    %eax,%edx
81004112:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004115:	89 02                	mov    %eax,(%edx)
81004117:	83 ec 0c             	sub    $0xc,%esp
8100411a:	ff 75 08             	push   0x8(%ebp)
8100411d:	e8 29 04 00 00       	call   8100454b <__malloc_unlock>
81004122:	83 c4 10             	add    $0x10,%esp
81004125:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004128:	83 c0 08             	add    $0x8,%eax
8100412b:	e9 c0 01 00 00       	jmp    810042f0 <_malloc_r+0x81d>
81004130:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004134:	78 56                	js     8100418c <_malloc_r+0x6b9>
81004136:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004139:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100413c:	01 d0                	add    %edx,%eax
8100413e:	8b 50 04             	mov    0x4(%eax),%edx
81004141:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004144:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004147:	01 c8                	add    %ecx,%eax
81004149:	83 ca 01             	or     $0x1,%edx
8100414c:	89 50 04             	mov    %edx,0x4(%eax)
8100414f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004152:	8b 40 0c             	mov    0xc(%eax),%eax
81004155:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004158:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100415b:	8b 40 08             	mov    0x8(%eax),%eax
8100415e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004161:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004164:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004167:	89 50 0c             	mov    %edx,0xc(%eax)
8100416a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100416d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004170:	89 50 08             	mov    %edx,0x8(%eax)
81004173:	83 ec 0c             	sub    $0xc,%esp
81004176:	ff 75 08             	push   0x8(%ebp)
81004179:	e8 cd 03 00 00       	call   8100454b <__malloc_unlock>
8100417e:	83 c4 10             	add    $0x10,%esp
81004181:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004184:	83 c0 08             	add    $0x8,%eax
81004187:	e9 64 01 00 00       	jmp    810042f0 <_malloc_r+0x81d>
8100418c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418f:	8b 40 0c             	mov    0xc(%eax),%eax
81004192:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004195:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004198:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100419b:	0f 85 d2 fe ff ff    	jne    81004073 <_malloc_r+0x5a0>
810041a1:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810041a5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810041a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041ac:	83 e0 03             	and    $0x3,%eax
810041af:	85 c0                	test   %eax,%eax
810041b1:	0f 85 ae fe ff ff    	jne    81004065 <_malloc_r+0x592>
810041b7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810041ba:	83 e0 03             	and    $0x3,%eax
810041bd:	85 c0                	test   %eax,%eax
810041bf:	75 19                	jne    810041da <_malloc_r+0x707>
810041c1:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810041c6:	8b 48 04             	mov    0x4(%eax),%ecx
810041c9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810041cc:	f7 d0                	not    %eax
810041ce:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
810041d3:	21 c8                	and    %ecx,%eax
810041d5:	89 42 04             	mov    %eax,0x4(%edx)
810041d8:	eb 13                	jmp    810041ed <_malloc_r+0x71a>
810041da:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810041de:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810041e2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810041e5:	8b 40 08             	mov    0x8(%eax),%eax
810041e8:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810041eb:	74 ca                	je     810041b7 <_malloc_r+0x6e4>
810041ed:	d1 65 e4             	shll   -0x1c(%ebp)
810041f0:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810041f5:	8b 40 04             	mov    0x4(%eax),%eax
810041f8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810041fb:	77 23                	ja     81004220 <_malloc_r+0x74d>
810041fd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004201:	74 1d                	je     81004220 <_malloc_r+0x74d>
81004203:	eb 07                	jmp    8100420c <_malloc_r+0x739>
81004205:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004209:	d1 65 e4             	shll   -0x1c(%ebp)
8100420c:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004211:	8b 40 04             	mov    0x4(%eax),%eax
81004214:	23 45 e4             	and    -0x1c(%ebp),%eax
81004217:	85 c0                	test   %eax,%eax
81004219:	74 ea                	je     81004205 <_malloc_r+0x732>
8100421b:	e9 23 fe ff ff       	jmp    81004043 <_malloc_r+0x570>
81004220:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004225:	8b 40 08             	mov    0x8(%eax),%eax
81004228:	8b 40 04             	mov    0x4(%eax),%eax
8100422b:	83 e0 fc             	and    $0xfffffffc,%eax
8100422e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004231:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004234:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004239:	8b 40 08             	mov    0x8(%eax),%eax
8100423c:	8b 40 04             	mov    0x4(%eax),%eax
8100423f:	83 e0 fc             	and    $0xfffffffc,%eax
81004242:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004245:	77 06                	ja     8100424d <_malloc_r+0x77a>
81004247:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100424b:	7f 53                	jg     810042a0 <_malloc_r+0x7cd>
8100424d:	83 ec 08             	sub    $0x8,%esp
81004250:	ff 75 d0             	push   -0x30(%ebp)
81004253:	ff 75 08             	push   0x8(%ebp)
81004256:	e8 e5 f5 ff ff       	call   81003840 <malloc_extend_top>
8100425b:	83 c4 10             	add    $0x10,%esp
8100425e:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004263:	8b 40 08             	mov    0x8(%eax),%eax
81004266:	8b 40 04             	mov    0x4(%eax),%eax
81004269:	83 e0 fc             	and    $0xfffffffc,%eax
8100426c:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100426f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004272:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81004277:	8b 40 08             	mov    0x8(%eax),%eax
8100427a:	8b 40 04             	mov    0x4(%eax),%eax
8100427d:	83 e0 fc             	and    $0xfffffffc,%eax
81004280:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004283:	77 06                	ja     8100428b <_malloc_r+0x7b8>
81004285:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004289:	7f 15                	jg     810042a0 <_malloc_r+0x7cd>
8100428b:	83 ec 0c             	sub    $0xc,%esp
8100428e:	ff 75 08             	push   0x8(%ebp)
81004291:	e8 b5 02 00 00       	call   8100454b <__malloc_unlock>
81004296:	83 c4 10             	add    $0x10,%esp
81004299:	b8 00 00 00 00       	mov    $0x0,%eax
8100429e:	eb 50                	jmp    810042f0 <_malloc_r+0x81d>
810042a0:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810042a5:	8b 40 08             	mov    0x8(%eax),%eax
810042a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042ab:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ae:	83 c8 01             	or     $0x1,%eax
810042b1:	89 c2                	mov    %eax,%edx
810042b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042b6:	89 50 04             	mov    %edx,0x4(%eax)
810042b9:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
810042be:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810042c1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c4:	01 c8                	add    %ecx,%eax
810042c6:	89 42 08             	mov    %eax,0x8(%edx)
810042c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810042cc:	83 c8 01             	or     $0x1,%eax
810042cf:	89 c2                	mov    %eax,%edx
810042d1:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810042d6:	8b 40 08             	mov    0x8(%eax),%eax
810042d9:	89 50 04             	mov    %edx,0x4(%eax)
810042dc:	83 ec 0c             	sub    $0xc,%esp
810042df:	ff 75 08             	push   0x8(%ebp)
810042e2:	e8 64 02 00 00       	call   8100454b <__malloc_unlock>
810042e7:	83 c4 10             	add    $0x10,%esp
810042ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042ed:	83 c0 08             	add    $0x8,%eax
810042f0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810042f3:	c9                   	leave  
810042f4:	c3                   	ret    
810042f5:	66 90                	xchg   %ax,%ax
810042f7:	66 90                	xchg   %ax,%ax
810042f9:	66 90                	xchg   %ax,%ax
810042fb:	66 90                	xchg   %ax,%ax
810042fd:	66 90                	xchg   %ax,%ax
810042ff:	90                   	nop

81004300 <memchr>:
81004300:	55                   	push   %ebp
81004301:	89 e5                	mov    %esp,%ebp
81004303:	57                   	push   %edi
81004304:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004308:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100430b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100430e:	31 d2                	xor    %edx,%edx
81004310:	85 c9                	test   %ecx,%ecx
81004312:	74 79                	je     8100438d <L20>
81004314:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100431a:	74 28                	je     81004344 <L5>
8100431c:	3a 07                	cmp    (%edi),%al
8100431e:	74 6a                	je     8100438a <L15>
81004320:	47                   	inc    %edi
81004321:	49                   	dec    %ecx
81004322:	74 69                	je     8100438d <L20>
81004324:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100432a:	74 18                	je     81004344 <L5>
8100432c:	3a 07                	cmp    (%edi),%al
8100432e:	74 5a                	je     8100438a <L15>
81004330:	47                   	inc    %edi
81004331:	49                   	dec    %ecx
81004332:	74 59                	je     8100438d <L20>
81004334:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100433a:	74 08                	je     81004344 <L5>
8100433c:	3a 07                	cmp    (%edi),%al
8100433e:	74 4a                	je     8100438a <L15>
81004340:	47                   	inc    %edi
81004341:	49                   	dec    %ecx
81004342:	74 49                	je     8100438d <L20>

81004344 <L5>:
81004344:	88 c4                	mov    %al,%ah
81004346:	89 c2                	mov    %eax,%edx
81004348:	c1 e2 10             	shl    $0x10,%edx
8100434b:	09 d0                	or     %edx,%eax
8100434d:	53                   	push   %ebx
8100434e:	66 90                	xchg   %ax,%ax

81004350 <L8>:
81004350:	83 e9 04             	sub    $0x4,%ecx
81004353:	72 1c                	jb     81004371 <L9>
81004355:	8b 17                	mov    (%edi),%edx
81004357:	83 c7 04             	add    $0x4,%edi
8100435a:	31 c2                	xor    %eax,%edx
8100435c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004362:	f7 d2                	not    %edx
81004364:	21 d3                	and    %edx,%ebx
81004366:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100436c:	74 e2                	je     81004350 <L8>
8100436e:	83 ef 04             	sub    $0x4,%edi

81004371 <L9>:
81004371:	5b                   	pop    %ebx
81004372:	31 d2                	xor    %edx,%edx
81004374:	83 c1 04             	add    $0x4,%ecx
81004377:	74 14                	je     8100438d <L20>
81004379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004380 <L10>:
81004380:	3a 07                	cmp    (%edi),%al
81004382:	74 06                	je     8100438a <L15>
81004384:	47                   	inc    %edi
81004385:	49                   	dec    %ecx
81004386:	75 f8                	jne    81004380 <L10>
81004388:	31 ff                	xor    %edi,%edi

8100438a <L15>:
8100438a:	4a                   	dec    %edx
8100438b:	21 fa                	and    %edi,%edx

8100438d <L20>:
8100438d:	89 d0                	mov    %edx,%eax
8100438f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004392:	5f                   	pop    %edi
81004393:	c9                   	leave  
81004394:	c3                   	ret    

81004395 <memcmp>:
81004395:	55                   	push   %ebp
81004396:	89 e5                	mov    %esp,%ebp
81004398:	83 ec 10             	sub    $0x10,%esp
8100439b:	53                   	push   %ebx
8100439c:	57                   	push   %edi
8100439d:	56                   	push   %esi
8100439e:	8b 7d 08             	mov    0x8(%ebp),%edi
810043a1:	8b 75 0c             	mov    0xc(%ebp),%esi
810043a4:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043a7:	fc                   	cld    
810043a8:	31 c0                	xor    %eax,%eax
810043aa:	85 c9                	test   %ecx,%ecx
810043ac:	74 31                	je     810043df <L4>
810043ae:	89 f8                	mov    %edi,%eax
810043b0:	09 f0                	or     %esi,%eax
810043b2:	a8 03                	test   $0x3,%al
810043b4:	75 1b                	jne    810043d1 <BYTECMP>
810043b6:	89 cb                	mov    %ecx,%ebx
810043b8:	c1 e9 02             	shr    $0x2,%ecx
810043bb:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810043bd:	74 0d                	je     810043cc <L5>
810043bf:	83 ee 04             	sub    $0x4,%esi
810043c2:	83 ef 04             	sub    $0x4,%edi
810043c5:	b9 04 00 00 00       	mov    $0x4,%ecx
810043ca:	eb 05                	jmp    810043d1 <BYTECMP>

810043cc <L5>:
810043cc:	83 e3 03             	and    $0x3,%ebx
810043cf:	89 d9                	mov    %ebx,%ecx

810043d1 <BYTECMP>:
810043d1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810043d3 <L3>:
810043d3:	31 d2                	xor    %edx,%edx
810043d5:	8a 56 ff             	mov    -0x1(%esi),%dl
810043d8:	31 c0                	xor    %eax,%eax
810043da:	8a 47 ff             	mov    -0x1(%edi),%al
810043dd:	29 d0                	sub    %edx,%eax

810043df <L4>:
810043df:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810043e2:	5e                   	pop    %esi
810043e3:	5f                   	pop    %edi
810043e4:	5b                   	pop    %ebx
810043e5:	c9                   	leave  
810043e6:	c3                   	ret    
810043e7:	90                   	nop

810043e8 <memcpy>:
810043e8:	55                   	push   %ebp
810043e9:	89 e5                	mov    %esp,%ebp
810043eb:	56                   	push   %esi
810043ec:	57                   	push   %edi
810043ed:	53                   	push   %ebx
810043ee:	8b 7d 08             	mov    0x8(%ebp),%edi
810043f1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043f4:	8b 75 0c             	mov    0xc(%ebp),%esi
810043f7:	fc                   	cld    
810043f8:	83 f9 08             	cmp    $0x8,%ecx
810043fb:	76 26                	jbe    81004423 <memcpy+0x3b>
810043fd:	89 fa                	mov    %edi,%edx
810043ff:	89 cb                	mov    %ecx,%ebx
81004401:	83 e2 03             	and    $0x3,%edx
81004404:	74 10                	je     81004416 <memcpy+0x2e>
81004406:	b9 04 00 00 00       	mov    $0x4,%ecx
8100440b:	29 d1                	sub    %edx,%ecx
8100440d:	83 e1 03             	and    $0x3,%ecx
81004410:	29 cb                	sub    %ecx,%ebx
81004412:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004414:	89 d9                	mov    %ebx,%ecx
81004416:	c1 e9 02             	shr    $0x2,%ecx
81004419:	8d 76 00             	lea    0x0(%esi),%esi
8100441c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100441e:	89 d9                	mov    %ebx,%ecx
81004420:	83 e1 03             	and    $0x3,%ecx
81004423:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004425:	8b 45 08             	mov    0x8(%ebp),%eax
81004428:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100442b:	5b                   	pop    %ebx
8100442c:	5f                   	pop    %edi
8100442d:	5e                   	pop    %esi
8100442e:	c9                   	leave  
8100442f:	c3                   	ret    

81004430 <memmove>:
81004430:	55                   	push   %ebp
81004431:	89 e5                	mov    %esp,%ebp
81004433:	56                   	push   %esi
81004434:	57                   	push   %edi
81004435:	53                   	push   %ebx
81004436:	8b 7d 08             	mov    0x8(%ebp),%edi
81004439:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100443c:	8b 75 0c             	mov    0xc(%ebp),%esi
8100443f:	fc                   	cld    
81004440:	39 fe                	cmp    %edi,%esi
81004442:	73 43                	jae    81004487 <memmove+0x57>
81004444:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004448:	39 df                	cmp    %ebx,%edi
8100444a:	77 3b                	ja     81004487 <memmove+0x57>
8100444c:	01 ce                	add    %ecx,%esi
8100444e:	01 cf                	add    %ecx,%edi
81004450:	fd                   	std    
81004451:	83 f9 08             	cmp    $0x8,%ecx
81004454:	76 2b                	jbe    81004481 <memmove+0x51>
81004456:	89 fa                	mov    %edi,%edx
81004458:	89 cb                	mov    %ecx,%ebx
8100445a:	83 e2 03             	and    $0x3,%edx
8100445d:	74 0c                	je     8100446b <memmove+0x3b>
8100445f:	89 d1                	mov    %edx,%ecx
81004461:	4e                   	dec    %esi
81004462:	4f                   	dec    %edi
81004463:	29 cb                	sub    %ecx,%ebx
81004465:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004467:	89 d9                	mov    %ebx,%ecx
81004469:	46                   	inc    %esi
8100446a:	47                   	inc    %edi
8100446b:	c1 e9 02             	shr    $0x2,%ecx
8100446e:	83 ee 04             	sub    $0x4,%esi
81004471:	83 ef 04             	sub    $0x4,%edi
81004474:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004476:	83 c6 04             	add    $0x4,%esi
81004479:	83 c7 04             	add    $0x4,%edi
8100447c:	89 d9                	mov    %ebx,%ecx
8100447e:	83 e1 03             	and    $0x3,%ecx
81004481:	4e                   	dec    %esi
81004482:	4f                   	dec    %edi
81004483:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004485:	eb 2a                	jmp    810044b1 <memmove+0x81>
81004487:	83 f9 08             	cmp    $0x8,%ecx
8100448a:	76 23                	jbe    810044af <memmove+0x7f>
8100448c:	89 fa                	mov    %edi,%edx
8100448e:	89 cb                	mov    %ecx,%ebx
81004490:	83 e2 03             	and    $0x3,%edx
81004493:	74 10                	je     810044a5 <memmove+0x75>
81004495:	b9 04 00 00 00       	mov    $0x4,%ecx
8100449a:	29 d1                	sub    %edx,%ecx
8100449c:	83 e1 03             	and    $0x3,%ecx
8100449f:	29 cb                	sub    %ecx,%ebx
810044a1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044a3:	89 d9                	mov    %ebx,%ecx
810044a5:	c1 e9 02             	shr    $0x2,%ecx
810044a8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810044aa:	89 d9                	mov    %ebx,%ecx
810044ac:	83 e1 03             	and    $0x3,%ecx
810044af:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810044b1:	8b 45 08             	mov    0x8(%ebp),%eax
810044b4:	fc                   	cld    
810044b5:	8d 65 f4             	lea    -0xc(%ebp),%esp
810044b8:	5b                   	pop    %ebx
810044b9:	5f                   	pop    %edi
810044ba:	5e                   	pop    %esi
810044bb:	c9                   	leave  
810044bc:	c3                   	ret    

810044bd <memset>:
810044bd:	55                   	push   %ebp
810044be:	89 e5                	mov    %esp,%ebp
810044c0:	57                   	push   %edi
810044c1:	8b 7d 08             	mov    0x8(%ebp),%edi
810044c4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810044c8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810044cb:	fc                   	cld    
810044cc:	83 f9 10             	cmp    $0x10,%ecx
810044cf:	76 69                	jbe    8100453a <memset+0x7d>
810044d1:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044d7:	74 4c                	je     81004525 <memset+0x68>
810044d9:	88 07                	mov    %al,(%edi)
810044db:	47                   	inc    %edi
810044dc:	49                   	dec    %ecx
810044dd:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044e3:	74 40                	je     81004525 <memset+0x68>
810044e5:	88 07                	mov    %al,(%edi)
810044e7:	47                   	inc    %edi
810044e8:	49                   	dec    %ecx
810044e9:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044ef:	74 34                	je     81004525 <memset+0x68>
810044f1:	88 07                	mov    %al,(%edi)
810044f3:	47                   	inc    %edi
810044f4:	49                   	dec    %ecx
810044f5:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044fb:	74 28                	je     81004525 <memset+0x68>
810044fd:	88 07                	mov    %al,(%edi)
810044ff:	47                   	inc    %edi
81004500:	49                   	dec    %ecx
81004501:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004507:	74 1c                	je     81004525 <memset+0x68>
81004509:	88 07                	mov    %al,(%edi)
8100450b:	47                   	inc    %edi
8100450c:	49                   	dec    %ecx
8100450d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004513:	74 10                	je     81004525 <memset+0x68>
81004515:	88 07                	mov    %al,(%edi)
81004517:	47                   	inc    %edi
81004518:	49                   	dec    %ecx
81004519:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100451f:	74 04                	je     81004525 <memset+0x68>
81004521:	88 07                	mov    %al,(%edi)
81004523:	47                   	inc    %edi
81004524:	49                   	dec    %ecx
81004525:	88 c4                	mov    %al,%ah
81004527:	89 c2                	mov    %eax,%edx
81004529:	c1 e2 10             	shl    $0x10,%edx
8100452c:	09 d0                	or     %edx,%eax
8100452e:	89 ca                	mov    %ecx,%edx
81004530:	c1 e9 02             	shr    $0x2,%ecx
81004533:	83 e2 03             	and    $0x3,%edx
81004536:	f3 ab                	rep stos %eax,%es:(%edi)
81004538:	89 d1                	mov    %edx,%ecx
8100453a:	f3 aa                	rep stos %al,%es:(%edi)
8100453c:	8b 45 08             	mov    0x8(%ebp),%eax
8100453f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004542:	5f                   	pop    %edi
81004543:	c9                   	leave  
81004544:	c3                   	ret    

81004545 <__malloc_lock>:
81004545:	55                   	push   %ebp
81004546:	89 e5                	mov    %esp,%ebp
81004548:	90                   	nop
81004549:	5d                   	pop    %ebp
8100454a:	c3                   	ret    

8100454b <__malloc_unlock>:
8100454b:	55                   	push   %ebp
8100454c:	89 e5                	mov    %esp,%ebp
8100454e:	90                   	nop
8100454f:	5d                   	pop    %ebp
81004550:	c3                   	ret    

81004551 <__sprint_r>:
81004551:	55                   	push   %ebp
81004552:	89 e5                	mov    %esp,%ebp
81004554:	56                   	push   %esi
81004555:	53                   	push   %ebx
81004556:	83 ec 10             	sub    $0x10,%esp
81004559:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100455c:	be 00 00 00 00       	mov    $0x0,%esi
81004561:	8b 43 08             	mov    0x8(%ebx),%eax
81004564:	85 c0                	test   %eax,%eax
81004566:	75 11                	jne    81004579 <__sprint_r+0x28>
81004568:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100456f:	b8 00 00 00 00       	mov    $0x0,%eax
81004574:	e9 ad 00 00 00       	jmp    81004626 <__sprint_r+0xd5>
81004579:	8b 45 0c             	mov    0xc(%ebp),%eax
8100457c:	8b 40 64             	mov    0x64(%eax),%eax
8100457f:	25 00 20 00 00       	and    $0x2000,%eax
81004584:	85 c0                	test   %eax,%eax
81004586:	74 7a                	je     81004602 <__sprint_r+0xb1>
81004588:	8b 03                	mov    (%ebx),%eax
8100458a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100458d:	eb 6a                	jmp    810045f9 <__sprint_r+0xa8>
8100458f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004592:	8b 00                	mov    (%eax),%eax
81004594:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004597:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100459a:	8b 40 04             	mov    0x4(%eax),%eax
8100459d:	c1 e8 02             	shr    $0x2,%eax
810045a0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810045a3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810045aa:	eb 33                	jmp    810045df <__sprint_r+0x8e>
810045ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045af:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810045b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810045b9:	01 d0                	add    %edx,%eax
810045bb:	8b 00                	mov    (%eax),%eax
810045bd:	83 ec 04             	sub    $0x4,%esp
810045c0:	ff 75 0c             	push   0xc(%ebp)
810045c3:	50                   	push   %eax
810045c4:	ff 75 08             	push   0x8(%ebp)
810045c7:	e8 9a 26 00 00       	call   81006c66 <_fputwc_r>
810045cc:	83 c4 10             	add    $0x10,%esp
810045cf:	83 f8 ff             	cmp    $0xffffffff,%eax
810045d2:	75 07                	jne    810045db <__sprint_r+0x8a>
810045d4:	be ff ff ff ff       	mov    $0xffffffff,%esi
810045d9:	eb 3b                	jmp    81004616 <__sprint_r+0xc5>
810045db:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810045df:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045e2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810045e5:	7c c5                	jl     810045ac <__sprint_r+0x5b>
810045e7:	8b 43 08             	mov    0x8(%ebx),%eax
810045ea:	8b 55 e8             	mov    -0x18(%ebp),%edx
810045ed:	c1 e2 02             	shl    $0x2,%edx
810045f0:	29 d0                	sub    %edx,%eax
810045f2:	89 43 08             	mov    %eax,0x8(%ebx)
810045f5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810045f9:	8b 43 08             	mov    0x8(%ebx),%eax
810045fc:	85 c0                	test   %eax,%eax
810045fe:	75 8f                	jne    8100458f <__sprint_r+0x3e>
81004600:	eb 14                	jmp    81004616 <__sprint_r+0xc5>
81004602:	83 ec 04             	sub    $0x4,%esp
81004605:	53                   	push   %ebx
81004606:	ff 75 0c             	push   0xc(%ebp)
81004609:	ff 75 08             	push   0x8(%ebp)
8100460c:	e8 30 dc ff ff       	call   81002241 <__sfvwrite_r>
81004611:	83 c4 10             	add    $0x10,%esp
81004614:	89 c6                	mov    %eax,%esi
81004616:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100461d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004624:	89 f0                	mov    %esi,%eax
81004626:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004629:	5b                   	pop    %ebx
8100462a:	5e                   	pop    %esi
8100462b:	5d                   	pop    %ebp
8100462c:	c3                   	ret    

8100462d <__sfputc_r>:
8100462d:	55                   	push   %ebp
8100462e:	89 e5                	mov    %esp,%ebp
81004630:	83 ec 08             	sub    $0x8,%esp
81004633:	8b 45 10             	mov    0x10(%ebp),%eax
81004636:	8b 40 08             	mov    0x8(%eax),%eax
81004639:	8d 50 ff             	lea    -0x1(%eax),%edx
8100463c:	8b 45 10             	mov    0x10(%ebp),%eax
8100463f:	89 50 08             	mov    %edx,0x8(%eax)
81004642:	8b 45 10             	mov    0x10(%ebp),%eax
81004645:	8b 40 08             	mov    0x8(%eax),%eax
81004648:	85 c0                	test   %eax,%eax
8100464a:	79 17                	jns    81004663 <__sfputc_r+0x36>
8100464c:	8b 45 10             	mov    0x10(%ebp),%eax
8100464f:	8b 50 08             	mov    0x8(%eax),%edx
81004652:	8b 45 10             	mov    0x10(%ebp),%eax
81004655:	8b 40 18             	mov    0x18(%eax),%eax
81004658:	39 c2                	cmp    %eax,%edx
8100465a:	7c 21                	jl     8100467d <__sfputc_r+0x50>
8100465c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100465f:	3c 0a                	cmp    $0xa,%al
81004661:	74 1a                	je     8100467d <__sfputc_r+0x50>
81004663:	8b 45 10             	mov    0x10(%ebp),%eax
81004666:	8b 00                	mov    (%eax),%eax
81004668:	8d 48 01             	lea    0x1(%eax),%ecx
8100466b:	8b 55 10             	mov    0x10(%ebp),%edx
8100466e:	89 0a                	mov    %ecx,(%edx)
81004670:	8b 55 0c             	mov    0xc(%ebp),%edx
81004673:	88 10                	mov    %dl,(%eax)
81004675:	0f b6 00             	movzbl (%eax),%eax
81004678:	0f b6 c0             	movzbl %al,%eax
8100467b:	eb 14                	jmp    81004691 <__sfputc_r+0x64>
8100467d:	83 ec 04             	sub    $0x4,%esp
81004680:	ff 75 10             	push   0x10(%ebp)
81004683:	ff 75 0c             	push   0xc(%ebp)
81004686:	ff 75 08             	push   0x8(%ebp)
81004689:	e8 41 1f 00 00       	call   810065cf <__swbuf_r>
8100468e:	83 c4 10             	add    $0x10,%esp
81004691:	c9                   	leave  
81004692:	c3                   	ret    

81004693 <__sfputs_r>:
81004693:	55                   	push   %ebp
81004694:	89 e5                	mov    %esp,%ebp
81004696:	53                   	push   %ebx
81004697:	83 ec 14             	sub    $0x14,%esp
8100469a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100469d:	8b 40 64             	mov    0x64(%eax),%eax
810046a0:	25 00 20 00 00       	and    $0x2000,%eax
810046a5:	85 c0                	test   %eax,%eax
810046a7:	74 4c                	je     810046f5 <__sfputs_r+0x62>
810046a9:	8b 45 10             	mov    0x10(%ebp),%eax
810046ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046af:	bb 00 00 00 00       	mov    $0x0,%ebx
810046b4:	eb 31                	jmp    810046e7 <__sfputs_r+0x54>
810046b6:	89 d8                	mov    %ebx,%eax
810046b8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810046bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046c2:	01 d0                	add    %edx,%eax
810046c4:	8b 00                	mov    (%eax),%eax
810046c6:	83 ec 04             	sub    $0x4,%esp
810046c9:	ff 75 0c             	push   0xc(%ebp)
810046cc:	50                   	push   %eax
810046cd:	ff 75 08             	push   0x8(%ebp)
810046d0:	e8 91 25 00 00       	call   81006c66 <_fputwc_r>
810046d5:	83 c4 10             	add    $0x10,%esp
810046d8:	83 f8 ff             	cmp    $0xffffffff,%eax
810046db:	75 07                	jne    810046e4 <__sfputs_r+0x51>
810046dd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810046e2:	eb 52                	jmp    81004736 <__sfputs_r+0xa3>
810046e4:	83 c3 01             	add    $0x1,%ebx
810046e7:	8b 45 14             	mov    0x14(%ebp),%eax
810046ea:	c1 e8 02             	shr    $0x2,%eax
810046ed:	89 da                	mov    %ebx,%edx
810046ef:	39 d0                	cmp    %edx,%eax
810046f1:	77 c3                	ja     810046b6 <__sfputs_r+0x23>
810046f3:	eb 3c                	jmp    81004731 <__sfputs_r+0x9e>
810046f5:	bb 00 00 00 00       	mov    $0x0,%ebx
810046fa:	eb 2e                	jmp    8100472a <__sfputs_r+0x97>
810046fc:	89 da                	mov    %ebx,%edx
810046fe:	8b 45 10             	mov    0x10(%ebp),%eax
81004701:	01 d0                	add    %edx,%eax
81004703:	0f b6 00             	movzbl (%eax),%eax
81004706:	0f be c0             	movsbl %al,%eax
81004709:	83 ec 04             	sub    $0x4,%esp
8100470c:	ff 75 0c             	push   0xc(%ebp)
8100470f:	50                   	push   %eax
81004710:	ff 75 08             	push   0x8(%ebp)
81004713:	e8 15 ff ff ff       	call   8100462d <__sfputc_r>
81004718:	83 c4 10             	add    $0x10,%esp
8100471b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100471e:	75 07                	jne    81004727 <__sfputs_r+0x94>
81004720:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004725:	eb 0f                	jmp    81004736 <__sfputs_r+0xa3>
81004727:	83 c3 01             	add    $0x1,%ebx
8100472a:	89 d8                	mov    %ebx,%eax
8100472c:	39 45 14             	cmp    %eax,0x14(%ebp)
8100472f:	77 cb                	ja     810046fc <__sfputs_r+0x69>
81004731:	b8 00 00 00 00       	mov    $0x0,%eax
81004736:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004739:	c9                   	leave  
8100473a:	c3                   	ret    

8100473b <vfiprintf>:
8100473b:	55                   	push   %ebp
8100473c:	89 e5                	mov    %esp,%ebp
8100473e:	83 ec 18             	sub    $0x18,%esp
81004741:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81004746:	ff 75 10             	push   0x10(%ebp)
81004749:	ff 75 0c             	push   0xc(%ebp)
8100474c:	ff 75 08             	push   0x8(%ebp)
8100474f:	50                   	push   %eax
81004750:	e8 0b 00 00 00       	call   81004760 <_vfiprintf_r>
81004755:	83 c4 10             	add    $0x10,%esp
81004758:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100475b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100475e:	c9                   	leave  
8100475f:	c3                   	ret    

81004760 <_vfiprintf_r>:
81004760:	55                   	push   %ebp
81004761:	89 e5                	mov    %esp,%ebp
81004763:	57                   	push   %edi
81004764:	56                   	push   %esi
81004765:	53                   	push   %ebx
81004766:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100476c:	c7 45 e4 93 46 00 81 	movl   $0x81004693,-0x1c(%ebp)
81004773:	8b 45 08             	mov    0x8(%ebp),%eax
81004776:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004779:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100477d:	74 18                	je     81004797 <_vfiprintf_r+0x37>
8100477f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004782:	8b 40 38             	mov    0x38(%eax),%eax
81004785:	85 c0                	test   %eax,%eax
81004787:	75 0e                	jne    81004797 <_vfiprintf_r+0x37>
81004789:	83 ec 0c             	sub    $0xc,%esp
8100478c:	ff 75 e0             	push   -0x20(%ebp)
8100478f:	e8 05 cd ff ff       	call   81001499 <__sinit>
81004794:	83 c4 10             	add    $0x10,%esp
81004797:	8b 45 0c             	mov    0xc(%ebp),%eax
8100479a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100479e:	98                   	cwtl   
8100479f:	83 e0 08             	and    $0x8,%eax
810047a2:	85 c0                	test   %eax,%eax
810047a4:	74 0a                	je     810047b0 <_vfiprintf_r+0x50>
810047a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810047a9:	8b 40 10             	mov    0x10(%eax),%eax
810047ac:	85 c0                	test   %eax,%eax
810047ae:	75 1f                	jne    810047cf <_vfiprintf_r+0x6f>
810047b0:	83 ec 08             	sub    $0x8,%esp
810047b3:	ff 75 0c             	push   0xc(%ebp)
810047b6:	ff 75 08             	push   0x8(%ebp)
810047b9:	e8 8a 1f 00 00       	call   81006748 <__swsetup_r>
810047be:	83 c4 10             	add    $0x10,%esp
810047c1:	85 c0                	test   %eax,%eax
810047c3:	74 0a                	je     810047cf <_vfiprintf_r+0x6f>
810047c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810047ca:	e9 df 02 00 00       	jmp    81004aae <_vfiprintf_r+0x34e>
810047cf:	8b 5d 10             	mov    0x10(%ebp),%ebx
810047d2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810047d9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810047dd:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810047e1:	8b 45 14             	mov    0x14(%ebp),%eax
810047e4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810047ea:	89 de                	mov    %ebx,%esi
810047ec:	eb 03                	jmp    810047f1 <_vfiprintf_r+0x91>
810047ee:	83 c3 01             	add    $0x1,%ebx
810047f1:	0f b6 03             	movzbl (%ebx),%eax
810047f4:	84 c0                	test   %al,%al
810047f6:	74 07                	je     810047ff <_vfiprintf_r+0x9f>
810047f8:	0f b6 03             	movzbl (%ebx),%eax
810047fb:	3c 25                	cmp    $0x25,%al
810047fd:	75 ef                	jne    810047ee <_vfiprintf_r+0x8e>
810047ff:	89 d8                	mov    %ebx,%eax
81004801:	29 f0                	sub    %esi,%eax
81004803:	85 c0                	test   %eax,%eax
81004805:	74 2b                	je     81004832 <_vfiprintf_r+0xd2>
81004807:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
8100480d:	50                   	push   %eax
8100480e:	56                   	push   %esi
8100480f:	ff 75 0c             	push   0xc(%ebp)
81004812:	ff 75 08             	push   0x8(%ebp)
81004815:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004818:	ff d0                	call   *%eax
8100481a:	83 c4 10             	add    $0x10,%esp
8100481d:	83 f8 ff             	cmp    $0xffffffff,%eax
81004820:	0f 84 68 02 00 00    	je     81004a8e <_vfiprintf_r+0x32e>
81004826:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004829:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
8100482f:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004832:	0f b6 03             	movzbl (%ebx),%eax
81004835:	84 c0                	test   %al,%al
81004837:	0f 84 54 02 00 00    	je     81004a91 <_vfiprintf_r+0x331>
8100483d:	83 c3 01             	add    $0x1,%ebx
81004840:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004847:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
8100484e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004855:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100485c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004860:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004867:	c7 45 dc 5c 77 00 81 	movl   $0x8100775c,-0x24(%ebp)
8100486e:	eb 1b                	jmp    8100488b <_vfiprintf_r+0x12b>
81004870:	8b 55 80             	mov    -0x80(%ebp),%edx
81004873:	89 f0                	mov    %esi,%eax
81004875:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004878:	be 01 00 00 00       	mov    $0x1,%esi
8100487d:	89 c1                	mov    %eax,%ecx
8100487f:	d3 e6                	shl    %cl,%esi
81004881:	89 f0                	mov    %esi,%eax
81004883:	09 d0                	or     %edx,%eax
81004885:	89 45 80             	mov    %eax,-0x80(%ebp)
81004888:	83 c3 01             	add    $0x1,%ebx
8100488b:	0f b6 03             	movzbl (%ebx),%eax
8100488e:	0f be c0             	movsbl %al,%eax
81004891:	83 ec 04             	sub    $0x4,%esp
81004894:	6a 05                	push   $0x5
81004896:	50                   	push   %eax
81004897:	ff 75 dc             	push   -0x24(%ebp)
8100489a:	e8 61 fa ff ff       	call   81004300 <memchr>
8100489f:	83 c4 10             	add    $0x10,%esp
810048a2:	89 c6                	mov    %eax,%esi
810048a4:	85 f6                	test   %esi,%esi
810048a6:	75 c8                	jne    81004870 <_vfiprintf_r+0x110>
810048a8:	8b 45 80             	mov    -0x80(%ebp),%eax
810048ab:	83 e0 10             	and    $0x10,%eax
810048ae:	85 c0                	test   %eax,%eax
810048b0:	74 04                	je     810048b6 <_vfiprintf_r+0x156>
810048b2:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
810048b6:	8b 45 80             	mov    -0x80(%ebp),%eax
810048b9:	83 e0 08             	and    $0x8,%eax
810048bc:	85 c0                	test   %eax,%eax
810048be:	74 04                	je     810048c4 <_vfiprintf_r+0x164>
810048c0:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
810048c4:	0f b6 03             	movzbl (%ebx),%eax
810048c7:	3c 2a                	cmp    $0x2a,%al
810048c9:	75 50                	jne    8100491b <_vfiprintf_r+0x1bb>
810048cb:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810048d1:	8d 50 04             	lea    0x4(%eax),%edx
810048d4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810048da:	8b 00                	mov    (%eax),%eax
810048dc:	89 45 8c             	mov    %eax,-0x74(%ebp)
810048df:	8b 45 8c             	mov    -0x74(%ebp),%eax
810048e2:	85 c0                	test   %eax,%eax
810048e4:	79 11                	jns    810048f7 <_vfiprintf_r+0x197>
810048e6:	8b 45 8c             	mov    -0x74(%ebp),%eax
810048e9:	f7 d8                	neg    %eax
810048eb:	89 45 8c             	mov    %eax,-0x74(%ebp)
810048ee:	8b 45 80             	mov    -0x80(%ebp),%eax
810048f1:	83 c8 02             	or     $0x2,%eax
810048f4:	89 45 80             	mov    %eax,-0x80(%ebp)
810048f7:	83 c3 01             	add    $0x1,%ebx
810048fa:	eb 2d                	jmp    81004929 <_vfiprintf_r+0x1c9>
810048fc:	8b 55 8c             	mov    -0x74(%ebp),%edx
810048ff:	89 d0                	mov    %edx,%eax
81004901:	c1 e0 02             	shl    $0x2,%eax
81004904:	01 d0                	add    %edx,%eax
81004906:	01 c0                	add    %eax,%eax
81004908:	89 c2                	mov    %eax,%edx
8100490a:	0f b6 03             	movzbl (%ebx),%eax
8100490d:	0f be c0             	movsbl %al,%eax
81004910:	83 e8 30             	sub    $0x30,%eax
81004913:	01 d0                	add    %edx,%eax
81004915:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004918:	83 c3 01             	add    $0x1,%ebx
8100491b:	0f b6 03             	movzbl (%ebx),%eax
8100491e:	0f be c0             	movsbl %al,%eax
81004921:	83 e8 30             	sub    $0x30,%eax
81004924:	83 f8 09             	cmp    $0x9,%eax
81004927:	76 d3                	jbe    810048fc <_vfiprintf_r+0x19c>
81004929:	0f b6 03             	movzbl (%ebx),%eax
8100492c:	3c 2e                	cmp    $0x2e,%al
8100492e:	75 67                	jne    81004997 <_vfiprintf_r+0x237>
81004930:	83 c3 01             	add    $0x1,%ebx
81004933:	0f b6 03             	movzbl (%ebx),%eax
81004936:	3c 2a                	cmp    $0x2a,%al
81004938:	75 27                	jne    81004961 <_vfiprintf_r+0x201>
8100493a:	83 c3 01             	add    $0x1,%ebx
8100493d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004943:	8d 50 04             	lea    0x4(%eax),%edx
81004946:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100494c:	8b 00                	mov    (%eax),%eax
8100494e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004951:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004954:	85 c0                	test   %eax,%eax
81004956:	79 3f                	jns    81004997 <_vfiprintf_r+0x237>
81004958:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100495f:	eb 36                	jmp    81004997 <_vfiprintf_r+0x237>
81004961:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81004968:	eb 1f                	jmp    81004989 <_vfiprintf_r+0x229>
8100496a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100496d:	89 d0                	mov    %edx,%eax
8100496f:	c1 e0 02             	shl    $0x2,%eax
81004972:	01 d0                	add    %edx,%eax
81004974:	01 c0                	add    %eax,%eax
81004976:	89 c2                	mov    %eax,%edx
81004978:	0f b6 03             	movzbl (%ebx),%eax
8100497b:	0f be c0             	movsbl %al,%eax
8100497e:	83 e8 30             	sub    $0x30,%eax
81004981:	01 d0                	add    %edx,%eax
81004983:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004986:	83 c3 01             	add    $0x1,%ebx
81004989:	0f b6 03             	movzbl (%ebx),%eax
8100498c:	0f be c0             	movsbl %al,%eax
8100498f:	83 e8 30             	sub    $0x30,%eax
81004992:	83 f8 09             	cmp    $0x9,%eax
81004995:	76 d3                	jbe    8100496a <_vfiprintf_r+0x20a>
81004997:	c7 45 dc 62 77 00 81 	movl   $0x81007762,-0x24(%ebp)
8100499e:	0f b6 03             	movzbl (%ebx),%eax
810049a1:	0f be c0             	movsbl %al,%eax
810049a4:	83 ec 04             	sub    $0x4,%esp
810049a7:	6a 03                	push   $0x3
810049a9:	50                   	push   %eax
810049aa:	ff 75 dc             	push   -0x24(%ebp)
810049ad:	e8 4e f9 ff ff       	call   81004300 <memchr>
810049b2:	83 c4 10             	add    $0x10,%esp
810049b5:	89 c6                	mov    %eax,%esi
810049b7:	85 f6                	test   %esi,%esi
810049b9:	74 1b                	je     810049d6 <_vfiprintf_r+0x276>
810049bb:	8b 55 80             	mov    -0x80(%ebp),%edx
810049be:	89 f0                	mov    %esi,%eax
810049c0:	2b 45 dc             	sub    -0x24(%ebp),%eax
810049c3:	be 40 00 00 00       	mov    $0x40,%esi
810049c8:	89 c1                	mov    %eax,%ecx
810049ca:	d3 e6                	shl    %cl,%esi
810049cc:	89 f0                	mov    %esi,%eax
810049ce:	09 d0                	or     %edx,%eax
810049d0:	89 45 80             	mov    %eax,-0x80(%ebp)
810049d3:	83 c3 01             	add    $0x1,%ebx
810049d6:	89 d8                	mov    %ebx,%eax
810049d8:	8d 58 01             	lea    0x1(%eax),%ebx
810049db:	0f b6 00             	movzbl (%eax),%eax
810049de:	88 45 98             	mov    %al,-0x68(%ebp)
810049e1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810049e5:	0f be c0             	movsbl %al,%eax
810049e8:	83 ec 04             	sub    $0x4,%esp
810049eb:	6a 06                	push   $0x6
810049ed:	50                   	push   %eax
810049ee:	68 66 77 00 81       	push   $0x81007766
810049f3:	e8 08 f9 ff ff       	call   81004300 <memchr>
810049f8:	83 c4 10             	add    $0x10,%esp
810049fb:	89 c6                	mov    %eax,%esi
810049fd:	85 f6                	test   %esi,%esi
810049ff:	74 5a                	je     81004a5b <_vfiprintf_r+0x2fb>
81004a01:	b8 00 00 00 00       	mov    $0x0,%eax
81004a06:	85 c0                	test   %eax,%eax
81004a08:	75 2e                	jne    81004a38 <_vfiprintf_r+0x2d8>
81004a0a:	8b 45 80             	mov    -0x80(%ebp),%eax
81004a0d:	25 00 01 00 00       	and    $0x100,%eax
81004a12:	85 c0                	test   %eax,%eax
81004a14:	74 11                	je     81004a27 <_vfiprintf_r+0x2c7>
81004a16:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a1c:	83 c0 0c             	add    $0xc,%eax
81004a1f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a25:	eb 55                	jmp    81004a7c <_vfiprintf_r+0x31c>
81004a27:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004a2d:	83 c0 08             	add    $0x8,%eax
81004a30:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004a36:	eb 44                	jmp    81004a7c <_vfiprintf_r+0x31c>
81004a38:	83 ec 0c             	sub    $0xc,%esp
81004a3b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a41:	50                   	push   %eax
81004a42:	ff 75 e4             	push   -0x1c(%ebp)
81004a45:	ff 75 0c             	push   0xc(%ebp)
81004a48:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a4b:	50                   	push   %eax
81004a4c:	ff 75 08             	push   0x8(%ebp)
81004a4f:	e8 ac b5 ff 7e       	call   0 <do_help-0x81000000>
81004a54:	83 c4 20             	add    $0x20,%esp
81004a57:	89 c7                	mov    %eax,%edi
81004a59:	eb 21                	jmp    81004a7c <_vfiprintf_r+0x31c>
81004a5b:	83 ec 0c             	sub    $0xc,%esp
81004a5e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a64:	50                   	push   %eax
81004a65:	ff 75 e4             	push   -0x1c(%ebp)
81004a68:	ff 75 0c             	push   0xc(%ebp)
81004a6b:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a6e:	50                   	push   %eax
81004a6f:	ff 75 08             	push   0x8(%ebp)
81004a72:	e8 da 01 00 00       	call   81004c51 <_printf_i>
81004a77:	83 c4 20             	add    $0x20,%esp
81004a7a:	89 c7                	mov    %eax,%edi
81004a7c:	83 ff ff             	cmp    $0xffffffff,%edi
81004a7f:	74 13                	je     81004a94 <_vfiprintf_r+0x334>
81004a81:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a84:	01 f8                	add    %edi,%eax
81004a86:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004a89:	e9 5c fd ff ff       	jmp    810047ea <_vfiprintf_r+0x8a>
81004a8e:	90                   	nop
81004a8f:	eb 04                	jmp    81004a95 <_vfiprintf_r+0x335>
81004a91:	90                   	nop
81004a92:	eb 01                	jmp    81004a95 <_vfiprintf_r+0x335>
81004a94:	90                   	nop
81004a95:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a98:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004a9c:	98                   	cwtl   
81004a9d:	83 e0 40             	and    $0x40,%eax
81004aa0:	85 c0                	test   %eax,%eax
81004aa2:	75 05                	jne    81004aa9 <_vfiprintf_r+0x349>
81004aa4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004aa7:	eb 05                	jmp    81004aae <_vfiprintf_r+0x34e>
81004aa9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004aae:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004ab1:	5b                   	pop    %ebx
81004ab2:	5e                   	pop    %esi
81004ab3:	5f                   	pop    %edi
81004ab4:	5d                   	pop    %ebp
81004ab5:	c3                   	ret    

81004ab6 <_printf_common>:
81004ab6:	55                   	push   %ebp
81004ab7:	89 e5                	mov    %esp,%ebp
81004ab9:	83 ec 18             	sub    $0x18,%esp
81004abc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004abf:	8b 50 10             	mov    0x10(%eax),%edx
81004ac2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ac5:	8b 40 08             	mov    0x8(%eax),%eax
81004ac8:	39 c2                	cmp    %eax,%edx
81004aca:	0f 4c d0             	cmovl  %eax,%edx
81004acd:	8b 45 10             	mov    0x10(%ebp),%eax
81004ad0:	89 10                	mov    %edx,(%eax)
81004ad2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ad5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004ad9:	84 c0                	test   %al,%al
81004adb:	74 0d                	je     81004aea <_printf_common+0x34>
81004add:	8b 45 10             	mov    0x10(%ebp),%eax
81004ae0:	8b 00                	mov    (%eax),%eax
81004ae2:	8d 50 01             	lea    0x1(%eax),%edx
81004ae5:	8b 45 10             	mov    0x10(%ebp),%eax
81004ae8:	89 10                	mov    %edx,(%eax)
81004aea:	8b 45 0c             	mov    0xc(%ebp),%eax
81004aed:	8b 00                	mov    (%eax),%eax
81004aef:	83 e0 20             	and    $0x20,%eax
81004af2:	85 c0                	test   %eax,%eax
81004af4:	74 0d                	je     81004b03 <_printf_common+0x4d>
81004af6:	8b 45 10             	mov    0x10(%ebp),%eax
81004af9:	8b 00                	mov    (%eax),%eax
81004afb:	8d 50 02             	lea    0x2(%eax),%edx
81004afe:	8b 45 10             	mov    0x10(%ebp),%eax
81004b01:	89 10                	mov    %edx,(%eax)
81004b03:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b06:	8b 00                	mov    (%eax),%eax
81004b08:	83 e0 06             	and    $0x6,%eax
81004b0b:	85 c0                	test   %eax,%eax
81004b0d:	75 41                	jne    81004b50 <_printf_common+0x9a>
81004b0f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004b16:	eb 24                	jmp    81004b3c <_printf_common+0x86>
81004b18:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b1b:	83 c0 19             	add    $0x19,%eax
81004b1e:	6a 01                	push   $0x1
81004b20:	50                   	push   %eax
81004b21:	ff 75 14             	push   0x14(%ebp)
81004b24:	ff 75 08             	push   0x8(%ebp)
81004b27:	8b 45 18             	mov    0x18(%ebp),%eax
81004b2a:	ff d0                	call   *%eax
81004b2c:	83 c4 10             	add    $0x10,%esp
81004b2f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b32:	0f 84 0b 01 00 00    	je     81004c43 <_printf_common+0x18d>
81004b38:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004b3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b3f:	8b 50 0c             	mov    0xc(%eax),%edx
81004b42:	8b 45 10             	mov    0x10(%ebp),%eax
81004b45:	8b 08                	mov    (%eax),%ecx
81004b47:	89 d0                	mov    %edx,%eax
81004b49:	29 c8                	sub    %ecx,%eax
81004b4b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004b4e:	7c c8                	jl     81004b18 <_printf_common+0x62>
81004b50:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b57:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b5a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004b5e:	84 c0                	test   %al,%al
81004b60:	74 04                	je     81004b66 <_printf_common+0xb0>
81004b62:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004b66:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b69:	8b 00                	mov    (%eax),%eax
81004b6b:	83 e0 20             	and    $0x20,%eax
81004b6e:	85 c0                	test   %eax,%eax
81004b70:	74 28                	je     81004b9a <_printf_common+0xe4>
81004b72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b75:	8d 50 01             	lea    0x1(%eax),%edx
81004b78:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004b7b:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b7e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004b83:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b86:	8d 50 01             	lea    0x1(%eax),%edx
81004b89:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004b8c:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b8f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004b93:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b96:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81004b9a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b9d:	8b 55 0c             	mov    0xc(%ebp),%edx
81004ba0:	83 c2 43             	add    $0x43,%edx
81004ba3:	50                   	push   %eax
81004ba4:	52                   	push   %edx
81004ba5:	ff 75 14             	push   0x14(%ebp)
81004ba8:	ff 75 08             	push   0x8(%ebp)
81004bab:	8b 45 18             	mov    0x18(%ebp),%eax
81004bae:	ff d0                	call   *%eax
81004bb0:	83 c4 10             	add    $0x10,%esp
81004bb3:	83 f8 ff             	cmp    $0xffffffff,%eax
81004bb6:	0f 84 8a 00 00 00    	je     81004c46 <_printf_common+0x190>
81004bbc:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bbf:	8b 50 0c             	mov    0xc(%eax),%edx
81004bc2:	8b 45 10             	mov    0x10(%ebp),%eax
81004bc5:	8b 08                	mov    (%eax),%ecx
81004bc7:	89 d0                	mov    %edx,%eax
81004bc9:	29 c8                	sub    %ecx,%eax
81004bcb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bd1:	8b 00                	mov    (%eax),%eax
81004bd3:	83 e0 06             	and    $0x6,%eax
81004bd6:	83 f8 04             	cmp    $0x4,%eax
81004bd9:	75 06                	jne    81004be1 <_printf_common+0x12b>
81004bdb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004bdf:	79 07                	jns    81004be8 <_printf_common+0x132>
81004be1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004be8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004beb:	8b 50 08             	mov    0x8(%eax),%edx
81004bee:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bf1:	8b 40 10             	mov    0x10(%eax),%eax
81004bf4:	39 c2                	cmp    %eax,%edx
81004bf6:	7e 13                	jle    81004c0b <_printf_common+0x155>
81004bf8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bfb:	8b 50 08             	mov    0x8(%eax),%edx
81004bfe:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c01:	8b 48 10             	mov    0x10(%eax),%ecx
81004c04:	89 d0                	mov    %edx,%eax
81004c06:	29 c8                	sub    %ecx,%eax
81004c08:	01 45 f4             	add    %eax,-0xc(%ebp)
81004c0b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004c12:	eb 20                	jmp    81004c34 <_printf_common+0x17e>
81004c14:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c17:	83 c0 1a             	add    $0x1a,%eax
81004c1a:	6a 01                	push   $0x1
81004c1c:	50                   	push   %eax
81004c1d:	ff 75 14             	push   0x14(%ebp)
81004c20:	ff 75 08             	push   0x8(%ebp)
81004c23:	8b 45 18             	mov    0x18(%ebp),%eax
81004c26:	ff d0                	call   *%eax
81004c28:	83 c4 10             	add    $0x10,%esp
81004c2b:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c2e:	74 19                	je     81004c49 <_printf_common+0x193>
81004c30:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004c34:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c37:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81004c3a:	7c d8                	jl     81004c14 <_printf_common+0x15e>
81004c3c:	b8 00 00 00 00       	mov    $0x0,%eax
81004c41:	eb 0c                	jmp    81004c4f <_printf_common+0x199>
81004c43:	90                   	nop
81004c44:	eb 04                	jmp    81004c4a <_printf_common+0x194>
81004c46:	90                   	nop
81004c47:	eb 01                	jmp    81004c4a <_printf_common+0x194>
81004c49:	90                   	nop
81004c4a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c4f:	c9                   	leave  
81004c50:	c3                   	ret    

81004c51 <_printf_i>:
81004c51:	55                   	push   %ebp
81004c52:	89 e5                	mov    %esp,%ebp
81004c54:	53                   	push   %ebx
81004c55:	83 ec 24             	sub    $0x24,%esp
81004c58:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c5b:	83 c0 1b             	add    $0x1b,%eax
81004c5e:	83 c0 28             	add    $0x28,%eax
81004c61:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c64:	c7 45 e8 70 77 00 81 	movl   $0x81007770,-0x18(%ebp)
81004c6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c6e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004c72:	0f be c0             	movsbl %al,%eax
81004c75:	85 c0                	test   %eax,%eax
81004c77:	0f 84 00 03 00 00    	je     81004f7d <_printf_i+0x32c>
81004c7d:	85 c0                	test   %eax,%eax
81004c7f:	0f 88 52 03 00 00    	js     81004fd7 <_printf_i+0x386>
81004c85:	83 f8 78             	cmp    $0x78,%eax
81004c88:	0f 8f 49 03 00 00    	jg     81004fd7 <_printf_i+0x386>
81004c8e:	83 f8 58             	cmp    $0x58,%eax
81004c91:	0f 8c 40 03 00 00    	jl     81004fd7 <_printf_i+0x386>
81004c97:	83 e8 58             	sub    $0x58,%eax
81004c9a:	83 f8 20             	cmp    $0x20,%eax
81004c9d:	0f 87 34 03 00 00    	ja     81004fd7 <_printf_i+0x386>
81004ca3:	8b 04 85 94 77 00 81 	mov    -0x7eff886c(,%eax,4),%eax
81004caa:	ff e0                	jmp    *%eax
81004cac:	8b 45 18             	mov    0x18(%ebp),%eax
81004caf:	8b 00                	mov    (%eax),%eax
81004cb1:	8d 48 04             	lea    0x4(%eax),%ecx
81004cb4:	8b 55 18             	mov    0x18(%ebp),%edx
81004cb7:	89 0a                	mov    %ecx,(%edx)
81004cb9:	8b 00                	mov    (%eax),%eax
81004cbb:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004cbf:	89 c2                	mov    %eax,%edx
81004cc1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004cc4:	88 10                	mov    %dl,(%eax)
81004cc6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cc9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004cd0:	e9 1c 03 00 00       	jmp    81004ff1 <_printf_i+0x3a0>
81004cd5:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cd8:	8b 00                	mov    (%eax),%eax
81004cda:	25 80 00 00 00       	and    $0x80,%eax
81004cdf:	85 c0                	test   %eax,%eax
81004ce1:	74 11                	je     81004cf4 <_printf_i+0xa3>
81004ce3:	8b 45 18             	mov    0x18(%ebp),%eax
81004ce6:	8b 00                	mov    (%eax),%eax
81004ce8:	8d 48 04             	lea    0x4(%eax),%ecx
81004ceb:	8b 55 18             	mov    0x18(%ebp),%edx
81004cee:	89 0a                	mov    %ecx,(%edx)
81004cf0:	8b 00                	mov    (%eax),%eax
81004cf2:	eb 2d                	jmp    81004d21 <_printf_i+0xd0>
81004cf4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cf7:	8b 00                	mov    (%eax),%eax
81004cf9:	83 e0 40             	and    $0x40,%eax
81004cfc:	85 c0                	test   %eax,%eax
81004cfe:	74 12                	je     81004d12 <_printf_i+0xc1>
81004d00:	8b 45 18             	mov    0x18(%ebp),%eax
81004d03:	8b 00                	mov    (%eax),%eax
81004d05:	8d 48 04             	lea    0x4(%eax),%ecx
81004d08:	8b 55 18             	mov    0x18(%ebp),%edx
81004d0b:	89 0a                	mov    %ecx,(%edx)
81004d0d:	8b 00                	mov    (%eax),%eax
81004d0f:	98                   	cwtl   
81004d10:	eb 0f                	jmp    81004d21 <_printf_i+0xd0>
81004d12:	8b 45 18             	mov    0x18(%ebp),%eax
81004d15:	8b 00                	mov    (%eax),%eax
81004d17:	8d 48 04             	lea    0x4(%eax),%ecx
81004d1a:	8b 55 18             	mov    0x18(%ebp),%edx
81004d1d:	89 0a                	mov    %ecx,(%edx)
81004d1f:	8b 00                	mov    (%eax),%eax
81004d21:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d24:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d27:	85 c0                	test   %eax,%eax
81004d29:	79 0a                	jns    81004d35 <_printf_i+0xe4>
81004d2b:	f7 5d f4             	negl   -0xc(%ebp)
81004d2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d31:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004d35:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81004d3c:	e9 28 01 00 00       	jmp    81004e69 <_printf_i+0x218>
81004d41:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d44:	8b 00                	mov    (%eax),%eax
81004d46:	25 80 00 00 00       	and    $0x80,%eax
81004d4b:	85 c0                	test   %eax,%eax
81004d4d:	74 11                	je     81004d60 <_printf_i+0x10f>
81004d4f:	8b 45 18             	mov    0x18(%ebp),%eax
81004d52:	8b 00                	mov    (%eax),%eax
81004d54:	8d 48 04             	lea    0x4(%eax),%ecx
81004d57:	8b 55 18             	mov    0x18(%ebp),%edx
81004d5a:	89 0a                	mov    %ecx,(%edx)
81004d5c:	8b 00                	mov    (%eax),%eax
81004d5e:	eb 2f                	jmp    81004d8f <_printf_i+0x13e>
81004d60:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d63:	8b 00                	mov    (%eax),%eax
81004d65:	83 e0 40             	and    $0x40,%eax
81004d68:	85 c0                	test   %eax,%eax
81004d6a:	74 14                	je     81004d80 <_printf_i+0x12f>
81004d6c:	8b 45 18             	mov    0x18(%ebp),%eax
81004d6f:	8b 00                	mov    (%eax),%eax
81004d71:	8d 48 04             	lea    0x4(%eax),%ecx
81004d74:	8b 55 18             	mov    0x18(%ebp),%edx
81004d77:	89 0a                	mov    %ecx,(%edx)
81004d79:	8b 00                	mov    (%eax),%eax
81004d7b:	0f b7 c0             	movzwl %ax,%eax
81004d7e:	eb 0f                	jmp    81004d8f <_printf_i+0x13e>
81004d80:	8b 45 18             	mov    0x18(%ebp),%eax
81004d83:	8b 00                	mov    (%eax),%eax
81004d85:	8d 48 04             	lea    0x4(%eax),%ecx
81004d88:	8b 55 18             	mov    0x18(%ebp),%edx
81004d8b:	89 0a                	mov    %ecx,(%edx)
81004d8d:	8b 00                	mov    (%eax),%eax
81004d8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d92:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d95:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004d99:	3c 6f                	cmp    $0x6f,%al
81004d9b:	75 07                	jne    81004da4 <_printf_i+0x153>
81004d9d:	b8 08 00 00 00       	mov    $0x8,%eax
81004da2:	eb 05                	jmp    81004da9 <_printf_i+0x158>
81004da4:	b8 0a 00 00 00       	mov    $0xa,%eax
81004da9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004dac:	e9 b1 00 00 00       	jmp    81004e62 <_printf_i+0x211>
81004db1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004db4:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81004db8:	eb 1d                	jmp    81004dd7 <_printf_i+0x186>
81004dba:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dbd:	8b 00                	mov    (%eax),%eax
81004dbf:	83 c8 20             	or     $0x20,%eax
81004dc2:	89 c2                	mov    %eax,%edx
81004dc4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dc7:	89 10                	mov    %edx,(%eax)
81004dc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dcc:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004dd0:	c7 45 e8 81 77 00 81 	movl   $0x81007781,-0x18(%ebp)
81004dd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dda:	8b 00                	mov    (%eax),%eax
81004ddc:	25 80 00 00 00       	and    $0x80,%eax
81004de1:	85 c0                	test   %eax,%eax
81004de3:	74 11                	je     81004df6 <_printf_i+0x1a5>
81004de5:	8b 45 18             	mov    0x18(%ebp),%eax
81004de8:	8b 00                	mov    (%eax),%eax
81004dea:	8d 48 04             	lea    0x4(%eax),%ecx
81004ded:	8b 55 18             	mov    0x18(%ebp),%edx
81004df0:	89 0a                	mov    %ecx,(%edx)
81004df2:	8b 00                	mov    (%eax),%eax
81004df4:	eb 2f                	jmp    81004e25 <_printf_i+0x1d4>
81004df6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004df9:	8b 00                	mov    (%eax),%eax
81004dfb:	83 e0 40             	and    $0x40,%eax
81004dfe:	85 c0                	test   %eax,%eax
81004e00:	74 14                	je     81004e16 <_printf_i+0x1c5>
81004e02:	8b 45 18             	mov    0x18(%ebp),%eax
81004e05:	8b 00                	mov    (%eax),%eax
81004e07:	8d 48 04             	lea    0x4(%eax),%ecx
81004e0a:	8b 55 18             	mov    0x18(%ebp),%edx
81004e0d:	89 0a                	mov    %ecx,(%edx)
81004e0f:	8b 00                	mov    (%eax),%eax
81004e11:	0f b7 c0             	movzwl %ax,%eax
81004e14:	eb 0f                	jmp    81004e25 <_printf_i+0x1d4>
81004e16:	8b 45 18             	mov    0x18(%ebp),%eax
81004e19:	8b 00                	mov    (%eax),%eax
81004e1b:	8d 48 04             	lea    0x4(%eax),%ecx
81004e1e:	8b 55 18             	mov    0x18(%ebp),%edx
81004e21:	89 0a                	mov    %ecx,(%edx)
81004e23:	8b 00                	mov    (%eax),%eax
81004e25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e28:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004e2f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e32:	8b 00                	mov    (%eax),%eax
81004e34:	83 e0 01             	and    $0x1,%eax
81004e37:	85 c0                	test   %eax,%eax
81004e39:	74 0f                	je     81004e4a <_printf_i+0x1f9>
81004e3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e3e:	8b 00                	mov    (%eax),%eax
81004e40:	83 c8 20             	or     $0x20,%eax
81004e43:	89 c2                	mov    %eax,%edx
81004e45:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e48:	89 10                	mov    %edx,(%eax)
81004e4a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e4e:	75 11                	jne    81004e61 <_printf_i+0x210>
81004e50:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e53:	8b 00                	mov    (%eax),%eax
81004e55:	83 e0 df             	and    $0xffffffdf,%eax
81004e58:	89 c2                	mov    %eax,%edx
81004e5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e5d:	89 10                	mov    %edx,(%eax)
81004e5f:	eb 01                	jmp    81004e62 <_printf_i+0x211>
81004e61:	90                   	nop
81004e62:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e65:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004e69:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e6c:	8b 50 04             	mov    0x4(%eax),%edx
81004e6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e72:	89 50 08             	mov    %edx,0x8(%eax)
81004e75:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e78:	8b 40 08             	mov    0x8(%eax),%eax
81004e7b:	85 c0                	test   %eax,%eax
81004e7d:	78 0f                	js     81004e8e <_printf_i+0x23d>
81004e7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e82:	8b 00                	mov    (%eax),%eax
81004e84:	83 e0 fb             	and    $0xfffffffb,%eax
81004e87:	89 c2                	mov    %eax,%edx
81004e89:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e8c:	89 10                	mov    %edx,(%eax)
81004e8e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e92:	75 0a                	jne    81004e9e <_printf_i+0x24d>
81004e94:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e97:	8b 40 04             	mov    0x4(%eax),%eax
81004e9a:	85 c0                	test   %eax,%eax
81004e9c:	74 34                	je     81004ed2 <_printf_i+0x281>
81004e9e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004ea1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ea4:	ba 00 00 00 00       	mov    $0x0,%edx
81004ea9:	f7 f1                	div    %ecx
81004eab:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004eae:	01 d0                	add    %edx,%eax
81004eb0:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004eb4:	0f b6 10             	movzbl (%eax),%edx
81004eb7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004eba:	88 10                	mov    %dl,(%eax)
81004ebc:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004ebf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ec2:	ba 00 00 00 00       	mov    $0x0,%edx
81004ec7:	f7 f3                	div    %ebx
81004ec9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ecc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ed0:	75 cc                	jne    81004e9e <_printf_i+0x24d>
81004ed2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004ed6:	75 26                	jne    81004efe <_printf_i+0x2ad>
81004ed8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004edb:	8b 00                	mov    (%eax),%eax
81004edd:	83 e0 01             	and    $0x1,%eax
81004ee0:	85 c0                	test   %eax,%eax
81004ee2:	74 1a                	je     81004efe <_printf_i+0x2ad>
81004ee4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ee7:	8b 50 04             	mov    0x4(%eax),%edx
81004eea:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eed:	8b 40 10             	mov    0x10(%eax),%eax
81004ef0:	39 c2                	cmp    %eax,%edx
81004ef2:	7f 0a                	jg     81004efe <_printf_i+0x2ad>
81004ef4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004ef8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004efb:	c6 00 30             	movb   $0x30,(%eax)
81004efe:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f01:	83 c0 1b             	add    $0x1b,%eax
81004f04:	83 c0 28             	add    $0x28,%eax
81004f07:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004f0a:	89 c2                	mov    %eax,%edx
81004f0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f0f:	89 50 10             	mov    %edx,0x10(%eax)
81004f12:	e9 e2 00 00 00       	jmp    81004ff9 <_printf_i+0x3a8>
81004f17:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f1a:	8b 00                	mov    (%eax),%eax
81004f1c:	25 80 00 00 00       	and    $0x80,%eax
81004f21:	85 c0                	test   %eax,%eax
81004f23:	74 19                	je     81004f3e <_printf_i+0x2ed>
81004f25:	8b 45 18             	mov    0x18(%ebp),%eax
81004f28:	8b 00                	mov    (%eax),%eax
81004f2a:	8d 48 04             	lea    0x4(%eax),%ecx
81004f2d:	8b 55 18             	mov    0x18(%ebp),%edx
81004f30:	89 0a                	mov    %ecx,(%edx)
81004f32:	8b 00                	mov    (%eax),%eax
81004f34:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f37:	8b 52 14             	mov    0x14(%edx),%edx
81004f3a:	89 10                	mov    %edx,(%eax)
81004f3c:	eb 3f                	jmp    81004f7d <_printf_i+0x32c>
81004f3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f41:	8b 00                	mov    (%eax),%eax
81004f43:	83 e0 40             	and    $0x40,%eax
81004f46:	85 c0                	test   %eax,%eax
81004f48:	74 1c                	je     81004f66 <_printf_i+0x315>
81004f4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f4d:	8b 58 14             	mov    0x14(%eax),%ebx
81004f50:	8b 45 18             	mov    0x18(%ebp),%eax
81004f53:	8b 00                	mov    (%eax),%eax
81004f55:	8d 48 04             	lea    0x4(%eax),%ecx
81004f58:	8b 55 18             	mov    0x18(%ebp),%edx
81004f5b:	89 0a                	mov    %ecx,(%edx)
81004f5d:	8b 00                	mov    (%eax),%eax
81004f5f:	89 da                	mov    %ebx,%edx
81004f61:	66 89 10             	mov    %dx,(%eax)
81004f64:	eb 17                	jmp    81004f7d <_printf_i+0x32c>
81004f66:	8b 45 18             	mov    0x18(%ebp),%eax
81004f69:	8b 00                	mov    (%eax),%eax
81004f6b:	8d 48 04             	lea    0x4(%eax),%ecx
81004f6e:	8b 55 18             	mov    0x18(%ebp),%edx
81004f71:	89 0a                	mov    %ecx,(%edx)
81004f73:	8b 00                	mov    (%eax),%eax
81004f75:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f78:	8b 52 14             	mov    0x14(%edx),%edx
81004f7b:	89 10                	mov    %edx,(%eax)
81004f7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f80:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004f87:	eb 70                	jmp    81004ff9 <_printf_i+0x3a8>
81004f89:	8b 45 18             	mov    0x18(%ebp),%eax
81004f8c:	8b 00                	mov    (%eax),%eax
81004f8e:	8d 48 04             	lea    0x4(%eax),%ecx
81004f91:	8b 55 18             	mov    0x18(%ebp),%edx
81004f94:	89 0a                	mov    %ecx,(%edx)
81004f96:	8b 00                	mov    (%eax),%eax
81004f98:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004f9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f9e:	8b 40 04             	mov    0x4(%eax),%eax
81004fa1:	83 ec 04             	sub    $0x4,%esp
81004fa4:	50                   	push   %eax
81004fa5:	6a 00                	push   $0x0
81004fa7:	ff 75 ec             	push   -0x14(%ebp)
81004faa:	e8 51 f3 ff ff       	call   81004300 <memchr>
81004faf:	83 c4 10             	add    $0x10,%esp
81004fb2:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004fb5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004fb9:	74 0e                	je     81004fc9 <_printf_i+0x378>
81004fbb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004fbe:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004fc1:	89 c2                	mov    %eax,%edx
81004fc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fc6:	89 50 04             	mov    %edx,0x4(%eax)
81004fc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fcc:	8b 50 04             	mov    0x4(%eax),%edx
81004fcf:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fd2:	89 50 10             	mov    %edx,0x10(%eax)
81004fd5:	eb 1a                	jmp    81004ff1 <_printf_i+0x3a0>
81004fd7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004fdb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fde:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004fe2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004fe5:	88 10                	mov    %dl,(%eax)
81004fe7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fea:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004ff1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004ff8:	90                   	nop
81004ff9:	83 ec 0c             	sub    $0xc,%esp
81004ffc:	ff 75 14             	push   0x14(%ebp)
81004fff:	ff 75 10             	push   0x10(%ebp)
81005002:	8d 45 d8             	lea    -0x28(%ebp),%eax
81005005:	50                   	push   %eax
81005006:	ff 75 0c             	push   0xc(%ebp)
81005009:	ff 75 08             	push   0x8(%ebp)
8100500c:	e8 a5 fa ff ff       	call   81004ab6 <_printf_common>
81005011:	83 c4 20             	add    $0x20,%esp
81005014:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005017:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
8100501b:	74 72                	je     8100508f <_printf_i+0x43e>
8100501d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005020:	8b 40 10             	mov    0x10(%eax),%eax
81005023:	50                   	push   %eax
81005024:	ff 75 ec             	push   -0x14(%ebp)
81005027:	ff 75 10             	push   0x10(%ebp)
8100502a:	ff 75 08             	push   0x8(%ebp)
8100502d:	8b 45 14             	mov    0x14(%ebp),%eax
81005030:	ff d0                	call   *%eax
81005032:	83 c4 10             	add    $0x10,%esp
81005035:	83 f8 ff             	cmp    $0xffffffff,%eax
81005038:	74 58                	je     81005092 <_printf_i+0x441>
8100503a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100503d:	8b 00                	mov    (%eax),%eax
8100503f:	83 e0 02             	and    $0x2,%eax
81005042:	85 c0                	test   %eax,%eax
81005044:	74 39                	je     8100507f <_printf_i+0x42e>
81005046:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100504d:	eb 20                	jmp    8100506f <_printf_i+0x41e>
8100504f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005052:	83 c0 19             	add    $0x19,%eax
81005055:	6a 01                	push   $0x1
81005057:	50                   	push   %eax
81005058:	ff 75 10             	push   0x10(%ebp)
8100505b:	ff 75 08             	push   0x8(%ebp)
8100505e:	8b 45 14             	mov    0x14(%ebp),%eax
81005061:	ff d0                	call   *%eax
81005063:	83 c4 10             	add    $0x10,%esp
81005066:	83 f8 ff             	cmp    $0xffffffff,%eax
81005069:	74 2a                	je     81005095 <_printf_i+0x444>
8100506b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100506f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005072:	8b 40 0c             	mov    0xc(%eax),%eax
81005075:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005078:	29 d0                	sub    %edx,%eax
8100507a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100507d:	7c d0                	jl     8100504f <_printf_i+0x3fe>
8100507f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005082:	8b 50 0c             	mov    0xc(%eax),%edx
81005085:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005088:	39 c2                	cmp    %eax,%edx
8100508a:	0f 4d c2             	cmovge %edx,%eax
8100508d:	eb 0c                	jmp    8100509b <_printf_i+0x44a>
8100508f:	90                   	nop
81005090:	eb 04                	jmp    81005096 <_printf_i+0x445>
81005092:	90                   	nop
81005093:	eb 01                	jmp    81005096 <_printf_i+0x445>
81005095:	90                   	nop
81005096:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100509b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100509e:	c9                   	leave  
8100509f:	c3                   	ret    

810050a0 <_open_r>:
810050a0:	55                   	push   %ebp
810050a1:	89 e5                	mov    %esp,%ebp
810050a3:	83 ec 18             	sub    $0x18,%esp
810050a6:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
810050ad:	00 00 00 
810050b0:	83 ec 04             	sub    $0x4,%esp
810050b3:	ff 75 14             	push   0x14(%ebp)
810050b6:	ff 75 10             	push   0x10(%ebp)
810050b9:	ff 75 0c             	push   0xc(%ebp)
810050bc:	e8 9a b8 ff ff       	call   8100095b <open>
810050c1:	83 c4 10             	add    $0x10,%esp
810050c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050c7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810050cb:	75 14                	jne    810050e1 <_open_r+0x41>
810050cd:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
810050d2:	85 c0                	test   %eax,%eax
810050d4:	74 0b                	je     810050e1 <_open_r+0x41>
810050d6:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
810050dc:	8b 45 08             	mov    0x8(%ebp),%eax
810050df:	89 10                	mov    %edx,(%eax)
810050e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050e4:	c9                   	leave  
810050e5:	c3                   	ret    

810050e6 <_iprintf_r>:
810050e6:	55                   	push   %ebp
810050e7:	89 e5                	mov    %esp,%ebp
810050e9:	83 ec 18             	sub    $0x18,%esp
810050ec:	8d 45 10             	lea    0x10(%ebp),%eax
810050ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050f2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810050f5:	8b 45 08             	mov    0x8(%ebp),%eax
810050f8:	8b 40 08             	mov    0x8(%eax),%eax
810050fb:	52                   	push   %edx
810050fc:	ff 75 0c             	push   0xc(%ebp)
810050ff:	50                   	push   %eax
81005100:	ff 75 08             	push   0x8(%ebp)
81005103:	e8 58 f6 ff ff       	call   81004760 <_vfiprintf_r>
81005108:	83 c4 10             	add    $0x10,%esp
8100510b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100510e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005111:	c9                   	leave  
81005112:	c3                   	ret    

81005113 <iprintf>:
81005113:	55                   	push   %ebp
81005114:	89 e5                	mov    %esp,%ebp
81005116:	83 ec 18             	sub    $0x18,%esp
81005119:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100511e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005121:	8d 45 0c             	lea    0xc(%ebp),%eax
81005124:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005127:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100512a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100512d:	8b 40 08             	mov    0x8(%eax),%eax
81005130:	52                   	push   %edx
81005131:	ff 75 08             	push   0x8(%ebp)
81005134:	50                   	push   %eax
81005135:	ff 75 f4             	push   -0xc(%ebp)
81005138:	e8 23 f6 ff ff       	call   81004760 <_vfiprintf_r>
8100513d:	83 c4 10             	add    $0x10,%esp
81005140:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005143:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005146:	c9                   	leave  
81005147:	c3                   	ret    

81005148 <_puts_r>:
81005148:	55                   	push   %ebp
81005149:	89 e5                	mov    %esp,%ebp
8100514b:	83 ec 38             	sub    $0x38,%esp
8100514e:	83 ec 0c             	sub    $0xc,%esp
81005151:	ff 75 0c             	push   0xc(%ebp)
81005154:	e8 97 10 00 00       	call   810061f0 <strlen>
81005159:	83 c4 10             	add    $0x10,%esp
8100515c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100515f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005162:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005165:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005168:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100516b:	c7 45 d4 18 78 00 81 	movl   $0x81007818,-0x2c(%ebp)
81005172:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005179:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100517c:	83 c0 01             	add    $0x1,%eax
8100517f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005182:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005185:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005188:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100518f:	8b 45 08             	mov    0x8(%ebp),%eax
81005192:	8b 40 08             	mov    0x8(%eax),%eax
81005195:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005198:	8b 45 08             	mov    0x8(%ebp),%eax
8100519b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100519e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810051a2:	74 18                	je     810051bc <_puts_r+0x74>
810051a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810051a7:	8b 40 38             	mov    0x38(%eax),%eax
810051aa:	85 c0                	test   %eax,%eax
810051ac:	75 0e                	jne    810051bc <_puts_r+0x74>
810051ae:	83 ec 0c             	sub    $0xc,%esp
810051b1:	ff 75 ec             	push   -0x14(%ebp)
810051b4:	e8 e0 c2 ff ff       	call   81001499 <__sinit>
810051b9:	83 c4 10             	add    $0x10,%esp
810051bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051bf:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051c3:	98                   	cwtl   
810051c4:	25 00 20 00 00       	and    $0x2000,%eax
810051c9:	85 c0                	test   %eax,%eax
810051cb:	75 24                	jne    810051f1 <_puts_r+0xa9>
810051cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051d0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051d4:	80 cc 20             	or     $0x20,%ah
810051d7:	89 c2                	mov    %eax,%edx
810051d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051dc:	66 89 50 0c          	mov    %dx,0xc(%eax)
810051e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051e3:	8b 40 64             	mov    0x64(%eax),%eax
810051e6:	80 e4 df             	and    $0xdf,%ah
810051e9:	89 c2                	mov    %eax,%edx
810051eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810051ee:	89 50 64             	mov    %edx,0x64(%eax)
810051f1:	83 ec 04             	sub    $0x4,%esp
810051f4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810051f7:	50                   	push   %eax
810051f8:	ff 75 f0             	push   -0x10(%ebp)
810051fb:	ff 75 08             	push   0x8(%ebp)
810051fe:	e8 3e d0 ff ff       	call   81002241 <__sfvwrite_r>
81005203:	83 c4 10             	add    $0x10,%esp
81005206:	85 c0                	test   %eax,%eax
81005208:	74 07                	je     81005211 <_puts_r+0xc9>
8100520a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100520f:	eb 05                	jmp    81005216 <_puts_r+0xce>
81005211:	b8 0a 00 00 00       	mov    $0xa,%eax
81005216:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005219:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100521c:	c9                   	leave  
8100521d:	c3                   	ret    

8100521e <puts>:
8100521e:	55                   	push   %ebp
8100521f:	89 e5                	mov    %esp,%ebp
81005221:	83 ec 08             	sub    $0x8,%esp
81005224:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81005229:	83 ec 08             	sub    $0x8,%esp
8100522c:	ff 75 08             	push   0x8(%ebp)
8100522f:	50                   	push   %eax
81005230:	e8 13 ff ff ff       	call   81005148 <_puts_r>
81005235:	83 c4 10             	add    $0x10,%esp
81005238:	c9                   	leave  
81005239:	c3                   	ret    

8100523a <_realloc_r>:
8100523a:	55                   	push   %ebp
8100523b:	89 e5                	mov    %esp,%ebp
8100523d:	83 ec 78             	sub    $0x78,%esp
81005240:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005244:	75 16                	jne    8100525c <_realloc_r+0x22>
81005246:	83 ec 08             	sub    $0x8,%esp
81005249:	ff 75 10             	push   0x10(%ebp)
8100524c:	ff 75 08             	push   0x8(%ebp)
8100524f:	e8 7f e8 ff ff       	call   81003ad3 <_malloc_r>
81005254:	83 c4 10             	add    $0x10,%esp
81005257:	e9 b6 08 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
8100525c:	83 ec 0c             	sub    $0xc,%esp
8100525f:	ff 75 08             	push   0x8(%ebp)
81005262:	e8 de f2 ff ff       	call   81004545 <__malloc_lock>
81005267:	83 c4 10             	add    $0x10,%esp
8100526a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100526d:	83 e8 08             	sub    $0x8,%eax
81005270:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005273:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005276:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005279:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100527c:	8b 40 04             	mov    0x4(%eax),%eax
8100527f:	83 e0 fc             	and    $0xfffffffc,%eax
81005282:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005285:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005288:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100528b:	8b 45 10             	mov    0x10(%ebp),%eax
8100528e:	83 c0 0b             	add    $0xb,%eax
81005291:	83 f8 16             	cmp    $0x16,%eax
81005294:	76 0b                	jbe    810052a1 <_realloc_r+0x67>
81005296:	8b 45 10             	mov    0x10(%ebp),%eax
81005299:	83 c0 0b             	add    $0xb,%eax
8100529c:	83 e0 f8             	and    $0xfffffff8,%eax
8100529f:	eb 05                	jmp    810052a6 <_realloc_r+0x6c>
810052a1:	b8 10 00 00 00       	mov    $0x10,%eax
810052a6:	89 45 bc             	mov    %eax,-0x44(%ebp)
810052a9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052ac:	85 c0                	test   %eax,%eax
810052ae:	78 08                	js     810052b8 <_realloc_r+0x7e>
810052b0:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052b3:	3b 45 10             	cmp    0x10(%ebp),%eax
810052b6:	73 13                	jae    810052cb <_realloc_r+0x91>
810052b8:	8b 45 08             	mov    0x8(%ebp),%eax
810052bb:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810052c1:	b8 00 00 00 00       	mov    $0x0,%eax
810052c6:	e9 47 08 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
810052cb:	8b 55 c0             	mov    -0x40(%ebp),%edx
810052ce:	8b 45 bc             	mov    -0x44(%ebp),%eax
810052d1:	39 c2                	cmp    %eax,%edx
810052d3:	0f 8d 8b 07 00 00    	jge    81005a64 <_realloc_r+0x82a>
810052d9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810052dc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810052df:	01 d0                	add    %edx,%eax
810052e1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810052e4:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810052e9:	8b 40 08             	mov    0x8(%eax),%eax
810052ec:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810052ef:	74 1e                	je     8100530f <_realloc_r+0xd5>
810052f1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052f4:	8b 40 04             	mov    0x4(%eax),%eax
810052f7:	83 e0 fe             	and    $0xfffffffe,%eax
810052fa:	89 c2                	mov    %eax,%edx
810052fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052ff:	01 d0                	add    %edx,%eax
81005301:	8b 40 04             	mov    0x4(%eax),%eax
81005304:	83 e0 01             	and    $0x1,%eax
81005307:	85 c0                	test   %eax,%eax
81005309:	0f 85 ca 00 00 00    	jne    810053d9 <_realloc_r+0x19f>
8100530f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005312:	8b 40 04             	mov    0x4(%eax),%eax
81005315:	83 e0 fc             	and    $0xfffffffc,%eax
81005318:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100531b:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81005320:	8b 40 08             	mov    0x8(%eax),%eax
81005323:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005326:	75 71                	jne    81005399 <_realloc_r+0x15f>
81005328:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100532b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100532e:	01 d0                	add    %edx,%eax
81005330:	89 c2                	mov    %eax,%edx
81005332:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005335:	83 c0 10             	add    $0x10,%eax
81005338:	39 c2                	cmp    %eax,%edx
8100533a:	0f 8c a9 00 00 00    	jl     810053e9 <_realloc_r+0x1af>
81005340:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005343:	01 45 f0             	add    %eax,-0x10(%ebp)
81005346:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
8100534b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
8100534e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005351:	01 c8                	add    %ecx,%eax
81005353:	89 42 08             	mov    %eax,0x8(%edx)
81005356:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005359:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100535c:	89 c2                	mov    %eax,%edx
8100535e:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81005363:	8b 40 08             	mov    0x8(%eax),%eax
81005366:	83 ca 01             	or     $0x1,%edx
81005369:	89 50 04             	mov    %edx,0x4(%eax)
8100536c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100536f:	8b 40 04             	mov    0x4(%eax),%eax
81005372:	83 e0 01             	and    $0x1,%eax
81005375:	0b 45 bc             	or     -0x44(%ebp),%eax
81005378:	89 c2                	mov    %eax,%edx
8100537a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100537d:	89 50 04             	mov    %edx,0x4(%eax)
81005380:	83 ec 0c             	sub    $0xc,%esp
81005383:	ff 75 08             	push   0x8(%ebp)
81005386:	e8 c0 f1 ff ff       	call   8100454b <__malloc_unlock>
8100538b:	83 c4 10             	add    $0x10,%esp
8100538e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005391:	83 c0 08             	add    $0x8,%eax
81005394:	e9 79 07 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
81005399:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100539c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100539f:	01 d0                	add    %edx,%eax
810053a1:	89 c2                	mov    %eax,%edx
810053a3:	8b 45 bc             	mov    -0x44(%ebp),%eax
810053a6:	39 c2                	cmp    %eax,%edx
810053a8:	7c 3f                	jl     810053e9 <_realloc_r+0x1af>
810053aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810053ad:	8b 40 0c             	mov    0xc(%eax),%eax
810053b0:	89 45 b8             	mov    %eax,-0x48(%ebp)
810053b3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810053b6:	8b 40 08             	mov    0x8(%eax),%eax
810053b9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810053bc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810053bf:	8b 55 b8             	mov    -0x48(%ebp),%edx
810053c2:	89 50 0c             	mov    %edx,0xc(%eax)
810053c5:	8b 45 b8             	mov    -0x48(%ebp),%eax
810053c8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810053cb:	89 50 08             	mov    %edx,0x8(%eax)
810053ce:	8b 45 e8             	mov    -0x18(%ebp),%eax
810053d1:	01 45 f0             	add    %eax,-0x10(%ebp)
810053d4:	e9 8c 06 00 00       	jmp    81005a65 <_realloc_r+0x82b>
810053d9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810053e0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810053e7:	eb 01                	jmp    810053ea <_realloc_r+0x1b0>
810053e9:	90                   	nop
810053ea:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810053ed:	8b 40 04             	mov    0x4(%eax),%eax
810053f0:	83 e0 01             	and    $0x1,%eax
810053f3:	85 c0                	test   %eax,%eax
810053f5:	0f 85 d6 04 00 00    	jne    810058d1 <_realloc_r+0x697>
810053fb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810053fe:	8b 00                	mov    (%eax),%eax
81005400:	f7 d8                	neg    %eax
81005402:	89 c2                	mov    %eax,%edx
81005404:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005407:	01 d0                	add    %edx,%eax
81005409:	89 45 b0             	mov    %eax,-0x50(%ebp)
8100540c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100540f:	8b 40 04             	mov    0x4(%eax),%eax
81005412:	83 e0 fc             	and    $0xfffffffc,%eax
81005415:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005418:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100541c:	0f 84 4a 03 00 00    	je     8100576c <_realloc_r+0x532>
81005422:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
81005427:	8b 40 08             	mov    0x8(%eax),%eax
8100542a:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100542d:	0f 85 b0 01 00 00    	jne    810055e3 <_realloc_r+0x3a9>
81005433:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005436:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005439:	01 c2                	add    %eax,%edx
8100543b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100543e:	01 d0                	add    %edx,%eax
81005440:	89 c2                	mov    %eax,%edx
81005442:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005445:	83 c0 10             	add    $0x10,%eax
81005448:	39 c2                	cmp    %eax,%edx
8100544a:	0f 8c 1c 03 00 00    	jl     8100576c <_realloc_r+0x532>
81005450:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005453:	8b 40 0c             	mov    0xc(%eax),%eax
81005456:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005459:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100545c:	8b 40 08             	mov    0x8(%eax),%eax
8100545f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005462:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005465:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005468:	89 50 0c             	mov    %edx,0xc(%eax)
8100546b:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100546e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005471:	89 50 08             	mov    %edx,0x8(%eax)
81005474:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005477:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100547a:	8b 55 ac             	mov    -0x54(%ebp),%edx
8100547d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005480:	01 d0                	add    %edx,%eax
81005482:	01 45 f0             	add    %eax,-0x10(%ebp)
81005485:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005488:	83 c0 08             	add    $0x8,%eax
8100548b:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100548e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005491:	83 e8 04             	sub    $0x4,%eax
81005494:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005497:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
8100549b:	0f 87 de 00 00 00    	ja     8100557f <_realloc_r+0x345>
810054a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810054a4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054a7:	8b 45 a8             	mov    -0x58(%ebp),%eax
810054aa:	89 45 e0             	mov    %eax,-0x20(%ebp)
810054ad:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810054b1:	0f 86 90 00 00 00    	jbe    81005547 <_realloc_r+0x30d>
810054b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810054ba:	8d 42 04             	lea    0x4(%edx),%eax
810054bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054c0:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054c3:	8d 48 04             	lea    0x4(%eax),%ecx
810054c6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810054c9:	8b 12                	mov    (%edx),%edx
810054cb:	89 10                	mov    %edx,(%eax)
810054cd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810054d0:	8d 42 04             	lea    0x4(%edx),%eax
810054d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054d6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054d9:	8d 48 04             	lea    0x4(%eax),%ecx
810054dc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810054df:	8b 12                	mov    (%edx),%edx
810054e1:	89 10                	mov    %edx,(%eax)
810054e3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810054e7:	76 5e                	jbe    81005547 <_realloc_r+0x30d>
810054e9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810054ec:	8d 42 04             	lea    0x4(%edx),%eax
810054ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810054f2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054f5:	8d 48 04             	lea    0x4(%eax),%ecx
810054f8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810054fb:	8b 12                	mov    (%edx),%edx
810054fd:	89 10                	mov    %edx,(%eax)
810054ff:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005502:	8d 42 04             	lea    0x4(%edx),%eax
81005505:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005508:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100550b:	8d 48 04             	lea    0x4(%eax),%ecx
8100550e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005511:	8b 12                	mov    (%edx),%edx
81005513:	89 10                	mov    %edx,(%eax)
81005515:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005519:	76 2c                	jbe    81005547 <_realloc_r+0x30d>
8100551b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100551e:	8d 42 04             	lea    0x4(%edx),%eax
81005521:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005524:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005527:	8d 48 04             	lea    0x4(%eax),%ecx
8100552a:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100552d:	8b 12                	mov    (%edx),%edx
8100552f:	89 10                	mov    %edx,(%eax)
81005531:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005534:	8d 42 04             	lea    0x4(%edx),%eax
81005537:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100553a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100553d:	8d 48 04             	lea    0x4(%eax),%ecx
81005540:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005543:	8b 12                	mov    (%edx),%edx
81005545:	89 10                	mov    %edx,(%eax)
81005547:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100554a:	8d 42 04             	lea    0x4(%edx),%eax
8100554d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005550:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005553:	8d 48 04             	lea    0x4(%eax),%ecx
81005556:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005559:	8b 12                	mov    (%edx),%edx
8100555b:	89 10                	mov    %edx,(%eax)
8100555d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005560:	8d 42 04             	lea    0x4(%edx),%eax
81005563:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005566:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005569:	8d 48 04             	lea    0x4(%eax),%ecx
8100556c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100556f:	8b 12                	mov    (%edx),%edx
81005571:	89 10                	mov    %edx,(%eax)
81005573:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005576:	8b 10                	mov    (%eax),%edx
81005578:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100557b:	89 10                	mov    %edx,(%eax)
8100557d:	eb 14                	jmp    81005593 <_realloc_r+0x359>
8100557f:	83 ec 04             	sub    $0x4,%esp
81005582:	ff 75 a0             	push   -0x60(%ebp)
81005585:	ff 75 0c             	push   0xc(%ebp)
81005588:	ff 75 a8             	push   -0x58(%ebp)
8100558b:	e8 a0 ee ff ff       	call   81004430 <memmove>
81005590:	83 c4 10             	add    $0x10,%esp
81005593:	ba 20 7f 00 81       	mov    $0x81007f20,%edx
81005598:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100559b:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100559e:	01 c8                	add    %ecx,%eax
810055a0:	89 42 08             	mov    %eax,0x8(%edx)
810055a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810055a6:	2b 45 bc             	sub    -0x44(%ebp),%eax
810055a9:	89 c2                	mov    %eax,%edx
810055ab:	b8 20 7f 00 81       	mov    $0x81007f20,%eax
810055b0:	8b 40 08             	mov    0x8(%eax),%eax
810055b3:	83 ca 01             	or     $0x1,%edx
810055b6:	89 50 04             	mov    %edx,0x4(%eax)
810055b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055bc:	8b 40 04             	mov    0x4(%eax),%eax
810055bf:	83 e0 01             	and    $0x1,%eax
810055c2:	0b 45 bc             	or     -0x44(%ebp),%eax
810055c5:	89 c2                	mov    %eax,%edx
810055c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055ca:	89 50 04             	mov    %edx,0x4(%eax)
810055cd:	83 ec 0c             	sub    $0xc,%esp
810055d0:	ff 75 08             	push   0x8(%ebp)
810055d3:	e8 73 ef ff ff       	call   8100454b <__malloc_unlock>
810055d8:	83 c4 10             	add    $0x10,%esp
810055db:	8b 45 a8             	mov    -0x58(%ebp),%eax
810055de:	e9 2f 05 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
810055e3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810055e6:	8b 45 ac             	mov    -0x54(%ebp),%eax
810055e9:	01 c2                	add    %eax,%edx
810055eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810055ee:	01 d0                	add    %edx,%eax
810055f0:	89 c2                	mov    %eax,%edx
810055f2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810055f5:	39 c2                	cmp    %eax,%edx
810055f7:	0f 8c 6f 01 00 00    	jl     8100576c <_realloc_r+0x532>
810055fd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005600:	8b 40 0c             	mov    0xc(%eax),%eax
81005603:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005606:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005609:	8b 40 08             	mov    0x8(%eax),%eax
8100560c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100560f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005612:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005615:	89 50 0c             	mov    %edx,0xc(%eax)
81005618:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100561b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100561e:	89 50 08             	mov    %edx,0x8(%eax)
81005621:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005624:	8b 40 0c             	mov    0xc(%eax),%eax
81005627:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100562a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100562d:	8b 40 08             	mov    0x8(%eax),%eax
81005630:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005633:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005636:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005639:	89 50 0c             	mov    %edx,0xc(%eax)
8100563c:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100563f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005642:	89 50 08             	mov    %edx,0x8(%eax)
81005645:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005648:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100564b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100564e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005651:	01 d0                	add    %edx,%eax
81005653:	01 45 f0             	add    %eax,-0x10(%ebp)
81005656:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005659:	83 c0 08             	add    $0x8,%eax
8100565c:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100565f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005662:	83 e8 04             	sub    $0x4,%eax
81005665:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005668:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
8100566c:	0f 87 e1 00 00 00    	ja     81005753 <_realloc_r+0x519>
81005672:	8b 45 0c             	mov    0xc(%ebp),%eax
81005675:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005678:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100567b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100567e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005682:	0f 86 90 00 00 00    	jbe    81005718 <_realloc_r+0x4de>
81005688:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100568b:	8d 42 04             	lea    0x4(%edx),%eax
8100568e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005691:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005694:	8d 48 04             	lea    0x4(%eax),%ecx
81005697:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100569a:	8b 12                	mov    (%edx),%edx
8100569c:	89 10                	mov    %edx,(%eax)
8100569e:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056a1:	8d 42 04             	lea    0x4(%edx),%eax
810056a4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056a7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056aa:	8d 48 04             	lea    0x4(%eax),%ecx
810056ad:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056b0:	8b 12                	mov    (%edx),%edx
810056b2:	89 10                	mov    %edx,(%eax)
810056b4:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
810056b8:	76 5e                	jbe    81005718 <_realloc_r+0x4de>
810056ba:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056bd:	8d 42 04             	lea    0x4(%edx),%eax
810056c0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056c6:	8d 48 04             	lea    0x4(%eax),%ecx
810056c9:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056cc:	8b 12                	mov    (%edx),%edx
810056ce:	89 10                	mov    %edx,(%eax)
810056d0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056d3:	8d 42 04             	lea    0x4(%edx),%eax
810056d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056d9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056dc:	8d 48 04             	lea    0x4(%eax),%ecx
810056df:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056e2:	8b 12                	mov    (%edx),%edx
810056e4:	89 10                	mov    %edx,(%eax)
810056e6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810056ea:	76 2c                	jbe    81005718 <_realloc_r+0x4de>
810056ec:	8b 55 dc             	mov    -0x24(%ebp),%edx
810056ef:	8d 42 04             	lea    0x4(%edx),%eax
810056f2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056f5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810056f8:	8d 48 04             	lea    0x4(%eax),%ecx
810056fb:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810056fe:	8b 12                	mov    (%edx),%edx
81005700:	89 10                	mov    %edx,(%eax)
81005702:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005705:	8d 42 04             	lea    0x4(%edx),%eax
81005708:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100570b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100570e:	8d 48 04             	lea    0x4(%eax),%ecx
81005711:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005714:	8b 12                	mov    (%edx),%edx
81005716:	89 10                	mov    %edx,(%eax)
81005718:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100571b:	8d 42 04             	lea    0x4(%edx),%eax
8100571e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005721:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005724:	8d 48 04             	lea    0x4(%eax),%ecx
81005727:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100572a:	8b 12                	mov    (%edx),%edx
8100572c:	89 10                	mov    %edx,(%eax)
8100572e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005731:	8d 42 04             	lea    0x4(%edx),%eax
81005734:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005737:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100573a:	8d 48 04             	lea    0x4(%eax),%ecx
8100573d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005740:	8b 12                	mov    (%edx),%edx
81005742:	89 10                	mov    %edx,(%eax)
81005744:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005747:	8b 10                	mov    (%eax),%edx
81005749:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100574c:	89 10                	mov    %edx,(%eax)
8100574e:	e9 12 03 00 00       	jmp    81005a65 <_realloc_r+0x82b>
81005753:	83 ec 04             	sub    $0x4,%esp
81005756:	ff 75 a4             	push   -0x5c(%ebp)
81005759:	ff 75 0c             	push   0xc(%ebp)
8100575c:	ff 75 a8             	push   -0x58(%ebp)
8100575f:	e8 cc ec ff ff       	call   81004430 <memmove>
81005764:	83 c4 10             	add    $0x10,%esp
81005767:	e9 f9 02 00 00       	jmp    81005a65 <_realloc_r+0x82b>
8100576c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005770:	0f 84 5b 01 00 00    	je     810058d1 <_realloc_r+0x697>
81005776:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005779:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100577c:	01 d0                	add    %edx,%eax
8100577e:	89 c2                	mov    %eax,%edx
81005780:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005783:	39 c2                	cmp    %eax,%edx
81005785:	0f 8c 46 01 00 00    	jl     810058d1 <_realloc_r+0x697>
8100578b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100578e:	8b 40 0c             	mov    0xc(%eax),%eax
81005791:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005794:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005797:	8b 40 08             	mov    0x8(%eax),%eax
8100579a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100579d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810057a0:	8b 55 b8             	mov    -0x48(%ebp),%edx
810057a3:	89 50 0c             	mov    %edx,0xc(%eax)
810057a6:	8b 45 b8             	mov    -0x48(%ebp),%eax
810057a9:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810057ac:	89 50 08             	mov    %edx,0x8(%eax)
810057af:	8b 45 b0             	mov    -0x50(%ebp),%eax
810057b2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057b5:	8b 45 ac             	mov    -0x54(%ebp),%eax
810057b8:	01 45 f0             	add    %eax,-0x10(%ebp)
810057bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057be:	83 c0 08             	add    $0x8,%eax
810057c1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810057c4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810057c7:	83 e8 04             	sub    $0x4,%eax
810057ca:	89 45 9c             	mov    %eax,-0x64(%ebp)
810057cd:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810057d1:	0f 87 e1 00 00 00    	ja     810058b8 <_realloc_r+0x67e>
810057d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810057da:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810057dd:	8b 45 a8             	mov    -0x58(%ebp),%eax
810057e0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810057e3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810057e7:	0f 86 90 00 00 00    	jbe    8100587d <_realloc_r+0x643>
810057ed:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810057f0:	8d 42 04             	lea    0x4(%edx),%eax
810057f3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810057f6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810057f9:	8d 48 04             	lea    0x4(%eax),%ecx
810057fc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810057ff:	8b 12                	mov    (%edx),%edx
81005801:	89 10                	mov    %edx,(%eax)
81005803:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005806:	8d 42 04             	lea    0x4(%edx),%eax
81005809:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100580c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100580f:	8d 48 04             	lea    0x4(%eax),%ecx
81005812:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005815:	8b 12                	mov    (%edx),%edx
81005817:	89 10                	mov    %edx,(%eax)
81005819:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100581d:	76 5e                	jbe    8100587d <_realloc_r+0x643>
8100581f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005822:	8d 42 04             	lea    0x4(%edx),%eax
81005825:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005828:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100582b:	8d 48 04             	lea    0x4(%eax),%ecx
8100582e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005831:	8b 12                	mov    (%edx),%edx
81005833:	89 10                	mov    %edx,(%eax)
81005835:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005838:	8d 42 04             	lea    0x4(%edx),%eax
8100583b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100583e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005841:	8d 48 04             	lea    0x4(%eax),%ecx
81005844:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005847:	8b 12                	mov    (%edx),%edx
81005849:	89 10                	mov    %edx,(%eax)
8100584b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100584f:	76 2c                	jbe    8100587d <_realloc_r+0x643>
81005851:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005854:	8d 42 04             	lea    0x4(%edx),%eax
81005857:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100585a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100585d:	8d 48 04             	lea    0x4(%eax),%ecx
81005860:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005863:	8b 12                	mov    (%edx),%edx
81005865:	89 10                	mov    %edx,(%eax)
81005867:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100586a:	8d 42 04             	lea    0x4(%edx),%eax
8100586d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005870:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005873:	8d 48 04             	lea    0x4(%eax),%ecx
81005876:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005879:	8b 12                	mov    (%edx),%edx
8100587b:	89 10                	mov    %edx,(%eax)
8100587d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005880:	8d 42 04             	lea    0x4(%edx),%eax
81005883:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005886:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005889:	8d 48 04             	lea    0x4(%eax),%ecx
8100588c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100588f:	8b 12                	mov    (%edx),%edx
81005891:	89 10                	mov    %edx,(%eax)
81005893:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005896:	8d 42 04             	lea    0x4(%edx),%eax
81005899:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100589c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100589f:	8d 48 04             	lea    0x4(%eax),%ecx
810058a2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810058a5:	8b 12                	mov    (%edx),%edx
810058a7:	89 10                	mov    %edx,(%eax)
810058a9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810058ac:	8b 10                	mov    (%eax),%edx
810058ae:	8b 45 d0             	mov    -0x30(%ebp),%eax
810058b1:	89 10                	mov    %edx,(%eax)
810058b3:	e9 ad 01 00 00       	jmp    81005a65 <_realloc_r+0x82b>
810058b8:	83 ec 04             	sub    $0x4,%esp
810058bb:	ff 75 9c             	push   -0x64(%ebp)
810058be:	ff 75 0c             	push   0xc(%ebp)
810058c1:	ff 75 a8             	push   -0x58(%ebp)
810058c4:	e8 67 eb ff ff       	call   81004430 <memmove>
810058c9:	83 c4 10             	add    $0x10,%esp
810058cc:	e9 94 01 00 00       	jmp    81005a65 <_realloc_r+0x82b>
810058d1:	83 ec 08             	sub    $0x8,%esp
810058d4:	ff 75 10             	push   0x10(%ebp)
810058d7:	ff 75 08             	push   0x8(%ebp)
810058da:	e8 f4 e1 ff ff       	call   81003ad3 <_malloc_r>
810058df:	83 c4 10             	add    $0x10,%esp
810058e2:	89 45 a8             	mov    %eax,-0x58(%ebp)
810058e5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810058e9:	75 18                	jne    81005903 <_realloc_r+0x6c9>
810058eb:	83 ec 0c             	sub    $0xc,%esp
810058ee:	ff 75 08             	push   0x8(%ebp)
810058f1:	e8 55 ec ff ff       	call   8100454b <__malloc_unlock>
810058f6:	83 c4 10             	add    $0x10,%esp
810058f9:	b8 00 00 00 00       	mov    $0x0,%eax
810058fe:	e9 0f 02 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
81005903:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005906:	83 e8 08             	sub    $0x8,%eax
81005909:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100590c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100590f:	8b 40 04             	mov    0x4(%eax),%eax
81005912:	83 e0 fe             	and    $0xfffffffe,%eax
81005915:	89 c2                	mov    %eax,%edx
81005917:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100591a:	01 d0                	add    %edx,%eax
8100591c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100591f:	75 17                	jne    81005938 <_realloc_r+0x6fe>
81005921:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005924:	8b 40 04             	mov    0x4(%eax),%eax
81005927:	83 e0 fc             	and    $0xfffffffc,%eax
8100592a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100592d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005930:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005933:	e9 2d 01 00 00       	jmp    81005a65 <_realloc_r+0x82b>
81005938:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100593b:	83 e8 04             	sub    $0x4,%eax
8100593e:	89 45 98             	mov    %eax,-0x68(%ebp)
81005941:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81005945:	0f 87 de 00 00 00    	ja     81005a29 <_realloc_r+0x7ef>
8100594b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100594e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005951:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005954:	89 45 c8             	mov    %eax,-0x38(%ebp)
81005957:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100595b:	0f 86 90 00 00 00    	jbe    810059f1 <_realloc_r+0x7b7>
81005961:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005964:	8d 42 04             	lea    0x4(%edx),%eax
81005967:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100596a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100596d:	8d 48 04             	lea    0x4(%eax),%ecx
81005970:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005973:	8b 12                	mov    (%edx),%edx
81005975:	89 10                	mov    %edx,(%eax)
81005977:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100597a:	8d 42 04             	lea    0x4(%edx),%eax
8100597d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005980:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005983:	8d 48 04             	lea    0x4(%eax),%ecx
81005986:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005989:	8b 12                	mov    (%edx),%edx
8100598b:	89 10                	mov    %edx,(%eax)
8100598d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81005991:	76 5e                	jbe    810059f1 <_realloc_r+0x7b7>
81005993:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005996:	8d 42 04             	lea    0x4(%edx),%eax
81005999:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100599c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100599f:	8d 48 04             	lea    0x4(%eax),%ecx
810059a2:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059a5:	8b 12                	mov    (%edx),%edx
810059a7:	89 10                	mov    %edx,(%eax)
810059a9:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059ac:	8d 42 04             	lea    0x4(%edx),%eax
810059af:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059b2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059b5:	8d 48 04             	lea    0x4(%eax),%ecx
810059b8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059bb:	8b 12                	mov    (%edx),%edx
810059bd:	89 10                	mov    %edx,(%eax)
810059bf:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810059c3:	76 2c                	jbe    810059f1 <_realloc_r+0x7b7>
810059c5:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059c8:	8d 42 04             	lea    0x4(%edx),%eax
810059cb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059ce:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059d1:	8d 48 04             	lea    0x4(%eax),%ecx
810059d4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059d7:	8b 12                	mov    (%edx),%edx
810059d9:	89 10                	mov    %edx,(%eax)
810059db:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059de:	8d 42 04             	lea    0x4(%edx),%eax
810059e1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059e4:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059e7:	8d 48 04             	lea    0x4(%eax),%ecx
810059ea:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810059ed:	8b 12                	mov    (%edx),%edx
810059ef:	89 10                	mov    %edx,(%eax)
810059f1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810059f4:	8d 42 04             	lea    0x4(%edx),%eax
810059f7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810059fa:	8b 45 c8             	mov    -0x38(%ebp),%eax
810059fd:	8d 48 04             	lea    0x4(%eax),%ecx
81005a00:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005a03:	8b 12                	mov    (%edx),%edx
81005a05:	89 10                	mov    %edx,(%eax)
81005a07:	8b 55 cc             	mov    -0x34(%ebp),%edx
81005a0a:	8d 42 04             	lea    0x4(%edx),%eax
81005a0d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005a10:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a13:	8d 48 04             	lea    0x4(%eax),%ecx
81005a16:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81005a19:	8b 12                	mov    (%edx),%edx
81005a1b:	89 10                	mov    %edx,(%eax)
81005a1d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81005a20:	8b 10                	mov    (%eax),%edx
81005a22:	8b 45 c8             	mov    -0x38(%ebp),%eax
81005a25:	89 10                	mov    %edx,(%eax)
81005a27:	eb 14                	jmp    81005a3d <_realloc_r+0x803>
81005a29:	83 ec 04             	sub    $0x4,%esp
81005a2c:	ff 75 98             	push   -0x68(%ebp)
81005a2f:	ff 75 0c             	push   0xc(%ebp)
81005a32:	ff 75 a8             	push   -0x58(%ebp)
81005a35:	e8 f6 e9 ff ff       	call   81004430 <memmove>
81005a3a:	83 c4 10             	add    $0x10,%esp
81005a3d:	83 ec 08             	sub    $0x8,%esp
81005a40:	ff 75 0c             	push   0xc(%ebp)
81005a43:	ff 75 08             	push   0x8(%ebp)
81005a46:	e8 69 bd ff ff       	call   810017b4 <_free_r>
81005a4b:	83 c4 10             	add    $0x10,%esp
81005a4e:	83 ec 0c             	sub    $0xc,%esp
81005a51:	ff 75 08             	push   0x8(%ebp)
81005a54:	e8 f2 ea ff ff       	call   8100454b <__malloc_unlock>
81005a59:	83 c4 10             	add    $0x10,%esp
81005a5c:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005a5f:	e9 ae 00 00 00       	jmp    81005b12 <_realloc_r+0x8d8>
81005a64:	90                   	nop
81005a65:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a68:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a6b:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005a6e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81005a72:	76 5d                	jbe    81005ad1 <_realloc_r+0x897>
81005a74:	8b 55 f4             	mov    -0xc(%ebp),%edx
81005a77:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a7a:	01 d0                	add    %edx,%eax
81005a7c:	89 45 90             	mov    %eax,-0x70(%ebp)
81005a7f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a82:	8b 40 04             	mov    0x4(%eax),%eax
81005a85:	83 e0 01             	and    $0x1,%eax
81005a88:	0b 45 bc             	or     -0x44(%ebp),%eax
81005a8b:	89 c2                	mov    %eax,%edx
81005a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a90:	89 50 04             	mov    %edx,0x4(%eax)
81005a93:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005a96:	83 c8 01             	or     $0x1,%eax
81005a99:	89 c2                	mov    %eax,%edx
81005a9b:	8b 45 90             	mov    -0x70(%ebp),%eax
81005a9e:	89 50 04             	mov    %edx,0x4(%eax)
81005aa1:	8b 55 90             	mov    -0x70(%ebp),%edx
81005aa4:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005aa7:	01 d0                	add    %edx,%eax
81005aa9:	8b 50 04             	mov    0x4(%eax),%edx
81005aac:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81005aaf:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005ab2:	01 c8                	add    %ecx,%eax
81005ab4:	83 ca 01             	or     $0x1,%edx
81005ab7:	89 50 04             	mov    %edx,0x4(%eax)
81005aba:	8b 45 90             	mov    -0x70(%ebp),%eax
81005abd:	83 c0 08             	add    $0x8,%eax
81005ac0:	83 ec 08             	sub    $0x8,%esp
81005ac3:	50                   	push   %eax
81005ac4:	ff 75 08             	push   0x8(%ebp)
81005ac7:	e8 e8 bc ff ff       	call   810017b4 <_free_r>
81005acc:	83 c4 10             	add    $0x10,%esp
81005acf:	eb 2d                	jmp    81005afe <_realloc_r+0x8c4>
81005ad1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ad4:	8b 40 04             	mov    0x4(%eax),%eax
81005ad7:	83 e0 01             	and    $0x1,%eax
81005ada:	0b 45 f0             	or     -0x10(%ebp),%eax
81005add:	89 c2                	mov    %eax,%edx
81005adf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ae2:	89 50 04             	mov    %edx,0x4(%eax)
81005ae5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81005ae8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005aeb:	01 d0                	add    %edx,%eax
81005aed:	8b 50 04             	mov    0x4(%eax),%edx
81005af0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005af3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005af6:	01 c8                	add    %ecx,%eax
81005af8:	83 ca 01             	or     $0x1,%edx
81005afb:	89 50 04             	mov    %edx,0x4(%eax)
81005afe:	83 ec 0c             	sub    $0xc,%esp
81005b01:	ff 75 08             	push   0x8(%ebp)
81005b04:	e8 42 ea ff ff       	call   8100454b <__malloc_unlock>
81005b09:	83 c4 10             	add    $0x10,%esp
81005b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b0f:	83 c0 08             	add    $0x8,%eax
81005b12:	c9                   	leave  
81005b13:	c3                   	ret    

81005b14 <cleanup_glue>:
81005b14:	55                   	push   %ebp
81005b15:	89 e5                	mov    %esp,%ebp
81005b17:	83 ec 08             	sub    $0x8,%esp
81005b1a:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b1d:	8b 00                	mov    (%eax),%eax
81005b1f:	85 c0                	test   %eax,%eax
81005b21:	74 14                	je     81005b37 <cleanup_glue+0x23>
81005b23:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b26:	8b 00                	mov    (%eax),%eax
81005b28:	83 ec 08             	sub    $0x8,%esp
81005b2b:	50                   	push   %eax
81005b2c:	ff 75 08             	push   0x8(%ebp)
81005b2f:	e8 e0 ff ff ff       	call   81005b14 <cleanup_glue>
81005b34:	83 c4 10             	add    $0x10,%esp
81005b37:	83 ec 08             	sub    $0x8,%esp
81005b3a:	ff 75 0c             	push   0xc(%ebp)
81005b3d:	ff 75 08             	push   0x8(%ebp)
81005b40:	e8 6f bc ff ff       	call   810017b4 <_free_r>
81005b45:	83 c4 10             	add    $0x10,%esp
81005b48:	90                   	nop
81005b49:	c9                   	leave  
81005b4a:	c3                   	ret    

81005b4b <_reclaim_reent>:
81005b4b:	55                   	push   %ebp
81005b4c:	89 e5                	mov    %esp,%ebp
81005b4e:	83 ec 28             	sub    $0x28,%esp
81005b51:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81005b56:	39 45 08             	cmp    %eax,0x8(%ebp)
81005b59:	0f 84 49 01 00 00    	je     81005ca8 <_reclaim_reent+0x15d>
81005b5f:	8b 45 08             	mov    0x8(%ebp),%eax
81005b62:	8b 40 4c             	mov    0x4c(%eax),%eax
81005b65:	85 c0                	test   %eax,%eax
81005b67:	74 64                	je     81005bcd <_reclaim_reent+0x82>
81005b69:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005b70:	eb 3e                	jmp    81005bb0 <_reclaim_reent+0x65>
81005b72:	8b 45 08             	mov    0x8(%ebp),%eax
81005b75:	8b 50 4c             	mov    0x4c(%eax),%edx
81005b78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b7b:	c1 e0 02             	shl    $0x2,%eax
81005b7e:	01 d0                	add    %edx,%eax
81005b80:	8b 00                	mov    (%eax),%eax
81005b82:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b85:	eb 1f                	jmp    81005ba6 <_reclaim_reent+0x5b>
81005b87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b8a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005b8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b90:	8b 00                	mov    (%eax),%eax
81005b92:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b95:	83 ec 08             	sub    $0x8,%esp
81005b98:	ff 75 e8             	push   -0x18(%ebp)
81005b9b:	ff 75 08             	push   0x8(%ebp)
81005b9e:	e8 11 bc ff ff       	call   810017b4 <_free_r>
81005ba3:	83 c4 10             	add    $0x10,%esp
81005ba6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005baa:	75 db                	jne    81005b87 <_reclaim_reent+0x3c>
81005bac:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005bb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005bb3:	83 f8 1f             	cmp    $0x1f,%eax
81005bb6:	76 ba                	jbe    81005b72 <_reclaim_reent+0x27>
81005bb8:	8b 45 08             	mov    0x8(%ebp),%eax
81005bbb:	8b 40 4c             	mov    0x4c(%eax),%eax
81005bbe:	83 ec 08             	sub    $0x8,%esp
81005bc1:	50                   	push   %eax
81005bc2:	ff 75 08             	push   0x8(%ebp)
81005bc5:	e8 ea bb ff ff       	call   810017b4 <_free_r>
81005bca:	83 c4 10             	add    $0x10,%esp
81005bcd:	8b 45 08             	mov    0x8(%ebp),%eax
81005bd0:	8b 40 40             	mov    0x40(%eax),%eax
81005bd3:	85 c0                	test   %eax,%eax
81005bd5:	74 15                	je     81005bec <_reclaim_reent+0xa1>
81005bd7:	8b 45 08             	mov    0x8(%ebp),%eax
81005bda:	8b 40 40             	mov    0x40(%eax),%eax
81005bdd:	83 ec 08             	sub    $0x8,%esp
81005be0:	50                   	push   %eax
81005be1:	ff 75 08             	push   0x8(%ebp)
81005be4:	e8 cb bb ff ff       	call   810017b4 <_free_r>
81005be9:	83 c4 10             	add    $0x10,%esp
81005bec:	8b 45 08             	mov    0x8(%ebp),%eax
81005bef:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005bf5:	85 c0                	test   %eax,%eax
81005bf7:	74 50                	je     81005c49 <_reclaim_reent+0xfe>
81005bf9:	8b 45 08             	mov    0x8(%ebp),%eax
81005bfc:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005c02:	8b 55 08             	mov    0x8(%ebp),%edx
81005c05:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81005c0b:	39 d0                	cmp    %edx,%eax
81005c0d:	74 3a                	je     81005c49 <_reclaim_reent+0xfe>
81005c0f:	8b 45 08             	mov    0x8(%ebp),%eax
81005c12:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81005c18:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c1b:	eb 1f                	jmp    81005c3c <_reclaim_reent+0xf1>
81005c1d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c20:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c23:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005c26:	8b 00                	mov    (%eax),%eax
81005c28:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c2b:	83 ec 08             	sub    $0x8,%esp
81005c2e:	ff 75 e4             	push   -0x1c(%ebp)
81005c31:	ff 75 08             	push   0x8(%ebp)
81005c34:	e8 7b bb ff ff       	call   810017b4 <_free_r>
81005c39:	83 c4 10             	add    $0x10,%esp
81005c3c:	8b 45 08             	mov    0x8(%ebp),%eax
81005c3f:	05 4c 01 00 00       	add    $0x14c,%eax
81005c44:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005c47:	75 d4                	jne    81005c1d <_reclaim_reent+0xd2>
81005c49:	8b 45 08             	mov    0x8(%ebp),%eax
81005c4c:	8b 40 54             	mov    0x54(%eax),%eax
81005c4f:	85 c0                	test   %eax,%eax
81005c51:	74 15                	je     81005c68 <_reclaim_reent+0x11d>
81005c53:	8b 45 08             	mov    0x8(%ebp),%eax
81005c56:	8b 40 54             	mov    0x54(%eax),%eax
81005c59:	83 ec 08             	sub    $0x8,%esp
81005c5c:	50                   	push   %eax
81005c5d:	ff 75 08             	push   0x8(%ebp)
81005c60:	e8 4f bb ff ff       	call   810017b4 <_free_r>
81005c65:	83 c4 10             	add    $0x10,%esp
81005c68:	8b 45 08             	mov    0x8(%ebp),%eax
81005c6b:	8b 40 38             	mov    0x38(%eax),%eax
81005c6e:	85 c0                	test   %eax,%eax
81005c70:	74 36                	je     81005ca8 <_reclaim_reent+0x15d>
81005c72:	8b 45 08             	mov    0x8(%ebp),%eax
81005c75:	8b 40 3c             	mov    0x3c(%eax),%eax
81005c78:	83 ec 0c             	sub    $0xc,%esp
81005c7b:	ff 75 08             	push   0x8(%ebp)
81005c7e:	ff d0                	call   *%eax
81005c80:	83 c4 10             	add    $0x10,%esp
81005c83:	8b 45 08             	mov    0x8(%ebp),%eax
81005c86:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005c8c:	85 c0                	test   %eax,%eax
81005c8e:	74 18                	je     81005ca8 <_reclaim_reent+0x15d>
81005c90:	8b 45 08             	mov    0x8(%ebp),%eax
81005c93:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005c99:	83 ec 08             	sub    $0x8,%esp
81005c9c:	50                   	push   %eax
81005c9d:	ff 75 08             	push   0x8(%ebp)
81005ca0:	e8 6f fe ff ff       	call   81005b14 <cleanup_glue>
81005ca5:	83 c4 10             	add    $0x10,%esp
81005ca8:	90                   	nop
81005ca9:	c9                   	leave  
81005caa:	c3                   	ret    

81005cab <lflush>:
81005cab:	55                   	push   %ebp
81005cac:	89 e5                	mov    %esp,%ebp
81005cae:	83 ec 08             	sub    $0x8,%esp
81005cb1:	8b 45 08             	mov    0x8(%ebp),%eax
81005cb4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005cb8:	98                   	cwtl   
81005cb9:	83 e0 09             	and    $0x9,%eax
81005cbc:	83 f8 09             	cmp    $0x9,%eax
81005cbf:	75 10                	jne    81005cd1 <lflush+0x26>
81005cc1:	83 ec 0c             	sub    $0xc,%esp
81005cc4:	ff 75 08             	push   0x8(%ebp)
81005cc7:	e8 22 b3 ff ff       	call   81000fee <fflush>
81005ccc:	83 c4 10             	add    $0x10,%esp
81005ccf:	eb 05                	jmp    81005cd6 <lflush+0x2b>
81005cd1:	b8 00 00 00 00       	mov    $0x0,%eax
81005cd6:	c9                   	leave  
81005cd7:	c3                   	ret    

81005cd8 <__srefill_r>:
81005cd8:	55                   	push   %ebp
81005cd9:	89 e5                	mov    %esp,%ebp
81005cdb:	56                   	push   %esi
81005cdc:	53                   	push   %ebx
81005cdd:	83 ec 10             	sub    $0x10,%esp
81005ce0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005ce3:	8b 45 08             	mov    0x8(%ebp),%eax
81005ce6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ce9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005ced:	74 18                	je     81005d07 <__srefill_r+0x2f>
81005cef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005cf2:	8b 40 38             	mov    0x38(%eax),%eax
81005cf5:	85 c0                	test   %eax,%eax
81005cf7:	75 0e                	jne    81005d07 <__srefill_r+0x2f>
81005cf9:	83 ec 0c             	sub    $0xc,%esp
81005cfc:	ff 75 f4             	push   -0xc(%ebp)
81005cff:	e8 95 b7 ff ff       	call   81001499 <__sinit>
81005d04:	83 c4 10             	add    $0x10,%esp
81005d07:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d0b:	98                   	cwtl   
81005d0c:	25 00 20 00 00       	and    $0x2000,%eax
81005d11:	85 c0                	test   %eax,%eax
81005d13:	75 14                	jne    81005d29 <__srefill_r+0x51>
81005d15:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d19:	80 cc 20             	or     $0x20,%ah
81005d1c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d20:	8b 43 64             	mov    0x64(%ebx),%eax
81005d23:	80 e4 df             	and    $0xdf,%ah
81005d26:	89 43 64             	mov    %eax,0x64(%ebx)
81005d29:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005d30:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d34:	98                   	cwtl   
81005d35:	83 e0 20             	and    $0x20,%eax
81005d38:	85 c0                	test   %eax,%eax
81005d3a:	74 0a                	je     81005d46 <__srefill_r+0x6e>
81005d3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d41:	e9 8c 01 00 00       	jmp    81005ed2 <__srefill_r+0x1fa>
81005d46:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d4a:	98                   	cwtl   
81005d4b:	83 e0 04             	and    $0x4,%eax
81005d4e:	85 c0                	test   %eax,%eax
81005d50:	75 79                	jne    81005dcb <__srefill_r+0xf3>
81005d52:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d56:	98                   	cwtl   
81005d57:	83 e0 10             	and    $0x10,%eax
81005d5a:	85 c0                	test   %eax,%eax
81005d5c:	75 1e                	jne    81005d7c <__srefill_r+0xa4>
81005d5e:	8b 45 08             	mov    0x8(%ebp),%eax
81005d61:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005d67:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d6b:	83 c8 40             	or     $0x40,%eax
81005d6e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005d72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005d77:	e9 56 01 00 00       	jmp    81005ed2 <__srefill_r+0x1fa>
81005d7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005d80:	98                   	cwtl   
81005d81:	83 e0 08             	and    $0x8,%eax
81005d84:	85 c0                	test   %eax,%eax
81005d86:	74 36                	je     81005dbe <__srefill_r+0xe6>
81005d88:	83 ec 08             	sub    $0x8,%esp
81005d8b:	53                   	push   %ebx
81005d8c:	ff 75 08             	push   0x8(%ebp)
81005d8f:	e8 02 b2 ff ff       	call   81000f96 <_fflush_r>
81005d94:	83 c4 10             	add    $0x10,%esp
81005d97:	85 c0                	test   %eax,%eax
81005d99:	74 0a                	je     81005da5 <__srefill_r+0xcd>
81005d9b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005da0:	e9 2d 01 00 00       	jmp    81005ed2 <__srefill_r+0x1fa>
81005da5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005da9:	83 e0 f7             	and    $0xfffffff7,%eax
81005dac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005db0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005db7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005dbe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005dc2:	83 c8 04             	or     $0x4,%eax
81005dc5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005dc9:	eb 46                	jmp    81005e11 <__srefill_r+0x139>
81005dcb:	8b 43 30             	mov    0x30(%ebx),%eax
81005dce:	85 c0                	test   %eax,%eax
81005dd0:	74 3f                	je     81005e11 <__srefill_r+0x139>
81005dd2:	8b 53 30             	mov    0x30(%ebx),%edx
81005dd5:	8d 43 40             	lea    0x40(%ebx),%eax
81005dd8:	39 c2                	cmp    %eax,%edx
81005dda:	74 12                	je     81005dee <__srefill_r+0x116>
81005ddc:	8b 43 30             	mov    0x30(%ebx),%eax
81005ddf:	83 ec 08             	sub    $0x8,%esp
81005de2:	50                   	push   %eax
81005de3:	ff 75 08             	push   0x8(%ebp)
81005de6:	e8 c9 b9 ff ff       	call   810017b4 <_free_r>
81005deb:	83 c4 10             	add    $0x10,%esp
81005dee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005df5:	8b 43 3c             	mov    0x3c(%ebx),%eax
81005df8:	89 43 04             	mov    %eax,0x4(%ebx)
81005dfb:	8b 43 04             	mov    0x4(%ebx),%eax
81005dfe:	85 c0                	test   %eax,%eax
81005e00:	74 0f                	je     81005e11 <__srefill_r+0x139>
81005e02:	8b 43 38             	mov    0x38(%ebx),%eax
81005e05:	89 03                	mov    %eax,(%ebx)
81005e07:	b8 00 00 00 00       	mov    $0x0,%eax
81005e0c:	e9 c1 00 00 00       	jmp    81005ed2 <__srefill_r+0x1fa>
81005e11:	8b 43 10             	mov    0x10(%ebx),%eax
81005e14:	85 c0                	test   %eax,%eax
81005e16:	75 0f                	jne    81005e27 <__srefill_r+0x14f>
81005e18:	83 ec 08             	sub    $0x8,%esp
81005e1b:	53                   	push   %ebx
81005e1c:	ff 75 08             	push   0x8(%ebp)
81005e1f:	e8 63 d8 ff ff       	call   81003687 <__smakebuf_r>
81005e24:	83 c4 10             	add    $0x10,%esp
81005e27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e2b:	98                   	cwtl   
81005e2c:	83 e0 03             	and    $0x3,%eax
81005e2f:	85 c0                	test   %eax,%eax
81005e31:	74 48                	je     81005e7b <__srefill_r+0x1a3>
81005e33:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e37:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005e3b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81005e41:	a1 58 77 00 81       	mov    0x81007758,%eax
81005e46:	83 ec 08             	sub    $0x8,%esp
81005e49:	68 ab 5c 00 81       	push   $0x81005cab
81005e4e:	50                   	push   %eax
81005e4f:	e8 8b c8 ff ff       	call   810026df <_fwalk>
81005e54:	83 c4 10             	add    $0x10,%esp
81005e57:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81005e5b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005e5f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005e63:	98                   	cwtl   
81005e64:	83 e0 09             	and    $0x9,%eax
81005e67:	83 f8 09             	cmp    $0x9,%eax
81005e6a:	75 0f                	jne    81005e7b <__srefill_r+0x1a3>
81005e6c:	83 ec 08             	sub    $0x8,%esp
81005e6f:	53                   	push   %ebx
81005e70:	ff 75 08             	push   0x8(%ebp)
81005e73:	e8 f8 ae ff ff       	call   81000d70 <__sflush_r>
81005e78:	83 c4 10             	add    $0x10,%esp
81005e7b:	8b 43 10             	mov    0x10(%ebx),%eax
81005e7e:	89 03                	mov    %eax,(%ebx)
81005e80:	8b 43 20             	mov    0x20(%ebx),%eax
81005e83:	8b 73 14             	mov    0x14(%ebx),%esi
81005e86:	8b 0b                	mov    (%ebx),%ecx
81005e88:	8b 53 1c             	mov    0x1c(%ebx),%edx
81005e8b:	56                   	push   %esi
81005e8c:	51                   	push   %ecx
81005e8d:	52                   	push   %edx
81005e8e:	ff 75 08             	push   0x8(%ebp)
81005e91:	ff d0                	call   *%eax
81005e93:	83 c4 10             	add    $0x10,%esp
81005e96:	89 43 04             	mov    %eax,0x4(%ebx)
81005e99:	8b 43 04             	mov    0x4(%ebx),%eax
81005e9c:	85 c0                	test   %eax,%eax
81005e9e:	7f 2d                	jg     81005ecd <__srefill_r+0x1f5>
81005ea0:	8b 43 04             	mov    0x4(%ebx),%eax
81005ea3:	85 c0                	test   %eax,%eax
81005ea5:	75 0d                	jne    81005eb4 <__srefill_r+0x1dc>
81005ea7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005eab:	83 c8 20             	or     $0x20,%eax
81005eae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005eb2:	eb 12                	jmp    81005ec6 <__srefill_r+0x1ee>
81005eb4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005ebb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ebf:	83 c8 40             	or     $0x40,%eax
81005ec2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ec6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005ecb:	eb 05                	jmp    81005ed2 <__srefill_r+0x1fa>
81005ecd:	b8 00 00 00 00       	mov    $0x0,%eax
81005ed2:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005ed5:	5b                   	pop    %ebx
81005ed6:	5e                   	pop    %esi
81005ed7:	5d                   	pop    %ebp
81005ed8:	c3                   	ret    

81005ed9 <_sbrk_r>:
81005ed9:	55                   	push   %ebp
81005eda:	89 e5                	mov    %esp,%ebp
81005edc:	83 ec 18             	sub    $0x18,%esp
81005edf:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
81005ee6:	00 00 00 
81005ee9:	83 ec 0c             	sub    $0xc,%esp
81005eec:	ff 75 0c             	push   0xc(%ebp)
81005eef:	e8 7e ab ff ff       	call   81000a72 <sbrk>
81005ef4:	83 c4 10             	add    $0x10,%esp
81005ef7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005efa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005efe:	75 14                	jne    81005f14 <_sbrk_r+0x3b>
81005f00:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
81005f05:	85 c0                	test   %eax,%eax
81005f07:	74 0b                	je     81005f14 <_sbrk_r+0x3b>
81005f09:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
81005f0f:	8b 45 08             	mov    0x8(%ebp),%eax
81005f12:	89 10                	mov    %edx,(%eax)
81005f14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f17:	c9                   	leave  
81005f18:	c3                   	ret    

81005f19 <__sread>:
81005f19:	55                   	push   %ebp
81005f1a:	89 e5                	mov    %esp,%ebp
81005f1c:	56                   	push   %esi
81005f1d:	53                   	push   %ebx
81005f1e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005f21:	8b 55 14             	mov    0x14(%ebp),%edx
81005f24:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005f28:	98                   	cwtl   
81005f29:	52                   	push   %edx
81005f2a:	ff 75 10             	push   0x10(%ebp)
81005f2d:	50                   	push   %eax
81005f2e:	ff 75 08             	push   0x8(%ebp)
81005f31:	e8 df 11 00 00       	call   81007115 <_read_r>
81005f36:	83 c4 10             	add    $0x10,%esp
81005f39:	89 c6                	mov    %eax,%esi
81005f3b:	85 f6                	test   %esi,%esi
81005f3d:	78 0a                	js     81005f49 <__sread+0x30>
81005f3f:	8b 43 50             	mov    0x50(%ebx),%eax
81005f42:	01 f0                	add    %esi,%eax
81005f44:	89 43 50             	mov    %eax,0x50(%ebx)
81005f47:	eb 0b                	jmp    81005f54 <__sread+0x3b>
81005f49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f4d:	80 e4 ef             	and    $0xef,%ah
81005f50:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005f54:	89 f0                	mov    %esi,%eax
81005f56:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005f59:	5b                   	pop    %ebx
81005f5a:	5e                   	pop    %esi
81005f5b:	5d                   	pop    %ebp
81005f5c:	c3                   	ret    

81005f5d <__seofread>:
81005f5d:	55                   	push   %ebp
81005f5e:	89 e5                	mov    %esp,%ebp
81005f60:	b8 00 00 00 00       	mov    $0x0,%eax
81005f65:	5d                   	pop    %ebp
81005f66:	c3                   	ret    

81005f67 <__swrite>:
81005f67:	55                   	push   %ebp
81005f68:	89 e5                	mov    %esp,%ebp
81005f6a:	53                   	push   %ebx
81005f6b:	83 ec 14             	sub    $0x14,%esp
81005f6e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005f71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f75:	98                   	cwtl   
81005f76:	25 00 01 00 00       	and    $0x100,%eax
81005f7b:	85 c0                	test   %eax,%eax
81005f7d:	74 15                	je     81005f94 <__swrite+0x2d>
81005f7f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005f83:	98                   	cwtl   
81005f84:	6a 02                	push   $0x2
81005f86:	6a 00                	push   $0x0
81005f88:	50                   	push   %eax
81005f89:	ff 75 08             	push   0x8(%ebp)
81005f8c:	e8 a4 0f 00 00       	call   81006f35 <_lseek_r>
81005f91:	83 c4 10             	add    $0x10,%esp
81005f94:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f98:	80 e4 ef             	and    $0xef,%ah
81005f9b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005f9f:	8b 55 14             	mov    0x14(%ebp),%edx
81005fa2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005fa6:	98                   	cwtl   
81005fa7:	52                   	push   %edx
81005fa8:	ff 75 10             	push   0x10(%ebp)
81005fab:	50                   	push   %eax
81005fac:	ff 75 08             	push   0x8(%ebp)
81005faf:	e8 4e 07 00 00       	call   81006702 <_write_r>
81005fb4:	83 c4 10             	add    $0x10,%esp
81005fb7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fbd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005fc0:	c9                   	leave  
81005fc1:	c3                   	ret    

81005fc2 <__sseek>:
81005fc2:	55                   	push   %ebp
81005fc3:	89 e5                	mov    %esp,%ebp
81005fc5:	56                   	push   %esi
81005fc6:	53                   	push   %ebx
81005fc7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005fca:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005fce:	98                   	cwtl   
81005fcf:	ff 75 14             	push   0x14(%ebp)
81005fd2:	ff 75 10             	push   0x10(%ebp)
81005fd5:	50                   	push   %eax
81005fd6:	ff 75 08             	push   0x8(%ebp)
81005fd9:	e8 57 0f 00 00       	call   81006f35 <_lseek_r>
81005fde:	83 c4 10             	add    $0x10,%esp
81005fe1:	89 c6                	mov    %eax,%esi
81005fe3:	83 fe ff             	cmp    $0xffffffff,%esi
81005fe6:	75 0d                	jne    81005ff5 <__sseek+0x33>
81005fe8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005fec:	80 e4 ef             	and    $0xef,%ah
81005fef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ff3:	eb 0e                	jmp    81006003 <__sseek+0x41>
81005ff5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ff9:	80 cc 10             	or     $0x10,%ah
81005ffc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006000:	89 73 50             	mov    %esi,0x50(%ebx)
81006003:	89 f0                	mov    %esi,%eax
81006005:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006008:	5b                   	pop    %ebx
81006009:	5e                   	pop    %esi
8100600a:	5d                   	pop    %ebp
8100600b:	c3                   	ret    

8100600c <__sclose>:
8100600c:	55                   	push   %ebp
8100600d:	89 e5                	mov    %esp,%ebp
8100600f:	83 ec 18             	sub    $0x18,%esp
81006012:	8b 45 0c             	mov    0xc(%ebp),%eax
81006015:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006018:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100601b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100601f:	98                   	cwtl   
81006020:	83 ec 08             	sub    $0x8,%esp
81006023:	50                   	push   %eax
81006024:	ff 75 08             	push   0x8(%ebp)
81006027:	e8 8c 09 00 00       	call   810069b8 <_close_r>
8100602c:	83 c4 10             	add    $0x10,%esp
8100602f:	c9                   	leave  
81006030:	c3                   	ret    
81006031:	66 90                	xchg   %ax,%ax
81006033:	66 90                	xchg   %ax,%ax
81006035:	66 90                	xchg   %ax,%ax
81006037:	66 90                	xchg   %ax,%ax
81006039:	66 90                	xchg   %ax,%ax
8100603b:	66 90                	xchg   %ax,%ax
8100603d:	66 90                	xchg   %ax,%ax
8100603f:	90                   	nop

81006040 <strchr>:
81006040:	55                   	push   %ebp
81006041:	89 e5                	mov    %esp,%ebp
81006043:	57                   	push   %edi
81006044:	53                   	push   %ebx
81006045:	31 db                	xor    %ebx,%ebx
81006047:	8b 7d 08             	mov    0x8(%ebp),%edi
8100604a:	02 5d 0c             	add    0xc(%ebp),%bl
8100604d:	0f 84 98 00 00 00    	je     810060eb <L25>
81006053:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006059:	74 37                	je     81006092 <L5>
8100605b:	89 f8                	mov    %edi,%eax
8100605d:	8a 08                	mov    (%eax),%cl
8100605f:	84 c9                	test   %cl,%cl
81006061:	74 7b                	je     810060de <L14>
81006063:	38 d9                	cmp    %bl,%cl
81006065:	74 7d                	je     810060e4 <L19>
81006067:	47                   	inc    %edi
81006068:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100606e:	74 22                	je     81006092 <L5>
81006070:	89 f8                	mov    %edi,%eax
81006072:	8a 08                	mov    (%eax),%cl
81006074:	84 c9                	test   %cl,%cl
81006076:	74 66                	je     810060de <L14>
81006078:	38 d9                	cmp    %bl,%cl
8100607a:	74 68                	je     810060e4 <L19>
8100607c:	47                   	inc    %edi
8100607d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006083:	74 0d                	je     81006092 <L5>
81006085:	89 f8                	mov    %edi,%eax
81006087:	8a 08                	mov    (%eax),%cl
81006089:	84 c9                	test   %cl,%cl
8100608b:	74 51                	je     810060de <L14>
8100608d:	38 d9                	cmp    %bl,%cl
8100608f:	74 53                	je     810060e4 <L19>
81006091:	47                   	inc    %edi

81006092 <L5>:
81006092:	89 d9                	mov    %ebx,%ecx
81006094:	c1 e3 08             	shl    $0x8,%ebx
81006097:	83 ef 04             	sub    $0x4,%edi
8100609a:	09 cb                	or     %ecx,%ebx
8100609c:	89 da                	mov    %ebx,%edx
8100609e:	c1 e3 10             	shl    $0x10,%ebx
810060a1:	09 d3                	or     %edx,%ebx

810060a3 <L10>:
810060a3:	83 c7 04             	add    $0x4,%edi
810060a6:	8b 0f                	mov    (%edi),%ecx
810060a8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810060ae:	89 c8                	mov    %ecx,%eax
810060b0:	f7 d0                	not    %eax
810060b2:	21 c2                	and    %eax,%edx
810060b4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810060ba:	75 14                	jne    810060d0 <L9>
810060bc:	31 d9                	xor    %ebx,%ecx
810060be:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810060c4:	f7 d1                	not    %ecx
810060c6:	21 ca                	and    %ecx,%edx
810060c8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810060ce:	74 d3                	je     810060a3 <L10>

810060d0 <L9>:
810060d0:	8d 47 ff             	lea    -0x1(%edi),%eax

810060d3 <L15>:
810060d3:	40                   	inc    %eax
810060d4:	8a 10                	mov    (%eax),%dl
810060d6:	84 d2                	test   %dl,%dl
810060d8:	74 04                	je     810060de <L14>
810060da:	38 da                	cmp    %bl,%dl
810060dc:	75 f5                	jne    810060d3 <L15>

810060de <L14>:
810060de:	38 18                	cmp    %bl,(%eax)
810060e0:	74 02                	je     810060e4 <L19>
810060e2:	31 c0                	xor    %eax,%eax

810060e4 <L19>:
810060e4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810060e7:	5b                   	pop    %ebx
810060e8:	5f                   	pop    %edi
810060e9:	c9                   	leave  
810060ea:	c3                   	ret    

810060eb <L25>:
810060eb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810060f1:	74 2b                	je     8100611e <L26>
810060f3:	89 f8                	mov    %edi,%eax
810060f5:	8a 08                	mov    (%eax),%cl
810060f7:	84 c9                	test   %cl,%cl
810060f9:	74 e9                	je     810060e4 <L19>
810060fb:	47                   	inc    %edi
810060fc:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006102:	74 1a                	je     8100611e <L26>
81006104:	89 f8                	mov    %edi,%eax
81006106:	8a 08                	mov    (%eax),%cl
81006108:	84 c9                	test   %cl,%cl
8100610a:	74 d8                	je     810060e4 <L19>
8100610c:	47                   	inc    %edi
8100610d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006113:	74 09                	je     8100611e <L26>
81006115:	89 f8                	mov    %edi,%eax
81006117:	8a 08                	mov    (%eax),%cl
81006119:	84 c9                	test   %cl,%cl
8100611b:	74 c7                	je     810060e4 <L19>
8100611d:	47                   	inc    %edi

8100611e <L26>:
8100611e:	83 ef 04             	sub    $0x4,%edi

81006121 <L27>:
81006121:	83 c7 04             	add    $0x4,%edi
81006124:	8b 0f                	mov    (%edi),%ecx
81006126:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100612c:	89 c8                	mov    %ecx,%eax
8100612e:	f7 d0                	not    %eax
81006130:	21 c2                	and    %eax,%edx
81006132:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006138:	74 e7                	je     81006121 <L27>
8100613a:	eb 94                	jmp    810060d0 <L9>

8100613c <strcmp>:
8100613c:	55                   	push   %ebp
8100613d:	89 e5                	mov    %esp,%ebp
8100613f:	83 ec 10             	sub    $0x10,%esp
81006142:	8b 55 08             	mov    0x8(%ebp),%edx
81006145:	8b 45 0c             	mov    0xc(%ebp),%eax
81006148:	09 d0                	or     %edx,%eax
8100614a:	83 e0 03             	and    $0x3,%eax
8100614d:	85 c0                	test   %eax,%eax
8100614f:	75 5e                	jne    810061af <strcmp+0x73>
81006151:	8b 45 08             	mov    0x8(%ebp),%eax
81006154:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006157:	8b 45 0c             	mov    0xc(%ebp),%eax
8100615a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100615d:	eb 2c                	jmp    8100618b <strcmp+0x4f>
8100615f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006162:	8b 00                	mov    (%eax),%eax
81006164:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100616a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100616d:	8b 00                	mov    (%eax),%eax
8100616f:	f7 d0                	not    %eax
81006171:	21 d0                	and    %edx,%eax
81006173:	25 80 80 80 80       	and    $0x80808080,%eax
81006178:	85 c0                	test   %eax,%eax
8100617a:	74 07                	je     81006183 <strcmp+0x47>
8100617c:	b8 00 00 00 00       	mov    $0x0,%eax
81006181:	eb 5c                	jmp    810061df <strcmp+0xa3>
81006183:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006187:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100618b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100618e:	8b 10                	mov    (%eax),%edx
81006190:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006193:	8b 00                	mov    (%eax),%eax
81006195:	39 c2                	cmp    %eax,%edx
81006197:	74 c6                	je     8100615f <strcmp+0x23>
81006199:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100619c:	89 45 08             	mov    %eax,0x8(%ebp)
8100619f:	8b 45 f8             	mov    -0x8(%ebp),%eax
810061a2:	89 45 0c             	mov    %eax,0xc(%ebp)
810061a5:	eb 08                	jmp    810061af <strcmp+0x73>
810061a7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810061ab:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810061af:	8b 45 08             	mov    0x8(%ebp),%eax
810061b2:	0f b6 00             	movzbl (%eax),%eax
810061b5:	84 c0                	test   %al,%al
810061b7:	74 10                	je     810061c9 <strcmp+0x8d>
810061b9:	8b 45 08             	mov    0x8(%ebp),%eax
810061bc:	0f b6 10             	movzbl (%eax),%edx
810061bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810061c2:	0f b6 00             	movzbl (%eax),%eax
810061c5:	38 c2                	cmp    %al,%dl
810061c7:	74 de                	je     810061a7 <strcmp+0x6b>
810061c9:	8b 45 08             	mov    0x8(%ebp),%eax
810061cc:	0f b6 00             	movzbl (%eax),%eax
810061cf:	0f b6 d0             	movzbl %al,%edx
810061d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810061d5:	0f b6 00             	movzbl (%eax),%eax
810061d8:	0f b6 c8             	movzbl %al,%ecx
810061db:	89 d0                	mov    %edx,%eax
810061dd:	29 c8                	sub    %ecx,%eax
810061df:	c9                   	leave  
810061e0:	c3                   	ret    
810061e1:	66 90                	xchg   %ax,%ax
810061e3:	66 90                	xchg   %ax,%ax
810061e5:	66 90                	xchg   %ax,%ax
810061e7:	66 90                	xchg   %ax,%ax
810061e9:	66 90                	xchg   %ax,%ax
810061eb:	66 90                	xchg   %ax,%ax
810061ed:	66 90                	xchg   %ax,%ax
810061ef:	90                   	nop

810061f0 <strlen>:
810061f0:	55                   	push   %ebp
810061f1:	89 e5                	mov    %esp,%ebp
810061f3:	57                   	push   %edi
810061f4:	8b 55 08             	mov    0x8(%ebp),%edx
810061f7:	89 d7                	mov    %edx,%edi
810061f9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810061ff:	74 25                	je     81006226 <L5>
81006201:	8a 0f                	mov    (%edi),%cl
81006203:	47                   	inc    %edi
81006204:	84 c9                	test   %cl,%cl
81006206:	74 56                	je     8100625e <L15>
81006208:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100620e:	74 16                	je     81006226 <L5>
81006210:	8a 0f                	mov    (%edi),%cl
81006212:	47                   	inc    %edi
81006213:	84 c9                	test   %cl,%cl
81006215:	74 47                	je     8100625e <L15>
81006217:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100621d:	74 07                	je     81006226 <L5>
8100621f:	8a 0f                	mov    (%edi),%cl
81006221:	47                   	inc    %edi
81006222:	84 c9                	test   %cl,%cl
81006224:	74 38                	je     8100625e <L15>

81006226 <L5>:
81006226:	83 ef 04             	sub    $0x4,%edi
81006229:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006230 <L10>:
81006230:	83 c7 04             	add    $0x4,%edi
81006233:	8b 0f                	mov    (%edi),%ecx
81006235:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100623b:	f7 d1                	not    %ecx
8100623d:	21 c8                	and    %ecx,%eax
8100623f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006244:	74 ea                	je     81006230 <L10>
81006246:	f7 d1                	not    %ecx
81006248:	47                   	inc    %edi
81006249:	84 c9                	test   %cl,%cl
8100624b:	74 11                	je     8100625e <L15>
8100624d:	47                   	inc    %edi
8100624e:	c1 e9 08             	shr    $0x8,%ecx
81006251:	84 c9                	test   %cl,%cl
81006253:	74 09                	je     8100625e <L15>
81006255:	47                   	inc    %edi
81006256:	c1 e9 08             	shr    $0x8,%ecx
81006259:	84 c9                	test   %cl,%cl
8100625b:	74 01                	je     8100625e <L15>
8100625d:	47                   	inc    %edi

8100625e <L15>:
8100625e:	29 d7                	sub    %edx,%edi
81006260:	8d 47 ff             	lea    -0x1(%edi),%eax
81006263:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006266:	5f                   	pop    %edi
81006267:	c9                   	leave  
81006268:	c3                   	ret    

81006269 <strtok>:
81006269:	55                   	push   %ebp
8100626a:	89 e5                	mov    %esp,%ebp
8100626c:	83 ec 18             	sub    $0x18,%esp
8100626f:	8b 55 08             	mov    0x8(%ebp),%edx
81006272:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006275:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100627a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100627d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006280:	83 c0 5c             	add    $0x5c,%eax
81006283:	6a 01                	push   $0x1
81006285:	50                   	push   %eax
81006286:	51                   	push   %ecx
81006287:	52                   	push   %edx
81006288:	e8 05 00 00 00       	call   81006292 <__strtok_r>
8100628d:	83 c4 10             	add    $0x10,%esp
81006290:	c9                   	leave  
81006291:	c3                   	ret    

81006292 <__strtok_r>:
81006292:	55                   	push   %ebp
81006293:	89 e5                	mov    %esp,%ebp
81006295:	57                   	push   %edi
81006296:	56                   	push   %esi
81006297:	53                   	push   %ebx
81006298:	83 ec 10             	sub    $0x10,%esp
8100629b:	8b 45 08             	mov    0x8(%ebp),%eax
8100629e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810062a1:	85 c0                	test   %eax,%eax
810062a3:	75 13                	jne    810062b8 <__strtok_r+0x26>
810062a5:	8b 45 10             	mov    0x10(%ebp),%eax
810062a8:	8b 00                	mov    (%eax),%eax
810062aa:	85 c0                	test   %eax,%eax
810062ac:	75 0a                	jne    810062b8 <__strtok_r+0x26>
810062ae:	b8 00 00 00 00       	mov    $0x0,%eax
810062b3:	e9 92 00 00 00       	jmp    8100634a <__strtok_r+0xb8>
810062b8:	90                   	nop
810062b9:	89 c2                	mov    %eax,%edx
810062bb:	8d 42 01             	lea    0x1(%edx),%eax
810062be:	0f b6 12             	movzbl (%edx),%edx
810062c1:	0f be f2             	movsbl %dl,%esi
810062c4:	89 cf                	mov    %ecx,%edi
810062c6:	eb 1c                	jmp    810062e4 <__strtok_r+0x52>
810062c8:	39 de                	cmp    %ebx,%esi
810062ca:	75 18                	jne    810062e4 <__strtok_r+0x52>
810062cc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810062d0:	74 02                	je     810062d4 <__strtok_r+0x42>
810062d2:	eb e5                	jmp    810062b9 <__strtok_r+0x27>
810062d4:	8b 55 10             	mov    0x10(%ebp),%edx
810062d7:	89 02                	mov    %eax,(%edx)
810062d9:	8d 50 ff             	lea    -0x1(%eax),%edx
810062dc:	c6 02 00             	movb   $0x0,(%edx)
810062df:	83 e8 01             	sub    $0x1,%eax
810062e2:	eb 66                	jmp    8100634a <__strtok_r+0xb8>
810062e4:	89 fa                	mov    %edi,%edx
810062e6:	8d 7a 01             	lea    0x1(%edx),%edi
810062e9:	0f b6 12             	movzbl (%edx),%edx
810062ec:	0f be da             	movsbl %dl,%ebx
810062ef:	85 db                	test   %ebx,%ebx
810062f1:	75 d5                	jne    810062c8 <__strtok_r+0x36>
810062f3:	85 f6                	test   %esi,%esi
810062f5:	75 10                	jne    81006307 <__strtok_r+0x75>
810062f7:	8b 45 10             	mov    0x10(%ebp),%eax
810062fa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006300:	b8 00 00 00 00       	mov    $0x0,%eax
81006305:	eb 43                	jmp    8100634a <__strtok_r+0xb8>
81006307:	8d 50 ff             	lea    -0x1(%eax),%edx
8100630a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100630d:	89 c2                	mov    %eax,%edx
8100630f:	8d 42 01             	lea    0x1(%edx),%eax
81006312:	0f b6 12             	movzbl (%edx),%edx
81006315:	0f be f2             	movsbl %dl,%esi
81006318:	89 cf                	mov    %ecx,%edi
8100631a:	89 fa                	mov    %edi,%edx
8100631c:	8d 7a 01             	lea    0x1(%edx),%edi
8100631f:	0f b6 12             	movzbl (%edx),%edx
81006322:	0f be da             	movsbl %dl,%ebx
81006325:	39 f3                	cmp    %esi,%ebx
81006327:	75 1b                	jne    81006344 <__strtok_r+0xb2>
81006329:	85 f6                	test   %esi,%esi
8100632b:	75 07                	jne    81006334 <__strtok_r+0xa2>
8100632d:	b8 00 00 00 00       	mov    $0x0,%eax
81006332:	eb 06                	jmp    8100633a <__strtok_r+0xa8>
81006334:	8d 50 ff             	lea    -0x1(%eax),%edx
81006337:	c6 02 00             	movb   $0x0,(%edx)
8100633a:	8b 55 10             	mov    0x10(%ebp),%edx
8100633d:	89 02                	mov    %eax,(%edx)
8100633f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006342:	eb 06                	jmp    8100634a <__strtok_r+0xb8>
81006344:	85 db                	test   %ebx,%ebx
81006346:	75 d2                	jne    8100631a <__strtok_r+0x88>
81006348:	eb c3                	jmp    8100630d <__strtok_r+0x7b>
8100634a:	83 c4 10             	add    $0x10,%esp
8100634d:	5b                   	pop    %ebx
8100634e:	5e                   	pop    %esi
8100634f:	5f                   	pop    %edi
81006350:	5d                   	pop    %ebp
81006351:	c3                   	ret    

81006352 <strtok_r>:
81006352:	55                   	push   %ebp
81006353:	89 e5                	mov    %esp,%ebp
81006355:	8b 45 08             	mov    0x8(%ebp),%eax
81006358:	8b 55 0c             	mov    0xc(%ebp),%edx
8100635b:	6a 01                	push   $0x1
8100635d:	ff 75 10             	push   0x10(%ebp)
81006360:	52                   	push   %edx
81006361:	50                   	push   %eax
81006362:	e8 2b ff ff ff       	call   81006292 <__strtok_r>
81006367:	83 c4 10             	add    $0x10,%esp
8100636a:	c9                   	leave  
8100636b:	c3                   	ret    

8100636c <__locale_ctype_ptr_l>:
8100636c:	55                   	push   %ebp
8100636d:	89 e5                	mov    %esp,%ebp
8100636f:	b8 a0 79 00 81       	mov    $0x810079a0,%eax
81006374:	5d                   	pop    %ebp
81006375:	c3                   	ret    

81006376 <__get_global_locale>:
81006376:	55                   	push   %ebp
81006377:	89 e5                	mov    %esp,%ebp
81006379:	b8 40 83 00 81       	mov    $0x81008340,%eax
8100637e:	5d                   	pop    %ebp
8100637f:	c3                   	ret    

81006380 <__get_current_locale>:
81006380:	55                   	push   %ebp
81006381:	89 e5                	mov    %esp,%ebp
81006383:	e8 ee ff ff ff       	call   81006376 <__get_global_locale>
81006388:	5d                   	pop    %ebp
81006389:	c3                   	ret    

8100638a <_strtol_l>:
8100638a:	55                   	push   %ebp
8100638b:	89 e5                	mov    %esp,%ebp
8100638d:	57                   	push   %edi
8100638e:	56                   	push   %esi
8100638f:	53                   	push   %ebx
81006390:	83 ec 1c             	sub    $0x1c,%esp
81006393:	8b 75 0c             	mov    0xc(%ebp),%esi
81006396:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100639d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810063a1:	78 0c                	js     810063af <_strtol_l+0x25>
810063a3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810063a7:	74 06                	je     810063af <_strtol_l+0x25>
810063a9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810063ad:	7e 15                	jle    810063c4 <_strtol_l+0x3a>
810063af:	e8 44 06 00 00       	call   810069f8 <__errno>
810063b4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810063ba:	b8 00 00 00 00       	mov    $0x0,%eax
810063bf:	e9 90 01 00 00       	jmp    81006554 <_strtol_l+0x1ca>
810063c4:	89 f0                	mov    %esi,%eax
810063c6:	8d 70 01             	lea    0x1(%eax),%esi
810063c9:	0f b6 00             	movzbl (%eax),%eax
810063cc:	0f b6 d8             	movzbl %al,%ebx
810063cf:	83 ec 0c             	sub    $0xc,%esp
810063d2:	ff 75 18             	push   0x18(%ebp)
810063d5:	e8 92 ff ff ff       	call   8100636c <__locale_ctype_ptr_l>
810063da:	83 c4 10             	add    $0x10,%esp
810063dd:	89 da                	mov    %ebx,%edx
810063df:	83 c2 01             	add    $0x1,%edx
810063e2:	01 d0                	add    %edx,%eax
810063e4:	0f b6 00             	movzbl (%eax),%eax
810063e7:	0f be c0             	movsbl %al,%eax
810063ea:	83 e0 08             	and    $0x8,%eax
810063ed:	85 c0                	test   %eax,%eax
810063ef:	75 d3                	jne    810063c4 <_strtol_l+0x3a>
810063f1:	83 fb 2d             	cmp    $0x2d,%ebx
810063f4:	75 14                	jne    8100640a <_strtol_l+0x80>
810063f6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810063fd:	89 f0                	mov    %esi,%eax
810063ff:	8d 70 01             	lea    0x1(%eax),%esi
81006402:	0f b6 00             	movzbl (%eax),%eax
81006405:	0f b6 d8             	movzbl %al,%ebx
81006408:	eb 10                	jmp    8100641a <_strtol_l+0x90>
8100640a:	83 fb 2b             	cmp    $0x2b,%ebx
8100640d:	75 0b                	jne    8100641a <_strtol_l+0x90>
8100640f:	89 f0                	mov    %esi,%eax
81006411:	8d 70 01             	lea    0x1(%eax),%esi
81006414:	0f b6 00             	movzbl (%eax),%eax
81006417:	0f b6 d8             	movzbl %al,%ebx
8100641a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100641e:	74 06                	je     81006426 <_strtol_l+0x9c>
81006420:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006424:	75 26                	jne    8100644c <_strtol_l+0xc2>
81006426:	83 fb 30             	cmp    $0x30,%ebx
81006429:	75 21                	jne    8100644c <_strtol_l+0xc2>
8100642b:	0f b6 06             	movzbl (%esi),%eax
8100642e:	3c 78                	cmp    $0x78,%al
81006430:	74 07                	je     81006439 <_strtol_l+0xaf>
81006432:	0f b6 06             	movzbl (%esi),%eax
81006435:	3c 58                	cmp    $0x58,%al
81006437:	75 13                	jne    8100644c <_strtol_l+0xc2>
81006439:	8d 46 01             	lea    0x1(%esi),%eax
8100643c:	0f b6 00             	movzbl (%eax),%eax
8100643f:	0f b6 d8             	movzbl %al,%ebx
81006442:	83 c6 02             	add    $0x2,%esi
81006445:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100644c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006450:	75 14                	jne    81006466 <_strtol_l+0xdc>
81006452:	83 fb 30             	cmp    $0x30,%ebx
81006455:	75 07                	jne    8100645e <_strtol_l+0xd4>
81006457:	b8 08 00 00 00       	mov    $0x8,%eax
8100645c:	eb 05                	jmp    81006463 <_strtol_l+0xd9>
8100645e:	b8 0a 00 00 00       	mov    $0xa,%eax
81006463:	89 45 14             	mov    %eax,0x14(%ebp)
81006466:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100646a:	74 07                	je     81006473 <_strtol_l+0xe9>
8100646c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006471:	eb 05                	jmp    81006478 <_strtol_l+0xee>
81006473:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006478:	89 c7                	mov    %eax,%edi
8100647a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100647d:	89 f8                	mov    %edi,%eax
8100647f:	ba 00 00 00 00       	mov    $0x0,%edx
81006484:	f7 f1                	div    %ecx
81006486:	89 d0                	mov    %edx,%eax
81006488:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100648b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100648e:	89 f8                	mov    %edi,%eax
81006490:	ba 00 00 00 00       	mov    $0x0,%edx
81006495:	f7 f1                	div    %ecx
81006497:	89 c2                	mov    %eax,%edx
81006499:	bf 00 00 00 00       	mov    $0x0,%edi
8100649e:	b9 00 00 00 00       	mov    $0x0,%ecx
810064a3:	83 fb 2f             	cmp    $0x2f,%ebx
810064a6:	7e 0a                	jle    810064b2 <_strtol_l+0x128>
810064a8:	83 fb 39             	cmp    $0x39,%ebx
810064ab:	7f 05                	jg     810064b2 <_strtol_l+0x128>
810064ad:	83 eb 30             	sub    $0x30,%ebx
810064b0:	eb 1c                	jmp    810064ce <_strtol_l+0x144>
810064b2:	83 fb 40             	cmp    $0x40,%ebx
810064b5:	7e 0a                	jle    810064c1 <_strtol_l+0x137>
810064b7:	83 fb 5a             	cmp    $0x5a,%ebx
810064ba:	7f 05                	jg     810064c1 <_strtol_l+0x137>
810064bc:	83 eb 37             	sub    $0x37,%ebx
810064bf:	eb 0d                	jmp    810064ce <_strtol_l+0x144>
810064c1:	83 fb 60             	cmp    $0x60,%ebx
810064c4:	7e 46                	jle    8100650c <_strtol_l+0x182>
810064c6:	83 fb 7a             	cmp    $0x7a,%ebx
810064c9:	7f 41                	jg     8100650c <_strtol_l+0x182>
810064cb:	83 eb 57             	sub    $0x57,%ebx
810064ce:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810064d1:	7d 38                	jge    8100650b <_strtol_l+0x181>
810064d3:	89 c8                	mov    %ecx,%eax
810064d5:	85 c0                	test   %eax,%eax
810064d7:	78 0f                	js     810064e8 <_strtol_l+0x15e>
810064d9:	89 d0                	mov    %edx,%eax
810064db:	39 c7                	cmp    %eax,%edi
810064dd:	77 09                	ja     810064e8 <_strtol_l+0x15e>
810064df:	39 c7                	cmp    %eax,%edi
810064e1:	75 0c                	jne    810064ef <_strtol_l+0x165>
810064e3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
810064e6:	7e 07                	jle    810064ef <_strtol_l+0x165>
810064e8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
810064ed:	eb 0f                	jmp    810064fe <_strtol_l+0x174>
810064ef:	b9 01 00 00 00       	mov    $0x1,%ecx
810064f4:	8b 45 14             	mov    0x14(%ebp),%eax
810064f7:	0f af f8             	imul   %eax,%edi
810064fa:	89 d8                	mov    %ebx,%eax
810064fc:	01 c7                	add    %eax,%edi
810064fe:	89 f0                	mov    %esi,%eax
81006500:	8d 70 01             	lea    0x1(%eax),%esi
81006503:	0f b6 00             	movzbl (%eax),%eax
81006506:	0f b6 d8             	movzbl %al,%ebx
81006509:	eb 98                	jmp    810064a3 <_strtol_l+0x119>
8100650b:	90                   	nop
8100650c:	89 c8                	mov    %ecx,%eax
8100650e:	85 c0                	test   %eax,%eax
81006510:	79 1f                	jns    81006531 <_strtol_l+0x1a7>
81006512:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006516:	74 07                	je     8100651f <_strtol_l+0x195>
81006518:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100651d:	eb 05                	jmp    81006524 <_strtol_l+0x19a>
8100651f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006524:	89 c7                	mov    %eax,%edi
81006526:	8b 45 08             	mov    0x8(%ebp),%eax
81006529:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100652f:	eb 08                	jmp    81006539 <_strtol_l+0x1af>
81006531:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006535:	74 02                	je     81006539 <_strtol_l+0x1af>
81006537:	f7 df                	neg    %edi
81006539:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100653d:	74 13                	je     81006552 <_strtol_l+0x1c8>
8100653f:	89 c8                	mov    %ecx,%eax
81006541:	85 c0                	test   %eax,%eax
81006543:	74 05                	je     8100654a <_strtol_l+0x1c0>
81006545:	8d 46 ff             	lea    -0x1(%esi),%eax
81006548:	eb 03                	jmp    8100654d <_strtol_l+0x1c3>
8100654a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100654d:	8b 55 10             	mov    0x10(%ebp),%edx
81006550:	89 02                	mov    %eax,(%edx)
81006552:	89 f8                	mov    %edi,%eax
81006554:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006557:	5b                   	pop    %ebx
81006558:	5e                   	pop    %esi
81006559:	5f                   	pop    %edi
8100655a:	5d                   	pop    %ebp
8100655b:	c3                   	ret    

8100655c <_strtol_r>:
8100655c:	55                   	push   %ebp
8100655d:	89 e5                	mov    %esp,%ebp
8100655f:	83 ec 08             	sub    $0x8,%esp
81006562:	e8 19 fe ff ff       	call   81006380 <__get_current_locale>
81006567:	83 ec 0c             	sub    $0xc,%esp
8100656a:	50                   	push   %eax
8100656b:	ff 75 14             	push   0x14(%ebp)
8100656e:	ff 75 10             	push   0x10(%ebp)
81006571:	ff 75 0c             	push   0xc(%ebp)
81006574:	ff 75 08             	push   0x8(%ebp)
81006577:	e8 0e fe ff ff       	call   8100638a <_strtol_l>
8100657c:	83 c4 20             	add    $0x20,%esp
8100657f:	c9                   	leave  
81006580:	c3                   	ret    

81006581 <strtol_l>:
81006581:	55                   	push   %ebp
81006582:	89 e5                	mov    %esp,%ebp
81006584:	83 ec 08             	sub    $0x8,%esp
81006587:	a1 04 7f 00 81       	mov    0x81007f04,%eax
8100658c:	83 ec 0c             	sub    $0xc,%esp
8100658f:	ff 75 14             	push   0x14(%ebp)
81006592:	ff 75 10             	push   0x10(%ebp)
81006595:	ff 75 0c             	push   0xc(%ebp)
81006598:	ff 75 08             	push   0x8(%ebp)
8100659b:	50                   	push   %eax
8100659c:	e8 e9 fd ff ff       	call   8100638a <_strtol_l>
810065a1:	83 c4 20             	add    $0x20,%esp
810065a4:	c9                   	leave  
810065a5:	c3                   	ret    

810065a6 <strtol>:
810065a6:	55                   	push   %ebp
810065a7:	89 e5                	mov    %esp,%ebp
810065a9:	83 ec 08             	sub    $0x8,%esp
810065ac:	e8 cf fd ff ff       	call   81006380 <__get_current_locale>
810065b1:	8b 15 04 7f 00 81    	mov    0x81007f04,%edx
810065b7:	83 ec 0c             	sub    $0xc,%esp
810065ba:	50                   	push   %eax
810065bb:	ff 75 10             	push   0x10(%ebp)
810065be:	ff 75 0c             	push   0xc(%ebp)
810065c1:	ff 75 08             	push   0x8(%ebp)
810065c4:	52                   	push   %edx
810065c5:	e8 c0 fd ff ff       	call   8100638a <_strtol_l>
810065ca:	83 c4 20             	add    $0x20,%esp
810065cd:	c9                   	leave  
810065ce:	c3                   	ret    

810065cf <__swbuf_r>:
810065cf:	55                   	push   %ebp
810065d0:	89 e5                	mov    %esp,%ebp
810065d2:	57                   	push   %edi
810065d3:	56                   	push   %esi
810065d4:	53                   	push   %ebx
810065d5:	83 ec 1c             	sub    $0x1c,%esp
810065d8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810065db:	8b 5d 10             	mov    0x10(%ebp),%ebx
810065de:	8b 45 08             	mov    0x8(%ebp),%eax
810065e1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810065e4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810065e8:	74 18                	je     81006602 <__swbuf_r+0x33>
810065ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810065ed:	8b 40 38             	mov    0x38(%eax),%eax
810065f0:	85 c0                	test   %eax,%eax
810065f2:	75 0e                	jne    81006602 <__swbuf_r+0x33>
810065f4:	83 ec 0c             	sub    $0xc,%esp
810065f7:	ff 75 e4             	push   -0x1c(%ebp)
810065fa:	e8 9a ae ff ff       	call   81001499 <__sinit>
810065ff:	83 c4 10             	add    $0x10,%esp
81006602:	8b 43 18             	mov    0x18(%ebx),%eax
81006605:	89 43 08             	mov    %eax,0x8(%ebx)
81006608:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100660c:	98                   	cwtl   
8100660d:	83 e0 08             	and    $0x8,%eax
81006610:	85 c0                	test   %eax,%eax
81006612:	74 07                	je     8100661b <__swbuf_r+0x4c>
81006614:	8b 43 10             	mov    0x10(%ebx),%eax
81006617:	85 c0                	test   %eax,%eax
81006619:	75 1d                	jne    81006638 <__swbuf_r+0x69>
8100661b:	83 ec 08             	sub    $0x8,%esp
8100661e:	53                   	push   %ebx
8100661f:	ff 75 08             	push   0x8(%ebp)
81006622:	e8 21 01 00 00       	call   81006748 <__swsetup_r>
81006627:	83 c4 10             	add    $0x10,%esp
8100662a:	85 c0                	test   %eax,%eax
8100662c:	74 0a                	je     81006638 <__swbuf_r+0x69>
8100662e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006633:	e9 a1 00 00 00       	jmp    810066d9 <__swbuf_r+0x10a>
81006638:	89 f8                	mov    %edi,%eax
8100663a:	0f b6 f8             	movzbl %al,%edi
8100663d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006641:	98                   	cwtl   
81006642:	25 00 20 00 00       	and    $0x2000,%eax
81006647:	85 c0                	test   %eax,%eax
81006649:	75 14                	jne    8100665f <__swbuf_r+0x90>
8100664b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100664f:	80 cc 20             	or     $0x20,%ah
81006652:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006656:	8b 43 64             	mov    0x64(%ebx),%eax
81006659:	80 e4 df             	and    $0xdf,%ah
8100665c:	89 43 64             	mov    %eax,0x64(%ebx)
8100665f:	8b 03                	mov    (%ebx),%eax
81006661:	8b 53 10             	mov    0x10(%ebx),%edx
81006664:	29 d0                	sub    %edx,%eax
81006666:	89 c6                	mov    %eax,%esi
81006668:	8b 43 14             	mov    0x14(%ebx),%eax
8100666b:	39 c6                	cmp    %eax,%esi
8100666d:	7c 1f                	jl     8100668e <__swbuf_r+0xbf>
8100666f:	83 ec 08             	sub    $0x8,%esp
81006672:	53                   	push   %ebx
81006673:	ff 75 08             	push   0x8(%ebp)
81006676:	e8 1b a9 ff ff       	call   81000f96 <_fflush_r>
8100667b:	83 c4 10             	add    $0x10,%esp
8100667e:	85 c0                	test   %eax,%eax
81006680:	74 07                	je     81006689 <__swbuf_r+0xba>
81006682:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006687:	eb 50                	jmp    810066d9 <__swbuf_r+0x10a>
81006689:	be 00 00 00 00       	mov    $0x0,%esi
8100668e:	8b 43 08             	mov    0x8(%ebx),%eax
81006691:	83 e8 01             	sub    $0x1,%eax
81006694:	89 43 08             	mov    %eax,0x8(%ebx)
81006697:	8b 03                	mov    (%ebx),%eax
81006699:	8d 50 01             	lea    0x1(%eax),%edx
8100669c:	89 13                	mov    %edx,(%ebx)
8100669e:	89 fa                	mov    %edi,%edx
810066a0:	88 10                	mov    %dl,(%eax)
810066a2:	83 c6 01             	add    $0x1,%esi
810066a5:	8b 43 14             	mov    0x14(%ebx),%eax
810066a8:	39 c6                	cmp    %eax,%esi
810066aa:	74 11                	je     810066bd <__swbuf_r+0xee>
810066ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066b0:	98                   	cwtl   
810066b1:	83 e0 01             	and    $0x1,%eax
810066b4:	85 c0                	test   %eax,%eax
810066b6:	74 1f                	je     810066d7 <__swbuf_r+0x108>
810066b8:	83 ff 0a             	cmp    $0xa,%edi
810066bb:	75 1a                	jne    810066d7 <__swbuf_r+0x108>
810066bd:	83 ec 08             	sub    $0x8,%esp
810066c0:	53                   	push   %ebx
810066c1:	ff 75 08             	push   0x8(%ebp)
810066c4:	e8 cd a8 ff ff       	call   81000f96 <_fflush_r>
810066c9:	83 c4 10             	add    $0x10,%esp
810066cc:	85 c0                	test   %eax,%eax
810066ce:	74 07                	je     810066d7 <__swbuf_r+0x108>
810066d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066d5:	eb 02                	jmp    810066d9 <__swbuf_r+0x10a>
810066d7:	89 f8                	mov    %edi,%eax
810066d9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810066dc:	5b                   	pop    %ebx
810066dd:	5e                   	pop    %esi
810066de:	5f                   	pop    %edi
810066df:	5d                   	pop    %ebp
810066e0:	c3                   	ret    

810066e1 <__swbuf>:
810066e1:	55                   	push   %ebp
810066e2:	89 e5                	mov    %esp,%ebp
810066e4:	83 ec 08             	sub    $0x8,%esp
810066e7:	8b 55 08             	mov    0x8(%ebp),%edx
810066ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810066ed:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810066f2:	83 ec 04             	sub    $0x4,%esp
810066f5:	51                   	push   %ecx
810066f6:	52                   	push   %edx
810066f7:	50                   	push   %eax
810066f8:	e8 d2 fe ff ff       	call   810065cf <__swbuf_r>
810066fd:	83 c4 10             	add    $0x10,%esp
81006700:	c9                   	leave  
81006701:	c3                   	ret    

81006702 <_write_r>:
81006702:	55                   	push   %ebp
81006703:	89 e5                	mov    %esp,%ebp
81006705:	83 ec 18             	sub    $0x18,%esp
81006708:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
8100670f:	00 00 00 
81006712:	83 ec 04             	sub    $0x4,%esp
81006715:	ff 75 14             	push   0x14(%ebp)
81006718:	ff 75 10             	push   0x10(%ebp)
8100671b:	ff 75 0c             	push   0xc(%ebp)
8100671e:	e8 8c a2 ff ff       	call   810009af <write>
81006723:	83 c4 10             	add    $0x10,%esp
81006726:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006729:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100672d:	75 14                	jne    81006743 <_write_r+0x41>
8100672f:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
81006734:	85 c0                	test   %eax,%eax
81006736:	74 0b                	je     81006743 <_write_r+0x41>
81006738:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
8100673e:	8b 45 08             	mov    0x8(%ebp),%eax
81006741:	89 10                	mov    %edx,(%eax)
81006743:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006746:	c9                   	leave  
81006747:	c3                   	ret    

81006748 <__swsetup_r>:
81006748:	55                   	push   %ebp
81006749:	89 e5                	mov    %esp,%ebp
8100674b:	53                   	push   %ebx
8100674c:	83 ec 14             	sub    $0x14,%esp
8100674f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006752:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006757:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100675a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100675e:	74 18                	je     81006778 <__swsetup_r+0x30>
81006760:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006763:	8b 40 38             	mov    0x38(%eax),%eax
81006766:	85 c0                	test   %eax,%eax
81006768:	75 0e                	jne    81006778 <__swsetup_r+0x30>
8100676a:	83 ec 0c             	sub    $0xc,%esp
8100676d:	ff 75 f4             	push   -0xc(%ebp)
81006770:	e8 24 ad ff ff       	call   81001499 <__sinit>
81006775:	83 c4 10             	add    $0x10,%esp
81006778:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100677c:	98                   	cwtl   
8100677d:	83 e0 08             	and    $0x8,%eax
81006780:	85 c0                	test   %eax,%eax
81006782:	0f 85 82 00 00 00    	jne    8100680a <__swsetup_r+0xc2>
81006788:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100678c:	98                   	cwtl   
8100678d:	83 e0 10             	and    $0x10,%eax
81006790:	85 c0                	test   %eax,%eax
81006792:	75 1e                	jne    810067b2 <__swsetup_r+0x6a>
81006794:	8b 45 08             	mov    0x8(%ebp),%eax
81006797:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100679d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067a1:	83 c8 40             	or     $0x40,%eax
810067a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810067ad:	e9 ec 00 00 00       	jmp    8100689e <__swsetup_r+0x156>
810067b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067b6:	98                   	cwtl   
810067b7:	83 e0 04             	and    $0x4,%eax
810067ba:	85 c0                	test   %eax,%eax
810067bc:	74 41                	je     810067ff <__swsetup_r+0xb7>
810067be:	8b 43 30             	mov    0x30(%ebx),%eax
810067c1:	85 c0                	test   %eax,%eax
810067c3:	74 23                	je     810067e8 <__swsetup_r+0xa0>
810067c5:	8b 53 30             	mov    0x30(%ebx),%edx
810067c8:	8d 43 40             	lea    0x40(%ebx),%eax
810067cb:	39 c2                	cmp    %eax,%edx
810067cd:	74 12                	je     810067e1 <__swsetup_r+0x99>
810067cf:	8b 43 30             	mov    0x30(%ebx),%eax
810067d2:	83 ec 08             	sub    $0x8,%esp
810067d5:	50                   	push   %eax
810067d6:	ff 75 08             	push   0x8(%ebp)
810067d9:	e8 d6 af ff ff       	call   810017b4 <_free_r>
810067de:	83 c4 10             	add    $0x10,%esp
810067e1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810067e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067ec:	83 e0 db             	and    $0xffffffdb,%eax
810067ef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067f3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810067fa:	8b 43 10             	mov    0x10(%ebx),%eax
810067fd:	89 03                	mov    %eax,(%ebx)
810067ff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006803:	83 c8 08             	or     $0x8,%eax
81006806:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100680a:	8b 43 10             	mov    0x10(%ebx),%eax
8100680d:	85 c0                	test   %eax,%eax
8100680f:	75 2b                	jne    8100683c <__swsetup_r+0xf4>
81006811:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006815:	98                   	cwtl   
81006816:	25 00 02 00 00       	and    $0x200,%eax
8100681b:	85 c0                	test   %eax,%eax
8100681d:	74 0e                	je     8100682d <__swsetup_r+0xe5>
8100681f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006823:	98                   	cwtl   
81006824:	25 80 00 00 00       	and    $0x80,%eax
81006829:	85 c0                	test   %eax,%eax
8100682b:	74 0f                	je     8100683c <__swsetup_r+0xf4>
8100682d:	83 ec 08             	sub    $0x8,%esp
81006830:	53                   	push   %ebx
81006831:	ff 75 08             	push   0x8(%ebp)
81006834:	e8 4e ce ff ff       	call   81003687 <__smakebuf_r>
81006839:	83 c4 10             	add    $0x10,%esp
8100683c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006840:	98                   	cwtl   
81006841:	83 e0 01             	and    $0x1,%eax
81006844:	85 c0                	test   %eax,%eax
81006846:	74 11                	je     81006859 <__swsetup_r+0x111>
81006848:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100684f:	8b 43 14             	mov    0x14(%ebx),%eax
81006852:	f7 d8                	neg    %eax
81006854:	89 43 18             	mov    %eax,0x18(%ebx)
81006857:	eb 19                	jmp    81006872 <__swsetup_r+0x12a>
81006859:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100685d:	98                   	cwtl   
8100685e:	83 e0 02             	and    $0x2,%eax
81006861:	85 c0                	test   %eax,%eax
81006863:	75 05                	jne    8100686a <__swsetup_r+0x122>
81006865:	8b 43 14             	mov    0x14(%ebx),%eax
81006868:	eb 05                	jmp    8100686f <__swsetup_r+0x127>
8100686a:	b8 00 00 00 00       	mov    $0x0,%eax
8100686f:	89 43 08             	mov    %eax,0x8(%ebx)
81006872:	8b 43 10             	mov    0x10(%ebx),%eax
81006875:	85 c0                	test   %eax,%eax
81006877:	75 20                	jne    81006899 <__swsetup_r+0x151>
81006879:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100687d:	98                   	cwtl   
8100687e:	25 80 00 00 00       	and    $0x80,%eax
81006883:	85 c0                	test   %eax,%eax
81006885:	74 12                	je     81006899 <__swsetup_r+0x151>
81006887:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100688b:	83 c8 40             	or     $0x40,%eax
8100688e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006892:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006897:	eb 05                	jmp    8100689e <__swsetup_r+0x156>
81006899:	b8 00 00 00 00       	mov    $0x0,%eax
8100689e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810068a1:	c9                   	leave  
810068a2:	c3                   	ret    

810068a3 <__call_exitprocs>:
810068a3:	55                   	push   %ebp
810068a4:	89 e5                	mov    %esp,%ebp
810068a6:	57                   	push   %edi
810068a7:	56                   	push   %esi
810068a8:	53                   	push   %ebx
810068a9:	83 ec 1c             	sub    $0x1c,%esp
810068ac:	a1 58 77 00 81       	mov    0x81007758,%eax
810068b1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810068b7:	a1 58 77 00 81       	mov    0x81007758,%eax
810068bc:	05 48 01 00 00       	add    $0x148,%eax
810068c1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810068c4:	90                   	nop
810068c5:	85 db                	test   %ebx,%ebx
810068c7:	0f 84 e1 00 00 00    	je     810069ae <__call_exitprocs+0x10b>
810068cd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
810068d3:	8b 43 04             	mov    0x4(%ebx),%eax
810068d6:	8d 70 ff             	lea    -0x1(%eax),%esi
810068d9:	e9 c6 00 00 00       	jmp    810069a4 <__call_exitprocs+0x101>
810068de:	b8 01 00 00 00       	mov    $0x1,%eax
810068e3:	89 f1                	mov    %esi,%ecx
810068e5:	d3 e0                	shl    %cl,%eax
810068e7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810068ea:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810068ee:	74 17                	je     81006907 <__call_exitprocs+0x64>
810068f0:	85 ff                	test   %edi,%edi
810068f2:	0f 84 a5 00 00 00    	je     8100699d <__call_exitprocs+0xfa>
810068f8:	8d 46 20             	lea    0x20(%esi),%eax
810068fb:	8b 04 87             	mov    (%edi,%eax,4),%eax
810068fe:	39 45 0c             	cmp    %eax,0xc(%ebp)
81006901:	0f 85 96 00 00 00    	jne    8100699d <__call_exitprocs+0xfa>
81006907:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100690b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100690e:	8b 43 04             	mov    0x4(%ebx),%eax
81006911:	83 e8 01             	sub    $0x1,%eax
81006914:	39 c6                	cmp    %eax,%esi
81006916:	75 0b                	jne    81006923 <__call_exitprocs+0x80>
81006918:	8b 43 04             	mov    0x4(%ebx),%eax
8100691b:	83 e8 01             	sub    $0x1,%eax
8100691e:	89 43 04             	mov    %eax,0x4(%ebx)
81006921:	eb 08                	jmp    8100692b <__call_exitprocs+0x88>
81006923:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
8100692a:	00 
8100692b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100692f:	74 6f                	je     810069a0 <__call_exitprocs+0xfd>
81006931:	8b 43 04             	mov    0x4(%ebx),%eax
81006934:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006937:	85 ff                	test   %edi,%edi
81006939:	74 0f                	je     8100694a <__call_exitprocs+0xa7>
8100693b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81006941:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006944:	21 d0                	and    %edx,%eax
81006946:	85 c0                	test   %eax,%eax
81006948:	75 07                	jne    81006951 <__call_exitprocs+0xae>
8100694a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100694d:	ff d0                	call   *%eax
8100694f:	eb 32                	jmp    81006983 <__call_exitprocs+0xe0>
81006951:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81006957:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100695a:	21 d0                	and    %edx,%eax
8100695c:	85 c0                	test   %eax,%eax
8100695e:	75 14                	jne    81006974 <__call_exitprocs+0xd1>
81006960:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006963:	83 ec 08             	sub    $0x8,%esp
81006966:	50                   	push   %eax
81006967:	ff 75 08             	push   0x8(%ebp)
8100696a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100696d:	ff d0                	call   *%eax
8100696f:	83 c4 10             	add    $0x10,%esp
81006972:	eb 0f                	jmp    81006983 <__call_exitprocs+0xe0>
81006974:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81006977:	83 ec 0c             	sub    $0xc,%esp
8100697a:	50                   	push   %eax
8100697b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100697e:	ff d0                	call   *%eax
81006980:	83 c4 10             	add    $0x10,%esp
81006983:	8b 43 04             	mov    0x4(%ebx),%eax
81006986:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81006989:	0f 85 1d ff ff ff    	jne    810068ac <__call_exitprocs+0x9>
8100698f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006992:	8b 00                	mov    (%eax),%eax
81006994:	39 c3                	cmp    %eax,%ebx
81006996:	74 09                	je     810069a1 <__call_exitprocs+0xfe>
81006998:	e9 0f ff ff ff       	jmp    810068ac <__call_exitprocs+0x9>
8100699d:	90                   	nop
8100699e:	eb 01                	jmp    810069a1 <__call_exitprocs+0xfe>
810069a0:	90                   	nop
810069a1:	83 ee 01             	sub    $0x1,%esi
810069a4:	85 f6                	test   %esi,%esi
810069a6:	0f 89 32 ff ff ff    	jns    810068de <__call_exitprocs+0x3b>
810069ac:	eb 01                	jmp    810069af <__call_exitprocs+0x10c>
810069ae:	90                   	nop
810069af:	90                   	nop
810069b0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810069b3:	5b                   	pop    %ebx
810069b4:	5e                   	pop    %esi
810069b5:	5f                   	pop    %edi
810069b6:	5d                   	pop    %ebp
810069b7:	c3                   	ret    

810069b8 <_close_r>:
810069b8:	55                   	push   %ebp
810069b9:	89 e5                	mov    %esp,%ebp
810069bb:	83 ec 18             	sub    $0x18,%esp
810069be:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
810069c5:	00 00 00 
810069c8:	83 ec 0c             	sub    $0xc,%esp
810069cb:	ff 75 0c             	push   0xc(%ebp)
810069ce:	e8 09 a0 ff ff       	call   810009dc <close>
810069d3:	83 c4 10             	add    $0x10,%esp
810069d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069d9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810069dd:	75 14                	jne    810069f3 <_close_r+0x3b>
810069df:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
810069e4:	85 c0                	test   %eax,%eax
810069e6:	74 0b                	je     810069f3 <_close_r+0x3b>
810069e8:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
810069ee:	8b 45 08             	mov    0x8(%ebp),%eax
810069f1:	89 10                	mov    %edx,(%eax)
810069f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069f6:	c9                   	leave  
810069f7:	c3                   	ret    

810069f8 <__errno>:
810069f8:	55                   	push   %ebp
810069f9:	89 e5                	mov    %esp,%ebp
810069fb:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006a00:	5d                   	pop    %ebp
81006a01:	c3                   	ret    

81006a02 <__sflags>:
81006a02:	55                   	push   %ebp
81006a03:	89 e5                	mov    %esp,%ebp
81006a05:	57                   	push   %edi
81006a06:	56                   	push   %esi
81006a07:	53                   	push   %ebx
81006a08:	8b 55 0c             	mov    0xc(%ebp),%edx
81006a0b:	0f b6 02             	movzbl (%edx),%eax
81006a0e:	0f be c0             	movsbl %al,%eax
81006a11:	83 f8 77             	cmp    $0x77,%eax
81006a14:	74 20                	je     81006a36 <__sflags+0x34>
81006a16:	83 f8 77             	cmp    $0x77,%eax
81006a19:	7f 3d                	jg     81006a58 <__sflags+0x56>
81006a1b:	83 f8 61             	cmp    $0x61,%eax
81006a1e:	74 27                	je     81006a47 <__sflags+0x45>
81006a20:	83 f8 72             	cmp    $0x72,%eax
81006a23:	75 33                	jne    81006a58 <__sflags+0x56>
81006a25:	be 04 00 00 00       	mov    $0x4,%esi
81006a2a:	bb 00 00 00 00       	mov    $0x0,%ebx
81006a2f:	bf 00 00 00 00       	mov    $0x0,%edi
81006a34:	eb 32                	jmp    81006a68 <__sflags+0x66>
81006a36:	be 08 00 00 00       	mov    $0x8,%esi
81006a3b:	bb 01 00 00 00       	mov    $0x1,%ebx
81006a40:	bf 00 06 00 00       	mov    $0x600,%edi
81006a45:	eb 21                	jmp    81006a68 <__sflags+0x66>
81006a47:	be 08 01 00 00       	mov    $0x108,%esi
81006a4c:	bb 01 00 00 00       	mov    $0x1,%ebx
81006a51:	bf 08 02 00 00       	mov    $0x208,%edi
81006a56:	eb 10                	jmp    81006a68 <__sflags+0x66>
81006a58:	8b 45 08             	mov    0x8(%ebp),%eax
81006a5b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006a61:	b8 00 00 00 00       	mov    $0x0,%eax
81006a66:	eb 4f                	jmp    81006ab7 <__sflags+0xb5>
81006a68:	eb 38                	jmp    81006aa2 <__sflags+0xa0>
81006a6a:	0f b6 02             	movzbl (%edx),%eax
81006a6d:	0f be c0             	movsbl %al,%eax
81006a70:	83 f8 78             	cmp    $0x78,%eax
81006a73:	74 27                	je     81006a9c <__sflags+0x9a>
81006a75:	83 f8 78             	cmp    $0x78,%eax
81006a78:	7f 27                	jg     81006aa1 <__sflags+0x9f>
81006a7a:	83 f8 2b             	cmp    $0x2b,%eax
81006a7d:	74 07                	je     81006a86 <__sflags+0x84>
81006a7f:	83 f8 62             	cmp    $0x62,%eax
81006a82:	74 1e                	je     81006aa2 <__sflags+0xa0>
81006a84:	eb 1b                	jmp    81006aa1 <__sflags+0x9f>
81006a86:	89 f0                	mov    %esi,%eax
81006a88:	83 e0 e3             	and    $0xffffffe3,%eax
81006a8b:	83 c8 10             	or     $0x10,%eax
81006a8e:	89 c6                	mov    %eax,%esi
81006a90:	89 d8                	mov    %ebx,%eax
81006a92:	83 e0 fc             	and    $0xfffffffc,%eax
81006a95:	83 c8 02             	or     $0x2,%eax
81006a98:	89 c3                	mov    %eax,%ebx
81006a9a:	eb 06                	jmp    81006aa2 <__sflags+0xa0>
81006a9c:	80 cf 08             	or     $0x8,%bh
81006a9f:	eb 01                	jmp    81006aa2 <__sflags+0xa0>
81006aa1:	90                   	nop
81006aa2:	83 c2 01             	add    $0x1,%edx
81006aa5:	0f b6 02             	movzbl (%edx),%eax
81006aa8:	84 c0                	test   %al,%al
81006aaa:	75 be                	jne    81006a6a <__sflags+0x68>
81006aac:	89 da                	mov    %ebx,%edx
81006aae:	09 fa                	or     %edi,%edx
81006ab0:	8b 45 10             	mov    0x10(%ebp),%eax
81006ab3:	89 10                	mov    %edx,(%eax)
81006ab5:	89 f0                	mov    %esi,%eax
81006ab7:	5b                   	pop    %ebx
81006ab8:	5e                   	pop    %esi
81006ab9:	5f                   	pop    %edi
81006aba:	5d                   	pop    %ebp
81006abb:	c3                   	ret    

81006abc <_fputc_r>:
81006abc:	55                   	push   %ebp
81006abd:	89 e5                	mov    %esp,%ebp
81006abf:	83 ec 18             	sub    $0x18,%esp
81006ac2:	8b 45 08             	mov    0x8(%ebp),%eax
81006ac5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ac8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006acc:	74 18                	je     81006ae6 <_fputc_r+0x2a>
81006ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ad1:	8b 40 38             	mov    0x38(%eax),%eax
81006ad4:	85 c0                	test   %eax,%eax
81006ad6:	75 0e                	jne    81006ae6 <_fputc_r+0x2a>
81006ad8:	83 ec 0c             	sub    $0xc,%esp
81006adb:	ff 75 f4             	push   -0xc(%ebp)
81006ade:	e8 b6 a9 ff ff       	call   81001499 <__sinit>
81006ae3:	83 c4 10             	add    $0x10,%esp
81006ae6:	83 ec 04             	sub    $0x4,%esp
81006ae9:	ff 75 10             	push   0x10(%ebp)
81006aec:	ff 75 0c             	push   0xc(%ebp)
81006aef:	ff 75 08             	push   0x8(%ebp)
81006af2:	e8 80 05 00 00       	call   81007077 <_putc_r>
81006af7:	83 c4 10             	add    $0x10,%esp
81006afa:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006afd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006b00:	c9                   	leave  
81006b01:	c3                   	ret    

81006b02 <fputc>:
81006b02:	55                   	push   %ebp
81006b03:	89 e5                	mov    %esp,%ebp
81006b05:	83 ec 18             	sub    $0x18,%esp
81006b08:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006b0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006b16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006b1a:	74 18                	je     81006b34 <fputc+0x32>
81006b1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006b1f:	8b 40 38             	mov    0x38(%eax),%eax
81006b22:	85 c0                	test   %eax,%eax
81006b24:	75 0e                	jne    81006b34 <fputc+0x32>
81006b26:	83 ec 0c             	sub    $0xc,%esp
81006b29:	ff 75 f0             	push   -0x10(%ebp)
81006b2c:	e8 68 a9 ff ff       	call   81001499 <__sinit>
81006b31:	83 c4 10             	add    $0x10,%esp
81006b34:	83 ec 04             	sub    $0x4,%esp
81006b37:	ff 75 0c             	push   0xc(%ebp)
81006b3a:	ff 75 08             	push   0x8(%ebp)
81006b3d:	ff 75 f4             	push   -0xc(%ebp)
81006b40:	e8 32 05 00 00       	call   81007077 <_putc_r>
81006b45:	83 c4 10             	add    $0x10,%esp
81006b48:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006b4b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006b4e:	c9                   	leave  
81006b4f:	c3                   	ret    

81006b50 <__sputc_r>:
81006b50:	55                   	push   %ebp
81006b51:	89 e5                	mov    %esp,%ebp
81006b53:	83 ec 08             	sub    $0x8,%esp
81006b56:	8b 45 10             	mov    0x10(%ebp),%eax
81006b59:	8b 40 08             	mov    0x8(%eax),%eax
81006b5c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006b5f:	8b 45 10             	mov    0x10(%ebp),%eax
81006b62:	89 50 08             	mov    %edx,0x8(%eax)
81006b65:	8b 45 10             	mov    0x10(%ebp),%eax
81006b68:	8b 40 08             	mov    0x8(%eax),%eax
81006b6b:	85 c0                	test   %eax,%eax
81006b6d:	79 17                	jns    81006b86 <__sputc_r+0x36>
81006b6f:	8b 45 10             	mov    0x10(%ebp),%eax
81006b72:	8b 50 08             	mov    0x8(%eax),%edx
81006b75:	8b 45 10             	mov    0x10(%ebp),%eax
81006b78:	8b 40 18             	mov    0x18(%eax),%eax
81006b7b:	39 c2                	cmp    %eax,%edx
81006b7d:	7c 21                	jl     81006ba0 <__sputc_r+0x50>
81006b7f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b82:	3c 0a                	cmp    $0xa,%al
81006b84:	74 1a                	je     81006ba0 <__sputc_r+0x50>
81006b86:	8b 45 10             	mov    0x10(%ebp),%eax
81006b89:	8b 00                	mov    (%eax),%eax
81006b8b:	8d 48 01             	lea    0x1(%eax),%ecx
81006b8e:	8b 55 10             	mov    0x10(%ebp),%edx
81006b91:	89 0a                	mov    %ecx,(%edx)
81006b93:	8b 55 0c             	mov    0xc(%ebp),%edx
81006b96:	88 10                	mov    %dl,(%eax)
81006b98:	0f b6 00             	movzbl (%eax),%eax
81006b9b:	0f b6 c0             	movzbl %al,%eax
81006b9e:	eb 14                	jmp    81006bb4 <__sputc_r+0x64>
81006ba0:	83 ec 04             	sub    $0x4,%esp
81006ba3:	ff 75 10             	push   0x10(%ebp)
81006ba6:	ff 75 0c             	push   0xc(%ebp)
81006ba9:	ff 75 08             	push   0x8(%ebp)
81006bac:	e8 1e fa ff ff       	call   810065cf <__swbuf_r>
81006bb1:	83 c4 10             	add    $0x10,%esp
81006bb4:	c9                   	leave  
81006bb5:	c3                   	ret    

81006bb6 <__fputwc>:
81006bb6:	55                   	push   %ebp
81006bb7:	89 e5                	mov    %esp,%ebp
81006bb9:	83 ec 18             	sub    $0x18,%esp
81006bbc:	e8 41 03 00 00       	call   81006f02 <__locale_mb_cur_max>
81006bc1:	83 f8 01             	cmp    $0x1,%eax
81006bc4:	75 1e                	jne    81006be4 <__fputwc+0x2e>
81006bc6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006bca:	7e 18                	jle    81006be4 <__fputwc+0x2e>
81006bcc:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006bd3:	7f 0f                	jg     81006be4 <__fputwc+0x2e>
81006bd5:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bd8:	88 45 ef             	mov    %al,-0x11(%ebp)
81006bdb:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006be2:	eb 3c                	jmp    81006c20 <__fputwc+0x6a>
81006be4:	8b 45 10             	mov    0x10(%ebp),%eax
81006be7:	83 c0 5c             	add    $0x5c,%eax
81006bea:	50                   	push   %eax
81006beb:	ff 75 0c             	push   0xc(%ebp)
81006bee:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006bf1:	50                   	push   %eax
81006bf2:	ff 75 08             	push   0x8(%ebp)
81006bf5:	e8 58 06 00 00       	call   81007252 <_wcrtomb_r>
81006bfa:	83 c4 10             	add    $0x10,%esp
81006bfd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c00:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006c04:	75 1a                	jne    81006c20 <__fputwc+0x6a>
81006c06:	8b 45 10             	mov    0x10(%ebp),%eax
81006c09:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006c0d:	83 c8 40             	or     $0x40,%eax
81006c10:	89 c2                	mov    %eax,%edx
81006c12:	8b 45 10             	mov    0x10(%ebp),%eax
81006c15:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006c19:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c1e:	eb 44                	jmp    81006c64 <__fputwc+0xae>
81006c20:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006c27:	eb 30                	jmp    81006c59 <__fputwc+0xa3>
81006c29:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006c2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c2f:	01 d0                	add    %edx,%eax
81006c31:	0f b6 00             	movzbl (%eax),%eax
81006c34:	0f b6 c0             	movzbl %al,%eax
81006c37:	83 ec 04             	sub    $0x4,%esp
81006c3a:	ff 75 10             	push   0x10(%ebp)
81006c3d:	50                   	push   %eax
81006c3e:	ff 75 08             	push   0x8(%ebp)
81006c41:	e8 0a ff ff ff       	call   81006b50 <__sputc_r>
81006c46:	83 c4 10             	add    $0x10,%esp
81006c49:	83 f8 ff             	cmp    $0xffffffff,%eax
81006c4c:	75 07                	jne    81006c55 <__fputwc+0x9f>
81006c4e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006c53:	eb 0f                	jmp    81006c64 <__fputwc+0xae>
81006c55:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006c59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c5c:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006c5f:	72 c8                	jb     81006c29 <__fputwc+0x73>
81006c61:	8b 45 0c             	mov    0xc(%ebp),%eax
81006c64:	c9                   	leave  
81006c65:	c3                   	ret    

81006c66 <_fputwc_r>:
81006c66:	55                   	push   %ebp
81006c67:	89 e5                	mov    %esp,%ebp
81006c69:	83 ec 18             	sub    $0x18,%esp
81006c6c:	8b 45 10             	mov    0x10(%ebp),%eax
81006c6f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006c73:	98                   	cwtl   
81006c74:	25 00 20 00 00       	and    $0x2000,%eax
81006c79:	85 c0                	test   %eax,%eax
81006c7b:	75 24                	jne    81006ca1 <_fputwc_r+0x3b>
81006c7d:	8b 45 10             	mov    0x10(%ebp),%eax
81006c80:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006c84:	80 cc 20             	or     $0x20,%ah
81006c87:	89 c2                	mov    %eax,%edx
81006c89:	8b 45 10             	mov    0x10(%ebp),%eax
81006c8c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006c90:	8b 45 10             	mov    0x10(%ebp),%eax
81006c93:	8b 40 64             	mov    0x64(%eax),%eax
81006c96:	80 cc 20             	or     $0x20,%ah
81006c99:	89 c2                	mov    %eax,%edx
81006c9b:	8b 45 10             	mov    0x10(%ebp),%eax
81006c9e:	89 50 64             	mov    %edx,0x64(%eax)
81006ca1:	83 ec 04             	sub    $0x4,%esp
81006ca4:	ff 75 10             	push   0x10(%ebp)
81006ca7:	ff 75 0c             	push   0xc(%ebp)
81006caa:	ff 75 08             	push   0x8(%ebp)
81006cad:	e8 04 ff ff ff       	call   81006bb6 <__fputwc>
81006cb2:	83 c4 10             	add    $0x10,%esp
81006cb5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cb8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cbb:	c9                   	leave  
81006cbc:	c3                   	ret    

81006cbd <fputwc>:
81006cbd:	55                   	push   %ebp
81006cbe:	89 e5                	mov    %esp,%ebp
81006cc0:	83 ec 18             	sub    $0x18,%esp
81006cc3:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006cc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ccb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cce:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006cd1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006cd5:	74 18                	je     81006cef <fputwc+0x32>
81006cd7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006cda:	8b 40 38             	mov    0x38(%eax),%eax
81006cdd:	85 c0                	test   %eax,%eax
81006cdf:	75 0e                	jne    81006cef <fputwc+0x32>
81006ce1:	83 ec 0c             	sub    $0xc,%esp
81006ce4:	ff 75 f0             	push   -0x10(%ebp)
81006ce7:	e8 ad a7 ff ff       	call   81001499 <__sinit>
81006cec:	83 c4 10             	add    $0x10,%esp
81006cef:	83 ec 04             	sub    $0x4,%esp
81006cf2:	ff 75 0c             	push   0xc(%ebp)
81006cf5:	ff 75 08             	push   0x8(%ebp)
81006cf8:	ff 75 f4             	push   -0xc(%ebp)
81006cfb:	e8 66 ff ff ff       	call   81006c66 <_fputwc_r>
81006d00:	83 c4 10             	add    $0x10,%esp
81006d03:	c9                   	leave  
81006d04:	c3                   	ret    

81006d05 <_findenv>:
81006d05:	55                   	push   %ebp
81006d06:	89 e5                	mov    %esp,%ebp
81006d08:	83 ec 08             	sub    $0x8,%esp
81006d0b:	8b 55 08             	mov    0x8(%ebp),%edx
81006d0e:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006d13:	83 ec 04             	sub    $0x4,%esp
81006d16:	ff 75 0c             	push   0xc(%ebp)
81006d19:	52                   	push   %edx
81006d1a:	50                   	push   %eax
81006d1b:	e8 25 00 00 00       	call   81006d45 <_findenv_r>
81006d20:	83 c4 10             	add    $0x10,%esp
81006d23:	c9                   	leave  
81006d24:	c3                   	ret    

81006d25 <getenv>:
81006d25:	55                   	push   %ebp
81006d26:	89 e5                	mov    %esp,%ebp
81006d28:	83 ec 18             	sub    $0x18,%esp
81006d2b:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006d30:	83 ec 04             	sub    $0x4,%esp
81006d33:	8d 55 f4             	lea    -0xc(%ebp),%edx
81006d36:	52                   	push   %edx
81006d37:	ff 75 08             	push   0x8(%ebp)
81006d3a:	50                   	push   %eax
81006d3b:	e8 05 00 00 00       	call   81006d45 <_findenv_r>
81006d40:	83 c4 10             	add    $0x10,%esp
81006d43:	c9                   	leave  
81006d44:	c3                   	ret    

81006d45 <_findenv_r>:
81006d45:	55                   	push   %ebp
81006d46:	89 e5                	mov    %esp,%ebp
81006d48:	57                   	push   %edi
81006d49:	56                   	push   %esi
81006d4a:	53                   	push   %ebx
81006d4b:	83 ec 1c             	sub    $0x1c,%esp
81006d4e:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006d51:	83 ec 0c             	sub    $0xc,%esp
81006d54:	ff 75 08             	push   0x8(%ebp)
81006d57:	e8 67 06 00 00       	call   810073c3 <__env_lock>
81006d5c:	83 c4 10             	add    $0x10,%esp
81006d5f:	a1 30 83 00 81       	mov    0x81008330,%eax
81006d64:	8b 00                	mov    (%eax),%eax
81006d66:	85 c0                	test   %eax,%eax
81006d68:	75 18                	jne    81006d82 <_findenv_r+0x3d>
81006d6a:	83 ec 0c             	sub    $0xc,%esp
81006d6d:	ff 75 08             	push   0x8(%ebp)
81006d70:	e8 54 06 00 00       	call   810073c9 <__env_unlock>
81006d75:	83 c4 10             	add    $0x10,%esp
81006d78:	b8 00 00 00 00       	mov    $0x0,%eax
81006d7d:	e9 a8 00 00 00       	jmp    81006e2a <_findenv_r+0xe5>
81006d82:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81006d85:	eb 04                	jmp    81006d8b <_findenv_r+0x46>
81006d87:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006d8b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d8e:	0f b6 00             	movzbl (%eax),%eax
81006d91:	84 c0                	test   %al,%al
81006d93:	74 0a                	je     81006d9f <_findenv_r+0x5a>
81006d95:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d98:	0f b6 00             	movzbl (%eax),%eax
81006d9b:	3c 3d                	cmp    $0x3d,%al
81006d9d:	75 e8                	jne    81006d87 <_findenv_r+0x42>
81006d9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006da2:	0f b6 00             	movzbl (%eax),%eax
81006da5:	3c 3d                	cmp    $0x3d,%al
81006da7:	74 6e                	je     81006e17 <_findenv_r+0xd2>
81006da9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dac:	29 f8                	sub    %edi,%eax
81006dae:	89 c6                	mov    %eax,%esi
81006db0:	a1 30 83 00 81       	mov    0x81008330,%eax
81006db5:	8b 18                	mov    (%eax),%ebx
81006db7:	eb 58                	jmp    81006e11 <_findenv_r+0xcc>
81006db9:	89 f2                	mov    %esi,%edx
81006dbb:	8b 03                	mov    (%ebx),%eax
81006dbd:	83 ec 04             	sub    $0x4,%esp
81006dc0:	52                   	push   %edx
81006dc1:	57                   	push   %edi
81006dc2:	50                   	push   %eax
81006dc3:	e8 93 03 00 00       	call   8100715b <strncmp>
81006dc8:	83 c4 10             	add    $0x10,%esp
81006dcb:	85 c0                	test   %eax,%eax
81006dcd:	75 3f                	jne    81006e0e <_findenv_r+0xc9>
81006dcf:	8b 03                	mov    (%ebx),%eax
81006dd1:	89 f2                	mov    %esi,%edx
81006dd3:	01 d0                	add    %edx,%eax
81006dd5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006dd8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006ddb:	0f b6 00             	movzbl (%eax),%eax
81006dde:	3c 3d                	cmp    $0x3d,%al
81006de0:	75 2c                	jne    81006e0e <_findenv_r+0xc9>
81006de2:	a1 30 83 00 81       	mov    0x81008330,%eax
81006de7:	8b 10                	mov    (%eax),%edx
81006de9:	89 d8                	mov    %ebx,%eax
81006deb:	29 d0                	sub    %edx,%eax
81006ded:	c1 f8 02             	sar    $0x2,%eax
81006df0:	89 c2                	mov    %eax,%edx
81006df2:	8b 45 10             	mov    0x10(%ebp),%eax
81006df5:	89 10                	mov    %edx,(%eax)
81006df7:	83 ec 0c             	sub    $0xc,%esp
81006dfa:	ff 75 08             	push   0x8(%ebp)
81006dfd:	e8 c7 05 00 00       	call   810073c9 <__env_unlock>
81006e02:	83 c4 10             	add    $0x10,%esp
81006e05:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006e09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006e0c:	eb 1c                	jmp    81006e2a <_findenv_r+0xe5>
81006e0e:	83 c3 04             	add    $0x4,%ebx
81006e11:	8b 03                	mov    (%ebx),%eax
81006e13:	85 c0                	test   %eax,%eax
81006e15:	75 a2                	jne    81006db9 <_findenv_r+0x74>
81006e17:	83 ec 0c             	sub    $0xc,%esp
81006e1a:	ff 75 08             	push   0x8(%ebp)
81006e1d:	e8 a7 05 00 00       	call   810073c9 <__env_unlock>
81006e22:	83 c4 10             	add    $0x10,%esp
81006e25:	b8 00 00 00 00       	mov    $0x0,%eax
81006e2a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006e2d:	5b                   	pop    %ebx
81006e2e:	5e                   	pop    %esi
81006e2f:	5f                   	pop    %edi
81006e30:	5d                   	pop    %ebp
81006e31:	c3                   	ret    

81006e32 <_getenv_r>:
81006e32:	55                   	push   %ebp
81006e33:	89 e5                	mov    %esp,%ebp
81006e35:	83 ec 18             	sub    $0x18,%esp
81006e38:	83 ec 04             	sub    $0x4,%esp
81006e3b:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006e3e:	50                   	push   %eax
81006e3f:	ff 75 0c             	push   0xc(%ebp)
81006e42:	ff 75 08             	push   0x8(%ebp)
81006e45:	e8 fb fe ff ff       	call   81006d45 <_findenv_r>
81006e4a:	83 c4 10             	add    $0x10,%esp
81006e4d:	c9                   	leave  
81006e4e:	c3                   	ret    

81006e4f <_isatty_r>:
81006e4f:	55                   	push   %ebp
81006e50:	89 e5                	mov    %esp,%ebp
81006e52:	83 ec 18             	sub    $0x18,%esp
81006e55:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
81006e5c:	00 00 00 
81006e5f:	83 ec 0c             	sub    $0xc,%esp
81006e62:	ff 75 0c             	push   0xc(%ebp)
81006e65:	e8 c0 9b ff ff       	call   81000a2a <isatty>
81006e6a:	83 c4 10             	add    $0x10,%esp
81006e6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006e70:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006e74:	75 14                	jne    81006e8a <_isatty_r+0x3b>
81006e76:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
81006e7b:	85 c0                	test   %eax,%eax
81006e7d:	74 0b                	je     81006e8a <_isatty_r+0x3b>
81006e7f:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
81006e85:	8b 45 08             	mov    0x8(%ebp),%eax
81006e88:	89 10                	mov    %edx,(%eax)
81006e8a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006e8d:	c9                   	leave  
81006e8e:	c3                   	ret    

81006e8f <__get_global_locale>:
81006e8f:	55                   	push   %ebp
81006e90:	89 e5                	mov    %esp,%ebp
81006e92:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006e97:	5d                   	pop    %ebp
81006e98:	c3                   	ret    

81006e99 <__get_current_locale>:
81006e99:	55                   	push   %ebp
81006e9a:	89 e5                	mov    %esp,%ebp
81006e9c:	e8 ee ff ff ff       	call   81006e8f <__get_global_locale>
81006ea1:	5d                   	pop    %ebp
81006ea2:	c3                   	ret    

81006ea3 <_setlocale_r>:
81006ea3:	55                   	push   %ebp
81006ea4:	89 e5                	mov    %esp,%ebp
81006ea6:	83 ec 08             	sub    $0x8,%esp
81006ea9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006ead:	74 4c                	je     81006efb <_setlocale_r+0x58>
81006eaf:	83 ec 08             	sub    $0x8,%esp
81006eb2:	68 a4 7a 00 81       	push   $0x81007aa4
81006eb7:	ff 75 10             	push   0x10(%ebp)
81006eba:	e8 7d f2 ff ff       	call   8100613c <strcmp>
81006ebf:	83 c4 10             	add    $0x10,%esp
81006ec2:	85 c0                	test   %eax,%eax
81006ec4:	74 35                	je     81006efb <_setlocale_r+0x58>
81006ec6:	83 ec 08             	sub    $0x8,%esp
81006ec9:	68 aa 7a 00 81       	push   $0x81007aaa
81006ece:	ff 75 10             	push   0x10(%ebp)
81006ed1:	e8 66 f2 ff ff       	call   8100613c <strcmp>
81006ed6:	83 c4 10             	add    $0x10,%esp
81006ed9:	85 c0                	test   %eax,%eax
81006edb:	74 1e                	je     81006efb <_setlocale_r+0x58>
81006edd:	83 ec 08             	sub    $0x8,%esp
81006ee0:	68 a3 7a 00 81       	push   $0x81007aa3
81006ee5:	ff 75 10             	push   0x10(%ebp)
81006ee8:	e8 4f f2 ff ff       	call   8100613c <strcmp>
81006eed:	83 c4 10             	add    $0x10,%esp
81006ef0:	85 c0                	test   %eax,%eax
81006ef2:	74 07                	je     81006efb <_setlocale_r+0x58>
81006ef4:	b8 00 00 00 00       	mov    $0x0,%eax
81006ef9:	eb 05                	jmp    81006f00 <_setlocale_r+0x5d>
81006efb:	b8 aa 7a 00 81       	mov    $0x81007aaa,%eax
81006f00:	c9                   	leave  
81006f01:	c3                   	ret    

81006f02 <__locale_mb_cur_max>:
81006f02:	55                   	push   %ebp
81006f03:	89 e5                	mov    %esp,%ebp
81006f05:	e8 8f ff ff ff       	call   81006e99 <__get_current_locale>
81006f0a:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006f11:	0f be c0             	movsbl %al,%eax
81006f14:	5d                   	pop    %ebp
81006f15:	c3                   	ret    

81006f16 <setlocale>:
81006f16:	55                   	push   %ebp
81006f17:	89 e5                	mov    %esp,%ebp
81006f19:	83 ec 08             	sub    $0x8,%esp
81006f1c:	a1 04 7f 00 81       	mov    0x81007f04,%eax
81006f21:	83 ec 04             	sub    $0x4,%esp
81006f24:	ff 75 0c             	push   0xc(%ebp)
81006f27:	ff 75 08             	push   0x8(%ebp)
81006f2a:	50                   	push   %eax
81006f2b:	e8 73 ff ff ff       	call   81006ea3 <_setlocale_r>
81006f30:	83 c4 10             	add    $0x10,%esp
81006f33:	c9                   	leave  
81006f34:	c3                   	ret    

81006f35 <_lseek_r>:
81006f35:	55                   	push   %ebp
81006f36:	89 e5                	mov    %esp,%ebp
81006f38:	83 ec 18             	sub    $0x18,%esp
81006f3b:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
81006f42:	00 00 00 
81006f45:	83 ec 04             	sub    $0x4,%esp
81006f48:	ff 75 14             	push   0x14(%ebp)
81006f4b:	ff 75 10             	push   0x10(%ebp)
81006f4e:	ff 75 0c             	push   0xc(%ebp)
81006f51:	e8 a7 9a ff ff       	call   810009fd <lseek>
81006f56:	83 c4 10             	add    $0x10,%esp
81006f59:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006f5c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006f60:	75 14                	jne    81006f76 <_lseek_r+0x41>
81006f62:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
81006f67:	85 c0                	test   %eax,%eax
81006f69:	74 0b                	je     81006f76 <_lseek_r+0x41>
81006f6b:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
81006f71:	8b 45 08             	mov    0x8(%ebp),%eax
81006f74:	89 10                	mov    %edx,(%eax)
81006f76:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006f79:	c9                   	leave  
81006f7a:	c3                   	ret    

81006f7b <__get_global_locale>:
81006f7b:	55                   	push   %ebp
81006f7c:	89 e5                	mov    %esp,%ebp
81006f7e:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006f83:	5d                   	pop    %ebp
81006f84:	c3                   	ret    

81006f85 <__get_current_locale>:
81006f85:	55                   	push   %ebp
81006f86:	89 e5                	mov    %esp,%ebp
81006f88:	e8 ee ff ff ff       	call   81006f7b <__get_global_locale>
81006f8d:	5d                   	pop    %ebp
81006f8e:	c3                   	ret    

81006f8f <_mbtowc_r>:
81006f8f:	55                   	push   %ebp
81006f90:	89 e5                	mov    %esp,%ebp
81006f92:	83 ec 08             	sub    $0x8,%esp
81006f95:	e8 eb ff ff ff       	call   81006f85 <__get_current_locale>
81006f9a:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006fa0:	83 ec 0c             	sub    $0xc,%esp
81006fa3:	ff 75 18             	push   0x18(%ebp)
81006fa6:	ff 75 14             	push   0x14(%ebp)
81006fa9:	ff 75 10             	push   0x10(%ebp)
81006fac:	ff 75 0c             	push   0xc(%ebp)
81006faf:	ff 75 08             	push   0x8(%ebp)
81006fb2:	ff d0                	call   *%eax
81006fb4:	83 c4 20             	add    $0x20,%esp
81006fb7:	c9                   	leave  
81006fb8:	c3                   	ret    

81006fb9 <__ascii_mbtowc>:
81006fb9:	55                   	push   %ebp
81006fba:	89 e5                	mov    %esp,%ebp
81006fbc:	83 ec 10             	sub    $0x10,%esp
81006fbf:	8b 45 10             	mov    0x10(%ebp),%eax
81006fc2:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006fc5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006fc9:	75 06                	jne    81006fd1 <__ascii_mbtowc+0x18>
81006fcb:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006fce:	89 45 0c             	mov    %eax,0xc(%ebp)
81006fd1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006fd5:	75 07                	jne    81006fde <__ascii_mbtowc+0x25>
81006fd7:	b8 00 00 00 00       	mov    $0x0,%eax
81006fdc:	eb 31                	jmp    8100700f <__ascii_mbtowc+0x56>
81006fde:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006fe2:	75 07                	jne    81006feb <__ascii_mbtowc+0x32>
81006fe4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006fe9:	eb 24                	jmp    8100700f <__ascii_mbtowc+0x56>
81006feb:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006fee:	0f b6 00             	movzbl (%eax),%eax
81006ff1:	0f b6 d0             	movzbl %al,%edx
81006ff4:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ff7:	89 10                	mov    %edx,(%eax)
81006ff9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006ffc:	0f b6 00             	movzbl (%eax),%eax
81006fff:	84 c0                	test   %al,%al
81007001:	75 07                	jne    8100700a <__ascii_mbtowc+0x51>
81007003:	b8 00 00 00 00       	mov    $0x0,%eax
81007008:	eb 05                	jmp    8100700f <__ascii_mbtowc+0x56>
8100700a:	b8 01 00 00 00       	mov    $0x1,%eax
8100700f:	c9                   	leave  
81007010:	c3                   	ret    

81007011 <__sputc_r>:
81007011:	55                   	push   %ebp
81007012:	89 e5                	mov    %esp,%ebp
81007014:	83 ec 08             	sub    $0x8,%esp
81007017:	8b 45 10             	mov    0x10(%ebp),%eax
8100701a:	8b 40 08             	mov    0x8(%eax),%eax
8100701d:	8d 50 ff             	lea    -0x1(%eax),%edx
81007020:	8b 45 10             	mov    0x10(%ebp),%eax
81007023:	89 50 08             	mov    %edx,0x8(%eax)
81007026:	8b 45 10             	mov    0x10(%ebp),%eax
81007029:	8b 40 08             	mov    0x8(%eax),%eax
8100702c:	85 c0                	test   %eax,%eax
8100702e:	79 17                	jns    81007047 <__sputc_r+0x36>
81007030:	8b 45 10             	mov    0x10(%ebp),%eax
81007033:	8b 50 08             	mov    0x8(%eax),%edx
81007036:	8b 45 10             	mov    0x10(%ebp),%eax
81007039:	8b 40 18             	mov    0x18(%eax),%eax
8100703c:	39 c2                	cmp    %eax,%edx
8100703e:	7c 21                	jl     81007061 <__sputc_r+0x50>
81007040:	8b 45 0c             	mov    0xc(%ebp),%eax
81007043:	3c 0a                	cmp    $0xa,%al
81007045:	74 1a                	je     81007061 <__sputc_r+0x50>
81007047:	8b 45 10             	mov    0x10(%ebp),%eax
8100704a:	8b 00                	mov    (%eax),%eax
8100704c:	8d 48 01             	lea    0x1(%eax),%ecx
8100704f:	8b 55 10             	mov    0x10(%ebp),%edx
81007052:	89 0a                	mov    %ecx,(%edx)
81007054:	8b 55 0c             	mov    0xc(%ebp),%edx
81007057:	88 10                	mov    %dl,(%eax)
81007059:	0f b6 00             	movzbl (%eax),%eax
8100705c:	0f b6 c0             	movzbl %al,%eax
8100705f:	eb 14                	jmp    81007075 <__sputc_r+0x64>
81007061:	83 ec 04             	sub    $0x4,%esp
81007064:	ff 75 10             	push   0x10(%ebp)
81007067:	ff 75 0c             	push   0xc(%ebp)
8100706a:	ff 75 08             	push   0x8(%ebp)
8100706d:	e8 5d f5 ff ff       	call   810065cf <__swbuf_r>
81007072:	83 c4 10             	add    $0x10,%esp
81007075:	c9                   	leave  
81007076:	c3                   	ret    

81007077 <_putc_r>:
81007077:	55                   	push   %ebp
81007078:	89 e5                	mov    %esp,%ebp
8100707a:	53                   	push   %ebx
8100707b:	83 ec 14             	sub    $0x14,%esp
8100707e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007081:	8b 45 08             	mov    0x8(%ebp),%eax
81007084:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007087:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100708b:	74 18                	je     810070a5 <_putc_r+0x2e>
8100708d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007090:	8b 40 38             	mov    0x38(%eax),%eax
81007093:	85 c0                	test   %eax,%eax
81007095:	75 0e                	jne    810070a5 <_putc_r+0x2e>
81007097:	83 ec 0c             	sub    $0xc,%esp
8100709a:	ff 75 f4             	push   -0xc(%ebp)
8100709d:	e8 f7 a3 ff ff       	call   81001499 <__sinit>
810070a2:	83 c4 10             	add    $0x10,%esp
810070a5:	83 ec 04             	sub    $0x4,%esp
810070a8:	53                   	push   %ebx
810070a9:	ff 75 0c             	push   0xc(%ebp)
810070ac:	ff 75 08             	push   0x8(%ebp)
810070af:	e8 5d ff ff ff       	call   81007011 <__sputc_r>
810070b4:	83 c4 10             	add    $0x10,%esp
810070b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810070bd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810070c0:	c9                   	leave  
810070c1:	c3                   	ret    

810070c2 <putc>:
810070c2:	55                   	push   %ebp
810070c3:	89 e5                	mov    %esp,%ebp
810070c5:	53                   	push   %ebx
810070c6:	83 ec 14             	sub    $0x14,%esp
810070c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810070cc:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810070d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810070d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810070d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070da:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810070de:	74 18                	je     810070f8 <putc+0x36>
810070e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810070e3:	8b 40 38             	mov    0x38(%eax),%eax
810070e6:	85 c0                	test   %eax,%eax
810070e8:	75 0e                	jne    810070f8 <putc+0x36>
810070ea:	83 ec 0c             	sub    $0xc,%esp
810070ed:	ff 75 f0             	push   -0x10(%ebp)
810070f0:	e8 a4 a3 ff ff       	call   81001499 <__sinit>
810070f5:	83 c4 10             	add    $0x10,%esp
810070f8:	83 ec 04             	sub    $0x4,%esp
810070fb:	53                   	push   %ebx
810070fc:	ff 75 08             	push   0x8(%ebp)
810070ff:	ff 75 f4             	push   -0xc(%ebp)
81007102:	e8 0a ff ff ff       	call   81007011 <__sputc_r>
81007107:	83 c4 10             	add    $0x10,%esp
8100710a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100710d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007110:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007113:	c9                   	leave  
81007114:	c3                   	ret    

81007115 <_read_r>:
81007115:	55                   	push   %ebp
81007116:	89 e5                	mov    %esp,%ebp
81007118:	83 ec 18             	sub    $0x18,%esp
8100711b:	c7 05 4c 8b 00 81 00 	movl   $0x0,0x81008b4c
81007122:	00 00 00 
81007125:	83 ec 04             	sub    $0x4,%esp
81007128:	ff 75 14             	push   0x14(%ebp)
8100712b:	ff 75 10             	push   0x10(%ebp)
8100712e:	ff 75 0c             	push   0xc(%ebp)
81007131:	e8 4c 98 ff ff       	call   81000982 <read>
81007136:	83 c4 10             	add    $0x10,%esp
81007139:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100713c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007140:	75 14                	jne    81007156 <_read_r+0x41>
81007142:	a1 4c 8b 00 81       	mov    0x81008b4c,%eax
81007147:	85 c0                	test   %eax,%eax
81007149:	74 0b                	je     81007156 <_read_r+0x41>
8100714b:	8b 15 4c 8b 00 81    	mov    0x81008b4c,%edx
81007151:	8b 45 08             	mov    0x8(%ebp),%eax
81007154:	89 10                	mov    %edx,(%eax)
81007156:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007159:	c9                   	leave  
8100715a:	c3                   	ret    

8100715b <strncmp>:
8100715b:	55                   	push   %ebp
8100715c:	89 e5                	mov    %esp,%ebp
8100715e:	83 ec 10             	sub    $0x10,%esp
81007161:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007165:	75 0a                	jne    81007171 <strncmp+0x16>
81007167:	b8 00 00 00 00       	mov    $0x0,%eax
8100716c:	e9 cb 00 00 00       	jmp    8100723c <strncmp+0xe1>
81007171:	8b 55 08             	mov    0x8(%ebp),%edx
81007174:	8b 45 0c             	mov    0xc(%ebp),%eax
81007177:	09 d0                	or     %edx,%eax
81007179:	83 e0 03             	and    $0x3,%eax
8100717c:	85 c0                	test   %eax,%eax
8100717e:	0f 85 85 00 00 00    	jne    81007209 <strncmp+0xae>
81007184:	8b 45 08             	mov    0x8(%ebp),%eax
81007187:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100718a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100718d:	89 45 f8             	mov    %eax,-0x8(%ebp)
81007190:	eb 36                	jmp    810071c8 <strncmp+0x6d>
81007192:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81007196:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100719a:	74 1d                	je     810071b9 <strncmp+0x5e>
8100719c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100719f:	8b 00                	mov    (%eax),%eax
810071a1:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810071a7:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071aa:	8b 00                	mov    (%eax),%eax
810071ac:	f7 d0                	not    %eax
810071ae:	21 d0                	and    %edx,%eax
810071b0:	25 80 80 80 80       	and    $0x80808080,%eax
810071b5:	85 c0                	test   %eax,%eax
810071b7:	74 07                	je     810071c0 <strncmp+0x65>
810071b9:	b8 00 00 00 00       	mov    $0x0,%eax
810071be:	eb 7c                	jmp    8100723c <strncmp+0xe1>
810071c0:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810071c4:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810071c8:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810071cc:	76 0e                	jbe    810071dc <strncmp+0x81>
810071ce:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071d1:	8b 10                	mov    (%eax),%edx
810071d3:	8b 45 f8             	mov    -0x8(%ebp),%eax
810071d6:	8b 00                	mov    (%eax),%eax
810071d8:	39 c2                	cmp    %eax,%edx
810071da:	74 b6                	je     81007192 <strncmp+0x37>
810071dc:	8b 45 fc             	mov    -0x4(%ebp),%eax
810071df:	89 45 08             	mov    %eax,0x8(%ebp)
810071e2:	8b 45 f8             	mov    -0x8(%ebp),%eax
810071e5:	89 45 0c             	mov    %eax,0xc(%ebp)
810071e8:	eb 1f                	jmp    81007209 <strncmp+0xae>
810071ea:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810071ee:	74 0a                	je     810071fa <strncmp+0x9f>
810071f0:	8b 45 08             	mov    0x8(%ebp),%eax
810071f3:	0f b6 00             	movzbl (%eax),%eax
810071f6:	84 c0                	test   %al,%al
810071f8:	75 07                	jne    81007201 <strncmp+0xa6>
810071fa:	b8 00 00 00 00       	mov    $0x0,%eax
810071ff:	eb 3b                	jmp    8100723c <strncmp+0xe1>
81007201:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81007205:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81007209:	8b 45 10             	mov    0x10(%ebp),%eax
8100720c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100720f:	89 55 10             	mov    %edx,0x10(%ebp)
81007212:	85 c0                	test   %eax,%eax
81007214:	74 10                	je     81007226 <strncmp+0xcb>
81007216:	8b 45 08             	mov    0x8(%ebp),%eax
81007219:	0f b6 10             	movzbl (%eax),%edx
8100721c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100721f:	0f b6 00             	movzbl (%eax),%eax
81007222:	38 c2                	cmp    %al,%dl
81007224:	74 c4                	je     810071ea <strncmp+0x8f>
81007226:	8b 45 08             	mov    0x8(%ebp),%eax
81007229:	0f b6 00             	movzbl (%eax),%eax
8100722c:	0f b6 d0             	movzbl %al,%edx
8100722f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007232:	0f b6 00             	movzbl (%eax),%eax
81007235:	0f b6 c8             	movzbl %al,%ecx
81007238:	89 d0                	mov    %edx,%eax
8100723a:	29 c8                	sub    %ecx,%eax
8100723c:	c9                   	leave  
8100723d:	c3                   	ret    

8100723e <__get_global_locale>:
8100723e:	55                   	push   %ebp
8100723f:	89 e5                	mov    %esp,%ebp
81007241:	b8 40 83 00 81       	mov    $0x81008340,%eax
81007246:	5d                   	pop    %ebp
81007247:	c3                   	ret    

81007248 <__get_current_locale>:
81007248:	55                   	push   %ebp
81007249:	89 e5                	mov    %esp,%ebp
8100724b:	e8 ee ff ff ff       	call   8100723e <__get_global_locale>
81007250:	5d                   	pop    %ebp
81007251:	c3                   	ret    

81007252 <_wcrtomb_r>:
81007252:	55                   	push   %ebp
81007253:	89 e5                	mov    %esp,%ebp
81007255:	83 ec 18             	sub    $0x18,%esp
81007258:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100725f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007263:	75 21                	jne    81007286 <_wcrtomb_r+0x34>
81007265:	e8 de ff ff ff       	call   81007248 <__get_current_locale>
8100726a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007270:	ff 75 14             	push   0x14(%ebp)
81007273:	6a 00                	push   $0x0
81007275:	8d 55 ea             	lea    -0x16(%ebp),%edx
81007278:	52                   	push   %edx
81007279:	ff 75 08             	push   0x8(%ebp)
8100727c:	ff d0                	call   *%eax
8100727e:	83 c4 10             	add    $0x10,%esp
81007281:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007284:	eb 1f                	jmp    810072a5 <_wcrtomb_r+0x53>
81007286:	e8 bd ff ff ff       	call   81007248 <__get_current_locale>
8100728b:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007291:	ff 75 14             	push   0x14(%ebp)
81007294:	ff 75 10             	push   0x10(%ebp)
81007297:	ff 75 0c             	push   0xc(%ebp)
8100729a:	ff 75 08             	push   0x8(%ebp)
8100729d:	ff d0                	call   *%eax
8100729f:	83 c4 10             	add    $0x10,%esp
810072a2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072a5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810072a9:	75 19                	jne    810072c4 <_wcrtomb_r+0x72>
810072ab:	8b 45 14             	mov    0x14(%ebp),%eax
810072ae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810072b4:	8b 45 08             	mov    0x8(%ebp),%eax
810072b7:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810072bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072c2:	eb 03                	jmp    810072c7 <_wcrtomb_r+0x75>
810072c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810072c7:	c9                   	leave  
810072c8:	c3                   	ret    

810072c9 <wcrtomb>:
810072c9:	55                   	push   %ebp
810072ca:	89 e5                	mov    %esp,%ebp
810072cc:	83 ec 28             	sub    $0x28,%esp
810072cf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810072d6:	a1 04 7f 00 81       	mov    0x81007f04,%eax
810072db:	89 45 f0             	mov    %eax,-0x10(%ebp)
810072de:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810072e2:	75 21                	jne    81007305 <wcrtomb+0x3c>
810072e4:	e8 5f ff ff ff       	call   81007248 <__get_current_locale>
810072e9:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810072ef:	ff 75 10             	push   0x10(%ebp)
810072f2:	6a 00                	push   $0x0
810072f4:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810072f7:	52                   	push   %edx
810072f8:	ff 75 f0             	push   -0x10(%ebp)
810072fb:	ff d0                	call   *%eax
810072fd:	83 c4 10             	add    $0x10,%esp
81007300:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007303:	eb 1f                	jmp    81007324 <wcrtomb+0x5b>
81007305:	e8 3e ff ff ff       	call   81007248 <__get_current_locale>
8100730a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007310:	ff 75 10             	push   0x10(%ebp)
81007313:	ff 75 0c             	push   0xc(%ebp)
81007316:	ff 75 08             	push   0x8(%ebp)
81007319:	ff 75 f0             	push   -0x10(%ebp)
8100731c:	ff d0                	call   *%eax
8100731e:	83 c4 10             	add    $0x10,%esp
81007321:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007324:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007328:	75 19                	jne    81007343 <wcrtomb+0x7a>
8100732a:	8b 45 10             	mov    0x10(%ebp),%eax
8100732d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007333:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007336:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100733c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007341:	eb 03                	jmp    81007346 <wcrtomb+0x7d>
81007343:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007346:	c9                   	leave  
81007347:	c3                   	ret    

81007348 <__get_global_locale>:
81007348:	55                   	push   %ebp
81007349:	89 e5                	mov    %esp,%ebp
8100734b:	b8 40 83 00 81       	mov    $0x81008340,%eax
81007350:	5d                   	pop    %ebp
81007351:	c3                   	ret    

81007352 <__get_current_locale>:
81007352:	55                   	push   %ebp
81007353:	89 e5                	mov    %esp,%ebp
81007355:	e8 ee ff ff ff       	call   81007348 <__get_global_locale>
8100735a:	5d                   	pop    %ebp
8100735b:	c3                   	ret    

8100735c <_wctomb_r>:
8100735c:	55                   	push   %ebp
8100735d:	89 e5                	mov    %esp,%ebp
8100735f:	83 ec 08             	sub    $0x8,%esp
81007362:	e8 eb ff ff ff       	call   81007352 <__get_current_locale>
81007367:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100736d:	ff 75 14             	push   0x14(%ebp)
81007370:	ff 75 10             	push   0x10(%ebp)
81007373:	ff 75 0c             	push   0xc(%ebp)
81007376:	ff 75 08             	push   0x8(%ebp)
81007379:	ff d0                	call   *%eax
8100737b:	83 c4 10             	add    $0x10,%esp
8100737e:	c9                   	leave  
8100737f:	c3                   	ret    

81007380 <__ascii_wctomb>:
81007380:	55                   	push   %ebp
81007381:	89 e5                	mov    %esp,%ebp
81007383:	83 ec 10             	sub    $0x10,%esp
81007386:	8b 45 10             	mov    0x10(%ebp),%eax
81007389:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100738c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007390:	75 07                	jne    81007399 <__ascii_wctomb+0x19>
81007392:	b8 00 00 00 00       	mov    $0x0,%eax
81007397:	eb 28                	jmp    810073c1 <__ascii_wctomb+0x41>
81007399:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810073a0:	76 10                	jbe    810073b2 <__ascii_wctomb+0x32>
810073a2:	8b 45 08             	mov    0x8(%ebp),%eax
810073a5:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810073ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810073b0:	eb 0f                	jmp    810073c1 <__ascii_wctomb+0x41>
810073b2:	8b 45 fc             	mov    -0x4(%ebp),%eax
810073b5:	89 c2                	mov    %eax,%edx
810073b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810073ba:	88 10                	mov    %dl,(%eax)
810073bc:	b8 01 00 00 00       	mov    $0x1,%eax
810073c1:	c9                   	leave  
810073c2:	c3                   	ret    

810073c3 <__env_lock>:
810073c3:	55                   	push   %ebp
810073c4:	89 e5                	mov    %esp,%ebp
810073c6:	90                   	nop
810073c7:	5d                   	pop    %ebp
810073c8:	c3                   	ret    

810073c9 <__env_unlock>:
810073c9:	55                   	push   %ebp
810073ca:	89 e5                	mov    %esp,%ebp
810073cc:	90                   	nop
810073cd:	5d                   	pop    %ebp
810073ce:	c3                   	ret    
