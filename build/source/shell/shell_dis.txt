
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000a77

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000095f0 memsz 0x00009da0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008498  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000075d  810084a0  810084a0  000094a0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008c00  81008c00  00009c00  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000007a0  81009600  81009600  0000a5f0  2**5
                  ALLOC
  4 .debug_info   0002abc9  00000000  00000000  0000a5f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009a8a  00000000  00000000  000351b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000009a8  00000000  00000000  0003ec48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000070  00000000  00000000  0003f5f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00005e5b  00000000  00000000  0003f660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    0000176f  00000000  00000000  000454bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 00001736  00000000  00000000  00046c2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00048360  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001ecc  00000000  00000000  000483a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81009600 l     O .bss	00000200 cmd_buf
81008c00 l     O .data	00000004 prompt
81009800 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000026f do_less
8100054f l     F .text	00000115 do_cp
810086e0 l     O .rodata	00000054 cmd_list
81000664 l     F .text	0000003e cli_init
810006a2 l     F .text	00000033 show_prompt
810006d5 l     F .text	00000043 find_builtin
81000718 l     F .text	00000049 run_builtin
81000761 l     F .text	000000e5 run_exec_file
81000846 l     F .text	00000081 find_exec_path
81009c20 l     O .bss	000000ff path.0
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81001463 l     F .text	000000ad std
81001510 l     F .text	0000001b stdin_init
8100152b l     F .text	0000001b stdout_init
81001546 l     F .text	0000001b stderr_init
81009d20 l     O .bss	00000004 __sfp_recursive_mutex
81009d24 l     O .bss	00000004 __sinit_recursive_mutex
81001809 l     F .text	0000000a __fp_lock
81001813 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81009d30 l     O .bss	00000004 optwhere
81009d34 l     O .bss	00000004 permute_from
81009d38 l     O .bss	00000004 num_nonopts
810028c7 l     F .text	0000007b reverse_argv_elements
81002942 l     F .text	00000036 permute
81002978 l     F .text	00000031 is_option
810029a9 l     F .text	00000059 read_globals
81002a02 l     F .text	00000052 write_globals
81002a54 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81008c20 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003878 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810043bd l       .text	00000000 L20
81004374 l       .text	00000000 L5
810043ba l       .text	00000000 L15
81004380 l       .text	00000000 L8
810043a1 l       .text	00000000 L9
810043b0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100440f l       .text	00000000 L4
81004401 l       .text	00000000 BYTECMP
810043fc l       .text	00000000 L5
81004403 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009d88 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
810045d0 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81005374 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81005a6b l       .text	00000000 L25
81005a12 l       .text	00000000 L5
81005a5e l       .text	00000000 L14
81005a64 l       .text	00000000 L19
81005a23 l       .text	00000000 L10
81005a50 l       .text	00000000 L9
81005a53 l       .text	00000000 L15
81005a9e l       .text	00000000 L26
81005aa1 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005ba6 l       .text	00000000 L5
81005bde l       .text	00000000 L15
81005bb0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81005cec l     F .text	0000000a __locale_ctype_ptr_l
81005cf6 l     F .text	0000000a __get_global_locale
81005d00 l     F .text	0000000a __get_current_locale
81005d0a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009d90 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006595 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81009470 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
81006e48 l     F .text	0000000a __get_global_locale
81006e52 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81006f34 l     F .text	0000000a __get_global_locale
81006f3e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
81007780 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81008307 l     F .text	0000000a __get_global_locale
81008311 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81008411 l     F .text	0000000a __get_global_locale
8100841b l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009d98 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009d9c l     O .bss	00000004 __env_recursive_mutex
81006e08 g     F .text	00000040 _isatty_r
810051dd g     F .text	00000037 cleanup_glue
810050eb g     F .text	000000d6 _puts_r
81006eee g     F .text	00000046 _lseek_r
81000bc6 g     F .text	0000001b yield
810057ee g     F .text	00000055 _siprintf_r
81006382 g     F .text	000000ba __sflags
81000e5a g     F .text	00000039 ioctl
81005cd2 g     F .text	0000001a strtok_r
810050b6 g     F .text	00000035 printf
8100831b g     F .text	00000077 _wcrtomb_r
81005944 g     F .text	0000004a __sseek
81001758 g     F .text	00000099 __sinit
81005f4f g     F .text	00000112 __swbuf_r
81006e5c g     F .text	0000005f _setlocale_r
81001561 g     F .text	0000006f __sfmoreglue
810044ee g     F .text	00000006 __malloc_unlock
81006fd0 g       .text	00000000 memmove
810035b0 g     F .text	00000049 getopt_long
8100173e g     F .text	0000001a _cleanup
81005c12 g     F .text	000000c0 __strtok_r
81006378 g     F .text	0000000a __errno
81006cde g     F .text	00000020 getenv
81002692 g     F .text	00000043 _fstat_r
81009d8c g     O .bss	00000004 errno
81008207 g     F .text	0000001d __srget
810058df g     F .text	0000000a __seofread
81000b99 g     F .text	0000002d execve
81000b3b g     F .text	0000001b getpid
81001444 g     F .text	0000001f fgets
81006be8 g     F .text	00000067 _getc_r
81006c4f g     F .text	0000006f getc
81004418 g       .text	00000000 memcpy
810055e2 g     F .text	0000020c setvbuf
8100171d g     F .text	00000021 _cleanup_r
81007446 g     F .text	0000033a _svfprintf_r
810051c1 g     F .text	0000001c puts
8100383f g     F .text	0000001c malloc
81005089 g     F .text	0000002d _printf_r
81000cb0 g     F .text	00000021 isatty
810036b5 g     F .text	0000000a __getreent
81009d28 g     O .bss	00000004 optarg
81009d40 g     O .bss	00000004 __malloc_top_pad
81009600 g       .bss	00000000 __bss_start__
8100674a g     F .text	0000049e __sfvwrite_r
810055a2 g     F .text	00000040 _sbrk_r
81008c04 g     O .data	00000004 opterr
81000de5 g     F .text	00000040 readdir
81007884 g     F .text	00000046 _read_r
81000f0b g     F .text	00000107 _fclose_r
810012ad g     F .text	00000039 fflush
81009d44 g     O .bss	00000004 __malloc_max_sbrked_mem
81000c83 g     F .text	0000002d lseek
81008884 g     O .rodata	00000004 _global_impure_ptr
810078ca g     F .text	000008da _realloc_r
81005f01 g     F .text	00000025 strtol_l
810066ab g     F .text	00000057 _fputwc_r
8100181d g     F .text	00000024 __fp_lock_all
81005f26 g     F .text	00000029 strtol
810021c1 g     F .text	000004b1 _fseeko_r
81005214 g     F .text	00000160 _reclaim_reent
8100643c g     F .text	00000046 _fputc_r
81000c35 g     F .text	0000002d write
810077e6 g     F .text	0000004b _putc_r
810095ec g     O .data	00000004 environ
81000cd1 g     F .text	00000027 fstat
81001982 g     F .text	0000002c fprintf
8100368e g     F .text	00000027 __getopt_long_only_r
81002672 g     F .text	00000020 fseeko
81000ead g     F .text	0000001a _atoi_r
8100705d g     F .text	000001b7 __ssputs_r
810021a1 g     F .text	00000020 fseek
81000ac5 g     F .text	0000004c sys_call
81004636 g     F .text	000000a8 __sfputs_r
81009d2c g     O .bss	00000004 optind
810017f1 g     F .text	00000006 __sfp_lock_acquire
81004330 g       .text	00000000 memchr
810057ee g     F .text	00000055 _sprintf_r
81009da0 g       .bss	00000000 __bss_end__
81001c48 g     F .text	000003db _free_r
81000d5c g     F .text	00000021 wait
81008960 g     O .rodata	00000180 _ctype_b
81006ebb g     F .text	00000014 __locale_mb_cur_max
810081a4 g     F .text	00000063 __srget_r
81006223 g     F .text	00000115 __call_exitprocs
8100946c g     O .data	00000004 __malloc_sbrk_base
81000a77 g       .text	00000000 _start
81000c08 g     F .text	0000002d read
81007214 g     F .text	00000232 __ssprint_r
81005043 g     F .text	00000046 _open_r
81008224 g     F .text	000000e3 strncmp
81003667 g     F .text	00000027 __getopt_long_r
81009d60 g     O .bss	00000028 __malloc_current_mallinfo
81005089 g     F .text	0000002d _iprintf_r
81006338 g     F .text	00000040 _close_r
81005be9 g     F .text	00000029 strtok
810043c5 g       .text	00000000 memcmp
810027a8 g     F .text	000000b8 _fwrite_r
81000b7e g     F .text	0000001b fork
810060c8 g     F .text	0000015b __swsetup_r
810015d0 g     F .text	0000014d __sfp
81009060 g     O .data	00000408 __malloc_av_
81001803 g     F .text	00000006 __sinit_lock_release
8100589b g     F .text	00000044 __sread
81001c23 g     F .text	00000025 fread
810044e8 g     F .text	00000006 __malloc_lock
81001959 g     F .text	00000029 _fprintf_r
81000cf8 g     F .text	00000021 sbrk
81001255 g     F .text	00000058 _fflush_r
81000a87 g     F .text	0000003e cstart
8100193a g     F .text	0000001f fopen
81003569 g     F .text	00000047 getopt
81004460 g       .text	00000000 memset
810008c7 g     F .text	000001b0 main
81009d48 g     O .bss	00000004 __malloc_max_total_mem
81006061 g     F .text	00000021 __swbuf
810019ae g     F .text	00000275 _fread_r
8100598e g     F .text	00000025 __sclose
81001012 g     F .text	0000001d fclose
81005edc g     F .text	00000025 _strtol_r
810028a2 g     F .text	00000025 getchar
81006cfe g     F .text	000000ed _findenv_r
81003b0b g     F .text	00000822 _malloc_r
81008449 g     F .text	00000043 __ascii_wctomb
81000d7d g     F .text	00000068 opendir
81001959 g     F .text	00000029 _fiprintf_r
81008492 g     F .text	00000006 __env_unlock
81006cbe g     F .text	00000020 _findenv
810026d5 g     F .text	00000068 _fwalk
810012e6 g     F .text	0000015e _fgets_r
81006f48 g     F .text	0000002a _mbtowc_r
81007831 g     F .text	00000053 putc
810035f9 g     F .text	00000049 getopt_long_only
81002023 g     F .text	00000161 _malloc_trim_r
81005abc g     F .text	000000a5 strcmp
810046de g     F .text	00000025 vfiprintf
81000d19 g     F .text	00000021 dup
810050b6 g     F .text	00000035 iprintf
81005843 g     F .text	00000058 sprintf
81009d94 g     O .bss	00000004 _PathLocale
81006082 g     F .text	00000046 _write_r
81006ecf g     F .text	0000001f setlocale
81004a59 g     F .text	0000019b _printf_common
81009044 g     O .data	00000004 _impure_ptr
8100102f g     F .text	00000226 __sflush_r
81002184 g     F .text	0000001d _fseek_r
81007446 g     F .text	0000033a _svfiprintf_r
810053a1 g     F .text	00000201 __srefill_r
81006f72 g     F .text	00000058 __ascii_mbtowc
81001841 g     F .text	00000024 __fp_unlock_all
81006482 g     F .text	0000004e fputc
81000b56 g     F .text	00000028 print_msg
81008c08 g     O .data	00000004 optopt
810037ac g     F .text	00000093 __swhatbuf_r
81002860 g     F .text	00000025 fwrite
81002885 g     F .text	0000001d _getchar_r
810065fb g     F .text	000000b0 __fputwc
810064d0 g     F .text	000000a6 _fputs_r
810058e9 g     F .text	0000005b __swrite
81009468 g     O .data	00000004 __malloc_trim_threshold
81000ec7 g     F .text	00000044 exit
81001982 g     F .text	0000002c fiprintf
81004703 g     F .text	00000356 _vfiprintf_r
8100273d g     F .text	0000006b _fwalk_reent
810017f7 g     F .text	00000006 __sfp_lock_release
81005843 g     F .text	00000058 siprintf
81000e93 g     F .text	0000001a atoi
81008ae0 g     O .rodata	00000101 _ctype_
81003642 g     F .text	00000025 __getopt_r
81001865 g     F .text	000000d5 _fopen_r
81000d3a g     F .text	00000022 _exit
810036bf g     F .text	000000ed __smakebuf_r
81005b70 g       .text	00000000 strlen
81004bf4 g     F .text	0000044f _printf_i
81000be1 g     F .text	00000027 open
810044f4 g     F .text	000000dc __sprint_r
810059c0 g       .text	00000000 strchr
81006576 g     F .text	0000001f fputs
81000e25 g     F .text	00000035 closedir
81008425 g     F .text	00000024 _wctomb_r
8100848c g     F .text	00000006 __env_lock
81004703 g     F .text	00000356 _vfprintf_r
81000b11 g     F .text	0000002a msleep
81008392 g     F .text	0000007f wcrtomb
81000c62 g     F .text	00000021 close
81009480 g     O .data	0000016c __global_locale
810046de g     F .text	00000025 vfprintf
81006702 g     F .text	00000048 fputwc
8100385b g     F .text	0000001d free
810017fd g     F .text	00000006 __sinit_lock_acquire
81006deb g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 00 9c 00 81       	mov    0x81009c00,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 a6 84 00 81       	push   $0x810084a6
81000025:	e8 8c 50 00 00       	call   810050b6 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 04 9c 00 81       	mov    0x81009c04,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 b1 84 00 81       	push   $0x810084b1
81000050:	68 b6 84 00 81       	push   $0x810084b6
81000055:	e8 5c 50 00 00       	call   810050b6 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 b9 84 00 81       	push   $0x810084b9
81000065:	68 b6 84 00 81       	push   $0x810084b6
8100006a:	e8 47 50 00 00       	call   810050b6 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 27 36 00 00       	call   810036b5 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 9e 13 00 00       	call   81001444 <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 05 51 00 00       	call   810051c1 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 2c 9d 00 81 00 	movl   $0x0,0x81009d2c
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 c0 84 00 81       	push   $0x810084c0
81000107:	e8 b5 50 00 00       	call   810051c1 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 c6 84 00 81       	push   $0x810084c6
81000117:	e8 a5 50 00 00       	call   810051c1 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 d8 84 00 81       	push   $0x810084d8
81000127:	e8 95 50 00 00       	call   810051c1 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 28 9d 00 81       	mov    0x81009d28,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 4c 0d 00 00       	call   81000e93 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 28 9d 00 81       	mov    0x81009d28,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 28 9d 00 81    	mov    0x81009d28,%ebx
8100015e:	e8 52 35 00 00       	call   810036b5 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 f8 84 00 81       	push   $0x810084f8
8100016f:	50                   	push   %eax
81000170:	e8 0d 18 00 00       	call   81001982 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 17 85 00 81       	push   $0x81008517
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 d3 33 00 00       	call   81003569 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 04 35 00 00       	call   810036b5 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 1c 85 00 81       	push   $0x8100851c
810001be:	e8 9d 26 00 00       	call   81002860 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 2c 9d 00 81       	mov    0x81009d2c,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 d9 34 00 00       	call   810036b5 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 4f 85 00 81       	push   $0x8100854f
810001e9:	e8 72 26 00 00       	call   81002860 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 2c 9d 00 81       	mov    0x81009d2c,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 9f 4f 00 00       	call   810051c1 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 7c 0c 00 00       	call   81000ec7 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 6b 85 00 81       	push   $0x8100856b
81000259:	e8 1f 0b 00 00       	call   81000d7d <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 70 85 00 81       	push   $0x81008570
81000272:	e8 4a 4f 00 00       	call   810051c1 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 81 85 00 81       	push   $0x81008581
810002ac:	e8 05 4e 00 00       	call   810050b6 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 26 0b 00 00       	call   81000de5 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 4f 0b 00 00       	call   81000e25 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 2c 9d 00 81 00 	movl   $0x0,0x81009d2c
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 c0 84 00 81       	push   $0x810084c0
81000321:	e8 9b 4e 00 00       	call   810051c1 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 8b 85 00 81       	push   $0x8100858b
81000331:	e8 8b 4e 00 00       	call   810051c1 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 9e 85 00 81       	push   $0x8100859e
81000341:	e8 7b 4e 00 00       	call   810051c1 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 f7 01 00 00       	jmp    8100054a <do_less+0x26a>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 28 9d 00 81       	mov    0x81009d28,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d 28 9d 00 81    	mov    0x81009d28,%ebx
8100036b:	e8 45 33 00 00       	call   810036b5 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 f8 84 00 81       	push   $0x810084f8
8100037c:	50                   	push   %eax
8100037d:	e8 00 16 00 00       	call   81001982 <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 bb 01 00 00       	jmp    8100054a <do_less+0x26a>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 b5 85 00 81       	push   $0x810085b5
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 c6 31 00 00       	call   81003569 <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 2c 9d 00 81       	mov    0x81009d2c,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 f3 32 00 00       	call   810036b5 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 b8 85 00 81       	push   $0x810085b8
810003cf:	e8 8c 24 00 00       	call   81002860 <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 69 01 00 00       	jmp    8100054a <do_less+0x26a>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 2c 9d 00 81       	mov    0x81009d2c,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 d1 85 00 81       	push   $0x810085d1
810003fc:	50                   	push   %eax
810003fd:	e8 38 15 00 00       	call   8100193a <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 2c 9d 00 81       	mov    0x81009d2c,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 8f 32 00 00       	call   810036b5 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 d4 85 00 81       	push   $0x810085d4
81000432:	50                   	push   %eax
81000433:	e8 4a 15 00 00       	call   81001982 <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 05 01 00 00       	jmp    8100054a <do_less+0x26a>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 e7 33 00 00       	call   8100383f <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2d                	jne    81000491 <do_less+0x1b1>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 50 4d 00 00       	call   810051c1 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 bf 0f 00 00       	call   81001444 <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	e9 98 00 00 00       	jmp    81000529 <do_less+0x249>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
81000491:	e8 1f 32 00 00       	call   810036b5 <__getreent>
81000496:	8b 40 04             	mov    0x4(%eax),%eax
81000499:	6a 00                	push   $0x0
8100049b:	6a 02                	push   $0x2
8100049d:	6a 00                	push   $0x0
8100049f:	50                   	push   %eax
810004a0:	e8 3d 51 00 00       	call   810055e2 <setvbuf>
810004a5:	83 c4 10             	add    $0x10,%esp
    //关闭TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 0, 0);
810004a8:	6a 00                	push   $0x0
810004aa:	6a 00                	push   $0x0
810004ac:	6a 01                	push   $0x1
810004ae:	6a 00                	push   $0x0
810004b0:	e8 a5 09 00 00       	call   81000e5a <ioctl>
810004b5:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004b8:	83 ec 04             	sub    $0x4,%esp
810004bb:	ff 75 ec             	push   -0x14(%ebp)
810004be:	ff 75 e8             	push   -0x18(%ebp)
810004c1:	ff 75 e4             	push   -0x1c(%ebp)
810004c4:	e8 7b 0f 00 00       	call   81001444 <fgets>
810004c9:	83 c4 10             	add    $0x10,%esp
810004cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004d3:	74 26                	je     810004fb <do_less+0x21b>
        break;
      }

      puts(buf);
810004d5:	83 ec 0c             	sub    $0xc,%esp
810004d8:	ff 75 e4             	push   -0x1c(%ebp)
810004db:	e8 e1 4c 00 00       	call   810051c1 <puts>
810004e0:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != 'n') {
810004e3:	eb 06                	jmp    810004eb <do_less+0x20b>
        if (key == 'q') {
810004e5:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004e9:	74 13                	je     810004fe <do_less+0x21e>
      while ((key = getchar()) != 'n') {
810004eb:	e8 b2 23 00 00       	call   810028a2 <getchar>
810004f0:	88 45 df             	mov    %al,-0x21(%ebp)
810004f3:	80 7d df 6e          	cmpb   $0x6e,-0x21(%ebp)
810004f7:	75 ec                	jne    810004e5 <do_less+0x205>
    while (1) {
810004f9:	eb bd                	jmp    810004b8 <do_less+0x1d8>
        break;
810004fb:	90                   	nop
810004fc:	eb 01                	jmp    810004ff <do_less+0x21f>
          goto less_quit;
810004fe:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ff:	e8 b1 31 00 00       	call   810036b5 <__getreent>
81000504:	8b 40 04             	mov    0x4(%eax),%eax
81000507:	68 00 04 00 00       	push   $0x400
8100050c:	6a 01                	push   $0x1
8100050e:	6a 00                	push   $0x0
81000510:	50                   	push   %eax
81000511:	e8 cc 50 00 00       	call   810055e2 <setvbuf>
81000516:	83 c4 10             	add    $0x10,%esp
    //打开TTY设备回显
    ioctl(0, TTY_CMD_ECHO, 1, 0);
81000519:	6a 00                	push   $0x0
8100051b:	6a 01                	push   $0x1
8100051d:	6a 01                	push   $0x1
8100051f:	6a 00                	push   $0x0
81000521:	e8 34 09 00 00       	call   81000e5a <ioctl>
81000526:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000529:	83 ec 0c             	sub    $0xc,%esp
8100052c:	ff 75 e4             	push   -0x1c(%ebp)
8100052f:	e8 27 33 00 00       	call   8100385b <free>
81000534:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000537:	83 ec 0c             	sub    $0xc,%esp
8100053a:	ff 75 ec             	push   -0x14(%ebp)
8100053d:	e8 d0 0a 00 00       	call   81001012 <fclose>
81000542:	83 c4 10             	add    $0x10,%esp
  return 0;
81000545:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100054a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100054d:	c9                   	leave  
8100054e:	c3                   	ret    

8100054f <do_cp>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_cp(int argc, const char **argv) {
8100054f:	55                   	push   %ebp
81000550:	89 e5                	mov    %esp,%ebp
81000552:	83 ec 18             	sub    $0x18,%esp
  if (argc < 3) {
81000555:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
81000559:	7f 24                	jg     8100057f <do_cp+0x30>
    fprintf(stderr, "no [from] or no [to]\n");
8100055b:	e8 55 31 00 00       	call   810036b5 <__getreent>
81000560:	8b 40 0c             	mov    0xc(%eax),%eax
81000563:	50                   	push   %eax
81000564:	6a 15                	push   $0x15
81000566:	6a 01                	push   $0x1
81000568:	68 f3 85 00 81       	push   $0x810085f3
8100056d:	e8 ee 22 00 00       	call   81002860 <fwrite>
81000572:	83 c4 10             	add    $0x10,%esp
    return -1;
81000575:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100057a:	e9 e3 00 00 00       	jmp    81000662 <do_cp+0x113>
  }

  FILE *from, *to;
  from = fopen(argv[1], "rb");
8100057f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000582:	83 c0 04             	add    $0x4,%eax
81000585:	8b 00                	mov    (%eax),%eax
81000587:	83 ec 08             	sub    $0x8,%esp
8100058a:	68 09 86 00 81       	push   $0x81008609
8100058f:	50                   	push   %eax
81000590:	e8 a5 13 00 00       	call   8100193a <fopen>
81000595:	83 c4 10             	add    $0x10,%esp
81000598:	89 45 f4             	mov    %eax,-0xc(%ebp)
  from = fopen(argv[2], "wb");
8100059b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100059e:	83 c0 08             	add    $0x8,%eax
810005a1:	8b 00                	mov    (%eax),%eax
810005a3:	83 ec 08             	sub    $0x8,%esp
810005a6:	68 0c 86 00 81       	push   $0x8100860c
810005ab:	50                   	push   %eax
810005ac:	e8 89 13 00 00       	call   8100193a <fopen>
810005b1:	83 c4 10             	add    $0x10,%esp
810005b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (!from || !to) {
810005b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005bb:	74 06                	je     810005c3 <do_cp+0x74>
810005bd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005c1:	75 1c                	jne    810005df <do_cp+0x90>
    fprintf(stderr, "open file failed\n");
810005c3:	e8 ed 30 00 00       	call   810036b5 <__getreent>
810005c8:	8b 40 0c             	mov    0xc(%eax),%eax
810005cb:	50                   	push   %eax
810005cc:	6a 11                	push   $0x11
810005ce:	6a 01                	push   $0x1
810005d0:	68 0f 86 00 81       	push   $0x8100860f
810005d5:	e8 86 22 00 00       	call   81002860 <fwrite>
810005da:	83 c4 10             	add    $0x10,%esp
    goto  cp_failed;
810005dd:	eb 56                	jmp    81000635 <do_cp+0xe6>
  }

  char *buf = (char *)malloc(255);
810005df:	83 ec 0c             	sub    $0xc,%esp
810005e2:	68 ff 00 00 00       	push   $0xff
810005e7:	e8 53 32 00 00       	call   8100383f <malloc>
810005ec:	83 c4 10             	add    $0x10,%esp
810005ef:	89 45 ec             	mov    %eax,-0x14(%ebp)
  int size;
  while ((size = fread(buf, 1, 255, from)) > 0) {
810005f2:	eb 15                	jmp    81000609 <do_cp+0xba>
    fwrite(buf, 1, 255, to);
810005f4:	ff 75 f0             	push   -0x10(%ebp)
810005f7:	68 ff 00 00 00       	push   $0xff
810005fc:	6a 01                	push   $0x1
810005fe:	ff 75 ec             	push   -0x14(%ebp)
81000601:	e8 5a 22 00 00       	call   81002860 <fwrite>
81000606:	83 c4 10             	add    $0x10,%esp
  while ((size = fread(buf, 1, 255, from)) > 0) {
81000609:	ff 75 f4             	push   -0xc(%ebp)
8100060c:	68 ff 00 00 00       	push   $0xff
81000611:	6a 01                	push   $0x1
81000613:	ff 75 ec             	push   -0x14(%ebp)
81000616:	e8 08 16 00 00       	call   81001c23 <fread>
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000621:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000625:	7f cd                	jg     810005f4 <do_cp+0xa5>
  }
  free(buf);
81000627:	83 ec 0c             	sub    $0xc,%esp
8100062a:	ff 75 ec             	push   -0x14(%ebp)
8100062d:	e8 29 32 00 00       	call   8100385b <free>
81000632:	83 c4 10             	add    $0x10,%esp

cp_failed:
  if (from) {
81000635:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000639:	74 0e                	je     81000649 <do_cp+0xfa>
    fclose(from);
8100063b:	83 ec 0c             	sub    $0xc,%esp
8100063e:	ff 75 f4             	push   -0xc(%ebp)
81000641:	e8 cc 09 00 00       	call   81001012 <fclose>
81000646:	83 c4 10             	add    $0x10,%esp
  }

  if (to) {
81000649:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100064d:	74 0e                	je     8100065d <do_cp+0x10e>
    fclose(to);
8100064f:	83 ec 0c             	sub    $0xc,%esp
81000652:	ff 75 f0             	push   -0x10(%ebp)
81000655:	e8 b8 09 00 00       	call   81001012 <fclose>
8100065a:	83 c4 10             	add    $0x10,%esp
  }

  return 0;
8100065d:	b8 00 00 00 00       	mov    $0x0,%eax

}
81000662:	c9                   	leave  
81000663:	c3                   	ret    

81000664 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
81000664:	55                   	push   %ebp
81000665:	89 e5                	mov    %esp,%ebp
81000667:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
8100066a:	a1 00 8c 00 81       	mov    0x81008c00,%eax
8100066f:	a3 08 9c 00 81       	mov    %eax,0x81009c08
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
81000674:	83 ec 04             	sub    $0x4,%esp
81000677:	68 00 04 00 00       	push   $0x400
8100067c:	6a 00                	push   $0x0
8100067e:	68 00 98 00 81       	push   $0x81009800
81000683:	e8 d8 3d 00 00       	call   81004460 <memset>
81000688:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
8100068b:	c7 05 00 9c 00 81 e0 	movl   $0x810086e0,0x81009c00
81000692:	86 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000695:	b8 34 87 00 81       	mov    $0x81008734,%eax
8100069a:	a3 04 9c 00 81       	mov    %eax,0x81009c04
}
8100069f:	90                   	nop
810006a0:	c9                   	leave  
810006a1:	c3                   	ret    

810006a2 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
810006a2:	55                   	push   %ebp
810006a3:	89 e5                	mov    %esp,%ebp
810006a5:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
810006a8:	a1 08 9c 00 81       	mov    0x81009c08,%eax
810006ad:	83 ec 08             	sub    $0x8,%esp
810006b0:	50                   	push   %eax
810006b1:	68 b6 84 00 81       	push   $0x810084b6
810006b6:	e8 fb 49 00 00       	call   810050b6 <iprintf>
810006bb:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810006be:	e8 f2 2f 00 00       	call   810036b5 <__getreent>
810006c3:	8b 40 08             	mov    0x8(%eax),%eax
810006c6:	83 ec 0c             	sub    $0xc,%esp
810006c9:	50                   	push   %eax
810006ca:	e8 de 0b 00 00       	call   810012ad <fflush>
810006cf:	83 c4 10             	add    $0x10,%esp
}
810006d2:	90                   	nop
810006d3:	c9                   	leave  
810006d4:	c3                   	ret    

810006d5 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810006d5:	55                   	push   %ebp
810006d6:	89 e5                	mov    %esp,%ebp
810006d8:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810006db:	a1 00 9c 00 81       	mov    0x81009c00,%eax
810006e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006e3:	eb 22                	jmp    81000707 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810006e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e8:	8b 00                	mov    (%eax),%eax
810006ea:	83 ec 08             	sub    $0x8,%esp
810006ed:	ff 75 08             	push   0x8(%ebp)
810006f0:	50                   	push   %eax
810006f1:	e8 c6 53 00 00       	call   81005abc <strcmp>
810006f6:	83 c4 10             	add    $0x10,%esp
810006f9:	85 c0                	test   %eax,%eax
810006fb:	75 05                	jne    81000702 <find_builtin+0x2d>
      continue;
    }
    return cmd;
810006fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000700:	eb 14                	jmp    81000716 <find_builtin+0x41>
      continue;
81000702:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000703:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000707:	a1 04 9c 00 81       	mov    0x81009c04,%eax
8100070c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100070f:	72 d4                	jb     810006e5 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
81000711:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000716:	c9                   	leave  
81000717:	c3                   	ret    

81000718 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000718:	55                   	push   %ebp
81000719:	89 e5                	mov    %esp,%ebp
8100071b:	53                   	push   %ebx
8100071c:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100071f:	8b 45 08             	mov    0x8(%ebp),%eax
81000722:	8b 40 08             	mov    0x8(%eax),%eax
81000725:	83 ec 08             	sub    $0x8,%esp
81000728:	ff 75 10             	push   0x10(%ebp)
8100072b:	ff 75 0c             	push   0xc(%ebp)
8100072e:	ff d0                	call   *%eax
81000730:	83 c4 10             	add    $0x10,%esp
81000733:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
81000736:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100073a:	79 1f                	jns    8100075b <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
8100073c:	8b 45 08             	mov    0x8(%ebp),%eax
8100073f:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
81000741:	e8 6f 2f 00 00       	call   810036b5 <__getreent>
81000746:	8b 40 0c             	mov    0xc(%eax),%eax
81000749:	ff 75 f4             	push   -0xc(%ebp)
8100074c:	53                   	push   %ebx
8100074d:	68 34 87 00 81       	push   $0x81008734
81000752:	50                   	push   %eax
81000753:	e8 2a 12 00 00       	call   81001982 <fiprintf>
81000758:	83 c4 10             	add    $0x10,%esp
  }
}
8100075b:	90                   	nop
8100075c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100075f:	c9                   	leave  
81000760:	c3                   	ret    

81000761 <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
81000761:	55                   	push   %ebp
81000762:	89 e5                	mov    %esp,%ebp
81000764:	53                   	push   %ebx
81000765:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
81000768:	e8 11 04 00 00       	call   81000b7e <fork>
8100076d:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (pid < 0) {
81000770:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000774:	79 21                	jns    81000797 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
81000776:	e8 3a 2f 00 00       	call   810036b5 <__getreent>
8100077b:	8b 40 0c             	mov    0xc(%eax),%eax
8100077e:	83 ec 04             	sub    $0x4,%esp
81000781:	ff 75 08             	push   0x8(%ebp)
81000784:	68 4c 87 00 81       	push   $0x8100874c
81000789:	50                   	push   %eax
8100078a:	e8 f3 11 00 00       	call   81001982 <fiprintf>
8100078f:	83 c4 10             	add    $0x10,%esp
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
    } else {
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
    }
  }
}
81000792:	e9 a9 00 00 00       	jmp    81000840 <run_exec_file+0xdf>
  } else if (pid == 0) {
81000797:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100079b:	75 42                	jne    810007df <run_exec_file+0x7e>
    int err = execve(path, (char * const *)argv, (char *const *) 0);
8100079d:	83 ec 04             	sub    $0x4,%esp
810007a0:	6a 00                	push   $0x0
810007a2:	ff 75 10             	push   0x10(%ebp)
810007a5:	ff 75 08             	push   0x8(%ebp)
810007a8:	e8 ec 03 00 00       	call   81000b99 <execve>
810007ad:	83 c4 10             	add    $0x10,%esp
810007b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (err < 0) {
810007b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810007b7:	79 1c                	jns    810007d5 <run_exec_file+0x74>
      fprintf(stderr, "exec failed: %s\n", path);
810007b9:	e8 f7 2e 00 00       	call   810036b5 <__getreent>
810007be:	8b 40 0c             	mov    0xc(%eax),%eax
810007c1:	83 ec 04             	sub    $0x4,%esp
810007c4:	ff 75 08             	push   0x8(%ebp)
810007c7:	68 66 87 00 81       	push   $0x81008766
810007cc:	50                   	push   %eax
810007cd:	e8 b0 11 00 00       	call   81001982 <fiprintf>
810007d2:	83 c4 10             	add    $0x10,%esp
    exit(-1);
810007d5:	83 ec 0c             	sub    $0xc,%esp
810007d8:	6a ff                	push   $0xffffffff
810007da:	e8 e8 06 00 00       	call   81000ec7 <exit>
    int cpid = wait(&status);
810007df:	83 ec 0c             	sub    $0xc,%esp
810007e2:	8d 45 e8             	lea    -0x18(%ebp),%eax
810007e5:	50                   	push   %eax
810007e6:	e8 71 05 00 00       	call   81000d5c <wait>
810007eb:	83 c4 10             	add    $0x10,%esp
810007ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (status != 0) {
810007f1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810007f4:	85 c0                	test   %eax,%eax
810007f6:	74 25                	je     8100081d <run_exec_file+0xbc>
      fprintf(stderr, ESC_COLOR_ERROR"process %s exception result: %d, pid=%d\n"ESC_COLOR_DEFAULT, path, status, pid);
810007f8:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810007fb:	e8 b5 2e 00 00       	call   810036b5 <__getreent>
81000800:	8b 40 0c             	mov    0xc(%eax),%eax
81000803:	83 ec 0c             	sub    $0xc,%esp
81000806:	ff 75 f4             	push   -0xc(%ebp)
81000809:	53                   	push   %ebx
8100080a:	ff 75 08             	push   0x8(%ebp)
8100080d:	68 78 87 00 81       	push   $0x81008778
81000812:	50                   	push   %eax
81000813:	e8 6a 11 00 00       	call   81001982 <fiprintf>
81000818:	83 c4 20             	add    $0x20,%esp
}
8100081b:	eb 23                	jmp    81000840 <run_exec_file+0xdf>
      fprintf(stderr, "process %s exit result: %d, pid=%d\n", path, status, pid);
8100081d:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000820:	e8 90 2e 00 00       	call   810036b5 <__getreent>
81000825:	8b 40 0c             	mov    0xc(%eax),%eax
81000828:	83 ec 0c             	sub    $0xc,%esp
8100082b:	ff 75 f4             	push   -0xc(%ebp)
8100082e:	53                   	push   %ebx
8100082f:	ff 75 08             	push   0x8(%ebp)
81000832:	68 ac 87 00 81       	push   $0x810087ac
81000837:	50                   	push   %eax
81000838:	e8 45 11 00 00       	call   81001982 <fiprintf>
8100083d:	83 c4 20             	add    $0x20,%esp
}
81000840:	90                   	nop
81000841:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000844:	c9                   	leave  
81000845:	c3                   	ret    

81000846 <find_exec_path>:
 * @brief 根据文件名判断文件是否存在
 * 
 * @param file_name 
 * @return const char* 
 */
static const char* find_exec_path(const char *file_name) {
81000846:	55                   	push   %ebp
81000847:	89 e5                	mov    %esp,%ebp
81000849:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
8100084c:	83 ec 08             	sub    $0x8,%esp
8100084f:	6a 00                	push   $0x0
81000851:	ff 75 08             	push   0x8(%ebp)
81000854:	e8 88 03 00 00       	call   81000be1 <open>
81000859:	83 c4 10             	add    $0x10,%esp
8100085c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
8100085f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000863:	79 4f                	jns    810008b4 <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
81000865:	83 ec 04             	sub    $0x4,%esp
81000868:	ff 75 08             	push   0x8(%ebp)
8100086b:	68 d0 87 00 81       	push   $0x810087d0
81000870:	68 20 9c 00 81       	push   $0x81009c20
81000875:	e8 c9 4f 00 00       	call   81005843 <siprintf>
8100087a:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
8100087d:	83 ec 08             	sub    $0x8,%esp
81000880:	6a 00                	push   $0x0
81000882:	68 20 9c 00 81       	push   $0x81009c20
81000887:	e8 55 03 00 00       	call   81000be1 <open>
8100088c:	83 c4 10             	add    $0x10,%esp
8100088f:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
81000892:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000896:	79 07                	jns    8100089f <find_exec_path+0x59>
            return (const char * )0;
81000898:	b8 00 00 00 00       	mov    $0x0,%eax
8100089d:	eb 26                	jmp    810008c5 <find_exec_path+0x7f>
        }
        close(fd);
8100089f:	83 ec 0c             	sub    $0xc,%esp
810008a2:	ff 75 f4             	push   -0xc(%ebp)
810008a5:	e8 b8 03 00 00       	call   81000c62 <close>
810008aa:	83 c4 10             	add    $0x10,%esp
        return path;
810008ad:	b8 20 9c 00 81       	mov    $0x81009c20,%eax
810008b2:	eb 11                	jmp    810008c5 <find_exec_path+0x7f>
    } else {
        close(fd);
810008b4:	83 ec 0c             	sub    $0xc,%esp
810008b7:	ff 75 f4             	push   -0xc(%ebp)
810008ba:	e8 a3 03 00 00       	call   81000c62 <close>
810008bf:	83 c4 10             	add    $0x10,%esp
        return file_name;
810008c2:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
810008c5:	c9                   	leave  
810008c6:	c3                   	ret    

810008c7 <main>:

int main(int argc, char **argv) {
810008c7:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810008cb:	83 e4 f0             	and    $0xfffffff0,%esp
810008ce:	ff 71 fc             	push   -0x4(%ecx)
810008d1:	55                   	push   %ebp
810008d2:	89 e5                	mov    %esp,%ebp
810008d4:	51                   	push   %ecx
810008d5:	83 ec 54             	sub    $0x54,%esp
810008d8:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
810008da:	8b 40 04             	mov    0x4(%eax),%eax
810008dd:	8b 00                	mov    (%eax),%eax
810008df:	83 ec 08             	sub    $0x8,%esp
810008e2:	6a 02                	push   $0x2
810008e4:	50                   	push   %eax
810008e5:	e8 f7 02 00 00       	call   81000be1 <open>
810008ea:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
810008ed:	83 ec 0c             	sub    $0xc,%esp
810008f0:	6a 00                	push   $0x0
810008f2:	e8 22 04 00 00       	call   81000d19 <dup>
810008f7:	83 c4 10             	add    $0x10,%esp
  dup(0);
810008fa:	83 ec 0c             	sub    $0xc,%esp
810008fd:	6a 00                	push   $0x0
810008ff:	e8 15 04 00 00       	call   81000d19 <dup>
81000904:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000907:	e8 58 fd ff ff       	call   81000664 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100090c:	e8 91 fd ff ff       	call   810006a2 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000911:	e8 9f 2d 00 00       	call   810036b5 <__getreent>
81000916:	8b 40 04             	mov    0x4(%eax),%eax
81000919:	83 ec 04             	sub    $0x4,%esp
8100091c:	50                   	push   %eax
8100091d:	68 00 04 00 00       	push   $0x400
81000922:	68 00 98 00 81       	push   $0x81009800
81000927:	e8 18 0b 00 00       	call   81001444 <fgets>
8100092c:	83 c4 10             	add    $0x10,%esp
8100092f:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000932:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000936:	0f 84 2f 01 00 00    	je     81000a6b <main+0x1a4>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
8100093c:	83 ec 08             	sub    $0x8,%esp
8100093f:	6a 0a                	push   $0xa
81000941:	68 00 98 00 81       	push   $0x81009800
81000946:	e8 75 50 00 00       	call   810059c0 <strchr>
8100094b:	83 c4 10             	add    $0x10,%esp
8100094e:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000951:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000955:	74 06                	je     8100095d <main+0x96>
      *cr = '\0';
81000957:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100095a:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
8100095d:	83 ec 08             	sub    $0x8,%esp
81000960:	6a 0d                	push   $0xd
81000962:	68 00 98 00 81       	push   $0x81009800
81000967:	e8 54 50 00 00       	call   810059c0 <strchr>
8100096c:	83 c4 10             	add    $0x10,%esp
8100096f:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000972:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000976:	74 06                	je     8100097e <main+0xb7>
      *cr = '\0';
81000978:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100097b:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
8100097e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000985:	83 ec 04             	sub    $0x4,%esp
81000988:	6a 28                	push   $0x28
8100098a:	6a 00                	push   $0x0
8100098c:	8d 45 b4             	lea    -0x4c(%ebp),%eax
8100098f:	50                   	push   %eax
81000990:	e8 cb 3a 00 00       	call   81004460 <memset>
81000995:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
81000998:	c7 45 e4 d7 87 00 81 	movl   $0x810087d7,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
8100099f:	83 ec 08             	sub    $0x8,%esp
810009a2:	ff 75 e4             	push   -0x1c(%ebp)
810009a5:	68 00 98 00 81       	push   $0x81009800
810009aa:	e8 3a 52 00 00       	call   81005be9 <strtok>
810009af:	83 c4 10             	add    $0x10,%esp
810009b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810009b5:	eb 23                	jmp    810009da <main+0x113>
      argv[argc++] = token;
810009b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810009ba:	8d 50 01             	lea    0x1(%eax),%edx
810009bd:	89 55 f4             	mov    %edx,-0xc(%ebp)
810009c0:	8b 55 f0             	mov    -0x10(%ebp),%edx
810009c3:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
810009c7:	83 ec 08             	sub    $0x8,%esp
810009ca:	ff 75 e4             	push   -0x1c(%ebp)
810009cd:	6a 00                	push   $0x0
810009cf:	e8 15 52 00 00       	call   81005be9 <strtok>
810009d4:	83 c4 10             	add    $0x10,%esp
810009d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
810009da:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810009de:	75 d7                	jne    810009b7 <main+0xf0>
    }

    if (argc == 0) {
810009e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810009e4:	0f 84 87 00 00 00    	je     81000a71 <main+0x1aa>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
810009ea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810009ed:	83 ec 0c             	sub    $0xc,%esp
810009f0:	50                   	push   %eax
810009f1:	e8 df fc ff ff       	call   810006d5 <find_builtin>
810009f6:	83 c4 10             	add    $0x10,%esp
810009f9:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
810009fc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a00:	74 17                	je     81000a19 <main+0x152>
      run_builtin(cmd, argc, argv);
81000a02:	83 ec 04             	sub    $0x4,%esp
81000a05:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a08:	50                   	push   %eax
81000a09:	ff 75 f4             	push   -0xc(%ebp)
81000a0c:	ff 75 e0             	push   -0x20(%ebp)
81000a0f:	e8 04 fd ff ff       	call   81000718 <run_builtin>
81000a14:	83 c4 10             	add    $0x10,%esp
      continue;
81000a17:	eb 59                	jmp    81000a72 <main+0x1ab>
    }



    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    const char *path = find_exec_path(argv[0]);
81000a19:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a1c:	83 ec 0c             	sub    $0xc,%esp
81000a1f:	50                   	push   %eax
81000a20:	e8 21 fe ff ff       	call   81000846 <find_exec_path>
81000a25:	83 c4 10             	add    $0x10,%esp
81000a28:	89 45 dc             	mov    %eax,-0x24(%ebp)
    if (path) {
81000a2b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a2f:	74 17                	je     81000a48 <main+0x181>
      run_exec_file(path, argc, argv);
81000a31:	83 ec 04             	sub    $0x4,%esp
81000a34:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a37:	50                   	push   %eax
81000a38:	ff 75 f4             	push   -0xc(%ebp)
81000a3b:	ff 75 dc             	push   -0x24(%ebp)
81000a3e:	e8 1e fd ff ff       	call   81000761 <run_exec_file>
81000a43:	83 c4 10             	add    $0x10,%esp
      continue;
81000a46:	eb 2a                	jmp    81000a72 <main+0x1ab>
    } else {

      fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000a48:	e8 68 2c 00 00       	call   810036b5 <__getreent>
81000a4d:	8b 40 0c             	mov    0xc(%eax),%eax
81000a50:	83 ec 04             	sub    $0x4,%esp
81000a53:	68 00 98 00 81       	push   $0x81009800
81000a58:	68 dc 87 00 81       	push   $0x810087dc
81000a5d:	50                   	push   %eax
81000a5e:	e8 1f 0f 00 00       	call   81001982 <fiprintf>
81000a63:	83 c4 10             	add    $0x10,%esp
81000a66:	e9 a1 fe ff ff       	jmp    8100090c <main+0x45>
      continue;
81000a6b:	90                   	nop
81000a6c:	e9 9b fe ff ff       	jmp    8100090c <main+0x45>
      continue;
81000a71:	90                   	nop
  for (;;) {
81000a72:	e9 95 fe ff ff       	jmp    8100090c <main+0x45>

81000a77 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000a77:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000a7a:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000a7c:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000a7e:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000a80:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000a82:	e9 00 00 00 00       	jmp    81000a87 <cstart>

81000a87 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000a87:	55                   	push   %ebp
81000a88:	89 e5                	mov    %esp,%ebp
81000a8a:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000a8d:	c7 45 f4 00 96 00 81 	movl   $0x81009600,-0xc(%ebp)
    while (start < __bss_end__) {
81000a94:	eb 0c                	jmp    81000aa2 <cstart+0x1b>
        *(start++) = 0;
81000a96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a99:	8d 50 01             	lea    0x1(%eax),%edx
81000a9c:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a9f:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000aa2:	81 7d f4 a0 9d 00 81 	cmpl   $0x81009da0,-0xc(%ebp)
81000aa9:	72 eb                	jb     81000a96 <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000aab:	83 ec 08             	sub    $0x8,%esp
81000aae:	ff 75 0c             	push   0xc(%ebp)
81000ab1:	ff 75 08             	push   0x8(%ebp)
81000ab4:	e8 0e fe ff ff       	call   810008c7 <main>
81000ab9:	83 c4 10             	add    $0x10,%esp
81000abc:	83 ec 0c             	sub    $0xc,%esp
81000abf:	50                   	push   %eax
81000ac0:	e8 02 04 00 00       	call   81000ec7 <exit>

81000ac5 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
81000ac5:	55                   	push   %ebp
81000ac6:	89 e5                	mov    %esp,%ebp
81000ac8:	57                   	push   %edi
81000ac9:	56                   	push   %esi
81000aca:	53                   	push   %ebx
81000acb:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000ace:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000ad5:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000adc:	8b 45 08             	mov    0x8(%ebp),%eax
81000adf:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000ae2:	8b 55 08             	mov    0x8(%ebp),%edx
81000ae5:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
81000ae8:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000aeb:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000aee:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000af1:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000af4:	8b 75 08             	mov    0x8(%ebp),%esi
81000af7:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
81000af9:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000afc:	50                   	push   %eax
81000afd:	52                   	push   %edx
81000afe:	51                   	push   %ecx
81000aff:	53                   	push   %ebx
81000b00:	56                   	push   %esi
81000b01:	ff 1f                	lcall  *(%edi)
81000b03:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000b06:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b09:	83 c4 10             	add    $0x10,%esp
81000b0c:	5b                   	pop    %ebx
81000b0d:	5e                   	pop    %esi
81000b0e:	5f                   	pop    %edi
81000b0f:	5d                   	pop    %ebp
81000b10:	c3                   	ret    

81000b11 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000b11:	55                   	push   %ebp
81000b12:	89 e5                	mov    %esp,%ebp
81000b14:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000b17:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b1b:	7e 1b                	jle    81000b38 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000b1d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000b24:	8b 45 08             	mov    0x8(%ebp),%eax
81000b27:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000b2a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b2d:	50                   	push   %eax
81000b2e:	e8 92 ff ff ff       	call   81000ac5 <sys_call>
81000b33:	83 c4 04             	add    $0x4,%esp
81000b36:	eb 01                	jmp    81000b39 <msleep+0x28>
    if (ms <= 0) return;
81000b38:	90                   	nop

}
81000b39:	c9                   	leave  
81000b3a:	c3                   	ret    

81000b3b <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000b3b:	55                   	push   %ebp
81000b3c:	89 e5                	mov    %esp,%ebp
81000b3e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000b41:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000b48:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b4b:	50                   	push   %eax
81000b4c:	e8 74 ff ff ff       	call   81000ac5 <sys_call>
81000b51:	83 c4 04             	add    $0x4,%esp
}
81000b54:	c9                   	leave  
81000b55:	c3                   	ret    

81000b56 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000b56:	55                   	push   %ebp
81000b57:	89 e5                	mov    %esp,%ebp
81000b59:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000b5c:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000b63:	8b 45 08             	mov    0x8(%ebp),%eax
81000b66:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000b69:	8b 45 0c             	mov    0xc(%ebp),%eax
81000b6c:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000b6f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b72:	50                   	push   %eax
81000b73:	e8 4d ff ff ff       	call   81000ac5 <sys_call>
81000b78:	83 c4 04             	add    $0x4,%esp
}
81000b7b:	90                   	nop
81000b7c:	c9                   	leave  
81000b7d:	c3                   	ret    

81000b7e <fork>:

int fork (void) {
81000b7e:	55                   	push   %ebp
81000b7f:	89 e5                	mov    %esp,%ebp
81000b81:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000b84:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000b8b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b8e:	50                   	push   %eax
81000b8f:	e8 31 ff ff ff       	call   81000ac5 <sys_call>
81000b94:	83 c4 04             	add    $0x4,%esp
}
81000b97:	c9                   	leave  
81000b98:	c3                   	ret    

81000b99 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000b99:	55                   	push   %ebp
81000b9a:	89 e5                	mov    %esp,%ebp
81000b9c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000b9f:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000ba6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000bac:	8b 45 0c             	mov    0xc(%ebp),%eax
81000baf:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000bb2:	8b 45 10             	mov    0x10(%ebp),%eax
81000bb5:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000bb8:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bbb:	50                   	push   %eax
81000bbc:	e8 04 ff ff ff       	call   81000ac5 <sys_call>
81000bc1:	83 c4 04             	add    $0x4,%esp
}
81000bc4:	c9                   	leave  
81000bc5:	c3                   	ret    

81000bc6 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
81000bc6:	55                   	push   %ebp
81000bc7:	89 e5                	mov    %esp,%ebp
81000bc9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000bcc:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
81000bd3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bd6:	50                   	push   %eax
81000bd7:	e8 e9 fe ff ff       	call   81000ac5 <sys_call>
81000bdc:	83 c4 04             	add    $0x4,%esp
}
81000bdf:	c9                   	leave  
81000be0:	c3                   	ret    

81000be1 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000be1:	55                   	push   %ebp
81000be2:	89 e5                	mov    %esp,%ebp
81000be4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
81000be7:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000bee:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000bf4:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bf7:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000bfa:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bfd:	50                   	push   %eax
81000bfe:	e8 c2 fe ff ff       	call   81000ac5 <sys_call>
81000c03:	83 c4 04             	add    $0x4,%esp
}
81000c06:	c9                   	leave  
81000c07:	c3                   	ret    

81000c08 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000c08:	55                   	push   %ebp
81000c09:	89 e5                	mov    %esp,%ebp
81000c0b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000c0e:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000c15:	8b 45 08             	mov    0x8(%ebp),%eax
81000c18:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000c1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000c21:	8b 45 10             	mov    0x10(%ebp),%eax
81000c24:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000c27:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c2a:	50                   	push   %eax
81000c2b:	e8 95 fe ff ff       	call   81000ac5 <sys_call>
81000c30:	83 c4 04             	add    $0x4,%esp
}
81000c33:	c9                   	leave  
81000c34:	c3                   	ret    

81000c35 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000c35:	55                   	push   %ebp
81000c36:	89 e5                	mov    %esp,%ebp
81000c38:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000c3b:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000c42:	8b 45 08             	mov    0x8(%ebp),%eax
81000c45:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000c48:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000c4e:	8b 45 10             	mov    0x10(%ebp),%eax
81000c51:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000c54:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c57:	50                   	push   %eax
81000c58:	e8 68 fe ff ff       	call   81000ac5 <sys_call>
81000c5d:	83 c4 04             	add    $0x4,%esp
}
81000c60:	c9                   	leave  
81000c61:	c3                   	ret    

81000c62 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000c62:	55                   	push   %ebp
81000c63:	89 e5                	mov    %esp,%ebp
81000c65:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000c68:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000c6f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c72:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000c75:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c78:	50                   	push   %eax
81000c79:	e8 47 fe ff ff       	call   81000ac5 <sys_call>
81000c7e:	83 c4 04             	add    $0x4,%esp
}
81000c81:	c9                   	leave  
81000c82:	c3                   	ret    

81000c83 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000c83:	55                   	push   %ebp
81000c84:	89 e5                	mov    %esp,%ebp
81000c86:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000c89:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000c90:	8b 45 08             	mov    0x8(%ebp),%eax
81000c93:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000c96:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c99:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000c9c:	8b 45 10             	mov    0x10(%ebp),%eax
81000c9f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000ca2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ca5:	50                   	push   %eax
81000ca6:	e8 1a fe ff ff       	call   81000ac5 <sys_call>
81000cab:	83 c4 04             	add    $0x4,%esp
}
81000cae:	c9                   	leave  
81000caf:	c3                   	ret    

81000cb0 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000cb0:	55                   	push   %ebp
81000cb1:	89 e5                	mov    %esp,%ebp
81000cb3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000cb6:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000cbd:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000cc3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cc6:	50                   	push   %eax
81000cc7:	e8 f9 fd ff ff       	call   81000ac5 <sys_call>
81000ccc:	83 c4 04             	add    $0x4,%esp
}
81000ccf:	c9                   	leave  
81000cd0:	c3                   	ret    

81000cd1 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000cd1:	55                   	push   %ebp
81000cd2:	89 e5                	mov    %esp,%ebp
81000cd4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000cd7:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000cde:	8b 45 08             	mov    0x8(%ebp),%eax
81000ce1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000ce4:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ce7:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000cea:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ced:	50                   	push   %eax
81000cee:	e8 d2 fd ff ff       	call   81000ac5 <sys_call>
81000cf3:	83 c4 04             	add    $0x4,%esp
}
81000cf6:	c9                   	leave  
81000cf7:	c3                   	ret    

81000cf8 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000cf8:	55                   	push   %ebp
81000cf9:	89 e5                	mov    %esp,%ebp
81000cfb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000cfe:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = (int)incr;
81000d05:	8b 45 08             	mov    0x8(%ebp),%eax
81000d08:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000d0b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d0e:	50                   	push   %eax
81000d0f:	e8 b1 fd ff ff       	call   81000ac5 <sys_call>
81000d14:	83 c4 04             	add    $0x4,%esp
}
81000d17:	c9                   	leave  
81000d18:	c3                   	ret    

81000d19 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000d19:	55                   	push   %ebp
81000d1a:	89 e5                	mov    %esp,%ebp
81000d1c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000d1f:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000d26:	8b 45 08             	mov    0x8(%ebp),%eax
81000d29:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000d2c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d2f:	50                   	push   %eax
81000d30:	e8 90 fd ff ff       	call   81000ac5 <sys_call>
81000d35:	83 c4 04             	add    $0x4,%esp
}
81000d38:	c9                   	leave  
81000d39:	c3                   	ret    

81000d3a <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000d3a:	55                   	push   %ebp
81000d3b:	89 e5                	mov    %esp,%ebp
81000d3d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000d40:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000d47:	8b 45 08             	mov    0x8(%ebp),%eax
81000d4a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000d4d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d50:	50                   	push   %eax
81000d51:	e8 6f fd ff ff       	call   81000ac5 <sys_call>
81000d56:	83 c4 04             	add    $0x4,%esp
}
81000d59:	90                   	nop
81000d5a:	c9                   	leave  
81000d5b:	c3                   	ret    

81000d5c <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000d5c:	55                   	push   %ebp
81000d5d:	89 e5                	mov    %esp,%ebp
81000d5f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000d62:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000d69:	8b 45 08             	mov    0x8(%ebp),%eax
81000d6c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000d6f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d72:	50                   	push   %eax
81000d73:	e8 4d fd ff ff       	call   81000ac5 <sys_call>
81000d78:	83 c4 04             	add    $0x4,%esp
}
81000d7b:	c9                   	leave  
81000d7c:	c3                   	ret    

81000d7d <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000d7d:	55                   	push   %ebp
81000d7e:	89 e5                	mov    %esp,%ebp
81000d80:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000d83:	83 ec 0c             	sub    $0xc,%esp
81000d86:	6a 20                	push   $0x20
81000d88:	e8 b2 2a 00 00       	call   8100383f <malloc>
81000d8d:	83 c4 10             	add    $0x10,%esp
81000d90:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000d93:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d97:	75 07                	jne    81000da0 <opendir+0x23>
        return (DIR*)0;
81000d99:	b8 00 00 00 00       	mov    $0x0,%eax
81000d9e:	eb 43                	jmp    81000de3 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000da0:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000da7:	8b 45 08             	mov    0x8(%ebp),%eax
81000daa:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000dad:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000db0:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000db3:	83 ec 0c             	sub    $0xc,%esp
81000db6:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000db9:	50                   	push   %eax
81000dba:	e8 06 fd ff ff       	call   81000ac5 <sys_call>
81000dbf:	83 c4 10             	add    $0x10,%esp
81000dc2:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000dc5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000dc9:	79 15                	jns    81000de0 <opendir+0x63>
        free(dir);
81000dcb:	83 ec 0c             	sub    $0xc,%esp
81000dce:	ff 75 f4             	push   -0xc(%ebp)
81000dd1:	e8 85 2a 00 00       	call   8100385b <free>
81000dd6:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000dd9:	b8 00 00 00 00       	mov    $0x0,%eax
81000dde:	eb 03                	jmp    81000de3 <opendir+0x66>
    }

    return dir;    
81000de0:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000de3:	c9                   	leave  
81000de4:	c3                   	ret    

81000de5 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000de5:	55                   	push   %ebp
81000de6:	89 e5                	mov    %esp,%ebp
81000de8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000deb:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000df2:	8b 45 08             	mov    0x8(%ebp),%eax
81000df5:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000df8:	8b 45 08             	mov    0x8(%ebp),%eax
81000dfb:	83 c0 04             	add    $0x4,%eax
81000dfe:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000e01:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e04:	50                   	push   %eax
81000e05:	e8 bb fc ff ff       	call   81000ac5 <sys_call>
81000e0a:	83 c4 04             	add    $0x4,%esp
81000e0d:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000e10:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e14:	79 07                	jns    81000e1d <readdir+0x38>
        return (struct dirent*)0;
81000e16:	b8 00 00 00 00       	mov    $0x0,%eax
81000e1b:	eb 06                	jmp    81000e23 <readdir+0x3e>
    }

    return &dir->dirent;   
81000e1d:	8b 45 08             	mov    0x8(%ebp),%eax
81000e20:	83 c0 04             	add    $0x4,%eax
}
81000e23:	c9                   	leave  
81000e24:	c3                   	ret    

81000e25 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000e25:	55                   	push   %ebp
81000e26:	89 e5                	mov    %esp,%ebp
81000e28:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000e2b:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000e32:	8b 45 08             	mov    0x8(%ebp),%eax
81000e35:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000e38:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000e3b:	50                   	push   %eax
81000e3c:	e8 84 fc ff ff       	call   81000ac5 <sys_call>
81000e41:	83 c4 04             	add    $0x4,%esp
81000e44:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000e47:	83 ec 0c             	sub    $0xc,%esp
81000e4a:	ff 75 08             	push   0x8(%ebp)
81000e4d:	e8 09 2a 00 00       	call   8100385b <free>
81000e52:	83 c4 10             	add    $0x10,%esp

    return err;   
81000e55:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e58:	c9                   	leave  
81000e59:	c3                   	ret    

81000e5a <ioctl>:
 * @param cmd 
 * @param arg0 
 * @param arg1 
 * @return int 
 */
int ioctl(int file, int cmd, int arg0, int arg1) {
81000e5a:	55                   	push   %ebp
81000e5b:	89 e5                	mov    %esp,%ebp
81000e5d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000e60:	c7 45 e8 3a 00 00 00 	movl   $0x3a,-0x18(%ebp)
    args.arg0 = file;
81000e67:	8b 45 08             	mov    0x8(%ebp),%eax
81000e6a:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = cmd;
81000e6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e70:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg2 = arg0;
81000e73:	8b 45 10             	mov    0x10(%ebp),%eax
81000e76:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg3 = arg1;
81000e79:	8b 45 14             	mov    0x14(%ebp),%eax
81000e7c:	89 45 f8             	mov    %eax,-0x8(%ebp)

    int err = sys_call(&args);
81000e7f:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e82:	50                   	push   %eax
81000e83:	e8 3d fc ff ff       	call   81000ac5 <sys_call>
81000e88:	83 c4 04             	add    $0x4,%esp
81000e8b:	89 45 fc             	mov    %eax,-0x4(%ebp)

    return err;   
81000e8e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81000e91:	c9                   	leave  
81000e92:	c3                   	ret    

81000e93 <atoi>:
81000e93:	55                   	push   %ebp
81000e94:	89 e5                	mov    %esp,%ebp
81000e96:	83 ec 08             	sub    $0x8,%esp
81000e99:	83 ec 04             	sub    $0x4,%esp
81000e9c:	6a 0a                	push   $0xa
81000e9e:	6a 00                	push   $0x0
81000ea0:	ff 75 08             	push   0x8(%ebp)
81000ea3:	e8 7e 50 00 00       	call   81005f26 <strtol>
81000ea8:	83 c4 10             	add    $0x10,%esp
81000eab:	c9                   	leave  
81000eac:	c3                   	ret    

81000ead <_atoi_r>:
81000ead:	55                   	push   %ebp
81000eae:	89 e5                	mov    %esp,%ebp
81000eb0:	83 ec 08             	sub    $0x8,%esp
81000eb3:	6a 0a                	push   $0xa
81000eb5:	6a 00                	push   $0x0
81000eb7:	ff 75 0c             	push   0xc(%ebp)
81000eba:	ff 75 08             	push   0x8(%ebp)
81000ebd:	e8 1a 50 00 00       	call   81005edc <_strtol_r>
81000ec2:	83 c4 10             	add    $0x10,%esp
81000ec5:	c9                   	leave  
81000ec6:	c3                   	ret    

81000ec7 <exit>:
81000ec7:	55                   	push   %ebp
81000ec8:	89 e5                	mov    %esp,%ebp
81000eca:	83 ec 08             	sub    $0x8,%esp
81000ecd:	83 ec 08             	sub    $0x8,%esp
81000ed0:	6a 00                	push   $0x0
81000ed2:	ff 75 08             	push   0x8(%ebp)
81000ed5:	e8 49 53 00 00       	call   81006223 <__call_exitprocs>
81000eda:	83 c4 10             	add    $0x10,%esp
81000edd:	a1 84 88 00 81       	mov    0x81008884,%eax
81000ee2:	8b 40 3c             	mov    0x3c(%eax),%eax
81000ee5:	85 c0                	test   %eax,%eax
81000ee7:	74 17                	je     81000f00 <exit+0x39>
81000ee9:	a1 84 88 00 81       	mov    0x81008884,%eax
81000eee:	8b 40 3c             	mov    0x3c(%eax),%eax
81000ef1:	8b 15 84 88 00 81    	mov    0x81008884,%edx
81000ef7:	83 ec 0c             	sub    $0xc,%esp
81000efa:	52                   	push   %edx
81000efb:	ff d0                	call   *%eax
81000efd:	83 c4 10             	add    $0x10,%esp
81000f00:	83 ec 0c             	sub    $0xc,%esp
81000f03:	ff 75 08             	push   0x8(%ebp)
81000f06:	e8 2f fe ff ff       	call   81000d3a <_exit>

81000f0b <_fclose_r>:
81000f0b:	55                   	push   %ebp
81000f0c:	89 e5                	mov    %esp,%ebp
81000f0e:	53                   	push   %ebx
81000f0f:	83 ec 14             	sub    $0x14,%esp
81000f12:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000f15:	85 db                	test   %ebx,%ebx
81000f17:	75 0a                	jne    81000f23 <_fclose_r+0x18>
81000f19:	b8 00 00 00 00       	mov    $0x0,%eax
81000f1e:	e9 ea 00 00 00       	jmp    8100100d <_fclose_r+0x102>
81000f23:	8b 45 08             	mov    0x8(%ebp),%eax
81000f26:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f29:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000f2d:	74 18                	je     81000f47 <_fclose_r+0x3c>
81000f2f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f32:	8b 40 38             	mov    0x38(%eax),%eax
81000f35:	85 c0                	test   %eax,%eax
81000f37:	75 0e                	jne    81000f47 <_fclose_r+0x3c>
81000f39:	83 ec 0c             	sub    $0xc,%esp
81000f3c:	ff 75 f0             	push   -0x10(%ebp)
81000f3f:	e8 14 08 00 00       	call   81001758 <__sinit>
81000f44:	83 c4 10             	add    $0x10,%esp
81000f47:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f4b:	66 85 c0             	test   %ax,%ax
81000f4e:	75 0a                	jne    81000f5a <_fclose_r+0x4f>
81000f50:	b8 00 00 00 00       	mov    $0x0,%eax
81000f55:	e9 b3 00 00 00       	jmp    8100100d <_fclose_r+0x102>
81000f5a:	83 ec 08             	sub    $0x8,%esp
81000f5d:	53                   	push   %ebx
81000f5e:	ff 75 08             	push   0x8(%ebp)
81000f61:	e8 c9 00 00 00       	call   8100102f <__sflush_r>
81000f66:	83 c4 10             	add    $0x10,%esp
81000f69:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f6c:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000f6f:	85 c0                	test   %eax,%eax
81000f71:	74 1d                	je     81000f90 <_fclose_r+0x85>
81000f73:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000f76:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000f79:	83 ec 08             	sub    $0x8,%esp
81000f7c:	52                   	push   %edx
81000f7d:	ff 75 08             	push   0x8(%ebp)
81000f80:	ff d0                	call   *%eax
81000f82:	83 c4 10             	add    $0x10,%esp
81000f85:	85 c0                	test   %eax,%eax
81000f87:	79 07                	jns    81000f90 <_fclose_r+0x85>
81000f89:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000f90:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f94:	98                   	cwtl   
81000f95:	25 80 00 00 00       	and    $0x80,%eax
81000f9a:	85 c0                	test   %eax,%eax
81000f9c:	74 12                	je     81000fb0 <_fclose_r+0xa5>
81000f9e:	8b 43 10             	mov    0x10(%ebx),%eax
81000fa1:	83 ec 08             	sub    $0x8,%esp
81000fa4:	50                   	push   %eax
81000fa5:	ff 75 08             	push   0x8(%ebp)
81000fa8:	e8 9b 0c 00 00       	call   81001c48 <_free_r>
81000fad:	83 c4 10             	add    $0x10,%esp
81000fb0:	8b 43 30             	mov    0x30(%ebx),%eax
81000fb3:	85 c0                	test   %eax,%eax
81000fb5:	74 23                	je     81000fda <_fclose_r+0xcf>
81000fb7:	8b 53 30             	mov    0x30(%ebx),%edx
81000fba:	8d 43 40             	lea    0x40(%ebx),%eax
81000fbd:	39 c2                	cmp    %eax,%edx
81000fbf:	74 12                	je     81000fd3 <_fclose_r+0xc8>
81000fc1:	8b 43 30             	mov    0x30(%ebx),%eax
81000fc4:	83 ec 08             	sub    $0x8,%esp
81000fc7:	50                   	push   %eax
81000fc8:	ff 75 08             	push   0x8(%ebp)
81000fcb:	e8 78 0c 00 00       	call   81001c48 <_free_r>
81000fd0:	83 c4 10             	add    $0x10,%esp
81000fd3:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000fda:	8b 43 44             	mov    0x44(%ebx),%eax
81000fdd:	85 c0                	test   %eax,%eax
81000fdf:	74 19                	je     81000ffa <_fclose_r+0xef>
81000fe1:	8b 43 44             	mov    0x44(%ebx),%eax
81000fe4:	83 ec 08             	sub    $0x8,%esp
81000fe7:	50                   	push   %eax
81000fe8:	ff 75 08             	push   0x8(%ebp)
81000feb:	e8 58 0c 00 00       	call   81001c48 <_free_r>
81000ff0:	83 c4 10             	add    $0x10,%esp
81000ff3:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000ffa:	e8 f2 07 00 00       	call   810017f1 <__sfp_lock_acquire>
81000fff:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001005:	e8 ed 07 00 00       	call   810017f7 <__sfp_lock_release>
8100100a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001010:	c9                   	leave  
81001011:	c3                   	ret    

81001012 <fclose>:
81001012:	55                   	push   %ebp
81001013:	89 e5                	mov    %esp,%ebp
81001015:	83 ec 08             	sub    $0x8,%esp
81001018:	8b 55 08             	mov    0x8(%ebp),%edx
8100101b:	a1 44 90 00 81       	mov    0x81009044,%eax
81001020:	83 ec 08             	sub    $0x8,%esp
81001023:	52                   	push   %edx
81001024:	50                   	push   %eax
81001025:	e8 e1 fe ff ff       	call   81000f0b <_fclose_r>
8100102a:	83 c4 10             	add    $0x10,%esp
8100102d:	c9                   	leave  
8100102e:	c3                   	ret    

8100102f <__sflush_r>:
8100102f:	55                   	push   %ebp
81001030:	89 e5                	mov    %esp,%ebp
81001032:	57                   	push   %edi
81001033:	56                   	push   %esi
81001034:	53                   	push   %ebx
81001035:	83 ec 1c             	sub    $0x1c,%esp
81001038:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100103b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100103f:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81001043:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001047:	83 e0 08             	and    $0x8,%eax
8100104a:	85 c0                	test   %eax,%eax
8100104c:	0f 85 93 01 00 00    	jne    810011e5 <__sflush_r+0x1b6>
81001052:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001056:	80 cc 08             	or     $0x8,%ah
81001059:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100105d:	8b 43 04             	mov    0x4(%ebx),%eax
81001060:	85 c0                	test   %eax,%eax
81001062:	7f 0b                	jg     8100106f <__sflush_r+0x40>
81001064:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001067:	85 c0                	test   %eax,%eax
81001069:	0f 8e 6f 01 00 00    	jle    810011de <__sflush_r+0x1af>
8100106f:	8b 43 28             	mov    0x28(%ebx),%eax
81001072:	85 c0                	test   %eax,%eax
81001074:	0f 84 64 01 00 00    	je     810011de <__sflush_r+0x1af>
8100107a:	8b 45 08             	mov    0x8(%ebp),%eax
8100107d:	8b 00                	mov    (%eax),%eax
8100107f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001082:	8b 45 08             	mov    0x8(%ebp),%eax
81001085:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100108b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100108f:	98                   	cwtl   
81001090:	25 00 10 00 00       	and    $0x1000,%eax
81001095:	85 c0                	test   %eax,%eax
81001097:	74 08                	je     810010a1 <__sflush_r+0x72>
81001099:	8b 43 50             	mov    0x50(%ebx),%eax
8100109c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100109f:	eb 64                	jmp    81001105 <__sflush_r+0xd6>
810010a1:	8b 43 28             	mov    0x28(%ebx),%eax
810010a4:	8b 53 1c             	mov    0x1c(%ebx),%edx
810010a7:	6a 01                	push   $0x1
810010a9:	6a 00                	push   $0x0
810010ab:	52                   	push   %edx
810010ac:	ff 75 08             	push   0x8(%ebp)
810010af:	ff d0                	call   *%eax
810010b1:	83 c4 10             	add    $0x10,%esp
810010b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810010b7:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810010bb:	75 48                	jne    81001105 <__sflush_r+0xd6>
810010bd:	8b 45 08             	mov    0x8(%ebp),%eax
810010c0:	8b 00                	mov    (%eax),%eax
810010c2:	85 c0                	test   %eax,%eax
810010c4:	74 3f                	je     81001105 <__sflush_r+0xd6>
810010c6:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810010cd:	8b 45 08             	mov    0x8(%ebp),%eax
810010d0:	8b 00                	mov    (%eax),%eax
810010d2:	83 f8 1d             	cmp    $0x1d,%eax
810010d5:	74 0a                	je     810010e1 <__sflush_r+0xb2>
810010d7:	8b 45 08             	mov    0x8(%ebp),%eax
810010da:	8b 00                	mov    (%eax),%eax
810010dc:	83 f8 16             	cmp    $0x16,%eax
810010df:	75 11                	jne    810010f2 <__sflush_r+0xc3>
810010e1:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810010e8:	8b 45 08             	mov    0x8(%ebp),%eax
810010eb:	8b 55 d8             	mov    -0x28(%ebp),%edx
810010ee:	89 10                	mov    %edx,(%eax)
810010f0:	eb 0b                	jmp    810010fd <__sflush_r+0xce>
810010f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010f6:	83 c8 40             	or     $0x40,%eax
810010f9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010fd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001100:	e9 48 01 00 00       	jmp    8100124d <__sflush_r+0x21e>
81001105:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001109:	98                   	cwtl   
8100110a:	83 e0 04             	and    $0x4,%eax
8100110d:	85 c0                	test   %eax,%eax
8100110f:	74 13                	je     81001124 <__sflush_r+0xf5>
81001111:	8b 43 04             	mov    0x4(%ebx),%eax
81001114:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001117:	8b 43 30             	mov    0x30(%ebx),%eax
8100111a:	85 c0                	test   %eax,%eax
8100111c:	74 06                	je     81001124 <__sflush_r+0xf5>
8100111e:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001121:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001124:	8b 43 28             	mov    0x28(%ebx),%eax
81001127:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100112a:	6a 00                	push   $0x0
8100112c:	ff 75 e4             	push   -0x1c(%ebp)
8100112f:	52                   	push   %edx
81001130:	ff 75 08             	push   0x8(%ebp)
81001133:	ff d0                	call   *%eax
81001135:	83 c4 10             	add    $0x10,%esp
81001138:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100113b:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100113f:	75 1d                	jne    8100115e <__sflush_r+0x12f>
81001141:	8b 45 08             	mov    0x8(%ebp),%eax
81001144:	8b 00                	mov    (%eax),%eax
81001146:	85 c0                	test   %eax,%eax
81001148:	74 14                	je     8100115e <__sflush_r+0x12f>
8100114a:	8b 45 08             	mov    0x8(%ebp),%eax
8100114d:	8b 00                	mov    (%eax),%eax
8100114f:	83 f8 1d             	cmp    $0x1d,%eax
81001152:	74 0a                	je     8100115e <__sflush_r+0x12f>
81001154:	8b 45 08             	mov    0x8(%ebp),%eax
81001157:	8b 00                	mov    (%eax),%eax
81001159:	83 f8 16             	cmp    $0x16,%eax
8100115c:	75 6e                	jne    810011cc <__sflush_r+0x19d>
8100115e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001162:	80 e4 f7             	and    $0xf7,%ah
81001165:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001169:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001170:	8b 43 10             	mov    0x10(%ebx),%eax
81001173:	89 03                	mov    %eax,(%ebx)
81001175:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001179:	98                   	cwtl   
8100117a:	25 00 10 00 00       	and    $0x1000,%eax
8100117f:	85 c0                	test   %eax,%eax
81001181:	74 15                	je     81001198 <__sflush_r+0x169>
81001183:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001187:	75 09                	jne    81001192 <__sflush_r+0x163>
81001189:	8b 45 08             	mov    0x8(%ebp),%eax
8100118c:	8b 00                	mov    (%eax),%eax
8100118e:	85 c0                	test   %eax,%eax
81001190:	75 06                	jne    81001198 <__sflush_r+0x169>
81001192:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001195:	89 43 50             	mov    %eax,0x50(%ebx)
81001198:	8b 45 08             	mov    0x8(%ebp),%eax
8100119b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100119e:	89 10                	mov    %edx,(%eax)
810011a0:	8b 43 30             	mov    0x30(%ebx),%eax
810011a3:	85 c0                	test   %eax,%eax
810011a5:	74 37                	je     810011de <__sflush_r+0x1af>
810011a7:	8b 53 30             	mov    0x30(%ebx),%edx
810011aa:	8d 43 40             	lea    0x40(%ebx),%eax
810011ad:	39 c2                	cmp    %eax,%edx
810011af:	74 12                	je     810011c3 <__sflush_r+0x194>
810011b1:	8b 43 30             	mov    0x30(%ebx),%eax
810011b4:	83 ec 08             	sub    $0x8,%esp
810011b7:	50                   	push   %eax
810011b8:	ff 75 08             	push   0x8(%ebp)
810011bb:	e8 88 0a 00 00       	call   81001c48 <_free_r>
810011c0:	83 c4 10             	add    $0x10,%esp
810011c3:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810011ca:	eb 12                	jmp    810011de <__sflush_r+0x1af>
810011cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011d0:	83 c8 40             	or     $0x40,%eax
810011d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810011dc:	eb 6f                	jmp    8100124d <__sflush_r+0x21e>
810011de:	b8 00 00 00 00       	mov    $0x0,%eax
810011e3:	eb 68                	jmp    8100124d <__sflush_r+0x21e>
810011e5:	8b 73 10             	mov    0x10(%ebx),%esi
810011e8:	85 f6                	test   %esi,%esi
810011ea:	75 07                	jne    810011f3 <__sflush_r+0x1c4>
810011ec:	b8 00 00 00 00       	mov    $0x0,%eax
810011f1:	eb 5a                	jmp    8100124d <__sflush_r+0x21e>
810011f3:	8b 03                	mov    (%ebx),%eax
810011f5:	29 f0                	sub    %esi,%eax
810011f7:	89 c7                	mov    %eax,%edi
810011f9:	89 33                	mov    %esi,(%ebx)
810011fb:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810011ff:	83 e0 03             	and    $0x3,%eax
81001202:	85 c0                	test   %eax,%eax
81001204:	75 05                	jne    8100120b <__sflush_r+0x1dc>
81001206:	8b 43 14             	mov    0x14(%ebx),%eax
81001209:	eb 05                	jmp    81001210 <__sflush_r+0x1e1>
8100120b:	b8 00 00 00 00       	mov    $0x0,%eax
81001210:	89 43 08             	mov    %eax,0x8(%ebx)
81001213:	eb 2f                	jmp    81001244 <__sflush_r+0x215>
81001215:	8b 43 24             	mov    0x24(%ebx),%eax
81001218:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100121b:	57                   	push   %edi
8100121c:	56                   	push   %esi
8100121d:	52                   	push   %edx
8100121e:	ff 75 08             	push   0x8(%ebp)
81001221:	ff d0                	call   *%eax
81001223:	83 c4 10             	add    $0x10,%esp
81001226:	85 c0                	test   %eax,%eax
81001228:	7f 12                	jg     8100123c <__sflush_r+0x20d>
8100122a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100122e:	83 c8 40             	or     $0x40,%eax
81001231:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001235:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100123a:	eb 11                	jmp    8100124d <__sflush_r+0x21e>
8100123c:	89 c1                	mov    %eax,%ecx
8100123e:	89 c8                	mov    %ecx,%eax
81001240:	01 c6                	add    %eax,%esi
81001242:	29 cf                	sub    %ecx,%edi
81001244:	85 ff                	test   %edi,%edi
81001246:	7f cd                	jg     81001215 <__sflush_r+0x1e6>
81001248:	b8 00 00 00 00       	mov    $0x0,%eax
8100124d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001250:	5b                   	pop    %ebx
81001251:	5e                   	pop    %esi
81001252:	5f                   	pop    %edi
81001253:	5d                   	pop    %ebp
81001254:	c3                   	ret    

81001255 <_fflush_r>:
81001255:	55                   	push   %ebp
81001256:	89 e5                	mov    %esp,%ebp
81001258:	53                   	push   %ebx
81001259:	83 ec 14             	sub    $0x14,%esp
8100125c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100125f:	8b 45 08             	mov    0x8(%ebp),%eax
81001262:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001265:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001269:	74 18                	je     81001283 <_fflush_r+0x2e>
8100126b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100126e:	8b 40 38             	mov    0x38(%eax),%eax
81001271:	85 c0                	test   %eax,%eax
81001273:	75 0e                	jne    81001283 <_fflush_r+0x2e>
81001275:	83 ec 0c             	sub    $0xc,%esp
81001278:	ff 75 f4             	push   -0xc(%ebp)
8100127b:	e8 d8 04 00 00       	call   81001758 <__sinit>
81001280:	83 c4 10             	add    $0x10,%esp
81001283:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001287:	66 85 c0             	test   %ax,%ax
8100128a:	75 07                	jne    81001293 <_fflush_r+0x3e>
8100128c:	b8 00 00 00 00       	mov    $0x0,%eax
81001291:	eb 15                	jmp    810012a8 <_fflush_r+0x53>
81001293:	83 ec 08             	sub    $0x8,%esp
81001296:	53                   	push   %ebx
81001297:	ff 75 08             	push   0x8(%ebp)
8100129a:	e8 90 fd ff ff       	call   8100102f <__sflush_r>
8100129f:	83 c4 10             	add    $0x10,%esp
810012a2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012a8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810012ab:	c9                   	leave  
810012ac:	c3                   	ret    

810012ad <fflush>:
810012ad:	55                   	push   %ebp
810012ae:	89 e5                	mov    %esp,%ebp
810012b0:	83 ec 08             	sub    $0x8,%esp
810012b3:	8b 55 08             	mov    0x8(%ebp),%edx
810012b6:	85 d2                	test   %edx,%edx
810012b8:	75 18                	jne    810012d2 <fflush+0x25>
810012ba:	a1 84 88 00 81       	mov    0x81008884,%eax
810012bf:	83 ec 08             	sub    $0x8,%esp
810012c2:	68 55 12 00 81       	push   $0x81001255
810012c7:	50                   	push   %eax
810012c8:	e8 70 14 00 00       	call   8100273d <_fwalk_reent>
810012cd:	83 c4 10             	add    $0x10,%esp
810012d0:	eb 12                	jmp    810012e4 <fflush+0x37>
810012d2:	a1 44 90 00 81       	mov    0x81009044,%eax
810012d7:	83 ec 08             	sub    $0x8,%esp
810012da:	52                   	push   %edx
810012db:	50                   	push   %eax
810012dc:	e8 74 ff ff ff       	call   81001255 <_fflush_r>
810012e1:	83 c4 10             	add    $0x10,%esp
810012e4:	c9                   	leave  
810012e5:	c3                   	ret    

810012e6 <_fgets_r>:
810012e6:	55                   	push   %ebp
810012e7:	89 e5                	mov    %esp,%ebp
810012e9:	83 ec 28             	sub    $0x28,%esp
810012ec:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
810012f0:	7f 0a                	jg     810012fc <_fgets_r+0x16>
810012f2:	b8 00 00 00 00       	mov    $0x0,%eax
810012f7:	e9 46 01 00 00       	jmp    81001442 <_fgets_r+0x15c>
810012fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810012ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001302:	8b 45 08             	mov    0x8(%ebp),%eax
81001305:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001308:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100130c:	74 18                	je     81001326 <_fgets_r+0x40>
8100130e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001311:	8b 40 38             	mov    0x38(%eax),%eax
81001314:	85 c0                	test   %eax,%eax
81001316:	75 0e                	jne    81001326 <_fgets_r+0x40>
81001318:	83 ec 0c             	sub    $0xc,%esp
8100131b:	ff 75 ec             	push   -0x14(%ebp)
8100131e:	e8 35 04 00 00       	call   81001758 <__sinit>
81001323:	83 c4 10             	add    $0x10,%esp
81001326:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
8100132a:	8b 45 14             	mov    0x14(%ebp),%eax
8100132d:	8b 40 04             	mov    0x4(%eax),%eax
81001330:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001333:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001337:	75 34                	jne    8100136d <_fgets_r+0x87>
81001339:	83 ec 08             	sub    $0x8,%esp
8100133c:	ff 75 14             	push   0x14(%ebp)
8100133f:	ff 75 08             	push   0x8(%ebp)
81001342:	e8 5a 40 00 00       	call   810053a1 <__srefill_r>
81001347:	83 c4 10             	add    $0x10,%esp
8100134a:	85 c0                	test   %eax,%eax
8100134c:	74 16                	je     81001364 <_fgets_r+0x7e>
8100134e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001351:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001354:	0f 85 de 00 00 00    	jne    81001438 <_fgets_r+0x152>
8100135a:	b8 00 00 00 00       	mov    $0x0,%eax
8100135f:	e9 de 00 00 00       	jmp    81001442 <_fgets_r+0x15c>
81001364:	8b 45 14             	mov    0x14(%ebp),%eax
81001367:	8b 40 04             	mov    0x4(%eax),%eax
8100136a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100136d:	8b 45 14             	mov    0x14(%ebp),%eax
81001370:	8b 00                	mov    (%eax),%eax
81001372:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001375:	8b 45 10             	mov    0x10(%ebp),%eax
81001378:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100137b:	76 06                	jbe    81001383 <_fgets_r+0x9d>
8100137d:	8b 45 10             	mov    0x10(%ebp),%eax
81001380:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001383:	83 ec 04             	sub    $0x4,%esp
81001386:	ff 75 f4             	push   -0xc(%ebp)
81001389:	6a 0a                	push   $0xa
8100138b:	ff 75 e8             	push   -0x18(%ebp)
8100138e:	e8 9d 2f 00 00       	call   81004330 <memchr>
81001393:	83 c4 10             	add    $0x10,%esp
81001396:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001399:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100139d:	74 4a                	je     810013e9 <_fgets_r+0x103>
8100139f:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810013a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810013a6:	2b 45 e8             	sub    -0x18(%ebp),%eax
810013a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013ac:	8b 45 14             	mov    0x14(%ebp),%eax
810013af:	8b 40 04             	mov    0x4(%eax),%eax
810013b2:	2b 45 f4             	sub    -0xc(%ebp),%eax
810013b5:	89 c2                	mov    %eax,%edx
810013b7:	8b 45 14             	mov    0x14(%ebp),%eax
810013ba:	89 50 04             	mov    %edx,0x4(%eax)
810013bd:	8b 45 14             	mov    0x14(%ebp),%eax
810013c0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810013c3:	89 10                	mov    %edx,(%eax)
810013c5:	83 ec 04             	sub    $0x4,%esp
810013c8:	ff 75 f4             	push   -0xc(%ebp)
810013cb:	ff 75 e8             	push   -0x18(%ebp)
810013ce:	ff 75 f0             	push   -0x10(%ebp)
810013d1:	e8 42 30 00 00       	call   81004418 <memcpy>
810013d6:	83 c4 10             	add    $0x10,%esp
810013d9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810013dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013df:	01 d0                	add    %edx,%eax
810013e1:	c6 00 00             	movb   $0x0,(%eax)
810013e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810013e7:	eb 59                	jmp    81001442 <_fgets_r+0x15c>
810013e9:	8b 45 14             	mov    0x14(%ebp),%eax
810013ec:	8b 40 04             	mov    0x4(%eax),%eax
810013ef:	2b 45 f4             	sub    -0xc(%ebp),%eax
810013f2:	89 c2                	mov    %eax,%edx
810013f4:	8b 45 14             	mov    0x14(%ebp),%eax
810013f7:	89 50 04             	mov    %edx,0x4(%eax)
810013fa:	8b 45 14             	mov    0x14(%ebp),%eax
810013fd:	8b 10                	mov    (%eax),%edx
810013ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001402:	01 c2                	add    %eax,%edx
81001404:	8b 45 14             	mov    0x14(%ebp),%eax
81001407:	89 10                	mov    %edx,(%eax)
81001409:	83 ec 04             	sub    $0x4,%esp
8100140c:	ff 75 f4             	push   -0xc(%ebp)
8100140f:	ff 75 e8             	push   -0x18(%ebp)
81001412:	ff 75 f0             	push   -0x10(%ebp)
81001415:	e8 fe 2f 00 00       	call   81004418 <memcpy>
8100141a:	83 c4 10             	add    $0x10,%esp
8100141d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001420:	01 45 f0             	add    %eax,-0x10(%ebp)
81001423:	8b 45 10             	mov    0x10(%ebp),%eax
81001426:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001429:	89 45 10             	mov    %eax,0x10(%ebp)
8100142c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001430:	0f 85 f4 fe ff ff    	jne    8100132a <_fgets_r+0x44>
81001436:	eb 01                	jmp    81001439 <_fgets_r+0x153>
81001438:	90                   	nop
81001439:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100143c:	c6 00 00             	movb   $0x0,(%eax)
8100143f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001442:	c9                   	leave  
81001443:	c3                   	ret    

81001444 <fgets>:
81001444:	55                   	push   %ebp
81001445:	89 e5                	mov    %esp,%ebp
81001447:	83 ec 08             	sub    $0x8,%esp
8100144a:	a1 44 90 00 81       	mov    0x81009044,%eax
8100144f:	ff 75 10             	push   0x10(%ebp)
81001452:	ff 75 0c             	push   0xc(%ebp)
81001455:	ff 75 08             	push   0x8(%ebp)
81001458:	50                   	push   %eax
81001459:	e8 88 fe ff ff       	call   810012e6 <_fgets_r>
8100145e:	83 c4 10             	add    $0x10,%esp
81001461:	c9                   	leave  
81001462:	c3                   	ret    

81001463 <std>:
81001463:	55                   	push   %ebp
81001464:	89 e5                	mov    %esp,%ebp
81001466:	83 ec 08             	sub    $0x8,%esp
81001469:	8b 45 08             	mov    0x8(%ebp),%eax
8100146c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001472:	8b 45 08             	mov    0x8(%ebp),%eax
81001475:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8100147c:	8b 45 08             	mov    0x8(%ebp),%eax
8100147f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001486:	8b 45 0c             	mov    0xc(%ebp),%eax
81001489:	89 c2                	mov    %eax,%edx
8100148b:	8b 45 08             	mov    0x8(%ebp),%eax
8100148e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001492:	8b 45 08             	mov    0x8(%ebp),%eax
81001495:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100149c:	8b 45 10             	mov    0x10(%ebp),%eax
8100149f:	89 c2                	mov    %eax,%edx
810014a1:	8b 45 08             	mov    0x8(%ebp),%eax
810014a4:	66 89 50 0e          	mov    %dx,0xe(%eax)
810014a8:	8b 45 08             	mov    0x8(%ebp),%eax
810014ab:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810014b2:	8b 45 08             	mov    0x8(%ebp),%eax
810014b5:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810014bc:	8b 45 08             	mov    0x8(%ebp),%eax
810014bf:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810014c6:	8b 45 08             	mov    0x8(%ebp),%eax
810014c9:	83 c0 5c             	add    $0x5c,%eax
810014cc:	83 ec 04             	sub    $0x4,%esp
810014cf:	6a 08                	push   $0x8
810014d1:	6a 00                	push   $0x0
810014d3:	50                   	push   %eax
810014d4:	e8 87 2f 00 00       	call   81004460 <memset>
810014d9:	83 c4 10             	add    $0x10,%esp
810014dc:	8b 45 08             	mov    0x8(%ebp),%eax
810014df:	8b 55 08             	mov    0x8(%ebp),%edx
810014e2:	89 50 1c             	mov    %edx,0x1c(%eax)
810014e5:	8b 45 08             	mov    0x8(%ebp),%eax
810014e8:	c7 40 20 9b 58 00 81 	movl   $0x8100589b,0x20(%eax)
810014ef:	8b 45 08             	mov    0x8(%ebp),%eax
810014f2:	c7 40 24 e9 58 00 81 	movl   $0x810058e9,0x24(%eax)
810014f9:	8b 45 08             	mov    0x8(%ebp),%eax
810014fc:	c7 40 28 44 59 00 81 	movl   $0x81005944,0x28(%eax)
81001503:	8b 45 08             	mov    0x8(%ebp),%eax
81001506:	c7 40 2c 8e 59 00 81 	movl   $0x8100598e,0x2c(%eax)
8100150d:	90                   	nop
8100150e:	c9                   	leave  
8100150f:	c3                   	ret    

81001510 <stdin_init>:
81001510:	55                   	push   %ebp
81001511:	89 e5                	mov    %esp,%ebp
81001513:	83 ec 08             	sub    $0x8,%esp
81001516:	83 ec 04             	sub    $0x4,%esp
81001519:	6a 00                	push   $0x0
8100151b:	6a 04                	push   $0x4
8100151d:	ff 75 08             	push   0x8(%ebp)
81001520:	e8 3e ff ff ff       	call   81001463 <std>
81001525:	83 c4 10             	add    $0x10,%esp
81001528:	90                   	nop
81001529:	c9                   	leave  
8100152a:	c3                   	ret    

8100152b <stdout_init>:
8100152b:	55                   	push   %ebp
8100152c:	89 e5                	mov    %esp,%ebp
8100152e:	83 ec 08             	sub    $0x8,%esp
81001531:	83 ec 04             	sub    $0x4,%esp
81001534:	6a 01                	push   $0x1
81001536:	6a 09                	push   $0x9
81001538:	ff 75 08             	push   0x8(%ebp)
8100153b:	e8 23 ff ff ff       	call   81001463 <std>
81001540:	83 c4 10             	add    $0x10,%esp
81001543:	90                   	nop
81001544:	c9                   	leave  
81001545:	c3                   	ret    

81001546 <stderr_init>:
81001546:	55                   	push   %ebp
81001547:	89 e5                	mov    %esp,%ebp
81001549:	83 ec 08             	sub    $0x8,%esp
8100154c:	83 ec 04             	sub    $0x4,%esp
8100154f:	6a 02                	push   $0x2
81001551:	6a 12                	push   $0x12
81001553:	ff 75 08             	push   0x8(%ebp)
81001556:	e8 08 ff ff ff       	call   81001463 <std>
8100155b:	83 c4 10             	add    $0x10,%esp
8100155e:	90                   	nop
8100155f:	c9                   	leave  
81001560:	c3                   	ret    

81001561 <__sfmoreglue>:
81001561:	55                   	push   %ebp
81001562:	89 e5                	mov    %esp,%ebp
81001564:	53                   	push   %ebx
81001565:	83 ec 14             	sub    $0x14,%esp
81001568:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100156b:	8d 43 ff             	lea    -0x1(%ebx),%eax
8100156e:	6b c0 68             	imul   $0x68,%eax,%eax
81001571:	83 c0 74             	add    $0x74,%eax
81001574:	83 ec 08             	sub    $0x8,%esp
81001577:	50                   	push   %eax
81001578:	ff 75 08             	push   0x8(%ebp)
8100157b:	e8 8b 25 00 00       	call   81003b0b <_malloc_r>
81001580:	83 c4 10             	add    $0x10,%esp
81001583:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001586:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100158a:	75 07                	jne    81001593 <__sfmoreglue+0x32>
8100158c:	b8 00 00 00 00       	mov    $0x0,%eax
81001591:	eb 38                	jmp    810015cb <__sfmoreglue+0x6a>
81001593:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001596:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100159c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100159f:	89 58 04             	mov    %ebx,0x4(%eax)
810015a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015a5:	8d 50 0c             	lea    0xc(%eax),%edx
810015a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015ab:	89 50 08             	mov    %edx,0x8(%eax)
810015ae:	89 d8                	mov    %ebx,%eax
810015b0:	6b c0 68             	imul   $0x68,%eax,%eax
810015b3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015b6:	83 c2 0c             	add    $0xc,%edx
810015b9:	83 ec 04             	sub    $0x4,%esp
810015bc:	50                   	push   %eax
810015bd:	6a 00                	push   $0x0
810015bf:	52                   	push   %edx
810015c0:	e8 9b 2e 00 00       	call   81004460 <memset>
810015c5:	83 c4 10             	add    $0x10,%esp
810015c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015cb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810015ce:	c9                   	leave  
810015cf:	c3                   	ret    

810015d0 <__sfp>:
810015d0:	55                   	push   %ebp
810015d1:	89 e5                	mov    %esp,%ebp
810015d3:	83 ec 18             	sub    $0x18,%esp
810015d6:	e8 16 02 00 00       	call   810017f1 <__sfp_lock_acquire>
810015db:	a1 84 88 00 81       	mov    0x81008884,%eax
810015e0:	8b 40 38             	mov    0x38(%eax),%eax
810015e3:	85 c0                	test   %eax,%eax
810015e5:	75 11                	jne    810015f8 <__sfp+0x28>
810015e7:	a1 84 88 00 81       	mov    0x81008884,%eax
810015ec:	83 ec 0c             	sub    $0xc,%esp
810015ef:	50                   	push   %eax
810015f0:	e8 63 01 00 00       	call   81001758 <__sinit>
810015f5:	83 c4 10             	add    $0x10,%esp
810015f8:	a1 84 88 00 81       	mov    0x81008884,%eax
810015fd:	05 e0 02 00 00       	add    $0x2e0,%eax
81001602:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001605:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001608:	8b 40 08             	mov    0x8(%eax),%eax
8100160b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100160e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001611:	8b 40 04             	mov    0x4(%eax),%eax
81001614:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001617:	eb 10                	jmp    81001629 <__sfp+0x59>
81001619:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100161c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001620:	66 85 c0             	test   %ax,%ax
81001623:	74 58                	je     8100167d <__sfp+0xad>
81001625:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001629:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100162d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001631:	79 e6                	jns    81001619 <__sfp+0x49>
81001633:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001636:	8b 00                	mov    (%eax),%eax
81001638:	85 c0                	test   %eax,%eax
8100163a:	75 1e                	jne    8100165a <__sfp+0x8a>
8100163c:	83 ec 08             	sub    $0x8,%esp
8100163f:	6a 04                	push   $0x4
81001641:	ff 75 08             	push   0x8(%ebp)
81001644:	e8 18 ff ff ff       	call   81001561 <__sfmoreglue>
81001649:	83 c4 10             	add    $0x10,%esp
8100164c:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100164f:	89 02                	mov    %eax,(%edx)
81001651:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001654:	8b 00                	mov    (%eax),%eax
81001656:	85 c0                	test   %eax,%eax
81001658:	74 0a                	je     81001664 <__sfp+0x94>
8100165a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100165d:	8b 00                	mov    (%eax),%eax
8100165f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001662:	eb a1                	jmp    81001605 <__sfp+0x35>
81001664:	90                   	nop
81001665:	e8 8d 01 00 00       	call   810017f7 <__sfp_lock_release>
8100166a:	8b 45 08             	mov    0x8(%ebp),%eax
8100166d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001673:	b8 00 00 00 00       	mov    $0x0,%eax
81001678:	e9 9e 00 00 00       	jmp    8100171b <__sfp+0x14b>
8100167d:	90                   	nop
8100167e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001681:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001687:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100168a:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81001690:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001693:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100169a:	e8 58 01 00 00       	call   810017f7 <__sfp_lock_release>
8100169f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810016a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016ab:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810016b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810016bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016bf:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810016c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016c9:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810016d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016d3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810016da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016dd:	83 c0 5c             	add    $0x5c,%eax
810016e0:	83 ec 04             	sub    $0x4,%esp
810016e3:	6a 08                	push   $0x8
810016e5:	6a 00                	push   $0x0
810016e7:	50                   	push   %eax
810016e8:	e8 73 2d 00 00       	call   81004460 <memset>
810016ed:	83 c4 10             	add    $0x10,%esp
810016f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016f3:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810016fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016fd:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001704:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001707:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100170e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001711:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001718:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171b:	c9                   	leave  
8100171c:	c3                   	ret    

8100171d <_cleanup_r>:
8100171d:	55                   	push   %ebp
8100171e:	89 e5                	mov    %esp,%ebp
81001720:	83 ec 18             	sub    $0x18,%esp
81001723:	c7 45 f4 0b 0f 00 81 	movl   $0x81000f0b,-0xc(%ebp)
8100172a:	83 ec 08             	sub    $0x8,%esp
8100172d:	ff 75 f4             	push   -0xc(%ebp)
81001730:	ff 75 08             	push   0x8(%ebp)
81001733:	e8 05 10 00 00       	call   8100273d <_fwalk_reent>
81001738:	83 c4 10             	add    $0x10,%esp
8100173b:	90                   	nop
8100173c:	c9                   	leave  
8100173d:	c3                   	ret    

8100173e <_cleanup>:
8100173e:	55                   	push   %ebp
8100173f:	89 e5                	mov    %esp,%ebp
81001741:	83 ec 08             	sub    $0x8,%esp
81001744:	a1 84 88 00 81       	mov    0x81008884,%eax
81001749:	83 ec 0c             	sub    $0xc,%esp
8100174c:	50                   	push   %eax
8100174d:	e8 cb ff ff ff       	call   8100171d <_cleanup_r>
81001752:	83 c4 10             	add    $0x10,%esp
81001755:	90                   	nop
81001756:	c9                   	leave  
81001757:	c3                   	ret    

81001758 <__sinit>:
81001758:	55                   	push   %ebp
81001759:	89 e5                	mov    %esp,%ebp
8100175b:	83 ec 08             	sub    $0x8,%esp
8100175e:	e8 9a 00 00 00       	call   810017fd <__sinit_lock_acquire>
81001763:	8b 45 08             	mov    0x8(%ebp),%eax
81001766:	8b 40 38             	mov    0x38(%eax),%eax
81001769:	85 c0                	test   %eax,%eax
8100176b:	74 07                	je     81001774 <__sinit+0x1c>
8100176d:	e8 91 00 00 00       	call   81001803 <__sinit_lock_release>
81001772:	eb 7b                	jmp    810017ef <__sinit+0x97>
81001774:	8b 45 08             	mov    0x8(%ebp),%eax
81001777:	c7 40 3c 1d 17 00 81 	movl   $0x8100171d,0x3c(%eax)
8100177e:	8b 45 08             	mov    0x8(%ebp),%eax
81001781:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001788:	00 00 00 
8100178b:	8b 45 08             	mov    0x8(%ebp),%eax
8100178e:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001795:	00 00 00 
81001798:	8b 45 08             	mov    0x8(%ebp),%eax
8100179b:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810017a1:	8b 45 08             	mov    0x8(%ebp),%eax
810017a4:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810017aa:	8b 45 08             	mov    0x8(%ebp),%eax
810017ad:	8b 40 04             	mov    0x4(%eax),%eax
810017b0:	83 ec 0c             	sub    $0xc,%esp
810017b3:	50                   	push   %eax
810017b4:	e8 57 fd ff ff       	call   81001510 <stdin_init>
810017b9:	83 c4 10             	add    $0x10,%esp
810017bc:	8b 45 08             	mov    0x8(%ebp),%eax
810017bf:	8b 40 08             	mov    0x8(%eax),%eax
810017c2:	83 ec 0c             	sub    $0xc,%esp
810017c5:	50                   	push   %eax
810017c6:	e8 60 fd ff ff       	call   8100152b <stdout_init>
810017cb:	83 c4 10             	add    $0x10,%esp
810017ce:	8b 45 08             	mov    0x8(%ebp),%eax
810017d1:	8b 40 0c             	mov    0xc(%eax),%eax
810017d4:	83 ec 0c             	sub    $0xc,%esp
810017d7:	50                   	push   %eax
810017d8:	e8 69 fd ff ff       	call   81001546 <stderr_init>
810017dd:	83 c4 10             	add    $0x10,%esp
810017e0:	8b 45 08             	mov    0x8(%ebp),%eax
810017e3:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810017ea:	e8 14 00 00 00       	call   81001803 <__sinit_lock_release>
810017ef:	c9                   	leave  
810017f0:	c3                   	ret    

810017f1 <__sfp_lock_acquire>:
810017f1:	55                   	push   %ebp
810017f2:	89 e5                	mov    %esp,%ebp
810017f4:	90                   	nop
810017f5:	5d                   	pop    %ebp
810017f6:	c3                   	ret    

810017f7 <__sfp_lock_release>:
810017f7:	55                   	push   %ebp
810017f8:	89 e5                	mov    %esp,%ebp
810017fa:	90                   	nop
810017fb:	5d                   	pop    %ebp
810017fc:	c3                   	ret    

810017fd <__sinit_lock_acquire>:
810017fd:	55                   	push   %ebp
810017fe:	89 e5                	mov    %esp,%ebp
81001800:	90                   	nop
81001801:	5d                   	pop    %ebp
81001802:	c3                   	ret    

81001803 <__sinit_lock_release>:
81001803:	55                   	push   %ebp
81001804:	89 e5                	mov    %esp,%ebp
81001806:	90                   	nop
81001807:	5d                   	pop    %ebp
81001808:	c3                   	ret    

81001809 <__fp_lock>:
81001809:	55                   	push   %ebp
8100180a:	89 e5                	mov    %esp,%ebp
8100180c:	b8 00 00 00 00       	mov    $0x0,%eax
81001811:	5d                   	pop    %ebp
81001812:	c3                   	ret    

81001813 <__fp_unlock>:
81001813:	55                   	push   %ebp
81001814:	89 e5                	mov    %esp,%ebp
81001816:	b8 00 00 00 00       	mov    $0x0,%eax
8100181b:	5d                   	pop    %ebp
8100181c:	c3                   	ret    

8100181d <__fp_lock_all>:
8100181d:	55                   	push   %ebp
8100181e:	89 e5                	mov    %esp,%ebp
81001820:	83 ec 08             	sub    $0x8,%esp
81001823:	e8 c9 ff ff ff       	call   810017f1 <__sfp_lock_acquire>
81001828:	a1 44 90 00 81       	mov    0x81009044,%eax
8100182d:	83 ec 08             	sub    $0x8,%esp
81001830:	68 09 18 00 81       	push   $0x81001809
81001835:	50                   	push   %eax
81001836:	e8 9a 0e 00 00       	call   810026d5 <_fwalk>
8100183b:	83 c4 10             	add    $0x10,%esp
8100183e:	90                   	nop
8100183f:	c9                   	leave  
81001840:	c3                   	ret    

81001841 <__fp_unlock_all>:
81001841:	55                   	push   %ebp
81001842:	89 e5                	mov    %esp,%ebp
81001844:	83 ec 08             	sub    $0x8,%esp
81001847:	a1 44 90 00 81       	mov    0x81009044,%eax
8100184c:	83 ec 08             	sub    $0x8,%esp
8100184f:	68 13 18 00 81       	push   $0x81001813
81001854:	50                   	push   %eax
81001855:	e8 7b 0e 00 00       	call   810026d5 <_fwalk>
8100185a:	83 c4 10             	add    $0x10,%esp
8100185d:	e8 95 ff ff ff       	call   810017f7 <__sfp_lock_release>
81001862:	90                   	nop
81001863:	c9                   	leave  
81001864:	c3                   	ret    

81001865 <_fopen_r>:
81001865:	55                   	push   %ebp
81001866:	89 e5                	mov    %esp,%ebp
81001868:	56                   	push   %esi
81001869:	53                   	push   %ebx
8100186a:	83 ec 10             	sub    $0x10,%esp
8100186d:	83 ec 04             	sub    $0x4,%esp
81001870:	8d 45 f0             	lea    -0x10(%ebp),%eax
81001873:	50                   	push   %eax
81001874:	ff 75 10             	push   0x10(%ebp)
81001877:	ff 75 08             	push   0x8(%ebp)
8100187a:	e8 03 4b 00 00       	call   81006382 <__sflags>
8100187f:	83 c4 10             	add    $0x10,%esp
81001882:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001885:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001889:	75 0a                	jne    81001895 <_fopen_r+0x30>
8100188b:	b8 00 00 00 00       	mov    $0x0,%eax
81001890:	e9 9e 00 00 00       	jmp    81001933 <_fopen_r+0xce>
81001895:	83 ec 0c             	sub    $0xc,%esp
81001898:	ff 75 08             	push   0x8(%ebp)
8100189b:	e8 30 fd ff ff       	call   810015d0 <__sfp>
810018a0:	83 c4 10             	add    $0x10,%esp
810018a3:	89 c3                	mov    %eax,%ebx
810018a5:	85 db                	test   %ebx,%ebx
810018a7:	75 0a                	jne    810018b3 <_fopen_r+0x4e>
810018a9:	b8 00 00 00 00       	mov    $0x0,%eax
810018ae:	e9 80 00 00 00       	jmp    81001933 <_fopen_r+0xce>
810018b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018b6:	68 b6 01 00 00       	push   $0x1b6
810018bb:	50                   	push   %eax
810018bc:	ff 75 0c             	push   0xc(%ebp)
810018bf:	ff 75 08             	push   0x8(%ebp)
810018c2:	e8 7c 37 00 00       	call   81005043 <_open_r>
810018c7:	83 c4 10             	add    $0x10,%esp
810018ca:	89 c6                	mov    %eax,%esi
810018cc:	85 f6                	test   %esi,%esi
810018ce:	79 17                	jns    810018e7 <_fopen_r+0x82>
810018d0:	e8 1c ff ff ff       	call   810017f1 <__sfp_lock_acquire>
810018d5:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810018db:	e8 17 ff ff ff       	call   810017f7 <__sfp_lock_release>
810018e0:	b8 00 00 00 00       	mov    $0x0,%eax
810018e5:	eb 4c                	jmp    81001933 <_fopen_r+0xce>
810018e7:	89 f0                	mov    %esi,%eax
810018e9:	66 89 43 0e          	mov    %ax,0xe(%ebx)
810018ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018f0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810018f4:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
810018f7:	c7 43 20 9b 58 00 81 	movl   $0x8100589b,0x20(%ebx)
810018fe:	c7 43 24 e9 58 00 81 	movl   $0x810058e9,0x24(%ebx)
81001905:	c7 43 28 44 59 00 81 	movl   $0x81005944,0x28(%ebx)
8100190c:	c7 43 2c 8e 59 00 81 	movl   $0x8100598e,0x2c(%ebx)
81001913:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001917:	98                   	cwtl   
81001918:	25 00 01 00 00       	and    $0x100,%eax
8100191d:	85 c0                	test   %eax,%eax
8100191f:	74 10                	je     81001931 <_fopen_r+0xcc>
81001921:	6a 02                	push   $0x2
81001923:	6a 00                	push   $0x0
81001925:	53                   	push   %ebx
81001926:	ff 75 08             	push   0x8(%ebp)
81001929:	e8 56 08 00 00       	call   81002184 <_fseek_r>
8100192e:	83 c4 10             	add    $0x10,%esp
81001931:	89 d8                	mov    %ebx,%eax
81001933:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001936:	5b                   	pop    %ebx
81001937:	5e                   	pop    %esi
81001938:	5d                   	pop    %ebp
81001939:	c3                   	ret    

8100193a <fopen>:
8100193a:	55                   	push   %ebp
8100193b:	89 e5                	mov    %esp,%ebp
8100193d:	83 ec 08             	sub    $0x8,%esp
81001940:	a1 44 90 00 81       	mov    0x81009044,%eax
81001945:	83 ec 04             	sub    $0x4,%esp
81001948:	ff 75 0c             	push   0xc(%ebp)
8100194b:	ff 75 08             	push   0x8(%ebp)
8100194e:	50                   	push   %eax
8100194f:	e8 11 ff ff ff       	call   81001865 <_fopen_r>
81001954:	83 c4 10             	add    $0x10,%esp
81001957:	c9                   	leave  
81001958:	c3                   	ret    

81001959 <_fiprintf_r>:
81001959:	55                   	push   %ebp
8100195a:	89 e5                	mov    %esp,%ebp
8100195c:	83 ec 18             	sub    $0x18,%esp
8100195f:	8d 45 14             	lea    0x14(%ebp),%eax
81001962:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001965:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001968:	50                   	push   %eax
81001969:	ff 75 10             	push   0x10(%ebp)
8100196c:	ff 75 0c             	push   0xc(%ebp)
8100196f:	ff 75 08             	push   0x8(%ebp)
81001972:	e8 8c 2d 00 00       	call   81004703 <_vfiprintf_r>
81001977:	83 c4 10             	add    $0x10,%esp
8100197a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100197d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001980:	c9                   	leave  
81001981:	c3                   	ret    

81001982 <fiprintf>:
81001982:	55                   	push   %ebp
81001983:	89 e5                	mov    %esp,%ebp
81001985:	83 ec 18             	sub    $0x18,%esp
81001988:	8d 45 10             	lea    0x10(%ebp),%eax
8100198b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100198e:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001991:	a1 44 90 00 81       	mov    0x81009044,%eax
81001996:	52                   	push   %edx
81001997:	ff 75 0c             	push   0xc(%ebp)
8100199a:	ff 75 08             	push   0x8(%ebp)
8100199d:	50                   	push   %eax
8100199e:	e8 60 2d 00 00       	call   81004703 <_vfiprintf_r>
810019a3:	83 c4 10             	add    $0x10,%esp
810019a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ac:	c9                   	leave  
810019ad:	c3                   	ret    

810019ae <_fread_r>:
810019ae:	55                   	push   %ebp
810019af:	89 e5                	mov    %esp,%ebp
810019b1:	57                   	push   %edi
810019b2:	56                   	push   %esi
810019b3:	53                   	push   %ebx
810019b4:	83 ec 2c             	sub    $0x2c,%esp
810019b7:	8b 45 14             	mov    0x14(%ebp),%eax
810019ba:	0f af 45 10          	imul   0x10(%ebp),%eax
810019be:	89 c3                	mov    %eax,%ebx
810019c0:	85 db                	test   %ebx,%ebx
810019c2:	75 0a                	jne    810019ce <_fread_r+0x20>
810019c4:	b8 00 00 00 00       	mov    $0x0,%eax
810019c9:	e9 4d 02 00 00       	jmp    81001c1b <_fread_r+0x26d>
810019ce:	8b 45 08             	mov    0x8(%ebp),%eax
810019d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810019d4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810019d8:	74 18                	je     810019f2 <_fread_r+0x44>
810019da:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810019dd:	8b 40 38             	mov    0x38(%eax),%eax
810019e0:	85 c0                	test   %eax,%eax
810019e2:	75 0e                	jne    810019f2 <_fread_r+0x44>
810019e4:	83 ec 0c             	sub    $0xc,%esp
810019e7:	ff 75 e4             	push   -0x1c(%ebp)
810019ea:	e8 69 fd ff ff       	call   81001758 <__sinit>
810019ef:	83 c4 10             	add    $0x10,%esp
810019f2:	8b 45 18             	mov    0x18(%ebp),%eax
810019f5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810019f9:	98                   	cwtl   
810019fa:	25 00 20 00 00       	and    $0x2000,%eax
810019ff:	85 c0                	test   %eax,%eax
81001a01:	75 24                	jne    81001a27 <_fread_r+0x79>
81001a03:	8b 45 18             	mov    0x18(%ebp),%eax
81001a06:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001a0a:	80 cc 20             	or     $0x20,%ah
81001a0d:	89 c2                	mov    %eax,%edx
81001a0f:	8b 45 18             	mov    0x18(%ebp),%eax
81001a12:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001a16:	8b 45 18             	mov    0x18(%ebp),%eax
81001a19:	8b 40 64             	mov    0x64(%eax),%eax
81001a1c:	80 e4 df             	and    $0xdf,%ah
81001a1f:	89 c2                	mov    %eax,%edx
81001a21:	8b 45 18             	mov    0x18(%ebp),%eax
81001a24:	89 50 64             	mov    %edx,0x64(%eax)
81001a27:	8b 45 18             	mov    0x18(%ebp),%eax
81001a2a:	8b 40 04             	mov    0x4(%eax),%eax
81001a2d:	85 c0                	test   %eax,%eax
81001a2f:	79 0a                	jns    81001a3b <_fread_r+0x8d>
81001a31:	8b 45 18             	mov    0x18(%ebp),%eax
81001a34:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001a3b:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001a3e:	8b 75 0c             	mov    0xc(%ebp),%esi
81001a41:	8b 45 18             	mov    0x18(%ebp),%eax
81001a44:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001a48:	98                   	cwtl   
81001a49:	83 e0 02             	and    $0x2,%eax
81001a4c:	85 c0                	test   %eax,%eax
81001a4e:	0f 84 88 01 00 00    	je     81001bdc <_fread_r+0x22e>
81001a54:	8b 45 18             	mov    0x18(%ebp),%eax
81001a57:	8b 40 04             	mov    0x4(%eax),%eax
81001a5a:	39 c3                	cmp    %eax,%ebx
81001a5c:	0f 46 c3             	cmovbe %ebx,%eax
81001a5f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001a62:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001a65:	8b 45 18             	mov    0x18(%ebp),%eax
81001a68:	8b 00                	mov    (%eax),%eax
81001a6a:	83 ec 04             	sub    $0x4,%esp
81001a6d:	52                   	push   %edx
81001a6e:	50                   	push   %eax
81001a6f:	56                   	push   %esi
81001a70:	e8 a3 29 00 00       	call   81004418 <memcpy>
81001a75:	83 c4 10             	add    $0x10,%esp
81001a78:	8b 45 18             	mov    0x18(%ebp),%eax
81001a7b:	8b 10                	mov    (%eax),%edx
81001a7d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a80:	01 c2                	add    %eax,%edx
81001a82:	8b 45 18             	mov    0x18(%ebp),%eax
81001a85:	89 10                	mov    %edx,(%eax)
81001a87:	8b 45 18             	mov    0x18(%ebp),%eax
81001a8a:	8b 40 04             	mov    0x4(%eax),%eax
81001a8d:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001a90:	89 c2                	mov    %eax,%edx
81001a92:	8b 45 18             	mov    0x18(%ebp),%eax
81001a95:	89 50 04             	mov    %edx,0x4(%eax)
81001a98:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001a9b:	01 c6                	add    %eax,%esi
81001a9d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001aa0:	29 c3                	sub    %eax,%ebx
81001aa2:	8b 45 18             	mov    0x18(%ebp),%eax
81001aa5:	8b 40 30             	mov    0x30(%eax),%eax
81001aa8:	85 c0                	test   %eax,%eax
81001aaa:	0f 84 d0 00 00 00    	je     81001b80 <_fread_r+0x1d2>
81001ab0:	85 db                	test   %ebx,%ebx
81001ab2:	0f 84 c8 00 00 00    	je     81001b80 <_fread_r+0x1d2>
81001ab8:	8b 45 18             	mov    0x18(%ebp),%eax
81001abb:	8b 40 30             	mov    0x30(%eax),%eax
81001abe:	8b 55 18             	mov    0x18(%ebp),%edx
81001ac1:	83 c2 40             	add    $0x40,%edx
81001ac4:	39 d0                	cmp    %edx,%eax
81001ac6:	74 15                	je     81001add <_fread_r+0x12f>
81001ac8:	8b 45 18             	mov    0x18(%ebp),%eax
81001acb:	8b 40 30             	mov    0x30(%eax),%eax
81001ace:	83 ec 08             	sub    $0x8,%esp
81001ad1:	50                   	push   %eax
81001ad2:	ff 75 08             	push   0x8(%ebp)
81001ad5:	e8 6e 01 00 00       	call   81001c48 <_free_r>
81001ada:	83 c4 10             	add    $0x10,%esp
81001add:	8b 45 18             	mov    0x18(%ebp),%eax
81001ae0:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001ae7:	e9 94 00 00 00       	jmp    81001b80 <_fread_r+0x1d2>
81001aec:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001af3:	8b 45 18             	mov    0x18(%ebp),%eax
81001af6:	8b 40 10             	mov    0x10(%eax),%eax
81001af9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001afc:	8b 45 18             	mov    0x18(%ebp),%eax
81001aff:	8b 00                	mov    (%eax),%eax
81001b01:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001b04:	8b 45 18             	mov    0x18(%ebp),%eax
81001b07:	8b 40 14             	mov    0x14(%eax),%eax
81001b0a:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001b0d:	8b 45 18             	mov    0x18(%ebp),%eax
81001b10:	89 70 10             	mov    %esi,0x10(%eax)
81001b13:	89 da                	mov    %ebx,%edx
81001b15:	8b 45 18             	mov    0x18(%ebp),%eax
81001b18:	89 50 14             	mov    %edx,0x14(%eax)
81001b1b:	8b 45 18             	mov    0x18(%ebp),%eax
81001b1e:	89 30                	mov    %esi,(%eax)
81001b20:	83 ec 08             	sub    $0x8,%esp
81001b23:	ff 75 18             	push   0x18(%ebp)
81001b26:	ff 75 08             	push   0x8(%ebp)
81001b29:	e8 73 38 00 00       	call   810053a1 <__srefill_r>
81001b2e:	83 c4 10             	add    $0x10,%esp
81001b31:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001b34:	8b 45 18             	mov    0x18(%ebp),%eax
81001b37:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001b3a:	89 50 10             	mov    %edx,0x10(%eax)
81001b3d:	8b 45 18             	mov    0x18(%ebp),%eax
81001b40:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001b43:	89 50 14             	mov    %edx,0x14(%eax)
81001b46:	8b 45 18             	mov    0x18(%ebp),%eax
81001b49:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001b4c:	89 10                	mov    %edx,(%eax)
81001b4e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b51:	8b 40 04             	mov    0x4(%eax),%eax
81001b54:	29 c3                	sub    %eax,%ebx
81001b56:	8b 45 18             	mov    0x18(%ebp),%eax
81001b59:	8b 40 04             	mov    0x4(%eax),%eax
81001b5c:	01 c6                	add    %eax,%esi
81001b5e:	8b 45 18             	mov    0x18(%ebp),%eax
81001b61:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001b68:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001b6c:	74 12                	je     81001b80 <_fread_r+0x1d2>
81001b6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001b71:	29 d8                	sub    %ebx,%eax
81001b73:	ba 00 00 00 00       	mov    $0x0,%edx
81001b78:	f7 75 10             	divl   0x10(%ebp)
81001b7b:	e9 9b 00 00 00       	jmp    81001c1b <_fread_r+0x26d>
81001b80:	85 db                	test   %ebx,%ebx
81001b82:	0f 85 64 ff ff ff    	jne    81001aec <_fread_r+0x13e>
81001b88:	e9 8b 00 00 00       	jmp    81001c18 <_fread_r+0x26a>
81001b8d:	89 fa                	mov    %edi,%edx
81001b8f:	8b 45 18             	mov    0x18(%ebp),%eax
81001b92:	8b 00                	mov    (%eax),%eax
81001b94:	83 ec 04             	sub    $0x4,%esp
81001b97:	52                   	push   %edx
81001b98:	50                   	push   %eax
81001b99:	56                   	push   %esi
81001b9a:	e8 79 28 00 00       	call   81004418 <memcpy>
81001b9f:	83 c4 10             	add    $0x10,%esp
81001ba2:	8b 45 18             	mov    0x18(%ebp),%eax
81001ba5:	8b 00                	mov    (%eax),%eax
81001ba7:	89 fa                	mov    %edi,%edx
81001ba9:	01 c2                	add    %eax,%edx
81001bab:	8b 45 18             	mov    0x18(%ebp),%eax
81001bae:	89 10                	mov    %edx,(%eax)
81001bb0:	89 f8                	mov    %edi,%eax
81001bb2:	01 c6                	add    %eax,%esi
81001bb4:	89 f8                	mov    %edi,%eax
81001bb6:	29 c3                	sub    %eax,%ebx
81001bb8:	83 ec 08             	sub    $0x8,%esp
81001bbb:	ff 75 18             	push   0x18(%ebp)
81001bbe:	ff 75 08             	push   0x8(%ebp)
81001bc1:	e8 db 37 00 00       	call   810053a1 <__srefill_r>
81001bc6:	83 c4 10             	add    $0x10,%esp
81001bc9:	85 c0                	test   %eax,%eax
81001bcb:	74 0f                	je     81001bdc <_fread_r+0x22e>
81001bcd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001bd0:	29 d8                	sub    %ebx,%eax
81001bd2:	ba 00 00 00 00       	mov    $0x0,%edx
81001bd7:	f7 75 10             	divl   0x10(%ebp)
81001bda:	eb 3f                	jmp    81001c1b <_fread_r+0x26d>
81001bdc:	8b 45 18             	mov    0x18(%ebp),%eax
81001bdf:	8b 78 04             	mov    0x4(%eax),%edi
81001be2:	89 f8                	mov    %edi,%eax
81001be4:	39 c3                	cmp    %eax,%ebx
81001be6:	77 a5                	ja     81001b8d <_fread_r+0x1df>
81001be8:	8b 45 18             	mov    0x18(%ebp),%eax
81001beb:	8b 00                	mov    (%eax),%eax
81001bed:	83 ec 04             	sub    $0x4,%esp
81001bf0:	53                   	push   %ebx
81001bf1:	50                   	push   %eax
81001bf2:	56                   	push   %esi
81001bf3:	e8 20 28 00 00       	call   81004418 <memcpy>
81001bf8:	83 c4 10             	add    $0x10,%esp
81001bfb:	8b 45 18             	mov    0x18(%ebp),%eax
81001bfe:	8b 40 04             	mov    0x4(%eax),%eax
81001c01:	29 d8                	sub    %ebx,%eax
81001c03:	89 c2                	mov    %eax,%edx
81001c05:	8b 45 18             	mov    0x18(%ebp),%eax
81001c08:	89 50 04             	mov    %edx,0x4(%eax)
81001c0b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c0e:	8b 00                	mov    (%eax),%eax
81001c10:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001c13:	8b 45 18             	mov    0x18(%ebp),%eax
81001c16:	89 10                	mov    %edx,(%eax)
81001c18:	8b 45 14             	mov    0x14(%ebp),%eax
81001c1b:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001c1e:	5b                   	pop    %ebx
81001c1f:	5e                   	pop    %esi
81001c20:	5f                   	pop    %edi
81001c21:	5d                   	pop    %ebp
81001c22:	c3                   	ret    

81001c23 <fread>:
81001c23:	55                   	push   %ebp
81001c24:	89 e5                	mov    %esp,%ebp
81001c26:	83 ec 08             	sub    $0x8,%esp
81001c29:	a1 44 90 00 81       	mov    0x81009044,%eax
81001c2e:	83 ec 0c             	sub    $0xc,%esp
81001c31:	ff 75 14             	push   0x14(%ebp)
81001c34:	ff 75 10             	push   0x10(%ebp)
81001c37:	ff 75 0c             	push   0xc(%ebp)
81001c3a:	ff 75 08             	push   0x8(%ebp)
81001c3d:	50                   	push   %eax
81001c3e:	e8 6b fd ff ff       	call   810019ae <_fread_r>
81001c43:	83 c4 20             	add    $0x20,%esp
81001c46:	c9                   	leave  
81001c47:	c3                   	ret    

81001c48 <_free_r>:
81001c48:	55                   	push   %ebp
81001c49:	89 e5                	mov    %esp,%ebp
81001c4b:	53                   	push   %ebx
81001c4c:	83 ec 34             	sub    $0x34,%esp
81001c4f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001c53:	0f 84 c4 03 00 00    	je     8100201d <_free_r+0x3d5>
81001c59:	83 ec 0c             	sub    $0xc,%esp
81001c5c:	ff 75 08             	push   0x8(%ebp)
81001c5f:	e8 84 28 00 00       	call   810044e8 <__malloc_lock>
81001c64:	83 c4 10             	add    $0x10,%esp
81001c67:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c6a:	83 e8 08             	sub    $0x8,%eax
81001c6d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c73:	8b 40 04             	mov    0x4(%eax),%eax
81001c76:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001c79:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001c7c:	83 e0 fe             	and    $0xfffffffe,%eax
81001c7f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c82:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001c85:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c88:	01 d0                	add    %edx,%eax
81001c8a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001c8d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001c90:	8b 40 04             	mov    0x4(%eax),%eax
81001c93:	83 e0 fc             	and    $0xfffffffc,%eax
81001c96:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001c99:	b8 60 90 00 81       	mov    $0x81009060,%eax
81001c9e:	8b 40 08             	mov    0x8(%eax),%eax
81001ca1:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001ca4:	0f 85 94 00 00 00    	jne    81001d3e <_free_r+0xf6>
81001caa:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001cad:	01 45 f0             	add    %eax,-0x10(%ebp)
81001cb0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001cb3:	83 e0 01             	and    $0x1,%eax
81001cb6:	85 c0                	test   %eax,%eax
81001cb8:	75 3a                	jne    81001cf4 <_free_r+0xac>
81001cba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cbd:	8b 00                	mov    (%eax),%eax
81001cbf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001cc2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001cc5:	f7 d8                	neg    %eax
81001cc7:	01 45 f4             	add    %eax,-0xc(%ebp)
81001cca:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001ccd:	01 45 f0             	add    %eax,-0x10(%ebp)
81001cd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cd3:	8b 40 0c             	mov    0xc(%eax),%eax
81001cd6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001cd9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cdc:	8b 40 08             	mov    0x8(%eax),%eax
81001cdf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ce2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ce5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001ce8:	89 50 0c             	mov    %edx,0xc(%eax)
81001ceb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001cee:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cf1:	89 50 08             	mov    %edx,0x8(%eax)
81001cf4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cf7:	83 c8 01             	or     $0x1,%eax
81001cfa:	89 c2                	mov    %eax,%edx
81001cfc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001cff:	89 50 04             	mov    %edx,0x4(%eax)
81001d02:	ba 60 90 00 81       	mov    $0x81009060,%edx
81001d07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d0a:	89 42 08             	mov    %eax,0x8(%edx)
81001d0d:	a1 68 94 00 81       	mov    0x81009468,%eax
81001d12:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001d15:	72 14                	jb     81001d2b <_free_r+0xe3>
81001d17:	a1 40 9d 00 81       	mov    0x81009d40,%eax
81001d1c:	83 ec 08             	sub    $0x8,%esp
81001d1f:	50                   	push   %eax
81001d20:	ff 75 08             	push   0x8(%ebp)
81001d23:	e8 fb 02 00 00       	call   81002023 <_malloc_trim_r>
81001d28:	83 c4 10             	add    $0x10,%esp
81001d2b:	83 ec 0c             	sub    $0xc,%esp
81001d2e:	ff 75 08             	push   0x8(%ebp)
81001d31:	e8 b8 27 00 00       	call   810044ee <__malloc_unlock>
81001d36:	83 c4 10             	add    $0x10,%esp
81001d39:	e9 e0 02 00 00       	jmp    8100201e <_free_r+0x3d6>
81001d3e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001d41:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001d44:	89 50 04             	mov    %edx,0x4(%eax)
81001d47:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001d4e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d51:	83 e0 01             	and    $0x1,%eax
81001d54:	85 c0                	test   %eax,%eax
81001d56:	75 52                	jne    81001daa <_free_r+0x162>
81001d58:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d5b:	8b 00                	mov    (%eax),%eax
81001d5d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d60:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d63:	f7 d8                	neg    %eax
81001d65:	01 45 f4             	add    %eax,-0xc(%ebp)
81001d68:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001d6b:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d71:	8b 40 08             	mov    0x8(%eax),%eax
81001d74:	ba 68 90 00 81       	mov    $0x81009068,%edx
81001d79:	39 d0                	cmp    %edx,%eax
81001d7b:	75 09                	jne    81001d86 <_free_r+0x13e>
81001d7d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001d84:	eb 24                	jmp    81001daa <_free_r+0x162>
81001d86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d89:	8b 40 0c             	mov    0xc(%eax),%eax
81001d8c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001d8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d92:	8b 40 08             	mov    0x8(%eax),%eax
81001d95:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001d98:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d9b:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001d9e:	89 50 0c             	mov    %edx,0xc(%eax)
81001da1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001da4:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001da7:	89 50 08             	mov    %edx,0x8(%eax)
81001daa:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001dad:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001db0:	01 d0                	add    %edx,%eax
81001db2:	8b 40 04             	mov    0x4(%eax),%eax
81001db5:	83 e0 01             	and    $0x1,%eax
81001db8:	85 c0                	test   %eax,%eax
81001dba:	75 75                	jne    81001e31 <_free_r+0x1e9>
81001dbc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001dbf:	01 45 f0             	add    %eax,-0x10(%ebp)
81001dc2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001dc6:	75 45                	jne    81001e0d <_free_r+0x1c5>
81001dc8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001dcb:	8b 40 08             	mov    0x8(%eax),%eax
81001dce:	ba 68 90 00 81       	mov    $0x81009068,%edx
81001dd3:	39 d0                	cmp    %edx,%eax
81001dd5:	75 36                	jne    81001e0d <_free_r+0x1c5>
81001dd7:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001dde:	b8 68 90 00 81       	mov    $0x81009068,%eax
81001de3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001de6:	89 50 0c             	mov    %edx,0xc(%eax)
81001de9:	ba 68 90 00 81       	mov    $0x81009068,%edx
81001dee:	8b 40 0c             	mov    0xc(%eax),%eax
81001df1:	89 42 08             	mov    %eax,0x8(%edx)
81001df4:	ba 68 90 00 81       	mov    $0x81009068,%edx
81001df9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001dfc:	89 50 0c             	mov    %edx,0xc(%eax)
81001dff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e02:	8b 50 0c             	mov    0xc(%eax),%edx
81001e05:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e08:	89 50 08             	mov    %edx,0x8(%eax)
81001e0b:	eb 24                	jmp    81001e31 <_free_r+0x1e9>
81001e0d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e10:	8b 40 0c             	mov    0xc(%eax),%eax
81001e13:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e16:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001e19:	8b 40 08             	mov    0x8(%eax),%eax
81001e1c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e1f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e22:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001e25:	89 50 0c             	mov    %edx,0xc(%eax)
81001e28:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e2b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e2e:	89 50 08             	mov    %edx,0x8(%eax)
81001e31:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e34:	83 c8 01             	or     $0x1,%eax
81001e37:	89 c2                	mov    %eax,%edx
81001e39:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e3c:	89 50 04             	mov    %edx,0x4(%eax)
81001e3f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001e42:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e45:	01 c2                	add    %eax,%edx
81001e47:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e4a:	89 02                	mov    %eax,(%edx)
81001e4c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001e50:	0f 85 b7 01 00 00    	jne    8100200d <_free_r+0x3c5>
81001e56:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81001e5d:	77 7f                	ja     81001ede <_free_r+0x296>
81001e5f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e62:	c1 e8 03             	shr    $0x3,%eax
81001e65:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001e68:	b8 60 90 00 81       	mov    $0x81009060,%eax
81001e6d:	8b 58 04             	mov    0x4(%eax),%ebx
81001e70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001e73:	8d 50 03             	lea    0x3(%eax),%edx
81001e76:	85 c0                	test   %eax,%eax
81001e78:	0f 48 c2             	cmovs  %edx,%eax
81001e7b:	c1 f8 02             	sar    $0x2,%eax
81001e7e:	ba 01 00 00 00       	mov    $0x1,%edx
81001e83:	89 c1                	mov    %eax,%ecx
81001e85:	d3 e2                	shl    %cl,%edx
81001e87:	89 d0                	mov    %edx,%eax
81001e89:	ba 60 90 00 81       	mov    $0x81009060,%edx
81001e8e:	09 d8                	or     %ebx,%eax
81001e90:	89 42 04             	mov    %eax,0x4(%edx)
81001e93:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001e96:	83 c0 01             	add    $0x1,%eax
81001e99:	01 c0                	add    %eax,%eax
81001e9b:	c1 e0 02             	shl    $0x2,%eax
81001e9e:	05 60 90 00 81       	add    $0x81009060,%eax
81001ea3:	83 e8 08             	sub    $0x8,%eax
81001ea6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ea9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001eac:	8b 40 08             	mov    0x8(%eax),%eax
81001eaf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001eb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb5:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001eb8:	89 50 0c             	mov    %edx,0xc(%eax)
81001ebb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ebe:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ec1:	89 50 08             	mov    %edx,0x8(%eax)
81001ec4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ec7:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001eca:	89 50 08             	mov    %edx,0x8(%eax)
81001ecd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ed0:	8b 50 08             	mov    0x8(%eax),%edx
81001ed3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ed6:	89 50 0c             	mov    %edx,0xc(%eax)
81001ed9:	e9 2f 01 00 00       	jmp    8100200d <_free_r+0x3c5>
81001ede:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ee1:	c1 e8 09             	shr    $0x9,%eax
81001ee4:	85 c0                	test   %eax,%eax
81001ee6:	75 08                	jne    81001ef0 <_free_r+0x2a8>
81001ee8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001eeb:	c1 e8 03             	shr    $0x3,%eax
81001eee:	eb 77                	jmp    81001f67 <_free_r+0x31f>
81001ef0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ef3:	c1 e8 09             	shr    $0x9,%eax
81001ef6:	83 f8 04             	cmp    $0x4,%eax
81001ef9:	77 0b                	ja     81001f06 <_free_r+0x2be>
81001efb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001efe:	c1 e8 06             	shr    $0x6,%eax
81001f01:	83 c0 38             	add    $0x38,%eax
81001f04:	eb 61                	jmp    81001f67 <_free_r+0x31f>
81001f06:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f09:	c1 e8 09             	shr    $0x9,%eax
81001f0c:	83 f8 14             	cmp    $0x14,%eax
81001f0f:	77 0b                	ja     81001f1c <_free_r+0x2d4>
81001f11:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f14:	c1 e8 09             	shr    $0x9,%eax
81001f17:	83 c0 5b             	add    $0x5b,%eax
81001f1a:	eb 4b                	jmp    81001f67 <_free_r+0x31f>
81001f1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f1f:	c1 e8 09             	shr    $0x9,%eax
81001f22:	83 f8 54             	cmp    $0x54,%eax
81001f25:	77 0b                	ja     81001f32 <_free_r+0x2ea>
81001f27:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f2a:	c1 e8 0c             	shr    $0xc,%eax
81001f2d:	83 c0 6e             	add    $0x6e,%eax
81001f30:	eb 35                	jmp    81001f67 <_free_r+0x31f>
81001f32:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f35:	c1 e8 09             	shr    $0x9,%eax
81001f38:	3d 54 01 00 00       	cmp    $0x154,%eax
81001f3d:	77 0b                	ja     81001f4a <_free_r+0x302>
81001f3f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f42:	c1 e8 0f             	shr    $0xf,%eax
81001f45:	83 c0 77             	add    $0x77,%eax
81001f48:	eb 1d                	jmp    81001f67 <_free_r+0x31f>
81001f4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f4d:	c1 e8 09             	shr    $0x9,%eax
81001f50:	3d 54 05 00 00       	cmp    $0x554,%eax
81001f55:	77 0b                	ja     81001f62 <_free_r+0x31a>
81001f57:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f5a:	c1 e8 12             	shr    $0x12,%eax
81001f5d:	83 c0 7c             	add    $0x7c,%eax
81001f60:	eb 05                	jmp    81001f67 <_free_r+0x31f>
81001f62:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001f67:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001f6a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f6d:	83 c0 01             	add    $0x1,%eax
81001f70:	01 c0                	add    %eax,%eax
81001f72:	c1 e0 02             	shl    $0x2,%eax
81001f75:	05 60 90 00 81       	add    $0x81009060,%eax
81001f7a:	83 e8 08             	sub    $0x8,%eax
81001f7d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f80:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f83:	8b 40 08             	mov    0x8(%eax),%eax
81001f86:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f89:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f8c:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001f8f:	75 36                	jne    81001fc7 <_free_r+0x37f>
81001f91:	b8 60 90 00 81       	mov    $0x81009060,%eax
81001f96:	8b 58 04             	mov    0x4(%eax),%ebx
81001f99:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001f9c:	8d 50 03             	lea    0x3(%eax),%edx
81001f9f:	85 c0                	test   %eax,%eax
81001fa1:	0f 48 c2             	cmovs  %edx,%eax
81001fa4:	c1 f8 02             	sar    $0x2,%eax
81001fa7:	ba 01 00 00 00       	mov    $0x1,%edx
81001fac:	89 c1                	mov    %eax,%ecx
81001fae:	d3 e2                	shl    %cl,%edx
81001fb0:	89 d0                	mov    %edx,%eax
81001fb2:	ba 60 90 00 81       	mov    $0x81009060,%edx
81001fb7:	09 d8                	or     %ebx,%eax
81001fb9:	89 42 04             	mov    %eax,0x4(%edx)
81001fbc:	eb 28                	jmp    81001fe6 <_free_r+0x39e>
81001fbe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fc1:	8b 40 08             	mov    0x8(%eax),%eax
81001fc4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fc7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fca:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001fcd:	74 0e                	je     81001fdd <_free_r+0x395>
81001fcf:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fd2:	8b 40 04             	mov    0x4(%eax),%eax
81001fd5:	83 e0 fc             	and    $0xfffffffc,%eax
81001fd8:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001fdb:	72 e1                	jb     81001fbe <_free_r+0x376>
81001fdd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fe0:	8b 40 0c             	mov    0xc(%eax),%eax
81001fe3:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fe6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fe9:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001fec:	89 50 0c             	mov    %edx,0xc(%eax)
81001fef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ff2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ff5:	89 50 08             	mov    %edx,0x8(%eax)
81001ff8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ffb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ffe:	89 50 08             	mov    %edx,0x8(%eax)
81002001:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002004:	8b 50 08             	mov    0x8(%eax),%edx
81002007:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100200a:	89 50 0c             	mov    %edx,0xc(%eax)
8100200d:	83 ec 0c             	sub    $0xc,%esp
81002010:	ff 75 08             	push   0x8(%ebp)
81002013:	e8 d6 24 00 00       	call   810044ee <__malloc_unlock>
81002018:	83 c4 10             	add    $0x10,%esp
8100201b:	eb 01                	jmp    8100201e <_free_r+0x3d6>
8100201d:	90                   	nop
8100201e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002021:	c9                   	leave  
81002022:	c3                   	ret    

81002023 <_malloc_trim_r>:
81002023:	55                   	push   %ebp
81002024:	89 e5                	mov    %esp,%ebp
81002026:	83 ec 28             	sub    $0x28,%esp
81002029:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002030:	83 ec 0c             	sub    $0xc,%esp
81002033:	ff 75 08             	push   0x8(%ebp)
81002036:	e8 ad 24 00 00       	call   810044e8 <__malloc_lock>
8100203b:	83 c4 10             	add    $0x10,%esp
8100203e:	b8 60 90 00 81       	mov    $0x81009060,%eax
81002043:	8b 40 08             	mov    0x8(%eax),%eax
81002046:	8b 40 04             	mov    0x4(%eax),%eax
81002049:	83 e0 fc             	and    $0xfffffffc,%eax
8100204c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100204f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002052:	2b 45 0c             	sub    0xc(%ebp),%eax
81002055:	89 c2                	mov    %eax,%edx
81002057:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100205a:	01 d0                	add    %edx,%eax
8100205c:	83 e8 11             	sub    $0x11,%eax
8100205f:	ba 00 00 00 00       	mov    $0x0,%edx
81002064:	f7 75 f4             	divl   -0xc(%ebp)
81002067:	83 e8 01             	sub    $0x1,%eax
8100206a:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8100206e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002071:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002074:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002077:	7d 18                	jge    81002091 <_malloc_trim_r+0x6e>
81002079:	83 ec 0c             	sub    $0xc,%esp
8100207c:	ff 75 08             	push   0x8(%ebp)
8100207f:	e8 6a 24 00 00       	call   810044ee <__malloc_unlock>
81002084:	83 c4 10             	add    $0x10,%esp
81002087:	b8 00 00 00 00       	mov    $0x0,%eax
8100208c:	e9 f1 00 00 00       	jmp    81002182 <_malloc_trim_r+0x15f>
81002091:	83 ec 08             	sub    $0x8,%esp
81002094:	6a 00                	push   $0x0
81002096:	ff 75 08             	push   0x8(%ebp)
81002099:	e8 04 35 00 00       	call   810055a2 <_sbrk_r>
8100209e:	83 c4 10             	add    $0x10,%esp
810020a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020a4:	b8 60 90 00 81       	mov    $0x81009060,%eax
810020a9:	8b 50 08             	mov    0x8(%eax),%edx
810020ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020af:	01 d0                	add    %edx,%eax
810020b1:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810020b4:	74 18                	je     810020ce <_malloc_trim_r+0xab>
810020b6:	83 ec 0c             	sub    $0xc,%esp
810020b9:	ff 75 08             	push   0x8(%ebp)
810020bc:	e8 2d 24 00 00       	call   810044ee <__malloc_unlock>
810020c1:	83 c4 10             	add    $0x10,%esp
810020c4:	b8 00 00 00 00       	mov    $0x0,%eax
810020c9:	e9 b4 00 00 00       	jmp    81002182 <_malloc_trim_r+0x15f>
810020ce:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020d1:	f7 d8                	neg    %eax
810020d3:	83 ec 08             	sub    $0x8,%esp
810020d6:	50                   	push   %eax
810020d7:	ff 75 08             	push   0x8(%ebp)
810020da:	e8 c3 34 00 00       	call   810055a2 <_sbrk_r>
810020df:	83 c4 10             	add    $0x10,%esp
810020e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810020e5:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810020e9:	75 61                	jne    8100214c <_malloc_trim_r+0x129>
810020eb:	83 ec 08             	sub    $0x8,%esp
810020ee:	6a 00                	push   $0x0
810020f0:	ff 75 08             	push   0x8(%ebp)
810020f3:	e8 aa 34 00 00       	call   810055a2 <_sbrk_r>
810020f8:	83 c4 10             	add    $0x10,%esp
810020fb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020fe:	b8 60 90 00 81       	mov    $0x81009060,%eax
81002103:	8b 50 08             	mov    0x8(%eax),%edx
81002106:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002109:	29 d0                	sub    %edx,%eax
8100210b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100210e:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002112:	7e 23                	jle    81002137 <_malloc_trim_r+0x114>
81002114:	8b 15 6c 94 00 81    	mov    0x8100946c,%edx
8100211a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100211d:	29 d0                	sub    %edx,%eax
8100211f:	a3 60 9d 00 81       	mov    %eax,0x81009d60
81002124:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002127:	83 c8 01             	or     $0x1,%eax
8100212a:	89 c2                	mov    %eax,%edx
8100212c:	b8 60 90 00 81       	mov    $0x81009060,%eax
81002131:	8b 40 08             	mov    0x8(%eax),%eax
81002134:	89 50 04             	mov    %edx,0x4(%eax)
81002137:	83 ec 0c             	sub    $0xc,%esp
8100213a:	ff 75 08             	push   0x8(%ebp)
8100213d:	e8 ac 23 00 00       	call   810044ee <__malloc_unlock>
81002142:	83 c4 10             	add    $0x10,%esp
81002145:	b8 00 00 00 00       	mov    $0x0,%eax
8100214a:	eb 36                	jmp    81002182 <_malloc_trim_r+0x15f>
8100214c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214f:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002152:	83 c8 01             	or     $0x1,%eax
81002155:	89 c2                	mov    %eax,%edx
81002157:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100215c:	8b 40 08             	mov    0x8(%eax),%eax
8100215f:	89 50 04             	mov    %edx,0x4(%eax)
81002162:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81002167:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100216a:	a3 60 9d 00 81       	mov    %eax,0x81009d60
8100216f:	83 ec 0c             	sub    $0xc,%esp
81002172:	ff 75 08             	push   0x8(%ebp)
81002175:	e8 74 23 00 00       	call   810044ee <__malloc_unlock>
8100217a:	83 c4 10             	add    $0x10,%esp
8100217d:	b8 01 00 00 00       	mov    $0x1,%eax
81002182:	c9                   	leave  
81002183:	c3                   	ret    

81002184 <_fseek_r>:
81002184:	55                   	push   %ebp
81002185:	89 e5                	mov    %esp,%ebp
81002187:	83 ec 08             	sub    $0x8,%esp
8100218a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100218d:	ff 75 14             	push   0x14(%ebp)
81002190:	ff 75 10             	push   0x10(%ebp)
81002193:	50                   	push   %eax
81002194:	ff 75 08             	push   0x8(%ebp)
81002197:	e8 25 00 00 00       	call   810021c1 <_fseeko_r>
8100219c:	83 c4 10             	add    $0x10,%esp
8100219f:	c9                   	leave  
810021a0:	c3                   	ret    

810021a1 <fseek>:
810021a1:	55                   	push   %ebp
810021a2:	89 e5                	mov    %esp,%ebp
810021a4:	83 ec 08             	sub    $0x8,%esp
810021a7:	8b 55 08             	mov    0x8(%ebp),%edx
810021aa:	a1 44 90 00 81       	mov    0x81009044,%eax
810021af:	ff 75 10             	push   0x10(%ebp)
810021b2:	ff 75 0c             	push   0xc(%ebp)
810021b5:	52                   	push   %edx
810021b6:	50                   	push   %eax
810021b7:	e8 c8 ff ff ff       	call   81002184 <_fseek_r>
810021bc:	83 c4 10             	add    $0x10,%esp
810021bf:	c9                   	leave  
810021c0:	c3                   	ret    

810021c1 <_fseeko_r>:
810021c1:	55                   	push   %ebp
810021c2:	89 e5                	mov    %esp,%ebp
810021c4:	56                   	push   %esi
810021c5:	53                   	push   %ebx
810021c6:	83 ec 60             	sub    $0x60,%esp
810021c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810021cc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810021d3:	8b 45 08             	mov    0x8(%ebp),%eax
810021d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810021d9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810021dd:	74 18                	je     810021f7 <_fseeko_r+0x36>
810021df:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810021e2:	8b 40 38             	mov    0x38(%eax),%eax
810021e5:	85 c0                	test   %eax,%eax
810021e7:	75 0e                	jne    810021f7 <_fseeko_r+0x36>
810021e9:	83 ec 0c             	sub    $0xc,%esp
810021ec:	ff 75 e4             	push   -0x1c(%ebp)
810021ef:	e8 64 f5 ff ff       	call   81001758 <__sinit>
810021f4:	83 c4 10             	add    $0x10,%esp
810021f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810021fb:	98                   	cwtl   
810021fc:	25 00 01 00 00       	and    $0x100,%eax
81002201:	85 c0                	test   %eax,%eax
81002203:	74 1b                	je     81002220 <_fseeko_r+0x5f>
81002205:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002209:	98                   	cwtl   
8100220a:	83 e0 08             	and    $0x8,%eax
8100220d:	85 c0                	test   %eax,%eax
8100220f:	74 0f                	je     81002220 <_fseeko_r+0x5f>
81002211:	83 ec 08             	sub    $0x8,%esp
81002214:	53                   	push   %ebx
81002215:	ff 75 08             	push   0x8(%ebp)
81002218:	e8 38 f0 ff ff       	call   81001255 <_fflush_r>
8100221d:	83 c4 10             	add    $0x10,%esp
81002220:	8b 43 28             	mov    0x28(%ebx),%eax
81002223:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002226:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100222a:	75 13                	jne    8100223f <_fseeko_r+0x7e>
8100222c:	8b 45 08             	mov    0x8(%ebp),%eax
8100222f:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002235:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100223a:	e9 2c 04 00 00       	jmp    8100266b <_fseeko_r+0x4aa>
8100223f:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002243:	0f 84 bc 00 00 00    	je     81002305 <_fseeko_r+0x144>
81002249:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
8100224d:	0f 8f bb 00 00 00    	jg     8100230e <_fseeko_r+0x14d>
81002253:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002257:	0f 84 a8 00 00 00    	je     81002305 <_fseeko_r+0x144>
8100225d:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81002261:	0f 85 a7 00 00 00    	jne    8100230e <_fseeko_r+0x14d>
81002267:	83 ec 08             	sub    $0x8,%esp
8100226a:	53                   	push   %ebx
8100226b:	ff 75 08             	push   0x8(%ebp)
8100226e:	e8 e2 ef ff ff       	call   81001255 <_fflush_r>
81002273:	83 c4 10             	add    $0x10,%esp
81002276:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100227a:	98                   	cwtl   
8100227b:	25 00 10 00 00       	and    $0x1000,%eax
81002280:	85 c0                	test   %eax,%eax
81002282:	74 08                	je     8100228c <_fseeko_r+0xcb>
81002284:	8b 43 50             	mov    0x50(%ebx),%eax
81002287:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100228a:	eb 26                	jmp    810022b2 <_fseeko_r+0xf1>
8100228c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100228f:	6a 01                	push   $0x1
81002291:	6a 00                	push   $0x0
81002293:	50                   	push   %eax
81002294:	ff 75 08             	push   0x8(%ebp)
81002297:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100229a:	ff d0                	call   *%eax
8100229c:	83 c4 10             	add    $0x10,%esp
8100229f:	89 45 f0             	mov    %eax,-0x10(%ebp)
810022a2:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810022a6:	75 0a                	jne    810022b2 <_fseeko_r+0xf1>
810022a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810022ad:	e9 b9 03 00 00       	jmp    8100266b <_fseeko_r+0x4aa>
810022b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022b6:	98                   	cwtl   
810022b7:	83 e0 04             	and    $0x4,%eax
810022ba:	85 c0                	test   %eax,%eax
810022bc:	74 15                	je     810022d3 <_fseeko_r+0x112>
810022be:	8b 43 04             	mov    0x4(%ebx),%eax
810022c1:	29 45 f0             	sub    %eax,-0x10(%ebp)
810022c4:	8b 43 30             	mov    0x30(%ebx),%eax
810022c7:	85 c0                	test   %eax,%eax
810022c9:	74 24                	je     810022ef <_fseeko_r+0x12e>
810022cb:	8b 43 3c             	mov    0x3c(%ebx),%eax
810022ce:	29 45 f0             	sub    %eax,-0x10(%ebp)
810022d1:	eb 1c                	jmp    810022ef <_fseeko_r+0x12e>
810022d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810022d7:	98                   	cwtl   
810022d8:	83 e0 08             	and    $0x8,%eax
810022db:	85 c0                	test   %eax,%eax
810022dd:	74 10                	je     810022ef <_fseeko_r+0x12e>
810022df:	8b 03                	mov    (%ebx),%eax
810022e1:	85 c0                	test   %eax,%eax
810022e3:	74 0a                	je     810022ef <_fseeko_r+0x12e>
810022e5:	8b 03                	mov    (%ebx),%eax
810022e7:	8b 53 10             	mov    0x10(%ebx),%edx
810022ea:	29 d0                	sub    %edx,%eax
810022ec:	01 45 f0             	add    %eax,-0x10(%ebp)
810022ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022f2:	01 45 10             	add    %eax,0x10(%ebp)
810022f5:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
810022fc:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002303:	eb 1c                	jmp    81002321 <_fseeko_r+0x160>
81002305:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100230c:	eb 13                	jmp    81002321 <_fseeko_r+0x160>
8100230e:	8b 45 08             	mov    0x8(%ebp),%eax
81002311:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81002317:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100231c:	e9 4a 03 00 00       	jmp    8100266b <_fseeko_r+0x4aa>
81002321:	8b 43 10             	mov    0x10(%ebx),%eax
81002324:	85 c0                	test   %eax,%eax
81002326:	75 0f                	jne    81002337 <_fseeko_r+0x176>
81002328:	83 ec 08             	sub    $0x8,%esp
8100232b:	53                   	push   %ebx
8100232c:	ff 75 08             	push   0x8(%ebp)
8100232f:	e8 8b 13 00 00       	call   810036bf <__smakebuf_r>
81002334:	83 c4 10             	add    $0x10,%esp
81002337:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100233b:	98                   	cwtl   
8100233c:	25 1a 08 00 00       	and    $0x81a,%eax
81002341:	85 c0                	test   %eax,%eax
81002343:	0f 85 7d 02 00 00    	jne    810025c6 <_fseeko_r+0x405>
81002349:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100234d:	98                   	cwtl   
8100234e:	25 00 04 00 00       	and    $0x400,%eax
81002353:	85 c0                	test   %eax,%eax
81002355:	75 5f                	jne    810023b6 <_fseeko_r+0x1f5>
81002357:	81 7d e0 44 59 00 81 	cmpl   $0x81005944,-0x20(%ebp)
8100235e:	75 34                	jne    81002394 <_fseeko_r+0x1d3>
81002360:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002364:	66 85 c0             	test   %ax,%ax
81002367:	78 2b                	js     81002394 <_fseeko_r+0x1d3>
81002369:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100236d:	98                   	cwtl   
8100236e:	83 ec 04             	sub    $0x4,%esp
81002371:	8d 55 98             	lea    -0x68(%ebp),%edx
81002374:	52                   	push   %edx
81002375:	50                   	push   %eax
81002376:	ff 75 08             	push   0x8(%ebp)
81002379:	e8 14 03 00 00       	call   81002692 <_fstat_r>
8100237e:	83 c4 10             	add    $0x10,%esp
81002381:	85 c0                	test   %eax,%eax
81002383:	75 0f                	jne    81002394 <_fseeko_r+0x1d3>
81002385:	8b 45 9c             	mov    -0x64(%ebp),%eax
81002388:	25 00 f0 00 00       	and    $0xf000,%eax
8100238d:	3d 00 80 00 00       	cmp    $0x8000,%eax
81002392:	74 10                	je     810023a4 <_fseeko_r+0x1e3>
81002394:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002398:	80 cc 08             	or     $0x8,%ah
8100239b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100239f:	e9 2f 02 00 00       	jmp    810025d3 <_fseeko_r+0x412>
810023a4:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
810023ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023af:	80 cc 04             	or     $0x4,%ah
810023b2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810023b6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810023ba:	75 08                	jne    810023c4 <_fseeko_r+0x203>
810023bc:	8b 45 10             	mov    0x10(%ebp),%eax
810023bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023c2:	eb 2b                	jmp    810023ef <_fseeko_r+0x22e>
810023c4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810023c8:	98                   	cwtl   
810023c9:	83 ec 04             	sub    $0x4,%esp
810023cc:	8d 55 98             	lea    -0x68(%ebp),%edx
810023cf:	52                   	push   %edx
810023d0:	50                   	push   %eax
810023d1:	ff 75 08             	push   0x8(%ebp)
810023d4:	e8 b9 02 00 00       	call   81002692 <_fstat_r>
810023d9:	83 c4 10             	add    $0x10,%esp
810023dc:	85 c0                	test   %eax,%eax
810023de:	0f 85 e5 01 00 00    	jne    810025c9 <_fseeko_r+0x408>
810023e4:	8b 55 a8             	mov    -0x58(%ebp),%edx
810023e7:	8b 45 10             	mov    0x10(%ebp),%eax
810023ea:	01 d0                	add    %edx,%eax
810023ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023ef:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810023f3:	75 49                	jne    8100243e <_fseeko_r+0x27d>
810023f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810023f9:	98                   	cwtl   
810023fa:	25 00 10 00 00       	and    $0x1000,%eax
810023ff:	85 c0                	test   %eax,%eax
81002401:	74 08                	je     8100240b <_fseeko_r+0x24a>
81002403:	8b 43 50             	mov    0x50(%ebx),%eax
81002406:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002409:	eb 20                	jmp    8100242b <_fseeko_r+0x26a>
8100240b:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100240e:	6a 01                	push   $0x1
81002410:	6a 00                	push   $0x0
81002412:	50                   	push   %eax
81002413:	ff 75 08             	push   0x8(%ebp)
81002416:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002419:	ff d0                	call   *%eax
8100241b:	83 c4 10             	add    $0x10,%esp
8100241e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002421:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002425:	0f 84 a1 01 00 00    	je     810025cc <_fseeko_r+0x40b>
8100242b:	8b 43 04             	mov    0x4(%ebx),%eax
8100242e:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002431:	8b 43 30             	mov    0x30(%ebx),%eax
81002434:	85 c0                	test   %eax,%eax
81002436:	74 06                	je     8100243e <_fseeko_r+0x27d>
81002438:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100243b:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100243e:	8b 43 30             	mov    0x30(%ebx),%eax
81002441:	85 c0                	test   %eax,%eax
81002443:	74 22                	je     81002467 <_fseeko_r+0x2a6>
81002445:	8b 43 04             	mov    0x4(%ebx),%eax
81002448:	01 45 f0             	add    %eax,-0x10(%ebp)
8100244b:	8b 43 38             	mov    0x38(%ebx),%eax
8100244e:	8b 53 10             	mov    0x10(%ebx),%edx
81002451:	29 d0                	sub    %edx,%eax
81002453:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002456:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002459:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100245c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100245f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002462:	01 45 ec             	add    %eax,-0x14(%ebp)
81002465:	eb 19                	jmp    81002480 <_fseeko_r+0x2bf>
81002467:	8b 03                	mov    (%ebx),%eax
81002469:	8b 53 10             	mov    0x10(%ebx),%edx
8100246c:	29 d0                	sub    %edx,%eax
8100246e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002471:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002474:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002477:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100247a:	8b 43 04             	mov    0x4(%ebx),%eax
8100247d:	01 45 ec             	add    %eax,-0x14(%ebp)
81002480:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002483:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81002486:	7c 7c                	jl     81002504 <_fseeko_r+0x343>
81002488:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100248b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100248e:	01 c2                	add    %eax,%edx
81002490:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002493:	39 c2                	cmp    %eax,%edx
81002495:	76 6d                	jbe    81002504 <_fseeko_r+0x343>
81002497:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100249a:	2b 45 f0             	sub    -0x10(%ebp),%eax
8100249d:	89 c6                	mov    %eax,%esi
8100249f:	8b 43 10             	mov    0x10(%ebx),%eax
810024a2:	89 f2                	mov    %esi,%edx
810024a4:	01 d0                	add    %edx,%eax
810024a6:	89 03                	mov    %eax,(%ebx)
810024a8:	89 f2                	mov    %esi,%edx
810024aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810024ad:	29 d0                	sub    %edx,%eax
810024af:	89 43 04             	mov    %eax,0x4(%ebx)
810024b2:	8b 43 30             	mov    0x30(%ebx),%eax
810024b5:	85 c0                	test   %eax,%eax
810024b7:	74 23                	je     810024dc <_fseeko_r+0x31b>
810024b9:	8b 53 30             	mov    0x30(%ebx),%edx
810024bc:	8d 43 40             	lea    0x40(%ebx),%eax
810024bf:	39 c2                	cmp    %eax,%edx
810024c1:	74 12                	je     810024d5 <_fseeko_r+0x314>
810024c3:	8b 43 30             	mov    0x30(%ebx),%eax
810024c6:	83 ec 08             	sub    $0x8,%esp
810024c9:	50                   	push   %eax
810024ca:	ff 75 08             	push   0x8(%ebp)
810024cd:	e8 76 f7 ff ff       	call   81001c48 <_free_r>
810024d2:	83 c4 10             	add    $0x10,%esp
810024d5:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810024dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024e0:	83 e0 df             	and    $0xffffffdf,%eax
810024e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024e7:	8d 43 5c             	lea    0x5c(%ebx),%eax
810024ea:	83 ec 04             	sub    $0x4,%esp
810024ed:	6a 08                	push   $0x8
810024ef:	6a 00                	push   $0x0
810024f1:	50                   	push   %eax
810024f2:	e8 69 1f 00 00       	call   81004460 <memset>
810024f7:	83 c4 10             	add    $0x10,%esp
810024fa:	b8 00 00 00 00       	mov    $0x0,%eax
810024ff:	e9 67 01 00 00       	jmp    8100266b <_fseeko_r+0x4aa>
81002504:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002507:	f7 d8                	neg    %eax
81002509:	23 45 f4             	and    -0xc(%ebp),%eax
8100250c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100250f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002512:	6a 00                	push   $0x0
81002514:	ff 75 f0             	push   -0x10(%ebp)
81002517:	50                   	push   %eax
81002518:	ff 75 08             	push   0x8(%ebp)
8100251b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100251e:	ff d0                	call   *%eax
81002520:	83 c4 10             	add    $0x10,%esp
81002523:	83 f8 ff             	cmp    $0xffffffff,%eax
81002526:	0f 84 a3 00 00 00    	je     810025cf <_fseeko_r+0x40e>
8100252c:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002533:	8b 43 10             	mov    0x10(%ebx),%eax
81002536:	89 03                	mov    %eax,(%ebx)
81002538:	8b 43 30             	mov    0x30(%ebx),%eax
8100253b:	85 c0                	test   %eax,%eax
8100253d:	74 23                	je     81002562 <_fseeko_r+0x3a1>
8100253f:	8b 53 30             	mov    0x30(%ebx),%edx
81002542:	8d 43 40             	lea    0x40(%ebx),%eax
81002545:	39 c2                	cmp    %eax,%edx
81002547:	74 12                	je     8100255b <_fseeko_r+0x39a>
81002549:	8b 43 30             	mov    0x30(%ebx),%eax
8100254c:	83 ec 08             	sub    $0x8,%esp
8100254f:	50                   	push   %eax
81002550:	ff 75 08             	push   0x8(%ebp)
81002553:	e8 f0 f6 ff ff       	call   81001c48 <_free_r>
81002558:	83 c4 10             	add    $0x10,%esp
8100255b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002562:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002566:	83 e0 df             	and    $0xffffffdf,%eax
81002569:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100256d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002570:	2b 45 f0             	sub    -0x10(%ebp),%eax
81002573:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002576:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100257a:	74 2d                	je     810025a9 <_fseeko_r+0x3e8>
8100257c:	83 ec 08             	sub    $0x8,%esp
8100257f:	53                   	push   %ebx
81002580:	ff 75 08             	push   0x8(%ebp)
81002583:	e8 19 2e 00 00       	call   810053a1 <__srefill_r>
81002588:	83 c4 10             	add    $0x10,%esp
8100258b:	85 c0                	test   %eax,%eax
8100258d:	75 43                	jne    810025d2 <_fseeko_r+0x411>
8100258f:	8b 43 04             	mov    0x4(%ebx),%eax
81002592:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002595:	77 3b                	ja     810025d2 <_fseeko_r+0x411>
81002597:	8b 13                	mov    (%ebx),%edx
81002599:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100259c:	01 d0                	add    %edx,%eax
8100259e:	89 03                	mov    %eax,(%ebx)
810025a0:	8b 43 04             	mov    0x4(%ebx),%eax
810025a3:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025a6:	89 43 04             	mov    %eax,0x4(%ebx)
810025a9:	8d 43 5c             	lea    0x5c(%ebx),%eax
810025ac:	83 ec 04             	sub    $0x4,%esp
810025af:	6a 08                	push   $0x8
810025b1:	6a 00                	push   $0x0
810025b3:	50                   	push   %eax
810025b4:	e8 a7 1e 00 00       	call   81004460 <memset>
810025b9:	83 c4 10             	add    $0x10,%esp
810025bc:	b8 00 00 00 00       	mov    $0x0,%eax
810025c1:	e9 a5 00 00 00       	jmp    8100266b <_fseeko_r+0x4aa>
810025c6:	90                   	nop
810025c7:	eb 0a                	jmp    810025d3 <_fseeko_r+0x412>
810025c9:	90                   	nop
810025ca:	eb 07                	jmp    810025d3 <_fseeko_r+0x412>
810025cc:	90                   	nop
810025cd:	eb 04                	jmp    810025d3 <_fseeko_r+0x412>
810025cf:	90                   	nop
810025d0:	eb 01                	jmp    810025d3 <_fseeko_r+0x412>
810025d2:	90                   	nop
810025d3:	83 ec 08             	sub    $0x8,%esp
810025d6:	53                   	push   %ebx
810025d7:	ff 75 08             	push   0x8(%ebp)
810025da:	e8 76 ec ff ff       	call   81001255 <_fflush_r>
810025df:	83 c4 10             	add    $0x10,%esp
810025e2:	85 c0                	test   %eax,%eax
810025e4:	75 1a                	jne    81002600 <_fseeko_r+0x43f>
810025e6:	8b 43 1c             	mov    0x1c(%ebx),%eax
810025e9:	ff 75 14             	push   0x14(%ebp)
810025ec:	ff 75 10             	push   0x10(%ebp)
810025ef:	50                   	push   %eax
810025f0:	ff 75 08             	push   0x8(%ebp)
810025f3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810025f6:	ff d0                	call   *%eax
810025f8:	83 c4 10             	add    $0x10,%esp
810025fb:	83 f8 ff             	cmp    $0xffffffff,%eax
810025fe:	75 07                	jne    81002607 <_fseeko_r+0x446>
81002600:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002605:	eb 64                	jmp    8100266b <_fseeko_r+0x4aa>
81002607:	8b 43 30             	mov    0x30(%ebx),%eax
8100260a:	85 c0                	test   %eax,%eax
8100260c:	74 23                	je     81002631 <_fseeko_r+0x470>
8100260e:	8b 53 30             	mov    0x30(%ebx),%edx
81002611:	8d 43 40             	lea    0x40(%ebx),%eax
81002614:	39 c2                	cmp    %eax,%edx
81002616:	74 12                	je     8100262a <_fseeko_r+0x469>
81002618:	8b 43 30             	mov    0x30(%ebx),%eax
8100261b:	83 ec 08             	sub    $0x8,%esp
8100261e:	50                   	push   %eax
8100261f:	ff 75 08             	push   0x8(%ebp)
81002622:	e8 21 f6 ff ff       	call   81001c48 <_free_r>
81002627:	83 c4 10             	add    $0x10,%esp
8100262a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002631:	8b 43 10             	mov    0x10(%ebx),%eax
81002634:	89 03                	mov    %eax,(%ebx)
81002636:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100263d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002641:	83 e0 df             	and    $0xffffffdf,%eax
81002644:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002648:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100264c:	80 e4 f7             	and    $0xf7,%ah
8100264f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002653:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002656:	83 ec 04             	sub    $0x4,%esp
81002659:	6a 08                	push   $0x8
8100265b:	6a 00                	push   $0x0
8100265d:	50                   	push   %eax
8100265e:	e8 fd 1d 00 00       	call   81004460 <memset>
81002663:	83 c4 10             	add    $0x10,%esp
81002666:	b8 00 00 00 00       	mov    $0x0,%eax
8100266b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100266e:	5b                   	pop    %ebx
8100266f:	5e                   	pop    %esi
81002670:	5d                   	pop    %ebp
81002671:	c3                   	ret    

81002672 <fseeko>:
81002672:	55                   	push   %ebp
81002673:	89 e5                	mov    %esp,%ebp
81002675:	83 ec 08             	sub    $0x8,%esp
81002678:	8b 55 08             	mov    0x8(%ebp),%edx
8100267b:	a1 44 90 00 81       	mov    0x81009044,%eax
81002680:	ff 75 10             	push   0x10(%ebp)
81002683:	ff 75 0c             	push   0xc(%ebp)
81002686:	52                   	push   %edx
81002687:	50                   	push   %eax
81002688:	e8 34 fb ff ff       	call   810021c1 <_fseeko_r>
8100268d:	83 c4 10             	add    $0x10,%esp
81002690:	c9                   	leave  
81002691:	c3                   	ret    

81002692 <_fstat_r>:
81002692:	55                   	push   %ebp
81002693:	89 e5                	mov    %esp,%ebp
81002695:	83 ec 18             	sub    $0x18,%esp
81002698:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
8100269f:	00 00 00 
810026a2:	83 ec 08             	sub    $0x8,%esp
810026a5:	ff 75 10             	push   0x10(%ebp)
810026a8:	ff 75 0c             	push   0xc(%ebp)
810026ab:	e8 21 e6 ff ff       	call   81000cd1 <fstat>
810026b0:	83 c4 10             	add    $0x10,%esp
810026b3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026b6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810026ba:	75 14                	jne    810026d0 <_fstat_r+0x3e>
810026bc:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
810026c1:	85 c0                	test   %eax,%eax
810026c3:	74 0b                	je     810026d0 <_fstat_r+0x3e>
810026c5:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
810026cb:	8b 45 08             	mov    0x8(%ebp),%eax
810026ce:	89 10                	mov    %edx,(%eax)
810026d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026d3:	c9                   	leave  
810026d4:	c3                   	ret    

810026d5 <_fwalk>:
810026d5:	55                   	push   %ebp
810026d6:	89 e5                	mov    %esp,%ebp
810026d8:	57                   	push   %edi
810026d9:	56                   	push   %esi
810026da:	53                   	push   %ebx
810026db:	83 ec 1c             	sub    $0x1c,%esp
810026de:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810026e5:	8b 45 08             	mov    0x8(%ebp),%eax
810026e8:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810026ee:	eb 3e                	jmp    8100272e <_fwalk+0x59>
810026f0:	8b 5e 08             	mov    0x8(%esi),%ebx
810026f3:	8b 7e 04             	mov    0x4(%esi),%edi
810026f6:	eb 2d                	jmp    81002725 <_fwalk+0x50>
810026f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026fc:	66 85 c0             	test   %ax,%ax
810026ff:	74 21                	je     81002722 <_fwalk+0x4d>
81002701:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002705:	66 83 f8 01          	cmp    $0x1,%ax
81002709:	74 17                	je     81002722 <_fwalk+0x4d>
8100270b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100270f:	66 83 f8 ff          	cmp    $0xffff,%ax
81002713:	74 0d                	je     81002722 <_fwalk+0x4d>
81002715:	83 ec 0c             	sub    $0xc,%esp
81002718:	53                   	push   %ebx
81002719:	ff 55 0c             	call   *0xc(%ebp)
8100271c:	83 c4 10             	add    $0x10,%esp
8100271f:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002722:	83 c3 68             	add    $0x68,%ebx
81002725:	83 ef 01             	sub    $0x1,%edi
81002728:	85 ff                	test   %edi,%edi
8100272a:	79 cc                	jns    810026f8 <_fwalk+0x23>
8100272c:	8b 36                	mov    (%esi),%esi
8100272e:	85 f6                	test   %esi,%esi
81002730:	75 be                	jne    810026f0 <_fwalk+0x1b>
81002732:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002735:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002738:	5b                   	pop    %ebx
81002739:	5e                   	pop    %esi
8100273a:	5f                   	pop    %edi
8100273b:	5d                   	pop    %ebp
8100273c:	c3                   	ret    

8100273d <_fwalk_reent>:
8100273d:	55                   	push   %ebp
8100273e:	89 e5                	mov    %esp,%ebp
81002740:	57                   	push   %edi
81002741:	56                   	push   %esi
81002742:	53                   	push   %ebx
81002743:	83 ec 1c             	sub    $0x1c,%esp
81002746:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100274d:	8b 45 08             	mov    0x8(%ebp),%eax
81002750:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002756:	eb 41                	jmp    81002799 <_fwalk_reent+0x5c>
81002758:	8b 5e 08             	mov    0x8(%esi),%ebx
8100275b:	8b 7e 04             	mov    0x4(%esi),%edi
8100275e:	eb 30                	jmp    81002790 <_fwalk_reent+0x53>
81002760:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002764:	66 85 c0             	test   %ax,%ax
81002767:	74 24                	je     8100278d <_fwalk_reent+0x50>
81002769:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100276d:	66 83 f8 01          	cmp    $0x1,%ax
81002771:	74 1a                	je     8100278d <_fwalk_reent+0x50>
81002773:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002777:	66 83 f8 ff          	cmp    $0xffff,%ax
8100277b:	74 10                	je     8100278d <_fwalk_reent+0x50>
8100277d:	83 ec 08             	sub    $0x8,%esp
81002780:	53                   	push   %ebx
81002781:	ff 75 08             	push   0x8(%ebp)
81002784:	ff 55 0c             	call   *0xc(%ebp)
81002787:	83 c4 10             	add    $0x10,%esp
8100278a:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100278d:	83 c3 68             	add    $0x68,%ebx
81002790:	83 ef 01             	sub    $0x1,%edi
81002793:	85 ff                	test   %edi,%edi
81002795:	79 c9                	jns    81002760 <_fwalk_reent+0x23>
81002797:	8b 36                	mov    (%esi),%esi
81002799:	85 f6                	test   %esi,%esi
8100279b:	75 bb                	jne    81002758 <_fwalk_reent+0x1b>
8100279d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810027a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
810027a3:	5b                   	pop    %ebx
810027a4:	5e                   	pop    %esi
810027a5:	5f                   	pop    %edi
810027a6:	5d                   	pop    %ebp
810027a7:	c3                   	ret    

810027a8 <_fwrite_r>:
810027a8:	55                   	push   %ebp
810027a9:	89 e5                	mov    %esp,%ebp
810027ab:	83 ec 28             	sub    $0x28,%esp
810027ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810027b1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810027b4:	8b 45 14             	mov    0x14(%ebp),%eax
810027b7:	0f af 45 10          	imul   0x10(%ebp),%eax
810027bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027c1:	89 45 e0             	mov    %eax,-0x20(%ebp)
810027c4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810027c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027ca:	8d 45 dc             	lea    -0x24(%ebp),%eax
810027cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810027d0:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810027d7:	8b 45 08             	mov    0x8(%ebp),%eax
810027da:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027dd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810027e1:	74 18                	je     810027fb <_fwrite_r+0x53>
810027e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027e6:	8b 40 38             	mov    0x38(%eax),%eax
810027e9:	85 c0                	test   %eax,%eax
810027eb:	75 0e                	jne    810027fb <_fwrite_r+0x53>
810027ed:	83 ec 0c             	sub    $0xc,%esp
810027f0:	ff 75 f0             	push   -0x10(%ebp)
810027f3:	e8 60 ef ff ff       	call   81001758 <__sinit>
810027f8:	83 c4 10             	add    $0x10,%esp
810027fb:	8b 45 18             	mov    0x18(%ebp),%eax
810027fe:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002802:	98                   	cwtl   
81002803:	25 00 20 00 00       	and    $0x2000,%eax
81002808:	85 c0                	test   %eax,%eax
8100280a:	75 24                	jne    81002830 <_fwrite_r+0x88>
8100280c:	8b 45 18             	mov    0x18(%ebp),%eax
8100280f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002813:	80 cc 20             	or     $0x20,%ah
81002816:	89 c2                	mov    %eax,%edx
81002818:	8b 45 18             	mov    0x18(%ebp),%eax
8100281b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100281f:	8b 45 18             	mov    0x18(%ebp),%eax
81002822:	8b 40 64             	mov    0x64(%eax),%eax
81002825:	80 e4 df             	and    $0xdf,%ah
81002828:	89 c2                	mov    %eax,%edx
8100282a:	8b 45 18             	mov    0x18(%ebp),%eax
8100282d:	89 50 64             	mov    %edx,0x64(%eax)
81002830:	83 ec 04             	sub    $0x4,%esp
81002833:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002836:	50                   	push   %eax
81002837:	ff 75 18             	push   0x18(%ebp)
8100283a:	ff 75 08             	push   0x8(%ebp)
8100283d:	e8 08 3f 00 00       	call   8100674a <__sfvwrite_r>
81002842:	83 c4 10             	add    $0x10,%esp
81002845:	85 c0                	test   %eax,%eax
81002847:	75 05                	jne    8100284e <_fwrite_r+0xa6>
81002849:	8b 45 14             	mov    0x14(%ebp),%eax
8100284c:	eb 10                	jmp    8100285e <_fwrite_r+0xb6>
8100284e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002851:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002854:	29 d0                	sub    %edx,%eax
81002856:	ba 00 00 00 00       	mov    $0x0,%edx
8100285b:	f7 75 10             	divl   0x10(%ebp)
8100285e:	c9                   	leave  
8100285f:	c3                   	ret    

81002860 <fwrite>:
81002860:	55                   	push   %ebp
81002861:	89 e5                	mov    %esp,%ebp
81002863:	83 ec 08             	sub    $0x8,%esp
81002866:	a1 44 90 00 81       	mov    0x81009044,%eax
8100286b:	83 ec 0c             	sub    $0xc,%esp
8100286e:	ff 75 14             	push   0x14(%ebp)
81002871:	ff 75 10             	push   0x10(%ebp)
81002874:	ff 75 0c             	push   0xc(%ebp)
81002877:	ff 75 08             	push   0x8(%ebp)
8100287a:	50                   	push   %eax
8100287b:	e8 28 ff ff ff       	call   810027a8 <_fwrite_r>
81002880:	83 c4 20             	add    $0x20,%esp
81002883:	c9                   	leave  
81002884:	c3                   	ret    

81002885 <_getchar_r>:
81002885:	55                   	push   %ebp
81002886:	89 e5                	mov    %esp,%ebp
81002888:	83 ec 08             	sub    $0x8,%esp
8100288b:	8b 45 08             	mov    0x8(%ebp),%eax
8100288e:	8b 40 04             	mov    0x4(%eax),%eax
81002891:	83 ec 08             	sub    $0x8,%esp
81002894:	50                   	push   %eax
81002895:	ff 75 08             	push   0x8(%ebp)
81002898:	e8 4b 43 00 00       	call   81006be8 <_getc_r>
8100289d:	83 c4 10             	add    $0x10,%esp
810028a0:	c9                   	leave  
810028a1:	c3                   	ret    

810028a2 <getchar>:
810028a2:	55                   	push   %ebp
810028a3:	89 e5                	mov    %esp,%ebp
810028a5:	83 ec 18             	sub    $0x18,%esp
810028a8:	a1 44 90 00 81       	mov    0x81009044,%eax
810028ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028b3:	8b 40 04             	mov    0x4(%eax),%eax
810028b6:	83 ec 08             	sub    $0x8,%esp
810028b9:	50                   	push   %eax
810028ba:	ff 75 f4             	push   -0xc(%ebp)
810028bd:	e8 26 43 00 00       	call   81006be8 <_getc_r>
810028c2:	83 c4 10             	add    $0x10,%esp
810028c5:	c9                   	leave  
810028c6:	c3                   	ret    

810028c7 <reverse_argv_elements>:
810028c7:	55                   	push   %ebp
810028c8:	89 e5                	mov    %esp,%ebp
810028ca:	83 ec 10             	sub    $0x10,%esp
810028cd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
810028d4:	eb 5e                	jmp    81002934 <reverse_argv_elements+0x6d>
810028d6:	8b 45 fc             	mov    -0x4(%ebp),%eax
810028d9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028e0:	8b 45 08             	mov    0x8(%ebp),%eax
810028e3:	01 d0                	add    %edx,%eax
810028e5:	8b 00                	mov    (%eax),%eax
810028e7:	89 45 f8             	mov    %eax,-0x8(%ebp)
810028ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810028ed:	2b 45 fc             	sub    -0x4(%ebp),%eax
810028f0:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810028f5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028fc:	8b 45 08             	mov    0x8(%ebp),%eax
810028ff:	01 d0                	add    %edx,%eax
81002901:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002904:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100290b:	8b 55 08             	mov    0x8(%ebp),%edx
8100290e:	01 ca                	add    %ecx,%edx
81002910:	8b 00                	mov    (%eax),%eax
81002912:	89 02                	mov    %eax,(%edx)
81002914:	8b 45 0c             	mov    0xc(%ebp),%eax
81002917:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100291a:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
8100291f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002926:	8b 45 08             	mov    0x8(%ebp),%eax
81002929:	01 c2                	add    %eax,%edx
8100292b:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100292e:	89 02                	mov    %eax,(%edx)
81002930:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002934:	8b 45 0c             	mov    0xc(%ebp),%eax
81002937:	d1 f8                	sar    %eax
81002939:	39 45 fc             	cmp    %eax,-0x4(%ebp)
8100293c:	7c 98                	jl     810028d6 <reverse_argv_elements+0xf>
8100293e:	90                   	nop
8100293f:	90                   	nop
81002940:	c9                   	leave  
81002941:	c3                   	ret    

81002942 <permute>:
81002942:	55                   	push   %ebp
81002943:	89 e5                	mov    %esp,%ebp
81002945:	ff 75 0c             	push   0xc(%ebp)
81002948:	ff 75 08             	push   0x8(%ebp)
8100294b:	e8 77 ff ff ff       	call   810028c7 <reverse_argv_elements>
81002950:	83 c4 08             	add    $0x8,%esp
81002953:	8b 55 0c             	mov    0xc(%ebp),%edx
81002956:	8b 45 10             	mov    0x10(%ebp),%eax
81002959:	01 d0                	add    %edx,%eax
8100295b:	50                   	push   %eax
8100295c:	ff 75 08             	push   0x8(%ebp)
8100295f:	e8 63 ff ff ff       	call   810028c7 <reverse_argv_elements>
81002964:	83 c4 08             	add    $0x8,%esp
81002967:	ff 75 10             	push   0x10(%ebp)
8100296a:	ff 75 08             	push   0x8(%ebp)
8100296d:	e8 55 ff ff ff       	call   810028c7 <reverse_argv_elements>
81002972:	83 c4 08             	add    $0x8,%esp
81002975:	90                   	nop
81002976:	c9                   	leave  
81002977:	c3                   	ret    

81002978 <is_option>:
81002978:	55                   	push   %ebp
81002979:	89 e5                	mov    %esp,%ebp
8100297b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100297f:	74 1a                	je     8100299b <is_option+0x23>
81002981:	8b 45 08             	mov    0x8(%ebp),%eax
81002984:	0f b6 00             	movzbl (%eax),%eax
81002987:	3c 2d                	cmp    $0x2d,%al
81002989:	74 10                	je     8100299b <is_option+0x23>
8100298b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100298f:	74 11                	je     810029a2 <is_option+0x2a>
81002991:	8b 45 08             	mov    0x8(%ebp),%eax
81002994:	0f b6 00             	movzbl (%eax),%eax
81002997:	3c 2b                	cmp    $0x2b,%al
81002999:	75 07                	jne    810029a2 <is_option+0x2a>
8100299b:	b8 01 00 00 00       	mov    $0x1,%eax
810029a0:	eb 05                	jmp    810029a7 <is_option+0x2f>
810029a2:	b8 00 00 00 00       	mov    $0x0,%eax
810029a7:	5d                   	pop    %ebp
810029a8:	c3                   	ret    

810029a9 <read_globals>:
810029a9:	55                   	push   %ebp
810029aa:	89 e5                	mov    %esp,%ebp
810029ac:	8b 15 28 9d 00 81    	mov    0x81009d28,%edx
810029b2:	8b 45 08             	mov    0x8(%ebp),%eax
810029b5:	89 10                	mov    %edx,(%eax)
810029b7:	8b 15 2c 9d 00 81    	mov    0x81009d2c,%edx
810029bd:	8b 45 08             	mov    0x8(%ebp),%eax
810029c0:	89 50 04             	mov    %edx,0x4(%eax)
810029c3:	8b 15 04 8c 00 81    	mov    0x81008c04,%edx
810029c9:	8b 45 08             	mov    0x8(%ebp),%eax
810029cc:	89 50 08             	mov    %edx,0x8(%eax)
810029cf:	8b 15 08 8c 00 81    	mov    0x81008c08,%edx
810029d5:	8b 45 08             	mov    0x8(%ebp),%eax
810029d8:	89 50 0c             	mov    %edx,0xc(%eax)
810029db:	8b 15 30 9d 00 81    	mov    0x81009d30,%edx
810029e1:	8b 45 08             	mov    0x8(%ebp),%eax
810029e4:	89 50 10             	mov    %edx,0x10(%eax)
810029e7:	8b 15 34 9d 00 81    	mov    0x81009d34,%edx
810029ed:	8b 45 08             	mov    0x8(%ebp),%eax
810029f0:	89 50 14             	mov    %edx,0x14(%eax)
810029f3:	8b 15 38 9d 00 81    	mov    0x81009d38,%edx
810029f9:	8b 45 08             	mov    0x8(%ebp),%eax
810029fc:	89 50 18             	mov    %edx,0x18(%eax)
810029ff:	90                   	nop
81002a00:	5d                   	pop    %ebp
81002a01:	c3                   	ret    

81002a02 <write_globals>:
81002a02:	55                   	push   %ebp
81002a03:	89 e5                	mov    %esp,%ebp
81002a05:	8b 45 08             	mov    0x8(%ebp),%eax
81002a08:	8b 00                	mov    (%eax),%eax
81002a0a:	a3 28 9d 00 81       	mov    %eax,0x81009d28
81002a0f:	8b 45 08             	mov    0x8(%ebp),%eax
81002a12:	8b 40 04             	mov    0x4(%eax),%eax
81002a15:	a3 2c 9d 00 81       	mov    %eax,0x81009d2c
81002a1a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a1d:	8b 40 08             	mov    0x8(%eax),%eax
81002a20:	a3 04 8c 00 81       	mov    %eax,0x81008c04
81002a25:	8b 45 08             	mov    0x8(%ebp),%eax
81002a28:	8b 40 0c             	mov    0xc(%eax),%eax
81002a2b:	a3 08 8c 00 81       	mov    %eax,0x81008c08
81002a30:	8b 45 08             	mov    0x8(%ebp),%eax
81002a33:	8b 40 10             	mov    0x10(%eax),%eax
81002a36:	a3 30 9d 00 81       	mov    %eax,0x81009d30
81002a3b:	8b 45 08             	mov    0x8(%ebp),%eax
81002a3e:	8b 40 14             	mov    0x14(%eax),%eax
81002a41:	a3 34 9d 00 81       	mov    %eax,0x81009d34
81002a46:	8b 45 08             	mov    0x8(%ebp),%eax
81002a49:	8b 40 18             	mov    0x18(%eax),%eax
81002a4c:	a3 38 9d 00 81       	mov    %eax,0x81009d38
81002a51:	90                   	nop
81002a52:	5d                   	pop    %ebp
81002a53:	c3                   	ret    

81002a54 <getopt_internal>:
81002a54:	55                   	push   %ebp
81002a55:	89 e5                	mov    %esp,%ebp
81002a57:	53                   	push   %ebx
81002a58:	83 ec 34             	sub    $0x34,%esp
81002a5b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002a62:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002a70:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002a77:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002a7e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002a85:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81002a8c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002a93:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81002a9a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81002a9e:	74 35                	je     81002ad5 <getopt_internal+0x81>
81002aa0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002aa4:	74 2f                	je     81002ad5 <getopt_internal+0x81>
81002aa6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002aaa:	75 06                	jne    81002ab2 <getopt_internal+0x5e>
81002aac:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002ab0:	74 23                	je     81002ad5 <getopt_internal+0x81>
81002ab2:	8b 45 20             	mov    0x20(%ebp),%eax
81002ab5:	8b 40 04             	mov    0x4(%eax),%eax
81002ab8:	39 45 08             	cmp    %eax,0x8(%ebp)
81002abb:	7e 18                	jle    81002ad5 <getopt_internal+0x81>
81002abd:	8b 45 20             	mov    0x20(%ebp),%eax
81002ac0:	8b 40 04             	mov    0x4(%eax),%eax
81002ac3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002aca:	8b 45 0c             	mov    0xc(%ebp),%eax
81002acd:	01 d0                	add    %edx,%eax
81002acf:	8b 00                	mov    (%eax),%eax
81002ad1:	85 c0                	test   %eax,%eax
81002ad3:	75 0a                	jne    81002adf <getopt_internal+0x8b>
81002ad5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ada:	e9 85 0a 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002adf:	8b 45 20             	mov    0x20(%ebp),%eax
81002ae2:	8b 40 04             	mov    0x4(%eax),%eax
81002ae5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002aec:	8b 45 0c             	mov    0xc(%ebp),%eax
81002aef:	01 d0                	add    %edx,%eax
81002af1:	8b 00                	mov    (%eax),%eax
81002af3:	83 ec 08             	sub    $0x8,%esp
81002af6:	68 fc 87 00 81       	push   $0x810087fc
81002afb:	50                   	push   %eax
81002afc:	e8 bb 2f 00 00       	call   81005abc <strcmp>
81002b01:	83 c4 10             	add    $0x10,%esp
81002b04:	85 c0                	test   %eax,%eax
81002b06:	75 19                	jne    81002b21 <getopt_internal+0xcd>
81002b08:	8b 45 20             	mov    0x20(%ebp),%eax
81002b0b:	8b 40 04             	mov    0x4(%eax),%eax
81002b0e:	8d 50 01             	lea    0x1(%eax),%edx
81002b11:	8b 45 20             	mov    0x20(%ebp),%eax
81002b14:	89 50 04             	mov    %edx,0x4(%eax)
81002b17:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b1c:	e9 43 0a 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002b21:	8b 45 20             	mov    0x20(%ebp),%eax
81002b24:	8b 40 04             	mov    0x4(%eax),%eax
81002b27:	85 c0                	test   %eax,%eax
81002b29:	75 28                	jne    81002b53 <getopt_internal+0xff>
81002b2b:	8b 45 20             	mov    0x20(%ebp),%eax
81002b2e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002b35:	8b 45 20             	mov    0x20(%ebp),%eax
81002b38:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002b3f:	8b 45 20             	mov    0x20(%ebp),%eax
81002b42:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81002b49:	8b 45 20             	mov    0x20(%ebp),%eax
81002b4c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002b53:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002b57:	74 33                	je     81002b8c <getopt_internal+0x138>
81002b59:	8b 45 10             	mov    0x10(%ebp),%eax
81002b5c:	0f b6 00             	movzbl (%eax),%eax
81002b5f:	3c 2d                	cmp    $0x2d,%al
81002b61:	74 0a                	je     81002b6d <getopt_internal+0x119>
81002b63:	8b 45 10             	mov    0x10(%ebp),%eax
81002b66:	0f b6 00             	movzbl (%eax),%eax
81002b69:	3c 2b                	cmp    $0x2b,%al
81002b6b:	75 1f                	jne    81002b8c <getopt_internal+0x138>
81002b6d:	8b 45 10             	mov    0x10(%ebp),%eax
81002b70:	0f b6 00             	movzbl (%eax),%eax
81002b73:	3c 2d                	cmp    $0x2d,%al
81002b75:	75 07                	jne    81002b7e <getopt_internal+0x12a>
81002b77:	b8 01 00 00 00       	mov    $0x1,%eax
81002b7c:	eb 05                	jmp    81002b83 <getopt_internal+0x12f>
81002b7e:	b8 02 00 00 00       	mov    $0x2,%eax
81002b83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b86:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002b8a:	eb 23                	jmp    81002baf <getopt_internal+0x15b>
81002b8c:	83 ec 0c             	sub    $0xc,%esp
81002b8f:	68 ff 87 00 81       	push   $0x810087ff
81002b94:	e8 45 41 00 00       	call   81006cde <getenv>
81002b99:	83 c4 10             	add    $0x10,%esp
81002b9c:	85 c0                	test   %eax,%eax
81002b9e:	74 07                	je     81002ba7 <getopt_internal+0x153>
81002ba0:	b8 02 00 00 00       	mov    $0x2,%eax
81002ba5:	eb 05                	jmp    81002bac <getopt_internal+0x158>
81002ba7:	b8 00 00 00 00       	mov    $0x0,%eax
81002bac:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002baf:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002bb3:	74 15                	je     81002bca <getopt_internal+0x176>
81002bb5:	8b 45 10             	mov    0x10(%ebp),%eax
81002bb8:	0f b6 00             	movzbl (%eax),%eax
81002bbb:	3c 3a                	cmp    $0x3a,%al
81002bbd:	75 0b                	jne    81002bca <getopt_internal+0x176>
81002bbf:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81002bc3:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81002bca:	8b 45 20             	mov    0x20(%ebp),%eax
81002bcd:	8b 40 10             	mov    0x10(%eax),%eax
81002bd0:	83 f8 01             	cmp    $0x1,%eax
81002bd3:	0f 85 a2 01 00 00    	jne    81002d7b <getopt_internal+0x327>
81002bd9:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81002bdd:	0f 84 02 01 00 00    	je     81002ce5 <getopt_internal+0x291>
81002be3:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002be7:	0f 84 56 01 00 00    	je     81002d43 <getopt_internal+0x2ef>
81002bed:	8b 45 20             	mov    0x20(%ebp),%eax
81002bf0:	8b 50 04             	mov    0x4(%eax),%edx
81002bf3:	8b 45 20             	mov    0x20(%ebp),%eax
81002bf6:	89 50 14             	mov    %edx,0x14(%eax)
81002bf9:	8b 45 20             	mov    0x20(%ebp),%eax
81002bfc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002c03:	eb 1e                	jmp    81002c23 <getopt_internal+0x1cf>
81002c05:	8b 45 20             	mov    0x20(%ebp),%eax
81002c08:	8b 40 04             	mov    0x4(%eax),%eax
81002c0b:	8d 50 01             	lea    0x1(%eax),%edx
81002c0e:	8b 45 20             	mov    0x20(%ebp),%eax
81002c11:	89 50 04             	mov    %edx,0x4(%eax)
81002c14:	8b 45 20             	mov    0x20(%ebp),%eax
81002c17:	8b 40 18             	mov    0x18(%eax),%eax
81002c1a:	8d 50 01             	lea    0x1(%eax),%edx
81002c1d:	8b 45 20             	mov    0x20(%ebp),%eax
81002c20:	89 50 18             	mov    %edx,0x18(%eax)
81002c23:	8b 45 20             	mov    0x20(%ebp),%eax
81002c26:	8b 40 04             	mov    0x4(%eax),%eax
81002c29:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c30:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c33:	01 d0                	add    %edx,%eax
81002c35:	8b 00                	mov    (%eax),%eax
81002c37:	83 ec 08             	sub    $0x8,%esp
81002c3a:	ff 75 1c             	push   0x1c(%ebp)
81002c3d:	50                   	push   %eax
81002c3e:	e8 35 fd ff ff       	call   81002978 <is_option>
81002c43:	83 c4 10             	add    $0x10,%esp
81002c46:	85 c0                	test   %eax,%eax
81002c48:	74 bb                	je     81002c05 <getopt_internal+0x1b1>
81002c4a:	8b 45 20             	mov    0x20(%ebp),%eax
81002c4d:	8b 40 04             	mov    0x4(%eax),%eax
81002c50:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c57:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c5a:	01 d0                	add    %edx,%eax
81002c5c:	8b 00                	mov    (%eax),%eax
81002c5e:	85 c0                	test   %eax,%eax
81002c60:	75 16                	jne    81002c78 <getopt_internal+0x224>
81002c62:	8b 45 20             	mov    0x20(%ebp),%eax
81002c65:	8b 50 14             	mov    0x14(%eax),%edx
81002c68:	8b 45 20             	mov    0x20(%ebp),%eax
81002c6b:	89 50 04             	mov    %edx,0x4(%eax)
81002c6e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002c73:	e9 ec 08 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002c78:	8b 45 20             	mov    0x20(%ebp),%eax
81002c7b:	8b 40 04             	mov    0x4(%eax),%eax
81002c7e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c85:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c88:	01 d0                	add    %edx,%eax
81002c8a:	8b 00                	mov    (%eax),%eax
81002c8c:	83 ec 08             	sub    $0x8,%esp
81002c8f:	68 fc 87 00 81       	push   $0x810087fc
81002c94:	50                   	push   %eax
81002c95:	e8 22 2e 00 00       	call   81005abc <strcmp>
81002c9a:	83 c4 10             	add    $0x10,%esp
81002c9d:	85 c0                	test   %eax,%eax
81002c9f:	0f 85 cf 00 00 00    	jne    81002d74 <getopt_internal+0x320>
81002ca5:	8b 45 20             	mov    0x20(%ebp),%eax
81002ca8:	8b 40 18             	mov    0x18(%eax),%eax
81002cab:	8b 55 20             	mov    0x20(%ebp),%edx
81002cae:	8b 52 14             	mov    0x14(%edx),%edx
81002cb1:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002cb8:	8b 55 0c             	mov    0xc(%ebp),%edx
81002cbb:	01 ca                	add    %ecx,%edx
81002cbd:	83 ec 04             	sub    $0x4,%esp
81002cc0:	6a 01                	push   $0x1
81002cc2:	50                   	push   %eax
81002cc3:	52                   	push   %edx
81002cc4:	e8 79 fc ff ff       	call   81002942 <permute>
81002cc9:	83 c4 10             	add    $0x10,%esp
81002ccc:	8b 45 20             	mov    0x20(%ebp),%eax
81002ccf:	8b 40 14             	mov    0x14(%eax),%eax
81002cd2:	8d 50 01             	lea    0x1(%eax),%edx
81002cd5:	8b 45 20             	mov    0x20(%ebp),%eax
81002cd8:	89 50 04             	mov    %edx,0x4(%eax)
81002cdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ce0:	e9 7f 08 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002ce5:	8b 45 20             	mov    0x20(%ebp),%eax
81002ce8:	8b 40 04             	mov    0x4(%eax),%eax
81002ceb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cf2:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cf5:	01 d0                	add    %edx,%eax
81002cf7:	8b 00                	mov    (%eax),%eax
81002cf9:	83 ec 08             	sub    $0x8,%esp
81002cfc:	ff 75 1c             	push   0x1c(%ebp)
81002cff:	50                   	push   %eax
81002d00:	e8 73 fc ff ff       	call   81002978 <is_option>
81002d05:	83 c4 10             	add    $0x10,%esp
81002d08:	85 c0                	test   %eax,%eax
81002d0a:	75 6b                	jne    81002d77 <getopt_internal+0x323>
81002d0c:	8b 45 20             	mov    0x20(%ebp),%eax
81002d0f:	8b 40 04             	mov    0x4(%eax),%eax
81002d12:	8d 48 01             	lea    0x1(%eax),%ecx
81002d15:	8b 55 20             	mov    0x20(%ebp),%edx
81002d18:	89 4a 04             	mov    %ecx,0x4(%edx)
81002d1b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d22:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d25:	01 d0                	add    %edx,%eax
81002d27:	8b 10                	mov    (%eax),%edx
81002d29:	8b 45 20             	mov    0x20(%ebp),%eax
81002d2c:	89 10                	mov    %edx,(%eax)
81002d2e:	8b 45 20             	mov    0x20(%ebp),%eax
81002d31:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002d38:	8b 45 20             	mov    0x20(%ebp),%eax
81002d3b:	8b 40 0c             	mov    0xc(%eax),%eax
81002d3e:	e9 21 08 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002d43:	8b 45 20             	mov    0x20(%ebp),%eax
81002d46:	8b 40 04             	mov    0x4(%eax),%eax
81002d49:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d50:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d53:	01 d0                	add    %edx,%eax
81002d55:	8b 00                	mov    (%eax),%eax
81002d57:	83 ec 08             	sub    $0x8,%esp
81002d5a:	ff 75 1c             	push   0x1c(%ebp)
81002d5d:	50                   	push   %eax
81002d5e:	e8 15 fc ff ff       	call   81002978 <is_option>
81002d63:	83 c4 10             	add    $0x10,%esp
81002d66:	85 c0                	test   %eax,%eax
81002d68:	75 10                	jne    81002d7a <getopt_internal+0x326>
81002d6a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d6f:	e9 f0 07 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002d74:	90                   	nop
81002d75:	eb 04                	jmp    81002d7b <getopt_internal+0x327>
81002d77:	90                   	nop
81002d78:	eb 01                	jmp    81002d7b <getopt_internal+0x327>
81002d7a:	90                   	nop
81002d7b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d7e:	8b 40 04             	mov    0x4(%eax),%eax
81002d81:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d88:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d8b:	01 d0                	add    %edx,%eax
81002d8d:	8b 00                	mov    (%eax),%eax
81002d8f:	85 c0                	test   %eax,%eax
81002d91:	75 0a                	jne    81002d9d <getopt_internal+0x349>
81002d93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d98:	e9 c7 07 00 00       	jmp    81003564 <getopt_internal+0xb10>
81002d9d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002da1:	0f 84 15 03 00 00    	je     810030bc <getopt_internal+0x668>
81002da7:	8b 45 20             	mov    0x20(%ebp),%eax
81002daa:	8b 40 04             	mov    0x4(%eax),%eax
81002dad:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002db4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002db7:	01 d0                	add    %edx,%eax
81002db9:	8b 00                	mov    (%eax),%eax
81002dbb:	83 ec 04             	sub    $0x4,%esp
81002dbe:	6a 02                	push   $0x2
81002dc0:	68 fc 87 00 81       	push   $0x810087fc
81002dc5:	50                   	push   %eax
81002dc6:	e8 fa 15 00 00       	call   810043c5 <memcmp>
81002dcb:	83 c4 10             	add    $0x10,%esp
81002dce:	85 c0                	test   %eax,%eax
81002dd0:	74 29                	je     81002dfb <getopt_internal+0x3a7>
81002dd2:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002dd6:	0f 84 e0 02 00 00    	je     810030bc <getopt_internal+0x668>
81002ddc:	8b 45 20             	mov    0x20(%ebp),%eax
81002ddf:	8b 40 04             	mov    0x4(%eax),%eax
81002de2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002de9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002dec:	01 d0                	add    %edx,%eax
81002dee:	8b 00                	mov    (%eax),%eax
81002df0:	0f b6 00             	movzbl (%eax),%eax
81002df3:	3c 2b                	cmp    $0x2b,%al
81002df5:	0f 85 c1 02 00 00    	jne    810030bc <getopt_internal+0x668>
81002dfb:	8b 45 20             	mov    0x20(%ebp),%eax
81002dfe:	8b 40 10             	mov    0x10(%eax),%eax
81002e01:	83 f8 01             	cmp    $0x1,%eax
81002e04:	0f 85 b2 02 00 00    	jne    810030bc <getopt_internal+0x668>
81002e0a:	8b 45 20             	mov    0x20(%ebp),%eax
81002e0d:	8b 40 04             	mov    0x4(%eax),%eax
81002e10:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e17:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e1a:	01 d0                	add    %edx,%eax
81002e1c:	8b 00                	mov    (%eax),%eax
81002e1e:	83 ec 04             	sub    $0x4,%esp
81002e21:	6a 02                	push   $0x2
81002e23:	68 fc 87 00 81       	push   $0x810087fc
81002e28:	50                   	push   %eax
81002e29:	e8 97 15 00 00       	call   810043c5 <memcmp>
81002e2e:	83 c4 10             	add    $0x10,%esp
81002e31:	85 c0                	test   %eax,%eax
81002e33:	75 0a                	jne    81002e3f <getopt_internal+0x3eb>
81002e35:	8b 45 20             	mov    0x20(%ebp),%eax
81002e38:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002e3f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002e46:	8b 45 20             	mov    0x20(%ebp),%eax
81002e49:	8b 40 04             	mov    0x4(%eax),%eax
81002e4c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e53:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e56:	01 d0                	add    %edx,%eax
81002e58:	8b 10                	mov    (%eax),%edx
81002e5a:	8b 45 20             	mov    0x20(%ebp),%eax
81002e5d:	8b 40 10             	mov    0x10(%eax),%eax
81002e60:	01 d0                	add    %edx,%eax
81002e62:	83 ec 08             	sub    $0x8,%esp
81002e65:	6a 3d                	push   $0x3d
81002e67:	50                   	push   %eax
81002e68:	e8 53 2b 00 00       	call   810059c0 <strchr>
81002e6d:	83 c4 10             	add    $0x10,%esp
81002e70:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e73:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002e77:	75 4a                	jne    81002ec3 <getopt_internal+0x46f>
81002e79:	8b 45 20             	mov    0x20(%ebp),%eax
81002e7c:	8b 40 04             	mov    0x4(%eax),%eax
81002e7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002e86:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e89:	01 d0                	add    %edx,%eax
81002e8b:	8b 00                	mov    (%eax),%eax
81002e8d:	83 ec 0c             	sub    $0xc,%esp
81002e90:	50                   	push   %eax
81002e91:	e8 da 2c 00 00       	call   81005b70 <strlen>
81002e96:	83 c4 10             	add    $0x10,%esp
81002e99:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e9c:	8b 45 20             	mov    0x20(%ebp),%eax
81002e9f:	8b 40 04             	mov    0x4(%eax),%eax
81002ea2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ea9:	8b 45 0c             	mov    0xc(%ebp),%eax
81002eac:	01 d0                	add    %edx,%eax
81002eae:	8b 10                	mov    (%eax),%edx
81002eb0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002eb3:	01 d0                	add    %edx,%eax
81002eb5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002eb8:	8b 45 20             	mov    0x20(%ebp),%eax
81002ebb:	8b 40 10             	mov    0x10(%eax),%eax
81002ebe:	29 45 ec             	sub    %eax,-0x14(%ebp)
81002ec1:	eb 28                	jmp    81002eeb <getopt_internal+0x497>
81002ec3:	8b 45 20             	mov    0x20(%ebp),%eax
81002ec6:	8b 40 04             	mov    0x4(%eax),%eax
81002ec9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002ed0:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ed3:	01 d0                	add    %edx,%eax
81002ed5:	8b 08                	mov    (%eax),%ecx
81002ed7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002eda:	29 c8                	sub    %ecx,%eax
81002edc:	89 c2                	mov    %eax,%edx
81002ede:	8b 45 20             	mov    0x20(%ebp),%eax
81002ee1:	8b 48 10             	mov    0x10(%eax),%ecx
81002ee4:	89 d0                	mov    %edx,%eax
81002ee6:	29 c8                	sub    %ecx,%eax
81002ee8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002eeb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002ef2:	e9 95 01 00 00       	jmp    8100308c <getopt_internal+0x638>
81002ef7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002efa:	c1 e0 04             	shl    $0x4,%eax
81002efd:	89 c2                	mov    %eax,%edx
81002eff:	8b 45 14             	mov    0x14(%ebp),%eax
81002f02:	01 d0                	add    %edx,%eax
81002f04:	8b 00                	mov    (%eax),%eax
81002f06:	8b 55 20             	mov    0x20(%ebp),%edx
81002f09:	8b 52 04             	mov    0x4(%edx),%edx
81002f0c:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002f13:	8b 55 0c             	mov    0xc(%ebp),%edx
81002f16:	01 ca                	add    %ecx,%edx
81002f18:	8b 0a                	mov    (%edx),%ecx
81002f1a:	8b 55 20             	mov    0x20(%ebp),%edx
81002f1d:	8b 52 10             	mov    0x10(%edx),%edx
81002f20:	01 ca                	add    %ecx,%edx
81002f22:	83 ec 04             	sub    $0x4,%esp
81002f25:	ff 75 ec             	push   -0x14(%ebp)
81002f28:	50                   	push   %eax
81002f29:	52                   	push   %edx
81002f2a:	e8 96 14 00 00       	call   810043c5 <memcmp>
81002f2f:	83 c4 10             	add    $0x10,%esp
81002f32:	85 c0                	test   %eax,%eax
81002f34:	0f 85 4e 01 00 00    	jne    81003088 <getopt_internal+0x634>
81002f3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f3d:	c1 e0 04             	shl    $0x4,%eax
81002f40:	89 c2                	mov    %eax,%edx
81002f42:	8b 45 14             	mov    0x14(%ebp),%eax
81002f45:	01 d0                	add    %edx,%eax
81002f47:	8b 00                	mov    (%eax),%eax
81002f49:	83 ec 0c             	sub    $0xc,%esp
81002f4c:	50                   	push   %eax
81002f4d:	e8 1e 2c 00 00       	call   81005b70 <strlen>
81002f52:	83 c4 10             	add    $0x10,%esp
81002f55:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002f58:	75 0b                	jne    81002f65 <getopt_internal+0x511>
81002f5a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f5d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f60:	e9 3e 01 00 00       	jmp    810030a3 <getopt_internal+0x64f>
81002f65:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f69:	79 0b                	jns    81002f76 <getopt_internal+0x522>
81002f6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f6e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f71:	e9 12 01 00 00       	jmp    81003088 <getopt_internal+0x634>
81002f76:	8b 45 20             	mov    0x20(%ebp),%eax
81002f79:	8b 40 08             	mov    0x8(%eax),%eax
81002f7c:	85 c0                	test   %eax,%eax
81002f7e:	0f 84 ef 00 00 00    	je     81003073 <getopt_internal+0x61f>
81002f84:	a1 44 90 00 81       	mov    0x81009044,%eax
81002f89:	8b 50 0c             	mov    0xc(%eax),%edx
81002f8c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f8f:	8b 00                	mov    (%eax),%eax
81002f91:	83 ec 08             	sub    $0x8,%esp
81002f94:	52                   	push   %edx
81002f95:	50                   	push   %eax
81002f96:	e8 db 35 00 00       	call   81006576 <fputs>
81002f9b:	83 c4 10             	add    $0x10,%esp
81002f9e:	a1 44 90 00 81       	mov    0x81009044,%eax
81002fa3:	8b 40 0c             	mov    0xc(%eax),%eax
81002fa6:	83 ec 08             	sub    $0x8,%esp
81002fa9:	50                   	push   %eax
81002faa:	68 0f 88 00 81       	push   $0x8100880f
81002faf:	e8 c2 35 00 00       	call   81006576 <fputs>
81002fb4:	83 c4 10             	add    $0x10,%esp
81002fb7:	a1 44 90 00 81       	mov    0x81009044,%eax
81002fbc:	8b 50 0c             	mov    0xc(%eax),%edx
81002fbf:	8b 45 20             	mov    0x20(%ebp),%eax
81002fc2:	8b 40 04             	mov    0x4(%eax),%eax
81002fc5:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002fcc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fcf:	01 c8                	add    %ecx,%eax
81002fd1:	8b 00                	mov    (%eax),%eax
81002fd3:	83 ec 08             	sub    $0x8,%esp
81002fd6:	52                   	push   %edx
81002fd7:	50                   	push   %eax
81002fd8:	e8 99 35 00 00       	call   81006576 <fputs>
81002fdd:	83 c4 10             	add    $0x10,%esp
81002fe0:	a1 44 90 00 81       	mov    0x81009044,%eax
81002fe5:	8b 40 0c             	mov    0xc(%eax),%eax
81002fe8:	83 ec 08             	sub    $0x8,%esp
81002feb:	50                   	push   %eax
81002fec:	68 1a 88 00 81       	push   $0x8100881a
81002ff1:	e8 80 35 00 00       	call   81006576 <fputs>
81002ff6:	83 c4 10             	add    $0x10,%esp
81002ff9:	a1 44 90 00 81       	mov    0x81009044,%eax
81002ffe:	8b 50 0c             	mov    0xc(%eax),%edx
81003001:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003004:	c1 e0 04             	shl    $0x4,%eax
81003007:	89 c1                	mov    %eax,%ecx
81003009:	8b 45 14             	mov    0x14(%ebp),%eax
8100300c:	01 c8                	add    %ecx,%eax
8100300e:	8b 00                	mov    (%eax),%eax
81003010:	83 ec 08             	sub    $0x8,%esp
81003013:	52                   	push   %edx
81003014:	50                   	push   %eax
81003015:	e8 5c 35 00 00       	call   81006576 <fputs>
8100301a:	83 c4 10             	add    $0x10,%esp
8100301d:	a1 44 90 00 81       	mov    0x81009044,%eax
81003022:	8b 40 0c             	mov    0xc(%eax),%eax
81003025:	83 ec 08             	sub    $0x8,%esp
81003028:	50                   	push   %eax
81003029:	68 37 88 00 81       	push   $0x81008837
8100302e:	e8 43 35 00 00       	call   81006576 <fputs>
81003033:	83 c4 10             	add    $0x10,%esp
81003036:	a1 44 90 00 81       	mov    0x81009044,%eax
8100303b:	8b 50 0c             	mov    0xc(%eax),%edx
8100303e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003041:	c1 e0 04             	shl    $0x4,%eax
81003044:	89 c1                	mov    %eax,%ecx
81003046:	8b 45 14             	mov    0x14(%ebp),%eax
81003049:	01 c8                	add    %ecx,%eax
8100304b:	8b 00                	mov    (%eax),%eax
8100304d:	83 ec 08             	sub    $0x8,%esp
81003050:	52                   	push   %edx
81003051:	50                   	push   %eax
81003052:	e8 1f 35 00 00       	call   81006576 <fputs>
81003057:	83 c4 10             	add    $0x10,%esp
8100305a:	a1 44 90 00 81       	mov    0x81009044,%eax
8100305f:	8b 40 0c             	mov    0xc(%eax),%eax
81003062:	83 ec 08             	sub    $0x8,%esp
81003065:	50                   	push   %eax
81003066:	68 40 88 00 81       	push   $0x81008840
8100306b:	e8 06 35 00 00       	call   81006576 <fputs>
81003070:	83 c4 10             	add    $0x10,%esp
81003073:	8b 45 20             	mov    0x20(%ebp),%eax
81003076:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100307d:	8b 45 20             	mov    0x20(%ebp),%eax
81003080:	8b 40 0c             	mov    0xc(%eax),%eax
81003083:	e9 dc 04 00 00       	jmp    81003564 <getopt_internal+0xb10>
81003088:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100308c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100308f:	c1 e0 04             	shl    $0x4,%eax
81003092:	89 c2                	mov    %eax,%edx
81003094:	8b 45 14             	mov    0x14(%ebp),%eax
81003097:	01 d0                	add    %edx,%eax
81003099:	8b 00                	mov    (%eax),%eax
8100309b:	85 c0                	test   %eax,%eax
8100309d:	0f 85 54 fe ff ff    	jne    81002ef7 <getopt_internal+0x4a3>
810030a3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030a7:	78 13                	js     810030bc <getopt_internal+0x668>
810030a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030ac:	c1 e0 04             	shl    $0x4,%eax
810030af:	89 c2                	mov    %eax,%edx
810030b1:	8b 45 14             	mov    0x14(%ebp),%eax
810030b4:	01 d0                	add    %edx,%eax
810030b6:	8b 40 04             	mov    0x4(%eax),%eax
810030b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810030bc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030c0:	0f 89 9a 01 00 00    	jns    81003260 <getopt_internal+0x80c>
810030c6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810030ca:	0f 84 90 01 00 00    	je     81003260 <getopt_internal+0x80c>
810030d0:	8b 45 20             	mov    0x20(%ebp),%eax
810030d3:	8b 40 04             	mov    0x4(%eax),%eax
810030d6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810030dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810030e0:	01 d0                	add    %edx,%eax
810030e2:	8b 10                	mov    (%eax),%edx
810030e4:	8b 45 20             	mov    0x20(%ebp),%eax
810030e7:	8b 40 10             	mov    0x10(%eax),%eax
810030ea:	01 d0                	add    %edx,%eax
810030ec:	0f b6 00             	movzbl (%eax),%eax
810030ef:	0f be c0             	movsbl %al,%eax
810030f2:	83 ec 08             	sub    $0x8,%esp
810030f5:	50                   	push   %eax
810030f6:	ff 75 10             	push   0x10(%ebp)
810030f9:	e8 c2 28 00 00       	call   810059c0 <strchr>
810030fe:	83 c4 10             	add    $0x10,%esp
81003101:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003104:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003108:	0f 85 f1 00 00 00    	jne    810031ff <getopt_internal+0x7ab>
8100310e:	8b 45 20             	mov    0x20(%ebp),%eax
81003111:	8b 40 08             	mov    0x8(%eax),%eax
81003114:	85 c0                	test   %eax,%eax
81003116:	0f 84 83 00 00 00    	je     8100319f <getopt_internal+0x74b>
8100311c:	a1 44 90 00 81       	mov    0x81009044,%eax
81003121:	8b 50 0c             	mov    0xc(%eax),%edx
81003124:	8b 45 0c             	mov    0xc(%ebp),%eax
81003127:	8b 00                	mov    (%eax),%eax
81003129:	83 ec 08             	sub    $0x8,%esp
8100312c:	52                   	push   %edx
8100312d:	50                   	push   %eax
8100312e:	e8 43 34 00 00       	call   81006576 <fputs>
81003133:	83 c4 10             	add    $0x10,%esp
81003136:	a1 44 90 00 81       	mov    0x81009044,%eax
8100313b:	8b 40 0c             	mov    0xc(%eax),%eax
8100313e:	83 ec 08             	sub    $0x8,%esp
81003141:	50                   	push   %eax
81003142:	68 44 88 00 81       	push   $0x81008844
81003147:	e8 2a 34 00 00       	call   81006576 <fputs>
8100314c:	83 c4 10             	add    $0x10,%esp
8100314f:	a1 44 90 00 81       	mov    0x81009044,%eax
81003154:	8b 50 0c             	mov    0xc(%eax),%edx
81003157:	8b 45 20             	mov    0x20(%ebp),%eax
8100315a:	8b 40 04             	mov    0x4(%eax),%eax
8100315d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003164:	8b 45 0c             	mov    0xc(%ebp),%eax
81003167:	01 c8                	add    %ecx,%eax
81003169:	8b 08                	mov    (%eax),%ecx
8100316b:	8b 45 20             	mov    0x20(%ebp),%eax
8100316e:	8b 40 10             	mov    0x10(%eax),%eax
81003171:	01 c8                	add    %ecx,%eax
81003173:	0f b6 00             	movzbl (%eax),%eax
81003176:	0f be c0             	movsbl %al,%eax
81003179:	83 ec 08             	sub    $0x8,%esp
8100317c:	52                   	push   %edx
8100317d:	50                   	push   %eax
8100317e:	e8 ff 32 00 00       	call   81006482 <fputc>
81003183:	83 c4 10             	add    $0x10,%esp
81003186:	a1 44 90 00 81       	mov    0x81009044,%eax
8100318b:	8b 40 0c             	mov    0xc(%eax),%eax
8100318e:	83 ec 08             	sub    $0x8,%esp
81003191:	50                   	push   %eax
81003192:	68 5b 88 00 81       	push   $0x8100885b
81003197:	e8 da 33 00 00       	call   81006576 <fputs>
8100319c:	83 c4 10             	add    $0x10,%esp
8100319f:	8b 45 20             	mov    0x20(%ebp),%eax
810031a2:	8b 40 10             	mov    0x10(%eax),%eax
810031a5:	8d 50 01             	lea    0x1(%eax),%edx
810031a8:	8b 45 20             	mov    0x20(%ebp),%eax
810031ab:	89 50 10             	mov    %edx,0x10(%eax)
810031ae:	8b 45 20             	mov    0x20(%ebp),%eax
810031b1:	8b 40 04             	mov    0x4(%eax),%eax
810031b4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810031bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810031be:	01 d0                	add    %edx,%eax
810031c0:	8b 10                	mov    (%eax),%edx
810031c2:	8b 45 20             	mov    0x20(%ebp),%eax
810031c5:	8b 40 10             	mov    0x10(%eax),%eax
810031c8:	01 d0                	add    %edx,%eax
810031ca:	0f b6 00             	movzbl (%eax),%eax
810031cd:	84 c0                	test   %al,%al
810031cf:	75 19                	jne    810031ea <getopt_internal+0x796>
810031d1:	8b 45 20             	mov    0x20(%ebp),%eax
810031d4:	8b 40 04             	mov    0x4(%eax),%eax
810031d7:	8d 50 01             	lea    0x1(%eax),%edx
810031da:	8b 45 20             	mov    0x20(%ebp),%eax
810031dd:	89 50 04             	mov    %edx,0x4(%eax)
810031e0:	8b 45 20             	mov    0x20(%ebp),%eax
810031e3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031ea:	8b 45 20             	mov    0x20(%ebp),%eax
810031ed:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810031f4:	8b 45 20             	mov    0x20(%ebp),%eax
810031f7:	8b 40 0c             	mov    0xc(%eax),%eax
810031fa:	e9 65 03 00 00       	jmp    81003564 <getopt_internal+0xb10>
810031ff:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003202:	83 c0 01             	add    $0x1,%eax
81003205:	0f b6 00             	movzbl (%eax),%eax
81003208:	3c 3a                	cmp    $0x3a,%al
8100320a:	75 1b                	jne    81003227 <getopt_internal+0x7d3>
8100320c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100320f:	83 c0 02             	add    $0x2,%eax
81003212:	0f b6 00             	movzbl (%eax),%eax
81003215:	3c 3a                	cmp    $0x3a,%al
81003217:	75 07                	jne    81003220 <getopt_internal+0x7cc>
81003219:	b8 02 00 00 00       	mov    $0x2,%eax
8100321e:	eb 0c                	jmp    8100322c <getopt_internal+0x7d8>
81003220:	b8 01 00 00 00       	mov    $0x1,%eax
81003225:	eb 05                	jmp    8100322c <getopt_internal+0x7d8>
81003227:	b8 00 00 00 00       	mov    $0x0,%eax
8100322c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100322f:	8b 45 20             	mov    0x20(%ebp),%eax
81003232:	8b 40 04             	mov    0x4(%eax),%eax
81003235:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100323c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100323f:	01 d0                	add    %edx,%eax
81003241:	8b 10                	mov    (%eax),%edx
81003243:	8b 45 20             	mov    0x20(%ebp),%eax
81003246:	8b 40 10             	mov    0x10(%eax),%eax
81003249:	83 c0 01             	add    $0x1,%eax
8100324c:	01 d0                	add    %edx,%eax
8100324e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003251:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003254:	0f b6 00             	movzbl (%eax),%eax
81003257:	0f be d0             	movsbl %al,%edx
8100325a:	8b 45 20             	mov    0x20(%ebp),%eax
8100325d:	89 50 0c             	mov    %edx,0xc(%eax)
81003260:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003267:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
8100326b:	74 40                	je     810032ad <getopt_internal+0x859>
8100326d:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81003271:	0f 85 b0 01 00 00    	jne    81003427 <getopt_internal+0x9d3>
81003277:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100327a:	0f b6 00             	movzbl (%eax),%eax
8100327d:	3c 3d                	cmp    $0x3d,%al
8100327f:	75 04                	jne    81003285 <getopt_internal+0x831>
81003281:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003285:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003288:	0f b6 00             	movzbl (%eax),%eax
8100328b:	84 c0                	test   %al,%al
8100328d:	74 05                	je     81003294 <getopt_internal+0x840>
8100328f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003292:	eb 05                	jmp    81003299 <getopt_internal+0x845>
81003294:	b8 00 00 00 00       	mov    $0x0,%eax
81003299:	8b 55 20             	mov    0x20(%ebp),%edx
8100329c:	89 02                	mov    %eax,(%edx)
8100329e:	8b 45 20             	mov    0x20(%ebp),%eax
810032a1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810032a8:	e9 d2 01 00 00       	jmp    8100347f <getopt_internal+0xa2b>
810032ad:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032b0:	0f b6 00             	movzbl (%eax),%eax
810032b3:	3c 3d                	cmp    $0x3d,%al
810032b5:	75 04                	jne    810032bb <getopt_internal+0x867>
810032b7:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810032bb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032be:	0f b6 00             	movzbl (%eax),%eax
810032c1:	84 c0                	test   %al,%al
810032c3:	74 17                	je     810032dc <getopt_internal+0x888>
810032c5:	8b 45 20             	mov    0x20(%ebp),%eax
810032c8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810032cb:	89 10                	mov    %edx,(%eax)
810032cd:	8b 45 20             	mov    0x20(%ebp),%eax
810032d0:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810032d7:	e9 a3 01 00 00       	jmp    8100347f <getopt_internal+0xa2b>
810032dc:	8b 45 20             	mov    0x20(%ebp),%eax
810032df:	8b 40 04             	mov    0x4(%eax),%eax
810032e2:	83 c0 01             	add    $0x1,%eax
810032e5:	39 45 08             	cmp    %eax,0x8(%ebp)
810032e8:	0f 8f 0a 01 00 00    	jg     810033f8 <getopt_internal+0x9a4>
810032ee:	8b 45 20             	mov    0x20(%ebp),%eax
810032f1:	8b 40 08             	mov    0x8(%eax),%eax
810032f4:	85 c0                	test   %eax,%eax
810032f6:	0f 84 d3 00 00 00    	je     810033cf <getopt_internal+0x97b>
810032fc:	a1 44 90 00 81       	mov    0x81009044,%eax
81003301:	8b 50 0c             	mov    0xc(%eax),%edx
81003304:	8b 45 0c             	mov    0xc(%ebp),%eax
81003307:	8b 00                	mov    (%eax),%eax
81003309:	83 ec 08             	sub    $0x8,%esp
8100330c:	52                   	push   %edx
8100330d:	50                   	push   %eax
8100330e:	e8 63 32 00 00       	call   81006576 <fputs>
81003313:	83 c4 10             	add    $0x10,%esp
81003316:	a1 44 90 00 81       	mov    0x81009044,%eax
8100331b:	8b 40 0c             	mov    0xc(%eax),%eax
8100331e:	83 ec 08             	sub    $0x8,%esp
81003321:	50                   	push   %eax
81003322:	68 60 88 00 81       	push   $0x81008860
81003327:	e8 4a 32 00 00       	call   81006576 <fputs>
8100332c:	83 c4 10             	add    $0x10,%esp
8100332f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003333:	78 54                	js     81003389 <getopt_internal+0x935>
81003335:	a1 44 90 00 81       	mov    0x81009044,%eax
8100333a:	8b 40 0c             	mov    0xc(%eax),%eax
8100333d:	83 ec 08             	sub    $0x8,%esp
81003340:	50                   	push   %eax
81003341:	6a 2d                	push   $0x2d
81003343:	e8 3a 31 00 00       	call   81006482 <fputc>
81003348:	83 c4 10             	add    $0x10,%esp
8100334b:	a1 44 90 00 81       	mov    0x81009044,%eax
81003350:	8b 50 0c             	mov    0xc(%eax),%edx
81003353:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003356:	c1 e0 04             	shl    $0x4,%eax
81003359:	89 c1                	mov    %eax,%ecx
8100335b:	8b 45 14             	mov    0x14(%ebp),%eax
8100335e:	01 c8                	add    %ecx,%eax
81003360:	8b 00                	mov    (%eax),%eax
81003362:	83 ec 08             	sub    $0x8,%esp
81003365:	52                   	push   %edx
81003366:	50                   	push   %eax
81003367:	e8 0a 32 00 00       	call   81006576 <fputs>
8100336c:	83 c4 10             	add    $0x10,%esp
8100336f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003373:	74 07                	je     8100337c <getopt_internal+0x928>
81003375:	ba 3a 00 00 00       	mov    $0x3a,%edx
8100337a:	eb 05                	jmp    81003381 <getopt_internal+0x92d>
8100337c:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003381:	8b 45 20             	mov    0x20(%ebp),%eax
81003384:	89 50 0c             	mov    %edx,0xc(%eax)
81003387:	eb 2d                	jmp    810033b6 <getopt_internal+0x962>
81003389:	a1 44 90 00 81       	mov    0x81009044,%eax
8100338e:	8b 50 0c             	mov    0xc(%eax),%edx
81003391:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003394:	0f b6 00             	movzbl (%eax),%eax
81003397:	0f be c0             	movsbl %al,%eax
8100339a:	83 ec 08             	sub    $0x8,%esp
8100339d:	52                   	push   %edx
8100339e:	50                   	push   %eax
8100339f:	e8 de 30 00 00       	call   81006482 <fputc>
810033a4:	83 c4 10             	add    $0x10,%esp
810033a7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810033aa:	0f b6 00             	movzbl (%eax),%eax
810033ad:	0f be d0             	movsbl %al,%edx
810033b0:	8b 45 20             	mov    0x20(%ebp),%eax
810033b3:	89 50 0c             	mov    %edx,0xc(%eax)
810033b6:	a1 44 90 00 81       	mov    0x81009044,%eax
810033bb:	8b 40 0c             	mov    0xc(%eax),%eax
810033be:	83 ec 08             	sub    $0x8,%esp
810033c1:	50                   	push   %eax
810033c2:	68 5b 88 00 81       	push   $0x8100885b
810033c7:	e8 aa 31 00 00       	call   81006576 <fputs>
810033cc:	83 c4 10             	add    $0x10,%esp
810033cf:	8b 45 20             	mov    0x20(%ebp),%eax
810033d2:	8b 40 04             	mov    0x4(%eax),%eax
810033d5:	8d 50 01             	lea    0x1(%eax),%edx
810033d8:	8b 45 20             	mov    0x20(%ebp),%eax
810033db:	89 50 04             	mov    %edx,0x4(%eax)
810033de:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810033e2:	74 0a                	je     810033ee <getopt_internal+0x99a>
810033e4:	b8 3a 00 00 00       	mov    $0x3a,%eax
810033e9:	e9 76 01 00 00       	jmp    81003564 <getopt_internal+0xb10>
810033ee:	b8 3f 00 00 00       	mov    $0x3f,%eax
810033f3:	e9 6c 01 00 00       	jmp    81003564 <getopt_internal+0xb10>
810033f8:	8b 45 20             	mov    0x20(%ebp),%eax
810033fb:	8b 40 04             	mov    0x4(%eax),%eax
810033fe:	83 c0 01             	add    $0x1,%eax
81003401:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003408:	8b 45 0c             	mov    0xc(%ebp),%eax
8100340b:	01 d0                	add    %edx,%eax
8100340d:	8b 10                	mov    (%eax),%edx
8100340f:	8b 45 20             	mov    0x20(%ebp),%eax
81003412:	89 10                	mov    %edx,(%eax)
81003414:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100341b:	8b 45 20             	mov    0x20(%ebp),%eax
8100341e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003425:	eb 58                	jmp    8100347f <getopt_internal+0xa2b>
81003427:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100342b:	79 3e                	jns    8100346b <getopt_internal+0xa17>
8100342d:	8b 45 20             	mov    0x20(%ebp),%eax
81003430:	8b 40 10             	mov    0x10(%eax),%eax
81003433:	8d 50 01             	lea    0x1(%eax),%edx
81003436:	8b 45 20             	mov    0x20(%ebp),%eax
81003439:	89 50 10             	mov    %edx,0x10(%eax)
8100343c:	8b 45 20             	mov    0x20(%ebp),%eax
8100343f:	8b 40 04             	mov    0x4(%eax),%eax
81003442:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003449:	8b 45 0c             	mov    0xc(%ebp),%eax
8100344c:	01 d0                	add    %edx,%eax
8100344e:	8b 10                	mov    (%eax),%edx
81003450:	8b 45 20             	mov    0x20(%ebp),%eax
81003453:	8b 40 10             	mov    0x10(%eax),%eax
81003456:	01 d0                	add    %edx,%eax
81003458:	0f b6 00             	movzbl (%eax),%eax
8100345b:	84 c0                	test   %al,%al
8100345d:	75 16                	jne    81003475 <getopt_internal+0xa21>
8100345f:	8b 45 20             	mov    0x20(%ebp),%eax
81003462:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003469:	eb 0a                	jmp    81003475 <getopt_internal+0xa21>
8100346b:	8b 45 20             	mov    0x20(%ebp),%eax
8100346e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003475:	8b 45 20             	mov    0x20(%ebp),%eax
81003478:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100347e:	90                   	nop
8100347f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003483:	75 57                	jne    810034dc <getopt_internal+0xa88>
81003485:	8b 45 20             	mov    0x20(%ebp),%eax
81003488:	8b 40 10             	mov    0x10(%eax),%eax
8100348b:	83 f8 01             	cmp    $0x1,%eax
8100348e:	75 4c                	jne    810034dc <getopt_internal+0xa88>
81003490:	8b 45 20             	mov    0x20(%ebp),%eax
81003493:	8b 40 18             	mov    0x18(%eax),%eax
81003496:	85 c0                	test   %eax,%eax
81003498:	74 42                	je     810034dc <getopt_internal+0xa88>
8100349a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100349d:	8d 48 01             	lea    0x1(%eax),%ecx
810034a0:	8b 45 20             	mov    0x20(%ebp),%eax
810034a3:	8b 40 18             	mov    0x18(%eax),%eax
810034a6:	8b 55 20             	mov    0x20(%ebp),%edx
810034a9:	8b 52 14             	mov    0x14(%edx),%edx
810034ac:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
810034b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810034b6:	01 da                	add    %ebx,%edx
810034b8:	83 ec 04             	sub    $0x4,%esp
810034bb:	51                   	push   %ecx
810034bc:	50                   	push   %eax
810034bd:	52                   	push   %edx
810034be:	e8 7f f4 ff ff       	call   81002942 <permute>
810034c3:	83 c4 10             	add    $0x10,%esp
810034c6:	8b 45 20             	mov    0x20(%ebp),%eax
810034c9:	8b 40 14             	mov    0x14(%eax),%eax
810034cc:	8d 50 01             	lea    0x1(%eax),%edx
810034cf:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034d2:	01 c2                	add    %eax,%edx
810034d4:	8b 45 20             	mov    0x20(%ebp),%eax
810034d7:	89 50 04             	mov    %edx,0x4(%eax)
810034da:	eb 1f                	jmp    810034fb <getopt_internal+0xaa7>
810034dc:	8b 45 20             	mov    0x20(%ebp),%eax
810034df:	8b 40 10             	mov    0x10(%eax),%eax
810034e2:	83 f8 01             	cmp    $0x1,%eax
810034e5:	75 14                	jne    810034fb <getopt_internal+0xaa7>
810034e7:	8b 45 20             	mov    0x20(%ebp),%eax
810034ea:	8b 40 04             	mov    0x4(%eax),%eax
810034ed:	8d 50 01             	lea    0x1(%eax),%edx
810034f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810034f3:	01 c2                	add    %eax,%edx
810034f5:	8b 45 20             	mov    0x20(%ebp),%eax
810034f8:	89 50 04             	mov    %edx,0x4(%eax)
810034fb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810034ff:	78 5d                	js     8100355e <getopt_internal+0xb0a>
81003501:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003505:	74 08                	je     8100350f <getopt_internal+0xabb>
81003507:	8b 45 18             	mov    0x18(%ebp),%eax
8100350a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100350d:	89 10                	mov    %edx,(%eax)
8100350f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003512:	c1 e0 04             	shl    $0x4,%eax
81003515:	89 c2                	mov    %eax,%edx
81003517:	8b 45 14             	mov    0x14(%ebp),%eax
8100351a:	01 d0                	add    %edx,%eax
8100351c:	8b 40 08             	mov    0x8(%eax),%eax
8100351f:	85 c0                	test   %eax,%eax
81003521:	74 29                	je     8100354c <getopt_internal+0xaf8>
81003523:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003526:	c1 e0 04             	shl    $0x4,%eax
81003529:	89 c2                	mov    %eax,%edx
8100352b:	8b 45 14             	mov    0x14(%ebp),%eax
8100352e:	01 c2                	add    %eax,%edx
81003530:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003533:	c1 e0 04             	shl    $0x4,%eax
81003536:	89 c1                	mov    %eax,%ecx
81003538:	8b 45 14             	mov    0x14(%ebp),%eax
8100353b:	01 c8                	add    %ecx,%eax
8100353d:	8b 40 08             	mov    0x8(%eax),%eax
81003540:	8b 52 0c             	mov    0xc(%edx),%edx
81003543:	89 10                	mov    %edx,(%eax)
81003545:	b8 00 00 00 00       	mov    $0x0,%eax
8100354a:	eb 18                	jmp    81003564 <getopt_internal+0xb10>
8100354c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100354f:	c1 e0 04             	shl    $0x4,%eax
81003552:	89 c2                	mov    %eax,%edx
81003554:	8b 45 14             	mov    0x14(%ebp),%eax
81003557:	01 d0                	add    %edx,%eax
81003559:	8b 40 0c             	mov    0xc(%eax),%eax
8100355c:	eb 06                	jmp    81003564 <getopt_internal+0xb10>
8100355e:	8b 45 20             	mov    0x20(%ebp),%eax
81003561:	8b 40 0c             	mov    0xc(%eax),%eax
81003564:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003567:	c9                   	leave  
81003568:	c3                   	ret    

81003569 <getopt>:
81003569:	55                   	push   %ebp
8100356a:	89 e5                	mov    %esp,%ebp
8100356c:	83 ec 28             	sub    $0x28,%esp
8100356f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003572:	50                   	push   %eax
81003573:	e8 31 f4 ff ff       	call   810029a9 <read_globals>
81003578:	83 c4 04             	add    $0x4,%esp
8100357b:	83 ec 04             	sub    $0x4,%esp
8100357e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003581:	50                   	push   %eax
81003582:	6a 00                	push   $0x0
81003584:	6a 00                	push   $0x0
81003586:	6a 00                	push   $0x0
81003588:	ff 75 10             	push   0x10(%ebp)
8100358b:	ff 75 0c             	push   0xc(%ebp)
8100358e:	ff 75 08             	push   0x8(%ebp)
81003591:	e8 be f4 ff ff       	call   81002a54 <getopt_internal>
81003596:	83 c4 20             	add    $0x20,%esp
81003599:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100359c:	83 ec 0c             	sub    $0xc,%esp
8100359f:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035a2:	50                   	push   %eax
810035a3:	e8 5a f4 ff ff       	call   81002a02 <write_globals>
810035a8:	83 c4 10             	add    $0x10,%esp
810035ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ae:	c9                   	leave  
810035af:	c3                   	ret    

810035b0 <getopt_long>:
810035b0:	55                   	push   %ebp
810035b1:	89 e5                	mov    %esp,%ebp
810035b3:	83 ec 28             	sub    $0x28,%esp
810035b6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035b9:	50                   	push   %eax
810035ba:	e8 ea f3 ff ff       	call   810029a9 <read_globals>
810035bf:	83 c4 04             	add    $0x4,%esp
810035c2:	83 ec 04             	sub    $0x4,%esp
810035c5:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035c8:	50                   	push   %eax
810035c9:	6a 00                	push   $0x0
810035cb:	ff 75 18             	push   0x18(%ebp)
810035ce:	ff 75 14             	push   0x14(%ebp)
810035d1:	ff 75 10             	push   0x10(%ebp)
810035d4:	ff 75 0c             	push   0xc(%ebp)
810035d7:	ff 75 08             	push   0x8(%ebp)
810035da:	e8 75 f4 ff ff       	call   81002a54 <getopt_internal>
810035df:	83 c4 20             	add    $0x20,%esp
810035e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810035e5:	83 ec 0c             	sub    $0xc,%esp
810035e8:	8d 45 d8             	lea    -0x28(%ebp),%eax
810035eb:	50                   	push   %eax
810035ec:	e8 11 f4 ff ff       	call   81002a02 <write_globals>
810035f1:	83 c4 10             	add    $0x10,%esp
810035f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035f7:	c9                   	leave  
810035f8:	c3                   	ret    

810035f9 <getopt_long_only>:
810035f9:	55                   	push   %ebp
810035fa:	89 e5                	mov    %esp,%ebp
810035fc:	83 ec 28             	sub    $0x28,%esp
810035ff:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003602:	50                   	push   %eax
81003603:	e8 a1 f3 ff ff       	call   810029a9 <read_globals>
81003608:	83 c4 04             	add    $0x4,%esp
8100360b:	83 ec 04             	sub    $0x4,%esp
8100360e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003611:	50                   	push   %eax
81003612:	6a 01                	push   $0x1
81003614:	ff 75 18             	push   0x18(%ebp)
81003617:	ff 75 14             	push   0x14(%ebp)
8100361a:	ff 75 10             	push   0x10(%ebp)
8100361d:	ff 75 0c             	push   0xc(%ebp)
81003620:	ff 75 08             	push   0x8(%ebp)
81003623:	e8 2c f4 ff ff       	call   81002a54 <getopt_internal>
81003628:	83 c4 20             	add    $0x20,%esp
8100362b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100362e:	83 ec 0c             	sub    $0xc,%esp
81003631:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003634:	50                   	push   %eax
81003635:	e8 c8 f3 ff ff       	call   81002a02 <write_globals>
8100363a:	83 c4 10             	add    $0x10,%esp
8100363d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003640:	c9                   	leave  
81003641:	c3                   	ret    

81003642 <__getopt_r>:
81003642:	55                   	push   %ebp
81003643:	89 e5                	mov    %esp,%ebp
81003645:	83 ec 08             	sub    $0x8,%esp
81003648:	83 ec 04             	sub    $0x4,%esp
8100364b:	ff 75 14             	push   0x14(%ebp)
8100364e:	6a 00                	push   $0x0
81003650:	6a 00                	push   $0x0
81003652:	6a 00                	push   $0x0
81003654:	ff 75 10             	push   0x10(%ebp)
81003657:	ff 75 0c             	push   0xc(%ebp)
8100365a:	ff 75 08             	push   0x8(%ebp)
8100365d:	e8 f2 f3 ff ff       	call   81002a54 <getopt_internal>
81003662:	83 c4 20             	add    $0x20,%esp
81003665:	c9                   	leave  
81003666:	c3                   	ret    

81003667 <__getopt_long_r>:
81003667:	55                   	push   %ebp
81003668:	89 e5                	mov    %esp,%ebp
8100366a:	83 ec 08             	sub    $0x8,%esp
8100366d:	83 ec 04             	sub    $0x4,%esp
81003670:	ff 75 1c             	push   0x1c(%ebp)
81003673:	6a 00                	push   $0x0
81003675:	ff 75 18             	push   0x18(%ebp)
81003678:	ff 75 14             	push   0x14(%ebp)
8100367b:	ff 75 10             	push   0x10(%ebp)
8100367e:	ff 75 0c             	push   0xc(%ebp)
81003681:	ff 75 08             	push   0x8(%ebp)
81003684:	e8 cb f3 ff ff       	call   81002a54 <getopt_internal>
81003689:	83 c4 20             	add    $0x20,%esp
8100368c:	c9                   	leave  
8100368d:	c3                   	ret    

8100368e <__getopt_long_only_r>:
8100368e:	55                   	push   %ebp
8100368f:	89 e5                	mov    %esp,%ebp
81003691:	83 ec 08             	sub    $0x8,%esp
81003694:	83 ec 04             	sub    $0x4,%esp
81003697:	ff 75 1c             	push   0x1c(%ebp)
8100369a:	6a 01                	push   $0x1
8100369c:	ff 75 18             	push   0x18(%ebp)
8100369f:	ff 75 14             	push   0x14(%ebp)
810036a2:	ff 75 10             	push   0x10(%ebp)
810036a5:	ff 75 0c             	push   0xc(%ebp)
810036a8:	ff 75 08             	push   0x8(%ebp)
810036ab:	e8 a4 f3 ff ff       	call   81002a54 <getopt_internal>
810036b0:	83 c4 20             	add    $0x20,%esp
810036b3:	c9                   	leave  
810036b4:	c3                   	ret    

810036b5 <__getreent>:
810036b5:	55                   	push   %ebp
810036b6:	89 e5                	mov    %esp,%ebp
810036b8:	a1 44 90 00 81       	mov    0x81009044,%eax
810036bd:	5d                   	pop    %ebp
810036be:	c3                   	ret    

810036bf <__smakebuf_r>:
810036bf:	55                   	push   %ebp
810036c0:	89 e5                	mov    %esp,%ebp
810036c2:	56                   	push   %esi
810036c3:	53                   	push   %ebx
810036c4:	83 ec 10             	sub    $0x10,%esp
810036c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810036ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036ce:	98                   	cwtl   
810036cf:	83 e0 02             	and    $0x2,%eax
810036d2:	85 c0                	test   %eax,%eax
810036d4:	74 16                	je     810036ec <__smakebuf_r+0x2d>
810036d6:	8d 43 43             	lea    0x43(%ebx),%eax
810036d9:	89 03                	mov    %eax,(%ebx)
810036db:	8b 03                	mov    (%ebx),%eax
810036dd:	89 43 10             	mov    %eax,0x10(%ebx)
810036e0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810036e7:	e9 b9 00 00 00       	jmp    810037a5 <__smakebuf_r+0xe6>
810036ec:	8d 45 ec             	lea    -0x14(%ebp),%eax
810036ef:	50                   	push   %eax
810036f0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810036f3:	50                   	push   %eax
810036f4:	53                   	push   %ebx
810036f5:	ff 75 08             	push   0x8(%ebp)
810036f8:	e8 af 00 00 00       	call   810037ac <__swhatbuf_r>
810036fd:	83 c4 10             	add    $0x10,%esp
81003700:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003703:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003706:	83 ec 08             	sub    $0x8,%esp
81003709:	50                   	push   %eax
8100370a:	ff 75 08             	push   0x8(%ebp)
8100370d:	e8 f9 03 00 00       	call   81003b0b <_malloc_r>
81003712:	83 c4 10             	add    $0x10,%esp
81003715:	89 c6                	mov    %eax,%esi
81003717:	85 f6                	test   %esi,%esi
81003719:	75 2f                	jne    8100374a <__smakebuf_r+0x8b>
8100371b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100371f:	98                   	cwtl   
81003720:	25 00 02 00 00       	and    $0x200,%eax
81003725:	85 c0                	test   %eax,%eax
81003727:	75 7c                	jne    810037a5 <__smakebuf_r+0xe6>
81003729:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100372d:	83 e0 fc             	and    $0xfffffffc,%eax
81003730:	83 c8 02             	or     $0x2,%eax
81003733:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003737:	8d 43 43             	lea    0x43(%ebx),%eax
8100373a:	89 03                	mov    %eax,(%ebx)
8100373c:	8b 03                	mov    (%ebx),%eax
8100373e:	89 43 10             	mov    %eax,0x10(%ebx)
81003741:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003748:	eb 5b                	jmp    810037a5 <__smakebuf_r+0xe6>
8100374a:	8b 45 08             	mov    0x8(%ebp),%eax
8100374d:	c7 40 3c 1d 17 00 81 	movl   $0x8100171d,0x3c(%eax)
81003754:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003758:	0c 80                	or     $0x80,%al
8100375a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100375e:	89 33                	mov    %esi,(%ebx)
81003760:	8b 03                	mov    (%ebx),%eax
81003762:	89 43 10             	mov    %eax,0x10(%ebx)
81003765:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003768:	89 43 14             	mov    %eax,0x14(%ebx)
8100376b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100376e:	85 c0                	test   %eax,%eax
81003770:	74 26                	je     81003798 <__smakebuf_r+0xd9>
81003772:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003776:	98                   	cwtl   
81003777:	83 ec 08             	sub    $0x8,%esp
8100377a:	50                   	push   %eax
8100377b:	ff 75 08             	push   0x8(%ebp)
8100377e:	e8 85 36 00 00       	call   81006e08 <_isatty_r>
81003783:	83 c4 10             	add    $0x10,%esp
81003786:	85 c0                	test   %eax,%eax
81003788:	74 0e                	je     81003798 <__smakebuf_r+0xd9>
8100378a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100378e:	83 e0 fc             	and    $0xfffffffc,%eax
81003791:	83 c8 01             	or     $0x1,%eax
81003794:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003798:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100379c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100379f:	09 d0                	or     %edx,%eax
810037a1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037a5:	8d 65 f8             	lea    -0x8(%ebp),%esp
810037a8:	5b                   	pop    %ebx
810037a9:	5e                   	pop    %esi
810037aa:	5d                   	pop    %ebp
810037ab:	c3                   	ret    

810037ac <__swhatbuf_r>:
810037ac:	55                   	push   %ebp
810037ad:	89 e5                	mov    %esp,%ebp
810037af:	83 ec 58             	sub    $0x58,%esp
810037b2:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810037b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810037bc:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810037c0:	66 85 c0             	test   %ax,%ax
810037c3:	78 1f                	js     810037e4 <__swhatbuf_r+0x38>
810037c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810037c8:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810037cc:	98                   	cwtl   
810037cd:	83 ec 04             	sub    $0x4,%esp
810037d0:	8d 55 ac             	lea    -0x54(%ebp),%edx
810037d3:	52                   	push   %edx
810037d4:	50                   	push   %eax
810037d5:	ff 75 08             	push   0x8(%ebp)
810037d8:	e8 b5 ee ff ff       	call   81002692 <_fstat_r>
810037dd:	83 c4 10             	add    $0x10,%esp
810037e0:	85 c0                	test   %eax,%eax
810037e2:	79 35                	jns    81003819 <__swhatbuf_r+0x6d>
810037e4:	8b 45 14             	mov    0x14(%ebp),%eax
810037e7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810037ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810037f0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810037f4:	98                   	cwtl   
810037f5:	25 80 00 00 00       	and    $0x80,%eax
810037fa:	85 c0                	test   %eax,%eax
810037fc:	74 0b                	je     81003809 <__swhatbuf_r+0x5d>
810037fe:	8b 45 10             	mov    0x10(%ebp),%eax
81003801:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003807:	eb 09                	jmp    81003812 <__swhatbuf_r+0x66>
81003809:	8b 45 10             	mov    0x10(%ebp),%eax
8100380c:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003812:	b8 00 00 00 00       	mov    $0x0,%eax
81003817:	eb 24                	jmp    8100383d <__swhatbuf_r+0x91>
81003819:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100381c:	25 00 f0 00 00       	and    $0xf000,%eax
81003821:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003826:	0f 94 c0             	sete   %al
81003829:	0f b6 d0             	movzbl %al,%edx
8100382c:	8b 45 14             	mov    0x14(%ebp),%eax
8100382f:	89 10                	mov    %edx,(%eax)
81003831:	8b 45 10             	mov    0x10(%ebp),%eax
81003834:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100383a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100383d:	c9                   	leave  
8100383e:	c3                   	ret    

8100383f <malloc>:
8100383f:	55                   	push   %ebp
81003840:	89 e5                	mov    %esp,%ebp
81003842:	83 ec 08             	sub    $0x8,%esp
81003845:	a1 44 90 00 81       	mov    0x81009044,%eax
8100384a:	83 ec 08             	sub    $0x8,%esp
8100384d:	ff 75 08             	push   0x8(%ebp)
81003850:	50                   	push   %eax
81003851:	e8 b5 02 00 00       	call   81003b0b <_malloc_r>
81003856:	83 c4 10             	add    $0x10,%esp
81003859:	c9                   	leave  
8100385a:	c3                   	ret    

8100385b <free>:
8100385b:	55                   	push   %ebp
8100385c:	89 e5                	mov    %esp,%ebp
8100385e:	83 ec 08             	sub    $0x8,%esp
81003861:	a1 44 90 00 81       	mov    0x81009044,%eax
81003866:	83 ec 08             	sub    $0x8,%esp
81003869:	ff 75 08             	push   0x8(%ebp)
8100386c:	50                   	push   %eax
8100386d:	e8 d6 e3 ff ff       	call   81001c48 <_free_r>
81003872:	83 c4 10             	add    $0x10,%esp
81003875:	90                   	nop
81003876:	c9                   	leave  
81003877:	c3                   	ret    

81003878 <malloc_extend_top>:
81003878:	55                   	push   %ebp
81003879:	89 e5                	mov    %esp,%ebp
8100387b:	83 ec 38             	sub    $0x38,%esp
8100387e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003885:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100388a:	8b 40 08             	mov    0x8(%eax),%eax
8100388d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003890:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003893:	8b 40 04             	mov    0x4(%eax),%eax
81003896:	83 e0 fc             	and    $0xfffffffc,%eax
81003899:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100389c:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100389f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038a2:	01 d0                	add    %edx,%eax
810038a4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810038a7:	8b 15 40 9d 00 81    	mov    0x81009d40,%edx
810038ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810038b0:	01 d0                	add    %edx,%eax
810038b2:	83 c0 10             	add    $0x10,%eax
810038b5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038b8:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810038bf:	a1 6c 94 00 81       	mov    0x8100946c,%eax
810038c4:	83 f8 ff             	cmp    $0xffffffff,%eax
810038c7:	74 15                	je     810038de <malloc_extend_top+0x66>
810038c9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810038cc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038cf:	01 d0                	add    %edx,%eax
810038d1:	8d 50 ff             	lea    -0x1(%eax),%edx
810038d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810038d7:	f7 d8                	neg    %eax
810038d9:	21 d0                	and    %edx,%eax
810038db:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810038e1:	83 ec 08             	sub    $0x8,%esp
810038e4:	50                   	push   %eax
810038e5:	ff 75 08             	push   0x8(%ebp)
810038e8:	e8 b5 1c 00 00       	call   810055a2 <_sbrk_r>
810038ed:	83 c4 10             	add    $0x10,%esp
810038f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038f3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810038f7:	0f 84 0b 02 00 00    	je     81003b08 <malloc_extend_top+0x290>
810038fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003900:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003903:	73 0e                	jae    81003913 <malloc_extend_top+0x9b>
81003905:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100390a:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100390d:	0f 85 f5 01 00 00    	jne    81003b08 <malloc_extend_top+0x290>
81003913:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003918:	89 c2                	mov    %eax,%edx
8100391a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100391d:	01 d0                	add    %edx,%eax
8100391f:	a3 60 9d 00 81       	mov    %eax,0x81009d60
81003924:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003927:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100392a:	75 30                	jne    8100395c <malloc_extend_top+0xe4>
8100392c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100392f:	8d 50 ff             	lea    -0x1(%eax),%edx
81003932:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003935:	21 d0                	and    %edx,%eax
81003937:	85 c0                	test   %eax,%eax
81003939:	75 21                	jne    8100395c <malloc_extend_top+0xe4>
8100393b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100393e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003941:	01 d0                	add    %edx,%eax
81003943:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003946:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100394b:	8b 40 08             	mov    0x8(%eax),%eax
8100394e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003951:	83 ca 01             	or     $0x1,%edx
81003954:	89 50 04             	mov    %edx,0x4(%eax)
81003957:	e9 76 01 00 00       	jmp    81003ad2 <malloc_extend_top+0x25a>
8100395c:	a1 6c 94 00 81       	mov    0x8100946c,%eax
81003961:	83 f8 ff             	cmp    $0xffffffff,%eax
81003964:	75 0a                	jne    81003970 <malloc_extend_top+0xf8>
81003966:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003969:	a3 6c 94 00 81       	mov    %eax,0x8100946c
8100396e:	eb 13                	jmp    81003983 <malloc_extend_top+0x10b>
81003970:	8b 15 60 9d 00 81    	mov    0x81009d60,%edx
81003976:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003979:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100397c:	01 d0                	add    %edx,%eax
8100397e:	a3 60 9d 00 81       	mov    %eax,0x81009d60
81003983:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003986:	83 c0 08             	add    $0x8,%eax
81003989:	83 e0 07             	and    $0x7,%eax
8100398c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100398f:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003993:	74 13                	je     810039a8 <malloc_extend_top+0x130>
81003995:	b8 08 00 00 00       	mov    $0x8,%eax
8100399a:	2b 45 cc             	sub    -0x34(%ebp),%eax
8100399d:	89 45 f0             	mov    %eax,-0x10(%ebp)
810039a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039a3:	01 45 f4             	add    %eax,-0xc(%ebp)
810039a6:	eb 07                	jmp    810039af <malloc_extend_top+0x137>
810039a8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810039af:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039b2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039b5:	01 d0                	add    %edx,%eax
810039b7:	89 c2                	mov    %eax,%edx
810039b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039bc:	83 e8 01             	sub    $0x1,%eax
810039bf:	21 c2                	and    %eax,%edx
810039c1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039c4:	29 d0                	sub    %edx,%eax
810039c6:	01 45 f0             	add    %eax,-0x10(%ebp)
810039c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039cc:	83 e8 01             	sub    $0x1,%eax
810039cf:	21 45 f0             	and    %eax,-0x10(%ebp)
810039d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039d5:	83 ec 08             	sub    $0x8,%esp
810039d8:	50                   	push   %eax
810039d9:	ff 75 08             	push   0x8(%ebp)
810039dc:	e8 c1 1b 00 00       	call   810055a2 <_sbrk_r>
810039e1:	83 c4 10             	add    $0x10,%esp
810039e4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039e7:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810039eb:	75 28                	jne    81003a15 <malloc_extend_top+0x19d>
810039ed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810039f4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810039fb:	8b 55 f4             	mov    -0xc(%ebp),%edx
810039fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a01:	01 d0                	add    %edx,%eax
81003a03:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a06:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81003a0a:	74 09                	je     81003a15 <malloc_extend_top+0x19d>
81003a0c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a0f:	83 e8 08             	sub    $0x8,%eax
81003a12:	01 45 ec             	add    %eax,-0x14(%ebp)
81003a15:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003a1a:	89 c2                	mov    %eax,%edx
81003a1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a1f:	01 d0                	add    %edx,%eax
81003a21:	a3 60 9d 00 81       	mov    %eax,0x81009d60
81003a26:	ba 60 90 00 81       	mov    $0x81009060,%edx
81003a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a2e:	89 42 08             	mov    %eax,0x8(%edx)
81003a31:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a34:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003a37:	89 c2                	mov    %eax,%edx
81003a39:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a3c:	01 d0                	add    %edx,%eax
81003a3e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003a41:	b8 60 90 00 81       	mov    $0x81009060,%eax
81003a46:	8b 40 08             	mov    0x8(%eax),%eax
81003a49:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003a4c:	83 ca 01             	or     $0x1,%edx
81003a4f:	89 50 04             	mov    %edx,0x4(%eax)
81003a52:	b8 60 90 00 81       	mov    $0x81009060,%eax
81003a57:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003a5a:	74 76                	je     81003ad2 <malloc_extend_top+0x25a>
81003a5c:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003a60:	77 14                	ja     81003a76 <malloc_extend_top+0x1fe>
81003a62:	b8 60 90 00 81       	mov    $0x81009060,%eax
81003a67:	8b 40 08             	mov    0x8(%eax),%eax
81003a6a:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81003a71:	e9 93 00 00 00       	jmp    81003b09 <malloc_extend_top+0x291>
81003a76:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a79:	83 e8 0c             	sub    $0xc,%eax
81003a7c:	83 e0 f8             	and    $0xfffffff8,%eax
81003a7f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a82:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a85:	8b 40 04             	mov    0x4(%eax),%eax
81003a88:	83 e0 01             	and    $0x1,%eax
81003a8b:	0b 45 dc             	or     -0x24(%ebp),%eax
81003a8e:	89 c2                	mov    %eax,%edx
81003a90:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a93:	89 50 04             	mov    %edx,0x4(%eax)
81003a96:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003a99:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a9c:	01 d0                	add    %edx,%eax
81003a9e:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003aa5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003aa8:	8d 50 04             	lea    0x4(%eax),%edx
81003aab:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003aae:	01 d0                	add    %edx,%eax
81003ab0:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81003ab7:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003abb:	76 15                	jbe    81003ad2 <malloc_extend_top+0x25a>
81003abd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ac0:	83 c0 08             	add    $0x8,%eax
81003ac3:	83 ec 08             	sub    $0x8,%esp
81003ac6:	50                   	push   %eax
81003ac7:	ff 75 08             	push   0x8(%ebp)
81003aca:	e8 79 e1 ff ff       	call   81001c48 <_free_r>
81003acf:	83 c4 10             	add    $0x10,%esp
81003ad2:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003ad7:	89 c2                	mov    %eax,%edx
81003ad9:	a1 44 9d 00 81       	mov    0x81009d44,%eax
81003ade:	39 c2                	cmp    %eax,%edx
81003ae0:	76 0a                	jbe    81003aec <malloc_extend_top+0x274>
81003ae2:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003ae7:	a3 44 9d 00 81       	mov    %eax,0x81009d44
81003aec:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003af1:	89 c2                	mov    %eax,%edx
81003af3:	a1 48 9d 00 81       	mov    0x81009d48,%eax
81003af8:	39 c2                	cmp    %eax,%edx
81003afa:	76 0d                	jbe    81003b09 <malloc_extend_top+0x291>
81003afc:	a1 60 9d 00 81       	mov    0x81009d60,%eax
81003b01:	a3 48 9d 00 81       	mov    %eax,0x81009d48
81003b06:	eb 01                	jmp    81003b09 <malloc_extend_top+0x291>
81003b08:	90                   	nop
81003b09:	c9                   	leave  
81003b0a:	c3                   	ret    

81003b0b <_malloc_r>:
81003b0b:	55                   	push   %ebp
81003b0c:	89 e5                	mov    %esp,%ebp
81003b0e:	53                   	push   %ebx
81003b0f:	83 ec 44             	sub    $0x44,%esp
81003b12:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b15:	83 c0 0b             	add    $0xb,%eax
81003b18:	83 f8 16             	cmp    $0x16,%eax
81003b1b:	76 0b                	jbe    81003b28 <_malloc_r+0x1d>
81003b1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b20:	83 c0 0b             	add    $0xb,%eax
81003b23:	83 e0 f8             	and    $0xfffffff8,%eax
81003b26:	eb 05                	jmp    81003b2d <_malloc_r+0x22>
81003b28:	b8 10 00 00 00       	mov    $0x10,%eax
81003b2d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003b30:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b33:	85 c0                	test   %eax,%eax
81003b35:	78 08                	js     81003b3f <_malloc_r+0x34>
81003b37:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b3a:	3b 45 0c             	cmp    0xc(%ebp),%eax
81003b3d:	73 13                	jae    81003b52 <_malloc_r+0x47>
81003b3f:	8b 45 08             	mov    0x8(%ebp),%eax
81003b42:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003b48:	b8 00 00 00 00       	mov    $0x0,%eax
81003b4d:	e9 d6 07 00 00       	jmp    81004328 <_malloc_r+0x81d>
81003b52:	83 ec 0c             	sub    $0xc,%esp
81003b55:	ff 75 08             	push   0x8(%ebp)
81003b58:	e8 8b 09 00 00       	call   810044e8 <__malloc_lock>
81003b5d:	83 c4 10             	add    $0x10,%esp
81003b60:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003b67:	0f 87 b0 00 00 00    	ja     81003c1d <_malloc_r+0x112>
81003b6d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b70:	c1 e8 03             	shr    $0x3,%eax
81003b73:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b79:	83 c0 01             	add    $0x1,%eax
81003b7c:	01 c0                	add    %eax,%eax
81003b7e:	c1 e0 02             	shl    $0x2,%eax
81003b81:	05 60 90 00 81       	add    $0x81009060,%eax
81003b86:	83 e8 08             	sub    $0x8,%eax
81003b89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b8c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b8f:	8b 40 0c             	mov    0xc(%eax),%eax
81003b92:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b98:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003b9b:	75 0d                	jne    81003baa <_malloc_r+0x9f>
81003b9d:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81003ba1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003ba4:	8b 40 0c             	mov    0xc(%eax),%eax
81003ba7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003baa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bad:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81003bb0:	74 62                	je     81003c14 <_malloc_r+0x109>
81003bb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bb5:	8b 40 04             	mov    0x4(%eax),%eax
81003bb8:	83 e0 fc             	and    $0xfffffffc,%eax
81003bbb:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003bbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bc1:	8b 40 0c             	mov    0xc(%eax),%eax
81003bc4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003bc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bca:	8b 40 08             	mov    0x8(%eax),%eax
81003bcd:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003bd0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bd3:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003bd6:	89 50 0c             	mov    %edx,0xc(%eax)
81003bd9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bdc:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003bdf:	89 50 08             	mov    %edx,0x8(%eax)
81003be2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003be5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003be8:	01 d0                	add    %edx,%eax
81003bea:	8b 50 04             	mov    0x4(%eax),%edx
81003bed:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003bf0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003bf3:	01 c8                	add    %ecx,%eax
81003bf5:	83 ca 01             	or     $0x1,%edx
81003bf8:	89 50 04             	mov    %edx,0x4(%eax)
81003bfb:	83 ec 0c             	sub    $0xc,%esp
81003bfe:	ff 75 08             	push   0x8(%ebp)
81003c01:	e8 e8 08 00 00       	call   810044ee <__malloc_unlock>
81003c06:	83 c4 10             	add    $0x10,%esp
81003c09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c0c:	83 c0 08             	add    $0x8,%eax
81003c0f:	e9 14 07 00 00       	jmp    81004328 <_malloc_r+0x81d>
81003c14:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003c18:	e9 46 01 00 00       	jmp    81003d63 <_malloc_r+0x258>
81003c1d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c20:	c1 e8 09             	shr    $0x9,%eax
81003c23:	85 c0                	test   %eax,%eax
81003c25:	75 08                	jne    81003c2f <_malloc_r+0x124>
81003c27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c2a:	c1 e8 03             	shr    $0x3,%eax
81003c2d:	eb 77                	jmp    81003ca6 <_malloc_r+0x19b>
81003c2f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c32:	c1 e8 09             	shr    $0x9,%eax
81003c35:	83 f8 04             	cmp    $0x4,%eax
81003c38:	77 0b                	ja     81003c45 <_malloc_r+0x13a>
81003c3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c3d:	c1 e8 06             	shr    $0x6,%eax
81003c40:	83 c0 38             	add    $0x38,%eax
81003c43:	eb 61                	jmp    81003ca6 <_malloc_r+0x19b>
81003c45:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c48:	c1 e8 09             	shr    $0x9,%eax
81003c4b:	83 f8 14             	cmp    $0x14,%eax
81003c4e:	77 0b                	ja     81003c5b <_malloc_r+0x150>
81003c50:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c53:	c1 e8 09             	shr    $0x9,%eax
81003c56:	83 c0 5b             	add    $0x5b,%eax
81003c59:	eb 4b                	jmp    81003ca6 <_malloc_r+0x19b>
81003c5b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c5e:	c1 e8 09             	shr    $0x9,%eax
81003c61:	83 f8 54             	cmp    $0x54,%eax
81003c64:	77 0b                	ja     81003c71 <_malloc_r+0x166>
81003c66:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c69:	c1 e8 0c             	shr    $0xc,%eax
81003c6c:	83 c0 6e             	add    $0x6e,%eax
81003c6f:	eb 35                	jmp    81003ca6 <_malloc_r+0x19b>
81003c71:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c74:	c1 e8 09             	shr    $0x9,%eax
81003c77:	3d 54 01 00 00       	cmp    $0x154,%eax
81003c7c:	77 0b                	ja     81003c89 <_malloc_r+0x17e>
81003c7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c81:	c1 e8 0f             	shr    $0xf,%eax
81003c84:	83 c0 77             	add    $0x77,%eax
81003c87:	eb 1d                	jmp    81003ca6 <_malloc_r+0x19b>
81003c89:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c8c:	c1 e8 09             	shr    $0x9,%eax
81003c8f:	3d 54 05 00 00       	cmp    $0x554,%eax
81003c94:	77 0b                	ja     81003ca1 <_malloc_r+0x196>
81003c96:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c99:	c1 e8 12             	shr    $0x12,%eax
81003c9c:	83 c0 7c             	add    $0x7c,%eax
81003c9f:	eb 05                	jmp    81003ca6 <_malloc_r+0x19b>
81003ca1:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003ca6:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003ca9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cac:	83 c0 01             	add    $0x1,%eax
81003caf:	01 c0                	add    %eax,%eax
81003cb1:	c1 e0 02             	shl    $0x2,%eax
81003cb4:	05 60 90 00 81       	add    $0x81009060,%eax
81003cb9:	83 e8 08             	sub    $0x8,%eax
81003cbc:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003cbf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cc2:	8b 40 0c             	mov    0xc(%eax),%eax
81003cc5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cc8:	e9 86 00 00 00       	jmp    81003d53 <_malloc_r+0x248>
81003ccd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cd0:	8b 40 04             	mov    0x4(%eax),%eax
81003cd3:	83 e0 fc             	and    $0xfffffffc,%eax
81003cd6:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003cd9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003cdc:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003cdf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ce2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003ce6:	7e 06                	jle    81003cee <_malloc_r+0x1e3>
81003ce8:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81003cec:	eb 71                	jmp    81003d5f <_malloc_r+0x254>
81003cee:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003cf2:	78 56                	js     81003d4a <_malloc_r+0x23f>
81003cf4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cf7:	8b 40 0c             	mov    0xc(%eax),%eax
81003cfa:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003cfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d00:	8b 40 08             	mov    0x8(%eax),%eax
81003d03:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003d06:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003d09:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003d0c:	89 50 0c             	mov    %edx,0xc(%eax)
81003d0f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003d12:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003d15:	89 50 08             	mov    %edx,0x8(%eax)
81003d18:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d1b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d1e:	01 d0                	add    %edx,%eax
81003d20:	8b 50 04             	mov    0x4(%eax),%edx
81003d23:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003d26:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d29:	01 c8                	add    %ecx,%eax
81003d2b:	83 ca 01             	or     $0x1,%edx
81003d2e:	89 50 04             	mov    %edx,0x4(%eax)
81003d31:	83 ec 0c             	sub    $0xc,%esp
81003d34:	ff 75 08             	push   0x8(%ebp)
81003d37:	e8 b2 07 00 00       	call   810044ee <__malloc_unlock>
81003d3c:	83 c4 10             	add    $0x10,%esp
81003d3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d42:	83 c0 08             	add    $0x8,%eax
81003d45:	e9 de 05 00 00       	jmp    81004328 <_malloc_r+0x81d>
81003d4a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d4d:	8b 40 0c             	mov    0xc(%eax),%eax
81003d50:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d56:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d59:	0f 85 6e ff ff ff    	jne    81003ccd <_malloc_r+0x1c2>
81003d5f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d63:	b8 68 90 00 81       	mov    $0x81009068,%eax
81003d68:	8b 40 08             	mov    0x8(%eax),%eax
81003d6b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d6e:	b8 68 90 00 81       	mov    $0x81009068,%eax
81003d73:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81003d76:	0f 84 9c 02 00 00    	je     81004018 <_malloc_r+0x50d>
81003d7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d7f:	8b 40 04             	mov    0x4(%eax),%eax
81003d82:	83 e0 fc             	and    $0xfffffffc,%eax
81003d85:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003d88:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003d8b:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d8e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d91:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003d95:	7e 7a                	jle    81003e11 <_malloc_r+0x306>
81003d97:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003d9a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d9d:	01 d0                	add    %edx,%eax
81003d9f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003da2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003da5:	83 c8 01             	or     $0x1,%eax
81003da8:	89 c2                	mov    %eax,%edx
81003daa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003dad:	89 50 04             	mov    %edx,0x4(%eax)
81003db0:	b8 68 90 00 81       	mov    $0x81009068,%eax
81003db5:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003db8:	89 50 0c             	mov    %edx,0xc(%eax)
81003dbb:	ba 68 90 00 81       	mov    $0x81009068,%edx
81003dc0:	8b 40 0c             	mov    0xc(%eax),%eax
81003dc3:	89 42 08             	mov    %eax,0x8(%edx)
81003dc6:	ba 68 90 00 81       	mov    $0x81009068,%edx
81003dcb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dce:	89 50 0c             	mov    %edx,0xc(%eax)
81003dd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dd4:	8b 50 0c             	mov    0xc(%eax),%edx
81003dd7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003dda:	89 50 08             	mov    %edx,0x8(%eax)
81003ddd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003de0:	83 c8 01             	or     $0x1,%eax
81003de3:	89 c2                	mov    %eax,%edx
81003de5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003de8:	89 50 04             	mov    %edx,0x4(%eax)
81003deb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003dee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003df1:	01 c2                	add    %eax,%edx
81003df3:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003df6:	89 02                	mov    %eax,(%edx)
81003df8:	83 ec 0c             	sub    $0xc,%esp
81003dfb:	ff 75 08             	push   0x8(%ebp)
81003dfe:	e8 eb 06 00 00       	call   810044ee <__malloc_unlock>
81003e03:	83 c4 10             	add    $0x10,%esp
81003e06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e09:	83 c0 08             	add    $0x8,%eax
81003e0c:	e9 17 05 00 00       	jmp    81004328 <_malloc_r+0x81d>
81003e11:	b8 68 90 00 81       	mov    $0x81009068,%eax
81003e16:	ba 68 90 00 81       	mov    $0x81009068,%edx
81003e1b:	89 50 0c             	mov    %edx,0xc(%eax)
81003e1e:	ba 68 90 00 81       	mov    $0x81009068,%edx
81003e23:	8b 40 0c             	mov    0xc(%eax),%eax
81003e26:	89 42 08             	mov    %eax,0x8(%edx)
81003e29:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003e2d:	78 32                	js     81003e61 <_malloc_r+0x356>
81003e2f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003e32:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e35:	01 d0                	add    %edx,%eax
81003e37:	8b 50 04             	mov    0x4(%eax),%edx
81003e3a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e40:	01 c8                	add    %ecx,%eax
81003e42:	83 ca 01             	or     $0x1,%edx
81003e45:	89 50 04             	mov    %edx,0x4(%eax)
81003e48:	83 ec 0c             	sub    $0xc,%esp
81003e4b:	ff 75 08             	push   0x8(%ebp)
81003e4e:	e8 9b 06 00 00       	call   810044ee <__malloc_unlock>
81003e53:	83 c4 10             	add    $0x10,%esp
81003e56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e59:	83 c0 08             	add    $0x8,%eax
81003e5c:	e9 c7 04 00 00       	jmp    81004328 <_malloc_r+0x81d>
81003e61:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003e68:	77 7f                	ja     81003ee9 <_malloc_r+0x3de>
81003e6a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003e6d:	c1 e8 03             	shr    $0x3,%eax
81003e70:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003e73:	b8 60 90 00 81       	mov    $0x81009060,%eax
81003e78:	8b 58 04             	mov    0x4(%eax),%ebx
81003e7b:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003e7e:	8d 50 03             	lea    0x3(%eax),%edx
81003e81:	85 c0                	test   %eax,%eax
81003e83:	0f 48 c2             	cmovs  %edx,%eax
81003e86:	c1 f8 02             	sar    $0x2,%eax
81003e89:	ba 01 00 00 00       	mov    $0x1,%edx
81003e8e:	89 c1                	mov    %eax,%ecx
81003e90:	d3 e2                	shl    %cl,%edx
81003e92:	89 d0                	mov    %edx,%eax
81003e94:	ba 60 90 00 81       	mov    $0x81009060,%edx
81003e99:	09 d8                	or     %ebx,%eax
81003e9b:	89 42 04             	mov    %eax,0x4(%edx)
81003e9e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003ea1:	83 c0 01             	add    $0x1,%eax
81003ea4:	01 c0                	add    %eax,%eax
81003ea6:	c1 e0 02             	shl    $0x2,%eax
81003ea9:	05 60 90 00 81       	add    $0x81009060,%eax
81003eae:	83 e8 08             	sub    $0x8,%eax
81003eb1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003eb4:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003eb7:	8b 40 08             	mov    0x8(%eax),%eax
81003eba:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ebd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ec0:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003ec3:	89 50 0c             	mov    %edx,0xc(%eax)
81003ec6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ec9:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003ecc:	89 50 08             	mov    %edx,0x8(%eax)
81003ecf:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003ed2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ed5:	89 50 08             	mov    %edx,0x8(%eax)
81003ed8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003edb:	8b 50 08             	mov    0x8(%eax),%edx
81003ede:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ee1:	89 50 0c             	mov    %edx,0xc(%eax)
81003ee4:	e9 2f 01 00 00       	jmp    81004018 <_malloc_r+0x50d>
81003ee9:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003eec:	c1 e8 09             	shr    $0x9,%eax
81003eef:	85 c0                	test   %eax,%eax
81003ef1:	75 08                	jne    81003efb <_malloc_r+0x3f0>
81003ef3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ef6:	c1 e8 03             	shr    $0x3,%eax
81003ef9:	eb 77                	jmp    81003f72 <_malloc_r+0x467>
81003efb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003efe:	c1 e8 09             	shr    $0x9,%eax
81003f01:	83 f8 04             	cmp    $0x4,%eax
81003f04:	77 0b                	ja     81003f11 <_malloc_r+0x406>
81003f06:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f09:	c1 e8 06             	shr    $0x6,%eax
81003f0c:	83 c0 38             	add    $0x38,%eax
81003f0f:	eb 61                	jmp    81003f72 <_malloc_r+0x467>
81003f11:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f14:	c1 e8 09             	shr    $0x9,%eax
81003f17:	83 f8 14             	cmp    $0x14,%eax
81003f1a:	77 0b                	ja     81003f27 <_malloc_r+0x41c>
81003f1c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f1f:	c1 e8 09             	shr    $0x9,%eax
81003f22:	83 c0 5b             	add    $0x5b,%eax
81003f25:	eb 4b                	jmp    81003f72 <_malloc_r+0x467>
81003f27:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f2a:	c1 e8 09             	shr    $0x9,%eax
81003f2d:	83 f8 54             	cmp    $0x54,%eax
81003f30:	77 0b                	ja     81003f3d <_malloc_r+0x432>
81003f32:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f35:	c1 e8 0c             	shr    $0xc,%eax
81003f38:	83 c0 6e             	add    $0x6e,%eax
81003f3b:	eb 35                	jmp    81003f72 <_malloc_r+0x467>
81003f3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f40:	c1 e8 09             	shr    $0x9,%eax
81003f43:	3d 54 01 00 00       	cmp    $0x154,%eax
81003f48:	77 0b                	ja     81003f55 <_malloc_r+0x44a>
81003f4a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f4d:	c1 e8 0f             	shr    $0xf,%eax
81003f50:	83 c0 77             	add    $0x77,%eax
81003f53:	eb 1d                	jmp    81003f72 <_malloc_r+0x467>
81003f55:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f58:	c1 e8 09             	shr    $0x9,%eax
81003f5b:	3d 54 05 00 00       	cmp    $0x554,%eax
81003f60:	77 0b                	ja     81003f6d <_malloc_r+0x462>
81003f62:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003f65:	c1 e8 12             	shr    $0x12,%eax
81003f68:	83 c0 7c             	add    $0x7c,%eax
81003f6b:	eb 05                	jmp    81003f72 <_malloc_r+0x467>
81003f6d:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003f72:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003f75:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003f78:	83 c0 01             	add    $0x1,%eax
81003f7b:	01 c0                	add    %eax,%eax
81003f7d:	c1 e0 02             	shl    $0x2,%eax
81003f80:	05 60 90 00 81       	add    $0x81009060,%eax
81003f85:	83 e8 08             	sub    $0x8,%eax
81003f88:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003f8e:	8b 40 08             	mov    0x8(%eax),%eax
81003f91:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f94:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f97:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f9a:	75 36                	jne    81003fd2 <_malloc_r+0x4c7>
81003f9c:	b8 60 90 00 81       	mov    $0x81009060,%eax
81003fa1:	8b 58 04             	mov    0x4(%eax),%ebx
81003fa4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003fa7:	8d 50 03             	lea    0x3(%eax),%edx
81003faa:	85 c0                	test   %eax,%eax
81003fac:	0f 48 c2             	cmovs  %edx,%eax
81003faf:	c1 f8 02             	sar    $0x2,%eax
81003fb2:	ba 01 00 00 00       	mov    $0x1,%edx
81003fb7:	89 c1                	mov    %eax,%ecx
81003fb9:	d3 e2                	shl    %cl,%edx
81003fbb:	89 d0                	mov    %edx,%eax
81003fbd:	ba 60 90 00 81       	mov    $0x81009060,%edx
81003fc2:	09 d8                	or     %ebx,%eax
81003fc4:	89 42 04             	mov    %eax,0x4(%edx)
81003fc7:	eb 28                	jmp    81003ff1 <_malloc_r+0x4e6>
81003fc9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fcc:	8b 40 08             	mov    0x8(%eax),%eax
81003fcf:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003fd2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fd5:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fd8:	74 0e                	je     81003fe8 <_malloc_r+0x4dd>
81003fda:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fdd:	8b 40 04             	mov    0x4(%eax),%eax
81003fe0:	83 e0 fc             	and    $0xfffffffc,%eax
81003fe3:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003fe6:	72 e1                	jb     81003fc9 <_malloc_r+0x4be>
81003fe8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003feb:	8b 40 0c             	mov    0xc(%eax),%eax
81003fee:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003ff1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ff4:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003ff7:	89 50 0c             	mov    %edx,0xc(%eax)
81003ffa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ffd:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004000:	89 50 08             	mov    %edx,0x8(%eax)
81004003:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004006:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004009:	89 50 08             	mov    %edx,0x8(%eax)
8100400c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100400f:	8b 50 08             	mov    0x8(%eax),%edx
81004012:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004015:	89 50 0c             	mov    %edx,0xc(%eax)
81004018:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100401b:	8d 50 03             	lea    0x3(%eax),%edx
8100401e:	85 c0                	test   %eax,%eax
81004020:	0f 48 c2             	cmovs  %edx,%eax
81004023:	c1 f8 02             	sar    $0x2,%eax
81004026:	ba 01 00 00 00       	mov    $0x1,%edx
8100402b:	89 c1                	mov    %eax,%ecx
8100402d:	d3 e2                	shl    %cl,%edx
8100402f:	89 d0                	mov    %edx,%eax
81004031:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004034:	b8 60 90 00 81       	mov    $0x81009060,%eax
81004039:	8b 40 04             	mov    0x4(%eax),%eax
8100403c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100403f:	0f 87 13 02 00 00    	ja     81004258 <_malloc_r+0x74d>
81004045:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100404a:	8b 40 04             	mov    0x4(%eax),%eax
8100404d:	23 45 e4             	and    -0x1c(%ebp),%eax
81004050:	85 c0                	test   %eax,%eax
81004052:	75 27                	jne    8100407b <_malloc_r+0x570>
81004054:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004057:	83 e0 fc             	and    $0xfffffffc,%eax
8100405a:	83 c0 04             	add    $0x4,%eax
8100405d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004060:	d1 65 e4             	shll   -0x1c(%ebp)
81004063:	eb 07                	jmp    8100406c <_malloc_r+0x561>
81004065:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004069:	d1 65 e4             	shll   -0x1c(%ebp)
8100406c:	b8 60 90 00 81       	mov    $0x81009060,%eax
81004071:	8b 40 04             	mov    0x4(%eax),%eax
81004074:	23 45 e4             	and    -0x1c(%ebp),%eax
81004077:	85 c0                	test   %eax,%eax
81004079:	74 ea                	je     81004065 <_malloc_r+0x55a>
8100407b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100407e:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004081:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004084:	83 c0 01             	add    $0x1,%eax
81004087:	01 c0                	add    %eax,%eax
81004089:	c1 e0 02             	shl    $0x2,%eax
8100408c:	05 60 90 00 81       	add    $0x81009060,%eax
81004091:	83 e8 08             	sub    $0x8,%eax
81004094:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004097:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100409a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100409d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040a0:	8b 40 0c             	mov    0xc(%eax),%eax
810040a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040a6:	e9 22 01 00 00       	jmp    810041cd <_malloc_r+0x6c2>
810040ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040ae:	8b 40 04             	mov    0x4(%eax),%eax
810040b1:	83 e0 fc             	and    $0xfffffffc,%eax
810040b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810040b7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810040ba:	2b 45 d0             	sub    -0x30(%ebp),%eax
810040bd:	89 45 e8             	mov    %eax,-0x18(%ebp)
810040c0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810040c4:	0f 8e 9e 00 00 00    	jle    81004168 <_malloc_r+0x65d>
810040ca:	8b 55 f4             	mov    -0xc(%ebp),%edx
810040cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040d0:	01 d0                	add    %edx,%eax
810040d2:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810040d5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810040d8:	83 c8 01             	or     $0x1,%eax
810040db:	89 c2                	mov    %eax,%edx
810040dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040e0:	89 50 04             	mov    %edx,0x4(%eax)
810040e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040e6:	8b 40 0c             	mov    0xc(%eax),%eax
810040e9:	89 45 d8             	mov    %eax,-0x28(%ebp)
810040ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040ef:	8b 40 08             	mov    0x8(%eax),%eax
810040f2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810040f5:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040f8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810040fb:	89 50 0c             	mov    %edx,0xc(%eax)
810040fe:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004101:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004104:	89 50 08             	mov    %edx,0x8(%eax)
81004107:	b8 68 90 00 81       	mov    $0x81009068,%eax
8100410c:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100410f:	89 50 0c             	mov    %edx,0xc(%eax)
81004112:	ba 68 90 00 81       	mov    $0x81009068,%edx
81004117:	8b 40 0c             	mov    0xc(%eax),%eax
8100411a:	89 42 08             	mov    %eax,0x8(%edx)
8100411d:	ba 68 90 00 81       	mov    $0x81009068,%edx
81004122:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004125:	89 50 0c             	mov    %edx,0xc(%eax)
81004128:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100412b:	8b 50 0c             	mov    0xc(%eax),%edx
8100412e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004131:	89 50 08             	mov    %edx,0x8(%eax)
81004134:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004137:	83 c8 01             	or     $0x1,%eax
8100413a:	89 c2                	mov    %eax,%edx
8100413c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100413f:	89 50 04             	mov    %edx,0x4(%eax)
81004142:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004145:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004148:	01 c2                	add    %eax,%edx
8100414a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100414d:	89 02                	mov    %eax,(%edx)
8100414f:	83 ec 0c             	sub    $0xc,%esp
81004152:	ff 75 08             	push   0x8(%ebp)
81004155:	e8 94 03 00 00       	call   810044ee <__malloc_unlock>
8100415a:	83 c4 10             	add    $0x10,%esp
8100415d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004160:	83 c0 08             	add    $0x8,%eax
81004163:	e9 c0 01 00 00       	jmp    81004328 <_malloc_r+0x81d>
81004168:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100416c:	78 56                	js     810041c4 <_malloc_r+0x6b9>
8100416e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004171:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004174:	01 d0                	add    %edx,%eax
81004176:	8b 50 04             	mov    0x4(%eax),%edx
81004179:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100417c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100417f:	01 c8                	add    %ecx,%eax
81004181:	83 ca 01             	or     $0x1,%edx
81004184:	89 50 04             	mov    %edx,0x4(%eax)
81004187:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100418a:	8b 40 0c             	mov    0xc(%eax),%eax
8100418d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004190:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004193:	8b 40 08             	mov    0x8(%eax),%eax
81004196:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004199:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100419c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100419f:	89 50 0c             	mov    %edx,0xc(%eax)
810041a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810041a5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810041a8:	89 50 08             	mov    %edx,0x8(%eax)
810041ab:	83 ec 0c             	sub    $0xc,%esp
810041ae:	ff 75 08             	push   0x8(%ebp)
810041b1:	e8 38 03 00 00       	call   810044ee <__malloc_unlock>
810041b6:	83 c4 10             	add    $0x10,%esp
810041b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041bc:	83 c0 08             	add    $0x8,%eax
810041bf:	e9 64 01 00 00       	jmp    81004328 <_malloc_r+0x81d>
810041c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041c7:	8b 40 0c             	mov    0xc(%eax),%eax
810041ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041d0:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810041d3:	0f 85 d2 fe ff ff    	jne    810040ab <_malloc_r+0x5a0>
810041d9:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810041dd:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810041e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041e4:	83 e0 03             	and    $0x3,%eax
810041e7:	85 c0                	test   %eax,%eax
810041e9:	0f 85 ae fe ff ff    	jne    8100409d <_malloc_r+0x592>
810041ef:	8b 45 e0             	mov    -0x20(%ebp),%eax
810041f2:	83 e0 03             	and    $0x3,%eax
810041f5:	85 c0                	test   %eax,%eax
810041f7:	75 19                	jne    81004212 <_malloc_r+0x707>
810041f9:	b8 60 90 00 81       	mov    $0x81009060,%eax
810041fe:	8b 48 04             	mov    0x4(%eax),%ecx
81004201:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004204:	f7 d0                	not    %eax
81004206:	ba 60 90 00 81       	mov    $0x81009060,%edx
8100420b:	21 c8                	and    %ecx,%eax
8100420d:	89 42 04             	mov    %eax,0x4(%edx)
81004210:	eb 13                	jmp    81004225 <_malloc_r+0x71a>
81004212:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81004216:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100421a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100421d:	8b 40 08             	mov    0x8(%eax),%eax
81004220:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81004223:	74 ca                	je     810041ef <_malloc_r+0x6e4>
81004225:	d1 65 e4             	shll   -0x1c(%ebp)
81004228:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100422d:	8b 40 04             	mov    0x4(%eax),%eax
81004230:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004233:	77 23                	ja     81004258 <_malloc_r+0x74d>
81004235:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004239:	74 1d                	je     81004258 <_malloc_r+0x74d>
8100423b:	eb 07                	jmp    81004244 <_malloc_r+0x739>
8100423d:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81004241:	d1 65 e4             	shll   -0x1c(%ebp)
81004244:	b8 60 90 00 81       	mov    $0x81009060,%eax
81004249:	8b 40 04             	mov    0x4(%eax),%eax
8100424c:	23 45 e4             	and    -0x1c(%ebp),%eax
8100424f:	85 c0                	test   %eax,%eax
81004251:	74 ea                	je     8100423d <_malloc_r+0x732>
81004253:	e9 23 fe ff ff       	jmp    8100407b <_malloc_r+0x570>
81004258:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100425d:	8b 40 08             	mov    0x8(%eax),%eax
81004260:	8b 40 04             	mov    0x4(%eax),%eax
81004263:	83 e0 fc             	and    $0xfffffffc,%eax
81004266:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004269:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100426c:	b8 60 90 00 81       	mov    $0x81009060,%eax
81004271:	8b 40 08             	mov    0x8(%eax),%eax
81004274:	8b 40 04             	mov    0x4(%eax),%eax
81004277:	83 e0 fc             	and    $0xfffffffc,%eax
8100427a:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100427d:	77 06                	ja     81004285 <_malloc_r+0x77a>
8100427f:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004283:	7f 53                	jg     810042d8 <_malloc_r+0x7cd>
81004285:	83 ec 08             	sub    $0x8,%esp
81004288:	ff 75 d0             	push   -0x30(%ebp)
8100428b:	ff 75 08             	push   0x8(%ebp)
8100428e:	e8 e5 f5 ff ff       	call   81003878 <malloc_extend_top>
81004293:	83 c4 10             	add    $0x10,%esp
81004296:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100429b:	8b 40 08             	mov    0x8(%eax),%eax
8100429e:	8b 40 04             	mov    0x4(%eax),%eax
810042a1:	83 e0 fc             	and    $0xfffffffc,%eax
810042a4:	2b 45 d0             	sub    -0x30(%ebp),%eax
810042a7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810042aa:	b8 60 90 00 81       	mov    $0x81009060,%eax
810042af:	8b 40 08             	mov    0x8(%eax),%eax
810042b2:	8b 40 04             	mov    0x4(%eax),%eax
810042b5:	83 e0 fc             	and    $0xfffffffc,%eax
810042b8:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810042bb:	77 06                	ja     810042c3 <_malloc_r+0x7b8>
810042bd:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810042c1:	7f 15                	jg     810042d8 <_malloc_r+0x7cd>
810042c3:	83 ec 0c             	sub    $0xc,%esp
810042c6:	ff 75 08             	push   0x8(%ebp)
810042c9:	e8 20 02 00 00       	call   810044ee <__malloc_unlock>
810042ce:	83 c4 10             	add    $0x10,%esp
810042d1:	b8 00 00 00 00       	mov    $0x0,%eax
810042d6:	eb 50                	jmp    81004328 <_malloc_r+0x81d>
810042d8:	b8 60 90 00 81       	mov    $0x81009060,%eax
810042dd:	8b 40 08             	mov    0x8(%eax),%eax
810042e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e6:	83 c8 01             	or     $0x1,%eax
810042e9:	89 c2                	mov    %eax,%edx
810042eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042ee:	89 50 04             	mov    %edx,0x4(%eax)
810042f1:	ba 60 90 00 81       	mov    $0x81009060,%edx
810042f6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810042f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042fc:	01 c8                	add    %ecx,%eax
810042fe:	89 42 08             	mov    %eax,0x8(%edx)
81004301:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004304:	83 c8 01             	or     $0x1,%eax
81004307:	89 c2                	mov    %eax,%edx
81004309:	b8 60 90 00 81       	mov    $0x81009060,%eax
8100430e:	8b 40 08             	mov    0x8(%eax),%eax
81004311:	89 50 04             	mov    %edx,0x4(%eax)
81004314:	83 ec 0c             	sub    $0xc,%esp
81004317:	ff 75 08             	push   0x8(%ebp)
8100431a:	e8 cf 01 00 00       	call   810044ee <__malloc_unlock>
8100431f:	83 c4 10             	add    $0x10,%esp
81004322:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004325:	83 c0 08             	add    $0x8,%eax
81004328:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100432b:	c9                   	leave  
8100432c:	c3                   	ret    
8100432d:	66 90                	xchg   %ax,%ax
8100432f:	90                   	nop

81004330 <memchr>:
81004330:	55                   	push   %ebp
81004331:	89 e5                	mov    %esp,%ebp
81004333:	57                   	push   %edi
81004334:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004338:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100433b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100433e:	31 d2                	xor    %edx,%edx
81004340:	85 c9                	test   %ecx,%ecx
81004342:	74 79                	je     810043bd <L20>
81004344:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100434a:	74 28                	je     81004374 <L5>
8100434c:	3a 07                	cmp    (%edi),%al
8100434e:	74 6a                	je     810043ba <L15>
81004350:	47                   	inc    %edi
81004351:	49                   	dec    %ecx
81004352:	74 69                	je     810043bd <L20>
81004354:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100435a:	74 18                	je     81004374 <L5>
8100435c:	3a 07                	cmp    (%edi),%al
8100435e:	74 5a                	je     810043ba <L15>
81004360:	47                   	inc    %edi
81004361:	49                   	dec    %ecx
81004362:	74 59                	je     810043bd <L20>
81004364:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100436a:	74 08                	je     81004374 <L5>
8100436c:	3a 07                	cmp    (%edi),%al
8100436e:	74 4a                	je     810043ba <L15>
81004370:	47                   	inc    %edi
81004371:	49                   	dec    %ecx
81004372:	74 49                	je     810043bd <L20>

81004374 <L5>:
81004374:	88 c4                	mov    %al,%ah
81004376:	89 c2                	mov    %eax,%edx
81004378:	c1 e2 10             	shl    $0x10,%edx
8100437b:	09 d0                	or     %edx,%eax
8100437d:	53                   	push   %ebx
8100437e:	66 90                	xchg   %ax,%ax

81004380 <L8>:
81004380:	83 e9 04             	sub    $0x4,%ecx
81004383:	72 1c                	jb     810043a1 <L9>
81004385:	8b 17                	mov    (%edi),%edx
81004387:	83 c7 04             	add    $0x4,%edi
8100438a:	31 c2                	xor    %eax,%edx
8100438c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004392:	f7 d2                	not    %edx
81004394:	21 d3                	and    %edx,%ebx
81004396:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100439c:	74 e2                	je     81004380 <L8>
8100439e:	83 ef 04             	sub    $0x4,%edi

810043a1 <L9>:
810043a1:	5b                   	pop    %ebx
810043a2:	31 d2                	xor    %edx,%edx
810043a4:	83 c1 04             	add    $0x4,%ecx
810043a7:	74 14                	je     810043bd <L20>
810043a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810043b0 <L10>:
810043b0:	3a 07                	cmp    (%edi),%al
810043b2:	74 06                	je     810043ba <L15>
810043b4:	47                   	inc    %edi
810043b5:	49                   	dec    %ecx
810043b6:	75 f8                	jne    810043b0 <L10>
810043b8:	31 ff                	xor    %edi,%edi

810043ba <L15>:
810043ba:	4a                   	dec    %edx
810043bb:	21 fa                	and    %edi,%edx

810043bd <L20>:
810043bd:	89 d0                	mov    %edx,%eax
810043bf:	8d 65 fc             	lea    -0x4(%ebp),%esp
810043c2:	5f                   	pop    %edi
810043c3:	c9                   	leave  
810043c4:	c3                   	ret    

810043c5 <memcmp>:
810043c5:	55                   	push   %ebp
810043c6:	89 e5                	mov    %esp,%ebp
810043c8:	83 ec 10             	sub    $0x10,%esp
810043cb:	53                   	push   %ebx
810043cc:	57                   	push   %edi
810043cd:	56                   	push   %esi
810043ce:	8b 7d 08             	mov    0x8(%ebp),%edi
810043d1:	8b 75 0c             	mov    0xc(%ebp),%esi
810043d4:	8b 4d 10             	mov    0x10(%ebp),%ecx
810043d7:	fc                   	cld    
810043d8:	31 c0                	xor    %eax,%eax
810043da:	85 c9                	test   %ecx,%ecx
810043dc:	74 31                	je     8100440f <L4>
810043de:	89 f8                	mov    %edi,%eax
810043e0:	09 f0                	or     %esi,%eax
810043e2:	a8 03                	test   $0x3,%al
810043e4:	75 1b                	jne    81004401 <BYTECMP>
810043e6:	89 cb                	mov    %ecx,%ebx
810043e8:	c1 e9 02             	shr    $0x2,%ecx
810043eb:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810043ed:	74 0d                	je     810043fc <L5>
810043ef:	83 ee 04             	sub    $0x4,%esi
810043f2:	83 ef 04             	sub    $0x4,%edi
810043f5:	b9 04 00 00 00       	mov    $0x4,%ecx
810043fa:	eb 05                	jmp    81004401 <BYTECMP>

810043fc <L5>:
810043fc:	83 e3 03             	and    $0x3,%ebx
810043ff:	89 d9                	mov    %ebx,%ecx

81004401 <BYTECMP>:
81004401:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004403 <L3>:
81004403:	31 d2                	xor    %edx,%edx
81004405:	8a 56 ff             	mov    -0x1(%esi),%dl
81004408:	31 c0                	xor    %eax,%eax
8100440a:	8a 47 ff             	mov    -0x1(%edi),%al
8100440d:	29 d0                	sub    %edx,%eax

8100440f <L4>:
8100440f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004412:	5e                   	pop    %esi
81004413:	5f                   	pop    %edi
81004414:	5b                   	pop    %ebx
81004415:	c9                   	leave  
81004416:	c3                   	ret    
81004417:	90                   	nop

81004418 <memcpy>:
81004418:	55                   	push   %ebp
81004419:	89 e5                	mov    %esp,%ebp
8100441b:	56                   	push   %esi
8100441c:	57                   	push   %edi
8100441d:	53                   	push   %ebx
8100441e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004421:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004424:	8b 75 0c             	mov    0xc(%ebp),%esi
81004427:	fc                   	cld    
81004428:	83 f9 08             	cmp    $0x8,%ecx
8100442b:	76 26                	jbe    81004453 <memcpy+0x3b>
8100442d:	89 fa                	mov    %edi,%edx
8100442f:	89 cb                	mov    %ecx,%ebx
81004431:	83 e2 03             	and    $0x3,%edx
81004434:	74 10                	je     81004446 <memcpy+0x2e>
81004436:	b9 04 00 00 00       	mov    $0x4,%ecx
8100443b:	29 d1                	sub    %edx,%ecx
8100443d:	83 e1 03             	and    $0x3,%ecx
81004440:	29 cb                	sub    %ecx,%ebx
81004442:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004444:	89 d9                	mov    %ebx,%ecx
81004446:	c1 e9 02             	shr    $0x2,%ecx
81004449:	8d 76 00             	lea    0x0(%esi),%esi
8100444c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100444e:	89 d9                	mov    %ebx,%ecx
81004450:	83 e1 03             	and    $0x3,%ecx
81004453:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004455:	8b 45 08             	mov    0x8(%ebp),%eax
81004458:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100445b:	5b                   	pop    %ebx
8100445c:	5f                   	pop    %edi
8100445d:	5e                   	pop    %esi
8100445e:	c9                   	leave  
8100445f:	c3                   	ret    

81004460 <memset>:
81004460:	55                   	push   %ebp
81004461:	89 e5                	mov    %esp,%ebp
81004463:	57                   	push   %edi
81004464:	8b 7d 08             	mov    0x8(%ebp),%edi
81004467:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100446b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100446e:	fc                   	cld    
8100446f:	83 f9 10             	cmp    $0x10,%ecx
81004472:	76 69                	jbe    810044dd <memset+0x7d>
81004474:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100447a:	74 4c                	je     810044c8 <memset+0x68>
8100447c:	88 07                	mov    %al,(%edi)
8100447e:	47                   	inc    %edi
8100447f:	49                   	dec    %ecx
81004480:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004486:	74 40                	je     810044c8 <memset+0x68>
81004488:	88 07                	mov    %al,(%edi)
8100448a:	47                   	inc    %edi
8100448b:	49                   	dec    %ecx
8100448c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004492:	74 34                	je     810044c8 <memset+0x68>
81004494:	88 07                	mov    %al,(%edi)
81004496:	47                   	inc    %edi
81004497:	49                   	dec    %ecx
81004498:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100449e:	74 28                	je     810044c8 <memset+0x68>
810044a0:	88 07                	mov    %al,(%edi)
810044a2:	47                   	inc    %edi
810044a3:	49                   	dec    %ecx
810044a4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044aa:	74 1c                	je     810044c8 <memset+0x68>
810044ac:	88 07                	mov    %al,(%edi)
810044ae:	47                   	inc    %edi
810044af:	49                   	dec    %ecx
810044b0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044b6:	74 10                	je     810044c8 <memset+0x68>
810044b8:	88 07                	mov    %al,(%edi)
810044ba:	47                   	inc    %edi
810044bb:	49                   	dec    %ecx
810044bc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810044c2:	74 04                	je     810044c8 <memset+0x68>
810044c4:	88 07                	mov    %al,(%edi)
810044c6:	47                   	inc    %edi
810044c7:	49                   	dec    %ecx
810044c8:	88 c4                	mov    %al,%ah
810044ca:	89 c2                	mov    %eax,%edx
810044cc:	c1 e2 10             	shl    $0x10,%edx
810044cf:	09 d0                	or     %edx,%eax
810044d1:	89 ca                	mov    %ecx,%edx
810044d3:	c1 e9 02             	shr    $0x2,%ecx
810044d6:	83 e2 03             	and    $0x3,%edx
810044d9:	f3 ab                	rep stos %eax,%es:(%edi)
810044db:	89 d1                	mov    %edx,%ecx
810044dd:	f3 aa                	rep stos %al,%es:(%edi)
810044df:	8b 45 08             	mov    0x8(%ebp),%eax
810044e2:	8d 65 fc             	lea    -0x4(%ebp),%esp
810044e5:	5f                   	pop    %edi
810044e6:	c9                   	leave  
810044e7:	c3                   	ret    

810044e8 <__malloc_lock>:
810044e8:	55                   	push   %ebp
810044e9:	89 e5                	mov    %esp,%ebp
810044eb:	90                   	nop
810044ec:	5d                   	pop    %ebp
810044ed:	c3                   	ret    

810044ee <__malloc_unlock>:
810044ee:	55                   	push   %ebp
810044ef:	89 e5                	mov    %esp,%ebp
810044f1:	90                   	nop
810044f2:	5d                   	pop    %ebp
810044f3:	c3                   	ret    

810044f4 <__sprint_r>:
810044f4:	55                   	push   %ebp
810044f5:	89 e5                	mov    %esp,%ebp
810044f7:	56                   	push   %esi
810044f8:	53                   	push   %ebx
810044f9:	83 ec 10             	sub    $0x10,%esp
810044fc:	8b 5d 10             	mov    0x10(%ebp),%ebx
810044ff:	be 00 00 00 00       	mov    $0x0,%esi
81004504:	8b 43 08             	mov    0x8(%ebx),%eax
81004507:	85 c0                	test   %eax,%eax
81004509:	75 11                	jne    8100451c <__sprint_r+0x28>
8100450b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004512:	b8 00 00 00 00       	mov    $0x0,%eax
81004517:	e9 ad 00 00 00       	jmp    810045c9 <__sprint_r+0xd5>
8100451c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100451f:	8b 40 64             	mov    0x64(%eax),%eax
81004522:	25 00 20 00 00       	and    $0x2000,%eax
81004527:	85 c0                	test   %eax,%eax
81004529:	74 7a                	je     810045a5 <__sprint_r+0xb1>
8100452b:	8b 03                	mov    (%ebx),%eax
8100452d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004530:	eb 6a                	jmp    8100459c <__sprint_r+0xa8>
81004532:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004535:	8b 00                	mov    (%eax),%eax
81004537:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100453a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100453d:	8b 40 04             	mov    0x4(%eax),%eax
81004540:	c1 e8 02             	shr    $0x2,%eax
81004543:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004546:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100454d:	eb 33                	jmp    81004582 <__sprint_r+0x8e>
8100454f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004552:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004559:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100455c:	01 d0                	add    %edx,%eax
8100455e:	8b 00                	mov    (%eax),%eax
81004560:	83 ec 04             	sub    $0x4,%esp
81004563:	ff 75 0c             	push   0xc(%ebp)
81004566:	50                   	push   %eax
81004567:	ff 75 08             	push   0x8(%ebp)
8100456a:	e8 3c 21 00 00       	call   810066ab <_fputwc_r>
8100456f:	83 c4 10             	add    $0x10,%esp
81004572:	83 f8 ff             	cmp    $0xffffffff,%eax
81004575:	75 07                	jne    8100457e <__sprint_r+0x8a>
81004577:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100457c:	eb 3b                	jmp    810045b9 <__sprint_r+0xc5>
8100457e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004582:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004585:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004588:	7c c5                	jl     8100454f <__sprint_r+0x5b>
8100458a:	8b 43 08             	mov    0x8(%ebx),%eax
8100458d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004590:	c1 e2 02             	shl    $0x2,%edx
81004593:	29 d0                	sub    %edx,%eax
81004595:	89 43 08             	mov    %eax,0x8(%ebx)
81004598:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100459c:	8b 43 08             	mov    0x8(%ebx),%eax
8100459f:	85 c0                	test   %eax,%eax
810045a1:	75 8f                	jne    81004532 <__sprint_r+0x3e>
810045a3:	eb 14                	jmp    810045b9 <__sprint_r+0xc5>
810045a5:	83 ec 04             	sub    $0x4,%esp
810045a8:	53                   	push   %ebx
810045a9:	ff 75 0c             	push   0xc(%ebp)
810045ac:	ff 75 08             	push   0x8(%ebp)
810045af:	e8 96 21 00 00       	call   8100674a <__sfvwrite_r>
810045b4:	83 c4 10             	add    $0x10,%esp
810045b7:	89 c6                	mov    %eax,%esi
810045b9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810045c0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810045c7:	89 f0                	mov    %esi,%eax
810045c9:	8d 65 f8             	lea    -0x8(%ebp),%esp
810045cc:	5b                   	pop    %ebx
810045cd:	5e                   	pop    %esi
810045ce:	5d                   	pop    %ebp
810045cf:	c3                   	ret    

810045d0 <__sfputc_r>:
810045d0:	55                   	push   %ebp
810045d1:	89 e5                	mov    %esp,%ebp
810045d3:	83 ec 08             	sub    $0x8,%esp
810045d6:	8b 45 10             	mov    0x10(%ebp),%eax
810045d9:	8b 40 08             	mov    0x8(%eax),%eax
810045dc:	8d 50 ff             	lea    -0x1(%eax),%edx
810045df:	8b 45 10             	mov    0x10(%ebp),%eax
810045e2:	89 50 08             	mov    %edx,0x8(%eax)
810045e5:	8b 45 10             	mov    0x10(%ebp),%eax
810045e8:	8b 40 08             	mov    0x8(%eax),%eax
810045eb:	85 c0                	test   %eax,%eax
810045ed:	79 17                	jns    81004606 <__sfputc_r+0x36>
810045ef:	8b 45 10             	mov    0x10(%ebp),%eax
810045f2:	8b 50 08             	mov    0x8(%eax),%edx
810045f5:	8b 45 10             	mov    0x10(%ebp),%eax
810045f8:	8b 40 18             	mov    0x18(%eax),%eax
810045fb:	39 c2                	cmp    %eax,%edx
810045fd:	7c 21                	jl     81004620 <__sfputc_r+0x50>
810045ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81004602:	3c 0a                	cmp    $0xa,%al
81004604:	74 1a                	je     81004620 <__sfputc_r+0x50>
81004606:	8b 45 10             	mov    0x10(%ebp),%eax
81004609:	8b 00                	mov    (%eax),%eax
8100460b:	8d 48 01             	lea    0x1(%eax),%ecx
8100460e:	8b 55 10             	mov    0x10(%ebp),%edx
81004611:	89 0a                	mov    %ecx,(%edx)
81004613:	8b 55 0c             	mov    0xc(%ebp),%edx
81004616:	88 10                	mov    %dl,(%eax)
81004618:	0f b6 00             	movzbl (%eax),%eax
8100461b:	0f b6 c0             	movzbl %al,%eax
8100461e:	eb 14                	jmp    81004634 <__sfputc_r+0x64>
81004620:	83 ec 04             	sub    $0x4,%esp
81004623:	ff 75 10             	push   0x10(%ebp)
81004626:	ff 75 0c             	push   0xc(%ebp)
81004629:	ff 75 08             	push   0x8(%ebp)
8100462c:	e8 1e 19 00 00       	call   81005f4f <__swbuf_r>
81004631:	83 c4 10             	add    $0x10,%esp
81004634:	c9                   	leave  
81004635:	c3                   	ret    

81004636 <__sfputs_r>:
81004636:	55                   	push   %ebp
81004637:	89 e5                	mov    %esp,%ebp
81004639:	53                   	push   %ebx
8100463a:	83 ec 14             	sub    $0x14,%esp
8100463d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004640:	8b 40 64             	mov    0x64(%eax),%eax
81004643:	25 00 20 00 00       	and    $0x2000,%eax
81004648:	85 c0                	test   %eax,%eax
8100464a:	74 4c                	je     81004698 <__sfputs_r+0x62>
8100464c:	8b 45 10             	mov    0x10(%ebp),%eax
8100464f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004652:	bb 00 00 00 00       	mov    $0x0,%ebx
81004657:	eb 31                	jmp    8100468a <__sfputs_r+0x54>
81004659:	89 d8                	mov    %ebx,%eax
8100465b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004662:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004665:	01 d0                	add    %edx,%eax
81004667:	8b 00                	mov    (%eax),%eax
81004669:	83 ec 04             	sub    $0x4,%esp
8100466c:	ff 75 0c             	push   0xc(%ebp)
8100466f:	50                   	push   %eax
81004670:	ff 75 08             	push   0x8(%ebp)
81004673:	e8 33 20 00 00       	call   810066ab <_fputwc_r>
81004678:	83 c4 10             	add    $0x10,%esp
8100467b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100467e:	75 07                	jne    81004687 <__sfputs_r+0x51>
81004680:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004685:	eb 52                	jmp    810046d9 <__sfputs_r+0xa3>
81004687:	83 c3 01             	add    $0x1,%ebx
8100468a:	8b 45 14             	mov    0x14(%ebp),%eax
8100468d:	c1 e8 02             	shr    $0x2,%eax
81004690:	89 da                	mov    %ebx,%edx
81004692:	39 d0                	cmp    %edx,%eax
81004694:	77 c3                	ja     81004659 <__sfputs_r+0x23>
81004696:	eb 3c                	jmp    810046d4 <__sfputs_r+0x9e>
81004698:	bb 00 00 00 00       	mov    $0x0,%ebx
8100469d:	eb 2e                	jmp    810046cd <__sfputs_r+0x97>
8100469f:	89 da                	mov    %ebx,%edx
810046a1:	8b 45 10             	mov    0x10(%ebp),%eax
810046a4:	01 d0                	add    %edx,%eax
810046a6:	0f b6 00             	movzbl (%eax),%eax
810046a9:	0f be c0             	movsbl %al,%eax
810046ac:	83 ec 04             	sub    $0x4,%esp
810046af:	ff 75 0c             	push   0xc(%ebp)
810046b2:	50                   	push   %eax
810046b3:	ff 75 08             	push   0x8(%ebp)
810046b6:	e8 15 ff ff ff       	call   810045d0 <__sfputc_r>
810046bb:	83 c4 10             	add    $0x10,%esp
810046be:	83 f8 ff             	cmp    $0xffffffff,%eax
810046c1:	75 07                	jne    810046ca <__sfputs_r+0x94>
810046c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810046c8:	eb 0f                	jmp    810046d9 <__sfputs_r+0xa3>
810046ca:	83 c3 01             	add    $0x1,%ebx
810046cd:	89 d8                	mov    %ebx,%eax
810046cf:	39 45 14             	cmp    %eax,0x14(%ebp)
810046d2:	77 cb                	ja     8100469f <__sfputs_r+0x69>
810046d4:	b8 00 00 00 00       	mov    $0x0,%eax
810046d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810046dc:	c9                   	leave  
810046dd:	c3                   	ret    

810046de <vfiprintf>:
810046de:	55                   	push   %ebp
810046df:	89 e5                	mov    %esp,%ebp
810046e1:	83 ec 18             	sub    $0x18,%esp
810046e4:	a1 44 90 00 81       	mov    0x81009044,%eax
810046e9:	ff 75 10             	push   0x10(%ebp)
810046ec:	ff 75 0c             	push   0xc(%ebp)
810046ef:	ff 75 08             	push   0x8(%ebp)
810046f2:	50                   	push   %eax
810046f3:	e8 0b 00 00 00       	call   81004703 <_vfiprintf_r>
810046f8:	83 c4 10             	add    $0x10,%esp
810046fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004701:	c9                   	leave  
81004702:	c3                   	ret    

81004703 <_vfiprintf_r>:
81004703:	55                   	push   %ebp
81004704:	89 e5                	mov    %esp,%ebp
81004706:	57                   	push   %edi
81004707:	56                   	push   %esi
81004708:	53                   	push   %ebx
81004709:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100470f:	c7 45 e4 36 46 00 81 	movl   $0x81004636,-0x1c(%ebp)
81004716:	8b 45 08             	mov    0x8(%ebp),%eax
81004719:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100471c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004720:	74 18                	je     8100473a <_vfiprintf_r+0x37>
81004722:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004725:	8b 40 38             	mov    0x38(%eax),%eax
81004728:	85 c0                	test   %eax,%eax
8100472a:	75 0e                	jne    8100473a <_vfiprintf_r+0x37>
8100472c:	83 ec 0c             	sub    $0xc,%esp
8100472f:	ff 75 e0             	push   -0x20(%ebp)
81004732:	e8 21 d0 ff ff       	call   81001758 <__sinit>
81004737:	83 c4 10             	add    $0x10,%esp
8100473a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100473d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004741:	98                   	cwtl   
81004742:	83 e0 08             	and    $0x8,%eax
81004745:	85 c0                	test   %eax,%eax
81004747:	74 0a                	je     81004753 <_vfiprintf_r+0x50>
81004749:	8b 45 0c             	mov    0xc(%ebp),%eax
8100474c:	8b 40 10             	mov    0x10(%eax),%eax
8100474f:	85 c0                	test   %eax,%eax
81004751:	75 1f                	jne    81004772 <_vfiprintf_r+0x6f>
81004753:	83 ec 08             	sub    $0x8,%esp
81004756:	ff 75 0c             	push   0xc(%ebp)
81004759:	ff 75 08             	push   0x8(%ebp)
8100475c:	e8 67 19 00 00       	call   810060c8 <__swsetup_r>
81004761:	83 c4 10             	add    $0x10,%esp
81004764:	85 c0                	test   %eax,%eax
81004766:	74 0a                	je     81004772 <_vfiprintf_r+0x6f>
81004768:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100476d:	e9 df 02 00 00       	jmp    81004a51 <_vfiprintf_r+0x34e>
81004772:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004775:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100477c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004780:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004784:	8b 45 14             	mov    0x14(%ebp),%eax
81004787:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100478d:	89 de                	mov    %ebx,%esi
8100478f:	eb 03                	jmp    81004794 <_vfiprintf_r+0x91>
81004791:	83 c3 01             	add    $0x1,%ebx
81004794:	0f b6 03             	movzbl (%ebx),%eax
81004797:	84 c0                	test   %al,%al
81004799:	74 07                	je     810047a2 <_vfiprintf_r+0x9f>
8100479b:	0f b6 03             	movzbl (%ebx),%eax
8100479e:	3c 25                	cmp    $0x25,%al
810047a0:	75 ef                	jne    81004791 <_vfiprintf_r+0x8e>
810047a2:	89 d8                	mov    %ebx,%eax
810047a4:	29 f0                	sub    %esi,%eax
810047a6:	85 c0                	test   %eax,%eax
810047a8:	74 2b                	je     810047d5 <_vfiprintf_r+0xd2>
810047aa:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810047b0:	50                   	push   %eax
810047b1:	56                   	push   %esi
810047b2:	ff 75 0c             	push   0xc(%ebp)
810047b5:	ff 75 08             	push   0x8(%ebp)
810047b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810047bb:	ff d0                	call   *%eax
810047bd:	83 c4 10             	add    $0x10,%esp
810047c0:	83 f8 ff             	cmp    $0xffffffff,%eax
810047c3:	0f 84 68 02 00 00    	je     81004a31 <_vfiprintf_r+0x32e>
810047c9:	8b 45 94             	mov    -0x6c(%ebp),%eax
810047cc:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
810047d2:	89 45 94             	mov    %eax,-0x6c(%ebp)
810047d5:	0f b6 03             	movzbl (%ebx),%eax
810047d8:	84 c0                	test   %al,%al
810047da:	0f 84 54 02 00 00    	je     81004a34 <_vfiprintf_r+0x331>
810047e0:	83 c3 01             	add    $0x1,%ebx
810047e3:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810047ea:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810047f1:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810047f8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810047ff:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004803:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100480a:	c7 45 dc 88 88 00 81 	movl   $0x81008888,-0x24(%ebp)
81004811:	eb 1b                	jmp    8100482e <_vfiprintf_r+0x12b>
81004813:	8b 55 80             	mov    -0x80(%ebp),%edx
81004816:	89 f0                	mov    %esi,%eax
81004818:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100481b:	be 01 00 00 00       	mov    $0x1,%esi
81004820:	89 c1                	mov    %eax,%ecx
81004822:	d3 e6                	shl    %cl,%esi
81004824:	89 f0                	mov    %esi,%eax
81004826:	09 d0                	or     %edx,%eax
81004828:	89 45 80             	mov    %eax,-0x80(%ebp)
8100482b:	83 c3 01             	add    $0x1,%ebx
8100482e:	0f b6 03             	movzbl (%ebx),%eax
81004831:	0f be c0             	movsbl %al,%eax
81004834:	83 ec 04             	sub    $0x4,%esp
81004837:	6a 05                	push   $0x5
81004839:	50                   	push   %eax
8100483a:	ff 75 dc             	push   -0x24(%ebp)
8100483d:	e8 ee fa ff ff       	call   81004330 <memchr>
81004842:	83 c4 10             	add    $0x10,%esp
81004845:	89 c6                	mov    %eax,%esi
81004847:	85 f6                	test   %esi,%esi
81004849:	75 c8                	jne    81004813 <_vfiprintf_r+0x110>
8100484b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100484e:	83 e0 10             	and    $0x10,%eax
81004851:	85 c0                	test   %eax,%eax
81004853:	74 04                	je     81004859 <_vfiprintf_r+0x156>
81004855:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004859:	8b 45 80             	mov    -0x80(%ebp),%eax
8100485c:	83 e0 08             	and    $0x8,%eax
8100485f:	85 c0                	test   %eax,%eax
81004861:	74 04                	je     81004867 <_vfiprintf_r+0x164>
81004863:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004867:	0f b6 03             	movzbl (%ebx),%eax
8100486a:	3c 2a                	cmp    $0x2a,%al
8100486c:	75 50                	jne    810048be <_vfiprintf_r+0x1bb>
8100486e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004874:	8d 50 04             	lea    0x4(%eax),%edx
81004877:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100487d:	8b 00                	mov    (%eax),%eax
8100487f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004882:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004885:	85 c0                	test   %eax,%eax
81004887:	79 11                	jns    8100489a <_vfiprintf_r+0x197>
81004889:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100488c:	f7 d8                	neg    %eax
8100488e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004891:	8b 45 80             	mov    -0x80(%ebp),%eax
81004894:	83 c8 02             	or     $0x2,%eax
81004897:	89 45 80             	mov    %eax,-0x80(%ebp)
8100489a:	83 c3 01             	add    $0x1,%ebx
8100489d:	eb 2d                	jmp    810048cc <_vfiprintf_r+0x1c9>
8100489f:	8b 55 8c             	mov    -0x74(%ebp),%edx
810048a2:	89 d0                	mov    %edx,%eax
810048a4:	c1 e0 02             	shl    $0x2,%eax
810048a7:	01 d0                	add    %edx,%eax
810048a9:	01 c0                	add    %eax,%eax
810048ab:	89 c2                	mov    %eax,%edx
810048ad:	0f b6 03             	movzbl (%ebx),%eax
810048b0:	0f be c0             	movsbl %al,%eax
810048b3:	83 e8 30             	sub    $0x30,%eax
810048b6:	01 d0                	add    %edx,%eax
810048b8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810048bb:	83 c3 01             	add    $0x1,%ebx
810048be:	0f b6 03             	movzbl (%ebx),%eax
810048c1:	0f be c0             	movsbl %al,%eax
810048c4:	83 e8 30             	sub    $0x30,%eax
810048c7:	83 f8 09             	cmp    $0x9,%eax
810048ca:	76 d3                	jbe    8100489f <_vfiprintf_r+0x19c>
810048cc:	0f b6 03             	movzbl (%ebx),%eax
810048cf:	3c 2e                	cmp    $0x2e,%al
810048d1:	75 67                	jne    8100493a <_vfiprintf_r+0x237>
810048d3:	83 c3 01             	add    $0x1,%ebx
810048d6:	0f b6 03             	movzbl (%ebx),%eax
810048d9:	3c 2a                	cmp    $0x2a,%al
810048db:	75 27                	jne    81004904 <_vfiprintf_r+0x201>
810048dd:	83 c3 01             	add    $0x1,%ebx
810048e0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810048e6:	8d 50 04             	lea    0x4(%eax),%edx
810048e9:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810048ef:	8b 00                	mov    (%eax),%eax
810048f1:	89 45 84             	mov    %eax,-0x7c(%ebp)
810048f4:	8b 45 84             	mov    -0x7c(%ebp),%eax
810048f7:	85 c0                	test   %eax,%eax
810048f9:	79 3f                	jns    8100493a <_vfiprintf_r+0x237>
810048fb:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004902:	eb 36                	jmp    8100493a <_vfiprintf_r+0x237>
81004904:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100490b:	eb 1f                	jmp    8100492c <_vfiprintf_r+0x229>
8100490d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81004910:	89 d0                	mov    %edx,%eax
81004912:	c1 e0 02             	shl    $0x2,%eax
81004915:	01 d0                	add    %edx,%eax
81004917:	01 c0                	add    %eax,%eax
81004919:	89 c2                	mov    %eax,%edx
8100491b:	0f b6 03             	movzbl (%ebx),%eax
8100491e:	0f be c0             	movsbl %al,%eax
81004921:	83 e8 30             	sub    $0x30,%eax
81004924:	01 d0                	add    %edx,%eax
81004926:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004929:	83 c3 01             	add    $0x1,%ebx
8100492c:	0f b6 03             	movzbl (%ebx),%eax
8100492f:	0f be c0             	movsbl %al,%eax
81004932:	83 e8 30             	sub    $0x30,%eax
81004935:	83 f8 09             	cmp    $0x9,%eax
81004938:	76 d3                	jbe    8100490d <_vfiprintf_r+0x20a>
8100493a:	c7 45 dc 8e 88 00 81 	movl   $0x8100888e,-0x24(%ebp)
81004941:	0f b6 03             	movzbl (%ebx),%eax
81004944:	0f be c0             	movsbl %al,%eax
81004947:	83 ec 04             	sub    $0x4,%esp
8100494a:	6a 03                	push   $0x3
8100494c:	50                   	push   %eax
8100494d:	ff 75 dc             	push   -0x24(%ebp)
81004950:	e8 db f9 ff ff       	call   81004330 <memchr>
81004955:	83 c4 10             	add    $0x10,%esp
81004958:	89 c6                	mov    %eax,%esi
8100495a:	85 f6                	test   %esi,%esi
8100495c:	74 1b                	je     81004979 <_vfiprintf_r+0x276>
8100495e:	8b 55 80             	mov    -0x80(%ebp),%edx
81004961:	89 f0                	mov    %esi,%eax
81004963:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004966:	be 40 00 00 00       	mov    $0x40,%esi
8100496b:	89 c1                	mov    %eax,%ecx
8100496d:	d3 e6                	shl    %cl,%esi
8100496f:	89 f0                	mov    %esi,%eax
81004971:	09 d0                	or     %edx,%eax
81004973:	89 45 80             	mov    %eax,-0x80(%ebp)
81004976:	83 c3 01             	add    $0x1,%ebx
81004979:	89 d8                	mov    %ebx,%eax
8100497b:	8d 58 01             	lea    0x1(%eax),%ebx
8100497e:	0f b6 00             	movzbl (%eax),%eax
81004981:	88 45 98             	mov    %al,-0x68(%ebp)
81004984:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81004988:	0f be c0             	movsbl %al,%eax
8100498b:	83 ec 04             	sub    $0x4,%esp
8100498e:	6a 06                	push   $0x6
81004990:	50                   	push   %eax
81004991:	68 92 88 00 81       	push   $0x81008892
81004996:	e8 95 f9 ff ff       	call   81004330 <memchr>
8100499b:	83 c4 10             	add    $0x10,%esp
8100499e:	89 c6                	mov    %eax,%esi
810049a0:	85 f6                	test   %esi,%esi
810049a2:	74 5a                	je     810049fe <_vfiprintf_r+0x2fb>
810049a4:	b8 00 00 00 00       	mov    $0x0,%eax
810049a9:	85 c0                	test   %eax,%eax
810049ab:	75 2e                	jne    810049db <_vfiprintf_r+0x2d8>
810049ad:	8b 45 80             	mov    -0x80(%ebp),%eax
810049b0:	25 00 01 00 00       	and    $0x100,%eax
810049b5:	85 c0                	test   %eax,%eax
810049b7:	74 11                	je     810049ca <_vfiprintf_r+0x2c7>
810049b9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810049bf:	83 c0 0c             	add    $0xc,%eax
810049c2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810049c8:	eb 55                	jmp    81004a1f <_vfiprintf_r+0x31c>
810049ca:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810049d0:	83 c0 08             	add    $0x8,%eax
810049d3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810049d9:	eb 44                	jmp    81004a1f <_vfiprintf_r+0x31c>
810049db:	83 ec 0c             	sub    $0xc,%esp
810049de:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810049e4:	50                   	push   %eax
810049e5:	ff 75 e4             	push   -0x1c(%ebp)
810049e8:	ff 75 0c             	push   0xc(%ebp)
810049eb:	8d 45 80             	lea    -0x80(%ebp),%eax
810049ee:	50                   	push   %eax
810049ef:	ff 75 08             	push   0x8(%ebp)
810049f2:	e8 09 b6 ff 7e       	call   0 <do_help-0x81000000>
810049f7:	83 c4 20             	add    $0x20,%esp
810049fa:	89 c7                	mov    %eax,%edi
810049fc:	eb 21                	jmp    81004a1f <_vfiprintf_r+0x31c>
810049fe:	83 ec 0c             	sub    $0xc,%esp
81004a01:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004a07:	50                   	push   %eax
81004a08:	ff 75 e4             	push   -0x1c(%ebp)
81004a0b:	ff 75 0c             	push   0xc(%ebp)
81004a0e:	8d 45 80             	lea    -0x80(%ebp),%eax
81004a11:	50                   	push   %eax
81004a12:	ff 75 08             	push   0x8(%ebp)
81004a15:	e8 da 01 00 00       	call   81004bf4 <_printf_i>
81004a1a:	83 c4 20             	add    $0x20,%esp
81004a1d:	89 c7                	mov    %eax,%edi
81004a1f:	83 ff ff             	cmp    $0xffffffff,%edi
81004a22:	74 13                	je     81004a37 <_vfiprintf_r+0x334>
81004a24:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a27:	01 f8                	add    %edi,%eax
81004a29:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004a2c:	e9 5c fd ff ff       	jmp    8100478d <_vfiprintf_r+0x8a>
81004a31:	90                   	nop
81004a32:	eb 04                	jmp    81004a38 <_vfiprintf_r+0x335>
81004a34:	90                   	nop
81004a35:	eb 01                	jmp    81004a38 <_vfiprintf_r+0x335>
81004a37:	90                   	nop
81004a38:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a3b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004a3f:	98                   	cwtl   
81004a40:	83 e0 40             	and    $0x40,%eax
81004a43:	85 c0                	test   %eax,%eax
81004a45:	75 05                	jne    81004a4c <_vfiprintf_r+0x349>
81004a47:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004a4a:	eb 05                	jmp    81004a51 <_vfiprintf_r+0x34e>
81004a4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a51:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004a54:	5b                   	pop    %ebx
81004a55:	5e                   	pop    %esi
81004a56:	5f                   	pop    %edi
81004a57:	5d                   	pop    %ebp
81004a58:	c3                   	ret    

81004a59 <_printf_common>:
81004a59:	55                   	push   %ebp
81004a5a:	89 e5                	mov    %esp,%ebp
81004a5c:	83 ec 18             	sub    $0x18,%esp
81004a5f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a62:	8b 50 10             	mov    0x10(%eax),%edx
81004a65:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a68:	8b 40 08             	mov    0x8(%eax),%eax
81004a6b:	39 c2                	cmp    %eax,%edx
81004a6d:	0f 4c d0             	cmovl  %eax,%edx
81004a70:	8b 45 10             	mov    0x10(%ebp),%eax
81004a73:	89 10                	mov    %edx,(%eax)
81004a75:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a78:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004a7c:	84 c0                	test   %al,%al
81004a7e:	74 0d                	je     81004a8d <_printf_common+0x34>
81004a80:	8b 45 10             	mov    0x10(%ebp),%eax
81004a83:	8b 00                	mov    (%eax),%eax
81004a85:	8d 50 01             	lea    0x1(%eax),%edx
81004a88:	8b 45 10             	mov    0x10(%ebp),%eax
81004a8b:	89 10                	mov    %edx,(%eax)
81004a8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a90:	8b 00                	mov    (%eax),%eax
81004a92:	83 e0 20             	and    $0x20,%eax
81004a95:	85 c0                	test   %eax,%eax
81004a97:	74 0d                	je     81004aa6 <_printf_common+0x4d>
81004a99:	8b 45 10             	mov    0x10(%ebp),%eax
81004a9c:	8b 00                	mov    (%eax),%eax
81004a9e:	8d 50 02             	lea    0x2(%eax),%edx
81004aa1:	8b 45 10             	mov    0x10(%ebp),%eax
81004aa4:	89 10                	mov    %edx,(%eax)
81004aa6:	8b 45 0c             	mov    0xc(%ebp),%eax
81004aa9:	8b 00                	mov    (%eax),%eax
81004aab:	83 e0 06             	and    $0x6,%eax
81004aae:	85 c0                	test   %eax,%eax
81004ab0:	75 41                	jne    81004af3 <_printf_common+0x9a>
81004ab2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004ab9:	eb 24                	jmp    81004adf <_printf_common+0x86>
81004abb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004abe:	83 c0 19             	add    $0x19,%eax
81004ac1:	6a 01                	push   $0x1
81004ac3:	50                   	push   %eax
81004ac4:	ff 75 14             	push   0x14(%ebp)
81004ac7:	ff 75 08             	push   0x8(%ebp)
81004aca:	8b 45 18             	mov    0x18(%ebp),%eax
81004acd:	ff d0                	call   *%eax
81004acf:	83 c4 10             	add    $0x10,%esp
81004ad2:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ad5:	0f 84 0b 01 00 00    	je     81004be6 <_printf_common+0x18d>
81004adb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004adf:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ae2:	8b 50 0c             	mov    0xc(%eax),%edx
81004ae5:	8b 45 10             	mov    0x10(%ebp),%eax
81004ae8:	8b 08                	mov    (%eax),%ecx
81004aea:	89 d0                	mov    %edx,%eax
81004aec:	29 c8                	sub    %ecx,%eax
81004aee:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004af1:	7c c8                	jl     81004abb <_printf_common+0x62>
81004af3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004afa:	8b 45 0c             	mov    0xc(%ebp),%eax
81004afd:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004b01:	84 c0                	test   %al,%al
81004b03:	74 04                	je     81004b09 <_printf_common+0xb0>
81004b05:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004b09:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b0c:	8b 00                	mov    (%eax),%eax
81004b0e:	83 e0 20             	and    $0x20,%eax
81004b11:	85 c0                	test   %eax,%eax
81004b13:	74 28                	je     81004b3d <_printf_common+0xe4>
81004b15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b18:	8d 50 01             	lea    0x1(%eax),%edx
81004b1b:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004b1e:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b21:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004b26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b29:	8d 50 01             	lea    0x1(%eax),%edx
81004b2c:	89 55 f4             	mov    %edx,-0xc(%ebp)
81004b2f:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b32:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004b36:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b39:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81004b3d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004b40:	8b 55 0c             	mov    0xc(%ebp),%edx
81004b43:	83 c2 43             	add    $0x43,%edx
81004b46:	50                   	push   %eax
81004b47:	52                   	push   %edx
81004b48:	ff 75 14             	push   0x14(%ebp)
81004b4b:	ff 75 08             	push   0x8(%ebp)
81004b4e:	8b 45 18             	mov    0x18(%ebp),%eax
81004b51:	ff d0                	call   *%eax
81004b53:	83 c4 10             	add    $0x10,%esp
81004b56:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b59:	0f 84 8a 00 00 00    	je     81004be9 <_printf_common+0x190>
81004b5f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b62:	8b 50 0c             	mov    0xc(%eax),%edx
81004b65:	8b 45 10             	mov    0x10(%ebp),%eax
81004b68:	8b 08                	mov    (%eax),%ecx
81004b6a:	89 d0                	mov    %edx,%eax
81004b6c:	29 c8                	sub    %ecx,%eax
81004b6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b71:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b74:	8b 00                	mov    (%eax),%eax
81004b76:	83 e0 06             	and    $0x6,%eax
81004b79:	83 f8 04             	cmp    $0x4,%eax
81004b7c:	75 06                	jne    81004b84 <_printf_common+0x12b>
81004b7e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004b82:	79 07                	jns    81004b8b <_printf_common+0x132>
81004b84:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004b8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b8e:	8b 50 08             	mov    0x8(%eax),%edx
81004b91:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b94:	8b 40 10             	mov    0x10(%eax),%eax
81004b97:	39 c2                	cmp    %eax,%edx
81004b99:	7e 13                	jle    81004bae <_printf_common+0x155>
81004b9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b9e:	8b 50 08             	mov    0x8(%eax),%edx
81004ba1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ba4:	8b 48 10             	mov    0x10(%eax),%ecx
81004ba7:	89 d0                	mov    %edx,%eax
81004ba9:	29 c8                	sub    %ecx,%eax
81004bab:	01 45 f4             	add    %eax,-0xc(%ebp)
81004bae:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81004bb5:	eb 20                	jmp    81004bd7 <_printf_common+0x17e>
81004bb7:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bba:	83 c0 1a             	add    $0x1a,%eax
81004bbd:	6a 01                	push   $0x1
81004bbf:	50                   	push   %eax
81004bc0:	ff 75 14             	push   0x14(%ebp)
81004bc3:	ff 75 08             	push   0x8(%ebp)
81004bc6:	8b 45 18             	mov    0x18(%ebp),%eax
81004bc9:	ff d0                	call   *%eax
81004bcb:	83 c4 10             	add    $0x10,%esp
81004bce:	83 f8 ff             	cmp    $0xffffffff,%eax
81004bd1:	74 19                	je     81004bec <_printf_common+0x193>
81004bd3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004bd7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004bda:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81004bdd:	7c d8                	jl     81004bb7 <_printf_common+0x15e>
81004bdf:	b8 00 00 00 00       	mov    $0x0,%eax
81004be4:	eb 0c                	jmp    81004bf2 <_printf_common+0x199>
81004be6:	90                   	nop
81004be7:	eb 04                	jmp    81004bed <_printf_common+0x194>
81004be9:	90                   	nop
81004bea:	eb 01                	jmp    81004bed <_printf_common+0x194>
81004bec:	90                   	nop
81004bed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004bf2:	c9                   	leave  
81004bf3:	c3                   	ret    

81004bf4 <_printf_i>:
81004bf4:	55                   	push   %ebp
81004bf5:	89 e5                	mov    %esp,%ebp
81004bf7:	53                   	push   %ebx
81004bf8:	83 ec 24             	sub    $0x24,%esp
81004bfb:	8b 45 0c             	mov    0xc(%ebp),%eax
81004bfe:	83 c0 1b             	add    $0x1b,%eax
81004c01:	83 c0 28             	add    $0x28,%eax
81004c04:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c07:	c7 45 e8 9c 88 00 81 	movl   $0x8100889c,-0x18(%ebp)
81004c0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c11:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004c15:	0f be c0             	movsbl %al,%eax
81004c18:	85 c0                	test   %eax,%eax
81004c1a:	0f 84 00 03 00 00    	je     81004f20 <_printf_i+0x32c>
81004c20:	85 c0                	test   %eax,%eax
81004c22:	0f 88 52 03 00 00    	js     81004f7a <_printf_i+0x386>
81004c28:	83 f8 78             	cmp    $0x78,%eax
81004c2b:	0f 8f 49 03 00 00    	jg     81004f7a <_printf_i+0x386>
81004c31:	83 f8 58             	cmp    $0x58,%eax
81004c34:	0f 8c 40 03 00 00    	jl     81004f7a <_printf_i+0x386>
81004c3a:	83 e8 58             	sub    $0x58,%eax
81004c3d:	83 f8 20             	cmp    $0x20,%eax
81004c40:	0f 87 34 03 00 00    	ja     81004f7a <_printf_i+0x386>
81004c46:	8b 04 85 c0 88 00 81 	mov    -0x7eff7740(,%eax,4),%eax
81004c4d:	ff e0                	jmp    *%eax
81004c4f:	8b 45 18             	mov    0x18(%ebp),%eax
81004c52:	8b 00                	mov    (%eax),%eax
81004c54:	8d 48 04             	lea    0x4(%eax),%ecx
81004c57:	8b 55 18             	mov    0x18(%ebp),%edx
81004c5a:	89 0a                	mov    %ecx,(%edx)
81004c5c:	8b 00                	mov    (%eax),%eax
81004c5e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004c62:	89 c2                	mov    %eax,%edx
81004c64:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c67:	88 10                	mov    %dl,(%eax)
81004c69:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c6c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004c73:	e9 1c 03 00 00       	jmp    81004f94 <_printf_i+0x3a0>
81004c78:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c7b:	8b 00                	mov    (%eax),%eax
81004c7d:	25 80 00 00 00       	and    $0x80,%eax
81004c82:	85 c0                	test   %eax,%eax
81004c84:	74 11                	je     81004c97 <_printf_i+0xa3>
81004c86:	8b 45 18             	mov    0x18(%ebp),%eax
81004c89:	8b 00                	mov    (%eax),%eax
81004c8b:	8d 48 04             	lea    0x4(%eax),%ecx
81004c8e:	8b 55 18             	mov    0x18(%ebp),%edx
81004c91:	89 0a                	mov    %ecx,(%edx)
81004c93:	8b 00                	mov    (%eax),%eax
81004c95:	eb 2d                	jmp    81004cc4 <_printf_i+0xd0>
81004c97:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c9a:	8b 00                	mov    (%eax),%eax
81004c9c:	83 e0 40             	and    $0x40,%eax
81004c9f:	85 c0                	test   %eax,%eax
81004ca1:	74 12                	je     81004cb5 <_printf_i+0xc1>
81004ca3:	8b 45 18             	mov    0x18(%ebp),%eax
81004ca6:	8b 00                	mov    (%eax),%eax
81004ca8:	8d 48 04             	lea    0x4(%eax),%ecx
81004cab:	8b 55 18             	mov    0x18(%ebp),%edx
81004cae:	89 0a                	mov    %ecx,(%edx)
81004cb0:	8b 00                	mov    (%eax),%eax
81004cb2:	98                   	cwtl   
81004cb3:	eb 0f                	jmp    81004cc4 <_printf_i+0xd0>
81004cb5:	8b 45 18             	mov    0x18(%ebp),%eax
81004cb8:	8b 00                	mov    (%eax),%eax
81004cba:	8d 48 04             	lea    0x4(%eax),%ecx
81004cbd:	8b 55 18             	mov    0x18(%ebp),%edx
81004cc0:	89 0a                	mov    %ecx,(%edx)
81004cc2:	8b 00                	mov    (%eax),%eax
81004cc4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004cc7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004cca:	85 c0                	test   %eax,%eax
81004ccc:	79 0a                	jns    81004cd8 <_printf_i+0xe4>
81004cce:	f7 5d f4             	negl   -0xc(%ebp)
81004cd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004cd4:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004cd8:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81004cdf:	e9 28 01 00 00       	jmp    81004e0c <_printf_i+0x218>
81004ce4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ce7:	8b 00                	mov    (%eax),%eax
81004ce9:	25 80 00 00 00       	and    $0x80,%eax
81004cee:	85 c0                	test   %eax,%eax
81004cf0:	74 11                	je     81004d03 <_printf_i+0x10f>
81004cf2:	8b 45 18             	mov    0x18(%ebp),%eax
81004cf5:	8b 00                	mov    (%eax),%eax
81004cf7:	8d 48 04             	lea    0x4(%eax),%ecx
81004cfa:	8b 55 18             	mov    0x18(%ebp),%edx
81004cfd:	89 0a                	mov    %ecx,(%edx)
81004cff:	8b 00                	mov    (%eax),%eax
81004d01:	eb 2f                	jmp    81004d32 <_printf_i+0x13e>
81004d03:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d06:	8b 00                	mov    (%eax),%eax
81004d08:	83 e0 40             	and    $0x40,%eax
81004d0b:	85 c0                	test   %eax,%eax
81004d0d:	74 14                	je     81004d23 <_printf_i+0x12f>
81004d0f:	8b 45 18             	mov    0x18(%ebp),%eax
81004d12:	8b 00                	mov    (%eax),%eax
81004d14:	8d 48 04             	lea    0x4(%eax),%ecx
81004d17:	8b 55 18             	mov    0x18(%ebp),%edx
81004d1a:	89 0a                	mov    %ecx,(%edx)
81004d1c:	8b 00                	mov    (%eax),%eax
81004d1e:	0f b7 c0             	movzwl %ax,%eax
81004d21:	eb 0f                	jmp    81004d32 <_printf_i+0x13e>
81004d23:	8b 45 18             	mov    0x18(%ebp),%eax
81004d26:	8b 00                	mov    (%eax),%eax
81004d28:	8d 48 04             	lea    0x4(%eax),%ecx
81004d2b:	8b 55 18             	mov    0x18(%ebp),%edx
81004d2e:	89 0a                	mov    %ecx,(%edx)
81004d30:	8b 00                	mov    (%eax),%eax
81004d32:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d35:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d38:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004d3c:	3c 6f                	cmp    $0x6f,%al
81004d3e:	75 07                	jne    81004d47 <_printf_i+0x153>
81004d40:	b8 08 00 00 00       	mov    $0x8,%eax
81004d45:	eb 05                	jmp    81004d4c <_printf_i+0x158>
81004d47:	b8 0a 00 00 00       	mov    $0xa,%eax
81004d4c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d4f:	e9 b1 00 00 00       	jmp    81004e05 <_printf_i+0x211>
81004d54:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d57:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81004d5b:	eb 1d                	jmp    81004d7a <_printf_i+0x186>
81004d5d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d60:	8b 00                	mov    (%eax),%eax
81004d62:	83 c8 20             	or     $0x20,%eax
81004d65:	89 c2                	mov    %eax,%edx
81004d67:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d6a:	89 10                	mov    %edx,(%eax)
81004d6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d6f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81004d73:	c7 45 e8 ad 88 00 81 	movl   $0x810088ad,-0x18(%ebp)
81004d7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d7d:	8b 00                	mov    (%eax),%eax
81004d7f:	25 80 00 00 00       	and    $0x80,%eax
81004d84:	85 c0                	test   %eax,%eax
81004d86:	74 11                	je     81004d99 <_printf_i+0x1a5>
81004d88:	8b 45 18             	mov    0x18(%ebp),%eax
81004d8b:	8b 00                	mov    (%eax),%eax
81004d8d:	8d 48 04             	lea    0x4(%eax),%ecx
81004d90:	8b 55 18             	mov    0x18(%ebp),%edx
81004d93:	89 0a                	mov    %ecx,(%edx)
81004d95:	8b 00                	mov    (%eax),%eax
81004d97:	eb 2f                	jmp    81004dc8 <_printf_i+0x1d4>
81004d99:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d9c:	8b 00                	mov    (%eax),%eax
81004d9e:	83 e0 40             	and    $0x40,%eax
81004da1:	85 c0                	test   %eax,%eax
81004da3:	74 14                	je     81004db9 <_printf_i+0x1c5>
81004da5:	8b 45 18             	mov    0x18(%ebp),%eax
81004da8:	8b 00                	mov    (%eax),%eax
81004daa:	8d 48 04             	lea    0x4(%eax),%ecx
81004dad:	8b 55 18             	mov    0x18(%ebp),%edx
81004db0:	89 0a                	mov    %ecx,(%edx)
81004db2:	8b 00                	mov    (%eax),%eax
81004db4:	0f b7 c0             	movzwl %ax,%eax
81004db7:	eb 0f                	jmp    81004dc8 <_printf_i+0x1d4>
81004db9:	8b 45 18             	mov    0x18(%ebp),%eax
81004dbc:	8b 00                	mov    (%eax),%eax
81004dbe:	8d 48 04             	lea    0x4(%eax),%ecx
81004dc1:	8b 55 18             	mov    0x18(%ebp),%edx
81004dc4:	89 0a                	mov    %ecx,(%edx)
81004dc6:	8b 00                	mov    (%eax),%eax
81004dc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004dcb:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004dd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004dd5:	8b 00                	mov    (%eax),%eax
81004dd7:	83 e0 01             	and    $0x1,%eax
81004dda:	85 c0                	test   %eax,%eax
81004ddc:	74 0f                	je     81004ded <_printf_i+0x1f9>
81004dde:	8b 45 0c             	mov    0xc(%ebp),%eax
81004de1:	8b 00                	mov    (%eax),%eax
81004de3:	83 c8 20             	or     $0x20,%eax
81004de6:	89 c2                	mov    %eax,%edx
81004de8:	8b 45 0c             	mov    0xc(%ebp),%eax
81004deb:	89 10                	mov    %edx,(%eax)
81004ded:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004df1:	75 11                	jne    81004e04 <_printf_i+0x210>
81004df3:	8b 45 0c             	mov    0xc(%ebp),%eax
81004df6:	8b 00                	mov    (%eax),%eax
81004df8:	83 e0 df             	and    $0xffffffdf,%eax
81004dfb:	89 c2                	mov    %eax,%edx
81004dfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e00:	89 10                	mov    %edx,(%eax)
81004e02:	eb 01                	jmp    81004e05 <_printf_i+0x211>
81004e04:	90                   	nop
81004e05:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e08:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004e0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e0f:	8b 50 04             	mov    0x4(%eax),%edx
81004e12:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e15:	89 50 08             	mov    %edx,0x8(%eax)
81004e18:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e1b:	8b 40 08             	mov    0x8(%eax),%eax
81004e1e:	85 c0                	test   %eax,%eax
81004e20:	78 0f                	js     81004e31 <_printf_i+0x23d>
81004e22:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e25:	8b 00                	mov    (%eax),%eax
81004e27:	83 e0 fb             	and    $0xfffffffb,%eax
81004e2a:	89 c2                	mov    %eax,%edx
81004e2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e2f:	89 10                	mov    %edx,(%eax)
81004e31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e35:	75 0a                	jne    81004e41 <_printf_i+0x24d>
81004e37:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e3a:	8b 40 04             	mov    0x4(%eax),%eax
81004e3d:	85 c0                	test   %eax,%eax
81004e3f:	74 34                	je     81004e75 <_printf_i+0x281>
81004e41:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004e44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e47:	ba 00 00 00 00       	mov    $0x0,%edx
81004e4c:	f7 f1                	div    %ecx
81004e4e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004e51:	01 d0                	add    %edx,%eax
81004e53:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004e57:	0f b6 10             	movzbl (%eax),%edx
81004e5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e5d:	88 10                	mov    %dl,(%eax)
81004e5f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004e62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e65:	ba 00 00 00 00       	mov    $0x0,%edx
81004e6a:	f7 f3                	div    %ebx
81004e6c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e73:	75 cc                	jne    81004e41 <_printf_i+0x24d>
81004e75:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81004e79:	75 26                	jne    81004ea1 <_printf_i+0x2ad>
81004e7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e7e:	8b 00                	mov    (%eax),%eax
81004e80:	83 e0 01             	and    $0x1,%eax
81004e83:	85 c0                	test   %eax,%eax
81004e85:	74 1a                	je     81004ea1 <_printf_i+0x2ad>
81004e87:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e8a:	8b 50 04             	mov    0x4(%eax),%edx
81004e8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e90:	8b 40 10             	mov    0x10(%eax),%eax
81004e93:	39 c2                	cmp    %eax,%edx
81004e95:	7f 0a                	jg     81004ea1 <_printf_i+0x2ad>
81004e97:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004e9b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e9e:	c6 00 30             	movb   $0x30,(%eax)
81004ea1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ea4:	83 c0 1b             	add    $0x1b,%eax
81004ea7:	83 c0 28             	add    $0x28,%eax
81004eaa:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004ead:	89 c2                	mov    %eax,%edx
81004eaf:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb2:	89 50 10             	mov    %edx,0x10(%eax)
81004eb5:	e9 e2 00 00 00       	jmp    81004f9c <_printf_i+0x3a8>
81004eba:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ebd:	8b 00                	mov    (%eax),%eax
81004ebf:	25 80 00 00 00       	and    $0x80,%eax
81004ec4:	85 c0                	test   %eax,%eax
81004ec6:	74 19                	je     81004ee1 <_printf_i+0x2ed>
81004ec8:	8b 45 18             	mov    0x18(%ebp),%eax
81004ecb:	8b 00                	mov    (%eax),%eax
81004ecd:	8d 48 04             	lea    0x4(%eax),%ecx
81004ed0:	8b 55 18             	mov    0x18(%ebp),%edx
81004ed3:	89 0a                	mov    %ecx,(%edx)
81004ed5:	8b 00                	mov    (%eax),%eax
81004ed7:	8b 55 0c             	mov    0xc(%ebp),%edx
81004eda:	8b 52 14             	mov    0x14(%edx),%edx
81004edd:	89 10                	mov    %edx,(%eax)
81004edf:	eb 3f                	jmp    81004f20 <_printf_i+0x32c>
81004ee1:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ee4:	8b 00                	mov    (%eax),%eax
81004ee6:	83 e0 40             	and    $0x40,%eax
81004ee9:	85 c0                	test   %eax,%eax
81004eeb:	74 1c                	je     81004f09 <_printf_i+0x315>
81004eed:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ef0:	8b 58 14             	mov    0x14(%eax),%ebx
81004ef3:	8b 45 18             	mov    0x18(%ebp),%eax
81004ef6:	8b 00                	mov    (%eax),%eax
81004ef8:	8d 48 04             	lea    0x4(%eax),%ecx
81004efb:	8b 55 18             	mov    0x18(%ebp),%edx
81004efe:	89 0a                	mov    %ecx,(%edx)
81004f00:	8b 00                	mov    (%eax),%eax
81004f02:	89 da                	mov    %ebx,%edx
81004f04:	66 89 10             	mov    %dx,(%eax)
81004f07:	eb 17                	jmp    81004f20 <_printf_i+0x32c>
81004f09:	8b 45 18             	mov    0x18(%ebp),%eax
81004f0c:	8b 00                	mov    (%eax),%eax
81004f0e:	8d 48 04             	lea    0x4(%eax),%ecx
81004f11:	8b 55 18             	mov    0x18(%ebp),%edx
81004f14:	89 0a                	mov    %ecx,(%edx)
81004f16:	8b 00                	mov    (%eax),%eax
81004f18:	8b 55 0c             	mov    0xc(%ebp),%edx
81004f1b:	8b 52 14             	mov    0x14(%edx),%edx
81004f1e:	89 10                	mov    %edx,(%eax)
81004f20:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f23:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004f2a:	eb 70                	jmp    81004f9c <_printf_i+0x3a8>
81004f2c:	8b 45 18             	mov    0x18(%ebp),%eax
81004f2f:	8b 00                	mov    (%eax),%eax
81004f31:	8d 48 04             	lea    0x4(%eax),%ecx
81004f34:	8b 55 18             	mov    0x18(%ebp),%edx
81004f37:	89 0a                	mov    %ecx,(%edx)
81004f39:	8b 00                	mov    (%eax),%eax
81004f3b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004f3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f41:	8b 40 04             	mov    0x4(%eax),%eax
81004f44:	83 ec 04             	sub    $0x4,%esp
81004f47:	50                   	push   %eax
81004f48:	6a 00                	push   $0x0
81004f4a:	ff 75 ec             	push   -0x14(%ebp)
81004f4d:	e8 de f3 ff ff       	call   81004330 <memchr>
81004f52:	83 c4 10             	add    $0x10,%esp
81004f55:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004f58:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004f5c:	74 0e                	je     81004f6c <_printf_i+0x378>
81004f5e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004f61:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004f64:	89 c2                	mov    %eax,%edx
81004f66:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f69:	89 50 04             	mov    %edx,0x4(%eax)
81004f6c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f6f:	8b 50 04             	mov    0x4(%eax),%edx
81004f72:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f75:	89 50 10             	mov    %edx,0x10(%eax)
81004f78:	eb 1a                	jmp    81004f94 <_printf_i+0x3a0>
81004f7a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004f7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f81:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004f85:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004f88:	88 10                	mov    %dl,(%eax)
81004f8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f8d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004f94:	8b 45 0c             	mov    0xc(%ebp),%eax
81004f97:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004f9b:	90                   	nop
81004f9c:	83 ec 0c             	sub    $0xc,%esp
81004f9f:	ff 75 14             	push   0x14(%ebp)
81004fa2:	ff 75 10             	push   0x10(%ebp)
81004fa5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81004fa8:	50                   	push   %eax
81004fa9:	ff 75 0c             	push   0xc(%ebp)
81004fac:	ff 75 08             	push   0x8(%ebp)
81004faf:	e8 a5 fa ff ff       	call   81004a59 <_printf_common>
81004fb4:	83 c4 20             	add    $0x20,%esp
81004fb7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004fba:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81004fbe:	74 72                	je     81005032 <_printf_i+0x43e>
81004fc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fc3:	8b 40 10             	mov    0x10(%eax),%eax
81004fc6:	50                   	push   %eax
81004fc7:	ff 75 ec             	push   -0x14(%ebp)
81004fca:	ff 75 10             	push   0x10(%ebp)
81004fcd:	ff 75 08             	push   0x8(%ebp)
81004fd0:	8b 45 14             	mov    0x14(%ebp),%eax
81004fd3:	ff d0                	call   *%eax
81004fd5:	83 c4 10             	add    $0x10,%esp
81004fd8:	83 f8 ff             	cmp    $0xffffffff,%eax
81004fdb:	74 58                	je     81005035 <_printf_i+0x441>
81004fdd:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fe0:	8b 00                	mov    (%eax),%eax
81004fe2:	83 e0 02             	and    $0x2,%eax
81004fe5:	85 c0                	test   %eax,%eax
81004fe7:	74 39                	je     81005022 <_printf_i+0x42e>
81004fe9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81004ff0:	eb 20                	jmp    81005012 <_printf_i+0x41e>
81004ff2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff5:	83 c0 19             	add    $0x19,%eax
81004ff8:	6a 01                	push   $0x1
81004ffa:	50                   	push   %eax
81004ffb:	ff 75 10             	push   0x10(%ebp)
81004ffe:	ff 75 08             	push   0x8(%ebp)
81005001:	8b 45 14             	mov    0x14(%ebp),%eax
81005004:	ff d0                	call   *%eax
81005006:	83 c4 10             	add    $0x10,%esp
81005009:	83 f8 ff             	cmp    $0xffffffff,%eax
8100500c:	74 2a                	je     81005038 <_printf_i+0x444>
8100500e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005012:	8b 45 0c             	mov    0xc(%ebp),%eax
81005015:	8b 40 0c             	mov    0xc(%eax),%eax
81005018:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100501b:	29 d0                	sub    %edx,%eax
8100501d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81005020:	7c d0                	jl     81004ff2 <_printf_i+0x3fe>
81005022:	8b 45 0c             	mov    0xc(%ebp),%eax
81005025:	8b 50 0c             	mov    0xc(%eax),%edx
81005028:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100502b:	39 c2                	cmp    %eax,%edx
8100502d:	0f 4d c2             	cmovge %edx,%eax
81005030:	eb 0c                	jmp    8100503e <_printf_i+0x44a>
81005032:	90                   	nop
81005033:	eb 04                	jmp    81005039 <_printf_i+0x445>
81005035:	90                   	nop
81005036:	eb 01                	jmp    81005039 <_printf_i+0x445>
81005038:	90                   	nop
81005039:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100503e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005041:	c9                   	leave  
81005042:	c3                   	ret    

81005043 <_open_r>:
81005043:	55                   	push   %ebp
81005044:	89 e5                	mov    %esp,%ebp
81005046:	83 ec 18             	sub    $0x18,%esp
81005049:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
81005050:	00 00 00 
81005053:	83 ec 04             	sub    $0x4,%esp
81005056:	ff 75 14             	push   0x14(%ebp)
81005059:	ff 75 10             	push   0x10(%ebp)
8100505c:	ff 75 0c             	push   0xc(%ebp)
8100505f:	e8 7d bb ff ff       	call   81000be1 <open>
81005064:	83 c4 10             	add    $0x10,%esp
81005067:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100506a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100506e:	75 14                	jne    81005084 <_open_r+0x41>
81005070:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
81005075:	85 c0                	test   %eax,%eax
81005077:	74 0b                	je     81005084 <_open_r+0x41>
81005079:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
8100507f:	8b 45 08             	mov    0x8(%ebp),%eax
81005082:	89 10                	mov    %edx,(%eax)
81005084:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005087:	c9                   	leave  
81005088:	c3                   	ret    

81005089 <_iprintf_r>:
81005089:	55                   	push   %ebp
8100508a:	89 e5                	mov    %esp,%ebp
8100508c:	83 ec 18             	sub    $0x18,%esp
8100508f:	8d 45 10             	lea    0x10(%ebp),%eax
81005092:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005095:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005098:	8b 45 08             	mov    0x8(%ebp),%eax
8100509b:	8b 40 08             	mov    0x8(%eax),%eax
8100509e:	52                   	push   %edx
8100509f:	ff 75 0c             	push   0xc(%ebp)
810050a2:	50                   	push   %eax
810050a3:	ff 75 08             	push   0x8(%ebp)
810050a6:	e8 58 f6 ff ff       	call   81004703 <_vfiprintf_r>
810050ab:	83 c4 10             	add    $0x10,%esp
810050ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050b4:	c9                   	leave  
810050b5:	c3                   	ret    

810050b6 <iprintf>:
810050b6:	55                   	push   %ebp
810050b7:	89 e5                	mov    %esp,%ebp
810050b9:	83 ec 18             	sub    $0x18,%esp
810050bc:	a1 44 90 00 81       	mov    0x81009044,%eax
810050c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050c4:	8d 45 0c             	lea    0xc(%ebp),%eax
810050c7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810050ca:	8b 55 ec             	mov    -0x14(%ebp),%edx
810050cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050d0:	8b 40 08             	mov    0x8(%eax),%eax
810050d3:	52                   	push   %edx
810050d4:	ff 75 08             	push   0x8(%ebp)
810050d7:	50                   	push   %eax
810050d8:	ff 75 f4             	push   -0xc(%ebp)
810050db:	e8 23 f6 ff ff       	call   81004703 <_vfiprintf_r>
810050e0:	83 c4 10             	add    $0x10,%esp
810050e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810050e9:	c9                   	leave  
810050ea:	c3                   	ret    

810050eb <_puts_r>:
810050eb:	55                   	push   %ebp
810050ec:	89 e5                	mov    %esp,%ebp
810050ee:	83 ec 38             	sub    $0x38,%esp
810050f1:	83 ec 0c             	sub    $0xc,%esp
810050f4:	ff 75 0c             	push   0xc(%ebp)
810050f7:	e8 74 0a 00 00       	call   81005b70 <strlen>
810050fc:	83 c4 10             	add    $0x10,%esp
810050ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005102:	8b 45 0c             	mov    0xc(%ebp),%eax
81005105:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005108:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100510b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100510e:	c7 45 d4 44 89 00 81 	movl   $0x81008944,-0x2c(%ebp)
81005115:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100511c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100511f:	83 c0 01             	add    $0x1,%eax
81005122:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005125:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005128:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100512b:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81005132:	8b 45 08             	mov    0x8(%ebp),%eax
81005135:	8b 40 08             	mov    0x8(%eax),%eax
81005138:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100513b:	8b 45 08             	mov    0x8(%ebp),%eax
8100513e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005141:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005145:	74 18                	je     8100515f <_puts_r+0x74>
81005147:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100514a:	8b 40 38             	mov    0x38(%eax),%eax
8100514d:	85 c0                	test   %eax,%eax
8100514f:	75 0e                	jne    8100515f <_puts_r+0x74>
81005151:	83 ec 0c             	sub    $0xc,%esp
81005154:	ff 75 ec             	push   -0x14(%ebp)
81005157:	e8 fc c5 ff ff       	call   81001758 <__sinit>
8100515c:	83 c4 10             	add    $0x10,%esp
8100515f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005162:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005166:	98                   	cwtl   
81005167:	25 00 20 00 00       	and    $0x2000,%eax
8100516c:	85 c0                	test   %eax,%eax
8100516e:	75 24                	jne    81005194 <_puts_r+0xa9>
81005170:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005173:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005177:	80 cc 20             	or     $0x20,%ah
8100517a:	89 c2                	mov    %eax,%edx
8100517c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100517f:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005183:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005186:	8b 40 64             	mov    0x64(%eax),%eax
81005189:	80 e4 df             	and    $0xdf,%ah
8100518c:	89 c2                	mov    %eax,%edx
8100518e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005191:	89 50 64             	mov    %edx,0x64(%eax)
81005194:	83 ec 04             	sub    $0x4,%esp
81005197:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100519a:	50                   	push   %eax
8100519b:	ff 75 f0             	push   -0x10(%ebp)
8100519e:	ff 75 08             	push   0x8(%ebp)
810051a1:	e8 a4 15 00 00       	call   8100674a <__sfvwrite_r>
810051a6:	83 c4 10             	add    $0x10,%esp
810051a9:	85 c0                	test   %eax,%eax
810051ab:	74 07                	je     810051b4 <_puts_r+0xc9>
810051ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051b2:	eb 05                	jmp    810051b9 <_puts_r+0xce>
810051b4:	b8 0a 00 00 00       	mov    $0xa,%eax
810051b9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810051bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810051bf:	c9                   	leave  
810051c0:	c3                   	ret    

810051c1 <puts>:
810051c1:	55                   	push   %ebp
810051c2:	89 e5                	mov    %esp,%ebp
810051c4:	83 ec 08             	sub    $0x8,%esp
810051c7:	a1 44 90 00 81       	mov    0x81009044,%eax
810051cc:	83 ec 08             	sub    $0x8,%esp
810051cf:	ff 75 08             	push   0x8(%ebp)
810051d2:	50                   	push   %eax
810051d3:	e8 13 ff ff ff       	call   810050eb <_puts_r>
810051d8:	83 c4 10             	add    $0x10,%esp
810051db:	c9                   	leave  
810051dc:	c3                   	ret    

810051dd <cleanup_glue>:
810051dd:	55                   	push   %ebp
810051de:	89 e5                	mov    %esp,%ebp
810051e0:	83 ec 08             	sub    $0x8,%esp
810051e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810051e6:	8b 00                	mov    (%eax),%eax
810051e8:	85 c0                	test   %eax,%eax
810051ea:	74 14                	je     81005200 <cleanup_glue+0x23>
810051ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810051ef:	8b 00                	mov    (%eax),%eax
810051f1:	83 ec 08             	sub    $0x8,%esp
810051f4:	50                   	push   %eax
810051f5:	ff 75 08             	push   0x8(%ebp)
810051f8:	e8 e0 ff ff ff       	call   810051dd <cleanup_glue>
810051fd:	83 c4 10             	add    $0x10,%esp
81005200:	83 ec 08             	sub    $0x8,%esp
81005203:	ff 75 0c             	push   0xc(%ebp)
81005206:	ff 75 08             	push   0x8(%ebp)
81005209:	e8 3a ca ff ff       	call   81001c48 <_free_r>
8100520e:	83 c4 10             	add    $0x10,%esp
81005211:	90                   	nop
81005212:	c9                   	leave  
81005213:	c3                   	ret    

81005214 <_reclaim_reent>:
81005214:	55                   	push   %ebp
81005215:	89 e5                	mov    %esp,%ebp
81005217:	83 ec 28             	sub    $0x28,%esp
8100521a:	a1 44 90 00 81       	mov    0x81009044,%eax
8100521f:	39 45 08             	cmp    %eax,0x8(%ebp)
81005222:	0f 84 49 01 00 00    	je     81005371 <_reclaim_reent+0x15d>
81005228:	8b 45 08             	mov    0x8(%ebp),%eax
8100522b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100522e:	85 c0                	test   %eax,%eax
81005230:	74 64                	je     81005296 <_reclaim_reent+0x82>
81005232:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005239:	eb 3e                	jmp    81005279 <_reclaim_reent+0x65>
8100523b:	8b 45 08             	mov    0x8(%ebp),%eax
8100523e:	8b 50 4c             	mov    0x4c(%eax),%edx
81005241:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005244:	c1 e0 02             	shl    $0x2,%eax
81005247:	01 d0                	add    %edx,%eax
81005249:	8b 00                	mov    (%eax),%eax
8100524b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100524e:	eb 1f                	jmp    8100526f <_reclaim_reent+0x5b>
81005250:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005253:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005256:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005259:	8b 00                	mov    (%eax),%eax
8100525b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100525e:	83 ec 08             	sub    $0x8,%esp
81005261:	ff 75 e8             	push   -0x18(%ebp)
81005264:	ff 75 08             	push   0x8(%ebp)
81005267:	e8 dc c9 ff ff       	call   81001c48 <_free_r>
8100526c:	83 c4 10             	add    $0x10,%esp
8100526f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005273:	75 db                	jne    81005250 <_reclaim_reent+0x3c>
81005275:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005279:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100527c:	83 f8 1f             	cmp    $0x1f,%eax
8100527f:	76 ba                	jbe    8100523b <_reclaim_reent+0x27>
81005281:	8b 45 08             	mov    0x8(%ebp),%eax
81005284:	8b 40 4c             	mov    0x4c(%eax),%eax
81005287:	83 ec 08             	sub    $0x8,%esp
8100528a:	50                   	push   %eax
8100528b:	ff 75 08             	push   0x8(%ebp)
8100528e:	e8 b5 c9 ff ff       	call   81001c48 <_free_r>
81005293:	83 c4 10             	add    $0x10,%esp
81005296:	8b 45 08             	mov    0x8(%ebp),%eax
81005299:	8b 40 40             	mov    0x40(%eax),%eax
8100529c:	85 c0                	test   %eax,%eax
8100529e:	74 15                	je     810052b5 <_reclaim_reent+0xa1>
810052a0:	8b 45 08             	mov    0x8(%ebp),%eax
810052a3:	8b 40 40             	mov    0x40(%eax),%eax
810052a6:	83 ec 08             	sub    $0x8,%esp
810052a9:	50                   	push   %eax
810052aa:	ff 75 08             	push   0x8(%ebp)
810052ad:	e8 96 c9 ff ff       	call   81001c48 <_free_r>
810052b2:	83 c4 10             	add    $0x10,%esp
810052b5:	8b 45 08             	mov    0x8(%ebp),%eax
810052b8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810052be:	85 c0                	test   %eax,%eax
810052c0:	74 50                	je     81005312 <_reclaim_reent+0xfe>
810052c2:	8b 45 08             	mov    0x8(%ebp),%eax
810052c5:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810052cb:	8b 55 08             	mov    0x8(%ebp),%edx
810052ce:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810052d4:	39 d0                	cmp    %edx,%eax
810052d6:	74 3a                	je     81005312 <_reclaim_reent+0xfe>
810052d8:	8b 45 08             	mov    0x8(%ebp),%eax
810052db:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810052e1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810052e4:	eb 1f                	jmp    81005305 <_reclaim_reent+0xf1>
810052e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810052ec:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052ef:	8b 00                	mov    (%eax),%eax
810052f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810052f4:	83 ec 08             	sub    $0x8,%esp
810052f7:	ff 75 e4             	push   -0x1c(%ebp)
810052fa:	ff 75 08             	push   0x8(%ebp)
810052fd:	e8 46 c9 ff ff       	call   81001c48 <_free_r>
81005302:	83 c4 10             	add    $0x10,%esp
81005305:	8b 45 08             	mov    0x8(%ebp),%eax
81005308:	05 4c 01 00 00       	add    $0x14c,%eax
8100530d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005310:	75 d4                	jne    810052e6 <_reclaim_reent+0xd2>
81005312:	8b 45 08             	mov    0x8(%ebp),%eax
81005315:	8b 40 54             	mov    0x54(%eax),%eax
81005318:	85 c0                	test   %eax,%eax
8100531a:	74 15                	je     81005331 <_reclaim_reent+0x11d>
8100531c:	8b 45 08             	mov    0x8(%ebp),%eax
8100531f:	8b 40 54             	mov    0x54(%eax),%eax
81005322:	83 ec 08             	sub    $0x8,%esp
81005325:	50                   	push   %eax
81005326:	ff 75 08             	push   0x8(%ebp)
81005329:	e8 1a c9 ff ff       	call   81001c48 <_free_r>
8100532e:	83 c4 10             	add    $0x10,%esp
81005331:	8b 45 08             	mov    0x8(%ebp),%eax
81005334:	8b 40 38             	mov    0x38(%eax),%eax
81005337:	85 c0                	test   %eax,%eax
81005339:	74 36                	je     81005371 <_reclaim_reent+0x15d>
8100533b:	8b 45 08             	mov    0x8(%ebp),%eax
8100533e:	8b 40 3c             	mov    0x3c(%eax),%eax
81005341:	83 ec 0c             	sub    $0xc,%esp
81005344:	ff 75 08             	push   0x8(%ebp)
81005347:	ff d0                	call   *%eax
81005349:	83 c4 10             	add    $0x10,%esp
8100534c:	8b 45 08             	mov    0x8(%ebp),%eax
8100534f:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005355:	85 c0                	test   %eax,%eax
81005357:	74 18                	je     81005371 <_reclaim_reent+0x15d>
81005359:	8b 45 08             	mov    0x8(%ebp),%eax
8100535c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81005362:	83 ec 08             	sub    $0x8,%esp
81005365:	50                   	push   %eax
81005366:	ff 75 08             	push   0x8(%ebp)
81005369:	e8 6f fe ff ff       	call   810051dd <cleanup_glue>
8100536e:	83 c4 10             	add    $0x10,%esp
81005371:	90                   	nop
81005372:	c9                   	leave  
81005373:	c3                   	ret    

81005374 <lflush>:
81005374:	55                   	push   %ebp
81005375:	89 e5                	mov    %esp,%ebp
81005377:	83 ec 08             	sub    $0x8,%esp
8100537a:	8b 45 08             	mov    0x8(%ebp),%eax
8100537d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005381:	98                   	cwtl   
81005382:	83 e0 09             	and    $0x9,%eax
81005385:	83 f8 09             	cmp    $0x9,%eax
81005388:	75 10                	jne    8100539a <lflush+0x26>
8100538a:	83 ec 0c             	sub    $0xc,%esp
8100538d:	ff 75 08             	push   0x8(%ebp)
81005390:	e8 18 bf ff ff       	call   810012ad <fflush>
81005395:	83 c4 10             	add    $0x10,%esp
81005398:	eb 05                	jmp    8100539f <lflush+0x2b>
8100539a:	b8 00 00 00 00       	mov    $0x0,%eax
8100539f:	c9                   	leave  
810053a0:	c3                   	ret    

810053a1 <__srefill_r>:
810053a1:	55                   	push   %ebp
810053a2:	89 e5                	mov    %esp,%ebp
810053a4:	56                   	push   %esi
810053a5:	53                   	push   %ebx
810053a6:	83 ec 10             	sub    $0x10,%esp
810053a9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810053ac:	8b 45 08             	mov    0x8(%ebp),%eax
810053af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810053b6:	74 18                	je     810053d0 <__srefill_r+0x2f>
810053b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053bb:	8b 40 38             	mov    0x38(%eax),%eax
810053be:	85 c0                	test   %eax,%eax
810053c0:	75 0e                	jne    810053d0 <__srefill_r+0x2f>
810053c2:	83 ec 0c             	sub    $0xc,%esp
810053c5:	ff 75 f4             	push   -0xc(%ebp)
810053c8:	e8 8b c3 ff ff       	call   81001758 <__sinit>
810053cd:	83 c4 10             	add    $0x10,%esp
810053d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053d4:	98                   	cwtl   
810053d5:	25 00 20 00 00       	and    $0x2000,%eax
810053da:	85 c0                	test   %eax,%eax
810053dc:	75 14                	jne    810053f2 <__srefill_r+0x51>
810053de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053e2:	80 cc 20             	or     $0x20,%ah
810053e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053e9:	8b 43 64             	mov    0x64(%ebx),%eax
810053ec:	80 e4 df             	and    $0xdf,%ah
810053ef:	89 43 64             	mov    %eax,0x64(%ebx)
810053f2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810053f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053fd:	98                   	cwtl   
810053fe:	83 e0 20             	and    $0x20,%eax
81005401:	85 c0                	test   %eax,%eax
81005403:	74 0a                	je     8100540f <__srefill_r+0x6e>
81005405:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100540a:	e9 8c 01 00 00       	jmp    8100559b <__srefill_r+0x1fa>
8100540f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005413:	98                   	cwtl   
81005414:	83 e0 04             	and    $0x4,%eax
81005417:	85 c0                	test   %eax,%eax
81005419:	75 79                	jne    81005494 <__srefill_r+0xf3>
8100541b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100541f:	98                   	cwtl   
81005420:	83 e0 10             	and    $0x10,%eax
81005423:	85 c0                	test   %eax,%eax
81005425:	75 1e                	jne    81005445 <__srefill_r+0xa4>
81005427:	8b 45 08             	mov    0x8(%ebp),%eax
8100542a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005430:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005434:	83 c8 40             	or     $0x40,%eax
81005437:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100543b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005440:	e9 56 01 00 00       	jmp    8100559b <__srefill_r+0x1fa>
81005445:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005449:	98                   	cwtl   
8100544a:	83 e0 08             	and    $0x8,%eax
8100544d:	85 c0                	test   %eax,%eax
8100544f:	74 36                	je     81005487 <__srefill_r+0xe6>
81005451:	83 ec 08             	sub    $0x8,%esp
81005454:	53                   	push   %ebx
81005455:	ff 75 08             	push   0x8(%ebp)
81005458:	e8 f8 bd ff ff       	call   81001255 <_fflush_r>
8100545d:	83 c4 10             	add    $0x10,%esp
81005460:	85 c0                	test   %eax,%eax
81005462:	74 0a                	je     8100546e <__srefill_r+0xcd>
81005464:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005469:	e9 2d 01 00 00       	jmp    8100559b <__srefill_r+0x1fa>
8100546e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005472:	83 e0 f7             	and    $0xfffffff7,%eax
81005475:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005479:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005480:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005487:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100548b:	83 c8 04             	or     $0x4,%eax
8100548e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005492:	eb 46                	jmp    810054da <__srefill_r+0x139>
81005494:	8b 43 30             	mov    0x30(%ebx),%eax
81005497:	85 c0                	test   %eax,%eax
81005499:	74 3f                	je     810054da <__srefill_r+0x139>
8100549b:	8b 53 30             	mov    0x30(%ebx),%edx
8100549e:	8d 43 40             	lea    0x40(%ebx),%eax
810054a1:	39 c2                	cmp    %eax,%edx
810054a3:	74 12                	je     810054b7 <__srefill_r+0x116>
810054a5:	8b 43 30             	mov    0x30(%ebx),%eax
810054a8:	83 ec 08             	sub    $0x8,%esp
810054ab:	50                   	push   %eax
810054ac:	ff 75 08             	push   0x8(%ebp)
810054af:	e8 94 c7 ff ff       	call   81001c48 <_free_r>
810054b4:	83 c4 10             	add    $0x10,%esp
810054b7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810054be:	8b 43 3c             	mov    0x3c(%ebx),%eax
810054c1:	89 43 04             	mov    %eax,0x4(%ebx)
810054c4:	8b 43 04             	mov    0x4(%ebx),%eax
810054c7:	85 c0                	test   %eax,%eax
810054c9:	74 0f                	je     810054da <__srefill_r+0x139>
810054cb:	8b 43 38             	mov    0x38(%ebx),%eax
810054ce:	89 03                	mov    %eax,(%ebx)
810054d0:	b8 00 00 00 00       	mov    $0x0,%eax
810054d5:	e9 c1 00 00 00       	jmp    8100559b <__srefill_r+0x1fa>
810054da:	8b 43 10             	mov    0x10(%ebx),%eax
810054dd:	85 c0                	test   %eax,%eax
810054df:	75 0f                	jne    810054f0 <__srefill_r+0x14f>
810054e1:	83 ec 08             	sub    $0x8,%esp
810054e4:	53                   	push   %ebx
810054e5:	ff 75 08             	push   0x8(%ebp)
810054e8:	e8 d2 e1 ff ff       	call   810036bf <__smakebuf_r>
810054ed:	83 c4 10             	add    $0x10,%esp
810054f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054f4:	98                   	cwtl   
810054f5:	83 e0 03             	and    $0x3,%eax
810054f8:	85 c0                	test   %eax,%eax
810054fa:	74 48                	je     81005544 <__srefill_r+0x1a3>
810054fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005500:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005504:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100550a:	a1 84 88 00 81       	mov    0x81008884,%eax
8100550f:	83 ec 08             	sub    $0x8,%esp
81005512:	68 74 53 00 81       	push   $0x81005374
81005517:	50                   	push   %eax
81005518:	e8 b8 d1 ff ff       	call   810026d5 <_fwalk>
8100551d:	83 c4 10             	add    $0x10,%esp
81005520:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81005524:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005528:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100552c:	98                   	cwtl   
8100552d:	83 e0 09             	and    $0x9,%eax
81005530:	83 f8 09             	cmp    $0x9,%eax
81005533:	75 0f                	jne    81005544 <__srefill_r+0x1a3>
81005535:	83 ec 08             	sub    $0x8,%esp
81005538:	53                   	push   %ebx
81005539:	ff 75 08             	push   0x8(%ebp)
8100553c:	e8 ee ba ff ff       	call   8100102f <__sflush_r>
81005541:	83 c4 10             	add    $0x10,%esp
81005544:	8b 43 10             	mov    0x10(%ebx),%eax
81005547:	89 03                	mov    %eax,(%ebx)
81005549:	8b 43 20             	mov    0x20(%ebx),%eax
8100554c:	8b 73 14             	mov    0x14(%ebx),%esi
8100554f:	8b 0b                	mov    (%ebx),%ecx
81005551:	8b 53 1c             	mov    0x1c(%ebx),%edx
81005554:	56                   	push   %esi
81005555:	51                   	push   %ecx
81005556:	52                   	push   %edx
81005557:	ff 75 08             	push   0x8(%ebp)
8100555a:	ff d0                	call   *%eax
8100555c:	83 c4 10             	add    $0x10,%esp
8100555f:	89 43 04             	mov    %eax,0x4(%ebx)
81005562:	8b 43 04             	mov    0x4(%ebx),%eax
81005565:	85 c0                	test   %eax,%eax
81005567:	7f 2d                	jg     81005596 <__srefill_r+0x1f5>
81005569:	8b 43 04             	mov    0x4(%ebx),%eax
8100556c:	85 c0                	test   %eax,%eax
8100556e:	75 0d                	jne    8100557d <__srefill_r+0x1dc>
81005570:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005574:	83 c8 20             	or     $0x20,%eax
81005577:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100557b:	eb 12                	jmp    8100558f <__srefill_r+0x1ee>
8100557d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005584:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005588:	83 c8 40             	or     $0x40,%eax
8100558b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100558f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005594:	eb 05                	jmp    8100559b <__srefill_r+0x1fa>
81005596:	b8 00 00 00 00       	mov    $0x0,%eax
8100559b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100559e:	5b                   	pop    %ebx
8100559f:	5e                   	pop    %esi
810055a0:	5d                   	pop    %ebp
810055a1:	c3                   	ret    

810055a2 <_sbrk_r>:
810055a2:	55                   	push   %ebp
810055a3:	89 e5                	mov    %esp,%ebp
810055a5:	83 ec 18             	sub    $0x18,%esp
810055a8:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
810055af:	00 00 00 
810055b2:	83 ec 0c             	sub    $0xc,%esp
810055b5:	ff 75 0c             	push   0xc(%ebp)
810055b8:	e8 3b b7 ff ff       	call   81000cf8 <sbrk>
810055bd:	83 c4 10             	add    $0x10,%esp
810055c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810055c3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810055c7:	75 14                	jne    810055dd <_sbrk_r+0x3b>
810055c9:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
810055ce:	85 c0                	test   %eax,%eax
810055d0:	74 0b                	je     810055dd <_sbrk_r+0x3b>
810055d2:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
810055d8:	8b 45 08             	mov    0x8(%ebp),%eax
810055db:	89 10                	mov    %edx,(%eax)
810055dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810055e0:	c9                   	leave  
810055e1:	c3                   	ret    

810055e2 <setvbuf>:
810055e2:	55                   	push   %ebp
810055e3:	89 e5                	mov    %esp,%ebp
810055e5:	57                   	push   %edi
810055e6:	56                   	push   %esi
810055e7:	53                   	push   %ebx
810055e8:	83 ec 2c             	sub    $0x2c,%esp
810055eb:	8b 5d 08             	mov    0x8(%ebp),%ebx
810055ee:	8b 7d 10             	mov    0x10(%ebp),%edi
810055f1:	8b 75 14             	mov    0x14(%ebp),%esi
810055f4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810055fb:	a1 44 90 00 81       	mov    0x81009044,%eax
81005600:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005603:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005606:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005609:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100560d:	74 18                	je     81005627 <setvbuf+0x45>
8100560f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005612:	8b 40 38             	mov    0x38(%eax),%eax
81005615:	85 c0                	test   %eax,%eax
81005617:	75 0e                	jne    81005627 <setvbuf+0x45>
81005619:	83 ec 0c             	sub    $0xc,%esp
8100561c:	ff 75 dc             	push   -0x24(%ebp)
8100561f:	e8 34 c1 ff ff       	call   81001758 <__sinit>
81005624:	83 c4 10             	add    $0x10,%esp
81005627:	83 ff 02             	cmp    $0x2,%edi
8100562a:	74 19                	je     81005645 <setvbuf+0x63>
8100562c:	85 ff                	test   %edi,%edi
8100562e:	74 05                	je     81005635 <setvbuf+0x53>
81005630:	83 ff 01             	cmp    $0x1,%edi
81005633:	75 06                	jne    8100563b <setvbuf+0x59>
81005635:	89 f0                	mov    %esi,%eax
81005637:	85 c0                	test   %eax,%eax
81005639:	79 0a                	jns    81005645 <setvbuf+0x63>
8100563b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005640:	e9 a1 01 00 00       	jmp    810057e6 <setvbuf+0x204>
81005645:	83 ec 08             	sub    $0x8,%esp
81005648:	53                   	push   %ebx
81005649:	ff 75 e0             	push   -0x20(%ebp)
8100564c:	e8 04 bc ff ff       	call   81001255 <_fflush_r>
81005651:	83 c4 10             	add    $0x10,%esp
81005654:	8b 43 30             	mov    0x30(%ebx),%eax
81005657:	85 c0                	test   %eax,%eax
81005659:	74 23                	je     8100567e <setvbuf+0x9c>
8100565b:	8b 53 30             	mov    0x30(%ebx),%edx
8100565e:	8d 43 40             	lea    0x40(%ebx),%eax
81005661:	39 c2                	cmp    %eax,%edx
81005663:	74 12                	je     81005677 <setvbuf+0x95>
81005665:	8b 43 30             	mov    0x30(%ebx),%eax
81005668:	83 ec 08             	sub    $0x8,%esp
8100566b:	50                   	push   %eax
8100566c:	ff 75 e0             	push   -0x20(%ebp)
8100566f:	e8 d4 c5 ff ff       	call   81001c48 <_free_r>
81005674:	83 c4 10             	add    $0x10,%esp
81005677:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100567e:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81005685:	8b 43 18             	mov    0x18(%ebx),%eax
81005688:	89 43 04             	mov    %eax,0x4(%ebx)
8100568b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100568f:	98                   	cwtl   
81005690:	25 80 00 00 00       	and    $0x80,%eax
81005695:	85 c0                	test   %eax,%eax
81005697:	74 12                	je     810056ab <setvbuf+0xc9>
81005699:	8b 43 10             	mov    0x10(%ebx),%eax
8100569c:	83 ec 08             	sub    $0x8,%esp
8100569f:	50                   	push   %eax
810056a0:	ff 75 e0             	push   -0x20(%ebp)
810056a3:	e8 a0 c5 ff ff       	call   81001c48 <_free_r>
810056a8:	83 c4 10             	add    $0x10,%esp
810056ab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810056af:	66 25 5c f3          	and    $0xf35c,%ax
810056b3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810056b7:	83 ff 02             	cmp    $0x2,%edi
810056ba:	74 6f                	je     8100572b <setvbuf+0x149>
810056bc:	8d 45 d4             	lea    -0x2c(%ebp),%eax
810056bf:	50                   	push   %eax
810056c0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810056c3:	50                   	push   %eax
810056c4:	53                   	push   %ebx
810056c5:	ff 75 e0             	push   -0x20(%ebp)
810056c8:	e8 df e0 ff ff       	call   810037ac <__swhatbuf_r>
810056cd:	83 c4 10             	add    $0x10,%esp
810056d0:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810056d4:	09 d0                	or     %edx,%eax
810056d6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810056da:	85 f6                	test   %esi,%esi
810056dc:	75 0a                	jne    810056e8 <setvbuf+0x106>
810056de:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
810056e5:	8b 75 d8             	mov    -0x28(%ebp),%esi
810056e8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810056ec:	75 73                	jne    81005761 <setvbuf+0x17f>
810056ee:	83 ec 0c             	sub    $0xc,%esp
810056f1:	56                   	push   %esi
810056f2:	e8 48 e1 ff ff       	call   8100383f <malloc>
810056f7:	83 c4 10             	add    $0x10,%esp
810056fa:	89 45 0c             	mov    %eax,0xc(%ebp)
810056fd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005701:	75 20                	jne    81005723 <setvbuf+0x141>
81005703:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100570a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100570d:	39 c6                	cmp    %eax,%esi
8100570f:	74 12                	je     81005723 <setvbuf+0x141>
81005711:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005714:	83 ec 0c             	sub    $0xc,%esp
81005717:	56                   	push   %esi
81005718:	e8 22 e1 ff ff       	call   8100383f <malloc>
8100571d:	83 c4 10             	add    $0x10,%esp
81005720:	89 45 0c             	mov    %eax,0xc(%ebp)
81005723:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005727:	75 2e                	jne    81005757 <setvbuf+0x175>
81005729:	eb 01                	jmp    8100572c <setvbuf+0x14a>
8100572b:	90                   	nop
8100572c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005730:	83 c8 02             	or     $0x2,%eax
81005733:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005737:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100573e:	8d 43 43             	lea    0x43(%ebx),%eax
81005741:	89 03                	mov    %eax,(%ebx)
81005743:	8b 03                	mov    (%ebx),%eax
81005745:	89 43 10             	mov    %eax,0x10(%ebx)
81005748:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100574f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005752:	e9 8f 00 00 00       	jmp    810057e6 <setvbuf+0x204>
81005757:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100575b:	0c 80                	or     $0x80,%al
8100575d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005761:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005764:	8b 40 38             	mov    0x38(%eax),%eax
81005767:	85 c0                	test   %eax,%eax
81005769:	75 0e                	jne    81005779 <setvbuf+0x197>
8100576b:	83 ec 0c             	sub    $0xc,%esp
8100576e:	ff 75 e0             	push   -0x20(%ebp)
81005771:	e8 e2 bf ff ff       	call   81001758 <__sinit>
81005776:	83 c4 10             	add    $0x10,%esp
81005779:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100577c:	39 c6                	cmp    %eax,%esi
8100577e:	74 0b                	je     8100578b <setvbuf+0x1a9>
81005780:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005784:	80 cc 08             	or     $0x8,%ah
81005787:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100578b:	83 ff 01             	cmp    $0x1,%edi
8100578e:	75 0b                	jne    8100579b <setvbuf+0x1b9>
81005790:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005794:	83 c8 01             	or     $0x1,%eax
81005797:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100579b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100579e:	89 03                	mov    %eax,(%ebx)
810057a0:	8b 03                	mov    (%ebx),%eax
810057a2:	89 43 10             	mov    %eax,0x10(%ebx)
810057a5:	89 f0                	mov    %esi,%eax
810057a7:	89 43 14             	mov    %eax,0x14(%ebx)
810057aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057ae:	98                   	cwtl   
810057af:	83 e0 08             	and    $0x8,%eax
810057b2:	85 c0                	test   %eax,%eax
810057b4:	74 24                	je     810057da <setvbuf+0x1f8>
810057b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810057ba:	98                   	cwtl   
810057bb:	83 e0 01             	and    $0x1,%eax
810057be:	85 c0                	test   %eax,%eax
810057c0:	74 11                	je     810057d3 <setvbuf+0x1f1>
810057c2:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810057c9:	8b 43 14             	mov    0x14(%ebx),%eax
810057cc:	f7 d8                	neg    %eax
810057ce:	89 43 18             	mov    %eax,0x18(%ebx)
810057d1:	eb 0e                	jmp    810057e1 <setvbuf+0x1ff>
810057d3:	89 f0                	mov    %esi,%eax
810057d5:	89 43 08             	mov    %eax,0x8(%ebx)
810057d8:	eb 07                	jmp    810057e1 <setvbuf+0x1ff>
810057da:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810057e1:	b8 00 00 00 00       	mov    $0x0,%eax
810057e6:	8d 65 f4             	lea    -0xc(%ebp),%esp
810057e9:	5b                   	pop    %ebx
810057ea:	5e                   	pop    %esi
810057eb:	5f                   	pop    %edi
810057ec:	5d                   	pop    %ebp
810057ed:	c3                   	ret    

810057ee <_siprintf_r>:
810057ee:	55                   	push   %ebp
810057ef:	89 e5                	mov    %esp,%ebp
810057f1:	83 ec 78             	sub    $0x78,%esp
810057f4:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810057fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810057fd:	89 45 88             	mov    %eax,-0x78(%ebp)
81005800:	8b 45 88             	mov    -0x78(%ebp),%eax
81005803:	89 45 98             	mov    %eax,-0x68(%ebp)
81005806:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
8100580d:	8b 45 90             	mov    -0x70(%ebp),%eax
81005810:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005813:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81005819:	8d 45 14             	lea    0x14(%ebp),%eax
8100581c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100581f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005822:	50                   	push   %eax
81005823:	ff 75 10             	push   0x10(%ebp)
81005826:	8d 45 88             	lea    -0x78(%ebp),%eax
81005829:	50                   	push   %eax
8100582a:	ff 75 08             	push   0x8(%ebp)
8100582d:	e8 14 1c 00 00       	call   81007446 <_svfiprintf_r>
81005832:	83 c4 10             	add    $0x10,%esp
81005835:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005838:	8b 45 88             	mov    -0x78(%ebp),%eax
8100583b:	c6 00 00             	movb   $0x0,(%eax)
8100583e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005841:	c9                   	leave  
81005842:	c3                   	ret    

81005843 <siprintf>:
81005843:	55                   	push   %ebp
81005844:	89 e5                	mov    %esp,%ebp
81005846:	83 ec 78             	sub    $0x78,%esp
81005849:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
8100584f:	8b 45 08             	mov    0x8(%ebp),%eax
81005852:	89 45 88             	mov    %eax,-0x78(%ebp)
81005855:	8b 45 88             	mov    -0x78(%ebp),%eax
81005858:	89 45 98             	mov    %eax,-0x68(%ebp)
8100585b:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81005862:	8b 45 90             	mov    -0x70(%ebp),%eax
81005865:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005868:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
8100586e:	8d 45 10             	lea    0x10(%ebp),%eax
81005871:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005874:	8b 55 f0             	mov    -0x10(%ebp),%edx
81005877:	a1 44 90 00 81       	mov    0x81009044,%eax
8100587c:	52                   	push   %edx
8100587d:	ff 75 0c             	push   0xc(%ebp)
81005880:	8d 55 88             	lea    -0x78(%ebp),%edx
81005883:	52                   	push   %edx
81005884:	50                   	push   %eax
81005885:	e8 bc 1b 00 00       	call   81007446 <_svfiprintf_r>
8100588a:	83 c4 10             	add    $0x10,%esp
8100588d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005890:	8b 45 88             	mov    -0x78(%ebp),%eax
81005893:	c6 00 00             	movb   $0x0,(%eax)
81005896:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005899:	c9                   	leave  
8100589a:	c3                   	ret    

8100589b <__sread>:
8100589b:	55                   	push   %ebp
8100589c:	89 e5                	mov    %esp,%ebp
8100589e:	56                   	push   %esi
8100589f:	53                   	push   %ebx
810058a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810058a3:	8b 55 14             	mov    0x14(%ebp),%edx
810058a6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810058aa:	98                   	cwtl   
810058ab:	52                   	push   %edx
810058ac:	ff 75 10             	push   0x10(%ebp)
810058af:	50                   	push   %eax
810058b0:	ff 75 08             	push   0x8(%ebp)
810058b3:	e8 cc 1f 00 00       	call   81007884 <_read_r>
810058b8:	83 c4 10             	add    $0x10,%esp
810058bb:	89 c6                	mov    %eax,%esi
810058bd:	85 f6                	test   %esi,%esi
810058bf:	78 0a                	js     810058cb <__sread+0x30>
810058c1:	8b 43 50             	mov    0x50(%ebx),%eax
810058c4:	01 f0                	add    %esi,%eax
810058c6:	89 43 50             	mov    %eax,0x50(%ebx)
810058c9:	eb 0b                	jmp    810058d6 <__sread+0x3b>
810058cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810058cf:	80 e4 ef             	and    $0xef,%ah
810058d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810058d6:	89 f0                	mov    %esi,%eax
810058d8:	8d 65 f8             	lea    -0x8(%ebp),%esp
810058db:	5b                   	pop    %ebx
810058dc:	5e                   	pop    %esi
810058dd:	5d                   	pop    %ebp
810058de:	c3                   	ret    

810058df <__seofread>:
810058df:	55                   	push   %ebp
810058e0:	89 e5                	mov    %esp,%ebp
810058e2:	b8 00 00 00 00       	mov    $0x0,%eax
810058e7:	5d                   	pop    %ebp
810058e8:	c3                   	ret    

810058e9 <__swrite>:
810058e9:	55                   	push   %ebp
810058ea:	89 e5                	mov    %esp,%ebp
810058ec:	53                   	push   %ebx
810058ed:	83 ec 14             	sub    $0x14,%esp
810058f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810058f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810058f7:	98                   	cwtl   
810058f8:	25 00 01 00 00       	and    $0x100,%eax
810058fd:	85 c0                	test   %eax,%eax
810058ff:	74 15                	je     81005916 <__swrite+0x2d>
81005901:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005905:	98                   	cwtl   
81005906:	6a 02                	push   $0x2
81005908:	6a 00                	push   $0x0
8100590a:	50                   	push   %eax
8100590b:	ff 75 08             	push   0x8(%ebp)
8100590e:	e8 db 15 00 00       	call   81006eee <_lseek_r>
81005913:	83 c4 10             	add    $0x10,%esp
81005916:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100591a:	80 e4 ef             	and    $0xef,%ah
8100591d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005921:	8b 55 14             	mov    0x14(%ebp),%edx
81005924:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005928:	98                   	cwtl   
81005929:	52                   	push   %edx
8100592a:	ff 75 10             	push   0x10(%ebp)
8100592d:	50                   	push   %eax
8100592e:	ff 75 08             	push   0x8(%ebp)
81005931:	e8 4c 07 00 00       	call   81006082 <_write_r>
81005936:	83 c4 10             	add    $0x10,%esp
81005939:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100593c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100593f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005942:	c9                   	leave  
81005943:	c3                   	ret    

81005944 <__sseek>:
81005944:	55                   	push   %ebp
81005945:	89 e5                	mov    %esp,%ebp
81005947:	56                   	push   %esi
81005948:	53                   	push   %ebx
81005949:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100594c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005950:	98                   	cwtl   
81005951:	ff 75 14             	push   0x14(%ebp)
81005954:	ff 75 10             	push   0x10(%ebp)
81005957:	50                   	push   %eax
81005958:	ff 75 08             	push   0x8(%ebp)
8100595b:	e8 8e 15 00 00       	call   81006eee <_lseek_r>
81005960:	83 c4 10             	add    $0x10,%esp
81005963:	89 c6                	mov    %eax,%esi
81005965:	83 fe ff             	cmp    $0xffffffff,%esi
81005968:	75 0d                	jne    81005977 <__sseek+0x33>
8100596a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100596e:	80 e4 ef             	and    $0xef,%ah
81005971:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005975:	eb 0e                	jmp    81005985 <__sseek+0x41>
81005977:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100597b:	80 cc 10             	or     $0x10,%ah
8100597e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005982:	89 73 50             	mov    %esi,0x50(%ebx)
81005985:	89 f0                	mov    %esi,%eax
81005987:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100598a:	5b                   	pop    %ebx
8100598b:	5e                   	pop    %esi
8100598c:	5d                   	pop    %ebp
8100598d:	c3                   	ret    

8100598e <__sclose>:
8100598e:	55                   	push   %ebp
8100598f:	89 e5                	mov    %esp,%ebp
81005991:	83 ec 18             	sub    $0x18,%esp
81005994:	8b 45 0c             	mov    0xc(%ebp),%eax
81005997:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100599a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100599d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810059a1:	98                   	cwtl   
810059a2:	83 ec 08             	sub    $0x8,%esp
810059a5:	50                   	push   %eax
810059a6:	ff 75 08             	push   0x8(%ebp)
810059a9:	e8 8a 09 00 00       	call   81006338 <_close_r>
810059ae:	83 c4 10             	add    $0x10,%esp
810059b1:	c9                   	leave  
810059b2:	c3                   	ret    
810059b3:	66 90                	xchg   %ax,%ax
810059b5:	66 90                	xchg   %ax,%ax
810059b7:	66 90                	xchg   %ax,%ax
810059b9:	66 90                	xchg   %ax,%ax
810059bb:	66 90                	xchg   %ax,%ax
810059bd:	66 90                	xchg   %ax,%ax
810059bf:	90                   	nop

810059c0 <strchr>:
810059c0:	55                   	push   %ebp
810059c1:	89 e5                	mov    %esp,%ebp
810059c3:	57                   	push   %edi
810059c4:	53                   	push   %ebx
810059c5:	31 db                	xor    %ebx,%ebx
810059c7:	8b 7d 08             	mov    0x8(%ebp),%edi
810059ca:	02 5d 0c             	add    0xc(%ebp),%bl
810059cd:	0f 84 98 00 00 00    	je     81005a6b <L25>
810059d3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810059d9:	74 37                	je     81005a12 <L5>
810059db:	89 f8                	mov    %edi,%eax
810059dd:	8a 08                	mov    (%eax),%cl
810059df:	84 c9                	test   %cl,%cl
810059e1:	74 7b                	je     81005a5e <L14>
810059e3:	38 d9                	cmp    %bl,%cl
810059e5:	74 7d                	je     81005a64 <L19>
810059e7:	47                   	inc    %edi
810059e8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810059ee:	74 22                	je     81005a12 <L5>
810059f0:	89 f8                	mov    %edi,%eax
810059f2:	8a 08                	mov    (%eax),%cl
810059f4:	84 c9                	test   %cl,%cl
810059f6:	74 66                	je     81005a5e <L14>
810059f8:	38 d9                	cmp    %bl,%cl
810059fa:	74 68                	je     81005a64 <L19>
810059fc:	47                   	inc    %edi
810059fd:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a03:	74 0d                	je     81005a12 <L5>
81005a05:	89 f8                	mov    %edi,%eax
81005a07:	8a 08                	mov    (%eax),%cl
81005a09:	84 c9                	test   %cl,%cl
81005a0b:	74 51                	je     81005a5e <L14>
81005a0d:	38 d9                	cmp    %bl,%cl
81005a0f:	74 53                	je     81005a64 <L19>
81005a11:	47                   	inc    %edi

81005a12 <L5>:
81005a12:	89 d9                	mov    %ebx,%ecx
81005a14:	c1 e3 08             	shl    $0x8,%ebx
81005a17:	83 ef 04             	sub    $0x4,%edi
81005a1a:	09 cb                	or     %ecx,%ebx
81005a1c:	89 da                	mov    %ebx,%edx
81005a1e:	c1 e3 10             	shl    $0x10,%ebx
81005a21:	09 d3                	or     %edx,%ebx

81005a23 <L10>:
81005a23:	83 c7 04             	add    $0x4,%edi
81005a26:	8b 0f                	mov    (%edi),%ecx
81005a28:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005a2e:	89 c8                	mov    %ecx,%eax
81005a30:	f7 d0                	not    %eax
81005a32:	21 c2                	and    %eax,%edx
81005a34:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005a3a:	75 14                	jne    81005a50 <L9>
81005a3c:	31 d9                	xor    %ebx,%ecx
81005a3e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005a44:	f7 d1                	not    %ecx
81005a46:	21 ca                	and    %ecx,%edx
81005a48:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005a4e:	74 d3                	je     81005a23 <L10>

81005a50 <L9>:
81005a50:	8d 47 ff             	lea    -0x1(%edi),%eax

81005a53 <L15>:
81005a53:	40                   	inc    %eax
81005a54:	8a 10                	mov    (%eax),%dl
81005a56:	84 d2                	test   %dl,%dl
81005a58:	74 04                	je     81005a5e <L14>
81005a5a:	38 da                	cmp    %bl,%dl
81005a5c:	75 f5                	jne    81005a53 <L15>

81005a5e <L14>:
81005a5e:	38 18                	cmp    %bl,(%eax)
81005a60:	74 02                	je     81005a64 <L19>
81005a62:	31 c0                	xor    %eax,%eax

81005a64 <L19>:
81005a64:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a67:	5b                   	pop    %ebx
81005a68:	5f                   	pop    %edi
81005a69:	c9                   	leave  
81005a6a:	c3                   	ret    

81005a6b <L25>:
81005a6b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a71:	74 2b                	je     81005a9e <L26>
81005a73:	89 f8                	mov    %edi,%eax
81005a75:	8a 08                	mov    (%eax),%cl
81005a77:	84 c9                	test   %cl,%cl
81005a79:	74 e9                	je     81005a64 <L19>
81005a7b:	47                   	inc    %edi
81005a7c:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a82:	74 1a                	je     81005a9e <L26>
81005a84:	89 f8                	mov    %edi,%eax
81005a86:	8a 08                	mov    (%eax),%cl
81005a88:	84 c9                	test   %cl,%cl
81005a8a:	74 d8                	je     81005a64 <L19>
81005a8c:	47                   	inc    %edi
81005a8d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005a93:	74 09                	je     81005a9e <L26>
81005a95:	89 f8                	mov    %edi,%eax
81005a97:	8a 08                	mov    (%eax),%cl
81005a99:	84 c9                	test   %cl,%cl
81005a9b:	74 c7                	je     81005a64 <L19>
81005a9d:	47                   	inc    %edi

81005a9e <L26>:
81005a9e:	83 ef 04             	sub    $0x4,%edi

81005aa1 <L27>:
81005aa1:	83 c7 04             	add    $0x4,%edi
81005aa4:	8b 0f                	mov    (%edi),%ecx
81005aa6:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81005aac:	89 c8                	mov    %ecx,%eax
81005aae:	f7 d0                	not    %eax
81005ab0:	21 c2                	and    %eax,%edx
81005ab2:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005ab8:	74 e7                	je     81005aa1 <L27>
81005aba:	eb 94                	jmp    81005a50 <L9>

81005abc <strcmp>:
81005abc:	55                   	push   %ebp
81005abd:	89 e5                	mov    %esp,%ebp
81005abf:	83 ec 10             	sub    $0x10,%esp
81005ac2:	8b 55 08             	mov    0x8(%ebp),%edx
81005ac5:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ac8:	09 d0                	or     %edx,%eax
81005aca:	83 e0 03             	and    $0x3,%eax
81005acd:	85 c0                	test   %eax,%eax
81005acf:	75 5e                	jne    81005b2f <strcmp+0x73>
81005ad1:	8b 45 08             	mov    0x8(%ebp),%eax
81005ad4:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005ad7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ada:	89 45 f8             	mov    %eax,-0x8(%ebp)
81005add:	eb 2c                	jmp    81005b0b <strcmp+0x4f>
81005adf:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005ae2:	8b 00                	mov    (%eax),%eax
81005ae4:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81005aea:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005aed:	8b 00                	mov    (%eax),%eax
81005aef:	f7 d0                	not    %eax
81005af1:	21 d0                	and    %edx,%eax
81005af3:	25 80 80 80 80       	and    $0x80808080,%eax
81005af8:	85 c0                	test   %eax,%eax
81005afa:	74 07                	je     81005b03 <strcmp+0x47>
81005afc:	b8 00 00 00 00       	mov    $0x0,%eax
81005b01:	eb 5c                	jmp    81005b5f <strcmp+0xa3>
81005b03:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81005b07:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81005b0b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b0e:	8b 10                	mov    (%eax),%edx
81005b10:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005b13:	8b 00                	mov    (%eax),%eax
81005b15:	39 c2                	cmp    %eax,%edx
81005b17:	74 c6                	je     81005adf <strcmp+0x23>
81005b19:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b1c:	89 45 08             	mov    %eax,0x8(%ebp)
81005b1f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005b22:	89 45 0c             	mov    %eax,0xc(%ebp)
81005b25:	eb 08                	jmp    81005b2f <strcmp+0x73>
81005b27:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81005b2b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81005b2f:	8b 45 08             	mov    0x8(%ebp),%eax
81005b32:	0f b6 00             	movzbl (%eax),%eax
81005b35:	84 c0                	test   %al,%al
81005b37:	74 10                	je     81005b49 <strcmp+0x8d>
81005b39:	8b 45 08             	mov    0x8(%ebp),%eax
81005b3c:	0f b6 10             	movzbl (%eax),%edx
81005b3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b42:	0f b6 00             	movzbl (%eax),%eax
81005b45:	38 c2                	cmp    %al,%dl
81005b47:	74 de                	je     81005b27 <strcmp+0x6b>
81005b49:	8b 45 08             	mov    0x8(%ebp),%eax
81005b4c:	0f b6 00             	movzbl (%eax),%eax
81005b4f:	0f b6 d0             	movzbl %al,%edx
81005b52:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b55:	0f b6 00             	movzbl (%eax),%eax
81005b58:	0f b6 c8             	movzbl %al,%ecx
81005b5b:	89 d0                	mov    %edx,%eax
81005b5d:	29 c8                	sub    %ecx,%eax
81005b5f:	c9                   	leave  
81005b60:	c3                   	ret    
81005b61:	66 90                	xchg   %ax,%ax
81005b63:	66 90                	xchg   %ax,%ax
81005b65:	66 90                	xchg   %ax,%ax
81005b67:	66 90                	xchg   %ax,%ax
81005b69:	66 90                	xchg   %ax,%ax
81005b6b:	66 90                	xchg   %ax,%ax
81005b6d:	66 90                	xchg   %ax,%ax
81005b6f:	90                   	nop

81005b70 <strlen>:
81005b70:	55                   	push   %ebp
81005b71:	89 e5                	mov    %esp,%ebp
81005b73:	57                   	push   %edi
81005b74:	8b 55 08             	mov    0x8(%ebp),%edx
81005b77:	89 d7                	mov    %edx,%edi
81005b79:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b7f:	74 25                	je     81005ba6 <L5>
81005b81:	8a 0f                	mov    (%edi),%cl
81005b83:	47                   	inc    %edi
81005b84:	84 c9                	test   %cl,%cl
81005b86:	74 56                	je     81005bde <L15>
81005b88:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b8e:	74 16                	je     81005ba6 <L5>
81005b90:	8a 0f                	mov    (%edi),%cl
81005b92:	47                   	inc    %edi
81005b93:	84 c9                	test   %cl,%cl
81005b95:	74 47                	je     81005bde <L15>
81005b97:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005b9d:	74 07                	je     81005ba6 <L5>
81005b9f:	8a 0f                	mov    (%edi),%cl
81005ba1:	47                   	inc    %edi
81005ba2:	84 c9                	test   %cl,%cl
81005ba4:	74 38                	je     81005bde <L15>

81005ba6 <L5>:
81005ba6:	83 ef 04             	sub    $0x4,%edi
81005ba9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005bb0 <L10>:
81005bb0:	83 c7 04             	add    $0x4,%edi
81005bb3:	8b 0f                	mov    (%edi),%ecx
81005bb5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81005bbb:	f7 d1                	not    %ecx
81005bbd:	21 c8                	and    %ecx,%eax
81005bbf:	a9 80 80 80 80       	test   $0x80808080,%eax
81005bc4:	74 ea                	je     81005bb0 <L10>
81005bc6:	f7 d1                	not    %ecx
81005bc8:	47                   	inc    %edi
81005bc9:	84 c9                	test   %cl,%cl
81005bcb:	74 11                	je     81005bde <L15>
81005bcd:	47                   	inc    %edi
81005bce:	c1 e9 08             	shr    $0x8,%ecx
81005bd1:	84 c9                	test   %cl,%cl
81005bd3:	74 09                	je     81005bde <L15>
81005bd5:	47                   	inc    %edi
81005bd6:	c1 e9 08             	shr    $0x8,%ecx
81005bd9:	84 c9                	test   %cl,%cl
81005bdb:	74 01                	je     81005bde <L15>
81005bdd:	47                   	inc    %edi

81005bde <L15>:
81005bde:	29 d7                	sub    %edx,%edi
81005be0:	8d 47 ff             	lea    -0x1(%edi),%eax
81005be3:	8d 65 fc             	lea    -0x4(%ebp),%esp
81005be6:	5f                   	pop    %edi
81005be7:	c9                   	leave  
81005be8:	c3                   	ret    

81005be9 <strtok>:
81005be9:	55                   	push   %ebp
81005bea:	89 e5                	mov    %esp,%ebp
81005bec:	83 ec 18             	sub    $0x18,%esp
81005bef:	8b 55 08             	mov    0x8(%ebp),%edx
81005bf2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005bf5:	a1 44 90 00 81       	mov    0x81009044,%eax
81005bfa:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c00:	83 c0 5c             	add    $0x5c,%eax
81005c03:	6a 01                	push   $0x1
81005c05:	50                   	push   %eax
81005c06:	51                   	push   %ecx
81005c07:	52                   	push   %edx
81005c08:	e8 05 00 00 00       	call   81005c12 <__strtok_r>
81005c0d:	83 c4 10             	add    $0x10,%esp
81005c10:	c9                   	leave  
81005c11:	c3                   	ret    

81005c12 <__strtok_r>:
81005c12:	55                   	push   %ebp
81005c13:	89 e5                	mov    %esp,%ebp
81005c15:	57                   	push   %edi
81005c16:	56                   	push   %esi
81005c17:	53                   	push   %ebx
81005c18:	83 ec 10             	sub    $0x10,%esp
81005c1b:	8b 45 08             	mov    0x8(%ebp),%eax
81005c1e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005c21:	85 c0                	test   %eax,%eax
81005c23:	75 13                	jne    81005c38 <__strtok_r+0x26>
81005c25:	8b 45 10             	mov    0x10(%ebp),%eax
81005c28:	8b 00                	mov    (%eax),%eax
81005c2a:	85 c0                	test   %eax,%eax
81005c2c:	75 0a                	jne    81005c38 <__strtok_r+0x26>
81005c2e:	b8 00 00 00 00       	mov    $0x0,%eax
81005c33:	e9 92 00 00 00       	jmp    81005cca <__strtok_r+0xb8>
81005c38:	90                   	nop
81005c39:	89 c2                	mov    %eax,%edx
81005c3b:	8d 42 01             	lea    0x1(%edx),%eax
81005c3e:	0f b6 12             	movzbl (%edx),%edx
81005c41:	0f be f2             	movsbl %dl,%esi
81005c44:	89 cf                	mov    %ecx,%edi
81005c46:	eb 1c                	jmp    81005c64 <__strtok_r+0x52>
81005c48:	39 de                	cmp    %ebx,%esi
81005c4a:	75 18                	jne    81005c64 <__strtok_r+0x52>
81005c4c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005c50:	74 02                	je     81005c54 <__strtok_r+0x42>
81005c52:	eb e5                	jmp    81005c39 <__strtok_r+0x27>
81005c54:	8b 55 10             	mov    0x10(%ebp),%edx
81005c57:	89 02                	mov    %eax,(%edx)
81005c59:	8d 50 ff             	lea    -0x1(%eax),%edx
81005c5c:	c6 02 00             	movb   $0x0,(%edx)
81005c5f:	83 e8 01             	sub    $0x1,%eax
81005c62:	eb 66                	jmp    81005cca <__strtok_r+0xb8>
81005c64:	89 fa                	mov    %edi,%edx
81005c66:	8d 7a 01             	lea    0x1(%edx),%edi
81005c69:	0f b6 12             	movzbl (%edx),%edx
81005c6c:	0f be da             	movsbl %dl,%ebx
81005c6f:	85 db                	test   %ebx,%ebx
81005c71:	75 d5                	jne    81005c48 <__strtok_r+0x36>
81005c73:	85 f6                	test   %esi,%esi
81005c75:	75 10                	jne    81005c87 <__strtok_r+0x75>
81005c77:	8b 45 10             	mov    0x10(%ebp),%eax
81005c7a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005c80:	b8 00 00 00 00       	mov    $0x0,%eax
81005c85:	eb 43                	jmp    81005cca <__strtok_r+0xb8>
81005c87:	8d 50 ff             	lea    -0x1(%eax),%edx
81005c8a:	89 55 f0             	mov    %edx,-0x10(%ebp)
81005c8d:	89 c2                	mov    %eax,%edx
81005c8f:	8d 42 01             	lea    0x1(%edx),%eax
81005c92:	0f b6 12             	movzbl (%edx),%edx
81005c95:	0f be f2             	movsbl %dl,%esi
81005c98:	89 cf                	mov    %ecx,%edi
81005c9a:	89 fa                	mov    %edi,%edx
81005c9c:	8d 7a 01             	lea    0x1(%edx),%edi
81005c9f:	0f b6 12             	movzbl (%edx),%edx
81005ca2:	0f be da             	movsbl %dl,%ebx
81005ca5:	39 f3                	cmp    %esi,%ebx
81005ca7:	75 1b                	jne    81005cc4 <__strtok_r+0xb2>
81005ca9:	85 f6                	test   %esi,%esi
81005cab:	75 07                	jne    81005cb4 <__strtok_r+0xa2>
81005cad:	b8 00 00 00 00       	mov    $0x0,%eax
81005cb2:	eb 06                	jmp    81005cba <__strtok_r+0xa8>
81005cb4:	8d 50 ff             	lea    -0x1(%eax),%edx
81005cb7:	c6 02 00             	movb   $0x0,(%edx)
81005cba:	8b 55 10             	mov    0x10(%ebp),%edx
81005cbd:	89 02                	mov    %eax,(%edx)
81005cbf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cc2:	eb 06                	jmp    81005cca <__strtok_r+0xb8>
81005cc4:	85 db                	test   %ebx,%ebx
81005cc6:	75 d2                	jne    81005c9a <__strtok_r+0x88>
81005cc8:	eb c3                	jmp    81005c8d <__strtok_r+0x7b>
81005cca:	83 c4 10             	add    $0x10,%esp
81005ccd:	5b                   	pop    %ebx
81005cce:	5e                   	pop    %esi
81005ccf:	5f                   	pop    %edi
81005cd0:	5d                   	pop    %ebp
81005cd1:	c3                   	ret    

81005cd2 <strtok_r>:
81005cd2:	55                   	push   %ebp
81005cd3:	89 e5                	mov    %esp,%ebp
81005cd5:	8b 45 08             	mov    0x8(%ebp),%eax
81005cd8:	8b 55 0c             	mov    0xc(%ebp),%edx
81005cdb:	6a 01                	push   $0x1
81005cdd:	ff 75 10             	push   0x10(%ebp)
81005ce0:	52                   	push   %edx
81005ce1:	50                   	push   %eax
81005ce2:	e8 2b ff ff ff       	call   81005c12 <__strtok_r>
81005ce7:	83 c4 10             	add    $0x10,%esp
81005cea:	c9                   	leave  
81005ceb:	c3                   	ret    

81005cec <__locale_ctype_ptr_l>:
81005cec:	55                   	push   %ebp
81005ced:	89 e5                	mov    %esp,%ebp
81005cef:	b8 e0 8a 00 81       	mov    $0x81008ae0,%eax
81005cf4:	5d                   	pop    %ebp
81005cf5:	c3                   	ret    

81005cf6 <__get_global_locale>:
81005cf6:	55                   	push   %ebp
81005cf7:	89 e5                	mov    %esp,%ebp
81005cf9:	b8 80 94 00 81       	mov    $0x81009480,%eax
81005cfe:	5d                   	pop    %ebp
81005cff:	c3                   	ret    

81005d00 <__get_current_locale>:
81005d00:	55                   	push   %ebp
81005d01:	89 e5                	mov    %esp,%ebp
81005d03:	e8 ee ff ff ff       	call   81005cf6 <__get_global_locale>
81005d08:	5d                   	pop    %ebp
81005d09:	c3                   	ret    

81005d0a <_strtol_l>:
81005d0a:	55                   	push   %ebp
81005d0b:	89 e5                	mov    %esp,%ebp
81005d0d:	57                   	push   %edi
81005d0e:	56                   	push   %esi
81005d0f:	53                   	push   %ebx
81005d10:	83 ec 1c             	sub    $0x1c,%esp
81005d13:	8b 75 0c             	mov    0xc(%ebp),%esi
81005d16:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005d1d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005d21:	78 0c                	js     81005d2f <_strtol_l+0x25>
81005d23:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81005d27:	74 06                	je     81005d2f <_strtol_l+0x25>
81005d29:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81005d2d:	7e 15                	jle    81005d44 <_strtol_l+0x3a>
81005d2f:	e8 44 06 00 00       	call   81006378 <__errno>
81005d34:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005d3a:	b8 00 00 00 00       	mov    $0x0,%eax
81005d3f:	e9 90 01 00 00       	jmp    81005ed4 <_strtol_l+0x1ca>
81005d44:	89 f0                	mov    %esi,%eax
81005d46:	8d 70 01             	lea    0x1(%eax),%esi
81005d49:	0f b6 00             	movzbl (%eax),%eax
81005d4c:	0f b6 d8             	movzbl %al,%ebx
81005d4f:	83 ec 0c             	sub    $0xc,%esp
81005d52:	ff 75 18             	push   0x18(%ebp)
81005d55:	e8 92 ff ff ff       	call   81005cec <__locale_ctype_ptr_l>
81005d5a:	83 c4 10             	add    $0x10,%esp
81005d5d:	89 da                	mov    %ebx,%edx
81005d5f:	83 c2 01             	add    $0x1,%edx
81005d62:	01 d0                	add    %edx,%eax
81005d64:	0f b6 00             	movzbl (%eax),%eax
81005d67:	0f be c0             	movsbl %al,%eax
81005d6a:	83 e0 08             	and    $0x8,%eax
81005d6d:	85 c0                	test   %eax,%eax
81005d6f:	75 d3                	jne    81005d44 <_strtol_l+0x3a>
81005d71:	83 fb 2d             	cmp    $0x2d,%ebx
81005d74:	75 14                	jne    81005d8a <_strtol_l+0x80>
81005d76:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81005d7d:	89 f0                	mov    %esi,%eax
81005d7f:	8d 70 01             	lea    0x1(%eax),%esi
81005d82:	0f b6 00             	movzbl (%eax),%eax
81005d85:	0f b6 d8             	movzbl %al,%ebx
81005d88:	eb 10                	jmp    81005d9a <_strtol_l+0x90>
81005d8a:	83 fb 2b             	cmp    $0x2b,%ebx
81005d8d:	75 0b                	jne    81005d9a <_strtol_l+0x90>
81005d8f:	89 f0                	mov    %esi,%eax
81005d91:	8d 70 01             	lea    0x1(%eax),%esi
81005d94:	0f b6 00             	movzbl (%eax),%eax
81005d97:	0f b6 d8             	movzbl %al,%ebx
81005d9a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005d9e:	74 06                	je     81005da6 <_strtol_l+0x9c>
81005da0:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005da4:	75 26                	jne    81005dcc <_strtol_l+0xc2>
81005da6:	83 fb 30             	cmp    $0x30,%ebx
81005da9:	75 21                	jne    81005dcc <_strtol_l+0xc2>
81005dab:	0f b6 06             	movzbl (%esi),%eax
81005dae:	3c 78                	cmp    $0x78,%al
81005db0:	74 07                	je     81005db9 <_strtol_l+0xaf>
81005db2:	0f b6 06             	movzbl (%esi),%eax
81005db5:	3c 58                	cmp    $0x58,%al
81005db7:	75 13                	jne    81005dcc <_strtol_l+0xc2>
81005db9:	8d 46 01             	lea    0x1(%esi),%eax
81005dbc:	0f b6 00             	movzbl (%eax),%eax
81005dbf:	0f b6 d8             	movzbl %al,%ebx
81005dc2:	83 c6 02             	add    $0x2,%esi
81005dc5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81005dcc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005dd0:	75 14                	jne    81005de6 <_strtol_l+0xdc>
81005dd2:	83 fb 30             	cmp    $0x30,%ebx
81005dd5:	75 07                	jne    81005dde <_strtol_l+0xd4>
81005dd7:	b8 08 00 00 00       	mov    $0x8,%eax
81005ddc:	eb 05                	jmp    81005de3 <_strtol_l+0xd9>
81005dde:	b8 0a 00 00 00       	mov    $0xa,%eax
81005de3:	89 45 14             	mov    %eax,0x14(%ebp)
81005de6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005dea:	74 07                	je     81005df3 <_strtol_l+0xe9>
81005dec:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005df1:	eb 05                	jmp    81005df8 <_strtol_l+0xee>
81005df3:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005df8:	89 c7                	mov    %eax,%edi
81005dfa:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005dfd:	89 f8                	mov    %edi,%eax
81005dff:	ba 00 00 00 00       	mov    $0x0,%edx
81005e04:	f7 f1                	div    %ecx
81005e06:	89 d0                	mov    %edx,%eax
81005e08:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005e0b:	8b 4d 14             	mov    0x14(%ebp),%ecx
81005e0e:	89 f8                	mov    %edi,%eax
81005e10:	ba 00 00 00 00       	mov    $0x0,%edx
81005e15:	f7 f1                	div    %ecx
81005e17:	89 c2                	mov    %eax,%edx
81005e19:	bf 00 00 00 00       	mov    $0x0,%edi
81005e1e:	b9 00 00 00 00       	mov    $0x0,%ecx
81005e23:	83 fb 2f             	cmp    $0x2f,%ebx
81005e26:	7e 0a                	jle    81005e32 <_strtol_l+0x128>
81005e28:	83 fb 39             	cmp    $0x39,%ebx
81005e2b:	7f 05                	jg     81005e32 <_strtol_l+0x128>
81005e2d:	83 eb 30             	sub    $0x30,%ebx
81005e30:	eb 1c                	jmp    81005e4e <_strtol_l+0x144>
81005e32:	83 fb 40             	cmp    $0x40,%ebx
81005e35:	7e 0a                	jle    81005e41 <_strtol_l+0x137>
81005e37:	83 fb 5a             	cmp    $0x5a,%ebx
81005e3a:	7f 05                	jg     81005e41 <_strtol_l+0x137>
81005e3c:	83 eb 37             	sub    $0x37,%ebx
81005e3f:	eb 0d                	jmp    81005e4e <_strtol_l+0x144>
81005e41:	83 fb 60             	cmp    $0x60,%ebx
81005e44:	7e 46                	jle    81005e8c <_strtol_l+0x182>
81005e46:	83 fb 7a             	cmp    $0x7a,%ebx
81005e49:	7f 41                	jg     81005e8c <_strtol_l+0x182>
81005e4b:	83 eb 57             	sub    $0x57,%ebx
81005e4e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81005e51:	7d 38                	jge    81005e8b <_strtol_l+0x181>
81005e53:	89 c8                	mov    %ecx,%eax
81005e55:	85 c0                	test   %eax,%eax
81005e57:	78 0f                	js     81005e68 <_strtol_l+0x15e>
81005e59:	89 d0                	mov    %edx,%eax
81005e5b:	39 c7                	cmp    %eax,%edi
81005e5d:	77 09                	ja     81005e68 <_strtol_l+0x15e>
81005e5f:	39 c7                	cmp    %eax,%edi
81005e61:	75 0c                	jne    81005e6f <_strtol_l+0x165>
81005e63:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81005e66:	7e 07                	jle    81005e6f <_strtol_l+0x165>
81005e68:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81005e6d:	eb 0f                	jmp    81005e7e <_strtol_l+0x174>
81005e6f:	b9 01 00 00 00       	mov    $0x1,%ecx
81005e74:	8b 45 14             	mov    0x14(%ebp),%eax
81005e77:	0f af f8             	imul   %eax,%edi
81005e7a:	89 d8                	mov    %ebx,%eax
81005e7c:	01 c7                	add    %eax,%edi
81005e7e:	89 f0                	mov    %esi,%eax
81005e80:	8d 70 01             	lea    0x1(%eax),%esi
81005e83:	0f b6 00             	movzbl (%eax),%eax
81005e86:	0f b6 d8             	movzbl %al,%ebx
81005e89:	eb 98                	jmp    81005e23 <_strtol_l+0x119>
81005e8b:	90                   	nop
81005e8c:	89 c8                	mov    %ecx,%eax
81005e8e:	85 c0                	test   %eax,%eax
81005e90:	79 1f                	jns    81005eb1 <_strtol_l+0x1a7>
81005e92:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005e96:	74 07                	je     81005e9f <_strtol_l+0x195>
81005e98:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005e9d:	eb 05                	jmp    81005ea4 <_strtol_l+0x19a>
81005e9f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005ea4:	89 c7                	mov    %eax,%edi
81005ea6:	8b 45 08             	mov    0x8(%ebp),%eax
81005ea9:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81005eaf:	eb 08                	jmp    81005eb9 <_strtol_l+0x1af>
81005eb1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005eb5:	74 02                	je     81005eb9 <_strtol_l+0x1af>
81005eb7:	f7 df                	neg    %edi
81005eb9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005ebd:	74 13                	je     81005ed2 <_strtol_l+0x1c8>
81005ebf:	89 c8                	mov    %ecx,%eax
81005ec1:	85 c0                	test   %eax,%eax
81005ec3:	74 05                	je     81005eca <_strtol_l+0x1c0>
81005ec5:	8d 46 ff             	lea    -0x1(%esi),%eax
81005ec8:	eb 03                	jmp    81005ecd <_strtol_l+0x1c3>
81005eca:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ecd:	8b 55 10             	mov    0x10(%ebp),%edx
81005ed0:	89 02                	mov    %eax,(%edx)
81005ed2:	89 f8                	mov    %edi,%eax
81005ed4:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005ed7:	5b                   	pop    %ebx
81005ed8:	5e                   	pop    %esi
81005ed9:	5f                   	pop    %edi
81005eda:	5d                   	pop    %ebp
81005edb:	c3                   	ret    

81005edc <_strtol_r>:
81005edc:	55                   	push   %ebp
81005edd:	89 e5                	mov    %esp,%ebp
81005edf:	83 ec 08             	sub    $0x8,%esp
81005ee2:	e8 19 fe ff ff       	call   81005d00 <__get_current_locale>
81005ee7:	83 ec 0c             	sub    $0xc,%esp
81005eea:	50                   	push   %eax
81005eeb:	ff 75 14             	push   0x14(%ebp)
81005eee:	ff 75 10             	push   0x10(%ebp)
81005ef1:	ff 75 0c             	push   0xc(%ebp)
81005ef4:	ff 75 08             	push   0x8(%ebp)
81005ef7:	e8 0e fe ff ff       	call   81005d0a <_strtol_l>
81005efc:	83 c4 20             	add    $0x20,%esp
81005eff:	c9                   	leave  
81005f00:	c3                   	ret    

81005f01 <strtol_l>:
81005f01:	55                   	push   %ebp
81005f02:	89 e5                	mov    %esp,%ebp
81005f04:	83 ec 08             	sub    $0x8,%esp
81005f07:	a1 44 90 00 81       	mov    0x81009044,%eax
81005f0c:	83 ec 0c             	sub    $0xc,%esp
81005f0f:	ff 75 14             	push   0x14(%ebp)
81005f12:	ff 75 10             	push   0x10(%ebp)
81005f15:	ff 75 0c             	push   0xc(%ebp)
81005f18:	ff 75 08             	push   0x8(%ebp)
81005f1b:	50                   	push   %eax
81005f1c:	e8 e9 fd ff ff       	call   81005d0a <_strtol_l>
81005f21:	83 c4 20             	add    $0x20,%esp
81005f24:	c9                   	leave  
81005f25:	c3                   	ret    

81005f26 <strtol>:
81005f26:	55                   	push   %ebp
81005f27:	89 e5                	mov    %esp,%ebp
81005f29:	83 ec 08             	sub    $0x8,%esp
81005f2c:	e8 cf fd ff ff       	call   81005d00 <__get_current_locale>
81005f31:	8b 15 44 90 00 81    	mov    0x81009044,%edx
81005f37:	83 ec 0c             	sub    $0xc,%esp
81005f3a:	50                   	push   %eax
81005f3b:	ff 75 10             	push   0x10(%ebp)
81005f3e:	ff 75 0c             	push   0xc(%ebp)
81005f41:	ff 75 08             	push   0x8(%ebp)
81005f44:	52                   	push   %edx
81005f45:	e8 c0 fd ff ff       	call   81005d0a <_strtol_l>
81005f4a:	83 c4 20             	add    $0x20,%esp
81005f4d:	c9                   	leave  
81005f4e:	c3                   	ret    

81005f4f <__swbuf_r>:
81005f4f:	55                   	push   %ebp
81005f50:	89 e5                	mov    %esp,%ebp
81005f52:	57                   	push   %edi
81005f53:	56                   	push   %esi
81005f54:	53                   	push   %ebx
81005f55:	83 ec 1c             	sub    $0x1c,%esp
81005f58:	8b 7d 0c             	mov    0xc(%ebp),%edi
81005f5b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005f5e:	8b 45 08             	mov    0x8(%ebp),%eax
81005f61:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f64:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005f68:	74 18                	je     81005f82 <__swbuf_r+0x33>
81005f6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005f6d:	8b 40 38             	mov    0x38(%eax),%eax
81005f70:	85 c0                	test   %eax,%eax
81005f72:	75 0e                	jne    81005f82 <__swbuf_r+0x33>
81005f74:	83 ec 0c             	sub    $0xc,%esp
81005f77:	ff 75 e4             	push   -0x1c(%ebp)
81005f7a:	e8 d9 b7 ff ff       	call   81001758 <__sinit>
81005f7f:	83 c4 10             	add    $0x10,%esp
81005f82:	8b 43 18             	mov    0x18(%ebx),%eax
81005f85:	89 43 08             	mov    %eax,0x8(%ebx)
81005f88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005f8c:	98                   	cwtl   
81005f8d:	83 e0 08             	and    $0x8,%eax
81005f90:	85 c0                	test   %eax,%eax
81005f92:	74 07                	je     81005f9b <__swbuf_r+0x4c>
81005f94:	8b 43 10             	mov    0x10(%ebx),%eax
81005f97:	85 c0                	test   %eax,%eax
81005f99:	75 1d                	jne    81005fb8 <__swbuf_r+0x69>
81005f9b:	83 ec 08             	sub    $0x8,%esp
81005f9e:	53                   	push   %ebx
81005f9f:	ff 75 08             	push   0x8(%ebp)
81005fa2:	e8 21 01 00 00       	call   810060c8 <__swsetup_r>
81005fa7:	83 c4 10             	add    $0x10,%esp
81005faa:	85 c0                	test   %eax,%eax
81005fac:	74 0a                	je     81005fb8 <__swbuf_r+0x69>
81005fae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005fb3:	e9 a1 00 00 00       	jmp    81006059 <__swbuf_r+0x10a>
81005fb8:	89 f8                	mov    %edi,%eax
81005fba:	0f b6 f8             	movzbl %al,%edi
81005fbd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005fc1:	98                   	cwtl   
81005fc2:	25 00 20 00 00       	and    $0x2000,%eax
81005fc7:	85 c0                	test   %eax,%eax
81005fc9:	75 14                	jne    81005fdf <__swbuf_r+0x90>
81005fcb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005fcf:	80 cc 20             	or     $0x20,%ah
81005fd2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005fd6:	8b 43 64             	mov    0x64(%ebx),%eax
81005fd9:	80 e4 df             	and    $0xdf,%ah
81005fdc:	89 43 64             	mov    %eax,0x64(%ebx)
81005fdf:	8b 03                	mov    (%ebx),%eax
81005fe1:	8b 53 10             	mov    0x10(%ebx),%edx
81005fe4:	29 d0                	sub    %edx,%eax
81005fe6:	89 c6                	mov    %eax,%esi
81005fe8:	8b 43 14             	mov    0x14(%ebx),%eax
81005feb:	39 c6                	cmp    %eax,%esi
81005fed:	7c 1f                	jl     8100600e <__swbuf_r+0xbf>
81005fef:	83 ec 08             	sub    $0x8,%esp
81005ff2:	53                   	push   %ebx
81005ff3:	ff 75 08             	push   0x8(%ebp)
81005ff6:	e8 5a b2 ff ff       	call   81001255 <_fflush_r>
81005ffb:	83 c4 10             	add    $0x10,%esp
81005ffe:	85 c0                	test   %eax,%eax
81006000:	74 07                	je     81006009 <__swbuf_r+0xba>
81006002:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006007:	eb 50                	jmp    81006059 <__swbuf_r+0x10a>
81006009:	be 00 00 00 00       	mov    $0x0,%esi
8100600e:	8b 43 08             	mov    0x8(%ebx),%eax
81006011:	83 e8 01             	sub    $0x1,%eax
81006014:	89 43 08             	mov    %eax,0x8(%ebx)
81006017:	8b 03                	mov    (%ebx),%eax
81006019:	8d 50 01             	lea    0x1(%eax),%edx
8100601c:	89 13                	mov    %edx,(%ebx)
8100601e:	89 fa                	mov    %edi,%edx
81006020:	88 10                	mov    %dl,(%eax)
81006022:	83 c6 01             	add    $0x1,%esi
81006025:	8b 43 14             	mov    0x14(%ebx),%eax
81006028:	39 c6                	cmp    %eax,%esi
8100602a:	74 11                	je     8100603d <__swbuf_r+0xee>
8100602c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006030:	98                   	cwtl   
81006031:	83 e0 01             	and    $0x1,%eax
81006034:	85 c0                	test   %eax,%eax
81006036:	74 1f                	je     81006057 <__swbuf_r+0x108>
81006038:	83 ff 0a             	cmp    $0xa,%edi
8100603b:	75 1a                	jne    81006057 <__swbuf_r+0x108>
8100603d:	83 ec 08             	sub    $0x8,%esp
81006040:	53                   	push   %ebx
81006041:	ff 75 08             	push   0x8(%ebp)
81006044:	e8 0c b2 ff ff       	call   81001255 <_fflush_r>
81006049:	83 c4 10             	add    $0x10,%esp
8100604c:	85 c0                	test   %eax,%eax
8100604e:	74 07                	je     81006057 <__swbuf_r+0x108>
81006050:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006055:	eb 02                	jmp    81006059 <__swbuf_r+0x10a>
81006057:	89 f8                	mov    %edi,%eax
81006059:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100605c:	5b                   	pop    %ebx
8100605d:	5e                   	pop    %esi
8100605e:	5f                   	pop    %edi
8100605f:	5d                   	pop    %ebp
81006060:	c3                   	ret    

81006061 <__swbuf>:
81006061:	55                   	push   %ebp
81006062:	89 e5                	mov    %esp,%ebp
81006064:	83 ec 08             	sub    $0x8,%esp
81006067:	8b 55 08             	mov    0x8(%ebp),%edx
8100606a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
8100606d:	a1 44 90 00 81       	mov    0x81009044,%eax
81006072:	83 ec 04             	sub    $0x4,%esp
81006075:	51                   	push   %ecx
81006076:	52                   	push   %edx
81006077:	50                   	push   %eax
81006078:	e8 d2 fe ff ff       	call   81005f4f <__swbuf_r>
8100607d:	83 c4 10             	add    $0x10,%esp
81006080:	c9                   	leave  
81006081:	c3                   	ret    

81006082 <_write_r>:
81006082:	55                   	push   %ebp
81006083:	89 e5                	mov    %esp,%ebp
81006085:	83 ec 18             	sub    $0x18,%esp
81006088:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
8100608f:	00 00 00 
81006092:	83 ec 04             	sub    $0x4,%esp
81006095:	ff 75 14             	push   0x14(%ebp)
81006098:	ff 75 10             	push   0x10(%ebp)
8100609b:	ff 75 0c             	push   0xc(%ebp)
8100609e:	e8 92 ab ff ff       	call   81000c35 <write>
810060a3:	83 c4 10             	add    $0x10,%esp
810060a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810060a9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810060ad:	75 14                	jne    810060c3 <_write_r+0x41>
810060af:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
810060b4:	85 c0                	test   %eax,%eax
810060b6:	74 0b                	je     810060c3 <_write_r+0x41>
810060b8:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
810060be:	8b 45 08             	mov    0x8(%ebp),%eax
810060c1:	89 10                	mov    %edx,(%eax)
810060c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060c6:	c9                   	leave  
810060c7:	c3                   	ret    

810060c8 <__swsetup_r>:
810060c8:	55                   	push   %ebp
810060c9:	89 e5                	mov    %esp,%ebp
810060cb:	53                   	push   %ebx
810060cc:	83 ec 14             	sub    $0x14,%esp
810060cf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810060d2:	a1 44 90 00 81       	mov    0x81009044,%eax
810060d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810060da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810060de:	74 18                	je     810060f8 <__swsetup_r+0x30>
810060e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060e3:	8b 40 38             	mov    0x38(%eax),%eax
810060e6:	85 c0                	test   %eax,%eax
810060e8:	75 0e                	jne    810060f8 <__swsetup_r+0x30>
810060ea:	83 ec 0c             	sub    $0xc,%esp
810060ed:	ff 75 f4             	push   -0xc(%ebp)
810060f0:	e8 63 b6 ff ff       	call   81001758 <__sinit>
810060f5:	83 c4 10             	add    $0x10,%esp
810060f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810060fc:	98                   	cwtl   
810060fd:	83 e0 08             	and    $0x8,%eax
81006100:	85 c0                	test   %eax,%eax
81006102:	0f 85 82 00 00 00    	jne    8100618a <__swsetup_r+0xc2>
81006108:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100610c:	98                   	cwtl   
8100610d:	83 e0 10             	and    $0x10,%eax
81006110:	85 c0                	test   %eax,%eax
81006112:	75 1e                	jne    81006132 <__swsetup_r+0x6a>
81006114:	8b 45 08             	mov    0x8(%ebp),%eax
81006117:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
8100611d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006121:	83 c8 40             	or     $0x40,%eax
81006124:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006128:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100612d:	e9 ec 00 00 00       	jmp    8100621e <__swsetup_r+0x156>
81006132:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006136:	98                   	cwtl   
81006137:	83 e0 04             	and    $0x4,%eax
8100613a:	85 c0                	test   %eax,%eax
8100613c:	74 41                	je     8100617f <__swsetup_r+0xb7>
8100613e:	8b 43 30             	mov    0x30(%ebx),%eax
81006141:	85 c0                	test   %eax,%eax
81006143:	74 23                	je     81006168 <__swsetup_r+0xa0>
81006145:	8b 53 30             	mov    0x30(%ebx),%edx
81006148:	8d 43 40             	lea    0x40(%ebx),%eax
8100614b:	39 c2                	cmp    %eax,%edx
8100614d:	74 12                	je     81006161 <__swsetup_r+0x99>
8100614f:	8b 43 30             	mov    0x30(%ebx),%eax
81006152:	83 ec 08             	sub    $0x8,%esp
81006155:	50                   	push   %eax
81006156:	ff 75 08             	push   0x8(%ebp)
81006159:	e8 ea ba ff ff       	call   81001c48 <_free_r>
8100615e:	83 c4 10             	add    $0x10,%esp
81006161:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006168:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100616c:	83 e0 db             	and    $0xffffffdb,%eax
8100616f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006173:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100617a:	8b 43 10             	mov    0x10(%ebx),%eax
8100617d:	89 03                	mov    %eax,(%ebx)
8100617f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006183:	83 c8 08             	or     $0x8,%eax
81006186:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100618a:	8b 43 10             	mov    0x10(%ebx),%eax
8100618d:	85 c0                	test   %eax,%eax
8100618f:	75 2b                	jne    810061bc <__swsetup_r+0xf4>
81006191:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006195:	98                   	cwtl   
81006196:	25 00 02 00 00       	and    $0x200,%eax
8100619b:	85 c0                	test   %eax,%eax
8100619d:	74 0e                	je     810061ad <__swsetup_r+0xe5>
8100619f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061a3:	98                   	cwtl   
810061a4:	25 80 00 00 00       	and    $0x80,%eax
810061a9:	85 c0                	test   %eax,%eax
810061ab:	74 0f                	je     810061bc <__swsetup_r+0xf4>
810061ad:	83 ec 08             	sub    $0x8,%esp
810061b0:	53                   	push   %ebx
810061b1:	ff 75 08             	push   0x8(%ebp)
810061b4:	e8 06 d5 ff ff       	call   810036bf <__smakebuf_r>
810061b9:	83 c4 10             	add    $0x10,%esp
810061bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061c0:	98                   	cwtl   
810061c1:	83 e0 01             	and    $0x1,%eax
810061c4:	85 c0                	test   %eax,%eax
810061c6:	74 11                	je     810061d9 <__swsetup_r+0x111>
810061c8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810061cf:	8b 43 14             	mov    0x14(%ebx),%eax
810061d2:	f7 d8                	neg    %eax
810061d4:	89 43 18             	mov    %eax,0x18(%ebx)
810061d7:	eb 19                	jmp    810061f2 <__swsetup_r+0x12a>
810061d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061dd:	98                   	cwtl   
810061de:	83 e0 02             	and    $0x2,%eax
810061e1:	85 c0                	test   %eax,%eax
810061e3:	75 05                	jne    810061ea <__swsetup_r+0x122>
810061e5:	8b 43 14             	mov    0x14(%ebx),%eax
810061e8:	eb 05                	jmp    810061ef <__swsetup_r+0x127>
810061ea:	b8 00 00 00 00       	mov    $0x0,%eax
810061ef:	89 43 08             	mov    %eax,0x8(%ebx)
810061f2:	8b 43 10             	mov    0x10(%ebx),%eax
810061f5:	85 c0                	test   %eax,%eax
810061f7:	75 20                	jne    81006219 <__swsetup_r+0x151>
810061f9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061fd:	98                   	cwtl   
810061fe:	25 80 00 00 00       	and    $0x80,%eax
81006203:	85 c0                	test   %eax,%eax
81006205:	74 12                	je     81006219 <__swsetup_r+0x151>
81006207:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100620b:	83 c8 40             	or     $0x40,%eax
8100620e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006212:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006217:	eb 05                	jmp    8100621e <__swsetup_r+0x156>
81006219:	b8 00 00 00 00       	mov    $0x0,%eax
8100621e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006221:	c9                   	leave  
81006222:	c3                   	ret    

81006223 <__call_exitprocs>:
81006223:	55                   	push   %ebp
81006224:	89 e5                	mov    %esp,%ebp
81006226:	57                   	push   %edi
81006227:	56                   	push   %esi
81006228:	53                   	push   %ebx
81006229:	83 ec 1c             	sub    $0x1c,%esp
8100622c:	a1 84 88 00 81       	mov    0x81008884,%eax
81006231:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81006237:	a1 84 88 00 81       	mov    0x81008884,%eax
8100623c:	05 48 01 00 00       	add    $0x148,%eax
81006241:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006244:	90                   	nop
81006245:	85 db                	test   %ebx,%ebx
81006247:	0f 84 e1 00 00 00    	je     8100632e <__call_exitprocs+0x10b>
8100624d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81006253:	8b 43 04             	mov    0x4(%ebx),%eax
81006256:	8d 70 ff             	lea    -0x1(%eax),%esi
81006259:	e9 c6 00 00 00       	jmp    81006324 <__call_exitprocs+0x101>
8100625e:	b8 01 00 00 00       	mov    $0x1,%eax
81006263:	89 f1                	mov    %esi,%ecx
81006265:	d3 e0                	shl    %cl,%eax
81006267:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100626a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100626e:	74 17                	je     81006287 <__call_exitprocs+0x64>
81006270:	85 ff                	test   %edi,%edi
81006272:	0f 84 a5 00 00 00    	je     8100631d <__call_exitprocs+0xfa>
81006278:	8d 46 20             	lea    0x20(%esi),%eax
8100627b:	8b 04 87             	mov    (%edi,%eax,4),%eax
8100627e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81006281:	0f 85 96 00 00 00    	jne    8100631d <__call_exitprocs+0xfa>
81006287:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
8100628b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100628e:	8b 43 04             	mov    0x4(%ebx),%eax
81006291:	83 e8 01             	sub    $0x1,%eax
81006294:	39 c6                	cmp    %eax,%esi
81006296:	75 0b                	jne    810062a3 <__call_exitprocs+0x80>
81006298:	8b 43 04             	mov    0x4(%ebx),%eax
8100629b:	83 e8 01             	sub    $0x1,%eax
8100629e:	89 43 04             	mov    %eax,0x4(%ebx)
810062a1:	eb 08                	jmp    810062ab <__call_exitprocs+0x88>
810062a3:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
810062aa:	00 
810062ab:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810062af:	74 6f                	je     81006320 <__call_exitprocs+0xfd>
810062b1:	8b 43 04             	mov    0x4(%ebx),%eax
810062b4:	89 45 d8             	mov    %eax,-0x28(%ebp)
810062b7:	85 ff                	test   %edi,%edi
810062b9:	74 0f                	je     810062ca <__call_exitprocs+0xa7>
810062bb:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
810062c1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810062c4:	21 d0                	and    %edx,%eax
810062c6:	85 c0                	test   %eax,%eax
810062c8:	75 07                	jne    810062d1 <__call_exitprocs+0xae>
810062ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
810062cd:	ff d0                	call   *%eax
810062cf:	eb 32                	jmp    81006303 <__call_exitprocs+0xe0>
810062d1:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
810062d7:	8b 45 e0             	mov    -0x20(%ebp),%eax
810062da:	21 d0                	and    %edx,%eax
810062dc:	85 c0                	test   %eax,%eax
810062de:	75 14                	jne    810062f4 <__call_exitprocs+0xd1>
810062e0:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810062e3:	83 ec 08             	sub    $0x8,%esp
810062e6:	50                   	push   %eax
810062e7:	ff 75 08             	push   0x8(%ebp)
810062ea:	8b 45 dc             	mov    -0x24(%ebp),%eax
810062ed:	ff d0                	call   *%eax
810062ef:	83 c4 10             	add    $0x10,%esp
810062f2:	eb 0f                	jmp    81006303 <__call_exitprocs+0xe0>
810062f4:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810062f7:	83 ec 0c             	sub    $0xc,%esp
810062fa:	50                   	push   %eax
810062fb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810062fe:	ff d0                	call   *%eax
81006300:	83 c4 10             	add    $0x10,%esp
81006303:	8b 43 04             	mov    0x4(%ebx),%eax
81006306:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81006309:	0f 85 1d ff ff ff    	jne    8100622c <__call_exitprocs+0x9>
8100630f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006312:	8b 00                	mov    (%eax),%eax
81006314:	39 c3                	cmp    %eax,%ebx
81006316:	74 09                	je     81006321 <__call_exitprocs+0xfe>
81006318:	e9 0f ff ff ff       	jmp    8100622c <__call_exitprocs+0x9>
8100631d:	90                   	nop
8100631e:	eb 01                	jmp    81006321 <__call_exitprocs+0xfe>
81006320:	90                   	nop
81006321:	83 ee 01             	sub    $0x1,%esi
81006324:	85 f6                	test   %esi,%esi
81006326:	0f 89 32 ff ff ff    	jns    8100625e <__call_exitprocs+0x3b>
8100632c:	eb 01                	jmp    8100632f <__call_exitprocs+0x10c>
8100632e:	90                   	nop
8100632f:	90                   	nop
81006330:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006333:	5b                   	pop    %ebx
81006334:	5e                   	pop    %esi
81006335:	5f                   	pop    %edi
81006336:	5d                   	pop    %ebp
81006337:	c3                   	ret    

81006338 <_close_r>:
81006338:	55                   	push   %ebp
81006339:	89 e5                	mov    %esp,%ebp
8100633b:	83 ec 18             	sub    $0x18,%esp
8100633e:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
81006345:	00 00 00 
81006348:	83 ec 0c             	sub    $0xc,%esp
8100634b:	ff 75 0c             	push   0xc(%ebp)
8100634e:	e8 0f a9 ff ff       	call   81000c62 <close>
81006353:	83 c4 10             	add    $0x10,%esp
81006356:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006359:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100635d:	75 14                	jne    81006373 <_close_r+0x3b>
8100635f:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
81006364:	85 c0                	test   %eax,%eax
81006366:	74 0b                	je     81006373 <_close_r+0x3b>
81006368:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
8100636e:	8b 45 08             	mov    0x8(%ebp),%eax
81006371:	89 10                	mov    %edx,(%eax)
81006373:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006376:	c9                   	leave  
81006377:	c3                   	ret    

81006378 <__errno>:
81006378:	55                   	push   %ebp
81006379:	89 e5                	mov    %esp,%ebp
8100637b:	a1 44 90 00 81       	mov    0x81009044,%eax
81006380:	5d                   	pop    %ebp
81006381:	c3                   	ret    

81006382 <__sflags>:
81006382:	55                   	push   %ebp
81006383:	89 e5                	mov    %esp,%ebp
81006385:	57                   	push   %edi
81006386:	56                   	push   %esi
81006387:	53                   	push   %ebx
81006388:	8b 55 0c             	mov    0xc(%ebp),%edx
8100638b:	0f b6 02             	movzbl (%edx),%eax
8100638e:	0f be c0             	movsbl %al,%eax
81006391:	83 f8 77             	cmp    $0x77,%eax
81006394:	74 20                	je     810063b6 <__sflags+0x34>
81006396:	83 f8 77             	cmp    $0x77,%eax
81006399:	7f 3d                	jg     810063d8 <__sflags+0x56>
8100639b:	83 f8 61             	cmp    $0x61,%eax
8100639e:	74 27                	je     810063c7 <__sflags+0x45>
810063a0:	83 f8 72             	cmp    $0x72,%eax
810063a3:	75 33                	jne    810063d8 <__sflags+0x56>
810063a5:	be 04 00 00 00       	mov    $0x4,%esi
810063aa:	bb 00 00 00 00       	mov    $0x0,%ebx
810063af:	bf 00 00 00 00       	mov    $0x0,%edi
810063b4:	eb 32                	jmp    810063e8 <__sflags+0x66>
810063b6:	be 08 00 00 00       	mov    $0x8,%esi
810063bb:	bb 01 00 00 00       	mov    $0x1,%ebx
810063c0:	bf 00 06 00 00       	mov    $0x600,%edi
810063c5:	eb 21                	jmp    810063e8 <__sflags+0x66>
810063c7:	be 08 01 00 00       	mov    $0x108,%esi
810063cc:	bb 01 00 00 00       	mov    $0x1,%ebx
810063d1:	bf 08 02 00 00       	mov    $0x208,%edi
810063d6:	eb 10                	jmp    810063e8 <__sflags+0x66>
810063d8:	8b 45 08             	mov    0x8(%ebp),%eax
810063db:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810063e1:	b8 00 00 00 00       	mov    $0x0,%eax
810063e6:	eb 4f                	jmp    81006437 <__sflags+0xb5>
810063e8:	eb 38                	jmp    81006422 <__sflags+0xa0>
810063ea:	0f b6 02             	movzbl (%edx),%eax
810063ed:	0f be c0             	movsbl %al,%eax
810063f0:	83 f8 78             	cmp    $0x78,%eax
810063f3:	74 27                	je     8100641c <__sflags+0x9a>
810063f5:	83 f8 78             	cmp    $0x78,%eax
810063f8:	7f 27                	jg     81006421 <__sflags+0x9f>
810063fa:	83 f8 2b             	cmp    $0x2b,%eax
810063fd:	74 07                	je     81006406 <__sflags+0x84>
810063ff:	83 f8 62             	cmp    $0x62,%eax
81006402:	74 1e                	je     81006422 <__sflags+0xa0>
81006404:	eb 1b                	jmp    81006421 <__sflags+0x9f>
81006406:	89 f0                	mov    %esi,%eax
81006408:	83 e0 e3             	and    $0xffffffe3,%eax
8100640b:	83 c8 10             	or     $0x10,%eax
8100640e:	89 c6                	mov    %eax,%esi
81006410:	89 d8                	mov    %ebx,%eax
81006412:	83 e0 fc             	and    $0xfffffffc,%eax
81006415:	83 c8 02             	or     $0x2,%eax
81006418:	89 c3                	mov    %eax,%ebx
8100641a:	eb 06                	jmp    81006422 <__sflags+0xa0>
8100641c:	80 cf 08             	or     $0x8,%bh
8100641f:	eb 01                	jmp    81006422 <__sflags+0xa0>
81006421:	90                   	nop
81006422:	83 c2 01             	add    $0x1,%edx
81006425:	0f b6 02             	movzbl (%edx),%eax
81006428:	84 c0                	test   %al,%al
8100642a:	75 be                	jne    810063ea <__sflags+0x68>
8100642c:	89 da                	mov    %ebx,%edx
8100642e:	09 fa                	or     %edi,%edx
81006430:	8b 45 10             	mov    0x10(%ebp),%eax
81006433:	89 10                	mov    %edx,(%eax)
81006435:	89 f0                	mov    %esi,%eax
81006437:	5b                   	pop    %ebx
81006438:	5e                   	pop    %esi
81006439:	5f                   	pop    %edi
8100643a:	5d                   	pop    %ebp
8100643b:	c3                   	ret    

8100643c <_fputc_r>:
8100643c:	55                   	push   %ebp
8100643d:	89 e5                	mov    %esp,%ebp
8100643f:	83 ec 18             	sub    $0x18,%esp
81006442:	8b 45 08             	mov    0x8(%ebp),%eax
81006445:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006448:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100644c:	74 18                	je     81006466 <_fputc_r+0x2a>
8100644e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006451:	8b 40 38             	mov    0x38(%eax),%eax
81006454:	85 c0                	test   %eax,%eax
81006456:	75 0e                	jne    81006466 <_fputc_r+0x2a>
81006458:	83 ec 0c             	sub    $0xc,%esp
8100645b:	ff 75 f4             	push   -0xc(%ebp)
8100645e:	e8 f5 b2 ff ff       	call   81001758 <__sinit>
81006463:	83 c4 10             	add    $0x10,%esp
81006466:	83 ec 04             	sub    $0x4,%esp
81006469:	ff 75 10             	push   0x10(%ebp)
8100646c:	ff 75 0c             	push   0xc(%ebp)
8100646f:	ff 75 08             	push   0x8(%ebp)
81006472:	e8 6f 13 00 00       	call   810077e6 <_putc_r>
81006477:	83 c4 10             	add    $0x10,%esp
8100647a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100647d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006480:	c9                   	leave  
81006481:	c3                   	ret    

81006482 <fputc>:
81006482:	55                   	push   %ebp
81006483:	89 e5                	mov    %esp,%ebp
81006485:	83 ec 18             	sub    $0x18,%esp
81006488:	a1 44 90 00 81       	mov    0x81009044,%eax
8100648d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006490:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006493:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006496:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100649a:	74 18                	je     810064b4 <fputc+0x32>
8100649c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100649f:	8b 40 38             	mov    0x38(%eax),%eax
810064a2:	85 c0                	test   %eax,%eax
810064a4:	75 0e                	jne    810064b4 <fputc+0x32>
810064a6:	83 ec 0c             	sub    $0xc,%esp
810064a9:	ff 75 f0             	push   -0x10(%ebp)
810064ac:	e8 a7 b2 ff ff       	call   81001758 <__sinit>
810064b1:	83 c4 10             	add    $0x10,%esp
810064b4:	83 ec 04             	sub    $0x4,%esp
810064b7:	ff 75 0c             	push   0xc(%ebp)
810064ba:	ff 75 08             	push   0x8(%ebp)
810064bd:	ff 75 f4             	push   -0xc(%ebp)
810064c0:	e8 21 13 00 00       	call   810077e6 <_putc_r>
810064c5:	83 c4 10             	add    $0x10,%esp
810064c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810064cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810064ce:	c9                   	leave  
810064cf:	c3                   	ret    

810064d0 <_fputs_r>:
810064d0:	55                   	push   %ebp
810064d1:	89 e5                	mov    %esp,%ebp
810064d3:	83 ec 28             	sub    $0x28,%esp
810064d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810064d9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810064dc:	83 ec 0c             	sub    $0xc,%esp
810064df:	ff 75 0c             	push   0xc(%ebp)
810064e2:	e8 89 f6 ff ff       	call   81005b70 <strlen>
810064e7:	83 c4 10             	add    $0x10,%esp
810064ea:	89 45 ec             	mov    %eax,-0x14(%ebp)
810064ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
810064f0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810064f3:	8d 45 dc             	lea    -0x24(%ebp),%eax
810064f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810064f9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81006500:	8b 45 08             	mov    0x8(%ebp),%eax
81006503:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006506:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100650a:	74 18                	je     81006524 <_fputs_r+0x54>
8100650c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100650f:	8b 40 38             	mov    0x38(%eax),%eax
81006512:	85 c0                	test   %eax,%eax
81006514:	75 0e                	jne    81006524 <_fputs_r+0x54>
81006516:	83 ec 0c             	sub    $0xc,%esp
81006519:	ff 75 f4             	push   -0xc(%ebp)
8100651c:	e8 37 b2 ff ff       	call   81001758 <__sinit>
81006521:	83 c4 10             	add    $0x10,%esp
81006524:	8b 45 10             	mov    0x10(%ebp),%eax
81006527:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100652b:	98                   	cwtl   
8100652c:	25 00 20 00 00       	and    $0x2000,%eax
81006531:	85 c0                	test   %eax,%eax
81006533:	75 24                	jne    81006559 <_fputs_r+0x89>
81006535:	8b 45 10             	mov    0x10(%ebp),%eax
81006538:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100653c:	80 cc 20             	or     $0x20,%ah
8100653f:	89 c2                	mov    %eax,%edx
81006541:	8b 45 10             	mov    0x10(%ebp),%eax
81006544:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006548:	8b 45 10             	mov    0x10(%ebp),%eax
8100654b:	8b 40 64             	mov    0x64(%eax),%eax
8100654e:	80 e4 df             	and    $0xdf,%ah
81006551:	89 c2                	mov    %eax,%edx
81006553:	8b 45 10             	mov    0x10(%ebp),%eax
81006556:	89 50 64             	mov    %edx,0x64(%eax)
81006559:	83 ec 04             	sub    $0x4,%esp
8100655c:	8d 45 e4             	lea    -0x1c(%ebp),%eax
8100655f:	50                   	push   %eax
81006560:	ff 75 10             	push   0x10(%ebp)
81006563:	ff 75 08             	push   0x8(%ebp)
81006566:	e8 df 01 00 00       	call   8100674a <__sfvwrite_r>
8100656b:	83 c4 10             	add    $0x10,%esp
8100656e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006571:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006574:	c9                   	leave  
81006575:	c3                   	ret    

81006576 <fputs>:
81006576:	55                   	push   %ebp
81006577:	89 e5                	mov    %esp,%ebp
81006579:	83 ec 08             	sub    $0x8,%esp
8100657c:	a1 44 90 00 81       	mov    0x81009044,%eax
81006581:	83 ec 04             	sub    $0x4,%esp
81006584:	ff 75 0c             	push   0xc(%ebp)
81006587:	ff 75 08             	push   0x8(%ebp)
8100658a:	50                   	push   %eax
8100658b:	e8 40 ff ff ff       	call   810064d0 <_fputs_r>
81006590:	83 c4 10             	add    $0x10,%esp
81006593:	c9                   	leave  
81006594:	c3                   	ret    

81006595 <__sputc_r>:
81006595:	55                   	push   %ebp
81006596:	89 e5                	mov    %esp,%ebp
81006598:	83 ec 08             	sub    $0x8,%esp
8100659b:	8b 45 10             	mov    0x10(%ebp),%eax
8100659e:	8b 40 08             	mov    0x8(%eax),%eax
810065a1:	8d 50 ff             	lea    -0x1(%eax),%edx
810065a4:	8b 45 10             	mov    0x10(%ebp),%eax
810065a7:	89 50 08             	mov    %edx,0x8(%eax)
810065aa:	8b 45 10             	mov    0x10(%ebp),%eax
810065ad:	8b 40 08             	mov    0x8(%eax),%eax
810065b0:	85 c0                	test   %eax,%eax
810065b2:	79 17                	jns    810065cb <__sputc_r+0x36>
810065b4:	8b 45 10             	mov    0x10(%ebp),%eax
810065b7:	8b 50 08             	mov    0x8(%eax),%edx
810065ba:	8b 45 10             	mov    0x10(%ebp),%eax
810065bd:	8b 40 18             	mov    0x18(%eax),%eax
810065c0:	39 c2                	cmp    %eax,%edx
810065c2:	7c 21                	jl     810065e5 <__sputc_r+0x50>
810065c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810065c7:	3c 0a                	cmp    $0xa,%al
810065c9:	74 1a                	je     810065e5 <__sputc_r+0x50>
810065cb:	8b 45 10             	mov    0x10(%ebp),%eax
810065ce:	8b 00                	mov    (%eax),%eax
810065d0:	8d 48 01             	lea    0x1(%eax),%ecx
810065d3:	8b 55 10             	mov    0x10(%ebp),%edx
810065d6:	89 0a                	mov    %ecx,(%edx)
810065d8:	8b 55 0c             	mov    0xc(%ebp),%edx
810065db:	88 10                	mov    %dl,(%eax)
810065dd:	0f b6 00             	movzbl (%eax),%eax
810065e0:	0f b6 c0             	movzbl %al,%eax
810065e3:	eb 14                	jmp    810065f9 <__sputc_r+0x64>
810065e5:	83 ec 04             	sub    $0x4,%esp
810065e8:	ff 75 10             	push   0x10(%ebp)
810065eb:	ff 75 0c             	push   0xc(%ebp)
810065ee:	ff 75 08             	push   0x8(%ebp)
810065f1:	e8 59 f9 ff ff       	call   81005f4f <__swbuf_r>
810065f6:	83 c4 10             	add    $0x10,%esp
810065f9:	c9                   	leave  
810065fa:	c3                   	ret    

810065fb <__fputwc>:
810065fb:	55                   	push   %ebp
810065fc:	89 e5                	mov    %esp,%ebp
810065fe:	83 ec 18             	sub    $0x18,%esp
81006601:	e8 b5 08 00 00       	call   81006ebb <__locale_mb_cur_max>
81006606:	83 f8 01             	cmp    $0x1,%eax
81006609:	75 1e                	jne    81006629 <__fputwc+0x2e>
8100660b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100660f:	7e 18                	jle    81006629 <__fputwc+0x2e>
81006611:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006618:	7f 0f                	jg     81006629 <__fputwc+0x2e>
8100661a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100661d:	88 45 ef             	mov    %al,-0x11(%ebp)
81006620:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81006627:	eb 3c                	jmp    81006665 <__fputwc+0x6a>
81006629:	8b 45 10             	mov    0x10(%ebp),%eax
8100662c:	83 c0 5c             	add    $0x5c,%eax
8100662f:	50                   	push   %eax
81006630:	ff 75 0c             	push   0xc(%ebp)
81006633:	8d 45 ef             	lea    -0x11(%ebp),%eax
81006636:	50                   	push   %eax
81006637:	ff 75 08             	push   0x8(%ebp)
8100663a:	e8 dc 1c 00 00       	call   8100831b <_wcrtomb_r>
8100663f:	83 c4 10             	add    $0x10,%esp
81006642:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006645:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81006649:	75 1a                	jne    81006665 <__fputwc+0x6a>
8100664b:	8b 45 10             	mov    0x10(%ebp),%eax
8100664e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006652:	83 c8 40             	or     $0x40,%eax
81006655:	89 c2                	mov    %eax,%edx
81006657:	8b 45 10             	mov    0x10(%ebp),%eax
8100665a:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100665e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006663:	eb 44                	jmp    810066a9 <__fputwc+0xae>
81006665:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100666c:	eb 30                	jmp    8100669e <__fputwc+0xa3>
8100666e:	8d 55 ef             	lea    -0x11(%ebp),%edx
81006671:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006674:	01 d0                	add    %edx,%eax
81006676:	0f b6 00             	movzbl (%eax),%eax
81006679:	0f b6 c0             	movzbl %al,%eax
8100667c:	83 ec 04             	sub    $0x4,%esp
8100667f:	ff 75 10             	push   0x10(%ebp)
81006682:	50                   	push   %eax
81006683:	ff 75 08             	push   0x8(%ebp)
81006686:	e8 0a ff ff ff       	call   81006595 <__sputc_r>
8100668b:	83 c4 10             	add    $0x10,%esp
8100668e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006691:	75 07                	jne    8100669a <__fputwc+0x9f>
81006693:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006698:	eb 0f                	jmp    810066a9 <__fputwc+0xae>
8100669a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100669e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066a1:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810066a4:	72 c8                	jb     8100666e <__fputwc+0x73>
810066a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810066a9:	c9                   	leave  
810066aa:	c3                   	ret    

810066ab <_fputwc_r>:
810066ab:	55                   	push   %ebp
810066ac:	89 e5                	mov    %esp,%ebp
810066ae:	83 ec 18             	sub    $0x18,%esp
810066b1:	8b 45 10             	mov    0x10(%ebp),%eax
810066b4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810066b8:	98                   	cwtl   
810066b9:	25 00 20 00 00       	and    $0x2000,%eax
810066be:	85 c0                	test   %eax,%eax
810066c0:	75 24                	jne    810066e6 <_fputwc_r+0x3b>
810066c2:	8b 45 10             	mov    0x10(%ebp),%eax
810066c5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810066c9:	80 cc 20             	or     $0x20,%ah
810066cc:	89 c2                	mov    %eax,%edx
810066ce:	8b 45 10             	mov    0x10(%ebp),%eax
810066d1:	66 89 50 0c          	mov    %dx,0xc(%eax)
810066d5:	8b 45 10             	mov    0x10(%ebp),%eax
810066d8:	8b 40 64             	mov    0x64(%eax),%eax
810066db:	80 cc 20             	or     $0x20,%ah
810066de:	89 c2                	mov    %eax,%edx
810066e0:	8b 45 10             	mov    0x10(%ebp),%eax
810066e3:	89 50 64             	mov    %edx,0x64(%eax)
810066e6:	83 ec 04             	sub    $0x4,%esp
810066e9:	ff 75 10             	push   0x10(%ebp)
810066ec:	ff 75 0c             	push   0xc(%ebp)
810066ef:	ff 75 08             	push   0x8(%ebp)
810066f2:	e8 04 ff ff ff       	call   810065fb <__fputwc>
810066f7:	83 c4 10             	add    $0x10,%esp
810066fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006700:	c9                   	leave  
81006701:	c3                   	ret    

81006702 <fputwc>:
81006702:	55                   	push   %ebp
81006703:	89 e5                	mov    %esp,%ebp
81006705:	83 ec 18             	sub    $0x18,%esp
81006708:	a1 44 90 00 81       	mov    0x81009044,%eax
8100670d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006710:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006713:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006716:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100671a:	74 18                	je     81006734 <fputwc+0x32>
8100671c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100671f:	8b 40 38             	mov    0x38(%eax),%eax
81006722:	85 c0                	test   %eax,%eax
81006724:	75 0e                	jne    81006734 <fputwc+0x32>
81006726:	83 ec 0c             	sub    $0xc,%esp
81006729:	ff 75 f0             	push   -0x10(%ebp)
8100672c:	e8 27 b0 ff ff       	call   81001758 <__sinit>
81006731:	83 c4 10             	add    $0x10,%esp
81006734:	83 ec 04             	sub    $0x4,%esp
81006737:	ff 75 0c             	push   0xc(%ebp)
8100673a:	ff 75 08             	push   0x8(%ebp)
8100673d:	ff 75 f4             	push   -0xc(%ebp)
81006740:	e8 66 ff ff ff       	call   810066ab <_fputwc_r>
81006745:	83 c4 10             	add    $0x10,%esp
81006748:	c9                   	leave  
81006749:	c3                   	ret    

8100674a <__sfvwrite_r>:
8100674a:	55                   	push   %ebp
8100674b:	89 e5                	mov    %esp,%ebp
8100674d:	57                   	push   %edi
8100674e:	56                   	push   %esi
8100674f:	53                   	push   %ebx
81006750:	83 ec 3c             	sub    $0x3c,%esp
81006753:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006756:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100675d:	8b 45 10             	mov    0x10(%ebp),%eax
81006760:	8b 78 08             	mov    0x8(%eax),%edi
81006763:	85 ff                	test   %edi,%edi
81006765:	75 0a                	jne    81006771 <__sfvwrite_r+0x27>
81006767:	b8 00 00 00 00       	mov    $0x0,%eax
8100676c:	e9 6f 04 00 00       	jmp    81006be0 <__sfvwrite_r+0x496>
81006771:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006775:	98                   	cwtl   
81006776:	83 e0 08             	and    $0x8,%eax
81006779:	85 c0                	test   %eax,%eax
8100677b:	74 07                	je     81006784 <__sfvwrite_r+0x3a>
8100677d:	8b 43 10             	mov    0x10(%ebx),%eax
81006780:	85 c0                	test   %eax,%eax
81006782:	75 1d                	jne    810067a1 <__sfvwrite_r+0x57>
81006784:	83 ec 08             	sub    $0x8,%esp
81006787:	53                   	push   %ebx
81006788:	ff 75 08             	push   0x8(%ebp)
8100678b:	e8 38 f9 ff ff       	call   810060c8 <__swsetup_r>
81006790:	83 c4 10             	add    $0x10,%esp
81006793:	85 c0                	test   %eax,%eax
81006795:	74 0a                	je     810067a1 <__sfvwrite_r+0x57>
81006797:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100679c:	e9 3f 04 00 00       	jmp    81006be0 <__sfvwrite_r+0x496>
810067a1:	8b 45 10             	mov    0x10(%ebp),%eax
810067a4:	8b 00                	mov    (%eax),%eax
810067a6:	89 45 c0             	mov    %eax,-0x40(%ebp)
810067a9:	bf 00 00 00 00       	mov    $0x0,%edi
810067ae:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067b2:	98                   	cwtl   
810067b3:	83 e0 02             	and    $0x2,%eax
810067b6:	85 c0                	test   %eax,%eax
810067b8:	74 68                	je     81006822 <__sfvwrite_r+0xd8>
810067ba:	eb 11                	jmp    810067cd <__sfvwrite_r+0x83>
810067bc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810067bf:	8b 08                	mov    (%eax),%ecx
810067c1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810067c4:	8b 78 04             	mov    0x4(%eax),%edi
810067c7:	83 c0 08             	add    $0x8,%eax
810067ca:	89 45 c0             	mov    %eax,-0x40(%ebp)
810067cd:	85 ff                	test   %edi,%edi
810067cf:	74 eb                	je     810067bc <__sfvwrite_r+0x72>
810067d1:	8b 4b 24             	mov    0x24(%ebx),%ecx
810067d4:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810067d9:	39 c7                	cmp    %eax,%edi
810067db:	0f 46 c7             	cmovbe %edi,%eax
810067de:	89 c2                	mov    %eax,%edx
810067e0:	8b 43 1c             	mov    0x1c(%ebx),%eax
810067e3:	52                   	push   %edx
810067e4:	ff 75 c4             	push   -0x3c(%ebp)
810067e7:	50                   	push   %eax
810067e8:	ff 75 08             	push   0x8(%ebp)
810067eb:	ff d1                	call   *%ecx
810067ed:	83 c4 10             	add    $0x10,%esp
810067f0:	89 c6                	mov    %eax,%esi
810067f2:	85 f6                	test   %esi,%esi
810067f4:	0f 8e cf 03 00 00    	jle    81006bc9 <__sfvwrite_r+0x47f>
810067fa:	89 f0                	mov    %esi,%eax
810067fc:	01 45 c4             	add    %eax,-0x3c(%ebp)
810067ff:	89 f0                	mov    %esi,%eax
81006801:	29 c7                	sub    %eax,%edi
81006803:	8b 45 10             	mov    0x10(%ebp),%eax
81006806:	8b 40 08             	mov    0x8(%eax),%eax
81006809:	89 f2                	mov    %esi,%edx
8100680b:	29 d0                	sub    %edx,%eax
8100680d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006810:	89 41 08             	mov    %eax,0x8(%ecx)
81006813:	8b 45 10             	mov    0x10(%ebp),%eax
81006816:	8b 40 08             	mov    0x8(%eax),%eax
81006819:	85 c0                	test   %eax,%eax
8100681b:	75 b0                	jne    810067cd <__sfvwrite_r+0x83>
8100681d:	e9 a0 03 00 00       	jmp    81006bc2 <__sfvwrite_r+0x478>
81006822:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006826:	98                   	cwtl   
81006827:	83 e0 01             	and    $0x1,%eax
8100682a:	85 c0                	test   %eax,%eax
8100682c:	0f 85 44 02 00 00    	jne    81006a76 <__sfvwrite_r+0x32c>
81006832:	eb 11                	jmp    81006845 <__sfvwrite_r+0xfb>
81006834:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006837:	8b 08                	mov    (%eax),%ecx
81006839:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100683c:	8b 78 04             	mov    0x4(%eax),%edi
8100683f:	83 c0 08             	add    $0x8,%eax
81006842:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006845:	85 ff                	test   %edi,%edi
81006847:	74 eb                	je     81006834 <__sfvwrite_r+0xea>
81006849:	8b 73 08             	mov    0x8(%ebx),%esi
8100684c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006850:	98                   	cwtl   
81006851:	25 00 02 00 00       	and    $0x200,%eax
81006856:	85 c0                	test   %eax,%eax
81006858:	0f 84 4f 01 00 00    	je     810069ad <__sfvwrite_r+0x263>
8100685e:	89 f0                	mov    %esi,%eax
81006860:	39 c7                	cmp    %eax,%edi
81006862:	0f 82 12 01 00 00    	jb     8100697a <__sfvwrite_r+0x230>
81006868:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100686c:	98                   	cwtl   
8100686d:	25 80 04 00 00       	and    $0x480,%eax
81006872:	85 c0                	test   %eax,%eax
81006874:	0f 84 00 01 00 00    	je     8100697a <__sfvwrite_r+0x230>
8100687a:	8b 03                	mov    (%ebx),%eax
8100687c:	8b 53 10             	mov    0x10(%ebx),%edx
8100687f:	29 d0                	sub    %edx,%eax
81006881:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006884:	8b 53 14             	mov    0x14(%ebx),%edx
81006887:	89 d0                	mov    %edx,%eax
81006889:	01 c0                	add    %eax,%eax
8100688b:	01 d0                	add    %edx,%eax
8100688d:	89 c2                	mov    %eax,%edx
8100688f:	c1 ea 1f             	shr    $0x1f,%edx
81006892:	01 d0                	add    %edx,%eax
81006894:	d1 f8                	sar    %eax
81006896:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006899:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100689c:	01 f8                	add    %edi,%eax
8100689e:	8d 50 01             	lea    0x1(%eax),%edx
810068a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068a4:	39 c2                	cmp    %eax,%edx
810068a6:	76 0b                	jbe    810068b3 <__sfvwrite_r+0x169>
810068a8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810068ab:	01 f8                	add    %edi,%eax
810068ad:	83 c0 01             	add    $0x1,%eax
810068b0:	89 45 d8             	mov    %eax,-0x28(%ebp)
810068b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810068b7:	98                   	cwtl   
810068b8:	25 00 04 00 00       	and    $0x400,%eax
810068bd:	85 c0                	test   %eax,%eax
810068bf:	74 4f                	je     81006910 <__sfvwrite_r+0x1c6>
810068c1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810068c4:	83 ec 08             	sub    $0x8,%esp
810068c7:	50                   	push   %eax
810068c8:	ff 75 08             	push   0x8(%ebp)
810068cb:	e8 3b d2 ff ff       	call   81003b0b <_malloc_r>
810068d0:	83 c4 10             	add    $0x10,%esp
810068d3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810068d6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810068da:	75 0e                	jne    810068ea <__sfvwrite_r+0x1a0>
810068dc:	8b 45 08             	mov    0x8(%ebp),%eax
810068df:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810068e5:	e9 e6 02 00 00       	jmp    81006bd0 <__sfvwrite_r+0x486>
810068ea:	8b 55 d0             	mov    -0x30(%ebp),%edx
810068ed:	8b 43 10             	mov    0x10(%ebx),%eax
810068f0:	83 ec 04             	sub    $0x4,%esp
810068f3:	52                   	push   %edx
810068f4:	50                   	push   %eax
810068f5:	ff 75 dc             	push   -0x24(%ebp)
810068f8:	e8 1b db ff ff       	call   81004418 <memcpy>
810068fd:	83 c4 10             	add    $0x10,%esp
81006900:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006904:	66 25 7f fb          	and    $0xfb7f,%ax
81006908:	0c 80                	or     $0x80,%al
8100690a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100690e:	eb 49                	jmp    81006959 <__sfvwrite_r+0x20f>
81006910:	8b 55 d8             	mov    -0x28(%ebp),%edx
81006913:	8b 43 10             	mov    0x10(%ebx),%eax
81006916:	83 ec 04             	sub    $0x4,%esp
81006919:	52                   	push   %edx
8100691a:	50                   	push   %eax
8100691b:	ff 75 08             	push   0x8(%ebp)
8100691e:	e8 a7 0f 00 00       	call   810078ca <_realloc_r>
81006923:	83 c4 10             	add    $0x10,%esp
81006926:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006929:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100692d:	75 2a                	jne    81006959 <__sfvwrite_r+0x20f>
8100692f:	8b 43 10             	mov    0x10(%ebx),%eax
81006932:	83 ec 08             	sub    $0x8,%esp
81006935:	50                   	push   %eax
81006936:	ff 75 08             	push   0x8(%ebp)
81006939:	e8 0a b3 ff ff       	call   81001c48 <_free_r>
8100693e:	83 c4 10             	add    $0x10,%esp
81006941:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006945:	24 7f                	and    $0x7f,%al
81006947:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100694b:	8b 45 08             	mov    0x8(%ebp),%eax
8100694e:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006954:	e9 77 02 00 00       	jmp    81006bd0 <__sfvwrite_r+0x486>
81006959:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100695c:	89 43 10             	mov    %eax,0x10(%ebx)
8100695f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81006962:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006965:	01 d0                	add    %edx,%eax
81006967:	89 03                	mov    %eax,(%ebx)
81006969:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100696c:	89 43 14             	mov    %eax,0x14(%ebx)
8100696f:	89 fe                	mov    %edi,%esi
81006971:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006974:	2b 45 d0             	sub    -0x30(%ebp),%eax
81006977:	89 43 08             	mov    %eax,0x8(%ebx)
8100697a:	89 f0                	mov    %esi,%eax
8100697c:	39 c7                	cmp    %eax,%edi
8100697e:	73 02                	jae    81006982 <__sfvwrite_r+0x238>
81006980:	89 fe                	mov    %edi,%esi
81006982:	89 f2                	mov    %esi,%edx
81006984:	8b 03                	mov    (%ebx),%eax
81006986:	83 ec 04             	sub    $0x4,%esp
81006989:	52                   	push   %edx
8100698a:	ff 75 c4             	push   -0x3c(%ebp)
8100698d:	50                   	push   %eax
8100698e:	e8 3d 06 00 00       	call   81006fd0 <memmove>
81006993:	83 c4 10             	add    $0x10,%esp
81006996:	8b 43 08             	mov    0x8(%ebx),%eax
81006999:	29 f0                	sub    %esi,%eax
8100699b:	89 43 08             	mov    %eax,0x8(%ebx)
8100699e:	8b 03                	mov    (%ebx),%eax
810069a0:	89 f2                	mov    %esi,%edx
810069a2:	01 d0                	add    %edx,%eax
810069a4:	89 03                	mov    %eax,(%ebx)
810069a6:	89 fe                	mov    %edi,%esi
810069a8:	e9 9d 00 00 00       	jmp    81006a4a <__sfvwrite_r+0x300>
810069ad:	8b 13                	mov    (%ebx),%edx
810069af:	8b 43 10             	mov    0x10(%ebx),%eax
810069b2:	39 c2                	cmp    %eax,%edx
810069b4:	77 07                	ja     810069bd <__sfvwrite_r+0x273>
810069b6:	8b 43 14             	mov    0x14(%ebx),%eax
810069b9:	39 c7                	cmp    %eax,%edi
810069bb:	73 4c                	jae    81006a09 <__sfvwrite_r+0x2bf>
810069bd:	89 f0                	mov    %esi,%eax
810069bf:	39 c7                	cmp    %eax,%edi
810069c1:	0f 46 c7             	cmovbe %edi,%eax
810069c4:	89 c6                	mov    %eax,%esi
810069c6:	89 f2                	mov    %esi,%edx
810069c8:	8b 03                	mov    (%ebx),%eax
810069ca:	83 ec 04             	sub    $0x4,%esp
810069cd:	52                   	push   %edx
810069ce:	ff 75 c4             	push   -0x3c(%ebp)
810069d1:	50                   	push   %eax
810069d2:	e8 f9 05 00 00       	call   81006fd0 <memmove>
810069d7:	83 c4 10             	add    $0x10,%esp
810069da:	8b 43 08             	mov    0x8(%ebx),%eax
810069dd:	29 f0                	sub    %esi,%eax
810069df:	89 43 08             	mov    %eax,0x8(%ebx)
810069e2:	8b 03                	mov    (%ebx),%eax
810069e4:	89 f2                	mov    %esi,%edx
810069e6:	01 d0                	add    %edx,%eax
810069e8:	89 03                	mov    %eax,(%ebx)
810069ea:	8b 43 08             	mov    0x8(%ebx),%eax
810069ed:	85 c0                	test   %eax,%eax
810069ef:	75 58                	jne    81006a49 <__sfvwrite_r+0x2ff>
810069f1:	83 ec 08             	sub    $0x8,%esp
810069f4:	53                   	push   %ebx
810069f5:	ff 75 08             	push   0x8(%ebp)
810069f8:	e8 58 a8 ff ff       	call   81001255 <_fflush_r>
810069fd:	83 c4 10             	add    $0x10,%esp
81006a00:	85 c0                	test   %eax,%eax
81006a02:	74 45                	je     81006a49 <__sfvwrite_r+0x2ff>
81006a04:	e9 c7 01 00 00       	jmp    81006bd0 <__sfvwrite_r+0x486>
81006a09:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81006a0f:	77 04                	ja     81006a15 <__sfvwrite_r+0x2cb>
81006a11:	89 f8                	mov    %edi,%eax
81006a13:	eb 05                	jmp    81006a1a <__sfvwrite_r+0x2d0>
81006a15:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006a1a:	8b 4b 14             	mov    0x14(%ebx),%ecx
81006a1d:	99                   	cltd   
81006a1e:	f7 f9                	idiv   %ecx
81006a20:	89 c2                	mov    %eax,%edx
81006a22:	8b 43 14             	mov    0x14(%ebx),%eax
81006a25:	89 d6                	mov    %edx,%esi
81006a27:	0f af f0             	imul   %eax,%esi
81006a2a:	8b 53 24             	mov    0x24(%ebx),%edx
81006a2d:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006a30:	56                   	push   %esi
81006a31:	ff 75 c4             	push   -0x3c(%ebp)
81006a34:	50                   	push   %eax
81006a35:	ff 75 08             	push   0x8(%ebp)
81006a38:	ff d2                	call   *%edx
81006a3a:	83 c4 10             	add    $0x10,%esp
81006a3d:	89 c6                	mov    %eax,%esi
81006a3f:	85 f6                	test   %esi,%esi
81006a41:	0f 8e 85 01 00 00    	jle    81006bcc <__sfvwrite_r+0x482>
81006a47:	eb 01                	jmp    81006a4a <__sfvwrite_r+0x300>
81006a49:	90                   	nop
81006a4a:	89 f0                	mov    %esi,%eax
81006a4c:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006a4f:	89 f0                	mov    %esi,%eax
81006a51:	29 c7                	sub    %eax,%edi
81006a53:	8b 45 10             	mov    0x10(%ebp),%eax
81006a56:	8b 40 08             	mov    0x8(%eax),%eax
81006a59:	89 f2                	mov    %esi,%edx
81006a5b:	29 d0                	sub    %edx,%eax
81006a5d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006a60:	89 41 08             	mov    %eax,0x8(%ecx)
81006a63:	8b 45 10             	mov    0x10(%ebp),%eax
81006a66:	8b 40 08             	mov    0x8(%eax),%eax
81006a69:	85 c0                	test   %eax,%eax
81006a6b:	0f 85 d4 fd ff ff    	jne    81006845 <__sfvwrite_r+0xfb>
81006a71:	e9 4c 01 00 00       	jmp    81006bc2 <__sfvwrite_r+0x478>
81006a76:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006a7d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006a84:	eb 18                	jmp    81006a9e <__sfvwrite_r+0x354>
81006a86:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006a8d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006a90:	8b 08                	mov    (%eax),%ecx
81006a92:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006a95:	8b 78 04             	mov    0x4(%eax),%edi
81006a98:	83 c0 08             	add    $0x8,%eax
81006a9b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006a9e:	85 ff                	test   %edi,%edi
81006aa0:	74 e4                	je     81006a86 <__sfvwrite_r+0x33c>
81006aa2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006aa6:	75 32                	jne    81006ada <__sfvwrite_r+0x390>
81006aa8:	83 ec 04             	sub    $0x4,%esp
81006aab:	57                   	push   %edi
81006aac:	6a 0a                	push   $0xa
81006aae:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006ab1:	56                   	push   %esi
81006ab2:	e8 79 d8 ff ff       	call   81004330 <memchr>
81006ab7:	83 c4 10             	add    $0x10,%esp
81006aba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006abd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81006ac1:	74 0a                	je     81006acd <__sfvwrite_r+0x383>
81006ac3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006ac6:	83 c0 01             	add    $0x1,%eax
81006ac9:	29 f0                	sub    %esi,%eax
81006acb:	eb 03                	jmp    81006ad0 <__sfvwrite_r+0x386>
81006acd:	8d 47 01             	lea    0x1(%edi),%eax
81006ad0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006ad3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006ada:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006add:	39 c7                	cmp    %eax,%edi
81006adf:	0f 46 c7             	cmovbe %edi,%eax
81006ae2:	89 c1                	mov    %eax,%ecx
81006ae4:	8b 53 08             	mov    0x8(%ebx),%edx
81006ae7:	8b 43 14             	mov    0x14(%ebx),%eax
81006aea:	8d 34 02             	lea    (%edx,%eax,1),%esi
81006aed:	8b 13                	mov    (%ebx),%edx
81006aef:	8b 43 10             	mov    0x10(%ebx),%eax
81006af2:	39 c2                	cmp    %eax,%edx
81006af4:	76 38                	jbe    81006b2e <__sfvwrite_r+0x3e4>
81006af6:	39 f1                	cmp    %esi,%ecx
81006af8:	7e 34                	jle    81006b2e <__sfvwrite_r+0x3e4>
81006afa:	89 f2                	mov    %esi,%edx
81006afc:	8b 03                	mov    (%ebx),%eax
81006afe:	83 ec 04             	sub    $0x4,%esp
81006b01:	52                   	push   %edx
81006b02:	ff 75 c4             	push   -0x3c(%ebp)
81006b05:	50                   	push   %eax
81006b06:	e8 c5 04 00 00       	call   81006fd0 <memmove>
81006b0b:	83 c4 10             	add    $0x10,%esp
81006b0e:	8b 03                	mov    (%ebx),%eax
81006b10:	89 f2                	mov    %esi,%edx
81006b12:	01 d0                	add    %edx,%eax
81006b14:	89 03                	mov    %eax,(%ebx)
81006b16:	83 ec 08             	sub    $0x8,%esp
81006b19:	53                   	push   %ebx
81006b1a:	ff 75 08             	push   0x8(%ebp)
81006b1d:	e8 33 a7 ff ff       	call   81001255 <_fflush_r>
81006b22:	83 c4 10             	add    $0x10,%esp
81006b25:	85 c0                	test   %eax,%eax
81006b27:	74 4f                	je     81006b78 <__sfvwrite_r+0x42e>
81006b29:	e9 a2 00 00 00       	jmp    81006bd0 <__sfvwrite_r+0x486>
81006b2e:	8b 73 14             	mov    0x14(%ebx),%esi
81006b31:	89 c8                	mov    %ecx,%eax
81006b33:	39 c6                	cmp    %eax,%esi
81006b35:	7f 1b                	jg     81006b52 <__sfvwrite_r+0x408>
81006b37:	8b 53 24             	mov    0x24(%ebx),%edx
81006b3a:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006b3d:	56                   	push   %esi
81006b3e:	ff 75 c4             	push   -0x3c(%ebp)
81006b41:	50                   	push   %eax
81006b42:	ff 75 08             	push   0x8(%ebp)
81006b45:	ff d2                	call   *%edx
81006b47:	83 c4 10             	add    $0x10,%esp
81006b4a:	89 c6                	mov    %eax,%esi
81006b4c:	85 f6                	test   %esi,%esi
81006b4e:	7f 28                	jg     81006b78 <__sfvwrite_r+0x42e>
81006b50:	eb 7e                	jmp    81006bd0 <__sfvwrite_r+0x486>
81006b52:	89 ce                	mov    %ecx,%esi
81006b54:	89 f2                	mov    %esi,%edx
81006b56:	8b 03                	mov    (%ebx),%eax
81006b58:	83 ec 04             	sub    $0x4,%esp
81006b5b:	52                   	push   %edx
81006b5c:	ff 75 c4             	push   -0x3c(%ebp)
81006b5f:	50                   	push   %eax
81006b60:	e8 6b 04 00 00       	call   81006fd0 <memmove>
81006b65:	83 c4 10             	add    $0x10,%esp
81006b68:	8b 43 08             	mov    0x8(%ebx),%eax
81006b6b:	29 f0                	sub    %esi,%eax
81006b6d:	89 43 08             	mov    %eax,0x8(%ebx)
81006b70:	8b 03                	mov    (%ebx),%eax
81006b72:	89 f2                	mov    %esi,%edx
81006b74:	01 d0                	add    %edx,%eax
81006b76:	89 03                	mov    %eax,(%ebx)
81006b78:	29 75 e0             	sub    %esi,-0x20(%ebp)
81006b7b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81006b7f:	75 1a                	jne    81006b9b <__sfvwrite_r+0x451>
81006b81:	83 ec 08             	sub    $0x8,%esp
81006b84:	53                   	push   %ebx
81006b85:	ff 75 08             	push   0x8(%ebp)
81006b88:	e8 c8 a6 ff ff       	call   81001255 <_fflush_r>
81006b8d:	83 c4 10             	add    $0x10,%esp
81006b90:	85 c0                	test   %eax,%eax
81006b92:	75 3b                	jne    81006bcf <__sfvwrite_r+0x485>
81006b94:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006b9b:	89 f0                	mov    %esi,%eax
81006b9d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006ba0:	89 f0                	mov    %esi,%eax
81006ba2:	29 c7                	sub    %eax,%edi
81006ba4:	8b 45 10             	mov    0x10(%ebp),%eax
81006ba7:	8b 40 08             	mov    0x8(%eax),%eax
81006baa:	89 f2                	mov    %esi,%edx
81006bac:	29 d0                	sub    %edx,%eax
81006bae:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006bb1:	89 41 08             	mov    %eax,0x8(%ecx)
81006bb4:	8b 45 10             	mov    0x10(%ebp),%eax
81006bb7:	8b 40 08             	mov    0x8(%eax),%eax
81006bba:	85 c0                	test   %eax,%eax
81006bbc:	0f 85 dc fe ff ff    	jne    81006a9e <__sfvwrite_r+0x354>
81006bc2:	b8 00 00 00 00       	mov    $0x0,%eax
81006bc7:	eb 17                	jmp    81006be0 <__sfvwrite_r+0x496>
81006bc9:	90                   	nop
81006bca:	eb 04                	jmp    81006bd0 <__sfvwrite_r+0x486>
81006bcc:	90                   	nop
81006bcd:	eb 01                	jmp    81006bd0 <__sfvwrite_r+0x486>
81006bcf:	90                   	nop
81006bd0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006bd4:	83 c8 40             	or     $0x40,%eax
81006bd7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006bdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006be0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006be3:	5b                   	pop    %ebx
81006be4:	5e                   	pop    %esi
81006be5:	5f                   	pop    %edi
81006be6:	5d                   	pop    %ebp
81006be7:	c3                   	ret    

81006be8 <_getc_r>:
81006be8:	55                   	push   %ebp
81006be9:	89 e5                	mov    %esp,%ebp
81006beb:	53                   	push   %ebx
81006bec:	83 ec 14             	sub    $0x14,%esp
81006bef:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006bf2:	8b 45 08             	mov    0x8(%ebp),%eax
81006bf5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006bf8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006bfc:	74 18                	je     81006c16 <_getc_r+0x2e>
81006bfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c01:	8b 40 38             	mov    0x38(%eax),%eax
81006c04:	85 c0                	test   %eax,%eax
81006c06:	75 0e                	jne    81006c16 <_getc_r+0x2e>
81006c08:	83 ec 0c             	sub    $0xc,%esp
81006c0b:	ff 75 f4             	push   -0xc(%ebp)
81006c0e:	e8 45 ab ff ff       	call   81001758 <__sinit>
81006c13:	83 c4 10             	add    $0x10,%esp
81006c16:	8b 43 04             	mov    0x4(%ebx),%eax
81006c19:	83 e8 01             	sub    $0x1,%eax
81006c1c:	89 43 04             	mov    %eax,0x4(%ebx)
81006c1f:	8b 43 04             	mov    0x4(%ebx),%eax
81006c22:	85 c0                	test   %eax,%eax
81006c24:	79 11                	jns    81006c37 <_getc_r+0x4f>
81006c26:	83 ec 08             	sub    $0x8,%esp
81006c29:	53                   	push   %ebx
81006c2a:	ff 75 08             	push   0x8(%ebp)
81006c2d:	e8 72 15 00 00       	call   810081a4 <__srget_r>
81006c32:	83 c4 10             	add    $0x10,%esp
81006c35:	eb 0d                	jmp    81006c44 <_getc_r+0x5c>
81006c37:	8b 03                	mov    (%ebx),%eax
81006c39:	8d 50 01             	lea    0x1(%eax),%edx
81006c3c:	89 13                	mov    %edx,(%ebx)
81006c3e:	0f b6 00             	movzbl (%eax),%eax
81006c41:	0f b6 c0             	movzbl %al,%eax
81006c44:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c47:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c4a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006c4d:	c9                   	leave  
81006c4e:	c3                   	ret    

81006c4f <getc>:
81006c4f:	55                   	push   %ebp
81006c50:	89 e5                	mov    %esp,%ebp
81006c52:	53                   	push   %ebx
81006c53:	83 ec 14             	sub    $0x14,%esp
81006c56:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006c59:	a1 44 90 00 81       	mov    0x81009044,%eax
81006c5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c61:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c64:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c67:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006c6b:	74 18                	je     81006c85 <getc+0x36>
81006c6d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006c70:	8b 40 38             	mov    0x38(%eax),%eax
81006c73:	85 c0                	test   %eax,%eax
81006c75:	75 0e                	jne    81006c85 <getc+0x36>
81006c77:	83 ec 0c             	sub    $0xc,%esp
81006c7a:	ff 75 f0             	push   -0x10(%ebp)
81006c7d:	e8 d6 aa ff ff       	call   81001758 <__sinit>
81006c82:	83 c4 10             	add    $0x10,%esp
81006c85:	8b 43 04             	mov    0x4(%ebx),%eax
81006c88:	83 e8 01             	sub    $0x1,%eax
81006c8b:	89 43 04             	mov    %eax,0x4(%ebx)
81006c8e:	8b 43 04             	mov    0x4(%ebx),%eax
81006c91:	85 c0                	test   %eax,%eax
81006c93:	79 11                	jns    81006ca6 <getc+0x57>
81006c95:	83 ec 08             	sub    $0x8,%esp
81006c98:	53                   	push   %ebx
81006c99:	ff 75 f4             	push   -0xc(%ebp)
81006c9c:	e8 03 15 00 00       	call   810081a4 <__srget_r>
81006ca1:	83 c4 10             	add    $0x10,%esp
81006ca4:	eb 0d                	jmp    81006cb3 <getc+0x64>
81006ca6:	8b 03                	mov    (%ebx),%eax
81006ca8:	8d 50 01             	lea    0x1(%eax),%edx
81006cab:	89 13                	mov    %edx,(%ebx)
81006cad:	0f b6 00             	movzbl (%eax),%eax
81006cb0:	0f b6 c0             	movzbl %al,%eax
81006cb3:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006cb6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006cb9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006cbc:	c9                   	leave  
81006cbd:	c3                   	ret    

81006cbe <_findenv>:
81006cbe:	55                   	push   %ebp
81006cbf:	89 e5                	mov    %esp,%ebp
81006cc1:	83 ec 08             	sub    $0x8,%esp
81006cc4:	8b 55 08             	mov    0x8(%ebp),%edx
81006cc7:	a1 44 90 00 81       	mov    0x81009044,%eax
81006ccc:	83 ec 04             	sub    $0x4,%esp
81006ccf:	ff 75 0c             	push   0xc(%ebp)
81006cd2:	52                   	push   %edx
81006cd3:	50                   	push   %eax
81006cd4:	e8 25 00 00 00       	call   81006cfe <_findenv_r>
81006cd9:	83 c4 10             	add    $0x10,%esp
81006cdc:	c9                   	leave  
81006cdd:	c3                   	ret    

81006cde <getenv>:
81006cde:	55                   	push   %ebp
81006cdf:	89 e5                	mov    %esp,%ebp
81006ce1:	83 ec 18             	sub    $0x18,%esp
81006ce4:	a1 44 90 00 81       	mov    0x81009044,%eax
81006ce9:	83 ec 04             	sub    $0x4,%esp
81006cec:	8d 55 f4             	lea    -0xc(%ebp),%edx
81006cef:	52                   	push   %edx
81006cf0:	ff 75 08             	push   0x8(%ebp)
81006cf3:	50                   	push   %eax
81006cf4:	e8 05 00 00 00       	call   81006cfe <_findenv_r>
81006cf9:	83 c4 10             	add    $0x10,%esp
81006cfc:	c9                   	leave  
81006cfd:	c3                   	ret    

81006cfe <_findenv_r>:
81006cfe:	55                   	push   %ebp
81006cff:	89 e5                	mov    %esp,%ebp
81006d01:	57                   	push   %edi
81006d02:	56                   	push   %esi
81006d03:	53                   	push   %ebx
81006d04:	83 ec 1c             	sub    $0x1c,%esp
81006d07:	8b 7d 0c             	mov    0xc(%ebp),%edi
81006d0a:	83 ec 0c             	sub    $0xc,%esp
81006d0d:	ff 75 08             	push   0x8(%ebp)
81006d10:	e8 77 17 00 00       	call   8100848c <__env_lock>
81006d15:	83 c4 10             	add    $0x10,%esp
81006d18:	a1 70 94 00 81       	mov    0x81009470,%eax
81006d1d:	8b 00                	mov    (%eax),%eax
81006d1f:	85 c0                	test   %eax,%eax
81006d21:	75 18                	jne    81006d3b <_findenv_r+0x3d>
81006d23:	83 ec 0c             	sub    $0xc,%esp
81006d26:	ff 75 08             	push   0x8(%ebp)
81006d29:	e8 64 17 00 00       	call   81008492 <__env_unlock>
81006d2e:	83 c4 10             	add    $0x10,%esp
81006d31:	b8 00 00 00 00       	mov    $0x0,%eax
81006d36:	e9 a8 00 00 00       	jmp    81006de3 <_findenv_r+0xe5>
81006d3b:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81006d3e:	eb 04                	jmp    81006d44 <_findenv_r+0x46>
81006d40:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006d44:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d47:	0f b6 00             	movzbl (%eax),%eax
81006d4a:	84 c0                	test   %al,%al
81006d4c:	74 0a                	je     81006d58 <_findenv_r+0x5a>
81006d4e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d51:	0f b6 00             	movzbl (%eax),%eax
81006d54:	3c 3d                	cmp    $0x3d,%al
81006d56:	75 e8                	jne    81006d40 <_findenv_r+0x42>
81006d58:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d5b:	0f b6 00             	movzbl (%eax),%eax
81006d5e:	3c 3d                	cmp    $0x3d,%al
81006d60:	74 6e                	je     81006dd0 <_findenv_r+0xd2>
81006d62:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d65:	29 f8                	sub    %edi,%eax
81006d67:	89 c6                	mov    %eax,%esi
81006d69:	a1 70 94 00 81       	mov    0x81009470,%eax
81006d6e:	8b 18                	mov    (%eax),%ebx
81006d70:	eb 58                	jmp    81006dca <_findenv_r+0xcc>
81006d72:	89 f2                	mov    %esi,%edx
81006d74:	8b 03                	mov    (%ebx),%eax
81006d76:	83 ec 04             	sub    $0x4,%esp
81006d79:	52                   	push   %edx
81006d7a:	57                   	push   %edi
81006d7b:	50                   	push   %eax
81006d7c:	e8 a3 14 00 00       	call   81008224 <strncmp>
81006d81:	83 c4 10             	add    $0x10,%esp
81006d84:	85 c0                	test   %eax,%eax
81006d86:	75 3f                	jne    81006dc7 <_findenv_r+0xc9>
81006d88:	8b 03                	mov    (%ebx),%eax
81006d8a:	89 f2                	mov    %esi,%edx
81006d8c:	01 d0                	add    %edx,%eax
81006d8e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006d91:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006d94:	0f b6 00             	movzbl (%eax),%eax
81006d97:	3c 3d                	cmp    $0x3d,%al
81006d99:	75 2c                	jne    81006dc7 <_findenv_r+0xc9>
81006d9b:	a1 70 94 00 81       	mov    0x81009470,%eax
81006da0:	8b 10                	mov    (%eax),%edx
81006da2:	89 d8                	mov    %ebx,%eax
81006da4:	29 d0                	sub    %edx,%eax
81006da6:	c1 f8 02             	sar    $0x2,%eax
81006da9:	89 c2                	mov    %eax,%edx
81006dab:	8b 45 10             	mov    0x10(%ebp),%eax
81006dae:	89 10                	mov    %edx,(%eax)
81006db0:	83 ec 0c             	sub    $0xc,%esp
81006db3:	ff 75 08             	push   0x8(%ebp)
81006db6:	e8 d7 16 00 00       	call   81008492 <__env_unlock>
81006dbb:	83 c4 10             	add    $0x10,%esp
81006dbe:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006dc2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006dc5:	eb 1c                	jmp    81006de3 <_findenv_r+0xe5>
81006dc7:	83 c3 04             	add    $0x4,%ebx
81006dca:	8b 03                	mov    (%ebx),%eax
81006dcc:	85 c0                	test   %eax,%eax
81006dce:	75 a2                	jne    81006d72 <_findenv_r+0x74>
81006dd0:	83 ec 0c             	sub    $0xc,%esp
81006dd3:	ff 75 08             	push   0x8(%ebp)
81006dd6:	e8 b7 16 00 00       	call   81008492 <__env_unlock>
81006ddb:	83 c4 10             	add    $0x10,%esp
81006dde:	b8 00 00 00 00       	mov    $0x0,%eax
81006de3:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006de6:	5b                   	pop    %ebx
81006de7:	5e                   	pop    %esi
81006de8:	5f                   	pop    %edi
81006de9:	5d                   	pop    %ebp
81006dea:	c3                   	ret    

81006deb <_getenv_r>:
81006deb:	55                   	push   %ebp
81006dec:	89 e5                	mov    %esp,%ebp
81006dee:	83 ec 18             	sub    $0x18,%esp
81006df1:	83 ec 04             	sub    $0x4,%esp
81006df4:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006df7:	50                   	push   %eax
81006df8:	ff 75 0c             	push   0xc(%ebp)
81006dfb:	ff 75 08             	push   0x8(%ebp)
81006dfe:	e8 fb fe ff ff       	call   81006cfe <_findenv_r>
81006e03:	83 c4 10             	add    $0x10,%esp
81006e06:	c9                   	leave  
81006e07:	c3                   	ret    

81006e08 <_isatty_r>:
81006e08:	55                   	push   %ebp
81006e09:	89 e5                	mov    %esp,%ebp
81006e0b:	83 ec 18             	sub    $0x18,%esp
81006e0e:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
81006e15:	00 00 00 
81006e18:	83 ec 0c             	sub    $0xc,%esp
81006e1b:	ff 75 0c             	push   0xc(%ebp)
81006e1e:	e8 8d 9e ff ff       	call   81000cb0 <isatty>
81006e23:	83 c4 10             	add    $0x10,%esp
81006e26:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006e29:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006e2d:	75 14                	jne    81006e43 <_isatty_r+0x3b>
81006e2f:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
81006e34:	85 c0                	test   %eax,%eax
81006e36:	74 0b                	je     81006e43 <_isatty_r+0x3b>
81006e38:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
81006e3e:	8b 45 08             	mov    0x8(%ebp),%eax
81006e41:	89 10                	mov    %edx,(%eax)
81006e43:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006e46:	c9                   	leave  
81006e47:	c3                   	ret    

81006e48 <__get_global_locale>:
81006e48:	55                   	push   %ebp
81006e49:	89 e5                	mov    %esp,%ebp
81006e4b:	b8 80 94 00 81       	mov    $0x81009480,%eax
81006e50:	5d                   	pop    %ebp
81006e51:	c3                   	ret    

81006e52 <__get_current_locale>:
81006e52:	55                   	push   %ebp
81006e53:	89 e5                	mov    %esp,%ebp
81006e55:	e8 ee ff ff ff       	call   81006e48 <__get_global_locale>
81006e5a:	5d                   	pop    %ebp
81006e5b:	c3                   	ret    

81006e5c <_setlocale_r>:
81006e5c:	55                   	push   %ebp
81006e5d:	89 e5                	mov    %esp,%ebp
81006e5f:	83 ec 08             	sub    $0x8,%esp
81006e62:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006e66:	74 4c                	je     81006eb4 <_setlocale_r+0x58>
81006e68:	83 ec 08             	sub    $0x8,%esp
81006e6b:	68 e4 8b 00 81       	push   $0x81008be4
81006e70:	ff 75 10             	push   0x10(%ebp)
81006e73:	e8 44 ec ff ff       	call   81005abc <strcmp>
81006e78:	83 c4 10             	add    $0x10,%esp
81006e7b:	85 c0                	test   %eax,%eax
81006e7d:	74 35                	je     81006eb4 <_setlocale_r+0x58>
81006e7f:	83 ec 08             	sub    $0x8,%esp
81006e82:	68 ea 8b 00 81       	push   $0x81008bea
81006e87:	ff 75 10             	push   0x10(%ebp)
81006e8a:	e8 2d ec ff ff       	call   81005abc <strcmp>
81006e8f:	83 c4 10             	add    $0x10,%esp
81006e92:	85 c0                	test   %eax,%eax
81006e94:	74 1e                	je     81006eb4 <_setlocale_r+0x58>
81006e96:	83 ec 08             	sub    $0x8,%esp
81006e99:	68 e3 8b 00 81       	push   $0x81008be3
81006e9e:	ff 75 10             	push   0x10(%ebp)
81006ea1:	e8 16 ec ff ff       	call   81005abc <strcmp>
81006ea6:	83 c4 10             	add    $0x10,%esp
81006ea9:	85 c0                	test   %eax,%eax
81006eab:	74 07                	je     81006eb4 <_setlocale_r+0x58>
81006ead:	b8 00 00 00 00       	mov    $0x0,%eax
81006eb2:	eb 05                	jmp    81006eb9 <_setlocale_r+0x5d>
81006eb4:	b8 ea 8b 00 81       	mov    $0x81008bea,%eax
81006eb9:	c9                   	leave  
81006eba:	c3                   	ret    

81006ebb <__locale_mb_cur_max>:
81006ebb:	55                   	push   %ebp
81006ebc:	89 e5                	mov    %esp,%ebp
81006ebe:	e8 8f ff ff ff       	call   81006e52 <__get_current_locale>
81006ec3:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81006eca:	0f be c0             	movsbl %al,%eax
81006ecd:	5d                   	pop    %ebp
81006ece:	c3                   	ret    

81006ecf <setlocale>:
81006ecf:	55                   	push   %ebp
81006ed0:	89 e5                	mov    %esp,%ebp
81006ed2:	83 ec 08             	sub    $0x8,%esp
81006ed5:	a1 44 90 00 81       	mov    0x81009044,%eax
81006eda:	83 ec 04             	sub    $0x4,%esp
81006edd:	ff 75 0c             	push   0xc(%ebp)
81006ee0:	ff 75 08             	push   0x8(%ebp)
81006ee3:	50                   	push   %eax
81006ee4:	e8 73 ff ff ff       	call   81006e5c <_setlocale_r>
81006ee9:	83 c4 10             	add    $0x10,%esp
81006eec:	c9                   	leave  
81006eed:	c3                   	ret    

81006eee <_lseek_r>:
81006eee:	55                   	push   %ebp
81006eef:	89 e5                	mov    %esp,%ebp
81006ef1:	83 ec 18             	sub    $0x18,%esp
81006ef4:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
81006efb:	00 00 00 
81006efe:	83 ec 04             	sub    $0x4,%esp
81006f01:	ff 75 14             	push   0x14(%ebp)
81006f04:	ff 75 10             	push   0x10(%ebp)
81006f07:	ff 75 0c             	push   0xc(%ebp)
81006f0a:	e8 74 9d ff ff       	call   81000c83 <lseek>
81006f0f:	83 c4 10             	add    $0x10,%esp
81006f12:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006f15:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006f19:	75 14                	jne    81006f2f <_lseek_r+0x41>
81006f1b:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
81006f20:	85 c0                	test   %eax,%eax
81006f22:	74 0b                	je     81006f2f <_lseek_r+0x41>
81006f24:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
81006f2a:	8b 45 08             	mov    0x8(%ebp),%eax
81006f2d:	89 10                	mov    %edx,(%eax)
81006f2f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006f32:	c9                   	leave  
81006f33:	c3                   	ret    

81006f34 <__get_global_locale>:
81006f34:	55                   	push   %ebp
81006f35:	89 e5                	mov    %esp,%ebp
81006f37:	b8 80 94 00 81       	mov    $0x81009480,%eax
81006f3c:	5d                   	pop    %ebp
81006f3d:	c3                   	ret    

81006f3e <__get_current_locale>:
81006f3e:	55                   	push   %ebp
81006f3f:	89 e5                	mov    %esp,%ebp
81006f41:	e8 ee ff ff ff       	call   81006f34 <__get_global_locale>
81006f46:	5d                   	pop    %ebp
81006f47:	c3                   	ret    

81006f48 <_mbtowc_r>:
81006f48:	55                   	push   %ebp
81006f49:	89 e5                	mov    %esp,%ebp
81006f4b:	83 ec 08             	sub    $0x8,%esp
81006f4e:	e8 eb ff ff ff       	call   81006f3e <__get_current_locale>
81006f53:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81006f59:	83 ec 0c             	sub    $0xc,%esp
81006f5c:	ff 75 18             	push   0x18(%ebp)
81006f5f:	ff 75 14             	push   0x14(%ebp)
81006f62:	ff 75 10             	push   0x10(%ebp)
81006f65:	ff 75 0c             	push   0xc(%ebp)
81006f68:	ff 75 08             	push   0x8(%ebp)
81006f6b:	ff d0                	call   *%eax
81006f6d:	83 c4 20             	add    $0x20,%esp
81006f70:	c9                   	leave  
81006f71:	c3                   	ret    

81006f72 <__ascii_mbtowc>:
81006f72:	55                   	push   %ebp
81006f73:	89 e5                	mov    %esp,%ebp
81006f75:	83 ec 10             	sub    $0x10,%esp
81006f78:	8b 45 10             	mov    0x10(%ebp),%eax
81006f7b:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006f7e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006f82:	75 06                	jne    81006f8a <__ascii_mbtowc+0x18>
81006f84:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006f87:	89 45 0c             	mov    %eax,0xc(%ebp)
81006f8a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f8e:	75 07                	jne    81006f97 <__ascii_mbtowc+0x25>
81006f90:	b8 00 00 00 00       	mov    $0x0,%eax
81006f95:	eb 31                	jmp    81006fc8 <__ascii_mbtowc+0x56>
81006f97:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006f9b:	75 07                	jne    81006fa4 <__ascii_mbtowc+0x32>
81006f9d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006fa2:	eb 24                	jmp    81006fc8 <__ascii_mbtowc+0x56>
81006fa4:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006fa7:	0f b6 00             	movzbl (%eax),%eax
81006faa:	0f b6 d0             	movzbl %al,%edx
81006fad:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fb0:	89 10                	mov    %edx,(%eax)
81006fb2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006fb5:	0f b6 00             	movzbl (%eax),%eax
81006fb8:	84 c0                	test   %al,%al
81006fba:	75 07                	jne    81006fc3 <__ascii_mbtowc+0x51>
81006fbc:	b8 00 00 00 00       	mov    $0x0,%eax
81006fc1:	eb 05                	jmp    81006fc8 <__ascii_mbtowc+0x56>
81006fc3:	b8 01 00 00 00       	mov    $0x1,%eax
81006fc8:	c9                   	leave  
81006fc9:	c3                   	ret    
81006fca:	66 90                	xchg   %ax,%ax
81006fcc:	66 90                	xchg   %ax,%ax
81006fce:	66 90                	xchg   %ax,%ax

81006fd0 <memmove>:
81006fd0:	55                   	push   %ebp
81006fd1:	89 e5                	mov    %esp,%ebp
81006fd3:	56                   	push   %esi
81006fd4:	57                   	push   %edi
81006fd5:	53                   	push   %ebx
81006fd6:	8b 7d 08             	mov    0x8(%ebp),%edi
81006fd9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006fdc:	8b 75 0c             	mov    0xc(%ebp),%esi
81006fdf:	fc                   	cld    
81006fe0:	39 fe                	cmp    %edi,%esi
81006fe2:	73 43                	jae    81007027 <memmove+0x57>
81006fe4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81006fe8:	39 df                	cmp    %ebx,%edi
81006fea:	77 3b                	ja     81007027 <memmove+0x57>
81006fec:	01 ce                	add    %ecx,%esi
81006fee:	01 cf                	add    %ecx,%edi
81006ff0:	fd                   	std    
81006ff1:	83 f9 08             	cmp    $0x8,%ecx
81006ff4:	76 2b                	jbe    81007021 <memmove+0x51>
81006ff6:	89 fa                	mov    %edi,%edx
81006ff8:	89 cb                	mov    %ecx,%ebx
81006ffa:	83 e2 03             	and    $0x3,%edx
81006ffd:	74 0c                	je     8100700b <memmove+0x3b>
81006fff:	89 d1                	mov    %edx,%ecx
81007001:	4e                   	dec    %esi
81007002:	4f                   	dec    %edi
81007003:	29 cb                	sub    %ecx,%ebx
81007005:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81007007:	89 d9                	mov    %ebx,%ecx
81007009:	46                   	inc    %esi
8100700a:	47                   	inc    %edi
8100700b:	c1 e9 02             	shr    $0x2,%ecx
8100700e:	83 ee 04             	sub    $0x4,%esi
81007011:	83 ef 04             	sub    $0x4,%edi
81007014:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81007016:	83 c6 04             	add    $0x4,%esi
81007019:	83 c7 04             	add    $0x4,%edi
8100701c:	89 d9                	mov    %ebx,%ecx
8100701e:	83 e1 03             	and    $0x3,%ecx
81007021:	4e                   	dec    %esi
81007022:	4f                   	dec    %edi
81007023:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81007025:	eb 2a                	jmp    81007051 <memmove+0x81>
81007027:	83 f9 08             	cmp    $0x8,%ecx
8100702a:	76 23                	jbe    8100704f <memmove+0x7f>
8100702c:	89 fa                	mov    %edi,%edx
8100702e:	89 cb                	mov    %ecx,%ebx
81007030:	83 e2 03             	and    $0x3,%edx
81007033:	74 10                	je     81007045 <memmove+0x75>
81007035:	b9 04 00 00 00       	mov    $0x4,%ecx
8100703a:	29 d1                	sub    %edx,%ecx
8100703c:	83 e1 03             	and    $0x3,%ecx
8100703f:	29 cb                	sub    %ecx,%ebx
81007041:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81007043:	89 d9                	mov    %ebx,%ecx
81007045:	c1 e9 02             	shr    $0x2,%ecx
81007048:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100704a:	89 d9                	mov    %ebx,%ecx
8100704c:	83 e1 03             	and    $0x3,%ecx
8100704f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81007051:	8b 45 08             	mov    0x8(%ebp),%eax
81007054:	fc                   	cld    
81007055:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007058:	5b                   	pop    %ebx
81007059:	5f                   	pop    %edi
8100705a:	5e                   	pop    %esi
8100705b:	c9                   	leave  
8100705c:	c3                   	ret    

8100705d <__ssputs_r>:
8100705d:	55                   	push   %ebp
8100705e:	89 e5                	mov    %esp,%ebp
81007060:	53                   	push   %ebx
81007061:	83 ec 14             	sub    $0x14,%esp
81007064:	8b 45 0c             	mov    0xc(%ebp),%eax
81007067:	8b 58 08             	mov    0x8(%eax),%ebx
8100706a:	89 d8                	mov    %ebx,%eax
8100706c:	39 45 14             	cmp    %eax,0x14(%ebp)
8100706f:	0f 82 3c 01 00 00    	jb     810071b1 <__ssputs_r+0x154>
81007075:	8b 45 0c             	mov    0xc(%ebp),%eax
81007078:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100707c:	98                   	cwtl   
8100707d:	25 80 04 00 00       	and    $0x480,%eax
81007082:	85 c0                	test   %eax,%eax
81007084:	0f 84 27 01 00 00    	je     810071b1 <__ssputs_r+0x154>
8100708a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100708d:	8b 10                	mov    (%eax),%edx
8100708f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007092:	8b 48 10             	mov    0x10(%eax),%ecx
81007095:	89 d0                	mov    %edx,%eax
81007097:	29 c8                	sub    %ecx,%eax
81007099:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100709c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100709f:	8b 50 14             	mov    0x14(%eax),%edx
810070a2:	89 d0                	mov    %edx,%eax
810070a4:	01 c0                	add    %eax,%eax
810070a6:	01 d0                	add    %edx,%eax
810070a8:	89 c2                	mov    %eax,%edx
810070aa:	c1 ea 1f             	shr    $0x1f,%edx
810070ad:	01 d0                	add    %edx,%eax
810070af:	d1 f8                	sar    %eax
810070b1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070b4:	8b 55 ec             	mov    -0x14(%ebp),%edx
810070b7:	8b 45 14             	mov    0x14(%ebp),%eax
810070ba:	01 d0                	add    %edx,%eax
810070bc:	8d 50 01             	lea    0x1(%eax),%edx
810070bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810070c2:	39 c2                	cmp    %eax,%edx
810070c4:	76 0e                	jbe    810070d4 <__ssputs_r+0x77>
810070c6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810070c9:	8b 45 14             	mov    0x14(%ebp),%eax
810070cc:	01 d0                	add    %edx,%eax
810070ce:	83 c0 01             	add    $0x1,%eax
810070d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810070d4:	8b 45 0c             	mov    0xc(%ebp),%eax
810070d7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810070db:	98                   	cwtl   
810070dc:	25 00 04 00 00       	and    $0x400,%eax
810070e1:	85 c0                	test   %eax,%eax
810070e3:	74 5a                	je     8100713f <__ssputs_r+0xe2>
810070e5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810070e8:	83 ec 08             	sub    $0x8,%esp
810070eb:	50                   	push   %eax
810070ec:	ff 75 08             	push   0x8(%ebp)
810070ef:	e8 17 ca ff ff       	call   81003b0b <_malloc_r>
810070f4:	83 c4 10             	add    $0x10,%esp
810070f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810070fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810070fe:	75 0e                	jne    8100710e <__ssputs_r+0xb1>
81007100:	8b 45 08             	mov    0x8(%ebp),%eax
81007103:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007109:	e9 e9 00 00 00       	jmp    810071f7 <__ssputs_r+0x19a>
8100710e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007111:	8b 45 0c             	mov    0xc(%ebp),%eax
81007114:	8b 40 10             	mov    0x10(%eax),%eax
81007117:	83 ec 04             	sub    $0x4,%esp
8100711a:	52                   	push   %edx
8100711b:	50                   	push   %eax
8100711c:	ff 75 f4             	push   -0xc(%ebp)
8100711f:	e8 f4 d2 ff ff       	call   81004418 <memcpy>
81007124:	83 c4 10             	add    $0x10,%esp
81007127:	8b 45 0c             	mov    0xc(%ebp),%eax
8100712a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100712e:	66 25 7f fb          	and    $0xfb7f,%ax
81007132:	0c 80                	or     $0x80,%al
81007134:	89 c2                	mov    %eax,%edx
81007136:	8b 45 0c             	mov    0xc(%ebp),%eax
81007139:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100713d:	eb 42                	jmp    81007181 <__ssputs_r+0x124>
8100713f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007142:	8b 45 0c             	mov    0xc(%ebp),%eax
81007145:	8b 40 10             	mov    0x10(%eax),%eax
81007148:	83 ec 04             	sub    $0x4,%esp
8100714b:	52                   	push   %edx
8100714c:	50                   	push   %eax
8100714d:	ff 75 08             	push   0x8(%ebp)
81007150:	e8 75 07 00 00       	call   810078ca <_realloc_r>
81007155:	83 c4 10             	add    $0x10,%esp
81007158:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100715b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100715f:	75 20                	jne    81007181 <__ssputs_r+0x124>
81007161:	8b 45 0c             	mov    0xc(%ebp),%eax
81007164:	8b 40 10             	mov    0x10(%eax),%eax
81007167:	83 ec 08             	sub    $0x8,%esp
8100716a:	50                   	push   %eax
8100716b:	ff 75 08             	push   0x8(%ebp)
8100716e:	e8 d5 aa ff ff       	call   81001c48 <_free_r>
81007173:	83 c4 10             	add    $0x10,%esp
81007176:	8b 45 08             	mov    0x8(%ebp),%eax
81007179:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100717f:	eb 76                	jmp    810071f7 <__ssputs_r+0x19a>
81007181:	8b 45 0c             	mov    0xc(%ebp),%eax
81007184:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007187:	89 50 10             	mov    %edx,0x10(%eax)
8100718a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100718d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007190:	01 c2                	add    %eax,%edx
81007192:	8b 45 0c             	mov    0xc(%ebp),%eax
81007195:	89 10                	mov    %edx,(%eax)
81007197:	8b 45 0c             	mov    0xc(%ebp),%eax
8100719a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100719d:	89 50 14             	mov    %edx,0x14(%eax)
810071a0:	8b 5d 14             	mov    0x14(%ebp),%ebx
810071a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810071a6:	2b 45 ec             	sub    -0x14(%ebp),%eax
810071a9:	89 c2                	mov    %eax,%edx
810071ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810071ae:	89 50 08             	mov    %edx,0x8(%eax)
810071b1:	89 d8                	mov    %ebx,%eax
810071b3:	39 45 14             	cmp    %eax,0x14(%ebp)
810071b6:	73 03                	jae    810071bb <__ssputs_r+0x15e>
810071b8:	8b 5d 14             	mov    0x14(%ebp),%ebx
810071bb:	89 da                	mov    %ebx,%edx
810071bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810071c0:	8b 00                	mov    (%eax),%eax
810071c2:	83 ec 04             	sub    $0x4,%esp
810071c5:	52                   	push   %edx
810071c6:	ff 75 10             	push   0x10(%ebp)
810071c9:	50                   	push   %eax
810071ca:	e8 01 fe ff ff       	call   81006fd0 <memmove>
810071cf:	83 c4 10             	add    $0x10,%esp
810071d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810071d5:	8b 40 08             	mov    0x8(%eax),%eax
810071d8:	29 d8                	sub    %ebx,%eax
810071da:	89 c2                	mov    %eax,%edx
810071dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810071df:	89 50 08             	mov    %edx,0x8(%eax)
810071e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810071e5:	8b 00                	mov    (%eax),%eax
810071e7:	89 da                	mov    %ebx,%edx
810071e9:	01 c2                	add    %eax,%edx
810071eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810071ee:	89 10                	mov    %edx,(%eax)
810071f0:	b8 00 00 00 00       	mov    $0x0,%eax
810071f5:	eb 18                	jmp    8100720f <__ssputs_r+0x1b2>
810071f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810071fa:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810071fe:	83 c8 40             	or     $0x40,%eax
81007201:	89 c2                	mov    %eax,%edx
81007203:	8b 45 0c             	mov    0xc(%ebp),%eax
81007206:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100720a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100720f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007212:	c9                   	leave  
81007213:	c3                   	ret    

81007214 <__ssprint_r>:
81007214:	55                   	push   %ebp
81007215:	89 e5                	mov    %esp,%ebp
81007217:	57                   	push   %edi
81007218:	56                   	push   %esi
81007219:	53                   	push   %ebx
8100721a:	83 ec 2c             	sub    $0x2c,%esp
8100721d:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007220:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007227:	8b 03                	mov    (%ebx),%eax
81007229:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100722c:	be 00 00 00 00       	mov    $0x0,%esi
81007231:	8b 43 08             	mov    0x8(%ebx),%eax
81007234:	85 c0                	test   %eax,%eax
81007236:	75 22                	jne    8100725a <__ssprint_r+0x46>
81007238:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100723f:	b8 00 00 00 00       	mov    $0x0,%eax
81007244:	e9 f5 01 00 00       	jmp    8100743e <__ssprint_r+0x22a>
81007249:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100724c:	8b 08                	mov    (%eax),%ecx
8100724e:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007251:	8b 70 04             	mov    0x4(%eax),%esi
81007254:	83 c0 08             	add    $0x8,%eax
81007257:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100725a:	85 f6                	test   %esi,%esi
8100725c:	74 eb                	je     81007249 <__ssprint_r+0x35>
8100725e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007261:	8b 78 08             	mov    0x8(%eax),%edi
81007264:	89 f8                	mov    %edi,%eax
81007266:	39 c6                	cmp    %eax,%esi
81007268:	0f 82 38 01 00 00    	jb     810073a6 <__ssprint_r+0x192>
8100726e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007271:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007275:	98                   	cwtl   
81007276:	25 80 04 00 00       	and    $0x480,%eax
8100727b:	85 c0                	test   %eax,%eax
8100727d:	0f 84 23 01 00 00    	je     810073a6 <__ssprint_r+0x192>
81007283:	8b 45 0c             	mov    0xc(%ebp),%eax
81007286:	8b 10                	mov    (%eax),%edx
81007288:	8b 45 0c             	mov    0xc(%ebp),%eax
8100728b:	8b 48 10             	mov    0x10(%eax),%ecx
8100728e:	89 d0                	mov    %edx,%eax
81007290:	29 c8                	sub    %ecx,%eax
81007292:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007295:	8b 45 0c             	mov    0xc(%ebp),%eax
81007298:	8b 50 14             	mov    0x14(%eax),%edx
8100729b:	89 d0                	mov    %edx,%eax
8100729d:	01 c0                	add    %eax,%eax
8100729f:	01 d0                	add    %edx,%eax
810072a1:	89 c2                	mov    %eax,%edx
810072a3:	c1 ea 1f             	shr    $0x1f,%edx
810072a6:	01 d0                	add    %edx,%eax
810072a8:	d1 f8                	sar    %eax
810072aa:	89 45 e0             	mov    %eax,-0x20(%ebp)
810072ad:	8b 45 dc             	mov    -0x24(%ebp),%eax
810072b0:	01 f0                	add    %esi,%eax
810072b2:	8d 50 01             	lea    0x1(%eax),%edx
810072b5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810072b8:	39 c2                	cmp    %eax,%edx
810072ba:	76 0b                	jbe    810072c7 <__ssprint_r+0xb3>
810072bc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810072bf:	01 f0                	add    %esi,%eax
810072c1:	83 c0 01             	add    $0x1,%eax
810072c4:	89 45 e0             	mov    %eax,-0x20(%ebp)
810072c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810072ca:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810072ce:	98                   	cwtl   
810072cf:	25 00 04 00 00       	and    $0x400,%eax
810072d4:	85 c0                	test   %eax,%eax
810072d6:	74 5a                	je     81007332 <__ssprint_r+0x11e>
810072d8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810072db:	83 ec 08             	sub    $0x8,%esp
810072de:	50                   	push   %eax
810072df:	ff 75 08             	push   0x8(%ebp)
810072e2:	e8 24 c8 ff ff       	call   81003b0b <_malloc_r>
810072e7:	83 c4 10             	add    $0x10,%esp
810072ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810072ed:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810072f1:	75 0e                	jne    81007301 <__ssprint_r+0xed>
810072f3:	8b 45 08             	mov    0x8(%ebp),%eax
810072f6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810072fc:	e9 17 01 00 00       	jmp    81007418 <__ssprint_r+0x204>
81007301:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007304:	8b 45 0c             	mov    0xc(%ebp),%eax
81007307:	8b 40 10             	mov    0x10(%eax),%eax
8100730a:	83 ec 04             	sub    $0x4,%esp
8100730d:	52                   	push   %edx
8100730e:	50                   	push   %eax
8100730f:	ff 75 e4             	push   -0x1c(%ebp)
81007312:	e8 01 d1 ff ff       	call   81004418 <memcpy>
81007317:	83 c4 10             	add    $0x10,%esp
8100731a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100731d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007321:	66 25 7f fb          	and    $0xfb7f,%ax
81007325:	0c 80                	or     $0x80,%al
81007327:	89 c2                	mov    %eax,%edx
81007329:	8b 45 0c             	mov    0xc(%ebp),%eax
8100732c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007330:	eb 45                	jmp    81007377 <__ssprint_r+0x163>
81007332:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007335:	8b 45 0c             	mov    0xc(%ebp),%eax
81007338:	8b 40 10             	mov    0x10(%eax),%eax
8100733b:	83 ec 04             	sub    $0x4,%esp
8100733e:	52                   	push   %edx
8100733f:	50                   	push   %eax
81007340:	ff 75 08             	push   0x8(%ebp)
81007343:	e8 82 05 00 00       	call   810078ca <_realloc_r>
81007348:	83 c4 10             	add    $0x10,%esp
8100734b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100734e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007352:	75 23                	jne    81007377 <__ssprint_r+0x163>
81007354:	8b 45 0c             	mov    0xc(%ebp),%eax
81007357:	8b 40 10             	mov    0x10(%eax),%eax
8100735a:	83 ec 08             	sub    $0x8,%esp
8100735d:	50                   	push   %eax
8100735e:	ff 75 08             	push   0x8(%ebp)
81007361:	e8 e2 a8 ff ff       	call   81001c48 <_free_r>
81007366:	83 c4 10             	add    $0x10,%esp
81007369:	8b 45 08             	mov    0x8(%ebp),%eax
8100736c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007372:	e9 a1 00 00 00       	jmp    81007418 <__ssprint_r+0x204>
81007377:	8b 45 0c             	mov    0xc(%ebp),%eax
8100737a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100737d:	89 50 10             	mov    %edx,0x10(%eax)
81007380:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007383:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007386:	01 c2                	add    %eax,%edx
81007388:	8b 45 0c             	mov    0xc(%ebp),%eax
8100738b:	89 10                	mov    %edx,(%eax)
8100738d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007390:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007393:	89 50 14             	mov    %edx,0x14(%eax)
81007396:	89 f7                	mov    %esi,%edi
81007398:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100739b:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100739e:	89 c2                	mov    %eax,%edx
810073a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810073a3:	89 50 08             	mov    %edx,0x8(%eax)
810073a6:	89 f8                	mov    %edi,%eax
810073a8:	39 c6                	cmp    %eax,%esi
810073aa:	73 02                	jae    810073ae <__ssprint_r+0x19a>
810073ac:	89 f7                	mov    %esi,%edi
810073ae:	89 fa                	mov    %edi,%edx
810073b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810073b3:	8b 00                	mov    (%eax),%eax
810073b5:	83 ec 04             	sub    $0x4,%esp
810073b8:	52                   	push   %edx
810073b9:	ff 75 d4             	push   -0x2c(%ebp)
810073bc:	50                   	push   %eax
810073bd:	e8 0e fc ff ff       	call   81006fd0 <memmove>
810073c2:	83 c4 10             	add    $0x10,%esp
810073c5:	8b 45 0c             	mov    0xc(%ebp),%eax
810073c8:	8b 40 08             	mov    0x8(%eax),%eax
810073cb:	29 f8                	sub    %edi,%eax
810073cd:	89 c2                	mov    %eax,%edx
810073cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810073d2:	89 50 08             	mov    %edx,0x8(%eax)
810073d5:	8b 45 0c             	mov    0xc(%ebp),%eax
810073d8:	8b 00                	mov    (%eax),%eax
810073da:	89 fa                	mov    %edi,%edx
810073dc:	01 c2                	add    %eax,%edx
810073de:	8b 45 0c             	mov    0xc(%ebp),%eax
810073e1:	89 10                	mov    %edx,(%eax)
810073e3:	89 f7                	mov    %esi,%edi
810073e5:	89 f8                	mov    %edi,%eax
810073e7:	01 45 d4             	add    %eax,-0x2c(%ebp)
810073ea:	89 f8                	mov    %edi,%eax
810073ec:	29 c6                	sub    %eax,%esi
810073ee:	8b 43 08             	mov    0x8(%ebx),%eax
810073f1:	89 fa                	mov    %edi,%edx
810073f3:	29 d0                	sub    %edx,%eax
810073f5:	89 43 08             	mov    %eax,0x8(%ebx)
810073f8:	8b 43 08             	mov    0x8(%ebx),%eax
810073fb:	85 c0                	test   %eax,%eax
810073fd:	0f 85 57 fe ff ff    	jne    8100725a <__ssprint_r+0x46>
81007403:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100740a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007411:	b8 00 00 00 00       	mov    $0x0,%eax
81007416:	eb 26                	jmp    8100743e <__ssprint_r+0x22a>
81007418:	8b 45 0c             	mov    0xc(%ebp),%eax
8100741b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100741f:	83 c8 40             	or     $0x40,%eax
81007422:	89 c2                	mov    %eax,%edx
81007424:	8b 45 0c             	mov    0xc(%ebp),%eax
81007427:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100742b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007432:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007439:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100743e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007441:	5b                   	pop    %ebx
81007442:	5e                   	pop    %esi
81007443:	5f                   	pop    %edi
81007444:	5d                   	pop    %ebp
81007445:	c3                   	ret    

81007446 <_svfiprintf_r>:
81007446:	55                   	push   %ebp
81007447:	89 e5                	mov    %esp,%ebp
81007449:	57                   	push   %edi
8100744a:	56                   	push   %esi
8100744b:	53                   	push   %ebx
8100744c:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007452:	c7 45 e4 5d 70 00 81 	movl   $0x8100705d,-0x1c(%ebp)
81007459:	8b 45 0c             	mov    0xc(%ebp),%eax
8100745c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007460:	98                   	cwtl   
81007461:	25 80 00 00 00       	and    $0x80,%eax
81007466:	85 c0                	test   %eax,%eax
81007468:	74 50                	je     810074ba <_svfiprintf_r+0x74>
8100746a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100746d:	8b 40 10             	mov    0x10(%eax),%eax
81007470:	85 c0                	test   %eax,%eax
81007472:	75 46                	jne    810074ba <_svfiprintf_r+0x74>
81007474:	83 ec 08             	sub    $0x8,%esp
81007477:	6a 40                	push   $0x40
81007479:	ff 75 08             	push   0x8(%ebp)
8100747c:	e8 8a c6 ff ff       	call   81003b0b <_malloc_r>
81007481:	83 c4 10             	add    $0x10,%esp
81007484:	8b 55 0c             	mov    0xc(%ebp),%edx
81007487:	89 02                	mov    %eax,(%edx)
81007489:	8b 45 0c             	mov    0xc(%ebp),%eax
8100748c:	8b 10                	mov    (%eax),%edx
8100748e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007491:	89 50 10             	mov    %edx,0x10(%eax)
81007494:	8b 45 0c             	mov    0xc(%ebp),%eax
81007497:	8b 00                	mov    (%eax),%eax
81007499:	85 c0                	test   %eax,%eax
8100749b:	75 13                	jne    810074b0 <_svfiprintf_r+0x6a>
8100749d:	8b 45 08             	mov    0x8(%ebp),%eax
810074a0:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810074a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810074ab:	e9 c8 02 00 00       	jmp    81007778 <_svfiprintf_r+0x332>
810074b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810074b3:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
810074ba:	8b 5d 10             	mov    0x10(%ebp),%ebx
810074bd:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
810074c4:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
810074c8:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
810074cc:	8b 45 14             	mov    0x14(%ebp),%eax
810074cf:	89 45 80             	mov    %eax,-0x80(%ebp)
810074d2:	89 de                	mov    %ebx,%esi
810074d4:	eb 03                	jmp    810074d9 <_svfiprintf_r+0x93>
810074d6:	83 c3 01             	add    $0x1,%ebx
810074d9:	0f b6 03             	movzbl (%ebx),%eax
810074dc:	84 c0                	test   %al,%al
810074de:	74 07                	je     810074e7 <_svfiprintf_r+0xa1>
810074e0:	0f b6 03             	movzbl (%ebx),%eax
810074e3:	3c 25                	cmp    $0x25,%al
810074e5:	75 ef                	jne    810074d6 <_svfiprintf_r+0x90>
810074e7:	89 d8                	mov    %ebx,%eax
810074e9:	29 f0                	sub    %esi,%eax
810074eb:	85 c0                	test   %eax,%eax
810074ed:	74 2b                	je     8100751a <_svfiprintf_r+0xd4>
810074ef:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810074f5:	50                   	push   %eax
810074f6:	56                   	push   %esi
810074f7:	ff 75 0c             	push   0xc(%ebp)
810074fa:	ff 75 08             	push   0x8(%ebp)
810074fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007500:	ff d0                	call   *%eax
81007502:	83 c4 10             	add    $0x10,%esp
81007505:	83 f8 ff             	cmp    $0xffffffff,%eax
81007508:	0f 84 4a 02 00 00    	je     81007758 <_svfiprintf_r+0x312>
8100750e:	8b 45 98             	mov    -0x68(%ebp),%eax
81007511:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007517:	89 45 98             	mov    %eax,-0x68(%ebp)
8100751a:	0f b6 03             	movzbl (%ebx),%eax
8100751d:	84 c0                	test   %al,%al
8100751f:	0f 84 36 02 00 00    	je     8100775b <_svfiprintf_r+0x315>
81007525:	83 c3 01             	add    $0x1,%ebx
81007528:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100752f:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007536:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
8100753d:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007544:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007548:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
8100754f:	c7 45 e0 ec 8b 00 81 	movl   $0x81008bec,-0x20(%ebp)
81007556:	eb 1b                	jmp    81007573 <_svfiprintf_r+0x12d>
81007558:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100755b:	89 f0                	mov    %esi,%eax
8100755d:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007560:	be 01 00 00 00       	mov    $0x1,%esi
81007565:	89 c1                	mov    %eax,%ecx
81007567:	d3 e6                	shl    %cl,%esi
81007569:	89 f0                	mov    %esi,%eax
8100756b:	09 d0                	or     %edx,%eax
8100756d:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007570:	83 c3 01             	add    $0x1,%ebx
81007573:	0f b6 03             	movzbl (%ebx),%eax
81007576:	0f be c0             	movsbl %al,%eax
81007579:	83 ec 04             	sub    $0x4,%esp
8100757c:	6a 05                	push   $0x5
8100757e:	50                   	push   %eax
8100757f:	ff 75 e0             	push   -0x20(%ebp)
81007582:	e8 a9 cd ff ff       	call   81004330 <memchr>
81007587:	83 c4 10             	add    $0x10,%esp
8100758a:	89 c6                	mov    %eax,%esi
8100758c:	85 f6                	test   %esi,%esi
8100758e:	75 c8                	jne    81007558 <_svfiprintf_r+0x112>
81007590:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007593:	83 e0 10             	and    $0x10,%eax
81007596:	85 c0                	test   %eax,%eax
81007598:	74 04                	je     8100759e <_svfiprintf_r+0x158>
8100759a:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
8100759e:	8b 45 84             	mov    -0x7c(%ebp),%eax
810075a1:	83 e0 08             	and    $0x8,%eax
810075a4:	85 c0                	test   %eax,%eax
810075a6:	74 04                	je     810075ac <_svfiprintf_r+0x166>
810075a8:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
810075ac:	0f b6 03             	movzbl (%ebx),%eax
810075af:	3c 2a                	cmp    $0x2a,%al
810075b1:	75 4a                	jne    810075fd <_svfiprintf_r+0x1b7>
810075b3:	8b 45 80             	mov    -0x80(%ebp),%eax
810075b6:	8d 50 04             	lea    0x4(%eax),%edx
810075b9:	89 55 80             	mov    %edx,-0x80(%ebp)
810075bc:	8b 00                	mov    (%eax),%eax
810075be:	89 45 90             	mov    %eax,-0x70(%ebp)
810075c1:	8b 45 90             	mov    -0x70(%ebp),%eax
810075c4:	85 c0                	test   %eax,%eax
810075c6:	79 11                	jns    810075d9 <_svfiprintf_r+0x193>
810075c8:	8b 45 90             	mov    -0x70(%ebp),%eax
810075cb:	f7 d8                	neg    %eax
810075cd:	89 45 90             	mov    %eax,-0x70(%ebp)
810075d0:	8b 45 84             	mov    -0x7c(%ebp),%eax
810075d3:	83 c8 02             	or     $0x2,%eax
810075d6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810075d9:	83 c3 01             	add    $0x1,%ebx
810075dc:	eb 2d                	jmp    8100760b <_svfiprintf_r+0x1c5>
810075de:	8b 55 90             	mov    -0x70(%ebp),%edx
810075e1:	89 d0                	mov    %edx,%eax
810075e3:	c1 e0 02             	shl    $0x2,%eax
810075e6:	01 d0                	add    %edx,%eax
810075e8:	01 c0                	add    %eax,%eax
810075ea:	89 c2                	mov    %eax,%edx
810075ec:	0f b6 03             	movzbl (%ebx),%eax
810075ef:	0f be c0             	movsbl %al,%eax
810075f2:	83 e8 30             	sub    $0x30,%eax
810075f5:	01 d0                	add    %edx,%eax
810075f7:	89 45 90             	mov    %eax,-0x70(%ebp)
810075fa:	83 c3 01             	add    $0x1,%ebx
810075fd:	0f b6 03             	movzbl (%ebx),%eax
81007600:	0f be c0             	movsbl %al,%eax
81007603:	83 e8 30             	sub    $0x30,%eax
81007606:	83 f8 09             	cmp    $0x9,%eax
81007609:	76 d3                	jbe    810075de <_svfiprintf_r+0x198>
8100760b:	0f b6 03             	movzbl (%ebx),%eax
8100760e:	3c 2e                	cmp    $0x2e,%al
81007610:	75 61                	jne    81007673 <_svfiprintf_r+0x22d>
81007612:	83 c3 01             	add    $0x1,%ebx
81007615:	0f b6 03             	movzbl (%ebx),%eax
81007618:	3c 2a                	cmp    $0x2a,%al
8100761a:	75 21                	jne    8100763d <_svfiprintf_r+0x1f7>
8100761c:	83 c3 01             	add    $0x1,%ebx
8100761f:	8b 45 80             	mov    -0x80(%ebp),%eax
81007622:	8d 50 04             	lea    0x4(%eax),%edx
81007625:	89 55 80             	mov    %edx,-0x80(%ebp)
81007628:	8b 00                	mov    (%eax),%eax
8100762a:	89 45 88             	mov    %eax,-0x78(%ebp)
8100762d:	8b 45 88             	mov    -0x78(%ebp),%eax
81007630:	85 c0                	test   %eax,%eax
81007632:	79 3f                	jns    81007673 <_svfiprintf_r+0x22d>
81007634:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
8100763b:	eb 36                	jmp    81007673 <_svfiprintf_r+0x22d>
8100763d:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81007644:	eb 1f                	jmp    81007665 <_svfiprintf_r+0x21f>
81007646:	8b 55 88             	mov    -0x78(%ebp),%edx
81007649:	89 d0                	mov    %edx,%eax
8100764b:	c1 e0 02             	shl    $0x2,%eax
8100764e:	01 d0                	add    %edx,%eax
81007650:	01 c0                	add    %eax,%eax
81007652:	89 c2                	mov    %eax,%edx
81007654:	0f b6 03             	movzbl (%ebx),%eax
81007657:	0f be c0             	movsbl %al,%eax
8100765a:	83 e8 30             	sub    $0x30,%eax
8100765d:	01 d0                	add    %edx,%eax
8100765f:	89 45 88             	mov    %eax,-0x78(%ebp)
81007662:	83 c3 01             	add    $0x1,%ebx
81007665:	0f b6 03             	movzbl (%ebx),%eax
81007668:	0f be c0             	movsbl %al,%eax
8100766b:	83 e8 30             	sub    $0x30,%eax
8100766e:	83 f8 09             	cmp    $0x9,%eax
81007671:	76 d3                	jbe    81007646 <_svfiprintf_r+0x200>
81007673:	c7 45 e0 f2 8b 00 81 	movl   $0x81008bf2,-0x20(%ebp)
8100767a:	0f b6 03             	movzbl (%ebx),%eax
8100767d:	0f be c0             	movsbl %al,%eax
81007680:	83 ec 04             	sub    $0x4,%esp
81007683:	6a 03                	push   $0x3
81007685:	50                   	push   %eax
81007686:	ff 75 e0             	push   -0x20(%ebp)
81007689:	e8 a2 cc ff ff       	call   81004330 <memchr>
8100768e:	83 c4 10             	add    $0x10,%esp
81007691:	89 c6                	mov    %eax,%esi
81007693:	85 f6                	test   %esi,%esi
81007695:	74 1b                	je     810076b2 <_svfiprintf_r+0x26c>
81007697:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100769a:	89 f0                	mov    %esi,%eax
8100769c:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100769f:	be 40 00 00 00       	mov    $0x40,%esi
810076a4:	89 c1                	mov    %eax,%ecx
810076a6:	d3 e6                	shl    %cl,%esi
810076a8:	89 f0                	mov    %esi,%eax
810076aa:	09 d0                	or     %edx,%eax
810076ac:	89 45 84             	mov    %eax,-0x7c(%ebp)
810076af:	83 c3 01             	add    $0x1,%ebx
810076b2:	89 d8                	mov    %ebx,%eax
810076b4:	8d 58 01             	lea    0x1(%eax),%ebx
810076b7:	0f b6 00             	movzbl (%eax),%eax
810076ba:	88 45 9c             	mov    %al,-0x64(%ebp)
810076bd:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
810076c1:	0f be c0             	movsbl %al,%eax
810076c4:	83 ec 04             	sub    $0x4,%esp
810076c7:	6a 06                	push   $0x6
810076c9:	50                   	push   %eax
810076ca:	68 f6 8b 00 81       	push   $0x81008bf6
810076cf:	e8 5c cc ff ff       	call   81004330 <memchr>
810076d4:	83 c4 10             	add    $0x10,%esp
810076d7:	89 c6                	mov    %eax,%esi
810076d9:	85 f6                	test   %esi,%esi
810076db:	74 4b                	je     81007728 <_svfiprintf_r+0x2e2>
810076dd:	b8 00 00 00 00       	mov    $0x0,%eax
810076e2:	85 c0                	test   %eax,%eax
810076e4:	75 22                	jne    81007708 <_svfiprintf_r+0x2c2>
810076e6:	8b 45 84             	mov    -0x7c(%ebp),%eax
810076e9:	25 00 01 00 00       	and    $0x100,%eax
810076ee:	85 c0                	test   %eax,%eax
810076f0:	74 0b                	je     810076fd <_svfiprintf_r+0x2b7>
810076f2:	8b 45 80             	mov    -0x80(%ebp),%eax
810076f5:	83 c0 0c             	add    $0xc,%eax
810076f8:	89 45 80             	mov    %eax,-0x80(%ebp)
810076fb:	eb 49                	jmp    81007746 <_svfiprintf_r+0x300>
810076fd:	8b 45 80             	mov    -0x80(%ebp),%eax
81007700:	83 c0 08             	add    $0x8,%eax
81007703:	89 45 80             	mov    %eax,-0x80(%ebp)
81007706:	eb 3e                	jmp    81007746 <_svfiprintf_r+0x300>
81007708:	83 ec 0c             	sub    $0xc,%esp
8100770b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100770e:	50                   	push   %eax
8100770f:	ff 75 e4             	push   -0x1c(%ebp)
81007712:	ff 75 0c             	push   0xc(%ebp)
81007715:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007718:	50                   	push   %eax
81007719:	ff 75 08             	push   0x8(%ebp)
8100771c:	e8 df 88 ff 7e       	call   0 <do_help-0x81000000>
81007721:	83 c4 20             	add    $0x20,%esp
81007724:	89 c7                	mov    %eax,%edi
81007726:	eb 1e                	jmp    81007746 <_svfiprintf_r+0x300>
81007728:	83 ec 0c             	sub    $0xc,%esp
8100772b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100772e:	50                   	push   %eax
8100772f:	ff 75 e4             	push   -0x1c(%ebp)
81007732:	ff 75 0c             	push   0xc(%ebp)
81007735:	8d 45 84             	lea    -0x7c(%ebp),%eax
81007738:	50                   	push   %eax
81007739:	ff 75 08             	push   0x8(%ebp)
8100773c:	e8 b3 d4 ff ff       	call   81004bf4 <_printf_i>
81007741:	83 c4 20             	add    $0x20,%esp
81007744:	89 c7                	mov    %eax,%edi
81007746:	83 ff ff             	cmp    $0xffffffff,%edi
81007749:	74 13                	je     8100775e <_svfiprintf_r+0x318>
8100774b:	8b 45 98             	mov    -0x68(%ebp),%eax
8100774e:	01 f8                	add    %edi,%eax
81007750:	89 45 98             	mov    %eax,-0x68(%ebp)
81007753:	e9 7a fd ff ff       	jmp    810074d2 <_svfiprintf_r+0x8c>
81007758:	90                   	nop
81007759:	eb 04                	jmp    8100775f <_svfiprintf_r+0x319>
8100775b:	90                   	nop
8100775c:	eb 01                	jmp    8100775f <_svfiprintf_r+0x319>
8100775e:	90                   	nop
8100775f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007762:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007766:	98                   	cwtl   
81007767:	83 e0 40             	and    $0x40,%eax
8100776a:	85 c0                	test   %eax,%eax
8100776c:	75 05                	jne    81007773 <_svfiprintf_r+0x32d>
8100776e:	8b 45 98             	mov    -0x68(%ebp),%eax
81007771:	eb 05                	jmp    81007778 <_svfiprintf_r+0x332>
81007773:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007778:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100777b:	5b                   	pop    %ebx
8100777c:	5e                   	pop    %esi
8100777d:	5f                   	pop    %edi
8100777e:	5d                   	pop    %ebp
8100777f:	c3                   	ret    

81007780 <__sputc_r>:
81007780:	55                   	push   %ebp
81007781:	89 e5                	mov    %esp,%ebp
81007783:	83 ec 08             	sub    $0x8,%esp
81007786:	8b 45 10             	mov    0x10(%ebp),%eax
81007789:	8b 40 08             	mov    0x8(%eax),%eax
8100778c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100778f:	8b 45 10             	mov    0x10(%ebp),%eax
81007792:	89 50 08             	mov    %edx,0x8(%eax)
81007795:	8b 45 10             	mov    0x10(%ebp),%eax
81007798:	8b 40 08             	mov    0x8(%eax),%eax
8100779b:	85 c0                	test   %eax,%eax
8100779d:	79 17                	jns    810077b6 <__sputc_r+0x36>
8100779f:	8b 45 10             	mov    0x10(%ebp),%eax
810077a2:	8b 50 08             	mov    0x8(%eax),%edx
810077a5:	8b 45 10             	mov    0x10(%ebp),%eax
810077a8:	8b 40 18             	mov    0x18(%eax),%eax
810077ab:	39 c2                	cmp    %eax,%edx
810077ad:	7c 21                	jl     810077d0 <__sputc_r+0x50>
810077af:	8b 45 0c             	mov    0xc(%ebp),%eax
810077b2:	3c 0a                	cmp    $0xa,%al
810077b4:	74 1a                	je     810077d0 <__sputc_r+0x50>
810077b6:	8b 45 10             	mov    0x10(%ebp),%eax
810077b9:	8b 00                	mov    (%eax),%eax
810077bb:	8d 48 01             	lea    0x1(%eax),%ecx
810077be:	8b 55 10             	mov    0x10(%ebp),%edx
810077c1:	89 0a                	mov    %ecx,(%edx)
810077c3:	8b 55 0c             	mov    0xc(%ebp),%edx
810077c6:	88 10                	mov    %dl,(%eax)
810077c8:	0f b6 00             	movzbl (%eax),%eax
810077cb:	0f b6 c0             	movzbl %al,%eax
810077ce:	eb 14                	jmp    810077e4 <__sputc_r+0x64>
810077d0:	83 ec 04             	sub    $0x4,%esp
810077d3:	ff 75 10             	push   0x10(%ebp)
810077d6:	ff 75 0c             	push   0xc(%ebp)
810077d9:	ff 75 08             	push   0x8(%ebp)
810077dc:	e8 6e e7 ff ff       	call   81005f4f <__swbuf_r>
810077e1:	83 c4 10             	add    $0x10,%esp
810077e4:	c9                   	leave  
810077e5:	c3                   	ret    

810077e6 <_putc_r>:
810077e6:	55                   	push   %ebp
810077e7:	89 e5                	mov    %esp,%ebp
810077e9:	53                   	push   %ebx
810077ea:	83 ec 14             	sub    $0x14,%esp
810077ed:	8b 5d 10             	mov    0x10(%ebp),%ebx
810077f0:	8b 45 08             	mov    0x8(%ebp),%eax
810077f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810077f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810077fa:	74 18                	je     81007814 <_putc_r+0x2e>
810077fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810077ff:	8b 40 38             	mov    0x38(%eax),%eax
81007802:	85 c0                	test   %eax,%eax
81007804:	75 0e                	jne    81007814 <_putc_r+0x2e>
81007806:	83 ec 0c             	sub    $0xc,%esp
81007809:	ff 75 f4             	push   -0xc(%ebp)
8100780c:	e8 47 9f ff ff       	call   81001758 <__sinit>
81007811:	83 c4 10             	add    $0x10,%esp
81007814:	83 ec 04             	sub    $0x4,%esp
81007817:	53                   	push   %ebx
81007818:	ff 75 0c             	push   0xc(%ebp)
8100781b:	ff 75 08             	push   0x8(%ebp)
8100781e:	e8 5d ff ff ff       	call   81007780 <__sputc_r>
81007823:	83 c4 10             	add    $0x10,%esp
81007826:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007829:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100782c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100782f:	c9                   	leave  
81007830:	c3                   	ret    

81007831 <putc>:
81007831:	55                   	push   %ebp
81007832:	89 e5                	mov    %esp,%ebp
81007834:	53                   	push   %ebx
81007835:	83 ec 14             	sub    $0x14,%esp
81007838:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100783b:	a1 44 90 00 81       	mov    0x81009044,%eax
81007840:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007843:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007846:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007849:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100784d:	74 18                	je     81007867 <putc+0x36>
8100784f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007852:	8b 40 38             	mov    0x38(%eax),%eax
81007855:	85 c0                	test   %eax,%eax
81007857:	75 0e                	jne    81007867 <putc+0x36>
81007859:	83 ec 0c             	sub    $0xc,%esp
8100785c:	ff 75 f0             	push   -0x10(%ebp)
8100785f:	e8 f4 9e ff ff       	call   81001758 <__sinit>
81007864:	83 c4 10             	add    $0x10,%esp
81007867:	83 ec 04             	sub    $0x4,%esp
8100786a:	53                   	push   %ebx
8100786b:	ff 75 08             	push   0x8(%ebp)
8100786e:	ff 75 f4             	push   -0xc(%ebp)
81007871:	e8 0a ff ff ff       	call   81007780 <__sputc_r>
81007876:	83 c4 10             	add    $0x10,%esp
81007879:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100787c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100787f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007882:	c9                   	leave  
81007883:	c3                   	ret    

81007884 <_read_r>:
81007884:	55                   	push   %ebp
81007885:	89 e5                	mov    %esp,%ebp
81007887:	83 ec 18             	sub    $0x18,%esp
8100788a:	c7 05 8c 9d 00 81 00 	movl   $0x0,0x81009d8c
81007891:	00 00 00 
81007894:	83 ec 04             	sub    $0x4,%esp
81007897:	ff 75 14             	push   0x14(%ebp)
8100789a:	ff 75 10             	push   0x10(%ebp)
8100789d:	ff 75 0c             	push   0xc(%ebp)
810078a0:	e8 63 93 ff ff       	call   81000c08 <read>
810078a5:	83 c4 10             	add    $0x10,%esp
810078a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078ab:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810078af:	75 14                	jne    810078c5 <_read_r+0x41>
810078b1:	a1 8c 9d 00 81       	mov    0x81009d8c,%eax
810078b6:	85 c0                	test   %eax,%eax
810078b8:	74 0b                	je     810078c5 <_read_r+0x41>
810078ba:	8b 15 8c 9d 00 81    	mov    0x81009d8c,%edx
810078c0:	8b 45 08             	mov    0x8(%ebp),%eax
810078c3:	89 10                	mov    %edx,(%eax)
810078c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078c8:	c9                   	leave  
810078c9:	c3                   	ret    

810078ca <_realloc_r>:
810078ca:	55                   	push   %ebp
810078cb:	89 e5                	mov    %esp,%ebp
810078cd:	83 ec 78             	sub    $0x78,%esp
810078d0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810078d4:	75 16                	jne    810078ec <_realloc_r+0x22>
810078d6:	83 ec 08             	sub    $0x8,%esp
810078d9:	ff 75 10             	push   0x10(%ebp)
810078dc:	ff 75 08             	push   0x8(%ebp)
810078df:	e8 27 c2 ff ff       	call   81003b0b <_malloc_r>
810078e4:	83 c4 10             	add    $0x10,%esp
810078e7:	e9 b6 08 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
810078ec:	83 ec 0c             	sub    $0xc,%esp
810078ef:	ff 75 08             	push   0x8(%ebp)
810078f2:	e8 f1 cb ff ff       	call   810044e8 <__malloc_lock>
810078f7:	83 c4 10             	add    $0x10,%esp
810078fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810078fd:	83 e8 08             	sub    $0x8,%eax
81007900:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81007903:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007906:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007909:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100790c:	8b 40 04             	mov    0x4(%eax),%eax
8100790f:	83 e0 fc             	and    $0xfffffffc,%eax
81007912:	89 45 c0             	mov    %eax,-0x40(%ebp)
81007915:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007918:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100791b:	8b 45 10             	mov    0x10(%ebp),%eax
8100791e:	83 c0 0b             	add    $0xb,%eax
81007921:	83 f8 16             	cmp    $0x16,%eax
81007924:	76 0b                	jbe    81007931 <_realloc_r+0x67>
81007926:	8b 45 10             	mov    0x10(%ebp),%eax
81007929:	83 c0 0b             	add    $0xb,%eax
8100792c:	83 e0 f8             	and    $0xfffffff8,%eax
8100792f:	eb 05                	jmp    81007936 <_realloc_r+0x6c>
81007931:	b8 10 00 00 00       	mov    $0x10,%eax
81007936:	89 45 bc             	mov    %eax,-0x44(%ebp)
81007939:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100793c:	85 c0                	test   %eax,%eax
8100793e:	78 08                	js     81007948 <_realloc_r+0x7e>
81007940:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007943:	3b 45 10             	cmp    0x10(%ebp),%eax
81007946:	73 13                	jae    8100795b <_realloc_r+0x91>
81007948:	8b 45 08             	mov    0x8(%ebp),%eax
8100794b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007951:	b8 00 00 00 00       	mov    $0x0,%eax
81007956:	e9 47 08 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
8100795b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100795e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007961:	39 c2                	cmp    %eax,%edx
81007963:	0f 8d 8b 07 00 00    	jge    810080f4 <_realloc_r+0x82a>
81007969:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100796c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100796f:	01 d0                	add    %edx,%eax
81007971:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007974:	b8 60 90 00 81       	mov    $0x81009060,%eax
81007979:	8b 40 08             	mov    0x8(%eax),%eax
8100797c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100797f:	74 1e                	je     8100799f <_realloc_r+0xd5>
81007981:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007984:	8b 40 04             	mov    0x4(%eax),%eax
81007987:	83 e0 fe             	and    $0xfffffffe,%eax
8100798a:	89 c2                	mov    %eax,%edx
8100798c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100798f:	01 d0                	add    %edx,%eax
81007991:	8b 40 04             	mov    0x4(%eax),%eax
81007994:	83 e0 01             	and    $0x1,%eax
81007997:	85 c0                	test   %eax,%eax
81007999:	0f 85 ca 00 00 00    	jne    81007a69 <_realloc_r+0x19f>
8100799f:	8b 45 ec             	mov    -0x14(%ebp),%eax
810079a2:	8b 40 04             	mov    0x4(%eax),%eax
810079a5:	83 e0 fc             	and    $0xfffffffc,%eax
810079a8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810079ab:	b8 60 90 00 81       	mov    $0x81009060,%eax
810079b0:	8b 40 08             	mov    0x8(%eax),%eax
810079b3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810079b6:	75 71                	jne    81007a29 <_realloc_r+0x15f>
810079b8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810079bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810079be:	01 d0                	add    %edx,%eax
810079c0:	89 c2                	mov    %eax,%edx
810079c2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079c5:	83 c0 10             	add    $0x10,%eax
810079c8:	39 c2                	cmp    %eax,%edx
810079ca:	0f 8c a9 00 00 00    	jl     81007a79 <_realloc_r+0x1af>
810079d0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810079d3:	01 45 f0             	add    %eax,-0x10(%ebp)
810079d6:	ba 60 90 00 81       	mov    $0x81009060,%edx
810079db:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
810079de:	8b 45 bc             	mov    -0x44(%ebp),%eax
810079e1:	01 c8                	add    %ecx,%eax
810079e3:	89 42 08             	mov    %eax,0x8(%edx)
810079e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810079e9:	2b 45 bc             	sub    -0x44(%ebp),%eax
810079ec:	89 c2                	mov    %eax,%edx
810079ee:	b8 60 90 00 81       	mov    $0x81009060,%eax
810079f3:	8b 40 08             	mov    0x8(%eax),%eax
810079f6:	83 ca 01             	or     $0x1,%edx
810079f9:	89 50 04             	mov    %edx,0x4(%eax)
810079fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810079ff:	8b 40 04             	mov    0x4(%eax),%eax
81007a02:	83 e0 01             	and    $0x1,%eax
81007a05:	0b 45 bc             	or     -0x44(%ebp),%eax
81007a08:	89 c2                	mov    %eax,%edx
81007a0a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a0d:	89 50 04             	mov    %edx,0x4(%eax)
81007a10:	83 ec 0c             	sub    $0xc,%esp
81007a13:	ff 75 08             	push   0x8(%ebp)
81007a16:	e8 d3 ca ff ff       	call   810044ee <__malloc_unlock>
81007a1b:	83 c4 10             	add    $0x10,%esp
81007a1e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a21:	83 c0 08             	add    $0x8,%eax
81007a24:	e9 79 07 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
81007a29:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007a2c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007a2f:	01 d0                	add    %edx,%eax
81007a31:	89 c2                	mov    %eax,%edx
81007a33:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007a36:	39 c2                	cmp    %eax,%edx
81007a38:	7c 3f                	jl     81007a79 <_realloc_r+0x1af>
81007a3a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a3d:	8b 40 0c             	mov    0xc(%eax),%eax
81007a40:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007a43:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007a46:	8b 40 08             	mov    0x8(%eax),%eax
81007a49:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007a4c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007a4f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007a52:	89 50 0c             	mov    %edx,0xc(%eax)
81007a55:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007a58:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007a5b:	89 50 08             	mov    %edx,0x8(%eax)
81007a5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007a61:	01 45 f0             	add    %eax,-0x10(%ebp)
81007a64:	e9 8c 06 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007a69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81007a70:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81007a77:	eb 01                	jmp    81007a7a <_realloc_r+0x1b0>
81007a79:	90                   	nop
81007a7a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a7d:	8b 40 04             	mov    0x4(%eax),%eax
81007a80:	83 e0 01             	and    $0x1,%eax
81007a83:	85 c0                	test   %eax,%eax
81007a85:	0f 85 d6 04 00 00    	jne    81007f61 <_realloc_r+0x697>
81007a8b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a8e:	8b 00                	mov    (%eax),%eax
81007a90:	f7 d8                	neg    %eax
81007a92:	89 c2                	mov    %eax,%edx
81007a94:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007a97:	01 d0                	add    %edx,%eax
81007a99:	89 45 b0             	mov    %eax,-0x50(%ebp)
81007a9c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007a9f:	8b 40 04             	mov    0x4(%eax),%eax
81007aa2:	83 e0 fc             	and    $0xfffffffc,%eax
81007aa5:	89 45 ac             	mov    %eax,-0x54(%ebp)
81007aa8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81007aac:	0f 84 4a 03 00 00    	je     81007dfc <_realloc_r+0x532>
81007ab2:	b8 60 90 00 81       	mov    $0x81009060,%eax
81007ab7:	8b 40 08             	mov    0x8(%eax),%eax
81007aba:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81007abd:	0f 85 b0 01 00 00    	jne    81007c73 <_realloc_r+0x3a9>
81007ac3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007ac6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007ac9:	01 c2                	add    %eax,%edx
81007acb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ace:	01 d0                	add    %edx,%eax
81007ad0:	89 c2                	mov    %eax,%edx
81007ad2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007ad5:	83 c0 10             	add    $0x10,%eax
81007ad8:	39 c2                	cmp    %eax,%edx
81007ada:	0f 8c 1c 03 00 00    	jl     81007dfc <_realloc_r+0x532>
81007ae0:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007ae3:	8b 40 0c             	mov    0xc(%eax),%eax
81007ae6:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007ae9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007aec:	8b 40 08             	mov    0x8(%eax),%eax
81007aef:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007af2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007af5:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007af8:	89 50 0c             	mov    %edx,0xc(%eax)
81007afb:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007afe:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007b01:	89 50 08             	mov    %edx,0x8(%eax)
81007b04:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007b07:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b0a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007b0d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81007b10:	01 d0                	add    %edx,%eax
81007b12:	01 45 f0             	add    %eax,-0x10(%ebp)
81007b15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007b18:	83 c0 08             	add    $0x8,%eax
81007b1b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007b1e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007b21:	83 e8 04             	sub    $0x4,%eax
81007b24:	89 45 a0             	mov    %eax,-0x60(%ebp)
81007b27:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81007b2b:	0f 87 de 00 00 00    	ja     81007c0f <_realloc_r+0x345>
81007b31:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b34:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b37:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007b3a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007b3d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81007b41:	0f 86 90 00 00 00    	jbe    81007bd7 <_realloc_r+0x30d>
81007b47:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007b4a:	8d 42 04             	lea    0x4(%edx),%eax
81007b4d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b50:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b53:	8d 48 04             	lea    0x4(%eax),%ecx
81007b56:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007b59:	8b 12                	mov    (%edx),%edx
81007b5b:	89 10                	mov    %edx,(%eax)
81007b5d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007b60:	8d 42 04             	lea    0x4(%edx),%eax
81007b63:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b66:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b69:	8d 48 04             	lea    0x4(%eax),%ecx
81007b6c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007b6f:	8b 12                	mov    (%edx),%edx
81007b71:	89 10                	mov    %edx,(%eax)
81007b73:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81007b77:	76 5e                	jbe    81007bd7 <_realloc_r+0x30d>
81007b79:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007b7c:	8d 42 04             	lea    0x4(%edx),%eax
81007b7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b82:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b85:	8d 48 04             	lea    0x4(%eax),%ecx
81007b88:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007b8b:	8b 12                	mov    (%edx),%edx
81007b8d:	89 10                	mov    %edx,(%eax)
81007b8f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007b92:	8d 42 04             	lea    0x4(%edx),%eax
81007b95:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007b98:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007b9b:	8d 48 04             	lea    0x4(%eax),%ecx
81007b9e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007ba1:	8b 12                	mov    (%edx),%edx
81007ba3:	89 10                	mov    %edx,(%eax)
81007ba5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81007ba9:	76 2c                	jbe    81007bd7 <_realloc_r+0x30d>
81007bab:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bae:	8d 42 04             	lea    0x4(%edx),%eax
81007bb1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007bb4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007bb7:	8d 48 04             	lea    0x4(%eax),%ecx
81007bba:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007bbd:	8b 12                	mov    (%edx),%edx
81007bbf:	89 10                	mov    %edx,(%eax)
81007bc1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bc4:	8d 42 04             	lea    0x4(%edx),%eax
81007bc7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007bca:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007bcd:	8d 48 04             	lea    0x4(%eax),%ecx
81007bd0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007bd3:	8b 12                	mov    (%edx),%edx
81007bd5:	89 10                	mov    %edx,(%eax)
81007bd7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bda:	8d 42 04             	lea    0x4(%edx),%eax
81007bdd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007be0:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007be3:	8d 48 04             	lea    0x4(%eax),%ecx
81007be6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007be9:	8b 12                	mov    (%edx),%edx
81007beb:	89 10                	mov    %edx,(%eax)
81007bed:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007bf0:	8d 42 04             	lea    0x4(%edx),%eax
81007bf3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007bf6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007bf9:	8d 48 04             	lea    0x4(%eax),%ecx
81007bfc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81007bff:	8b 12                	mov    (%edx),%edx
81007c01:	89 10                	mov    %edx,(%eax)
81007c03:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007c06:	8b 10                	mov    (%eax),%edx
81007c08:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007c0b:	89 10                	mov    %edx,(%eax)
81007c0d:	eb 14                	jmp    81007c23 <_realloc_r+0x359>
81007c0f:	83 ec 04             	sub    $0x4,%esp
81007c12:	ff 75 a0             	push   -0x60(%ebp)
81007c15:	ff 75 0c             	push   0xc(%ebp)
81007c18:	ff 75 a8             	push   -0x58(%ebp)
81007c1b:	e8 b0 f3 ff ff       	call   81006fd0 <memmove>
81007c20:	83 c4 10             	add    $0x10,%esp
81007c23:	ba 60 90 00 81       	mov    $0x81009060,%edx
81007c28:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81007c2b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007c2e:	01 c8                	add    %ecx,%eax
81007c30:	89 42 08             	mov    %eax,0x8(%edx)
81007c33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007c36:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007c39:	89 c2                	mov    %eax,%edx
81007c3b:	b8 60 90 00 81       	mov    $0x81009060,%eax
81007c40:	8b 40 08             	mov    0x8(%eax),%eax
81007c43:	83 ca 01             	or     $0x1,%edx
81007c46:	89 50 04             	mov    %edx,0x4(%eax)
81007c49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007c4c:	8b 40 04             	mov    0x4(%eax),%eax
81007c4f:	83 e0 01             	and    $0x1,%eax
81007c52:	0b 45 bc             	or     -0x44(%ebp),%eax
81007c55:	89 c2                	mov    %eax,%edx
81007c57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007c5a:	89 50 04             	mov    %edx,0x4(%eax)
81007c5d:	83 ec 0c             	sub    $0xc,%esp
81007c60:	ff 75 08             	push   0x8(%ebp)
81007c63:	e8 86 c8 ff ff       	call   810044ee <__malloc_unlock>
81007c68:	83 c4 10             	add    $0x10,%esp
81007c6b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007c6e:	e9 2f 05 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
81007c73:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007c76:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007c79:	01 c2                	add    %eax,%edx
81007c7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007c7e:	01 d0                	add    %edx,%eax
81007c80:	89 c2                	mov    %eax,%edx
81007c82:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007c85:	39 c2                	cmp    %eax,%edx
81007c87:	0f 8c 6f 01 00 00    	jl     81007dfc <_realloc_r+0x532>
81007c8d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007c90:	8b 40 0c             	mov    0xc(%eax),%eax
81007c93:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007c96:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007c99:	8b 40 08             	mov    0x8(%eax),%eax
81007c9c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007c9f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007ca2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007ca5:	89 50 0c             	mov    %edx,0xc(%eax)
81007ca8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007cab:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007cae:	89 50 08             	mov    %edx,0x8(%eax)
81007cb1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007cb4:	8b 40 0c             	mov    0xc(%eax),%eax
81007cb7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007cba:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007cbd:	8b 40 08             	mov    0x8(%eax),%eax
81007cc0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007cc3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007cc6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007cc9:	89 50 0c             	mov    %edx,0xc(%eax)
81007ccc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007ccf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007cd2:	89 50 08             	mov    %edx,0x8(%eax)
81007cd5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007cd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007cdb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81007cde:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007ce1:	01 d0                	add    %edx,%eax
81007ce3:	01 45 f0             	add    %eax,-0x10(%ebp)
81007ce6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007ce9:	83 c0 08             	add    $0x8,%eax
81007cec:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007cef:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007cf2:	83 e8 04             	sub    $0x4,%eax
81007cf5:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81007cf8:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81007cfc:	0f 87 e1 00 00 00    	ja     81007de3 <_realloc_r+0x519>
81007d02:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d05:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d08:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007d0b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81007d0e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81007d12:	0f 86 90 00 00 00    	jbe    81007da8 <_realloc_r+0x4de>
81007d18:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d1b:	8d 42 04             	lea    0x4(%edx),%eax
81007d1e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d21:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d24:	8d 48 04             	lea    0x4(%eax),%ecx
81007d27:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007d2a:	8b 12                	mov    (%edx),%edx
81007d2c:	89 10                	mov    %edx,(%eax)
81007d2e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d31:	8d 42 04             	lea    0x4(%edx),%eax
81007d34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d37:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d3a:	8d 48 04             	lea    0x4(%eax),%ecx
81007d3d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007d40:	8b 12                	mov    (%edx),%edx
81007d42:	89 10                	mov    %edx,(%eax)
81007d44:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81007d48:	76 5e                	jbe    81007da8 <_realloc_r+0x4de>
81007d4a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d4d:	8d 42 04             	lea    0x4(%edx),%eax
81007d50:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d53:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d56:	8d 48 04             	lea    0x4(%eax),%ecx
81007d59:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007d5c:	8b 12                	mov    (%edx),%edx
81007d5e:	89 10                	mov    %edx,(%eax)
81007d60:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d63:	8d 42 04             	lea    0x4(%edx),%eax
81007d66:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d69:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d6c:	8d 48 04             	lea    0x4(%eax),%ecx
81007d6f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007d72:	8b 12                	mov    (%edx),%edx
81007d74:	89 10                	mov    %edx,(%eax)
81007d76:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81007d7a:	76 2c                	jbe    81007da8 <_realloc_r+0x4de>
81007d7c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d7f:	8d 42 04             	lea    0x4(%edx),%eax
81007d82:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d85:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d88:	8d 48 04             	lea    0x4(%eax),%ecx
81007d8b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007d8e:	8b 12                	mov    (%edx),%edx
81007d90:	89 10                	mov    %edx,(%eax)
81007d92:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d95:	8d 42 04             	lea    0x4(%edx),%eax
81007d98:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007d9b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007d9e:	8d 48 04             	lea    0x4(%eax),%ecx
81007da1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007da4:	8b 12                	mov    (%edx),%edx
81007da6:	89 10                	mov    %edx,(%eax)
81007da8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dab:	8d 42 04             	lea    0x4(%edx),%eax
81007dae:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007db1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007db4:	8d 48 04             	lea    0x4(%eax),%ecx
81007db7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007dba:	8b 12                	mov    (%edx),%edx
81007dbc:	89 10                	mov    %edx,(%eax)
81007dbe:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007dc1:	8d 42 04             	lea    0x4(%edx),%eax
81007dc4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007dc7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007dca:	8d 48 04             	lea    0x4(%eax),%ecx
81007dcd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007dd0:	8b 12                	mov    (%edx),%edx
81007dd2:	89 10                	mov    %edx,(%eax)
81007dd4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007dd7:	8b 10                	mov    (%eax),%edx
81007dd9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007ddc:	89 10                	mov    %edx,(%eax)
81007dde:	e9 12 03 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007de3:	83 ec 04             	sub    $0x4,%esp
81007de6:	ff 75 a4             	push   -0x5c(%ebp)
81007de9:	ff 75 0c             	push   0xc(%ebp)
81007dec:	ff 75 a8             	push   -0x58(%ebp)
81007def:	e8 dc f1 ff ff       	call   81006fd0 <memmove>
81007df4:	83 c4 10             	add    $0x10,%esp
81007df7:	e9 f9 02 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007dfc:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81007e00:	0f 84 5b 01 00 00    	je     81007f61 <_realloc_r+0x697>
81007e06:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007e09:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007e0c:	01 d0                	add    %edx,%eax
81007e0e:	89 c2                	mov    %eax,%edx
81007e10:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007e13:	39 c2                	cmp    %eax,%edx
81007e15:	0f 8c 46 01 00 00    	jl     81007f61 <_realloc_r+0x697>
81007e1b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007e1e:	8b 40 0c             	mov    0xc(%eax),%eax
81007e21:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007e24:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007e27:	8b 40 08             	mov    0x8(%eax),%eax
81007e2a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007e2d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007e30:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007e33:	89 50 0c             	mov    %edx,0xc(%eax)
81007e36:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007e39:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007e3c:	89 50 08             	mov    %edx,0x8(%eax)
81007e3f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007e42:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007e45:	8b 45 ac             	mov    -0x54(%ebp),%eax
81007e48:	01 45 f0             	add    %eax,-0x10(%ebp)
81007e4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007e4e:	83 c0 08             	add    $0x8,%eax
81007e51:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007e54:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007e57:	83 e8 04             	sub    $0x4,%eax
81007e5a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81007e5d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81007e61:	0f 87 e1 00 00 00    	ja     81007f48 <_realloc_r+0x67e>
81007e67:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e6a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007e6d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007e70:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007e73:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81007e77:	0f 86 90 00 00 00    	jbe    81007f0d <_realloc_r+0x643>
81007e7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007e80:	8d 42 04             	lea    0x4(%edx),%eax
81007e83:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007e86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007e89:	8d 48 04             	lea    0x4(%eax),%ecx
81007e8c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007e8f:	8b 12                	mov    (%edx),%edx
81007e91:	89 10                	mov    %edx,(%eax)
81007e93:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007e96:	8d 42 04             	lea    0x4(%edx),%eax
81007e99:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007e9c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007e9f:	8d 48 04             	lea    0x4(%eax),%ecx
81007ea2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007ea5:	8b 12                	mov    (%edx),%edx
81007ea7:	89 10                	mov    %edx,(%eax)
81007ea9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81007ead:	76 5e                	jbe    81007f0d <_realloc_r+0x643>
81007eaf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007eb2:	8d 42 04             	lea    0x4(%edx),%eax
81007eb5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007eb8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007ebb:	8d 48 04             	lea    0x4(%eax),%ecx
81007ebe:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007ec1:	8b 12                	mov    (%edx),%edx
81007ec3:	89 10                	mov    %edx,(%eax)
81007ec5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007ec8:	8d 42 04             	lea    0x4(%edx),%eax
81007ecb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007ece:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007ed1:	8d 48 04             	lea    0x4(%eax),%ecx
81007ed4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007ed7:	8b 12                	mov    (%edx),%edx
81007ed9:	89 10                	mov    %edx,(%eax)
81007edb:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81007edf:	76 2c                	jbe    81007f0d <_realloc_r+0x643>
81007ee1:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007ee4:	8d 42 04             	lea    0x4(%edx),%eax
81007ee7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007eea:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007eed:	8d 48 04             	lea    0x4(%eax),%ecx
81007ef0:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007ef3:	8b 12                	mov    (%edx),%edx
81007ef5:	89 10                	mov    %edx,(%eax)
81007ef7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007efa:	8d 42 04             	lea    0x4(%edx),%eax
81007efd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f00:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f03:	8d 48 04             	lea    0x4(%eax),%ecx
81007f06:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f09:	8b 12                	mov    (%edx),%edx
81007f0b:	89 10                	mov    %edx,(%eax)
81007f0d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f10:	8d 42 04             	lea    0x4(%edx),%eax
81007f13:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f16:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f19:	8d 48 04             	lea    0x4(%eax),%ecx
81007f1c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f1f:	8b 12                	mov    (%edx),%edx
81007f21:	89 10                	mov    %edx,(%eax)
81007f23:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007f26:	8d 42 04             	lea    0x4(%edx),%eax
81007f29:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007f2c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f2f:	8d 48 04             	lea    0x4(%eax),%ecx
81007f32:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007f35:	8b 12                	mov    (%edx),%edx
81007f37:	89 10                	mov    %edx,(%eax)
81007f39:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007f3c:	8b 10                	mov    (%eax),%edx
81007f3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007f41:	89 10                	mov    %edx,(%eax)
81007f43:	e9 ad 01 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007f48:	83 ec 04             	sub    $0x4,%esp
81007f4b:	ff 75 9c             	push   -0x64(%ebp)
81007f4e:	ff 75 0c             	push   0xc(%ebp)
81007f51:	ff 75 a8             	push   -0x58(%ebp)
81007f54:	e8 77 f0 ff ff       	call   81006fd0 <memmove>
81007f59:	83 c4 10             	add    $0x10,%esp
81007f5c:	e9 94 01 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007f61:	83 ec 08             	sub    $0x8,%esp
81007f64:	ff 75 10             	push   0x10(%ebp)
81007f67:	ff 75 08             	push   0x8(%ebp)
81007f6a:	e8 9c bb ff ff       	call   81003b0b <_malloc_r>
81007f6f:	83 c4 10             	add    $0x10,%esp
81007f72:	89 45 a8             	mov    %eax,-0x58(%ebp)
81007f75:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81007f79:	75 18                	jne    81007f93 <_realloc_r+0x6c9>
81007f7b:	83 ec 0c             	sub    $0xc,%esp
81007f7e:	ff 75 08             	push   0x8(%ebp)
81007f81:	e8 68 c5 ff ff       	call   810044ee <__malloc_unlock>
81007f86:	83 c4 10             	add    $0x10,%esp
81007f89:	b8 00 00 00 00       	mov    $0x0,%eax
81007f8e:	e9 0f 02 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
81007f93:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007f96:	83 e8 08             	sub    $0x8,%eax
81007f99:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007f9c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007f9f:	8b 40 04             	mov    0x4(%eax),%eax
81007fa2:	83 e0 fe             	and    $0xfffffffe,%eax
81007fa5:	89 c2                	mov    %eax,%edx
81007fa7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007faa:	01 d0                	add    %edx,%eax
81007fac:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81007faf:	75 17                	jne    81007fc8 <_realloc_r+0x6fe>
81007fb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007fb4:	8b 40 04             	mov    0x4(%eax),%eax
81007fb7:	83 e0 fc             	and    $0xfffffffc,%eax
81007fba:	01 45 f0             	add    %eax,-0x10(%ebp)
81007fbd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007fc0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007fc3:	e9 2d 01 00 00       	jmp    810080f5 <_realloc_r+0x82b>
81007fc8:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007fcb:	83 e8 04             	sub    $0x4,%eax
81007fce:	89 45 98             	mov    %eax,-0x68(%ebp)
81007fd1:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81007fd5:	0f 87 de 00 00 00    	ja     810080b9 <_realloc_r+0x7ef>
81007fdb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007fde:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007fe1:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007fe4:	89 45 c8             	mov    %eax,-0x38(%ebp)
81007fe7:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81007feb:	0f 86 90 00 00 00    	jbe    81008081 <_realloc_r+0x7b7>
81007ff1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007ff4:	8d 42 04             	lea    0x4(%edx),%eax
81007ff7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007ffa:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007ffd:	8d 48 04             	lea    0x4(%eax),%ecx
81008000:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008003:	8b 12                	mov    (%edx),%edx
81008005:	89 10                	mov    %edx,(%eax)
81008007:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100800a:	8d 42 04             	lea    0x4(%edx),%eax
8100800d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008010:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008013:	8d 48 04             	lea    0x4(%eax),%ecx
81008016:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008019:	8b 12                	mov    (%edx),%edx
8100801b:	89 10                	mov    %edx,(%eax)
8100801d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81008021:	76 5e                	jbe    81008081 <_realloc_r+0x7b7>
81008023:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008026:	8d 42 04             	lea    0x4(%edx),%eax
81008029:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100802c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100802f:	8d 48 04             	lea    0x4(%eax),%ecx
81008032:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008035:	8b 12                	mov    (%edx),%edx
81008037:	89 10                	mov    %edx,(%eax)
81008039:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100803c:	8d 42 04             	lea    0x4(%edx),%eax
8100803f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008042:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008045:	8d 48 04             	lea    0x4(%eax),%ecx
81008048:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100804b:	8b 12                	mov    (%edx),%edx
8100804d:	89 10                	mov    %edx,(%eax)
8100804f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81008053:	76 2c                	jbe    81008081 <_realloc_r+0x7b7>
81008055:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008058:	8d 42 04             	lea    0x4(%edx),%eax
8100805b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100805e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008061:	8d 48 04             	lea    0x4(%eax),%ecx
81008064:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008067:	8b 12                	mov    (%edx),%edx
81008069:	89 10                	mov    %edx,(%eax)
8100806b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100806e:	8d 42 04             	lea    0x4(%edx),%eax
81008071:	89 45 cc             	mov    %eax,-0x34(%ebp)
81008074:	8b 45 c8             	mov    -0x38(%ebp),%eax
81008077:	8d 48 04             	lea    0x4(%eax),%ecx
8100807a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100807d:	8b 12                	mov    (%edx),%edx
8100807f:	89 10                	mov    %edx,(%eax)
81008081:	8b 55 cc             	mov    -0x34(%ebp),%edx
81008084:	8d 42 04             	lea    0x4(%edx),%eax
81008087:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100808a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100808d:	8d 48 04             	lea    0x4(%eax),%ecx
81008090:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81008093:	8b 12                	mov    (%edx),%edx
81008095:	89 10                	mov    %edx,(%eax)
81008097:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100809a:	8d 42 04             	lea    0x4(%edx),%eax
8100809d:	89 45 cc             	mov    %eax,-0x34(%ebp)
810080a0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080a3:	8d 48 04             	lea    0x4(%eax),%ecx
810080a6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810080a9:	8b 12                	mov    (%edx),%edx
810080ab:	89 10                	mov    %edx,(%eax)
810080ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
810080b0:	8b 10                	mov    (%eax),%edx
810080b2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810080b5:	89 10                	mov    %edx,(%eax)
810080b7:	eb 14                	jmp    810080cd <_realloc_r+0x803>
810080b9:	83 ec 04             	sub    $0x4,%esp
810080bc:	ff 75 98             	push   -0x68(%ebp)
810080bf:	ff 75 0c             	push   0xc(%ebp)
810080c2:	ff 75 a8             	push   -0x58(%ebp)
810080c5:	e8 06 ef ff ff       	call   81006fd0 <memmove>
810080ca:	83 c4 10             	add    $0x10,%esp
810080cd:	83 ec 08             	sub    $0x8,%esp
810080d0:	ff 75 0c             	push   0xc(%ebp)
810080d3:	ff 75 08             	push   0x8(%ebp)
810080d6:	e8 6d 9b ff ff       	call   81001c48 <_free_r>
810080db:	83 c4 10             	add    $0x10,%esp
810080de:	83 ec 0c             	sub    $0xc,%esp
810080e1:	ff 75 08             	push   0x8(%ebp)
810080e4:	e8 05 c4 ff ff       	call   810044ee <__malloc_unlock>
810080e9:	83 c4 10             	add    $0x10,%esp
810080ec:	8b 45 a8             	mov    -0x58(%ebp),%eax
810080ef:	e9 ae 00 00 00       	jmp    810081a2 <_realloc_r+0x8d8>
810080f4:	90                   	nop
810080f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810080f8:	2b 45 bc             	sub    -0x44(%ebp),%eax
810080fb:	89 45 94             	mov    %eax,-0x6c(%ebp)
810080fe:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81008102:	76 5d                	jbe    81008161 <_realloc_r+0x897>
81008104:	8b 55 f4             	mov    -0xc(%ebp),%edx
81008107:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100810a:	01 d0                	add    %edx,%eax
8100810c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100810f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008112:	8b 40 04             	mov    0x4(%eax),%eax
81008115:	83 e0 01             	and    $0x1,%eax
81008118:	0b 45 bc             	or     -0x44(%ebp),%eax
8100811b:	89 c2                	mov    %eax,%edx
8100811d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008120:	89 50 04             	mov    %edx,0x4(%eax)
81008123:	8b 45 94             	mov    -0x6c(%ebp),%eax
81008126:	83 c8 01             	or     $0x1,%eax
81008129:	89 c2                	mov    %eax,%edx
8100812b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100812e:	89 50 04             	mov    %edx,0x4(%eax)
81008131:	8b 55 90             	mov    -0x70(%ebp),%edx
81008134:	8b 45 94             	mov    -0x6c(%ebp),%eax
81008137:	01 d0                	add    %edx,%eax
81008139:	8b 50 04             	mov    0x4(%eax),%edx
8100813c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100813f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81008142:	01 c8                	add    %ecx,%eax
81008144:	83 ca 01             	or     $0x1,%edx
81008147:	89 50 04             	mov    %edx,0x4(%eax)
8100814a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100814d:	83 c0 08             	add    $0x8,%eax
81008150:	83 ec 08             	sub    $0x8,%esp
81008153:	50                   	push   %eax
81008154:	ff 75 08             	push   0x8(%ebp)
81008157:	e8 ec 9a ff ff       	call   81001c48 <_free_r>
8100815c:	83 c4 10             	add    $0x10,%esp
8100815f:	eb 2d                	jmp    8100818e <_realloc_r+0x8c4>
81008161:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008164:	8b 40 04             	mov    0x4(%eax),%eax
81008167:	83 e0 01             	and    $0x1,%eax
8100816a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100816d:	89 c2                	mov    %eax,%edx
8100816f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008172:	89 50 04             	mov    %edx,0x4(%eax)
81008175:	8b 55 f4             	mov    -0xc(%ebp),%edx
81008178:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100817b:	01 d0                	add    %edx,%eax
8100817d:	8b 50 04             	mov    0x4(%eax),%edx
81008180:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81008183:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008186:	01 c8                	add    %ecx,%eax
81008188:	83 ca 01             	or     $0x1,%edx
8100818b:	89 50 04             	mov    %edx,0x4(%eax)
8100818e:	83 ec 0c             	sub    $0xc,%esp
81008191:	ff 75 08             	push   0x8(%ebp)
81008194:	e8 55 c3 ff ff       	call   810044ee <__malloc_unlock>
81008199:	83 c4 10             	add    $0x10,%esp
8100819c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100819f:	83 c0 08             	add    $0x8,%eax
810081a2:	c9                   	leave  
810081a3:	c3                   	ret    

810081a4 <__srget_r>:
810081a4:	55                   	push   %ebp
810081a5:	89 e5                	mov    %esp,%ebp
810081a7:	53                   	push   %ebx
810081a8:	83 ec 14             	sub    $0x14,%esp
810081ab:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810081ae:	8b 45 08             	mov    0x8(%ebp),%eax
810081b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810081b4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810081b8:	74 18                	je     810081d2 <__srget_r+0x2e>
810081ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081bd:	8b 40 38             	mov    0x38(%eax),%eax
810081c0:	85 c0                	test   %eax,%eax
810081c2:	75 0e                	jne    810081d2 <__srget_r+0x2e>
810081c4:	83 ec 0c             	sub    $0xc,%esp
810081c7:	ff 75 f4             	push   -0xc(%ebp)
810081ca:	e8 89 95 ff ff       	call   81001758 <__sinit>
810081cf:	83 c4 10             	add    $0x10,%esp
810081d2:	83 ec 08             	sub    $0x8,%esp
810081d5:	53                   	push   %ebx
810081d6:	ff 75 08             	push   0x8(%ebp)
810081d9:	e8 c3 d1 ff ff       	call   810053a1 <__srefill_r>
810081de:	83 c4 10             	add    $0x10,%esp
810081e1:	85 c0                	test   %eax,%eax
810081e3:	75 18                	jne    810081fd <__srget_r+0x59>
810081e5:	8b 43 04             	mov    0x4(%ebx),%eax
810081e8:	83 e8 01             	sub    $0x1,%eax
810081eb:	89 43 04             	mov    %eax,0x4(%ebx)
810081ee:	8b 03                	mov    (%ebx),%eax
810081f0:	8d 50 01             	lea    0x1(%eax),%edx
810081f3:	89 13                	mov    %edx,(%ebx)
810081f5:	0f b6 00             	movzbl (%eax),%eax
810081f8:	0f b6 c0             	movzbl %al,%eax
810081fb:	eb 05                	jmp    81008202 <__srget_r+0x5e>
810081fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008202:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81008205:	c9                   	leave  
81008206:	c3                   	ret    

81008207 <__srget>:
81008207:	55                   	push   %ebp
81008208:	89 e5                	mov    %esp,%ebp
8100820a:	83 ec 08             	sub    $0x8,%esp
8100820d:	8b 55 08             	mov    0x8(%ebp),%edx
81008210:	a1 44 90 00 81       	mov    0x81009044,%eax
81008215:	83 ec 08             	sub    $0x8,%esp
81008218:	52                   	push   %edx
81008219:	50                   	push   %eax
8100821a:	e8 85 ff ff ff       	call   810081a4 <__srget_r>
8100821f:	83 c4 10             	add    $0x10,%esp
81008222:	c9                   	leave  
81008223:	c3                   	ret    

81008224 <strncmp>:
81008224:	55                   	push   %ebp
81008225:	89 e5                	mov    %esp,%ebp
81008227:	83 ec 10             	sub    $0x10,%esp
8100822a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100822e:	75 0a                	jne    8100823a <strncmp+0x16>
81008230:	b8 00 00 00 00       	mov    $0x0,%eax
81008235:	e9 cb 00 00 00       	jmp    81008305 <strncmp+0xe1>
8100823a:	8b 55 08             	mov    0x8(%ebp),%edx
8100823d:	8b 45 0c             	mov    0xc(%ebp),%eax
81008240:	09 d0                	or     %edx,%eax
81008242:	83 e0 03             	and    $0x3,%eax
81008245:	85 c0                	test   %eax,%eax
81008247:	0f 85 85 00 00 00    	jne    810082d2 <strncmp+0xae>
8100824d:	8b 45 08             	mov    0x8(%ebp),%eax
81008250:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008253:	8b 45 0c             	mov    0xc(%ebp),%eax
81008256:	89 45 f8             	mov    %eax,-0x8(%ebp)
81008259:	eb 36                	jmp    81008291 <strncmp+0x6d>
8100825b:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
8100825f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008263:	74 1d                	je     81008282 <strncmp+0x5e>
81008265:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008268:	8b 00                	mov    (%eax),%eax
8100826a:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008270:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008273:	8b 00                	mov    (%eax),%eax
81008275:	f7 d0                	not    %eax
81008277:	21 d0                	and    %edx,%eax
81008279:	25 80 80 80 80       	and    $0x80808080,%eax
8100827e:	85 c0                	test   %eax,%eax
81008280:	74 07                	je     81008289 <strncmp+0x65>
81008282:	b8 00 00 00 00       	mov    $0x0,%eax
81008287:	eb 7c                	jmp    81008305 <strncmp+0xe1>
81008289:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100828d:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008291:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008295:	76 0e                	jbe    810082a5 <strncmp+0x81>
81008297:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100829a:	8b 10                	mov    (%eax),%edx
8100829c:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100829f:	8b 00                	mov    (%eax),%eax
810082a1:	39 c2                	cmp    %eax,%edx
810082a3:	74 b6                	je     8100825b <strncmp+0x37>
810082a5:	8b 45 fc             	mov    -0x4(%ebp),%eax
810082a8:	89 45 08             	mov    %eax,0x8(%ebp)
810082ab:	8b 45 f8             	mov    -0x8(%ebp),%eax
810082ae:	89 45 0c             	mov    %eax,0xc(%ebp)
810082b1:	eb 1f                	jmp    810082d2 <strncmp+0xae>
810082b3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082b7:	74 0a                	je     810082c3 <strncmp+0x9f>
810082b9:	8b 45 08             	mov    0x8(%ebp),%eax
810082bc:	0f b6 00             	movzbl (%eax),%eax
810082bf:	84 c0                	test   %al,%al
810082c1:	75 07                	jne    810082ca <strncmp+0xa6>
810082c3:	b8 00 00 00 00       	mov    $0x0,%eax
810082c8:	eb 3b                	jmp    81008305 <strncmp+0xe1>
810082ca:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810082ce:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810082d2:	8b 45 10             	mov    0x10(%ebp),%eax
810082d5:	8d 50 ff             	lea    -0x1(%eax),%edx
810082d8:	89 55 10             	mov    %edx,0x10(%ebp)
810082db:	85 c0                	test   %eax,%eax
810082dd:	74 10                	je     810082ef <strncmp+0xcb>
810082df:	8b 45 08             	mov    0x8(%ebp),%eax
810082e2:	0f b6 10             	movzbl (%eax),%edx
810082e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810082e8:	0f b6 00             	movzbl (%eax),%eax
810082eb:	38 c2                	cmp    %al,%dl
810082ed:	74 c4                	je     810082b3 <strncmp+0x8f>
810082ef:	8b 45 08             	mov    0x8(%ebp),%eax
810082f2:	0f b6 00             	movzbl (%eax),%eax
810082f5:	0f b6 d0             	movzbl %al,%edx
810082f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810082fb:	0f b6 00             	movzbl (%eax),%eax
810082fe:	0f b6 c8             	movzbl %al,%ecx
81008301:	89 d0                	mov    %edx,%eax
81008303:	29 c8                	sub    %ecx,%eax
81008305:	c9                   	leave  
81008306:	c3                   	ret    

81008307 <__get_global_locale>:
81008307:	55                   	push   %ebp
81008308:	89 e5                	mov    %esp,%ebp
8100830a:	b8 80 94 00 81       	mov    $0x81009480,%eax
8100830f:	5d                   	pop    %ebp
81008310:	c3                   	ret    

81008311 <__get_current_locale>:
81008311:	55                   	push   %ebp
81008312:	89 e5                	mov    %esp,%ebp
81008314:	e8 ee ff ff ff       	call   81008307 <__get_global_locale>
81008319:	5d                   	pop    %ebp
8100831a:	c3                   	ret    

8100831b <_wcrtomb_r>:
8100831b:	55                   	push   %ebp
8100831c:	89 e5                	mov    %esp,%ebp
8100831e:	83 ec 18             	sub    $0x18,%esp
81008321:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008328:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100832c:	75 21                	jne    8100834f <_wcrtomb_r+0x34>
8100832e:	e8 de ff ff ff       	call   81008311 <__get_current_locale>
81008333:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008339:	ff 75 14             	push   0x14(%ebp)
8100833c:	6a 00                	push   $0x0
8100833e:	8d 55 ea             	lea    -0x16(%ebp),%edx
81008341:	52                   	push   %edx
81008342:	ff 75 08             	push   0x8(%ebp)
81008345:	ff d0                	call   *%eax
81008347:	83 c4 10             	add    $0x10,%esp
8100834a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100834d:	eb 1f                	jmp    8100836e <_wcrtomb_r+0x53>
8100834f:	e8 bd ff ff ff       	call   81008311 <__get_current_locale>
81008354:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100835a:	ff 75 14             	push   0x14(%ebp)
8100835d:	ff 75 10             	push   0x10(%ebp)
81008360:	ff 75 0c             	push   0xc(%ebp)
81008363:	ff 75 08             	push   0x8(%ebp)
81008366:	ff d0                	call   *%eax
81008368:	83 c4 10             	add    $0x10,%esp
8100836b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100836e:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008372:	75 19                	jne    8100838d <_wcrtomb_r+0x72>
81008374:	8b 45 14             	mov    0x14(%ebp),%eax
81008377:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100837d:	8b 45 08             	mov    0x8(%ebp),%eax
81008380:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008386:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100838b:	eb 03                	jmp    81008390 <_wcrtomb_r+0x75>
8100838d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008390:	c9                   	leave  
81008391:	c3                   	ret    

81008392 <wcrtomb>:
81008392:	55                   	push   %ebp
81008393:	89 e5                	mov    %esp,%ebp
81008395:	83 ec 28             	sub    $0x28,%esp
81008398:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100839f:	a1 44 90 00 81       	mov    0x81009044,%eax
810083a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810083a7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810083ab:	75 21                	jne    810083ce <wcrtomb+0x3c>
810083ad:	e8 5f ff ff ff       	call   81008311 <__get_current_locale>
810083b2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083b8:	ff 75 10             	push   0x10(%ebp)
810083bb:	6a 00                	push   $0x0
810083bd:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810083c0:	52                   	push   %edx
810083c1:	ff 75 f0             	push   -0x10(%ebp)
810083c4:	ff d0                	call   *%eax
810083c6:	83 c4 10             	add    $0x10,%esp
810083c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083cc:	eb 1f                	jmp    810083ed <wcrtomb+0x5b>
810083ce:	e8 3e ff ff ff       	call   81008311 <__get_current_locale>
810083d3:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083d9:	ff 75 10             	push   0x10(%ebp)
810083dc:	ff 75 0c             	push   0xc(%ebp)
810083df:	ff 75 08             	push   0x8(%ebp)
810083e2:	ff 75 f0             	push   -0x10(%ebp)
810083e5:	ff d0                	call   *%eax
810083e7:	83 c4 10             	add    $0x10,%esp
810083ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083ed:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810083f1:	75 19                	jne    8100840c <wcrtomb+0x7a>
810083f3:	8b 45 10             	mov    0x10(%ebp),%eax
810083f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810083fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810083ff:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008405:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100840a:	eb 03                	jmp    8100840f <wcrtomb+0x7d>
8100840c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100840f:	c9                   	leave  
81008410:	c3                   	ret    

81008411 <__get_global_locale>:
81008411:	55                   	push   %ebp
81008412:	89 e5                	mov    %esp,%ebp
81008414:	b8 80 94 00 81       	mov    $0x81009480,%eax
81008419:	5d                   	pop    %ebp
8100841a:	c3                   	ret    

8100841b <__get_current_locale>:
8100841b:	55                   	push   %ebp
8100841c:	89 e5                	mov    %esp,%ebp
8100841e:	e8 ee ff ff ff       	call   81008411 <__get_global_locale>
81008423:	5d                   	pop    %ebp
81008424:	c3                   	ret    

81008425 <_wctomb_r>:
81008425:	55                   	push   %ebp
81008426:	89 e5                	mov    %esp,%ebp
81008428:	83 ec 08             	sub    $0x8,%esp
8100842b:	e8 eb ff ff ff       	call   8100841b <__get_current_locale>
81008430:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81008436:	ff 75 14             	push   0x14(%ebp)
81008439:	ff 75 10             	push   0x10(%ebp)
8100843c:	ff 75 0c             	push   0xc(%ebp)
8100843f:	ff 75 08             	push   0x8(%ebp)
81008442:	ff d0                	call   *%eax
81008444:	83 c4 10             	add    $0x10,%esp
81008447:	c9                   	leave  
81008448:	c3                   	ret    

81008449 <__ascii_wctomb>:
81008449:	55                   	push   %ebp
8100844a:	89 e5                	mov    %esp,%ebp
8100844c:	83 ec 10             	sub    $0x10,%esp
8100844f:	8b 45 10             	mov    0x10(%ebp),%eax
81008452:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008455:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81008459:	75 07                	jne    81008462 <__ascii_wctomb+0x19>
8100845b:	b8 00 00 00 00       	mov    $0x0,%eax
81008460:	eb 28                	jmp    8100848a <__ascii_wctomb+0x41>
81008462:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81008469:	76 10                	jbe    8100847b <__ascii_wctomb+0x32>
8100846b:	8b 45 08             	mov    0x8(%ebp),%eax
8100846e:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008474:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008479:	eb 0f                	jmp    8100848a <__ascii_wctomb+0x41>
8100847b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100847e:	89 c2                	mov    %eax,%edx
81008480:	8b 45 0c             	mov    0xc(%ebp),%eax
81008483:	88 10                	mov    %dl,(%eax)
81008485:	b8 01 00 00 00       	mov    $0x1,%eax
8100848a:	c9                   	leave  
8100848b:	c3                   	ret    

8100848c <__env_lock>:
8100848c:	55                   	push   %ebp
8100848d:	89 e5                	mov    %esp,%ebp
8100848f:	90                   	nop
81008490:	5d                   	pop    %ebp
81008491:	c3                   	ret    

81008492 <__env_unlock>:
81008492:	55                   	push   %ebp
81008493:	89 e5                	mov    %esp,%ebp
81008495:	90                   	nop
81008496:	5d                   	pop    %ebp
81008497:	c3                   	ret    
