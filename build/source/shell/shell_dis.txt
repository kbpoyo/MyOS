
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000079

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00004110 memsz 0x00004390 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000388f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000016  81003890  81003890  00004890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  810038c0  810038c0  000048c0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000270  81004120  81004120  00005110  2**5
                  ALLOC
  4 .debug_info   00012217  00000000  00000000  00005110  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 0000429c  00000000  00000000  00017327  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000478  00000000  00000000  0001b5c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   0000273f  00000000  00000000  0001ba40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000e24  00000000  00000000  0001e17f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000b26  00000000  00000000  0001efa3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0001fac9  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000c88  00000000  00000000  0001fb08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000022  00000000  00000000  00020790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81004120 l     O .bss	00000200 cmd_buf
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
810038c0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000696 l       .text	00000000 L5
810006ce l       .text	00000000 L15
810006a0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810006d9 l     F .text	000000ad std
81000786 l     F .text	0000001b stdin_init
810007a1 l     F .text	0000001b stdout_init
810007bc l     F .text	0000001b stderr_init
81004320 l     O .bss	00000004 __sfp_recursive_mutex
81004324 l     O .bss	00000004 __sinit_recursive_mutex
81000a7f l     F .text	0000000a __fp_lock
81000a89 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
8100104c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001b9d l       .text	00000000 L20
81001b54 l       .text	00000000 L5
81001b9a l       .text	00000000 L15
81001b60 l       .text	00000000 L8
81001b81 l       .text	00000000 L9
81001b90 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81004388 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
810025eb l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100384f g     F .text	00000040 _isatty_r
81003675 g     F .text	00000037 cleanup_glue
810004e3 g     F .text	000000d6 _puts_r
81003469 g     F .text	00000046 _lseek_r
810001c2 g     F .text	0000001b yield
81002902 g     F .text	0000004a __sseek
810009ce g     F .text	00000099 __sinit
810007d7 g     F .text	0000006f __sfmoreglue
81001d0b g     F .text	00000006 __malloc_unlock
81001bf0 g       .text	00000000 memmove
810009b4 g     F .text	0000001a _cleanup
8100380c g     F .text	00000043 _fstat_r
8100438c g     O .bss	00000004 errno
81000638 g     F .text	0000001d __srget
8100289d g     F .text	0000000a __seofread
810004c7 g     F .text	0000001c gets
81000195 g     F .text	0000002d execve
81000137 g     F .text	0000001b getpid
81001ba8 g       .text	00000000 memcpy
81000993 g     F .text	00000021 _cleanup_r
810005b9 g     F .text	0000001c puts
810002ac g     F .text	00000021 isatty
81000413 g     F .text	0000000a __getreent
81004340 g     O .bss	00000004 __malloc_top_pad
81004120 g       .bss	00000000 __bss_start__
81000adb g     F .text	0000049e __sfvwrite_r
81002819 g     F .text	00000040 _sbrk_r
8100362f g     F .text	00000046 _read_r
81002b52 g     F .text	00000107 _fclose_r
81002ef4 g     F .text	00000039 fflush
81004344 g     O .bss	00000004 __malloc_max_sbrked_mem
8100027f g     F .text	0000002d lseek
810038a0 g     O .rodata	00000004 _global_impure_ptr
81001d11 g     F .text	000008da _realloc_r
81000a93 g     F .text	00000024 __fp_lock_all
810036ac g     F .text	00000160 _reclaim_reent
81000231 g     F .text	0000002d write
810002cd g     F .text	00000027 fstat
810000c1 g     F .text	0000004c sys_call
81000a67 g     F .text	00000006 __sfp_lock_acquire
81001b10 g       .text	00000000 memchr
81004390 g       .bss	00000000 __bss_end__
81002f2d g     F .text	000003db _free_r
810005d5 g     F .text	00000063 __srget_r
8100410c g     O .data	00000004 __malloc_sbrk_base
81000079 g       .text	00000000 _start
8100041d g     F .text	000000aa _gets_r
81000204 g     F .text	0000002d read
81004360 g     O .bss	00000028 __malloc_current_mallinfo
81002b12 g     F .text	00000040 _close_r
81000336 g     F .text	000000b8 _fwrite_r
8100017a g     F .text	0000001b fork
810029b7 g     F .text	0000015b __swsetup_r
81000846 g     F .text	0000014d __sfp
81003d00 g     O .data	00000408 __malloc_av_
81000a79 g     F .text	00000006 __sinit_lock_release
81002859 g     F .text	00000044 __sread
81001d05 g     F .text	00000006 __malloc_lock
810002f4 g     F .text	00000021 sbrk
81002e9c g     F .text	00000058 _fflush_r
81000089 g     F .text	00000038 cstart
81001c7d g       .text	00000000 memset
81000000 g     F .text	00000079 main
81004348 g     O .bss	00000004 __malloc_max_total_mem
8100294c g     F .text	00000025 __sclose
81002c59 g     F .text	0000001d fclose
810012df g     F .text	00000822 _malloc_r
81000f79 g     F .text	00000068 _fwalk
81003308 g     F .text	00000161 _malloc_trim_r
81000315 g     F .text	00000021 dup
81002971 g     F .text	00000046 _write_r
81003ce4 g     O .data	00000004 _impure_ptr
81002c76 g     F .text	00000226 __sflush_r
81002618 g     F .text	00000201 __srefill_r
81000ab7 g     F .text	00000024 __fp_unlock_all
81000152 g     F .text	00000028 print_msg
8100359c g     F .text	00000093 __swhatbuf_r
810003ee g     F .text	00000025 fwrite
810028a7 g     F .text	0000005b __swrite
81004108 g     O .data	00000004 __malloc_trim_threshold
81000fe1 g     F .text	0000006b _fwalk_reent
81000a6d g     F .text	00000006 __sfp_lock_release
810034af g     F .text	000000ed __smakebuf_r
81000660 g       .text	00000000 strlen
810001dd g     F .text	00000027 open
8100010d g     F .text	0000002a msleep
8100025e g     F .text	00000021 close
81000a73 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
#include <stdio.h>


static char cmd_buf[512];

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp
    if (pid > 0) printf("parent pid=%d\n", pid);
    else printf("chiled pid=%d\n", pid);

#endif

    open("tty:0", 0);
81000011:	83 ec 08             	sub    $0x8,%esp
81000014:	6a 00                	push   $0x0
81000016:	68 90 38 00 81       	push   $0x81003890
8100001b:	e8 bd 01 00 00       	call   810001dd <open>
81000020:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000023:	83 ec 0c             	sub    $0xc,%esp
81000026:	6a 00                	push   $0x0
81000028:	e8 e8 02 00 00       	call   81000315 <dup>
8100002d:	83 c4 10             	add    $0x10,%esp
    dup(0);
81000030:	83 ec 0c             	sub    $0xc,%esp
81000033:	6a 00                	push   $0x0
81000035:	e8 db 02 00 00       	call   81000315 <dup>
8100003a:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, "error\n");
8100003d:	e8 d1 03 00 00       	call   81000413 <__getreent>
81000042:	8b 40 0c             	mov    0xc(%eax),%eax
81000045:	50                   	push   %eax
81000046:	6a 06                	push   $0x6
81000048:	6a 01                	push   $0x1
8100004a:	68 96 38 00 81       	push   $0x81003896
8100004f:	e8 9a 03 00 00       	call   810003ee <fwrite>
81000054:	83 c4 10             	add    $0x10,%esp
    // printf("hello from shell\n");

    for (;;) {
        //printf("shell pid=%d\n", getpid());
        //msleep(1000);
        gets(cmd_buf);
81000057:	83 ec 0c             	sub    $0xc,%esp
8100005a:	68 20 41 00 81       	push   $0x81004120
8100005f:	e8 63 04 00 00       	call   810004c7 <gets>
81000064:	83 c4 10             	add    $0x10,%esp
        puts(cmd_buf);
81000067:	83 ec 0c             	sub    $0xc,%esp
8100006a:	68 20 41 00 81       	push   $0x81004120
8100006f:	e8 45 05 00 00       	call   810005b9 <puts>
81000074:	83 c4 10             	add    $0x10,%esp
        gets(cmd_buf);
81000077:	eb de                	jmp    81000057 <main+0x57>

81000079 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000079:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100007c:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100007e:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000080:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000082:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000084:	e9 00 00 00 00       	jmp    81000089 <cstart>

81000089 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000089:	55                   	push   %ebp
8100008a:	89 e5                	mov    %esp,%ebp
8100008c:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100008f:	c7 45 f4 20 41 00 81 	movl   $0x81004120,-0xc(%ebp)
    while (start < __bss_end__) {
81000096:	eb 0c                	jmp    810000a4 <cstart+0x1b>
        *(start++) = 0;
81000098:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100009b:	8d 50 01             	lea    0x1(%eax),%edx
8100009e:	89 55 f4             	mov    %edx,-0xc(%ebp)
810000a1:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810000a4:	81 7d f4 90 43 00 81 	cmpl   $0x81004390,-0xc(%ebp)
810000ab:	72 eb                	jb     81000098 <cstart+0xf>
    }
    
    main(argc, argv);
810000ad:	83 ec 08             	sub    $0x8,%esp
810000b0:	ff 75 0c             	push   0xc(%ebp)
810000b3:	ff 75 08             	push   0x8(%ebp)
810000b6:	e8 45 ff ff ff       	call   81000000 <main>
810000bb:	83 c4 10             	add    $0x10,%esp
}
810000be:	90                   	nop
810000bf:	c9                   	leave  
810000c0:	c3                   	ret    

810000c1 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810000c1:	55                   	push   %ebp
810000c2:	89 e5                	mov    %esp,%ebp
810000c4:	57                   	push   %edi
810000c5:	56                   	push   %esi
810000c6:	53                   	push   %ebx
810000c7:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810000ca:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000d1:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810000d8:	8b 45 08             	mov    0x8(%ebp),%eax
810000db:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810000de:	8b 55 08             	mov    0x8(%ebp),%edx
810000e1:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810000e4:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000e7:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810000ea:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000ed:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810000f0:	8b 75 08             	mov    0x8(%ebp),%esi
810000f3:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810000f5:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000f8:	50                   	push   %eax
810000f9:	52                   	push   %edx
810000fa:	51                   	push   %ecx
810000fb:	53                   	push   %ebx
810000fc:	56                   	push   %esi
810000fd:	ff 1f                	lcall  *(%edi)
810000ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000102:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000105:	83 c4 10             	add    $0x10,%esp
81000108:	5b                   	pop    %ebx
81000109:	5e                   	pop    %esi
8100010a:	5f                   	pop    %edi
8100010b:	5d                   	pop    %ebp
8100010c:	c3                   	ret    

8100010d <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
8100010d:	55                   	push   %ebp
8100010e:	89 e5                	mov    %esp,%ebp
81000110:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
81000113:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000117:	7e 1b                	jle    81000134 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000119:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000120:	8b 45 08             	mov    0x8(%ebp),%eax
81000123:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000126:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000129:	50                   	push   %eax
8100012a:	e8 92 ff ff ff       	call   810000c1 <sys_call>
8100012f:	83 c4 04             	add    $0x4,%esp
81000132:	eb 01                	jmp    81000135 <msleep+0x28>
    if (ms <= 0) return;
81000134:	90                   	nop

}
81000135:	c9                   	leave  
81000136:	c3                   	ret    

81000137 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000137:	55                   	push   %ebp
81000138:	89 e5                	mov    %esp,%ebp
8100013a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
8100013d:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000144:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000147:	50                   	push   %eax
81000148:	e8 74 ff ff ff       	call   810000c1 <sys_call>
8100014d:	83 c4 04             	add    $0x4,%esp
}
81000150:	c9                   	leave  
81000151:	c3                   	ret    

81000152 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000152:	55                   	push   %ebp
81000153:	89 e5                	mov    %esp,%ebp
81000155:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000158:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100015f:	8b 45 08             	mov    0x8(%ebp),%eax
81000162:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000165:	8b 45 0c             	mov    0xc(%ebp),%eax
81000168:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
8100016b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100016e:	50                   	push   %eax
8100016f:	e8 4d ff ff ff       	call   810000c1 <sys_call>
81000174:	83 c4 04             	add    $0x4,%esp
}
81000177:	90                   	nop
81000178:	c9                   	leave  
81000179:	c3                   	ret    

8100017a <fork>:

int fork (void) {
8100017a:	55                   	push   %ebp
8100017b:	89 e5                	mov    %esp,%ebp
8100017d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000180:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000187:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100018a:	50                   	push   %eax
8100018b:	e8 31 ff ff ff       	call   810000c1 <sys_call>
81000190:	83 c4 04             	add    $0x4,%esp
}
81000193:	c9                   	leave  
81000194:	c3                   	ret    

81000195 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000195:	55                   	push   %ebp
81000196:	89 e5                	mov    %esp,%ebp
81000198:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
8100019b:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810001a2:	8b 45 08             	mov    0x8(%ebp),%eax
810001a5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810001a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810001ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810001ae:	8b 45 10             	mov    0x10(%ebp),%eax
810001b1:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810001b4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001b7:	50                   	push   %eax
810001b8:	e8 04 ff ff ff       	call   810000c1 <sys_call>
810001bd:	83 c4 04             	add    $0x4,%esp
}
810001c0:	c9                   	leave  
810001c1:	c3                   	ret    

810001c2 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810001c2:	55                   	push   %ebp
810001c3:	89 e5                	mov    %esp,%ebp
810001c5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810001c8:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810001cf:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001d2:	50                   	push   %eax
810001d3:	e8 e9 fe ff ff       	call   810000c1 <sys_call>
810001d8:	83 c4 04             	add    $0x4,%esp
}
810001db:	c9                   	leave  
810001dc:	c3                   	ret    

810001dd <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810001dd:	55                   	push   %ebp
810001de:	89 e5                	mov    %esp,%ebp
810001e0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810001e3:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810001ea:	8b 45 08             	mov    0x8(%ebp),%eax
810001ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810001f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810001f3:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810001f6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001f9:	50                   	push   %eax
810001fa:	e8 c2 fe ff ff       	call   810000c1 <sys_call>
810001ff:	83 c4 04             	add    $0x4,%esp
}
81000202:	c9                   	leave  
81000203:	c3                   	ret    

81000204 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000204:	55                   	push   %ebp
81000205:	89 e5                	mov    %esp,%ebp
81000207:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
8100020a:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000211:	8b 45 08             	mov    0x8(%ebp),%eax
81000214:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000217:	8b 45 0c             	mov    0xc(%ebp),%eax
8100021a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100021d:	8b 45 10             	mov    0x10(%ebp),%eax
81000220:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000223:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000226:	50                   	push   %eax
81000227:	e8 95 fe ff ff       	call   810000c1 <sys_call>
8100022c:	83 c4 04             	add    $0x4,%esp
}
8100022f:	c9                   	leave  
81000230:	c3                   	ret    

81000231 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000231:	55                   	push   %ebp
81000232:	89 e5                	mov    %esp,%ebp
81000234:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000237:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
8100023e:	8b 45 08             	mov    0x8(%ebp),%eax
81000241:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000244:	8b 45 0c             	mov    0xc(%ebp),%eax
81000247:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100024a:	8b 45 10             	mov    0x10(%ebp),%eax
8100024d:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000250:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000253:	50                   	push   %eax
81000254:	e8 68 fe ff ff       	call   810000c1 <sys_call>
81000259:	83 c4 04             	add    $0x4,%esp
}
8100025c:	c9                   	leave  
8100025d:	c3                   	ret    

8100025e <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
8100025e:	55                   	push   %ebp
8100025f:	89 e5                	mov    %esp,%ebp
81000261:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000264:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
8100026b:	8b 45 08             	mov    0x8(%ebp),%eax
8100026e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000271:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000274:	50                   	push   %eax
81000275:	e8 47 fe ff ff       	call   810000c1 <sys_call>
8100027a:	83 c4 04             	add    $0x4,%esp
}
8100027d:	c9                   	leave  
8100027e:	c3                   	ret    

8100027f <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8100027f:	55                   	push   %ebp
81000280:	89 e5                	mov    %esp,%ebp
81000282:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000285:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
8100028c:	8b 45 08             	mov    0x8(%ebp),%eax
8100028f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000292:	8b 45 0c             	mov    0xc(%ebp),%eax
81000295:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000298:	8b 45 10             	mov    0x10(%ebp),%eax
8100029b:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100029e:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002a1:	50                   	push   %eax
810002a2:	e8 1a fe ff ff       	call   810000c1 <sys_call>
810002a7:	83 c4 04             	add    $0x4,%esp
}
810002aa:	c9                   	leave  
810002ab:	c3                   	ret    

810002ac <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810002ac:	55                   	push   %ebp
810002ad:	89 e5                	mov    %esp,%ebp
810002af:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810002b2:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810002b9:	8b 45 08             	mov    0x8(%ebp),%eax
810002bc:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810002bf:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c2:	50                   	push   %eax
810002c3:	e8 f9 fd ff ff       	call   810000c1 <sys_call>
810002c8:	83 c4 04             	add    $0x4,%esp
}
810002cb:	c9                   	leave  
810002cc:	c3                   	ret    

810002cd <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810002cd:	55                   	push   %ebp
810002ce:	89 e5                	mov    %esp,%ebp
810002d0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810002d3:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810002da:	8b 45 08             	mov    0x8(%ebp),%eax
810002dd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810002e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810002e3:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002e6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e9:	50                   	push   %eax
810002ea:	e8 d2 fd ff ff       	call   810000c1 <sys_call>
810002ef:	83 c4 04             	add    $0x4,%esp
}
810002f2:	c9                   	leave  
810002f3:	c3                   	ret    

810002f4 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810002f4:	55                   	push   %ebp
810002f5:	89 e5                	mov    %esp,%ebp
810002f7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810002fa:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000301:	8b 45 08             	mov    0x8(%ebp),%eax
81000304:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000307:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100030a:	50                   	push   %eax
8100030b:	e8 b1 fd ff ff       	call   810000c1 <sys_call>
81000310:	83 c4 04             	add    $0x4,%esp
}
81000313:	c9                   	leave  
81000314:	c3                   	ret    

81000315 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000315:	55                   	push   %ebp
81000316:	89 e5                	mov    %esp,%ebp
81000318:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
8100031b:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000322:	8b 45 08             	mov    0x8(%ebp),%eax
81000325:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000328:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100032b:	50                   	push   %eax
8100032c:	e8 90 fd ff ff       	call   810000c1 <sys_call>
81000331:	83 c4 04             	add    $0x4,%esp
81000334:	c9                   	leave  
81000335:	c3                   	ret    

81000336 <_fwrite_r>:
81000336:	55                   	push   %ebp
81000337:	89 e5                	mov    %esp,%ebp
81000339:	83 ec 28             	sub    $0x28,%esp
8100033c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100033f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000342:	8b 45 14             	mov    0x14(%ebp),%eax
81000345:	0f af 45 10          	imul   0x10(%ebp),%eax
81000349:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100034c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100034f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000352:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000355:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000358:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100035b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100035e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81000365:	8b 45 08             	mov    0x8(%ebp),%eax
81000368:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100036b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100036f:	74 18                	je     81000389 <_fwrite_r+0x53>
81000371:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000374:	8b 40 38             	mov    0x38(%eax),%eax
81000377:	85 c0                	test   %eax,%eax
81000379:	75 0e                	jne    81000389 <_fwrite_r+0x53>
8100037b:	83 ec 0c             	sub    $0xc,%esp
8100037e:	ff 75 f0             	push   -0x10(%ebp)
81000381:	e8 48 06 00 00       	call   810009ce <__sinit>
81000386:	83 c4 10             	add    $0x10,%esp
81000389:	8b 45 18             	mov    0x18(%ebp),%eax
8100038c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000390:	98                   	cwtl   
81000391:	25 00 20 00 00       	and    $0x2000,%eax
81000396:	85 c0                	test   %eax,%eax
81000398:	75 24                	jne    810003be <_fwrite_r+0x88>
8100039a:	8b 45 18             	mov    0x18(%ebp),%eax
8100039d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003a1:	80 cc 20             	or     $0x20,%ah
810003a4:	89 c2                	mov    %eax,%edx
810003a6:	8b 45 18             	mov    0x18(%ebp),%eax
810003a9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810003ad:	8b 45 18             	mov    0x18(%ebp),%eax
810003b0:	8b 40 64             	mov    0x64(%eax),%eax
810003b3:	80 e4 df             	and    $0xdf,%ah
810003b6:	89 c2                	mov    %eax,%edx
810003b8:	8b 45 18             	mov    0x18(%ebp),%eax
810003bb:	89 50 64             	mov    %edx,0x64(%eax)
810003be:	83 ec 04             	sub    $0x4,%esp
810003c1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810003c4:	50                   	push   %eax
810003c5:	ff 75 18             	push   0x18(%ebp)
810003c8:	ff 75 08             	push   0x8(%ebp)
810003cb:	e8 0b 07 00 00       	call   81000adb <__sfvwrite_r>
810003d0:	83 c4 10             	add    $0x10,%esp
810003d3:	85 c0                	test   %eax,%eax
810003d5:	75 05                	jne    810003dc <_fwrite_r+0xa6>
810003d7:	8b 45 14             	mov    0x14(%ebp),%eax
810003da:	eb 10                	jmp    810003ec <_fwrite_r+0xb6>
810003dc:	8b 55 ec             	mov    -0x14(%ebp),%edx
810003df:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003e2:	29 d0                	sub    %edx,%eax
810003e4:	ba 00 00 00 00       	mov    $0x0,%edx
810003e9:	f7 75 10             	divl   0x10(%ebp)
810003ec:	c9                   	leave  
810003ed:	c3                   	ret    

810003ee <fwrite>:
810003ee:	55                   	push   %ebp
810003ef:	89 e5                	mov    %esp,%ebp
810003f1:	83 ec 08             	sub    $0x8,%esp
810003f4:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
810003f9:	83 ec 0c             	sub    $0xc,%esp
810003fc:	ff 75 14             	push   0x14(%ebp)
810003ff:	ff 75 10             	push   0x10(%ebp)
81000402:	ff 75 0c             	push   0xc(%ebp)
81000405:	ff 75 08             	push   0x8(%ebp)
81000408:	50                   	push   %eax
81000409:	e8 28 ff ff ff       	call   81000336 <_fwrite_r>
8100040e:	83 c4 20             	add    $0x20,%esp
81000411:	c9                   	leave  
81000412:	c3                   	ret    

81000413 <__getreent>:
81000413:	55                   	push   %ebp
81000414:	89 e5                	mov    %esp,%ebp
81000416:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
8100041b:	5d                   	pop    %ebp
8100041c:	c3                   	ret    

8100041d <_gets_r>:
8100041d:	55                   	push   %ebp
8100041e:	89 e5                	mov    %esp,%ebp
81000420:	56                   	push   %esi
81000421:	53                   	push   %ebx
81000422:	83 ec 10             	sub    $0x10,%esp
81000425:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000428:	8b 45 08             	mov    0x8(%ebp),%eax
8100042b:	8b 40 04             	mov    0x4(%eax),%eax
8100042e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000431:	8b 45 08             	mov    0x8(%ebp),%eax
81000434:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000437:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100043b:	74 34                	je     81000471 <_gets_r+0x54>
8100043d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000440:	8b 40 38             	mov    0x38(%eax),%eax
81000443:	85 c0                	test   %eax,%eax
81000445:	75 2a                	jne    81000471 <_gets_r+0x54>
81000447:	83 ec 0c             	sub    $0xc,%esp
8100044a:	ff 75 f0             	push   -0x10(%ebp)
8100044d:	e8 7c 05 00 00       	call   810009ce <__sinit>
81000452:	83 c4 10             	add    $0x10,%esp
81000455:	eb 1a                	jmp    81000471 <_gets_r+0x54>
81000457:	83 fe ff             	cmp    $0xffffffff,%esi
8100045a:	75 0c                	jne    81000468 <_gets_r+0x4b>
8100045c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
8100045f:	75 58                	jne    810004b9 <_gets_r+0x9c>
81000461:	b8 00 00 00 00       	mov    $0x0,%eax
81000466:	eb 58                	jmp    810004c0 <_gets_r+0xa3>
81000468:	89 d8                	mov    %ebx,%eax
8100046a:	8d 58 01             	lea    0x1(%eax),%ebx
8100046d:	89 f2                	mov    %esi,%edx
8100046f:	88 10                	mov    %dl,(%eax)
81000471:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000474:	8b 40 04             	mov    0x4(%eax),%eax
81000477:	8d 50 ff             	lea    -0x1(%eax),%edx
8100047a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100047d:	89 50 04             	mov    %edx,0x4(%eax)
81000480:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000483:	8b 40 04             	mov    0x4(%eax),%eax
81000486:	85 c0                	test   %eax,%eax
81000488:	79 13                	jns    8100049d <_gets_r+0x80>
8100048a:	83 ec 08             	sub    $0x8,%esp
8100048d:	ff 75 f4             	push   -0xc(%ebp)
81000490:	ff 75 08             	push   0x8(%ebp)
81000493:	e8 3d 01 00 00       	call   810005d5 <__srget_r>
81000498:	83 c4 10             	add    $0x10,%esp
8100049b:	eb 13                	jmp    810004b0 <_gets_r+0x93>
8100049d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004a0:	8b 00                	mov    (%eax),%eax
810004a2:	8d 48 01             	lea    0x1(%eax),%ecx
810004a5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810004a8:	89 0a                	mov    %ecx,(%edx)
810004aa:	0f b6 00             	movzbl (%eax),%eax
810004ad:	0f b6 c0             	movzbl %al,%eax
810004b0:	89 c6                	mov    %eax,%esi
810004b2:	83 fe 0a             	cmp    $0xa,%esi
810004b5:	75 a0                	jne    81000457 <_gets_r+0x3a>
810004b7:	eb 01                	jmp    810004ba <_gets_r+0x9d>
810004b9:	90                   	nop
810004ba:	c6 03 00             	movb   $0x0,(%ebx)
810004bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810004c0:	8d 65 f8             	lea    -0x8(%ebp),%esp
810004c3:	5b                   	pop    %ebx
810004c4:	5e                   	pop    %esi
810004c5:	5d                   	pop    %ebp
810004c6:	c3                   	ret    

810004c7 <gets>:
810004c7:	55                   	push   %ebp
810004c8:	89 e5                	mov    %esp,%ebp
810004ca:	83 ec 08             	sub    $0x8,%esp
810004cd:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
810004d2:	83 ec 08             	sub    $0x8,%esp
810004d5:	ff 75 08             	push   0x8(%ebp)
810004d8:	50                   	push   %eax
810004d9:	e8 3f ff ff ff       	call   8100041d <_gets_r>
810004de:	83 c4 10             	add    $0x10,%esp
810004e1:	c9                   	leave  
810004e2:	c3                   	ret    

810004e3 <_puts_r>:
810004e3:	55                   	push   %ebp
810004e4:	89 e5                	mov    %esp,%ebp
810004e6:	83 ec 38             	sub    $0x38,%esp
810004e9:	83 ec 0c             	sub    $0xc,%esp
810004ec:	ff 75 0c             	push   0xc(%ebp)
810004ef:	e8 6c 01 00 00       	call   81000660 <strlen>
810004f4:	83 c4 10             	add    $0x10,%esp
810004f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810004fd:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000500:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000503:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000506:	c7 45 d4 a4 38 00 81 	movl   $0x810038a4,-0x2c(%ebp)
8100050d:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81000514:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000517:	83 c0 01             	add    $0x1,%eax
8100051a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100051d:	8d 45 cc             	lea    -0x34(%ebp),%eax
81000520:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000523:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100052a:	8b 45 08             	mov    0x8(%ebp),%eax
8100052d:	8b 40 08             	mov    0x8(%eax),%eax
81000530:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000533:	8b 45 08             	mov    0x8(%ebp),%eax
81000536:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000539:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100053d:	74 18                	je     81000557 <_puts_r+0x74>
8100053f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000542:	8b 40 38             	mov    0x38(%eax),%eax
81000545:	85 c0                	test   %eax,%eax
81000547:	75 0e                	jne    81000557 <_puts_r+0x74>
81000549:	83 ec 0c             	sub    $0xc,%esp
8100054c:	ff 75 ec             	push   -0x14(%ebp)
8100054f:	e8 7a 04 00 00       	call   810009ce <__sinit>
81000554:	83 c4 10             	add    $0x10,%esp
81000557:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100055a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100055e:	98                   	cwtl   
8100055f:	25 00 20 00 00       	and    $0x2000,%eax
81000564:	85 c0                	test   %eax,%eax
81000566:	75 24                	jne    8100058c <_puts_r+0xa9>
81000568:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100056b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100056f:	80 cc 20             	or     $0x20,%ah
81000572:	89 c2                	mov    %eax,%edx
81000574:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000577:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100057b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100057e:	8b 40 64             	mov    0x64(%eax),%eax
81000581:	80 e4 df             	and    $0xdf,%ah
81000584:	89 c2                	mov    %eax,%edx
81000586:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000589:	89 50 64             	mov    %edx,0x64(%eax)
8100058c:	83 ec 04             	sub    $0x4,%esp
8100058f:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000592:	50                   	push   %eax
81000593:	ff 75 f0             	push   -0x10(%ebp)
81000596:	ff 75 08             	push   0x8(%ebp)
81000599:	e8 3d 05 00 00       	call   81000adb <__sfvwrite_r>
8100059e:	83 c4 10             	add    $0x10,%esp
810005a1:	85 c0                	test   %eax,%eax
810005a3:	74 07                	je     810005ac <_puts_r+0xc9>
810005a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005aa:	eb 05                	jmp    810005b1 <_puts_r+0xce>
810005ac:	b8 0a 00 00 00       	mov    $0xa,%eax
810005b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810005b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810005b7:	c9                   	leave  
810005b8:	c3                   	ret    

810005b9 <puts>:
810005b9:	55                   	push   %ebp
810005ba:	89 e5                	mov    %esp,%ebp
810005bc:	83 ec 08             	sub    $0x8,%esp
810005bf:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
810005c4:	83 ec 08             	sub    $0x8,%esp
810005c7:	ff 75 08             	push   0x8(%ebp)
810005ca:	50                   	push   %eax
810005cb:	e8 13 ff ff ff       	call   810004e3 <_puts_r>
810005d0:	83 c4 10             	add    $0x10,%esp
810005d3:	c9                   	leave  
810005d4:	c3                   	ret    

810005d5 <__srget_r>:
810005d5:	55                   	push   %ebp
810005d6:	89 e5                	mov    %esp,%ebp
810005d8:	53                   	push   %ebx
810005d9:	83 ec 14             	sub    $0x14,%esp
810005dc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810005df:	8b 45 08             	mov    0x8(%ebp),%eax
810005e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005e5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005e9:	74 18                	je     81000603 <__srget_r+0x2e>
810005eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005ee:	8b 40 38             	mov    0x38(%eax),%eax
810005f1:	85 c0                	test   %eax,%eax
810005f3:	75 0e                	jne    81000603 <__srget_r+0x2e>
810005f5:	83 ec 0c             	sub    $0xc,%esp
810005f8:	ff 75 f4             	push   -0xc(%ebp)
810005fb:	e8 ce 03 00 00       	call   810009ce <__sinit>
81000600:	83 c4 10             	add    $0x10,%esp
81000603:	83 ec 08             	sub    $0x8,%esp
81000606:	53                   	push   %ebx
81000607:	ff 75 08             	push   0x8(%ebp)
8100060a:	e8 09 20 00 00       	call   81002618 <__srefill_r>
8100060f:	83 c4 10             	add    $0x10,%esp
81000612:	85 c0                	test   %eax,%eax
81000614:	75 18                	jne    8100062e <__srget_r+0x59>
81000616:	8b 43 04             	mov    0x4(%ebx),%eax
81000619:	83 e8 01             	sub    $0x1,%eax
8100061c:	89 43 04             	mov    %eax,0x4(%ebx)
8100061f:	8b 03                	mov    (%ebx),%eax
81000621:	8d 50 01             	lea    0x1(%eax),%edx
81000624:	89 13                	mov    %edx,(%ebx)
81000626:	0f b6 00             	movzbl (%eax),%eax
81000629:	0f b6 c0             	movzbl %al,%eax
8100062c:	eb 05                	jmp    81000633 <__srget_r+0x5e>
8100062e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000633:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000636:	c9                   	leave  
81000637:	c3                   	ret    

81000638 <__srget>:
81000638:	55                   	push   %ebp
81000639:	89 e5                	mov    %esp,%ebp
8100063b:	83 ec 08             	sub    $0x8,%esp
8100063e:	8b 55 08             	mov    0x8(%ebp),%edx
81000641:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
81000646:	83 ec 08             	sub    $0x8,%esp
81000649:	52                   	push   %edx
8100064a:	50                   	push   %eax
8100064b:	e8 85 ff ff ff       	call   810005d5 <__srget_r>
81000650:	83 c4 10             	add    $0x10,%esp
81000653:	c9                   	leave  
81000654:	c3                   	ret    
81000655:	66 90                	xchg   %ax,%ax
81000657:	66 90                	xchg   %ax,%ax
81000659:	66 90                	xchg   %ax,%ax
8100065b:	66 90                	xchg   %ax,%ax
8100065d:	66 90                	xchg   %ax,%ax
8100065f:	90                   	nop

81000660 <strlen>:
81000660:	55                   	push   %ebp
81000661:	89 e5                	mov    %esp,%ebp
81000663:	57                   	push   %edi
81000664:	8b 55 08             	mov    0x8(%ebp),%edx
81000667:	89 d7                	mov    %edx,%edi
81000669:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100066f:	74 25                	je     81000696 <L5>
81000671:	8a 0f                	mov    (%edi),%cl
81000673:	47                   	inc    %edi
81000674:	84 c9                	test   %cl,%cl
81000676:	74 56                	je     810006ce <L15>
81000678:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100067e:	74 16                	je     81000696 <L5>
81000680:	8a 0f                	mov    (%edi),%cl
81000682:	47                   	inc    %edi
81000683:	84 c9                	test   %cl,%cl
81000685:	74 47                	je     810006ce <L15>
81000687:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100068d:	74 07                	je     81000696 <L5>
8100068f:	8a 0f                	mov    (%edi),%cl
81000691:	47                   	inc    %edi
81000692:	84 c9                	test   %cl,%cl
81000694:	74 38                	je     810006ce <L15>

81000696 <L5>:
81000696:	83 ef 04             	sub    $0x4,%edi
81000699:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810006a0 <L10>:
810006a0:	83 c7 04             	add    $0x4,%edi
810006a3:	8b 0f                	mov    (%edi),%ecx
810006a5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810006ab:	f7 d1                	not    %ecx
810006ad:	21 c8                	and    %ecx,%eax
810006af:	a9 80 80 80 80       	test   $0x80808080,%eax
810006b4:	74 ea                	je     810006a0 <L10>
810006b6:	f7 d1                	not    %ecx
810006b8:	47                   	inc    %edi
810006b9:	84 c9                	test   %cl,%cl
810006bb:	74 11                	je     810006ce <L15>
810006bd:	47                   	inc    %edi
810006be:	c1 e9 08             	shr    $0x8,%ecx
810006c1:	84 c9                	test   %cl,%cl
810006c3:	74 09                	je     810006ce <L15>
810006c5:	47                   	inc    %edi
810006c6:	c1 e9 08             	shr    $0x8,%ecx
810006c9:	84 c9                	test   %cl,%cl
810006cb:	74 01                	je     810006ce <L15>
810006cd:	47                   	inc    %edi

810006ce <L15>:
810006ce:	29 d7                	sub    %edx,%edi
810006d0:	8d 47 ff             	lea    -0x1(%edi),%eax
810006d3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810006d6:	5f                   	pop    %edi
810006d7:	c9                   	leave  
810006d8:	c3                   	ret    

810006d9 <std>:
810006d9:	55                   	push   %ebp
810006da:	89 e5                	mov    %esp,%ebp
810006dc:	83 ec 08             	sub    $0x8,%esp
810006df:	8b 45 08             	mov    0x8(%ebp),%eax
810006e2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006e8:	8b 45 08             	mov    0x8(%ebp),%eax
810006eb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810006f2:	8b 45 08             	mov    0x8(%ebp),%eax
810006f5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810006fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810006ff:	89 c2                	mov    %eax,%edx
81000701:	8b 45 08             	mov    0x8(%ebp),%eax
81000704:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000708:	8b 45 08             	mov    0x8(%ebp),%eax
8100070b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000712:	8b 45 10             	mov    0x10(%ebp),%eax
81000715:	89 c2                	mov    %eax,%edx
81000717:	8b 45 08             	mov    0x8(%ebp),%eax
8100071a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100071e:	8b 45 08             	mov    0x8(%ebp),%eax
81000721:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000728:	8b 45 08             	mov    0x8(%ebp),%eax
8100072b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000732:	8b 45 08             	mov    0x8(%ebp),%eax
81000735:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100073c:	8b 45 08             	mov    0x8(%ebp),%eax
8100073f:	83 c0 5c             	add    $0x5c,%eax
81000742:	83 ec 04             	sub    $0x4,%esp
81000745:	6a 08                	push   $0x8
81000747:	6a 00                	push   $0x0
81000749:	50                   	push   %eax
8100074a:	e8 2e 15 00 00       	call   81001c7d <memset>
8100074f:	83 c4 10             	add    $0x10,%esp
81000752:	8b 45 08             	mov    0x8(%ebp),%eax
81000755:	8b 55 08             	mov    0x8(%ebp),%edx
81000758:	89 50 1c             	mov    %edx,0x1c(%eax)
8100075b:	8b 45 08             	mov    0x8(%ebp),%eax
8100075e:	c7 40 20 59 28 00 81 	movl   $0x81002859,0x20(%eax)
81000765:	8b 45 08             	mov    0x8(%ebp),%eax
81000768:	c7 40 24 a7 28 00 81 	movl   $0x810028a7,0x24(%eax)
8100076f:	8b 45 08             	mov    0x8(%ebp),%eax
81000772:	c7 40 28 02 29 00 81 	movl   $0x81002902,0x28(%eax)
81000779:	8b 45 08             	mov    0x8(%ebp),%eax
8100077c:	c7 40 2c 4c 29 00 81 	movl   $0x8100294c,0x2c(%eax)
81000783:	90                   	nop
81000784:	c9                   	leave  
81000785:	c3                   	ret    

81000786 <stdin_init>:
81000786:	55                   	push   %ebp
81000787:	89 e5                	mov    %esp,%ebp
81000789:	83 ec 08             	sub    $0x8,%esp
8100078c:	83 ec 04             	sub    $0x4,%esp
8100078f:	6a 00                	push   $0x0
81000791:	6a 04                	push   $0x4
81000793:	ff 75 08             	push   0x8(%ebp)
81000796:	e8 3e ff ff ff       	call   810006d9 <std>
8100079b:	83 c4 10             	add    $0x10,%esp
8100079e:	90                   	nop
8100079f:	c9                   	leave  
810007a0:	c3                   	ret    

810007a1 <stdout_init>:
810007a1:	55                   	push   %ebp
810007a2:	89 e5                	mov    %esp,%ebp
810007a4:	83 ec 08             	sub    $0x8,%esp
810007a7:	83 ec 04             	sub    $0x4,%esp
810007aa:	6a 01                	push   $0x1
810007ac:	6a 09                	push   $0x9
810007ae:	ff 75 08             	push   0x8(%ebp)
810007b1:	e8 23 ff ff ff       	call   810006d9 <std>
810007b6:	83 c4 10             	add    $0x10,%esp
810007b9:	90                   	nop
810007ba:	c9                   	leave  
810007bb:	c3                   	ret    

810007bc <stderr_init>:
810007bc:	55                   	push   %ebp
810007bd:	89 e5                	mov    %esp,%ebp
810007bf:	83 ec 08             	sub    $0x8,%esp
810007c2:	83 ec 04             	sub    $0x4,%esp
810007c5:	6a 02                	push   $0x2
810007c7:	6a 12                	push   $0x12
810007c9:	ff 75 08             	push   0x8(%ebp)
810007cc:	e8 08 ff ff ff       	call   810006d9 <std>
810007d1:	83 c4 10             	add    $0x10,%esp
810007d4:	90                   	nop
810007d5:	c9                   	leave  
810007d6:	c3                   	ret    

810007d7 <__sfmoreglue>:
810007d7:	55                   	push   %ebp
810007d8:	89 e5                	mov    %esp,%ebp
810007da:	53                   	push   %ebx
810007db:	83 ec 14             	sub    $0x14,%esp
810007de:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810007e1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810007e4:	6b c0 68             	imul   $0x68,%eax,%eax
810007e7:	83 c0 74             	add    $0x74,%eax
810007ea:	83 ec 08             	sub    $0x8,%esp
810007ed:	50                   	push   %eax
810007ee:	ff 75 08             	push   0x8(%ebp)
810007f1:	e8 e9 0a 00 00       	call   810012df <_malloc_r>
810007f6:	83 c4 10             	add    $0x10,%esp
810007f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810007fc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000800:	75 07                	jne    81000809 <__sfmoreglue+0x32>
81000802:	b8 00 00 00 00       	mov    $0x0,%eax
81000807:	eb 38                	jmp    81000841 <__sfmoreglue+0x6a>
81000809:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100080c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000812:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000815:	89 58 04             	mov    %ebx,0x4(%eax)
81000818:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100081b:	8d 50 0c             	lea    0xc(%eax),%edx
8100081e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000821:	89 50 08             	mov    %edx,0x8(%eax)
81000824:	89 d8                	mov    %ebx,%eax
81000826:	6b c0 68             	imul   $0x68,%eax,%eax
81000829:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100082c:	83 c2 0c             	add    $0xc,%edx
8100082f:	83 ec 04             	sub    $0x4,%esp
81000832:	50                   	push   %eax
81000833:	6a 00                	push   $0x0
81000835:	52                   	push   %edx
81000836:	e8 42 14 00 00       	call   81001c7d <memset>
8100083b:	83 c4 10             	add    $0x10,%esp
8100083e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000841:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000844:	c9                   	leave  
81000845:	c3                   	ret    

81000846 <__sfp>:
81000846:	55                   	push   %ebp
81000847:	89 e5                	mov    %esp,%ebp
81000849:	83 ec 18             	sub    $0x18,%esp
8100084c:	e8 16 02 00 00       	call   81000a67 <__sfp_lock_acquire>
81000851:	a1 a0 38 00 81       	mov    0x810038a0,%eax
81000856:	8b 40 38             	mov    0x38(%eax),%eax
81000859:	85 c0                	test   %eax,%eax
8100085b:	75 11                	jne    8100086e <__sfp+0x28>
8100085d:	a1 a0 38 00 81       	mov    0x810038a0,%eax
81000862:	83 ec 0c             	sub    $0xc,%esp
81000865:	50                   	push   %eax
81000866:	e8 63 01 00 00       	call   810009ce <__sinit>
8100086b:	83 c4 10             	add    $0x10,%esp
8100086e:	a1 a0 38 00 81       	mov    0x810038a0,%eax
81000873:	05 e0 02 00 00       	add    $0x2e0,%eax
81000878:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100087b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100087e:	8b 40 08             	mov    0x8(%eax),%eax
81000881:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000884:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000887:	8b 40 04             	mov    0x4(%eax),%eax
8100088a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100088d:	eb 10                	jmp    8100089f <__sfp+0x59>
8100088f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000892:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000896:	66 85 c0             	test   %ax,%ax
81000899:	74 58                	je     810008f3 <__sfp+0xad>
8100089b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100089f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810008a3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810008a7:	79 e6                	jns    8100088f <__sfp+0x49>
810008a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810008ac:	8b 00                	mov    (%eax),%eax
810008ae:	85 c0                	test   %eax,%eax
810008b0:	75 1e                	jne    810008d0 <__sfp+0x8a>
810008b2:	83 ec 08             	sub    $0x8,%esp
810008b5:	6a 04                	push   $0x4
810008b7:	ff 75 08             	push   0x8(%ebp)
810008ba:	e8 18 ff ff ff       	call   810007d7 <__sfmoreglue>
810008bf:	83 c4 10             	add    $0x10,%esp
810008c2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810008c5:	89 02                	mov    %eax,(%edx)
810008c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810008ca:	8b 00                	mov    (%eax),%eax
810008cc:	85 c0                	test   %eax,%eax
810008ce:	74 0a                	je     810008da <__sfp+0x94>
810008d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810008d3:	8b 00                	mov    (%eax),%eax
810008d5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810008d8:	eb a1                	jmp    8100087b <__sfp+0x35>
810008da:	90                   	nop
810008db:	e8 8d 01 00 00       	call   81000a6d <__sfp_lock_release>
810008e0:	8b 45 08             	mov    0x8(%ebp),%eax
810008e3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810008e9:	b8 00 00 00 00       	mov    $0x0,%eax
810008ee:	e9 9e 00 00 00       	jmp    81000991 <__sfp+0x14b>
810008f3:	90                   	nop
810008f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008f7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810008fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000900:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000906:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000909:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000910:	e8 58 01 00 00       	call   81000a6d <__sfp_lock_release>
81000915:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000918:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100091e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000921:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000928:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100092b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000932:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000935:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100093c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100093f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000946:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000949:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000950:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000953:	83 c0 5c             	add    $0x5c,%eax
81000956:	83 ec 04             	sub    $0x4,%esp
81000959:	6a 08                	push   $0x8
8100095b:	6a 00                	push   $0x0
8100095d:	50                   	push   %eax
8100095e:	e8 1a 13 00 00       	call   81001c7d <memset>
81000963:	83 c4 10             	add    $0x10,%esp
81000966:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000969:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000970:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000973:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100097a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100097d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000984:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000987:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100098e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000991:	c9                   	leave  
81000992:	c3                   	ret    

81000993 <_cleanup_r>:
81000993:	55                   	push   %ebp
81000994:	89 e5                	mov    %esp,%ebp
81000996:	83 ec 18             	sub    $0x18,%esp
81000999:	c7 45 f4 52 2b 00 81 	movl   $0x81002b52,-0xc(%ebp)
810009a0:	83 ec 08             	sub    $0x8,%esp
810009a3:	ff 75 f4             	push   -0xc(%ebp)
810009a6:	ff 75 08             	push   0x8(%ebp)
810009a9:	e8 33 06 00 00       	call   81000fe1 <_fwalk_reent>
810009ae:	83 c4 10             	add    $0x10,%esp
810009b1:	90                   	nop
810009b2:	c9                   	leave  
810009b3:	c3                   	ret    

810009b4 <_cleanup>:
810009b4:	55                   	push   %ebp
810009b5:	89 e5                	mov    %esp,%ebp
810009b7:	83 ec 08             	sub    $0x8,%esp
810009ba:	a1 a0 38 00 81       	mov    0x810038a0,%eax
810009bf:	83 ec 0c             	sub    $0xc,%esp
810009c2:	50                   	push   %eax
810009c3:	e8 cb ff ff ff       	call   81000993 <_cleanup_r>
810009c8:	83 c4 10             	add    $0x10,%esp
810009cb:	90                   	nop
810009cc:	c9                   	leave  
810009cd:	c3                   	ret    

810009ce <__sinit>:
810009ce:	55                   	push   %ebp
810009cf:	89 e5                	mov    %esp,%ebp
810009d1:	83 ec 08             	sub    $0x8,%esp
810009d4:	e8 9a 00 00 00       	call   81000a73 <__sinit_lock_acquire>
810009d9:	8b 45 08             	mov    0x8(%ebp),%eax
810009dc:	8b 40 38             	mov    0x38(%eax),%eax
810009df:	85 c0                	test   %eax,%eax
810009e1:	74 07                	je     810009ea <__sinit+0x1c>
810009e3:	e8 91 00 00 00       	call   81000a79 <__sinit_lock_release>
810009e8:	eb 7b                	jmp    81000a65 <__sinit+0x97>
810009ea:	8b 45 08             	mov    0x8(%ebp),%eax
810009ed:	c7 40 3c 93 09 00 81 	movl   $0x81000993,0x3c(%eax)
810009f4:	8b 45 08             	mov    0x8(%ebp),%eax
810009f7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810009fe:	00 00 00 
81000a01:	8b 45 08             	mov    0x8(%ebp),%eax
81000a04:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81000a0b:	00 00 00 
81000a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81000a11:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000a17:	8b 45 08             	mov    0x8(%ebp),%eax
81000a1a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000a20:	8b 45 08             	mov    0x8(%ebp),%eax
81000a23:	8b 40 04             	mov    0x4(%eax),%eax
81000a26:	83 ec 0c             	sub    $0xc,%esp
81000a29:	50                   	push   %eax
81000a2a:	e8 57 fd ff ff       	call   81000786 <stdin_init>
81000a2f:	83 c4 10             	add    $0x10,%esp
81000a32:	8b 45 08             	mov    0x8(%ebp),%eax
81000a35:	8b 40 08             	mov    0x8(%eax),%eax
81000a38:	83 ec 0c             	sub    $0xc,%esp
81000a3b:	50                   	push   %eax
81000a3c:	e8 60 fd ff ff       	call   810007a1 <stdout_init>
81000a41:	83 c4 10             	add    $0x10,%esp
81000a44:	8b 45 08             	mov    0x8(%ebp),%eax
81000a47:	8b 40 0c             	mov    0xc(%eax),%eax
81000a4a:	83 ec 0c             	sub    $0xc,%esp
81000a4d:	50                   	push   %eax
81000a4e:	e8 69 fd ff ff       	call   810007bc <stderr_init>
81000a53:	83 c4 10             	add    $0x10,%esp
81000a56:	8b 45 08             	mov    0x8(%ebp),%eax
81000a59:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000a60:	e8 14 00 00 00       	call   81000a79 <__sinit_lock_release>
81000a65:	c9                   	leave  
81000a66:	c3                   	ret    

81000a67 <__sfp_lock_acquire>:
81000a67:	55                   	push   %ebp
81000a68:	89 e5                	mov    %esp,%ebp
81000a6a:	90                   	nop
81000a6b:	5d                   	pop    %ebp
81000a6c:	c3                   	ret    

81000a6d <__sfp_lock_release>:
81000a6d:	55                   	push   %ebp
81000a6e:	89 e5                	mov    %esp,%ebp
81000a70:	90                   	nop
81000a71:	5d                   	pop    %ebp
81000a72:	c3                   	ret    

81000a73 <__sinit_lock_acquire>:
81000a73:	55                   	push   %ebp
81000a74:	89 e5                	mov    %esp,%ebp
81000a76:	90                   	nop
81000a77:	5d                   	pop    %ebp
81000a78:	c3                   	ret    

81000a79 <__sinit_lock_release>:
81000a79:	55                   	push   %ebp
81000a7a:	89 e5                	mov    %esp,%ebp
81000a7c:	90                   	nop
81000a7d:	5d                   	pop    %ebp
81000a7e:	c3                   	ret    

81000a7f <__fp_lock>:
81000a7f:	55                   	push   %ebp
81000a80:	89 e5                	mov    %esp,%ebp
81000a82:	b8 00 00 00 00       	mov    $0x0,%eax
81000a87:	5d                   	pop    %ebp
81000a88:	c3                   	ret    

81000a89 <__fp_unlock>:
81000a89:	55                   	push   %ebp
81000a8a:	89 e5                	mov    %esp,%ebp
81000a8c:	b8 00 00 00 00       	mov    $0x0,%eax
81000a91:	5d                   	pop    %ebp
81000a92:	c3                   	ret    

81000a93 <__fp_lock_all>:
81000a93:	55                   	push   %ebp
81000a94:	89 e5                	mov    %esp,%ebp
81000a96:	83 ec 08             	sub    $0x8,%esp
81000a99:	e8 c9 ff ff ff       	call   81000a67 <__sfp_lock_acquire>
81000a9e:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
81000aa3:	83 ec 08             	sub    $0x8,%esp
81000aa6:	68 7f 0a 00 81       	push   $0x81000a7f
81000aab:	50                   	push   %eax
81000aac:	e8 c8 04 00 00       	call   81000f79 <_fwalk>
81000ab1:	83 c4 10             	add    $0x10,%esp
81000ab4:	90                   	nop
81000ab5:	c9                   	leave  
81000ab6:	c3                   	ret    

81000ab7 <__fp_unlock_all>:
81000ab7:	55                   	push   %ebp
81000ab8:	89 e5                	mov    %esp,%ebp
81000aba:	83 ec 08             	sub    $0x8,%esp
81000abd:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
81000ac2:	83 ec 08             	sub    $0x8,%esp
81000ac5:	68 89 0a 00 81       	push   $0x81000a89
81000aca:	50                   	push   %eax
81000acb:	e8 a9 04 00 00       	call   81000f79 <_fwalk>
81000ad0:	83 c4 10             	add    $0x10,%esp
81000ad3:	e8 95 ff ff ff       	call   81000a6d <__sfp_lock_release>
81000ad8:	90                   	nop
81000ad9:	c9                   	leave  
81000ada:	c3                   	ret    

81000adb <__sfvwrite_r>:
81000adb:	55                   	push   %ebp
81000adc:	89 e5                	mov    %esp,%ebp
81000ade:	57                   	push   %edi
81000adf:	56                   	push   %esi
81000ae0:	53                   	push   %ebx
81000ae1:	83 ec 3c             	sub    $0x3c,%esp
81000ae4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000ae7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81000aee:	8b 45 10             	mov    0x10(%ebp),%eax
81000af1:	8b 78 08             	mov    0x8(%eax),%edi
81000af4:	85 ff                	test   %edi,%edi
81000af6:	75 0a                	jne    81000b02 <__sfvwrite_r+0x27>
81000af8:	b8 00 00 00 00       	mov    $0x0,%eax
81000afd:	e9 6f 04 00 00       	jmp    81000f71 <__sfvwrite_r+0x496>
81000b02:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b06:	98                   	cwtl   
81000b07:	83 e0 08             	and    $0x8,%eax
81000b0a:	85 c0                	test   %eax,%eax
81000b0c:	74 07                	je     81000b15 <__sfvwrite_r+0x3a>
81000b0e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b11:	85 c0                	test   %eax,%eax
81000b13:	75 1d                	jne    81000b32 <__sfvwrite_r+0x57>
81000b15:	83 ec 08             	sub    $0x8,%esp
81000b18:	53                   	push   %ebx
81000b19:	ff 75 08             	push   0x8(%ebp)
81000b1c:	e8 96 1e 00 00       	call   810029b7 <__swsetup_r>
81000b21:	83 c4 10             	add    $0x10,%esp
81000b24:	85 c0                	test   %eax,%eax
81000b26:	74 0a                	je     81000b32 <__sfvwrite_r+0x57>
81000b28:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000b2d:	e9 3f 04 00 00       	jmp    81000f71 <__sfvwrite_r+0x496>
81000b32:	8b 45 10             	mov    0x10(%ebp),%eax
81000b35:	8b 00                	mov    (%eax),%eax
81000b37:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000b3a:	bf 00 00 00 00       	mov    $0x0,%edi
81000b3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b43:	98                   	cwtl   
81000b44:	83 e0 02             	and    $0x2,%eax
81000b47:	85 c0                	test   %eax,%eax
81000b49:	74 68                	je     81000bb3 <__sfvwrite_r+0xd8>
81000b4b:	eb 11                	jmp    81000b5e <__sfvwrite_r+0x83>
81000b4d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000b50:	8b 08                	mov    (%eax),%ecx
81000b52:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000b55:	8b 78 04             	mov    0x4(%eax),%edi
81000b58:	83 c0 08             	add    $0x8,%eax
81000b5b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000b5e:	85 ff                	test   %edi,%edi
81000b60:	74 eb                	je     81000b4d <__sfvwrite_r+0x72>
81000b62:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000b65:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000b6a:	39 c7                	cmp    %eax,%edi
81000b6c:	0f 46 c7             	cmovbe %edi,%eax
81000b6f:	89 c2                	mov    %eax,%edx
81000b71:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000b74:	52                   	push   %edx
81000b75:	ff 75 c4             	push   -0x3c(%ebp)
81000b78:	50                   	push   %eax
81000b79:	ff 75 08             	push   0x8(%ebp)
81000b7c:	ff d1                	call   *%ecx
81000b7e:	83 c4 10             	add    $0x10,%esp
81000b81:	89 c6                	mov    %eax,%esi
81000b83:	85 f6                	test   %esi,%esi
81000b85:	0f 8e cf 03 00 00    	jle    81000f5a <__sfvwrite_r+0x47f>
81000b8b:	89 f0                	mov    %esi,%eax
81000b8d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000b90:	89 f0                	mov    %esi,%eax
81000b92:	29 c7                	sub    %eax,%edi
81000b94:	8b 45 10             	mov    0x10(%ebp),%eax
81000b97:	8b 40 08             	mov    0x8(%eax),%eax
81000b9a:	89 f2                	mov    %esi,%edx
81000b9c:	29 d0                	sub    %edx,%eax
81000b9e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000ba1:	89 41 08             	mov    %eax,0x8(%ecx)
81000ba4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ba7:	8b 40 08             	mov    0x8(%eax),%eax
81000baa:	85 c0                	test   %eax,%eax
81000bac:	75 b0                	jne    81000b5e <__sfvwrite_r+0x83>
81000bae:	e9 a0 03 00 00       	jmp    81000f53 <__sfvwrite_r+0x478>
81000bb3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bb7:	98                   	cwtl   
81000bb8:	83 e0 01             	and    $0x1,%eax
81000bbb:	85 c0                	test   %eax,%eax
81000bbd:	0f 85 44 02 00 00    	jne    81000e07 <__sfvwrite_r+0x32c>
81000bc3:	eb 11                	jmp    81000bd6 <__sfvwrite_r+0xfb>
81000bc5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000bc8:	8b 08                	mov    (%eax),%ecx
81000bca:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000bcd:	8b 78 04             	mov    0x4(%eax),%edi
81000bd0:	83 c0 08             	add    $0x8,%eax
81000bd3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000bd6:	85 ff                	test   %edi,%edi
81000bd8:	74 eb                	je     81000bc5 <__sfvwrite_r+0xea>
81000bda:	8b 73 08             	mov    0x8(%ebx),%esi
81000bdd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000be1:	98                   	cwtl   
81000be2:	25 00 02 00 00       	and    $0x200,%eax
81000be7:	85 c0                	test   %eax,%eax
81000be9:	0f 84 4f 01 00 00    	je     81000d3e <__sfvwrite_r+0x263>
81000bef:	89 f0                	mov    %esi,%eax
81000bf1:	39 c7                	cmp    %eax,%edi
81000bf3:	0f 82 12 01 00 00    	jb     81000d0b <__sfvwrite_r+0x230>
81000bf9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bfd:	98                   	cwtl   
81000bfe:	25 80 04 00 00       	and    $0x480,%eax
81000c03:	85 c0                	test   %eax,%eax
81000c05:	0f 84 00 01 00 00    	je     81000d0b <__sfvwrite_r+0x230>
81000c0b:	8b 03                	mov    (%ebx),%eax
81000c0d:	8b 53 10             	mov    0x10(%ebx),%edx
81000c10:	29 d0                	sub    %edx,%eax
81000c12:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000c15:	8b 53 14             	mov    0x14(%ebx),%edx
81000c18:	89 d0                	mov    %edx,%eax
81000c1a:	01 c0                	add    %eax,%eax
81000c1c:	01 d0                	add    %edx,%eax
81000c1e:	89 c2                	mov    %eax,%edx
81000c20:	c1 ea 1f             	shr    $0x1f,%edx
81000c23:	01 d0                	add    %edx,%eax
81000c25:	d1 f8                	sar    %eax
81000c27:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000c2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000c2d:	01 f8                	add    %edi,%eax
81000c2f:	8d 50 01             	lea    0x1(%eax),%edx
81000c32:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c35:	39 c2                	cmp    %eax,%edx
81000c37:	76 0b                	jbe    81000c44 <__sfvwrite_r+0x169>
81000c39:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000c3c:	01 f8                	add    %edi,%eax
81000c3e:	83 c0 01             	add    $0x1,%eax
81000c41:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000c44:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c48:	98                   	cwtl   
81000c49:	25 00 04 00 00       	and    $0x400,%eax
81000c4e:	85 c0                	test   %eax,%eax
81000c50:	74 4f                	je     81000ca1 <__sfvwrite_r+0x1c6>
81000c52:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c55:	83 ec 08             	sub    $0x8,%esp
81000c58:	50                   	push   %eax
81000c59:	ff 75 08             	push   0x8(%ebp)
81000c5c:	e8 7e 06 00 00       	call   810012df <_malloc_r>
81000c61:	83 c4 10             	add    $0x10,%esp
81000c64:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000c67:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000c6b:	75 0e                	jne    81000c7b <__sfvwrite_r+0x1a0>
81000c6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000c70:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000c76:	e9 e6 02 00 00       	jmp    81000f61 <__sfvwrite_r+0x486>
81000c7b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000c7e:	8b 43 10             	mov    0x10(%ebx),%eax
81000c81:	83 ec 04             	sub    $0x4,%esp
81000c84:	52                   	push   %edx
81000c85:	50                   	push   %eax
81000c86:	ff 75 dc             	push   -0x24(%ebp)
81000c89:	e8 1a 0f 00 00       	call   81001ba8 <memcpy>
81000c8e:	83 c4 10             	add    $0x10,%esp
81000c91:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c95:	66 25 7f fb          	and    $0xfb7f,%ax
81000c99:	0c 80                	or     $0x80,%al
81000c9b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c9f:	eb 49                	jmp    81000cea <__sfvwrite_r+0x20f>
81000ca1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000ca4:	8b 43 10             	mov    0x10(%ebx),%eax
81000ca7:	83 ec 04             	sub    $0x4,%esp
81000caa:	52                   	push   %edx
81000cab:	50                   	push   %eax
81000cac:	ff 75 08             	push   0x8(%ebp)
81000caf:	e8 5d 10 00 00       	call   81001d11 <_realloc_r>
81000cb4:	83 c4 10             	add    $0x10,%esp
81000cb7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000cba:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000cbe:	75 2a                	jne    81000cea <__sfvwrite_r+0x20f>
81000cc0:	8b 43 10             	mov    0x10(%ebx),%eax
81000cc3:	83 ec 08             	sub    $0x8,%esp
81000cc6:	50                   	push   %eax
81000cc7:	ff 75 08             	push   0x8(%ebp)
81000cca:	e8 5e 22 00 00       	call   81002f2d <_free_r>
81000ccf:	83 c4 10             	add    $0x10,%esp
81000cd2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000cd6:	24 7f                	and    $0x7f,%al
81000cd8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000cdc:	8b 45 08             	mov    0x8(%ebp),%eax
81000cdf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ce5:	e9 77 02 00 00       	jmp    81000f61 <__sfvwrite_r+0x486>
81000cea:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ced:	89 43 10             	mov    %eax,0x10(%ebx)
81000cf0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000cf3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000cf6:	01 d0                	add    %edx,%eax
81000cf8:	89 03                	mov    %eax,(%ebx)
81000cfa:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000cfd:	89 43 14             	mov    %eax,0x14(%ebx)
81000d00:	89 fe                	mov    %edi,%esi
81000d02:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000d05:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000d08:	89 43 08             	mov    %eax,0x8(%ebx)
81000d0b:	89 f0                	mov    %esi,%eax
81000d0d:	39 c7                	cmp    %eax,%edi
81000d0f:	73 02                	jae    81000d13 <__sfvwrite_r+0x238>
81000d11:	89 fe                	mov    %edi,%esi
81000d13:	89 f2                	mov    %esi,%edx
81000d15:	8b 03                	mov    (%ebx),%eax
81000d17:	83 ec 04             	sub    $0x4,%esp
81000d1a:	52                   	push   %edx
81000d1b:	ff 75 c4             	push   -0x3c(%ebp)
81000d1e:	50                   	push   %eax
81000d1f:	e8 cc 0e 00 00       	call   81001bf0 <memmove>
81000d24:	83 c4 10             	add    $0x10,%esp
81000d27:	8b 43 08             	mov    0x8(%ebx),%eax
81000d2a:	29 f0                	sub    %esi,%eax
81000d2c:	89 43 08             	mov    %eax,0x8(%ebx)
81000d2f:	8b 03                	mov    (%ebx),%eax
81000d31:	89 f2                	mov    %esi,%edx
81000d33:	01 d0                	add    %edx,%eax
81000d35:	89 03                	mov    %eax,(%ebx)
81000d37:	89 fe                	mov    %edi,%esi
81000d39:	e9 9d 00 00 00       	jmp    81000ddb <__sfvwrite_r+0x300>
81000d3e:	8b 13                	mov    (%ebx),%edx
81000d40:	8b 43 10             	mov    0x10(%ebx),%eax
81000d43:	39 c2                	cmp    %eax,%edx
81000d45:	77 07                	ja     81000d4e <__sfvwrite_r+0x273>
81000d47:	8b 43 14             	mov    0x14(%ebx),%eax
81000d4a:	39 c7                	cmp    %eax,%edi
81000d4c:	73 4c                	jae    81000d9a <__sfvwrite_r+0x2bf>
81000d4e:	89 f0                	mov    %esi,%eax
81000d50:	39 c7                	cmp    %eax,%edi
81000d52:	0f 46 c7             	cmovbe %edi,%eax
81000d55:	89 c6                	mov    %eax,%esi
81000d57:	89 f2                	mov    %esi,%edx
81000d59:	8b 03                	mov    (%ebx),%eax
81000d5b:	83 ec 04             	sub    $0x4,%esp
81000d5e:	52                   	push   %edx
81000d5f:	ff 75 c4             	push   -0x3c(%ebp)
81000d62:	50                   	push   %eax
81000d63:	e8 88 0e 00 00       	call   81001bf0 <memmove>
81000d68:	83 c4 10             	add    $0x10,%esp
81000d6b:	8b 43 08             	mov    0x8(%ebx),%eax
81000d6e:	29 f0                	sub    %esi,%eax
81000d70:	89 43 08             	mov    %eax,0x8(%ebx)
81000d73:	8b 03                	mov    (%ebx),%eax
81000d75:	89 f2                	mov    %esi,%edx
81000d77:	01 d0                	add    %edx,%eax
81000d79:	89 03                	mov    %eax,(%ebx)
81000d7b:	8b 43 08             	mov    0x8(%ebx),%eax
81000d7e:	85 c0                	test   %eax,%eax
81000d80:	75 58                	jne    81000dda <__sfvwrite_r+0x2ff>
81000d82:	83 ec 08             	sub    $0x8,%esp
81000d85:	53                   	push   %ebx
81000d86:	ff 75 08             	push   0x8(%ebp)
81000d89:	e8 0e 21 00 00       	call   81002e9c <_fflush_r>
81000d8e:	83 c4 10             	add    $0x10,%esp
81000d91:	85 c0                	test   %eax,%eax
81000d93:	74 45                	je     81000dda <__sfvwrite_r+0x2ff>
81000d95:	e9 c7 01 00 00       	jmp    81000f61 <__sfvwrite_r+0x486>
81000d9a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000da0:	77 04                	ja     81000da6 <__sfvwrite_r+0x2cb>
81000da2:	89 f8                	mov    %edi,%eax
81000da4:	eb 05                	jmp    81000dab <__sfvwrite_r+0x2d0>
81000da6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000dab:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000dae:	99                   	cltd   
81000daf:	f7 f9                	idiv   %ecx
81000db1:	89 c2                	mov    %eax,%edx
81000db3:	8b 43 14             	mov    0x14(%ebx),%eax
81000db6:	89 d6                	mov    %edx,%esi
81000db8:	0f af f0             	imul   %eax,%esi
81000dbb:	8b 53 24             	mov    0x24(%ebx),%edx
81000dbe:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dc1:	56                   	push   %esi
81000dc2:	ff 75 c4             	push   -0x3c(%ebp)
81000dc5:	50                   	push   %eax
81000dc6:	ff 75 08             	push   0x8(%ebp)
81000dc9:	ff d2                	call   *%edx
81000dcb:	83 c4 10             	add    $0x10,%esp
81000dce:	89 c6                	mov    %eax,%esi
81000dd0:	85 f6                	test   %esi,%esi
81000dd2:	0f 8e 85 01 00 00    	jle    81000f5d <__sfvwrite_r+0x482>
81000dd8:	eb 01                	jmp    81000ddb <__sfvwrite_r+0x300>
81000dda:	90                   	nop
81000ddb:	89 f0                	mov    %esi,%eax
81000ddd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000de0:	89 f0                	mov    %esi,%eax
81000de2:	29 c7                	sub    %eax,%edi
81000de4:	8b 45 10             	mov    0x10(%ebp),%eax
81000de7:	8b 40 08             	mov    0x8(%eax),%eax
81000dea:	89 f2                	mov    %esi,%edx
81000dec:	29 d0                	sub    %edx,%eax
81000dee:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000df1:	89 41 08             	mov    %eax,0x8(%ecx)
81000df4:	8b 45 10             	mov    0x10(%ebp),%eax
81000df7:	8b 40 08             	mov    0x8(%eax),%eax
81000dfa:	85 c0                	test   %eax,%eax
81000dfc:	0f 85 d4 fd ff ff    	jne    81000bd6 <__sfvwrite_r+0xfb>
81000e02:	e9 4c 01 00 00       	jmp    81000f53 <__sfvwrite_r+0x478>
81000e07:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e0e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000e15:	eb 18                	jmp    81000e2f <__sfvwrite_r+0x354>
81000e17:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e1e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000e21:	8b 08                	mov    (%eax),%ecx
81000e23:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000e26:	8b 78 04             	mov    0x4(%eax),%edi
81000e29:	83 c0 08             	add    $0x8,%eax
81000e2c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000e2f:	85 ff                	test   %edi,%edi
81000e31:	74 e4                	je     81000e17 <__sfvwrite_r+0x33c>
81000e33:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000e37:	75 32                	jne    81000e6b <__sfvwrite_r+0x390>
81000e39:	83 ec 04             	sub    $0x4,%esp
81000e3c:	57                   	push   %edi
81000e3d:	6a 0a                	push   $0xa
81000e3f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000e42:	56                   	push   %esi
81000e43:	e8 c8 0c 00 00       	call   81001b10 <memchr>
81000e48:	83 c4 10             	add    $0x10,%esp
81000e4b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000e4e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000e52:	74 0a                	je     81000e5e <__sfvwrite_r+0x383>
81000e54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000e57:	83 c0 01             	add    $0x1,%eax
81000e5a:	29 f0                	sub    %esi,%eax
81000e5c:	eb 03                	jmp    81000e61 <__sfvwrite_r+0x386>
81000e5e:	8d 47 01             	lea    0x1(%edi),%eax
81000e61:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000e64:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000e6b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e6e:	39 c7                	cmp    %eax,%edi
81000e70:	0f 46 c7             	cmovbe %edi,%eax
81000e73:	89 c1                	mov    %eax,%ecx
81000e75:	8b 53 08             	mov    0x8(%ebx),%edx
81000e78:	8b 43 14             	mov    0x14(%ebx),%eax
81000e7b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000e7e:	8b 13                	mov    (%ebx),%edx
81000e80:	8b 43 10             	mov    0x10(%ebx),%eax
81000e83:	39 c2                	cmp    %eax,%edx
81000e85:	76 38                	jbe    81000ebf <__sfvwrite_r+0x3e4>
81000e87:	39 f1                	cmp    %esi,%ecx
81000e89:	7e 34                	jle    81000ebf <__sfvwrite_r+0x3e4>
81000e8b:	89 f2                	mov    %esi,%edx
81000e8d:	8b 03                	mov    (%ebx),%eax
81000e8f:	83 ec 04             	sub    $0x4,%esp
81000e92:	52                   	push   %edx
81000e93:	ff 75 c4             	push   -0x3c(%ebp)
81000e96:	50                   	push   %eax
81000e97:	e8 54 0d 00 00       	call   81001bf0 <memmove>
81000e9c:	83 c4 10             	add    $0x10,%esp
81000e9f:	8b 03                	mov    (%ebx),%eax
81000ea1:	89 f2                	mov    %esi,%edx
81000ea3:	01 d0                	add    %edx,%eax
81000ea5:	89 03                	mov    %eax,(%ebx)
81000ea7:	83 ec 08             	sub    $0x8,%esp
81000eaa:	53                   	push   %ebx
81000eab:	ff 75 08             	push   0x8(%ebp)
81000eae:	e8 e9 1f 00 00       	call   81002e9c <_fflush_r>
81000eb3:	83 c4 10             	add    $0x10,%esp
81000eb6:	85 c0                	test   %eax,%eax
81000eb8:	74 4f                	je     81000f09 <__sfvwrite_r+0x42e>
81000eba:	e9 a2 00 00 00       	jmp    81000f61 <__sfvwrite_r+0x486>
81000ebf:	8b 73 14             	mov    0x14(%ebx),%esi
81000ec2:	89 c8                	mov    %ecx,%eax
81000ec4:	39 c6                	cmp    %eax,%esi
81000ec6:	7f 1b                	jg     81000ee3 <__sfvwrite_r+0x408>
81000ec8:	8b 53 24             	mov    0x24(%ebx),%edx
81000ecb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000ece:	56                   	push   %esi
81000ecf:	ff 75 c4             	push   -0x3c(%ebp)
81000ed2:	50                   	push   %eax
81000ed3:	ff 75 08             	push   0x8(%ebp)
81000ed6:	ff d2                	call   *%edx
81000ed8:	83 c4 10             	add    $0x10,%esp
81000edb:	89 c6                	mov    %eax,%esi
81000edd:	85 f6                	test   %esi,%esi
81000edf:	7f 28                	jg     81000f09 <__sfvwrite_r+0x42e>
81000ee1:	eb 7e                	jmp    81000f61 <__sfvwrite_r+0x486>
81000ee3:	89 ce                	mov    %ecx,%esi
81000ee5:	89 f2                	mov    %esi,%edx
81000ee7:	8b 03                	mov    (%ebx),%eax
81000ee9:	83 ec 04             	sub    $0x4,%esp
81000eec:	52                   	push   %edx
81000eed:	ff 75 c4             	push   -0x3c(%ebp)
81000ef0:	50                   	push   %eax
81000ef1:	e8 fa 0c 00 00       	call   81001bf0 <memmove>
81000ef6:	83 c4 10             	add    $0x10,%esp
81000ef9:	8b 43 08             	mov    0x8(%ebx),%eax
81000efc:	29 f0                	sub    %esi,%eax
81000efe:	89 43 08             	mov    %eax,0x8(%ebx)
81000f01:	8b 03                	mov    (%ebx),%eax
81000f03:	89 f2                	mov    %esi,%edx
81000f05:	01 d0                	add    %edx,%eax
81000f07:	89 03                	mov    %eax,(%ebx)
81000f09:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000f0c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000f10:	75 1a                	jne    81000f2c <__sfvwrite_r+0x451>
81000f12:	83 ec 08             	sub    $0x8,%esp
81000f15:	53                   	push   %ebx
81000f16:	ff 75 08             	push   0x8(%ebp)
81000f19:	e8 7e 1f 00 00       	call   81002e9c <_fflush_r>
81000f1e:	83 c4 10             	add    $0x10,%esp
81000f21:	85 c0                	test   %eax,%eax
81000f23:	75 3b                	jne    81000f60 <__sfvwrite_r+0x485>
81000f25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f2c:	89 f0                	mov    %esi,%eax
81000f2e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000f31:	89 f0                	mov    %esi,%eax
81000f33:	29 c7                	sub    %eax,%edi
81000f35:	8b 45 10             	mov    0x10(%ebp),%eax
81000f38:	8b 40 08             	mov    0x8(%eax),%eax
81000f3b:	89 f2                	mov    %esi,%edx
81000f3d:	29 d0                	sub    %edx,%eax
81000f3f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000f42:	89 41 08             	mov    %eax,0x8(%ecx)
81000f45:	8b 45 10             	mov    0x10(%ebp),%eax
81000f48:	8b 40 08             	mov    0x8(%eax),%eax
81000f4b:	85 c0                	test   %eax,%eax
81000f4d:	0f 85 dc fe ff ff    	jne    81000e2f <__sfvwrite_r+0x354>
81000f53:	b8 00 00 00 00       	mov    $0x0,%eax
81000f58:	eb 17                	jmp    81000f71 <__sfvwrite_r+0x496>
81000f5a:	90                   	nop
81000f5b:	eb 04                	jmp    81000f61 <__sfvwrite_r+0x486>
81000f5d:	90                   	nop
81000f5e:	eb 01                	jmp    81000f61 <__sfvwrite_r+0x486>
81000f60:	90                   	nop
81000f61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f65:	83 c8 40             	or     $0x40,%eax
81000f68:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000f71:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f74:	5b                   	pop    %ebx
81000f75:	5e                   	pop    %esi
81000f76:	5f                   	pop    %edi
81000f77:	5d                   	pop    %ebp
81000f78:	c3                   	ret    

81000f79 <_fwalk>:
81000f79:	55                   	push   %ebp
81000f7a:	89 e5                	mov    %esp,%ebp
81000f7c:	57                   	push   %edi
81000f7d:	56                   	push   %esi
81000f7e:	53                   	push   %ebx
81000f7f:	83 ec 1c             	sub    $0x1c,%esp
81000f82:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f89:	8b 45 08             	mov    0x8(%ebp),%eax
81000f8c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f92:	eb 3e                	jmp    81000fd2 <_fwalk+0x59>
81000f94:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f97:	8b 7e 04             	mov    0x4(%esi),%edi
81000f9a:	eb 2d                	jmp    81000fc9 <_fwalk+0x50>
81000f9c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fa0:	66 85 c0             	test   %ax,%ax
81000fa3:	74 21                	je     81000fc6 <_fwalk+0x4d>
81000fa5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fa9:	66 83 f8 01          	cmp    $0x1,%ax
81000fad:	74 17                	je     81000fc6 <_fwalk+0x4d>
81000faf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000fb3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000fb7:	74 0d                	je     81000fc6 <_fwalk+0x4d>
81000fb9:	83 ec 0c             	sub    $0xc,%esp
81000fbc:	53                   	push   %ebx
81000fbd:	ff 55 0c             	call   *0xc(%ebp)
81000fc0:	83 c4 10             	add    $0x10,%esp
81000fc3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000fc6:	83 c3 68             	add    $0x68,%ebx
81000fc9:	83 ef 01             	sub    $0x1,%edi
81000fcc:	85 ff                	test   %edi,%edi
81000fce:	79 cc                	jns    81000f9c <_fwalk+0x23>
81000fd0:	8b 36                	mov    (%esi),%esi
81000fd2:	85 f6                	test   %esi,%esi
81000fd4:	75 be                	jne    81000f94 <_fwalk+0x1b>
81000fd6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000fd9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000fdc:	5b                   	pop    %ebx
81000fdd:	5e                   	pop    %esi
81000fde:	5f                   	pop    %edi
81000fdf:	5d                   	pop    %ebp
81000fe0:	c3                   	ret    

81000fe1 <_fwalk_reent>:
81000fe1:	55                   	push   %ebp
81000fe2:	89 e5                	mov    %esp,%ebp
81000fe4:	57                   	push   %edi
81000fe5:	56                   	push   %esi
81000fe6:	53                   	push   %ebx
81000fe7:	83 ec 1c             	sub    $0x1c,%esp
81000fea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ff1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ff4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000ffa:	eb 41                	jmp    8100103d <_fwalk_reent+0x5c>
81000ffc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000fff:	8b 7e 04             	mov    0x4(%esi),%edi
81001002:	eb 30                	jmp    81001034 <_fwalk_reent+0x53>
81001004:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001008:	66 85 c0             	test   %ax,%ax
8100100b:	74 24                	je     81001031 <_fwalk_reent+0x50>
8100100d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001011:	66 83 f8 01          	cmp    $0x1,%ax
81001015:	74 1a                	je     81001031 <_fwalk_reent+0x50>
81001017:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100101b:	66 83 f8 ff          	cmp    $0xffff,%ax
8100101f:	74 10                	je     81001031 <_fwalk_reent+0x50>
81001021:	83 ec 08             	sub    $0x8,%esp
81001024:	53                   	push   %ebx
81001025:	ff 75 08             	push   0x8(%ebp)
81001028:	ff 55 0c             	call   *0xc(%ebp)
8100102b:	83 c4 10             	add    $0x10,%esp
8100102e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001031:	83 c3 68             	add    $0x68,%ebx
81001034:	83 ef 01             	sub    $0x1,%edi
81001037:	85 ff                	test   %edi,%edi
81001039:	79 c9                	jns    81001004 <_fwalk_reent+0x23>
8100103b:	8b 36                	mov    (%esi),%esi
8100103d:	85 f6                	test   %esi,%esi
8100103f:	75 bb                	jne    81000ffc <_fwalk_reent+0x1b>
81001041:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001044:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001047:	5b                   	pop    %ebx
81001048:	5e                   	pop    %esi
81001049:	5f                   	pop    %edi
8100104a:	5d                   	pop    %ebp
8100104b:	c3                   	ret    

8100104c <malloc_extend_top>:
8100104c:	55                   	push   %ebp
8100104d:	89 e5                	mov    %esp,%ebp
8100104f:	83 ec 38             	sub    $0x38,%esp
81001052:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001059:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100105e:	8b 40 08             	mov    0x8(%eax),%eax
81001061:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001064:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001067:	8b 40 04             	mov    0x4(%eax),%eax
8100106a:	83 e0 fc             	and    $0xfffffffc,%eax
8100106d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001070:	8b 55 e0             	mov    -0x20(%ebp),%edx
81001073:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001076:	01 d0                	add    %edx,%eax
81001078:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100107b:	8b 15 40 43 00 81    	mov    0x81004340,%edx
81001081:	8b 45 0c             	mov    0xc(%ebp),%eax
81001084:	01 d0                	add    %edx,%eax
81001086:	83 c0 10             	add    $0x10,%eax
81001089:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100108c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81001093:	a1 0c 41 00 81       	mov    0x8100410c,%eax
81001098:	83 f8 ff             	cmp    $0xffffffff,%eax
8100109b:	74 15                	je     810010b2 <malloc_extend_top+0x66>
8100109d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810010a0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010a3:	01 d0                	add    %edx,%eax
810010a5:	8d 50 ff             	lea    -0x1(%eax),%edx
810010a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010ab:	f7 d8                	neg    %eax
810010ad:	21 d0                	and    %edx,%eax
810010af:	89 45 e8             	mov    %eax,-0x18(%ebp)
810010b2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010b5:	83 ec 08             	sub    $0x8,%esp
810010b8:	50                   	push   %eax
810010b9:	ff 75 08             	push   0x8(%ebp)
810010bc:	e8 58 17 00 00       	call   81002819 <_sbrk_r>
810010c1:	83 c4 10             	add    $0x10,%esp
810010c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010c7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810010cb:	0f 84 0b 02 00 00    	je     810012dc <malloc_extend_top+0x290>
810010d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810010d7:	73 0e                	jae    810010e7 <malloc_extend_top+0x9b>
810010d9:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
810010de:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810010e1:	0f 85 f5 01 00 00    	jne    810012dc <malloc_extend_top+0x290>
810010e7:	a1 60 43 00 81       	mov    0x81004360,%eax
810010ec:	89 c2                	mov    %eax,%edx
810010ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010f1:	01 d0                	add    %edx,%eax
810010f3:	a3 60 43 00 81       	mov    %eax,0x81004360
810010f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010fb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810010fe:	75 30                	jne    81001130 <malloc_extend_top+0xe4>
81001100:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001103:	8d 50 ff             	lea    -0x1(%eax),%edx
81001106:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001109:	21 d0                	and    %edx,%eax
8100110b:	85 c0                	test   %eax,%eax
8100110d:	75 21                	jne    81001130 <malloc_extend_top+0xe4>
8100110f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001112:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001115:	01 d0                	add    %edx,%eax
81001117:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100111a:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100111f:	8b 40 08             	mov    0x8(%eax),%eax
81001122:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001125:	83 ca 01             	or     $0x1,%edx
81001128:	89 50 04             	mov    %edx,0x4(%eax)
8100112b:	e9 76 01 00 00       	jmp    810012a6 <malloc_extend_top+0x25a>
81001130:	a1 0c 41 00 81       	mov    0x8100410c,%eax
81001135:	83 f8 ff             	cmp    $0xffffffff,%eax
81001138:	75 0a                	jne    81001144 <malloc_extend_top+0xf8>
8100113a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100113d:	a3 0c 41 00 81       	mov    %eax,0x8100410c
81001142:	eb 13                	jmp    81001157 <malloc_extend_top+0x10b>
81001144:	8b 15 60 43 00 81    	mov    0x81004360,%edx
8100114a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100114d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001150:	01 d0                	add    %edx,%eax
81001152:	a3 60 43 00 81       	mov    %eax,0x81004360
81001157:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100115a:	83 c0 08             	add    $0x8,%eax
8100115d:	83 e0 07             	and    $0x7,%eax
81001160:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001163:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001167:	74 13                	je     8100117c <malloc_extend_top+0x130>
81001169:	b8 08 00 00 00       	mov    $0x8,%eax
8100116e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001171:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001174:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001177:	01 45 f4             	add    %eax,-0xc(%ebp)
8100117a:	eb 07                	jmp    81001183 <malloc_extend_top+0x137>
8100117c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001183:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001186:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001189:	01 d0                	add    %edx,%eax
8100118b:	89 c2                	mov    %eax,%edx
8100118d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001190:	83 e8 01             	sub    $0x1,%eax
81001193:	21 c2                	and    %eax,%edx
81001195:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001198:	29 d0                	sub    %edx,%eax
8100119a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100119d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810011a0:	83 e8 01             	sub    $0x1,%eax
810011a3:	21 45 f0             	and    %eax,-0x10(%ebp)
810011a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011a9:	83 ec 08             	sub    $0x8,%esp
810011ac:	50                   	push   %eax
810011ad:	ff 75 08             	push   0x8(%ebp)
810011b0:	e8 64 16 00 00       	call   81002819 <_sbrk_r>
810011b5:	83 c4 10             	add    $0x10,%esp
810011b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810011bb:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810011bf:	75 28                	jne    810011e9 <malloc_extend_top+0x19d>
810011c1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810011c8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810011cf:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011d2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810011d5:	01 d0                	add    %edx,%eax
810011d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810011da:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810011de:	74 09                	je     810011e9 <malloc_extend_top+0x19d>
810011e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011e3:	83 e8 08             	sub    $0x8,%eax
810011e6:	01 45 ec             	add    %eax,-0x14(%ebp)
810011e9:	a1 60 43 00 81       	mov    0x81004360,%eax
810011ee:	89 c2                	mov    %eax,%edx
810011f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011f3:	01 d0                	add    %edx,%eax
810011f5:	a3 60 43 00 81       	mov    %eax,0x81004360
810011fa:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
810011ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001202:	89 42 08             	mov    %eax,0x8(%edx)
81001205:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001208:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100120b:	89 c2                	mov    %eax,%edx
8100120d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001210:	01 d0                	add    %edx,%eax
81001212:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001215:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100121a:	8b 40 08             	mov    0x8(%eax),%eax
8100121d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001220:	83 ca 01             	or     $0x1,%edx
81001223:	89 50 04             	mov    %edx,0x4(%eax)
81001226:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100122b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100122e:	74 76                	je     810012a6 <malloc_extend_top+0x25a>
81001230:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001234:	77 14                	ja     8100124a <malloc_extend_top+0x1fe>
81001236:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100123b:	8b 40 08             	mov    0x8(%eax),%eax
8100123e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001245:	e9 93 00 00 00       	jmp    810012dd <malloc_extend_top+0x291>
8100124a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100124d:	83 e8 0c             	sub    $0xc,%eax
81001250:	83 e0 f8             	and    $0xfffffff8,%eax
81001253:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001256:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001259:	8b 40 04             	mov    0x4(%eax),%eax
8100125c:	83 e0 01             	and    $0x1,%eax
8100125f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001262:	89 c2                	mov    %eax,%edx
81001264:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001267:	89 50 04             	mov    %edx,0x4(%eax)
8100126a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100126d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001270:	01 d0                	add    %edx,%eax
81001272:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001279:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100127c:	8d 50 04             	lea    0x4(%eax),%edx
8100127f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001282:	01 d0                	add    %edx,%eax
81001284:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100128b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100128f:	76 15                	jbe    810012a6 <malloc_extend_top+0x25a>
81001291:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001294:	83 c0 08             	add    $0x8,%eax
81001297:	83 ec 08             	sub    $0x8,%esp
8100129a:	50                   	push   %eax
8100129b:	ff 75 08             	push   0x8(%ebp)
8100129e:	e8 8a 1c 00 00       	call   81002f2d <_free_r>
810012a3:	83 c4 10             	add    $0x10,%esp
810012a6:	a1 60 43 00 81       	mov    0x81004360,%eax
810012ab:	89 c2                	mov    %eax,%edx
810012ad:	a1 44 43 00 81       	mov    0x81004344,%eax
810012b2:	39 c2                	cmp    %eax,%edx
810012b4:	76 0a                	jbe    810012c0 <malloc_extend_top+0x274>
810012b6:	a1 60 43 00 81       	mov    0x81004360,%eax
810012bb:	a3 44 43 00 81       	mov    %eax,0x81004344
810012c0:	a1 60 43 00 81       	mov    0x81004360,%eax
810012c5:	89 c2                	mov    %eax,%edx
810012c7:	a1 48 43 00 81       	mov    0x81004348,%eax
810012cc:	39 c2                	cmp    %eax,%edx
810012ce:	76 0d                	jbe    810012dd <malloc_extend_top+0x291>
810012d0:	a1 60 43 00 81       	mov    0x81004360,%eax
810012d5:	a3 48 43 00 81       	mov    %eax,0x81004348
810012da:	eb 01                	jmp    810012dd <malloc_extend_top+0x291>
810012dc:	90                   	nop
810012dd:	c9                   	leave  
810012de:	c3                   	ret    

810012df <_malloc_r>:
810012df:	55                   	push   %ebp
810012e0:	89 e5                	mov    %esp,%ebp
810012e2:	53                   	push   %ebx
810012e3:	83 ec 44             	sub    $0x44,%esp
810012e6:	8b 45 0c             	mov    0xc(%ebp),%eax
810012e9:	83 c0 0b             	add    $0xb,%eax
810012ec:	83 f8 16             	cmp    $0x16,%eax
810012ef:	76 0b                	jbe    810012fc <_malloc_r+0x1d>
810012f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810012f4:	83 c0 0b             	add    $0xb,%eax
810012f7:	83 e0 f8             	and    $0xfffffff8,%eax
810012fa:	eb 05                	jmp    81001301 <_malloc_r+0x22>
810012fc:	b8 10 00 00 00       	mov    $0x10,%eax
81001301:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001304:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001307:	85 c0                	test   %eax,%eax
81001309:	78 08                	js     81001313 <_malloc_r+0x34>
8100130b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001311:	73 13                	jae    81001326 <_malloc_r+0x47>
81001313:	8b 45 08             	mov    0x8(%ebp),%eax
81001316:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100131c:	b8 00 00 00 00       	mov    $0x0,%eax
81001321:	e9 d6 07 00 00       	jmp    81001afc <_malloc_r+0x81d>
81001326:	83 ec 0c             	sub    $0xc,%esp
81001329:	ff 75 08             	push   0x8(%ebp)
8100132c:	e8 d4 09 00 00       	call   81001d05 <__malloc_lock>
81001331:	83 c4 10             	add    $0x10,%esp
81001334:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100133b:	0f 87 b0 00 00 00    	ja     810013f1 <_malloc_r+0x112>
81001341:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001344:	c1 e8 03             	shr    $0x3,%eax
81001347:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100134a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100134d:	83 c0 01             	add    $0x1,%eax
81001350:	01 c0                	add    %eax,%eax
81001352:	c1 e0 02             	shl    $0x2,%eax
81001355:	05 00 3d 00 81       	add    $0x81003d00,%eax
8100135a:	83 e8 08             	sub    $0x8,%eax
8100135d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001360:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001363:	8b 40 0c             	mov    0xc(%eax),%eax
81001366:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001369:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100136c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100136f:	75 0d                	jne    8100137e <_malloc_r+0x9f>
81001371:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001375:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001378:	8b 40 0c             	mov    0xc(%eax),%eax
8100137b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100137e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001381:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001384:	74 62                	je     810013e8 <_malloc_r+0x109>
81001386:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001389:	8b 40 04             	mov    0x4(%eax),%eax
8100138c:	83 e0 fc             	and    $0xfffffffc,%eax
8100138f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001392:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001395:	8b 40 0c             	mov    0xc(%eax),%eax
81001398:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100139b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100139e:	8b 40 08             	mov    0x8(%eax),%eax
810013a1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013a4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013a7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013aa:	89 50 0c             	mov    %edx,0xc(%eax)
810013ad:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013b0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013b3:	89 50 08             	mov    %edx,0x8(%eax)
810013b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013b9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013bc:	01 d0                	add    %edx,%eax
810013be:	8b 50 04             	mov    0x4(%eax),%edx
810013c1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013c4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013c7:	01 c8                	add    %ecx,%eax
810013c9:	83 ca 01             	or     $0x1,%edx
810013cc:	89 50 04             	mov    %edx,0x4(%eax)
810013cf:	83 ec 0c             	sub    $0xc,%esp
810013d2:	ff 75 08             	push   0x8(%ebp)
810013d5:	e8 31 09 00 00       	call   81001d0b <__malloc_unlock>
810013da:	83 c4 10             	add    $0x10,%esp
810013dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e0:	83 c0 08             	add    $0x8,%eax
810013e3:	e9 14 07 00 00       	jmp    81001afc <_malloc_r+0x81d>
810013e8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810013ec:	e9 46 01 00 00       	jmp    81001537 <_malloc_r+0x258>
810013f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013f4:	c1 e8 09             	shr    $0x9,%eax
810013f7:	85 c0                	test   %eax,%eax
810013f9:	75 08                	jne    81001403 <_malloc_r+0x124>
810013fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013fe:	c1 e8 03             	shr    $0x3,%eax
81001401:	eb 77                	jmp    8100147a <_malloc_r+0x19b>
81001403:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001406:	c1 e8 09             	shr    $0x9,%eax
81001409:	83 f8 04             	cmp    $0x4,%eax
8100140c:	77 0b                	ja     81001419 <_malloc_r+0x13a>
8100140e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001411:	c1 e8 06             	shr    $0x6,%eax
81001414:	83 c0 38             	add    $0x38,%eax
81001417:	eb 61                	jmp    8100147a <_malloc_r+0x19b>
81001419:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100141c:	c1 e8 09             	shr    $0x9,%eax
8100141f:	83 f8 14             	cmp    $0x14,%eax
81001422:	77 0b                	ja     8100142f <_malloc_r+0x150>
81001424:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001427:	c1 e8 09             	shr    $0x9,%eax
8100142a:	83 c0 5b             	add    $0x5b,%eax
8100142d:	eb 4b                	jmp    8100147a <_malloc_r+0x19b>
8100142f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001432:	c1 e8 09             	shr    $0x9,%eax
81001435:	83 f8 54             	cmp    $0x54,%eax
81001438:	77 0b                	ja     81001445 <_malloc_r+0x166>
8100143a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100143d:	c1 e8 0c             	shr    $0xc,%eax
81001440:	83 c0 6e             	add    $0x6e,%eax
81001443:	eb 35                	jmp    8100147a <_malloc_r+0x19b>
81001445:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001448:	c1 e8 09             	shr    $0x9,%eax
8100144b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001450:	77 0b                	ja     8100145d <_malloc_r+0x17e>
81001452:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001455:	c1 e8 0f             	shr    $0xf,%eax
81001458:	83 c0 77             	add    $0x77,%eax
8100145b:	eb 1d                	jmp    8100147a <_malloc_r+0x19b>
8100145d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001460:	c1 e8 09             	shr    $0x9,%eax
81001463:	3d 54 05 00 00       	cmp    $0x554,%eax
81001468:	77 0b                	ja     81001475 <_malloc_r+0x196>
8100146a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100146d:	c1 e8 12             	shr    $0x12,%eax
81001470:	83 c0 7c             	add    $0x7c,%eax
81001473:	eb 05                	jmp    8100147a <_malloc_r+0x19b>
81001475:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100147a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100147d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001480:	83 c0 01             	add    $0x1,%eax
81001483:	01 c0                	add    %eax,%eax
81001485:	c1 e0 02             	shl    $0x2,%eax
81001488:	05 00 3d 00 81       	add    $0x81003d00,%eax
8100148d:	83 e8 08             	sub    $0x8,%eax
81001490:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001493:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001496:	8b 40 0c             	mov    0xc(%eax),%eax
81001499:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100149c:	e9 86 00 00 00       	jmp    81001527 <_malloc_r+0x248>
810014a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014a4:	8b 40 04             	mov    0x4(%eax),%eax
810014a7:	83 e0 fc             	and    $0xfffffffc,%eax
810014aa:	89 45 cc             	mov    %eax,-0x34(%ebp)
810014ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014b0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810014b3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014b6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810014ba:	7e 06                	jle    810014c2 <_malloc_r+0x1e3>
810014bc:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810014c0:	eb 71                	jmp    81001533 <_malloc_r+0x254>
810014c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014c6:	78 56                	js     8100151e <_malloc_r+0x23f>
810014c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014cb:	8b 40 0c             	mov    0xc(%eax),%eax
810014ce:	89 45 d8             	mov    %eax,-0x28(%ebp)
810014d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d4:	8b 40 08             	mov    0x8(%eax),%eax
810014d7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810014da:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014dd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810014e0:	89 50 0c             	mov    %edx,0xc(%eax)
810014e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810014e6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810014e9:	89 50 08             	mov    %edx,0x8(%eax)
810014ec:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014ef:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f2:	01 d0                	add    %edx,%eax
810014f4:	8b 50 04             	mov    0x4(%eax),%edx
810014f7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014fa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014fd:	01 c8                	add    %ecx,%eax
810014ff:	83 ca 01             	or     $0x1,%edx
81001502:	89 50 04             	mov    %edx,0x4(%eax)
81001505:	83 ec 0c             	sub    $0xc,%esp
81001508:	ff 75 08             	push   0x8(%ebp)
8100150b:	e8 fb 07 00 00       	call   81001d0b <__malloc_unlock>
81001510:	83 c4 10             	add    $0x10,%esp
81001513:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001516:	83 c0 08             	add    $0x8,%eax
81001519:	e9 de 05 00 00       	jmp    81001afc <_malloc_r+0x81d>
8100151e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001521:	8b 40 0c             	mov    0xc(%eax),%eax
81001524:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001527:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100152a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100152d:	0f 85 6e ff ff ff    	jne    810014a1 <_malloc_r+0x1c2>
81001533:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001537:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
8100153c:	8b 40 08             	mov    0x8(%eax),%eax
8100153f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001542:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
81001547:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100154a:	0f 84 9c 02 00 00    	je     810017ec <_malloc_r+0x50d>
81001550:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001553:	8b 40 04             	mov    0x4(%eax),%eax
81001556:	83 e0 fc             	and    $0xfffffffc,%eax
81001559:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100155c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100155f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001562:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001565:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001569:	7e 7a                	jle    810015e5 <_malloc_r+0x306>
8100156b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100156e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001571:	01 d0                	add    %edx,%eax
81001573:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001576:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001579:	83 c8 01             	or     $0x1,%eax
8100157c:	89 c2                	mov    %eax,%edx
8100157e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001581:	89 50 04             	mov    %edx,0x4(%eax)
81001584:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
81001589:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100158c:	89 50 0c             	mov    %edx,0xc(%eax)
8100158f:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
81001594:	8b 40 0c             	mov    0xc(%eax),%eax
81001597:	89 42 08             	mov    %eax,0x8(%edx)
8100159a:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
8100159f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810015a2:	89 50 0c             	mov    %edx,0xc(%eax)
810015a5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810015a8:	8b 50 0c             	mov    0xc(%eax),%edx
810015ab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810015ae:	89 50 08             	mov    %edx,0x8(%eax)
810015b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015b4:	83 c8 01             	or     $0x1,%eax
810015b7:	89 c2                	mov    %eax,%edx
810015b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810015bc:	89 50 04             	mov    %edx,0x4(%eax)
810015bf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810015c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810015c5:	01 c2                	add    %eax,%edx
810015c7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015ca:	89 02                	mov    %eax,(%edx)
810015cc:	83 ec 0c             	sub    $0xc,%esp
810015cf:	ff 75 08             	push   0x8(%ebp)
810015d2:	e8 34 07 00 00       	call   81001d0b <__malloc_unlock>
810015d7:	83 c4 10             	add    $0x10,%esp
810015da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015dd:	83 c0 08             	add    $0x8,%eax
810015e0:	e9 17 05 00 00       	jmp    81001afc <_malloc_r+0x81d>
810015e5:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
810015ea:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810015ef:	89 50 0c             	mov    %edx,0xc(%eax)
810015f2:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810015f7:	8b 40 0c             	mov    0xc(%eax),%eax
810015fa:	89 42 08             	mov    %eax,0x8(%edx)
810015fd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001601:	78 32                	js     81001635 <_malloc_r+0x356>
81001603:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001606:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001609:	01 d0                	add    %edx,%eax
8100160b:	8b 50 04             	mov    0x4(%eax),%edx
8100160e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001611:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001614:	01 c8                	add    %ecx,%eax
81001616:	83 ca 01             	or     $0x1,%edx
81001619:	89 50 04             	mov    %edx,0x4(%eax)
8100161c:	83 ec 0c             	sub    $0xc,%esp
8100161f:	ff 75 08             	push   0x8(%ebp)
81001622:	e8 e4 06 00 00       	call   81001d0b <__malloc_unlock>
81001627:	83 c4 10             	add    $0x10,%esp
8100162a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100162d:	83 c0 08             	add    $0x8,%eax
81001630:	e9 c7 04 00 00       	jmp    81001afc <_malloc_r+0x81d>
81001635:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100163c:	77 7f                	ja     810016bd <_malloc_r+0x3de>
8100163e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001641:	c1 e8 03             	shr    $0x3,%eax
81001644:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001647:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100164c:	8b 58 04             	mov    0x4(%eax),%ebx
8100164f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001652:	8d 50 03             	lea    0x3(%eax),%edx
81001655:	85 c0                	test   %eax,%eax
81001657:	0f 48 c2             	cmovs  %edx,%eax
8100165a:	c1 f8 02             	sar    $0x2,%eax
8100165d:	ba 01 00 00 00       	mov    $0x1,%edx
81001662:	89 c1                	mov    %eax,%ecx
81001664:	d3 e2                	shl    %cl,%edx
81001666:	89 d0                	mov    %edx,%eax
81001668:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
8100166d:	09 d8                	or     %ebx,%eax
8100166f:	89 42 04             	mov    %eax,0x4(%edx)
81001672:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001675:	83 c0 01             	add    $0x1,%eax
81001678:	01 c0                	add    %eax,%eax
8100167a:	c1 e0 02             	shl    $0x2,%eax
8100167d:	05 00 3d 00 81       	add    $0x81003d00,%eax
81001682:	83 e8 08             	sub    $0x8,%eax
81001685:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001688:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100168b:	8b 40 08             	mov    0x8(%eax),%eax
8100168e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001694:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001697:	89 50 0c             	mov    %edx,0xc(%eax)
8100169a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100169d:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016a0:	89 50 08             	mov    %edx,0x8(%eax)
810016a3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016a6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016a9:	89 50 08             	mov    %edx,0x8(%eax)
810016ac:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016af:	8b 50 08             	mov    0x8(%eax),%edx
810016b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b5:	89 50 0c             	mov    %edx,0xc(%eax)
810016b8:	e9 2f 01 00 00       	jmp    810017ec <_malloc_r+0x50d>
810016bd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016c0:	c1 e8 09             	shr    $0x9,%eax
810016c3:	85 c0                	test   %eax,%eax
810016c5:	75 08                	jne    810016cf <_malloc_r+0x3f0>
810016c7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016ca:	c1 e8 03             	shr    $0x3,%eax
810016cd:	eb 77                	jmp    81001746 <_malloc_r+0x467>
810016cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016d2:	c1 e8 09             	shr    $0x9,%eax
810016d5:	83 f8 04             	cmp    $0x4,%eax
810016d8:	77 0b                	ja     810016e5 <_malloc_r+0x406>
810016da:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016dd:	c1 e8 06             	shr    $0x6,%eax
810016e0:	83 c0 38             	add    $0x38,%eax
810016e3:	eb 61                	jmp    81001746 <_malloc_r+0x467>
810016e5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016e8:	c1 e8 09             	shr    $0x9,%eax
810016eb:	83 f8 14             	cmp    $0x14,%eax
810016ee:	77 0b                	ja     810016fb <_malloc_r+0x41c>
810016f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016f3:	c1 e8 09             	shr    $0x9,%eax
810016f6:	83 c0 5b             	add    $0x5b,%eax
810016f9:	eb 4b                	jmp    81001746 <_malloc_r+0x467>
810016fb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810016fe:	c1 e8 09             	shr    $0x9,%eax
81001701:	83 f8 54             	cmp    $0x54,%eax
81001704:	77 0b                	ja     81001711 <_malloc_r+0x432>
81001706:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001709:	c1 e8 0c             	shr    $0xc,%eax
8100170c:	83 c0 6e             	add    $0x6e,%eax
8100170f:	eb 35                	jmp    81001746 <_malloc_r+0x467>
81001711:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001714:	c1 e8 09             	shr    $0x9,%eax
81001717:	3d 54 01 00 00       	cmp    $0x154,%eax
8100171c:	77 0b                	ja     81001729 <_malloc_r+0x44a>
8100171e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001721:	c1 e8 0f             	shr    $0xf,%eax
81001724:	83 c0 77             	add    $0x77,%eax
81001727:	eb 1d                	jmp    81001746 <_malloc_r+0x467>
81001729:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100172c:	c1 e8 09             	shr    $0x9,%eax
8100172f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001734:	77 0b                	ja     81001741 <_malloc_r+0x462>
81001736:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001739:	c1 e8 12             	shr    $0x12,%eax
8100173c:	83 c0 7c             	add    $0x7c,%eax
8100173f:	eb 05                	jmp    81001746 <_malloc_r+0x467>
81001741:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001746:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001749:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100174c:	83 c0 01             	add    $0x1,%eax
8100174f:	01 c0                	add    %eax,%eax
81001751:	c1 e0 02             	shl    $0x2,%eax
81001754:	05 00 3d 00 81       	add    $0x81003d00,%eax
81001759:	83 e8 08             	sub    $0x8,%eax
8100175c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100175f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001762:	8b 40 08             	mov    0x8(%eax),%eax
81001765:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001768:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100176b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100176e:	75 36                	jne    810017a6 <_malloc_r+0x4c7>
81001770:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001775:	8b 58 04             	mov    0x4(%eax),%ebx
81001778:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100177b:	8d 50 03             	lea    0x3(%eax),%edx
8100177e:	85 c0                	test   %eax,%eax
81001780:	0f 48 c2             	cmovs  %edx,%eax
81001783:	c1 f8 02             	sar    $0x2,%eax
81001786:	ba 01 00 00 00       	mov    $0x1,%edx
8100178b:	89 c1                	mov    %eax,%ecx
8100178d:	d3 e2                	shl    %cl,%edx
8100178f:	89 d0                	mov    %edx,%eax
81001791:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
81001796:	09 d8                	or     %ebx,%eax
81001798:	89 42 04             	mov    %eax,0x4(%edx)
8100179b:	eb 28                	jmp    810017c5 <_malloc_r+0x4e6>
8100179d:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017a0:	8b 40 08             	mov    0x8(%eax),%eax
810017a3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017a6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017a9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810017ac:	74 0e                	je     810017bc <_malloc_r+0x4dd>
810017ae:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017b1:	8b 40 04             	mov    0x4(%eax),%eax
810017b4:	83 e0 fc             	and    $0xfffffffc,%eax
810017b7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810017ba:	72 e1                	jb     8100179d <_malloc_r+0x4be>
810017bc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017bf:	8b 40 0c             	mov    0xc(%eax),%eax
810017c2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017cb:	89 50 0c             	mov    %edx,0xc(%eax)
810017ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017d4:	89 50 08             	mov    %edx,0x8(%eax)
810017d7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017da:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017dd:	89 50 08             	mov    %edx,0x8(%eax)
810017e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017e3:	8b 50 08             	mov    0x8(%eax),%edx
810017e6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017e9:	89 50 0c             	mov    %edx,0xc(%eax)
810017ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017ef:	8d 50 03             	lea    0x3(%eax),%edx
810017f2:	85 c0                	test   %eax,%eax
810017f4:	0f 48 c2             	cmovs  %edx,%eax
810017f7:	c1 f8 02             	sar    $0x2,%eax
810017fa:	ba 01 00 00 00       	mov    $0x1,%edx
810017ff:	89 c1                	mov    %eax,%ecx
81001801:	d3 e2                	shl    %cl,%edx
81001803:	89 d0                	mov    %edx,%eax
81001805:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001808:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100180d:	8b 40 04             	mov    0x4(%eax),%eax
81001810:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001813:	0f 87 13 02 00 00    	ja     81001a2c <_malloc_r+0x74d>
81001819:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100181e:	8b 40 04             	mov    0x4(%eax),%eax
81001821:	23 45 e4             	and    -0x1c(%ebp),%eax
81001824:	85 c0                	test   %eax,%eax
81001826:	75 27                	jne    8100184f <_malloc_r+0x570>
81001828:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100182b:	83 e0 fc             	and    $0xfffffffc,%eax
8100182e:	83 c0 04             	add    $0x4,%eax
81001831:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001834:	d1 65 e4             	shll   -0x1c(%ebp)
81001837:	eb 07                	jmp    81001840 <_malloc_r+0x561>
81001839:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100183d:	d1 65 e4             	shll   -0x1c(%ebp)
81001840:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001845:	8b 40 04             	mov    0x4(%eax),%eax
81001848:	23 45 e4             	and    -0x1c(%ebp),%eax
8100184b:	85 c0                	test   %eax,%eax
8100184d:	74 ea                	je     81001839 <_malloc_r+0x55a>
8100184f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001852:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001855:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001858:	83 c0 01             	add    $0x1,%eax
8100185b:	01 c0                	add    %eax,%eax
8100185d:	c1 e0 02             	shl    $0x2,%eax
81001860:	05 00 3d 00 81       	add    $0x81003d00,%eax
81001865:	83 e8 08             	sub    $0x8,%eax
81001868:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100186b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100186e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001871:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001874:	8b 40 0c             	mov    0xc(%eax),%eax
81001877:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100187a:	e9 22 01 00 00       	jmp    810019a1 <_malloc_r+0x6c2>
8100187f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001882:	8b 40 04             	mov    0x4(%eax),%eax
81001885:	83 e0 fc             	and    $0xfffffffc,%eax
81001888:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100188b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100188e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001891:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001894:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001898:	0f 8e 9e 00 00 00    	jle    8100193c <_malloc_r+0x65d>
8100189e:	8b 55 f4             	mov    -0xc(%ebp),%edx
810018a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018a4:	01 d0                	add    %edx,%eax
810018a6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810018a9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018ac:	83 c8 01             	or     $0x1,%eax
810018af:	89 c2                	mov    %eax,%edx
810018b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b4:	89 50 04             	mov    %edx,0x4(%eax)
810018b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ba:	8b 40 0c             	mov    0xc(%eax),%eax
810018bd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810018c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c3:	8b 40 08             	mov    0x8(%eax),%eax
810018c6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810018c9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018cc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810018cf:	89 50 0c             	mov    %edx,0xc(%eax)
810018d2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018d8:	89 50 08             	mov    %edx,0x8(%eax)
810018db:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
810018e0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810018e3:	89 50 0c             	mov    %edx,0xc(%eax)
810018e6:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810018eb:	8b 40 0c             	mov    0xc(%eax),%eax
810018ee:	89 42 08             	mov    %eax,0x8(%edx)
810018f1:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810018f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810018f9:	89 50 0c             	mov    %edx,0xc(%eax)
810018fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810018ff:	8b 50 0c             	mov    0xc(%eax),%edx
81001902:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001905:	89 50 08             	mov    %edx,0x8(%eax)
81001908:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100190b:	83 c8 01             	or     $0x1,%eax
8100190e:	89 c2                	mov    %eax,%edx
81001910:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001913:	89 50 04             	mov    %edx,0x4(%eax)
81001916:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001919:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100191c:	01 c2                	add    %eax,%edx
8100191e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001921:	89 02                	mov    %eax,(%edx)
81001923:	83 ec 0c             	sub    $0xc,%esp
81001926:	ff 75 08             	push   0x8(%ebp)
81001929:	e8 dd 03 00 00       	call   81001d0b <__malloc_unlock>
8100192e:	83 c4 10             	add    $0x10,%esp
81001931:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001934:	83 c0 08             	add    $0x8,%eax
81001937:	e9 c0 01 00 00       	jmp    81001afc <_malloc_r+0x81d>
8100193c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001940:	78 56                	js     81001998 <_malloc_r+0x6b9>
81001942:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001945:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001948:	01 d0                	add    %edx,%eax
8100194a:	8b 50 04             	mov    0x4(%eax),%edx
8100194d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001950:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001953:	01 c8                	add    %ecx,%eax
81001955:	83 ca 01             	or     $0x1,%edx
81001958:	89 50 04             	mov    %edx,0x4(%eax)
8100195b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100195e:	8b 40 0c             	mov    0xc(%eax),%eax
81001961:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001964:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001967:	8b 40 08             	mov    0x8(%eax),%eax
8100196a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100196d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001970:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001973:	89 50 0c             	mov    %edx,0xc(%eax)
81001976:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001979:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100197c:	89 50 08             	mov    %edx,0x8(%eax)
8100197f:	83 ec 0c             	sub    $0xc,%esp
81001982:	ff 75 08             	push   0x8(%ebp)
81001985:	e8 81 03 00 00       	call   81001d0b <__malloc_unlock>
8100198a:	83 c4 10             	add    $0x10,%esp
8100198d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001990:	83 c0 08             	add    $0x8,%eax
81001993:	e9 64 01 00 00       	jmp    81001afc <_malloc_r+0x81d>
81001998:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100199b:	8b 40 0c             	mov    0xc(%eax),%eax
8100199e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019a4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810019a7:	0f 85 d2 fe ff ff    	jne    8100187f <_malloc_r+0x5a0>
810019ad:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810019b1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810019b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810019b8:	83 e0 03             	and    $0x3,%eax
810019bb:	85 c0                	test   %eax,%eax
810019bd:	0f 85 ae fe ff ff    	jne    81001871 <_malloc_r+0x592>
810019c3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810019c6:	83 e0 03             	and    $0x3,%eax
810019c9:	85 c0                	test   %eax,%eax
810019cb:	75 19                	jne    810019e6 <_malloc_r+0x707>
810019cd:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
810019d2:	8b 48 04             	mov    0x4(%eax),%ecx
810019d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810019d8:	f7 d0                	not    %eax
810019da:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
810019df:	21 c8                	and    %ecx,%eax
810019e1:	89 42 04             	mov    %eax,0x4(%edx)
810019e4:	eb 13                	jmp    810019f9 <_malloc_r+0x71a>
810019e6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810019ea:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810019ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810019f1:	8b 40 08             	mov    0x8(%eax),%eax
810019f4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810019f7:	74 ca                	je     810019c3 <_malloc_r+0x6e4>
810019f9:	d1 65 e4             	shll   -0x1c(%ebp)
810019fc:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a01:	8b 40 04             	mov    0x4(%eax),%eax
81001a04:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001a07:	77 23                	ja     81001a2c <_malloc_r+0x74d>
81001a09:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001a0d:	74 1d                	je     81001a2c <_malloc_r+0x74d>
81001a0f:	eb 07                	jmp    81001a18 <_malloc_r+0x739>
81001a11:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001a15:	d1 65 e4             	shll   -0x1c(%ebp)
81001a18:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a1d:	8b 40 04             	mov    0x4(%eax),%eax
81001a20:	23 45 e4             	and    -0x1c(%ebp),%eax
81001a23:	85 c0                	test   %eax,%eax
81001a25:	74 ea                	je     81001a11 <_malloc_r+0x732>
81001a27:	e9 23 fe ff ff       	jmp    8100184f <_malloc_r+0x570>
81001a2c:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a31:	8b 40 08             	mov    0x8(%eax),%eax
81001a34:	8b 40 04             	mov    0x4(%eax),%eax
81001a37:	83 e0 fc             	and    $0xfffffffc,%eax
81001a3a:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001a3d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a40:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a45:	8b 40 08             	mov    0x8(%eax),%eax
81001a48:	8b 40 04             	mov    0x4(%eax),%eax
81001a4b:	83 e0 fc             	and    $0xfffffffc,%eax
81001a4e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001a51:	77 06                	ja     81001a59 <_malloc_r+0x77a>
81001a53:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001a57:	7f 53                	jg     81001aac <_malloc_r+0x7cd>
81001a59:	83 ec 08             	sub    $0x8,%esp
81001a5c:	ff 75 d0             	push   -0x30(%ebp)
81001a5f:	ff 75 08             	push   0x8(%ebp)
81001a62:	e8 e5 f5 ff ff       	call   8100104c <malloc_extend_top>
81001a67:	83 c4 10             	add    $0x10,%esp
81001a6a:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a6f:	8b 40 08             	mov    0x8(%eax),%eax
81001a72:	8b 40 04             	mov    0x4(%eax),%eax
81001a75:	83 e0 fc             	and    $0xfffffffc,%eax
81001a78:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001a7b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001a7e:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001a83:	8b 40 08             	mov    0x8(%eax),%eax
81001a86:	8b 40 04             	mov    0x4(%eax),%eax
81001a89:	83 e0 fc             	and    $0xfffffffc,%eax
81001a8c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001a8f:	77 06                	ja     81001a97 <_malloc_r+0x7b8>
81001a91:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001a95:	7f 15                	jg     81001aac <_malloc_r+0x7cd>
81001a97:	83 ec 0c             	sub    $0xc,%esp
81001a9a:	ff 75 08             	push   0x8(%ebp)
81001a9d:	e8 69 02 00 00       	call   81001d0b <__malloc_unlock>
81001aa2:	83 c4 10             	add    $0x10,%esp
81001aa5:	b8 00 00 00 00       	mov    $0x0,%eax
81001aaa:	eb 50                	jmp    81001afc <_malloc_r+0x81d>
81001aac:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001ab1:	8b 40 08             	mov    0x8(%eax),%eax
81001ab4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ab7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001aba:	83 c8 01             	or     $0x1,%eax
81001abd:	89 c2                	mov    %eax,%edx
81001abf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ac2:	89 50 04             	mov    %edx,0x4(%eax)
81001ac5:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
81001aca:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001acd:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001ad0:	01 c8                	add    %ecx,%eax
81001ad2:	89 42 08             	mov    %eax,0x8(%edx)
81001ad5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ad8:	83 c8 01             	or     $0x1,%eax
81001adb:	89 c2                	mov    %eax,%edx
81001add:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001ae2:	8b 40 08             	mov    0x8(%eax),%eax
81001ae5:	89 50 04             	mov    %edx,0x4(%eax)
81001ae8:	83 ec 0c             	sub    $0xc,%esp
81001aeb:	ff 75 08             	push   0x8(%ebp)
81001aee:	e8 18 02 00 00       	call   81001d0b <__malloc_unlock>
81001af3:	83 c4 10             	add    $0x10,%esp
81001af6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001af9:	83 c0 08             	add    $0x8,%eax
81001afc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001aff:	c9                   	leave  
81001b00:	c3                   	ret    
81001b01:	66 90                	xchg   %ax,%ax
81001b03:	66 90                	xchg   %ax,%ax
81001b05:	66 90                	xchg   %ax,%ax
81001b07:	66 90                	xchg   %ax,%ax
81001b09:	66 90                	xchg   %ax,%ax
81001b0b:	66 90                	xchg   %ax,%ax
81001b0d:	66 90                	xchg   %ax,%ax
81001b0f:	90                   	nop

81001b10 <memchr>:
81001b10:	55                   	push   %ebp
81001b11:	89 e5                	mov    %esp,%ebp
81001b13:	57                   	push   %edi
81001b14:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b18:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b1b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b1e:	31 d2                	xor    %edx,%edx
81001b20:	85 c9                	test   %ecx,%ecx
81001b22:	74 79                	je     81001b9d <L20>
81001b24:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001b2a:	74 28                	je     81001b54 <L5>
81001b2c:	3a 07                	cmp    (%edi),%al
81001b2e:	74 6a                	je     81001b9a <L15>
81001b30:	47                   	inc    %edi
81001b31:	49                   	dec    %ecx
81001b32:	74 69                	je     81001b9d <L20>
81001b34:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001b3a:	74 18                	je     81001b54 <L5>
81001b3c:	3a 07                	cmp    (%edi),%al
81001b3e:	74 5a                	je     81001b9a <L15>
81001b40:	47                   	inc    %edi
81001b41:	49                   	dec    %ecx
81001b42:	74 59                	je     81001b9d <L20>
81001b44:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001b4a:	74 08                	je     81001b54 <L5>
81001b4c:	3a 07                	cmp    (%edi),%al
81001b4e:	74 4a                	je     81001b9a <L15>
81001b50:	47                   	inc    %edi
81001b51:	49                   	dec    %ecx
81001b52:	74 49                	je     81001b9d <L20>

81001b54 <L5>:
81001b54:	88 c4                	mov    %al,%ah
81001b56:	89 c2                	mov    %eax,%edx
81001b58:	c1 e2 10             	shl    $0x10,%edx
81001b5b:	09 d0                	or     %edx,%eax
81001b5d:	53                   	push   %ebx
81001b5e:	66 90                	xchg   %ax,%ax

81001b60 <L8>:
81001b60:	83 e9 04             	sub    $0x4,%ecx
81001b63:	72 1c                	jb     81001b81 <L9>
81001b65:	8b 17                	mov    (%edi),%edx
81001b67:	83 c7 04             	add    $0x4,%edi
81001b6a:	31 c2                	xor    %eax,%edx
81001b6c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001b72:	f7 d2                	not    %edx
81001b74:	21 d3                	and    %edx,%ebx
81001b76:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001b7c:	74 e2                	je     81001b60 <L8>
81001b7e:	83 ef 04             	sub    $0x4,%edi

81001b81 <L9>:
81001b81:	5b                   	pop    %ebx
81001b82:	31 d2                	xor    %edx,%edx
81001b84:	83 c1 04             	add    $0x4,%ecx
81001b87:	74 14                	je     81001b9d <L20>
81001b89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001b90 <L10>:
81001b90:	3a 07                	cmp    (%edi),%al
81001b92:	74 06                	je     81001b9a <L15>
81001b94:	47                   	inc    %edi
81001b95:	49                   	dec    %ecx
81001b96:	75 f8                	jne    81001b90 <L10>
81001b98:	31 ff                	xor    %edi,%edi

81001b9a <L15>:
81001b9a:	4a                   	dec    %edx
81001b9b:	21 fa                	and    %edi,%edx

81001b9d <L20>:
81001b9d:	89 d0                	mov    %edx,%eax
81001b9f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001ba2:	5f                   	pop    %edi
81001ba3:	c9                   	leave  
81001ba4:	c3                   	ret    
81001ba5:	66 90                	xchg   %ax,%ax
81001ba7:	90                   	nop

81001ba8 <memcpy>:
81001ba8:	55                   	push   %ebp
81001ba9:	89 e5                	mov    %esp,%ebp
81001bab:	56                   	push   %esi
81001bac:	57                   	push   %edi
81001bad:	53                   	push   %ebx
81001bae:	8b 7d 08             	mov    0x8(%ebp),%edi
81001bb1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001bb4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001bb7:	fc                   	cld    
81001bb8:	83 f9 08             	cmp    $0x8,%ecx
81001bbb:	76 26                	jbe    81001be3 <memcpy+0x3b>
81001bbd:	89 fa                	mov    %edi,%edx
81001bbf:	89 cb                	mov    %ecx,%ebx
81001bc1:	83 e2 03             	and    $0x3,%edx
81001bc4:	74 10                	je     81001bd6 <memcpy+0x2e>
81001bc6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001bcb:	29 d1                	sub    %edx,%ecx
81001bcd:	83 e1 03             	and    $0x3,%ecx
81001bd0:	29 cb                	sub    %ecx,%ebx
81001bd2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001bd4:	89 d9                	mov    %ebx,%ecx
81001bd6:	c1 e9 02             	shr    $0x2,%ecx
81001bd9:	8d 76 00             	lea    0x0(%esi),%esi
81001bdc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001bde:	89 d9                	mov    %ebx,%ecx
81001be0:	83 e1 03             	and    $0x3,%ecx
81001be3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001be5:	8b 45 08             	mov    0x8(%ebp),%eax
81001be8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001beb:	5b                   	pop    %ebx
81001bec:	5f                   	pop    %edi
81001bed:	5e                   	pop    %esi
81001bee:	c9                   	leave  
81001bef:	c3                   	ret    

81001bf0 <memmove>:
81001bf0:	55                   	push   %ebp
81001bf1:	89 e5                	mov    %esp,%ebp
81001bf3:	56                   	push   %esi
81001bf4:	57                   	push   %edi
81001bf5:	53                   	push   %ebx
81001bf6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001bf9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001bfc:	8b 75 0c             	mov    0xc(%ebp),%esi
81001bff:	fc                   	cld    
81001c00:	39 fe                	cmp    %edi,%esi
81001c02:	73 43                	jae    81001c47 <memmove+0x57>
81001c04:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001c08:	39 df                	cmp    %ebx,%edi
81001c0a:	77 3b                	ja     81001c47 <memmove+0x57>
81001c0c:	01 ce                	add    %ecx,%esi
81001c0e:	01 cf                	add    %ecx,%edi
81001c10:	fd                   	std    
81001c11:	83 f9 08             	cmp    $0x8,%ecx
81001c14:	76 2b                	jbe    81001c41 <memmove+0x51>
81001c16:	89 fa                	mov    %edi,%edx
81001c18:	89 cb                	mov    %ecx,%ebx
81001c1a:	83 e2 03             	and    $0x3,%edx
81001c1d:	74 0c                	je     81001c2b <memmove+0x3b>
81001c1f:	89 d1                	mov    %edx,%ecx
81001c21:	4e                   	dec    %esi
81001c22:	4f                   	dec    %edi
81001c23:	29 cb                	sub    %ecx,%ebx
81001c25:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001c27:	89 d9                	mov    %ebx,%ecx
81001c29:	46                   	inc    %esi
81001c2a:	47                   	inc    %edi
81001c2b:	c1 e9 02             	shr    $0x2,%ecx
81001c2e:	83 ee 04             	sub    $0x4,%esi
81001c31:	83 ef 04             	sub    $0x4,%edi
81001c34:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001c36:	83 c6 04             	add    $0x4,%esi
81001c39:	83 c7 04             	add    $0x4,%edi
81001c3c:	89 d9                	mov    %ebx,%ecx
81001c3e:	83 e1 03             	and    $0x3,%ecx
81001c41:	4e                   	dec    %esi
81001c42:	4f                   	dec    %edi
81001c43:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001c45:	eb 2a                	jmp    81001c71 <memmove+0x81>
81001c47:	83 f9 08             	cmp    $0x8,%ecx
81001c4a:	76 23                	jbe    81001c6f <memmove+0x7f>
81001c4c:	89 fa                	mov    %edi,%edx
81001c4e:	89 cb                	mov    %ecx,%ebx
81001c50:	83 e2 03             	and    $0x3,%edx
81001c53:	74 10                	je     81001c65 <memmove+0x75>
81001c55:	b9 04 00 00 00       	mov    $0x4,%ecx
81001c5a:	29 d1                	sub    %edx,%ecx
81001c5c:	83 e1 03             	and    $0x3,%ecx
81001c5f:	29 cb                	sub    %ecx,%ebx
81001c61:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001c63:	89 d9                	mov    %ebx,%ecx
81001c65:	c1 e9 02             	shr    $0x2,%ecx
81001c68:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001c6a:	89 d9                	mov    %ebx,%ecx
81001c6c:	83 e1 03             	and    $0x3,%ecx
81001c6f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001c71:	8b 45 08             	mov    0x8(%ebp),%eax
81001c74:	fc                   	cld    
81001c75:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001c78:	5b                   	pop    %ebx
81001c79:	5f                   	pop    %edi
81001c7a:	5e                   	pop    %esi
81001c7b:	c9                   	leave  
81001c7c:	c3                   	ret    

81001c7d <memset>:
81001c7d:	55                   	push   %ebp
81001c7e:	89 e5                	mov    %esp,%ebp
81001c80:	57                   	push   %edi
81001c81:	8b 7d 08             	mov    0x8(%ebp),%edi
81001c84:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001c88:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001c8b:	fc                   	cld    
81001c8c:	83 f9 10             	cmp    $0x10,%ecx
81001c8f:	76 69                	jbe    81001cfa <memset+0x7d>
81001c91:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001c97:	74 4c                	je     81001ce5 <memset+0x68>
81001c99:	88 07                	mov    %al,(%edi)
81001c9b:	47                   	inc    %edi
81001c9c:	49                   	dec    %ecx
81001c9d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ca3:	74 40                	je     81001ce5 <memset+0x68>
81001ca5:	88 07                	mov    %al,(%edi)
81001ca7:	47                   	inc    %edi
81001ca8:	49                   	dec    %ecx
81001ca9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001caf:	74 34                	je     81001ce5 <memset+0x68>
81001cb1:	88 07                	mov    %al,(%edi)
81001cb3:	47                   	inc    %edi
81001cb4:	49                   	dec    %ecx
81001cb5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001cbb:	74 28                	je     81001ce5 <memset+0x68>
81001cbd:	88 07                	mov    %al,(%edi)
81001cbf:	47                   	inc    %edi
81001cc0:	49                   	dec    %ecx
81001cc1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001cc7:	74 1c                	je     81001ce5 <memset+0x68>
81001cc9:	88 07                	mov    %al,(%edi)
81001ccb:	47                   	inc    %edi
81001ccc:	49                   	dec    %ecx
81001ccd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001cd3:	74 10                	je     81001ce5 <memset+0x68>
81001cd5:	88 07                	mov    %al,(%edi)
81001cd7:	47                   	inc    %edi
81001cd8:	49                   	dec    %ecx
81001cd9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001cdf:	74 04                	je     81001ce5 <memset+0x68>
81001ce1:	88 07                	mov    %al,(%edi)
81001ce3:	47                   	inc    %edi
81001ce4:	49                   	dec    %ecx
81001ce5:	88 c4                	mov    %al,%ah
81001ce7:	89 c2                	mov    %eax,%edx
81001ce9:	c1 e2 10             	shl    $0x10,%edx
81001cec:	09 d0                	or     %edx,%eax
81001cee:	89 ca                	mov    %ecx,%edx
81001cf0:	c1 e9 02             	shr    $0x2,%ecx
81001cf3:	83 e2 03             	and    $0x3,%edx
81001cf6:	f3 ab                	rep stos %eax,%es:(%edi)
81001cf8:	89 d1                	mov    %edx,%ecx
81001cfa:	f3 aa                	rep stos %al,%es:(%edi)
81001cfc:	8b 45 08             	mov    0x8(%ebp),%eax
81001cff:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001d02:	5f                   	pop    %edi
81001d03:	c9                   	leave  
81001d04:	c3                   	ret    

81001d05 <__malloc_lock>:
81001d05:	55                   	push   %ebp
81001d06:	89 e5                	mov    %esp,%ebp
81001d08:	90                   	nop
81001d09:	5d                   	pop    %ebp
81001d0a:	c3                   	ret    

81001d0b <__malloc_unlock>:
81001d0b:	55                   	push   %ebp
81001d0c:	89 e5                	mov    %esp,%ebp
81001d0e:	90                   	nop
81001d0f:	5d                   	pop    %ebp
81001d10:	c3                   	ret    

81001d11 <_realloc_r>:
81001d11:	55                   	push   %ebp
81001d12:	89 e5                	mov    %esp,%ebp
81001d14:	83 ec 78             	sub    $0x78,%esp
81001d17:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001d1b:	75 16                	jne    81001d33 <_realloc_r+0x22>
81001d1d:	83 ec 08             	sub    $0x8,%esp
81001d20:	ff 75 10             	push   0x10(%ebp)
81001d23:	ff 75 08             	push   0x8(%ebp)
81001d26:	e8 b4 f5 ff ff       	call   810012df <_malloc_r>
81001d2b:	83 c4 10             	add    $0x10,%esp
81001d2e:	e9 b6 08 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
81001d33:	83 ec 0c             	sub    $0xc,%esp
81001d36:	ff 75 08             	push   0x8(%ebp)
81001d39:	e8 c7 ff ff ff       	call   81001d05 <__malloc_lock>
81001d3e:	83 c4 10             	add    $0x10,%esp
81001d41:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d44:	83 e8 08             	sub    $0x8,%eax
81001d47:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001d4a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d50:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d53:	8b 40 04             	mov    0x4(%eax),%eax
81001d56:	83 e0 fc             	and    $0xfffffffc,%eax
81001d59:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001d5c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001d5f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001d62:	8b 45 10             	mov    0x10(%ebp),%eax
81001d65:	83 c0 0b             	add    $0xb,%eax
81001d68:	83 f8 16             	cmp    $0x16,%eax
81001d6b:	76 0b                	jbe    81001d78 <_realloc_r+0x67>
81001d6d:	8b 45 10             	mov    0x10(%ebp),%eax
81001d70:	83 c0 0b             	add    $0xb,%eax
81001d73:	83 e0 f8             	and    $0xfffffff8,%eax
81001d76:	eb 05                	jmp    81001d7d <_realloc_r+0x6c>
81001d78:	b8 10 00 00 00       	mov    $0x10,%eax
81001d7d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001d80:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d83:	85 c0                	test   %eax,%eax
81001d85:	78 08                	js     81001d8f <_realloc_r+0x7e>
81001d87:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d8a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001d8d:	73 13                	jae    81001da2 <_realloc_r+0x91>
81001d8f:	8b 45 08             	mov    0x8(%ebp),%eax
81001d92:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001d98:	b8 00 00 00 00       	mov    $0x0,%eax
81001d9d:	e9 47 08 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
81001da2:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001da5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001da8:	39 c2                	cmp    %eax,%edx
81001daa:	0f 8d 8b 07 00 00    	jge    8100253b <_realloc_r+0x82a>
81001db0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001db3:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001db6:	01 d0                	add    %edx,%eax
81001db8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001dbb:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001dc0:	8b 40 08             	mov    0x8(%eax),%eax
81001dc3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dc6:	74 1e                	je     81001de6 <_realloc_r+0xd5>
81001dc8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001dcb:	8b 40 04             	mov    0x4(%eax),%eax
81001dce:	83 e0 fe             	and    $0xfffffffe,%eax
81001dd1:	89 c2                	mov    %eax,%edx
81001dd3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001dd6:	01 d0                	add    %edx,%eax
81001dd8:	8b 40 04             	mov    0x4(%eax),%eax
81001ddb:	83 e0 01             	and    $0x1,%eax
81001dde:	85 c0                	test   %eax,%eax
81001de0:	0f 85 ca 00 00 00    	jne    81001eb0 <_realloc_r+0x19f>
81001de6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001de9:	8b 40 04             	mov    0x4(%eax),%eax
81001dec:	83 e0 fc             	and    $0xfffffffc,%eax
81001def:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001df2:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001df7:	8b 40 08             	mov    0x8(%eax),%eax
81001dfa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dfd:	75 71                	jne    81001e70 <_realloc_r+0x15f>
81001dff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e05:	01 d0                	add    %edx,%eax
81001e07:	89 c2                	mov    %eax,%edx
81001e09:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e0c:	83 c0 10             	add    $0x10,%eax
81001e0f:	39 c2                	cmp    %eax,%edx
81001e11:	0f 8c a9 00 00 00    	jl     81001ec0 <_realloc_r+0x1af>
81001e17:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e1a:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e1d:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
81001e22:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001e25:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e28:	01 c8                	add    %ecx,%eax
81001e2a:	89 42 08             	mov    %eax,0x8(%edx)
81001e2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e30:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001e33:	89 c2                	mov    %eax,%edx
81001e35:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001e3a:	8b 40 08             	mov    0x8(%eax),%eax
81001e3d:	83 ca 01             	or     $0x1,%edx
81001e40:	89 50 04             	mov    %edx,0x4(%eax)
81001e43:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001e46:	8b 40 04             	mov    0x4(%eax),%eax
81001e49:	83 e0 01             	and    $0x1,%eax
81001e4c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001e4f:	89 c2                	mov    %eax,%edx
81001e51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001e54:	89 50 04             	mov    %edx,0x4(%eax)
81001e57:	83 ec 0c             	sub    $0xc,%esp
81001e5a:	ff 75 08             	push   0x8(%ebp)
81001e5d:	e8 a9 fe ff ff       	call   81001d0b <__malloc_unlock>
81001e62:	83 c4 10             	add    $0x10,%esp
81001e65:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001e68:	83 c0 08             	add    $0x8,%eax
81001e6b:	e9 79 07 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
81001e70:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e73:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e76:	01 d0                	add    %edx,%eax
81001e78:	89 c2                	mov    %eax,%edx
81001e7a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e7d:	39 c2                	cmp    %eax,%edx
81001e7f:	7c 3f                	jl     81001ec0 <_realloc_r+0x1af>
81001e81:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e84:	8b 40 0c             	mov    0xc(%eax),%eax
81001e87:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001e8a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e8d:	8b 40 08             	mov    0x8(%eax),%eax
81001e90:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001e93:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001e96:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001e99:	89 50 0c             	mov    %edx,0xc(%eax)
81001e9c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001e9f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001ea2:	89 50 08             	mov    %edx,0x8(%eax)
81001ea5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ea8:	01 45 f0             	add    %eax,-0x10(%ebp)
81001eab:	e9 8c 06 00 00       	jmp    8100253c <_realloc_r+0x82b>
81001eb0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001eb7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001ebe:	eb 01                	jmp    81001ec1 <_realloc_r+0x1b0>
81001ec0:	90                   	nop
81001ec1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001ec4:	8b 40 04             	mov    0x4(%eax),%eax
81001ec7:	83 e0 01             	and    $0x1,%eax
81001eca:	85 c0                	test   %eax,%eax
81001ecc:	0f 85 d6 04 00 00    	jne    810023a8 <_realloc_r+0x697>
81001ed2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001ed5:	8b 00                	mov    (%eax),%eax
81001ed7:	f7 d8                	neg    %eax
81001ed9:	89 c2                	mov    %eax,%edx
81001edb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001ede:	01 d0                	add    %edx,%eax
81001ee0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001ee3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001ee6:	8b 40 04             	mov    0x4(%eax),%eax
81001ee9:	83 e0 fc             	and    $0xfffffffc,%eax
81001eec:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001eef:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001ef3:	0f 84 4a 03 00 00    	je     81002243 <_realloc_r+0x532>
81001ef9:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81001efe:	8b 40 08             	mov    0x8(%eax),%eax
81001f01:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001f04:	0f 85 b0 01 00 00    	jne    810020ba <_realloc_r+0x3a9>
81001f0a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f0d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f10:	01 c2                	add    %eax,%edx
81001f12:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f15:	01 d0                	add    %edx,%eax
81001f17:	89 c2                	mov    %eax,%edx
81001f19:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f1c:	83 c0 10             	add    $0x10,%eax
81001f1f:	39 c2                	cmp    %eax,%edx
81001f21:	0f 8c 1c 03 00 00    	jl     81002243 <_realloc_r+0x532>
81001f27:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001f2a:	8b 40 0c             	mov    0xc(%eax),%eax
81001f2d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001f30:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001f33:	8b 40 08             	mov    0x8(%eax),%eax
81001f36:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001f39:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001f3c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001f3f:	89 50 0c             	mov    %edx,0xc(%eax)
81001f42:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001f45:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001f48:	89 50 08             	mov    %edx,0x8(%eax)
81001f4b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001f4e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f51:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001f54:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f57:	01 d0                	add    %edx,%eax
81001f59:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f5c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f5f:	83 c0 08             	add    $0x8,%eax
81001f62:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001f65:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001f68:	83 e8 04             	sub    $0x4,%eax
81001f6b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001f6e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001f72:	0f 87 de 00 00 00    	ja     81002056 <_realloc_r+0x345>
81001f78:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f7b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f7e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f81:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001f84:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001f88:	0f 86 90 00 00 00    	jbe    8100201e <_realloc_r+0x30d>
81001f8e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f91:	8d 42 04             	lea    0x4(%edx),%eax
81001f94:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f97:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f9a:	8d 48 04             	lea    0x4(%eax),%ecx
81001f9d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001fa0:	8b 12                	mov    (%edx),%edx
81001fa2:	89 10                	mov    %edx,(%eax)
81001fa4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001fa7:	8d 42 04             	lea    0x4(%edx),%eax
81001faa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001fad:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fb0:	8d 48 04             	lea    0x4(%eax),%ecx
81001fb3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001fb6:	8b 12                	mov    (%edx),%edx
81001fb8:	89 10                	mov    %edx,(%eax)
81001fba:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001fbe:	76 5e                	jbe    8100201e <_realloc_r+0x30d>
81001fc0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001fc3:	8d 42 04             	lea    0x4(%edx),%eax
81001fc6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001fc9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fcc:	8d 48 04             	lea    0x4(%eax),%ecx
81001fcf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001fd2:	8b 12                	mov    (%edx),%edx
81001fd4:	89 10                	mov    %edx,(%eax)
81001fd6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001fd9:	8d 42 04             	lea    0x4(%edx),%eax
81001fdc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001fdf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001fe2:	8d 48 04             	lea    0x4(%eax),%ecx
81001fe5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001fe8:	8b 12                	mov    (%edx),%edx
81001fea:	89 10                	mov    %edx,(%eax)
81001fec:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001ff0:	76 2c                	jbe    8100201e <_realloc_r+0x30d>
81001ff2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ff5:	8d 42 04             	lea    0x4(%edx),%eax
81001ff8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ffb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ffe:	8d 48 04             	lea    0x4(%eax),%ecx
81002001:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002004:	8b 12                	mov    (%edx),%edx
81002006:	89 10                	mov    %edx,(%eax)
81002008:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100200b:	8d 42 04             	lea    0x4(%edx),%eax
8100200e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002011:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002014:	8d 48 04             	lea    0x4(%eax),%ecx
81002017:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100201a:	8b 12                	mov    (%edx),%edx
8100201c:	89 10                	mov    %edx,(%eax)
8100201e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002021:	8d 42 04             	lea    0x4(%edx),%eax
81002024:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002027:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100202a:	8d 48 04             	lea    0x4(%eax),%ecx
8100202d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002030:	8b 12                	mov    (%edx),%edx
81002032:	89 10                	mov    %edx,(%eax)
81002034:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002037:	8d 42 04             	lea    0x4(%edx),%eax
8100203a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100203d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002040:	8d 48 04             	lea    0x4(%eax),%ecx
81002043:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002046:	8b 12                	mov    (%edx),%edx
81002048:	89 10                	mov    %edx,(%eax)
8100204a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100204d:	8b 10                	mov    (%eax),%edx
8100204f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002052:	89 10                	mov    %edx,(%eax)
81002054:	eb 14                	jmp    8100206a <_realloc_r+0x359>
81002056:	83 ec 04             	sub    $0x4,%esp
81002059:	ff 75 a0             	push   -0x60(%ebp)
8100205c:	ff 75 0c             	push   0xc(%ebp)
8100205f:	ff 75 a8             	push   -0x58(%ebp)
81002062:	e8 89 fb ff ff       	call   81001bf0 <memmove>
81002067:	83 c4 10             	add    $0x10,%esp
8100206a:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
8100206f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002072:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002075:	01 c8                	add    %ecx,%eax
81002077:	89 42 08             	mov    %eax,0x8(%edx)
8100207a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100207d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002080:	89 c2                	mov    %eax,%edx
81002082:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81002087:	8b 40 08             	mov    0x8(%eax),%eax
8100208a:	83 ca 01             	or     $0x1,%edx
8100208d:	89 50 04             	mov    %edx,0x4(%eax)
81002090:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002093:	8b 40 04             	mov    0x4(%eax),%eax
81002096:	83 e0 01             	and    $0x1,%eax
81002099:	0b 45 bc             	or     -0x44(%ebp),%eax
8100209c:	89 c2                	mov    %eax,%edx
8100209e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020a1:	89 50 04             	mov    %edx,0x4(%eax)
810020a4:	83 ec 0c             	sub    $0xc,%esp
810020a7:	ff 75 08             	push   0x8(%ebp)
810020aa:	e8 5c fc ff ff       	call   81001d0b <__malloc_unlock>
810020af:	83 c4 10             	add    $0x10,%esp
810020b2:	8b 45 a8             	mov    -0x58(%ebp),%eax
810020b5:	e9 2f 05 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
810020ba:	8b 55 e8             	mov    -0x18(%ebp),%edx
810020bd:	8b 45 ac             	mov    -0x54(%ebp),%eax
810020c0:	01 c2                	add    %eax,%edx
810020c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020c5:	01 d0                	add    %edx,%eax
810020c7:	89 c2                	mov    %eax,%edx
810020c9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810020cc:	39 c2                	cmp    %eax,%edx
810020ce:	0f 8c 6f 01 00 00    	jl     81002243 <_realloc_r+0x532>
810020d4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020d7:	8b 40 0c             	mov    0xc(%eax),%eax
810020da:	89 45 b8             	mov    %eax,-0x48(%ebp)
810020dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020e0:	8b 40 08             	mov    0x8(%eax),%eax
810020e3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810020e6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810020e9:	8b 55 b8             	mov    -0x48(%ebp),%edx
810020ec:	89 50 0c             	mov    %edx,0xc(%eax)
810020ef:	8b 45 b8             	mov    -0x48(%ebp),%eax
810020f2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810020f5:	89 50 08             	mov    %edx,0x8(%eax)
810020f8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810020fb:	8b 40 0c             	mov    0xc(%eax),%eax
810020fe:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002101:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002104:	8b 40 08             	mov    0x8(%eax),%eax
81002107:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100210a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100210d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002110:	89 50 0c             	mov    %edx,0xc(%eax)
81002113:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002116:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002119:	89 50 08             	mov    %edx,0x8(%eax)
8100211c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100211f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002122:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002125:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002128:	01 d0                	add    %edx,%eax
8100212a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100212d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002130:	83 c0 08             	add    $0x8,%eax
81002133:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002136:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002139:	83 e8 04             	sub    $0x4,%eax
8100213c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
8100213f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002143:	0f 87 e1 00 00 00    	ja     8100222a <_realloc_r+0x519>
81002149:	8b 45 0c             	mov    0xc(%ebp),%eax
8100214c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100214f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002152:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002155:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002159:	0f 86 90 00 00 00    	jbe    810021ef <_realloc_r+0x4de>
8100215f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002162:	8d 42 04             	lea    0x4(%edx),%eax
81002165:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002168:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100216b:	8d 48 04             	lea    0x4(%eax),%ecx
8100216e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002171:	8b 12                	mov    (%edx),%edx
81002173:	89 10                	mov    %edx,(%eax)
81002175:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002178:	8d 42 04             	lea    0x4(%edx),%eax
8100217b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100217e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002181:	8d 48 04             	lea    0x4(%eax),%ecx
81002184:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002187:	8b 12                	mov    (%edx),%edx
81002189:	89 10                	mov    %edx,(%eax)
8100218b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100218f:	76 5e                	jbe    810021ef <_realloc_r+0x4de>
81002191:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002194:	8d 42 04             	lea    0x4(%edx),%eax
81002197:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100219a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100219d:	8d 48 04             	lea    0x4(%eax),%ecx
810021a0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810021a3:	8b 12                	mov    (%edx),%edx
810021a5:	89 10                	mov    %edx,(%eax)
810021a7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810021aa:	8d 42 04             	lea    0x4(%edx),%eax
810021ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
810021b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810021b3:	8d 48 04             	lea    0x4(%eax),%ecx
810021b6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810021b9:	8b 12                	mov    (%edx),%edx
810021bb:	89 10                	mov    %edx,(%eax)
810021bd:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810021c1:	76 2c                	jbe    810021ef <_realloc_r+0x4de>
810021c3:	8b 55 dc             	mov    -0x24(%ebp),%edx
810021c6:	8d 42 04             	lea    0x4(%edx),%eax
810021c9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810021cc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810021cf:	8d 48 04             	lea    0x4(%eax),%ecx
810021d2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810021d5:	8b 12                	mov    (%edx),%edx
810021d7:	89 10                	mov    %edx,(%eax)
810021d9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810021dc:	8d 42 04             	lea    0x4(%edx),%eax
810021df:	89 45 dc             	mov    %eax,-0x24(%ebp)
810021e2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810021e5:	8d 48 04             	lea    0x4(%eax),%ecx
810021e8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810021eb:	8b 12                	mov    (%edx),%edx
810021ed:	89 10                	mov    %edx,(%eax)
810021ef:	8b 55 dc             	mov    -0x24(%ebp),%edx
810021f2:	8d 42 04             	lea    0x4(%edx),%eax
810021f5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810021f8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810021fb:	8d 48 04             	lea    0x4(%eax),%ecx
810021fe:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002201:	8b 12                	mov    (%edx),%edx
81002203:	89 10                	mov    %edx,(%eax)
81002205:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002208:	8d 42 04             	lea    0x4(%edx),%eax
8100220b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100220e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002211:	8d 48 04             	lea    0x4(%eax),%ecx
81002214:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002217:	8b 12                	mov    (%edx),%edx
81002219:	89 10                	mov    %edx,(%eax)
8100221b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100221e:	8b 10                	mov    (%eax),%edx
81002220:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002223:	89 10                	mov    %edx,(%eax)
81002225:	e9 12 03 00 00       	jmp    8100253c <_realloc_r+0x82b>
8100222a:	83 ec 04             	sub    $0x4,%esp
8100222d:	ff 75 a4             	push   -0x5c(%ebp)
81002230:	ff 75 0c             	push   0xc(%ebp)
81002233:	ff 75 a8             	push   -0x58(%ebp)
81002236:	e8 b5 f9 ff ff       	call   81001bf0 <memmove>
8100223b:	83 c4 10             	add    $0x10,%esp
8100223e:	e9 f9 02 00 00       	jmp    8100253c <_realloc_r+0x82b>
81002243:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002247:	0f 84 5b 01 00 00    	je     810023a8 <_realloc_r+0x697>
8100224d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002250:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002253:	01 d0                	add    %edx,%eax
81002255:	89 c2                	mov    %eax,%edx
81002257:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100225a:	39 c2                	cmp    %eax,%edx
8100225c:	0f 8c 46 01 00 00    	jl     810023a8 <_realloc_r+0x697>
81002262:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002265:	8b 40 0c             	mov    0xc(%eax),%eax
81002268:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100226b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100226e:	8b 40 08             	mov    0x8(%eax),%eax
81002271:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002274:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002277:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100227a:	89 50 0c             	mov    %edx,0xc(%eax)
8100227d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002280:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002283:	89 50 08             	mov    %edx,0x8(%eax)
81002286:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002289:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100228c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100228f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002292:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002295:	83 c0 08             	add    $0x8,%eax
81002298:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100229b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100229e:	83 e8 04             	sub    $0x4,%eax
810022a1:	89 45 9c             	mov    %eax,-0x64(%ebp)
810022a4:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810022a8:	0f 87 e1 00 00 00    	ja     8100238f <_realloc_r+0x67e>
810022ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810022b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810022b4:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022b7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810022ba:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810022be:	0f 86 90 00 00 00    	jbe    81002354 <_realloc_r+0x643>
810022c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810022c7:	8d 42 04             	lea    0x4(%edx),%eax
810022ca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810022cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810022d0:	8d 48 04             	lea    0x4(%eax),%ecx
810022d3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810022d6:	8b 12                	mov    (%edx),%edx
810022d8:	89 10                	mov    %edx,(%eax)
810022da:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810022dd:	8d 42 04             	lea    0x4(%edx),%eax
810022e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810022e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810022e6:	8d 48 04             	lea    0x4(%eax),%ecx
810022e9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810022ec:	8b 12                	mov    (%edx),%edx
810022ee:	89 10                	mov    %edx,(%eax)
810022f0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810022f4:	76 5e                	jbe    81002354 <_realloc_r+0x643>
810022f6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810022f9:	8d 42 04             	lea    0x4(%edx),%eax
810022fc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810022ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002302:	8d 48 04             	lea    0x4(%eax),%ecx
81002305:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002308:	8b 12                	mov    (%edx),%edx
8100230a:	89 10                	mov    %edx,(%eax)
8100230c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100230f:	8d 42 04             	lea    0x4(%edx),%eax
81002312:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002315:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002318:	8d 48 04             	lea    0x4(%eax),%ecx
8100231b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100231e:	8b 12                	mov    (%edx),%edx
81002320:	89 10                	mov    %edx,(%eax)
81002322:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002326:	76 2c                	jbe    81002354 <_realloc_r+0x643>
81002328:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100232b:	8d 42 04             	lea    0x4(%edx),%eax
8100232e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002331:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002334:	8d 48 04             	lea    0x4(%eax),%ecx
81002337:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100233a:	8b 12                	mov    (%edx),%edx
8100233c:	89 10                	mov    %edx,(%eax)
8100233e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002341:	8d 42 04             	lea    0x4(%edx),%eax
81002344:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002347:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100234a:	8d 48 04             	lea    0x4(%eax),%ecx
8100234d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002350:	8b 12                	mov    (%edx),%edx
81002352:	89 10                	mov    %edx,(%eax)
81002354:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002357:	8d 42 04             	lea    0x4(%edx),%eax
8100235a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100235d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002360:	8d 48 04             	lea    0x4(%eax),%ecx
81002363:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002366:	8b 12                	mov    (%edx),%edx
81002368:	89 10                	mov    %edx,(%eax)
8100236a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100236d:	8d 42 04             	lea    0x4(%edx),%eax
81002370:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002373:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002376:	8d 48 04             	lea    0x4(%eax),%ecx
81002379:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100237c:	8b 12                	mov    (%edx),%edx
8100237e:	89 10                	mov    %edx,(%eax)
81002380:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002383:	8b 10                	mov    (%eax),%edx
81002385:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002388:	89 10                	mov    %edx,(%eax)
8100238a:	e9 ad 01 00 00       	jmp    8100253c <_realloc_r+0x82b>
8100238f:	83 ec 04             	sub    $0x4,%esp
81002392:	ff 75 9c             	push   -0x64(%ebp)
81002395:	ff 75 0c             	push   0xc(%ebp)
81002398:	ff 75 a8             	push   -0x58(%ebp)
8100239b:	e8 50 f8 ff ff       	call   81001bf0 <memmove>
810023a0:	83 c4 10             	add    $0x10,%esp
810023a3:	e9 94 01 00 00       	jmp    8100253c <_realloc_r+0x82b>
810023a8:	83 ec 08             	sub    $0x8,%esp
810023ab:	ff 75 10             	push   0x10(%ebp)
810023ae:	ff 75 08             	push   0x8(%ebp)
810023b1:	e8 29 ef ff ff       	call   810012df <_malloc_r>
810023b6:	83 c4 10             	add    $0x10,%esp
810023b9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810023bc:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810023c0:	75 18                	jne    810023da <_realloc_r+0x6c9>
810023c2:	83 ec 0c             	sub    $0xc,%esp
810023c5:	ff 75 08             	push   0x8(%ebp)
810023c8:	e8 3e f9 ff ff       	call   81001d0b <__malloc_unlock>
810023cd:	83 c4 10             	add    $0x10,%esp
810023d0:	b8 00 00 00 00       	mov    $0x0,%eax
810023d5:	e9 0f 02 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
810023da:	8b 45 a8             	mov    -0x58(%ebp),%eax
810023dd:	83 e8 08             	sub    $0x8,%eax
810023e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023e3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810023e6:	8b 40 04             	mov    0x4(%eax),%eax
810023e9:	83 e0 fe             	and    $0xfffffffe,%eax
810023ec:	89 c2                	mov    %eax,%edx
810023ee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810023f1:	01 d0                	add    %edx,%eax
810023f3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810023f6:	75 17                	jne    8100240f <_realloc_r+0x6fe>
810023f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023fb:	8b 40 04             	mov    0x4(%eax),%eax
810023fe:	83 e0 fc             	and    $0xfffffffc,%eax
81002401:	01 45 f0             	add    %eax,-0x10(%ebp)
81002404:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002407:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100240a:	e9 2d 01 00 00       	jmp    8100253c <_realloc_r+0x82b>
8100240f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002412:	83 e8 04             	sub    $0x4,%eax
81002415:	89 45 98             	mov    %eax,-0x68(%ebp)
81002418:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
8100241c:	0f 87 de 00 00 00    	ja     81002500 <_realloc_r+0x7ef>
81002422:	8b 45 0c             	mov    0xc(%ebp),%eax
81002425:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002428:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100242b:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100242e:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002432:	0f 86 90 00 00 00    	jbe    810024c8 <_realloc_r+0x7b7>
81002438:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100243b:	8d 42 04             	lea    0x4(%edx),%eax
8100243e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002441:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002444:	8d 48 04             	lea    0x4(%eax),%ecx
81002447:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100244a:	8b 12                	mov    (%edx),%edx
8100244c:	89 10                	mov    %edx,(%eax)
8100244e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002451:	8d 42 04             	lea    0x4(%edx),%eax
81002454:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002457:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100245a:	8d 48 04             	lea    0x4(%eax),%ecx
8100245d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002460:	8b 12                	mov    (%edx),%edx
81002462:	89 10                	mov    %edx,(%eax)
81002464:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002468:	76 5e                	jbe    810024c8 <_realloc_r+0x7b7>
8100246a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100246d:	8d 42 04             	lea    0x4(%edx),%eax
81002470:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002473:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002476:	8d 48 04             	lea    0x4(%eax),%ecx
81002479:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100247c:	8b 12                	mov    (%edx),%edx
8100247e:	89 10                	mov    %edx,(%eax)
81002480:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002483:	8d 42 04             	lea    0x4(%edx),%eax
81002486:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002489:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100248c:	8d 48 04             	lea    0x4(%eax),%ecx
8100248f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002492:	8b 12                	mov    (%edx),%edx
81002494:	89 10                	mov    %edx,(%eax)
81002496:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100249a:	76 2c                	jbe    810024c8 <_realloc_r+0x7b7>
8100249c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100249f:	8d 42 04             	lea    0x4(%edx),%eax
810024a2:	89 45 cc             	mov    %eax,-0x34(%ebp)
810024a5:	8b 45 c8             	mov    -0x38(%ebp),%eax
810024a8:	8d 48 04             	lea    0x4(%eax),%ecx
810024ab:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810024ae:	8b 12                	mov    (%edx),%edx
810024b0:	89 10                	mov    %edx,(%eax)
810024b2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810024b5:	8d 42 04             	lea    0x4(%edx),%eax
810024b8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810024bb:	8b 45 c8             	mov    -0x38(%ebp),%eax
810024be:	8d 48 04             	lea    0x4(%eax),%ecx
810024c1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810024c4:	8b 12                	mov    (%edx),%edx
810024c6:	89 10                	mov    %edx,(%eax)
810024c8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810024cb:	8d 42 04             	lea    0x4(%edx),%eax
810024ce:	89 45 cc             	mov    %eax,-0x34(%ebp)
810024d1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810024d4:	8d 48 04             	lea    0x4(%eax),%ecx
810024d7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810024da:	8b 12                	mov    (%edx),%edx
810024dc:	89 10                	mov    %edx,(%eax)
810024de:	8b 55 cc             	mov    -0x34(%ebp),%edx
810024e1:	8d 42 04             	lea    0x4(%edx),%eax
810024e4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810024e7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810024ea:	8d 48 04             	lea    0x4(%eax),%ecx
810024ed:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810024f0:	8b 12                	mov    (%edx),%edx
810024f2:	89 10                	mov    %edx,(%eax)
810024f4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810024f7:	8b 10                	mov    (%eax),%edx
810024f9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810024fc:	89 10                	mov    %edx,(%eax)
810024fe:	eb 14                	jmp    81002514 <_realloc_r+0x803>
81002500:	83 ec 04             	sub    $0x4,%esp
81002503:	ff 75 98             	push   -0x68(%ebp)
81002506:	ff 75 0c             	push   0xc(%ebp)
81002509:	ff 75 a8             	push   -0x58(%ebp)
8100250c:	e8 df f6 ff ff       	call   81001bf0 <memmove>
81002511:	83 c4 10             	add    $0x10,%esp
81002514:	83 ec 08             	sub    $0x8,%esp
81002517:	ff 75 0c             	push   0xc(%ebp)
8100251a:	ff 75 08             	push   0x8(%ebp)
8100251d:	e8 0b 0a 00 00       	call   81002f2d <_free_r>
81002522:	83 c4 10             	add    $0x10,%esp
81002525:	83 ec 0c             	sub    $0xc,%esp
81002528:	ff 75 08             	push   0x8(%ebp)
8100252b:	e8 db f7 ff ff       	call   81001d0b <__malloc_unlock>
81002530:	83 c4 10             	add    $0x10,%esp
81002533:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002536:	e9 ae 00 00 00       	jmp    810025e9 <_realloc_r+0x8d8>
8100253b:	90                   	nop
8100253c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100253f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002542:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002545:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002549:	76 5d                	jbe    810025a8 <_realloc_r+0x897>
8100254b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100254e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002551:	01 d0                	add    %edx,%eax
81002553:	89 45 90             	mov    %eax,-0x70(%ebp)
81002556:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002559:	8b 40 04             	mov    0x4(%eax),%eax
8100255c:	83 e0 01             	and    $0x1,%eax
8100255f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002562:	89 c2                	mov    %eax,%edx
81002564:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002567:	89 50 04             	mov    %edx,0x4(%eax)
8100256a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100256d:	83 c8 01             	or     $0x1,%eax
81002570:	89 c2                	mov    %eax,%edx
81002572:	8b 45 90             	mov    -0x70(%ebp),%eax
81002575:	89 50 04             	mov    %edx,0x4(%eax)
81002578:	8b 55 90             	mov    -0x70(%ebp),%edx
8100257b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100257e:	01 d0                	add    %edx,%eax
81002580:	8b 50 04             	mov    0x4(%eax),%edx
81002583:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002586:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002589:	01 c8                	add    %ecx,%eax
8100258b:	83 ca 01             	or     $0x1,%edx
8100258e:	89 50 04             	mov    %edx,0x4(%eax)
81002591:	8b 45 90             	mov    -0x70(%ebp),%eax
81002594:	83 c0 08             	add    $0x8,%eax
81002597:	83 ec 08             	sub    $0x8,%esp
8100259a:	50                   	push   %eax
8100259b:	ff 75 08             	push   0x8(%ebp)
8100259e:	e8 8a 09 00 00       	call   81002f2d <_free_r>
810025a3:	83 c4 10             	add    $0x10,%esp
810025a6:	eb 2d                	jmp    810025d5 <_realloc_r+0x8c4>
810025a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025ab:	8b 40 04             	mov    0x4(%eax),%eax
810025ae:	83 e0 01             	and    $0x1,%eax
810025b1:	0b 45 f0             	or     -0x10(%ebp),%eax
810025b4:	89 c2                	mov    %eax,%edx
810025b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025b9:	89 50 04             	mov    %edx,0x4(%eax)
810025bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810025bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810025c2:	01 d0                	add    %edx,%eax
810025c4:	8b 50 04             	mov    0x4(%eax),%edx
810025c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810025ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
810025cd:	01 c8                	add    %ecx,%eax
810025cf:	83 ca 01             	or     $0x1,%edx
810025d2:	89 50 04             	mov    %edx,0x4(%eax)
810025d5:	83 ec 0c             	sub    $0xc,%esp
810025d8:	ff 75 08             	push   0x8(%ebp)
810025db:	e8 2b f7 ff ff       	call   81001d0b <__malloc_unlock>
810025e0:	83 c4 10             	add    $0x10,%esp
810025e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025e6:	83 c0 08             	add    $0x8,%eax
810025e9:	c9                   	leave  
810025ea:	c3                   	ret    

810025eb <lflush>:
810025eb:	55                   	push   %ebp
810025ec:	89 e5                	mov    %esp,%ebp
810025ee:	83 ec 08             	sub    $0x8,%esp
810025f1:	8b 45 08             	mov    0x8(%ebp),%eax
810025f4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810025f8:	98                   	cwtl   
810025f9:	83 e0 09             	and    $0x9,%eax
810025fc:	83 f8 09             	cmp    $0x9,%eax
810025ff:	75 10                	jne    81002611 <lflush+0x26>
81002601:	83 ec 0c             	sub    $0xc,%esp
81002604:	ff 75 08             	push   0x8(%ebp)
81002607:	e8 e8 08 00 00       	call   81002ef4 <fflush>
8100260c:	83 c4 10             	add    $0x10,%esp
8100260f:	eb 05                	jmp    81002616 <lflush+0x2b>
81002611:	b8 00 00 00 00       	mov    $0x0,%eax
81002616:	c9                   	leave  
81002617:	c3                   	ret    

81002618 <__srefill_r>:
81002618:	55                   	push   %ebp
81002619:	89 e5                	mov    %esp,%ebp
8100261b:	56                   	push   %esi
8100261c:	53                   	push   %ebx
8100261d:	83 ec 10             	sub    $0x10,%esp
81002620:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002623:	8b 45 08             	mov    0x8(%ebp),%eax
81002626:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002629:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100262d:	74 18                	je     81002647 <__srefill_r+0x2f>
8100262f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002632:	8b 40 38             	mov    0x38(%eax),%eax
81002635:	85 c0                	test   %eax,%eax
81002637:	75 0e                	jne    81002647 <__srefill_r+0x2f>
81002639:	83 ec 0c             	sub    $0xc,%esp
8100263c:	ff 75 f4             	push   -0xc(%ebp)
8100263f:	e8 8a e3 ff ff       	call   810009ce <__sinit>
81002644:	83 c4 10             	add    $0x10,%esp
81002647:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100264b:	98                   	cwtl   
8100264c:	25 00 20 00 00       	and    $0x2000,%eax
81002651:	85 c0                	test   %eax,%eax
81002653:	75 14                	jne    81002669 <__srefill_r+0x51>
81002655:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002659:	80 cc 20             	or     $0x20,%ah
8100265c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002660:	8b 43 64             	mov    0x64(%ebx),%eax
81002663:	80 e4 df             	and    $0xdf,%ah
81002666:	89 43 64             	mov    %eax,0x64(%ebx)
81002669:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002670:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002674:	98                   	cwtl   
81002675:	83 e0 20             	and    $0x20,%eax
81002678:	85 c0                	test   %eax,%eax
8100267a:	74 0a                	je     81002686 <__srefill_r+0x6e>
8100267c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002681:	e9 8c 01 00 00       	jmp    81002812 <__srefill_r+0x1fa>
81002686:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100268a:	98                   	cwtl   
8100268b:	83 e0 04             	and    $0x4,%eax
8100268e:	85 c0                	test   %eax,%eax
81002690:	75 79                	jne    8100270b <__srefill_r+0xf3>
81002692:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002696:	98                   	cwtl   
81002697:	83 e0 10             	and    $0x10,%eax
8100269a:	85 c0                	test   %eax,%eax
8100269c:	75 1e                	jne    810026bc <__srefill_r+0xa4>
8100269e:	8b 45 08             	mov    0x8(%ebp),%eax
810026a1:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810026a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026ab:	83 c8 40             	or     $0x40,%eax
810026ae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026b2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026b7:	e9 56 01 00 00       	jmp    81002812 <__srefill_r+0x1fa>
810026bc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026c0:	98                   	cwtl   
810026c1:	83 e0 08             	and    $0x8,%eax
810026c4:	85 c0                	test   %eax,%eax
810026c6:	74 36                	je     810026fe <__srefill_r+0xe6>
810026c8:	83 ec 08             	sub    $0x8,%esp
810026cb:	53                   	push   %ebx
810026cc:	ff 75 08             	push   0x8(%ebp)
810026cf:	e8 c8 07 00 00       	call   81002e9c <_fflush_r>
810026d4:	83 c4 10             	add    $0x10,%esp
810026d7:	85 c0                	test   %eax,%eax
810026d9:	74 0a                	je     810026e5 <__srefill_r+0xcd>
810026db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026e0:	e9 2d 01 00 00       	jmp    81002812 <__srefill_r+0x1fa>
810026e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026e9:	83 e0 f7             	and    $0xfffffff7,%eax
810026ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026f0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810026f7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810026fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002702:	83 c8 04             	or     $0x4,%eax
81002705:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002709:	eb 46                	jmp    81002751 <__srefill_r+0x139>
8100270b:	8b 43 30             	mov    0x30(%ebx),%eax
8100270e:	85 c0                	test   %eax,%eax
81002710:	74 3f                	je     81002751 <__srefill_r+0x139>
81002712:	8b 53 30             	mov    0x30(%ebx),%edx
81002715:	8d 43 40             	lea    0x40(%ebx),%eax
81002718:	39 c2                	cmp    %eax,%edx
8100271a:	74 12                	je     8100272e <__srefill_r+0x116>
8100271c:	8b 43 30             	mov    0x30(%ebx),%eax
8100271f:	83 ec 08             	sub    $0x8,%esp
81002722:	50                   	push   %eax
81002723:	ff 75 08             	push   0x8(%ebp)
81002726:	e8 02 08 00 00       	call   81002f2d <_free_r>
8100272b:	83 c4 10             	add    $0x10,%esp
8100272e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002735:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002738:	89 43 04             	mov    %eax,0x4(%ebx)
8100273b:	8b 43 04             	mov    0x4(%ebx),%eax
8100273e:	85 c0                	test   %eax,%eax
81002740:	74 0f                	je     81002751 <__srefill_r+0x139>
81002742:	8b 43 38             	mov    0x38(%ebx),%eax
81002745:	89 03                	mov    %eax,(%ebx)
81002747:	b8 00 00 00 00       	mov    $0x0,%eax
8100274c:	e9 c1 00 00 00       	jmp    81002812 <__srefill_r+0x1fa>
81002751:	8b 43 10             	mov    0x10(%ebx),%eax
81002754:	85 c0                	test   %eax,%eax
81002756:	75 0f                	jne    81002767 <__srefill_r+0x14f>
81002758:	83 ec 08             	sub    $0x8,%esp
8100275b:	53                   	push   %ebx
8100275c:	ff 75 08             	push   0x8(%ebp)
8100275f:	e8 4b 0d 00 00       	call   810034af <__smakebuf_r>
81002764:	83 c4 10             	add    $0x10,%esp
81002767:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100276b:	98                   	cwtl   
8100276c:	83 e0 03             	and    $0x3,%eax
8100276f:	85 c0                	test   %eax,%eax
81002771:	74 48                	je     810027bb <__srefill_r+0x1a3>
81002773:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002777:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100277b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002781:	a1 a0 38 00 81       	mov    0x810038a0,%eax
81002786:	83 ec 08             	sub    $0x8,%esp
81002789:	68 eb 25 00 81       	push   $0x810025eb
8100278e:	50                   	push   %eax
8100278f:	e8 e5 e7 ff ff       	call   81000f79 <_fwalk>
81002794:	83 c4 10             	add    $0x10,%esp
81002797:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100279b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100279f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a3:	98                   	cwtl   
810027a4:	83 e0 09             	and    $0x9,%eax
810027a7:	83 f8 09             	cmp    $0x9,%eax
810027aa:	75 0f                	jne    810027bb <__srefill_r+0x1a3>
810027ac:	83 ec 08             	sub    $0x8,%esp
810027af:	53                   	push   %ebx
810027b0:	ff 75 08             	push   0x8(%ebp)
810027b3:	e8 be 04 00 00       	call   81002c76 <__sflush_r>
810027b8:	83 c4 10             	add    $0x10,%esp
810027bb:	8b 43 10             	mov    0x10(%ebx),%eax
810027be:	89 03                	mov    %eax,(%ebx)
810027c0:	8b 43 20             	mov    0x20(%ebx),%eax
810027c3:	8b 73 14             	mov    0x14(%ebx),%esi
810027c6:	8b 0b                	mov    (%ebx),%ecx
810027c8:	8b 53 1c             	mov    0x1c(%ebx),%edx
810027cb:	56                   	push   %esi
810027cc:	51                   	push   %ecx
810027cd:	52                   	push   %edx
810027ce:	ff 75 08             	push   0x8(%ebp)
810027d1:	ff d0                	call   *%eax
810027d3:	83 c4 10             	add    $0x10,%esp
810027d6:	89 43 04             	mov    %eax,0x4(%ebx)
810027d9:	8b 43 04             	mov    0x4(%ebx),%eax
810027dc:	85 c0                	test   %eax,%eax
810027de:	7f 2d                	jg     8100280d <__srefill_r+0x1f5>
810027e0:	8b 43 04             	mov    0x4(%ebx),%eax
810027e3:	85 c0                	test   %eax,%eax
810027e5:	75 0d                	jne    810027f4 <__srefill_r+0x1dc>
810027e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027eb:	83 c8 20             	or     $0x20,%eax
810027ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027f2:	eb 12                	jmp    81002806 <__srefill_r+0x1ee>
810027f4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810027fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027ff:	83 c8 40             	or     $0x40,%eax
81002802:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002806:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100280b:	eb 05                	jmp    81002812 <__srefill_r+0x1fa>
8100280d:	b8 00 00 00 00       	mov    $0x0,%eax
81002812:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002815:	5b                   	pop    %ebx
81002816:	5e                   	pop    %esi
81002817:	5d                   	pop    %ebp
81002818:	c3                   	ret    

81002819 <_sbrk_r>:
81002819:	55                   	push   %ebp
8100281a:	89 e5                	mov    %esp,%ebp
8100281c:	83 ec 18             	sub    $0x18,%esp
8100281f:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
81002826:	00 00 00 
81002829:	83 ec 0c             	sub    $0xc,%esp
8100282c:	ff 75 0c             	push   0xc(%ebp)
8100282f:	e8 c0 da ff ff       	call   810002f4 <sbrk>
81002834:	83 c4 10             	add    $0x10,%esp
81002837:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100283a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100283e:	75 14                	jne    81002854 <_sbrk_r+0x3b>
81002840:	a1 8c 43 00 81       	mov    0x8100438c,%eax
81002845:	85 c0                	test   %eax,%eax
81002847:	74 0b                	je     81002854 <_sbrk_r+0x3b>
81002849:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
8100284f:	8b 45 08             	mov    0x8(%ebp),%eax
81002852:	89 10                	mov    %edx,(%eax)
81002854:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002857:	c9                   	leave  
81002858:	c3                   	ret    

81002859 <__sread>:
81002859:	55                   	push   %ebp
8100285a:	89 e5                	mov    %esp,%ebp
8100285c:	56                   	push   %esi
8100285d:	53                   	push   %ebx
8100285e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002861:	8b 55 14             	mov    0x14(%ebp),%edx
81002864:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002868:	98                   	cwtl   
81002869:	52                   	push   %edx
8100286a:	ff 75 10             	push   0x10(%ebp)
8100286d:	50                   	push   %eax
8100286e:	ff 75 08             	push   0x8(%ebp)
81002871:	e8 b9 0d 00 00       	call   8100362f <_read_r>
81002876:	83 c4 10             	add    $0x10,%esp
81002879:	89 c6                	mov    %eax,%esi
8100287b:	85 f6                	test   %esi,%esi
8100287d:	78 0a                	js     81002889 <__sread+0x30>
8100287f:	8b 43 50             	mov    0x50(%ebx),%eax
81002882:	01 f0                	add    %esi,%eax
81002884:	89 43 50             	mov    %eax,0x50(%ebx)
81002887:	eb 0b                	jmp    81002894 <__sread+0x3b>
81002889:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100288d:	80 e4 ef             	and    $0xef,%ah
81002890:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002894:	89 f0                	mov    %esi,%eax
81002896:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002899:	5b                   	pop    %ebx
8100289a:	5e                   	pop    %esi
8100289b:	5d                   	pop    %ebp
8100289c:	c3                   	ret    

8100289d <__seofread>:
8100289d:	55                   	push   %ebp
8100289e:	89 e5                	mov    %esp,%ebp
810028a0:	b8 00 00 00 00       	mov    $0x0,%eax
810028a5:	5d                   	pop    %ebp
810028a6:	c3                   	ret    

810028a7 <__swrite>:
810028a7:	55                   	push   %ebp
810028a8:	89 e5                	mov    %esp,%ebp
810028aa:	53                   	push   %ebx
810028ab:	83 ec 14             	sub    $0x14,%esp
810028ae:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810028b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028b5:	98                   	cwtl   
810028b6:	25 00 01 00 00       	and    $0x100,%eax
810028bb:	85 c0                	test   %eax,%eax
810028bd:	74 15                	je     810028d4 <__swrite+0x2d>
810028bf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810028c3:	98                   	cwtl   
810028c4:	6a 02                	push   $0x2
810028c6:	6a 00                	push   $0x0
810028c8:	50                   	push   %eax
810028c9:	ff 75 08             	push   0x8(%ebp)
810028cc:	e8 98 0b 00 00       	call   81003469 <_lseek_r>
810028d1:	83 c4 10             	add    $0x10,%esp
810028d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028d8:	80 e4 ef             	and    $0xef,%ah
810028db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028df:	8b 55 14             	mov    0x14(%ebp),%edx
810028e2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810028e6:	98                   	cwtl   
810028e7:	52                   	push   %edx
810028e8:	ff 75 10             	push   0x10(%ebp)
810028eb:	50                   	push   %eax
810028ec:	ff 75 08             	push   0x8(%ebp)
810028ef:	e8 7d 00 00 00       	call   81002971 <_write_r>
810028f4:	83 c4 10             	add    $0x10,%esp
810028f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028fd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002900:	c9                   	leave  
81002901:	c3                   	ret    

81002902 <__sseek>:
81002902:	55                   	push   %ebp
81002903:	89 e5                	mov    %esp,%ebp
81002905:	56                   	push   %esi
81002906:	53                   	push   %ebx
81002907:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100290a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100290e:	98                   	cwtl   
8100290f:	ff 75 14             	push   0x14(%ebp)
81002912:	ff 75 10             	push   0x10(%ebp)
81002915:	50                   	push   %eax
81002916:	ff 75 08             	push   0x8(%ebp)
81002919:	e8 4b 0b 00 00       	call   81003469 <_lseek_r>
8100291e:	83 c4 10             	add    $0x10,%esp
81002921:	89 c6                	mov    %eax,%esi
81002923:	83 fe ff             	cmp    $0xffffffff,%esi
81002926:	75 0d                	jne    81002935 <__sseek+0x33>
81002928:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100292c:	80 e4 ef             	and    $0xef,%ah
8100292f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002933:	eb 0e                	jmp    81002943 <__sseek+0x41>
81002935:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002939:	80 cc 10             	or     $0x10,%ah
8100293c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002940:	89 73 50             	mov    %esi,0x50(%ebx)
81002943:	89 f0                	mov    %esi,%eax
81002945:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002948:	5b                   	pop    %ebx
81002949:	5e                   	pop    %esi
8100294a:	5d                   	pop    %ebp
8100294b:	c3                   	ret    

8100294c <__sclose>:
8100294c:	55                   	push   %ebp
8100294d:	89 e5                	mov    %esp,%ebp
8100294f:	83 ec 18             	sub    $0x18,%esp
81002952:	8b 45 0c             	mov    0xc(%ebp),%eax
81002955:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002958:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100295b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100295f:	98                   	cwtl   
81002960:	83 ec 08             	sub    $0x8,%esp
81002963:	50                   	push   %eax
81002964:	ff 75 08             	push   0x8(%ebp)
81002967:	e8 a6 01 00 00       	call   81002b12 <_close_r>
8100296c:	83 c4 10             	add    $0x10,%esp
8100296f:	c9                   	leave  
81002970:	c3                   	ret    

81002971 <_write_r>:
81002971:	55                   	push   %ebp
81002972:	89 e5                	mov    %esp,%ebp
81002974:	83 ec 18             	sub    $0x18,%esp
81002977:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
8100297e:	00 00 00 
81002981:	83 ec 04             	sub    $0x4,%esp
81002984:	ff 75 14             	push   0x14(%ebp)
81002987:	ff 75 10             	push   0x10(%ebp)
8100298a:	ff 75 0c             	push   0xc(%ebp)
8100298d:	e8 9f d8 ff ff       	call   81000231 <write>
81002992:	83 c4 10             	add    $0x10,%esp
81002995:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002998:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100299c:	75 14                	jne    810029b2 <_write_r+0x41>
8100299e:	a1 8c 43 00 81       	mov    0x8100438c,%eax
810029a3:	85 c0                	test   %eax,%eax
810029a5:	74 0b                	je     810029b2 <_write_r+0x41>
810029a7:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
810029ad:	8b 45 08             	mov    0x8(%ebp),%eax
810029b0:	89 10                	mov    %edx,(%eax)
810029b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029b5:	c9                   	leave  
810029b6:	c3                   	ret    

810029b7 <__swsetup_r>:
810029b7:	55                   	push   %ebp
810029b8:	89 e5                	mov    %esp,%ebp
810029ba:	53                   	push   %ebx
810029bb:	83 ec 14             	sub    $0x14,%esp
810029be:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810029c1:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
810029c6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810029cd:	74 18                	je     810029e7 <__swsetup_r+0x30>
810029cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029d2:	8b 40 38             	mov    0x38(%eax),%eax
810029d5:	85 c0                	test   %eax,%eax
810029d7:	75 0e                	jne    810029e7 <__swsetup_r+0x30>
810029d9:	83 ec 0c             	sub    $0xc,%esp
810029dc:	ff 75 f4             	push   -0xc(%ebp)
810029df:	e8 ea df ff ff       	call   810009ce <__sinit>
810029e4:	83 c4 10             	add    $0x10,%esp
810029e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029eb:	98                   	cwtl   
810029ec:	83 e0 08             	and    $0x8,%eax
810029ef:	85 c0                	test   %eax,%eax
810029f1:	0f 85 82 00 00 00    	jne    81002a79 <__swsetup_r+0xc2>
810029f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029fb:	98                   	cwtl   
810029fc:	83 e0 10             	and    $0x10,%eax
810029ff:	85 c0                	test   %eax,%eax
81002a01:	75 1e                	jne    81002a21 <__swsetup_r+0x6a>
81002a03:	8b 45 08             	mov    0x8(%ebp),%eax
81002a06:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002a0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a10:	83 c8 40             	or     $0x40,%eax
81002a13:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a17:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002a1c:	e9 ec 00 00 00       	jmp    81002b0d <__swsetup_r+0x156>
81002a21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a25:	98                   	cwtl   
81002a26:	83 e0 04             	and    $0x4,%eax
81002a29:	85 c0                	test   %eax,%eax
81002a2b:	74 41                	je     81002a6e <__swsetup_r+0xb7>
81002a2d:	8b 43 30             	mov    0x30(%ebx),%eax
81002a30:	85 c0                	test   %eax,%eax
81002a32:	74 23                	je     81002a57 <__swsetup_r+0xa0>
81002a34:	8b 53 30             	mov    0x30(%ebx),%edx
81002a37:	8d 43 40             	lea    0x40(%ebx),%eax
81002a3a:	39 c2                	cmp    %eax,%edx
81002a3c:	74 12                	je     81002a50 <__swsetup_r+0x99>
81002a3e:	8b 43 30             	mov    0x30(%ebx),%eax
81002a41:	83 ec 08             	sub    $0x8,%esp
81002a44:	50                   	push   %eax
81002a45:	ff 75 08             	push   0x8(%ebp)
81002a48:	e8 e0 04 00 00       	call   81002f2d <_free_r>
81002a4d:	83 c4 10             	add    $0x10,%esp
81002a50:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002a57:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a5b:	83 e0 db             	and    $0xffffffdb,%eax
81002a5e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a62:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002a69:	8b 43 10             	mov    0x10(%ebx),%eax
81002a6c:	89 03                	mov    %eax,(%ebx)
81002a6e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a72:	83 c8 08             	or     $0x8,%eax
81002a75:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a79:	8b 43 10             	mov    0x10(%ebx),%eax
81002a7c:	85 c0                	test   %eax,%eax
81002a7e:	75 2b                	jne    81002aab <__swsetup_r+0xf4>
81002a80:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a84:	98                   	cwtl   
81002a85:	25 00 02 00 00       	and    $0x200,%eax
81002a8a:	85 c0                	test   %eax,%eax
81002a8c:	74 0e                	je     81002a9c <__swsetup_r+0xe5>
81002a8e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a92:	98                   	cwtl   
81002a93:	25 80 00 00 00       	and    $0x80,%eax
81002a98:	85 c0                	test   %eax,%eax
81002a9a:	74 0f                	je     81002aab <__swsetup_r+0xf4>
81002a9c:	83 ec 08             	sub    $0x8,%esp
81002a9f:	53                   	push   %ebx
81002aa0:	ff 75 08             	push   0x8(%ebp)
81002aa3:	e8 07 0a 00 00       	call   810034af <__smakebuf_r>
81002aa8:	83 c4 10             	add    $0x10,%esp
81002aab:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aaf:	98                   	cwtl   
81002ab0:	83 e0 01             	and    $0x1,%eax
81002ab3:	85 c0                	test   %eax,%eax
81002ab5:	74 11                	je     81002ac8 <__swsetup_r+0x111>
81002ab7:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002abe:	8b 43 14             	mov    0x14(%ebx),%eax
81002ac1:	f7 d8                	neg    %eax
81002ac3:	89 43 18             	mov    %eax,0x18(%ebx)
81002ac6:	eb 19                	jmp    81002ae1 <__swsetup_r+0x12a>
81002ac8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002acc:	98                   	cwtl   
81002acd:	83 e0 02             	and    $0x2,%eax
81002ad0:	85 c0                	test   %eax,%eax
81002ad2:	75 05                	jne    81002ad9 <__swsetup_r+0x122>
81002ad4:	8b 43 14             	mov    0x14(%ebx),%eax
81002ad7:	eb 05                	jmp    81002ade <__swsetup_r+0x127>
81002ad9:	b8 00 00 00 00       	mov    $0x0,%eax
81002ade:	89 43 08             	mov    %eax,0x8(%ebx)
81002ae1:	8b 43 10             	mov    0x10(%ebx),%eax
81002ae4:	85 c0                	test   %eax,%eax
81002ae6:	75 20                	jne    81002b08 <__swsetup_r+0x151>
81002ae8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aec:	98                   	cwtl   
81002aed:	25 80 00 00 00       	and    $0x80,%eax
81002af2:	85 c0                	test   %eax,%eax
81002af4:	74 12                	je     81002b08 <__swsetup_r+0x151>
81002af6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002afa:	83 c8 40             	or     $0x40,%eax
81002afd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002b06:	eb 05                	jmp    81002b0d <__swsetup_r+0x156>
81002b08:	b8 00 00 00 00       	mov    $0x0,%eax
81002b0d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b10:	c9                   	leave  
81002b11:	c3                   	ret    

81002b12 <_close_r>:
81002b12:	55                   	push   %ebp
81002b13:	89 e5                	mov    %esp,%ebp
81002b15:	83 ec 18             	sub    $0x18,%esp
81002b18:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
81002b1f:	00 00 00 
81002b22:	83 ec 0c             	sub    $0xc,%esp
81002b25:	ff 75 0c             	push   0xc(%ebp)
81002b28:	e8 31 d7 ff ff       	call   8100025e <close>
81002b2d:	83 c4 10             	add    $0x10,%esp
81002b30:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b33:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002b37:	75 14                	jne    81002b4d <_close_r+0x3b>
81002b39:	a1 8c 43 00 81       	mov    0x8100438c,%eax
81002b3e:	85 c0                	test   %eax,%eax
81002b40:	74 0b                	je     81002b4d <_close_r+0x3b>
81002b42:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
81002b48:	8b 45 08             	mov    0x8(%ebp),%eax
81002b4b:	89 10                	mov    %edx,(%eax)
81002b4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b50:	c9                   	leave  
81002b51:	c3                   	ret    

81002b52 <_fclose_r>:
81002b52:	55                   	push   %ebp
81002b53:	89 e5                	mov    %esp,%ebp
81002b55:	53                   	push   %ebx
81002b56:	83 ec 14             	sub    $0x14,%esp
81002b59:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002b5c:	85 db                	test   %ebx,%ebx
81002b5e:	75 0a                	jne    81002b6a <_fclose_r+0x18>
81002b60:	b8 00 00 00 00       	mov    $0x0,%eax
81002b65:	e9 ea 00 00 00       	jmp    81002c54 <_fclose_r+0x102>
81002b6a:	8b 45 08             	mov    0x8(%ebp),%eax
81002b6d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b70:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002b74:	74 18                	je     81002b8e <_fclose_r+0x3c>
81002b76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b79:	8b 40 38             	mov    0x38(%eax),%eax
81002b7c:	85 c0                	test   %eax,%eax
81002b7e:	75 0e                	jne    81002b8e <_fclose_r+0x3c>
81002b80:	83 ec 0c             	sub    $0xc,%esp
81002b83:	ff 75 f0             	push   -0x10(%ebp)
81002b86:	e8 43 de ff ff       	call   810009ce <__sinit>
81002b8b:	83 c4 10             	add    $0x10,%esp
81002b8e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b92:	66 85 c0             	test   %ax,%ax
81002b95:	75 0a                	jne    81002ba1 <_fclose_r+0x4f>
81002b97:	b8 00 00 00 00       	mov    $0x0,%eax
81002b9c:	e9 b3 00 00 00       	jmp    81002c54 <_fclose_r+0x102>
81002ba1:	83 ec 08             	sub    $0x8,%esp
81002ba4:	53                   	push   %ebx
81002ba5:	ff 75 08             	push   0x8(%ebp)
81002ba8:	e8 c9 00 00 00       	call   81002c76 <__sflush_r>
81002bad:	83 c4 10             	add    $0x10,%esp
81002bb0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bb3:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002bb6:	85 c0                	test   %eax,%eax
81002bb8:	74 1d                	je     81002bd7 <_fclose_r+0x85>
81002bba:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002bbd:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002bc0:	83 ec 08             	sub    $0x8,%esp
81002bc3:	52                   	push   %edx
81002bc4:	ff 75 08             	push   0x8(%ebp)
81002bc7:	ff d0                	call   *%eax
81002bc9:	83 c4 10             	add    $0x10,%esp
81002bcc:	85 c0                	test   %eax,%eax
81002bce:	79 07                	jns    81002bd7 <_fclose_r+0x85>
81002bd0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002bd7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002bdb:	98                   	cwtl   
81002bdc:	25 80 00 00 00       	and    $0x80,%eax
81002be1:	85 c0                	test   %eax,%eax
81002be3:	74 12                	je     81002bf7 <_fclose_r+0xa5>
81002be5:	8b 43 10             	mov    0x10(%ebx),%eax
81002be8:	83 ec 08             	sub    $0x8,%esp
81002beb:	50                   	push   %eax
81002bec:	ff 75 08             	push   0x8(%ebp)
81002bef:	e8 39 03 00 00       	call   81002f2d <_free_r>
81002bf4:	83 c4 10             	add    $0x10,%esp
81002bf7:	8b 43 30             	mov    0x30(%ebx),%eax
81002bfa:	85 c0                	test   %eax,%eax
81002bfc:	74 23                	je     81002c21 <_fclose_r+0xcf>
81002bfe:	8b 53 30             	mov    0x30(%ebx),%edx
81002c01:	8d 43 40             	lea    0x40(%ebx),%eax
81002c04:	39 c2                	cmp    %eax,%edx
81002c06:	74 12                	je     81002c1a <_fclose_r+0xc8>
81002c08:	8b 43 30             	mov    0x30(%ebx),%eax
81002c0b:	83 ec 08             	sub    $0x8,%esp
81002c0e:	50                   	push   %eax
81002c0f:	ff 75 08             	push   0x8(%ebp)
81002c12:	e8 16 03 00 00       	call   81002f2d <_free_r>
81002c17:	83 c4 10             	add    $0x10,%esp
81002c1a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002c21:	8b 43 44             	mov    0x44(%ebx),%eax
81002c24:	85 c0                	test   %eax,%eax
81002c26:	74 19                	je     81002c41 <_fclose_r+0xef>
81002c28:	8b 43 44             	mov    0x44(%ebx),%eax
81002c2b:	83 ec 08             	sub    $0x8,%esp
81002c2e:	50                   	push   %eax
81002c2f:	ff 75 08             	push   0x8(%ebp)
81002c32:	e8 f6 02 00 00       	call   81002f2d <_free_r>
81002c37:	83 c4 10             	add    $0x10,%esp
81002c3a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002c41:	e8 21 de ff ff       	call   81000a67 <__sfp_lock_acquire>
81002c46:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002c4c:	e8 1c de ff ff       	call   81000a6d <__sfp_lock_release>
81002c51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c54:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002c57:	c9                   	leave  
81002c58:	c3                   	ret    

81002c59 <fclose>:
81002c59:	55                   	push   %ebp
81002c5a:	89 e5                	mov    %esp,%ebp
81002c5c:	83 ec 08             	sub    $0x8,%esp
81002c5f:	8b 55 08             	mov    0x8(%ebp),%edx
81002c62:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
81002c67:	83 ec 08             	sub    $0x8,%esp
81002c6a:	52                   	push   %edx
81002c6b:	50                   	push   %eax
81002c6c:	e8 e1 fe ff ff       	call   81002b52 <_fclose_r>
81002c71:	83 c4 10             	add    $0x10,%esp
81002c74:	c9                   	leave  
81002c75:	c3                   	ret    

81002c76 <__sflush_r>:
81002c76:	55                   	push   %ebp
81002c77:	89 e5                	mov    %esp,%ebp
81002c79:	57                   	push   %edi
81002c7a:	56                   	push   %esi
81002c7b:	53                   	push   %ebx
81002c7c:	83 ec 1c             	sub    $0x1c,%esp
81002c7f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002c82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c86:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81002c8a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002c8e:	83 e0 08             	and    $0x8,%eax
81002c91:	85 c0                	test   %eax,%eax
81002c93:	0f 85 93 01 00 00    	jne    81002e2c <__sflush_r+0x1b6>
81002c99:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c9d:	80 cc 08             	or     $0x8,%ah
81002ca0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ca4:	8b 43 04             	mov    0x4(%ebx),%eax
81002ca7:	85 c0                	test   %eax,%eax
81002ca9:	7f 0b                	jg     81002cb6 <__sflush_r+0x40>
81002cab:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002cae:	85 c0                	test   %eax,%eax
81002cb0:	0f 8e 6f 01 00 00    	jle    81002e25 <__sflush_r+0x1af>
81002cb6:	8b 43 28             	mov    0x28(%ebx),%eax
81002cb9:	85 c0                	test   %eax,%eax
81002cbb:	0f 84 64 01 00 00    	je     81002e25 <__sflush_r+0x1af>
81002cc1:	8b 45 08             	mov    0x8(%ebp),%eax
81002cc4:	8b 00                	mov    (%eax),%eax
81002cc6:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cc9:	8b 45 08             	mov    0x8(%ebp),%eax
81002ccc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002cd2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cd6:	98                   	cwtl   
81002cd7:	25 00 10 00 00       	and    $0x1000,%eax
81002cdc:	85 c0                	test   %eax,%eax
81002cde:	74 08                	je     81002ce8 <__sflush_r+0x72>
81002ce0:	8b 43 50             	mov    0x50(%ebx),%eax
81002ce3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ce6:	eb 64                	jmp    81002d4c <__sflush_r+0xd6>
81002ce8:	8b 43 28             	mov    0x28(%ebx),%eax
81002ceb:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002cee:	6a 01                	push   $0x1
81002cf0:	6a 00                	push   $0x0
81002cf2:	52                   	push   %edx
81002cf3:	ff 75 08             	push   0x8(%ebp)
81002cf6:	ff d0                	call   *%eax
81002cf8:	83 c4 10             	add    $0x10,%esp
81002cfb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002cfe:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002d02:	75 48                	jne    81002d4c <__sflush_r+0xd6>
81002d04:	8b 45 08             	mov    0x8(%ebp),%eax
81002d07:	8b 00                	mov    (%eax),%eax
81002d09:	85 c0                	test   %eax,%eax
81002d0b:	74 3f                	je     81002d4c <__sflush_r+0xd6>
81002d0d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002d14:	8b 45 08             	mov    0x8(%ebp),%eax
81002d17:	8b 00                	mov    (%eax),%eax
81002d19:	83 f8 1d             	cmp    $0x1d,%eax
81002d1c:	74 0a                	je     81002d28 <__sflush_r+0xb2>
81002d1e:	8b 45 08             	mov    0x8(%ebp),%eax
81002d21:	8b 00                	mov    (%eax),%eax
81002d23:	83 f8 16             	cmp    $0x16,%eax
81002d26:	75 11                	jne    81002d39 <__sflush_r+0xc3>
81002d28:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002d2f:	8b 45 08             	mov    0x8(%ebp),%eax
81002d32:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002d35:	89 10                	mov    %edx,(%eax)
81002d37:	eb 0b                	jmp    81002d44 <__sflush_r+0xce>
81002d39:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d3d:	83 c8 40             	or     $0x40,%eax
81002d40:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d44:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002d47:	e9 48 01 00 00       	jmp    81002e94 <__sflush_r+0x21e>
81002d4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d50:	98                   	cwtl   
81002d51:	83 e0 04             	and    $0x4,%eax
81002d54:	85 c0                	test   %eax,%eax
81002d56:	74 13                	je     81002d6b <__sflush_r+0xf5>
81002d58:	8b 43 04             	mov    0x4(%ebx),%eax
81002d5b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002d5e:	8b 43 30             	mov    0x30(%ebx),%eax
81002d61:	85 c0                	test   %eax,%eax
81002d63:	74 06                	je     81002d6b <__sflush_r+0xf5>
81002d65:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002d68:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002d6b:	8b 43 28             	mov    0x28(%ebx),%eax
81002d6e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002d71:	6a 00                	push   $0x0
81002d73:	ff 75 e4             	push   -0x1c(%ebp)
81002d76:	52                   	push   %edx
81002d77:	ff 75 08             	push   0x8(%ebp)
81002d7a:	ff d0                	call   *%eax
81002d7c:	83 c4 10             	add    $0x10,%esp
81002d7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002d82:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002d86:	75 1d                	jne    81002da5 <__sflush_r+0x12f>
81002d88:	8b 45 08             	mov    0x8(%ebp),%eax
81002d8b:	8b 00                	mov    (%eax),%eax
81002d8d:	85 c0                	test   %eax,%eax
81002d8f:	74 14                	je     81002da5 <__sflush_r+0x12f>
81002d91:	8b 45 08             	mov    0x8(%ebp),%eax
81002d94:	8b 00                	mov    (%eax),%eax
81002d96:	83 f8 1d             	cmp    $0x1d,%eax
81002d99:	74 0a                	je     81002da5 <__sflush_r+0x12f>
81002d9b:	8b 45 08             	mov    0x8(%ebp),%eax
81002d9e:	8b 00                	mov    (%eax),%eax
81002da0:	83 f8 16             	cmp    $0x16,%eax
81002da3:	75 6e                	jne    81002e13 <__sflush_r+0x19d>
81002da5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002da9:	80 e4 f7             	and    $0xf7,%ah
81002dac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002db0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002db7:	8b 43 10             	mov    0x10(%ebx),%eax
81002dba:	89 03                	mov    %eax,(%ebx)
81002dbc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dc0:	98                   	cwtl   
81002dc1:	25 00 10 00 00       	and    $0x1000,%eax
81002dc6:	85 c0                	test   %eax,%eax
81002dc8:	74 15                	je     81002ddf <__sflush_r+0x169>
81002dca:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002dce:	75 09                	jne    81002dd9 <__sflush_r+0x163>
81002dd0:	8b 45 08             	mov    0x8(%ebp),%eax
81002dd3:	8b 00                	mov    (%eax),%eax
81002dd5:	85 c0                	test   %eax,%eax
81002dd7:	75 06                	jne    81002ddf <__sflush_r+0x169>
81002dd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002ddc:	89 43 50             	mov    %eax,0x50(%ebx)
81002ddf:	8b 45 08             	mov    0x8(%ebp),%eax
81002de2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002de5:	89 10                	mov    %edx,(%eax)
81002de7:	8b 43 30             	mov    0x30(%ebx),%eax
81002dea:	85 c0                	test   %eax,%eax
81002dec:	74 37                	je     81002e25 <__sflush_r+0x1af>
81002dee:	8b 53 30             	mov    0x30(%ebx),%edx
81002df1:	8d 43 40             	lea    0x40(%ebx),%eax
81002df4:	39 c2                	cmp    %eax,%edx
81002df6:	74 12                	je     81002e0a <__sflush_r+0x194>
81002df8:	8b 43 30             	mov    0x30(%ebx),%eax
81002dfb:	83 ec 08             	sub    $0x8,%esp
81002dfe:	50                   	push   %eax
81002dff:	ff 75 08             	push   0x8(%ebp)
81002e02:	e8 26 01 00 00       	call   81002f2d <_free_r>
81002e07:	83 c4 10             	add    $0x10,%esp
81002e0a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002e11:	eb 12                	jmp    81002e25 <__sflush_r+0x1af>
81002e13:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e17:	83 c8 40             	or     $0x40,%eax
81002e1a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002e1e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e23:	eb 6f                	jmp    81002e94 <__sflush_r+0x21e>
81002e25:	b8 00 00 00 00       	mov    $0x0,%eax
81002e2a:	eb 68                	jmp    81002e94 <__sflush_r+0x21e>
81002e2c:	8b 73 10             	mov    0x10(%ebx),%esi
81002e2f:	85 f6                	test   %esi,%esi
81002e31:	75 07                	jne    81002e3a <__sflush_r+0x1c4>
81002e33:	b8 00 00 00 00       	mov    $0x0,%eax
81002e38:	eb 5a                	jmp    81002e94 <__sflush_r+0x21e>
81002e3a:	8b 03                	mov    (%ebx),%eax
81002e3c:	29 f0                	sub    %esi,%eax
81002e3e:	89 c7                	mov    %eax,%edi
81002e40:	89 33                	mov    %esi,(%ebx)
81002e42:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002e46:	83 e0 03             	and    $0x3,%eax
81002e49:	85 c0                	test   %eax,%eax
81002e4b:	75 05                	jne    81002e52 <__sflush_r+0x1dc>
81002e4d:	8b 43 14             	mov    0x14(%ebx),%eax
81002e50:	eb 05                	jmp    81002e57 <__sflush_r+0x1e1>
81002e52:	b8 00 00 00 00       	mov    $0x0,%eax
81002e57:	89 43 08             	mov    %eax,0x8(%ebx)
81002e5a:	eb 2f                	jmp    81002e8b <__sflush_r+0x215>
81002e5c:	8b 43 24             	mov    0x24(%ebx),%eax
81002e5f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002e62:	57                   	push   %edi
81002e63:	56                   	push   %esi
81002e64:	52                   	push   %edx
81002e65:	ff 75 08             	push   0x8(%ebp)
81002e68:	ff d0                	call   *%eax
81002e6a:	83 c4 10             	add    $0x10,%esp
81002e6d:	85 c0                	test   %eax,%eax
81002e6f:	7f 12                	jg     81002e83 <__sflush_r+0x20d>
81002e71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e75:	83 c8 40             	or     $0x40,%eax
81002e78:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002e7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002e81:	eb 11                	jmp    81002e94 <__sflush_r+0x21e>
81002e83:	89 c1                	mov    %eax,%ecx
81002e85:	89 c8                	mov    %ecx,%eax
81002e87:	01 c6                	add    %eax,%esi
81002e89:	29 cf                	sub    %ecx,%edi
81002e8b:	85 ff                	test   %edi,%edi
81002e8d:	7f cd                	jg     81002e5c <__sflush_r+0x1e6>
81002e8f:	b8 00 00 00 00       	mov    $0x0,%eax
81002e94:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e97:	5b                   	pop    %ebx
81002e98:	5e                   	pop    %esi
81002e99:	5f                   	pop    %edi
81002e9a:	5d                   	pop    %ebp
81002e9b:	c3                   	ret    

81002e9c <_fflush_r>:
81002e9c:	55                   	push   %ebp
81002e9d:	89 e5                	mov    %esp,%ebp
81002e9f:	53                   	push   %ebx
81002ea0:	83 ec 14             	sub    $0x14,%esp
81002ea3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002ea6:	8b 45 08             	mov    0x8(%ebp),%eax
81002ea9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002eac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002eb0:	74 18                	je     81002eca <_fflush_r+0x2e>
81002eb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eb5:	8b 40 38             	mov    0x38(%eax),%eax
81002eb8:	85 c0                	test   %eax,%eax
81002eba:	75 0e                	jne    81002eca <_fflush_r+0x2e>
81002ebc:	83 ec 0c             	sub    $0xc,%esp
81002ebf:	ff 75 f4             	push   -0xc(%ebp)
81002ec2:	e8 07 db ff ff       	call   810009ce <__sinit>
81002ec7:	83 c4 10             	add    $0x10,%esp
81002eca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ece:	66 85 c0             	test   %ax,%ax
81002ed1:	75 07                	jne    81002eda <_fflush_r+0x3e>
81002ed3:	b8 00 00 00 00       	mov    $0x0,%eax
81002ed8:	eb 15                	jmp    81002eef <_fflush_r+0x53>
81002eda:	83 ec 08             	sub    $0x8,%esp
81002edd:	53                   	push   %ebx
81002ede:	ff 75 08             	push   0x8(%ebp)
81002ee1:	e8 90 fd ff ff       	call   81002c76 <__sflush_r>
81002ee6:	83 c4 10             	add    $0x10,%esp
81002ee9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002eec:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002ef2:	c9                   	leave  
81002ef3:	c3                   	ret    

81002ef4 <fflush>:
81002ef4:	55                   	push   %ebp
81002ef5:	89 e5                	mov    %esp,%ebp
81002ef7:	83 ec 08             	sub    $0x8,%esp
81002efa:	8b 55 08             	mov    0x8(%ebp),%edx
81002efd:	85 d2                	test   %edx,%edx
81002eff:	75 18                	jne    81002f19 <fflush+0x25>
81002f01:	a1 a0 38 00 81       	mov    0x810038a0,%eax
81002f06:	83 ec 08             	sub    $0x8,%esp
81002f09:	68 9c 2e 00 81       	push   $0x81002e9c
81002f0e:	50                   	push   %eax
81002f0f:	e8 cd e0 ff ff       	call   81000fe1 <_fwalk_reent>
81002f14:	83 c4 10             	add    $0x10,%esp
81002f17:	eb 12                	jmp    81002f2b <fflush+0x37>
81002f19:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
81002f1e:	83 ec 08             	sub    $0x8,%esp
81002f21:	52                   	push   %edx
81002f22:	50                   	push   %eax
81002f23:	e8 74 ff ff ff       	call   81002e9c <_fflush_r>
81002f28:	83 c4 10             	add    $0x10,%esp
81002f2b:	c9                   	leave  
81002f2c:	c3                   	ret    

81002f2d <_free_r>:
81002f2d:	55                   	push   %ebp
81002f2e:	89 e5                	mov    %esp,%ebp
81002f30:	53                   	push   %ebx
81002f31:	83 ec 34             	sub    $0x34,%esp
81002f34:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002f38:	0f 84 c4 03 00 00    	je     81003302 <_free_r+0x3d5>
81002f3e:	83 ec 0c             	sub    $0xc,%esp
81002f41:	ff 75 08             	push   0x8(%ebp)
81002f44:	e8 bc ed ff ff       	call   81001d05 <__malloc_lock>
81002f49:	83 c4 10             	add    $0x10,%esp
81002f4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f4f:	83 e8 08             	sub    $0x8,%eax
81002f52:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f58:	8b 40 04             	mov    0x4(%eax),%eax
81002f5b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002f5e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f61:	83 e0 fe             	and    $0xfffffffe,%eax
81002f64:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002f67:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f6a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f6d:	01 d0                	add    %edx,%eax
81002f6f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f72:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f75:	8b 40 04             	mov    0x4(%eax),%eax
81002f78:	83 e0 fc             	and    $0xfffffffc,%eax
81002f7b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f7e:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81002f83:	8b 40 08             	mov    0x8(%eax),%eax
81002f86:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002f89:	0f 85 94 00 00 00    	jne    81003023 <_free_r+0xf6>
81002f8f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f92:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f95:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f98:	83 e0 01             	and    $0x1,%eax
81002f9b:	85 c0                	test   %eax,%eax
81002f9d:	75 3a                	jne    81002fd9 <_free_r+0xac>
81002f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa2:	8b 00                	mov    (%eax),%eax
81002fa4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002fa7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002faa:	f7 d8                	neg    %eax
81002fac:	01 45 f4             	add    %eax,-0xc(%ebp)
81002faf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002fb2:	01 45 f0             	add    %eax,-0x10(%ebp)
81002fb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb8:	8b 40 0c             	mov    0xc(%eax),%eax
81002fbb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002fbe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fc1:	8b 40 08             	mov    0x8(%eax),%eax
81002fc4:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fc7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fca:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002fcd:	89 50 0c             	mov    %edx,0xc(%eax)
81002fd0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fd3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002fd6:	89 50 08             	mov    %edx,0x8(%eax)
81002fd9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fdc:	83 c8 01             	or     $0x1,%eax
81002fdf:	89 c2                	mov    %eax,%edx
81002fe1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fe4:	89 50 04             	mov    %edx,0x4(%eax)
81002fe7:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
81002fec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fef:	89 42 08             	mov    %eax,0x8(%edx)
81002ff2:	a1 08 41 00 81       	mov    0x81004108,%eax
81002ff7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002ffa:	72 14                	jb     81003010 <_free_r+0xe3>
81002ffc:	a1 40 43 00 81       	mov    0x81004340,%eax
81003001:	83 ec 08             	sub    $0x8,%esp
81003004:	50                   	push   %eax
81003005:	ff 75 08             	push   0x8(%ebp)
81003008:	e8 fb 02 00 00       	call   81003308 <_malloc_trim_r>
8100300d:	83 c4 10             	add    $0x10,%esp
81003010:	83 ec 0c             	sub    $0xc,%esp
81003013:	ff 75 08             	push   0x8(%ebp)
81003016:	e8 f0 ec ff ff       	call   81001d0b <__malloc_unlock>
8100301b:	83 c4 10             	add    $0x10,%esp
8100301e:	e9 e0 02 00 00       	jmp    81003303 <_free_r+0x3d6>
81003023:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003026:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003029:	89 50 04             	mov    %edx,0x4(%eax)
8100302c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003033:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003036:	83 e0 01             	and    $0x1,%eax
81003039:	85 c0                	test   %eax,%eax
8100303b:	75 52                	jne    8100308f <_free_r+0x162>
8100303d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003040:	8b 00                	mov    (%eax),%eax
81003042:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003045:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003048:	f7 d8                	neg    %eax
8100304a:	01 45 f4             	add    %eax,-0xc(%ebp)
8100304d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003050:	01 45 f0             	add    %eax,-0x10(%ebp)
81003053:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003056:	8b 40 08             	mov    0x8(%eax),%eax
81003059:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
8100305e:	39 d0                	cmp    %edx,%eax
81003060:	75 09                	jne    8100306b <_free_r+0x13e>
81003062:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003069:	eb 24                	jmp    8100308f <_free_r+0x162>
8100306b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100306e:	8b 40 0c             	mov    0xc(%eax),%eax
81003071:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003074:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003077:	8b 40 08             	mov    0x8(%eax),%eax
8100307a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100307d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003080:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003083:	89 50 0c             	mov    %edx,0xc(%eax)
81003086:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003089:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100308c:	89 50 08             	mov    %edx,0x8(%eax)
8100308f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003092:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003095:	01 d0                	add    %edx,%eax
81003097:	8b 40 04             	mov    0x4(%eax),%eax
8100309a:	83 e0 01             	and    $0x1,%eax
8100309d:	85 c0                	test   %eax,%eax
8100309f:	75 75                	jne    81003116 <_free_r+0x1e9>
810030a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810030a4:	01 45 f0             	add    %eax,-0x10(%ebp)
810030a7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810030ab:	75 45                	jne    810030f2 <_free_r+0x1c5>
810030ad:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030b0:	8b 40 08             	mov    0x8(%eax),%eax
810030b3:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810030b8:	39 d0                	cmp    %edx,%eax
810030ba:	75 36                	jne    810030f2 <_free_r+0x1c5>
810030bc:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810030c3:	b8 08 3d 00 81       	mov    $0x81003d08,%eax
810030c8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810030cb:	89 50 0c             	mov    %edx,0xc(%eax)
810030ce:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810030d3:	8b 40 0c             	mov    0xc(%eax),%eax
810030d6:	89 42 08             	mov    %eax,0x8(%edx)
810030d9:	ba 08 3d 00 81       	mov    $0x81003d08,%edx
810030de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030e1:	89 50 0c             	mov    %edx,0xc(%eax)
810030e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030e7:	8b 50 0c             	mov    0xc(%eax),%edx
810030ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030ed:	89 50 08             	mov    %edx,0x8(%eax)
810030f0:	eb 24                	jmp    81003116 <_free_r+0x1e9>
810030f2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030f5:	8b 40 0c             	mov    0xc(%eax),%eax
810030f8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810030fb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030fe:	8b 40 08             	mov    0x8(%eax),%eax
81003101:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003104:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003107:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100310a:	89 50 0c             	mov    %edx,0xc(%eax)
8100310d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003110:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003113:	89 50 08             	mov    %edx,0x8(%eax)
81003116:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003119:	83 c8 01             	or     $0x1,%eax
8100311c:	89 c2                	mov    %eax,%edx
8100311e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003121:	89 50 04             	mov    %edx,0x4(%eax)
81003124:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003127:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100312a:	01 c2                	add    %eax,%edx
8100312c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100312f:	89 02                	mov    %eax,(%edx)
81003131:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003135:	0f 85 b7 01 00 00    	jne    810032f2 <_free_r+0x3c5>
8100313b:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003142:	77 7f                	ja     810031c3 <_free_r+0x296>
81003144:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003147:	c1 e8 03             	shr    $0x3,%eax
8100314a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100314d:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81003152:	8b 58 04             	mov    0x4(%eax),%ebx
81003155:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003158:	8d 50 03             	lea    0x3(%eax),%edx
8100315b:	85 c0                	test   %eax,%eax
8100315d:	0f 48 c2             	cmovs  %edx,%eax
81003160:	c1 f8 02             	sar    $0x2,%eax
81003163:	ba 01 00 00 00       	mov    $0x1,%edx
81003168:	89 c1                	mov    %eax,%ecx
8100316a:	d3 e2                	shl    %cl,%edx
8100316c:	89 d0                	mov    %edx,%eax
8100316e:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
81003173:	09 d8                	or     %ebx,%eax
81003175:	89 42 04             	mov    %eax,0x4(%edx)
81003178:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100317b:	83 c0 01             	add    $0x1,%eax
8100317e:	01 c0                	add    %eax,%eax
81003180:	c1 e0 02             	shl    $0x2,%eax
81003183:	05 00 3d 00 81       	add    $0x81003d00,%eax
81003188:	83 e8 08             	sub    $0x8,%eax
8100318b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100318e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003191:	8b 40 08             	mov    0x8(%eax),%eax
81003194:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003197:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100319a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100319d:	89 50 0c             	mov    %edx,0xc(%eax)
810031a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031a3:	8b 55 e8             	mov    -0x18(%ebp),%edx
810031a6:	89 50 08             	mov    %edx,0x8(%eax)
810031a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031ac:	8b 55 f4             	mov    -0xc(%ebp),%edx
810031af:	89 50 08             	mov    %edx,0x8(%eax)
810031b2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031b5:	8b 50 08             	mov    0x8(%eax),%edx
810031b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031bb:	89 50 0c             	mov    %edx,0xc(%eax)
810031be:	e9 2f 01 00 00       	jmp    810032f2 <_free_r+0x3c5>
810031c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031c6:	c1 e8 09             	shr    $0x9,%eax
810031c9:	85 c0                	test   %eax,%eax
810031cb:	75 08                	jne    810031d5 <_free_r+0x2a8>
810031cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031d0:	c1 e8 03             	shr    $0x3,%eax
810031d3:	eb 77                	jmp    8100324c <_free_r+0x31f>
810031d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031d8:	c1 e8 09             	shr    $0x9,%eax
810031db:	83 f8 04             	cmp    $0x4,%eax
810031de:	77 0b                	ja     810031eb <_free_r+0x2be>
810031e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031e3:	c1 e8 06             	shr    $0x6,%eax
810031e6:	83 c0 38             	add    $0x38,%eax
810031e9:	eb 61                	jmp    8100324c <_free_r+0x31f>
810031eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031ee:	c1 e8 09             	shr    $0x9,%eax
810031f1:	83 f8 14             	cmp    $0x14,%eax
810031f4:	77 0b                	ja     81003201 <_free_r+0x2d4>
810031f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031f9:	c1 e8 09             	shr    $0x9,%eax
810031fc:	83 c0 5b             	add    $0x5b,%eax
810031ff:	eb 4b                	jmp    8100324c <_free_r+0x31f>
81003201:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003204:	c1 e8 09             	shr    $0x9,%eax
81003207:	83 f8 54             	cmp    $0x54,%eax
8100320a:	77 0b                	ja     81003217 <_free_r+0x2ea>
8100320c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100320f:	c1 e8 0c             	shr    $0xc,%eax
81003212:	83 c0 6e             	add    $0x6e,%eax
81003215:	eb 35                	jmp    8100324c <_free_r+0x31f>
81003217:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100321a:	c1 e8 09             	shr    $0x9,%eax
8100321d:	3d 54 01 00 00       	cmp    $0x154,%eax
81003222:	77 0b                	ja     8100322f <_free_r+0x302>
81003224:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003227:	c1 e8 0f             	shr    $0xf,%eax
8100322a:	83 c0 77             	add    $0x77,%eax
8100322d:	eb 1d                	jmp    8100324c <_free_r+0x31f>
8100322f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003232:	c1 e8 09             	shr    $0x9,%eax
81003235:	3d 54 05 00 00       	cmp    $0x554,%eax
8100323a:	77 0b                	ja     81003247 <_free_r+0x31a>
8100323c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100323f:	c1 e8 12             	shr    $0x12,%eax
81003242:	83 c0 7c             	add    $0x7c,%eax
81003245:	eb 05                	jmp    8100324c <_free_r+0x31f>
81003247:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100324c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100324f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003252:	83 c0 01             	add    $0x1,%eax
81003255:	01 c0                	add    %eax,%eax
81003257:	c1 e0 02             	shl    $0x2,%eax
8100325a:	05 00 3d 00 81       	add    $0x81003d00,%eax
8100325f:	83 e8 08             	sub    $0x8,%eax
81003262:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003265:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003268:	8b 40 08             	mov    0x8(%eax),%eax
8100326b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100326e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003271:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003274:	75 36                	jne    810032ac <_free_r+0x37f>
81003276:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100327b:	8b 58 04             	mov    0x4(%eax),%ebx
8100327e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003281:	8d 50 03             	lea    0x3(%eax),%edx
81003284:	85 c0                	test   %eax,%eax
81003286:	0f 48 c2             	cmovs  %edx,%eax
81003289:	c1 f8 02             	sar    $0x2,%eax
8100328c:	ba 01 00 00 00       	mov    $0x1,%edx
81003291:	89 c1                	mov    %eax,%ecx
81003293:	d3 e2                	shl    %cl,%edx
81003295:	89 d0                	mov    %edx,%eax
81003297:	ba 00 3d 00 81       	mov    $0x81003d00,%edx
8100329c:	09 d8                	or     %ebx,%eax
8100329e:	89 42 04             	mov    %eax,0x4(%edx)
810032a1:	eb 28                	jmp    810032cb <_free_r+0x39e>
810032a3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032a6:	8b 40 08             	mov    0x8(%eax),%eax
810032a9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032ac:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032af:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810032b2:	74 0e                	je     810032c2 <_free_r+0x395>
810032b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032b7:	8b 40 04             	mov    0x4(%eax),%eax
810032ba:	83 e0 fc             	and    $0xfffffffc,%eax
810032bd:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810032c0:	72 e1                	jb     810032a3 <_free_r+0x376>
810032c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032c5:	8b 40 0c             	mov    0xc(%eax),%eax
810032c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810032cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032ce:	8b 55 ec             	mov    -0x14(%ebp),%edx
810032d1:	89 50 0c             	mov    %edx,0xc(%eax)
810032d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032d7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810032da:	89 50 08             	mov    %edx,0x8(%eax)
810032dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810032e0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810032e3:	89 50 08             	mov    %edx,0x8(%eax)
810032e6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810032e9:	8b 50 08             	mov    0x8(%eax),%edx
810032ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032ef:	89 50 0c             	mov    %edx,0xc(%eax)
810032f2:	83 ec 0c             	sub    $0xc,%esp
810032f5:	ff 75 08             	push   0x8(%ebp)
810032f8:	e8 0e ea ff ff       	call   81001d0b <__malloc_unlock>
810032fd:	83 c4 10             	add    $0x10,%esp
81003300:	eb 01                	jmp    81003303 <_free_r+0x3d6>
81003302:	90                   	nop
81003303:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003306:	c9                   	leave  
81003307:	c3                   	ret    

81003308 <_malloc_trim_r>:
81003308:	55                   	push   %ebp
81003309:	89 e5                	mov    %esp,%ebp
8100330b:	83 ec 28             	sub    $0x28,%esp
8100330e:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003315:	83 ec 0c             	sub    $0xc,%esp
81003318:	ff 75 08             	push   0x8(%ebp)
8100331b:	e8 e5 e9 ff ff       	call   81001d05 <__malloc_lock>
81003320:	83 c4 10             	add    $0x10,%esp
81003323:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81003328:	8b 40 08             	mov    0x8(%eax),%eax
8100332b:	8b 40 04             	mov    0x4(%eax),%eax
8100332e:	83 e0 fc             	and    $0xfffffffc,%eax
81003331:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003334:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003337:	2b 45 0c             	sub    0xc(%ebp),%eax
8100333a:	89 c2                	mov    %eax,%edx
8100333c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100333f:	01 d0                	add    %edx,%eax
81003341:	83 e8 11             	sub    $0x11,%eax
81003344:	ba 00 00 00 00       	mov    $0x0,%edx
81003349:	f7 75 f4             	divl   -0xc(%ebp)
8100334c:	83 e8 01             	sub    $0x1,%eax
8100334f:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003353:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003356:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003359:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100335c:	7d 18                	jge    81003376 <_malloc_trim_r+0x6e>
8100335e:	83 ec 0c             	sub    $0xc,%esp
81003361:	ff 75 08             	push   0x8(%ebp)
81003364:	e8 a2 e9 ff ff       	call   81001d0b <__malloc_unlock>
81003369:	83 c4 10             	add    $0x10,%esp
8100336c:	b8 00 00 00 00       	mov    $0x0,%eax
81003371:	e9 f1 00 00 00       	jmp    81003467 <_malloc_trim_r+0x15f>
81003376:	83 ec 08             	sub    $0x8,%esp
81003379:	6a 00                	push   $0x0
8100337b:	ff 75 08             	push   0x8(%ebp)
8100337e:	e8 96 f4 ff ff       	call   81002819 <_sbrk_r>
81003383:	83 c4 10             	add    $0x10,%esp
81003386:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003389:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
8100338e:	8b 50 08             	mov    0x8(%eax),%edx
81003391:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003394:	01 d0                	add    %edx,%eax
81003396:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003399:	74 18                	je     810033b3 <_malloc_trim_r+0xab>
8100339b:	83 ec 0c             	sub    $0xc,%esp
8100339e:	ff 75 08             	push   0x8(%ebp)
810033a1:	e8 65 e9 ff ff       	call   81001d0b <__malloc_unlock>
810033a6:	83 c4 10             	add    $0x10,%esp
810033a9:	b8 00 00 00 00       	mov    $0x0,%eax
810033ae:	e9 b4 00 00 00       	jmp    81003467 <_malloc_trim_r+0x15f>
810033b3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810033b6:	f7 d8                	neg    %eax
810033b8:	83 ec 08             	sub    $0x8,%esp
810033bb:	50                   	push   %eax
810033bc:	ff 75 08             	push   0x8(%ebp)
810033bf:	e8 55 f4 ff ff       	call   81002819 <_sbrk_r>
810033c4:	83 c4 10             	add    $0x10,%esp
810033c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810033ca:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810033ce:	75 61                	jne    81003431 <_malloc_trim_r+0x129>
810033d0:	83 ec 08             	sub    $0x8,%esp
810033d3:	6a 00                	push   $0x0
810033d5:	ff 75 08             	push   0x8(%ebp)
810033d8:	e8 3c f4 ff ff       	call   81002819 <_sbrk_r>
810033dd:	83 c4 10             	add    $0x10,%esp
810033e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810033e3:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
810033e8:	8b 50 08             	mov    0x8(%eax),%edx
810033eb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810033ee:	29 d0                	sub    %edx,%eax
810033f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810033f3:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810033f7:	7e 23                	jle    8100341c <_malloc_trim_r+0x114>
810033f9:	8b 15 0c 41 00 81    	mov    0x8100410c,%edx
810033ff:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003402:	29 d0                	sub    %edx,%eax
81003404:	a3 60 43 00 81       	mov    %eax,0x81004360
81003409:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100340c:	83 c8 01             	or     $0x1,%eax
8100340f:	89 c2                	mov    %eax,%edx
81003411:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81003416:	8b 40 08             	mov    0x8(%eax),%eax
81003419:	89 50 04             	mov    %edx,0x4(%eax)
8100341c:	83 ec 0c             	sub    $0xc,%esp
8100341f:	ff 75 08             	push   0x8(%ebp)
81003422:	e8 e4 e8 ff ff       	call   81001d0b <__malloc_unlock>
81003427:	83 c4 10             	add    $0x10,%esp
8100342a:	b8 00 00 00 00       	mov    $0x0,%eax
8100342f:	eb 36                	jmp    81003467 <_malloc_trim_r+0x15f>
81003431:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003434:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003437:	83 c8 01             	or     $0x1,%eax
8100343a:	89 c2                	mov    %eax,%edx
8100343c:	b8 00 3d 00 81       	mov    $0x81003d00,%eax
81003441:	8b 40 08             	mov    0x8(%eax),%eax
81003444:	89 50 04             	mov    %edx,0x4(%eax)
81003447:	a1 60 43 00 81       	mov    0x81004360,%eax
8100344c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100344f:	a3 60 43 00 81       	mov    %eax,0x81004360
81003454:	83 ec 0c             	sub    $0xc,%esp
81003457:	ff 75 08             	push   0x8(%ebp)
8100345a:	e8 ac e8 ff ff       	call   81001d0b <__malloc_unlock>
8100345f:	83 c4 10             	add    $0x10,%esp
81003462:	b8 01 00 00 00       	mov    $0x1,%eax
81003467:	c9                   	leave  
81003468:	c3                   	ret    

81003469 <_lseek_r>:
81003469:	55                   	push   %ebp
8100346a:	89 e5                	mov    %esp,%ebp
8100346c:	83 ec 18             	sub    $0x18,%esp
8100346f:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
81003476:	00 00 00 
81003479:	83 ec 04             	sub    $0x4,%esp
8100347c:	ff 75 14             	push   0x14(%ebp)
8100347f:	ff 75 10             	push   0x10(%ebp)
81003482:	ff 75 0c             	push   0xc(%ebp)
81003485:	e8 f5 cd ff ff       	call   8100027f <lseek>
8100348a:	83 c4 10             	add    $0x10,%esp
8100348d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003490:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003494:	75 14                	jne    810034aa <_lseek_r+0x41>
81003496:	a1 8c 43 00 81       	mov    0x8100438c,%eax
8100349b:	85 c0                	test   %eax,%eax
8100349d:	74 0b                	je     810034aa <_lseek_r+0x41>
8100349f:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
810034a5:	8b 45 08             	mov    0x8(%ebp),%eax
810034a8:	89 10                	mov    %edx,(%eax)
810034aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034ad:	c9                   	leave  
810034ae:	c3                   	ret    

810034af <__smakebuf_r>:
810034af:	55                   	push   %ebp
810034b0:	89 e5                	mov    %esp,%ebp
810034b2:	56                   	push   %esi
810034b3:	53                   	push   %ebx
810034b4:	83 ec 10             	sub    $0x10,%esp
810034b7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810034ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034be:	98                   	cwtl   
810034bf:	83 e0 02             	and    $0x2,%eax
810034c2:	85 c0                	test   %eax,%eax
810034c4:	74 16                	je     810034dc <__smakebuf_r+0x2d>
810034c6:	8d 43 43             	lea    0x43(%ebx),%eax
810034c9:	89 03                	mov    %eax,(%ebx)
810034cb:	8b 03                	mov    (%ebx),%eax
810034cd:	89 43 10             	mov    %eax,0x10(%ebx)
810034d0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810034d7:	e9 b9 00 00 00       	jmp    81003595 <__smakebuf_r+0xe6>
810034dc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810034df:	50                   	push   %eax
810034e0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810034e3:	50                   	push   %eax
810034e4:	53                   	push   %ebx
810034e5:	ff 75 08             	push   0x8(%ebp)
810034e8:	e8 af 00 00 00       	call   8100359c <__swhatbuf_r>
810034ed:	83 c4 10             	add    $0x10,%esp
810034f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034f6:	83 ec 08             	sub    $0x8,%esp
810034f9:	50                   	push   %eax
810034fa:	ff 75 08             	push   0x8(%ebp)
810034fd:	e8 dd dd ff ff       	call   810012df <_malloc_r>
81003502:	83 c4 10             	add    $0x10,%esp
81003505:	89 c6                	mov    %eax,%esi
81003507:	85 f6                	test   %esi,%esi
81003509:	75 2f                	jne    8100353a <__smakebuf_r+0x8b>
8100350b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100350f:	98                   	cwtl   
81003510:	25 00 02 00 00       	and    $0x200,%eax
81003515:	85 c0                	test   %eax,%eax
81003517:	75 7c                	jne    81003595 <__smakebuf_r+0xe6>
81003519:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100351d:	83 e0 fc             	and    $0xfffffffc,%eax
81003520:	83 c8 02             	or     $0x2,%eax
81003523:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003527:	8d 43 43             	lea    0x43(%ebx),%eax
8100352a:	89 03                	mov    %eax,(%ebx)
8100352c:	8b 03                	mov    (%ebx),%eax
8100352e:	89 43 10             	mov    %eax,0x10(%ebx)
81003531:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003538:	eb 5b                	jmp    81003595 <__smakebuf_r+0xe6>
8100353a:	8b 45 08             	mov    0x8(%ebp),%eax
8100353d:	c7 40 3c 93 09 00 81 	movl   $0x81000993,0x3c(%eax)
81003544:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003548:	0c 80                	or     $0x80,%al
8100354a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100354e:	89 33                	mov    %esi,(%ebx)
81003550:	8b 03                	mov    (%ebx),%eax
81003552:	89 43 10             	mov    %eax,0x10(%ebx)
81003555:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003558:	89 43 14             	mov    %eax,0x14(%ebx)
8100355b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100355e:	85 c0                	test   %eax,%eax
81003560:	74 26                	je     81003588 <__smakebuf_r+0xd9>
81003562:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003566:	98                   	cwtl   
81003567:	83 ec 08             	sub    $0x8,%esp
8100356a:	50                   	push   %eax
8100356b:	ff 75 08             	push   0x8(%ebp)
8100356e:	e8 dc 02 00 00       	call   8100384f <_isatty_r>
81003573:	83 c4 10             	add    $0x10,%esp
81003576:	85 c0                	test   %eax,%eax
81003578:	74 0e                	je     81003588 <__smakebuf_r+0xd9>
8100357a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100357e:	83 e0 fc             	and    $0xfffffffc,%eax
81003581:	83 c8 01             	or     $0x1,%eax
81003584:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003588:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100358c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100358f:	09 d0                	or     %edx,%eax
81003591:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003595:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003598:	5b                   	pop    %ebx
81003599:	5e                   	pop    %esi
8100359a:	5d                   	pop    %ebp
8100359b:	c3                   	ret    

8100359c <__swhatbuf_r>:
8100359c:	55                   	push   %ebp
8100359d:	89 e5                	mov    %esp,%ebp
8100359f:	83 ec 58             	sub    $0x58,%esp
810035a2:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810035a9:	8b 45 0c             	mov    0xc(%ebp),%eax
810035ac:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810035b0:	66 85 c0             	test   %ax,%ax
810035b3:	78 1f                	js     810035d4 <__swhatbuf_r+0x38>
810035b5:	8b 45 0c             	mov    0xc(%ebp),%eax
810035b8:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810035bc:	98                   	cwtl   
810035bd:	83 ec 04             	sub    $0x4,%esp
810035c0:	8d 55 ac             	lea    -0x54(%ebp),%edx
810035c3:	52                   	push   %edx
810035c4:	50                   	push   %eax
810035c5:	ff 75 08             	push   0x8(%ebp)
810035c8:	e8 3f 02 00 00       	call   8100380c <_fstat_r>
810035cd:	83 c4 10             	add    $0x10,%esp
810035d0:	85 c0                	test   %eax,%eax
810035d2:	79 35                	jns    81003609 <__swhatbuf_r+0x6d>
810035d4:	8b 45 14             	mov    0x14(%ebp),%eax
810035d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810035dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810035e0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810035e4:	98                   	cwtl   
810035e5:	25 80 00 00 00       	and    $0x80,%eax
810035ea:	85 c0                	test   %eax,%eax
810035ec:	74 0b                	je     810035f9 <__swhatbuf_r+0x5d>
810035ee:	8b 45 10             	mov    0x10(%ebp),%eax
810035f1:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810035f7:	eb 09                	jmp    81003602 <__swhatbuf_r+0x66>
810035f9:	8b 45 10             	mov    0x10(%ebp),%eax
810035fc:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003602:	b8 00 00 00 00       	mov    $0x0,%eax
81003607:	eb 24                	jmp    8100362d <__swhatbuf_r+0x91>
81003609:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100360c:	25 00 f0 00 00       	and    $0xf000,%eax
81003611:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003616:	0f 94 c0             	sete   %al
81003619:	0f b6 d0             	movzbl %al,%edx
8100361c:	8b 45 14             	mov    0x14(%ebp),%eax
8100361f:	89 10                	mov    %edx,(%eax)
81003621:	8b 45 10             	mov    0x10(%ebp),%eax
81003624:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100362a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100362d:	c9                   	leave  
8100362e:	c3                   	ret    

8100362f <_read_r>:
8100362f:	55                   	push   %ebp
81003630:	89 e5                	mov    %esp,%ebp
81003632:	83 ec 18             	sub    $0x18,%esp
81003635:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
8100363c:	00 00 00 
8100363f:	83 ec 04             	sub    $0x4,%esp
81003642:	ff 75 14             	push   0x14(%ebp)
81003645:	ff 75 10             	push   0x10(%ebp)
81003648:	ff 75 0c             	push   0xc(%ebp)
8100364b:	e8 b4 cb ff ff       	call   81000204 <read>
81003650:	83 c4 10             	add    $0x10,%esp
81003653:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003656:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100365a:	75 14                	jne    81003670 <_read_r+0x41>
8100365c:	a1 8c 43 00 81       	mov    0x8100438c,%eax
81003661:	85 c0                	test   %eax,%eax
81003663:	74 0b                	je     81003670 <_read_r+0x41>
81003665:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
8100366b:	8b 45 08             	mov    0x8(%ebp),%eax
8100366e:	89 10                	mov    %edx,(%eax)
81003670:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003673:	c9                   	leave  
81003674:	c3                   	ret    

81003675 <cleanup_glue>:
81003675:	55                   	push   %ebp
81003676:	89 e5                	mov    %esp,%ebp
81003678:	83 ec 08             	sub    $0x8,%esp
8100367b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100367e:	8b 00                	mov    (%eax),%eax
81003680:	85 c0                	test   %eax,%eax
81003682:	74 14                	je     81003698 <cleanup_glue+0x23>
81003684:	8b 45 0c             	mov    0xc(%ebp),%eax
81003687:	8b 00                	mov    (%eax),%eax
81003689:	83 ec 08             	sub    $0x8,%esp
8100368c:	50                   	push   %eax
8100368d:	ff 75 08             	push   0x8(%ebp)
81003690:	e8 e0 ff ff ff       	call   81003675 <cleanup_glue>
81003695:	83 c4 10             	add    $0x10,%esp
81003698:	83 ec 08             	sub    $0x8,%esp
8100369b:	ff 75 0c             	push   0xc(%ebp)
8100369e:	ff 75 08             	push   0x8(%ebp)
810036a1:	e8 87 f8 ff ff       	call   81002f2d <_free_r>
810036a6:	83 c4 10             	add    $0x10,%esp
810036a9:	90                   	nop
810036aa:	c9                   	leave  
810036ab:	c3                   	ret    

810036ac <_reclaim_reent>:
810036ac:	55                   	push   %ebp
810036ad:	89 e5                	mov    %esp,%ebp
810036af:	83 ec 28             	sub    $0x28,%esp
810036b2:	a1 e4 3c 00 81       	mov    0x81003ce4,%eax
810036b7:	39 45 08             	cmp    %eax,0x8(%ebp)
810036ba:	0f 84 49 01 00 00    	je     81003809 <_reclaim_reent+0x15d>
810036c0:	8b 45 08             	mov    0x8(%ebp),%eax
810036c3:	8b 40 4c             	mov    0x4c(%eax),%eax
810036c6:	85 c0                	test   %eax,%eax
810036c8:	74 64                	je     8100372e <_reclaim_reent+0x82>
810036ca:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810036d1:	eb 3e                	jmp    81003711 <_reclaim_reent+0x65>
810036d3:	8b 45 08             	mov    0x8(%ebp),%eax
810036d6:	8b 50 4c             	mov    0x4c(%eax),%edx
810036d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036dc:	c1 e0 02             	shl    $0x2,%eax
810036df:	01 d0                	add    %edx,%eax
810036e1:	8b 00                	mov    (%eax),%eax
810036e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810036e6:	eb 1f                	jmp    81003707 <_reclaim_reent+0x5b>
810036e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036eb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810036ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036f1:	8b 00                	mov    (%eax),%eax
810036f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810036f6:	83 ec 08             	sub    $0x8,%esp
810036f9:	ff 75 e8             	push   -0x18(%ebp)
810036fc:	ff 75 08             	push   0x8(%ebp)
810036ff:	e8 29 f8 ff ff       	call   81002f2d <_free_r>
81003704:	83 c4 10             	add    $0x10,%esp
81003707:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100370b:	75 db                	jne    810036e8 <_reclaim_reent+0x3c>
8100370d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003711:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003714:	83 f8 1f             	cmp    $0x1f,%eax
81003717:	76 ba                	jbe    810036d3 <_reclaim_reent+0x27>
81003719:	8b 45 08             	mov    0x8(%ebp),%eax
8100371c:	8b 40 4c             	mov    0x4c(%eax),%eax
8100371f:	83 ec 08             	sub    $0x8,%esp
81003722:	50                   	push   %eax
81003723:	ff 75 08             	push   0x8(%ebp)
81003726:	e8 02 f8 ff ff       	call   81002f2d <_free_r>
8100372b:	83 c4 10             	add    $0x10,%esp
8100372e:	8b 45 08             	mov    0x8(%ebp),%eax
81003731:	8b 40 40             	mov    0x40(%eax),%eax
81003734:	85 c0                	test   %eax,%eax
81003736:	74 15                	je     8100374d <_reclaim_reent+0xa1>
81003738:	8b 45 08             	mov    0x8(%ebp),%eax
8100373b:	8b 40 40             	mov    0x40(%eax),%eax
8100373e:	83 ec 08             	sub    $0x8,%esp
81003741:	50                   	push   %eax
81003742:	ff 75 08             	push   0x8(%ebp)
81003745:	e8 e3 f7 ff ff       	call   81002f2d <_free_r>
8100374a:	83 c4 10             	add    $0x10,%esp
8100374d:	8b 45 08             	mov    0x8(%ebp),%eax
81003750:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003756:	85 c0                	test   %eax,%eax
81003758:	74 50                	je     810037aa <_reclaim_reent+0xfe>
8100375a:	8b 45 08             	mov    0x8(%ebp),%eax
8100375d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003763:	8b 55 08             	mov    0x8(%ebp),%edx
81003766:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100376c:	39 d0                	cmp    %edx,%eax
8100376e:	74 3a                	je     810037aa <_reclaim_reent+0xfe>
81003770:	8b 45 08             	mov    0x8(%ebp),%eax
81003773:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003779:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100377c:	eb 1f                	jmp    8100379d <_reclaim_reent+0xf1>
8100377e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003781:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003784:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003787:	8b 00                	mov    (%eax),%eax
81003789:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100378c:	83 ec 08             	sub    $0x8,%esp
8100378f:	ff 75 e4             	push   -0x1c(%ebp)
81003792:	ff 75 08             	push   0x8(%ebp)
81003795:	e8 93 f7 ff ff       	call   81002f2d <_free_r>
8100379a:	83 c4 10             	add    $0x10,%esp
8100379d:	8b 45 08             	mov    0x8(%ebp),%eax
810037a0:	05 4c 01 00 00       	add    $0x14c,%eax
810037a5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810037a8:	75 d4                	jne    8100377e <_reclaim_reent+0xd2>
810037aa:	8b 45 08             	mov    0x8(%ebp),%eax
810037ad:	8b 40 54             	mov    0x54(%eax),%eax
810037b0:	85 c0                	test   %eax,%eax
810037b2:	74 15                	je     810037c9 <_reclaim_reent+0x11d>
810037b4:	8b 45 08             	mov    0x8(%ebp),%eax
810037b7:	8b 40 54             	mov    0x54(%eax),%eax
810037ba:	83 ec 08             	sub    $0x8,%esp
810037bd:	50                   	push   %eax
810037be:	ff 75 08             	push   0x8(%ebp)
810037c1:	e8 67 f7 ff ff       	call   81002f2d <_free_r>
810037c6:	83 c4 10             	add    $0x10,%esp
810037c9:	8b 45 08             	mov    0x8(%ebp),%eax
810037cc:	8b 40 38             	mov    0x38(%eax),%eax
810037cf:	85 c0                	test   %eax,%eax
810037d1:	74 36                	je     81003809 <_reclaim_reent+0x15d>
810037d3:	8b 45 08             	mov    0x8(%ebp),%eax
810037d6:	8b 40 3c             	mov    0x3c(%eax),%eax
810037d9:	83 ec 0c             	sub    $0xc,%esp
810037dc:	ff 75 08             	push   0x8(%ebp)
810037df:	ff d0                	call   *%eax
810037e1:	83 c4 10             	add    $0x10,%esp
810037e4:	8b 45 08             	mov    0x8(%ebp),%eax
810037e7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810037ed:	85 c0                	test   %eax,%eax
810037ef:	74 18                	je     81003809 <_reclaim_reent+0x15d>
810037f1:	8b 45 08             	mov    0x8(%ebp),%eax
810037f4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810037fa:	83 ec 08             	sub    $0x8,%esp
810037fd:	50                   	push   %eax
810037fe:	ff 75 08             	push   0x8(%ebp)
81003801:	e8 6f fe ff ff       	call   81003675 <cleanup_glue>
81003806:	83 c4 10             	add    $0x10,%esp
81003809:	90                   	nop
8100380a:	c9                   	leave  
8100380b:	c3                   	ret    

8100380c <_fstat_r>:
8100380c:	55                   	push   %ebp
8100380d:	89 e5                	mov    %esp,%ebp
8100380f:	83 ec 18             	sub    $0x18,%esp
81003812:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
81003819:	00 00 00 
8100381c:	83 ec 08             	sub    $0x8,%esp
8100381f:	ff 75 10             	push   0x10(%ebp)
81003822:	ff 75 0c             	push   0xc(%ebp)
81003825:	e8 a3 ca ff ff       	call   810002cd <fstat>
8100382a:	83 c4 10             	add    $0x10,%esp
8100382d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003830:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003834:	75 14                	jne    8100384a <_fstat_r+0x3e>
81003836:	a1 8c 43 00 81       	mov    0x8100438c,%eax
8100383b:	85 c0                	test   %eax,%eax
8100383d:	74 0b                	je     8100384a <_fstat_r+0x3e>
8100383f:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
81003845:	8b 45 08             	mov    0x8(%ebp),%eax
81003848:	89 10                	mov    %edx,(%eax)
8100384a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100384d:	c9                   	leave  
8100384e:	c3                   	ret    

8100384f <_isatty_r>:
8100384f:	55                   	push   %ebp
81003850:	89 e5                	mov    %esp,%ebp
81003852:	83 ec 18             	sub    $0x18,%esp
81003855:	c7 05 8c 43 00 81 00 	movl   $0x0,0x8100438c
8100385c:	00 00 00 
8100385f:	83 ec 0c             	sub    $0xc,%esp
81003862:	ff 75 0c             	push   0xc(%ebp)
81003865:	e8 42 ca ff ff       	call   810002ac <isatty>
8100386a:	83 c4 10             	add    $0x10,%esp
8100386d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003870:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003874:	75 14                	jne    8100388a <_isatty_r+0x3b>
81003876:	a1 8c 43 00 81       	mov    0x8100438c,%eax
8100387b:	85 c0                	test   %eax,%eax
8100387d:	74 0b                	je     8100388a <_isatty_r+0x3b>
8100387f:	8b 15 8c 43 00 81    	mov    0x8100438c,%edx
81003885:	8b 45 08             	mov    0x8(%ebp),%eax
81003888:	89 10                	mov    %edx,(%eax)
8100388a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100388d:	c9                   	leave  
8100388e:	c3                   	ret    
