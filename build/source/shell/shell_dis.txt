
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000045

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00003fb0 memsz 0x00004230 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000374f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000000e  81003750  81003750  00004750  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  81003760  81003760  00004760  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000270  81003fc0  81003fc0  00004fb0  2**5
                  ALLOC
  4 .debug_info   00010681  00000000  00000000  00004fb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00003c89  00000000  00000000  00015631  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000438  00000000  00000000  000192c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000025d0  00000000  00000000  000196f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000de3  00000000  00000000  0001bcc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000ab4  00000000  00000000  0001caab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0001d55f  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000be0  00000000  00000000  0001d5a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000022  00000000  00000000  0001e180  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81003fc0 l     O .bss	00000200 cmd_buf
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
81003760 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000556 l       .text	00000000 L5
8100058e l       .text	00000000 L15
81000560 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
81000599 l     F .text	000000ad std
81000646 l     F .text	0000001b stdin_init
81000661 l     F .text	0000001b stdout_init
8100067c l     F .text	0000001b stderr_init
810041c0 l     O .bss	00000004 __sfp_recursive_mutex
810041c4 l     O .bss	00000004 __sinit_recursive_mutex
8100093f l     F .text	0000000a __fp_lock
81000949 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
81000f0c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001a5d l       .text	00000000 L20
81001a14 l       .text	00000000 L5
81001a5a l       .text	00000000 L15
81001a20 l       .text	00000000 L8
81001a41 l       .text	00000000 L9
81001a50 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81004228 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
810024ab l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100370f g     F .text	00000040 _isatty_r
81003535 g     F .text	00000037 cleanup_glue
810003a7 g     F .text	000000d6 _puts_r
81003329 g     F .text	00000046 _lseek_r
8100018e g     F .text	0000001b yield
810027c2 g     F .text	0000004a __sseek
8100088e g     F .text	00000099 __sinit
81000697 g     F .text	0000006f __sfmoreglue
81001bcb g     F .text	00000006 __malloc_unlock
81001ab0 g       .text	00000000 memmove
81000874 g     F .text	0000001a _cleanup
810036cc g     F .text	00000043 _fstat_r
8100422c g     O .bss	00000004 errno
810004fc g     F .text	0000001d __srget
8100275d g     F .text	0000000a __seofread
8100038b g     F .text	0000001c gets
81000161 g     F .text	0000002d execve
81000103 g     F .text	0000001b getpid
81001a68 g       .text	00000000 memcpy
81000853 g     F .text	00000021 _cleanup_r
8100047d g     F .text	0000001c puts
81000278 g     F .text	00000021 isatty
810041e0 g     O .bss	00000004 __malloc_top_pad
81003fc0 g       .bss	00000000 __bss_start__
8100099b g     F .text	0000049e __sfvwrite_r
810026d9 g     F .text	00000040 _sbrk_r
810034ef g     F .text	00000046 _read_r
81002a12 g     F .text	00000107 _fclose_r
81002db4 g     F .text	00000039 fflush
810041e4 g     O .bss	00000004 __malloc_max_sbrked_mem
8100024b g     F .text	0000002d lseek
81003758 g     O .rodata	00000004 _global_impure_ptr
81001bd1 g     F .text	000008da _realloc_r
81000953 g     F .text	00000024 __fp_lock_all
8100356c g     F .text	00000160 _reclaim_reent
810001fd g     F .text	0000002d write
81000299 g     F .text	00000027 fstat
8100008d g     F .text	0000004c sys_call
81000927 g     F .text	00000006 __sfp_lock_acquire
810019d0 g       .text	00000000 memchr
81004230 g       .bss	00000000 __bss_end__
81002ded g     F .text	000003db _free_r
81000499 g     F .text	00000063 __srget_r
81003fac g     O .data	00000004 __malloc_sbrk_base
81000045 g       .text	00000000 _start
810002e1 g     F .text	000000aa _gets_r
810001d0 g     F .text	0000002d read
81004200 g     O .bss	00000028 __malloc_current_mallinfo
810029d2 g     F .text	00000040 _close_r
81000146 g     F .text	0000001b fork
81002877 g     F .text	0000015b __swsetup_r
81000706 g     F .text	0000014d __sfp
81003ba0 g     O .data	00000408 __malloc_av_
81000939 g     F .text	00000006 __sinit_lock_release
81002719 g     F .text	00000044 __sread
81001bc5 g     F .text	00000006 __malloc_lock
810002c0 g     F .text	00000021 sbrk
81002d5c g     F .text	00000058 _fflush_r
81000055 g     F .text	00000038 cstart
81001b3d g       .text	00000000 memset
81000000 g     F .text	00000045 main
810041e8 g     O .bss	00000004 __malloc_max_total_mem
8100280c g     F .text	00000025 __sclose
81002b19 g     F .text	0000001d fclose
8100119f g     F .text	00000822 _malloc_r
81000e39 g     F .text	00000068 _fwalk
810031c8 g     F .text	00000161 _malloc_trim_r
81002831 g     F .text	00000046 _write_r
81003b84 g     O .data	00000004 _impure_ptr
81002b36 g     F .text	00000226 __sflush_r
810024d8 g     F .text	00000201 __srefill_r
81000977 g     F .text	00000024 __fp_unlock_all
8100011e g     F .text	00000028 print_msg
8100345c g     F .text	00000093 __swhatbuf_r
81002767 g     F .text	0000005b __swrite
81003fa8 g     O .data	00000004 __malloc_trim_threshold
81000ea1 g     F .text	0000006b _fwalk_reent
8100092d g     F .text	00000006 __sfp_lock_release
8100336f g     F .text	000000ed __smakebuf_r
81000520 g       .text	00000000 strlen
810001a9 g     F .text	00000027 open
810000d9 g     F .text	0000002a msleep
8100022a g     F .text	00000021 close
81000933 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
#include "lib_syscall.h"
#include <stdio.h>

static char cmd_buf[512];

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp
    if (pid > 0) printf("parent pid=%d\n", pid);
    else printf("chiled pid=%d\n", pid);

#endif

    open("tty:0", 0);
81000011:	83 ec 08             	sub    $0x8,%esp
81000014:	6a 00                	push   $0x0
81000016:	68 50 37 00 81       	push   $0x81003750
8100001b:	e8 89 01 00 00       	call   810001a9 <open>
81000020:	83 c4 10             	add    $0x10,%esp
    // printf("hello from shell\n");

    for (;;) {
        // printf("shell pid=%d\n", getpid());
        // msleep(1000);
        gets(cmd_buf);
81000023:	83 ec 0c             	sub    $0xc,%esp
81000026:	68 c0 3f 00 81       	push   $0x81003fc0
8100002b:	e8 5b 03 00 00       	call   8100038b <gets>
81000030:	83 c4 10             	add    $0x10,%esp
        puts(cmd_buf);
81000033:	83 ec 0c             	sub    $0xc,%esp
81000036:	68 c0 3f 00 81       	push   $0x81003fc0
8100003b:	e8 3d 04 00 00       	call   8100047d <puts>
81000040:	83 c4 10             	add    $0x10,%esp
        gets(cmd_buf);
81000043:	eb de                	jmp    81000023 <main+0x23>

81000045 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000045:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000048:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100004a:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100004c:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100004e:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000050:	e9 00 00 00 00       	jmp    81000055 <cstart>

81000055 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000055:	55                   	push   %ebp
81000056:	89 e5                	mov    %esp,%ebp
81000058:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100005b:	c7 45 f4 c0 3f 00 81 	movl   $0x81003fc0,-0xc(%ebp)
    while (start < __bss_end__) {
81000062:	eb 0c                	jmp    81000070 <cstart+0x1b>
        *(start++) = 0;
81000064:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000067:	8d 50 01             	lea    0x1(%eax),%edx
8100006a:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100006d:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000070:	81 7d f4 30 42 00 81 	cmpl   $0x81004230,-0xc(%ebp)
81000077:	72 eb                	jb     81000064 <cstart+0xf>
    }
    
    main(argc, argv);
81000079:	83 ec 08             	sub    $0x8,%esp
8100007c:	ff 75 0c             	push   0xc(%ebp)
8100007f:	ff 75 08             	push   0x8(%ebp)
81000082:	e8 79 ff ff ff       	call   81000000 <main>
81000087:	83 c4 10             	add    $0x10,%esp
}
8100008a:	90                   	nop
8100008b:	c9                   	leave  
8100008c:	c3                   	ret    

8100008d <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
8100008d:	55                   	push   %ebp
8100008e:	89 e5                	mov    %esp,%ebp
81000090:	57                   	push   %edi
81000091:	56                   	push   %esi
81000092:	53                   	push   %ebx
81000093:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000096:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100009d:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810000a4:	8b 45 08             	mov    0x8(%ebp),%eax
810000a7:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810000aa:	8b 55 08             	mov    0x8(%ebp),%edx
810000ad:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810000b0:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000b3:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810000b6:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000b9:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810000bc:	8b 75 08             	mov    0x8(%ebp),%esi
810000bf:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810000c1:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000c4:	50                   	push   %eax
810000c5:	52                   	push   %edx
810000c6:	51                   	push   %ecx
810000c7:	53                   	push   %ebx
810000c8:	56                   	push   %esi
810000c9:	ff 1f                	lcall  *(%edi)
810000cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810000ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810000d1:	83 c4 10             	add    $0x10,%esp
810000d4:	5b                   	pop    %ebx
810000d5:	5e                   	pop    %esi
810000d6:	5f                   	pop    %edi
810000d7:	5d                   	pop    %ebp
810000d8:	c3                   	ret    

810000d9 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810000d9:	55                   	push   %ebp
810000da:	89 e5                	mov    %esp,%ebp
810000dc:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810000df:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810000e3:	7e 1b                	jle    81000100 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810000e5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810000ec:	8b 45 08             	mov    0x8(%ebp),%eax
810000ef:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810000f2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810000f5:	50                   	push   %eax
810000f6:	e8 92 ff ff ff       	call   8100008d <sys_call>
810000fb:	83 c4 04             	add    $0x4,%esp
810000fe:	eb 01                	jmp    81000101 <msleep+0x28>
    if (ms <= 0) return;
81000100:	90                   	nop

}
81000101:	c9                   	leave  
81000102:	c3                   	ret    

81000103 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000103:	55                   	push   %ebp
81000104:	89 e5                	mov    %esp,%ebp
81000106:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000109:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000110:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000113:	50                   	push   %eax
81000114:	e8 74 ff ff ff       	call   8100008d <sys_call>
81000119:	83 c4 04             	add    $0x4,%esp
}
8100011c:	c9                   	leave  
8100011d:	c3                   	ret    

8100011e <print_msg>:

void print_msg(const char *fmt, int arg) {
8100011e:	55                   	push   %ebp
8100011f:	89 e5                	mov    %esp,%ebp
81000121:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000124:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100012b:	8b 45 08             	mov    0x8(%ebp),%eax
8100012e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000131:	8b 45 0c             	mov    0xc(%ebp),%eax
81000134:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000137:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100013a:	50                   	push   %eax
8100013b:	e8 4d ff ff ff       	call   8100008d <sys_call>
81000140:	83 c4 04             	add    $0x4,%esp
}
81000143:	90                   	nop
81000144:	c9                   	leave  
81000145:	c3                   	ret    

81000146 <fork>:

int fork (void) {
81000146:	55                   	push   %ebp
81000147:	89 e5                	mov    %esp,%ebp
81000149:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8100014c:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000153:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000156:	50                   	push   %eax
81000157:	e8 31 ff ff ff       	call   8100008d <sys_call>
8100015c:	83 c4 04             	add    $0x4,%esp
}
8100015f:	c9                   	leave  
81000160:	c3                   	ret    

81000161 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000161:	55                   	push   %ebp
81000162:	89 e5                	mov    %esp,%ebp
81000164:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000167:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100016e:	8b 45 08             	mov    0x8(%ebp),%eax
81000171:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000174:	8b 45 0c             	mov    0xc(%ebp),%eax
81000177:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8100017a:	8b 45 10             	mov    0x10(%ebp),%eax
8100017d:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000180:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000183:	50                   	push   %eax
81000184:	e8 04 ff ff ff       	call   8100008d <sys_call>
81000189:	83 c4 04             	add    $0x4,%esp
}
8100018c:	c9                   	leave  
8100018d:	c3                   	ret    

8100018e <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8100018e:	55                   	push   %ebp
8100018f:	89 e5                	mov    %esp,%ebp
81000191:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000194:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8100019b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100019e:	50                   	push   %eax
8100019f:	e8 e9 fe ff ff       	call   8100008d <sys_call>
810001a4:	83 c4 04             	add    $0x4,%esp
}
810001a7:	c9                   	leave  
810001a8:	c3                   	ret    

810001a9 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810001a9:	55                   	push   %ebp
810001aa:	89 e5                	mov    %esp,%ebp
810001ac:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810001af:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810001b6:	8b 45 08             	mov    0x8(%ebp),%eax
810001b9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810001bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810001bf:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810001c2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001c5:	50                   	push   %eax
810001c6:	e8 c2 fe ff ff       	call   8100008d <sys_call>
810001cb:	83 c4 04             	add    $0x4,%esp
}
810001ce:	c9                   	leave  
810001cf:	c3                   	ret    

810001d0 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810001d0:	55                   	push   %ebp
810001d1:	89 e5                	mov    %esp,%ebp
810001d3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810001d6:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810001dd:	8b 45 08             	mov    0x8(%ebp),%eax
810001e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810001e3:	8b 45 0c             	mov    0xc(%ebp),%eax
810001e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810001e9:	8b 45 10             	mov    0x10(%ebp),%eax
810001ec:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810001ef:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001f2:	50                   	push   %eax
810001f3:	e8 95 fe ff ff       	call   8100008d <sys_call>
810001f8:	83 c4 04             	add    $0x4,%esp
}
810001fb:	c9                   	leave  
810001fc:	c3                   	ret    

810001fd <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810001fd:	55                   	push   %ebp
810001fe:	89 e5                	mov    %esp,%ebp
81000200:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000203:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
8100020a:	8b 45 08             	mov    0x8(%ebp),%eax
8100020d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000210:	8b 45 0c             	mov    0xc(%ebp),%eax
81000213:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000216:	8b 45 10             	mov    0x10(%ebp),%eax
81000219:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100021c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100021f:	50                   	push   %eax
81000220:	e8 68 fe ff ff       	call   8100008d <sys_call>
81000225:	83 c4 04             	add    $0x4,%esp
}
81000228:	c9                   	leave  
81000229:	c3                   	ret    

8100022a <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
8100022a:	55                   	push   %ebp
8100022b:	89 e5                	mov    %esp,%ebp
8100022d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000230:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000237:	8b 45 08             	mov    0x8(%ebp),%eax
8100023a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100023d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000240:	50                   	push   %eax
81000241:	e8 47 fe ff ff       	call   8100008d <sys_call>
81000246:	83 c4 04             	add    $0x4,%esp
}
81000249:	c9                   	leave  
8100024a:	c3                   	ret    

8100024b <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000251:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000258:	8b 45 08             	mov    0x8(%ebp),%eax
8100025b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8100025e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000264:	8b 45 10             	mov    0x10(%ebp),%eax
81000267:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100026a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100026d:	50                   	push   %eax
8100026e:	e8 1a fe ff ff       	call   8100008d <sys_call>
81000273:	83 c4 04             	add    $0x4,%esp
}
81000276:	c9                   	leave  
81000277:	c3                   	ret    

81000278 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000278:	55                   	push   %ebp
81000279:	89 e5                	mov    %esp,%ebp
8100027b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8100027e:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000285:	8b 45 08             	mov    0x8(%ebp),%eax
81000288:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100028b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100028e:	50                   	push   %eax
8100028f:	e8 f9 fd ff ff       	call   8100008d <sys_call>
81000294:	83 c4 04             	add    $0x4,%esp
}
81000297:	c9                   	leave  
81000298:	c3                   	ret    

81000299 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000299:	55                   	push   %ebp
8100029a:	89 e5                	mov    %esp,%ebp
8100029c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100029f:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810002a6:	8b 45 08             	mov    0x8(%ebp),%eax
810002a9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810002ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810002af:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002b2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002b5:	50                   	push   %eax
810002b6:	e8 d2 fd ff ff       	call   8100008d <sys_call>
810002bb:	83 c4 04             	add    $0x4,%esp
}
810002be:	c9                   	leave  
810002bf:	c3                   	ret    

810002c0 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810002c0:	55                   	push   %ebp
810002c1:	89 e5                	mov    %esp,%ebp
810002c3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810002c6:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810002cd:	8b 45 08             	mov    0x8(%ebp),%eax
810002d0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810002d3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002d6:	50                   	push   %eax
810002d7:	e8 b1 fd ff ff       	call   8100008d <sys_call>
810002dc:	83 c4 04             	add    $0x4,%esp
810002df:	c9                   	leave  
810002e0:	c3                   	ret    

810002e1 <_gets_r>:
810002e1:	55                   	push   %ebp
810002e2:	89 e5                	mov    %esp,%ebp
810002e4:	56                   	push   %esi
810002e5:	53                   	push   %ebx
810002e6:	83 ec 10             	sub    $0x10,%esp
810002e9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810002ec:	8b 45 08             	mov    0x8(%ebp),%eax
810002ef:	8b 40 04             	mov    0x4(%eax),%eax
810002f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002f5:	8b 45 08             	mov    0x8(%ebp),%eax
810002f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002fb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002ff:	74 34                	je     81000335 <_gets_r+0x54>
81000301:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000304:	8b 40 38             	mov    0x38(%eax),%eax
81000307:	85 c0                	test   %eax,%eax
81000309:	75 2a                	jne    81000335 <_gets_r+0x54>
8100030b:	83 ec 0c             	sub    $0xc,%esp
8100030e:	ff 75 f0             	push   -0x10(%ebp)
81000311:	e8 78 05 00 00       	call   8100088e <__sinit>
81000316:	83 c4 10             	add    $0x10,%esp
81000319:	eb 1a                	jmp    81000335 <_gets_r+0x54>
8100031b:	83 fe ff             	cmp    $0xffffffff,%esi
8100031e:	75 0c                	jne    8100032c <_gets_r+0x4b>
81000320:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
81000323:	75 58                	jne    8100037d <_gets_r+0x9c>
81000325:	b8 00 00 00 00       	mov    $0x0,%eax
8100032a:	eb 58                	jmp    81000384 <_gets_r+0xa3>
8100032c:	89 d8                	mov    %ebx,%eax
8100032e:	8d 58 01             	lea    0x1(%eax),%ebx
81000331:	89 f2                	mov    %esi,%edx
81000333:	88 10                	mov    %dl,(%eax)
81000335:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000338:	8b 40 04             	mov    0x4(%eax),%eax
8100033b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100033e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000341:	89 50 04             	mov    %edx,0x4(%eax)
81000344:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000347:	8b 40 04             	mov    0x4(%eax),%eax
8100034a:	85 c0                	test   %eax,%eax
8100034c:	79 13                	jns    81000361 <_gets_r+0x80>
8100034e:	83 ec 08             	sub    $0x8,%esp
81000351:	ff 75 f4             	push   -0xc(%ebp)
81000354:	ff 75 08             	push   0x8(%ebp)
81000357:	e8 3d 01 00 00       	call   81000499 <__srget_r>
8100035c:	83 c4 10             	add    $0x10,%esp
8100035f:	eb 13                	jmp    81000374 <_gets_r+0x93>
81000361:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000364:	8b 00                	mov    (%eax),%eax
81000366:	8d 48 01             	lea    0x1(%eax),%ecx
81000369:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100036c:	89 0a                	mov    %ecx,(%edx)
8100036e:	0f b6 00             	movzbl (%eax),%eax
81000371:	0f b6 c0             	movzbl %al,%eax
81000374:	89 c6                	mov    %eax,%esi
81000376:	83 fe 0a             	cmp    $0xa,%esi
81000379:	75 a0                	jne    8100031b <_gets_r+0x3a>
8100037b:	eb 01                	jmp    8100037e <_gets_r+0x9d>
8100037d:	90                   	nop
8100037e:	c6 03 00             	movb   $0x0,(%ebx)
81000381:	8b 45 0c             	mov    0xc(%ebp),%eax
81000384:	8d 65 f8             	lea    -0x8(%ebp),%esp
81000387:	5b                   	pop    %ebx
81000388:	5e                   	pop    %esi
81000389:	5d                   	pop    %ebp
8100038a:	c3                   	ret    

8100038b <gets>:
8100038b:	55                   	push   %ebp
8100038c:	89 e5                	mov    %esp,%ebp
8100038e:	83 ec 08             	sub    $0x8,%esp
81000391:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81000396:	83 ec 08             	sub    $0x8,%esp
81000399:	ff 75 08             	push   0x8(%ebp)
8100039c:	50                   	push   %eax
8100039d:	e8 3f ff ff ff       	call   810002e1 <_gets_r>
810003a2:	83 c4 10             	add    $0x10,%esp
810003a5:	c9                   	leave  
810003a6:	c3                   	ret    

810003a7 <_puts_r>:
810003a7:	55                   	push   %ebp
810003a8:	89 e5                	mov    %esp,%ebp
810003aa:	83 ec 38             	sub    $0x38,%esp
810003ad:	83 ec 0c             	sub    $0xc,%esp
810003b0:	ff 75 0c             	push   0xc(%ebp)
810003b3:	e8 68 01 00 00       	call   81000520 <strlen>
810003b8:	83 c4 10             	add    $0x10,%esp
810003bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810003be:	8b 45 0c             	mov    0xc(%ebp),%eax
810003c1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810003c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003c7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810003ca:	c7 45 d4 5c 37 00 81 	movl   $0x8100375c,-0x2c(%ebp)
810003d1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810003d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003db:	83 c0 01             	add    $0x1,%eax
810003de:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810003e1:	8d 45 cc             	lea    -0x34(%ebp),%eax
810003e4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810003e7:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810003ee:	8b 45 08             	mov    0x8(%ebp),%eax
810003f1:	8b 40 08             	mov    0x8(%eax),%eax
810003f4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003f7:	8b 45 08             	mov    0x8(%ebp),%eax
810003fa:	89 45 ec             	mov    %eax,-0x14(%ebp)
810003fd:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000401:	74 18                	je     8100041b <_puts_r+0x74>
81000403:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000406:	8b 40 38             	mov    0x38(%eax),%eax
81000409:	85 c0                	test   %eax,%eax
8100040b:	75 0e                	jne    8100041b <_puts_r+0x74>
8100040d:	83 ec 0c             	sub    $0xc,%esp
81000410:	ff 75 ec             	push   -0x14(%ebp)
81000413:	e8 76 04 00 00       	call   8100088e <__sinit>
81000418:	83 c4 10             	add    $0x10,%esp
8100041b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100041e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000422:	98                   	cwtl   
81000423:	25 00 20 00 00       	and    $0x2000,%eax
81000428:	85 c0                	test   %eax,%eax
8100042a:	75 24                	jne    81000450 <_puts_r+0xa9>
8100042c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100042f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000433:	80 cc 20             	or     $0x20,%ah
81000436:	89 c2                	mov    %eax,%edx
81000438:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100043b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100043f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000442:	8b 40 64             	mov    0x64(%eax),%eax
81000445:	80 e4 df             	and    $0xdf,%ah
81000448:	89 c2                	mov    %eax,%edx
8100044a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100044d:	89 50 64             	mov    %edx,0x64(%eax)
81000450:	83 ec 04             	sub    $0x4,%esp
81000453:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000456:	50                   	push   %eax
81000457:	ff 75 f0             	push   -0x10(%ebp)
8100045a:	ff 75 08             	push   0x8(%ebp)
8100045d:	e8 39 05 00 00       	call   8100099b <__sfvwrite_r>
81000462:	83 c4 10             	add    $0x10,%esp
81000465:	85 c0                	test   %eax,%eax
81000467:	74 07                	je     81000470 <_puts_r+0xc9>
81000469:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100046e:	eb 05                	jmp    81000475 <_puts_r+0xce>
81000470:	b8 0a 00 00 00       	mov    $0xa,%eax
81000475:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000478:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100047b:	c9                   	leave  
8100047c:	c3                   	ret    

8100047d <puts>:
8100047d:	55                   	push   %ebp
8100047e:	89 e5                	mov    %esp,%ebp
81000480:	83 ec 08             	sub    $0x8,%esp
81000483:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81000488:	83 ec 08             	sub    $0x8,%esp
8100048b:	ff 75 08             	push   0x8(%ebp)
8100048e:	50                   	push   %eax
8100048f:	e8 13 ff ff ff       	call   810003a7 <_puts_r>
81000494:	83 c4 10             	add    $0x10,%esp
81000497:	c9                   	leave  
81000498:	c3                   	ret    

81000499 <__srget_r>:
81000499:	55                   	push   %ebp
8100049a:	89 e5                	mov    %esp,%ebp
8100049c:	53                   	push   %ebx
8100049d:	83 ec 14             	sub    $0x14,%esp
810004a0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810004a3:	8b 45 08             	mov    0x8(%ebp),%eax
810004a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810004ad:	74 18                	je     810004c7 <__srget_r+0x2e>
810004af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004b2:	8b 40 38             	mov    0x38(%eax),%eax
810004b5:	85 c0                	test   %eax,%eax
810004b7:	75 0e                	jne    810004c7 <__srget_r+0x2e>
810004b9:	83 ec 0c             	sub    $0xc,%esp
810004bc:	ff 75 f4             	push   -0xc(%ebp)
810004bf:	e8 ca 03 00 00       	call   8100088e <__sinit>
810004c4:	83 c4 10             	add    $0x10,%esp
810004c7:	83 ec 08             	sub    $0x8,%esp
810004ca:	53                   	push   %ebx
810004cb:	ff 75 08             	push   0x8(%ebp)
810004ce:	e8 05 20 00 00       	call   810024d8 <__srefill_r>
810004d3:	83 c4 10             	add    $0x10,%esp
810004d6:	85 c0                	test   %eax,%eax
810004d8:	75 18                	jne    810004f2 <__srget_r+0x59>
810004da:	8b 43 04             	mov    0x4(%ebx),%eax
810004dd:	83 e8 01             	sub    $0x1,%eax
810004e0:	89 43 04             	mov    %eax,0x4(%ebx)
810004e3:	8b 03                	mov    (%ebx),%eax
810004e5:	8d 50 01             	lea    0x1(%eax),%edx
810004e8:	89 13                	mov    %edx,(%ebx)
810004ea:	0f b6 00             	movzbl (%eax),%eax
810004ed:	0f b6 c0             	movzbl %al,%eax
810004f0:	eb 05                	jmp    810004f7 <__srget_r+0x5e>
810004f2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810004f7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810004fa:	c9                   	leave  
810004fb:	c3                   	ret    

810004fc <__srget>:
810004fc:	55                   	push   %ebp
810004fd:	89 e5                	mov    %esp,%ebp
810004ff:	83 ec 08             	sub    $0x8,%esp
81000502:	8b 55 08             	mov    0x8(%ebp),%edx
81000505:	a1 84 3b 00 81       	mov    0x81003b84,%eax
8100050a:	83 ec 08             	sub    $0x8,%esp
8100050d:	52                   	push   %edx
8100050e:	50                   	push   %eax
8100050f:	e8 85 ff ff ff       	call   81000499 <__srget_r>
81000514:	83 c4 10             	add    $0x10,%esp
81000517:	c9                   	leave  
81000518:	c3                   	ret    
81000519:	66 90                	xchg   %ax,%ax
8100051b:	66 90                	xchg   %ax,%ax
8100051d:	66 90                	xchg   %ax,%ax
8100051f:	90                   	nop

81000520 <strlen>:
81000520:	55                   	push   %ebp
81000521:	89 e5                	mov    %esp,%ebp
81000523:	57                   	push   %edi
81000524:	8b 55 08             	mov    0x8(%ebp),%edx
81000527:	89 d7                	mov    %edx,%edi
81000529:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100052f:	74 25                	je     81000556 <L5>
81000531:	8a 0f                	mov    (%edi),%cl
81000533:	47                   	inc    %edi
81000534:	84 c9                	test   %cl,%cl
81000536:	74 56                	je     8100058e <L15>
81000538:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100053e:	74 16                	je     81000556 <L5>
81000540:	8a 0f                	mov    (%edi),%cl
81000542:	47                   	inc    %edi
81000543:	84 c9                	test   %cl,%cl
81000545:	74 47                	je     8100058e <L15>
81000547:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100054d:	74 07                	je     81000556 <L5>
8100054f:	8a 0f                	mov    (%edi),%cl
81000551:	47                   	inc    %edi
81000552:	84 c9                	test   %cl,%cl
81000554:	74 38                	je     8100058e <L15>

81000556 <L5>:
81000556:	83 ef 04             	sub    $0x4,%edi
81000559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000560 <L10>:
81000560:	83 c7 04             	add    $0x4,%edi
81000563:	8b 0f                	mov    (%edi),%ecx
81000565:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100056b:	f7 d1                	not    %ecx
8100056d:	21 c8                	and    %ecx,%eax
8100056f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000574:	74 ea                	je     81000560 <L10>
81000576:	f7 d1                	not    %ecx
81000578:	47                   	inc    %edi
81000579:	84 c9                	test   %cl,%cl
8100057b:	74 11                	je     8100058e <L15>
8100057d:	47                   	inc    %edi
8100057e:	c1 e9 08             	shr    $0x8,%ecx
81000581:	84 c9                	test   %cl,%cl
81000583:	74 09                	je     8100058e <L15>
81000585:	47                   	inc    %edi
81000586:	c1 e9 08             	shr    $0x8,%ecx
81000589:	84 c9                	test   %cl,%cl
8100058b:	74 01                	je     8100058e <L15>
8100058d:	47                   	inc    %edi

8100058e <L15>:
8100058e:	29 d7                	sub    %edx,%edi
81000590:	8d 47 ff             	lea    -0x1(%edi),%eax
81000593:	8d 65 fc             	lea    -0x4(%ebp),%esp
81000596:	5f                   	pop    %edi
81000597:	c9                   	leave  
81000598:	c3                   	ret    

81000599 <std>:
81000599:	55                   	push   %ebp
8100059a:	89 e5                	mov    %esp,%ebp
8100059c:	83 ec 08             	sub    $0x8,%esp
8100059f:	8b 45 08             	mov    0x8(%ebp),%eax
810005a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005a8:	8b 45 08             	mov    0x8(%ebp),%eax
810005ab:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810005b2:	8b 45 08             	mov    0x8(%ebp),%eax
810005b5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810005bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810005bf:	89 c2                	mov    %eax,%edx
810005c1:	8b 45 08             	mov    0x8(%ebp),%eax
810005c4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810005c8:	8b 45 08             	mov    0x8(%ebp),%eax
810005cb:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810005d2:	8b 45 10             	mov    0x10(%ebp),%eax
810005d5:	89 c2                	mov    %eax,%edx
810005d7:	8b 45 08             	mov    0x8(%ebp),%eax
810005da:	66 89 50 0e          	mov    %dx,0xe(%eax)
810005de:	8b 45 08             	mov    0x8(%ebp),%eax
810005e1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810005e8:	8b 45 08             	mov    0x8(%ebp),%eax
810005eb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810005f2:	8b 45 08             	mov    0x8(%ebp),%eax
810005f5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810005fc:	8b 45 08             	mov    0x8(%ebp),%eax
810005ff:	83 c0 5c             	add    $0x5c,%eax
81000602:	83 ec 04             	sub    $0x4,%esp
81000605:	6a 08                	push   $0x8
81000607:	6a 00                	push   $0x0
81000609:	50                   	push   %eax
8100060a:	e8 2e 15 00 00       	call   81001b3d <memset>
8100060f:	83 c4 10             	add    $0x10,%esp
81000612:	8b 45 08             	mov    0x8(%ebp),%eax
81000615:	8b 55 08             	mov    0x8(%ebp),%edx
81000618:	89 50 1c             	mov    %edx,0x1c(%eax)
8100061b:	8b 45 08             	mov    0x8(%ebp),%eax
8100061e:	c7 40 20 19 27 00 81 	movl   $0x81002719,0x20(%eax)
81000625:	8b 45 08             	mov    0x8(%ebp),%eax
81000628:	c7 40 24 67 27 00 81 	movl   $0x81002767,0x24(%eax)
8100062f:	8b 45 08             	mov    0x8(%ebp),%eax
81000632:	c7 40 28 c2 27 00 81 	movl   $0x810027c2,0x28(%eax)
81000639:	8b 45 08             	mov    0x8(%ebp),%eax
8100063c:	c7 40 2c 0c 28 00 81 	movl   $0x8100280c,0x2c(%eax)
81000643:	90                   	nop
81000644:	c9                   	leave  
81000645:	c3                   	ret    

81000646 <stdin_init>:
81000646:	55                   	push   %ebp
81000647:	89 e5                	mov    %esp,%ebp
81000649:	83 ec 08             	sub    $0x8,%esp
8100064c:	83 ec 04             	sub    $0x4,%esp
8100064f:	6a 00                	push   $0x0
81000651:	6a 04                	push   $0x4
81000653:	ff 75 08             	push   0x8(%ebp)
81000656:	e8 3e ff ff ff       	call   81000599 <std>
8100065b:	83 c4 10             	add    $0x10,%esp
8100065e:	90                   	nop
8100065f:	c9                   	leave  
81000660:	c3                   	ret    

81000661 <stdout_init>:
81000661:	55                   	push   %ebp
81000662:	89 e5                	mov    %esp,%ebp
81000664:	83 ec 08             	sub    $0x8,%esp
81000667:	83 ec 04             	sub    $0x4,%esp
8100066a:	6a 01                	push   $0x1
8100066c:	6a 09                	push   $0x9
8100066e:	ff 75 08             	push   0x8(%ebp)
81000671:	e8 23 ff ff ff       	call   81000599 <std>
81000676:	83 c4 10             	add    $0x10,%esp
81000679:	90                   	nop
8100067a:	c9                   	leave  
8100067b:	c3                   	ret    

8100067c <stderr_init>:
8100067c:	55                   	push   %ebp
8100067d:	89 e5                	mov    %esp,%ebp
8100067f:	83 ec 08             	sub    $0x8,%esp
81000682:	83 ec 04             	sub    $0x4,%esp
81000685:	6a 02                	push   $0x2
81000687:	6a 12                	push   $0x12
81000689:	ff 75 08             	push   0x8(%ebp)
8100068c:	e8 08 ff ff ff       	call   81000599 <std>
81000691:	83 c4 10             	add    $0x10,%esp
81000694:	90                   	nop
81000695:	c9                   	leave  
81000696:	c3                   	ret    

81000697 <__sfmoreglue>:
81000697:	55                   	push   %ebp
81000698:	89 e5                	mov    %esp,%ebp
8100069a:	53                   	push   %ebx
8100069b:	83 ec 14             	sub    $0x14,%esp
8100069e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006a1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006a4:	6b c0 68             	imul   $0x68,%eax,%eax
810006a7:	83 c0 74             	add    $0x74,%eax
810006aa:	83 ec 08             	sub    $0x8,%esp
810006ad:	50                   	push   %eax
810006ae:	ff 75 08             	push   0x8(%ebp)
810006b1:	e8 e9 0a 00 00       	call   8100119f <_malloc_r>
810006b6:	83 c4 10             	add    $0x10,%esp
810006b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006c0:	75 07                	jne    810006c9 <__sfmoreglue+0x32>
810006c2:	b8 00 00 00 00       	mov    $0x0,%eax
810006c7:	eb 38                	jmp    81000701 <__sfmoreglue+0x6a>
810006c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006cc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006d5:	89 58 04             	mov    %ebx,0x4(%eax)
810006d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006db:	8d 50 0c             	lea    0xc(%eax),%edx
810006de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e1:	89 50 08             	mov    %edx,0x8(%eax)
810006e4:	89 d8                	mov    %ebx,%eax
810006e6:	6b c0 68             	imul   $0x68,%eax,%eax
810006e9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810006ec:	83 c2 0c             	add    $0xc,%edx
810006ef:	83 ec 04             	sub    $0x4,%esp
810006f2:	50                   	push   %eax
810006f3:	6a 00                	push   $0x0
810006f5:	52                   	push   %edx
810006f6:	e8 42 14 00 00       	call   81001b3d <memset>
810006fb:	83 c4 10             	add    $0x10,%esp
810006fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000701:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000704:	c9                   	leave  
81000705:	c3                   	ret    

81000706 <__sfp>:
81000706:	55                   	push   %ebp
81000707:	89 e5                	mov    %esp,%ebp
81000709:	83 ec 18             	sub    $0x18,%esp
8100070c:	e8 16 02 00 00       	call   81000927 <__sfp_lock_acquire>
81000711:	a1 58 37 00 81       	mov    0x81003758,%eax
81000716:	8b 40 38             	mov    0x38(%eax),%eax
81000719:	85 c0                	test   %eax,%eax
8100071b:	75 11                	jne    8100072e <__sfp+0x28>
8100071d:	a1 58 37 00 81       	mov    0x81003758,%eax
81000722:	83 ec 0c             	sub    $0xc,%esp
81000725:	50                   	push   %eax
81000726:	e8 63 01 00 00       	call   8100088e <__sinit>
8100072b:	83 c4 10             	add    $0x10,%esp
8100072e:	a1 58 37 00 81       	mov    0x81003758,%eax
81000733:	05 e0 02 00 00       	add    $0x2e0,%eax
81000738:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100073b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100073e:	8b 40 08             	mov    0x8(%eax),%eax
81000741:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000744:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000747:	8b 40 04             	mov    0x4(%eax),%eax
8100074a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100074d:	eb 10                	jmp    8100075f <__sfp+0x59>
8100074f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000752:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000756:	66 85 c0             	test   %ax,%ax
81000759:	74 58                	je     810007b3 <__sfp+0xad>
8100075b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100075f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000763:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000767:	79 e6                	jns    8100074f <__sfp+0x49>
81000769:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100076c:	8b 00                	mov    (%eax),%eax
8100076e:	85 c0                	test   %eax,%eax
81000770:	75 1e                	jne    81000790 <__sfp+0x8a>
81000772:	83 ec 08             	sub    $0x8,%esp
81000775:	6a 04                	push   $0x4
81000777:	ff 75 08             	push   0x8(%ebp)
8100077a:	e8 18 ff ff ff       	call   81000697 <__sfmoreglue>
8100077f:	83 c4 10             	add    $0x10,%esp
81000782:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000785:	89 02                	mov    %eax,(%edx)
81000787:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100078a:	8b 00                	mov    (%eax),%eax
8100078c:	85 c0                	test   %eax,%eax
8100078e:	74 0a                	je     8100079a <__sfp+0x94>
81000790:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000793:	8b 00                	mov    (%eax),%eax
81000795:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000798:	eb a1                	jmp    8100073b <__sfp+0x35>
8100079a:	90                   	nop
8100079b:	e8 8d 01 00 00       	call   8100092d <__sfp_lock_release>
810007a0:	8b 45 08             	mov    0x8(%ebp),%eax
810007a3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007a9:	b8 00 00 00 00       	mov    $0x0,%eax
810007ae:	e9 9e 00 00 00       	jmp    81000851 <__sfp+0x14b>
810007b3:	90                   	nop
810007b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007b7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810007bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007c0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810007c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007c9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810007d0:	e8 58 01 00 00       	call   8100092d <__sfp_lock_release>
810007d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810007de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810007e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007eb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810007f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f5:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810007fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007ff:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000806:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000809:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000810:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000813:	83 c0 5c             	add    $0x5c,%eax
81000816:	83 ec 04             	sub    $0x4,%esp
81000819:	6a 08                	push   $0x8
8100081b:	6a 00                	push   $0x0
8100081d:	50                   	push   %eax
8100081e:	e8 1a 13 00 00       	call   81001b3d <memset>
81000823:	83 c4 10             	add    $0x10,%esp
81000826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000829:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000830:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000833:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100083a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100083d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000844:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000847:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100084e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000851:	c9                   	leave  
81000852:	c3                   	ret    

81000853 <_cleanup_r>:
81000853:	55                   	push   %ebp
81000854:	89 e5                	mov    %esp,%ebp
81000856:	83 ec 18             	sub    $0x18,%esp
81000859:	c7 45 f4 12 2a 00 81 	movl   $0x81002a12,-0xc(%ebp)
81000860:	83 ec 08             	sub    $0x8,%esp
81000863:	ff 75 f4             	push   -0xc(%ebp)
81000866:	ff 75 08             	push   0x8(%ebp)
81000869:	e8 33 06 00 00       	call   81000ea1 <_fwalk_reent>
8100086e:	83 c4 10             	add    $0x10,%esp
81000871:	90                   	nop
81000872:	c9                   	leave  
81000873:	c3                   	ret    

81000874 <_cleanup>:
81000874:	55                   	push   %ebp
81000875:	89 e5                	mov    %esp,%ebp
81000877:	83 ec 08             	sub    $0x8,%esp
8100087a:	a1 58 37 00 81       	mov    0x81003758,%eax
8100087f:	83 ec 0c             	sub    $0xc,%esp
81000882:	50                   	push   %eax
81000883:	e8 cb ff ff ff       	call   81000853 <_cleanup_r>
81000888:	83 c4 10             	add    $0x10,%esp
8100088b:	90                   	nop
8100088c:	c9                   	leave  
8100088d:	c3                   	ret    

8100088e <__sinit>:
8100088e:	55                   	push   %ebp
8100088f:	89 e5                	mov    %esp,%ebp
81000891:	83 ec 08             	sub    $0x8,%esp
81000894:	e8 9a 00 00 00       	call   81000933 <__sinit_lock_acquire>
81000899:	8b 45 08             	mov    0x8(%ebp),%eax
8100089c:	8b 40 38             	mov    0x38(%eax),%eax
8100089f:	85 c0                	test   %eax,%eax
810008a1:	74 07                	je     810008aa <__sinit+0x1c>
810008a3:	e8 91 00 00 00       	call   81000939 <__sinit_lock_release>
810008a8:	eb 7b                	jmp    81000925 <__sinit+0x97>
810008aa:	8b 45 08             	mov    0x8(%ebp),%eax
810008ad:	c7 40 3c 53 08 00 81 	movl   $0x81000853,0x3c(%eax)
810008b4:	8b 45 08             	mov    0x8(%ebp),%eax
810008b7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810008be:	00 00 00 
810008c1:	8b 45 08             	mov    0x8(%ebp),%eax
810008c4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810008cb:	00 00 00 
810008ce:	8b 45 08             	mov    0x8(%ebp),%eax
810008d1:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810008d7:	8b 45 08             	mov    0x8(%ebp),%eax
810008da:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810008e0:	8b 45 08             	mov    0x8(%ebp),%eax
810008e3:	8b 40 04             	mov    0x4(%eax),%eax
810008e6:	83 ec 0c             	sub    $0xc,%esp
810008e9:	50                   	push   %eax
810008ea:	e8 57 fd ff ff       	call   81000646 <stdin_init>
810008ef:	83 c4 10             	add    $0x10,%esp
810008f2:	8b 45 08             	mov    0x8(%ebp),%eax
810008f5:	8b 40 08             	mov    0x8(%eax),%eax
810008f8:	83 ec 0c             	sub    $0xc,%esp
810008fb:	50                   	push   %eax
810008fc:	e8 60 fd ff ff       	call   81000661 <stdout_init>
81000901:	83 c4 10             	add    $0x10,%esp
81000904:	8b 45 08             	mov    0x8(%ebp),%eax
81000907:	8b 40 0c             	mov    0xc(%eax),%eax
8100090a:	83 ec 0c             	sub    $0xc,%esp
8100090d:	50                   	push   %eax
8100090e:	e8 69 fd ff ff       	call   8100067c <stderr_init>
81000913:	83 c4 10             	add    $0x10,%esp
81000916:	8b 45 08             	mov    0x8(%ebp),%eax
81000919:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000920:	e8 14 00 00 00       	call   81000939 <__sinit_lock_release>
81000925:	c9                   	leave  
81000926:	c3                   	ret    

81000927 <__sfp_lock_acquire>:
81000927:	55                   	push   %ebp
81000928:	89 e5                	mov    %esp,%ebp
8100092a:	90                   	nop
8100092b:	5d                   	pop    %ebp
8100092c:	c3                   	ret    

8100092d <__sfp_lock_release>:
8100092d:	55                   	push   %ebp
8100092e:	89 e5                	mov    %esp,%ebp
81000930:	90                   	nop
81000931:	5d                   	pop    %ebp
81000932:	c3                   	ret    

81000933 <__sinit_lock_acquire>:
81000933:	55                   	push   %ebp
81000934:	89 e5                	mov    %esp,%ebp
81000936:	90                   	nop
81000937:	5d                   	pop    %ebp
81000938:	c3                   	ret    

81000939 <__sinit_lock_release>:
81000939:	55                   	push   %ebp
8100093a:	89 e5                	mov    %esp,%ebp
8100093c:	90                   	nop
8100093d:	5d                   	pop    %ebp
8100093e:	c3                   	ret    

8100093f <__fp_lock>:
8100093f:	55                   	push   %ebp
81000940:	89 e5                	mov    %esp,%ebp
81000942:	b8 00 00 00 00       	mov    $0x0,%eax
81000947:	5d                   	pop    %ebp
81000948:	c3                   	ret    

81000949 <__fp_unlock>:
81000949:	55                   	push   %ebp
8100094a:	89 e5                	mov    %esp,%ebp
8100094c:	b8 00 00 00 00       	mov    $0x0,%eax
81000951:	5d                   	pop    %ebp
81000952:	c3                   	ret    

81000953 <__fp_lock_all>:
81000953:	55                   	push   %ebp
81000954:	89 e5                	mov    %esp,%ebp
81000956:	83 ec 08             	sub    $0x8,%esp
81000959:	e8 c9 ff ff ff       	call   81000927 <__sfp_lock_acquire>
8100095e:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81000963:	83 ec 08             	sub    $0x8,%esp
81000966:	68 3f 09 00 81       	push   $0x8100093f
8100096b:	50                   	push   %eax
8100096c:	e8 c8 04 00 00       	call   81000e39 <_fwalk>
81000971:	83 c4 10             	add    $0x10,%esp
81000974:	90                   	nop
81000975:	c9                   	leave  
81000976:	c3                   	ret    

81000977 <__fp_unlock_all>:
81000977:	55                   	push   %ebp
81000978:	89 e5                	mov    %esp,%ebp
8100097a:	83 ec 08             	sub    $0x8,%esp
8100097d:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81000982:	83 ec 08             	sub    $0x8,%esp
81000985:	68 49 09 00 81       	push   $0x81000949
8100098a:	50                   	push   %eax
8100098b:	e8 a9 04 00 00       	call   81000e39 <_fwalk>
81000990:	83 c4 10             	add    $0x10,%esp
81000993:	e8 95 ff ff ff       	call   8100092d <__sfp_lock_release>
81000998:	90                   	nop
81000999:	c9                   	leave  
8100099a:	c3                   	ret    

8100099b <__sfvwrite_r>:
8100099b:	55                   	push   %ebp
8100099c:	89 e5                	mov    %esp,%ebp
8100099e:	57                   	push   %edi
8100099f:	56                   	push   %esi
810009a0:	53                   	push   %ebx
810009a1:	83 ec 3c             	sub    $0x3c,%esp
810009a4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009a7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009ae:	8b 45 10             	mov    0x10(%ebp),%eax
810009b1:	8b 78 08             	mov    0x8(%eax),%edi
810009b4:	85 ff                	test   %edi,%edi
810009b6:	75 0a                	jne    810009c2 <__sfvwrite_r+0x27>
810009b8:	b8 00 00 00 00       	mov    $0x0,%eax
810009bd:	e9 6f 04 00 00       	jmp    81000e31 <__sfvwrite_r+0x496>
810009c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009c6:	98                   	cwtl   
810009c7:	83 e0 08             	and    $0x8,%eax
810009ca:	85 c0                	test   %eax,%eax
810009cc:	74 07                	je     810009d5 <__sfvwrite_r+0x3a>
810009ce:	8b 43 10             	mov    0x10(%ebx),%eax
810009d1:	85 c0                	test   %eax,%eax
810009d3:	75 1d                	jne    810009f2 <__sfvwrite_r+0x57>
810009d5:	83 ec 08             	sub    $0x8,%esp
810009d8:	53                   	push   %ebx
810009d9:	ff 75 08             	push   0x8(%ebp)
810009dc:	e8 96 1e 00 00       	call   81002877 <__swsetup_r>
810009e1:	83 c4 10             	add    $0x10,%esp
810009e4:	85 c0                	test   %eax,%eax
810009e6:	74 0a                	je     810009f2 <__sfvwrite_r+0x57>
810009e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810009ed:	e9 3f 04 00 00       	jmp    81000e31 <__sfvwrite_r+0x496>
810009f2:	8b 45 10             	mov    0x10(%ebp),%eax
810009f5:	8b 00                	mov    (%eax),%eax
810009f7:	89 45 c0             	mov    %eax,-0x40(%ebp)
810009fa:	bf 00 00 00 00       	mov    $0x0,%edi
810009ff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a03:	98                   	cwtl   
81000a04:	83 e0 02             	and    $0x2,%eax
81000a07:	85 c0                	test   %eax,%eax
81000a09:	74 68                	je     81000a73 <__sfvwrite_r+0xd8>
81000a0b:	eb 11                	jmp    81000a1e <__sfvwrite_r+0x83>
81000a0d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a10:	8b 08                	mov    (%eax),%ecx
81000a12:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a15:	8b 78 04             	mov    0x4(%eax),%edi
81000a18:	83 c0 08             	add    $0x8,%eax
81000a1b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a1e:	85 ff                	test   %edi,%edi
81000a20:	74 eb                	je     81000a0d <__sfvwrite_r+0x72>
81000a22:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a25:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a2a:	39 c7                	cmp    %eax,%edi
81000a2c:	0f 46 c7             	cmovbe %edi,%eax
81000a2f:	89 c2                	mov    %eax,%edx
81000a31:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a34:	52                   	push   %edx
81000a35:	ff 75 c4             	push   -0x3c(%ebp)
81000a38:	50                   	push   %eax
81000a39:	ff 75 08             	push   0x8(%ebp)
81000a3c:	ff d1                	call   *%ecx
81000a3e:	83 c4 10             	add    $0x10,%esp
81000a41:	89 c6                	mov    %eax,%esi
81000a43:	85 f6                	test   %esi,%esi
81000a45:	0f 8e cf 03 00 00    	jle    81000e1a <__sfvwrite_r+0x47f>
81000a4b:	89 f0                	mov    %esi,%eax
81000a4d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000a50:	89 f0                	mov    %esi,%eax
81000a52:	29 c7                	sub    %eax,%edi
81000a54:	8b 45 10             	mov    0x10(%ebp),%eax
81000a57:	8b 40 08             	mov    0x8(%eax),%eax
81000a5a:	89 f2                	mov    %esi,%edx
81000a5c:	29 d0                	sub    %edx,%eax
81000a5e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000a61:	89 41 08             	mov    %eax,0x8(%ecx)
81000a64:	8b 45 10             	mov    0x10(%ebp),%eax
81000a67:	8b 40 08             	mov    0x8(%eax),%eax
81000a6a:	85 c0                	test   %eax,%eax
81000a6c:	75 b0                	jne    81000a1e <__sfvwrite_r+0x83>
81000a6e:	e9 a0 03 00 00       	jmp    81000e13 <__sfvwrite_r+0x478>
81000a73:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a77:	98                   	cwtl   
81000a78:	83 e0 01             	and    $0x1,%eax
81000a7b:	85 c0                	test   %eax,%eax
81000a7d:	0f 85 44 02 00 00    	jne    81000cc7 <__sfvwrite_r+0x32c>
81000a83:	eb 11                	jmp    81000a96 <__sfvwrite_r+0xfb>
81000a85:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a88:	8b 08                	mov    (%eax),%ecx
81000a8a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a8d:	8b 78 04             	mov    0x4(%eax),%edi
81000a90:	83 c0 08             	add    $0x8,%eax
81000a93:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a96:	85 ff                	test   %edi,%edi
81000a98:	74 eb                	je     81000a85 <__sfvwrite_r+0xea>
81000a9a:	8b 73 08             	mov    0x8(%ebx),%esi
81000a9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000aa1:	98                   	cwtl   
81000aa2:	25 00 02 00 00       	and    $0x200,%eax
81000aa7:	85 c0                	test   %eax,%eax
81000aa9:	0f 84 4f 01 00 00    	je     81000bfe <__sfvwrite_r+0x263>
81000aaf:	89 f0                	mov    %esi,%eax
81000ab1:	39 c7                	cmp    %eax,%edi
81000ab3:	0f 82 12 01 00 00    	jb     81000bcb <__sfvwrite_r+0x230>
81000ab9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000abd:	98                   	cwtl   
81000abe:	25 80 04 00 00       	and    $0x480,%eax
81000ac3:	85 c0                	test   %eax,%eax
81000ac5:	0f 84 00 01 00 00    	je     81000bcb <__sfvwrite_r+0x230>
81000acb:	8b 03                	mov    (%ebx),%eax
81000acd:	8b 53 10             	mov    0x10(%ebx),%edx
81000ad0:	29 d0                	sub    %edx,%eax
81000ad2:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ad5:	8b 53 14             	mov    0x14(%ebx),%edx
81000ad8:	89 d0                	mov    %edx,%eax
81000ada:	01 c0                	add    %eax,%eax
81000adc:	01 d0                	add    %edx,%eax
81000ade:	89 c2                	mov    %eax,%edx
81000ae0:	c1 ea 1f             	shr    $0x1f,%edx
81000ae3:	01 d0                	add    %edx,%eax
81000ae5:	d1 f8                	sar    %eax
81000ae7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000aea:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000aed:	01 f8                	add    %edi,%eax
81000aef:	8d 50 01             	lea    0x1(%eax),%edx
81000af2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000af5:	39 c2                	cmp    %eax,%edx
81000af7:	76 0b                	jbe    81000b04 <__sfvwrite_r+0x169>
81000af9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000afc:	01 f8                	add    %edi,%eax
81000afe:	83 c0 01             	add    $0x1,%eax
81000b01:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b04:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b08:	98                   	cwtl   
81000b09:	25 00 04 00 00       	and    $0x400,%eax
81000b0e:	85 c0                	test   %eax,%eax
81000b10:	74 4f                	je     81000b61 <__sfvwrite_r+0x1c6>
81000b12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b15:	83 ec 08             	sub    $0x8,%esp
81000b18:	50                   	push   %eax
81000b19:	ff 75 08             	push   0x8(%ebp)
81000b1c:	e8 7e 06 00 00       	call   8100119f <_malloc_r>
81000b21:	83 c4 10             	add    $0x10,%esp
81000b24:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b27:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b2b:	75 0e                	jne    81000b3b <__sfvwrite_r+0x1a0>
81000b2d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b30:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b36:	e9 e6 02 00 00       	jmp    81000e21 <__sfvwrite_r+0x486>
81000b3b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b3e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b41:	83 ec 04             	sub    $0x4,%esp
81000b44:	52                   	push   %edx
81000b45:	50                   	push   %eax
81000b46:	ff 75 dc             	push   -0x24(%ebp)
81000b49:	e8 1a 0f 00 00       	call   81001a68 <memcpy>
81000b4e:	83 c4 10             	add    $0x10,%esp
81000b51:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b55:	66 25 7f fb          	and    $0xfb7f,%ax
81000b59:	0c 80                	or     $0x80,%al
81000b5b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b5f:	eb 49                	jmp    81000baa <__sfvwrite_r+0x20f>
81000b61:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b64:	8b 43 10             	mov    0x10(%ebx),%eax
81000b67:	83 ec 04             	sub    $0x4,%esp
81000b6a:	52                   	push   %edx
81000b6b:	50                   	push   %eax
81000b6c:	ff 75 08             	push   0x8(%ebp)
81000b6f:	e8 5d 10 00 00       	call   81001bd1 <_realloc_r>
81000b74:	83 c4 10             	add    $0x10,%esp
81000b77:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b7a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b7e:	75 2a                	jne    81000baa <__sfvwrite_r+0x20f>
81000b80:	8b 43 10             	mov    0x10(%ebx),%eax
81000b83:	83 ec 08             	sub    $0x8,%esp
81000b86:	50                   	push   %eax
81000b87:	ff 75 08             	push   0x8(%ebp)
81000b8a:	e8 5e 22 00 00       	call   81002ded <_free_r>
81000b8f:	83 c4 10             	add    $0x10,%esp
81000b92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b96:	24 7f                	and    $0x7f,%al
81000b98:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b9c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ba5:	e9 77 02 00 00       	jmp    81000e21 <__sfvwrite_r+0x486>
81000baa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bad:	89 43 10             	mov    %eax,0x10(%ebx)
81000bb0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000bb3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bb6:	01 d0                	add    %edx,%eax
81000bb8:	89 03                	mov    %eax,(%ebx)
81000bba:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bbd:	89 43 14             	mov    %eax,0x14(%ebx)
81000bc0:	89 fe                	mov    %edi,%esi
81000bc2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bc5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000bc8:	89 43 08             	mov    %eax,0x8(%ebx)
81000bcb:	89 f0                	mov    %esi,%eax
81000bcd:	39 c7                	cmp    %eax,%edi
81000bcf:	73 02                	jae    81000bd3 <__sfvwrite_r+0x238>
81000bd1:	89 fe                	mov    %edi,%esi
81000bd3:	89 f2                	mov    %esi,%edx
81000bd5:	8b 03                	mov    (%ebx),%eax
81000bd7:	83 ec 04             	sub    $0x4,%esp
81000bda:	52                   	push   %edx
81000bdb:	ff 75 c4             	push   -0x3c(%ebp)
81000bde:	50                   	push   %eax
81000bdf:	e8 cc 0e 00 00       	call   81001ab0 <memmove>
81000be4:	83 c4 10             	add    $0x10,%esp
81000be7:	8b 43 08             	mov    0x8(%ebx),%eax
81000bea:	29 f0                	sub    %esi,%eax
81000bec:	89 43 08             	mov    %eax,0x8(%ebx)
81000bef:	8b 03                	mov    (%ebx),%eax
81000bf1:	89 f2                	mov    %esi,%edx
81000bf3:	01 d0                	add    %edx,%eax
81000bf5:	89 03                	mov    %eax,(%ebx)
81000bf7:	89 fe                	mov    %edi,%esi
81000bf9:	e9 9d 00 00 00       	jmp    81000c9b <__sfvwrite_r+0x300>
81000bfe:	8b 13                	mov    (%ebx),%edx
81000c00:	8b 43 10             	mov    0x10(%ebx),%eax
81000c03:	39 c2                	cmp    %eax,%edx
81000c05:	77 07                	ja     81000c0e <__sfvwrite_r+0x273>
81000c07:	8b 43 14             	mov    0x14(%ebx),%eax
81000c0a:	39 c7                	cmp    %eax,%edi
81000c0c:	73 4c                	jae    81000c5a <__sfvwrite_r+0x2bf>
81000c0e:	89 f0                	mov    %esi,%eax
81000c10:	39 c7                	cmp    %eax,%edi
81000c12:	0f 46 c7             	cmovbe %edi,%eax
81000c15:	89 c6                	mov    %eax,%esi
81000c17:	89 f2                	mov    %esi,%edx
81000c19:	8b 03                	mov    (%ebx),%eax
81000c1b:	83 ec 04             	sub    $0x4,%esp
81000c1e:	52                   	push   %edx
81000c1f:	ff 75 c4             	push   -0x3c(%ebp)
81000c22:	50                   	push   %eax
81000c23:	e8 88 0e 00 00       	call   81001ab0 <memmove>
81000c28:	83 c4 10             	add    $0x10,%esp
81000c2b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c2e:	29 f0                	sub    %esi,%eax
81000c30:	89 43 08             	mov    %eax,0x8(%ebx)
81000c33:	8b 03                	mov    (%ebx),%eax
81000c35:	89 f2                	mov    %esi,%edx
81000c37:	01 d0                	add    %edx,%eax
81000c39:	89 03                	mov    %eax,(%ebx)
81000c3b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c3e:	85 c0                	test   %eax,%eax
81000c40:	75 58                	jne    81000c9a <__sfvwrite_r+0x2ff>
81000c42:	83 ec 08             	sub    $0x8,%esp
81000c45:	53                   	push   %ebx
81000c46:	ff 75 08             	push   0x8(%ebp)
81000c49:	e8 0e 21 00 00       	call   81002d5c <_fflush_r>
81000c4e:	83 c4 10             	add    $0x10,%esp
81000c51:	85 c0                	test   %eax,%eax
81000c53:	74 45                	je     81000c9a <__sfvwrite_r+0x2ff>
81000c55:	e9 c7 01 00 00       	jmp    81000e21 <__sfvwrite_r+0x486>
81000c5a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000c60:	77 04                	ja     81000c66 <__sfvwrite_r+0x2cb>
81000c62:	89 f8                	mov    %edi,%eax
81000c64:	eb 05                	jmp    81000c6b <__sfvwrite_r+0x2d0>
81000c66:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000c6b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000c6e:	99                   	cltd   
81000c6f:	f7 f9                	idiv   %ecx
81000c71:	89 c2                	mov    %eax,%edx
81000c73:	8b 43 14             	mov    0x14(%ebx),%eax
81000c76:	89 d6                	mov    %edx,%esi
81000c78:	0f af f0             	imul   %eax,%esi
81000c7b:	8b 53 24             	mov    0x24(%ebx),%edx
81000c7e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000c81:	56                   	push   %esi
81000c82:	ff 75 c4             	push   -0x3c(%ebp)
81000c85:	50                   	push   %eax
81000c86:	ff 75 08             	push   0x8(%ebp)
81000c89:	ff d2                	call   *%edx
81000c8b:	83 c4 10             	add    $0x10,%esp
81000c8e:	89 c6                	mov    %eax,%esi
81000c90:	85 f6                	test   %esi,%esi
81000c92:	0f 8e 85 01 00 00    	jle    81000e1d <__sfvwrite_r+0x482>
81000c98:	eb 01                	jmp    81000c9b <__sfvwrite_r+0x300>
81000c9a:	90                   	nop
81000c9b:	89 f0                	mov    %esi,%eax
81000c9d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000ca0:	89 f0                	mov    %esi,%eax
81000ca2:	29 c7                	sub    %eax,%edi
81000ca4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ca7:	8b 40 08             	mov    0x8(%eax),%eax
81000caa:	89 f2                	mov    %esi,%edx
81000cac:	29 d0                	sub    %edx,%eax
81000cae:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000cb1:	89 41 08             	mov    %eax,0x8(%ecx)
81000cb4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb7:	8b 40 08             	mov    0x8(%eax),%eax
81000cba:	85 c0                	test   %eax,%eax
81000cbc:	0f 85 d4 fd ff ff    	jne    81000a96 <__sfvwrite_r+0xfb>
81000cc2:	e9 4c 01 00 00       	jmp    81000e13 <__sfvwrite_r+0x478>
81000cc7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cce:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000cd5:	eb 18                	jmp    81000cef <__sfvwrite_r+0x354>
81000cd7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cde:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ce1:	8b 08                	mov    (%eax),%ecx
81000ce3:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000ce6:	8b 78 04             	mov    0x4(%eax),%edi
81000ce9:	83 c0 08             	add    $0x8,%eax
81000cec:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000cef:	85 ff                	test   %edi,%edi
81000cf1:	74 e4                	je     81000cd7 <__sfvwrite_r+0x33c>
81000cf3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000cf7:	75 32                	jne    81000d2b <__sfvwrite_r+0x390>
81000cf9:	83 ec 04             	sub    $0x4,%esp
81000cfc:	57                   	push   %edi
81000cfd:	6a 0a                	push   $0xa
81000cff:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d02:	56                   	push   %esi
81000d03:	e8 c8 0c 00 00       	call   810019d0 <memchr>
81000d08:	83 c4 10             	add    $0x10,%esp
81000d0b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d0e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d12:	74 0a                	je     81000d1e <__sfvwrite_r+0x383>
81000d14:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d17:	83 c0 01             	add    $0x1,%eax
81000d1a:	29 f0                	sub    %esi,%eax
81000d1c:	eb 03                	jmp    81000d21 <__sfvwrite_r+0x386>
81000d1e:	8d 47 01             	lea    0x1(%edi),%eax
81000d21:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d24:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d2e:	39 c7                	cmp    %eax,%edi
81000d30:	0f 46 c7             	cmovbe %edi,%eax
81000d33:	89 c1                	mov    %eax,%ecx
81000d35:	8b 53 08             	mov    0x8(%ebx),%edx
81000d38:	8b 43 14             	mov    0x14(%ebx),%eax
81000d3b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d3e:	8b 13                	mov    (%ebx),%edx
81000d40:	8b 43 10             	mov    0x10(%ebx),%eax
81000d43:	39 c2                	cmp    %eax,%edx
81000d45:	76 38                	jbe    81000d7f <__sfvwrite_r+0x3e4>
81000d47:	39 f1                	cmp    %esi,%ecx
81000d49:	7e 34                	jle    81000d7f <__sfvwrite_r+0x3e4>
81000d4b:	89 f2                	mov    %esi,%edx
81000d4d:	8b 03                	mov    (%ebx),%eax
81000d4f:	83 ec 04             	sub    $0x4,%esp
81000d52:	52                   	push   %edx
81000d53:	ff 75 c4             	push   -0x3c(%ebp)
81000d56:	50                   	push   %eax
81000d57:	e8 54 0d 00 00       	call   81001ab0 <memmove>
81000d5c:	83 c4 10             	add    $0x10,%esp
81000d5f:	8b 03                	mov    (%ebx),%eax
81000d61:	89 f2                	mov    %esi,%edx
81000d63:	01 d0                	add    %edx,%eax
81000d65:	89 03                	mov    %eax,(%ebx)
81000d67:	83 ec 08             	sub    $0x8,%esp
81000d6a:	53                   	push   %ebx
81000d6b:	ff 75 08             	push   0x8(%ebp)
81000d6e:	e8 e9 1f 00 00       	call   81002d5c <_fflush_r>
81000d73:	83 c4 10             	add    $0x10,%esp
81000d76:	85 c0                	test   %eax,%eax
81000d78:	74 4f                	je     81000dc9 <__sfvwrite_r+0x42e>
81000d7a:	e9 a2 00 00 00       	jmp    81000e21 <__sfvwrite_r+0x486>
81000d7f:	8b 73 14             	mov    0x14(%ebx),%esi
81000d82:	89 c8                	mov    %ecx,%eax
81000d84:	39 c6                	cmp    %eax,%esi
81000d86:	7f 1b                	jg     81000da3 <__sfvwrite_r+0x408>
81000d88:	8b 53 24             	mov    0x24(%ebx),%edx
81000d8b:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000d8e:	56                   	push   %esi
81000d8f:	ff 75 c4             	push   -0x3c(%ebp)
81000d92:	50                   	push   %eax
81000d93:	ff 75 08             	push   0x8(%ebp)
81000d96:	ff d2                	call   *%edx
81000d98:	83 c4 10             	add    $0x10,%esp
81000d9b:	89 c6                	mov    %eax,%esi
81000d9d:	85 f6                	test   %esi,%esi
81000d9f:	7f 28                	jg     81000dc9 <__sfvwrite_r+0x42e>
81000da1:	eb 7e                	jmp    81000e21 <__sfvwrite_r+0x486>
81000da3:	89 ce                	mov    %ecx,%esi
81000da5:	89 f2                	mov    %esi,%edx
81000da7:	8b 03                	mov    (%ebx),%eax
81000da9:	83 ec 04             	sub    $0x4,%esp
81000dac:	52                   	push   %edx
81000dad:	ff 75 c4             	push   -0x3c(%ebp)
81000db0:	50                   	push   %eax
81000db1:	e8 fa 0c 00 00       	call   81001ab0 <memmove>
81000db6:	83 c4 10             	add    $0x10,%esp
81000db9:	8b 43 08             	mov    0x8(%ebx),%eax
81000dbc:	29 f0                	sub    %esi,%eax
81000dbe:	89 43 08             	mov    %eax,0x8(%ebx)
81000dc1:	8b 03                	mov    (%ebx),%eax
81000dc3:	89 f2                	mov    %esi,%edx
81000dc5:	01 d0                	add    %edx,%eax
81000dc7:	89 03                	mov    %eax,(%ebx)
81000dc9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000dcc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000dd0:	75 1a                	jne    81000dec <__sfvwrite_r+0x451>
81000dd2:	83 ec 08             	sub    $0x8,%esp
81000dd5:	53                   	push   %ebx
81000dd6:	ff 75 08             	push   0x8(%ebp)
81000dd9:	e8 7e 1f 00 00       	call   81002d5c <_fflush_r>
81000dde:	83 c4 10             	add    $0x10,%esp
81000de1:	85 c0                	test   %eax,%eax
81000de3:	75 3b                	jne    81000e20 <__sfvwrite_r+0x485>
81000de5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000dec:	89 f0                	mov    %esi,%eax
81000dee:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000df1:	89 f0                	mov    %esi,%eax
81000df3:	29 c7                	sub    %eax,%edi
81000df5:	8b 45 10             	mov    0x10(%ebp),%eax
81000df8:	8b 40 08             	mov    0x8(%eax),%eax
81000dfb:	89 f2                	mov    %esi,%edx
81000dfd:	29 d0                	sub    %edx,%eax
81000dff:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e02:	89 41 08             	mov    %eax,0x8(%ecx)
81000e05:	8b 45 10             	mov    0x10(%ebp),%eax
81000e08:	8b 40 08             	mov    0x8(%eax),%eax
81000e0b:	85 c0                	test   %eax,%eax
81000e0d:	0f 85 dc fe ff ff    	jne    81000cef <__sfvwrite_r+0x354>
81000e13:	b8 00 00 00 00       	mov    $0x0,%eax
81000e18:	eb 17                	jmp    81000e31 <__sfvwrite_r+0x496>
81000e1a:	90                   	nop
81000e1b:	eb 04                	jmp    81000e21 <__sfvwrite_r+0x486>
81000e1d:	90                   	nop
81000e1e:	eb 01                	jmp    81000e21 <__sfvwrite_r+0x486>
81000e20:	90                   	nop
81000e21:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e25:	83 c8 40             	or     $0x40,%eax
81000e28:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e2c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e31:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e34:	5b                   	pop    %ebx
81000e35:	5e                   	pop    %esi
81000e36:	5f                   	pop    %edi
81000e37:	5d                   	pop    %ebp
81000e38:	c3                   	ret    

81000e39 <_fwalk>:
81000e39:	55                   	push   %ebp
81000e3a:	89 e5                	mov    %esp,%ebp
81000e3c:	57                   	push   %edi
81000e3d:	56                   	push   %esi
81000e3e:	53                   	push   %ebx
81000e3f:	83 ec 1c             	sub    $0x1c,%esp
81000e42:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e49:	8b 45 08             	mov    0x8(%ebp),%eax
81000e4c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000e52:	eb 3e                	jmp    81000e92 <_fwalk+0x59>
81000e54:	8b 5e 08             	mov    0x8(%esi),%ebx
81000e57:	8b 7e 04             	mov    0x4(%esi),%edi
81000e5a:	eb 2d                	jmp    81000e89 <_fwalk+0x50>
81000e5c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e60:	66 85 c0             	test   %ax,%ax
81000e63:	74 21                	je     81000e86 <_fwalk+0x4d>
81000e65:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e69:	66 83 f8 01          	cmp    $0x1,%ax
81000e6d:	74 17                	je     81000e86 <_fwalk+0x4d>
81000e6f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e73:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e77:	74 0d                	je     81000e86 <_fwalk+0x4d>
81000e79:	83 ec 0c             	sub    $0xc,%esp
81000e7c:	53                   	push   %ebx
81000e7d:	ff 55 0c             	call   *0xc(%ebp)
81000e80:	83 c4 10             	add    $0x10,%esp
81000e83:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e86:	83 c3 68             	add    $0x68,%ebx
81000e89:	83 ef 01             	sub    $0x1,%edi
81000e8c:	85 ff                	test   %edi,%edi
81000e8e:	79 cc                	jns    81000e5c <_fwalk+0x23>
81000e90:	8b 36                	mov    (%esi),%esi
81000e92:	85 f6                	test   %esi,%esi
81000e94:	75 be                	jne    81000e54 <_fwalk+0x1b>
81000e96:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000e99:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e9c:	5b                   	pop    %ebx
81000e9d:	5e                   	pop    %esi
81000e9e:	5f                   	pop    %edi
81000e9f:	5d                   	pop    %ebp
81000ea0:	c3                   	ret    

81000ea1 <_fwalk_reent>:
81000ea1:	55                   	push   %ebp
81000ea2:	89 e5                	mov    %esp,%ebp
81000ea4:	57                   	push   %edi
81000ea5:	56                   	push   %esi
81000ea6:	53                   	push   %ebx
81000ea7:	83 ec 1c             	sub    $0x1c,%esp
81000eaa:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000eb1:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eba:	eb 41                	jmp    81000efd <_fwalk_reent+0x5c>
81000ebc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ebf:	8b 7e 04             	mov    0x4(%esi),%edi
81000ec2:	eb 30                	jmp    81000ef4 <_fwalk_reent+0x53>
81000ec4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ec8:	66 85 c0             	test   %ax,%ax
81000ecb:	74 24                	je     81000ef1 <_fwalk_reent+0x50>
81000ecd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ed1:	66 83 f8 01          	cmp    $0x1,%ax
81000ed5:	74 1a                	je     81000ef1 <_fwalk_reent+0x50>
81000ed7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000edb:	66 83 f8 ff          	cmp    $0xffff,%ax
81000edf:	74 10                	je     81000ef1 <_fwalk_reent+0x50>
81000ee1:	83 ec 08             	sub    $0x8,%esp
81000ee4:	53                   	push   %ebx
81000ee5:	ff 75 08             	push   0x8(%ebp)
81000ee8:	ff 55 0c             	call   *0xc(%ebp)
81000eeb:	83 c4 10             	add    $0x10,%esp
81000eee:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ef1:	83 c3 68             	add    $0x68,%ebx
81000ef4:	83 ef 01             	sub    $0x1,%edi
81000ef7:	85 ff                	test   %edi,%edi
81000ef9:	79 c9                	jns    81000ec4 <_fwalk_reent+0x23>
81000efb:	8b 36                	mov    (%esi),%esi
81000efd:	85 f6                	test   %esi,%esi
81000eff:	75 bb                	jne    81000ebc <_fwalk_reent+0x1b>
81000f01:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f04:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f07:	5b                   	pop    %ebx
81000f08:	5e                   	pop    %esi
81000f09:	5f                   	pop    %edi
81000f0a:	5d                   	pop    %ebp
81000f0b:	c3                   	ret    

81000f0c <malloc_extend_top>:
81000f0c:	55                   	push   %ebp
81000f0d:	89 e5                	mov    %esp,%ebp
81000f0f:	83 ec 38             	sub    $0x38,%esp
81000f12:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f19:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81000f1e:	8b 40 08             	mov    0x8(%eax),%eax
81000f21:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f24:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f27:	8b 40 04             	mov    0x4(%eax),%eax
81000f2a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f2d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f30:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f33:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f36:	01 d0                	add    %edx,%eax
81000f38:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f3b:	8b 15 e0 41 00 81    	mov    0x810041e0,%edx
81000f41:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f44:	01 d0                	add    %edx,%eax
81000f46:	83 c0 10             	add    $0x10,%eax
81000f49:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f4c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000f53:	a1 ac 3f 00 81       	mov    0x81003fac,%eax
81000f58:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f5b:	74 15                	je     81000f72 <malloc_extend_top+0x66>
81000f5d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000f60:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f63:	01 d0                	add    %edx,%eax
81000f65:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f68:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f6b:	f7 d8                	neg    %eax
81000f6d:	21 d0                	and    %edx,%eax
81000f6f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f72:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f75:	83 ec 08             	sub    $0x8,%esp
81000f78:	50                   	push   %eax
81000f79:	ff 75 08             	push   0x8(%ebp)
81000f7c:	e8 58 17 00 00       	call   810026d9 <_sbrk_r>
81000f81:	83 c4 10             	add    $0x10,%esp
81000f84:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f87:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000f8b:	0f 84 0b 02 00 00    	je     8100119c <malloc_extend_top+0x290>
81000f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f94:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000f97:	73 0e                	jae    81000fa7 <malloc_extend_top+0x9b>
81000f99:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81000f9e:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000fa1:	0f 85 f5 01 00 00    	jne    8100119c <malloc_extend_top+0x290>
81000fa7:	a1 00 42 00 81       	mov    0x81004200,%eax
81000fac:	89 c2                	mov    %eax,%edx
81000fae:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fb1:	01 d0                	add    %edx,%eax
81000fb3:	a3 00 42 00 81       	mov    %eax,0x81004200
81000fb8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fbb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fbe:	75 30                	jne    81000ff0 <malloc_extend_top+0xe4>
81000fc0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fc3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fc6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000fc9:	21 d0                	and    %edx,%eax
81000fcb:	85 c0                	test   %eax,%eax
81000fcd:	75 21                	jne    81000ff0 <malloc_extend_top+0xe4>
81000fcf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000fd2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fd5:	01 d0                	add    %edx,%eax
81000fd7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000fda:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81000fdf:	8b 40 08             	mov    0x8(%eax),%eax
81000fe2:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000fe5:	83 ca 01             	or     $0x1,%edx
81000fe8:	89 50 04             	mov    %edx,0x4(%eax)
81000feb:	e9 76 01 00 00       	jmp    81001166 <malloc_extend_top+0x25a>
81000ff0:	a1 ac 3f 00 81       	mov    0x81003fac,%eax
81000ff5:	83 f8 ff             	cmp    $0xffffffff,%eax
81000ff8:	75 0a                	jne    81001004 <malloc_extend_top+0xf8>
81000ffa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ffd:	a3 ac 3f 00 81       	mov    %eax,0x81003fac
81001002:	eb 13                	jmp    81001017 <malloc_extend_top+0x10b>
81001004:	8b 15 00 42 00 81    	mov    0x81004200,%edx
8100100a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001010:	01 d0                	add    %edx,%eax
81001012:	a3 00 42 00 81       	mov    %eax,0x81004200
81001017:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101a:	83 c0 08             	add    $0x8,%eax
8100101d:	83 e0 07             	and    $0x7,%eax
81001020:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001023:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001027:	74 13                	je     8100103c <malloc_extend_top+0x130>
81001029:	b8 08 00 00 00       	mov    $0x8,%eax
8100102e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001031:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001034:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001037:	01 45 f4             	add    %eax,-0xc(%ebp)
8100103a:	eb 07                	jmp    81001043 <malloc_extend_top+0x137>
8100103c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001043:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001046:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001049:	01 d0                	add    %edx,%eax
8100104b:	89 c2                	mov    %eax,%edx
8100104d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001050:	83 e8 01             	sub    $0x1,%eax
81001053:	21 c2                	and    %eax,%edx
81001055:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001058:	29 d0                	sub    %edx,%eax
8100105a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100105d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001060:	83 e8 01             	sub    $0x1,%eax
81001063:	21 45 f0             	and    %eax,-0x10(%ebp)
81001066:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001069:	83 ec 08             	sub    $0x8,%esp
8100106c:	50                   	push   %eax
8100106d:	ff 75 08             	push   0x8(%ebp)
81001070:	e8 64 16 00 00       	call   810026d9 <_sbrk_r>
81001075:	83 c4 10             	add    $0x10,%esp
81001078:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100107b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100107f:	75 28                	jne    810010a9 <malloc_extend_top+0x19d>
81001081:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001088:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100108f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001092:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001095:	01 d0                	add    %edx,%eax
81001097:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100109a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100109e:	74 09                	je     810010a9 <malloc_extend_top+0x19d>
810010a0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010a3:	83 e8 08             	sub    $0x8,%eax
810010a6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010a9:	a1 00 42 00 81       	mov    0x81004200,%eax
810010ae:	89 c2                	mov    %eax,%edx
810010b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010b3:	01 d0                	add    %edx,%eax
810010b5:	a3 00 42 00 81       	mov    %eax,0x81004200
810010ba:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
810010bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010c2:	89 42 08             	mov    %eax,0x8(%edx)
810010c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010c8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010cb:	89 c2                	mov    %eax,%edx
810010cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010d0:	01 d0                	add    %edx,%eax
810010d2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010d5:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810010da:	8b 40 08             	mov    0x8(%eax),%eax
810010dd:	8b 55 d0             	mov    -0x30(%ebp),%edx
810010e0:	83 ca 01             	or     $0x1,%edx
810010e3:	89 50 04             	mov    %edx,0x4(%eax)
810010e6:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810010eb:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810010ee:	74 76                	je     81001166 <malloc_extend_top+0x25a>
810010f0:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810010f4:	77 14                	ja     8100110a <malloc_extend_top+0x1fe>
810010f6:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810010fb:	8b 40 08             	mov    0x8(%eax),%eax
810010fe:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001105:	e9 93 00 00 00       	jmp    8100119d <malloc_extend_top+0x291>
8100110a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100110d:	83 e8 0c             	sub    $0xc,%eax
81001110:	83 e0 f8             	and    $0xfffffff8,%eax
81001113:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001116:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001119:	8b 40 04             	mov    0x4(%eax),%eax
8100111c:	83 e0 01             	and    $0x1,%eax
8100111f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001122:	89 c2                	mov    %eax,%edx
81001124:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001127:	89 50 04             	mov    %edx,0x4(%eax)
8100112a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100112d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001130:	01 d0                	add    %edx,%eax
81001132:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001139:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100113c:	8d 50 04             	lea    0x4(%eax),%edx
8100113f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001142:	01 d0                	add    %edx,%eax
81001144:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100114b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100114f:	76 15                	jbe    81001166 <malloc_extend_top+0x25a>
81001151:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001154:	83 c0 08             	add    $0x8,%eax
81001157:	83 ec 08             	sub    $0x8,%esp
8100115a:	50                   	push   %eax
8100115b:	ff 75 08             	push   0x8(%ebp)
8100115e:	e8 8a 1c 00 00       	call   81002ded <_free_r>
81001163:	83 c4 10             	add    $0x10,%esp
81001166:	a1 00 42 00 81       	mov    0x81004200,%eax
8100116b:	89 c2                	mov    %eax,%edx
8100116d:	a1 e4 41 00 81       	mov    0x810041e4,%eax
81001172:	39 c2                	cmp    %eax,%edx
81001174:	76 0a                	jbe    81001180 <malloc_extend_top+0x274>
81001176:	a1 00 42 00 81       	mov    0x81004200,%eax
8100117b:	a3 e4 41 00 81       	mov    %eax,0x810041e4
81001180:	a1 00 42 00 81       	mov    0x81004200,%eax
81001185:	89 c2                	mov    %eax,%edx
81001187:	a1 e8 41 00 81       	mov    0x810041e8,%eax
8100118c:	39 c2                	cmp    %eax,%edx
8100118e:	76 0d                	jbe    8100119d <malloc_extend_top+0x291>
81001190:	a1 00 42 00 81       	mov    0x81004200,%eax
81001195:	a3 e8 41 00 81       	mov    %eax,0x810041e8
8100119a:	eb 01                	jmp    8100119d <malloc_extend_top+0x291>
8100119c:	90                   	nop
8100119d:	c9                   	leave  
8100119e:	c3                   	ret    

8100119f <_malloc_r>:
8100119f:	55                   	push   %ebp
810011a0:	89 e5                	mov    %esp,%ebp
810011a2:	53                   	push   %ebx
810011a3:	83 ec 44             	sub    $0x44,%esp
810011a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011a9:	83 c0 0b             	add    $0xb,%eax
810011ac:	83 f8 16             	cmp    $0x16,%eax
810011af:	76 0b                	jbe    810011bc <_malloc_r+0x1d>
810011b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810011b4:	83 c0 0b             	add    $0xb,%eax
810011b7:	83 e0 f8             	and    $0xfffffff8,%eax
810011ba:	eb 05                	jmp    810011c1 <_malloc_r+0x22>
810011bc:	b8 10 00 00 00       	mov    $0x10,%eax
810011c1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810011c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011c7:	85 c0                	test   %eax,%eax
810011c9:	78 08                	js     810011d3 <_malloc_r+0x34>
810011cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011ce:	3b 45 0c             	cmp    0xc(%ebp),%eax
810011d1:	73 13                	jae    810011e6 <_malloc_r+0x47>
810011d3:	8b 45 08             	mov    0x8(%ebp),%eax
810011d6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810011dc:	b8 00 00 00 00       	mov    $0x0,%eax
810011e1:	e9 d6 07 00 00       	jmp    810019bc <_malloc_r+0x81d>
810011e6:	83 ec 0c             	sub    $0xc,%esp
810011e9:	ff 75 08             	push   0x8(%ebp)
810011ec:	e8 d4 09 00 00       	call   81001bc5 <__malloc_lock>
810011f1:	83 c4 10             	add    $0x10,%esp
810011f4:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810011fb:	0f 87 b0 00 00 00    	ja     810012b1 <_malloc_r+0x112>
81001201:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001204:	c1 e8 03             	shr    $0x3,%eax
81001207:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100120a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100120d:	83 c0 01             	add    $0x1,%eax
81001210:	01 c0                	add    %eax,%eax
81001212:	c1 e0 02             	shl    $0x2,%eax
81001215:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
8100121a:	83 e8 08             	sub    $0x8,%eax
8100121d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001220:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001223:	8b 40 0c             	mov    0xc(%eax),%eax
81001226:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001229:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100122c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100122f:	75 0d                	jne    8100123e <_malloc_r+0x9f>
81001231:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001235:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001238:	8b 40 0c             	mov    0xc(%eax),%eax
8100123b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100123e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001241:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001244:	74 62                	je     810012a8 <_malloc_r+0x109>
81001246:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001249:	8b 40 04             	mov    0x4(%eax),%eax
8100124c:	83 e0 fc             	and    $0xfffffffc,%eax
8100124f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001252:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001255:	8b 40 0c             	mov    0xc(%eax),%eax
81001258:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100125b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100125e:	8b 40 08             	mov    0x8(%eax),%eax
81001261:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001264:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001267:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100126a:	89 50 0c             	mov    %edx,0xc(%eax)
8100126d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001270:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001273:	89 50 08             	mov    %edx,0x8(%eax)
81001276:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001279:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100127c:	01 d0                	add    %edx,%eax
8100127e:	8b 50 04             	mov    0x4(%eax),%edx
81001281:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001284:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001287:	01 c8                	add    %ecx,%eax
81001289:	83 ca 01             	or     $0x1,%edx
8100128c:	89 50 04             	mov    %edx,0x4(%eax)
8100128f:	83 ec 0c             	sub    $0xc,%esp
81001292:	ff 75 08             	push   0x8(%ebp)
81001295:	e8 31 09 00 00       	call   81001bcb <__malloc_unlock>
8100129a:	83 c4 10             	add    $0x10,%esp
8100129d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a0:	83 c0 08             	add    $0x8,%eax
810012a3:	e9 14 07 00 00       	jmp    810019bc <_malloc_r+0x81d>
810012a8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012ac:	e9 46 01 00 00       	jmp    810013f7 <_malloc_r+0x258>
810012b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012b4:	c1 e8 09             	shr    $0x9,%eax
810012b7:	85 c0                	test   %eax,%eax
810012b9:	75 08                	jne    810012c3 <_malloc_r+0x124>
810012bb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012be:	c1 e8 03             	shr    $0x3,%eax
810012c1:	eb 77                	jmp    8100133a <_malloc_r+0x19b>
810012c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012c6:	c1 e8 09             	shr    $0x9,%eax
810012c9:	83 f8 04             	cmp    $0x4,%eax
810012cc:	77 0b                	ja     810012d9 <_malloc_r+0x13a>
810012ce:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012d1:	c1 e8 06             	shr    $0x6,%eax
810012d4:	83 c0 38             	add    $0x38,%eax
810012d7:	eb 61                	jmp    8100133a <_malloc_r+0x19b>
810012d9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012dc:	c1 e8 09             	shr    $0x9,%eax
810012df:	83 f8 14             	cmp    $0x14,%eax
810012e2:	77 0b                	ja     810012ef <_malloc_r+0x150>
810012e4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012e7:	c1 e8 09             	shr    $0x9,%eax
810012ea:	83 c0 5b             	add    $0x5b,%eax
810012ed:	eb 4b                	jmp    8100133a <_malloc_r+0x19b>
810012ef:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f2:	c1 e8 09             	shr    $0x9,%eax
810012f5:	83 f8 54             	cmp    $0x54,%eax
810012f8:	77 0b                	ja     81001305 <_malloc_r+0x166>
810012fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012fd:	c1 e8 0c             	shr    $0xc,%eax
81001300:	83 c0 6e             	add    $0x6e,%eax
81001303:	eb 35                	jmp    8100133a <_malloc_r+0x19b>
81001305:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001308:	c1 e8 09             	shr    $0x9,%eax
8100130b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001310:	77 0b                	ja     8100131d <_malloc_r+0x17e>
81001312:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001315:	c1 e8 0f             	shr    $0xf,%eax
81001318:	83 c0 77             	add    $0x77,%eax
8100131b:	eb 1d                	jmp    8100133a <_malloc_r+0x19b>
8100131d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001320:	c1 e8 09             	shr    $0x9,%eax
81001323:	3d 54 05 00 00       	cmp    $0x554,%eax
81001328:	77 0b                	ja     81001335 <_malloc_r+0x196>
8100132a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100132d:	c1 e8 12             	shr    $0x12,%eax
81001330:	83 c0 7c             	add    $0x7c,%eax
81001333:	eb 05                	jmp    8100133a <_malloc_r+0x19b>
81001335:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100133a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100133d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001340:	83 c0 01             	add    $0x1,%eax
81001343:	01 c0                	add    %eax,%eax
81001345:	c1 e0 02             	shl    $0x2,%eax
81001348:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
8100134d:	83 e8 08             	sub    $0x8,%eax
81001350:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001353:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001356:	8b 40 0c             	mov    0xc(%eax),%eax
81001359:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100135c:	e9 86 00 00 00       	jmp    810013e7 <_malloc_r+0x248>
81001361:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001364:	8b 40 04             	mov    0x4(%eax),%eax
81001367:	83 e0 fc             	and    $0xfffffffc,%eax
8100136a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100136d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001370:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001373:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001376:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100137a:	7e 06                	jle    81001382 <_malloc_r+0x1e3>
8100137c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001380:	eb 71                	jmp    810013f3 <_malloc_r+0x254>
81001382:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001386:	78 56                	js     810013de <_malloc_r+0x23f>
81001388:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100138b:	8b 40 0c             	mov    0xc(%eax),%eax
8100138e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001391:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001394:	8b 40 08             	mov    0x8(%eax),%eax
81001397:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100139a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100139d:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013a0:	89 50 0c             	mov    %edx,0xc(%eax)
810013a3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013a6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013a9:	89 50 08             	mov    %edx,0x8(%eax)
810013ac:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013b2:	01 d0                	add    %edx,%eax
810013b4:	8b 50 04             	mov    0x4(%eax),%edx
810013b7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013bd:	01 c8                	add    %ecx,%eax
810013bf:	83 ca 01             	or     $0x1,%edx
810013c2:	89 50 04             	mov    %edx,0x4(%eax)
810013c5:	83 ec 0c             	sub    $0xc,%esp
810013c8:	ff 75 08             	push   0x8(%ebp)
810013cb:	e8 fb 07 00 00       	call   81001bcb <__malloc_unlock>
810013d0:	83 c4 10             	add    $0x10,%esp
810013d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d6:	83 c0 08             	add    $0x8,%eax
810013d9:	e9 de 05 00 00       	jmp    810019bc <_malloc_r+0x81d>
810013de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e1:	8b 40 0c             	mov    0xc(%eax),%eax
810013e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ea:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810013ed:	0f 85 6e ff ff ff    	jne    81001361 <_malloc_r+0x1c2>
810013f3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810013f7:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
810013fc:	8b 40 08             	mov    0x8(%eax),%eax
810013ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001402:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
81001407:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100140a:	0f 84 9c 02 00 00    	je     810016ac <_malloc_r+0x50d>
81001410:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001413:	8b 40 04             	mov    0x4(%eax),%eax
81001416:	83 e0 fc             	and    $0xfffffffc,%eax
81001419:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100141c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100141f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001422:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001425:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001429:	7e 7a                	jle    810014a5 <_malloc_r+0x306>
8100142b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100142e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001431:	01 d0                	add    %edx,%eax
81001433:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001436:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001439:	83 c8 01             	or     $0x1,%eax
8100143c:	89 c2                	mov    %eax,%edx
8100143e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001441:	89 50 04             	mov    %edx,0x4(%eax)
81001444:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
81001449:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100144c:	89 50 0c             	mov    %edx,0xc(%eax)
8100144f:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
81001454:	8b 40 0c             	mov    0xc(%eax),%eax
81001457:	89 42 08             	mov    %eax,0x8(%edx)
8100145a:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
8100145f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001462:	89 50 0c             	mov    %edx,0xc(%eax)
81001465:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001468:	8b 50 0c             	mov    0xc(%eax),%edx
8100146b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100146e:	89 50 08             	mov    %edx,0x8(%eax)
81001471:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001474:	83 c8 01             	or     $0x1,%eax
81001477:	89 c2                	mov    %eax,%edx
81001479:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100147c:	89 50 04             	mov    %edx,0x4(%eax)
8100147f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001482:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001485:	01 c2                	add    %eax,%edx
81001487:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100148a:	89 02                	mov    %eax,(%edx)
8100148c:	83 ec 0c             	sub    $0xc,%esp
8100148f:	ff 75 08             	push   0x8(%ebp)
81001492:	e8 34 07 00 00       	call   81001bcb <__malloc_unlock>
81001497:	83 c4 10             	add    $0x10,%esp
8100149a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149d:	83 c0 08             	add    $0x8,%eax
810014a0:	e9 17 05 00 00       	jmp    810019bc <_malloc_r+0x81d>
810014a5:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
810014aa:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
810014af:	89 50 0c             	mov    %edx,0xc(%eax)
810014b2:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
810014b7:	8b 40 0c             	mov    0xc(%eax),%eax
810014ba:	89 42 08             	mov    %eax,0x8(%edx)
810014bd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014c1:	78 32                	js     810014f5 <_malloc_r+0x356>
810014c3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014c6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014c9:	01 d0                	add    %edx,%eax
810014cb:	8b 50 04             	mov    0x4(%eax),%edx
810014ce:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014d1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d4:	01 c8                	add    %ecx,%eax
810014d6:	83 ca 01             	or     $0x1,%edx
810014d9:	89 50 04             	mov    %edx,0x4(%eax)
810014dc:	83 ec 0c             	sub    $0xc,%esp
810014df:	ff 75 08             	push   0x8(%ebp)
810014e2:	e8 e4 06 00 00       	call   81001bcb <__malloc_unlock>
810014e7:	83 c4 10             	add    $0x10,%esp
810014ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ed:	83 c0 08             	add    $0x8,%eax
810014f0:	e9 c7 04 00 00       	jmp    810019bc <_malloc_r+0x81d>
810014f5:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810014fc:	77 7f                	ja     8100157d <_malloc_r+0x3de>
810014fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001501:	c1 e8 03             	shr    $0x3,%eax
81001504:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001507:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
8100150c:	8b 58 04             	mov    0x4(%eax),%ebx
8100150f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001512:	8d 50 03             	lea    0x3(%eax),%edx
81001515:	85 c0                	test   %eax,%eax
81001517:	0f 48 c2             	cmovs  %edx,%eax
8100151a:	c1 f8 02             	sar    $0x2,%eax
8100151d:	ba 01 00 00 00       	mov    $0x1,%edx
81001522:	89 c1                	mov    %eax,%ecx
81001524:	d3 e2                	shl    %cl,%edx
81001526:	89 d0                	mov    %edx,%eax
81001528:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
8100152d:	09 d8                	or     %ebx,%eax
8100152f:	89 42 04             	mov    %eax,0x4(%edx)
81001532:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001535:	83 c0 01             	add    $0x1,%eax
81001538:	01 c0                	add    %eax,%eax
8100153a:	c1 e0 02             	shl    $0x2,%eax
8100153d:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
81001542:	83 e8 08             	sub    $0x8,%eax
81001545:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001548:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100154b:	8b 40 08             	mov    0x8(%eax),%eax
8100154e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001551:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001554:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001557:	89 50 0c             	mov    %edx,0xc(%eax)
8100155a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100155d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001560:	89 50 08             	mov    %edx,0x8(%eax)
81001563:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001566:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001569:	89 50 08             	mov    %edx,0x8(%eax)
8100156c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100156f:	8b 50 08             	mov    0x8(%eax),%edx
81001572:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001575:	89 50 0c             	mov    %edx,0xc(%eax)
81001578:	e9 2f 01 00 00       	jmp    810016ac <_malloc_r+0x50d>
8100157d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001580:	c1 e8 09             	shr    $0x9,%eax
81001583:	85 c0                	test   %eax,%eax
81001585:	75 08                	jne    8100158f <_malloc_r+0x3f0>
81001587:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100158a:	c1 e8 03             	shr    $0x3,%eax
8100158d:	eb 77                	jmp    81001606 <_malloc_r+0x467>
8100158f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001592:	c1 e8 09             	shr    $0x9,%eax
81001595:	83 f8 04             	cmp    $0x4,%eax
81001598:	77 0b                	ja     810015a5 <_malloc_r+0x406>
8100159a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100159d:	c1 e8 06             	shr    $0x6,%eax
810015a0:	83 c0 38             	add    $0x38,%eax
810015a3:	eb 61                	jmp    81001606 <_malloc_r+0x467>
810015a5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015a8:	c1 e8 09             	shr    $0x9,%eax
810015ab:	83 f8 14             	cmp    $0x14,%eax
810015ae:	77 0b                	ja     810015bb <_malloc_r+0x41c>
810015b0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b3:	c1 e8 09             	shr    $0x9,%eax
810015b6:	83 c0 5b             	add    $0x5b,%eax
810015b9:	eb 4b                	jmp    81001606 <_malloc_r+0x467>
810015bb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015be:	c1 e8 09             	shr    $0x9,%eax
810015c1:	83 f8 54             	cmp    $0x54,%eax
810015c4:	77 0b                	ja     810015d1 <_malloc_r+0x432>
810015c6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015c9:	c1 e8 0c             	shr    $0xc,%eax
810015cc:	83 c0 6e             	add    $0x6e,%eax
810015cf:	eb 35                	jmp    81001606 <_malloc_r+0x467>
810015d1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d4:	c1 e8 09             	shr    $0x9,%eax
810015d7:	3d 54 01 00 00       	cmp    $0x154,%eax
810015dc:	77 0b                	ja     810015e9 <_malloc_r+0x44a>
810015de:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e1:	c1 e8 0f             	shr    $0xf,%eax
810015e4:	83 c0 77             	add    $0x77,%eax
810015e7:	eb 1d                	jmp    81001606 <_malloc_r+0x467>
810015e9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ec:	c1 e8 09             	shr    $0x9,%eax
810015ef:	3d 54 05 00 00       	cmp    $0x554,%eax
810015f4:	77 0b                	ja     81001601 <_malloc_r+0x462>
810015f6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f9:	c1 e8 12             	shr    $0x12,%eax
810015fc:	83 c0 7c             	add    $0x7c,%eax
810015ff:	eb 05                	jmp    81001606 <_malloc_r+0x467>
81001601:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001606:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001609:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100160c:	83 c0 01             	add    $0x1,%eax
8100160f:	01 c0                	add    %eax,%eax
81001611:	c1 e0 02             	shl    $0x2,%eax
81001614:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
81001619:	83 e8 08             	sub    $0x8,%eax
8100161c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100161f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001622:	8b 40 08             	mov    0x8(%eax),%eax
81001625:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001628:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100162b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100162e:	75 36                	jne    81001666 <_malloc_r+0x4c7>
81001630:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001635:	8b 58 04             	mov    0x4(%eax),%ebx
81001638:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100163b:	8d 50 03             	lea    0x3(%eax),%edx
8100163e:	85 c0                	test   %eax,%eax
81001640:	0f 48 c2             	cmovs  %edx,%eax
81001643:	c1 f8 02             	sar    $0x2,%eax
81001646:	ba 01 00 00 00       	mov    $0x1,%edx
8100164b:	89 c1                	mov    %eax,%ecx
8100164d:	d3 e2                	shl    %cl,%edx
8100164f:	89 d0                	mov    %edx,%eax
81001651:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
81001656:	09 d8                	or     %ebx,%eax
81001658:	89 42 04             	mov    %eax,0x4(%edx)
8100165b:	eb 28                	jmp    81001685 <_malloc_r+0x4e6>
8100165d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001660:	8b 40 08             	mov    0x8(%eax),%eax
81001663:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001666:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001669:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100166c:	74 0e                	je     8100167c <_malloc_r+0x4dd>
8100166e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001671:	8b 40 04             	mov    0x4(%eax),%eax
81001674:	83 e0 fc             	and    $0xfffffffc,%eax
81001677:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100167a:	72 e1                	jb     8100165d <_malloc_r+0x4be>
8100167c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100167f:	8b 40 0c             	mov    0xc(%eax),%eax
81001682:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001685:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001688:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100168b:	89 50 0c             	mov    %edx,0xc(%eax)
8100168e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001691:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001694:	89 50 08             	mov    %edx,0x8(%eax)
81001697:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100169a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100169d:	89 50 08             	mov    %edx,0x8(%eax)
810016a0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016a3:	8b 50 08             	mov    0x8(%eax),%edx
810016a6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016a9:	89 50 0c             	mov    %edx,0xc(%eax)
810016ac:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016af:	8d 50 03             	lea    0x3(%eax),%edx
810016b2:	85 c0                	test   %eax,%eax
810016b4:	0f 48 c2             	cmovs  %edx,%eax
810016b7:	c1 f8 02             	sar    $0x2,%eax
810016ba:	ba 01 00 00 00       	mov    $0x1,%edx
810016bf:	89 c1                	mov    %eax,%ecx
810016c1:	d3 e2                	shl    %cl,%edx
810016c3:	89 d0                	mov    %edx,%eax
810016c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016c8:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810016cd:	8b 40 04             	mov    0x4(%eax),%eax
810016d0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810016d3:	0f 87 13 02 00 00    	ja     810018ec <_malloc_r+0x74d>
810016d9:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810016de:	8b 40 04             	mov    0x4(%eax),%eax
810016e1:	23 45 e4             	and    -0x1c(%ebp),%eax
810016e4:	85 c0                	test   %eax,%eax
810016e6:	75 27                	jne    8100170f <_malloc_r+0x570>
810016e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016eb:	83 e0 fc             	and    $0xfffffffc,%eax
810016ee:	83 c0 04             	add    $0x4,%eax
810016f1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810016f4:	d1 65 e4             	shll   -0x1c(%ebp)
810016f7:	eb 07                	jmp    81001700 <_malloc_r+0x561>
810016f9:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810016fd:	d1 65 e4             	shll   -0x1c(%ebp)
81001700:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001705:	8b 40 04             	mov    0x4(%eax),%eax
81001708:	23 45 e4             	and    -0x1c(%ebp),%eax
8100170b:	85 c0                	test   %eax,%eax
8100170d:	74 ea                	je     810016f9 <_malloc_r+0x55a>
8100170f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001712:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001715:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001718:	83 c0 01             	add    $0x1,%eax
8100171b:	01 c0                	add    %eax,%eax
8100171d:	c1 e0 02             	shl    $0x2,%eax
81001720:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
81001725:	83 e8 08             	sub    $0x8,%eax
81001728:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100172b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100172e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001731:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001734:	8b 40 0c             	mov    0xc(%eax),%eax
81001737:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100173a:	e9 22 01 00 00       	jmp    81001861 <_malloc_r+0x6c2>
8100173f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001742:	8b 40 04             	mov    0x4(%eax),%eax
81001745:	83 e0 fc             	and    $0xfffffffc,%eax
81001748:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100174b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100174e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001751:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001754:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001758:	0f 8e 9e 00 00 00    	jle    810017fc <_malloc_r+0x65d>
8100175e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001761:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001764:	01 d0                	add    %edx,%eax
81001766:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001769:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100176c:	83 c8 01             	or     $0x1,%eax
8100176f:	89 c2                	mov    %eax,%edx
81001771:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001774:	89 50 04             	mov    %edx,0x4(%eax)
81001777:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100177a:	8b 40 0c             	mov    0xc(%eax),%eax
8100177d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001780:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001783:	8b 40 08             	mov    0x8(%eax),%eax
81001786:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001789:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100178c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100178f:	89 50 0c             	mov    %edx,0xc(%eax)
81001792:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001795:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001798:	89 50 08             	mov    %edx,0x8(%eax)
8100179b:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
810017a0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017a3:	89 50 0c             	mov    %edx,0xc(%eax)
810017a6:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
810017ab:	8b 40 0c             	mov    0xc(%eax),%eax
810017ae:	89 42 08             	mov    %eax,0x8(%edx)
810017b1:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
810017b6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017b9:	89 50 0c             	mov    %edx,0xc(%eax)
810017bc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017bf:	8b 50 0c             	mov    0xc(%eax),%edx
810017c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017c5:	89 50 08             	mov    %edx,0x8(%eax)
810017c8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017cb:	83 c8 01             	or     $0x1,%eax
810017ce:	89 c2                	mov    %eax,%edx
810017d0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017d3:	89 50 04             	mov    %edx,0x4(%eax)
810017d6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810017d9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017dc:	01 c2                	add    %eax,%edx
810017de:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017e1:	89 02                	mov    %eax,(%edx)
810017e3:	83 ec 0c             	sub    $0xc,%esp
810017e6:	ff 75 08             	push   0x8(%ebp)
810017e9:	e8 dd 03 00 00       	call   81001bcb <__malloc_unlock>
810017ee:	83 c4 10             	add    $0x10,%esp
810017f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017f4:	83 c0 08             	add    $0x8,%eax
810017f7:	e9 c0 01 00 00       	jmp    810019bc <_malloc_r+0x81d>
810017fc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001800:	78 56                	js     81001858 <_malloc_r+0x6b9>
81001802:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001805:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001808:	01 d0                	add    %edx,%eax
8100180a:	8b 50 04             	mov    0x4(%eax),%edx
8100180d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001810:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001813:	01 c8                	add    %ecx,%eax
81001815:	83 ca 01             	or     $0x1,%edx
81001818:	89 50 04             	mov    %edx,0x4(%eax)
8100181b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100181e:	8b 40 0c             	mov    0xc(%eax),%eax
81001821:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001824:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001827:	8b 40 08             	mov    0x8(%eax),%eax
8100182a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100182d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001830:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001833:	89 50 0c             	mov    %edx,0xc(%eax)
81001836:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001839:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100183c:	89 50 08             	mov    %edx,0x8(%eax)
8100183f:	83 ec 0c             	sub    $0xc,%esp
81001842:	ff 75 08             	push   0x8(%ebp)
81001845:	e8 81 03 00 00       	call   81001bcb <__malloc_unlock>
8100184a:	83 c4 10             	add    $0x10,%esp
8100184d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001850:	83 c0 08             	add    $0x8,%eax
81001853:	e9 64 01 00 00       	jmp    810019bc <_malloc_r+0x81d>
81001858:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185b:	8b 40 0c             	mov    0xc(%eax),%eax
8100185e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001861:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001864:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001867:	0f 85 d2 fe ff ff    	jne    8100173f <_malloc_r+0x5a0>
8100186d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001871:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001875:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001878:	83 e0 03             	and    $0x3,%eax
8100187b:	85 c0                	test   %eax,%eax
8100187d:	0f 85 ae fe ff ff    	jne    81001731 <_malloc_r+0x592>
81001883:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001886:	83 e0 03             	and    $0x3,%eax
81001889:	85 c0                	test   %eax,%eax
8100188b:	75 19                	jne    810018a6 <_malloc_r+0x707>
8100188d:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001892:	8b 48 04             	mov    0x4(%eax),%ecx
81001895:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001898:	f7 d0                	not    %eax
8100189a:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
8100189f:	21 c8                	and    %ecx,%eax
810018a1:	89 42 04             	mov    %eax,0x4(%edx)
810018a4:	eb 13                	jmp    810018b9 <_malloc_r+0x71a>
810018a6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018aa:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018ae:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018b1:	8b 40 08             	mov    0x8(%eax),%eax
810018b4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810018b7:	74 ca                	je     81001883 <_malloc_r+0x6e4>
810018b9:	d1 65 e4             	shll   -0x1c(%ebp)
810018bc:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810018c1:	8b 40 04             	mov    0x4(%eax),%eax
810018c4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810018c7:	77 23                	ja     810018ec <_malloc_r+0x74d>
810018c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018cd:	74 1d                	je     810018ec <_malloc_r+0x74d>
810018cf:	eb 07                	jmp    810018d8 <_malloc_r+0x739>
810018d1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810018d5:	d1 65 e4             	shll   -0x1c(%ebp)
810018d8:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810018dd:	8b 40 04             	mov    0x4(%eax),%eax
810018e0:	23 45 e4             	and    -0x1c(%ebp),%eax
810018e3:	85 c0                	test   %eax,%eax
810018e5:	74 ea                	je     810018d1 <_malloc_r+0x732>
810018e7:	e9 23 fe ff ff       	jmp    8100170f <_malloc_r+0x570>
810018ec:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810018f1:	8b 40 08             	mov    0x8(%eax),%eax
810018f4:	8b 40 04             	mov    0x4(%eax),%eax
810018f7:	83 e0 fc             	and    $0xfffffffc,%eax
810018fa:	2b 45 d0             	sub    -0x30(%ebp),%eax
810018fd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001900:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001905:	8b 40 08             	mov    0x8(%eax),%eax
81001908:	8b 40 04             	mov    0x4(%eax),%eax
8100190b:	83 e0 fc             	and    $0xfffffffc,%eax
8100190e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001911:	77 06                	ja     81001919 <_malloc_r+0x77a>
81001913:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001917:	7f 53                	jg     8100196c <_malloc_r+0x7cd>
81001919:	83 ec 08             	sub    $0x8,%esp
8100191c:	ff 75 d0             	push   -0x30(%ebp)
8100191f:	ff 75 08             	push   0x8(%ebp)
81001922:	e8 e5 f5 ff ff       	call   81000f0c <malloc_extend_top>
81001927:	83 c4 10             	add    $0x10,%esp
8100192a:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
8100192f:	8b 40 08             	mov    0x8(%eax),%eax
81001932:	8b 40 04             	mov    0x4(%eax),%eax
81001935:	83 e0 fc             	and    $0xfffffffc,%eax
81001938:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100193b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100193e:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001943:	8b 40 08             	mov    0x8(%eax),%eax
81001946:	8b 40 04             	mov    0x4(%eax),%eax
81001949:	83 e0 fc             	and    $0xfffffffc,%eax
8100194c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100194f:	77 06                	ja     81001957 <_malloc_r+0x7b8>
81001951:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001955:	7f 15                	jg     8100196c <_malloc_r+0x7cd>
81001957:	83 ec 0c             	sub    $0xc,%esp
8100195a:	ff 75 08             	push   0x8(%ebp)
8100195d:	e8 69 02 00 00       	call   81001bcb <__malloc_unlock>
81001962:	83 c4 10             	add    $0x10,%esp
81001965:	b8 00 00 00 00       	mov    $0x0,%eax
8100196a:	eb 50                	jmp    810019bc <_malloc_r+0x81d>
8100196c:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001971:	8b 40 08             	mov    0x8(%eax),%eax
81001974:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001977:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100197a:	83 c8 01             	or     $0x1,%eax
8100197d:	89 c2                	mov    %eax,%edx
8100197f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001982:	89 50 04             	mov    %edx,0x4(%eax)
81001985:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
8100198a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100198d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001990:	01 c8                	add    %ecx,%eax
81001992:	89 42 08             	mov    %eax,0x8(%edx)
81001995:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001998:	83 c8 01             	or     $0x1,%eax
8100199b:	89 c2                	mov    %eax,%edx
8100199d:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810019a2:	8b 40 08             	mov    0x8(%eax),%eax
810019a5:	89 50 04             	mov    %edx,0x4(%eax)
810019a8:	83 ec 0c             	sub    $0xc,%esp
810019ab:	ff 75 08             	push   0x8(%ebp)
810019ae:	e8 18 02 00 00       	call   81001bcb <__malloc_unlock>
810019b3:	83 c4 10             	add    $0x10,%esp
810019b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019b9:	83 c0 08             	add    $0x8,%eax
810019bc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810019bf:	c9                   	leave  
810019c0:	c3                   	ret    
810019c1:	66 90                	xchg   %ax,%ax
810019c3:	66 90                	xchg   %ax,%ax
810019c5:	66 90                	xchg   %ax,%ax
810019c7:	66 90                	xchg   %ax,%ax
810019c9:	66 90                	xchg   %ax,%ax
810019cb:	66 90                	xchg   %ax,%ax
810019cd:	66 90                	xchg   %ax,%ax
810019cf:	90                   	nop

810019d0 <memchr>:
810019d0:	55                   	push   %ebp
810019d1:	89 e5                	mov    %esp,%ebp
810019d3:	57                   	push   %edi
810019d4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810019d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019db:	8b 7d 08             	mov    0x8(%ebp),%edi
810019de:	31 d2                	xor    %edx,%edx
810019e0:	85 c9                	test   %ecx,%ecx
810019e2:	74 79                	je     81001a5d <L20>
810019e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810019ea:	74 28                	je     81001a14 <L5>
810019ec:	3a 07                	cmp    (%edi),%al
810019ee:	74 6a                	je     81001a5a <L15>
810019f0:	47                   	inc    %edi
810019f1:	49                   	dec    %ecx
810019f2:	74 69                	je     81001a5d <L20>
810019f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810019fa:	74 18                	je     81001a14 <L5>
810019fc:	3a 07                	cmp    (%edi),%al
810019fe:	74 5a                	je     81001a5a <L15>
81001a00:	47                   	inc    %edi
81001a01:	49                   	dec    %ecx
81001a02:	74 59                	je     81001a5d <L20>
81001a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a0a:	74 08                	je     81001a14 <L5>
81001a0c:	3a 07                	cmp    (%edi),%al
81001a0e:	74 4a                	je     81001a5a <L15>
81001a10:	47                   	inc    %edi
81001a11:	49                   	dec    %ecx
81001a12:	74 49                	je     81001a5d <L20>

81001a14 <L5>:
81001a14:	88 c4                	mov    %al,%ah
81001a16:	89 c2                	mov    %eax,%edx
81001a18:	c1 e2 10             	shl    $0x10,%edx
81001a1b:	09 d0                	or     %edx,%eax
81001a1d:	53                   	push   %ebx
81001a1e:	66 90                	xchg   %ax,%ax

81001a20 <L8>:
81001a20:	83 e9 04             	sub    $0x4,%ecx
81001a23:	72 1c                	jb     81001a41 <L9>
81001a25:	8b 17                	mov    (%edi),%edx
81001a27:	83 c7 04             	add    $0x4,%edi
81001a2a:	31 c2                	xor    %eax,%edx
81001a2c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a32:	f7 d2                	not    %edx
81001a34:	21 d3                	and    %edx,%ebx
81001a36:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a3c:	74 e2                	je     81001a20 <L8>
81001a3e:	83 ef 04             	sub    $0x4,%edi

81001a41 <L9>:
81001a41:	5b                   	pop    %ebx
81001a42:	31 d2                	xor    %edx,%edx
81001a44:	83 c1 04             	add    $0x4,%ecx
81001a47:	74 14                	je     81001a5d <L20>
81001a49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001a50 <L10>:
81001a50:	3a 07                	cmp    (%edi),%al
81001a52:	74 06                	je     81001a5a <L15>
81001a54:	47                   	inc    %edi
81001a55:	49                   	dec    %ecx
81001a56:	75 f8                	jne    81001a50 <L10>
81001a58:	31 ff                	xor    %edi,%edi

81001a5a <L15>:
81001a5a:	4a                   	dec    %edx
81001a5b:	21 fa                	and    %edi,%edx

81001a5d <L20>:
81001a5d:	89 d0                	mov    %edx,%eax
81001a5f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001a62:	5f                   	pop    %edi
81001a63:	c9                   	leave  
81001a64:	c3                   	ret    
81001a65:	66 90                	xchg   %ax,%ax
81001a67:	90                   	nop

81001a68 <memcpy>:
81001a68:	55                   	push   %ebp
81001a69:	89 e5                	mov    %esp,%ebp
81001a6b:	56                   	push   %esi
81001a6c:	57                   	push   %edi
81001a6d:	53                   	push   %ebx
81001a6e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a71:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a74:	8b 75 0c             	mov    0xc(%ebp),%esi
81001a77:	fc                   	cld    
81001a78:	83 f9 08             	cmp    $0x8,%ecx
81001a7b:	76 26                	jbe    81001aa3 <memcpy+0x3b>
81001a7d:	89 fa                	mov    %edi,%edx
81001a7f:	89 cb                	mov    %ecx,%ebx
81001a81:	83 e2 03             	and    $0x3,%edx
81001a84:	74 10                	je     81001a96 <memcpy+0x2e>
81001a86:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a8b:	29 d1                	sub    %edx,%ecx
81001a8d:	83 e1 03             	and    $0x3,%ecx
81001a90:	29 cb                	sub    %ecx,%ebx
81001a92:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a94:	89 d9                	mov    %ebx,%ecx
81001a96:	c1 e9 02             	shr    $0x2,%ecx
81001a99:	8d 76 00             	lea    0x0(%esi),%esi
81001a9c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a9e:	89 d9                	mov    %ebx,%ecx
81001aa0:	83 e1 03             	and    $0x3,%ecx
81001aa3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001aa5:	8b 45 08             	mov    0x8(%ebp),%eax
81001aa8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001aab:	5b                   	pop    %ebx
81001aac:	5f                   	pop    %edi
81001aad:	5e                   	pop    %esi
81001aae:	c9                   	leave  
81001aaf:	c3                   	ret    

81001ab0 <memmove>:
81001ab0:	55                   	push   %ebp
81001ab1:	89 e5                	mov    %esp,%ebp
81001ab3:	56                   	push   %esi
81001ab4:	57                   	push   %edi
81001ab5:	53                   	push   %ebx
81001ab6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ab9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001abc:	8b 75 0c             	mov    0xc(%ebp),%esi
81001abf:	fc                   	cld    
81001ac0:	39 fe                	cmp    %edi,%esi
81001ac2:	73 43                	jae    81001b07 <memmove+0x57>
81001ac4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001ac8:	39 df                	cmp    %ebx,%edi
81001aca:	77 3b                	ja     81001b07 <memmove+0x57>
81001acc:	01 ce                	add    %ecx,%esi
81001ace:	01 cf                	add    %ecx,%edi
81001ad0:	fd                   	std    
81001ad1:	83 f9 08             	cmp    $0x8,%ecx
81001ad4:	76 2b                	jbe    81001b01 <memmove+0x51>
81001ad6:	89 fa                	mov    %edi,%edx
81001ad8:	89 cb                	mov    %ecx,%ebx
81001ada:	83 e2 03             	and    $0x3,%edx
81001add:	74 0c                	je     81001aeb <memmove+0x3b>
81001adf:	89 d1                	mov    %edx,%ecx
81001ae1:	4e                   	dec    %esi
81001ae2:	4f                   	dec    %edi
81001ae3:	29 cb                	sub    %ecx,%ebx
81001ae5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ae7:	89 d9                	mov    %ebx,%ecx
81001ae9:	46                   	inc    %esi
81001aea:	47                   	inc    %edi
81001aeb:	c1 e9 02             	shr    $0x2,%ecx
81001aee:	83 ee 04             	sub    $0x4,%esi
81001af1:	83 ef 04             	sub    $0x4,%edi
81001af4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001af6:	83 c6 04             	add    $0x4,%esi
81001af9:	83 c7 04             	add    $0x4,%edi
81001afc:	89 d9                	mov    %ebx,%ecx
81001afe:	83 e1 03             	and    $0x3,%ecx
81001b01:	4e                   	dec    %esi
81001b02:	4f                   	dec    %edi
81001b03:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b05:	eb 2a                	jmp    81001b31 <memmove+0x81>
81001b07:	83 f9 08             	cmp    $0x8,%ecx
81001b0a:	76 23                	jbe    81001b2f <memmove+0x7f>
81001b0c:	89 fa                	mov    %edi,%edx
81001b0e:	89 cb                	mov    %ecx,%ebx
81001b10:	83 e2 03             	and    $0x3,%edx
81001b13:	74 10                	je     81001b25 <memmove+0x75>
81001b15:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b1a:	29 d1                	sub    %edx,%ecx
81001b1c:	83 e1 03             	and    $0x3,%ecx
81001b1f:	29 cb                	sub    %ecx,%ebx
81001b21:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b23:	89 d9                	mov    %ebx,%ecx
81001b25:	c1 e9 02             	shr    $0x2,%ecx
81001b28:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b2a:	89 d9                	mov    %ebx,%ecx
81001b2c:	83 e1 03             	and    $0x3,%ecx
81001b2f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b31:	8b 45 08             	mov    0x8(%ebp),%eax
81001b34:	fc                   	cld    
81001b35:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b38:	5b                   	pop    %ebx
81001b39:	5f                   	pop    %edi
81001b3a:	5e                   	pop    %esi
81001b3b:	c9                   	leave  
81001b3c:	c3                   	ret    

81001b3d <memset>:
81001b3d:	55                   	push   %ebp
81001b3e:	89 e5                	mov    %esp,%ebp
81001b40:	57                   	push   %edi
81001b41:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b44:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b48:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b4b:	fc                   	cld    
81001b4c:	83 f9 10             	cmp    $0x10,%ecx
81001b4f:	76 69                	jbe    81001bba <memset+0x7d>
81001b51:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b57:	74 4c                	je     81001ba5 <memset+0x68>
81001b59:	88 07                	mov    %al,(%edi)
81001b5b:	47                   	inc    %edi
81001b5c:	49                   	dec    %ecx
81001b5d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b63:	74 40                	je     81001ba5 <memset+0x68>
81001b65:	88 07                	mov    %al,(%edi)
81001b67:	47                   	inc    %edi
81001b68:	49                   	dec    %ecx
81001b69:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b6f:	74 34                	je     81001ba5 <memset+0x68>
81001b71:	88 07                	mov    %al,(%edi)
81001b73:	47                   	inc    %edi
81001b74:	49                   	dec    %ecx
81001b75:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b7b:	74 28                	je     81001ba5 <memset+0x68>
81001b7d:	88 07                	mov    %al,(%edi)
81001b7f:	47                   	inc    %edi
81001b80:	49                   	dec    %ecx
81001b81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b87:	74 1c                	je     81001ba5 <memset+0x68>
81001b89:	88 07                	mov    %al,(%edi)
81001b8b:	47                   	inc    %edi
81001b8c:	49                   	dec    %ecx
81001b8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b93:	74 10                	je     81001ba5 <memset+0x68>
81001b95:	88 07                	mov    %al,(%edi)
81001b97:	47                   	inc    %edi
81001b98:	49                   	dec    %ecx
81001b99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b9f:	74 04                	je     81001ba5 <memset+0x68>
81001ba1:	88 07                	mov    %al,(%edi)
81001ba3:	47                   	inc    %edi
81001ba4:	49                   	dec    %ecx
81001ba5:	88 c4                	mov    %al,%ah
81001ba7:	89 c2                	mov    %eax,%edx
81001ba9:	c1 e2 10             	shl    $0x10,%edx
81001bac:	09 d0                	or     %edx,%eax
81001bae:	89 ca                	mov    %ecx,%edx
81001bb0:	c1 e9 02             	shr    $0x2,%ecx
81001bb3:	83 e2 03             	and    $0x3,%edx
81001bb6:	f3 ab                	rep stos %eax,%es:(%edi)
81001bb8:	89 d1                	mov    %edx,%ecx
81001bba:	f3 aa                	rep stos %al,%es:(%edi)
81001bbc:	8b 45 08             	mov    0x8(%ebp),%eax
81001bbf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001bc2:	5f                   	pop    %edi
81001bc3:	c9                   	leave  
81001bc4:	c3                   	ret    

81001bc5 <__malloc_lock>:
81001bc5:	55                   	push   %ebp
81001bc6:	89 e5                	mov    %esp,%ebp
81001bc8:	90                   	nop
81001bc9:	5d                   	pop    %ebp
81001bca:	c3                   	ret    

81001bcb <__malloc_unlock>:
81001bcb:	55                   	push   %ebp
81001bcc:	89 e5                	mov    %esp,%ebp
81001bce:	90                   	nop
81001bcf:	5d                   	pop    %ebp
81001bd0:	c3                   	ret    

81001bd1 <_realloc_r>:
81001bd1:	55                   	push   %ebp
81001bd2:	89 e5                	mov    %esp,%ebp
81001bd4:	83 ec 78             	sub    $0x78,%esp
81001bd7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001bdb:	75 16                	jne    81001bf3 <_realloc_r+0x22>
81001bdd:	83 ec 08             	sub    $0x8,%esp
81001be0:	ff 75 10             	push   0x10(%ebp)
81001be3:	ff 75 08             	push   0x8(%ebp)
81001be6:	e8 b4 f5 ff ff       	call   8100119f <_malloc_r>
81001beb:	83 c4 10             	add    $0x10,%esp
81001bee:	e9 b6 08 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
81001bf3:	83 ec 0c             	sub    $0xc,%esp
81001bf6:	ff 75 08             	push   0x8(%ebp)
81001bf9:	e8 c7 ff ff ff       	call   81001bc5 <__malloc_lock>
81001bfe:	83 c4 10             	add    $0x10,%esp
81001c01:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c04:	83 e8 08             	sub    $0x8,%eax
81001c07:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001c0a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c10:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c13:	8b 40 04             	mov    0x4(%eax),%eax
81001c16:	83 e0 fc             	and    $0xfffffffc,%eax
81001c19:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001c1c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c1f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c22:	8b 45 10             	mov    0x10(%ebp),%eax
81001c25:	83 c0 0b             	add    $0xb,%eax
81001c28:	83 f8 16             	cmp    $0x16,%eax
81001c2b:	76 0b                	jbe    81001c38 <_realloc_r+0x67>
81001c2d:	8b 45 10             	mov    0x10(%ebp),%eax
81001c30:	83 c0 0b             	add    $0xb,%eax
81001c33:	83 e0 f8             	and    $0xfffffff8,%eax
81001c36:	eb 05                	jmp    81001c3d <_realloc_r+0x6c>
81001c38:	b8 10 00 00 00       	mov    $0x10,%eax
81001c3d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001c40:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c43:	85 c0                	test   %eax,%eax
81001c45:	78 08                	js     81001c4f <_realloc_r+0x7e>
81001c47:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c4a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001c4d:	73 13                	jae    81001c62 <_realloc_r+0x91>
81001c4f:	8b 45 08             	mov    0x8(%ebp),%eax
81001c52:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001c58:	b8 00 00 00 00       	mov    $0x0,%eax
81001c5d:	e9 47 08 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
81001c62:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001c65:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c68:	39 c2                	cmp    %eax,%edx
81001c6a:	0f 8d 8b 07 00 00    	jge    810023fb <_realloc_r+0x82a>
81001c70:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001c73:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c76:	01 d0                	add    %edx,%eax
81001c78:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c7b:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001c80:	8b 40 08             	mov    0x8(%eax),%eax
81001c83:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c86:	74 1e                	je     81001ca6 <_realloc_r+0xd5>
81001c88:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c8b:	8b 40 04             	mov    0x4(%eax),%eax
81001c8e:	83 e0 fe             	and    $0xfffffffe,%eax
81001c91:	89 c2                	mov    %eax,%edx
81001c93:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c96:	01 d0                	add    %edx,%eax
81001c98:	8b 40 04             	mov    0x4(%eax),%eax
81001c9b:	83 e0 01             	and    $0x1,%eax
81001c9e:	85 c0                	test   %eax,%eax
81001ca0:	0f 85 ca 00 00 00    	jne    81001d70 <_realloc_r+0x19f>
81001ca6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ca9:	8b 40 04             	mov    0x4(%eax),%eax
81001cac:	83 e0 fc             	and    $0xfffffffc,%eax
81001caf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cb2:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001cb7:	8b 40 08             	mov    0x8(%eax),%eax
81001cba:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001cbd:	75 71                	jne    81001d30 <_realloc_r+0x15f>
81001cbf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cc2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cc5:	01 d0                	add    %edx,%eax
81001cc7:	89 c2                	mov    %eax,%edx
81001cc9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001ccc:	83 c0 10             	add    $0x10,%eax
81001ccf:	39 c2                	cmp    %eax,%edx
81001cd1:	0f 8c a9 00 00 00    	jl     81001d80 <_realloc_r+0x1af>
81001cd7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cda:	01 45 f0             	add    %eax,-0x10(%ebp)
81001cdd:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
81001ce2:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001ce5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001ce8:	01 c8                	add    %ecx,%eax
81001cea:	89 42 08             	mov    %eax,0x8(%edx)
81001ced:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cf0:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001cf3:	89 c2                	mov    %eax,%edx
81001cf5:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001cfa:	8b 40 08             	mov    0x8(%eax),%eax
81001cfd:	83 ca 01             	or     $0x1,%edx
81001d00:	89 50 04             	mov    %edx,0x4(%eax)
81001d03:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d06:	8b 40 04             	mov    0x4(%eax),%eax
81001d09:	83 e0 01             	and    $0x1,%eax
81001d0c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001d0f:	89 c2                	mov    %eax,%edx
81001d11:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d14:	89 50 04             	mov    %edx,0x4(%eax)
81001d17:	83 ec 0c             	sub    $0xc,%esp
81001d1a:	ff 75 08             	push   0x8(%ebp)
81001d1d:	e8 a9 fe ff ff       	call   81001bcb <__malloc_unlock>
81001d22:	83 c4 10             	add    $0x10,%esp
81001d25:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d28:	83 c0 08             	add    $0x8,%eax
81001d2b:	e9 79 07 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
81001d30:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d36:	01 d0                	add    %edx,%eax
81001d38:	89 c2                	mov    %eax,%edx
81001d3a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d3d:	39 c2                	cmp    %eax,%edx
81001d3f:	7c 3f                	jl     81001d80 <_realloc_r+0x1af>
81001d41:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d44:	8b 40 0c             	mov    0xc(%eax),%eax
81001d47:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d4a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d4d:	8b 40 08             	mov    0x8(%eax),%eax
81001d50:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001d53:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001d56:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001d59:	89 50 0c             	mov    %edx,0xc(%eax)
81001d5c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001d5f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001d62:	89 50 08             	mov    %edx,0x8(%eax)
81001d65:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d68:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d6b:	e9 8c 06 00 00       	jmp    810023fc <_realloc_r+0x82b>
81001d70:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001d77:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001d7e:	eb 01                	jmp    81001d81 <_realloc_r+0x1b0>
81001d80:	90                   	nop
81001d81:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d84:	8b 40 04             	mov    0x4(%eax),%eax
81001d87:	83 e0 01             	and    $0x1,%eax
81001d8a:	85 c0                	test   %eax,%eax
81001d8c:	0f 85 d6 04 00 00    	jne    81002268 <_realloc_r+0x697>
81001d92:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d95:	8b 00                	mov    (%eax),%eax
81001d97:	f7 d8                	neg    %eax
81001d99:	89 c2                	mov    %eax,%edx
81001d9b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d9e:	01 d0                	add    %edx,%eax
81001da0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001da3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001da6:	8b 40 04             	mov    0x4(%eax),%eax
81001da9:	83 e0 fc             	and    $0xfffffffc,%eax
81001dac:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001daf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001db3:	0f 84 4a 03 00 00    	je     81002103 <_realloc_r+0x532>
81001db9:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001dbe:	8b 40 08             	mov    0x8(%eax),%eax
81001dc1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dc4:	0f 85 b0 01 00 00    	jne    81001f7a <_realloc_r+0x3a9>
81001dca:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001dcd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001dd0:	01 c2                	add    %eax,%edx
81001dd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001dd5:	01 d0                	add    %edx,%eax
81001dd7:	89 c2                	mov    %eax,%edx
81001dd9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001ddc:	83 c0 10             	add    $0x10,%eax
81001ddf:	39 c2                	cmp    %eax,%edx
81001de1:	0f 8c 1c 03 00 00    	jl     81002103 <_realloc_r+0x532>
81001de7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001dea:	8b 40 0c             	mov    0xc(%eax),%eax
81001ded:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001df0:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001df3:	8b 40 08             	mov    0x8(%eax),%eax
81001df6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001df9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001dfc:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001dff:	89 50 0c             	mov    %edx,0xc(%eax)
81001e02:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001e05:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001e08:	89 50 08             	mov    %edx,0x8(%eax)
81001e0b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e0e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e11:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001e14:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e17:	01 d0                	add    %edx,%eax
81001e19:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e1f:	83 c0 08             	add    $0x8,%eax
81001e22:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001e25:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001e28:	83 e8 04             	sub    $0x4,%eax
81001e2b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001e2e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001e32:	0f 87 de 00 00 00    	ja     81001f16 <_realloc_r+0x345>
81001e38:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e3b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e3e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001e41:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e44:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001e48:	0f 86 90 00 00 00    	jbe    81001ede <_realloc_r+0x30d>
81001e4e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e51:	8d 42 04             	lea    0x4(%edx),%eax
81001e54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e57:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e5a:	8d 48 04             	lea    0x4(%eax),%ecx
81001e5d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e60:	8b 12                	mov    (%edx),%edx
81001e62:	89 10                	mov    %edx,(%eax)
81001e64:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e67:	8d 42 04             	lea    0x4(%edx),%eax
81001e6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e6d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e70:	8d 48 04             	lea    0x4(%eax),%ecx
81001e73:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e76:	8b 12                	mov    (%edx),%edx
81001e78:	89 10                	mov    %edx,(%eax)
81001e7a:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001e7e:	76 5e                	jbe    81001ede <_realloc_r+0x30d>
81001e80:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e83:	8d 42 04             	lea    0x4(%edx),%eax
81001e86:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e89:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e8c:	8d 48 04             	lea    0x4(%eax),%ecx
81001e8f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e92:	8b 12                	mov    (%edx),%edx
81001e94:	89 10                	mov    %edx,(%eax)
81001e96:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e99:	8d 42 04             	lea    0x4(%edx),%eax
81001e9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e9f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ea2:	8d 48 04             	lea    0x4(%eax),%ecx
81001ea5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ea8:	8b 12                	mov    (%edx),%edx
81001eaa:	89 10                	mov    %edx,(%eax)
81001eac:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001eb0:	76 2c                	jbe    81001ede <_realloc_r+0x30d>
81001eb2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001eb5:	8d 42 04             	lea    0x4(%edx),%eax
81001eb8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ebb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ebe:	8d 48 04             	lea    0x4(%eax),%ecx
81001ec1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ec4:	8b 12                	mov    (%edx),%edx
81001ec6:	89 10                	mov    %edx,(%eax)
81001ec8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ecb:	8d 42 04             	lea    0x4(%edx),%eax
81001ece:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ed1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ed4:	8d 48 04             	lea    0x4(%eax),%ecx
81001ed7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eda:	8b 12                	mov    (%edx),%edx
81001edc:	89 10                	mov    %edx,(%eax)
81001ede:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ee1:	8d 42 04             	lea    0x4(%edx),%eax
81001ee4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ee7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eea:	8d 48 04             	lea    0x4(%eax),%ecx
81001eed:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ef0:	8b 12                	mov    (%edx),%edx
81001ef2:	89 10                	mov    %edx,(%eax)
81001ef4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ef7:	8d 42 04             	lea    0x4(%edx),%eax
81001efa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001efd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f00:	8d 48 04             	lea    0x4(%eax),%ecx
81001f03:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f06:	8b 12                	mov    (%edx),%edx
81001f08:	89 10                	mov    %edx,(%eax)
81001f0a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f0d:	8b 10                	mov    (%eax),%edx
81001f0f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f12:	89 10                	mov    %edx,(%eax)
81001f14:	eb 14                	jmp    81001f2a <_realloc_r+0x359>
81001f16:	83 ec 04             	sub    $0x4,%esp
81001f19:	ff 75 a0             	push   -0x60(%ebp)
81001f1c:	ff 75 0c             	push   0xc(%ebp)
81001f1f:	ff 75 a8             	push   -0x58(%ebp)
81001f22:	e8 89 fb ff ff       	call   81001ab0 <memmove>
81001f27:	83 c4 10             	add    $0x10,%esp
81001f2a:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
81001f2f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001f32:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f35:	01 c8                	add    %ecx,%eax
81001f37:	89 42 08             	mov    %eax,0x8(%edx)
81001f3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f3d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001f40:	89 c2                	mov    %eax,%edx
81001f42:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81001f47:	8b 40 08             	mov    0x8(%eax),%eax
81001f4a:	83 ca 01             	or     $0x1,%edx
81001f4d:	89 50 04             	mov    %edx,0x4(%eax)
81001f50:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f53:	8b 40 04             	mov    0x4(%eax),%eax
81001f56:	83 e0 01             	and    $0x1,%eax
81001f59:	0b 45 bc             	or     -0x44(%ebp),%eax
81001f5c:	89 c2                	mov    %eax,%edx
81001f5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f61:	89 50 04             	mov    %edx,0x4(%eax)
81001f64:	83 ec 0c             	sub    $0xc,%esp
81001f67:	ff 75 08             	push   0x8(%ebp)
81001f6a:	e8 5c fc ff ff       	call   81001bcb <__malloc_unlock>
81001f6f:	83 c4 10             	add    $0x10,%esp
81001f72:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f75:	e9 2f 05 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
81001f7a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f7d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f80:	01 c2                	add    %eax,%edx
81001f82:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f85:	01 d0                	add    %edx,%eax
81001f87:	89 c2                	mov    %eax,%edx
81001f89:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f8c:	39 c2                	cmp    %eax,%edx
81001f8e:	0f 8c 6f 01 00 00    	jl     81002103 <_realloc_r+0x532>
81001f94:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f97:	8b 40 0c             	mov    0xc(%eax),%eax
81001f9a:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001f9d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fa0:	8b 40 08             	mov    0x8(%eax),%eax
81001fa3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fa6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fa9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fac:	89 50 0c             	mov    %edx,0xc(%eax)
81001faf:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fb2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fb5:	89 50 08             	mov    %edx,0x8(%eax)
81001fb8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fbb:	8b 40 0c             	mov    0xc(%eax),%eax
81001fbe:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fc1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fc4:	8b 40 08             	mov    0x8(%eax),%eax
81001fc7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fca:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fcd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fd0:	89 50 0c             	mov    %edx,0xc(%eax)
81001fd3:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fd6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fd9:	89 50 08             	mov    %edx,0x8(%eax)
81001fdc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fdf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001fe2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001fe5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001fe8:	01 d0                	add    %edx,%eax
81001fea:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ff0:	83 c0 08             	add    $0x8,%eax
81001ff3:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001ff6:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001ff9:	83 e8 04             	sub    $0x4,%eax
81001ffc:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81001fff:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002003:	0f 87 e1 00 00 00    	ja     810020ea <_realloc_r+0x519>
81002009:	8b 45 0c             	mov    0xc(%ebp),%eax
8100200c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100200f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002012:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002015:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002019:	0f 86 90 00 00 00    	jbe    810020af <_realloc_r+0x4de>
8100201f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002022:	8d 42 04             	lea    0x4(%edx),%eax
81002025:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002028:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100202b:	8d 48 04             	lea    0x4(%eax),%ecx
8100202e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002031:	8b 12                	mov    (%edx),%edx
81002033:	89 10                	mov    %edx,(%eax)
81002035:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002038:	8d 42 04             	lea    0x4(%edx),%eax
8100203b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100203e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002041:	8d 48 04             	lea    0x4(%eax),%ecx
81002044:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002047:	8b 12                	mov    (%edx),%edx
81002049:	89 10                	mov    %edx,(%eax)
8100204b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100204f:	76 5e                	jbe    810020af <_realloc_r+0x4de>
81002051:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002054:	8d 42 04             	lea    0x4(%edx),%eax
81002057:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100205a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100205d:	8d 48 04             	lea    0x4(%eax),%ecx
81002060:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002063:	8b 12                	mov    (%edx),%edx
81002065:	89 10                	mov    %edx,(%eax)
81002067:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100206a:	8d 42 04             	lea    0x4(%edx),%eax
8100206d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002070:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002073:	8d 48 04             	lea    0x4(%eax),%ecx
81002076:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002079:	8b 12                	mov    (%edx),%edx
8100207b:	89 10                	mov    %edx,(%eax)
8100207d:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002081:	76 2c                	jbe    810020af <_realloc_r+0x4de>
81002083:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002086:	8d 42 04             	lea    0x4(%edx),%eax
81002089:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100208c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100208f:	8d 48 04             	lea    0x4(%eax),%ecx
81002092:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002095:	8b 12                	mov    (%edx),%edx
81002097:	89 10                	mov    %edx,(%eax)
81002099:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100209c:	8d 42 04             	lea    0x4(%edx),%eax
8100209f:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020a5:	8d 48 04             	lea    0x4(%eax),%ecx
810020a8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020ab:	8b 12                	mov    (%edx),%edx
810020ad:	89 10                	mov    %edx,(%eax)
810020af:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020b2:	8d 42 04             	lea    0x4(%edx),%eax
810020b5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020bb:	8d 48 04             	lea    0x4(%eax),%ecx
810020be:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020c1:	8b 12                	mov    (%edx),%edx
810020c3:	89 10                	mov    %edx,(%eax)
810020c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020c8:	8d 42 04             	lea    0x4(%edx),%eax
810020cb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020ce:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020d1:	8d 48 04             	lea    0x4(%eax),%ecx
810020d4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020d7:	8b 12                	mov    (%edx),%edx
810020d9:	89 10                	mov    %edx,(%eax)
810020db:	8b 45 dc             	mov    -0x24(%ebp),%eax
810020de:	8b 10                	mov    (%eax),%edx
810020e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020e3:	89 10                	mov    %edx,(%eax)
810020e5:	e9 12 03 00 00       	jmp    810023fc <_realloc_r+0x82b>
810020ea:	83 ec 04             	sub    $0x4,%esp
810020ed:	ff 75 a4             	push   -0x5c(%ebp)
810020f0:	ff 75 0c             	push   0xc(%ebp)
810020f3:	ff 75 a8             	push   -0x58(%ebp)
810020f6:	e8 b5 f9 ff ff       	call   81001ab0 <memmove>
810020fb:	83 c4 10             	add    $0x10,%esp
810020fe:	e9 f9 02 00 00       	jmp    810023fc <_realloc_r+0x82b>
81002103:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002107:	0f 84 5b 01 00 00    	je     81002268 <_realloc_r+0x697>
8100210d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002110:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002113:	01 d0                	add    %edx,%eax
81002115:	89 c2                	mov    %eax,%edx
81002117:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100211a:	39 c2                	cmp    %eax,%edx
8100211c:	0f 8c 46 01 00 00    	jl     81002268 <_realloc_r+0x697>
81002122:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002125:	8b 40 0c             	mov    0xc(%eax),%eax
81002128:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100212b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100212e:	8b 40 08             	mov    0x8(%eax),%eax
81002131:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002134:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002137:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100213a:	89 50 0c             	mov    %edx,0xc(%eax)
8100213d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002140:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002143:	89 50 08             	mov    %edx,0x8(%eax)
81002146:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002149:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100214c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100214f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002152:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002155:	83 c0 08             	add    $0x8,%eax
81002158:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100215b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100215e:	83 e8 04             	sub    $0x4,%eax
81002161:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002164:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002168:	0f 87 e1 00 00 00    	ja     8100224f <_realloc_r+0x67e>
8100216e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002171:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002174:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002177:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100217a:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
8100217e:	0f 86 90 00 00 00    	jbe    81002214 <_realloc_r+0x643>
81002184:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002187:	8d 42 04             	lea    0x4(%edx),%eax
8100218a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100218d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002190:	8d 48 04             	lea    0x4(%eax),%ecx
81002193:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002196:	8b 12                	mov    (%edx),%edx
81002198:	89 10                	mov    %edx,(%eax)
8100219a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100219d:	8d 42 04             	lea    0x4(%edx),%eax
810021a0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021a3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021a6:	8d 48 04             	lea    0x4(%eax),%ecx
810021a9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021ac:	8b 12                	mov    (%edx),%edx
810021ae:	89 10                	mov    %edx,(%eax)
810021b0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810021b4:	76 5e                	jbe    81002214 <_realloc_r+0x643>
810021b6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021b9:	8d 42 04             	lea    0x4(%edx),%eax
810021bc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021bf:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021c2:	8d 48 04             	lea    0x4(%eax),%ecx
810021c5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021c8:	8b 12                	mov    (%edx),%edx
810021ca:	89 10                	mov    %edx,(%eax)
810021cc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021cf:	8d 42 04             	lea    0x4(%edx),%eax
810021d2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021d5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021d8:	8d 48 04             	lea    0x4(%eax),%ecx
810021db:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021de:	8b 12                	mov    (%edx),%edx
810021e0:	89 10                	mov    %edx,(%eax)
810021e2:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810021e6:	76 2c                	jbe    81002214 <_realloc_r+0x643>
810021e8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021eb:	8d 42 04             	lea    0x4(%edx),%eax
810021ee:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021f4:	8d 48 04             	lea    0x4(%eax),%ecx
810021f7:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021fa:	8b 12                	mov    (%edx),%edx
810021fc:	89 10                	mov    %edx,(%eax)
810021fe:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002201:	8d 42 04             	lea    0x4(%edx),%eax
81002204:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002207:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100220a:	8d 48 04             	lea    0x4(%eax),%ecx
8100220d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002210:	8b 12                	mov    (%edx),%edx
81002212:	89 10                	mov    %edx,(%eax)
81002214:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002217:	8d 42 04             	lea    0x4(%edx),%eax
8100221a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100221d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002220:	8d 48 04             	lea    0x4(%eax),%ecx
81002223:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002226:	8b 12                	mov    (%edx),%edx
81002228:	89 10                	mov    %edx,(%eax)
8100222a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100222d:	8d 42 04             	lea    0x4(%edx),%eax
81002230:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002233:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002236:	8d 48 04             	lea    0x4(%eax),%ecx
81002239:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100223c:	8b 12                	mov    (%edx),%edx
8100223e:	89 10                	mov    %edx,(%eax)
81002240:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002243:	8b 10                	mov    (%eax),%edx
81002245:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002248:	89 10                	mov    %edx,(%eax)
8100224a:	e9 ad 01 00 00       	jmp    810023fc <_realloc_r+0x82b>
8100224f:	83 ec 04             	sub    $0x4,%esp
81002252:	ff 75 9c             	push   -0x64(%ebp)
81002255:	ff 75 0c             	push   0xc(%ebp)
81002258:	ff 75 a8             	push   -0x58(%ebp)
8100225b:	e8 50 f8 ff ff       	call   81001ab0 <memmove>
81002260:	83 c4 10             	add    $0x10,%esp
81002263:	e9 94 01 00 00       	jmp    810023fc <_realloc_r+0x82b>
81002268:	83 ec 08             	sub    $0x8,%esp
8100226b:	ff 75 10             	push   0x10(%ebp)
8100226e:	ff 75 08             	push   0x8(%ebp)
81002271:	e8 29 ef ff ff       	call   8100119f <_malloc_r>
81002276:	83 c4 10             	add    $0x10,%esp
81002279:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100227c:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002280:	75 18                	jne    8100229a <_realloc_r+0x6c9>
81002282:	83 ec 0c             	sub    $0xc,%esp
81002285:	ff 75 08             	push   0x8(%ebp)
81002288:	e8 3e f9 ff ff       	call   81001bcb <__malloc_unlock>
8100228d:	83 c4 10             	add    $0x10,%esp
81002290:	b8 00 00 00 00       	mov    $0x0,%eax
81002295:	e9 0f 02 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
8100229a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100229d:	83 e8 08             	sub    $0x8,%eax
810022a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022a3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022a6:	8b 40 04             	mov    0x4(%eax),%eax
810022a9:	83 e0 fe             	and    $0xfffffffe,%eax
810022ac:	89 c2                	mov    %eax,%edx
810022ae:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022b1:	01 d0                	add    %edx,%eax
810022b3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810022b6:	75 17                	jne    810022cf <_realloc_r+0x6fe>
810022b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022bb:	8b 40 04             	mov    0x4(%eax),%eax
810022be:	83 e0 fc             	and    $0xfffffffc,%eax
810022c1:	01 45 f0             	add    %eax,-0x10(%ebp)
810022c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022ca:	e9 2d 01 00 00       	jmp    810023fc <_realloc_r+0x82b>
810022cf:	8b 45 c0             	mov    -0x40(%ebp),%eax
810022d2:	83 e8 04             	sub    $0x4,%eax
810022d5:	89 45 98             	mov    %eax,-0x68(%ebp)
810022d8:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810022dc:	0f 87 de 00 00 00    	ja     810023c0 <_realloc_r+0x7ef>
810022e2:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022e8:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022eb:	89 45 c8             	mov    %eax,-0x38(%ebp)
810022ee:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810022f2:	0f 86 90 00 00 00    	jbe    81002388 <_realloc_r+0x7b7>
810022f8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022fb:	8d 42 04             	lea    0x4(%edx),%eax
810022fe:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002301:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002304:	8d 48 04             	lea    0x4(%eax),%ecx
81002307:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100230a:	8b 12                	mov    (%edx),%edx
8100230c:	89 10                	mov    %edx,(%eax)
8100230e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002311:	8d 42 04             	lea    0x4(%edx),%eax
81002314:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002317:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100231a:	8d 48 04             	lea    0x4(%eax),%ecx
8100231d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002320:	8b 12                	mov    (%edx),%edx
81002322:	89 10                	mov    %edx,(%eax)
81002324:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002328:	76 5e                	jbe    81002388 <_realloc_r+0x7b7>
8100232a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100232d:	8d 42 04             	lea    0x4(%edx),%eax
81002330:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002333:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002336:	8d 48 04             	lea    0x4(%eax),%ecx
81002339:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100233c:	8b 12                	mov    (%edx),%edx
8100233e:	89 10                	mov    %edx,(%eax)
81002340:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002343:	8d 42 04             	lea    0x4(%edx),%eax
81002346:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002349:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100234c:	8d 48 04             	lea    0x4(%eax),%ecx
8100234f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002352:	8b 12                	mov    (%edx),%edx
81002354:	89 10                	mov    %edx,(%eax)
81002356:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100235a:	76 2c                	jbe    81002388 <_realloc_r+0x7b7>
8100235c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100235f:	8d 42 04             	lea    0x4(%edx),%eax
81002362:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002365:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002368:	8d 48 04             	lea    0x4(%eax),%ecx
8100236b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100236e:	8b 12                	mov    (%edx),%edx
81002370:	89 10                	mov    %edx,(%eax)
81002372:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002375:	8d 42 04             	lea    0x4(%edx),%eax
81002378:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100237b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100237e:	8d 48 04             	lea    0x4(%eax),%ecx
81002381:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002384:	8b 12                	mov    (%edx),%edx
81002386:	89 10                	mov    %edx,(%eax)
81002388:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100238b:	8d 42 04             	lea    0x4(%edx),%eax
8100238e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002391:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002394:	8d 48 04             	lea    0x4(%eax),%ecx
81002397:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100239a:	8b 12                	mov    (%edx),%edx
8100239c:	89 10                	mov    %edx,(%eax)
8100239e:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023a1:	8d 42 04             	lea    0x4(%edx),%eax
810023a4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023a7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023aa:	8d 48 04             	lea    0x4(%eax),%ecx
810023ad:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023b0:	8b 12                	mov    (%edx),%edx
810023b2:	89 10                	mov    %edx,(%eax)
810023b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810023b7:	8b 10                	mov    (%eax),%edx
810023b9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023bc:	89 10                	mov    %edx,(%eax)
810023be:	eb 14                	jmp    810023d4 <_realloc_r+0x803>
810023c0:	83 ec 04             	sub    $0x4,%esp
810023c3:	ff 75 98             	push   -0x68(%ebp)
810023c6:	ff 75 0c             	push   0xc(%ebp)
810023c9:	ff 75 a8             	push   -0x58(%ebp)
810023cc:	e8 df f6 ff ff       	call   81001ab0 <memmove>
810023d1:	83 c4 10             	add    $0x10,%esp
810023d4:	83 ec 08             	sub    $0x8,%esp
810023d7:	ff 75 0c             	push   0xc(%ebp)
810023da:	ff 75 08             	push   0x8(%ebp)
810023dd:	e8 0b 0a 00 00       	call   81002ded <_free_r>
810023e2:	83 c4 10             	add    $0x10,%esp
810023e5:	83 ec 0c             	sub    $0xc,%esp
810023e8:	ff 75 08             	push   0x8(%ebp)
810023eb:	e8 db f7 ff ff       	call   81001bcb <__malloc_unlock>
810023f0:	83 c4 10             	add    $0x10,%esp
810023f3:	8b 45 a8             	mov    -0x58(%ebp),%eax
810023f6:	e9 ae 00 00 00       	jmp    810024a9 <_realloc_r+0x8d8>
810023fb:	90                   	nop
810023fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023ff:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002402:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002405:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002409:	76 5d                	jbe    81002468 <_realloc_r+0x897>
8100240b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100240e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002411:	01 d0                	add    %edx,%eax
81002413:	89 45 90             	mov    %eax,-0x70(%ebp)
81002416:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002419:	8b 40 04             	mov    0x4(%eax),%eax
8100241c:	83 e0 01             	and    $0x1,%eax
8100241f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002422:	89 c2                	mov    %eax,%edx
81002424:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002427:	89 50 04             	mov    %edx,0x4(%eax)
8100242a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100242d:	83 c8 01             	or     $0x1,%eax
81002430:	89 c2                	mov    %eax,%edx
81002432:	8b 45 90             	mov    -0x70(%ebp),%eax
81002435:	89 50 04             	mov    %edx,0x4(%eax)
81002438:	8b 55 90             	mov    -0x70(%ebp),%edx
8100243b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100243e:	01 d0                	add    %edx,%eax
81002440:	8b 50 04             	mov    0x4(%eax),%edx
81002443:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002446:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002449:	01 c8                	add    %ecx,%eax
8100244b:	83 ca 01             	or     $0x1,%edx
8100244e:	89 50 04             	mov    %edx,0x4(%eax)
81002451:	8b 45 90             	mov    -0x70(%ebp),%eax
81002454:	83 c0 08             	add    $0x8,%eax
81002457:	83 ec 08             	sub    $0x8,%esp
8100245a:	50                   	push   %eax
8100245b:	ff 75 08             	push   0x8(%ebp)
8100245e:	e8 8a 09 00 00       	call   81002ded <_free_r>
81002463:	83 c4 10             	add    $0x10,%esp
81002466:	eb 2d                	jmp    81002495 <_realloc_r+0x8c4>
81002468:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100246b:	8b 40 04             	mov    0x4(%eax),%eax
8100246e:	83 e0 01             	and    $0x1,%eax
81002471:	0b 45 f0             	or     -0x10(%ebp),%eax
81002474:	89 c2                	mov    %eax,%edx
81002476:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002479:	89 50 04             	mov    %edx,0x4(%eax)
8100247c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100247f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002482:	01 d0                	add    %edx,%eax
81002484:	8b 50 04             	mov    0x4(%eax),%edx
81002487:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100248a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100248d:	01 c8                	add    %ecx,%eax
8100248f:	83 ca 01             	or     $0x1,%edx
81002492:	89 50 04             	mov    %edx,0x4(%eax)
81002495:	83 ec 0c             	sub    $0xc,%esp
81002498:	ff 75 08             	push   0x8(%ebp)
8100249b:	e8 2b f7 ff ff       	call   81001bcb <__malloc_unlock>
810024a0:	83 c4 10             	add    $0x10,%esp
810024a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024a6:	83 c0 08             	add    $0x8,%eax
810024a9:	c9                   	leave  
810024aa:	c3                   	ret    

810024ab <lflush>:
810024ab:	55                   	push   %ebp
810024ac:	89 e5                	mov    %esp,%ebp
810024ae:	83 ec 08             	sub    $0x8,%esp
810024b1:	8b 45 08             	mov    0x8(%ebp),%eax
810024b4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810024b8:	98                   	cwtl   
810024b9:	83 e0 09             	and    $0x9,%eax
810024bc:	83 f8 09             	cmp    $0x9,%eax
810024bf:	75 10                	jne    810024d1 <lflush+0x26>
810024c1:	83 ec 0c             	sub    $0xc,%esp
810024c4:	ff 75 08             	push   0x8(%ebp)
810024c7:	e8 e8 08 00 00       	call   81002db4 <fflush>
810024cc:	83 c4 10             	add    $0x10,%esp
810024cf:	eb 05                	jmp    810024d6 <lflush+0x2b>
810024d1:	b8 00 00 00 00       	mov    $0x0,%eax
810024d6:	c9                   	leave  
810024d7:	c3                   	ret    

810024d8 <__srefill_r>:
810024d8:	55                   	push   %ebp
810024d9:	89 e5                	mov    %esp,%ebp
810024db:	56                   	push   %esi
810024dc:	53                   	push   %ebx
810024dd:	83 ec 10             	sub    $0x10,%esp
810024e0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810024e3:	8b 45 08             	mov    0x8(%ebp),%eax
810024e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024ed:	74 18                	je     81002507 <__srefill_r+0x2f>
810024ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024f2:	8b 40 38             	mov    0x38(%eax),%eax
810024f5:	85 c0                	test   %eax,%eax
810024f7:	75 0e                	jne    81002507 <__srefill_r+0x2f>
810024f9:	83 ec 0c             	sub    $0xc,%esp
810024fc:	ff 75 f4             	push   -0xc(%ebp)
810024ff:	e8 8a e3 ff ff       	call   8100088e <__sinit>
81002504:	83 c4 10             	add    $0x10,%esp
81002507:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100250b:	98                   	cwtl   
8100250c:	25 00 20 00 00       	and    $0x2000,%eax
81002511:	85 c0                	test   %eax,%eax
81002513:	75 14                	jne    81002529 <__srefill_r+0x51>
81002515:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002519:	80 cc 20             	or     $0x20,%ah
8100251c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002520:	8b 43 64             	mov    0x64(%ebx),%eax
81002523:	80 e4 df             	and    $0xdf,%ah
81002526:	89 43 64             	mov    %eax,0x64(%ebx)
81002529:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002530:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002534:	98                   	cwtl   
81002535:	83 e0 20             	and    $0x20,%eax
81002538:	85 c0                	test   %eax,%eax
8100253a:	74 0a                	je     81002546 <__srefill_r+0x6e>
8100253c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002541:	e9 8c 01 00 00       	jmp    810026d2 <__srefill_r+0x1fa>
81002546:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100254a:	98                   	cwtl   
8100254b:	83 e0 04             	and    $0x4,%eax
8100254e:	85 c0                	test   %eax,%eax
81002550:	75 79                	jne    810025cb <__srefill_r+0xf3>
81002552:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002556:	98                   	cwtl   
81002557:	83 e0 10             	and    $0x10,%eax
8100255a:	85 c0                	test   %eax,%eax
8100255c:	75 1e                	jne    8100257c <__srefill_r+0xa4>
8100255e:	8b 45 08             	mov    0x8(%ebp),%eax
81002561:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002567:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100256b:	83 c8 40             	or     $0x40,%eax
8100256e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002572:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002577:	e9 56 01 00 00       	jmp    810026d2 <__srefill_r+0x1fa>
8100257c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002580:	98                   	cwtl   
81002581:	83 e0 08             	and    $0x8,%eax
81002584:	85 c0                	test   %eax,%eax
81002586:	74 36                	je     810025be <__srefill_r+0xe6>
81002588:	83 ec 08             	sub    $0x8,%esp
8100258b:	53                   	push   %ebx
8100258c:	ff 75 08             	push   0x8(%ebp)
8100258f:	e8 c8 07 00 00       	call   81002d5c <_fflush_r>
81002594:	83 c4 10             	add    $0x10,%esp
81002597:	85 c0                	test   %eax,%eax
81002599:	74 0a                	je     810025a5 <__srefill_r+0xcd>
8100259b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025a0:	e9 2d 01 00 00       	jmp    810026d2 <__srefill_r+0x1fa>
810025a5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025a9:	83 e0 f7             	and    $0xfffffff7,%eax
810025ac:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025b0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810025b7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810025be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025c2:	83 c8 04             	or     $0x4,%eax
810025c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025c9:	eb 46                	jmp    81002611 <__srefill_r+0x139>
810025cb:	8b 43 30             	mov    0x30(%ebx),%eax
810025ce:	85 c0                	test   %eax,%eax
810025d0:	74 3f                	je     81002611 <__srefill_r+0x139>
810025d2:	8b 53 30             	mov    0x30(%ebx),%edx
810025d5:	8d 43 40             	lea    0x40(%ebx),%eax
810025d8:	39 c2                	cmp    %eax,%edx
810025da:	74 12                	je     810025ee <__srefill_r+0x116>
810025dc:	8b 43 30             	mov    0x30(%ebx),%eax
810025df:	83 ec 08             	sub    $0x8,%esp
810025e2:	50                   	push   %eax
810025e3:	ff 75 08             	push   0x8(%ebp)
810025e6:	e8 02 08 00 00       	call   81002ded <_free_r>
810025eb:	83 c4 10             	add    $0x10,%esp
810025ee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810025f5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810025f8:	89 43 04             	mov    %eax,0x4(%ebx)
810025fb:	8b 43 04             	mov    0x4(%ebx),%eax
810025fe:	85 c0                	test   %eax,%eax
81002600:	74 0f                	je     81002611 <__srefill_r+0x139>
81002602:	8b 43 38             	mov    0x38(%ebx),%eax
81002605:	89 03                	mov    %eax,(%ebx)
81002607:	b8 00 00 00 00       	mov    $0x0,%eax
8100260c:	e9 c1 00 00 00       	jmp    810026d2 <__srefill_r+0x1fa>
81002611:	8b 43 10             	mov    0x10(%ebx),%eax
81002614:	85 c0                	test   %eax,%eax
81002616:	75 0f                	jne    81002627 <__srefill_r+0x14f>
81002618:	83 ec 08             	sub    $0x8,%esp
8100261b:	53                   	push   %ebx
8100261c:	ff 75 08             	push   0x8(%ebp)
8100261f:	e8 4b 0d 00 00       	call   8100336f <__smakebuf_r>
81002624:	83 c4 10             	add    $0x10,%esp
81002627:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100262b:	98                   	cwtl   
8100262c:	83 e0 03             	and    $0x3,%eax
8100262f:	85 c0                	test   %eax,%eax
81002631:	74 48                	je     8100267b <__srefill_r+0x1a3>
81002633:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002637:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100263b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002641:	a1 58 37 00 81       	mov    0x81003758,%eax
81002646:	83 ec 08             	sub    $0x8,%esp
81002649:	68 ab 24 00 81       	push   $0x810024ab
8100264e:	50                   	push   %eax
8100264f:	e8 e5 e7 ff ff       	call   81000e39 <_fwalk>
81002654:	83 c4 10             	add    $0x10,%esp
81002657:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100265b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100265f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002663:	98                   	cwtl   
81002664:	83 e0 09             	and    $0x9,%eax
81002667:	83 f8 09             	cmp    $0x9,%eax
8100266a:	75 0f                	jne    8100267b <__srefill_r+0x1a3>
8100266c:	83 ec 08             	sub    $0x8,%esp
8100266f:	53                   	push   %ebx
81002670:	ff 75 08             	push   0x8(%ebp)
81002673:	e8 be 04 00 00       	call   81002b36 <__sflush_r>
81002678:	83 c4 10             	add    $0x10,%esp
8100267b:	8b 43 10             	mov    0x10(%ebx),%eax
8100267e:	89 03                	mov    %eax,(%ebx)
81002680:	8b 43 20             	mov    0x20(%ebx),%eax
81002683:	8b 73 14             	mov    0x14(%ebx),%esi
81002686:	8b 0b                	mov    (%ebx),%ecx
81002688:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100268b:	56                   	push   %esi
8100268c:	51                   	push   %ecx
8100268d:	52                   	push   %edx
8100268e:	ff 75 08             	push   0x8(%ebp)
81002691:	ff d0                	call   *%eax
81002693:	83 c4 10             	add    $0x10,%esp
81002696:	89 43 04             	mov    %eax,0x4(%ebx)
81002699:	8b 43 04             	mov    0x4(%ebx),%eax
8100269c:	85 c0                	test   %eax,%eax
8100269e:	7f 2d                	jg     810026cd <__srefill_r+0x1f5>
810026a0:	8b 43 04             	mov    0x4(%ebx),%eax
810026a3:	85 c0                	test   %eax,%eax
810026a5:	75 0d                	jne    810026b4 <__srefill_r+0x1dc>
810026a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026ab:	83 c8 20             	or     $0x20,%eax
810026ae:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026b2:	eb 12                	jmp    810026c6 <__srefill_r+0x1ee>
810026b4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810026bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026bf:	83 c8 40             	or     $0x40,%eax
810026c2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026cb:	eb 05                	jmp    810026d2 <__srefill_r+0x1fa>
810026cd:	b8 00 00 00 00       	mov    $0x0,%eax
810026d2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810026d5:	5b                   	pop    %ebx
810026d6:	5e                   	pop    %esi
810026d7:	5d                   	pop    %ebp
810026d8:	c3                   	ret    

810026d9 <_sbrk_r>:
810026d9:	55                   	push   %ebp
810026da:	89 e5                	mov    %esp,%ebp
810026dc:	83 ec 18             	sub    $0x18,%esp
810026df:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
810026e6:	00 00 00 
810026e9:	83 ec 0c             	sub    $0xc,%esp
810026ec:	ff 75 0c             	push   0xc(%ebp)
810026ef:	e8 cc db ff ff       	call   810002c0 <sbrk>
810026f4:	83 c4 10             	add    $0x10,%esp
810026f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026fa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810026fe:	75 14                	jne    81002714 <_sbrk_r+0x3b>
81002700:	a1 2c 42 00 81       	mov    0x8100422c,%eax
81002705:	85 c0                	test   %eax,%eax
81002707:	74 0b                	je     81002714 <_sbrk_r+0x3b>
81002709:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
8100270f:	8b 45 08             	mov    0x8(%ebp),%eax
81002712:	89 10                	mov    %edx,(%eax)
81002714:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002717:	c9                   	leave  
81002718:	c3                   	ret    

81002719 <__sread>:
81002719:	55                   	push   %ebp
8100271a:	89 e5                	mov    %esp,%ebp
8100271c:	56                   	push   %esi
8100271d:	53                   	push   %ebx
8100271e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002721:	8b 55 14             	mov    0x14(%ebp),%edx
81002724:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002728:	98                   	cwtl   
81002729:	52                   	push   %edx
8100272a:	ff 75 10             	push   0x10(%ebp)
8100272d:	50                   	push   %eax
8100272e:	ff 75 08             	push   0x8(%ebp)
81002731:	e8 b9 0d 00 00       	call   810034ef <_read_r>
81002736:	83 c4 10             	add    $0x10,%esp
81002739:	89 c6                	mov    %eax,%esi
8100273b:	85 f6                	test   %esi,%esi
8100273d:	78 0a                	js     81002749 <__sread+0x30>
8100273f:	8b 43 50             	mov    0x50(%ebx),%eax
81002742:	01 f0                	add    %esi,%eax
81002744:	89 43 50             	mov    %eax,0x50(%ebx)
81002747:	eb 0b                	jmp    81002754 <__sread+0x3b>
81002749:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100274d:	80 e4 ef             	and    $0xef,%ah
81002750:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002754:	89 f0                	mov    %esi,%eax
81002756:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002759:	5b                   	pop    %ebx
8100275a:	5e                   	pop    %esi
8100275b:	5d                   	pop    %ebp
8100275c:	c3                   	ret    

8100275d <__seofread>:
8100275d:	55                   	push   %ebp
8100275e:	89 e5                	mov    %esp,%ebp
81002760:	b8 00 00 00 00       	mov    $0x0,%eax
81002765:	5d                   	pop    %ebp
81002766:	c3                   	ret    

81002767 <__swrite>:
81002767:	55                   	push   %ebp
81002768:	89 e5                	mov    %esp,%ebp
8100276a:	53                   	push   %ebx
8100276b:	83 ec 14             	sub    $0x14,%esp
8100276e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002771:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002775:	98                   	cwtl   
81002776:	25 00 01 00 00       	and    $0x100,%eax
8100277b:	85 c0                	test   %eax,%eax
8100277d:	74 15                	je     81002794 <__swrite+0x2d>
8100277f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002783:	98                   	cwtl   
81002784:	6a 02                	push   $0x2
81002786:	6a 00                	push   $0x0
81002788:	50                   	push   %eax
81002789:	ff 75 08             	push   0x8(%ebp)
8100278c:	e8 98 0b 00 00       	call   81003329 <_lseek_r>
81002791:	83 c4 10             	add    $0x10,%esp
81002794:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002798:	80 e4 ef             	and    $0xef,%ah
8100279b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100279f:	8b 55 14             	mov    0x14(%ebp),%edx
810027a2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027a6:	98                   	cwtl   
810027a7:	52                   	push   %edx
810027a8:	ff 75 10             	push   0x10(%ebp)
810027ab:	50                   	push   %eax
810027ac:	ff 75 08             	push   0x8(%ebp)
810027af:	e8 7d 00 00 00       	call   81002831 <_write_r>
810027b4:	83 c4 10             	add    $0x10,%esp
810027b7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027bd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810027c0:	c9                   	leave  
810027c1:	c3                   	ret    

810027c2 <__sseek>:
810027c2:	55                   	push   %ebp
810027c3:	89 e5                	mov    %esp,%ebp
810027c5:	56                   	push   %esi
810027c6:	53                   	push   %ebx
810027c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810027ca:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027ce:	98                   	cwtl   
810027cf:	ff 75 14             	push   0x14(%ebp)
810027d2:	ff 75 10             	push   0x10(%ebp)
810027d5:	50                   	push   %eax
810027d6:	ff 75 08             	push   0x8(%ebp)
810027d9:	e8 4b 0b 00 00       	call   81003329 <_lseek_r>
810027de:	83 c4 10             	add    $0x10,%esp
810027e1:	89 c6                	mov    %eax,%esi
810027e3:	83 fe ff             	cmp    $0xffffffff,%esi
810027e6:	75 0d                	jne    810027f5 <__sseek+0x33>
810027e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027ec:	80 e4 ef             	and    $0xef,%ah
810027ef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027f3:	eb 0e                	jmp    81002803 <__sseek+0x41>
810027f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027f9:	80 cc 10             	or     $0x10,%ah
810027fc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002800:	89 73 50             	mov    %esi,0x50(%ebx)
81002803:	89 f0                	mov    %esi,%eax
81002805:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002808:	5b                   	pop    %ebx
81002809:	5e                   	pop    %esi
8100280a:	5d                   	pop    %ebp
8100280b:	c3                   	ret    

8100280c <__sclose>:
8100280c:	55                   	push   %ebp
8100280d:	89 e5                	mov    %esp,%ebp
8100280f:	83 ec 18             	sub    $0x18,%esp
81002812:	8b 45 0c             	mov    0xc(%ebp),%eax
81002815:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002818:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100281b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100281f:	98                   	cwtl   
81002820:	83 ec 08             	sub    $0x8,%esp
81002823:	50                   	push   %eax
81002824:	ff 75 08             	push   0x8(%ebp)
81002827:	e8 a6 01 00 00       	call   810029d2 <_close_r>
8100282c:	83 c4 10             	add    $0x10,%esp
8100282f:	c9                   	leave  
81002830:	c3                   	ret    

81002831 <_write_r>:
81002831:	55                   	push   %ebp
81002832:	89 e5                	mov    %esp,%ebp
81002834:	83 ec 18             	sub    $0x18,%esp
81002837:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
8100283e:	00 00 00 
81002841:	83 ec 04             	sub    $0x4,%esp
81002844:	ff 75 14             	push   0x14(%ebp)
81002847:	ff 75 10             	push   0x10(%ebp)
8100284a:	ff 75 0c             	push   0xc(%ebp)
8100284d:	e8 ab d9 ff ff       	call   810001fd <write>
81002852:	83 c4 10             	add    $0x10,%esp
81002855:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002858:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100285c:	75 14                	jne    81002872 <_write_r+0x41>
8100285e:	a1 2c 42 00 81       	mov    0x8100422c,%eax
81002863:	85 c0                	test   %eax,%eax
81002865:	74 0b                	je     81002872 <_write_r+0x41>
81002867:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
8100286d:	8b 45 08             	mov    0x8(%ebp),%eax
81002870:	89 10                	mov    %edx,(%eax)
81002872:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002875:	c9                   	leave  
81002876:	c3                   	ret    

81002877 <__swsetup_r>:
81002877:	55                   	push   %ebp
81002878:	89 e5                	mov    %esp,%ebp
8100287a:	53                   	push   %ebx
8100287b:	83 ec 14             	sub    $0x14,%esp
8100287e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002881:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81002886:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002889:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100288d:	74 18                	je     810028a7 <__swsetup_r+0x30>
8100288f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002892:	8b 40 38             	mov    0x38(%eax),%eax
81002895:	85 c0                	test   %eax,%eax
81002897:	75 0e                	jne    810028a7 <__swsetup_r+0x30>
81002899:	83 ec 0c             	sub    $0xc,%esp
8100289c:	ff 75 f4             	push   -0xc(%ebp)
8100289f:	e8 ea df ff ff       	call   8100088e <__sinit>
810028a4:	83 c4 10             	add    $0x10,%esp
810028a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028ab:	98                   	cwtl   
810028ac:	83 e0 08             	and    $0x8,%eax
810028af:	85 c0                	test   %eax,%eax
810028b1:	0f 85 82 00 00 00    	jne    81002939 <__swsetup_r+0xc2>
810028b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028bb:	98                   	cwtl   
810028bc:	83 e0 10             	and    $0x10,%eax
810028bf:	85 c0                	test   %eax,%eax
810028c1:	75 1e                	jne    810028e1 <__swsetup_r+0x6a>
810028c3:	8b 45 08             	mov    0x8(%ebp),%eax
810028c6:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810028cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028d0:	83 c8 40             	or     $0x40,%eax
810028d3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028dc:	e9 ec 00 00 00       	jmp    810029cd <__swsetup_r+0x156>
810028e1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028e5:	98                   	cwtl   
810028e6:	83 e0 04             	and    $0x4,%eax
810028e9:	85 c0                	test   %eax,%eax
810028eb:	74 41                	je     8100292e <__swsetup_r+0xb7>
810028ed:	8b 43 30             	mov    0x30(%ebx),%eax
810028f0:	85 c0                	test   %eax,%eax
810028f2:	74 23                	je     81002917 <__swsetup_r+0xa0>
810028f4:	8b 53 30             	mov    0x30(%ebx),%edx
810028f7:	8d 43 40             	lea    0x40(%ebx),%eax
810028fa:	39 c2                	cmp    %eax,%edx
810028fc:	74 12                	je     81002910 <__swsetup_r+0x99>
810028fe:	8b 43 30             	mov    0x30(%ebx),%eax
81002901:	83 ec 08             	sub    $0x8,%esp
81002904:	50                   	push   %eax
81002905:	ff 75 08             	push   0x8(%ebp)
81002908:	e8 e0 04 00 00       	call   81002ded <_free_r>
8100290d:	83 c4 10             	add    $0x10,%esp
81002910:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002917:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100291b:	83 e0 db             	and    $0xffffffdb,%eax
8100291e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002922:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002929:	8b 43 10             	mov    0x10(%ebx),%eax
8100292c:	89 03                	mov    %eax,(%ebx)
8100292e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002932:	83 c8 08             	or     $0x8,%eax
81002935:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002939:	8b 43 10             	mov    0x10(%ebx),%eax
8100293c:	85 c0                	test   %eax,%eax
8100293e:	75 2b                	jne    8100296b <__swsetup_r+0xf4>
81002940:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002944:	98                   	cwtl   
81002945:	25 00 02 00 00       	and    $0x200,%eax
8100294a:	85 c0                	test   %eax,%eax
8100294c:	74 0e                	je     8100295c <__swsetup_r+0xe5>
8100294e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002952:	98                   	cwtl   
81002953:	25 80 00 00 00       	and    $0x80,%eax
81002958:	85 c0                	test   %eax,%eax
8100295a:	74 0f                	je     8100296b <__swsetup_r+0xf4>
8100295c:	83 ec 08             	sub    $0x8,%esp
8100295f:	53                   	push   %ebx
81002960:	ff 75 08             	push   0x8(%ebp)
81002963:	e8 07 0a 00 00       	call   8100336f <__smakebuf_r>
81002968:	83 c4 10             	add    $0x10,%esp
8100296b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100296f:	98                   	cwtl   
81002970:	83 e0 01             	and    $0x1,%eax
81002973:	85 c0                	test   %eax,%eax
81002975:	74 11                	je     81002988 <__swsetup_r+0x111>
81002977:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100297e:	8b 43 14             	mov    0x14(%ebx),%eax
81002981:	f7 d8                	neg    %eax
81002983:	89 43 18             	mov    %eax,0x18(%ebx)
81002986:	eb 19                	jmp    810029a1 <__swsetup_r+0x12a>
81002988:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100298c:	98                   	cwtl   
8100298d:	83 e0 02             	and    $0x2,%eax
81002990:	85 c0                	test   %eax,%eax
81002992:	75 05                	jne    81002999 <__swsetup_r+0x122>
81002994:	8b 43 14             	mov    0x14(%ebx),%eax
81002997:	eb 05                	jmp    8100299e <__swsetup_r+0x127>
81002999:	b8 00 00 00 00       	mov    $0x0,%eax
8100299e:	89 43 08             	mov    %eax,0x8(%ebx)
810029a1:	8b 43 10             	mov    0x10(%ebx),%eax
810029a4:	85 c0                	test   %eax,%eax
810029a6:	75 20                	jne    810029c8 <__swsetup_r+0x151>
810029a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ac:	98                   	cwtl   
810029ad:	25 80 00 00 00       	and    $0x80,%eax
810029b2:	85 c0                	test   %eax,%eax
810029b4:	74 12                	je     810029c8 <__swsetup_r+0x151>
810029b6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ba:	83 c8 40             	or     $0x40,%eax
810029bd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029c6:	eb 05                	jmp    810029cd <__swsetup_r+0x156>
810029c8:	b8 00 00 00 00       	mov    $0x0,%eax
810029cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810029d0:	c9                   	leave  
810029d1:	c3                   	ret    

810029d2 <_close_r>:
810029d2:	55                   	push   %ebp
810029d3:	89 e5                	mov    %esp,%ebp
810029d5:	83 ec 18             	sub    $0x18,%esp
810029d8:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
810029df:	00 00 00 
810029e2:	83 ec 0c             	sub    $0xc,%esp
810029e5:	ff 75 0c             	push   0xc(%ebp)
810029e8:	e8 3d d8 ff ff       	call   8100022a <close>
810029ed:	83 c4 10             	add    $0x10,%esp
810029f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029f3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810029f7:	75 14                	jne    81002a0d <_close_r+0x3b>
810029f9:	a1 2c 42 00 81       	mov    0x8100422c,%eax
810029fe:	85 c0                	test   %eax,%eax
81002a00:	74 0b                	je     81002a0d <_close_r+0x3b>
81002a02:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
81002a08:	8b 45 08             	mov    0x8(%ebp),%eax
81002a0b:	89 10                	mov    %edx,(%eax)
81002a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a10:	c9                   	leave  
81002a11:	c3                   	ret    

81002a12 <_fclose_r>:
81002a12:	55                   	push   %ebp
81002a13:	89 e5                	mov    %esp,%ebp
81002a15:	53                   	push   %ebx
81002a16:	83 ec 14             	sub    $0x14,%esp
81002a19:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a1c:	85 db                	test   %ebx,%ebx
81002a1e:	75 0a                	jne    81002a2a <_fclose_r+0x18>
81002a20:	b8 00 00 00 00       	mov    $0x0,%eax
81002a25:	e9 ea 00 00 00       	jmp    81002b14 <_fclose_r+0x102>
81002a2a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a30:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002a34:	74 18                	je     81002a4e <_fclose_r+0x3c>
81002a36:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a39:	8b 40 38             	mov    0x38(%eax),%eax
81002a3c:	85 c0                	test   %eax,%eax
81002a3e:	75 0e                	jne    81002a4e <_fclose_r+0x3c>
81002a40:	83 ec 0c             	sub    $0xc,%esp
81002a43:	ff 75 f0             	push   -0x10(%ebp)
81002a46:	e8 43 de ff ff       	call   8100088e <__sinit>
81002a4b:	83 c4 10             	add    $0x10,%esp
81002a4e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a52:	66 85 c0             	test   %ax,%ax
81002a55:	75 0a                	jne    81002a61 <_fclose_r+0x4f>
81002a57:	b8 00 00 00 00       	mov    $0x0,%eax
81002a5c:	e9 b3 00 00 00       	jmp    81002b14 <_fclose_r+0x102>
81002a61:	83 ec 08             	sub    $0x8,%esp
81002a64:	53                   	push   %ebx
81002a65:	ff 75 08             	push   0x8(%ebp)
81002a68:	e8 c9 00 00 00       	call   81002b36 <__sflush_r>
81002a6d:	83 c4 10             	add    $0x10,%esp
81002a70:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a73:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a76:	85 c0                	test   %eax,%eax
81002a78:	74 1d                	je     81002a97 <_fclose_r+0x85>
81002a7a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a7d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002a80:	83 ec 08             	sub    $0x8,%esp
81002a83:	52                   	push   %edx
81002a84:	ff 75 08             	push   0x8(%ebp)
81002a87:	ff d0                	call   *%eax
81002a89:	83 c4 10             	add    $0x10,%esp
81002a8c:	85 c0                	test   %eax,%eax
81002a8e:	79 07                	jns    81002a97 <_fclose_r+0x85>
81002a90:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002a97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a9b:	98                   	cwtl   
81002a9c:	25 80 00 00 00       	and    $0x80,%eax
81002aa1:	85 c0                	test   %eax,%eax
81002aa3:	74 12                	je     81002ab7 <_fclose_r+0xa5>
81002aa5:	8b 43 10             	mov    0x10(%ebx),%eax
81002aa8:	83 ec 08             	sub    $0x8,%esp
81002aab:	50                   	push   %eax
81002aac:	ff 75 08             	push   0x8(%ebp)
81002aaf:	e8 39 03 00 00       	call   81002ded <_free_r>
81002ab4:	83 c4 10             	add    $0x10,%esp
81002ab7:	8b 43 30             	mov    0x30(%ebx),%eax
81002aba:	85 c0                	test   %eax,%eax
81002abc:	74 23                	je     81002ae1 <_fclose_r+0xcf>
81002abe:	8b 53 30             	mov    0x30(%ebx),%edx
81002ac1:	8d 43 40             	lea    0x40(%ebx),%eax
81002ac4:	39 c2                	cmp    %eax,%edx
81002ac6:	74 12                	je     81002ada <_fclose_r+0xc8>
81002ac8:	8b 43 30             	mov    0x30(%ebx),%eax
81002acb:	83 ec 08             	sub    $0x8,%esp
81002ace:	50                   	push   %eax
81002acf:	ff 75 08             	push   0x8(%ebp)
81002ad2:	e8 16 03 00 00       	call   81002ded <_free_r>
81002ad7:	83 c4 10             	add    $0x10,%esp
81002ada:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002ae1:	8b 43 44             	mov    0x44(%ebx),%eax
81002ae4:	85 c0                	test   %eax,%eax
81002ae6:	74 19                	je     81002b01 <_fclose_r+0xef>
81002ae8:	8b 43 44             	mov    0x44(%ebx),%eax
81002aeb:	83 ec 08             	sub    $0x8,%esp
81002aee:	50                   	push   %eax
81002aef:	ff 75 08             	push   0x8(%ebp)
81002af2:	e8 f6 02 00 00       	call   81002ded <_free_r>
81002af7:	83 c4 10             	add    $0x10,%esp
81002afa:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002b01:	e8 21 de ff ff       	call   81000927 <__sfp_lock_acquire>
81002b06:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002b0c:	e8 1c de ff ff       	call   8100092d <__sfp_lock_release>
81002b11:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b14:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b17:	c9                   	leave  
81002b18:	c3                   	ret    

81002b19 <fclose>:
81002b19:	55                   	push   %ebp
81002b1a:	89 e5                	mov    %esp,%ebp
81002b1c:	83 ec 08             	sub    $0x8,%esp
81002b1f:	8b 55 08             	mov    0x8(%ebp),%edx
81002b22:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81002b27:	83 ec 08             	sub    $0x8,%esp
81002b2a:	52                   	push   %edx
81002b2b:	50                   	push   %eax
81002b2c:	e8 e1 fe ff ff       	call   81002a12 <_fclose_r>
81002b31:	83 c4 10             	add    $0x10,%esp
81002b34:	c9                   	leave  
81002b35:	c3                   	ret    

81002b36 <__sflush_r>:
81002b36:	55                   	push   %ebp
81002b37:	89 e5                	mov    %esp,%ebp
81002b39:	57                   	push   %edi
81002b3a:	56                   	push   %esi
81002b3b:	53                   	push   %ebx
81002b3c:	83 ec 1c             	sub    $0x1c,%esp
81002b3f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002b42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b46:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81002b4a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002b4e:	83 e0 08             	and    $0x8,%eax
81002b51:	85 c0                	test   %eax,%eax
81002b53:	0f 85 93 01 00 00    	jne    81002cec <__sflush_r+0x1b6>
81002b59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b5d:	80 cc 08             	or     $0x8,%ah
81002b60:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b64:	8b 43 04             	mov    0x4(%ebx),%eax
81002b67:	85 c0                	test   %eax,%eax
81002b69:	7f 0b                	jg     81002b76 <__sflush_r+0x40>
81002b6b:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002b6e:	85 c0                	test   %eax,%eax
81002b70:	0f 8e 6f 01 00 00    	jle    81002ce5 <__sflush_r+0x1af>
81002b76:	8b 43 28             	mov    0x28(%ebx),%eax
81002b79:	85 c0                	test   %eax,%eax
81002b7b:	0f 84 64 01 00 00    	je     81002ce5 <__sflush_r+0x1af>
81002b81:	8b 45 08             	mov    0x8(%ebp),%eax
81002b84:	8b 00                	mov    (%eax),%eax
81002b86:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b89:	8b 45 08             	mov    0x8(%ebp),%eax
81002b8c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002b92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b96:	98                   	cwtl   
81002b97:	25 00 10 00 00       	and    $0x1000,%eax
81002b9c:	85 c0                	test   %eax,%eax
81002b9e:	74 08                	je     81002ba8 <__sflush_r+0x72>
81002ba0:	8b 43 50             	mov    0x50(%ebx),%eax
81002ba3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002ba6:	eb 64                	jmp    81002c0c <__sflush_r+0xd6>
81002ba8:	8b 43 28             	mov    0x28(%ebx),%eax
81002bab:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002bae:	6a 01                	push   $0x1
81002bb0:	6a 00                	push   $0x0
81002bb2:	52                   	push   %edx
81002bb3:	ff 75 08             	push   0x8(%ebp)
81002bb6:	ff d0                	call   *%eax
81002bb8:	83 c4 10             	add    $0x10,%esp
81002bbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bbe:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002bc2:	75 48                	jne    81002c0c <__sflush_r+0xd6>
81002bc4:	8b 45 08             	mov    0x8(%ebp),%eax
81002bc7:	8b 00                	mov    (%eax),%eax
81002bc9:	85 c0                	test   %eax,%eax
81002bcb:	74 3f                	je     81002c0c <__sflush_r+0xd6>
81002bcd:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002bd4:	8b 45 08             	mov    0x8(%ebp),%eax
81002bd7:	8b 00                	mov    (%eax),%eax
81002bd9:	83 f8 1d             	cmp    $0x1d,%eax
81002bdc:	74 0a                	je     81002be8 <__sflush_r+0xb2>
81002bde:	8b 45 08             	mov    0x8(%ebp),%eax
81002be1:	8b 00                	mov    (%eax),%eax
81002be3:	83 f8 16             	cmp    $0x16,%eax
81002be6:	75 11                	jne    81002bf9 <__sflush_r+0xc3>
81002be8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002bef:	8b 45 08             	mov    0x8(%ebp),%eax
81002bf2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002bf5:	89 10                	mov    %edx,(%eax)
81002bf7:	eb 0b                	jmp    81002c04 <__sflush_r+0xce>
81002bf9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002bfd:	83 c8 40             	or     $0x40,%eax
81002c00:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c04:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c07:	e9 48 01 00 00       	jmp    81002d54 <__sflush_r+0x21e>
81002c0c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c10:	98                   	cwtl   
81002c11:	83 e0 04             	and    $0x4,%eax
81002c14:	85 c0                	test   %eax,%eax
81002c16:	74 13                	je     81002c2b <__sflush_r+0xf5>
81002c18:	8b 43 04             	mov    0x4(%ebx),%eax
81002c1b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c1e:	8b 43 30             	mov    0x30(%ebx),%eax
81002c21:	85 c0                	test   %eax,%eax
81002c23:	74 06                	je     81002c2b <__sflush_r+0xf5>
81002c25:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002c28:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c2b:	8b 43 28             	mov    0x28(%ebx),%eax
81002c2e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002c31:	6a 00                	push   $0x0
81002c33:	ff 75 e4             	push   -0x1c(%ebp)
81002c36:	52                   	push   %edx
81002c37:	ff 75 08             	push   0x8(%ebp)
81002c3a:	ff d0                	call   *%eax
81002c3c:	83 c4 10             	add    $0x10,%esp
81002c3f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c42:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c46:	75 1d                	jne    81002c65 <__sflush_r+0x12f>
81002c48:	8b 45 08             	mov    0x8(%ebp),%eax
81002c4b:	8b 00                	mov    (%eax),%eax
81002c4d:	85 c0                	test   %eax,%eax
81002c4f:	74 14                	je     81002c65 <__sflush_r+0x12f>
81002c51:	8b 45 08             	mov    0x8(%ebp),%eax
81002c54:	8b 00                	mov    (%eax),%eax
81002c56:	83 f8 1d             	cmp    $0x1d,%eax
81002c59:	74 0a                	je     81002c65 <__sflush_r+0x12f>
81002c5b:	8b 45 08             	mov    0x8(%ebp),%eax
81002c5e:	8b 00                	mov    (%eax),%eax
81002c60:	83 f8 16             	cmp    $0x16,%eax
81002c63:	75 6e                	jne    81002cd3 <__sflush_r+0x19d>
81002c65:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c69:	80 e4 f7             	and    $0xf7,%ah
81002c6c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c70:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002c77:	8b 43 10             	mov    0x10(%ebx),%eax
81002c7a:	89 03                	mov    %eax,(%ebx)
81002c7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c80:	98                   	cwtl   
81002c81:	25 00 10 00 00       	and    $0x1000,%eax
81002c86:	85 c0                	test   %eax,%eax
81002c88:	74 15                	je     81002c9f <__sflush_r+0x169>
81002c8a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c8e:	75 09                	jne    81002c99 <__sflush_r+0x163>
81002c90:	8b 45 08             	mov    0x8(%ebp),%eax
81002c93:	8b 00                	mov    (%eax),%eax
81002c95:	85 c0                	test   %eax,%eax
81002c97:	75 06                	jne    81002c9f <__sflush_r+0x169>
81002c99:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002c9c:	89 43 50             	mov    %eax,0x50(%ebx)
81002c9f:	8b 45 08             	mov    0x8(%ebp),%eax
81002ca2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ca5:	89 10                	mov    %edx,(%eax)
81002ca7:	8b 43 30             	mov    0x30(%ebx),%eax
81002caa:	85 c0                	test   %eax,%eax
81002cac:	74 37                	je     81002ce5 <__sflush_r+0x1af>
81002cae:	8b 53 30             	mov    0x30(%ebx),%edx
81002cb1:	8d 43 40             	lea    0x40(%ebx),%eax
81002cb4:	39 c2                	cmp    %eax,%edx
81002cb6:	74 12                	je     81002cca <__sflush_r+0x194>
81002cb8:	8b 43 30             	mov    0x30(%ebx),%eax
81002cbb:	83 ec 08             	sub    $0x8,%esp
81002cbe:	50                   	push   %eax
81002cbf:	ff 75 08             	push   0x8(%ebp)
81002cc2:	e8 26 01 00 00       	call   81002ded <_free_r>
81002cc7:	83 c4 10             	add    $0x10,%esp
81002cca:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002cd1:	eb 12                	jmp    81002ce5 <__sflush_r+0x1af>
81002cd3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002cd7:	83 c8 40             	or     $0x40,%eax
81002cda:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002cde:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002ce3:	eb 6f                	jmp    81002d54 <__sflush_r+0x21e>
81002ce5:	b8 00 00 00 00       	mov    $0x0,%eax
81002cea:	eb 68                	jmp    81002d54 <__sflush_r+0x21e>
81002cec:	8b 73 10             	mov    0x10(%ebx),%esi
81002cef:	85 f6                	test   %esi,%esi
81002cf1:	75 07                	jne    81002cfa <__sflush_r+0x1c4>
81002cf3:	b8 00 00 00 00       	mov    $0x0,%eax
81002cf8:	eb 5a                	jmp    81002d54 <__sflush_r+0x21e>
81002cfa:	8b 03                	mov    (%ebx),%eax
81002cfc:	29 f0                	sub    %esi,%eax
81002cfe:	89 c7                	mov    %eax,%edi
81002d00:	89 33                	mov    %esi,(%ebx)
81002d02:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002d06:	83 e0 03             	and    $0x3,%eax
81002d09:	85 c0                	test   %eax,%eax
81002d0b:	75 05                	jne    81002d12 <__sflush_r+0x1dc>
81002d0d:	8b 43 14             	mov    0x14(%ebx),%eax
81002d10:	eb 05                	jmp    81002d17 <__sflush_r+0x1e1>
81002d12:	b8 00 00 00 00       	mov    $0x0,%eax
81002d17:	89 43 08             	mov    %eax,0x8(%ebx)
81002d1a:	eb 2f                	jmp    81002d4b <__sflush_r+0x215>
81002d1c:	8b 43 24             	mov    0x24(%ebx),%eax
81002d1f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002d22:	57                   	push   %edi
81002d23:	56                   	push   %esi
81002d24:	52                   	push   %edx
81002d25:	ff 75 08             	push   0x8(%ebp)
81002d28:	ff d0                	call   *%eax
81002d2a:	83 c4 10             	add    $0x10,%esp
81002d2d:	85 c0                	test   %eax,%eax
81002d2f:	7f 12                	jg     81002d43 <__sflush_r+0x20d>
81002d31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d35:	83 c8 40             	or     $0x40,%eax
81002d38:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d41:	eb 11                	jmp    81002d54 <__sflush_r+0x21e>
81002d43:	89 c1                	mov    %eax,%ecx
81002d45:	89 c8                	mov    %ecx,%eax
81002d47:	01 c6                	add    %eax,%esi
81002d49:	29 cf                	sub    %ecx,%edi
81002d4b:	85 ff                	test   %edi,%edi
81002d4d:	7f cd                	jg     81002d1c <__sflush_r+0x1e6>
81002d4f:	b8 00 00 00 00       	mov    $0x0,%eax
81002d54:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d57:	5b                   	pop    %ebx
81002d58:	5e                   	pop    %esi
81002d59:	5f                   	pop    %edi
81002d5a:	5d                   	pop    %ebp
81002d5b:	c3                   	ret    

81002d5c <_fflush_r>:
81002d5c:	55                   	push   %ebp
81002d5d:	89 e5                	mov    %esp,%ebp
81002d5f:	53                   	push   %ebx
81002d60:	83 ec 14             	sub    $0x14,%esp
81002d63:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002d66:	8b 45 08             	mov    0x8(%ebp),%eax
81002d69:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002d70:	74 18                	je     81002d8a <_fflush_r+0x2e>
81002d72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d75:	8b 40 38             	mov    0x38(%eax),%eax
81002d78:	85 c0                	test   %eax,%eax
81002d7a:	75 0e                	jne    81002d8a <_fflush_r+0x2e>
81002d7c:	83 ec 0c             	sub    $0xc,%esp
81002d7f:	ff 75 f4             	push   -0xc(%ebp)
81002d82:	e8 07 db ff ff       	call   8100088e <__sinit>
81002d87:	83 c4 10             	add    $0x10,%esp
81002d8a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d8e:	66 85 c0             	test   %ax,%ax
81002d91:	75 07                	jne    81002d9a <_fflush_r+0x3e>
81002d93:	b8 00 00 00 00       	mov    $0x0,%eax
81002d98:	eb 15                	jmp    81002daf <_fflush_r+0x53>
81002d9a:	83 ec 08             	sub    $0x8,%esp
81002d9d:	53                   	push   %ebx
81002d9e:	ff 75 08             	push   0x8(%ebp)
81002da1:	e8 90 fd ff ff       	call   81002b36 <__sflush_r>
81002da6:	83 c4 10             	add    $0x10,%esp
81002da9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002dac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002daf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002db2:	c9                   	leave  
81002db3:	c3                   	ret    

81002db4 <fflush>:
81002db4:	55                   	push   %ebp
81002db5:	89 e5                	mov    %esp,%ebp
81002db7:	83 ec 08             	sub    $0x8,%esp
81002dba:	8b 55 08             	mov    0x8(%ebp),%edx
81002dbd:	85 d2                	test   %edx,%edx
81002dbf:	75 18                	jne    81002dd9 <fflush+0x25>
81002dc1:	a1 58 37 00 81       	mov    0x81003758,%eax
81002dc6:	83 ec 08             	sub    $0x8,%esp
81002dc9:	68 5c 2d 00 81       	push   $0x81002d5c
81002dce:	50                   	push   %eax
81002dcf:	e8 cd e0 ff ff       	call   81000ea1 <_fwalk_reent>
81002dd4:	83 c4 10             	add    $0x10,%esp
81002dd7:	eb 12                	jmp    81002deb <fflush+0x37>
81002dd9:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81002dde:	83 ec 08             	sub    $0x8,%esp
81002de1:	52                   	push   %edx
81002de2:	50                   	push   %eax
81002de3:	e8 74 ff ff ff       	call   81002d5c <_fflush_r>
81002de8:	83 c4 10             	add    $0x10,%esp
81002deb:	c9                   	leave  
81002dec:	c3                   	ret    

81002ded <_free_r>:
81002ded:	55                   	push   %ebp
81002dee:	89 e5                	mov    %esp,%ebp
81002df0:	53                   	push   %ebx
81002df1:	83 ec 34             	sub    $0x34,%esp
81002df4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002df8:	0f 84 c4 03 00 00    	je     810031c2 <_free_r+0x3d5>
81002dfe:	83 ec 0c             	sub    $0xc,%esp
81002e01:	ff 75 08             	push   0x8(%ebp)
81002e04:	e8 bc ed ff ff       	call   81001bc5 <__malloc_lock>
81002e09:	83 c4 10             	add    $0x10,%esp
81002e0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e0f:	83 e8 08             	sub    $0x8,%eax
81002e12:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e18:	8b 40 04             	mov    0x4(%eax),%eax
81002e1b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e1e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e21:	83 e0 fe             	and    $0xfffffffe,%eax
81002e24:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e27:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e2d:	01 d0                	add    %edx,%eax
81002e2f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e32:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e35:	8b 40 04             	mov    0x4(%eax),%eax
81002e38:	83 e0 fc             	and    $0xfffffffc,%eax
81002e3b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e3e:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81002e43:	8b 40 08             	mov    0x8(%eax),%eax
81002e46:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002e49:	0f 85 94 00 00 00    	jne    81002ee3 <_free_r+0xf6>
81002e4f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e52:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e55:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e58:	83 e0 01             	and    $0x1,%eax
81002e5b:	85 c0                	test   %eax,%eax
81002e5d:	75 3a                	jne    81002e99 <_free_r+0xac>
81002e5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e62:	8b 00                	mov    (%eax),%eax
81002e64:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e67:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e6a:	f7 d8                	neg    %eax
81002e6c:	01 45 f4             	add    %eax,-0xc(%ebp)
81002e6f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e72:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e75:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e78:	8b 40 0c             	mov    0xc(%eax),%eax
81002e7b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e81:	8b 40 08             	mov    0x8(%eax),%eax
81002e84:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e87:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e8a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002e8d:	89 50 0c             	mov    %edx,0xc(%eax)
81002e90:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e93:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e96:	89 50 08             	mov    %edx,0x8(%eax)
81002e99:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e9c:	83 c8 01             	or     $0x1,%eax
81002e9f:	89 c2                	mov    %eax,%edx
81002ea1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea4:	89 50 04             	mov    %edx,0x4(%eax)
81002ea7:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
81002eac:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eaf:	89 42 08             	mov    %eax,0x8(%edx)
81002eb2:	a1 a8 3f 00 81       	mov    0x81003fa8,%eax
81002eb7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002eba:	72 14                	jb     81002ed0 <_free_r+0xe3>
81002ebc:	a1 e0 41 00 81       	mov    0x810041e0,%eax
81002ec1:	83 ec 08             	sub    $0x8,%esp
81002ec4:	50                   	push   %eax
81002ec5:	ff 75 08             	push   0x8(%ebp)
81002ec8:	e8 fb 02 00 00       	call   810031c8 <_malloc_trim_r>
81002ecd:	83 c4 10             	add    $0x10,%esp
81002ed0:	83 ec 0c             	sub    $0xc,%esp
81002ed3:	ff 75 08             	push   0x8(%ebp)
81002ed6:	e8 f0 ec ff ff       	call   81001bcb <__malloc_unlock>
81002edb:	83 c4 10             	add    $0x10,%esp
81002ede:	e9 e0 02 00 00       	jmp    810031c3 <_free_r+0x3d6>
81002ee3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ee6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ee9:	89 50 04             	mov    %edx,0x4(%eax)
81002eec:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002ef3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ef6:	83 e0 01             	and    $0x1,%eax
81002ef9:	85 c0                	test   %eax,%eax
81002efb:	75 52                	jne    81002f4f <_free_r+0x162>
81002efd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f00:	8b 00                	mov    (%eax),%eax
81002f02:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002f05:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f08:	f7 d8                	neg    %eax
81002f0a:	01 45 f4             	add    %eax,-0xc(%ebp)
81002f0d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f10:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f13:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f16:	8b 40 08             	mov    0x8(%eax),%eax
81002f19:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
81002f1e:	39 d0                	cmp    %edx,%eax
81002f20:	75 09                	jne    81002f2b <_free_r+0x13e>
81002f22:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f29:	eb 24                	jmp    81002f4f <_free_r+0x162>
81002f2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f2e:	8b 40 0c             	mov    0xc(%eax),%eax
81002f31:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f34:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f37:	8b 40 08             	mov    0x8(%eax),%eax
81002f3a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f3d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f40:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f43:	89 50 0c             	mov    %edx,0xc(%eax)
81002f46:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f49:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f4c:	89 50 08             	mov    %edx,0x8(%eax)
81002f4f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f52:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f55:	01 d0                	add    %edx,%eax
81002f57:	8b 40 04             	mov    0x4(%eax),%eax
81002f5a:	83 e0 01             	and    $0x1,%eax
81002f5d:	85 c0                	test   %eax,%eax
81002f5f:	75 75                	jne    81002fd6 <_free_r+0x1e9>
81002f61:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f64:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f67:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f6b:	75 45                	jne    81002fb2 <_free_r+0x1c5>
81002f6d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f70:	8b 40 08             	mov    0x8(%eax),%eax
81002f73:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
81002f78:	39 d0                	cmp    %edx,%eax
81002f7a:	75 36                	jne    81002fb2 <_free_r+0x1c5>
81002f7c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f83:	b8 a8 3b 00 81       	mov    $0x81003ba8,%eax
81002f88:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f8b:	89 50 0c             	mov    %edx,0xc(%eax)
81002f8e:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
81002f93:	8b 40 0c             	mov    0xc(%eax),%eax
81002f96:	89 42 08             	mov    %eax,0x8(%edx)
81002f99:	ba a8 3b 00 81       	mov    $0x81003ba8,%edx
81002f9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa1:	89 50 0c             	mov    %edx,0xc(%eax)
81002fa4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa7:	8b 50 0c             	mov    0xc(%eax),%edx
81002faa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fad:	89 50 08             	mov    %edx,0x8(%eax)
81002fb0:	eb 24                	jmp    81002fd6 <_free_r+0x1e9>
81002fb2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fb5:	8b 40 0c             	mov    0xc(%eax),%eax
81002fb8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002fbb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fbe:	8b 40 08             	mov    0x8(%eax),%eax
81002fc1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fc4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fc7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002fca:	89 50 0c             	mov    %edx,0xc(%eax)
81002fcd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fd0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002fd3:	89 50 08             	mov    %edx,0x8(%eax)
81002fd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fd9:	83 c8 01             	or     $0x1,%eax
81002fdc:	89 c2                	mov    %eax,%edx
81002fde:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fe1:	89 50 04             	mov    %edx,0x4(%eax)
81002fe4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fe7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fea:	01 c2                	add    %eax,%edx
81002fec:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fef:	89 02                	mov    %eax,(%edx)
81002ff1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002ff5:	0f 85 b7 01 00 00    	jne    810031b2 <_free_r+0x3c5>
81002ffb:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003002:	77 7f                	ja     81003083 <_free_r+0x296>
81003004:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003007:	c1 e8 03             	shr    $0x3,%eax
8100300a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100300d:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81003012:	8b 58 04             	mov    0x4(%eax),%ebx
81003015:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003018:	8d 50 03             	lea    0x3(%eax),%edx
8100301b:	85 c0                	test   %eax,%eax
8100301d:	0f 48 c2             	cmovs  %edx,%eax
81003020:	c1 f8 02             	sar    $0x2,%eax
81003023:	ba 01 00 00 00       	mov    $0x1,%edx
81003028:	89 c1                	mov    %eax,%ecx
8100302a:	d3 e2                	shl    %cl,%edx
8100302c:	89 d0                	mov    %edx,%eax
8100302e:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
81003033:	09 d8                	or     %ebx,%eax
81003035:	89 42 04             	mov    %eax,0x4(%edx)
81003038:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100303b:	83 c0 01             	add    $0x1,%eax
8100303e:	01 c0                	add    %eax,%eax
81003040:	c1 e0 02             	shl    $0x2,%eax
81003043:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
81003048:	83 e8 08             	sub    $0x8,%eax
8100304b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100304e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003051:	8b 40 08             	mov    0x8(%eax),%eax
81003054:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003057:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100305a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100305d:	89 50 0c             	mov    %edx,0xc(%eax)
81003060:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003063:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003066:	89 50 08             	mov    %edx,0x8(%eax)
81003069:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100306c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100306f:	89 50 08             	mov    %edx,0x8(%eax)
81003072:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003075:	8b 50 08             	mov    0x8(%eax),%edx
81003078:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100307b:	89 50 0c             	mov    %edx,0xc(%eax)
8100307e:	e9 2f 01 00 00       	jmp    810031b2 <_free_r+0x3c5>
81003083:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003086:	c1 e8 09             	shr    $0x9,%eax
81003089:	85 c0                	test   %eax,%eax
8100308b:	75 08                	jne    81003095 <_free_r+0x2a8>
8100308d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003090:	c1 e8 03             	shr    $0x3,%eax
81003093:	eb 77                	jmp    8100310c <_free_r+0x31f>
81003095:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003098:	c1 e8 09             	shr    $0x9,%eax
8100309b:	83 f8 04             	cmp    $0x4,%eax
8100309e:	77 0b                	ja     810030ab <_free_r+0x2be>
810030a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a3:	c1 e8 06             	shr    $0x6,%eax
810030a6:	83 c0 38             	add    $0x38,%eax
810030a9:	eb 61                	jmp    8100310c <_free_r+0x31f>
810030ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030ae:	c1 e8 09             	shr    $0x9,%eax
810030b1:	83 f8 14             	cmp    $0x14,%eax
810030b4:	77 0b                	ja     810030c1 <_free_r+0x2d4>
810030b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030b9:	c1 e8 09             	shr    $0x9,%eax
810030bc:	83 c0 5b             	add    $0x5b,%eax
810030bf:	eb 4b                	jmp    8100310c <_free_r+0x31f>
810030c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030c4:	c1 e8 09             	shr    $0x9,%eax
810030c7:	83 f8 54             	cmp    $0x54,%eax
810030ca:	77 0b                	ja     810030d7 <_free_r+0x2ea>
810030cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030cf:	c1 e8 0c             	shr    $0xc,%eax
810030d2:	83 c0 6e             	add    $0x6e,%eax
810030d5:	eb 35                	jmp    8100310c <_free_r+0x31f>
810030d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030da:	c1 e8 09             	shr    $0x9,%eax
810030dd:	3d 54 01 00 00       	cmp    $0x154,%eax
810030e2:	77 0b                	ja     810030ef <_free_r+0x302>
810030e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030e7:	c1 e8 0f             	shr    $0xf,%eax
810030ea:	83 c0 77             	add    $0x77,%eax
810030ed:	eb 1d                	jmp    8100310c <_free_r+0x31f>
810030ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030f2:	c1 e8 09             	shr    $0x9,%eax
810030f5:	3d 54 05 00 00       	cmp    $0x554,%eax
810030fa:	77 0b                	ja     81003107 <_free_r+0x31a>
810030fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030ff:	c1 e8 12             	shr    $0x12,%eax
81003102:	83 c0 7c             	add    $0x7c,%eax
81003105:	eb 05                	jmp    8100310c <_free_r+0x31f>
81003107:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100310c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100310f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003112:	83 c0 01             	add    $0x1,%eax
81003115:	01 c0                	add    %eax,%eax
81003117:	c1 e0 02             	shl    $0x2,%eax
8100311a:	05 a0 3b 00 81       	add    $0x81003ba0,%eax
8100311f:	83 e8 08             	sub    $0x8,%eax
81003122:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003125:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003128:	8b 40 08             	mov    0x8(%eax),%eax
8100312b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100312e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003131:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003134:	75 36                	jne    8100316c <_free_r+0x37f>
81003136:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
8100313b:	8b 58 04             	mov    0x4(%eax),%ebx
8100313e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003141:	8d 50 03             	lea    0x3(%eax),%edx
81003144:	85 c0                	test   %eax,%eax
81003146:	0f 48 c2             	cmovs  %edx,%eax
81003149:	c1 f8 02             	sar    $0x2,%eax
8100314c:	ba 01 00 00 00       	mov    $0x1,%edx
81003151:	89 c1                	mov    %eax,%ecx
81003153:	d3 e2                	shl    %cl,%edx
81003155:	89 d0                	mov    %edx,%eax
81003157:	ba a0 3b 00 81       	mov    $0x81003ba0,%edx
8100315c:	09 d8                	or     %ebx,%eax
8100315e:	89 42 04             	mov    %eax,0x4(%edx)
81003161:	eb 28                	jmp    8100318b <_free_r+0x39e>
81003163:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003166:	8b 40 08             	mov    0x8(%eax),%eax
81003169:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100316c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100316f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003172:	74 0e                	je     81003182 <_free_r+0x395>
81003174:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003177:	8b 40 04             	mov    0x4(%eax),%eax
8100317a:	83 e0 fc             	and    $0xfffffffc,%eax
8100317d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003180:	72 e1                	jb     81003163 <_free_r+0x376>
81003182:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003185:	8b 40 0c             	mov    0xc(%eax),%eax
81003188:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100318b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100318e:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003191:	89 50 0c             	mov    %edx,0xc(%eax)
81003194:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003197:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100319a:	89 50 08             	mov    %edx,0x8(%eax)
8100319d:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031a0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810031a3:	89 50 08             	mov    %edx,0x8(%eax)
810031a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031a9:	8b 50 08             	mov    0x8(%eax),%edx
810031ac:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031af:	89 50 0c             	mov    %edx,0xc(%eax)
810031b2:	83 ec 0c             	sub    $0xc,%esp
810031b5:	ff 75 08             	push   0x8(%ebp)
810031b8:	e8 0e ea ff ff       	call   81001bcb <__malloc_unlock>
810031bd:	83 c4 10             	add    $0x10,%esp
810031c0:	eb 01                	jmp    810031c3 <_free_r+0x3d6>
810031c2:	90                   	nop
810031c3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810031c6:	c9                   	leave  
810031c7:	c3                   	ret    

810031c8 <_malloc_trim_r>:
810031c8:	55                   	push   %ebp
810031c9:	89 e5                	mov    %esp,%ebp
810031cb:	83 ec 28             	sub    $0x28,%esp
810031ce:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810031d5:	83 ec 0c             	sub    $0xc,%esp
810031d8:	ff 75 08             	push   0x8(%ebp)
810031db:	e8 e5 e9 ff ff       	call   81001bc5 <__malloc_lock>
810031e0:	83 c4 10             	add    $0x10,%esp
810031e3:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810031e8:	8b 40 08             	mov    0x8(%eax),%eax
810031eb:	8b 40 04             	mov    0x4(%eax),%eax
810031ee:	83 e0 fc             	and    $0xfffffffc,%eax
810031f1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810031f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810031f7:	2b 45 0c             	sub    0xc(%ebp),%eax
810031fa:	89 c2                	mov    %eax,%edx
810031fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031ff:	01 d0                	add    %edx,%eax
81003201:	83 e8 11             	sub    $0x11,%eax
81003204:	ba 00 00 00 00       	mov    $0x0,%edx
81003209:	f7 75 f4             	divl   -0xc(%ebp)
8100320c:	83 e8 01             	sub    $0x1,%eax
8100320f:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003213:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003216:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003219:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100321c:	7d 18                	jge    81003236 <_malloc_trim_r+0x6e>
8100321e:	83 ec 0c             	sub    $0xc,%esp
81003221:	ff 75 08             	push   0x8(%ebp)
81003224:	e8 a2 e9 ff ff       	call   81001bcb <__malloc_unlock>
81003229:	83 c4 10             	add    $0x10,%esp
8100322c:	b8 00 00 00 00       	mov    $0x0,%eax
81003231:	e9 f1 00 00 00       	jmp    81003327 <_malloc_trim_r+0x15f>
81003236:	83 ec 08             	sub    $0x8,%esp
81003239:	6a 00                	push   $0x0
8100323b:	ff 75 08             	push   0x8(%ebp)
8100323e:	e8 96 f4 ff ff       	call   810026d9 <_sbrk_r>
81003243:	83 c4 10             	add    $0x10,%esp
81003246:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003249:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
8100324e:	8b 50 08             	mov    0x8(%eax),%edx
81003251:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003254:	01 d0                	add    %edx,%eax
81003256:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003259:	74 18                	je     81003273 <_malloc_trim_r+0xab>
8100325b:	83 ec 0c             	sub    $0xc,%esp
8100325e:	ff 75 08             	push   0x8(%ebp)
81003261:	e8 65 e9 ff ff       	call   81001bcb <__malloc_unlock>
81003266:	83 c4 10             	add    $0x10,%esp
81003269:	b8 00 00 00 00       	mov    $0x0,%eax
8100326e:	e9 b4 00 00 00       	jmp    81003327 <_malloc_trim_r+0x15f>
81003273:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003276:	f7 d8                	neg    %eax
81003278:	83 ec 08             	sub    $0x8,%esp
8100327b:	50                   	push   %eax
8100327c:	ff 75 08             	push   0x8(%ebp)
8100327f:	e8 55 f4 ff ff       	call   810026d9 <_sbrk_r>
81003284:	83 c4 10             	add    $0x10,%esp
81003287:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100328a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100328e:	75 61                	jne    810032f1 <_malloc_trim_r+0x129>
81003290:	83 ec 08             	sub    $0x8,%esp
81003293:	6a 00                	push   $0x0
81003295:	ff 75 08             	push   0x8(%ebp)
81003298:	e8 3c f4 ff ff       	call   810026d9 <_sbrk_r>
8100329d:	83 c4 10             	add    $0x10,%esp
810032a0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032a3:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810032a8:	8b 50 08             	mov    0x8(%eax),%edx
810032ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032ae:	29 d0                	sub    %edx,%eax
810032b0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032b3:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810032b7:	7e 23                	jle    810032dc <_malloc_trim_r+0x114>
810032b9:	8b 15 ac 3f 00 81    	mov    0x81003fac,%edx
810032bf:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032c2:	29 d0                	sub    %edx,%eax
810032c4:	a3 00 42 00 81       	mov    %eax,0x81004200
810032c9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032cc:	83 c8 01             	or     $0x1,%eax
810032cf:	89 c2                	mov    %eax,%edx
810032d1:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
810032d6:	8b 40 08             	mov    0x8(%eax),%eax
810032d9:	89 50 04             	mov    %edx,0x4(%eax)
810032dc:	83 ec 0c             	sub    $0xc,%esp
810032df:	ff 75 08             	push   0x8(%ebp)
810032e2:	e8 e4 e8 ff ff       	call   81001bcb <__malloc_unlock>
810032e7:	83 c4 10             	add    $0x10,%esp
810032ea:	b8 00 00 00 00       	mov    $0x0,%eax
810032ef:	eb 36                	jmp    81003327 <_malloc_trim_r+0x15f>
810032f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032f4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810032f7:	83 c8 01             	or     $0x1,%eax
810032fa:	89 c2                	mov    %eax,%edx
810032fc:	b8 a0 3b 00 81       	mov    $0x81003ba0,%eax
81003301:	8b 40 08             	mov    0x8(%eax),%eax
81003304:	89 50 04             	mov    %edx,0x4(%eax)
81003307:	a1 00 42 00 81       	mov    0x81004200,%eax
8100330c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100330f:	a3 00 42 00 81       	mov    %eax,0x81004200
81003314:	83 ec 0c             	sub    $0xc,%esp
81003317:	ff 75 08             	push   0x8(%ebp)
8100331a:	e8 ac e8 ff ff       	call   81001bcb <__malloc_unlock>
8100331f:	83 c4 10             	add    $0x10,%esp
81003322:	b8 01 00 00 00       	mov    $0x1,%eax
81003327:	c9                   	leave  
81003328:	c3                   	ret    

81003329 <_lseek_r>:
81003329:	55                   	push   %ebp
8100332a:	89 e5                	mov    %esp,%ebp
8100332c:	83 ec 18             	sub    $0x18,%esp
8100332f:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
81003336:	00 00 00 
81003339:	83 ec 04             	sub    $0x4,%esp
8100333c:	ff 75 14             	push   0x14(%ebp)
8100333f:	ff 75 10             	push   0x10(%ebp)
81003342:	ff 75 0c             	push   0xc(%ebp)
81003345:	e8 01 cf ff ff       	call   8100024b <lseek>
8100334a:	83 c4 10             	add    $0x10,%esp
8100334d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003350:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003354:	75 14                	jne    8100336a <_lseek_r+0x41>
81003356:	a1 2c 42 00 81       	mov    0x8100422c,%eax
8100335b:	85 c0                	test   %eax,%eax
8100335d:	74 0b                	je     8100336a <_lseek_r+0x41>
8100335f:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
81003365:	8b 45 08             	mov    0x8(%ebp),%eax
81003368:	89 10                	mov    %edx,(%eax)
8100336a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100336d:	c9                   	leave  
8100336e:	c3                   	ret    

8100336f <__smakebuf_r>:
8100336f:	55                   	push   %ebp
81003370:	89 e5                	mov    %esp,%ebp
81003372:	56                   	push   %esi
81003373:	53                   	push   %ebx
81003374:	83 ec 10             	sub    $0x10,%esp
81003377:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100337a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100337e:	98                   	cwtl   
8100337f:	83 e0 02             	and    $0x2,%eax
81003382:	85 c0                	test   %eax,%eax
81003384:	74 16                	je     8100339c <__smakebuf_r+0x2d>
81003386:	8d 43 43             	lea    0x43(%ebx),%eax
81003389:	89 03                	mov    %eax,(%ebx)
8100338b:	8b 03                	mov    (%ebx),%eax
8100338d:	89 43 10             	mov    %eax,0x10(%ebx)
81003390:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003397:	e9 b9 00 00 00       	jmp    81003455 <__smakebuf_r+0xe6>
8100339c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100339f:	50                   	push   %eax
810033a0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810033a3:	50                   	push   %eax
810033a4:	53                   	push   %ebx
810033a5:	ff 75 08             	push   0x8(%ebp)
810033a8:	e8 af 00 00 00       	call   8100345c <__swhatbuf_r>
810033ad:	83 c4 10             	add    $0x10,%esp
810033b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033b6:	83 ec 08             	sub    $0x8,%esp
810033b9:	50                   	push   %eax
810033ba:	ff 75 08             	push   0x8(%ebp)
810033bd:	e8 dd dd ff ff       	call   8100119f <_malloc_r>
810033c2:	83 c4 10             	add    $0x10,%esp
810033c5:	89 c6                	mov    %eax,%esi
810033c7:	85 f6                	test   %esi,%esi
810033c9:	75 2f                	jne    810033fa <__smakebuf_r+0x8b>
810033cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033cf:	98                   	cwtl   
810033d0:	25 00 02 00 00       	and    $0x200,%eax
810033d5:	85 c0                	test   %eax,%eax
810033d7:	75 7c                	jne    81003455 <__smakebuf_r+0xe6>
810033d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033dd:	83 e0 fc             	and    $0xfffffffc,%eax
810033e0:	83 c8 02             	or     $0x2,%eax
810033e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033e7:	8d 43 43             	lea    0x43(%ebx),%eax
810033ea:	89 03                	mov    %eax,(%ebx)
810033ec:	8b 03                	mov    (%ebx),%eax
810033ee:	89 43 10             	mov    %eax,0x10(%ebx)
810033f1:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810033f8:	eb 5b                	jmp    81003455 <__smakebuf_r+0xe6>
810033fa:	8b 45 08             	mov    0x8(%ebp),%eax
810033fd:	c7 40 3c 53 08 00 81 	movl   $0x81000853,0x3c(%eax)
81003404:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003408:	0c 80                	or     $0x80,%al
8100340a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100340e:	89 33                	mov    %esi,(%ebx)
81003410:	8b 03                	mov    (%ebx),%eax
81003412:	89 43 10             	mov    %eax,0x10(%ebx)
81003415:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003418:	89 43 14             	mov    %eax,0x14(%ebx)
8100341b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100341e:	85 c0                	test   %eax,%eax
81003420:	74 26                	je     81003448 <__smakebuf_r+0xd9>
81003422:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003426:	98                   	cwtl   
81003427:	83 ec 08             	sub    $0x8,%esp
8100342a:	50                   	push   %eax
8100342b:	ff 75 08             	push   0x8(%ebp)
8100342e:	e8 dc 02 00 00       	call   8100370f <_isatty_r>
81003433:	83 c4 10             	add    $0x10,%esp
81003436:	85 c0                	test   %eax,%eax
81003438:	74 0e                	je     81003448 <__smakebuf_r+0xd9>
8100343a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100343e:	83 e0 fc             	and    $0xfffffffc,%eax
81003441:	83 c8 01             	or     $0x1,%eax
81003444:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003448:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100344c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100344f:	09 d0                	or     %edx,%eax
81003451:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003455:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003458:	5b                   	pop    %ebx
81003459:	5e                   	pop    %esi
8100345a:	5d                   	pop    %ebp
8100345b:	c3                   	ret    

8100345c <__swhatbuf_r>:
8100345c:	55                   	push   %ebp
8100345d:	89 e5                	mov    %esp,%ebp
8100345f:	83 ec 58             	sub    $0x58,%esp
81003462:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003469:	8b 45 0c             	mov    0xc(%ebp),%eax
8100346c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003470:	66 85 c0             	test   %ax,%ax
81003473:	78 1f                	js     81003494 <__swhatbuf_r+0x38>
81003475:	8b 45 0c             	mov    0xc(%ebp),%eax
81003478:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100347c:	98                   	cwtl   
8100347d:	83 ec 04             	sub    $0x4,%esp
81003480:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003483:	52                   	push   %edx
81003484:	50                   	push   %eax
81003485:	ff 75 08             	push   0x8(%ebp)
81003488:	e8 3f 02 00 00       	call   810036cc <_fstat_r>
8100348d:	83 c4 10             	add    $0x10,%esp
81003490:	85 c0                	test   %eax,%eax
81003492:	79 35                	jns    810034c9 <__swhatbuf_r+0x6d>
81003494:	8b 45 14             	mov    0x14(%ebp),%eax
81003497:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100349d:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810034a4:	98                   	cwtl   
810034a5:	25 80 00 00 00       	and    $0x80,%eax
810034aa:	85 c0                	test   %eax,%eax
810034ac:	74 0b                	je     810034b9 <__swhatbuf_r+0x5d>
810034ae:	8b 45 10             	mov    0x10(%ebp),%eax
810034b1:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810034b7:	eb 09                	jmp    810034c2 <__swhatbuf_r+0x66>
810034b9:	8b 45 10             	mov    0x10(%ebp),%eax
810034bc:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034c2:	b8 00 00 00 00       	mov    $0x0,%eax
810034c7:	eb 24                	jmp    810034ed <__swhatbuf_r+0x91>
810034c9:	8b 45 b0             	mov    -0x50(%ebp),%eax
810034cc:	25 00 f0 00 00       	and    $0xf000,%eax
810034d1:	3d 00 20 00 00       	cmp    $0x2000,%eax
810034d6:	0f 94 c0             	sete   %al
810034d9:	0f b6 d0             	movzbl %al,%edx
810034dc:	8b 45 14             	mov    0x14(%ebp),%eax
810034df:	89 10                	mov    %edx,(%eax)
810034e1:	8b 45 10             	mov    0x10(%ebp),%eax
810034e4:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034ed:	c9                   	leave  
810034ee:	c3                   	ret    

810034ef <_read_r>:
810034ef:	55                   	push   %ebp
810034f0:	89 e5                	mov    %esp,%ebp
810034f2:	83 ec 18             	sub    $0x18,%esp
810034f5:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
810034fc:	00 00 00 
810034ff:	83 ec 04             	sub    $0x4,%esp
81003502:	ff 75 14             	push   0x14(%ebp)
81003505:	ff 75 10             	push   0x10(%ebp)
81003508:	ff 75 0c             	push   0xc(%ebp)
8100350b:	e8 c0 cc ff ff       	call   810001d0 <read>
81003510:	83 c4 10             	add    $0x10,%esp
81003513:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003516:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100351a:	75 14                	jne    81003530 <_read_r+0x41>
8100351c:	a1 2c 42 00 81       	mov    0x8100422c,%eax
81003521:	85 c0                	test   %eax,%eax
81003523:	74 0b                	je     81003530 <_read_r+0x41>
81003525:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
8100352b:	8b 45 08             	mov    0x8(%ebp),%eax
8100352e:	89 10                	mov    %edx,(%eax)
81003530:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003533:	c9                   	leave  
81003534:	c3                   	ret    

81003535 <cleanup_glue>:
81003535:	55                   	push   %ebp
81003536:	89 e5                	mov    %esp,%ebp
81003538:	83 ec 08             	sub    $0x8,%esp
8100353b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100353e:	8b 00                	mov    (%eax),%eax
81003540:	85 c0                	test   %eax,%eax
81003542:	74 14                	je     81003558 <cleanup_glue+0x23>
81003544:	8b 45 0c             	mov    0xc(%ebp),%eax
81003547:	8b 00                	mov    (%eax),%eax
81003549:	83 ec 08             	sub    $0x8,%esp
8100354c:	50                   	push   %eax
8100354d:	ff 75 08             	push   0x8(%ebp)
81003550:	e8 e0 ff ff ff       	call   81003535 <cleanup_glue>
81003555:	83 c4 10             	add    $0x10,%esp
81003558:	83 ec 08             	sub    $0x8,%esp
8100355b:	ff 75 0c             	push   0xc(%ebp)
8100355e:	ff 75 08             	push   0x8(%ebp)
81003561:	e8 87 f8 ff ff       	call   81002ded <_free_r>
81003566:	83 c4 10             	add    $0x10,%esp
81003569:	90                   	nop
8100356a:	c9                   	leave  
8100356b:	c3                   	ret    

8100356c <_reclaim_reent>:
8100356c:	55                   	push   %ebp
8100356d:	89 e5                	mov    %esp,%ebp
8100356f:	83 ec 28             	sub    $0x28,%esp
81003572:	a1 84 3b 00 81       	mov    0x81003b84,%eax
81003577:	39 45 08             	cmp    %eax,0x8(%ebp)
8100357a:	0f 84 49 01 00 00    	je     810036c9 <_reclaim_reent+0x15d>
81003580:	8b 45 08             	mov    0x8(%ebp),%eax
81003583:	8b 40 4c             	mov    0x4c(%eax),%eax
81003586:	85 c0                	test   %eax,%eax
81003588:	74 64                	je     810035ee <_reclaim_reent+0x82>
8100358a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003591:	eb 3e                	jmp    810035d1 <_reclaim_reent+0x65>
81003593:	8b 45 08             	mov    0x8(%ebp),%eax
81003596:	8b 50 4c             	mov    0x4c(%eax),%edx
81003599:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100359c:	c1 e0 02             	shl    $0x2,%eax
8100359f:	01 d0                	add    %edx,%eax
810035a1:	8b 00                	mov    (%eax),%eax
810035a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035a6:	eb 1f                	jmp    810035c7 <_reclaim_reent+0x5b>
810035a8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035ab:	89 45 e8             	mov    %eax,-0x18(%ebp)
810035ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035b1:	8b 00                	mov    (%eax),%eax
810035b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035b6:	83 ec 08             	sub    $0x8,%esp
810035b9:	ff 75 e8             	push   -0x18(%ebp)
810035bc:	ff 75 08             	push   0x8(%ebp)
810035bf:	e8 29 f8 ff ff       	call   81002ded <_free_r>
810035c4:	83 c4 10             	add    $0x10,%esp
810035c7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810035cb:	75 db                	jne    810035a8 <_reclaim_reent+0x3c>
810035cd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810035d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035d4:	83 f8 1f             	cmp    $0x1f,%eax
810035d7:	76 ba                	jbe    81003593 <_reclaim_reent+0x27>
810035d9:	8b 45 08             	mov    0x8(%ebp),%eax
810035dc:	8b 40 4c             	mov    0x4c(%eax),%eax
810035df:	83 ec 08             	sub    $0x8,%esp
810035e2:	50                   	push   %eax
810035e3:	ff 75 08             	push   0x8(%ebp)
810035e6:	e8 02 f8 ff ff       	call   81002ded <_free_r>
810035eb:	83 c4 10             	add    $0x10,%esp
810035ee:	8b 45 08             	mov    0x8(%ebp),%eax
810035f1:	8b 40 40             	mov    0x40(%eax),%eax
810035f4:	85 c0                	test   %eax,%eax
810035f6:	74 15                	je     8100360d <_reclaim_reent+0xa1>
810035f8:	8b 45 08             	mov    0x8(%ebp),%eax
810035fb:	8b 40 40             	mov    0x40(%eax),%eax
810035fe:	83 ec 08             	sub    $0x8,%esp
81003601:	50                   	push   %eax
81003602:	ff 75 08             	push   0x8(%ebp)
81003605:	e8 e3 f7 ff ff       	call   81002ded <_free_r>
8100360a:	83 c4 10             	add    $0x10,%esp
8100360d:	8b 45 08             	mov    0x8(%ebp),%eax
81003610:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003616:	85 c0                	test   %eax,%eax
81003618:	74 50                	je     8100366a <_reclaim_reent+0xfe>
8100361a:	8b 45 08             	mov    0x8(%ebp),%eax
8100361d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003623:	8b 55 08             	mov    0x8(%ebp),%edx
81003626:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100362c:	39 d0                	cmp    %edx,%eax
8100362e:	74 3a                	je     8100366a <_reclaim_reent+0xfe>
81003630:	8b 45 08             	mov    0x8(%ebp),%eax
81003633:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003639:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100363c:	eb 1f                	jmp    8100365d <_reclaim_reent+0xf1>
8100363e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003641:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003644:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003647:	8b 00                	mov    (%eax),%eax
81003649:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100364c:	83 ec 08             	sub    $0x8,%esp
8100364f:	ff 75 e4             	push   -0x1c(%ebp)
81003652:	ff 75 08             	push   0x8(%ebp)
81003655:	e8 93 f7 ff ff       	call   81002ded <_free_r>
8100365a:	83 c4 10             	add    $0x10,%esp
8100365d:	8b 45 08             	mov    0x8(%ebp),%eax
81003660:	05 4c 01 00 00       	add    $0x14c,%eax
81003665:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003668:	75 d4                	jne    8100363e <_reclaim_reent+0xd2>
8100366a:	8b 45 08             	mov    0x8(%ebp),%eax
8100366d:	8b 40 54             	mov    0x54(%eax),%eax
81003670:	85 c0                	test   %eax,%eax
81003672:	74 15                	je     81003689 <_reclaim_reent+0x11d>
81003674:	8b 45 08             	mov    0x8(%ebp),%eax
81003677:	8b 40 54             	mov    0x54(%eax),%eax
8100367a:	83 ec 08             	sub    $0x8,%esp
8100367d:	50                   	push   %eax
8100367e:	ff 75 08             	push   0x8(%ebp)
81003681:	e8 67 f7 ff ff       	call   81002ded <_free_r>
81003686:	83 c4 10             	add    $0x10,%esp
81003689:	8b 45 08             	mov    0x8(%ebp),%eax
8100368c:	8b 40 38             	mov    0x38(%eax),%eax
8100368f:	85 c0                	test   %eax,%eax
81003691:	74 36                	je     810036c9 <_reclaim_reent+0x15d>
81003693:	8b 45 08             	mov    0x8(%ebp),%eax
81003696:	8b 40 3c             	mov    0x3c(%eax),%eax
81003699:	83 ec 0c             	sub    $0xc,%esp
8100369c:	ff 75 08             	push   0x8(%ebp)
8100369f:	ff d0                	call   *%eax
810036a1:	83 c4 10             	add    $0x10,%esp
810036a4:	8b 45 08             	mov    0x8(%ebp),%eax
810036a7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036ad:	85 c0                	test   %eax,%eax
810036af:	74 18                	je     810036c9 <_reclaim_reent+0x15d>
810036b1:	8b 45 08             	mov    0x8(%ebp),%eax
810036b4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036ba:	83 ec 08             	sub    $0x8,%esp
810036bd:	50                   	push   %eax
810036be:	ff 75 08             	push   0x8(%ebp)
810036c1:	e8 6f fe ff ff       	call   81003535 <cleanup_glue>
810036c6:	83 c4 10             	add    $0x10,%esp
810036c9:	90                   	nop
810036ca:	c9                   	leave  
810036cb:	c3                   	ret    

810036cc <_fstat_r>:
810036cc:	55                   	push   %ebp
810036cd:	89 e5                	mov    %esp,%ebp
810036cf:	83 ec 18             	sub    $0x18,%esp
810036d2:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
810036d9:	00 00 00 
810036dc:	83 ec 08             	sub    $0x8,%esp
810036df:	ff 75 10             	push   0x10(%ebp)
810036e2:	ff 75 0c             	push   0xc(%ebp)
810036e5:	e8 af cb ff ff       	call   81000299 <fstat>
810036ea:	83 c4 10             	add    $0x10,%esp
810036ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036f0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810036f4:	75 14                	jne    8100370a <_fstat_r+0x3e>
810036f6:	a1 2c 42 00 81       	mov    0x8100422c,%eax
810036fb:	85 c0                	test   %eax,%eax
810036fd:	74 0b                	je     8100370a <_fstat_r+0x3e>
810036ff:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
81003705:	8b 45 08             	mov    0x8(%ebp),%eax
81003708:	89 10                	mov    %edx,(%eax)
8100370a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100370d:	c9                   	leave  
8100370e:	c3                   	ret    

8100370f <_isatty_r>:
8100370f:	55                   	push   %ebp
81003710:	89 e5                	mov    %esp,%ebp
81003712:	83 ec 18             	sub    $0x18,%esp
81003715:	c7 05 2c 42 00 81 00 	movl   $0x0,0x8100422c
8100371c:	00 00 00 
8100371f:	83 ec 0c             	sub    $0xc,%esp
81003722:	ff 75 0c             	push   0xc(%ebp)
81003725:	e8 4e cb ff ff       	call   81000278 <isatty>
8100372a:	83 c4 10             	add    $0x10,%esp
8100372d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003730:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003734:	75 14                	jne    8100374a <_isatty_r+0x3b>
81003736:	a1 2c 42 00 81       	mov    0x8100422c,%eax
8100373b:	85 c0                	test   %eax,%eax
8100373d:	74 0b                	je     8100374a <_isatty_r+0x3b>
8100373f:	8b 15 2c 42 00 81    	mov    0x8100422c,%edx
81003745:	8b 45 08             	mov    0x8(%ebp),%eax
81003748:	89 10                	mov    %edx,(%eax)
8100374a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100374d:	c9                   	leave  
8100374e:	c3                   	ret    
