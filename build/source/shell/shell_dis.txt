
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100059a

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007970 memsz 0x00008020 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000694f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000060c  81006960  81006960  00007960  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81006f80  81006f80  00007f80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81007980  81007980  00008970  2**5
                  ALLOC
  4 .debug_info   00021fa2  00000000  00000000  00008970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00007a82  00000000  00000000  0002a912  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000808  00000000  00000000  00032398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00004bca  00000000  00000000  00032ba0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000159e  00000000  00000000  0003776a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 0000144f  00000000  00000000  00038d08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0003a157  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001968  00000000  00000000  0003a198  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0003bb00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007980 l     O .bss	00000200 cmd_buf
81006f80 l     O .data	00000004 prompt
81007b80 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
81006ac0 l     O .rodata	00000030 cmd_list
8100024b l     F .text	0000003e cli_init
81000289 l     F .text	00000033 show_prompt
810002bc l     F .text	00000043 find_builtin
810002ff l     F .text	00000049 run_builtin
81000348 l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000d4c l     F .text	000000ad std
81000df9 l     F .text	0000001b stdin_init
81000e14 l     F .text	0000001b stdout_init
81000e2f l     F .text	0000001b stderr_init
81007f8c l     O .bss	00000004 __sfp_recursive_mutex
81007f90 l     O .bss	00000004 __sinit_recursive_mutex
810010f2 l     F .text	0000000a __fp_lock
810010fc l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81007f9c l     O .bss	00000004 optwhere
81007fa0 l     O .bss	00000004 permute_from
81007fa4 l     O .bss	00000004 num_nonopts
8100188f l     F .text	0000007b reverse_argv_elements
8100190a l     F .text	00000036 permute
81001940 l     F .text	00000031 is_option
81001971 l     F .text	00000059 read_globals
810019ca l     F .text	00000052 write_globals
81001a1c l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81006fa0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81002687 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
810031cd l       .text	00000000 L20
81003184 l       .text	00000000 L5
810031ca l       .text	00000000 L15
81003190 l       .text	00000000 L8
810031b1 l       .text	00000000 L9
810031c0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
8100321f l       .text	00000000 L4
81003211 l       .text	00000000 BYTECMP
8100320c l       .text	00000000 L5
81003213 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008008 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
810033e0 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81003fa7 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810043db l       .text	00000000 L25
81004382 l       .text	00000000 L5
810043ce l       .text	00000000 L14
810043d4 l       .text	00000000 L19
81004393 l       .text	00000000 L10
810043c0 l       .text	00000000 L9
810043c3 l       .text	00000000 L15
8100440e l       .text	00000000 L26
81004411 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81004516 l       .text	00000000 L5
8100454e l       .text	00000000 L15
81004520 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100465c l     F .text	0000000a __locale_ctype_ptr_l
81004666 l     F .text	0000000a __get_global_locale
81004670 l     F .text	0000000a __get_current_locale
8100467a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
8100800c l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81004f6f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810077f0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
8100570c l     F .text	0000000a __get_global_locale
81005716 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005978 l     F .text	0000000a __get_global_locale
81005982 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81005a9d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
8100673b l     F .text	0000000a __get_global_locale
81006745 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81006845 l     F .text	0000000a __get_global_locale
8100684f l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008018 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
8100801c l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100690f g     F .text	00000040 _isatty_r
810064c1 g     F .text	00000037 cleanup_glue
81003eb5 g     F .text	000000d6 _puts_r
810057b2 g     F .text	00000046 _lseek_r
810006e9 g     F .text	0000001b yield
81004642 g     F .text	0000001a strtok_r
81003e80 g     F .text	00000035 printf
8100674f g     F .text	00000077 _wcrtomb_r
810042be g     F .text	0000004a __sseek
81001041 g     F .text	00000099 __sinit
810048bf g     F .text	00000112 __swbuf_r
81005720 g     F .text	0000005f _setlocale_r
81000e4a g     F .text	0000006f __sfmoreglue
810032fe g     F .text	00000006 __malloc_unlock
81005a10 g       .text	00000000 memmove
81002578 g     F .text	00000049 getopt_long
81001027 g     F .text	0000001a _cleanup
81004582 g     F .text	000000c0 __strtok_r
81004ce8 g     F .text	0000000a __errno
810055e2 g     F .text	00000020 getenv
810068cc g     F .text	00000043 _fstat_r
81008014 g     O .bss	00000004 errno
81004259 g     F .text	0000000a __seofread
810006bc g     F .text	0000002d execve
8100065e g     F .text	0000001b getpid
81000d2d g     F .text	0000001f fgets
81003228 g       .text	00000000 memcpy
81001006 g     F .text	00000021 _cleanup_r
81003f8b g     F .text	0000001c puts
81003e53 g     F .text	0000002d _printf_r
810007d3 g     F .text	00000021 isatty
8100267d g     F .text	0000000a __getreent
81007f94 g     O .bss	00000004 optarg
81007fc0 g     O .bss	00000004 __malloc_top_pad
81007980 g       .bss	00000000 __bss_start__
81005124 g     F .text	0000049e __sfvwrite_r
810041d5 g     F .text	00000040 _sbrk_r
81006f84 g     O .data	00000004 opterr
81005ba1 g     F .text	00000046 _read_r
81004cf2 g     F .text	00000107 _fclose_r
81000b96 g     F .text	00000039 fflush
81007fc4 g     O .bss	00000004 __malloc_max_sbrked_mem
810007a6 g     F .text	0000002d lseek
81006c00 g     O .rodata	00000004 _global_impure_ptr
81005be7 g     F .text	000008da _realloc_r
81004871 g     F .text	00000025 strtol_l
81005085 g     F .text	00000057 _fputwc_r
81001106 g     F .text	00000024 __fp_lock_all
81004896 g     F .text	00000029 strtol
810064f8 g     F .text	00000160 _reclaim_reent
81004e16 g     F .text	00000046 _fputc_r
81000758 g     F .text	0000002d write
81005b03 g     F .text	0000004b _putc_r
8100796c g     O .data	00000004 environ
810007f4 g     F .text	00000027 fstat
81001177 g     F .text	0000002c fprintf
81002656 g     F .text	00000027 __getopt_long_only_r
810008ba g     F .text	0000001a _atoi_r
810005e8 g     F .text	0000004c sys_call
81003446 g     F .text	000000a8 __sfputs_r
81007f98 g     O .bss	00000004 optind
810010da g     F .text	00000006 __sfp_lock_acquire
81003140 g       .text	00000000 memchr
81008020 g       .bss	00000000 __bss_end__
810011a3 g     F .text	000003db _free_r
8100087f g     F .text	00000021 wait
81006ce0 g     O .rodata	00000180 _ctype_b
8100577f g     F .text	00000014 __locale_mb_cur_max
81004b93 g     F .text	00000115 __call_exitprocs
810077ec g     O .data	00000004 __malloc_sbrk_base
8100059a g       .text	00000000 _start
8100072b g     F .text	0000002d read
81006658 g     F .text	000000e3 strncmp
8100262f g     F .text	00000027 __getopt_long_r
81007fe0 g     O .bss	00000028 __malloc_current_mallinfo
81003e53 g     F .text	0000002d _iprintf_r
81004ca8 g     F .text	00000040 _close_r
81004559 g     F .text	00000029 strtok
810031d5 g       .text	00000000 memcmp
810017b2 g     F .text	000000b8 _fwrite_r
810006a1 g     F .text	0000001b fork
81004a38 g     F .text	0000015b __swsetup_r
81000eb9 g     F .text	0000014d __sfp
810073e0 g     O .data	00000408 __malloc_av_
810010ec g     F .text	00000006 __sinit_lock_release
81004215 g     F .text	00000044 __sread
810032f8 g     F .text	00000006 __malloc_lock
8100114e g     F .text	00000029 _fprintf_r
8100081b g     F .text	00000021 sbrk
81000b3e g     F .text	00000058 _fflush_r
810005aa g     F .text	0000003e cstart
81002531 g     F .text	00000047 getopt
81003270 g       .text	00000000 memset
81000406 g     F .text	00000194 main
81007fc8 g     O .bss	00000004 __malloc_max_total_mem
810049d1 g     F .text	00000021 __swbuf
81004308 g     F .text	00000025 __sclose
81004df9 g     F .text	0000001d fclose
8100484c g     F .text	00000025 _strtol_r
81005602 g     F .text	000000ed _findenv_r
8100291a g     F .text	00000822 _malloc_r
8100687d g     F .text	00000043 __ascii_wctomb
8100114e g     F .text	00000029 _fiprintf_r
810068c6 g     F .text	00000006 __env_unlock
810055c2 g     F .text	00000020 _findenv
810016df g     F .text	00000068 _fwalk
81000bcf g     F .text	0000015e _fgets_r
8100598c g     F .text	0000002a _mbtowc_r
81005b4e g     F .text	00000053 putc
810025c1 g     F .text	00000049 getopt_long_only
8100157e g     F .text	00000161 _malloc_trim_r
8100442c g     F .text	000000a5 strcmp
810034ee g     F .text	00000025 vfiprintf
8100083c g     F .text	00000021 dup
81003e80 g     F .text	00000035 iprintf
81008010 g     O .bss	00000004 _PathLocale
810049f2 g     F .text	00000046 _write_r
81005793 g     F .text	0000001f setlocale
81003869 g     F .text	0000019b _printf_common
810073c4 g     O .data	00000004 _impure_ptr
81000918 g     F .text	00000226 __sflush_r
81003fd4 g     F .text	00000201 __srefill_r
810059b6 g     F .text	00000058 __ascii_mbtowc
8100112a g     F .text	00000024 __fp_unlock_all
81004e5c g     F .text	0000004e fputc
81000679 g     F .text	00000028 print_msg
81006f88 g     O .data	00000004 optopt
810058e5 g     F .text	00000093 __swhatbuf_r
8100186a g     F .text	00000025 fwrite
81004fd5 g     F .text	000000b0 __fputwc
81004eaa g     F .text	000000a6 _fputs_r
81004263 g     F .text	0000005b __swrite
810077e8 g     O .data	00000004 __malloc_trim_threshold
810008d4 g     F .text	00000044 exit
81001177 g     F .text	0000002c fiprintf
81003513 g     F .text	00000356 _vfiprintf_r
81001747 g     F .text	0000006b _fwalk_reent
810010e0 g     F .text	00000006 __sfp_lock_release
810008a0 g     F .text	0000001a atoi
81006e60 g     O .rodata	00000101 _ctype_
8100260a g     F .text	00000025 __getopt_r
8100085d g     F .text	00000022 _exit
810057f8 g     F .text	000000ed __smakebuf_r
810044e0 g       .text	00000000 strlen
81003a04 g     F .text	0000044f _printf_i
81000704 g     F .text	00000027 open
81003304 g     F .text	000000dc __sprint_r
81004330 g       .text	00000000 strchr
81004f50 g     F .text	0000001f fputs
81006859 g     F .text	00000024 _wctomb_r
810068c0 g     F .text	00000006 __env_lock
81003513 g     F .text	00000356 _vfprintf_r
81000634 g     F .text	0000002a msleep
810067c6 g     F .text	0000007f wcrtomb
81000785 g     F .text	00000021 close
81007800 g     O .data	0000016c __global_locale
810034ee g     F .text	00000025 vfprintf
810050dc g     F .text	00000048 fputwc
810010e6 g     F .text	00000006 __sinit_lock_acquire
810056ef g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 80 7f 00 81       	mov    0x81007f80,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 66 69 00 81       	push   $0x81006966
81000025:	e8 56 3e 00 00       	call   81003e80 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 84 7f 00 81       	mov    0x81007f84,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 71 69 00 81       	push   $0x81006971
81000050:	68 76 69 00 81       	push   $0x81006976
81000055:	e8 26 3e 00 00       	call   81003e80 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 79 69 00 81       	push   $0x81006979
81000065:	68 76 69 00 81       	push   $0x81006976
8100006a:	e8 11 3e 00 00       	call   81003e80 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 ef 25 00 00       	call   8100267d <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 87 0c 00 00       	call   81000d2d <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 cf 3e 00 00       	call   81003f8b <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 98 7f 00 81 01 	movl   $0x1,0x81007f98
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 80 69 00 81       	push   $0x81006980
81000107:	e8 7f 3e 00 00       	call   81003f8b <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 86 69 00 81       	push   $0x81006986
81000117:	e8 6f 3e 00 00       	call   81003f8b <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 98 69 00 81       	push   $0x81006998
81000127:	e8 5f 3e 00 00       	call   81003f8b <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 94 7f 00 81       	mov    0x81007f94,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 59 07 00 00       	call   810008a0 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 94 7f 00 81       	mov    0x81007f94,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 94 7f 00 81    	mov    0x81007f94,%ebx
8100015e:	e8 1a 25 00 00       	call   8100267d <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 b8 69 00 81       	push   $0x810069b8
8100016f:	50                   	push   %eax
81000170:	e8 02 10 00 00       	call   81001177 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 d7 69 00 81       	push   $0x810069d7
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 9b 23 00 00       	call   81002531 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 cc 24 00 00       	call   8100267d <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 dc 69 00 81       	push   $0x810069dc
810001be:	e8 a7 16 00 00       	call   8100186a <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 98 7f 00 81       	mov    0x81007f98,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 a1 24 00 00       	call   8100267d <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 0f 6a 00 81       	push   $0x81006a0f
810001e9:	e8 7c 16 00 00       	call   8100186a <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 98 7f 00 81       	mov    0x81007f98,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 69 3d 00 00       	call   81003f8b <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_exit(int argc, const char ** argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 89 06 00 00       	call   810008d4 <exit>

8100024b <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000251:	a1 80 6f 00 81       	mov    0x81006f80,%eax
81000256:	a3 88 7f 00 81       	mov    %eax,0x81007f88
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100025b:	83 ec 04             	sub    $0x4,%esp
8100025e:	68 00 04 00 00       	push   $0x400
81000263:	6a 00                	push   $0x0
81000265:	68 80 7b 00 81       	push   $0x81007b80
8100026a:	e8 01 30 00 00       	call   81003270 <memset>
8100026f:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000272:	c7 05 80 7f 00 81 c0 	movl   $0x81006ac0,0x81007f80
81000279:	6a 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100027c:	b8 f0 6a 00 81       	mov    $0x81006af0,%eax
81000281:	a3 84 7f 00 81       	mov    %eax,0x81007f84
}
81000286:	90                   	nop
81000287:	c9                   	leave  
81000288:	c3                   	ret    

81000289 <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
81000289:	55                   	push   %ebp
8100028a:	89 e5                	mov    %esp,%ebp
8100028c:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
8100028f:	a1 88 7f 00 81       	mov    0x81007f88,%eax
81000294:	83 ec 08             	sub    $0x8,%esp
81000297:	50                   	push   %eax
81000298:	68 76 69 00 81       	push   $0x81006976
8100029d:	e8 de 3b 00 00       	call   81003e80 <iprintf>
810002a2:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
810002a5:	e8 d3 23 00 00       	call   8100267d <__getreent>
810002aa:	8b 40 08             	mov    0x8(%eax),%eax
810002ad:	83 ec 0c             	sub    $0xc,%esp
810002b0:	50                   	push   %eax
810002b1:	e8 e0 08 00 00       	call   81000b96 <fflush>
810002b6:	83 c4 10             	add    $0x10,%esp
}
810002b9:	90                   	nop
810002ba:	c9                   	leave  
810002bb:	c3                   	ret    

810002bc <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
810002bc:	55                   	push   %ebp
810002bd:	89 e5                	mov    %esp,%ebp
810002bf:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002c2:	a1 80 7f 00 81       	mov    0x81007f80,%eax
810002c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810002ca:	eb 22                	jmp    810002ee <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810002cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002cf:	8b 00                	mov    (%eax),%eax
810002d1:	83 ec 08             	sub    $0x8,%esp
810002d4:	ff 75 08             	push   0x8(%ebp)
810002d7:	50                   	push   %eax
810002d8:	e8 4f 41 00 00       	call   8100442c <strcmp>
810002dd:	83 c4 10             	add    $0x10,%esp
810002e0:	85 c0                	test   %eax,%eax
810002e2:	75 05                	jne    810002e9 <find_builtin+0x2d>
      continue;
    }
    return cmd;
810002e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810002e7:	eb 14                	jmp    810002fd <find_builtin+0x41>
      continue;
810002e9:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810002ea:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810002ee:	a1 84 7f 00 81       	mov    0x81007f84,%eax
810002f3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810002f6:	72 d4                	jb     810002cc <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810002f8:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002fd:	c9                   	leave  
810002fe:	c3                   	ret    

810002ff <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810002ff:	55                   	push   %ebp
81000300:	89 e5                	mov    %esp,%ebp
81000302:	53                   	push   %ebx
81000303:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
81000306:	8b 45 08             	mov    0x8(%ebp),%eax
81000309:	8b 40 08             	mov    0x8(%eax),%eax
8100030c:	83 ec 08             	sub    $0x8,%esp
8100030f:	ff 75 10             	push   0x10(%ebp)
81000312:	ff 75 0c             	push   0xc(%ebp)
81000315:	ff d0                	call   *%eax
81000317:	83 c4 10             	add    $0x10,%esp
8100031a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
8100031d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000321:	79 1f                	jns    81000342 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR"%s error: %d\n"ESC_COLOR_DEFAULT, cmd->name, ret);
81000323:	8b 45 08             	mov    0x8(%ebp),%eax
81000326:	8b 18                	mov    (%eax),%ebx
81000328:	e8 50 23 00 00       	call   8100267d <__getreent>
8100032d:	8b 40 0c             	mov    0xc(%eax),%eax
81000330:	ff 75 f4             	push   -0xc(%ebp)
81000333:	53                   	push   %ebx
81000334:	68 f0 6a 00 81       	push   $0x81006af0
81000339:	50                   	push   %eax
8100033a:	e8 38 0e 00 00       	call   81001177 <fiprintf>
8100033f:	83 c4 10             	add    $0x10,%esp
  }
}
81000342:	90                   	nop
81000343:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000346:	c9                   	leave  
81000347:	c3                   	ret    

81000348 <run_exec_file>:
 * 
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
81000348:	55                   	push   %ebp
81000349:	89 e5                	mov    %esp,%ebp
8100034b:	53                   	push   %ebx
8100034c:	83 ec 14             	sub    $0x14,%esp
  //1.创建子进程
  int pid = fork();
8100034f:	e8 4d 03 00 00       	call   810006a1 <fork>
81000354:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
81000357:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100035b:	79 21                	jns    8100037e <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR"fork failed: %s"ESC_COLOR_DEFAULT, path);
8100035d:	e8 1b 23 00 00       	call   8100267d <__getreent>
81000362:	8b 40 0c             	mov    0xc(%eax),%eax
81000365:	83 ec 04             	sub    $0x4,%esp
81000368:	ff 75 08             	push   0x8(%ebp)
8100036b:	68 08 6b 00 81       	push   $0x81006b08
81000370:	50                   	push   %eax
81000371:	e8 01 0e 00 00       	call   81001177 <fiprintf>
81000376:	83 c4 10             	add    $0x10,%esp
    int status;
    //3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
  }
}
81000379:	e9 82 00 00 00       	jmp    81000400 <run_exec_file+0xb8>
  } else if (pid == 0) {
8100037e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000382:	75 44                	jne    810003c8 <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000384:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100038b:	eb 29                	jmp    810003b6 <run_exec_file+0x6e>
      printf("arg %d = %s\n", argc, argv[i]);
8100038d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000390:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000397:	8b 45 10             	mov    0x10(%ebp),%eax
8100039a:	01 d0                	add    %edx,%eax
8100039c:	8b 00                	mov    (%eax),%eax
8100039e:	83 ec 04             	sub    $0x4,%esp
810003a1:	50                   	push   %eax
810003a2:	ff 75 0c             	push   0xc(%ebp)
810003a5:	68 22 6b 00 81       	push   $0x81006b22
810003aa:	e8 d1 3a 00 00       	call   81003e80 <iprintf>
810003af:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810003b2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810003b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003b9:	3b 45 0c             	cmp    0xc(%ebp),%eax
810003bc:	7c cf                	jl     8100038d <run_exec_file+0x45>
    exit(-1);
810003be:	83 ec 0c             	sub    $0xc,%esp
810003c1:	6a ff                	push   $0xffffffff
810003c3:	e8 0c 05 00 00       	call   810008d4 <exit>
    int cpid = wait(&status);
810003c8:	83 ec 0c             	sub    $0xc,%esp
810003cb:	8d 45 e8             	lea    -0x18(%ebp),%eax
810003ce:	50                   	push   %eax
810003cf:	e8 ab 04 00 00       	call   8100087f <wait>
810003d4:	83 c4 10             	add    $0x10,%esp
810003d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
810003da:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810003dd:	e8 9b 22 00 00       	call   8100267d <__getreent>
810003e2:	8b 40 0c             	mov    0xc(%eax),%eax
810003e5:	83 ec 08             	sub    $0x8,%esp
810003e8:	ff 75 ec             	push   -0x14(%ebp)
810003eb:	ff 75 f0             	push   -0x10(%ebp)
810003ee:	53                   	push   %ebx
810003ef:	ff 75 08             	push   0x8(%ebp)
810003f2:	68 30 6b 00 81       	push   $0x81006b30
810003f7:	50                   	push   %eax
810003f8:	e8 7a 0d 00 00       	call   81001177 <fiprintf>
810003fd:	83 c4 20             	add    $0x20,%esp
}
81000400:	90                   	nop
81000401:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000404:	c9                   	leave  
81000405:	c3                   	ret    

81000406 <main>:

int main(int argc, char **argv) {
81000406:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100040a:	83 e4 f0             	and    $0xfffffff0,%esp
8100040d:	ff 71 fc             	push   -0x4(%ecx)
81000410:	55                   	push   %ebp
81000411:	89 e5                	mov    %esp,%ebp
81000413:	51                   	push   %ecx
81000414:	83 ec 44             	sub    $0x44,%esp
81000417:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], 0);
81000419:	8b 40 04             	mov    0x4(%eax),%eax
8100041c:	8b 00                	mov    (%eax),%eax
8100041e:	83 ec 08             	sub    $0x8,%esp
81000421:	6a 00                	push   $0x0
81000423:	50                   	push   %eax
81000424:	e8 db 02 00 00       	call   81000704 <open>
81000429:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
8100042c:	83 ec 0c             	sub    $0xc,%esp
8100042f:	6a 00                	push   $0x0
81000431:	e8 06 04 00 00       	call   8100083c <dup>
81000436:	83 c4 10             	add    $0x10,%esp
  dup(0);
81000439:	83 ec 0c             	sub    $0xc,%esp
8100043c:	6a 00                	push   $0x0
8100043e:	e8 f9 03 00 00       	call   8100083c <dup>
81000443:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000446:	e8 00 fe ff ff       	call   8100024b <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100044b:	e8 39 fe ff ff       	call   81000289 <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000450:	e8 28 22 00 00       	call   8100267d <__getreent>
81000455:	8b 40 04             	mov    0x4(%eax),%eax
81000458:	83 ec 04             	sub    $0x4,%esp
8100045b:	50                   	push   %eax
8100045c:	68 00 04 00 00       	push   $0x400
81000461:	68 80 7b 00 81       	push   $0x81007b80
81000466:	e8 c2 08 00 00       	call   81000d2d <fgets>
8100046b:	83 c4 10             	add    $0x10,%esp
8100046e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000471:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000475:	0f 84 13 01 00 00    	je     8100058e <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
8100047b:	83 ec 08             	sub    $0x8,%esp
8100047e:	6a 0a                	push   $0xa
81000480:	68 80 7b 00 81       	push   $0x81007b80
81000485:	e8 a6 3e 00 00       	call   81004330 <strchr>
8100048a:	83 c4 10             	add    $0x10,%esp
8100048d:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000490:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000494:	74 06                	je     8100049c <main+0x96>
      *cr = '\0';
81000496:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000499:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
8100049c:	83 ec 08             	sub    $0x8,%esp
8100049f:	6a 0d                	push   $0xd
810004a1:	68 80 7b 00 81       	push   $0x81007b80
810004a6:	e8 85 3e 00 00       	call   81004330 <strchr>
810004ab:	83 c4 10             	add    $0x10,%esp
810004ae:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
810004b1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810004b5:	74 06                	je     810004bd <main+0xb7>
      *cr = '\0';
810004b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810004ba:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
810004bd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810004c4:	83 ec 04             	sub    $0x4,%esp
810004c7:	6a 28                	push   $0x28
810004c9:	6a 00                	push   $0x0
810004cb:	8d 45 b8             	lea    -0x48(%ebp),%eax
810004ce:	50                   	push   %eax
810004cf:	e8 9c 2d 00 00       	call   81003270 <memset>
810004d4:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
810004d7:	c7 45 e4 54 6b 00 81 	movl   $0x81006b54,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
810004de:	83 ec 08             	sub    $0x8,%esp
810004e1:	ff 75 e4             	push   -0x1c(%ebp)
810004e4:	68 80 7b 00 81       	push   $0x81007b80
810004e9:	e8 6b 40 00 00       	call   81004559 <strtok>
810004ee:	83 c4 10             	add    $0x10,%esp
810004f1:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810004f4:	eb 23                	jmp    81000519 <main+0x113>
      argv[argc++] = token;
810004f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004f9:	8d 50 01             	lea    0x1(%eax),%edx
810004fc:	89 55 f4             	mov    %edx,-0xc(%ebp)
810004ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000502:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
81000506:	83 ec 08             	sub    $0x8,%esp
81000509:	ff 75 e4             	push   -0x1c(%ebp)
8100050c:	6a 00                	push   $0x0
8100050e:	e8 46 40 00 00       	call   81004559 <strtok>
81000513:	83 c4 10             	add    $0x10,%esp
81000516:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
81000519:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100051d:	75 d7                	jne    810004f6 <main+0xf0>
    }

    if (argc == 0) {
8100051f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000523:	74 6f                	je     81000594 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000525:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000528:	83 ec 0c             	sub    $0xc,%esp
8100052b:	50                   	push   %eax
8100052c:	e8 8b fd ff ff       	call   810002bc <find_builtin>
81000531:	83 c4 10             	add    $0x10,%esp
81000534:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000537:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100053b:	74 17                	je     81000554 <main+0x14e>
      run_builtin(cmd, argc, argv);
8100053d:	83 ec 04             	sub    $0x4,%esp
81000540:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000543:	50                   	push   %eax
81000544:	ff 75 f4             	push   -0xc(%ebp)
81000547:	ff 75 e0             	push   -0x20(%ebp)
8100054a:	e8 b0 fd ff ff       	call   810002ff <run_builtin>
8100054f:	83 c4 10             	add    $0x10,%esp
      continue;
81000552:	eb 41                	jmp    81000595 <main+0x18f>
    }

    //5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
81000554:	83 ec 04             	sub    $0x4,%esp
81000557:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100055a:	50                   	push   %eax
8100055b:	ff 75 f4             	push   -0xc(%ebp)
8100055e:	68 56 6b 00 81       	push   $0x81006b56
81000563:	e8 e0 fd ff ff       	call   81000348 <run_exec_file>
81000568:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
8100056b:	e8 0d 21 00 00       	call   8100267d <__getreent>
81000570:	8b 40 0c             	mov    0xc(%eax),%eax
81000573:	83 ec 04             	sub    $0x4,%esp
81000576:	68 80 7b 00 81       	push   $0x81007b80
8100057b:	68 58 6b 00 81       	push   $0x81006b58
81000580:	50                   	push   %eax
81000581:	e8 f1 0b 00 00       	call   81001177 <fiprintf>
81000586:	83 c4 10             	add    $0x10,%esp
81000589:	e9 bd fe ff ff       	jmp    8100044b <main+0x45>
      continue;
8100058e:	90                   	nop
8100058f:	e9 b7 fe ff ff       	jmp    8100044b <main+0x45>
      continue;
81000594:	90                   	nop
  for (;;) {
81000595:	e9 b1 fe ff ff       	jmp    8100044b <main+0x45>

8100059a <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100059a:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100059d:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100059f:	8e c0                	mov    %eax,%es
	mov %ax, %fs
810005a1:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
810005a3:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
810005a5:	e9 00 00 00 00       	jmp    810005aa <cstart>

810005aa <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
810005aa:	55                   	push   %ebp
810005ab:	89 e5                	mov    %esp,%ebp
810005ad:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
810005b0:	c7 45 f4 80 79 00 81 	movl   $0x81007980,-0xc(%ebp)
    while (start < __bss_end__) {
810005b7:	eb 0c                	jmp    810005c5 <cstart+0x1b>
        *(start++) = 0;
810005b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005bc:	8d 50 01             	lea    0x1(%eax),%edx
810005bf:	89 55 f4             	mov    %edx,-0xc(%ebp)
810005c2:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810005c5:	81 7d f4 20 80 00 81 	cmpl   $0x81008020,-0xc(%ebp)
810005cc:	72 eb                	jb     810005b9 <cstart+0xf>
    }
    
    exit(main(argc, argv));
810005ce:	83 ec 08             	sub    $0x8,%esp
810005d1:	ff 75 0c             	push   0xc(%ebp)
810005d4:	ff 75 08             	push   0x8(%ebp)
810005d7:	e8 2a fe ff ff       	call   81000406 <main>
810005dc:	83 c4 10             	add    $0x10,%esp
810005df:	83 ec 0c             	sub    $0xc,%esp
810005e2:	50                   	push   %eax
810005e3:	e8 ec 02 00 00       	call   810008d4 <exit>

810005e8 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810005e8:	55                   	push   %ebp
810005e9:	89 e5                	mov    %esp,%ebp
810005eb:	57                   	push   %edi
810005ec:	56                   	push   %esi
810005ed:	53                   	push   %ebx
810005ee:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810005f1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810005f8:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810005ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000602:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
81000605:	8b 55 08             	mov    0x8(%ebp),%edx
81000608:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
8100060b:	8b 4d 08             	mov    0x8(%ebp),%ecx
8100060e:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
81000611:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000614:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
81000617:	8b 75 08             	mov    0x8(%ebp),%esi
8100061a:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
8100061c:	8d 7d e8             	lea    -0x18(%ebp),%edi
8100061f:	50                   	push   %eax
81000620:	52                   	push   %edx
81000621:	51                   	push   %ecx
81000622:	53                   	push   %ebx
81000623:	56                   	push   %esi
81000624:	ff 1f                	lcall  *(%edi)
81000626:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
81000629:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100062c:	83 c4 10             	add    $0x10,%esp
8100062f:	5b                   	pop    %ebx
81000630:	5e                   	pop    %esi
81000631:	5f                   	pop    %edi
81000632:	5d                   	pop    %ebp
81000633:	c3                   	ret    

81000634 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000634:	55                   	push   %ebp
81000635:	89 e5                	mov    %esp,%ebp
81000637:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100063a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100063e:	7e 1b                	jle    8100065b <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000640:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000647:	8b 45 08             	mov    0x8(%ebp),%eax
8100064a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100064d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000650:	50                   	push   %eax
81000651:	e8 92 ff ff ff       	call   810005e8 <sys_call>
81000656:	83 c4 04             	add    $0x4,%esp
81000659:	eb 01                	jmp    8100065c <msleep+0x28>
    if (ms <= 0) return;
8100065b:	90                   	nop

}
8100065c:	c9                   	leave  
8100065d:	c3                   	ret    

8100065e <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100065e:	55                   	push   %ebp
8100065f:	89 e5                	mov    %esp,%ebp
81000661:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000664:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100066b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100066e:	50                   	push   %eax
8100066f:	e8 74 ff ff ff       	call   810005e8 <sys_call>
81000674:	83 c4 04             	add    $0x4,%esp
}
81000677:	c9                   	leave  
81000678:	c3                   	ret    

81000679 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000679:	55                   	push   %ebp
8100067a:	89 e5                	mov    %esp,%ebp
8100067c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100067f:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000686:	8b 45 08             	mov    0x8(%ebp),%eax
81000689:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100068c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100068f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000692:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000695:	50                   	push   %eax
81000696:	e8 4d ff ff ff       	call   810005e8 <sys_call>
8100069b:	83 c4 04             	add    $0x4,%esp
}
8100069e:	90                   	nop
8100069f:	c9                   	leave  
810006a0:	c3                   	ret    

810006a1 <fork>:

int fork (void) {
810006a1:	55                   	push   %ebp
810006a2:	89 e5                	mov    %esp,%ebp
810006a4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
810006a7:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
810006ae:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006b1:	50                   	push   %eax
810006b2:	e8 31 ff ff ff       	call   810005e8 <sys_call>
810006b7:	83 c4 04             	add    $0x4,%esp
}
810006ba:	c9                   	leave  
810006bb:	c3                   	ret    

810006bc <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
810006bc:	55                   	push   %ebp
810006bd:	89 e5                	mov    %esp,%ebp
810006bf:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810006c2:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810006c9:	8b 45 08             	mov    0x8(%ebp),%eax
810006cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810006cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810006d5:	8b 45 10             	mov    0x10(%ebp),%eax
810006d8:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810006db:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006de:	50                   	push   %eax
810006df:	e8 04 ff ff ff       	call   810005e8 <sys_call>
810006e4:	83 c4 04             	add    $0x4,%esp
}
810006e7:	c9                   	leave  
810006e8:	c3                   	ret    

810006e9 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810006e9:	55                   	push   %ebp
810006ea:	89 e5                	mov    %esp,%ebp
810006ec:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810006ef:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810006f6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006f9:	50                   	push   %eax
810006fa:	e8 e9 fe ff ff       	call   810005e8 <sys_call>
810006ff:	83 c4 04             	add    $0x4,%esp
}
81000702:	c9                   	leave  
81000703:	c3                   	ret    

81000704 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000704:	55                   	push   %ebp
81000705:	89 e5                	mov    %esp,%ebp
81000707:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100070a:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000711:	8b 45 08             	mov    0x8(%ebp),%eax
81000714:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
81000717:	8b 45 0c             	mov    0xc(%ebp),%eax
8100071a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100071d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000720:	50                   	push   %eax
81000721:	e8 c2 fe ff ff       	call   810005e8 <sys_call>
81000726:	83 c4 04             	add    $0x4,%esp
}
81000729:	c9                   	leave  
8100072a:	c3                   	ret    

8100072b <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
8100072b:	55                   	push   %ebp
8100072c:	89 e5                	mov    %esp,%ebp
8100072e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000731:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000738:	8b 45 08             	mov    0x8(%ebp),%eax
8100073b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100073e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000741:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000744:	8b 45 10             	mov    0x10(%ebp),%eax
81000747:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100074a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100074d:	50                   	push   %eax
8100074e:	e8 95 fe ff ff       	call   810005e8 <sys_call>
81000753:	83 c4 04             	add    $0x4,%esp
}
81000756:	c9                   	leave  
81000757:	c3                   	ret    

81000758 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000758:	55                   	push   %ebp
81000759:	89 e5                	mov    %esp,%ebp
8100075b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100075e:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000765:	8b 45 08             	mov    0x8(%ebp),%eax
81000768:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100076b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100076e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000771:	8b 45 10             	mov    0x10(%ebp),%eax
81000774:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000777:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100077a:	50                   	push   %eax
8100077b:	e8 68 fe ff ff       	call   810005e8 <sys_call>
81000780:	83 c4 04             	add    $0x4,%esp
}
81000783:	c9                   	leave  
81000784:	c3                   	ret    

81000785 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000785:	55                   	push   %ebp
81000786:	89 e5                	mov    %esp,%ebp
81000788:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100078b:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000792:	8b 45 08             	mov    0x8(%ebp),%eax
81000795:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000798:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100079b:	50                   	push   %eax
8100079c:	e8 47 fe ff ff       	call   810005e8 <sys_call>
810007a1:	83 c4 04             	add    $0x4,%esp
}
810007a4:	c9                   	leave  
810007a5:	c3                   	ret    

810007a6 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
810007a6:	55                   	push   %ebp
810007a7:	89 e5                	mov    %esp,%ebp
810007a9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810007ac:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
810007b3:	8b 45 08             	mov    0x8(%ebp),%eax
810007b6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
810007b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810007bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810007bf:	8b 45 10             	mov    0x10(%ebp),%eax
810007c2:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810007c5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007c8:	50                   	push   %eax
810007c9:	e8 1a fe ff ff       	call   810005e8 <sys_call>
810007ce:	83 c4 04             	add    $0x4,%esp
}
810007d1:	c9                   	leave  
810007d2:	c3                   	ret    

810007d3 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810007d3:	55                   	push   %ebp
810007d4:	89 e5                	mov    %esp,%ebp
810007d6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810007d9:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810007e0:	8b 45 08             	mov    0x8(%ebp),%eax
810007e3:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810007e6:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007e9:	50                   	push   %eax
810007ea:	e8 f9 fd ff ff       	call   810005e8 <sys_call>
810007ef:	83 c4 04             	add    $0x4,%esp
}
810007f2:	c9                   	leave  
810007f3:	c3                   	ret    

810007f4 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810007f4:	55                   	push   %ebp
810007f5:	89 e5                	mov    %esp,%ebp
810007f7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810007fa:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000801:	8b 45 08             	mov    0x8(%ebp),%eax
81000804:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000807:	8b 45 0c             	mov    0xc(%ebp),%eax
8100080a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
8100080d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000810:	50                   	push   %eax
81000811:	e8 d2 fd ff ff       	call   810005e8 <sys_call>
81000816:	83 c4 04             	add    $0x4,%esp
}
81000819:	c9                   	leave  
8100081a:	c3                   	ret    

8100081b <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
8100081b:	55                   	push   %ebp
8100081c:	89 e5                	mov    %esp,%ebp
8100081e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000821:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
81000828:	8b 45 08             	mov    0x8(%ebp),%eax
8100082b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
8100082e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000831:	50                   	push   %eax
81000832:	e8 b1 fd ff ff       	call   810005e8 <sys_call>
81000837:	83 c4 04             	add    $0x4,%esp
}
8100083a:	c9                   	leave  
8100083b:	c3                   	ret    

8100083c <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
8100083c:	55                   	push   %ebp
8100083d:	89 e5                	mov    %esp,%ebp
8100083f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000842:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000849:	8b 45 08             	mov    0x8(%ebp),%eax
8100084c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100084f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000852:	50                   	push   %eax
81000853:	e8 90 fd ff ff       	call   810005e8 <sys_call>
81000858:	83 c4 04             	add    $0x4,%esp
}
8100085b:	c9                   	leave  
8100085c:	c3                   	ret    

8100085d <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
8100085d:	55                   	push   %ebp
8100085e:	89 e5                	mov    %esp,%ebp
81000860:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000863:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
8100086a:	8b 45 08             	mov    0x8(%ebp),%eax
8100086d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000870:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000873:	50                   	push   %eax
81000874:	e8 6f fd ff ff       	call   810005e8 <sys_call>
81000879:	83 c4 04             	add    $0x4,%esp
}
8100087c:	90                   	nop
8100087d:	c9                   	leave  
8100087e:	c3                   	ret    

8100087f <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
8100087f:	55                   	push   %ebp
81000880:	89 e5                	mov    %esp,%ebp
81000882:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000885:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
8100088c:	8b 45 08             	mov    0x8(%ebp),%eax
8100088f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000892:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000895:	50                   	push   %eax
81000896:	e8 4d fd ff ff       	call   810005e8 <sys_call>
8100089b:	83 c4 04             	add    $0x4,%esp
8100089e:	c9                   	leave  
8100089f:	c3                   	ret    

810008a0 <atoi>:
810008a0:	55                   	push   %ebp
810008a1:	89 e5                	mov    %esp,%ebp
810008a3:	83 ec 08             	sub    $0x8,%esp
810008a6:	83 ec 04             	sub    $0x4,%esp
810008a9:	6a 0a                	push   $0xa
810008ab:	6a 00                	push   $0x0
810008ad:	ff 75 08             	push   0x8(%ebp)
810008b0:	e8 e1 3f 00 00       	call   81004896 <strtol>
810008b5:	83 c4 10             	add    $0x10,%esp
810008b8:	c9                   	leave  
810008b9:	c3                   	ret    

810008ba <_atoi_r>:
810008ba:	55                   	push   %ebp
810008bb:	89 e5                	mov    %esp,%ebp
810008bd:	83 ec 08             	sub    $0x8,%esp
810008c0:	6a 0a                	push   $0xa
810008c2:	6a 00                	push   $0x0
810008c4:	ff 75 0c             	push   0xc(%ebp)
810008c7:	ff 75 08             	push   0x8(%ebp)
810008ca:	e8 7d 3f 00 00       	call   8100484c <_strtol_r>
810008cf:	83 c4 10             	add    $0x10,%esp
810008d2:	c9                   	leave  
810008d3:	c3                   	ret    

810008d4 <exit>:
810008d4:	55                   	push   %ebp
810008d5:	89 e5                	mov    %esp,%ebp
810008d7:	83 ec 08             	sub    $0x8,%esp
810008da:	83 ec 08             	sub    $0x8,%esp
810008dd:	6a 00                	push   $0x0
810008df:	ff 75 08             	push   0x8(%ebp)
810008e2:	e8 ac 42 00 00       	call   81004b93 <__call_exitprocs>
810008e7:	83 c4 10             	add    $0x10,%esp
810008ea:	a1 00 6c 00 81       	mov    0x81006c00,%eax
810008ef:	8b 40 3c             	mov    0x3c(%eax),%eax
810008f2:	85 c0                	test   %eax,%eax
810008f4:	74 17                	je     8100090d <exit+0x39>
810008f6:	a1 00 6c 00 81       	mov    0x81006c00,%eax
810008fb:	8b 40 3c             	mov    0x3c(%eax),%eax
810008fe:	8b 15 00 6c 00 81    	mov    0x81006c00,%edx
81000904:	83 ec 0c             	sub    $0xc,%esp
81000907:	52                   	push   %edx
81000908:	ff d0                	call   *%eax
8100090a:	83 c4 10             	add    $0x10,%esp
8100090d:	83 ec 0c             	sub    $0xc,%esp
81000910:	ff 75 08             	push   0x8(%ebp)
81000913:	e8 45 ff ff ff       	call   8100085d <_exit>

81000918 <__sflush_r>:
81000918:	55                   	push   %ebp
81000919:	89 e5                	mov    %esp,%ebp
8100091b:	57                   	push   %edi
8100091c:	56                   	push   %esi
8100091d:	53                   	push   %ebx
8100091e:	83 ec 1c             	sub    $0x1c,%esp
81000921:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000924:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000928:	66 89 45 de          	mov    %ax,-0x22(%ebp)
8100092c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000930:	83 e0 08             	and    $0x8,%eax
81000933:	85 c0                	test   %eax,%eax
81000935:	0f 85 93 01 00 00    	jne    81000ace <__sflush_r+0x1b6>
8100093b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100093f:	80 cc 08             	or     $0x8,%ah
81000942:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000946:	8b 43 04             	mov    0x4(%ebx),%eax
81000949:	85 c0                	test   %eax,%eax
8100094b:	7f 0b                	jg     81000958 <__sflush_r+0x40>
8100094d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000950:	85 c0                	test   %eax,%eax
81000952:	0f 8e 6f 01 00 00    	jle    81000ac7 <__sflush_r+0x1af>
81000958:	8b 43 28             	mov    0x28(%ebx),%eax
8100095b:	85 c0                	test   %eax,%eax
8100095d:	0f 84 64 01 00 00    	je     81000ac7 <__sflush_r+0x1af>
81000963:	8b 45 08             	mov    0x8(%ebp),%eax
81000966:	8b 00                	mov    (%eax),%eax
81000968:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100096b:	8b 45 08             	mov    0x8(%ebp),%eax
8100096e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000974:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000978:	98                   	cwtl   
81000979:	25 00 10 00 00       	and    $0x1000,%eax
8100097e:	85 c0                	test   %eax,%eax
81000980:	74 08                	je     8100098a <__sflush_r+0x72>
81000982:	8b 43 50             	mov    0x50(%ebx),%eax
81000985:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000988:	eb 64                	jmp    810009ee <__sflush_r+0xd6>
8100098a:	8b 43 28             	mov    0x28(%ebx),%eax
8100098d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000990:	6a 01                	push   $0x1
81000992:	6a 00                	push   $0x0
81000994:	52                   	push   %edx
81000995:	ff 75 08             	push   0x8(%ebp)
81000998:	ff d0                	call   *%eax
8100099a:	83 c4 10             	add    $0x10,%esp
8100099d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810009a0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810009a4:	75 48                	jne    810009ee <__sflush_r+0xd6>
810009a6:	8b 45 08             	mov    0x8(%ebp),%eax
810009a9:	8b 00                	mov    (%eax),%eax
810009ab:	85 c0                	test   %eax,%eax
810009ad:	74 3f                	je     810009ee <__sflush_r+0xd6>
810009af:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810009b6:	8b 45 08             	mov    0x8(%ebp),%eax
810009b9:	8b 00                	mov    (%eax),%eax
810009bb:	83 f8 1d             	cmp    $0x1d,%eax
810009be:	74 0a                	je     810009ca <__sflush_r+0xb2>
810009c0:	8b 45 08             	mov    0x8(%ebp),%eax
810009c3:	8b 00                	mov    (%eax),%eax
810009c5:	83 f8 16             	cmp    $0x16,%eax
810009c8:	75 11                	jne    810009db <__sflush_r+0xc3>
810009ca:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810009d1:	8b 45 08             	mov    0x8(%ebp),%eax
810009d4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810009d7:	89 10                	mov    %edx,(%eax)
810009d9:	eb 0b                	jmp    810009e6 <__sflush_r+0xce>
810009db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009df:	83 c8 40             	or     $0x40,%eax
810009e2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810009e6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810009e9:	e9 48 01 00 00       	jmp    81000b36 <__sflush_r+0x21e>
810009ee:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009f2:	98                   	cwtl   
810009f3:	83 e0 04             	and    $0x4,%eax
810009f6:	85 c0                	test   %eax,%eax
810009f8:	74 13                	je     81000a0d <__sflush_r+0xf5>
810009fa:	8b 43 04             	mov    0x4(%ebx),%eax
810009fd:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000a00:	8b 43 30             	mov    0x30(%ebx),%eax
81000a03:	85 c0                	test   %eax,%eax
81000a05:	74 06                	je     81000a0d <__sflush_r+0xf5>
81000a07:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000a0a:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000a0d:	8b 43 28             	mov    0x28(%ebx),%eax
81000a10:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000a13:	6a 00                	push   $0x0
81000a15:	ff 75 e4             	push   -0x1c(%ebp)
81000a18:	52                   	push   %edx
81000a19:	ff 75 08             	push   0x8(%ebp)
81000a1c:	ff d0                	call   *%eax
81000a1e:	83 c4 10             	add    $0x10,%esp
81000a21:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000a24:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a28:	75 1d                	jne    81000a47 <__sflush_r+0x12f>
81000a2a:	8b 45 08             	mov    0x8(%ebp),%eax
81000a2d:	8b 00                	mov    (%eax),%eax
81000a2f:	85 c0                	test   %eax,%eax
81000a31:	74 14                	je     81000a47 <__sflush_r+0x12f>
81000a33:	8b 45 08             	mov    0x8(%ebp),%eax
81000a36:	8b 00                	mov    (%eax),%eax
81000a38:	83 f8 1d             	cmp    $0x1d,%eax
81000a3b:	74 0a                	je     81000a47 <__sflush_r+0x12f>
81000a3d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a40:	8b 00                	mov    (%eax),%eax
81000a42:	83 f8 16             	cmp    $0x16,%eax
81000a45:	75 6e                	jne    81000ab5 <__sflush_r+0x19d>
81000a47:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a4b:	80 e4 f7             	and    $0xf7,%ah
81000a4e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a52:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000a59:	8b 43 10             	mov    0x10(%ebx),%eax
81000a5c:	89 03                	mov    %eax,(%ebx)
81000a5e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a62:	98                   	cwtl   
81000a63:	25 00 10 00 00       	and    $0x1000,%eax
81000a68:	85 c0                	test   %eax,%eax
81000a6a:	74 15                	je     81000a81 <__sflush_r+0x169>
81000a6c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000a70:	75 09                	jne    81000a7b <__sflush_r+0x163>
81000a72:	8b 45 08             	mov    0x8(%ebp),%eax
81000a75:	8b 00                	mov    (%eax),%eax
81000a77:	85 c0                	test   %eax,%eax
81000a79:	75 06                	jne    81000a81 <__sflush_r+0x169>
81000a7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000a7e:	89 43 50             	mov    %eax,0x50(%ebx)
81000a81:	8b 45 08             	mov    0x8(%ebp),%eax
81000a84:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000a87:	89 10                	mov    %edx,(%eax)
81000a89:	8b 43 30             	mov    0x30(%ebx),%eax
81000a8c:	85 c0                	test   %eax,%eax
81000a8e:	74 37                	je     81000ac7 <__sflush_r+0x1af>
81000a90:	8b 53 30             	mov    0x30(%ebx),%edx
81000a93:	8d 43 40             	lea    0x40(%ebx),%eax
81000a96:	39 c2                	cmp    %eax,%edx
81000a98:	74 12                	je     81000aac <__sflush_r+0x194>
81000a9a:	8b 43 30             	mov    0x30(%ebx),%eax
81000a9d:	83 ec 08             	sub    $0x8,%esp
81000aa0:	50                   	push   %eax
81000aa1:	ff 75 08             	push   0x8(%ebp)
81000aa4:	e8 fa 06 00 00       	call   810011a3 <_free_r>
81000aa9:	83 c4 10             	add    $0x10,%esp
81000aac:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000ab3:	eb 12                	jmp    81000ac7 <__sflush_r+0x1af>
81000ab5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab9:	83 c8 40             	or     $0x40,%eax
81000abc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ac0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000ac5:	eb 6f                	jmp    81000b36 <__sflush_r+0x21e>
81000ac7:	b8 00 00 00 00       	mov    $0x0,%eax
81000acc:	eb 68                	jmp    81000b36 <__sflush_r+0x21e>
81000ace:	8b 73 10             	mov    0x10(%ebx),%esi
81000ad1:	85 f6                	test   %esi,%esi
81000ad3:	75 07                	jne    81000adc <__sflush_r+0x1c4>
81000ad5:	b8 00 00 00 00       	mov    $0x0,%eax
81000ada:	eb 5a                	jmp    81000b36 <__sflush_r+0x21e>
81000adc:	8b 03                	mov    (%ebx),%eax
81000ade:	29 f0                	sub    %esi,%eax
81000ae0:	89 c7                	mov    %eax,%edi
81000ae2:	89 33                	mov    %esi,(%ebx)
81000ae4:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000ae8:	83 e0 03             	and    $0x3,%eax
81000aeb:	85 c0                	test   %eax,%eax
81000aed:	75 05                	jne    81000af4 <__sflush_r+0x1dc>
81000aef:	8b 43 14             	mov    0x14(%ebx),%eax
81000af2:	eb 05                	jmp    81000af9 <__sflush_r+0x1e1>
81000af4:	b8 00 00 00 00       	mov    $0x0,%eax
81000af9:	89 43 08             	mov    %eax,0x8(%ebx)
81000afc:	eb 2f                	jmp    81000b2d <__sflush_r+0x215>
81000afe:	8b 43 24             	mov    0x24(%ebx),%eax
81000b01:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000b04:	57                   	push   %edi
81000b05:	56                   	push   %esi
81000b06:	52                   	push   %edx
81000b07:	ff 75 08             	push   0x8(%ebp)
81000b0a:	ff d0                	call   *%eax
81000b0c:	83 c4 10             	add    $0x10,%esp
81000b0f:	85 c0                	test   %eax,%eax
81000b11:	7f 12                	jg     81000b25 <__sflush_r+0x20d>
81000b13:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b17:	83 c8 40             	or     $0x40,%eax
81000b1a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b1e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000b23:	eb 11                	jmp    81000b36 <__sflush_r+0x21e>
81000b25:	89 c1                	mov    %eax,%ecx
81000b27:	89 c8                	mov    %ecx,%eax
81000b29:	01 c6                	add    %eax,%esi
81000b2b:	29 cf                	sub    %ecx,%edi
81000b2d:	85 ff                	test   %edi,%edi
81000b2f:	7f cd                	jg     81000afe <__sflush_r+0x1e6>
81000b31:	b8 00 00 00 00       	mov    $0x0,%eax
81000b36:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000b39:	5b                   	pop    %ebx
81000b3a:	5e                   	pop    %esi
81000b3b:	5f                   	pop    %edi
81000b3c:	5d                   	pop    %ebp
81000b3d:	c3                   	ret    

81000b3e <_fflush_r>:
81000b3e:	55                   	push   %ebp
81000b3f:	89 e5                	mov    %esp,%ebp
81000b41:	53                   	push   %ebx
81000b42:	83 ec 14             	sub    $0x14,%esp
81000b45:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000b48:	8b 45 08             	mov    0x8(%ebp),%eax
81000b4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000b4e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b52:	74 18                	je     81000b6c <_fflush_r+0x2e>
81000b54:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b57:	8b 40 38             	mov    0x38(%eax),%eax
81000b5a:	85 c0                	test   %eax,%eax
81000b5c:	75 0e                	jne    81000b6c <_fflush_r+0x2e>
81000b5e:	83 ec 0c             	sub    $0xc,%esp
81000b61:	ff 75 f4             	push   -0xc(%ebp)
81000b64:	e8 d8 04 00 00       	call   81001041 <__sinit>
81000b69:	83 c4 10             	add    $0x10,%esp
81000b6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b70:	66 85 c0             	test   %ax,%ax
81000b73:	75 07                	jne    81000b7c <_fflush_r+0x3e>
81000b75:	b8 00 00 00 00       	mov    $0x0,%eax
81000b7a:	eb 15                	jmp    81000b91 <_fflush_r+0x53>
81000b7c:	83 ec 08             	sub    $0x8,%esp
81000b7f:	53                   	push   %ebx
81000b80:	ff 75 08             	push   0x8(%ebp)
81000b83:	e8 90 fd ff ff       	call   81000918 <__sflush_r>
81000b88:	83 c4 10             	add    $0x10,%esp
81000b8b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000b8e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000b91:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000b94:	c9                   	leave  
81000b95:	c3                   	ret    

81000b96 <fflush>:
81000b96:	55                   	push   %ebp
81000b97:	89 e5                	mov    %esp,%ebp
81000b99:	83 ec 08             	sub    $0x8,%esp
81000b9c:	8b 55 08             	mov    0x8(%ebp),%edx
81000b9f:	85 d2                	test   %edx,%edx
81000ba1:	75 18                	jne    81000bbb <fflush+0x25>
81000ba3:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81000ba8:	83 ec 08             	sub    $0x8,%esp
81000bab:	68 3e 0b 00 81       	push   $0x81000b3e
81000bb0:	50                   	push   %eax
81000bb1:	e8 91 0b 00 00       	call   81001747 <_fwalk_reent>
81000bb6:	83 c4 10             	add    $0x10,%esp
81000bb9:	eb 12                	jmp    81000bcd <fflush+0x37>
81000bbb:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81000bc0:	83 ec 08             	sub    $0x8,%esp
81000bc3:	52                   	push   %edx
81000bc4:	50                   	push   %eax
81000bc5:	e8 74 ff ff ff       	call   81000b3e <_fflush_r>
81000bca:	83 c4 10             	add    $0x10,%esp
81000bcd:	c9                   	leave  
81000bce:	c3                   	ret    

81000bcf <_fgets_r>:
81000bcf:	55                   	push   %ebp
81000bd0:	89 e5                	mov    %esp,%ebp
81000bd2:	83 ec 28             	sub    $0x28,%esp
81000bd5:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000bd9:	7f 0a                	jg     81000be5 <_fgets_r+0x16>
81000bdb:	b8 00 00 00 00       	mov    $0x0,%eax
81000be0:	e9 46 01 00 00       	jmp    81000d2b <_fgets_r+0x15c>
81000be5:	8b 45 0c             	mov    0xc(%ebp),%eax
81000be8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000beb:	8b 45 08             	mov    0x8(%ebp),%eax
81000bee:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000bf1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000bf5:	74 18                	je     81000c0f <_fgets_r+0x40>
81000bf7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000bfa:	8b 40 38             	mov    0x38(%eax),%eax
81000bfd:	85 c0                	test   %eax,%eax
81000bff:	75 0e                	jne    81000c0f <_fgets_r+0x40>
81000c01:	83 ec 0c             	sub    $0xc,%esp
81000c04:	ff 75 ec             	push   -0x14(%ebp)
81000c07:	e8 35 04 00 00       	call   81001041 <__sinit>
81000c0c:	83 c4 10             	add    $0x10,%esp
81000c0f:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000c13:	8b 45 14             	mov    0x14(%ebp),%eax
81000c16:	8b 40 04             	mov    0x4(%eax),%eax
81000c19:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c1c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000c20:	75 34                	jne    81000c56 <_fgets_r+0x87>
81000c22:	83 ec 08             	sub    $0x8,%esp
81000c25:	ff 75 14             	push   0x14(%ebp)
81000c28:	ff 75 08             	push   0x8(%ebp)
81000c2b:	e8 a4 33 00 00       	call   81003fd4 <__srefill_r>
81000c30:	83 c4 10             	add    $0x10,%esp
81000c33:	85 c0                	test   %eax,%eax
81000c35:	74 16                	je     81000c4d <_fgets_r+0x7e>
81000c37:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000c3a:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000c3d:	0f 85 de 00 00 00    	jne    81000d21 <_fgets_r+0x152>
81000c43:	b8 00 00 00 00       	mov    $0x0,%eax
81000c48:	e9 de 00 00 00       	jmp    81000d2b <_fgets_r+0x15c>
81000c4d:	8b 45 14             	mov    0x14(%ebp),%eax
81000c50:	8b 40 04             	mov    0x4(%eax),%eax
81000c53:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c56:	8b 45 14             	mov    0x14(%ebp),%eax
81000c59:	8b 00                	mov    (%eax),%eax
81000c5b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000c5e:	8b 45 10             	mov    0x10(%ebp),%eax
81000c61:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000c64:	76 06                	jbe    81000c6c <_fgets_r+0x9d>
81000c66:	8b 45 10             	mov    0x10(%ebp),%eax
81000c69:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c6c:	83 ec 04             	sub    $0x4,%esp
81000c6f:	ff 75 f4             	push   -0xc(%ebp)
81000c72:	6a 0a                	push   $0xa
81000c74:	ff 75 e8             	push   -0x18(%ebp)
81000c77:	e8 c4 24 00 00       	call   81003140 <memchr>
81000c7c:	83 c4 10             	add    $0x10,%esp
81000c7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000c82:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c86:	74 4a                	je     81000cd2 <_fgets_r+0x103>
81000c88:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000c8c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000c8f:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000c92:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000c95:	8b 45 14             	mov    0x14(%ebp),%eax
81000c98:	8b 40 04             	mov    0x4(%eax),%eax
81000c9b:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000c9e:	89 c2                	mov    %eax,%edx
81000ca0:	8b 45 14             	mov    0x14(%ebp),%eax
81000ca3:	89 50 04             	mov    %edx,0x4(%eax)
81000ca6:	8b 45 14             	mov    0x14(%ebp),%eax
81000ca9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000cac:	89 10                	mov    %edx,(%eax)
81000cae:	83 ec 04             	sub    $0x4,%esp
81000cb1:	ff 75 f4             	push   -0xc(%ebp)
81000cb4:	ff 75 e8             	push   -0x18(%ebp)
81000cb7:	ff 75 f0             	push   -0x10(%ebp)
81000cba:	e8 69 25 00 00       	call   81003228 <memcpy>
81000cbf:	83 c4 10             	add    $0x10,%esp
81000cc2:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000cc5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cc8:	01 d0                	add    %edx,%eax
81000cca:	c6 00 00             	movb   $0x0,(%eax)
81000ccd:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cd0:	eb 59                	jmp    81000d2b <_fgets_r+0x15c>
81000cd2:	8b 45 14             	mov    0x14(%ebp),%eax
81000cd5:	8b 40 04             	mov    0x4(%eax),%eax
81000cd8:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000cdb:	89 c2                	mov    %eax,%edx
81000cdd:	8b 45 14             	mov    0x14(%ebp),%eax
81000ce0:	89 50 04             	mov    %edx,0x4(%eax)
81000ce3:	8b 45 14             	mov    0x14(%ebp),%eax
81000ce6:	8b 10                	mov    (%eax),%edx
81000ce8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ceb:	01 c2                	add    %eax,%edx
81000ced:	8b 45 14             	mov    0x14(%ebp),%eax
81000cf0:	89 10                	mov    %edx,(%eax)
81000cf2:	83 ec 04             	sub    $0x4,%esp
81000cf5:	ff 75 f4             	push   -0xc(%ebp)
81000cf8:	ff 75 e8             	push   -0x18(%ebp)
81000cfb:	ff 75 f0             	push   -0x10(%ebp)
81000cfe:	e8 25 25 00 00       	call   81003228 <memcpy>
81000d03:	83 c4 10             	add    $0x10,%esp
81000d06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000d09:	01 45 f0             	add    %eax,-0x10(%ebp)
81000d0c:	8b 45 10             	mov    0x10(%ebp),%eax
81000d0f:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000d12:	89 45 10             	mov    %eax,0x10(%ebp)
81000d15:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000d19:	0f 85 f4 fe ff ff    	jne    81000c13 <_fgets_r+0x44>
81000d1f:	eb 01                	jmp    81000d22 <_fgets_r+0x153>
81000d21:	90                   	nop
81000d22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d25:	c6 00 00             	movb   $0x0,(%eax)
81000d28:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d2b:	c9                   	leave  
81000d2c:	c3                   	ret    

81000d2d <fgets>:
81000d2d:	55                   	push   %ebp
81000d2e:	89 e5                	mov    %esp,%ebp
81000d30:	83 ec 08             	sub    $0x8,%esp
81000d33:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81000d38:	ff 75 10             	push   0x10(%ebp)
81000d3b:	ff 75 0c             	push   0xc(%ebp)
81000d3e:	ff 75 08             	push   0x8(%ebp)
81000d41:	50                   	push   %eax
81000d42:	e8 88 fe ff ff       	call   81000bcf <_fgets_r>
81000d47:	83 c4 10             	add    $0x10,%esp
81000d4a:	c9                   	leave  
81000d4b:	c3                   	ret    

81000d4c <std>:
81000d4c:	55                   	push   %ebp
81000d4d:	89 e5                	mov    %esp,%ebp
81000d4f:	83 ec 08             	sub    $0x8,%esp
81000d52:	8b 45 08             	mov    0x8(%ebp),%eax
81000d55:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000d5b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d5e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000d65:	8b 45 08             	mov    0x8(%ebp),%eax
81000d68:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000d6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d72:	89 c2                	mov    %eax,%edx
81000d74:	8b 45 08             	mov    0x8(%ebp),%eax
81000d77:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000d7b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000d85:	8b 45 10             	mov    0x10(%ebp),%eax
81000d88:	89 c2                	mov    %eax,%edx
81000d8a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d8d:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000d91:	8b 45 08             	mov    0x8(%ebp),%eax
81000d94:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000d9b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d9e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000da5:	8b 45 08             	mov    0x8(%ebp),%eax
81000da8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000daf:	8b 45 08             	mov    0x8(%ebp),%eax
81000db2:	83 c0 5c             	add    $0x5c,%eax
81000db5:	83 ec 04             	sub    $0x4,%esp
81000db8:	6a 08                	push   $0x8
81000dba:	6a 00                	push   $0x0
81000dbc:	50                   	push   %eax
81000dbd:	e8 ae 24 00 00       	call   81003270 <memset>
81000dc2:	83 c4 10             	add    $0x10,%esp
81000dc5:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc8:	8b 55 08             	mov    0x8(%ebp),%edx
81000dcb:	89 50 1c             	mov    %edx,0x1c(%eax)
81000dce:	8b 45 08             	mov    0x8(%ebp),%eax
81000dd1:	c7 40 20 15 42 00 81 	movl   $0x81004215,0x20(%eax)
81000dd8:	8b 45 08             	mov    0x8(%ebp),%eax
81000ddb:	c7 40 24 63 42 00 81 	movl   $0x81004263,0x24(%eax)
81000de2:	8b 45 08             	mov    0x8(%ebp),%eax
81000de5:	c7 40 28 be 42 00 81 	movl   $0x810042be,0x28(%eax)
81000dec:	8b 45 08             	mov    0x8(%ebp),%eax
81000def:	c7 40 2c 08 43 00 81 	movl   $0x81004308,0x2c(%eax)
81000df6:	90                   	nop
81000df7:	c9                   	leave  
81000df8:	c3                   	ret    

81000df9 <stdin_init>:
81000df9:	55                   	push   %ebp
81000dfa:	89 e5                	mov    %esp,%ebp
81000dfc:	83 ec 08             	sub    $0x8,%esp
81000dff:	83 ec 04             	sub    $0x4,%esp
81000e02:	6a 00                	push   $0x0
81000e04:	6a 04                	push   $0x4
81000e06:	ff 75 08             	push   0x8(%ebp)
81000e09:	e8 3e ff ff ff       	call   81000d4c <std>
81000e0e:	83 c4 10             	add    $0x10,%esp
81000e11:	90                   	nop
81000e12:	c9                   	leave  
81000e13:	c3                   	ret    

81000e14 <stdout_init>:
81000e14:	55                   	push   %ebp
81000e15:	89 e5                	mov    %esp,%ebp
81000e17:	83 ec 08             	sub    $0x8,%esp
81000e1a:	83 ec 04             	sub    $0x4,%esp
81000e1d:	6a 01                	push   $0x1
81000e1f:	6a 09                	push   $0x9
81000e21:	ff 75 08             	push   0x8(%ebp)
81000e24:	e8 23 ff ff ff       	call   81000d4c <std>
81000e29:	83 c4 10             	add    $0x10,%esp
81000e2c:	90                   	nop
81000e2d:	c9                   	leave  
81000e2e:	c3                   	ret    

81000e2f <stderr_init>:
81000e2f:	55                   	push   %ebp
81000e30:	89 e5                	mov    %esp,%ebp
81000e32:	83 ec 08             	sub    $0x8,%esp
81000e35:	83 ec 04             	sub    $0x4,%esp
81000e38:	6a 02                	push   $0x2
81000e3a:	6a 12                	push   $0x12
81000e3c:	ff 75 08             	push   0x8(%ebp)
81000e3f:	e8 08 ff ff ff       	call   81000d4c <std>
81000e44:	83 c4 10             	add    $0x10,%esp
81000e47:	90                   	nop
81000e48:	c9                   	leave  
81000e49:	c3                   	ret    

81000e4a <__sfmoreglue>:
81000e4a:	55                   	push   %ebp
81000e4b:	89 e5                	mov    %esp,%ebp
81000e4d:	53                   	push   %ebx
81000e4e:	83 ec 14             	sub    $0x14,%esp
81000e51:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e54:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000e57:	6b c0 68             	imul   $0x68,%eax,%eax
81000e5a:	83 c0 74             	add    $0x74,%eax
81000e5d:	83 ec 08             	sub    $0x8,%esp
81000e60:	50                   	push   %eax
81000e61:	ff 75 08             	push   0x8(%ebp)
81000e64:	e8 b1 1a 00 00       	call   8100291a <_malloc_r>
81000e69:	83 c4 10             	add    $0x10,%esp
81000e6c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e73:	75 07                	jne    81000e7c <__sfmoreglue+0x32>
81000e75:	b8 00 00 00 00       	mov    $0x0,%eax
81000e7a:	eb 38                	jmp    81000eb4 <__sfmoreglue+0x6a>
81000e7c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e7f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e88:	89 58 04             	mov    %ebx,0x4(%eax)
81000e8b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e8e:	8d 50 0c             	lea    0xc(%eax),%edx
81000e91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e94:	89 50 08             	mov    %edx,0x8(%eax)
81000e97:	89 d8                	mov    %ebx,%eax
81000e99:	6b c0 68             	imul   $0x68,%eax,%eax
81000e9c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000e9f:	83 c2 0c             	add    $0xc,%edx
81000ea2:	83 ec 04             	sub    $0x4,%esp
81000ea5:	50                   	push   %eax
81000ea6:	6a 00                	push   $0x0
81000ea8:	52                   	push   %edx
81000ea9:	e8 c2 23 00 00       	call   81003270 <memset>
81000eae:	83 c4 10             	add    $0x10,%esp
81000eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eb4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000eb7:	c9                   	leave  
81000eb8:	c3                   	ret    

81000eb9 <__sfp>:
81000eb9:	55                   	push   %ebp
81000eba:	89 e5                	mov    %esp,%ebp
81000ebc:	83 ec 18             	sub    $0x18,%esp
81000ebf:	e8 16 02 00 00       	call   810010da <__sfp_lock_acquire>
81000ec4:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81000ec9:	8b 40 38             	mov    0x38(%eax),%eax
81000ecc:	85 c0                	test   %eax,%eax
81000ece:	75 11                	jne    81000ee1 <__sfp+0x28>
81000ed0:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81000ed5:	83 ec 0c             	sub    $0xc,%esp
81000ed8:	50                   	push   %eax
81000ed9:	e8 63 01 00 00       	call   81001041 <__sinit>
81000ede:	83 c4 10             	add    $0x10,%esp
81000ee1:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81000ee6:	05 e0 02 00 00       	add    $0x2e0,%eax
81000eeb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000eee:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ef1:	8b 40 08             	mov    0x8(%eax),%eax
81000ef4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ef7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000efa:	8b 40 04             	mov    0x4(%eax),%eax
81000efd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f00:	eb 10                	jmp    81000f12 <__sfp+0x59>
81000f02:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f05:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000f09:	66 85 c0             	test   %ax,%ax
81000f0c:	74 58                	je     81000f66 <__sfp+0xad>
81000f0e:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81000f12:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000f16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000f1a:	79 e6                	jns    81000f02 <__sfp+0x49>
81000f1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f1f:	8b 00                	mov    (%eax),%eax
81000f21:	85 c0                	test   %eax,%eax
81000f23:	75 1e                	jne    81000f43 <__sfp+0x8a>
81000f25:	83 ec 08             	sub    $0x8,%esp
81000f28:	6a 04                	push   $0x4
81000f2a:	ff 75 08             	push   0x8(%ebp)
81000f2d:	e8 18 ff ff ff       	call   81000e4a <__sfmoreglue>
81000f32:	83 c4 10             	add    $0x10,%esp
81000f35:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000f38:	89 02                	mov    %eax,(%edx)
81000f3a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f3d:	8b 00                	mov    (%eax),%eax
81000f3f:	85 c0                	test   %eax,%eax
81000f41:	74 0a                	je     81000f4d <__sfp+0x94>
81000f43:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000f46:	8b 00                	mov    (%eax),%eax
81000f48:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000f4b:	eb a1                	jmp    81000eee <__sfp+0x35>
81000f4d:	90                   	nop
81000f4e:	e8 8d 01 00 00       	call   810010e0 <__sfp_lock_release>
81000f53:	8b 45 08             	mov    0x8(%ebp),%eax
81000f56:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000f5c:	b8 00 00 00 00       	mov    $0x0,%eax
81000f61:	e9 9e 00 00 00       	jmp    81001004 <__sfp+0x14b>
81000f66:	90                   	nop
81000f67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f6a:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81000f70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f73:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000f79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f7c:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000f83:	e8 58 01 00 00       	call   810010e0 <__sfp_lock_release>
81000f88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f8b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000f91:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f94:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000f9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f9e:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000fa5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000faf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fb2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000fb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fbc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000fc3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fc6:	83 c0 5c             	add    $0x5c,%eax
81000fc9:	83 ec 04             	sub    $0x4,%esp
81000fcc:	6a 08                	push   $0x8
81000fce:	6a 00                	push   $0x0
81000fd0:	50                   	push   %eax
81000fd1:	e8 9a 22 00 00       	call   81003270 <memset>
81000fd6:	83 c4 10             	add    $0x10,%esp
81000fd9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fdc:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000fe3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe6:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81000fed:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff0:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000ff7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ffa:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001001:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001004:	c9                   	leave  
81001005:	c3                   	ret    

81001006 <_cleanup_r>:
81001006:	55                   	push   %ebp
81001007:	89 e5                	mov    %esp,%ebp
81001009:	83 ec 18             	sub    $0x18,%esp
8100100c:	c7 45 f4 f2 4c 00 81 	movl   $0x81004cf2,-0xc(%ebp)
81001013:	83 ec 08             	sub    $0x8,%esp
81001016:	ff 75 f4             	push   -0xc(%ebp)
81001019:	ff 75 08             	push   0x8(%ebp)
8100101c:	e8 26 07 00 00       	call   81001747 <_fwalk_reent>
81001021:	83 c4 10             	add    $0x10,%esp
81001024:	90                   	nop
81001025:	c9                   	leave  
81001026:	c3                   	ret    

81001027 <_cleanup>:
81001027:	55                   	push   %ebp
81001028:	89 e5                	mov    %esp,%ebp
8100102a:	83 ec 08             	sub    $0x8,%esp
8100102d:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81001032:	83 ec 0c             	sub    $0xc,%esp
81001035:	50                   	push   %eax
81001036:	e8 cb ff ff ff       	call   81001006 <_cleanup_r>
8100103b:	83 c4 10             	add    $0x10,%esp
8100103e:	90                   	nop
8100103f:	c9                   	leave  
81001040:	c3                   	ret    

81001041 <__sinit>:
81001041:	55                   	push   %ebp
81001042:	89 e5                	mov    %esp,%ebp
81001044:	83 ec 08             	sub    $0x8,%esp
81001047:	e8 9a 00 00 00       	call   810010e6 <__sinit_lock_acquire>
8100104c:	8b 45 08             	mov    0x8(%ebp),%eax
8100104f:	8b 40 38             	mov    0x38(%eax),%eax
81001052:	85 c0                	test   %eax,%eax
81001054:	74 07                	je     8100105d <__sinit+0x1c>
81001056:	e8 91 00 00 00       	call   810010ec <__sinit_lock_release>
8100105b:	eb 7b                	jmp    810010d8 <__sinit+0x97>
8100105d:	8b 45 08             	mov    0x8(%ebp),%eax
81001060:	c7 40 3c 06 10 00 81 	movl   $0x81001006,0x3c(%eax)
81001067:	8b 45 08             	mov    0x8(%ebp),%eax
8100106a:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001071:	00 00 00 
81001074:	8b 45 08             	mov    0x8(%ebp),%eax
81001077:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100107e:	00 00 00 
81001081:	8b 45 08             	mov    0x8(%ebp),%eax
81001084:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100108a:	8b 45 08             	mov    0x8(%ebp),%eax
8100108d:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001093:	8b 45 08             	mov    0x8(%ebp),%eax
81001096:	8b 40 04             	mov    0x4(%eax),%eax
81001099:	83 ec 0c             	sub    $0xc,%esp
8100109c:	50                   	push   %eax
8100109d:	e8 57 fd ff ff       	call   81000df9 <stdin_init>
810010a2:	83 c4 10             	add    $0x10,%esp
810010a5:	8b 45 08             	mov    0x8(%ebp),%eax
810010a8:	8b 40 08             	mov    0x8(%eax),%eax
810010ab:	83 ec 0c             	sub    $0xc,%esp
810010ae:	50                   	push   %eax
810010af:	e8 60 fd ff ff       	call   81000e14 <stdout_init>
810010b4:	83 c4 10             	add    $0x10,%esp
810010b7:	8b 45 08             	mov    0x8(%ebp),%eax
810010ba:	8b 40 0c             	mov    0xc(%eax),%eax
810010bd:	83 ec 0c             	sub    $0xc,%esp
810010c0:	50                   	push   %eax
810010c1:	e8 69 fd ff ff       	call   81000e2f <stderr_init>
810010c6:	83 c4 10             	add    $0x10,%esp
810010c9:	8b 45 08             	mov    0x8(%ebp),%eax
810010cc:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810010d3:	e8 14 00 00 00       	call   810010ec <__sinit_lock_release>
810010d8:	c9                   	leave  
810010d9:	c3                   	ret    

810010da <__sfp_lock_acquire>:
810010da:	55                   	push   %ebp
810010db:	89 e5                	mov    %esp,%ebp
810010dd:	90                   	nop
810010de:	5d                   	pop    %ebp
810010df:	c3                   	ret    

810010e0 <__sfp_lock_release>:
810010e0:	55                   	push   %ebp
810010e1:	89 e5                	mov    %esp,%ebp
810010e3:	90                   	nop
810010e4:	5d                   	pop    %ebp
810010e5:	c3                   	ret    

810010e6 <__sinit_lock_acquire>:
810010e6:	55                   	push   %ebp
810010e7:	89 e5                	mov    %esp,%ebp
810010e9:	90                   	nop
810010ea:	5d                   	pop    %ebp
810010eb:	c3                   	ret    

810010ec <__sinit_lock_release>:
810010ec:	55                   	push   %ebp
810010ed:	89 e5                	mov    %esp,%ebp
810010ef:	90                   	nop
810010f0:	5d                   	pop    %ebp
810010f1:	c3                   	ret    

810010f2 <__fp_lock>:
810010f2:	55                   	push   %ebp
810010f3:	89 e5                	mov    %esp,%ebp
810010f5:	b8 00 00 00 00       	mov    $0x0,%eax
810010fa:	5d                   	pop    %ebp
810010fb:	c3                   	ret    

810010fc <__fp_unlock>:
810010fc:	55                   	push   %ebp
810010fd:	89 e5                	mov    %esp,%ebp
810010ff:	b8 00 00 00 00       	mov    $0x0,%eax
81001104:	5d                   	pop    %ebp
81001105:	c3                   	ret    

81001106 <__fp_lock_all>:
81001106:	55                   	push   %ebp
81001107:	89 e5                	mov    %esp,%ebp
81001109:	83 ec 08             	sub    $0x8,%esp
8100110c:	e8 c9 ff ff ff       	call   810010da <__sfp_lock_acquire>
81001111:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001116:	83 ec 08             	sub    $0x8,%esp
81001119:	68 f2 10 00 81       	push   $0x810010f2
8100111e:	50                   	push   %eax
8100111f:	e8 bb 05 00 00       	call   810016df <_fwalk>
81001124:	83 c4 10             	add    $0x10,%esp
81001127:	90                   	nop
81001128:	c9                   	leave  
81001129:	c3                   	ret    

8100112a <__fp_unlock_all>:
8100112a:	55                   	push   %ebp
8100112b:	89 e5                	mov    %esp,%ebp
8100112d:	83 ec 08             	sub    $0x8,%esp
81001130:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001135:	83 ec 08             	sub    $0x8,%esp
81001138:	68 fc 10 00 81       	push   $0x810010fc
8100113d:	50                   	push   %eax
8100113e:	e8 9c 05 00 00       	call   810016df <_fwalk>
81001143:	83 c4 10             	add    $0x10,%esp
81001146:	e8 95 ff ff ff       	call   810010e0 <__sfp_lock_release>
8100114b:	90                   	nop
8100114c:	c9                   	leave  
8100114d:	c3                   	ret    

8100114e <_fiprintf_r>:
8100114e:	55                   	push   %ebp
8100114f:	89 e5                	mov    %esp,%ebp
81001151:	83 ec 18             	sub    $0x18,%esp
81001154:	8d 45 14             	lea    0x14(%ebp),%eax
81001157:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100115a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100115d:	50                   	push   %eax
8100115e:	ff 75 10             	push   0x10(%ebp)
81001161:	ff 75 0c             	push   0xc(%ebp)
81001164:	ff 75 08             	push   0x8(%ebp)
81001167:	e8 a7 23 00 00       	call   81003513 <_vfiprintf_r>
8100116c:	83 c4 10             	add    $0x10,%esp
8100116f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001172:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001175:	c9                   	leave  
81001176:	c3                   	ret    

81001177 <fiprintf>:
81001177:	55                   	push   %ebp
81001178:	89 e5                	mov    %esp,%ebp
8100117a:	83 ec 18             	sub    $0x18,%esp
8100117d:	8d 45 10             	lea    0x10(%ebp),%eax
81001180:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001183:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001186:	a1 c4 73 00 81       	mov    0x810073c4,%eax
8100118b:	52                   	push   %edx
8100118c:	ff 75 0c             	push   0xc(%ebp)
8100118f:	ff 75 08             	push   0x8(%ebp)
81001192:	50                   	push   %eax
81001193:	e8 7b 23 00 00       	call   81003513 <_vfiprintf_r>
81001198:	83 c4 10             	add    $0x10,%esp
8100119b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100119e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011a1:	c9                   	leave  
810011a2:	c3                   	ret    

810011a3 <_free_r>:
810011a3:	55                   	push   %ebp
810011a4:	89 e5                	mov    %esp,%ebp
810011a6:	53                   	push   %ebx
810011a7:	83 ec 34             	sub    $0x34,%esp
810011aa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810011ae:	0f 84 c4 03 00 00    	je     81001578 <_free_r+0x3d5>
810011b4:	83 ec 0c             	sub    $0xc,%esp
810011b7:	ff 75 08             	push   0x8(%ebp)
810011ba:	e8 39 21 00 00       	call   810032f8 <__malloc_lock>
810011bf:	83 c4 10             	add    $0x10,%esp
810011c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810011c5:	83 e8 08             	sub    $0x8,%eax
810011c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810011cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011ce:	8b 40 04             	mov    0x4(%eax),%eax
810011d1:	89 45 e0             	mov    %eax,-0x20(%ebp)
810011d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011d7:	83 e0 fe             	and    $0xfffffffe,%eax
810011da:	89 45 f0             	mov    %eax,-0x10(%ebp)
810011dd:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810011e3:	01 d0                	add    %edx,%eax
810011e5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810011e8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810011eb:	8b 40 04             	mov    0x4(%eax),%eax
810011ee:	83 e0 fc             	and    $0xfffffffc,%eax
810011f1:	89 45 d8             	mov    %eax,-0x28(%ebp)
810011f4:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810011f9:	8b 40 08             	mov    0x8(%eax),%eax
810011fc:	39 45 dc             	cmp    %eax,-0x24(%ebp)
810011ff:	0f 85 94 00 00 00    	jne    81001299 <_free_r+0xf6>
81001205:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001208:	01 45 f0             	add    %eax,-0x10(%ebp)
8100120b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100120e:	83 e0 01             	and    $0x1,%eax
81001211:	85 c0                	test   %eax,%eax
81001213:	75 3a                	jne    8100124f <_free_r+0xac>
81001215:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001218:	8b 00                	mov    (%eax),%eax
8100121a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100121d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001220:	f7 d8                	neg    %eax
81001222:	01 45 f4             	add    %eax,-0xc(%ebp)
81001225:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001228:	01 45 f0             	add    %eax,-0x10(%ebp)
8100122b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100122e:	8b 40 0c             	mov    0xc(%eax),%eax
81001231:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001234:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001237:	8b 40 08             	mov    0x8(%eax),%eax
8100123a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100123d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001240:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001243:	89 50 0c             	mov    %edx,0xc(%eax)
81001246:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001249:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100124c:	89 50 08             	mov    %edx,0x8(%eax)
8100124f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001252:	83 c8 01             	or     $0x1,%eax
81001255:	89 c2                	mov    %eax,%edx
81001257:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100125a:	89 50 04             	mov    %edx,0x4(%eax)
8100125d:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81001262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001265:	89 42 08             	mov    %eax,0x8(%edx)
81001268:	a1 e8 77 00 81       	mov    0x810077e8,%eax
8100126d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001270:	72 14                	jb     81001286 <_free_r+0xe3>
81001272:	a1 c0 7f 00 81       	mov    0x81007fc0,%eax
81001277:	83 ec 08             	sub    $0x8,%esp
8100127a:	50                   	push   %eax
8100127b:	ff 75 08             	push   0x8(%ebp)
8100127e:	e8 fb 02 00 00       	call   8100157e <_malloc_trim_r>
81001283:	83 c4 10             	add    $0x10,%esp
81001286:	83 ec 0c             	sub    $0xc,%esp
81001289:	ff 75 08             	push   0x8(%ebp)
8100128c:	e8 6d 20 00 00       	call   810032fe <__malloc_unlock>
81001291:	83 c4 10             	add    $0x10,%esp
81001294:	e9 e0 02 00 00       	jmp    81001579 <_free_r+0x3d6>
81001299:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100129c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100129f:	89 50 04             	mov    %edx,0x4(%eax)
810012a2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810012a9:	8b 45 e0             	mov    -0x20(%ebp),%eax
810012ac:	83 e0 01             	and    $0x1,%eax
810012af:	85 c0                	test   %eax,%eax
810012b1:	75 52                	jne    81001305 <_free_r+0x162>
810012b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b6:	8b 00                	mov    (%eax),%eax
810012b8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810012bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012be:	f7 d8                	neg    %eax
810012c0:	01 45 f4             	add    %eax,-0xc(%ebp)
810012c3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810012c6:	01 45 f0             	add    %eax,-0x10(%ebp)
810012c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012cc:	8b 40 08             	mov    0x8(%eax),%eax
810012cf:	ba e8 73 00 81       	mov    $0x810073e8,%edx
810012d4:	39 d0                	cmp    %edx,%eax
810012d6:	75 09                	jne    810012e1 <_free_r+0x13e>
810012d8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810012df:	eb 24                	jmp    81001305 <_free_r+0x162>
810012e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e4:	8b 40 0c             	mov    0xc(%eax),%eax
810012e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810012ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ed:	8b 40 08             	mov    0x8(%eax),%eax
810012f0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012f3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810012f6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810012f9:	89 50 0c             	mov    %edx,0xc(%eax)
810012fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810012ff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001302:	89 50 08             	mov    %edx,0x8(%eax)
81001305:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001308:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100130b:	01 d0                	add    %edx,%eax
8100130d:	8b 40 04             	mov    0x4(%eax),%eax
81001310:	83 e0 01             	and    $0x1,%eax
81001313:	85 c0                	test   %eax,%eax
81001315:	75 75                	jne    8100138c <_free_r+0x1e9>
81001317:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100131a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100131d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001321:	75 45                	jne    81001368 <_free_r+0x1c5>
81001323:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001326:	8b 40 08             	mov    0x8(%eax),%eax
81001329:	ba e8 73 00 81       	mov    $0x810073e8,%edx
8100132e:	39 d0                	cmp    %edx,%eax
81001330:	75 36                	jne    81001368 <_free_r+0x1c5>
81001332:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001339:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
8100133e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001341:	89 50 0c             	mov    %edx,0xc(%eax)
81001344:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81001349:	8b 40 0c             	mov    0xc(%eax),%eax
8100134c:	89 42 08             	mov    %eax,0x8(%edx)
8100134f:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81001354:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001357:	89 50 0c             	mov    %edx,0xc(%eax)
8100135a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100135d:	8b 50 0c             	mov    0xc(%eax),%edx
81001360:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001363:	89 50 08             	mov    %edx,0x8(%eax)
81001366:	eb 24                	jmp    8100138c <_free_r+0x1e9>
81001368:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100136b:	8b 40 0c             	mov    0xc(%eax),%eax
8100136e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001371:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001374:	8b 40 08             	mov    0x8(%eax),%eax
81001377:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100137a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100137d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001380:	89 50 0c             	mov    %edx,0xc(%eax)
81001383:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001386:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001389:	89 50 08             	mov    %edx,0x8(%eax)
8100138c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100138f:	83 c8 01             	or     $0x1,%eax
81001392:	89 c2                	mov    %eax,%edx
81001394:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001397:	89 50 04             	mov    %edx,0x4(%eax)
8100139a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100139d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013a0:	01 c2                	add    %eax,%edx
810013a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013a5:	89 02                	mov    %eax,(%edx)
810013a7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810013ab:	0f 85 b7 01 00 00    	jne    81001568 <_free_r+0x3c5>
810013b1:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810013b8:	77 7f                	ja     81001439 <_free_r+0x296>
810013ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013bd:	c1 e8 03             	shr    $0x3,%eax
810013c0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810013c3:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810013c8:	8b 58 04             	mov    0x4(%eax),%ebx
810013cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013ce:	8d 50 03             	lea    0x3(%eax),%edx
810013d1:	85 c0                	test   %eax,%eax
810013d3:	0f 48 c2             	cmovs  %edx,%eax
810013d6:	c1 f8 02             	sar    $0x2,%eax
810013d9:	ba 01 00 00 00       	mov    $0x1,%edx
810013de:	89 c1                	mov    %eax,%ecx
810013e0:	d3 e2                	shl    %cl,%edx
810013e2:	89 d0                	mov    %edx,%eax
810013e4:	ba e0 73 00 81       	mov    $0x810073e0,%edx
810013e9:	09 d8                	or     %ebx,%eax
810013eb:	89 42 04             	mov    %eax,0x4(%edx)
810013ee:	8b 45 d0             	mov    -0x30(%ebp),%eax
810013f1:	83 c0 01             	add    $0x1,%eax
810013f4:	01 c0                	add    %eax,%eax
810013f6:	c1 e0 02             	shl    $0x2,%eax
810013f9:	05 e0 73 00 81       	add    $0x810073e0,%eax
810013fe:	83 e8 08             	sub    $0x8,%eax
81001401:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001404:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001407:	8b 40 08             	mov    0x8(%eax),%eax
8100140a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100140d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001410:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001413:	89 50 0c             	mov    %edx,0xc(%eax)
81001416:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001419:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100141c:	89 50 08             	mov    %edx,0x8(%eax)
8100141f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001422:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001425:	89 50 08             	mov    %edx,0x8(%eax)
81001428:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100142b:	8b 50 08             	mov    0x8(%eax),%edx
8100142e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001431:	89 50 0c             	mov    %edx,0xc(%eax)
81001434:	e9 2f 01 00 00       	jmp    81001568 <_free_r+0x3c5>
81001439:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100143c:	c1 e8 09             	shr    $0x9,%eax
8100143f:	85 c0                	test   %eax,%eax
81001441:	75 08                	jne    8100144b <_free_r+0x2a8>
81001443:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001446:	c1 e8 03             	shr    $0x3,%eax
81001449:	eb 77                	jmp    810014c2 <_free_r+0x31f>
8100144b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100144e:	c1 e8 09             	shr    $0x9,%eax
81001451:	83 f8 04             	cmp    $0x4,%eax
81001454:	77 0b                	ja     81001461 <_free_r+0x2be>
81001456:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001459:	c1 e8 06             	shr    $0x6,%eax
8100145c:	83 c0 38             	add    $0x38,%eax
8100145f:	eb 61                	jmp    810014c2 <_free_r+0x31f>
81001461:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001464:	c1 e8 09             	shr    $0x9,%eax
81001467:	83 f8 14             	cmp    $0x14,%eax
8100146a:	77 0b                	ja     81001477 <_free_r+0x2d4>
8100146c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100146f:	c1 e8 09             	shr    $0x9,%eax
81001472:	83 c0 5b             	add    $0x5b,%eax
81001475:	eb 4b                	jmp    810014c2 <_free_r+0x31f>
81001477:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100147a:	c1 e8 09             	shr    $0x9,%eax
8100147d:	83 f8 54             	cmp    $0x54,%eax
81001480:	77 0b                	ja     8100148d <_free_r+0x2ea>
81001482:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001485:	c1 e8 0c             	shr    $0xc,%eax
81001488:	83 c0 6e             	add    $0x6e,%eax
8100148b:	eb 35                	jmp    810014c2 <_free_r+0x31f>
8100148d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001490:	c1 e8 09             	shr    $0x9,%eax
81001493:	3d 54 01 00 00       	cmp    $0x154,%eax
81001498:	77 0b                	ja     810014a5 <_free_r+0x302>
8100149a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100149d:	c1 e8 0f             	shr    $0xf,%eax
810014a0:	83 c0 77             	add    $0x77,%eax
810014a3:	eb 1d                	jmp    810014c2 <_free_r+0x31f>
810014a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014a8:	c1 e8 09             	shr    $0x9,%eax
810014ab:	3d 54 05 00 00       	cmp    $0x554,%eax
810014b0:	77 0b                	ja     810014bd <_free_r+0x31a>
810014b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014b5:	c1 e8 12             	shr    $0x12,%eax
810014b8:	83 c0 7c             	add    $0x7c,%eax
810014bb:	eb 05                	jmp    810014c2 <_free_r+0x31f>
810014bd:	b8 7e 00 00 00       	mov    $0x7e,%eax
810014c2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810014c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014c8:	83 c0 01             	add    $0x1,%eax
810014cb:	01 c0                	add    %eax,%eax
810014cd:	c1 e0 02             	shl    $0x2,%eax
810014d0:	05 e0 73 00 81       	add    $0x810073e0,%eax
810014d5:	83 e8 08             	sub    $0x8,%eax
810014d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014db:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014de:	8b 40 08             	mov    0x8(%eax),%eax
810014e1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014e4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014e7:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810014ea:	75 36                	jne    81001522 <_free_r+0x37f>
810014ec:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810014f1:	8b 58 04             	mov    0x4(%eax),%ebx
810014f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810014f7:	8d 50 03             	lea    0x3(%eax),%edx
810014fa:	85 c0                	test   %eax,%eax
810014fc:	0f 48 c2             	cmovs  %edx,%eax
810014ff:	c1 f8 02             	sar    $0x2,%eax
81001502:	ba 01 00 00 00       	mov    $0x1,%edx
81001507:	89 c1                	mov    %eax,%ecx
81001509:	d3 e2                	shl    %cl,%edx
8100150b:	89 d0                	mov    %edx,%eax
8100150d:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81001512:	09 d8                	or     %ebx,%eax
81001514:	89 42 04             	mov    %eax,0x4(%edx)
81001517:	eb 28                	jmp    81001541 <_free_r+0x39e>
81001519:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100151c:	8b 40 08             	mov    0x8(%eax),%eax
8100151f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001522:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001525:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001528:	74 0e                	je     81001538 <_free_r+0x395>
8100152a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100152d:	8b 40 04             	mov    0x4(%eax),%eax
81001530:	83 e0 fc             	and    $0xfffffffc,%eax
81001533:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001536:	72 e1                	jb     81001519 <_free_r+0x376>
81001538:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100153b:	8b 40 0c             	mov    0xc(%eax),%eax
8100153e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001541:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001544:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001547:	89 50 0c             	mov    %edx,0xc(%eax)
8100154a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001550:	89 50 08             	mov    %edx,0x8(%eax)
81001553:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001556:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001559:	89 50 08             	mov    %edx,0x8(%eax)
8100155c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100155f:	8b 50 08             	mov    0x8(%eax),%edx
81001562:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001565:	89 50 0c             	mov    %edx,0xc(%eax)
81001568:	83 ec 0c             	sub    $0xc,%esp
8100156b:	ff 75 08             	push   0x8(%ebp)
8100156e:	e8 8b 1d 00 00       	call   810032fe <__malloc_unlock>
81001573:	83 c4 10             	add    $0x10,%esp
81001576:	eb 01                	jmp    81001579 <_free_r+0x3d6>
81001578:	90                   	nop
81001579:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100157c:	c9                   	leave  
8100157d:	c3                   	ret    

8100157e <_malloc_trim_r>:
8100157e:	55                   	push   %ebp
8100157f:	89 e5                	mov    %esp,%ebp
81001581:	83 ec 28             	sub    $0x28,%esp
81001584:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
8100158b:	83 ec 0c             	sub    $0xc,%esp
8100158e:	ff 75 08             	push   0x8(%ebp)
81001591:	e8 62 1d 00 00       	call   810032f8 <__malloc_lock>
81001596:	83 c4 10             	add    $0x10,%esp
81001599:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100159e:	8b 40 08             	mov    0x8(%eax),%eax
810015a1:	8b 40 04             	mov    0x4(%eax),%eax
810015a4:	83 e0 fc             	and    $0xfffffffc,%eax
810015a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810015aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ad:	2b 45 0c             	sub    0xc(%ebp),%eax
810015b0:	89 c2                	mov    %eax,%edx
810015b2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b5:	01 d0                	add    %edx,%eax
810015b7:	83 e8 11             	sub    $0x11,%eax
810015ba:	ba 00 00 00 00       	mov    $0x0,%edx
810015bf:	f7 75 f4             	divl   -0xc(%ebp)
810015c2:	83 e8 01             	sub    $0x1,%eax
810015c5:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810015c9:	89 45 ec             	mov    %eax,-0x14(%ebp)
810015cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015cf:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810015d2:	7d 18                	jge    810015ec <_malloc_trim_r+0x6e>
810015d4:	83 ec 0c             	sub    $0xc,%esp
810015d7:	ff 75 08             	push   0x8(%ebp)
810015da:	e8 1f 1d 00 00       	call   810032fe <__malloc_unlock>
810015df:	83 c4 10             	add    $0x10,%esp
810015e2:	b8 00 00 00 00       	mov    $0x0,%eax
810015e7:	e9 f1 00 00 00       	jmp    810016dd <_malloc_trim_r+0x15f>
810015ec:	83 ec 08             	sub    $0x8,%esp
810015ef:	6a 00                	push   $0x0
810015f1:	ff 75 08             	push   0x8(%ebp)
810015f4:	e8 dc 2b 00 00       	call   810041d5 <_sbrk_r>
810015f9:	83 c4 10             	add    $0x10,%esp
810015fc:	89 45 e8             	mov    %eax,-0x18(%ebp)
810015ff:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81001604:	8b 50 08             	mov    0x8(%eax),%edx
81001607:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100160a:	01 d0                	add    %edx,%eax
8100160c:	39 45 e8             	cmp    %eax,-0x18(%ebp)
8100160f:	74 18                	je     81001629 <_malloc_trim_r+0xab>
81001611:	83 ec 0c             	sub    $0xc,%esp
81001614:	ff 75 08             	push   0x8(%ebp)
81001617:	e8 e2 1c 00 00       	call   810032fe <__malloc_unlock>
8100161c:	83 c4 10             	add    $0x10,%esp
8100161f:	b8 00 00 00 00       	mov    $0x0,%eax
81001624:	e9 b4 00 00 00       	jmp    810016dd <_malloc_trim_r+0x15f>
81001629:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100162c:	f7 d8                	neg    %eax
8100162e:	83 ec 08             	sub    $0x8,%esp
81001631:	50                   	push   %eax
81001632:	ff 75 08             	push   0x8(%ebp)
81001635:	e8 9b 2b 00 00       	call   810041d5 <_sbrk_r>
8100163a:	83 c4 10             	add    $0x10,%esp
8100163d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001640:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001644:	75 61                	jne    810016a7 <_malloc_trim_r+0x129>
81001646:	83 ec 08             	sub    $0x8,%esp
81001649:	6a 00                	push   $0x0
8100164b:	ff 75 08             	push   0x8(%ebp)
8100164e:	e8 82 2b 00 00       	call   810041d5 <_sbrk_r>
81001653:	83 c4 10             	add    $0x10,%esp
81001656:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001659:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100165e:	8b 50 08             	mov    0x8(%eax),%edx
81001661:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001664:	29 d0                	sub    %edx,%eax
81001666:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001669:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
8100166d:	7e 23                	jle    81001692 <_malloc_trim_r+0x114>
8100166f:	8b 15 ec 77 00 81    	mov    0x810077ec,%edx
81001675:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001678:	29 d0                	sub    %edx,%eax
8100167a:	a3 e0 7f 00 81       	mov    %eax,0x81007fe0
8100167f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001682:	83 c8 01             	or     $0x1,%eax
81001685:	89 c2                	mov    %eax,%edx
81001687:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100168c:	8b 40 08             	mov    0x8(%eax),%eax
8100168f:	89 50 04             	mov    %edx,0x4(%eax)
81001692:	83 ec 0c             	sub    $0xc,%esp
81001695:	ff 75 08             	push   0x8(%ebp)
81001698:	e8 61 1c 00 00       	call   810032fe <__malloc_unlock>
8100169d:	83 c4 10             	add    $0x10,%esp
810016a0:	b8 00 00 00 00       	mov    $0x0,%eax
810016a5:	eb 36                	jmp    810016dd <_malloc_trim_r+0x15f>
810016a7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016aa:	2b 45 ec             	sub    -0x14(%ebp),%eax
810016ad:	83 c8 01             	or     $0x1,%eax
810016b0:	89 c2                	mov    %eax,%edx
810016b2:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810016b7:	8b 40 08             	mov    0x8(%eax),%eax
810016ba:	89 50 04             	mov    %edx,0x4(%eax)
810016bd:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
810016c2:	2b 45 ec             	sub    -0x14(%ebp),%eax
810016c5:	a3 e0 7f 00 81       	mov    %eax,0x81007fe0
810016ca:	83 ec 0c             	sub    $0xc,%esp
810016cd:	ff 75 08             	push   0x8(%ebp)
810016d0:	e8 29 1c 00 00       	call   810032fe <__malloc_unlock>
810016d5:	83 c4 10             	add    $0x10,%esp
810016d8:	b8 01 00 00 00       	mov    $0x1,%eax
810016dd:	c9                   	leave  
810016de:	c3                   	ret    

810016df <_fwalk>:
810016df:	55                   	push   %ebp
810016e0:	89 e5                	mov    %esp,%ebp
810016e2:	57                   	push   %edi
810016e3:	56                   	push   %esi
810016e4:	53                   	push   %ebx
810016e5:	83 ec 1c             	sub    $0x1c,%esp
810016e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810016ef:	8b 45 08             	mov    0x8(%ebp),%eax
810016f2:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810016f8:	eb 3e                	jmp    81001738 <_fwalk+0x59>
810016fa:	8b 5e 08             	mov    0x8(%esi),%ebx
810016fd:	8b 7e 04             	mov    0x4(%esi),%edi
81001700:	eb 2d                	jmp    8100172f <_fwalk+0x50>
81001702:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001706:	66 85 c0             	test   %ax,%ax
81001709:	74 21                	je     8100172c <_fwalk+0x4d>
8100170b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100170f:	66 83 f8 01          	cmp    $0x1,%ax
81001713:	74 17                	je     8100172c <_fwalk+0x4d>
81001715:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001719:	66 83 f8 ff          	cmp    $0xffff,%ax
8100171d:	74 0d                	je     8100172c <_fwalk+0x4d>
8100171f:	83 ec 0c             	sub    $0xc,%esp
81001722:	53                   	push   %ebx
81001723:	ff 55 0c             	call   *0xc(%ebp)
81001726:	83 c4 10             	add    $0x10,%esp
81001729:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100172c:	83 c3 68             	add    $0x68,%ebx
8100172f:	83 ef 01             	sub    $0x1,%edi
81001732:	85 ff                	test   %edi,%edi
81001734:	79 cc                	jns    81001702 <_fwalk+0x23>
81001736:	8b 36                	mov    (%esi),%esi
81001738:	85 f6                	test   %esi,%esi
8100173a:	75 be                	jne    810016fa <_fwalk+0x1b>
8100173c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100173f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001742:	5b                   	pop    %ebx
81001743:	5e                   	pop    %esi
81001744:	5f                   	pop    %edi
81001745:	5d                   	pop    %ebp
81001746:	c3                   	ret    

81001747 <_fwalk_reent>:
81001747:	55                   	push   %ebp
81001748:	89 e5                	mov    %esp,%ebp
8100174a:	57                   	push   %edi
8100174b:	56                   	push   %esi
8100174c:	53                   	push   %ebx
8100174d:	83 ec 1c             	sub    $0x1c,%esp
81001750:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001757:	8b 45 08             	mov    0x8(%ebp),%eax
8100175a:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81001760:	eb 41                	jmp    810017a3 <_fwalk_reent+0x5c>
81001762:	8b 5e 08             	mov    0x8(%esi),%ebx
81001765:	8b 7e 04             	mov    0x4(%esi),%edi
81001768:	eb 30                	jmp    8100179a <_fwalk_reent+0x53>
8100176a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100176e:	66 85 c0             	test   %ax,%ax
81001771:	74 24                	je     81001797 <_fwalk_reent+0x50>
81001773:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001777:	66 83 f8 01          	cmp    $0x1,%ax
8100177b:	74 1a                	je     81001797 <_fwalk_reent+0x50>
8100177d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001781:	66 83 f8 ff          	cmp    $0xffff,%ax
81001785:	74 10                	je     81001797 <_fwalk_reent+0x50>
81001787:	83 ec 08             	sub    $0x8,%esp
8100178a:	53                   	push   %ebx
8100178b:	ff 75 08             	push   0x8(%ebp)
8100178e:	ff 55 0c             	call   *0xc(%ebp)
81001791:	83 c4 10             	add    $0x10,%esp
81001794:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001797:	83 c3 68             	add    $0x68,%ebx
8100179a:	83 ef 01             	sub    $0x1,%edi
8100179d:	85 ff                	test   %edi,%edi
8100179f:	79 c9                	jns    8100176a <_fwalk_reent+0x23>
810017a1:	8b 36                	mov    (%esi),%esi
810017a3:	85 f6                	test   %esi,%esi
810017a5:	75 bb                	jne    81001762 <_fwalk_reent+0x1b>
810017a7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017aa:	8d 65 f4             	lea    -0xc(%ebp),%esp
810017ad:	5b                   	pop    %ebx
810017ae:	5e                   	pop    %esi
810017af:	5f                   	pop    %edi
810017b0:	5d                   	pop    %ebp
810017b1:	c3                   	ret    

810017b2 <_fwrite_r>:
810017b2:	55                   	push   %ebp
810017b3:	89 e5                	mov    %esp,%ebp
810017b5:	83 ec 28             	sub    $0x28,%esp
810017b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810017bb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017be:	8b 45 14             	mov    0x14(%ebp),%eax
810017c1:	0f af 45 10          	imul   0x10(%ebp),%eax
810017c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017cb:	89 45 e0             	mov    %eax,-0x20(%ebp)
810017ce:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017d1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017d4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810017d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810017da:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
810017e1:	8b 45 08             	mov    0x8(%ebp),%eax
810017e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810017eb:	74 18                	je     81001805 <_fwrite_r+0x53>
810017ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017f0:	8b 40 38             	mov    0x38(%eax),%eax
810017f3:	85 c0                	test   %eax,%eax
810017f5:	75 0e                	jne    81001805 <_fwrite_r+0x53>
810017f7:	83 ec 0c             	sub    $0xc,%esp
810017fa:	ff 75 f0             	push   -0x10(%ebp)
810017fd:	e8 3f f8 ff ff       	call   81001041 <__sinit>
81001802:	83 c4 10             	add    $0x10,%esp
81001805:	8b 45 18             	mov    0x18(%ebp),%eax
81001808:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100180c:	98                   	cwtl   
8100180d:	25 00 20 00 00       	and    $0x2000,%eax
81001812:	85 c0                	test   %eax,%eax
81001814:	75 24                	jne    8100183a <_fwrite_r+0x88>
81001816:	8b 45 18             	mov    0x18(%ebp),%eax
81001819:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100181d:	80 cc 20             	or     $0x20,%ah
81001820:	89 c2                	mov    %eax,%edx
81001822:	8b 45 18             	mov    0x18(%ebp),%eax
81001825:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001829:	8b 45 18             	mov    0x18(%ebp),%eax
8100182c:	8b 40 64             	mov    0x64(%eax),%eax
8100182f:	80 e4 df             	and    $0xdf,%ah
81001832:	89 c2                	mov    %eax,%edx
81001834:	8b 45 18             	mov    0x18(%ebp),%eax
81001837:	89 50 64             	mov    %edx,0x64(%eax)
8100183a:	83 ec 04             	sub    $0x4,%esp
8100183d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001840:	50                   	push   %eax
81001841:	ff 75 18             	push   0x18(%ebp)
81001844:	ff 75 08             	push   0x8(%ebp)
81001847:	e8 d8 38 00 00       	call   81005124 <__sfvwrite_r>
8100184c:	83 c4 10             	add    $0x10,%esp
8100184f:	85 c0                	test   %eax,%eax
81001851:	75 05                	jne    81001858 <_fwrite_r+0xa6>
81001853:	8b 45 14             	mov    0x14(%ebp),%eax
81001856:	eb 10                	jmp    81001868 <_fwrite_r+0xb6>
81001858:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100185b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185e:	29 d0                	sub    %edx,%eax
81001860:	ba 00 00 00 00       	mov    $0x0,%edx
81001865:	f7 75 10             	divl   0x10(%ebp)
81001868:	c9                   	leave  
81001869:	c3                   	ret    

8100186a <fwrite>:
8100186a:	55                   	push   %ebp
8100186b:	89 e5                	mov    %esp,%ebp
8100186d:	83 ec 08             	sub    $0x8,%esp
81001870:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001875:	83 ec 0c             	sub    $0xc,%esp
81001878:	ff 75 14             	push   0x14(%ebp)
8100187b:	ff 75 10             	push   0x10(%ebp)
8100187e:	ff 75 0c             	push   0xc(%ebp)
81001881:	ff 75 08             	push   0x8(%ebp)
81001884:	50                   	push   %eax
81001885:	e8 28 ff ff ff       	call   810017b2 <_fwrite_r>
8100188a:	83 c4 20             	add    $0x20,%esp
8100188d:	c9                   	leave  
8100188e:	c3                   	ret    

8100188f <reverse_argv_elements>:
8100188f:	55                   	push   %ebp
81001890:	89 e5                	mov    %esp,%ebp
81001892:	83 ec 10             	sub    $0x10,%esp
81001895:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
8100189c:	eb 5e                	jmp    810018fc <reverse_argv_elements+0x6d>
8100189e:	8b 45 fc             	mov    -0x4(%ebp),%eax
810018a1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018a8:	8b 45 08             	mov    0x8(%ebp),%eax
810018ab:	01 d0                	add    %edx,%eax
810018ad:	8b 00                	mov    (%eax),%eax
810018af:	89 45 f8             	mov    %eax,-0x8(%ebp)
810018b2:	8b 45 0c             	mov    0xc(%ebp),%eax
810018b5:	2b 45 fc             	sub    -0x4(%ebp),%eax
810018b8:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810018bd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018c4:	8b 45 08             	mov    0x8(%ebp),%eax
810018c7:	01 d0                	add    %edx,%eax
810018c9:	8b 55 fc             	mov    -0x4(%ebp),%edx
810018cc:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810018d3:	8b 55 08             	mov    0x8(%ebp),%edx
810018d6:	01 ca                	add    %ecx,%edx
810018d8:	8b 00                	mov    (%eax),%eax
810018da:	89 02                	mov    %eax,(%edx)
810018dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810018df:	2b 45 fc             	sub    -0x4(%ebp),%eax
810018e2:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
810018e7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810018ee:	8b 45 08             	mov    0x8(%ebp),%eax
810018f1:	01 c2                	add    %eax,%edx
810018f3:	8b 45 f8             	mov    -0x8(%ebp),%eax
810018f6:	89 02                	mov    %eax,(%edx)
810018f8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
810018fc:	8b 45 0c             	mov    0xc(%ebp),%eax
810018ff:	d1 f8                	sar    %eax
81001901:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81001904:	7c 98                	jl     8100189e <reverse_argv_elements+0xf>
81001906:	90                   	nop
81001907:	90                   	nop
81001908:	c9                   	leave  
81001909:	c3                   	ret    

8100190a <permute>:
8100190a:	55                   	push   %ebp
8100190b:	89 e5                	mov    %esp,%ebp
8100190d:	ff 75 0c             	push   0xc(%ebp)
81001910:	ff 75 08             	push   0x8(%ebp)
81001913:	e8 77 ff ff ff       	call   8100188f <reverse_argv_elements>
81001918:	83 c4 08             	add    $0x8,%esp
8100191b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100191e:	8b 45 10             	mov    0x10(%ebp),%eax
81001921:	01 d0                	add    %edx,%eax
81001923:	50                   	push   %eax
81001924:	ff 75 08             	push   0x8(%ebp)
81001927:	e8 63 ff ff ff       	call   8100188f <reverse_argv_elements>
8100192c:	83 c4 08             	add    $0x8,%esp
8100192f:	ff 75 10             	push   0x10(%ebp)
81001932:	ff 75 08             	push   0x8(%ebp)
81001935:	e8 55 ff ff ff       	call   8100188f <reverse_argv_elements>
8100193a:	83 c4 08             	add    $0x8,%esp
8100193d:	90                   	nop
8100193e:	c9                   	leave  
8100193f:	c3                   	ret    

81001940 <is_option>:
81001940:	55                   	push   %ebp
81001941:	89 e5                	mov    %esp,%ebp
81001943:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001947:	74 1a                	je     81001963 <is_option+0x23>
81001949:	8b 45 08             	mov    0x8(%ebp),%eax
8100194c:	0f b6 00             	movzbl (%eax),%eax
8100194f:	3c 2d                	cmp    $0x2d,%al
81001951:	74 10                	je     81001963 <is_option+0x23>
81001953:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001957:	74 11                	je     8100196a <is_option+0x2a>
81001959:	8b 45 08             	mov    0x8(%ebp),%eax
8100195c:	0f b6 00             	movzbl (%eax),%eax
8100195f:	3c 2b                	cmp    $0x2b,%al
81001961:	75 07                	jne    8100196a <is_option+0x2a>
81001963:	b8 01 00 00 00       	mov    $0x1,%eax
81001968:	eb 05                	jmp    8100196f <is_option+0x2f>
8100196a:	b8 00 00 00 00       	mov    $0x0,%eax
8100196f:	5d                   	pop    %ebp
81001970:	c3                   	ret    

81001971 <read_globals>:
81001971:	55                   	push   %ebp
81001972:	89 e5                	mov    %esp,%ebp
81001974:	8b 15 94 7f 00 81    	mov    0x81007f94,%edx
8100197a:	8b 45 08             	mov    0x8(%ebp),%eax
8100197d:	89 10                	mov    %edx,(%eax)
8100197f:	8b 15 98 7f 00 81    	mov    0x81007f98,%edx
81001985:	8b 45 08             	mov    0x8(%ebp),%eax
81001988:	89 50 04             	mov    %edx,0x4(%eax)
8100198b:	8b 15 84 6f 00 81    	mov    0x81006f84,%edx
81001991:	8b 45 08             	mov    0x8(%ebp),%eax
81001994:	89 50 08             	mov    %edx,0x8(%eax)
81001997:	8b 15 88 6f 00 81    	mov    0x81006f88,%edx
8100199d:	8b 45 08             	mov    0x8(%ebp),%eax
810019a0:	89 50 0c             	mov    %edx,0xc(%eax)
810019a3:	8b 15 9c 7f 00 81    	mov    0x81007f9c,%edx
810019a9:	8b 45 08             	mov    0x8(%ebp),%eax
810019ac:	89 50 10             	mov    %edx,0x10(%eax)
810019af:	8b 15 a0 7f 00 81    	mov    0x81007fa0,%edx
810019b5:	8b 45 08             	mov    0x8(%ebp),%eax
810019b8:	89 50 14             	mov    %edx,0x14(%eax)
810019bb:	8b 15 a4 7f 00 81    	mov    0x81007fa4,%edx
810019c1:	8b 45 08             	mov    0x8(%ebp),%eax
810019c4:	89 50 18             	mov    %edx,0x18(%eax)
810019c7:	90                   	nop
810019c8:	5d                   	pop    %ebp
810019c9:	c3                   	ret    

810019ca <write_globals>:
810019ca:	55                   	push   %ebp
810019cb:	89 e5                	mov    %esp,%ebp
810019cd:	8b 45 08             	mov    0x8(%ebp),%eax
810019d0:	8b 00                	mov    (%eax),%eax
810019d2:	a3 94 7f 00 81       	mov    %eax,0x81007f94
810019d7:	8b 45 08             	mov    0x8(%ebp),%eax
810019da:	8b 40 04             	mov    0x4(%eax),%eax
810019dd:	a3 98 7f 00 81       	mov    %eax,0x81007f98
810019e2:	8b 45 08             	mov    0x8(%ebp),%eax
810019e5:	8b 40 08             	mov    0x8(%eax),%eax
810019e8:	a3 84 6f 00 81       	mov    %eax,0x81006f84
810019ed:	8b 45 08             	mov    0x8(%ebp),%eax
810019f0:	8b 40 0c             	mov    0xc(%eax),%eax
810019f3:	a3 88 6f 00 81       	mov    %eax,0x81006f88
810019f8:	8b 45 08             	mov    0x8(%ebp),%eax
810019fb:	8b 40 10             	mov    0x10(%eax),%eax
810019fe:	a3 9c 7f 00 81       	mov    %eax,0x81007f9c
81001a03:	8b 45 08             	mov    0x8(%ebp),%eax
81001a06:	8b 40 14             	mov    0x14(%eax),%eax
81001a09:	a3 a0 7f 00 81       	mov    %eax,0x81007fa0
81001a0e:	8b 45 08             	mov    0x8(%ebp),%eax
81001a11:	8b 40 18             	mov    0x18(%eax),%eax
81001a14:	a3 a4 7f 00 81       	mov    %eax,0x81007fa4
81001a19:	90                   	nop
81001a1a:	5d                   	pop    %ebp
81001a1b:	c3                   	ret    

81001a1c <getopt_internal>:
81001a1c:	55                   	push   %ebp
81001a1d:	89 e5                	mov    %esp,%ebp
81001a1f:	53                   	push   %ebx
81001a20:	83 ec 34             	sub    $0x34,%esp
81001a23:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001a2a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001a31:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001a38:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001a3f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001a46:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001a4d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001a54:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001a5b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001a62:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001a66:	74 35                	je     81001a9d <getopt_internal+0x81>
81001a68:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001a6c:	74 2f                	je     81001a9d <getopt_internal+0x81>
81001a6e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001a72:	75 06                	jne    81001a7a <getopt_internal+0x5e>
81001a74:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001a78:	74 23                	je     81001a9d <getopt_internal+0x81>
81001a7a:	8b 45 20             	mov    0x20(%ebp),%eax
81001a7d:	8b 40 04             	mov    0x4(%eax),%eax
81001a80:	39 45 08             	cmp    %eax,0x8(%ebp)
81001a83:	7e 18                	jle    81001a9d <getopt_internal+0x81>
81001a85:	8b 45 20             	mov    0x20(%ebp),%eax
81001a88:	8b 40 04             	mov    0x4(%eax),%eax
81001a8b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a92:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a95:	01 d0                	add    %edx,%eax
81001a97:	8b 00                	mov    (%eax),%eax
81001a99:	85 c0                	test   %eax,%eax
81001a9b:	75 0a                	jne    81001aa7 <getopt_internal+0x8b>
81001a9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001aa2:	e9 85 0a 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001aa7:	8b 45 20             	mov    0x20(%ebp),%eax
81001aaa:	8b 40 04             	mov    0x4(%eax),%eax
81001aad:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ab4:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ab7:	01 d0                	add    %edx,%eax
81001ab9:	8b 00                	mov    (%eax),%eax
81001abb:	83 ec 08             	sub    $0x8,%esp
81001abe:	68 78 6b 00 81       	push   $0x81006b78
81001ac3:	50                   	push   %eax
81001ac4:	e8 63 29 00 00       	call   8100442c <strcmp>
81001ac9:	83 c4 10             	add    $0x10,%esp
81001acc:	85 c0                	test   %eax,%eax
81001ace:	75 19                	jne    81001ae9 <getopt_internal+0xcd>
81001ad0:	8b 45 20             	mov    0x20(%ebp),%eax
81001ad3:	8b 40 04             	mov    0x4(%eax),%eax
81001ad6:	8d 50 01             	lea    0x1(%eax),%edx
81001ad9:	8b 45 20             	mov    0x20(%ebp),%eax
81001adc:	89 50 04             	mov    %edx,0x4(%eax)
81001adf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ae4:	e9 43 0a 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001ae9:	8b 45 20             	mov    0x20(%ebp),%eax
81001aec:	8b 40 04             	mov    0x4(%eax),%eax
81001aef:	85 c0                	test   %eax,%eax
81001af1:	75 28                	jne    81001b1b <getopt_internal+0xff>
81001af3:	8b 45 20             	mov    0x20(%ebp),%eax
81001af6:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001afd:	8b 45 20             	mov    0x20(%ebp),%eax
81001b00:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001b07:	8b 45 20             	mov    0x20(%ebp),%eax
81001b0a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001b11:	8b 45 20             	mov    0x20(%ebp),%eax
81001b14:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001b1b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b1f:	74 33                	je     81001b54 <getopt_internal+0x138>
81001b21:	8b 45 10             	mov    0x10(%ebp),%eax
81001b24:	0f b6 00             	movzbl (%eax),%eax
81001b27:	3c 2d                	cmp    $0x2d,%al
81001b29:	74 0a                	je     81001b35 <getopt_internal+0x119>
81001b2b:	8b 45 10             	mov    0x10(%ebp),%eax
81001b2e:	0f b6 00             	movzbl (%eax),%eax
81001b31:	3c 2b                	cmp    $0x2b,%al
81001b33:	75 1f                	jne    81001b54 <getopt_internal+0x138>
81001b35:	8b 45 10             	mov    0x10(%ebp),%eax
81001b38:	0f b6 00             	movzbl (%eax),%eax
81001b3b:	3c 2d                	cmp    $0x2d,%al
81001b3d:	75 07                	jne    81001b46 <getopt_internal+0x12a>
81001b3f:	b8 01 00 00 00       	mov    $0x1,%eax
81001b44:	eb 05                	jmp    81001b4b <getopt_internal+0x12f>
81001b46:	b8 02 00 00 00       	mov    $0x2,%eax
81001b4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b4e:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001b52:	eb 23                	jmp    81001b77 <getopt_internal+0x15b>
81001b54:	83 ec 0c             	sub    $0xc,%esp
81001b57:	68 7b 6b 00 81       	push   $0x81006b7b
81001b5c:	e8 81 3a 00 00       	call   810055e2 <getenv>
81001b61:	83 c4 10             	add    $0x10,%esp
81001b64:	85 c0                	test   %eax,%eax
81001b66:	74 07                	je     81001b6f <getopt_internal+0x153>
81001b68:	b8 02 00 00 00       	mov    $0x2,%eax
81001b6d:	eb 05                	jmp    81001b74 <getopt_internal+0x158>
81001b6f:	b8 00 00 00 00       	mov    $0x0,%eax
81001b74:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b77:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001b7b:	74 15                	je     81001b92 <getopt_internal+0x176>
81001b7d:	8b 45 10             	mov    0x10(%ebp),%eax
81001b80:	0f b6 00             	movzbl (%eax),%eax
81001b83:	3c 3a                	cmp    $0x3a,%al
81001b85:	75 0b                	jne    81001b92 <getopt_internal+0x176>
81001b87:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001b8b:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001b92:	8b 45 20             	mov    0x20(%ebp),%eax
81001b95:	8b 40 10             	mov    0x10(%eax),%eax
81001b98:	83 f8 01             	cmp    $0x1,%eax
81001b9b:	0f 85 a2 01 00 00    	jne    81001d43 <getopt_internal+0x327>
81001ba1:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001ba5:	0f 84 02 01 00 00    	je     81001cad <getopt_internal+0x291>
81001bab:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001baf:	0f 84 56 01 00 00    	je     81001d0b <getopt_internal+0x2ef>
81001bb5:	8b 45 20             	mov    0x20(%ebp),%eax
81001bb8:	8b 50 04             	mov    0x4(%eax),%edx
81001bbb:	8b 45 20             	mov    0x20(%ebp),%eax
81001bbe:	89 50 14             	mov    %edx,0x14(%eax)
81001bc1:	8b 45 20             	mov    0x20(%ebp),%eax
81001bc4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001bcb:	eb 1e                	jmp    81001beb <getopt_internal+0x1cf>
81001bcd:	8b 45 20             	mov    0x20(%ebp),%eax
81001bd0:	8b 40 04             	mov    0x4(%eax),%eax
81001bd3:	8d 50 01             	lea    0x1(%eax),%edx
81001bd6:	8b 45 20             	mov    0x20(%ebp),%eax
81001bd9:	89 50 04             	mov    %edx,0x4(%eax)
81001bdc:	8b 45 20             	mov    0x20(%ebp),%eax
81001bdf:	8b 40 18             	mov    0x18(%eax),%eax
81001be2:	8d 50 01             	lea    0x1(%eax),%edx
81001be5:	8b 45 20             	mov    0x20(%ebp),%eax
81001be8:	89 50 18             	mov    %edx,0x18(%eax)
81001beb:	8b 45 20             	mov    0x20(%ebp),%eax
81001bee:	8b 40 04             	mov    0x4(%eax),%eax
81001bf1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001bf8:	8b 45 0c             	mov    0xc(%ebp),%eax
81001bfb:	01 d0                	add    %edx,%eax
81001bfd:	8b 00                	mov    (%eax),%eax
81001bff:	83 ec 08             	sub    $0x8,%esp
81001c02:	ff 75 1c             	push   0x1c(%ebp)
81001c05:	50                   	push   %eax
81001c06:	e8 35 fd ff ff       	call   81001940 <is_option>
81001c0b:	83 c4 10             	add    $0x10,%esp
81001c0e:	85 c0                	test   %eax,%eax
81001c10:	74 bb                	je     81001bcd <getopt_internal+0x1b1>
81001c12:	8b 45 20             	mov    0x20(%ebp),%eax
81001c15:	8b 40 04             	mov    0x4(%eax),%eax
81001c18:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c22:	01 d0                	add    %edx,%eax
81001c24:	8b 00                	mov    (%eax),%eax
81001c26:	85 c0                	test   %eax,%eax
81001c28:	75 16                	jne    81001c40 <getopt_internal+0x224>
81001c2a:	8b 45 20             	mov    0x20(%ebp),%eax
81001c2d:	8b 50 14             	mov    0x14(%eax),%edx
81001c30:	8b 45 20             	mov    0x20(%ebp),%eax
81001c33:	89 50 04             	mov    %edx,0x4(%eax)
81001c36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c3b:	e9 ec 08 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001c40:	8b 45 20             	mov    0x20(%ebp),%eax
81001c43:	8b 40 04             	mov    0x4(%eax),%eax
81001c46:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c50:	01 d0                	add    %edx,%eax
81001c52:	8b 00                	mov    (%eax),%eax
81001c54:	83 ec 08             	sub    $0x8,%esp
81001c57:	68 78 6b 00 81       	push   $0x81006b78
81001c5c:	50                   	push   %eax
81001c5d:	e8 ca 27 00 00       	call   8100442c <strcmp>
81001c62:	83 c4 10             	add    $0x10,%esp
81001c65:	85 c0                	test   %eax,%eax
81001c67:	0f 85 cf 00 00 00    	jne    81001d3c <getopt_internal+0x320>
81001c6d:	8b 45 20             	mov    0x20(%ebp),%eax
81001c70:	8b 40 18             	mov    0x18(%eax),%eax
81001c73:	8b 55 20             	mov    0x20(%ebp),%edx
81001c76:	8b 52 14             	mov    0x14(%edx),%edx
81001c79:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001c80:	8b 55 0c             	mov    0xc(%ebp),%edx
81001c83:	01 ca                	add    %ecx,%edx
81001c85:	83 ec 04             	sub    $0x4,%esp
81001c88:	6a 01                	push   $0x1
81001c8a:	50                   	push   %eax
81001c8b:	52                   	push   %edx
81001c8c:	e8 79 fc ff ff       	call   8100190a <permute>
81001c91:	83 c4 10             	add    $0x10,%esp
81001c94:	8b 45 20             	mov    0x20(%ebp),%eax
81001c97:	8b 40 14             	mov    0x14(%eax),%eax
81001c9a:	8d 50 01             	lea    0x1(%eax),%edx
81001c9d:	8b 45 20             	mov    0x20(%ebp),%eax
81001ca0:	89 50 04             	mov    %edx,0x4(%eax)
81001ca3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ca8:	e9 7f 08 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001cad:	8b 45 20             	mov    0x20(%ebp),%eax
81001cb0:	8b 40 04             	mov    0x4(%eax),%eax
81001cb3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cba:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cbd:	01 d0                	add    %edx,%eax
81001cbf:	8b 00                	mov    (%eax),%eax
81001cc1:	83 ec 08             	sub    $0x8,%esp
81001cc4:	ff 75 1c             	push   0x1c(%ebp)
81001cc7:	50                   	push   %eax
81001cc8:	e8 73 fc ff ff       	call   81001940 <is_option>
81001ccd:	83 c4 10             	add    $0x10,%esp
81001cd0:	85 c0                	test   %eax,%eax
81001cd2:	75 6b                	jne    81001d3f <getopt_internal+0x323>
81001cd4:	8b 45 20             	mov    0x20(%ebp),%eax
81001cd7:	8b 40 04             	mov    0x4(%eax),%eax
81001cda:	8d 48 01             	lea    0x1(%eax),%ecx
81001cdd:	8b 55 20             	mov    0x20(%ebp),%edx
81001ce0:	89 4a 04             	mov    %ecx,0x4(%edx)
81001ce3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001cea:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ced:	01 d0                	add    %edx,%eax
81001cef:	8b 10                	mov    (%eax),%edx
81001cf1:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf4:	89 10                	mov    %edx,(%eax)
81001cf6:	8b 45 20             	mov    0x20(%ebp),%eax
81001cf9:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001d00:	8b 45 20             	mov    0x20(%ebp),%eax
81001d03:	8b 40 0c             	mov    0xc(%eax),%eax
81001d06:	e9 21 08 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001d0b:	8b 45 20             	mov    0x20(%ebp),%eax
81001d0e:	8b 40 04             	mov    0x4(%eax),%eax
81001d11:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d18:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d1b:	01 d0                	add    %edx,%eax
81001d1d:	8b 00                	mov    (%eax),%eax
81001d1f:	83 ec 08             	sub    $0x8,%esp
81001d22:	ff 75 1c             	push   0x1c(%ebp)
81001d25:	50                   	push   %eax
81001d26:	e8 15 fc ff ff       	call   81001940 <is_option>
81001d2b:	83 c4 10             	add    $0x10,%esp
81001d2e:	85 c0                	test   %eax,%eax
81001d30:	75 10                	jne    81001d42 <getopt_internal+0x326>
81001d32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d37:	e9 f0 07 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001d3c:	90                   	nop
81001d3d:	eb 04                	jmp    81001d43 <getopt_internal+0x327>
81001d3f:	90                   	nop
81001d40:	eb 01                	jmp    81001d43 <getopt_internal+0x327>
81001d42:	90                   	nop
81001d43:	8b 45 20             	mov    0x20(%ebp),%eax
81001d46:	8b 40 04             	mov    0x4(%eax),%eax
81001d49:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d50:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d53:	01 d0                	add    %edx,%eax
81001d55:	8b 00                	mov    (%eax),%eax
81001d57:	85 c0                	test   %eax,%eax
81001d59:	75 0a                	jne    81001d65 <getopt_internal+0x349>
81001d5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d60:	e9 c7 07 00 00       	jmp    8100252c <getopt_internal+0xb10>
81001d65:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001d69:	0f 84 15 03 00 00    	je     81002084 <getopt_internal+0x668>
81001d6f:	8b 45 20             	mov    0x20(%ebp),%eax
81001d72:	8b 40 04             	mov    0x4(%eax),%eax
81001d75:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d7f:	01 d0                	add    %edx,%eax
81001d81:	8b 00                	mov    (%eax),%eax
81001d83:	83 ec 04             	sub    $0x4,%esp
81001d86:	6a 02                	push   $0x2
81001d88:	68 78 6b 00 81       	push   $0x81006b78
81001d8d:	50                   	push   %eax
81001d8e:	e8 42 14 00 00       	call   810031d5 <memcmp>
81001d93:	83 c4 10             	add    $0x10,%esp
81001d96:	85 c0                	test   %eax,%eax
81001d98:	74 29                	je     81001dc3 <getopt_internal+0x3a7>
81001d9a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001d9e:	0f 84 e0 02 00 00    	je     81002084 <getopt_internal+0x668>
81001da4:	8b 45 20             	mov    0x20(%ebp),%eax
81001da7:	8b 40 04             	mov    0x4(%eax),%eax
81001daa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001db1:	8b 45 0c             	mov    0xc(%ebp),%eax
81001db4:	01 d0                	add    %edx,%eax
81001db6:	8b 00                	mov    (%eax),%eax
81001db8:	0f b6 00             	movzbl (%eax),%eax
81001dbb:	3c 2b                	cmp    $0x2b,%al
81001dbd:	0f 85 c1 02 00 00    	jne    81002084 <getopt_internal+0x668>
81001dc3:	8b 45 20             	mov    0x20(%ebp),%eax
81001dc6:	8b 40 10             	mov    0x10(%eax),%eax
81001dc9:	83 f8 01             	cmp    $0x1,%eax
81001dcc:	0f 85 b2 02 00 00    	jne    81002084 <getopt_internal+0x668>
81001dd2:	8b 45 20             	mov    0x20(%ebp),%eax
81001dd5:	8b 40 04             	mov    0x4(%eax),%eax
81001dd8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ddf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001de2:	01 d0                	add    %edx,%eax
81001de4:	8b 00                	mov    (%eax),%eax
81001de6:	83 ec 04             	sub    $0x4,%esp
81001de9:	6a 02                	push   $0x2
81001deb:	68 78 6b 00 81       	push   $0x81006b78
81001df0:	50                   	push   %eax
81001df1:	e8 df 13 00 00       	call   810031d5 <memcmp>
81001df6:	83 c4 10             	add    $0x10,%esp
81001df9:	85 c0                	test   %eax,%eax
81001dfb:	75 0a                	jne    81001e07 <getopt_internal+0x3eb>
81001dfd:	8b 45 20             	mov    0x20(%ebp),%eax
81001e00:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001e07:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001e0e:	8b 45 20             	mov    0x20(%ebp),%eax
81001e11:	8b 40 04             	mov    0x4(%eax),%eax
81001e14:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e1e:	01 d0                	add    %edx,%eax
81001e20:	8b 10                	mov    (%eax),%edx
81001e22:	8b 45 20             	mov    0x20(%ebp),%eax
81001e25:	8b 40 10             	mov    0x10(%eax),%eax
81001e28:	01 d0                	add    %edx,%eax
81001e2a:	83 ec 08             	sub    $0x8,%esp
81001e2d:	6a 3d                	push   $0x3d
81001e2f:	50                   	push   %eax
81001e30:	e8 fb 24 00 00       	call   81004330 <strchr>
81001e35:	83 c4 10             	add    $0x10,%esp
81001e38:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e3b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001e3f:	75 4a                	jne    81001e8b <getopt_internal+0x46f>
81001e41:	8b 45 20             	mov    0x20(%ebp),%eax
81001e44:	8b 40 04             	mov    0x4(%eax),%eax
81001e47:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e51:	01 d0                	add    %edx,%eax
81001e53:	8b 00                	mov    (%eax),%eax
81001e55:	83 ec 0c             	sub    $0xc,%esp
81001e58:	50                   	push   %eax
81001e59:	e8 82 26 00 00       	call   810044e0 <strlen>
81001e5e:	83 c4 10             	add    $0x10,%esp
81001e61:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001e64:	8b 45 20             	mov    0x20(%ebp),%eax
81001e67:	8b 40 04             	mov    0x4(%eax),%eax
81001e6a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e71:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e74:	01 d0                	add    %edx,%eax
81001e76:	8b 10                	mov    (%eax),%edx
81001e78:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001e7b:	01 d0                	add    %edx,%eax
81001e7d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001e80:	8b 45 20             	mov    0x20(%ebp),%eax
81001e83:	8b 40 10             	mov    0x10(%eax),%eax
81001e86:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001e89:	eb 28                	jmp    81001eb3 <getopt_internal+0x497>
81001e8b:	8b 45 20             	mov    0x20(%ebp),%eax
81001e8e:	8b 40 04             	mov    0x4(%eax),%eax
81001e91:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e98:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e9b:	01 d0                	add    %edx,%eax
81001e9d:	8b 08                	mov    (%eax),%ecx
81001e9f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001ea2:	29 c8                	sub    %ecx,%eax
81001ea4:	89 c2                	mov    %eax,%edx
81001ea6:	8b 45 20             	mov    0x20(%ebp),%eax
81001ea9:	8b 48 10             	mov    0x10(%eax),%ecx
81001eac:	89 d0                	mov    %edx,%eax
81001eae:	29 c8                	sub    %ecx,%eax
81001eb0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001eb3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001eba:	e9 95 01 00 00       	jmp    81002054 <getopt_internal+0x638>
81001ebf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ec2:	c1 e0 04             	shl    $0x4,%eax
81001ec5:	89 c2                	mov    %eax,%edx
81001ec7:	8b 45 14             	mov    0x14(%ebp),%eax
81001eca:	01 d0                	add    %edx,%eax
81001ecc:	8b 00                	mov    (%eax),%eax
81001ece:	8b 55 20             	mov    0x20(%ebp),%edx
81001ed1:	8b 52 04             	mov    0x4(%edx),%edx
81001ed4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001edb:	8b 55 0c             	mov    0xc(%ebp),%edx
81001ede:	01 ca                	add    %ecx,%edx
81001ee0:	8b 0a                	mov    (%edx),%ecx
81001ee2:	8b 55 20             	mov    0x20(%ebp),%edx
81001ee5:	8b 52 10             	mov    0x10(%edx),%edx
81001ee8:	01 ca                	add    %ecx,%edx
81001eea:	83 ec 04             	sub    $0x4,%esp
81001eed:	ff 75 ec             	push   -0x14(%ebp)
81001ef0:	50                   	push   %eax
81001ef1:	52                   	push   %edx
81001ef2:	e8 de 12 00 00       	call   810031d5 <memcmp>
81001ef7:	83 c4 10             	add    $0x10,%esp
81001efa:	85 c0                	test   %eax,%eax
81001efc:	0f 85 4e 01 00 00    	jne    81002050 <getopt_internal+0x634>
81001f02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f05:	c1 e0 04             	shl    $0x4,%eax
81001f08:	89 c2                	mov    %eax,%edx
81001f0a:	8b 45 14             	mov    0x14(%ebp),%eax
81001f0d:	01 d0                	add    %edx,%eax
81001f0f:	8b 00                	mov    (%eax),%eax
81001f11:	83 ec 0c             	sub    $0xc,%esp
81001f14:	50                   	push   %eax
81001f15:	e8 c6 25 00 00       	call   810044e0 <strlen>
81001f1a:	83 c4 10             	add    $0x10,%esp
81001f1d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001f20:	75 0b                	jne    81001f2d <getopt_internal+0x511>
81001f22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f25:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f28:	e9 3e 01 00 00       	jmp    8100206b <getopt_internal+0x64f>
81001f2d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001f31:	79 0b                	jns    81001f3e <getopt_internal+0x522>
81001f33:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f36:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f39:	e9 12 01 00 00       	jmp    81002050 <getopt_internal+0x634>
81001f3e:	8b 45 20             	mov    0x20(%ebp),%eax
81001f41:	8b 40 08             	mov    0x8(%eax),%eax
81001f44:	85 c0                	test   %eax,%eax
81001f46:	0f 84 ef 00 00 00    	je     8100203b <getopt_internal+0x61f>
81001f4c:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001f51:	8b 50 0c             	mov    0xc(%eax),%edx
81001f54:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f57:	8b 00                	mov    (%eax),%eax
81001f59:	83 ec 08             	sub    $0x8,%esp
81001f5c:	52                   	push   %edx
81001f5d:	50                   	push   %eax
81001f5e:	e8 ed 2f 00 00       	call   81004f50 <fputs>
81001f63:	83 c4 10             	add    $0x10,%esp
81001f66:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001f6b:	8b 40 0c             	mov    0xc(%eax),%eax
81001f6e:	83 ec 08             	sub    $0x8,%esp
81001f71:	50                   	push   %eax
81001f72:	68 8b 6b 00 81       	push   $0x81006b8b
81001f77:	e8 d4 2f 00 00       	call   81004f50 <fputs>
81001f7c:	83 c4 10             	add    $0x10,%esp
81001f7f:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001f84:	8b 50 0c             	mov    0xc(%eax),%edx
81001f87:	8b 45 20             	mov    0x20(%ebp),%eax
81001f8a:	8b 40 04             	mov    0x4(%eax),%eax
81001f8d:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81001f94:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f97:	01 c8                	add    %ecx,%eax
81001f99:	8b 00                	mov    (%eax),%eax
81001f9b:	83 ec 08             	sub    $0x8,%esp
81001f9e:	52                   	push   %edx
81001f9f:	50                   	push   %eax
81001fa0:	e8 ab 2f 00 00       	call   81004f50 <fputs>
81001fa5:	83 c4 10             	add    $0x10,%esp
81001fa8:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001fad:	8b 40 0c             	mov    0xc(%eax),%eax
81001fb0:	83 ec 08             	sub    $0x8,%esp
81001fb3:	50                   	push   %eax
81001fb4:	68 96 6b 00 81       	push   $0x81006b96
81001fb9:	e8 92 2f 00 00       	call   81004f50 <fputs>
81001fbe:	83 c4 10             	add    $0x10,%esp
81001fc1:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001fc6:	8b 50 0c             	mov    0xc(%eax),%edx
81001fc9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001fcc:	c1 e0 04             	shl    $0x4,%eax
81001fcf:	89 c1                	mov    %eax,%ecx
81001fd1:	8b 45 14             	mov    0x14(%ebp),%eax
81001fd4:	01 c8                	add    %ecx,%eax
81001fd6:	8b 00                	mov    (%eax),%eax
81001fd8:	83 ec 08             	sub    $0x8,%esp
81001fdb:	52                   	push   %edx
81001fdc:	50                   	push   %eax
81001fdd:	e8 6e 2f 00 00       	call   81004f50 <fputs>
81001fe2:	83 c4 10             	add    $0x10,%esp
81001fe5:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81001fea:	8b 40 0c             	mov    0xc(%eax),%eax
81001fed:	83 ec 08             	sub    $0x8,%esp
81001ff0:	50                   	push   %eax
81001ff1:	68 b3 6b 00 81       	push   $0x81006bb3
81001ff6:	e8 55 2f 00 00       	call   81004f50 <fputs>
81001ffb:	83 c4 10             	add    $0x10,%esp
81001ffe:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002003:	8b 50 0c             	mov    0xc(%eax),%edx
81002006:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002009:	c1 e0 04             	shl    $0x4,%eax
8100200c:	89 c1                	mov    %eax,%ecx
8100200e:	8b 45 14             	mov    0x14(%ebp),%eax
81002011:	01 c8                	add    %ecx,%eax
81002013:	8b 00                	mov    (%eax),%eax
81002015:	83 ec 08             	sub    $0x8,%esp
81002018:	52                   	push   %edx
81002019:	50                   	push   %eax
8100201a:	e8 31 2f 00 00       	call   81004f50 <fputs>
8100201f:	83 c4 10             	add    $0x10,%esp
81002022:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002027:	8b 40 0c             	mov    0xc(%eax),%eax
8100202a:	83 ec 08             	sub    $0x8,%esp
8100202d:	50                   	push   %eax
8100202e:	68 bc 6b 00 81       	push   $0x81006bbc
81002033:	e8 18 2f 00 00       	call   81004f50 <fputs>
81002038:	83 c4 10             	add    $0x10,%esp
8100203b:	8b 45 20             	mov    0x20(%ebp),%eax
8100203e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002045:	8b 45 20             	mov    0x20(%ebp),%eax
81002048:	8b 40 0c             	mov    0xc(%eax),%eax
8100204b:	e9 dc 04 00 00       	jmp    8100252c <getopt_internal+0xb10>
81002050:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002054:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002057:	c1 e0 04             	shl    $0x4,%eax
8100205a:	89 c2                	mov    %eax,%edx
8100205c:	8b 45 14             	mov    0x14(%ebp),%eax
8100205f:	01 d0                	add    %edx,%eax
81002061:	8b 00                	mov    (%eax),%eax
81002063:	85 c0                	test   %eax,%eax
81002065:	0f 85 54 fe ff ff    	jne    81001ebf <getopt_internal+0x4a3>
8100206b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100206f:	78 13                	js     81002084 <getopt_internal+0x668>
81002071:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002074:	c1 e0 04             	shl    $0x4,%eax
81002077:	89 c2                	mov    %eax,%edx
81002079:	8b 45 14             	mov    0x14(%ebp),%eax
8100207c:	01 d0                	add    %edx,%eax
8100207e:	8b 40 04             	mov    0x4(%eax),%eax
81002081:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002084:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002088:	0f 89 9a 01 00 00    	jns    81002228 <getopt_internal+0x80c>
8100208e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002092:	0f 84 90 01 00 00    	je     81002228 <getopt_internal+0x80c>
81002098:	8b 45 20             	mov    0x20(%ebp),%eax
8100209b:	8b 40 04             	mov    0x4(%eax),%eax
8100209e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810020a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810020a8:	01 d0                	add    %edx,%eax
810020aa:	8b 10                	mov    (%eax),%edx
810020ac:	8b 45 20             	mov    0x20(%ebp),%eax
810020af:	8b 40 10             	mov    0x10(%eax),%eax
810020b2:	01 d0                	add    %edx,%eax
810020b4:	0f b6 00             	movzbl (%eax),%eax
810020b7:	0f be c0             	movsbl %al,%eax
810020ba:	83 ec 08             	sub    $0x8,%esp
810020bd:	50                   	push   %eax
810020be:	ff 75 10             	push   0x10(%ebp)
810020c1:	e8 6a 22 00 00       	call   81004330 <strchr>
810020c6:	83 c4 10             	add    $0x10,%esp
810020c9:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020cc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810020d0:	0f 85 f1 00 00 00    	jne    810021c7 <getopt_internal+0x7ab>
810020d6:	8b 45 20             	mov    0x20(%ebp),%eax
810020d9:	8b 40 08             	mov    0x8(%eax),%eax
810020dc:	85 c0                	test   %eax,%eax
810020de:	0f 84 83 00 00 00    	je     81002167 <getopt_internal+0x74b>
810020e4:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810020e9:	8b 50 0c             	mov    0xc(%eax),%edx
810020ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810020ef:	8b 00                	mov    (%eax),%eax
810020f1:	83 ec 08             	sub    $0x8,%esp
810020f4:	52                   	push   %edx
810020f5:	50                   	push   %eax
810020f6:	e8 55 2e 00 00       	call   81004f50 <fputs>
810020fb:	83 c4 10             	add    $0x10,%esp
810020fe:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002103:	8b 40 0c             	mov    0xc(%eax),%eax
81002106:	83 ec 08             	sub    $0x8,%esp
81002109:	50                   	push   %eax
8100210a:	68 c0 6b 00 81       	push   $0x81006bc0
8100210f:	e8 3c 2e 00 00       	call   81004f50 <fputs>
81002114:	83 c4 10             	add    $0x10,%esp
81002117:	a1 c4 73 00 81       	mov    0x810073c4,%eax
8100211c:	8b 50 0c             	mov    0xc(%eax),%edx
8100211f:	8b 45 20             	mov    0x20(%ebp),%eax
81002122:	8b 40 04             	mov    0x4(%eax),%eax
81002125:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100212c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100212f:	01 c8                	add    %ecx,%eax
81002131:	8b 08                	mov    (%eax),%ecx
81002133:	8b 45 20             	mov    0x20(%ebp),%eax
81002136:	8b 40 10             	mov    0x10(%eax),%eax
81002139:	01 c8                	add    %ecx,%eax
8100213b:	0f b6 00             	movzbl (%eax),%eax
8100213e:	0f be c0             	movsbl %al,%eax
81002141:	83 ec 08             	sub    $0x8,%esp
81002144:	52                   	push   %edx
81002145:	50                   	push   %eax
81002146:	e8 11 2d 00 00       	call   81004e5c <fputc>
8100214b:	83 c4 10             	add    $0x10,%esp
8100214e:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002153:	8b 40 0c             	mov    0xc(%eax),%eax
81002156:	83 ec 08             	sub    $0x8,%esp
81002159:	50                   	push   %eax
8100215a:	68 d7 6b 00 81       	push   $0x81006bd7
8100215f:	e8 ec 2d 00 00       	call   81004f50 <fputs>
81002164:	83 c4 10             	add    $0x10,%esp
81002167:	8b 45 20             	mov    0x20(%ebp),%eax
8100216a:	8b 40 10             	mov    0x10(%eax),%eax
8100216d:	8d 50 01             	lea    0x1(%eax),%edx
81002170:	8b 45 20             	mov    0x20(%ebp),%eax
81002173:	89 50 10             	mov    %edx,0x10(%eax)
81002176:	8b 45 20             	mov    0x20(%ebp),%eax
81002179:	8b 40 04             	mov    0x4(%eax),%eax
8100217c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002183:	8b 45 0c             	mov    0xc(%ebp),%eax
81002186:	01 d0                	add    %edx,%eax
81002188:	8b 10                	mov    (%eax),%edx
8100218a:	8b 45 20             	mov    0x20(%ebp),%eax
8100218d:	8b 40 10             	mov    0x10(%eax),%eax
81002190:	01 d0                	add    %edx,%eax
81002192:	0f b6 00             	movzbl (%eax),%eax
81002195:	84 c0                	test   %al,%al
81002197:	75 19                	jne    810021b2 <getopt_internal+0x796>
81002199:	8b 45 20             	mov    0x20(%ebp),%eax
8100219c:	8b 40 04             	mov    0x4(%eax),%eax
8100219f:	8d 50 01             	lea    0x1(%eax),%edx
810021a2:	8b 45 20             	mov    0x20(%ebp),%eax
810021a5:	89 50 04             	mov    %edx,0x4(%eax)
810021a8:	8b 45 20             	mov    0x20(%ebp),%eax
810021ab:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810021b2:	8b 45 20             	mov    0x20(%ebp),%eax
810021b5:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810021bc:	8b 45 20             	mov    0x20(%ebp),%eax
810021bf:	8b 40 0c             	mov    0xc(%eax),%eax
810021c2:	e9 65 03 00 00       	jmp    8100252c <getopt_internal+0xb10>
810021c7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810021ca:	83 c0 01             	add    $0x1,%eax
810021cd:	0f b6 00             	movzbl (%eax),%eax
810021d0:	3c 3a                	cmp    $0x3a,%al
810021d2:	75 1b                	jne    810021ef <getopt_internal+0x7d3>
810021d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810021d7:	83 c0 02             	add    $0x2,%eax
810021da:	0f b6 00             	movzbl (%eax),%eax
810021dd:	3c 3a                	cmp    $0x3a,%al
810021df:	75 07                	jne    810021e8 <getopt_internal+0x7cc>
810021e1:	b8 02 00 00 00       	mov    $0x2,%eax
810021e6:	eb 0c                	jmp    810021f4 <getopt_internal+0x7d8>
810021e8:	b8 01 00 00 00       	mov    $0x1,%eax
810021ed:	eb 05                	jmp    810021f4 <getopt_internal+0x7d8>
810021ef:	b8 00 00 00 00       	mov    $0x0,%eax
810021f4:	89 45 e0             	mov    %eax,-0x20(%ebp)
810021f7:	8b 45 20             	mov    0x20(%ebp),%eax
810021fa:	8b 40 04             	mov    0x4(%eax),%eax
810021fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002204:	8b 45 0c             	mov    0xc(%ebp),%eax
81002207:	01 d0                	add    %edx,%eax
81002209:	8b 10                	mov    (%eax),%edx
8100220b:	8b 45 20             	mov    0x20(%ebp),%eax
8100220e:	8b 40 10             	mov    0x10(%eax),%eax
81002211:	83 c0 01             	add    $0x1,%eax
81002214:	01 d0                	add    %edx,%eax
81002216:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002219:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100221c:	0f b6 00             	movzbl (%eax),%eax
8100221f:	0f be d0             	movsbl %al,%edx
81002222:	8b 45 20             	mov    0x20(%ebp),%eax
81002225:	89 50 0c             	mov    %edx,0xc(%eax)
81002228:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100222f:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002233:	74 40                	je     81002275 <getopt_internal+0x859>
81002235:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002239:	0f 85 b0 01 00 00    	jne    810023ef <getopt_internal+0x9d3>
8100223f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002242:	0f b6 00             	movzbl (%eax),%eax
81002245:	3c 3d                	cmp    $0x3d,%al
81002247:	75 04                	jne    8100224d <getopt_internal+0x831>
81002249:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100224d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002250:	0f b6 00             	movzbl (%eax),%eax
81002253:	84 c0                	test   %al,%al
81002255:	74 05                	je     8100225c <getopt_internal+0x840>
81002257:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100225a:	eb 05                	jmp    81002261 <getopt_internal+0x845>
8100225c:	b8 00 00 00 00       	mov    $0x0,%eax
81002261:	8b 55 20             	mov    0x20(%ebp),%edx
81002264:	89 02                	mov    %eax,(%edx)
81002266:	8b 45 20             	mov    0x20(%ebp),%eax
81002269:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002270:	e9 d2 01 00 00       	jmp    81002447 <getopt_internal+0xa2b>
81002275:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002278:	0f b6 00             	movzbl (%eax),%eax
8100227b:	3c 3d                	cmp    $0x3d,%al
8100227d:	75 04                	jne    81002283 <getopt_internal+0x867>
8100227f:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002283:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002286:	0f b6 00             	movzbl (%eax),%eax
81002289:	84 c0                	test   %al,%al
8100228b:	74 17                	je     810022a4 <getopt_internal+0x888>
8100228d:	8b 45 20             	mov    0x20(%ebp),%eax
81002290:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002293:	89 10                	mov    %edx,(%eax)
81002295:	8b 45 20             	mov    0x20(%ebp),%eax
81002298:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100229f:	e9 a3 01 00 00       	jmp    81002447 <getopt_internal+0xa2b>
810022a4:	8b 45 20             	mov    0x20(%ebp),%eax
810022a7:	8b 40 04             	mov    0x4(%eax),%eax
810022aa:	83 c0 01             	add    $0x1,%eax
810022ad:	39 45 08             	cmp    %eax,0x8(%ebp)
810022b0:	0f 8f 0a 01 00 00    	jg     810023c0 <getopt_internal+0x9a4>
810022b6:	8b 45 20             	mov    0x20(%ebp),%eax
810022b9:	8b 40 08             	mov    0x8(%eax),%eax
810022bc:	85 c0                	test   %eax,%eax
810022be:	0f 84 d3 00 00 00    	je     81002397 <getopt_internal+0x97b>
810022c4:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810022c9:	8b 50 0c             	mov    0xc(%eax),%edx
810022cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810022cf:	8b 00                	mov    (%eax),%eax
810022d1:	83 ec 08             	sub    $0x8,%esp
810022d4:	52                   	push   %edx
810022d5:	50                   	push   %eax
810022d6:	e8 75 2c 00 00       	call   81004f50 <fputs>
810022db:	83 c4 10             	add    $0x10,%esp
810022de:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810022e3:	8b 40 0c             	mov    0xc(%eax),%eax
810022e6:	83 ec 08             	sub    $0x8,%esp
810022e9:	50                   	push   %eax
810022ea:	68 dc 6b 00 81       	push   $0x81006bdc
810022ef:	e8 5c 2c 00 00       	call   81004f50 <fputs>
810022f4:	83 c4 10             	add    $0x10,%esp
810022f7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810022fb:	78 54                	js     81002351 <getopt_internal+0x935>
810022fd:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002302:	8b 40 0c             	mov    0xc(%eax),%eax
81002305:	83 ec 08             	sub    $0x8,%esp
81002308:	50                   	push   %eax
81002309:	6a 2d                	push   $0x2d
8100230b:	e8 4c 2b 00 00       	call   81004e5c <fputc>
81002310:	83 c4 10             	add    $0x10,%esp
81002313:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002318:	8b 50 0c             	mov    0xc(%eax),%edx
8100231b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100231e:	c1 e0 04             	shl    $0x4,%eax
81002321:	89 c1                	mov    %eax,%ecx
81002323:	8b 45 14             	mov    0x14(%ebp),%eax
81002326:	01 c8                	add    %ecx,%eax
81002328:	8b 00                	mov    (%eax),%eax
8100232a:	83 ec 08             	sub    $0x8,%esp
8100232d:	52                   	push   %edx
8100232e:	50                   	push   %eax
8100232f:	e8 1c 2c 00 00       	call   81004f50 <fputs>
81002334:	83 c4 10             	add    $0x10,%esp
81002337:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100233b:	74 07                	je     81002344 <getopt_internal+0x928>
8100233d:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002342:	eb 05                	jmp    81002349 <getopt_internal+0x92d>
81002344:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002349:	8b 45 20             	mov    0x20(%ebp),%eax
8100234c:	89 50 0c             	mov    %edx,0xc(%eax)
8100234f:	eb 2d                	jmp    8100237e <getopt_internal+0x962>
81002351:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002356:	8b 50 0c             	mov    0xc(%eax),%edx
81002359:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100235c:	0f b6 00             	movzbl (%eax),%eax
8100235f:	0f be c0             	movsbl %al,%eax
81002362:	83 ec 08             	sub    $0x8,%esp
81002365:	52                   	push   %edx
81002366:	50                   	push   %eax
81002367:	e8 f0 2a 00 00       	call   81004e5c <fputc>
8100236c:	83 c4 10             	add    $0x10,%esp
8100236f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002372:	0f b6 00             	movzbl (%eax),%eax
81002375:	0f be d0             	movsbl %al,%edx
81002378:	8b 45 20             	mov    0x20(%ebp),%eax
8100237b:	89 50 0c             	mov    %edx,0xc(%eax)
8100237e:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002383:	8b 40 0c             	mov    0xc(%eax),%eax
81002386:	83 ec 08             	sub    $0x8,%esp
81002389:	50                   	push   %eax
8100238a:	68 d7 6b 00 81       	push   $0x81006bd7
8100238f:	e8 bc 2b 00 00       	call   81004f50 <fputs>
81002394:	83 c4 10             	add    $0x10,%esp
81002397:	8b 45 20             	mov    0x20(%ebp),%eax
8100239a:	8b 40 04             	mov    0x4(%eax),%eax
8100239d:	8d 50 01             	lea    0x1(%eax),%edx
810023a0:	8b 45 20             	mov    0x20(%ebp),%eax
810023a3:	89 50 04             	mov    %edx,0x4(%eax)
810023a6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810023aa:	74 0a                	je     810023b6 <getopt_internal+0x99a>
810023ac:	b8 3a 00 00 00       	mov    $0x3a,%eax
810023b1:	e9 76 01 00 00       	jmp    8100252c <getopt_internal+0xb10>
810023b6:	b8 3f 00 00 00       	mov    $0x3f,%eax
810023bb:	e9 6c 01 00 00       	jmp    8100252c <getopt_internal+0xb10>
810023c0:	8b 45 20             	mov    0x20(%ebp),%eax
810023c3:	8b 40 04             	mov    0x4(%eax),%eax
810023c6:	83 c0 01             	add    $0x1,%eax
810023c9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810023d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810023d3:	01 d0                	add    %edx,%eax
810023d5:	8b 10                	mov    (%eax),%edx
810023d7:	8b 45 20             	mov    0x20(%ebp),%eax
810023da:	89 10                	mov    %edx,(%eax)
810023dc:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810023e3:	8b 45 20             	mov    0x20(%ebp),%eax
810023e6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023ed:	eb 58                	jmp    81002447 <getopt_internal+0xa2b>
810023ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810023f3:	79 3e                	jns    81002433 <getopt_internal+0xa17>
810023f5:	8b 45 20             	mov    0x20(%ebp),%eax
810023f8:	8b 40 10             	mov    0x10(%eax),%eax
810023fb:	8d 50 01             	lea    0x1(%eax),%edx
810023fe:	8b 45 20             	mov    0x20(%ebp),%eax
81002401:	89 50 10             	mov    %edx,0x10(%eax)
81002404:	8b 45 20             	mov    0x20(%ebp),%eax
81002407:	8b 40 04             	mov    0x4(%eax),%eax
8100240a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002411:	8b 45 0c             	mov    0xc(%ebp),%eax
81002414:	01 d0                	add    %edx,%eax
81002416:	8b 10                	mov    (%eax),%edx
81002418:	8b 45 20             	mov    0x20(%ebp),%eax
8100241b:	8b 40 10             	mov    0x10(%eax),%eax
8100241e:	01 d0                	add    %edx,%eax
81002420:	0f b6 00             	movzbl (%eax),%eax
81002423:	84 c0                	test   %al,%al
81002425:	75 16                	jne    8100243d <getopt_internal+0xa21>
81002427:	8b 45 20             	mov    0x20(%ebp),%eax
8100242a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002431:	eb 0a                	jmp    8100243d <getopt_internal+0xa21>
81002433:	8b 45 20             	mov    0x20(%ebp),%eax
81002436:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100243d:	8b 45 20             	mov    0x20(%ebp),%eax
81002440:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002446:	90                   	nop
81002447:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100244b:	75 57                	jne    810024a4 <getopt_internal+0xa88>
8100244d:	8b 45 20             	mov    0x20(%ebp),%eax
81002450:	8b 40 10             	mov    0x10(%eax),%eax
81002453:	83 f8 01             	cmp    $0x1,%eax
81002456:	75 4c                	jne    810024a4 <getopt_internal+0xa88>
81002458:	8b 45 20             	mov    0x20(%ebp),%eax
8100245b:	8b 40 18             	mov    0x18(%eax),%eax
8100245e:	85 c0                	test   %eax,%eax
81002460:	74 42                	je     810024a4 <getopt_internal+0xa88>
81002462:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002465:	8d 48 01             	lea    0x1(%eax),%ecx
81002468:	8b 45 20             	mov    0x20(%ebp),%eax
8100246b:	8b 40 18             	mov    0x18(%eax),%eax
8100246e:	8b 55 20             	mov    0x20(%ebp),%edx
81002471:	8b 52 14             	mov    0x14(%edx),%edx
81002474:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
8100247b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100247e:	01 da                	add    %ebx,%edx
81002480:	83 ec 04             	sub    $0x4,%esp
81002483:	51                   	push   %ecx
81002484:	50                   	push   %eax
81002485:	52                   	push   %edx
81002486:	e8 7f f4 ff ff       	call   8100190a <permute>
8100248b:	83 c4 10             	add    $0x10,%esp
8100248e:	8b 45 20             	mov    0x20(%ebp),%eax
81002491:	8b 40 14             	mov    0x14(%eax),%eax
81002494:	8d 50 01             	lea    0x1(%eax),%edx
81002497:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100249a:	01 c2                	add    %eax,%edx
8100249c:	8b 45 20             	mov    0x20(%ebp),%eax
8100249f:	89 50 04             	mov    %edx,0x4(%eax)
810024a2:	eb 1f                	jmp    810024c3 <getopt_internal+0xaa7>
810024a4:	8b 45 20             	mov    0x20(%ebp),%eax
810024a7:	8b 40 10             	mov    0x10(%eax),%eax
810024aa:	83 f8 01             	cmp    $0x1,%eax
810024ad:	75 14                	jne    810024c3 <getopt_internal+0xaa7>
810024af:	8b 45 20             	mov    0x20(%ebp),%eax
810024b2:	8b 40 04             	mov    0x4(%eax),%eax
810024b5:	8d 50 01             	lea    0x1(%eax),%edx
810024b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810024bb:	01 c2                	add    %eax,%edx
810024bd:	8b 45 20             	mov    0x20(%ebp),%eax
810024c0:	89 50 04             	mov    %edx,0x4(%eax)
810024c3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810024c7:	78 5d                	js     81002526 <getopt_internal+0xb0a>
810024c9:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
810024cd:	74 08                	je     810024d7 <getopt_internal+0xabb>
810024cf:	8b 45 18             	mov    0x18(%ebp),%eax
810024d2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810024d5:	89 10                	mov    %edx,(%eax)
810024d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024da:	c1 e0 04             	shl    $0x4,%eax
810024dd:	89 c2                	mov    %eax,%edx
810024df:	8b 45 14             	mov    0x14(%ebp),%eax
810024e2:	01 d0                	add    %edx,%eax
810024e4:	8b 40 08             	mov    0x8(%eax),%eax
810024e7:	85 c0                	test   %eax,%eax
810024e9:	74 29                	je     81002514 <getopt_internal+0xaf8>
810024eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024ee:	c1 e0 04             	shl    $0x4,%eax
810024f1:	89 c2                	mov    %eax,%edx
810024f3:	8b 45 14             	mov    0x14(%ebp),%eax
810024f6:	01 c2                	add    %eax,%edx
810024f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810024fb:	c1 e0 04             	shl    $0x4,%eax
810024fe:	89 c1                	mov    %eax,%ecx
81002500:	8b 45 14             	mov    0x14(%ebp),%eax
81002503:	01 c8                	add    %ecx,%eax
81002505:	8b 40 08             	mov    0x8(%eax),%eax
81002508:	8b 52 0c             	mov    0xc(%edx),%edx
8100250b:	89 10                	mov    %edx,(%eax)
8100250d:	b8 00 00 00 00       	mov    $0x0,%eax
81002512:	eb 18                	jmp    8100252c <getopt_internal+0xb10>
81002514:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002517:	c1 e0 04             	shl    $0x4,%eax
8100251a:	89 c2                	mov    %eax,%edx
8100251c:	8b 45 14             	mov    0x14(%ebp),%eax
8100251f:	01 d0                	add    %edx,%eax
81002521:	8b 40 0c             	mov    0xc(%eax),%eax
81002524:	eb 06                	jmp    8100252c <getopt_internal+0xb10>
81002526:	8b 45 20             	mov    0x20(%ebp),%eax
81002529:	8b 40 0c             	mov    0xc(%eax),%eax
8100252c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100252f:	c9                   	leave  
81002530:	c3                   	ret    

81002531 <getopt>:
81002531:	55                   	push   %ebp
81002532:	89 e5                	mov    %esp,%ebp
81002534:	83 ec 28             	sub    $0x28,%esp
81002537:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100253a:	50                   	push   %eax
8100253b:	e8 31 f4 ff ff       	call   81001971 <read_globals>
81002540:	83 c4 04             	add    $0x4,%esp
81002543:	83 ec 04             	sub    $0x4,%esp
81002546:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002549:	50                   	push   %eax
8100254a:	6a 00                	push   $0x0
8100254c:	6a 00                	push   $0x0
8100254e:	6a 00                	push   $0x0
81002550:	ff 75 10             	push   0x10(%ebp)
81002553:	ff 75 0c             	push   0xc(%ebp)
81002556:	ff 75 08             	push   0x8(%ebp)
81002559:	e8 be f4 ff ff       	call   81001a1c <getopt_internal>
8100255e:	83 c4 20             	add    $0x20,%esp
81002561:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002564:	83 ec 0c             	sub    $0xc,%esp
81002567:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100256a:	50                   	push   %eax
8100256b:	e8 5a f4 ff ff       	call   810019ca <write_globals>
81002570:	83 c4 10             	add    $0x10,%esp
81002573:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002576:	c9                   	leave  
81002577:	c3                   	ret    

81002578 <getopt_long>:
81002578:	55                   	push   %ebp
81002579:	89 e5                	mov    %esp,%ebp
8100257b:	83 ec 28             	sub    $0x28,%esp
8100257e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002581:	50                   	push   %eax
81002582:	e8 ea f3 ff ff       	call   81001971 <read_globals>
81002587:	83 c4 04             	add    $0x4,%esp
8100258a:	83 ec 04             	sub    $0x4,%esp
8100258d:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002590:	50                   	push   %eax
81002591:	6a 00                	push   $0x0
81002593:	ff 75 18             	push   0x18(%ebp)
81002596:	ff 75 14             	push   0x14(%ebp)
81002599:	ff 75 10             	push   0x10(%ebp)
8100259c:	ff 75 0c             	push   0xc(%ebp)
8100259f:	ff 75 08             	push   0x8(%ebp)
810025a2:	e8 75 f4 ff ff       	call   81001a1c <getopt_internal>
810025a7:	83 c4 20             	add    $0x20,%esp
810025aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025ad:	83 ec 0c             	sub    $0xc,%esp
810025b0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025b3:	50                   	push   %eax
810025b4:	e8 11 f4 ff ff       	call   810019ca <write_globals>
810025b9:	83 c4 10             	add    $0x10,%esp
810025bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810025bf:	c9                   	leave  
810025c0:	c3                   	ret    

810025c1 <getopt_long_only>:
810025c1:	55                   	push   %ebp
810025c2:	89 e5                	mov    %esp,%ebp
810025c4:	83 ec 28             	sub    $0x28,%esp
810025c7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025ca:	50                   	push   %eax
810025cb:	e8 a1 f3 ff ff       	call   81001971 <read_globals>
810025d0:	83 c4 04             	add    $0x4,%esp
810025d3:	83 ec 04             	sub    $0x4,%esp
810025d6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025d9:	50                   	push   %eax
810025da:	6a 01                	push   $0x1
810025dc:	ff 75 18             	push   0x18(%ebp)
810025df:	ff 75 14             	push   0x14(%ebp)
810025e2:	ff 75 10             	push   0x10(%ebp)
810025e5:	ff 75 0c             	push   0xc(%ebp)
810025e8:	ff 75 08             	push   0x8(%ebp)
810025eb:	e8 2c f4 ff ff       	call   81001a1c <getopt_internal>
810025f0:	83 c4 20             	add    $0x20,%esp
810025f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025f6:	83 ec 0c             	sub    $0xc,%esp
810025f9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025fc:	50                   	push   %eax
810025fd:	e8 c8 f3 ff ff       	call   810019ca <write_globals>
81002602:	83 c4 10             	add    $0x10,%esp
81002605:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002608:	c9                   	leave  
81002609:	c3                   	ret    

8100260a <__getopt_r>:
8100260a:	55                   	push   %ebp
8100260b:	89 e5                	mov    %esp,%ebp
8100260d:	83 ec 08             	sub    $0x8,%esp
81002610:	83 ec 04             	sub    $0x4,%esp
81002613:	ff 75 14             	push   0x14(%ebp)
81002616:	6a 00                	push   $0x0
81002618:	6a 00                	push   $0x0
8100261a:	6a 00                	push   $0x0
8100261c:	ff 75 10             	push   0x10(%ebp)
8100261f:	ff 75 0c             	push   0xc(%ebp)
81002622:	ff 75 08             	push   0x8(%ebp)
81002625:	e8 f2 f3 ff ff       	call   81001a1c <getopt_internal>
8100262a:	83 c4 20             	add    $0x20,%esp
8100262d:	c9                   	leave  
8100262e:	c3                   	ret    

8100262f <__getopt_long_r>:
8100262f:	55                   	push   %ebp
81002630:	89 e5                	mov    %esp,%ebp
81002632:	83 ec 08             	sub    $0x8,%esp
81002635:	83 ec 04             	sub    $0x4,%esp
81002638:	ff 75 1c             	push   0x1c(%ebp)
8100263b:	6a 00                	push   $0x0
8100263d:	ff 75 18             	push   0x18(%ebp)
81002640:	ff 75 14             	push   0x14(%ebp)
81002643:	ff 75 10             	push   0x10(%ebp)
81002646:	ff 75 0c             	push   0xc(%ebp)
81002649:	ff 75 08             	push   0x8(%ebp)
8100264c:	e8 cb f3 ff ff       	call   81001a1c <getopt_internal>
81002651:	83 c4 20             	add    $0x20,%esp
81002654:	c9                   	leave  
81002655:	c3                   	ret    

81002656 <__getopt_long_only_r>:
81002656:	55                   	push   %ebp
81002657:	89 e5                	mov    %esp,%ebp
81002659:	83 ec 08             	sub    $0x8,%esp
8100265c:	83 ec 04             	sub    $0x4,%esp
8100265f:	ff 75 1c             	push   0x1c(%ebp)
81002662:	6a 01                	push   $0x1
81002664:	ff 75 18             	push   0x18(%ebp)
81002667:	ff 75 14             	push   0x14(%ebp)
8100266a:	ff 75 10             	push   0x10(%ebp)
8100266d:	ff 75 0c             	push   0xc(%ebp)
81002670:	ff 75 08             	push   0x8(%ebp)
81002673:	e8 a4 f3 ff ff       	call   81001a1c <getopt_internal>
81002678:	83 c4 20             	add    $0x20,%esp
8100267b:	c9                   	leave  
8100267c:	c3                   	ret    

8100267d <__getreent>:
8100267d:	55                   	push   %ebp
8100267e:	89 e5                	mov    %esp,%ebp
81002680:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81002685:	5d                   	pop    %ebp
81002686:	c3                   	ret    

81002687 <malloc_extend_top>:
81002687:	55                   	push   %ebp
81002688:	89 e5                	mov    %esp,%ebp
8100268a:	83 ec 38             	sub    $0x38,%esp
8100268d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002694:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002699:	8b 40 08             	mov    0x8(%eax),%eax
8100269c:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100269f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810026a2:	8b 40 04             	mov    0x4(%eax),%eax
810026a5:	83 e0 fc             	and    $0xfffffffc,%eax
810026a8:	89 45 dc             	mov    %eax,-0x24(%ebp)
810026ab:	8b 55 e0             	mov    -0x20(%ebp),%edx
810026ae:	8b 45 dc             	mov    -0x24(%ebp),%eax
810026b1:	01 d0                	add    %edx,%eax
810026b3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810026b6:	8b 15 c0 7f 00 81    	mov    0x81007fc0,%edx
810026bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810026bf:	01 d0                	add    %edx,%eax
810026c1:	83 c0 10             	add    $0x10,%eax
810026c4:	89 45 e8             	mov    %eax,-0x18(%ebp)
810026c7:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810026ce:	a1 ec 77 00 81       	mov    0x810077ec,%eax
810026d3:	83 f8 ff             	cmp    $0xffffffff,%eax
810026d6:	74 15                	je     810026ed <malloc_extend_top+0x66>
810026d8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810026db:	8b 45 e8             	mov    -0x18(%ebp),%eax
810026de:	01 d0                	add    %edx,%eax
810026e0:	8d 50 ff             	lea    -0x1(%eax),%edx
810026e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810026e6:	f7 d8                	neg    %eax
810026e8:	21 d0                	and    %edx,%eax
810026ea:	89 45 e8             	mov    %eax,-0x18(%ebp)
810026ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
810026f0:	83 ec 08             	sub    $0x8,%esp
810026f3:	50                   	push   %eax
810026f4:	ff 75 08             	push   0x8(%ebp)
810026f7:	e8 d9 1a 00 00       	call   810041d5 <_sbrk_r>
810026fc:	83 c4 10             	add    $0x10,%esp
810026ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002702:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002706:	0f 84 0b 02 00 00    	je     81002917 <malloc_extend_top+0x290>
8100270c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100270f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002712:	73 0e                	jae    81002722 <malloc_extend_top+0x9b>
81002714:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002719:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100271c:	0f 85 f5 01 00 00    	jne    81002917 <malloc_extend_top+0x290>
81002722:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
81002727:	89 c2                	mov    %eax,%edx
81002729:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100272c:	01 d0                	add    %edx,%eax
8100272e:	a3 e0 7f 00 81       	mov    %eax,0x81007fe0
81002733:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002736:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002739:	75 30                	jne    8100276b <malloc_extend_top+0xe4>
8100273b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100273e:	8d 50 ff             	lea    -0x1(%eax),%edx
81002741:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002744:	21 d0                	and    %edx,%eax
81002746:	85 c0                	test   %eax,%eax
81002748:	75 21                	jne    8100276b <malloc_extend_top+0xe4>
8100274a:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100274d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002750:	01 d0                	add    %edx,%eax
81002752:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002755:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100275a:	8b 40 08             	mov    0x8(%eax),%eax
8100275d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002760:	83 ca 01             	or     $0x1,%edx
81002763:	89 50 04             	mov    %edx,0x4(%eax)
81002766:	e9 76 01 00 00       	jmp    810028e1 <malloc_extend_top+0x25a>
8100276b:	a1 ec 77 00 81       	mov    0x810077ec,%eax
81002770:	83 f8 ff             	cmp    $0xffffffff,%eax
81002773:	75 0a                	jne    8100277f <malloc_extend_top+0xf8>
81002775:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002778:	a3 ec 77 00 81       	mov    %eax,0x810077ec
8100277d:	eb 13                	jmp    81002792 <malloc_extend_top+0x10b>
8100277f:	8b 15 e0 7f 00 81    	mov    0x81007fe0,%edx
81002785:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002788:	2b 45 d8             	sub    -0x28(%ebp),%eax
8100278b:	01 d0                	add    %edx,%eax
8100278d:	a3 e0 7f 00 81       	mov    %eax,0x81007fe0
81002792:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002795:	83 c0 08             	add    $0x8,%eax
81002798:	83 e0 07             	and    $0x7,%eax
8100279b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100279e:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810027a2:	74 13                	je     810027b7 <malloc_extend_top+0x130>
810027a4:	b8 08 00 00 00       	mov    $0x8,%eax
810027a9:	2b 45 cc             	sub    -0x34(%ebp),%eax
810027ac:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027af:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027b2:	01 45 f4             	add    %eax,-0xc(%ebp)
810027b5:	eb 07                	jmp    810027be <malloc_extend_top+0x137>
810027b7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810027be:	8b 55 f4             	mov    -0xc(%ebp),%edx
810027c1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810027c4:	01 d0                	add    %edx,%eax
810027c6:	89 c2                	mov    %eax,%edx
810027c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027cb:	83 e8 01             	sub    $0x1,%eax
810027ce:	21 c2                	and    %eax,%edx
810027d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027d3:	29 d0                	sub    %edx,%eax
810027d5:	01 45 f0             	add    %eax,-0x10(%ebp)
810027d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810027db:	83 e8 01             	sub    $0x1,%eax
810027de:	21 45 f0             	and    %eax,-0x10(%ebp)
810027e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027e4:	83 ec 08             	sub    $0x8,%esp
810027e7:	50                   	push   %eax
810027e8:	ff 75 08             	push   0x8(%ebp)
810027eb:	e8 e5 19 00 00       	call   810041d5 <_sbrk_r>
810027f0:	83 c4 10             	add    $0x10,%esp
810027f3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027f6:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810027fa:	75 28                	jne    81002824 <malloc_extend_top+0x19d>
810027fc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002803:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100280a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100280d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002810:	01 d0                	add    %edx,%eax
81002812:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002815:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81002819:	74 09                	je     81002824 <malloc_extend_top+0x19d>
8100281b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100281e:	83 e8 08             	sub    $0x8,%eax
81002821:	01 45 ec             	add    %eax,-0x14(%ebp)
81002824:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
81002829:	89 c2                	mov    %eax,%edx
8100282b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100282e:	01 d0                	add    %edx,%eax
81002830:	a3 e0 7f 00 81       	mov    %eax,0x81007fe0
81002835:	ba e0 73 00 81       	mov    $0x810073e0,%edx
8100283a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100283d:	89 42 08             	mov    %eax,0x8(%edx)
81002840:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002843:	2b 45 f4             	sub    -0xc(%ebp),%eax
81002846:	89 c2                	mov    %eax,%edx
81002848:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100284b:	01 d0                	add    %edx,%eax
8100284d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002850:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002855:	8b 40 08             	mov    0x8(%eax),%eax
81002858:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100285b:	83 ca 01             	or     $0x1,%edx
8100285e:	89 50 04             	mov    %edx,0x4(%eax)
81002861:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002866:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002869:	74 76                	je     810028e1 <malloc_extend_top+0x25a>
8100286b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100286f:	77 14                	ja     81002885 <malloc_extend_top+0x1fe>
81002871:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002876:	8b 40 08             	mov    0x8(%eax),%eax
81002879:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002880:	e9 93 00 00 00       	jmp    81002918 <malloc_extend_top+0x291>
81002885:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002888:	83 e8 0c             	sub    $0xc,%eax
8100288b:	83 e0 f8             	and    $0xfffffff8,%eax
8100288e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002891:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002894:	8b 40 04             	mov    0x4(%eax),%eax
81002897:	83 e0 01             	and    $0x1,%eax
8100289a:	0b 45 dc             	or     -0x24(%ebp),%eax
8100289d:	89 c2                	mov    %eax,%edx
8100289f:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028a2:	89 50 04             	mov    %edx,0x4(%eax)
810028a5:	8b 55 e0             	mov    -0x20(%ebp),%edx
810028a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028ab:	01 d0                	add    %edx,%eax
810028ad:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810028b4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028b7:	8d 50 04             	lea    0x4(%eax),%edx
810028ba:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028bd:	01 d0                	add    %edx,%eax
810028bf:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810028c6:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810028ca:	76 15                	jbe    810028e1 <malloc_extend_top+0x25a>
810028cc:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028cf:	83 c0 08             	add    $0x8,%eax
810028d2:	83 ec 08             	sub    $0x8,%esp
810028d5:	50                   	push   %eax
810028d6:	ff 75 08             	push   0x8(%ebp)
810028d9:	e8 c5 e8 ff ff       	call   810011a3 <_free_r>
810028de:	83 c4 10             	add    $0x10,%esp
810028e1:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
810028e6:	89 c2                	mov    %eax,%edx
810028e8:	a1 c4 7f 00 81       	mov    0x81007fc4,%eax
810028ed:	39 c2                	cmp    %eax,%edx
810028ef:	76 0a                	jbe    810028fb <malloc_extend_top+0x274>
810028f1:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
810028f6:	a3 c4 7f 00 81       	mov    %eax,0x81007fc4
810028fb:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
81002900:	89 c2                	mov    %eax,%edx
81002902:	a1 c8 7f 00 81       	mov    0x81007fc8,%eax
81002907:	39 c2                	cmp    %eax,%edx
81002909:	76 0d                	jbe    81002918 <malloc_extend_top+0x291>
8100290b:	a1 e0 7f 00 81       	mov    0x81007fe0,%eax
81002910:	a3 c8 7f 00 81       	mov    %eax,0x81007fc8
81002915:	eb 01                	jmp    81002918 <malloc_extend_top+0x291>
81002917:	90                   	nop
81002918:	c9                   	leave  
81002919:	c3                   	ret    

8100291a <_malloc_r>:
8100291a:	55                   	push   %ebp
8100291b:	89 e5                	mov    %esp,%ebp
8100291d:	53                   	push   %ebx
8100291e:	83 ec 44             	sub    $0x44,%esp
81002921:	8b 45 0c             	mov    0xc(%ebp),%eax
81002924:	83 c0 0b             	add    $0xb,%eax
81002927:	83 f8 16             	cmp    $0x16,%eax
8100292a:	76 0b                	jbe    81002937 <_malloc_r+0x1d>
8100292c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100292f:	83 c0 0b             	add    $0xb,%eax
81002932:	83 e0 f8             	and    $0xfffffff8,%eax
81002935:	eb 05                	jmp    8100293c <_malloc_r+0x22>
81002937:	b8 10 00 00 00       	mov    $0x10,%eax
8100293c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100293f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002942:	85 c0                	test   %eax,%eax
81002944:	78 08                	js     8100294e <_malloc_r+0x34>
81002946:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002949:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100294c:	73 13                	jae    81002961 <_malloc_r+0x47>
8100294e:	8b 45 08             	mov    0x8(%ebp),%eax
81002951:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002957:	b8 00 00 00 00       	mov    $0x0,%eax
8100295c:	e9 d6 07 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002961:	83 ec 0c             	sub    $0xc,%esp
81002964:	ff 75 08             	push   0x8(%ebp)
81002967:	e8 8c 09 00 00       	call   810032f8 <__malloc_lock>
8100296c:	83 c4 10             	add    $0x10,%esp
8100296f:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002976:	0f 87 b0 00 00 00    	ja     81002a2c <_malloc_r+0x112>
8100297c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100297f:	c1 e8 03             	shr    $0x3,%eax
81002982:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002985:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002988:	83 c0 01             	add    $0x1,%eax
8100298b:	01 c0                	add    %eax,%eax
8100298d:	c1 e0 02             	shl    $0x2,%eax
81002990:	05 e0 73 00 81       	add    $0x810073e0,%eax
81002995:	83 e8 08             	sub    $0x8,%eax
81002998:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100299b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100299e:	8b 40 0c             	mov    0xc(%eax),%eax
810029a1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029a7:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810029aa:	75 0d                	jne    810029b9 <_malloc_r+0x9f>
810029ac:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810029b0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810029b3:	8b 40 0c             	mov    0xc(%eax),%eax
810029b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029bc:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810029bf:	74 62                	je     81002a23 <_malloc_r+0x109>
810029c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029c4:	8b 40 04             	mov    0x4(%eax),%eax
810029c7:	83 e0 fc             	and    $0xfffffffc,%eax
810029ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
810029cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029d0:	8b 40 0c             	mov    0xc(%eax),%eax
810029d3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810029d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029d9:	8b 40 08             	mov    0x8(%eax),%eax
810029dc:	89 45 dc             	mov    %eax,-0x24(%ebp)
810029df:	8b 45 dc             	mov    -0x24(%ebp),%eax
810029e2:	8b 55 d8             	mov    -0x28(%ebp),%edx
810029e5:	89 50 0c             	mov    %edx,0xc(%eax)
810029e8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810029eb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810029ee:	89 50 08             	mov    %edx,0x8(%eax)
810029f1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810029f4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029f7:	01 d0                	add    %edx,%eax
810029f9:	8b 50 04             	mov    0x4(%eax),%edx
810029fc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810029ff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002a02:	01 c8                	add    %ecx,%eax
81002a04:	83 ca 01             	or     $0x1,%edx
81002a07:	89 50 04             	mov    %edx,0x4(%eax)
81002a0a:	83 ec 0c             	sub    $0xc,%esp
81002a0d:	ff 75 08             	push   0x8(%ebp)
81002a10:	e8 e9 08 00 00       	call   810032fe <__malloc_unlock>
81002a15:	83 c4 10             	add    $0x10,%esp
81002a18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a1b:	83 c0 08             	add    $0x8,%eax
81002a1e:	e9 14 07 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002a23:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002a27:	e9 46 01 00 00       	jmp    81002b72 <_malloc_r+0x258>
81002a2c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a2f:	c1 e8 09             	shr    $0x9,%eax
81002a32:	85 c0                	test   %eax,%eax
81002a34:	75 08                	jne    81002a3e <_malloc_r+0x124>
81002a36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a39:	c1 e8 03             	shr    $0x3,%eax
81002a3c:	eb 77                	jmp    81002ab5 <_malloc_r+0x19b>
81002a3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a41:	c1 e8 09             	shr    $0x9,%eax
81002a44:	83 f8 04             	cmp    $0x4,%eax
81002a47:	77 0b                	ja     81002a54 <_malloc_r+0x13a>
81002a49:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a4c:	c1 e8 06             	shr    $0x6,%eax
81002a4f:	83 c0 38             	add    $0x38,%eax
81002a52:	eb 61                	jmp    81002ab5 <_malloc_r+0x19b>
81002a54:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a57:	c1 e8 09             	shr    $0x9,%eax
81002a5a:	83 f8 14             	cmp    $0x14,%eax
81002a5d:	77 0b                	ja     81002a6a <_malloc_r+0x150>
81002a5f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a62:	c1 e8 09             	shr    $0x9,%eax
81002a65:	83 c0 5b             	add    $0x5b,%eax
81002a68:	eb 4b                	jmp    81002ab5 <_malloc_r+0x19b>
81002a6a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a6d:	c1 e8 09             	shr    $0x9,%eax
81002a70:	83 f8 54             	cmp    $0x54,%eax
81002a73:	77 0b                	ja     81002a80 <_malloc_r+0x166>
81002a75:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a78:	c1 e8 0c             	shr    $0xc,%eax
81002a7b:	83 c0 6e             	add    $0x6e,%eax
81002a7e:	eb 35                	jmp    81002ab5 <_malloc_r+0x19b>
81002a80:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a83:	c1 e8 09             	shr    $0x9,%eax
81002a86:	3d 54 01 00 00       	cmp    $0x154,%eax
81002a8b:	77 0b                	ja     81002a98 <_malloc_r+0x17e>
81002a8d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a90:	c1 e8 0f             	shr    $0xf,%eax
81002a93:	83 c0 77             	add    $0x77,%eax
81002a96:	eb 1d                	jmp    81002ab5 <_malloc_r+0x19b>
81002a98:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a9b:	c1 e8 09             	shr    $0x9,%eax
81002a9e:	3d 54 05 00 00       	cmp    $0x554,%eax
81002aa3:	77 0b                	ja     81002ab0 <_malloc_r+0x196>
81002aa5:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002aa8:	c1 e8 12             	shr    $0x12,%eax
81002aab:	83 c0 7c             	add    $0x7c,%eax
81002aae:	eb 05                	jmp    81002ab5 <_malloc_r+0x19b>
81002ab0:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002ab5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ab8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002abb:	83 c0 01             	add    $0x1,%eax
81002abe:	01 c0                	add    %eax,%eax
81002ac0:	c1 e0 02             	shl    $0x2,%eax
81002ac3:	05 e0 73 00 81       	add    $0x810073e0,%eax
81002ac8:	83 e8 08             	sub    $0x8,%eax
81002acb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ace:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ad1:	8b 40 0c             	mov    0xc(%eax),%eax
81002ad4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ad7:	e9 86 00 00 00       	jmp    81002b62 <_malloc_r+0x248>
81002adc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002adf:	8b 40 04             	mov    0x4(%eax),%eax
81002ae2:	83 e0 fc             	and    $0xfffffffc,%eax
81002ae5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ae8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002aeb:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002aee:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002af1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002af5:	7e 06                	jle    81002afd <_malloc_r+0x1e3>
81002af7:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002afb:	eb 71                	jmp    81002b6e <_malloc_r+0x254>
81002afd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002b01:	78 56                	js     81002b59 <_malloc_r+0x23f>
81002b03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b06:	8b 40 0c             	mov    0xc(%eax),%eax
81002b09:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b0f:	8b 40 08             	mov    0x8(%eax),%eax
81002b12:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b15:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b18:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b1b:	89 50 0c             	mov    %edx,0xc(%eax)
81002b1e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b21:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b24:	89 50 08             	mov    %edx,0x8(%eax)
81002b27:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b2a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b2d:	01 d0                	add    %edx,%eax
81002b2f:	8b 50 04             	mov    0x4(%eax),%edx
81002b32:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002b35:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b38:	01 c8                	add    %ecx,%eax
81002b3a:	83 ca 01             	or     $0x1,%edx
81002b3d:	89 50 04             	mov    %edx,0x4(%eax)
81002b40:	83 ec 0c             	sub    $0xc,%esp
81002b43:	ff 75 08             	push   0x8(%ebp)
81002b46:	e8 b3 07 00 00       	call   810032fe <__malloc_unlock>
81002b4b:	83 c4 10             	add    $0x10,%esp
81002b4e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b51:	83 c0 08             	add    $0x8,%eax
81002b54:	e9 de 05 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002b59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b5c:	8b 40 0c             	mov    0xc(%eax),%eax
81002b5f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b62:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b65:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002b68:	0f 85 6e ff ff ff    	jne    81002adc <_malloc_r+0x1c2>
81002b6e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002b72:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
81002b77:	8b 40 08             	mov    0x8(%eax),%eax
81002b7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b7d:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
81002b82:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002b85:	0f 84 9c 02 00 00    	je     81002e27 <_malloc_r+0x50d>
81002b8b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b8e:	8b 40 04             	mov    0x4(%eax),%eax
81002b91:	83 e0 fc             	and    $0xfffffffc,%eax
81002b94:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002b97:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002b9a:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b9d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ba0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ba4:	7e 7a                	jle    81002c20 <_malloc_r+0x306>
81002ba6:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ba9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bac:	01 d0                	add    %edx,%eax
81002bae:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002bb1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bb4:	83 c8 01             	or     $0x1,%eax
81002bb7:	89 c2                	mov    %eax,%edx
81002bb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bbc:	89 50 04             	mov    %edx,0x4(%eax)
81002bbf:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
81002bc4:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002bc7:	89 50 0c             	mov    %edx,0xc(%eax)
81002bca:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002bcf:	8b 40 0c             	mov    0xc(%eax),%eax
81002bd2:	89 42 08             	mov    %eax,0x8(%edx)
81002bd5:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002bda:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bdd:	89 50 0c             	mov    %edx,0xc(%eax)
81002be0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002be3:	8b 50 0c             	mov    0xc(%eax),%edx
81002be6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002be9:	89 50 08             	mov    %edx,0x8(%eax)
81002bec:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002bef:	83 c8 01             	or     $0x1,%eax
81002bf2:	89 c2                	mov    %eax,%edx
81002bf4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002bf7:	89 50 04             	mov    %edx,0x4(%eax)
81002bfa:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002bfd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002c00:	01 c2                	add    %eax,%edx
81002c02:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002c05:	89 02                	mov    %eax,(%edx)
81002c07:	83 ec 0c             	sub    $0xc,%esp
81002c0a:	ff 75 08             	push   0x8(%ebp)
81002c0d:	e8 ec 06 00 00       	call   810032fe <__malloc_unlock>
81002c12:	83 c4 10             	add    $0x10,%esp
81002c15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c18:	83 c0 08             	add    $0x8,%eax
81002c1b:	e9 17 05 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002c20:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
81002c25:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002c2a:	89 50 0c             	mov    %edx,0xc(%eax)
81002c2d:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002c32:	8b 40 0c             	mov    0xc(%eax),%eax
81002c35:	89 42 08             	mov    %eax,0x8(%edx)
81002c38:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002c3c:	78 32                	js     81002c70 <_malloc_r+0x356>
81002c3e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c41:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c44:	01 d0                	add    %edx,%eax
81002c46:	8b 50 04             	mov    0x4(%eax),%edx
81002c49:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002c4c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c4f:	01 c8                	add    %ecx,%eax
81002c51:	83 ca 01             	or     $0x1,%edx
81002c54:	89 50 04             	mov    %edx,0x4(%eax)
81002c57:	83 ec 0c             	sub    $0xc,%esp
81002c5a:	ff 75 08             	push   0x8(%ebp)
81002c5d:	e8 9c 06 00 00       	call   810032fe <__malloc_unlock>
81002c62:	83 c4 10             	add    $0x10,%esp
81002c65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c68:	83 c0 08             	add    $0x8,%eax
81002c6b:	e9 c7 04 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002c70:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002c77:	77 7f                	ja     81002cf8 <_malloc_r+0x3de>
81002c79:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c7c:	c1 e8 03             	shr    $0x3,%eax
81002c7f:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002c82:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002c87:	8b 58 04             	mov    0x4(%eax),%ebx
81002c8a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002c8d:	8d 50 03             	lea    0x3(%eax),%edx
81002c90:	85 c0                	test   %eax,%eax
81002c92:	0f 48 c2             	cmovs  %edx,%eax
81002c95:	c1 f8 02             	sar    $0x2,%eax
81002c98:	ba 01 00 00 00       	mov    $0x1,%edx
81002c9d:	89 c1                	mov    %eax,%ecx
81002c9f:	d3 e2                	shl    %cl,%edx
81002ca1:	89 d0                	mov    %edx,%eax
81002ca3:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81002ca8:	09 d8                	or     %ebx,%eax
81002caa:	89 42 04             	mov    %eax,0x4(%edx)
81002cad:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002cb0:	83 c0 01             	add    $0x1,%eax
81002cb3:	01 c0                	add    %eax,%eax
81002cb5:	c1 e0 02             	shl    $0x2,%eax
81002cb8:	05 e0 73 00 81       	add    $0x810073e0,%eax
81002cbd:	83 e8 08             	sub    $0x8,%eax
81002cc0:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cc3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cc6:	8b 40 08             	mov    0x8(%eax),%eax
81002cc9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ccc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ccf:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cd2:	89 50 0c             	mov    %edx,0xc(%eax)
81002cd5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cd8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002cdb:	89 50 08             	mov    %edx,0x8(%eax)
81002cde:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ce1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ce4:	89 50 08             	mov    %edx,0x8(%eax)
81002ce7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002cea:	8b 50 08             	mov    0x8(%eax),%edx
81002ced:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cf0:	89 50 0c             	mov    %edx,0xc(%eax)
81002cf3:	e9 2f 01 00 00       	jmp    81002e27 <_malloc_r+0x50d>
81002cf8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cfb:	c1 e8 09             	shr    $0x9,%eax
81002cfe:	85 c0                	test   %eax,%eax
81002d00:	75 08                	jne    81002d0a <_malloc_r+0x3f0>
81002d02:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d05:	c1 e8 03             	shr    $0x3,%eax
81002d08:	eb 77                	jmp    81002d81 <_malloc_r+0x467>
81002d0a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d0d:	c1 e8 09             	shr    $0x9,%eax
81002d10:	83 f8 04             	cmp    $0x4,%eax
81002d13:	77 0b                	ja     81002d20 <_malloc_r+0x406>
81002d15:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d18:	c1 e8 06             	shr    $0x6,%eax
81002d1b:	83 c0 38             	add    $0x38,%eax
81002d1e:	eb 61                	jmp    81002d81 <_malloc_r+0x467>
81002d20:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d23:	c1 e8 09             	shr    $0x9,%eax
81002d26:	83 f8 14             	cmp    $0x14,%eax
81002d29:	77 0b                	ja     81002d36 <_malloc_r+0x41c>
81002d2b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d2e:	c1 e8 09             	shr    $0x9,%eax
81002d31:	83 c0 5b             	add    $0x5b,%eax
81002d34:	eb 4b                	jmp    81002d81 <_malloc_r+0x467>
81002d36:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d39:	c1 e8 09             	shr    $0x9,%eax
81002d3c:	83 f8 54             	cmp    $0x54,%eax
81002d3f:	77 0b                	ja     81002d4c <_malloc_r+0x432>
81002d41:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d44:	c1 e8 0c             	shr    $0xc,%eax
81002d47:	83 c0 6e             	add    $0x6e,%eax
81002d4a:	eb 35                	jmp    81002d81 <_malloc_r+0x467>
81002d4c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d4f:	c1 e8 09             	shr    $0x9,%eax
81002d52:	3d 54 01 00 00       	cmp    $0x154,%eax
81002d57:	77 0b                	ja     81002d64 <_malloc_r+0x44a>
81002d59:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d5c:	c1 e8 0f             	shr    $0xf,%eax
81002d5f:	83 c0 77             	add    $0x77,%eax
81002d62:	eb 1d                	jmp    81002d81 <_malloc_r+0x467>
81002d64:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d67:	c1 e8 09             	shr    $0x9,%eax
81002d6a:	3d 54 05 00 00       	cmp    $0x554,%eax
81002d6f:	77 0b                	ja     81002d7c <_malloc_r+0x462>
81002d71:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d74:	c1 e8 12             	shr    $0x12,%eax
81002d77:	83 c0 7c             	add    $0x7c,%eax
81002d7a:	eb 05                	jmp    81002d81 <_malloc_r+0x467>
81002d7c:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002d81:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002d84:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d87:	83 c0 01             	add    $0x1,%eax
81002d8a:	01 c0                	add    %eax,%eax
81002d8c:	c1 e0 02             	shl    $0x2,%eax
81002d8f:	05 e0 73 00 81       	add    $0x810073e0,%eax
81002d94:	83 e8 08             	sub    $0x8,%eax
81002d97:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002d9a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002d9d:	8b 40 08             	mov    0x8(%eax),%eax
81002da0:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002da3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002da6:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002da9:	75 36                	jne    81002de1 <_malloc_r+0x4c7>
81002dab:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002db0:	8b 58 04             	mov    0x4(%eax),%ebx
81002db3:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002db6:	8d 50 03             	lea    0x3(%eax),%edx
81002db9:	85 c0                	test   %eax,%eax
81002dbb:	0f 48 c2             	cmovs  %edx,%eax
81002dbe:	c1 f8 02             	sar    $0x2,%eax
81002dc1:	ba 01 00 00 00       	mov    $0x1,%edx
81002dc6:	89 c1                	mov    %eax,%ecx
81002dc8:	d3 e2                	shl    %cl,%edx
81002dca:	89 d0                	mov    %edx,%eax
81002dcc:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81002dd1:	09 d8                	or     %ebx,%eax
81002dd3:	89 42 04             	mov    %eax,0x4(%edx)
81002dd6:	eb 28                	jmp    81002e00 <_malloc_r+0x4e6>
81002dd8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ddb:	8b 40 08             	mov    0x8(%eax),%eax
81002dde:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002de1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002de4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002de7:	74 0e                	je     81002df7 <_malloc_r+0x4dd>
81002de9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002dec:	8b 40 04             	mov    0x4(%eax),%eax
81002def:	83 e0 fc             	and    $0xfffffffc,%eax
81002df2:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002df5:	72 e1                	jb     81002dd8 <_malloc_r+0x4be>
81002df7:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002dfa:	8b 40 0c             	mov    0xc(%eax),%eax
81002dfd:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e03:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e06:	89 50 0c             	mov    %edx,0xc(%eax)
81002e09:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e0c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e0f:	89 50 08             	mov    %edx,0x8(%eax)
81002e12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e15:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e18:	89 50 08             	mov    %edx,0x8(%eax)
81002e1b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e1e:	8b 50 08             	mov    0x8(%eax),%edx
81002e21:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e24:	89 50 0c             	mov    %edx,0xc(%eax)
81002e27:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e2a:	8d 50 03             	lea    0x3(%eax),%edx
81002e2d:	85 c0                	test   %eax,%eax
81002e2f:	0f 48 c2             	cmovs  %edx,%eax
81002e32:	c1 f8 02             	sar    $0x2,%eax
81002e35:	ba 01 00 00 00       	mov    $0x1,%edx
81002e3a:	89 c1                	mov    %eax,%ecx
81002e3c:	d3 e2                	shl    %cl,%edx
81002e3e:	89 d0                	mov    %edx,%eax
81002e40:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002e43:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002e48:	8b 40 04             	mov    0x4(%eax),%eax
81002e4b:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002e4e:	0f 87 13 02 00 00    	ja     81003067 <_malloc_r+0x74d>
81002e54:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002e59:	8b 40 04             	mov    0x4(%eax),%eax
81002e5c:	23 45 e4             	and    -0x1c(%ebp),%eax
81002e5f:	85 c0                	test   %eax,%eax
81002e61:	75 27                	jne    81002e8a <_malloc_r+0x570>
81002e63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e66:	83 e0 fc             	and    $0xfffffffc,%eax
81002e69:	83 c0 04             	add    $0x4,%eax
81002e6c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e6f:	d1 65 e4             	shll   -0x1c(%ebp)
81002e72:	eb 07                	jmp    81002e7b <_malloc_r+0x561>
81002e74:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81002e78:	d1 65 e4             	shll   -0x1c(%ebp)
81002e7b:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81002e80:	8b 40 04             	mov    0x4(%eax),%eax
81002e83:	23 45 e4             	and    -0x1c(%ebp),%eax
81002e86:	85 c0                	test   %eax,%eax
81002e88:	74 ea                	je     81002e74 <_malloc_r+0x55a>
81002e8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e8d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e93:	83 c0 01             	add    $0x1,%eax
81002e96:	01 c0                	add    %eax,%eax
81002e98:	c1 e0 02             	shl    $0x2,%eax
81002e9b:	05 e0 73 00 81       	add    $0x810073e0,%eax
81002ea0:	83 e8 08             	sub    $0x8,%eax
81002ea3:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002ea6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ea9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002eac:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002eaf:	8b 40 0c             	mov    0xc(%eax),%eax
81002eb2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002eb5:	e9 22 01 00 00       	jmp    81002fdc <_malloc_r+0x6c2>
81002eba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ebd:	8b 40 04             	mov    0x4(%eax),%eax
81002ec0:	83 e0 fc             	and    $0xfffffffc,%eax
81002ec3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ec6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ec9:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002ecc:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002ecf:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ed3:	0f 8e 9e 00 00 00    	jle    81002f77 <_malloc_r+0x65d>
81002ed9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002edc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002edf:	01 d0                	add    %edx,%eax
81002ee1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002ee4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002ee7:	83 c8 01             	or     $0x1,%eax
81002eea:	89 c2                	mov    %eax,%edx
81002eec:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eef:	89 50 04             	mov    %edx,0x4(%eax)
81002ef2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ef5:	8b 40 0c             	mov    0xc(%eax),%eax
81002ef8:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002efb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002efe:	8b 40 08             	mov    0x8(%eax),%eax
81002f01:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f04:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f07:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002f0a:	89 50 0c             	mov    %edx,0xc(%eax)
81002f0d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f10:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f13:	89 50 08             	mov    %edx,0x8(%eax)
81002f16:	b8 e8 73 00 81       	mov    $0x810073e8,%eax
81002f1b:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002f1e:	89 50 0c             	mov    %edx,0xc(%eax)
81002f21:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002f26:	8b 40 0c             	mov    0xc(%eax),%eax
81002f29:	89 42 08             	mov    %eax,0x8(%edx)
81002f2c:	ba e8 73 00 81       	mov    $0x810073e8,%edx
81002f31:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f34:	89 50 0c             	mov    %edx,0xc(%eax)
81002f37:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f3a:	8b 50 0c             	mov    0xc(%eax),%edx
81002f3d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f40:	89 50 08             	mov    %edx,0x8(%eax)
81002f43:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f46:	83 c8 01             	or     $0x1,%eax
81002f49:	89 c2                	mov    %eax,%edx
81002f4b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f4e:	89 50 04             	mov    %edx,0x4(%eax)
81002f51:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f54:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002f57:	01 c2                	add    %eax,%edx
81002f59:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f5c:	89 02                	mov    %eax,(%edx)
81002f5e:	83 ec 0c             	sub    $0xc,%esp
81002f61:	ff 75 08             	push   0x8(%ebp)
81002f64:	e8 95 03 00 00       	call   810032fe <__malloc_unlock>
81002f69:	83 c4 10             	add    $0x10,%esp
81002f6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f6f:	83 c0 08             	add    $0x8,%eax
81002f72:	e9 c0 01 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002f77:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002f7b:	78 56                	js     81002fd3 <_malloc_r+0x6b9>
81002f7d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f80:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f83:	01 d0                	add    %edx,%eax
81002f85:	8b 50 04             	mov    0x4(%eax),%edx
81002f88:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002f8b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f8e:	01 c8                	add    %ecx,%eax
81002f90:	83 ca 01             	or     $0x1,%edx
81002f93:	89 50 04             	mov    %edx,0x4(%eax)
81002f96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f99:	8b 40 0c             	mov    0xc(%eax),%eax
81002f9c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fa2:	8b 40 08             	mov    0x8(%eax),%eax
81002fa5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002fa8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fab:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002fae:	89 50 0c             	mov    %edx,0xc(%eax)
81002fb1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fb4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002fb7:	89 50 08             	mov    %edx,0x8(%eax)
81002fba:	83 ec 0c             	sub    $0xc,%esp
81002fbd:	ff 75 08             	push   0x8(%ebp)
81002fc0:	e8 39 03 00 00       	call   810032fe <__malloc_unlock>
81002fc5:	83 c4 10             	add    $0x10,%esp
81002fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fcb:	83 c0 08             	add    $0x8,%eax
81002fce:	e9 64 01 00 00       	jmp    81003137 <_malloc_r+0x81d>
81002fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fd6:	8b 40 0c             	mov    0xc(%eax),%eax
81002fd9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002fdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fdf:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002fe2:	0f 85 d2 fe ff ff    	jne    81002eba <_malloc_r+0x5a0>
81002fe8:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81002fec:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002ff0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ff3:	83 e0 03             	and    $0x3,%eax
81002ff6:	85 c0                	test   %eax,%eax
81002ff8:	0f 85 ae fe ff ff    	jne    81002eac <_malloc_r+0x592>
81002ffe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003001:	83 e0 03             	and    $0x3,%eax
81003004:	85 c0                	test   %eax,%eax
81003006:	75 19                	jne    81003021 <_malloc_r+0x707>
81003008:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100300d:	8b 48 04             	mov    0x4(%eax),%ecx
81003010:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003013:	f7 d0                	not    %eax
81003015:	ba e0 73 00 81       	mov    $0x810073e0,%edx
8100301a:	21 c8                	and    %ecx,%eax
8100301c:	89 42 04             	mov    %eax,0x4(%edx)
8100301f:	eb 13                	jmp    81003034 <_malloc_r+0x71a>
81003021:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003025:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003029:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100302c:	8b 40 08             	mov    0x8(%eax),%eax
8100302f:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003032:	74 ca                	je     81002ffe <_malloc_r+0x6e4>
81003034:	d1 65 e4             	shll   -0x1c(%ebp)
81003037:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100303c:	8b 40 04             	mov    0x4(%eax),%eax
8100303f:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003042:	77 23                	ja     81003067 <_malloc_r+0x74d>
81003044:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003048:	74 1d                	je     81003067 <_malloc_r+0x74d>
8100304a:	eb 07                	jmp    81003053 <_malloc_r+0x739>
8100304c:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003050:	d1 65 e4             	shll   -0x1c(%ebp)
81003053:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81003058:	8b 40 04             	mov    0x4(%eax),%eax
8100305b:	23 45 e4             	and    -0x1c(%ebp),%eax
8100305e:	85 c0                	test   %eax,%eax
81003060:	74 ea                	je     8100304c <_malloc_r+0x732>
81003062:	e9 23 fe ff ff       	jmp    81002e8a <_malloc_r+0x570>
81003067:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100306c:	8b 40 08             	mov    0x8(%eax),%eax
8100306f:	8b 40 04             	mov    0x4(%eax),%eax
81003072:	83 e0 fc             	and    $0xfffffffc,%eax
81003075:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003078:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100307b:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81003080:	8b 40 08             	mov    0x8(%eax),%eax
81003083:	8b 40 04             	mov    0x4(%eax),%eax
81003086:	83 e0 fc             	and    $0xfffffffc,%eax
81003089:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100308c:	77 06                	ja     81003094 <_malloc_r+0x77a>
8100308e:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003092:	7f 53                	jg     810030e7 <_malloc_r+0x7cd>
81003094:	83 ec 08             	sub    $0x8,%esp
81003097:	ff 75 d0             	push   -0x30(%ebp)
8100309a:	ff 75 08             	push   0x8(%ebp)
8100309d:	e8 e5 f5 ff ff       	call   81002687 <malloc_extend_top>
810030a2:	83 c4 10             	add    $0x10,%esp
810030a5:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810030aa:	8b 40 08             	mov    0x8(%eax),%eax
810030ad:	8b 40 04             	mov    0x4(%eax),%eax
810030b0:	83 e0 fc             	and    $0xfffffffc,%eax
810030b3:	2b 45 d0             	sub    -0x30(%ebp),%eax
810030b6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810030b9:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810030be:	8b 40 08             	mov    0x8(%eax),%eax
810030c1:	8b 40 04             	mov    0x4(%eax),%eax
810030c4:	83 e0 fc             	and    $0xfffffffc,%eax
810030c7:	39 45 d0             	cmp    %eax,-0x30(%ebp)
810030ca:	77 06                	ja     810030d2 <_malloc_r+0x7b8>
810030cc:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810030d0:	7f 15                	jg     810030e7 <_malloc_r+0x7cd>
810030d2:	83 ec 0c             	sub    $0xc,%esp
810030d5:	ff 75 08             	push   0x8(%ebp)
810030d8:	e8 21 02 00 00       	call   810032fe <__malloc_unlock>
810030dd:	83 c4 10             	add    $0x10,%esp
810030e0:	b8 00 00 00 00       	mov    $0x0,%eax
810030e5:	eb 50                	jmp    81003137 <_malloc_r+0x81d>
810030e7:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
810030ec:	8b 40 08             	mov    0x8(%eax),%eax
810030ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030f2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810030f5:	83 c8 01             	or     $0x1,%eax
810030f8:	89 c2                	mov    %eax,%edx
810030fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030fd:	89 50 04             	mov    %edx,0x4(%eax)
81003100:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81003105:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003108:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100310b:	01 c8                	add    %ecx,%eax
8100310d:	89 42 08             	mov    %eax,0x8(%edx)
81003110:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003113:	83 c8 01             	or     $0x1,%eax
81003116:	89 c2                	mov    %eax,%edx
81003118:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
8100311d:	8b 40 08             	mov    0x8(%eax),%eax
81003120:	89 50 04             	mov    %edx,0x4(%eax)
81003123:	83 ec 0c             	sub    $0xc,%esp
81003126:	ff 75 08             	push   0x8(%ebp)
81003129:	e8 d0 01 00 00       	call   810032fe <__malloc_unlock>
8100312e:	83 c4 10             	add    $0x10,%esp
81003131:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003134:	83 c0 08             	add    $0x8,%eax
81003137:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100313a:	c9                   	leave  
8100313b:	c3                   	ret    
8100313c:	66 90                	xchg   %ax,%ax
8100313e:	66 90                	xchg   %ax,%ax

81003140 <memchr>:
81003140:	55                   	push   %ebp
81003141:	89 e5                	mov    %esp,%ebp
81003143:	57                   	push   %edi
81003144:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003148:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100314b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100314e:	31 d2                	xor    %edx,%edx
81003150:	85 c9                	test   %ecx,%ecx
81003152:	74 79                	je     810031cd <L20>
81003154:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100315a:	74 28                	je     81003184 <L5>
8100315c:	3a 07                	cmp    (%edi),%al
8100315e:	74 6a                	je     810031ca <L15>
81003160:	47                   	inc    %edi
81003161:	49                   	dec    %ecx
81003162:	74 69                	je     810031cd <L20>
81003164:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100316a:	74 18                	je     81003184 <L5>
8100316c:	3a 07                	cmp    (%edi),%al
8100316e:	74 5a                	je     810031ca <L15>
81003170:	47                   	inc    %edi
81003171:	49                   	dec    %ecx
81003172:	74 59                	je     810031cd <L20>
81003174:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100317a:	74 08                	je     81003184 <L5>
8100317c:	3a 07                	cmp    (%edi),%al
8100317e:	74 4a                	je     810031ca <L15>
81003180:	47                   	inc    %edi
81003181:	49                   	dec    %ecx
81003182:	74 49                	je     810031cd <L20>

81003184 <L5>:
81003184:	88 c4                	mov    %al,%ah
81003186:	89 c2                	mov    %eax,%edx
81003188:	c1 e2 10             	shl    $0x10,%edx
8100318b:	09 d0                	or     %edx,%eax
8100318d:	53                   	push   %ebx
8100318e:	66 90                	xchg   %ax,%ax

81003190 <L8>:
81003190:	83 e9 04             	sub    $0x4,%ecx
81003193:	72 1c                	jb     810031b1 <L9>
81003195:	8b 17                	mov    (%edi),%edx
81003197:	83 c7 04             	add    $0x4,%edi
8100319a:	31 c2                	xor    %eax,%edx
8100319c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
810031a2:	f7 d2                	not    %edx
810031a4:	21 d3                	and    %edx,%ebx
810031a6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
810031ac:	74 e2                	je     81003190 <L8>
810031ae:	83 ef 04             	sub    $0x4,%edi

810031b1 <L9>:
810031b1:	5b                   	pop    %ebx
810031b2:	31 d2                	xor    %edx,%edx
810031b4:	83 c1 04             	add    $0x4,%ecx
810031b7:	74 14                	je     810031cd <L20>
810031b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810031c0 <L10>:
810031c0:	3a 07                	cmp    (%edi),%al
810031c2:	74 06                	je     810031ca <L15>
810031c4:	47                   	inc    %edi
810031c5:	49                   	dec    %ecx
810031c6:	75 f8                	jne    810031c0 <L10>
810031c8:	31 ff                	xor    %edi,%edi

810031ca <L15>:
810031ca:	4a                   	dec    %edx
810031cb:	21 fa                	and    %edi,%edx

810031cd <L20>:
810031cd:	89 d0                	mov    %edx,%eax
810031cf:	8d 65 fc             	lea    -0x4(%ebp),%esp
810031d2:	5f                   	pop    %edi
810031d3:	c9                   	leave  
810031d4:	c3                   	ret    

810031d5 <memcmp>:
810031d5:	55                   	push   %ebp
810031d6:	89 e5                	mov    %esp,%ebp
810031d8:	83 ec 10             	sub    $0x10,%esp
810031db:	53                   	push   %ebx
810031dc:	57                   	push   %edi
810031dd:	56                   	push   %esi
810031de:	8b 7d 08             	mov    0x8(%ebp),%edi
810031e1:	8b 75 0c             	mov    0xc(%ebp),%esi
810031e4:	8b 4d 10             	mov    0x10(%ebp),%ecx
810031e7:	fc                   	cld    
810031e8:	31 c0                	xor    %eax,%eax
810031ea:	85 c9                	test   %ecx,%ecx
810031ec:	74 31                	je     8100321f <L4>
810031ee:	89 f8                	mov    %edi,%eax
810031f0:	09 f0                	or     %esi,%eax
810031f2:	a8 03                	test   $0x3,%al
810031f4:	75 1b                	jne    81003211 <BYTECMP>
810031f6:	89 cb                	mov    %ecx,%ebx
810031f8:	c1 e9 02             	shr    $0x2,%ecx
810031fb:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810031fd:	74 0d                	je     8100320c <L5>
810031ff:	83 ee 04             	sub    $0x4,%esi
81003202:	83 ef 04             	sub    $0x4,%edi
81003205:	b9 04 00 00 00       	mov    $0x4,%ecx
8100320a:	eb 05                	jmp    81003211 <BYTECMP>

8100320c <L5>:
8100320c:	83 e3 03             	and    $0x3,%ebx
8100320f:	89 d9                	mov    %ebx,%ecx

81003211 <BYTECMP>:
81003211:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003213 <L3>:
81003213:	31 d2                	xor    %edx,%edx
81003215:	8a 56 ff             	mov    -0x1(%esi),%dl
81003218:	31 c0                	xor    %eax,%eax
8100321a:	8a 47 ff             	mov    -0x1(%edi),%al
8100321d:	29 d0                	sub    %edx,%eax

8100321f <L4>:
8100321f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003222:	5e                   	pop    %esi
81003223:	5f                   	pop    %edi
81003224:	5b                   	pop    %ebx
81003225:	c9                   	leave  
81003226:	c3                   	ret    
81003227:	90                   	nop

81003228 <memcpy>:
81003228:	55                   	push   %ebp
81003229:	89 e5                	mov    %esp,%ebp
8100322b:	56                   	push   %esi
8100322c:	57                   	push   %edi
8100322d:	53                   	push   %ebx
8100322e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003231:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003234:	8b 75 0c             	mov    0xc(%ebp),%esi
81003237:	fc                   	cld    
81003238:	83 f9 08             	cmp    $0x8,%ecx
8100323b:	76 26                	jbe    81003263 <memcpy+0x3b>
8100323d:	89 fa                	mov    %edi,%edx
8100323f:	89 cb                	mov    %ecx,%ebx
81003241:	83 e2 03             	and    $0x3,%edx
81003244:	74 10                	je     81003256 <memcpy+0x2e>
81003246:	b9 04 00 00 00       	mov    $0x4,%ecx
8100324b:	29 d1                	sub    %edx,%ecx
8100324d:	83 e1 03             	and    $0x3,%ecx
81003250:	29 cb                	sub    %ecx,%ebx
81003252:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003254:	89 d9                	mov    %ebx,%ecx
81003256:	c1 e9 02             	shr    $0x2,%ecx
81003259:	8d 76 00             	lea    0x0(%esi),%esi
8100325c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100325e:	89 d9                	mov    %ebx,%ecx
81003260:	83 e1 03             	and    $0x3,%ecx
81003263:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003265:	8b 45 08             	mov    0x8(%ebp),%eax
81003268:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100326b:	5b                   	pop    %ebx
8100326c:	5f                   	pop    %edi
8100326d:	5e                   	pop    %esi
8100326e:	c9                   	leave  
8100326f:	c3                   	ret    

81003270 <memset>:
81003270:	55                   	push   %ebp
81003271:	89 e5                	mov    %esp,%ebp
81003273:	57                   	push   %edi
81003274:	8b 7d 08             	mov    0x8(%ebp),%edi
81003277:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100327b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100327e:	fc                   	cld    
8100327f:	83 f9 10             	cmp    $0x10,%ecx
81003282:	76 69                	jbe    810032ed <memset+0x7d>
81003284:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100328a:	74 4c                	je     810032d8 <memset+0x68>
8100328c:	88 07                	mov    %al,(%edi)
8100328e:	47                   	inc    %edi
8100328f:	49                   	dec    %ecx
81003290:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003296:	74 40                	je     810032d8 <memset+0x68>
81003298:	88 07                	mov    %al,(%edi)
8100329a:	47                   	inc    %edi
8100329b:	49                   	dec    %ecx
8100329c:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032a2:	74 34                	je     810032d8 <memset+0x68>
810032a4:	88 07                	mov    %al,(%edi)
810032a6:	47                   	inc    %edi
810032a7:	49                   	dec    %ecx
810032a8:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032ae:	74 28                	je     810032d8 <memset+0x68>
810032b0:	88 07                	mov    %al,(%edi)
810032b2:	47                   	inc    %edi
810032b3:	49                   	dec    %ecx
810032b4:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032ba:	74 1c                	je     810032d8 <memset+0x68>
810032bc:	88 07                	mov    %al,(%edi)
810032be:	47                   	inc    %edi
810032bf:	49                   	dec    %ecx
810032c0:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032c6:	74 10                	je     810032d8 <memset+0x68>
810032c8:	88 07                	mov    %al,(%edi)
810032ca:	47                   	inc    %edi
810032cb:	49                   	dec    %ecx
810032cc:	f7 c7 07 00 00 00    	test   $0x7,%edi
810032d2:	74 04                	je     810032d8 <memset+0x68>
810032d4:	88 07                	mov    %al,(%edi)
810032d6:	47                   	inc    %edi
810032d7:	49                   	dec    %ecx
810032d8:	88 c4                	mov    %al,%ah
810032da:	89 c2                	mov    %eax,%edx
810032dc:	c1 e2 10             	shl    $0x10,%edx
810032df:	09 d0                	or     %edx,%eax
810032e1:	89 ca                	mov    %ecx,%edx
810032e3:	c1 e9 02             	shr    $0x2,%ecx
810032e6:	83 e2 03             	and    $0x3,%edx
810032e9:	f3 ab                	rep stos %eax,%es:(%edi)
810032eb:	89 d1                	mov    %edx,%ecx
810032ed:	f3 aa                	rep stos %al,%es:(%edi)
810032ef:	8b 45 08             	mov    0x8(%ebp),%eax
810032f2:	8d 65 fc             	lea    -0x4(%ebp),%esp
810032f5:	5f                   	pop    %edi
810032f6:	c9                   	leave  
810032f7:	c3                   	ret    

810032f8 <__malloc_lock>:
810032f8:	55                   	push   %ebp
810032f9:	89 e5                	mov    %esp,%ebp
810032fb:	90                   	nop
810032fc:	5d                   	pop    %ebp
810032fd:	c3                   	ret    

810032fe <__malloc_unlock>:
810032fe:	55                   	push   %ebp
810032ff:	89 e5                	mov    %esp,%ebp
81003301:	90                   	nop
81003302:	5d                   	pop    %ebp
81003303:	c3                   	ret    

81003304 <__sprint_r>:
81003304:	55                   	push   %ebp
81003305:	89 e5                	mov    %esp,%ebp
81003307:	56                   	push   %esi
81003308:	53                   	push   %ebx
81003309:	83 ec 10             	sub    $0x10,%esp
8100330c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100330f:	be 00 00 00 00       	mov    $0x0,%esi
81003314:	8b 43 08             	mov    0x8(%ebx),%eax
81003317:	85 c0                	test   %eax,%eax
81003319:	75 11                	jne    8100332c <__sprint_r+0x28>
8100331b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003322:	b8 00 00 00 00       	mov    $0x0,%eax
81003327:	e9 ad 00 00 00       	jmp    810033d9 <__sprint_r+0xd5>
8100332c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100332f:	8b 40 64             	mov    0x64(%eax),%eax
81003332:	25 00 20 00 00       	and    $0x2000,%eax
81003337:	85 c0                	test   %eax,%eax
81003339:	74 7a                	je     810033b5 <__sprint_r+0xb1>
8100333b:	8b 03                	mov    (%ebx),%eax
8100333d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003340:	eb 6a                	jmp    810033ac <__sprint_r+0xa8>
81003342:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003345:	8b 00                	mov    (%eax),%eax
81003347:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100334a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100334d:	8b 40 04             	mov    0x4(%eax),%eax
81003350:	c1 e8 02             	shr    $0x2,%eax
81003353:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003356:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100335d:	eb 33                	jmp    81003392 <__sprint_r+0x8e>
8100335f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003362:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003369:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100336c:	01 d0                	add    %edx,%eax
8100336e:	8b 00                	mov    (%eax),%eax
81003370:	83 ec 04             	sub    $0x4,%esp
81003373:	ff 75 0c             	push   0xc(%ebp)
81003376:	50                   	push   %eax
81003377:	ff 75 08             	push   0x8(%ebp)
8100337a:	e8 06 1d 00 00       	call   81005085 <_fputwc_r>
8100337f:	83 c4 10             	add    $0x10,%esp
81003382:	83 f8 ff             	cmp    $0xffffffff,%eax
81003385:	75 07                	jne    8100338e <__sprint_r+0x8a>
81003387:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100338c:	eb 3b                	jmp    810033c9 <__sprint_r+0xc5>
8100338e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003392:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003395:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003398:	7c c5                	jl     8100335f <__sprint_r+0x5b>
8100339a:	8b 43 08             	mov    0x8(%ebx),%eax
8100339d:	8b 55 e8             	mov    -0x18(%ebp),%edx
810033a0:	c1 e2 02             	shl    $0x2,%edx
810033a3:	29 d0                	sub    %edx,%eax
810033a5:	89 43 08             	mov    %eax,0x8(%ebx)
810033a8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810033ac:	8b 43 08             	mov    0x8(%ebx),%eax
810033af:	85 c0                	test   %eax,%eax
810033b1:	75 8f                	jne    81003342 <__sprint_r+0x3e>
810033b3:	eb 14                	jmp    810033c9 <__sprint_r+0xc5>
810033b5:	83 ec 04             	sub    $0x4,%esp
810033b8:	53                   	push   %ebx
810033b9:	ff 75 0c             	push   0xc(%ebp)
810033bc:	ff 75 08             	push   0x8(%ebp)
810033bf:	e8 60 1d 00 00       	call   81005124 <__sfvwrite_r>
810033c4:	83 c4 10             	add    $0x10,%esp
810033c7:	89 c6                	mov    %eax,%esi
810033c9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810033d0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033d7:	89 f0                	mov    %esi,%eax
810033d9:	8d 65 f8             	lea    -0x8(%ebp),%esp
810033dc:	5b                   	pop    %ebx
810033dd:	5e                   	pop    %esi
810033de:	5d                   	pop    %ebp
810033df:	c3                   	ret    

810033e0 <__sfputc_r>:
810033e0:	55                   	push   %ebp
810033e1:	89 e5                	mov    %esp,%ebp
810033e3:	83 ec 08             	sub    $0x8,%esp
810033e6:	8b 45 10             	mov    0x10(%ebp),%eax
810033e9:	8b 40 08             	mov    0x8(%eax),%eax
810033ec:	8d 50 ff             	lea    -0x1(%eax),%edx
810033ef:	8b 45 10             	mov    0x10(%ebp),%eax
810033f2:	89 50 08             	mov    %edx,0x8(%eax)
810033f5:	8b 45 10             	mov    0x10(%ebp),%eax
810033f8:	8b 40 08             	mov    0x8(%eax),%eax
810033fb:	85 c0                	test   %eax,%eax
810033fd:	79 17                	jns    81003416 <__sfputc_r+0x36>
810033ff:	8b 45 10             	mov    0x10(%ebp),%eax
81003402:	8b 50 08             	mov    0x8(%eax),%edx
81003405:	8b 45 10             	mov    0x10(%ebp),%eax
81003408:	8b 40 18             	mov    0x18(%eax),%eax
8100340b:	39 c2                	cmp    %eax,%edx
8100340d:	7c 21                	jl     81003430 <__sfputc_r+0x50>
8100340f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003412:	3c 0a                	cmp    $0xa,%al
81003414:	74 1a                	je     81003430 <__sfputc_r+0x50>
81003416:	8b 45 10             	mov    0x10(%ebp),%eax
81003419:	8b 00                	mov    (%eax),%eax
8100341b:	8d 48 01             	lea    0x1(%eax),%ecx
8100341e:	8b 55 10             	mov    0x10(%ebp),%edx
81003421:	89 0a                	mov    %ecx,(%edx)
81003423:	8b 55 0c             	mov    0xc(%ebp),%edx
81003426:	88 10                	mov    %dl,(%eax)
81003428:	0f b6 00             	movzbl (%eax),%eax
8100342b:	0f b6 c0             	movzbl %al,%eax
8100342e:	eb 14                	jmp    81003444 <__sfputc_r+0x64>
81003430:	83 ec 04             	sub    $0x4,%esp
81003433:	ff 75 10             	push   0x10(%ebp)
81003436:	ff 75 0c             	push   0xc(%ebp)
81003439:	ff 75 08             	push   0x8(%ebp)
8100343c:	e8 7e 14 00 00       	call   810048bf <__swbuf_r>
81003441:	83 c4 10             	add    $0x10,%esp
81003444:	c9                   	leave  
81003445:	c3                   	ret    

81003446 <__sfputs_r>:
81003446:	55                   	push   %ebp
81003447:	89 e5                	mov    %esp,%ebp
81003449:	53                   	push   %ebx
8100344a:	83 ec 14             	sub    $0x14,%esp
8100344d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003450:	8b 40 64             	mov    0x64(%eax),%eax
81003453:	25 00 20 00 00       	and    $0x2000,%eax
81003458:	85 c0                	test   %eax,%eax
8100345a:	74 4c                	je     810034a8 <__sfputs_r+0x62>
8100345c:	8b 45 10             	mov    0x10(%ebp),%eax
8100345f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003462:	bb 00 00 00 00       	mov    $0x0,%ebx
81003467:	eb 31                	jmp    8100349a <__sfputs_r+0x54>
81003469:	89 d8                	mov    %ebx,%eax
8100346b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003472:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003475:	01 d0                	add    %edx,%eax
81003477:	8b 00                	mov    (%eax),%eax
81003479:	83 ec 04             	sub    $0x4,%esp
8100347c:	ff 75 0c             	push   0xc(%ebp)
8100347f:	50                   	push   %eax
81003480:	ff 75 08             	push   0x8(%ebp)
81003483:	e8 fd 1b 00 00       	call   81005085 <_fputwc_r>
81003488:	83 c4 10             	add    $0x10,%esp
8100348b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100348e:	75 07                	jne    81003497 <__sfputs_r+0x51>
81003490:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003495:	eb 52                	jmp    810034e9 <__sfputs_r+0xa3>
81003497:	83 c3 01             	add    $0x1,%ebx
8100349a:	8b 45 14             	mov    0x14(%ebp),%eax
8100349d:	c1 e8 02             	shr    $0x2,%eax
810034a0:	89 da                	mov    %ebx,%edx
810034a2:	39 d0                	cmp    %edx,%eax
810034a4:	77 c3                	ja     81003469 <__sfputs_r+0x23>
810034a6:	eb 3c                	jmp    810034e4 <__sfputs_r+0x9e>
810034a8:	bb 00 00 00 00       	mov    $0x0,%ebx
810034ad:	eb 2e                	jmp    810034dd <__sfputs_r+0x97>
810034af:	89 da                	mov    %ebx,%edx
810034b1:	8b 45 10             	mov    0x10(%ebp),%eax
810034b4:	01 d0                	add    %edx,%eax
810034b6:	0f b6 00             	movzbl (%eax),%eax
810034b9:	0f be c0             	movsbl %al,%eax
810034bc:	83 ec 04             	sub    $0x4,%esp
810034bf:	ff 75 0c             	push   0xc(%ebp)
810034c2:	50                   	push   %eax
810034c3:	ff 75 08             	push   0x8(%ebp)
810034c6:	e8 15 ff ff ff       	call   810033e0 <__sfputc_r>
810034cb:	83 c4 10             	add    $0x10,%esp
810034ce:	83 f8 ff             	cmp    $0xffffffff,%eax
810034d1:	75 07                	jne    810034da <__sfputs_r+0x94>
810034d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810034d8:	eb 0f                	jmp    810034e9 <__sfputs_r+0xa3>
810034da:	83 c3 01             	add    $0x1,%ebx
810034dd:	89 d8                	mov    %ebx,%eax
810034df:	39 45 14             	cmp    %eax,0x14(%ebp)
810034e2:	77 cb                	ja     810034af <__sfputs_r+0x69>
810034e4:	b8 00 00 00 00       	mov    $0x0,%eax
810034e9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810034ec:	c9                   	leave  
810034ed:	c3                   	ret    

810034ee <vfiprintf>:
810034ee:	55                   	push   %ebp
810034ef:	89 e5                	mov    %esp,%ebp
810034f1:	83 ec 18             	sub    $0x18,%esp
810034f4:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810034f9:	ff 75 10             	push   0x10(%ebp)
810034fc:	ff 75 0c             	push   0xc(%ebp)
810034ff:	ff 75 08             	push   0x8(%ebp)
81003502:	50                   	push   %eax
81003503:	e8 0b 00 00 00       	call   81003513 <_vfiprintf_r>
81003508:	83 c4 10             	add    $0x10,%esp
8100350b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100350e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003511:	c9                   	leave  
81003512:	c3                   	ret    

81003513 <_vfiprintf_r>:
81003513:	55                   	push   %ebp
81003514:	89 e5                	mov    %esp,%ebp
81003516:	57                   	push   %edi
81003517:	56                   	push   %esi
81003518:	53                   	push   %ebx
81003519:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100351f:	c7 45 e4 46 34 00 81 	movl   $0x81003446,-0x1c(%ebp)
81003526:	8b 45 08             	mov    0x8(%ebp),%eax
81003529:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100352c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003530:	74 18                	je     8100354a <_vfiprintf_r+0x37>
81003532:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003535:	8b 40 38             	mov    0x38(%eax),%eax
81003538:	85 c0                	test   %eax,%eax
8100353a:	75 0e                	jne    8100354a <_vfiprintf_r+0x37>
8100353c:	83 ec 0c             	sub    $0xc,%esp
8100353f:	ff 75 e0             	push   -0x20(%ebp)
81003542:	e8 fa da ff ff       	call   81001041 <__sinit>
81003547:	83 c4 10             	add    $0x10,%esp
8100354a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100354d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003551:	98                   	cwtl   
81003552:	83 e0 08             	and    $0x8,%eax
81003555:	85 c0                	test   %eax,%eax
81003557:	74 0a                	je     81003563 <_vfiprintf_r+0x50>
81003559:	8b 45 0c             	mov    0xc(%ebp),%eax
8100355c:	8b 40 10             	mov    0x10(%eax),%eax
8100355f:	85 c0                	test   %eax,%eax
81003561:	75 1f                	jne    81003582 <_vfiprintf_r+0x6f>
81003563:	83 ec 08             	sub    $0x8,%esp
81003566:	ff 75 0c             	push   0xc(%ebp)
81003569:	ff 75 08             	push   0x8(%ebp)
8100356c:	e8 c7 14 00 00       	call   81004a38 <__swsetup_r>
81003571:	83 c4 10             	add    $0x10,%esp
81003574:	85 c0                	test   %eax,%eax
81003576:	74 0a                	je     81003582 <_vfiprintf_r+0x6f>
81003578:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100357d:	e9 df 02 00 00       	jmp    81003861 <_vfiprintf_r+0x34e>
81003582:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003585:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100358c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003590:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003594:	8b 45 14             	mov    0x14(%ebp),%eax
81003597:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100359d:	89 de                	mov    %ebx,%esi
8100359f:	eb 03                	jmp    810035a4 <_vfiprintf_r+0x91>
810035a1:	83 c3 01             	add    $0x1,%ebx
810035a4:	0f b6 03             	movzbl (%ebx),%eax
810035a7:	84 c0                	test   %al,%al
810035a9:	74 07                	je     810035b2 <_vfiprintf_r+0x9f>
810035ab:	0f b6 03             	movzbl (%ebx),%eax
810035ae:	3c 25                	cmp    $0x25,%al
810035b0:	75 ef                	jne    810035a1 <_vfiprintf_r+0x8e>
810035b2:	89 d8                	mov    %ebx,%eax
810035b4:	29 f0                	sub    %esi,%eax
810035b6:	85 c0                	test   %eax,%eax
810035b8:	74 2b                	je     810035e5 <_vfiprintf_r+0xd2>
810035ba:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810035c0:	50                   	push   %eax
810035c1:	56                   	push   %esi
810035c2:	ff 75 0c             	push   0xc(%ebp)
810035c5:	ff 75 08             	push   0x8(%ebp)
810035c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810035cb:	ff d0                	call   *%eax
810035cd:	83 c4 10             	add    $0x10,%esp
810035d0:	83 f8 ff             	cmp    $0xffffffff,%eax
810035d3:	0f 84 68 02 00 00    	je     81003841 <_vfiprintf_r+0x32e>
810035d9:	8b 45 94             	mov    -0x6c(%ebp),%eax
810035dc:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
810035e2:	89 45 94             	mov    %eax,-0x6c(%ebp)
810035e5:	0f b6 03             	movzbl (%ebx),%eax
810035e8:	84 c0                	test   %al,%al
810035ea:	0f 84 54 02 00 00    	je     81003844 <_vfiprintf_r+0x331>
810035f0:	83 c3 01             	add    $0x1,%ebx
810035f3:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810035fa:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81003601:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003608:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100360f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81003613:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100361a:	c7 45 dc 04 6c 00 81 	movl   $0x81006c04,-0x24(%ebp)
81003621:	eb 1b                	jmp    8100363e <_vfiprintf_r+0x12b>
81003623:	8b 55 80             	mov    -0x80(%ebp),%edx
81003626:	89 f0                	mov    %esi,%eax
81003628:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100362b:	be 01 00 00 00       	mov    $0x1,%esi
81003630:	89 c1                	mov    %eax,%ecx
81003632:	d3 e6                	shl    %cl,%esi
81003634:	89 f0                	mov    %esi,%eax
81003636:	09 d0                	or     %edx,%eax
81003638:	89 45 80             	mov    %eax,-0x80(%ebp)
8100363b:	83 c3 01             	add    $0x1,%ebx
8100363e:	0f b6 03             	movzbl (%ebx),%eax
81003641:	0f be c0             	movsbl %al,%eax
81003644:	83 ec 04             	sub    $0x4,%esp
81003647:	6a 05                	push   $0x5
81003649:	50                   	push   %eax
8100364a:	ff 75 dc             	push   -0x24(%ebp)
8100364d:	e8 ee fa ff ff       	call   81003140 <memchr>
81003652:	83 c4 10             	add    $0x10,%esp
81003655:	89 c6                	mov    %eax,%esi
81003657:	85 f6                	test   %esi,%esi
81003659:	75 c8                	jne    81003623 <_vfiprintf_r+0x110>
8100365b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100365e:	83 e0 10             	and    $0x10,%eax
81003661:	85 c0                	test   %eax,%eax
81003663:	74 04                	je     81003669 <_vfiprintf_r+0x156>
81003665:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003669:	8b 45 80             	mov    -0x80(%ebp),%eax
8100366c:	83 e0 08             	and    $0x8,%eax
8100366f:	85 c0                	test   %eax,%eax
81003671:	74 04                	je     81003677 <_vfiprintf_r+0x164>
81003673:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003677:	0f b6 03             	movzbl (%ebx),%eax
8100367a:	3c 2a                	cmp    $0x2a,%al
8100367c:	75 50                	jne    810036ce <_vfiprintf_r+0x1bb>
8100367e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003684:	8d 50 04             	lea    0x4(%eax),%edx
81003687:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100368d:	8b 00                	mov    (%eax),%eax
8100368f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003692:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003695:	85 c0                	test   %eax,%eax
81003697:	79 11                	jns    810036aa <_vfiprintf_r+0x197>
81003699:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100369c:	f7 d8                	neg    %eax
8100369e:	89 45 8c             	mov    %eax,-0x74(%ebp)
810036a1:	8b 45 80             	mov    -0x80(%ebp),%eax
810036a4:	83 c8 02             	or     $0x2,%eax
810036a7:	89 45 80             	mov    %eax,-0x80(%ebp)
810036aa:	83 c3 01             	add    $0x1,%ebx
810036ad:	eb 2d                	jmp    810036dc <_vfiprintf_r+0x1c9>
810036af:	8b 55 8c             	mov    -0x74(%ebp),%edx
810036b2:	89 d0                	mov    %edx,%eax
810036b4:	c1 e0 02             	shl    $0x2,%eax
810036b7:	01 d0                	add    %edx,%eax
810036b9:	01 c0                	add    %eax,%eax
810036bb:	89 c2                	mov    %eax,%edx
810036bd:	0f b6 03             	movzbl (%ebx),%eax
810036c0:	0f be c0             	movsbl %al,%eax
810036c3:	83 e8 30             	sub    $0x30,%eax
810036c6:	01 d0                	add    %edx,%eax
810036c8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810036cb:	83 c3 01             	add    $0x1,%ebx
810036ce:	0f b6 03             	movzbl (%ebx),%eax
810036d1:	0f be c0             	movsbl %al,%eax
810036d4:	83 e8 30             	sub    $0x30,%eax
810036d7:	83 f8 09             	cmp    $0x9,%eax
810036da:	76 d3                	jbe    810036af <_vfiprintf_r+0x19c>
810036dc:	0f b6 03             	movzbl (%ebx),%eax
810036df:	3c 2e                	cmp    $0x2e,%al
810036e1:	75 67                	jne    8100374a <_vfiprintf_r+0x237>
810036e3:	83 c3 01             	add    $0x1,%ebx
810036e6:	0f b6 03             	movzbl (%ebx),%eax
810036e9:	3c 2a                	cmp    $0x2a,%al
810036eb:	75 27                	jne    81003714 <_vfiprintf_r+0x201>
810036ed:	83 c3 01             	add    $0x1,%ebx
810036f0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810036f6:	8d 50 04             	lea    0x4(%eax),%edx
810036f9:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810036ff:	8b 00                	mov    (%eax),%eax
81003701:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003704:	8b 45 84             	mov    -0x7c(%ebp),%eax
81003707:	85 c0                	test   %eax,%eax
81003709:	79 3f                	jns    8100374a <_vfiprintf_r+0x237>
8100370b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81003712:	eb 36                	jmp    8100374a <_vfiprintf_r+0x237>
81003714:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100371b:	eb 1f                	jmp    8100373c <_vfiprintf_r+0x229>
8100371d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81003720:	89 d0                	mov    %edx,%eax
81003722:	c1 e0 02             	shl    $0x2,%eax
81003725:	01 d0                	add    %edx,%eax
81003727:	01 c0                	add    %eax,%eax
81003729:	89 c2                	mov    %eax,%edx
8100372b:	0f b6 03             	movzbl (%ebx),%eax
8100372e:	0f be c0             	movsbl %al,%eax
81003731:	83 e8 30             	sub    $0x30,%eax
81003734:	01 d0                	add    %edx,%eax
81003736:	89 45 84             	mov    %eax,-0x7c(%ebp)
81003739:	83 c3 01             	add    $0x1,%ebx
8100373c:	0f b6 03             	movzbl (%ebx),%eax
8100373f:	0f be c0             	movsbl %al,%eax
81003742:	83 e8 30             	sub    $0x30,%eax
81003745:	83 f8 09             	cmp    $0x9,%eax
81003748:	76 d3                	jbe    8100371d <_vfiprintf_r+0x20a>
8100374a:	c7 45 dc 0a 6c 00 81 	movl   $0x81006c0a,-0x24(%ebp)
81003751:	0f b6 03             	movzbl (%ebx),%eax
81003754:	0f be c0             	movsbl %al,%eax
81003757:	83 ec 04             	sub    $0x4,%esp
8100375a:	6a 03                	push   $0x3
8100375c:	50                   	push   %eax
8100375d:	ff 75 dc             	push   -0x24(%ebp)
81003760:	e8 db f9 ff ff       	call   81003140 <memchr>
81003765:	83 c4 10             	add    $0x10,%esp
81003768:	89 c6                	mov    %eax,%esi
8100376a:	85 f6                	test   %esi,%esi
8100376c:	74 1b                	je     81003789 <_vfiprintf_r+0x276>
8100376e:	8b 55 80             	mov    -0x80(%ebp),%edx
81003771:	89 f0                	mov    %esi,%eax
81003773:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003776:	be 40 00 00 00       	mov    $0x40,%esi
8100377b:	89 c1                	mov    %eax,%ecx
8100377d:	d3 e6                	shl    %cl,%esi
8100377f:	89 f0                	mov    %esi,%eax
81003781:	09 d0                	or     %edx,%eax
81003783:	89 45 80             	mov    %eax,-0x80(%ebp)
81003786:	83 c3 01             	add    $0x1,%ebx
81003789:	89 d8                	mov    %ebx,%eax
8100378b:	8d 58 01             	lea    0x1(%eax),%ebx
8100378e:	0f b6 00             	movzbl (%eax),%eax
81003791:	88 45 98             	mov    %al,-0x68(%ebp)
81003794:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003798:	0f be c0             	movsbl %al,%eax
8100379b:	83 ec 04             	sub    $0x4,%esp
8100379e:	6a 06                	push   $0x6
810037a0:	50                   	push   %eax
810037a1:	68 0e 6c 00 81       	push   $0x81006c0e
810037a6:	e8 95 f9 ff ff       	call   81003140 <memchr>
810037ab:	83 c4 10             	add    $0x10,%esp
810037ae:	89 c6                	mov    %eax,%esi
810037b0:	85 f6                	test   %esi,%esi
810037b2:	74 5a                	je     8100380e <_vfiprintf_r+0x2fb>
810037b4:	b8 00 00 00 00       	mov    $0x0,%eax
810037b9:	85 c0                	test   %eax,%eax
810037bb:	75 2e                	jne    810037eb <_vfiprintf_r+0x2d8>
810037bd:	8b 45 80             	mov    -0x80(%ebp),%eax
810037c0:	25 00 01 00 00       	and    $0x100,%eax
810037c5:	85 c0                	test   %eax,%eax
810037c7:	74 11                	je     810037da <_vfiprintf_r+0x2c7>
810037c9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810037cf:	83 c0 0c             	add    $0xc,%eax
810037d2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810037d8:	eb 55                	jmp    8100382f <_vfiprintf_r+0x31c>
810037da:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810037e0:	83 c0 08             	add    $0x8,%eax
810037e3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810037e9:	eb 44                	jmp    8100382f <_vfiprintf_r+0x31c>
810037eb:	83 ec 0c             	sub    $0xc,%esp
810037ee:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810037f4:	50                   	push   %eax
810037f5:	ff 75 e4             	push   -0x1c(%ebp)
810037f8:	ff 75 0c             	push   0xc(%ebp)
810037fb:	8d 45 80             	lea    -0x80(%ebp),%eax
810037fe:	50                   	push   %eax
810037ff:	ff 75 08             	push   0x8(%ebp)
81003802:	e8 f9 c7 ff 7e       	call   0 <do_help-0x81000000>
81003807:	83 c4 20             	add    $0x20,%esp
8100380a:	89 c7                	mov    %eax,%edi
8100380c:	eb 21                	jmp    8100382f <_vfiprintf_r+0x31c>
8100380e:	83 ec 0c             	sub    $0xc,%esp
81003811:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81003817:	50                   	push   %eax
81003818:	ff 75 e4             	push   -0x1c(%ebp)
8100381b:	ff 75 0c             	push   0xc(%ebp)
8100381e:	8d 45 80             	lea    -0x80(%ebp),%eax
81003821:	50                   	push   %eax
81003822:	ff 75 08             	push   0x8(%ebp)
81003825:	e8 da 01 00 00       	call   81003a04 <_printf_i>
8100382a:	83 c4 20             	add    $0x20,%esp
8100382d:	89 c7                	mov    %eax,%edi
8100382f:	83 ff ff             	cmp    $0xffffffff,%edi
81003832:	74 13                	je     81003847 <_vfiprintf_r+0x334>
81003834:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003837:	01 f8                	add    %edi,%eax
81003839:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100383c:	e9 5c fd ff ff       	jmp    8100359d <_vfiprintf_r+0x8a>
81003841:	90                   	nop
81003842:	eb 04                	jmp    81003848 <_vfiprintf_r+0x335>
81003844:	90                   	nop
81003845:	eb 01                	jmp    81003848 <_vfiprintf_r+0x335>
81003847:	90                   	nop
81003848:	8b 45 0c             	mov    0xc(%ebp),%eax
8100384b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100384f:	98                   	cwtl   
81003850:	83 e0 40             	and    $0x40,%eax
81003853:	85 c0                	test   %eax,%eax
81003855:	75 05                	jne    8100385c <_vfiprintf_r+0x349>
81003857:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100385a:	eb 05                	jmp    81003861 <_vfiprintf_r+0x34e>
8100385c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003861:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003864:	5b                   	pop    %ebx
81003865:	5e                   	pop    %esi
81003866:	5f                   	pop    %edi
81003867:	5d                   	pop    %ebp
81003868:	c3                   	ret    

81003869 <_printf_common>:
81003869:	55                   	push   %ebp
8100386a:	89 e5                	mov    %esp,%ebp
8100386c:	83 ec 18             	sub    $0x18,%esp
8100386f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003872:	8b 50 10             	mov    0x10(%eax),%edx
81003875:	8b 45 0c             	mov    0xc(%ebp),%eax
81003878:	8b 40 08             	mov    0x8(%eax),%eax
8100387b:	39 c2                	cmp    %eax,%edx
8100387d:	0f 4c d0             	cmovl  %eax,%edx
81003880:	8b 45 10             	mov    0x10(%ebp),%eax
81003883:	89 10                	mov    %edx,(%eax)
81003885:	8b 45 0c             	mov    0xc(%ebp),%eax
81003888:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100388c:	84 c0                	test   %al,%al
8100388e:	74 0d                	je     8100389d <_printf_common+0x34>
81003890:	8b 45 10             	mov    0x10(%ebp),%eax
81003893:	8b 00                	mov    (%eax),%eax
81003895:	8d 50 01             	lea    0x1(%eax),%edx
81003898:	8b 45 10             	mov    0x10(%ebp),%eax
8100389b:	89 10                	mov    %edx,(%eax)
8100389d:	8b 45 0c             	mov    0xc(%ebp),%eax
810038a0:	8b 00                	mov    (%eax),%eax
810038a2:	83 e0 20             	and    $0x20,%eax
810038a5:	85 c0                	test   %eax,%eax
810038a7:	74 0d                	je     810038b6 <_printf_common+0x4d>
810038a9:	8b 45 10             	mov    0x10(%ebp),%eax
810038ac:	8b 00                	mov    (%eax),%eax
810038ae:	8d 50 02             	lea    0x2(%eax),%edx
810038b1:	8b 45 10             	mov    0x10(%ebp),%eax
810038b4:	89 10                	mov    %edx,(%eax)
810038b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810038b9:	8b 00                	mov    (%eax),%eax
810038bb:	83 e0 06             	and    $0x6,%eax
810038be:	85 c0                	test   %eax,%eax
810038c0:	75 41                	jne    81003903 <_printf_common+0x9a>
810038c2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810038c9:	eb 24                	jmp    810038ef <_printf_common+0x86>
810038cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810038ce:	83 c0 19             	add    $0x19,%eax
810038d1:	6a 01                	push   $0x1
810038d3:	50                   	push   %eax
810038d4:	ff 75 14             	push   0x14(%ebp)
810038d7:	ff 75 08             	push   0x8(%ebp)
810038da:	8b 45 18             	mov    0x18(%ebp),%eax
810038dd:	ff d0                	call   *%eax
810038df:	83 c4 10             	add    $0x10,%esp
810038e2:	83 f8 ff             	cmp    $0xffffffff,%eax
810038e5:	0f 84 0b 01 00 00    	je     810039f6 <_printf_common+0x18d>
810038eb:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810038ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810038f2:	8b 50 0c             	mov    0xc(%eax),%edx
810038f5:	8b 45 10             	mov    0x10(%ebp),%eax
810038f8:	8b 08                	mov    (%eax),%ecx
810038fa:	89 d0                	mov    %edx,%eax
810038fc:	29 c8                	sub    %ecx,%eax
810038fe:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003901:	7c c8                	jl     810038cb <_printf_common+0x62>
81003903:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100390a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100390d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003911:	84 c0                	test   %al,%al
81003913:	74 04                	je     81003919 <_printf_common+0xb0>
81003915:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003919:	8b 45 0c             	mov    0xc(%ebp),%eax
8100391c:	8b 00                	mov    (%eax),%eax
8100391e:	83 e0 20             	and    $0x20,%eax
81003921:	85 c0                	test   %eax,%eax
81003923:	74 28                	je     8100394d <_printf_common+0xe4>
81003925:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003928:	8d 50 01             	lea    0x1(%eax),%edx
8100392b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100392e:	8b 55 0c             	mov    0xc(%ebp),%edx
81003931:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003936:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003939:	8d 50 01             	lea    0x1(%eax),%edx
8100393c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100393f:	8b 55 0c             	mov    0xc(%ebp),%edx
81003942:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003946:	8b 55 0c             	mov    0xc(%ebp),%edx
81003949:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100394d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003950:	8b 55 0c             	mov    0xc(%ebp),%edx
81003953:	83 c2 43             	add    $0x43,%edx
81003956:	50                   	push   %eax
81003957:	52                   	push   %edx
81003958:	ff 75 14             	push   0x14(%ebp)
8100395b:	ff 75 08             	push   0x8(%ebp)
8100395e:	8b 45 18             	mov    0x18(%ebp),%eax
81003961:	ff d0                	call   *%eax
81003963:	83 c4 10             	add    $0x10,%esp
81003966:	83 f8 ff             	cmp    $0xffffffff,%eax
81003969:	0f 84 8a 00 00 00    	je     810039f9 <_printf_common+0x190>
8100396f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003972:	8b 50 0c             	mov    0xc(%eax),%edx
81003975:	8b 45 10             	mov    0x10(%ebp),%eax
81003978:	8b 08                	mov    (%eax),%ecx
8100397a:	89 d0                	mov    %edx,%eax
8100397c:	29 c8                	sub    %ecx,%eax
8100397e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003981:	8b 45 0c             	mov    0xc(%ebp),%eax
81003984:	8b 00                	mov    (%eax),%eax
81003986:	83 e0 06             	and    $0x6,%eax
81003989:	83 f8 04             	cmp    $0x4,%eax
8100398c:	75 06                	jne    81003994 <_printf_common+0x12b>
8100398e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003992:	79 07                	jns    8100399b <_printf_common+0x132>
81003994:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100399b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100399e:	8b 50 08             	mov    0x8(%eax),%edx
810039a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a4:	8b 40 10             	mov    0x10(%eax),%eax
810039a7:	39 c2                	cmp    %eax,%edx
810039a9:	7e 13                	jle    810039be <_printf_common+0x155>
810039ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ae:	8b 50 08             	mov    0x8(%eax),%edx
810039b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810039b4:	8b 48 10             	mov    0x10(%eax),%ecx
810039b7:	89 d0                	mov    %edx,%eax
810039b9:	29 c8                	sub    %ecx,%eax
810039bb:	01 45 f4             	add    %eax,-0xc(%ebp)
810039be:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810039c5:	eb 20                	jmp    810039e7 <_printf_common+0x17e>
810039c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810039ca:	83 c0 1a             	add    $0x1a,%eax
810039cd:	6a 01                	push   $0x1
810039cf:	50                   	push   %eax
810039d0:	ff 75 14             	push   0x14(%ebp)
810039d3:	ff 75 08             	push   0x8(%ebp)
810039d6:	8b 45 18             	mov    0x18(%ebp),%eax
810039d9:	ff d0                	call   *%eax
810039db:	83 c4 10             	add    $0x10,%esp
810039de:	83 f8 ff             	cmp    $0xffffffff,%eax
810039e1:	74 19                	je     810039fc <_printf_common+0x193>
810039e3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810039e7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810039ea:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810039ed:	7c d8                	jl     810039c7 <_printf_common+0x15e>
810039ef:	b8 00 00 00 00       	mov    $0x0,%eax
810039f4:	eb 0c                	jmp    81003a02 <_printf_common+0x199>
810039f6:	90                   	nop
810039f7:	eb 04                	jmp    810039fd <_printf_common+0x194>
810039f9:	90                   	nop
810039fa:	eb 01                	jmp    810039fd <_printf_common+0x194>
810039fc:	90                   	nop
810039fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003a02:	c9                   	leave  
81003a03:	c3                   	ret    

81003a04 <_printf_i>:
81003a04:	55                   	push   %ebp
81003a05:	89 e5                	mov    %esp,%ebp
81003a07:	53                   	push   %ebx
81003a08:	83 ec 24             	sub    $0x24,%esp
81003a0b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a0e:	83 c0 1b             	add    $0x1b,%eax
81003a11:	83 c0 28             	add    $0x28,%eax
81003a14:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a17:	c7 45 e8 18 6c 00 81 	movl   $0x81006c18,-0x18(%ebp)
81003a1e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a21:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003a25:	0f be c0             	movsbl %al,%eax
81003a28:	85 c0                	test   %eax,%eax
81003a2a:	0f 84 00 03 00 00    	je     81003d30 <_printf_i+0x32c>
81003a30:	85 c0                	test   %eax,%eax
81003a32:	0f 88 52 03 00 00    	js     81003d8a <_printf_i+0x386>
81003a38:	83 f8 78             	cmp    $0x78,%eax
81003a3b:	0f 8f 49 03 00 00    	jg     81003d8a <_printf_i+0x386>
81003a41:	83 f8 58             	cmp    $0x58,%eax
81003a44:	0f 8c 40 03 00 00    	jl     81003d8a <_printf_i+0x386>
81003a4a:	83 e8 58             	sub    $0x58,%eax
81003a4d:	83 f8 20             	cmp    $0x20,%eax
81003a50:	0f 87 34 03 00 00    	ja     81003d8a <_printf_i+0x386>
81003a56:	8b 04 85 3c 6c 00 81 	mov    -0x7eff93c4(,%eax,4),%eax
81003a5d:	ff e0                	jmp    *%eax
81003a5f:	8b 45 18             	mov    0x18(%ebp),%eax
81003a62:	8b 00                	mov    (%eax),%eax
81003a64:	8d 48 04             	lea    0x4(%eax),%ecx
81003a67:	8b 55 18             	mov    0x18(%ebp),%edx
81003a6a:	89 0a                	mov    %ecx,(%edx)
81003a6c:	8b 00                	mov    (%eax),%eax
81003a6e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003a72:	89 c2                	mov    %eax,%edx
81003a74:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a77:	88 10                	mov    %dl,(%eax)
81003a79:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a7c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003a83:	e9 1c 03 00 00       	jmp    81003da4 <_printf_i+0x3a0>
81003a88:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a8b:	8b 00                	mov    (%eax),%eax
81003a8d:	25 80 00 00 00       	and    $0x80,%eax
81003a92:	85 c0                	test   %eax,%eax
81003a94:	74 11                	je     81003aa7 <_printf_i+0xa3>
81003a96:	8b 45 18             	mov    0x18(%ebp),%eax
81003a99:	8b 00                	mov    (%eax),%eax
81003a9b:	8d 48 04             	lea    0x4(%eax),%ecx
81003a9e:	8b 55 18             	mov    0x18(%ebp),%edx
81003aa1:	89 0a                	mov    %ecx,(%edx)
81003aa3:	8b 00                	mov    (%eax),%eax
81003aa5:	eb 2d                	jmp    81003ad4 <_printf_i+0xd0>
81003aa7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aaa:	8b 00                	mov    (%eax),%eax
81003aac:	83 e0 40             	and    $0x40,%eax
81003aaf:	85 c0                	test   %eax,%eax
81003ab1:	74 12                	je     81003ac5 <_printf_i+0xc1>
81003ab3:	8b 45 18             	mov    0x18(%ebp),%eax
81003ab6:	8b 00                	mov    (%eax),%eax
81003ab8:	8d 48 04             	lea    0x4(%eax),%ecx
81003abb:	8b 55 18             	mov    0x18(%ebp),%edx
81003abe:	89 0a                	mov    %ecx,(%edx)
81003ac0:	8b 00                	mov    (%eax),%eax
81003ac2:	98                   	cwtl   
81003ac3:	eb 0f                	jmp    81003ad4 <_printf_i+0xd0>
81003ac5:	8b 45 18             	mov    0x18(%ebp),%eax
81003ac8:	8b 00                	mov    (%eax),%eax
81003aca:	8d 48 04             	lea    0x4(%eax),%ecx
81003acd:	8b 55 18             	mov    0x18(%ebp),%edx
81003ad0:	89 0a                	mov    %ecx,(%edx)
81003ad2:	8b 00                	mov    (%eax),%eax
81003ad4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ada:	85 c0                	test   %eax,%eax
81003adc:	79 0a                	jns    81003ae8 <_printf_i+0xe4>
81003ade:	f7 5d f4             	negl   -0xc(%ebp)
81003ae1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ae4:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003ae8:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003aef:	e9 28 01 00 00       	jmp    81003c1c <_printf_i+0x218>
81003af4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003af7:	8b 00                	mov    (%eax),%eax
81003af9:	25 80 00 00 00       	and    $0x80,%eax
81003afe:	85 c0                	test   %eax,%eax
81003b00:	74 11                	je     81003b13 <_printf_i+0x10f>
81003b02:	8b 45 18             	mov    0x18(%ebp),%eax
81003b05:	8b 00                	mov    (%eax),%eax
81003b07:	8d 48 04             	lea    0x4(%eax),%ecx
81003b0a:	8b 55 18             	mov    0x18(%ebp),%edx
81003b0d:	89 0a                	mov    %ecx,(%edx)
81003b0f:	8b 00                	mov    (%eax),%eax
81003b11:	eb 2f                	jmp    81003b42 <_printf_i+0x13e>
81003b13:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b16:	8b 00                	mov    (%eax),%eax
81003b18:	83 e0 40             	and    $0x40,%eax
81003b1b:	85 c0                	test   %eax,%eax
81003b1d:	74 14                	je     81003b33 <_printf_i+0x12f>
81003b1f:	8b 45 18             	mov    0x18(%ebp),%eax
81003b22:	8b 00                	mov    (%eax),%eax
81003b24:	8d 48 04             	lea    0x4(%eax),%ecx
81003b27:	8b 55 18             	mov    0x18(%ebp),%edx
81003b2a:	89 0a                	mov    %ecx,(%edx)
81003b2c:	8b 00                	mov    (%eax),%eax
81003b2e:	0f b7 c0             	movzwl %ax,%eax
81003b31:	eb 0f                	jmp    81003b42 <_printf_i+0x13e>
81003b33:	8b 45 18             	mov    0x18(%ebp),%eax
81003b36:	8b 00                	mov    (%eax),%eax
81003b38:	8d 48 04             	lea    0x4(%eax),%ecx
81003b3b:	8b 55 18             	mov    0x18(%ebp),%edx
81003b3e:	89 0a                	mov    %ecx,(%edx)
81003b40:	8b 00                	mov    (%eax),%eax
81003b42:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b45:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b48:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003b4c:	3c 6f                	cmp    $0x6f,%al
81003b4e:	75 07                	jne    81003b57 <_printf_i+0x153>
81003b50:	b8 08 00 00 00       	mov    $0x8,%eax
81003b55:	eb 05                	jmp    81003b5c <_printf_i+0x158>
81003b57:	b8 0a 00 00 00       	mov    $0xa,%eax
81003b5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b5f:	e9 b1 00 00 00       	jmp    81003c15 <_printf_i+0x211>
81003b64:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b67:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003b6b:	eb 1d                	jmp    81003b8a <_printf_i+0x186>
81003b6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b70:	8b 00                	mov    (%eax),%eax
81003b72:	83 c8 20             	or     $0x20,%eax
81003b75:	89 c2                	mov    %eax,%edx
81003b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b7a:	89 10                	mov    %edx,(%eax)
81003b7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b7f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003b83:	c7 45 e8 29 6c 00 81 	movl   $0x81006c29,-0x18(%ebp)
81003b8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b8d:	8b 00                	mov    (%eax),%eax
81003b8f:	25 80 00 00 00       	and    $0x80,%eax
81003b94:	85 c0                	test   %eax,%eax
81003b96:	74 11                	je     81003ba9 <_printf_i+0x1a5>
81003b98:	8b 45 18             	mov    0x18(%ebp),%eax
81003b9b:	8b 00                	mov    (%eax),%eax
81003b9d:	8d 48 04             	lea    0x4(%eax),%ecx
81003ba0:	8b 55 18             	mov    0x18(%ebp),%edx
81003ba3:	89 0a                	mov    %ecx,(%edx)
81003ba5:	8b 00                	mov    (%eax),%eax
81003ba7:	eb 2f                	jmp    81003bd8 <_printf_i+0x1d4>
81003ba9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bac:	8b 00                	mov    (%eax),%eax
81003bae:	83 e0 40             	and    $0x40,%eax
81003bb1:	85 c0                	test   %eax,%eax
81003bb3:	74 14                	je     81003bc9 <_printf_i+0x1c5>
81003bb5:	8b 45 18             	mov    0x18(%ebp),%eax
81003bb8:	8b 00                	mov    (%eax),%eax
81003bba:	8d 48 04             	lea    0x4(%eax),%ecx
81003bbd:	8b 55 18             	mov    0x18(%ebp),%edx
81003bc0:	89 0a                	mov    %ecx,(%edx)
81003bc2:	8b 00                	mov    (%eax),%eax
81003bc4:	0f b7 c0             	movzwl %ax,%eax
81003bc7:	eb 0f                	jmp    81003bd8 <_printf_i+0x1d4>
81003bc9:	8b 45 18             	mov    0x18(%ebp),%eax
81003bcc:	8b 00                	mov    (%eax),%eax
81003bce:	8d 48 04             	lea    0x4(%eax),%ecx
81003bd1:	8b 55 18             	mov    0x18(%ebp),%edx
81003bd4:	89 0a                	mov    %ecx,(%edx)
81003bd6:	8b 00                	mov    (%eax),%eax
81003bd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bdb:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003be2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003be5:	8b 00                	mov    (%eax),%eax
81003be7:	83 e0 01             	and    $0x1,%eax
81003bea:	85 c0                	test   %eax,%eax
81003bec:	74 0f                	je     81003bfd <_printf_i+0x1f9>
81003bee:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bf1:	8b 00                	mov    (%eax),%eax
81003bf3:	83 c8 20             	or     $0x20,%eax
81003bf6:	89 c2                	mov    %eax,%edx
81003bf8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bfb:	89 10                	mov    %edx,(%eax)
81003bfd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c01:	75 11                	jne    81003c14 <_printf_i+0x210>
81003c03:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c06:	8b 00                	mov    (%eax),%eax
81003c08:	83 e0 df             	and    $0xffffffdf,%eax
81003c0b:	89 c2                	mov    %eax,%edx
81003c0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c10:	89 10                	mov    %edx,(%eax)
81003c12:	eb 01                	jmp    81003c15 <_printf_i+0x211>
81003c14:	90                   	nop
81003c15:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c18:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003c1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c1f:	8b 50 04             	mov    0x4(%eax),%edx
81003c22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c25:	89 50 08             	mov    %edx,0x8(%eax)
81003c28:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c2b:	8b 40 08             	mov    0x8(%eax),%eax
81003c2e:	85 c0                	test   %eax,%eax
81003c30:	78 0f                	js     81003c41 <_printf_i+0x23d>
81003c32:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c35:	8b 00                	mov    (%eax),%eax
81003c37:	83 e0 fb             	and    $0xfffffffb,%eax
81003c3a:	89 c2                	mov    %eax,%edx
81003c3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c3f:	89 10                	mov    %edx,(%eax)
81003c41:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c45:	75 0a                	jne    81003c51 <_printf_i+0x24d>
81003c47:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c4a:	8b 40 04             	mov    0x4(%eax),%eax
81003c4d:	85 c0                	test   %eax,%eax
81003c4f:	74 34                	je     81003c85 <_printf_i+0x281>
81003c51:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003c54:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c57:	ba 00 00 00 00       	mov    $0x0,%edx
81003c5c:	f7 f1                	div    %ecx
81003c5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c61:	01 d0                	add    %edx,%eax
81003c63:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c67:	0f b6 10             	movzbl (%eax),%edx
81003c6a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c6d:	88 10                	mov    %dl,(%eax)
81003c6f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003c72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c75:	ba 00 00 00 00       	mov    $0x0,%edx
81003c7a:	f7 f3                	div    %ebx
81003c7c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c7f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003c83:	75 cc                	jne    81003c51 <_printf_i+0x24d>
81003c85:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003c89:	75 26                	jne    81003cb1 <_printf_i+0x2ad>
81003c8b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c8e:	8b 00                	mov    (%eax),%eax
81003c90:	83 e0 01             	and    $0x1,%eax
81003c93:	85 c0                	test   %eax,%eax
81003c95:	74 1a                	je     81003cb1 <_printf_i+0x2ad>
81003c97:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c9a:	8b 50 04             	mov    0x4(%eax),%edx
81003c9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca0:	8b 40 10             	mov    0x10(%eax),%eax
81003ca3:	39 c2                	cmp    %eax,%edx
81003ca5:	7f 0a                	jg     81003cb1 <_printf_i+0x2ad>
81003ca7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003cab:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cae:	c6 00 30             	movb   $0x30,(%eax)
81003cb1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cb4:	83 c0 1b             	add    $0x1b,%eax
81003cb7:	83 c0 28             	add    $0x28,%eax
81003cba:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003cbd:	89 c2                	mov    %eax,%edx
81003cbf:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cc2:	89 50 10             	mov    %edx,0x10(%eax)
81003cc5:	e9 e2 00 00 00       	jmp    81003dac <_printf_i+0x3a8>
81003cca:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ccd:	8b 00                	mov    (%eax),%eax
81003ccf:	25 80 00 00 00       	and    $0x80,%eax
81003cd4:	85 c0                	test   %eax,%eax
81003cd6:	74 19                	je     81003cf1 <_printf_i+0x2ed>
81003cd8:	8b 45 18             	mov    0x18(%ebp),%eax
81003cdb:	8b 00                	mov    (%eax),%eax
81003cdd:	8d 48 04             	lea    0x4(%eax),%ecx
81003ce0:	8b 55 18             	mov    0x18(%ebp),%edx
81003ce3:	89 0a                	mov    %ecx,(%edx)
81003ce5:	8b 00                	mov    (%eax),%eax
81003ce7:	8b 55 0c             	mov    0xc(%ebp),%edx
81003cea:	8b 52 14             	mov    0x14(%edx),%edx
81003ced:	89 10                	mov    %edx,(%eax)
81003cef:	eb 3f                	jmp    81003d30 <_printf_i+0x32c>
81003cf1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cf4:	8b 00                	mov    (%eax),%eax
81003cf6:	83 e0 40             	and    $0x40,%eax
81003cf9:	85 c0                	test   %eax,%eax
81003cfb:	74 1c                	je     81003d19 <_printf_i+0x315>
81003cfd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d00:	8b 58 14             	mov    0x14(%eax),%ebx
81003d03:	8b 45 18             	mov    0x18(%ebp),%eax
81003d06:	8b 00                	mov    (%eax),%eax
81003d08:	8d 48 04             	lea    0x4(%eax),%ecx
81003d0b:	8b 55 18             	mov    0x18(%ebp),%edx
81003d0e:	89 0a                	mov    %ecx,(%edx)
81003d10:	8b 00                	mov    (%eax),%eax
81003d12:	89 da                	mov    %ebx,%edx
81003d14:	66 89 10             	mov    %dx,(%eax)
81003d17:	eb 17                	jmp    81003d30 <_printf_i+0x32c>
81003d19:	8b 45 18             	mov    0x18(%ebp),%eax
81003d1c:	8b 00                	mov    (%eax),%eax
81003d1e:	8d 48 04             	lea    0x4(%eax),%ecx
81003d21:	8b 55 18             	mov    0x18(%ebp),%edx
81003d24:	89 0a                	mov    %ecx,(%edx)
81003d26:	8b 00                	mov    (%eax),%eax
81003d28:	8b 55 0c             	mov    0xc(%ebp),%edx
81003d2b:	8b 52 14             	mov    0x14(%edx),%edx
81003d2e:	89 10                	mov    %edx,(%eax)
81003d30:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d33:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003d3a:	eb 70                	jmp    81003dac <_printf_i+0x3a8>
81003d3c:	8b 45 18             	mov    0x18(%ebp),%eax
81003d3f:	8b 00                	mov    (%eax),%eax
81003d41:	8d 48 04             	lea    0x4(%eax),%ecx
81003d44:	8b 55 18             	mov    0x18(%ebp),%edx
81003d47:	89 0a                	mov    %ecx,(%edx)
81003d49:	8b 00                	mov    (%eax),%eax
81003d4b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d51:	8b 40 04             	mov    0x4(%eax),%eax
81003d54:	83 ec 04             	sub    $0x4,%esp
81003d57:	50                   	push   %eax
81003d58:	6a 00                	push   $0x0
81003d5a:	ff 75 ec             	push   -0x14(%ebp)
81003d5d:	e8 de f3 ff ff       	call   81003140 <memchr>
81003d62:	83 c4 10             	add    $0x10,%esp
81003d65:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003d68:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003d6c:	74 0e                	je     81003d7c <_printf_i+0x378>
81003d6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d71:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003d74:	89 c2                	mov    %eax,%edx
81003d76:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d79:	89 50 04             	mov    %edx,0x4(%eax)
81003d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d7f:	8b 50 04             	mov    0x4(%eax),%edx
81003d82:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d85:	89 50 10             	mov    %edx,0x10(%eax)
81003d88:	eb 1a                	jmp    81003da4 <_printf_i+0x3a0>
81003d8a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003d8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d91:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003d95:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d98:	88 10                	mov    %dl,(%eax)
81003d9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d9d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003da4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003da7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003dab:	90                   	nop
81003dac:	83 ec 0c             	sub    $0xc,%esp
81003daf:	ff 75 14             	push   0x14(%ebp)
81003db2:	ff 75 10             	push   0x10(%ebp)
81003db5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003db8:	50                   	push   %eax
81003db9:	ff 75 0c             	push   0xc(%ebp)
81003dbc:	ff 75 08             	push   0x8(%ebp)
81003dbf:	e8 a5 fa ff ff       	call   81003869 <_printf_common>
81003dc4:	83 c4 20             	add    $0x20,%esp
81003dc7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003dca:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003dce:	74 72                	je     81003e42 <_printf_i+0x43e>
81003dd0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dd3:	8b 40 10             	mov    0x10(%eax),%eax
81003dd6:	50                   	push   %eax
81003dd7:	ff 75 ec             	push   -0x14(%ebp)
81003dda:	ff 75 10             	push   0x10(%ebp)
81003ddd:	ff 75 08             	push   0x8(%ebp)
81003de0:	8b 45 14             	mov    0x14(%ebp),%eax
81003de3:	ff d0                	call   *%eax
81003de5:	83 c4 10             	add    $0x10,%esp
81003de8:	83 f8 ff             	cmp    $0xffffffff,%eax
81003deb:	74 58                	je     81003e45 <_printf_i+0x441>
81003ded:	8b 45 0c             	mov    0xc(%ebp),%eax
81003df0:	8b 00                	mov    (%eax),%eax
81003df2:	83 e0 02             	and    $0x2,%eax
81003df5:	85 c0                	test   %eax,%eax
81003df7:	74 39                	je     81003e32 <_printf_i+0x42e>
81003df9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003e00:	eb 20                	jmp    81003e22 <_printf_i+0x41e>
81003e02:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e05:	83 c0 19             	add    $0x19,%eax
81003e08:	6a 01                	push   $0x1
81003e0a:	50                   	push   %eax
81003e0b:	ff 75 10             	push   0x10(%ebp)
81003e0e:	ff 75 08             	push   0x8(%ebp)
81003e11:	8b 45 14             	mov    0x14(%ebp),%eax
81003e14:	ff d0                	call   *%eax
81003e16:	83 c4 10             	add    $0x10,%esp
81003e19:	83 f8 ff             	cmp    $0xffffffff,%eax
81003e1c:	74 2a                	je     81003e48 <_printf_i+0x444>
81003e1e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003e22:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e25:	8b 40 0c             	mov    0xc(%eax),%eax
81003e28:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003e2b:	29 d0                	sub    %edx,%eax
81003e2d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003e30:	7c d0                	jl     81003e02 <_printf_i+0x3fe>
81003e32:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e35:	8b 50 0c             	mov    0xc(%eax),%edx
81003e38:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003e3b:	39 c2                	cmp    %eax,%edx
81003e3d:	0f 4d c2             	cmovge %edx,%eax
81003e40:	eb 0c                	jmp    81003e4e <_printf_i+0x44a>
81003e42:	90                   	nop
81003e43:	eb 04                	jmp    81003e49 <_printf_i+0x445>
81003e45:	90                   	nop
81003e46:	eb 01                	jmp    81003e49 <_printf_i+0x445>
81003e48:	90                   	nop
81003e49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003e4e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e51:	c9                   	leave  
81003e52:	c3                   	ret    

81003e53 <_iprintf_r>:
81003e53:	55                   	push   %ebp
81003e54:	89 e5                	mov    %esp,%ebp
81003e56:	83 ec 18             	sub    $0x18,%esp
81003e59:	8d 45 10             	lea    0x10(%ebp),%eax
81003e5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e5f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81003e62:	8b 45 08             	mov    0x8(%ebp),%eax
81003e65:	8b 40 08             	mov    0x8(%eax),%eax
81003e68:	52                   	push   %edx
81003e69:	ff 75 0c             	push   0xc(%ebp)
81003e6c:	50                   	push   %eax
81003e6d:	ff 75 08             	push   0x8(%ebp)
81003e70:	e8 9e f6 ff ff       	call   81003513 <_vfiprintf_r>
81003e75:	83 c4 10             	add    $0x10,%esp
81003e78:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e7b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e7e:	c9                   	leave  
81003e7f:	c3                   	ret    

81003e80 <iprintf>:
81003e80:	55                   	push   %ebp
81003e81:	89 e5                	mov    %esp,%ebp
81003e83:	83 ec 18             	sub    $0x18,%esp
81003e86:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81003e8b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e8e:	8d 45 0c             	lea    0xc(%ebp),%eax
81003e91:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e94:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003e97:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e9a:	8b 40 08             	mov    0x8(%eax),%eax
81003e9d:	52                   	push   %edx
81003e9e:	ff 75 08             	push   0x8(%ebp)
81003ea1:	50                   	push   %eax
81003ea2:	ff 75 f4             	push   -0xc(%ebp)
81003ea5:	e8 69 f6 ff ff       	call   81003513 <_vfiprintf_r>
81003eaa:	83 c4 10             	add    $0x10,%esp
81003ead:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003eb0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003eb3:	c9                   	leave  
81003eb4:	c3                   	ret    

81003eb5 <_puts_r>:
81003eb5:	55                   	push   %ebp
81003eb6:	89 e5                	mov    %esp,%ebp
81003eb8:	83 ec 38             	sub    $0x38,%esp
81003ebb:	83 ec 0c             	sub    $0xc,%esp
81003ebe:	ff 75 0c             	push   0xc(%ebp)
81003ec1:	e8 1a 06 00 00       	call   810044e0 <strlen>
81003ec6:	83 c4 10             	add    $0x10,%esp
81003ec9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003ecc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ecf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed5:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003ed8:	c7 45 d4 c0 6c 00 81 	movl   $0x81006cc0,-0x2c(%ebp)
81003edf:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003ee6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ee9:	83 c0 01             	add    $0x1,%eax
81003eec:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003eef:	8d 45 cc             	lea    -0x34(%ebp),%eax
81003ef2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ef5:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81003efc:	8b 45 08             	mov    0x8(%ebp),%eax
81003eff:	8b 40 08             	mov    0x8(%eax),%eax
81003f02:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f05:	8b 45 08             	mov    0x8(%ebp),%eax
81003f08:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003f0b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81003f0f:	74 18                	je     81003f29 <_puts_r+0x74>
81003f11:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003f14:	8b 40 38             	mov    0x38(%eax),%eax
81003f17:	85 c0                	test   %eax,%eax
81003f19:	75 0e                	jne    81003f29 <_puts_r+0x74>
81003f1b:	83 ec 0c             	sub    $0xc,%esp
81003f1e:	ff 75 ec             	push   -0x14(%ebp)
81003f21:	e8 1b d1 ff ff       	call   81001041 <__sinit>
81003f26:	83 c4 10             	add    $0x10,%esp
81003f29:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f2c:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003f30:	98                   	cwtl   
81003f31:	25 00 20 00 00       	and    $0x2000,%eax
81003f36:	85 c0                	test   %eax,%eax
81003f38:	75 24                	jne    81003f5e <_puts_r+0xa9>
81003f3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f3d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003f41:	80 cc 20             	or     $0x20,%ah
81003f44:	89 c2                	mov    %eax,%edx
81003f46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f49:	66 89 50 0c          	mov    %dx,0xc(%eax)
81003f4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f50:	8b 40 64             	mov    0x64(%eax),%eax
81003f53:	80 e4 df             	and    $0xdf,%ah
81003f56:	89 c2                	mov    %eax,%edx
81003f58:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f5b:	89 50 64             	mov    %edx,0x64(%eax)
81003f5e:	83 ec 04             	sub    $0x4,%esp
81003f61:	8d 45 dc             	lea    -0x24(%ebp),%eax
81003f64:	50                   	push   %eax
81003f65:	ff 75 f0             	push   -0x10(%ebp)
81003f68:	ff 75 08             	push   0x8(%ebp)
81003f6b:	e8 b4 11 00 00       	call   81005124 <__sfvwrite_r>
81003f70:	83 c4 10             	add    $0x10,%esp
81003f73:	85 c0                	test   %eax,%eax
81003f75:	74 07                	je     81003f7e <_puts_r+0xc9>
81003f77:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003f7c:	eb 05                	jmp    81003f83 <_puts_r+0xce>
81003f7e:	b8 0a 00 00 00       	mov    $0xa,%eax
81003f83:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f86:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f89:	c9                   	leave  
81003f8a:	c3                   	ret    

81003f8b <puts>:
81003f8b:	55                   	push   %ebp
81003f8c:	89 e5                	mov    %esp,%ebp
81003f8e:	83 ec 08             	sub    $0x8,%esp
81003f91:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81003f96:	83 ec 08             	sub    $0x8,%esp
81003f99:	ff 75 08             	push   0x8(%ebp)
81003f9c:	50                   	push   %eax
81003f9d:	e8 13 ff ff ff       	call   81003eb5 <_puts_r>
81003fa2:	83 c4 10             	add    $0x10,%esp
81003fa5:	c9                   	leave  
81003fa6:	c3                   	ret    

81003fa7 <lflush>:
81003fa7:	55                   	push   %ebp
81003fa8:	89 e5                	mov    %esp,%ebp
81003faa:	83 ec 08             	sub    $0x8,%esp
81003fad:	8b 45 08             	mov    0x8(%ebp),%eax
81003fb0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003fb4:	98                   	cwtl   
81003fb5:	83 e0 09             	and    $0x9,%eax
81003fb8:	83 f8 09             	cmp    $0x9,%eax
81003fbb:	75 10                	jne    81003fcd <lflush+0x26>
81003fbd:	83 ec 0c             	sub    $0xc,%esp
81003fc0:	ff 75 08             	push   0x8(%ebp)
81003fc3:	e8 ce cb ff ff       	call   81000b96 <fflush>
81003fc8:	83 c4 10             	add    $0x10,%esp
81003fcb:	eb 05                	jmp    81003fd2 <lflush+0x2b>
81003fcd:	b8 00 00 00 00       	mov    $0x0,%eax
81003fd2:	c9                   	leave  
81003fd3:	c3                   	ret    

81003fd4 <__srefill_r>:
81003fd4:	55                   	push   %ebp
81003fd5:	89 e5                	mov    %esp,%ebp
81003fd7:	56                   	push   %esi
81003fd8:	53                   	push   %ebx
81003fd9:	83 ec 10             	sub    $0x10,%esp
81003fdc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003fdf:	8b 45 08             	mov    0x8(%ebp),%eax
81003fe2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003fe5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003fe9:	74 18                	je     81004003 <__srefill_r+0x2f>
81003feb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fee:	8b 40 38             	mov    0x38(%eax),%eax
81003ff1:	85 c0                	test   %eax,%eax
81003ff3:	75 0e                	jne    81004003 <__srefill_r+0x2f>
81003ff5:	83 ec 0c             	sub    $0xc,%esp
81003ff8:	ff 75 f4             	push   -0xc(%ebp)
81003ffb:	e8 41 d0 ff ff       	call   81001041 <__sinit>
81004000:	83 c4 10             	add    $0x10,%esp
81004003:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004007:	98                   	cwtl   
81004008:	25 00 20 00 00       	and    $0x2000,%eax
8100400d:	85 c0                	test   %eax,%eax
8100400f:	75 14                	jne    81004025 <__srefill_r+0x51>
81004011:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004015:	80 cc 20             	or     $0x20,%ah
81004018:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100401c:	8b 43 64             	mov    0x64(%ebx),%eax
8100401f:	80 e4 df             	and    $0xdf,%ah
81004022:	89 43 64             	mov    %eax,0x64(%ebx)
81004025:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100402c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004030:	98                   	cwtl   
81004031:	83 e0 20             	and    $0x20,%eax
81004034:	85 c0                	test   %eax,%eax
81004036:	74 0a                	je     81004042 <__srefill_r+0x6e>
81004038:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100403d:	e9 8c 01 00 00       	jmp    810041ce <__srefill_r+0x1fa>
81004042:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004046:	98                   	cwtl   
81004047:	83 e0 04             	and    $0x4,%eax
8100404a:	85 c0                	test   %eax,%eax
8100404c:	75 79                	jne    810040c7 <__srefill_r+0xf3>
8100404e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004052:	98                   	cwtl   
81004053:	83 e0 10             	and    $0x10,%eax
81004056:	85 c0                	test   %eax,%eax
81004058:	75 1e                	jne    81004078 <__srefill_r+0xa4>
8100405a:	8b 45 08             	mov    0x8(%ebp),%eax
8100405d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004063:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004067:	83 c8 40             	or     $0x40,%eax
8100406a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100406e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004073:	e9 56 01 00 00       	jmp    810041ce <__srefill_r+0x1fa>
81004078:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100407c:	98                   	cwtl   
8100407d:	83 e0 08             	and    $0x8,%eax
81004080:	85 c0                	test   %eax,%eax
81004082:	74 36                	je     810040ba <__srefill_r+0xe6>
81004084:	83 ec 08             	sub    $0x8,%esp
81004087:	53                   	push   %ebx
81004088:	ff 75 08             	push   0x8(%ebp)
8100408b:	e8 ae ca ff ff       	call   81000b3e <_fflush_r>
81004090:	83 c4 10             	add    $0x10,%esp
81004093:	85 c0                	test   %eax,%eax
81004095:	74 0a                	je     810040a1 <__srefill_r+0xcd>
81004097:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100409c:	e9 2d 01 00 00       	jmp    810041ce <__srefill_r+0x1fa>
810040a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040a5:	83 e0 f7             	and    $0xfffffff7,%eax
810040a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040ac:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810040b3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810040ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040be:	83 c8 04             	or     $0x4,%eax
810040c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040c5:	eb 46                	jmp    8100410d <__srefill_r+0x139>
810040c7:	8b 43 30             	mov    0x30(%ebx),%eax
810040ca:	85 c0                	test   %eax,%eax
810040cc:	74 3f                	je     8100410d <__srefill_r+0x139>
810040ce:	8b 53 30             	mov    0x30(%ebx),%edx
810040d1:	8d 43 40             	lea    0x40(%ebx),%eax
810040d4:	39 c2                	cmp    %eax,%edx
810040d6:	74 12                	je     810040ea <__srefill_r+0x116>
810040d8:	8b 43 30             	mov    0x30(%ebx),%eax
810040db:	83 ec 08             	sub    $0x8,%esp
810040de:	50                   	push   %eax
810040df:	ff 75 08             	push   0x8(%ebp)
810040e2:	e8 bc d0 ff ff       	call   810011a3 <_free_r>
810040e7:	83 c4 10             	add    $0x10,%esp
810040ea:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810040f1:	8b 43 3c             	mov    0x3c(%ebx),%eax
810040f4:	89 43 04             	mov    %eax,0x4(%ebx)
810040f7:	8b 43 04             	mov    0x4(%ebx),%eax
810040fa:	85 c0                	test   %eax,%eax
810040fc:	74 0f                	je     8100410d <__srefill_r+0x139>
810040fe:	8b 43 38             	mov    0x38(%ebx),%eax
81004101:	89 03                	mov    %eax,(%ebx)
81004103:	b8 00 00 00 00       	mov    $0x0,%eax
81004108:	e9 c1 00 00 00       	jmp    810041ce <__srefill_r+0x1fa>
8100410d:	8b 43 10             	mov    0x10(%ebx),%eax
81004110:	85 c0                	test   %eax,%eax
81004112:	75 0f                	jne    81004123 <__srefill_r+0x14f>
81004114:	83 ec 08             	sub    $0x8,%esp
81004117:	53                   	push   %ebx
81004118:	ff 75 08             	push   0x8(%ebp)
8100411b:	e8 d8 16 00 00       	call   810057f8 <__smakebuf_r>
81004120:	83 c4 10             	add    $0x10,%esp
81004123:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004127:	98                   	cwtl   
81004128:	83 e0 03             	and    $0x3,%eax
8100412b:	85 c0                	test   %eax,%eax
8100412d:	74 48                	je     81004177 <__srefill_r+0x1a3>
8100412f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004133:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81004137:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100413d:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81004142:	83 ec 08             	sub    $0x8,%esp
81004145:	68 a7 3f 00 81       	push   $0x81003fa7
8100414a:	50                   	push   %eax
8100414b:	e8 8f d5 ff ff       	call   810016df <_fwalk>
81004150:	83 c4 10             	add    $0x10,%esp
81004153:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81004157:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100415b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100415f:	98                   	cwtl   
81004160:	83 e0 09             	and    $0x9,%eax
81004163:	83 f8 09             	cmp    $0x9,%eax
81004166:	75 0f                	jne    81004177 <__srefill_r+0x1a3>
81004168:	83 ec 08             	sub    $0x8,%esp
8100416b:	53                   	push   %ebx
8100416c:	ff 75 08             	push   0x8(%ebp)
8100416f:	e8 a4 c7 ff ff       	call   81000918 <__sflush_r>
81004174:	83 c4 10             	add    $0x10,%esp
81004177:	8b 43 10             	mov    0x10(%ebx),%eax
8100417a:	89 03                	mov    %eax,(%ebx)
8100417c:	8b 43 20             	mov    0x20(%ebx),%eax
8100417f:	8b 73 14             	mov    0x14(%ebx),%esi
81004182:	8b 0b                	mov    (%ebx),%ecx
81004184:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004187:	56                   	push   %esi
81004188:	51                   	push   %ecx
81004189:	52                   	push   %edx
8100418a:	ff 75 08             	push   0x8(%ebp)
8100418d:	ff d0                	call   *%eax
8100418f:	83 c4 10             	add    $0x10,%esp
81004192:	89 43 04             	mov    %eax,0x4(%ebx)
81004195:	8b 43 04             	mov    0x4(%ebx),%eax
81004198:	85 c0                	test   %eax,%eax
8100419a:	7f 2d                	jg     810041c9 <__srefill_r+0x1f5>
8100419c:	8b 43 04             	mov    0x4(%ebx),%eax
8100419f:	85 c0                	test   %eax,%eax
810041a1:	75 0d                	jne    810041b0 <__srefill_r+0x1dc>
810041a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041a7:	83 c8 20             	or     $0x20,%eax
810041aa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041ae:	eb 12                	jmp    810041c2 <__srefill_r+0x1ee>
810041b0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810041b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041bb:	83 c8 40             	or     $0x40,%eax
810041be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041c7:	eb 05                	jmp    810041ce <__srefill_r+0x1fa>
810041c9:	b8 00 00 00 00       	mov    $0x0,%eax
810041ce:	8d 65 f8             	lea    -0x8(%ebp),%esp
810041d1:	5b                   	pop    %ebx
810041d2:	5e                   	pop    %esi
810041d3:	5d                   	pop    %ebp
810041d4:	c3                   	ret    

810041d5 <_sbrk_r>:
810041d5:	55                   	push   %ebp
810041d6:	89 e5                	mov    %esp,%ebp
810041d8:	83 ec 18             	sub    $0x18,%esp
810041db:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
810041e2:	00 00 00 
810041e5:	83 ec 0c             	sub    $0xc,%esp
810041e8:	ff 75 0c             	push   0xc(%ebp)
810041eb:	e8 2b c6 ff ff       	call   8100081b <sbrk>
810041f0:	83 c4 10             	add    $0x10,%esp
810041f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810041f6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810041fa:	75 14                	jne    81004210 <_sbrk_r+0x3b>
810041fc:	a1 14 80 00 81       	mov    0x81008014,%eax
81004201:	85 c0                	test   %eax,%eax
81004203:	74 0b                	je     81004210 <_sbrk_r+0x3b>
81004205:	8b 15 14 80 00 81    	mov    0x81008014,%edx
8100420b:	8b 45 08             	mov    0x8(%ebp),%eax
8100420e:	89 10                	mov    %edx,(%eax)
81004210:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004213:	c9                   	leave  
81004214:	c3                   	ret    

81004215 <__sread>:
81004215:	55                   	push   %ebp
81004216:	89 e5                	mov    %esp,%ebp
81004218:	56                   	push   %esi
81004219:	53                   	push   %ebx
8100421a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100421d:	8b 55 14             	mov    0x14(%ebp),%edx
81004220:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004224:	98                   	cwtl   
81004225:	52                   	push   %edx
81004226:	ff 75 10             	push   0x10(%ebp)
81004229:	50                   	push   %eax
8100422a:	ff 75 08             	push   0x8(%ebp)
8100422d:	e8 6f 19 00 00       	call   81005ba1 <_read_r>
81004232:	83 c4 10             	add    $0x10,%esp
81004235:	89 c6                	mov    %eax,%esi
81004237:	85 f6                	test   %esi,%esi
81004239:	78 0a                	js     81004245 <__sread+0x30>
8100423b:	8b 43 50             	mov    0x50(%ebx),%eax
8100423e:	01 f0                	add    %esi,%eax
81004240:	89 43 50             	mov    %eax,0x50(%ebx)
81004243:	eb 0b                	jmp    81004250 <__sread+0x3b>
81004245:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004249:	80 e4 ef             	and    $0xef,%ah
8100424c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004250:	89 f0                	mov    %esi,%eax
81004252:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004255:	5b                   	pop    %ebx
81004256:	5e                   	pop    %esi
81004257:	5d                   	pop    %ebp
81004258:	c3                   	ret    

81004259 <__seofread>:
81004259:	55                   	push   %ebp
8100425a:	89 e5                	mov    %esp,%ebp
8100425c:	b8 00 00 00 00       	mov    $0x0,%eax
81004261:	5d                   	pop    %ebp
81004262:	c3                   	ret    

81004263 <__swrite>:
81004263:	55                   	push   %ebp
81004264:	89 e5                	mov    %esp,%ebp
81004266:	53                   	push   %ebx
81004267:	83 ec 14             	sub    $0x14,%esp
8100426a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100426d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004271:	98                   	cwtl   
81004272:	25 00 01 00 00       	and    $0x100,%eax
81004277:	85 c0                	test   %eax,%eax
81004279:	74 15                	je     81004290 <__swrite+0x2d>
8100427b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100427f:	98                   	cwtl   
81004280:	6a 02                	push   $0x2
81004282:	6a 00                	push   $0x0
81004284:	50                   	push   %eax
81004285:	ff 75 08             	push   0x8(%ebp)
81004288:	e8 25 15 00 00       	call   810057b2 <_lseek_r>
8100428d:	83 c4 10             	add    $0x10,%esp
81004290:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004294:	80 e4 ef             	and    $0xef,%ah
81004297:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100429b:	8b 55 14             	mov    0x14(%ebp),%edx
8100429e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810042a2:	98                   	cwtl   
810042a3:	52                   	push   %edx
810042a4:	ff 75 10             	push   0x10(%ebp)
810042a7:	50                   	push   %eax
810042a8:	ff 75 08             	push   0x8(%ebp)
810042ab:	e8 42 07 00 00       	call   810049f2 <_write_r>
810042b0:	83 c4 10             	add    $0x10,%esp
810042b3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042b9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810042bc:	c9                   	leave  
810042bd:	c3                   	ret    

810042be <__sseek>:
810042be:	55                   	push   %ebp
810042bf:	89 e5                	mov    %esp,%ebp
810042c1:	56                   	push   %esi
810042c2:	53                   	push   %ebx
810042c3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810042c6:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810042ca:	98                   	cwtl   
810042cb:	ff 75 14             	push   0x14(%ebp)
810042ce:	ff 75 10             	push   0x10(%ebp)
810042d1:	50                   	push   %eax
810042d2:	ff 75 08             	push   0x8(%ebp)
810042d5:	e8 d8 14 00 00       	call   810057b2 <_lseek_r>
810042da:	83 c4 10             	add    $0x10,%esp
810042dd:	89 c6                	mov    %eax,%esi
810042df:	83 fe ff             	cmp    $0xffffffff,%esi
810042e2:	75 0d                	jne    810042f1 <__sseek+0x33>
810042e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042e8:	80 e4 ef             	and    $0xef,%ah
810042eb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042ef:	eb 0e                	jmp    810042ff <__sseek+0x41>
810042f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042f5:	80 cc 10             	or     $0x10,%ah
810042f8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810042fc:	89 73 50             	mov    %esi,0x50(%ebx)
810042ff:	89 f0                	mov    %esi,%eax
81004301:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004304:	5b                   	pop    %ebx
81004305:	5e                   	pop    %esi
81004306:	5d                   	pop    %ebp
81004307:	c3                   	ret    

81004308 <__sclose>:
81004308:	55                   	push   %ebp
81004309:	89 e5                	mov    %esp,%ebp
8100430b:	83 ec 18             	sub    $0x18,%esp
8100430e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004311:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004314:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004317:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100431b:	98                   	cwtl   
8100431c:	83 ec 08             	sub    $0x8,%esp
8100431f:	50                   	push   %eax
81004320:	ff 75 08             	push   0x8(%ebp)
81004323:	e8 80 09 00 00       	call   81004ca8 <_close_r>
81004328:	83 c4 10             	add    $0x10,%esp
8100432b:	c9                   	leave  
8100432c:	c3                   	ret    
8100432d:	66 90                	xchg   %ax,%ax
8100432f:	90                   	nop

81004330 <strchr>:
81004330:	55                   	push   %ebp
81004331:	89 e5                	mov    %esp,%ebp
81004333:	57                   	push   %edi
81004334:	53                   	push   %ebx
81004335:	31 db                	xor    %ebx,%ebx
81004337:	8b 7d 08             	mov    0x8(%ebp),%edi
8100433a:	02 5d 0c             	add    0xc(%ebp),%bl
8100433d:	0f 84 98 00 00 00    	je     810043db <L25>
81004343:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004349:	74 37                	je     81004382 <L5>
8100434b:	89 f8                	mov    %edi,%eax
8100434d:	8a 08                	mov    (%eax),%cl
8100434f:	84 c9                	test   %cl,%cl
81004351:	74 7b                	je     810043ce <L14>
81004353:	38 d9                	cmp    %bl,%cl
81004355:	74 7d                	je     810043d4 <L19>
81004357:	47                   	inc    %edi
81004358:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100435e:	74 22                	je     81004382 <L5>
81004360:	89 f8                	mov    %edi,%eax
81004362:	8a 08                	mov    (%eax),%cl
81004364:	84 c9                	test   %cl,%cl
81004366:	74 66                	je     810043ce <L14>
81004368:	38 d9                	cmp    %bl,%cl
8100436a:	74 68                	je     810043d4 <L19>
8100436c:	47                   	inc    %edi
8100436d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004373:	74 0d                	je     81004382 <L5>
81004375:	89 f8                	mov    %edi,%eax
81004377:	8a 08                	mov    (%eax),%cl
81004379:	84 c9                	test   %cl,%cl
8100437b:	74 51                	je     810043ce <L14>
8100437d:	38 d9                	cmp    %bl,%cl
8100437f:	74 53                	je     810043d4 <L19>
81004381:	47                   	inc    %edi

81004382 <L5>:
81004382:	89 d9                	mov    %ebx,%ecx
81004384:	c1 e3 08             	shl    $0x8,%ebx
81004387:	83 ef 04             	sub    $0x4,%edi
8100438a:	09 cb                	or     %ecx,%ebx
8100438c:	89 da                	mov    %ebx,%edx
8100438e:	c1 e3 10             	shl    $0x10,%ebx
81004391:	09 d3                	or     %edx,%ebx

81004393 <L10>:
81004393:	83 c7 04             	add    $0x4,%edi
81004396:	8b 0f                	mov    (%edi),%ecx
81004398:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100439e:	89 c8                	mov    %ecx,%eax
810043a0:	f7 d0                	not    %eax
810043a2:	21 c2                	and    %eax,%edx
810043a4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810043aa:	75 14                	jne    810043c0 <L9>
810043ac:	31 d9                	xor    %ebx,%ecx
810043ae:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810043b4:	f7 d1                	not    %ecx
810043b6:	21 ca                	and    %ecx,%edx
810043b8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810043be:	74 d3                	je     81004393 <L10>

810043c0 <L9>:
810043c0:	8d 47 ff             	lea    -0x1(%edi),%eax

810043c3 <L15>:
810043c3:	40                   	inc    %eax
810043c4:	8a 10                	mov    (%eax),%dl
810043c6:	84 d2                	test   %dl,%dl
810043c8:	74 04                	je     810043ce <L14>
810043ca:	38 da                	cmp    %bl,%dl
810043cc:	75 f5                	jne    810043c3 <L15>

810043ce <L14>:
810043ce:	38 18                	cmp    %bl,(%eax)
810043d0:	74 02                	je     810043d4 <L19>
810043d2:	31 c0                	xor    %eax,%eax

810043d4 <L19>:
810043d4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810043d7:	5b                   	pop    %ebx
810043d8:	5f                   	pop    %edi
810043d9:	c9                   	leave  
810043da:	c3                   	ret    

810043db <L25>:
810043db:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043e1:	74 2b                	je     8100440e <L26>
810043e3:	89 f8                	mov    %edi,%eax
810043e5:	8a 08                	mov    (%eax),%cl
810043e7:	84 c9                	test   %cl,%cl
810043e9:	74 e9                	je     810043d4 <L19>
810043eb:	47                   	inc    %edi
810043ec:	f7 c7 03 00 00 00    	test   $0x3,%edi
810043f2:	74 1a                	je     8100440e <L26>
810043f4:	89 f8                	mov    %edi,%eax
810043f6:	8a 08                	mov    (%eax),%cl
810043f8:	84 c9                	test   %cl,%cl
810043fa:	74 d8                	je     810043d4 <L19>
810043fc:	47                   	inc    %edi
810043fd:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004403:	74 09                	je     8100440e <L26>
81004405:	89 f8                	mov    %edi,%eax
81004407:	8a 08                	mov    (%eax),%cl
81004409:	84 c9                	test   %cl,%cl
8100440b:	74 c7                	je     810043d4 <L19>
8100440d:	47                   	inc    %edi

8100440e <L26>:
8100440e:	83 ef 04             	sub    $0x4,%edi

81004411 <L27>:
81004411:	83 c7 04             	add    $0x4,%edi
81004414:	8b 0f                	mov    (%edi),%ecx
81004416:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100441c:	89 c8                	mov    %ecx,%eax
8100441e:	f7 d0                	not    %eax
81004420:	21 c2                	and    %eax,%edx
81004422:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81004428:	74 e7                	je     81004411 <L27>
8100442a:	eb 94                	jmp    810043c0 <L9>

8100442c <strcmp>:
8100442c:	55                   	push   %ebp
8100442d:	89 e5                	mov    %esp,%ebp
8100442f:	83 ec 10             	sub    $0x10,%esp
81004432:	8b 55 08             	mov    0x8(%ebp),%edx
81004435:	8b 45 0c             	mov    0xc(%ebp),%eax
81004438:	09 d0                	or     %edx,%eax
8100443a:	83 e0 03             	and    $0x3,%eax
8100443d:	85 c0                	test   %eax,%eax
8100443f:	75 5e                	jne    8100449f <strcmp+0x73>
81004441:	8b 45 08             	mov    0x8(%ebp),%eax
81004444:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004447:	8b 45 0c             	mov    0xc(%ebp),%eax
8100444a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100444d:	eb 2c                	jmp    8100447b <strcmp+0x4f>
8100444f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004452:	8b 00                	mov    (%eax),%eax
81004454:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100445a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100445d:	8b 00                	mov    (%eax),%eax
8100445f:	f7 d0                	not    %eax
81004461:	21 d0                	and    %edx,%eax
81004463:	25 80 80 80 80       	and    $0x80808080,%eax
81004468:	85 c0                	test   %eax,%eax
8100446a:	74 07                	je     81004473 <strcmp+0x47>
8100446c:	b8 00 00 00 00       	mov    $0x0,%eax
81004471:	eb 5c                	jmp    810044cf <strcmp+0xa3>
81004473:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004477:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100447b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100447e:	8b 10                	mov    (%eax),%edx
81004480:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004483:	8b 00                	mov    (%eax),%eax
81004485:	39 c2                	cmp    %eax,%edx
81004487:	74 c6                	je     8100444f <strcmp+0x23>
81004489:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100448c:	89 45 08             	mov    %eax,0x8(%ebp)
8100448f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004492:	89 45 0c             	mov    %eax,0xc(%ebp)
81004495:	eb 08                	jmp    8100449f <strcmp+0x73>
81004497:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100449b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100449f:	8b 45 08             	mov    0x8(%ebp),%eax
810044a2:	0f b6 00             	movzbl (%eax),%eax
810044a5:	84 c0                	test   %al,%al
810044a7:	74 10                	je     810044b9 <strcmp+0x8d>
810044a9:	8b 45 08             	mov    0x8(%ebp),%eax
810044ac:	0f b6 10             	movzbl (%eax),%edx
810044af:	8b 45 0c             	mov    0xc(%ebp),%eax
810044b2:	0f b6 00             	movzbl (%eax),%eax
810044b5:	38 c2                	cmp    %al,%dl
810044b7:	74 de                	je     81004497 <strcmp+0x6b>
810044b9:	8b 45 08             	mov    0x8(%ebp),%eax
810044bc:	0f b6 00             	movzbl (%eax),%eax
810044bf:	0f b6 d0             	movzbl %al,%edx
810044c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810044c5:	0f b6 00             	movzbl (%eax),%eax
810044c8:	0f b6 c8             	movzbl %al,%ecx
810044cb:	89 d0                	mov    %edx,%eax
810044cd:	29 c8                	sub    %ecx,%eax
810044cf:	c9                   	leave  
810044d0:	c3                   	ret    
810044d1:	66 90                	xchg   %ax,%ax
810044d3:	66 90                	xchg   %ax,%ax
810044d5:	66 90                	xchg   %ax,%ax
810044d7:	66 90                	xchg   %ax,%ax
810044d9:	66 90                	xchg   %ax,%ax
810044db:	66 90                	xchg   %ax,%ax
810044dd:	66 90                	xchg   %ax,%ax
810044df:	90                   	nop

810044e0 <strlen>:
810044e0:	55                   	push   %ebp
810044e1:	89 e5                	mov    %esp,%ebp
810044e3:	57                   	push   %edi
810044e4:	8b 55 08             	mov    0x8(%ebp),%edx
810044e7:	89 d7                	mov    %edx,%edi
810044e9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044ef:	74 25                	je     81004516 <L5>
810044f1:	8a 0f                	mov    (%edi),%cl
810044f3:	47                   	inc    %edi
810044f4:	84 c9                	test   %cl,%cl
810044f6:	74 56                	je     8100454e <L15>
810044f8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044fe:	74 16                	je     81004516 <L5>
81004500:	8a 0f                	mov    (%edi),%cl
81004502:	47                   	inc    %edi
81004503:	84 c9                	test   %cl,%cl
81004505:	74 47                	je     8100454e <L15>
81004507:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100450d:	74 07                	je     81004516 <L5>
8100450f:	8a 0f                	mov    (%edi),%cl
81004511:	47                   	inc    %edi
81004512:	84 c9                	test   %cl,%cl
81004514:	74 38                	je     8100454e <L15>

81004516 <L5>:
81004516:	83 ef 04             	sub    $0x4,%edi
81004519:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004520 <L10>:
81004520:	83 c7 04             	add    $0x4,%edi
81004523:	8b 0f                	mov    (%edi),%ecx
81004525:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100452b:	f7 d1                	not    %ecx
8100452d:	21 c8                	and    %ecx,%eax
8100452f:	a9 80 80 80 80       	test   $0x80808080,%eax
81004534:	74 ea                	je     81004520 <L10>
81004536:	f7 d1                	not    %ecx
81004538:	47                   	inc    %edi
81004539:	84 c9                	test   %cl,%cl
8100453b:	74 11                	je     8100454e <L15>
8100453d:	47                   	inc    %edi
8100453e:	c1 e9 08             	shr    $0x8,%ecx
81004541:	84 c9                	test   %cl,%cl
81004543:	74 09                	je     8100454e <L15>
81004545:	47                   	inc    %edi
81004546:	c1 e9 08             	shr    $0x8,%ecx
81004549:	84 c9                	test   %cl,%cl
8100454b:	74 01                	je     8100454e <L15>
8100454d:	47                   	inc    %edi

8100454e <L15>:
8100454e:	29 d7                	sub    %edx,%edi
81004550:	8d 47 ff             	lea    -0x1(%edi),%eax
81004553:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004556:	5f                   	pop    %edi
81004557:	c9                   	leave  
81004558:	c3                   	ret    

81004559 <strtok>:
81004559:	55                   	push   %ebp
8100455a:	89 e5                	mov    %esp,%ebp
8100455c:	83 ec 18             	sub    $0x18,%esp
8100455f:	8b 55 08             	mov    0x8(%ebp),%edx
81004562:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004565:	a1 c4 73 00 81       	mov    0x810073c4,%eax
8100456a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100456d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004570:	83 c0 5c             	add    $0x5c,%eax
81004573:	6a 01                	push   $0x1
81004575:	50                   	push   %eax
81004576:	51                   	push   %ecx
81004577:	52                   	push   %edx
81004578:	e8 05 00 00 00       	call   81004582 <__strtok_r>
8100457d:	83 c4 10             	add    $0x10,%esp
81004580:	c9                   	leave  
81004581:	c3                   	ret    

81004582 <__strtok_r>:
81004582:	55                   	push   %ebp
81004583:	89 e5                	mov    %esp,%ebp
81004585:	57                   	push   %edi
81004586:	56                   	push   %esi
81004587:	53                   	push   %ebx
81004588:	83 ec 10             	sub    $0x10,%esp
8100458b:	8b 45 08             	mov    0x8(%ebp),%eax
8100458e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004591:	85 c0                	test   %eax,%eax
81004593:	75 13                	jne    810045a8 <__strtok_r+0x26>
81004595:	8b 45 10             	mov    0x10(%ebp),%eax
81004598:	8b 00                	mov    (%eax),%eax
8100459a:	85 c0                	test   %eax,%eax
8100459c:	75 0a                	jne    810045a8 <__strtok_r+0x26>
8100459e:	b8 00 00 00 00       	mov    $0x0,%eax
810045a3:	e9 92 00 00 00       	jmp    8100463a <__strtok_r+0xb8>
810045a8:	90                   	nop
810045a9:	89 c2                	mov    %eax,%edx
810045ab:	8d 42 01             	lea    0x1(%edx),%eax
810045ae:	0f b6 12             	movzbl (%edx),%edx
810045b1:	0f be f2             	movsbl %dl,%esi
810045b4:	89 cf                	mov    %ecx,%edi
810045b6:	eb 1c                	jmp    810045d4 <__strtok_r+0x52>
810045b8:	39 de                	cmp    %ebx,%esi
810045ba:	75 18                	jne    810045d4 <__strtok_r+0x52>
810045bc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810045c0:	74 02                	je     810045c4 <__strtok_r+0x42>
810045c2:	eb e5                	jmp    810045a9 <__strtok_r+0x27>
810045c4:	8b 55 10             	mov    0x10(%ebp),%edx
810045c7:	89 02                	mov    %eax,(%edx)
810045c9:	8d 50 ff             	lea    -0x1(%eax),%edx
810045cc:	c6 02 00             	movb   $0x0,(%edx)
810045cf:	83 e8 01             	sub    $0x1,%eax
810045d2:	eb 66                	jmp    8100463a <__strtok_r+0xb8>
810045d4:	89 fa                	mov    %edi,%edx
810045d6:	8d 7a 01             	lea    0x1(%edx),%edi
810045d9:	0f b6 12             	movzbl (%edx),%edx
810045dc:	0f be da             	movsbl %dl,%ebx
810045df:	85 db                	test   %ebx,%ebx
810045e1:	75 d5                	jne    810045b8 <__strtok_r+0x36>
810045e3:	85 f6                	test   %esi,%esi
810045e5:	75 10                	jne    810045f7 <__strtok_r+0x75>
810045e7:	8b 45 10             	mov    0x10(%ebp),%eax
810045ea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045f0:	b8 00 00 00 00       	mov    $0x0,%eax
810045f5:	eb 43                	jmp    8100463a <__strtok_r+0xb8>
810045f7:	8d 50 ff             	lea    -0x1(%eax),%edx
810045fa:	89 55 f0             	mov    %edx,-0x10(%ebp)
810045fd:	89 c2                	mov    %eax,%edx
810045ff:	8d 42 01             	lea    0x1(%edx),%eax
81004602:	0f b6 12             	movzbl (%edx),%edx
81004605:	0f be f2             	movsbl %dl,%esi
81004608:	89 cf                	mov    %ecx,%edi
8100460a:	89 fa                	mov    %edi,%edx
8100460c:	8d 7a 01             	lea    0x1(%edx),%edi
8100460f:	0f b6 12             	movzbl (%edx),%edx
81004612:	0f be da             	movsbl %dl,%ebx
81004615:	39 f3                	cmp    %esi,%ebx
81004617:	75 1b                	jne    81004634 <__strtok_r+0xb2>
81004619:	85 f6                	test   %esi,%esi
8100461b:	75 07                	jne    81004624 <__strtok_r+0xa2>
8100461d:	b8 00 00 00 00       	mov    $0x0,%eax
81004622:	eb 06                	jmp    8100462a <__strtok_r+0xa8>
81004624:	8d 50 ff             	lea    -0x1(%eax),%edx
81004627:	c6 02 00             	movb   $0x0,(%edx)
8100462a:	8b 55 10             	mov    0x10(%ebp),%edx
8100462d:	89 02                	mov    %eax,(%edx)
8100462f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004632:	eb 06                	jmp    8100463a <__strtok_r+0xb8>
81004634:	85 db                	test   %ebx,%ebx
81004636:	75 d2                	jne    8100460a <__strtok_r+0x88>
81004638:	eb c3                	jmp    810045fd <__strtok_r+0x7b>
8100463a:	83 c4 10             	add    $0x10,%esp
8100463d:	5b                   	pop    %ebx
8100463e:	5e                   	pop    %esi
8100463f:	5f                   	pop    %edi
81004640:	5d                   	pop    %ebp
81004641:	c3                   	ret    

81004642 <strtok_r>:
81004642:	55                   	push   %ebp
81004643:	89 e5                	mov    %esp,%ebp
81004645:	8b 45 08             	mov    0x8(%ebp),%eax
81004648:	8b 55 0c             	mov    0xc(%ebp),%edx
8100464b:	6a 01                	push   $0x1
8100464d:	ff 75 10             	push   0x10(%ebp)
81004650:	52                   	push   %edx
81004651:	50                   	push   %eax
81004652:	e8 2b ff ff ff       	call   81004582 <__strtok_r>
81004657:	83 c4 10             	add    $0x10,%esp
8100465a:	c9                   	leave  
8100465b:	c3                   	ret    

8100465c <__locale_ctype_ptr_l>:
8100465c:	55                   	push   %ebp
8100465d:	89 e5                	mov    %esp,%ebp
8100465f:	b8 60 6e 00 81       	mov    $0x81006e60,%eax
81004664:	5d                   	pop    %ebp
81004665:	c3                   	ret    

81004666 <__get_global_locale>:
81004666:	55                   	push   %ebp
81004667:	89 e5                	mov    %esp,%ebp
81004669:	b8 00 78 00 81       	mov    $0x81007800,%eax
8100466e:	5d                   	pop    %ebp
8100466f:	c3                   	ret    

81004670 <__get_current_locale>:
81004670:	55                   	push   %ebp
81004671:	89 e5                	mov    %esp,%ebp
81004673:	e8 ee ff ff ff       	call   81004666 <__get_global_locale>
81004678:	5d                   	pop    %ebp
81004679:	c3                   	ret    

8100467a <_strtol_l>:
8100467a:	55                   	push   %ebp
8100467b:	89 e5                	mov    %esp,%ebp
8100467d:	57                   	push   %edi
8100467e:	56                   	push   %esi
8100467f:	53                   	push   %ebx
81004680:	83 ec 1c             	sub    $0x1c,%esp
81004683:	8b 75 0c             	mov    0xc(%ebp),%esi
81004686:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100468d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004691:	78 0c                	js     8100469f <_strtol_l+0x25>
81004693:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81004697:	74 06                	je     8100469f <_strtol_l+0x25>
81004699:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100469d:	7e 15                	jle    810046b4 <_strtol_l+0x3a>
8100469f:	e8 44 06 00 00       	call   81004ce8 <__errno>
810046a4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810046aa:	b8 00 00 00 00       	mov    $0x0,%eax
810046af:	e9 90 01 00 00       	jmp    81004844 <_strtol_l+0x1ca>
810046b4:	89 f0                	mov    %esi,%eax
810046b6:	8d 70 01             	lea    0x1(%eax),%esi
810046b9:	0f b6 00             	movzbl (%eax),%eax
810046bc:	0f b6 d8             	movzbl %al,%ebx
810046bf:	83 ec 0c             	sub    $0xc,%esp
810046c2:	ff 75 18             	push   0x18(%ebp)
810046c5:	e8 92 ff ff ff       	call   8100465c <__locale_ctype_ptr_l>
810046ca:	83 c4 10             	add    $0x10,%esp
810046cd:	89 da                	mov    %ebx,%edx
810046cf:	83 c2 01             	add    $0x1,%edx
810046d2:	01 d0                	add    %edx,%eax
810046d4:	0f b6 00             	movzbl (%eax),%eax
810046d7:	0f be c0             	movsbl %al,%eax
810046da:	83 e0 08             	and    $0x8,%eax
810046dd:	85 c0                	test   %eax,%eax
810046df:	75 d3                	jne    810046b4 <_strtol_l+0x3a>
810046e1:	83 fb 2d             	cmp    $0x2d,%ebx
810046e4:	75 14                	jne    810046fa <_strtol_l+0x80>
810046e6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810046ed:	89 f0                	mov    %esi,%eax
810046ef:	8d 70 01             	lea    0x1(%eax),%esi
810046f2:	0f b6 00             	movzbl (%eax),%eax
810046f5:	0f b6 d8             	movzbl %al,%ebx
810046f8:	eb 10                	jmp    8100470a <_strtol_l+0x90>
810046fa:	83 fb 2b             	cmp    $0x2b,%ebx
810046fd:	75 0b                	jne    8100470a <_strtol_l+0x90>
810046ff:	89 f0                	mov    %esi,%eax
81004701:	8d 70 01             	lea    0x1(%eax),%esi
81004704:	0f b6 00             	movzbl (%eax),%eax
81004707:	0f b6 d8             	movzbl %al,%ebx
8100470a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100470e:	74 06                	je     81004716 <_strtol_l+0x9c>
81004710:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81004714:	75 26                	jne    8100473c <_strtol_l+0xc2>
81004716:	83 fb 30             	cmp    $0x30,%ebx
81004719:	75 21                	jne    8100473c <_strtol_l+0xc2>
8100471b:	0f b6 06             	movzbl (%esi),%eax
8100471e:	3c 78                	cmp    $0x78,%al
81004720:	74 07                	je     81004729 <_strtol_l+0xaf>
81004722:	0f b6 06             	movzbl (%esi),%eax
81004725:	3c 58                	cmp    $0x58,%al
81004727:	75 13                	jne    8100473c <_strtol_l+0xc2>
81004729:	8d 46 01             	lea    0x1(%esi),%eax
8100472c:	0f b6 00             	movzbl (%eax),%eax
8100472f:	0f b6 d8             	movzbl %al,%ebx
81004732:	83 c6 02             	add    $0x2,%esi
81004735:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100473c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004740:	75 14                	jne    81004756 <_strtol_l+0xdc>
81004742:	83 fb 30             	cmp    $0x30,%ebx
81004745:	75 07                	jne    8100474e <_strtol_l+0xd4>
81004747:	b8 08 00 00 00       	mov    $0x8,%eax
8100474c:	eb 05                	jmp    81004753 <_strtol_l+0xd9>
8100474e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004753:	89 45 14             	mov    %eax,0x14(%ebp)
81004756:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100475a:	74 07                	je     81004763 <_strtol_l+0xe9>
8100475c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004761:	eb 05                	jmp    81004768 <_strtol_l+0xee>
81004763:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004768:	89 c7                	mov    %eax,%edi
8100476a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100476d:	89 f8                	mov    %edi,%eax
8100476f:	ba 00 00 00 00       	mov    $0x0,%edx
81004774:	f7 f1                	div    %ecx
81004776:	89 d0                	mov    %edx,%eax
81004778:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100477b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100477e:	89 f8                	mov    %edi,%eax
81004780:	ba 00 00 00 00       	mov    $0x0,%edx
81004785:	f7 f1                	div    %ecx
81004787:	89 c2                	mov    %eax,%edx
81004789:	bf 00 00 00 00       	mov    $0x0,%edi
8100478e:	b9 00 00 00 00       	mov    $0x0,%ecx
81004793:	83 fb 2f             	cmp    $0x2f,%ebx
81004796:	7e 0a                	jle    810047a2 <_strtol_l+0x128>
81004798:	83 fb 39             	cmp    $0x39,%ebx
8100479b:	7f 05                	jg     810047a2 <_strtol_l+0x128>
8100479d:	83 eb 30             	sub    $0x30,%ebx
810047a0:	eb 1c                	jmp    810047be <_strtol_l+0x144>
810047a2:	83 fb 40             	cmp    $0x40,%ebx
810047a5:	7e 0a                	jle    810047b1 <_strtol_l+0x137>
810047a7:	83 fb 5a             	cmp    $0x5a,%ebx
810047aa:	7f 05                	jg     810047b1 <_strtol_l+0x137>
810047ac:	83 eb 37             	sub    $0x37,%ebx
810047af:	eb 0d                	jmp    810047be <_strtol_l+0x144>
810047b1:	83 fb 60             	cmp    $0x60,%ebx
810047b4:	7e 46                	jle    810047fc <_strtol_l+0x182>
810047b6:	83 fb 7a             	cmp    $0x7a,%ebx
810047b9:	7f 41                	jg     810047fc <_strtol_l+0x182>
810047bb:	83 eb 57             	sub    $0x57,%ebx
810047be:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810047c1:	7d 38                	jge    810047fb <_strtol_l+0x181>
810047c3:	89 c8                	mov    %ecx,%eax
810047c5:	85 c0                	test   %eax,%eax
810047c7:	78 0f                	js     810047d8 <_strtol_l+0x15e>
810047c9:	89 d0                	mov    %edx,%eax
810047cb:	39 c7                	cmp    %eax,%edi
810047cd:	77 09                	ja     810047d8 <_strtol_l+0x15e>
810047cf:	39 c7                	cmp    %eax,%edi
810047d1:	75 0c                	jne    810047df <_strtol_l+0x165>
810047d3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
810047d6:	7e 07                	jle    810047df <_strtol_l+0x165>
810047d8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
810047dd:	eb 0f                	jmp    810047ee <_strtol_l+0x174>
810047df:	b9 01 00 00 00       	mov    $0x1,%ecx
810047e4:	8b 45 14             	mov    0x14(%ebp),%eax
810047e7:	0f af f8             	imul   %eax,%edi
810047ea:	89 d8                	mov    %ebx,%eax
810047ec:	01 c7                	add    %eax,%edi
810047ee:	89 f0                	mov    %esi,%eax
810047f0:	8d 70 01             	lea    0x1(%eax),%esi
810047f3:	0f b6 00             	movzbl (%eax),%eax
810047f6:	0f b6 d8             	movzbl %al,%ebx
810047f9:	eb 98                	jmp    81004793 <_strtol_l+0x119>
810047fb:	90                   	nop
810047fc:	89 c8                	mov    %ecx,%eax
810047fe:	85 c0                	test   %eax,%eax
81004800:	79 1f                	jns    81004821 <_strtol_l+0x1a7>
81004802:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004806:	74 07                	je     8100480f <_strtol_l+0x195>
81004808:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100480d:	eb 05                	jmp    81004814 <_strtol_l+0x19a>
8100480f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004814:	89 c7                	mov    %eax,%edi
81004816:	8b 45 08             	mov    0x8(%ebp),%eax
81004819:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100481f:	eb 08                	jmp    81004829 <_strtol_l+0x1af>
81004821:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004825:	74 02                	je     81004829 <_strtol_l+0x1af>
81004827:	f7 df                	neg    %edi
81004829:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100482d:	74 13                	je     81004842 <_strtol_l+0x1c8>
8100482f:	89 c8                	mov    %ecx,%eax
81004831:	85 c0                	test   %eax,%eax
81004833:	74 05                	je     8100483a <_strtol_l+0x1c0>
81004835:	8d 46 ff             	lea    -0x1(%esi),%eax
81004838:	eb 03                	jmp    8100483d <_strtol_l+0x1c3>
8100483a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100483d:	8b 55 10             	mov    0x10(%ebp),%edx
81004840:	89 02                	mov    %eax,(%edx)
81004842:	89 f8                	mov    %edi,%eax
81004844:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004847:	5b                   	pop    %ebx
81004848:	5e                   	pop    %esi
81004849:	5f                   	pop    %edi
8100484a:	5d                   	pop    %ebp
8100484b:	c3                   	ret    

8100484c <_strtol_r>:
8100484c:	55                   	push   %ebp
8100484d:	89 e5                	mov    %esp,%ebp
8100484f:	83 ec 08             	sub    $0x8,%esp
81004852:	e8 19 fe ff ff       	call   81004670 <__get_current_locale>
81004857:	83 ec 0c             	sub    $0xc,%esp
8100485a:	50                   	push   %eax
8100485b:	ff 75 14             	push   0x14(%ebp)
8100485e:	ff 75 10             	push   0x10(%ebp)
81004861:	ff 75 0c             	push   0xc(%ebp)
81004864:	ff 75 08             	push   0x8(%ebp)
81004867:	e8 0e fe ff ff       	call   8100467a <_strtol_l>
8100486c:	83 c4 20             	add    $0x20,%esp
8100486f:	c9                   	leave  
81004870:	c3                   	ret    

81004871 <strtol_l>:
81004871:	55                   	push   %ebp
81004872:	89 e5                	mov    %esp,%ebp
81004874:	83 ec 08             	sub    $0x8,%esp
81004877:	a1 c4 73 00 81       	mov    0x810073c4,%eax
8100487c:	83 ec 0c             	sub    $0xc,%esp
8100487f:	ff 75 14             	push   0x14(%ebp)
81004882:	ff 75 10             	push   0x10(%ebp)
81004885:	ff 75 0c             	push   0xc(%ebp)
81004888:	ff 75 08             	push   0x8(%ebp)
8100488b:	50                   	push   %eax
8100488c:	e8 e9 fd ff ff       	call   8100467a <_strtol_l>
81004891:	83 c4 20             	add    $0x20,%esp
81004894:	c9                   	leave  
81004895:	c3                   	ret    

81004896 <strtol>:
81004896:	55                   	push   %ebp
81004897:	89 e5                	mov    %esp,%ebp
81004899:	83 ec 08             	sub    $0x8,%esp
8100489c:	e8 cf fd ff ff       	call   81004670 <__get_current_locale>
810048a1:	8b 15 c4 73 00 81    	mov    0x810073c4,%edx
810048a7:	83 ec 0c             	sub    $0xc,%esp
810048aa:	50                   	push   %eax
810048ab:	ff 75 10             	push   0x10(%ebp)
810048ae:	ff 75 0c             	push   0xc(%ebp)
810048b1:	ff 75 08             	push   0x8(%ebp)
810048b4:	52                   	push   %edx
810048b5:	e8 c0 fd ff ff       	call   8100467a <_strtol_l>
810048ba:	83 c4 20             	add    $0x20,%esp
810048bd:	c9                   	leave  
810048be:	c3                   	ret    

810048bf <__swbuf_r>:
810048bf:	55                   	push   %ebp
810048c0:	89 e5                	mov    %esp,%ebp
810048c2:	57                   	push   %edi
810048c3:	56                   	push   %esi
810048c4:	53                   	push   %ebx
810048c5:	83 ec 1c             	sub    $0x1c,%esp
810048c8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810048cb:	8b 5d 10             	mov    0x10(%ebp),%ebx
810048ce:	8b 45 08             	mov    0x8(%ebp),%eax
810048d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810048d4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048d8:	74 18                	je     810048f2 <__swbuf_r+0x33>
810048da:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810048dd:	8b 40 38             	mov    0x38(%eax),%eax
810048e0:	85 c0                	test   %eax,%eax
810048e2:	75 0e                	jne    810048f2 <__swbuf_r+0x33>
810048e4:	83 ec 0c             	sub    $0xc,%esp
810048e7:	ff 75 e4             	push   -0x1c(%ebp)
810048ea:	e8 52 c7 ff ff       	call   81001041 <__sinit>
810048ef:	83 c4 10             	add    $0x10,%esp
810048f2:	8b 43 18             	mov    0x18(%ebx),%eax
810048f5:	89 43 08             	mov    %eax,0x8(%ebx)
810048f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810048fc:	98                   	cwtl   
810048fd:	83 e0 08             	and    $0x8,%eax
81004900:	85 c0                	test   %eax,%eax
81004902:	74 07                	je     8100490b <__swbuf_r+0x4c>
81004904:	8b 43 10             	mov    0x10(%ebx),%eax
81004907:	85 c0                	test   %eax,%eax
81004909:	75 1d                	jne    81004928 <__swbuf_r+0x69>
8100490b:	83 ec 08             	sub    $0x8,%esp
8100490e:	53                   	push   %ebx
8100490f:	ff 75 08             	push   0x8(%ebp)
81004912:	e8 21 01 00 00       	call   81004a38 <__swsetup_r>
81004917:	83 c4 10             	add    $0x10,%esp
8100491a:	85 c0                	test   %eax,%eax
8100491c:	74 0a                	je     81004928 <__swbuf_r+0x69>
8100491e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004923:	e9 a1 00 00 00       	jmp    810049c9 <__swbuf_r+0x10a>
81004928:	89 f8                	mov    %edi,%eax
8100492a:	0f b6 f8             	movzbl %al,%edi
8100492d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004931:	98                   	cwtl   
81004932:	25 00 20 00 00       	and    $0x2000,%eax
81004937:	85 c0                	test   %eax,%eax
81004939:	75 14                	jne    8100494f <__swbuf_r+0x90>
8100493b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100493f:	80 cc 20             	or     $0x20,%ah
81004942:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004946:	8b 43 64             	mov    0x64(%ebx),%eax
81004949:	80 e4 df             	and    $0xdf,%ah
8100494c:	89 43 64             	mov    %eax,0x64(%ebx)
8100494f:	8b 03                	mov    (%ebx),%eax
81004951:	8b 53 10             	mov    0x10(%ebx),%edx
81004954:	29 d0                	sub    %edx,%eax
81004956:	89 c6                	mov    %eax,%esi
81004958:	8b 43 14             	mov    0x14(%ebx),%eax
8100495b:	39 c6                	cmp    %eax,%esi
8100495d:	7c 1f                	jl     8100497e <__swbuf_r+0xbf>
8100495f:	83 ec 08             	sub    $0x8,%esp
81004962:	53                   	push   %ebx
81004963:	ff 75 08             	push   0x8(%ebp)
81004966:	e8 d3 c1 ff ff       	call   81000b3e <_fflush_r>
8100496b:	83 c4 10             	add    $0x10,%esp
8100496e:	85 c0                	test   %eax,%eax
81004970:	74 07                	je     81004979 <__swbuf_r+0xba>
81004972:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004977:	eb 50                	jmp    810049c9 <__swbuf_r+0x10a>
81004979:	be 00 00 00 00       	mov    $0x0,%esi
8100497e:	8b 43 08             	mov    0x8(%ebx),%eax
81004981:	83 e8 01             	sub    $0x1,%eax
81004984:	89 43 08             	mov    %eax,0x8(%ebx)
81004987:	8b 03                	mov    (%ebx),%eax
81004989:	8d 50 01             	lea    0x1(%eax),%edx
8100498c:	89 13                	mov    %edx,(%ebx)
8100498e:	89 fa                	mov    %edi,%edx
81004990:	88 10                	mov    %dl,(%eax)
81004992:	83 c6 01             	add    $0x1,%esi
81004995:	8b 43 14             	mov    0x14(%ebx),%eax
81004998:	39 c6                	cmp    %eax,%esi
8100499a:	74 11                	je     810049ad <__swbuf_r+0xee>
8100499c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810049a0:	98                   	cwtl   
810049a1:	83 e0 01             	and    $0x1,%eax
810049a4:	85 c0                	test   %eax,%eax
810049a6:	74 1f                	je     810049c7 <__swbuf_r+0x108>
810049a8:	83 ff 0a             	cmp    $0xa,%edi
810049ab:	75 1a                	jne    810049c7 <__swbuf_r+0x108>
810049ad:	83 ec 08             	sub    $0x8,%esp
810049b0:	53                   	push   %ebx
810049b1:	ff 75 08             	push   0x8(%ebp)
810049b4:	e8 85 c1 ff ff       	call   81000b3e <_fflush_r>
810049b9:	83 c4 10             	add    $0x10,%esp
810049bc:	85 c0                	test   %eax,%eax
810049be:	74 07                	je     810049c7 <__swbuf_r+0x108>
810049c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810049c5:	eb 02                	jmp    810049c9 <__swbuf_r+0x10a>
810049c7:	89 f8                	mov    %edi,%eax
810049c9:	8d 65 f4             	lea    -0xc(%ebp),%esp
810049cc:	5b                   	pop    %ebx
810049cd:	5e                   	pop    %esi
810049ce:	5f                   	pop    %edi
810049cf:	5d                   	pop    %ebp
810049d0:	c3                   	ret    

810049d1 <__swbuf>:
810049d1:	55                   	push   %ebp
810049d2:	89 e5                	mov    %esp,%ebp
810049d4:	83 ec 08             	sub    $0x8,%esp
810049d7:	8b 55 08             	mov    0x8(%ebp),%edx
810049da:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810049dd:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810049e2:	83 ec 04             	sub    $0x4,%esp
810049e5:	51                   	push   %ecx
810049e6:	52                   	push   %edx
810049e7:	50                   	push   %eax
810049e8:	e8 d2 fe ff ff       	call   810048bf <__swbuf_r>
810049ed:	83 c4 10             	add    $0x10,%esp
810049f0:	c9                   	leave  
810049f1:	c3                   	ret    

810049f2 <_write_r>:
810049f2:	55                   	push   %ebp
810049f3:	89 e5                	mov    %esp,%ebp
810049f5:	83 ec 18             	sub    $0x18,%esp
810049f8:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
810049ff:	00 00 00 
81004a02:	83 ec 04             	sub    $0x4,%esp
81004a05:	ff 75 14             	push   0x14(%ebp)
81004a08:	ff 75 10             	push   0x10(%ebp)
81004a0b:	ff 75 0c             	push   0xc(%ebp)
81004a0e:	e8 45 bd ff ff       	call   81000758 <write>
81004a13:	83 c4 10             	add    $0x10,%esp
81004a16:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a19:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004a1d:	75 14                	jne    81004a33 <_write_r+0x41>
81004a1f:	a1 14 80 00 81       	mov    0x81008014,%eax
81004a24:	85 c0                	test   %eax,%eax
81004a26:	74 0b                	je     81004a33 <_write_r+0x41>
81004a28:	8b 15 14 80 00 81    	mov    0x81008014,%edx
81004a2e:	8b 45 08             	mov    0x8(%ebp),%eax
81004a31:	89 10                	mov    %edx,(%eax)
81004a33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a36:	c9                   	leave  
81004a37:	c3                   	ret    

81004a38 <__swsetup_r>:
81004a38:	55                   	push   %ebp
81004a39:	89 e5                	mov    %esp,%ebp
81004a3b:	53                   	push   %ebx
81004a3c:	83 ec 14             	sub    $0x14,%esp
81004a3f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004a42:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81004a47:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004a4a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004a4e:	74 18                	je     81004a68 <__swsetup_r+0x30>
81004a50:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004a53:	8b 40 38             	mov    0x38(%eax),%eax
81004a56:	85 c0                	test   %eax,%eax
81004a58:	75 0e                	jne    81004a68 <__swsetup_r+0x30>
81004a5a:	83 ec 0c             	sub    $0xc,%esp
81004a5d:	ff 75 f4             	push   -0xc(%ebp)
81004a60:	e8 dc c5 ff ff       	call   81001041 <__sinit>
81004a65:	83 c4 10             	add    $0x10,%esp
81004a68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a6c:	98                   	cwtl   
81004a6d:	83 e0 08             	and    $0x8,%eax
81004a70:	85 c0                	test   %eax,%eax
81004a72:	0f 85 82 00 00 00    	jne    81004afa <__swsetup_r+0xc2>
81004a78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a7c:	98                   	cwtl   
81004a7d:	83 e0 10             	and    $0x10,%eax
81004a80:	85 c0                	test   %eax,%eax
81004a82:	75 1e                	jne    81004aa2 <__swsetup_r+0x6a>
81004a84:	8b 45 08             	mov    0x8(%ebp),%eax
81004a87:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004a8d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004a91:	83 c8 40             	or     $0x40,%eax
81004a94:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004a98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004a9d:	e9 ec 00 00 00       	jmp    81004b8e <__swsetup_r+0x156>
81004aa2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004aa6:	98                   	cwtl   
81004aa7:	83 e0 04             	and    $0x4,%eax
81004aaa:	85 c0                	test   %eax,%eax
81004aac:	74 41                	je     81004aef <__swsetup_r+0xb7>
81004aae:	8b 43 30             	mov    0x30(%ebx),%eax
81004ab1:	85 c0                	test   %eax,%eax
81004ab3:	74 23                	je     81004ad8 <__swsetup_r+0xa0>
81004ab5:	8b 53 30             	mov    0x30(%ebx),%edx
81004ab8:	8d 43 40             	lea    0x40(%ebx),%eax
81004abb:	39 c2                	cmp    %eax,%edx
81004abd:	74 12                	je     81004ad1 <__swsetup_r+0x99>
81004abf:	8b 43 30             	mov    0x30(%ebx),%eax
81004ac2:	83 ec 08             	sub    $0x8,%esp
81004ac5:	50                   	push   %eax
81004ac6:	ff 75 08             	push   0x8(%ebp)
81004ac9:	e8 d5 c6 ff ff       	call   810011a3 <_free_r>
81004ace:	83 c4 10             	add    $0x10,%esp
81004ad1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004ad8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004adc:	83 e0 db             	and    $0xffffffdb,%eax
81004adf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004ae3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004aea:	8b 43 10             	mov    0x10(%ebx),%eax
81004aed:	89 03                	mov    %eax,(%ebx)
81004aef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004af3:	83 c8 08             	or     $0x8,%eax
81004af6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004afa:	8b 43 10             	mov    0x10(%ebx),%eax
81004afd:	85 c0                	test   %eax,%eax
81004aff:	75 2b                	jne    81004b2c <__swsetup_r+0xf4>
81004b01:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b05:	98                   	cwtl   
81004b06:	25 00 02 00 00       	and    $0x200,%eax
81004b0b:	85 c0                	test   %eax,%eax
81004b0d:	74 0e                	je     81004b1d <__swsetup_r+0xe5>
81004b0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b13:	98                   	cwtl   
81004b14:	25 80 00 00 00       	and    $0x80,%eax
81004b19:	85 c0                	test   %eax,%eax
81004b1b:	74 0f                	je     81004b2c <__swsetup_r+0xf4>
81004b1d:	83 ec 08             	sub    $0x8,%esp
81004b20:	53                   	push   %ebx
81004b21:	ff 75 08             	push   0x8(%ebp)
81004b24:	e8 cf 0c 00 00       	call   810057f8 <__smakebuf_r>
81004b29:	83 c4 10             	add    $0x10,%esp
81004b2c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b30:	98                   	cwtl   
81004b31:	83 e0 01             	and    $0x1,%eax
81004b34:	85 c0                	test   %eax,%eax
81004b36:	74 11                	je     81004b49 <__swsetup_r+0x111>
81004b38:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004b3f:	8b 43 14             	mov    0x14(%ebx),%eax
81004b42:	f7 d8                	neg    %eax
81004b44:	89 43 18             	mov    %eax,0x18(%ebx)
81004b47:	eb 19                	jmp    81004b62 <__swsetup_r+0x12a>
81004b49:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b4d:	98                   	cwtl   
81004b4e:	83 e0 02             	and    $0x2,%eax
81004b51:	85 c0                	test   %eax,%eax
81004b53:	75 05                	jne    81004b5a <__swsetup_r+0x122>
81004b55:	8b 43 14             	mov    0x14(%ebx),%eax
81004b58:	eb 05                	jmp    81004b5f <__swsetup_r+0x127>
81004b5a:	b8 00 00 00 00       	mov    $0x0,%eax
81004b5f:	89 43 08             	mov    %eax,0x8(%ebx)
81004b62:	8b 43 10             	mov    0x10(%ebx),%eax
81004b65:	85 c0                	test   %eax,%eax
81004b67:	75 20                	jne    81004b89 <__swsetup_r+0x151>
81004b69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b6d:	98                   	cwtl   
81004b6e:	25 80 00 00 00       	and    $0x80,%eax
81004b73:	85 c0                	test   %eax,%eax
81004b75:	74 12                	je     81004b89 <__swsetup_r+0x151>
81004b77:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b7b:	83 c8 40             	or     $0x40,%eax
81004b7e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004b82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b87:	eb 05                	jmp    81004b8e <__swsetup_r+0x156>
81004b89:	b8 00 00 00 00       	mov    $0x0,%eax
81004b8e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004b91:	c9                   	leave  
81004b92:	c3                   	ret    

81004b93 <__call_exitprocs>:
81004b93:	55                   	push   %ebp
81004b94:	89 e5                	mov    %esp,%ebp
81004b96:	57                   	push   %edi
81004b97:	56                   	push   %esi
81004b98:	53                   	push   %ebx
81004b99:	83 ec 1c             	sub    $0x1c,%esp
81004b9c:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81004ba1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004ba7:	a1 00 6c 00 81       	mov    0x81006c00,%eax
81004bac:	05 48 01 00 00       	add    $0x148,%eax
81004bb1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004bb4:	90                   	nop
81004bb5:	85 db                	test   %ebx,%ebx
81004bb7:	0f 84 e1 00 00 00    	je     81004c9e <__call_exitprocs+0x10b>
81004bbd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004bc3:	8b 43 04             	mov    0x4(%ebx),%eax
81004bc6:	8d 70 ff             	lea    -0x1(%eax),%esi
81004bc9:	e9 c6 00 00 00       	jmp    81004c94 <__call_exitprocs+0x101>
81004bce:	b8 01 00 00 00       	mov    $0x1,%eax
81004bd3:	89 f1                	mov    %esi,%ecx
81004bd5:	d3 e0                	shl    %cl,%eax
81004bd7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004bda:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004bde:	74 17                	je     81004bf7 <__call_exitprocs+0x64>
81004be0:	85 ff                	test   %edi,%edi
81004be2:	0f 84 a5 00 00 00    	je     81004c8d <__call_exitprocs+0xfa>
81004be8:	8d 46 20             	lea    0x20(%esi),%eax
81004beb:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004bee:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004bf1:	0f 85 96 00 00 00    	jne    81004c8d <__call_exitprocs+0xfa>
81004bf7:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004bfb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004bfe:	8b 43 04             	mov    0x4(%ebx),%eax
81004c01:	83 e8 01             	sub    $0x1,%eax
81004c04:	39 c6                	cmp    %eax,%esi
81004c06:	75 0b                	jne    81004c13 <__call_exitprocs+0x80>
81004c08:	8b 43 04             	mov    0x4(%ebx),%eax
81004c0b:	83 e8 01             	sub    $0x1,%eax
81004c0e:	89 43 04             	mov    %eax,0x4(%ebx)
81004c11:	eb 08                	jmp    81004c1b <__call_exitprocs+0x88>
81004c13:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004c1a:	00 
81004c1b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004c1f:	74 6f                	je     81004c90 <__call_exitprocs+0xfd>
81004c21:	8b 43 04             	mov    0x4(%ebx),%eax
81004c24:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004c27:	85 ff                	test   %edi,%edi
81004c29:	74 0f                	je     81004c3a <__call_exitprocs+0xa7>
81004c2b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004c31:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004c34:	21 d0                	and    %edx,%eax
81004c36:	85 c0                	test   %eax,%eax
81004c38:	75 07                	jne    81004c41 <__call_exitprocs+0xae>
81004c3a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c3d:	ff d0                	call   *%eax
81004c3f:	eb 32                	jmp    81004c73 <__call_exitprocs+0xe0>
81004c41:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004c47:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004c4a:	21 d0                	and    %edx,%eax
81004c4c:	85 c0                	test   %eax,%eax
81004c4e:	75 14                	jne    81004c64 <__call_exitprocs+0xd1>
81004c50:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004c53:	83 ec 08             	sub    $0x8,%esp
81004c56:	50                   	push   %eax
81004c57:	ff 75 08             	push   0x8(%ebp)
81004c5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c5d:	ff d0                	call   *%eax
81004c5f:	83 c4 10             	add    $0x10,%esp
81004c62:	eb 0f                	jmp    81004c73 <__call_exitprocs+0xe0>
81004c64:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004c67:	83 ec 0c             	sub    $0xc,%esp
81004c6a:	50                   	push   %eax
81004c6b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004c6e:	ff d0                	call   *%eax
81004c70:	83 c4 10             	add    $0x10,%esp
81004c73:	8b 43 04             	mov    0x4(%ebx),%eax
81004c76:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004c79:	0f 85 1d ff ff ff    	jne    81004b9c <__call_exitprocs+0x9>
81004c7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004c82:	8b 00                	mov    (%eax),%eax
81004c84:	39 c3                	cmp    %eax,%ebx
81004c86:	74 09                	je     81004c91 <__call_exitprocs+0xfe>
81004c88:	e9 0f ff ff ff       	jmp    81004b9c <__call_exitprocs+0x9>
81004c8d:	90                   	nop
81004c8e:	eb 01                	jmp    81004c91 <__call_exitprocs+0xfe>
81004c90:	90                   	nop
81004c91:	83 ee 01             	sub    $0x1,%esi
81004c94:	85 f6                	test   %esi,%esi
81004c96:	0f 89 32 ff ff ff    	jns    81004bce <__call_exitprocs+0x3b>
81004c9c:	eb 01                	jmp    81004c9f <__call_exitprocs+0x10c>
81004c9e:	90                   	nop
81004c9f:	90                   	nop
81004ca0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004ca3:	5b                   	pop    %ebx
81004ca4:	5e                   	pop    %esi
81004ca5:	5f                   	pop    %edi
81004ca6:	5d                   	pop    %ebp
81004ca7:	c3                   	ret    

81004ca8 <_close_r>:
81004ca8:	55                   	push   %ebp
81004ca9:	89 e5                	mov    %esp,%ebp
81004cab:	83 ec 18             	sub    $0x18,%esp
81004cae:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
81004cb5:	00 00 00 
81004cb8:	83 ec 0c             	sub    $0xc,%esp
81004cbb:	ff 75 0c             	push   0xc(%ebp)
81004cbe:	e8 c2 ba ff ff       	call   81000785 <close>
81004cc3:	83 c4 10             	add    $0x10,%esp
81004cc6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004cc9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004ccd:	75 14                	jne    81004ce3 <_close_r+0x3b>
81004ccf:	a1 14 80 00 81       	mov    0x81008014,%eax
81004cd4:	85 c0                	test   %eax,%eax
81004cd6:	74 0b                	je     81004ce3 <_close_r+0x3b>
81004cd8:	8b 15 14 80 00 81    	mov    0x81008014,%edx
81004cde:	8b 45 08             	mov    0x8(%ebp),%eax
81004ce1:	89 10                	mov    %edx,(%eax)
81004ce3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ce6:	c9                   	leave  
81004ce7:	c3                   	ret    

81004ce8 <__errno>:
81004ce8:	55                   	push   %ebp
81004ce9:	89 e5                	mov    %esp,%ebp
81004ceb:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81004cf0:	5d                   	pop    %ebp
81004cf1:	c3                   	ret    

81004cf2 <_fclose_r>:
81004cf2:	55                   	push   %ebp
81004cf3:	89 e5                	mov    %esp,%ebp
81004cf5:	53                   	push   %ebx
81004cf6:	83 ec 14             	sub    $0x14,%esp
81004cf9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004cfc:	85 db                	test   %ebx,%ebx
81004cfe:	75 0a                	jne    81004d0a <_fclose_r+0x18>
81004d00:	b8 00 00 00 00       	mov    $0x0,%eax
81004d05:	e9 ea 00 00 00       	jmp    81004df4 <_fclose_r+0x102>
81004d0a:	8b 45 08             	mov    0x8(%ebp),%eax
81004d0d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d10:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004d14:	74 18                	je     81004d2e <_fclose_r+0x3c>
81004d16:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d19:	8b 40 38             	mov    0x38(%eax),%eax
81004d1c:	85 c0                	test   %eax,%eax
81004d1e:	75 0e                	jne    81004d2e <_fclose_r+0x3c>
81004d20:	83 ec 0c             	sub    $0xc,%esp
81004d23:	ff 75 f0             	push   -0x10(%ebp)
81004d26:	e8 16 c3 ff ff       	call   81001041 <__sinit>
81004d2b:	83 c4 10             	add    $0x10,%esp
81004d2e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d32:	66 85 c0             	test   %ax,%ax
81004d35:	75 0a                	jne    81004d41 <_fclose_r+0x4f>
81004d37:	b8 00 00 00 00       	mov    $0x0,%eax
81004d3c:	e9 b3 00 00 00       	jmp    81004df4 <_fclose_r+0x102>
81004d41:	83 ec 08             	sub    $0x8,%esp
81004d44:	53                   	push   %ebx
81004d45:	ff 75 08             	push   0x8(%ebp)
81004d48:	e8 cb bb ff ff       	call   81000918 <__sflush_r>
81004d4d:	83 c4 10             	add    $0x10,%esp
81004d50:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d53:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004d56:	85 c0                	test   %eax,%eax
81004d58:	74 1d                	je     81004d77 <_fclose_r+0x85>
81004d5a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004d5d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004d60:	83 ec 08             	sub    $0x8,%esp
81004d63:	52                   	push   %edx
81004d64:	ff 75 08             	push   0x8(%ebp)
81004d67:	ff d0                	call   *%eax
81004d69:	83 c4 10             	add    $0x10,%esp
81004d6c:	85 c0                	test   %eax,%eax
81004d6e:	79 07                	jns    81004d77 <_fclose_r+0x85>
81004d70:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004d77:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d7b:	98                   	cwtl   
81004d7c:	25 80 00 00 00       	and    $0x80,%eax
81004d81:	85 c0                	test   %eax,%eax
81004d83:	74 12                	je     81004d97 <_fclose_r+0xa5>
81004d85:	8b 43 10             	mov    0x10(%ebx),%eax
81004d88:	83 ec 08             	sub    $0x8,%esp
81004d8b:	50                   	push   %eax
81004d8c:	ff 75 08             	push   0x8(%ebp)
81004d8f:	e8 0f c4 ff ff       	call   810011a3 <_free_r>
81004d94:	83 c4 10             	add    $0x10,%esp
81004d97:	8b 43 30             	mov    0x30(%ebx),%eax
81004d9a:	85 c0                	test   %eax,%eax
81004d9c:	74 23                	je     81004dc1 <_fclose_r+0xcf>
81004d9e:	8b 53 30             	mov    0x30(%ebx),%edx
81004da1:	8d 43 40             	lea    0x40(%ebx),%eax
81004da4:	39 c2                	cmp    %eax,%edx
81004da6:	74 12                	je     81004dba <_fclose_r+0xc8>
81004da8:	8b 43 30             	mov    0x30(%ebx),%eax
81004dab:	83 ec 08             	sub    $0x8,%esp
81004dae:	50                   	push   %eax
81004daf:	ff 75 08             	push   0x8(%ebp)
81004db2:	e8 ec c3 ff ff       	call   810011a3 <_free_r>
81004db7:	83 c4 10             	add    $0x10,%esp
81004dba:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004dc1:	8b 43 44             	mov    0x44(%ebx),%eax
81004dc4:	85 c0                	test   %eax,%eax
81004dc6:	74 19                	je     81004de1 <_fclose_r+0xef>
81004dc8:	8b 43 44             	mov    0x44(%ebx),%eax
81004dcb:	83 ec 08             	sub    $0x8,%esp
81004dce:	50                   	push   %eax
81004dcf:	ff 75 08             	push   0x8(%ebp)
81004dd2:	e8 cc c3 ff ff       	call   810011a3 <_free_r>
81004dd7:	83 c4 10             	add    $0x10,%esp
81004dda:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004de1:	e8 f4 c2 ff ff       	call   810010da <__sfp_lock_acquire>
81004de6:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004dec:	e8 ef c2 ff ff       	call   810010e0 <__sfp_lock_release>
81004df1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004df4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004df7:	c9                   	leave  
81004df8:	c3                   	ret    

81004df9 <fclose>:
81004df9:	55                   	push   %ebp
81004dfa:	89 e5                	mov    %esp,%ebp
81004dfc:	83 ec 08             	sub    $0x8,%esp
81004dff:	8b 55 08             	mov    0x8(%ebp),%edx
81004e02:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81004e07:	83 ec 08             	sub    $0x8,%esp
81004e0a:	52                   	push   %edx
81004e0b:	50                   	push   %eax
81004e0c:	e8 e1 fe ff ff       	call   81004cf2 <_fclose_r>
81004e11:	83 c4 10             	add    $0x10,%esp
81004e14:	c9                   	leave  
81004e15:	c3                   	ret    

81004e16 <_fputc_r>:
81004e16:	55                   	push   %ebp
81004e17:	89 e5                	mov    %esp,%ebp
81004e19:	83 ec 18             	sub    $0x18,%esp
81004e1c:	8b 45 08             	mov    0x8(%ebp),%eax
81004e1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e22:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004e26:	74 18                	je     81004e40 <_fputc_r+0x2a>
81004e28:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e2b:	8b 40 38             	mov    0x38(%eax),%eax
81004e2e:	85 c0                	test   %eax,%eax
81004e30:	75 0e                	jne    81004e40 <_fputc_r+0x2a>
81004e32:	83 ec 0c             	sub    $0xc,%esp
81004e35:	ff 75 f4             	push   -0xc(%ebp)
81004e38:	e8 04 c2 ff ff       	call   81001041 <__sinit>
81004e3d:	83 c4 10             	add    $0x10,%esp
81004e40:	83 ec 04             	sub    $0x4,%esp
81004e43:	ff 75 10             	push   0x10(%ebp)
81004e46:	ff 75 0c             	push   0xc(%ebp)
81004e49:	ff 75 08             	push   0x8(%ebp)
81004e4c:	e8 b2 0c 00 00       	call   81005b03 <_putc_r>
81004e51:	83 c4 10             	add    $0x10,%esp
81004e54:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e57:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e5a:	c9                   	leave  
81004e5b:	c3                   	ret    

81004e5c <fputc>:
81004e5c:	55                   	push   %ebp
81004e5d:	89 e5                	mov    %esp,%ebp
81004e5f:	83 ec 18             	sub    $0x18,%esp
81004e62:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81004e67:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e6d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004e70:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004e74:	74 18                	je     81004e8e <fputc+0x32>
81004e76:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004e79:	8b 40 38             	mov    0x38(%eax),%eax
81004e7c:	85 c0                	test   %eax,%eax
81004e7e:	75 0e                	jne    81004e8e <fputc+0x32>
81004e80:	83 ec 0c             	sub    $0xc,%esp
81004e83:	ff 75 f0             	push   -0x10(%ebp)
81004e86:	e8 b6 c1 ff ff       	call   81001041 <__sinit>
81004e8b:	83 c4 10             	add    $0x10,%esp
81004e8e:	83 ec 04             	sub    $0x4,%esp
81004e91:	ff 75 0c             	push   0xc(%ebp)
81004e94:	ff 75 08             	push   0x8(%ebp)
81004e97:	ff 75 f4             	push   -0xc(%ebp)
81004e9a:	e8 64 0c 00 00       	call   81005b03 <_putc_r>
81004e9f:	83 c4 10             	add    $0x10,%esp
81004ea2:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ea5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004ea8:	c9                   	leave  
81004ea9:	c3                   	ret    

81004eaa <_fputs_r>:
81004eaa:	55                   	push   %ebp
81004eab:	89 e5                	mov    %esp,%ebp
81004ead:	83 ec 28             	sub    $0x28,%esp
81004eb0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004eb3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004eb6:	83 ec 0c             	sub    $0xc,%esp
81004eb9:	ff 75 0c             	push   0xc(%ebp)
81004ebc:	e8 1f f6 ff ff       	call   810044e0 <strlen>
81004ec1:	83 c4 10             	add    $0x10,%esp
81004ec4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004ec7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004eca:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004ecd:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004ed0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004ed3:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81004eda:	8b 45 08             	mov    0x8(%ebp),%eax
81004edd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ee0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ee4:	74 18                	je     81004efe <_fputs_r+0x54>
81004ee6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004ee9:	8b 40 38             	mov    0x38(%eax),%eax
81004eec:	85 c0                	test   %eax,%eax
81004eee:	75 0e                	jne    81004efe <_fputs_r+0x54>
81004ef0:	83 ec 0c             	sub    $0xc,%esp
81004ef3:	ff 75 f4             	push   -0xc(%ebp)
81004ef6:	e8 46 c1 ff ff       	call   81001041 <__sinit>
81004efb:	83 c4 10             	add    $0x10,%esp
81004efe:	8b 45 10             	mov    0x10(%ebp),%eax
81004f01:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f05:	98                   	cwtl   
81004f06:	25 00 20 00 00       	and    $0x2000,%eax
81004f0b:	85 c0                	test   %eax,%eax
81004f0d:	75 24                	jne    81004f33 <_fputs_r+0x89>
81004f0f:	8b 45 10             	mov    0x10(%ebp),%eax
81004f12:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004f16:	80 cc 20             	or     $0x20,%ah
81004f19:	89 c2                	mov    %eax,%edx
81004f1b:	8b 45 10             	mov    0x10(%ebp),%eax
81004f1e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004f22:	8b 45 10             	mov    0x10(%ebp),%eax
81004f25:	8b 40 64             	mov    0x64(%eax),%eax
81004f28:	80 e4 df             	and    $0xdf,%ah
81004f2b:	89 c2                	mov    %eax,%edx
81004f2d:	8b 45 10             	mov    0x10(%ebp),%eax
81004f30:	89 50 64             	mov    %edx,0x64(%eax)
81004f33:	83 ec 04             	sub    $0x4,%esp
81004f36:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81004f39:	50                   	push   %eax
81004f3a:	ff 75 10             	push   0x10(%ebp)
81004f3d:	ff 75 08             	push   0x8(%ebp)
81004f40:	e8 df 01 00 00       	call   81005124 <__sfvwrite_r>
81004f45:	83 c4 10             	add    $0x10,%esp
81004f48:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004f4b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004f4e:	c9                   	leave  
81004f4f:	c3                   	ret    

81004f50 <fputs>:
81004f50:	55                   	push   %ebp
81004f51:	89 e5                	mov    %esp,%ebp
81004f53:	83 ec 08             	sub    $0x8,%esp
81004f56:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81004f5b:	83 ec 04             	sub    $0x4,%esp
81004f5e:	ff 75 0c             	push   0xc(%ebp)
81004f61:	ff 75 08             	push   0x8(%ebp)
81004f64:	50                   	push   %eax
81004f65:	e8 40 ff ff ff       	call   81004eaa <_fputs_r>
81004f6a:	83 c4 10             	add    $0x10,%esp
81004f6d:	c9                   	leave  
81004f6e:	c3                   	ret    

81004f6f <__sputc_r>:
81004f6f:	55                   	push   %ebp
81004f70:	89 e5                	mov    %esp,%ebp
81004f72:	83 ec 08             	sub    $0x8,%esp
81004f75:	8b 45 10             	mov    0x10(%ebp),%eax
81004f78:	8b 40 08             	mov    0x8(%eax),%eax
81004f7b:	8d 50 ff             	lea    -0x1(%eax),%edx
81004f7e:	8b 45 10             	mov    0x10(%ebp),%eax
81004f81:	89 50 08             	mov    %edx,0x8(%eax)
81004f84:	8b 45 10             	mov    0x10(%ebp),%eax
81004f87:	8b 40 08             	mov    0x8(%eax),%eax
81004f8a:	85 c0                	test   %eax,%eax
81004f8c:	79 17                	jns    81004fa5 <__sputc_r+0x36>
81004f8e:	8b 45 10             	mov    0x10(%ebp),%eax
81004f91:	8b 50 08             	mov    0x8(%eax),%edx
81004f94:	8b 45 10             	mov    0x10(%ebp),%eax
81004f97:	8b 40 18             	mov    0x18(%eax),%eax
81004f9a:	39 c2                	cmp    %eax,%edx
81004f9c:	7c 21                	jl     81004fbf <__sputc_r+0x50>
81004f9e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004fa1:	3c 0a                	cmp    $0xa,%al
81004fa3:	74 1a                	je     81004fbf <__sputc_r+0x50>
81004fa5:	8b 45 10             	mov    0x10(%ebp),%eax
81004fa8:	8b 00                	mov    (%eax),%eax
81004faa:	8d 48 01             	lea    0x1(%eax),%ecx
81004fad:	8b 55 10             	mov    0x10(%ebp),%edx
81004fb0:	89 0a                	mov    %ecx,(%edx)
81004fb2:	8b 55 0c             	mov    0xc(%ebp),%edx
81004fb5:	88 10                	mov    %dl,(%eax)
81004fb7:	0f b6 00             	movzbl (%eax),%eax
81004fba:	0f b6 c0             	movzbl %al,%eax
81004fbd:	eb 14                	jmp    81004fd3 <__sputc_r+0x64>
81004fbf:	83 ec 04             	sub    $0x4,%esp
81004fc2:	ff 75 10             	push   0x10(%ebp)
81004fc5:	ff 75 0c             	push   0xc(%ebp)
81004fc8:	ff 75 08             	push   0x8(%ebp)
81004fcb:	e8 ef f8 ff ff       	call   810048bf <__swbuf_r>
81004fd0:	83 c4 10             	add    $0x10,%esp
81004fd3:	c9                   	leave  
81004fd4:	c3                   	ret    

81004fd5 <__fputwc>:
81004fd5:	55                   	push   %ebp
81004fd6:	89 e5                	mov    %esp,%ebp
81004fd8:	83 ec 18             	sub    $0x18,%esp
81004fdb:	e8 9f 07 00 00       	call   8100577f <__locale_mb_cur_max>
81004fe0:	83 f8 01             	cmp    $0x1,%eax
81004fe3:	75 1e                	jne    81005003 <__fputwc+0x2e>
81004fe5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004fe9:	7e 18                	jle    81005003 <__fputwc+0x2e>
81004feb:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81004ff2:	7f 0f                	jg     81005003 <__fputwc+0x2e>
81004ff4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ff7:	88 45 ef             	mov    %al,-0x11(%ebp)
81004ffa:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81005001:	eb 3c                	jmp    8100503f <__fputwc+0x6a>
81005003:	8b 45 10             	mov    0x10(%ebp),%eax
81005006:	83 c0 5c             	add    $0x5c,%eax
81005009:	50                   	push   %eax
8100500a:	ff 75 0c             	push   0xc(%ebp)
8100500d:	8d 45 ef             	lea    -0x11(%ebp),%eax
81005010:	50                   	push   %eax
81005011:	ff 75 08             	push   0x8(%ebp)
81005014:	e8 36 17 00 00       	call   8100674f <_wcrtomb_r>
81005019:	83 c4 10             	add    $0x10,%esp
8100501c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100501f:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81005023:	75 1a                	jne    8100503f <__fputwc+0x6a>
81005025:	8b 45 10             	mov    0x10(%ebp),%eax
81005028:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100502c:	83 c8 40             	or     $0x40,%eax
8100502f:	89 c2                	mov    %eax,%edx
81005031:	8b 45 10             	mov    0x10(%ebp),%eax
81005034:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005038:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100503d:	eb 44                	jmp    81005083 <__fputwc+0xae>
8100503f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005046:	eb 30                	jmp    81005078 <__fputwc+0xa3>
81005048:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100504b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100504e:	01 d0                	add    %edx,%eax
81005050:	0f b6 00             	movzbl (%eax),%eax
81005053:	0f b6 c0             	movzbl %al,%eax
81005056:	83 ec 04             	sub    $0x4,%esp
81005059:	ff 75 10             	push   0x10(%ebp)
8100505c:	50                   	push   %eax
8100505d:	ff 75 08             	push   0x8(%ebp)
81005060:	e8 0a ff ff ff       	call   81004f6f <__sputc_r>
81005065:	83 c4 10             	add    $0x10,%esp
81005068:	83 f8 ff             	cmp    $0xffffffff,%eax
8100506b:	75 07                	jne    81005074 <__fputwc+0x9f>
8100506d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005072:	eb 0f                	jmp    81005083 <__fputwc+0xae>
81005074:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005078:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100507b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100507e:	72 c8                	jb     81005048 <__fputwc+0x73>
81005080:	8b 45 0c             	mov    0xc(%ebp),%eax
81005083:	c9                   	leave  
81005084:	c3                   	ret    

81005085 <_fputwc_r>:
81005085:	55                   	push   %ebp
81005086:	89 e5                	mov    %esp,%ebp
81005088:	83 ec 18             	sub    $0x18,%esp
8100508b:	8b 45 10             	mov    0x10(%ebp),%eax
8100508e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005092:	98                   	cwtl   
81005093:	25 00 20 00 00       	and    $0x2000,%eax
81005098:	85 c0                	test   %eax,%eax
8100509a:	75 24                	jne    810050c0 <_fputwc_r+0x3b>
8100509c:	8b 45 10             	mov    0x10(%ebp),%eax
8100509f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810050a3:	80 cc 20             	or     $0x20,%ah
810050a6:	89 c2                	mov    %eax,%edx
810050a8:	8b 45 10             	mov    0x10(%ebp),%eax
810050ab:	66 89 50 0c          	mov    %dx,0xc(%eax)
810050af:	8b 45 10             	mov    0x10(%ebp),%eax
810050b2:	8b 40 64             	mov    0x64(%eax),%eax
810050b5:	80 cc 20             	or     $0x20,%ah
810050b8:	89 c2                	mov    %eax,%edx
810050ba:	8b 45 10             	mov    0x10(%ebp),%eax
810050bd:	89 50 64             	mov    %edx,0x64(%eax)
810050c0:	83 ec 04             	sub    $0x4,%esp
810050c3:	ff 75 10             	push   0x10(%ebp)
810050c6:	ff 75 0c             	push   0xc(%ebp)
810050c9:	ff 75 08             	push   0x8(%ebp)
810050cc:	e8 04 ff ff ff       	call   81004fd5 <__fputwc>
810050d1:	83 c4 10             	add    $0x10,%esp
810050d4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050da:	c9                   	leave  
810050db:	c3                   	ret    

810050dc <fputwc>:
810050dc:	55                   	push   %ebp
810050dd:	89 e5                	mov    %esp,%ebp
810050df:	83 ec 18             	sub    $0x18,%esp
810050e2:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810050e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810050ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050f0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810050f4:	74 18                	je     8100510e <fputwc+0x32>
810050f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810050f9:	8b 40 38             	mov    0x38(%eax),%eax
810050fc:	85 c0                	test   %eax,%eax
810050fe:	75 0e                	jne    8100510e <fputwc+0x32>
81005100:	83 ec 0c             	sub    $0xc,%esp
81005103:	ff 75 f0             	push   -0x10(%ebp)
81005106:	e8 36 bf ff ff       	call   81001041 <__sinit>
8100510b:	83 c4 10             	add    $0x10,%esp
8100510e:	83 ec 04             	sub    $0x4,%esp
81005111:	ff 75 0c             	push   0xc(%ebp)
81005114:	ff 75 08             	push   0x8(%ebp)
81005117:	ff 75 f4             	push   -0xc(%ebp)
8100511a:	e8 66 ff ff ff       	call   81005085 <_fputwc_r>
8100511f:	83 c4 10             	add    $0x10,%esp
81005122:	c9                   	leave  
81005123:	c3                   	ret    

81005124 <__sfvwrite_r>:
81005124:	55                   	push   %ebp
81005125:	89 e5                	mov    %esp,%ebp
81005127:	57                   	push   %edi
81005128:	56                   	push   %esi
81005129:	53                   	push   %ebx
8100512a:	83 ec 3c             	sub    $0x3c,%esp
8100512d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005130:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81005137:	8b 45 10             	mov    0x10(%ebp),%eax
8100513a:	8b 78 08             	mov    0x8(%eax),%edi
8100513d:	85 ff                	test   %edi,%edi
8100513f:	75 0a                	jne    8100514b <__sfvwrite_r+0x27>
81005141:	b8 00 00 00 00       	mov    $0x0,%eax
81005146:	e9 6f 04 00 00       	jmp    810055ba <__sfvwrite_r+0x496>
8100514b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100514f:	98                   	cwtl   
81005150:	83 e0 08             	and    $0x8,%eax
81005153:	85 c0                	test   %eax,%eax
81005155:	74 07                	je     8100515e <__sfvwrite_r+0x3a>
81005157:	8b 43 10             	mov    0x10(%ebx),%eax
8100515a:	85 c0                	test   %eax,%eax
8100515c:	75 1d                	jne    8100517b <__sfvwrite_r+0x57>
8100515e:	83 ec 08             	sub    $0x8,%esp
81005161:	53                   	push   %ebx
81005162:	ff 75 08             	push   0x8(%ebp)
81005165:	e8 ce f8 ff ff       	call   81004a38 <__swsetup_r>
8100516a:	83 c4 10             	add    $0x10,%esp
8100516d:	85 c0                	test   %eax,%eax
8100516f:	74 0a                	je     8100517b <__sfvwrite_r+0x57>
81005171:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005176:	e9 3f 04 00 00       	jmp    810055ba <__sfvwrite_r+0x496>
8100517b:	8b 45 10             	mov    0x10(%ebp),%eax
8100517e:	8b 00                	mov    (%eax),%eax
81005180:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005183:	bf 00 00 00 00       	mov    $0x0,%edi
81005188:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100518c:	98                   	cwtl   
8100518d:	83 e0 02             	and    $0x2,%eax
81005190:	85 c0                	test   %eax,%eax
81005192:	74 68                	je     810051fc <__sfvwrite_r+0xd8>
81005194:	eb 11                	jmp    810051a7 <__sfvwrite_r+0x83>
81005196:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005199:	8b 08                	mov    (%eax),%ecx
8100519b:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100519e:	8b 78 04             	mov    0x4(%eax),%edi
810051a1:	83 c0 08             	add    $0x8,%eax
810051a4:	89 45 c0             	mov    %eax,-0x40(%ebp)
810051a7:	85 ff                	test   %edi,%edi
810051a9:	74 eb                	je     81005196 <__sfvwrite_r+0x72>
810051ab:	8b 4b 24             	mov    0x24(%ebx),%ecx
810051ae:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810051b3:	39 c7                	cmp    %eax,%edi
810051b5:	0f 46 c7             	cmovbe %edi,%eax
810051b8:	89 c2                	mov    %eax,%edx
810051ba:	8b 43 1c             	mov    0x1c(%ebx),%eax
810051bd:	52                   	push   %edx
810051be:	ff 75 c4             	push   -0x3c(%ebp)
810051c1:	50                   	push   %eax
810051c2:	ff 75 08             	push   0x8(%ebp)
810051c5:	ff d1                	call   *%ecx
810051c7:	83 c4 10             	add    $0x10,%esp
810051ca:	89 c6                	mov    %eax,%esi
810051cc:	85 f6                	test   %esi,%esi
810051ce:	0f 8e cf 03 00 00    	jle    810055a3 <__sfvwrite_r+0x47f>
810051d4:	89 f0                	mov    %esi,%eax
810051d6:	01 45 c4             	add    %eax,-0x3c(%ebp)
810051d9:	89 f0                	mov    %esi,%eax
810051db:	29 c7                	sub    %eax,%edi
810051dd:	8b 45 10             	mov    0x10(%ebp),%eax
810051e0:	8b 40 08             	mov    0x8(%eax),%eax
810051e3:	89 f2                	mov    %esi,%edx
810051e5:	29 d0                	sub    %edx,%eax
810051e7:	8b 4d 10             	mov    0x10(%ebp),%ecx
810051ea:	89 41 08             	mov    %eax,0x8(%ecx)
810051ed:	8b 45 10             	mov    0x10(%ebp),%eax
810051f0:	8b 40 08             	mov    0x8(%eax),%eax
810051f3:	85 c0                	test   %eax,%eax
810051f5:	75 b0                	jne    810051a7 <__sfvwrite_r+0x83>
810051f7:	e9 a0 03 00 00       	jmp    8100559c <__sfvwrite_r+0x478>
810051fc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005200:	98                   	cwtl   
81005201:	83 e0 01             	and    $0x1,%eax
81005204:	85 c0                	test   %eax,%eax
81005206:	0f 85 44 02 00 00    	jne    81005450 <__sfvwrite_r+0x32c>
8100520c:	eb 11                	jmp    8100521f <__sfvwrite_r+0xfb>
8100520e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005211:	8b 08                	mov    (%eax),%ecx
81005213:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81005216:	8b 78 04             	mov    0x4(%eax),%edi
81005219:	83 c0 08             	add    $0x8,%eax
8100521c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100521f:	85 ff                	test   %edi,%edi
81005221:	74 eb                	je     8100520e <__sfvwrite_r+0xea>
81005223:	8b 73 08             	mov    0x8(%ebx),%esi
81005226:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100522a:	98                   	cwtl   
8100522b:	25 00 02 00 00       	and    $0x200,%eax
81005230:	85 c0                	test   %eax,%eax
81005232:	0f 84 4f 01 00 00    	je     81005387 <__sfvwrite_r+0x263>
81005238:	89 f0                	mov    %esi,%eax
8100523a:	39 c7                	cmp    %eax,%edi
8100523c:	0f 82 12 01 00 00    	jb     81005354 <__sfvwrite_r+0x230>
81005242:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005246:	98                   	cwtl   
81005247:	25 80 04 00 00       	and    $0x480,%eax
8100524c:	85 c0                	test   %eax,%eax
8100524e:	0f 84 00 01 00 00    	je     81005354 <__sfvwrite_r+0x230>
81005254:	8b 03                	mov    (%ebx),%eax
81005256:	8b 53 10             	mov    0x10(%ebx),%edx
81005259:	29 d0                	sub    %edx,%eax
8100525b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100525e:	8b 53 14             	mov    0x14(%ebx),%edx
81005261:	89 d0                	mov    %edx,%eax
81005263:	01 c0                	add    %eax,%eax
81005265:	01 d0                	add    %edx,%eax
81005267:	89 c2                	mov    %eax,%edx
81005269:	c1 ea 1f             	shr    $0x1f,%edx
8100526c:	01 d0                	add    %edx,%eax
8100526e:	d1 f8                	sar    %eax
81005270:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005273:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005276:	01 f8                	add    %edi,%eax
81005278:	8d 50 01             	lea    0x1(%eax),%edx
8100527b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100527e:	39 c2                	cmp    %eax,%edx
81005280:	76 0b                	jbe    8100528d <__sfvwrite_r+0x169>
81005282:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005285:	01 f8                	add    %edi,%eax
81005287:	83 c0 01             	add    $0x1,%eax
8100528a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100528d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005291:	98                   	cwtl   
81005292:	25 00 04 00 00       	and    $0x400,%eax
81005297:	85 c0                	test   %eax,%eax
81005299:	74 4f                	je     810052ea <__sfvwrite_r+0x1c6>
8100529b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100529e:	83 ec 08             	sub    $0x8,%esp
810052a1:	50                   	push   %eax
810052a2:	ff 75 08             	push   0x8(%ebp)
810052a5:	e8 70 d6 ff ff       	call   8100291a <_malloc_r>
810052aa:	83 c4 10             	add    $0x10,%esp
810052ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
810052b0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810052b4:	75 0e                	jne    810052c4 <__sfvwrite_r+0x1a0>
810052b6:	8b 45 08             	mov    0x8(%ebp),%eax
810052b9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810052bf:	e9 e6 02 00 00       	jmp    810055aa <__sfvwrite_r+0x486>
810052c4:	8b 55 d0             	mov    -0x30(%ebp),%edx
810052c7:	8b 43 10             	mov    0x10(%ebx),%eax
810052ca:	83 ec 04             	sub    $0x4,%esp
810052cd:	52                   	push   %edx
810052ce:	50                   	push   %eax
810052cf:	ff 75 dc             	push   -0x24(%ebp)
810052d2:	e8 51 df ff ff       	call   81003228 <memcpy>
810052d7:	83 c4 10             	add    $0x10,%esp
810052da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052de:	66 25 7f fb          	and    $0xfb7f,%ax
810052e2:	0c 80                	or     $0x80,%al
810052e4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052e8:	eb 49                	jmp    81005333 <__sfvwrite_r+0x20f>
810052ea:	8b 55 d8             	mov    -0x28(%ebp),%edx
810052ed:	8b 43 10             	mov    0x10(%ebx),%eax
810052f0:	83 ec 04             	sub    $0x4,%esp
810052f3:	52                   	push   %edx
810052f4:	50                   	push   %eax
810052f5:	ff 75 08             	push   0x8(%ebp)
810052f8:	e8 ea 08 00 00       	call   81005be7 <_realloc_r>
810052fd:	83 c4 10             	add    $0x10,%esp
81005300:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005303:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005307:	75 2a                	jne    81005333 <__sfvwrite_r+0x20f>
81005309:	8b 43 10             	mov    0x10(%ebx),%eax
8100530c:	83 ec 08             	sub    $0x8,%esp
8100530f:	50                   	push   %eax
81005310:	ff 75 08             	push   0x8(%ebp)
81005313:	e8 8b be ff ff       	call   810011a3 <_free_r>
81005318:	83 c4 10             	add    $0x10,%esp
8100531b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100531f:	24 7f                	and    $0x7f,%al
81005321:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005325:	8b 45 08             	mov    0x8(%ebp),%eax
81005328:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100532e:	e9 77 02 00 00       	jmp    810055aa <__sfvwrite_r+0x486>
81005333:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005336:	89 43 10             	mov    %eax,0x10(%ebx)
81005339:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100533c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100533f:	01 d0                	add    %edx,%eax
81005341:	89 03                	mov    %eax,(%ebx)
81005343:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005346:	89 43 14             	mov    %eax,0x14(%ebx)
81005349:	89 fe                	mov    %edi,%esi
8100534b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100534e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005351:	89 43 08             	mov    %eax,0x8(%ebx)
81005354:	89 f0                	mov    %esi,%eax
81005356:	39 c7                	cmp    %eax,%edi
81005358:	73 02                	jae    8100535c <__sfvwrite_r+0x238>
8100535a:	89 fe                	mov    %edi,%esi
8100535c:	89 f2                	mov    %esi,%edx
8100535e:	8b 03                	mov    (%ebx),%eax
81005360:	83 ec 04             	sub    $0x4,%esp
81005363:	52                   	push   %edx
81005364:	ff 75 c4             	push   -0x3c(%ebp)
81005367:	50                   	push   %eax
81005368:	e8 a3 06 00 00       	call   81005a10 <memmove>
8100536d:	83 c4 10             	add    $0x10,%esp
81005370:	8b 43 08             	mov    0x8(%ebx),%eax
81005373:	29 f0                	sub    %esi,%eax
81005375:	89 43 08             	mov    %eax,0x8(%ebx)
81005378:	8b 03                	mov    (%ebx),%eax
8100537a:	89 f2                	mov    %esi,%edx
8100537c:	01 d0                	add    %edx,%eax
8100537e:	89 03                	mov    %eax,(%ebx)
81005380:	89 fe                	mov    %edi,%esi
81005382:	e9 9d 00 00 00       	jmp    81005424 <__sfvwrite_r+0x300>
81005387:	8b 13                	mov    (%ebx),%edx
81005389:	8b 43 10             	mov    0x10(%ebx),%eax
8100538c:	39 c2                	cmp    %eax,%edx
8100538e:	77 07                	ja     81005397 <__sfvwrite_r+0x273>
81005390:	8b 43 14             	mov    0x14(%ebx),%eax
81005393:	39 c7                	cmp    %eax,%edi
81005395:	73 4c                	jae    810053e3 <__sfvwrite_r+0x2bf>
81005397:	89 f0                	mov    %esi,%eax
81005399:	39 c7                	cmp    %eax,%edi
8100539b:	0f 46 c7             	cmovbe %edi,%eax
8100539e:	89 c6                	mov    %eax,%esi
810053a0:	89 f2                	mov    %esi,%edx
810053a2:	8b 03                	mov    (%ebx),%eax
810053a4:	83 ec 04             	sub    $0x4,%esp
810053a7:	52                   	push   %edx
810053a8:	ff 75 c4             	push   -0x3c(%ebp)
810053ab:	50                   	push   %eax
810053ac:	e8 5f 06 00 00       	call   81005a10 <memmove>
810053b1:	83 c4 10             	add    $0x10,%esp
810053b4:	8b 43 08             	mov    0x8(%ebx),%eax
810053b7:	29 f0                	sub    %esi,%eax
810053b9:	89 43 08             	mov    %eax,0x8(%ebx)
810053bc:	8b 03                	mov    (%ebx),%eax
810053be:	89 f2                	mov    %esi,%edx
810053c0:	01 d0                	add    %edx,%eax
810053c2:	89 03                	mov    %eax,(%ebx)
810053c4:	8b 43 08             	mov    0x8(%ebx),%eax
810053c7:	85 c0                	test   %eax,%eax
810053c9:	75 58                	jne    81005423 <__sfvwrite_r+0x2ff>
810053cb:	83 ec 08             	sub    $0x8,%esp
810053ce:	53                   	push   %ebx
810053cf:	ff 75 08             	push   0x8(%ebp)
810053d2:	e8 67 b7 ff ff       	call   81000b3e <_fflush_r>
810053d7:	83 c4 10             	add    $0x10,%esp
810053da:	85 c0                	test   %eax,%eax
810053dc:	74 45                	je     81005423 <__sfvwrite_r+0x2ff>
810053de:	e9 c7 01 00 00       	jmp    810055aa <__sfvwrite_r+0x486>
810053e3:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
810053e9:	77 04                	ja     810053ef <__sfvwrite_r+0x2cb>
810053eb:	89 f8                	mov    %edi,%eax
810053ed:	eb 05                	jmp    810053f4 <__sfvwrite_r+0x2d0>
810053ef:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810053f4:	8b 4b 14             	mov    0x14(%ebx),%ecx
810053f7:	99                   	cltd   
810053f8:	f7 f9                	idiv   %ecx
810053fa:	89 c2                	mov    %eax,%edx
810053fc:	8b 43 14             	mov    0x14(%ebx),%eax
810053ff:	89 d6                	mov    %edx,%esi
81005401:	0f af f0             	imul   %eax,%esi
81005404:	8b 53 24             	mov    0x24(%ebx),%edx
81005407:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100540a:	56                   	push   %esi
8100540b:	ff 75 c4             	push   -0x3c(%ebp)
8100540e:	50                   	push   %eax
8100540f:	ff 75 08             	push   0x8(%ebp)
81005412:	ff d2                	call   *%edx
81005414:	83 c4 10             	add    $0x10,%esp
81005417:	89 c6                	mov    %eax,%esi
81005419:	85 f6                	test   %esi,%esi
8100541b:	0f 8e 85 01 00 00    	jle    810055a6 <__sfvwrite_r+0x482>
81005421:	eb 01                	jmp    81005424 <__sfvwrite_r+0x300>
81005423:	90                   	nop
81005424:	89 f0                	mov    %esi,%eax
81005426:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005429:	89 f0                	mov    %esi,%eax
8100542b:	29 c7                	sub    %eax,%edi
8100542d:	8b 45 10             	mov    0x10(%ebp),%eax
81005430:	8b 40 08             	mov    0x8(%eax),%eax
81005433:	89 f2                	mov    %esi,%edx
81005435:	29 d0                	sub    %edx,%eax
81005437:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100543a:	89 41 08             	mov    %eax,0x8(%ecx)
8100543d:	8b 45 10             	mov    0x10(%ebp),%eax
81005440:	8b 40 08             	mov    0x8(%eax),%eax
81005443:	85 c0                	test   %eax,%eax
81005445:	0f 85 d4 fd ff ff    	jne    8100521f <__sfvwrite_r+0xfb>
8100544b:	e9 4c 01 00 00       	jmp    8100559c <__sfvwrite_r+0x478>
81005450:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005457:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100545e:	eb 18                	jmp    81005478 <__sfvwrite_r+0x354>
81005460:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005467:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100546a:	8b 08                	mov    (%eax),%ecx
8100546c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100546f:	8b 78 04             	mov    0x4(%eax),%edi
81005472:	83 c0 08             	add    $0x8,%eax
81005475:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005478:	85 ff                	test   %edi,%edi
8100547a:	74 e4                	je     81005460 <__sfvwrite_r+0x33c>
8100547c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005480:	75 32                	jne    810054b4 <__sfvwrite_r+0x390>
81005482:	83 ec 04             	sub    $0x4,%esp
81005485:	57                   	push   %edi
81005486:	6a 0a                	push   $0xa
81005488:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8100548b:	56                   	push   %esi
8100548c:	e8 af dc ff ff       	call   81003140 <memchr>
81005491:	83 c4 10             	add    $0x10,%esp
81005494:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005497:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100549b:	74 0a                	je     810054a7 <__sfvwrite_r+0x383>
8100549d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810054a0:	83 c0 01             	add    $0x1,%eax
810054a3:	29 f0                	sub    %esi,%eax
810054a5:	eb 03                	jmp    810054aa <__sfvwrite_r+0x386>
810054a7:	8d 47 01             	lea    0x1(%edi),%eax
810054aa:	89 45 e0             	mov    %eax,-0x20(%ebp)
810054ad:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810054b4:	8b 45 e0             	mov    -0x20(%ebp),%eax
810054b7:	39 c7                	cmp    %eax,%edi
810054b9:	0f 46 c7             	cmovbe %edi,%eax
810054bc:	89 c1                	mov    %eax,%ecx
810054be:	8b 53 08             	mov    0x8(%ebx),%edx
810054c1:	8b 43 14             	mov    0x14(%ebx),%eax
810054c4:	8d 34 02             	lea    (%edx,%eax,1),%esi
810054c7:	8b 13                	mov    (%ebx),%edx
810054c9:	8b 43 10             	mov    0x10(%ebx),%eax
810054cc:	39 c2                	cmp    %eax,%edx
810054ce:	76 38                	jbe    81005508 <__sfvwrite_r+0x3e4>
810054d0:	39 f1                	cmp    %esi,%ecx
810054d2:	7e 34                	jle    81005508 <__sfvwrite_r+0x3e4>
810054d4:	89 f2                	mov    %esi,%edx
810054d6:	8b 03                	mov    (%ebx),%eax
810054d8:	83 ec 04             	sub    $0x4,%esp
810054db:	52                   	push   %edx
810054dc:	ff 75 c4             	push   -0x3c(%ebp)
810054df:	50                   	push   %eax
810054e0:	e8 2b 05 00 00       	call   81005a10 <memmove>
810054e5:	83 c4 10             	add    $0x10,%esp
810054e8:	8b 03                	mov    (%ebx),%eax
810054ea:	89 f2                	mov    %esi,%edx
810054ec:	01 d0                	add    %edx,%eax
810054ee:	89 03                	mov    %eax,(%ebx)
810054f0:	83 ec 08             	sub    $0x8,%esp
810054f3:	53                   	push   %ebx
810054f4:	ff 75 08             	push   0x8(%ebp)
810054f7:	e8 42 b6 ff ff       	call   81000b3e <_fflush_r>
810054fc:	83 c4 10             	add    $0x10,%esp
810054ff:	85 c0                	test   %eax,%eax
81005501:	74 4f                	je     81005552 <__sfvwrite_r+0x42e>
81005503:	e9 a2 00 00 00       	jmp    810055aa <__sfvwrite_r+0x486>
81005508:	8b 73 14             	mov    0x14(%ebx),%esi
8100550b:	89 c8                	mov    %ecx,%eax
8100550d:	39 c6                	cmp    %eax,%esi
8100550f:	7f 1b                	jg     8100552c <__sfvwrite_r+0x408>
81005511:	8b 53 24             	mov    0x24(%ebx),%edx
81005514:	8b 43 1c             	mov    0x1c(%ebx),%eax
81005517:	56                   	push   %esi
81005518:	ff 75 c4             	push   -0x3c(%ebp)
8100551b:	50                   	push   %eax
8100551c:	ff 75 08             	push   0x8(%ebp)
8100551f:	ff d2                	call   *%edx
81005521:	83 c4 10             	add    $0x10,%esp
81005524:	89 c6                	mov    %eax,%esi
81005526:	85 f6                	test   %esi,%esi
81005528:	7f 28                	jg     81005552 <__sfvwrite_r+0x42e>
8100552a:	eb 7e                	jmp    810055aa <__sfvwrite_r+0x486>
8100552c:	89 ce                	mov    %ecx,%esi
8100552e:	89 f2                	mov    %esi,%edx
81005530:	8b 03                	mov    (%ebx),%eax
81005532:	83 ec 04             	sub    $0x4,%esp
81005535:	52                   	push   %edx
81005536:	ff 75 c4             	push   -0x3c(%ebp)
81005539:	50                   	push   %eax
8100553a:	e8 d1 04 00 00       	call   81005a10 <memmove>
8100553f:	83 c4 10             	add    $0x10,%esp
81005542:	8b 43 08             	mov    0x8(%ebx),%eax
81005545:	29 f0                	sub    %esi,%eax
81005547:	89 43 08             	mov    %eax,0x8(%ebx)
8100554a:	8b 03                	mov    (%ebx),%eax
8100554c:	89 f2                	mov    %esi,%edx
8100554e:	01 d0                	add    %edx,%eax
81005550:	89 03                	mov    %eax,(%ebx)
81005552:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005555:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005559:	75 1a                	jne    81005575 <__sfvwrite_r+0x451>
8100555b:	83 ec 08             	sub    $0x8,%esp
8100555e:	53                   	push   %ebx
8100555f:	ff 75 08             	push   0x8(%ebp)
81005562:	e8 d7 b5 ff ff       	call   81000b3e <_fflush_r>
81005567:	83 c4 10             	add    $0x10,%esp
8100556a:	85 c0                	test   %eax,%eax
8100556c:	75 3b                	jne    810055a9 <__sfvwrite_r+0x485>
8100556e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005575:	89 f0                	mov    %esi,%eax
81005577:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100557a:	89 f0                	mov    %esi,%eax
8100557c:	29 c7                	sub    %eax,%edi
8100557e:	8b 45 10             	mov    0x10(%ebp),%eax
81005581:	8b 40 08             	mov    0x8(%eax),%eax
81005584:	89 f2                	mov    %esi,%edx
81005586:	29 d0                	sub    %edx,%eax
81005588:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100558b:	89 41 08             	mov    %eax,0x8(%ecx)
8100558e:	8b 45 10             	mov    0x10(%ebp),%eax
81005591:	8b 40 08             	mov    0x8(%eax),%eax
81005594:	85 c0                	test   %eax,%eax
81005596:	0f 85 dc fe ff ff    	jne    81005478 <__sfvwrite_r+0x354>
8100559c:	b8 00 00 00 00       	mov    $0x0,%eax
810055a1:	eb 17                	jmp    810055ba <__sfvwrite_r+0x496>
810055a3:	90                   	nop
810055a4:	eb 04                	jmp    810055aa <__sfvwrite_r+0x486>
810055a6:	90                   	nop
810055a7:	eb 01                	jmp    810055aa <__sfvwrite_r+0x486>
810055a9:	90                   	nop
810055aa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810055ae:	83 c8 40             	or     $0x40,%eax
810055b1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810055b5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810055ba:	8d 65 f4             	lea    -0xc(%ebp),%esp
810055bd:	5b                   	pop    %ebx
810055be:	5e                   	pop    %esi
810055bf:	5f                   	pop    %edi
810055c0:	5d                   	pop    %ebp
810055c1:	c3                   	ret    

810055c2 <_findenv>:
810055c2:	55                   	push   %ebp
810055c3:	89 e5                	mov    %esp,%ebp
810055c5:	83 ec 08             	sub    $0x8,%esp
810055c8:	8b 55 08             	mov    0x8(%ebp),%edx
810055cb:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810055d0:	83 ec 04             	sub    $0x4,%esp
810055d3:	ff 75 0c             	push   0xc(%ebp)
810055d6:	52                   	push   %edx
810055d7:	50                   	push   %eax
810055d8:	e8 25 00 00 00       	call   81005602 <_findenv_r>
810055dd:	83 c4 10             	add    $0x10,%esp
810055e0:	c9                   	leave  
810055e1:	c3                   	ret    

810055e2 <getenv>:
810055e2:	55                   	push   %ebp
810055e3:	89 e5                	mov    %esp,%ebp
810055e5:	83 ec 18             	sub    $0x18,%esp
810055e8:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810055ed:	83 ec 04             	sub    $0x4,%esp
810055f0:	8d 55 f4             	lea    -0xc(%ebp),%edx
810055f3:	52                   	push   %edx
810055f4:	ff 75 08             	push   0x8(%ebp)
810055f7:	50                   	push   %eax
810055f8:	e8 05 00 00 00       	call   81005602 <_findenv_r>
810055fd:	83 c4 10             	add    $0x10,%esp
81005600:	c9                   	leave  
81005601:	c3                   	ret    

81005602 <_findenv_r>:
81005602:	55                   	push   %ebp
81005603:	89 e5                	mov    %esp,%ebp
81005605:	57                   	push   %edi
81005606:	56                   	push   %esi
81005607:	53                   	push   %ebx
81005608:	83 ec 1c             	sub    $0x1c,%esp
8100560b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100560e:	83 ec 0c             	sub    $0xc,%esp
81005611:	ff 75 08             	push   0x8(%ebp)
81005614:	e8 a7 12 00 00       	call   810068c0 <__env_lock>
81005619:	83 c4 10             	add    $0x10,%esp
8100561c:	a1 f0 77 00 81       	mov    0x810077f0,%eax
81005621:	8b 00                	mov    (%eax),%eax
81005623:	85 c0                	test   %eax,%eax
81005625:	75 18                	jne    8100563f <_findenv_r+0x3d>
81005627:	83 ec 0c             	sub    $0xc,%esp
8100562a:	ff 75 08             	push   0x8(%ebp)
8100562d:	e8 94 12 00 00       	call   810068c6 <__env_unlock>
81005632:	83 c4 10             	add    $0x10,%esp
81005635:	b8 00 00 00 00       	mov    $0x0,%eax
8100563a:	e9 a8 00 00 00       	jmp    810056e7 <_findenv_r+0xe5>
8100563f:	89 7d e4             	mov    %edi,-0x1c(%ebp)
81005642:	eb 04                	jmp    81005648 <_findenv_r+0x46>
81005644:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005648:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100564b:	0f b6 00             	movzbl (%eax),%eax
8100564e:	84 c0                	test   %al,%al
81005650:	74 0a                	je     8100565c <_findenv_r+0x5a>
81005652:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005655:	0f b6 00             	movzbl (%eax),%eax
81005658:	3c 3d                	cmp    $0x3d,%al
8100565a:	75 e8                	jne    81005644 <_findenv_r+0x42>
8100565c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100565f:	0f b6 00             	movzbl (%eax),%eax
81005662:	3c 3d                	cmp    $0x3d,%al
81005664:	74 6e                	je     810056d4 <_findenv_r+0xd2>
81005666:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005669:	29 f8                	sub    %edi,%eax
8100566b:	89 c6                	mov    %eax,%esi
8100566d:	a1 f0 77 00 81       	mov    0x810077f0,%eax
81005672:	8b 18                	mov    (%eax),%ebx
81005674:	eb 58                	jmp    810056ce <_findenv_r+0xcc>
81005676:	89 f2                	mov    %esi,%edx
81005678:	8b 03                	mov    (%ebx),%eax
8100567a:	83 ec 04             	sub    $0x4,%esp
8100567d:	52                   	push   %edx
8100567e:	57                   	push   %edi
8100567f:	50                   	push   %eax
81005680:	e8 d3 0f 00 00       	call   81006658 <strncmp>
81005685:	83 c4 10             	add    $0x10,%esp
81005688:	85 c0                	test   %eax,%eax
8100568a:	75 3f                	jne    810056cb <_findenv_r+0xc9>
8100568c:	8b 03                	mov    (%ebx),%eax
8100568e:	89 f2                	mov    %esi,%edx
81005690:	01 d0                	add    %edx,%eax
81005692:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005695:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005698:	0f b6 00             	movzbl (%eax),%eax
8100569b:	3c 3d                	cmp    $0x3d,%al
8100569d:	75 2c                	jne    810056cb <_findenv_r+0xc9>
8100569f:	a1 f0 77 00 81       	mov    0x810077f0,%eax
810056a4:	8b 10                	mov    (%eax),%edx
810056a6:	89 d8                	mov    %ebx,%eax
810056a8:	29 d0                	sub    %edx,%eax
810056aa:	c1 f8 02             	sar    $0x2,%eax
810056ad:	89 c2                	mov    %eax,%edx
810056af:	8b 45 10             	mov    0x10(%ebp),%eax
810056b2:	89 10                	mov    %edx,(%eax)
810056b4:	83 ec 0c             	sub    $0xc,%esp
810056b7:	ff 75 08             	push   0x8(%ebp)
810056ba:	e8 07 12 00 00       	call   810068c6 <__env_unlock>
810056bf:	83 c4 10             	add    $0x10,%esp
810056c2:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810056c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810056c9:	eb 1c                	jmp    810056e7 <_findenv_r+0xe5>
810056cb:	83 c3 04             	add    $0x4,%ebx
810056ce:	8b 03                	mov    (%ebx),%eax
810056d0:	85 c0                	test   %eax,%eax
810056d2:	75 a2                	jne    81005676 <_findenv_r+0x74>
810056d4:	83 ec 0c             	sub    $0xc,%esp
810056d7:	ff 75 08             	push   0x8(%ebp)
810056da:	e8 e7 11 00 00       	call   810068c6 <__env_unlock>
810056df:	83 c4 10             	add    $0x10,%esp
810056e2:	b8 00 00 00 00       	mov    $0x0,%eax
810056e7:	8d 65 f4             	lea    -0xc(%ebp),%esp
810056ea:	5b                   	pop    %ebx
810056eb:	5e                   	pop    %esi
810056ec:	5f                   	pop    %edi
810056ed:	5d                   	pop    %ebp
810056ee:	c3                   	ret    

810056ef <_getenv_r>:
810056ef:	55                   	push   %ebp
810056f0:	89 e5                	mov    %esp,%ebp
810056f2:	83 ec 18             	sub    $0x18,%esp
810056f5:	83 ec 04             	sub    $0x4,%esp
810056f8:	8d 45 f4             	lea    -0xc(%ebp),%eax
810056fb:	50                   	push   %eax
810056fc:	ff 75 0c             	push   0xc(%ebp)
810056ff:	ff 75 08             	push   0x8(%ebp)
81005702:	e8 fb fe ff ff       	call   81005602 <_findenv_r>
81005707:	83 c4 10             	add    $0x10,%esp
8100570a:	c9                   	leave  
8100570b:	c3                   	ret    

8100570c <__get_global_locale>:
8100570c:	55                   	push   %ebp
8100570d:	89 e5                	mov    %esp,%ebp
8100570f:	b8 00 78 00 81       	mov    $0x81007800,%eax
81005714:	5d                   	pop    %ebp
81005715:	c3                   	ret    

81005716 <__get_current_locale>:
81005716:	55                   	push   %ebp
81005717:	89 e5                	mov    %esp,%ebp
81005719:	e8 ee ff ff ff       	call   8100570c <__get_global_locale>
8100571e:	5d                   	pop    %ebp
8100571f:	c3                   	ret    

81005720 <_setlocale_r>:
81005720:	55                   	push   %ebp
81005721:	89 e5                	mov    %esp,%ebp
81005723:	83 ec 08             	sub    $0x8,%esp
81005726:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100572a:	74 4c                	je     81005778 <_setlocale_r+0x58>
8100572c:	83 ec 08             	sub    $0x8,%esp
8100572f:	68 64 6f 00 81       	push   $0x81006f64
81005734:	ff 75 10             	push   0x10(%ebp)
81005737:	e8 f0 ec ff ff       	call   8100442c <strcmp>
8100573c:	83 c4 10             	add    $0x10,%esp
8100573f:	85 c0                	test   %eax,%eax
81005741:	74 35                	je     81005778 <_setlocale_r+0x58>
81005743:	83 ec 08             	sub    $0x8,%esp
81005746:	68 6a 6f 00 81       	push   $0x81006f6a
8100574b:	ff 75 10             	push   0x10(%ebp)
8100574e:	e8 d9 ec ff ff       	call   8100442c <strcmp>
81005753:	83 c4 10             	add    $0x10,%esp
81005756:	85 c0                	test   %eax,%eax
81005758:	74 1e                	je     81005778 <_setlocale_r+0x58>
8100575a:	83 ec 08             	sub    $0x8,%esp
8100575d:	68 63 6f 00 81       	push   $0x81006f63
81005762:	ff 75 10             	push   0x10(%ebp)
81005765:	e8 c2 ec ff ff       	call   8100442c <strcmp>
8100576a:	83 c4 10             	add    $0x10,%esp
8100576d:	85 c0                	test   %eax,%eax
8100576f:	74 07                	je     81005778 <_setlocale_r+0x58>
81005771:	b8 00 00 00 00       	mov    $0x0,%eax
81005776:	eb 05                	jmp    8100577d <_setlocale_r+0x5d>
81005778:	b8 6a 6f 00 81       	mov    $0x81006f6a,%eax
8100577d:	c9                   	leave  
8100577e:	c3                   	ret    

8100577f <__locale_mb_cur_max>:
8100577f:	55                   	push   %ebp
81005780:	89 e5                	mov    %esp,%ebp
81005782:	e8 8f ff ff ff       	call   81005716 <__get_current_locale>
81005787:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100578e:	0f be c0             	movsbl %al,%eax
81005791:	5d                   	pop    %ebp
81005792:	c3                   	ret    

81005793 <setlocale>:
81005793:	55                   	push   %ebp
81005794:	89 e5                	mov    %esp,%ebp
81005796:	83 ec 08             	sub    $0x8,%esp
81005799:	a1 c4 73 00 81       	mov    0x810073c4,%eax
8100579e:	83 ec 04             	sub    $0x4,%esp
810057a1:	ff 75 0c             	push   0xc(%ebp)
810057a4:	ff 75 08             	push   0x8(%ebp)
810057a7:	50                   	push   %eax
810057a8:	e8 73 ff ff ff       	call   81005720 <_setlocale_r>
810057ad:	83 c4 10             	add    $0x10,%esp
810057b0:	c9                   	leave  
810057b1:	c3                   	ret    

810057b2 <_lseek_r>:
810057b2:	55                   	push   %ebp
810057b3:	89 e5                	mov    %esp,%ebp
810057b5:	83 ec 18             	sub    $0x18,%esp
810057b8:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
810057bf:	00 00 00 
810057c2:	83 ec 04             	sub    $0x4,%esp
810057c5:	ff 75 14             	push   0x14(%ebp)
810057c8:	ff 75 10             	push   0x10(%ebp)
810057cb:	ff 75 0c             	push   0xc(%ebp)
810057ce:	e8 d3 af ff ff       	call   810007a6 <lseek>
810057d3:	83 c4 10             	add    $0x10,%esp
810057d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057d9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810057dd:	75 14                	jne    810057f3 <_lseek_r+0x41>
810057df:	a1 14 80 00 81       	mov    0x81008014,%eax
810057e4:	85 c0                	test   %eax,%eax
810057e6:	74 0b                	je     810057f3 <_lseek_r+0x41>
810057e8:	8b 15 14 80 00 81    	mov    0x81008014,%edx
810057ee:	8b 45 08             	mov    0x8(%ebp),%eax
810057f1:	89 10                	mov    %edx,(%eax)
810057f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057f6:	c9                   	leave  
810057f7:	c3                   	ret    

810057f8 <__smakebuf_r>:
810057f8:	55                   	push   %ebp
810057f9:	89 e5                	mov    %esp,%ebp
810057fb:	56                   	push   %esi
810057fc:	53                   	push   %ebx
810057fd:	83 ec 10             	sub    $0x10,%esp
81005800:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005803:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005807:	98                   	cwtl   
81005808:	83 e0 02             	and    $0x2,%eax
8100580b:	85 c0                	test   %eax,%eax
8100580d:	74 16                	je     81005825 <__smakebuf_r+0x2d>
8100580f:	8d 43 43             	lea    0x43(%ebx),%eax
81005812:	89 03                	mov    %eax,(%ebx)
81005814:	8b 03                	mov    (%ebx),%eax
81005816:	89 43 10             	mov    %eax,0x10(%ebx)
81005819:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005820:	e9 b9 00 00 00       	jmp    810058de <__smakebuf_r+0xe6>
81005825:	8d 45 ec             	lea    -0x14(%ebp),%eax
81005828:	50                   	push   %eax
81005829:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100582c:	50                   	push   %eax
8100582d:	53                   	push   %ebx
8100582e:	ff 75 08             	push   0x8(%ebp)
81005831:	e8 af 00 00 00       	call   810058e5 <__swhatbuf_r>
81005836:	83 c4 10             	add    $0x10,%esp
81005839:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100583c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100583f:	83 ec 08             	sub    $0x8,%esp
81005842:	50                   	push   %eax
81005843:	ff 75 08             	push   0x8(%ebp)
81005846:	e8 cf d0 ff ff       	call   8100291a <_malloc_r>
8100584b:	83 c4 10             	add    $0x10,%esp
8100584e:	89 c6                	mov    %eax,%esi
81005850:	85 f6                	test   %esi,%esi
81005852:	75 2f                	jne    81005883 <__smakebuf_r+0x8b>
81005854:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005858:	98                   	cwtl   
81005859:	25 00 02 00 00       	and    $0x200,%eax
8100585e:	85 c0                	test   %eax,%eax
81005860:	75 7c                	jne    810058de <__smakebuf_r+0xe6>
81005862:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005866:	83 e0 fc             	and    $0xfffffffc,%eax
81005869:	83 c8 02             	or     $0x2,%eax
8100586c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005870:	8d 43 43             	lea    0x43(%ebx),%eax
81005873:	89 03                	mov    %eax,(%ebx)
81005875:	8b 03                	mov    (%ebx),%eax
81005877:	89 43 10             	mov    %eax,0x10(%ebx)
8100587a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005881:	eb 5b                	jmp    810058de <__smakebuf_r+0xe6>
81005883:	8b 45 08             	mov    0x8(%ebp),%eax
81005886:	c7 40 3c 06 10 00 81 	movl   $0x81001006,0x3c(%eax)
8100588d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005891:	0c 80                	or     $0x80,%al
81005893:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005897:	89 33                	mov    %esi,(%ebx)
81005899:	8b 03                	mov    (%ebx),%eax
8100589b:	89 43 10             	mov    %eax,0x10(%ebx)
8100589e:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058a1:	89 43 14             	mov    %eax,0x14(%ebx)
810058a4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810058a7:	85 c0                	test   %eax,%eax
810058a9:	74 26                	je     810058d1 <__smakebuf_r+0xd9>
810058ab:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810058af:	98                   	cwtl   
810058b0:	83 ec 08             	sub    $0x8,%esp
810058b3:	50                   	push   %eax
810058b4:	ff 75 08             	push   0x8(%ebp)
810058b7:	e8 53 10 00 00       	call   8100690f <_isatty_r>
810058bc:	83 c4 10             	add    $0x10,%esp
810058bf:	85 c0                	test   %eax,%eax
810058c1:	74 0e                	je     810058d1 <__smakebuf_r+0xd9>
810058c3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810058c7:	83 e0 fc             	and    $0xfffffffc,%eax
810058ca:	83 c8 01             	or     $0x1,%eax
810058cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810058d1:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810058d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810058d8:	09 d0                	or     %edx,%eax
810058da:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810058de:	8d 65 f8             	lea    -0x8(%ebp),%esp
810058e1:	5b                   	pop    %ebx
810058e2:	5e                   	pop    %esi
810058e3:	5d                   	pop    %ebp
810058e4:	c3                   	ret    

810058e5 <__swhatbuf_r>:
810058e5:	55                   	push   %ebp
810058e6:	89 e5                	mov    %esp,%ebp
810058e8:	83 ec 58             	sub    $0x58,%esp
810058eb:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810058f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810058f5:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810058f9:	66 85 c0             	test   %ax,%ax
810058fc:	78 1f                	js     8100591d <__swhatbuf_r+0x38>
810058fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81005901:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005905:	98                   	cwtl   
81005906:	83 ec 04             	sub    $0x4,%esp
81005909:	8d 55 ac             	lea    -0x54(%ebp),%edx
8100590c:	52                   	push   %edx
8100590d:	50                   	push   %eax
8100590e:	ff 75 08             	push   0x8(%ebp)
81005911:	e8 b6 0f 00 00       	call   810068cc <_fstat_r>
81005916:	83 c4 10             	add    $0x10,%esp
81005919:	85 c0                	test   %eax,%eax
8100591b:	79 35                	jns    81005952 <__swhatbuf_r+0x6d>
8100591d:	8b 45 14             	mov    0x14(%ebp),%eax
81005920:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005926:	8b 45 0c             	mov    0xc(%ebp),%eax
81005929:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100592d:	98                   	cwtl   
8100592e:	25 80 00 00 00       	and    $0x80,%eax
81005933:	85 c0                	test   %eax,%eax
81005935:	74 0b                	je     81005942 <__swhatbuf_r+0x5d>
81005937:	8b 45 10             	mov    0x10(%ebp),%eax
8100593a:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005940:	eb 09                	jmp    8100594b <__swhatbuf_r+0x66>
81005942:	8b 45 10             	mov    0x10(%ebp),%eax
81005945:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100594b:	b8 00 00 00 00       	mov    $0x0,%eax
81005950:	eb 24                	jmp    81005976 <__swhatbuf_r+0x91>
81005952:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005955:	25 00 f0 00 00       	and    $0xf000,%eax
8100595a:	3d 00 20 00 00       	cmp    $0x2000,%eax
8100595f:	0f 94 c0             	sete   %al
81005962:	0f b6 d0             	movzbl %al,%edx
81005965:	8b 45 14             	mov    0x14(%ebp),%eax
81005968:	89 10                	mov    %edx,(%eax)
8100596a:	8b 45 10             	mov    0x10(%ebp),%eax
8100596d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005973:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005976:	c9                   	leave  
81005977:	c3                   	ret    

81005978 <__get_global_locale>:
81005978:	55                   	push   %ebp
81005979:	89 e5                	mov    %esp,%ebp
8100597b:	b8 00 78 00 81       	mov    $0x81007800,%eax
81005980:	5d                   	pop    %ebp
81005981:	c3                   	ret    

81005982 <__get_current_locale>:
81005982:	55                   	push   %ebp
81005983:	89 e5                	mov    %esp,%ebp
81005985:	e8 ee ff ff ff       	call   81005978 <__get_global_locale>
8100598a:	5d                   	pop    %ebp
8100598b:	c3                   	ret    

8100598c <_mbtowc_r>:
8100598c:	55                   	push   %ebp
8100598d:	89 e5                	mov    %esp,%ebp
8100598f:	83 ec 08             	sub    $0x8,%esp
81005992:	e8 eb ff ff ff       	call   81005982 <__get_current_locale>
81005997:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
8100599d:	83 ec 0c             	sub    $0xc,%esp
810059a0:	ff 75 18             	push   0x18(%ebp)
810059a3:	ff 75 14             	push   0x14(%ebp)
810059a6:	ff 75 10             	push   0x10(%ebp)
810059a9:	ff 75 0c             	push   0xc(%ebp)
810059ac:	ff 75 08             	push   0x8(%ebp)
810059af:	ff d0                	call   *%eax
810059b1:	83 c4 20             	add    $0x20,%esp
810059b4:	c9                   	leave  
810059b5:	c3                   	ret    

810059b6 <__ascii_mbtowc>:
810059b6:	55                   	push   %ebp
810059b7:	89 e5                	mov    %esp,%ebp
810059b9:	83 ec 10             	sub    $0x10,%esp
810059bc:	8b 45 10             	mov    0x10(%ebp),%eax
810059bf:	89 45 fc             	mov    %eax,-0x4(%ebp)
810059c2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810059c6:	75 06                	jne    810059ce <__ascii_mbtowc+0x18>
810059c8:	8d 45 f8             	lea    -0x8(%ebp),%eax
810059cb:	89 45 0c             	mov    %eax,0xc(%ebp)
810059ce:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810059d2:	75 07                	jne    810059db <__ascii_mbtowc+0x25>
810059d4:	b8 00 00 00 00       	mov    $0x0,%eax
810059d9:	eb 31                	jmp    81005a0c <__ascii_mbtowc+0x56>
810059db:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810059df:	75 07                	jne    810059e8 <__ascii_mbtowc+0x32>
810059e1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
810059e6:	eb 24                	jmp    81005a0c <__ascii_mbtowc+0x56>
810059e8:	8b 45 fc             	mov    -0x4(%ebp),%eax
810059eb:	0f b6 00             	movzbl (%eax),%eax
810059ee:	0f b6 d0             	movzbl %al,%edx
810059f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810059f4:	89 10                	mov    %edx,(%eax)
810059f6:	8b 45 fc             	mov    -0x4(%ebp),%eax
810059f9:	0f b6 00             	movzbl (%eax),%eax
810059fc:	84 c0                	test   %al,%al
810059fe:	75 07                	jne    81005a07 <__ascii_mbtowc+0x51>
81005a00:	b8 00 00 00 00       	mov    $0x0,%eax
81005a05:	eb 05                	jmp    81005a0c <__ascii_mbtowc+0x56>
81005a07:	b8 01 00 00 00       	mov    $0x1,%eax
81005a0c:	c9                   	leave  
81005a0d:	c3                   	ret    
81005a0e:	66 90                	xchg   %ax,%ax

81005a10 <memmove>:
81005a10:	55                   	push   %ebp
81005a11:	89 e5                	mov    %esp,%ebp
81005a13:	56                   	push   %esi
81005a14:	57                   	push   %edi
81005a15:	53                   	push   %ebx
81005a16:	8b 7d 08             	mov    0x8(%ebp),%edi
81005a19:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005a1c:	8b 75 0c             	mov    0xc(%ebp),%esi
81005a1f:	fc                   	cld    
81005a20:	39 fe                	cmp    %edi,%esi
81005a22:	73 43                	jae    81005a67 <memmove+0x57>
81005a24:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005a28:	39 df                	cmp    %ebx,%edi
81005a2a:	77 3b                	ja     81005a67 <memmove+0x57>
81005a2c:	01 ce                	add    %ecx,%esi
81005a2e:	01 cf                	add    %ecx,%edi
81005a30:	fd                   	std    
81005a31:	83 f9 08             	cmp    $0x8,%ecx
81005a34:	76 2b                	jbe    81005a61 <memmove+0x51>
81005a36:	89 fa                	mov    %edi,%edx
81005a38:	89 cb                	mov    %ecx,%ebx
81005a3a:	83 e2 03             	and    $0x3,%edx
81005a3d:	74 0c                	je     81005a4b <memmove+0x3b>
81005a3f:	89 d1                	mov    %edx,%ecx
81005a41:	4e                   	dec    %esi
81005a42:	4f                   	dec    %edi
81005a43:	29 cb                	sub    %ecx,%ebx
81005a45:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a47:	89 d9                	mov    %ebx,%ecx
81005a49:	46                   	inc    %esi
81005a4a:	47                   	inc    %edi
81005a4b:	c1 e9 02             	shr    $0x2,%ecx
81005a4e:	83 ee 04             	sub    $0x4,%esi
81005a51:	83 ef 04             	sub    $0x4,%edi
81005a54:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005a56:	83 c6 04             	add    $0x4,%esi
81005a59:	83 c7 04             	add    $0x4,%edi
81005a5c:	89 d9                	mov    %ebx,%ecx
81005a5e:	83 e1 03             	and    $0x3,%ecx
81005a61:	4e                   	dec    %esi
81005a62:	4f                   	dec    %edi
81005a63:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a65:	eb 2a                	jmp    81005a91 <memmove+0x81>
81005a67:	83 f9 08             	cmp    $0x8,%ecx
81005a6a:	76 23                	jbe    81005a8f <memmove+0x7f>
81005a6c:	89 fa                	mov    %edi,%edx
81005a6e:	89 cb                	mov    %ecx,%ebx
81005a70:	83 e2 03             	and    $0x3,%edx
81005a73:	74 10                	je     81005a85 <memmove+0x75>
81005a75:	b9 04 00 00 00       	mov    $0x4,%ecx
81005a7a:	29 d1                	sub    %edx,%ecx
81005a7c:	83 e1 03             	and    $0x3,%ecx
81005a7f:	29 cb                	sub    %ecx,%ebx
81005a81:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a83:	89 d9                	mov    %ebx,%ecx
81005a85:	c1 e9 02             	shr    $0x2,%ecx
81005a88:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005a8a:	89 d9                	mov    %ebx,%ecx
81005a8c:	83 e1 03             	and    $0x3,%ecx
81005a8f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005a91:	8b 45 08             	mov    0x8(%ebp),%eax
81005a94:	fc                   	cld    
81005a95:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005a98:	5b                   	pop    %ebx
81005a99:	5f                   	pop    %edi
81005a9a:	5e                   	pop    %esi
81005a9b:	c9                   	leave  
81005a9c:	c3                   	ret    

81005a9d <__sputc_r>:
81005a9d:	55                   	push   %ebp
81005a9e:	89 e5                	mov    %esp,%ebp
81005aa0:	83 ec 08             	sub    $0x8,%esp
81005aa3:	8b 45 10             	mov    0x10(%ebp),%eax
81005aa6:	8b 40 08             	mov    0x8(%eax),%eax
81005aa9:	8d 50 ff             	lea    -0x1(%eax),%edx
81005aac:	8b 45 10             	mov    0x10(%ebp),%eax
81005aaf:	89 50 08             	mov    %edx,0x8(%eax)
81005ab2:	8b 45 10             	mov    0x10(%ebp),%eax
81005ab5:	8b 40 08             	mov    0x8(%eax),%eax
81005ab8:	85 c0                	test   %eax,%eax
81005aba:	79 17                	jns    81005ad3 <__sputc_r+0x36>
81005abc:	8b 45 10             	mov    0x10(%ebp),%eax
81005abf:	8b 50 08             	mov    0x8(%eax),%edx
81005ac2:	8b 45 10             	mov    0x10(%ebp),%eax
81005ac5:	8b 40 18             	mov    0x18(%eax),%eax
81005ac8:	39 c2                	cmp    %eax,%edx
81005aca:	7c 21                	jl     81005aed <__sputc_r+0x50>
81005acc:	8b 45 0c             	mov    0xc(%ebp),%eax
81005acf:	3c 0a                	cmp    $0xa,%al
81005ad1:	74 1a                	je     81005aed <__sputc_r+0x50>
81005ad3:	8b 45 10             	mov    0x10(%ebp),%eax
81005ad6:	8b 00                	mov    (%eax),%eax
81005ad8:	8d 48 01             	lea    0x1(%eax),%ecx
81005adb:	8b 55 10             	mov    0x10(%ebp),%edx
81005ade:	89 0a                	mov    %ecx,(%edx)
81005ae0:	8b 55 0c             	mov    0xc(%ebp),%edx
81005ae3:	88 10                	mov    %dl,(%eax)
81005ae5:	0f b6 00             	movzbl (%eax),%eax
81005ae8:	0f b6 c0             	movzbl %al,%eax
81005aeb:	eb 14                	jmp    81005b01 <__sputc_r+0x64>
81005aed:	83 ec 04             	sub    $0x4,%esp
81005af0:	ff 75 10             	push   0x10(%ebp)
81005af3:	ff 75 0c             	push   0xc(%ebp)
81005af6:	ff 75 08             	push   0x8(%ebp)
81005af9:	e8 c1 ed ff ff       	call   810048bf <__swbuf_r>
81005afe:	83 c4 10             	add    $0x10,%esp
81005b01:	c9                   	leave  
81005b02:	c3                   	ret    

81005b03 <_putc_r>:
81005b03:	55                   	push   %ebp
81005b04:	89 e5                	mov    %esp,%ebp
81005b06:	53                   	push   %ebx
81005b07:	83 ec 14             	sub    $0x14,%esp
81005b0a:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005b0d:	8b 45 08             	mov    0x8(%ebp),%eax
81005b10:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b13:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005b17:	74 18                	je     81005b31 <_putc_r+0x2e>
81005b19:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b1c:	8b 40 38             	mov    0x38(%eax),%eax
81005b1f:	85 c0                	test   %eax,%eax
81005b21:	75 0e                	jne    81005b31 <_putc_r+0x2e>
81005b23:	83 ec 0c             	sub    $0xc,%esp
81005b26:	ff 75 f4             	push   -0xc(%ebp)
81005b29:	e8 13 b5 ff ff       	call   81001041 <__sinit>
81005b2e:	83 c4 10             	add    $0x10,%esp
81005b31:	83 ec 04             	sub    $0x4,%esp
81005b34:	53                   	push   %ebx
81005b35:	ff 75 0c             	push   0xc(%ebp)
81005b38:	ff 75 08             	push   0x8(%ebp)
81005b3b:	e8 5d ff ff ff       	call   81005a9d <__sputc_r>
81005b40:	83 c4 10             	add    $0x10,%esp
81005b43:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b49:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005b4c:	c9                   	leave  
81005b4d:	c3                   	ret    

81005b4e <putc>:
81005b4e:	55                   	push   %ebp
81005b4f:	89 e5                	mov    %esp,%ebp
81005b51:	53                   	push   %ebx
81005b52:	83 ec 14             	sub    $0x14,%esp
81005b55:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005b58:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81005b5d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b60:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b63:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005b66:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005b6a:	74 18                	je     81005b84 <putc+0x36>
81005b6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b6f:	8b 40 38             	mov    0x38(%eax),%eax
81005b72:	85 c0                	test   %eax,%eax
81005b74:	75 0e                	jne    81005b84 <putc+0x36>
81005b76:	83 ec 0c             	sub    $0xc,%esp
81005b79:	ff 75 f0             	push   -0x10(%ebp)
81005b7c:	e8 c0 b4 ff ff       	call   81001041 <__sinit>
81005b81:	83 c4 10             	add    $0x10,%esp
81005b84:	83 ec 04             	sub    $0x4,%esp
81005b87:	53                   	push   %ebx
81005b88:	ff 75 08             	push   0x8(%ebp)
81005b8b:	ff 75 f4             	push   -0xc(%ebp)
81005b8e:	e8 0a ff ff ff       	call   81005a9d <__sputc_r>
81005b93:	83 c4 10             	add    $0x10,%esp
81005b96:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005b99:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005b9c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005b9f:	c9                   	leave  
81005ba0:	c3                   	ret    

81005ba1 <_read_r>:
81005ba1:	55                   	push   %ebp
81005ba2:	89 e5                	mov    %esp,%ebp
81005ba4:	83 ec 18             	sub    $0x18,%esp
81005ba7:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
81005bae:	00 00 00 
81005bb1:	83 ec 04             	sub    $0x4,%esp
81005bb4:	ff 75 14             	push   0x14(%ebp)
81005bb7:	ff 75 10             	push   0x10(%ebp)
81005bba:	ff 75 0c             	push   0xc(%ebp)
81005bbd:	e8 69 ab ff ff       	call   8100072b <read>
81005bc2:	83 c4 10             	add    $0x10,%esp
81005bc5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005bc8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005bcc:	75 14                	jne    81005be2 <_read_r+0x41>
81005bce:	a1 14 80 00 81       	mov    0x81008014,%eax
81005bd3:	85 c0                	test   %eax,%eax
81005bd5:	74 0b                	je     81005be2 <_read_r+0x41>
81005bd7:	8b 15 14 80 00 81    	mov    0x81008014,%edx
81005bdd:	8b 45 08             	mov    0x8(%ebp),%eax
81005be0:	89 10                	mov    %edx,(%eax)
81005be2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005be5:	c9                   	leave  
81005be6:	c3                   	ret    

81005be7 <_realloc_r>:
81005be7:	55                   	push   %ebp
81005be8:	89 e5                	mov    %esp,%ebp
81005bea:	83 ec 78             	sub    $0x78,%esp
81005bed:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005bf1:	75 16                	jne    81005c09 <_realloc_r+0x22>
81005bf3:	83 ec 08             	sub    $0x8,%esp
81005bf6:	ff 75 10             	push   0x10(%ebp)
81005bf9:	ff 75 08             	push   0x8(%ebp)
81005bfc:	e8 19 cd ff ff       	call   8100291a <_malloc_r>
81005c01:	83 c4 10             	add    $0x10,%esp
81005c04:	e9 b6 08 00 00       	jmp    810064bf <_realloc_r+0x8d8>
81005c09:	83 ec 0c             	sub    $0xc,%esp
81005c0c:	ff 75 08             	push   0x8(%ebp)
81005c0f:	e8 e4 d6 ff ff       	call   810032f8 <__malloc_lock>
81005c14:	83 c4 10             	add    $0x10,%esp
81005c17:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c1a:	83 e8 08             	sub    $0x8,%eax
81005c1d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005c20:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c23:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005c26:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005c29:	8b 40 04             	mov    0x4(%eax),%eax
81005c2c:	83 e0 fc             	and    $0xfffffffc,%eax
81005c2f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005c32:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005c35:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005c38:	8b 45 10             	mov    0x10(%ebp),%eax
81005c3b:	83 c0 0b             	add    $0xb,%eax
81005c3e:	83 f8 16             	cmp    $0x16,%eax
81005c41:	76 0b                	jbe    81005c4e <_realloc_r+0x67>
81005c43:	8b 45 10             	mov    0x10(%ebp),%eax
81005c46:	83 c0 0b             	add    $0xb,%eax
81005c49:	83 e0 f8             	and    $0xfffffff8,%eax
81005c4c:	eb 05                	jmp    81005c53 <_realloc_r+0x6c>
81005c4e:	b8 10 00 00 00       	mov    $0x10,%eax
81005c53:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005c56:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c59:	85 c0                	test   %eax,%eax
81005c5b:	78 08                	js     81005c65 <_realloc_r+0x7e>
81005c5d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c60:	3b 45 10             	cmp    0x10(%ebp),%eax
81005c63:	73 13                	jae    81005c78 <_realloc_r+0x91>
81005c65:	8b 45 08             	mov    0x8(%ebp),%eax
81005c68:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005c6e:	b8 00 00 00 00       	mov    $0x0,%eax
81005c73:	e9 47 08 00 00       	jmp    810064bf <_realloc_r+0x8d8>
81005c78:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005c7b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c7e:	39 c2                	cmp    %eax,%edx
81005c80:	0f 8d 8b 07 00 00    	jge    81006411 <_realloc_r+0x82a>
81005c86:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005c89:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005c8c:	01 d0                	add    %edx,%eax
81005c8e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005c91:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81005c96:	8b 40 08             	mov    0x8(%eax),%eax
81005c99:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005c9c:	74 1e                	je     81005cbc <_realloc_r+0xd5>
81005c9e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005ca1:	8b 40 04             	mov    0x4(%eax),%eax
81005ca4:	83 e0 fe             	and    $0xfffffffe,%eax
81005ca7:	89 c2                	mov    %eax,%edx
81005ca9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cac:	01 d0                	add    %edx,%eax
81005cae:	8b 40 04             	mov    0x4(%eax),%eax
81005cb1:	83 e0 01             	and    $0x1,%eax
81005cb4:	85 c0                	test   %eax,%eax
81005cb6:	0f 85 ca 00 00 00    	jne    81005d86 <_realloc_r+0x19f>
81005cbc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cbf:	8b 40 04             	mov    0x4(%eax),%eax
81005cc2:	83 e0 fc             	and    $0xfffffffc,%eax
81005cc5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005cc8:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81005ccd:	8b 40 08             	mov    0x8(%eax),%eax
81005cd0:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005cd3:	75 71                	jne    81005d46 <_realloc_r+0x15f>
81005cd5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cd8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cdb:	01 d0                	add    %edx,%eax
81005cdd:	89 c2                	mov    %eax,%edx
81005cdf:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ce2:	83 c0 10             	add    $0x10,%eax
81005ce5:	39 c2                	cmp    %eax,%edx
81005ce7:	0f 8c a9 00 00 00    	jl     81005d96 <_realloc_r+0x1af>
81005ced:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005cf0:	01 45 f0             	add    %eax,-0x10(%ebp)
81005cf3:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81005cf8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005cfb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005cfe:	01 c8                	add    %ecx,%eax
81005d00:	89 42 08             	mov    %eax,0x8(%edx)
81005d03:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d06:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005d09:	89 c2                	mov    %eax,%edx
81005d0b:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81005d10:	8b 40 08             	mov    0x8(%eax),%eax
81005d13:	83 ca 01             	or     $0x1,%edx
81005d16:	89 50 04             	mov    %edx,0x4(%eax)
81005d19:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d1c:	8b 40 04             	mov    0x4(%eax),%eax
81005d1f:	83 e0 01             	and    $0x1,%eax
81005d22:	0b 45 bc             	or     -0x44(%ebp),%eax
81005d25:	89 c2                	mov    %eax,%edx
81005d27:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d2a:	89 50 04             	mov    %edx,0x4(%eax)
81005d2d:	83 ec 0c             	sub    $0xc,%esp
81005d30:	ff 75 08             	push   0x8(%ebp)
81005d33:	e8 c6 d5 ff ff       	call   810032fe <__malloc_unlock>
81005d38:	83 c4 10             	add    $0x10,%esp
81005d3b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d3e:	83 c0 08             	add    $0x8,%eax
81005d41:	e9 79 07 00 00       	jmp    810064bf <_realloc_r+0x8d8>
81005d46:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d49:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d4c:	01 d0                	add    %edx,%eax
81005d4e:	89 c2                	mov    %eax,%edx
81005d50:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005d53:	39 c2                	cmp    %eax,%edx
81005d55:	7c 3f                	jl     81005d96 <_realloc_r+0x1af>
81005d57:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d5a:	8b 40 0c             	mov    0xc(%eax),%eax
81005d5d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005d60:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d63:	8b 40 08             	mov    0x8(%eax),%eax
81005d66:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d69:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d6c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d6f:	89 50 0c             	mov    %edx,0xc(%eax)
81005d72:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d75:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d78:	89 50 08             	mov    %edx,0x8(%eax)
81005d7b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005d7e:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d81:	e9 8c 06 00 00       	jmp    81006412 <_realloc_r+0x82b>
81005d86:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005d8d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005d94:	eb 01                	jmp    81005d97 <_realloc_r+0x1b0>
81005d96:	90                   	nop
81005d97:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005d9a:	8b 40 04             	mov    0x4(%eax),%eax
81005d9d:	83 e0 01             	and    $0x1,%eax
81005da0:	85 c0                	test   %eax,%eax
81005da2:	0f 85 d6 04 00 00    	jne    8100627e <_realloc_r+0x697>
81005da8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005dab:	8b 00                	mov    (%eax),%eax
81005dad:	f7 d8                	neg    %eax
81005daf:	89 c2                	mov    %eax,%edx
81005db1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005db4:	01 d0                	add    %edx,%eax
81005db6:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005db9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005dbc:	8b 40 04             	mov    0x4(%eax),%eax
81005dbf:	83 e0 fc             	and    $0xfffffffc,%eax
81005dc2:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005dc5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005dc9:	0f 84 4a 03 00 00    	je     81006119 <_realloc_r+0x532>
81005dcf:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81005dd4:	8b 40 08             	mov    0x8(%eax),%eax
81005dd7:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005dda:	0f 85 b0 01 00 00    	jne    81005f90 <_realloc_r+0x3a9>
81005de0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005de3:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005de6:	01 c2                	add    %eax,%edx
81005de8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005deb:	01 d0                	add    %edx,%eax
81005ded:	89 c2                	mov    %eax,%edx
81005def:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005df2:	83 c0 10             	add    $0x10,%eax
81005df5:	39 c2                	cmp    %eax,%edx
81005df7:	0f 8c 1c 03 00 00    	jl     81006119 <_realloc_r+0x532>
81005dfd:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e00:	8b 40 0c             	mov    0xc(%eax),%eax
81005e03:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e06:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e09:	8b 40 08             	mov    0x8(%eax),%eax
81005e0c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e0f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e12:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e15:	89 50 0c             	mov    %edx,0xc(%eax)
81005e18:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e1b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e1e:	89 50 08             	mov    %edx,0x8(%eax)
81005e21:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e24:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e27:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e2a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005e2d:	01 d0                	add    %edx,%eax
81005e2f:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e32:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e35:	83 c0 08             	add    $0x8,%eax
81005e38:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e3b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e3e:	83 e8 04             	sub    $0x4,%eax
81005e41:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005e44:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005e48:	0f 87 de 00 00 00    	ja     81005f2c <_realloc_r+0x345>
81005e4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e51:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e54:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005e57:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005e5a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005e5e:	0f 86 90 00 00 00    	jbe    81005ef4 <_realloc_r+0x30d>
81005e64:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e67:	8d 42 04             	lea    0x4(%edx),%eax
81005e6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e6d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e70:	8d 48 04             	lea    0x4(%eax),%ecx
81005e73:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e76:	8b 12                	mov    (%edx),%edx
81005e78:	89 10                	mov    %edx,(%eax)
81005e7a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e7d:	8d 42 04             	lea    0x4(%edx),%eax
81005e80:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e83:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005e86:	8d 48 04             	lea    0x4(%eax),%ecx
81005e89:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005e8c:	8b 12                	mov    (%edx),%edx
81005e8e:	89 10                	mov    %edx,(%eax)
81005e90:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005e94:	76 5e                	jbe    81005ef4 <_realloc_r+0x30d>
81005e96:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005e99:	8d 42 04             	lea    0x4(%edx),%eax
81005e9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005e9f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ea2:	8d 48 04             	lea    0x4(%eax),%ecx
81005ea5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ea8:	8b 12                	mov    (%edx),%edx
81005eaa:	89 10                	mov    %edx,(%eax)
81005eac:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005eaf:	8d 42 04             	lea    0x4(%edx),%eax
81005eb2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005eb5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005eb8:	8d 48 04             	lea    0x4(%eax),%ecx
81005ebb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ebe:	8b 12                	mov    (%edx),%edx
81005ec0:	89 10                	mov    %edx,(%eax)
81005ec2:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005ec6:	76 2c                	jbe    81005ef4 <_realloc_r+0x30d>
81005ec8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ecb:	8d 42 04             	lea    0x4(%edx),%eax
81005ece:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ed1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ed4:	8d 48 04             	lea    0x4(%eax),%ecx
81005ed7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005eda:	8b 12                	mov    (%edx),%edx
81005edc:	89 10                	mov    %edx,(%eax)
81005ede:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ee1:	8d 42 04             	lea    0x4(%edx),%eax
81005ee4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ee7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005eea:	8d 48 04             	lea    0x4(%eax),%ecx
81005eed:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005ef0:	8b 12                	mov    (%edx),%edx
81005ef2:	89 10                	mov    %edx,(%eax)
81005ef4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ef7:	8d 42 04             	lea    0x4(%edx),%eax
81005efa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005efd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f00:	8d 48 04             	lea    0x4(%eax),%ecx
81005f03:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005f06:	8b 12                	mov    (%edx),%edx
81005f08:	89 10                	mov    %edx,(%eax)
81005f0a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005f0d:	8d 42 04             	lea    0x4(%edx),%eax
81005f10:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f13:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f16:	8d 48 04             	lea    0x4(%eax),%ecx
81005f19:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005f1c:	8b 12                	mov    (%edx),%edx
81005f1e:	89 10                	mov    %edx,(%eax)
81005f20:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005f23:	8b 10                	mov    (%eax),%edx
81005f25:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005f28:	89 10                	mov    %edx,(%eax)
81005f2a:	eb 14                	jmp    81005f40 <_realloc_r+0x359>
81005f2c:	83 ec 04             	sub    $0x4,%esp
81005f2f:	ff 75 a0             	push   -0x60(%ebp)
81005f32:	ff 75 0c             	push   0xc(%ebp)
81005f35:	ff 75 a8             	push   -0x58(%ebp)
81005f38:	e8 d3 fa ff ff       	call   81005a10 <memmove>
81005f3d:	83 c4 10             	add    $0x10,%esp
81005f40:	ba e0 73 00 81       	mov    $0x810073e0,%edx
81005f45:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005f48:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f4b:	01 c8                	add    %ecx,%eax
81005f4d:	89 42 08             	mov    %eax,0x8(%edx)
81005f50:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f53:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005f56:	89 c2                	mov    %eax,%edx
81005f58:	b8 e0 73 00 81       	mov    $0x810073e0,%eax
81005f5d:	8b 40 08             	mov    0x8(%eax),%eax
81005f60:	83 ca 01             	or     $0x1,%edx
81005f63:	89 50 04             	mov    %edx,0x4(%eax)
81005f66:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f69:	8b 40 04             	mov    0x4(%eax),%eax
81005f6c:	83 e0 01             	and    $0x1,%eax
81005f6f:	0b 45 bc             	or     -0x44(%ebp),%eax
81005f72:	89 c2                	mov    %eax,%edx
81005f74:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f77:	89 50 04             	mov    %edx,0x4(%eax)
81005f7a:	83 ec 0c             	sub    $0xc,%esp
81005f7d:	ff 75 08             	push   0x8(%ebp)
81005f80:	e8 79 d3 ff ff       	call   810032fe <__malloc_unlock>
81005f85:	83 c4 10             	add    $0x10,%esp
81005f88:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005f8b:	e9 2f 05 00 00       	jmp    810064bf <_realloc_r+0x8d8>
81005f90:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f93:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f96:	01 c2                	add    %eax,%edx
81005f98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f9b:	01 d0                	add    %edx,%eax
81005f9d:	89 c2                	mov    %eax,%edx
81005f9f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005fa2:	39 c2                	cmp    %eax,%edx
81005fa4:	0f 8c 6f 01 00 00    	jl     81006119 <_realloc_r+0x532>
81005faa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fad:	8b 40 0c             	mov    0xc(%eax),%eax
81005fb0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fb3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005fb6:	8b 40 08             	mov    0x8(%eax),%eax
81005fb9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005fbc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005fbf:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fc2:	89 50 0c             	mov    %edx,0xc(%eax)
81005fc5:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fc8:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fcb:	89 50 08             	mov    %edx,0x8(%eax)
81005fce:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fd1:	8b 40 0c             	mov    0xc(%eax),%eax
81005fd4:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fd7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fda:	8b 40 08             	mov    0x8(%eax),%eax
81005fdd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005fe0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005fe3:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fe6:	89 50 0c             	mov    %edx,0xc(%eax)
81005fe9:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fec:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fef:	89 50 08             	mov    %edx,0x8(%eax)
81005ff2:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005ff5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ff8:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ffb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ffe:	01 d0                	add    %edx,%eax
81006000:	01 45 f0             	add    %eax,-0x10(%ebp)
81006003:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006006:	83 c0 08             	add    $0x8,%eax
81006009:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100600c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100600f:	83 e8 04             	sub    $0x4,%eax
81006012:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81006015:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81006019:	0f 87 e1 00 00 00    	ja     81006100 <_realloc_r+0x519>
8100601f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006022:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006025:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006028:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100602b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
8100602f:	0f 86 90 00 00 00    	jbe    810060c5 <_realloc_r+0x4de>
81006035:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006038:	8d 42 04             	lea    0x4(%edx),%eax
8100603b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100603e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006041:	8d 48 04             	lea    0x4(%eax),%ecx
81006044:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006047:	8b 12                	mov    (%edx),%edx
81006049:	89 10                	mov    %edx,(%eax)
8100604b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100604e:	8d 42 04             	lea    0x4(%edx),%eax
81006051:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006054:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006057:	8d 48 04             	lea    0x4(%eax),%ecx
8100605a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100605d:	8b 12                	mov    (%edx),%edx
8100605f:	89 10                	mov    %edx,(%eax)
81006061:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81006065:	76 5e                	jbe    810060c5 <_realloc_r+0x4de>
81006067:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100606a:	8d 42 04             	lea    0x4(%edx),%eax
8100606d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006070:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006073:	8d 48 04             	lea    0x4(%eax),%ecx
81006076:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006079:	8b 12                	mov    (%edx),%edx
8100607b:	89 10                	mov    %edx,(%eax)
8100607d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006080:	8d 42 04             	lea    0x4(%edx),%eax
81006083:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006086:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006089:	8d 48 04             	lea    0x4(%eax),%ecx
8100608c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100608f:	8b 12                	mov    (%edx),%edx
81006091:	89 10                	mov    %edx,(%eax)
81006093:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81006097:	76 2c                	jbe    810060c5 <_realloc_r+0x4de>
81006099:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100609c:	8d 42 04             	lea    0x4(%edx),%eax
8100609f:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060a5:	8d 48 04             	lea    0x4(%eax),%ecx
810060a8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060ab:	8b 12                	mov    (%edx),%edx
810060ad:	89 10                	mov    %edx,(%eax)
810060af:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060b2:	8d 42 04             	lea    0x4(%edx),%eax
810060b5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060bb:	8d 48 04             	lea    0x4(%eax),%ecx
810060be:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060c1:	8b 12                	mov    (%edx),%edx
810060c3:	89 10                	mov    %edx,(%eax)
810060c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060c8:	8d 42 04             	lea    0x4(%edx),%eax
810060cb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060ce:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060d1:	8d 48 04             	lea    0x4(%eax),%ecx
810060d4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060d7:	8b 12                	mov    (%edx),%edx
810060d9:	89 10                	mov    %edx,(%eax)
810060db:	8b 55 dc             	mov    -0x24(%ebp),%edx
810060de:	8d 42 04             	lea    0x4(%edx),%eax
810060e1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810060e4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060e7:	8d 48 04             	lea    0x4(%eax),%ecx
810060ea:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810060ed:	8b 12                	mov    (%edx),%edx
810060ef:	89 10                	mov    %edx,(%eax)
810060f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810060f4:	8b 10                	mov    (%eax),%edx
810060f6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810060f9:	89 10                	mov    %edx,(%eax)
810060fb:	e9 12 03 00 00       	jmp    81006412 <_realloc_r+0x82b>
81006100:	83 ec 04             	sub    $0x4,%esp
81006103:	ff 75 a4             	push   -0x5c(%ebp)
81006106:	ff 75 0c             	push   0xc(%ebp)
81006109:	ff 75 a8             	push   -0x58(%ebp)
8100610c:	e8 ff f8 ff ff       	call   81005a10 <memmove>
81006111:	83 c4 10             	add    $0x10,%esp
81006114:	e9 f9 02 00 00       	jmp    81006412 <_realloc_r+0x82b>
81006119:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
8100611d:	0f 84 5b 01 00 00    	je     8100627e <_realloc_r+0x697>
81006123:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006126:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006129:	01 d0                	add    %edx,%eax
8100612b:	89 c2                	mov    %eax,%edx
8100612d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006130:	39 c2                	cmp    %eax,%edx
81006132:	0f 8c 46 01 00 00    	jl     8100627e <_realloc_r+0x697>
81006138:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100613b:	8b 40 0c             	mov    0xc(%eax),%eax
8100613e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006141:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006144:	8b 40 08             	mov    0x8(%eax),%eax
81006147:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100614a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100614d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006150:	89 50 0c             	mov    %edx,0xc(%eax)
81006153:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006156:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006159:	89 50 08             	mov    %edx,0x8(%eax)
8100615c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100615f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006162:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006165:	01 45 f0             	add    %eax,-0x10(%ebp)
81006168:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100616b:	83 c0 08             	add    $0x8,%eax
8100616e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006171:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006174:	83 e8 04             	sub    $0x4,%eax
81006177:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100617a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100617e:	0f 87 e1 00 00 00    	ja     81006265 <_realloc_r+0x67e>
81006184:	8b 45 0c             	mov    0xc(%ebp),%eax
81006187:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100618a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100618d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006190:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81006194:	0f 86 90 00 00 00    	jbe    8100622a <_realloc_r+0x643>
8100619a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100619d:	8d 42 04             	lea    0x4(%edx),%eax
810061a0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061a3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061a6:	8d 48 04             	lea    0x4(%eax),%ecx
810061a9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061ac:	8b 12                	mov    (%edx),%edx
810061ae:	89 10                	mov    %edx,(%eax)
810061b0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061b3:	8d 42 04             	lea    0x4(%edx),%eax
810061b6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061bc:	8d 48 04             	lea    0x4(%eax),%ecx
810061bf:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061c2:	8b 12                	mov    (%edx),%edx
810061c4:	89 10                	mov    %edx,(%eax)
810061c6:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810061ca:	76 5e                	jbe    8100622a <_realloc_r+0x643>
810061cc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061cf:	8d 42 04             	lea    0x4(%edx),%eax
810061d2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061d5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061d8:	8d 48 04             	lea    0x4(%eax),%ecx
810061db:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061de:	8b 12                	mov    (%edx),%edx
810061e0:	89 10                	mov    %edx,(%eax)
810061e2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810061e5:	8d 42 04             	lea    0x4(%edx),%eax
810061e8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810061eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810061ee:	8d 48 04             	lea    0x4(%eax),%ecx
810061f1:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810061f4:	8b 12                	mov    (%edx),%edx
810061f6:	89 10                	mov    %edx,(%eax)
810061f8:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810061fc:	76 2c                	jbe    8100622a <_realloc_r+0x643>
810061fe:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006201:	8d 42 04             	lea    0x4(%edx),%eax
81006204:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006207:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100620a:	8d 48 04             	lea    0x4(%eax),%ecx
8100620d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006210:	8b 12                	mov    (%edx),%edx
81006212:	89 10                	mov    %edx,(%eax)
81006214:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006217:	8d 42 04             	lea    0x4(%edx),%eax
8100621a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100621d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006220:	8d 48 04             	lea    0x4(%eax),%ecx
81006223:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006226:	8b 12                	mov    (%edx),%edx
81006228:	89 10                	mov    %edx,(%eax)
8100622a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100622d:	8d 42 04             	lea    0x4(%edx),%eax
81006230:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006233:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006236:	8d 48 04             	lea    0x4(%eax),%ecx
81006239:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100623c:	8b 12                	mov    (%edx),%edx
8100623e:	89 10                	mov    %edx,(%eax)
81006240:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006243:	8d 42 04             	lea    0x4(%edx),%eax
81006246:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006249:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100624c:	8d 48 04             	lea    0x4(%eax),%ecx
8100624f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006252:	8b 12                	mov    (%edx),%edx
81006254:	89 10                	mov    %edx,(%eax)
81006256:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006259:	8b 10                	mov    (%eax),%edx
8100625b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100625e:	89 10                	mov    %edx,(%eax)
81006260:	e9 ad 01 00 00       	jmp    81006412 <_realloc_r+0x82b>
81006265:	83 ec 04             	sub    $0x4,%esp
81006268:	ff 75 9c             	push   -0x64(%ebp)
8100626b:	ff 75 0c             	push   0xc(%ebp)
8100626e:	ff 75 a8             	push   -0x58(%ebp)
81006271:	e8 9a f7 ff ff       	call   81005a10 <memmove>
81006276:	83 c4 10             	add    $0x10,%esp
81006279:	e9 94 01 00 00       	jmp    81006412 <_realloc_r+0x82b>
8100627e:	83 ec 08             	sub    $0x8,%esp
81006281:	ff 75 10             	push   0x10(%ebp)
81006284:	ff 75 08             	push   0x8(%ebp)
81006287:	e8 8e c6 ff ff       	call   8100291a <_malloc_r>
8100628c:	83 c4 10             	add    $0x10,%esp
8100628f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006292:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006296:	75 18                	jne    810062b0 <_realloc_r+0x6c9>
81006298:	83 ec 0c             	sub    $0xc,%esp
8100629b:	ff 75 08             	push   0x8(%ebp)
8100629e:	e8 5b d0 ff ff       	call   810032fe <__malloc_unlock>
810062a3:	83 c4 10             	add    $0x10,%esp
810062a6:	b8 00 00 00 00       	mov    $0x0,%eax
810062ab:	e9 0f 02 00 00       	jmp    810064bf <_realloc_r+0x8d8>
810062b0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810062b3:	83 e8 08             	sub    $0x8,%eax
810062b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810062b9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062bc:	8b 40 04             	mov    0x4(%eax),%eax
810062bf:	83 e0 fe             	and    $0xfffffffe,%eax
810062c2:	89 c2                	mov    %eax,%edx
810062c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062c7:	01 d0                	add    %edx,%eax
810062c9:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810062cc:	75 17                	jne    810062e5 <_realloc_r+0x6fe>
810062ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810062d1:	8b 40 04             	mov    0x4(%eax),%eax
810062d4:	83 e0 fc             	and    $0xfffffffc,%eax
810062d7:	01 45 f0             	add    %eax,-0x10(%ebp)
810062da:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810062dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810062e0:	e9 2d 01 00 00       	jmp    81006412 <_realloc_r+0x82b>
810062e5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810062e8:	83 e8 04             	sub    $0x4,%eax
810062eb:	89 45 98             	mov    %eax,-0x68(%ebp)
810062ee:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810062f2:	0f 87 de 00 00 00    	ja     810063d6 <_realloc_r+0x7ef>
810062f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810062fb:	89 45 cc             	mov    %eax,-0x34(%ebp)
810062fe:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006301:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006304:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81006308:	0f 86 90 00 00 00    	jbe    8100639e <_realloc_r+0x7b7>
8100630e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006311:	8d 42 04             	lea    0x4(%edx),%eax
81006314:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006317:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100631a:	8d 48 04             	lea    0x4(%eax),%ecx
8100631d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006320:	8b 12                	mov    (%edx),%edx
81006322:	89 10                	mov    %edx,(%eax)
81006324:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006327:	8d 42 04             	lea    0x4(%edx),%eax
8100632a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100632d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006330:	8d 48 04             	lea    0x4(%eax),%ecx
81006333:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006336:	8b 12                	mov    (%edx),%edx
81006338:	89 10                	mov    %edx,(%eax)
8100633a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100633e:	76 5e                	jbe    8100639e <_realloc_r+0x7b7>
81006340:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006343:	8d 42 04             	lea    0x4(%edx),%eax
81006346:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006349:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100634c:	8d 48 04             	lea    0x4(%eax),%ecx
8100634f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006352:	8b 12                	mov    (%edx),%edx
81006354:	89 10                	mov    %edx,(%eax)
81006356:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006359:	8d 42 04             	lea    0x4(%edx),%eax
8100635c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100635f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006362:	8d 48 04             	lea    0x4(%eax),%ecx
81006365:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006368:	8b 12                	mov    (%edx),%edx
8100636a:	89 10                	mov    %edx,(%eax)
8100636c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006370:	76 2c                	jbe    8100639e <_realloc_r+0x7b7>
81006372:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006375:	8d 42 04             	lea    0x4(%edx),%eax
81006378:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100637b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100637e:	8d 48 04             	lea    0x4(%eax),%ecx
81006381:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006384:	8b 12                	mov    (%edx),%edx
81006386:	89 10                	mov    %edx,(%eax)
81006388:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100638b:	8d 42 04             	lea    0x4(%edx),%eax
8100638e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006391:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006394:	8d 48 04             	lea    0x4(%eax),%ecx
81006397:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100639a:	8b 12                	mov    (%edx),%edx
8100639c:	89 10                	mov    %edx,(%eax)
8100639e:	8b 55 cc             	mov    -0x34(%ebp),%edx
810063a1:	8d 42 04             	lea    0x4(%edx),%eax
810063a4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810063a7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810063aa:	8d 48 04             	lea    0x4(%eax),%ecx
810063ad:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810063b0:	8b 12                	mov    (%edx),%edx
810063b2:	89 10                	mov    %edx,(%eax)
810063b4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810063b7:	8d 42 04             	lea    0x4(%edx),%eax
810063ba:	89 45 cc             	mov    %eax,-0x34(%ebp)
810063bd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810063c0:	8d 48 04             	lea    0x4(%eax),%ecx
810063c3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810063c6:	8b 12                	mov    (%edx),%edx
810063c8:	89 10                	mov    %edx,(%eax)
810063ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810063cd:	8b 10                	mov    (%eax),%edx
810063cf:	8b 45 c8             	mov    -0x38(%ebp),%eax
810063d2:	89 10                	mov    %edx,(%eax)
810063d4:	eb 14                	jmp    810063ea <_realloc_r+0x803>
810063d6:	83 ec 04             	sub    $0x4,%esp
810063d9:	ff 75 98             	push   -0x68(%ebp)
810063dc:	ff 75 0c             	push   0xc(%ebp)
810063df:	ff 75 a8             	push   -0x58(%ebp)
810063e2:	e8 29 f6 ff ff       	call   81005a10 <memmove>
810063e7:	83 c4 10             	add    $0x10,%esp
810063ea:	83 ec 08             	sub    $0x8,%esp
810063ed:	ff 75 0c             	push   0xc(%ebp)
810063f0:	ff 75 08             	push   0x8(%ebp)
810063f3:	e8 ab ad ff ff       	call   810011a3 <_free_r>
810063f8:	83 c4 10             	add    $0x10,%esp
810063fb:	83 ec 0c             	sub    $0xc,%esp
810063fe:	ff 75 08             	push   0x8(%ebp)
81006401:	e8 f8 ce ff ff       	call   810032fe <__malloc_unlock>
81006406:	83 c4 10             	add    $0x10,%esp
81006409:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100640c:	e9 ae 00 00 00       	jmp    810064bf <_realloc_r+0x8d8>
81006411:	90                   	nop
81006412:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006415:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006418:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100641b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100641f:	76 5d                	jbe    8100647e <_realloc_r+0x897>
81006421:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006424:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006427:	01 d0                	add    %edx,%eax
81006429:	89 45 90             	mov    %eax,-0x70(%ebp)
8100642c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100642f:	8b 40 04             	mov    0x4(%eax),%eax
81006432:	83 e0 01             	and    $0x1,%eax
81006435:	0b 45 bc             	or     -0x44(%ebp),%eax
81006438:	89 c2                	mov    %eax,%edx
8100643a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100643d:	89 50 04             	mov    %edx,0x4(%eax)
81006440:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006443:	83 c8 01             	or     $0x1,%eax
81006446:	89 c2                	mov    %eax,%edx
81006448:	8b 45 90             	mov    -0x70(%ebp),%eax
8100644b:	89 50 04             	mov    %edx,0x4(%eax)
8100644e:	8b 55 90             	mov    -0x70(%ebp),%edx
81006451:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006454:	01 d0                	add    %edx,%eax
81006456:	8b 50 04             	mov    0x4(%eax),%edx
81006459:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100645c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100645f:	01 c8                	add    %ecx,%eax
81006461:	83 ca 01             	or     $0x1,%edx
81006464:	89 50 04             	mov    %edx,0x4(%eax)
81006467:	8b 45 90             	mov    -0x70(%ebp),%eax
8100646a:	83 c0 08             	add    $0x8,%eax
8100646d:	83 ec 08             	sub    $0x8,%esp
81006470:	50                   	push   %eax
81006471:	ff 75 08             	push   0x8(%ebp)
81006474:	e8 2a ad ff ff       	call   810011a3 <_free_r>
81006479:	83 c4 10             	add    $0x10,%esp
8100647c:	eb 2d                	jmp    810064ab <_realloc_r+0x8c4>
8100647e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006481:	8b 40 04             	mov    0x4(%eax),%eax
81006484:	83 e0 01             	and    $0x1,%eax
81006487:	0b 45 f0             	or     -0x10(%ebp),%eax
8100648a:	89 c2                	mov    %eax,%edx
8100648c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100648f:	89 50 04             	mov    %edx,0x4(%eax)
81006492:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006495:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006498:	01 d0                	add    %edx,%eax
8100649a:	8b 50 04             	mov    0x4(%eax),%edx
8100649d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810064a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810064a3:	01 c8                	add    %ecx,%eax
810064a5:	83 ca 01             	or     $0x1,%edx
810064a8:	89 50 04             	mov    %edx,0x4(%eax)
810064ab:	83 ec 0c             	sub    $0xc,%esp
810064ae:	ff 75 08             	push   0x8(%ebp)
810064b1:	e8 48 ce ff ff       	call   810032fe <__malloc_unlock>
810064b6:	83 c4 10             	add    $0x10,%esp
810064b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810064bc:	83 c0 08             	add    $0x8,%eax
810064bf:	c9                   	leave  
810064c0:	c3                   	ret    

810064c1 <cleanup_glue>:
810064c1:	55                   	push   %ebp
810064c2:	89 e5                	mov    %esp,%ebp
810064c4:	83 ec 08             	sub    $0x8,%esp
810064c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810064ca:	8b 00                	mov    (%eax),%eax
810064cc:	85 c0                	test   %eax,%eax
810064ce:	74 14                	je     810064e4 <cleanup_glue+0x23>
810064d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810064d3:	8b 00                	mov    (%eax),%eax
810064d5:	83 ec 08             	sub    $0x8,%esp
810064d8:	50                   	push   %eax
810064d9:	ff 75 08             	push   0x8(%ebp)
810064dc:	e8 e0 ff ff ff       	call   810064c1 <cleanup_glue>
810064e1:	83 c4 10             	add    $0x10,%esp
810064e4:	83 ec 08             	sub    $0x8,%esp
810064e7:	ff 75 0c             	push   0xc(%ebp)
810064ea:	ff 75 08             	push   0x8(%ebp)
810064ed:	e8 b1 ac ff ff       	call   810011a3 <_free_r>
810064f2:	83 c4 10             	add    $0x10,%esp
810064f5:	90                   	nop
810064f6:	c9                   	leave  
810064f7:	c3                   	ret    

810064f8 <_reclaim_reent>:
810064f8:	55                   	push   %ebp
810064f9:	89 e5                	mov    %esp,%ebp
810064fb:	83 ec 28             	sub    $0x28,%esp
810064fe:	a1 c4 73 00 81       	mov    0x810073c4,%eax
81006503:	39 45 08             	cmp    %eax,0x8(%ebp)
81006506:	0f 84 49 01 00 00    	je     81006655 <_reclaim_reent+0x15d>
8100650c:	8b 45 08             	mov    0x8(%ebp),%eax
8100650f:	8b 40 4c             	mov    0x4c(%eax),%eax
81006512:	85 c0                	test   %eax,%eax
81006514:	74 64                	je     8100657a <_reclaim_reent+0x82>
81006516:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100651d:	eb 3e                	jmp    8100655d <_reclaim_reent+0x65>
8100651f:	8b 45 08             	mov    0x8(%ebp),%eax
81006522:	8b 50 4c             	mov    0x4c(%eax),%edx
81006525:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006528:	c1 e0 02             	shl    $0x2,%eax
8100652b:	01 d0                	add    %edx,%eax
8100652d:	8b 00                	mov    (%eax),%eax
8100652f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006532:	eb 1f                	jmp    81006553 <_reclaim_reent+0x5b>
81006534:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006537:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100653a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100653d:	8b 00                	mov    (%eax),%eax
8100653f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006542:	83 ec 08             	sub    $0x8,%esp
81006545:	ff 75 e8             	push   -0x18(%ebp)
81006548:	ff 75 08             	push   0x8(%ebp)
8100654b:	e8 53 ac ff ff       	call   810011a3 <_free_r>
81006550:	83 c4 10             	add    $0x10,%esp
81006553:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006557:	75 db                	jne    81006534 <_reclaim_reent+0x3c>
81006559:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100655d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006560:	83 f8 1f             	cmp    $0x1f,%eax
81006563:	76 ba                	jbe    8100651f <_reclaim_reent+0x27>
81006565:	8b 45 08             	mov    0x8(%ebp),%eax
81006568:	8b 40 4c             	mov    0x4c(%eax),%eax
8100656b:	83 ec 08             	sub    $0x8,%esp
8100656e:	50                   	push   %eax
8100656f:	ff 75 08             	push   0x8(%ebp)
81006572:	e8 2c ac ff ff       	call   810011a3 <_free_r>
81006577:	83 c4 10             	add    $0x10,%esp
8100657a:	8b 45 08             	mov    0x8(%ebp),%eax
8100657d:	8b 40 40             	mov    0x40(%eax),%eax
81006580:	85 c0                	test   %eax,%eax
81006582:	74 15                	je     81006599 <_reclaim_reent+0xa1>
81006584:	8b 45 08             	mov    0x8(%ebp),%eax
81006587:	8b 40 40             	mov    0x40(%eax),%eax
8100658a:	83 ec 08             	sub    $0x8,%esp
8100658d:	50                   	push   %eax
8100658e:	ff 75 08             	push   0x8(%ebp)
81006591:	e8 0d ac ff ff       	call   810011a3 <_free_r>
81006596:	83 c4 10             	add    $0x10,%esp
81006599:	8b 45 08             	mov    0x8(%ebp),%eax
8100659c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810065a2:	85 c0                	test   %eax,%eax
810065a4:	74 50                	je     810065f6 <_reclaim_reent+0xfe>
810065a6:	8b 45 08             	mov    0x8(%ebp),%eax
810065a9:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810065af:	8b 55 08             	mov    0x8(%ebp),%edx
810065b2:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810065b8:	39 d0                	cmp    %edx,%eax
810065ba:	74 3a                	je     810065f6 <_reclaim_reent+0xfe>
810065bc:	8b 45 08             	mov    0x8(%ebp),%eax
810065bf:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810065c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810065c8:	eb 1f                	jmp    810065e9 <_reclaim_reent+0xf1>
810065ca:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810065d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810065d3:	8b 00                	mov    (%eax),%eax
810065d5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810065d8:	83 ec 08             	sub    $0x8,%esp
810065db:	ff 75 e4             	push   -0x1c(%ebp)
810065de:	ff 75 08             	push   0x8(%ebp)
810065e1:	e8 bd ab ff ff       	call   810011a3 <_free_r>
810065e6:	83 c4 10             	add    $0x10,%esp
810065e9:	8b 45 08             	mov    0x8(%ebp),%eax
810065ec:	05 4c 01 00 00       	add    $0x14c,%eax
810065f1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810065f4:	75 d4                	jne    810065ca <_reclaim_reent+0xd2>
810065f6:	8b 45 08             	mov    0x8(%ebp),%eax
810065f9:	8b 40 54             	mov    0x54(%eax),%eax
810065fc:	85 c0                	test   %eax,%eax
810065fe:	74 15                	je     81006615 <_reclaim_reent+0x11d>
81006600:	8b 45 08             	mov    0x8(%ebp),%eax
81006603:	8b 40 54             	mov    0x54(%eax),%eax
81006606:	83 ec 08             	sub    $0x8,%esp
81006609:	50                   	push   %eax
8100660a:	ff 75 08             	push   0x8(%ebp)
8100660d:	e8 91 ab ff ff       	call   810011a3 <_free_r>
81006612:	83 c4 10             	add    $0x10,%esp
81006615:	8b 45 08             	mov    0x8(%ebp),%eax
81006618:	8b 40 38             	mov    0x38(%eax),%eax
8100661b:	85 c0                	test   %eax,%eax
8100661d:	74 36                	je     81006655 <_reclaim_reent+0x15d>
8100661f:	8b 45 08             	mov    0x8(%ebp),%eax
81006622:	8b 40 3c             	mov    0x3c(%eax),%eax
81006625:	83 ec 0c             	sub    $0xc,%esp
81006628:	ff 75 08             	push   0x8(%ebp)
8100662b:	ff d0                	call   *%eax
8100662d:	83 c4 10             	add    $0x10,%esp
81006630:	8b 45 08             	mov    0x8(%ebp),%eax
81006633:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006639:	85 c0                	test   %eax,%eax
8100663b:	74 18                	je     81006655 <_reclaim_reent+0x15d>
8100663d:	8b 45 08             	mov    0x8(%ebp),%eax
81006640:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006646:	83 ec 08             	sub    $0x8,%esp
81006649:	50                   	push   %eax
8100664a:	ff 75 08             	push   0x8(%ebp)
8100664d:	e8 6f fe ff ff       	call   810064c1 <cleanup_glue>
81006652:	83 c4 10             	add    $0x10,%esp
81006655:	90                   	nop
81006656:	c9                   	leave  
81006657:	c3                   	ret    

81006658 <strncmp>:
81006658:	55                   	push   %ebp
81006659:	89 e5                	mov    %esp,%ebp
8100665b:	83 ec 10             	sub    $0x10,%esp
8100665e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006662:	75 0a                	jne    8100666e <strncmp+0x16>
81006664:	b8 00 00 00 00       	mov    $0x0,%eax
81006669:	e9 cb 00 00 00       	jmp    81006739 <strncmp+0xe1>
8100666e:	8b 55 08             	mov    0x8(%ebp),%edx
81006671:	8b 45 0c             	mov    0xc(%ebp),%eax
81006674:	09 d0                	or     %edx,%eax
81006676:	83 e0 03             	and    $0x3,%eax
81006679:	85 c0                	test   %eax,%eax
8100667b:	0f 85 85 00 00 00    	jne    81006706 <strncmp+0xae>
81006681:	8b 45 08             	mov    0x8(%ebp),%eax
81006684:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006687:	8b 45 0c             	mov    0xc(%ebp),%eax
8100668a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100668d:	eb 36                	jmp    810066c5 <strncmp+0x6d>
8100668f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006693:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006697:	74 1d                	je     810066b6 <strncmp+0x5e>
81006699:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100669c:	8b 00                	mov    (%eax),%eax
8100669e:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810066a4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810066a7:	8b 00                	mov    (%eax),%eax
810066a9:	f7 d0                	not    %eax
810066ab:	21 d0                	and    %edx,%eax
810066ad:	25 80 80 80 80       	and    $0x80808080,%eax
810066b2:	85 c0                	test   %eax,%eax
810066b4:	74 07                	je     810066bd <strncmp+0x65>
810066b6:	b8 00 00 00 00       	mov    $0x0,%eax
810066bb:	eb 7c                	jmp    81006739 <strncmp+0xe1>
810066bd:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810066c1:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810066c5:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810066c9:	76 0e                	jbe    810066d9 <strncmp+0x81>
810066cb:	8b 45 fc             	mov    -0x4(%ebp),%eax
810066ce:	8b 10                	mov    (%eax),%edx
810066d0:	8b 45 f8             	mov    -0x8(%ebp),%eax
810066d3:	8b 00                	mov    (%eax),%eax
810066d5:	39 c2                	cmp    %eax,%edx
810066d7:	74 b6                	je     8100668f <strncmp+0x37>
810066d9:	8b 45 fc             	mov    -0x4(%ebp),%eax
810066dc:	89 45 08             	mov    %eax,0x8(%ebp)
810066df:	8b 45 f8             	mov    -0x8(%ebp),%eax
810066e2:	89 45 0c             	mov    %eax,0xc(%ebp)
810066e5:	eb 1f                	jmp    81006706 <strncmp+0xae>
810066e7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810066eb:	74 0a                	je     810066f7 <strncmp+0x9f>
810066ed:	8b 45 08             	mov    0x8(%ebp),%eax
810066f0:	0f b6 00             	movzbl (%eax),%eax
810066f3:	84 c0                	test   %al,%al
810066f5:	75 07                	jne    810066fe <strncmp+0xa6>
810066f7:	b8 00 00 00 00       	mov    $0x0,%eax
810066fc:	eb 3b                	jmp    81006739 <strncmp+0xe1>
810066fe:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006702:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006706:	8b 45 10             	mov    0x10(%ebp),%eax
81006709:	8d 50 ff             	lea    -0x1(%eax),%edx
8100670c:	89 55 10             	mov    %edx,0x10(%ebp)
8100670f:	85 c0                	test   %eax,%eax
81006711:	74 10                	je     81006723 <strncmp+0xcb>
81006713:	8b 45 08             	mov    0x8(%ebp),%eax
81006716:	0f b6 10             	movzbl (%eax),%edx
81006719:	8b 45 0c             	mov    0xc(%ebp),%eax
8100671c:	0f b6 00             	movzbl (%eax),%eax
8100671f:	38 c2                	cmp    %al,%dl
81006721:	74 c4                	je     810066e7 <strncmp+0x8f>
81006723:	8b 45 08             	mov    0x8(%ebp),%eax
81006726:	0f b6 00             	movzbl (%eax),%eax
81006729:	0f b6 d0             	movzbl %al,%edx
8100672c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100672f:	0f b6 00             	movzbl (%eax),%eax
81006732:	0f b6 c8             	movzbl %al,%ecx
81006735:	89 d0                	mov    %edx,%eax
81006737:	29 c8                	sub    %ecx,%eax
81006739:	c9                   	leave  
8100673a:	c3                   	ret    

8100673b <__get_global_locale>:
8100673b:	55                   	push   %ebp
8100673c:	89 e5                	mov    %esp,%ebp
8100673e:	b8 00 78 00 81       	mov    $0x81007800,%eax
81006743:	5d                   	pop    %ebp
81006744:	c3                   	ret    

81006745 <__get_current_locale>:
81006745:	55                   	push   %ebp
81006746:	89 e5                	mov    %esp,%ebp
81006748:	e8 ee ff ff ff       	call   8100673b <__get_global_locale>
8100674d:	5d                   	pop    %ebp
8100674e:	c3                   	ret    

8100674f <_wcrtomb_r>:
8100674f:	55                   	push   %ebp
81006750:	89 e5                	mov    %esp,%ebp
81006752:	83 ec 18             	sub    $0x18,%esp
81006755:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100675c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006760:	75 21                	jne    81006783 <_wcrtomb_r+0x34>
81006762:	e8 de ff ff ff       	call   81006745 <__get_current_locale>
81006767:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100676d:	ff 75 14             	push   0x14(%ebp)
81006770:	6a 00                	push   $0x0
81006772:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006775:	52                   	push   %edx
81006776:	ff 75 08             	push   0x8(%ebp)
81006779:	ff d0                	call   *%eax
8100677b:	83 c4 10             	add    $0x10,%esp
8100677e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006781:	eb 1f                	jmp    810067a2 <_wcrtomb_r+0x53>
81006783:	e8 bd ff ff ff       	call   81006745 <__get_current_locale>
81006788:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100678e:	ff 75 14             	push   0x14(%ebp)
81006791:	ff 75 10             	push   0x10(%ebp)
81006794:	ff 75 0c             	push   0xc(%ebp)
81006797:	ff 75 08             	push   0x8(%ebp)
8100679a:	ff d0                	call   *%eax
8100679c:	83 c4 10             	add    $0x10,%esp
8100679f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810067a2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810067a6:	75 19                	jne    810067c1 <_wcrtomb_r+0x72>
810067a8:	8b 45 14             	mov    0x14(%ebp),%eax
810067ab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810067b1:	8b 45 08             	mov    0x8(%ebp),%eax
810067b4:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810067ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810067bf:	eb 03                	jmp    810067c4 <_wcrtomb_r+0x75>
810067c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810067c4:	c9                   	leave  
810067c5:	c3                   	ret    

810067c6 <wcrtomb>:
810067c6:	55                   	push   %ebp
810067c7:	89 e5                	mov    %esp,%ebp
810067c9:	83 ec 28             	sub    $0x28,%esp
810067cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810067d3:	a1 c4 73 00 81       	mov    0x810073c4,%eax
810067d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810067db:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810067df:	75 21                	jne    81006802 <wcrtomb+0x3c>
810067e1:	e8 5f ff ff ff       	call   81006745 <__get_current_locale>
810067e6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810067ec:	ff 75 10             	push   0x10(%ebp)
810067ef:	6a 00                	push   $0x0
810067f1:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810067f4:	52                   	push   %edx
810067f5:	ff 75 f0             	push   -0x10(%ebp)
810067f8:	ff d0                	call   *%eax
810067fa:	83 c4 10             	add    $0x10,%esp
810067fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006800:	eb 1f                	jmp    81006821 <wcrtomb+0x5b>
81006802:	e8 3e ff ff ff       	call   81006745 <__get_current_locale>
81006807:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100680d:	ff 75 10             	push   0x10(%ebp)
81006810:	ff 75 0c             	push   0xc(%ebp)
81006813:	ff 75 08             	push   0x8(%ebp)
81006816:	ff 75 f0             	push   -0x10(%ebp)
81006819:	ff d0                	call   *%eax
8100681b:	83 c4 10             	add    $0x10,%esp
8100681e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006821:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006825:	75 19                	jne    81006840 <wcrtomb+0x7a>
81006827:	8b 45 10             	mov    0x10(%ebp),%eax
8100682a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006830:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006833:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006839:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100683e:	eb 03                	jmp    81006843 <wcrtomb+0x7d>
81006840:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006843:	c9                   	leave  
81006844:	c3                   	ret    

81006845 <__get_global_locale>:
81006845:	55                   	push   %ebp
81006846:	89 e5                	mov    %esp,%ebp
81006848:	b8 00 78 00 81       	mov    $0x81007800,%eax
8100684d:	5d                   	pop    %ebp
8100684e:	c3                   	ret    

8100684f <__get_current_locale>:
8100684f:	55                   	push   %ebp
81006850:	89 e5                	mov    %esp,%ebp
81006852:	e8 ee ff ff ff       	call   81006845 <__get_global_locale>
81006857:	5d                   	pop    %ebp
81006858:	c3                   	ret    

81006859 <_wctomb_r>:
81006859:	55                   	push   %ebp
8100685a:	89 e5                	mov    %esp,%ebp
8100685c:	83 ec 08             	sub    $0x8,%esp
8100685f:	e8 eb ff ff ff       	call   8100684f <__get_current_locale>
81006864:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100686a:	ff 75 14             	push   0x14(%ebp)
8100686d:	ff 75 10             	push   0x10(%ebp)
81006870:	ff 75 0c             	push   0xc(%ebp)
81006873:	ff 75 08             	push   0x8(%ebp)
81006876:	ff d0                	call   *%eax
81006878:	83 c4 10             	add    $0x10,%esp
8100687b:	c9                   	leave  
8100687c:	c3                   	ret    

8100687d <__ascii_wctomb>:
8100687d:	55                   	push   %ebp
8100687e:	89 e5                	mov    %esp,%ebp
81006880:	83 ec 10             	sub    $0x10,%esp
81006883:	8b 45 10             	mov    0x10(%ebp),%eax
81006886:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006889:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100688d:	75 07                	jne    81006896 <__ascii_wctomb+0x19>
8100688f:	b8 00 00 00 00       	mov    $0x0,%eax
81006894:	eb 28                	jmp    810068be <__ascii_wctomb+0x41>
81006896:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100689d:	76 10                	jbe    810068af <__ascii_wctomb+0x32>
8100689f:	8b 45 08             	mov    0x8(%ebp),%eax
810068a2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810068a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810068ad:	eb 0f                	jmp    810068be <__ascii_wctomb+0x41>
810068af:	8b 45 fc             	mov    -0x4(%ebp),%eax
810068b2:	89 c2                	mov    %eax,%edx
810068b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810068b7:	88 10                	mov    %dl,(%eax)
810068b9:	b8 01 00 00 00       	mov    $0x1,%eax
810068be:	c9                   	leave  
810068bf:	c3                   	ret    

810068c0 <__env_lock>:
810068c0:	55                   	push   %ebp
810068c1:	89 e5                	mov    %esp,%ebp
810068c3:	90                   	nop
810068c4:	5d                   	pop    %ebp
810068c5:	c3                   	ret    

810068c6 <__env_unlock>:
810068c6:	55                   	push   %ebp
810068c7:	89 e5                	mov    %esp,%ebp
810068c9:	90                   	nop
810068ca:	5d                   	pop    %ebp
810068cb:	c3                   	ret    

810068cc <_fstat_r>:
810068cc:	55                   	push   %ebp
810068cd:	89 e5                	mov    %esp,%ebp
810068cf:	83 ec 18             	sub    $0x18,%esp
810068d2:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
810068d9:	00 00 00 
810068dc:	83 ec 08             	sub    $0x8,%esp
810068df:	ff 75 10             	push   0x10(%ebp)
810068e2:	ff 75 0c             	push   0xc(%ebp)
810068e5:	e8 0a 9f ff ff       	call   810007f4 <fstat>
810068ea:	83 c4 10             	add    $0x10,%esp
810068ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068f0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810068f4:	75 14                	jne    8100690a <_fstat_r+0x3e>
810068f6:	a1 14 80 00 81       	mov    0x81008014,%eax
810068fb:	85 c0                	test   %eax,%eax
810068fd:	74 0b                	je     8100690a <_fstat_r+0x3e>
810068ff:	8b 15 14 80 00 81    	mov    0x81008014,%edx
81006905:	8b 45 08             	mov    0x8(%ebp),%eax
81006908:	89 10                	mov    %edx,(%eax)
8100690a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100690d:	c9                   	leave  
8100690e:	c3                   	ret    

8100690f <_isatty_r>:
8100690f:	55                   	push   %ebp
81006910:	89 e5                	mov    %esp,%ebp
81006912:	83 ec 18             	sub    $0x18,%esp
81006915:	c7 05 14 80 00 81 00 	movl   $0x0,0x81008014
8100691c:	00 00 00 
8100691f:	83 ec 0c             	sub    $0xc,%esp
81006922:	ff 75 0c             	push   0xc(%ebp)
81006925:	e8 a9 9e ff ff       	call   810007d3 <isatty>
8100692a:	83 c4 10             	add    $0x10,%esp
8100692d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006930:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006934:	75 14                	jne    8100694a <_isatty_r+0x3b>
81006936:	a1 14 80 00 81       	mov    0x81008014,%eax
8100693b:	85 c0                	test   %eax,%eax
8100693d:	74 0b                	je     8100694a <_isatty_r+0x3b>
8100693f:	8b 15 14 80 00 81    	mov    0x81008014,%edx
81006945:	8b 45 08             	mov    0x8(%ebp),%eax
81006948:	89 10                	mov    %edx,(%eax)
8100694a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100694d:	c9                   	leave  
8100694e:	c3                   	ret    
