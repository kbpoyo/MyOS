
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000175

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x0000550c memsz 0x00005594 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000470e  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000401  81004720  81004720  00005720  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  81004b40  81004b40  00005b40  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  81005520  81005520  0000650c  2**5
                  ALLOC
  4 .debug_info   0001594b  00000000  00000000  0000650c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00004ca2  00000000  00000000  0001be57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000530  00000000  00000000  00020b00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000031aa  00000000  00000000  00021030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001121  00000000  00000000  000241da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000efb  00000000  00000000  000252fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  000261f6  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000fe8  00000000  00000000  00026238  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00027220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810005a6 l       .text	00000000 L5
810005de l       .text	00000000 L15
810005b0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005e9 l     F .text	000000ad std
81000696 l     F .text	0000001b stdin_init
810006b1 l     F .text	0000001b stdout_init
810006cc l     F .text	0000001b stderr_init
81005520 l     O .bss	00000004 __sfp_recursive_mutex
81005524 l     O .bss	00000004 __sinit_recursive_mutex
8100098f l     F .text	0000000a __fp_lock
81000999 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81004b40 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000f5c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001aad l       .text	00000000 L20
81001a64 l       .text	00000000 L5
81001aaa l       .text	00000000 L15
81001a70 l       .text	00000000 L8
81001a91 l       .text	00000000 L9
81001aa0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81005588 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001cfd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputwc.c
81003891 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003f82 l     F .text	0000000a __get_global_locale
81003f8c l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810041ee l     F .text	0000000a __get_global_locale
810041f8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81004506 l     F .text	0000000a __get_global_locale
81004510 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
81004610 l     F .text	0000000a __get_global_locale
8100461a l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
810046ce g     F .text	00000040 _isatty_r
810042ca g     F .text	00000037 cleanup_glue
81000470 g     F .text	000000d6 _puts_r
81004028 g     F .text	00000046 _lseek_r
810002bb g     F .text	0000001b yield
8100043b g     F .text	00000035 printf
8100451a g     F .text	00000077 _wcrtomb_r
81003133 g     F .text	0000004a __sseek
810008de g     F .text	00000099 __sinit
810031a2 g     F .text	00000112 __swbuf_r
81003f96 g     F .text	0000005f _setlocale_r
810006e7 g     F .text	0000006f __sfmoreglue
81001c1b g     F .text	00000006 __malloc_unlock
81001b00 g       .text	00000000 memmove
810008c4 g     F .text	0000001a _cleanup
8100468b g     F .text	00000043 _fstat_r
81005590 g     O .bss	00000004 errno
810030ce g     F .text	0000000a __seofread
8100028e g     F .text	0000002d execve
81000230 g     F .text	0000001b getpid
81001ab8 g       .text	00000000 memcpy
810008a3 g     F .text	00000021 _cleanup_r
81000546 g     F .text	0000001c puts
8100040e g     F .text	0000002d _printf_r
810003a5 g     F .text	00000021 isatty
81005540 g     O .bss	00000004 __malloc_top_pad
81005520 g       .bss	00000000 __bss_start__
810009eb g     F .text	0000049e __sfvwrite_r
8100304a g     F .text	00000040 _sbrk_r
81004284 g     F .text	00000046 _read_r
810034b6 g     F .text	00000107 _fclose_r
81003858 g     F .text	00000039 fflush
81005544 g     O .bss	00000004 __malloc_max_sbrked_mem
81000378 g     F .text	0000002d lseek
810047c4 g     O .rodata	00000004 _global_impure_ptr
81002770 g     F .text	000008da _realloc_r
810039a7 g     F .text	00000057 _fputwc_r
810009a3 g     F .text	00000024 __fp_lock_all
81004301 g     F .text	00000160 _reclaim_reent
8100032a g     F .text	0000002d write
810003c6 g     F .text	00000027 fstat
810001ba g     F .text	0000004c sys_call
81001d63 g     F .text	000000a8 __sfputs_r
81000977 g     F .text	00000006 __sfp_lock_acquire
81001a20 g       .text	00000000 memchr
81005594 g       .bss	00000000 __bss_end__
81003a46 g     F .text	000003db _free_r
810048a0 g     O .rodata	00000180 _ctype_b
81003ff5 g     F .text	00000014 __locale_mb_cur_max
8100538c g     O .data	00000004 __malloc_sbrk_base
81000175 g       .text	00000000 _start
810002fd g     F .text	0000002d read
81005560 g     O .bss	00000028 __malloc_current_mallinfo
8100040e g     F .text	0000002d _iprintf_r
81003476 g     F .text	00000040 _close_r
81000273 g     F .text	0000001b fork
8100331b g     F .text	0000015b __swsetup_r
81000756 g     F .text	0000014d __sfp
81004f80 g     O .data	00000408 __malloc_av_
81000989 g     F .text	00000006 __sinit_lock_release
8100308a g     F .text	00000044 __sread
81001c15 g     F .text	00000006 __malloc_lock
810003ed g     F .text	00000021 sbrk
81003800 g     F .text	00000058 _fflush_r
81000185 g     F .text	00000035 cstart
81001b8d g       .text	00000000 memset
81000000 g     F .text	00000175 main
81005548 g     O .bss	00000004 __malloc_max_total_mem
810032b4 g     F .text	00000021 __swbuf
8100317d g     F .text	00000025 __sclose
810035bd g     F .text	0000001d fclose
810011ef g     F .text	00000822 _malloc_r
81004648 g     F .text	00000043 __ascii_wctomb
81000e89 g     F .text	00000068 _fwalk
81004202 g     F .text	0000002a _mbtowc_r
81003e21 g     F .text	00000161 _malloc_trim_r
81004461 g     F .text	000000a5 strcmp
81001e0b g     F .text	00000025 vfiprintf
8100043b g     F .text	00000035 iprintf
8100558c g     O .bss	00000004 _PathLocale
810032d5 g     F .text	00000046 _write_r
81004009 g     F .text	0000001f setlocale
81002186 g     F .text	0000019b _printf_common
81004f64 g     O .data	00000004 _impure_ptr
810035da g     F .text	00000226 __sflush_r
8100422c g     F .text	00000058 __ascii_mbtowc
810009c7 g     F .text	00000024 __fp_unlock_all
8100024b g     F .text	00000028 print_msg
8100415b g     F .text	00000093 __swhatbuf_r
810038f7 g     F .text	000000b0 __fputwc
810030d8 g     F .text	0000005b __swrite
81005388 g     O .data	00000004 __malloc_trim_threshold
81001e30 g     F .text	00000356 _vfiprintf_r
81000ef1 g     F .text	0000006b _fwalk_reent
8100097d g     F .text	00000006 __sfp_lock_release
81004a20 g     O .rodata	00000101 _ctype_
8100406e g     F .text	000000ed __smakebuf_r
81000570 g       .text	00000000 strlen
81002321 g     F .text	0000044f _printf_i
810002d6 g     F .text	00000027 open
81001c21 g     F .text	000000dc __sprint_r
81004624 g     F .text	00000024 _wctomb_r
81001e30 g     F .text	00000356 _vfprintf_r
81000206 g     F .text	0000002a msleep
81004591 g     F .text	0000007f wcrtomb
81000357 g     F .text	00000021 close
810053a0 g     O .data	0000016c __global_locale
81001e0b g     F .text	00000025 vfprintf
810039fe g     F .text	00000048 fputwc
81000983 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	53                   	push   %ebx
8100000e:	51                   	push   %ecx
8100000f:	83 ec 10             	sub    $0x10,%esp
81000012:	89 cb                	mov    %ecx,%ebx
    sbrk(0);
81000014:	83 ec 0c             	sub    $0xc,%esp
81000017:	6a 00                	push   $0x0
81000019:	e8 cf 03 00 00       	call   810003ed <sbrk>
8100001e:	83 c4 10             	add    $0x10,%esp
    sbrk(100);
81000021:	83 ec 0c             	sub    $0xc,%esp
81000024:	6a 64                	push   $0x64
81000026:	e8 c2 03 00 00       	call   810003ed <sbrk>
8100002b:	83 c4 10             	add    $0x10,%esp
    sbrk(200);
8100002e:	83 ec 0c             	sub    $0xc,%esp
81000031:	68 c8 00 00 00       	push   $0xc8
81000036:	e8 b2 03 00 00       	call   810003ed <sbrk>
8100003b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*2 + 200);
8100003e:	83 ec 0c             	sub    $0xc,%esp
81000041:	68 c8 20 00 00       	push   $0x20c8
81000046:	e8 a2 03 00 00       	call   810003ed <sbrk>
8100004b:	83 c4 10             	add    $0x10,%esp
    sbrk(4096*5 + 1234);
8100004e:	83 ec 0c             	sub    $0xc,%esp
81000051:	68 d2 54 00 00       	push   $0x54d2
81000056:	e8 92 03 00 00       	call   810003ed <sbrk>
8100005b:	83 c4 10             	add    $0x10,%esp

    printf("abef\b\b\b\bcd\n");
8100005e:	83 ec 0c             	sub    $0xc,%esp
81000061:	68 20 47 00 81       	push   $0x81004720
81000066:	e8 db 04 00 00       	call   81000546 <puts>
8100006b:	83 c4 10             	add    $0x10,%esp
    printf("abcd\x7f;fg\n");
8100006e:	83 ec 0c             	sub    $0xc,%esp
81000071:	68 2b 47 00 81       	push   $0x8100472b
81000076:	e8 cb 04 00 00       	call   81000546 <puts>
8100007b:	83 c4 10             	add    $0x10,%esp
      printf("\0337HELLO,WORLD!\0338123\n");
8100007e:	83 ec 0c             	sub    $0xc,%esp
81000081:	68 34 47 00 81       	push   $0x81004734
81000086:	e8 bb 04 00 00       	call   81000546 <puts>
8100008b:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
8100008e:	83 ec 0c             	sub    $0xc,%esp
81000091:	68 48 47 00 81       	push   $0x81004748
81000096:	e8 ab 04 00 00       	call   81000546 <puts>
8100009b:	83 c4 10             	add    $0x10,%esp
    printf("os version: %s\n", "1.0.0");
8100009e:	83 ec 08             	sub    $0x8,%esp
810000a1:	68 59 47 00 81       	push   $0x81004759
810000a6:	68 5f 47 00 81       	push   $0x8100475f
810000ab:	e8 8b 03 00 00       	call   8100043b <iprintf>
810000b0:	83 c4 10             	add    $0x10,%esp
    printf("%05d, %-5d, %d\n", 1, 2, 3);
810000b3:	6a 03                	push   $0x3
810000b5:	6a 02                	push   $0x2
810000b7:	6a 01                	push   $0x1
810000b9:	68 6f 47 00 81       	push   $0x8100476f
810000be:	e8 78 03 00 00       	call   8100043b <iprintf>
810000c3:	83 c4 10             	add    $0x10,%esp

    printf("main pid %d", getpid());
810000c6:	e8 65 01 00 00       	call   81000230 <getpid>
810000cb:	83 ec 08             	sub    $0x8,%esp
810000ce:	50                   	push   %eax
810000cf:	68 7f 47 00 81       	push   $0x8100477f
810000d4:	e8 62 03 00 00       	call   8100043b <iprintf>
810000d9:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
810000dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810000e3:	eb 26                	jmp    8100010b <main+0x10b>
        printf("arg: %s\n", argv[i]);
810000e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810000e8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810000ef:	8b 43 04             	mov    0x4(%ebx),%eax
810000f2:	01 d0                	add    %edx,%eax
810000f4:	8b 00                	mov    (%eax),%eax
810000f6:	83 ec 08             	sub    $0x8,%esp
810000f9:	50                   	push   %eax
810000fa:	68 8b 47 00 81       	push   $0x8100478b
810000ff:	e8 37 03 00 00       	call   8100043b <iprintf>
81000104:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000107:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100010b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100010e:	3b 03                	cmp    (%ebx),%eax
81000110:	7c d3                	jl     810000e5 <main+0xe5>
    }

    int pid = fork();
81000112:	e8 5c 01 00 00       	call   81000273 <fork>
81000117:	89 45 f0             	mov    %eax,-0x10(%ebp)
    yield();
8100011a:	e8 9c 01 00 00       	call   810002bb <yield>
    if (pid > 0) printf("parent pid=%d\n", pid);
8100011f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000123:	7e 15                	jle    8100013a <main+0x13a>
81000125:	83 ec 08             	sub    $0x8,%esp
81000128:	ff 75 f0             	push   -0x10(%ebp)
8100012b:	68 94 47 00 81       	push   $0x81004794
81000130:	e8 06 03 00 00       	call   8100043b <iprintf>
81000135:	83 c4 10             	add    $0x10,%esp
81000138:	eb 13                	jmp    8100014d <main+0x14d>
    else printf("chiled pid=%d\n", pid);
8100013a:	83 ec 08             	sub    $0x8,%esp
8100013d:	ff 75 f0             	push   -0x10(%ebp)
81000140:	68 a3 47 00 81       	push   $0x810047a3
81000145:	e8 f1 02 00 00       	call   8100043b <iprintf>
8100014a:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        printf("shell pid=%d\n", getpid());
8100014d:	e8 de 00 00 00       	call   81000230 <getpid>
81000152:	83 ec 08             	sub    $0x8,%esp
81000155:	50                   	push   %eax
81000156:	68 b2 47 00 81       	push   $0x810047b2
8100015b:	e8 db 02 00 00       	call   8100043b <iprintf>
81000160:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
81000163:	83 ec 0c             	sub    $0xc,%esp
81000166:	68 e8 03 00 00       	push   $0x3e8
8100016b:	e8 96 00 00 00       	call   81000206 <msleep>
81000170:	83 c4 10             	add    $0x10,%esp
        printf("shell pid=%d\n", getpid());
81000173:	eb d8                	jmp    8100014d <main+0x14d>

81000175 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000175:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000178:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100017a:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100017c:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100017e:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000180:	e9 00 00 00 00       	jmp    81000185 <cstart>

81000185 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000185:	55                   	push   %ebp
81000186:	89 e5                	mov    %esp,%ebp
81000188:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100018b:	c7 45 f4 20 55 00 81 	movl   $0x81005520,-0xc(%ebp)
    while (start < __bss_end__) {
81000192:	eb 09                	jmp    8100019d <cstart+0x18>
        *(start++);
81000194:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000197:	83 c0 01             	add    $0x1,%eax
8100019a:	89 45 f4             	mov    %eax,-0xc(%ebp)
    while (start < __bss_end__) {
8100019d:	81 7d f4 94 55 00 81 	cmpl   $0x81005594,-0xc(%ebp)
810001a4:	72 ee                	jb     81000194 <cstart+0xf>
    }
    
    main(argc, argv);
810001a6:	83 ec 08             	sub    $0x8,%esp
810001a9:	ff 75 0c             	push   0xc(%ebp)
810001ac:	ff 75 08             	push   0x8(%ebp)
810001af:	e8 4c fe ff ff       	call   81000000 <main>
810001b4:	83 c4 10             	add    $0x10,%esp
}
810001b7:	90                   	nop
810001b8:	c9                   	leave  
810001b9:	c3                   	ret    

810001ba <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810001ba:	55                   	push   %ebp
810001bb:	89 e5                	mov    %esp,%ebp
810001bd:	57                   	push   %edi
810001be:	56                   	push   %esi
810001bf:	53                   	push   %ebx
810001c0:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810001c3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810001ca:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810001d1:	8b 45 08             	mov    0x8(%ebp),%eax
810001d4:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810001d7:	8b 55 08             	mov    0x8(%ebp),%edx
810001da:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810001dd:	8b 4d 08             	mov    0x8(%ebp),%ecx
810001e0:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810001e3:	8b 5d 08             	mov    0x8(%ebp),%ebx
810001e6:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810001e9:	8b 75 08             	mov    0x8(%ebp),%esi
810001ec:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810001ee:	8d 7d e8             	lea    -0x18(%ebp),%edi
810001f1:	50                   	push   %eax
810001f2:	52                   	push   %edx
810001f3:	51                   	push   %ecx
810001f4:	53                   	push   %ebx
810001f5:	56                   	push   %esi
810001f6:	ff 1f                	lcall  *(%edi)
810001f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810001fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810001fe:	83 c4 10             	add    $0x10,%esp
81000201:	5b                   	pop    %ebx
81000202:	5e                   	pop    %esi
81000203:	5f                   	pop    %edi
81000204:	5d                   	pop    %ebp
81000205:	c3                   	ret    

81000206 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000206:	55                   	push   %ebp
81000207:	89 e5                	mov    %esp,%ebp
81000209:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100020c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000210:	7e 1b                	jle    8100022d <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000212:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000219:	8b 45 08             	mov    0x8(%ebp),%eax
8100021c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100021f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000222:	50                   	push   %eax
81000223:	e8 92 ff ff ff       	call   810001ba <sys_call>
81000228:	83 c4 04             	add    $0x4,%esp
8100022b:	eb 01                	jmp    8100022e <msleep+0x28>
    if (ms <= 0) return;
8100022d:	90                   	nop

}
8100022e:	c9                   	leave  
8100022f:	c3                   	ret    

81000230 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000230:	55                   	push   %ebp
81000231:	89 e5                	mov    %esp,%ebp
81000233:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000236:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100023d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000240:	50                   	push   %eax
81000241:	e8 74 ff ff ff       	call   810001ba <sys_call>
81000246:	83 c4 04             	add    $0x4,%esp
}
81000249:	c9                   	leave  
8100024a:	c3                   	ret    

8100024b <print_msg>:

void print_msg(const char *fmt, int arg) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000251:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000258:	8b 45 08             	mov    0x8(%ebp),%eax
8100025b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100025e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000264:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000267:	50                   	push   %eax
81000268:	e8 4d ff ff ff       	call   810001ba <sys_call>
8100026d:	83 c4 04             	add    $0x4,%esp
}
81000270:	90                   	nop
81000271:	c9                   	leave  
81000272:	c3                   	ret    

81000273 <fork>:

int fork (void) {
81000273:	55                   	push   %ebp
81000274:	89 e5                	mov    %esp,%ebp
81000276:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000279:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000280:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000283:	50                   	push   %eax
81000284:	e8 31 ff ff ff       	call   810001ba <sys_call>
81000289:	83 c4 04             	add    $0x4,%esp
}
8100028c:	c9                   	leave  
8100028d:	c3                   	ret    

8100028e <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
8100028e:	55                   	push   %ebp
8100028f:	89 e5                	mov    %esp,%ebp
81000291:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000294:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100029b:	8b 45 08             	mov    0x8(%ebp),%eax
8100029e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810002a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810002a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810002a7:	8b 45 10             	mov    0x10(%ebp),%eax
810002aa:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810002ad:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002b0:	50                   	push   %eax
810002b1:	e8 04 ff ff ff       	call   810001ba <sys_call>
810002b6:	83 c4 04             	add    $0x4,%esp
}
810002b9:	c9                   	leave  
810002ba:	c3                   	ret    

810002bb <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810002bb:	55                   	push   %ebp
810002bc:	89 e5                	mov    %esp,%ebp
810002be:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810002c1:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810002c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002cb:	50                   	push   %eax
810002cc:	e8 e9 fe ff ff       	call   810001ba <sys_call>
810002d1:	83 c4 04             	add    $0x4,%esp
}
810002d4:	c9                   	leave  
810002d5:	c3                   	ret    

810002d6 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810002d6:	55                   	push   %ebp
810002d7:	89 e5                	mov    %esp,%ebp
810002d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810002dc:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810002e3:	8b 45 08             	mov    0x8(%ebp),%eax
810002e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810002e9:	8b 45 0c             	mov    0xc(%ebp),%eax
810002ec:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002ef:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002f2:	50                   	push   %eax
810002f3:	e8 c2 fe ff ff       	call   810001ba <sys_call>
810002f8:	83 c4 04             	add    $0x4,%esp
}
810002fb:	c9                   	leave  
810002fc:	c3                   	ret    

810002fd <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810002fd:	55                   	push   %ebp
810002fe:	89 e5                	mov    %esp,%ebp
81000300:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000303:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
8100030a:	8b 45 08             	mov    0x8(%ebp),%eax
8100030d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000310:	8b 45 0c             	mov    0xc(%ebp),%eax
81000313:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000316:	8b 45 10             	mov    0x10(%ebp),%eax
81000319:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100031c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100031f:	50                   	push   %eax
81000320:	e8 95 fe ff ff       	call   810001ba <sys_call>
81000325:	83 c4 04             	add    $0x4,%esp
}
81000328:	c9                   	leave  
81000329:	c3                   	ret    

8100032a <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
8100032a:	55                   	push   %ebp
8100032b:	89 e5                	mov    %esp,%ebp
8100032d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000330:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000337:	8b 45 08             	mov    0x8(%ebp),%eax
8100033a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
8100033d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000340:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000343:	8b 45 10             	mov    0x10(%ebp),%eax
81000346:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000349:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100034c:	50                   	push   %eax
8100034d:	e8 68 fe ff ff       	call   810001ba <sys_call>
81000352:	83 c4 04             	add    $0x4,%esp
}
81000355:	c9                   	leave  
81000356:	c3                   	ret    

81000357 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000357:	55                   	push   %ebp
81000358:	89 e5                	mov    %esp,%ebp
8100035a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100035d:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000364:	8b 45 08             	mov    0x8(%ebp),%eax
81000367:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100036a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100036d:	50                   	push   %eax
8100036e:	e8 47 fe ff ff       	call   810001ba <sys_call>
81000373:	83 c4 04             	add    $0x4,%esp
}
81000376:	c9                   	leave  
81000377:	c3                   	ret    

81000378 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000378:	55                   	push   %ebp
81000379:	89 e5                	mov    %esp,%ebp
8100037b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
8100037e:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000385:	8b 45 08             	mov    0x8(%ebp),%eax
81000388:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8100038b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100038e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000391:	8b 45 10             	mov    0x10(%ebp),%eax
81000394:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000397:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100039a:	50                   	push   %eax
8100039b:	e8 1a fe ff ff       	call   810001ba <sys_call>
810003a0:	83 c4 04             	add    $0x4,%esp
}
810003a3:	c9                   	leave  
810003a4:	c3                   	ret    

810003a5 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
810003a5:	55                   	push   %ebp
810003a6:	89 e5                	mov    %esp,%ebp
810003a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810003ab:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
810003b2:	8b 45 08             	mov    0x8(%ebp),%eax
810003b5:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810003b8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003bb:	50                   	push   %eax
810003bc:	e8 f9 fd ff ff       	call   810001ba <sys_call>
810003c1:	83 c4 04             	add    $0x4,%esp
}
810003c4:	c9                   	leave  
810003c5:	c3                   	ret    

810003c6 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810003c6:	55                   	push   %ebp
810003c7:	89 e5                	mov    %esp,%ebp
810003c9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810003cc:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810003d3:	8b 45 08             	mov    0x8(%ebp),%eax
810003d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810003d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810003dc:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810003df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810003e2:	50                   	push   %eax
810003e3:	e8 d2 fd ff ff       	call   810001ba <sys_call>
810003e8:	83 c4 04             	add    $0x4,%esp
}
810003eb:	c9                   	leave  
810003ec:	c3                   	ret    

810003ed <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810003ed:	55                   	push   %ebp
810003ee:	89 e5                	mov    %esp,%ebp
810003f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810003f3:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810003fa:	8b 45 08             	mov    0x8(%ebp),%eax
810003fd:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000400:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000403:	50                   	push   %eax
81000404:	e8 b1 fd ff ff       	call   810001ba <sys_call>
81000409:	83 c4 04             	add    $0x4,%esp
8100040c:	c9                   	leave  
8100040d:	c3                   	ret    

8100040e <_iprintf_r>:
8100040e:	55                   	push   %ebp
8100040f:	89 e5                	mov    %esp,%ebp
81000411:	83 ec 18             	sub    $0x18,%esp
81000414:	8d 45 10             	lea    0x10(%ebp),%eax
81000417:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100041a:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100041d:	8b 45 08             	mov    0x8(%ebp),%eax
81000420:	8b 40 08             	mov    0x8(%eax),%eax
81000423:	52                   	push   %edx
81000424:	ff 75 0c             	push   0xc(%ebp)
81000427:	50                   	push   %eax
81000428:	ff 75 08             	push   0x8(%ebp)
8100042b:	e8 00 1a 00 00       	call   81001e30 <_vfiprintf_r>
81000430:	83 c4 10             	add    $0x10,%esp
81000433:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000436:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000439:	c9                   	leave  
8100043a:	c3                   	ret    

8100043b <iprintf>:
8100043b:	55                   	push   %ebp
8100043c:	89 e5                	mov    %esp,%ebp
8100043e:	83 ec 18             	sub    $0x18,%esp
81000441:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81000446:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000449:	8d 45 0c             	lea    0xc(%ebp),%eax
8100044c:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100044f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000452:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000455:	8b 40 08             	mov    0x8(%eax),%eax
81000458:	52                   	push   %edx
81000459:	ff 75 08             	push   0x8(%ebp)
8100045c:	50                   	push   %eax
8100045d:	ff 75 f4             	push   -0xc(%ebp)
81000460:	e8 cb 19 00 00       	call   81001e30 <_vfiprintf_r>
81000465:	83 c4 10             	add    $0x10,%esp
81000468:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100046b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100046e:	c9                   	leave  
8100046f:	c3                   	ret    

81000470 <_puts_r>:
81000470:	55                   	push   %ebp
81000471:	89 e5                	mov    %esp,%ebp
81000473:	83 ec 38             	sub    $0x38,%esp
81000476:	83 ec 0c             	sub    $0xc,%esp
81000479:	ff 75 0c             	push   0xc(%ebp)
8100047c:	e8 ef 00 00 00       	call   81000570 <strlen>
81000481:	83 c4 10             	add    $0x10,%esp
81000484:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000487:	8b 45 0c             	mov    0xc(%ebp),%eax
8100048a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100048d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000490:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000493:	c7 45 d4 c0 47 00 81 	movl   $0x810047c0,-0x2c(%ebp)
8100049a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810004a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004a4:	83 c0 01             	add    $0x1,%eax
810004a7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810004aa:	8d 45 cc             	lea    -0x34(%ebp),%eax
810004ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
810004b0:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810004b7:	8b 45 08             	mov    0x8(%ebp),%eax
810004ba:	8b 40 08             	mov    0x8(%eax),%eax
810004bd:	89 45 f0             	mov    %eax,-0x10(%ebp)
810004c0:	8b 45 08             	mov    0x8(%ebp),%eax
810004c3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810004c6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810004ca:	74 18                	je     810004e4 <_puts_r+0x74>
810004cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810004cf:	8b 40 38             	mov    0x38(%eax),%eax
810004d2:	85 c0                	test   %eax,%eax
810004d4:	75 0e                	jne    810004e4 <_puts_r+0x74>
810004d6:	83 ec 0c             	sub    $0xc,%esp
810004d9:	ff 75 ec             	push   -0x14(%ebp)
810004dc:	e8 fd 03 00 00       	call   810008de <__sinit>
810004e1:	83 c4 10             	add    $0x10,%esp
810004e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004e7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004eb:	98                   	cwtl   
810004ec:	25 00 20 00 00       	and    $0x2000,%eax
810004f1:	85 c0                	test   %eax,%eax
810004f3:	75 24                	jne    81000519 <_puts_r+0xa9>
810004f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810004f8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810004fc:	80 cc 20             	or     $0x20,%ah
810004ff:	89 c2                	mov    %eax,%edx
81000501:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000504:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000508:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100050b:	8b 40 64             	mov    0x64(%eax),%eax
8100050e:	80 e4 df             	and    $0xdf,%ah
81000511:	89 c2                	mov    %eax,%edx
81000513:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000516:	89 50 64             	mov    %edx,0x64(%eax)
81000519:	83 ec 04             	sub    $0x4,%esp
8100051c:	8d 45 dc             	lea    -0x24(%ebp),%eax
8100051f:	50                   	push   %eax
81000520:	ff 75 f0             	push   -0x10(%ebp)
81000523:	ff 75 08             	push   0x8(%ebp)
81000526:	e8 c0 04 00 00       	call   810009eb <__sfvwrite_r>
8100052b:	83 c4 10             	add    $0x10,%esp
8100052e:	85 c0                	test   %eax,%eax
81000530:	74 07                	je     81000539 <_puts_r+0xc9>
81000532:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000537:	eb 05                	jmp    8100053e <_puts_r+0xce>
81000539:	b8 0a 00 00 00       	mov    $0xa,%eax
8100053e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000541:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000544:	c9                   	leave  
81000545:	c3                   	ret    

81000546 <puts>:
81000546:	55                   	push   %ebp
81000547:	89 e5                	mov    %esp,%ebp
81000549:	83 ec 08             	sub    $0x8,%esp
8100054c:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81000551:	83 ec 08             	sub    $0x8,%esp
81000554:	ff 75 08             	push   0x8(%ebp)
81000557:	50                   	push   %eax
81000558:	e8 13 ff ff ff       	call   81000470 <_puts_r>
8100055d:	83 c4 10             	add    $0x10,%esp
81000560:	c9                   	leave  
81000561:	c3                   	ret    
81000562:	66 90                	xchg   %ax,%ax
81000564:	66 90                	xchg   %ax,%ax
81000566:	66 90                	xchg   %ax,%ax
81000568:	66 90                	xchg   %ax,%ax
8100056a:	66 90                	xchg   %ax,%ax
8100056c:	66 90                	xchg   %ax,%ax
8100056e:	66 90                	xchg   %ax,%ax

81000570 <strlen>:
81000570:	55                   	push   %ebp
81000571:	89 e5                	mov    %esp,%ebp
81000573:	57                   	push   %edi
81000574:	8b 55 08             	mov    0x8(%ebp),%edx
81000577:	89 d7                	mov    %edx,%edi
81000579:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100057f:	74 25                	je     810005a6 <L5>
81000581:	8a 0f                	mov    (%edi),%cl
81000583:	47                   	inc    %edi
81000584:	84 c9                	test   %cl,%cl
81000586:	74 56                	je     810005de <L15>
81000588:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100058e:	74 16                	je     810005a6 <L5>
81000590:	8a 0f                	mov    (%edi),%cl
81000592:	47                   	inc    %edi
81000593:	84 c9                	test   %cl,%cl
81000595:	74 47                	je     810005de <L15>
81000597:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100059d:	74 07                	je     810005a6 <L5>
8100059f:	8a 0f                	mov    (%edi),%cl
810005a1:	47                   	inc    %edi
810005a2:	84 c9                	test   %cl,%cl
810005a4:	74 38                	je     810005de <L15>

810005a6 <L5>:
810005a6:	83 ef 04             	sub    $0x4,%edi
810005a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810005b0 <L10>:
810005b0:	83 c7 04             	add    $0x4,%edi
810005b3:	8b 0f                	mov    (%edi),%ecx
810005b5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810005bb:	f7 d1                	not    %ecx
810005bd:	21 c8                	and    %ecx,%eax
810005bf:	a9 80 80 80 80       	test   $0x80808080,%eax
810005c4:	74 ea                	je     810005b0 <L10>
810005c6:	f7 d1                	not    %ecx
810005c8:	47                   	inc    %edi
810005c9:	84 c9                	test   %cl,%cl
810005cb:	74 11                	je     810005de <L15>
810005cd:	47                   	inc    %edi
810005ce:	c1 e9 08             	shr    $0x8,%ecx
810005d1:	84 c9                	test   %cl,%cl
810005d3:	74 09                	je     810005de <L15>
810005d5:	47                   	inc    %edi
810005d6:	c1 e9 08             	shr    $0x8,%ecx
810005d9:	84 c9                	test   %cl,%cl
810005db:	74 01                	je     810005de <L15>
810005dd:	47                   	inc    %edi

810005de <L15>:
810005de:	29 d7                	sub    %edx,%edi
810005e0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005e3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005e6:	5f                   	pop    %edi
810005e7:	c9                   	leave  
810005e8:	c3                   	ret    

810005e9 <std>:
810005e9:	55                   	push   %ebp
810005ea:	89 e5                	mov    %esp,%ebp
810005ec:	83 ec 08             	sub    $0x8,%esp
810005ef:	8b 45 08             	mov    0x8(%ebp),%eax
810005f2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005f8:	8b 45 08             	mov    0x8(%ebp),%eax
810005fb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000602:	8b 45 08             	mov    0x8(%ebp),%eax
81000605:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100060c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100060f:	89 c2                	mov    %eax,%edx
81000611:	8b 45 08             	mov    0x8(%ebp),%eax
81000614:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000618:	8b 45 08             	mov    0x8(%ebp),%eax
8100061b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000622:	8b 45 10             	mov    0x10(%ebp),%eax
81000625:	89 c2                	mov    %eax,%edx
81000627:	8b 45 08             	mov    0x8(%ebp),%eax
8100062a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100062e:	8b 45 08             	mov    0x8(%ebp),%eax
81000631:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000638:	8b 45 08             	mov    0x8(%ebp),%eax
8100063b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000642:	8b 45 08             	mov    0x8(%ebp),%eax
81000645:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100064c:	8b 45 08             	mov    0x8(%ebp),%eax
8100064f:	83 c0 5c             	add    $0x5c,%eax
81000652:	83 ec 04             	sub    $0x4,%esp
81000655:	6a 08                	push   $0x8
81000657:	6a 00                	push   $0x0
81000659:	50                   	push   %eax
8100065a:	e8 2e 15 00 00       	call   81001b8d <memset>
8100065f:	83 c4 10             	add    $0x10,%esp
81000662:	8b 45 08             	mov    0x8(%ebp),%eax
81000665:	8b 55 08             	mov    0x8(%ebp),%edx
81000668:	89 50 1c             	mov    %edx,0x1c(%eax)
8100066b:	8b 45 08             	mov    0x8(%ebp),%eax
8100066e:	c7 40 20 8a 30 00 81 	movl   $0x8100308a,0x20(%eax)
81000675:	8b 45 08             	mov    0x8(%ebp),%eax
81000678:	c7 40 24 d8 30 00 81 	movl   $0x810030d8,0x24(%eax)
8100067f:	8b 45 08             	mov    0x8(%ebp),%eax
81000682:	c7 40 28 33 31 00 81 	movl   $0x81003133,0x28(%eax)
81000689:	8b 45 08             	mov    0x8(%ebp),%eax
8100068c:	c7 40 2c 7d 31 00 81 	movl   $0x8100317d,0x2c(%eax)
81000693:	90                   	nop
81000694:	c9                   	leave  
81000695:	c3                   	ret    

81000696 <stdin_init>:
81000696:	55                   	push   %ebp
81000697:	89 e5                	mov    %esp,%ebp
81000699:	83 ec 08             	sub    $0x8,%esp
8100069c:	83 ec 04             	sub    $0x4,%esp
8100069f:	6a 00                	push   $0x0
810006a1:	6a 04                	push   $0x4
810006a3:	ff 75 08             	push   0x8(%ebp)
810006a6:	e8 3e ff ff ff       	call   810005e9 <std>
810006ab:	83 c4 10             	add    $0x10,%esp
810006ae:	90                   	nop
810006af:	c9                   	leave  
810006b0:	c3                   	ret    

810006b1 <stdout_init>:
810006b1:	55                   	push   %ebp
810006b2:	89 e5                	mov    %esp,%ebp
810006b4:	83 ec 08             	sub    $0x8,%esp
810006b7:	83 ec 04             	sub    $0x4,%esp
810006ba:	6a 01                	push   $0x1
810006bc:	6a 09                	push   $0x9
810006be:	ff 75 08             	push   0x8(%ebp)
810006c1:	e8 23 ff ff ff       	call   810005e9 <std>
810006c6:	83 c4 10             	add    $0x10,%esp
810006c9:	90                   	nop
810006ca:	c9                   	leave  
810006cb:	c3                   	ret    

810006cc <stderr_init>:
810006cc:	55                   	push   %ebp
810006cd:	89 e5                	mov    %esp,%ebp
810006cf:	83 ec 08             	sub    $0x8,%esp
810006d2:	83 ec 04             	sub    $0x4,%esp
810006d5:	6a 02                	push   $0x2
810006d7:	6a 12                	push   $0x12
810006d9:	ff 75 08             	push   0x8(%ebp)
810006dc:	e8 08 ff ff ff       	call   810005e9 <std>
810006e1:	83 c4 10             	add    $0x10,%esp
810006e4:	90                   	nop
810006e5:	c9                   	leave  
810006e6:	c3                   	ret    

810006e7 <__sfmoreglue>:
810006e7:	55                   	push   %ebp
810006e8:	89 e5                	mov    %esp,%ebp
810006ea:	53                   	push   %ebx
810006eb:	83 ec 14             	sub    $0x14,%esp
810006ee:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006f1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006f4:	6b c0 68             	imul   $0x68,%eax,%eax
810006f7:	83 c0 74             	add    $0x74,%eax
810006fa:	83 ec 08             	sub    $0x8,%esp
810006fd:	50                   	push   %eax
810006fe:	ff 75 08             	push   0x8(%ebp)
81000701:	e8 e9 0a 00 00       	call   810011ef <_malloc_r>
81000706:	83 c4 10             	add    $0x10,%esp
81000709:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100070c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000710:	75 07                	jne    81000719 <__sfmoreglue+0x32>
81000712:	b8 00 00 00 00       	mov    $0x0,%eax
81000717:	eb 38                	jmp    81000751 <__sfmoreglue+0x6a>
81000719:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100071c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000725:	89 58 04             	mov    %ebx,0x4(%eax)
81000728:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100072b:	8d 50 0c             	lea    0xc(%eax),%edx
8100072e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000731:	89 50 08             	mov    %edx,0x8(%eax)
81000734:	89 d8                	mov    %ebx,%eax
81000736:	6b c0 68             	imul   $0x68,%eax,%eax
81000739:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100073c:	83 c2 0c             	add    $0xc,%edx
8100073f:	83 ec 04             	sub    $0x4,%esp
81000742:	50                   	push   %eax
81000743:	6a 00                	push   $0x0
81000745:	52                   	push   %edx
81000746:	e8 42 14 00 00       	call   81001b8d <memset>
8100074b:	83 c4 10             	add    $0x10,%esp
8100074e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000751:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000754:	c9                   	leave  
81000755:	c3                   	ret    

81000756 <__sfp>:
81000756:	55                   	push   %ebp
81000757:	89 e5                	mov    %esp,%ebp
81000759:	83 ec 18             	sub    $0x18,%esp
8100075c:	e8 16 02 00 00       	call   81000977 <__sfp_lock_acquire>
81000761:	a1 c4 47 00 81       	mov    0x810047c4,%eax
81000766:	8b 40 38             	mov    0x38(%eax),%eax
81000769:	85 c0                	test   %eax,%eax
8100076b:	75 11                	jne    8100077e <__sfp+0x28>
8100076d:	a1 c4 47 00 81       	mov    0x810047c4,%eax
81000772:	83 ec 0c             	sub    $0xc,%esp
81000775:	50                   	push   %eax
81000776:	e8 63 01 00 00       	call   810008de <__sinit>
8100077b:	83 c4 10             	add    $0x10,%esp
8100077e:	a1 c4 47 00 81       	mov    0x810047c4,%eax
81000783:	05 e0 02 00 00       	add    $0x2e0,%eax
81000788:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100078b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100078e:	8b 40 08             	mov    0x8(%eax),%eax
81000791:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000794:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000797:	8b 40 04             	mov    0x4(%eax),%eax
8100079a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100079d:	eb 10                	jmp    810007af <__sfp+0x59>
8100079f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007a2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810007a6:	66 85 c0             	test   %ax,%ax
810007a9:	74 58                	je     81000803 <__sfp+0xad>
810007ab:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810007af:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810007b3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810007b7:	79 e6                	jns    8100079f <__sfp+0x49>
810007b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007bc:	8b 00                	mov    (%eax),%eax
810007be:	85 c0                	test   %eax,%eax
810007c0:	75 1e                	jne    810007e0 <__sfp+0x8a>
810007c2:	83 ec 08             	sub    $0x8,%esp
810007c5:	6a 04                	push   $0x4
810007c7:	ff 75 08             	push   0x8(%ebp)
810007ca:	e8 18 ff ff ff       	call   810006e7 <__sfmoreglue>
810007cf:	83 c4 10             	add    $0x10,%esp
810007d2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810007d5:	89 02                	mov    %eax,(%edx)
810007d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007da:	8b 00                	mov    (%eax),%eax
810007dc:	85 c0                	test   %eax,%eax
810007de:	74 0a                	je     810007ea <__sfp+0x94>
810007e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007e3:	8b 00                	mov    (%eax),%eax
810007e5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007e8:	eb a1                	jmp    8100078b <__sfp+0x35>
810007ea:	90                   	nop
810007eb:	e8 8d 01 00 00       	call   8100097d <__sfp_lock_release>
810007f0:	8b 45 08             	mov    0x8(%ebp),%eax
810007f3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007f9:	b8 00 00 00 00       	mov    $0x0,%eax
810007fe:	e9 9e 00 00 00       	jmp    810008a1 <__sfp+0x14b>
81000803:	90                   	nop
81000804:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000807:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
8100080d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000810:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
81000816:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000819:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000820:	e8 58 01 00 00       	call   8100097d <__sfp_lock_release>
81000825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000828:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100082e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000831:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000838:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100083b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000842:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000845:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100084c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100084f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000856:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000859:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000860:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000863:	83 c0 5c             	add    $0x5c,%eax
81000866:	83 ec 04             	sub    $0x4,%esp
81000869:	6a 08                	push   $0x8
8100086b:	6a 00                	push   $0x0
8100086d:	50                   	push   %eax
8100086e:	e8 1a 13 00 00       	call   81001b8d <memset>
81000873:	83 c4 10             	add    $0x10,%esp
81000876:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000879:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000880:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000883:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100088a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100088d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000894:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000897:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100089e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810008a1:	c9                   	leave  
810008a2:	c3                   	ret    

810008a3 <_cleanup_r>:
810008a3:	55                   	push   %ebp
810008a4:	89 e5                	mov    %esp,%ebp
810008a6:	83 ec 18             	sub    $0x18,%esp
810008a9:	c7 45 f4 b6 34 00 81 	movl   $0x810034b6,-0xc(%ebp)
810008b0:	83 ec 08             	sub    $0x8,%esp
810008b3:	ff 75 f4             	push   -0xc(%ebp)
810008b6:	ff 75 08             	push   0x8(%ebp)
810008b9:	e8 33 06 00 00       	call   81000ef1 <_fwalk_reent>
810008be:	83 c4 10             	add    $0x10,%esp
810008c1:	90                   	nop
810008c2:	c9                   	leave  
810008c3:	c3                   	ret    

810008c4 <_cleanup>:
810008c4:	55                   	push   %ebp
810008c5:	89 e5                	mov    %esp,%ebp
810008c7:	83 ec 08             	sub    $0x8,%esp
810008ca:	a1 c4 47 00 81       	mov    0x810047c4,%eax
810008cf:	83 ec 0c             	sub    $0xc,%esp
810008d2:	50                   	push   %eax
810008d3:	e8 cb ff ff ff       	call   810008a3 <_cleanup_r>
810008d8:	83 c4 10             	add    $0x10,%esp
810008db:	90                   	nop
810008dc:	c9                   	leave  
810008dd:	c3                   	ret    

810008de <__sinit>:
810008de:	55                   	push   %ebp
810008df:	89 e5                	mov    %esp,%ebp
810008e1:	83 ec 08             	sub    $0x8,%esp
810008e4:	e8 9a 00 00 00       	call   81000983 <__sinit_lock_acquire>
810008e9:	8b 45 08             	mov    0x8(%ebp),%eax
810008ec:	8b 40 38             	mov    0x38(%eax),%eax
810008ef:	85 c0                	test   %eax,%eax
810008f1:	74 07                	je     810008fa <__sinit+0x1c>
810008f3:	e8 91 00 00 00       	call   81000989 <__sinit_lock_release>
810008f8:	eb 7b                	jmp    81000975 <__sinit+0x97>
810008fa:	8b 45 08             	mov    0x8(%ebp),%eax
810008fd:	c7 40 3c a3 08 00 81 	movl   $0x810008a3,0x3c(%eax)
81000904:	8b 45 08             	mov    0x8(%ebp),%eax
81000907:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
8100090e:	00 00 00 
81000911:	8b 45 08             	mov    0x8(%ebp),%eax
81000914:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
8100091b:	00 00 00 
8100091e:	8b 45 08             	mov    0x8(%ebp),%eax
81000921:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000927:	8b 45 08             	mov    0x8(%ebp),%eax
8100092a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000930:	8b 45 08             	mov    0x8(%ebp),%eax
81000933:	8b 40 04             	mov    0x4(%eax),%eax
81000936:	83 ec 0c             	sub    $0xc,%esp
81000939:	50                   	push   %eax
8100093a:	e8 57 fd ff ff       	call   81000696 <stdin_init>
8100093f:	83 c4 10             	add    $0x10,%esp
81000942:	8b 45 08             	mov    0x8(%ebp),%eax
81000945:	8b 40 08             	mov    0x8(%eax),%eax
81000948:	83 ec 0c             	sub    $0xc,%esp
8100094b:	50                   	push   %eax
8100094c:	e8 60 fd ff ff       	call   810006b1 <stdout_init>
81000951:	83 c4 10             	add    $0x10,%esp
81000954:	8b 45 08             	mov    0x8(%ebp),%eax
81000957:	8b 40 0c             	mov    0xc(%eax),%eax
8100095a:	83 ec 0c             	sub    $0xc,%esp
8100095d:	50                   	push   %eax
8100095e:	e8 69 fd ff ff       	call   810006cc <stderr_init>
81000963:	83 c4 10             	add    $0x10,%esp
81000966:	8b 45 08             	mov    0x8(%ebp),%eax
81000969:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000970:	e8 14 00 00 00       	call   81000989 <__sinit_lock_release>
81000975:	c9                   	leave  
81000976:	c3                   	ret    

81000977 <__sfp_lock_acquire>:
81000977:	55                   	push   %ebp
81000978:	89 e5                	mov    %esp,%ebp
8100097a:	90                   	nop
8100097b:	5d                   	pop    %ebp
8100097c:	c3                   	ret    

8100097d <__sfp_lock_release>:
8100097d:	55                   	push   %ebp
8100097e:	89 e5                	mov    %esp,%ebp
81000980:	90                   	nop
81000981:	5d                   	pop    %ebp
81000982:	c3                   	ret    

81000983 <__sinit_lock_acquire>:
81000983:	55                   	push   %ebp
81000984:	89 e5                	mov    %esp,%ebp
81000986:	90                   	nop
81000987:	5d                   	pop    %ebp
81000988:	c3                   	ret    

81000989 <__sinit_lock_release>:
81000989:	55                   	push   %ebp
8100098a:	89 e5                	mov    %esp,%ebp
8100098c:	90                   	nop
8100098d:	5d                   	pop    %ebp
8100098e:	c3                   	ret    

8100098f <__fp_lock>:
8100098f:	55                   	push   %ebp
81000990:	89 e5                	mov    %esp,%ebp
81000992:	b8 00 00 00 00       	mov    $0x0,%eax
81000997:	5d                   	pop    %ebp
81000998:	c3                   	ret    

81000999 <__fp_unlock>:
81000999:	55                   	push   %ebp
8100099a:	89 e5                	mov    %esp,%ebp
8100099c:	b8 00 00 00 00       	mov    $0x0,%eax
810009a1:	5d                   	pop    %ebp
810009a2:	c3                   	ret    

810009a3 <__fp_lock_all>:
810009a3:	55                   	push   %ebp
810009a4:	89 e5                	mov    %esp,%ebp
810009a6:	83 ec 08             	sub    $0x8,%esp
810009a9:	e8 c9 ff ff ff       	call   81000977 <__sfp_lock_acquire>
810009ae:	a1 64 4f 00 81       	mov    0x81004f64,%eax
810009b3:	83 ec 08             	sub    $0x8,%esp
810009b6:	68 8f 09 00 81       	push   $0x8100098f
810009bb:	50                   	push   %eax
810009bc:	e8 c8 04 00 00       	call   81000e89 <_fwalk>
810009c1:	83 c4 10             	add    $0x10,%esp
810009c4:	90                   	nop
810009c5:	c9                   	leave  
810009c6:	c3                   	ret    

810009c7 <__fp_unlock_all>:
810009c7:	55                   	push   %ebp
810009c8:	89 e5                	mov    %esp,%ebp
810009ca:	83 ec 08             	sub    $0x8,%esp
810009cd:	a1 64 4f 00 81       	mov    0x81004f64,%eax
810009d2:	83 ec 08             	sub    $0x8,%esp
810009d5:	68 99 09 00 81       	push   $0x81000999
810009da:	50                   	push   %eax
810009db:	e8 a9 04 00 00       	call   81000e89 <_fwalk>
810009e0:	83 c4 10             	add    $0x10,%esp
810009e3:	e8 95 ff ff ff       	call   8100097d <__sfp_lock_release>
810009e8:	90                   	nop
810009e9:	c9                   	leave  
810009ea:	c3                   	ret    

810009eb <__sfvwrite_r>:
810009eb:	55                   	push   %ebp
810009ec:	89 e5                	mov    %esp,%ebp
810009ee:	57                   	push   %edi
810009ef:	56                   	push   %esi
810009f0:	53                   	push   %ebx
810009f1:	83 ec 3c             	sub    $0x3c,%esp
810009f4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009f7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009fe:	8b 45 10             	mov    0x10(%ebp),%eax
81000a01:	8b 78 08             	mov    0x8(%eax),%edi
81000a04:	85 ff                	test   %edi,%edi
81000a06:	75 0a                	jne    81000a12 <__sfvwrite_r+0x27>
81000a08:	b8 00 00 00 00       	mov    $0x0,%eax
81000a0d:	e9 6f 04 00 00       	jmp    81000e81 <__sfvwrite_r+0x496>
81000a12:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a16:	98                   	cwtl   
81000a17:	83 e0 08             	and    $0x8,%eax
81000a1a:	85 c0                	test   %eax,%eax
81000a1c:	74 07                	je     81000a25 <__sfvwrite_r+0x3a>
81000a1e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a21:	85 c0                	test   %eax,%eax
81000a23:	75 1d                	jne    81000a42 <__sfvwrite_r+0x57>
81000a25:	83 ec 08             	sub    $0x8,%esp
81000a28:	53                   	push   %ebx
81000a29:	ff 75 08             	push   0x8(%ebp)
81000a2c:	e8 ea 28 00 00       	call   8100331b <__swsetup_r>
81000a31:	83 c4 10             	add    $0x10,%esp
81000a34:	85 c0                	test   %eax,%eax
81000a36:	74 0a                	je     81000a42 <__sfvwrite_r+0x57>
81000a38:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000a3d:	e9 3f 04 00 00       	jmp    81000e81 <__sfvwrite_r+0x496>
81000a42:	8b 45 10             	mov    0x10(%ebp),%eax
81000a45:	8b 00                	mov    (%eax),%eax
81000a47:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a4a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a4f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a53:	98                   	cwtl   
81000a54:	83 e0 02             	and    $0x2,%eax
81000a57:	85 c0                	test   %eax,%eax
81000a59:	74 68                	je     81000ac3 <__sfvwrite_r+0xd8>
81000a5b:	eb 11                	jmp    81000a6e <__sfvwrite_r+0x83>
81000a5d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a60:	8b 08                	mov    (%eax),%ecx
81000a62:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a65:	8b 78 04             	mov    0x4(%eax),%edi
81000a68:	83 c0 08             	add    $0x8,%eax
81000a6b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a6e:	85 ff                	test   %edi,%edi
81000a70:	74 eb                	je     81000a5d <__sfvwrite_r+0x72>
81000a72:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a75:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a7a:	39 c7                	cmp    %eax,%edi
81000a7c:	0f 46 c7             	cmovbe %edi,%eax
81000a7f:	89 c2                	mov    %eax,%edx
81000a81:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a84:	52                   	push   %edx
81000a85:	ff 75 c4             	push   -0x3c(%ebp)
81000a88:	50                   	push   %eax
81000a89:	ff 75 08             	push   0x8(%ebp)
81000a8c:	ff d1                	call   *%ecx
81000a8e:	83 c4 10             	add    $0x10,%esp
81000a91:	89 c6                	mov    %eax,%esi
81000a93:	85 f6                	test   %esi,%esi
81000a95:	0f 8e cf 03 00 00    	jle    81000e6a <__sfvwrite_r+0x47f>
81000a9b:	89 f0                	mov    %esi,%eax
81000a9d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000aa0:	89 f0                	mov    %esi,%eax
81000aa2:	29 c7                	sub    %eax,%edi
81000aa4:	8b 45 10             	mov    0x10(%ebp),%eax
81000aa7:	8b 40 08             	mov    0x8(%eax),%eax
81000aaa:	89 f2                	mov    %esi,%edx
81000aac:	29 d0                	sub    %edx,%eax
81000aae:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000ab1:	89 41 08             	mov    %eax,0x8(%ecx)
81000ab4:	8b 45 10             	mov    0x10(%ebp),%eax
81000ab7:	8b 40 08             	mov    0x8(%eax),%eax
81000aba:	85 c0                	test   %eax,%eax
81000abc:	75 b0                	jne    81000a6e <__sfvwrite_r+0x83>
81000abe:	e9 a0 03 00 00       	jmp    81000e63 <__sfvwrite_r+0x478>
81000ac3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ac7:	98                   	cwtl   
81000ac8:	83 e0 01             	and    $0x1,%eax
81000acb:	85 c0                	test   %eax,%eax
81000acd:	0f 85 44 02 00 00    	jne    81000d17 <__sfvwrite_r+0x32c>
81000ad3:	eb 11                	jmp    81000ae6 <__sfvwrite_r+0xfb>
81000ad5:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000ad8:	8b 08                	mov    (%eax),%ecx
81000ada:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000add:	8b 78 04             	mov    0x4(%eax),%edi
81000ae0:	83 c0 08             	add    $0x8,%eax
81000ae3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000ae6:	85 ff                	test   %edi,%edi
81000ae8:	74 eb                	je     81000ad5 <__sfvwrite_r+0xea>
81000aea:	8b 73 08             	mov    0x8(%ebx),%esi
81000aed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000af1:	98                   	cwtl   
81000af2:	25 00 02 00 00       	and    $0x200,%eax
81000af7:	85 c0                	test   %eax,%eax
81000af9:	0f 84 4f 01 00 00    	je     81000c4e <__sfvwrite_r+0x263>
81000aff:	89 f0                	mov    %esi,%eax
81000b01:	39 c7                	cmp    %eax,%edi
81000b03:	0f 82 12 01 00 00    	jb     81000c1b <__sfvwrite_r+0x230>
81000b09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b0d:	98                   	cwtl   
81000b0e:	25 80 04 00 00       	and    $0x480,%eax
81000b13:	85 c0                	test   %eax,%eax
81000b15:	0f 84 00 01 00 00    	je     81000c1b <__sfvwrite_r+0x230>
81000b1b:	8b 03                	mov    (%ebx),%eax
81000b1d:	8b 53 10             	mov    0x10(%ebx),%edx
81000b20:	29 d0                	sub    %edx,%eax
81000b22:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000b25:	8b 53 14             	mov    0x14(%ebx),%edx
81000b28:	89 d0                	mov    %edx,%eax
81000b2a:	01 c0                	add    %eax,%eax
81000b2c:	01 d0                	add    %edx,%eax
81000b2e:	89 c2                	mov    %eax,%edx
81000b30:	c1 ea 1f             	shr    $0x1f,%edx
81000b33:	01 d0                	add    %edx,%eax
81000b35:	d1 f8                	sar    %eax
81000b37:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b3a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b3d:	01 f8                	add    %edi,%eax
81000b3f:	8d 50 01             	lea    0x1(%eax),%edx
81000b42:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b45:	39 c2                	cmp    %eax,%edx
81000b47:	76 0b                	jbe    81000b54 <__sfvwrite_r+0x169>
81000b49:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b4c:	01 f8                	add    %edi,%eax
81000b4e:	83 c0 01             	add    $0x1,%eax
81000b51:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b54:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b58:	98                   	cwtl   
81000b59:	25 00 04 00 00       	and    $0x400,%eax
81000b5e:	85 c0                	test   %eax,%eax
81000b60:	74 4f                	je     81000bb1 <__sfvwrite_r+0x1c6>
81000b62:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b65:	83 ec 08             	sub    $0x8,%esp
81000b68:	50                   	push   %eax
81000b69:	ff 75 08             	push   0x8(%ebp)
81000b6c:	e8 7e 06 00 00       	call   810011ef <_malloc_r>
81000b71:	83 c4 10             	add    $0x10,%esp
81000b74:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b77:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b7b:	75 0e                	jne    81000b8b <__sfvwrite_r+0x1a0>
81000b7d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b80:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b86:	e9 e6 02 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000b8b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b8e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b91:	83 ec 04             	sub    $0x4,%esp
81000b94:	52                   	push   %edx
81000b95:	50                   	push   %eax
81000b96:	ff 75 dc             	push   -0x24(%ebp)
81000b99:	e8 1a 0f 00 00       	call   81001ab8 <memcpy>
81000b9e:	83 c4 10             	add    $0x10,%esp
81000ba1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ba5:	66 25 7f fb          	and    $0xfb7f,%ax
81000ba9:	0c 80                	or     $0x80,%al
81000bab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000baf:	eb 49                	jmp    81000bfa <__sfvwrite_r+0x20f>
81000bb1:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000bb4:	8b 43 10             	mov    0x10(%ebx),%eax
81000bb7:	83 ec 04             	sub    $0x4,%esp
81000bba:	52                   	push   %edx
81000bbb:	50                   	push   %eax
81000bbc:	ff 75 08             	push   0x8(%ebp)
81000bbf:	e8 ac 1b 00 00       	call   81002770 <_realloc_r>
81000bc4:	83 c4 10             	add    $0x10,%esp
81000bc7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000bca:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000bce:	75 2a                	jne    81000bfa <__sfvwrite_r+0x20f>
81000bd0:	8b 43 10             	mov    0x10(%ebx),%eax
81000bd3:	83 ec 08             	sub    $0x8,%esp
81000bd6:	50                   	push   %eax
81000bd7:	ff 75 08             	push   0x8(%ebp)
81000bda:	e8 67 2e 00 00       	call   81003a46 <_free_r>
81000bdf:	83 c4 10             	add    $0x10,%esp
81000be2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000be6:	24 7f                	and    $0x7f,%al
81000be8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bec:	8b 45 08             	mov    0x8(%ebp),%eax
81000bef:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bf5:	e9 77 02 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000bfa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bfd:	89 43 10             	mov    %eax,0x10(%ebx)
81000c00:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000c03:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000c06:	01 d0                	add    %edx,%eax
81000c08:	89 03                	mov    %eax,(%ebx)
81000c0a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c0d:	89 43 14             	mov    %eax,0x14(%ebx)
81000c10:	89 fe                	mov    %edi,%esi
81000c12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000c15:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000c18:	89 43 08             	mov    %eax,0x8(%ebx)
81000c1b:	89 f0                	mov    %esi,%eax
81000c1d:	39 c7                	cmp    %eax,%edi
81000c1f:	73 02                	jae    81000c23 <__sfvwrite_r+0x238>
81000c21:	89 fe                	mov    %edi,%esi
81000c23:	89 f2                	mov    %esi,%edx
81000c25:	8b 03                	mov    (%ebx),%eax
81000c27:	83 ec 04             	sub    $0x4,%esp
81000c2a:	52                   	push   %edx
81000c2b:	ff 75 c4             	push   -0x3c(%ebp)
81000c2e:	50                   	push   %eax
81000c2f:	e8 cc 0e 00 00       	call   81001b00 <memmove>
81000c34:	83 c4 10             	add    $0x10,%esp
81000c37:	8b 43 08             	mov    0x8(%ebx),%eax
81000c3a:	29 f0                	sub    %esi,%eax
81000c3c:	89 43 08             	mov    %eax,0x8(%ebx)
81000c3f:	8b 03                	mov    (%ebx),%eax
81000c41:	89 f2                	mov    %esi,%edx
81000c43:	01 d0                	add    %edx,%eax
81000c45:	89 03                	mov    %eax,(%ebx)
81000c47:	89 fe                	mov    %edi,%esi
81000c49:	e9 9d 00 00 00       	jmp    81000ceb <__sfvwrite_r+0x300>
81000c4e:	8b 13                	mov    (%ebx),%edx
81000c50:	8b 43 10             	mov    0x10(%ebx),%eax
81000c53:	39 c2                	cmp    %eax,%edx
81000c55:	77 07                	ja     81000c5e <__sfvwrite_r+0x273>
81000c57:	8b 43 14             	mov    0x14(%ebx),%eax
81000c5a:	39 c7                	cmp    %eax,%edi
81000c5c:	73 4c                	jae    81000caa <__sfvwrite_r+0x2bf>
81000c5e:	89 f0                	mov    %esi,%eax
81000c60:	39 c7                	cmp    %eax,%edi
81000c62:	0f 46 c7             	cmovbe %edi,%eax
81000c65:	89 c6                	mov    %eax,%esi
81000c67:	89 f2                	mov    %esi,%edx
81000c69:	8b 03                	mov    (%ebx),%eax
81000c6b:	83 ec 04             	sub    $0x4,%esp
81000c6e:	52                   	push   %edx
81000c6f:	ff 75 c4             	push   -0x3c(%ebp)
81000c72:	50                   	push   %eax
81000c73:	e8 88 0e 00 00       	call   81001b00 <memmove>
81000c78:	83 c4 10             	add    $0x10,%esp
81000c7b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c7e:	29 f0                	sub    %esi,%eax
81000c80:	89 43 08             	mov    %eax,0x8(%ebx)
81000c83:	8b 03                	mov    (%ebx),%eax
81000c85:	89 f2                	mov    %esi,%edx
81000c87:	01 d0                	add    %edx,%eax
81000c89:	89 03                	mov    %eax,(%ebx)
81000c8b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c8e:	85 c0                	test   %eax,%eax
81000c90:	75 58                	jne    81000cea <__sfvwrite_r+0x2ff>
81000c92:	83 ec 08             	sub    $0x8,%esp
81000c95:	53                   	push   %ebx
81000c96:	ff 75 08             	push   0x8(%ebp)
81000c99:	e8 62 2b 00 00       	call   81003800 <_fflush_r>
81000c9e:	83 c4 10             	add    $0x10,%esp
81000ca1:	85 c0                	test   %eax,%eax
81000ca3:	74 45                	je     81000cea <__sfvwrite_r+0x2ff>
81000ca5:	e9 c7 01 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000caa:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000cb0:	77 04                	ja     81000cb6 <__sfvwrite_r+0x2cb>
81000cb2:	89 f8                	mov    %edi,%eax
81000cb4:	eb 05                	jmp    81000cbb <__sfvwrite_r+0x2d0>
81000cb6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000cbb:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000cbe:	99                   	cltd   
81000cbf:	f7 f9                	idiv   %ecx
81000cc1:	89 c2                	mov    %eax,%edx
81000cc3:	8b 43 14             	mov    0x14(%ebx),%eax
81000cc6:	89 d6                	mov    %edx,%esi
81000cc8:	0f af f0             	imul   %eax,%esi
81000ccb:	8b 53 24             	mov    0x24(%ebx),%edx
81000cce:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cd1:	56                   	push   %esi
81000cd2:	ff 75 c4             	push   -0x3c(%ebp)
81000cd5:	50                   	push   %eax
81000cd6:	ff 75 08             	push   0x8(%ebp)
81000cd9:	ff d2                	call   *%edx
81000cdb:	83 c4 10             	add    $0x10,%esp
81000cde:	89 c6                	mov    %eax,%esi
81000ce0:	85 f6                	test   %esi,%esi
81000ce2:	0f 8e 85 01 00 00    	jle    81000e6d <__sfvwrite_r+0x482>
81000ce8:	eb 01                	jmp    81000ceb <__sfvwrite_r+0x300>
81000cea:	90                   	nop
81000ceb:	89 f0                	mov    %esi,%eax
81000ced:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cf0:	89 f0                	mov    %esi,%eax
81000cf2:	29 c7                	sub    %eax,%edi
81000cf4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf7:	8b 40 08             	mov    0x8(%eax),%eax
81000cfa:	89 f2                	mov    %esi,%edx
81000cfc:	29 d0                	sub    %edx,%eax
81000cfe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d01:	89 41 08             	mov    %eax,0x8(%ecx)
81000d04:	8b 45 10             	mov    0x10(%ebp),%eax
81000d07:	8b 40 08             	mov    0x8(%eax),%eax
81000d0a:	85 c0                	test   %eax,%eax
81000d0c:	0f 85 d4 fd ff ff    	jne    81000ae6 <__sfvwrite_r+0xfb>
81000d12:	e9 4c 01 00 00       	jmp    81000e63 <__sfvwrite_r+0x478>
81000d17:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d1e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000d25:	eb 18                	jmp    81000d3f <__sfvwrite_r+0x354>
81000d27:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d2e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000d31:	8b 08                	mov    (%eax),%ecx
81000d33:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000d36:	8b 78 04             	mov    0x4(%eax),%edi
81000d39:	83 c0 08             	add    $0x8,%eax
81000d3c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000d3f:	85 ff                	test   %edi,%edi
81000d41:	74 e4                	je     81000d27 <__sfvwrite_r+0x33c>
81000d43:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d47:	75 32                	jne    81000d7b <__sfvwrite_r+0x390>
81000d49:	83 ec 04             	sub    $0x4,%esp
81000d4c:	57                   	push   %edi
81000d4d:	6a 0a                	push   $0xa
81000d4f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d52:	56                   	push   %esi
81000d53:	e8 c8 0c 00 00       	call   81001a20 <memchr>
81000d58:	83 c4 10             	add    $0x10,%esp
81000d5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d5e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d62:	74 0a                	je     81000d6e <__sfvwrite_r+0x383>
81000d64:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d67:	83 c0 01             	add    $0x1,%eax
81000d6a:	29 f0                	sub    %esi,%eax
81000d6c:	eb 03                	jmp    81000d71 <__sfvwrite_r+0x386>
81000d6e:	8d 47 01             	lea    0x1(%edi),%eax
81000d71:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d74:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d7b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d7e:	39 c7                	cmp    %eax,%edi
81000d80:	0f 46 c7             	cmovbe %edi,%eax
81000d83:	89 c1                	mov    %eax,%ecx
81000d85:	8b 53 08             	mov    0x8(%ebx),%edx
81000d88:	8b 43 14             	mov    0x14(%ebx),%eax
81000d8b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d8e:	8b 13                	mov    (%ebx),%edx
81000d90:	8b 43 10             	mov    0x10(%ebx),%eax
81000d93:	39 c2                	cmp    %eax,%edx
81000d95:	76 38                	jbe    81000dcf <__sfvwrite_r+0x3e4>
81000d97:	39 f1                	cmp    %esi,%ecx
81000d99:	7e 34                	jle    81000dcf <__sfvwrite_r+0x3e4>
81000d9b:	89 f2                	mov    %esi,%edx
81000d9d:	8b 03                	mov    (%ebx),%eax
81000d9f:	83 ec 04             	sub    $0x4,%esp
81000da2:	52                   	push   %edx
81000da3:	ff 75 c4             	push   -0x3c(%ebp)
81000da6:	50                   	push   %eax
81000da7:	e8 54 0d 00 00       	call   81001b00 <memmove>
81000dac:	83 c4 10             	add    $0x10,%esp
81000daf:	8b 03                	mov    (%ebx),%eax
81000db1:	89 f2                	mov    %esi,%edx
81000db3:	01 d0                	add    %edx,%eax
81000db5:	89 03                	mov    %eax,(%ebx)
81000db7:	83 ec 08             	sub    $0x8,%esp
81000dba:	53                   	push   %ebx
81000dbb:	ff 75 08             	push   0x8(%ebp)
81000dbe:	e8 3d 2a 00 00       	call   81003800 <_fflush_r>
81000dc3:	83 c4 10             	add    $0x10,%esp
81000dc6:	85 c0                	test   %eax,%eax
81000dc8:	74 4f                	je     81000e19 <__sfvwrite_r+0x42e>
81000dca:	e9 a2 00 00 00       	jmp    81000e71 <__sfvwrite_r+0x486>
81000dcf:	8b 73 14             	mov    0x14(%ebx),%esi
81000dd2:	89 c8                	mov    %ecx,%eax
81000dd4:	39 c6                	cmp    %eax,%esi
81000dd6:	7f 1b                	jg     81000df3 <__sfvwrite_r+0x408>
81000dd8:	8b 53 24             	mov    0x24(%ebx),%edx
81000ddb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000dde:	56                   	push   %esi
81000ddf:	ff 75 c4             	push   -0x3c(%ebp)
81000de2:	50                   	push   %eax
81000de3:	ff 75 08             	push   0x8(%ebp)
81000de6:	ff d2                	call   *%edx
81000de8:	83 c4 10             	add    $0x10,%esp
81000deb:	89 c6                	mov    %eax,%esi
81000ded:	85 f6                	test   %esi,%esi
81000def:	7f 28                	jg     81000e19 <__sfvwrite_r+0x42e>
81000df1:	eb 7e                	jmp    81000e71 <__sfvwrite_r+0x486>
81000df3:	89 ce                	mov    %ecx,%esi
81000df5:	89 f2                	mov    %esi,%edx
81000df7:	8b 03                	mov    (%ebx),%eax
81000df9:	83 ec 04             	sub    $0x4,%esp
81000dfc:	52                   	push   %edx
81000dfd:	ff 75 c4             	push   -0x3c(%ebp)
81000e00:	50                   	push   %eax
81000e01:	e8 fa 0c 00 00       	call   81001b00 <memmove>
81000e06:	83 c4 10             	add    $0x10,%esp
81000e09:	8b 43 08             	mov    0x8(%ebx),%eax
81000e0c:	29 f0                	sub    %esi,%eax
81000e0e:	89 43 08             	mov    %eax,0x8(%ebx)
81000e11:	8b 03                	mov    (%ebx),%eax
81000e13:	89 f2                	mov    %esi,%edx
81000e15:	01 d0                	add    %edx,%eax
81000e17:	89 03                	mov    %eax,(%ebx)
81000e19:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000e1c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000e20:	75 1a                	jne    81000e3c <__sfvwrite_r+0x451>
81000e22:	83 ec 08             	sub    $0x8,%esp
81000e25:	53                   	push   %ebx
81000e26:	ff 75 08             	push   0x8(%ebp)
81000e29:	e8 d2 29 00 00       	call   81003800 <_fflush_r>
81000e2e:	83 c4 10             	add    $0x10,%esp
81000e31:	85 c0                	test   %eax,%eax
81000e33:	75 3b                	jne    81000e70 <__sfvwrite_r+0x485>
81000e35:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e3c:	89 f0                	mov    %esi,%eax
81000e3e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e41:	89 f0                	mov    %esi,%eax
81000e43:	29 c7                	sub    %eax,%edi
81000e45:	8b 45 10             	mov    0x10(%ebp),%eax
81000e48:	8b 40 08             	mov    0x8(%eax),%eax
81000e4b:	89 f2                	mov    %esi,%edx
81000e4d:	29 d0                	sub    %edx,%eax
81000e4f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e52:	89 41 08             	mov    %eax,0x8(%ecx)
81000e55:	8b 45 10             	mov    0x10(%ebp),%eax
81000e58:	8b 40 08             	mov    0x8(%eax),%eax
81000e5b:	85 c0                	test   %eax,%eax
81000e5d:	0f 85 dc fe ff ff    	jne    81000d3f <__sfvwrite_r+0x354>
81000e63:	b8 00 00 00 00       	mov    $0x0,%eax
81000e68:	eb 17                	jmp    81000e81 <__sfvwrite_r+0x496>
81000e6a:	90                   	nop
81000e6b:	eb 04                	jmp    81000e71 <__sfvwrite_r+0x486>
81000e6d:	90                   	nop
81000e6e:	eb 01                	jmp    81000e71 <__sfvwrite_r+0x486>
81000e70:	90                   	nop
81000e71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e75:	83 c8 40             	or     $0x40,%eax
81000e78:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e81:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e84:	5b                   	pop    %ebx
81000e85:	5e                   	pop    %esi
81000e86:	5f                   	pop    %edi
81000e87:	5d                   	pop    %ebp
81000e88:	c3                   	ret    

81000e89 <_fwalk>:
81000e89:	55                   	push   %ebp
81000e8a:	89 e5                	mov    %esp,%ebp
81000e8c:	57                   	push   %edi
81000e8d:	56                   	push   %esi
81000e8e:	53                   	push   %ebx
81000e8f:	83 ec 1c             	sub    $0x1c,%esp
81000e92:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e99:	8b 45 08             	mov    0x8(%ebp),%eax
81000e9c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000ea2:	eb 3e                	jmp    81000ee2 <_fwalk+0x59>
81000ea4:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ea7:	8b 7e 04             	mov    0x4(%esi),%edi
81000eaa:	eb 2d                	jmp    81000ed9 <_fwalk+0x50>
81000eac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eb0:	66 85 c0             	test   %ax,%ax
81000eb3:	74 21                	je     81000ed6 <_fwalk+0x4d>
81000eb5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000eb9:	66 83 f8 01          	cmp    $0x1,%ax
81000ebd:	74 17                	je     81000ed6 <_fwalk+0x4d>
81000ebf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000ec3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000ec7:	74 0d                	je     81000ed6 <_fwalk+0x4d>
81000ec9:	83 ec 0c             	sub    $0xc,%esp
81000ecc:	53                   	push   %ebx
81000ecd:	ff 55 0c             	call   *0xc(%ebp)
81000ed0:	83 c4 10             	add    $0x10,%esp
81000ed3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000ed6:	83 c3 68             	add    $0x68,%ebx
81000ed9:	83 ef 01             	sub    $0x1,%edi
81000edc:	85 ff                	test   %edi,%edi
81000ede:	79 cc                	jns    81000eac <_fwalk+0x23>
81000ee0:	8b 36                	mov    (%esi),%esi
81000ee2:	85 f6                	test   %esi,%esi
81000ee4:	75 be                	jne    81000ea4 <_fwalk+0x1b>
81000ee6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ee9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000eec:	5b                   	pop    %ebx
81000eed:	5e                   	pop    %esi
81000eee:	5f                   	pop    %edi
81000eef:	5d                   	pop    %ebp
81000ef0:	c3                   	ret    

81000ef1 <_fwalk_reent>:
81000ef1:	55                   	push   %ebp
81000ef2:	89 e5                	mov    %esp,%ebp
81000ef4:	57                   	push   %edi
81000ef5:	56                   	push   %esi
81000ef6:	53                   	push   %ebx
81000ef7:	83 ec 1c             	sub    $0x1c,%esp
81000efa:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f01:	8b 45 08             	mov    0x8(%ebp),%eax
81000f04:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000f0a:	eb 41                	jmp    81000f4d <_fwalk_reent+0x5c>
81000f0c:	8b 5e 08             	mov    0x8(%esi),%ebx
81000f0f:	8b 7e 04             	mov    0x4(%esi),%edi
81000f12:	eb 30                	jmp    81000f44 <_fwalk_reent+0x53>
81000f14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f18:	66 85 c0             	test   %ax,%ax
81000f1b:	74 24                	je     81000f41 <_fwalk_reent+0x50>
81000f1d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f21:	66 83 f8 01          	cmp    $0x1,%ax
81000f25:	74 1a                	je     81000f41 <_fwalk_reent+0x50>
81000f27:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000f2b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000f2f:	74 10                	je     81000f41 <_fwalk_reent+0x50>
81000f31:	83 ec 08             	sub    $0x8,%esp
81000f34:	53                   	push   %ebx
81000f35:	ff 75 08             	push   0x8(%ebp)
81000f38:	ff 55 0c             	call   *0xc(%ebp)
81000f3b:	83 c4 10             	add    $0x10,%esp
81000f3e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f41:	83 c3 68             	add    $0x68,%ebx
81000f44:	83 ef 01             	sub    $0x1,%edi
81000f47:	85 ff                	test   %edi,%edi
81000f49:	79 c9                	jns    81000f14 <_fwalk_reent+0x23>
81000f4b:	8b 36                	mov    (%esi),%esi
81000f4d:	85 f6                	test   %esi,%esi
81000f4f:	75 bb                	jne    81000f0c <_fwalk_reent+0x1b>
81000f51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f54:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f57:	5b                   	pop    %ebx
81000f58:	5e                   	pop    %esi
81000f59:	5f                   	pop    %edi
81000f5a:	5d                   	pop    %ebp
81000f5b:	c3                   	ret    

81000f5c <malloc_extend_top>:
81000f5c:	55                   	push   %ebp
81000f5d:	89 e5                	mov    %esp,%ebp
81000f5f:	83 ec 38             	sub    $0x38,%esp
81000f62:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f69:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81000f6e:	8b 40 08             	mov    0x8(%eax),%eax
81000f71:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f74:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f77:	8b 40 04             	mov    0x4(%eax),%eax
81000f7a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f7d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f80:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f83:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f86:	01 d0                	add    %edx,%eax
81000f88:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f8b:	8b 15 40 55 00 81    	mov    0x81005540,%edx
81000f91:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f94:	01 d0                	add    %edx,%eax
81000f96:	83 c0 10             	add    $0x10,%eax
81000f99:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f9c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000fa3:	a1 8c 53 00 81       	mov    0x8100538c,%eax
81000fa8:	83 f8 ff             	cmp    $0xffffffff,%eax
81000fab:	74 15                	je     81000fc2 <malloc_extend_top+0x66>
81000fad:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000fb0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fb3:	01 d0                	add    %edx,%eax
81000fb5:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fbb:	f7 d8                	neg    %eax
81000fbd:	21 d0                	and    %edx,%eax
81000fbf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000fc2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc5:	83 ec 08             	sub    $0x8,%esp
81000fc8:	50                   	push   %eax
81000fc9:	ff 75 08             	push   0x8(%ebp)
81000fcc:	e8 79 20 00 00       	call   8100304a <_sbrk_r>
81000fd1:	83 c4 10             	add    $0x10,%esp
81000fd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fd7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000fdb:	0f 84 0b 02 00 00    	je     810011ec <malloc_extend_top+0x290>
81000fe1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fe7:	73 0e                	jae    81000ff7 <malloc_extend_top+0x9b>
81000fe9:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81000fee:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000ff1:	0f 85 f5 01 00 00    	jne    810011ec <malloc_extend_top+0x290>
81000ff7:	a1 60 55 00 81       	mov    0x81005560,%eax
81000ffc:	89 c2                	mov    %eax,%edx
81000ffe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001001:	01 d0                	add    %edx,%eax
81001003:	a3 60 55 00 81       	mov    %eax,0x81005560
81001008:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100100e:	75 30                	jne    81001040 <malloc_extend_top+0xe4>
81001010:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001013:	8d 50 ff             	lea    -0x1(%eax),%edx
81001016:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001019:	21 d0                	and    %edx,%eax
8100101b:	85 c0                	test   %eax,%eax
8100101d:	75 21                	jne    81001040 <malloc_extend_top+0xe4>
8100101f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001022:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001025:	01 d0                	add    %edx,%eax
81001027:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100102a:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100102f:	8b 40 08             	mov    0x8(%eax),%eax
81001032:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001035:	83 ca 01             	or     $0x1,%edx
81001038:	89 50 04             	mov    %edx,0x4(%eax)
8100103b:	e9 76 01 00 00       	jmp    810011b6 <malloc_extend_top+0x25a>
81001040:	a1 8c 53 00 81       	mov    0x8100538c,%eax
81001045:	83 f8 ff             	cmp    $0xffffffff,%eax
81001048:	75 0a                	jne    81001054 <malloc_extend_top+0xf8>
8100104a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100104d:	a3 8c 53 00 81       	mov    %eax,0x8100538c
81001052:	eb 13                	jmp    81001067 <malloc_extend_top+0x10b>
81001054:	8b 15 60 55 00 81    	mov    0x81005560,%edx
8100105a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100105d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001060:	01 d0                	add    %edx,%eax
81001062:	a3 60 55 00 81       	mov    %eax,0x81005560
81001067:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100106a:	83 c0 08             	add    $0x8,%eax
8100106d:	83 e0 07             	and    $0x7,%eax
81001070:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001073:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001077:	74 13                	je     8100108c <malloc_extend_top+0x130>
81001079:	b8 08 00 00 00       	mov    $0x8,%eax
8100107e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001081:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001084:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001087:	01 45 f4             	add    %eax,-0xc(%ebp)
8100108a:	eb 07                	jmp    81001093 <malloc_extend_top+0x137>
8100108c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001093:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001096:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001099:	01 d0                	add    %edx,%eax
8100109b:	89 c2                	mov    %eax,%edx
8100109d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010a0:	83 e8 01             	sub    $0x1,%eax
810010a3:	21 c2                	and    %eax,%edx
810010a5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010a8:	29 d0                	sub    %edx,%eax
810010aa:	01 45 f0             	add    %eax,-0x10(%ebp)
810010ad:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810010b0:	83 e8 01             	sub    $0x1,%eax
810010b3:	21 45 f0             	and    %eax,-0x10(%ebp)
810010b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010b9:	83 ec 08             	sub    $0x8,%esp
810010bc:	50                   	push   %eax
810010bd:	ff 75 08             	push   0x8(%ebp)
810010c0:	e8 85 1f 00 00       	call   8100304a <_sbrk_r>
810010c5:	83 c4 10             	add    $0x10,%esp
810010c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010cb:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810010cf:	75 28                	jne    810010f9 <malloc_extend_top+0x19d>
810010d1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810010d8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810010df:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010e2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010e5:	01 d0                	add    %edx,%eax
810010e7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010ea:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010ee:	74 09                	je     810010f9 <malloc_extend_top+0x19d>
810010f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010f3:	83 e8 08             	sub    $0x8,%eax
810010f6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010f9:	a1 60 55 00 81       	mov    0x81005560,%eax
810010fe:	89 c2                	mov    %eax,%edx
81001100:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001103:	01 d0                	add    %edx,%eax
81001105:	a3 60 55 00 81       	mov    %eax,0x81005560
8100110a:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
8100110f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001112:	89 42 08             	mov    %eax,0x8(%edx)
81001115:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001118:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100111b:	89 c2                	mov    %eax,%edx
8100111d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001120:	01 d0                	add    %edx,%eax
81001122:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001125:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100112a:	8b 40 08             	mov    0x8(%eax),%eax
8100112d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001130:	83 ca 01             	or     $0x1,%edx
81001133:	89 50 04             	mov    %edx,0x4(%eax)
81001136:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100113b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100113e:	74 76                	je     810011b6 <malloc_extend_top+0x25a>
81001140:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001144:	77 14                	ja     8100115a <malloc_extend_top+0x1fe>
81001146:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100114b:	8b 40 08             	mov    0x8(%eax),%eax
8100114e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001155:	e9 93 00 00 00       	jmp    810011ed <malloc_extend_top+0x291>
8100115a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100115d:	83 e8 0c             	sub    $0xc,%eax
81001160:	83 e0 f8             	and    $0xfffffff8,%eax
81001163:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001166:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001169:	8b 40 04             	mov    0x4(%eax),%eax
8100116c:	83 e0 01             	and    $0x1,%eax
8100116f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001172:	89 c2                	mov    %eax,%edx
81001174:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001177:	89 50 04             	mov    %edx,0x4(%eax)
8100117a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100117d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001180:	01 d0                	add    %edx,%eax
81001182:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001189:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100118c:	8d 50 04             	lea    0x4(%eax),%edx
8100118f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001192:	01 d0                	add    %edx,%eax
81001194:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100119b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100119f:	76 15                	jbe    810011b6 <malloc_extend_top+0x25a>
810011a1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810011a4:	83 c0 08             	add    $0x8,%eax
810011a7:	83 ec 08             	sub    $0x8,%esp
810011aa:	50                   	push   %eax
810011ab:	ff 75 08             	push   0x8(%ebp)
810011ae:	e8 93 28 00 00       	call   81003a46 <_free_r>
810011b3:	83 c4 10             	add    $0x10,%esp
810011b6:	a1 60 55 00 81       	mov    0x81005560,%eax
810011bb:	89 c2                	mov    %eax,%edx
810011bd:	a1 44 55 00 81       	mov    0x81005544,%eax
810011c2:	39 c2                	cmp    %eax,%edx
810011c4:	76 0a                	jbe    810011d0 <malloc_extend_top+0x274>
810011c6:	a1 60 55 00 81       	mov    0x81005560,%eax
810011cb:	a3 44 55 00 81       	mov    %eax,0x81005544
810011d0:	a1 60 55 00 81       	mov    0x81005560,%eax
810011d5:	89 c2                	mov    %eax,%edx
810011d7:	a1 48 55 00 81       	mov    0x81005548,%eax
810011dc:	39 c2                	cmp    %eax,%edx
810011de:	76 0d                	jbe    810011ed <malloc_extend_top+0x291>
810011e0:	a1 60 55 00 81       	mov    0x81005560,%eax
810011e5:	a3 48 55 00 81       	mov    %eax,0x81005548
810011ea:	eb 01                	jmp    810011ed <malloc_extend_top+0x291>
810011ec:	90                   	nop
810011ed:	c9                   	leave  
810011ee:	c3                   	ret    

810011ef <_malloc_r>:
810011ef:	55                   	push   %ebp
810011f0:	89 e5                	mov    %esp,%ebp
810011f2:	53                   	push   %ebx
810011f3:	83 ec 44             	sub    $0x44,%esp
810011f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011f9:	83 c0 0b             	add    $0xb,%eax
810011fc:	83 f8 16             	cmp    $0x16,%eax
810011ff:	76 0b                	jbe    8100120c <_malloc_r+0x1d>
81001201:	8b 45 0c             	mov    0xc(%ebp),%eax
81001204:	83 c0 0b             	add    $0xb,%eax
81001207:	83 e0 f8             	and    $0xfffffff8,%eax
8100120a:	eb 05                	jmp    81001211 <_malloc_r+0x22>
8100120c:	b8 10 00 00 00       	mov    $0x10,%eax
81001211:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001214:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001217:	85 c0                	test   %eax,%eax
81001219:	78 08                	js     81001223 <_malloc_r+0x34>
8100121b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100121e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001221:	73 13                	jae    81001236 <_malloc_r+0x47>
81001223:	8b 45 08             	mov    0x8(%ebp),%eax
81001226:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100122c:	b8 00 00 00 00       	mov    $0x0,%eax
81001231:	e9 d6 07 00 00       	jmp    81001a0c <_malloc_r+0x81d>
81001236:	83 ec 0c             	sub    $0xc,%esp
81001239:	ff 75 08             	push   0x8(%ebp)
8100123c:	e8 d4 09 00 00       	call   81001c15 <__malloc_lock>
81001241:	83 c4 10             	add    $0x10,%esp
81001244:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100124b:	0f 87 b0 00 00 00    	ja     81001301 <_malloc_r+0x112>
81001251:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001254:	c1 e8 03             	shr    $0x3,%eax
81001257:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100125a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100125d:	83 c0 01             	add    $0x1,%eax
81001260:	01 c0                	add    %eax,%eax
81001262:	c1 e0 02             	shl    $0x2,%eax
81001265:	05 80 4f 00 81       	add    $0x81004f80,%eax
8100126a:	83 e8 08             	sub    $0x8,%eax
8100126d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001270:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001273:	8b 40 0c             	mov    0xc(%eax),%eax
81001276:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001279:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100127c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100127f:	75 0d                	jne    8100128e <_malloc_r+0x9f>
81001281:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001285:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001288:	8b 40 0c             	mov    0xc(%eax),%eax
8100128b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100128e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001291:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001294:	74 62                	je     810012f8 <_malloc_r+0x109>
81001296:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001299:	8b 40 04             	mov    0x4(%eax),%eax
8100129c:	83 e0 fc             	and    $0xfffffffc,%eax
8100129f:	89 45 cc             	mov    %eax,-0x34(%ebp)
810012a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012a5:	8b 40 0c             	mov    0xc(%eax),%eax
810012a8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ae:	8b 40 08             	mov    0x8(%eax),%eax
810012b1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012b4:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012b7:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012ba:	89 50 0c             	mov    %edx,0xc(%eax)
810012bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012c0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012c3:	89 50 08             	mov    %edx,0x8(%eax)
810012c6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012c9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012cc:	01 d0                	add    %edx,%eax
810012ce:	8b 50 04             	mov    0x4(%eax),%edx
810012d1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012d7:	01 c8                	add    %ecx,%eax
810012d9:	83 ca 01             	or     $0x1,%edx
810012dc:	89 50 04             	mov    %edx,0x4(%eax)
810012df:	83 ec 0c             	sub    $0xc,%esp
810012e2:	ff 75 08             	push   0x8(%ebp)
810012e5:	e8 31 09 00 00       	call   81001c1b <__malloc_unlock>
810012ea:	83 c4 10             	add    $0x10,%esp
810012ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f0:	83 c0 08             	add    $0x8,%eax
810012f3:	e9 14 07 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810012f8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012fc:	e9 46 01 00 00       	jmp    81001447 <_malloc_r+0x258>
81001301:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001304:	c1 e8 09             	shr    $0x9,%eax
81001307:	85 c0                	test   %eax,%eax
81001309:	75 08                	jne    81001313 <_malloc_r+0x124>
8100130b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130e:	c1 e8 03             	shr    $0x3,%eax
81001311:	eb 77                	jmp    8100138a <_malloc_r+0x19b>
81001313:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001316:	c1 e8 09             	shr    $0x9,%eax
81001319:	83 f8 04             	cmp    $0x4,%eax
8100131c:	77 0b                	ja     81001329 <_malloc_r+0x13a>
8100131e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001321:	c1 e8 06             	shr    $0x6,%eax
81001324:	83 c0 38             	add    $0x38,%eax
81001327:	eb 61                	jmp    8100138a <_malloc_r+0x19b>
81001329:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100132c:	c1 e8 09             	shr    $0x9,%eax
8100132f:	83 f8 14             	cmp    $0x14,%eax
81001332:	77 0b                	ja     8100133f <_malloc_r+0x150>
81001334:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001337:	c1 e8 09             	shr    $0x9,%eax
8100133a:	83 c0 5b             	add    $0x5b,%eax
8100133d:	eb 4b                	jmp    8100138a <_malloc_r+0x19b>
8100133f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001342:	c1 e8 09             	shr    $0x9,%eax
81001345:	83 f8 54             	cmp    $0x54,%eax
81001348:	77 0b                	ja     81001355 <_malloc_r+0x166>
8100134a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100134d:	c1 e8 0c             	shr    $0xc,%eax
81001350:	83 c0 6e             	add    $0x6e,%eax
81001353:	eb 35                	jmp    8100138a <_malloc_r+0x19b>
81001355:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001358:	c1 e8 09             	shr    $0x9,%eax
8100135b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001360:	77 0b                	ja     8100136d <_malloc_r+0x17e>
81001362:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001365:	c1 e8 0f             	shr    $0xf,%eax
81001368:	83 c0 77             	add    $0x77,%eax
8100136b:	eb 1d                	jmp    8100138a <_malloc_r+0x19b>
8100136d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001370:	c1 e8 09             	shr    $0x9,%eax
81001373:	3d 54 05 00 00       	cmp    $0x554,%eax
81001378:	77 0b                	ja     81001385 <_malloc_r+0x196>
8100137a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100137d:	c1 e8 12             	shr    $0x12,%eax
81001380:	83 c0 7c             	add    $0x7c,%eax
81001383:	eb 05                	jmp    8100138a <_malloc_r+0x19b>
81001385:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100138a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100138d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001390:	83 c0 01             	add    $0x1,%eax
81001393:	01 c0                	add    %eax,%eax
81001395:	c1 e0 02             	shl    $0x2,%eax
81001398:	05 80 4f 00 81       	add    $0x81004f80,%eax
8100139d:	83 e8 08             	sub    $0x8,%eax
810013a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013a6:	8b 40 0c             	mov    0xc(%eax),%eax
810013a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013ac:	e9 86 00 00 00       	jmp    81001437 <_malloc_r+0x248>
810013b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013b4:	8b 40 04             	mov    0x4(%eax),%eax
810013b7:	83 e0 fc             	and    $0xfffffffc,%eax
810013ba:	89 45 cc             	mov    %eax,-0x34(%ebp)
810013bd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013c0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810013c3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013c6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810013ca:	7e 06                	jle    810013d2 <_malloc_r+0x1e3>
810013cc:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013d0:	eb 71                	jmp    81001443 <_malloc_r+0x254>
810013d2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013d6:	78 56                	js     8100142e <_malloc_r+0x23f>
810013d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013db:	8b 40 0c             	mov    0xc(%eax),%eax
810013de:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e4:	8b 40 08             	mov    0x8(%eax),%eax
810013e7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013ea:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013ed:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013f0:	89 50 0c             	mov    %edx,0xc(%eax)
810013f3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013f6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013f9:	89 50 08             	mov    %edx,0x8(%eax)
810013fc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013ff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001402:	01 d0                	add    %edx,%eax
81001404:	8b 50 04             	mov    0x4(%eax),%edx
81001407:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100140a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100140d:	01 c8                	add    %ecx,%eax
8100140f:	83 ca 01             	or     $0x1,%edx
81001412:	89 50 04             	mov    %edx,0x4(%eax)
81001415:	83 ec 0c             	sub    $0xc,%esp
81001418:	ff 75 08             	push   0x8(%ebp)
8100141b:	e8 fb 07 00 00       	call   81001c1b <__malloc_unlock>
81001420:	83 c4 10             	add    $0x10,%esp
81001423:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001426:	83 c0 08             	add    $0x8,%eax
81001429:	e9 de 05 00 00       	jmp    81001a0c <_malloc_r+0x81d>
8100142e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001431:	8b 40 0c             	mov    0xc(%eax),%eax
81001434:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001437:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100143d:	0f 85 6e ff ff ff    	jne    810013b1 <_malloc_r+0x1c2>
81001443:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001447:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
8100144c:	8b 40 08             	mov    0x8(%eax),%eax
8100144f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001452:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
81001457:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100145a:	0f 84 9c 02 00 00    	je     810016fc <_malloc_r+0x50d>
81001460:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001463:	8b 40 04             	mov    0x4(%eax),%eax
81001466:	83 e0 fc             	and    $0xfffffffc,%eax
81001469:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100146c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100146f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001472:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001475:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001479:	7e 7a                	jle    810014f5 <_malloc_r+0x306>
8100147b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100147e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001481:	01 d0                	add    %edx,%eax
81001483:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001486:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001489:	83 c8 01             	or     $0x1,%eax
8100148c:	89 c2                	mov    %eax,%edx
8100148e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001491:	89 50 04             	mov    %edx,0x4(%eax)
81001494:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
81001499:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100149c:	89 50 0c             	mov    %edx,0xc(%eax)
8100149f:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
810014a4:	8b 40 0c             	mov    0xc(%eax),%eax
810014a7:	89 42 08             	mov    %eax,0x8(%edx)
810014aa:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
810014af:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014b2:	89 50 0c             	mov    %edx,0xc(%eax)
810014b5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014b8:	8b 50 0c             	mov    0xc(%eax),%edx
810014bb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014be:	89 50 08             	mov    %edx,0x8(%eax)
810014c1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014c4:	83 c8 01             	or     $0x1,%eax
810014c7:	89 c2                	mov    %eax,%edx
810014c9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014cc:	89 50 04             	mov    %edx,0x4(%eax)
810014cf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810014d5:	01 c2                	add    %eax,%edx
810014d7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014da:	89 02                	mov    %eax,(%edx)
810014dc:	83 ec 0c             	sub    $0xc,%esp
810014df:	ff 75 08             	push   0x8(%ebp)
810014e2:	e8 34 07 00 00       	call   81001c1b <__malloc_unlock>
810014e7:	83 c4 10             	add    $0x10,%esp
810014ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ed:	83 c0 08             	add    $0x8,%eax
810014f0:	e9 17 05 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810014f5:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
810014fa:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
810014ff:	89 50 0c             	mov    %edx,0xc(%eax)
81001502:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81001507:	8b 40 0c             	mov    0xc(%eax),%eax
8100150a:	89 42 08             	mov    %eax,0x8(%edx)
8100150d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001511:	78 32                	js     81001545 <_malloc_r+0x356>
81001513:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001516:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001519:	01 d0                	add    %edx,%eax
8100151b:	8b 50 04             	mov    0x4(%eax),%edx
8100151e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001521:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001524:	01 c8                	add    %ecx,%eax
81001526:	83 ca 01             	or     $0x1,%edx
81001529:	89 50 04             	mov    %edx,0x4(%eax)
8100152c:	83 ec 0c             	sub    $0xc,%esp
8100152f:	ff 75 08             	push   0x8(%ebp)
81001532:	e8 e4 06 00 00       	call   81001c1b <__malloc_unlock>
81001537:	83 c4 10             	add    $0x10,%esp
8100153a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100153d:	83 c0 08             	add    $0x8,%eax
81001540:	e9 c7 04 00 00       	jmp    81001a0c <_malloc_r+0x81d>
81001545:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100154c:	77 7f                	ja     810015cd <_malloc_r+0x3de>
8100154e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001551:	c1 e8 03             	shr    $0x3,%eax
81001554:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001557:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100155c:	8b 58 04             	mov    0x4(%eax),%ebx
8100155f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001562:	8d 50 03             	lea    0x3(%eax),%edx
81001565:	85 c0                	test   %eax,%eax
81001567:	0f 48 c2             	cmovs  %edx,%eax
8100156a:	c1 f8 02             	sar    $0x2,%eax
8100156d:	ba 01 00 00 00       	mov    $0x1,%edx
81001572:	89 c1                	mov    %eax,%ecx
81001574:	d3 e2                	shl    %cl,%edx
81001576:	89 d0                	mov    %edx,%eax
81001578:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
8100157d:	09 d8                	or     %ebx,%eax
8100157f:	89 42 04             	mov    %eax,0x4(%edx)
81001582:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001585:	83 c0 01             	add    $0x1,%eax
81001588:	01 c0                	add    %eax,%eax
8100158a:	c1 e0 02             	shl    $0x2,%eax
8100158d:	05 80 4f 00 81       	add    $0x81004f80,%eax
81001592:	83 e8 08             	sub    $0x8,%eax
81001595:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001598:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100159b:	8b 40 08             	mov    0x8(%eax),%eax
8100159e:	89 45 dc             	mov    %eax,-0x24(%ebp)
810015a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015a4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015a7:	89 50 0c             	mov    %edx,0xc(%eax)
810015aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015ad:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015b0:	89 50 08             	mov    %edx,0x8(%eax)
810015b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015b9:	89 50 08             	mov    %edx,0x8(%eax)
810015bc:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015bf:	8b 50 08             	mov    0x8(%eax),%edx
810015c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015c5:	89 50 0c             	mov    %edx,0xc(%eax)
810015c8:	e9 2f 01 00 00       	jmp    810016fc <_malloc_r+0x50d>
810015cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d0:	c1 e8 09             	shr    $0x9,%eax
810015d3:	85 c0                	test   %eax,%eax
810015d5:	75 08                	jne    810015df <_malloc_r+0x3f0>
810015d7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015da:	c1 e8 03             	shr    $0x3,%eax
810015dd:	eb 77                	jmp    81001656 <_malloc_r+0x467>
810015df:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e2:	c1 e8 09             	shr    $0x9,%eax
810015e5:	83 f8 04             	cmp    $0x4,%eax
810015e8:	77 0b                	ja     810015f5 <_malloc_r+0x406>
810015ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ed:	c1 e8 06             	shr    $0x6,%eax
810015f0:	83 c0 38             	add    $0x38,%eax
810015f3:	eb 61                	jmp    81001656 <_malloc_r+0x467>
810015f5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f8:	c1 e8 09             	shr    $0x9,%eax
810015fb:	83 f8 14             	cmp    $0x14,%eax
810015fe:	77 0b                	ja     8100160b <_malloc_r+0x41c>
81001600:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001603:	c1 e8 09             	shr    $0x9,%eax
81001606:	83 c0 5b             	add    $0x5b,%eax
81001609:	eb 4b                	jmp    81001656 <_malloc_r+0x467>
8100160b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100160e:	c1 e8 09             	shr    $0x9,%eax
81001611:	83 f8 54             	cmp    $0x54,%eax
81001614:	77 0b                	ja     81001621 <_malloc_r+0x432>
81001616:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001619:	c1 e8 0c             	shr    $0xc,%eax
8100161c:	83 c0 6e             	add    $0x6e,%eax
8100161f:	eb 35                	jmp    81001656 <_malloc_r+0x467>
81001621:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001624:	c1 e8 09             	shr    $0x9,%eax
81001627:	3d 54 01 00 00       	cmp    $0x154,%eax
8100162c:	77 0b                	ja     81001639 <_malloc_r+0x44a>
8100162e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001631:	c1 e8 0f             	shr    $0xf,%eax
81001634:	83 c0 77             	add    $0x77,%eax
81001637:	eb 1d                	jmp    81001656 <_malloc_r+0x467>
81001639:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100163c:	c1 e8 09             	shr    $0x9,%eax
8100163f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001644:	77 0b                	ja     81001651 <_malloc_r+0x462>
81001646:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001649:	c1 e8 12             	shr    $0x12,%eax
8100164c:	83 c0 7c             	add    $0x7c,%eax
8100164f:	eb 05                	jmp    81001656 <_malloc_r+0x467>
81001651:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001656:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001659:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100165c:	83 c0 01             	add    $0x1,%eax
8100165f:	01 c0                	add    %eax,%eax
81001661:	c1 e0 02             	shl    $0x2,%eax
81001664:	05 80 4f 00 81       	add    $0x81004f80,%eax
81001669:	83 e8 08             	sub    $0x8,%eax
8100166c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100166f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001672:	8b 40 08             	mov    0x8(%eax),%eax
81001675:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001678:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100167b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100167e:	75 36                	jne    810016b6 <_malloc_r+0x4c7>
81001680:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001685:	8b 58 04             	mov    0x4(%eax),%ebx
81001688:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100168b:	8d 50 03             	lea    0x3(%eax),%edx
8100168e:	85 c0                	test   %eax,%eax
81001690:	0f 48 c2             	cmovs  %edx,%eax
81001693:	c1 f8 02             	sar    $0x2,%eax
81001696:	ba 01 00 00 00       	mov    $0x1,%edx
8100169b:	89 c1                	mov    %eax,%ecx
8100169d:	d3 e2                	shl    %cl,%edx
8100169f:	89 d0                	mov    %edx,%eax
810016a1:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
810016a6:	09 d8                	or     %ebx,%eax
810016a8:	89 42 04             	mov    %eax,0x4(%edx)
810016ab:	eb 28                	jmp    810016d5 <_malloc_r+0x4e6>
810016ad:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b0:	8b 40 08             	mov    0x8(%eax),%eax
810016b3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b9:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810016bc:	74 0e                	je     810016cc <_malloc_r+0x4dd>
810016be:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016c1:	8b 40 04             	mov    0x4(%eax),%eax
810016c4:	83 e0 fc             	and    $0xfffffffc,%eax
810016c7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810016ca:	72 e1                	jb     810016ad <_malloc_r+0x4be>
810016cc:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016cf:	8b 40 0c             	mov    0xc(%eax),%eax
810016d2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016d8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016db:	89 50 0c             	mov    %edx,0xc(%eax)
810016de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016e1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016e4:	89 50 08             	mov    %edx,0x8(%eax)
810016e7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016ea:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016ed:	89 50 08             	mov    %edx,0x8(%eax)
810016f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016f3:	8b 50 08             	mov    0x8(%eax),%edx
810016f6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016f9:	89 50 0c             	mov    %edx,0xc(%eax)
810016fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016ff:	8d 50 03             	lea    0x3(%eax),%edx
81001702:	85 c0                	test   %eax,%eax
81001704:	0f 48 c2             	cmovs  %edx,%eax
81001707:	c1 f8 02             	sar    $0x2,%eax
8100170a:	ba 01 00 00 00       	mov    $0x1,%edx
8100170f:	89 c1                	mov    %eax,%ecx
81001711:	d3 e2                	shl    %cl,%edx
81001713:	89 d0                	mov    %edx,%eax
81001715:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001718:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100171d:	8b 40 04             	mov    0x4(%eax),%eax
81001720:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001723:	0f 87 13 02 00 00    	ja     8100193c <_malloc_r+0x74d>
81001729:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100172e:	8b 40 04             	mov    0x4(%eax),%eax
81001731:	23 45 e4             	and    -0x1c(%ebp),%eax
81001734:	85 c0                	test   %eax,%eax
81001736:	75 27                	jne    8100175f <_malloc_r+0x570>
81001738:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100173b:	83 e0 fc             	and    $0xfffffffc,%eax
8100173e:	83 c0 04             	add    $0x4,%eax
81001741:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001744:	d1 65 e4             	shll   -0x1c(%ebp)
81001747:	eb 07                	jmp    81001750 <_malloc_r+0x561>
81001749:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100174d:	d1 65 e4             	shll   -0x1c(%ebp)
81001750:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001755:	8b 40 04             	mov    0x4(%eax),%eax
81001758:	23 45 e4             	and    -0x1c(%ebp),%eax
8100175b:	85 c0                	test   %eax,%eax
8100175d:	74 ea                	je     81001749 <_malloc_r+0x55a>
8100175f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001762:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001765:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001768:	83 c0 01             	add    $0x1,%eax
8100176b:	01 c0                	add    %eax,%eax
8100176d:	c1 e0 02             	shl    $0x2,%eax
81001770:	05 80 4f 00 81       	add    $0x81004f80,%eax
81001775:	83 e8 08             	sub    $0x8,%eax
81001778:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100177b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100177e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001781:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001784:	8b 40 0c             	mov    0xc(%eax),%eax
81001787:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100178a:	e9 22 01 00 00       	jmp    810018b1 <_malloc_r+0x6c2>
8100178f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001792:	8b 40 04             	mov    0x4(%eax),%eax
81001795:	83 e0 fc             	and    $0xfffffffc,%eax
81001798:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100179b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100179e:	2b 45 d0             	sub    -0x30(%ebp),%eax
810017a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017a4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810017a8:	0f 8e 9e 00 00 00    	jle    8100184c <_malloc_r+0x65d>
810017ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017b1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017b4:	01 d0                	add    %edx,%eax
810017b6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810017b9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810017bc:	83 c8 01             	or     $0x1,%eax
810017bf:	89 c2                	mov    %eax,%edx
810017c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017c4:	89 50 04             	mov    %edx,0x4(%eax)
810017c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ca:	8b 40 0c             	mov    0xc(%eax),%eax
810017cd:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017d3:	8b 40 08             	mov    0x8(%eax),%eax
810017d6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017dc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810017df:	89 50 0c             	mov    %edx,0xc(%eax)
810017e2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017e8:	89 50 08             	mov    %edx,0x8(%eax)
810017eb:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
810017f0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017f3:	89 50 0c             	mov    %edx,0xc(%eax)
810017f6:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
810017fb:	8b 40 0c             	mov    0xc(%eax),%eax
810017fe:	89 42 08             	mov    %eax,0x8(%edx)
81001801:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81001806:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001809:	89 50 0c             	mov    %edx,0xc(%eax)
8100180c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100180f:	8b 50 0c             	mov    0xc(%eax),%edx
81001812:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001815:	89 50 08             	mov    %edx,0x8(%eax)
81001818:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100181b:	83 c8 01             	or     $0x1,%eax
8100181e:	89 c2                	mov    %eax,%edx
81001820:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001823:	89 50 04             	mov    %edx,0x4(%eax)
81001826:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001829:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100182c:	01 c2                	add    %eax,%edx
8100182e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001831:	89 02                	mov    %eax,(%edx)
81001833:	83 ec 0c             	sub    $0xc,%esp
81001836:	ff 75 08             	push   0x8(%ebp)
81001839:	e8 dd 03 00 00       	call   81001c1b <__malloc_unlock>
8100183e:	83 c4 10             	add    $0x10,%esp
81001841:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001844:	83 c0 08             	add    $0x8,%eax
81001847:	e9 c0 01 00 00       	jmp    81001a0c <_malloc_r+0x81d>
8100184c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001850:	78 56                	js     810018a8 <_malloc_r+0x6b9>
81001852:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001855:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001858:	01 d0                	add    %edx,%eax
8100185a:	8b 50 04             	mov    0x4(%eax),%edx
8100185d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001860:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001863:	01 c8                	add    %ecx,%eax
81001865:	83 ca 01             	or     $0x1,%edx
81001868:	89 50 04             	mov    %edx,0x4(%eax)
8100186b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186e:	8b 40 0c             	mov    0xc(%eax),%eax
81001871:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001874:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001877:	8b 40 08             	mov    0x8(%eax),%eax
8100187a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100187d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001880:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001883:	89 50 0c             	mov    %edx,0xc(%eax)
81001886:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001889:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100188c:	89 50 08             	mov    %edx,0x8(%eax)
8100188f:	83 ec 0c             	sub    $0xc,%esp
81001892:	ff 75 08             	push   0x8(%ebp)
81001895:	e8 81 03 00 00       	call   81001c1b <__malloc_unlock>
8100189a:	83 c4 10             	add    $0x10,%esp
8100189d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a0:	83 c0 08             	add    $0x8,%eax
810018a3:	e9 64 01 00 00       	jmp    81001a0c <_malloc_r+0x81d>
810018a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ab:	8b 40 0c             	mov    0xc(%eax),%eax
810018ae:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b4:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810018b7:	0f 85 d2 fe ff ff    	jne    8100178f <_malloc_r+0x5a0>
810018bd:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810018c1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810018c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810018c8:	83 e0 03             	and    $0x3,%eax
810018cb:	85 c0                	test   %eax,%eax
810018cd:	0f 85 ae fe ff ff    	jne    81001781 <_malloc_r+0x592>
810018d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810018d6:	83 e0 03             	and    $0x3,%eax
810018d9:	85 c0                	test   %eax,%eax
810018db:	75 19                	jne    810018f6 <_malloc_r+0x707>
810018dd:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
810018e2:	8b 48 04             	mov    0x4(%eax),%ecx
810018e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018e8:	f7 d0                	not    %eax
810018ea:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
810018ef:	21 c8                	and    %ecx,%eax
810018f1:	89 42 04             	mov    %eax,0x4(%edx)
810018f4:	eb 13                	jmp    81001909 <_malloc_r+0x71a>
810018f6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018fa:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018fe:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001901:	8b 40 08             	mov    0x8(%eax),%eax
81001904:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81001907:	74 ca                	je     810018d3 <_malloc_r+0x6e4>
81001909:	d1 65 e4             	shll   -0x1c(%ebp)
8100190c:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001911:	8b 40 04             	mov    0x4(%eax),%eax
81001914:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001917:	77 23                	ja     8100193c <_malloc_r+0x74d>
81001919:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100191d:	74 1d                	je     8100193c <_malloc_r+0x74d>
8100191f:	eb 07                	jmp    81001928 <_malloc_r+0x739>
81001921:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001925:	d1 65 e4             	shll   -0x1c(%ebp)
81001928:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100192d:	8b 40 04             	mov    0x4(%eax),%eax
81001930:	23 45 e4             	and    -0x1c(%ebp),%eax
81001933:	85 c0                	test   %eax,%eax
81001935:	74 ea                	je     81001921 <_malloc_r+0x732>
81001937:	e9 23 fe ff ff       	jmp    8100175f <_malloc_r+0x570>
8100193c:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001941:	8b 40 08             	mov    0x8(%eax),%eax
81001944:	8b 40 04             	mov    0x4(%eax),%eax
81001947:	83 e0 fc             	and    $0xfffffffc,%eax
8100194a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100194d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001950:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001955:	8b 40 08             	mov    0x8(%eax),%eax
81001958:	8b 40 04             	mov    0x4(%eax),%eax
8100195b:	83 e0 fc             	and    $0xfffffffc,%eax
8100195e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001961:	77 06                	ja     81001969 <_malloc_r+0x77a>
81001963:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001967:	7f 53                	jg     810019bc <_malloc_r+0x7cd>
81001969:	83 ec 08             	sub    $0x8,%esp
8100196c:	ff 75 d0             	push   -0x30(%ebp)
8100196f:	ff 75 08             	push   0x8(%ebp)
81001972:	e8 e5 f5 ff ff       	call   81000f5c <malloc_extend_top>
81001977:	83 c4 10             	add    $0x10,%esp
8100197a:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100197f:	8b 40 08             	mov    0x8(%eax),%eax
81001982:	8b 40 04             	mov    0x4(%eax),%eax
81001985:	83 e0 fc             	and    $0xfffffffc,%eax
81001988:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100198b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100198e:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81001993:	8b 40 08             	mov    0x8(%eax),%eax
81001996:	8b 40 04             	mov    0x4(%eax),%eax
81001999:	83 e0 fc             	and    $0xfffffffc,%eax
8100199c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100199f:	77 06                	ja     810019a7 <_malloc_r+0x7b8>
810019a1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810019a5:	7f 15                	jg     810019bc <_malloc_r+0x7cd>
810019a7:	83 ec 0c             	sub    $0xc,%esp
810019aa:	ff 75 08             	push   0x8(%ebp)
810019ad:	e8 69 02 00 00       	call   81001c1b <__malloc_unlock>
810019b2:	83 c4 10             	add    $0x10,%esp
810019b5:	b8 00 00 00 00       	mov    $0x0,%eax
810019ba:	eb 50                	jmp    81001a0c <_malloc_r+0x81d>
810019bc:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
810019c1:	8b 40 08             	mov    0x8(%eax),%eax
810019c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019ca:	83 c8 01             	or     $0x1,%eax
810019cd:	89 c2                	mov    %eax,%edx
810019cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019d2:	89 50 04             	mov    %edx,0x4(%eax)
810019d5:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
810019da:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810019dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019e0:	01 c8                	add    %ecx,%eax
810019e2:	89 42 08             	mov    %eax,0x8(%edx)
810019e5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019e8:	83 c8 01             	or     $0x1,%eax
810019eb:	89 c2                	mov    %eax,%edx
810019ed:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
810019f2:	8b 40 08             	mov    0x8(%eax),%eax
810019f5:	89 50 04             	mov    %edx,0x4(%eax)
810019f8:	83 ec 0c             	sub    $0xc,%esp
810019fb:	ff 75 08             	push   0x8(%ebp)
810019fe:	e8 18 02 00 00       	call   81001c1b <__malloc_unlock>
81001a03:	83 c4 10             	add    $0x10,%esp
81001a06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a09:	83 c0 08             	add    $0x8,%eax
81001a0c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001a0f:	c9                   	leave  
81001a10:	c3                   	ret    
81001a11:	66 90                	xchg   %ax,%ax
81001a13:	66 90                	xchg   %ax,%ax
81001a15:	66 90                	xchg   %ax,%ax
81001a17:	66 90                	xchg   %ax,%ax
81001a19:	66 90                	xchg   %ax,%ax
81001a1b:	66 90                	xchg   %ax,%ax
81001a1d:	66 90                	xchg   %ax,%ax
81001a1f:	90                   	nop

81001a20 <memchr>:
81001a20:	55                   	push   %ebp
81001a21:	89 e5                	mov    %esp,%ebp
81001a23:	57                   	push   %edi
81001a24:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a28:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a2b:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a2e:	31 d2                	xor    %edx,%edx
81001a30:	85 c9                	test   %ecx,%ecx
81001a32:	74 79                	je     81001aad <L20>
81001a34:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a3a:	74 28                	je     81001a64 <L5>
81001a3c:	3a 07                	cmp    (%edi),%al
81001a3e:	74 6a                	je     81001aaa <L15>
81001a40:	47                   	inc    %edi
81001a41:	49                   	dec    %ecx
81001a42:	74 69                	je     81001aad <L20>
81001a44:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a4a:	74 18                	je     81001a64 <L5>
81001a4c:	3a 07                	cmp    (%edi),%al
81001a4e:	74 5a                	je     81001aaa <L15>
81001a50:	47                   	inc    %edi
81001a51:	49                   	dec    %ecx
81001a52:	74 59                	je     81001aad <L20>
81001a54:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a5a:	74 08                	je     81001a64 <L5>
81001a5c:	3a 07                	cmp    (%edi),%al
81001a5e:	74 4a                	je     81001aaa <L15>
81001a60:	47                   	inc    %edi
81001a61:	49                   	dec    %ecx
81001a62:	74 49                	je     81001aad <L20>

81001a64 <L5>:
81001a64:	88 c4                	mov    %al,%ah
81001a66:	89 c2                	mov    %eax,%edx
81001a68:	c1 e2 10             	shl    $0x10,%edx
81001a6b:	09 d0                	or     %edx,%eax
81001a6d:	53                   	push   %ebx
81001a6e:	66 90                	xchg   %ax,%ax

81001a70 <L8>:
81001a70:	83 e9 04             	sub    $0x4,%ecx
81001a73:	72 1c                	jb     81001a91 <L9>
81001a75:	8b 17                	mov    (%edi),%edx
81001a77:	83 c7 04             	add    $0x4,%edi
81001a7a:	31 c2                	xor    %eax,%edx
81001a7c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a82:	f7 d2                	not    %edx
81001a84:	21 d3                	and    %edx,%ebx
81001a86:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a8c:	74 e2                	je     81001a70 <L8>
81001a8e:	83 ef 04             	sub    $0x4,%edi

81001a91 <L9>:
81001a91:	5b                   	pop    %ebx
81001a92:	31 d2                	xor    %edx,%edx
81001a94:	83 c1 04             	add    $0x4,%ecx
81001a97:	74 14                	je     81001aad <L20>
81001a99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001aa0 <L10>:
81001aa0:	3a 07                	cmp    (%edi),%al
81001aa2:	74 06                	je     81001aaa <L15>
81001aa4:	47                   	inc    %edi
81001aa5:	49                   	dec    %ecx
81001aa6:	75 f8                	jne    81001aa0 <L10>
81001aa8:	31 ff                	xor    %edi,%edi

81001aaa <L15>:
81001aaa:	4a                   	dec    %edx
81001aab:	21 fa                	and    %edi,%edx

81001aad <L20>:
81001aad:	89 d0                	mov    %edx,%eax
81001aaf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001ab2:	5f                   	pop    %edi
81001ab3:	c9                   	leave  
81001ab4:	c3                   	ret    
81001ab5:	66 90                	xchg   %ax,%ax
81001ab7:	90                   	nop

81001ab8 <memcpy>:
81001ab8:	55                   	push   %ebp
81001ab9:	89 e5                	mov    %esp,%ebp
81001abb:	56                   	push   %esi
81001abc:	57                   	push   %edi
81001abd:	53                   	push   %ebx
81001abe:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ac1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001ac4:	8b 75 0c             	mov    0xc(%ebp),%esi
81001ac7:	fc                   	cld    
81001ac8:	83 f9 08             	cmp    $0x8,%ecx
81001acb:	76 26                	jbe    81001af3 <memcpy+0x3b>
81001acd:	89 fa                	mov    %edi,%edx
81001acf:	89 cb                	mov    %ecx,%ebx
81001ad1:	83 e2 03             	and    $0x3,%edx
81001ad4:	74 10                	je     81001ae6 <memcpy+0x2e>
81001ad6:	b9 04 00 00 00       	mov    $0x4,%ecx
81001adb:	29 d1                	sub    %edx,%ecx
81001add:	83 e1 03             	and    $0x3,%ecx
81001ae0:	29 cb                	sub    %ecx,%ebx
81001ae2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ae4:	89 d9                	mov    %ebx,%ecx
81001ae6:	c1 e9 02             	shr    $0x2,%ecx
81001ae9:	8d 76 00             	lea    0x0(%esi),%esi
81001aec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001aee:	89 d9                	mov    %ebx,%ecx
81001af0:	83 e1 03             	and    $0x3,%ecx
81001af3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001af5:	8b 45 08             	mov    0x8(%ebp),%eax
81001af8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001afb:	5b                   	pop    %ebx
81001afc:	5f                   	pop    %edi
81001afd:	5e                   	pop    %esi
81001afe:	c9                   	leave  
81001aff:	c3                   	ret    

81001b00 <memmove>:
81001b00:	55                   	push   %ebp
81001b01:	89 e5                	mov    %esp,%ebp
81001b03:	56                   	push   %esi
81001b04:	57                   	push   %edi
81001b05:	53                   	push   %ebx
81001b06:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b09:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b0c:	8b 75 0c             	mov    0xc(%ebp),%esi
81001b0f:	fc                   	cld    
81001b10:	39 fe                	cmp    %edi,%esi
81001b12:	73 43                	jae    81001b57 <memmove+0x57>
81001b14:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001b18:	39 df                	cmp    %ebx,%edi
81001b1a:	77 3b                	ja     81001b57 <memmove+0x57>
81001b1c:	01 ce                	add    %ecx,%esi
81001b1e:	01 cf                	add    %ecx,%edi
81001b20:	fd                   	std    
81001b21:	83 f9 08             	cmp    $0x8,%ecx
81001b24:	76 2b                	jbe    81001b51 <memmove+0x51>
81001b26:	89 fa                	mov    %edi,%edx
81001b28:	89 cb                	mov    %ecx,%ebx
81001b2a:	83 e2 03             	and    $0x3,%edx
81001b2d:	74 0c                	je     81001b3b <memmove+0x3b>
81001b2f:	89 d1                	mov    %edx,%ecx
81001b31:	4e                   	dec    %esi
81001b32:	4f                   	dec    %edi
81001b33:	29 cb                	sub    %ecx,%ebx
81001b35:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b37:	89 d9                	mov    %ebx,%ecx
81001b39:	46                   	inc    %esi
81001b3a:	47                   	inc    %edi
81001b3b:	c1 e9 02             	shr    $0x2,%ecx
81001b3e:	83 ee 04             	sub    $0x4,%esi
81001b41:	83 ef 04             	sub    $0x4,%edi
81001b44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b46:	83 c6 04             	add    $0x4,%esi
81001b49:	83 c7 04             	add    $0x4,%edi
81001b4c:	89 d9                	mov    %ebx,%ecx
81001b4e:	83 e1 03             	and    $0x3,%ecx
81001b51:	4e                   	dec    %esi
81001b52:	4f                   	dec    %edi
81001b53:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b55:	eb 2a                	jmp    81001b81 <memmove+0x81>
81001b57:	83 f9 08             	cmp    $0x8,%ecx
81001b5a:	76 23                	jbe    81001b7f <memmove+0x7f>
81001b5c:	89 fa                	mov    %edi,%edx
81001b5e:	89 cb                	mov    %ecx,%ebx
81001b60:	83 e2 03             	and    $0x3,%edx
81001b63:	74 10                	je     81001b75 <memmove+0x75>
81001b65:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b6a:	29 d1                	sub    %edx,%ecx
81001b6c:	83 e1 03             	and    $0x3,%ecx
81001b6f:	29 cb                	sub    %ecx,%ebx
81001b71:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b73:	89 d9                	mov    %ebx,%ecx
81001b75:	c1 e9 02             	shr    $0x2,%ecx
81001b78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b7a:	89 d9                	mov    %ebx,%ecx
81001b7c:	83 e1 03             	and    $0x3,%ecx
81001b7f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b81:	8b 45 08             	mov    0x8(%ebp),%eax
81001b84:	fc                   	cld    
81001b85:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b88:	5b                   	pop    %ebx
81001b89:	5f                   	pop    %edi
81001b8a:	5e                   	pop    %esi
81001b8b:	c9                   	leave  
81001b8c:	c3                   	ret    

81001b8d <memset>:
81001b8d:	55                   	push   %ebp
81001b8e:	89 e5                	mov    %esp,%ebp
81001b90:	57                   	push   %edi
81001b91:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b94:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b98:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b9b:	fc                   	cld    
81001b9c:	83 f9 10             	cmp    $0x10,%ecx
81001b9f:	76 69                	jbe    81001c0a <memset+0x7d>
81001ba1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ba7:	74 4c                	je     81001bf5 <memset+0x68>
81001ba9:	88 07                	mov    %al,(%edi)
81001bab:	47                   	inc    %edi
81001bac:	49                   	dec    %ecx
81001bad:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bb3:	74 40                	je     81001bf5 <memset+0x68>
81001bb5:	88 07                	mov    %al,(%edi)
81001bb7:	47                   	inc    %edi
81001bb8:	49                   	dec    %ecx
81001bb9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bbf:	74 34                	je     81001bf5 <memset+0x68>
81001bc1:	88 07                	mov    %al,(%edi)
81001bc3:	47                   	inc    %edi
81001bc4:	49                   	dec    %ecx
81001bc5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bcb:	74 28                	je     81001bf5 <memset+0x68>
81001bcd:	88 07                	mov    %al,(%edi)
81001bcf:	47                   	inc    %edi
81001bd0:	49                   	dec    %ecx
81001bd1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bd7:	74 1c                	je     81001bf5 <memset+0x68>
81001bd9:	88 07                	mov    %al,(%edi)
81001bdb:	47                   	inc    %edi
81001bdc:	49                   	dec    %ecx
81001bdd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001be3:	74 10                	je     81001bf5 <memset+0x68>
81001be5:	88 07                	mov    %al,(%edi)
81001be7:	47                   	inc    %edi
81001be8:	49                   	dec    %ecx
81001be9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001bef:	74 04                	je     81001bf5 <memset+0x68>
81001bf1:	88 07                	mov    %al,(%edi)
81001bf3:	47                   	inc    %edi
81001bf4:	49                   	dec    %ecx
81001bf5:	88 c4                	mov    %al,%ah
81001bf7:	89 c2                	mov    %eax,%edx
81001bf9:	c1 e2 10             	shl    $0x10,%edx
81001bfc:	09 d0                	or     %edx,%eax
81001bfe:	89 ca                	mov    %ecx,%edx
81001c00:	c1 e9 02             	shr    $0x2,%ecx
81001c03:	83 e2 03             	and    $0x3,%edx
81001c06:	f3 ab                	rep stos %eax,%es:(%edi)
81001c08:	89 d1                	mov    %edx,%ecx
81001c0a:	f3 aa                	rep stos %al,%es:(%edi)
81001c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81001c0f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001c12:	5f                   	pop    %edi
81001c13:	c9                   	leave  
81001c14:	c3                   	ret    

81001c15 <__malloc_lock>:
81001c15:	55                   	push   %ebp
81001c16:	89 e5                	mov    %esp,%ebp
81001c18:	90                   	nop
81001c19:	5d                   	pop    %ebp
81001c1a:	c3                   	ret    

81001c1b <__malloc_unlock>:
81001c1b:	55                   	push   %ebp
81001c1c:	89 e5                	mov    %esp,%ebp
81001c1e:	90                   	nop
81001c1f:	5d                   	pop    %ebp
81001c20:	c3                   	ret    

81001c21 <__sprint_r>:
81001c21:	55                   	push   %ebp
81001c22:	89 e5                	mov    %esp,%ebp
81001c24:	56                   	push   %esi
81001c25:	53                   	push   %ebx
81001c26:	83 ec 10             	sub    $0x10,%esp
81001c29:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001c2c:	be 00 00 00 00       	mov    $0x0,%esi
81001c31:	8b 43 08             	mov    0x8(%ebx),%eax
81001c34:	85 c0                	test   %eax,%eax
81001c36:	75 11                	jne    81001c49 <__sprint_r+0x28>
81001c38:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001c3f:	b8 00 00 00 00       	mov    $0x0,%eax
81001c44:	e9 ad 00 00 00       	jmp    81001cf6 <__sprint_r+0xd5>
81001c49:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c4c:	8b 40 64             	mov    0x64(%eax),%eax
81001c4f:	25 00 20 00 00       	and    $0x2000,%eax
81001c54:	85 c0                	test   %eax,%eax
81001c56:	74 7a                	je     81001cd2 <__sprint_r+0xb1>
81001c58:	8b 03                	mov    (%ebx),%eax
81001c5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c5d:	eb 6a                	jmp    81001cc9 <__sprint_r+0xa8>
81001c5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c62:	8b 00                	mov    (%eax),%eax
81001c64:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c6a:	8b 40 04             	mov    0x4(%eax),%eax
81001c6d:	c1 e8 02             	shr    $0x2,%eax
81001c70:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c73:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001c7a:	eb 33                	jmp    81001caf <__sprint_r+0x8e>
81001c7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c89:	01 d0                	add    %edx,%eax
81001c8b:	8b 00                	mov    (%eax),%eax
81001c8d:	83 ec 04             	sub    $0x4,%esp
81001c90:	ff 75 0c             	push   0xc(%ebp)
81001c93:	50                   	push   %eax
81001c94:	ff 75 08             	push   0x8(%ebp)
81001c97:	e8 0b 1d 00 00       	call   810039a7 <_fputwc_r>
81001c9c:	83 c4 10             	add    $0x10,%esp
81001c9f:	83 f8 ff             	cmp    $0xffffffff,%eax
81001ca2:	75 07                	jne    81001cab <__sprint_r+0x8a>
81001ca4:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001ca9:	eb 3b                	jmp    81001ce6 <__sprint_r+0xc5>
81001cab:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001caf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cb2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001cb5:	7c c5                	jl     81001c7c <__sprint_r+0x5b>
81001cb7:	8b 43 08             	mov    0x8(%ebx),%eax
81001cba:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cbd:	c1 e2 02             	shl    $0x2,%edx
81001cc0:	29 d0                	sub    %edx,%eax
81001cc2:	89 43 08             	mov    %eax,0x8(%ebx)
81001cc5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001cc9:	8b 43 08             	mov    0x8(%ebx),%eax
81001ccc:	85 c0                	test   %eax,%eax
81001cce:	75 8f                	jne    81001c5f <__sprint_r+0x3e>
81001cd0:	eb 14                	jmp    81001ce6 <__sprint_r+0xc5>
81001cd2:	83 ec 04             	sub    $0x4,%esp
81001cd5:	53                   	push   %ebx
81001cd6:	ff 75 0c             	push   0xc(%ebp)
81001cd9:	ff 75 08             	push   0x8(%ebp)
81001cdc:	e8 0a ed ff ff       	call   810009eb <__sfvwrite_r>
81001ce1:	83 c4 10             	add    $0x10,%esp
81001ce4:	89 c6                	mov    %eax,%esi
81001ce6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001ced:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001cf4:	89 f0                	mov    %esi,%eax
81001cf6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001cf9:	5b                   	pop    %ebx
81001cfa:	5e                   	pop    %esi
81001cfb:	5d                   	pop    %ebp
81001cfc:	c3                   	ret    

81001cfd <__sfputc_r>:
81001cfd:	55                   	push   %ebp
81001cfe:	89 e5                	mov    %esp,%ebp
81001d00:	83 ec 08             	sub    $0x8,%esp
81001d03:	8b 45 10             	mov    0x10(%ebp),%eax
81001d06:	8b 40 08             	mov    0x8(%eax),%eax
81001d09:	8d 50 ff             	lea    -0x1(%eax),%edx
81001d0c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d0f:	89 50 08             	mov    %edx,0x8(%eax)
81001d12:	8b 45 10             	mov    0x10(%ebp),%eax
81001d15:	8b 40 08             	mov    0x8(%eax),%eax
81001d18:	85 c0                	test   %eax,%eax
81001d1a:	79 17                	jns    81001d33 <__sfputc_r+0x36>
81001d1c:	8b 45 10             	mov    0x10(%ebp),%eax
81001d1f:	8b 50 08             	mov    0x8(%eax),%edx
81001d22:	8b 45 10             	mov    0x10(%ebp),%eax
81001d25:	8b 40 18             	mov    0x18(%eax),%eax
81001d28:	39 c2                	cmp    %eax,%edx
81001d2a:	7c 21                	jl     81001d4d <__sfputc_r+0x50>
81001d2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d2f:	3c 0a                	cmp    $0xa,%al
81001d31:	74 1a                	je     81001d4d <__sfputc_r+0x50>
81001d33:	8b 45 10             	mov    0x10(%ebp),%eax
81001d36:	8b 00                	mov    (%eax),%eax
81001d38:	8d 48 01             	lea    0x1(%eax),%ecx
81001d3b:	8b 55 10             	mov    0x10(%ebp),%edx
81001d3e:	89 0a                	mov    %ecx,(%edx)
81001d40:	8b 55 0c             	mov    0xc(%ebp),%edx
81001d43:	88 10                	mov    %dl,(%eax)
81001d45:	0f b6 00             	movzbl (%eax),%eax
81001d48:	0f b6 c0             	movzbl %al,%eax
81001d4b:	eb 14                	jmp    81001d61 <__sfputc_r+0x64>
81001d4d:	83 ec 04             	sub    $0x4,%esp
81001d50:	ff 75 10             	push   0x10(%ebp)
81001d53:	ff 75 0c             	push   0xc(%ebp)
81001d56:	ff 75 08             	push   0x8(%ebp)
81001d59:	e8 44 14 00 00       	call   810031a2 <__swbuf_r>
81001d5e:	83 c4 10             	add    $0x10,%esp
81001d61:	c9                   	leave  
81001d62:	c3                   	ret    

81001d63 <__sfputs_r>:
81001d63:	55                   	push   %ebp
81001d64:	89 e5                	mov    %esp,%ebp
81001d66:	53                   	push   %ebx
81001d67:	83 ec 14             	sub    $0x14,%esp
81001d6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d6d:	8b 40 64             	mov    0x64(%eax),%eax
81001d70:	25 00 20 00 00       	and    $0x2000,%eax
81001d75:	85 c0                	test   %eax,%eax
81001d77:	74 4c                	je     81001dc5 <__sfputs_r+0x62>
81001d79:	8b 45 10             	mov    0x10(%ebp),%eax
81001d7c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d7f:	bb 00 00 00 00       	mov    $0x0,%ebx
81001d84:	eb 31                	jmp    81001db7 <__sfputs_r+0x54>
81001d86:	89 d8                	mov    %ebx,%eax
81001d88:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d92:	01 d0                	add    %edx,%eax
81001d94:	8b 00                	mov    (%eax),%eax
81001d96:	83 ec 04             	sub    $0x4,%esp
81001d99:	ff 75 0c             	push   0xc(%ebp)
81001d9c:	50                   	push   %eax
81001d9d:	ff 75 08             	push   0x8(%ebp)
81001da0:	e8 02 1c 00 00       	call   810039a7 <_fputwc_r>
81001da5:	83 c4 10             	add    $0x10,%esp
81001da8:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dab:	75 07                	jne    81001db4 <__sfputs_r+0x51>
81001dad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001db2:	eb 52                	jmp    81001e06 <__sfputs_r+0xa3>
81001db4:	83 c3 01             	add    $0x1,%ebx
81001db7:	8b 45 14             	mov    0x14(%ebp),%eax
81001dba:	c1 e8 02             	shr    $0x2,%eax
81001dbd:	89 da                	mov    %ebx,%edx
81001dbf:	39 d0                	cmp    %edx,%eax
81001dc1:	77 c3                	ja     81001d86 <__sfputs_r+0x23>
81001dc3:	eb 3c                	jmp    81001e01 <__sfputs_r+0x9e>
81001dc5:	bb 00 00 00 00       	mov    $0x0,%ebx
81001dca:	eb 2e                	jmp    81001dfa <__sfputs_r+0x97>
81001dcc:	89 da                	mov    %ebx,%edx
81001dce:	8b 45 10             	mov    0x10(%ebp),%eax
81001dd1:	01 d0                	add    %edx,%eax
81001dd3:	0f b6 00             	movzbl (%eax),%eax
81001dd6:	0f be c0             	movsbl %al,%eax
81001dd9:	83 ec 04             	sub    $0x4,%esp
81001ddc:	ff 75 0c             	push   0xc(%ebp)
81001ddf:	50                   	push   %eax
81001de0:	ff 75 08             	push   0x8(%ebp)
81001de3:	e8 15 ff ff ff       	call   81001cfd <__sfputc_r>
81001de8:	83 c4 10             	add    $0x10,%esp
81001deb:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dee:	75 07                	jne    81001df7 <__sfputs_r+0x94>
81001df0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001df5:	eb 0f                	jmp    81001e06 <__sfputs_r+0xa3>
81001df7:	83 c3 01             	add    $0x1,%ebx
81001dfa:	89 d8                	mov    %ebx,%eax
81001dfc:	39 45 14             	cmp    %eax,0x14(%ebp)
81001dff:	77 cb                	ja     81001dcc <__sfputs_r+0x69>
81001e01:	b8 00 00 00 00       	mov    $0x0,%eax
81001e06:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001e09:	c9                   	leave  
81001e0a:	c3                   	ret    

81001e0b <vfiprintf>:
81001e0b:	55                   	push   %ebp
81001e0c:	89 e5                	mov    %esp,%ebp
81001e0e:	83 ec 18             	sub    $0x18,%esp
81001e11:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81001e16:	ff 75 10             	push   0x10(%ebp)
81001e19:	ff 75 0c             	push   0xc(%ebp)
81001e1c:	ff 75 08             	push   0x8(%ebp)
81001e1f:	50                   	push   %eax
81001e20:	e8 0b 00 00 00       	call   81001e30 <_vfiprintf_r>
81001e25:	83 c4 10             	add    $0x10,%esp
81001e28:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e2e:	c9                   	leave  
81001e2f:	c3                   	ret    

81001e30 <_vfiprintf_r>:
81001e30:	55                   	push   %ebp
81001e31:	89 e5                	mov    %esp,%ebp
81001e33:	57                   	push   %edi
81001e34:	56                   	push   %esi
81001e35:	53                   	push   %ebx
81001e36:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001e3c:	c7 45 e4 63 1d 00 81 	movl   $0x81001d63,-0x1c(%ebp)
81001e43:	8b 45 08             	mov    0x8(%ebp),%eax
81001e46:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e49:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001e4d:	74 18                	je     81001e67 <_vfiprintf_r+0x37>
81001e4f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e52:	8b 40 38             	mov    0x38(%eax),%eax
81001e55:	85 c0                	test   %eax,%eax
81001e57:	75 0e                	jne    81001e67 <_vfiprintf_r+0x37>
81001e59:	83 ec 0c             	sub    $0xc,%esp
81001e5c:	ff 75 e0             	push   -0x20(%ebp)
81001e5f:	e8 7a ea ff ff       	call   810008de <__sinit>
81001e64:	83 c4 10             	add    $0x10,%esp
81001e67:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e6a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001e6e:	98                   	cwtl   
81001e6f:	83 e0 08             	and    $0x8,%eax
81001e72:	85 c0                	test   %eax,%eax
81001e74:	74 0a                	je     81001e80 <_vfiprintf_r+0x50>
81001e76:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e79:	8b 40 10             	mov    0x10(%eax),%eax
81001e7c:	85 c0                	test   %eax,%eax
81001e7e:	75 1f                	jne    81001e9f <_vfiprintf_r+0x6f>
81001e80:	83 ec 08             	sub    $0x8,%esp
81001e83:	ff 75 0c             	push   0xc(%ebp)
81001e86:	ff 75 08             	push   0x8(%ebp)
81001e89:	e8 8d 14 00 00       	call   8100331b <__swsetup_r>
81001e8e:	83 c4 10             	add    $0x10,%esp
81001e91:	85 c0                	test   %eax,%eax
81001e93:	74 0a                	je     81001e9f <_vfiprintf_r+0x6f>
81001e95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e9a:	e9 df 02 00 00       	jmp    8100217e <_vfiprintf_r+0x34e>
81001e9f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001ea2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001ea9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001ead:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001eb1:	8b 45 14             	mov    0x14(%ebp),%eax
81001eb4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001eba:	89 de                	mov    %ebx,%esi
81001ebc:	eb 03                	jmp    81001ec1 <_vfiprintf_r+0x91>
81001ebe:	83 c3 01             	add    $0x1,%ebx
81001ec1:	0f b6 03             	movzbl (%ebx),%eax
81001ec4:	84 c0                	test   %al,%al
81001ec6:	74 07                	je     81001ecf <_vfiprintf_r+0x9f>
81001ec8:	0f b6 03             	movzbl (%ebx),%eax
81001ecb:	3c 25                	cmp    $0x25,%al
81001ecd:	75 ef                	jne    81001ebe <_vfiprintf_r+0x8e>
81001ecf:	89 d8                	mov    %ebx,%eax
81001ed1:	29 f0                	sub    %esi,%eax
81001ed3:	85 c0                	test   %eax,%eax
81001ed5:	74 2b                	je     81001f02 <_vfiprintf_r+0xd2>
81001ed7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001edd:	50                   	push   %eax
81001ede:	56                   	push   %esi
81001edf:	ff 75 0c             	push   0xc(%ebp)
81001ee2:	ff 75 08             	push   0x8(%ebp)
81001ee5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001ee8:	ff d0                	call   *%eax
81001eea:	83 c4 10             	add    $0x10,%esp
81001eed:	83 f8 ff             	cmp    $0xffffffff,%eax
81001ef0:	0f 84 68 02 00 00    	je     8100215e <_vfiprintf_r+0x32e>
81001ef6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001ef9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001eff:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001f02:	0f b6 03             	movzbl (%ebx),%eax
81001f05:	84 c0                	test   %al,%al
81001f07:	0f 84 54 02 00 00    	je     81002161 <_vfiprintf_r+0x331>
81001f0d:	83 c3 01             	add    $0x1,%ebx
81001f10:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001f17:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001f1e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001f25:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001f2c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001f30:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001f37:	c7 45 dc c8 47 00 81 	movl   $0x810047c8,-0x24(%ebp)
81001f3e:	eb 1b                	jmp    81001f5b <_vfiprintf_r+0x12b>
81001f40:	8b 55 80             	mov    -0x80(%ebp),%edx
81001f43:	89 f0                	mov    %esi,%eax
81001f45:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001f48:	be 01 00 00 00       	mov    $0x1,%esi
81001f4d:	89 c1                	mov    %eax,%ecx
81001f4f:	d3 e6                	shl    %cl,%esi
81001f51:	89 f0                	mov    %esi,%eax
81001f53:	09 d0                	or     %edx,%eax
81001f55:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f58:	83 c3 01             	add    $0x1,%ebx
81001f5b:	0f b6 03             	movzbl (%ebx),%eax
81001f5e:	0f be c0             	movsbl %al,%eax
81001f61:	83 ec 04             	sub    $0x4,%esp
81001f64:	6a 05                	push   $0x5
81001f66:	50                   	push   %eax
81001f67:	ff 75 dc             	push   -0x24(%ebp)
81001f6a:	e8 b1 fa ff ff       	call   81001a20 <memchr>
81001f6f:	83 c4 10             	add    $0x10,%esp
81001f72:	89 c6                	mov    %eax,%esi
81001f74:	85 f6                	test   %esi,%esi
81001f76:	75 c8                	jne    81001f40 <_vfiprintf_r+0x110>
81001f78:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f7b:	83 e0 10             	and    $0x10,%eax
81001f7e:	85 c0                	test   %eax,%eax
81001f80:	74 04                	je     81001f86 <_vfiprintf_r+0x156>
81001f82:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001f86:	8b 45 80             	mov    -0x80(%ebp),%eax
81001f89:	83 e0 08             	and    $0x8,%eax
81001f8c:	85 c0                	test   %eax,%eax
81001f8e:	74 04                	je     81001f94 <_vfiprintf_r+0x164>
81001f90:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001f94:	0f b6 03             	movzbl (%ebx),%eax
81001f97:	3c 2a                	cmp    $0x2a,%al
81001f99:	75 50                	jne    81001feb <_vfiprintf_r+0x1bb>
81001f9b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001fa1:	8d 50 04             	lea    0x4(%eax),%edx
81001fa4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001faa:	8b 00                	mov    (%eax),%eax
81001fac:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001faf:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001fb2:	85 c0                	test   %eax,%eax
81001fb4:	79 11                	jns    81001fc7 <_vfiprintf_r+0x197>
81001fb6:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001fb9:	f7 d8                	neg    %eax
81001fbb:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fbe:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fc1:	83 c8 02             	or     $0x2,%eax
81001fc4:	89 45 80             	mov    %eax,-0x80(%ebp)
81001fc7:	83 c3 01             	add    $0x1,%ebx
81001fca:	eb 2d                	jmp    81001ff9 <_vfiprintf_r+0x1c9>
81001fcc:	8b 55 8c             	mov    -0x74(%ebp),%edx
81001fcf:	89 d0                	mov    %edx,%eax
81001fd1:	c1 e0 02             	shl    $0x2,%eax
81001fd4:	01 d0                	add    %edx,%eax
81001fd6:	01 c0                	add    %eax,%eax
81001fd8:	89 c2                	mov    %eax,%edx
81001fda:	0f b6 03             	movzbl (%ebx),%eax
81001fdd:	0f be c0             	movsbl %al,%eax
81001fe0:	83 e8 30             	sub    $0x30,%eax
81001fe3:	01 d0                	add    %edx,%eax
81001fe5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001fe8:	83 c3 01             	add    $0x1,%ebx
81001feb:	0f b6 03             	movzbl (%ebx),%eax
81001fee:	0f be c0             	movsbl %al,%eax
81001ff1:	83 e8 30             	sub    $0x30,%eax
81001ff4:	83 f8 09             	cmp    $0x9,%eax
81001ff7:	76 d3                	jbe    81001fcc <_vfiprintf_r+0x19c>
81001ff9:	0f b6 03             	movzbl (%ebx),%eax
81001ffc:	3c 2e                	cmp    $0x2e,%al
81001ffe:	75 67                	jne    81002067 <_vfiprintf_r+0x237>
81002000:	83 c3 01             	add    $0x1,%ebx
81002003:	0f b6 03             	movzbl (%ebx),%eax
81002006:	3c 2a                	cmp    $0x2a,%al
81002008:	75 27                	jne    81002031 <_vfiprintf_r+0x201>
8100200a:	83 c3 01             	add    $0x1,%ebx
8100200d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81002013:	8d 50 04             	lea    0x4(%eax),%edx
81002016:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100201c:	8b 00                	mov    (%eax),%eax
8100201e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002021:	8b 45 84             	mov    -0x7c(%ebp),%eax
81002024:	85 c0                	test   %eax,%eax
81002026:	79 3f                	jns    81002067 <_vfiprintf_r+0x237>
81002028:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100202f:	eb 36                	jmp    81002067 <_vfiprintf_r+0x237>
81002031:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81002038:	eb 1f                	jmp    81002059 <_vfiprintf_r+0x229>
8100203a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100203d:	89 d0                	mov    %edx,%eax
8100203f:	c1 e0 02             	shl    $0x2,%eax
81002042:	01 d0                	add    %edx,%eax
81002044:	01 c0                	add    %eax,%eax
81002046:	89 c2                	mov    %eax,%edx
81002048:	0f b6 03             	movzbl (%ebx),%eax
8100204b:	0f be c0             	movsbl %al,%eax
8100204e:	83 e8 30             	sub    $0x30,%eax
81002051:	01 d0                	add    %edx,%eax
81002053:	89 45 84             	mov    %eax,-0x7c(%ebp)
81002056:	83 c3 01             	add    $0x1,%ebx
81002059:	0f b6 03             	movzbl (%ebx),%eax
8100205c:	0f be c0             	movsbl %al,%eax
8100205f:	83 e8 30             	sub    $0x30,%eax
81002062:	83 f8 09             	cmp    $0x9,%eax
81002065:	76 d3                	jbe    8100203a <_vfiprintf_r+0x20a>
81002067:	c7 45 dc ce 47 00 81 	movl   $0x810047ce,-0x24(%ebp)
8100206e:	0f b6 03             	movzbl (%ebx),%eax
81002071:	0f be c0             	movsbl %al,%eax
81002074:	83 ec 04             	sub    $0x4,%esp
81002077:	6a 03                	push   $0x3
81002079:	50                   	push   %eax
8100207a:	ff 75 dc             	push   -0x24(%ebp)
8100207d:	e8 9e f9 ff ff       	call   81001a20 <memchr>
81002082:	83 c4 10             	add    $0x10,%esp
81002085:	89 c6                	mov    %eax,%esi
81002087:	85 f6                	test   %esi,%esi
81002089:	74 1b                	je     810020a6 <_vfiprintf_r+0x276>
8100208b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100208e:	89 f0                	mov    %esi,%eax
81002090:	2b 45 dc             	sub    -0x24(%ebp),%eax
81002093:	be 40 00 00 00       	mov    $0x40,%esi
81002098:	89 c1                	mov    %eax,%ecx
8100209a:	d3 e6                	shl    %cl,%esi
8100209c:	89 f0                	mov    %esi,%eax
8100209e:	09 d0                	or     %edx,%eax
810020a0:	89 45 80             	mov    %eax,-0x80(%ebp)
810020a3:	83 c3 01             	add    $0x1,%ebx
810020a6:	89 d8                	mov    %ebx,%eax
810020a8:	8d 58 01             	lea    0x1(%eax),%ebx
810020ab:	0f b6 00             	movzbl (%eax),%eax
810020ae:	88 45 98             	mov    %al,-0x68(%ebp)
810020b1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810020b5:	0f be c0             	movsbl %al,%eax
810020b8:	83 ec 04             	sub    $0x4,%esp
810020bb:	6a 06                	push   $0x6
810020bd:	50                   	push   %eax
810020be:	68 d2 47 00 81       	push   $0x810047d2
810020c3:	e8 58 f9 ff ff       	call   81001a20 <memchr>
810020c8:	83 c4 10             	add    $0x10,%esp
810020cb:	89 c6                	mov    %eax,%esi
810020cd:	85 f6                	test   %esi,%esi
810020cf:	74 5a                	je     8100212b <_vfiprintf_r+0x2fb>
810020d1:	b8 00 00 00 00       	mov    $0x0,%eax
810020d6:	85 c0                	test   %eax,%eax
810020d8:	75 2e                	jne    81002108 <_vfiprintf_r+0x2d8>
810020da:	8b 45 80             	mov    -0x80(%ebp),%eax
810020dd:	25 00 01 00 00       	and    $0x100,%eax
810020e2:	85 c0                	test   %eax,%eax
810020e4:	74 11                	je     810020f7 <_vfiprintf_r+0x2c7>
810020e6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020ec:	83 c0 0c             	add    $0xc,%eax
810020ef:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810020f5:	eb 55                	jmp    8100214c <_vfiprintf_r+0x31c>
810020f7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810020fd:	83 c0 08             	add    $0x8,%eax
81002100:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81002106:	eb 44                	jmp    8100214c <_vfiprintf_r+0x31c>
81002108:	83 ec 0c             	sub    $0xc,%esp
8100210b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002111:	50                   	push   %eax
81002112:	ff 75 e4             	push   -0x1c(%ebp)
81002115:	ff 75 0c             	push   0xc(%ebp)
81002118:	8d 45 80             	lea    -0x80(%ebp),%eax
8100211b:	50                   	push   %eax
8100211c:	ff 75 08             	push   0x8(%ebp)
8100211f:	e8 dc de ff 7e       	call   0 <main-0x81000000>
81002124:	83 c4 20             	add    $0x20,%esp
81002127:	89 c7                	mov    %eax,%edi
81002129:	eb 21                	jmp    8100214c <_vfiprintf_r+0x31c>
8100212b:	83 ec 0c             	sub    $0xc,%esp
8100212e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002134:	50                   	push   %eax
81002135:	ff 75 e4             	push   -0x1c(%ebp)
81002138:	ff 75 0c             	push   0xc(%ebp)
8100213b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100213e:	50                   	push   %eax
8100213f:	ff 75 08             	push   0x8(%ebp)
81002142:	e8 da 01 00 00       	call   81002321 <_printf_i>
81002147:	83 c4 20             	add    $0x20,%esp
8100214a:	89 c7                	mov    %eax,%edi
8100214c:	83 ff ff             	cmp    $0xffffffff,%edi
8100214f:	74 13                	je     81002164 <_vfiprintf_r+0x334>
81002151:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002154:	01 f8                	add    %edi,%eax
81002156:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002159:	e9 5c fd ff ff       	jmp    81001eba <_vfiprintf_r+0x8a>
8100215e:	90                   	nop
8100215f:	eb 04                	jmp    81002165 <_vfiprintf_r+0x335>
81002161:	90                   	nop
81002162:	eb 01                	jmp    81002165 <_vfiprintf_r+0x335>
81002164:	90                   	nop
81002165:	8b 45 0c             	mov    0xc(%ebp),%eax
81002168:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100216c:	98                   	cwtl   
8100216d:	83 e0 40             	and    $0x40,%eax
81002170:	85 c0                	test   %eax,%eax
81002172:	75 05                	jne    81002179 <_vfiprintf_r+0x349>
81002174:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002177:	eb 05                	jmp    8100217e <_vfiprintf_r+0x34e>
81002179:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100217e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002181:	5b                   	pop    %ebx
81002182:	5e                   	pop    %esi
81002183:	5f                   	pop    %edi
81002184:	5d                   	pop    %ebp
81002185:	c3                   	ret    

81002186 <_printf_common>:
81002186:	55                   	push   %ebp
81002187:	89 e5                	mov    %esp,%ebp
81002189:	83 ec 18             	sub    $0x18,%esp
8100218c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100218f:	8b 50 10             	mov    0x10(%eax),%edx
81002192:	8b 45 0c             	mov    0xc(%ebp),%eax
81002195:	8b 40 08             	mov    0x8(%eax),%eax
81002198:	39 c2                	cmp    %eax,%edx
8100219a:	0f 4c d0             	cmovl  %eax,%edx
8100219d:	8b 45 10             	mov    0x10(%ebp),%eax
810021a0:	89 10                	mov    %edx,(%eax)
810021a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810021a5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810021a9:	84 c0                	test   %al,%al
810021ab:	74 0d                	je     810021ba <_printf_common+0x34>
810021ad:	8b 45 10             	mov    0x10(%ebp),%eax
810021b0:	8b 00                	mov    (%eax),%eax
810021b2:	8d 50 01             	lea    0x1(%eax),%edx
810021b5:	8b 45 10             	mov    0x10(%ebp),%eax
810021b8:	89 10                	mov    %edx,(%eax)
810021ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810021bd:	8b 00                	mov    (%eax),%eax
810021bf:	83 e0 20             	and    $0x20,%eax
810021c2:	85 c0                	test   %eax,%eax
810021c4:	74 0d                	je     810021d3 <_printf_common+0x4d>
810021c6:	8b 45 10             	mov    0x10(%ebp),%eax
810021c9:	8b 00                	mov    (%eax),%eax
810021cb:	8d 50 02             	lea    0x2(%eax),%edx
810021ce:	8b 45 10             	mov    0x10(%ebp),%eax
810021d1:	89 10                	mov    %edx,(%eax)
810021d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810021d6:	8b 00                	mov    (%eax),%eax
810021d8:	83 e0 06             	and    $0x6,%eax
810021db:	85 c0                	test   %eax,%eax
810021dd:	75 41                	jne    81002220 <_printf_common+0x9a>
810021df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810021e6:	eb 24                	jmp    8100220c <_printf_common+0x86>
810021e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810021eb:	83 c0 19             	add    $0x19,%eax
810021ee:	6a 01                	push   $0x1
810021f0:	50                   	push   %eax
810021f1:	ff 75 14             	push   0x14(%ebp)
810021f4:	ff 75 08             	push   0x8(%ebp)
810021f7:	8b 45 18             	mov    0x18(%ebp),%eax
810021fa:	ff d0                	call   *%eax
810021fc:	83 c4 10             	add    $0x10,%esp
810021ff:	83 f8 ff             	cmp    $0xffffffff,%eax
81002202:	0f 84 0b 01 00 00    	je     81002313 <_printf_common+0x18d>
81002208:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100220c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100220f:	8b 50 0c             	mov    0xc(%eax),%edx
81002212:	8b 45 10             	mov    0x10(%ebp),%eax
81002215:	8b 08                	mov    (%eax),%ecx
81002217:	89 d0                	mov    %edx,%eax
81002219:	29 c8                	sub    %ecx,%eax
8100221b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100221e:	7c c8                	jl     810021e8 <_printf_common+0x62>
81002220:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002227:	8b 45 0c             	mov    0xc(%ebp),%eax
8100222a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100222e:	84 c0                	test   %al,%al
81002230:	74 04                	je     81002236 <_printf_common+0xb0>
81002232:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002236:	8b 45 0c             	mov    0xc(%ebp),%eax
81002239:	8b 00                	mov    (%eax),%eax
8100223b:	83 e0 20             	and    $0x20,%eax
8100223e:	85 c0                	test   %eax,%eax
81002240:	74 28                	je     8100226a <_printf_common+0xe4>
81002242:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002245:	8d 50 01             	lea    0x1(%eax),%edx
81002248:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100224b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100224e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002253:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002256:	8d 50 01             	lea    0x1(%eax),%edx
81002259:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100225c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100225f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002263:	8b 55 0c             	mov    0xc(%ebp),%edx
81002266:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100226a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100226d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002270:	83 c2 43             	add    $0x43,%edx
81002273:	50                   	push   %eax
81002274:	52                   	push   %edx
81002275:	ff 75 14             	push   0x14(%ebp)
81002278:	ff 75 08             	push   0x8(%ebp)
8100227b:	8b 45 18             	mov    0x18(%ebp),%eax
8100227e:	ff d0                	call   *%eax
81002280:	83 c4 10             	add    $0x10,%esp
81002283:	83 f8 ff             	cmp    $0xffffffff,%eax
81002286:	0f 84 8a 00 00 00    	je     81002316 <_printf_common+0x190>
8100228c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100228f:	8b 50 0c             	mov    0xc(%eax),%edx
81002292:	8b 45 10             	mov    0x10(%ebp),%eax
81002295:	8b 08                	mov    (%eax),%ecx
81002297:	89 d0                	mov    %edx,%eax
81002299:	29 c8                	sub    %ecx,%eax
8100229b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100229e:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a1:	8b 00                	mov    (%eax),%eax
810022a3:	83 e0 06             	and    $0x6,%eax
810022a6:	83 f8 04             	cmp    $0x4,%eax
810022a9:	75 06                	jne    810022b1 <_printf_common+0x12b>
810022ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810022af:	79 07                	jns    810022b8 <_printf_common+0x132>
810022b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810022b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022bb:	8b 50 08             	mov    0x8(%eax),%edx
810022be:	8b 45 0c             	mov    0xc(%ebp),%eax
810022c1:	8b 40 10             	mov    0x10(%eax),%eax
810022c4:	39 c2                	cmp    %eax,%edx
810022c6:	7e 13                	jle    810022db <_printf_common+0x155>
810022c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810022cb:	8b 50 08             	mov    0x8(%eax),%edx
810022ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810022d1:	8b 48 10             	mov    0x10(%eax),%ecx
810022d4:	89 d0                	mov    %edx,%eax
810022d6:	29 c8                	sub    %ecx,%eax
810022d8:	01 45 f4             	add    %eax,-0xc(%ebp)
810022db:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810022e2:	eb 20                	jmp    81002304 <_printf_common+0x17e>
810022e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e7:	83 c0 1a             	add    $0x1a,%eax
810022ea:	6a 01                	push   $0x1
810022ec:	50                   	push   %eax
810022ed:	ff 75 14             	push   0x14(%ebp)
810022f0:	ff 75 08             	push   0x8(%ebp)
810022f3:	8b 45 18             	mov    0x18(%ebp),%eax
810022f6:	ff d0                	call   *%eax
810022f8:	83 c4 10             	add    $0x10,%esp
810022fb:	83 f8 ff             	cmp    $0xffffffff,%eax
810022fe:	74 19                	je     81002319 <_printf_common+0x193>
81002300:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81002304:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002307:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100230a:	7c d8                	jl     810022e4 <_printf_common+0x15e>
8100230c:	b8 00 00 00 00       	mov    $0x0,%eax
81002311:	eb 0c                	jmp    8100231f <_printf_common+0x199>
81002313:	90                   	nop
81002314:	eb 04                	jmp    8100231a <_printf_common+0x194>
81002316:	90                   	nop
81002317:	eb 01                	jmp    8100231a <_printf_common+0x194>
81002319:	90                   	nop
8100231a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100231f:	c9                   	leave  
81002320:	c3                   	ret    

81002321 <_printf_i>:
81002321:	55                   	push   %ebp
81002322:	89 e5                	mov    %esp,%ebp
81002324:	53                   	push   %ebx
81002325:	83 ec 24             	sub    $0x24,%esp
81002328:	8b 45 0c             	mov    0xc(%ebp),%eax
8100232b:	83 c0 1b             	add    $0x1b,%eax
8100232e:	83 c0 28             	add    $0x28,%eax
81002331:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002334:	c7 45 e8 dc 47 00 81 	movl   $0x810047dc,-0x18(%ebp)
8100233b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100233e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002342:	0f be c0             	movsbl %al,%eax
81002345:	85 c0                	test   %eax,%eax
81002347:	0f 84 00 03 00 00    	je     8100264d <_printf_i+0x32c>
8100234d:	85 c0                	test   %eax,%eax
8100234f:	0f 88 52 03 00 00    	js     810026a7 <_printf_i+0x386>
81002355:	83 f8 78             	cmp    $0x78,%eax
81002358:	0f 8f 49 03 00 00    	jg     810026a7 <_printf_i+0x386>
8100235e:	83 f8 58             	cmp    $0x58,%eax
81002361:	0f 8c 40 03 00 00    	jl     810026a7 <_printf_i+0x386>
81002367:	83 e8 58             	sub    $0x58,%eax
8100236a:	83 f8 20             	cmp    $0x20,%eax
8100236d:	0f 87 34 03 00 00    	ja     810026a7 <_printf_i+0x386>
81002373:	8b 04 85 00 48 00 81 	mov    -0x7effb800(,%eax,4),%eax
8100237a:	ff e0                	jmp    *%eax
8100237c:	8b 45 18             	mov    0x18(%ebp),%eax
8100237f:	8b 00                	mov    (%eax),%eax
81002381:	8d 48 04             	lea    0x4(%eax),%ecx
81002384:	8b 55 18             	mov    0x18(%ebp),%edx
81002387:	89 0a                	mov    %ecx,(%edx)
81002389:	8b 00                	mov    (%eax),%eax
8100238b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100238f:	89 c2                	mov    %eax,%edx
81002391:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002394:	88 10                	mov    %dl,(%eax)
81002396:	8b 45 0c             	mov    0xc(%ebp),%eax
81002399:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023a0:	e9 1c 03 00 00       	jmp    810026c1 <_printf_i+0x3a0>
810023a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810023a8:	8b 00                	mov    (%eax),%eax
810023aa:	25 80 00 00 00       	and    $0x80,%eax
810023af:	85 c0                	test   %eax,%eax
810023b1:	74 11                	je     810023c4 <_printf_i+0xa3>
810023b3:	8b 45 18             	mov    0x18(%ebp),%eax
810023b6:	8b 00                	mov    (%eax),%eax
810023b8:	8d 48 04             	lea    0x4(%eax),%ecx
810023bb:	8b 55 18             	mov    0x18(%ebp),%edx
810023be:	89 0a                	mov    %ecx,(%edx)
810023c0:	8b 00                	mov    (%eax),%eax
810023c2:	eb 2d                	jmp    810023f1 <_printf_i+0xd0>
810023c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810023c7:	8b 00                	mov    (%eax),%eax
810023c9:	83 e0 40             	and    $0x40,%eax
810023cc:	85 c0                	test   %eax,%eax
810023ce:	74 12                	je     810023e2 <_printf_i+0xc1>
810023d0:	8b 45 18             	mov    0x18(%ebp),%eax
810023d3:	8b 00                	mov    (%eax),%eax
810023d5:	8d 48 04             	lea    0x4(%eax),%ecx
810023d8:	8b 55 18             	mov    0x18(%ebp),%edx
810023db:	89 0a                	mov    %ecx,(%edx)
810023dd:	8b 00                	mov    (%eax),%eax
810023df:	98                   	cwtl   
810023e0:	eb 0f                	jmp    810023f1 <_printf_i+0xd0>
810023e2:	8b 45 18             	mov    0x18(%ebp),%eax
810023e5:	8b 00                	mov    (%eax),%eax
810023e7:	8d 48 04             	lea    0x4(%eax),%ecx
810023ea:	8b 55 18             	mov    0x18(%ebp),%edx
810023ed:	89 0a                	mov    %ecx,(%edx)
810023ef:	8b 00                	mov    (%eax),%eax
810023f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023f7:	85 c0                	test   %eax,%eax
810023f9:	79 0a                	jns    81002405 <_printf_i+0xe4>
810023fb:	f7 5d f4             	negl   -0xc(%ebp)
810023fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002401:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81002405:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100240c:	e9 28 01 00 00       	jmp    81002539 <_printf_i+0x218>
81002411:	8b 45 0c             	mov    0xc(%ebp),%eax
81002414:	8b 00                	mov    (%eax),%eax
81002416:	25 80 00 00 00       	and    $0x80,%eax
8100241b:	85 c0                	test   %eax,%eax
8100241d:	74 11                	je     81002430 <_printf_i+0x10f>
8100241f:	8b 45 18             	mov    0x18(%ebp),%eax
81002422:	8b 00                	mov    (%eax),%eax
81002424:	8d 48 04             	lea    0x4(%eax),%ecx
81002427:	8b 55 18             	mov    0x18(%ebp),%edx
8100242a:	89 0a                	mov    %ecx,(%edx)
8100242c:	8b 00                	mov    (%eax),%eax
8100242e:	eb 2f                	jmp    8100245f <_printf_i+0x13e>
81002430:	8b 45 0c             	mov    0xc(%ebp),%eax
81002433:	8b 00                	mov    (%eax),%eax
81002435:	83 e0 40             	and    $0x40,%eax
81002438:	85 c0                	test   %eax,%eax
8100243a:	74 14                	je     81002450 <_printf_i+0x12f>
8100243c:	8b 45 18             	mov    0x18(%ebp),%eax
8100243f:	8b 00                	mov    (%eax),%eax
81002441:	8d 48 04             	lea    0x4(%eax),%ecx
81002444:	8b 55 18             	mov    0x18(%ebp),%edx
81002447:	89 0a                	mov    %ecx,(%edx)
81002449:	8b 00                	mov    (%eax),%eax
8100244b:	0f b7 c0             	movzwl %ax,%eax
8100244e:	eb 0f                	jmp    8100245f <_printf_i+0x13e>
81002450:	8b 45 18             	mov    0x18(%ebp),%eax
81002453:	8b 00                	mov    (%eax),%eax
81002455:	8d 48 04             	lea    0x4(%eax),%ecx
81002458:	8b 55 18             	mov    0x18(%ebp),%edx
8100245b:	89 0a                	mov    %ecx,(%edx)
8100245d:	8b 00                	mov    (%eax),%eax
8100245f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002462:	8b 45 0c             	mov    0xc(%ebp),%eax
81002465:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002469:	3c 6f                	cmp    $0x6f,%al
8100246b:	75 07                	jne    81002474 <_printf_i+0x153>
8100246d:	b8 08 00 00 00       	mov    $0x8,%eax
81002472:	eb 05                	jmp    81002479 <_printf_i+0x158>
81002474:	b8 0a 00 00 00       	mov    $0xa,%eax
81002479:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100247c:	e9 b1 00 00 00       	jmp    81002532 <_printf_i+0x211>
81002481:	8b 45 0c             	mov    0xc(%ebp),%eax
81002484:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002488:	eb 1d                	jmp    810024a7 <_printf_i+0x186>
8100248a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100248d:	8b 00                	mov    (%eax),%eax
8100248f:	83 c8 20             	or     $0x20,%eax
81002492:	89 c2                	mov    %eax,%edx
81002494:	8b 45 0c             	mov    0xc(%ebp),%eax
81002497:	89 10                	mov    %edx,(%eax)
81002499:	8b 45 0c             	mov    0xc(%ebp),%eax
8100249c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810024a0:	c7 45 e8 ed 47 00 81 	movl   $0x810047ed,-0x18(%ebp)
810024a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810024aa:	8b 00                	mov    (%eax),%eax
810024ac:	25 80 00 00 00       	and    $0x80,%eax
810024b1:	85 c0                	test   %eax,%eax
810024b3:	74 11                	je     810024c6 <_printf_i+0x1a5>
810024b5:	8b 45 18             	mov    0x18(%ebp),%eax
810024b8:	8b 00                	mov    (%eax),%eax
810024ba:	8d 48 04             	lea    0x4(%eax),%ecx
810024bd:	8b 55 18             	mov    0x18(%ebp),%edx
810024c0:	89 0a                	mov    %ecx,(%edx)
810024c2:	8b 00                	mov    (%eax),%eax
810024c4:	eb 2f                	jmp    810024f5 <_printf_i+0x1d4>
810024c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810024c9:	8b 00                	mov    (%eax),%eax
810024cb:	83 e0 40             	and    $0x40,%eax
810024ce:	85 c0                	test   %eax,%eax
810024d0:	74 14                	je     810024e6 <_printf_i+0x1c5>
810024d2:	8b 45 18             	mov    0x18(%ebp),%eax
810024d5:	8b 00                	mov    (%eax),%eax
810024d7:	8d 48 04             	lea    0x4(%eax),%ecx
810024da:	8b 55 18             	mov    0x18(%ebp),%edx
810024dd:	89 0a                	mov    %ecx,(%edx)
810024df:	8b 00                	mov    (%eax),%eax
810024e1:	0f b7 c0             	movzwl %ax,%eax
810024e4:	eb 0f                	jmp    810024f5 <_printf_i+0x1d4>
810024e6:	8b 45 18             	mov    0x18(%ebp),%eax
810024e9:	8b 00                	mov    (%eax),%eax
810024eb:	8d 48 04             	lea    0x4(%eax),%ecx
810024ee:	8b 55 18             	mov    0x18(%ebp),%edx
810024f1:	89 0a                	mov    %ecx,(%edx)
810024f3:	8b 00                	mov    (%eax),%eax
810024f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024f8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810024ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002502:	8b 00                	mov    (%eax),%eax
81002504:	83 e0 01             	and    $0x1,%eax
81002507:	85 c0                	test   %eax,%eax
81002509:	74 0f                	je     8100251a <_printf_i+0x1f9>
8100250b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100250e:	8b 00                	mov    (%eax),%eax
81002510:	83 c8 20             	or     $0x20,%eax
81002513:	89 c2                	mov    %eax,%edx
81002515:	8b 45 0c             	mov    0xc(%ebp),%eax
81002518:	89 10                	mov    %edx,(%eax)
8100251a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100251e:	75 11                	jne    81002531 <_printf_i+0x210>
81002520:	8b 45 0c             	mov    0xc(%ebp),%eax
81002523:	8b 00                	mov    (%eax),%eax
81002525:	83 e0 df             	and    $0xffffffdf,%eax
81002528:	89 c2                	mov    %eax,%edx
8100252a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100252d:	89 10                	mov    %edx,(%eax)
8100252f:	eb 01                	jmp    81002532 <_printf_i+0x211>
81002531:	90                   	nop
81002532:	8b 45 0c             	mov    0xc(%ebp),%eax
81002535:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002539:	8b 45 0c             	mov    0xc(%ebp),%eax
8100253c:	8b 50 04             	mov    0x4(%eax),%edx
8100253f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002542:	89 50 08             	mov    %edx,0x8(%eax)
81002545:	8b 45 0c             	mov    0xc(%ebp),%eax
81002548:	8b 40 08             	mov    0x8(%eax),%eax
8100254b:	85 c0                	test   %eax,%eax
8100254d:	78 0f                	js     8100255e <_printf_i+0x23d>
8100254f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002552:	8b 00                	mov    (%eax),%eax
81002554:	83 e0 fb             	and    $0xfffffffb,%eax
81002557:	89 c2                	mov    %eax,%edx
81002559:	8b 45 0c             	mov    0xc(%ebp),%eax
8100255c:	89 10                	mov    %edx,(%eax)
8100255e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002562:	75 0a                	jne    8100256e <_printf_i+0x24d>
81002564:	8b 45 0c             	mov    0xc(%ebp),%eax
81002567:	8b 40 04             	mov    0x4(%eax),%eax
8100256a:	85 c0                	test   %eax,%eax
8100256c:	74 34                	je     810025a2 <_printf_i+0x281>
8100256e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002571:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002574:	ba 00 00 00 00       	mov    $0x0,%edx
81002579:	f7 f1                	div    %ecx
8100257b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100257e:	01 d0                	add    %edx,%eax
81002580:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002584:	0f b6 10             	movzbl (%eax),%edx
81002587:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100258a:	88 10                	mov    %dl,(%eax)
8100258c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100258f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002592:	ba 00 00 00 00       	mov    $0x0,%edx
81002597:	f7 f3                	div    %ebx
81002599:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100259c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810025a0:	75 cc                	jne    8100256e <_printf_i+0x24d>
810025a2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810025a6:	75 26                	jne    810025ce <_printf_i+0x2ad>
810025a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ab:	8b 00                	mov    (%eax),%eax
810025ad:	83 e0 01             	and    $0x1,%eax
810025b0:	85 c0                	test   %eax,%eax
810025b2:	74 1a                	je     810025ce <_printf_i+0x2ad>
810025b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810025b7:	8b 50 04             	mov    0x4(%eax),%edx
810025ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810025bd:	8b 40 10             	mov    0x10(%eax),%eax
810025c0:	39 c2                	cmp    %eax,%edx
810025c2:	7f 0a                	jg     810025ce <_printf_i+0x2ad>
810025c4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810025c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810025cb:	c6 00 30             	movb   $0x30,(%eax)
810025ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810025d1:	83 c0 1b             	add    $0x1b,%eax
810025d4:	83 c0 28             	add    $0x28,%eax
810025d7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810025da:	89 c2                	mov    %eax,%edx
810025dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810025df:	89 50 10             	mov    %edx,0x10(%eax)
810025e2:	e9 e2 00 00 00       	jmp    810026c9 <_printf_i+0x3a8>
810025e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ea:	8b 00                	mov    (%eax),%eax
810025ec:	25 80 00 00 00       	and    $0x80,%eax
810025f1:	85 c0                	test   %eax,%eax
810025f3:	74 19                	je     8100260e <_printf_i+0x2ed>
810025f5:	8b 45 18             	mov    0x18(%ebp),%eax
810025f8:	8b 00                	mov    (%eax),%eax
810025fa:	8d 48 04             	lea    0x4(%eax),%ecx
810025fd:	8b 55 18             	mov    0x18(%ebp),%edx
81002600:	89 0a                	mov    %ecx,(%edx)
81002602:	8b 00                	mov    (%eax),%eax
81002604:	8b 55 0c             	mov    0xc(%ebp),%edx
81002607:	8b 52 14             	mov    0x14(%edx),%edx
8100260a:	89 10                	mov    %edx,(%eax)
8100260c:	eb 3f                	jmp    8100264d <_printf_i+0x32c>
8100260e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002611:	8b 00                	mov    (%eax),%eax
81002613:	83 e0 40             	and    $0x40,%eax
81002616:	85 c0                	test   %eax,%eax
81002618:	74 1c                	je     81002636 <_printf_i+0x315>
8100261a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100261d:	8b 58 14             	mov    0x14(%eax),%ebx
81002620:	8b 45 18             	mov    0x18(%ebp),%eax
81002623:	8b 00                	mov    (%eax),%eax
81002625:	8d 48 04             	lea    0x4(%eax),%ecx
81002628:	8b 55 18             	mov    0x18(%ebp),%edx
8100262b:	89 0a                	mov    %ecx,(%edx)
8100262d:	8b 00                	mov    (%eax),%eax
8100262f:	89 da                	mov    %ebx,%edx
81002631:	66 89 10             	mov    %dx,(%eax)
81002634:	eb 17                	jmp    8100264d <_printf_i+0x32c>
81002636:	8b 45 18             	mov    0x18(%ebp),%eax
81002639:	8b 00                	mov    (%eax),%eax
8100263b:	8d 48 04             	lea    0x4(%eax),%ecx
8100263e:	8b 55 18             	mov    0x18(%ebp),%edx
81002641:	89 0a                	mov    %ecx,(%edx)
81002643:	8b 00                	mov    (%eax),%eax
81002645:	8b 55 0c             	mov    0xc(%ebp),%edx
81002648:	8b 52 14             	mov    0x14(%edx),%edx
8100264b:	89 10                	mov    %edx,(%eax)
8100264d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002650:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002657:	eb 70                	jmp    810026c9 <_printf_i+0x3a8>
81002659:	8b 45 18             	mov    0x18(%ebp),%eax
8100265c:	8b 00                	mov    (%eax),%eax
8100265e:	8d 48 04             	lea    0x4(%eax),%ecx
81002661:	8b 55 18             	mov    0x18(%ebp),%edx
81002664:	89 0a                	mov    %ecx,(%edx)
81002666:	8b 00                	mov    (%eax),%eax
81002668:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100266b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100266e:	8b 40 04             	mov    0x4(%eax),%eax
81002671:	83 ec 04             	sub    $0x4,%esp
81002674:	50                   	push   %eax
81002675:	6a 00                	push   $0x0
81002677:	ff 75 ec             	push   -0x14(%ebp)
8100267a:	e8 a1 f3 ff ff       	call   81001a20 <memchr>
8100267f:	83 c4 10             	add    $0x10,%esp
81002682:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002685:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002689:	74 0e                	je     81002699 <_printf_i+0x378>
8100268b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100268e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002691:	89 c2                	mov    %eax,%edx
81002693:	8b 45 0c             	mov    0xc(%ebp),%eax
81002696:	89 50 04             	mov    %edx,0x4(%eax)
81002699:	8b 45 0c             	mov    0xc(%ebp),%eax
8100269c:	8b 50 04             	mov    0x4(%eax),%edx
8100269f:	8b 45 0c             	mov    0xc(%ebp),%eax
810026a2:	89 50 10             	mov    %edx,0x10(%eax)
810026a5:	eb 1a                	jmp    810026c1 <_printf_i+0x3a0>
810026a7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810026ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ae:	0f b6 50 18          	movzbl 0x18(%eax),%edx
810026b2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026b5:	88 10                	mov    %dl,(%eax)
810026b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810026ba:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810026c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810026c4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810026c8:	90                   	nop
810026c9:	83 ec 0c             	sub    $0xc,%esp
810026cc:	ff 75 14             	push   0x14(%ebp)
810026cf:	ff 75 10             	push   0x10(%ebp)
810026d2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026d5:	50                   	push   %eax
810026d6:	ff 75 0c             	push   0xc(%ebp)
810026d9:	ff 75 08             	push   0x8(%ebp)
810026dc:	e8 a5 fa ff ff       	call   81002186 <_printf_common>
810026e1:	83 c4 20             	add    $0x20,%esp
810026e4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810026e7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810026eb:	74 72                	je     8100275f <_printf_i+0x43e>
810026ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810026f0:	8b 40 10             	mov    0x10(%eax),%eax
810026f3:	50                   	push   %eax
810026f4:	ff 75 ec             	push   -0x14(%ebp)
810026f7:	ff 75 10             	push   0x10(%ebp)
810026fa:	ff 75 08             	push   0x8(%ebp)
810026fd:	8b 45 14             	mov    0x14(%ebp),%eax
81002700:	ff d0                	call   *%eax
81002702:	83 c4 10             	add    $0x10,%esp
81002705:	83 f8 ff             	cmp    $0xffffffff,%eax
81002708:	74 58                	je     81002762 <_printf_i+0x441>
8100270a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100270d:	8b 00                	mov    (%eax),%eax
8100270f:	83 e0 02             	and    $0x2,%eax
81002712:	85 c0                	test   %eax,%eax
81002714:	74 39                	je     8100274f <_printf_i+0x42e>
81002716:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100271d:	eb 20                	jmp    8100273f <_printf_i+0x41e>
8100271f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002722:	83 c0 19             	add    $0x19,%eax
81002725:	6a 01                	push   $0x1
81002727:	50                   	push   %eax
81002728:	ff 75 10             	push   0x10(%ebp)
8100272b:	ff 75 08             	push   0x8(%ebp)
8100272e:	8b 45 14             	mov    0x14(%ebp),%eax
81002731:	ff d0                	call   *%eax
81002733:	83 c4 10             	add    $0x10,%esp
81002736:	83 f8 ff             	cmp    $0xffffffff,%eax
81002739:	74 2a                	je     81002765 <_printf_i+0x444>
8100273b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100273f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002742:	8b 40 0c             	mov    0xc(%eax),%eax
81002745:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002748:	29 d0                	sub    %edx,%eax
8100274a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100274d:	7c d0                	jl     8100271f <_printf_i+0x3fe>
8100274f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002752:	8b 50 0c             	mov    0xc(%eax),%edx
81002755:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002758:	39 c2                	cmp    %eax,%edx
8100275a:	0f 4d c2             	cmovge %edx,%eax
8100275d:	eb 0c                	jmp    8100276b <_printf_i+0x44a>
8100275f:	90                   	nop
81002760:	eb 04                	jmp    81002766 <_printf_i+0x445>
81002762:	90                   	nop
81002763:	eb 01                	jmp    81002766 <_printf_i+0x445>
81002765:	90                   	nop
81002766:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100276b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100276e:	c9                   	leave  
8100276f:	c3                   	ret    

81002770 <_realloc_r>:
81002770:	55                   	push   %ebp
81002771:	89 e5                	mov    %esp,%ebp
81002773:	83 ec 78             	sub    $0x78,%esp
81002776:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100277a:	75 16                	jne    81002792 <_realloc_r+0x22>
8100277c:	83 ec 08             	sub    $0x8,%esp
8100277f:	ff 75 10             	push   0x10(%ebp)
81002782:	ff 75 08             	push   0x8(%ebp)
81002785:	e8 65 ea ff ff       	call   810011ef <_malloc_r>
8100278a:	83 c4 10             	add    $0x10,%esp
8100278d:	e9 b6 08 00 00       	jmp    81003048 <_realloc_r+0x8d8>
81002792:	83 ec 0c             	sub    $0xc,%esp
81002795:	ff 75 08             	push   0x8(%ebp)
81002798:	e8 78 f4 ff ff       	call   81001c15 <__malloc_lock>
8100279d:	83 c4 10             	add    $0x10,%esp
810027a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810027a3:	83 e8 08             	sub    $0x8,%eax
810027a6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810027a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810027ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027af:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810027b2:	8b 40 04             	mov    0x4(%eax),%eax
810027b5:	83 e0 fc             	and    $0xfffffffc,%eax
810027b8:	89 45 c0             	mov    %eax,-0x40(%ebp)
810027bb:	8b 45 c0             	mov    -0x40(%ebp),%eax
810027be:	89 45 f0             	mov    %eax,-0x10(%ebp)
810027c1:	8b 45 10             	mov    0x10(%ebp),%eax
810027c4:	83 c0 0b             	add    $0xb,%eax
810027c7:	83 f8 16             	cmp    $0x16,%eax
810027ca:	76 0b                	jbe    810027d7 <_realloc_r+0x67>
810027cc:	8b 45 10             	mov    0x10(%ebp),%eax
810027cf:	83 c0 0b             	add    $0xb,%eax
810027d2:	83 e0 f8             	and    $0xfffffff8,%eax
810027d5:	eb 05                	jmp    810027dc <_realloc_r+0x6c>
810027d7:	b8 10 00 00 00       	mov    $0x10,%eax
810027dc:	89 45 bc             	mov    %eax,-0x44(%ebp)
810027df:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027e2:	85 c0                	test   %eax,%eax
810027e4:	78 08                	js     810027ee <_realloc_r+0x7e>
810027e6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027e9:	3b 45 10             	cmp    0x10(%ebp),%eax
810027ec:	73 13                	jae    81002801 <_realloc_r+0x91>
810027ee:	8b 45 08             	mov    0x8(%ebp),%eax
810027f1:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810027f7:	b8 00 00 00 00       	mov    $0x0,%eax
810027fc:	e9 47 08 00 00       	jmp    81003048 <_realloc_r+0x8d8>
81002801:	8b 55 c0             	mov    -0x40(%ebp),%edx
81002804:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002807:	39 c2                	cmp    %eax,%edx
81002809:	0f 8d 8b 07 00 00    	jge    81002f9a <_realloc_r+0x82a>
8100280f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002812:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002815:	01 d0                	add    %edx,%eax
81002817:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100281a:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100281f:	8b 40 08             	mov    0x8(%eax),%eax
81002822:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002825:	74 1e                	je     81002845 <_realloc_r+0xd5>
81002827:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100282a:	8b 40 04             	mov    0x4(%eax),%eax
8100282d:	83 e0 fe             	and    $0xfffffffe,%eax
81002830:	89 c2                	mov    %eax,%edx
81002832:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002835:	01 d0                	add    %edx,%eax
81002837:	8b 40 04             	mov    0x4(%eax),%eax
8100283a:	83 e0 01             	and    $0x1,%eax
8100283d:	85 c0                	test   %eax,%eax
8100283f:	0f 85 ca 00 00 00    	jne    8100290f <_realloc_r+0x19f>
81002845:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002848:	8b 40 04             	mov    0x4(%eax),%eax
8100284b:	83 e0 fc             	and    $0xfffffffc,%eax
8100284e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002851:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81002856:	8b 40 08             	mov    0x8(%eax),%eax
81002859:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100285c:	75 71                	jne    810028cf <_realloc_r+0x15f>
8100285e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002861:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002864:	01 d0                	add    %edx,%eax
81002866:	89 c2                	mov    %eax,%edx
81002868:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100286b:	83 c0 10             	add    $0x10,%eax
8100286e:	39 c2                	cmp    %eax,%edx
81002870:	0f 8c a9 00 00 00    	jl     8100291f <_realloc_r+0x1af>
81002876:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002879:	01 45 f0             	add    %eax,-0x10(%ebp)
8100287c:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
81002881:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81002884:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002887:	01 c8                	add    %ecx,%eax
81002889:	89 42 08             	mov    %eax,0x8(%edx)
8100288c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100288f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002892:	89 c2                	mov    %eax,%edx
81002894:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81002899:	8b 40 08             	mov    0x8(%eax),%eax
8100289c:	83 ca 01             	or     $0x1,%edx
8100289f:	89 50 04             	mov    %edx,0x4(%eax)
810028a2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028a5:	8b 40 04             	mov    0x4(%eax),%eax
810028a8:	83 e0 01             	and    $0x1,%eax
810028ab:	0b 45 bc             	or     -0x44(%ebp),%eax
810028ae:	89 c2                	mov    %eax,%edx
810028b0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028b3:	89 50 04             	mov    %edx,0x4(%eax)
810028b6:	83 ec 0c             	sub    $0xc,%esp
810028b9:	ff 75 08             	push   0x8(%ebp)
810028bc:	e8 5a f3 ff ff       	call   81001c1b <__malloc_unlock>
810028c1:	83 c4 10             	add    $0x10,%esp
810028c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810028c7:	83 c0 08             	add    $0x8,%eax
810028ca:	e9 79 07 00 00       	jmp    81003048 <_realloc_r+0x8d8>
810028cf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810028d5:	01 d0                	add    %edx,%eax
810028d7:	89 c2                	mov    %eax,%edx
810028d9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810028dc:	39 c2                	cmp    %eax,%edx
810028de:	7c 3f                	jl     8100291f <_realloc_r+0x1af>
810028e0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028e3:	8b 40 0c             	mov    0xc(%eax),%eax
810028e6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810028e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810028ec:	8b 40 08             	mov    0x8(%eax),%eax
810028ef:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810028f2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810028f5:	8b 55 b8             	mov    -0x48(%ebp),%edx
810028f8:	89 50 0c             	mov    %edx,0xc(%eax)
810028fb:	8b 45 b8             	mov    -0x48(%ebp),%eax
810028fe:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002901:	89 50 08             	mov    %edx,0x8(%eax)
81002904:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002907:	01 45 f0             	add    %eax,-0x10(%ebp)
8100290a:	e9 8c 06 00 00       	jmp    81002f9b <_realloc_r+0x82b>
8100290f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81002916:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100291d:	eb 01                	jmp    81002920 <_realloc_r+0x1b0>
8100291f:	90                   	nop
81002920:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002923:	8b 40 04             	mov    0x4(%eax),%eax
81002926:	83 e0 01             	and    $0x1,%eax
81002929:	85 c0                	test   %eax,%eax
8100292b:	0f 85 d6 04 00 00    	jne    81002e07 <_realloc_r+0x697>
81002931:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002934:	8b 00                	mov    (%eax),%eax
81002936:	f7 d8                	neg    %eax
81002938:	89 c2                	mov    %eax,%edx
8100293a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100293d:	01 d0                	add    %edx,%eax
8100293f:	89 45 b0             	mov    %eax,-0x50(%ebp)
81002942:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002945:	8b 40 04             	mov    0x4(%eax),%eax
81002948:	83 e0 fc             	and    $0xfffffffc,%eax
8100294b:	89 45 ac             	mov    %eax,-0x54(%ebp)
8100294e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002952:	0f 84 4a 03 00 00    	je     81002ca2 <_realloc_r+0x532>
81002958:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
8100295d:	8b 40 08             	mov    0x8(%eax),%eax
81002960:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002963:	0f 85 b0 01 00 00    	jne    81002b19 <_realloc_r+0x3a9>
81002969:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100296c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100296f:	01 c2                	add    %eax,%edx
81002971:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002974:	01 d0                	add    %edx,%eax
81002976:	89 c2                	mov    %eax,%edx
81002978:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100297b:	83 c0 10             	add    $0x10,%eax
8100297e:	39 c2                	cmp    %eax,%edx
81002980:	0f 8c 1c 03 00 00    	jl     81002ca2 <_realloc_r+0x532>
81002986:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002989:	8b 40 0c             	mov    0xc(%eax),%eax
8100298c:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100298f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002992:	8b 40 08             	mov    0x8(%eax),%eax
81002995:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002998:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100299b:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100299e:	89 50 0c             	mov    %edx,0xc(%eax)
810029a1:	8b 45 b8             	mov    -0x48(%ebp),%eax
810029a4:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810029a7:	89 50 08             	mov    %edx,0x8(%eax)
810029aa:	8b 45 b0             	mov    -0x50(%ebp),%eax
810029ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
810029b0:	8b 55 ac             	mov    -0x54(%ebp),%edx
810029b3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810029b6:	01 d0                	add    %edx,%eax
810029b8:	01 45 f0             	add    %eax,-0x10(%ebp)
810029bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029be:	83 c0 08             	add    $0x8,%eax
810029c1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810029c4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029c7:	83 e8 04             	sub    $0x4,%eax
810029ca:	89 45 a0             	mov    %eax,-0x60(%ebp)
810029cd:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810029d1:	0f 87 de 00 00 00    	ja     81002ab5 <_realloc_r+0x345>
810029d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029da:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029dd:	8b 45 a8             	mov    -0x58(%ebp),%eax
810029e0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810029e3:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810029e7:	0f 86 90 00 00 00    	jbe    81002a7d <_realloc_r+0x30d>
810029ed:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810029f0:	8d 42 04             	lea    0x4(%edx),%eax
810029f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810029f6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810029f9:	8d 48 04             	lea    0x4(%eax),%ecx
810029fc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810029ff:	8b 12                	mov    (%edx),%edx
81002a01:	89 10                	mov    %edx,(%eax)
81002a03:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a06:	8d 42 04             	lea    0x4(%edx),%eax
81002a09:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a0c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a0f:	8d 48 04             	lea    0x4(%eax),%ecx
81002a12:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a15:	8b 12                	mov    (%edx),%edx
81002a17:	89 10                	mov    %edx,(%eax)
81002a19:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81002a1d:	76 5e                	jbe    81002a7d <_realloc_r+0x30d>
81002a1f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a22:	8d 42 04             	lea    0x4(%edx),%eax
81002a25:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a28:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a2b:	8d 48 04             	lea    0x4(%eax),%ecx
81002a2e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a31:	8b 12                	mov    (%edx),%edx
81002a33:	89 10                	mov    %edx,(%eax)
81002a35:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a38:	8d 42 04             	lea    0x4(%edx),%eax
81002a3b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a3e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a41:	8d 48 04             	lea    0x4(%eax),%ecx
81002a44:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a47:	8b 12                	mov    (%edx),%edx
81002a49:	89 10                	mov    %edx,(%eax)
81002a4b:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81002a4f:	76 2c                	jbe    81002a7d <_realloc_r+0x30d>
81002a51:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a54:	8d 42 04             	lea    0x4(%edx),%eax
81002a57:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a5a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a5d:	8d 48 04             	lea    0x4(%eax),%ecx
81002a60:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a63:	8b 12                	mov    (%edx),%edx
81002a65:	89 10                	mov    %edx,(%eax)
81002a67:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a6a:	8d 42 04             	lea    0x4(%edx),%eax
81002a6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a70:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a73:	8d 48 04             	lea    0x4(%eax),%ecx
81002a76:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a79:	8b 12                	mov    (%edx),%edx
81002a7b:	89 10                	mov    %edx,(%eax)
81002a7d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a80:	8d 42 04             	lea    0x4(%edx),%eax
81002a83:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a86:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a89:	8d 48 04             	lea    0x4(%eax),%ecx
81002a8c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002a8f:	8b 12                	mov    (%edx),%edx
81002a91:	89 10                	mov    %edx,(%eax)
81002a93:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002a96:	8d 42 04             	lea    0x4(%edx),%eax
81002a99:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a9c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a9f:	8d 48 04             	lea    0x4(%eax),%ecx
81002aa2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002aa5:	8b 12                	mov    (%edx),%edx
81002aa7:	89 10                	mov    %edx,(%eax)
81002aa9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002aac:	8b 10                	mov    (%eax),%edx
81002aae:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ab1:	89 10                	mov    %edx,(%eax)
81002ab3:	eb 14                	jmp    81002ac9 <_realloc_r+0x359>
81002ab5:	83 ec 04             	sub    $0x4,%esp
81002ab8:	ff 75 a0             	push   -0x60(%ebp)
81002abb:	ff 75 0c             	push   0xc(%ebp)
81002abe:	ff 75 a8             	push   -0x58(%ebp)
81002ac1:	e8 3a f0 ff ff       	call   81001b00 <memmove>
81002ac6:	83 c4 10             	add    $0x10,%esp
81002ac9:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
81002ace:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ad1:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002ad4:	01 c8                	add    %ecx,%eax
81002ad6:	89 42 08             	mov    %eax,0x8(%edx)
81002ad9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002adc:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002adf:	89 c2                	mov    %eax,%edx
81002ae1:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81002ae6:	8b 40 08             	mov    0x8(%eax),%eax
81002ae9:	83 ca 01             	or     $0x1,%edx
81002aec:	89 50 04             	mov    %edx,0x4(%eax)
81002aef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002af2:	8b 40 04             	mov    0x4(%eax),%eax
81002af5:	83 e0 01             	and    $0x1,%eax
81002af8:	0b 45 bc             	or     -0x44(%ebp),%eax
81002afb:	89 c2                	mov    %eax,%edx
81002afd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b00:	89 50 04             	mov    %edx,0x4(%eax)
81002b03:	83 ec 0c             	sub    $0xc,%esp
81002b06:	ff 75 08             	push   0x8(%ebp)
81002b09:	e8 0d f1 ff ff       	call   81001c1b <__malloc_unlock>
81002b0e:	83 c4 10             	add    $0x10,%esp
81002b11:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002b14:	e9 2f 05 00 00       	jmp    81003048 <_realloc_r+0x8d8>
81002b19:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b1c:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b1f:	01 c2                	add    %eax,%edx
81002b21:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b24:	01 d0                	add    %edx,%eax
81002b26:	89 c2                	mov    %eax,%edx
81002b28:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b2b:	39 c2                	cmp    %eax,%edx
81002b2d:	0f 8c 6f 01 00 00    	jl     81002ca2 <_realloc_r+0x532>
81002b33:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b36:	8b 40 0c             	mov    0xc(%eax),%eax
81002b39:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b3c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b3f:	8b 40 08             	mov    0x8(%eax),%eax
81002b42:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b45:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b48:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b4b:	89 50 0c             	mov    %edx,0xc(%eax)
81002b4e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b51:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b54:	89 50 08             	mov    %edx,0x8(%eax)
81002b57:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b5a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b5d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002b60:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b63:	8b 40 08             	mov    0x8(%eax),%eax
81002b66:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002b69:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002b6c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002b6f:	89 50 0c             	mov    %edx,0xc(%eax)
81002b72:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002b75:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002b78:	89 50 08             	mov    %edx,0x8(%eax)
81002b7b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002b7e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b81:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b84:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002b87:	01 d0                	add    %edx,%eax
81002b89:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b8f:	83 c0 08             	add    $0x8,%eax
81002b92:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002b95:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002b98:	83 e8 04             	sub    $0x4,%eax
81002b9b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002b9e:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002ba2:	0f 87 e1 00 00 00    	ja     81002c89 <_realloc_r+0x519>
81002ba8:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bab:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bae:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002bb1:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002bb4:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002bb8:	0f 86 90 00 00 00    	jbe    81002c4e <_realloc_r+0x4de>
81002bbe:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bc1:	8d 42 04             	lea    0x4(%edx),%eax
81002bc4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bc7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bca:	8d 48 04             	lea    0x4(%eax),%ecx
81002bcd:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002bd0:	8b 12                	mov    (%edx),%edx
81002bd2:	89 10                	mov    %edx,(%eax)
81002bd4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bd7:	8d 42 04             	lea    0x4(%edx),%eax
81002bda:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bdd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002be0:	8d 48 04             	lea    0x4(%eax),%ecx
81002be3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002be6:	8b 12                	mov    (%edx),%edx
81002be8:	89 10                	mov    %edx,(%eax)
81002bea:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002bee:	76 5e                	jbe    81002c4e <_realloc_r+0x4de>
81002bf0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002bf3:	8d 42 04             	lea    0x4(%edx),%eax
81002bf6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002bf9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002bfc:	8d 48 04             	lea    0x4(%eax),%ecx
81002bff:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c02:	8b 12                	mov    (%edx),%edx
81002c04:	89 10                	mov    %edx,(%eax)
81002c06:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c09:	8d 42 04             	lea    0x4(%edx),%eax
81002c0c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c0f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c12:	8d 48 04             	lea    0x4(%eax),%ecx
81002c15:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c18:	8b 12                	mov    (%edx),%edx
81002c1a:	89 10                	mov    %edx,(%eax)
81002c1c:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002c20:	76 2c                	jbe    81002c4e <_realloc_r+0x4de>
81002c22:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c25:	8d 42 04             	lea    0x4(%edx),%eax
81002c28:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c2b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c2e:	8d 48 04             	lea    0x4(%eax),%ecx
81002c31:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c34:	8b 12                	mov    (%edx),%edx
81002c36:	89 10                	mov    %edx,(%eax)
81002c38:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c3b:	8d 42 04             	lea    0x4(%edx),%eax
81002c3e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c44:	8d 48 04             	lea    0x4(%eax),%ecx
81002c47:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c4a:	8b 12                	mov    (%edx),%edx
81002c4c:	89 10                	mov    %edx,(%eax)
81002c4e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c51:	8d 42 04             	lea    0x4(%edx),%eax
81002c54:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c57:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c5a:	8d 48 04             	lea    0x4(%eax),%ecx
81002c5d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c60:	8b 12                	mov    (%edx),%edx
81002c62:	89 10                	mov    %edx,(%eax)
81002c64:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c67:	8d 42 04             	lea    0x4(%edx),%eax
81002c6a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c6d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c70:	8d 48 04             	lea    0x4(%eax),%ecx
81002c73:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002c76:	8b 12                	mov    (%edx),%edx
81002c78:	89 10                	mov    %edx,(%eax)
81002c7a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c7d:	8b 10                	mov    (%eax),%edx
81002c7f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c82:	89 10                	mov    %edx,(%eax)
81002c84:	e9 12 03 00 00       	jmp    81002f9b <_realloc_r+0x82b>
81002c89:	83 ec 04             	sub    $0x4,%esp
81002c8c:	ff 75 a4             	push   -0x5c(%ebp)
81002c8f:	ff 75 0c             	push   0xc(%ebp)
81002c92:	ff 75 a8             	push   -0x58(%ebp)
81002c95:	e8 66 ee ff ff       	call   81001b00 <memmove>
81002c9a:	83 c4 10             	add    $0x10,%esp
81002c9d:	e9 f9 02 00 00       	jmp    81002f9b <_realloc_r+0x82b>
81002ca2:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002ca6:	0f 84 5b 01 00 00    	je     81002e07 <_realloc_r+0x697>
81002cac:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002caf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cb2:	01 d0                	add    %edx,%eax
81002cb4:	89 c2                	mov    %eax,%edx
81002cb6:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002cb9:	39 c2                	cmp    %eax,%edx
81002cbb:	0f 8c 46 01 00 00    	jl     81002e07 <_realloc_r+0x697>
81002cc1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002cc4:	8b 40 0c             	mov    0xc(%eax),%eax
81002cc7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002cca:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002ccd:	8b 40 08             	mov    0x8(%eax),%eax
81002cd0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002cd3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002cd6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002cd9:	89 50 0c             	mov    %edx,0xc(%eax)
81002cdc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002cdf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002ce2:	89 50 08             	mov    %edx,0x8(%eax)
81002ce5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002ce8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ceb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002cee:	01 45 f0             	add    %eax,-0x10(%ebp)
81002cf1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cf4:	83 c0 08             	add    $0x8,%eax
81002cf7:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002cfa:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002cfd:	83 e8 04             	sub    $0x4,%eax
81002d00:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002d03:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002d07:	0f 87 e1 00 00 00    	ja     81002dee <_realloc_r+0x67e>
81002d0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d10:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d13:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002d16:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002d19:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002d1d:	0f 86 90 00 00 00    	jbe    81002db3 <_realloc_r+0x643>
81002d23:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d26:	8d 42 04             	lea    0x4(%edx),%eax
81002d29:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d2c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d2f:	8d 48 04             	lea    0x4(%eax),%ecx
81002d32:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d35:	8b 12                	mov    (%edx),%edx
81002d37:	89 10                	mov    %edx,(%eax)
81002d39:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d3c:	8d 42 04             	lea    0x4(%edx),%eax
81002d3f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d42:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d45:	8d 48 04             	lea    0x4(%eax),%ecx
81002d48:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d4b:	8b 12                	mov    (%edx),%edx
81002d4d:	89 10                	mov    %edx,(%eax)
81002d4f:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002d53:	76 5e                	jbe    81002db3 <_realloc_r+0x643>
81002d55:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d58:	8d 42 04             	lea    0x4(%edx),%eax
81002d5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d5e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d61:	8d 48 04             	lea    0x4(%eax),%ecx
81002d64:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d67:	8b 12                	mov    (%edx),%edx
81002d69:	89 10                	mov    %edx,(%eax)
81002d6b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d6e:	8d 42 04             	lea    0x4(%edx),%eax
81002d71:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d74:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d77:	8d 48 04             	lea    0x4(%eax),%ecx
81002d7a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d7d:	8b 12                	mov    (%edx),%edx
81002d7f:	89 10                	mov    %edx,(%eax)
81002d81:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002d85:	76 2c                	jbe    81002db3 <_realloc_r+0x643>
81002d87:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002d8a:	8d 42 04             	lea    0x4(%edx),%eax
81002d8d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002d90:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d93:	8d 48 04             	lea    0x4(%eax),%ecx
81002d96:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002d99:	8b 12                	mov    (%edx),%edx
81002d9b:	89 10                	mov    %edx,(%eax)
81002d9d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002da0:	8d 42 04             	lea    0x4(%edx),%eax
81002da3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002da6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002da9:	8d 48 04             	lea    0x4(%eax),%ecx
81002dac:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002daf:	8b 12                	mov    (%edx),%edx
81002db1:	89 10                	mov    %edx,(%eax)
81002db3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002db6:	8d 42 04             	lea    0x4(%edx),%eax
81002db9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dbc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dbf:	8d 48 04             	lea    0x4(%eax),%ecx
81002dc2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002dc5:	8b 12                	mov    (%edx),%edx
81002dc7:	89 10                	mov    %edx,(%eax)
81002dc9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002dcc:	8d 42 04             	lea    0x4(%edx),%eax
81002dcf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002dd2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002dd5:	8d 48 04             	lea    0x4(%eax),%ecx
81002dd8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002ddb:	8b 12                	mov    (%edx),%edx
81002ddd:	89 10                	mov    %edx,(%eax)
81002ddf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002de2:	8b 10                	mov    (%eax),%edx
81002de4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002de7:	89 10                	mov    %edx,(%eax)
81002de9:	e9 ad 01 00 00       	jmp    81002f9b <_realloc_r+0x82b>
81002dee:	83 ec 04             	sub    $0x4,%esp
81002df1:	ff 75 9c             	push   -0x64(%ebp)
81002df4:	ff 75 0c             	push   0xc(%ebp)
81002df7:	ff 75 a8             	push   -0x58(%ebp)
81002dfa:	e8 01 ed ff ff       	call   81001b00 <memmove>
81002dff:	83 c4 10             	add    $0x10,%esp
81002e02:	e9 94 01 00 00       	jmp    81002f9b <_realloc_r+0x82b>
81002e07:	83 ec 08             	sub    $0x8,%esp
81002e0a:	ff 75 10             	push   0x10(%ebp)
81002e0d:	ff 75 08             	push   0x8(%ebp)
81002e10:	e8 da e3 ff ff       	call   810011ef <_malloc_r>
81002e15:	83 c4 10             	add    $0x10,%esp
81002e18:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002e1b:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002e1f:	75 18                	jne    81002e39 <_realloc_r+0x6c9>
81002e21:	83 ec 0c             	sub    $0xc,%esp
81002e24:	ff 75 08             	push   0x8(%ebp)
81002e27:	e8 ef ed ff ff       	call   81001c1b <__malloc_unlock>
81002e2c:	83 c4 10             	add    $0x10,%esp
81002e2f:	b8 00 00 00 00       	mov    $0x0,%eax
81002e34:	e9 0f 02 00 00       	jmp    81003048 <_realloc_r+0x8d8>
81002e39:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e3c:	83 e8 08             	sub    $0x8,%eax
81002e3f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e42:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e45:	8b 40 04             	mov    0x4(%eax),%eax
81002e48:	83 e0 fe             	and    $0xfffffffe,%eax
81002e4b:	89 c2                	mov    %eax,%edx
81002e4d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e50:	01 d0                	add    %edx,%eax
81002e52:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002e55:	75 17                	jne    81002e6e <_realloc_r+0x6fe>
81002e57:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e5a:	8b 40 04             	mov    0x4(%eax),%eax
81002e5d:	83 e0 fc             	and    $0xfffffffc,%eax
81002e60:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e63:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002e66:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e69:	e9 2d 01 00 00       	jmp    81002f9b <_realloc_r+0x82b>
81002e6e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002e71:	83 e8 04             	sub    $0x4,%eax
81002e74:	89 45 98             	mov    %eax,-0x68(%ebp)
81002e77:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002e7b:	0f 87 de 00 00 00    	ja     81002f5f <_realloc_r+0x7ef>
81002e81:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e84:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e87:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e8a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e8d:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002e91:	0f 86 90 00 00 00    	jbe    81002f27 <_realloc_r+0x7b7>
81002e97:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e9a:	8d 42 04             	lea    0x4(%edx),%eax
81002e9d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ea0:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ea3:	8d 48 04             	lea    0x4(%eax),%ecx
81002ea6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ea9:	8b 12                	mov    (%edx),%edx
81002eab:	89 10                	mov    %edx,(%eax)
81002ead:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002eb0:	8d 42 04             	lea    0x4(%edx),%eax
81002eb3:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002eb6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002eb9:	8d 48 04             	lea    0x4(%eax),%ecx
81002ebc:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ebf:	8b 12                	mov    (%edx),%edx
81002ec1:	89 10                	mov    %edx,(%eax)
81002ec3:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002ec7:	76 5e                	jbe    81002f27 <_realloc_r+0x7b7>
81002ec9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ecc:	8d 42 04             	lea    0x4(%edx),%eax
81002ecf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ed2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002ed5:	8d 48 04             	lea    0x4(%eax),%ecx
81002ed8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002edb:	8b 12                	mov    (%edx),%edx
81002edd:	89 10                	mov    %edx,(%eax)
81002edf:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002ee2:	8d 42 04             	lea    0x4(%edx),%eax
81002ee5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002ee8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002eeb:	8d 48 04             	lea    0x4(%eax),%ecx
81002eee:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ef1:	8b 12                	mov    (%edx),%edx
81002ef3:	89 10                	mov    %edx,(%eax)
81002ef5:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002ef9:	76 2c                	jbe    81002f27 <_realloc_r+0x7b7>
81002efb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002efe:	8d 42 04             	lea    0x4(%edx),%eax
81002f01:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f04:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f07:	8d 48 04             	lea    0x4(%eax),%ecx
81002f0a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f0d:	8b 12                	mov    (%edx),%edx
81002f0f:	89 10                	mov    %edx,(%eax)
81002f11:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f14:	8d 42 04             	lea    0x4(%edx),%eax
81002f17:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f1a:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f1d:	8d 48 04             	lea    0x4(%eax),%ecx
81002f20:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f23:	8b 12                	mov    (%edx),%edx
81002f25:	89 10                	mov    %edx,(%eax)
81002f27:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f2a:	8d 42 04             	lea    0x4(%edx),%eax
81002f2d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f30:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f33:	8d 48 04             	lea    0x4(%eax),%ecx
81002f36:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f39:	8b 12                	mov    (%edx),%edx
81002f3b:	89 10                	mov    %edx,(%eax)
81002f3d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002f40:	8d 42 04             	lea    0x4(%edx),%eax
81002f43:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002f46:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f49:	8d 48 04             	lea    0x4(%eax),%ecx
81002f4c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002f4f:	8b 12                	mov    (%edx),%edx
81002f51:	89 10                	mov    %edx,(%eax)
81002f53:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f56:	8b 10                	mov    (%eax),%edx
81002f58:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f5b:	89 10                	mov    %edx,(%eax)
81002f5d:	eb 14                	jmp    81002f73 <_realloc_r+0x803>
81002f5f:	83 ec 04             	sub    $0x4,%esp
81002f62:	ff 75 98             	push   -0x68(%ebp)
81002f65:	ff 75 0c             	push   0xc(%ebp)
81002f68:	ff 75 a8             	push   -0x58(%ebp)
81002f6b:	e8 90 eb ff ff       	call   81001b00 <memmove>
81002f70:	83 c4 10             	add    $0x10,%esp
81002f73:	83 ec 08             	sub    $0x8,%esp
81002f76:	ff 75 0c             	push   0xc(%ebp)
81002f79:	ff 75 08             	push   0x8(%ebp)
81002f7c:	e8 c5 0a 00 00       	call   81003a46 <_free_r>
81002f81:	83 c4 10             	add    $0x10,%esp
81002f84:	83 ec 0c             	sub    $0xc,%esp
81002f87:	ff 75 08             	push   0x8(%ebp)
81002f8a:	e8 8c ec ff ff       	call   81001c1b <__malloc_unlock>
81002f8f:	83 c4 10             	add    $0x10,%esp
81002f92:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002f95:	e9 ae 00 00 00       	jmp    81003048 <_realloc_r+0x8d8>
81002f9a:	90                   	nop
81002f9b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f9e:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002fa1:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002fa4:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002fa8:	76 5d                	jbe    81003007 <_realloc_r+0x897>
81002faa:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fad:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002fb0:	01 d0                	add    %edx,%eax
81002fb2:	89 45 90             	mov    %eax,-0x70(%ebp)
81002fb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb8:	8b 40 04             	mov    0x4(%eax),%eax
81002fbb:	83 e0 01             	and    $0x1,%eax
81002fbe:	0b 45 bc             	or     -0x44(%ebp),%eax
81002fc1:	89 c2                	mov    %eax,%edx
81002fc3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fc6:	89 50 04             	mov    %edx,0x4(%eax)
81002fc9:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fcc:	83 c8 01             	or     $0x1,%eax
81002fcf:	89 c2                	mov    %eax,%edx
81002fd1:	8b 45 90             	mov    -0x70(%ebp),%eax
81002fd4:	89 50 04             	mov    %edx,0x4(%eax)
81002fd7:	8b 55 90             	mov    -0x70(%ebp),%edx
81002fda:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fdd:	01 d0                	add    %edx,%eax
81002fdf:	8b 50 04             	mov    0x4(%eax),%edx
81002fe2:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002fe5:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002fe8:	01 c8                	add    %ecx,%eax
81002fea:	83 ca 01             	or     $0x1,%edx
81002fed:	89 50 04             	mov    %edx,0x4(%eax)
81002ff0:	8b 45 90             	mov    -0x70(%ebp),%eax
81002ff3:	83 c0 08             	add    $0x8,%eax
81002ff6:	83 ec 08             	sub    $0x8,%esp
81002ff9:	50                   	push   %eax
81002ffa:	ff 75 08             	push   0x8(%ebp)
81002ffd:	e8 44 0a 00 00       	call   81003a46 <_free_r>
81003002:	83 c4 10             	add    $0x10,%esp
81003005:	eb 2d                	jmp    81003034 <_realloc_r+0x8c4>
81003007:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100300a:	8b 40 04             	mov    0x4(%eax),%eax
8100300d:	83 e0 01             	and    $0x1,%eax
81003010:	0b 45 f0             	or     -0x10(%ebp),%eax
81003013:	89 c2                	mov    %eax,%edx
81003015:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003018:	89 50 04             	mov    %edx,0x4(%eax)
8100301b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100301e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003021:	01 d0                	add    %edx,%eax
81003023:	8b 50 04             	mov    0x4(%eax),%edx
81003026:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003029:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100302c:	01 c8                	add    %ecx,%eax
8100302e:	83 ca 01             	or     $0x1,%edx
81003031:	89 50 04             	mov    %edx,0x4(%eax)
81003034:	83 ec 0c             	sub    $0xc,%esp
81003037:	ff 75 08             	push   0x8(%ebp)
8100303a:	e8 dc eb ff ff       	call   81001c1b <__malloc_unlock>
8100303f:	83 c4 10             	add    $0x10,%esp
81003042:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003045:	83 c0 08             	add    $0x8,%eax
81003048:	c9                   	leave  
81003049:	c3                   	ret    

8100304a <_sbrk_r>:
8100304a:	55                   	push   %ebp
8100304b:	89 e5                	mov    %esp,%ebp
8100304d:	83 ec 18             	sub    $0x18,%esp
81003050:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
81003057:	00 00 00 
8100305a:	83 ec 0c             	sub    $0xc,%esp
8100305d:	ff 75 0c             	push   0xc(%ebp)
81003060:	e8 88 d3 ff ff       	call   810003ed <sbrk>
81003065:	83 c4 10             	add    $0x10,%esp
81003068:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100306b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100306f:	75 14                	jne    81003085 <_sbrk_r+0x3b>
81003071:	a1 90 55 00 81       	mov    0x81005590,%eax
81003076:	85 c0                	test   %eax,%eax
81003078:	74 0b                	je     81003085 <_sbrk_r+0x3b>
8100307a:	8b 15 90 55 00 81    	mov    0x81005590,%edx
81003080:	8b 45 08             	mov    0x8(%ebp),%eax
81003083:	89 10                	mov    %edx,(%eax)
81003085:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003088:	c9                   	leave  
81003089:	c3                   	ret    

8100308a <__sread>:
8100308a:	55                   	push   %ebp
8100308b:	89 e5                	mov    %esp,%ebp
8100308d:	56                   	push   %esi
8100308e:	53                   	push   %ebx
8100308f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003092:	8b 55 14             	mov    0x14(%ebp),%edx
81003095:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003099:	98                   	cwtl   
8100309a:	52                   	push   %edx
8100309b:	ff 75 10             	push   0x10(%ebp)
8100309e:	50                   	push   %eax
8100309f:	ff 75 08             	push   0x8(%ebp)
810030a2:	e8 dd 11 00 00       	call   81004284 <_read_r>
810030a7:	83 c4 10             	add    $0x10,%esp
810030aa:	89 c6                	mov    %eax,%esi
810030ac:	85 f6                	test   %esi,%esi
810030ae:	78 0a                	js     810030ba <__sread+0x30>
810030b0:	8b 43 50             	mov    0x50(%ebx),%eax
810030b3:	01 f0                	add    %esi,%eax
810030b5:	89 43 50             	mov    %eax,0x50(%ebx)
810030b8:	eb 0b                	jmp    810030c5 <__sread+0x3b>
810030ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030be:	80 e4 ef             	and    $0xef,%ah
810030c1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030c5:	89 f0                	mov    %esi,%eax
810030c7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810030ca:	5b                   	pop    %ebx
810030cb:	5e                   	pop    %esi
810030cc:	5d                   	pop    %ebp
810030cd:	c3                   	ret    

810030ce <__seofread>:
810030ce:	55                   	push   %ebp
810030cf:	89 e5                	mov    %esp,%ebp
810030d1:	b8 00 00 00 00       	mov    $0x0,%eax
810030d6:	5d                   	pop    %ebp
810030d7:	c3                   	ret    

810030d8 <__swrite>:
810030d8:	55                   	push   %ebp
810030d9:	89 e5                	mov    %esp,%ebp
810030db:	53                   	push   %ebx
810030dc:	83 ec 14             	sub    $0x14,%esp
810030df:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810030e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030e6:	98                   	cwtl   
810030e7:	25 00 01 00 00       	and    $0x100,%eax
810030ec:	85 c0                	test   %eax,%eax
810030ee:	74 15                	je     81003105 <__swrite+0x2d>
810030f0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810030f4:	98                   	cwtl   
810030f5:	6a 02                	push   $0x2
810030f7:	6a 00                	push   $0x0
810030f9:	50                   	push   %eax
810030fa:	ff 75 08             	push   0x8(%ebp)
810030fd:	e8 26 0f 00 00       	call   81004028 <_lseek_r>
81003102:	83 c4 10             	add    $0x10,%esp
81003105:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003109:	80 e4 ef             	and    $0xef,%ah
8100310c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003110:	8b 55 14             	mov    0x14(%ebp),%edx
81003113:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003117:	98                   	cwtl   
81003118:	52                   	push   %edx
81003119:	ff 75 10             	push   0x10(%ebp)
8100311c:	50                   	push   %eax
8100311d:	ff 75 08             	push   0x8(%ebp)
81003120:	e8 b0 01 00 00       	call   810032d5 <_write_r>
81003125:	83 c4 10             	add    $0x10,%esp
81003128:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100312b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100312e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003131:	c9                   	leave  
81003132:	c3                   	ret    

81003133 <__sseek>:
81003133:	55                   	push   %ebp
81003134:	89 e5                	mov    %esp,%ebp
81003136:	56                   	push   %esi
81003137:	53                   	push   %ebx
81003138:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100313b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100313f:	98                   	cwtl   
81003140:	ff 75 14             	push   0x14(%ebp)
81003143:	ff 75 10             	push   0x10(%ebp)
81003146:	50                   	push   %eax
81003147:	ff 75 08             	push   0x8(%ebp)
8100314a:	e8 d9 0e 00 00       	call   81004028 <_lseek_r>
8100314f:	83 c4 10             	add    $0x10,%esp
81003152:	89 c6                	mov    %eax,%esi
81003154:	83 fe ff             	cmp    $0xffffffff,%esi
81003157:	75 0d                	jne    81003166 <__sseek+0x33>
81003159:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100315d:	80 e4 ef             	and    $0xef,%ah
81003160:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003164:	eb 0e                	jmp    81003174 <__sseek+0x41>
81003166:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100316a:	80 cc 10             	or     $0x10,%ah
8100316d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003171:	89 73 50             	mov    %esi,0x50(%ebx)
81003174:	89 f0                	mov    %esi,%eax
81003176:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003179:	5b                   	pop    %ebx
8100317a:	5e                   	pop    %esi
8100317b:	5d                   	pop    %ebp
8100317c:	c3                   	ret    

8100317d <__sclose>:
8100317d:	55                   	push   %ebp
8100317e:	89 e5                	mov    %esp,%ebp
81003180:	83 ec 18             	sub    $0x18,%esp
81003183:	8b 45 0c             	mov    0xc(%ebp),%eax
81003186:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003189:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100318c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003190:	98                   	cwtl   
81003191:	83 ec 08             	sub    $0x8,%esp
81003194:	50                   	push   %eax
81003195:	ff 75 08             	push   0x8(%ebp)
81003198:	e8 d9 02 00 00       	call   81003476 <_close_r>
8100319d:	83 c4 10             	add    $0x10,%esp
810031a0:	c9                   	leave  
810031a1:	c3                   	ret    

810031a2 <__swbuf_r>:
810031a2:	55                   	push   %ebp
810031a3:	89 e5                	mov    %esp,%ebp
810031a5:	57                   	push   %edi
810031a6:	56                   	push   %esi
810031a7:	53                   	push   %ebx
810031a8:	83 ec 1c             	sub    $0x1c,%esp
810031ab:	8b 7d 0c             	mov    0xc(%ebp),%edi
810031ae:	8b 5d 10             	mov    0x10(%ebp),%ebx
810031b1:	8b 45 08             	mov    0x8(%ebp),%eax
810031b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810031b7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810031bb:	74 18                	je     810031d5 <__swbuf_r+0x33>
810031bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031c0:	8b 40 38             	mov    0x38(%eax),%eax
810031c3:	85 c0                	test   %eax,%eax
810031c5:	75 0e                	jne    810031d5 <__swbuf_r+0x33>
810031c7:	83 ec 0c             	sub    $0xc,%esp
810031ca:	ff 75 e4             	push   -0x1c(%ebp)
810031cd:	e8 0c d7 ff ff       	call   810008de <__sinit>
810031d2:	83 c4 10             	add    $0x10,%esp
810031d5:	8b 43 18             	mov    0x18(%ebx),%eax
810031d8:	89 43 08             	mov    %eax,0x8(%ebx)
810031db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031df:	98                   	cwtl   
810031e0:	83 e0 08             	and    $0x8,%eax
810031e3:	85 c0                	test   %eax,%eax
810031e5:	74 07                	je     810031ee <__swbuf_r+0x4c>
810031e7:	8b 43 10             	mov    0x10(%ebx),%eax
810031ea:	85 c0                	test   %eax,%eax
810031ec:	75 1d                	jne    8100320b <__swbuf_r+0x69>
810031ee:	83 ec 08             	sub    $0x8,%esp
810031f1:	53                   	push   %ebx
810031f2:	ff 75 08             	push   0x8(%ebp)
810031f5:	e8 21 01 00 00       	call   8100331b <__swsetup_r>
810031fa:	83 c4 10             	add    $0x10,%esp
810031fd:	85 c0                	test   %eax,%eax
810031ff:	74 0a                	je     8100320b <__swbuf_r+0x69>
81003201:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003206:	e9 a1 00 00 00       	jmp    810032ac <__swbuf_r+0x10a>
8100320b:	89 f8                	mov    %edi,%eax
8100320d:	0f b6 f8             	movzbl %al,%edi
81003210:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003214:	98                   	cwtl   
81003215:	25 00 20 00 00       	and    $0x2000,%eax
8100321a:	85 c0                	test   %eax,%eax
8100321c:	75 14                	jne    81003232 <__swbuf_r+0x90>
8100321e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003222:	80 cc 20             	or     $0x20,%ah
81003225:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003229:	8b 43 64             	mov    0x64(%ebx),%eax
8100322c:	80 e4 df             	and    $0xdf,%ah
8100322f:	89 43 64             	mov    %eax,0x64(%ebx)
81003232:	8b 03                	mov    (%ebx),%eax
81003234:	8b 53 10             	mov    0x10(%ebx),%edx
81003237:	29 d0                	sub    %edx,%eax
81003239:	89 c6                	mov    %eax,%esi
8100323b:	8b 43 14             	mov    0x14(%ebx),%eax
8100323e:	39 c6                	cmp    %eax,%esi
81003240:	7c 1f                	jl     81003261 <__swbuf_r+0xbf>
81003242:	83 ec 08             	sub    $0x8,%esp
81003245:	53                   	push   %ebx
81003246:	ff 75 08             	push   0x8(%ebp)
81003249:	e8 b2 05 00 00       	call   81003800 <_fflush_r>
8100324e:	83 c4 10             	add    $0x10,%esp
81003251:	85 c0                	test   %eax,%eax
81003253:	74 07                	je     8100325c <__swbuf_r+0xba>
81003255:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100325a:	eb 50                	jmp    810032ac <__swbuf_r+0x10a>
8100325c:	be 00 00 00 00       	mov    $0x0,%esi
81003261:	8b 43 08             	mov    0x8(%ebx),%eax
81003264:	83 e8 01             	sub    $0x1,%eax
81003267:	89 43 08             	mov    %eax,0x8(%ebx)
8100326a:	8b 03                	mov    (%ebx),%eax
8100326c:	8d 50 01             	lea    0x1(%eax),%edx
8100326f:	89 13                	mov    %edx,(%ebx)
81003271:	89 fa                	mov    %edi,%edx
81003273:	88 10                	mov    %dl,(%eax)
81003275:	83 c6 01             	add    $0x1,%esi
81003278:	8b 43 14             	mov    0x14(%ebx),%eax
8100327b:	39 c6                	cmp    %eax,%esi
8100327d:	74 11                	je     81003290 <__swbuf_r+0xee>
8100327f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003283:	98                   	cwtl   
81003284:	83 e0 01             	and    $0x1,%eax
81003287:	85 c0                	test   %eax,%eax
81003289:	74 1f                	je     810032aa <__swbuf_r+0x108>
8100328b:	83 ff 0a             	cmp    $0xa,%edi
8100328e:	75 1a                	jne    810032aa <__swbuf_r+0x108>
81003290:	83 ec 08             	sub    $0x8,%esp
81003293:	53                   	push   %ebx
81003294:	ff 75 08             	push   0x8(%ebp)
81003297:	e8 64 05 00 00       	call   81003800 <_fflush_r>
8100329c:	83 c4 10             	add    $0x10,%esp
8100329f:	85 c0                	test   %eax,%eax
810032a1:	74 07                	je     810032aa <__swbuf_r+0x108>
810032a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810032a8:	eb 02                	jmp    810032ac <__swbuf_r+0x10a>
810032aa:	89 f8                	mov    %edi,%eax
810032ac:	8d 65 f4             	lea    -0xc(%ebp),%esp
810032af:	5b                   	pop    %ebx
810032b0:	5e                   	pop    %esi
810032b1:	5f                   	pop    %edi
810032b2:	5d                   	pop    %ebp
810032b3:	c3                   	ret    

810032b4 <__swbuf>:
810032b4:	55                   	push   %ebp
810032b5:	89 e5                	mov    %esp,%ebp
810032b7:	83 ec 08             	sub    $0x8,%esp
810032ba:	8b 55 08             	mov    0x8(%ebp),%edx
810032bd:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810032c0:	a1 64 4f 00 81       	mov    0x81004f64,%eax
810032c5:	83 ec 04             	sub    $0x4,%esp
810032c8:	51                   	push   %ecx
810032c9:	52                   	push   %edx
810032ca:	50                   	push   %eax
810032cb:	e8 d2 fe ff ff       	call   810031a2 <__swbuf_r>
810032d0:	83 c4 10             	add    $0x10,%esp
810032d3:	c9                   	leave  
810032d4:	c3                   	ret    

810032d5 <_write_r>:
810032d5:	55                   	push   %ebp
810032d6:	89 e5                	mov    %esp,%ebp
810032d8:	83 ec 18             	sub    $0x18,%esp
810032db:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
810032e2:	00 00 00 
810032e5:	83 ec 04             	sub    $0x4,%esp
810032e8:	ff 75 14             	push   0x14(%ebp)
810032eb:	ff 75 10             	push   0x10(%ebp)
810032ee:	ff 75 0c             	push   0xc(%ebp)
810032f1:	e8 34 d0 ff ff       	call   8100032a <write>
810032f6:	83 c4 10             	add    $0x10,%esp
810032f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810032fc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003300:	75 14                	jne    81003316 <_write_r+0x41>
81003302:	a1 90 55 00 81       	mov    0x81005590,%eax
81003307:	85 c0                	test   %eax,%eax
81003309:	74 0b                	je     81003316 <_write_r+0x41>
8100330b:	8b 15 90 55 00 81    	mov    0x81005590,%edx
81003311:	8b 45 08             	mov    0x8(%ebp),%eax
81003314:	89 10                	mov    %edx,(%eax)
81003316:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003319:	c9                   	leave  
8100331a:	c3                   	ret    

8100331b <__swsetup_r>:
8100331b:	55                   	push   %ebp
8100331c:	89 e5                	mov    %esp,%ebp
8100331e:	53                   	push   %ebx
8100331f:	83 ec 14             	sub    $0x14,%esp
81003322:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003325:	a1 64 4f 00 81       	mov    0x81004f64,%eax
8100332a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100332d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003331:	74 18                	je     8100334b <__swsetup_r+0x30>
81003333:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003336:	8b 40 38             	mov    0x38(%eax),%eax
81003339:	85 c0                	test   %eax,%eax
8100333b:	75 0e                	jne    8100334b <__swsetup_r+0x30>
8100333d:	83 ec 0c             	sub    $0xc,%esp
81003340:	ff 75 f4             	push   -0xc(%ebp)
81003343:	e8 96 d5 ff ff       	call   810008de <__sinit>
81003348:	83 c4 10             	add    $0x10,%esp
8100334b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100334f:	98                   	cwtl   
81003350:	83 e0 08             	and    $0x8,%eax
81003353:	85 c0                	test   %eax,%eax
81003355:	0f 85 82 00 00 00    	jne    810033dd <__swsetup_r+0xc2>
8100335b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100335f:	98                   	cwtl   
81003360:	83 e0 10             	and    $0x10,%eax
81003363:	85 c0                	test   %eax,%eax
81003365:	75 1e                	jne    81003385 <__swsetup_r+0x6a>
81003367:	8b 45 08             	mov    0x8(%ebp),%eax
8100336a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003370:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003374:	83 c8 40             	or     $0x40,%eax
81003377:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100337b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003380:	e9 ec 00 00 00       	jmp    81003471 <__swsetup_r+0x156>
81003385:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003389:	98                   	cwtl   
8100338a:	83 e0 04             	and    $0x4,%eax
8100338d:	85 c0                	test   %eax,%eax
8100338f:	74 41                	je     810033d2 <__swsetup_r+0xb7>
81003391:	8b 43 30             	mov    0x30(%ebx),%eax
81003394:	85 c0                	test   %eax,%eax
81003396:	74 23                	je     810033bb <__swsetup_r+0xa0>
81003398:	8b 53 30             	mov    0x30(%ebx),%edx
8100339b:	8d 43 40             	lea    0x40(%ebx),%eax
8100339e:	39 c2                	cmp    %eax,%edx
810033a0:	74 12                	je     810033b4 <__swsetup_r+0x99>
810033a2:	8b 43 30             	mov    0x30(%ebx),%eax
810033a5:	83 ec 08             	sub    $0x8,%esp
810033a8:	50                   	push   %eax
810033a9:	ff 75 08             	push   0x8(%ebp)
810033ac:	e8 95 06 00 00       	call   81003a46 <_free_r>
810033b1:	83 c4 10             	add    $0x10,%esp
810033b4:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810033bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033bf:	83 e0 db             	and    $0xffffffdb,%eax
810033c2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033c6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810033cd:	8b 43 10             	mov    0x10(%ebx),%eax
810033d0:	89 03                	mov    %eax,(%ebx)
810033d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033d6:	83 c8 08             	or     $0x8,%eax
810033d9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033dd:	8b 43 10             	mov    0x10(%ebx),%eax
810033e0:	85 c0                	test   %eax,%eax
810033e2:	75 2b                	jne    8100340f <__swsetup_r+0xf4>
810033e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033e8:	98                   	cwtl   
810033e9:	25 00 02 00 00       	and    $0x200,%eax
810033ee:	85 c0                	test   %eax,%eax
810033f0:	74 0e                	je     81003400 <__swsetup_r+0xe5>
810033f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033f6:	98                   	cwtl   
810033f7:	25 80 00 00 00       	and    $0x80,%eax
810033fc:	85 c0                	test   %eax,%eax
810033fe:	74 0f                	je     8100340f <__swsetup_r+0xf4>
81003400:	83 ec 08             	sub    $0x8,%esp
81003403:	53                   	push   %ebx
81003404:	ff 75 08             	push   0x8(%ebp)
81003407:	e8 62 0c 00 00       	call   8100406e <__smakebuf_r>
8100340c:	83 c4 10             	add    $0x10,%esp
8100340f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003413:	98                   	cwtl   
81003414:	83 e0 01             	and    $0x1,%eax
81003417:	85 c0                	test   %eax,%eax
81003419:	74 11                	je     8100342c <__swsetup_r+0x111>
8100341b:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003422:	8b 43 14             	mov    0x14(%ebx),%eax
81003425:	f7 d8                	neg    %eax
81003427:	89 43 18             	mov    %eax,0x18(%ebx)
8100342a:	eb 19                	jmp    81003445 <__swsetup_r+0x12a>
8100342c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003430:	98                   	cwtl   
81003431:	83 e0 02             	and    $0x2,%eax
81003434:	85 c0                	test   %eax,%eax
81003436:	75 05                	jne    8100343d <__swsetup_r+0x122>
81003438:	8b 43 14             	mov    0x14(%ebx),%eax
8100343b:	eb 05                	jmp    81003442 <__swsetup_r+0x127>
8100343d:	b8 00 00 00 00       	mov    $0x0,%eax
81003442:	89 43 08             	mov    %eax,0x8(%ebx)
81003445:	8b 43 10             	mov    0x10(%ebx),%eax
81003448:	85 c0                	test   %eax,%eax
8100344a:	75 20                	jne    8100346c <__swsetup_r+0x151>
8100344c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003450:	98                   	cwtl   
81003451:	25 80 00 00 00       	and    $0x80,%eax
81003456:	85 c0                	test   %eax,%eax
81003458:	74 12                	je     8100346c <__swsetup_r+0x151>
8100345a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100345e:	83 c8 40             	or     $0x40,%eax
81003461:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003465:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100346a:	eb 05                	jmp    81003471 <__swsetup_r+0x156>
8100346c:	b8 00 00 00 00       	mov    $0x0,%eax
81003471:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003474:	c9                   	leave  
81003475:	c3                   	ret    

81003476 <_close_r>:
81003476:	55                   	push   %ebp
81003477:	89 e5                	mov    %esp,%ebp
81003479:	83 ec 18             	sub    $0x18,%esp
8100347c:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
81003483:	00 00 00 
81003486:	83 ec 0c             	sub    $0xc,%esp
81003489:	ff 75 0c             	push   0xc(%ebp)
8100348c:	e8 c6 ce ff ff       	call   81000357 <close>
81003491:	83 c4 10             	add    $0x10,%esp
81003494:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003497:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100349b:	75 14                	jne    810034b1 <_close_r+0x3b>
8100349d:	a1 90 55 00 81       	mov    0x81005590,%eax
810034a2:	85 c0                	test   %eax,%eax
810034a4:	74 0b                	je     810034b1 <_close_r+0x3b>
810034a6:	8b 15 90 55 00 81    	mov    0x81005590,%edx
810034ac:	8b 45 08             	mov    0x8(%ebp),%eax
810034af:	89 10                	mov    %edx,(%eax)
810034b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034b4:	c9                   	leave  
810034b5:	c3                   	ret    

810034b6 <_fclose_r>:
810034b6:	55                   	push   %ebp
810034b7:	89 e5                	mov    %esp,%ebp
810034b9:	53                   	push   %ebx
810034ba:	83 ec 14             	sub    $0x14,%esp
810034bd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810034c0:	85 db                	test   %ebx,%ebx
810034c2:	75 0a                	jne    810034ce <_fclose_r+0x18>
810034c4:	b8 00 00 00 00       	mov    $0x0,%eax
810034c9:	e9 ea 00 00 00       	jmp    810035b8 <_fclose_r+0x102>
810034ce:	8b 45 08             	mov    0x8(%ebp),%eax
810034d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810034d4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810034d8:	74 18                	je     810034f2 <_fclose_r+0x3c>
810034da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034dd:	8b 40 38             	mov    0x38(%eax),%eax
810034e0:	85 c0                	test   %eax,%eax
810034e2:	75 0e                	jne    810034f2 <_fclose_r+0x3c>
810034e4:	83 ec 0c             	sub    $0xc,%esp
810034e7:	ff 75 f0             	push   -0x10(%ebp)
810034ea:	e8 ef d3 ff ff       	call   810008de <__sinit>
810034ef:	83 c4 10             	add    $0x10,%esp
810034f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034f6:	66 85 c0             	test   %ax,%ax
810034f9:	75 0a                	jne    81003505 <_fclose_r+0x4f>
810034fb:	b8 00 00 00 00       	mov    $0x0,%eax
81003500:	e9 b3 00 00 00       	jmp    810035b8 <_fclose_r+0x102>
81003505:	83 ec 08             	sub    $0x8,%esp
81003508:	53                   	push   %ebx
81003509:	ff 75 08             	push   0x8(%ebp)
8100350c:	e8 c9 00 00 00       	call   810035da <__sflush_r>
81003511:	83 c4 10             	add    $0x10,%esp
81003514:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003517:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100351a:	85 c0                	test   %eax,%eax
8100351c:	74 1d                	je     8100353b <_fclose_r+0x85>
8100351e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003521:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003524:	83 ec 08             	sub    $0x8,%esp
81003527:	52                   	push   %edx
81003528:	ff 75 08             	push   0x8(%ebp)
8100352b:	ff d0                	call   *%eax
8100352d:	83 c4 10             	add    $0x10,%esp
81003530:	85 c0                	test   %eax,%eax
81003532:	79 07                	jns    8100353b <_fclose_r+0x85>
81003534:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100353b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100353f:	98                   	cwtl   
81003540:	25 80 00 00 00       	and    $0x80,%eax
81003545:	85 c0                	test   %eax,%eax
81003547:	74 12                	je     8100355b <_fclose_r+0xa5>
81003549:	8b 43 10             	mov    0x10(%ebx),%eax
8100354c:	83 ec 08             	sub    $0x8,%esp
8100354f:	50                   	push   %eax
81003550:	ff 75 08             	push   0x8(%ebp)
81003553:	e8 ee 04 00 00       	call   81003a46 <_free_r>
81003558:	83 c4 10             	add    $0x10,%esp
8100355b:	8b 43 30             	mov    0x30(%ebx),%eax
8100355e:	85 c0                	test   %eax,%eax
81003560:	74 23                	je     81003585 <_fclose_r+0xcf>
81003562:	8b 53 30             	mov    0x30(%ebx),%edx
81003565:	8d 43 40             	lea    0x40(%ebx),%eax
81003568:	39 c2                	cmp    %eax,%edx
8100356a:	74 12                	je     8100357e <_fclose_r+0xc8>
8100356c:	8b 43 30             	mov    0x30(%ebx),%eax
8100356f:	83 ec 08             	sub    $0x8,%esp
81003572:	50                   	push   %eax
81003573:	ff 75 08             	push   0x8(%ebp)
81003576:	e8 cb 04 00 00       	call   81003a46 <_free_r>
8100357b:	83 c4 10             	add    $0x10,%esp
8100357e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003585:	8b 43 44             	mov    0x44(%ebx),%eax
81003588:	85 c0                	test   %eax,%eax
8100358a:	74 19                	je     810035a5 <_fclose_r+0xef>
8100358c:	8b 43 44             	mov    0x44(%ebx),%eax
8100358f:	83 ec 08             	sub    $0x8,%esp
81003592:	50                   	push   %eax
81003593:	ff 75 08             	push   0x8(%ebp)
81003596:	e8 ab 04 00 00       	call   81003a46 <_free_r>
8100359b:	83 c4 10             	add    $0x10,%esp
8100359e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
810035a5:	e8 cd d3 ff ff       	call   81000977 <__sfp_lock_acquire>
810035aa:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810035b0:	e8 c8 d3 ff ff       	call   8100097d <__sfp_lock_release>
810035b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035b8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810035bb:	c9                   	leave  
810035bc:	c3                   	ret    

810035bd <fclose>:
810035bd:	55                   	push   %ebp
810035be:	89 e5                	mov    %esp,%ebp
810035c0:	83 ec 08             	sub    $0x8,%esp
810035c3:	8b 55 08             	mov    0x8(%ebp),%edx
810035c6:	a1 64 4f 00 81       	mov    0x81004f64,%eax
810035cb:	83 ec 08             	sub    $0x8,%esp
810035ce:	52                   	push   %edx
810035cf:	50                   	push   %eax
810035d0:	e8 e1 fe ff ff       	call   810034b6 <_fclose_r>
810035d5:	83 c4 10             	add    $0x10,%esp
810035d8:	c9                   	leave  
810035d9:	c3                   	ret    

810035da <__sflush_r>:
810035da:	55                   	push   %ebp
810035db:	89 e5                	mov    %esp,%ebp
810035dd:	57                   	push   %edi
810035de:	56                   	push   %esi
810035df:	53                   	push   %ebx
810035e0:	83 ec 1c             	sub    $0x1c,%esp
810035e3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810035e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035ea:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810035ee:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810035f2:	83 e0 08             	and    $0x8,%eax
810035f5:	85 c0                	test   %eax,%eax
810035f7:	0f 85 93 01 00 00    	jne    81003790 <__sflush_r+0x1b6>
810035fd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003601:	80 cc 08             	or     $0x8,%ah
81003604:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003608:	8b 43 04             	mov    0x4(%ebx),%eax
8100360b:	85 c0                	test   %eax,%eax
8100360d:	7f 0b                	jg     8100361a <__sflush_r+0x40>
8100360f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81003612:	85 c0                	test   %eax,%eax
81003614:	0f 8e 6f 01 00 00    	jle    81003789 <__sflush_r+0x1af>
8100361a:	8b 43 28             	mov    0x28(%ebx),%eax
8100361d:	85 c0                	test   %eax,%eax
8100361f:	0f 84 64 01 00 00    	je     81003789 <__sflush_r+0x1af>
81003625:	8b 45 08             	mov    0x8(%ebp),%eax
81003628:	8b 00                	mov    (%eax),%eax
8100362a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100362d:	8b 45 08             	mov    0x8(%ebp),%eax
81003630:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003636:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100363a:	98                   	cwtl   
8100363b:	25 00 10 00 00       	and    $0x1000,%eax
81003640:	85 c0                	test   %eax,%eax
81003642:	74 08                	je     8100364c <__sflush_r+0x72>
81003644:	8b 43 50             	mov    0x50(%ebx),%eax
81003647:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100364a:	eb 64                	jmp    810036b0 <__sflush_r+0xd6>
8100364c:	8b 43 28             	mov    0x28(%ebx),%eax
8100364f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003652:	6a 01                	push   $0x1
81003654:	6a 00                	push   $0x0
81003656:	52                   	push   %edx
81003657:	ff 75 08             	push   0x8(%ebp)
8100365a:	ff d0                	call   *%eax
8100365c:	83 c4 10             	add    $0x10,%esp
8100365f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003662:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003666:	75 48                	jne    810036b0 <__sflush_r+0xd6>
81003668:	8b 45 08             	mov    0x8(%ebp),%eax
8100366b:	8b 00                	mov    (%eax),%eax
8100366d:	85 c0                	test   %eax,%eax
8100366f:	74 3f                	je     810036b0 <__sflush_r+0xd6>
81003671:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003678:	8b 45 08             	mov    0x8(%ebp),%eax
8100367b:	8b 00                	mov    (%eax),%eax
8100367d:	83 f8 1d             	cmp    $0x1d,%eax
81003680:	74 0a                	je     8100368c <__sflush_r+0xb2>
81003682:	8b 45 08             	mov    0x8(%ebp),%eax
81003685:	8b 00                	mov    (%eax),%eax
81003687:	83 f8 16             	cmp    $0x16,%eax
8100368a:	75 11                	jne    8100369d <__sflush_r+0xc3>
8100368c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003693:	8b 45 08             	mov    0x8(%ebp),%eax
81003696:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003699:	89 10                	mov    %edx,(%eax)
8100369b:	eb 0b                	jmp    810036a8 <__sflush_r+0xce>
8100369d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036a1:	83 c8 40             	or     $0x40,%eax
810036a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036a8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036ab:	e9 48 01 00 00       	jmp    810037f8 <__sflush_r+0x21e>
810036b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036b4:	98                   	cwtl   
810036b5:	83 e0 04             	and    $0x4,%eax
810036b8:	85 c0                	test   %eax,%eax
810036ba:	74 13                	je     810036cf <__sflush_r+0xf5>
810036bc:	8b 43 04             	mov    0x4(%ebx),%eax
810036bf:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036c2:	8b 43 30             	mov    0x30(%ebx),%eax
810036c5:	85 c0                	test   %eax,%eax
810036c7:	74 06                	je     810036cf <__sflush_r+0xf5>
810036c9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810036cc:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810036cf:	8b 43 28             	mov    0x28(%ebx),%eax
810036d2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036d5:	6a 00                	push   $0x0
810036d7:	ff 75 e4             	push   -0x1c(%ebp)
810036da:	52                   	push   %edx
810036db:	ff 75 08             	push   0x8(%ebp)
810036de:	ff d0                	call   *%eax
810036e0:	83 c4 10             	add    $0x10,%esp
810036e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810036e6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810036ea:	75 1d                	jne    81003709 <__sflush_r+0x12f>
810036ec:	8b 45 08             	mov    0x8(%ebp),%eax
810036ef:	8b 00                	mov    (%eax),%eax
810036f1:	85 c0                	test   %eax,%eax
810036f3:	74 14                	je     81003709 <__sflush_r+0x12f>
810036f5:	8b 45 08             	mov    0x8(%ebp),%eax
810036f8:	8b 00                	mov    (%eax),%eax
810036fa:	83 f8 1d             	cmp    $0x1d,%eax
810036fd:	74 0a                	je     81003709 <__sflush_r+0x12f>
810036ff:	8b 45 08             	mov    0x8(%ebp),%eax
81003702:	8b 00                	mov    (%eax),%eax
81003704:	83 f8 16             	cmp    $0x16,%eax
81003707:	75 6e                	jne    81003777 <__sflush_r+0x19d>
81003709:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100370d:	80 e4 f7             	and    $0xf7,%ah
81003710:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003714:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100371b:	8b 43 10             	mov    0x10(%ebx),%eax
8100371e:	89 03                	mov    %eax,(%ebx)
81003720:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003724:	98                   	cwtl   
81003725:	25 00 10 00 00       	and    $0x1000,%eax
8100372a:	85 c0                	test   %eax,%eax
8100372c:	74 15                	je     81003743 <__sflush_r+0x169>
8100372e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003732:	75 09                	jne    8100373d <__sflush_r+0x163>
81003734:	8b 45 08             	mov    0x8(%ebp),%eax
81003737:	8b 00                	mov    (%eax),%eax
81003739:	85 c0                	test   %eax,%eax
8100373b:	75 06                	jne    81003743 <__sflush_r+0x169>
8100373d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003740:	89 43 50             	mov    %eax,0x50(%ebx)
81003743:	8b 45 08             	mov    0x8(%ebp),%eax
81003746:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003749:	89 10                	mov    %edx,(%eax)
8100374b:	8b 43 30             	mov    0x30(%ebx),%eax
8100374e:	85 c0                	test   %eax,%eax
81003750:	74 37                	je     81003789 <__sflush_r+0x1af>
81003752:	8b 53 30             	mov    0x30(%ebx),%edx
81003755:	8d 43 40             	lea    0x40(%ebx),%eax
81003758:	39 c2                	cmp    %eax,%edx
8100375a:	74 12                	je     8100376e <__sflush_r+0x194>
8100375c:	8b 43 30             	mov    0x30(%ebx),%eax
8100375f:	83 ec 08             	sub    $0x8,%esp
81003762:	50                   	push   %eax
81003763:	ff 75 08             	push   0x8(%ebp)
81003766:	e8 db 02 00 00       	call   81003a46 <_free_r>
8100376b:	83 c4 10             	add    $0x10,%esp
8100376e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003775:	eb 12                	jmp    81003789 <__sflush_r+0x1af>
81003777:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100377b:	83 c8 40             	or     $0x40,%eax
8100377e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003782:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003787:	eb 6f                	jmp    810037f8 <__sflush_r+0x21e>
81003789:	b8 00 00 00 00       	mov    $0x0,%eax
8100378e:	eb 68                	jmp    810037f8 <__sflush_r+0x21e>
81003790:	8b 73 10             	mov    0x10(%ebx),%esi
81003793:	85 f6                	test   %esi,%esi
81003795:	75 07                	jne    8100379e <__sflush_r+0x1c4>
81003797:	b8 00 00 00 00       	mov    $0x0,%eax
8100379c:	eb 5a                	jmp    810037f8 <__sflush_r+0x21e>
8100379e:	8b 03                	mov    (%ebx),%eax
810037a0:	29 f0                	sub    %esi,%eax
810037a2:	89 c7                	mov    %eax,%edi
810037a4:	89 33                	mov    %esi,(%ebx)
810037a6:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810037aa:	83 e0 03             	and    $0x3,%eax
810037ad:	85 c0                	test   %eax,%eax
810037af:	75 05                	jne    810037b6 <__sflush_r+0x1dc>
810037b1:	8b 43 14             	mov    0x14(%ebx),%eax
810037b4:	eb 05                	jmp    810037bb <__sflush_r+0x1e1>
810037b6:	b8 00 00 00 00       	mov    $0x0,%eax
810037bb:	89 43 08             	mov    %eax,0x8(%ebx)
810037be:	eb 2f                	jmp    810037ef <__sflush_r+0x215>
810037c0:	8b 43 24             	mov    0x24(%ebx),%eax
810037c3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810037c6:	57                   	push   %edi
810037c7:	56                   	push   %esi
810037c8:	52                   	push   %edx
810037c9:	ff 75 08             	push   0x8(%ebp)
810037cc:	ff d0                	call   *%eax
810037ce:	83 c4 10             	add    $0x10,%esp
810037d1:	85 c0                	test   %eax,%eax
810037d3:	7f 12                	jg     810037e7 <__sflush_r+0x20d>
810037d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810037d9:	83 c8 40             	or     $0x40,%eax
810037dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810037e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810037e5:	eb 11                	jmp    810037f8 <__sflush_r+0x21e>
810037e7:	89 c1                	mov    %eax,%ecx
810037e9:	89 c8                	mov    %ecx,%eax
810037eb:	01 c6                	add    %eax,%esi
810037ed:	29 cf                	sub    %ecx,%edi
810037ef:	85 ff                	test   %edi,%edi
810037f1:	7f cd                	jg     810037c0 <__sflush_r+0x1e6>
810037f3:	b8 00 00 00 00       	mov    $0x0,%eax
810037f8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810037fb:	5b                   	pop    %ebx
810037fc:	5e                   	pop    %esi
810037fd:	5f                   	pop    %edi
810037fe:	5d                   	pop    %ebp
810037ff:	c3                   	ret    

81003800 <_fflush_r>:
81003800:	55                   	push   %ebp
81003801:	89 e5                	mov    %esp,%ebp
81003803:	53                   	push   %ebx
81003804:	83 ec 14             	sub    $0x14,%esp
81003807:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100380a:	8b 45 08             	mov    0x8(%ebp),%eax
8100380d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003810:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003814:	74 18                	je     8100382e <_fflush_r+0x2e>
81003816:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003819:	8b 40 38             	mov    0x38(%eax),%eax
8100381c:	85 c0                	test   %eax,%eax
8100381e:	75 0e                	jne    8100382e <_fflush_r+0x2e>
81003820:	83 ec 0c             	sub    $0xc,%esp
81003823:	ff 75 f4             	push   -0xc(%ebp)
81003826:	e8 b3 d0 ff ff       	call   810008de <__sinit>
8100382b:	83 c4 10             	add    $0x10,%esp
8100382e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003832:	66 85 c0             	test   %ax,%ax
81003835:	75 07                	jne    8100383e <_fflush_r+0x3e>
81003837:	b8 00 00 00 00       	mov    $0x0,%eax
8100383c:	eb 15                	jmp    81003853 <_fflush_r+0x53>
8100383e:	83 ec 08             	sub    $0x8,%esp
81003841:	53                   	push   %ebx
81003842:	ff 75 08             	push   0x8(%ebp)
81003845:	e8 90 fd ff ff       	call   810035da <__sflush_r>
8100384a:	83 c4 10             	add    $0x10,%esp
8100384d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003850:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003853:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003856:	c9                   	leave  
81003857:	c3                   	ret    

81003858 <fflush>:
81003858:	55                   	push   %ebp
81003859:	89 e5                	mov    %esp,%ebp
8100385b:	83 ec 08             	sub    $0x8,%esp
8100385e:	8b 55 08             	mov    0x8(%ebp),%edx
81003861:	85 d2                	test   %edx,%edx
81003863:	75 18                	jne    8100387d <fflush+0x25>
81003865:	a1 c4 47 00 81       	mov    0x810047c4,%eax
8100386a:	83 ec 08             	sub    $0x8,%esp
8100386d:	68 00 38 00 81       	push   $0x81003800
81003872:	50                   	push   %eax
81003873:	e8 79 d6 ff ff       	call   81000ef1 <_fwalk_reent>
81003878:	83 c4 10             	add    $0x10,%esp
8100387b:	eb 12                	jmp    8100388f <fflush+0x37>
8100387d:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81003882:	83 ec 08             	sub    $0x8,%esp
81003885:	52                   	push   %edx
81003886:	50                   	push   %eax
81003887:	e8 74 ff ff ff       	call   81003800 <_fflush_r>
8100388c:	83 c4 10             	add    $0x10,%esp
8100388f:	c9                   	leave  
81003890:	c3                   	ret    

81003891 <__sputc_r>:
81003891:	55                   	push   %ebp
81003892:	89 e5                	mov    %esp,%ebp
81003894:	83 ec 08             	sub    $0x8,%esp
81003897:	8b 45 10             	mov    0x10(%ebp),%eax
8100389a:	8b 40 08             	mov    0x8(%eax),%eax
8100389d:	8d 50 ff             	lea    -0x1(%eax),%edx
810038a0:	8b 45 10             	mov    0x10(%ebp),%eax
810038a3:	89 50 08             	mov    %edx,0x8(%eax)
810038a6:	8b 45 10             	mov    0x10(%ebp),%eax
810038a9:	8b 40 08             	mov    0x8(%eax),%eax
810038ac:	85 c0                	test   %eax,%eax
810038ae:	79 17                	jns    810038c7 <__sputc_r+0x36>
810038b0:	8b 45 10             	mov    0x10(%ebp),%eax
810038b3:	8b 50 08             	mov    0x8(%eax),%edx
810038b6:	8b 45 10             	mov    0x10(%ebp),%eax
810038b9:	8b 40 18             	mov    0x18(%eax),%eax
810038bc:	39 c2                	cmp    %eax,%edx
810038be:	7c 21                	jl     810038e1 <__sputc_r+0x50>
810038c0:	8b 45 0c             	mov    0xc(%ebp),%eax
810038c3:	3c 0a                	cmp    $0xa,%al
810038c5:	74 1a                	je     810038e1 <__sputc_r+0x50>
810038c7:	8b 45 10             	mov    0x10(%ebp),%eax
810038ca:	8b 00                	mov    (%eax),%eax
810038cc:	8d 48 01             	lea    0x1(%eax),%ecx
810038cf:	8b 55 10             	mov    0x10(%ebp),%edx
810038d2:	89 0a                	mov    %ecx,(%edx)
810038d4:	8b 55 0c             	mov    0xc(%ebp),%edx
810038d7:	88 10                	mov    %dl,(%eax)
810038d9:	0f b6 00             	movzbl (%eax),%eax
810038dc:	0f b6 c0             	movzbl %al,%eax
810038df:	eb 14                	jmp    810038f5 <__sputc_r+0x64>
810038e1:	83 ec 04             	sub    $0x4,%esp
810038e4:	ff 75 10             	push   0x10(%ebp)
810038e7:	ff 75 0c             	push   0xc(%ebp)
810038ea:	ff 75 08             	push   0x8(%ebp)
810038ed:	e8 b0 f8 ff ff       	call   810031a2 <__swbuf_r>
810038f2:	83 c4 10             	add    $0x10,%esp
810038f5:	c9                   	leave  
810038f6:	c3                   	ret    

810038f7 <__fputwc>:
810038f7:	55                   	push   %ebp
810038f8:	89 e5                	mov    %esp,%ebp
810038fa:	83 ec 18             	sub    $0x18,%esp
810038fd:	e8 f3 06 00 00       	call   81003ff5 <__locale_mb_cur_max>
81003902:	83 f8 01             	cmp    $0x1,%eax
81003905:	75 1e                	jne    81003925 <__fputwc+0x2e>
81003907:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100390b:	7e 18                	jle    81003925 <__fputwc+0x2e>
8100390d:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81003914:	7f 0f                	jg     81003925 <__fputwc+0x2e>
81003916:	8b 45 0c             	mov    0xc(%ebp),%eax
81003919:	88 45 ef             	mov    %al,-0x11(%ebp)
8100391c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003923:	eb 3c                	jmp    81003961 <__fputwc+0x6a>
81003925:	8b 45 10             	mov    0x10(%ebp),%eax
81003928:	83 c0 5c             	add    $0x5c,%eax
8100392b:	50                   	push   %eax
8100392c:	ff 75 0c             	push   0xc(%ebp)
8100392f:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003932:	50                   	push   %eax
81003933:	ff 75 08             	push   0x8(%ebp)
81003936:	e8 df 0b 00 00       	call   8100451a <_wcrtomb_r>
8100393b:	83 c4 10             	add    $0x10,%esp
8100393e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003941:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003945:	75 1a                	jne    81003961 <__fputwc+0x6a>
81003947:	8b 45 10             	mov    0x10(%ebp),%eax
8100394a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100394e:	83 c8 40             	or     $0x40,%eax
81003951:	89 c2                	mov    %eax,%edx
81003953:	8b 45 10             	mov    0x10(%ebp),%eax
81003956:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100395a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100395f:	eb 44                	jmp    810039a5 <__fputwc+0xae>
81003961:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003968:	eb 30                	jmp    8100399a <__fputwc+0xa3>
8100396a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100396d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003970:	01 d0                	add    %edx,%eax
81003972:	0f b6 00             	movzbl (%eax),%eax
81003975:	0f b6 c0             	movzbl %al,%eax
81003978:	83 ec 04             	sub    $0x4,%esp
8100397b:	ff 75 10             	push   0x10(%ebp)
8100397e:	50                   	push   %eax
8100397f:	ff 75 08             	push   0x8(%ebp)
81003982:	e8 0a ff ff ff       	call   81003891 <__sputc_r>
81003987:	83 c4 10             	add    $0x10,%esp
8100398a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100398d:	75 07                	jne    81003996 <__fputwc+0x9f>
8100398f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003994:	eb 0f                	jmp    810039a5 <__fputwc+0xae>
81003996:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100399a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100399d:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810039a0:	72 c8                	jb     8100396a <__fputwc+0x73>
810039a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a5:	c9                   	leave  
810039a6:	c3                   	ret    

810039a7 <_fputwc_r>:
810039a7:	55                   	push   %ebp
810039a8:	89 e5                	mov    %esp,%ebp
810039aa:	83 ec 18             	sub    $0x18,%esp
810039ad:	8b 45 10             	mov    0x10(%ebp),%eax
810039b0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039b4:	98                   	cwtl   
810039b5:	25 00 20 00 00       	and    $0x2000,%eax
810039ba:	85 c0                	test   %eax,%eax
810039bc:	75 24                	jne    810039e2 <_fputwc_r+0x3b>
810039be:	8b 45 10             	mov    0x10(%ebp),%eax
810039c1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039c5:	80 cc 20             	or     $0x20,%ah
810039c8:	89 c2                	mov    %eax,%edx
810039ca:	8b 45 10             	mov    0x10(%ebp),%eax
810039cd:	66 89 50 0c          	mov    %dx,0xc(%eax)
810039d1:	8b 45 10             	mov    0x10(%ebp),%eax
810039d4:	8b 40 64             	mov    0x64(%eax),%eax
810039d7:	80 cc 20             	or     $0x20,%ah
810039da:	89 c2                	mov    %eax,%edx
810039dc:	8b 45 10             	mov    0x10(%ebp),%eax
810039df:	89 50 64             	mov    %edx,0x64(%eax)
810039e2:	83 ec 04             	sub    $0x4,%esp
810039e5:	ff 75 10             	push   0x10(%ebp)
810039e8:	ff 75 0c             	push   0xc(%ebp)
810039eb:	ff 75 08             	push   0x8(%ebp)
810039ee:	e8 04 ff ff ff       	call   810038f7 <__fputwc>
810039f3:	83 c4 10             	add    $0x10,%esp
810039f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810039f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039fc:	c9                   	leave  
810039fd:	c3                   	ret    

810039fe <fputwc>:
810039fe:	55                   	push   %ebp
810039ff:	89 e5                	mov    %esp,%ebp
81003a01:	83 ec 18             	sub    $0x18,%esp
81003a04:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81003a09:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a0f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a12:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81003a16:	74 18                	je     81003a30 <fputwc+0x32>
81003a18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a1b:	8b 40 38             	mov    0x38(%eax),%eax
81003a1e:	85 c0                	test   %eax,%eax
81003a20:	75 0e                	jne    81003a30 <fputwc+0x32>
81003a22:	83 ec 0c             	sub    $0xc,%esp
81003a25:	ff 75 f0             	push   -0x10(%ebp)
81003a28:	e8 b1 ce ff ff       	call   810008de <__sinit>
81003a2d:	83 c4 10             	add    $0x10,%esp
81003a30:	83 ec 04             	sub    $0x4,%esp
81003a33:	ff 75 0c             	push   0xc(%ebp)
81003a36:	ff 75 08             	push   0x8(%ebp)
81003a39:	ff 75 f4             	push   -0xc(%ebp)
81003a3c:	e8 66 ff ff ff       	call   810039a7 <_fputwc_r>
81003a41:	83 c4 10             	add    $0x10,%esp
81003a44:	c9                   	leave  
81003a45:	c3                   	ret    

81003a46 <_free_r>:
81003a46:	55                   	push   %ebp
81003a47:	89 e5                	mov    %esp,%ebp
81003a49:	53                   	push   %ebx
81003a4a:	83 ec 34             	sub    $0x34,%esp
81003a4d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003a51:	0f 84 c4 03 00 00    	je     81003e1b <_free_r+0x3d5>
81003a57:	83 ec 0c             	sub    $0xc,%esp
81003a5a:	ff 75 08             	push   0x8(%ebp)
81003a5d:	e8 b3 e1 ff ff       	call   81001c15 <__malloc_lock>
81003a62:	83 c4 10             	add    $0x10,%esp
81003a65:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a68:	83 e8 08             	sub    $0x8,%eax
81003a6b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003a6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a71:	8b 40 04             	mov    0x4(%eax),%eax
81003a74:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003a77:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a7a:	83 e0 fe             	and    $0xfffffffe,%eax
81003a7d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003a80:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a83:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003a86:	01 d0                	add    %edx,%eax
81003a88:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003a8b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a8e:	8b 40 04             	mov    0x4(%eax),%eax
81003a91:	83 e0 fc             	and    $0xfffffffc,%eax
81003a94:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003a97:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003a9c:	8b 40 08             	mov    0x8(%eax),%eax
81003a9f:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003aa2:	0f 85 94 00 00 00    	jne    81003b3c <_free_r+0xf6>
81003aa8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003aab:	01 45 f0             	add    %eax,-0x10(%ebp)
81003aae:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003ab1:	83 e0 01             	and    $0x1,%eax
81003ab4:	85 c0                	test   %eax,%eax
81003ab6:	75 3a                	jne    81003af2 <_free_r+0xac>
81003ab8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003abb:	8b 00                	mov    (%eax),%eax
81003abd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003ac0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003ac3:	f7 d8                	neg    %eax
81003ac5:	01 45 f4             	add    %eax,-0xc(%ebp)
81003ac8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003acb:	01 45 f0             	add    %eax,-0x10(%ebp)
81003ace:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad1:	8b 40 0c             	mov    0xc(%eax),%eax
81003ad4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ada:	8b 40 08             	mov    0x8(%eax),%eax
81003add:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ae0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ae3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003ae6:	89 50 0c             	mov    %edx,0xc(%eax)
81003ae9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003aec:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003aef:	89 50 08             	mov    %edx,0x8(%eax)
81003af2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003af5:	83 c8 01             	or     $0x1,%eax
81003af8:	89 c2                	mov    %eax,%edx
81003afa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003afd:	89 50 04             	mov    %edx,0x4(%eax)
81003b00:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
81003b05:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b08:	89 42 08             	mov    %eax,0x8(%edx)
81003b0b:	a1 88 53 00 81       	mov    0x81005388,%eax
81003b10:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003b13:	72 14                	jb     81003b29 <_free_r+0xe3>
81003b15:	a1 40 55 00 81       	mov    0x81005540,%eax
81003b1a:	83 ec 08             	sub    $0x8,%esp
81003b1d:	50                   	push   %eax
81003b1e:	ff 75 08             	push   0x8(%ebp)
81003b21:	e8 fb 02 00 00       	call   81003e21 <_malloc_trim_r>
81003b26:	83 c4 10             	add    $0x10,%esp
81003b29:	83 ec 0c             	sub    $0xc,%esp
81003b2c:	ff 75 08             	push   0x8(%ebp)
81003b2f:	e8 e7 e0 ff ff       	call   81001c1b <__malloc_unlock>
81003b34:	83 c4 10             	add    $0x10,%esp
81003b37:	e9 e0 02 00 00       	jmp    81003e1c <_free_r+0x3d6>
81003b3c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b3f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b42:	89 50 04             	mov    %edx,0x4(%eax)
81003b45:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003b4c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003b4f:	83 e0 01             	and    $0x1,%eax
81003b52:	85 c0                	test   %eax,%eax
81003b54:	75 52                	jne    81003ba8 <_free_r+0x162>
81003b56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b59:	8b 00                	mov    (%eax),%eax
81003b5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003b5e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b61:	f7 d8                	neg    %eax
81003b63:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b66:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003b69:	01 45 f0             	add    %eax,-0x10(%ebp)
81003b6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b6f:	8b 40 08             	mov    0x8(%eax),%eax
81003b72:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81003b77:	39 d0                	cmp    %edx,%eax
81003b79:	75 09                	jne    81003b84 <_free_r+0x13e>
81003b7b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003b82:	eb 24                	jmp    81003ba8 <_free_r+0x162>
81003b84:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b87:	8b 40 0c             	mov    0xc(%eax),%eax
81003b8a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b90:	8b 40 08             	mov    0x8(%eax),%eax
81003b93:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003b96:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b99:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b9c:	89 50 0c             	mov    %edx,0xc(%eax)
81003b9f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ba2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003ba5:	89 50 08             	mov    %edx,0x8(%eax)
81003ba8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003bab:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bae:	01 d0                	add    %edx,%eax
81003bb0:	8b 40 04             	mov    0x4(%eax),%eax
81003bb3:	83 e0 01             	and    $0x1,%eax
81003bb6:	85 c0                	test   %eax,%eax
81003bb8:	75 75                	jne    81003c2f <_free_r+0x1e9>
81003bba:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003bbd:	01 45 f0             	add    %eax,-0x10(%ebp)
81003bc0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003bc4:	75 45                	jne    81003c0b <_free_r+0x1c5>
81003bc6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003bc9:	8b 40 08             	mov    0x8(%eax),%eax
81003bcc:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81003bd1:	39 d0                	cmp    %edx,%eax
81003bd3:	75 36                	jne    81003c0b <_free_r+0x1c5>
81003bd5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003bdc:	b8 88 4f 00 81       	mov    $0x81004f88,%eax
81003be1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003be4:	89 50 0c             	mov    %edx,0xc(%eax)
81003be7:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81003bec:	8b 40 0c             	mov    0xc(%eax),%eax
81003bef:	89 42 08             	mov    %eax,0x8(%edx)
81003bf2:	ba 88 4f 00 81       	mov    $0x81004f88,%edx
81003bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bfa:	89 50 0c             	mov    %edx,0xc(%eax)
81003bfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c00:	8b 50 0c             	mov    0xc(%eax),%edx
81003c03:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c06:	89 50 08             	mov    %edx,0x8(%eax)
81003c09:	eb 24                	jmp    81003c2f <_free_r+0x1e9>
81003c0b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c0e:	8b 40 0c             	mov    0xc(%eax),%eax
81003c11:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c14:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c17:	8b 40 08             	mov    0x8(%eax),%eax
81003c1a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c1d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c20:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003c23:	89 50 0c             	mov    %edx,0xc(%eax)
81003c26:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c29:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c2c:	89 50 08             	mov    %edx,0x8(%eax)
81003c2f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c32:	83 c8 01             	or     $0x1,%eax
81003c35:	89 c2                	mov    %eax,%edx
81003c37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c3a:	89 50 04             	mov    %edx,0x4(%eax)
81003c3d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003c40:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c43:	01 c2                	add    %eax,%edx
81003c45:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c48:	89 02                	mov    %eax,(%edx)
81003c4a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003c4e:	0f 85 b7 01 00 00    	jne    81003e0b <_free_r+0x3c5>
81003c54:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003c5b:	77 7f                	ja     81003cdc <_free_r+0x296>
81003c5d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c60:	c1 e8 03             	shr    $0x3,%eax
81003c63:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003c66:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003c6b:	8b 58 04             	mov    0x4(%eax),%ebx
81003c6e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c71:	8d 50 03             	lea    0x3(%eax),%edx
81003c74:	85 c0                	test   %eax,%eax
81003c76:	0f 48 c2             	cmovs  %edx,%eax
81003c79:	c1 f8 02             	sar    $0x2,%eax
81003c7c:	ba 01 00 00 00       	mov    $0x1,%edx
81003c81:	89 c1                	mov    %eax,%ecx
81003c83:	d3 e2                	shl    %cl,%edx
81003c85:	89 d0                	mov    %edx,%eax
81003c87:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
81003c8c:	09 d8                	or     %ebx,%eax
81003c8e:	89 42 04             	mov    %eax,0x4(%edx)
81003c91:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c94:	83 c0 01             	add    $0x1,%eax
81003c97:	01 c0                	add    %eax,%eax
81003c99:	c1 e0 02             	shl    $0x2,%eax
81003c9c:	05 80 4f 00 81       	add    $0x81004f80,%eax
81003ca1:	83 e8 08             	sub    $0x8,%eax
81003ca4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003ca7:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003caa:	8b 40 08             	mov    0x8(%eax),%eax
81003cad:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003cb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cb3:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003cb6:	89 50 0c             	mov    %edx,0xc(%eax)
81003cb9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cbc:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003cbf:	89 50 08             	mov    %edx,0x8(%eax)
81003cc2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cc5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003cc8:	89 50 08             	mov    %edx,0x8(%eax)
81003ccb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cce:	8b 50 08             	mov    0x8(%eax),%edx
81003cd1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cd4:	89 50 0c             	mov    %edx,0xc(%eax)
81003cd7:	e9 2f 01 00 00       	jmp    81003e0b <_free_r+0x3c5>
81003cdc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cdf:	c1 e8 09             	shr    $0x9,%eax
81003ce2:	85 c0                	test   %eax,%eax
81003ce4:	75 08                	jne    81003cee <_free_r+0x2a8>
81003ce6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ce9:	c1 e8 03             	shr    $0x3,%eax
81003cec:	eb 77                	jmp    81003d65 <_free_r+0x31f>
81003cee:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cf1:	c1 e8 09             	shr    $0x9,%eax
81003cf4:	83 f8 04             	cmp    $0x4,%eax
81003cf7:	77 0b                	ja     81003d04 <_free_r+0x2be>
81003cf9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003cfc:	c1 e8 06             	shr    $0x6,%eax
81003cff:	83 c0 38             	add    $0x38,%eax
81003d02:	eb 61                	jmp    81003d65 <_free_r+0x31f>
81003d04:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d07:	c1 e8 09             	shr    $0x9,%eax
81003d0a:	83 f8 14             	cmp    $0x14,%eax
81003d0d:	77 0b                	ja     81003d1a <_free_r+0x2d4>
81003d0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d12:	c1 e8 09             	shr    $0x9,%eax
81003d15:	83 c0 5b             	add    $0x5b,%eax
81003d18:	eb 4b                	jmp    81003d65 <_free_r+0x31f>
81003d1a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d1d:	c1 e8 09             	shr    $0x9,%eax
81003d20:	83 f8 54             	cmp    $0x54,%eax
81003d23:	77 0b                	ja     81003d30 <_free_r+0x2ea>
81003d25:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d28:	c1 e8 0c             	shr    $0xc,%eax
81003d2b:	83 c0 6e             	add    $0x6e,%eax
81003d2e:	eb 35                	jmp    81003d65 <_free_r+0x31f>
81003d30:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d33:	c1 e8 09             	shr    $0x9,%eax
81003d36:	3d 54 01 00 00       	cmp    $0x154,%eax
81003d3b:	77 0b                	ja     81003d48 <_free_r+0x302>
81003d3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d40:	c1 e8 0f             	shr    $0xf,%eax
81003d43:	83 c0 77             	add    $0x77,%eax
81003d46:	eb 1d                	jmp    81003d65 <_free_r+0x31f>
81003d48:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d4b:	c1 e8 09             	shr    $0x9,%eax
81003d4e:	3d 54 05 00 00       	cmp    $0x554,%eax
81003d53:	77 0b                	ja     81003d60 <_free_r+0x31a>
81003d55:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d58:	c1 e8 12             	shr    $0x12,%eax
81003d5b:	83 c0 7c             	add    $0x7c,%eax
81003d5e:	eb 05                	jmp    81003d65 <_free_r+0x31f>
81003d60:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003d65:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003d68:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d6b:	83 c0 01             	add    $0x1,%eax
81003d6e:	01 c0                	add    %eax,%eax
81003d70:	c1 e0 02             	shl    $0x2,%eax
81003d73:	05 80 4f 00 81       	add    $0x81004f80,%eax
81003d78:	83 e8 08             	sub    $0x8,%eax
81003d7b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d7e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003d81:	8b 40 08             	mov    0x8(%eax),%eax
81003d84:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d87:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003d8a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d8d:	75 36                	jne    81003dc5 <_free_r+0x37f>
81003d8f:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003d94:	8b 58 04             	mov    0x4(%eax),%ebx
81003d97:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003d9a:	8d 50 03             	lea    0x3(%eax),%edx
81003d9d:	85 c0                	test   %eax,%eax
81003d9f:	0f 48 c2             	cmovs  %edx,%eax
81003da2:	c1 f8 02             	sar    $0x2,%eax
81003da5:	ba 01 00 00 00       	mov    $0x1,%edx
81003daa:	89 c1                	mov    %eax,%ecx
81003dac:	d3 e2                	shl    %cl,%edx
81003dae:	89 d0                	mov    %edx,%eax
81003db0:	ba 80 4f 00 81       	mov    $0x81004f80,%edx
81003db5:	09 d8                	or     %ebx,%eax
81003db7:	89 42 04             	mov    %eax,0x4(%edx)
81003dba:	eb 28                	jmp    81003de4 <_free_r+0x39e>
81003dbc:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dbf:	8b 40 08             	mov    0x8(%eax),%eax
81003dc2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003dc5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dc8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003dcb:	74 0e                	je     81003ddb <_free_r+0x395>
81003dcd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dd0:	8b 40 04             	mov    0x4(%eax),%eax
81003dd3:	83 e0 fc             	and    $0xfffffffc,%eax
81003dd6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003dd9:	72 e1                	jb     81003dbc <_free_r+0x376>
81003ddb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dde:	8b 40 0c             	mov    0xc(%eax),%eax
81003de1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003de4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003de7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003dea:	89 50 0c             	mov    %edx,0xc(%eax)
81003ded:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003df0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003df3:	89 50 08             	mov    %edx,0x8(%eax)
81003df6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003df9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003dfc:	89 50 08             	mov    %edx,0x8(%eax)
81003dff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e02:	8b 50 08             	mov    0x8(%eax),%edx
81003e05:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e08:	89 50 0c             	mov    %edx,0xc(%eax)
81003e0b:	83 ec 0c             	sub    $0xc,%esp
81003e0e:	ff 75 08             	push   0x8(%ebp)
81003e11:	e8 05 de ff ff       	call   81001c1b <__malloc_unlock>
81003e16:	83 c4 10             	add    $0x10,%esp
81003e19:	eb 01                	jmp    81003e1c <_free_r+0x3d6>
81003e1b:	90                   	nop
81003e1c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e1f:	c9                   	leave  
81003e20:	c3                   	ret    

81003e21 <_malloc_trim_r>:
81003e21:	55                   	push   %ebp
81003e22:	89 e5                	mov    %esp,%ebp
81003e24:	83 ec 28             	sub    $0x28,%esp
81003e27:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003e2e:	83 ec 0c             	sub    $0xc,%esp
81003e31:	ff 75 08             	push   0x8(%ebp)
81003e34:	e8 dc dd ff ff       	call   81001c15 <__malloc_lock>
81003e39:	83 c4 10             	add    $0x10,%esp
81003e3c:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003e41:	8b 40 08             	mov    0x8(%eax),%eax
81003e44:	8b 40 04             	mov    0x4(%eax),%eax
81003e47:	83 e0 fc             	and    $0xfffffffc,%eax
81003e4a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003e4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e50:	2b 45 0c             	sub    0xc(%ebp),%eax
81003e53:	89 c2                	mov    %eax,%edx
81003e55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e58:	01 d0                	add    %edx,%eax
81003e5a:	83 e8 11             	sub    $0x11,%eax
81003e5d:	ba 00 00 00 00       	mov    $0x0,%edx
81003e62:	f7 75 f4             	divl   -0xc(%ebp)
81003e65:	83 e8 01             	sub    $0x1,%eax
81003e68:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003e6c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003e6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e72:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003e75:	7d 18                	jge    81003e8f <_malloc_trim_r+0x6e>
81003e77:	83 ec 0c             	sub    $0xc,%esp
81003e7a:	ff 75 08             	push   0x8(%ebp)
81003e7d:	e8 99 dd ff ff       	call   81001c1b <__malloc_unlock>
81003e82:	83 c4 10             	add    $0x10,%esp
81003e85:	b8 00 00 00 00       	mov    $0x0,%eax
81003e8a:	e9 f1 00 00 00       	jmp    81003f80 <_malloc_trim_r+0x15f>
81003e8f:	83 ec 08             	sub    $0x8,%esp
81003e92:	6a 00                	push   $0x0
81003e94:	ff 75 08             	push   0x8(%ebp)
81003e97:	e8 ae f1 ff ff       	call   8100304a <_sbrk_r>
81003e9c:	83 c4 10             	add    $0x10,%esp
81003e9f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ea2:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003ea7:	8b 50 08             	mov    0x8(%eax),%edx
81003eaa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ead:	01 d0                	add    %edx,%eax
81003eaf:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003eb2:	74 18                	je     81003ecc <_malloc_trim_r+0xab>
81003eb4:	83 ec 0c             	sub    $0xc,%esp
81003eb7:	ff 75 08             	push   0x8(%ebp)
81003eba:	e8 5c dd ff ff       	call   81001c1b <__malloc_unlock>
81003ebf:	83 c4 10             	add    $0x10,%esp
81003ec2:	b8 00 00 00 00       	mov    $0x0,%eax
81003ec7:	e9 b4 00 00 00       	jmp    81003f80 <_malloc_trim_r+0x15f>
81003ecc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ecf:	f7 d8                	neg    %eax
81003ed1:	83 ec 08             	sub    $0x8,%esp
81003ed4:	50                   	push   %eax
81003ed5:	ff 75 08             	push   0x8(%ebp)
81003ed8:	e8 6d f1 ff ff       	call   8100304a <_sbrk_r>
81003edd:	83 c4 10             	add    $0x10,%esp
81003ee0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003ee3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003ee7:	75 61                	jne    81003f4a <_malloc_trim_r+0x129>
81003ee9:	83 ec 08             	sub    $0x8,%esp
81003eec:	6a 00                	push   $0x0
81003eee:	ff 75 08             	push   0x8(%ebp)
81003ef1:	e8 54 f1 ff ff       	call   8100304a <_sbrk_r>
81003ef6:	83 c4 10             	add    $0x10,%esp
81003ef9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003efc:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003f01:	8b 50 08             	mov    0x8(%eax),%edx
81003f04:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f07:	29 d0                	sub    %edx,%eax
81003f09:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003f0c:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003f10:	7e 23                	jle    81003f35 <_malloc_trim_r+0x114>
81003f12:	8b 15 8c 53 00 81    	mov    0x8100538c,%edx
81003f18:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f1b:	29 d0                	sub    %edx,%eax
81003f1d:	a3 60 55 00 81       	mov    %eax,0x81005560
81003f22:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f25:	83 c8 01             	or     $0x1,%eax
81003f28:	89 c2                	mov    %eax,%edx
81003f2a:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003f2f:	8b 40 08             	mov    0x8(%eax),%eax
81003f32:	89 50 04             	mov    %edx,0x4(%eax)
81003f35:	83 ec 0c             	sub    $0xc,%esp
81003f38:	ff 75 08             	push   0x8(%ebp)
81003f3b:	e8 db dc ff ff       	call   81001c1b <__malloc_unlock>
81003f40:	83 c4 10             	add    $0x10,%esp
81003f43:	b8 00 00 00 00       	mov    $0x0,%eax
81003f48:	eb 36                	jmp    81003f80 <_malloc_trim_r+0x15f>
81003f4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f4d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f50:	83 c8 01             	or     $0x1,%eax
81003f53:	89 c2                	mov    %eax,%edx
81003f55:	b8 80 4f 00 81       	mov    $0x81004f80,%eax
81003f5a:	8b 40 08             	mov    0x8(%eax),%eax
81003f5d:	89 50 04             	mov    %edx,0x4(%eax)
81003f60:	a1 60 55 00 81       	mov    0x81005560,%eax
81003f65:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f68:	a3 60 55 00 81       	mov    %eax,0x81005560
81003f6d:	83 ec 0c             	sub    $0xc,%esp
81003f70:	ff 75 08             	push   0x8(%ebp)
81003f73:	e8 a3 dc ff ff       	call   81001c1b <__malloc_unlock>
81003f78:	83 c4 10             	add    $0x10,%esp
81003f7b:	b8 01 00 00 00       	mov    $0x1,%eax
81003f80:	c9                   	leave  
81003f81:	c3                   	ret    

81003f82 <__get_global_locale>:
81003f82:	55                   	push   %ebp
81003f83:	89 e5                	mov    %esp,%ebp
81003f85:	b8 a0 53 00 81       	mov    $0x810053a0,%eax
81003f8a:	5d                   	pop    %ebp
81003f8b:	c3                   	ret    

81003f8c <__get_current_locale>:
81003f8c:	55                   	push   %ebp
81003f8d:	89 e5                	mov    %esp,%ebp
81003f8f:	e8 ee ff ff ff       	call   81003f82 <__get_global_locale>
81003f94:	5d                   	pop    %ebp
81003f95:	c3                   	ret    

81003f96 <_setlocale_r>:
81003f96:	55                   	push   %ebp
81003f97:	89 e5                	mov    %esp,%ebp
81003f99:	83 ec 08             	sub    $0x8,%esp
81003f9c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003fa0:	74 4c                	je     81003fee <_setlocale_r+0x58>
81003fa2:	83 ec 08             	sub    $0x8,%esp
81003fa5:	68 87 48 00 81       	push   $0x81004887
81003faa:	ff 75 10             	push   0x10(%ebp)
81003fad:	e8 af 04 00 00       	call   81004461 <strcmp>
81003fb2:	83 c4 10             	add    $0x10,%esp
81003fb5:	85 c0                	test   %eax,%eax
81003fb7:	74 35                	je     81003fee <_setlocale_r+0x58>
81003fb9:	83 ec 08             	sub    $0x8,%esp
81003fbc:	68 8d 48 00 81       	push   $0x8100488d
81003fc1:	ff 75 10             	push   0x10(%ebp)
81003fc4:	e8 98 04 00 00       	call   81004461 <strcmp>
81003fc9:	83 c4 10             	add    $0x10,%esp
81003fcc:	85 c0                	test   %eax,%eax
81003fce:	74 1e                	je     81003fee <_setlocale_r+0x58>
81003fd0:	83 ec 08             	sub    $0x8,%esp
81003fd3:	68 86 48 00 81       	push   $0x81004886
81003fd8:	ff 75 10             	push   0x10(%ebp)
81003fdb:	e8 81 04 00 00       	call   81004461 <strcmp>
81003fe0:	83 c4 10             	add    $0x10,%esp
81003fe3:	85 c0                	test   %eax,%eax
81003fe5:	74 07                	je     81003fee <_setlocale_r+0x58>
81003fe7:	b8 00 00 00 00       	mov    $0x0,%eax
81003fec:	eb 05                	jmp    81003ff3 <_setlocale_r+0x5d>
81003fee:	b8 8d 48 00 81       	mov    $0x8100488d,%eax
81003ff3:	c9                   	leave  
81003ff4:	c3                   	ret    

81003ff5 <__locale_mb_cur_max>:
81003ff5:	55                   	push   %ebp
81003ff6:	89 e5                	mov    %esp,%ebp
81003ff8:	e8 8f ff ff ff       	call   81003f8c <__get_current_locale>
81003ffd:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81004004:	0f be c0             	movsbl %al,%eax
81004007:	5d                   	pop    %ebp
81004008:	c3                   	ret    

81004009 <setlocale>:
81004009:	55                   	push   %ebp
8100400a:	89 e5                	mov    %esp,%ebp
8100400c:	83 ec 08             	sub    $0x8,%esp
8100400f:	a1 64 4f 00 81       	mov    0x81004f64,%eax
81004014:	83 ec 04             	sub    $0x4,%esp
81004017:	ff 75 0c             	push   0xc(%ebp)
8100401a:	ff 75 08             	push   0x8(%ebp)
8100401d:	50                   	push   %eax
8100401e:	e8 73 ff ff ff       	call   81003f96 <_setlocale_r>
81004023:	83 c4 10             	add    $0x10,%esp
81004026:	c9                   	leave  
81004027:	c3                   	ret    

81004028 <_lseek_r>:
81004028:	55                   	push   %ebp
81004029:	89 e5                	mov    %esp,%ebp
8100402b:	83 ec 18             	sub    $0x18,%esp
8100402e:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
81004035:	00 00 00 
81004038:	83 ec 04             	sub    $0x4,%esp
8100403b:	ff 75 14             	push   0x14(%ebp)
8100403e:	ff 75 10             	push   0x10(%ebp)
81004041:	ff 75 0c             	push   0xc(%ebp)
81004044:	e8 2f c3 ff ff       	call   81000378 <lseek>
81004049:	83 c4 10             	add    $0x10,%esp
8100404c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100404f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004053:	75 14                	jne    81004069 <_lseek_r+0x41>
81004055:	a1 90 55 00 81       	mov    0x81005590,%eax
8100405a:	85 c0                	test   %eax,%eax
8100405c:	74 0b                	je     81004069 <_lseek_r+0x41>
8100405e:	8b 15 90 55 00 81    	mov    0x81005590,%edx
81004064:	8b 45 08             	mov    0x8(%ebp),%eax
81004067:	89 10                	mov    %edx,(%eax)
81004069:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100406c:	c9                   	leave  
8100406d:	c3                   	ret    

8100406e <__smakebuf_r>:
8100406e:	55                   	push   %ebp
8100406f:	89 e5                	mov    %esp,%ebp
81004071:	56                   	push   %esi
81004072:	53                   	push   %ebx
81004073:	83 ec 10             	sub    $0x10,%esp
81004076:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004079:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100407d:	98                   	cwtl   
8100407e:	83 e0 02             	and    $0x2,%eax
81004081:	85 c0                	test   %eax,%eax
81004083:	74 16                	je     8100409b <__smakebuf_r+0x2d>
81004085:	8d 43 43             	lea    0x43(%ebx),%eax
81004088:	89 03                	mov    %eax,(%ebx)
8100408a:	8b 03                	mov    (%ebx),%eax
8100408c:	89 43 10             	mov    %eax,0x10(%ebx)
8100408f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81004096:	e9 b9 00 00 00       	jmp    81004154 <__smakebuf_r+0xe6>
8100409b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100409e:	50                   	push   %eax
8100409f:	8d 45 f0             	lea    -0x10(%ebp),%eax
810040a2:	50                   	push   %eax
810040a3:	53                   	push   %ebx
810040a4:	ff 75 08             	push   0x8(%ebp)
810040a7:	e8 af 00 00 00       	call   8100415b <__swhatbuf_r>
810040ac:	83 c4 10             	add    $0x10,%esp
810040af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810040b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040b5:	83 ec 08             	sub    $0x8,%esp
810040b8:	50                   	push   %eax
810040b9:	ff 75 08             	push   0x8(%ebp)
810040bc:	e8 2e d1 ff ff       	call   810011ef <_malloc_r>
810040c1:	83 c4 10             	add    $0x10,%esp
810040c4:	89 c6                	mov    %eax,%esi
810040c6:	85 f6                	test   %esi,%esi
810040c8:	75 2f                	jne    810040f9 <__smakebuf_r+0x8b>
810040ca:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040ce:	98                   	cwtl   
810040cf:	25 00 02 00 00       	and    $0x200,%eax
810040d4:	85 c0                	test   %eax,%eax
810040d6:	75 7c                	jne    81004154 <__smakebuf_r+0xe6>
810040d8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810040dc:	83 e0 fc             	and    $0xfffffffc,%eax
810040df:	83 c8 02             	or     $0x2,%eax
810040e2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810040e6:	8d 43 43             	lea    0x43(%ebx),%eax
810040e9:	89 03                	mov    %eax,(%ebx)
810040eb:	8b 03                	mov    (%ebx),%eax
810040ed:	89 43 10             	mov    %eax,0x10(%ebx)
810040f0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810040f7:	eb 5b                	jmp    81004154 <__smakebuf_r+0xe6>
810040f9:	8b 45 08             	mov    0x8(%ebp),%eax
810040fc:	c7 40 3c a3 08 00 81 	movl   $0x810008a3,0x3c(%eax)
81004103:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004107:	0c 80                	or     $0x80,%al
81004109:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100410d:	89 33                	mov    %esi,(%ebx)
8100410f:	8b 03                	mov    (%ebx),%eax
81004111:	89 43 10             	mov    %eax,0x10(%ebx)
81004114:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004117:	89 43 14             	mov    %eax,0x14(%ebx)
8100411a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100411d:	85 c0                	test   %eax,%eax
8100411f:	74 26                	je     81004147 <__smakebuf_r+0xd9>
81004121:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004125:	98                   	cwtl   
81004126:	83 ec 08             	sub    $0x8,%esp
81004129:	50                   	push   %eax
8100412a:	ff 75 08             	push   0x8(%ebp)
8100412d:	e8 9c 05 00 00       	call   810046ce <_isatty_r>
81004132:	83 c4 10             	add    $0x10,%esp
81004135:	85 c0                	test   %eax,%eax
81004137:	74 0e                	je     81004147 <__smakebuf_r+0xd9>
81004139:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100413d:	83 e0 fc             	and    $0xfffffffc,%eax
81004140:	83 c8 01             	or     $0x1,%eax
81004143:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004147:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100414b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100414e:	09 d0                	or     %edx,%eax
81004150:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004154:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004157:	5b                   	pop    %ebx
81004158:	5e                   	pop    %esi
81004159:	5d                   	pop    %ebp
8100415a:	c3                   	ret    

8100415b <__swhatbuf_r>:
8100415b:	55                   	push   %ebp
8100415c:	89 e5                	mov    %esp,%ebp
8100415e:	83 ec 58             	sub    $0x58,%esp
81004161:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81004168:	8b 45 0c             	mov    0xc(%ebp),%eax
8100416b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100416f:	66 85 c0             	test   %ax,%ax
81004172:	78 1f                	js     81004193 <__swhatbuf_r+0x38>
81004174:	8b 45 0c             	mov    0xc(%ebp),%eax
81004177:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100417b:	98                   	cwtl   
8100417c:	83 ec 04             	sub    $0x4,%esp
8100417f:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004182:	52                   	push   %edx
81004183:	50                   	push   %eax
81004184:	ff 75 08             	push   0x8(%ebp)
81004187:	e8 ff 04 00 00       	call   8100468b <_fstat_r>
8100418c:	83 c4 10             	add    $0x10,%esp
8100418f:	85 c0                	test   %eax,%eax
81004191:	79 35                	jns    810041c8 <__swhatbuf_r+0x6d>
81004193:	8b 45 14             	mov    0x14(%ebp),%eax
81004196:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100419c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100419f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810041a3:	98                   	cwtl   
810041a4:	25 80 00 00 00       	and    $0x80,%eax
810041a9:	85 c0                	test   %eax,%eax
810041ab:	74 0b                	je     810041b8 <__swhatbuf_r+0x5d>
810041ad:	8b 45 10             	mov    0x10(%ebp),%eax
810041b0:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810041b6:	eb 09                	jmp    810041c1 <__swhatbuf_r+0x66>
810041b8:	8b 45 10             	mov    0x10(%ebp),%eax
810041bb:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041c1:	b8 00 00 00 00       	mov    $0x0,%eax
810041c6:	eb 24                	jmp    810041ec <__swhatbuf_r+0x91>
810041c8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810041cb:	25 00 f0 00 00       	and    $0xf000,%eax
810041d0:	3d 00 20 00 00       	cmp    $0x2000,%eax
810041d5:	0f 94 c0             	sete   %al
810041d8:	0f b6 d0             	movzbl %al,%edx
810041db:	8b 45 14             	mov    0x14(%ebp),%eax
810041de:	89 10                	mov    %edx,(%eax)
810041e0:	8b 45 10             	mov    0x10(%ebp),%eax
810041e3:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810041e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041ec:	c9                   	leave  
810041ed:	c3                   	ret    

810041ee <__get_global_locale>:
810041ee:	55                   	push   %ebp
810041ef:	89 e5                	mov    %esp,%ebp
810041f1:	b8 a0 53 00 81       	mov    $0x810053a0,%eax
810041f6:	5d                   	pop    %ebp
810041f7:	c3                   	ret    

810041f8 <__get_current_locale>:
810041f8:	55                   	push   %ebp
810041f9:	89 e5                	mov    %esp,%ebp
810041fb:	e8 ee ff ff ff       	call   810041ee <__get_global_locale>
81004200:	5d                   	pop    %ebp
81004201:	c3                   	ret    

81004202 <_mbtowc_r>:
81004202:	55                   	push   %ebp
81004203:	89 e5                	mov    %esp,%ebp
81004205:	83 ec 08             	sub    $0x8,%esp
81004208:	e8 eb ff ff ff       	call   810041f8 <__get_current_locale>
8100420d:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81004213:	83 ec 0c             	sub    $0xc,%esp
81004216:	ff 75 18             	push   0x18(%ebp)
81004219:	ff 75 14             	push   0x14(%ebp)
8100421c:	ff 75 10             	push   0x10(%ebp)
8100421f:	ff 75 0c             	push   0xc(%ebp)
81004222:	ff 75 08             	push   0x8(%ebp)
81004225:	ff d0                	call   *%eax
81004227:	83 c4 20             	add    $0x20,%esp
8100422a:	c9                   	leave  
8100422b:	c3                   	ret    

8100422c <__ascii_mbtowc>:
8100422c:	55                   	push   %ebp
8100422d:	89 e5                	mov    %esp,%ebp
8100422f:	83 ec 10             	sub    $0x10,%esp
81004232:	8b 45 10             	mov    0x10(%ebp),%eax
81004235:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004238:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100423c:	75 06                	jne    81004244 <__ascii_mbtowc+0x18>
8100423e:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004241:	89 45 0c             	mov    %eax,0xc(%ebp)
81004244:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004248:	75 07                	jne    81004251 <__ascii_mbtowc+0x25>
8100424a:	b8 00 00 00 00       	mov    $0x0,%eax
8100424f:	eb 31                	jmp    81004282 <__ascii_mbtowc+0x56>
81004251:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004255:	75 07                	jne    8100425e <__ascii_mbtowc+0x32>
81004257:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100425c:	eb 24                	jmp    81004282 <__ascii_mbtowc+0x56>
8100425e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004261:	0f b6 00             	movzbl (%eax),%eax
81004264:	0f b6 d0             	movzbl %al,%edx
81004267:	8b 45 0c             	mov    0xc(%ebp),%eax
8100426a:	89 10                	mov    %edx,(%eax)
8100426c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100426f:	0f b6 00             	movzbl (%eax),%eax
81004272:	84 c0                	test   %al,%al
81004274:	75 07                	jne    8100427d <__ascii_mbtowc+0x51>
81004276:	b8 00 00 00 00       	mov    $0x0,%eax
8100427b:	eb 05                	jmp    81004282 <__ascii_mbtowc+0x56>
8100427d:	b8 01 00 00 00       	mov    $0x1,%eax
81004282:	c9                   	leave  
81004283:	c3                   	ret    

81004284 <_read_r>:
81004284:	55                   	push   %ebp
81004285:	89 e5                	mov    %esp,%ebp
81004287:	83 ec 18             	sub    $0x18,%esp
8100428a:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
81004291:	00 00 00 
81004294:	83 ec 04             	sub    $0x4,%esp
81004297:	ff 75 14             	push   0x14(%ebp)
8100429a:	ff 75 10             	push   0x10(%ebp)
8100429d:	ff 75 0c             	push   0xc(%ebp)
810042a0:	e8 58 c0 ff ff       	call   810002fd <read>
810042a5:	83 c4 10             	add    $0x10,%esp
810042a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810042ab:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810042af:	75 14                	jne    810042c5 <_read_r+0x41>
810042b1:	a1 90 55 00 81       	mov    0x81005590,%eax
810042b6:	85 c0                	test   %eax,%eax
810042b8:	74 0b                	je     810042c5 <_read_r+0x41>
810042ba:	8b 15 90 55 00 81    	mov    0x81005590,%edx
810042c0:	8b 45 08             	mov    0x8(%ebp),%eax
810042c3:	89 10                	mov    %edx,(%eax)
810042c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042c8:	c9                   	leave  
810042c9:	c3                   	ret    

810042ca <cleanup_glue>:
810042ca:	55                   	push   %ebp
810042cb:	89 e5                	mov    %esp,%ebp
810042cd:	83 ec 08             	sub    $0x8,%esp
810042d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810042d3:	8b 00                	mov    (%eax),%eax
810042d5:	85 c0                	test   %eax,%eax
810042d7:	74 14                	je     810042ed <cleanup_glue+0x23>
810042d9:	8b 45 0c             	mov    0xc(%ebp),%eax
810042dc:	8b 00                	mov    (%eax),%eax
810042de:	83 ec 08             	sub    $0x8,%esp
810042e1:	50                   	push   %eax
810042e2:	ff 75 08             	push   0x8(%ebp)
810042e5:	e8 e0 ff ff ff       	call   810042ca <cleanup_glue>
810042ea:	83 c4 10             	add    $0x10,%esp
810042ed:	83 ec 08             	sub    $0x8,%esp
810042f0:	ff 75 0c             	push   0xc(%ebp)
810042f3:	ff 75 08             	push   0x8(%ebp)
810042f6:	e8 4b f7 ff ff       	call   81003a46 <_free_r>
810042fb:	83 c4 10             	add    $0x10,%esp
810042fe:	90                   	nop
810042ff:	c9                   	leave  
81004300:	c3                   	ret    

81004301 <_reclaim_reent>:
81004301:	55                   	push   %ebp
81004302:	89 e5                	mov    %esp,%ebp
81004304:	83 ec 28             	sub    $0x28,%esp
81004307:	a1 64 4f 00 81       	mov    0x81004f64,%eax
8100430c:	39 45 08             	cmp    %eax,0x8(%ebp)
8100430f:	0f 84 49 01 00 00    	je     8100445e <_reclaim_reent+0x15d>
81004315:	8b 45 08             	mov    0x8(%ebp),%eax
81004318:	8b 40 4c             	mov    0x4c(%eax),%eax
8100431b:	85 c0                	test   %eax,%eax
8100431d:	74 64                	je     81004383 <_reclaim_reent+0x82>
8100431f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004326:	eb 3e                	jmp    81004366 <_reclaim_reent+0x65>
81004328:	8b 45 08             	mov    0x8(%ebp),%eax
8100432b:	8b 50 4c             	mov    0x4c(%eax),%edx
8100432e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004331:	c1 e0 02             	shl    $0x2,%eax
81004334:	01 d0                	add    %edx,%eax
81004336:	8b 00                	mov    (%eax),%eax
81004338:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100433b:	eb 1f                	jmp    8100435c <_reclaim_reent+0x5b>
8100433d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004340:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004343:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004346:	8b 00                	mov    (%eax),%eax
81004348:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100434b:	83 ec 08             	sub    $0x8,%esp
8100434e:	ff 75 e8             	push   -0x18(%ebp)
81004351:	ff 75 08             	push   0x8(%ebp)
81004354:	e8 ed f6 ff ff       	call   81003a46 <_free_r>
81004359:	83 c4 10             	add    $0x10,%esp
8100435c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004360:	75 db                	jne    8100433d <_reclaim_reent+0x3c>
81004362:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004366:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004369:	83 f8 1f             	cmp    $0x1f,%eax
8100436c:	76 ba                	jbe    81004328 <_reclaim_reent+0x27>
8100436e:	8b 45 08             	mov    0x8(%ebp),%eax
81004371:	8b 40 4c             	mov    0x4c(%eax),%eax
81004374:	83 ec 08             	sub    $0x8,%esp
81004377:	50                   	push   %eax
81004378:	ff 75 08             	push   0x8(%ebp)
8100437b:	e8 c6 f6 ff ff       	call   81003a46 <_free_r>
81004380:	83 c4 10             	add    $0x10,%esp
81004383:	8b 45 08             	mov    0x8(%ebp),%eax
81004386:	8b 40 40             	mov    0x40(%eax),%eax
81004389:	85 c0                	test   %eax,%eax
8100438b:	74 15                	je     810043a2 <_reclaim_reent+0xa1>
8100438d:	8b 45 08             	mov    0x8(%ebp),%eax
81004390:	8b 40 40             	mov    0x40(%eax),%eax
81004393:	83 ec 08             	sub    $0x8,%esp
81004396:	50                   	push   %eax
81004397:	ff 75 08             	push   0x8(%ebp)
8100439a:	e8 a7 f6 ff ff       	call   81003a46 <_free_r>
8100439f:	83 c4 10             	add    $0x10,%esp
810043a2:	8b 45 08             	mov    0x8(%ebp),%eax
810043a5:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043ab:	85 c0                	test   %eax,%eax
810043ad:	74 50                	je     810043ff <_reclaim_reent+0xfe>
810043af:	8b 45 08             	mov    0x8(%ebp),%eax
810043b2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043b8:	8b 55 08             	mov    0x8(%ebp),%edx
810043bb:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810043c1:	39 d0                	cmp    %edx,%eax
810043c3:	74 3a                	je     810043ff <_reclaim_reent+0xfe>
810043c5:	8b 45 08             	mov    0x8(%ebp),%eax
810043c8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810043ce:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043d1:	eb 1f                	jmp    810043f2 <_reclaim_reent+0xf1>
810043d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810043d9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810043dc:	8b 00                	mov    (%eax),%eax
810043de:	89 45 ec             	mov    %eax,-0x14(%ebp)
810043e1:	83 ec 08             	sub    $0x8,%esp
810043e4:	ff 75 e4             	push   -0x1c(%ebp)
810043e7:	ff 75 08             	push   0x8(%ebp)
810043ea:	e8 57 f6 ff ff       	call   81003a46 <_free_r>
810043ef:	83 c4 10             	add    $0x10,%esp
810043f2:	8b 45 08             	mov    0x8(%ebp),%eax
810043f5:	05 4c 01 00 00       	add    $0x14c,%eax
810043fa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810043fd:	75 d4                	jne    810043d3 <_reclaim_reent+0xd2>
810043ff:	8b 45 08             	mov    0x8(%ebp),%eax
81004402:	8b 40 54             	mov    0x54(%eax),%eax
81004405:	85 c0                	test   %eax,%eax
81004407:	74 15                	je     8100441e <_reclaim_reent+0x11d>
81004409:	8b 45 08             	mov    0x8(%ebp),%eax
8100440c:	8b 40 54             	mov    0x54(%eax),%eax
8100440f:	83 ec 08             	sub    $0x8,%esp
81004412:	50                   	push   %eax
81004413:	ff 75 08             	push   0x8(%ebp)
81004416:	e8 2b f6 ff ff       	call   81003a46 <_free_r>
8100441b:	83 c4 10             	add    $0x10,%esp
8100441e:	8b 45 08             	mov    0x8(%ebp),%eax
81004421:	8b 40 38             	mov    0x38(%eax),%eax
81004424:	85 c0                	test   %eax,%eax
81004426:	74 36                	je     8100445e <_reclaim_reent+0x15d>
81004428:	8b 45 08             	mov    0x8(%ebp),%eax
8100442b:	8b 40 3c             	mov    0x3c(%eax),%eax
8100442e:	83 ec 0c             	sub    $0xc,%esp
81004431:	ff 75 08             	push   0x8(%ebp)
81004434:	ff d0                	call   *%eax
81004436:	83 c4 10             	add    $0x10,%esp
81004439:	8b 45 08             	mov    0x8(%ebp),%eax
8100443c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004442:	85 c0                	test   %eax,%eax
81004444:	74 18                	je     8100445e <_reclaim_reent+0x15d>
81004446:	8b 45 08             	mov    0x8(%ebp),%eax
81004449:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100444f:	83 ec 08             	sub    $0x8,%esp
81004452:	50                   	push   %eax
81004453:	ff 75 08             	push   0x8(%ebp)
81004456:	e8 6f fe ff ff       	call   810042ca <cleanup_glue>
8100445b:	83 c4 10             	add    $0x10,%esp
8100445e:	90                   	nop
8100445f:	c9                   	leave  
81004460:	c3                   	ret    

81004461 <strcmp>:
81004461:	55                   	push   %ebp
81004462:	89 e5                	mov    %esp,%ebp
81004464:	83 ec 10             	sub    $0x10,%esp
81004467:	8b 55 08             	mov    0x8(%ebp),%edx
8100446a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100446d:	09 d0                	or     %edx,%eax
8100446f:	83 e0 03             	and    $0x3,%eax
81004472:	85 c0                	test   %eax,%eax
81004474:	75 5e                	jne    810044d4 <strcmp+0x73>
81004476:	8b 45 08             	mov    0x8(%ebp),%eax
81004479:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100447c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100447f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004482:	eb 2c                	jmp    810044b0 <strcmp+0x4f>
81004484:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004487:	8b 00                	mov    (%eax),%eax
81004489:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100448f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004492:	8b 00                	mov    (%eax),%eax
81004494:	f7 d0                	not    %eax
81004496:	21 d0                	and    %edx,%eax
81004498:	25 80 80 80 80       	and    $0x80808080,%eax
8100449d:	85 c0                	test   %eax,%eax
8100449f:	74 07                	je     810044a8 <strcmp+0x47>
810044a1:	b8 00 00 00 00       	mov    $0x0,%eax
810044a6:	eb 5c                	jmp    81004504 <strcmp+0xa3>
810044a8:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810044ac:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810044b0:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044b3:	8b 10                	mov    (%eax),%edx
810044b5:	8b 45 f8             	mov    -0x8(%ebp),%eax
810044b8:	8b 00                	mov    (%eax),%eax
810044ba:	39 c2                	cmp    %eax,%edx
810044bc:	74 c6                	je     81004484 <strcmp+0x23>
810044be:	8b 45 fc             	mov    -0x4(%ebp),%eax
810044c1:	89 45 08             	mov    %eax,0x8(%ebp)
810044c4:	8b 45 f8             	mov    -0x8(%ebp),%eax
810044c7:	89 45 0c             	mov    %eax,0xc(%ebp)
810044ca:	eb 08                	jmp    810044d4 <strcmp+0x73>
810044cc:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810044d0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810044d4:	8b 45 08             	mov    0x8(%ebp),%eax
810044d7:	0f b6 00             	movzbl (%eax),%eax
810044da:	84 c0                	test   %al,%al
810044dc:	74 10                	je     810044ee <strcmp+0x8d>
810044de:	8b 45 08             	mov    0x8(%ebp),%eax
810044e1:	0f b6 10             	movzbl (%eax),%edx
810044e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810044e7:	0f b6 00             	movzbl (%eax),%eax
810044ea:	38 c2                	cmp    %al,%dl
810044ec:	74 de                	je     810044cc <strcmp+0x6b>
810044ee:	8b 45 08             	mov    0x8(%ebp),%eax
810044f1:	0f b6 00             	movzbl (%eax),%eax
810044f4:	0f b6 d0             	movzbl %al,%edx
810044f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810044fa:	0f b6 00             	movzbl (%eax),%eax
810044fd:	0f b6 c8             	movzbl %al,%ecx
81004500:	89 d0                	mov    %edx,%eax
81004502:	29 c8                	sub    %ecx,%eax
81004504:	c9                   	leave  
81004505:	c3                   	ret    

81004506 <__get_global_locale>:
81004506:	55                   	push   %ebp
81004507:	89 e5                	mov    %esp,%ebp
81004509:	b8 a0 53 00 81       	mov    $0x810053a0,%eax
8100450e:	5d                   	pop    %ebp
8100450f:	c3                   	ret    

81004510 <__get_current_locale>:
81004510:	55                   	push   %ebp
81004511:	89 e5                	mov    %esp,%ebp
81004513:	e8 ee ff ff ff       	call   81004506 <__get_global_locale>
81004518:	5d                   	pop    %ebp
81004519:	c3                   	ret    

8100451a <_wcrtomb_r>:
8100451a:	55                   	push   %ebp
8100451b:	89 e5                	mov    %esp,%ebp
8100451d:	83 ec 18             	sub    $0x18,%esp
81004520:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004527:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100452b:	75 21                	jne    8100454e <_wcrtomb_r+0x34>
8100452d:	e8 de ff ff ff       	call   81004510 <__get_current_locale>
81004532:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004538:	ff 75 14             	push   0x14(%ebp)
8100453b:	6a 00                	push   $0x0
8100453d:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004540:	52                   	push   %edx
81004541:	ff 75 08             	push   0x8(%ebp)
81004544:	ff d0                	call   *%eax
81004546:	83 c4 10             	add    $0x10,%esp
81004549:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100454c:	eb 1f                	jmp    8100456d <_wcrtomb_r+0x53>
8100454e:	e8 bd ff ff ff       	call   81004510 <__get_current_locale>
81004553:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004559:	ff 75 14             	push   0x14(%ebp)
8100455c:	ff 75 10             	push   0x10(%ebp)
8100455f:	ff 75 0c             	push   0xc(%ebp)
81004562:	ff 75 08             	push   0x8(%ebp)
81004565:	ff d0                	call   *%eax
81004567:	83 c4 10             	add    $0x10,%esp
8100456a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100456d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004571:	75 19                	jne    8100458c <_wcrtomb_r+0x72>
81004573:	8b 45 14             	mov    0x14(%ebp),%eax
81004576:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100457c:	8b 45 08             	mov    0x8(%ebp),%eax
8100457f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004585:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100458a:	eb 03                	jmp    8100458f <_wcrtomb_r+0x75>
8100458c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100458f:	c9                   	leave  
81004590:	c3                   	ret    

81004591 <wcrtomb>:
81004591:	55                   	push   %ebp
81004592:	89 e5                	mov    %esp,%ebp
81004594:	83 ec 28             	sub    $0x28,%esp
81004597:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100459e:	a1 64 4f 00 81       	mov    0x81004f64,%eax
810045a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810045a6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810045aa:	75 21                	jne    810045cd <wcrtomb+0x3c>
810045ac:	e8 5f ff ff ff       	call   81004510 <__get_current_locale>
810045b1:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045b7:	ff 75 10             	push   0x10(%ebp)
810045ba:	6a 00                	push   $0x0
810045bc:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810045bf:	52                   	push   %edx
810045c0:	ff 75 f0             	push   -0x10(%ebp)
810045c3:	ff d0                	call   *%eax
810045c5:	83 c4 10             	add    $0x10,%esp
810045c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045cb:	eb 1f                	jmp    810045ec <wcrtomb+0x5b>
810045cd:	e8 3e ff ff ff       	call   81004510 <__get_current_locale>
810045d2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810045d8:	ff 75 10             	push   0x10(%ebp)
810045db:	ff 75 0c             	push   0xc(%ebp)
810045de:	ff 75 08             	push   0x8(%ebp)
810045e1:	ff 75 f0             	push   -0x10(%ebp)
810045e4:	ff d0                	call   *%eax
810045e6:	83 c4 10             	add    $0x10,%esp
810045e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045ec:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810045f0:	75 19                	jne    8100460b <wcrtomb+0x7a>
810045f2:	8b 45 10             	mov    0x10(%ebp),%eax
810045f5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810045fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810045fe:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004604:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004609:	eb 03                	jmp    8100460e <wcrtomb+0x7d>
8100460b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100460e:	c9                   	leave  
8100460f:	c3                   	ret    

81004610 <__get_global_locale>:
81004610:	55                   	push   %ebp
81004611:	89 e5                	mov    %esp,%ebp
81004613:	b8 a0 53 00 81       	mov    $0x810053a0,%eax
81004618:	5d                   	pop    %ebp
81004619:	c3                   	ret    

8100461a <__get_current_locale>:
8100461a:	55                   	push   %ebp
8100461b:	89 e5                	mov    %esp,%ebp
8100461d:	e8 ee ff ff ff       	call   81004610 <__get_global_locale>
81004622:	5d                   	pop    %ebp
81004623:	c3                   	ret    

81004624 <_wctomb_r>:
81004624:	55                   	push   %ebp
81004625:	89 e5                	mov    %esp,%ebp
81004627:	83 ec 08             	sub    $0x8,%esp
8100462a:	e8 eb ff ff ff       	call   8100461a <__get_current_locale>
8100462f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004635:	ff 75 14             	push   0x14(%ebp)
81004638:	ff 75 10             	push   0x10(%ebp)
8100463b:	ff 75 0c             	push   0xc(%ebp)
8100463e:	ff 75 08             	push   0x8(%ebp)
81004641:	ff d0                	call   *%eax
81004643:	83 c4 10             	add    $0x10,%esp
81004646:	c9                   	leave  
81004647:	c3                   	ret    

81004648 <__ascii_wctomb>:
81004648:	55                   	push   %ebp
81004649:	89 e5                	mov    %esp,%ebp
8100464b:	83 ec 10             	sub    $0x10,%esp
8100464e:	8b 45 10             	mov    0x10(%ebp),%eax
81004651:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004654:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004658:	75 07                	jne    81004661 <__ascii_wctomb+0x19>
8100465a:	b8 00 00 00 00       	mov    $0x0,%eax
8100465f:	eb 28                	jmp    81004689 <__ascii_wctomb+0x41>
81004661:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004668:	76 10                	jbe    8100467a <__ascii_wctomb+0x32>
8100466a:	8b 45 08             	mov    0x8(%ebp),%eax
8100466d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004673:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004678:	eb 0f                	jmp    81004689 <__ascii_wctomb+0x41>
8100467a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100467d:	89 c2                	mov    %eax,%edx
8100467f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004682:	88 10                	mov    %dl,(%eax)
81004684:	b8 01 00 00 00       	mov    $0x1,%eax
81004689:	c9                   	leave  
8100468a:	c3                   	ret    

8100468b <_fstat_r>:
8100468b:	55                   	push   %ebp
8100468c:	89 e5                	mov    %esp,%ebp
8100468e:	83 ec 18             	sub    $0x18,%esp
81004691:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
81004698:	00 00 00 
8100469b:	83 ec 08             	sub    $0x8,%esp
8100469e:	ff 75 10             	push   0x10(%ebp)
810046a1:	ff 75 0c             	push   0xc(%ebp)
810046a4:	e8 1d bd ff ff       	call   810003c6 <fstat>
810046a9:	83 c4 10             	add    $0x10,%esp
810046ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046af:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810046b3:	75 14                	jne    810046c9 <_fstat_r+0x3e>
810046b5:	a1 90 55 00 81       	mov    0x81005590,%eax
810046ba:	85 c0                	test   %eax,%eax
810046bc:	74 0b                	je     810046c9 <_fstat_r+0x3e>
810046be:	8b 15 90 55 00 81    	mov    0x81005590,%edx
810046c4:	8b 45 08             	mov    0x8(%ebp),%eax
810046c7:	89 10                	mov    %edx,(%eax)
810046c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810046cc:	c9                   	leave  
810046cd:	c3                   	ret    

810046ce <_isatty_r>:
810046ce:	55                   	push   %ebp
810046cf:	89 e5                	mov    %esp,%ebp
810046d1:	83 ec 18             	sub    $0x18,%esp
810046d4:	c7 05 90 55 00 81 00 	movl   $0x0,0x81005590
810046db:	00 00 00 
810046de:	83 ec 0c             	sub    $0xc,%esp
810046e1:	ff 75 0c             	push   0xc(%ebp)
810046e4:	e8 bc bc ff ff       	call   810003a5 <isatty>
810046e9:	83 c4 10             	add    $0x10,%esp
810046ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046ef:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810046f3:	75 14                	jne    81004709 <_isatty_r+0x3b>
810046f5:	a1 90 55 00 81       	mov    0x81005590,%eax
810046fa:	85 c0                	test   %eax,%eax
810046fc:	74 0b                	je     81004709 <_isatty_r+0x3b>
810046fe:	8b 15 90 55 00 81    	mov    0x81005590,%edx
81004704:	8b 45 08             	mov    0x8(%ebp),%eax
81004707:	89 10                	mov    %edx,(%eax)
81004709:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100470c:	c9                   	leave  
8100470d:	c3                   	ret    
