
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100087b

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x000088d0 memsz 0x00008f80 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000077f5  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       000006cc  81007800  81007800  00008800  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007ee0  81007ee0  00008ee0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  810088e0  810088e0  000098d0  2**5
                  ALLOC
  4 .debug_info   0002853b  00000000  00000000  000098d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00009265  00000000  00000000  00031e0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000948  00000000  00000000  0003b070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_rnglists 00000065  00000000  00000000  0003b9b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000571f  00000000  00000000  0003ba1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    000016e2  00000000  00000000  0004113c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_line_str 000016c6  00000000  00000000  0004281e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .comment      0000003d  00000000  00000000  00043ee4  2**0
                  CONTENTS, READONLY
 12 .debug_frame  00001d28  00000000  00000000  00043f24  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
810088e0 l     O .bss	00000200 cmd_buf
81007ee0 l     O .data	00000004 prompt
81008ae0 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
810002e0 l     F .text	0000024c do_less
81007a20 l     O .rodata	00000048 cmd_list
8100052c l     F .text	0000003e cli_init
8100056a l     F .text	00000033 show_prompt
8100059d l     F .text	00000043 find_builtin
810005e0 l     F .text	00000049 run_builtin
81000629 l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
8100122e l     F .text	000000ad std
810012db l     F .text	0000001b stdin_init
810012f6 l     F .text	0000001b stdout_init
81001311 l     F .text	0000001b stderr_init
81008eec l     O .bss	00000004 __sfp_recursive_mutex
81008ef0 l     O .bss	00000004 __sinit_recursive_mutex
810015d4 l     F .text	0000000a __fp_lock
810015de l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 getopt.c
81008efc l     O .bss	00000004 optwhere
81008f00 l     O .bss	00000004 permute_from
81008f04 l     O .bss	00000004 num_nonopts
810023f8 l     F .text	0000007b reverse_argv_elements
81002473 l     F .text	00000036 permute
810024a9 l     F .text	00000031 is_option
810024da l     F .text	00000059 read_globals
81002533 l     F .text	00000052 write_globals
81002585 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007f00 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
810033a9 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81003eed l       .text	00000000 L20
81003ea4 l       .text	00000000 L5
81003eea l       .text	00000000 L15
81003eb0 l       .text	00000000 L8
81003ed1 l       .text	00000000 L9
81003ee0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81003f3f l       .text	00000000 L4
81003f31 l       .text	00000000 BYTECMP
81003f2c l       .text	00000000 L5
81003f33 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81008f68 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004100 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
81004ea4 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
810054eb l       .text	00000000 L25
81005492 l       .text	00000000 L5
810054de l       .text	00000000 L14
810054e4 l       .text	00000000 L19
810054a3 l       .text	00000000 L10
810054d0 l       .text	00000000 L9
810054d3 l       .text	00000000 L15
8100551e l       .text	00000000 L26
81005521 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81005626 l       .text	00000000 L5
8100565e l       .text	00000000 L15
81005630 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100576c l     F .text	0000000a __locale_ctype_ptr_l
81005776 l     F .text	0000000a __get_global_locale
81005780 l     F .text	0000000a __get_current_locale
8100578a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81008f70 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
81006015 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
81008750 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
810068c8 l     F .text	0000000a __get_global_locale
810068d2 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810069b4 l     F .text	0000000a __get_global_locale
810069be l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81006add l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81007664 l     F .text	0000000a __get_global_locale
8100766e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
8100776e l     F .text	0000000a __get_global_locale
81007778 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81008f78 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81008f7c l     O .bss	00000004 __env_recursive_mutex
81006888 g     F .text	00000040 _isatty_r
81004d0d g     F .text	00000037 cleanup_glue
81004c1b g     F .text	000000d6 _puts_r
8100696e g     F .text	00000046 _lseek_r
810009ca g     F .text	0000001b yield
81005e02 g     F .text	000000ba __sflags
81005752 g     F .text	0000001a strtok_r
81004be6 g     F .text	00000035 printf
81007678 g     F .text	00000077 _wcrtomb_r
810053c7 g     F .text	0000004a __sseek
81001523 g     F .text	00000099 __sinit
810059cf g     F .text	00000112 __swbuf_r
810068dc g     F .text	0000005f _setlocale_r
8100132c g     F .text	0000006f __sfmoreglue
8100401e g     F .text	00000006 __malloc_unlock
81006a50 g       .text	00000000 memmove
810030e1 g     F .text	00000049 getopt_long
81001509 g     F .text	0000001a _cleanup
81005692 g     F .text	000000c0 __strtok_r
81005df8 g     F .text	0000000a __errno
8100675e g     F .text	00000020 getenv
810021c3 g     F .text	00000043 _fstat_r
81008f6c g     O .bss	00000004 errno
81007564 g     F .text	0000001d __srget
81005362 g     F .text	0000000a __seofread
8100099d g     F .text	0000002d execve
8100093f g     F .text	0000001b getpid
8100120f g     F .text	0000001f fgets
81006668 g     F .text	00000067 _getc_r
810066cf g     F .text	0000006f getc
81003f48 g       .text	00000000 memcpy
81005112 g     F .text	0000020c setvbuf
810014e8 g     F .text	00000021 _cleanup_r
81004cf1 g     F .text	0000001c puts
81003370 g     F .text	0000001c malloc
81004bb9 g     F .text	0000002d _printf_r
81000ab4 g     F .text	00000021 isatty
810031e6 g     F .text	0000000a __getreent
81008ef4 g     O .bss	00000004 optarg
81008f20 g     O .bss	00000004 __malloc_top_pad
810088e0 g       .bss	00000000 __bss_start__
810061ca g     F .text	0000049e __sfvwrite_r
810050d2 g     F .text	00000040 _sbrk_r
81007ee4 g     O .data	00000004 opterr
81000be9 g     F .text	00000040 readdir
81006be1 g     F .text	00000046 _read_r
81000cd6 g     F .text	00000107 _fclose_r
81001078 g     F .text	00000039 fflush
81008f24 g     O .bss	00000004 __malloc_max_sbrked_mem
81000a87 g     F .text	0000002d lseek
81007b78 g     O .rodata	00000004 _global_impure_ptr
81006c27 g     F .text	000008da _realloc_r
81005981 g     F .text	00000025 strtol_l
8100612b g     F .text	00000057 _fputwc_r
810015e8 g     F .text	00000024 __fp_lock_all
810059a6 g     F .text	00000029 strtol
81001cf2 g     F .text	000004b1 _fseeko_r
81004d44 g     F .text	00000160 _reclaim_reent
81005ebc g     F .text	00000046 _fputc_r
81000a39 g     F .text	0000002d write
81006b43 g     F .text	0000004b _putc_r
810088cc g     O .data	00000004 environ
81000ad5 g     F .text	00000027 fstat
8100174d g     F .text	0000002c fprintf
810031bf g     F .text	00000027 __getopt_long_only_r
810021a3 g     F .text	00000020 fseeko
81000c78 g     F .text	0000001a _atoi_r
81001cd2 g     F .text	00000020 fseek
810008c9 g     F .text	0000004c sys_call
81004166 g     F .text	000000a8 __sfputs_r
81008ef8 g     O .bss	00000004 optind
810015bc g     F .text	00000006 __sfp_lock_acquire
81003e60 g       .text	00000000 memchr
81008f80 g       .bss	00000000 __bss_end__
81001779 g     F .text	000003db _free_r
81000b60 g     F .text	00000021 wait
81007c40 g     O .rodata	00000180 _ctype_b
8100693b g     F .text	00000014 __locale_mb_cur_max
81007501 g     F .text	00000063 __srget_r
81005ca3 g     F .text	00000115 __call_exitprocs
8100874c g     O .data	00000004 __malloc_sbrk_base
8100087b g       .text	00000000 _start
81000a0c g     F .text	0000002d read
81004b73 g     F .text	00000046 _open_r
81007581 g     F .text	000000e3 strncmp
81003198 g     F .text	00000027 __getopt_long_r
81008f40 g     O .bss	00000028 __malloc_current_mallinfo
81004bb9 g     F .text	0000002d _iprintf_r
81005db8 g     F .text	00000040 _close_r
81005669 g     F .text	00000029 strtok
81003ef5 g       .text	00000000 memcmp
810022d9 g     F .text	000000b8 _fwrite_r
81000982 g     F .text	0000001b fork
81005b48 g     F .text	0000015b __swsetup_r
8100139b g     F .text	0000014d __sfp
81008340 g     O .data	00000408 __malloc_av_
810015ce g     F .text	00000006 __sinit_lock_release
8100531e g     F .text	00000044 __sread
81004018 g     F .text	00000006 __malloc_lock
81001724 g     F .text	00000029 _fprintf_r
81000afc g     F .text	00000021 sbrk
81001020 g     F .text	00000058 _fflush_r
8100088b g     F .text	0000003e cstart
81001705 g     F .text	0000001f fopen
8100309a g     F .text	00000047 getopt
81003f90 g       .text	00000000 memset
810006e7 g     F .text	00000194 main
81008f28 g     O .bss	00000004 __malloc_max_total_mem
81005ae1 g     F .text	00000021 __swbuf
81005411 g     F .text	00000025 __sclose
81000ddd g     F .text	0000001d fclose
8100595c g     F .text	00000025 _strtol_r
810023d3 g     F .text	00000025 getchar
8100677e g     F .text	000000ed _findenv_r
8100363c g     F .text	00000822 _malloc_r
810077a6 g     F .text	00000043 __ascii_wctomb
81000b81 g     F .text	00000068 opendir
81001724 g     F .text	00000029 _fiprintf_r
810077ef g     F .text	00000006 __env_unlock
8100673e g     F .text	00000020 _findenv
81002206 g     F .text	00000068 _fwalk
810010b1 g     F .text	0000015e _fgets_r
810069c8 g     F .text	0000002a _mbtowc_r
81006b8e g     F .text	00000053 putc
8100312a g     F .text	00000049 getopt_long_only
81001b54 g     F .text	00000161 _malloc_trim_r
8100553c g     F .text	000000a5 strcmp
8100420e g     F .text	00000025 vfiprintf
81000b1d g     F .text	00000021 dup
81004be6 g     F .text	00000035 iprintf
81008f74 g     O .bss	00000004 _PathLocale
81005b02 g     F .text	00000046 _write_r
8100694f g     F .text	0000001f setlocale
81004589 g     F .text	0000019b _printf_common
81008324 g     O .data	00000004 _impure_ptr
81000dfa g     F .text	00000226 __sflush_r
81001cb5 g     F .text	0000001d _fseek_r
81004ed1 g     F .text	00000201 __srefill_r
810069f2 g     F .text	00000058 __ascii_mbtowc
8100160c g     F .text	00000024 __fp_unlock_all
81005f02 g     F .text	0000004e fputc
8100095a g     F .text	00000028 print_msg
81007ee8 g     O .data	00000004 optopt
810032dd g     F .text	00000093 __swhatbuf_r
81002391 g     F .text	00000025 fwrite
810023b6 g     F .text	0000001d _getchar_r
8100607b g     F .text	000000b0 __fputwc
81005f50 g     F .text	000000a6 _fputs_r
8100536c g     F .text	0000005b __swrite
81008748 g     O .data	00000004 __malloc_trim_threshold
81000c92 g     F .text	00000044 exit
8100174d g     F .text	0000002c fiprintf
81004233 g     F .text	00000356 _vfiprintf_r
8100226e g     F .text	0000006b _fwalk_reent
810015c2 g     F .text	00000006 __sfp_lock_release
81000c5e g     F .text	0000001a atoi
81007dc0 g     O .rodata	00000101 _ctype_
81003173 g     F .text	00000025 __getopt_r
81001630 g     F .text	000000d5 _fopen_r
81000b3e g     F .text	00000022 _exit
810031f0 g     F .text	000000ed __smakebuf_r
810055f0 g       .text	00000000 strlen
81004724 g     F .text	0000044f _printf_i
810009e5 g     F .text	00000027 open
81004024 g     F .text	000000dc __sprint_r
81005440 g       .text	00000000 strchr
81005ff6 g     F .text	0000001f fputs
81000c29 g     F .text	00000035 closedir
81007782 g     F .text	00000024 _wctomb_r
810077e9 g     F .text	00000006 __env_lock
81004233 g     F .text	00000356 _vfprintf_r
81000915 g     F .text	0000002a msleep
810076ef g     F .text	0000007f wcrtomb
81000a66 g     F .text	00000021 close
81008760 g     O .data	0000016c __global_locale
8100420e g     F .text	00000025 vfprintf
81006182 g     F .text	00000048 fputwc
8100338c g     F .text	0000001d free
810015c8 g     F .text	00000006 __sinit_lock_acquire
8100686b g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 e0 8e 00 81       	mov    0x81008ee0,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 78 00 81       	push   $0x81007806
81000025:	e8 bc 4b 00 00       	call   81004be6 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 e4 8e 00 81       	mov    0x81008ee4,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 11 78 00 81       	push   $0x81007811
81000050:	68 16 78 00 81       	push   $0x81007816
81000055:	e8 8c 4b 00 00       	call   81004be6 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 19 78 00 81       	push   $0x81007819
81000065:	68 16 78 00 81       	push   $0x81007816
8100006a:	e8 77 4b 00 00       	call   81004be6 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 58 31 00 00       	call   810031e6 <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 69 11 00 00       	call   8100120f <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 35 4c 00 00       	call   81004cf1 <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 0;  // getopt每次查找都从optind处开始
810000c9:	c7 05 f8 8e 00 81 00 	movl   $0x0,0x81008ef8
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 20 78 00 81       	push   $0x81007820
81000107:	e8 e5 4b 00 00       	call   81004cf1 <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 26 78 00 81       	push   $0x81007826
81000117:	e8 d5 4b 00 00       	call   81004cf1 <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 38 78 00 81       	push   $0x81007838
81000127:	e8 c5 4b 00 00       	call   81004cf1 <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 f4 8e 00 81       	mov    0x81008ef4,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 17 0b 00 00       	call   81000c5e <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 f4 8e 00 81       	mov    0x81008ef4,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d f4 8e 00 81    	mov    0x81008ef4,%ebx
8100015e:	e8 83 30 00 00       	call   810031e6 <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 58 78 00 81       	push   $0x81007858
8100016f:	50                   	push   %eax
81000170:	e8 d8 15 00 00       	call   8100174d <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 77 78 00 81       	push   $0x81007877
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 04 2f 00 00       	call   8100309a <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

  if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 35 30 00 00       	call   810031e6 <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 7c 78 00 81       	push   $0x8100787c
810001be:	e8 ce 21 00 00       	call   81002391 <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
  }
  if (optind >
810001cd:	a1 f8 8e 00 81       	mov    0x81008ef8,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 0a 30 00 00       	call   810031e6 <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 af 78 00 81       	push   $0x810078af
810001e9:	e8 a3 21 00 00       	call   81002391 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }

  const char *msg = argv[optind];
810001f8:	a1 f8 8e 00 81       	mov    0x81008ef8,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 cf 4a 00 00       	call   81004cf1 <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_exit(int argc, const char **argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 47 0a 00 00       	call   81000c92 <exit>

8100024b <do_ls>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 cb 78 00 81       	push   $0x810078cb
81000259:	e8 23 09 00 00       	call   81000b81 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 d0 78 00 81       	push   $0x810078d0
81000272:	e8 7a 4a 00 00       	call   81004cf1 <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", entry->type == FILE_DIR ? 'd' : 'f', entry->name,
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 e1 78 00 81       	push   $0x810078e1
810002ac:	e8 35 49 00 00       	call   81004be6 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 2a 09 00 00       	call   81000be9 <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
           entry->size);
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 53 09 00 00       	call   81000c29 <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <do_less>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_less(int argc, const char **argv) {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	53                   	push   %ebx
810002e4:	83 ec 24             	sub    $0x24,%esp
  optind = 0;
810002e7:	c7 05 f8 8e 00 81 00 	movl   $0x0,0x81008ef8
810002ee:	00 00 00 
  int line_mode = 0;  //是否开启逐行读取
810002f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，l:表示查找-l选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
810002f8:	e9 93 00 00 00       	jmp    81000390 <do_less+0xb0>
    switch (ch) {
810002fd:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000301:	74 50                	je     81000353 <do_less+0x73>
81000303:	83 7d f0 6c          	cmpl   $0x6c,-0x10(%ebp)
81000307:	0f 8f 82 00 00 00    	jg     8100038f <do_less+0xaf>
8100030d:	83 7d f0 3f          	cmpl   $0x3f,-0x10(%ebp)
81000311:	74 49                	je     8100035c <do_less+0x7c>
81000313:	83 7d f0 68          	cmpl   $0x68,-0x10(%ebp)
81000317:	75 76                	jne    8100038f <do_less+0xaf>
      case 'h':
        puts("help:");
81000319:	83 ec 0c             	sub    $0xc,%esp
8100031c:	68 20 78 00 81       	push   $0x81007820
81000321:	e8 cb 49 00 00       	call   81004cf1 <puts>
81000326:	83 c4 10             	add    $0x10,%esp
        puts("\tshow file content");
81000329:	83 ec 0c             	sub    $0xc,%esp
8100032c:	68 eb 78 00 81       	push   $0x810078eb
81000331:	e8 bb 49 00 00       	call   81004cf1 <puts>
81000336:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: less [-l] file");
81000339:	83 ec 0c             	sub    $0xc,%esp
8100033c:	68 fe 78 00 81       	push   $0x810078fe
81000341:	e8 ab 49 00 00       	call   81004cf1 <puts>
81000346:	83 c4 10             	add    $0x10,%esp
        return 0;
81000349:	b8 00 00 00 00       	mov    $0x0,%eax
8100034e:	e9 d4 01 00 00       	jmp    81000527 <do_less+0x247>
      case 'l':
        line_mode = 1;
81000353:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
        break;
8100035a:	eb 34                	jmp    81000390 <do_less+0xb0>
      case '?':  // 找到未指定选项
        if (optarg) {
8100035c:	a1 f4 8e 00 81       	mov    0x81008ef4,%eax
81000361:	85 c0                	test   %eax,%eax
81000363:	74 20                	je     81000385 <do_less+0xa5>
          fprintf(stderr,
81000365:	8b 1d f4 8e 00 81    	mov    0x81008ef4,%ebx
8100036b:	e8 76 2e 00 00       	call   810031e6 <__getreent>
81000370:	8b 40 0c             	mov    0xc(%eax),%eax
81000373:	83 ec 04             	sub    $0x4,%esp
81000376:	53                   	push   %ebx
81000377:	68 58 78 00 81       	push   $0x81007858
8100037c:	50                   	push   %eax
8100037d:	e8 cb 13 00 00       	call   8100174d <fiprintf>
81000382:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000385:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100038a:	e9 98 01 00 00       	jmp    81000527 <do_less+0x247>
      default:
        break;
8100038f:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "lh")) != -1) {
81000390:	83 ec 04             	sub    $0x4,%esp
81000393:	68 15 79 00 81       	push   $0x81007915
81000398:	ff 75 0c             	push   0xc(%ebp)
8100039b:	ff 75 08             	push   0x8(%ebp)
8100039e:	e8 f7 2c 00 00       	call   8100309a <getopt>
810003a3:	83 c4 10             	add    $0x10,%esp
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810003ad:	0f 85 4a ff ff ff    	jne    810002fd <do_less+0x1d>
    }
  }



  if (optind >
810003b3:	a1 f8 8e 00 81       	mov    0x81008ef8,%eax
810003b8:	39 45 08             	cmp    %eax,0x8(%ebp)
810003bb:	7f 24                	jg     810003e1 <do_less+0x101>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "no file input\n"ESC_COLOR_DEFAULT);
810003bd:	e8 24 2e 00 00       	call   810031e6 <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	50                   	push   %eax
810003c6:	6a 18                	push   $0x18
810003c8:	6a 01                	push   $0x1
810003ca:	68 18 79 00 81       	push   $0x81007918
810003cf:	e8 bd 1f 00 00       	call   81002391 <fwrite>
810003d4:	83 c4 10             	add    $0x10,%esp
    return -1;
810003d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003dc:	e9 46 01 00 00       	jmp    81000527 <do_less+0x247>
  }

  //打开文件
  FILE *file = fopen(argv[optind], "r");
810003e1:	a1 f8 8e 00 81       	mov    0x81008ef8,%eax
810003e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810003ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810003f0:	01 d0                	add    %edx,%eax
810003f2:	8b 00                	mov    (%eax),%eax
810003f4:	83 ec 08             	sub    $0x8,%esp
810003f7:	68 31 79 00 81       	push   $0x81007931
810003fc:	50                   	push   %eax
810003fd:	e8 03 13 00 00       	call   81001705 <fopen>
81000402:	83 c4 10             	add    $0x10,%esp
81000405:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file == NULL) {
81000408:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100040c:	75 37                	jne    81000445 <do_less+0x165>
    fprintf(stderr, ESC_COLOR_ERROR"open file failed. %s"ESC_COLOR_DEFAULT, argv[optind]);
8100040e:	a1 f8 8e 00 81       	mov    0x81008ef8,%eax
81000413:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100041a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100041d:	01 d0                	add    %edx,%eax
8100041f:	8b 18                	mov    (%eax),%ebx
81000421:	e8 c0 2d 00 00       	call   810031e6 <__getreent>
81000426:	8b 40 0c             	mov    0xc(%eax),%eax
81000429:	83 ec 04             	sub    $0x4,%esp
8100042c:	53                   	push   %ebx
8100042d:	68 34 79 00 81       	push   $0x81007934
81000432:	50                   	push   %eax
81000433:	e8 15 13 00 00       	call   8100174d <fiprintf>
81000438:	83 c4 10             	add    $0x10,%esp
    return -1;
8100043b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000440:	e9 e2 00 00 00       	jmp    81000527 <do_less+0x247>
  }
  
  int buf_len = 255;
81000445:	c7 45 e8 ff 00 00 00 	movl   $0xff,-0x18(%ebp)
  char *buf = (char *)malloc(buf_len);
8100044c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100044f:	83 ec 0c             	sub    $0xc,%esp
81000452:	50                   	push   %eax
81000453:	e8 18 2f 00 00       	call   81003370 <malloc>
81000458:	83 c4 10             	add    $0x10,%esp
8100045b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  if (line_mode == 0) {
8100045e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000462:	75 2a                	jne    8100048e <do_less+0x1ae>
    //一次性读取完文件
    while (fgets(buf, buf_len, file) != NULL) {
81000464:	eb 0e                	jmp    81000474 <do_less+0x194>
      puts(buf);
81000466:	83 ec 0c             	sub    $0xc,%esp
81000469:	ff 75 e4             	push   -0x1c(%ebp)
8100046c:	e8 80 48 00 00       	call   81004cf1 <puts>
81000471:	83 c4 10             	add    $0x10,%esp
    while (fgets(buf, buf_len, file) != NULL) {
81000474:	83 ec 04             	sub    $0x4,%esp
81000477:	ff 75 ec             	push   -0x14(%ebp)
8100047a:	ff 75 e8             	push   -0x18(%ebp)
8100047d:	ff 75 e4             	push   -0x1c(%ebp)
81000480:	e8 8a 0d 00 00       	call   8100120f <fgets>
81000485:	83 c4 10             	add    $0x10,%esp
81000488:	85 c0                	test   %eax,%eax
8100048a:	75 da                	jne    81000466 <do_less+0x186>
8100048c:	eb 78                	jmp    81000506 <do_less+0x226>
    }
  } else {
    //取消输入行缓存，使输入及时写入key中
    setvbuf(stdin, NULL, _IONBF, 0);
8100048e:	e8 53 2d 00 00       	call   810031e6 <__getreent>
81000493:	8b 40 04             	mov    0x4(%eax),%eax
81000496:	6a 00                	push   $0x0
81000498:	6a 02                	push   $0x2
8100049a:	6a 00                	push   $0x0
8100049c:	50                   	push   %eax
8100049d:	e8 70 4c 00 00       	call   81005112 <setvbuf>
810004a2:	83 c4 10             	add    $0x10,%esp
    while (1) {
      char *b = fgets(buf, buf_len, file);
810004a5:	83 ec 04             	sub    $0x4,%esp
810004a8:	ff 75 ec             	push   -0x14(%ebp)
810004ab:	ff 75 e8             	push   -0x18(%ebp)
810004ae:	ff 75 e4             	push   -0x1c(%ebp)
810004b1:	e8 59 0d 00 00       	call   8100120f <fgets>
810004b6:	83 c4 10             	add    $0x10,%esp
810004b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
      if (b == NULL) {
810004bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810004c0:	74 26                	je     810004e8 <do_less+0x208>
        break;
      }

      puts(buf);
810004c2:	83 ec 0c             	sub    $0xc,%esp
810004c5:	ff 75 e4             	push   -0x1c(%ebp)
810004c8:	e8 24 48 00 00       	call   81004cf1 <puts>
810004cd:	83 c4 10             	add    $0x10,%esp
      //用按键的方式进行下一行的读取
      char key;
      while ((key = getchar()) != ' ') {
810004d0:	eb 06                	jmp    810004d8 <do_less+0x1f8>
        if (key == 'q') {
810004d2:	80 7d df 71          	cmpb   $0x71,-0x21(%ebp)
810004d6:	74 13                	je     810004eb <do_less+0x20b>
      while ((key = getchar()) != ' ') {
810004d8:	e8 f6 1e 00 00       	call   810023d3 <getchar>
810004dd:	88 45 df             	mov    %al,-0x21(%ebp)
810004e0:	80 7d df 20          	cmpb   $0x20,-0x21(%ebp)
810004e4:	75 ec                	jne    810004d2 <do_less+0x1f2>
    while (1) {
810004e6:	eb bd                	jmp    810004a5 <do_less+0x1c5>
        break;
810004e8:	90                   	nop
810004e9:	eb 01                	jmp    810004ec <do_less+0x20c>
          goto less_quit;
810004eb:	90                   	nop
      }
      
    }
less_quit:
    //恢复输入行缓存
    setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004ec:	e8 f5 2c 00 00       	call   810031e6 <__getreent>
810004f1:	8b 40 04             	mov    0x4(%eax),%eax
810004f4:	68 00 04 00 00       	push   $0x400
810004f9:	6a 01                	push   $0x1
810004fb:	6a 00                	push   $0x0
810004fd:	50                   	push   %eax
810004fe:	e8 0f 4c 00 00       	call   81005112 <setvbuf>
81000503:	83 c4 10             	add    $0x10,%esp
  }


  

  free(buf);
81000506:	83 ec 0c             	sub    $0xc,%esp
81000509:	ff 75 e4             	push   -0x1c(%ebp)
8100050c:	e8 7b 2e 00 00       	call   8100338c <free>
81000511:	83 c4 10             	add    $0x10,%esp
  fclose(file);
81000514:	83 ec 0c             	sub    $0xc,%esp
81000517:	ff 75 ec             	push   -0x14(%ebp)
8100051a:	e8 be 08 00 00       	call   81000ddd <fclose>
8100051f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000522:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000527:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100052a:	c9                   	leave  
8100052b:	c3                   	ret    

8100052c <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
8100052c:	55                   	push   %ebp
8100052d:	89 e5                	mov    %esp,%ebp
8100052f:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
81000532:	a1 e0 7e 00 81       	mov    0x81007ee0,%eax
81000537:	a3 e8 8e 00 81       	mov    %eax,0x81008ee8
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100053c:	83 ec 04             	sub    $0x4,%esp
8100053f:	68 00 04 00 00       	push   $0x400
81000544:	6a 00                	push   $0x0
81000546:	68 e0 8a 00 81       	push   $0x81008ae0
8100054b:	e8 40 3a 00 00       	call   81003f90 <memset>
81000550:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000553:	c7 05 e0 8e 00 81 20 	movl   $0x81007a20,0x81008ee0
8100055a:	7a 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
8100055d:	b8 68 7a 00 81       	mov    $0x81007a68,%eax
81000562:	a3 e4 8e 00 81       	mov    %eax,0x81008ee4
}
81000567:	90                   	nop
81000568:	c9                   	leave  
81000569:	c3                   	ret    

8100056a <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100056a:	55                   	push   %ebp
8100056b:	89 e5                	mov    %esp,%ebp
8100056d:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000570:	a1 e8 8e 00 81       	mov    0x81008ee8,%eax
81000575:	83 ec 08             	sub    $0x8,%esp
81000578:	50                   	push   %eax
81000579:	68 16 78 00 81       	push   $0x81007816
8100057e:	e8 63 46 00 00       	call   81004be6 <iprintf>
81000583:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
81000586:	e8 5b 2c 00 00       	call   810031e6 <__getreent>
8100058b:	8b 40 08             	mov    0x8(%eax),%eax
8100058e:	83 ec 0c             	sub    $0xc,%esp
81000591:	50                   	push   %eax
81000592:	e8 e1 0a 00 00       	call   81001078 <fflush>
81000597:	83 c4 10             	add    $0x10,%esp
}
8100059a:	90                   	nop
8100059b:	c9                   	leave  
8100059c:	c3                   	ret    

8100059d <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
8100059d:	55                   	push   %ebp
8100059e:	89 e5                	mov    %esp,%ebp
810005a0:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005a3:	a1 e0 8e 00 81       	mov    0x81008ee0,%eax
810005a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005ab:	eb 22                	jmp    810005cf <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
810005ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005b0:	8b 00                	mov    (%eax),%eax
810005b2:	83 ec 08             	sub    $0x8,%esp
810005b5:	ff 75 08             	push   0x8(%ebp)
810005b8:	50                   	push   %eax
810005b9:	e8 7e 4f 00 00       	call   8100553c <strcmp>
810005be:	83 c4 10             	add    $0x10,%esp
810005c1:	85 c0                	test   %eax,%eax
810005c3:	75 05                	jne    810005ca <find_builtin+0x2d>
      continue;
    }
    return cmd;
810005c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005c8:	eb 14                	jmp    810005de <find_builtin+0x41>
      continue;
810005ca:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
810005cb:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
810005cf:	a1 e4 8e 00 81       	mov    0x81008ee4,%eax
810005d4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810005d7:	72 d4                	jb     810005ad <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
810005d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005de:	c9                   	leave  
810005df:	c3                   	ret    

810005e0 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
810005e0:	55                   	push   %ebp
810005e1:	89 e5                	mov    %esp,%ebp
810005e3:	53                   	push   %ebx
810005e4:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
810005e7:	8b 45 08             	mov    0x8(%ebp),%eax
810005ea:	8b 40 08             	mov    0x8(%eax),%eax
810005ed:	83 ec 08             	sub    $0x8,%esp
810005f0:	ff 75 10             	push   0x10(%ebp)
810005f3:	ff 75 0c             	push   0xc(%ebp)
810005f6:	ff d0                	call   *%eax
810005f8:	83 c4 10             	add    $0x10,%esp
810005fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
810005fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000602:	79 1f                	jns    81000623 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
            cmd->name, ret);
81000604:	8b 45 08             	mov    0x8(%ebp),%eax
81000607:	8b 18                	mov    (%eax),%ebx
    fprintf(stderr, ESC_COLOR_ERROR "%s error: %d\n" ESC_COLOR_DEFAULT,
81000609:	e8 d8 2b 00 00       	call   810031e6 <__getreent>
8100060e:	8b 40 0c             	mov    0xc(%eax),%eax
81000611:	ff 75 f4             	push   -0xc(%ebp)
81000614:	53                   	push   %ebx
81000615:	68 68 7a 00 81       	push   $0x81007a68
8100061a:	50                   	push   %eax
8100061b:	e8 2d 11 00 00       	call   8100174d <fiprintf>
81000620:	83 c4 10             	add    $0x10,%esp
  }
}
81000623:	90                   	nop
81000624:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000627:	c9                   	leave  
81000628:	c3                   	ret    

81000629 <run_exec_file>:
 *
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
81000629:	55                   	push   %ebp
8100062a:	89 e5                	mov    %esp,%ebp
8100062c:	53                   	push   %ebx
8100062d:	83 ec 14             	sub    $0x14,%esp
  // 1.创建子进程
  int pid = fork();
81000630:	e8 4d 03 00 00       	call   81000982 <fork>
81000635:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
81000638:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100063c:	79 21                	jns    8100065f <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR "fork failed: %s" ESC_COLOR_DEFAULT, path);
8100063e:	e8 a3 2b 00 00       	call   810031e6 <__getreent>
81000643:	8b 40 0c             	mov    0xc(%eax),%eax
81000646:	83 ec 04             	sub    $0x4,%esp
81000649:	ff 75 08             	push   0x8(%ebp)
8100064c:	68 80 7a 00 81       	push   $0x81007a80
81000651:	50                   	push   %eax
81000652:	e8 f6 10 00 00       	call   8100174d <fiprintf>
81000657:	83 c4 10             	add    $0x10,%esp
    // 3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
            cpid);
  }
}
8100065a:	e9 82 00 00 00       	jmp    810006e1 <run_exec_file+0xb8>
  } else if (pid == 0) {
8100065f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000663:	75 44                	jne    810006a9 <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000665:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100066c:	eb 29                	jmp    81000697 <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
8100066e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000671:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000678:	8b 45 10             	mov    0x10(%ebp),%eax
8100067b:	01 d0                	add    %edx,%eax
8100067d:	8b 00                	mov    (%eax),%eax
8100067f:	83 ec 04             	sub    $0x4,%esp
81000682:	50                   	push   %eax
81000683:	ff 75 f4             	push   -0xc(%ebp)
81000686:	68 9a 7a 00 81       	push   $0x81007a9a
8100068b:	e8 56 45 00 00       	call   81004be6 <iprintf>
81000690:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000693:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000697:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100069a:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100069d:	7c cf                	jl     8100066e <run_exec_file+0x45>
    exit(-1);
8100069f:	83 ec 0c             	sub    $0xc,%esp
810006a2:	6a ff                	push   $0xffffffff
810006a4:	e8 e9 05 00 00       	call   81000c92 <exit>
    int cpid = wait(&status);
810006a9:	83 ec 0c             	sub    $0xc,%esp
810006ac:	8d 45 e8             	lea    -0x18(%ebp),%eax
810006af:	50                   	push   %eax
810006b0:	e8 ab 04 00 00       	call   81000b60 <wait>
810006b5:	83 c4 10             	add    $0x10,%esp
810006b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid,
810006bb:	8b 5d e8             	mov    -0x18(%ebp),%ebx
810006be:	e8 23 2b 00 00       	call   810031e6 <__getreent>
810006c3:	8b 40 0c             	mov    0xc(%eax),%eax
810006c6:	83 ec 08             	sub    $0x8,%esp
810006c9:	ff 75 ec             	push   -0x14(%ebp)
810006cc:	ff 75 f0             	push   -0x10(%ebp)
810006cf:	53                   	push   %ebx
810006d0:	ff 75 08             	push   0x8(%ebp)
810006d3:	68 a8 7a 00 81       	push   $0x81007aa8
810006d8:	50                   	push   %eax
810006d9:	e8 6f 10 00 00       	call   8100174d <fiprintf>
810006de:	83 c4 20             	add    $0x20,%esp
}
810006e1:	90                   	nop
810006e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810006e5:	c9                   	leave  
810006e6:	c3                   	ret    

810006e7 <main>:

int main(int argc, char **argv) {
810006e7:	8d 4c 24 04          	lea    0x4(%esp),%ecx
810006eb:	83 e4 f0             	and    $0xfffffff0,%esp
810006ee:	ff 71 fc             	push   -0x4(%ecx)
810006f1:	55                   	push   %ebp
810006f2:	89 e5                	mov    %esp,%ebp
810006f4:	51                   	push   %ecx
810006f5:	83 ec 44             	sub    $0x44,%esp
810006f8:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
810006fa:	8b 40 04             	mov    0x4(%eax),%eax
810006fd:	8b 00                	mov    (%eax),%eax
810006ff:	83 ec 08             	sub    $0x8,%esp
81000702:	6a 02                	push   $0x2
81000704:	50                   	push   %eax
81000705:	e8 db 02 00 00       	call   810009e5 <open>
8100070a:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
8100070d:	83 ec 0c             	sub    $0xc,%esp
81000710:	6a 00                	push   $0x0
81000712:	e8 06 04 00 00       	call   81000b1d <dup>
81000717:	83 c4 10             	add    $0x10,%esp
  dup(0);
8100071a:	83 ec 0c             	sub    $0xc,%esp
8100071d:	6a 00                	push   $0x0
8100071f:	e8 f9 03 00 00       	call   81000b1d <dup>
81000724:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
81000727:	e8 00 fe ff ff       	call   8100052c <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
8100072c:	e8 39 fe ff ff       	call   8100056a <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
81000731:	e8 b0 2a 00 00       	call   810031e6 <__getreent>
81000736:	8b 40 04             	mov    0x4(%eax),%eax
81000739:	83 ec 04             	sub    $0x4,%esp
8100073c:	50                   	push   %eax
8100073d:	68 00 04 00 00       	push   $0x400
81000742:	68 e0 8a 00 81       	push   $0x81008ae0
81000747:	e8 c3 0a 00 00       	call   8100120f <fgets>
8100074c:	83 c4 10             	add    $0x10,%esp
8100074f:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000752:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000756:	0f 84 13 01 00 00    	je     8100086f <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
8100075c:	83 ec 08             	sub    $0x8,%esp
8100075f:	6a 0a                	push   $0xa
81000761:	68 e0 8a 00 81       	push   $0x81008ae0
81000766:	e8 d5 4c 00 00       	call   81005440 <strchr>
8100076b:	83 c4 10             	add    $0x10,%esp
8100076e:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000771:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000775:	74 06                	je     8100077d <main+0x96>
      *cr = '\0';
81000777:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100077a:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
8100077d:	83 ec 08             	sub    $0x8,%esp
81000780:	6a 0d                	push   $0xd
81000782:	68 e0 8a 00 81       	push   $0x81008ae0
81000787:	e8 b4 4c 00 00       	call   81005440 <strchr>
8100078c:	83 c4 10             	add    $0x10,%esp
8100078f:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000792:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000796:	74 06                	je     8100079e <main+0xb7>
      *cr = '\0';
81000798:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100079b:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
8100079e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
810007a5:	83 ec 04             	sub    $0x4,%esp
810007a8:	6a 28                	push   $0x28
810007aa:	6a 00                	push   $0x0
810007ac:	8d 45 b8             	lea    -0x48(%ebp),%eax
810007af:	50                   	push   %eax
810007b0:	e8 db 37 00 00       	call   81003f90 <memset>
810007b5:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
810007b8:	c7 45 e4 cc 7a 00 81 	movl   $0x81007acc,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
810007bf:	83 ec 08             	sub    $0x8,%esp
810007c2:	ff 75 e4             	push   -0x1c(%ebp)
810007c5:	68 e0 8a 00 81       	push   $0x81008ae0
810007ca:	e8 9a 4e 00 00       	call   81005669 <strtok>
810007cf:	83 c4 10             	add    $0x10,%esp
810007d2:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
810007d5:	eb 23                	jmp    810007fa <main+0x113>
      argv[argc++] = token;
810007d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007da:	8d 50 01             	lea    0x1(%eax),%edx
810007dd:	89 55 f4             	mov    %edx,-0xc(%ebp)
810007e0:	8b 55 f0             	mov    -0x10(%ebp),%edx
810007e3:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
810007e7:	83 ec 08             	sub    $0x8,%esp
810007ea:	ff 75 e4             	push   -0x1c(%ebp)
810007ed:	6a 00                	push   $0x0
810007ef:	e8 75 4e 00 00       	call   81005669 <strtok>
810007f4:	83 c4 10             	add    $0x10,%esp
810007f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
810007fa:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810007fe:	75 d7                	jne    810007d7 <main+0xf0>
    }

    if (argc == 0) {
81000800:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000804:	74 6f                	je     81000875 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
81000806:	8b 45 b8             	mov    -0x48(%ebp),%eax
81000809:	83 ec 0c             	sub    $0xc,%esp
8100080c:	50                   	push   %eax
8100080d:	e8 8b fd ff ff       	call   8100059d <find_builtin>
81000812:	83 c4 10             	add    $0x10,%esp
81000815:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
81000818:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100081c:	74 17                	je     81000835 <main+0x14e>
      run_builtin(cmd, argc, argv);
8100081e:	83 ec 04             	sub    $0x4,%esp
81000821:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000824:	50                   	push   %eax
81000825:	ff 75 f4             	push   -0xc(%ebp)
81000828:	ff 75 e0             	push   -0x20(%ebp)
8100082b:	e8 b0 fd ff ff       	call   810005e0 <run_builtin>
81000830:	83 c4 10             	add    $0x10,%esp
      continue;
81000833:	eb 41                	jmp    81000876 <main+0x18f>
    }

    // 5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
81000835:	83 ec 04             	sub    $0x4,%esp
81000838:	8d 45 b8             	lea    -0x48(%ebp),%eax
8100083b:	50                   	push   %eax
8100083c:	ff 75 f4             	push   -0xc(%ebp)
8100083f:	68 ce 7a 00 81       	push   $0x81007ace
81000844:	e8 e0 fd ff ff       	call   81000629 <run_exec_file>
81000849:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
8100084c:	e8 95 29 00 00       	call   810031e6 <__getreent>
81000851:	8b 40 0c             	mov    0xc(%eax),%eax
81000854:	83 ec 04             	sub    $0x4,%esp
81000857:	68 e0 8a 00 81       	push   $0x81008ae0
8100085c:	68 d0 7a 00 81       	push   $0x81007ad0
81000861:	50                   	push   %eax
81000862:	e8 e6 0e 00 00       	call   8100174d <fiprintf>
81000867:	83 c4 10             	add    $0x10,%esp
8100086a:	e9 bd fe ff ff       	jmp    8100072c <main+0x45>
      continue;
8100086f:	90                   	nop
81000870:	e9 b7 fe ff ff       	jmp    8100072c <main+0x45>
      continue;
81000875:	90                   	nop
  for (;;) {
81000876:	e9 b1 fe ff ff       	jmp    8100072c <main+0x45>

8100087b <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100087b:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100087e:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000880:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000882:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000884:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000886:	e9 00 00 00 00       	jmp    8100088b <cstart>

8100088b <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
8100088b:	55                   	push   %ebp
8100088c:	89 e5                	mov    %esp,%ebp
8100088e:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000891:	c7 45 f4 e0 88 00 81 	movl   $0x810088e0,-0xc(%ebp)
    while (start < __bss_end__) {
81000898:	eb 0c                	jmp    810008a6 <cstart+0x1b>
        *(start++) = 0;
8100089a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100089d:	8d 50 01             	lea    0x1(%eax),%edx
810008a0:	89 55 f4             	mov    %edx,-0xc(%ebp)
810008a3:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
810008a6:	81 7d f4 80 8f 00 81 	cmpl   $0x81008f80,-0xc(%ebp)
810008ad:	72 eb                	jb     8100089a <cstart+0xf>
    }
    
    exit(main(argc, argv));
810008af:	83 ec 08             	sub    $0x8,%esp
810008b2:	ff 75 0c             	push   0xc(%ebp)
810008b5:	ff 75 08             	push   0x8(%ebp)
810008b8:	e8 2a fe ff ff       	call   810006e7 <main>
810008bd:	83 c4 10             	add    $0x10,%esp
810008c0:	83 ec 0c             	sub    $0xc,%esp
810008c3:	50                   	push   %eax
810008c4:	e8 c9 03 00 00       	call   81000c92 <exit>

810008c9 <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
810008c9:	55                   	push   %ebp
810008ca:	89 e5                	mov    %esp,%ebp
810008cc:	57                   	push   %edi
810008cd:	56                   	push   %esi
810008ce:	53                   	push   %ebx
810008cf:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810008d2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810008d9:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810008e0:	8b 45 08             	mov    0x8(%ebp),%eax
810008e3:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810008e6:	8b 55 08             	mov    0x8(%ebp),%edx
810008e9:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810008ec:	8b 4d 08             	mov    0x8(%ebp),%ecx
810008ef:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810008f2:	8b 5d 08             	mov    0x8(%ebp),%ebx
810008f5:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810008f8:	8b 75 08             	mov    0x8(%ebp),%esi
810008fb:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810008fd:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000900:	50                   	push   %eax
81000901:	52                   	push   %edx
81000902:	51                   	push   %ecx
81000903:	53                   	push   %ebx
81000904:	56                   	push   %esi
81000905:	ff 1f                	lcall  *(%edi)
81000907:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
8100090a:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
8100090d:	83 c4 10             	add    $0x10,%esp
81000910:	5b                   	pop    %ebx
81000911:	5e                   	pop    %esi
81000912:	5f                   	pop    %edi
81000913:	5d                   	pop    %ebp
81000914:	c3                   	ret    

81000915 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
81000915:	55                   	push   %ebp
81000916:	89 e5                	mov    %esp,%ebp
81000918:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
8100091b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100091f:	7e 1b                	jle    8100093c <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
81000921:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000928:	8b 45 08             	mov    0x8(%ebp),%eax
8100092b:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
8100092e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000931:	50                   	push   %eax
81000932:	e8 92 ff ff ff       	call   810008c9 <sys_call>
81000937:	83 c4 04             	add    $0x4,%esp
8100093a:	eb 01                	jmp    8100093d <msleep+0x28>
    if (ms <= 0) return;
8100093c:	90                   	nop

}
8100093d:	c9                   	leave  
8100093e:	c3                   	ret    

8100093f <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
8100093f:	55                   	push   %ebp
81000940:	89 e5                	mov    %esp,%ebp
81000942:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000945:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
8100094c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100094f:	50                   	push   %eax
81000950:	e8 74 ff ff ff       	call   810008c9 <sys_call>
81000955:	83 c4 04             	add    $0x4,%esp
}
81000958:	c9                   	leave  
81000959:	c3                   	ret    

8100095a <print_msg>:

void print_msg(const char *fmt, int arg) {
8100095a:	55                   	push   %ebp
8100095b:	89 e5                	mov    %esp,%ebp
8100095d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000960:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000967:	8b 45 08             	mov    0x8(%ebp),%eax
8100096a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
8100096d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000970:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000973:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000976:	50                   	push   %eax
81000977:	e8 4d ff ff ff       	call   810008c9 <sys_call>
8100097c:	83 c4 04             	add    $0x4,%esp
}
8100097f:	90                   	nop
81000980:	c9                   	leave  
81000981:	c3                   	ret    

81000982 <fork>:

int fork (void) {
81000982:	55                   	push   %ebp
81000983:	89 e5                	mov    %esp,%ebp
81000985:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000988:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
8100098f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000992:	50                   	push   %eax
81000993:	e8 31 ff ff ff       	call   810008c9 <sys_call>
81000998:	83 c4 04             	add    $0x4,%esp
}
8100099b:	c9                   	leave  
8100099c:	c3                   	ret    

8100099d <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
8100099d:	55                   	push   %ebp
8100099e:	89 e5                	mov    %esp,%ebp
810009a0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
810009a3:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
810009aa:	8b 45 08             	mov    0x8(%ebp),%eax
810009ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810009b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810009b3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810009b6:	8b 45 10             	mov    0x10(%ebp),%eax
810009b9:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
810009bc:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009bf:	50                   	push   %eax
810009c0:	e8 04 ff ff ff       	call   810008c9 <sys_call>
810009c5:	83 c4 04             	add    $0x4,%esp
}
810009c8:	c9                   	leave  
810009c9:	c3                   	ret    

810009ca <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810009ca:	55                   	push   %ebp
810009cb:	89 e5                	mov    %esp,%ebp
810009cd:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810009d0:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810009d7:	8d 45 ec             	lea    -0x14(%ebp),%eax
810009da:	50                   	push   %eax
810009db:	e8 e9 fe ff ff       	call   810008c9 <sys_call>
810009e0:	83 c4 04             	add    $0x4,%esp
}
810009e3:	c9                   	leave  
810009e4:	c3                   	ret    

810009e5 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810009e5:	55                   	push   %ebp
810009e6:	89 e5                	mov    %esp,%ebp
810009e8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810009eb:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810009f2:	8b 45 08             	mov    0x8(%ebp),%eax
810009f5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810009f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810009fb:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810009fe:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a01:	50                   	push   %eax
81000a02:	e8 c2 fe ff ff       	call   810008c9 <sys_call>
81000a07:	83 c4 04             	add    $0x4,%esp
}
81000a0a:	c9                   	leave  
81000a0b:	c3                   	ret    

81000a0c <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
81000a0c:	55                   	push   %ebp
81000a0d:	89 e5                	mov    %esp,%ebp
81000a0f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000a12:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
81000a19:	8b 45 08             	mov    0x8(%ebp),%eax
81000a1c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a22:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a25:	8b 45 10             	mov    0x10(%ebp),%eax
81000a28:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a2b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a2e:	50                   	push   %eax
81000a2f:	e8 95 fe ff ff       	call   810008c9 <sys_call>
81000a34:	83 c4 04             	add    $0x4,%esp
}
81000a37:	c9                   	leave  
81000a38:	c3                   	ret    

81000a39 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000a39:	55                   	push   %ebp
81000a3a:	89 e5                	mov    %esp,%ebp
81000a3c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000a3f:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000a46:	8b 45 08             	mov    0x8(%ebp),%eax
81000a49:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000a4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a4f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000a52:	8b 45 10             	mov    0x10(%ebp),%eax
81000a55:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000a58:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a5b:	50                   	push   %eax
81000a5c:	e8 68 fe ff ff       	call   810008c9 <sys_call>
81000a61:	83 c4 04             	add    $0x4,%esp
}
81000a64:	c9                   	leave  
81000a65:	c3                   	ret    

81000a66 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000a66:	55                   	push   %ebp
81000a67:	89 e5                	mov    %esp,%ebp
81000a69:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000a6c:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000a73:	8b 45 08             	mov    0x8(%ebp),%eax
81000a76:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000a79:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000a7c:	50                   	push   %eax
81000a7d:	e8 47 fe ff ff       	call   810008c9 <sys_call>
81000a82:	83 c4 04             	add    $0x4,%esp
}
81000a85:	c9                   	leave  
81000a86:	c3                   	ret    

81000a87 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000a87:	55                   	push   %ebp
81000a88:	89 e5                	mov    %esp,%ebp
81000a8a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000a8d:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000a94:	8b 45 08             	mov    0x8(%ebp),%eax
81000a97:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000a9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81000a9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000aa0:	8b 45 10             	mov    0x10(%ebp),%eax
81000aa3:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000aa6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aa9:	50                   	push   %eax
81000aaa:	e8 1a fe ff ff       	call   810008c9 <sys_call>
81000aaf:	83 c4 04             	add    $0x4,%esp
}
81000ab2:	c9                   	leave  
81000ab3:	c3                   	ret    

81000ab4 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000ab4:	55                   	push   %ebp
81000ab5:	89 e5                	mov    %esp,%ebp
81000ab7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000aba:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000ac1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ac4:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000ac7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000aca:	50                   	push   %eax
81000acb:	e8 f9 fd ff ff       	call   810008c9 <sys_call>
81000ad0:	83 c4 04             	add    $0x4,%esp
}
81000ad3:	c9                   	leave  
81000ad4:	c3                   	ret    

81000ad5 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000ad5:	55                   	push   %ebp
81000ad6:	89 e5                	mov    %esp,%ebp
81000ad8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000adb:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000ae2:	8b 45 08             	mov    0x8(%ebp),%eax
81000ae5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000ae8:	8b 45 0c             	mov    0xc(%ebp),%eax
81000aeb:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
81000aee:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000af1:	50                   	push   %eax
81000af2:	e8 d2 fd ff ff       	call   810008c9 <sys_call>
81000af7:	83 c4 04             	add    $0x4,%esp
}
81000afa:	c9                   	leave  
81000afb:	c3                   	ret    

81000afc <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
81000afc:	55                   	push   %ebp
81000afd:	89 e5                	mov    %esp,%ebp
81000aff:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000b02:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
81000b09:	8b 45 08             	mov    0x8(%ebp),%eax
81000b0c:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
81000b0f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b12:	50                   	push   %eax
81000b13:	e8 b1 fd ff ff       	call   810008c9 <sys_call>
81000b18:	83 c4 04             	add    $0x4,%esp
}
81000b1b:	c9                   	leave  
81000b1c:	c3                   	ret    

81000b1d <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
81000b1d:	55                   	push   %ebp
81000b1e:	89 e5                	mov    %esp,%ebp
81000b20:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000b23:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
81000b2a:	8b 45 08             	mov    0x8(%ebp),%eax
81000b2d:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000b30:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b33:	50                   	push   %eax
81000b34:	e8 90 fd ff ff       	call   810008c9 <sys_call>
81000b39:	83 c4 04             	add    $0x4,%esp
}
81000b3c:	c9                   	leave  
81000b3d:	c3                   	ret    

81000b3e <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
81000b3e:	55                   	push   %ebp
81000b3f:	89 e5                	mov    %esp,%ebp
81000b41:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000b44:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
81000b4b:	8b 45 08             	mov    0x8(%ebp),%eax
81000b4e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000b51:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b54:	50                   	push   %eax
81000b55:	e8 6f fd ff ff       	call   810008c9 <sys_call>
81000b5a:	83 c4 04             	add    $0x4,%esp
}
81000b5d:	90                   	nop
81000b5e:	c9                   	leave  
81000b5f:	c3                   	ret    

81000b60 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000b60:	55                   	push   %ebp
81000b61:	89 e5                	mov    %esp,%ebp
81000b63:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000b66:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000b6d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b70:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000b73:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b76:	50                   	push   %eax
81000b77:	e8 4d fd ff ff       	call   810008c9 <sys_call>
81000b7c:	83 c4 04             	add    $0x4,%esp
}
81000b7f:	c9                   	leave  
81000b80:	c3                   	ret    

81000b81 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000b81:	55                   	push   %ebp
81000b82:	89 e5                	mov    %esp,%ebp
81000b84:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
81000b87:	83 ec 0c             	sub    $0xc,%esp
81000b8a:	6a 20                	push   $0x20
81000b8c:	e8 df 27 00 00       	call   81003370 <malloc>
81000b91:	83 c4 10             	add    $0x10,%esp
81000b94:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
81000b97:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000b9b:	75 07                	jne    81000ba4 <opendir+0x23>
        return (DIR*)0;
81000b9d:	b8 00 00 00 00       	mov    $0x0,%eax
81000ba2:	eb 43                	jmp    81000be7 <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000ba4:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
81000bab:	8b 45 08             	mov    0x8(%ebp),%eax
81000bae:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000bb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000bb4:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000bb7:	83 ec 0c             	sub    $0xc,%esp
81000bba:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000bbd:	50                   	push   %eax
81000bbe:	e8 06 fd ff ff       	call   810008c9 <sys_call>
81000bc3:	83 c4 10             	add    $0x10,%esp
81000bc6:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
81000bc9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000bcd:	79 15                	jns    81000be4 <opendir+0x63>
        free(dir);
81000bcf:	83 ec 0c             	sub    $0xc,%esp
81000bd2:	ff 75 f4             	push   -0xc(%ebp)
81000bd5:	e8 b2 27 00 00       	call   8100338c <free>
81000bda:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000bdd:	b8 00 00 00 00       	mov    $0x0,%eax
81000be2:	eb 03                	jmp    81000be7 <opendir+0x66>
    }

    return dir;    
81000be4:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000be7:	c9                   	leave  
81000be8:	c3                   	ret    

81000be9 <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
81000be9:	55                   	push   %ebp
81000bea:	89 e5                	mov    %esp,%ebp
81000bec:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
81000bef:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000bf6:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf9:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
81000bfc:	8b 45 08             	mov    0x8(%ebp),%eax
81000bff:	83 c0 04             	add    $0x4,%eax
81000c02:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
81000c05:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000c08:	50                   	push   %eax
81000c09:	e8 bb fc ff ff       	call   810008c9 <sys_call>
81000c0e:	83 c4 04             	add    $0x4,%esp
81000c11:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000c14:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000c18:	79 07                	jns    81000c21 <readdir+0x38>
        return (struct dirent*)0;
81000c1a:	b8 00 00 00 00       	mov    $0x0,%eax
81000c1f:	eb 06                	jmp    81000c27 <readdir+0x3e>
    }

    return &dir->dirent;   
81000c21:	8b 45 08             	mov    0x8(%ebp),%eax
81000c24:	83 c0 04             	add    $0x4,%eax
}
81000c27:	c9                   	leave  
81000c28:	c3                   	ret    

81000c29 <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
81000c29:	55                   	push   %ebp
81000c2a:	89 e5                	mov    %esp,%ebp
81000c2c:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000c2f:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
81000c36:	8b 45 08             	mov    0x8(%ebp),%eax
81000c39:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
81000c3c:	8d 45 e0             	lea    -0x20(%ebp),%eax
81000c3f:	50                   	push   %eax
81000c40:	e8 84 fc ff ff       	call   810008c9 <sys_call>
81000c45:	83 c4 04             	add    $0x4,%esp
81000c48:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
81000c4b:	83 ec 0c             	sub    $0xc,%esp
81000c4e:	ff 75 08             	push   0x8(%ebp)
81000c51:	e8 36 27 00 00       	call   8100338c <free>
81000c56:	83 c4 10             	add    $0x10,%esp

    return err;   
81000c59:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000c5c:	c9                   	leave  
81000c5d:	c3                   	ret    

81000c5e <atoi>:
81000c5e:	55                   	push   %ebp
81000c5f:	89 e5                	mov    %esp,%ebp
81000c61:	83 ec 08             	sub    $0x8,%esp
81000c64:	83 ec 04             	sub    $0x4,%esp
81000c67:	6a 0a                	push   $0xa
81000c69:	6a 00                	push   $0x0
81000c6b:	ff 75 08             	push   0x8(%ebp)
81000c6e:	e8 33 4d 00 00       	call   810059a6 <strtol>
81000c73:	83 c4 10             	add    $0x10,%esp
81000c76:	c9                   	leave  
81000c77:	c3                   	ret    

81000c78 <_atoi_r>:
81000c78:	55                   	push   %ebp
81000c79:	89 e5                	mov    %esp,%ebp
81000c7b:	83 ec 08             	sub    $0x8,%esp
81000c7e:	6a 0a                	push   $0xa
81000c80:	6a 00                	push   $0x0
81000c82:	ff 75 0c             	push   0xc(%ebp)
81000c85:	ff 75 08             	push   0x8(%ebp)
81000c88:	e8 cf 4c 00 00       	call   8100595c <_strtol_r>
81000c8d:	83 c4 10             	add    $0x10,%esp
81000c90:	c9                   	leave  
81000c91:	c3                   	ret    

81000c92 <exit>:
81000c92:	55                   	push   %ebp
81000c93:	89 e5                	mov    %esp,%ebp
81000c95:	83 ec 08             	sub    $0x8,%esp
81000c98:	83 ec 08             	sub    $0x8,%esp
81000c9b:	6a 00                	push   $0x0
81000c9d:	ff 75 08             	push   0x8(%ebp)
81000ca0:	e8 fe 4f 00 00       	call   81005ca3 <__call_exitprocs>
81000ca5:	83 c4 10             	add    $0x10,%esp
81000ca8:	a1 78 7b 00 81       	mov    0x81007b78,%eax
81000cad:	8b 40 3c             	mov    0x3c(%eax),%eax
81000cb0:	85 c0                	test   %eax,%eax
81000cb2:	74 17                	je     81000ccb <exit+0x39>
81000cb4:	a1 78 7b 00 81       	mov    0x81007b78,%eax
81000cb9:	8b 40 3c             	mov    0x3c(%eax),%eax
81000cbc:	8b 15 78 7b 00 81    	mov    0x81007b78,%edx
81000cc2:	83 ec 0c             	sub    $0xc,%esp
81000cc5:	52                   	push   %edx
81000cc6:	ff d0                	call   *%eax
81000cc8:	83 c4 10             	add    $0x10,%esp
81000ccb:	83 ec 0c             	sub    $0xc,%esp
81000cce:	ff 75 08             	push   0x8(%ebp)
81000cd1:	e8 68 fe ff ff       	call   81000b3e <_exit>

81000cd6 <_fclose_r>:
81000cd6:	55                   	push   %ebp
81000cd7:	89 e5                	mov    %esp,%ebp
81000cd9:	53                   	push   %ebx
81000cda:	83 ec 14             	sub    $0x14,%esp
81000cdd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000ce0:	85 db                	test   %ebx,%ebx
81000ce2:	75 0a                	jne    81000cee <_fclose_r+0x18>
81000ce4:	b8 00 00 00 00       	mov    $0x0,%eax
81000ce9:	e9 ea 00 00 00       	jmp    81000dd8 <_fclose_r+0x102>
81000cee:	8b 45 08             	mov    0x8(%ebp),%eax
81000cf1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000cf4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000cf8:	74 18                	je     81000d12 <_fclose_r+0x3c>
81000cfa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000cfd:	8b 40 38             	mov    0x38(%eax),%eax
81000d00:	85 c0                	test   %eax,%eax
81000d02:	75 0e                	jne    81000d12 <_fclose_r+0x3c>
81000d04:	83 ec 0c             	sub    $0xc,%esp
81000d07:	ff 75 f0             	push   -0x10(%ebp)
81000d0a:	e8 14 08 00 00       	call   81001523 <__sinit>
81000d0f:	83 c4 10             	add    $0x10,%esp
81000d12:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d16:	66 85 c0             	test   %ax,%ax
81000d19:	75 0a                	jne    81000d25 <_fclose_r+0x4f>
81000d1b:	b8 00 00 00 00       	mov    $0x0,%eax
81000d20:	e9 b3 00 00 00       	jmp    81000dd8 <_fclose_r+0x102>
81000d25:	83 ec 08             	sub    $0x8,%esp
81000d28:	53                   	push   %ebx
81000d29:	ff 75 08             	push   0x8(%ebp)
81000d2c:	e8 c9 00 00 00       	call   81000dfa <__sflush_r>
81000d31:	83 c4 10             	add    $0x10,%esp
81000d34:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d37:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000d3a:	85 c0                	test   %eax,%eax
81000d3c:	74 1d                	je     81000d5b <_fclose_r+0x85>
81000d3e:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000d41:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000d44:	83 ec 08             	sub    $0x8,%esp
81000d47:	52                   	push   %edx
81000d48:	ff 75 08             	push   0x8(%ebp)
81000d4b:	ff d0                	call   *%eax
81000d4d:	83 c4 10             	add    $0x10,%esp
81000d50:	85 c0                	test   %eax,%eax
81000d52:	79 07                	jns    81000d5b <_fclose_r+0x85>
81000d54:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81000d5b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d5f:	98                   	cwtl   
81000d60:	25 80 00 00 00       	and    $0x80,%eax
81000d65:	85 c0                	test   %eax,%eax
81000d67:	74 12                	je     81000d7b <_fclose_r+0xa5>
81000d69:	8b 43 10             	mov    0x10(%ebx),%eax
81000d6c:	83 ec 08             	sub    $0x8,%esp
81000d6f:	50                   	push   %eax
81000d70:	ff 75 08             	push   0x8(%ebp)
81000d73:	e8 01 0a 00 00       	call   81001779 <_free_r>
81000d78:	83 c4 10             	add    $0x10,%esp
81000d7b:	8b 43 30             	mov    0x30(%ebx),%eax
81000d7e:	85 c0                	test   %eax,%eax
81000d80:	74 23                	je     81000da5 <_fclose_r+0xcf>
81000d82:	8b 53 30             	mov    0x30(%ebx),%edx
81000d85:	8d 43 40             	lea    0x40(%ebx),%eax
81000d88:	39 c2                	cmp    %eax,%edx
81000d8a:	74 12                	je     81000d9e <_fclose_r+0xc8>
81000d8c:	8b 43 30             	mov    0x30(%ebx),%eax
81000d8f:	83 ec 08             	sub    $0x8,%esp
81000d92:	50                   	push   %eax
81000d93:	ff 75 08             	push   0x8(%ebp)
81000d96:	e8 de 09 00 00       	call   81001779 <_free_r>
81000d9b:	83 c4 10             	add    $0x10,%esp
81000d9e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000da5:	8b 43 44             	mov    0x44(%ebx),%eax
81000da8:	85 c0                	test   %eax,%eax
81000daa:	74 19                	je     81000dc5 <_fclose_r+0xef>
81000dac:	8b 43 44             	mov    0x44(%ebx),%eax
81000daf:	83 ec 08             	sub    $0x8,%esp
81000db2:	50                   	push   %eax
81000db3:	ff 75 08             	push   0x8(%ebp)
81000db6:	e8 be 09 00 00       	call   81001779 <_free_r>
81000dbb:	83 c4 10             	add    $0x10,%esp
81000dbe:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81000dc5:	e8 f2 07 00 00       	call   810015bc <__sfp_lock_acquire>
81000dca:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81000dd0:	e8 ed 07 00 00       	call   810015c2 <__sfp_lock_release>
81000dd5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000dd8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000ddb:	c9                   	leave  
81000ddc:	c3                   	ret    

81000ddd <fclose>:
81000ddd:	55                   	push   %ebp
81000dde:	89 e5                	mov    %esp,%ebp
81000de0:	83 ec 08             	sub    $0x8,%esp
81000de3:	8b 55 08             	mov    0x8(%ebp),%edx
81000de6:	a1 24 83 00 81       	mov    0x81008324,%eax
81000deb:	83 ec 08             	sub    $0x8,%esp
81000dee:	52                   	push   %edx
81000def:	50                   	push   %eax
81000df0:	e8 e1 fe ff ff       	call   81000cd6 <_fclose_r>
81000df5:	83 c4 10             	add    $0x10,%esp
81000df8:	c9                   	leave  
81000df9:	c3                   	ret    

81000dfa <__sflush_r>:
81000dfa:	55                   	push   %ebp
81000dfb:	89 e5                	mov    %esp,%ebp
81000dfd:	57                   	push   %edi
81000dfe:	56                   	push   %esi
81000dff:	53                   	push   %ebx
81000e00:	83 ec 1c             	sub    $0x1c,%esp
81000e03:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000e06:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e0a:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000e0e:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000e12:	83 e0 08             	and    $0x8,%eax
81000e15:	85 c0                	test   %eax,%eax
81000e17:	0f 85 93 01 00 00    	jne    81000fb0 <__sflush_r+0x1b6>
81000e1d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e21:	80 cc 08             	or     $0x8,%ah
81000e24:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e28:	8b 43 04             	mov    0x4(%ebx),%eax
81000e2b:	85 c0                	test   %eax,%eax
81000e2d:	7f 0b                	jg     81000e3a <__sflush_r+0x40>
81000e2f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000e32:	85 c0                	test   %eax,%eax
81000e34:	0f 8e 6f 01 00 00    	jle    81000fa9 <__sflush_r+0x1af>
81000e3a:	8b 43 28             	mov    0x28(%ebx),%eax
81000e3d:	85 c0                	test   %eax,%eax
81000e3f:	0f 84 64 01 00 00    	je     81000fa9 <__sflush_r+0x1af>
81000e45:	8b 45 08             	mov    0x8(%ebp),%eax
81000e48:	8b 00                	mov    (%eax),%eax
81000e4a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000e4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000e50:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000e56:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e5a:	98                   	cwtl   
81000e5b:	25 00 10 00 00       	and    $0x1000,%eax
81000e60:	85 c0                	test   %eax,%eax
81000e62:	74 08                	je     81000e6c <__sflush_r+0x72>
81000e64:	8b 43 50             	mov    0x50(%ebx),%eax
81000e67:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000e6a:	eb 64                	jmp    81000ed0 <__sflush_r+0xd6>
81000e6c:	8b 43 28             	mov    0x28(%ebx),%eax
81000e6f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000e72:	6a 01                	push   $0x1
81000e74:	6a 00                	push   $0x0
81000e76:	52                   	push   %edx
81000e77:	ff 75 08             	push   0x8(%ebp)
81000e7a:	ff d0                	call   *%eax
81000e7c:	83 c4 10             	add    $0x10,%esp
81000e7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000e82:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000e86:	75 48                	jne    81000ed0 <__sflush_r+0xd6>
81000e88:	8b 45 08             	mov    0x8(%ebp),%eax
81000e8b:	8b 00                	mov    (%eax),%eax
81000e8d:	85 c0                	test   %eax,%eax
81000e8f:	74 3f                	je     81000ed0 <__sflush_r+0xd6>
81000e91:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000e98:	8b 45 08             	mov    0x8(%ebp),%eax
81000e9b:	8b 00                	mov    (%eax),%eax
81000e9d:	83 f8 1d             	cmp    $0x1d,%eax
81000ea0:	74 0a                	je     81000eac <__sflush_r+0xb2>
81000ea2:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea5:	8b 00                	mov    (%eax),%eax
81000ea7:	83 f8 16             	cmp    $0x16,%eax
81000eaa:	75 11                	jne    81000ebd <__sflush_r+0xc3>
81000eac:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000eb3:	8b 45 08             	mov    0x8(%ebp),%eax
81000eb6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000eb9:	89 10                	mov    %edx,(%eax)
81000ebb:	eb 0b                	jmp    81000ec8 <__sflush_r+0xce>
81000ebd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ec1:	83 c8 40             	or     $0x40,%eax
81000ec4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ec8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000ecb:	e9 48 01 00 00       	jmp    81001018 <__sflush_r+0x21e>
81000ed0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ed4:	98                   	cwtl   
81000ed5:	83 e0 04             	and    $0x4,%eax
81000ed8:	85 c0                	test   %eax,%eax
81000eda:	74 13                	je     81000eef <__sflush_r+0xf5>
81000edc:	8b 43 04             	mov    0x4(%ebx),%eax
81000edf:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000ee2:	8b 43 30             	mov    0x30(%ebx),%eax
81000ee5:	85 c0                	test   %eax,%eax
81000ee7:	74 06                	je     81000eef <__sflush_r+0xf5>
81000ee9:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000eec:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000eef:	8b 43 28             	mov    0x28(%ebx),%eax
81000ef2:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000ef5:	6a 00                	push   $0x0
81000ef7:	ff 75 e4             	push   -0x1c(%ebp)
81000efa:	52                   	push   %edx
81000efb:	ff 75 08             	push   0x8(%ebp)
81000efe:	ff d0                	call   *%eax
81000f00:	83 c4 10             	add    $0x10,%esp
81000f03:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000f06:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000f0a:	75 1d                	jne    81000f29 <__sflush_r+0x12f>
81000f0c:	8b 45 08             	mov    0x8(%ebp),%eax
81000f0f:	8b 00                	mov    (%eax),%eax
81000f11:	85 c0                	test   %eax,%eax
81000f13:	74 14                	je     81000f29 <__sflush_r+0x12f>
81000f15:	8b 45 08             	mov    0x8(%ebp),%eax
81000f18:	8b 00                	mov    (%eax),%eax
81000f1a:	83 f8 1d             	cmp    $0x1d,%eax
81000f1d:	74 0a                	je     81000f29 <__sflush_r+0x12f>
81000f1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000f22:	8b 00                	mov    (%eax),%eax
81000f24:	83 f8 16             	cmp    $0x16,%eax
81000f27:	75 6e                	jne    81000f97 <__sflush_r+0x19d>
81000f29:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f2d:	80 e4 f7             	and    $0xf7,%ah
81000f30:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000f34:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000f3b:	8b 43 10             	mov    0x10(%ebx),%eax
81000f3e:	89 03                	mov    %eax,(%ebx)
81000f40:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f44:	98                   	cwtl   
81000f45:	25 00 10 00 00       	and    $0x1000,%eax
81000f4a:	85 c0                	test   %eax,%eax
81000f4c:	74 15                	je     81000f63 <__sflush_r+0x169>
81000f4e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000f52:	75 09                	jne    81000f5d <__sflush_r+0x163>
81000f54:	8b 45 08             	mov    0x8(%ebp),%eax
81000f57:	8b 00                	mov    (%eax),%eax
81000f59:	85 c0                	test   %eax,%eax
81000f5b:	75 06                	jne    81000f63 <__sflush_r+0x169>
81000f5d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f60:	89 43 50             	mov    %eax,0x50(%ebx)
81000f63:	8b 45 08             	mov    0x8(%ebp),%eax
81000f66:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000f69:	89 10                	mov    %edx,(%eax)
81000f6b:	8b 43 30             	mov    0x30(%ebx),%eax
81000f6e:	85 c0                	test   %eax,%eax
81000f70:	74 37                	je     81000fa9 <__sflush_r+0x1af>
81000f72:	8b 53 30             	mov    0x30(%ebx),%edx
81000f75:	8d 43 40             	lea    0x40(%ebx),%eax
81000f78:	39 c2                	cmp    %eax,%edx
81000f7a:	74 12                	je     81000f8e <__sflush_r+0x194>
81000f7c:	8b 43 30             	mov    0x30(%ebx),%eax
81000f7f:	83 ec 08             	sub    $0x8,%esp
81000f82:	50                   	push   %eax
81000f83:	ff 75 08             	push   0x8(%ebp)
81000f86:	e8 ee 07 00 00       	call   81001779 <_free_r>
81000f8b:	83 c4 10             	add    $0x10,%esp
81000f8e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000f95:	eb 12                	jmp    81000fa9 <__sflush_r+0x1af>
81000f97:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000f9b:	83 c8 40             	or     $0x40,%eax
81000f9e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000fa2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000fa7:	eb 6f                	jmp    81001018 <__sflush_r+0x21e>
81000fa9:	b8 00 00 00 00       	mov    $0x0,%eax
81000fae:	eb 68                	jmp    81001018 <__sflush_r+0x21e>
81000fb0:	8b 73 10             	mov    0x10(%ebx),%esi
81000fb3:	85 f6                	test   %esi,%esi
81000fb5:	75 07                	jne    81000fbe <__sflush_r+0x1c4>
81000fb7:	b8 00 00 00 00       	mov    $0x0,%eax
81000fbc:	eb 5a                	jmp    81001018 <__sflush_r+0x21e>
81000fbe:	8b 03                	mov    (%ebx),%eax
81000fc0:	29 f0                	sub    %esi,%eax
81000fc2:	89 c7                	mov    %eax,%edi
81000fc4:	89 33                	mov    %esi,(%ebx)
81000fc6:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000fca:	83 e0 03             	and    $0x3,%eax
81000fcd:	85 c0                	test   %eax,%eax
81000fcf:	75 05                	jne    81000fd6 <__sflush_r+0x1dc>
81000fd1:	8b 43 14             	mov    0x14(%ebx),%eax
81000fd4:	eb 05                	jmp    81000fdb <__sflush_r+0x1e1>
81000fd6:	b8 00 00 00 00       	mov    $0x0,%eax
81000fdb:	89 43 08             	mov    %eax,0x8(%ebx)
81000fde:	eb 2f                	jmp    8100100f <__sflush_r+0x215>
81000fe0:	8b 43 24             	mov    0x24(%ebx),%eax
81000fe3:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000fe6:	57                   	push   %edi
81000fe7:	56                   	push   %esi
81000fe8:	52                   	push   %edx
81000fe9:	ff 75 08             	push   0x8(%ebp)
81000fec:	ff d0                	call   *%eax
81000fee:	83 c4 10             	add    $0x10,%esp
81000ff1:	85 c0                	test   %eax,%eax
81000ff3:	7f 12                	jg     81001007 <__sflush_r+0x20d>
81000ff5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ff9:	83 c8 40             	or     $0x40,%eax
81000ffc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001000:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001005:	eb 11                	jmp    81001018 <__sflush_r+0x21e>
81001007:	89 c1                	mov    %eax,%ecx
81001009:	89 c8                	mov    %ecx,%eax
8100100b:	01 c6                	add    %eax,%esi
8100100d:	29 cf                	sub    %ecx,%edi
8100100f:	85 ff                	test   %edi,%edi
81001011:	7f cd                	jg     81000fe0 <__sflush_r+0x1e6>
81001013:	b8 00 00 00 00       	mov    $0x0,%eax
81001018:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100101b:	5b                   	pop    %ebx
8100101c:	5e                   	pop    %esi
8100101d:	5f                   	pop    %edi
8100101e:	5d                   	pop    %ebp
8100101f:	c3                   	ret    

81001020 <_fflush_r>:
81001020:	55                   	push   %ebp
81001021:	89 e5                	mov    %esp,%ebp
81001023:	53                   	push   %ebx
81001024:	83 ec 14             	sub    $0x14,%esp
81001027:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100102a:	8b 45 08             	mov    0x8(%ebp),%eax
8100102d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001030:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001034:	74 18                	je     8100104e <_fflush_r+0x2e>
81001036:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001039:	8b 40 38             	mov    0x38(%eax),%eax
8100103c:	85 c0                	test   %eax,%eax
8100103e:	75 0e                	jne    8100104e <_fflush_r+0x2e>
81001040:	83 ec 0c             	sub    $0xc,%esp
81001043:	ff 75 f4             	push   -0xc(%ebp)
81001046:	e8 d8 04 00 00       	call   81001523 <__sinit>
8100104b:	83 c4 10             	add    $0x10,%esp
8100104e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001052:	66 85 c0             	test   %ax,%ax
81001055:	75 07                	jne    8100105e <_fflush_r+0x3e>
81001057:	b8 00 00 00 00       	mov    $0x0,%eax
8100105c:	eb 15                	jmp    81001073 <_fflush_r+0x53>
8100105e:	83 ec 08             	sub    $0x8,%esp
81001061:	53                   	push   %ebx
81001062:	ff 75 08             	push   0x8(%ebp)
81001065:	e8 90 fd ff ff       	call   81000dfa <__sflush_r>
8100106a:	83 c4 10             	add    $0x10,%esp
8100106d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001070:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001073:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001076:	c9                   	leave  
81001077:	c3                   	ret    

81001078 <fflush>:
81001078:	55                   	push   %ebp
81001079:	89 e5                	mov    %esp,%ebp
8100107b:	83 ec 08             	sub    $0x8,%esp
8100107e:	8b 55 08             	mov    0x8(%ebp),%edx
81001081:	85 d2                	test   %edx,%edx
81001083:	75 18                	jne    8100109d <fflush+0x25>
81001085:	a1 78 7b 00 81       	mov    0x81007b78,%eax
8100108a:	83 ec 08             	sub    $0x8,%esp
8100108d:	68 20 10 00 81       	push   $0x81001020
81001092:	50                   	push   %eax
81001093:	e8 d6 11 00 00       	call   8100226e <_fwalk_reent>
81001098:	83 c4 10             	add    $0x10,%esp
8100109b:	eb 12                	jmp    810010af <fflush+0x37>
8100109d:	a1 24 83 00 81       	mov    0x81008324,%eax
810010a2:	83 ec 08             	sub    $0x8,%esp
810010a5:	52                   	push   %edx
810010a6:	50                   	push   %eax
810010a7:	e8 74 ff ff ff       	call   81001020 <_fflush_r>
810010ac:	83 c4 10             	add    $0x10,%esp
810010af:	c9                   	leave  
810010b0:	c3                   	ret    

810010b1 <_fgets_r>:
810010b1:	55                   	push   %ebp
810010b2:	89 e5                	mov    %esp,%ebp
810010b4:	83 ec 28             	sub    $0x28,%esp
810010b7:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
810010bb:	7f 0a                	jg     810010c7 <_fgets_r+0x16>
810010bd:	b8 00 00 00 00       	mov    $0x0,%eax
810010c2:	e9 46 01 00 00       	jmp    8100120d <_fgets_r+0x15c>
810010c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810010ca:	89 45 f0             	mov    %eax,-0x10(%ebp)
810010cd:	8b 45 08             	mov    0x8(%ebp),%eax
810010d0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010d3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810010d7:	74 18                	je     810010f1 <_fgets_r+0x40>
810010d9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010dc:	8b 40 38             	mov    0x38(%eax),%eax
810010df:	85 c0                	test   %eax,%eax
810010e1:	75 0e                	jne    810010f1 <_fgets_r+0x40>
810010e3:	83 ec 0c             	sub    $0xc,%esp
810010e6:	ff 75 ec             	push   -0x14(%ebp)
810010e9:	e8 35 04 00 00       	call   81001523 <__sinit>
810010ee:	83 c4 10             	add    $0x10,%esp
810010f1:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810010f5:	8b 45 14             	mov    0x14(%ebp),%eax
810010f8:	8b 40 04             	mov    0x4(%eax),%eax
810010fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810010fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001102:	75 34                	jne    81001138 <_fgets_r+0x87>
81001104:	83 ec 08             	sub    $0x8,%esp
81001107:	ff 75 14             	push   0x14(%ebp)
8100110a:	ff 75 08             	push   0x8(%ebp)
8100110d:	e8 bf 3d 00 00       	call   81004ed1 <__srefill_r>
81001112:	83 c4 10             	add    $0x10,%esp
81001115:	85 c0                	test   %eax,%eax
81001117:	74 16                	je     8100112f <_fgets_r+0x7e>
81001119:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100111c:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100111f:	0f 85 de 00 00 00    	jne    81001203 <_fgets_r+0x152>
81001125:	b8 00 00 00 00       	mov    $0x0,%eax
8100112a:	e9 de 00 00 00       	jmp    8100120d <_fgets_r+0x15c>
8100112f:	8b 45 14             	mov    0x14(%ebp),%eax
81001132:	8b 40 04             	mov    0x4(%eax),%eax
81001135:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001138:	8b 45 14             	mov    0x14(%ebp),%eax
8100113b:	8b 00                	mov    (%eax),%eax
8100113d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001140:	8b 45 10             	mov    0x10(%ebp),%eax
81001143:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81001146:	76 06                	jbe    8100114e <_fgets_r+0x9d>
81001148:	8b 45 10             	mov    0x10(%ebp),%eax
8100114b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100114e:	83 ec 04             	sub    $0x4,%esp
81001151:	ff 75 f4             	push   -0xc(%ebp)
81001154:	6a 0a                	push   $0xa
81001156:	ff 75 e8             	push   -0x18(%ebp)
81001159:	e8 02 2d 00 00       	call   81003e60 <memchr>
8100115e:	83 c4 10             	add    $0x10,%esp
81001161:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001164:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001168:	74 4a                	je     810011b4 <_fgets_r+0x103>
8100116a:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100116e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001171:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001174:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001177:	8b 45 14             	mov    0x14(%ebp),%eax
8100117a:	8b 40 04             	mov    0x4(%eax),%eax
8100117d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001180:	89 c2                	mov    %eax,%edx
81001182:	8b 45 14             	mov    0x14(%ebp),%eax
81001185:	89 50 04             	mov    %edx,0x4(%eax)
81001188:	8b 45 14             	mov    0x14(%ebp),%eax
8100118b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100118e:	89 10                	mov    %edx,(%eax)
81001190:	83 ec 04             	sub    $0x4,%esp
81001193:	ff 75 f4             	push   -0xc(%ebp)
81001196:	ff 75 e8             	push   -0x18(%ebp)
81001199:	ff 75 f0             	push   -0x10(%ebp)
8100119c:	e8 a7 2d 00 00       	call   81003f48 <memcpy>
810011a1:	83 c4 10             	add    $0x10,%esp
810011a4:	8b 55 f0             	mov    -0x10(%ebp),%edx
810011a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011aa:	01 d0                	add    %edx,%eax
810011ac:	c6 00 00             	movb   $0x0,(%eax)
810011af:	8b 45 0c             	mov    0xc(%ebp),%eax
810011b2:	eb 59                	jmp    8100120d <_fgets_r+0x15c>
810011b4:	8b 45 14             	mov    0x14(%ebp),%eax
810011b7:	8b 40 04             	mov    0x4(%eax),%eax
810011ba:	2b 45 f4             	sub    -0xc(%ebp),%eax
810011bd:	89 c2                	mov    %eax,%edx
810011bf:	8b 45 14             	mov    0x14(%ebp),%eax
810011c2:	89 50 04             	mov    %edx,0x4(%eax)
810011c5:	8b 45 14             	mov    0x14(%ebp),%eax
810011c8:	8b 10                	mov    (%eax),%edx
810011ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011cd:	01 c2                	add    %eax,%edx
810011cf:	8b 45 14             	mov    0x14(%ebp),%eax
810011d2:	89 10                	mov    %edx,(%eax)
810011d4:	83 ec 04             	sub    $0x4,%esp
810011d7:	ff 75 f4             	push   -0xc(%ebp)
810011da:	ff 75 e8             	push   -0x18(%ebp)
810011dd:	ff 75 f0             	push   -0x10(%ebp)
810011e0:	e8 63 2d 00 00       	call   81003f48 <memcpy>
810011e5:	83 c4 10             	add    $0x10,%esp
810011e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011eb:	01 45 f0             	add    %eax,-0x10(%ebp)
810011ee:	8b 45 10             	mov    0x10(%ebp),%eax
810011f1:	2b 45 f4             	sub    -0xc(%ebp),%eax
810011f4:	89 45 10             	mov    %eax,0x10(%ebp)
810011f7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810011fb:	0f 85 f4 fe ff ff    	jne    810010f5 <_fgets_r+0x44>
81001201:	eb 01                	jmp    81001204 <_fgets_r+0x153>
81001203:	90                   	nop
81001204:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001207:	c6 00 00             	movb   $0x0,(%eax)
8100120a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100120d:	c9                   	leave  
8100120e:	c3                   	ret    

8100120f <fgets>:
8100120f:	55                   	push   %ebp
81001210:	89 e5                	mov    %esp,%ebp
81001212:	83 ec 08             	sub    $0x8,%esp
81001215:	a1 24 83 00 81       	mov    0x81008324,%eax
8100121a:	ff 75 10             	push   0x10(%ebp)
8100121d:	ff 75 0c             	push   0xc(%ebp)
81001220:	ff 75 08             	push   0x8(%ebp)
81001223:	50                   	push   %eax
81001224:	e8 88 fe ff ff       	call   810010b1 <_fgets_r>
81001229:	83 c4 10             	add    $0x10,%esp
8100122c:	c9                   	leave  
8100122d:	c3                   	ret    

8100122e <std>:
8100122e:	55                   	push   %ebp
8100122f:	89 e5                	mov    %esp,%ebp
81001231:	83 ec 08             	sub    $0x8,%esp
81001234:	8b 45 08             	mov    0x8(%ebp),%eax
81001237:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100123d:	8b 45 08             	mov    0x8(%ebp),%eax
81001240:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001247:	8b 45 08             	mov    0x8(%ebp),%eax
8100124a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001251:	8b 45 0c             	mov    0xc(%ebp),%eax
81001254:	89 c2                	mov    %eax,%edx
81001256:	8b 45 08             	mov    0x8(%ebp),%eax
81001259:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100125d:	8b 45 08             	mov    0x8(%ebp),%eax
81001260:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001267:	8b 45 10             	mov    0x10(%ebp),%eax
8100126a:	89 c2                	mov    %eax,%edx
8100126c:	8b 45 08             	mov    0x8(%ebp),%eax
8100126f:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001273:	8b 45 08             	mov    0x8(%ebp),%eax
81001276:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100127d:	8b 45 08             	mov    0x8(%ebp),%eax
81001280:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001287:	8b 45 08             	mov    0x8(%ebp),%eax
8100128a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001291:	8b 45 08             	mov    0x8(%ebp),%eax
81001294:	83 c0 5c             	add    $0x5c,%eax
81001297:	83 ec 04             	sub    $0x4,%esp
8100129a:	6a 08                	push   $0x8
8100129c:	6a 00                	push   $0x0
8100129e:	50                   	push   %eax
8100129f:	e8 ec 2c 00 00       	call   81003f90 <memset>
810012a4:	83 c4 10             	add    $0x10,%esp
810012a7:	8b 45 08             	mov    0x8(%ebp),%eax
810012aa:	8b 55 08             	mov    0x8(%ebp),%edx
810012ad:	89 50 1c             	mov    %edx,0x1c(%eax)
810012b0:	8b 45 08             	mov    0x8(%ebp),%eax
810012b3:	c7 40 20 1e 53 00 81 	movl   $0x8100531e,0x20(%eax)
810012ba:	8b 45 08             	mov    0x8(%ebp),%eax
810012bd:	c7 40 24 6c 53 00 81 	movl   $0x8100536c,0x24(%eax)
810012c4:	8b 45 08             	mov    0x8(%ebp),%eax
810012c7:	c7 40 28 c7 53 00 81 	movl   $0x810053c7,0x28(%eax)
810012ce:	8b 45 08             	mov    0x8(%ebp),%eax
810012d1:	c7 40 2c 11 54 00 81 	movl   $0x81005411,0x2c(%eax)
810012d8:	90                   	nop
810012d9:	c9                   	leave  
810012da:	c3                   	ret    

810012db <stdin_init>:
810012db:	55                   	push   %ebp
810012dc:	89 e5                	mov    %esp,%ebp
810012de:	83 ec 08             	sub    $0x8,%esp
810012e1:	83 ec 04             	sub    $0x4,%esp
810012e4:	6a 00                	push   $0x0
810012e6:	6a 04                	push   $0x4
810012e8:	ff 75 08             	push   0x8(%ebp)
810012eb:	e8 3e ff ff ff       	call   8100122e <std>
810012f0:	83 c4 10             	add    $0x10,%esp
810012f3:	90                   	nop
810012f4:	c9                   	leave  
810012f5:	c3                   	ret    

810012f6 <stdout_init>:
810012f6:	55                   	push   %ebp
810012f7:	89 e5                	mov    %esp,%ebp
810012f9:	83 ec 08             	sub    $0x8,%esp
810012fc:	83 ec 04             	sub    $0x4,%esp
810012ff:	6a 01                	push   $0x1
81001301:	6a 09                	push   $0x9
81001303:	ff 75 08             	push   0x8(%ebp)
81001306:	e8 23 ff ff ff       	call   8100122e <std>
8100130b:	83 c4 10             	add    $0x10,%esp
8100130e:	90                   	nop
8100130f:	c9                   	leave  
81001310:	c3                   	ret    

81001311 <stderr_init>:
81001311:	55                   	push   %ebp
81001312:	89 e5                	mov    %esp,%ebp
81001314:	83 ec 08             	sub    $0x8,%esp
81001317:	83 ec 04             	sub    $0x4,%esp
8100131a:	6a 02                	push   $0x2
8100131c:	6a 12                	push   $0x12
8100131e:	ff 75 08             	push   0x8(%ebp)
81001321:	e8 08 ff ff ff       	call   8100122e <std>
81001326:	83 c4 10             	add    $0x10,%esp
81001329:	90                   	nop
8100132a:	c9                   	leave  
8100132b:	c3                   	ret    

8100132c <__sfmoreglue>:
8100132c:	55                   	push   %ebp
8100132d:	89 e5                	mov    %esp,%ebp
8100132f:	53                   	push   %ebx
81001330:	83 ec 14             	sub    $0x14,%esp
81001333:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001336:	8d 43 ff             	lea    -0x1(%ebx),%eax
81001339:	6b c0 68             	imul   $0x68,%eax,%eax
8100133c:	83 c0 74             	add    $0x74,%eax
8100133f:	83 ec 08             	sub    $0x8,%esp
81001342:	50                   	push   %eax
81001343:	ff 75 08             	push   0x8(%ebp)
81001346:	e8 f1 22 00 00       	call   8100363c <_malloc_r>
8100134b:	83 c4 10             	add    $0x10,%esp
8100134e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001351:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001355:	75 07                	jne    8100135e <__sfmoreglue+0x32>
81001357:	b8 00 00 00 00       	mov    $0x0,%eax
8100135c:	eb 38                	jmp    81001396 <__sfmoreglue+0x6a>
8100135e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001361:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001367:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100136a:	89 58 04             	mov    %ebx,0x4(%eax)
8100136d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001370:	8d 50 0c             	lea    0xc(%eax),%edx
81001373:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001376:	89 50 08             	mov    %edx,0x8(%eax)
81001379:	89 d8                	mov    %ebx,%eax
8100137b:	6b c0 68             	imul   $0x68,%eax,%eax
8100137e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001381:	83 c2 0c             	add    $0xc,%edx
81001384:	83 ec 04             	sub    $0x4,%esp
81001387:	50                   	push   %eax
81001388:	6a 00                	push   $0x0
8100138a:	52                   	push   %edx
8100138b:	e8 00 2c 00 00       	call   81003f90 <memset>
81001390:	83 c4 10             	add    $0x10,%esp
81001393:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001396:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001399:	c9                   	leave  
8100139a:	c3                   	ret    

8100139b <__sfp>:
8100139b:	55                   	push   %ebp
8100139c:	89 e5                	mov    %esp,%ebp
8100139e:	83 ec 18             	sub    $0x18,%esp
810013a1:	e8 16 02 00 00       	call   810015bc <__sfp_lock_acquire>
810013a6:	a1 78 7b 00 81       	mov    0x81007b78,%eax
810013ab:	8b 40 38             	mov    0x38(%eax),%eax
810013ae:	85 c0                	test   %eax,%eax
810013b0:	75 11                	jne    810013c3 <__sfp+0x28>
810013b2:	a1 78 7b 00 81       	mov    0x81007b78,%eax
810013b7:	83 ec 0c             	sub    $0xc,%esp
810013ba:	50                   	push   %eax
810013bb:	e8 63 01 00 00       	call   81001523 <__sinit>
810013c0:	83 c4 10             	add    $0x10,%esp
810013c3:	a1 78 7b 00 81       	mov    0x81007b78,%eax
810013c8:	05 e0 02 00 00       	add    $0x2e0,%eax
810013cd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013d3:	8b 40 08             	mov    0x8(%eax),%eax
810013d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013d9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013dc:	8b 40 04             	mov    0x4(%eax),%eax
810013df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013e2:	eb 10                	jmp    810013f4 <__sfp+0x59>
810013e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810013eb:	66 85 c0             	test   %ax,%ax
810013ee:	74 58                	je     81001448 <__sfp+0xad>
810013f0:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810013f4:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810013f8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810013fc:	79 e6                	jns    810013e4 <__sfp+0x49>
810013fe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001401:	8b 00                	mov    (%eax),%eax
81001403:	85 c0                	test   %eax,%eax
81001405:	75 1e                	jne    81001425 <__sfp+0x8a>
81001407:	83 ec 08             	sub    $0x8,%esp
8100140a:	6a 04                	push   $0x4
8100140c:	ff 75 08             	push   0x8(%ebp)
8100140f:	e8 18 ff ff ff       	call   8100132c <__sfmoreglue>
81001414:	83 c4 10             	add    $0x10,%esp
81001417:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100141a:	89 02                	mov    %eax,(%edx)
8100141c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100141f:	8b 00                	mov    (%eax),%eax
81001421:	85 c0                	test   %eax,%eax
81001423:	74 0a                	je     8100142f <__sfp+0x94>
81001425:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001428:	8b 00                	mov    (%eax),%eax
8100142a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100142d:	eb a1                	jmp    810013d0 <__sfp+0x35>
8100142f:	90                   	nop
81001430:	e8 8d 01 00 00       	call   810015c2 <__sfp_lock_release>
81001435:	8b 45 08             	mov    0x8(%ebp),%eax
81001438:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100143e:	b8 00 00 00 00       	mov    $0x0,%eax
81001443:	e9 9e 00 00 00       	jmp    810014e6 <__sfp+0x14b>
81001448:	90                   	nop
81001449:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100144c:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001452:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001455:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8100145b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145e:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001465:	e8 58 01 00 00       	call   810015c2 <__sfp_lock_release>
8100146a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100146d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001473:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001476:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100147d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001480:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001487:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001491:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001494:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100149b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100149e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810014a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014a8:	83 c0 5c             	add    $0x5c,%eax
810014ab:	83 ec 04             	sub    $0x4,%esp
810014ae:	6a 08                	push   $0x8
810014b0:	6a 00                	push   $0x0
810014b2:	50                   	push   %eax
810014b3:	e8 d8 2a 00 00       	call   81003f90 <memset>
810014b8:	83 c4 10             	add    $0x10,%esp
810014bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014be:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
810014c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c8:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
810014cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d2:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
810014d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014dc:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
810014e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014e6:	c9                   	leave  
810014e7:	c3                   	ret    

810014e8 <_cleanup_r>:
810014e8:	55                   	push   %ebp
810014e9:	89 e5                	mov    %esp,%ebp
810014eb:	83 ec 18             	sub    $0x18,%esp
810014ee:	c7 45 f4 d6 0c 00 81 	movl   $0x81000cd6,-0xc(%ebp)
810014f5:	83 ec 08             	sub    $0x8,%esp
810014f8:	ff 75 f4             	push   -0xc(%ebp)
810014fb:	ff 75 08             	push   0x8(%ebp)
810014fe:	e8 6b 0d 00 00       	call   8100226e <_fwalk_reent>
81001503:	83 c4 10             	add    $0x10,%esp
81001506:	90                   	nop
81001507:	c9                   	leave  
81001508:	c3                   	ret    

81001509 <_cleanup>:
81001509:	55                   	push   %ebp
8100150a:	89 e5                	mov    %esp,%ebp
8100150c:	83 ec 08             	sub    $0x8,%esp
8100150f:	a1 78 7b 00 81       	mov    0x81007b78,%eax
81001514:	83 ec 0c             	sub    $0xc,%esp
81001517:	50                   	push   %eax
81001518:	e8 cb ff ff ff       	call   810014e8 <_cleanup_r>
8100151d:	83 c4 10             	add    $0x10,%esp
81001520:	90                   	nop
81001521:	c9                   	leave  
81001522:	c3                   	ret    

81001523 <__sinit>:
81001523:	55                   	push   %ebp
81001524:	89 e5                	mov    %esp,%ebp
81001526:	83 ec 08             	sub    $0x8,%esp
81001529:	e8 9a 00 00 00       	call   810015c8 <__sinit_lock_acquire>
8100152e:	8b 45 08             	mov    0x8(%ebp),%eax
81001531:	8b 40 38             	mov    0x38(%eax),%eax
81001534:	85 c0                	test   %eax,%eax
81001536:	74 07                	je     8100153f <__sinit+0x1c>
81001538:	e8 91 00 00 00       	call   810015ce <__sinit_lock_release>
8100153d:	eb 7b                	jmp    810015ba <__sinit+0x97>
8100153f:	8b 45 08             	mov    0x8(%ebp),%eax
81001542:	c7 40 3c e8 14 00 81 	movl   $0x810014e8,0x3c(%eax)
81001549:	8b 45 08             	mov    0x8(%ebp),%eax
8100154c:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001553:	00 00 00 
81001556:	8b 45 08             	mov    0x8(%ebp),%eax
81001559:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001560:	00 00 00 
81001563:	8b 45 08             	mov    0x8(%ebp),%eax
81001566:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100156c:	8b 45 08             	mov    0x8(%ebp),%eax
8100156f:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001575:	8b 45 08             	mov    0x8(%ebp),%eax
81001578:	8b 40 04             	mov    0x4(%eax),%eax
8100157b:	83 ec 0c             	sub    $0xc,%esp
8100157e:	50                   	push   %eax
8100157f:	e8 57 fd ff ff       	call   810012db <stdin_init>
81001584:	83 c4 10             	add    $0x10,%esp
81001587:	8b 45 08             	mov    0x8(%ebp),%eax
8100158a:	8b 40 08             	mov    0x8(%eax),%eax
8100158d:	83 ec 0c             	sub    $0xc,%esp
81001590:	50                   	push   %eax
81001591:	e8 60 fd ff ff       	call   810012f6 <stdout_init>
81001596:	83 c4 10             	add    $0x10,%esp
81001599:	8b 45 08             	mov    0x8(%ebp),%eax
8100159c:	8b 40 0c             	mov    0xc(%eax),%eax
8100159f:	83 ec 0c             	sub    $0xc,%esp
810015a2:	50                   	push   %eax
810015a3:	e8 69 fd ff ff       	call   81001311 <stderr_init>
810015a8:	83 c4 10             	add    $0x10,%esp
810015ab:	8b 45 08             	mov    0x8(%ebp),%eax
810015ae:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
810015b5:	e8 14 00 00 00       	call   810015ce <__sinit_lock_release>
810015ba:	c9                   	leave  
810015bb:	c3                   	ret    

810015bc <__sfp_lock_acquire>:
810015bc:	55                   	push   %ebp
810015bd:	89 e5                	mov    %esp,%ebp
810015bf:	90                   	nop
810015c0:	5d                   	pop    %ebp
810015c1:	c3                   	ret    

810015c2 <__sfp_lock_release>:
810015c2:	55                   	push   %ebp
810015c3:	89 e5                	mov    %esp,%ebp
810015c5:	90                   	nop
810015c6:	5d                   	pop    %ebp
810015c7:	c3                   	ret    

810015c8 <__sinit_lock_acquire>:
810015c8:	55                   	push   %ebp
810015c9:	89 e5                	mov    %esp,%ebp
810015cb:	90                   	nop
810015cc:	5d                   	pop    %ebp
810015cd:	c3                   	ret    

810015ce <__sinit_lock_release>:
810015ce:	55                   	push   %ebp
810015cf:	89 e5                	mov    %esp,%ebp
810015d1:	90                   	nop
810015d2:	5d                   	pop    %ebp
810015d3:	c3                   	ret    

810015d4 <__fp_lock>:
810015d4:	55                   	push   %ebp
810015d5:	89 e5                	mov    %esp,%ebp
810015d7:	b8 00 00 00 00       	mov    $0x0,%eax
810015dc:	5d                   	pop    %ebp
810015dd:	c3                   	ret    

810015de <__fp_unlock>:
810015de:	55                   	push   %ebp
810015df:	89 e5                	mov    %esp,%ebp
810015e1:	b8 00 00 00 00       	mov    $0x0,%eax
810015e6:	5d                   	pop    %ebp
810015e7:	c3                   	ret    

810015e8 <__fp_lock_all>:
810015e8:	55                   	push   %ebp
810015e9:	89 e5                	mov    %esp,%ebp
810015eb:	83 ec 08             	sub    $0x8,%esp
810015ee:	e8 c9 ff ff ff       	call   810015bc <__sfp_lock_acquire>
810015f3:	a1 24 83 00 81       	mov    0x81008324,%eax
810015f8:	83 ec 08             	sub    $0x8,%esp
810015fb:	68 d4 15 00 81       	push   $0x810015d4
81001600:	50                   	push   %eax
81001601:	e8 00 0c 00 00       	call   81002206 <_fwalk>
81001606:	83 c4 10             	add    $0x10,%esp
81001609:	90                   	nop
8100160a:	c9                   	leave  
8100160b:	c3                   	ret    

8100160c <__fp_unlock_all>:
8100160c:	55                   	push   %ebp
8100160d:	89 e5                	mov    %esp,%ebp
8100160f:	83 ec 08             	sub    $0x8,%esp
81001612:	a1 24 83 00 81       	mov    0x81008324,%eax
81001617:	83 ec 08             	sub    $0x8,%esp
8100161a:	68 de 15 00 81       	push   $0x810015de
8100161f:	50                   	push   %eax
81001620:	e8 e1 0b 00 00       	call   81002206 <_fwalk>
81001625:	83 c4 10             	add    $0x10,%esp
81001628:	e8 95 ff ff ff       	call   810015c2 <__sfp_lock_release>
8100162d:	90                   	nop
8100162e:	c9                   	leave  
8100162f:	c3                   	ret    

81001630 <_fopen_r>:
81001630:	55                   	push   %ebp
81001631:	89 e5                	mov    %esp,%ebp
81001633:	56                   	push   %esi
81001634:	53                   	push   %ebx
81001635:	83 ec 10             	sub    $0x10,%esp
81001638:	83 ec 04             	sub    $0x4,%esp
8100163b:	8d 45 f0             	lea    -0x10(%ebp),%eax
8100163e:	50                   	push   %eax
8100163f:	ff 75 10             	push   0x10(%ebp)
81001642:	ff 75 08             	push   0x8(%ebp)
81001645:	e8 b8 47 00 00       	call   81005e02 <__sflags>
8100164a:	83 c4 10             	add    $0x10,%esp
8100164d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001650:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001654:	75 0a                	jne    81001660 <_fopen_r+0x30>
81001656:	b8 00 00 00 00       	mov    $0x0,%eax
8100165b:	e9 9e 00 00 00       	jmp    810016fe <_fopen_r+0xce>
81001660:	83 ec 0c             	sub    $0xc,%esp
81001663:	ff 75 08             	push   0x8(%ebp)
81001666:	e8 30 fd ff ff       	call   8100139b <__sfp>
8100166b:	83 c4 10             	add    $0x10,%esp
8100166e:	89 c3                	mov    %eax,%ebx
81001670:	85 db                	test   %ebx,%ebx
81001672:	75 0a                	jne    8100167e <_fopen_r+0x4e>
81001674:	b8 00 00 00 00       	mov    $0x0,%eax
81001679:	e9 80 00 00 00       	jmp    810016fe <_fopen_r+0xce>
8100167e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001681:	68 b6 01 00 00       	push   $0x1b6
81001686:	50                   	push   %eax
81001687:	ff 75 0c             	push   0xc(%ebp)
8100168a:	ff 75 08             	push   0x8(%ebp)
8100168d:	e8 e1 34 00 00       	call   81004b73 <_open_r>
81001692:	83 c4 10             	add    $0x10,%esp
81001695:	89 c6                	mov    %eax,%esi
81001697:	85 f6                	test   %esi,%esi
81001699:	79 17                	jns    810016b2 <_fopen_r+0x82>
8100169b:	e8 1c ff ff ff       	call   810015bc <__sfp_lock_acquire>
810016a0:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810016a6:	e8 17 ff ff ff       	call   810015c2 <__sfp_lock_release>
810016ab:	b8 00 00 00 00       	mov    $0x0,%eax
810016b0:	eb 4c                	jmp    810016fe <_fopen_r+0xce>
810016b2:	89 f0                	mov    %esi,%eax
810016b4:	66 89 43 0e          	mov    %ax,0xe(%ebx)
810016b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016bb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810016bf:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
810016c2:	c7 43 20 1e 53 00 81 	movl   $0x8100531e,0x20(%ebx)
810016c9:	c7 43 24 6c 53 00 81 	movl   $0x8100536c,0x24(%ebx)
810016d0:	c7 43 28 c7 53 00 81 	movl   $0x810053c7,0x28(%ebx)
810016d7:	c7 43 2c 11 54 00 81 	movl   $0x81005411,0x2c(%ebx)
810016de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810016e2:	98                   	cwtl   
810016e3:	25 00 01 00 00       	and    $0x100,%eax
810016e8:	85 c0                	test   %eax,%eax
810016ea:	74 10                	je     810016fc <_fopen_r+0xcc>
810016ec:	6a 02                	push   $0x2
810016ee:	6a 00                	push   $0x0
810016f0:	53                   	push   %ebx
810016f1:	ff 75 08             	push   0x8(%ebp)
810016f4:	e8 bc 05 00 00       	call   81001cb5 <_fseek_r>
810016f9:	83 c4 10             	add    $0x10,%esp
810016fc:	89 d8                	mov    %ebx,%eax
810016fe:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001701:	5b                   	pop    %ebx
81001702:	5e                   	pop    %esi
81001703:	5d                   	pop    %ebp
81001704:	c3                   	ret    

81001705 <fopen>:
81001705:	55                   	push   %ebp
81001706:	89 e5                	mov    %esp,%ebp
81001708:	83 ec 08             	sub    $0x8,%esp
8100170b:	a1 24 83 00 81       	mov    0x81008324,%eax
81001710:	83 ec 04             	sub    $0x4,%esp
81001713:	ff 75 0c             	push   0xc(%ebp)
81001716:	ff 75 08             	push   0x8(%ebp)
81001719:	50                   	push   %eax
8100171a:	e8 11 ff ff ff       	call   81001630 <_fopen_r>
8100171f:	83 c4 10             	add    $0x10,%esp
81001722:	c9                   	leave  
81001723:	c3                   	ret    

81001724 <_fiprintf_r>:
81001724:	55                   	push   %ebp
81001725:	89 e5                	mov    %esp,%ebp
81001727:	83 ec 18             	sub    $0x18,%esp
8100172a:	8d 45 14             	lea    0x14(%ebp),%eax
8100172d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001730:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001733:	50                   	push   %eax
81001734:	ff 75 10             	push   0x10(%ebp)
81001737:	ff 75 0c             	push   0xc(%ebp)
8100173a:	ff 75 08             	push   0x8(%ebp)
8100173d:	e8 f1 2a 00 00       	call   81004233 <_vfiprintf_r>
81001742:	83 c4 10             	add    $0x10,%esp
81001745:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001748:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174b:	c9                   	leave  
8100174c:	c3                   	ret    

8100174d <fiprintf>:
8100174d:	55                   	push   %ebp
8100174e:	89 e5                	mov    %esp,%ebp
81001750:	83 ec 18             	sub    $0x18,%esp
81001753:	8d 45 10             	lea    0x10(%ebp),%eax
81001756:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001759:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100175c:	a1 24 83 00 81       	mov    0x81008324,%eax
81001761:	52                   	push   %edx
81001762:	ff 75 0c             	push   0xc(%ebp)
81001765:	ff 75 08             	push   0x8(%ebp)
81001768:	50                   	push   %eax
81001769:	e8 c5 2a 00 00       	call   81004233 <_vfiprintf_r>
8100176e:	83 c4 10             	add    $0x10,%esp
81001771:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001774:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001777:	c9                   	leave  
81001778:	c3                   	ret    

81001779 <_free_r>:
81001779:	55                   	push   %ebp
8100177a:	89 e5                	mov    %esp,%ebp
8100177c:	53                   	push   %ebx
8100177d:	83 ec 34             	sub    $0x34,%esp
81001780:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001784:	0f 84 c4 03 00 00    	je     81001b4e <_free_r+0x3d5>
8100178a:	83 ec 0c             	sub    $0xc,%esp
8100178d:	ff 75 08             	push   0x8(%ebp)
81001790:	e8 83 28 00 00       	call   81004018 <__malloc_lock>
81001795:	83 c4 10             	add    $0x10,%esp
81001798:	8b 45 0c             	mov    0xc(%ebp),%eax
8100179b:	83 e8 08             	sub    $0x8,%eax
8100179e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810017a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017a4:	8b 40 04             	mov    0x4(%eax),%eax
810017a7:	89 45 e0             	mov    %eax,-0x20(%ebp)
810017aa:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017ad:	83 e0 fe             	and    $0xfffffffe,%eax
810017b0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017b3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810017b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017b9:	01 d0                	add    %edx,%eax
810017bb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810017be:	8b 45 dc             	mov    -0x24(%ebp),%eax
810017c1:	8b 40 04             	mov    0x4(%eax),%eax
810017c4:	83 e0 fc             	and    $0xfffffffc,%eax
810017c7:	89 45 d8             	mov    %eax,-0x28(%ebp)
810017ca:	b8 40 83 00 81       	mov    $0x81008340,%eax
810017cf:	8b 40 08             	mov    0x8(%eax),%eax
810017d2:	39 45 dc             	cmp    %eax,-0x24(%ebp)
810017d5:	0f 85 94 00 00 00    	jne    8100186f <_free_r+0xf6>
810017db:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017de:	01 45 f0             	add    %eax,-0x10(%ebp)
810017e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017e4:	83 e0 01             	and    $0x1,%eax
810017e7:	85 c0                	test   %eax,%eax
810017e9:	75 3a                	jne    81001825 <_free_r+0xac>
810017eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ee:	8b 00                	mov    (%eax),%eax
810017f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810017f3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810017f6:	f7 d8                	neg    %eax
810017f8:	01 45 f4             	add    %eax,-0xc(%ebp)
810017fb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810017fe:	01 45 f0             	add    %eax,-0x10(%ebp)
81001801:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001804:	8b 40 0c             	mov    0xc(%eax),%eax
81001807:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100180a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100180d:	8b 40 08             	mov    0x8(%eax),%eax
81001810:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001813:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001816:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001819:	89 50 0c             	mov    %edx,0xc(%eax)
8100181c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100181f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001822:	89 50 08             	mov    %edx,0x8(%eax)
81001825:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001828:	83 c8 01             	or     $0x1,%eax
8100182b:	89 c2                	mov    %eax,%edx
8100182d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001830:	89 50 04             	mov    %edx,0x4(%eax)
81001833:	ba 40 83 00 81       	mov    $0x81008340,%edx
81001838:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183b:	89 42 08             	mov    %eax,0x8(%edx)
8100183e:	a1 48 87 00 81       	mov    0x81008748,%eax
81001843:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001846:	72 14                	jb     8100185c <_free_r+0xe3>
81001848:	a1 20 8f 00 81       	mov    0x81008f20,%eax
8100184d:	83 ec 08             	sub    $0x8,%esp
81001850:	50                   	push   %eax
81001851:	ff 75 08             	push   0x8(%ebp)
81001854:	e8 fb 02 00 00       	call   81001b54 <_malloc_trim_r>
81001859:	83 c4 10             	add    $0x10,%esp
8100185c:	83 ec 0c             	sub    $0xc,%esp
8100185f:	ff 75 08             	push   0x8(%ebp)
81001862:	e8 b7 27 00 00       	call   8100401e <__malloc_unlock>
81001867:	83 c4 10             	add    $0x10,%esp
8100186a:	e9 e0 02 00 00       	jmp    81001b4f <_free_r+0x3d6>
8100186f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001872:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001875:	89 50 04             	mov    %edx,0x4(%eax)
81001878:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100187f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001882:	83 e0 01             	and    $0x1,%eax
81001885:	85 c0                	test   %eax,%eax
81001887:	75 52                	jne    810018db <_free_r+0x162>
81001889:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100188c:	8b 00                	mov    (%eax),%eax
8100188e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001891:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001894:	f7 d8                	neg    %eax
81001896:	01 45 f4             	add    %eax,-0xc(%ebp)
81001899:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100189c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100189f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a2:	8b 40 08             	mov    0x8(%eax),%eax
810018a5:	ba 48 83 00 81       	mov    $0x81008348,%edx
810018aa:	39 d0                	cmp    %edx,%eax
810018ac:	75 09                	jne    810018b7 <_free_r+0x13e>
810018ae:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810018b5:	eb 24                	jmp    810018db <_free_r+0x162>
810018b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018ba:	8b 40 0c             	mov    0xc(%eax),%eax
810018bd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810018c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018c3:	8b 40 08             	mov    0x8(%eax),%eax
810018c6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810018c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810018cc:	8b 55 ec             	mov    -0x14(%ebp),%edx
810018cf:	89 50 0c             	mov    %edx,0xc(%eax)
810018d2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810018d5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810018d8:	89 50 08             	mov    %edx,0x8(%eax)
810018db:	8b 55 dc             	mov    -0x24(%ebp),%edx
810018de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018e1:	01 d0                	add    %edx,%eax
810018e3:	8b 40 04             	mov    0x4(%eax),%eax
810018e6:	83 e0 01             	and    $0x1,%eax
810018e9:	85 c0                	test   %eax,%eax
810018eb:	75 75                	jne    81001962 <_free_r+0x1e9>
810018ed:	8b 45 d8             	mov    -0x28(%ebp),%eax
810018f0:	01 45 f0             	add    %eax,-0x10(%ebp)
810018f3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018f7:	75 45                	jne    8100193e <_free_r+0x1c5>
810018f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810018fc:	8b 40 08             	mov    0x8(%eax),%eax
810018ff:	ba 48 83 00 81       	mov    $0x81008348,%edx
81001904:	39 d0                	cmp    %edx,%eax
81001906:	75 36                	jne    8100193e <_free_r+0x1c5>
81001908:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100190f:	b8 48 83 00 81       	mov    $0x81008348,%eax
81001914:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001917:	89 50 0c             	mov    %edx,0xc(%eax)
8100191a:	ba 48 83 00 81       	mov    $0x81008348,%edx
8100191f:	8b 40 0c             	mov    0xc(%eax),%eax
81001922:	89 42 08             	mov    %eax,0x8(%edx)
81001925:	ba 48 83 00 81       	mov    $0x81008348,%edx
8100192a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100192d:	89 50 0c             	mov    %edx,0xc(%eax)
81001930:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001933:	8b 50 0c             	mov    0xc(%eax),%edx
81001936:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001939:	89 50 08             	mov    %edx,0x8(%eax)
8100193c:	eb 24                	jmp    81001962 <_free_r+0x1e9>
8100193e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001941:	8b 40 0c             	mov    0xc(%eax),%eax
81001944:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001947:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100194a:	8b 40 08             	mov    0x8(%eax),%eax
8100194d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001950:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001953:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001956:	89 50 0c             	mov    %edx,0xc(%eax)
81001959:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100195c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100195f:	89 50 08             	mov    %edx,0x8(%eax)
81001962:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001965:	83 c8 01             	or     $0x1,%eax
81001968:	89 c2                	mov    %eax,%edx
8100196a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100196d:	89 50 04             	mov    %edx,0x4(%eax)
81001970:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001973:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001976:	01 c2                	add    %eax,%edx
81001978:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100197b:	89 02                	mov    %eax,(%edx)
8100197d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001981:	0f 85 b7 01 00 00    	jne    81001b3e <_free_r+0x3c5>
81001987:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8100198e:	77 7f                	ja     81001a0f <_free_r+0x296>
81001990:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001993:	c1 e8 03             	shr    $0x3,%eax
81001996:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001999:	b8 40 83 00 81       	mov    $0x81008340,%eax
8100199e:	8b 58 04             	mov    0x4(%eax),%ebx
810019a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019a4:	8d 50 03             	lea    0x3(%eax),%edx
810019a7:	85 c0                	test   %eax,%eax
810019a9:	0f 48 c2             	cmovs  %edx,%eax
810019ac:	c1 f8 02             	sar    $0x2,%eax
810019af:	ba 01 00 00 00       	mov    $0x1,%edx
810019b4:	89 c1                	mov    %eax,%ecx
810019b6:	d3 e2                	shl    %cl,%edx
810019b8:	89 d0                	mov    %edx,%eax
810019ba:	ba 40 83 00 81       	mov    $0x81008340,%edx
810019bf:	09 d8                	or     %ebx,%eax
810019c1:	89 42 04             	mov    %eax,0x4(%edx)
810019c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019c7:	83 c0 01             	add    $0x1,%eax
810019ca:	01 c0                	add    %eax,%eax
810019cc:	c1 e0 02             	shl    $0x2,%eax
810019cf:	05 40 83 00 81       	add    $0x81008340,%eax
810019d4:	83 e8 08             	sub    $0x8,%eax
810019d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810019da:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019dd:	8b 40 08             	mov    0x8(%eax),%eax
810019e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810019e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019e6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019e9:	89 50 0c             	mov    %edx,0xc(%eax)
810019ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019ef:	8b 55 e8             	mov    -0x18(%ebp),%edx
810019f2:	89 50 08             	mov    %edx,0x8(%eax)
810019f5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810019f8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810019fb:	89 50 08             	mov    %edx,0x8(%eax)
810019fe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001a01:	8b 50 08             	mov    0x8(%eax),%edx
81001a04:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001a07:	89 50 0c             	mov    %edx,0xc(%eax)
81001a0a:	e9 2f 01 00 00       	jmp    81001b3e <_free_r+0x3c5>
81001a0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a12:	c1 e8 09             	shr    $0x9,%eax
81001a15:	85 c0                	test   %eax,%eax
81001a17:	75 08                	jne    81001a21 <_free_r+0x2a8>
81001a19:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a1c:	c1 e8 03             	shr    $0x3,%eax
81001a1f:	eb 77                	jmp    81001a98 <_free_r+0x31f>
81001a21:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a24:	c1 e8 09             	shr    $0x9,%eax
81001a27:	83 f8 04             	cmp    $0x4,%eax
81001a2a:	77 0b                	ja     81001a37 <_free_r+0x2be>
81001a2c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a2f:	c1 e8 06             	shr    $0x6,%eax
81001a32:	83 c0 38             	add    $0x38,%eax
81001a35:	eb 61                	jmp    81001a98 <_free_r+0x31f>
81001a37:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a3a:	c1 e8 09             	shr    $0x9,%eax
81001a3d:	83 f8 14             	cmp    $0x14,%eax
81001a40:	77 0b                	ja     81001a4d <_free_r+0x2d4>
81001a42:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a45:	c1 e8 09             	shr    $0x9,%eax
81001a48:	83 c0 5b             	add    $0x5b,%eax
81001a4b:	eb 4b                	jmp    81001a98 <_free_r+0x31f>
81001a4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a50:	c1 e8 09             	shr    $0x9,%eax
81001a53:	83 f8 54             	cmp    $0x54,%eax
81001a56:	77 0b                	ja     81001a63 <_free_r+0x2ea>
81001a58:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a5b:	c1 e8 0c             	shr    $0xc,%eax
81001a5e:	83 c0 6e             	add    $0x6e,%eax
81001a61:	eb 35                	jmp    81001a98 <_free_r+0x31f>
81001a63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a66:	c1 e8 09             	shr    $0x9,%eax
81001a69:	3d 54 01 00 00       	cmp    $0x154,%eax
81001a6e:	77 0b                	ja     81001a7b <_free_r+0x302>
81001a70:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a73:	c1 e8 0f             	shr    $0xf,%eax
81001a76:	83 c0 77             	add    $0x77,%eax
81001a79:	eb 1d                	jmp    81001a98 <_free_r+0x31f>
81001a7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a7e:	c1 e8 09             	shr    $0x9,%eax
81001a81:	3d 54 05 00 00       	cmp    $0x554,%eax
81001a86:	77 0b                	ja     81001a93 <_free_r+0x31a>
81001a88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a8b:	c1 e8 12             	shr    $0x12,%eax
81001a8e:	83 c0 7c             	add    $0x7c,%eax
81001a91:	eb 05                	jmp    81001a98 <_free_r+0x31f>
81001a93:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001a98:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001a9b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001a9e:	83 c0 01             	add    $0x1,%eax
81001aa1:	01 c0                	add    %eax,%eax
81001aa3:	c1 e0 02             	shl    $0x2,%eax
81001aa6:	05 40 83 00 81       	add    $0x81008340,%eax
81001aab:	83 e8 08             	sub    $0x8,%eax
81001aae:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ab1:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ab4:	8b 40 08             	mov    0x8(%eax),%eax
81001ab7:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001aba:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001abd:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001ac0:	75 36                	jne    81001af8 <_free_r+0x37f>
81001ac2:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001ac7:	8b 58 04             	mov    0x4(%eax),%ebx
81001aca:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001acd:	8d 50 03             	lea    0x3(%eax),%edx
81001ad0:	85 c0                	test   %eax,%eax
81001ad2:	0f 48 c2             	cmovs  %edx,%eax
81001ad5:	c1 f8 02             	sar    $0x2,%eax
81001ad8:	ba 01 00 00 00       	mov    $0x1,%edx
81001add:	89 c1                	mov    %eax,%ecx
81001adf:	d3 e2                	shl    %cl,%edx
81001ae1:	89 d0                	mov    %edx,%eax
81001ae3:	ba 40 83 00 81       	mov    $0x81008340,%edx
81001ae8:	09 d8                	or     %ebx,%eax
81001aea:	89 42 04             	mov    %eax,0x4(%edx)
81001aed:	eb 28                	jmp    81001b17 <_free_r+0x39e>
81001aef:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001af2:	8b 40 08             	mov    0x8(%eax),%eax
81001af5:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001af8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001afb:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001afe:	74 0e                	je     81001b0e <_free_r+0x395>
81001b00:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b03:	8b 40 04             	mov    0x4(%eax),%eax
81001b06:	83 e0 fc             	and    $0xfffffffc,%eax
81001b09:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001b0c:	72 e1                	jb     81001aef <_free_r+0x376>
81001b0e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b11:	8b 40 0c             	mov    0xc(%eax),%eax
81001b14:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b1a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001b1d:	89 50 0c             	mov    %edx,0xc(%eax)
81001b20:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b23:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b26:	89 50 08             	mov    %edx,0x8(%eax)
81001b29:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b2c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001b2f:	89 50 08             	mov    %edx,0x8(%eax)
81001b32:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b35:	8b 50 08             	mov    0x8(%eax),%edx
81001b38:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001b3b:	89 50 0c             	mov    %edx,0xc(%eax)
81001b3e:	83 ec 0c             	sub    $0xc,%esp
81001b41:	ff 75 08             	push   0x8(%ebp)
81001b44:	e8 d5 24 00 00       	call   8100401e <__malloc_unlock>
81001b49:	83 c4 10             	add    $0x10,%esp
81001b4c:	eb 01                	jmp    81001b4f <_free_r+0x3d6>
81001b4e:	90                   	nop
81001b4f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001b52:	c9                   	leave  
81001b53:	c3                   	ret    

81001b54 <_malloc_trim_r>:
81001b54:	55                   	push   %ebp
81001b55:	89 e5                	mov    %esp,%ebp
81001b57:	83 ec 28             	sub    $0x28,%esp
81001b5a:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81001b61:	83 ec 0c             	sub    $0xc,%esp
81001b64:	ff 75 08             	push   0x8(%ebp)
81001b67:	e8 ac 24 00 00       	call   81004018 <__malloc_lock>
81001b6c:	83 c4 10             	add    $0x10,%esp
81001b6f:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001b74:	8b 40 08             	mov    0x8(%eax),%eax
81001b77:	8b 40 04             	mov    0x4(%eax),%eax
81001b7a:	83 e0 fc             	and    $0xfffffffc,%eax
81001b7d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b80:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b83:	2b 45 0c             	sub    0xc(%ebp),%eax
81001b86:	89 c2                	mov    %eax,%edx
81001b88:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b8b:	01 d0                	add    %edx,%eax
81001b8d:	83 e8 11             	sub    $0x11,%eax
81001b90:	ba 00 00 00 00       	mov    $0x0,%edx
81001b95:	f7 75 f4             	divl   -0xc(%ebp)
81001b98:	83 e8 01             	sub    $0x1,%eax
81001b9b:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81001b9f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001ba2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ba5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001ba8:	7d 18                	jge    81001bc2 <_malloc_trim_r+0x6e>
81001baa:	83 ec 0c             	sub    $0xc,%esp
81001bad:	ff 75 08             	push   0x8(%ebp)
81001bb0:	e8 69 24 00 00       	call   8100401e <__malloc_unlock>
81001bb5:	83 c4 10             	add    $0x10,%esp
81001bb8:	b8 00 00 00 00       	mov    $0x0,%eax
81001bbd:	e9 f1 00 00 00       	jmp    81001cb3 <_malloc_trim_r+0x15f>
81001bc2:	83 ec 08             	sub    $0x8,%esp
81001bc5:	6a 00                	push   $0x0
81001bc7:	ff 75 08             	push   0x8(%ebp)
81001bca:	e8 03 35 00 00       	call   810050d2 <_sbrk_r>
81001bcf:	83 c4 10             	add    $0x10,%esp
81001bd2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001bd5:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001bda:	8b 50 08             	mov    0x8(%eax),%edx
81001bdd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001be0:	01 d0                	add    %edx,%eax
81001be2:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001be5:	74 18                	je     81001bff <_malloc_trim_r+0xab>
81001be7:	83 ec 0c             	sub    $0xc,%esp
81001bea:	ff 75 08             	push   0x8(%ebp)
81001bed:	e8 2c 24 00 00       	call   8100401e <__malloc_unlock>
81001bf2:	83 c4 10             	add    $0x10,%esp
81001bf5:	b8 00 00 00 00       	mov    $0x0,%eax
81001bfa:	e9 b4 00 00 00       	jmp    81001cb3 <_malloc_trim_r+0x15f>
81001bff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c02:	f7 d8                	neg    %eax
81001c04:	83 ec 08             	sub    $0x8,%esp
81001c07:	50                   	push   %eax
81001c08:	ff 75 08             	push   0x8(%ebp)
81001c0b:	e8 c2 34 00 00       	call   810050d2 <_sbrk_r>
81001c10:	83 c4 10             	add    $0x10,%esp
81001c13:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c16:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001c1a:	75 61                	jne    81001c7d <_malloc_trim_r+0x129>
81001c1c:	83 ec 08             	sub    $0x8,%esp
81001c1f:	6a 00                	push   $0x0
81001c21:	ff 75 08             	push   0x8(%ebp)
81001c24:	e8 a9 34 00 00       	call   810050d2 <_sbrk_r>
81001c29:	83 c4 10             	add    $0x10,%esp
81001c2c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001c2f:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001c34:	8b 50 08             	mov    0x8(%eax),%edx
81001c37:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c3a:	29 d0                	sub    %edx,%eax
81001c3c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c3f:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81001c43:	7e 23                	jle    81001c68 <_malloc_trim_r+0x114>
81001c45:	8b 15 4c 87 00 81    	mov    0x8100874c,%edx
81001c4b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c4e:	29 d0                	sub    %edx,%eax
81001c50:	a3 40 8f 00 81       	mov    %eax,0x81008f40
81001c55:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c58:	83 c8 01             	or     $0x1,%eax
81001c5b:	89 c2                	mov    %eax,%edx
81001c5d:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001c62:	8b 40 08             	mov    0x8(%eax),%eax
81001c65:	89 50 04             	mov    %edx,0x4(%eax)
81001c68:	83 ec 0c             	sub    $0xc,%esp
81001c6b:	ff 75 08             	push   0x8(%ebp)
81001c6e:	e8 ab 23 00 00       	call   8100401e <__malloc_unlock>
81001c73:	83 c4 10             	add    $0x10,%esp
81001c76:	b8 00 00 00 00       	mov    $0x0,%eax
81001c7b:	eb 36                	jmp    81001cb3 <_malloc_trim_r+0x15f>
81001c7d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c80:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001c83:	83 c8 01             	or     $0x1,%eax
81001c86:	89 c2                	mov    %eax,%edx
81001c88:	b8 40 83 00 81       	mov    $0x81008340,%eax
81001c8d:	8b 40 08             	mov    0x8(%eax),%eax
81001c90:	89 50 04             	mov    %edx,0x4(%eax)
81001c93:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81001c98:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001c9b:	a3 40 8f 00 81       	mov    %eax,0x81008f40
81001ca0:	83 ec 0c             	sub    $0xc,%esp
81001ca3:	ff 75 08             	push   0x8(%ebp)
81001ca6:	e8 73 23 00 00       	call   8100401e <__malloc_unlock>
81001cab:	83 c4 10             	add    $0x10,%esp
81001cae:	b8 01 00 00 00       	mov    $0x1,%eax
81001cb3:	c9                   	leave  
81001cb4:	c3                   	ret    

81001cb5 <_fseek_r>:
81001cb5:	55                   	push   %ebp
81001cb6:	89 e5                	mov    %esp,%ebp
81001cb8:	83 ec 08             	sub    $0x8,%esp
81001cbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81001cbe:	ff 75 14             	push   0x14(%ebp)
81001cc1:	ff 75 10             	push   0x10(%ebp)
81001cc4:	50                   	push   %eax
81001cc5:	ff 75 08             	push   0x8(%ebp)
81001cc8:	e8 25 00 00 00       	call   81001cf2 <_fseeko_r>
81001ccd:	83 c4 10             	add    $0x10,%esp
81001cd0:	c9                   	leave  
81001cd1:	c3                   	ret    

81001cd2 <fseek>:
81001cd2:	55                   	push   %ebp
81001cd3:	89 e5                	mov    %esp,%ebp
81001cd5:	83 ec 08             	sub    $0x8,%esp
81001cd8:	8b 55 08             	mov    0x8(%ebp),%edx
81001cdb:	a1 24 83 00 81       	mov    0x81008324,%eax
81001ce0:	ff 75 10             	push   0x10(%ebp)
81001ce3:	ff 75 0c             	push   0xc(%ebp)
81001ce6:	52                   	push   %edx
81001ce7:	50                   	push   %eax
81001ce8:	e8 c8 ff ff ff       	call   81001cb5 <_fseek_r>
81001ced:	83 c4 10             	add    $0x10,%esp
81001cf0:	c9                   	leave  
81001cf1:	c3                   	ret    

81001cf2 <_fseeko_r>:
81001cf2:	55                   	push   %ebp
81001cf3:	89 e5                	mov    %esp,%ebp
81001cf5:	56                   	push   %esi
81001cf6:	53                   	push   %ebx
81001cf7:	83 ec 60             	sub    $0x60,%esp
81001cfa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81001cfd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001d04:	8b 45 08             	mov    0x8(%ebp),%eax
81001d07:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d0a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001d0e:	74 18                	je     81001d28 <_fseeko_r+0x36>
81001d10:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001d13:	8b 40 38             	mov    0x38(%eax),%eax
81001d16:	85 c0                	test   %eax,%eax
81001d18:	75 0e                	jne    81001d28 <_fseeko_r+0x36>
81001d1a:	83 ec 0c             	sub    $0xc,%esp
81001d1d:	ff 75 e4             	push   -0x1c(%ebp)
81001d20:	e8 fe f7 ff ff       	call   81001523 <__sinit>
81001d25:	83 c4 10             	add    $0x10,%esp
81001d28:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d2c:	98                   	cwtl   
81001d2d:	25 00 01 00 00       	and    $0x100,%eax
81001d32:	85 c0                	test   %eax,%eax
81001d34:	74 1b                	je     81001d51 <_fseeko_r+0x5f>
81001d36:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001d3a:	98                   	cwtl   
81001d3b:	83 e0 08             	and    $0x8,%eax
81001d3e:	85 c0                	test   %eax,%eax
81001d40:	74 0f                	je     81001d51 <_fseeko_r+0x5f>
81001d42:	83 ec 08             	sub    $0x8,%esp
81001d45:	53                   	push   %ebx
81001d46:	ff 75 08             	push   0x8(%ebp)
81001d49:	e8 d2 f2 ff ff       	call   81001020 <_fflush_r>
81001d4e:	83 c4 10             	add    $0x10,%esp
81001d51:	8b 43 28             	mov    0x28(%ebx),%eax
81001d54:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d57:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001d5b:	75 13                	jne    81001d70 <_fseeko_r+0x7e>
81001d5d:	8b 45 08             	mov    0x8(%ebp),%eax
81001d60:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81001d66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d6b:	e9 2c 04 00 00       	jmp    8100219c <_fseeko_r+0x4aa>
81001d70:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001d74:	0f 84 bc 00 00 00    	je     81001e36 <_fseeko_r+0x144>
81001d7a:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81001d7e:	0f 8f bb 00 00 00    	jg     81001e3f <_fseeko_r+0x14d>
81001d84:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001d88:	0f 84 a8 00 00 00    	je     81001e36 <_fseeko_r+0x144>
81001d8e:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81001d92:	0f 85 a7 00 00 00    	jne    81001e3f <_fseeko_r+0x14d>
81001d98:	83 ec 08             	sub    $0x8,%esp
81001d9b:	53                   	push   %ebx
81001d9c:	ff 75 08             	push   0x8(%ebp)
81001d9f:	e8 7c f2 ff ff       	call   81001020 <_fflush_r>
81001da4:	83 c4 10             	add    $0x10,%esp
81001da7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001dab:	98                   	cwtl   
81001dac:	25 00 10 00 00       	and    $0x1000,%eax
81001db1:	85 c0                	test   %eax,%eax
81001db3:	74 08                	je     81001dbd <_fseeko_r+0xcb>
81001db5:	8b 43 50             	mov    0x50(%ebx),%eax
81001db8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001dbb:	eb 26                	jmp    81001de3 <_fseeko_r+0xf1>
81001dbd:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001dc0:	6a 01                	push   $0x1
81001dc2:	6a 00                	push   $0x0
81001dc4:	50                   	push   %eax
81001dc5:	ff 75 08             	push   0x8(%ebp)
81001dc8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dcb:	ff d0                	call   *%eax
81001dcd:	83 c4 10             	add    $0x10,%esp
81001dd0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001dd3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001dd7:	75 0a                	jne    81001de3 <_fseeko_r+0xf1>
81001dd9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dde:	e9 b9 03 00 00       	jmp    8100219c <_fseeko_r+0x4aa>
81001de3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001de7:	98                   	cwtl   
81001de8:	83 e0 04             	and    $0x4,%eax
81001deb:	85 c0                	test   %eax,%eax
81001ded:	74 15                	je     81001e04 <_fseeko_r+0x112>
81001def:	8b 43 04             	mov    0x4(%ebx),%eax
81001df2:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001df5:	8b 43 30             	mov    0x30(%ebx),%eax
81001df8:	85 c0                	test   %eax,%eax
81001dfa:	74 24                	je     81001e20 <_fseeko_r+0x12e>
81001dfc:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001dff:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001e02:	eb 1c                	jmp    81001e20 <_fseeko_r+0x12e>
81001e04:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e08:	98                   	cwtl   
81001e09:	83 e0 08             	and    $0x8,%eax
81001e0c:	85 c0                	test   %eax,%eax
81001e0e:	74 10                	je     81001e20 <_fseeko_r+0x12e>
81001e10:	8b 03                	mov    (%ebx),%eax
81001e12:	85 c0                	test   %eax,%eax
81001e14:	74 0a                	je     81001e20 <_fseeko_r+0x12e>
81001e16:	8b 03                	mov    (%ebx),%eax
81001e18:	8b 53 10             	mov    0x10(%ebx),%edx
81001e1b:	29 d0                	sub    %edx,%eax
81001e1d:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e20:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e23:	01 45 10             	add    %eax,0x10(%ebp)
81001e26:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81001e2d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001e34:	eb 1c                	jmp    81001e52 <_fseeko_r+0x160>
81001e36:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001e3d:	eb 13                	jmp    81001e52 <_fseeko_r+0x160>
81001e3f:	8b 45 08             	mov    0x8(%ebp),%eax
81001e42:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81001e48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e4d:	e9 4a 03 00 00       	jmp    8100219c <_fseeko_r+0x4aa>
81001e52:	8b 43 10             	mov    0x10(%ebx),%eax
81001e55:	85 c0                	test   %eax,%eax
81001e57:	75 0f                	jne    81001e68 <_fseeko_r+0x176>
81001e59:	83 ec 08             	sub    $0x8,%esp
81001e5c:	53                   	push   %ebx
81001e5d:	ff 75 08             	push   0x8(%ebp)
81001e60:	e8 8b 13 00 00       	call   810031f0 <__smakebuf_r>
81001e65:	83 c4 10             	add    $0x10,%esp
81001e68:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e6c:	98                   	cwtl   
81001e6d:	25 1a 08 00 00       	and    $0x81a,%eax
81001e72:	85 c0                	test   %eax,%eax
81001e74:	0f 85 7d 02 00 00    	jne    810020f7 <_fseeko_r+0x405>
81001e7a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001e7e:	98                   	cwtl   
81001e7f:	25 00 04 00 00       	and    $0x400,%eax
81001e84:	85 c0                	test   %eax,%eax
81001e86:	75 5f                	jne    81001ee7 <_fseeko_r+0x1f5>
81001e88:	81 7d e0 c7 53 00 81 	cmpl   $0x810053c7,-0x20(%ebp)
81001e8f:	75 34                	jne    81001ec5 <_fseeko_r+0x1d3>
81001e91:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001e95:	66 85 c0             	test   %ax,%ax
81001e98:	78 2b                	js     81001ec5 <_fseeko_r+0x1d3>
81001e9a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001e9e:	98                   	cwtl   
81001e9f:	83 ec 04             	sub    $0x4,%esp
81001ea2:	8d 55 98             	lea    -0x68(%ebp),%edx
81001ea5:	52                   	push   %edx
81001ea6:	50                   	push   %eax
81001ea7:	ff 75 08             	push   0x8(%ebp)
81001eaa:	e8 14 03 00 00       	call   810021c3 <_fstat_r>
81001eaf:	83 c4 10             	add    $0x10,%esp
81001eb2:	85 c0                	test   %eax,%eax
81001eb4:	75 0f                	jne    81001ec5 <_fseeko_r+0x1d3>
81001eb6:	8b 45 9c             	mov    -0x64(%ebp),%eax
81001eb9:	25 00 f0 00 00       	and    $0xf000,%eax
81001ebe:	3d 00 80 00 00       	cmp    $0x8000,%eax
81001ec3:	74 10                	je     81001ed5 <_fseeko_r+0x1e3>
81001ec5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ec9:	80 cc 08             	or     $0x8,%ah
81001ecc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001ed0:	e9 2f 02 00 00       	jmp    81002104 <_fseeko_r+0x412>
81001ed5:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
81001edc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001ee0:	80 cc 04             	or     $0x4,%ah
81001ee3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001ee7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001eeb:	75 08                	jne    81001ef5 <_fseeko_r+0x203>
81001eed:	8b 45 10             	mov    0x10(%ebp),%eax
81001ef0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ef3:	eb 2b                	jmp    81001f20 <_fseeko_r+0x22e>
81001ef5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81001ef9:	98                   	cwtl   
81001efa:	83 ec 04             	sub    $0x4,%esp
81001efd:	8d 55 98             	lea    -0x68(%ebp),%edx
81001f00:	52                   	push   %edx
81001f01:	50                   	push   %eax
81001f02:	ff 75 08             	push   0x8(%ebp)
81001f05:	e8 b9 02 00 00       	call   810021c3 <_fstat_r>
81001f0a:	83 c4 10             	add    $0x10,%esp
81001f0d:	85 c0                	test   %eax,%eax
81001f0f:	0f 85 e5 01 00 00    	jne    810020fa <_fseeko_r+0x408>
81001f15:	8b 55 a8             	mov    -0x58(%ebp),%edx
81001f18:	8b 45 10             	mov    0x10(%ebp),%eax
81001f1b:	01 d0                	add    %edx,%eax
81001f1d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f20:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001f24:	75 49                	jne    81001f6f <_fseeko_r+0x27d>
81001f26:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001f2a:	98                   	cwtl   
81001f2b:	25 00 10 00 00       	and    $0x1000,%eax
81001f30:	85 c0                	test   %eax,%eax
81001f32:	74 08                	je     81001f3c <_fseeko_r+0x24a>
81001f34:	8b 43 50             	mov    0x50(%ebx),%eax
81001f37:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f3a:	eb 20                	jmp    81001f5c <_fseeko_r+0x26a>
81001f3c:	8b 43 1c             	mov    0x1c(%ebx),%eax
81001f3f:	6a 01                	push   $0x1
81001f41:	6a 00                	push   $0x0
81001f43:	50                   	push   %eax
81001f44:	ff 75 08             	push   0x8(%ebp)
81001f47:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f4a:	ff d0                	call   *%eax
81001f4c:	83 c4 10             	add    $0x10,%esp
81001f4f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f52:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81001f56:	0f 84 a1 01 00 00    	je     810020fd <_fseeko_r+0x40b>
81001f5c:	8b 43 04             	mov    0x4(%ebx),%eax
81001f5f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001f62:	8b 43 30             	mov    0x30(%ebx),%eax
81001f65:	85 c0                	test   %eax,%eax
81001f67:	74 06                	je     81001f6f <_fseeko_r+0x27d>
81001f69:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001f6c:	29 45 f0             	sub    %eax,-0x10(%ebp)
81001f6f:	8b 43 30             	mov    0x30(%ebx),%eax
81001f72:	85 c0                	test   %eax,%eax
81001f74:	74 22                	je     81001f98 <_fseeko_r+0x2a6>
81001f76:	8b 43 04             	mov    0x4(%ebx),%eax
81001f79:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f7c:	8b 43 38             	mov    0x38(%ebx),%eax
81001f7f:	8b 53 10             	mov    0x10(%ebx),%edx
81001f82:	29 d0                	sub    %edx,%eax
81001f84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f8a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001f8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001f90:	8b 43 3c             	mov    0x3c(%ebx),%eax
81001f93:	01 45 ec             	add    %eax,-0x14(%ebp)
81001f96:	eb 19                	jmp    81001fb1 <_fseeko_r+0x2bf>
81001f98:	8b 03                	mov    (%ebx),%eax
81001f9a:	8b 53 10             	mov    0x10(%ebx),%edx
81001f9d:	29 d0                	sub    %edx,%eax
81001f9f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fa2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001fa5:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001fa8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001fab:	8b 43 04             	mov    0x4(%ebx),%eax
81001fae:	01 45 ec             	add    %eax,-0x14(%ebp)
81001fb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fb4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81001fb7:	7c 7c                	jl     81002035 <_fseeko_r+0x343>
81001fb9:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001fbc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fbf:	01 c2                	add    %eax,%edx
81001fc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fc4:	39 c2                	cmp    %eax,%edx
81001fc6:	76 6d                	jbe    81002035 <_fseeko_r+0x343>
81001fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fcb:	2b 45 f0             	sub    -0x10(%ebp),%eax
81001fce:	89 c6                	mov    %eax,%esi
81001fd0:	8b 43 10             	mov    0x10(%ebx),%eax
81001fd3:	89 f2                	mov    %esi,%edx
81001fd5:	01 d0                	add    %edx,%eax
81001fd7:	89 03                	mov    %eax,(%ebx)
81001fd9:	89 f2                	mov    %esi,%edx
81001fdb:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fde:	29 d0                	sub    %edx,%eax
81001fe0:	89 43 04             	mov    %eax,0x4(%ebx)
81001fe3:	8b 43 30             	mov    0x30(%ebx),%eax
81001fe6:	85 c0                	test   %eax,%eax
81001fe8:	74 23                	je     8100200d <_fseeko_r+0x31b>
81001fea:	8b 53 30             	mov    0x30(%ebx),%edx
81001fed:	8d 43 40             	lea    0x40(%ebx),%eax
81001ff0:	39 c2                	cmp    %eax,%edx
81001ff2:	74 12                	je     81002006 <_fseeko_r+0x314>
81001ff4:	8b 43 30             	mov    0x30(%ebx),%eax
81001ff7:	83 ec 08             	sub    $0x8,%esp
81001ffa:	50                   	push   %eax
81001ffb:	ff 75 08             	push   0x8(%ebp)
81001ffe:	e8 76 f7 ff ff       	call   81001779 <_free_r>
81002003:	83 c4 10             	add    $0x10,%esp
81002006:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100200d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002011:	83 e0 df             	and    $0xffffffdf,%eax
81002014:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002018:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100201b:	83 ec 04             	sub    $0x4,%esp
8100201e:	6a 08                	push   $0x8
81002020:	6a 00                	push   $0x0
81002022:	50                   	push   %eax
81002023:	e8 68 1f 00 00       	call   81003f90 <memset>
81002028:	83 c4 10             	add    $0x10,%esp
8100202b:	b8 00 00 00 00       	mov    $0x0,%eax
81002030:	e9 67 01 00 00       	jmp    8100219c <_fseeko_r+0x4aa>
81002035:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002038:	f7 d8                	neg    %eax
8100203a:	23 45 f4             	and    -0xc(%ebp),%eax
8100203d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002040:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002043:	6a 00                	push   $0x0
81002045:	ff 75 f0             	push   -0x10(%ebp)
81002048:	50                   	push   %eax
81002049:	ff 75 08             	push   0x8(%ebp)
8100204c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100204f:	ff d0                	call   *%eax
81002051:	83 c4 10             	add    $0x10,%esp
81002054:	83 f8 ff             	cmp    $0xffffffff,%eax
81002057:	0f 84 a3 00 00 00    	je     81002100 <_fseeko_r+0x40e>
8100205d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002064:	8b 43 10             	mov    0x10(%ebx),%eax
81002067:	89 03                	mov    %eax,(%ebx)
81002069:	8b 43 30             	mov    0x30(%ebx),%eax
8100206c:	85 c0                	test   %eax,%eax
8100206e:	74 23                	je     81002093 <_fseeko_r+0x3a1>
81002070:	8b 53 30             	mov    0x30(%ebx),%edx
81002073:	8d 43 40             	lea    0x40(%ebx),%eax
81002076:	39 c2                	cmp    %eax,%edx
81002078:	74 12                	je     8100208c <_fseeko_r+0x39a>
8100207a:	8b 43 30             	mov    0x30(%ebx),%eax
8100207d:	83 ec 08             	sub    $0x8,%esp
81002080:	50                   	push   %eax
81002081:	ff 75 08             	push   0x8(%ebp)
81002084:	e8 f0 f6 ff ff       	call   81001779 <_free_r>
81002089:	83 c4 10             	add    $0x10,%esp
8100208c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002093:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002097:	83 e0 df             	and    $0xffffffdf,%eax
8100209a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100209e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020a1:	2b 45 f0             	sub    -0x10(%ebp),%eax
810020a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020a7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810020ab:	74 2d                	je     810020da <_fseeko_r+0x3e8>
810020ad:	83 ec 08             	sub    $0x8,%esp
810020b0:	53                   	push   %ebx
810020b1:	ff 75 08             	push   0x8(%ebp)
810020b4:	e8 18 2e 00 00       	call   81004ed1 <__srefill_r>
810020b9:	83 c4 10             	add    $0x10,%esp
810020bc:	85 c0                	test   %eax,%eax
810020be:	75 43                	jne    81002103 <_fseeko_r+0x411>
810020c0:	8b 43 04             	mov    0x4(%ebx),%eax
810020c3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810020c6:	77 3b                	ja     81002103 <_fseeko_r+0x411>
810020c8:	8b 13                	mov    (%ebx),%edx
810020ca:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020cd:	01 d0                	add    %edx,%eax
810020cf:	89 03                	mov    %eax,(%ebx)
810020d1:	8b 43 04             	mov    0x4(%ebx),%eax
810020d4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810020d7:	89 43 04             	mov    %eax,0x4(%ebx)
810020da:	8d 43 5c             	lea    0x5c(%ebx),%eax
810020dd:	83 ec 04             	sub    $0x4,%esp
810020e0:	6a 08                	push   $0x8
810020e2:	6a 00                	push   $0x0
810020e4:	50                   	push   %eax
810020e5:	e8 a6 1e 00 00       	call   81003f90 <memset>
810020ea:	83 c4 10             	add    $0x10,%esp
810020ed:	b8 00 00 00 00       	mov    $0x0,%eax
810020f2:	e9 a5 00 00 00       	jmp    8100219c <_fseeko_r+0x4aa>
810020f7:	90                   	nop
810020f8:	eb 0a                	jmp    81002104 <_fseeko_r+0x412>
810020fa:	90                   	nop
810020fb:	eb 07                	jmp    81002104 <_fseeko_r+0x412>
810020fd:	90                   	nop
810020fe:	eb 04                	jmp    81002104 <_fseeko_r+0x412>
81002100:	90                   	nop
81002101:	eb 01                	jmp    81002104 <_fseeko_r+0x412>
81002103:	90                   	nop
81002104:	83 ec 08             	sub    $0x8,%esp
81002107:	53                   	push   %ebx
81002108:	ff 75 08             	push   0x8(%ebp)
8100210b:	e8 10 ef ff ff       	call   81001020 <_fflush_r>
81002110:	83 c4 10             	add    $0x10,%esp
81002113:	85 c0                	test   %eax,%eax
81002115:	75 1a                	jne    81002131 <_fseeko_r+0x43f>
81002117:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100211a:	ff 75 14             	push   0x14(%ebp)
8100211d:	ff 75 10             	push   0x10(%ebp)
81002120:	50                   	push   %eax
81002121:	ff 75 08             	push   0x8(%ebp)
81002124:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002127:	ff d0                	call   *%eax
81002129:	83 c4 10             	add    $0x10,%esp
8100212c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100212f:	75 07                	jne    81002138 <_fseeko_r+0x446>
81002131:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002136:	eb 64                	jmp    8100219c <_fseeko_r+0x4aa>
81002138:	8b 43 30             	mov    0x30(%ebx),%eax
8100213b:	85 c0                	test   %eax,%eax
8100213d:	74 23                	je     81002162 <_fseeko_r+0x470>
8100213f:	8b 53 30             	mov    0x30(%ebx),%edx
81002142:	8d 43 40             	lea    0x40(%ebx),%eax
81002145:	39 c2                	cmp    %eax,%edx
81002147:	74 12                	je     8100215b <_fseeko_r+0x469>
81002149:	8b 43 30             	mov    0x30(%ebx),%eax
8100214c:	83 ec 08             	sub    $0x8,%esp
8100214f:	50                   	push   %eax
81002150:	ff 75 08             	push   0x8(%ebp)
81002153:	e8 21 f6 ff ff       	call   81001779 <_free_r>
81002158:	83 c4 10             	add    $0x10,%esp
8100215b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002162:	8b 43 10             	mov    0x10(%ebx),%eax
81002165:	89 03                	mov    %eax,(%ebx)
81002167:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100216e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002172:	83 e0 df             	and    $0xffffffdf,%eax
81002175:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002179:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100217d:	80 e4 f7             	and    $0xf7,%ah
81002180:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002184:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002187:	83 ec 04             	sub    $0x4,%esp
8100218a:	6a 08                	push   $0x8
8100218c:	6a 00                	push   $0x0
8100218e:	50                   	push   %eax
8100218f:	e8 fc 1d 00 00       	call   81003f90 <memset>
81002194:	83 c4 10             	add    $0x10,%esp
81002197:	b8 00 00 00 00       	mov    $0x0,%eax
8100219c:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100219f:	5b                   	pop    %ebx
810021a0:	5e                   	pop    %esi
810021a1:	5d                   	pop    %ebp
810021a2:	c3                   	ret    

810021a3 <fseeko>:
810021a3:	55                   	push   %ebp
810021a4:	89 e5                	mov    %esp,%ebp
810021a6:	83 ec 08             	sub    $0x8,%esp
810021a9:	8b 55 08             	mov    0x8(%ebp),%edx
810021ac:	a1 24 83 00 81       	mov    0x81008324,%eax
810021b1:	ff 75 10             	push   0x10(%ebp)
810021b4:	ff 75 0c             	push   0xc(%ebp)
810021b7:	52                   	push   %edx
810021b8:	50                   	push   %eax
810021b9:	e8 34 fb ff ff       	call   81001cf2 <_fseeko_r>
810021be:	83 c4 10             	add    $0x10,%esp
810021c1:	c9                   	leave  
810021c2:	c3                   	ret    

810021c3 <_fstat_r>:
810021c3:	55                   	push   %ebp
810021c4:	89 e5                	mov    %esp,%ebp
810021c6:	83 ec 18             	sub    $0x18,%esp
810021c9:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
810021d0:	00 00 00 
810021d3:	83 ec 08             	sub    $0x8,%esp
810021d6:	ff 75 10             	push   0x10(%ebp)
810021d9:	ff 75 0c             	push   0xc(%ebp)
810021dc:	e8 f4 e8 ff ff       	call   81000ad5 <fstat>
810021e1:	83 c4 10             	add    $0x10,%esp
810021e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810021e7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810021eb:	75 14                	jne    81002201 <_fstat_r+0x3e>
810021ed:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
810021f2:	85 c0                	test   %eax,%eax
810021f4:	74 0b                	je     81002201 <_fstat_r+0x3e>
810021f6:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
810021fc:	8b 45 08             	mov    0x8(%ebp),%eax
810021ff:	89 10                	mov    %edx,(%eax)
81002201:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002204:	c9                   	leave  
81002205:	c3                   	ret    

81002206 <_fwalk>:
81002206:	55                   	push   %ebp
81002207:	89 e5                	mov    %esp,%ebp
81002209:	57                   	push   %edi
8100220a:	56                   	push   %esi
8100220b:	53                   	push   %ebx
8100220c:	83 ec 1c             	sub    $0x1c,%esp
8100220f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002216:	8b 45 08             	mov    0x8(%ebp),%eax
81002219:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100221f:	eb 3e                	jmp    8100225f <_fwalk+0x59>
81002221:	8b 5e 08             	mov    0x8(%esi),%ebx
81002224:	8b 7e 04             	mov    0x4(%esi),%edi
81002227:	eb 2d                	jmp    81002256 <_fwalk+0x50>
81002229:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100222d:	66 85 c0             	test   %ax,%ax
81002230:	74 21                	je     81002253 <_fwalk+0x4d>
81002232:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002236:	66 83 f8 01          	cmp    $0x1,%ax
8100223a:	74 17                	je     81002253 <_fwalk+0x4d>
8100223c:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002240:	66 83 f8 ff          	cmp    $0xffff,%ax
81002244:	74 0d                	je     81002253 <_fwalk+0x4d>
81002246:	83 ec 0c             	sub    $0xc,%esp
81002249:	53                   	push   %ebx
8100224a:	ff 55 0c             	call   *0xc(%ebp)
8100224d:	83 c4 10             	add    $0x10,%esp
81002250:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002253:	83 c3 68             	add    $0x68,%ebx
81002256:	83 ef 01             	sub    $0x1,%edi
81002259:	85 ff                	test   %edi,%edi
8100225b:	79 cc                	jns    81002229 <_fwalk+0x23>
8100225d:	8b 36                	mov    (%esi),%esi
8100225f:	85 f6                	test   %esi,%esi
81002261:	75 be                	jne    81002221 <_fwalk+0x1b>
81002263:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002266:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002269:	5b                   	pop    %ebx
8100226a:	5e                   	pop    %esi
8100226b:	5f                   	pop    %edi
8100226c:	5d                   	pop    %ebp
8100226d:	c3                   	ret    

8100226e <_fwalk_reent>:
8100226e:	55                   	push   %ebp
8100226f:	89 e5                	mov    %esp,%ebp
81002271:	57                   	push   %edi
81002272:	56                   	push   %esi
81002273:	53                   	push   %ebx
81002274:	83 ec 1c             	sub    $0x1c,%esp
81002277:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100227e:	8b 45 08             	mov    0x8(%ebp),%eax
81002281:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002287:	eb 41                	jmp    810022ca <_fwalk_reent+0x5c>
81002289:	8b 5e 08             	mov    0x8(%esi),%ebx
8100228c:	8b 7e 04             	mov    0x4(%esi),%edi
8100228f:	eb 30                	jmp    810022c1 <_fwalk_reent+0x53>
81002291:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002295:	66 85 c0             	test   %ax,%ax
81002298:	74 24                	je     810022be <_fwalk_reent+0x50>
8100229a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100229e:	66 83 f8 01          	cmp    $0x1,%ax
810022a2:	74 1a                	je     810022be <_fwalk_reent+0x50>
810022a4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810022a8:	66 83 f8 ff          	cmp    $0xffff,%ax
810022ac:	74 10                	je     810022be <_fwalk_reent+0x50>
810022ae:	83 ec 08             	sub    $0x8,%esp
810022b1:	53                   	push   %ebx
810022b2:	ff 75 08             	push   0x8(%ebp)
810022b5:	ff 55 0c             	call   *0xc(%ebp)
810022b8:	83 c4 10             	add    $0x10,%esp
810022bb:	09 45 e4             	or     %eax,-0x1c(%ebp)
810022be:	83 c3 68             	add    $0x68,%ebx
810022c1:	83 ef 01             	sub    $0x1,%edi
810022c4:	85 ff                	test   %edi,%edi
810022c6:	79 c9                	jns    81002291 <_fwalk_reent+0x23>
810022c8:	8b 36                	mov    (%esi),%esi
810022ca:	85 f6                	test   %esi,%esi
810022cc:	75 bb                	jne    81002289 <_fwalk_reent+0x1b>
810022ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810022d1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810022d4:	5b                   	pop    %ebx
810022d5:	5e                   	pop    %esi
810022d6:	5f                   	pop    %edi
810022d7:	5d                   	pop    %ebp
810022d8:	c3                   	ret    

810022d9 <_fwrite_r>:
810022d9:	55                   	push   %ebp
810022da:	89 e5                	mov    %esp,%ebp
810022dc:	83 ec 28             	sub    $0x28,%esp
810022df:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810022e5:	8b 45 14             	mov    0x14(%ebp),%eax
810022e8:	0f af 45 10          	imul   0x10(%ebp),%eax
810022ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022f2:	89 45 e0             	mov    %eax,-0x20(%ebp)
810022f5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810022f8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810022fb:	8d 45 dc             	lea    -0x24(%ebp),%eax
810022fe:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002301:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002308:	8b 45 08             	mov    0x8(%ebp),%eax
8100230b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100230e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002312:	74 18                	je     8100232c <_fwrite_r+0x53>
81002314:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002317:	8b 40 38             	mov    0x38(%eax),%eax
8100231a:	85 c0                	test   %eax,%eax
8100231c:	75 0e                	jne    8100232c <_fwrite_r+0x53>
8100231e:	83 ec 0c             	sub    $0xc,%esp
81002321:	ff 75 f0             	push   -0x10(%ebp)
81002324:	e8 fa f1 ff ff       	call   81001523 <__sinit>
81002329:	83 c4 10             	add    $0x10,%esp
8100232c:	8b 45 18             	mov    0x18(%ebp),%eax
8100232f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002333:	98                   	cwtl   
81002334:	25 00 20 00 00       	and    $0x2000,%eax
81002339:	85 c0                	test   %eax,%eax
8100233b:	75 24                	jne    81002361 <_fwrite_r+0x88>
8100233d:	8b 45 18             	mov    0x18(%ebp),%eax
81002340:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002344:	80 cc 20             	or     $0x20,%ah
81002347:	89 c2                	mov    %eax,%edx
81002349:	8b 45 18             	mov    0x18(%ebp),%eax
8100234c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002350:	8b 45 18             	mov    0x18(%ebp),%eax
81002353:	8b 40 64             	mov    0x64(%eax),%eax
81002356:	80 e4 df             	and    $0xdf,%ah
81002359:	89 c2                	mov    %eax,%edx
8100235b:	8b 45 18             	mov    0x18(%ebp),%eax
8100235e:	89 50 64             	mov    %edx,0x64(%eax)
81002361:	83 ec 04             	sub    $0x4,%esp
81002364:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002367:	50                   	push   %eax
81002368:	ff 75 18             	push   0x18(%ebp)
8100236b:	ff 75 08             	push   0x8(%ebp)
8100236e:	e8 57 3e 00 00       	call   810061ca <__sfvwrite_r>
81002373:	83 c4 10             	add    $0x10,%esp
81002376:	85 c0                	test   %eax,%eax
81002378:	75 05                	jne    8100237f <_fwrite_r+0xa6>
8100237a:	8b 45 14             	mov    0x14(%ebp),%eax
8100237d:	eb 10                	jmp    8100238f <_fwrite_r+0xb6>
8100237f:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002382:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002385:	29 d0                	sub    %edx,%eax
81002387:	ba 00 00 00 00       	mov    $0x0,%edx
8100238c:	f7 75 10             	divl   0x10(%ebp)
8100238f:	c9                   	leave  
81002390:	c3                   	ret    

81002391 <fwrite>:
81002391:	55                   	push   %ebp
81002392:	89 e5                	mov    %esp,%ebp
81002394:	83 ec 08             	sub    $0x8,%esp
81002397:	a1 24 83 00 81       	mov    0x81008324,%eax
8100239c:	83 ec 0c             	sub    $0xc,%esp
8100239f:	ff 75 14             	push   0x14(%ebp)
810023a2:	ff 75 10             	push   0x10(%ebp)
810023a5:	ff 75 0c             	push   0xc(%ebp)
810023a8:	ff 75 08             	push   0x8(%ebp)
810023ab:	50                   	push   %eax
810023ac:	e8 28 ff ff ff       	call   810022d9 <_fwrite_r>
810023b1:	83 c4 20             	add    $0x20,%esp
810023b4:	c9                   	leave  
810023b5:	c3                   	ret    

810023b6 <_getchar_r>:
810023b6:	55                   	push   %ebp
810023b7:	89 e5                	mov    %esp,%ebp
810023b9:	83 ec 08             	sub    $0x8,%esp
810023bc:	8b 45 08             	mov    0x8(%ebp),%eax
810023bf:	8b 40 04             	mov    0x4(%eax),%eax
810023c2:	83 ec 08             	sub    $0x8,%esp
810023c5:	50                   	push   %eax
810023c6:	ff 75 08             	push   0x8(%ebp)
810023c9:	e8 9a 42 00 00       	call   81006668 <_getc_r>
810023ce:	83 c4 10             	add    $0x10,%esp
810023d1:	c9                   	leave  
810023d2:	c3                   	ret    

810023d3 <getchar>:
810023d3:	55                   	push   %ebp
810023d4:	89 e5                	mov    %esp,%ebp
810023d6:	83 ec 18             	sub    $0x18,%esp
810023d9:	a1 24 83 00 81       	mov    0x81008324,%eax
810023de:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023e4:	8b 40 04             	mov    0x4(%eax),%eax
810023e7:	83 ec 08             	sub    $0x8,%esp
810023ea:	50                   	push   %eax
810023eb:	ff 75 f4             	push   -0xc(%ebp)
810023ee:	e8 75 42 00 00       	call   81006668 <_getc_r>
810023f3:	83 c4 10             	add    $0x10,%esp
810023f6:	c9                   	leave  
810023f7:	c3                   	ret    

810023f8 <reverse_argv_elements>:
810023f8:	55                   	push   %ebp
810023f9:	89 e5                	mov    %esp,%ebp
810023fb:	83 ec 10             	sub    $0x10,%esp
810023fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002405:	eb 5e                	jmp    81002465 <reverse_argv_elements+0x6d>
81002407:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100240a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002411:	8b 45 08             	mov    0x8(%ebp),%eax
81002414:	01 d0                	add    %edx,%eax
81002416:	8b 00                	mov    (%eax),%eax
81002418:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100241b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100241e:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002421:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002426:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100242d:	8b 45 08             	mov    0x8(%ebp),%eax
81002430:	01 d0                	add    %edx,%eax
81002432:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002435:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100243c:	8b 55 08             	mov    0x8(%ebp),%edx
8100243f:	01 ca                	add    %ecx,%edx
81002441:	8b 00                	mov    (%eax),%eax
81002443:	89 02                	mov    %eax,(%edx)
81002445:	8b 45 0c             	mov    0xc(%ebp),%eax
81002448:	2b 45 fc             	sub    -0x4(%ebp),%eax
8100244b:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002450:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002457:	8b 45 08             	mov    0x8(%ebp),%eax
8100245a:	01 c2                	add    %eax,%edx
8100245c:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100245f:	89 02                	mov    %eax,(%edx)
81002461:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002465:	8b 45 0c             	mov    0xc(%ebp),%eax
81002468:	d1 f8                	sar    %eax
8100246a:	39 45 fc             	cmp    %eax,-0x4(%ebp)
8100246d:	7c 98                	jl     81002407 <reverse_argv_elements+0xf>
8100246f:	90                   	nop
81002470:	90                   	nop
81002471:	c9                   	leave  
81002472:	c3                   	ret    

81002473 <permute>:
81002473:	55                   	push   %ebp
81002474:	89 e5                	mov    %esp,%ebp
81002476:	ff 75 0c             	push   0xc(%ebp)
81002479:	ff 75 08             	push   0x8(%ebp)
8100247c:	e8 77 ff ff ff       	call   810023f8 <reverse_argv_elements>
81002481:	83 c4 08             	add    $0x8,%esp
81002484:	8b 55 0c             	mov    0xc(%ebp),%edx
81002487:	8b 45 10             	mov    0x10(%ebp),%eax
8100248a:	01 d0                	add    %edx,%eax
8100248c:	50                   	push   %eax
8100248d:	ff 75 08             	push   0x8(%ebp)
81002490:	e8 63 ff ff ff       	call   810023f8 <reverse_argv_elements>
81002495:	83 c4 08             	add    $0x8,%esp
81002498:	ff 75 10             	push   0x10(%ebp)
8100249b:	ff 75 08             	push   0x8(%ebp)
8100249e:	e8 55 ff ff ff       	call   810023f8 <reverse_argv_elements>
810024a3:	83 c4 08             	add    $0x8,%esp
810024a6:	90                   	nop
810024a7:	c9                   	leave  
810024a8:	c3                   	ret    

810024a9 <is_option>:
810024a9:	55                   	push   %ebp
810024aa:	89 e5                	mov    %esp,%ebp
810024ac:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810024b0:	74 1a                	je     810024cc <is_option+0x23>
810024b2:	8b 45 08             	mov    0x8(%ebp),%eax
810024b5:	0f b6 00             	movzbl (%eax),%eax
810024b8:	3c 2d                	cmp    $0x2d,%al
810024ba:	74 10                	je     810024cc <is_option+0x23>
810024bc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810024c0:	74 11                	je     810024d3 <is_option+0x2a>
810024c2:	8b 45 08             	mov    0x8(%ebp),%eax
810024c5:	0f b6 00             	movzbl (%eax),%eax
810024c8:	3c 2b                	cmp    $0x2b,%al
810024ca:	75 07                	jne    810024d3 <is_option+0x2a>
810024cc:	b8 01 00 00 00       	mov    $0x1,%eax
810024d1:	eb 05                	jmp    810024d8 <is_option+0x2f>
810024d3:	b8 00 00 00 00       	mov    $0x0,%eax
810024d8:	5d                   	pop    %ebp
810024d9:	c3                   	ret    

810024da <read_globals>:
810024da:	55                   	push   %ebp
810024db:	89 e5                	mov    %esp,%ebp
810024dd:	8b 15 f4 8e 00 81    	mov    0x81008ef4,%edx
810024e3:	8b 45 08             	mov    0x8(%ebp),%eax
810024e6:	89 10                	mov    %edx,(%eax)
810024e8:	8b 15 f8 8e 00 81    	mov    0x81008ef8,%edx
810024ee:	8b 45 08             	mov    0x8(%ebp),%eax
810024f1:	89 50 04             	mov    %edx,0x4(%eax)
810024f4:	8b 15 e4 7e 00 81    	mov    0x81007ee4,%edx
810024fa:	8b 45 08             	mov    0x8(%ebp),%eax
810024fd:	89 50 08             	mov    %edx,0x8(%eax)
81002500:	8b 15 e8 7e 00 81    	mov    0x81007ee8,%edx
81002506:	8b 45 08             	mov    0x8(%ebp),%eax
81002509:	89 50 0c             	mov    %edx,0xc(%eax)
8100250c:	8b 15 fc 8e 00 81    	mov    0x81008efc,%edx
81002512:	8b 45 08             	mov    0x8(%ebp),%eax
81002515:	89 50 10             	mov    %edx,0x10(%eax)
81002518:	8b 15 00 8f 00 81    	mov    0x81008f00,%edx
8100251e:	8b 45 08             	mov    0x8(%ebp),%eax
81002521:	89 50 14             	mov    %edx,0x14(%eax)
81002524:	8b 15 04 8f 00 81    	mov    0x81008f04,%edx
8100252a:	8b 45 08             	mov    0x8(%ebp),%eax
8100252d:	89 50 18             	mov    %edx,0x18(%eax)
81002530:	90                   	nop
81002531:	5d                   	pop    %ebp
81002532:	c3                   	ret    

81002533 <write_globals>:
81002533:	55                   	push   %ebp
81002534:	89 e5                	mov    %esp,%ebp
81002536:	8b 45 08             	mov    0x8(%ebp),%eax
81002539:	8b 00                	mov    (%eax),%eax
8100253b:	a3 f4 8e 00 81       	mov    %eax,0x81008ef4
81002540:	8b 45 08             	mov    0x8(%ebp),%eax
81002543:	8b 40 04             	mov    0x4(%eax),%eax
81002546:	a3 f8 8e 00 81       	mov    %eax,0x81008ef8
8100254b:	8b 45 08             	mov    0x8(%ebp),%eax
8100254e:	8b 40 08             	mov    0x8(%eax),%eax
81002551:	a3 e4 7e 00 81       	mov    %eax,0x81007ee4
81002556:	8b 45 08             	mov    0x8(%ebp),%eax
81002559:	8b 40 0c             	mov    0xc(%eax),%eax
8100255c:	a3 e8 7e 00 81       	mov    %eax,0x81007ee8
81002561:	8b 45 08             	mov    0x8(%ebp),%eax
81002564:	8b 40 10             	mov    0x10(%eax),%eax
81002567:	a3 fc 8e 00 81       	mov    %eax,0x81008efc
8100256c:	8b 45 08             	mov    0x8(%ebp),%eax
8100256f:	8b 40 14             	mov    0x14(%eax),%eax
81002572:	a3 00 8f 00 81       	mov    %eax,0x81008f00
81002577:	8b 45 08             	mov    0x8(%ebp),%eax
8100257a:	8b 40 18             	mov    0x18(%eax),%eax
8100257d:	a3 04 8f 00 81       	mov    %eax,0x81008f04
81002582:	90                   	nop
81002583:	5d                   	pop    %ebp
81002584:	c3                   	ret    

81002585 <getopt_internal>:
81002585:	55                   	push   %ebp
81002586:	89 e5                	mov    %esp,%ebp
81002588:	53                   	push   %ebx
81002589:	83 ec 34             	sub    $0x34,%esp
8100258c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002593:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100259a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810025a1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810025a8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810025af:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810025b6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
810025bd:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810025c4:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
810025cb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810025cf:	74 35                	je     81002606 <getopt_internal+0x81>
810025d1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810025d5:	74 2f                	je     81002606 <getopt_internal+0x81>
810025d7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810025db:	75 06                	jne    810025e3 <getopt_internal+0x5e>
810025dd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810025e1:	74 23                	je     81002606 <getopt_internal+0x81>
810025e3:	8b 45 20             	mov    0x20(%ebp),%eax
810025e6:	8b 40 04             	mov    0x4(%eax),%eax
810025e9:	39 45 08             	cmp    %eax,0x8(%ebp)
810025ec:	7e 18                	jle    81002606 <getopt_internal+0x81>
810025ee:	8b 45 20             	mov    0x20(%ebp),%eax
810025f1:	8b 40 04             	mov    0x4(%eax),%eax
810025f4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810025fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810025fe:	01 d0                	add    %edx,%eax
81002600:	8b 00                	mov    (%eax),%eax
81002602:	85 c0                	test   %eax,%eax
81002604:	75 0a                	jne    81002610 <getopt_internal+0x8b>
81002606:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100260b:	e9 85 0a 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002610:	8b 45 20             	mov    0x20(%ebp),%eax
81002613:	8b 40 04             	mov    0x4(%eax),%eax
81002616:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100261d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002620:	01 d0                	add    %edx,%eax
81002622:	8b 00                	mov    (%eax),%eax
81002624:	83 ec 08             	sub    $0x8,%esp
81002627:	68 f0 7a 00 81       	push   $0x81007af0
8100262c:	50                   	push   %eax
8100262d:	e8 0a 2f 00 00       	call   8100553c <strcmp>
81002632:	83 c4 10             	add    $0x10,%esp
81002635:	85 c0                	test   %eax,%eax
81002637:	75 19                	jne    81002652 <getopt_internal+0xcd>
81002639:	8b 45 20             	mov    0x20(%ebp),%eax
8100263c:	8b 40 04             	mov    0x4(%eax),%eax
8100263f:	8d 50 01             	lea    0x1(%eax),%edx
81002642:	8b 45 20             	mov    0x20(%ebp),%eax
81002645:	89 50 04             	mov    %edx,0x4(%eax)
81002648:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100264d:	e9 43 0a 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002652:	8b 45 20             	mov    0x20(%ebp),%eax
81002655:	8b 40 04             	mov    0x4(%eax),%eax
81002658:	85 c0                	test   %eax,%eax
8100265a:	75 28                	jne    81002684 <getopt_internal+0xff>
8100265c:	8b 45 20             	mov    0x20(%ebp),%eax
8100265f:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002666:	8b 45 20             	mov    0x20(%ebp),%eax
81002669:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002670:	8b 45 20             	mov    0x20(%ebp),%eax
81002673:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100267a:	8b 45 20             	mov    0x20(%ebp),%eax
8100267d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002684:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002688:	74 33                	je     810026bd <getopt_internal+0x138>
8100268a:	8b 45 10             	mov    0x10(%ebp),%eax
8100268d:	0f b6 00             	movzbl (%eax),%eax
81002690:	3c 2d                	cmp    $0x2d,%al
81002692:	74 0a                	je     8100269e <getopt_internal+0x119>
81002694:	8b 45 10             	mov    0x10(%ebp),%eax
81002697:	0f b6 00             	movzbl (%eax),%eax
8100269a:	3c 2b                	cmp    $0x2b,%al
8100269c:	75 1f                	jne    810026bd <getopt_internal+0x138>
8100269e:	8b 45 10             	mov    0x10(%ebp),%eax
810026a1:	0f b6 00             	movzbl (%eax),%eax
810026a4:	3c 2d                	cmp    $0x2d,%al
810026a6:	75 07                	jne    810026af <getopt_internal+0x12a>
810026a8:	b8 01 00 00 00       	mov    $0x1,%eax
810026ad:	eb 05                	jmp    810026b4 <getopt_internal+0x12f>
810026af:	b8 02 00 00 00       	mov    $0x2,%eax
810026b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026b7:	83 45 10 01          	addl   $0x1,0x10(%ebp)
810026bb:	eb 23                	jmp    810026e0 <getopt_internal+0x15b>
810026bd:	83 ec 0c             	sub    $0xc,%esp
810026c0:	68 f3 7a 00 81       	push   $0x81007af3
810026c5:	e8 94 40 00 00       	call   8100675e <getenv>
810026ca:	83 c4 10             	add    $0x10,%esp
810026cd:	85 c0                	test   %eax,%eax
810026cf:	74 07                	je     810026d8 <getopt_internal+0x153>
810026d1:	b8 02 00 00 00       	mov    $0x2,%eax
810026d6:	eb 05                	jmp    810026dd <getopt_internal+0x158>
810026d8:	b8 00 00 00 00       	mov    $0x0,%eax
810026dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026e0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810026e4:	74 15                	je     810026fb <getopt_internal+0x176>
810026e6:	8b 45 10             	mov    0x10(%ebp),%eax
810026e9:	0f b6 00             	movzbl (%eax),%eax
810026ec:	3c 3a                	cmp    $0x3a,%al
810026ee:	75 0b                	jne    810026fb <getopt_internal+0x176>
810026f0:	83 45 10 01          	addl   $0x1,0x10(%ebp)
810026f4:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
810026fb:	8b 45 20             	mov    0x20(%ebp),%eax
810026fe:	8b 40 10             	mov    0x10(%eax),%eax
81002701:	83 f8 01             	cmp    $0x1,%eax
81002704:	0f 85 a2 01 00 00    	jne    810028ac <getopt_internal+0x327>
8100270a:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100270e:	0f 84 02 01 00 00    	je     81002816 <getopt_internal+0x291>
81002714:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81002718:	0f 84 56 01 00 00    	je     81002874 <getopt_internal+0x2ef>
8100271e:	8b 45 20             	mov    0x20(%ebp),%eax
81002721:	8b 50 04             	mov    0x4(%eax),%edx
81002724:	8b 45 20             	mov    0x20(%ebp),%eax
81002727:	89 50 14             	mov    %edx,0x14(%eax)
8100272a:	8b 45 20             	mov    0x20(%ebp),%eax
8100272d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81002734:	eb 1e                	jmp    81002754 <getopt_internal+0x1cf>
81002736:	8b 45 20             	mov    0x20(%ebp),%eax
81002739:	8b 40 04             	mov    0x4(%eax),%eax
8100273c:	8d 50 01             	lea    0x1(%eax),%edx
8100273f:	8b 45 20             	mov    0x20(%ebp),%eax
81002742:	89 50 04             	mov    %edx,0x4(%eax)
81002745:	8b 45 20             	mov    0x20(%ebp),%eax
81002748:	8b 40 18             	mov    0x18(%eax),%eax
8100274b:	8d 50 01             	lea    0x1(%eax),%edx
8100274e:	8b 45 20             	mov    0x20(%ebp),%eax
81002751:	89 50 18             	mov    %edx,0x18(%eax)
81002754:	8b 45 20             	mov    0x20(%ebp),%eax
81002757:	8b 40 04             	mov    0x4(%eax),%eax
8100275a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002761:	8b 45 0c             	mov    0xc(%ebp),%eax
81002764:	01 d0                	add    %edx,%eax
81002766:	8b 00                	mov    (%eax),%eax
81002768:	83 ec 08             	sub    $0x8,%esp
8100276b:	ff 75 1c             	push   0x1c(%ebp)
8100276e:	50                   	push   %eax
8100276f:	e8 35 fd ff ff       	call   810024a9 <is_option>
81002774:	83 c4 10             	add    $0x10,%esp
81002777:	85 c0                	test   %eax,%eax
81002779:	74 bb                	je     81002736 <getopt_internal+0x1b1>
8100277b:	8b 45 20             	mov    0x20(%ebp),%eax
8100277e:	8b 40 04             	mov    0x4(%eax),%eax
81002781:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002788:	8b 45 0c             	mov    0xc(%ebp),%eax
8100278b:	01 d0                	add    %edx,%eax
8100278d:	8b 00                	mov    (%eax),%eax
8100278f:	85 c0                	test   %eax,%eax
81002791:	75 16                	jne    810027a9 <getopt_internal+0x224>
81002793:	8b 45 20             	mov    0x20(%ebp),%eax
81002796:	8b 50 14             	mov    0x14(%eax),%edx
81002799:	8b 45 20             	mov    0x20(%ebp),%eax
8100279c:	89 50 04             	mov    %edx,0x4(%eax)
8100279f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810027a4:	e9 ec 08 00 00       	jmp    81003095 <getopt_internal+0xb10>
810027a9:	8b 45 20             	mov    0x20(%ebp),%eax
810027ac:	8b 40 04             	mov    0x4(%eax),%eax
810027af:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810027b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810027b9:	01 d0                	add    %edx,%eax
810027bb:	8b 00                	mov    (%eax),%eax
810027bd:	83 ec 08             	sub    $0x8,%esp
810027c0:	68 f0 7a 00 81       	push   $0x81007af0
810027c5:	50                   	push   %eax
810027c6:	e8 71 2d 00 00       	call   8100553c <strcmp>
810027cb:	83 c4 10             	add    $0x10,%esp
810027ce:	85 c0                	test   %eax,%eax
810027d0:	0f 85 cf 00 00 00    	jne    810028a5 <getopt_internal+0x320>
810027d6:	8b 45 20             	mov    0x20(%ebp),%eax
810027d9:	8b 40 18             	mov    0x18(%eax),%eax
810027dc:	8b 55 20             	mov    0x20(%ebp),%edx
810027df:	8b 52 14             	mov    0x14(%edx),%edx
810027e2:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810027e9:	8b 55 0c             	mov    0xc(%ebp),%edx
810027ec:	01 ca                	add    %ecx,%edx
810027ee:	83 ec 04             	sub    $0x4,%esp
810027f1:	6a 01                	push   $0x1
810027f3:	50                   	push   %eax
810027f4:	52                   	push   %edx
810027f5:	e8 79 fc ff ff       	call   81002473 <permute>
810027fa:	83 c4 10             	add    $0x10,%esp
810027fd:	8b 45 20             	mov    0x20(%ebp),%eax
81002800:	8b 40 14             	mov    0x14(%eax),%eax
81002803:	8d 50 01             	lea    0x1(%eax),%edx
81002806:	8b 45 20             	mov    0x20(%ebp),%eax
81002809:	89 50 04             	mov    %edx,0x4(%eax)
8100280c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002811:	e9 7f 08 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002816:	8b 45 20             	mov    0x20(%ebp),%eax
81002819:	8b 40 04             	mov    0x4(%eax),%eax
8100281c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002823:	8b 45 0c             	mov    0xc(%ebp),%eax
81002826:	01 d0                	add    %edx,%eax
81002828:	8b 00                	mov    (%eax),%eax
8100282a:	83 ec 08             	sub    $0x8,%esp
8100282d:	ff 75 1c             	push   0x1c(%ebp)
81002830:	50                   	push   %eax
81002831:	e8 73 fc ff ff       	call   810024a9 <is_option>
81002836:	83 c4 10             	add    $0x10,%esp
81002839:	85 c0                	test   %eax,%eax
8100283b:	75 6b                	jne    810028a8 <getopt_internal+0x323>
8100283d:	8b 45 20             	mov    0x20(%ebp),%eax
81002840:	8b 40 04             	mov    0x4(%eax),%eax
81002843:	8d 48 01             	lea    0x1(%eax),%ecx
81002846:	8b 55 20             	mov    0x20(%ebp),%edx
81002849:	89 4a 04             	mov    %ecx,0x4(%edx)
8100284c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002853:	8b 45 0c             	mov    0xc(%ebp),%eax
81002856:	01 d0                	add    %edx,%eax
81002858:	8b 10                	mov    (%eax),%edx
8100285a:	8b 45 20             	mov    0x20(%ebp),%eax
8100285d:	89 10                	mov    %edx,(%eax)
8100285f:	8b 45 20             	mov    0x20(%ebp),%eax
81002862:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81002869:	8b 45 20             	mov    0x20(%ebp),%eax
8100286c:	8b 40 0c             	mov    0xc(%eax),%eax
8100286f:	e9 21 08 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002874:	8b 45 20             	mov    0x20(%ebp),%eax
81002877:	8b 40 04             	mov    0x4(%eax),%eax
8100287a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002881:	8b 45 0c             	mov    0xc(%ebp),%eax
81002884:	01 d0                	add    %edx,%eax
81002886:	8b 00                	mov    (%eax),%eax
81002888:	83 ec 08             	sub    $0x8,%esp
8100288b:	ff 75 1c             	push   0x1c(%ebp)
8100288e:	50                   	push   %eax
8100288f:	e8 15 fc ff ff       	call   810024a9 <is_option>
81002894:	83 c4 10             	add    $0x10,%esp
81002897:	85 c0                	test   %eax,%eax
81002899:	75 10                	jne    810028ab <getopt_internal+0x326>
8100289b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028a0:	e9 f0 07 00 00       	jmp    81003095 <getopt_internal+0xb10>
810028a5:	90                   	nop
810028a6:	eb 04                	jmp    810028ac <getopt_internal+0x327>
810028a8:	90                   	nop
810028a9:	eb 01                	jmp    810028ac <getopt_internal+0x327>
810028ab:	90                   	nop
810028ac:	8b 45 20             	mov    0x20(%ebp),%eax
810028af:	8b 40 04             	mov    0x4(%eax),%eax
810028b2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810028bc:	01 d0                	add    %edx,%eax
810028be:	8b 00                	mov    (%eax),%eax
810028c0:	85 c0                	test   %eax,%eax
810028c2:	75 0a                	jne    810028ce <getopt_internal+0x349>
810028c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028c9:	e9 c7 07 00 00       	jmp    81003095 <getopt_internal+0xb10>
810028ce:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810028d2:	0f 84 15 03 00 00    	je     81002bed <getopt_internal+0x668>
810028d8:	8b 45 20             	mov    0x20(%ebp),%eax
810028db:	8b 40 04             	mov    0x4(%eax),%eax
810028de:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810028e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810028e8:	01 d0                	add    %edx,%eax
810028ea:	8b 00                	mov    (%eax),%eax
810028ec:	83 ec 04             	sub    $0x4,%esp
810028ef:	6a 02                	push   $0x2
810028f1:	68 f0 7a 00 81       	push   $0x81007af0
810028f6:	50                   	push   %eax
810028f7:	e8 f9 15 00 00       	call   81003ef5 <memcmp>
810028fc:	83 c4 10             	add    $0x10,%esp
810028ff:	85 c0                	test   %eax,%eax
81002901:	74 29                	je     8100292c <getopt_internal+0x3a7>
81002903:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81002907:	0f 84 e0 02 00 00    	je     81002bed <getopt_internal+0x668>
8100290d:	8b 45 20             	mov    0x20(%ebp),%eax
81002910:	8b 40 04             	mov    0x4(%eax),%eax
81002913:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100291a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100291d:	01 d0                	add    %edx,%eax
8100291f:	8b 00                	mov    (%eax),%eax
81002921:	0f b6 00             	movzbl (%eax),%eax
81002924:	3c 2b                	cmp    $0x2b,%al
81002926:	0f 85 c1 02 00 00    	jne    81002bed <getopt_internal+0x668>
8100292c:	8b 45 20             	mov    0x20(%ebp),%eax
8100292f:	8b 40 10             	mov    0x10(%eax),%eax
81002932:	83 f8 01             	cmp    $0x1,%eax
81002935:	0f 85 b2 02 00 00    	jne    81002bed <getopt_internal+0x668>
8100293b:	8b 45 20             	mov    0x20(%ebp),%eax
8100293e:	8b 40 04             	mov    0x4(%eax),%eax
81002941:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002948:	8b 45 0c             	mov    0xc(%ebp),%eax
8100294b:	01 d0                	add    %edx,%eax
8100294d:	8b 00                	mov    (%eax),%eax
8100294f:	83 ec 04             	sub    $0x4,%esp
81002952:	6a 02                	push   $0x2
81002954:	68 f0 7a 00 81       	push   $0x81007af0
81002959:	50                   	push   %eax
8100295a:	e8 96 15 00 00       	call   81003ef5 <memcmp>
8100295f:	83 c4 10             	add    $0x10,%esp
81002962:	85 c0                	test   %eax,%eax
81002964:	75 0a                	jne    81002970 <getopt_internal+0x3eb>
81002966:	8b 45 20             	mov    0x20(%ebp),%eax
81002969:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81002970:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81002977:	8b 45 20             	mov    0x20(%ebp),%eax
8100297a:	8b 40 04             	mov    0x4(%eax),%eax
8100297d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002984:	8b 45 0c             	mov    0xc(%ebp),%eax
81002987:	01 d0                	add    %edx,%eax
81002989:	8b 10                	mov    (%eax),%edx
8100298b:	8b 45 20             	mov    0x20(%ebp),%eax
8100298e:	8b 40 10             	mov    0x10(%eax),%eax
81002991:	01 d0                	add    %edx,%eax
81002993:	83 ec 08             	sub    $0x8,%esp
81002996:	6a 3d                	push   $0x3d
81002998:	50                   	push   %eax
81002999:	e8 a2 2a 00 00       	call   81005440 <strchr>
8100299e:	83 c4 10             	add    $0x10,%esp
810029a1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810029a4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810029a8:	75 4a                	jne    810029f4 <getopt_internal+0x46f>
810029aa:	8b 45 20             	mov    0x20(%ebp),%eax
810029ad:	8b 40 04             	mov    0x4(%eax),%eax
810029b0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810029ba:	01 d0                	add    %edx,%eax
810029bc:	8b 00                	mov    (%eax),%eax
810029be:	83 ec 0c             	sub    $0xc,%esp
810029c1:	50                   	push   %eax
810029c2:	e8 29 2c 00 00       	call   810055f0 <strlen>
810029c7:	83 c4 10             	add    $0x10,%esp
810029ca:	89 45 ec             	mov    %eax,-0x14(%ebp)
810029cd:	8b 45 20             	mov    0x20(%ebp),%eax
810029d0:	8b 40 04             	mov    0x4(%eax),%eax
810029d3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810029da:	8b 45 0c             	mov    0xc(%ebp),%eax
810029dd:	01 d0                	add    %edx,%eax
810029df:	8b 10                	mov    (%eax),%edx
810029e1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810029e4:	01 d0                	add    %edx,%eax
810029e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810029e9:	8b 45 20             	mov    0x20(%ebp),%eax
810029ec:	8b 40 10             	mov    0x10(%eax),%eax
810029ef:	29 45 ec             	sub    %eax,-0x14(%ebp)
810029f2:	eb 28                	jmp    81002a1c <getopt_internal+0x497>
810029f4:	8b 45 20             	mov    0x20(%ebp),%eax
810029f7:	8b 40 04             	mov    0x4(%eax),%eax
810029fa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002a01:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a04:	01 d0                	add    %edx,%eax
81002a06:	8b 08                	mov    (%eax),%ecx
81002a08:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002a0b:	29 c8                	sub    %ecx,%eax
81002a0d:	89 c2                	mov    %eax,%edx
81002a0f:	8b 45 20             	mov    0x20(%ebp),%eax
81002a12:	8b 48 10             	mov    0x10(%eax),%ecx
81002a15:	89 d0                	mov    %edx,%eax
81002a17:	29 c8                	sub    %ecx,%eax
81002a19:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002a1c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002a23:	e9 95 01 00 00       	jmp    81002bbd <getopt_internal+0x638>
81002a28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a2b:	c1 e0 04             	shl    $0x4,%eax
81002a2e:	89 c2                	mov    %eax,%edx
81002a30:	8b 45 14             	mov    0x14(%ebp),%eax
81002a33:	01 d0                	add    %edx,%eax
81002a35:	8b 00                	mov    (%eax),%eax
81002a37:	8b 55 20             	mov    0x20(%ebp),%edx
81002a3a:	8b 52 04             	mov    0x4(%edx),%edx
81002a3d:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002a44:	8b 55 0c             	mov    0xc(%ebp),%edx
81002a47:	01 ca                	add    %ecx,%edx
81002a49:	8b 0a                	mov    (%edx),%ecx
81002a4b:	8b 55 20             	mov    0x20(%ebp),%edx
81002a4e:	8b 52 10             	mov    0x10(%edx),%edx
81002a51:	01 ca                	add    %ecx,%edx
81002a53:	83 ec 04             	sub    $0x4,%esp
81002a56:	ff 75 ec             	push   -0x14(%ebp)
81002a59:	50                   	push   %eax
81002a5a:	52                   	push   %edx
81002a5b:	e8 95 14 00 00       	call   81003ef5 <memcmp>
81002a60:	83 c4 10             	add    $0x10,%esp
81002a63:	85 c0                	test   %eax,%eax
81002a65:	0f 85 4e 01 00 00    	jne    81002bb9 <getopt_internal+0x634>
81002a6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a6e:	c1 e0 04             	shl    $0x4,%eax
81002a71:	89 c2                	mov    %eax,%edx
81002a73:	8b 45 14             	mov    0x14(%ebp),%eax
81002a76:	01 d0                	add    %edx,%eax
81002a78:	8b 00                	mov    (%eax),%eax
81002a7a:	83 ec 0c             	sub    $0xc,%esp
81002a7d:	50                   	push   %eax
81002a7e:	e8 6d 2b 00 00       	call   810055f0 <strlen>
81002a83:	83 c4 10             	add    $0x10,%esp
81002a86:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002a89:	75 0b                	jne    81002a96 <getopt_internal+0x511>
81002a8b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a8e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002a91:	e9 3e 01 00 00       	jmp    81002bd4 <getopt_internal+0x64f>
81002a96:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002a9a:	79 0b                	jns    81002aa7 <getopt_internal+0x522>
81002a9c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002aa2:	e9 12 01 00 00       	jmp    81002bb9 <getopt_internal+0x634>
81002aa7:	8b 45 20             	mov    0x20(%ebp),%eax
81002aaa:	8b 40 08             	mov    0x8(%eax),%eax
81002aad:	85 c0                	test   %eax,%eax
81002aaf:	0f 84 ef 00 00 00    	je     81002ba4 <getopt_internal+0x61f>
81002ab5:	a1 24 83 00 81       	mov    0x81008324,%eax
81002aba:	8b 50 0c             	mov    0xc(%eax),%edx
81002abd:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ac0:	8b 00                	mov    (%eax),%eax
81002ac2:	83 ec 08             	sub    $0x8,%esp
81002ac5:	52                   	push   %edx
81002ac6:	50                   	push   %eax
81002ac7:	e8 2a 35 00 00       	call   81005ff6 <fputs>
81002acc:	83 c4 10             	add    $0x10,%esp
81002acf:	a1 24 83 00 81       	mov    0x81008324,%eax
81002ad4:	8b 40 0c             	mov    0xc(%eax),%eax
81002ad7:	83 ec 08             	sub    $0x8,%esp
81002ada:	50                   	push   %eax
81002adb:	68 03 7b 00 81       	push   $0x81007b03
81002ae0:	e8 11 35 00 00       	call   81005ff6 <fputs>
81002ae5:	83 c4 10             	add    $0x10,%esp
81002ae8:	a1 24 83 00 81       	mov    0x81008324,%eax
81002aed:	8b 50 0c             	mov    0xc(%eax),%edx
81002af0:	8b 45 20             	mov    0x20(%ebp),%eax
81002af3:	8b 40 04             	mov    0x4(%eax),%eax
81002af6:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002afd:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b00:	01 c8                	add    %ecx,%eax
81002b02:	8b 00                	mov    (%eax),%eax
81002b04:	83 ec 08             	sub    $0x8,%esp
81002b07:	52                   	push   %edx
81002b08:	50                   	push   %eax
81002b09:	e8 e8 34 00 00       	call   81005ff6 <fputs>
81002b0e:	83 c4 10             	add    $0x10,%esp
81002b11:	a1 24 83 00 81       	mov    0x81008324,%eax
81002b16:	8b 40 0c             	mov    0xc(%eax),%eax
81002b19:	83 ec 08             	sub    $0x8,%esp
81002b1c:	50                   	push   %eax
81002b1d:	68 0e 7b 00 81       	push   $0x81007b0e
81002b22:	e8 cf 34 00 00       	call   81005ff6 <fputs>
81002b27:	83 c4 10             	add    $0x10,%esp
81002b2a:	a1 24 83 00 81       	mov    0x81008324,%eax
81002b2f:	8b 50 0c             	mov    0xc(%eax),%edx
81002b32:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002b35:	c1 e0 04             	shl    $0x4,%eax
81002b38:	89 c1                	mov    %eax,%ecx
81002b3a:	8b 45 14             	mov    0x14(%ebp),%eax
81002b3d:	01 c8                	add    %ecx,%eax
81002b3f:	8b 00                	mov    (%eax),%eax
81002b41:	83 ec 08             	sub    $0x8,%esp
81002b44:	52                   	push   %edx
81002b45:	50                   	push   %eax
81002b46:	e8 ab 34 00 00       	call   81005ff6 <fputs>
81002b4b:	83 c4 10             	add    $0x10,%esp
81002b4e:	a1 24 83 00 81       	mov    0x81008324,%eax
81002b53:	8b 40 0c             	mov    0xc(%eax),%eax
81002b56:	83 ec 08             	sub    $0x8,%esp
81002b59:	50                   	push   %eax
81002b5a:	68 2b 7b 00 81       	push   $0x81007b2b
81002b5f:	e8 92 34 00 00       	call   81005ff6 <fputs>
81002b64:	83 c4 10             	add    $0x10,%esp
81002b67:	a1 24 83 00 81       	mov    0x81008324,%eax
81002b6c:	8b 50 0c             	mov    0xc(%eax),%edx
81002b6f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b72:	c1 e0 04             	shl    $0x4,%eax
81002b75:	89 c1                	mov    %eax,%ecx
81002b77:	8b 45 14             	mov    0x14(%ebp),%eax
81002b7a:	01 c8                	add    %ecx,%eax
81002b7c:	8b 00                	mov    (%eax),%eax
81002b7e:	83 ec 08             	sub    $0x8,%esp
81002b81:	52                   	push   %edx
81002b82:	50                   	push   %eax
81002b83:	e8 6e 34 00 00       	call   81005ff6 <fputs>
81002b88:	83 c4 10             	add    $0x10,%esp
81002b8b:	a1 24 83 00 81       	mov    0x81008324,%eax
81002b90:	8b 40 0c             	mov    0xc(%eax),%eax
81002b93:	83 ec 08             	sub    $0x8,%esp
81002b96:	50                   	push   %eax
81002b97:	68 34 7b 00 81       	push   $0x81007b34
81002b9c:	e8 55 34 00 00       	call   81005ff6 <fputs>
81002ba1:	83 c4 10             	add    $0x10,%esp
81002ba4:	8b 45 20             	mov    0x20(%ebp),%eax
81002ba7:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002bae:	8b 45 20             	mov    0x20(%ebp),%eax
81002bb1:	8b 40 0c             	mov    0xc(%eax),%eax
81002bb4:	e9 dc 04 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002bb9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002bbd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002bc0:	c1 e0 04             	shl    $0x4,%eax
81002bc3:	89 c2                	mov    %eax,%edx
81002bc5:	8b 45 14             	mov    0x14(%ebp),%eax
81002bc8:	01 d0                	add    %edx,%eax
81002bca:	8b 00                	mov    (%eax),%eax
81002bcc:	85 c0                	test   %eax,%eax
81002bce:	0f 85 54 fe ff ff    	jne    81002a28 <getopt_internal+0x4a3>
81002bd4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002bd8:	78 13                	js     81002bed <getopt_internal+0x668>
81002bda:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002bdd:	c1 e0 04             	shl    $0x4,%eax
81002be0:	89 c2                	mov    %eax,%edx
81002be2:	8b 45 14             	mov    0x14(%ebp),%eax
81002be5:	01 d0                	add    %edx,%eax
81002be7:	8b 40 04             	mov    0x4(%eax),%eax
81002bea:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002bed:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002bf1:	0f 89 9a 01 00 00    	jns    81002d91 <getopt_internal+0x80c>
81002bf7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002bfb:	0f 84 90 01 00 00    	je     81002d91 <getopt_internal+0x80c>
81002c01:	8b 45 20             	mov    0x20(%ebp),%eax
81002c04:	8b 40 04             	mov    0x4(%eax),%eax
81002c07:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002c0e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c11:	01 d0                	add    %edx,%eax
81002c13:	8b 10                	mov    (%eax),%edx
81002c15:	8b 45 20             	mov    0x20(%ebp),%eax
81002c18:	8b 40 10             	mov    0x10(%eax),%eax
81002c1b:	01 d0                	add    %edx,%eax
81002c1d:	0f b6 00             	movzbl (%eax),%eax
81002c20:	0f be c0             	movsbl %al,%eax
81002c23:	83 ec 08             	sub    $0x8,%esp
81002c26:	50                   	push   %eax
81002c27:	ff 75 10             	push   0x10(%ebp)
81002c2a:	e8 11 28 00 00       	call   81005440 <strchr>
81002c2f:	83 c4 10             	add    $0x10,%esp
81002c32:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002c35:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002c39:	0f 85 f1 00 00 00    	jne    81002d30 <getopt_internal+0x7ab>
81002c3f:	8b 45 20             	mov    0x20(%ebp),%eax
81002c42:	8b 40 08             	mov    0x8(%eax),%eax
81002c45:	85 c0                	test   %eax,%eax
81002c47:	0f 84 83 00 00 00    	je     81002cd0 <getopt_internal+0x74b>
81002c4d:	a1 24 83 00 81       	mov    0x81008324,%eax
81002c52:	8b 50 0c             	mov    0xc(%eax),%edx
81002c55:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c58:	8b 00                	mov    (%eax),%eax
81002c5a:	83 ec 08             	sub    $0x8,%esp
81002c5d:	52                   	push   %edx
81002c5e:	50                   	push   %eax
81002c5f:	e8 92 33 00 00       	call   81005ff6 <fputs>
81002c64:	83 c4 10             	add    $0x10,%esp
81002c67:	a1 24 83 00 81       	mov    0x81008324,%eax
81002c6c:	8b 40 0c             	mov    0xc(%eax),%eax
81002c6f:	83 ec 08             	sub    $0x8,%esp
81002c72:	50                   	push   %eax
81002c73:	68 38 7b 00 81       	push   $0x81007b38
81002c78:	e8 79 33 00 00       	call   81005ff6 <fputs>
81002c7d:	83 c4 10             	add    $0x10,%esp
81002c80:	a1 24 83 00 81       	mov    0x81008324,%eax
81002c85:	8b 50 0c             	mov    0xc(%eax),%edx
81002c88:	8b 45 20             	mov    0x20(%ebp),%eax
81002c8b:	8b 40 04             	mov    0x4(%eax),%eax
81002c8e:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002c95:	8b 45 0c             	mov    0xc(%ebp),%eax
81002c98:	01 c8                	add    %ecx,%eax
81002c9a:	8b 08                	mov    (%eax),%ecx
81002c9c:	8b 45 20             	mov    0x20(%ebp),%eax
81002c9f:	8b 40 10             	mov    0x10(%eax),%eax
81002ca2:	01 c8                	add    %ecx,%eax
81002ca4:	0f b6 00             	movzbl (%eax),%eax
81002ca7:	0f be c0             	movsbl %al,%eax
81002caa:	83 ec 08             	sub    $0x8,%esp
81002cad:	52                   	push   %edx
81002cae:	50                   	push   %eax
81002caf:	e8 4e 32 00 00       	call   81005f02 <fputc>
81002cb4:	83 c4 10             	add    $0x10,%esp
81002cb7:	a1 24 83 00 81       	mov    0x81008324,%eax
81002cbc:	8b 40 0c             	mov    0xc(%eax),%eax
81002cbf:	83 ec 08             	sub    $0x8,%esp
81002cc2:	50                   	push   %eax
81002cc3:	68 4f 7b 00 81       	push   $0x81007b4f
81002cc8:	e8 29 33 00 00       	call   81005ff6 <fputs>
81002ccd:	83 c4 10             	add    $0x10,%esp
81002cd0:	8b 45 20             	mov    0x20(%ebp),%eax
81002cd3:	8b 40 10             	mov    0x10(%eax),%eax
81002cd6:	8d 50 01             	lea    0x1(%eax),%edx
81002cd9:	8b 45 20             	mov    0x20(%ebp),%eax
81002cdc:	89 50 10             	mov    %edx,0x10(%eax)
81002cdf:	8b 45 20             	mov    0x20(%ebp),%eax
81002ce2:	8b 40 04             	mov    0x4(%eax),%eax
81002ce5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002cec:	8b 45 0c             	mov    0xc(%ebp),%eax
81002cef:	01 d0                	add    %edx,%eax
81002cf1:	8b 10                	mov    (%eax),%edx
81002cf3:	8b 45 20             	mov    0x20(%ebp),%eax
81002cf6:	8b 40 10             	mov    0x10(%eax),%eax
81002cf9:	01 d0                	add    %edx,%eax
81002cfb:	0f b6 00             	movzbl (%eax),%eax
81002cfe:	84 c0                	test   %al,%al
81002d00:	75 19                	jne    81002d1b <getopt_internal+0x796>
81002d02:	8b 45 20             	mov    0x20(%ebp),%eax
81002d05:	8b 40 04             	mov    0x4(%eax),%eax
81002d08:	8d 50 01             	lea    0x1(%eax),%edx
81002d0b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d0e:	89 50 04             	mov    %edx,0x4(%eax)
81002d11:	8b 45 20             	mov    0x20(%ebp),%eax
81002d14:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002d1b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d1e:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81002d25:	8b 45 20             	mov    0x20(%ebp),%eax
81002d28:	8b 40 0c             	mov    0xc(%eax),%eax
81002d2b:	e9 65 03 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002d30:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d33:	83 c0 01             	add    $0x1,%eax
81002d36:	0f b6 00             	movzbl (%eax),%eax
81002d39:	3c 3a                	cmp    $0x3a,%al
81002d3b:	75 1b                	jne    81002d58 <getopt_internal+0x7d3>
81002d3d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d40:	83 c0 02             	add    $0x2,%eax
81002d43:	0f b6 00             	movzbl (%eax),%eax
81002d46:	3c 3a                	cmp    $0x3a,%al
81002d48:	75 07                	jne    81002d51 <getopt_internal+0x7cc>
81002d4a:	b8 02 00 00 00       	mov    $0x2,%eax
81002d4f:	eb 0c                	jmp    81002d5d <getopt_internal+0x7d8>
81002d51:	b8 01 00 00 00       	mov    $0x1,%eax
81002d56:	eb 05                	jmp    81002d5d <getopt_internal+0x7d8>
81002d58:	b8 00 00 00 00       	mov    $0x0,%eax
81002d5d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002d60:	8b 45 20             	mov    0x20(%ebp),%eax
81002d63:	8b 40 04             	mov    0x4(%eax),%eax
81002d66:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002d6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d70:	01 d0                	add    %edx,%eax
81002d72:	8b 10                	mov    (%eax),%edx
81002d74:	8b 45 20             	mov    0x20(%ebp),%eax
81002d77:	8b 40 10             	mov    0x10(%eax),%eax
81002d7a:	83 c0 01             	add    $0x1,%eax
81002d7d:	01 d0                	add    %edx,%eax
81002d7f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002d85:	0f b6 00             	movzbl (%eax),%eax
81002d88:	0f be d0             	movsbl %al,%edx
81002d8b:	8b 45 20             	mov    0x20(%ebp),%eax
81002d8e:	89 50 0c             	mov    %edx,0xc(%eax)
81002d91:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81002d98:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
81002d9c:	74 40                	je     81002dde <getopt_internal+0x859>
81002d9e:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81002da2:	0f 85 b0 01 00 00    	jne    81002f58 <getopt_internal+0x9d3>
81002da8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002dab:	0f b6 00             	movzbl (%eax),%eax
81002dae:	3c 3d                	cmp    $0x3d,%al
81002db0:	75 04                	jne    81002db6 <getopt_internal+0x831>
81002db2:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002db6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002db9:	0f b6 00             	movzbl (%eax),%eax
81002dbc:	84 c0                	test   %al,%al
81002dbe:	74 05                	je     81002dc5 <getopt_internal+0x840>
81002dc0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002dc3:	eb 05                	jmp    81002dca <getopt_internal+0x845>
81002dc5:	b8 00 00 00 00       	mov    $0x0,%eax
81002dca:	8b 55 20             	mov    0x20(%ebp),%edx
81002dcd:	89 02                	mov    %eax,(%edx)
81002dcf:	8b 45 20             	mov    0x20(%ebp),%eax
81002dd2:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002dd9:	e9 d2 01 00 00       	jmp    81002fb0 <getopt_internal+0xa2b>
81002dde:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002de1:	0f b6 00             	movzbl (%eax),%eax
81002de4:	3c 3d                	cmp    $0x3d,%al
81002de6:	75 04                	jne    81002dec <getopt_internal+0x867>
81002de8:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81002dec:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002def:	0f b6 00             	movzbl (%eax),%eax
81002df2:	84 c0                	test   %al,%al
81002df4:	74 17                	je     81002e0d <getopt_internal+0x888>
81002df6:	8b 45 20             	mov    0x20(%ebp),%eax
81002df9:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002dfc:	89 10                	mov    %edx,(%eax)
81002dfe:	8b 45 20             	mov    0x20(%ebp),%eax
81002e01:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002e08:	e9 a3 01 00 00       	jmp    81002fb0 <getopt_internal+0xa2b>
81002e0d:	8b 45 20             	mov    0x20(%ebp),%eax
81002e10:	8b 40 04             	mov    0x4(%eax),%eax
81002e13:	83 c0 01             	add    $0x1,%eax
81002e16:	39 45 08             	cmp    %eax,0x8(%ebp)
81002e19:	0f 8f 0a 01 00 00    	jg     81002f29 <getopt_internal+0x9a4>
81002e1f:	8b 45 20             	mov    0x20(%ebp),%eax
81002e22:	8b 40 08             	mov    0x8(%eax),%eax
81002e25:	85 c0                	test   %eax,%eax
81002e27:	0f 84 d3 00 00 00    	je     81002f00 <getopt_internal+0x97b>
81002e2d:	a1 24 83 00 81       	mov    0x81008324,%eax
81002e32:	8b 50 0c             	mov    0xc(%eax),%edx
81002e35:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e38:	8b 00                	mov    (%eax),%eax
81002e3a:	83 ec 08             	sub    $0x8,%esp
81002e3d:	52                   	push   %edx
81002e3e:	50                   	push   %eax
81002e3f:	e8 b2 31 00 00       	call   81005ff6 <fputs>
81002e44:	83 c4 10             	add    $0x10,%esp
81002e47:	a1 24 83 00 81       	mov    0x81008324,%eax
81002e4c:	8b 40 0c             	mov    0xc(%eax),%eax
81002e4f:	83 ec 08             	sub    $0x8,%esp
81002e52:	50                   	push   %eax
81002e53:	68 54 7b 00 81       	push   $0x81007b54
81002e58:	e8 99 31 00 00       	call   81005ff6 <fputs>
81002e5d:	83 c4 10             	add    $0x10,%esp
81002e60:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002e64:	78 54                	js     81002eba <getopt_internal+0x935>
81002e66:	a1 24 83 00 81       	mov    0x81008324,%eax
81002e6b:	8b 40 0c             	mov    0xc(%eax),%eax
81002e6e:	83 ec 08             	sub    $0x8,%esp
81002e71:	50                   	push   %eax
81002e72:	6a 2d                	push   $0x2d
81002e74:	e8 89 30 00 00       	call   81005f02 <fputc>
81002e79:	83 c4 10             	add    $0x10,%esp
81002e7c:	a1 24 83 00 81       	mov    0x81008324,%eax
81002e81:	8b 50 0c             	mov    0xc(%eax),%edx
81002e84:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e87:	c1 e0 04             	shl    $0x4,%eax
81002e8a:	89 c1                	mov    %eax,%ecx
81002e8c:	8b 45 14             	mov    0x14(%ebp),%eax
81002e8f:	01 c8                	add    %ecx,%eax
81002e91:	8b 00                	mov    (%eax),%eax
81002e93:	83 ec 08             	sub    $0x8,%esp
81002e96:	52                   	push   %edx
81002e97:	50                   	push   %eax
81002e98:	e8 59 31 00 00       	call   81005ff6 <fputs>
81002e9d:	83 c4 10             	add    $0x10,%esp
81002ea0:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002ea4:	74 07                	je     81002ead <getopt_internal+0x928>
81002ea6:	ba 3a 00 00 00       	mov    $0x3a,%edx
81002eab:	eb 05                	jmp    81002eb2 <getopt_internal+0x92d>
81002ead:	ba 3f 00 00 00       	mov    $0x3f,%edx
81002eb2:	8b 45 20             	mov    0x20(%ebp),%eax
81002eb5:	89 50 0c             	mov    %edx,0xc(%eax)
81002eb8:	eb 2d                	jmp    81002ee7 <getopt_internal+0x962>
81002eba:	a1 24 83 00 81       	mov    0x81008324,%eax
81002ebf:	8b 50 0c             	mov    0xc(%eax),%edx
81002ec2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ec5:	0f b6 00             	movzbl (%eax),%eax
81002ec8:	0f be c0             	movsbl %al,%eax
81002ecb:	83 ec 08             	sub    $0x8,%esp
81002ece:	52                   	push   %edx
81002ecf:	50                   	push   %eax
81002ed0:	e8 2d 30 00 00       	call   81005f02 <fputc>
81002ed5:	83 c4 10             	add    $0x10,%esp
81002ed8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002edb:	0f b6 00             	movzbl (%eax),%eax
81002ede:	0f be d0             	movsbl %al,%edx
81002ee1:	8b 45 20             	mov    0x20(%ebp),%eax
81002ee4:	89 50 0c             	mov    %edx,0xc(%eax)
81002ee7:	a1 24 83 00 81       	mov    0x81008324,%eax
81002eec:	8b 40 0c             	mov    0xc(%eax),%eax
81002eef:	83 ec 08             	sub    $0x8,%esp
81002ef2:	50                   	push   %eax
81002ef3:	68 4f 7b 00 81       	push   $0x81007b4f
81002ef8:	e8 f9 30 00 00       	call   81005ff6 <fputs>
81002efd:	83 c4 10             	add    $0x10,%esp
81002f00:	8b 45 20             	mov    0x20(%ebp),%eax
81002f03:	8b 40 04             	mov    0x4(%eax),%eax
81002f06:	8d 50 01             	lea    0x1(%eax),%edx
81002f09:	8b 45 20             	mov    0x20(%ebp),%eax
81002f0c:	89 50 04             	mov    %edx,0x4(%eax)
81002f0f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002f13:	74 0a                	je     81002f1f <getopt_internal+0x99a>
81002f15:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002f1a:	e9 76 01 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002f1f:	b8 3f 00 00 00       	mov    $0x3f,%eax
81002f24:	e9 6c 01 00 00       	jmp    81003095 <getopt_internal+0xb10>
81002f29:	8b 45 20             	mov    0x20(%ebp),%eax
81002f2c:	8b 40 04             	mov    0x4(%eax),%eax
81002f2f:	83 c0 01             	add    $0x1,%eax
81002f32:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f39:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f3c:	01 d0                	add    %edx,%eax
81002f3e:	8b 10                	mov    (%eax),%edx
81002f40:	8b 45 20             	mov    0x20(%ebp),%eax
81002f43:	89 10                	mov    %edx,(%eax)
81002f45:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002f4c:	8b 45 20             	mov    0x20(%ebp),%eax
81002f4f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002f56:	eb 58                	jmp    81002fb0 <getopt_internal+0xa2b>
81002f58:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f5c:	79 3e                	jns    81002f9c <getopt_internal+0xa17>
81002f5e:	8b 45 20             	mov    0x20(%ebp),%eax
81002f61:	8b 40 10             	mov    0x10(%eax),%eax
81002f64:	8d 50 01             	lea    0x1(%eax),%edx
81002f67:	8b 45 20             	mov    0x20(%ebp),%eax
81002f6a:	89 50 10             	mov    %edx,0x10(%eax)
81002f6d:	8b 45 20             	mov    0x20(%ebp),%eax
81002f70:	8b 40 04             	mov    0x4(%eax),%eax
81002f73:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f7d:	01 d0                	add    %edx,%eax
81002f7f:	8b 10                	mov    (%eax),%edx
81002f81:	8b 45 20             	mov    0x20(%ebp),%eax
81002f84:	8b 40 10             	mov    0x10(%eax),%eax
81002f87:	01 d0                	add    %edx,%eax
81002f89:	0f b6 00             	movzbl (%eax),%eax
81002f8c:	84 c0                	test   %al,%al
81002f8e:	75 16                	jne    81002fa6 <getopt_internal+0xa21>
81002f90:	8b 45 20             	mov    0x20(%ebp),%eax
81002f93:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002f9a:	eb 0a                	jmp    81002fa6 <getopt_internal+0xa21>
81002f9c:	8b 45 20             	mov    0x20(%ebp),%eax
81002f9f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002fa6:	8b 45 20             	mov    0x20(%ebp),%eax
81002fa9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002faf:	90                   	nop
81002fb0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002fb4:	75 57                	jne    8100300d <getopt_internal+0xa88>
81002fb6:	8b 45 20             	mov    0x20(%ebp),%eax
81002fb9:	8b 40 10             	mov    0x10(%eax),%eax
81002fbc:	83 f8 01             	cmp    $0x1,%eax
81002fbf:	75 4c                	jne    8100300d <getopt_internal+0xa88>
81002fc1:	8b 45 20             	mov    0x20(%ebp),%eax
81002fc4:	8b 40 18             	mov    0x18(%eax),%eax
81002fc7:	85 c0                	test   %eax,%eax
81002fc9:	74 42                	je     8100300d <getopt_internal+0xa88>
81002fcb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fce:	8d 48 01             	lea    0x1(%eax),%ecx
81002fd1:	8b 45 20             	mov    0x20(%ebp),%eax
81002fd4:	8b 40 18             	mov    0x18(%eax),%eax
81002fd7:	8b 55 20             	mov    0x20(%ebp),%edx
81002fda:	8b 52 14             	mov    0x14(%edx),%edx
81002fdd:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81002fe4:	8b 55 0c             	mov    0xc(%ebp),%edx
81002fe7:	01 da                	add    %ebx,%edx
81002fe9:	83 ec 04             	sub    $0x4,%esp
81002fec:	51                   	push   %ecx
81002fed:	50                   	push   %eax
81002fee:	52                   	push   %edx
81002fef:	e8 7f f4 ff ff       	call   81002473 <permute>
81002ff4:	83 c4 10             	add    $0x10,%esp
81002ff7:	8b 45 20             	mov    0x20(%ebp),%eax
81002ffa:	8b 40 14             	mov    0x14(%eax),%eax
81002ffd:	8d 50 01             	lea    0x1(%eax),%edx
81003000:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003003:	01 c2                	add    %eax,%edx
81003005:	8b 45 20             	mov    0x20(%ebp),%eax
81003008:	89 50 04             	mov    %edx,0x4(%eax)
8100300b:	eb 1f                	jmp    8100302c <getopt_internal+0xaa7>
8100300d:	8b 45 20             	mov    0x20(%ebp),%eax
81003010:	8b 40 10             	mov    0x10(%eax),%eax
81003013:	83 f8 01             	cmp    $0x1,%eax
81003016:	75 14                	jne    8100302c <getopt_internal+0xaa7>
81003018:	8b 45 20             	mov    0x20(%ebp),%eax
8100301b:	8b 40 04             	mov    0x4(%eax),%eax
8100301e:	8d 50 01             	lea    0x1(%eax),%edx
81003021:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003024:	01 c2                	add    %eax,%edx
81003026:	8b 45 20             	mov    0x20(%ebp),%eax
81003029:	89 50 04             	mov    %edx,0x4(%eax)
8100302c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003030:	78 5d                	js     8100308f <getopt_internal+0xb0a>
81003032:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003036:	74 08                	je     81003040 <getopt_internal+0xabb>
81003038:	8b 45 18             	mov    0x18(%ebp),%eax
8100303b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100303e:	89 10                	mov    %edx,(%eax)
81003040:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003043:	c1 e0 04             	shl    $0x4,%eax
81003046:	89 c2                	mov    %eax,%edx
81003048:	8b 45 14             	mov    0x14(%ebp),%eax
8100304b:	01 d0                	add    %edx,%eax
8100304d:	8b 40 08             	mov    0x8(%eax),%eax
81003050:	85 c0                	test   %eax,%eax
81003052:	74 29                	je     8100307d <getopt_internal+0xaf8>
81003054:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003057:	c1 e0 04             	shl    $0x4,%eax
8100305a:	89 c2                	mov    %eax,%edx
8100305c:	8b 45 14             	mov    0x14(%ebp),%eax
8100305f:	01 c2                	add    %eax,%edx
81003061:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003064:	c1 e0 04             	shl    $0x4,%eax
81003067:	89 c1                	mov    %eax,%ecx
81003069:	8b 45 14             	mov    0x14(%ebp),%eax
8100306c:	01 c8                	add    %ecx,%eax
8100306e:	8b 40 08             	mov    0x8(%eax),%eax
81003071:	8b 52 0c             	mov    0xc(%edx),%edx
81003074:	89 10                	mov    %edx,(%eax)
81003076:	b8 00 00 00 00       	mov    $0x0,%eax
8100307b:	eb 18                	jmp    81003095 <getopt_internal+0xb10>
8100307d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003080:	c1 e0 04             	shl    $0x4,%eax
81003083:	89 c2                	mov    %eax,%edx
81003085:	8b 45 14             	mov    0x14(%ebp),%eax
81003088:	01 d0                	add    %edx,%eax
8100308a:	8b 40 0c             	mov    0xc(%eax),%eax
8100308d:	eb 06                	jmp    81003095 <getopt_internal+0xb10>
8100308f:	8b 45 20             	mov    0x20(%ebp),%eax
81003092:	8b 40 0c             	mov    0xc(%eax),%eax
81003095:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003098:	c9                   	leave  
81003099:	c3                   	ret    

8100309a <getopt>:
8100309a:	55                   	push   %ebp
8100309b:	89 e5                	mov    %esp,%ebp
8100309d:	83 ec 28             	sub    $0x28,%esp
810030a0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030a3:	50                   	push   %eax
810030a4:	e8 31 f4 ff ff       	call   810024da <read_globals>
810030a9:	83 c4 04             	add    $0x4,%esp
810030ac:	83 ec 04             	sub    $0x4,%esp
810030af:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030b2:	50                   	push   %eax
810030b3:	6a 00                	push   $0x0
810030b5:	6a 00                	push   $0x0
810030b7:	6a 00                	push   $0x0
810030b9:	ff 75 10             	push   0x10(%ebp)
810030bc:	ff 75 0c             	push   0xc(%ebp)
810030bf:	ff 75 08             	push   0x8(%ebp)
810030c2:	e8 be f4 ff ff       	call   81002585 <getopt_internal>
810030c7:	83 c4 20             	add    $0x20,%esp
810030ca:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030cd:	83 ec 0c             	sub    $0xc,%esp
810030d0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030d3:	50                   	push   %eax
810030d4:	e8 5a f4 ff ff       	call   81002533 <write_globals>
810030d9:	83 c4 10             	add    $0x10,%esp
810030dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030df:	c9                   	leave  
810030e0:	c3                   	ret    

810030e1 <getopt_long>:
810030e1:	55                   	push   %ebp
810030e2:	89 e5                	mov    %esp,%ebp
810030e4:	83 ec 28             	sub    $0x28,%esp
810030e7:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030ea:	50                   	push   %eax
810030eb:	e8 ea f3 ff ff       	call   810024da <read_globals>
810030f0:	83 c4 04             	add    $0x4,%esp
810030f3:	83 ec 04             	sub    $0x4,%esp
810030f6:	8d 45 d8             	lea    -0x28(%ebp),%eax
810030f9:	50                   	push   %eax
810030fa:	6a 00                	push   $0x0
810030fc:	ff 75 18             	push   0x18(%ebp)
810030ff:	ff 75 14             	push   0x14(%ebp)
81003102:	ff 75 10             	push   0x10(%ebp)
81003105:	ff 75 0c             	push   0xc(%ebp)
81003108:	ff 75 08             	push   0x8(%ebp)
8100310b:	e8 75 f4 ff ff       	call   81002585 <getopt_internal>
81003110:	83 c4 20             	add    $0x20,%esp
81003113:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003116:	83 ec 0c             	sub    $0xc,%esp
81003119:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100311c:	50                   	push   %eax
8100311d:	e8 11 f4 ff ff       	call   81002533 <write_globals>
81003122:	83 c4 10             	add    $0x10,%esp
81003125:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003128:	c9                   	leave  
81003129:	c3                   	ret    

8100312a <getopt_long_only>:
8100312a:	55                   	push   %ebp
8100312b:	89 e5                	mov    %esp,%ebp
8100312d:	83 ec 28             	sub    $0x28,%esp
81003130:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003133:	50                   	push   %eax
81003134:	e8 a1 f3 ff ff       	call   810024da <read_globals>
81003139:	83 c4 04             	add    $0x4,%esp
8100313c:	83 ec 04             	sub    $0x4,%esp
8100313f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003142:	50                   	push   %eax
81003143:	6a 01                	push   $0x1
81003145:	ff 75 18             	push   0x18(%ebp)
81003148:	ff 75 14             	push   0x14(%ebp)
8100314b:	ff 75 10             	push   0x10(%ebp)
8100314e:	ff 75 0c             	push   0xc(%ebp)
81003151:	ff 75 08             	push   0x8(%ebp)
81003154:	e8 2c f4 ff ff       	call   81002585 <getopt_internal>
81003159:	83 c4 20             	add    $0x20,%esp
8100315c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100315f:	83 ec 0c             	sub    $0xc,%esp
81003162:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003165:	50                   	push   %eax
81003166:	e8 c8 f3 ff ff       	call   81002533 <write_globals>
8100316b:	83 c4 10             	add    $0x10,%esp
8100316e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003171:	c9                   	leave  
81003172:	c3                   	ret    

81003173 <__getopt_r>:
81003173:	55                   	push   %ebp
81003174:	89 e5                	mov    %esp,%ebp
81003176:	83 ec 08             	sub    $0x8,%esp
81003179:	83 ec 04             	sub    $0x4,%esp
8100317c:	ff 75 14             	push   0x14(%ebp)
8100317f:	6a 00                	push   $0x0
81003181:	6a 00                	push   $0x0
81003183:	6a 00                	push   $0x0
81003185:	ff 75 10             	push   0x10(%ebp)
81003188:	ff 75 0c             	push   0xc(%ebp)
8100318b:	ff 75 08             	push   0x8(%ebp)
8100318e:	e8 f2 f3 ff ff       	call   81002585 <getopt_internal>
81003193:	83 c4 20             	add    $0x20,%esp
81003196:	c9                   	leave  
81003197:	c3                   	ret    

81003198 <__getopt_long_r>:
81003198:	55                   	push   %ebp
81003199:	89 e5                	mov    %esp,%ebp
8100319b:	83 ec 08             	sub    $0x8,%esp
8100319e:	83 ec 04             	sub    $0x4,%esp
810031a1:	ff 75 1c             	push   0x1c(%ebp)
810031a4:	6a 00                	push   $0x0
810031a6:	ff 75 18             	push   0x18(%ebp)
810031a9:	ff 75 14             	push   0x14(%ebp)
810031ac:	ff 75 10             	push   0x10(%ebp)
810031af:	ff 75 0c             	push   0xc(%ebp)
810031b2:	ff 75 08             	push   0x8(%ebp)
810031b5:	e8 cb f3 ff ff       	call   81002585 <getopt_internal>
810031ba:	83 c4 20             	add    $0x20,%esp
810031bd:	c9                   	leave  
810031be:	c3                   	ret    

810031bf <__getopt_long_only_r>:
810031bf:	55                   	push   %ebp
810031c0:	89 e5                	mov    %esp,%ebp
810031c2:	83 ec 08             	sub    $0x8,%esp
810031c5:	83 ec 04             	sub    $0x4,%esp
810031c8:	ff 75 1c             	push   0x1c(%ebp)
810031cb:	6a 01                	push   $0x1
810031cd:	ff 75 18             	push   0x18(%ebp)
810031d0:	ff 75 14             	push   0x14(%ebp)
810031d3:	ff 75 10             	push   0x10(%ebp)
810031d6:	ff 75 0c             	push   0xc(%ebp)
810031d9:	ff 75 08             	push   0x8(%ebp)
810031dc:	e8 a4 f3 ff ff       	call   81002585 <getopt_internal>
810031e1:	83 c4 20             	add    $0x20,%esp
810031e4:	c9                   	leave  
810031e5:	c3                   	ret    

810031e6 <__getreent>:
810031e6:	55                   	push   %ebp
810031e7:	89 e5                	mov    %esp,%ebp
810031e9:	a1 24 83 00 81       	mov    0x81008324,%eax
810031ee:	5d                   	pop    %ebp
810031ef:	c3                   	ret    

810031f0 <__smakebuf_r>:
810031f0:	55                   	push   %ebp
810031f1:	89 e5                	mov    %esp,%ebp
810031f3:	56                   	push   %esi
810031f4:	53                   	push   %ebx
810031f5:	83 ec 10             	sub    $0x10,%esp
810031f8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810031fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810031ff:	98                   	cwtl   
81003200:	83 e0 02             	and    $0x2,%eax
81003203:	85 c0                	test   %eax,%eax
81003205:	74 16                	je     8100321d <__smakebuf_r+0x2d>
81003207:	8d 43 43             	lea    0x43(%ebx),%eax
8100320a:	89 03                	mov    %eax,(%ebx)
8100320c:	8b 03                	mov    (%ebx),%eax
8100320e:	89 43 10             	mov    %eax,0x10(%ebx)
81003211:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003218:	e9 b9 00 00 00       	jmp    810032d6 <__smakebuf_r+0xe6>
8100321d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003220:	50                   	push   %eax
81003221:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003224:	50                   	push   %eax
81003225:	53                   	push   %ebx
81003226:	ff 75 08             	push   0x8(%ebp)
81003229:	e8 af 00 00 00       	call   810032dd <__swhatbuf_r>
8100322e:	83 c4 10             	add    $0x10,%esp
81003231:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003234:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003237:	83 ec 08             	sub    $0x8,%esp
8100323a:	50                   	push   %eax
8100323b:	ff 75 08             	push   0x8(%ebp)
8100323e:	e8 f9 03 00 00       	call   8100363c <_malloc_r>
81003243:	83 c4 10             	add    $0x10,%esp
81003246:	89 c6                	mov    %eax,%esi
81003248:	85 f6                	test   %esi,%esi
8100324a:	75 2f                	jne    8100327b <__smakebuf_r+0x8b>
8100324c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003250:	98                   	cwtl   
81003251:	25 00 02 00 00       	and    $0x200,%eax
81003256:	85 c0                	test   %eax,%eax
81003258:	75 7c                	jne    810032d6 <__smakebuf_r+0xe6>
8100325a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100325e:	83 e0 fc             	and    $0xfffffffc,%eax
81003261:	83 c8 02             	or     $0x2,%eax
81003264:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003268:	8d 43 43             	lea    0x43(%ebx),%eax
8100326b:	89 03                	mov    %eax,(%ebx)
8100326d:	8b 03                	mov    (%ebx),%eax
8100326f:	89 43 10             	mov    %eax,0x10(%ebx)
81003272:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003279:	eb 5b                	jmp    810032d6 <__smakebuf_r+0xe6>
8100327b:	8b 45 08             	mov    0x8(%ebp),%eax
8100327e:	c7 40 3c e8 14 00 81 	movl   $0x810014e8,0x3c(%eax)
81003285:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003289:	0c 80                	or     $0x80,%al
8100328b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100328f:	89 33                	mov    %esi,(%ebx)
81003291:	8b 03                	mov    (%ebx),%eax
81003293:	89 43 10             	mov    %eax,0x10(%ebx)
81003296:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003299:	89 43 14             	mov    %eax,0x14(%ebx)
8100329c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100329f:	85 c0                	test   %eax,%eax
810032a1:	74 26                	je     810032c9 <__smakebuf_r+0xd9>
810032a3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810032a7:	98                   	cwtl   
810032a8:	83 ec 08             	sub    $0x8,%esp
810032ab:	50                   	push   %eax
810032ac:	ff 75 08             	push   0x8(%ebp)
810032af:	e8 d4 35 00 00       	call   81006888 <_isatty_r>
810032b4:	83 c4 10             	add    $0x10,%esp
810032b7:	85 c0                	test   %eax,%eax
810032b9:	74 0e                	je     810032c9 <__smakebuf_r+0xd9>
810032bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032bf:	83 e0 fc             	and    $0xfffffffc,%eax
810032c2:	83 c8 01             	or     $0x1,%eax
810032c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032c9:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
810032cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032d0:	09 d0                	or     %edx,%eax
810032d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032d6:	8d 65 f8             	lea    -0x8(%ebp),%esp
810032d9:	5b                   	pop    %ebx
810032da:	5e                   	pop    %esi
810032db:	5d                   	pop    %ebp
810032dc:	c3                   	ret    

810032dd <__swhatbuf_r>:
810032dd:	55                   	push   %ebp
810032de:	89 e5                	mov    %esp,%ebp
810032e0:	83 ec 58             	sub    $0x58,%esp
810032e3:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
810032ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810032ed:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810032f1:	66 85 c0             	test   %ax,%ax
810032f4:	78 1f                	js     81003315 <__swhatbuf_r+0x38>
810032f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810032f9:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810032fd:	98                   	cwtl   
810032fe:	83 ec 04             	sub    $0x4,%esp
81003301:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003304:	52                   	push   %edx
81003305:	50                   	push   %eax
81003306:	ff 75 08             	push   0x8(%ebp)
81003309:	e8 b5 ee ff ff       	call   810021c3 <_fstat_r>
8100330e:	83 c4 10             	add    $0x10,%esp
81003311:	85 c0                	test   %eax,%eax
81003313:	79 35                	jns    8100334a <__swhatbuf_r+0x6d>
81003315:	8b 45 14             	mov    0x14(%ebp),%eax
81003318:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100331e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003321:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003325:	98                   	cwtl   
81003326:	25 80 00 00 00       	and    $0x80,%eax
8100332b:	85 c0                	test   %eax,%eax
8100332d:	74 0b                	je     8100333a <__swhatbuf_r+0x5d>
8100332f:	8b 45 10             	mov    0x10(%ebp),%eax
81003332:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003338:	eb 09                	jmp    81003343 <__swhatbuf_r+0x66>
8100333a:	8b 45 10             	mov    0x10(%ebp),%eax
8100333d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003343:	b8 00 00 00 00       	mov    $0x0,%eax
81003348:	eb 24                	jmp    8100336e <__swhatbuf_r+0x91>
8100334a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100334d:	25 00 f0 00 00       	and    $0xf000,%eax
81003352:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003357:	0f 94 c0             	sete   %al
8100335a:	0f b6 d0             	movzbl %al,%edx
8100335d:	8b 45 14             	mov    0x14(%ebp),%eax
81003360:	89 10                	mov    %edx,(%eax)
81003362:	8b 45 10             	mov    0x10(%ebp),%eax
81003365:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
8100336b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100336e:	c9                   	leave  
8100336f:	c3                   	ret    

81003370 <malloc>:
81003370:	55                   	push   %ebp
81003371:	89 e5                	mov    %esp,%ebp
81003373:	83 ec 08             	sub    $0x8,%esp
81003376:	a1 24 83 00 81       	mov    0x81008324,%eax
8100337b:	83 ec 08             	sub    $0x8,%esp
8100337e:	ff 75 08             	push   0x8(%ebp)
81003381:	50                   	push   %eax
81003382:	e8 b5 02 00 00       	call   8100363c <_malloc_r>
81003387:	83 c4 10             	add    $0x10,%esp
8100338a:	c9                   	leave  
8100338b:	c3                   	ret    

8100338c <free>:
8100338c:	55                   	push   %ebp
8100338d:	89 e5                	mov    %esp,%ebp
8100338f:	83 ec 08             	sub    $0x8,%esp
81003392:	a1 24 83 00 81       	mov    0x81008324,%eax
81003397:	83 ec 08             	sub    $0x8,%esp
8100339a:	ff 75 08             	push   0x8(%ebp)
8100339d:	50                   	push   %eax
8100339e:	e8 d6 e3 ff ff       	call   81001779 <_free_r>
810033a3:	83 c4 10             	add    $0x10,%esp
810033a6:	90                   	nop
810033a7:	c9                   	leave  
810033a8:	c3                   	ret    

810033a9 <malloc_extend_top>:
810033a9:	55                   	push   %ebp
810033aa:	89 e5                	mov    %esp,%ebp
810033ac:	83 ec 38             	sub    $0x38,%esp
810033af:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810033b6:	b8 40 83 00 81       	mov    $0x81008340,%eax
810033bb:	8b 40 08             	mov    0x8(%eax),%eax
810033be:	89 45 e0             	mov    %eax,-0x20(%ebp)
810033c1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810033c4:	8b 40 04             	mov    0x4(%eax),%eax
810033c7:	83 e0 fc             	and    $0xfffffffc,%eax
810033ca:	89 45 dc             	mov    %eax,-0x24(%ebp)
810033cd:	8b 55 e0             	mov    -0x20(%ebp),%edx
810033d0:	8b 45 dc             	mov    -0x24(%ebp),%eax
810033d3:	01 d0                	add    %edx,%eax
810033d5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810033d8:	8b 15 20 8f 00 81    	mov    0x81008f20,%edx
810033de:	8b 45 0c             	mov    0xc(%ebp),%eax
810033e1:	01 d0                	add    %edx,%eax
810033e3:	83 c0 10             	add    $0x10,%eax
810033e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810033e9:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
810033f0:	a1 4c 87 00 81       	mov    0x8100874c,%eax
810033f5:	83 f8 ff             	cmp    $0xffffffff,%eax
810033f8:	74 15                	je     8100340f <malloc_extend_top+0x66>
810033fa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810033fd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003400:	01 d0                	add    %edx,%eax
81003402:	8d 50 ff             	lea    -0x1(%eax),%edx
81003405:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003408:	f7 d8                	neg    %eax
8100340a:	21 d0                	and    %edx,%eax
8100340c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100340f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003412:	83 ec 08             	sub    $0x8,%esp
81003415:	50                   	push   %eax
81003416:	ff 75 08             	push   0x8(%ebp)
81003419:	e8 b4 1c 00 00       	call   810050d2 <_sbrk_r>
8100341e:	83 c4 10             	add    $0x10,%esp
81003421:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003424:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003428:	0f 84 0b 02 00 00    	je     81003639 <malloc_extend_top+0x290>
8100342e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003431:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003434:	73 0e                	jae    81003444 <malloc_extend_top+0x9b>
81003436:	b8 40 83 00 81       	mov    $0x81008340,%eax
8100343b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100343e:	0f 85 f5 01 00 00    	jne    81003639 <malloc_extend_top+0x290>
81003444:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81003449:	89 c2                	mov    %eax,%edx
8100344b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100344e:	01 d0                	add    %edx,%eax
81003450:	a3 40 8f 00 81       	mov    %eax,0x81008f40
81003455:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003458:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100345b:	75 30                	jne    8100348d <malloc_extend_top+0xe4>
8100345d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003460:	8d 50 ff             	lea    -0x1(%eax),%edx
81003463:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003466:	21 d0                	and    %edx,%eax
81003468:	85 c0                	test   %eax,%eax
8100346a:	75 21                	jne    8100348d <malloc_extend_top+0xe4>
8100346c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100346f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003472:	01 d0                	add    %edx,%eax
81003474:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003477:	b8 40 83 00 81       	mov    $0x81008340,%eax
8100347c:	8b 40 08             	mov    0x8(%eax),%eax
8100347f:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003482:	83 ca 01             	or     $0x1,%edx
81003485:	89 50 04             	mov    %edx,0x4(%eax)
81003488:	e9 76 01 00 00       	jmp    81003603 <malloc_extend_top+0x25a>
8100348d:	a1 4c 87 00 81       	mov    0x8100874c,%eax
81003492:	83 f8 ff             	cmp    $0xffffffff,%eax
81003495:	75 0a                	jne    810034a1 <malloc_extend_top+0xf8>
81003497:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100349a:	a3 4c 87 00 81       	mov    %eax,0x8100874c
8100349f:	eb 13                	jmp    810034b4 <malloc_extend_top+0x10b>
810034a1:	8b 15 40 8f 00 81    	mov    0x81008f40,%edx
810034a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034aa:	2b 45 d8             	sub    -0x28(%ebp),%eax
810034ad:	01 d0                	add    %edx,%eax
810034af:	a3 40 8f 00 81       	mov    %eax,0x81008f40
810034b4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034b7:	83 c0 08             	add    $0x8,%eax
810034ba:	83 e0 07             	and    $0x7,%eax
810034bd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810034c0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810034c4:	74 13                	je     810034d9 <malloc_extend_top+0x130>
810034c6:	b8 08 00 00 00       	mov    $0x8,%eax
810034cb:	2b 45 cc             	sub    -0x34(%ebp),%eax
810034ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
810034d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810034d4:	01 45 f4             	add    %eax,-0xc(%ebp)
810034d7:	eb 07                	jmp    810034e0 <malloc_extend_top+0x137>
810034d9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810034e0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810034e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810034e6:	01 d0                	add    %edx,%eax
810034e8:	89 c2                	mov    %eax,%edx
810034ea:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810034ed:	83 e8 01             	sub    $0x1,%eax
810034f0:	21 c2                	and    %eax,%edx
810034f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810034f5:	29 d0                	sub    %edx,%eax
810034f7:	01 45 f0             	add    %eax,-0x10(%ebp)
810034fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810034fd:	83 e8 01             	sub    $0x1,%eax
81003500:	21 45 f0             	and    %eax,-0x10(%ebp)
81003503:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003506:	83 ec 08             	sub    $0x8,%esp
81003509:	50                   	push   %eax
8100350a:	ff 75 08             	push   0x8(%ebp)
8100350d:	e8 c0 1b 00 00       	call   810050d2 <_sbrk_r>
81003512:	83 c4 10             	add    $0x10,%esp
81003515:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003518:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100351c:	75 28                	jne    81003546 <malloc_extend_top+0x19d>
8100351e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003525:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100352c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100352f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003532:	01 d0                	add    %edx,%eax
81003534:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003537:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100353b:	74 09                	je     81003546 <malloc_extend_top+0x19d>
8100353d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003540:	83 e8 08             	sub    $0x8,%eax
81003543:	01 45 ec             	add    %eax,-0x14(%ebp)
81003546:	a1 40 8f 00 81       	mov    0x81008f40,%eax
8100354b:	89 c2                	mov    %eax,%edx
8100354d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003550:	01 d0                	add    %edx,%eax
81003552:	a3 40 8f 00 81       	mov    %eax,0x81008f40
81003557:	ba 40 83 00 81       	mov    $0x81008340,%edx
8100355c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100355f:	89 42 08             	mov    %eax,0x8(%edx)
81003562:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003565:	2b 45 f4             	sub    -0xc(%ebp),%eax
81003568:	89 c2                	mov    %eax,%edx
8100356a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100356d:	01 d0                	add    %edx,%eax
8100356f:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003572:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003577:	8b 40 08             	mov    0x8(%eax),%eax
8100357a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100357d:	83 ca 01             	or     $0x1,%edx
81003580:	89 50 04             	mov    %edx,0x4(%eax)
81003583:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003588:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100358b:	74 76                	je     81003603 <malloc_extend_top+0x25a>
8100358d:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81003591:	77 14                	ja     810035a7 <malloc_extend_top+0x1fe>
81003593:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003598:	8b 40 08             	mov    0x8(%eax),%eax
8100359b:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810035a2:	e9 93 00 00 00       	jmp    8100363a <malloc_extend_top+0x291>
810035a7:	8b 45 dc             	mov    -0x24(%ebp),%eax
810035aa:	83 e8 0c             	sub    $0xc,%eax
810035ad:	83 e0 f8             	and    $0xfffffff8,%eax
810035b0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810035b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810035b6:	8b 40 04             	mov    0x4(%eax),%eax
810035b9:	83 e0 01             	and    $0x1,%eax
810035bc:	0b 45 dc             	or     -0x24(%ebp),%eax
810035bf:	89 c2                	mov    %eax,%edx
810035c1:	8b 45 e0             	mov    -0x20(%ebp),%eax
810035c4:	89 50 04             	mov    %edx,0x4(%eax)
810035c7:	8b 55 e0             	mov    -0x20(%ebp),%edx
810035ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
810035cd:	01 d0                	add    %edx,%eax
810035cf:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810035d6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810035d9:	8d 50 04             	lea    0x4(%eax),%edx
810035dc:	8b 45 e0             	mov    -0x20(%ebp),%eax
810035df:	01 d0                	add    %edx,%eax
810035e1:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
810035e8:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810035ec:	76 15                	jbe    81003603 <malloc_extend_top+0x25a>
810035ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
810035f1:	83 c0 08             	add    $0x8,%eax
810035f4:	83 ec 08             	sub    $0x8,%esp
810035f7:	50                   	push   %eax
810035f8:	ff 75 08             	push   0x8(%ebp)
810035fb:	e8 79 e1 ff ff       	call   81001779 <_free_r>
81003600:	83 c4 10             	add    $0x10,%esp
81003603:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81003608:	89 c2                	mov    %eax,%edx
8100360a:	a1 24 8f 00 81       	mov    0x81008f24,%eax
8100360f:	39 c2                	cmp    %eax,%edx
81003611:	76 0a                	jbe    8100361d <malloc_extend_top+0x274>
81003613:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81003618:	a3 24 8f 00 81       	mov    %eax,0x81008f24
8100361d:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81003622:	89 c2                	mov    %eax,%edx
81003624:	a1 28 8f 00 81       	mov    0x81008f28,%eax
81003629:	39 c2                	cmp    %eax,%edx
8100362b:	76 0d                	jbe    8100363a <malloc_extend_top+0x291>
8100362d:	a1 40 8f 00 81       	mov    0x81008f40,%eax
81003632:	a3 28 8f 00 81       	mov    %eax,0x81008f28
81003637:	eb 01                	jmp    8100363a <malloc_extend_top+0x291>
81003639:	90                   	nop
8100363a:	c9                   	leave  
8100363b:	c3                   	ret    

8100363c <_malloc_r>:
8100363c:	55                   	push   %ebp
8100363d:	89 e5                	mov    %esp,%ebp
8100363f:	53                   	push   %ebx
81003640:	83 ec 44             	sub    $0x44,%esp
81003643:	8b 45 0c             	mov    0xc(%ebp),%eax
81003646:	83 c0 0b             	add    $0xb,%eax
81003649:	83 f8 16             	cmp    $0x16,%eax
8100364c:	76 0b                	jbe    81003659 <_malloc_r+0x1d>
8100364e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003651:	83 c0 0b             	add    $0xb,%eax
81003654:	83 e0 f8             	and    $0xfffffff8,%eax
81003657:	eb 05                	jmp    8100365e <_malloc_r+0x22>
81003659:	b8 10 00 00 00       	mov    $0x10,%eax
8100365e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003661:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003664:	85 c0                	test   %eax,%eax
81003666:	78 08                	js     81003670 <_malloc_r+0x34>
81003668:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100366b:	3b 45 0c             	cmp    0xc(%ebp),%eax
8100366e:	73 13                	jae    81003683 <_malloc_r+0x47>
81003670:	8b 45 08             	mov    0x8(%ebp),%eax
81003673:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81003679:	b8 00 00 00 00       	mov    $0x0,%eax
8100367e:	e9 d6 07 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003683:	83 ec 0c             	sub    $0xc,%esp
81003686:	ff 75 08             	push   0x8(%ebp)
81003689:	e8 8a 09 00 00       	call   81004018 <__malloc_lock>
8100368e:	83 c4 10             	add    $0x10,%esp
81003691:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81003698:	0f 87 b0 00 00 00    	ja     8100374e <_malloc_r+0x112>
8100369e:	8b 45 d0             	mov    -0x30(%ebp),%eax
810036a1:	c1 e8 03             	shr    $0x3,%eax
810036a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810036a7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036aa:	83 c0 01             	add    $0x1,%eax
810036ad:	01 c0                	add    %eax,%eax
810036af:	c1 e0 02             	shl    $0x2,%eax
810036b2:	05 40 83 00 81       	add    $0x81008340,%eax
810036b7:	83 e8 08             	sub    $0x8,%eax
810036ba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810036bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810036c0:	8b 40 0c             	mov    0xc(%eax),%eax
810036c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036c9:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810036cc:	75 0d                	jne    810036db <_malloc_r+0x9f>
810036ce:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
810036d2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810036d5:	8b 40 0c             	mov    0xc(%eax),%eax
810036d8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036de:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
810036e1:	74 62                	je     81003745 <_malloc_r+0x109>
810036e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036e6:	8b 40 04             	mov    0x4(%eax),%eax
810036e9:	83 e0 fc             	and    $0xfffffffc,%eax
810036ec:	89 45 cc             	mov    %eax,-0x34(%ebp)
810036ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036f2:	8b 40 0c             	mov    0xc(%eax),%eax
810036f5:	89 45 d8             	mov    %eax,-0x28(%ebp)
810036f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036fb:	8b 40 08             	mov    0x8(%eax),%eax
810036fe:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003701:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003704:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003707:	89 50 0c             	mov    %edx,0xc(%eax)
8100370a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100370d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003710:	89 50 08             	mov    %edx,0x8(%eax)
81003713:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003716:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003719:	01 d0                	add    %edx,%eax
8100371b:	8b 50 04             	mov    0x4(%eax),%edx
8100371e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003721:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003724:	01 c8                	add    %ecx,%eax
81003726:	83 ca 01             	or     $0x1,%edx
81003729:	89 50 04             	mov    %edx,0x4(%eax)
8100372c:	83 ec 0c             	sub    $0xc,%esp
8100372f:	ff 75 08             	push   0x8(%ebp)
81003732:	e8 e7 08 00 00       	call   8100401e <__malloc_unlock>
81003737:	83 c4 10             	add    $0x10,%esp
8100373a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100373d:	83 c0 08             	add    $0x8,%eax
81003740:	e9 14 07 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003745:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81003749:	e9 46 01 00 00       	jmp    81003894 <_malloc_r+0x258>
8100374e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003751:	c1 e8 09             	shr    $0x9,%eax
81003754:	85 c0                	test   %eax,%eax
81003756:	75 08                	jne    81003760 <_malloc_r+0x124>
81003758:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100375b:	c1 e8 03             	shr    $0x3,%eax
8100375e:	eb 77                	jmp    810037d7 <_malloc_r+0x19b>
81003760:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003763:	c1 e8 09             	shr    $0x9,%eax
81003766:	83 f8 04             	cmp    $0x4,%eax
81003769:	77 0b                	ja     81003776 <_malloc_r+0x13a>
8100376b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100376e:	c1 e8 06             	shr    $0x6,%eax
81003771:	83 c0 38             	add    $0x38,%eax
81003774:	eb 61                	jmp    810037d7 <_malloc_r+0x19b>
81003776:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003779:	c1 e8 09             	shr    $0x9,%eax
8100377c:	83 f8 14             	cmp    $0x14,%eax
8100377f:	77 0b                	ja     8100378c <_malloc_r+0x150>
81003781:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003784:	c1 e8 09             	shr    $0x9,%eax
81003787:	83 c0 5b             	add    $0x5b,%eax
8100378a:	eb 4b                	jmp    810037d7 <_malloc_r+0x19b>
8100378c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100378f:	c1 e8 09             	shr    $0x9,%eax
81003792:	83 f8 54             	cmp    $0x54,%eax
81003795:	77 0b                	ja     810037a2 <_malloc_r+0x166>
81003797:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100379a:	c1 e8 0c             	shr    $0xc,%eax
8100379d:	83 c0 6e             	add    $0x6e,%eax
810037a0:	eb 35                	jmp    810037d7 <_malloc_r+0x19b>
810037a2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037a5:	c1 e8 09             	shr    $0x9,%eax
810037a8:	3d 54 01 00 00       	cmp    $0x154,%eax
810037ad:	77 0b                	ja     810037ba <_malloc_r+0x17e>
810037af:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037b2:	c1 e8 0f             	shr    $0xf,%eax
810037b5:	83 c0 77             	add    $0x77,%eax
810037b8:	eb 1d                	jmp    810037d7 <_malloc_r+0x19b>
810037ba:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037bd:	c1 e8 09             	shr    $0x9,%eax
810037c0:	3d 54 05 00 00       	cmp    $0x554,%eax
810037c5:	77 0b                	ja     810037d2 <_malloc_r+0x196>
810037c7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810037ca:	c1 e8 12             	shr    $0x12,%eax
810037cd:	83 c0 7c             	add    $0x7c,%eax
810037d0:	eb 05                	jmp    810037d7 <_malloc_r+0x19b>
810037d2:	b8 7e 00 00 00       	mov    $0x7e,%eax
810037d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
810037da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810037dd:	83 c0 01             	add    $0x1,%eax
810037e0:	01 c0                	add    %eax,%eax
810037e2:	c1 e0 02             	shl    $0x2,%eax
810037e5:	05 40 83 00 81       	add    $0x81008340,%eax
810037ea:	83 e8 08             	sub    $0x8,%eax
810037ed:	89 45 ec             	mov    %eax,-0x14(%ebp)
810037f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810037f3:	8b 40 0c             	mov    0xc(%eax),%eax
810037f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810037f9:	e9 86 00 00 00       	jmp    81003884 <_malloc_r+0x248>
810037fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003801:	8b 40 04             	mov    0x4(%eax),%eax
81003804:	83 e0 fc             	and    $0xfffffffc,%eax
81003807:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100380a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100380d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003810:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003813:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003817:	7e 06                	jle    8100381f <_malloc_r+0x1e3>
81003819:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100381d:	eb 71                	jmp    81003890 <_malloc_r+0x254>
8100381f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003823:	78 56                	js     8100387b <_malloc_r+0x23f>
81003825:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003828:	8b 40 0c             	mov    0xc(%eax),%eax
8100382b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100382e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003831:	8b 40 08             	mov    0x8(%eax),%eax
81003834:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003837:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100383a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100383d:	89 50 0c             	mov    %edx,0xc(%eax)
81003840:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003843:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003846:	89 50 08             	mov    %edx,0x8(%eax)
81003849:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100384c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100384f:	01 d0                	add    %edx,%eax
81003851:	8b 50 04             	mov    0x4(%eax),%edx
81003854:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003857:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100385a:	01 c8                	add    %ecx,%eax
8100385c:	83 ca 01             	or     $0x1,%edx
8100385f:	89 50 04             	mov    %edx,0x4(%eax)
81003862:	83 ec 0c             	sub    $0xc,%esp
81003865:	ff 75 08             	push   0x8(%ebp)
81003868:	e8 b1 07 00 00       	call   8100401e <__malloc_unlock>
8100386d:	83 c4 10             	add    $0x10,%esp
81003870:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003873:	83 c0 08             	add    $0x8,%eax
81003876:	e9 de 05 00 00       	jmp    81003e59 <_malloc_r+0x81d>
8100387b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100387e:	8b 40 0c             	mov    0xc(%eax),%eax
81003881:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003884:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003887:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100388a:	0f 85 6e ff ff ff    	jne    810037fe <_malloc_r+0x1c2>
81003890:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003894:	b8 48 83 00 81       	mov    $0x81008348,%eax
81003899:	8b 40 08             	mov    0x8(%eax),%eax
8100389c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100389f:	b8 48 83 00 81       	mov    $0x81008348,%eax
810038a4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810038a7:	0f 84 9c 02 00 00    	je     81003b49 <_malloc_r+0x50d>
810038ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038b0:	8b 40 04             	mov    0x4(%eax),%eax
810038b3:	83 e0 fc             	and    $0xfffffffc,%eax
810038b6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810038b9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810038bc:	2b 45 d0             	sub    -0x30(%ebp),%eax
810038bf:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038c2:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810038c6:	7e 7a                	jle    81003942 <_malloc_r+0x306>
810038c8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810038cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038ce:	01 d0                	add    %edx,%eax
810038d0:	89 45 c4             	mov    %eax,-0x3c(%ebp)
810038d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810038d6:	83 c8 01             	or     $0x1,%eax
810038d9:	89 c2                	mov    %eax,%edx
810038db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038de:	89 50 04             	mov    %edx,0x4(%eax)
810038e1:	b8 48 83 00 81       	mov    $0x81008348,%eax
810038e6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810038e9:	89 50 0c             	mov    %edx,0xc(%eax)
810038ec:	ba 48 83 00 81       	mov    $0x81008348,%edx
810038f1:	8b 40 0c             	mov    0xc(%eax),%eax
810038f4:	89 42 08             	mov    %eax,0x8(%edx)
810038f7:	ba 48 83 00 81       	mov    $0x81008348,%edx
810038fc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810038ff:	89 50 0c             	mov    %edx,0xc(%eax)
81003902:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003905:	8b 50 0c             	mov    0xc(%eax),%edx
81003908:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100390b:	89 50 08             	mov    %edx,0x8(%eax)
8100390e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003911:	83 c8 01             	or     $0x1,%eax
81003914:	89 c2                	mov    %eax,%edx
81003916:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003919:	89 50 04             	mov    %edx,0x4(%eax)
8100391c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100391f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003922:	01 c2                	add    %eax,%edx
81003924:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003927:	89 02                	mov    %eax,(%edx)
81003929:	83 ec 0c             	sub    $0xc,%esp
8100392c:	ff 75 08             	push   0x8(%ebp)
8100392f:	e8 ea 06 00 00       	call   8100401e <__malloc_unlock>
81003934:	83 c4 10             	add    $0x10,%esp
81003937:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100393a:	83 c0 08             	add    $0x8,%eax
8100393d:	e9 17 05 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003942:	b8 48 83 00 81       	mov    $0x81008348,%eax
81003947:	ba 48 83 00 81       	mov    $0x81008348,%edx
8100394c:	89 50 0c             	mov    %edx,0xc(%eax)
8100394f:	ba 48 83 00 81       	mov    $0x81008348,%edx
81003954:	8b 40 0c             	mov    0xc(%eax),%eax
81003957:	89 42 08             	mov    %eax,0x8(%edx)
8100395a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100395e:	78 32                	js     81003992 <_malloc_r+0x356>
81003960:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003963:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003966:	01 d0                	add    %edx,%eax
81003968:	8b 50 04             	mov    0x4(%eax),%edx
8100396b:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100396e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003971:	01 c8                	add    %ecx,%eax
81003973:	83 ca 01             	or     $0x1,%edx
81003976:	89 50 04             	mov    %edx,0x4(%eax)
81003979:	83 ec 0c             	sub    $0xc,%esp
8100397c:	ff 75 08             	push   0x8(%ebp)
8100397f:	e8 9a 06 00 00       	call   8100401e <__malloc_unlock>
81003984:	83 c4 10             	add    $0x10,%esp
81003987:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100398a:	83 c0 08             	add    $0x8,%eax
8100398d:	e9 c7 04 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003992:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81003999:	77 7f                	ja     81003a1a <_malloc_r+0x3de>
8100399b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100399e:	c1 e8 03             	shr    $0x3,%eax
810039a1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810039a4:	b8 40 83 00 81       	mov    $0x81008340,%eax
810039a9:	8b 58 04             	mov    0x4(%eax),%ebx
810039ac:	8b 45 c8             	mov    -0x38(%ebp),%eax
810039af:	8d 50 03             	lea    0x3(%eax),%edx
810039b2:	85 c0                	test   %eax,%eax
810039b4:	0f 48 c2             	cmovs  %edx,%eax
810039b7:	c1 f8 02             	sar    $0x2,%eax
810039ba:	ba 01 00 00 00       	mov    $0x1,%edx
810039bf:	89 c1                	mov    %eax,%ecx
810039c1:	d3 e2                	shl    %cl,%edx
810039c3:	89 d0                	mov    %edx,%eax
810039c5:	ba 40 83 00 81       	mov    $0x81008340,%edx
810039ca:	09 d8                	or     %ebx,%eax
810039cc:	89 42 04             	mov    %eax,0x4(%edx)
810039cf:	8b 45 c8             	mov    -0x38(%ebp),%eax
810039d2:	83 c0 01             	add    $0x1,%eax
810039d5:	01 c0                	add    %eax,%eax
810039d7:	c1 e0 02             	shl    $0x2,%eax
810039da:	05 40 83 00 81       	add    $0x81008340,%eax
810039df:	83 e8 08             	sub    $0x8,%eax
810039e2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810039e5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810039e8:	8b 40 08             	mov    0x8(%eax),%eax
810039eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810039ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039f1:	8b 55 d8             	mov    -0x28(%ebp),%edx
810039f4:	89 50 0c             	mov    %edx,0xc(%eax)
810039f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039fa:	8b 55 dc             	mov    -0x24(%ebp),%edx
810039fd:	89 50 08             	mov    %edx,0x8(%eax)
81003a00:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a03:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003a06:	89 50 08             	mov    %edx,0x8(%eax)
81003a09:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a0c:	8b 50 08             	mov    0x8(%eax),%edx
81003a0f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a12:	89 50 0c             	mov    %edx,0xc(%eax)
81003a15:	e9 2f 01 00 00       	jmp    81003b49 <_malloc_r+0x50d>
81003a1a:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a1d:	c1 e8 09             	shr    $0x9,%eax
81003a20:	85 c0                	test   %eax,%eax
81003a22:	75 08                	jne    81003a2c <_malloc_r+0x3f0>
81003a24:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a27:	c1 e8 03             	shr    $0x3,%eax
81003a2a:	eb 77                	jmp    81003aa3 <_malloc_r+0x467>
81003a2c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a2f:	c1 e8 09             	shr    $0x9,%eax
81003a32:	83 f8 04             	cmp    $0x4,%eax
81003a35:	77 0b                	ja     81003a42 <_malloc_r+0x406>
81003a37:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a3a:	c1 e8 06             	shr    $0x6,%eax
81003a3d:	83 c0 38             	add    $0x38,%eax
81003a40:	eb 61                	jmp    81003aa3 <_malloc_r+0x467>
81003a42:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a45:	c1 e8 09             	shr    $0x9,%eax
81003a48:	83 f8 14             	cmp    $0x14,%eax
81003a4b:	77 0b                	ja     81003a58 <_malloc_r+0x41c>
81003a4d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a50:	c1 e8 09             	shr    $0x9,%eax
81003a53:	83 c0 5b             	add    $0x5b,%eax
81003a56:	eb 4b                	jmp    81003aa3 <_malloc_r+0x467>
81003a58:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a5b:	c1 e8 09             	shr    $0x9,%eax
81003a5e:	83 f8 54             	cmp    $0x54,%eax
81003a61:	77 0b                	ja     81003a6e <_malloc_r+0x432>
81003a63:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a66:	c1 e8 0c             	shr    $0xc,%eax
81003a69:	83 c0 6e             	add    $0x6e,%eax
81003a6c:	eb 35                	jmp    81003aa3 <_malloc_r+0x467>
81003a6e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a71:	c1 e8 09             	shr    $0x9,%eax
81003a74:	3d 54 01 00 00       	cmp    $0x154,%eax
81003a79:	77 0b                	ja     81003a86 <_malloc_r+0x44a>
81003a7b:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a7e:	c1 e8 0f             	shr    $0xf,%eax
81003a81:	83 c0 77             	add    $0x77,%eax
81003a84:	eb 1d                	jmp    81003aa3 <_malloc_r+0x467>
81003a86:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a89:	c1 e8 09             	shr    $0x9,%eax
81003a8c:	3d 54 05 00 00       	cmp    $0x554,%eax
81003a91:	77 0b                	ja     81003a9e <_malloc_r+0x462>
81003a93:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003a96:	c1 e8 12             	shr    $0x12,%eax
81003a99:	83 c0 7c             	add    $0x7c,%eax
81003a9c:	eb 05                	jmp    81003aa3 <_malloc_r+0x467>
81003a9e:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003aa3:	89 45 c8             	mov    %eax,-0x38(%ebp)
81003aa6:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003aa9:	83 c0 01             	add    $0x1,%eax
81003aac:	01 c0                	add    %eax,%eax
81003aae:	c1 e0 02             	shl    $0x2,%eax
81003ab1:	05 40 83 00 81       	add    $0x81008340,%eax
81003ab6:	83 e8 08             	sub    $0x8,%eax
81003ab9:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003abc:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003abf:	8b 40 08             	mov    0x8(%eax),%eax
81003ac2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003ac5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ac8:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003acb:	75 36                	jne    81003b03 <_malloc_r+0x4c7>
81003acd:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003ad2:	8b 58 04             	mov    0x4(%eax),%ebx
81003ad5:	8b 45 c8             	mov    -0x38(%ebp),%eax
81003ad8:	8d 50 03             	lea    0x3(%eax),%edx
81003adb:	85 c0                	test   %eax,%eax
81003add:	0f 48 c2             	cmovs  %edx,%eax
81003ae0:	c1 f8 02             	sar    $0x2,%eax
81003ae3:	ba 01 00 00 00       	mov    $0x1,%edx
81003ae8:	89 c1                	mov    %eax,%ecx
81003aea:	d3 e2                	shl    %cl,%edx
81003aec:	89 d0                	mov    %edx,%eax
81003aee:	ba 40 83 00 81       	mov    $0x81008340,%edx
81003af3:	09 d8                	or     %ebx,%eax
81003af5:	89 42 04             	mov    %eax,0x4(%edx)
81003af8:	eb 28                	jmp    81003b22 <_malloc_r+0x4e6>
81003afa:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003afd:	8b 40 08             	mov    0x8(%eax),%eax
81003b00:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003b03:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b06:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003b09:	74 0e                	je     81003b19 <_malloc_r+0x4dd>
81003b0b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b0e:	8b 40 04             	mov    0x4(%eax),%eax
81003b11:	83 e0 fc             	and    $0xfffffffc,%eax
81003b14:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81003b17:	72 e1                	jb     81003afa <_malloc_r+0x4be>
81003b19:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b1c:	8b 40 0c             	mov    0xc(%eax),%eax
81003b1f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003b22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b25:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003b28:	89 50 0c             	mov    %edx,0xc(%eax)
81003b2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b2e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003b31:	89 50 08             	mov    %edx,0x8(%eax)
81003b34:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b37:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003b3a:	89 50 08             	mov    %edx,0x8(%eax)
81003b3d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b40:	8b 50 08             	mov    0x8(%eax),%edx
81003b43:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003b46:	89 50 0c             	mov    %edx,0xc(%eax)
81003b49:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b4c:	8d 50 03             	lea    0x3(%eax),%edx
81003b4f:	85 c0                	test   %eax,%eax
81003b51:	0f 48 c2             	cmovs  %edx,%eax
81003b54:	c1 f8 02             	sar    $0x2,%eax
81003b57:	ba 01 00 00 00       	mov    $0x1,%edx
81003b5c:	89 c1                	mov    %eax,%ecx
81003b5e:	d3 e2                	shl    %cl,%edx
81003b60:	89 d0                	mov    %edx,%eax
81003b62:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003b65:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003b6a:	8b 40 04             	mov    0x4(%eax),%eax
81003b6d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003b70:	0f 87 13 02 00 00    	ja     81003d89 <_malloc_r+0x74d>
81003b76:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003b7b:	8b 40 04             	mov    0x4(%eax),%eax
81003b7e:	23 45 e4             	and    -0x1c(%ebp),%eax
81003b81:	85 c0                	test   %eax,%eax
81003b83:	75 27                	jne    81003bac <_malloc_r+0x570>
81003b85:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b88:	83 e0 fc             	and    $0xfffffffc,%eax
81003b8b:	83 c0 04             	add    $0x4,%eax
81003b8e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003b91:	d1 65 e4             	shll   -0x1c(%ebp)
81003b94:	eb 07                	jmp    81003b9d <_malloc_r+0x561>
81003b96:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003b9a:	d1 65 e4             	shll   -0x1c(%ebp)
81003b9d:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003ba2:	8b 40 04             	mov    0x4(%eax),%eax
81003ba5:	23 45 e4             	and    -0x1c(%ebp),%eax
81003ba8:	85 c0                	test   %eax,%eax
81003baa:	74 ea                	je     81003b96 <_malloc_r+0x55a>
81003bac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003baf:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003bb2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bb5:	83 c0 01             	add    $0x1,%eax
81003bb8:	01 c0                	add    %eax,%eax
81003bba:	c1 e0 02             	shl    $0x2,%eax
81003bbd:	05 40 83 00 81       	add    $0x81008340,%eax
81003bc2:	83 e8 08             	sub    $0x8,%eax
81003bc5:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bc8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bcb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003bce:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bd1:	8b 40 0c             	mov    0xc(%eax),%eax
81003bd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003bd7:	e9 22 01 00 00       	jmp    81003cfe <_malloc_r+0x6c2>
81003bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003bdf:	8b 40 04             	mov    0x4(%eax),%eax
81003be2:	83 e0 fc             	and    $0xfffffffc,%eax
81003be5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003be8:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003beb:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003bee:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003bf1:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003bf5:	0f 8e 9e 00 00 00    	jle    81003c99 <_malloc_r+0x65d>
81003bfb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003bfe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c01:	01 d0                	add    %edx,%eax
81003c03:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81003c06:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c09:	83 c8 01             	or     $0x1,%eax
81003c0c:	89 c2                	mov    %eax,%edx
81003c0e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c11:	89 50 04             	mov    %edx,0x4(%eax)
81003c14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c17:	8b 40 0c             	mov    0xc(%eax),%eax
81003c1a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003c1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c20:	8b 40 08             	mov    0x8(%eax),%eax
81003c23:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003c26:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003c29:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003c2c:	89 50 0c             	mov    %edx,0xc(%eax)
81003c2f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003c32:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003c35:	89 50 08             	mov    %edx,0x8(%eax)
81003c38:	b8 48 83 00 81       	mov    $0x81008348,%eax
81003c3d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81003c40:	89 50 0c             	mov    %edx,0xc(%eax)
81003c43:	ba 48 83 00 81       	mov    $0x81008348,%edx
81003c48:	8b 40 0c             	mov    0xc(%eax),%eax
81003c4b:	89 42 08             	mov    %eax,0x8(%edx)
81003c4e:	ba 48 83 00 81       	mov    $0x81008348,%edx
81003c53:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003c56:	89 50 0c             	mov    %edx,0xc(%eax)
81003c59:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003c5c:	8b 50 0c             	mov    0xc(%eax),%edx
81003c5f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003c62:	89 50 08             	mov    %edx,0x8(%eax)
81003c65:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c68:	83 c8 01             	or     $0x1,%eax
81003c6b:	89 c2                	mov    %eax,%edx
81003c6d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003c70:	89 50 04             	mov    %edx,0x4(%eax)
81003c73:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003c76:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003c79:	01 c2                	add    %eax,%edx
81003c7b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c7e:	89 02                	mov    %eax,(%edx)
81003c80:	83 ec 0c             	sub    $0xc,%esp
81003c83:	ff 75 08             	push   0x8(%ebp)
81003c86:	e8 93 03 00 00       	call   8100401e <__malloc_unlock>
81003c8b:	83 c4 10             	add    $0x10,%esp
81003c8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c91:	83 c0 08             	add    $0x8,%eax
81003c94:	e9 c0 01 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003c99:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003c9d:	78 56                	js     81003cf5 <_malloc_r+0x6b9>
81003c9f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ca2:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003ca5:	01 d0                	add    %edx,%eax
81003ca7:	8b 50 04             	mov    0x4(%eax),%edx
81003caa:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003cad:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003cb0:	01 c8                	add    %ecx,%eax
81003cb2:	83 ca 01             	or     $0x1,%edx
81003cb5:	89 50 04             	mov    %edx,0x4(%eax)
81003cb8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cbb:	8b 40 0c             	mov    0xc(%eax),%eax
81003cbe:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003cc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cc4:	8b 40 08             	mov    0x8(%eax),%eax
81003cc7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003cca:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003ccd:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003cd0:	89 50 0c             	mov    %edx,0xc(%eax)
81003cd3:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003cd6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003cd9:	89 50 08             	mov    %edx,0x8(%eax)
81003cdc:	83 ec 0c             	sub    $0xc,%esp
81003cdf:	ff 75 08             	push   0x8(%ebp)
81003ce2:	e8 37 03 00 00       	call   8100401e <__malloc_unlock>
81003ce7:	83 c4 10             	add    $0x10,%esp
81003cea:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ced:	83 c0 08             	add    $0x8,%eax
81003cf0:	e9 64 01 00 00       	jmp    81003e59 <_malloc_r+0x81d>
81003cf5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cf8:	8b 40 0c             	mov    0xc(%eax),%eax
81003cfb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cfe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d01:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003d04:	0f 85 d2 fe ff ff    	jne    81003bdc <_malloc_r+0x5a0>
81003d0a:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003d0e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003d12:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d15:	83 e0 03             	and    $0x3,%eax
81003d18:	85 c0                	test   %eax,%eax
81003d1a:	0f 85 ae fe ff ff    	jne    81003bce <_malloc_r+0x592>
81003d20:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003d23:	83 e0 03             	and    $0x3,%eax
81003d26:	85 c0                	test   %eax,%eax
81003d28:	75 19                	jne    81003d43 <_malloc_r+0x707>
81003d2a:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003d2f:	8b 48 04             	mov    0x4(%eax),%ecx
81003d32:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003d35:	f7 d0                	not    %eax
81003d37:	ba 40 83 00 81       	mov    $0x81008340,%edx
81003d3c:	21 c8                	and    %ecx,%eax
81003d3e:	89 42 04             	mov    %eax,0x4(%edx)
81003d41:	eb 13                	jmp    81003d56 <_malloc_r+0x71a>
81003d43:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81003d47:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
81003d4b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003d4e:	8b 40 08             	mov    0x8(%eax),%eax
81003d51:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
81003d54:	74 ca                	je     81003d20 <_malloc_r+0x6e4>
81003d56:	d1 65 e4             	shll   -0x1c(%ebp)
81003d59:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003d5e:	8b 40 04             	mov    0x4(%eax),%eax
81003d61:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003d64:	77 23                	ja     81003d89 <_malloc_r+0x74d>
81003d66:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003d6a:	74 1d                	je     81003d89 <_malloc_r+0x74d>
81003d6c:	eb 07                	jmp    81003d75 <_malloc_r+0x739>
81003d6e:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003d72:	d1 65 e4             	shll   -0x1c(%ebp)
81003d75:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003d7a:	8b 40 04             	mov    0x4(%eax),%eax
81003d7d:	23 45 e4             	and    -0x1c(%ebp),%eax
81003d80:	85 c0                	test   %eax,%eax
81003d82:	74 ea                	je     81003d6e <_malloc_r+0x732>
81003d84:	e9 23 fe ff ff       	jmp    81003bac <_malloc_r+0x570>
81003d89:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003d8e:	8b 40 08             	mov    0x8(%eax),%eax
81003d91:	8b 40 04             	mov    0x4(%eax),%eax
81003d94:	83 e0 fc             	and    $0xfffffffc,%eax
81003d97:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003d9a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d9d:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003da2:	8b 40 08             	mov    0x8(%eax),%eax
81003da5:	8b 40 04             	mov    0x4(%eax),%eax
81003da8:	83 e0 fc             	and    $0xfffffffc,%eax
81003dab:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003dae:	77 06                	ja     81003db6 <_malloc_r+0x77a>
81003db0:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003db4:	7f 53                	jg     81003e09 <_malloc_r+0x7cd>
81003db6:	83 ec 08             	sub    $0x8,%esp
81003db9:	ff 75 d0             	push   -0x30(%ebp)
81003dbc:	ff 75 08             	push   0x8(%ebp)
81003dbf:	e8 e5 f5 ff ff       	call   810033a9 <malloc_extend_top>
81003dc4:	83 c4 10             	add    $0x10,%esp
81003dc7:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003dcc:	8b 40 08             	mov    0x8(%eax),%eax
81003dcf:	8b 40 04             	mov    0x4(%eax),%eax
81003dd2:	83 e0 fc             	and    $0xfffffffc,%eax
81003dd5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003dd8:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ddb:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003de0:	8b 40 08             	mov    0x8(%eax),%eax
81003de3:	8b 40 04             	mov    0x4(%eax),%eax
81003de6:	83 e0 fc             	and    $0xfffffffc,%eax
81003de9:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003dec:	77 06                	ja     81003df4 <_malloc_r+0x7b8>
81003dee:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81003df2:	7f 15                	jg     81003e09 <_malloc_r+0x7cd>
81003df4:	83 ec 0c             	sub    $0xc,%esp
81003df7:	ff 75 08             	push   0x8(%ebp)
81003dfa:	e8 1f 02 00 00       	call   8100401e <__malloc_unlock>
81003dff:	83 c4 10             	add    $0x10,%esp
81003e02:	b8 00 00 00 00       	mov    $0x0,%eax
81003e07:	eb 50                	jmp    81003e59 <_malloc_r+0x81d>
81003e09:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003e0e:	8b 40 08             	mov    0x8(%eax),%eax
81003e11:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e14:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e17:	83 c8 01             	or     $0x1,%eax
81003e1a:	89 c2                	mov    %eax,%edx
81003e1c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e1f:	89 50 04             	mov    %edx,0x4(%eax)
81003e22:	ba 40 83 00 81       	mov    $0x81008340,%edx
81003e27:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003e2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003e2d:	01 c8                	add    %ecx,%eax
81003e2f:	89 42 08             	mov    %eax,0x8(%edx)
81003e32:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e35:	83 c8 01             	or     $0x1,%eax
81003e38:	89 c2                	mov    %eax,%edx
81003e3a:	b8 40 83 00 81       	mov    $0x81008340,%eax
81003e3f:	8b 40 08             	mov    0x8(%eax),%eax
81003e42:	89 50 04             	mov    %edx,0x4(%eax)
81003e45:	83 ec 0c             	sub    $0xc,%esp
81003e48:	ff 75 08             	push   0x8(%ebp)
81003e4b:	e8 ce 01 00 00       	call   8100401e <__malloc_unlock>
81003e50:	83 c4 10             	add    $0x10,%esp
81003e53:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e56:	83 c0 08             	add    $0x8,%eax
81003e59:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003e5c:	c9                   	leave  
81003e5d:	c3                   	ret    
81003e5e:	66 90                	xchg   %ax,%ax

81003e60 <memchr>:
81003e60:	55                   	push   %ebp
81003e61:	89 e5                	mov    %esp,%ebp
81003e63:	57                   	push   %edi
81003e64:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003e68:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003e6b:	8b 7d 08             	mov    0x8(%ebp),%edi
81003e6e:	31 d2                	xor    %edx,%edx
81003e70:	85 c9                	test   %ecx,%ecx
81003e72:	74 79                	je     81003eed <L20>
81003e74:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003e7a:	74 28                	je     81003ea4 <L5>
81003e7c:	3a 07                	cmp    (%edi),%al
81003e7e:	74 6a                	je     81003eea <L15>
81003e80:	47                   	inc    %edi
81003e81:	49                   	dec    %ecx
81003e82:	74 69                	je     81003eed <L20>
81003e84:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003e8a:	74 18                	je     81003ea4 <L5>
81003e8c:	3a 07                	cmp    (%edi),%al
81003e8e:	74 5a                	je     81003eea <L15>
81003e90:	47                   	inc    %edi
81003e91:	49                   	dec    %ecx
81003e92:	74 59                	je     81003eed <L20>
81003e94:	f7 c7 03 00 00 00    	test   $0x3,%edi
81003e9a:	74 08                	je     81003ea4 <L5>
81003e9c:	3a 07                	cmp    (%edi),%al
81003e9e:	74 4a                	je     81003eea <L15>
81003ea0:	47                   	inc    %edi
81003ea1:	49                   	dec    %ecx
81003ea2:	74 49                	je     81003eed <L20>

81003ea4 <L5>:
81003ea4:	88 c4                	mov    %al,%ah
81003ea6:	89 c2                	mov    %eax,%edx
81003ea8:	c1 e2 10             	shl    $0x10,%edx
81003eab:	09 d0                	or     %edx,%eax
81003ead:	53                   	push   %ebx
81003eae:	66 90                	xchg   %ax,%ax

81003eb0 <L8>:
81003eb0:	83 e9 04             	sub    $0x4,%ecx
81003eb3:	72 1c                	jb     81003ed1 <L9>
81003eb5:	8b 17                	mov    (%edi),%edx
81003eb7:	83 c7 04             	add    $0x4,%edi
81003eba:	31 c2                	xor    %eax,%edx
81003ebc:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003ec2:	f7 d2                	not    %edx
81003ec4:	21 d3                	and    %edx,%ebx
81003ec6:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81003ecc:	74 e2                	je     81003eb0 <L8>
81003ece:	83 ef 04             	sub    $0x4,%edi

81003ed1 <L9>:
81003ed1:	5b                   	pop    %ebx
81003ed2:	31 d2                	xor    %edx,%edx
81003ed4:	83 c1 04             	add    $0x4,%ecx
81003ed7:	74 14                	je     81003eed <L20>
81003ed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003ee0 <L10>:
81003ee0:	3a 07                	cmp    (%edi),%al
81003ee2:	74 06                	je     81003eea <L15>
81003ee4:	47                   	inc    %edi
81003ee5:	49                   	dec    %ecx
81003ee6:	75 f8                	jne    81003ee0 <L10>
81003ee8:	31 ff                	xor    %edi,%edi

81003eea <L15>:
81003eea:	4a                   	dec    %edx
81003eeb:	21 fa                	and    %edi,%edx

81003eed <L20>:
81003eed:	89 d0                	mov    %edx,%eax
81003eef:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003ef2:	5f                   	pop    %edi
81003ef3:	c9                   	leave  
81003ef4:	c3                   	ret    

81003ef5 <memcmp>:
81003ef5:	55                   	push   %ebp
81003ef6:	89 e5                	mov    %esp,%ebp
81003ef8:	83 ec 10             	sub    $0x10,%esp
81003efb:	53                   	push   %ebx
81003efc:	57                   	push   %edi
81003efd:	56                   	push   %esi
81003efe:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f01:	8b 75 0c             	mov    0xc(%ebp),%esi
81003f04:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f07:	fc                   	cld    
81003f08:	31 c0                	xor    %eax,%eax
81003f0a:	85 c9                	test   %ecx,%ecx
81003f0c:	74 31                	je     81003f3f <L4>
81003f0e:	89 f8                	mov    %edi,%eax
81003f10:	09 f0                	or     %esi,%eax
81003f12:	a8 03                	test   $0x3,%al
81003f14:	75 1b                	jne    81003f31 <BYTECMP>
81003f16:	89 cb                	mov    %ecx,%ebx
81003f18:	c1 e9 02             	shr    $0x2,%ecx
81003f1b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81003f1d:	74 0d                	je     81003f2c <L5>
81003f1f:	83 ee 04             	sub    $0x4,%esi
81003f22:	83 ef 04             	sub    $0x4,%edi
81003f25:	b9 04 00 00 00       	mov    $0x4,%ecx
81003f2a:	eb 05                	jmp    81003f31 <BYTECMP>

81003f2c <L5>:
81003f2c:	83 e3 03             	and    $0x3,%ebx
81003f2f:	89 d9                	mov    %ebx,%ecx

81003f31 <BYTECMP>:
81003f31:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81003f33 <L3>:
81003f33:	31 d2                	xor    %edx,%edx
81003f35:	8a 56 ff             	mov    -0x1(%esi),%dl
81003f38:	31 c0                	xor    %eax,%eax
81003f3a:	8a 47 ff             	mov    -0x1(%edi),%al
81003f3d:	29 d0                	sub    %edx,%eax

81003f3f <L4>:
81003f3f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81003f42:	5e                   	pop    %esi
81003f43:	5f                   	pop    %edi
81003f44:	5b                   	pop    %ebx
81003f45:	c9                   	leave  
81003f46:	c3                   	ret    
81003f47:	90                   	nop

81003f48 <memcpy>:
81003f48:	55                   	push   %ebp
81003f49:	89 e5                	mov    %esp,%ebp
81003f4b:	56                   	push   %esi
81003f4c:	57                   	push   %edi
81003f4d:	53                   	push   %ebx
81003f4e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f51:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f54:	8b 75 0c             	mov    0xc(%ebp),%esi
81003f57:	fc                   	cld    
81003f58:	83 f9 08             	cmp    $0x8,%ecx
81003f5b:	76 26                	jbe    81003f83 <memcpy+0x3b>
81003f5d:	89 fa                	mov    %edi,%edx
81003f5f:	89 cb                	mov    %ecx,%ebx
81003f61:	83 e2 03             	and    $0x3,%edx
81003f64:	74 10                	je     81003f76 <memcpy+0x2e>
81003f66:	b9 04 00 00 00       	mov    $0x4,%ecx
81003f6b:	29 d1                	sub    %edx,%ecx
81003f6d:	83 e1 03             	and    $0x3,%ecx
81003f70:	29 cb                	sub    %ecx,%ebx
81003f72:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003f74:	89 d9                	mov    %ebx,%ecx
81003f76:	c1 e9 02             	shr    $0x2,%ecx
81003f79:	8d 76 00             	lea    0x0(%esi),%esi
81003f7c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81003f7e:	89 d9                	mov    %ebx,%ecx
81003f80:	83 e1 03             	and    $0x3,%ecx
81003f83:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003f85:	8b 45 08             	mov    0x8(%ebp),%eax
81003f88:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003f8b:	5b                   	pop    %ebx
81003f8c:	5f                   	pop    %edi
81003f8d:	5e                   	pop    %esi
81003f8e:	c9                   	leave  
81003f8f:	c3                   	ret    

81003f90 <memset>:
81003f90:	55                   	push   %ebp
81003f91:	89 e5                	mov    %esp,%ebp
81003f93:	57                   	push   %edi
81003f94:	8b 7d 08             	mov    0x8(%ebp),%edi
81003f97:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81003f9b:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003f9e:	fc                   	cld    
81003f9f:	83 f9 10             	cmp    $0x10,%ecx
81003fa2:	76 69                	jbe    8100400d <memset+0x7d>
81003fa4:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003faa:	74 4c                	je     81003ff8 <memset+0x68>
81003fac:	88 07                	mov    %al,(%edi)
81003fae:	47                   	inc    %edi
81003faf:	49                   	dec    %ecx
81003fb0:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003fb6:	74 40                	je     81003ff8 <memset+0x68>
81003fb8:	88 07                	mov    %al,(%edi)
81003fba:	47                   	inc    %edi
81003fbb:	49                   	dec    %ecx
81003fbc:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003fc2:	74 34                	je     81003ff8 <memset+0x68>
81003fc4:	88 07                	mov    %al,(%edi)
81003fc6:	47                   	inc    %edi
81003fc7:	49                   	dec    %ecx
81003fc8:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003fce:	74 28                	je     81003ff8 <memset+0x68>
81003fd0:	88 07                	mov    %al,(%edi)
81003fd2:	47                   	inc    %edi
81003fd3:	49                   	dec    %ecx
81003fd4:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003fda:	74 1c                	je     81003ff8 <memset+0x68>
81003fdc:	88 07                	mov    %al,(%edi)
81003fde:	47                   	inc    %edi
81003fdf:	49                   	dec    %ecx
81003fe0:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003fe6:	74 10                	je     81003ff8 <memset+0x68>
81003fe8:	88 07                	mov    %al,(%edi)
81003fea:	47                   	inc    %edi
81003feb:	49                   	dec    %ecx
81003fec:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003ff2:	74 04                	je     81003ff8 <memset+0x68>
81003ff4:	88 07                	mov    %al,(%edi)
81003ff6:	47                   	inc    %edi
81003ff7:	49                   	dec    %ecx
81003ff8:	88 c4                	mov    %al,%ah
81003ffa:	89 c2                	mov    %eax,%edx
81003ffc:	c1 e2 10             	shl    $0x10,%edx
81003fff:	09 d0                	or     %edx,%eax
81004001:	89 ca                	mov    %ecx,%edx
81004003:	c1 e9 02             	shr    $0x2,%ecx
81004006:	83 e2 03             	and    $0x3,%edx
81004009:	f3 ab                	rep stos %eax,%es:(%edi)
8100400b:	89 d1                	mov    %edx,%ecx
8100400d:	f3 aa                	rep stos %al,%es:(%edi)
8100400f:	8b 45 08             	mov    0x8(%ebp),%eax
81004012:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004015:	5f                   	pop    %edi
81004016:	c9                   	leave  
81004017:	c3                   	ret    

81004018 <__malloc_lock>:
81004018:	55                   	push   %ebp
81004019:	89 e5                	mov    %esp,%ebp
8100401b:	90                   	nop
8100401c:	5d                   	pop    %ebp
8100401d:	c3                   	ret    

8100401e <__malloc_unlock>:
8100401e:	55                   	push   %ebp
8100401f:	89 e5                	mov    %esp,%ebp
81004021:	90                   	nop
81004022:	5d                   	pop    %ebp
81004023:	c3                   	ret    

81004024 <__sprint_r>:
81004024:	55                   	push   %ebp
81004025:	89 e5                	mov    %esp,%ebp
81004027:	56                   	push   %esi
81004028:	53                   	push   %ebx
81004029:	83 ec 10             	sub    $0x10,%esp
8100402c:	8b 5d 10             	mov    0x10(%ebp),%ebx
8100402f:	be 00 00 00 00       	mov    $0x0,%esi
81004034:	8b 43 08             	mov    0x8(%ebx),%eax
81004037:	85 c0                	test   %eax,%eax
81004039:	75 11                	jne    8100404c <__sprint_r+0x28>
8100403b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004042:	b8 00 00 00 00       	mov    $0x0,%eax
81004047:	e9 ad 00 00 00       	jmp    810040f9 <__sprint_r+0xd5>
8100404c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100404f:	8b 40 64             	mov    0x64(%eax),%eax
81004052:	25 00 20 00 00       	and    $0x2000,%eax
81004057:	85 c0                	test   %eax,%eax
81004059:	74 7a                	je     810040d5 <__sprint_r+0xb1>
8100405b:	8b 03                	mov    (%ebx),%eax
8100405d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004060:	eb 6a                	jmp    810040cc <__sprint_r+0xa8>
81004062:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004065:	8b 00                	mov    (%eax),%eax
81004067:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100406a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100406d:	8b 40 04             	mov    0x4(%eax),%eax
81004070:	c1 e8 02             	shr    $0x2,%eax
81004073:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004076:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100407d:	eb 33                	jmp    810040b2 <__sprint_r+0x8e>
8100407f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004082:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004089:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100408c:	01 d0                	add    %edx,%eax
8100408e:	8b 00                	mov    (%eax),%eax
81004090:	83 ec 04             	sub    $0x4,%esp
81004093:	ff 75 0c             	push   0xc(%ebp)
81004096:	50                   	push   %eax
81004097:	ff 75 08             	push   0x8(%ebp)
8100409a:	e8 8c 20 00 00       	call   8100612b <_fputwc_r>
8100409f:	83 c4 10             	add    $0x10,%esp
810040a2:	83 f8 ff             	cmp    $0xffffffff,%eax
810040a5:	75 07                	jne    810040ae <__sprint_r+0x8a>
810040a7:	be ff ff ff ff       	mov    $0xffffffff,%esi
810040ac:	eb 3b                	jmp    810040e9 <__sprint_r+0xc5>
810040ae:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810040b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040b5:	3b 45 e8             	cmp    -0x18(%ebp),%eax
810040b8:	7c c5                	jl     8100407f <__sprint_r+0x5b>
810040ba:	8b 43 08             	mov    0x8(%ebx),%eax
810040bd:	8b 55 e8             	mov    -0x18(%ebp),%edx
810040c0:	c1 e2 02             	shl    $0x2,%edx
810040c3:	29 d0                	sub    %edx,%eax
810040c5:	89 43 08             	mov    %eax,0x8(%ebx)
810040c8:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
810040cc:	8b 43 08             	mov    0x8(%ebx),%eax
810040cf:	85 c0                	test   %eax,%eax
810040d1:	75 8f                	jne    81004062 <__sprint_r+0x3e>
810040d3:	eb 14                	jmp    810040e9 <__sprint_r+0xc5>
810040d5:	83 ec 04             	sub    $0x4,%esp
810040d8:	53                   	push   %ebx
810040d9:	ff 75 0c             	push   0xc(%ebp)
810040dc:	ff 75 08             	push   0x8(%ebp)
810040df:	e8 e6 20 00 00       	call   810061ca <__sfvwrite_r>
810040e4:	83 c4 10             	add    $0x10,%esp
810040e7:	89 c6                	mov    %eax,%esi
810040e9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810040f0:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810040f7:	89 f0                	mov    %esi,%eax
810040f9:	8d 65 f8             	lea    -0x8(%ebp),%esp
810040fc:	5b                   	pop    %ebx
810040fd:	5e                   	pop    %esi
810040fe:	5d                   	pop    %ebp
810040ff:	c3                   	ret    

81004100 <__sfputc_r>:
81004100:	55                   	push   %ebp
81004101:	89 e5                	mov    %esp,%ebp
81004103:	83 ec 08             	sub    $0x8,%esp
81004106:	8b 45 10             	mov    0x10(%ebp),%eax
81004109:	8b 40 08             	mov    0x8(%eax),%eax
8100410c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100410f:	8b 45 10             	mov    0x10(%ebp),%eax
81004112:	89 50 08             	mov    %edx,0x8(%eax)
81004115:	8b 45 10             	mov    0x10(%ebp),%eax
81004118:	8b 40 08             	mov    0x8(%eax),%eax
8100411b:	85 c0                	test   %eax,%eax
8100411d:	79 17                	jns    81004136 <__sfputc_r+0x36>
8100411f:	8b 45 10             	mov    0x10(%ebp),%eax
81004122:	8b 50 08             	mov    0x8(%eax),%edx
81004125:	8b 45 10             	mov    0x10(%ebp),%eax
81004128:	8b 40 18             	mov    0x18(%eax),%eax
8100412b:	39 c2                	cmp    %eax,%edx
8100412d:	7c 21                	jl     81004150 <__sfputc_r+0x50>
8100412f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004132:	3c 0a                	cmp    $0xa,%al
81004134:	74 1a                	je     81004150 <__sfputc_r+0x50>
81004136:	8b 45 10             	mov    0x10(%ebp),%eax
81004139:	8b 00                	mov    (%eax),%eax
8100413b:	8d 48 01             	lea    0x1(%eax),%ecx
8100413e:	8b 55 10             	mov    0x10(%ebp),%edx
81004141:	89 0a                	mov    %ecx,(%edx)
81004143:	8b 55 0c             	mov    0xc(%ebp),%edx
81004146:	88 10                	mov    %dl,(%eax)
81004148:	0f b6 00             	movzbl (%eax),%eax
8100414b:	0f b6 c0             	movzbl %al,%eax
8100414e:	eb 14                	jmp    81004164 <__sfputc_r+0x64>
81004150:	83 ec 04             	sub    $0x4,%esp
81004153:	ff 75 10             	push   0x10(%ebp)
81004156:	ff 75 0c             	push   0xc(%ebp)
81004159:	ff 75 08             	push   0x8(%ebp)
8100415c:	e8 6e 18 00 00       	call   810059cf <__swbuf_r>
81004161:	83 c4 10             	add    $0x10,%esp
81004164:	c9                   	leave  
81004165:	c3                   	ret    

81004166 <__sfputs_r>:
81004166:	55                   	push   %ebp
81004167:	89 e5                	mov    %esp,%ebp
81004169:	53                   	push   %ebx
8100416a:	83 ec 14             	sub    $0x14,%esp
8100416d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004170:	8b 40 64             	mov    0x64(%eax),%eax
81004173:	25 00 20 00 00       	and    $0x2000,%eax
81004178:	85 c0                	test   %eax,%eax
8100417a:	74 4c                	je     810041c8 <__sfputs_r+0x62>
8100417c:	8b 45 10             	mov    0x10(%ebp),%eax
8100417f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004182:	bb 00 00 00 00       	mov    $0x0,%ebx
81004187:	eb 31                	jmp    810041ba <__sfputs_r+0x54>
81004189:	89 d8                	mov    %ebx,%eax
8100418b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004192:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004195:	01 d0                	add    %edx,%eax
81004197:	8b 00                	mov    (%eax),%eax
81004199:	83 ec 04             	sub    $0x4,%esp
8100419c:	ff 75 0c             	push   0xc(%ebp)
8100419f:	50                   	push   %eax
810041a0:	ff 75 08             	push   0x8(%ebp)
810041a3:	e8 83 1f 00 00       	call   8100612b <_fputwc_r>
810041a8:	83 c4 10             	add    $0x10,%esp
810041ab:	83 f8 ff             	cmp    $0xffffffff,%eax
810041ae:	75 07                	jne    810041b7 <__sfputs_r+0x51>
810041b0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041b5:	eb 52                	jmp    81004209 <__sfputs_r+0xa3>
810041b7:	83 c3 01             	add    $0x1,%ebx
810041ba:	8b 45 14             	mov    0x14(%ebp),%eax
810041bd:	c1 e8 02             	shr    $0x2,%eax
810041c0:	89 da                	mov    %ebx,%edx
810041c2:	39 d0                	cmp    %edx,%eax
810041c4:	77 c3                	ja     81004189 <__sfputs_r+0x23>
810041c6:	eb 3c                	jmp    81004204 <__sfputs_r+0x9e>
810041c8:	bb 00 00 00 00       	mov    $0x0,%ebx
810041cd:	eb 2e                	jmp    810041fd <__sfputs_r+0x97>
810041cf:	89 da                	mov    %ebx,%edx
810041d1:	8b 45 10             	mov    0x10(%ebp),%eax
810041d4:	01 d0                	add    %edx,%eax
810041d6:	0f b6 00             	movzbl (%eax),%eax
810041d9:	0f be c0             	movsbl %al,%eax
810041dc:	83 ec 04             	sub    $0x4,%esp
810041df:	ff 75 0c             	push   0xc(%ebp)
810041e2:	50                   	push   %eax
810041e3:	ff 75 08             	push   0x8(%ebp)
810041e6:	e8 15 ff ff ff       	call   81004100 <__sfputc_r>
810041eb:	83 c4 10             	add    $0x10,%esp
810041ee:	83 f8 ff             	cmp    $0xffffffff,%eax
810041f1:	75 07                	jne    810041fa <__sfputs_r+0x94>
810041f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041f8:	eb 0f                	jmp    81004209 <__sfputs_r+0xa3>
810041fa:	83 c3 01             	add    $0x1,%ebx
810041fd:	89 d8                	mov    %ebx,%eax
810041ff:	39 45 14             	cmp    %eax,0x14(%ebp)
81004202:	77 cb                	ja     810041cf <__sfputs_r+0x69>
81004204:	b8 00 00 00 00       	mov    $0x0,%eax
81004209:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100420c:	c9                   	leave  
8100420d:	c3                   	ret    

8100420e <vfiprintf>:
8100420e:	55                   	push   %ebp
8100420f:	89 e5                	mov    %esp,%ebp
81004211:	83 ec 18             	sub    $0x18,%esp
81004214:	a1 24 83 00 81       	mov    0x81008324,%eax
81004219:	ff 75 10             	push   0x10(%ebp)
8100421c:	ff 75 0c             	push   0xc(%ebp)
8100421f:	ff 75 08             	push   0x8(%ebp)
81004222:	50                   	push   %eax
81004223:	e8 0b 00 00 00       	call   81004233 <_vfiprintf_r>
81004228:	83 c4 10             	add    $0x10,%esp
8100422b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100422e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004231:	c9                   	leave  
81004232:	c3                   	ret    

81004233 <_vfiprintf_r>:
81004233:	55                   	push   %ebp
81004234:	89 e5                	mov    %esp,%ebp
81004236:	57                   	push   %edi
81004237:	56                   	push   %esi
81004238:	53                   	push   %ebx
81004239:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
8100423f:	c7 45 e4 66 41 00 81 	movl   $0x81004166,-0x1c(%ebp)
81004246:	8b 45 08             	mov    0x8(%ebp),%eax
81004249:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100424c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004250:	74 18                	je     8100426a <_vfiprintf_r+0x37>
81004252:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004255:	8b 40 38             	mov    0x38(%eax),%eax
81004258:	85 c0                	test   %eax,%eax
8100425a:	75 0e                	jne    8100426a <_vfiprintf_r+0x37>
8100425c:	83 ec 0c             	sub    $0xc,%esp
8100425f:	ff 75 e0             	push   -0x20(%ebp)
81004262:	e8 bc d2 ff ff       	call   81001523 <__sinit>
81004267:	83 c4 10             	add    $0x10,%esp
8100426a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100426d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004271:	98                   	cwtl   
81004272:	83 e0 08             	and    $0x8,%eax
81004275:	85 c0                	test   %eax,%eax
81004277:	74 0a                	je     81004283 <_vfiprintf_r+0x50>
81004279:	8b 45 0c             	mov    0xc(%ebp),%eax
8100427c:	8b 40 10             	mov    0x10(%eax),%eax
8100427f:	85 c0                	test   %eax,%eax
81004281:	75 1f                	jne    810042a2 <_vfiprintf_r+0x6f>
81004283:	83 ec 08             	sub    $0x8,%esp
81004286:	ff 75 0c             	push   0xc(%ebp)
81004289:	ff 75 08             	push   0x8(%ebp)
8100428c:	e8 b7 18 00 00       	call   81005b48 <__swsetup_r>
81004291:	83 c4 10             	add    $0x10,%esp
81004294:	85 c0                	test   %eax,%eax
81004296:	74 0a                	je     810042a2 <_vfiprintf_r+0x6f>
81004298:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100429d:	e9 df 02 00 00       	jmp    81004581 <_vfiprintf_r+0x34e>
810042a2:	8b 5d 10             	mov    0x10(%ebp),%ebx
810042a5:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
810042ac:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
810042b0:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
810042b4:	8b 45 14             	mov    0x14(%ebp),%eax
810042b7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810042bd:	89 de                	mov    %ebx,%esi
810042bf:	eb 03                	jmp    810042c4 <_vfiprintf_r+0x91>
810042c1:	83 c3 01             	add    $0x1,%ebx
810042c4:	0f b6 03             	movzbl (%ebx),%eax
810042c7:	84 c0                	test   %al,%al
810042c9:	74 07                	je     810042d2 <_vfiprintf_r+0x9f>
810042cb:	0f b6 03             	movzbl (%ebx),%eax
810042ce:	3c 25                	cmp    $0x25,%al
810042d0:	75 ef                	jne    810042c1 <_vfiprintf_r+0x8e>
810042d2:	89 d8                	mov    %ebx,%eax
810042d4:	29 f0                	sub    %esi,%eax
810042d6:	85 c0                	test   %eax,%eax
810042d8:	74 2b                	je     81004305 <_vfiprintf_r+0xd2>
810042da:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
810042e0:	50                   	push   %eax
810042e1:	56                   	push   %esi
810042e2:	ff 75 0c             	push   0xc(%ebp)
810042e5:	ff 75 08             	push   0x8(%ebp)
810042e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810042eb:	ff d0                	call   *%eax
810042ed:	83 c4 10             	add    $0x10,%esp
810042f0:	83 f8 ff             	cmp    $0xffffffff,%eax
810042f3:	0f 84 68 02 00 00    	je     81004561 <_vfiprintf_r+0x32e>
810042f9:	8b 45 94             	mov    -0x6c(%ebp),%eax
810042fc:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004302:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004305:	0f b6 03             	movzbl (%ebx),%eax
81004308:	84 c0                	test   %al,%al
8100430a:	0f 84 54 02 00 00    	je     81004564 <_vfiprintf_r+0x331>
81004310:	83 c3 01             	add    $0x1,%ebx
81004313:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
8100431a:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004321:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004328:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
8100432f:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004333:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
8100433a:	c7 45 dc 7c 7b 00 81 	movl   $0x81007b7c,-0x24(%ebp)
81004341:	eb 1b                	jmp    8100435e <_vfiprintf_r+0x12b>
81004343:	8b 55 80             	mov    -0x80(%ebp),%edx
81004346:	89 f0                	mov    %esi,%eax
81004348:	2b 45 dc             	sub    -0x24(%ebp),%eax
8100434b:	be 01 00 00 00       	mov    $0x1,%esi
81004350:	89 c1                	mov    %eax,%ecx
81004352:	d3 e6                	shl    %cl,%esi
81004354:	89 f0                	mov    %esi,%eax
81004356:	09 d0                	or     %edx,%eax
81004358:	89 45 80             	mov    %eax,-0x80(%ebp)
8100435b:	83 c3 01             	add    $0x1,%ebx
8100435e:	0f b6 03             	movzbl (%ebx),%eax
81004361:	0f be c0             	movsbl %al,%eax
81004364:	83 ec 04             	sub    $0x4,%esp
81004367:	6a 05                	push   $0x5
81004369:	50                   	push   %eax
8100436a:	ff 75 dc             	push   -0x24(%ebp)
8100436d:	e8 ee fa ff ff       	call   81003e60 <memchr>
81004372:	83 c4 10             	add    $0x10,%esp
81004375:	89 c6                	mov    %eax,%esi
81004377:	85 f6                	test   %esi,%esi
81004379:	75 c8                	jne    81004343 <_vfiprintf_r+0x110>
8100437b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100437e:	83 e0 10             	and    $0x10,%eax
81004381:	85 c0                	test   %eax,%eax
81004383:	74 04                	je     81004389 <_vfiprintf_r+0x156>
81004385:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004389:	8b 45 80             	mov    -0x80(%ebp),%eax
8100438c:	83 e0 08             	and    $0x8,%eax
8100438f:	85 c0                	test   %eax,%eax
81004391:	74 04                	je     81004397 <_vfiprintf_r+0x164>
81004393:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004397:	0f b6 03             	movzbl (%ebx),%eax
8100439a:	3c 2a                	cmp    $0x2a,%al
8100439c:	75 50                	jne    810043ee <_vfiprintf_r+0x1bb>
8100439e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810043a4:	8d 50 04             	lea    0x4(%eax),%edx
810043a7:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810043ad:	8b 00                	mov    (%eax),%eax
810043af:	89 45 8c             	mov    %eax,-0x74(%ebp)
810043b2:	8b 45 8c             	mov    -0x74(%ebp),%eax
810043b5:	85 c0                	test   %eax,%eax
810043b7:	79 11                	jns    810043ca <_vfiprintf_r+0x197>
810043b9:	8b 45 8c             	mov    -0x74(%ebp),%eax
810043bc:	f7 d8                	neg    %eax
810043be:	89 45 8c             	mov    %eax,-0x74(%ebp)
810043c1:	8b 45 80             	mov    -0x80(%ebp),%eax
810043c4:	83 c8 02             	or     $0x2,%eax
810043c7:	89 45 80             	mov    %eax,-0x80(%ebp)
810043ca:	83 c3 01             	add    $0x1,%ebx
810043cd:	eb 2d                	jmp    810043fc <_vfiprintf_r+0x1c9>
810043cf:	8b 55 8c             	mov    -0x74(%ebp),%edx
810043d2:	89 d0                	mov    %edx,%eax
810043d4:	c1 e0 02             	shl    $0x2,%eax
810043d7:	01 d0                	add    %edx,%eax
810043d9:	01 c0                	add    %eax,%eax
810043db:	89 c2                	mov    %eax,%edx
810043dd:	0f b6 03             	movzbl (%ebx),%eax
810043e0:	0f be c0             	movsbl %al,%eax
810043e3:	83 e8 30             	sub    $0x30,%eax
810043e6:	01 d0                	add    %edx,%eax
810043e8:	89 45 8c             	mov    %eax,-0x74(%ebp)
810043eb:	83 c3 01             	add    $0x1,%ebx
810043ee:	0f b6 03             	movzbl (%ebx),%eax
810043f1:	0f be c0             	movsbl %al,%eax
810043f4:	83 e8 30             	sub    $0x30,%eax
810043f7:	83 f8 09             	cmp    $0x9,%eax
810043fa:	76 d3                	jbe    810043cf <_vfiprintf_r+0x19c>
810043fc:	0f b6 03             	movzbl (%ebx),%eax
810043ff:	3c 2e                	cmp    $0x2e,%al
81004401:	75 67                	jne    8100446a <_vfiprintf_r+0x237>
81004403:	83 c3 01             	add    $0x1,%ebx
81004406:	0f b6 03             	movzbl (%ebx),%eax
81004409:	3c 2a                	cmp    $0x2a,%al
8100440b:	75 27                	jne    81004434 <_vfiprintf_r+0x201>
8100440d:	83 c3 01             	add    $0x1,%ebx
81004410:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004416:	8d 50 04             	lea    0x4(%eax),%edx
81004419:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100441f:	8b 00                	mov    (%eax),%eax
81004421:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004424:	8b 45 84             	mov    -0x7c(%ebp),%eax
81004427:	85 c0                	test   %eax,%eax
81004429:	79 3f                	jns    8100446a <_vfiprintf_r+0x237>
8100442b:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004432:	eb 36                	jmp    8100446a <_vfiprintf_r+0x237>
81004434:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
8100443b:	eb 1f                	jmp    8100445c <_vfiprintf_r+0x229>
8100443d:	8b 55 84             	mov    -0x7c(%ebp),%edx
81004440:	89 d0                	mov    %edx,%eax
81004442:	c1 e0 02             	shl    $0x2,%eax
81004445:	01 d0                	add    %edx,%eax
81004447:	01 c0                	add    %eax,%eax
81004449:	89 c2                	mov    %eax,%edx
8100444b:	0f b6 03             	movzbl (%ebx),%eax
8100444e:	0f be c0             	movsbl %al,%eax
81004451:	83 e8 30             	sub    $0x30,%eax
81004454:	01 d0                	add    %edx,%eax
81004456:	89 45 84             	mov    %eax,-0x7c(%ebp)
81004459:	83 c3 01             	add    $0x1,%ebx
8100445c:	0f b6 03             	movzbl (%ebx),%eax
8100445f:	0f be c0             	movsbl %al,%eax
81004462:	83 e8 30             	sub    $0x30,%eax
81004465:	83 f8 09             	cmp    $0x9,%eax
81004468:	76 d3                	jbe    8100443d <_vfiprintf_r+0x20a>
8100446a:	c7 45 dc 82 7b 00 81 	movl   $0x81007b82,-0x24(%ebp)
81004471:	0f b6 03             	movzbl (%ebx),%eax
81004474:	0f be c0             	movsbl %al,%eax
81004477:	83 ec 04             	sub    $0x4,%esp
8100447a:	6a 03                	push   $0x3
8100447c:	50                   	push   %eax
8100447d:	ff 75 dc             	push   -0x24(%ebp)
81004480:	e8 db f9 ff ff       	call   81003e60 <memchr>
81004485:	83 c4 10             	add    $0x10,%esp
81004488:	89 c6                	mov    %eax,%esi
8100448a:	85 f6                	test   %esi,%esi
8100448c:	74 1b                	je     810044a9 <_vfiprintf_r+0x276>
8100448e:	8b 55 80             	mov    -0x80(%ebp),%edx
81004491:	89 f0                	mov    %esi,%eax
81004493:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004496:	be 40 00 00 00       	mov    $0x40,%esi
8100449b:	89 c1                	mov    %eax,%ecx
8100449d:	d3 e6                	shl    %cl,%esi
8100449f:	89 f0                	mov    %esi,%eax
810044a1:	09 d0                	or     %edx,%eax
810044a3:	89 45 80             	mov    %eax,-0x80(%ebp)
810044a6:	83 c3 01             	add    $0x1,%ebx
810044a9:	89 d8                	mov    %ebx,%eax
810044ab:	8d 58 01             	lea    0x1(%eax),%ebx
810044ae:	0f b6 00             	movzbl (%eax),%eax
810044b1:	88 45 98             	mov    %al,-0x68(%ebp)
810044b4:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810044b8:	0f be c0             	movsbl %al,%eax
810044bb:	83 ec 04             	sub    $0x4,%esp
810044be:	6a 06                	push   $0x6
810044c0:	50                   	push   %eax
810044c1:	68 86 7b 00 81       	push   $0x81007b86
810044c6:	e8 95 f9 ff ff       	call   81003e60 <memchr>
810044cb:	83 c4 10             	add    $0x10,%esp
810044ce:	89 c6                	mov    %eax,%esi
810044d0:	85 f6                	test   %esi,%esi
810044d2:	74 5a                	je     8100452e <_vfiprintf_r+0x2fb>
810044d4:	b8 00 00 00 00       	mov    $0x0,%eax
810044d9:	85 c0                	test   %eax,%eax
810044db:	75 2e                	jne    8100450b <_vfiprintf_r+0x2d8>
810044dd:	8b 45 80             	mov    -0x80(%ebp),%eax
810044e0:	25 00 01 00 00       	and    $0x100,%eax
810044e5:	85 c0                	test   %eax,%eax
810044e7:	74 11                	je     810044fa <_vfiprintf_r+0x2c7>
810044e9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810044ef:	83 c0 0c             	add    $0xc,%eax
810044f2:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810044f8:	eb 55                	jmp    8100454f <_vfiprintf_r+0x31c>
810044fa:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004500:	83 c0 08             	add    $0x8,%eax
81004503:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004509:	eb 44                	jmp    8100454f <_vfiprintf_r+0x31c>
8100450b:	83 ec 0c             	sub    $0xc,%esp
8100450e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004514:	50                   	push   %eax
81004515:	ff 75 e4             	push   -0x1c(%ebp)
81004518:	ff 75 0c             	push   0xc(%ebp)
8100451b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100451e:	50                   	push   %eax
8100451f:	ff 75 08             	push   0x8(%ebp)
81004522:	e8 d9 ba ff 7e       	call   0 <do_help-0x81000000>
81004527:	83 c4 20             	add    $0x20,%esp
8100452a:	89 c7                	mov    %eax,%edi
8100452c:	eb 21                	jmp    8100454f <_vfiprintf_r+0x31c>
8100452e:	83 ec 0c             	sub    $0xc,%esp
81004531:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81004537:	50                   	push   %eax
81004538:	ff 75 e4             	push   -0x1c(%ebp)
8100453b:	ff 75 0c             	push   0xc(%ebp)
8100453e:	8d 45 80             	lea    -0x80(%ebp),%eax
81004541:	50                   	push   %eax
81004542:	ff 75 08             	push   0x8(%ebp)
81004545:	e8 da 01 00 00       	call   81004724 <_printf_i>
8100454a:	83 c4 20             	add    $0x20,%esp
8100454d:	89 c7                	mov    %eax,%edi
8100454f:	83 ff ff             	cmp    $0xffffffff,%edi
81004552:	74 13                	je     81004567 <_vfiprintf_r+0x334>
81004554:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004557:	01 f8                	add    %edi,%eax
81004559:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100455c:	e9 5c fd ff ff       	jmp    810042bd <_vfiprintf_r+0x8a>
81004561:	90                   	nop
81004562:	eb 04                	jmp    81004568 <_vfiprintf_r+0x335>
81004564:	90                   	nop
81004565:	eb 01                	jmp    81004568 <_vfiprintf_r+0x335>
81004567:	90                   	nop
81004568:	8b 45 0c             	mov    0xc(%ebp),%eax
8100456b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100456f:	98                   	cwtl   
81004570:	83 e0 40             	and    $0x40,%eax
81004573:	85 c0                	test   %eax,%eax
81004575:	75 05                	jne    8100457c <_vfiprintf_r+0x349>
81004577:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100457a:	eb 05                	jmp    81004581 <_vfiprintf_r+0x34e>
8100457c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004581:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004584:	5b                   	pop    %ebx
81004585:	5e                   	pop    %esi
81004586:	5f                   	pop    %edi
81004587:	5d                   	pop    %ebp
81004588:	c3                   	ret    

81004589 <_printf_common>:
81004589:	55                   	push   %ebp
8100458a:	89 e5                	mov    %esp,%ebp
8100458c:	83 ec 18             	sub    $0x18,%esp
8100458f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004592:	8b 50 10             	mov    0x10(%eax),%edx
81004595:	8b 45 0c             	mov    0xc(%ebp),%eax
81004598:	8b 40 08             	mov    0x8(%eax),%eax
8100459b:	39 c2                	cmp    %eax,%edx
8100459d:	0f 4c d0             	cmovl  %eax,%edx
810045a0:	8b 45 10             	mov    0x10(%ebp),%eax
810045a3:	89 10                	mov    %edx,(%eax)
810045a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810045a8:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810045ac:	84 c0                	test   %al,%al
810045ae:	74 0d                	je     810045bd <_printf_common+0x34>
810045b0:	8b 45 10             	mov    0x10(%ebp),%eax
810045b3:	8b 00                	mov    (%eax),%eax
810045b5:	8d 50 01             	lea    0x1(%eax),%edx
810045b8:	8b 45 10             	mov    0x10(%ebp),%eax
810045bb:	89 10                	mov    %edx,(%eax)
810045bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810045c0:	8b 00                	mov    (%eax),%eax
810045c2:	83 e0 20             	and    $0x20,%eax
810045c5:	85 c0                	test   %eax,%eax
810045c7:	74 0d                	je     810045d6 <_printf_common+0x4d>
810045c9:	8b 45 10             	mov    0x10(%ebp),%eax
810045cc:	8b 00                	mov    (%eax),%eax
810045ce:	8d 50 02             	lea    0x2(%eax),%edx
810045d1:	8b 45 10             	mov    0x10(%ebp),%eax
810045d4:	89 10                	mov    %edx,(%eax)
810045d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810045d9:	8b 00                	mov    (%eax),%eax
810045db:	83 e0 06             	and    $0x6,%eax
810045de:	85 c0                	test   %eax,%eax
810045e0:	75 41                	jne    81004623 <_printf_common+0x9a>
810045e2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810045e9:	eb 24                	jmp    8100460f <_printf_common+0x86>
810045eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810045ee:	83 c0 19             	add    $0x19,%eax
810045f1:	6a 01                	push   $0x1
810045f3:	50                   	push   %eax
810045f4:	ff 75 14             	push   0x14(%ebp)
810045f7:	ff 75 08             	push   0x8(%ebp)
810045fa:	8b 45 18             	mov    0x18(%ebp),%eax
810045fd:	ff d0                	call   *%eax
810045ff:	83 c4 10             	add    $0x10,%esp
81004602:	83 f8 ff             	cmp    $0xffffffff,%eax
81004605:	0f 84 0b 01 00 00    	je     81004716 <_printf_common+0x18d>
8100460b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100460f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004612:	8b 50 0c             	mov    0xc(%eax),%edx
81004615:	8b 45 10             	mov    0x10(%ebp),%eax
81004618:	8b 08                	mov    (%eax),%ecx
8100461a:	89 d0                	mov    %edx,%eax
8100461c:	29 c8                	sub    %ecx,%eax
8100461e:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81004621:	7c c8                	jl     810045eb <_printf_common+0x62>
81004623:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100462a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100462d:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81004631:	84 c0                	test   %al,%al
81004633:	74 04                	je     81004639 <_printf_common+0xb0>
81004635:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004639:	8b 45 0c             	mov    0xc(%ebp),%eax
8100463c:	8b 00                	mov    (%eax),%eax
8100463e:	83 e0 20             	and    $0x20,%eax
81004641:	85 c0                	test   %eax,%eax
81004643:	74 28                	je     8100466d <_printf_common+0xe4>
81004645:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004648:	8d 50 01             	lea    0x1(%eax),%edx
8100464b:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100464e:	8b 55 0c             	mov    0xc(%ebp),%edx
81004651:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81004656:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004659:	8d 50 01             	lea    0x1(%eax),%edx
8100465c:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100465f:	8b 55 0c             	mov    0xc(%ebp),%edx
81004662:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81004666:	8b 55 0c             	mov    0xc(%ebp),%edx
81004669:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100466d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004670:	8b 55 0c             	mov    0xc(%ebp),%edx
81004673:	83 c2 43             	add    $0x43,%edx
81004676:	50                   	push   %eax
81004677:	52                   	push   %edx
81004678:	ff 75 14             	push   0x14(%ebp)
8100467b:	ff 75 08             	push   0x8(%ebp)
8100467e:	8b 45 18             	mov    0x18(%ebp),%eax
81004681:	ff d0                	call   *%eax
81004683:	83 c4 10             	add    $0x10,%esp
81004686:	83 f8 ff             	cmp    $0xffffffff,%eax
81004689:	0f 84 8a 00 00 00    	je     81004719 <_printf_common+0x190>
8100468f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004692:	8b 50 0c             	mov    0xc(%eax),%edx
81004695:	8b 45 10             	mov    0x10(%ebp),%eax
81004698:	8b 08                	mov    (%eax),%ecx
8100469a:	89 d0                	mov    %edx,%eax
8100469c:	29 c8                	sub    %ecx,%eax
8100469e:	89 45 f4             	mov    %eax,-0xc(%ebp)
810046a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810046a4:	8b 00                	mov    (%eax),%eax
810046a6:	83 e0 06             	and    $0x6,%eax
810046a9:	83 f8 04             	cmp    $0x4,%eax
810046ac:	75 06                	jne    810046b4 <_printf_common+0x12b>
810046ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810046b2:	79 07                	jns    810046bb <_printf_common+0x132>
810046b4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810046bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810046be:	8b 50 08             	mov    0x8(%eax),%edx
810046c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810046c4:	8b 40 10             	mov    0x10(%eax),%eax
810046c7:	39 c2                	cmp    %eax,%edx
810046c9:	7e 13                	jle    810046de <_printf_common+0x155>
810046cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810046ce:	8b 50 08             	mov    0x8(%eax),%edx
810046d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810046d4:	8b 48 10             	mov    0x10(%eax),%ecx
810046d7:	89 d0                	mov    %edx,%eax
810046d9:	29 c8                	sub    %ecx,%eax
810046db:	01 45 f4             	add    %eax,-0xc(%ebp)
810046de:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810046e5:	eb 20                	jmp    81004707 <_printf_common+0x17e>
810046e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810046ea:	83 c0 1a             	add    $0x1a,%eax
810046ed:	6a 01                	push   $0x1
810046ef:	50                   	push   %eax
810046f0:	ff 75 14             	push   0x14(%ebp)
810046f3:	ff 75 08             	push   0x8(%ebp)
810046f6:	8b 45 18             	mov    0x18(%ebp),%eax
810046f9:	ff d0                	call   *%eax
810046fb:	83 c4 10             	add    $0x10,%esp
810046fe:	83 f8 ff             	cmp    $0xffffffff,%eax
81004701:	74 19                	je     8100471c <_printf_common+0x193>
81004703:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81004707:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100470a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100470d:	7c d8                	jl     810046e7 <_printf_common+0x15e>
8100470f:	b8 00 00 00 00       	mov    $0x0,%eax
81004714:	eb 0c                	jmp    81004722 <_printf_common+0x199>
81004716:	90                   	nop
81004717:	eb 04                	jmp    8100471d <_printf_common+0x194>
81004719:	90                   	nop
8100471a:	eb 01                	jmp    8100471d <_printf_common+0x194>
8100471c:	90                   	nop
8100471d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004722:	c9                   	leave  
81004723:	c3                   	ret    

81004724 <_printf_i>:
81004724:	55                   	push   %ebp
81004725:	89 e5                	mov    %esp,%ebp
81004727:	53                   	push   %ebx
81004728:	83 ec 24             	sub    $0x24,%esp
8100472b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100472e:	83 c0 1b             	add    $0x1b,%eax
81004731:	83 c0 28             	add    $0x28,%eax
81004734:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004737:	c7 45 e8 90 7b 00 81 	movl   $0x81007b90,-0x18(%ebp)
8100473e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004741:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81004745:	0f be c0             	movsbl %al,%eax
81004748:	85 c0                	test   %eax,%eax
8100474a:	0f 84 00 03 00 00    	je     81004a50 <_printf_i+0x32c>
81004750:	85 c0                	test   %eax,%eax
81004752:	0f 88 52 03 00 00    	js     81004aaa <_printf_i+0x386>
81004758:	83 f8 78             	cmp    $0x78,%eax
8100475b:	0f 8f 49 03 00 00    	jg     81004aaa <_printf_i+0x386>
81004761:	83 f8 58             	cmp    $0x58,%eax
81004764:	0f 8c 40 03 00 00    	jl     81004aaa <_printf_i+0x386>
8100476a:	83 e8 58             	sub    $0x58,%eax
8100476d:	83 f8 20             	cmp    $0x20,%eax
81004770:	0f 87 34 03 00 00    	ja     81004aaa <_printf_i+0x386>
81004776:	8b 04 85 b4 7b 00 81 	mov    -0x7eff844c(,%eax,4),%eax
8100477d:	ff e0                	jmp    *%eax
8100477f:	8b 45 18             	mov    0x18(%ebp),%eax
81004782:	8b 00                	mov    (%eax),%eax
81004784:	8d 48 04             	lea    0x4(%eax),%ecx
81004787:	8b 55 18             	mov    0x18(%ebp),%edx
8100478a:	89 0a                	mov    %ecx,(%edx)
8100478c:	8b 00                	mov    (%eax),%eax
8100478e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004792:	89 c2                	mov    %eax,%edx
81004794:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004797:	88 10                	mov    %dl,(%eax)
81004799:	8b 45 0c             	mov    0xc(%ebp),%eax
8100479c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810047a3:	e9 1c 03 00 00       	jmp    81004ac4 <_printf_i+0x3a0>
810047a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ab:	8b 00                	mov    (%eax),%eax
810047ad:	25 80 00 00 00       	and    $0x80,%eax
810047b2:	85 c0                	test   %eax,%eax
810047b4:	74 11                	je     810047c7 <_printf_i+0xa3>
810047b6:	8b 45 18             	mov    0x18(%ebp),%eax
810047b9:	8b 00                	mov    (%eax),%eax
810047bb:	8d 48 04             	lea    0x4(%eax),%ecx
810047be:	8b 55 18             	mov    0x18(%ebp),%edx
810047c1:	89 0a                	mov    %ecx,(%edx)
810047c3:	8b 00                	mov    (%eax),%eax
810047c5:	eb 2d                	jmp    810047f4 <_printf_i+0xd0>
810047c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810047ca:	8b 00                	mov    (%eax),%eax
810047cc:	83 e0 40             	and    $0x40,%eax
810047cf:	85 c0                	test   %eax,%eax
810047d1:	74 12                	je     810047e5 <_printf_i+0xc1>
810047d3:	8b 45 18             	mov    0x18(%ebp),%eax
810047d6:	8b 00                	mov    (%eax),%eax
810047d8:	8d 48 04             	lea    0x4(%eax),%ecx
810047db:	8b 55 18             	mov    0x18(%ebp),%edx
810047de:	89 0a                	mov    %ecx,(%edx)
810047e0:	8b 00                	mov    (%eax),%eax
810047e2:	98                   	cwtl   
810047e3:	eb 0f                	jmp    810047f4 <_printf_i+0xd0>
810047e5:	8b 45 18             	mov    0x18(%ebp),%eax
810047e8:	8b 00                	mov    (%eax),%eax
810047ea:	8d 48 04             	lea    0x4(%eax),%ecx
810047ed:	8b 55 18             	mov    0x18(%ebp),%edx
810047f0:	89 0a                	mov    %ecx,(%edx)
810047f2:	8b 00                	mov    (%eax),%eax
810047f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810047f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047fa:	85 c0                	test   %eax,%eax
810047fc:	79 0a                	jns    81004808 <_printf_i+0xe4>
810047fe:	f7 5d f4             	negl   -0xc(%ebp)
81004801:	8b 45 0c             	mov    0xc(%ebp),%eax
81004804:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81004808:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100480f:	e9 28 01 00 00       	jmp    8100493c <_printf_i+0x218>
81004814:	8b 45 0c             	mov    0xc(%ebp),%eax
81004817:	8b 00                	mov    (%eax),%eax
81004819:	25 80 00 00 00       	and    $0x80,%eax
8100481e:	85 c0                	test   %eax,%eax
81004820:	74 11                	je     81004833 <_printf_i+0x10f>
81004822:	8b 45 18             	mov    0x18(%ebp),%eax
81004825:	8b 00                	mov    (%eax),%eax
81004827:	8d 48 04             	lea    0x4(%eax),%ecx
8100482a:	8b 55 18             	mov    0x18(%ebp),%edx
8100482d:	89 0a                	mov    %ecx,(%edx)
8100482f:	8b 00                	mov    (%eax),%eax
81004831:	eb 2f                	jmp    81004862 <_printf_i+0x13e>
81004833:	8b 45 0c             	mov    0xc(%ebp),%eax
81004836:	8b 00                	mov    (%eax),%eax
81004838:	83 e0 40             	and    $0x40,%eax
8100483b:	85 c0                	test   %eax,%eax
8100483d:	74 14                	je     81004853 <_printf_i+0x12f>
8100483f:	8b 45 18             	mov    0x18(%ebp),%eax
81004842:	8b 00                	mov    (%eax),%eax
81004844:	8d 48 04             	lea    0x4(%eax),%ecx
81004847:	8b 55 18             	mov    0x18(%ebp),%edx
8100484a:	89 0a                	mov    %ecx,(%edx)
8100484c:	8b 00                	mov    (%eax),%eax
8100484e:	0f b7 c0             	movzwl %ax,%eax
81004851:	eb 0f                	jmp    81004862 <_printf_i+0x13e>
81004853:	8b 45 18             	mov    0x18(%ebp),%eax
81004856:	8b 00                	mov    (%eax),%eax
81004858:	8d 48 04             	lea    0x4(%eax),%ecx
8100485b:	8b 55 18             	mov    0x18(%ebp),%edx
8100485e:	89 0a                	mov    %ecx,(%edx)
81004860:	8b 00                	mov    (%eax),%eax
81004862:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004865:	8b 45 0c             	mov    0xc(%ebp),%eax
81004868:	0f b6 40 18          	movzbl 0x18(%eax),%eax
8100486c:	3c 6f                	cmp    $0x6f,%al
8100486e:	75 07                	jne    81004877 <_printf_i+0x153>
81004870:	b8 08 00 00 00       	mov    $0x8,%eax
81004875:	eb 05                	jmp    8100487c <_printf_i+0x158>
81004877:	b8 0a 00 00 00       	mov    $0xa,%eax
8100487c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100487f:	e9 b1 00 00 00       	jmp    81004935 <_printf_i+0x211>
81004884:	8b 45 0c             	mov    0xc(%ebp),%eax
81004887:	c6 40 45 58          	movb   $0x58,0x45(%eax)
8100488b:	eb 1d                	jmp    810048aa <_printf_i+0x186>
8100488d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004890:	8b 00                	mov    (%eax),%eax
81004892:	83 c8 20             	or     $0x20,%eax
81004895:	89 c2                	mov    %eax,%edx
81004897:	8b 45 0c             	mov    0xc(%ebp),%eax
8100489a:	89 10                	mov    %edx,(%eax)
8100489c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100489f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810048a3:	c7 45 e8 a1 7b 00 81 	movl   $0x81007ba1,-0x18(%ebp)
810048aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810048ad:	8b 00                	mov    (%eax),%eax
810048af:	25 80 00 00 00       	and    $0x80,%eax
810048b4:	85 c0                	test   %eax,%eax
810048b6:	74 11                	je     810048c9 <_printf_i+0x1a5>
810048b8:	8b 45 18             	mov    0x18(%ebp),%eax
810048bb:	8b 00                	mov    (%eax),%eax
810048bd:	8d 48 04             	lea    0x4(%eax),%ecx
810048c0:	8b 55 18             	mov    0x18(%ebp),%edx
810048c3:	89 0a                	mov    %ecx,(%edx)
810048c5:	8b 00                	mov    (%eax),%eax
810048c7:	eb 2f                	jmp    810048f8 <_printf_i+0x1d4>
810048c9:	8b 45 0c             	mov    0xc(%ebp),%eax
810048cc:	8b 00                	mov    (%eax),%eax
810048ce:	83 e0 40             	and    $0x40,%eax
810048d1:	85 c0                	test   %eax,%eax
810048d3:	74 14                	je     810048e9 <_printf_i+0x1c5>
810048d5:	8b 45 18             	mov    0x18(%ebp),%eax
810048d8:	8b 00                	mov    (%eax),%eax
810048da:	8d 48 04             	lea    0x4(%eax),%ecx
810048dd:	8b 55 18             	mov    0x18(%ebp),%edx
810048e0:	89 0a                	mov    %ecx,(%edx)
810048e2:	8b 00                	mov    (%eax),%eax
810048e4:	0f b7 c0             	movzwl %ax,%eax
810048e7:	eb 0f                	jmp    810048f8 <_printf_i+0x1d4>
810048e9:	8b 45 18             	mov    0x18(%ebp),%eax
810048ec:	8b 00                	mov    (%eax),%eax
810048ee:	8d 48 04             	lea    0x4(%eax),%ecx
810048f1:	8b 55 18             	mov    0x18(%ebp),%edx
810048f4:	89 0a                	mov    %ecx,(%edx)
810048f6:	8b 00                	mov    (%eax),%eax
810048f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810048fb:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81004902:	8b 45 0c             	mov    0xc(%ebp),%eax
81004905:	8b 00                	mov    (%eax),%eax
81004907:	83 e0 01             	and    $0x1,%eax
8100490a:	85 c0                	test   %eax,%eax
8100490c:	74 0f                	je     8100491d <_printf_i+0x1f9>
8100490e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004911:	8b 00                	mov    (%eax),%eax
81004913:	83 c8 20             	or     $0x20,%eax
81004916:	89 c2                	mov    %eax,%edx
81004918:	8b 45 0c             	mov    0xc(%ebp),%eax
8100491b:	89 10                	mov    %edx,(%eax)
8100491d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004921:	75 11                	jne    81004934 <_printf_i+0x210>
81004923:	8b 45 0c             	mov    0xc(%ebp),%eax
81004926:	8b 00                	mov    (%eax),%eax
81004928:	83 e0 df             	and    $0xffffffdf,%eax
8100492b:	89 c2                	mov    %eax,%edx
8100492d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004930:	89 10                	mov    %edx,(%eax)
81004932:	eb 01                	jmp    81004935 <_printf_i+0x211>
81004934:	90                   	nop
81004935:	8b 45 0c             	mov    0xc(%ebp),%eax
81004938:	c6 40 43 00          	movb   $0x0,0x43(%eax)
8100493c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100493f:	8b 50 04             	mov    0x4(%eax),%edx
81004942:	8b 45 0c             	mov    0xc(%ebp),%eax
81004945:	89 50 08             	mov    %edx,0x8(%eax)
81004948:	8b 45 0c             	mov    0xc(%ebp),%eax
8100494b:	8b 40 08             	mov    0x8(%eax),%eax
8100494e:	85 c0                	test   %eax,%eax
81004950:	78 0f                	js     81004961 <_printf_i+0x23d>
81004952:	8b 45 0c             	mov    0xc(%ebp),%eax
81004955:	8b 00                	mov    (%eax),%eax
81004957:	83 e0 fb             	and    $0xfffffffb,%eax
8100495a:	89 c2                	mov    %eax,%edx
8100495c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100495f:	89 10                	mov    %edx,(%eax)
81004961:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004965:	75 0a                	jne    81004971 <_printf_i+0x24d>
81004967:	8b 45 0c             	mov    0xc(%ebp),%eax
8100496a:	8b 40 04             	mov    0x4(%eax),%eax
8100496d:	85 c0                	test   %eax,%eax
8100496f:	74 34                	je     810049a5 <_printf_i+0x281>
81004971:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81004974:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004977:	ba 00 00 00 00       	mov    $0x0,%edx
8100497c:	f7 f1                	div    %ecx
8100497e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004981:	01 d0                	add    %edx,%eax
81004983:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004987:	0f b6 10             	movzbl (%eax),%edx
8100498a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100498d:	88 10                	mov    %dl,(%eax)
8100498f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81004992:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004995:	ba 00 00 00 00       	mov    $0x0,%edx
8100499a:	f7 f3                	div    %ebx
8100499c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100499f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810049a3:	75 cc                	jne    81004971 <_printf_i+0x24d>
810049a5:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810049a9:	75 26                	jne    810049d1 <_printf_i+0x2ad>
810049ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ae:	8b 00                	mov    (%eax),%eax
810049b0:	83 e0 01             	and    $0x1,%eax
810049b3:	85 c0                	test   %eax,%eax
810049b5:	74 1a                	je     810049d1 <_printf_i+0x2ad>
810049b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ba:	8b 50 04             	mov    0x4(%eax),%edx
810049bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810049c0:	8b 40 10             	mov    0x10(%eax),%eax
810049c3:	39 c2                	cmp    %eax,%edx
810049c5:	7f 0a                	jg     810049d1 <_printf_i+0x2ad>
810049c7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810049cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810049ce:	c6 00 30             	movb   $0x30,(%eax)
810049d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810049d4:	83 c0 1b             	add    $0x1b,%eax
810049d7:	83 c0 28             	add    $0x28,%eax
810049da:	2b 45 ec             	sub    -0x14(%ebp),%eax
810049dd:	89 c2                	mov    %eax,%edx
810049df:	8b 45 0c             	mov    0xc(%ebp),%eax
810049e2:	89 50 10             	mov    %edx,0x10(%eax)
810049e5:	e9 e2 00 00 00       	jmp    81004acc <_printf_i+0x3a8>
810049ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ed:	8b 00                	mov    (%eax),%eax
810049ef:	25 80 00 00 00       	and    $0x80,%eax
810049f4:	85 c0                	test   %eax,%eax
810049f6:	74 19                	je     81004a11 <_printf_i+0x2ed>
810049f8:	8b 45 18             	mov    0x18(%ebp),%eax
810049fb:	8b 00                	mov    (%eax),%eax
810049fd:	8d 48 04             	lea    0x4(%eax),%ecx
81004a00:	8b 55 18             	mov    0x18(%ebp),%edx
81004a03:	89 0a                	mov    %ecx,(%edx)
81004a05:	8b 00                	mov    (%eax),%eax
81004a07:	8b 55 0c             	mov    0xc(%ebp),%edx
81004a0a:	8b 52 14             	mov    0x14(%edx),%edx
81004a0d:	89 10                	mov    %edx,(%eax)
81004a0f:	eb 3f                	jmp    81004a50 <_printf_i+0x32c>
81004a11:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a14:	8b 00                	mov    (%eax),%eax
81004a16:	83 e0 40             	and    $0x40,%eax
81004a19:	85 c0                	test   %eax,%eax
81004a1b:	74 1c                	je     81004a39 <_printf_i+0x315>
81004a1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a20:	8b 58 14             	mov    0x14(%eax),%ebx
81004a23:	8b 45 18             	mov    0x18(%ebp),%eax
81004a26:	8b 00                	mov    (%eax),%eax
81004a28:	8d 48 04             	lea    0x4(%eax),%ecx
81004a2b:	8b 55 18             	mov    0x18(%ebp),%edx
81004a2e:	89 0a                	mov    %ecx,(%edx)
81004a30:	8b 00                	mov    (%eax),%eax
81004a32:	89 da                	mov    %ebx,%edx
81004a34:	66 89 10             	mov    %dx,(%eax)
81004a37:	eb 17                	jmp    81004a50 <_printf_i+0x32c>
81004a39:	8b 45 18             	mov    0x18(%ebp),%eax
81004a3c:	8b 00                	mov    (%eax),%eax
81004a3e:	8d 48 04             	lea    0x4(%eax),%ecx
81004a41:	8b 55 18             	mov    0x18(%ebp),%edx
81004a44:	89 0a                	mov    %ecx,(%edx)
81004a46:	8b 00                	mov    (%eax),%eax
81004a48:	8b 55 0c             	mov    0xc(%ebp),%edx
81004a4b:	8b 52 14             	mov    0x14(%edx),%edx
81004a4e:	89 10                	mov    %edx,(%eax)
81004a50:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a53:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81004a5a:	eb 70                	jmp    81004acc <_printf_i+0x3a8>
81004a5c:	8b 45 18             	mov    0x18(%ebp),%eax
81004a5f:	8b 00                	mov    (%eax),%eax
81004a61:	8d 48 04             	lea    0x4(%eax),%ecx
81004a64:	8b 55 18             	mov    0x18(%ebp),%edx
81004a67:	89 0a                	mov    %ecx,(%edx)
81004a69:	8b 00                	mov    (%eax),%eax
81004a6b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004a6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a71:	8b 40 04             	mov    0x4(%eax),%eax
81004a74:	83 ec 04             	sub    $0x4,%esp
81004a77:	50                   	push   %eax
81004a78:	6a 00                	push   $0x0
81004a7a:	ff 75 ec             	push   -0x14(%ebp)
81004a7d:	e8 de f3 ff ff       	call   81003e60 <memchr>
81004a82:	83 c4 10             	add    $0x10,%esp
81004a85:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004a88:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004a8c:	74 0e                	je     81004a9c <_printf_i+0x378>
81004a8e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004a91:	2b 45 ec             	sub    -0x14(%ebp),%eax
81004a94:	89 c2                	mov    %eax,%edx
81004a96:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a99:	89 50 04             	mov    %edx,0x4(%eax)
81004a9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004a9f:	8b 50 04             	mov    0x4(%eax),%edx
81004aa2:	8b 45 0c             	mov    0xc(%ebp),%eax
81004aa5:	89 50 10             	mov    %edx,0x10(%eax)
81004aa8:	eb 1a                	jmp    81004ac4 <_printf_i+0x3a0>
81004aaa:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81004aae:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ab1:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81004ab5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004ab8:	88 10                	mov    %dl,(%eax)
81004aba:	8b 45 0c             	mov    0xc(%ebp),%eax
81004abd:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81004ac4:	8b 45 0c             	mov    0xc(%ebp),%eax
81004ac7:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81004acb:	90                   	nop
81004acc:	83 ec 0c             	sub    $0xc,%esp
81004acf:	ff 75 14             	push   0x14(%ebp)
81004ad2:	ff 75 10             	push   0x10(%ebp)
81004ad5:	8d 45 d8             	lea    -0x28(%ebp),%eax
81004ad8:	50                   	push   %eax
81004ad9:	ff 75 0c             	push   0xc(%ebp)
81004adc:	ff 75 08             	push   0x8(%ebp)
81004adf:	e8 a5 fa ff ff       	call   81004589 <_printf_common>
81004ae4:	83 c4 20             	add    $0x20,%esp
81004ae7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004aea:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81004aee:	74 72                	je     81004b62 <_printf_i+0x43e>
81004af0:	8b 45 0c             	mov    0xc(%ebp),%eax
81004af3:	8b 40 10             	mov    0x10(%eax),%eax
81004af6:	50                   	push   %eax
81004af7:	ff 75 ec             	push   -0x14(%ebp)
81004afa:	ff 75 10             	push   0x10(%ebp)
81004afd:	ff 75 08             	push   0x8(%ebp)
81004b00:	8b 45 14             	mov    0x14(%ebp),%eax
81004b03:	ff d0                	call   *%eax
81004b05:	83 c4 10             	add    $0x10,%esp
81004b08:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b0b:	74 58                	je     81004b65 <_printf_i+0x441>
81004b0d:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b10:	8b 00                	mov    (%eax),%eax
81004b12:	83 e0 02             	and    $0x2,%eax
81004b15:	85 c0                	test   %eax,%eax
81004b17:	74 39                	je     81004b52 <_printf_i+0x42e>
81004b19:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81004b20:	eb 20                	jmp    81004b42 <_printf_i+0x41e>
81004b22:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b25:	83 c0 19             	add    $0x19,%eax
81004b28:	6a 01                	push   $0x1
81004b2a:	50                   	push   %eax
81004b2b:	ff 75 10             	push   0x10(%ebp)
81004b2e:	ff 75 08             	push   0x8(%ebp)
81004b31:	8b 45 14             	mov    0x14(%ebp),%eax
81004b34:	ff d0                	call   *%eax
81004b36:	83 c4 10             	add    $0x10,%esp
81004b39:	83 f8 ff             	cmp    $0xffffffff,%eax
81004b3c:	74 2a                	je     81004b68 <_printf_i+0x444>
81004b3e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81004b42:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b45:	8b 40 0c             	mov    0xc(%eax),%eax
81004b48:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004b4b:	29 d0                	sub    %edx,%eax
81004b4d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81004b50:	7c d0                	jl     81004b22 <_printf_i+0x3fe>
81004b52:	8b 45 0c             	mov    0xc(%ebp),%eax
81004b55:	8b 50 0c             	mov    0xc(%eax),%edx
81004b58:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004b5b:	39 c2                	cmp    %eax,%edx
81004b5d:	0f 4d c2             	cmovge %edx,%eax
81004b60:	eb 0c                	jmp    81004b6e <_printf_i+0x44a>
81004b62:	90                   	nop
81004b63:	eb 04                	jmp    81004b69 <_printf_i+0x445>
81004b65:	90                   	nop
81004b66:	eb 01                	jmp    81004b69 <_printf_i+0x445>
81004b68:	90                   	nop
81004b69:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b6e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004b71:	c9                   	leave  
81004b72:	c3                   	ret    

81004b73 <_open_r>:
81004b73:	55                   	push   %ebp
81004b74:	89 e5                	mov    %esp,%ebp
81004b76:	83 ec 18             	sub    $0x18,%esp
81004b79:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
81004b80:	00 00 00 
81004b83:	83 ec 04             	sub    $0x4,%esp
81004b86:	ff 75 14             	push   0x14(%ebp)
81004b89:	ff 75 10             	push   0x10(%ebp)
81004b8c:	ff 75 0c             	push   0xc(%ebp)
81004b8f:	e8 51 be ff ff       	call   810009e5 <open>
81004b94:	83 c4 10             	add    $0x10,%esp
81004b97:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004b9a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004b9e:	75 14                	jne    81004bb4 <_open_r+0x41>
81004ba0:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
81004ba5:	85 c0                	test   %eax,%eax
81004ba7:	74 0b                	je     81004bb4 <_open_r+0x41>
81004ba9:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
81004baf:	8b 45 08             	mov    0x8(%ebp),%eax
81004bb2:	89 10                	mov    %edx,(%eax)
81004bb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004bb7:	c9                   	leave  
81004bb8:	c3                   	ret    

81004bb9 <_iprintf_r>:
81004bb9:	55                   	push   %ebp
81004bba:	89 e5                	mov    %esp,%ebp
81004bbc:	83 ec 18             	sub    $0x18,%esp
81004bbf:	8d 45 10             	lea    0x10(%ebp),%eax
81004bc2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004bc5:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004bc8:	8b 45 08             	mov    0x8(%ebp),%eax
81004bcb:	8b 40 08             	mov    0x8(%eax),%eax
81004bce:	52                   	push   %edx
81004bcf:	ff 75 0c             	push   0xc(%ebp)
81004bd2:	50                   	push   %eax
81004bd3:	ff 75 08             	push   0x8(%ebp)
81004bd6:	e8 58 f6 ff ff       	call   81004233 <_vfiprintf_r>
81004bdb:	83 c4 10             	add    $0x10,%esp
81004bde:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004be1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004be4:	c9                   	leave  
81004be5:	c3                   	ret    

81004be6 <iprintf>:
81004be6:	55                   	push   %ebp
81004be7:	89 e5                	mov    %esp,%ebp
81004be9:	83 ec 18             	sub    $0x18,%esp
81004bec:	a1 24 83 00 81       	mov    0x81008324,%eax
81004bf1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bf4:	8d 45 0c             	lea    0xc(%ebp),%eax
81004bf7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004bfa:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004bfd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c00:	8b 40 08             	mov    0x8(%eax),%eax
81004c03:	52                   	push   %edx
81004c04:	ff 75 08             	push   0x8(%ebp)
81004c07:	50                   	push   %eax
81004c08:	ff 75 f4             	push   -0xc(%ebp)
81004c0b:	e8 23 f6 ff ff       	call   81004233 <_vfiprintf_r>
81004c10:	83 c4 10             	add    $0x10,%esp
81004c13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c16:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c19:	c9                   	leave  
81004c1a:	c3                   	ret    

81004c1b <_puts_r>:
81004c1b:	55                   	push   %ebp
81004c1c:	89 e5                	mov    %esp,%ebp
81004c1e:	83 ec 38             	sub    $0x38,%esp
81004c21:	83 ec 0c             	sub    $0xc,%esp
81004c24:	ff 75 0c             	push   0xc(%ebp)
81004c27:	e8 c4 09 00 00       	call   810055f0 <strlen>
81004c2c:	83 c4 10             	add    $0x10,%esp
81004c2f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c32:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c35:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004c38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c3b:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004c3e:	c7 45 d4 38 7c 00 81 	movl   $0x81007c38,-0x2c(%ebp)
81004c45:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004c4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c4f:	83 c0 01             	add    $0x1,%eax
81004c52:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004c55:	8d 45 cc             	lea    -0x34(%ebp),%eax
81004c58:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004c5b:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81004c62:	8b 45 08             	mov    0x8(%ebp),%eax
81004c65:	8b 40 08             	mov    0x8(%eax),%eax
81004c68:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004c6b:	8b 45 08             	mov    0x8(%ebp),%eax
81004c6e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c71:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81004c75:	74 18                	je     81004c8f <_puts_r+0x74>
81004c77:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c7a:	8b 40 38             	mov    0x38(%eax),%eax
81004c7d:	85 c0                	test   %eax,%eax
81004c7f:	75 0e                	jne    81004c8f <_puts_r+0x74>
81004c81:	83 ec 0c             	sub    $0xc,%esp
81004c84:	ff 75 ec             	push   -0x14(%ebp)
81004c87:	e8 97 c8 ff ff       	call   81001523 <__sinit>
81004c8c:	83 c4 10             	add    $0x10,%esp
81004c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c92:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004c96:	98                   	cwtl   
81004c97:	25 00 20 00 00       	and    $0x2000,%eax
81004c9c:	85 c0                	test   %eax,%eax
81004c9e:	75 24                	jne    81004cc4 <_puts_r+0xa9>
81004ca0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ca3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004ca7:	80 cc 20             	or     $0x20,%ah
81004caa:	89 c2                	mov    %eax,%edx
81004cac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004caf:	66 89 50 0c          	mov    %dx,0xc(%eax)
81004cb3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cb6:	8b 40 64             	mov    0x64(%eax),%eax
81004cb9:	80 e4 df             	and    $0xdf,%ah
81004cbc:	89 c2                	mov    %eax,%edx
81004cbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cc1:	89 50 64             	mov    %edx,0x64(%eax)
81004cc4:	83 ec 04             	sub    $0x4,%esp
81004cc7:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004cca:	50                   	push   %eax
81004ccb:	ff 75 f0             	push   -0x10(%ebp)
81004cce:	ff 75 08             	push   0x8(%ebp)
81004cd1:	e8 f4 14 00 00       	call   810061ca <__sfvwrite_r>
81004cd6:	83 c4 10             	add    $0x10,%esp
81004cd9:	85 c0                	test   %eax,%eax
81004cdb:	74 07                	je     81004ce4 <_puts_r+0xc9>
81004cdd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ce2:	eb 05                	jmp    81004ce9 <_puts_r+0xce>
81004ce4:	b8 0a 00 00 00       	mov    $0xa,%eax
81004ce9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004cec:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004cef:	c9                   	leave  
81004cf0:	c3                   	ret    

81004cf1 <puts>:
81004cf1:	55                   	push   %ebp
81004cf2:	89 e5                	mov    %esp,%ebp
81004cf4:	83 ec 08             	sub    $0x8,%esp
81004cf7:	a1 24 83 00 81       	mov    0x81008324,%eax
81004cfc:	83 ec 08             	sub    $0x8,%esp
81004cff:	ff 75 08             	push   0x8(%ebp)
81004d02:	50                   	push   %eax
81004d03:	e8 13 ff ff ff       	call   81004c1b <_puts_r>
81004d08:	83 c4 10             	add    $0x10,%esp
81004d0b:	c9                   	leave  
81004d0c:	c3                   	ret    

81004d0d <cleanup_glue>:
81004d0d:	55                   	push   %ebp
81004d0e:	89 e5                	mov    %esp,%ebp
81004d10:	83 ec 08             	sub    $0x8,%esp
81004d13:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d16:	8b 00                	mov    (%eax),%eax
81004d18:	85 c0                	test   %eax,%eax
81004d1a:	74 14                	je     81004d30 <cleanup_glue+0x23>
81004d1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d1f:	8b 00                	mov    (%eax),%eax
81004d21:	83 ec 08             	sub    $0x8,%esp
81004d24:	50                   	push   %eax
81004d25:	ff 75 08             	push   0x8(%ebp)
81004d28:	e8 e0 ff ff ff       	call   81004d0d <cleanup_glue>
81004d2d:	83 c4 10             	add    $0x10,%esp
81004d30:	83 ec 08             	sub    $0x8,%esp
81004d33:	ff 75 0c             	push   0xc(%ebp)
81004d36:	ff 75 08             	push   0x8(%ebp)
81004d39:	e8 3b ca ff ff       	call   81001779 <_free_r>
81004d3e:	83 c4 10             	add    $0x10,%esp
81004d41:	90                   	nop
81004d42:	c9                   	leave  
81004d43:	c3                   	ret    

81004d44 <_reclaim_reent>:
81004d44:	55                   	push   %ebp
81004d45:	89 e5                	mov    %esp,%ebp
81004d47:	83 ec 28             	sub    $0x28,%esp
81004d4a:	a1 24 83 00 81       	mov    0x81008324,%eax
81004d4f:	39 45 08             	cmp    %eax,0x8(%ebp)
81004d52:	0f 84 49 01 00 00    	je     81004ea1 <_reclaim_reent+0x15d>
81004d58:	8b 45 08             	mov    0x8(%ebp),%eax
81004d5b:	8b 40 4c             	mov    0x4c(%eax),%eax
81004d5e:	85 c0                	test   %eax,%eax
81004d60:	74 64                	je     81004dc6 <_reclaim_reent+0x82>
81004d62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004d69:	eb 3e                	jmp    81004da9 <_reclaim_reent+0x65>
81004d6b:	8b 45 08             	mov    0x8(%ebp),%eax
81004d6e:	8b 50 4c             	mov    0x4c(%eax),%edx
81004d71:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d74:	c1 e0 02             	shl    $0x2,%eax
81004d77:	01 d0                	add    %edx,%eax
81004d79:	8b 00                	mov    (%eax),%eax
81004d7b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d7e:	eb 1f                	jmp    81004d9f <_reclaim_reent+0x5b>
81004d80:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d83:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004d86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004d89:	8b 00                	mov    (%eax),%eax
81004d8b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004d8e:	83 ec 08             	sub    $0x8,%esp
81004d91:	ff 75 e8             	push   -0x18(%ebp)
81004d94:	ff 75 08             	push   0x8(%ebp)
81004d97:	e8 dd c9 ff ff       	call   81001779 <_free_r>
81004d9c:	83 c4 10             	add    $0x10,%esp
81004d9f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004da3:	75 db                	jne    81004d80 <_reclaim_reent+0x3c>
81004da5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004da9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004dac:	83 f8 1f             	cmp    $0x1f,%eax
81004daf:	76 ba                	jbe    81004d6b <_reclaim_reent+0x27>
81004db1:	8b 45 08             	mov    0x8(%ebp),%eax
81004db4:	8b 40 4c             	mov    0x4c(%eax),%eax
81004db7:	83 ec 08             	sub    $0x8,%esp
81004dba:	50                   	push   %eax
81004dbb:	ff 75 08             	push   0x8(%ebp)
81004dbe:	e8 b6 c9 ff ff       	call   81001779 <_free_r>
81004dc3:	83 c4 10             	add    $0x10,%esp
81004dc6:	8b 45 08             	mov    0x8(%ebp),%eax
81004dc9:	8b 40 40             	mov    0x40(%eax),%eax
81004dcc:	85 c0                	test   %eax,%eax
81004dce:	74 15                	je     81004de5 <_reclaim_reent+0xa1>
81004dd0:	8b 45 08             	mov    0x8(%ebp),%eax
81004dd3:	8b 40 40             	mov    0x40(%eax),%eax
81004dd6:	83 ec 08             	sub    $0x8,%esp
81004dd9:	50                   	push   %eax
81004dda:	ff 75 08             	push   0x8(%ebp)
81004ddd:	e8 97 c9 ff ff       	call   81001779 <_free_r>
81004de2:	83 c4 10             	add    $0x10,%esp
81004de5:	8b 45 08             	mov    0x8(%ebp),%eax
81004de8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004dee:	85 c0                	test   %eax,%eax
81004df0:	74 50                	je     81004e42 <_reclaim_reent+0xfe>
81004df2:	8b 45 08             	mov    0x8(%ebp),%eax
81004df5:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004dfb:	8b 55 08             	mov    0x8(%ebp),%edx
81004dfe:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81004e04:	39 d0                	cmp    %edx,%eax
81004e06:	74 3a                	je     81004e42 <_reclaim_reent+0xfe>
81004e08:	8b 45 08             	mov    0x8(%ebp),%eax
81004e0b:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004e11:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e14:	eb 1f                	jmp    81004e35 <_reclaim_reent+0xf1>
81004e16:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e19:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004e1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004e1f:	8b 00                	mov    (%eax),%eax
81004e21:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004e24:	83 ec 08             	sub    $0x8,%esp
81004e27:	ff 75 e4             	push   -0x1c(%ebp)
81004e2a:	ff 75 08             	push   0x8(%ebp)
81004e2d:	e8 47 c9 ff ff       	call   81001779 <_free_r>
81004e32:	83 c4 10             	add    $0x10,%esp
81004e35:	8b 45 08             	mov    0x8(%ebp),%eax
81004e38:	05 4c 01 00 00       	add    $0x14c,%eax
81004e3d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81004e40:	75 d4                	jne    81004e16 <_reclaim_reent+0xd2>
81004e42:	8b 45 08             	mov    0x8(%ebp),%eax
81004e45:	8b 40 54             	mov    0x54(%eax),%eax
81004e48:	85 c0                	test   %eax,%eax
81004e4a:	74 15                	je     81004e61 <_reclaim_reent+0x11d>
81004e4c:	8b 45 08             	mov    0x8(%ebp),%eax
81004e4f:	8b 40 54             	mov    0x54(%eax),%eax
81004e52:	83 ec 08             	sub    $0x8,%esp
81004e55:	50                   	push   %eax
81004e56:	ff 75 08             	push   0x8(%ebp)
81004e59:	e8 1b c9 ff ff       	call   81001779 <_free_r>
81004e5e:	83 c4 10             	add    $0x10,%esp
81004e61:	8b 45 08             	mov    0x8(%ebp),%eax
81004e64:	8b 40 38             	mov    0x38(%eax),%eax
81004e67:	85 c0                	test   %eax,%eax
81004e69:	74 36                	je     81004ea1 <_reclaim_reent+0x15d>
81004e6b:	8b 45 08             	mov    0x8(%ebp),%eax
81004e6e:	8b 40 3c             	mov    0x3c(%eax),%eax
81004e71:	83 ec 0c             	sub    $0xc,%esp
81004e74:	ff 75 08             	push   0x8(%ebp)
81004e77:	ff d0                	call   *%eax
81004e79:	83 c4 10             	add    $0x10,%esp
81004e7c:	8b 45 08             	mov    0x8(%ebp),%eax
81004e7f:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004e85:	85 c0                	test   %eax,%eax
81004e87:	74 18                	je     81004ea1 <_reclaim_reent+0x15d>
81004e89:	8b 45 08             	mov    0x8(%ebp),%eax
81004e8c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004e92:	83 ec 08             	sub    $0x8,%esp
81004e95:	50                   	push   %eax
81004e96:	ff 75 08             	push   0x8(%ebp)
81004e99:	e8 6f fe ff ff       	call   81004d0d <cleanup_glue>
81004e9e:	83 c4 10             	add    $0x10,%esp
81004ea1:	90                   	nop
81004ea2:	c9                   	leave  
81004ea3:	c3                   	ret    

81004ea4 <lflush>:
81004ea4:	55                   	push   %ebp
81004ea5:	89 e5                	mov    %esp,%ebp
81004ea7:	83 ec 08             	sub    $0x8,%esp
81004eaa:	8b 45 08             	mov    0x8(%ebp),%eax
81004ead:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004eb1:	98                   	cwtl   
81004eb2:	83 e0 09             	and    $0x9,%eax
81004eb5:	83 f8 09             	cmp    $0x9,%eax
81004eb8:	75 10                	jne    81004eca <lflush+0x26>
81004eba:	83 ec 0c             	sub    $0xc,%esp
81004ebd:	ff 75 08             	push   0x8(%ebp)
81004ec0:	e8 b3 c1 ff ff       	call   81001078 <fflush>
81004ec5:	83 c4 10             	add    $0x10,%esp
81004ec8:	eb 05                	jmp    81004ecf <lflush+0x2b>
81004eca:	b8 00 00 00 00       	mov    $0x0,%eax
81004ecf:	c9                   	leave  
81004ed0:	c3                   	ret    

81004ed1 <__srefill_r>:
81004ed1:	55                   	push   %ebp
81004ed2:	89 e5                	mov    %esp,%ebp
81004ed4:	56                   	push   %esi
81004ed5:	53                   	push   %ebx
81004ed6:	83 ec 10             	sub    $0x10,%esp
81004ed9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004edc:	8b 45 08             	mov    0x8(%ebp),%eax
81004edf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004ee2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004ee6:	74 18                	je     81004f00 <__srefill_r+0x2f>
81004ee8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004eeb:	8b 40 38             	mov    0x38(%eax),%eax
81004eee:	85 c0                	test   %eax,%eax
81004ef0:	75 0e                	jne    81004f00 <__srefill_r+0x2f>
81004ef2:	83 ec 0c             	sub    $0xc,%esp
81004ef5:	ff 75 f4             	push   -0xc(%ebp)
81004ef8:	e8 26 c6 ff ff       	call   81001523 <__sinit>
81004efd:	83 c4 10             	add    $0x10,%esp
81004f00:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f04:	98                   	cwtl   
81004f05:	25 00 20 00 00       	and    $0x2000,%eax
81004f0a:	85 c0                	test   %eax,%eax
81004f0c:	75 14                	jne    81004f22 <__srefill_r+0x51>
81004f0e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f12:	80 cc 20             	or     $0x20,%ah
81004f15:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004f19:	8b 43 64             	mov    0x64(%ebx),%eax
81004f1c:	80 e4 df             	and    $0xdf,%ah
81004f1f:	89 43 64             	mov    %eax,0x64(%ebx)
81004f22:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004f29:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f2d:	98                   	cwtl   
81004f2e:	83 e0 20             	and    $0x20,%eax
81004f31:	85 c0                	test   %eax,%eax
81004f33:	74 0a                	je     81004f3f <__srefill_r+0x6e>
81004f35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004f3a:	e9 8c 01 00 00       	jmp    810050cb <__srefill_r+0x1fa>
81004f3f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f43:	98                   	cwtl   
81004f44:	83 e0 04             	and    $0x4,%eax
81004f47:	85 c0                	test   %eax,%eax
81004f49:	75 79                	jne    81004fc4 <__srefill_r+0xf3>
81004f4b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f4f:	98                   	cwtl   
81004f50:	83 e0 10             	and    $0x10,%eax
81004f53:	85 c0                	test   %eax,%eax
81004f55:	75 1e                	jne    81004f75 <__srefill_r+0xa4>
81004f57:	8b 45 08             	mov    0x8(%ebp),%eax
81004f5a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004f60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f64:	83 c8 40             	or     $0x40,%eax
81004f67:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004f6b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004f70:	e9 56 01 00 00       	jmp    810050cb <__srefill_r+0x1fa>
81004f75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f79:	98                   	cwtl   
81004f7a:	83 e0 08             	and    $0x8,%eax
81004f7d:	85 c0                	test   %eax,%eax
81004f7f:	74 36                	je     81004fb7 <__srefill_r+0xe6>
81004f81:	83 ec 08             	sub    $0x8,%esp
81004f84:	53                   	push   %ebx
81004f85:	ff 75 08             	push   0x8(%ebp)
81004f88:	e8 93 c0 ff ff       	call   81001020 <_fflush_r>
81004f8d:	83 c4 10             	add    $0x10,%esp
81004f90:	85 c0                	test   %eax,%eax
81004f92:	74 0a                	je     81004f9e <__srefill_r+0xcd>
81004f94:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004f99:	e9 2d 01 00 00       	jmp    810050cb <__srefill_r+0x1fa>
81004f9e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fa2:	83 e0 f7             	and    $0xfffffff7,%eax
81004fa5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004fa9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004fb0:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
81004fb7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004fbb:	83 c8 04             	or     $0x4,%eax
81004fbe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004fc2:	eb 46                	jmp    8100500a <__srefill_r+0x139>
81004fc4:	8b 43 30             	mov    0x30(%ebx),%eax
81004fc7:	85 c0                	test   %eax,%eax
81004fc9:	74 3f                	je     8100500a <__srefill_r+0x139>
81004fcb:	8b 53 30             	mov    0x30(%ebx),%edx
81004fce:	8d 43 40             	lea    0x40(%ebx),%eax
81004fd1:	39 c2                	cmp    %eax,%edx
81004fd3:	74 12                	je     81004fe7 <__srefill_r+0x116>
81004fd5:	8b 43 30             	mov    0x30(%ebx),%eax
81004fd8:	83 ec 08             	sub    $0x8,%esp
81004fdb:	50                   	push   %eax
81004fdc:	ff 75 08             	push   0x8(%ebp)
81004fdf:	e8 95 c7 ff ff       	call   81001779 <_free_r>
81004fe4:	83 c4 10             	add    $0x10,%esp
81004fe7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004fee:	8b 43 3c             	mov    0x3c(%ebx),%eax
81004ff1:	89 43 04             	mov    %eax,0x4(%ebx)
81004ff4:	8b 43 04             	mov    0x4(%ebx),%eax
81004ff7:	85 c0                	test   %eax,%eax
81004ff9:	74 0f                	je     8100500a <__srefill_r+0x139>
81004ffb:	8b 43 38             	mov    0x38(%ebx),%eax
81004ffe:	89 03                	mov    %eax,(%ebx)
81005000:	b8 00 00 00 00       	mov    $0x0,%eax
81005005:	e9 c1 00 00 00       	jmp    810050cb <__srefill_r+0x1fa>
8100500a:	8b 43 10             	mov    0x10(%ebx),%eax
8100500d:	85 c0                	test   %eax,%eax
8100500f:	75 0f                	jne    81005020 <__srefill_r+0x14f>
81005011:	83 ec 08             	sub    $0x8,%esp
81005014:	53                   	push   %ebx
81005015:	ff 75 08             	push   0x8(%ebp)
81005018:	e8 d3 e1 ff ff       	call   810031f0 <__smakebuf_r>
8100501d:	83 c4 10             	add    $0x10,%esp
81005020:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005024:	98                   	cwtl   
81005025:	83 e0 03             	and    $0x3,%eax
81005028:	85 c0                	test   %eax,%eax
8100502a:	74 48                	je     81005074 <__srefill_r+0x1a3>
8100502c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005030:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
81005034:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
8100503a:	a1 78 7b 00 81       	mov    0x81007b78,%eax
8100503f:	83 ec 08             	sub    $0x8,%esp
81005042:	68 a4 4e 00 81       	push   $0x81004ea4
81005047:	50                   	push   %eax
81005048:	e8 b9 d1 ff ff       	call   81002206 <_fwalk>
8100504d:	83 c4 10             	add    $0x10,%esp
81005050:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81005054:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005058:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100505c:	98                   	cwtl   
8100505d:	83 e0 09             	and    $0x9,%eax
81005060:	83 f8 09             	cmp    $0x9,%eax
81005063:	75 0f                	jne    81005074 <__srefill_r+0x1a3>
81005065:	83 ec 08             	sub    $0x8,%esp
81005068:	53                   	push   %ebx
81005069:	ff 75 08             	push   0x8(%ebp)
8100506c:	e8 89 bd ff ff       	call   81000dfa <__sflush_r>
81005071:	83 c4 10             	add    $0x10,%esp
81005074:	8b 43 10             	mov    0x10(%ebx),%eax
81005077:	89 03                	mov    %eax,(%ebx)
81005079:	8b 43 20             	mov    0x20(%ebx),%eax
8100507c:	8b 73 14             	mov    0x14(%ebx),%esi
8100507f:	8b 0b                	mov    (%ebx),%ecx
81005081:	8b 53 1c             	mov    0x1c(%ebx),%edx
81005084:	56                   	push   %esi
81005085:	51                   	push   %ecx
81005086:	52                   	push   %edx
81005087:	ff 75 08             	push   0x8(%ebp)
8100508a:	ff d0                	call   *%eax
8100508c:	83 c4 10             	add    $0x10,%esp
8100508f:	89 43 04             	mov    %eax,0x4(%ebx)
81005092:	8b 43 04             	mov    0x4(%ebx),%eax
81005095:	85 c0                	test   %eax,%eax
81005097:	7f 2d                	jg     810050c6 <__srefill_r+0x1f5>
81005099:	8b 43 04             	mov    0x4(%ebx),%eax
8100509c:	85 c0                	test   %eax,%eax
8100509e:	75 0d                	jne    810050ad <__srefill_r+0x1dc>
810050a0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050a4:	83 c8 20             	or     $0x20,%eax
810050a7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050ab:	eb 12                	jmp    810050bf <__srefill_r+0x1ee>
810050ad:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810050b4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810050b8:	83 c8 40             	or     $0x40,%eax
810050bb:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810050bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810050c4:	eb 05                	jmp    810050cb <__srefill_r+0x1fa>
810050c6:	b8 00 00 00 00       	mov    $0x0,%eax
810050cb:	8d 65 f8             	lea    -0x8(%ebp),%esp
810050ce:	5b                   	pop    %ebx
810050cf:	5e                   	pop    %esi
810050d0:	5d                   	pop    %ebp
810050d1:	c3                   	ret    

810050d2 <_sbrk_r>:
810050d2:	55                   	push   %ebp
810050d3:	89 e5                	mov    %esp,%ebp
810050d5:	83 ec 18             	sub    $0x18,%esp
810050d8:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
810050df:	00 00 00 
810050e2:	83 ec 0c             	sub    $0xc,%esp
810050e5:	ff 75 0c             	push   0xc(%ebp)
810050e8:	e8 0f ba ff ff       	call   81000afc <sbrk>
810050ed:	83 c4 10             	add    $0x10,%esp
810050f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810050f3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810050f7:	75 14                	jne    8100510d <_sbrk_r+0x3b>
810050f9:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
810050fe:	85 c0                	test   %eax,%eax
81005100:	74 0b                	je     8100510d <_sbrk_r+0x3b>
81005102:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
81005108:	8b 45 08             	mov    0x8(%ebp),%eax
8100510b:	89 10                	mov    %edx,(%eax)
8100510d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005110:	c9                   	leave  
81005111:	c3                   	ret    

81005112 <setvbuf>:
81005112:	55                   	push   %ebp
81005113:	89 e5                	mov    %esp,%ebp
81005115:	57                   	push   %edi
81005116:	56                   	push   %esi
81005117:	53                   	push   %ebx
81005118:	83 ec 2c             	sub    $0x2c,%esp
8100511b:	8b 5d 08             	mov    0x8(%ebp),%ebx
8100511e:	8b 7d 10             	mov    0x10(%ebp),%edi
81005121:	8b 75 14             	mov    0x14(%ebp),%esi
81005124:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100512b:	a1 24 83 00 81       	mov    0x81008324,%eax
81005130:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005133:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005136:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005139:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100513d:	74 18                	je     81005157 <setvbuf+0x45>
8100513f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005142:	8b 40 38             	mov    0x38(%eax),%eax
81005145:	85 c0                	test   %eax,%eax
81005147:	75 0e                	jne    81005157 <setvbuf+0x45>
81005149:	83 ec 0c             	sub    $0xc,%esp
8100514c:	ff 75 dc             	push   -0x24(%ebp)
8100514f:	e8 cf c3 ff ff       	call   81001523 <__sinit>
81005154:	83 c4 10             	add    $0x10,%esp
81005157:	83 ff 02             	cmp    $0x2,%edi
8100515a:	74 19                	je     81005175 <setvbuf+0x63>
8100515c:	85 ff                	test   %edi,%edi
8100515e:	74 05                	je     81005165 <setvbuf+0x53>
81005160:	83 ff 01             	cmp    $0x1,%edi
81005163:	75 06                	jne    8100516b <setvbuf+0x59>
81005165:	89 f0                	mov    %esi,%eax
81005167:	85 c0                	test   %eax,%eax
81005169:	79 0a                	jns    81005175 <setvbuf+0x63>
8100516b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005170:	e9 a1 01 00 00       	jmp    81005316 <setvbuf+0x204>
81005175:	83 ec 08             	sub    $0x8,%esp
81005178:	53                   	push   %ebx
81005179:	ff 75 e0             	push   -0x20(%ebp)
8100517c:	e8 9f be ff ff       	call   81001020 <_fflush_r>
81005181:	83 c4 10             	add    $0x10,%esp
81005184:	8b 43 30             	mov    0x30(%ebx),%eax
81005187:	85 c0                	test   %eax,%eax
81005189:	74 23                	je     810051ae <setvbuf+0x9c>
8100518b:	8b 53 30             	mov    0x30(%ebx),%edx
8100518e:	8d 43 40             	lea    0x40(%ebx),%eax
81005191:	39 c2                	cmp    %eax,%edx
81005193:	74 12                	je     810051a7 <setvbuf+0x95>
81005195:	8b 43 30             	mov    0x30(%ebx),%eax
81005198:	83 ec 08             	sub    $0x8,%esp
8100519b:	50                   	push   %eax
8100519c:	ff 75 e0             	push   -0x20(%ebp)
8100519f:	e8 d5 c5 ff ff       	call   81001779 <_free_r>
810051a4:	83 c4 10             	add    $0x10,%esp
810051a7:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810051ae:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810051b5:	8b 43 18             	mov    0x18(%ebx),%eax
810051b8:	89 43 04             	mov    %eax,0x4(%ebx)
810051bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051bf:	98                   	cwtl   
810051c0:	25 80 00 00 00       	and    $0x80,%eax
810051c5:	85 c0                	test   %eax,%eax
810051c7:	74 12                	je     810051db <setvbuf+0xc9>
810051c9:	8b 43 10             	mov    0x10(%ebx),%eax
810051cc:	83 ec 08             	sub    $0x8,%esp
810051cf:	50                   	push   %eax
810051d0:	ff 75 e0             	push   -0x20(%ebp)
810051d3:	e8 a1 c5 ff ff       	call   81001779 <_free_r>
810051d8:	83 c4 10             	add    $0x10,%esp
810051db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810051df:	66 25 5c f3          	and    $0xf35c,%ax
810051e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810051e7:	83 ff 02             	cmp    $0x2,%edi
810051ea:	74 6f                	je     8100525b <setvbuf+0x149>
810051ec:	8d 45 d4             	lea    -0x2c(%ebp),%eax
810051ef:	50                   	push   %eax
810051f0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810051f3:	50                   	push   %eax
810051f4:	53                   	push   %ebx
810051f5:	ff 75 e0             	push   -0x20(%ebp)
810051f8:	e8 e0 e0 ff ff       	call   810032dd <__swhatbuf_r>
810051fd:	83 c4 10             	add    $0x10,%esp
81005200:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005204:	09 d0                	or     %edx,%eax
81005206:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100520a:	85 f6                	test   %esi,%esi
8100520c:	75 0a                	jne    81005218 <setvbuf+0x106>
8100520e:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
81005215:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005218:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100521c:	75 73                	jne    81005291 <setvbuf+0x17f>
8100521e:	83 ec 0c             	sub    $0xc,%esp
81005221:	56                   	push   %esi
81005222:	e8 49 e1 ff ff       	call   81003370 <malloc>
81005227:	83 c4 10             	add    $0x10,%esp
8100522a:	89 45 0c             	mov    %eax,0xc(%ebp)
8100522d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005231:	75 20                	jne    81005253 <setvbuf+0x141>
81005233:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100523a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100523d:	39 c6                	cmp    %eax,%esi
8100523f:	74 12                	je     81005253 <setvbuf+0x141>
81005241:	8b 75 d8             	mov    -0x28(%ebp),%esi
81005244:	83 ec 0c             	sub    $0xc,%esp
81005247:	56                   	push   %esi
81005248:	e8 23 e1 ff ff       	call   81003370 <malloc>
8100524d:	83 c4 10             	add    $0x10,%esp
81005250:	89 45 0c             	mov    %eax,0xc(%ebp)
81005253:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005257:	75 2e                	jne    81005287 <setvbuf+0x175>
81005259:	eb 01                	jmp    8100525c <setvbuf+0x14a>
8100525b:	90                   	nop
8100525c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005260:	83 c8 02             	or     $0x2,%eax
81005263:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005267:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100526e:	8d 43 43             	lea    0x43(%ebx),%eax
81005271:	89 03                	mov    %eax,(%ebx)
81005273:	8b 03                	mov    (%ebx),%eax
81005275:	89 43 10             	mov    %eax,0x10(%ebx)
81005278:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
8100527f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005282:	e9 8f 00 00 00       	jmp    81005316 <setvbuf+0x204>
81005287:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100528b:	0c 80                	or     $0x80,%al
8100528d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005291:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005294:	8b 40 38             	mov    0x38(%eax),%eax
81005297:	85 c0                	test   %eax,%eax
81005299:	75 0e                	jne    810052a9 <setvbuf+0x197>
8100529b:	83 ec 0c             	sub    $0xc,%esp
8100529e:	ff 75 e0             	push   -0x20(%ebp)
810052a1:	e8 7d c2 ff ff       	call   81001523 <__sinit>
810052a6:	83 c4 10             	add    $0x10,%esp
810052a9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810052ac:	39 c6                	cmp    %eax,%esi
810052ae:	74 0b                	je     810052bb <setvbuf+0x1a9>
810052b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052b4:	80 cc 08             	or     $0x8,%ah
810052b7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052bb:	83 ff 01             	cmp    $0x1,%edi
810052be:	75 0b                	jne    810052cb <setvbuf+0x1b9>
810052c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052c4:	83 c8 01             	or     $0x1,%eax
810052c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810052cb:	8b 45 0c             	mov    0xc(%ebp),%eax
810052ce:	89 03                	mov    %eax,(%ebx)
810052d0:	8b 03                	mov    (%ebx),%eax
810052d2:	89 43 10             	mov    %eax,0x10(%ebx)
810052d5:	89 f0                	mov    %esi,%eax
810052d7:	89 43 14             	mov    %eax,0x14(%ebx)
810052da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052de:	98                   	cwtl   
810052df:	83 e0 08             	and    $0x8,%eax
810052e2:	85 c0                	test   %eax,%eax
810052e4:	74 24                	je     8100530a <setvbuf+0x1f8>
810052e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ea:	98                   	cwtl   
810052eb:	83 e0 01             	and    $0x1,%eax
810052ee:	85 c0                	test   %eax,%eax
810052f0:	74 11                	je     81005303 <setvbuf+0x1f1>
810052f2:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810052f9:	8b 43 14             	mov    0x14(%ebx),%eax
810052fc:	f7 d8                	neg    %eax
810052fe:	89 43 18             	mov    %eax,0x18(%ebx)
81005301:	eb 0e                	jmp    81005311 <setvbuf+0x1ff>
81005303:	89 f0                	mov    %esi,%eax
81005305:	89 43 08             	mov    %eax,0x8(%ebx)
81005308:	eb 07                	jmp    81005311 <setvbuf+0x1ff>
8100530a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005311:	b8 00 00 00 00       	mov    $0x0,%eax
81005316:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005319:	5b                   	pop    %ebx
8100531a:	5e                   	pop    %esi
8100531b:	5f                   	pop    %edi
8100531c:	5d                   	pop    %ebp
8100531d:	c3                   	ret    

8100531e <__sread>:
8100531e:	55                   	push   %ebp
8100531f:	89 e5                	mov    %esp,%ebp
81005321:	56                   	push   %esi
81005322:	53                   	push   %ebx
81005323:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005326:	8b 55 14             	mov    0x14(%ebp),%edx
81005329:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100532d:	98                   	cwtl   
8100532e:	52                   	push   %edx
8100532f:	ff 75 10             	push   0x10(%ebp)
81005332:	50                   	push   %eax
81005333:	ff 75 08             	push   0x8(%ebp)
81005336:	e8 a6 18 00 00       	call   81006be1 <_read_r>
8100533b:	83 c4 10             	add    $0x10,%esp
8100533e:	89 c6                	mov    %eax,%esi
81005340:	85 f6                	test   %esi,%esi
81005342:	78 0a                	js     8100534e <__sread+0x30>
81005344:	8b 43 50             	mov    0x50(%ebx),%eax
81005347:	01 f0                	add    %esi,%eax
81005349:	89 43 50             	mov    %eax,0x50(%ebx)
8100534c:	eb 0b                	jmp    81005359 <__sread+0x3b>
8100534e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005352:	80 e4 ef             	and    $0xef,%ah
81005355:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005359:	89 f0                	mov    %esi,%eax
8100535b:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100535e:	5b                   	pop    %ebx
8100535f:	5e                   	pop    %esi
81005360:	5d                   	pop    %ebp
81005361:	c3                   	ret    

81005362 <__seofread>:
81005362:	55                   	push   %ebp
81005363:	89 e5                	mov    %esp,%ebp
81005365:	b8 00 00 00 00       	mov    $0x0,%eax
8100536a:	5d                   	pop    %ebp
8100536b:	c3                   	ret    

8100536c <__swrite>:
8100536c:	55                   	push   %ebp
8100536d:	89 e5                	mov    %esp,%ebp
8100536f:	53                   	push   %ebx
81005370:	83 ec 14             	sub    $0x14,%esp
81005373:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005376:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100537a:	98                   	cwtl   
8100537b:	25 00 01 00 00       	and    $0x100,%eax
81005380:	85 c0                	test   %eax,%eax
81005382:	74 15                	je     81005399 <__swrite+0x2d>
81005384:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005388:	98                   	cwtl   
81005389:	6a 02                	push   $0x2
8100538b:	6a 00                	push   $0x0
8100538d:	50                   	push   %eax
8100538e:	ff 75 08             	push   0x8(%ebp)
81005391:	e8 d8 15 00 00       	call   8100696e <_lseek_r>
81005396:	83 c4 10             	add    $0x10,%esp
81005399:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100539d:	80 e4 ef             	and    $0xef,%ah
810053a0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053a4:	8b 55 14             	mov    0x14(%ebp),%edx
810053a7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810053ab:	98                   	cwtl   
810053ac:	52                   	push   %edx
810053ad:	ff 75 10             	push   0x10(%ebp)
810053b0:	50                   	push   %eax
810053b1:	ff 75 08             	push   0x8(%ebp)
810053b4:	e8 49 07 00 00       	call   81005b02 <_write_r>
810053b9:	83 c4 10             	add    $0x10,%esp
810053bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810053c5:	c9                   	leave  
810053c6:	c3                   	ret    

810053c7 <__sseek>:
810053c7:	55                   	push   %ebp
810053c8:	89 e5                	mov    %esp,%ebp
810053ca:	56                   	push   %esi
810053cb:	53                   	push   %ebx
810053cc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810053cf:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810053d3:	98                   	cwtl   
810053d4:	ff 75 14             	push   0x14(%ebp)
810053d7:	ff 75 10             	push   0x10(%ebp)
810053da:	50                   	push   %eax
810053db:	ff 75 08             	push   0x8(%ebp)
810053de:	e8 8b 15 00 00       	call   8100696e <_lseek_r>
810053e3:	83 c4 10             	add    $0x10,%esp
810053e6:	89 c6                	mov    %eax,%esi
810053e8:	83 fe ff             	cmp    $0xffffffff,%esi
810053eb:	75 0d                	jne    810053fa <__sseek+0x33>
810053ed:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053f1:	80 e4 ef             	and    $0xef,%ah
810053f4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810053f8:	eb 0e                	jmp    81005408 <__sseek+0x41>
810053fa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053fe:	80 cc 10             	or     $0x10,%ah
81005401:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005405:	89 73 50             	mov    %esi,0x50(%ebx)
81005408:	89 f0                	mov    %esi,%eax
8100540a:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100540d:	5b                   	pop    %ebx
8100540e:	5e                   	pop    %esi
8100540f:	5d                   	pop    %ebp
81005410:	c3                   	ret    

81005411 <__sclose>:
81005411:	55                   	push   %ebp
81005412:	89 e5                	mov    %esp,%ebp
81005414:	83 ec 18             	sub    $0x18,%esp
81005417:	8b 45 0c             	mov    0xc(%ebp),%eax
8100541a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100541d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005420:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005424:	98                   	cwtl   
81005425:	83 ec 08             	sub    $0x8,%esp
81005428:	50                   	push   %eax
81005429:	ff 75 08             	push   0x8(%ebp)
8100542c:	e8 87 09 00 00       	call   81005db8 <_close_r>
81005431:	83 c4 10             	add    $0x10,%esp
81005434:	c9                   	leave  
81005435:	c3                   	ret    
81005436:	66 90                	xchg   %ax,%ax
81005438:	66 90                	xchg   %ax,%ax
8100543a:	66 90                	xchg   %ax,%ax
8100543c:	66 90                	xchg   %ax,%ax
8100543e:	66 90                	xchg   %ax,%ax

81005440 <strchr>:
81005440:	55                   	push   %ebp
81005441:	89 e5                	mov    %esp,%ebp
81005443:	57                   	push   %edi
81005444:	53                   	push   %ebx
81005445:	31 db                	xor    %ebx,%ebx
81005447:	8b 7d 08             	mov    0x8(%ebp),%edi
8100544a:	02 5d 0c             	add    0xc(%ebp),%bl
8100544d:	0f 84 98 00 00 00    	je     810054eb <L25>
81005453:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005459:	74 37                	je     81005492 <L5>
8100545b:	89 f8                	mov    %edi,%eax
8100545d:	8a 08                	mov    (%eax),%cl
8100545f:	84 c9                	test   %cl,%cl
81005461:	74 7b                	je     810054de <L14>
81005463:	38 d9                	cmp    %bl,%cl
81005465:	74 7d                	je     810054e4 <L19>
81005467:	47                   	inc    %edi
81005468:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100546e:	74 22                	je     81005492 <L5>
81005470:	89 f8                	mov    %edi,%eax
81005472:	8a 08                	mov    (%eax),%cl
81005474:	84 c9                	test   %cl,%cl
81005476:	74 66                	je     810054de <L14>
81005478:	38 d9                	cmp    %bl,%cl
8100547a:	74 68                	je     810054e4 <L19>
8100547c:	47                   	inc    %edi
8100547d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005483:	74 0d                	je     81005492 <L5>
81005485:	89 f8                	mov    %edi,%eax
81005487:	8a 08                	mov    (%eax),%cl
81005489:	84 c9                	test   %cl,%cl
8100548b:	74 51                	je     810054de <L14>
8100548d:	38 d9                	cmp    %bl,%cl
8100548f:	74 53                	je     810054e4 <L19>
81005491:	47                   	inc    %edi

81005492 <L5>:
81005492:	89 d9                	mov    %ebx,%ecx
81005494:	c1 e3 08             	shl    $0x8,%ebx
81005497:	83 ef 04             	sub    $0x4,%edi
8100549a:	09 cb                	or     %ecx,%ebx
8100549c:	89 da                	mov    %ebx,%edx
8100549e:	c1 e3 10             	shl    $0x10,%ebx
810054a1:	09 d3                	or     %edx,%ebx

810054a3 <L10>:
810054a3:	83 c7 04             	add    $0x4,%edi
810054a6:	8b 0f                	mov    (%edi),%ecx
810054a8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810054ae:	89 c8                	mov    %ecx,%eax
810054b0:	f7 d0                	not    %eax
810054b2:	21 c2                	and    %eax,%edx
810054b4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810054ba:	75 14                	jne    810054d0 <L9>
810054bc:	31 d9                	xor    %ebx,%ecx
810054be:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810054c4:	f7 d1                	not    %ecx
810054c6:	21 ca                	and    %ecx,%edx
810054c8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810054ce:	74 d3                	je     810054a3 <L10>

810054d0 <L9>:
810054d0:	8d 47 ff             	lea    -0x1(%edi),%eax

810054d3 <L15>:
810054d3:	40                   	inc    %eax
810054d4:	8a 10                	mov    (%eax),%dl
810054d6:	84 d2                	test   %dl,%dl
810054d8:	74 04                	je     810054de <L14>
810054da:	38 da                	cmp    %bl,%dl
810054dc:	75 f5                	jne    810054d3 <L15>

810054de <L14>:
810054de:	38 18                	cmp    %bl,(%eax)
810054e0:	74 02                	je     810054e4 <L19>
810054e2:	31 c0                	xor    %eax,%eax

810054e4 <L19>:
810054e4:	8d 65 f8             	lea    -0x8(%ebp),%esp
810054e7:	5b                   	pop    %ebx
810054e8:	5f                   	pop    %edi
810054e9:	c9                   	leave  
810054ea:	c3                   	ret    

810054eb <L25>:
810054eb:	f7 c7 03 00 00 00    	test   $0x3,%edi
810054f1:	74 2b                	je     8100551e <L26>
810054f3:	89 f8                	mov    %edi,%eax
810054f5:	8a 08                	mov    (%eax),%cl
810054f7:	84 c9                	test   %cl,%cl
810054f9:	74 e9                	je     810054e4 <L19>
810054fb:	47                   	inc    %edi
810054fc:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005502:	74 1a                	je     8100551e <L26>
81005504:	89 f8                	mov    %edi,%eax
81005506:	8a 08                	mov    (%eax),%cl
81005508:	84 c9                	test   %cl,%cl
8100550a:	74 d8                	je     810054e4 <L19>
8100550c:	47                   	inc    %edi
8100550d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81005513:	74 09                	je     8100551e <L26>
81005515:	89 f8                	mov    %edi,%eax
81005517:	8a 08                	mov    (%eax),%cl
81005519:	84 c9                	test   %cl,%cl
8100551b:	74 c7                	je     810054e4 <L19>
8100551d:	47                   	inc    %edi

8100551e <L26>:
8100551e:	83 ef 04             	sub    $0x4,%edi

81005521 <L27>:
81005521:	83 c7 04             	add    $0x4,%edi
81005524:	8b 0f                	mov    (%edi),%ecx
81005526:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100552c:	89 c8                	mov    %ecx,%eax
8100552e:	f7 d0                	not    %eax
81005530:	21 c2                	and    %eax,%edx
81005532:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81005538:	74 e7                	je     81005521 <L27>
8100553a:	eb 94                	jmp    810054d0 <L9>

8100553c <strcmp>:
8100553c:	55                   	push   %ebp
8100553d:	89 e5                	mov    %esp,%ebp
8100553f:	83 ec 10             	sub    $0x10,%esp
81005542:	8b 55 08             	mov    0x8(%ebp),%edx
81005545:	8b 45 0c             	mov    0xc(%ebp),%eax
81005548:	09 d0                	or     %edx,%eax
8100554a:	83 e0 03             	and    $0x3,%eax
8100554d:	85 c0                	test   %eax,%eax
8100554f:	75 5e                	jne    810055af <strcmp+0x73>
81005551:	8b 45 08             	mov    0x8(%ebp),%eax
81005554:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005557:	8b 45 0c             	mov    0xc(%ebp),%eax
8100555a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100555d:	eb 2c                	jmp    8100558b <strcmp+0x4f>
8100555f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005562:	8b 00                	mov    (%eax),%eax
81005564:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100556a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100556d:	8b 00                	mov    (%eax),%eax
8100556f:	f7 d0                	not    %eax
81005571:	21 d0                	and    %edx,%eax
81005573:	25 80 80 80 80       	and    $0x80808080,%eax
81005578:	85 c0                	test   %eax,%eax
8100557a:	74 07                	je     81005583 <strcmp+0x47>
8100557c:	b8 00 00 00 00       	mov    $0x0,%eax
81005581:	eb 5c                	jmp    810055df <strcmp+0xa3>
81005583:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81005587:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100558b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100558e:	8b 10                	mov    (%eax),%edx
81005590:	8b 45 f8             	mov    -0x8(%ebp),%eax
81005593:	8b 00                	mov    (%eax),%eax
81005595:	39 c2                	cmp    %eax,%edx
81005597:	74 c6                	je     8100555f <strcmp+0x23>
81005599:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100559c:	89 45 08             	mov    %eax,0x8(%ebp)
8100559f:	8b 45 f8             	mov    -0x8(%ebp),%eax
810055a2:	89 45 0c             	mov    %eax,0xc(%ebp)
810055a5:	eb 08                	jmp    810055af <strcmp+0x73>
810055a7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810055ab:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810055af:	8b 45 08             	mov    0x8(%ebp),%eax
810055b2:	0f b6 00             	movzbl (%eax),%eax
810055b5:	84 c0                	test   %al,%al
810055b7:	74 10                	je     810055c9 <strcmp+0x8d>
810055b9:	8b 45 08             	mov    0x8(%ebp),%eax
810055bc:	0f b6 10             	movzbl (%eax),%edx
810055bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810055c2:	0f b6 00             	movzbl (%eax),%eax
810055c5:	38 c2                	cmp    %al,%dl
810055c7:	74 de                	je     810055a7 <strcmp+0x6b>
810055c9:	8b 45 08             	mov    0x8(%ebp),%eax
810055cc:	0f b6 00             	movzbl (%eax),%eax
810055cf:	0f b6 d0             	movzbl %al,%edx
810055d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810055d5:	0f b6 00             	movzbl (%eax),%eax
810055d8:	0f b6 c8             	movzbl %al,%ecx
810055db:	89 d0                	mov    %edx,%eax
810055dd:	29 c8                	sub    %ecx,%eax
810055df:	c9                   	leave  
810055e0:	c3                   	ret    
810055e1:	66 90                	xchg   %ax,%ax
810055e3:	66 90                	xchg   %ax,%ax
810055e5:	66 90                	xchg   %ax,%ax
810055e7:	66 90                	xchg   %ax,%ax
810055e9:	66 90                	xchg   %ax,%ax
810055eb:	66 90                	xchg   %ax,%ax
810055ed:	66 90                	xchg   %ax,%ax
810055ef:	90                   	nop

810055f0 <strlen>:
810055f0:	55                   	push   %ebp
810055f1:	89 e5                	mov    %esp,%ebp
810055f3:	57                   	push   %edi
810055f4:	8b 55 08             	mov    0x8(%ebp),%edx
810055f7:	89 d7                	mov    %edx,%edi
810055f9:	f7 c7 03 00 00 00    	test   $0x3,%edi
810055ff:	74 25                	je     81005626 <L5>
81005601:	8a 0f                	mov    (%edi),%cl
81005603:	47                   	inc    %edi
81005604:	84 c9                	test   %cl,%cl
81005606:	74 56                	je     8100565e <L15>
81005608:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100560e:	74 16                	je     81005626 <L5>
81005610:	8a 0f                	mov    (%edi),%cl
81005612:	47                   	inc    %edi
81005613:	84 c9                	test   %cl,%cl
81005615:	74 47                	je     8100565e <L15>
81005617:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100561d:	74 07                	je     81005626 <L5>
8100561f:	8a 0f                	mov    (%edi),%cl
81005621:	47                   	inc    %edi
81005622:	84 c9                	test   %cl,%cl
81005624:	74 38                	je     8100565e <L15>

81005626 <L5>:
81005626:	83 ef 04             	sub    $0x4,%edi
81005629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81005630 <L10>:
81005630:	83 c7 04             	add    $0x4,%edi
81005633:	8b 0f                	mov    (%edi),%ecx
81005635:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100563b:	f7 d1                	not    %ecx
8100563d:	21 c8                	and    %ecx,%eax
8100563f:	a9 80 80 80 80       	test   $0x80808080,%eax
81005644:	74 ea                	je     81005630 <L10>
81005646:	f7 d1                	not    %ecx
81005648:	47                   	inc    %edi
81005649:	84 c9                	test   %cl,%cl
8100564b:	74 11                	je     8100565e <L15>
8100564d:	47                   	inc    %edi
8100564e:	c1 e9 08             	shr    $0x8,%ecx
81005651:	84 c9                	test   %cl,%cl
81005653:	74 09                	je     8100565e <L15>
81005655:	47                   	inc    %edi
81005656:	c1 e9 08             	shr    $0x8,%ecx
81005659:	84 c9                	test   %cl,%cl
8100565b:	74 01                	je     8100565e <L15>
8100565d:	47                   	inc    %edi

8100565e <L15>:
8100565e:	29 d7                	sub    %edx,%edi
81005660:	8d 47 ff             	lea    -0x1(%edi),%eax
81005663:	8d 65 fc             	lea    -0x4(%ebp),%esp
81005666:	5f                   	pop    %edi
81005667:	c9                   	leave  
81005668:	c3                   	ret    

81005669 <strtok>:
81005669:	55                   	push   %ebp
8100566a:	89 e5                	mov    %esp,%ebp
8100566c:	83 ec 18             	sub    $0x18,%esp
8100566f:	8b 55 08             	mov    0x8(%ebp),%edx
81005672:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005675:	a1 24 83 00 81       	mov    0x81008324,%eax
8100567a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100567d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005680:	83 c0 5c             	add    $0x5c,%eax
81005683:	6a 01                	push   $0x1
81005685:	50                   	push   %eax
81005686:	51                   	push   %ecx
81005687:	52                   	push   %edx
81005688:	e8 05 00 00 00       	call   81005692 <__strtok_r>
8100568d:	83 c4 10             	add    $0x10,%esp
81005690:	c9                   	leave  
81005691:	c3                   	ret    

81005692 <__strtok_r>:
81005692:	55                   	push   %ebp
81005693:	89 e5                	mov    %esp,%ebp
81005695:	57                   	push   %edi
81005696:	56                   	push   %esi
81005697:	53                   	push   %ebx
81005698:	83 ec 10             	sub    $0x10,%esp
8100569b:	8b 45 08             	mov    0x8(%ebp),%eax
8100569e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810056a1:	85 c0                	test   %eax,%eax
810056a3:	75 13                	jne    810056b8 <__strtok_r+0x26>
810056a5:	8b 45 10             	mov    0x10(%ebp),%eax
810056a8:	8b 00                	mov    (%eax),%eax
810056aa:	85 c0                	test   %eax,%eax
810056ac:	75 0a                	jne    810056b8 <__strtok_r+0x26>
810056ae:	b8 00 00 00 00       	mov    $0x0,%eax
810056b3:	e9 92 00 00 00       	jmp    8100574a <__strtok_r+0xb8>
810056b8:	90                   	nop
810056b9:	89 c2                	mov    %eax,%edx
810056bb:	8d 42 01             	lea    0x1(%edx),%eax
810056be:	0f b6 12             	movzbl (%edx),%edx
810056c1:	0f be f2             	movsbl %dl,%esi
810056c4:	89 cf                	mov    %ecx,%edi
810056c6:	eb 1c                	jmp    810056e4 <__strtok_r+0x52>
810056c8:	39 de                	cmp    %ebx,%esi
810056ca:	75 18                	jne    810056e4 <__strtok_r+0x52>
810056cc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810056d0:	74 02                	je     810056d4 <__strtok_r+0x42>
810056d2:	eb e5                	jmp    810056b9 <__strtok_r+0x27>
810056d4:	8b 55 10             	mov    0x10(%ebp),%edx
810056d7:	89 02                	mov    %eax,(%edx)
810056d9:	8d 50 ff             	lea    -0x1(%eax),%edx
810056dc:	c6 02 00             	movb   $0x0,(%edx)
810056df:	83 e8 01             	sub    $0x1,%eax
810056e2:	eb 66                	jmp    8100574a <__strtok_r+0xb8>
810056e4:	89 fa                	mov    %edi,%edx
810056e6:	8d 7a 01             	lea    0x1(%edx),%edi
810056e9:	0f b6 12             	movzbl (%edx),%edx
810056ec:	0f be da             	movsbl %dl,%ebx
810056ef:	85 db                	test   %ebx,%ebx
810056f1:	75 d5                	jne    810056c8 <__strtok_r+0x36>
810056f3:	85 f6                	test   %esi,%esi
810056f5:	75 10                	jne    81005707 <__strtok_r+0x75>
810056f7:	8b 45 10             	mov    0x10(%ebp),%eax
810056fa:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005700:	b8 00 00 00 00       	mov    $0x0,%eax
81005705:	eb 43                	jmp    8100574a <__strtok_r+0xb8>
81005707:	8d 50 ff             	lea    -0x1(%eax),%edx
8100570a:	89 55 f0             	mov    %edx,-0x10(%ebp)
8100570d:	89 c2                	mov    %eax,%edx
8100570f:	8d 42 01             	lea    0x1(%edx),%eax
81005712:	0f b6 12             	movzbl (%edx),%edx
81005715:	0f be f2             	movsbl %dl,%esi
81005718:	89 cf                	mov    %ecx,%edi
8100571a:	89 fa                	mov    %edi,%edx
8100571c:	8d 7a 01             	lea    0x1(%edx),%edi
8100571f:	0f b6 12             	movzbl (%edx),%edx
81005722:	0f be da             	movsbl %dl,%ebx
81005725:	39 f3                	cmp    %esi,%ebx
81005727:	75 1b                	jne    81005744 <__strtok_r+0xb2>
81005729:	85 f6                	test   %esi,%esi
8100572b:	75 07                	jne    81005734 <__strtok_r+0xa2>
8100572d:	b8 00 00 00 00       	mov    $0x0,%eax
81005732:	eb 06                	jmp    8100573a <__strtok_r+0xa8>
81005734:	8d 50 ff             	lea    -0x1(%eax),%edx
81005737:	c6 02 00             	movb   $0x0,(%edx)
8100573a:	8b 55 10             	mov    0x10(%ebp),%edx
8100573d:	89 02                	mov    %eax,(%edx)
8100573f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005742:	eb 06                	jmp    8100574a <__strtok_r+0xb8>
81005744:	85 db                	test   %ebx,%ebx
81005746:	75 d2                	jne    8100571a <__strtok_r+0x88>
81005748:	eb c3                	jmp    8100570d <__strtok_r+0x7b>
8100574a:	83 c4 10             	add    $0x10,%esp
8100574d:	5b                   	pop    %ebx
8100574e:	5e                   	pop    %esi
8100574f:	5f                   	pop    %edi
81005750:	5d                   	pop    %ebp
81005751:	c3                   	ret    

81005752 <strtok_r>:
81005752:	55                   	push   %ebp
81005753:	89 e5                	mov    %esp,%ebp
81005755:	8b 45 08             	mov    0x8(%ebp),%eax
81005758:	8b 55 0c             	mov    0xc(%ebp),%edx
8100575b:	6a 01                	push   $0x1
8100575d:	ff 75 10             	push   0x10(%ebp)
81005760:	52                   	push   %edx
81005761:	50                   	push   %eax
81005762:	e8 2b ff ff ff       	call   81005692 <__strtok_r>
81005767:	83 c4 10             	add    $0x10,%esp
8100576a:	c9                   	leave  
8100576b:	c3                   	ret    

8100576c <__locale_ctype_ptr_l>:
8100576c:	55                   	push   %ebp
8100576d:	89 e5                	mov    %esp,%ebp
8100576f:	b8 c0 7d 00 81       	mov    $0x81007dc0,%eax
81005774:	5d                   	pop    %ebp
81005775:	c3                   	ret    

81005776 <__get_global_locale>:
81005776:	55                   	push   %ebp
81005777:	89 e5                	mov    %esp,%ebp
81005779:	b8 60 87 00 81       	mov    $0x81008760,%eax
8100577e:	5d                   	pop    %ebp
8100577f:	c3                   	ret    

81005780 <__get_current_locale>:
81005780:	55                   	push   %ebp
81005781:	89 e5                	mov    %esp,%ebp
81005783:	e8 ee ff ff ff       	call   81005776 <__get_global_locale>
81005788:	5d                   	pop    %ebp
81005789:	c3                   	ret    

8100578a <_strtol_l>:
8100578a:	55                   	push   %ebp
8100578b:	89 e5                	mov    %esp,%ebp
8100578d:	57                   	push   %edi
8100578e:	56                   	push   %esi
8100578f:	53                   	push   %ebx
81005790:	83 ec 1c             	sub    $0x1c,%esp
81005793:	8b 75 0c             	mov    0xc(%ebp),%esi
81005796:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100579d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810057a1:	78 0c                	js     810057af <_strtol_l+0x25>
810057a3:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810057a7:	74 06                	je     810057af <_strtol_l+0x25>
810057a9:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
810057ad:	7e 15                	jle    810057c4 <_strtol_l+0x3a>
810057af:	e8 44 06 00 00       	call   81005df8 <__errno>
810057b4:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810057ba:	b8 00 00 00 00       	mov    $0x0,%eax
810057bf:	e9 90 01 00 00       	jmp    81005954 <_strtol_l+0x1ca>
810057c4:	89 f0                	mov    %esi,%eax
810057c6:	8d 70 01             	lea    0x1(%eax),%esi
810057c9:	0f b6 00             	movzbl (%eax),%eax
810057cc:	0f b6 d8             	movzbl %al,%ebx
810057cf:	83 ec 0c             	sub    $0xc,%esp
810057d2:	ff 75 18             	push   0x18(%ebp)
810057d5:	e8 92 ff ff ff       	call   8100576c <__locale_ctype_ptr_l>
810057da:	83 c4 10             	add    $0x10,%esp
810057dd:	89 da                	mov    %ebx,%edx
810057df:	83 c2 01             	add    $0x1,%edx
810057e2:	01 d0                	add    %edx,%eax
810057e4:	0f b6 00             	movzbl (%eax),%eax
810057e7:	0f be c0             	movsbl %al,%eax
810057ea:	83 e0 08             	and    $0x8,%eax
810057ed:	85 c0                	test   %eax,%eax
810057ef:	75 d3                	jne    810057c4 <_strtol_l+0x3a>
810057f1:	83 fb 2d             	cmp    $0x2d,%ebx
810057f4:	75 14                	jne    8100580a <_strtol_l+0x80>
810057f6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810057fd:	89 f0                	mov    %esi,%eax
810057ff:	8d 70 01             	lea    0x1(%eax),%esi
81005802:	0f b6 00             	movzbl (%eax),%eax
81005805:	0f b6 d8             	movzbl %al,%ebx
81005808:	eb 10                	jmp    8100581a <_strtol_l+0x90>
8100580a:	83 fb 2b             	cmp    $0x2b,%ebx
8100580d:	75 0b                	jne    8100581a <_strtol_l+0x90>
8100580f:	89 f0                	mov    %esi,%eax
81005811:	8d 70 01             	lea    0x1(%eax),%esi
81005814:	0f b6 00             	movzbl (%eax),%eax
81005817:	0f b6 d8             	movzbl %al,%ebx
8100581a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100581e:	74 06                	je     81005826 <_strtol_l+0x9c>
81005820:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81005824:	75 26                	jne    8100584c <_strtol_l+0xc2>
81005826:	83 fb 30             	cmp    $0x30,%ebx
81005829:	75 21                	jne    8100584c <_strtol_l+0xc2>
8100582b:	0f b6 06             	movzbl (%esi),%eax
8100582e:	3c 78                	cmp    $0x78,%al
81005830:	74 07                	je     81005839 <_strtol_l+0xaf>
81005832:	0f b6 06             	movzbl (%esi),%eax
81005835:	3c 58                	cmp    $0x58,%al
81005837:	75 13                	jne    8100584c <_strtol_l+0xc2>
81005839:	8d 46 01             	lea    0x1(%esi),%eax
8100583c:	0f b6 00             	movzbl (%eax),%eax
8100583f:	0f b6 d8             	movzbl %al,%ebx
81005842:	83 c6 02             	add    $0x2,%esi
81005845:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
8100584c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005850:	75 14                	jne    81005866 <_strtol_l+0xdc>
81005852:	83 fb 30             	cmp    $0x30,%ebx
81005855:	75 07                	jne    8100585e <_strtol_l+0xd4>
81005857:	b8 08 00 00 00       	mov    $0x8,%eax
8100585c:	eb 05                	jmp    81005863 <_strtol_l+0xd9>
8100585e:	b8 0a 00 00 00       	mov    $0xa,%eax
81005863:	89 45 14             	mov    %eax,0x14(%ebp)
81005866:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100586a:	74 07                	je     81005873 <_strtol_l+0xe9>
8100586c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81005871:	eb 05                	jmp    81005878 <_strtol_l+0xee>
81005873:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005878:	89 c7                	mov    %eax,%edi
8100587a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100587d:	89 f8                	mov    %edi,%eax
8100587f:	ba 00 00 00 00       	mov    $0x0,%edx
81005884:	f7 f1                	div    %ecx
81005886:	89 d0                	mov    %edx,%eax
81005888:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100588b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100588e:	89 f8                	mov    %edi,%eax
81005890:	ba 00 00 00 00       	mov    $0x0,%edx
81005895:	f7 f1                	div    %ecx
81005897:	89 c2                	mov    %eax,%edx
81005899:	bf 00 00 00 00       	mov    $0x0,%edi
8100589e:	b9 00 00 00 00       	mov    $0x0,%ecx
810058a3:	83 fb 2f             	cmp    $0x2f,%ebx
810058a6:	7e 0a                	jle    810058b2 <_strtol_l+0x128>
810058a8:	83 fb 39             	cmp    $0x39,%ebx
810058ab:	7f 05                	jg     810058b2 <_strtol_l+0x128>
810058ad:	83 eb 30             	sub    $0x30,%ebx
810058b0:	eb 1c                	jmp    810058ce <_strtol_l+0x144>
810058b2:	83 fb 40             	cmp    $0x40,%ebx
810058b5:	7e 0a                	jle    810058c1 <_strtol_l+0x137>
810058b7:	83 fb 5a             	cmp    $0x5a,%ebx
810058ba:	7f 05                	jg     810058c1 <_strtol_l+0x137>
810058bc:	83 eb 37             	sub    $0x37,%ebx
810058bf:	eb 0d                	jmp    810058ce <_strtol_l+0x144>
810058c1:	83 fb 60             	cmp    $0x60,%ebx
810058c4:	7e 46                	jle    8100590c <_strtol_l+0x182>
810058c6:	83 fb 7a             	cmp    $0x7a,%ebx
810058c9:	7f 41                	jg     8100590c <_strtol_l+0x182>
810058cb:	83 eb 57             	sub    $0x57,%ebx
810058ce:	3b 5d 14             	cmp    0x14(%ebp),%ebx
810058d1:	7d 38                	jge    8100590b <_strtol_l+0x181>
810058d3:	89 c8                	mov    %ecx,%eax
810058d5:	85 c0                	test   %eax,%eax
810058d7:	78 0f                	js     810058e8 <_strtol_l+0x15e>
810058d9:	89 d0                	mov    %edx,%eax
810058db:	39 c7                	cmp    %eax,%edi
810058dd:	77 09                	ja     810058e8 <_strtol_l+0x15e>
810058df:	39 c7                	cmp    %eax,%edi
810058e1:	75 0c                	jne    810058ef <_strtol_l+0x165>
810058e3:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
810058e6:	7e 07                	jle    810058ef <_strtol_l+0x165>
810058e8:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
810058ed:	eb 0f                	jmp    810058fe <_strtol_l+0x174>
810058ef:	b9 01 00 00 00       	mov    $0x1,%ecx
810058f4:	8b 45 14             	mov    0x14(%ebp),%eax
810058f7:	0f af f8             	imul   %eax,%edi
810058fa:	89 d8                	mov    %ebx,%eax
810058fc:	01 c7                	add    %eax,%edi
810058fe:	89 f0                	mov    %esi,%eax
81005900:	8d 70 01             	lea    0x1(%eax),%esi
81005903:	0f b6 00             	movzbl (%eax),%eax
81005906:	0f b6 d8             	movzbl %al,%ebx
81005909:	eb 98                	jmp    810058a3 <_strtol_l+0x119>
8100590b:	90                   	nop
8100590c:	89 c8                	mov    %ecx,%eax
8100590e:	85 c0                	test   %eax,%eax
81005910:	79 1f                	jns    81005931 <_strtol_l+0x1a7>
81005912:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005916:	74 07                	je     8100591f <_strtol_l+0x195>
81005918:	b8 00 00 00 80       	mov    $0x80000000,%eax
8100591d:	eb 05                	jmp    81005924 <_strtol_l+0x19a>
8100591f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81005924:	89 c7                	mov    %eax,%edi
81005926:	8b 45 08             	mov    0x8(%ebp),%eax
81005929:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
8100592f:	eb 08                	jmp    81005939 <_strtol_l+0x1af>
81005931:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005935:	74 02                	je     81005939 <_strtol_l+0x1af>
81005937:	f7 df                	neg    %edi
81005939:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100593d:	74 13                	je     81005952 <_strtol_l+0x1c8>
8100593f:	89 c8                	mov    %ecx,%eax
81005941:	85 c0                	test   %eax,%eax
81005943:	74 05                	je     8100594a <_strtol_l+0x1c0>
81005945:	8d 46 ff             	lea    -0x1(%esi),%eax
81005948:	eb 03                	jmp    8100594d <_strtol_l+0x1c3>
8100594a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100594d:	8b 55 10             	mov    0x10(%ebp),%edx
81005950:	89 02                	mov    %eax,(%edx)
81005952:	89 f8                	mov    %edi,%eax
81005954:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005957:	5b                   	pop    %ebx
81005958:	5e                   	pop    %esi
81005959:	5f                   	pop    %edi
8100595a:	5d                   	pop    %ebp
8100595b:	c3                   	ret    

8100595c <_strtol_r>:
8100595c:	55                   	push   %ebp
8100595d:	89 e5                	mov    %esp,%ebp
8100595f:	83 ec 08             	sub    $0x8,%esp
81005962:	e8 19 fe ff ff       	call   81005780 <__get_current_locale>
81005967:	83 ec 0c             	sub    $0xc,%esp
8100596a:	50                   	push   %eax
8100596b:	ff 75 14             	push   0x14(%ebp)
8100596e:	ff 75 10             	push   0x10(%ebp)
81005971:	ff 75 0c             	push   0xc(%ebp)
81005974:	ff 75 08             	push   0x8(%ebp)
81005977:	e8 0e fe ff ff       	call   8100578a <_strtol_l>
8100597c:	83 c4 20             	add    $0x20,%esp
8100597f:	c9                   	leave  
81005980:	c3                   	ret    

81005981 <strtol_l>:
81005981:	55                   	push   %ebp
81005982:	89 e5                	mov    %esp,%ebp
81005984:	83 ec 08             	sub    $0x8,%esp
81005987:	a1 24 83 00 81       	mov    0x81008324,%eax
8100598c:	83 ec 0c             	sub    $0xc,%esp
8100598f:	ff 75 14             	push   0x14(%ebp)
81005992:	ff 75 10             	push   0x10(%ebp)
81005995:	ff 75 0c             	push   0xc(%ebp)
81005998:	ff 75 08             	push   0x8(%ebp)
8100599b:	50                   	push   %eax
8100599c:	e8 e9 fd ff ff       	call   8100578a <_strtol_l>
810059a1:	83 c4 20             	add    $0x20,%esp
810059a4:	c9                   	leave  
810059a5:	c3                   	ret    

810059a6 <strtol>:
810059a6:	55                   	push   %ebp
810059a7:	89 e5                	mov    %esp,%ebp
810059a9:	83 ec 08             	sub    $0x8,%esp
810059ac:	e8 cf fd ff ff       	call   81005780 <__get_current_locale>
810059b1:	8b 15 24 83 00 81    	mov    0x81008324,%edx
810059b7:	83 ec 0c             	sub    $0xc,%esp
810059ba:	50                   	push   %eax
810059bb:	ff 75 10             	push   0x10(%ebp)
810059be:	ff 75 0c             	push   0xc(%ebp)
810059c1:	ff 75 08             	push   0x8(%ebp)
810059c4:	52                   	push   %edx
810059c5:	e8 c0 fd ff ff       	call   8100578a <_strtol_l>
810059ca:	83 c4 20             	add    $0x20,%esp
810059cd:	c9                   	leave  
810059ce:	c3                   	ret    

810059cf <__swbuf_r>:
810059cf:	55                   	push   %ebp
810059d0:	89 e5                	mov    %esp,%ebp
810059d2:	57                   	push   %edi
810059d3:	56                   	push   %esi
810059d4:	53                   	push   %ebx
810059d5:	83 ec 1c             	sub    $0x1c,%esp
810059d8:	8b 7d 0c             	mov    0xc(%ebp),%edi
810059db:	8b 5d 10             	mov    0x10(%ebp),%ebx
810059de:	8b 45 08             	mov    0x8(%ebp),%eax
810059e1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810059e4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810059e8:	74 18                	je     81005a02 <__swbuf_r+0x33>
810059ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810059ed:	8b 40 38             	mov    0x38(%eax),%eax
810059f0:	85 c0                	test   %eax,%eax
810059f2:	75 0e                	jne    81005a02 <__swbuf_r+0x33>
810059f4:	83 ec 0c             	sub    $0xc,%esp
810059f7:	ff 75 e4             	push   -0x1c(%ebp)
810059fa:	e8 24 bb ff ff       	call   81001523 <__sinit>
810059ff:	83 c4 10             	add    $0x10,%esp
81005a02:	8b 43 18             	mov    0x18(%ebx),%eax
81005a05:	89 43 08             	mov    %eax,0x8(%ebx)
81005a08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a0c:	98                   	cwtl   
81005a0d:	83 e0 08             	and    $0x8,%eax
81005a10:	85 c0                	test   %eax,%eax
81005a12:	74 07                	je     81005a1b <__swbuf_r+0x4c>
81005a14:	8b 43 10             	mov    0x10(%ebx),%eax
81005a17:	85 c0                	test   %eax,%eax
81005a19:	75 1d                	jne    81005a38 <__swbuf_r+0x69>
81005a1b:	83 ec 08             	sub    $0x8,%esp
81005a1e:	53                   	push   %ebx
81005a1f:	ff 75 08             	push   0x8(%ebp)
81005a22:	e8 21 01 00 00       	call   81005b48 <__swsetup_r>
81005a27:	83 c4 10             	add    $0x10,%esp
81005a2a:	85 c0                	test   %eax,%eax
81005a2c:	74 0a                	je     81005a38 <__swbuf_r+0x69>
81005a2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005a33:	e9 a1 00 00 00       	jmp    81005ad9 <__swbuf_r+0x10a>
81005a38:	89 f8                	mov    %edi,%eax
81005a3a:	0f b6 f8             	movzbl %al,%edi
81005a3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a41:	98                   	cwtl   
81005a42:	25 00 20 00 00       	and    $0x2000,%eax
81005a47:	85 c0                	test   %eax,%eax
81005a49:	75 14                	jne    81005a5f <__swbuf_r+0x90>
81005a4b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a4f:	80 cc 20             	or     $0x20,%ah
81005a52:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a56:	8b 43 64             	mov    0x64(%ebx),%eax
81005a59:	80 e4 df             	and    $0xdf,%ah
81005a5c:	89 43 64             	mov    %eax,0x64(%ebx)
81005a5f:	8b 03                	mov    (%ebx),%eax
81005a61:	8b 53 10             	mov    0x10(%ebx),%edx
81005a64:	29 d0                	sub    %edx,%eax
81005a66:	89 c6                	mov    %eax,%esi
81005a68:	8b 43 14             	mov    0x14(%ebx),%eax
81005a6b:	39 c6                	cmp    %eax,%esi
81005a6d:	7c 1f                	jl     81005a8e <__swbuf_r+0xbf>
81005a6f:	83 ec 08             	sub    $0x8,%esp
81005a72:	53                   	push   %ebx
81005a73:	ff 75 08             	push   0x8(%ebp)
81005a76:	e8 a5 b5 ff ff       	call   81001020 <_fflush_r>
81005a7b:	83 c4 10             	add    $0x10,%esp
81005a7e:	85 c0                	test   %eax,%eax
81005a80:	74 07                	je     81005a89 <__swbuf_r+0xba>
81005a82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005a87:	eb 50                	jmp    81005ad9 <__swbuf_r+0x10a>
81005a89:	be 00 00 00 00       	mov    $0x0,%esi
81005a8e:	8b 43 08             	mov    0x8(%ebx),%eax
81005a91:	83 e8 01             	sub    $0x1,%eax
81005a94:	89 43 08             	mov    %eax,0x8(%ebx)
81005a97:	8b 03                	mov    (%ebx),%eax
81005a99:	8d 50 01             	lea    0x1(%eax),%edx
81005a9c:	89 13                	mov    %edx,(%ebx)
81005a9e:	89 fa                	mov    %edi,%edx
81005aa0:	88 10                	mov    %dl,(%eax)
81005aa2:	83 c6 01             	add    $0x1,%esi
81005aa5:	8b 43 14             	mov    0x14(%ebx),%eax
81005aa8:	39 c6                	cmp    %eax,%esi
81005aaa:	74 11                	je     81005abd <__swbuf_r+0xee>
81005aac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ab0:	98                   	cwtl   
81005ab1:	83 e0 01             	and    $0x1,%eax
81005ab4:	85 c0                	test   %eax,%eax
81005ab6:	74 1f                	je     81005ad7 <__swbuf_r+0x108>
81005ab8:	83 ff 0a             	cmp    $0xa,%edi
81005abb:	75 1a                	jne    81005ad7 <__swbuf_r+0x108>
81005abd:	83 ec 08             	sub    $0x8,%esp
81005ac0:	53                   	push   %ebx
81005ac1:	ff 75 08             	push   0x8(%ebp)
81005ac4:	e8 57 b5 ff ff       	call   81001020 <_fflush_r>
81005ac9:	83 c4 10             	add    $0x10,%esp
81005acc:	85 c0                	test   %eax,%eax
81005ace:	74 07                	je     81005ad7 <__swbuf_r+0x108>
81005ad0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005ad5:	eb 02                	jmp    81005ad9 <__swbuf_r+0x10a>
81005ad7:	89 f8                	mov    %edi,%eax
81005ad9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005adc:	5b                   	pop    %ebx
81005add:	5e                   	pop    %esi
81005ade:	5f                   	pop    %edi
81005adf:	5d                   	pop    %ebp
81005ae0:	c3                   	ret    

81005ae1 <__swbuf>:
81005ae1:	55                   	push   %ebp
81005ae2:	89 e5                	mov    %esp,%ebp
81005ae4:	83 ec 08             	sub    $0x8,%esp
81005ae7:	8b 55 08             	mov    0x8(%ebp),%edx
81005aea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81005aed:	a1 24 83 00 81       	mov    0x81008324,%eax
81005af2:	83 ec 04             	sub    $0x4,%esp
81005af5:	51                   	push   %ecx
81005af6:	52                   	push   %edx
81005af7:	50                   	push   %eax
81005af8:	e8 d2 fe ff ff       	call   810059cf <__swbuf_r>
81005afd:	83 c4 10             	add    $0x10,%esp
81005b00:	c9                   	leave  
81005b01:	c3                   	ret    

81005b02 <_write_r>:
81005b02:	55                   	push   %ebp
81005b03:	89 e5                	mov    %esp,%ebp
81005b05:	83 ec 18             	sub    $0x18,%esp
81005b08:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
81005b0f:	00 00 00 
81005b12:	83 ec 04             	sub    $0x4,%esp
81005b15:	ff 75 14             	push   0x14(%ebp)
81005b18:	ff 75 10             	push   0x10(%ebp)
81005b1b:	ff 75 0c             	push   0xc(%ebp)
81005b1e:	e8 16 af ff ff       	call   81000a39 <write>
81005b23:	83 c4 10             	add    $0x10,%esp
81005b26:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b29:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005b2d:	75 14                	jne    81005b43 <_write_r+0x41>
81005b2f:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
81005b34:	85 c0                	test   %eax,%eax
81005b36:	74 0b                	je     81005b43 <_write_r+0x41>
81005b38:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
81005b3e:	8b 45 08             	mov    0x8(%ebp),%eax
81005b41:	89 10                	mov    %edx,(%eax)
81005b43:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b46:	c9                   	leave  
81005b47:	c3                   	ret    

81005b48 <__swsetup_r>:
81005b48:	55                   	push   %ebp
81005b49:	89 e5                	mov    %esp,%ebp
81005b4b:	53                   	push   %ebx
81005b4c:	83 ec 14             	sub    $0x14,%esp
81005b4f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005b52:	a1 24 83 00 81       	mov    0x81008324,%eax
81005b57:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b5a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005b5e:	74 18                	je     81005b78 <__swsetup_r+0x30>
81005b60:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b63:	8b 40 38             	mov    0x38(%eax),%eax
81005b66:	85 c0                	test   %eax,%eax
81005b68:	75 0e                	jne    81005b78 <__swsetup_r+0x30>
81005b6a:	83 ec 0c             	sub    $0xc,%esp
81005b6d:	ff 75 f4             	push   -0xc(%ebp)
81005b70:	e8 ae b9 ff ff       	call   81001523 <__sinit>
81005b75:	83 c4 10             	add    $0x10,%esp
81005b78:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005b7c:	98                   	cwtl   
81005b7d:	83 e0 08             	and    $0x8,%eax
81005b80:	85 c0                	test   %eax,%eax
81005b82:	0f 85 82 00 00 00    	jne    81005c0a <__swsetup_r+0xc2>
81005b88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005b8c:	98                   	cwtl   
81005b8d:	83 e0 10             	and    $0x10,%eax
81005b90:	85 c0                	test   %eax,%eax
81005b92:	75 1e                	jne    81005bb2 <__swsetup_r+0x6a>
81005b94:	8b 45 08             	mov    0x8(%ebp),%eax
81005b97:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81005b9d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005ba1:	83 c8 40             	or     $0x40,%eax
81005ba4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005ba8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005bad:	e9 ec 00 00 00       	jmp    81005c9e <__swsetup_r+0x156>
81005bb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bb6:	98                   	cwtl   
81005bb7:	83 e0 04             	and    $0x4,%eax
81005bba:	85 c0                	test   %eax,%eax
81005bbc:	74 41                	je     81005bff <__swsetup_r+0xb7>
81005bbe:	8b 43 30             	mov    0x30(%ebx),%eax
81005bc1:	85 c0                	test   %eax,%eax
81005bc3:	74 23                	je     81005be8 <__swsetup_r+0xa0>
81005bc5:	8b 53 30             	mov    0x30(%ebx),%edx
81005bc8:	8d 43 40             	lea    0x40(%ebx),%eax
81005bcb:	39 c2                	cmp    %eax,%edx
81005bcd:	74 12                	je     81005be1 <__swsetup_r+0x99>
81005bcf:	8b 43 30             	mov    0x30(%ebx),%eax
81005bd2:	83 ec 08             	sub    $0x8,%esp
81005bd5:	50                   	push   %eax
81005bd6:	ff 75 08             	push   0x8(%ebp)
81005bd9:	e8 9b bb ff ff       	call   81001779 <_free_r>
81005bde:	83 c4 10             	add    $0x10,%esp
81005be1:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81005be8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005bec:	83 e0 db             	and    $0xffffffdb,%eax
81005bef:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005bf3:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81005bfa:	8b 43 10             	mov    0x10(%ebx),%eax
81005bfd:	89 03                	mov    %eax,(%ebx)
81005bff:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c03:	83 c8 08             	or     $0x8,%eax
81005c06:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c0a:	8b 43 10             	mov    0x10(%ebx),%eax
81005c0d:	85 c0                	test   %eax,%eax
81005c0f:	75 2b                	jne    81005c3c <__swsetup_r+0xf4>
81005c11:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c15:	98                   	cwtl   
81005c16:	25 00 02 00 00       	and    $0x200,%eax
81005c1b:	85 c0                	test   %eax,%eax
81005c1d:	74 0e                	je     81005c2d <__swsetup_r+0xe5>
81005c1f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c23:	98                   	cwtl   
81005c24:	25 80 00 00 00       	and    $0x80,%eax
81005c29:	85 c0                	test   %eax,%eax
81005c2b:	74 0f                	je     81005c3c <__swsetup_r+0xf4>
81005c2d:	83 ec 08             	sub    $0x8,%esp
81005c30:	53                   	push   %ebx
81005c31:	ff 75 08             	push   0x8(%ebp)
81005c34:	e8 b7 d5 ff ff       	call   810031f0 <__smakebuf_r>
81005c39:	83 c4 10             	add    $0x10,%esp
81005c3c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c40:	98                   	cwtl   
81005c41:	83 e0 01             	and    $0x1,%eax
81005c44:	85 c0                	test   %eax,%eax
81005c46:	74 11                	je     81005c59 <__swsetup_r+0x111>
81005c48:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81005c4f:	8b 43 14             	mov    0x14(%ebx),%eax
81005c52:	f7 d8                	neg    %eax
81005c54:	89 43 18             	mov    %eax,0x18(%ebx)
81005c57:	eb 19                	jmp    81005c72 <__swsetup_r+0x12a>
81005c59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c5d:	98                   	cwtl   
81005c5e:	83 e0 02             	and    $0x2,%eax
81005c61:	85 c0                	test   %eax,%eax
81005c63:	75 05                	jne    81005c6a <__swsetup_r+0x122>
81005c65:	8b 43 14             	mov    0x14(%ebx),%eax
81005c68:	eb 05                	jmp    81005c6f <__swsetup_r+0x127>
81005c6a:	b8 00 00 00 00       	mov    $0x0,%eax
81005c6f:	89 43 08             	mov    %eax,0x8(%ebx)
81005c72:	8b 43 10             	mov    0x10(%ebx),%eax
81005c75:	85 c0                	test   %eax,%eax
81005c77:	75 20                	jne    81005c99 <__swsetup_r+0x151>
81005c79:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c7d:	98                   	cwtl   
81005c7e:	25 80 00 00 00       	and    $0x80,%eax
81005c83:	85 c0                	test   %eax,%eax
81005c85:	74 12                	je     81005c99 <__swsetup_r+0x151>
81005c87:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005c8b:	83 c8 40             	or     $0x40,%eax
81005c8e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005c92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005c97:	eb 05                	jmp    81005c9e <__swsetup_r+0x156>
81005c99:	b8 00 00 00 00       	mov    $0x0,%eax
81005c9e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005ca1:	c9                   	leave  
81005ca2:	c3                   	ret    

81005ca3 <__call_exitprocs>:
81005ca3:	55                   	push   %ebp
81005ca4:	89 e5                	mov    %esp,%ebp
81005ca6:	57                   	push   %edi
81005ca7:	56                   	push   %esi
81005ca8:	53                   	push   %ebx
81005ca9:	83 ec 1c             	sub    $0x1c,%esp
81005cac:	a1 78 7b 00 81       	mov    0x81007b78,%eax
81005cb1:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81005cb7:	a1 78 7b 00 81       	mov    0x81007b78,%eax
81005cbc:	05 48 01 00 00       	add    $0x148,%eax
81005cc1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005cc4:	90                   	nop
81005cc5:	85 db                	test   %ebx,%ebx
81005cc7:	0f 84 e1 00 00 00    	je     81005dae <__call_exitprocs+0x10b>
81005ccd:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81005cd3:	8b 43 04             	mov    0x4(%ebx),%eax
81005cd6:	8d 70 ff             	lea    -0x1(%eax),%esi
81005cd9:	e9 c6 00 00 00       	jmp    81005da4 <__call_exitprocs+0x101>
81005cde:	b8 01 00 00 00       	mov    $0x1,%eax
81005ce3:	89 f1                	mov    %esi,%ecx
81005ce5:	d3 e0                	shl    %cl,%eax
81005ce7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005cea:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005cee:	74 17                	je     81005d07 <__call_exitprocs+0x64>
81005cf0:	85 ff                	test   %edi,%edi
81005cf2:	0f 84 a5 00 00 00    	je     81005d9d <__call_exitprocs+0xfa>
81005cf8:	8d 46 20             	lea    0x20(%esi),%eax
81005cfb:	8b 04 87             	mov    (%edi,%eax,4),%eax
81005cfe:	39 45 0c             	cmp    %eax,0xc(%ebp)
81005d01:	0f 85 96 00 00 00    	jne    81005d9d <__call_exitprocs+0xfa>
81005d07:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81005d0b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d0e:	8b 43 04             	mov    0x4(%ebx),%eax
81005d11:	83 e8 01             	sub    $0x1,%eax
81005d14:	39 c6                	cmp    %eax,%esi
81005d16:	75 0b                	jne    81005d23 <__call_exitprocs+0x80>
81005d18:	8b 43 04             	mov    0x4(%ebx),%eax
81005d1b:	83 e8 01             	sub    $0x1,%eax
81005d1e:	89 43 04             	mov    %eax,0x4(%ebx)
81005d21:	eb 08                	jmp    81005d2b <__call_exitprocs+0x88>
81005d23:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81005d2a:	00 
81005d2b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005d2f:	74 6f                	je     81005da0 <__call_exitprocs+0xfd>
81005d31:	8b 43 04             	mov    0x4(%ebx),%eax
81005d34:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d37:	85 ff                	test   %edi,%edi
81005d39:	74 0f                	je     81005d4a <__call_exitprocs+0xa7>
81005d3b:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81005d41:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005d44:	21 d0                	and    %edx,%eax
81005d46:	85 c0                	test   %eax,%eax
81005d48:	75 07                	jne    81005d51 <__call_exitprocs+0xae>
81005d4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005d4d:	ff d0                	call   *%eax
81005d4f:	eb 32                	jmp    81005d83 <__call_exitprocs+0xe0>
81005d51:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81005d57:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005d5a:	21 d0                	and    %edx,%eax
81005d5c:	85 c0                	test   %eax,%eax
81005d5e:	75 14                	jne    81005d74 <__call_exitprocs+0xd1>
81005d60:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005d63:	83 ec 08             	sub    $0x8,%esp
81005d66:	50                   	push   %eax
81005d67:	ff 75 08             	push   0x8(%ebp)
81005d6a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005d6d:	ff d0                	call   *%eax
81005d6f:	83 c4 10             	add    $0x10,%esp
81005d72:	eb 0f                	jmp    81005d83 <__call_exitprocs+0xe0>
81005d74:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81005d77:	83 ec 0c             	sub    $0xc,%esp
81005d7a:	50                   	push   %eax
81005d7b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005d7e:	ff d0                	call   *%eax
81005d80:	83 c4 10             	add    $0x10,%esp
81005d83:	8b 43 04             	mov    0x4(%ebx),%eax
81005d86:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81005d89:	0f 85 1d ff ff ff    	jne    81005cac <__call_exitprocs+0x9>
81005d8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005d92:	8b 00                	mov    (%eax),%eax
81005d94:	39 c3                	cmp    %eax,%ebx
81005d96:	74 09                	je     81005da1 <__call_exitprocs+0xfe>
81005d98:	e9 0f ff ff ff       	jmp    81005cac <__call_exitprocs+0x9>
81005d9d:	90                   	nop
81005d9e:	eb 01                	jmp    81005da1 <__call_exitprocs+0xfe>
81005da0:	90                   	nop
81005da1:	83 ee 01             	sub    $0x1,%esi
81005da4:	85 f6                	test   %esi,%esi
81005da6:	0f 89 32 ff ff ff    	jns    81005cde <__call_exitprocs+0x3b>
81005dac:	eb 01                	jmp    81005daf <__call_exitprocs+0x10c>
81005dae:	90                   	nop
81005daf:	90                   	nop
81005db0:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005db3:	5b                   	pop    %ebx
81005db4:	5e                   	pop    %esi
81005db5:	5f                   	pop    %edi
81005db6:	5d                   	pop    %ebp
81005db7:	c3                   	ret    

81005db8 <_close_r>:
81005db8:	55                   	push   %ebp
81005db9:	89 e5                	mov    %esp,%ebp
81005dbb:	83 ec 18             	sub    $0x18,%esp
81005dbe:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
81005dc5:	00 00 00 
81005dc8:	83 ec 0c             	sub    $0xc,%esp
81005dcb:	ff 75 0c             	push   0xc(%ebp)
81005dce:	e8 93 ac ff ff       	call   81000a66 <close>
81005dd3:	83 c4 10             	add    $0x10,%esp
81005dd6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005dd9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005ddd:	75 14                	jne    81005df3 <_close_r+0x3b>
81005ddf:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
81005de4:	85 c0                	test   %eax,%eax
81005de6:	74 0b                	je     81005df3 <_close_r+0x3b>
81005de8:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
81005dee:	8b 45 08             	mov    0x8(%ebp),%eax
81005df1:	89 10                	mov    %edx,(%eax)
81005df3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005df6:	c9                   	leave  
81005df7:	c3                   	ret    

81005df8 <__errno>:
81005df8:	55                   	push   %ebp
81005df9:	89 e5                	mov    %esp,%ebp
81005dfb:	a1 24 83 00 81       	mov    0x81008324,%eax
81005e00:	5d                   	pop    %ebp
81005e01:	c3                   	ret    

81005e02 <__sflags>:
81005e02:	55                   	push   %ebp
81005e03:	89 e5                	mov    %esp,%ebp
81005e05:	57                   	push   %edi
81005e06:	56                   	push   %esi
81005e07:	53                   	push   %ebx
81005e08:	8b 55 0c             	mov    0xc(%ebp),%edx
81005e0b:	0f b6 02             	movzbl (%edx),%eax
81005e0e:	0f be c0             	movsbl %al,%eax
81005e11:	83 f8 77             	cmp    $0x77,%eax
81005e14:	74 20                	je     81005e36 <__sflags+0x34>
81005e16:	83 f8 77             	cmp    $0x77,%eax
81005e19:	7f 3d                	jg     81005e58 <__sflags+0x56>
81005e1b:	83 f8 61             	cmp    $0x61,%eax
81005e1e:	74 27                	je     81005e47 <__sflags+0x45>
81005e20:	83 f8 72             	cmp    $0x72,%eax
81005e23:	75 33                	jne    81005e58 <__sflags+0x56>
81005e25:	be 04 00 00 00       	mov    $0x4,%esi
81005e2a:	bb 00 00 00 00       	mov    $0x0,%ebx
81005e2f:	bf 00 00 00 00       	mov    $0x0,%edi
81005e34:	eb 32                	jmp    81005e68 <__sflags+0x66>
81005e36:	be 08 00 00 00       	mov    $0x8,%esi
81005e3b:	bb 01 00 00 00       	mov    $0x1,%ebx
81005e40:	bf 00 06 00 00       	mov    $0x600,%edi
81005e45:	eb 21                	jmp    81005e68 <__sflags+0x66>
81005e47:	be 08 01 00 00       	mov    $0x108,%esi
81005e4c:	bb 01 00 00 00       	mov    $0x1,%ebx
81005e51:	bf 08 02 00 00       	mov    $0x208,%edi
81005e56:	eb 10                	jmp    81005e68 <__sflags+0x66>
81005e58:	8b 45 08             	mov    0x8(%ebp),%eax
81005e5b:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81005e61:	b8 00 00 00 00       	mov    $0x0,%eax
81005e66:	eb 4f                	jmp    81005eb7 <__sflags+0xb5>
81005e68:	eb 38                	jmp    81005ea2 <__sflags+0xa0>
81005e6a:	0f b6 02             	movzbl (%edx),%eax
81005e6d:	0f be c0             	movsbl %al,%eax
81005e70:	83 f8 78             	cmp    $0x78,%eax
81005e73:	74 27                	je     81005e9c <__sflags+0x9a>
81005e75:	83 f8 78             	cmp    $0x78,%eax
81005e78:	7f 27                	jg     81005ea1 <__sflags+0x9f>
81005e7a:	83 f8 2b             	cmp    $0x2b,%eax
81005e7d:	74 07                	je     81005e86 <__sflags+0x84>
81005e7f:	83 f8 62             	cmp    $0x62,%eax
81005e82:	74 1e                	je     81005ea2 <__sflags+0xa0>
81005e84:	eb 1b                	jmp    81005ea1 <__sflags+0x9f>
81005e86:	89 f0                	mov    %esi,%eax
81005e88:	83 e0 e3             	and    $0xffffffe3,%eax
81005e8b:	83 c8 10             	or     $0x10,%eax
81005e8e:	89 c6                	mov    %eax,%esi
81005e90:	89 d8                	mov    %ebx,%eax
81005e92:	83 e0 fc             	and    $0xfffffffc,%eax
81005e95:	83 c8 02             	or     $0x2,%eax
81005e98:	89 c3                	mov    %eax,%ebx
81005e9a:	eb 06                	jmp    81005ea2 <__sflags+0xa0>
81005e9c:	80 cf 08             	or     $0x8,%bh
81005e9f:	eb 01                	jmp    81005ea2 <__sflags+0xa0>
81005ea1:	90                   	nop
81005ea2:	83 c2 01             	add    $0x1,%edx
81005ea5:	0f b6 02             	movzbl (%edx),%eax
81005ea8:	84 c0                	test   %al,%al
81005eaa:	75 be                	jne    81005e6a <__sflags+0x68>
81005eac:	89 da                	mov    %ebx,%edx
81005eae:	09 fa                	or     %edi,%edx
81005eb0:	8b 45 10             	mov    0x10(%ebp),%eax
81005eb3:	89 10                	mov    %edx,(%eax)
81005eb5:	89 f0                	mov    %esi,%eax
81005eb7:	5b                   	pop    %ebx
81005eb8:	5e                   	pop    %esi
81005eb9:	5f                   	pop    %edi
81005eba:	5d                   	pop    %ebp
81005ebb:	c3                   	ret    

81005ebc <_fputc_r>:
81005ebc:	55                   	push   %ebp
81005ebd:	89 e5                	mov    %esp,%ebp
81005ebf:	83 ec 18             	sub    $0x18,%esp
81005ec2:	8b 45 08             	mov    0x8(%ebp),%eax
81005ec5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005ec8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005ecc:	74 18                	je     81005ee6 <_fputc_r+0x2a>
81005ece:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ed1:	8b 40 38             	mov    0x38(%eax),%eax
81005ed4:	85 c0                	test   %eax,%eax
81005ed6:	75 0e                	jne    81005ee6 <_fputc_r+0x2a>
81005ed8:	83 ec 0c             	sub    $0xc,%esp
81005edb:	ff 75 f4             	push   -0xc(%ebp)
81005ede:	e8 40 b6 ff ff       	call   81001523 <__sinit>
81005ee3:	83 c4 10             	add    $0x10,%esp
81005ee6:	83 ec 04             	sub    $0x4,%esp
81005ee9:	ff 75 10             	push   0x10(%ebp)
81005eec:	ff 75 0c             	push   0xc(%ebp)
81005eef:	ff 75 08             	push   0x8(%ebp)
81005ef2:	e8 4c 0c 00 00       	call   81006b43 <_putc_r>
81005ef7:	83 c4 10             	add    $0x10,%esp
81005efa:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005efd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f00:	c9                   	leave  
81005f01:	c3                   	ret    

81005f02 <fputc>:
81005f02:	55                   	push   %ebp
81005f03:	89 e5                	mov    %esp,%ebp
81005f05:	83 ec 18             	sub    $0x18,%esp
81005f08:	a1 24 83 00 81       	mov    0x81008324,%eax
81005f0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005f16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005f1a:	74 18                	je     81005f34 <fputc+0x32>
81005f1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f1f:	8b 40 38             	mov    0x38(%eax),%eax
81005f22:	85 c0                	test   %eax,%eax
81005f24:	75 0e                	jne    81005f34 <fputc+0x32>
81005f26:	83 ec 0c             	sub    $0xc,%esp
81005f29:	ff 75 f0             	push   -0x10(%ebp)
81005f2c:	e8 f2 b5 ff ff       	call   81001523 <__sinit>
81005f31:	83 c4 10             	add    $0x10,%esp
81005f34:	83 ec 04             	sub    $0x4,%esp
81005f37:	ff 75 0c             	push   0xc(%ebp)
81005f3a:	ff 75 08             	push   0x8(%ebp)
81005f3d:	ff 75 f4             	push   -0xc(%ebp)
81005f40:	e8 fe 0b 00 00       	call   81006b43 <_putc_r>
81005f45:	83 c4 10             	add    $0x10,%esp
81005f48:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005f4b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f4e:	c9                   	leave  
81005f4f:	c3                   	ret    

81005f50 <_fputs_r>:
81005f50:	55                   	push   %ebp
81005f51:	89 e5                	mov    %esp,%ebp
81005f53:	83 ec 28             	sub    $0x28,%esp
81005f56:	8b 45 0c             	mov    0xc(%ebp),%eax
81005f59:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005f5c:	83 ec 0c             	sub    $0xc,%esp
81005f5f:	ff 75 0c             	push   0xc(%ebp)
81005f62:	e8 89 f6 ff ff       	call   810055f0 <strlen>
81005f67:	83 c4 10             	add    $0x10,%esp
81005f6a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005f6d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f70:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005f73:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005f76:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005f79:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81005f80:	8b 45 08             	mov    0x8(%ebp),%eax
81005f83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005f86:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005f8a:	74 18                	je     81005fa4 <_fputs_r+0x54>
81005f8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005f8f:	8b 40 38             	mov    0x38(%eax),%eax
81005f92:	85 c0                	test   %eax,%eax
81005f94:	75 0e                	jne    81005fa4 <_fputs_r+0x54>
81005f96:	83 ec 0c             	sub    $0xc,%esp
81005f99:	ff 75 f4             	push   -0xc(%ebp)
81005f9c:	e8 82 b5 ff ff       	call   81001523 <__sinit>
81005fa1:	83 c4 10             	add    $0x10,%esp
81005fa4:	8b 45 10             	mov    0x10(%ebp),%eax
81005fa7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005fab:	98                   	cwtl   
81005fac:	25 00 20 00 00       	and    $0x2000,%eax
81005fb1:	85 c0                	test   %eax,%eax
81005fb3:	75 24                	jne    81005fd9 <_fputs_r+0x89>
81005fb5:	8b 45 10             	mov    0x10(%ebp),%eax
81005fb8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005fbc:	80 cc 20             	or     $0x20,%ah
81005fbf:	89 c2                	mov    %eax,%edx
81005fc1:	8b 45 10             	mov    0x10(%ebp),%eax
81005fc4:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005fc8:	8b 45 10             	mov    0x10(%ebp),%eax
81005fcb:	8b 40 64             	mov    0x64(%eax),%eax
81005fce:	80 e4 df             	and    $0xdf,%ah
81005fd1:	89 c2                	mov    %eax,%edx
81005fd3:	8b 45 10             	mov    0x10(%ebp),%eax
81005fd6:	89 50 64             	mov    %edx,0x64(%eax)
81005fd9:	83 ec 04             	sub    $0x4,%esp
81005fdc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81005fdf:	50                   	push   %eax
81005fe0:	ff 75 10             	push   0x10(%ebp)
81005fe3:	ff 75 08             	push   0x8(%ebp)
81005fe6:	e8 df 01 00 00       	call   810061ca <__sfvwrite_r>
81005feb:	83 c4 10             	add    $0x10,%esp
81005fee:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005ff1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005ff4:	c9                   	leave  
81005ff5:	c3                   	ret    

81005ff6 <fputs>:
81005ff6:	55                   	push   %ebp
81005ff7:	89 e5                	mov    %esp,%ebp
81005ff9:	83 ec 08             	sub    $0x8,%esp
81005ffc:	a1 24 83 00 81       	mov    0x81008324,%eax
81006001:	83 ec 04             	sub    $0x4,%esp
81006004:	ff 75 0c             	push   0xc(%ebp)
81006007:	ff 75 08             	push   0x8(%ebp)
8100600a:	50                   	push   %eax
8100600b:	e8 40 ff ff ff       	call   81005f50 <_fputs_r>
81006010:	83 c4 10             	add    $0x10,%esp
81006013:	c9                   	leave  
81006014:	c3                   	ret    

81006015 <__sputc_r>:
81006015:	55                   	push   %ebp
81006016:	89 e5                	mov    %esp,%ebp
81006018:	83 ec 08             	sub    $0x8,%esp
8100601b:	8b 45 10             	mov    0x10(%ebp),%eax
8100601e:	8b 40 08             	mov    0x8(%eax),%eax
81006021:	8d 50 ff             	lea    -0x1(%eax),%edx
81006024:	8b 45 10             	mov    0x10(%ebp),%eax
81006027:	89 50 08             	mov    %edx,0x8(%eax)
8100602a:	8b 45 10             	mov    0x10(%ebp),%eax
8100602d:	8b 40 08             	mov    0x8(%eax),%eax
81006030:	85 c0                	test   %eax,%eax
81006032:	79 17                	jns    8100604b <__sputc_r+0x36>
81006034:	8b 45 10             	mov    0x10(%ebp),%eax
81006037:	8b 50 08             	mov    0x8(%eax),%edx
8100603a:	8b 45 10             	mov    0x10(%ebp),%eax
8100603d:	8b 40 18             	mov    0x18(%eax),%eax
81006040:	39 c2                	cmp    %eax,%edx
81006042:	7c 21                	jl     81006065 <__sputc_r+0x50>
81006044:	8b 45 0c             	mov    0xc(%ebp),%eax
81006047:	3c 0a                	cmp    $0xa,%al
81006049:	74 1a                	je     81006065 <__sputc_r+0x50>
8100604b:	8b 45 10             	mov    0x10(%ebp),%eax
8100604e:	8b 00                	mov    (%eax),%eax
81006050:	8d 48 01             	lea    0x1(%eax),%ecx
81006053:	8b 55 10             	mov    0x10(%ebp),%edx
81006056:	89 0a                	mov    %ecx,(%edx)
81006058:	8b 55 0c             	mov    0xc(%ebp),%edx
8100605b:	88 10                	mov    %dl,(%eax)
8100605d:	0f b6 00             	movzbl (%eax),%eax
81006060:	0f b6 c0             	movzbl %al,%eax
81006063:	eb 14                	jmp    81006079 <__sputc_r+0x64>
81006065:	83 ec 04             	sub    $0x4,%esp
81006068:	ff 75 10             	push   0x10(%ebp)
8100606b:	ff 75 0c             	push   0xc(%ebp)
8100606e:	ff 75 08             	push   0x8(%ebp)
81006071:	e8 59 f9 ff ff       	call   810059cf <__swbuf_r>
81006076:	83 c4 10             	add    $0x10,%esp
81006079:	c9                   	leave  
8100607a:	c3                   	ret    

8100607b <__fputwc>:
8100607b:	55                   	push   %ebp
8100607c:	89 e5                	mov    %esp,%ebp
8100607e:	83 ec 18             	sub    $0x18,%esp
81006081:	e8 b5 08 00 00       	call   8100693b <__locale_mb_cur_max>
81006086:	83 f8 01             	cmp    $0x1,%eax
81006089:	75 1e                	jne    810060a9 <__fputwc+0x2e>
8100608b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100608f:	7e 18                	jle    810060a9 <__fputwc+0x2e>
81006091:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
81006098:	7f 0f                	jg     810060a9 <__fputwc+0x2e>
8100609a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100609d:	88 45 ef             	mov    %al,-0x11(%ebp)
810060a0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810060a7:	eb 3c                	jmp    810060e5 <__fputwc+0x6a>
810060a9:	8b 45 10             	mov    0x10(%ebp),%eax
810060ac:	83 c0 5c             	add    $0x5c,%eax
810060af:	50                   	push   %eax
810060b0:	ff 75 0c             	push   0xc(%ebp)
810060b3:	8d 45 ef             	lea    -0x11(%ebp),%eax
810060b6:	50                   	push   %eax
810060b7:	ff 75 08             	push   0x8(%ebp)
810060ba:	e8 b9 15 00 00       	call   81007678 <_wcrtomb_r>
810060bf:	83 c4 10             	add    $0x10,%esp
810060c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810060c5:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810060c9:	75 1a                	jne    810060e5 <__fputwc+0x6a>
810060cb:	8b 45 10             	mov    0x10(%ebp),%eax
810060ce:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810060d2:	83 c8 40             	or     $0x40,%eax
810060d5:	89 c2                	mov    %eax,%edx
810060d7:	8b 45 10             	mov    0x10(%ebp),%eax
810060da:	66 89 50 0c          	mov    %dx,0xc(%eax)
810060de:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810060e3:	eb 44                	jmp    81006129 <__fputwc+0xae>
810060e5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810060ec:	eb 30                	jmp    8100611e <__fputwc+0xa3>
810060ee:	8d 55 ef             	lea    -0x11(%ebp),%edx
810060f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810060f4:	01 d0                	add    %edx,%eax
810060f6:	0f b6 00             	movzbl (%eax),%eax
810060f9:	0f b6 c0             	movzbl %al,%eax
810060fc:	83 ec 04             	sub    $0x4,%esp
810060ff:	ff 75 10             	push   0x10(%ebp)
81006102:	50                   	push   %eax
81006103:	ff 75 08             	push   0x8(%ebp)
81006106:	e8 0a ff ff ff       	call   81006015 <__sputc_r>
8100610b:	83 c4 10             	add    $0x10,%esp
8100610e:	83 f8 ff             	cmp    $0xffffffff,%eax
81006111:	75 07                	jne    8100611a <__fputwc+0x9f>
81006113:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006118:	eb 0f                	jmp    81006129 <__fputwc+0xae>
8100611a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100611e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006121:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81006124:	72 c8                	jb     810060ee <__fputwc+0x73>
81006126:	8b 45 0c             	mov    0xc(%ebp),%eax
81006129:	c9                   	leave  
8100612a:	c3                   	ret    

8100612b <_fputwc_r>:
8100612b:	55                   	push   %ebp
8100612c:	89 e5                	mov    %esp,%ebp
8100612e:	83 ec 18             	sub    $0x18,%esp
81006131:	8b 45 10             	mov    0x10(%ebp),%eax
81006134:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006138:	98                   	cwtl   
81006139:	25 00 20 00 00       	and    $0x2000,%eax
8100613e:	85 c0                	test   %eax,%eax
81006140:	75 24                	jne    81006166 <_fputwc_r+0x3b>
81006142:	8b 45 10             	mov    0x10(%ebp),%eax
81006145:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006149:	80 cc 20             	or     $0x20,%ah
8100614c:	89 c2                	mov    %eax,%edx
8100614e:	8b 45 10             	mov    0x10(%ebp),%eax
81006151:	66 89 50 0c          	mov    %dx,0xc(%eax)
81006155:	8b 45 10             	mov    0x10(%ebp),%eax
81006158:	8b 40 64             	mov    0x64(%eax),%eax
8100615b:	80 cc 20             	or     $0x20,%ah
8100615e:	89 c2                	mov    %eax,%edx
81006160:	8b 45 10             	mov    0x10(%ebp),%eax
81006163:	89 50 64             	mov    %edx,0x64(%eax)
81006166:	83 ec 04             	sub    $0x4,%esp
81006169:	ff 75 10             	push   0x10(%ebp)
8100616c:	ff 75 0c             	push   0xc(%ebp)
8100616f:	ff 75 08             	push   0x8(%ebp)
81006172:	e8 04 ff ff ff       	call   8100607b <__fputwc>
81006177:	83 c4 10             	add    $0x10,%esp
8100617a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100617d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006180:	c9                   	leave  
81006181:	c3                   	ret    

81006182 <fputwc>:
81006182:	55                   	push   %ebp
81006183:	89 e5                	mov    %esp,%ebp
81006185:	83 ec 18             	sub    $0x18,%esp
81006188:	a1 24 83 00 81       	mov    0x81008324,%eax
8100618d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006190:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006193:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006196:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100619a:	74 18                	je     810061b4 <fputwc+0x32>
8100619c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100619f:	8b 40 38             	mov    0x38(%eax),%eax
810061a2:	85 c0                	test   %eax,%eax
810061a4:	75 0e                	jne    810061b4 <fputwc+0x32>
810061a6:	83 ec 0c             	sub    $0xc,%esp
810061a9:	ff 75 f0             	push   -0x10(%ebp)
810061ac:	e8 72 b3 ff ff       	call   81001523 <__sinit>
810061b1:	83 c4 10             	add    $0x10,%esp
810061b4:	83 ec 04             	sub    $0x4,%esp
810061b7:	ff 75 0c             	push   0xc(%ebp)
810061ba:	ff 75 08             	push   0x8(%ebp)
810061bd:	ff 75 f4             	push   -0xc(%ebp)
810061c0:	e8 66 ff ff ff       	call   8100612b <_fputwc_r>
810061c5:	83 c4 10             	add    $0x10,%esp
810061c8:	c9                   	leave  
810061c9:	c3                   	ret    

810061ca <__sfvwrite_r>:
810061ca:	55                   	push   %ebp
810061cb:	89 e5                	mov    %esp,%ebp
810061cd:	57                   	push   %edi
810061ce:	56                   	push   %esi
810061cf:	53                   	push   %ebx
810061d0:	83 ec 3c             	sub    $0x3c,%esp
810061d3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810061d6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810061dd:	8b 45 10             	mov    0x10(%ebp),%eax
810061e0:	8b 78 08             	mov    0x8(%eax),%edi
810061e3:	85 ff                	test   %edi,%edi
810061e5:	75 0a                	jne    810061f1 <__sfvwrite_r+0x27>
810061e7:	b8 00 00 00 00       	mov    $0x0,%eax
810061ec:	e9 6f 04 00 00       	jmp    81006660 <__sfvwrite_r+0x496>
810061f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810061f5:	98                   	cwtl   
810061f6:	83 e0 08             	and    $0x8,%eax
810061f9:	85 c0                	test   %eax,%eax
810061fb:	74 07                	je     81006204 <__sfvwrite_r+0x3a>
810061fd:	8b 43 10             	mov    0x10(%ebx),%eax
81006200:	85 c0                	test   %eax,%eax
81006202:	75 1d                	jne    81006221 <__sfvwrite_r+0x57>
81006204:	83 ec 08             	sub    $0x8,%esp
81006207:	53                   	push   %ebx
81006208:	ff 75 08             	push   0x8(%ebp)
8100620b:	e8 38 f9 ff ff       	call   81005b48 <__swsetup_r>
81006210:	83 c4 10             	add    $0x10,%esp
81006213:	85 c0                	test   %eax,%eax
81006215:	74 0a                	je     81006221 <__sfvwrite_r+0x57>
81006217:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100621c:	e9 3f 04 00 00       	jmp    81006660 <__sfvwrite_r+0x496>
81006221:	8b 45 10             	mov    0x10(%ebp),%eax
81006224:	8b 00                	mov    (%eax),%eax
81006226:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006229:	bf 00 00 00 00       	mov    $0x0,%edi
8100622e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006232:	98                   	cwtl   
81006233:	83 e0 02             	and    $0x2,%eax
81006236:	85 c0                	test   %eax,%eax
81006238:	74 68                	je     810062a2 <__sfvwrite_r+0xd8>
8100623a:	eb 11                	jmp    8100624d <__sfvwrite_r+0x83>
8100623c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100623f:	8b 08                	mov    (%eax),%ecx
81006241:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006244:	8b 78 04             	mov    0x4(%eax),%edi
81006247:	83 c0 08             	add    $0x8,%eax
8100624a:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100624d:	85 ff                	test   %edi,%edi
8100624f:	74 eb                	je     8100623c <__sfvwrite_r+0x72>
81006251:	8b 4b 24             	mov    0x24(%ebx),%ecx
81006254:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81006259:	39 c7                	cmp    %eax,%edi
8100625b:	0f 46 c7             	cmovbe %edi,%eax
8100625e:	89 c2                	mov    %eax,%edx
81006260:	8b 43 1c             	mov    0x1c(%ebx),%eax
81006263:	52                   	push   %edx
81006264:	ff 75 c4             	push   -0x3c(%ebp)
81006267:	50                   	push   %eax
81006268:	ff 75 08             	push   0x8(%ebp)
8100626b:	ff d1                	call   *%ecx
8100626d:	83 c4 10             	add    $0x10,%esp
81006270:	89 c6                	mov    %eax,%esi
81006272:	85 f6                	test   %esi,%esi
81006274:	0f 8e cf 03 00 00    	jle    81006649 <__sfvwrite_r+0x47f>
8100627a:	89 f0                	mov    %esi,%eax
8100627c:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100627f:	89 f0                	mov    %esi,%eax
81006281:	29 c7                	sub    %eax,%edi
81006283:	8b 45 10             	mov    0x10(%ebp),%eax
81006286:	8b 40 08             	mov    0x8(%eax),%eax
81006289:	89 f2                	mov    %esi,%edx
8100628b:	29 d0                	sub    %edx,%eax
8100628d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006290:	89 41 08             	mov    %eax,0x8(%ecx)
81006293:	8b 45 10             	mov    0x10(%ebp),%eax
81006296:	8b 40 08             	mov    0x8(%eax),%eax
81006299:	85 c0                	test   %eax,%eax
8100629b:	75 b0                	jne    8100624d <__sfvwrite_r+0x83>
8100629d:	e9 a0 03 00 00       	jmp    81006642 <__sfvwrite_r+0x478>
810062a2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062a6:	98                   	cwtl   
810062a7:	83 e0 01             	and    $0x1,%eax
810062aa:	85 c0                	test   %eax,%eax
810062ac:	0f 85 44 02 00 00    	jne    810064f6 <__sfvwrite_r+0x32c>
810062b2:	eb 11                	jmp    810062c5 <__sfvwrite_r+0xfb>
810062b4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810062b7:	8b 08                	mov    (%eax),%ecx
810062b9:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810062bc:	8b 78 04             	mov    0x4(%eax),%edi
810062bf:	83 c0 08             	add    $0x8,%eax
810062c2:	89 45 c0             	mov    %eax,-0x40(%ebp)
810062c5:	85 ff                	test   %edi,%edi
810062c7:	74 eb                	je     810062b4 <__sfvwrite_r+0xea>
810062c9:	8b 73 08             	mov    0x8(%ebx),%esi
810062cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062d0:	98                   	cwtl   
810062d1:	25 00 02 00 00       	and    $0x200,%eax
810062d6:	85 c0                	test   %eax,%eax
810062d8:	0f 84 4f 01 00 00    	je     8100642d <__sfvwrite_r+0x263>
810062de:	89 f0                	mov    %esi,%eax
810062e0:	39 c7                	cmp    %eax,%edi
810062e2:	0f 82 12 01 00 00    	jb     810063fa <__sfvwrite_r+0x230>
810062e8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810062ec:	98                   	cwtl   
810062ed:	25 80 04 00 00       	and    $0x480,%eax
810062f2:	85 c0                	test   %eax,%eax
810062f4:	0f 84 00 01 00 00    	je     810063fa <__sfvwrite_r+0x230>
810062fa:	8b 03                	mov    (%ebx),%eax
810062fc:	8b 53 10             	mov    0x10(%ebx),%edx
810062ff:	29 d0                	sub    %edx,%eax
81006301:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006304:	8b 53 14             	mov    0x14(%ebx),%edx
81006307:	89 d0                	mov    %edx,%eax
81006309:	01 c0                	add    %eax,%eax
8100630b:	01 d0                	add    %edx,%eax
8100630d:	89 c2                	mov    %eax,%edx
8100630f:	c1 ea 1f             	shr    $0x1f,%edx
81006312:	01 d0                	add    %edx,%eax
81006314:	d1 f8                	sar    %eax
81006316:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006319:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100631c:	01 f8                	add    %edi,%eax
8100631e:	8d 50 01             	lea    0x1(%eax),%edx
81006321:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006324:	39 c2                	cmp    %eax,%edx
81006326:	76 0b                	jbe    81006333 <__sfvwrite_r+0x169>
81006328:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100632b:	01 f8                	add    %edi,%eax
8100632d:	83 c0 01             	add    $0x1,%eax
81006330:	89 45 d8             	mov    %eax,-0x28(%ebp)
81006333:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006337:	98                   	cwtl   
81006338:	25 00 04 00 00       	and    $0x400,%eax
8100633d:	85 c0                	test   %eax,%eax
8100633f:	74 4f                	je     81006390 <__sfvwrite_r+0x1c6>
81006341:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006344:	83 ec 08             	sub    $0x8,%esp
81006347:	50                   	push   %eax
81006348:	ff 75 08             	push   0x8(%ebp)
8100634b:	e8 ec d2 ff ff       	call   8100363c <_malloc_r>
81006350:	83 c4 10             	add    $0x10,%esp
81006353:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006356:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8100635a:	75 0e                	jne    8100636a <__sfvwrite_r+0x1a0>
8100635c:	8b 45 08             	mov    0x8(%ebp),%eax
8100635f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006365:	e9 e6 02 00 00       	jmp    81006650 <__sfvwrite_r+0x486>
8100636a:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100636d:	8b 43 10             	mov    0x10(%ebx),%eax
81006370:	83 ec 04             	sub    $0x4,%esp
81006373:	52                   	push   %edx
81006374:	50                   	push   %eax
81006375:	ff 75 dc             	push   -0x24(%ebp)
81006378:	e8 cb db ff ff       	call   81003f48 <memcpy>
8100637d:	83 c4 10             	add    $0x10,%esp
81006380:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006384:	66 25 7f fb          	and    $0xfb7f,%ax
81006388:	0c 80                	or     $0x80,%al
8100638a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100638e:	eb 49                	jmp    810063d9 <__sfvwrite_r+0x20f>
81006390:	8b 55 d8             	mov    -0x28(%ebp),%edx
81006393:	8b 43 10             	mov    0x10(%ebx),%eax
81006396:	83 ec 04             	sub    $0x4,%esp
81006399:	52                   	push   %edx
8100639a:	50                   	push   %eax
8100639b:	ff 75 08             	push   0x8(%ebp)
8100639e:	e8 84 08 00 00       	call   81006c27 <_realloc_r>
810063a3:	83 c4 10             	add    $0x10,%esp
810063a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810063a9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810063ad:	75 2a                	jne    810063d9 <__sfvwrite_r+0x20f>
810063af:	8b 43 10             	mov    0x10(%ebx),%eax
810063b2:	83 ec 08             	sub    $0x8,%esp
810063b5:	50                   	push   %eax
810063b6:	ff 75 08             	push   0x8(%ebp)
810063b9:	e8 bb b3 ff ff       	call   81001779 <_free_r>
810063be:	83 c4 10             	add    $0x10,%esp
810063c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063c5:	24 7f                	and    $0x7f,%al
810063c7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063cb:	8b 45 08             	mov    0x8(%ebp),%eax
810063ce:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810063d4:	e9 77 02 00 00       	jmp    81006650 <__sfvwrite_r+0x486>
810063d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810063dc:	89 43 10             	mov    %eax,0x10(%ebx)
810063df:	8b 55 d0             	mov    -0x30(%ebp),%edx
810063e2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810063e5:	01 d0                	add    %edx,%eax
810063e7:	89 03                	mov    %eax,(%ebx)
810063e9:	8b 45 d8             	mov    -0x28(%ebp),%eax
810063ec:	89 43 14             	mov    %eax,0x14(%ebx)
810063ef:	89 fe                	mov    %edi,%esi
810063f1:	8b 45 d8             	mov    -0x28(%ebp),%eax
810063f4:	2b 45 d0             	sub    -0x30(%ebp),%eax
810063f7:	89 43 08             	mov    %eax,0x8(%ebx)
810063fa:	89 f0                	mov    %esi,%eax
810063fc:	39 c7                	cmp    %eax,%edi
810063fe:	73 02                	jae    81006402 <__sfvwrite_r+0x238>
81006400:	89 fe                	mov    %edi,%esi
81006402:	89 f2                	mov    %esi,%edx
81006404:	8b 03                	mov    (%ebx),%eax
81006406:	83 ec 04             	sub    $0x4,%esp
81006409:	52                   	push   %edx
8100640a:	ff 75 c4             	push   -0x3c(%ebp)
8100640d:	50                   	push   %eax
8100640e:	e8 3d 06 00 00       	call   81006a50 <memmove>
81006413:	83 c4 10             	add    $0x10,%esp
81006416:	8b 43 08             	mov    0x8(%ebx),%eax
81006419:	29 f0                	sub    %esi,%eax
8100641b:	89 43 08             	mov    %eax,0x8(%ebx)
8100641e:	8b 03                	mov    (%ebx),%eax
81006420:	89 f2                	mov    %esi,%edx
81006422:	01 d0                	add    %edx,%eax
81006424:	89 03                	mov    %eax,(%ebx)
81006426:	89 fe                	mov    %edi,%esi
81006428:	e9 9d 00 00 00       	jmp    810064ca <__sfvwrite_r+0x300>
8100642d:	8b 13                	mov    (%ebx),%edx
8100642f:	8b 43 10             	mov    0x10(%ebx),%eax
81006432:	39 c2                	cmp    %eax,%edx
81006434:	77 07                	ja     8100643d <__sfvwrite_r+0x273>
81006436:	8b 43 14             	mov    0x14(%ebx),%eax
81006439:	39 c7                	cmp    %eax,%edi
8100643b:	73 4c                	jae    81006489 <__sfvwrite_r+0x2bf>
8100643d:	89 f0                	mov    %esi,%eax
8100643f:	39 c7                	cmp    %eax,%edi
81006441:	0f 46 c7             	cmovbe %edi,%eax
81006444:	89 c6                	mov    %eax,%esi
81006446:	89 f2                	mov    %esi,%edx
81006448:	8b 03                	mov    (%ebx),%eax
8100644a:	83 ec 04             	sub    $0x4,%esp
8100644d:	52                   	push   %edx
8100644e:	ff 75 c4             	push   -0x3c(%ebp)
81006451:	50                   	push   %eax
81006452:	e8 f9 05 00 00       	call   81006a50 <memmove>
81006457:	83 c4 10             	add    $0x10,%esp
8100645a:	8b 43 08             	mov    0x8(%ebx),%eax
8100645d:	29 f0                	sub    %esi,%eax
8100645f:	89 43 08             	mov    %eax,0x8(%ebx)
81006462:	8b 03                	mov    (%ebx),%eax
81006464:	89 f2                	mov    %esi,%edx
81006466:	01 d0                	add    %edx,%eax
81006468:	89 03                	mov    %eax,(%ebx)
8100646a:	8b 43 08             	mov    0x8(%ebx),%eax
8100646d:	85 c0                	test   %eax,%eax
8100646f:	75 58                	jne    810064c9 <__sfvwrite_r+0x2ff>
81006471:	83 ec 08             	sub    $0x8,%esp
81006474:	53                   	push   %ebx
81006475:	ff 75 08             	push   0x8(%ebp)
81006478:	e8 a3 ab ff ff       	call   81001020 <_fflush_r>
8100647d:	83 c4 10             	add    $0x10,%esp
81006480:	85 c0                	test   %eax,%eax
81006482:	74 45                	je     810064c9 <__sfvwrite_r+0x2ff>
81006484:	e9 c7 01 00 00       	jmp    81006650 <__sfvwrite_r+0x486>
81006489:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
8100648f:	77 04                	ja     81006495 <__sfvwrite_r+0x2cb>
81006491:	89 f8                	mov    %edi,%eax
81006493:	eb 05                	jmp    8100649a <__sfvwrite_r+0x2d0>
81006495:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8100649a:	8b 4b 14             	mov    0x14(%ebx),%ecx
8100649d:	99                   	cltd   
8100649e:	f7 f9                	idiv   %ecx
810064a0:	89 c2                	mov    %eax,%edx
810064a2:	8b 43 14             	mov    0x14(%ebx),%eax
810064a5:	89 d6                	mov    %edx,%esi
810064a7:	0f af f0             	imul   %eax,%esi
810064aa:	8b 53 24             	mov    0x24(%ebx),%edx
810064ad:	8b 43 1c             	mov    0x1c(%ebx),%eax
810064b0:	56                   	push   %esi
810064b1:	ff 75 c4             	push   -0x3c(%ebp)
810064b4:	50                   	push   %eax
810064b5:	ff 75 08             	push   0x8(%ebp)
810064b8:	ff d2                	call   *%edx
810064ba:	83 c4 10             	add    $0x10,%esp
810064bd:	89 c6                	mov    %eax,%esi
810064bf:	85 f6                	test   %esi,%esi
810064c1:	0f 8e 85 01 00 00    	jle    8100664c <__sfvwrite_r+0x482>
810064c7:	eb 01                	jmp    810064ca <__sfvwrite_r+0x300>
810064c9:	90                   	nop
810064ca:	89 f0                	mov    %esi,%eax
810064cc:	01 45 c4             	add    %eax,-0x3c(%ebp)
810064cf:	89 f0                	mov    %esi,%eax
810064d1:	29 c7                	sub    %eax,%edi
810064d3:	8b 45 10             	mov    0x10(%ebp),%eax
810064d6:	8b 40 08             	mov    0x8(%eax),%eax
810064d9:	89 f2                	mov    %esi,%edx
810064db:	29 d0                	sub    %edx,%eax
810064dd:	8b 4d 10             	mov    0x10(%ebp),%ecx
810064e0:	89 41 08             	mov    %eax,0x8(%ecx)
810064e3:	8b 45 10             	mov    0x10(%ebp),%eax
810064e6:	8b 40 08             	mov    0x8(%eax),%eax
810064e9:	85 c0                	test   %eax,%eax
810064eb:	0f 85 d4 fd ff ff    	jne    810062c5 <__sfvwrite_r+0xfb>
810064f1:	e9 4c 01 00 00       	jmp    81006642 <__sfvwrite_r+0x478>
810064f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810064fd:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81006504:	eb 18                	jmp    8100651e <__sfvwrite_r+0x354>
81006506:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100650d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006510:	8b 08                	mov    (%eax),%ecx
81006512:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81006515:	8b 78 04             	mov    0x4(%eax),%edi
81006518:	83 c0 08             	add    $0x8,%eax
8100651b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100651e:	85 ff                	test   %edi,%edi
81006520:	74 e4                	je     81006506 <__sfvwrite_r+0x33c>
81006522:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006526:	75 32                	jne    8100655a <__sfvwrite_r+0x390>
81006528:	83 ec 04             	sub    $0x4,%esp
8100652b:	57                   	push   %edi
8100652c:	6a 0a                	push   $0xa
8100652e:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81006531:	56                   	push   %esi
81006532:	e8 29 d9 ff ff       	call   81003e60 <memchr>
81006537:	83 c4 10             	add    $0x10,%esp
8100653a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100653d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81006541:	74 0a                	je     8100654d <__sfvwrite_r+0x383>
81006543:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006546:	83 c0 01             	add    $0x1,%eax
81006549:	29 f0                	sub    %esi,%eax
8100654b:	eb 03                	jmp    81006550 <__sfvwrite_r+0x386>
8100654d:	8d 47 01             	lea    0x1(%edi),%eax
81006550:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006553:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100655a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100655d:	39 c7                	cmp    %eax,%edi
8100655f:	0f 46 c7             	cmovbe %edi,%eax
81006562:	89 c1                	mov    %eax,%ecx
81006564:	8b 53 08             	mov    0x8(%ebx),%edx
81006567:	8b 43 14             	mov    0x14(%ebx),%eax
8100656a:	8d 34 02             	lea    (%edx,%eax,1),%esi
8100656d:	8b 13                	mov    (%ebx),%edx
8100656f:	8b 43 10             	mov    0x10(%ebx),%eax
81006572:	39 c2                	cmp    %eax,%edx
81006574:	76 38                	jbe    810065ae <__sfvwrite_r+0x3e4>
81006576:	39 f1                	cmp    %esi,%ecx
81006578:	7e 34                	jle    810065ae <__sfvwrite_r+0x3e4>
8100657a:	89 f2                	mov    %esi,%edx
8100657c:	8b 03                	mov    (%ebx),%eax
8100657e:	83 ec 04             	sub    $0x4,%esp
81006581:	52                   	push   %edx
81006582:	ff 75 c4             	push   -0x3c(%ebp)
81006585:	50                   	push   %eax
81006586:	e8 c5 04 00 00       	call   81006a50 <memmove>
8100658b:	83 c4 10             	add    $0x10,%esp
8100658e:	8b 03                	mov    (%ebx),%eax
81006590:	89 f2                	mov    %esi,%edx
81006592:	01 d0                	add    %edx,%eax
81006594:	89 03                	mov    %eax,(%ebx)
81006596:	83 ec 08             	sub    $0x8,%esp
81006599:	53                   	push   %ebx
8100659a:	ff 75 08             	push   0x8(%ebp)
8100659d:	e8 7e aa ff ff       	call   81001020 <_fflush_r>
810065a2:	83 c4 10             	add    $0x10,%esp
810065a5:	85 c0                	test   %eax,%eax
810065a7:	74 4f                	je     810065f8 <__sfvwrite_r+0x42e>
810065a9:	e9 a2 00 00 00       	jmp    81006650 <__sfvwrite_r+0x486>
810065ae:	8b 73 14             	mov    0x14(%ebx),%esi
810065b1:	89 c8                	mov    %ecx,%eax
810065b3:	39 c6                	cmp    %eax,%esi
810065b5:	7f 1b                	jg     810065d2 <__sfvwrite_r+0x408>
810065b7:	8b 53 24             	mov    0x24(%ebx),%edx
810065ba:	8b 43 1c             	mov    0x1c(%ebx),%eax
810065bd:	56                   	push   %esi
810065be:	ff 75 c4             	push   -0x3c(%ebp)
810065c1:	50                   	push   %eax
810065c2:	ff 75 08             	push   0x8(%ebp)
810065c5:	ff d2                	call   *%edx
810065c7:	83 c4 10             	add    $0x10,%esp
810065ca:	89 c6                	mov    %eax,%esi
810065cc:	85 f6                	test   %esi,%esi
810065ce:	7f 28                	jg     810065f8 <__sfvwrite_r+0x42e>
810065d0:	eb 7e                	jmp    81006650 <__sfvwrite_r+0x486>
810065d2:	89 ce                	mov    %ecx,%esi
810065d4:	89 f2                	mov    %esi,%edx
810065d6:	8b 03                	mov    (%ebx),%eax
810065d8:	83 ec 04             	sub    $0x4,%esp
810065db:	52                   	push   %edx
810065dc:	ff 75 c4             	push   -0x3c(%ebp)
810065df:	50                   	push   %eax
810065e0:	e8 6b 04 00 00       	call   81006a50 <memmove>
810065e5:	83 c4 10             	add    $0x10,%esp
810065e8:	8b 43 08             	mov    0x8(%ebx),%eax
810065eb:	29 f0                	sub    %esi,%eax
810065ed:	89 43 08             	mov    %eax,0x8(%ebx)
810065f0:	8b 03                	mov    (%ebx),%eax
810065f2:	89 f2                	mov    %esi,%edx
810065f4:	01 d0                	add    %edx,%eax
810065f6:	89 03                	mov    %eax,(%ebx)
810065f8:	29 75 e0             	sub    %esi,-0x20(%ebp)
810065fb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810065ff:	75 1a                	jne    8100661b <__sfvwrite_r+0x451>
81006601:	83 ec 08             	sub    $0x8,%esp
81006604:	53                   	push   %ebx
81006605:	ff 75 08             	push   0x8(%ebp)
81006608:	e8 13 aa ff ff       	call   81001020 <_fflush_r>
8100660d:	83 c4 10             	add    $0x10,%esp
81006610:	85 c0                	test   %eax,%eax
81006612:	75 3b                	jne    8100664f <__sfvwrite_r+0x485>
81006614:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100661b:	89 f0                	mov    %esi,%eax
8100661d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81006620:	89 f0                	mov    %esi,%eax
81006622:	29 c7                	sub    %eax,%edi
81006624:	8b 45 10             	mov    0x10(%ebp),%eax
81006627:	8b 40 08             	mov    0x8(%eax),%eax
8100662a:	89 f2                	mov    %esi,%edx
8100662c:	29 d0                	sub    %edx,%eax
8100662e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006631:	89 41 08             	mov    %eax,0x8(%ecx)
81006634:	8b 45 10             	mov    0x10(%ebp),%eax
81006637:	8b 40 08             	mov    0x8(%eax),%eax
8100663a:	85 c0                	test   %eax,%eax
8100663c:	0f 85 dc fe ff ff    	jne    8100651e <__sfvwrite_r+0x354>
81006642:	b8 00 00 00 00       	mov    $0x0,%eax
81006647:	eb 17                	jmp    81006660 <__sfvwrite_r+0x496>
81006649:	90                   	nop
8100664a:	eb 04                	jmp    81006650 <__sfvwrite_r+0x486>
8100664c:	90                   	nop
8100664d:	eb 01                	jmp    81006650 <__sfvwrite_r+0x486>
8100664f:	90                   	nop
81006650:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006654:	83 c8 40             	or     $0x40,%eax
81006657:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100665b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006660:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006663:	5b                   	pop    %ebx
81006664:	5e                   	pop    %esi
81006665:	5f                   	pop    %edi
81006666:	5d                   	pop    %ebp
81006667:	c3                   	ret    

81006668 <_getc_r>:
81006668:	55                   	push   %ebp
81006669:	89 e5                	mov    %esp,%ebp
8100666b:	53                   	push   %ebx
8100666c:	83 ec 14             	sub    $0x14,%esp
8100666f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006672:	8b 45 08             	mov    0x8(%ebp),%eax
81006675:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006678:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100667c:	74 18                	je     81006696 <_getc_r+0x2e>
8100667e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006681:	8b 40 38             	mov    0x38(%eax),%eax
81006684:	85 c0                	test   %eax,%eax
81006686:	75 0e                	jne    81006696 <_getc_r+0x2e>
81006688:	83 ec 0c             	sub    $0xc,%esp
8100668b:	ff 75 f4             	push   -0xc(%ebp)
8100668e:	e8 90 ae ff ff       	call   81001523 <__sinit>
81006693:	83 c4 10             	add    $0x10,%esp
81006696:	8b 43 04             	mov    0x4(%ebx),%eax
81006699:	83 e8 01             	sub    $0x1,%eax
8100669c:	89 43 04             	mov    %eax,0x4(%ebx)
8100669f:	8b 43 04             	mov    0x4(%ebx),%eax
810066a2:	85 c0                	test   %eax,%eax
810066a4:	79 11                	jns    810066b7 <_getc_r+0x4f>
810066a6:	83 ec 08             	sub    $0x8,%esp
810066a9:	53                   	push   %ebx
810066aa:	ff 75 08             	push   0x8(%ebp)
810066ad:	e8 4f 0e 00 00       	call   81007501 <__srget_r>
810066b2:	83 c4 10             	add    $0x10,%esp
810066b5:	eb 0d                	jmp    810066c4 <_getc_r+0x5c>
810066b7:	8b 03                	mov    (%ebx),%eax
810066b9:	8d 50 01             	lea    0x1(%eax),%edx
810066bc:	89 13                	mov    %edx,(%ebx)
810066be:	0f b6 00             	movzbl (%eax),%eax
810066c1:	0f b6 c0             	movzbl %al,%eax
810066c4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066c7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066ca:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810066cd:	c9                   	leave  
810066ce:	c3                   	ret    

810066cf <getc>:
810066cf:	55                   	push   %ebp
810066d0:	89 e5                	mov    %esp,%ebp
810066d2:	53                   	push   %ebx
810066d3:	83 ec 14             	sub    $0x14,%esp
810066d6:	8b 5d 08             	mov    0x8(%ebp),%ebx
810066d9:	a1 24 83 00 81       	mov    0x81008324,%eax
810066de:	89 45 f4             	mov    %eax,-0xc(%ebp)
810066e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810066eb:	74 18                	je     81006705 <getc+0x36>
810066ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066f0:	8b 40 38             	mov    0x38(%eax),%eax
810066f3:	85 c0                	test   %eax,%eax
810066f5:	75 0e                	jne    81006705 <getc+0x36>
810066f7:	83 ec 0c             	sub    $0xc,%esp
810066fa:	ff 75 f0             	push   -0x10(%ebp)
810066fd:	e8 21 ae ff ff       	call   81001523 <__sinit>
81006702:	83 c4 10             	add    $0x10,%esp
81006705:	8b 43 04             	mov    0x4(%ebx),%eax
81006708:	83 e8 01             	sub    $0x1,%eax
8100670b:	89 43 04             	mov    %eax,0x4(%ebx)
8100670e:	8b 43 04             	mov    0x4(%ebx),%eax
81006711:	85 c0                	test   %eax,%eax
81006713:	79 11                	jns    81006726 <getc+0x57>
81006715:	83 ec 08             	sub    $0x8,%esp
81006718:	53                   	push   %ebx
81006719:	ff 75 f4             	push   -0xc(%ebp)
8100671c:	e8 e0 0d 00 00       	call   81007501 <__srget_r>
81006721:	83 c4 10             	add    $0x10,%esp
81006724:	eb 0d                	jmp    81006733 <getc+0x64>
81006726:	8b 03                	mov    (%ebx),%eax
81006728:	8d 50 01             	lea    0x1(%eax),%edx
8100672b:	89 13                	mov    %edx,(%ebx)
8100672d:	0f b6 00             	movzbl (%eax),%eax
81006730:	0f b6 c0             	movzbl %al,%eax
81006733:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006736:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006739:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100673c:	c9                   	leave  
8100673d:	c3                   	ret    

8100673e <_findenv>:
8100673e:	55                   	push   %ebp
8100673f:	89 e5                	mov    %esp,%ebp
81006741:	83 ec 08             	sub    $0x8,%esp
81006744:	8b 55 08             	mov    0x8(%ebp),%edx
81006747:	a1 24 83 00 81       	mov    0x81008324,%eax
8100674c:	83 ec 04             	sub    $0x4,%esp
8100674f:	ff 75 0c             	push   0xc(%ebp)
81006752:	52                   	push   %edx
81006753:	50                   	push   %eax
81006754:	e8 25 00 00 00       	call   8100677e <_findenv_r>
81006759:	83 c4 10             	add    $0x10,%esp
8100675c:	c9                   	leave  
8100675d:	c3                   	ret    

8100675e <getenv>:
8100675e:	55                   	push   %ebp
8100675f:	89 e5                	mov    %esp,%ebp
81006761:	83 ec 18             	sub    $0x18,%esp
81006764:	a1 24 83 00 81       	mov    0x81008324,%eax
81006769:	83 ec 04             	sub    $0x4,%esp
8100676c:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100676f:	52                   	push   %edx
81006770:	ff 75 08             	push   0x8(%ebp)
81006773:	50                   	push   %eax
81006774:	e8 05 00 00 00       	call   8100677e <_findenv_r>
81006779:	83 c4 10             	add    $0x10,%esp
8100677c:	c9                   	leave  
8100677d:	c3                   	ret    

8100677e <_findenv_r>:
8100677e:	55                   	push   %ebp
8100677f:	89 e5                	mov    %esp,%ebp
81006781:	57                   	push   %edi
81006782:	56                   	push   %esi
81006783:	53                   	push   %ebx
81006784:	83 ec 1c             	sub    $0x1c,%esp
81006787:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100678a:	83 ec 0c             	sub    $0xc,%esp
8100678d:	ff 75 08             	push   0x8(%ebp)
81006790:	e8 54 10 00 00       	call   810077e9 <__env_lock>
81006795:	83 c4 10             	add    $0x10,%esp
81006798:	a1 50 87 00 81       	mov    0x81008750,%eax
8100679d:	8b 00                	mov    (%eax),%eax
8100679f:	85 c0                	test   %eax,%eax
810067a1:	75 18                	jne    810067bb <_findenv_r+0x3d>
810067a3:	83 ec 0c             	sub    $0xc,%esp
810067a6:	ff 75 08             	push   0x8(%ebp)
810067a9:	e8 41 10 00 00       	call   810077ef <__env_unlock>
810067ae:	83 c4 10             	add    $0x10,%esp
810067b1:	b8 00 00 00 00       	mov    $0x0,%eax
810067b6:	e9 a8 00 00 00       	jmp    81006863 <_findenv_r+0xe5>
810067bb:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810067be:	eb 04                	jmp    810067c4 <_findenv_r+0x46>
810067c0:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810067c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067c7:	0f b6 00             	movzbl (%eax),%eax
810067ca:	84 c0                	test   %al,%al
810067cc:	74 0a                	je     810067d8 <_findenv_r+0x5a>
810067ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067d1:	0f b6 00             	movzbl (%eax),%eax
810067d4:	3c 3d                	cmp    $0x3d,%al
810067d6:	75 e8                	jne    810067c0 <_findenv_r+0x42>
810067d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067db:	0f b6 00             	movzbl (%eax),%eax
810067de:	3c 3d                	cmp    $0x3d,%al
810067e0:	74 6e                	je     81006850 <_findenv_r+0xd2>
810067e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067e5:	29 f8                	sub    %edi,%eax
810067e7:	89 c6                	mov    %eax,%esi
810067e9:	a1 50 87 00 81       	mov    0x81008750,%eax
810067ee:	8b 18                	mov    (%eax),%ebx
810067f0:	eb 58                	jmp    8100684a <_findenv_r+0xcc>
810067f2:	89 f2                	mov    %esi,%edx
810067f4:	8b 03                	mov    (%ebx),%eax
810067f6:	83 ec 04             	sub    $0x4,%esp
810067f9:	52                   	push   %edx
810067fa:	57                   	push   %edi
810067fb:	50                   	push   %eax
810067fc:	e8 80 0d 00 00       	call   81007581 <strncmp>
81006801:	83 c4 10             	add    $0x10,%esp
81006804:	85 c0                	test   %eax,%eax
81006806:	75 3f                	jne    81006847 <_findenv_r+0xc9>
81006808:	8b 03                	mov    (%ebx),%eax
8100680a:	89 f2                	mov    %esi,%edx
8100680c:	01 d0                	add    %edx,%eax
8100680e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006811:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006814:	0f b6 00             	movzbl (%eax),%eax
81006817:	3c 3d                	cmp    $0x3d,%al
81006819:	75 2c                	jne    81006847 <_findenv_r+0xc9>
8100681b:	a1 50 87 00 81       	mov    0x81008750,%eax
81006820:	8b 10                	mov    (%eax),%edx
81006822:	89 d8                	mov    %ebx,%eax
81006824:	29 d0                	sub    %edx,%eax
81006826:	c1 f8 02             	sar    $0x2,%eax
81006829:	89 c2                	mov    %eax,%edx
8100682b:	8b 45 10             	mov    0x10(%ebp),%eax
8100682e:	89 10                	mov    %edx,(%eax)
81006830:	83 ec 0c             	sub    $0xc,%esp
81006833:	ff 75 08             	push   0x8(%ebp)
81006836:	e8 b4 0f 00 00       	call   810077ef <__env_unlock>
8100683b:	83 c4 10             	add    $0x10,%esp
8100683e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81006842:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006845:	eb 1c                	jmp    81006863 <_findenv_r+0xe5>
81006847:	83 c3 04             	add    $0x4,%ebx
8100684a:	8b 03                	mov    (%ebx),%eax
8100684c:	85 c0                	test   %eax,%eax
8100684e:	75 a2                	jne    810067f2 <_findenv_r+0x74>
81006850:	83 ec 0c             	sub    $0xc,%esp
81006853:	ff 75 08             	push   0x8(%ebp)
81006856:	e8 94 0f 00 00       	call   810077ef <__env_unlock>
8100685b:	83 c4 10             	add    $0x10,%esp
8100685e:	b8 00 00 00 00       	mov    $0x0,%eax
81006863:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006866:	5b                   	pop    %ebx
81006867:	5e                   	pop    %esi
81006868:	5f                   	pop    %edi
81006869:	5d                   	pop    %ebp
8100686a:	c3                   	ret    

8100686b <_getenv_r>:
8100686b:	55                   	push   %ebp
8100686c:	89 e5                	mov    %esp,%ebp
8100686e:	83 ec 18             	sub    $0x18,%esp
81006871:	83 ec 04             	sub    $0x4,%esp
81006874:	8d 45 f4             	lea    -0xc(%ebp),%eax
81006877:	50                   	push   %eax
81006878:	ff 75 0c             	push   0xc(%ebp)
8100687b:	ff 75 08             	push   0x8(%ebp)
8100687e:	e8 fb fe ff ff       	call   8100677e <_findenv_r>
81006883:	83 c4 10             	add    $0x10,%esp
81006886:	c9                   	leave  
81006887:	c3                   	ret    

81006888 <_isatty_r>:
81006888:	55                   	push   %ebp
81006889:	89 e5                	mov    %esp,%ebp
8100688b:	83 ec 18             	sub    $0x18,%esp
8100688e:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
81006895:	00 00 00 
81006898:	83 ec 0c             	sub    $0xc,%esp
8100689b:	ff 75 0c             	push   0xc(%ebp)
8100689e:	e8 11 a2 ff ff       	call   81000ab4 <isatty>
810068a3:	83 c4 10             	add    $0x10,%esp
810068a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068a9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810068ad:	75 14                	jne    810068c3 <_isatty_r+0x3b>
810068af:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
810068b4:	85 c0                	test   %eax,%eax
810068b6:	74 0b                	je     810068c3 <_isatty_r+0x3b>
810068b8:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
810068be:	8b 45 08             	mov    0x8(%ebp),%eax
810068c1:	89 10                	mov    %edx,(%eax)
810068c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068c6:	c9                   	leave  
810068c7:	c3                   	ret    

810068c8 <__get_global_locale>:
810068c8:	55                   	push   %ebp
810068c9:	89 e5                	mov    %esp,%ebp
810068cb:	b8 60 87 00 81       	mov    $0x81008760,%eax
810068d0:	5d                   	pop    %ebp
810068d1:	c3                   	ret    

810068d2 <__get_current_locale>:
810068d2:	55                   	push   %ebp
810068d3:	89 e5                	mov    %esp,%ebp
810068d5:	e8 ee ff ff ff       	call   810068c8 <__get_global_locale>
810068da:	5d                   	pop    %ebp
810068db:	c3                   	ret    

810068dc <_setlocale_r>:
810068dc:	55                   	push   %ebp
810068dd:	89 e5                	mov    %esp,%ebp
810068df:	83 ec 08             	sub    $0x8,%esp
810068e2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810068e6:	74 4c                	je     81006934 <_setlocale_r+0x58>
810068e8:	83 ec 08             	sub    $0x8,%esp
810068eb:	68 c4 7e 00 81       	push   $0x81007ec4
810068f0:	ff 75 10             	push   0x10(%ebp)
810068f3:	e8 44 ec ff ff       	call   8100553c <strcmp>
810068f8:	83 c4 10             	add    $0x10,%esp
810068fb:	85 c0                	test   %eax,%eax
810068fd:	74 35                	je     81006934 <_setlocale_r+0x58>
810068ff:	83 ec 08             	sub    $0x8,%esp
81006902:	68 ca 7e 00 81       	push   $0x81007eca
81006907:	ff 75 10             	push   0x10(%ebp)
8100690a:	e8 2d ec ff ff       	call   8100553c <strcmp>
8100690f:	83 c4 10             	add    $0x10,%esp
81006912:	85 c0                	test   %eax,%eax
81006914:	74 1e                	je     81006934 <_setlocale_r+0x58>
81006916:	83 ec 08             	sub    $0x8,%esp
81006919:	68 c3 7e 00 81       	push   $0x81007ec3
8100691e:	ff 75 10             	push   0x10(%ebp)
81006921:	e8 16 ec ff ff       	call   8100553c <strcmp>
81006926:	83 c4 10             	add    $0x10,%esp
81006929:	85 c0                	test   %eax,%eax
8100692b:	74 07                	je     81006934 <_setlocale_r+0x58>
8100692d:	b8 00 00 00 00       	mov    $0x0,%eax
81006932:	eb 05                	jmp    81006939 <_setlocale_r+0x5d>
81006934:	b8 ca 7e 00 81       	mov    $0x81007eca,%eax
81006939:	c9                   	leave  
8100693a:	c3                   	ret    

8100693b <__locale_mb_cur_max>:
8100693b:	55                   	push   %ebp
8100693c:	89 e5                	mov    %esp,%ebp
8100693e:	e8 8f ff ff ff       	call   810068d2 <__get_current_locale>
81006943:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100694a:	0f be c0             	movsbl %al,%eax
8100694d:	5d                   	pop    %ebp
8100694e:	c3                   	ret    

8100694f <setlocale>:
8100694f:	55                   	push   %ebp
81006950:	89 e5                	mov    %esp,%ebp
81006952:	83 ec 08             	sub    $0x8,%esp
81006955:	a1 24 83 00 81       	mov    0x81008324,%eax
8100695a:	83 ec 04             	sub    $0x4,%esp
8100695d:	ff 75 0c             	push   0xc(%ebp)
81006960:	ff 75 08             	push   0x8(%ebp)
81006963:	50                   	push   %eax
81006964:	e8 73 ff ff ff       	call   810068dc <_setlocale_r>
81006969:	83 c4 10             	add    $0x10,%esp
8100696c:	c9                   	leave  
8100696d:	c3                   	ret    

8100696e <_lseek_r>:
8100696e:	55                   	push   %ebp
8100696f:	89 e5                	mov    %esp,%ebp
81006971:	83 ec 18             	sub    $0x18,%esp
81006974:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
8100697b:	00 00 00 
8100697e:	83 ec 04             	sub    $0x4,%esp
81006981:	ff 75 14             	push   0x14(%ebp)
81006984:	ff 75 10             	push   0x10(%ebp)
81006987:	ff 75 0c             	push   0xc(%ebp)
8100698a:	e8 f8 a0 ff ff       	call   81000a87 <lseek>
8100698f:	83 c4 10             	add    $0x10,%esp
81006992:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006995:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006999:	75 14                	jne    810069af <_lseek_r+0x41>
8100699b:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
810069a0:	85 c0                	test   %eax,%eax
810069a2:	74 0b                	je     810069af <_lseek_r+0x41>
810069a4:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
810069aa:	8b 45 08             	mov    0x8(%ebp),%eax
810069ad:	89 10                	mov    %edx,(%eax)
810069af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069b2:	c9                   	leave  
810069b3:	c3                   	ret    

810069b4 <__get_global_locale>:
810069b4:	55                   	push   %ebp
810069b5:	89 e5                	mov    %esp,%ebp
810069b7:	b8 60 87 00 81       	mov    $0x81008760,%eax
810069bc:	5d                   	pop    %ebp
810069bd:	c3                   	ret    

810069be <__get_current_locale>:
810069be:	55                   	push   %ebp
810069bf:	89 e5                	mov    %esp,%ebp
810069c1:	e8 ee ff ff ff       	call   810069b4 <__get_global_locale>
810069c6:	5d                   	pop    %ebp
810069c7:	c3                   	ret    

810069c8 <_mbtowc_r>:
810069c8:	55                   	push   %ebp
810069c9:	89 e5                	mov    %esp,%ebp
810069cb:	83 ec 08             	sub    $0x8,%esp
810069ce:	e8 eb ff ff ff       	call   810069be <__get_current_locale>
810069d3:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810069d9:	83 ec 0c             	sub    $0xc,%esp
810069dc:	ff 75 18             	push   0x18(%ebp)
810069df:	ff 75 14             	push   0x14(%ebp)
810069e2:	ff 75 10             	push   0x10(%ebp)
810069e5:	ff 75 0c             	push   0xc(%ebp)
810069e8:	ff 75 08             	push   0x8(%ebp)
810069eb:	ff d0                	call   *%eax
810069ed:	83 c4 20             	add    $0x20,%esp
810069f0:	c9                   	leave  
810069f1:	c3                   	ret    

810069f2 <__ascii_mbtowc>:
810069f2:	55                   	push   %ebp
810069f3:	89 e5                	mov    %esp,%ebp
810069f5:	83 ec 10             	sub    $0x10,%esp
810069f8:	8b 45 10             	mov    0x10(%ebp),%eax
810069fb:	89 45 fc             	mov    %eax,-0x4(%ebp)
810069fe:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006a02:	75 06                	jne    81006a0a <__ascii_mbtowc+0x18>
81006a04:	8d 45 f8             	lea    -0x8(%ebp),%eax
81006a07:	89 45 0c             	mov    %eax,0xc(%ebp)
81006a0a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006a0e:	75 07                	jne    81006a17 <__ascii_mbtowc+0x25>
81006a10:	b8 00 00 00 00       	mov    $0x0,%eax
81006a15:	eb 31                	jmp    81006a48 <__ascii_mbtowc+0x56>
81006a17:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006a1b:	75 07                	jne    81006a24 <__ascii_mbtowc+0x32>
81006a1d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81006a22:	eb 24                	jmp    81006a48 <__ascii_mbtowc+0x56>
81006a24:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a27:	0f b6 00             	movzbl (%eax),%eax
81006a2a:	0f b6 d0             	movzbl %al,%edx
81006a2d:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a30:	89 10                	mov    %edx,(%eax)
81006a32:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a35:	0f b6 00             	movzbl (%eax),%eax
81006a38:	84 c0                	test   %al,%al
81006a3a:	75 07                	jne    81006a43 <__ascii_mbtowc+0x51>
81006a3c:	b8 00 00 00 00       	mov    $0x0,%eax
81006a41:	eb 05                	jmp    81006a48 <__ascii_mbtowc+0x56>
81006a43:	b8 01 00 00 00       	mov    $0x1,%eax
81006a48:	c9                   	leave  
81006a49:	c3                   	ret    
81006a4a:	66 90                	xchg   %ax,%ax
81006a4c:	66 90                	xchg   %ax,%ax
81006a4e:	66 90                	xchg   %ax,%ax

81006a50 <memmove>:
81006a50:	55                   	push   %ebp
81006a51:	89 e5                	mov    %esp,%ebp
81006a53:	56                   	push   %esi
81006a54:	57                   	push   %edi
81006a55:	53                   	push   %ebx
81006a56:	8b 7d 08             	mov    0x8(%ebp),%edi
81006a59:	8b 4d 10             	mov    0x10(%ebp),%ecx
81006a5c:	8b 75 0c             	mov    0xc(%ebp),%esi
81006a5f:	fc                   	cld    
81006a60:	39 fe                	cmp    %edi,%esi
81006a62:	73 43                	jae    81006aa7 <memmove+0x57>
81006a64:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81006a68:	39 df                	cmp    %ebx,%edi
81006a6a:	77 3b                	ja     81006aa7 <memmove+0x57>
81006a6c:	01 ce                	add    %ecx,%esi
81006a6e:	01 cf                	add    %ecx,%edi
81006a70:	fd                   	std    
81006a71:	83 f9 08             	cmp    $0x8,%ecx
81006a74:	76 2b                	jbe    81006aa1 <memmove+0x51>
81006a76:	89 fa                	mov    %edi,%edx
81006a78:	89 cb                	mov    %ecx,%ebx
81006a7a:	83 e2 03             	and    $0x3,%edx
81006a7d:	74 0c                	je     81006a8b <memmove+0x3b>
81006a7f:	89 d1                	mov    %edx,%ecx
81006a81:	4e                   	dec    %esi
81006a82:	4f                   	dec    %edi
81006a83:	29 cb                	sub    %ecx,%ebx
81006a85:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006a87:	89 d9                	mov    %ebx,%ecx
81006a89:	46                   	inc    %esi
81006a8a:	47                   	inc    %edi
81006a8b:	c1 e9 02             	shr    $0x2,%ecx
81006a8e:	83 ee 04             	sub    $0x4,%esi
81006a91:	83 ef 04             	sub    $0x4,%edi
81006a94:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006a96:	83 c6 04             	add    $0x4,%esi
81006a99:	83 c7 04             	add    $0x4,%edi
81006a9c:	89 d9                	mov    %ebx,%ecx
81006a9e:	83 e1 03             	and    $0x3,%ecx
81006aa1:	4e                   	dec    %esi
81006aa2:	4f                   	dec    %edi
81006aa3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006aa5:	eb 2a                	jmp    81006ad1 <memmove+0x81>
81006aa7:	83 f9 08             	cmp    $0x8,%ecx
81006aaa:	76 23                	jbe    81006acf <memmove+0x7f>
81006aac:	89 fa                	mov    %edi,%edx
81006aae:	89 cb                	mov    %ecx,%ebx
81006ab0:	83 e2 03             	and    $0x3,%edx
81006ab3:	74 10                	je     81006ac5 <memmove+0x75>
81006ab5:	b9 04 00 00 00       	mov    $0x4,%ecx
81006aba:	29 d1                	sub    %edx,%ecx
81006abc:	83 e1 03             	and    $0x3,%ecx
81006abf:	29 cb                	sub    %ecx,%ebx
81006ac1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006ac3:	89 d9                	mov    %ebx,%ecx
81006ac5:	c1 e9 02             	shr    $0x2,%ecx
81006ac8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81006aca:	89 d9                	mov    %ebx,%ecx
81006acc:	83 e1 03             	and    $0x3,%ecx
81006acf:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81006ad1:	8b 45 08             	mov    0x8(%ebp),%eax
81006ad4:	fc                   	cld    
81006ad5:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006ad8:	5b                   	pop    %ebx
81006ad9:	5f                   	pop    %edi
81006ada:	5e                   	pop    %esi
81006adb:	c9                   	leave  
81006adc:	c3                   	ret    

81006add <__sputc_r>:
81006add:	55                   	push   %ebp
81006ade:	89 e5                	mov    %esp,%ebp
81006ae0:	83 ec 08             	sub    $0x8,%esp
81006ae3:	8b 45 10             	mov    0x10(%ebp),%eax
81006ae6:	8b 40 08             	mov    0x8(%eax),%eax
81006ae9:	8d 50 ff             	lea    -0x1(%eax),%edx
81006aec:	8b 45 10             	mov    0x10(%ebp),%eax
81006aef:	89 50 08             	mov    %edx,0x8(%eax)
81006af2:	8b 45 10             	mov    0x10(%ebp),%eax
81006af5:	8b 40 08             	mov    0x8(%eax),%eax
81006af8:	85 c0                	test   %eax,%eax
81006afa:	79 17                	jns    81006b13 <__sputc_r+0x36>
81006afc:	8b 45 10             	mov    0x10(%ebp),%eax
81006aff:	8b 50 08             	mov    0x8(%eax),%edx
81006b02:	8b 45 10             	mov    0x10(%ebp),%eax
81006b05:	8b 40 18             	mov    0x18(%eax),%eax
81006b08:	39 c2                	cmp    %eax,%edx
81006b0a:	7c 21                	jl     81006b2d <__sputc_r+0x50>
81006b0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b0f:	3c 0a                	cmp    $0xa,%al
81006b11:	74 1a                	je     81006b2d <__sputc_r+0x50>
81006b13:	8b 45 10             	mov    0x10(%ebp),%eax
81006b16:	8b 00                	mov    (%eax),%eax
81006b18:	8d 48 01             	lea    0x1(%eax),%ecx
81006b1b:	8b 55 10             	mov    0x10(%ebp),%edx
81006b1e:	89 0a                	mov    %ecx,(%edx)
81006b20:	8b 55 0c             	mov    0xc(%ebp),%edx
81006b23:	88 10                	mov    %dl,(%eax)
81006b25:	0f b6 00             	movzbl (%eax),%eax
81006b28:	0f b6 c0             	movzbl %al,%eax
81006b2b:	eb 14                	jmp    81006b41 <__sputc_r+0x64>
81006b2d:	83 ec 04             	sub    $0x4,%esp
81006b30:	ff 75 10             	push   0x10(%ebp)
81006b33:	ff 75 0c             	push   0xc(%ebp)
81006b36:	ff 75 08             	push   0x8(%ebp)
81006b39:	e8 91 ee ff ff       	call   810059cf <__swbuf_r>
81006b3e:	83 c4 10             	add    $0x10,%esp
81006b41:	c9                   	leave  
81006b42:	c3                   	ret    

81006b43 <_putc_r>:
81006b43:	55                   	push   %ebp
81006b44:	89 e5                	mov    %esp,%ebp
81006b46:	53                   	push   %ebx
81006b47:	83 ec 14             	sub    $0x14,%esp
81006b4a:	8b 5d 10             	mov    0x10(%ebp),%ebx
81006b4d:	8b 45 08             	mov    0x8(%ebp),%eax
81006b50:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006b53:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81006b57:	74 18                	je     81006b71 <_putc_r+0x2e>
81006b59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006b5c:	8b 40 38             	mov    0x38(%eax),%eax
81006b5f:	85 c0                	test   %eax,%eax
81006b61:	75 0e                	jne    81006b71 <_putc_r+0x2e>
81006b63:	83 ec 0c             	sub    $0xc,%esp
81006b66:	ff 75 f4             	push   -0xc(%ebp)
81006b69:	e8 b5 a9 ff ff       	call   81001523 <__sinit>
81006b6e:	83 c4 10             	add    $0x10,%esp
81006b71:	83 ec 04             	sub    $0x4,%esp
81006b74:	53                   	push   %ebx
81006b75:	ff 75 0c             	push   0xc(%ebp)
81006b78:	ff 75 08             	push   0x8(%ebp)
81006b7b:	e8 5d ff ff ff       	call   81006add <__sputc_r>
81006b80:	83 c4 10             	add    $0x10,%esp
81006b83:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006b86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006b89:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006b8c:	c9                   	leave  
81006b8d:	c3                   	ret    

81006b8e <putc>:
81006b8e:	55                   	push   %ebp
81006b8f:	89 e5                	mov    %esp,%ebp
81006b91:	53                   	push   %ebx
81006b92:	83 ec 14             	sub    $0x14,%esp
81006b95:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006b98:	a1 24 83 00 81       	mov    0x81008324,%eax
81006b9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006ba3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006ba6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006baa:	74 18                	je     81006bc4 <putc+0x36>
81006bac:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006baf:	8b 40 38             	mov    0x38(%eax),%eax
81006bb2:	85 c0                	test   %eax,%eax
81006bb4:	75 0e                	jne    81006bc4 <putc+0x36>
81006bb6:	83 ec 0c             	sub    $0xc,%esp
81006bb9:	ff 75 f0             	push   -0x10(%ebp)
81006bbc:	e8 62 a9 ff ff       	call   81001523 <__sinit>
81006bc1:	83 c4 10             	add    $0x10,%esp
81006bc4:	83 ec 04             	sub    $0x4,%esp
81006bc7:	53                   	push   %ebx
81006bc8:	ff 75 08             	push   0x8(%ebp)
81006bcb:	ff 75 f4             	push   -0xc(%ebp)
81006bce:	e8 0a ff ff ff       	call   81006add <__sputc_r>
81006bd3:	83 c4 10             	add    $0x10,%esp
81006bd6:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006bd9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006bdc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81006bdf:	c9                   	leave  
81006be0:	c3                   	ret    

81006be1 <_read_r>:
81006be1:	55                   	push   %ebp
81006be2:	89 e5                	mov    %esp,%ebp
81006be4:	83 ec 18             	sub    $0x18,%esp
81006be7:	c7 05 6c 8f 00 81 00 	movl   $0x0,0x81008f6c
81006bee:	00 00 00 
81006bf1:	83 ec 04             	sub    $0x4,%esp
81006bf4:	ff 75 14             	push   0x14(%ebp)
81006bf7:	ff 75 10             	push   0x10(%ebp)
81006bfa:	ff 75 0c             	push   0xc(%ebp)
81006bfd:	e8 0a 9e ff ff       	call   81000a0c <read>
81006c02:	83 c4 10             	add    $0x10,%esp
81006c05:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c08:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006c0c:	75 14                	jne    81006c22 <_read_r+0x41>
81006c0e:	a1 6c 8f 00 81       	mov    0x81008f6c,%eax
81006c13:	85 c0                	test   %eax,%eax
81006c15:	74 0b                	je     81006c22 <_read_r+0x41>
81006c17:	8b 15 6c 8f 00 81    	mov    0x81008f6c,%edx
81006c1d:	8b 45 08             	mov    0x8(%ebp),%eax
81006c20:	89 10                	mov    %edx,(%eax)
81006c22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006c25:	c9                   	leave  
81006c26:	c3                   	ret    

81006c27 <_realloc_r>:
81006c27:	55                   	push   %ebp
81006c28:	89 e5                	mov    %esp,%ebp
81006c2a:	83 ec 78             	sub    $0x78,%esp
81006c2d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006c31:	75 16                	jne    81006c49 <_realloc_r+0x22>
81006c33:	83 ec 08             	sub    $0x8,%esp
81006c36:	ff 75 10             	push   0x10(%ebp)
81006c39:	ff 75 08             	push   0x8(%ebp)
81006c3c:	e8 fb c9 ff ff       	call   8100363c <_malloc_r>
81006c41:	83 c4 10             	add    $0x10,%esp
81006c44:	e9 b6 08 00 00       	jmp    810074ff <_realloc_r+0x8d8>
81006c49:	83 ec 0c             	sub    $0xc,%esp
81006c4c:	ff 75 08             	push   0x8(%ebp)
81006c4f:	e8 c4 d3 ff ff       	call   81004018 <__malloc_lock>
81006c54:	83 c4 10             	add    $0x10,%esp
81006c57:	8b 45 0c             	mov    0xc(%ebp),%eax
81006c5a:	83 e8 08             	sub    $0x8,%eax
81006c5d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81006c60:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006c63:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006c66:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006c69:	8b 40 04             	mov    0x4(%eax),%eax
81006c6c:	83 e0 fc             	and    $0xfffffffc,%eax
81006c6f:	89 45 c0             	mov    %eax,-0x40(%ebp)
81006c72:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006c75:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006c78:	8b 45 10             	mov    0x10(%ebp),%eax
81006c7b:	83 c0 0b             	add    $0xb,%eax
81006c7e:	83 f8 16             	cmp    $0x16,%eax
81006c81:	76 0b                	jbe    81006c8e <_realloc_r+0x67>
81006c83:	8b 45 10             	mov    0x10(%ebp),%eax
81006c86:	83 c0 0b             	add    $0xb,%eax
81006c89:	83 e0 f8             	and    $0xfffffff8,%eax
81006c8c:	eb 05                	jmp    81006c93 <_realloc_r+0x6c>
81006c8e:	b8 10 00 00 00       	mov    $0x10,%eax
81006c93:	89 45 bc             	mov    %eax,-0x44(%ebp)
81006c96:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006c99:	85 c0                	test   %eax,%eax
81006c9b:	78 08                	js     81006ca5 <_realloc_r+0x7e>
81006c9d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006ca0:	3b 45 10             	cmp    0x10(%ebp),%eax
81006ca3:	73 13                	jae    81006cb8 <_realloc_r+0x91>
81006ca5:	8b 45 08             	mov    0x8(%ebp),%eax
81006ca8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81006cae:	b8 00 00 00 00       	mov    $0x0,%eax
81006cb3:	e9 47 08 00 00       	jmp    810074ff <_realloc_r+0x8d8>
81006cb8:	8b 55 c0             	mov    -0x40(%ebp),%edx
81006cbb:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006cbe:	39 c2                	cmp    %eax,%edx
81006cc0:	0f 8d 8b 07 00 00    	jge    81007451 <_realloc_r+0x82a>
81006cc6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81006cc9:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006ccc:	01 d0                	add    %edx,%eax
81006cce:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006cd1:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006cd6:	8b 40 08             	mov    0x8(%eax),%eax
81006cd9:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006cdc:	74 1e                	je     81006cfc <_realloc_r+0xd5>
81006cde:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006ce1:	8b 40 04             	mov    0x4(%eax),%eax
81006ce4:	83 e0 fe             	and    $0xfffffffe,%eax
81006ce7:	89 c2                	mov    %eax,%edx
81006ce9:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006cec:	01 d0                	add    %edx,%eax
81006cee:	8b 40 04             	mov    0x4(%eax),%eax
81006cf1:	83 e0 01             	and    $0x1,%eax
81006cf4:	85 c0                	test   %eax,%eax
81006cf6:	0f 85 ca 00 00 00    	jne    81006dc6 <_realloc_r+0x19f>
81006cfc:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006cff:	8b 40 04             	mov    0x4(%eax),%eax
81006d02:	83 e0 fc             	and    $0xfffffffc,%eax
81006d05:	89 45 e8             	mov    %eax,-0x18(%ebp)
81006d08:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006d0d:	8b 40 08             	mov    0x8(%eax),%eax
81006d10:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006d13:	75 71                	jne    81006d86 <_realloc_r+0x15f>
81006d15:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d1b:	01 d0                	add    %edx,%eax
81006d1d:	89 c2                	mov    %eax,%edx
81006d1f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d22:	83 c0 10             	add    $0x10,%eax
81006d25:	39 c2                	cmp    %eax,%edx
81006d27:	0f 8c a9 00 00 00    	jl     81006dd6 <_realloc_r+0x1af>
81006d2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006d30:	01 45 f0             	add    %eax,-0x10(%ebp)
81006d33:	ba 40 83 00 81       	mov    $0x81008340,%edx
81006d38:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81006d3b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d3e:	01 c8                	add    %ecx,%eax
81006d40:	89 42 08             	mov    %eax,0x8(%edx)
81006d43:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d46:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006d49:	89 c2                	mov    %eax,%edx
81006d4b:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006d50:	8b 40 08             	mov    0x8(%eax),%eax
81006d53:	83 ca 01             	or     $0x1,%edx
81006d56:	89 50 04             	mov    %edx,0x4(%eax)
81006d59:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006d5c:	8b 40 04             	mov    0x4(%eax),%eax
81006d5f:	83 e0 01             	and    $0x1,%eax
81006d62:	0b 45 bc             	or     -0x44(%ebp),%eax
81006d65:	89 c2                	mov    %eax,%edx
81006d67:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006d6a:	89 50 04             	mov    %edx,0x4(%eax)
81006d6d:	83 ec 0c             	sub    $0xc,%esp
81006d70:	ff 75 08             	push   0x8(%ebp)
81006d73:	e8 a6 d2 ff ff       	call   8100401e <__malloc_unlock>
81006d78:	83 c4 10             	add    $0x10,%esp
81006d7b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006d7e:	83 c0 08             	add    $0x8,%eax
81006d81:	e9 79 07 00 00       	jmp    810074ff <_realloc_r+0x8d8>
81006d86:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006d89:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d8c:	01 d0                	add    %edx,%eax
81006d8e:	89 c2                	mov    %eax,%edx
81006d90:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006d93:	39 c2                	cmp    %eax,%edx
81006d95:	7c 3f                	jl     81006dd6 <_realloc_r+0x1af>
81006d97:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006d9a:	8b 40 0c             	mov    0xc(%eax),%eax
81006d9d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006da0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006da3:	8b 40 08             	mov    0x8(%eax),%eax
81006da6:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006da9:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006dac:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006daf:	89 50 0c             	mov    %edx,0xc(%eax)
81006db2:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006db5:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006db8:	89 50 08             	mov    %edx,0x8(%eax)
81006dbb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006dbe:	01 45 f0             	add    %eax,-0x10(%ebp)
81006dc1:	e9 8c 06 00 00       	jmp    81007452 <_realloc_r+0x82b>
81006dc6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81006dcd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81006dd4:	eb 01                	jmp    81006dd7 <_realloc_r+0x1b0>
81006dd6:	90                   	nop
81006dd7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006dda:	8b 40 04             	mov    0x4(%eax),%eax
81006ddd:	83 e0 01             	and    $0x1,%eax
81006de0:	85 c0                	test   %eax,%eax
81006de2:	0f 85 d6 04 00 00    	jne    810072be <_realloc_r+0x697>
81006de8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006deb:	8b 00                	mov    (%eax),%eax
81006ded:	f7 d8                	neg    %eax
81006def:	89 c2                	mov    %eax,%edx
81006df1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006df4:	01 d0                	add    %edx,%eax
81006df6:	89 45 b0             	mov    %eax,-0x50(%ebp)
81006df9:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006dfc:	8b 40 04             	mov    0x4(%eax),%eax
81006dff:	83 e0 fc             	and    $0xfffffffc,%eax
81006e02:	89 45 ac             	mov    %eax,-0x54(%ebp)
81006e05:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81006e09:	0f 84 4a 03 00 00    	je     81007159 <_realloc_r+0x532>
81006e0f:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006e14:	8b 40 08             	mov    0x8(%eax),%eax
81006e17:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006e1a:	0f 85 b0 01 00 00    	jne    81006fd0 <_realloc_r+0x3a9>
81006e20:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006e23:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006e26:	01 c2                	add    %eax,%edx
81006e28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006e2b:	01 d0                	add    %edx,%eax
81006e2d:	89 c2                	mov    %eax,%edx
81006e2f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006e32:	83 c0 10             	add    $0x10,%eax
81006e35:	39 c2                	cmp    %eax,%edx
81006e37:	0f 8c 1c 03 00 00    	jl     81007159 <_realloc_r+0x532>
81006e3d:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006e40:	8b 40 0c             	mov    0xc(%eax),%eax
81006e43:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006e46:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006e49:	8b 40 08             	mov    0x8(%eax),%eax
81006e4c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006e4f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006e52:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006e55:	89 50 0c             	mov    %edx,0xc(%eax)
81006e58:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006e5b:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006e5e:	89 50 08             	mov    %edx,0x8(%eax)
81006e61:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006e64:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006e67:	8b 55 ac             	mov    -0x54(%ebp),%edx
81006e6a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81006e6d:	01 d0                	add    %edx,%eax
81006e6f:	01 45 f0             	add    %eax,-0x10(%ebp)
81006e72:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006e75:	83 c0 08             	add    $0x8,%eax
81006e78:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006e7b:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006e7e:	83 e8 04             	sub    $0x4,%eax
81006e81:	89 45 a0             	mov    %eax,-0x60(%ebp)
81006e84:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81006e88:	0f 87 de 00 00 00    	ja     81006f6c <_realloc_r+0x345>
81006e8e:	8b 45 0c             	mov    0xc(%ebp),%eax
81006e91:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006e94:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006e97:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006e9a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81006e9e:	0f 86 90 00 00 00    	jbe    81006f34 <_realloc_r+0x30d>
81006ea4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006ea7:	8d 42 04             	lea    0x4(%edx),%eax
81006eaa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ead:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006eb0:	8d 48 04             	lea    0x4(%eax),%ecx
81006eb3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006eb6:	8b 12                	mov    (%edx),%edx
81006eb8:	89 10                	mov    %edx,(%eax)
81006eba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006ebd:	8d 42 04             	lea    0x4(%edx),%eax
81006ec0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ec3:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006ec6:	8d 48 04             	lea    0x4(%eax),%ecx
81006ec9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006ecc:	8b 12                	mov    (%edx),%edx
81006ece:	89 10                	mov    %edx,(%eax)
81006ed0:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81006ed4:	76 5e                	jbe    81006f34 <_realloc_r+0x30d>
81006ed6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006ed9:	8d 42 04             	lea    0x4(%edx),%eax
81006edc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006edf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006ee2:	8d 48 04             	lea    0x4(%eax),%ecx
81006ee5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006ee8:	8b 12                	mov    (%edx),%edx
81006eea:	89 10                	mov    %edx,(%eax)
81006eec:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006eef:	8d 42 04             	lea    0x4(%edx),%eax
81006ef2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006ef5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006ef8:	8d 48 04             	lea    0x4(%eax),%ecx
81006efb:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006efe:	8b 12                	mov    (%edx),%edx
81006f00:	89 10                	mov    %edx,(%eax)
81006f02:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006f06:	76 2c                	jbe    81006f34 <_realloc_r+0x30d>
81006f08:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f0b:	8d 42 04             	lea    0x4(%edx),%eax
81006f0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f11:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f14:	8d 48 04             	lea    0x4(%eax),%ecx
81006f17:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f1a:	8b 12                	mov    (%edx),%edx
81006f1c:	89 10                	mov    %edx,(%eax)
81006f1e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f21:	8d 42 04             	lea    0x4(%edx),%eax
81006f24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f27:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f2a:	8d 48 04             	lea    0x4(%eax),%ecx
81006f2d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f30:	8b 12                	mov    (%edx),%edx
81006f32:	89 10                	mov    %edx,(%eax)
81006f34:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f37:	8d 42 04             	lea    0x4(%edx),%eax
81006f3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f3d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f40:	8d 48 04             	lea    0x4(%eax),%ecx
81006f43:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f46:	8b 12                	mov    (%edx),%edx
81006f48:	89 10                	mov    %edx,(%eax)
81006f4a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006f4d:	8d 42 04             	lea    0x4(%edx),%eax
81006f50:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006f53:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f56:	8d 48 04             	lea    0x4(%eax),%ecx
81006f59:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006f5c:	8b 12                	mov    (%edx),%edx
81006f5e:	89 10                	mov    %edx,(%eax)
81006f60:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81006f63:	8b 10                	mov    (%eax),%edx
81006f65:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006f68:	89 10                	mov    %edx,(%eax)
81006f6a:	eb 14                	jmp    81006f80 <_realloc_r+0x359>
81006f6c:	83 ec 04             	sub    $0x4,%esp
81006f6f:	ff 75 a0             	push   -0x60(%ebp)
81006f72:	ff 75 0c             	push   0xc(%ebp)
81006f75:	ff 75 a8             	push   -0x58(%ebp)
81006f78:	e8 d3 fa ff ff       	call   81006a50 <memmove>
81006f7d:	83 c4 10             	add    $0x10,%esp
81006f80:	ba 40 83 00 81       	mov    $0x81008340,%edx
81006f85:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006f88:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006f8b:	01 c8                	add    %ecx,%eax
81006f8d:	89 42 08             	mov    %eax,0x8(%edx)
81006f90:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006f93:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006f96:	89 c2                	mov    %eax,%edx
81006f98:	b8 40 83 00 81       	mov    $0x81008340,%eax
81006f9d:	8b 40 08             	mov    0x8(%eax),%eax
81006fa0:	83 ca 01             	or     $0x1,%edx
81006fa3:	89 50 04             	mov    %edx,0x4(%eax)
81006fa6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006fa9:	8b 40 04             	mov    0x4(%eax),%eax
81006fac:	83 e0 01             	and    $0x1,%eax
81006faf:	0b 45 bc             	or     -0x44(%ebp),%eax
81006fb2:	89 c2                	mov    %eax,%edx
81006fb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006fb7:	89 50 04             	mov    %edx,0x4(%eax)
81006fba:	83 ec 0c             	sub    $0xc,%esp
81006fbd:	ff 75 08             	push   0x8(%ebp)
81006fc0:	e8 59 d0 ff ff       	call   8100401e <__malloc_unlock>
81006fc5:	83 c4 10             	add    $0x10,%esp
81006fc8:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006fcb:	e9 2f 05 00 00       	jmp    810074ff <_realloc_r+0x8d8>
81006fd0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006fd3:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006fd6:	01 c2                	add    %eax,%edx
81006fd8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006fdb:	01 d0                	add    %edx,%eax
81006fdd:	89 c2                	mov    %eax,%edx
81006fdf:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006fe2:	39 c2                	cmp    %eax,%edx
81006fe4:	0f 8c 6f 01 00 00    	jl     81007159 <_realloc_r+0x532>
81006fea:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006fed:	8b 40 0c             	mov    0xc(%eax),%eax
81006ff0:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006ff3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006ff6:	8b 40 08             	mov    0x8(%eax),%eax
81006ff9:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006ffc:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006fff:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007002:	89 50 0c             	mov    %edx,0xc(%eax)
81007005:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007008:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100700b:	89 50 08             	mov    %edx,0x8(%eax)
8100700e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007011:	8b 40 0c             	mov    0xc(%eax),%eax
81007014:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007017:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100701a:	8b 40 08             	mov    0x8(%eax),%eax
8100701d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81007020:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81007023:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007026:	89 50 0c             	mov    %edx,0xc(%eax)
81007029:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100702c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100702f:	89 50 08             	mov    %edx,0x8(%eax)
81007032:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007035:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007038:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100703b:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100703e:	01 d0                	add    %edx,%eax
81007040:	01 45 f0             	add    %eax,-0x10(%ebp)
81007043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007046:	83 c0 08             	add    $0x8,%eax
81007049:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100704c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100704f:	83 e8 04             	sub    $0x4,%eax
81007052:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81007055:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81007059:	0f 87 e1 00 00 00    	ja     81007140 <_realloc_r+0x519>
8100705f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007062:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007065:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007068:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100706b:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
8100706f:	0f 86 90 00 00 00    	jbe    81007105 <_realloc_r+0x4de>
81007075:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007078:	8d 42 04             	lea    0x4(%edx),%eax
8100707b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100707e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007081:	8d 48 04             	lea    0x4(%eax),%ecx
81007084:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007087:	8b 12                	mov    (%edx),%edx
81007089:	89 10                	mov    %edx,(%eax)
8100708b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100708e:	8d 42 04             	lea    0x4(%edx),%eax
81007091:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007094:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007097:	8d 48 04             	lea    0x4(%eax),%ecx
8100709a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100709d:	8b 12                	mov    (%edx),%edx
8100709f:	89 10                	mov    %edx,(%eax)
810070a1:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
810070a5:	76 5e                	jbe    81007105 <_realloc_r+0x4de>
810070a7:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070aa:	8d 42 04             	lea    0x4(%edx),%eax
810070ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070b3:	8d 48 04             	lea    0x4(%eax),%ecx
810070b6:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070b9:	8b 12                	mov    (%edx),%edx
810070bb:	89 10                	mov    %edx,(%eax)
810070bd:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070c0:	8d 42 04             	lea    0x4(%edx),%eax
810070c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070c6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070c9:	8d 48 04             	lea    0x4(%eax),%ecx
810070cc:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070cf:	8b 12                	mov    (%edx),%edx
810070d1:	89 10                	mov    %edx,(%eax)
810070d3:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
810070d7:	76 2c                	jbe    81007105 <_realloc_r+0x4de>
810070d9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070dc:	8d 42 04             	lea    0x4(%edx),%eax
810070df:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070e2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070e5:	8d 48 04             	lea    0x4(%eax),%ecx
810070e8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810070eb:	8b 12                	mov    (%edx),%edx
810070ed:	89 10                	mov    %edx,(%eax)
810070ef:	8b 55 dc             	mov    -0x24(%ebp),%edx
810070f2:	8d 42 04             	lea    0x4(%edx),%eax
810070f5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810070f8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810070fb:	8d 48 04             	lea    0x4(%eax),%ecx
810070fe:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007101:	8b 12                	mov    (%edx),%edx
81007103:	89 10                	mov    %edx,(%eax)
81007105:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007108:	8d 42 04             	lea    0x4(%edx),%eax
8100710b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100710e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007111:	8d 48 04             	lea    0x4(%eax),%ecx
81007114:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81007117:	8b 12                	mov    (%edx),%edx
81007119:	89 10                	mov    %edx,(%eax)
8100711b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100711e:	8d 42 04             	lea    0x4(%edx),%eax
81007121:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007124:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007127:	8d 48 04             	lea    0x4(%eax),%ecx
8100712a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100712d:	8b 12                	mov    (%edx),%edx
8100712f:	89 10                	mov    %edx,(%eax)
81007131:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007134:	8b 10                	mov    (%eax),%edx
81007136:	8b 45 d8             	mov    -0x28(%ebp),%eax
81007139:	89 10                	mov    %edx,(%eax)
8100713b:	e9 12 03 00 00       	jmp    81007452 <_realloc_r+0x82b>
81007140:	83 ec 04             	sub    $0x4,%esp
81007143:	ff 75 a4             	push   -0x5c(%ebp)
81007146:	ff 75 0c             	push   0xc(%ebp)
81007149:	ff 75 a8             	push   -0x58(%ebp)
8100714c:	e8 ff f8 ff ff       	call   81006a50 <memmove>
81007151:	83 c4 10             	add    $0x10,%esp
81007154:	e9 f9 02 00 00       	jmp    81007452 <_realloc_r+0x82b>
81007159:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
8100715d:	0f 84 5b 01 00 00    	je     810072be <_realloc_r+0x697>
81007163:	8b 55 ac             	mov    -0x54(%ebp),%edx
81007166:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007169:	01 d0                	add    %edx,%eax
8100716b:	89 c2                	mov    %eax,%edx
8100716d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007170:	39 c2                	cmp    %eax,%edx
81007172:	0f 8c 46 01 00 00    	jl     810072be <_realloc_r+0x697>
81007178:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100717b:	8b 40 0c             	mov    0xc(%eax),%eax
8100717e:	89 45 b8             	mov    %eax,-0x48(%ebp)
81007181:	8b 45 b0             	mov    -0x50(%ebp),%eax
81007184:	8b 40 08             	mov    0x8(%eax),%eax
81007187:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100718a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100718d:	8b 55 b8             	mov    -0x48(%ebp),%edx
81007190:	89 50 0c             	mov    %edx,0xc(%eax)
81007193:	8b 45 b8             	mov    -0x48(%ebp),%eax
81007196:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81007199:	89 50 08             	mov    %edx,0x8(%eax)
8100719c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100719f:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071a2:	8b 45 ac             	mov    -0x54(%ebp),%eax
810071a5:	01 45 f0             	add    %eax,-0x10(%ebp)
810071a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071ab:	83 c0 08             	add    $0x8,%eax
810071ae:	89 45 a8             	mov    %eax,-0x58(%ebp)
810071b1:	8b 45 c0             	mov    -0x40(%ebp),%eax
810071b4:	83 e8 04             	sub    $0x4,%eax
810071b7:	89 45 9c             	mov    %eax,-0x64(%ebp)
810071ba:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
810071be:	0f 87 e1 00 00 00    	ja     810072a5 <_realloc_r+0x67e>
810071c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810071c7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810071ca:	8b 45 a8             	mov    -0x58(%ebp),%eax
810071cd:	89 45 d0             	mov    %eax,-0x30(%ebp)
810071d0:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
810071d4:	0f 86 90 00 00 00    	jbe    8100726a <_realloc_r+0x643>
810071da:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810071dd:	8d 42 04             	lea    0x4(%edx),%eax
810071e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810071e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810071e6:	8d 48 04             	lea    0x4(%eax),%ecx
810071e9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810071ec:	8b 12                	mov    (%edx),%edx
810071ee:	89 10                	mov    %edx,(%eax)
810071f0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810071f3:	8d 42 04             	lea    0x4(%edx),%eax
810071f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810071f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810071fc:	8d 48 04             	lea    0x4(%eax),%ecx
810071ff:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007202:	8b 12                	mov    (%edx),%edx
81007204:	89 10                	mov    %edx,(%eax)
81007206:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100720a:	76 5e                	jbe    8100726a <_realloc_r+0x643>
8100720c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100720f:	8d 42 04             	lea    0x4(%edx),%eax
81007212:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007215:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007218:	8d 48 04             	lea    0x4(%eax),%ecx
8100721b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100721e:	8b 12                	mov    (%edx),%edx
81007220:	89 10                	mov    %edx,(%eax)
81007222:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007225:	8d 42 04             	lea    0x4(%edx),%eax
81007228:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100722b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100722e:	8d 48 04             	lea    0x4(%eax),%ecx
81007231:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007234:	8b 12                	mov    (%edx),%edx
81007236:	89 10                	mov    %edx,(%eax)
81007238:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
8100723c:	76 2c                	jbe    8100726a <_realloc_r+0x643>
8100723e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007241:	8d 42 04             	lea    0x4(%edx),%eax
81007244:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007247:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100724a:	8d 48 04             	lea    0x4(%eax),%ecx
8100724d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007250:	8b 12                	mov    (%edx),%edx
81007252:	89 10                	mov    %edx,(%eax)
81007254:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007257:	8d 42 04             	lea    0x4(%edx),%eax
8100725a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100725d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007260:	8d 48 04             	lea    0x4(%eax),%ecx
81007263:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007266:	8b 12                	mov    (%edx),%edx
81007268:	89 10                	mov    %edx,(%eax)
8100726a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100726d:	8d 42 04             	lea    0x4(%edx),%eax
81007270:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007273:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007276:	8d 48 04             	lea    0x4(%eax),%ecx
81007279:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100727c:	8b 12                	mov    (%edx),%edx
8100727e:	89 10                	mov    %edx,(%eax)
81007280:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81007283:	8d 42 04             	lea    0x4(%edx),%eax
81007286:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81007289:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100728c:	8d 48 04             	lea    0x4(%eax),%ecx
8100728f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81007292:	8b 12                	mov    (%edx),%edx
81007294:	89 10                	mov    %edx,(%eax)
81007296:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81007299:	8b 10                	mov    (%eax),%edx
8100729b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100729e:	89 10                	mov    %edx,(%eax)
810072a0:	e9 ad 01 00 00       	jmp    81007452 <_realloc_r+0x82b>
810072a5:	83 ec 04             	sub    $0x4,%esp
810072a8:	ff 75 9c             	push   -0x64(%ebp)
810072ab:	ff 75 0c             	push   0xc(%ebp)
810072ae:	ff 75 a8             	push   -0x58(%ebp)
810072b1:	e8 9a f7 ff ff       	call   81006a50 <memmove>
810072b6:	83 c4 10             	add    $0x10,%esp
810072b9:	e9 94 01 00 00       	jmp    81007452 <_realloc_r+0x82b>
810072be:	83 ec 08             	sub    $0x8,%esp
810072c1:	ff 75 10             	push   0x10(%ebp)
810072c4:	ff 75 08             	push   0x8(%ebp)
810072c7:	e8 70 c3 ff ff       	call   8100363c <_malloc_r>
810072cc:	83 c4 10             	add    $0x10,%esp
810072cf:	89 45 a8             	mov    %eax,-0x58(%ebp)
810072d2:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810072d6:	75 18                	jne    810072f0 <_realloc_r+0x6c9>
810072d8:	83 ec 0c             	sub    $0xc,%esp
810072db:	ff 75 08             	push   0x8(%ebp)
810072de:	e8 3b cd ff ff       	call   8100401e <__malloc_unlock>
810072e3:	83 c4 10             	add    $0x10,%esp
810072e6:	b8 00 00 00 00       	mov    $0x0,%eax
810072eb:	e9 0f 02 00 00       	jmp    810074ff <_realloc_r+0x8d8>
810072f0:	8b 45 a8             	mov    -0x58(%ebp),%eax
810072f3:	83 e8 08             	sub    $0x8,%eax
810072f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810072f9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810072fc:	8b 40 04             	mov    0x4(%eax),%eax
810072ff:	83 e0 fe             	and    $0xfffffffe,%eax
81007302:	89 c2                	mov    %eax,%edx
81007304:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81007307:	01 d0                	add    %edx,%eax
81007309:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100730c:	75 17                	jne    81007325 <_realloc_r+0x6fe>
8100730e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007311:	8b 40 04             	mov    0x4(%eax),%eax
81007314:	83 e0 fc             	and    $0xfffffffc,%eax
81007317:	01 45 f0             	add    %eax,-0x10(%ebp)
8100731a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100731d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007320:	e9 2d 01 00 00       	jmp    81007452 <_realloc_r+0x82b>
81007325:	8b 45 c0             	mov    -0x40(%ebp),%eax
81007328:	83 e8 04             	sub    $0x4,%eax
8100732b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100732e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81007332:	0f 87 de 00 00 00    	ja     81007416 <_realloc_r+0x7ef>
81007338:	8b 45 0c             	mov    0xc(%ebp),%eax
8100733b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100733e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81007341:	89 45 c8             	mov    %eax,-0x38(%ebp)
81007344:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81007348:	0f 86 90 00 00 00    	jbe    810073de <_realloc_r+0x7b7>
8100734e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007351:	8d 42 04             	lea    0x4(%edx),%eax
81007354:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007357:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100735a:	8d 48 04             	lea    0x4(%eax),%ecx
8100735d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007360:	8b 12                	mov    (%edx),%edx
81007362:	89 10                	mov    %edx,(%eax)
81007364:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007367:	8d 42 04             	lea    0x4(%edx),%eax
8100736a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100736d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007370:	8d 48 04             	lea    0x4(%eax),%ecx
81007373:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007376:	8b 12                	mov    (%edx),%edx
81007378:	89 10                	mov    %edx,(%eax)
8100737a:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
8100737e:	76 5e                	jbe    810073de <_realloc_r+0x7b7>
81007380:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007383:	8d 42 04             	lea    0x4(%edx),%eax
81007386:	89 45 cc             	mov    %eax,-0x34(%ebp)
81007389:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100738c:	8d 48 04             	lea    0x4(%eax),%ecx
8100738f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007392:	8b 12                	mov    (%edx),%edx
81007394:	89 10                	mov    %edx,(%eax)
81007396:	8b 55 cc             	mov    -0x34(%ebp),%edx
81007399:	8d 42 04             	lea    0x4(%edx),%eax
8100739c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100739f:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073a2:	8d 48 04             	lea    0x4(%eax),%ecx
810073a5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073a8:	8b 12                	mov    (%edx),%edx
810073aa:	89 10                	mov    %edx,(%eax)
810073ac:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
810073b0:	76 2c                	jbe    810073de <_realloc_r+0x7b7>
810073b2:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073b5:	8d 42 04             	lea    0x4(%edx),%eax
810073b8:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073bb:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073be:	8d 48 04             	lea    0x4(%eax),%ecx
810073c1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073c4:	8b 12                	mov    (%edx),%edx
810073c6:	89 10                	mov    %edx,(%eax)
810073c8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073cb:	8d 42 04             	lea    0x4(%edx),%eax
810073ce:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073d1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073d4:	8d 48 04             	lea    0x4(%eax),%ecx
810073d7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073da:	8b 12                	mov    (%edx),%edx
810073dc:	89 10                	mov    %edx,(%eax)
810073de:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073e1:	8d 42 04             	lea    0x4(%edx),%eax
810073e4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073e7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810073ea:	8d 48 04             	lea    0x4(%eax),%ecx
810073ed:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810073f0:	8b 12                	mov    (%edx),%edx
810073f2:	89 10                	mov    %edx,(%eax)
810073f4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810073f7:	8d 42 04             	lea    0x4(%edx),%eax
810073fa:	89 45 cc             	mov    %eax,-0x34(%ebp)
810073fd:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007400:	8d 48 04             	lea    0x4(%eax),%ecx
81007403:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81007406:	8b 12                	mov    (%edx),%edx
81007408:	89 10                	mov    %edx,(%eax)
8100740a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100740d:	8b 10                	mov    (%eax),%edx
8100740f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81007412:	89 10                	mov    %edx,(%eax)
81007414:	eb 14                	jmp    8100742a <_realloc_r+0x803>
81007416:	83 ec 04             	sub    $0x4,%esp
81007419:	ff 75 98             	push   -0x68(%ebp)
8100741c:	ff 75 0c             	push   0xc(%ebp)
8100741f:	ff 75 a8             	push   -0x58(%ebp)
81007422:	e8 29 f6 ff ff       	call   81006a50 <memmove>
81007427:	83 c4 10             	add    $0x10,%esp
8100742a:	83 ec 08             	sub    $0x8,%esp
8100742d:	ff 75 0c             	push   0xc(%ebp)
81007430:	ff 75 08             	push   0x8(%ebp)
81007433:	e8 41 a3 ff ff       	call   81001779 <_free_r>
81007438:	83 c4 10             	add    $0x10,%esp
8100743b:	83 ec 0c             	sub    $0xc,%esp
8100743e:	ff 75 08             	push   0x8(%ebp)
81007441:	e8 d8 cb ff ff       	call   8100401e <__malloc_unlock>
81007446:	83 c4 10             	add    $0x10,%esp
81007449:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100744c:	e9 ae 00 00 00       	jmp    810074ff <_realloc_r+0x8d8>
81007451:	90                   	nop
81007452:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007455:	2b 45 bc             	sub    -0x44(%ebp),%eax
81007458:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100745b:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
8100745f:	76 5d                	jbe    810074be <_realloc_r+0x897>
81007461:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007464:	8b 45 bc             	mov    -0x44(%ebp),%eax
81007467:	01 d0                	add    %edx,%eax
81007469:	89 45 90             	mov    %eax,-0x70(%ebp)
8100746c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100746f:	8b 40 04             	mov    0x4(%eax),%eax
81007472:	83 e0 01             	and    $0x1,%eax
81007475:	0b 45 bc             	or     -0x44(%ebp),%eax
81007478:	89 c2                	mov    %eax,%edx
8100747a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100747d:	89 50 04             	mov    %edx,0x4(%eax)
81007480:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007483:	83 c8 01             	or     $0x1,%eax
81007486:	89 c2                	mov    %eax,%edx
81007488:	8b 45 90             	mov    -0x70(%ebp),%eax
8100748b:	89 50 04             	mov    %edx,0x4(%eax)
8100748e:	8b 55 90             	mov    -0x70(%ebp),%edx
81007491:	8b 45 94             	mov    -0x6c(%ebp),%eax
81007494:	01 d0                	add    %edx,%eax
81007496:	8b 50 04             	mov    0x4(%eax),%edx
81007499:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100749c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100749f:	01 c8                	add    %ecx,%eax
810074a1:	83 ca 01             	or     $0x1,%edx
810074a4:	89 50 04             	mov    %edx,0x4(%eax)
810074a7:	8b 45 90             	mov    -0x70(%ebp),%eax
810074aa:	83 c0 08             	add    $0x8,%eax
810074ad:	83 ec 08             	sub    $0x8,%esp
810074b0:	50                   	push   %eax
810074b1:	ff 75 08             	push   0x8(%ebp)
810074b4:	e8 c0 a2 ff ff       	call   81001779 <_free_r>
810074b9:	83 c4 10             	add    $0x10,%esp
810074bc:	eb 2d                	jmp    810074eb <_realloc_r+0x8c4>
810074be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074c1:	8b 40 04             	mov    0x4(%eax),%eax
810074c4:	83 e0 01             	and    $0x1,%eax
810074c7:	0b 45 f0             	or     -0x10(%ebp),%eax
810074ca:	89 c2                	mov    %eax,%edx
810074cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074cf:	89 50 04             	mov    %edx,0x4(%eax)
810074d2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810074d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810074d8:	01 d0                	add    %edx,%eax
810074da:	8b 50 04             	mov    0x4(%eax),%edx
810074dd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810074e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810074e3:	01 c8                	add    %ecx,%eax
810074e5:	83 ca 01             	or     $0x1,%edx
810074e8:	89 50 04             	mov    %edx,0x4(%eax)
810074eb:	83 ec 0c             	sub    $0xc,%esp
810074ee:	ff 75 08             	push   0x8(%ebp)
810074f1:	e8 28 cb ff ff       	call   8100401e <__malloc_unlock>
810074f6:	83 c4 10             	add    $0x10,%esp
810074f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810074fc:	83 c0 08             	add    $0x8,%eax
810074ff:	c9                   	leave  
81007500:	c3                   	ret    

81007501 <__srget_r>:
81007501:	55                   	push   %ebp
81007502:	89 e5                	mov    %esp,%ebp
81007504:	53                   	push   %ebx
81007505:	83 ec 14             	sub    $0x14,%esp
81007508:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100750b:	8b 45 08             	mov    0x8(%ebp),%eax
8100750e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007511:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007515:	74 18                	je     8100752f <__srget_r+0x2e>
81007517:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100751a:	8b 40 38             	mov    0x38(%eax),%eax
8100751d:	85 c0                	test   %eax,%eax
8100751f:	75 0e                	jne    8100752f <__srget_r+0x2e>
81007521:	83 ec 0c             	sub    $0xc,%esp
81007524:	ff 75 f4             	push   -0xc(%ebp)
81007527:	e8 f7 9f ff ff       	call   81001523 <__sinit>
8100752c:	83 c4 10             	add    $0x10,%esp
8100752f:	83 ec 08             	sub    $0x8,%esp
81007532:	53                   	push   %ebx
81007533:	ff 75 08             	push   0x8(%ebp)
81007536:	e8 96 d9 ff ff       	call   81004ed1 <__srefill_r>
8100753b:	83 c4 10             	add    $0x10,%esp
8100753e:	85 c0                	test   %eax,%eax
81007540:	75 18                	jne    8100755a <__srget_r+0x59>
81007542:	8b 43 04             	mov    0x4(%ebx),%eax
81007545:	83 e8 01             	sub    $0x1,%eax
81007548:	89 43 04             	mov    %eax,0x4(%ebx)
8100754b:	8b 03                	mov    (%ebx),%eax
8100754d:	8d 50 01             	lea    0x1(%eax),%edx
81007550:	89 13                	mov    %edx,(%ebx)
81007552:	0f b6 00             	movzbl (%eax),%eax
81007555:	0f b6 c0             	movzbl %al,%eax
81007558:	eb 05                	jmp    8100755f <__srget_r+0x5e>
8100755a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100755f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007562:	c9                   	leave  
81007563:	c3                   	ret    

81007564 <__srget>:
81007564:	55                   	push   %ebp
81007565:	89 e5                	mov    %esp,%ebp
81007567:	83 ec 08             	sub    $0x8,%esp
8100756a:	8b 55 08             	mov    0x8(%ebp),%edx
8100756d:	a1 24 83 00 81       	mov    0x81008324,%eax
81007572:	83 ec 08             	sub    $0x8,%esp
81007575:	52                   	push   %edx
81007576:	50                   	push   %eax
81007577:	e8 85 ff ff ff       	call   81007501 <__srget_r>
8100757c:	83 c4 10             	add    $0x10,%esp
8100757f:	c9                   	leave  
81007580:	c3                   	ret    

81007581 <strncmp>:
81007581:	55                   	push   %ebp
81007582:	89 e5                	mov    %esp,%ebp
81007584:	83 ec 10             	sub    $0x10,%esp
81007587:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100758b:	75 0a                	jne    81007597 <strncmp+0x16>
8100758d:	b8 00 00 00 00       	mov    $0x0,%eax
81007592:	e9 cb 00 00 00       	jmp    81007662 <strncmp+0xe1>
81007597:	8b 55 08             	mov    0x8(%ebp),%edx
8100759a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100759d:	09 d0                	or     %edx,%eax
8100759f:	83 e0 03             	and    $0x3,%eax
810075a2:	85 c0                	test   %eax,%eax
810075a4:	0f 85 85 00 00 00    	jne    8100762f <strncmp+0xae>
810075aa:	8b 45 08             	mov    0x8(%ebp),%eax
810075ad:	89 45 fc             	mov    %eax,-0x4(%ebp)
810075b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810075b3:	89 45 f8             	mov    %eax,-0x8(%ebp)
810075b6:	eb 36                	jmp    810075ee <strncmp+0x6d>
810075b8:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810075bc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810075c0:	74 1d                	je     810075df <strncmp+0x5e>
810075c2:	8b 45 fc             	mov    -0x4(%ebp),%eax
810075c5:	8b 00                	mov    (%eax),%eax
810075c7:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
810075cd:	8b 45 fc             	mov    -0x4(%ebp),%eax
810075d0:	8b 00                	mov    (%eax),%eax
810075d2:	f7 d0                	not    %eax
810075d4:	21 d0                	and    %edx,%eax
810075d6:	25 80 80 80 80       	and    $0x80808080,%eax
810075db:	85 c0                	test   %eax,%eax
810075dd:	74 07                	je     810075e6 <strncmp+0x65>
810075df:	b8 00 00 00 00       	mov    $0x0,%eax
810075e4:	eb 7c                	jmp    81007662 <strncmp+0xe1>
810075e6:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
810075ea:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
810075ee:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
810075f2:	76 0e                	jbe    81007602 <strncmp+0x81>
810075f4:	8b 45 fc             	mov    -0x4(%ebp),%eax
810075f7:	8b 10                	mov    (%eax),%edx
810075f9:	8b 45 f8             	mov    -0x8(%ebp),%eax
810075fc:	8b 00                	mov    (%eax),%eax
810075fe:	39 c2                	cmp    %eax,%edx
81007600:	74 b6                	je     810075b8 <strncmp+0x37>
81007602:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007605:	89 45 08             	mov    %eax,0x8(%ebp)
81007608:	8b 45 f8             	mov    -0x8(%ebp),%eax
8100760b:	89 45 0c             	mov    %eax,0xc(%ebp)
8100760e:	eb 1f                	jmp    8100762f <strncmp+0xae>
81007610:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007614:	74 0a                	je     81007620 <strncmp+0x9f>
81007616:	8b 45 08             	mov    0x8(%ebp),%eax
81007619:	0f b6 00             	movzbl (%eax),%eax
8100761c:	84 c0                	test   %al,%al
8100761e:	75 07                	jne    81007627 <strncmp+0xa6>
81007620:	b8 00 00 00 00       	mov    $0x0,%eax
81007625:	eb 3b                	jmp    81007662 <strncmp+0xe1>
81007627:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100762b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100762f:	8b 45 10             	mov    0x10(%ebp),%eax
81007632:	8d 50 ff             	lea    -0x1(%eax),%edx
81007635:	89 55 10             	mov    %edx,0x10(%ebp)
81007638:	85 c0                	test   %eax,%eax
8100763a:	74 10                	je     8100764c <strncmp+0xcb>
8100763c:	8b 45 08             	mov    0x8(%ebp),%eax
8100763f:	0f b6 10             	movzbl (%eax),%edx
81007642:	8b 45 0c             	mov    0xc(%ebp),%eax
81007645:	0f b6 00             	movzbl (%eax),%eax
81007648:	38 c2                	cmp    %al,%dl
8100764a:	74 c4                	je     81007610 <strncmp+0x8f>
8100764c:	8b 45 08             	mov    0x8(%ebp),%eax
8100764f:	0f b6 00             	movzbl (%eax),%eax
81007652:	0f b6 d0             	movzbl %al,%edx
81007655:	8b 45 0c             	mov    0xc(%ebp),%eax
81007658:	0f b6 00             	movzbl (%eax),%eax
8100765b:	0f b6 c8             	movzbl %al,%ecx
8100765e:	89 d0                	mov    %edx,%eax
81007660:	29 c8                	sub    %ecx,%eax
81007662:	c9                   	leave  
81007663:	c3                   	ret    

81007664 <__get_global_locale>:
81007664:	55                   	push   %ebp
81007665:	89 e5                	mov    %esp,%ebp
81007667:	b8 60 87 00 81       	mov    $0x81008760,%eax
8100766c:	5d                   	pop    %ebp
8100766d:	c3                   	ret    

8100766e <__get_current_locale>:
8100766e:	55                   	push   %ebp
8100766f:	89 e5                	mov    %esp,%ebp
81007671:	e8 ee ff ff ff       	call   81007664 <__get_global_locale>
81007676:	5d                   	pop    %ebp
81007677:	c3                   	ret    

81007678 <_wcrtomb_r>:
81007678:	55                   	push   %ebp
81007679:	89 e5                	mov    %esp,%ebp
8100767b:	83 ec 18             	sub    $0x18,%esp
8100767e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81007685:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007689:	75 21                	jne    810076ac <_wcrtomb_r+0x34>
8100768b:	e8 de ff ff ff       	call   8100766e <__get_current_locale>
81007690:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007696:	ff 75 14             	push   0x14(%ebp)
81007699:	6a 00                	push   $0x0
8100769b:	8d 55 ea             	lea    -0x16(%ebp),%edx
8100769e:	52                   	push   %edx
8100769f:	ff 75 08             	push   0x8(%ebp)
810076a2:	ff d0                	call   *%eax
810076a4:	83 c4 10             	add    $0x10,%esp
810076a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810076aa:	eb 1f                	jmp    810076cb <_wcrtomb_r+0x53>
810076ac:	e8 bd ff ff ff       	call   8100766e <__get_current_locale>
810076b1:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810076b7:	ff 75 14             	push   0x14(%ebp)
810076ba:	ff 75 10             	push   0x10(%ebp)
810076bd:	ff 75 0c             	push   0xc(%ebp)
810076c0:	ff 75 08             	push   0x8(%ebp)
810076c3:	ff d0                	call   *%eax
810076c5:	83 c4 10             	add    $0x10,%esp
810076c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810076cb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810076cf:	75 19                	jne    810076ea <_wcrtomb_r+0x72>
810076d1:	8b 45 14             	mov    0x14(%ebp),%eax
810076d4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810076da:	8b 45 08             	mov    0x8(%ebp),%eax
810076dd:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810076e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810076e8:	eb 03                	jmp    810076ed <_wcrtomb_r+0x75>
810076ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076ed:	c9                   	leave  
810076ee:	c3                   	ret    

810076ef <wcrtomb>:
810076ef:	55                   	push   %ebp
810076f0:	89 e5                	mov    %esp,%ebp
810076f2:	83 ec 28             	sub    $0x28,%esp
810076f5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810076fc:	a1 24 83 00 81       	mov    0x81008324,%eax
81007701:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007704:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81007708:	75 21                	jne    8100772b <wcrtomb+0x3c>
8100770a:	e8 5f ff ff ff       	call   8100766e <__get_current_locale>
8100770f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007715:	ff 75 10             	push   0x10(%ebp)
81007718:	6a 00                	push   $0x0
8100771a:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100771d:	52                   	push   %edx
8100771e:	ff 75 f0             	push   -0x10(%ebp)
81007721:	ff d0                	call   *%eax
81007723:	83 c4 10             	add    $0x10,%esp
81007726:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007729:	eb 1f                	jmp    8100774a <wcrtomb+0x5b>
8100772b:	e8 3e ff ff ff       	call   8100766e <__get_current_locale>
81007730:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007736:	ff 75 10             	push   0x10(%ebp)
81007739:	ff 75 0c             	push   0xc(%ebp)
8100773c:	ff 75 08             	push   0x8(%ebp)
8100773f:	ff 75 f0             	push   -0x10(%ebp)
81007742:	ff d0                	call   *%eax
81007744:	83 c4 10             	add    $0x10,%esp
81007747:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100774a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100774e:	75 19                	jne    81007769 <wcrtomb+0x7a>
81007750:	8b 45 10             	mov    0x10(%ebp),%eax
81007753:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81007759:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100775c:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81007762:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007767:	eb 03                	jmp    8100776c <wcrtomb+0x7d>
81007769:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100776c:	c9                   	leave  
8100776d:	c3                   	ret    

8100776e <__get_global_locale>:
8100776e:	55                   	push   %ebp
8100776f:	89 e5                	mov    %esp,%ebp
81007771:	b8 60 87 00 81       	mov    $0x81008760,%eax
81007776:	5d                   	pop    %ebp
81007777:	c3                   	ret    

81007778 <__get_current_locale>:
81007778:	55                   	push   %ebp
81007779:	89 e5                	mov    %esp,%ebp
8100777b:	e8 ee ff ff ff       	call   8100776e <__get_global_locale>
81007780:	5d                   	pop    %ebp
81007781:	c3                   	ret    

81007782 <_wctomb_r>:
81007782:	55                   	push   %ebp
81007783:	89 e5                	mov    %esp,%ebp
81007785:	83 ec 08             	sub    $0x8,%esp
81007788:	e8 eb ff ff ff       	call   81007778 <__get_current_locale>
8100778d:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81007793:	ff 75 14             	push   0x14(%ebp)
81007796:	ff 75 10             	push   0x10(%ebp)
81007799:	ff 75 0c             	push   0xc(%ebp)
8100779c:	ff 75 08             	push   0x8(%ebp)
8100779f:	ff d0                	call   *%eax
810077a1:	83 c4 10             	add    $0x10,%esp
810077a4:	c9                   	leave  
810077a5:	c3                   	ret    

810077a6 <__ascii_wctomb>:
810077a6:	55                   	push   %ebp
810077a7:	89 e5                	mov    %esp,%ebp
810077a9:	83 ec 10             	sub    $0x10,%esp
810077ac:	8b 45 10             	mov    0x10(%ebp),%eax
810077af:	89 45 fc             	mov    %eax,-0x4(%ebp)
810077b2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810077b6:	75 07                	jne    810077bf <__ascii_wctomb+0x19>
810077b8:	b8 00 00 00 00       	mov    $0x0,%eax
810077bd:	eb 28                	jmp    810077e7 <__ascii_wctomb+0x41>
810077bf:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810077c6:	76 10                	jbe    810077d8 <__ascii_wctomb+0x32>
810077c8:	8b 45 08             	mov    0x8(%ebp),%eax
810077cb:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810077d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810077d6:	eb 0f                	jmp    810077e7 <__ascii_wctomb+0x41>
810077d8:	8b 45 fc             	mov    -0x4(%ebp),%eax
810077db:	89 c2                	mov    %eax,%edx
810077dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810077e0:	88 10                	mov    %dl,(%eax)
810077e2:	b8 01 00 00 00       	mov    $0x1,%eax
810077e7:	c9                   	leave  
810077e8:	c3                   	ret    

810077e9 <__env_lock>:
810077e9:	55                   	push   %ebp
810077ea:	89 e5                	mov    %esp,%ebp
810077ec:	90                   	nop
810077ed:	5d                   	pop    %ebp
810077ee:	c3                   	ret    

810077ef <__env_unlock>:
810077ef:	55                   	push   %ebp
810077f0:	89 e5                	mov    %esp,%ebp
810077f2:	90                   	nop
810077f3:	5d                   	pop    %ebp
810077f4:	c3                   	ret    
