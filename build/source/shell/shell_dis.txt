
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100062f

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00007b50 memsz 0x00008200 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006aff  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000064c  81006b00  81006b00  00007b00  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81007160  81007160  00008160  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000006a0  81007b60  81007b60  00008b50  2**5
                  ALLOC
  4 .debug_info   00022bbb  00000000  00000000  00008b50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00007d58  00000000  00000000  0002b70b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000828  00000000  00000000  00033468  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00004d04  00000000  00000000  00033c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001618  00000000  00000000  00038994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 000014c3  00000000  00000000  00039fac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003d  00000000  00000000  0003b46f  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001a3c  00000000  00000000  0003b4ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  0003cee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81007b60 l     O .bss	00000200 cmd_buf
81007160 l     O .data	00000004 prompt
81007d60 l     O .bss	0000040c cli
81000000 l     F .text	00000042 do_help
81000042 l     F .text	00000037 do_clear
81000079 l     F .text	000001c2 do_echo
8100023b l     F .text	00000010 do_exit
8100024b l     F .text	00000095 do_ls
81006ca0 l     O .rodata	0000003c cmd_list
810002e0 l     F .text	0000003e cli_init
8100031e l     F .text	00000033 show_prompt
81000351 l     F .text	00000043 find_builtin
81000394 l     F .text	00000049 run_builtin
810003dd l     F .text	000000be run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
81000ebe l     F .text	000000ad std
81000f6b l     F .text	0000001b stdin_init
81000f86 l     F .text	0000001b stdout_init
81000fa1 l     F .text	0000001b stderr_init
8100816c l     O .bss	00000004 __sfp_recursive_mutex
81008170 l     O .bss	00000004 __sinit_recursive_mutex
81001264 l     F .text	0000000a __fp_lock
8100126e l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
8100817c l     O .bss	00000004 optwhere
81008180 l     O .bss	00000004 permute_from
81008184 l     O .bss	00000004 num_nonopts
81001a01 l     F .text	0000007b reverse_argv_elements
81001a7c l     F .text	00000036 permute
81001ab2 l     F .text	00000031 is_option
81001ae3 l     F .text	00000059 read_globals
81001b3c l     F .text	00000052 write_globals
81001b8e l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 getreent.c
00000000 l    df *ABS*	00000000 impure.c
81007180 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81002832 l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100337d l       .text	00000000 L20
81003334 l       .text	00000000 L5
8100337a l       .text	00000000 L15
81003340 l       .text	00000000 L8
81003361 l       .text	00000000 L9
81003370 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
810033cf l       .text	00000000 L4
810033c1 l       .text	00000000 BYTECMP
810033bc l       .text	00000000 L5
810033c3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
810081e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81003590 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
81004157 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
8100458b l       .text	00000000 L25
81004532 l       .text	00000000 L5
8100457e l       .text	00000000 L14
81004584 l       .text	00000000 L19
81004543 l       .text	00000000 L10
81004570 l       .text	00000000 L9
81004573 l       .text	00000000 L15
810045be l       .text	00000000 L26
810045c1 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
810046c6 l       .text	00000000 L5
810046fe l       .text	00000000 L15
810046d0 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
8100480c l     F .text	0000000a __locale_ctype_ptr_l
81004816 l     F .text	0000000a __get_global_locale
81004820 l     F .text	0000000a __get_current_locale
8100482a l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
810081ec l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fputwc.c
8100511f l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810079d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 locale.c
810058bc l     F .text	0000000a __get_global_locale
810058c6 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
81005b28 l     F .text	0000000a __get_global_locale
81005b32 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 putc.c
81005c4d l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810068eb l     F .text	0000000a __get_global_locale
810068f5 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810069f5 l     F .text	0000000a __get_global_locale
810069ff l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
810081f8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
810081fc l     O .bss	00000004 __env_recursive_mutex
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81006abf g     F .text	00000040 _isatty_r
81006671 g     F .text	00000037 cleanup_glue
81004065 g     F .text	000000d6 _puts_r
81005962 g     F .text	00000046 _lseek_r
8100077e g     F .text	0000001b yield
810047f2 g     F .text	0000001a strtok_r
81004030 g     F .text	00000035 printf
810068ff g     F .text	00000077 _wcrtomb_r
8100446e g     F .text	0000004a __sseek
810011b3 g     F .text	00000099 __sinit
81004a6f g     F .text	00000112 __swbuf_r
810058d0 g     F .text	0000005f _setlocale_r
81000fbc g     F .text	0000006f __sfmoreglue
810034ae g     F .text	00000006 __malloc_unlock
81005bc0 g       .text	00000000 memmove
810026ea g     F .text	00000049 getopt_long
81001199 g     F .text	0000001a _cleanup
81004732 g     F .text	000000c0 __strtok_r
81004e98 g     F .text	0000000a __errno
81005792 g     F .text	00000020 getenv
81006a7c g     F .text	00000043 _fstat_r
810081f4 g     O .bss	00000004 errno
81004409 g     F .text	0000000a __seofread
81000751 g     F .text	0000002d execve
810006f3 g     F .text	0000001b getpid
81000e9f g     F .text	0000001f fgets
810033d8 g       .text	00000000 memcpy
81001178 g     F .text	00000021 _cleanup_r
8100413b g     F .text	0000001c puts
810027f9 g     F .text	0000001c malloc
81004003 g     F .text	0000002d _printf_r
81000868 g     F .text	00000021 isatty
810027ef g     F .text	0000000a __getreent
81008174 g     O .bss	00000004 optarg
810081a0 g     O .bss	00000004 __malloc_top_pad
81007b60 g       .bss	00000000 __bss_start__
810052d4 g     F .text	0000049e __sfvwrite_r
81004385 g     F .text	00000040 _sbrk_r
81007164 g     O .data	00000004 opterr
8100099d g     F .text	00000040 readdir
81005d51 g     F .text	00000046 _read_r
81004ea2 g     F .text	00000107 _fclose_r
81000d08 g     F .text	00000039 fflush
810081a4 g     O .bss	00000004 __malloc_max_sbrked_mem
8100083b g     F .text	0000002d lseek
81006dec g     O .rodata	00000004 _global_impure_ptr
81005d97 g     F .text	000008da _realloc_r
81004a21 g     F .text	00000025 strtol_l
81005235 g     F .text	00000057 _fputwc_r
81001278 g     F .text	00000024 __fp_lock_all
81004a46 g     F .text	00000029 strtol
810066a8 g     F .text	00000160 _reclaim_reent
81004fc6 g     F .text	00000046 _fputc_r
810007ed g     F .text	0000002d write
81005cb3 g     F .text	0000004b _putc_r
81007b4c g     O .data	00000004 environ
81000889 g     F .text	00000027 fstat
810012e9 g     F .text	0000002c fprintf
810027c8 g     F .text	00000027 __getopt_long_only_r
81000a2c g     F .text	0000001a _atoi_r
8100067d g     F .text	0000004c sys_call
810035f6 g     F .text	000000a8 __sfputs_r
81008178 g     O .bss	00000004 optind
8100124c g     F .text	00000006 __sfp_lock_acquire
810032f0 g       .text	00000000 memchr
81008200 g       .bss	00000000 __bss_end__
81001315 g     F .text	000003db _free_r
81000914 g     F .text	00000021 wait
81006ec0 g     O .rodata	00000180 _ctype_b
8100592f g     F .text	00000014 __locale_mb_cur_max
81004d43 g     F .text	00000115 __call_exitprocs
810079cc g     O .data	00000004 __malloc_sbrk_base
8100062f g       .text	00000000 _start
810007c0 g     F .text	0000002d read
81006808 g     F .text	000000e3 strncmp
810027a1 g     F .text	00000027 __getopt_long_r
810081c0 g     O .bss	00000028 __malloc_current_mallinfo
81004003 g     F .text	0000002d _iprintf_r
81004e58 g     F .text	00000040 _close_r
81004709 g     F .text	00000029 strtok
81003385 g       .text	00000000 memcmp
81001924 g     F .text	000000b8 _fwrite_r
81000736 g     F .text	0000001b fork
81004be8 g     F .text	0000015b __swsetup_r
8100102b g     F .text	0000014d __sfp
810075c0 g     O .data	00000408 __malloc_av_
8100125e g     F .text	00000006 __sinit_lock_release
810043c5 g     F .text	00000044 __sread
810034a8 g     F .text	00000006 __malloc_lock
810012c0 g     F .text	00000029 _fprintf_r
810008b0 g     F .text	00000021 sbrk
81000cb0 g     F .text	00000058 _fflush_r
8100063f g     F .text	0000003e cstart
810026a3 g     F .text	00000047 getopt
81003420 g       .text	00000000 memset
8100049b g     F .text	00000194 main
810081a8 g     O .bss	00000004 __malloc_max_total_mem
81004b81 g     F .text	00000021 __swbuf
810044b8 g     F .text	00000025 __sclose
81004fa9 g     F .text	0000001d fclose
810049fc g     F .text	00000025 _strtol_r
810057b2 g     F .text	000000ed _findenv_r
81002ac5 g     F .text	00000822 _malloc_r
81006a2d g     F .text	00000043 __ascii_wctomb
81000935 g     F .text	00000068 opendir
810012c0 g     F .text	00000029 _fiprintf_r
81006a76 g     F .text	00000006 __env_unlock
81005772 g     F .text	00000020 _findenv
81001851 g     F .text	00000068 _fwalk
81000d41 g     F .text	0000015e _fgets_r
81005b3c g     F .text	0000002a _mbtowc_r
81005cfe g     F .text	00000053 putc
81002733 g     F .text	00000049 getopt_long_only
810016f0 g     F .text	00000161 _malloc_trim_r
810045dc g     F .text	000000a5 strcmp
8100369e g     F .text	00000025 vfiprintf
810008d1 g     F .text	00000021 dup
81004030 g     F .text	00000035 iprintf
810081f0 g     O .bss	00000004 _PathLocale
81004ba2 g     F .text	00000046 _write_r
81005943 g     F .text	0000001f setlocale
81003a19 g     F .text	0000019b _printf_common
810075a4 g     O .data	00000004 _impure_ptr
81000a8a g     F .text	00000226 __sflush_r
81004184 g     F .text	00000201 __srefill_r
81005b66 g     F .text	00000058 __ascii_mbtowc
8100129c g     F .text	00000024 __fp_unlock_all
8100500c g     F .text	0000004e fputc
8100070e g     F .text	00000028 print_msg
81007168 g     O .data	00000004 optopt
81005a95 g     F .text	00000093 __swhatbuf_r
810019dc g     F .text	00000025 fwrite
81005185 g     F .text	000000b0 __fputwc
8100505a g     F .text	000000a6 _fputs_r
81004413 g     F .text	0000005b __swrite
810079c8 g     O .data	00000004 __malloc_trim_threshold
81000a46 g     F .text	00000044 exit
810012e9 g     F .text	0000002c fiprintf
810036c3 g     F .text	00000356 _vfiprintf_r
810018b9 g     F .text	0000006b _fwalk_reent
81001252 g     F .text	00000006 __sfp_lock_release
81000a12 g     F .text	0000001a atoi
81007040 g     O .rodata	00000101 _ctype_
8100277c g     F .text	00000025 __getopt_r
810008f2 g     F .text	00000022 _exit
810059a8 g     F .text	000000ed __smakebuf_r
81004690 g       .text	00000000 strlen
81003bb4 g     F .text	0000044f _printf_i
81000799 g     F .text	00000027 open
810034b4 g     F .text	000000dc __sprint_r
810044e0 g       .text	00000000 strchr
81005100 g     F .text	0000001f fputs
810009dd g     F .text	00000035 closedir
81006a09 g     F .text	00000024 _wctomb_r
81006a70 g     F .text	00000006 __env_lock
810036c3 g     F .text	00000356 _vfprintf_r
810006c9 g     F .text	0000002a msleep
81006976 g     F .text	0000007f wcrtomb
8100081a g     F .text	00000021 close
810079e0 g     O .data	0000016c __global_locale
8100369e g     F .text	00000025 vfprintf
8100528c g     F .text	00000048 fputwc
81002815 g     F .text	0000001d free
81001258 g     F .text	00000006 __sinit_lock_acquire
8100589f g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <do_help>:
 *
 * @param argc
 * @param arg
 * @return int
 */
static int do_help(int argc, const char **argv) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 18             	sub    $0x18,%esp
  const cli_cmd_t *start = cli.cmd_start;
81000006:	a1 60 81 00 81       	mov    0x81008160,%eax
8100000b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (start < cli.cmd_end) {
8100000e:	eb 21                	jmp    81000031 <do_help+0x31>
    printf("%s\t--> %s\n", start->name, start->usage);
81000010:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000013:	8b 50 04             	mov    0x4(%eax),%edx
81000016:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000019:	8b 00                	mov    (%eax),%eax
8100001b:	83 ec 04             	sub    $0x4,%esp
8100001e:	52                   	push   %edx
8100001f:	50                   	push   %eax
81000020:	68 06 6b 00 81       	push   $0x81006b06
81000025:	e8 06 40 00 00       	call   81004030 <iprintf>
8100002a:	83 c4 10             	add    $0x10,%esp
    start++;
8100002d:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
  while (start < cli.cmd_end) {
81000031:	a1 64 81 00 81       	mov    0x81008164,%eax
81000036:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000039:	72 d5                	jb     81000010 <do_help+0x10>
  }

  return 0;
8100003b:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000040:	c9                   	leave  
81000041:	c3                   	ret    

81000042 <do_clear>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_clear(int argc, const char **argv) {
81000042:	55                   	push   %ebp
81000043:	89 e5                	mov    %esp,%ebp
81000045:	83 ec 08             	sub    $0x8,%esp
  printf("%s", ESC_CLEAR_SCREEN);
81000048:	83 ec 08             	sub    $0x8,%esp
8100004b:	68 11 6b 00 81       	push   $0x81006b11
81000050:	68 16 6b 00 81       	push   $0x81006b16
81000055:	e8 d6 3f 00 00       	call   81004030 <iprintf>
8100005a:	83 c4 10             	add    $0x10,%esp
  printf("%s", ESC_MOVE_CURSOR(0, 0));
8100005d:	83 ec 08             	sub    $0x8,%esp
81000060:	68 19 6b 00 81       	push   $0x81006b19
81000065:	68 16 6b 00 81       	push   $0x81006b16
8100006a:	e8 c1 3f 00 00       	call   81004030 <iprintf>
8100006f:	83 c4 10             	add    $0x10,%esp
  return 0;
81000072:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000077:	c9                   	leave  
81000078:	c3                   	ret    

81000079 <do_echo>:
 *
 * @param argc
 * @param argv
 * @return int
 */
static int do_echo(int argc, const char **argv) {
81000079:	55                   	push   %ebp
8100007a:	89 e5                	mov    %esp,%ebp
8100007c:	53                   	push   %ebx
8100007d:	81 ec 94 00 00 00    	sub    $0x94,%esp
  if (argc ==
81000083:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
81000087:	75 40                	jne    810000c9 <do_echo+0x50>
      1) {  // 没有指定任何参数只输入了 echo，则等待用户输入信息以进行回显
    char msg_buf[128];
    fgets(msg_buf, sizeof(msg_buf), stdin);
81000089:	e8 61 27 00 00       	call   810027ef <__getreent>
8100008e:	8b 40 04             	mov    0x4(%eax),%eax
81000091:	83 ec 04             	sub    $0x4,%esp
81000094:	50                   	push   %eax
81000095:	68 80 00 00 00       	push   $0x80
8100009a:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000a0:	50                   	push   %eax
810000a1:	e8 f9 0d 00 00       	call   81000e9f <fgets>
810000a6:	83 c4 10             	add    $0x10,%esp
    msg_buf[sizeof(msg_buf) - 1] = '\0';
810000a9:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
    puts(msg_buf);
810000ad:	83 ec 0c             	sub    $0xc,%esp
810000b0:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000b6:	50                   	push   %eax
810000b7:	e8 7f 40 00 00       	call   8100413b <puts>
810000bc:	83 c4 10             	add    $0x10,%esp
    return 0;
810000bf:	b8 00 00 00 00       	mov    $0x0,%eax
810000c4:	e9 6d 01 00 00       	jmp    81000236 <do_echo+0x1bd>
  }

  optind = 1;  // getopt每次查找都从optind处开始
810000c9:	c7 05 78 81 00 81 01 	movl   $0x1,0x81008178
810000d0:	00 00 00 
  int count = 1;
810000d3:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  int ch;
  // getopt函数解析参数列表，n:表示查找-n选项，且必须紧跟着参数，
  // h表示查找-h选项，且不需要跟参数
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
810000da:	e9 a4 00 00 00       	jmp    81000183 <do_echo+0x10a>
    switch (ch) {
810000df:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e3:	74 54                	je     81000139 <do_echo+0xc0>
810000e5:	83 7d ec 6e          	cmpl   $0x6e,-0x14(%ebp)
810000e9:	0f 8f 93 00 00 00    	jg     81000182 <do_echo+0x109>
810000ef:	83 7d ec 3f          	cmpl   $0x3f,-0x14(%ebp)
810000f3:	74 5a                	je     8100014f <do_echo+0xd6>
810000f5:	83 7d ec 68          	cmpl   $0x68,-0x14(%ebp)
810000f9:	0f 85 83 00 00 00    	jne    81000182 <do_echo+0x109>
      case 'h':
        puts("help:");
810000ff:	83 ec 0c             	sub    $0xc,%esp
81000102:	68 20 6b 00 81       	push   $0x81006b20
81000107:	e8 2f 40 00 00       	call   8100413b <puts>
8100010c:	83 c4 10             	add    $0x10,%esp
        puts("\techo any message");
8100010f:	83 ec 0c             	sub    $0xc,%esp
81000112:	68 26 6b 00 81       	push   $0x81006b26
81000117:	e8 1f 40 00 00       	call   8100413b <puts>
8100011c:	83 c4 10             	add    $0x10,%esp
        puts("\tUsage: echo [-n count] message");
8100011f:	83 ec 0c             	sub    $0xc,%esp
81000122:	68 38 6b 00 81       	push   $0x81006b38
81000127:	e8 0f 40 00 00       	call   8100413b <puts>
8100012c:	83 c4 10             	add    $0x10,%esp
        return 0;
8100012f:	b8 00 00 00 00       	mov    $0x0,%eax
81000134:	e9 fd 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      case 'n':
        count = atoi(optarg);  // optarg为newlib库自己声明的
81000139:	a1 74 81 00 81       	mov    0x81008174,%eax
8100013e:	83 ec 0c             	sub    $0xc,%esp
81000141:	50                   	push   %eax
81000142:	e8 cb 08 00 00       	call   81000a12 <atoi>
81000147:	83 c4 10             	add    $0x10,%esp
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)
        break;
8100014d:	eb 34                	jmp    81000183 <do_echo+0x10a>
      case '?':  // 找到未指定选项
        if (optarg) {
8100014f:	a1 74 81 00 81       	mov    0x81008174,%eax
81000154:	85 c0                	test   %eax,%eax
81000156:	74 20                	je     81000178 <do_echo+0xff>
          fprintf(stderr,
81000158:	8b 1d 74 81 00 81    	mov    0x81008174,%ebx
8100015e:	e8 8c 26 00 00       	call   810027ef <__getreent>
81000163:	8b 40 0c             	mov    0xc(%eax),%eax
81000166:	83 ec 04             	sub    $0x4,%esp
81000169:	53                   	push   %ebx
8100016a:	68 58 6b 00 81       	push   $0x81006b58
8100016f:	50                   	push   %eax
81000170:	e8 74 11 00 00       	call   810012e9 <fiprintf>
81000175:	83 c4 10             	add    $0x10,%esp
                  ESC_COLOR_ERROR "unknown option: -%s\n" ESC_COLOR_DEFAULT,
                  optarg);
        }
        return -1;
81000178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100017d:	e9 b4 00 00 00       	jmp    81000236 <do_echo+0x1bd>
      default:
        break;
81000182:	90                   	nop
  while ((ch = getopt(argc, (char *const *)argv, "n:h")) != -1) {
81000183:	83 ec 04             	sub    $0x4,%esp
81000186:	68 77 6b 00 81       	push   $0x81006b77
8100018b:	ff 75 0c             	push   0xc(%ebp)
8100018e:	ff 75 08             	push   0x8(%ebp)
81000191:	e8 0d 25 00 00       	call   810026a3 <getopt>
81000196:	83 c4 10             	add    $0x10,%esp
81000199:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100019c:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001a0:	0f 85 39 ff ff ff    	jne    810000df <do_echo+0x66>
    }
  }

    if (count == 0) {
810001a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810001aa:	75 21                	jne    810001cd <do_echo+0x154>
    fprintf(stderr, ESC_COLOR_ERROR
810001ac:	e8 3e 26 00 00       	call   810027ef <__getreent>
810001b1:	8b 40 0c             	mov    0xc(%eax),%eax
810001b4:	50                   	push   %eax
810001b5:	6a 32                	push   $0x32
810001b7:	6a 01                	push   $0x1
810001b9:	68 7c 6b 00 81       	push   $0x81006b7c
810001be:	e8 19 18 00 00       	call   810019dc <fwrite>
810001c3:	83 c4 10             	add    $0x10,%esp
            "echo: argument required for option '-n'\n" ESC_COLOR_DEFAULT);
    return -1;
810001c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001cb:	eb 69                	jmp    81000236 <do_echo+0x1bd>
    }
  if (optind >
810001cd:	a1 78 81 00 81       	mov    0x81008178,%eax
810001d2:	39 45 08             	cmp    %eax,0x8(%ebp)
810001d5:	7f 21                	jg     810001f8 <do_echo+0x17f>
      argc - 1) {  // argc - 1
                   // 为message的索引，optind>argc-1表示此次调用未携带message
    fprintf(stderr, ESC_COLOR_ERROR "message is empty\n" ESC_COLOR_DEFAULT);
810001d7:	e8 13 26 00 00       	call   810027ef <__getreent>
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 1b                	push   $0x1b
810001e2:	6a 01                	push   $0x1
810001e4:	68 af 6b 00 81       	push   $0x81006baf
810001e9:	e8 ee 17 00 00       	call   810019dc <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
    return -1;
810001f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001f6:	eb 3e                	jmp    81000236 <do_echo+0x1bd>
  }
  

  const char *msg = argv[optind];
810001f8:	a1 78 81 00 81       	mov    0x81008178,%eax
810001fd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000204:	8b 45 0c             	mov    0xc(%ebp),%eax
81000207:	01 d0                	add    %edx,%eax
81000209:	8b 00                	mov    (%eax),%eax
8100020b:	89 45 e8             	mov    %eax,-0x18(%ebp)
  for (int i = 0; i < count; ++i) {
8100020e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000215:	eb 12                	jmp    81000229 <do_echo+0x1b0>
    puts(msg);
81000217:	83 ec 0c             	sub    $0xc,%esp
8100021a:	ff 75 e8             	push   -0x18(%ebp)
8100021d:	e8 19 3f 00 00       	call   8100413b <puts>
81000222:	83 c4 10             	add    $0x10,%esp
  for (int i = 0; i < count; ++i) {
81000225:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000229:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100022c:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100022f:	7c e6                	jl     81000217 <do_echo+0x19e>
  }
  return 0;
81000231:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000239:	c9                   	leave  
8100023a:	c3                   	ret    

8100023b <do_exit>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_exit(int argc, const char ** argv) {
8100023b:	55                   	push   %ebp
8100023c:	89 e5                	mov    %esp,%ebp
8100023e:	83 ec 08             	sub    $0x8,%esp
  exit(0);
81000241:	83 ec 0c             	sub    $0xc,%esp
81000244:	6a 00                	push   $0x0
81000246:	e8 fb 07 00 00       	call   81000a46 <exit>

8100024b <do_ls>:
 * 
 * @param argc 
 * @param argv 
 * @return int 
 */
static int do_ls(int argc, const char **argv) {
8100024b:	55                   	push   %ebp
8100024c:	89 e5                	mov    %esp,%ebp
8100024e:	83 ec 18             	sub    $0x18,%esp
  DIR *p_dir = opendir("temp");
81000251:	83 ec 0c             	sub    $0xc,%esp
81000254:	68 cb 6b 00 81       	push   $0x81006bcb
81000259:	e8 d7 06 00 00       	call   81000935 <opendir>
8100025e:	83 c4 10             	add    $0x10,%esp
81000261:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (p_dir == NULL) {
81000264:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000268:	75 4a                	jne    810002b4 <do_ls+0x69>
    printf("open dir failed.\n");
8100026a:	83 ec 0c             	sub    $0xc,%esp
8100026d:	68 d0 6b 00 81       	push   $0x81006bd0
81000272:	e8 c4 3e 00 00       	call   8100413b <puts>
81000277:	83 c4 10             	add    $0x10,%esp
    return -1;
8100027a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100027f:	eb 5d                	jmp    810002de <do_ls+0x93>
  }

  struct dirent *entry;
  while ((entry = readdir(p_dir)) != NULL) {
    printf("%c %s %d\n", 
81000281:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000284:	8b 40 18             	mov    0x18(%eax),%eax
            entry->type == FILE_DIR ? 'd' : 'f',
            entry->name,
81000287:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100028a:	8d 4a 08             	lea    0x8(%edx),%ecx
            entry->type == FILE_DIR ? 'd' : 'f',
8100028d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000290:	8b 52 04             	mov    0x4(%edx),%edx
    printf("%c %s %d\n", 
81000293:	83 fa 02             	cmp    $0x2,%edx
81000296:	75 07                	jne    8100029f <do_ls+0x54>
81000298:	ba 64 00 00 00       	mov    $0x64,%edx
8100029d:	eb 05                	jmp    810002a4 <do_ls+0x59>
8100029f:	ba 66 00 00 00       	mov    $0x66,%edx
810002a4:	50                   	push   %eax
810002a5:	51                   	push   %ecx
810002a6:	52                   	push   %edx
810002a7:	68 e1 6b 00 81       	push   $0x81006be1
810002ac:	e8 7f 3d 00 00       	call   81004030 <iprintf>
810002b1:	83 c4 10             	add    $0x10,%esp
  while ((entry = readdir(p_dir)) != NULL) {
810002b4:	83 ec 0c             	sub    $0xc,%esp
810002b7:	ff 75 f4             	push   -0xc(%ebp)
810002ba:	e8 de 06 00 00       	call   8100099d <readdir>
810002bf:	83 c4 10             	add    $0x10,%esp
810002c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810002c5:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810002c9:	75 b6                	jne    81000281 <do_ls+0x36>
            entry->size
          );
  }
  closedir(p_dir);
810002cb:	83 ec 0c             	sub    $0xc,%esp
810002ce:	ff 75 f4             	push   -0xc(%ebp)
810002d1:	e8 07 07 00 00       	call   810009dd <closedir>
810002d6:	83 c4 10             	add    $0x10,%esp
  return 0;
810002d9:	b8 00 00 00 00       	mov    $0x0,%eax
}
810002de:	c9                   	leave  
810002df:	c3                   	ret    

810002e0 <cli_init>:

/**
 * @brief 初始化终端结构
 *
 */
static void cli_init() {
810002e0:	55                   	push   %ebp
810002e1:	89 e5                	mov    %esp,%ebp
810002e3:	83 ec 08             	sub    $0x8,%esp
  cli.prompt = prompt;
810002e6:	a1 60 71 00 81       	mov    0x81007160,%eax
810002eb:	a3 68 81 00 81       	mov    %eax,0x81008168
  memset(cli.curr_input, 0, CLI_INPUT_SIZE);
810002f0:	83 ec 04             	sub    $0x4,%esp
810002f3:	68 00 04 00 00       	push   $0x400
810002f8:	6a 00                	push   $0x0
810002fa:	68 60 7d 00 81       	push   $0x81007d60
810002ff:	e8 1c 31 00 00       	call   81003420 <memset>
81000304:	83 c4 10             	add    $0x10,%esp
  cli.cmd_start = cmd_list;
81000307:	c7 05 60 81 00 81 a0 	movl   $0x81006ca0,0x81008160
8100030e:	6c 00 81 
  cli.cmd_end = cmd_list + sizeof(cmd_list) / sizeof(cmd_list[0]);
81000311:	b8 dc 6c 00 81       	mov    $0x81006cdc,%eax
81000316:	a3 64 81 00 81       	mov    %eax,0x81008164
}
8100031b:	90                   	nop
8100031c:	c9                   	leave  
8100031d:	c3                   	ret    

8100031e <show_prompt>:

/**
 * @brief 打印终端每行固定的提示符
 *
 */
static void show_prompt(void) {
8100031e:	55                   	push   %ebp
8100031f:	89 e5                	mov    %esp,%ebp
81000321:	83 ec 08             	sub    $0x8,%esp
  printf("%s", cli.prompt);
81000324:	a1 68 81 00 81       	mov    0x81008168,%eax
81000329:	83 ec 08             	sub    $0x8,%esp
8100032c:	50                   	push   %eax
8100032d:	68 16 6b 00 81       	push   $0x81006b16
81000332:	e8 f9 3c 00 00       	call   81004030 <iprintf>
81000337:	83 c4 10             	add    $0x10,%esp
  fflush(stdout);
8100033a:	e8 b0 24 00 00       	call   810027ef <__getreent>
8100033f:	8b 40 08             	mov    0x8(%eax),%eax
81000342:	83 ec 0c             	sub    $0xc,%esp
81000345:	50                   	push   %eax
81000346:	e8 bd 09 00 00       	call   81000d08 <fflush>
8100034b:	83 c4 10             	add    $0x10,%esp
}
8100034e:	90                   	nop
8100034f:	c9                   	leave  
81000350:	c3                   	ret    

81000351 <find_builtin>:
 * @brief 根据命令程序名称查找并返回对应的命令结构
 *
 * @param name
 * @return const cli_cmd_t*
 */
static const cli_cmd_t *find_builtin(const char *name) {
81000351:	55                   	push   %ebp
81000352:	89 e5                	mov    %esp,%ebp
81000354:	83 ec 18             	sub    $0x18,%esp
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
81000357:	a1 60 81 00 81       	mov    0x81008160,%eax
8100035c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100035f:	eb 22                	jmp    81000383 <find_builtin+0x32>
    if (strcmp(cmd->name, name) != 0) {
81000361:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000364:	8b 00                	mov    (%eax),%eax
81000366:	83 ec 08             	sub    $0x8,%esp
81000369:	ff 75 08             	push   0x8(%ebp)
8100036c:	50                   	push   %eax
8100036d:	e8 6a 42 00 00       	call   810045dc <strcmp>
81000372:	83 c4 10             	add    $0x10,%esp
81000375:	85 c0                	test   %eax,%eax
81000377:	75 05                	jne    8100037e <find_builtin+0x2d>
      continue;
    }
    return cmd;
81000379:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100037c:	eb 14                	jmp    81000392 <find_builtin+0x41>
      continue;
8100037e:	90                   	nop
  for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; ++cmd) {
8100037f:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000383:	a1 64 81 00 81       	mov    0x81008164,%eax
81000388:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100038b:	72 d4                	jb     81000361 <find_builtin+0x10>
  }

  return (const cli_cmd_t *)0;
8100038d:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000392:	c9                   	leave  
81000393:	c3                   	ret    

81000394 <run_builtin>:
 *
 * @param cmd
 * @param argc
 * @param argv
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, const char **argv) {
81000394:	55                   	push   %ebp
81000395:	89 e5                	mov    %esp,%ebp
81000397:	53                   	push   %ebx
81000398:	83 ec 14             	sub    $0x14,%esp
  int ret = cmd->do_func(argc, argv);
8100039b:	8b 45 08             	mov    0x8(%ebp),%eax
8100039e:	8b 40 08             	mov    0x8(%eax),%eax
810003a1:	83 ec 08             	sub    $0x8,%esp
810003a4:	ff 75 10             	push   0x10(%ebp)
810003a7:	ff 75 0c             	push   0xc(%ebp)
810003aa:	ff d0                	call   *%eax
810003ac:	83 c4 10             	add    $0x10,%esp
810003af:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (ret < 0) {
810003b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810003b6:	79 1f                	jns    810003d7 <run_builtin+0x43>
    fprintf(stderr, ESC_COLOR_ERROR"%s error: %d\n"ESC_COLOR_DEFAULT, cmd->name, ret);
810003b8:	8b 45 08             	mov    0x8(%ebp),%eax
810003bb:	8b 18                	mov    (%eax),%ebx
810003bd:	e8 2d 24 00 00       	call   810027ef <__getreent>
810003c2:	8b 40 0c             	mov    0xc(%eax),%eax
810003c5:	ff 75 f4             	push   -0xc(%ebp)
810003c8:	53                   	push   %ebx
810003c9:	68 dc 6c 00 81       	push   $0x81006cdc
810003ce:	50                   	push   %eax
810003cf:	e8 15 0f 00 00       	call   810012e9 <fiprintf>
810003d4:	83 c4 10             	add    $0x10,%esp
  }
}
810003d7:	90                   	nop
810003d8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810003db:	c9                   	leave  
810003dc:	c3                   	ret    

810003dd <run_exec_file>:
 * 
 * @param path 程序路径
 * @param argc 参数个数
 * @param argv 参数列表
 */
static void run_exec_file(const char *path, int argc, const char **argv) {
810003dd:	55                   	push   %ebp
810003de:	89 e5                	mov    %esp,%ebp
810003e0:	53                   	push   %ebx
810003e1:	83 ec 14             	sub    $0x14,%esp
  //1.创建子进程
  int pid = fork();
810003e4:	e8 4d 03 00 00       	call   81000736 <fork>
810003e9:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pid < 0) {
810003ec:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810003f0:	79 21                	jns    81000413 <run_exec_file+0x36>
    fprintf(stderr, ESC_COLOR_ERROR"fork failed: %s"ESC_COLOR_DEFAULT, path);
810003f2:	e8 f8 23 00 00       	call   810027ef <__getreent>
810003f7:	8b 40 0c             	mov    0xc(%eax),%eax
810003fa:	83 ec 04             	sub    $0x4,%esp
810003fd:	ff 75 08             	push   0x8(%ebp)
81000400:	68 f4 6c 00 81       	push   $0x81006cf4
81000405:	50                   	push   %eax
81000406:	e8 de 0e 00 00       	call   810012e9 <fiprintf>
8100040b:	83 c4 10             	add    $0x10,%esp
    int status;
    //3.父进程等待任意子进程结束，并回收其资源
    int cpid = wait(&status);
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
  }
}
8100040e:	e9 82 00 00 00       	jmp    81000495 <run_exec_file+0xb8>
  } else if (pid == 0) {
81000413:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000417:	75 44                	jne    8100045d <run_exec_file+0x80>
    for (int i = 0; i < argc; ++i) {
81000419:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81000420:	eb 29                	jmp    8100044b <run_exec_file+0x6e>
      printf("arg %d = %s\n", i, argv[i]);
81000422:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000425:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100042c:	8b 45 10             	mov    0x10(%ebp),%eax
8100042f:	01 d0                	add    %edx,%eax
81000431:	8b 00                	mov    (%eax),%eax
81000433:	83 ec 04             	sub    $0x4,%esp
81000436:	50                   	push   %eax
81000437:	ff 75 f4             	push   -0xc(%ebp)
8100043a:	68 0e 6d 00 81       	push   $0x81006d0e
8100043f:	e8 ec 3b 00 00       	call   81004030 <iprintf>
81000444:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; ++i) {
81000447:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100044b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100044e:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000451:	7c cf                	jl     81000422 <run_exec_file+0x45>
    exit(-1);
81000453:	83 ec 0c             	sub    $0xc,%esp
81000456:	6a ff                	push   $0xffffffff
81000458:	e8 e9 05 00 00       	call   81000a46 <exit>
    int cpid = wait(&status);
8100045d:	83 ec 0c             	sub    $0xc,%esp
81000460:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000463:	50                   	push   %eax
81000464:	e8 ab 04 00 00       	call   81000914 <wait>
81000469:	83 c4 10             	add    $0x10,%esp
8100046c:	89 45 ec             	mov    %eax,-0x14(%ebp)
    fprintf(stderr, "cmd %s result: %d, pid=%d, cpid=%d\n", path, status, pid, cpid);
8100046f:	8b 5d e8             	mov    -0x18(%ebp),%ebx
81000472:	e8 78 23 00 00       	call   810027ef <__getreent>
81000477:	8b 40 0c             	mov    0xc(%eax),%eax
8100047a:	83 ec 08             	sub    $0x8,%esp
8100047d:	ff 75 ec             	push   -0x14(%ebp)
81000480:	ff 75 f0             	push   -0x10(%ebp)
81000483:	53                   	push   %ebx
81000484:	ff 75 08             	push   0x8(%ebp)
81000487:	68 1c 6d 00 81       	push   $0x81006d1c
8100048c:	50                   	push   %eax
8100048d:	e8 57 0e 00 00       	call   810012e9 <fiprintf>
81000492:	83 c4 20             	add    $0x20,%esp
}
81000495:	90                   	nop
81000496:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000499:	c9                   	leave  
8100049a:	c3                   	ret    

8100049b <main>:

int main(int argc, char **argv) {
8100049b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
8100049f:	83 e4 f0             	and    $0xfffffff0,%esp
810004a2:	ff 71 fc             	push   -0x4(%ecx)
810004a5:	55                   	push   %ebp
810004a6:	89 e5                	mov    %esp,%ebp
810004a8:	51                   	push   %ecx
810004a9:	83 ec 44             	sub    $0x44,%esp
810004ac:	89 c8                	mov    %ecx,%eax
  // 1.打开shell对应的tty设备绑定为stdin
  open(argv[0], O_RDWR);
810004ae:	8b 40 04             	mov    0x4(%eax),%eax
810004b1:	8b 00                	mov    (%eax),%eax
810004b3:	83 ec 08             	sub    $0x8,%esp
810004b6:	6a 02                	push   $0x2
810004b8:	50                   	push   %eax
810004b9:	e8 db 02 00 00       	call   81000799 <open>
810004be:	83 c4 10             	add    $0x10,%esp
  // 2.复用该0号描述符的文件，打开shell的stdout和stderr
  dup(0);
810004c1:	83 ec 0c             	sub    $0xc,%esp
810004c4:	6a 00                	push   $0x0
810004c6:	e8 06 04 00 00       	call   810008d1 <dup>
810004cb:	83 c4 10             	add    $0x10,%esp
  dup(0);
810004ce:	83 ec 0c             	sub    $0xc,%esp
810004d1:	6a 00                	push   $0x0
810004d3:	e8 f9 03 00 00       	call   810008d1 <dup>
810004d8:	83 c4 10             	add    $0x10,%esp

  // 3.初始化终端结构
  cli_init();
810004db:	e8 00 fe ff ff       	call   810002e0 <cli_init>

  // 4.循环读取命令行输入并执行指令
  for (;;) {
    show_prompt();
810004e0:	e8 39 fe ff ff       	call   8100031e <show_prompt>
    // 4.1获取命令行输入并清空末尾的"\r\n"
    char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
810004e5:	e8 05 23 00 00       	call   810027ef <__getreent>
810004ea:	8b 40 04             	mov    0x4(%eax),%eax
810004ed:	83 ec 04             	sub    $0x4,%esp
810004f0:	50                   	push   %eax
810004f1:	68 00 04 00 00       	push   $0x400
810004f6:	68 60 7d 00 81       	push   $0x81007d60
810004fb:	e8 9f 09 00 00       	call   81000e9f <fgets>
81000500:	83 c4 10             	add    $0x10,%esp
81000503:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (!str) {
81000506:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100050a:	0f 84 13 01 00 00    	je     81000623 <main+0x188>
      continue;
    }
    char *cr = strchr(cli.curr_input, '\n');
81000510:	83 ec 08             	sub    $0x8,%esp
81000513:	6a 0a                	push   $0xa
81000515:	68 60 7d 00 81       	push   $0x81007d60
8100051a:	e8 c1 3f 00 00       	call   810044e0 <strchr>
8100051f:	83 c4 10             	add    $0x10,%esp
81000522:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000525:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81000529:	74 06                	je     81000531 <main+0x96>
      *cr = '\0';
8100052b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100052e:	c6 00 00             	movb   $0x0,(%eax)
    }
    cr = strchr(cli.curr_input, '\r');
81000531:	83 ec 08             	sub    $0x8,%esp
81000534:	6a 0d                	push   $0xd
81000536:	68 60 7d 00 81       	push   $0x81007d60
8100053b:	e8 a0 3f 00 00       	call   810044e0 <strchr>
81000540:	83 c4 10             	add    $0x10,%esp
81000543:	89 45 e8             	mov    %eax,-0x18(%ebp)
    if (cr) {
81000546:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100054a:	74 06                	je     81000552 <main+0xb7>
      *cr = '\0';
8100054c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100054f:	c6 00 00             	movb   $0x0,(%eax)
    }

    // 4.2解析命令行输入的程序和参数
    int argc = 0;
81000552:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    const char *argv[CLI_MAX_ARG_COUNT];
    memset(argv, 0, sizeof(argv));
81000559:	83 ec 04             	sub    $0x4,%esp
8100055c:	6a 28                	push   $0x28
8100055e:	6a 00                	push   $0x0
81000560:	8d 45 b8             	lea    -0x48(%ebp),%eax
81000563:	50                   	push   %eax
81000564:	e8 b7 2e 00 00       	call   81003420 <memset>
81000569:	83 c4 10             	add    $0x10,%esp
    const char *split = " ";
8100056c:	c7 45 e4 40 6d 00 81 	movl   $0x81006d40,-0x1c(%ebp)
    char *token =
        strtok(cli.curr_input,
81000573:	83 ec 08             	sub    $0x8,%esp
81000576:	ff 75 e4             	push   -0x1c(%ebp)
81000579:	68 60 7d 00 81       	push   $0x81007d60
8100057e:	e8 86 41 00 00       	call   81004709 <strtok>
81000583:	83 c4 10             	add    $0x10,%esp
81000586:	89 45 f0             	mov    %eax,-0x10(%ebp)
               split);  // 将字符串中的第一个split字符换成'\0'并放回起始索引
    while (token) {
81000589:	eb 23                	jmp    810005ae <main+0x113>
      argv[argc++] = token;
8100058b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100058e:	8d 50 01             	lea    0x1(%eax),%edx
81000591:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000594:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000597:	89 54 85 b8          	mov    %edx,-0x48(%ebp,%eax,4)
      token = strtok(NULL, split);  // 填空默认从之前找到的位置的下一个位置开始
8100059b:	83 ec 08             	sub    $0x8,%esp
8100059e:	ff 75 e4             	push   -0x1c(%ebp)
810005a1:	6a 00                	push   $0x0
810005a3:	e8 61 41 00 00       	call   81004709 <strtok>
810005a8:	83 c4 10             	add    $0x10,%esp
810005ab:	89 45 f0             	mov    %eax,-0x10(%ebp)
    while (token) {
810005ae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810005b2:	75 d7                	jne    8100058b <main+0xf0>
    }

    if (argc == 0) {
810005b4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005b8:	74 6f                	je     81000629 <main+0x18e>
      continue;
    }

    // 4.3 获取可执行的命令结构，并执行
    const cli_cmd_t *cmd = find_builtin(argv[0]);
810005ba:	8b 45 b8             	mov    -0x48(%ebp),%eax
810005bd:	83 ec 0c             	sub    $0xc,%esp
810005c0:	50                   	push   %eax
810005c1:	e8 8b fd ff ff       	call   81000351 <find_builtin>
810005c6:	83 c4 10             	add    $0x10,%esp
810005c9:	89 45 e0             	mov    %eax,-0x20(%ebp)
    if (cmd) {
810005cc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810005d0:	74 17                	je     810005e9 <main+0x14e>
      run_builtin(cmd, argc, argv);
810005d2:	83 ec 04             	sub    $0x4,%esp
810005d5:	8d 45 b8             	lea    -0x48(%ebp),%eax
810005d8:	50                   	push   %eax
810005d9:	ff 75 f4             	push   -0xc(%ebp)
810005dc:	ff 75 e0             	push   -0x20(%ebp)
810005df:	e8 b0 fd ff ff       	call   81000394 <run_builtin>
810005e4:	83 c4 10             	add    $0x10,%esp
      continue;
810005e7:	eb 41                	jmp    8100062a <main+0x18f>
    }

    //5.获取到的为磁盘上的可执行程序，需要进行加载运行
    run_exec_file("", argc, argv);
810005e9:	83 ec 04             	sub    $0x4,%esp
810005ec:	8d 45 b8             	lea    -0x48(%ebp),%eax
810005ef:	50                   	push   %eax
810005f0:	ff 75 f4             	push   -0xc(%ebp)
810005f3:	68 42 6d 00 81       	push   $0x81006d42
810005f8:	e8 e0 fd ff ff       	call   810003dd <run_exec_file>
810005fd:	83 c4 10             	add    $0x10,%esp

    fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT,
81000600:	e8 ea 21 00 00       	call   810027ef <__getreent>
81000605:	8b 40 0c             	mov    0xc(%eax),%eax
81000608:	83 ec 04             	sub    $0x4,%esp
8100060b:	68 60 7d 00 81       	push   $0x81007d60
81000610:	68 44 6d 00 81       	push   $0x81006d44
81000615:	50                   	push   %eax
81000616:	e8 ce 0c 00 00       	call   810012e9 <fiprintf>
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	e9 bd fe ff ff       	jmp    810004e0 <main+0x45>
      continue;
81000623:	90                   	nop
81000624:	e9 b7 fe ff ff       	jmp    810004e0 <main+0x45>
      continue;
81000629:	90                   	nop
  for (;;) {
8100062a:	e9 b1 fe ff ff       	jmp    810004e0 <main+0x45>

8100062f <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100062f:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000632:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000634:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000636:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000638:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
8100063a:	e9 00 00 00 00       	jmp    8100063f <cstart>

8100063f <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
8100063f:	55                   	push   %ebp
81000640:	89 e5                	mov    %esp,%ebp
81000642:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000645:	c7 45 f4 60 7b 00 81 	movl   $0x81007b60,-0xc(%ebp)
    while (start < __bss_end__) {
8100064c:	eb 0c                	jmp    8100065a <cstart+0x1b>
        *(start++) = 0;
8100064e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000651:	8d 50 01             	lea    0x1(%eax),%edx
81000654:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000657:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8100065a:	81 7d f4 00 82 00 81 	cmpl   $0x81008200,-0xc(%ebp)
81000661:	72 eb                	jb     8100064e <cstart+0xf>
    }
    
    exit(main(argc, argv));
81000663:	83 ec 08             	sub    $0x8,%esp
81000666:	ff 75 0c             	push   0xc(%ebp)
81000669:	ff 75 08             	push   0x8(%ebp)
8100066c:	e8 2a fe ff ff       	call   8100049b <main>
81000671:	83 c4 10             	add    $0x10,%esp
81000674:	83 ec 0c             	sub    $0xc,%esp
81000677:	50                   	push   %eax
81000678:	e8 c9 03 00 00       	call   81000a46 <exit>

8100067d <sys_call>:
#include    "os_cfg.h"
#include    "lib_syscall.h"
#include    <stdlib.h>


int sys_call(syscall_args_t *args) {
8100067d:	55                   	push   %ebp
8100067e:	89 e5                	mov    %esp,%ebp
81000680:	57                   	push   %edi
81000681:	56                   	push   %esi
81000682:	53                   	push   %ebx
81000683:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
81000686:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100068d:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
81000694:	8b 45 08             	mov    0x8(%ebp),%eax
81000697:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
8100069a:	8b 55 08             	mov    0x8(%ebp),%edx
8100069d:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810006a0:	8b 4d 08             	mov    0x8(%ebp),%ecx
810006a3:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810006a6:	8b 5d 08             	mov    0x8(%ebp),%ebx
810006a9:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810006ac:	8b 75 08             	mov    0x8(%ebp),%esi
810006af:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810006b1:	8d 7d e8             	lea    -0x18(%ebp),%edi
810006b4:	50                   	push   %eax
810006b5:	52                   	push   %edx
810006b6:	51                   	push   %ecx
810006b7:	53                   	push   %ebx
810006b8:	56                   	push   %esi
810006b9:	ff 1f                	lcall  *(%edi)
810006bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810006be:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810006c1:	83 c4 10             	add    $0x10,%esp
810006c4:	5b                   	pop    %ebx
810006c5:	5e                   	pop    %esi
810006c6:	5f                   	pop    %edi
810006c7:	5d                   	pop    %ebp
810006c8:	c3                   	ret    

810006c9 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810006c9:	55                   	push   %ebp
810006ca:	89 e5                	mov    %esp,%ebp
810006cc:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810006cf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810006d3:	7e 1b                	jle    810006f0 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810006d5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810006dc:	8b 45 08             	mov    0x8(%ebp),%eax
810006df:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
810006e2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810006e5:	50                   	push   %eax
810006e6:	e8 92 ff ff ff       	call   8100067d <sys_call>
810006eb:	83 c4 04             	add    $0x4,%esp
810006ee:	eb 01                	jmp    810006f1 <msleep+0x28>
    if (ms <= 0) return;
810006f0:	90                   	nop

}
810006f1:	c9                   	leave  
810006f2:	c3                   	ret    

810006f3 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
810006f3:	55                   	push   %ebp
810006f4:	89 e5                	mov    %esp,%ebp
810006f6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
810006f9:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000700:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000703:	50                   	push   %eax
81000704:	e8 74 ff ff ff       	call   8100067d <sys_call>
81000709:	83 c4 04             	add    $0x4,%esp
}
8100070c:	c9                   	leave  
8100070d:	c3                   	ret    

8100070e <print_msg>:

void print_msg(const char *fmt, int arg) {
8100070e:	55                   	push   %ebp
8100070f:	89 e5                	mov    %esp,%ebp
81000711:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000714:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100071b:	8b 45 08             	mov    0x8(%ebp),%eax
8100071e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000721:	8b 45 0c             	mov    0xc(%ebp),%eax
81000724:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000727:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100072a:	50                   	push   %eax
8100072b:	e8 4d ff ff ff       	call   8100067d <sys_call>
81000730:	83 c4 04             	add    $0x4,%esp
}
81000733:	90                   	nop
81000734:	c9                   	leave  
81000735:	c3                   	ret    

81000736 <fork>:

int fork (void) {
81000736:	55                   	push   %ebp
81000737:	89 e5                	mov    %esp,%ebp
81000739:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8100073c:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000743:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000746:	50                   	push   %eax
81000747:	e8 31 ff ff ff       	call   8100067d <sys_call>
8100074c:	83 c4 04             	add    $0x4,%esp
}
8100074f:	c9                   	leave  
81000750:	c3                   	ret    

81000751 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000751:	55                   	push   %ebp
81000752:	89 e5                	mov    %esp,%ebp
81000754:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000757:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100075e:	8b 45 08             	mov    0x8(%ebp),%eax
81000761:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000764:	8b 45 0c             	mov    0xc(%ebp),%eax
81000767:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8100076a:	8b 45 10             	mov    0x10(%ebp),%eax
8100076d:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000770:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000773:	50                   	push   %eax
81000774:	e8 04 ff ff ff       	call   8100067d <sys_call>
81000779:	83 c4 04             	add    $0x4,%esp
}
8100077c:	c9                   	leave  
8100077d:	c3                   	ret    

8100077e <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8100077e:	55                   	push   %ebp
8100077f:	89 e5                	mov    %esp,%ebp
81000781:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000784:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
8100078b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100078e:	50                   	push   %eax
8100078f:	e8 e9 fe ff ff       	call   8100067d <sys_call>
81000794:	83 c4 04             	add    $0x4,%esp
}
81000797:	c9                   	leave  
81000798:	c3                   	ret    

81000799 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
81000799:	55                   	push   %ebp
8100079a:	89 e5                	mov    %esp,%ebp
8100079c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
8100079f:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810007a6:	8b 45 08             	mov    0x8(%ebp),%eax
810007a9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810007ac:	8b 45 0c             	mov    0xc(%ebp),%eax
810007af:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810007b2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007b5:	50                   	push   %eax
810007b6:	e8 c2 fe ff ff       	call   8100067d <sys_call>
810007bb:	83 c4 04             	add    $0x4,%esp
}
810007be:	c9                   	leave  
810007bf:	c3                   	ret    

810007c0 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810007c0:	55                   	push   %ebp
810007c1:	89 e5                	mov    %esp,%ebp
810007c3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810007c6:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810007cd:	8b 45 08             	mov    0x8(%ebp),%eax
810007d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810007d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810007d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810007d9:	8b 45 10             	mov    0x10(%ebp),%eax
810007dc:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810007df:	8d 45 ec             	lea    -0x14(%ebp),%eax
810007e2:	50                   	push   %eax
810007e3:	e8 95 fe ff ff       	call   8100067d <sys_call>
810007e8:	83 c4 04             	add    $0x4,%esp
}
810007eb:	c9                   	leave  
810007ec:	c3                   	ret    

810007ed <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
810007ed:	55                   	push   %ebp
810007ee:	89 e5                	mov    %esp,%ebp
810007f0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
810007f3:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
810007fa:	8b 45 08             	mov    0x8(%ebp),%eax
810007fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000800:	8b 45 0c             	mov    0xc(%ebp),%eax
81000803:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000806:	8b 45 10             	mov    0x10(%ebp),%eax
81000809:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100080c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100080f:	50                   	push   %eax
81000810:	e8 68 fe ff ff       	call   8100067d <sys_call>
81000815:	83 c4 04             	add    $0x4,%esp
}
81000818:	c9                   	leave  
81000819:	c3                   	ret    

8100081a <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
8100081a:	55                   	push   %ebp
8100081b:	89 e5                	mov    %esp,%ebp
8100081d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000820:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000827:	8b 45 08             	mov    0x8(%ebp),%eax
8100082a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100082d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000830:	50                   	push   %eax
81000831:	e8 47 fe ff ff       	call   8100067d <sys_call>
81000836:	83 c4 04             	add    $0x4,%esp
}
81000839:	c9                   	leave  
8100083a:	c3                   	ret    

8100083b <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8100083b:	55                   	push   %ebp
8100083c:	89 e5                	mov    %esp,%ebp
8100083e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000841:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000848:	8b 45 08             	mov    0x8(%ebp),%eax
8100084b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8100084e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000851:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000854:	8b 45 10             	mov    0x10(%ebp),%eax
81000857:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100085a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100085d:	50                   	push   %eax
8100085e:	e8 1a fe ff ff       	call   8100067d <sys_call>
81000863:	83 c4 04             	add    $0x4,%esp
}
81000866:	c9                   	leave  
81000867:	c3                   	ret    

81000868 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000868:	55                   	push   %ebp
81000869:	89 e5                	mov    %esp,%ebp
8100086b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8100086e:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000875:	8b 45 08             	mov    0x8(%ebp),%eax
81000878:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100087b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100087e:	50                   	push   %eax
8100087f:	e8 f9 fd ff ff       	call   8100067d <sys_call>
81000884:	83 c4 04             	add    $0x4,%esp
}
81000887:	c9                   	leave  
81000888:	c3                   	ret    

81000889 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
81000889:	55                   	push   %ebp
8100088a:	89 e5                	mov    %esp,%ebp
8100088c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
8100088f:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
81000896:	8b 45 08             	mov    0x8(%ebp),%eax
81000899:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
8100089c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100089f:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810008a2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008a5:	50                   	push   %eax
810008a6:	e8 d2 fd ff ff       	call   8100067d <sys_call>
810008ab:	83 c4 04             	add    $0x4,%esp
}
810008ae:	c9                   	leave  
810008af:	c3                   	ret    

810008b0 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810008b0:	55                   	push   %ebp
810008b1:	89 e5                	mov    %esp,%ebp
810008b3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810008b6:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = (int)incr;
810008bd:	8b 45 08             	mov    0x8(%ebp),%eax
810008c0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810008c3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008c6:	50                   	push   %eax
810008c7:	e8 b1 fd ff ff       	call   8100067d <sys_call>
810008cc:	83 c4 04             	add    $0x4,%esp
}
810008cf:	c9                   	leave  
810008d0:	c3                   	ret    

810008d1 <dup>:
 * @brief 在当前进程的打开文件表中分配新的一项指向该文件描述符对应的文件指针
 * 
 * @param file 需要被多次引用的文件指针的文件描述符
 * @return int 新的文件描述符
 */
int dup(int file) {
810008d1:	55                   	push   %ebp
810008d2:	89 e5                	mov    %esp,%ebp
810008d4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
810008d7:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = file;
810008de:	8b 45 08             	mov    0x8(%ebp),%eax
810008e1:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810008e4:	8d 45 ec             	lea    -0x14(%ebp),%eax
810008e7:	50                   	push   %eax
810008e8:	e8 90 fd ff ff       	call   8100067d <sys_call>
810008ed:	83 c4 04             	add    $0x4,%esp
}
810008f0:	c9                   	leave  
810008f1:	c3                   	ret    

810008f2 <_exit>:
/**
 * @brief 进程退出的系统调用
 * 
 * @param status 
 */
void _exit(int status) {
810008f2:	55                   	push   %ebp
810008f3:	89 e5                	mov    %esp,%ebp
810008f5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
810008f8:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = status;
810008ff:	8b 45 08             	mov    0x8(%ebp),%eax
81000902:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    sys_call(&args);
81000905:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000908:	50                   	push   %eax
81000909:	e8 6f fd ff ff       	call   8100067d <sys_call>
8100090e:	83 c4 04             	add    $0x4,%esp
}
81000911:	90                   	nop
81000912:	c9                   	leave  
81000913:	c3                   	ret    

81000914 <wait>:
 * @brief 回收进程资源
 * 
 * @param status 
 * @return int 
 */
int wait(int *status) {
81000914:	55                   	push   %ebp
81000915:	89 e5                	mov    %esp,%ebp
81000917:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
8100091a:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000921:	8b 45 08             	mov    0x8(%ebp),%eax
81000924:	89 45 f0             	mov    %eax,-0x10(%ebp)
    
    return sys_call(&args);
81000927:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100092a:	50                   	push   %eax
8100092b:	e8 4d fd ff ff       	call   8100067d <sys_call>
81000930:	83 c4 04             	add    $0x4,%esp
}
81000933:	c9                   	leave  
81000934:	c3                   	ret    

81000935 <opendir>:
 * @brief 打开一个目录
 * 
 * @param path 
 * @return DIR* 
 */
DIR *opendir(const char *path) {
81000935:	55                   	push   %ebp
81000936:	89 e5                	mov    %esp,%ebp
81000938:	83 ec 28             	sub    $0x28,%esp
    DIR *dir = (DIR*)malloc(sizeof(DIR));
8100093b:	83 ec 0c             	sub    $0xc,%esp
8100093e:	6a 20                	push   $0x20
81000940:	e8 b4 1e 00 00       	call   810027f9 <malloc>
81000945:	83 c4 10             	add    $0x10,%esp
81000948:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR*)0) {
8100094b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100094f:	75 07                	jne    81000958 <opendir+0x23>
        return (DIR*)0;
81000951:	b8 00 00 00 00       	mov    $0x0,%eax
81000956:	eb 43                	jmp    8100099b <opendir+0x66>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000958:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)path;
8100095f:	8b 45 08             	mov    0x8(%ebp),%eax
81000962:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000965:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000968:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
8100096b:	83 ec 0c             	sub    $0xc,%esp
8100096e:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000971:	50                   	push   %eax
81000972:	e8 06 fd ff ff       	call   8100067d <sys_call>
81000977:	83 c4 10             	add    $0x10,%esp
8100097a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    if (err < 0) {
8100097d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000981:	79 15                	jns    81000998 <opendir+0x63>
        free(dir);
81000983:	83 ec 0c             	sub    $0xc,%esp
81000986:	ff 75 f4             	push   -0xc(%ebp)
81000989:	e8 87 1e 00 00       	call   81002815 <free>
8100098e:	83 c4 10             	add    $0x10,%esp
        return (DIR*)0;
81000991:	b8 00 00 00 00       	mov    $0x0,%eax
81000996:	eb 03                	jmp    8100099b <opendir+0x66>
    }

    return dir;    
81000998:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
8100099b:	c9                   	leave  
8100099c:	c3                   	ret    

8100099d <readdir>:
 * @brief 读取目录信息得到目录项表
 * 
 * @param dir 
 * @return struct dirent* 
 */
struct dirent *readdir(DIR *dir) {
8100099d:	55                   	push   %ebp
8100099e:	89 e5                	mov    %esp,%ebp
810009a0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_readdir;
810009a3:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
810009aa:	8b 45 08             	mov    0x8(%ebp),%eax
810009ad:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&(dir->dirent);
810009b0:	8b 45 08             	mov    0x8(%ebp),%eax
810009b3:	83 c0 04             	add    $0x4,%eax
810009b6:	89 45 f0             	mov    %eax,-0x10(%ebp)

    int err = sys_call(&args);
810009b9:	8d 45 e8             	lea    -0x18(%ebp),%eax
810009bc:	50                   	push   %eax
810009bd:	e8 bb fc ff ff       	call   8100067d <sys_call>
810009c2:	83 c4 04             	add    $0x4,%esp
810009c5:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
810009c8:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
810009cc:	79 07                	jns    810009d5 <readdir+0x38>
        return (struct dirent*)0;
810009ce:	b8 00 00 00 00       	mov    $0x0,%eax
810009d3:	eb 06                	jmp    810009db <readdir+0x3e>
    }

    return &dir->dirent;   
810009d5:	8b 45 08             	mov    0x8(%ebp),%eax
810009d8:	83 c0 04             	add    $0x4,%eax
}
810009db:	c9                   	leave  
810009dc:	c3                   	ret    

810009dd <closedir>:
 * @brief 关闭目录
 * 
 * @param dir 
 * @return int 
 */
int closedir(DIR *dir) {
810009dd:	55                   	push   %ebp
810009de:	89 e5                	mov    %esp,%ebp
810009e0:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
810009e3:	c7 45 e0 3e 00 00 00 	movl   $0x3e,-0x20(%ebp)
    args.arg0 = (int)dir;
810009ea:	8b 45 08             	mov    0x8(%ebp),%eax
810009ed:	89 45 e4             	mov    %eax,-0x1c(%ebp)

    int err = sys_call(&args);
810009f0:	8d 45 e0             	lea    -0x20(%ebp),%eax
810009f3:	50                   	push   %eax
810009f4:	e8 84 fc ff ff       	call   8100067d <sys_call>
810009f9:	83 c4 04             	add    $0x4,%esp
810009fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    free(dir);
810009ff:	83 ec 0c             	sub    $0xc,%esp
81000a02:	ff 75 08             	push   0x8(%ebp)
81000a05:	e8 0b 1e 00 00       	call   81002815 <free>
81000a0a:	83 c4 10             	add    $0x10,%esp

    return err;   
81000a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000a10:	c9                   	leave  
81000a11:	c3                   	ret    

81000a12 <atoi>:
81000a12:	55                   	push   %ebp
81000a13:	89 e5                	mov    %esp,%ebp
81000a15:	83 ec 08             	sub    $0x8,%esp
81000a18:	83 ec 04             	sub    $0x4,%esp
81000a1b:	6a 0a                	push   $0xa
81000a1d:	6a 00                	push   $0x0
81000a1f:	ff 75 08             	push   0x8(%ebp)
81000a22:	e8 1f 40 00 00       	call   81004a46 <strtol>
81000a27:	83 c4 10             	add    $0x10,%esp
81000a2a:	c9                   	leave  
81000a2b:	c3                   	ret    

81000a2c <_atoi_r>:
81000a2c:	55                   	push   %ebp
81000a2d:	89 e5                	mov    %esp,%ebp
81000a2f:	83 ec 08             	sub    $0x8,%esp
81000a32:	6a 0a                	push   $0xa
81000a34:	6a 00                	push   $0x0
81000a36:	ff 75 0c             	push   0xc(%ebp)
81000a39:	ff 75 08             	push   0x8(%ebp)
81000a3c:	e8 bb 3f 00 00       	call   810049fc <_strtol_r>
81000a41:	83 c4 10             	add    $0x10,%esp
81000a44:	c9                   	leave  
81000a45:	c3                   	ret    

81000a46 <exit>:
81000a46:	55                   	push   %ebp
81000a47:	89 e5                	mov    %esp,%ebp
81000a49:	83 ec 08             	sub    $0x8,%esp
81000a4c:	83 ec 08             	sub    $0x8,%esp
81000a4f:	6a 00                	push   $0x0
81000a51:	ff 75 08             	push   0x8(%ebp)
81000a54:	e8 ea 42 00 00       	call   81004d43 <__call_exitprocs>
81000a59:	83 c4 10             	add    $0x10,%esp
81000a5c:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000a61:	8b 40 3c             	mov    0x3c(%eax),%eax
81000a64:	85 c0                	test   %eax,%eax
81000a66:	74 17                	je     81000a7f <exit+0x39>
81000a68:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000a6d:	8b 40 3c             	mov    0x3c(%eax),%eax
81000a70:	8b 15 ec 6d 00 81    	mov    0x81006dec,%edx
81000a76:	83 ec 0c             	sub    $0xc,%esp
81000a79:	52                   	push   %edx
81000a7a:	ff d0                	call   *%eax
81000a7c:	83 c4 10             	add    $0x10,%esp
81000a7f:	83 ec 0c             	sub    $0xc,%esp
81000a82:	ff 75 08             	push   0x8(%ebp)
81000a85:	e8 68 fe ff ff       	call   810008f2 <_exit>

81000a8a <__sflush_r>:
81000a8a:	55                   	push   %ebp
81000a8b:	89 e5                	mov    %esp,%ebp
81000a8d:	57                   	push   %edi
81000a8e:	56                   	push   %esi
81000a8f:	53                   	push   %ebx
81000a90:	83 ec 1c             	sub    $0x1c,%esp
81000a93:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000a96:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a9a:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81000a9e:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000aa2:	83 e0 08             	and    $0x8,%eax
81000aa5:	85 c0                	test   %eax,%eax
81000aa7:	0f 85 93 01 00 00    	jne    81000c40 <__sflush_r+0x1b6>
81000aad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab1:	80 cc 08             	or     $0x8,%ah
81000ab4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000ab8:	8b 43 04             	mov    0x4(%ebx),%eax
81000abb:	85 c0                	test   %eax,%eax
81000abd:	7f 0b                	jg     81000aca <__sflush_r+0x40>
81000abf:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000ac2:	85 c0                	test   %eax,%eax
81000ac4:	0f 8e 6f 01 00 00    	jle    81000c39 <__sflush_r+0x1af>
81000aca:	8b 43 28             	mov    0x28(%ebx),%eax
81000acd:	85 c0                	test   %eax,%eax
81000acf:	0f 84 64 01 00 00    	je     81000c39 <__sflush_r+0x1af>
81000ad5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ad8:	8b 00                	mov    (%eax),%eax
81000ada:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000add:	8b 45 08             	mov    0x8(%ebp),%eax
81000ae0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ae6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000aea:	98                   	cwtl   
81000aeb:	25 00 10 00 00       	and    $0x1000,%eax
81000af0:	85 c0                	test   %eax,%eax
81000af2:	74 08                	je     81000afc <__sflush_r+0x72>
81000af4:	8b 43 50             	mov    0x50(%ebx),%eax
81000af7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000afa:	eb 64                	jmp    81000b60 <__sflush_r+0xd6>
81000afc:	8b 43 28             	mov    0x28(%ebx),%eax
81000aff:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000b02:	6a 01                	push   $0x1
81000b04:	6a 00                	push   $0x0
81000b06:	52                   	push   %edx
81000b07:	ff 75 08             	push   0x8(%ebp)
81000b0a:	ff d0                	call   *%eax
81000b0c:	83 c4 10             	add    $0x10,%esp
81000b0f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b12:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b16:	75 48                	jne    81000b60 <__sflush_r+0xd6>
81000b18:	8b 45 08             	mov    0x8(%ebp),%eax
81000b1b:	8b 00                	mov    (%eax),%eax
81000b1d:	85 c0                	test   %eax,%eax
81000b1f:	74 3f                	je     81000b60 <__sflush_r+0xd6>
81000b21:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81000b28:	8b 45 08             	mov    0x8(%ebp),%eax
81000b2b:	8b 00                	mov    (%eax),%eax
81000b2d:	83 f8 1d             	cmp    $0x1d,%eax
81000b30:	74 0a                	je     81000b3c <__sflush_r+0xb2>
81000b32:	8b 45 08             	mov    0x8(%ebp),%eax
81000b35:	8b 00                	mov    (%eax),%eax
81000b37:	83 f8 16             	cmp    $0x16,%eax
81000b3a:	75 11                	jne    81000b4d <__sflush_r+0xc3>
81000b3c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000b43:	8b 45 08             	mov    0x8(%ebp),%eax
81000b46:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b49:	89 10                	mov    %edx,(%eax)
81000b4b:	eb 0b                	jmp    81000b58 <__sflush_r+0xce>
81000b4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b51:	83 c8 40             	or     $0x40,%eax
81000b54:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b58:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000b5b:	e9 48 01 00 00       	jmp    81000ca8 <__sflush_r+0x21e>
81000b60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b64:	98                   	cwtl   
81000b65:	83 e0 04             	and    $0x4,%eax
81000b68:	85 c0                	test   %eax,%eax
81000b6a:	74 13                	je     81000b7f <__sflush_r+0xf5>
81000b6c:	8b 43 04             	mov    0x4(%ebx),%eax
81000b6f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000b72:	8b 43 30             	mov    0x30(%ebx),%eax
81000b75:	85 c0                	test   %eax,%eax
81000b77:	74 06                	je     81000b7f <__sflush_r+0xf5>
81000b79:	8b 43 3c             	mov    0x3c(%ebx),%eax
81000b7c:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81000b7f:	8b 43 28             	mov    0x28(%ebx),%eax
81000b82:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000b85:	6a 00                	push   $0x0
81000b87:	ff 75 e4             	push   -0x1c(%ebp)
81000b8a:	52                   	push   %edx
81000b8b:	ff 75 08             	push   0x8(%ebp)
81000b8e:	ff d0                	call   *%eax
81000b90:	83 c4 10             	add    $0x10,%esp
81000b93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000b96:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000b9a:	75 1d                	jne    81000bb9 <__sflush_r+0x12f>
81000b9c:	8b 45 08             	mov    0x8(%ebp),%eax
81000b9f:	8b 00                	mov    (%eax),%eax
81000ba1:	85 c0                	test   %eax,%eax
81000ba3:	74 14                	je     81000bb9 <__sflush_r+0x12f>
81000ba5:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba8:	8b 00                	mov    (%eax),%eax
81000baa:	83 f8 1d             	cmp    $0x1d,%eax
81000bad:	74 0a                	je     81000bb9 <__sflush_r+0x12f>
81000baf:	8b 45 08             	mov    0x8(%ebp),%eax
81000bb2:	8b 00                	mov    (%eax),%eax
81000bb4:	83 f8 16             	cmp    $0x16,%eax
81000bb7:	75 6e                	jne    81000c27 <__sflush_r+0x19d>
81000bb9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bbd:	80 e4 f7             	and    $0xf7,%ah
81000bc0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bc4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81000bcb:	8b 43 10             	mov    0x10(%ebx),%eax
81000bce:	89 03                	mov    %eax,(%ebx)
81000bd0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000bd4:	98                   	cwtl   
81000bd5:	25 00 10 00 00       	and    $0x1000,%eax
81000bda:	85 c0                	test   %eax,%eax
81000bdc:	74 15                	je     81000bf3 <__sflush_r+0x169>
81000bde:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81000be2:	75 09                	jne    81000bed <__sflush_r+0x163>
81000be4:	8b 45 08             	mov    0x8(%ebp),%eax
81000be7:	8b 00                	mov    (%eax),%eax
81000be9:	85 c0                	test   %eax,%eax
81000beb:	75 06                	jne    81000bf3 <__sflush_r+0x169>
81000bed:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000bf0:	89 43 50             	mov    %eax,0x50(%ebx)
81000bf3:	8b 45 08             	mov    0x8(%ebp),%eax
81000bf6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000bf9:	89 10                	mov    %edx,(%eax)
81000bfb:	8b 43 30             	mov    0x30(%ebx),%eax
81000bfe:	85 c0                	test   %eax,%eax
81000c00:	74 37                	je     81000c39 <__sflush_r+0x1af>
81000c02:	8b 53 30             	mov    0x30(%ebx),%edx
81000c05:	8d 43 40             	lea    0x40(%ebx),%eax
81000c08:	39 c2                	cmp    %eax,%edx
81000c0a:	74 12                	je     81000c1e <__sflush_r+0x194>
81000c0c:	8b 43 30             	mov    0x30(%ebx),%eax
81000c0f:	83 ec 08             	sub    $0x8,%esp
81000c12:	50                   	push   %eax
81000c13:	ff 75 08             	push   0x8(%ebp)
81000c16:	e8 fa 06 00 00       	call   81001315 <_free_r>
81000c1b:	83 c4 10             	add    $0x10,%esp
81000c1e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81000c25:	eb 12                	jmp    81000c39 <__sflush_r+0x1af>
81000c27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c2b:	83 c8 40             	or     $0x40,%eax
81000c2e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000c37:	eb 6f                	jmp    81000ca8 <__sflush_r+0x21e>
81000c39:	b8 00 00 00 00       	mov    $0x0,%eax
81000c3e:	eb 68                	jmp    81000ca8 <__sflush_r+0x21e>
81000c40:	8b 73 10             	mov    0x10(%ebx),%esi
81000c43:	85 f6                	test   %esi,%esi
81000c45:	75 07                	jne    81000c4e <__sflush_r+0x1c4>
81000c47:	b8 00 00 00 00       	mov    $0x0,%eax
81000c4c:	eb 5a                	jmp    81000ca8 <__sflush_r+0x21e>
81000c4e:	8b 03                	mov    (%ebx),%eax
81000c50:	29 f0                	sub    %esi,%eax
81000c52:	89 c7                	mov    %eax,%edi
81000c54:	89 33                	mov    %esi,(%ebx)
81000c56:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81000c5a:	83 e0 03             	and    $0x3,%eax
81000c5d:	85 c0                	test   %eax,%eax
81000c5f:	75 05                	jne    81000c66 <__sflush_r+0x1dc>
81000c61:	8b 43 14             	mov    0x14(%ebx),%eax
81000c64:	eb 05                	jmp    81000c6b <__sflush_r+0x1e1>
81000c66:	b8 00 00 00 00       	mov    $0x0,%eax
81000c6b:	89 43 08             	mov    %eax,0x8(%ebx)
81000c6e:	eb 2f                	jmp    81000c9f <__sflush_r+0x215>
81000c70:	8b 43 24             	mov    0x24(%ebx),%eax
81000c73:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000c76:	57                   	push   %edi
81000c77:	56                   	push   %esi
81000c78:	52                   	push   %edx
81000c79:	ff 75 08             	push   0x8(%ebp)
81000c7c:	ff d0                	call   *%eax
81000c7e:	83 c4 10             	add    $0x10,%esp
81000c81:	85 c0                	test   %eax,%eax
81000c83:	7f 12                	jg     81000c97 <__sflush_r+0x20d>
81000c85:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000c89:	83 c8 40             	or     $0x40,%eax
81000c8c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000c90:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000c95:	eb 11                	jmp    81000ca8 <__sflush_r+0x21e>
81000c97:	89 c1                	mov    %eax,%ecx
81000c99:	89 c8                	mov    %ecx,%eax
81000c9b:	01 c6                	add    %eax,%esi
81000c9d:	29 cf                	sub    %ecx,%edi
81000c9f:	85 ff                	test   %edi,%edi
81000ca1:	7f cd                	jg     81000c70 <__sflush_r+0x1e6>
81000ca3:	b8 00 00 00 00       	mov    $0x0,%eax
81000ca8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000cab:	5b                   	pop    %ebx
81000cac:	5e                   	pop    %esi
81000cad:	5f                   	pop    %edi
81000cae:	5d                   	pop    %ebp
81000caf:	c3                   	ret    

81000cb0 <_fflush_r>:
81000cb0:	55                   	push   %ebp
81000cb1:	89 e5                	mov    %esp,%ebp
81000cb3:	53                   	push   %ebx
81000cb4:	83 ec 14             	sub    $0x14,%esp
81000cb7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000cba:	8b 45 08             	mov    0x8(%ebp),%eax
81000cbd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000cc0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000cc4:	74 18                	je     81000cde <_fflush_r+0x2e>
81000cc6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000cc9:	8b 40 38             	mov    0x38(%eax),%eax
81000ccc:	85 c0                	test   %eax,%eax
81000cce:	75 0e                	jne    81000cde <_fflush_r+0x2e>
81000cd0:	83 ec 0c             	sub    $0xc,%esp
81000cd3:	ff 75 f4             	push   -0xc(%ebp)
81000cd6:	e8 d8 04 00 00       	call   810011b3 <__sinit>
81000cdb:	83 c4 10             	add    $0x10,%esp
81000cde:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ce2:	66 85 c0             	test   %ax,%ax
81000ce5:	75 07                	jne    81000cee <_fflush_r+0x3e>
81000ce7:	b8 00 00 00 00       	mov    $0x0,%eax
81000cec:	eb 15                	jmp    81000d03 <_fflush_r+0x53>
81000cee:	83 ec 08             	sub    $0x8,%esp
81000cf1:	53                   	push   %ebx
81000cf2:	ff 75 08             	push   0x8(%ebp)
81000cf5:	e8 90 fd ff ff       	call   81000a8a <__sflush_r>
81000cfa:	83 c4 10             	add    $0x10,%esp
81000cfd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d00:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000d03:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000d06:	c9                   	leave  
81000d07:	c3                   	ret    

81000d08 <fflush>:
81000d08:	55                   	push   %ebp
81000d09:	89 e5                	mov    %esp,%ebp
81000d0b:	83 ec 08             	sub    $0x8,%esp
81000d0e:	8b 55 08             	mov    0x8(%ebp),%edx
81000d11:	85 d2                	test   %edx,%edx
81000d13:	75 18                	jne    81000d2d <fflush+0x25>
81000d15:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81000d1a:	83 ec 08             	sub    $0x8,%esp
81000d1d:	68 b0 0c 00 81       	push   $0x81000cb0
81000d22:	50                   	push   %eax
81000d23:	e8 91 0b 00 00       	call   810018b9 <_fwalk_reent>
81000d28:	83 c4 10             	add    $0x10,%esp
81000d2b:	eb 12                	jmp    81000d3f <fflush+0x37>
81000d2d:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81000d32:	83 ec 08             	sub    $0x8,%esp
81000d35:	52                   	push   %edx
81000d36:	50                   	push   %eax
81000d37:	e8 74 ff ff ff       	call   81000cb0 <_fflush_r>
81000d3c:	83 c4 10             	add    $0x10,%esp
81000d3f:	c9                   	leave  
81000d40:	c3                   	ret    

81000d41 <_fgets_r>:
81000d41:	55                   	push   %ebp
81000d42:	89 e5                	mov    %esp,%ebp
81000d44:	83 ec 28             	sub    $0x28,%esp
81000d47:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
81000d4b:	7f 0a                	jg     81000d57 <_fgets_r+0x16>
81000d4d:	b8 00 00 00 00       	mov    $0x0,%eax
81000d52:	e9 46 01 00 00       	jmp    81000e9d <_fgets_r+0x15c>
81000d57:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d5a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000d5d:	8b 45 08             	mov    0x8(%ebp),%eax
81000d60:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000d63:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000d67:	74 18                	je     81000d81 <_fgets_r+0x40>
81000d69:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000d6c:	8b 40 38             	mov    0x38(%eax),%eax
81000d6f:	85 c0                	test   %eax,%eax
81000d71:	75 0e                	jne    81000d81 <_fgets_r+0x40>
81000d73:	83 ec 0c             	sub    $0xc,%esp
81000d76:	ff 75 ec             	push   -0x14(%ebp)
81000d79:	e8 35 04 00 00       	call   810011b3 <__sinit>
81000d7e:	83 c4 10             	add    $0x10,%esp
81000d81:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81000d85:	8b 45 14             	mov    0x14(%ebp),%eax
81000d88:	8b 40 04             	mov    0x4(%eax),%eax
81000d8b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000d8e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000d92:	75 34                	jne    81000dc8 <_fgets_r+0x87>
81000d94:	83 ec 08             	sub    $0x8,%esp
81000d97:	ff 75 14             	push   0x14(%ebp)
81000d9a:	ff 75 08             	push   0x8(%ebp)
81000d9d:	e8 e2 33 00 00       	call   81004184 <__srefill_r>
81000da2:	83 c4 10             	add    $0x10,%esp
81000da5:	85 c0                	test   %eax,%eax
81000da7:	74 16                	je     81000dbf <_fgets_r+0x7e>
81000da9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000dac:	3b 45 0c             	cmp    0xc(%ebp),%eax
81000daf:	0f 85 de 00 00 00    	jne    81000e93 <_fgets_r+0x152>
81000db5:	b8 00 00 00 00       	mov    $0x0,%eax
81000dba:	e9 de 00 00 00       	jmp    81000e9d <_fgets_r+0x15c>
81000dbf:	8b 45 14             	mov    0x14(%ebp),%eax
81000dc2:	8b 40 04             	mov    0x4(%eax),%eax
81000dc5:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000dc8:	8b 45 14             	mov    0x14(%ebp),%eax
81000dcb:	8b 00                	mov    (%eax),%eax
81000dcd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000dd0:	8b 45 10             	mov    0x10(%ebp),%eax
81000dd3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81000dd6:	76 06                	jbe    81000dde <_fgets_r+0x9d>
81000dd8:	8b 45 10             	mov    0x10(%ebp),%eax
81000ddb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000dde:	83 ec 04             	sub    $0x4,%esp
81000de1:	ff 75 f4             	push   -0xc(%ebp)
81000de4:	6a 0a                	push   $0xa
81000de6:	ff 75 e8             	push   -0x18(%ebp)
81000de9:	e8 02 25 00 00       	call   810032f0 <memchr>
81000dee:	83 c4 10             	add    $0x10,%esp
81000df1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000df4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000df8:	74 4a                	je     81000e44 <_fgets_r+0x103>
81000dfa:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81000dfe:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000e01:	2b 45 e8             	sub    -0x18(%ebp),%eax
81000e04:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000e07:	8b 45 14             	mov    0x14(%ebp),%eax
81000e0a:	8b 40 04             	mov    0x4(%eax),%eax
81000e0d:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e10:	89 c2                	mov    %eax,%edx
81000e12:	8b 45 14             	mov    0x14(%ebp),%eax
81000e15:	89 50 04             	mov    %edx,0x4(%eax)
81000e18:	8b 45 14             	mov    0x14(%ebp),%eax
81000e1b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81000e1e:	89 10                	mov    %edx,(%eax)
81000e20:	83 ec 04             	sub    $0x4,%esp
81000e23:	ff 75 f4             	push   -0xc(%ebp)
81000e26:	ff 75 e8             	push   -0x18(%ebp)
81000e29:	ff 75 f0             	push   -0x10(%ebp)
81000e2c:	e8 a7 25 00 00       	call   810033d8 <memcpy>
81000e31:	83 c4 10             	add    $0x10,%esp
81000e34:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000e37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e3a:	01 d0                	add    %edx,%eax
81000e3c:	c6 00 00             	movb   $0x0,(%eax)
81000e3f:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e42:	eb 59                	jmp    81000e9d <_fgets_r+0x15c>
81000e44:	8b 45 14             	mov    0x14(%ebp),%eax
81000e47:	8b 40 04             	mov    0x4(%eax),%eax
81000e4a:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e4d:	89 c2                	mov    %eax,%edx
81000e4f:	8b 45 14             	mov    0x14(%ebp),%eax
81000e52:	89 50 04             	mov    %edx,0x4(%eax)
81000e55:	8b 45 14             	mov    0x14(%ebp),%eax
81000e58:	8b 10                	mov    (%eax),%edx
81000e5a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e5d:	01 c2                	add    %eax,%edx
81000e5f:	8b 45 14             	mov    0x14(%ebp),%eax
81000e62:	89 10                	mov    %edx,(%eax)
81000e64:	83 ec 04             	sub    $0x4,%esp
81000e67:	ff 75 f4             	push   -0xc(%ebp)
81000e6a:	ff 75 e8             	push   -0x18(%ebp)
81000e6d:	ff 75 f0             	push   -0x10(%ebp)
81000e70:	e8 63 25 00 00       	call   810033d8 <memcpy>
81000e75:	83 c4 10             	add    $0x10,%esp
81000e78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e7b:	01 45 f0             	add    %eax,-0x10(%ebp)
81000e7e:	8b 45 10             	mov    0x10(%ebp),%eax
81000e81:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000e84:	89 45 10             	mov    %eax,0x10(%ebp)
81000e87:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81000e8b:	0f 85 f4 fe ff ff    	jne    81000d85 <_fgets_r+0x44>
81000e91:	eb 01                	jmp    81000e94 <_fgets_r+0x153>
81000e93:	90                   	nop
81000e94:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000e97:	c6 00 00             	movb   $0x0,(%eax)
81000e9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e9d:	c9                   	leave  
81000e9e:	c3                   	ret    

81000e9f <fgets>:
81000e9f:	55                   	push   %ebp
81000ea0:	89 e5                	mov    %esp,%ebp
81000ea2:	83 ec 08             	sub    $0x8,%esp
81000ea5:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81000eaa:	ff 75 10             	push   0x10(%ebp)
81000ead:	ff 75 0c             	push   0xc(%ebp)
81000eb0:	ff 75 08             	push   0x8(%ebp)
81000eb3:	50                   	push   %eax
81000eb4:	e8 88 fe ff ff       	call   81000d41 <_fgets_r>
81000eb9:	83 c4 10             	add    $0x10,%esp
81000ebc:	c9                   	leave  
81000ebd:	c3                   	ret    

81000ebe <std>:
81000ebe:	55                   	push   %ebp
81000ebf:	89 e5                	mov    %esp,%ebp
81000ec1:	83 ec 08             	sub    $0x8,%esp
81000ec4:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ecd:	8b 45 08             	mov    0x8(%ebp),%eax
81000ed0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000ed7:	8b 45 08             	mov    0x8(%ebp),%eax
81000eda:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000ee1:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ee4:	89 c2                	mov    %eax,%edx
81000ee6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee9:	66 89 50 0c          	mov    %dx,0xc(%eax)
81000eed:	8b 45 08             	mov    0x8(%ebp),%eax
81000ef0:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000ef7:	8b 45 10             	mov    0x10(%ebp),%eax
81000efa:	89 c2                	mov    %eax,%edx
81000efc:	8b 45 08             	mov    0x8(%ebp),%eax
81000eff:	66 89 50 0e          	mov    %dx,0xe(%eax)
81000f03:	8b 45 08             	mov    0x8(%ebp),%eax
81000f06:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000f0d:	8b 45 08             	mov    0x8(%ebp),%eax
81000f10:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000f17:	8b 45 08             	mov    0x8(%ebp),%eax
81000f1a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000f21:	8b 45 08             	mov    0x8(%ebp),%eax
81000f24:	83 c0 5c             	add    $0x5c,%eax
81000f27:	83 ec 04             	sub    $0x4,%esp
81000f2a:	6a 08                	push   $0x8
81000f2c:	6a 00                	push   $0x0
81000f2e:	50                   	push   %eax
81000f2f:	e8 ec 24 00 00       	call   81003420 <memset>
81000f34:	83 c4 10             	add    $0x10,%esp
81000f37:	8b 45 08             	mov    0x8(%ebp),%eax
81000f3a:	8b 55 08             	mov    0x8(%ebp),%edx
81000f3d:	89 50 1c             	mov    %edx,0x1c(%eax)
81000f40:	8b 45 08             	mov    0x8(%ebp),%eax
81000f43:	c7 40 20 c5 43 00 81 	movl   $0x810043c5,0x20(%eax)
81000f4a:	8b 45 08             	mov    0x8(%ebp),%eax
81000f4d:	c7 40 24 13 44 00 81 	movl   $0x81004413,0x24(%eax)
81000f54:	8b 45 08             	mov    0x8(%ebp),%eax
81000f57:	c7 40 28 6e 44 00 81 	movl   $0x8100446e,0x28(%eax)
81000f5e:	8b 45 08             	mov    0x8(%ebp),%eax
81000f61:	c7 40 2c b8 44 00 81 	movl   $0x810044b8,0x2c(%eax)
81000f68:	90                   	nop
81000f69:	c9                   	leave  
81000f6a:	c3                   	ret    

81000f6b <stdin_init>:
81000f6b:	55                   	push   %ebp
81000f6c:	89 e5                	mov    %esp,%ebp
81000f6e:	83 ec 08             	sub    $0x8,%esp
81000f71:	83 ec 04             	sub    $0x4,%esp
81000f74:	6a 00                	push   $0x0
81000f76:	6a 04                	push   $0x4
81000f78:	ff 75 08             	push   0x8(%ebp)
81000f7b:	e8 3e ff ff ff       	call   81000ebe <std>
81000f80:	83 c4 10             	add    $0x10,%esp
81000f83:	90                   	nop
81000f84:	c9                   	leave  
81000f85:	c3                   	ret    

81000f86 <stdout_init>:
81000f86:	55                   	push   %ebp
81000f87:	89 e5                	mov    %esp,%ebp
81000f89:	83 ec 08             	sub    $0x8,%esp
81000f8c:	83 ec 04             	sub    $0x4,%esp
81000f8f:	6a 01                	push   $0x1
81000f91:	6a 09                	push   $0x9
81000f93:	ff 75 08             	push   0x8(%ebp)
81000f96:	e8 23 ff ff ff       	call   81000ebe <std>
81000f9b:	83 c4 10             	add    $0x10,%esp
81000f9e:	90                   	nop
81000f9f:	c9                   	leave  
81000fa0:	c3                   	ret    

81000fa1 <stderr_init>:
81000fa1:	55                   	push   %ebp
81000fa2:	89 e5                	mov    %esp,%ebp
81000fa4:	83 ec 08             	sub    $0x8,%esp
81000fa7:	83 ec 04             	sub    $0x4,%esp
81000faa:	6a 02                	push   $0x2
81000fac:	6a 12                	push   $0x12
81000fae:	ff 75 08             	push   0x8(%ebp)
81000fb1:	e8 08 ff ff ff       	call   81000ebe <std>
81000fb6:	83 c4 10             	add    $0x10,%esp
81000fb9:	90                   	nop
81000fba:	c9                   	leave  
81000fbb:	c3                   	ret    

81000fbc <__sfmoreglue>:
81000fbc:	55                   	push   %ebp
81000fbd:	89 e5                	mov    %esp,%ebp
81000fbf:	53                   	push   %ebx
81000fc0:	83 ec 14             	sub    $0x14,%esp
81000fc3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000fc6:	8d 43 ff             	lea    -0x1(%ebx),%eax
81000fc9:	6b c0 68             	imul   $0x68,%eax,%eax
81000fcc:	83 c0 74             	add    $0x74,%eax
81000fcf:	83 ec 08             	sub    $0x8,%esp
81000fd2:	50                   	push   %eax
81000fd3:	ff 75 08             	push   0x8(%ebp)
81000fd6:	e8 ea 1a 00 00       	call   81002ac5 <_malloc_r>
81000fdb:	83 c4 10             	add    $0x10,%esp
81000fde:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fe1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000fe5:	75 07                	jne    81000fee <__sfmoreglue+0x32>
81000fe7:	b8 00 00 00 00       	mov    $0x0,%eax
81000fec:	eb 38                	jmp    81001026 <__sfmoreglue+0x6a>
81000fee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000ff7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ffa:	89 58 04             	mov    %ebx,0x4(%eax)
81000ffd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001000:	8d 50 0c             	lea    0xc(%eax),%edx
81001003:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001006:	89 50 08             	mov    %edx,0x8(%eax)
81001009:	89 d8                	mov    %ebx,%eax
8100100b:	6b c0 68             	imul   $0x68,%eax,%eax
8100100e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001011:	83 c2 0c             	add    $0xc,%edx
81001014:	83 ec 04             	sub    $0x4,%esp
81001017:	50                   	push   %eax
81001018:	6a 00                	push   $0x0
8100101a:	52                   	push   %edx
8100101b:	e8 00 24 00 00       	call   81003420 <memset>
81001020:	83 c4 10             	add    $0x10,%esp
81001023:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001026:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001029:	c9                   	leave  
8100102a:	c3                   	ret    

8100102b <__sfp>:
8100102b:	55                   	push   %ebp
8100102c:	89 e5                	mov    %esp,%ebp
8100102e:	83 ec 18             	sub    $0x18,%esp
81001031:	e8 16 02 00 00       	call   8100124c <__sfp_lock_acquire>
81001036:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
8100103b:	8b 40 38             	mov    0x38(%eax),%eax
8100103e:	85 c0                	test   %eax,%eax
81001040:	75 11                	jne    81001053 <__sfp+0x28>
81001042:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81001047:	83 ec 0c             	sub    $0xc,%esp
8100104a:	50                   	push   %eax
8100104b:	e8 63 01 00 00       	call   810011b3 <__sinit>
81001050:	83 c4 10             	add    $0x10,%esp
81001053:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81001058:	05 e0 02 00 00       	add    $0x2e0,%eax
8100105d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001060:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001063:	8b 40 08             	mov    0x8(%eax),%eax
81001066:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001069:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100106c:	8b 40 04             	mov    0x4(%eax),%eax
8100106f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001072:	eb 10                	jmp    81001084 <__sfp+0x59>
81001074:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001077:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100107b:	66 85 c0             	test   %ax,%ax
8100107e:	74 58                	je     810010d8 <__sfp+0xad>
81001080:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001084:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001088:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100108c:	79 e6                	jns    81001074 <__sfp+0x49>
8100108e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001091:	8b 00                	mov    (%eax),%eax
81001093:	85 c0                	test   %eax,%eax
81001095:	75 1e                	jne    810010b5 <__sfp+0x8a>
81001097:	83 ec 08             	sub    $0x8,%esp
8100109a:	6a 04                	push   $0x4
8100109c:	ff 75 08             	push   0x8(%ebp)
8100109f:	e8 18 ff ff ff       	call   81000fbc <__sfmoreglue>
810010a4:	83 c4 10             	add    $0x10,%esp
810010a7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810010aa:	89 02                	mov    %eax,(%edx)
810010ac:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010af:	8b 00                	mov    (%eax),%eax
810010b1:	85 c0                	test   %eax,%eax
810010b3:	74 0a                	je     810010bf <__sfp+0x94>
810010b5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010b8:	8b 00                	mov    (%eax),%eax
810010ba:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010bd:	eb a1                	jmp    81001060 <__sfp+0x35>
810010bf:	90                   	nop
810010c0:	e8 8d 01 00 00       	call   81001252 <__sfp_lock_release>
810010c5:	8b 45 08             	mov    0x8(%ebp),%eax
810010c8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810010ce:	b8 00 00 00 00       	mov    $0x0,%eax
810010d3:	e9 9e 00 00 00       	jmp    81001176 <__sfp+0x14b>
810010d8:	90                   	nop
810010d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010dc:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810010e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010e5:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810010eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010ee:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810010f5:	e8 58 01 00 00       	call   81001252 <__sfp_lock_release>
810010fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010fd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001103:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001106:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100110d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001110:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001117:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100111a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001121:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001124:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100112b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100112e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001135:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001138:	83 c0 5c             	add    $0x5c,%eax
8100113b:	83 ec 04             	sub    $0x4,%esp
8100113e:	6a 08                	push   $0x8
81001140:	6a 00                	push   $0x0
81001142:	50                   	push   %eax
81001143:	e8 d8 22 00 00       	call   81003420 <memset>
81001148:	83 c4 10             	add    $0x10,%esp
8100114b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100114e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001155:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001158:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100115f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001162:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81001169:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100116c:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001173:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001176:	c9                   	leave  
81001177:	c3                   	ret    

81001178 <_cleanup_r>:
81001178:	55                   	push   %ebp
81001179:	89 e5                	mov    %esp,%ebp
8100117b:	83 ec 18             	sub    $0x18,%esp
8100117e:	c7 45 f4 a2 4e 00 81 	movl   $0x81004ea2,-0xc(%ebp)
81001185:	83 ec 08             	sub    $0x8,%esp
81001188:	ff 75 f4             	push   -0xc(%ebp)
8100118b:	ff 75 08             	push   0x8(%ebp)
8100118e:	e8 26 07 00 00       	call   810018b9 <_fwalk_reent>
81001193:	83 c4 10             	add    $0x10,%esp
81001196:	90                   	nop
81001197:	c9                   	leave  
81001198:	c3                   	ret    

81001199 <_cleanup>:
81001199:	55                   	push   %ebp
8100119a:	89 e5                	mov    %esp,%ebp
8100119c:	83 ec 08             	sub    $0x8,%esp
8100119f:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
810011a4:	83 ec 0c             	sub    $0xc,%esp
810011a7:	50                   	push   %eax
810011a8:	e8 cb ff ff ff       	call   81001178 <_cleanup_r>
810011ad:	83 c4 10             	add    $0x10,%esp
810011b0:	90                   	nop
810011b1:	c9                   	leave  
810011b2:	c3                   	ret    

810011b3 <__sinit>:
810011b3:	55                   	push   %ebp
810011b4:	89 e5                	mov    %esp,%ebp
810011b6:	83 ec 08             	sub    $0x8,%esp
810011b9:	e8 9a 00 00 00       	call   81001258 <__sinit_lock_acquire>
810011be:	8b 45 08             	mov    0x8(%ebp),%eax
810011c1:	8b 40 38             	mov    0x38(%eax),%eax
810011c4:	85 c0                	test   %eax,%eax
810011c6:	74 07                	je     810011cf <__sinit+0x1c>
810011c8:	e8 91 00 00 00       	call   8100125e <__sinit_lock_release>
810011cd:	eb 7b                	jmp    8100124a <__sinit+0x97>
810011cf:	8b 45 08             	mov    0x8(%ebp),%eax
810011d2:	c7 40 3c 78 11 00 81 	movl   $0x81001178,0x3c(%eax)
810011d9:	8b 45 08             	mov    0x8(%ebp),%eax
810011dc:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810011e3:	00 00 00 
810011e6:	8b 45 08             	mov    0x8(%ebp),%eax
810011e9:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810011f0:	00 00 00 
810011f3:	8b 45 08             	mov    0x8(%ebp),%eax
810011f6:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810011fc:	8b 45 08             	mov    0x8(%ebp),%eax
810011ff:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001205:	8b 45 08             	mov    0x8(%ebp),%eax
81001208:	8b 40 04             	mov    0x4(%eax),%eax
8100120b:	83 ec 0c             	sub    $0xc,%esp
8100120e:	50                   	push   %eax
8100120f:	e8 57 fd ff ff       	call   81000f6b <stdin_init>
81001214:	83 c4 10             	add    $0x10,%esp
81001217:	8b 45 08             	mov    0x8(%ebp),%eax
8100121a:	8b 40 08             	mov    0x8(%eax),%eax
8100121d:	83 ec 0c             	sub    $0xc,%esp
81001220:	50                   	push   %eax
81001221:	e8 60 fd ff ff       	call   81000f86 <stdout_init>
81001226:	83 c4 10             	add    $0x10,%esp
81001229:	8b 45 08             	mov    0x8(%ebp),%eax
8100122c:	8b 40 0c             	mov    0xc(%eax),%eax
8100122f:	83 ec 0c             	sub    $0xc,%esp
81001232:	50                   	push   %eax
81001233:	e8 69 fd ff ff       	call   81000fa1 <stderr_init>
81001238:	83 c4 10             	add    $0x10,%esp
8100123b:	8b 45 08             	mov    0x8(%ebp),%eax
8100123e:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001245:	e8 14 00 00 00       	call   8100125e <__sinit_lock_release>
8100124a:	c9                   	leave  
8100124b:	c3                   	ret    

8100124c <__sfp_lock_acquire>:
8100124c:	55                   	push   %ebp
8100124d:	89 e5                	mov    %esp,%ebp
8100124f:	90                   	nop
81001250:	5d                   	pop    %ebp
81001251:	c3                   	ret    

81001252 <__sfp_lock_release>:
81001252:	55                   	push   %ebp
81001253:	89 e5                	mov    %esp,%ebp
81001255:	90                   	nop
81001256:	5d                   	pop    %ebp
81001257:	c3                   	ret    

81001258 <__sinit_lock_acquire>:
81001258:	55                   	push   %ebp
81001259:	89 e5                	mov    %esp,%ebp
8100125b:	90                   	nop
8100125c:	5d                   	pop    %ebp
8100125d:	c3                   	ret    

8100125e <__sinit_lock_release>:
8100125e:	55                   	push   %ebp
8100125f:	89 e5                	mov    %esp,%ebp
81001261:	90                   	nop
81001262:	5d                   	pop    %ebp
81001263:	c3                   	ret    

81001264 <__fp_lock>:
81001264:	55                   	push   %ebp
81001265:	89 e5                	mov    %esp,%ebp
81001267:	b8 00 00 00 00       	mov    $0x0,%eax
8100126c:	5d                   	pop    %ebp
8100126d:	c3                   	ret    

8100126e <__fp_unlock>:
8100126e:	55                   	push   %ebp
8100126f:	89 e5                	mov    %esp,%ebp
81001271:	b8 00 00 00 00       	mov    $0x0,%eax
81001276:	5d                   	pop    %ebp
81001277:	c3                   	ret    

81001278 <__fp_lock_all>:
81001278:	55                   	push   %ebp
81001279:	89 e5                	mov    %esp,%ebp
8100127b:	83 ec 08             	sub    $0x8,%esp
8100127e:	e8 c9 ff ff ff       	call   8100124c <__sfp_lock_acquire>
81001283:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81001288:	83 ec 08             	sub    $0x8,%esp
8100128b:	68 64 12 00 81       	push   $0x81001264
81001290:	50                   	push   %eax
81001291:	e8 bb 05 00 00       	call   81001851 <_fwalk>
81001296:	83 c4 10             	add    $0x10,%esp
81001299:	90                   	nop
8100129a:	c9                   	leave  
8100129b:	c3                   	ret    

8100129c <__fp_unlock_all>:
8100129c:	55                   	push   %ebp
8100129d:	89 e5                	mov    %esp,%ebp
8100129f:	83 ec 08             	sub    $0x8,%esp
810012a2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810012a7:	83 ec 08             	sub    $0x8,%esp
810012aa:	68 6e 12 00 81       	push   $0x8100126e
810012af:	50                   	push   %eax
810012b0:	e8 9c 05 00 00       	call   81001851 <_fwalk>
810012b5:	83 c4 10             	add    $0x10,%esp
810012b8:	e8 95 ff ff ff       	call   81001252 <__sfp_lock_release>
810012bd:	90                   	nop
810012be:	c9                   	leave  
810012bf:	c3                   	ret    

810012c0 <_fiprintf_r>:
810012c0:	55                   	push   %ebp
810012c1:	89 e5                	mov    %esp,%ebp
810012c3:	83 ec 18             	sub    $0x18,%esp
810012c6:	8d 45 14             	lea    0x14(%ebp),%eax
810012c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810012cf:	50                   	push   %eax
810012d0:	ff 75 10             	push   0x10(%ebp)
810012d3:	ff 75 0c             	push   0xc(%ebp)
810012d6:	ff 75 08             	push   0x8(%ebp)
810012d9:	e8 e5 23 00 00       	call   810036c3 <_vfiprintf_r>
810012de:	83 c4 10             	add    $0x10,%esp
810012e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012e7:	c9                   	leave  
810012e8:	c3                   	ret    

810012e9 <fiprintf>:
810012e9:	55                   	push   %ebp
810012ea:	89 e5                	mov    %esp,%ebp
810012ec:	83 ec 18             	sub    $0x18,%esp
810012ef:	8d 45 10             	lea    0x10(%ebp),%eax
810012f2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810012f5:	8b 55 f0             	mov    -0x10(%ebp),%edx
810012f8:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810012fd:	52                   	push   %edx
810012fe:	ff 75 0c             	push   0xc(%ebp)
81001301:	ff 75 08             	push   0x8(%ebp)
81001304:	50                   	push   %eax
81001305:	e8 b9 23 00 00       	call   810036c3 <_vfiprintf_r>
8100130a:	83 c4 10             	add    $0x10,%esp
8100130d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001310:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001313:	c9                   	leave  
81001314:	c3                   	ret    

81001315 <_free_r>:
81001315:	55                   	push   %ebp
81001316:	89 e5                	mov    %esp,%ebp
81001318:	53                   	push   %ebx
81001319:	83 ec 34             	sub    $0x34,%esp
8100131c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001320:	0f 84 c4 03 00 00    	je     810016ea <_free_r+0x3d5>
81001326:	83 ec 0c             	sub    $0xc,%esp
81001329:	ff 75 08             	push   0x8(%ebp)
8100132c:	e8 77 21 00 00       	call   810034a8 <__malloc_lock>
81001331:	83 c4 10             	add    $0x10,%esp
81001334:	8b 45 0c             	mov    0xc(%ebp),%eax
81001337:	83 e8 08             	sub    $0x8,%eax
8100133a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100133d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001340:	8b 40 04             	mov    0x4(%eax),%eax
81001343:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001346:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001349:	83 e0 fe             	and    $0xfffffffe,%eax
8100134c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100134f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001352:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001355:	01 d0                	add    %edx,%eax
81001357:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100135a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100135d:	8b 40 04             	mov    0x4(%eax),%eax
81001360:	83 e0 fc             	and    $0xfffffffc,%eax
81001363:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001366:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100136b:	8b 40 08             	mov    0x8(%eax),%eax
8100136e:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001371:	0f 85 94 00 00 00    	jne    8100140b <_free_r+0xf6>
81001377:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100137a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100137d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001380:	83 e0 01             	and    $0x1,%eax
81001383:	85 c0                	test   %eax,%eax
81001385:	75 3a                	jne    810013c1 <_free_r+0xac>
81001387:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100138a:	8b 00                	mov    (%eax),%eax
8100138c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100138f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001392:	f7 d8                	neg    %eax
81001394:	01 45 f4             	add    %eax,-0xc(%ebp)
81001397:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100139a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100139d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a0:	8b 40 0c             	mov    0xc(%eax),%eax
810013a3:	89 45 ec             	mov    %eax,-0x14(%ebp)
810013a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a9:	8b 40 08             	mov    0x8(%eax),%eax
810013ac:	89 45 e8             	mov    %eax,-0x18(%ebp)
810013af:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013b2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810013b5:	89 50 0c             	mov    %edx,0xc(%eax)
810013b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810013bb:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013be:	89 50 08             	mov    %edx,0x8(%eax)
810013c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013c4:	83 c8 01             	or     $0x1,%eax
810013c7:	89 c2                	mov    %eax,%edx
810013c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013cc:	89 50 04             	mov    %edx,0x4(%eax)
810013cf:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810013d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013d7:	89 42 08             	mov    %eax,0x8(%edx)
810013da:	a1 c8 79 00 81       	mov    0x810079c8,%eax
810013df:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810013e2:	72 14                	jb     810013f8 <_free_r+0xe3>
810013e4:	a1 a0 81 00 81       	mov    0x810081a0,%eax
810013e9:	83 ec 08             	sub    $0x8,%esp
810013ec:	50                   	push   %eax
810013ed:	ff 75 08             	push   0x8(%ebp)
810013f0:	e8 fb 02 00 00       	call   810016f0 <_malloc_trim_r>
810013f5:	83 c4 10             	add    $0x10,%esp
810013f8:	83 ec 0c             	sub    $0xc,%esp
810013fb:	ff 75 08             	push   0x8(%ebp)
810013fe:	e8 ab 20 00 00       	call   810034ae <__malloc_unlock>
81001403:	83 c4 10             	add    $0x10,%esp
81001406:	e9 e0 02 00 00       	jmp    810016eb <_free_r+0x3d6>
8100140b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100140e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001411:	89 50 04             	mov    %edx,0x4(%eax)
81001414:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100141b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100141e:	83 e0 01             	and    $0x1,%eax
81001421:	85 c0                	test   %eax,%eax
81001423:	75 52                	jne    81001477 <_free_r+0x162>
81001425:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001428:	8b 00                	mov    (%eax),%eax
8100142a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100142d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001430:	f7 d8                	neg    %eax
81001432:	01 45 f4             	add    %eax,-0xc(%ebp)
81001435:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001438:	01 45 f0             	add    %eax,-0x10(%ebp)
8100143b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100143e:	8b 40 08             	mov    0x8(%eax),%eax
81001441:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81001446:	39 d0                	cmp    %edx,%eax
81001448:	75 09                	jne    81001453 <_free_r+0x13e>
8100144a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001451:	eb 24                	jmp    81001477 <_free_r+0x162>
81001453:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001456:	8b 40 0c             	mov    0xc(%eax),%eax
81001459:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100145c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100145f:	8b 40 08             	mov    0x8(%eax),%eax
81001462:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001465:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001468:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100146b:	89 50 0c             	mov    %edx,0xc(%eax)
8100146e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001471:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001474:	89 50 08             	mov    %edx,0x8(%eax)
81001477:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100147a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100147d:	01 d0                	add    %edx,%eax
8100147f:	8b 40 04             	mov    0x4(%eax),%eax
81001482:	83 e0 01             	and    $0x1,%eax
81001485:	85 c0                	test   %eax,%eax
81001487:	75 75                	jne    810014fe <_free_r+0x1e9>
81001489:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100148c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100148f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001493:	75 45                	jne    810014da <_free_r+0x1c5>
81001495:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001498:	8b 40 08             	mov    0x8(%eax),%eax
8100149b:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810014a0:	39 d0                	cmp    %edx,%eax
810014a2:	75 36                	jne    810014da <_free_r+0x1c5>
810014a4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810014ab:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
810014b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014b3:	89 50 0c             	mov    %edx,0xc(%eax)
810014b6:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810014bb:	8b 40 0c             	mov    0xc(%eax),%eax
810014be:	89 42 08             	mov    %eax,0x8(%edx)
810014c1:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810014c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014c9:	89 50 0c             	mov    %edx,0xc(%eax)
810014cc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014cf:	8b 50 0c             	mov    0xc(%eax),%edx
810014d2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014d5:	89 50 08             	mov    %edx,0x8(%eax)
810014d8:	eb 24                	jmp    810014fe <_free_r+0x1e9>
810014da:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014dd:	8b 40 0c             	mov    0xc(%eax),%eax
810014e0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810014e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014e6:	8b 40 08             	mov    0x8(%eax),%eax
810014e9:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810014ef:	8b 55 ec             	mov    -0x14(%ebp),%edx
810014f2:	89 50 0c             	mov    %edx,0xc(%eax)
810014f5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810014f8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810014fb:	89 50 08             	mov    %edx,0x8(%eax)
810014fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001501:	83 c8 01             	or     $0x1,%eax
81001504:	89 c2                	mov    %eax,%edx
81001506:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001509:	89 50 04             	mov    %edx,0x4(%eax)
8100150c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100150f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001512:	01 c2                	add    %eax,%edx
81001514:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001517:	89 02                	mov    %eax,(%edx)
81001519:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100151d:	0f 85 b7 01 00 00    	jne    810016da <_free_r+0x3c5>
81001523:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8100152a:	77 7f                	ja     810015ab <_free_r+0x296>
8100152c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100152f:	c1 e8 03             	shr    $0x3,%eax
81001532:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001535:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100153a:	8b 58 04             	mov    0x4(%eax),%ebx
8100153d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001540:	8d 50 03             	lea    0x3(%eax),%edx
81001543:	85 c0                	test   %eax,%eax
81001545:	0f 48 c2             	cmovs  %edx,%eax
81001548:	c1 f8 02             	sar    $0x2,%eax
8100154b:	ba 01 00 00 00       	mov    $0x1,%edx
81001550:	89 c1                	mov    %eax,%ecx
81001552:	d3 e2                	shl    %cl,%edx
81001554:	89 d0                	mov    %edx,%eax
81001556:	ba c0 75 00 81       	mov    $0x810075c0,%edx
8100155b:	09 d8                	or     %ebx,%eax
8100155d:	89 42 04             	mov    %eax,0x4(%edx)
81001560:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001563:	83 c0 01             	add    $0x1,%eax
81001566:	01 c0                	add    %eax,%eax
81001568:	c1 e0 02             	shl    $0x2,%eax
8100156b:	05 c0 75 00 81       	add    $0x810075c0,%eax
81001570:	83 e8 08             	sub    $0x8,%eax
81001573:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001576:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001579:	8b 40 08             	mov    0x8(%eax),%eax
8100157c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100157f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001582:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001585:	89 50 0c             	mov    %edx,0xc(%eax)
81001588:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100158b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100158e:	89 50 08             	mov    %edx,0x8(%eax)
81001591:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001594:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001597:	89 50 08             	mov    %edx,0x8(%eax)
8100159a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100159d:	8b 50 08             	mov    0x8(%eax),%edx
810015a0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810015a3:	89 50 0c             	mov    %edx,0xc(%eax)
810015a6:	e9 2f 01 00 00       	jmp    810016da <_free_r+0x3c5>
810015ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ae:	c1 e8 09             	shr    $0x9,%eax
810015b1:	85 c0                	test   %eax,%eax
810015b3:	75 08                	jne    810015bd <_free_r+0x2a8>
810015b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015b8:	c1 e8 03             	shr    $0x3,%eax
810015bb:	eb 77                	jmp    81001634 <_free_r+0x31f>
810015bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015c0:	c1 e8 09             	shr    $0x9,%eax
810015c3:	83 f8 04             	cmp    $0x4,%eax
810015c6:	77 0b                	ja     810015d3 <_free_r+0x2be>
810015c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015cb:	c1 e8 06             	shr    $0x6,%eax
810015ce:	83 c0 38             	add    $0x38,%eax
810015d1:	eb 61                	jmp    81001634 <_free_r+0x31f>
810015d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015d6:	c1 e8 09             	shr    $0x9,%eax
810015d9:	83 f8 14             	cmp    $0x14,%eax
810015dc:	77 0b                	ja     810015e9 <_free_r+0x2d4>
810015de:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015e1:	c1 e8 09             	shr    $0x9,%eax
810015e4:	83 c0 5b             	add    $0x5b,%eax
810015e7:	eb 4b                	jmp    81001634 <_free_r+0x31f>
810015e9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015ec:	c1 e8 09             	shr    $0x9,%eax
810015ef:	83 f8 54             	cmp    $0x54,%eax
810015f2:	77 0b                	ja     810015ff <_free_r+0x2ea>
810015f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015f7:	c1 e8 0c             	shr    $0xc,%eax
810015fa:	83 c0 6e             	add    $0x6e,%eax
810015fd:	eb 35                	jmp    81001634 <_free_r+0x31f>
810015ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001602:	c1 e8 09             	shr    $0x9,%eax
81001605:	3d 54 01 00 00       	cmp    $0x154,%eax
8100160a:	77 0b                	ja     81001617 <_free_r+0x302>
8100160c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100160f:	c1 e8 0f             	shr    $0xf,%eax
81001612:	83 c0 77             	add    $0x77,%eax
81001615:	eb 1d                	jmp    81001634 <_free_r+0x31f>
81001617:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100161a:	c1 e8 09             	shr    $0x9,%eax
8100161d:	3d 54 05 00 00       	cmp    $0x554,%eax
81001622:	77 0b                	ja     8100162f <_free_r+0x31a>
81001624:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001627:	c1 e8 12             	shr    $0x12,%eax
8100162a:	83 c0 7c             	add    $0x7c,%eax
8100162d:	eb 05                	jmp    81001634 <_free_r+0x31f>
8100162f:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001634:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001637:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100163a:	83 c0 01             	add    $0x1,%eax
8100163d:	01 c0                	add    %eax,%eax
8100163f:	c1 e0 02             	shl    $0x2,%eax
81001642:	05 c0 75 00 81       	add    $0x810075c0,%eax
81001647:	83 e8 08             	sub    $0x8,%eax
8100164a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100164d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001650:	8b 40 08             	mov    0x8(%eax),%eax
81001653:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001656:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001659:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100165c:	75 36                	jne    81001694 <_free_r+0x37f>
8100165e:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001663:	8b 58 04             	mov    0x4(%eax),%ebx
81001666:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001669:	8d 50 03             	lea    0x3(%eax),%edx
8100166c:	85 c0                	test   %eax,%eax
8100166e:	0f 48 c2             	cmovs  %edx,%eax
81001671:	c1 f8 02             	sar    $0x2,%eax
81001674:	ba 01 00 00 00       	mov    $0x1,%edx
81001679:	89 c1                	mov    %eax,%ecx
8100167b:	d3 e2                	shl    %cl,%edx
8100167d:	89 d0                	mov    %edx,%eax
8100167f:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81001684:	09 d8                	or     %ebx,%eax
81001686:	89 42 04             	mov    %eax,0x4(%edx)
81001689:	eb 28                	jmp    810016b3 <_free_r+0x39e>
8100168b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100168e:	8b 40 08             	mov    0x8(%eax),%eax
81001691:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001694:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001697:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100169a:	74 0e                	je     810016aa <_free_r+0x395>
8100169c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100169f:	8b 40 04             	mov    0x4(%eax),%eax
810016a2:	83 e0 fc             	and    $0xfffffffc,%eax
810016a5:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810016a8:	72 e1                	jb     8100168b <_free_r+0x376>
810016aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016ad:	8b 40 0c             	mov    0xc(%eax),%eax
810016b0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810016b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810016b9:	89 50 0c             	mov    %edx,0xc(%eax)
810016bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016bf:	8b 55 e8             	mov    -0x18(%ebp),%edx
810016c2:	89 50 08             	mov    %edx,0x8(%eax)
810016c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016c8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016cb:	89 50 08             	mov    %edx,0x8(%eax)
810016ce:	8b 45 ec             	mov    -0x14(%ebp),%eax
810016d1:	8b 50 08             	mov    0x8(%eax),%edx
810016d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016d7:	89 50 0c             	mov    %edx,0xc(%eax)
810016da:	83 ec 0c             	sub    $0xc,%esp
810016dd:	ff 75 08             	push   0x8(%ebp)
810016e0:	e8 c9 1d 00 00       	call   810034ae <__malloc_unlock>
810016e5:	83 c4 10             	add    $0x10,%esp
810016e8:	eb 01                	jmp    810016eb <_free_r+0x3d6>
810016ea:	90                   	nop
810016eb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810016ee:	c9                   	leave  
810016ef:	c3                   	ret    

810016f0 <_malloc_trim_r>:
810016f0:	55                   	push   %ebp
810016f1:	89 e5                	mov    %esp,%ebp
810016f3:	83 ec 28             	sub    $0x28,%esp
810016f6:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810016fd:	83 ec 0c             	sub    $0xc,%esp
81001700:	ff 75 08             	push   0x8(%ebp)
81001703:	e8 a0 1d 00 00       	call   810034a8 <__malloc_lock>
81001708:	83 c4 10             	add    $0x10,%esp
8100170b:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001710:	8b 40 08             	mov    0x8(%eax),%eax
81001713:	8b 40 04             	mov    0x4(%eax),%eax
81001716:	83 e0 fc             	and    $0xfffffffc,%eax
81001719:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100171c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100171f:	2b 45 0c             	sub    0xc(%ebp),%eax
81001722:	89 c2                	mov    %eax,%edx
81001724:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001727:	01 d0                	add    %edx,%eax
81001729:	83 e8 11             	sub    $0x11,%eax
8100172c:	ba 00 00 00 00       	mov    $0x0,%edx
81001731:	f7 75 f4             	divl   -0xc(%ebp)
81001734:	83 e8 01             	sub    $0x1,%eax
81001737:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8100173b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100173e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001741:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001744:	7d 18                	jge    8100175e <_malloc_trim_r+0x6e>
81001746:	83 ec 0c             	sub    $0xc,%esp
81001749:	ff 75 08             	push   0x8(%ebp)
8100174c:	e8 5d 1d 00 00       	call   810034ae <__malloc_unlock>
81001751:	83 c4 10             	add    $0x10,%esp
81001754:	b8 00 00 00 00       	mov    $0x0,%eax
81001759:	e9 f1 00 00 00       	jmp    8100184f <_malloc_trim_r+0x15f>
8100175e:	83 ec 08             	sub    $0x8,%esp
81001761:	6a 00                	push   $0x0
81001763:	ff 75 08             	push   0x8(%ebp)
81001766:	e8 1a 2c 00 00       	call   81004385 <_sbrk_r>
8100176b:	83 c4 10             	add    $0x10,%esp
8100176e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001771:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001776:	8b 50 08             	mov    0x8(%eax),%edx
81001779:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100177c:	01 d0                	add    %edx,%eax
8100177e:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81001781:	74 18                	je     8100179b <_malloc_trim_r+0xab>
81001783:	83 ec 0c             	sub    $0xc,%esp
81001786:	ff 75 08             	push   0x8(%ebp)
81001789:	e8 20 1d 00 00       	call   810034ae <__malloc_unlock>
8100178e:	83 c4 10             	add    $0x10,%esp
81001791:	b8 00 00 00 00       	mov    $0x0,%eax
81001796:	e9 b4 00 00 00       	jmp    8100184f <_malloc_trim_r+0x15f>
8100179b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100179e:	f7 d8                	neg    %eax
810017a0:	83 ec 08             	sub    $0x8,%esp
810017a3:	50                   	push   %eax
810017a4:	ff 75 08             	push   0x8(%ebp)
810017a7:	e8 d9 2b 00 00       	call   81004385 <_sbrk_r>
810017ac:	83 c4 10             	add    $0x10,%esp
810017af:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810017b2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810017b6:	75 61                	jne    81001819 <_malloc_trim_r+0x129>
810017b8:	83 ec 08             	sub    $0x8,%esp
810017bb:	6a 00                	push   $0x0
810017bd:	ff 75 08             	push   0x8(%ebp)
810017c0:	e8 c0 2b 00 00       	call   81004385 <_sbrk_r>
810017c5:	83 c4 10             	add    $0x10,%esp
810017c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810017cb:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810017d0:	8b 50 08             	mov    0x8(%eax),%edx
810017d3:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017d6:	29 d0                	sub    %edx,%eax
810017d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810017db:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810017df:	7e 23                	jle    81001804 <_malloc_trim_r+0x114>
810017e1:	8b 15 cc 79 00 81    	mov    0x810079cc,%edx
810017e7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017ea:	29 d0                	sub    %edx,%eax
810017ec:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810017f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017f4:	83 c8 01             	or     $0x1,%eax
810017f7:	89 c2                	mov    %eax,%edx
810017f9:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810017fe:	8b 40 08             	mov    0x8(%eax),%eax
81001801:	89 50 04             	mov    %edx,0x4(%eax)
81001804:	83 ec 0c             	sub    $0xc,%esp
81001807:	ff 75 08             	push   0x8(%ebp)
8100180a:	e8 9f 1c 00 00       	call   810034ae <__malloc_unlock>
8100180f:	83 c4 10             	add    $0x10,%esp
81001812:	b8 00 00 00 00       	mov    $0x0,%eax
81001817:	eb 36                	jmp    8100184f <_malloc_trim_r+0x15f>
81001819:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100181c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100181f:	83 c8 01             	or     $0x1,%eax
81001822:	89 c2                	mov    %eax,%edx
81001824:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81001829:	8b 40 08             	mov    0x8(%eax),%eax
8100182c:	89 50 04             	mov    %edx,0x4(%eax)
8100182f:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81001834:	2b 45 ec             	sub    -0x14(%ebp),%eax
81001837:	a3 c0 81 00 81       	mov    %eax,0x810081c0
8100183c:	83 ec 0c             	sub    $0xc,%esp
8100183f:	ff 75 08             	push   0x8(%ebp)
81001842:	e8 67 1c 00 00       	call   810034ae <__malloc_unlock>
81001847:	83 c4 10             	add    $0x10,%esp
8100184a:	b8 01 00 00 00       	mov    $0x1,%eax
8100184f:	c9                   	leave  
81001850:	c3                   	ret    

81001851 <_fwalk>:
81001851:	55                   	push   %ebp
81001852:	89 e5                	mov    %esp,%ebp
81001854:	57                   	push   %edi
81001855:	56                   	push   %esi
81001856:	53                   	push   %ebx
81001857:	83 ec 1c             	sub    $0x1c,%esp
8100185a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001861:	8b 45 08             	mov    0x8(%ebp),%eax
81001864:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8100186a:	eb 3e                	jmp    810018aa <_fwalk+0x59>
8100186c:	8b 5e 08             	mov    0x8(%esi),%ebx
8100186f:	8b 7e 04             	mov    0x4(%esi),%edi
81001872:	eb 2d                	jmp    810018a1 <_fwalk+0x50>
81001874:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001878:	66 85 c0             	test   %ax,%ax
8100187b:	74 21                	je     8100189e <_fwalk+0x4d>
8100187d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001881:	66 83 f8 01          	cmp    $0x1,%ax
81001885:	74 17                	je     8100189e <_fwalk+0x4d>
81001887:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100188b:	66 83 f8 ff          	cmp    $0xffff,%ax
8100188f:	74 0d                	je     8100189e <_fwalk+0x4d>
81001891:	83 ec 0c             	sub    $0xc,%esp
81001894:	53                   	push   %ebx
81001895:	ff 55 0c             	call   *0xc(%ebp)
81001898:	83 c4 10             	add    $0x10,%esp
8100189b:	09 45 e4             	or     %eax,-0x1c(%ebp)
8100189e:	83 c3 68             	add    $0x68,%ebx
810018a1:	83 ef 01             	sub    $0x1,%edi
810018a4:	85 ff                	test   %edi,%edi
810018a6:	79 cc                	jns    81001874 <_fwalk+0x23>
810018a8:	8b 36                	mov    (%esi),%esi
810018aa:	85 f6                	test   %esi,%esi
810018ac:	75 be                	jne    8100186c <_fwalk+0x1b>
810018ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018b1:	8d 65 f4             	lea    -0xc(%ebp),%esp
810018b4:	5b                   	pop    %ebx
810018b5:	5e                   	pop    %esi
810018b6:	5f                   	pop    %edi
810018b7:	5d                   	pop    %ebp
810018b8:	c3                   	ret    

810018b9 <_fwalk_reent>:
810018b9:	55                   	push   %ebp
810018ba:	89 e5                	mov    %esp,%ebp
810018bc:	57                   	push   %edi
810018bd:	56                   	push   %esi
810018be:	53                   	push   %ebx
810018bf:	83 ec 1c             	sub    $0x1c,%esp
810018c2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810018c9:	8b 45 08             	mov    0x8(%ebp),%eax
810018cc:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
810018d2:	eb 41                	jmp    81001915 <_fwalk_reent+0x5c>
810018d4:	8b 5e 08             	mov    0x8(%esi),%ebx
810018d7:	8b 7e 04             	mov    0x4(%esi),%edi
810018da:	eb 30                	jmp    8100190c <_fwalk_reent+0x53>
810018dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810018e0:	66 85 c0             	test   %ax,%ax
810018e3:	74 24                	je     81001909 <_fwalk_reent+0x50>
810018e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810018e9:	66 83 f8 01          	cmp    $0x1,%ax
810018ed:	74 1a                	je     81001909 <_fwalk_reent+0x50>
810018ef:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810018f3:	66 83 f8 ff          	cmp    $0xffff,%ax
810018f7:	74 10                	je     81001909 <_fwalk_reent+0x50>
810018f9:	83 ec 08             	sub    $0x8,%esp
810018fc:	53                   	push   %ebx
810018fd:	ff 75 08             	push   0x8(%ebp)
81001900:	ff 55 0c             	call   *0xc(%ebp)
81001903:	83 c4 10             	add    $0x10,%esp
81001906:	09 45 e4             	or     %eax,-0x1c(%ebp)
81001909:	83 c3 68             	add    $0x68,%ebx
8100190c:	83 ef 01             	sub    $0x1,%edi
8100190f:	85 ff                	test   %edi,%edi
81001911:	79 c9                	jns    810018dc <_fwalk_reent+0x23>
81001913:	8b 36                	mov    (%esi),%esi
81001915:	85 f6                	test   %esi,%esi
81001917:	75 bb                	jne    810018d4 <_fwalk_reent+0x1b>
81001919:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100191c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100191f:	5b                   	pop    %ebx
81001920:	5e                   	pop    %esi
81001921:	5f                   	pop    %edi
81001922:	5d                   	pop    %ebp
81001923:	c3                   	ret    

81001924 <_fwrite_r>:
81001924:	55                   	push   %ebp
81001925:	89 e5                	mov    %esp,%ebp
81001927:	83 ec 28             	sub    $0x28,%esp
8100192a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100192d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001930:	8b 45 14             	mov    0x14(%ebp),%eax
81001933:	0f af 45 10          	imul   0x10(%ebp),%eax
81001937:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100193a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100193d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001940:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001943:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001946:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001949:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100194c:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001953:	8b 45 08             	mov    0x8(%ebp),%eax
81001956:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001959:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100195d:	74 18                	je     81001977 <_fwrite_r+0x53>
8100195f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001962:	8b 40 38             	mov    0x38(%eax),%eax
81001965:	85 c0                	test   %eax,%eax
81001967:	75 0e                	jne    81001977 <_fwrite_r+0x53>
81001969:	83 ec 0c             	sub    $0xc,%esp
8100196c:	ff 75 f0             	push   -0x10(%ebp)
8100196f:	e8 3f f8 ff ff       	call   810011b3 <__sinit>
81001974:	83 c4 10             	add    $0x10,%esp
81001977:	8b 45 18             	mov    0x18(%ebp),%eax
8100197a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100197e:	98                   	cwtl   
8100197f:	25 00 20 00 00       	and    $0x2000,%eax
81001984:	85 c0                	test   %eax,%eax
81001986:	75 24                	jne    810019ac <_fwrite_r+0x88>
81001988:	8b 45 18             	mov    0x18(%ebp),%eax
8100198b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100198f:	80 cc 20             	or     $0x20,%ah
81001992:	89 c2                	mov    %eax,%edx
81001994:	8b 45 18             	mov    0x18(%ebp),%eax
81001997:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100199b:	8b 45 18             	mov    0x18(%ebp),%eax
8100199e:	8b 40 64             	mov    0x64(%eax),%eax
810019a1:	80 e4 df             	and    $0xdf,%ah
810019a4:	89 c2                	mov    %eax,%edx
810019a6:	8b 45 18             	mov    0x18(%ebp),%eax
810019a9:	89 50 64             	mov    %edx,0x64(%eax)
810019ac:	83 ec 04             	sub    $0x4,%esp
810019af:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810019b2:	50                   	push   %eax
810019b3:	ff 75 18             	push   0x18(%ebp)
810019b6:	ff 75 08             	push   0x8(%ebp)
810019b9:	e8 16 39 00 00       	call   810052d4 <__sfvwrite_r>
810019be:	83 c4 10             	add    $0x10,%esp
810019c1:	85 c0                	test   %eax,%eax
810019c3:	75 05                	jne    810019ca <_fwrite_r+0xa6>
810019c5:	8b 45 14             	mov    0x14(%ebp),%eax
810019c8:	eb 10                	jmp    810019da <_fwrite_r+0xb6>
810019ca:	8b 55 ec             	mov    -0x14(%ebp),%edx
810019cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019d0:	29 d0                	sub    %edx,%eax
810019d2:	ba 00 00 00 00       	mov    $0x0,%edx
810019d7:	f7 75 10             	divl   0x10(%ebp)
810019da:	c9                   	leave  
810019db:	c3                   	ret    

810019dc <fwrite>:
810019dc:	55                   	push   %ebp
810019dd:	89 e5                	mov    %esp,%ebp
810019df:	83 ec 08             	sub    $0x8,%esp
810019e2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810019e7:	83 ec 0c             	sub    $0xc,%esp
810019ea:	ff 75 14             	push   0x14(%ebp)
810019ed:	ff 75 10             	push   0x10(%ebp)
810019f0:	ff 75 0c             	push   0xc(%ebp)
810019f3:	ff 75 08             	push   0x8(%ebp)
810019f6:	50                   	push   %eax
810019f7:	e8 28 ff ff ff       	call   81001924 <_fwrite_r>
810019fc:	83 c4 20             	add    $0x20,%esp
810019ff:	c9                   	leave  
81001a00:	c3                   	ret    

81001a01 <reverse_argv_elements>:
81001a01:	55                   	push   %ebp
81001a02:	89 e5                	mov    %esp,%ebp
81001a04:	83 ec 10             	sub    $0x10,%esp
81001a07:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81001a0e:	eb 5e                	jmp    81001a6e <reverse_argv_elements+0x6d>
81001a10:	8b 45 fc             	mov    -0x4(%ebp),%eax
81001a13:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a1a:	8b 45 08             	mov    0x8(%ebp),%eax
81001a1d:	01 d0                	add    %edx,%eax
81001a1f:	8b 00                	mov    (%eax),%eax
81001a21:	89 45 f8             	mov    %eax,-0x8(%ebp)
81001a24:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a27:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001a2a:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001a2f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a36:	8b 45 08             	mov    0x8(%ebp),%eax
81001a39:	01 d0                	add    %edx,%eax
81001a3b:	8b 55 fc             	mov    -0x4(%ebp),%edx
81001a3e:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001a45:	8b 55 08             	mov    0x8(%ebp),%edx
81001a48:	01 ca                	add    %ecx,%edx
81001a4a:	8b 00                	mov    (%eax),%eax
81001a4c:	89 02                	mov    %eax,(%edx)
81001a4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a51:	2b 45 fc             	sub    -0x4(%ebp),%eax
81001a54:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81001a59:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001a60:	8b 45 08             	mov    0x8(%ebp),%eax
81001a63:	01 c2                	add    %eax,%edx
81001a65:	8b 45 f8             	mov    -0x8(%ebp),%eax
81001a68:	89 02                	mov    %eax,(%edx)
81001a6a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81001a6e:	8b 45 0c             	mov    0xc(%ebp),%eax
81001a71:	d1 f8                	sar    %eax
81001a73:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81001a76:	7c 98                	jl     81001a10 <reverse_argv_elements+0xf>
81001a78:	90                   	nop
81001a79:	90                   	nop
81001a7a:	c9                   	leave  
81001a7b:	c3                   	ret    

81001a7c <permute>:
81001a7c:	55                   	push   %ebp
81001a7d:	89 e5                	mov    %esp,%ebp
81001a7f:	ff 75 0c             	push   0xc(%ebp)
81001a82:	ff 75 08             	push   0x8(%ebp)
81001a85:	e8 77 ff ff ff       	call   81001a01 <reverse_argv_elements>
81001a8a:	83 c4 08             	add    $0x8,%esp
81001a8d:	8b 55 0c             	mov    0xc(%ebp),%edx
81001a90:	8b 45 10             	mov    0x10(%ebp),%eax
81001a93:	01 d0                	add    %edx,%eax
81001a95:	50                   	push   %eax
81001a96:	ff 75 08             	push   0x8(%ebp)
81001a99:	e8 63 ff ff ff       	call   81001a01 <reverse_argv_elements>
81001a9e:	83 c4 08             	add    $0x8,%esp
81001aa1:	ff 75 10             	push   0x10(%ebp)
81001aa4:	ff 75 08             	push   0x8(%ebp)
81001aa7:	e8 55 ff ff ff       	call   81001a01 <reverse_argv_elements>
81001aac:	83 c4 08             	add    $0x8,%esp
81001aaf:	90                   	nop
81001ab0:	c9                   	leave  
81001ab1:	c3                   	ret    

81001ab2 <is_option>:
81001ab2:	55                   	push   %ebp
81001ab3:	89 e5                	mov    %esp,%ebp
81001ab5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001ab9:	74 1a                	je     81001ad5 <is_option+0x23>
81001abb:	8b 45 08             	mov    0x8(%ebp),%eax
81001abe:	0f b6 00             	movzbl (%eax),%eax
81001ac1:	3c 2d                	cmp    $0x2d,%al
81001ac3:	74 10                	je     81001ad5 <is_option+0x23>
81001ac5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001ac9:	74 11                	je     81001adc <is_option+0x2a>
81001acb:	8b 45 08             	mov    0x8(%ebp),%eax
81001ace:	0f b6 00             	movzbl (%eax),%eax
81001ad1:	3c 2b                	cmp    $0x2b,%al
81001ad3:	75 07                	jne    81001adc <is_option+0x2a>
81001ad5:	b8 01 00 00 00       	mov    $0x1,%eax
81001ada:	eb 05                	jmp    81001ae1 <is_option+0x2f>
81001adc:	b8 00 00 00 00       	mov    $0x0,%eax
81001ae1:	5d                   	pop    %ebp
81001ae2:	c3                   	ret    

81001ae3 <read_globals>:
81001ae3:	55                   	push   %ebp
81001ae4:	89 e5                	mov    %esp,%ebp
81001ae6:	8b 15 74 81 00 81    	mov    0x81008174,%edx
81001aec:	8b 45 08             	mov    0x8(%ebp),%eax
81001aef:	89 10                	mov    %edx,(%eax)
81001af1:	8b 15 78 81 00 81    	mov    0x81008178,%edx
81001af7:	8b 45 08             	mov    0x8(%ebp),%eax
81001afa:	89 50 04             	mov    %edx,0x4(%eax)
81001afd:	8b 15 64 71 00 81    	mov    0x81007164,%edx
81001b03:	8b 45 08             	mov    0x8(%ebp),%eax
81001b06:	89 50 08             	mov    %edx,0x8(%eax)
81001b09:	8b 15 68 71 00 81    	mov    0x81007168,%edx
81001b0f:	8b 45 08             	mov    0x8(%ebp),%eax
81001b12:	89 50 0c             	mov    %edx,0xc(%eax)
81001b15:	8b 15 7c 81 00 81    	mov    0x8100817c,%edx
81001b1b:	8b 45 08             	mov    0x8(%ebp),%eax
81001b1e:	89 50 10             	mov    %edx,0x10(%eax)
81001b21:	8b 15 80 81 00 81    	mov    0x81008180,%edx
81001b27:	8b 45 08             	mov    0x8(%ebp),%eax
81001b2a:	89 50 14             	mov    %edx,0x14(%eax)
81001b2d:	8b 15 84 81 00 81    	mov    0x81008184,%edx
81001b33:	8b 45 08             	mov    0x8(%ebp),%eax
81001b36:	89 50 18             	mov    %edx,0x18(%eax)
81001b39:	90                   	nop
81001b3a:	5d                   	pop    %ebp
81001b3b:	c3                   	ret    

81001b3c <write_globals>:
81001b3c:	55                   	push   %ebp
81001b3d:	89 e5                	mov    %esp,%ebp
81001b3f:	8b 45 08             	mov    0x8(%ebp),%eax
81001b42:	8b 00                	mov    (%eax),%eax
81001b44:	a3 74 81 00 81       	mov    %eax,0x81008174
81001b49:	8b 45 08             	mov    0x8(%ebp),%eax
81001b4c:	8b 40 04             	mov    0x4(%eax),%eax
81001b4f:	a3 78 81 00 81       	mov    %eax,0x81008178
81001b54:	8b 45 08             	mov    0x8(%ebp),%eax
81001b57:	8b 40 08             	mov    0x8(%eax),%eax
81001b5a:	a3 64 71 00 81       	mov    %eax,0x81007164
81001b5f:	8b 45 08             	mov    0x8(%ebp),%eax
81001b62:	8b 40 0c             	mov    0xc(%eax),%eax
81001b65:	a3 68 71 00 81       	mov    %eax,0x81007168
81001b6a:	8b 45 08             	mov    0x8(%ebp),%eax
81001b6d:	8b 40 10             	mov    0x10(%eax),%eax
81001b70:	a3 7c 81 00 81       	mov    %eax,0x8100817c
81001b75:	8b 45 08             	mov    0x8(%ebp),%eax
81001b78:	8b 40 14             	mov    0x14(%eax),%eax
81001b7b:	a3 80 81 00 81       	mov    %eax,0x81008180
81001b80:	8b 45 08             	mov    0x8(%ebp),%eax
81001b83:	8b 40 18             	mov    0x18(%eax),%eax
81001b86:	a3 84 81 00 81       	mov    %eax,0x81008184
81001b8b:	90                   	nop
81001b8c:	5d                   	pop    %ebp
81001b8d:	c3                   	ret    

81001b8e <getopt_internal>:
81001b8e:	55                   	push   %ebp
81001b8f:	89 e5                	mov    %esp,%ebp
81001b91:	53                   	push   %ebx
81001b92:	83 ec 34             	sub    $0x34,%esp
81001b95:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81001b9c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001ba3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001baa:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001bb1:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001bb8:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001bbf:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81001bc6:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001bcd:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81001bd4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81001bd8:	74 35                	je     81001c0f <getopt_internal+0x81>
81001bda:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001bde:	74 2f                	je     81001c0f <getopt_internal+0x81>
81001be0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001be4:	75 06                	jne    81001bec <getopt_internal+0x5e>
81001be6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001bea:	74 23                	je     81001c0f <getopt_internal+0x81>
81001bec:	8b 45 20             	mov    0x20(%ebp),%eax
81001bef:	8b 40 04             	mov    0x4(%eax),%eax
81001bf2:	39 45 08             	cmp    %eax,0x8(%ebp)
81001bf5:	7e 18                	jle    81001c0f <getopt_internal+0x81>
81001bf7:	8b 45 20             	mov    0x20(%ebp),%eax
81001bfa:	8b 40 04             	mov    0x4(%eax),%eax
81001bfd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c04:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c07:	01 d0                	add    %edx,%eax
81001c09:	8b 00                	mov    (%eax),%eax
81001c0b:	85 c0                	test   %eax,%eax
81001c0d:	75 0a                	jne    81001c19 <getopt_internal+0x8b>
81001c0f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c14:	e9 85 0a 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001c19:	8b 45 20             	mov    0x20(%ebp),%eax
81001c1c:	8b 40 04             	mov    0x4(%eax),%eax
81001c1f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c26:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c29:	01 d0                	add    %edx,%eax
81001c2b:	8b 00                	mov    (%eax),%eax
81001c2d:	83 ec 08             	sub    $0x8,%esp
81001c30:	68 64 6d 00 81       	push   $0x81006d64
81001c35:	50                   	push   %eax
81001c36:	e8 a1 29 00 00       	call   810045dc <strcmp>
81001c3b:	83 c4 10             	add    $0x10,%esp
81001c3e:	85 c0                	test   %eax,%eax
81001c40:	75 19                	jne    81001c5b <getopt_internal+0xcd>
81001c42:	8b 45 20             	mov    0x20(%ebp),%eax
81001c45:	8b 40 04             	mov    0x4(%eax),%eax
81001c48:	8d 50 01             	lea    0x1(%eax),%edx
81001c4b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c4e:	89 50 04             	mov    %edx,0x4(%eax)
81001c51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c56:	e9 43 0a 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001c5b:	8b 45 20             	mov    0x20(%ebp),%eax
81001c5e:	8b 40 04             	mov    0x4(%eax),%eax
81001c61:	85 c0                	test   %eax,%eax
81001c63:	75 28                	jne    81001c8d <getopt_internal+0xff>
81001c65:	8b 45 20             	mov    0x20(%ebp),%eax
81001c68:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001c6f:	8b 45 20             	mov    0x20(%ebp),%eax
81001c72:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81001c79:	8b 45 20             	mov    0x20(%ebp),%eax
81001c7c:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001c83:	8b 45 20             	mov    0x20(%ebp),%eax
81001c86:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001c8d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001c91:	74 33                	je     81001cc6 <getopt_internal+0x138>
81001c93:	8b 45 10             	mov    0x10(%ebp),%eax
81001c96:	0f b6 00             	movzbl (%eax),%eax
81001c99:	3c 2d                	cmp    $0x2d,%al
81001c9b:	74 0a                	je     81001ca7 <getopt_internal+0x119>
81001c9d:	8b 45 10             	mov    0x10(%ebp),%eax
81001ca0:	0f b6 00             	movzbl (%eax),%eax
81001ca3:	3c 2b                	cmp    $0x2b,%al
81001ca5:	75 1f                	jne    81001cc6 <getopt_internal+0x138>
81001ca7:	8b 45 10             	mov    0x10(%ebp),%eax
81001caa:	0f b6 00             	movzbl (%eax),%eax
81001cad:	3c 2d                	cmp    $0x2d,%al
81001caf:	75 07                	jne    81001cb8 <getopt_internal+0x12a>
81001cb1:	b8 01 00 00 00       	mov    $0x1,%eax
81001cb6:	eb 05                	jmp    81001cbd <getopt_internal+0x12f>
81001cb8:	b8 02 00 00 00       	mov    $0x2,%eax
81001cbd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001cc0:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001cc4:	eb 23                	jmp    81001ce9 <getopt_internal+0x15b>
81001cc6:	83 ec 0c             	sub    $0xc,%esp
81001cc9:	68 67 6d 00 81       	push   $0x81006d67
81001cce:	e8 bf 3a 00 00       	call   81005792 <getenv>
81001cd3:	83 c4 10             	add    $0x10,%esp
81001cd6:	85 c0                	test   %eax,%eax
81001cd8:	74 07                	je     81001ce1 <getopt_internal+0x153>
81001cda:	b8 02 00 00 00       	mov    $0x2,%eax
81001cdf:	eb 05                	jmp    81001ce6 <getopt_internal+0x158>
81001ce1:	b8 00 00 00 00       	mov    $0x0,%eax
81001ce6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ce9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81001ced:	74 15                	je     81001d04 <getopt_internal+0x176>
81001cef:	8b 45 10             	mov    0x10(%ebp),%eax
81001cf2:	0f b6 00             	movzbl (%eax),%eax
81001cf5:	3c 3a                	cmp    $0x3a,%al
81001cf7:	75 0b                	jne    81001d04 <getopt_internal+0x176>
81001cf9:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81001cfd:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81001d04:	8b 45 20             	mov    0x20(%ebp),%eax
81001d07:	8b 40 10             	mov    0x10(%eax),%eax
81001d0a:	83 f8 01             	cmp    $0x1,%eax
81001d0d:	0f 85 a2 01 00 00    	jne    81001eb5 <getopt_internal+0x327>
81001d13:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
81001d17:	0f 84 02 01 00 00    	je     81001e1f <getopt_internal+0x291>
81001d1d:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81001d21:	0f 84 56 01 00 00    	je     81001e7d <getopt_internal+0x2ef>
81001d27:	8b 45 20             	mov    0x20(%ebp),%eax
81001d2a:	8b 50 04             	mov    0x4(%eax),%edx
81001d2d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d30:	89 50 14             	mov    %edx,0x14(%eax)
81001d33:	8b 45 20             	mov    0x20(%ebp),%eax
81001d36:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001d3d:	eb 1e                	jmp    81001d5d <getopt_internal+0x1cf>
81001d3f:	8b 45 20             	mov    0x20(%ebp),%eax
81001d42:	8b 40 04             	mov    0x4(%eax),%eax
81001d45:	8d 50 01             	lea    0x1(%eax),%edx
81001d48:	8b 45 20             	mov    0x20(%ebp),%eax
81001d4b:	89 50 04             	mov    %edx,0x4(%eax)
81001d4e:	8b 45 20             	mov    0x20(%ebp),%eax
81001d51:	8b 40 18             	mov    0x18(%eax),%eax
81001d54:	8d 50 01             	lea    0x1(%eax),%edx
81001d57:	8b 45 20             	mov    0x20(%ebp),%eax
81001d5a:	89 50 18             	mov    %edx,0x18(%eax)
81001d5d:	8b 45 20             	mov    0x20(%ebp),%eax
81001d60:	8b 40 04             	mov    0x4(%eax),%eax
81001d63:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d6d:	01 d0                	add    %edx,%eax
81001d6f:	8b 00                	mov    (%eax),%eax
81001d71:	83 ec 08             	sub    $0x8,%esp
81001d74:	ff 75 1c             	push   0x1c(%ebp)
81001d77:	50                   	push   %eax
81001d78:	e8 35 fd ff ff       	call   81001ab2 <is_option>
81001d7d:	83 c4 10             	add    $0x10,%esp
81001d80:	85 c0                	test   %eax,%eax
81001d82:	74 bb                	je     81001d3f <getopt_internal+0x1b1>
81001d84:	8b 45 20             	mov    0x20(%ebp),%eax
81001d87:	8b 40 04             	mov    0x4(%eax),%eax
81001d8a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001d91:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d94:	01 d0                	add    %edx,%eax
81001d96:	8b 00                	mov    (%eax),%eax
81001d98:	85 c0                	test   %eax,%eax
81001d9a:	75 16                	jne    81001db2 <getopt_internal+0x224>
81001d9c:	8b 45 20             	mov    0x20(%ebp),%eax
81001d9f:	8b 50 14             	mov    0x14(%eax),%edx
81001da2:	8b 45 20             	mov    0x20(%ebp),%eax
81001da5:	89 50 04             	mov    %edx,0x4(%eax)
81001da8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001dad:	e9 ec 08 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001db2:	8b 45 20             	mov    0x20(%ebp),%eax
81001db5:	8b 40 04             	mov    0x4(%eax),%eax
81001db8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001dbf:	8b 45 0c             	mov    0xc(%ebp),%eax
81001dc2:	01 d0                	add    %edx,%eax
81001dc4:	8b 00                	mov    (%eax),%eax
81001dc6:	83 ec 08             	sub    $0x8,%esp
81001dc9:	68 64 6d 00 81       	push   $0x81006d64
81001dce:	50                   	push   %eax
81001dcf:	e8 08 28 00 00       	call   810045dc <strcmp>
81001dd4:	83 c4 10             	add    $0x10,%esp
81001dd7:	85 c0                	test   %eax,%eax
81001dd9:	0f 85 cf 00 00 00    	jne    81001eae <getopt_internal+0x320>
81001ddf:	8b 45 20             	mov    0x20(%ebp),%eax
81001de2:	8b 40 18             	mov    0x18(%eax),%eax
81001de5:	8b 55 20             	mov    0x20(%ebp),%edx
81001de8:	8b 52 14             	mov    0x14(%edx),%edx
81001deb:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81001df2:	8b 55 0c             	mov    0xc(%ebp),%edx
81001df5:	01 ca                	add    %ecx,%edx
81001df7:	83 ec 04             	sub    $0x4,%esp
81001dfa:	6a 01                	push   $0x1
81001dfc:	50                   	push   %eax
81001dfd:	52                   	push   %edx
81001dfe:	e8 79 fc ff ff       	call   81001a7c <permute>
81001e03:	83 c4 10             	add    $0x10,%esp
81001e06:	8b 45 20             	mov    0x20(%ebp),%eax
81001e09:	8b 40 14             	mov    0x14(%eax),%eax
81001e0c:	8d 50 01             	lea    0x1(%eax),%edx
81001e0f:	8b 45 20             	mov    0x20(%ebp),%eax
81001e12:	89 50 04             	mov    %edx,0x4(%eax)
81001e15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001e1a:	e9 7f 08 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001e1f:	8b 45 20             	mov    0x20(%ebp),%eax
81001e22:	8b 40 04             	mov    0x4(%eax),%eax
81001e25:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e2f:	01 d0                	add    %edx,%eax
81001e31:	8b 00                	mov    (%eax),%eax
81001e33:	83 ec 08             	sub    $0x8,%esp
81001e36:	ff 75 1c             	push   0x1c(%ebp)
81001e39:	50                   	push   %eax
81001e3a:	e8 73 fc ff ff       	call   81001ab2 <is_option>
81001e3f:	83 c4 10             	add    $0x10,%esp
81001e42:	85 c0                	test   %eax,%eax
81001e44:	75 6b                	jne    81001eb1 <getopt_internal+0x323>
81001e46:	8b 45 20             	mov    0x20(%ebp),%eax
81001e49:	8b 40 04             	mov    0x4(%eax),%eax
81001e4c:	8d 48 01             	lea    0x1(%eax),%ecx
81001e4f:	8b 55 20             	mov    0x20(%ebp),%edx
81001e52:	89 4a 04             	mov    %ecx,0x4(%edx)
81001e55:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e5c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e5f:	01 d0                	add    %edx,%eax
81001e61:	8b 10                	mov    (%eax),%edx
81001e63:	8b 45 20             	mov    0x20(%ebp),%eax
81001e66:	89 10                	mov    %edx,(%eax)
81001e68:	8b 45 20             	mov    0x20(%ebp),%eax
81001e6b:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
81001e72:	8b 45 20             	mov    0x20(%ebp),%eax
81001e75:	8b 40 0c             	mov    0xc(%eax),%eax
81001e78:	e9 21 08 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001e7d:	8b 45 20             	mov    0x20(%ebp),%eax
81001e80:	8b 40 04             	mov    0x4(%eax),%eax
81001e83:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001e8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e8d:	01 d0                	add    %edx,%eax
81001e8f:	8b 00                	mov    (%eax),%eax
81001e91:	83 ec 08             	sub    $0x8,%esp
81001e94:	ff 75 1c             	push   0x1c(%ebp)
81001e97:	50                   	push   %eax
81001e98:	e8 15 fc ff ff       	call   81001ab2 <is_option>
81001e9d:	83 c4 10             	add    $0x10,%esp
81001ea0:	85 c0                	test   %eax,%eax
81001ea2:	75 10                	jne    81001eb4 <getopt_internal+0x326>
81001ea4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ea9:	e9 f0 07 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001eae:	90                   	nop
81001eaf:	eb 04                	jmp    81001eb5 <getopt_internal+0x327>
81001eb1:	90                   	nop
81001eb2:	eb 01                	jmp    81001eb5 <getopt_internal+0x327>
81001eb4:	90                   	nop
81001eb5:	8b 45 20             	mov    0x20(%ebp),%eax
81001eb8:	8b 40 04             	mov    0x4(%eax),%eax
81001ebb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001ec2:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ec5:	01 d0                	add    %edx,%eax
81001ec7:	8b 00                	mov    (%eax),%eax
81001ec9:	85 c0                	test   %eax,%eax
81001ecb:	75 0a                	jne    81001ed7 <getopt_internal+0x349>
81001ecd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001ed2:	e9 c7 07 00 00       	jmp    8100269e <getopt_internal+0xb10>
81001ed7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81001edb:	0f 84 15 03 00 00    	je     810021f6 <getopt_internal+0x668>
81001ee1:	8b 45 20             	mov    0x20(%ebp),%eax
81001ee4:	8b 40 04             	mov    0x4(%eax),%eax
81001ee7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001eee:	8b 45 0c             	mov    0xc(%ebp),%eax
81001ef1:	01 d0                	add    %edx,%eax
81001ef3:	8b 00                	mov    (%eax),%eax
81001ef5:	83 ec 04             	sub    $0x4,%esp
81001ef8:	6a 02                	push   $0x2
81001efa:	68 64 6d 00 81       	push   $0x81006d64
81001eff:	50                   	push   %eax
81001f00:	e8 80 14 00 00       	call   81003385 <memcmp>
81001f05:	83 c4 10             	add    $0x10,%esp
81001f08:	85 c0                	test   %eax,%eax
81001f0a:	74 29                	je     81001f35 <getopt_internal+0x3a7>
81001f0c:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81001f10:	0f 84 e0 02 00 00    	je     810021f6 <getopt_internal+0x668>
81001f16:	8b 45 20             	mov    0x20(%ebp),%eax
81001f19:	8b 40 04             	mov    0x4(%eax),%eax
81001f1c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f23:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f26:	01 d0                	add    %edx,%eax
81001f28:	8b 00                	mov    (%eax),%eax
81001f2a:	0f b6 00             	movzbl (%eax),%eax
81001f2d:	3c 2b                	cmp    $0x2b,%al
81001f2f:	0f 85 c1 02 00 00    	jne    810021f6 <getopt_internal+0x668>
81001f35:	8b 45 20             	mov    0x20(%ebp),%eax
81001f38:	8b 40 10             	mov    0x10(%eax),%eax
81001f3b:	83 f8 01             	cmp    $0x1,%eax
81001f3e:	0f 85 b2 02 00 00    	jne    810021f6 <getopt_internal+0x668>
81001f44:	8b 45 20             	mov    0x20(%ebp),%eax
81001f47:	8b 40 04             	mov    0x4(%eax),%eax
81001f4a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f51:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f54:	01 d0                	add    %edx,%eax
81001f56:	8b 00                	mov    (%eax),%eax
81001f58:	83 ec 04             	sub    $0x4,%esp
81001f5b:	6a 02                	push   $0x2
81001f5d:	68 64 6d 00 81       	push   $0x81006d64
81001f62:	50                   	push   %eax
81001f63:	e8 1d 14 00 00       	call   81003385 <memcmp>
81001f68:	83 c4 10             	add    $0x10,%esp
81001f6b:	85 c0                	test   %eax,%eax
81001f6d:	75 0a                	jne    81001f79 <getopt_internal+0x3eb>
81001f6f:	8b 45 20             	mov    0x20(%ebp),%eax
81001f72:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
81001f79:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81001f80:	8b 45 20             	mov    0x20(%ebp),%eax
81001f83:	8b 40 04             	mov    0x4(%eax),%eax
81001f86:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001f8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f90:	01 d0                	add    %edx,%eax
81001f92:	8b 10                	mov    (%eax),%edx
81001f94:	8b 45 20             	mov    0x20(%ebp),%eax
81001f97:	8b 40 10             	mov    0x10(%eax),%eax
81001f9a:	01 d0                	add    %edx,%eax
81001f9c:	83 ec 08             	sub    $0x8,%esp
81001f9f:	6a 3d                	push   $0x3d
81001fa1:	50                   	push   %eax
81001fa2:	e8 39 25 00 00       	call   810044e0 <strchr>
81001fa7:	83 c4 10             	add    $0x10,%esp
81001faa:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fad:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001fb1:	75 4a                	jne    81001ffd <getopt_internal+0x46f>
81001fb3:	8b 45 20             	mov    0x20(%ebp),%eax
81001fb6:	8b 40 04             	mov    0x4(%eax),%eax
81001fb9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001fc0:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fc3:	01 d0                	add    %edx,%eax
81001fc5:	8b 00                	mov    (%eax),%eax
81001fc7:	83 ec 0c             	sub    $0xc,%esp
81001fca:	50                   	push   %eax
81001fcb:	e8 c0 26 00 00       	call   81004690 <strlen>
81001fd0:	83 c4 10             	add    $0x10,%esp
81001fd3:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fd6:	8b 45 20             	mov    0x20(%ebp),%eax
81001fd9:	8b 40 04             	mov    0x4(%eax),%eax
81001fdc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001fe3:	8b 45 0c             	mov    0xc(%ebp),%eax
81001fe6:	01 d0                	add    %edx,%eax
81001fe8:	8b 10                	mov    (%eax),%edx
81001fea:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fed:	01 d0                	add    %edx,%eax
81001fef:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001ff2:	8b 45 20             	mov    0x20(%ebp),%eax
81001ff5:	8b 40 10             	mov    0x10(%eax),%eax
81001ff8:	29 45 ec             	sub    %eax,-0x14(%ebp)
81001ffb:	eb 28                	jmp    81002025 <getopt_internal+0x497>
81001ffd:	8b 45 20             	mov    0x20(%ebp),%eax
81002000:	8b 40 04             	mov    0x4(%eax),%eax
81002003:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100200a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100200d:	01 d0                	add    %edx,%eax
8100200f:	8b 08                	mov    (%eax),%ecx
81002011:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002014:	29 c8                	sub    %ecx,%eax
81002016:	89 c2                	mov    %eax,%edx
81002018:	8b 45 20             	mov    0x20(%ebp),%eax
8100201b:	8b 48 10             	mov    0x10(%eax),%ecx
8100201e:	89 d0                	mov    %edx,%eax
81002020:	29 c8                	sub    %ecx,%eax
81002022:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002025:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100202c:	e9 95 01 00 00       	jmp    810021c6 <getopt_internal+0x638>
81002031:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002034:	c1 e0 04             	shl    $0x4,%eax
81002037:	89 c2                	mov    %eax,%edx
81002039:	8b 45 14             	mov    0x14(%ebp),%eax
8100203c:	01 d0                	add    %edx,%eax
8100203e:	8b 00                	mov    (%eax),%eax
81002040:	8b 55 20             	mov    0x20(%ebp),%edx
81002043:	8b 52 04             	mov    0x4(%edx),%edx
81002046:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
8100204d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002050:	01 ca                	add    %ecx,%edx
81002052:	8b 0a                	mov    (%edx),%ecx
81002054:	8b 55 20             	mov    0x20(%ebp),%edx
81002057:	8b 52 10             	mov    0x10(%edx),%edx
8100205a:	01 ca                	add    %ecx,%edx
8100205c:	83 ec 04             	sub    $0x4,%esp
8100205f:	ff 75 ec             	push   -0x14(%ebp)
81002062:	50                   	push   %eax
81002063:	52                   	push   %edx
81002064:	e8 1c 13 00 00       	call   81003385 <memcmp>
81002069:	83 c4 10             	add    $0x10,%esp
8100206c:	85 c0                	test   %eax,%eax
8100206e:	0f 85 4e 01 00 00    	jne    810021c2 <getopt_internal+0x634>
81002074:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002077:	c1 e0 04             	shl    $0x4,%eax
8100207a:	89 c2                	mov    %eax,%edx
8100207c:	8b 45 14             	mov    0x14(%ebp),%eax
8100207f:	01 d0                	add    %edx,%eax
81002081:	8b 00                	mov    (%eax),%eax
81002083:	83 ec 0c             	sub    $0xc,%esp
81002086:	50                   	push   %eax
81002087:	e8 04 26 00 00       	call   81004690 <strlen>
8100208c:	83 c4 10             	add    $0x10,%esp
8100208f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002092:	75 0b                	jne    8100209f <getopt_internal+0x511>
81002094:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002097:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100209a:	e9 3e 01 00 00       	jmp    810021dd <getopt_internal+0x64f>
8100209f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810020a3:	79 0b                	jns    810020b0 <getopt_internal+0x522>
810020a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810020ab:	e9 12 01 00 00       	jmp    810021c2 <getopt_internal+0x634>
810020b0:	8b 45 20             	mov    0x20(%ebp),%eax
810020b3:	8b 40 08             	mov    0x8(%eax),%eax
810020b6:	85 c0                	test   %eax,%eax
810020b8:	0f 84 ef 00 00 00    	je     810021ad <getopt_internal+0x61f>
810020be:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020c3:	8b 50 0c             	mov    0xc(%eax),%edx
810020c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810020c9:	8b 00                	mov    (%eax),%eax
810020cb:	83 ec 08             	sub    $0x8,%esp
810020ce:	52                   	push   %edx
810020cf:	50                   	push   %eax
810020d0:	e8 2b 30 00 00       	call   81005100 <fputs>
810020d5:	83 c4 10             	add    $0x10,%esp
810020d8:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020dd:	8b 40 0c             	mov    0xc(%eax),%eax
810020e0:	83 ec 08             	sub    $0x8,%esp
810020e3:	50                   	push   %eax
810020e4:	68 77 6d 00 81       	push   $0x81006d77
810020e9:	e8 12 30 00 00       	call   81005100 <fputs>
810020ee:	83 c4 10             	add    $0x10,%esp
810020f1:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810020f6:	8b 50 0c             	mov    0xc(%eax),%edx
810020f9:	8b 45 20             	mov    0x20(%ebp),%eax
810020fc:	8b 40 04             	mov    0x4(%eax),%eax
810020ff:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81002106:	8b 45 0c             	mov    0xc(%ebp),%eax
81002109:	01 c8                	add    %ecx,%eax
8100210b:	8b 00                	mov    (%eax),%eax
8100210d:	83 ec 08             	sub    $0x8,%esp
81002110:	52                   	push   %edx
81002111:	50                   	push   %eax
81002112:	e8 e9 2f 00 00       	call   81005100 <fputs>
81002117:	83 c4 10             	add    $0x10,%esp
8100211a:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100211f:	8b 40 0c             	mov    0xc(%eax),%eax
81002122:	83 ec 08             	sub    $0x8,%esp
81002125:	50                   	push   %eax
81002126:	68 82 6d 00 81       	push   $0x81006d82
8100212b:	e8 d0 2f 00 00       	call   81005100 <fputs>
81002130:	83 c4 10             	add    $0x10,%esp
81002133:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002138:	8b 50 0c             	mov    0xc(%eax),%edx
8100213b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100213e:	c1 e0 04             	shl    $0x4,%eax
81002141:	89 c1                	mov    %eax,%ecx
81002143:	8b 45 14             	mov    0x14(%ebp),%eax
81002146:	01 c8                	add    %ecx,%eax
81002148:	8b 00                	mov    (%eax),%eax
8100214a:	83 ec 08             	sub    $0x8,%esp
8100214d:	52                   	push   %edx
8100214e:	50                   	push   %eax
8100214f:	e8 ac 2f 00 00       	call   81005100 <fputs>
81002154:	83 c4 10             	add    $0x10,%esp
81002157:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100215c:	8b 40 0c             	mov    0xc(%eax),%eax
8100215f:	83 ec 08             	sub    $0x8,%esp
81002162:	50                   	push   %eax
81002163:	68 9f 6d 00 81       	push   $0x81006d9f
81002168:	e8 93 2f 00 00       	call   81005100 <fputs>
8100216d:	83 c4 10             	add    $0x10,%esp
81002170:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002175:	8b 50 0c             	mov    0xc(%eax),%edx
81002178:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100217b:	c1 e0 04             	shl    $0x4,%eax
8100217e:	89 c1                	mov    %eax,%ecx
81002180:	8b 45 14             	mov    0x14(%ebp),%eax
81002183:	01 c8                	add    %ecx,%eax
81002185:	8b 00                	mov    (%eax),%eax
81002187:	83 ec 08             	sub    $0x8,%esp
8100218a:	52                   	push   %edx
8100218b:	50                   	push   %eax
8100218c:	e8 6f 2f 00 00       	call   81005100 <fputs>
81002191:	83 c4 10             	add    $0x10,%esp
81002194:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002199:	8b 40 0c             	mov    0xc(%eax),%eax
8100219c:	83 ec 08             	sub    $0x8,%esp
8100219f:	50                   	push   %eax
810021a0:	68 a8 6d 00 81       	push   $0x81006da8
810021a5:	e8 56 2f 00 00       	call   81005100 <fputs>
810021aa:	83 c4 10             	add    $0x10,%esp
810021ad:	8b 45 20             	mov    0x20(%ebp),%eax
810021b0:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
810021b7:	8b 45 20             	mov    0x20(%ebp),%eax
810021ba:	8b 40 0c             	mov    0xc(%eax),%eax
810021bd:	e9 dc 04 00 00       	jmp    8100269e <getopt_internal+0xb10>
810021c2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810021c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810021c9:	c1 e0 04             	shl    $0x4,%eax
810021cc:	89 c2                	mov    %eax,%edx
810021ce:	8b 45 14             	mov    0x14(%ebp),%eax
810021d1:	01 d0                	add    %edx,%eax
810021d3:	8b 00                	mov    (%eax),%eax
810021d5:	85 c0                	test   %eax,%eax
810021d7:	0f 85 54 fe ff ff    	jne    81002031 <getopt_internal+0x4a3>
810021dd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810021e1:	78 13                	js     810021f6 <getopt_internal+0x668>
810021e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810021e6:	c1 e0 04             	shl    $0x4,%eax
810021e9:	89 c2                	mov    %eax,%edx
810021eb:	8b 45 14             	mov    0x14(%ebp),%eax
810021ee:	01 d0                	add    %edx,%eax
810021f0:	8b 40 04             	mov    0x4(%eax),%eax
810021f3:	89 45 e0             	mov    %eax,-0x20(%ebp)
810021f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810021fa:	0f 89 9a 01 00 00    	jns    8100239a <getopt_internal+0x80c>
81002200:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81002204:	0f 84 90 01 00 00    	je     8100239a <getopt_internal+0x80c>
8100220a:	8b 45 20             	mov    0x20(%ebp),%eax
8100220d:	8b 40 04             	mov    0x4(%eax),%eax
81002210:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002217:	8b 45 0c             	mov    0xc(%ebp),%eax
8100221a:	01 d0                	add    %edx,%eax
8100221c:	8b 10                	mov    (%eax),%edx
8100221e:	8b 45 20             	mov    0x20(%ebp),%eax
81002221:	8b 40 10             	mov    0x10(%eax),%eax
81002224:	01 d0                	add    %edx,%eax
81002226:	0f b6 00             	movzbl (%eax),%eax
81002229:	0f be c0             	movsbl %al,%eax
8100222c:	83 ec 08             	sub    $0x8,%esp
8100222f:	50                   	push   %eax
81002230:	ff 75 10             	push   0x10(%ebp)
81002233:	e8 a8 22 00 00       	call   810044e0 <strchr>
81002238:	83 c4 10             	add    $0x10,%esp
8100223b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100223e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002242:	0f 85 f1 00 00 00    	jne    81002339 <getopt_internal+0x7ab>
81002248:	8b 45 20             	mov    0x20(%ebp),%eax
8100224b:	8b 40 08             	mov    0x8(%eax),%eax
8100224e:	85 c0                	test   %eax,%eax
81002250:	0f 84 83 00 00 00    	je     810022d9 <getopt_internal+0x74b>
81002256:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100225b:	8b 50 0c             	mov    0xc(%eax),%edx
8100225e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002261:	8b 00                	mov    (%eax),%eax
81002263:	83 ec 08             	sub    $0x8,%esp
81002266:	52                   	push   %edx
81002267:	50                   	push   %eax
81002268:	e8 93 2e 00 00       	call   81005100 <fputs>
8100226d:	83 c4 10             	add    $0x10,%esp
81002270:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002275:	8b 40 0c             	mov    0xc(%eax),%eax
81002278:	83 ec 08             	sub    $0x8,%esp
8100227b:	50                   	push   %eax
8100227c:	68 ac 6d 00 81       	push   $0x81006dac
81002281:	e8 7a 2e 00 00       	call   81005100 <fputs>
81002286:	83 c4 10             	add    $0x10,%esp
81002289:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100228e:	8b 50 0c             	mov    0xc(%eax),%edx
81002291:	8b 45 20             	mov    0x20(%ebp),%eax
81002294:	8b 40 04             	mov    0x4(%eax),%eax
81002297:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100229e:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a1:	01 c8                	add    %ecx,%eax
810022a3:	8b 08                	mov    (%eax),%ecx
810022a5:	8b 45 20             	mov    0x20(%ebp),%eax
810022a8:	8b 40 10             	mov    0x10(%eax),%eax
810022ab:	01 c8                	add    %ecx,%eax
810022ad:	0f b6 00             	movzbl (%eax),%eax
810022b0:	0f be c0             	movsbl %al,%eax
810022b3:	83 ec 08             	sub    $0x8,%esp
810022b6:	52                   	push   %edx
810022b7:	50                   	push   %eax
810022b8:	e8 4f 2d 00 00       	call   8100500c <fputc>
810022bd:	83 c4 10             	add    $0x10,%esp
810022c0:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810022c5:	8b 40 0c             	mov    0xc(%eax),%eax
810022c8:	83 ec 08             	sub    $0x8,%esp
810022cb:	50                   	push   %eax
810022cc:	68 c3 6d 00 81       	push   $0x81006dc3
810022d1:	e8 2a 2e 00 00       	call   81005100 <fputs>
810022d6:	83 c4 10             	add    $0x10,%esp
810022d9:	8b 45 20             	mov    0x20(%ebp),%eax
810022dc:	8b 40 10             	mov    0x10(%eax),%eax
810022df:	8d 50 01             	lea    0x1(%eax),%edx
810022e2:	8b 45 20             	mov    0x20(%ebp),%eax
810022e5:	89 50 10             	mov    %edx,0x10(%eax)
810022e8:	8b 45 20             	mov    0x20(%ebp),%eax
810022eb:	8b 40 04             	mov    0x4(%eax),%eax
810022ee:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810022f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f8:	01 d0                	add    %edx,%eax
810022fa:	8b 10                	mov    (%eax),%edx
810022fc:	8b 45 20             	mov    0x20(%ebp),%eax
810022ff:	8b 40 10             	mov    0x10(%eax),%eax
81002302:	01 d0                	add    %edx,%eax
81002304:	0f b6 00             	movzbl (%eax),%eax
81002307:	84 c0                	test   %al,%al
81002309:	75 19                	jne    81002324 <getopt_internal+0x796>
8100230b:	8b 45 20             	mov    0x20(%ebp),%eax
8100230e:	8b 40 04             	mov    0x4(%eax),%eax
81002311:	8d 50 01             	lea    0x1(%eax),%edx
81002314:	8b 45 20             	mov    0x20(%ebp),%eax
81002317:	89 50 04             	mov    %edx,0x4(%eax)
8100231a:	8b 45 20             	mov    0x20(%ebp),%eax
8100231d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002324:	8b 45 20             	mov    0x20(%ebp),%eax
81002327:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100232e:	8b 45 20             	mov    0x20(%ebp),%eax
81002331:	8b 40 0c             	mov    0xc(%eax),%eax
81002334:	e9 65 03 00 00       	jmp    8100269e <getopt_internal+0xb10>
81002339:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100233c:	83 c0 01             	add    $0x1,%eax
8100233f:	0f b6 00             	movzbl (%eax),%eax
81002342:	3c 3a                	cmp    $0x3a,%al
81002344:	75 1b                	jne    81002361 <getopt_internal+0x7d3>
81002346:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002349:	83 c0 02             	add    $0x2,%eax
8100234c:	0f b6 00             	movzbl (%eax),%eax
8100234f:	3c 3a                	cmp    $0x3a,%al
81002351:	75 07                	jne    8100235a <getopt_internal+0x7cc>
81002353:	b8 02 00 00 00       	mov    $0x2,%eax
81002358:	eb 0c                	jmp    81002366 <getopt_internal+0x7d8>
8100235a:	b8 01 00 00 00       	mov    $0x1,%eax
8100235f:	eb 05                	jmp    81002366 <getopt_internal+0x7d8>
81002361:	b8 00 00 00 00       	mov    $0x0,%eax
81002366:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002369:	8b 45 20             	mov    0x20(%ebp),%eax
8100236c:	8b 40 04             	mov    0x4(%eax),%eax
8100236f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002376:	8b 45 0c             	mov    0xc(%ebp),%eax
81002379:	01 d0                	add    %edx,%eax
8100237b:	8b 10                	mov    (%eax),%edx
8100237d:	8b 45 20             	mov    0x20(%ebp),%eax
81002380:	8b 40 10             	mov    0x10(%eax),%eax
81002383:	83 c0 01             	add    $0x1,%eax
81002386:	01 d0                	add    %edx,%eax
81002388:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100238b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100238e:	0f b6 00             	movzbl (%eax),%eax
81002391:	0f be d0             	movsbl %al,%edx
81002394:	8b 45 20             	mov    0x20(%ebp),%eax
81002397:	89 50 0c             	mov    %edx,0xc(%eax)
8100239a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810023a1:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810023a5:	74 40                	je     810023e7 <getopt_internal+0x859>
810023a7:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810023ab:	0f 85 b0 01 00 00    	jne    81002561 <getopt_internal+0x9d3>
810023b1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023b4:	0f b6 00             	movzbl (%eax),%eax
810023b7:	3c 3d                	cmp    $0x3d,%al
810023b9:	75 04                	jne    810023bf <getopt_internal+0x831>
810023bb:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810023bf:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023c2:	0f b6 00             	movzbl (%eax),%eax
810023c5:	84 c0                	test   %al,%al
810023c7:	74 05                	je     810023ce <getopt_internal+0x840>
810023c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023cc:	eb 05                	jmp    810023d3 <getopt_internal+0x845>
810023ce:	b8 00 00 00 00       	mov    $0x0,%eax
810023d3:	8b 55 20             	mov    0x20(%ebp),%edx
810023d6:	89 02                	mov    %eax,(%edx)
810023d8:	8b 45 20             	mov    0x20(%ebp),%eax
810023db:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810023e2:	e9 d2 01 00 00       	jmp    810025b9 <getopt_internal+0xa2b>
810023e7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023ea:	0f b6 00             	movzbl (%eax),%eax
810023ed:	3c 3d                	cmp    $0x3d,%al
810023ef:	75 04                	jne    810023f5 <getopt_internal+0x867>
810023f1:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
810023f5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810023f8:	0f b6 00             	movzbl (%eax),%eax
810023fb:	84 c0                	test   %al,%al
810023fd:	74 17                	je     81002416 <getopt_internal+0x888>
810023ff:	8b 45 20             	mov    0x20(%ebp),%eax
81002402:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002405:	89 10                	mov    %edx,(%eax)
81002407:	8b 45 20             	mov    0x20(%ebp),%eax
8100240a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002411:	e9 a3 01 00 00       	jmp    810025b9 <getopt_internal+0xa2b>
81002416:	8b 45 20             	mov    0x20(%ebp),%eax
81002419:	8b 40 04             	mov    0x4(%eax),%eax
8100241c:	83 c0 01             	add    $0x1,%eax
8100241f:	39 45 08             	cmp    %eax,0x8(%ebp)
81002422:	0f 8f 0a 01 00 00    	jg     81002532 <getopt_internal+0x9a4>
81002428:	8b 45 20             	mov    0x20(%ebp),%eax
8100242b:	8b 40 08             	mov    0x8(%eax),%eax
8100242e:	85 c0                	test   %eax,%eax
81002430:	0f 84 d3 00 00 00    	je     81002509 <getopt_internal+0x97b>
81002436:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100243b:	8b 50 0c             	mov    0xc(%eax),%edx
8100243e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002441:	8b 00                	mov    (%eax),%eax
81002443:	83 ec 08             	sub    $0x8,%esp
81002446:	52                   	push   %edx
81002447:	50                   	push   %eax
81002448:	e8 b3 2c 00 00       	call   81005100 <fputs>
8100244d:	83 c4 10             	add    $0x10,%esp
81002450:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002455:	8b 40 0c             	mov    0xc(%eax),%eax
81002458:	83 ec 08             	sub    $0x8,%esp
8100245b:	50                   	push   %eax
8100245c:	68 c8 6d 00 81       	push   $0x81006dc8
81002461:	e8 9a 2c 00 00       	call   81005100 <fputs>
81002466:	83 c4 10             	add    $0x10,%esp
81002469:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100246d:	78 54                	js     810024c3 <getopt_internal+0x935>
8100246f:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002474:	8b 40 0c             	mov    0xc(%eax),%eax
81002477:	83 ec 08             	sub    $0x8,%esp
8100247a:	50                   	push   %eax
8100247b:	6a 2d                	push   $0x2d
8100247d:	e8 8a 2b 00 00       	call   8100500c <fputc>
81002482:	83 c4 10             	add    $0x10,%esp
81002485:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100248a:	8b 50 0c             	mov    0xc(%eax),%edx
8100248d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002490:	c1 e0 04             	shl    $0x4,%eax
81002493:	89 c1                	mov    %eax,%ecx
81002495:	8b 45 14             	mov    0x14(%ebp),%eax
81002498:	01 c8                	add    %ecx,%eax
8100249a:	8b 00                	mov    (%eax),%eax
8100249c:	83 ec 08             	sub    $0x8,%esp
8100249f:	52                   	push   %edx
810024a0:	50                   	push   %eax
810024a1:	e8 5a 2c 00 00       	call   81005100 <fputs>
810024a6:	83 c4 10             	add    $0x10,%esp
810024a9:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
810024ad:	74 07                	je     810024b6 <getopt_internal+0x928>
810024af:	ba 3a 00 00 00       	mov    $0x3a,%edx
810024b4:	eb 05                	jmp    810024bb <getopt_internal+0x92d>
810024b6:	ba 3f 00 00 00       	mov    $0x3f,%edx
810024bb:	8b 45 20             	mov    0x20(%ebp),%eax
810024be:	89 50 0c             	mov    %edx,0xc(%eax)
810024c1:	eb 2d                	jmp    810024f0 <getopt_internal+0x962>
810024c3:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810024c8:	8b 50 0c             	mov    0xc(%eax),%edx
810024cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810024ce:	0f b6 00             	movzbl (%eax),%eax
810024d1:	0f be c0             	movsbl %al,%eax
810024d4:	83 ec 08             	sub    $0x8,%esp
810024d7:	52                   	push   %edx
810024d8:	50                   	push   %eax
810024d9:	e8 2e 2b 00 00       	call   8100500c <fputc>
810024de:	83 c4 10             	add    $0x10,%esp
810024e1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810024e4:	0f b6 00             	movzbl (%eax),%eax
810024e7:	0f be d0             	movsbl %al,%edx
810024ea:	8b 45 20             	mov    0x20(%ebp),%eax
810024ed:	89 50 0c             	mov    %edx,0xc(%eax)
810024f0:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810024f5:	8b 40 0c             	mov    0xc(%eax),%eax
810024f8:	83 ec 08             	sub    $0x8,%esp
810024fb:	50                   	push   %eax
810024fc:	68 c3 6d 00 81       	push   $0x81006dc3
81002501:	e8 fa 2b 00 00       	call   81005100 <fputs>
81002506:	83 c4 10             	add    $0x10,%esp
81002509:	8b 45 20             	mov    0x20(%ebp),%eax
8100250c:	8b 40 04             	mov    0x4(%eax),%eax
8100250f:	8d 50 01             	lea    0x1(%eax),%edx
81002512:	8b 45 20             	mov    0x20(%ebp),%eax
81002515:	89 50 04             	mov    %edx,0x4(%eax)
81002518:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100251c:	74 0a                	je     81002528 <getopt_internal+0x99a>
8100251e:	b8 3a 00 00 00       	mov    $0x3a,%eax
81002523:	e9 76 01 00 00       	jmp    8100269e <getopt_internal+0xb10>
81002528:	b8 3f 00 00 00       	mov    $0x3f,%eax
8100252d:	e9 6c 01 00 00       	jmp    8100269e <getopt_internal+0xb10>
81002532:	8b 45 20             	mov    0x20(%ebp),%eax
81002535:	8b 40 04             	mov    0x4(%eax),%eax
81002538:	83 c0 01             	add    $0x1,%eax
8100253b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002542:	8b 45 0c             	mov    0xc(%ebp),%eax
81002545:	01 d0                	add    %edx,%eax
81002547:	8b 10                	mov    (%eax),%edx
81002549:	8b 45 20             	mov    0x20(%ebp),%eax
8100254c:	89 10                	mov    %edx,(%eax)
8100254e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81002555:	8b 45 20             	mov    0x20(%ebp),%eax
81002558:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100255f:	eb 58                	jmp    810025b9 <getopt_internal+0xa2b>
81002561:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002565:	79 3e                	jns    810025a5 <getopt_internal+0xa17>
81002567:	8b 45 20             	mov    0x20(%ebp),%eax
8100256a:	8b 40 10             	mov    0x10(%eax),%eax
8100256d:	8d 50 01             	lea    0x1(%eax),%edx
81002570:	8b 45 20             	mov    0x20(%ebp),%eax
81002573:	89 50 10             	mov    %edx,0x10(%eax)
81002576:	8b 45 20             	mov    0x20(%ebp),%eax
81002579:	8b 40 04             	mov    0x4(%eax),%eax
8100257c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002583:	8b 45 0c             	mov    0xc(%ebp),%eax
81002586:	01 d0                	add    %edx,%eax
81002588:	8b 10                	mov    (%eax),%edx
8100258a:	8b 45 20             	mov    0x20(%ebp),%eax
8100258d:	8b 40 10             	mov    0x10(%eax),%eax
81002590:	01 d0                	add    %edx,%eax
81002592:	0f b6 00             	movzbl (%eax),%eax
81002595:	84 c0                	test   %al,%al
81002597:	75 16                	jne    810025af <getopt_internal+0xa21>
81002599:	8b 45 20             	mov    0x20(%ebp),%eax
8100259c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810025a3:	eb 0a                	jmp    810025af <getopt_internal+0xa21>
810025a5:	8b 45 20             	mov    0x20(%ebp),%eax
810025a8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810025af:	8b 45 20             	mov    0x20(%ebp),%eax
810025b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810025b8:	90                   	nop
810025b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810025bd:	75 57                	jne    81002616 <getopt_internal+0xa88>
810025bf:	8b 45 20             	mov    0x20(%ebp),%eax
810025c2:	8b 40 10             	mov    0x10(%eax),%eax
810025c5:	83 f8 01             	cmp    $0x1,%eax
810025c8:	75 4c                	jne    81002616 <getopt_internal+0xa88>
810025ca:	8b 45 20             	mov    0x20(%ebp),%eax
810025cd:	8b 40 18             	mov    0x18(%eax),%eax
810025d0:	85 c0                	test   %eax,%eax
810025d2:	74 42                	je     81002616 <getopt_internal+0xa88>
810025d4:	8b 45 d8             	mov    -0x28(%ebp),%eax
810025d7:	8d 48 01             	lea    0x1(%eax),%ecx
810025da:	8b 45 20             	mov    0x20(%ebp),%eax
810025dd:	8b 40 18             	mov    0x18(%eax),%eax
810025e0:	8b 55 20             	mov    0x20(%ebp),%edx
810025e3:	8b 52 14             	mov    0x14(%edx),%edx
810025e6:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
810025ed:	8b 55 0c             	mov    0xc(%ebp),%edx
810025f0:	01 da                	add    %ebx,%edx
810025f2:	83 ec 04             	sub    $0x4,%esp
810025f5:	51                   	push   %ecx
810025f6:	50                   	push   %eax
810025f7:	52                   	push   %edx
810025f8:	e8 7f f4 ff ff       	call   81001a7c <permute>
810025fd:	83 c4 10             	add    $0x10,%esp
81002600:	8b 45 20             	mov    0x20(%ebp),%eax
81002603:	8b 40 14             	mov    0x14(%eax),%eax
81002606:	8d 50 01             	lea    0x1(%eax),%edx
81002609:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100260c:	01 c2                	add    %eax,%edx
8100260e:	8b 45 20             	mov    0x20(%ebp),%eax
81002611:	89 50 04             	mov    %edx,0x4(%eax)
81002614:	eb 1f                	jmp    81002635 <getopt_internal+0xaa7>
81002616:	8b 45 20             	mov    0x20(%ebp),%eax
81002619:	8b 40 10             	mov    0x10(%eax),%eax
8100261c:	83 f8 01             	cmp    $0x1,%eax
8100261f:	75 14                	jne    81002635 <getopt_internal+0xaa7>
81002621:	8b 45 20             	mov    0x20(%ebp),%eax
81002624:	8b 40 04             	mov    0x4(%eax),%eax
81002627:	8d 50 01             	lea    0x1(%eax),%edx
8100262a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100262d:	01 c2                	add    %eax,%edx
8100262f:	8b 45 20             	mov    0x20(%ebp),%eax
81002632:	89 50 04             	mov    %edx,0x4(%eax)
81002635:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002639:	78 5d                	js     81002698 <getopt_internal+0xb0a>
8100263b:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
8100263f:	74 08                	je     81002649 <getopt_internal+0xabb>
81002641:	8b 45 18             	mov    0x18(%ebp),%eax
81002644:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002647:	89 10                	mov    %edx,(%eax)
81002649:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100264c:	c1 e0 04             	shl    $0x4,%eax
8100264f:	89 c2                	mov    %eax,%edx
81002651:	8b 45 14             	mov    0x14(%ebp),%eax
81002654:	01 d0                	add    %edx,%eax
81002656:	8b 40 08             	mov    0x8(%eax),%eax
81002659:	85 c0                	test   %eax,%eax
8100265b:	74 29                	je     81002686 <getopt_internal+0xaf8>
8100265d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002660:	c1 e0 04             	shl    $0x4,%eax
81002663:	89 c2                	mov    %eax,%edx
81002665:	8b 45 14             	mov    0x14(%ebp),%eax
81002668:	01 c2                	add    %eax,%edx
8100266a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100266d:	c1 e0 04             	shl    $0x4,%eax
81002670:	89 c1                	mov    %eax,%ecx
81002672:	8b 45 14             	mov    0x14(%ebp),%eax
81002675:	01 c8                	add    %ecx,%eax
81002677:	8b 40 08             	mov    0x8(%eax),%eax
8100267a:	8b 52 0c             	mov    0xc(%edx),%edx
8100267d:	89 10                	mov    %edx,(%eax)
8100267f:	b8 00 00 00 00       	mov    $0x0,%eax
81002684:	eb 18                	jmp    8100269e <getopt_internal+0xb10>
81002686:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002689:	c1 e0 04             	shl    $0x4,%eax
8100268c:	89 c2                	mov    %eax,%edx
8100268e:	8b 45 14             	mov    0x14(%ebp),%eax
81002691:	01 d0                	add    %edx,%eax
81002693:	8b 40 0c             	mov    0xc(%eax),%eax
81002696:	eb 06                	jmp    8100269e <getopt_internal+0xb10>
81002698:	8b 45 20             	mov    0x20(%ebp),%eax
8100269b:	8b 40 0c             	mov    0xc(%eax),%eax
8100269e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810026a1:	c9                   	leave  
810026a2:	c3                   	ret    

810026a3 <getopt>:
810026a3:	55                   	push   %ebp
810026a4:	89 e5                	mov    %esp,%ebp
810026a6:	83 ec 28             	sub    $0x28,%esp
810026a9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026ac:	50                   	push   %eax
810026ad:	e8 31 f4 ff ff       	call   81001ae3 <read_globals>
810026b2:	83 c4 04             	add    $0x4,%esp
810026b5:	83 ec 04             	sub    $0x4,%esp
810026b8:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026bb:	50                   	push   %eax
810026bc:	6a 00                	push   $0x0
810026be:	6a 00                	push   $0x0
810026c0:	6a 00                	push   $0x0
810026c2:	ff 75 10             	push   0x10(%ebp)
810026c5:	ff 75 0c             	push   0xc(%ebp)
810026c8:	ff 75 08             	push   0x8(%ebp)
810026cb:	e8 be f4 ff ff       	call   81001b8e <getopt_internal>
810026d0:	83 c4 20             	add    $0x20,%esp
810026d3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026d6:	83 ec 0c             	sub    $0xc,%esp
810026d9:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026dc:	50                   	push   %eax
810026dd:	e8 5a f4 ff ff       	call   81001b3c <write_globals>
810026e2:	83 c4 10             	add    $0x10,%esp
810026e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026e8:	c9                   	leave  
810026e9:	c3                   	ret    

810026ea <getopt_long>:
810026ea:	55                   	push   %ebp
810026eb:	89 e5                	mov    %esp,%ebp
810026ed:	83 ec 28             	sub    $0x28,%esp
810026f0:	8d 45 d8             	lea    -0x28(%ebp),%eax
810026f3:	50                   	push   %eax
810026f4:	e8 ea f3 ff ff       	call   81001ae3 <read_globals>
810026f9:	83 c4 04             	add    $0x4,%esp
810026fc:	83 ec 04             	sub    $0x4,%esp
810026ff:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002702:	50                   	push   %eax
81002703:	6a 00                	push   $0x0
81002705:	ff 75 18             	push   0x18(%ebp)
81002708:	ff 75 14             	push   0x14(%ebp)
8100270b:	ff 75 10             	push   0x10(%ebp)
8100270e:	ff 75 0c             	push   0xc(%ebp)
81002711:	ff 75 08             	push   0x8(%ebp)
81002714:	e8 75 f4 ff ff       	call   81001b8e <getopt_internal>
81002719:	83 c4 20             	add    $0x20,%esp
8100271c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100271f:	83 ec 0c             	sub    $0xc,%esp
81002722:	8d 45 d8             	lea    -0x28(%ebp),%eax
81002725:	50                   	push   %eax
81002726:	e8 11 f4 ff ff       	call   81001b3c <write_globals>
8100272b:	83 c4 10             	add    $0x10,%esp
8100272e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002731:	c9                   	leave  
81002732:	c3                   	ret    

81002733 <getopt_long_only>:
81002733:	55                   	push   %ebp
81002734:	89 e5                	mov    %esp,%ebp
81002736:	83 ec 28             	sub    $0x28,%esp
81002739:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100273c:	50                   	push   %eax
8100273d:	e8 a1 f3 ff ff       	call   81001ae3 <read_globals>
81002742:	83 c4 04             	add    $0x4,%esp
81002745:	83 ec 04             	sub    $0x4,%esp
81002748:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100274b:	50                   	push   %eax
8100274c:	6a 01                	push   $0x1
8100274e:	ff 75 18             	push   0x18(%ebp)
81002751:	ff 75 14             	push   0x14(%ebp)
81002754:	ff 75 10             	push   0x10(%ebp)
81002757:	ff 75 0c             	push   0xc(%ebp)
8100275a:	ff 75 08             	push   0x8(%ebp)
8100275d:	e8 2c f4 ff ff       	call   81001b8e <getopt_internal>
81002762:	83 c4 20             	add    $0x20,%esp
81002765:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002768:	83 ec 0c             	sub    $0xc,%esp
8100276b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100276e:	50                   	push   %eax
8100276f:	e8 c8 f3 ff ff       	call   81001b3c <write_globals>
81002774:	83 c4 10             	add    $0x10,%esp
81002777:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100277a:	c9                   	leave  
8100277b:	c3                   	ret    

8100277c <__getopt_r>:
8100277c:	55                   	push   %ebp
8100277d:	89 e5                	mov    %esp,%ebp
8100277f:	83 ec 08             	sub    $0x8,%esp
81002782:	83 ec 04             	sub    $0x4,%esp
81002785:	ff 75 14             	push   0x14(%ebp)
81002788:	6a 00                	push   $0x0
8100278a:	6a 00                	push   $0x0
8100278c:	6a 00                	push   $0x0
8100278e:	ff 75 10             	push   0x10(%ebp)
81002791:	ff 75 0c             	push   0xc(%ebp)
81002794:	ff 75 08             	push   0x8(%ebp)
81002797:	e8 f2 f3 ff ff       	call   81001b8e <getopt_internal>
8100279c:	83 c4 20             	add    $0x20,%esp
8100279f:	c9                   	leave  
810027a0:	c3                   	ret    

810027a1 <__getopt_long_r>:
810027a1:	55                   	push   %ebp
810027a2:	89 e5                	mov    %esp,%ebp
810027a4:	83 ec 08             	sub    $0x8,%esp
810027a7:	83 ec 04             	sub    $0x4,%esp
810027aa:	ff 75 1c             	push   0x1c(%ebp)
810027ad:	6a 00                	push   $0x0
810027af:	ff 75 18             	push   0x18(%ebp)
810027b2:	ff 75 14             	push   0x14(%ebp)
810027b5:	ff 75 10             	push   0x10(%ebp)
810027b8:	ff 75 0c             	push   0xc(%ebp)
810027bb:	ff 75 08             	push   0x8(%ebp)
810027be:	e8 cb f3 ff ff       	call   81001b8e <getopt_internal>
810027c3:	83 c4 20             	add    $0x20,%esp
810027c6:	c9                   	leave  
810027c7:	c3                   	ret    

810027c8 <__getopt_long_only_r>:
810027c8:	55                   	push   %ebp
810027c9:	89 e5                	mov    %esp,%ebp
810027cb:	83 ec 08             	sub    $0x8,%esp
810027ce:	83 ec 04             	sub    $0x4,%esp
810027d1:	ff 75 1c             	push   0x1c(%ebp)
810027d4:	6a 01                	push   $0x1
810027d6:	ff 75 18             	push   0x18(%ebp)
810027d9:	ff 75 14             	push   0x14(%ebp)
810027dc:	ff 75 10             	push   0x10(%ebp)
810027df:	ff 75 0c             	push   0xc(%ebp)
810027e2:	ff 75 08             	push   0x8(%ebp)
810027e5:	e8 a4 f3 ff ff       	call   81001b8e <getopt_internal>
810027ea:	83 c4 20             	add    $0x20,%esp
810027ed:	c9                   	leave  
810027ee:	c3                   	ret    

810027ef <__getreent>:
810027ef:	55                   	push   %ebp
810027f0:	89 e5                	mov    %esp,%ebp
810027f2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810027f7:	5d                   	pop    %ebp
810027f8:	c3                   	ret    

810027f9 <malloc>:
810027f9:	55                   	push   %ebp
810027fa:	89 e5                	mov    %esp,%ebp
810027fc:	83 ec 08             	sub    $0x8,%esp
810027ff:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002804:	83 ec 08             	sub    $0x8,%esp
81002807:	ff 75 08             	push   0x8(%ebp)
8100280a:	50                   	push   %eax
8100280b:	e8 b5 02 00 00       	call   81002ac5 <_malloc_r>
81002810:	83 c4 10             	add    $0x10,%esp
81002813:	c9                   	leave  
81002814:	c3                   	ret    

81002815 <free>:
81002815:	55                   	push   %ebp
81002816:	89 e5                	mov    %esp,%ebp
81002818:	83 ec 08             	sub    $0x8,%esp
8100281b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81002820:	83 ec 08             	sub    $0x8,%esp
81002823:	ff 75 08             	push   0x8(%ebp)
81002826:	50                   	push   %eax
81002827:	e8 e9 ea ff ff       	call   81001315 <_free_r>
8100282c:	83 c4 10             	add    $0x10,%esp
8100282f:	90                   	nop
81002830:	c9                   	leave  
81002831:	c3                   	ret    

81002832 <malloc_extend_top>:
81002832:	55                   	push   %ebp
81002833:	89 e5                	mov    %esp,%ebp
81002835:	83 ec 38             	sub    $0x38,%esp
81002838:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100283f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002844:	8b 40 08             	mov    0x8(%eax),%eax
81002847:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100284a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100284d:	8b 40 04             	mov    0x4(%eax),%eax
81002850:	83 e0 fc             	and    $0xfffffffc,%eax
81002853:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002856:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002859:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100285c:	01 d0                	add    %edx,%eax
8100285e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002861:	8b 15 a0 81 00 81    	mov    0x810081a0,%edx
81002867:	8b 45 0c             	mov    0xc(%ebp),%eax
8100286a:	01 d0                	add    %edx,%eax
8100286c:	83 c0 10             	add    $0x10,%eax
8100286f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002872:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81002879:	a1 cc 79 00 81       	mov    0x810079cc,%eax
8100287e:	83 f8 ff             	cmp    $0xffffffff,%eax
81002881:	74 15                	je     81002898 <malloc_extend_top+0x66>
81002883:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002886:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002889:	01 d0                	add    %edx,%eax
8100288b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100288e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002891:	f7 d8                	neg    %eax
81002893:	21 d0                	and    %edx,%eax
81002895:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002898:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100289b:	83 ec 08             	sub    $0x8,%esp
8100289e:	50                   	push   %eax
8100289f:	ff 75 08             	push   0x8(%ebp)
810028a2:	e8 de 1a 00 00       	call   81004385 <_sbrk_r>
810028a7:	83 c4 10             	add    $0x10,%esp
810028aa:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028ad:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028b1:	0f 84 0b 02 00 00    	je     81002ac2 <malloc_extend_top+0x290>
810028b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028ba:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810028bd:	73 0e                	jae    810028cd <malloc_extend_top+0x9b>
810028bf:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810028c4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810028c7:	0f 85 f5 01 00 00    	jne    81002ac2 <malloc_extend_top+0x290>
810028cd:	a1 c0 81 00 81       	mov    0x810081c0,%eax
810028d2:	89 c2                	mov    %eax,%edx
810028d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810028d7:	01 d0                	add    %edx,%eax
810028d9:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810028de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028e1:	3b 45 d8             	cmp    -0x28(%ebp),%eax
810028e4:	75 30                	jne    81002916 <malloc_extend_top+0xe4>
810028e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810028e9:	8d 50 ff             	lea    -0x1(%eax),%edx
810028ec:	8b 45 d8             	mov    -0x28(%ebp),%eax
810028ef:	21 d0                	and    %edx,%eax
810028f1:	85 c0                	test   %eax,%eax
810028f3:	75 21                	jne    81002916 <malloc_extend_top+0xe4>
810028f5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810028f8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810028fb:	01 d0                	add    %edx,%eax
810028fd:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002900:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002905:	8b 40 08             	mov    0x8(%eax),%eax
81002908:	8b 55 d0             	mov    -0x30(%ebp),%edx
8100290b:	83 ca 01             	or     $0x1,%edx
8100290e:	89 50 04             	mov    %edx,0x4(%eax)
81002911:	e9 76 01 00 00       	jmp    81002a8c <malloc_extend_top+0x25a>
81002916:	a1 cc 79 00 81       	mov    0x810079cc,%eax
8100291b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100291e:	75 0a                	jne    8100292a <malloc_extend_top+0xf8>
81002920:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002923:	a3 cc 79 00 81       	mov    %eax,0x810079cc
81002928:	eb 13                	jmp    8100293d <malloc_extend_top+0x10b>
8100292a:	8b 15 c0 81 00 81    	mov    0x810081c0,%edx
81002930:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002933:	2b 45 d8             	sub    -0x28(%ebp),%eax
81002936:	01 d0                	add    %edx,%eax
81002938:	a3 c0 81 00 81       	mov    %eax,0x810081c0
8100293d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002940:	83 c0 08             	add    $0x8,%eax
81002943:	83 e0 07             	and    $0x7,%eax
81002946:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002949:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100294d:	74 13                	je     81002962 <malloc_extend_top+0x130>
8100294f:	b8 08 00 00 00       	mov    $0x8,%eax
81002954:	2b 45 cc             	sub    -0x34(%ebp),%eax
81002957:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100295a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100295d:	01 45 f4             	add    %eax,-0xc(%ebp)
81002960:	eb 07                	jmp    81002969 <malloc_extend_top+0x137>
81002962:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002969:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100296c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100296f:	01 d0                	add    %edx,%eax
81002971:	89 c2                	mov    %eax,%edx
81002973:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002976:	83 e8 01             	sub    $0x1,%eax
81002979:	21 c2                	and    %eax,%edx
8100297b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100297e:	29 d0                	sub    %edx,%eax
81002980:	01 45 f0             	add    %eax,-0x10(%ebp)
81002983:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002986:	83 e8 01             	sub    $0x1,%eax
81002989:	21 45 f0             	and    %eax,-0x10(%ebp)
8100298c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100298f:	83 ec 08             	sub    $0x8,%esp
81002992:	50                   	push   %eax
81002993:	ff 75 08             	push   0x8(%ebp)
81002996:	e8 ea 19 00 00       	call   81004385 <_sbrk_r>
8100299b:	83 c4 10             	add    $0x10,%esp
8100299e:	89 45 ec             	mov    %eax,-0x14(%ebp)
810029a1:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810029a5:	75 28                	jne    810029cf <malloc_extend_top+0x19d>
810029a7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810029ae:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
810029b5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810029b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810029bb:	01 d0                	add    %edx,%eax
810029bd:	89 45 ec             	mov    %eax,-0x14(%ebp)
810029c0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810029c4:	74 09                	je     810029cf <malloc_extend_top+0x19d>
810029c6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810029c9:	83 e8 08             	sub    $0x8,%eax
810029cc:	01 45 ec             	add    %eax,-0x14(%ebp)
810029cf:	a1 c0 81 00 81       	mov    0x810081c0,%eax
810029d4:	89 c2                	mov    %eax,%edx
810029d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029d9:	01 d0                	add    %edx,%eax
810029db:	a3 c0 81 00 81       	mov    %eax,0x810081c0
810029e0:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810029e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029e8:	89 42 08             	mov    %eax,0x8(%edx)
810029eb:	8b 45 ec             	mov    -0x14(%ebp),%eax
810029ee:	2b 45 f4             	sub    -0xc(%ebp),%eax
810029f1:	89 c2                	mov    %eax,%edx
810029f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029f6:	01 d0                	add    %edx,%eax
810029f8:	89 45 d0             	mov    %eax,-0x30(%ebp)
810029fb:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002a00:	8b 40 08             	mov    0x8(%eax),%eax
81002a03:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002a06:	83 ca 01             	or     $0x1,%edx
81002a09:	89 50 04             	mov    %edx,0x4(%eax)
81002a0c:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002a11:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81002a14:	74 76                	je     81002a8c <malloc_extend_top+0x25a>
81002a16:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002a1a:	77 14                	ja     81002a30 <malloc_extend_top+0x1fe>
81002a1c:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002a21:	8b 40 08             	mov    0x8(%eax),%eax
81002a24:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81002a2b:	e9 93 00 00 00       	jmp    81002ac3 <malloc_extend_top+0x291>
81002a30:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a33:	83 e8 0c             	sub    $0xc,%eax
81002a36:	83 e0 f8             	and    $0xfffffff8,%eax
81002a39:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a3c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a3f:	8b 40 04             	mov    0x4(%eax),%eax
81002a42:	83 e0 01             	and    $0x1,%eax
81002a45:	0b 45 dc             	or     -0x24(%ebp),%eax
81002a48:	89 c2                	mov    %eax,%edx
81002a4a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a4d:	89 50 04             	mov    %edx,0x4(%eax)
81002a50:	8b 55 e0             	mov    -0x20(%ebp),%edx
81002a53:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a56:	01 d0                	add    %edx,%eax
81002a58:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002a5f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002a62:	8d 50 04             	lea    0x4(%eax),%edx
81002a65:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a68:	01 d0                	add    %edx,%eax
81002a6a:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81002a71:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81002a75:	76 15                	jbe    81002a8c <malloc_extend_top+0x25a>
81002a77:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002a7a:	83 c0 08             	add    $0x8,%eax
81002a7d:	83 ec 08             	sub    $0x8,%esp
81002a80:	50                   	push   %eax
81002a81:	ff 75 08             	push   0x8(%ebp)
81002a84:	e8 8c e8 ff ff       	call   81001315 <_free_r>
81002a89:	83 c4 10             	add    $0x10,%esp
81002a8c:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002a91:	89 c2                	mov    %eax,%edx
81002a93:	a1 a4 81 00 81       	mov    0x810081a4,%eax
81002a98:	39 c2                	cmp    %eax,%edx
81002a9a:	76 0a                	jbe    81002aa6 <malloc_extend_top+0x274>
81002a9c:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002aa1:	a3 a4 81 00 81       	mov    %eax,0x810081a4
81002aa6:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002aab:	89 c2                	mov    %eax,%edx
81002aad:	a1 a8 81 00 81       	mov    0x810081a8,%eax
81002ab2:	39 c2                	cmp    %eax,%edx
81002ab4:	76 0d                	jbe    81002ac3 <malloc_extend_top+0x291>
81002ab6:	a1 c0 81 00 81       	mov    0x810081c0,%eax
81002abb:	a3 a8 81 00 81       	mov    %eax,0x810081a8
81002ac0:	eb 01                	jmp    81002ac3 <malloc_extend_top+0x291>
81002ac2:	90                   	nop
81002ac3:	c9                   	leave  
81002ac4:	c3                   	ret    

81002ac5 <_malloc_r>:
81002ac5:	55                   	push   %ebp
81002ac6:	89 e5                	mov    %esp,%ebp
81002ac8:	53                   	push   %ebx
81002ac9:	83 ec 44             	sub    $0x44,%esp
81002acc:	8b 45 0c             	mov    0xc(%ebp),%eax
81002acf:	83 c0 0b             	add    $0xb,%eax
81002ad2:	83 f8 16             	cmp    $0x16,%eax
81002ad5:	76 0b                	jbe    81002ae2 <_malloc_r+0x1d>
81002ad7:	8b 45 0c             	mov    0xc(%ebp),%eax
81002ada:	83 c0 0b             	add    $0xb,%eax
81002add:	83 e0 f8             	and    $0xfffffff8,%eax
81002ae0:	eb 05                	jmp    81002ae7 <_malloc_r+0x22>
81002ae2:	b8 10 00 00 00       	mov    $0x10,%eax
81002ae7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002aea:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002aed:	85 c0                	test   %eax,%eax
81002aef:	78 08                	js     81002af9 <_malloc_r+0x34>
81002af1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002af4:	3b 45 0c             	cmp    0xc(%ebp),%eax
81002af7:	73 13                	jae    81002b0c <_malloc_r+0x47>
81002af9:	8b 45 08             	mov    0x8(%ebp),%eax
81002afc:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002b02:	b8 00 00 00 00       	mov    $0x0,%eax
81002b07:	e9 d6 07 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81002b0c:	83 ec 0c             	sub    $0xc,%esp
81002b0f:	ff 75 08             	push   0x8(%ebp)
81002b12:	e8 91 09 00 00       	call   810034a8 <__malloc_lock>
81002b17:	83 c4 10             	add    $0x10,%esp
81002b1a:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
81002b21:	0f 87 b0 00 00 00    	ja     81002bd7 <_malloc_r+0x112>
81002b27:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002b2a:	c1 e8 03             	shr    $0x3,%eax
81002b2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b30:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b33:	83 c0 01             	add    $0x1,%eax
81002b36:	01 c0                	add    %eax,%eax
81002b38:	c1 e0 02             	shl    $0x2,%eax
81002b3b:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002b40:	83 e8 08             	sub    $0x8,%eax
81002b43:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002b46:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b49:	8b 40 0c             	mov    0xc(%eax),%eax
81002b4c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b52:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002b55:	75 0d                	jne    81002b64 <_malloc_r+0x9f>
81002b57:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81002b5b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b5e:	8b 40 0c             	mov    0xc(%eax),%eax
81002b61:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b67:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81002b6a:	74 62                	je     81002bce <_malloc_r+0x109>
81002b6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b6f:	8b 40 04             	mov    0x4(%eax),%eax
81002b72:	83 e0 fc             	and    $0xfffffffc,%eax
81002b75:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002b78:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b7b:	8b 40 0c             	mov    0xc(%eax),%eax
81002b7e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b81:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b84:	8b 40 08             	mov    0x8(%eax),%eax
81002b87:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b8a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b8d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002b90:	89 50 0c             	mov    %edx,0xc(%eax)
81002b93:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b96:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b99:	89 50 08             	mov    %edx,0x8(%eax)
81002b9c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b9f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ba2:	01 d0                	add    %edx,%eax
81002ba4:	8b 50 04             	mov    0x4(%eax),%edx
81002ba7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002baa:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002bad:	01 c8                	add    %ecx,%eax
81002baf:	83 ca 01             	or     $0x1,%edx
81002bb2:	89 50 04             	mov    %edx,0x4(%eax)
81002bb5:	83 ec 0c             	sub    $0xc,%esp
81002bb8:	ff 75 08             	push   0x8(%ebp)
81002bbb:	e8 ee 08 00 00       	call   810034ae <__malloc_unlock>
81002bc0:	83 c4 10             	add    $0x10,%esp
81002bc3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bc6:	83 c0 08             	add    $0x8,%eax
81002bc9:	e9 14 07 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81002bce:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
81002bd2:	e9 46 01 00 00       	jmp    81002d1d <_malloc_r+0x258>
81002bd7:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bda:	c1 e8 09             	shr    $0x9,%eax
81002bdd:	85 c0                	test   %eax,%eax
81002bdf:	75 08                	jne    81002be9 <_malloc_r+0x124>
81002be1:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002be4:	c1 e8 03             	shr    $0x3,%eax
81002be7:	eb 77                	jmp    81002c60 <_malloc_r+0x19b>
81002be9:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bec:	c1 e8 09             	shr    $0x9,%eax
81002bef:	83 f8 04             	cmp    $0x4,%eax
81002bf2:	77 0b                	ja     81002bff <_malloc_r+0x13a>
81002bf4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002bf7:	c1 e8 06             	shr    $0x6,%eax
81002bfa:	83 c0 38             	add    $0x38,%eax
81002bfd:	eb 61                	jmp    81002c60 <_malloc_r+0x19b>
81002bff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c02:	c1 e8 09             	shr    $0x9,%eax
81002c05:	83 f8 14             	cmp    $0x14,%eax
81002c08:	77 0b                	ja     81002c15 <_malloc_r+0x150>
81002c0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c0d:	c1 e8 09             	shr    $0x9,%eax
81002c10:	83 c0 5b             	add    $0x5b,%eax
81002c13:	eb 4b                	jmp    81002c60 <_malloc_r+0x19b>
81002c15:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c18:	c1 e8 09             	shr    $0x9,%eax
81002c1b:	83 f8 54             	cmp    $0x54,%eax
81002c1e:	77 0b                	ja     81002c2b <_malloc_r+0x166>
81002c20:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c23:	c1 e8 0c             	shr    $0xc,%eax
81002c26:	83 c0 6e             	add    $0x6e,%eax
81002c29:	eb 35                	jmp    81002c60 <_malloc_r+0x19b>
81002c2b:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c2e:	c1 e8 09             	shr    $0x9,%eax
81002c31:	3d 54 01 00 00       	cmp    $0x154,%eax
81002c36:	77 0b                	ja     81002c43 <_malloc_r+0x17e>
81002c38:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c3b:	c1 e8 0f             	shr    $0xf,%eax
81002c3e:	83 c0 77             	add    $0x77,%eax
81002c41:	eb 1d                	jmp    81002c60 <_malloc_r+0x19b>
81002c43:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c46:	c1 e8 09             	shr    $0x9,%eax
81002c49:	3d 54 05 00 00       	cmp    $0x554,%eax
81002c4e:	77 0b                	ja     81002c5b <_malloc_r+0x196>
81002c50:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c53:	c1 e8 12             	shr    $0x12,%eax
81002c56:	83 c0 7c             	add    $0x7c,%eax
81002c59:	eb 05                	jmp    81002c60 <_malloc_r+0x19b>
81002c5b:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002c60:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002c63:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002c66:	83 c0 01             	add    $0x1,%eax
81002c69:	01 c0                	add    %eax,%eax
81002c6b:	c1 e0 02             	shl    $0x2,%eax
81002c6e:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002c73:	83 e8 08             	sub    $0x8,%eax
81002c76:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002c79:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c7c:	8b 40 0c             	mov    0xc(%eax),%eax
81002c7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002c82:	e9 86 00 00 00       	jmp    81002d0d <_malloc_r+0x248>
81002c87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c8a:	8b 40 04             	mov    0x4(%eax),%eax
81002c8d:	83 e0 fc             	and    $0xfffffffc,%eax
81002c90:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002c93:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002c96:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002c99:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c9c:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002ca0:	7e 06                	jle    81002ca8 <_malloc_r+0x1e3>
81002ca2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81002ca6:	eb 71                	jmp    81002d19 <_malloc_r+0x254>
81002ca8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002cac:	78 56                	js     81002d04 <_malloc_r+0x23f>
81002cae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cb1:	8b 40 0c             	mov    0xc(%eax),%eax
81002cb4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002cb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cba:	8b 40 08             	mov    0x8(%eax),%eax
81002cbd:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002cc0:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cc3:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cc6:	89 50 0c             	mov    %edx,0xc(%eax)
81002cc9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ccc:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ccf:	89 50 08             	mov    %edx,0x8(%eax)
81002cd2:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cd5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002cd8:	01 d0                	add    %edx,%eax
81002cda:	8b 50 04             	mov    0x4(%eax),%edx
81002cdd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002ce0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ce3:	01 c8                	add    %ecx,%eax
81002ce5:	83 ca 01             	or     $0x1,%edx
81002ce8:	89 50 04             	mov    %edx,0x4(%eax)
81002ceb:	83 ec 0c             	sub    $0xc,%esp
81002cee:	ff 75 08             	push   0x8(%ebp)
81002cf1:	e8 b8 07 00 00       	call   810034ae <__malloc_unlock>
81002cf6:	83 c4 10             	add    $0x10,%esp
81002cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cfc:	83 c0 08             	add    $0x8,%eax
81002cff:	e9 de 05 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81002d04:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d07:	8b 40 0c             	mov    0xc(%eax),%eax
81002d0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d10:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002d13:	0f 85 6e ff ff ff    	jne    81002c87 <_malloc_r+0x1c2>
81002d19:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81002d1d:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d22:	8b 40 08             	mov    0x8(%eax),%eax
81002d25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d28:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d2d:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002d30:	0f 84 9c 02 00 00    	je     81002fd2 <_malloc_r+0x50d>
81002d36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d39:	8b 40 04             	mov    0x4(%eax),%eax
81002d3c:	83 e0 fc             	and    $0xfffffffc,%eax
81002d3f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d42:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002d45:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002d48:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d4b:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81002d4f:	7e 7a                	jle    81002dcb <_malloc_r+0x306>
81002d51:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d54:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d57:	01 d0                	add    %edx,%eax
81002d59:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002d5c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d5f:	83 c8 01             	or     $0x1,%eax
81002d62:	89 c2                	mov    %eax,%edx
81002d64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d67:	89 50 04             	mov    %edx,0x4(%eax)
81002d6a:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002d6f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81002d72:	89 50 0c             	mov    %edx,0xc(%eax)
81002d75:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002d7a:	8b 40 0c             	mov    0xc(%eax),%eax
81002d7d:	89 42 08             	mov    %eax,0x8(%edx)
81002d80:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002d85:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d88:	89 50 0c             	mov    %edx,0xc(%eax)
81002d8b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d8e:	8b 50 0c             	mov    0xc(%eax),%edx
81002d91:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d94:	89 50 08             	mov    %edx,0x8(%eax)
81002d97:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d9a:	83 c8 01             	or     $0x1,%eax
81002d9d:	89 c2                	mov    %eax,%edx
81002d9f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002da2:	89 50 04             	mov    %edx,0x4(%eax)
81002da5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002da8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002dab:	01 c2                	add    %eax,%edx
81002dad:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002db0:	89 02                	mov    %eax,(%edx)
81002db2:	83 ec 0c             	sub    $0xc,%esp
81002db5:	ff 75 08             	push   0x8(%ebp)
81002db8:	e8 f1 06 00 00       	call   810034ae <__malloc_unlock>
81002dbd:	83 c4 10             	add    $0x10,%esp
81002dc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002dc3:	83 c0 08             	add    $0x8,%eax
81002dc6:	e9 17 05 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81002dcb:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
81002dd0:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002dd5:	89 50 0c             	mov    %edx,0xc(%eax)
81002dd8:	ba c8 75 00 81       	mov    $0x810075c8,%edx
81002ddd:	8b 40 0c             	mov    0xc(%eax),%eax
81002de0:	89 42 08             	mov    %eax,0x8(%edx)
81002de3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002de7:	78 32                	js     81002e1b <_malloc_r+0x356>
81002de9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002dec:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002def:	01 d0                	add    %edx,%eax
81002df1:	8b 50 04             	mov    0x4(%eax),%edx
81002df4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002df7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002dfa:	01 c8                	add    %ecx,%eax
81002dfc:	83 ca 01             	or     $0x1,%edx
81002dff:	89 50 04             	mov    %edx,0x4(%eax)
81002e02:	83 ec 0c             	sub    $0xc,%esp
81002e05:	ff 75 08             	push   0x8(%ebp)
81002e08:	e8 a1 06 00 00       	call   810034ae <__malloc_unlock>
81002e0d:	83 c4 10             	add    $0x10,%esp
81002e10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e13:	83 c0 08             	add    $0x8,%eax
81002e16:	e9 c7 04 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81002e1b:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
81002e22:	77 7f                	ja     81002ea3 <_malloc_r+0x3de>
81002e24:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e27:	c1 e8 03             	shr    $0x3,%eax
81002e2a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002e2d:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002e32:	8b 58 04             	mov    0x4(%eax),%ebx
81002e35:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e38:	8d 50 03             	lea    0x3(%eax),%edx
81002e3b:	85 c0                	test   %eax,%eax
81002e3d:	0f 48 c2             	cmovs  %edx,%eax
81002e40:	c1 f8 02             	sar    $0x2,%eax
81002e43:	ba 01 00 00 00       	mov    $0x1,%edx
81002e48:	89 c1                	mov    %eax,%ecx
81002e4a:	d3 e2                	shl    %cl,%edx
81002e4c:	89 d0                	mov    %edx,%eax
81002e4e:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81002e53:	09 d8                	or     %ebx,%eax
81002e55:	89 42 04             	mov    %eax,0x4(%edx)
81002e58:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e5b:	83 c0 01             	add    $0x1,%eax
81002e5e:	01 c0                	add    %eax,%eax
81002e60:	c1 e0 02             	shl    $0x2,%eax
81002e63:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002e68:	83 e8 08             	sub    $0x8,%eax
81002e6b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e6e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e71:	8b 40 08             	mov    0x8(%eax),%eax
81002e74:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e7a:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002e7d:	89 50 0c             	mov    %edx,0xc(%eax)
81002e80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e83:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002e86:	89 50 08             	mov    %edx,0x8(%eax)
81002e89:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e8c:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e8f:	89 50 08             	mov    %edx,0x8(%eax)
81002e92:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e95:	8b 50 08             	mov    0x8(%eax),%edx
81002e98:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e9b:	89 50 0c             	mov    %edx,0xc(%eax)
81002e9e:	e9 2f 01 00 00       	jmp    81002fd2 <_malloc_r+0x50d>
81002ea3:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ea6:	c1 e8 09             	shr    $0x9,%eax
81002ea9:	85 c0                	test   %eax,%eax
81002eab:	75 08                	jne    81002eb5 <_malloc_r+0x3f0>
81002ead:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eb0:	c1 e8 03             	shr    $0x3,%eax
81002eb3:	eb 77                	jmp    81002f2c <_malloc_r+0x467>
81002eb5:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eb8:	c1 e8 09             	shr    $0x9,%eax
81002ebb:	83 f8 04             	cmp    $0x4,%eax
81002ebe:	77 0b                	ja     81002ecb <_malloc_r+0x406>
81002ec0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ec3:	c1 e8 06             	shr    $0x6,%eax
81002ec6:	83 c0 38             	add    $0x38,%eax
81002ec9:	eb 61                	jmp    81002f2c <_malloc_r+0x467>
81002ecb:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ece:	c1 e8 09             	shr    $0x9,%eax
81002ed1:	83 f8 14             	cmp    $0x14,%eax
81002ed4:	77 0b                	ja     81002ee1 <_malloc_r+0x41c>
81002ed6:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ed9:	c1 e8 09             	shr    $0x9,%eax
81002edc:	83 c0 5b             	add    $0x5b,%eax
81002edf:	eb 4b                	jmp    81002f2c <_malloc_r+0x467>
81002ee1:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002ee4:	c1 e8 09             	shr    $0x9,%eax
81002ee7:	83 f8 54             	cmp    $0x54,%eax
81002eea:	77 0b                	ja     81002ef7 <_malloc_r+0x432>
81002eec:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002eef:	c1 e8 0c             	shr    $0xc,%eax
81002ef2:	83 c0 6e             	add    $0x6e,%eax
81002ef5:	eb 35                	jmp    81002f2c <_malloc_r+0x467>
81002ef7:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002efa:	c1 e8 09             	shr    $0x9,%eax
81002efd:	3d 54 01 00 00       	cmp    $0x154,%eax
81002f02:	77 0b                	ja     81002f0f <_malloc_r+0x44a>
81002f04:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f07:	c1 e8 0f             	shr    $0xf,%eax
81002f0a:	83 c0 77             	add    $0x77,%eax
81002f0d:	eb 1d                	jmp    81002f2c <_malloc_r+0x467>
81002f0f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f12:	c1 e8 09             	shr    $0x9,%eax
81002f15:	3d 54 05 00 00       	cmp    $0x554,%eax
81002f1a:	77 0b                	ja     81002f27 <_malloc_r+0x462>
81002f1c:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002f1f:	c1 e8 12             	shr    $0x12,%eax
81002f22:	83 c0 7c             	add    $0x7c,%eax
81002f25:	eb 05                	jmp    81002f2c <_malloc_r+0x467>
81002f27:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002f2c:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002f2f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f32:	83 c0 01             	add    $0x1,%eax
81002f35:	01 c0                	add    %eax,%eax
81002f37:	c1 e0 02             	shl    $0x2,%eax
81002f3a:	05 c0 75 00 81       	add    $0x810075c0,%eax
81002f3f:	83 e8 08             	sub    $0x8,%eax
81002f42:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002f45:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f48:	8b 40 08             	mov    0x8(%eax),%eax
81002f4b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f4e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f51:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002f54:	75 36                	jne    81002f8c <_malloc_r+0x4c7>
81002f56:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002f5b:	8b 58 04             	mov    0x4(%eax),%ebx
81002f5e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002f61:	8d 50 03             	lea    0x3(%eax),%edx
81002f64:	85 c0                	test   %eax,%eax
81002f66:	0f 48 c2             	cmovs  %edx,%eax
81002f69:	c1 f8 02             	sar    $0x2,%eax
81002f6c:	ba 01 00 00 00       	mov    $0x1,%edx
81002f71:	89 c1                	mov    %eax,%ecx
81002f73:	d3 e2                	shl    %cl,%edx
81002f75:	89 d0                	mov    %edx,%eax
81002f77:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81002f7c:	09 d8                	or     %ebx,%eax
81002f7e:	89 42 04             	mov    %eax,0x4(%edx)
81002f81:	eb 28                	jmp    81002fab <_malloc_r+0x4e6>
81002f83:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f86:	8b 40 08             	mov    0x8(%eax),%eax
81002f89:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002f8c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f8f:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81002f92:	74 0e                	je     81002fa2 <_malloc_r+0x4dd>
81002f94:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f97:	8b 40 04             	mov    0x4(%eax),%eax
81002f9a:	83 e0 fc             	and    $0xfffffffc,%eax
81002f9d:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81002fa0:	72 e1                	jb     81002f83 <_malloc_r+0x4be>
81002fa2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fa5:	8b 40 0c             	mov    0xc(%eax),%eax
81002fa8:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002fab:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fae:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002fb1:	89 50 0c             	mov    %edx,0xc(%eax)
81002fb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb7:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002fba:	89 50 08             	mov    %edx,0x8(%eax)
81002fbd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fc0:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002fc3:	89 50 08             	mov    %edx,0x8(%eax)
81002fc6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002fc9:	8b 50 08             	mov    0x8(%eax),%edx
81002fcc:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fcf:	89 50 0c             	mov    %edx,0xc(%eax)
81002fd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fd5:	8d 50 03             	lea    0x3(%eax),%edx
81002fd8:	85 c0                	test   %eax,%eax
81002fda:	0f 48 c2             	cmovs  %edx,%eax
81002fdd:	c1 f8 02             	sar    $0x2,%eax
81002fe0:	ba 01 00 00 00       	mov    $0x1,%edx
81002fe5:	89 c1                	mov    %eax,%ecx
81002fe7:	d3 e2                	shl    %cl,%edx
81002fe9:	89 d0                	mov    %edx,%eax
81002feb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002fee:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81002ff3:	8b 40 04             	mov    0x4(%eax),%eax
81002ff6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81002ff9:	0f 87 13 02 00 00    	ja     81003212 <_malloc_r+0x74d>
81002fff:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003004:	8b 40 04             	mov    0x4(%eax),%eax
81003007:	23 45 e4             	and    -0x1c(%ebp),%eax
8100300a:	85 c0                	test   %eax,%eax
8100300c:	75 27                	jne    81003035 <_malloc_r+0x570>
8100300e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003011:	83 e0 fc             	and    $0xfffffffc,%eax
81003014:	83 c0 04             	add    $0x4,%eax
81003017:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100301a:	d1 65 e4             	shll   -0x1c(%ebp)
8100301d:	eb 07                	jmp    81003026 <_malloc_r+0x561>
8100301f:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81003023:	d1 65 e4             	shll   -0x1c(%ebp)
81003026:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100302b:	8b 40 04             	mov    0x4(%eax),%eax
8100302e:	23 45 e4             	and    -0x1c(%ebp),%eax
81003031:	85 c0                	test   %eax,%eax
81003033:	74 ea                	je     8100301f <_malloc_r+0x55a>
81003035:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003038:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100303b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100303e:	83 c0 01             	add    $0x1,%eax
81003041:	01 c0                	add    %eax,%eax
81003043:	c1 e0 02             	shl    $0x2,%eax
81003046:	05 c0 75 00 81       	add    $0x810075c0,%eax
8100304b:	83 e8 08             	sub    $0x8,%eax
8100304e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003051:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003054:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003057:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100305a:	8b 40 0c             	mov    0xc(%eax),%eax
8100305d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003060:	e9 22 01 00 00       	jmp    81003187 <_malloc_r+0x6c2>
81003065:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003068:	8b 40 04             	mov    0x4(%eax),%eax
8100306b:	83 e0 fc             	and    $0xfffffffc,%eax
8100306e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81003071:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003074:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003077:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100307a:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100307e:	0f 8e 9e 00 00 00    	jle    81003122 <_malloc_r+0x65d>
81003084:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003087:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100308a:	01 d0                	add    %edx,%eax
8100308c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100308f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003092:	83 c8 01             	or     $0x1,%eax
81003095:	89 c2                	mov    %eax,%edx
81003097:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100309a:	89 50 04             	mov    %edx,0x4(%eax)
8100309d:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030a0:	8b 40 0c             	mov    0xc(%eax),%eax
810030a3:	89 45 d8             	mov    %eax,-0x28(%ebp)
810030a6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810030a9:	8b 40 08             	mov    0x8(%eax),%eax
810030ac:	89 45 dc             	mov    %eax,-0x24(%ebp)
810030af:	8b 45 dc             	mov    -0x24(%ebp),%eax
810030b2:	8b 55 d8             	mov    -0x28(%ebp),%edx
810030b5:	89 50 0c             	mov    %edx,0xc(%eax)
810030b8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810030bb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810030be:	89 50 08             	mov    %edx,0x8(%eax)
810030c1:	b8 c8 75 00 81       	mov    $0x810075c8,%eax
810030c6:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810030c9:	89 50 0c             	mov    %edx,0xc(%eax)
810030cc:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810030d1:	8b 40 0c             	mov    0xc(%eax),%eax
810030d4:	89 42 08             	mov    %eax,0x8(%edx)
810030d7:	ba c8 75 00 81       	mov    $0x810075c8,%edx
810030dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030df:	89 50 0c             	mov    %edx,0xc(%eax)
810030e2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030e5:	8b 50 0c             	mov    0xc(%eax),%edx
810030e8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030eb:	89 50 08             	mov    %edx,0x8(%eax)
810030ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810030f1:	83 c8 01             	or     $0x1,%eax
810030f4:	89 c2                	mov    %eax,%edx
810030f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810030f9:	89 50 04             	mov    %edx,0x4(%eax)
810030fc:	8b 55 e8             	mov    -0x18(%ebp),%edx
810030ff:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81003102:	01 c2                	add    %eax,%edx
81003104:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003107:	89 02                	mov    %eax,(%edx)
81003109:	83 ec 0c             	sub    $0xc,%esp
8100310c:	ff 75 08             	push   0x8(%ebp)
8100310f:	e8 9a 03 00 00       	call   810034ae <__malloc_unlock>
81003114:	83 c4 10             	add    $0x10,%esp
81003117:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100311a:	83 c0 08             	add    $0x8,%eax
8100311d:	e9 c0 01 00 00       	jmp    810032e2 <_malloc_r+0x81d>
81003122:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003126:	78 56                	js     8100317e <_malloc_r+0x6b9>
81003128:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100312b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100312e:	01 d0                	add    %edx,%eax
81003130:	8b 50 04             	mov    0x4(%eax),%edx
81003133:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81003136:	8b 45 cc             	mov    -0x34(%ebp),%eax
81003139:	01 c8                	add    %ecx,%eax
8100313b:	83 ca 01             	or     $0x1,%edx
8100313e:	89 50 04             	mov    %edx,0x4(%eax)
81003141:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003144:	8b 40 0c             	mov    0xc(%eax),%eax
81003147:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100314a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100314d:	8b 40 08             	mov    0x8(%eax),%eax
81003150:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003153:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003156:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003159:	89 50 0c             	mov    %edx,0xc(%eax)
8100315c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100315f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003162:	89 50 08             	mov    %edx,0x8(%eax)
81003165:	83 ec 0c             	sub    $0xc,%esp
81003168:	ff 75 08             	push   0x8(%ebp)
8100316b:	e8 3e 03 00 00       	call   810034ae <__malloc_unlock>
81003170:	83 c4 10             	add    $0x10,%esp
81003173:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003176:	83 c0 08             	add    $0x8,%eax
81003179:	e9 64 01 00 00       	jmp    810032e2 <_malloc_r+0x81d>
8100317e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003181:	8b 40 0c             	mov    0xc(%eax),%eax
81003184:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003187:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100318a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100318d:	0f 85 d2 fe ff ff    	jne    81003065 <_malloc_r+0x5a0>
81003193:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81003197:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100319b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100319e:	83 e0 03             	and    $0x3,%eax
810031a1:	85 c0                	test   %eax,%eax
810031a3:	0f 85 ae fe ff ff    	jne    81003057 <_malloc_r+0x592>
810031a9:	8b 45 e0             	mov    -0x20(%ebp),%eax
810031ac:	83 e0 03             	and    $0x3,%eax
810031af:	85 c0                	test   %eax,%eax
810031b1:	75 19                	jne    810031cc <_malloc_r+0x707>
810031b3:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810031b8:	8b 48 04             	mov    0x4(%eax),%ecx
810031bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810031be:	f7 d0                	not    %eax
810031c0:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810031c5:	21 c8                	and    %ecx,%eax
810031c7:	89 42 04             	mov    %eax,0x4(%edx)
810031ca:	eb 13                	jmp    810031df <_malloc_r+0x71a>
810031cc:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810031d0:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810031d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810031d7:	8b 40 08             	mov    0x8(%eax),%eax
810031da:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810031dd:	74 ca                	je     810031a9 <_malloc_r+0x6e4>
810031df:	d1 65 e4             	shll   -0x1c(%ebp)
810031e2:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810031e7:	8b 40 04             	mov    0x4(%eax),%eax
810031ea:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810031ed:	77 23                	ja     81003212 <_malloc_r+0x74d>
810031ef:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810031f3:	74 1d                	je     81003212 <_malloc_r+0x74d>
810031f5:	eb 07                	jmp    810031fe <_malloc_r+0x739>
810031f7:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810031fb:	d1 65 e4             	shll   -0x1c(%ebp)
810031fe:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003203:	8b 40 04             	mov    0x4(%eax),%eax
81003206:	23 45 e4             	and    -0x1c(%ebp),%eax
81003209:	85 c0                	test   %eax,%eax
8100320b:	74 ea                	je     810031f7 <_malloc_r+0x732>
8100320d:	e9 23 fe ff ff       	jmp    81003035 <_malloc_r+0x570>
81003212:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003217:	8b 40 08             	mov    0x8(%eax),%eax
8100321a:	8b 40 04             	mov    0x4(%eax),%eax
8100321d:	83 e0 fc             	and    $0xfffffffc,%eax
81003220:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003223:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003226:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100322b:	8b 40 08             	mov    0x8(%eax),%eax
8100322e:	8b 40 04             	mov    0x4(%eax),%eax
81003231:	83 e0 fc             	and    $0xfffffffc,%eax
81003234:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003237:	77 06                	ja     8100323f <_malloc_r+0x77a>
81003239:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100323d:	7f 53                	jg     81003292 <_malloc_r+0x7cd>
8100323f:	83 ec 08             	sub    $0x8,%esp
81003242:	ff 75 d0             	push   -0x30(%ebp)
81003245:	ff 75 08             	push   0x8(%ebp)
81003248:	e8 e5 f5 ff ff       	call   81002832 <malloc_extend_top>
8100324d:	83 c4 10             	add    $0x10,%esp
81003250:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003255:	8b 40 08             	mov    0x8(%eax),%eax
81003258:	8b 40 04             	mov    0x4(%eax),%eax
8100325b:	83 e0 fc             	and    $0xfffffffc,%eax
8100325e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81003261:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003264:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003269:	8b 40 08             	mov    0x8(%eax),%eax
8100326c:	8b 40 04             	mov    0x4(%eax),%eax
8100326f:	83 e0 fc             	and    $0xfffffffc,%eax
81003272:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81003275:	77 06                	ja     8100327d <_malloc_r+0x7b8>
81003277:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100327b:	7f 15                	jg     81003292 <_malloc_r+0x7cd>
8100327d:	83 ec 0c             	sub    $0xc,%esp
81003280:	ff 75 08             	push   0x8(%ebp)
81003283:	e8 26 02 00 00       	call   810034ae <__malloc_unlock>
81003288:	83 c4 10             	add    $0x10,%esp
8100328b:	b8 00 00 00 00       	mov    $0x0,%eax
81003290:	eb 50                	jmp    810032e2 <_malloc_r+0x81d>
81003292:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81003297:	8b 40 08             	mov    0x8(%eax),%eax
8100329a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100329d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810032a0:	83 c8 01             	or     $0x1,%eax
810032a3:	89 c2                	mov    %eax,%edx
810032a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032a8:	89 50 04             	mov    %edx,0x4(%eax)
810032ab:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810032b0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810032b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810032b6:	01 c8                	add    %ecx,%eax
810032b8:	89 42 08             	mov    %eax,0x8(%edx)
810032bb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032be:	83 c8 01             	or     $0x1,%eax
810032c1:	89 c2                	mov    %eax,%edx
810032c3:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
810032c8:	8b 40 08             	mov    0x8(%eax),%eax
810032cb:	89 50 04             	mov    %edx,0x4(%eax)
810032ce:	83 ec 0c             	sub    $0xc,%esp
810032d1:	ff 75 08             	push   0x8(%ebp)
810032d4:	e8 d5 01 00 00       	call   810034ae <__malloc_unlock>
810032d9:	83 c4 10             	add    $0x10,%esp
810032dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032df:	83 c0 08             	add    $0x8,%eax
810032e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810032e5:	c9                   	leave  
810032e6:	c3                   	ret    
810032e7:	66 90                	xchg   %ax,%ax
810032e9:	66 90                	xchg   %ax,%ax
810032eb:	66 90                	xchg   %ax,%ax
810032ed:	66 90                	xchg   %ax,%ax
810032ef:	90                   	nop

810032f0 <memchr>:
810032f0:	55                   	push   %ebp
810032f1:	89 e5                	mov    %esp,%ebp
810032f3:	57                   	push   %edi
810032f4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810032f8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810032fb:	8b 7d 08             	mov    0x8(%ebp),%edi
810032fe:	31 d2                	xor    %edx,%edx
81003300:	85 c9                	test   %ecx,%ecx
81003302:	74 79                	je     8100337d <L20>
81003304:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100330a:	74 28                	je     81003334 <L5>
8100330c:	3a 07                	cmp    (%edi),%al
8100330e:	74 6a                	je     8100337a <L15>
81003310:	47                   	inc    %edi
81003311:	49                   	dec    %ecx
81003312:	74 69                	je     8100337d <L20>
81003314:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100331a:	74 18                	je     81003334 <L5>
8100331c:	3a 07                	cmp    (%edi),%al
8100331e:	74 5a                	je     8100337a <L15>
81003320:	47                   	inc    %edi
81003321:	49                   	dec    %ecx
81003322:	74 59                	je     8100337d <L20>
81003324:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100332a:	74 08                	je     81003334 <L5>
8100332c:	3a 07                	cmp    (%edi),%al
8100332e:	74 4a                	je     8100337a <L15>
81003330:	47                   	inc    %edi
81003331:	49                   	dec    %ecx
81003332:	74 49                	je     8100337d <L20>

81003334 <L5>:
81003334:	88 c4                	mov    %al,%ah
81003336:	89 c2                	mov    %eax,%edx
81003338:	c1 e2 10             	shl    $0x10,%edx
8100333b:	09 d0                	or     %edx,%eax
8100333d:	53                   	push   %ebx
8100333e:	66 90                	xchg   %ax,%ax

81003340 <L8>:
81003340:	83 e9 04             	sub    $0x4,%ecx
81003343:	72 1c                	jb     81003361 <L9>
81003345:	8b 17                	mov    (%edi),%edx
81003347:	83 c7 04             	add    $0x4,%edi
8100334a:	31 c2                	xor    %eax,%edx
8100334c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81003352:	f7 d2                	not    %edx
81003354:	21 d3                	and    %edx,%ebx
81003356:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100335c:	74 e2                	je     81003340 <L8>
8100335e:	83 ef 04             	sub    $0x4,%edi

81003361 <L9>:
81003361:	5b                   	pop    %ebx
81003362:	31 d2                	xor    %edx,%edx
81003364:	83 c1 04             	add    $0x4,%ecx
81003367:	74 14                	je     8100337d <L20>
81003369:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81003370 <L10>:
81003370:	3a 07                	cmp    (%edi),%al
81003372:	74 06                	je     8100337a <L15>
81003374:	47                   	inc    %edi
81003375:	49                   	dec    %ecx
81003376:	75 f8                	jne    81003370 <L10>
81003378:	31 ff                	xor    %edi,%edi

8100337a <L15>:
8100337a:	4a                   	dec    %edx
8100337b:	21 fa                	and    %edi,%edx

8100337d <L20>:
8100337d:	89 d0                	mov    %edx,%eax
8100337f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81003382:	5f                   	pop    %edi
81003383:	c9                   	leave  
81003384:	c3                   	ret    

81003385 <memcmp>:
81003385:	55                   	push   %ebp
81003386:	89 e5                	mov    %esp,%ebp
81003388:	83 ec 10             	sub    $0x10,%esp
8100338b:	53                   	push   %ebx
8100338c:	57                   	push   %edi
8100338d:	56                   	push   %esi
8100338e:	8b 7d 08             	mov    0x8(%ebp),%edi
81003391:	8b 75 0c             	mov    0xc(%ebp),%esi
81003394:	8b 4d 10             	mov    0x10(%ebp),%ecx
81003397:	fc                   	cld    
81003398:	31 c0                	xor    %eax,%eax
8100339a:	85 c9                	test   %ecx,%ecx
8100339c:	74 31                	je     810033cf <L4>
8100339e:	89 f8                	mov    %edi,%eax
810033a0:	09 f0                	or     %esi,%eax
810033a2:	a8 03                	test   $0x3,%al
810033a4:	75 1b                	jne    810033c1 <BYTECMP>
810033a6:	89 cb                	mov    %ecx,%ebx
810033a8:	c1 e9 02             	shr    $0x2,%ecx
810033ab:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
810033ad:	74 0d                	je     810033bc <L5>
810033af:	83 ee 04             	sub    $0x4,%esi
810033b2:	83 ef 04             	sub    $0x4,%edi
810033b5:	b9 04 00 00 00       	mov    $0x4,%ecx
810033ba:	eb 05                	jmp    810033c1 <BYTECMP>

810033bc <L5>:
810033bc:	83 e3 03             	and    $0x3,%ebx
810033bf:	89 d9                	mov    %ebx,%ecx

810033c1 <BYTECMP>:
810033c1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

810033c3 <L3>:
810033c3:	31 d2                	xor    %edx,%edx
810033c5:	8a 56 ff             	mov    -0x1(%esi),%dl
810033c8:	31 c0                	xor    %eax,%eax
810033ca:	8a 47 ff             	mov    -0x1(%edi),%al
810033cd:	29 d0                	sub    %edx,%eax

810033cf <L4>:
810033cf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
810033d2:	5e                   	pop    %esi
810033d3:	5f                   	pop    %edi
810033d4:	5b                   	pop    %ebx
810033d5:	c9                   	leave  
810033d6:	c3                   	ret    
810033d7:	90                   	nop

810033d8 <memcpy>:
810033d8:	55                   	push   %ebp
810033d9:	89 e5                	mov    %esp,%ebp
810033db:	56                   	push   %esi
810033dc:	57                   	push   %edi
810033dd:	53                   	push   %ebx
810033de:	8b 7d 08             	mov    0x8(%ebp),%edi
810033e1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810033e4:	8b 75 0c             	mov    0xc(%ebp),%esi
810033e7:	fc                   	cld    
810033e8:	83 f9 08             	cmp    $0x8,%ecx
810033eb:	76 26                	jbe    81003413 <memcpy+0x3b>
810033ed:	89 fa                	mov    %edi,%edx
810033ef:	89 cb                	mov    %ecx,%ebx
810033f1:	83 e2 03             	and    $0x3,%edx
810033f4:	74 10                	je     81003406 <memcpy+0x2e>
810033f6:	b9 04 00 00 00       	mov    $0x4,%ecx
810033fb:	29 d1                	sub    %edx,%ecx
810033fd:	83 e1 03             	and    $0x3,%ecx
81003400:	29 cb                	sub    %ecx,%ebx
81003402:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003404:	89 d9                	mov    %ebx,%ecx
81003406:	c1 e9 02             	shr    $0x2,%ecx
81003409:	8d 76 00             	lea    0x0(%esi),%esi
8100340c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8100340e:	89 d9                	mov    %ebx,%ecx
81003410:	83 e1 03             	and    $0x3,%ecx
81003413:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81003415:	8b 45 08             	mov    0x8(%ebp),%eax
81003418:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100341b:	5b                   	pop    %ebx
8100341c:	5f                   	pop    %edi
8100341d:	5e                   	pop    %esi
8100341e:	c9                   	leave  
8100341f:	c3                   	ret    

81003420 <memset>:
81003420:	55                   	push   %ebp
81003421:	89 e5                	mov    %esp,%ebp
81003423:	57                   	push   %edi
81003424:	8b 7d 08             	mov    0x8(%ebp),%edi
81003427:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8100342b:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100342e:	fc                   	cld    
8100342f:	83 f9 10             	cmp    $0x10,%ecx
81003432:	76 69                	jbe    8100349d <memset+0x7d>
81003434:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100343a:	74 4c                	je     81003488 <memset+0x68>
8100343c:	88 07                	mov    %al,(%edi)
8100343e:	47                   	inc    %edi
8100343f:	49                   	dec    %ecx
81003440:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003446:	74 40                	je     81003488 <memset+0x68>
81003448:	88 07                	mov    %al,(%edi)
8100344a:	47                   	inc    %edi
8100344b:	49                   	dec    %ecx
8100344c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003452:	74 34                	je     81003488 <memset+0x68>
81003454:	88 07                	mov    %al,(%edi)
81003456:	47                   	inc    %edi
81003457:	49                   	dec    %ecx
81003458:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100345e:	74 28                	je     81003488 <memset+0x68>
81003460:	88 07                	mov    %al,(%edi)
81003462:	47                   	inc    %edi
81003463:	49                   	dec    %ecx
81003464:	f7 c7 07 00 00 00    	test   $0x7,%edi
8100346a:	74 1c                	je     81003488 <memset+0x68>
8100346c:	88 07                	mov    %al,(%edi)
8100346e:	47                   	inc    %edi
8100346f:	49                   	dec    %ecx
81003470:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003476:	74 10                	je     81003488 <memset+0x68>
81003478:	88 07                	mov    %al,(%edi)
8100347a:	47                   	inc    %edi
8100347b:	49                   	dec    %ecx
8100347c:	f7 c7 07 00 00 00    	test   $0x7,%edi
81003482:	74 04                	je     81003488 <memset+0x68>
81003484:	88 07                	mov    %al,(%edi)
81003486:	47                   	inc    %edi
81003487:	49                   	dec    %ecx
81003488:	88 c4                	mov    %al,%ah
8100348a:	89 c2                	mov    %eax,%edx
8100348c:	c1 e2 10             	shl    $0x10,%edx
8100348f:	09 d0                	or     %edx,%eax
81003491:	89 ca                	mov    %ecx,%edx
81003493:	c1 e9 02             	shr    $0x2,%ecx
81003496:	83 e2 03             	and    $0x3,%edx
81003499:	f3 ab                	rep stos %eax,%es:(%edi)
8100349b:	89 d1                	mov    %edx,%ecx
8100349d:	f3 aa                	rep stos %al,%es:(%edi)
8100349f:	8b 45 08             	mov    0x8(%ebp),%eax
810034a2:	8d 65 fc             	lea    -0x4(%ebp),%esp
810034a5:	5f                   	pop    %edi
810034a6:	c9                   	leave  
810034a7:	c3                   	ret    

810034a8 <__malloc_lock>:
810034a8:	55                   	push   %ebp
810034a9:	89 e5                	mov    %esp,%ebp
810034ab:	90                   	nop
810034ac:	5d                   	pop    %ebp
810034ad:	c3                   	ret    

810034ae <__malloc_unlock>:
810034ae:	55                   	push   %ebp
810034af:	89 e5                	mov    %esp,%ebp
810034b1:	90                   	nop
810034b2:	5d                   	pop    %ebp
810034b3:	c3                   	ret    

810034b4 <__sprint_r>:
810034b4:	55                   	push   %ebp
810034b5:	89 e5                	mov    %esp,%ebp
810034b7:	56                   	push   %esi
810034b8:	53                   	push   %ebx
810034b9:	83 ec 10             	sub    $0x10,%esp
810034bc:	8b 5d 10             	mov    0x10(%ebp),%ebx
810034bf:	be 00 00 00 00       	mov    $0x0,%esi
810034c4:	8b 43 08             	mov    0x8(%ebx),%eax
810034c7:	85 c0                	test   %eax,%eax
810034c9:	75 11                	jne    810034dc <__sprint_r+0x28>
810034cb:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810034d2:	b8 00 00 00 00       	mov    $0x0,%eax
810034d7:	e9 ad 00 00 00       	jmp    81003589 <__sprint_r+0xd5>
810034dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810034df:	8b 40 64             	mov    0x64(%eax),%eax
810034e2:	25 00 20 00 00       	and    $0x2000,%eax
810034e7:	85 c0                	test   %eax,%eax
810034e9:	74 7a                	je     81003565 <__sprint_r+0xb1>
810034eb:	8b 03                	mov    (%ebx),%eax
810034ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810034f0:	eb 6a                	jmp    8100355c <__sprint_r+0xa8>
810034f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034f5:	8b 00                	mov    (%eax),%eax
810034f7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810034fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034fd:	8b 40 04             	mov    0x4(%eax),%eax
81003500:	c1 e8 02             	shr    $0x2,%eax
81003503:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003506:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100350d:	eb 33                	jmp    81003542 <__sprint_r+0x8e>
8100350f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003512:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003519:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100351c:	01 d0                	add    %edx,%eax
8100351e:	8b 00                	mov    (%eax),%eax
81003520:	83 ec 04             	sub    $0x4,%esp
81003523:	ff 75 0c             	push   0xc(%ebp)
81003526:	50                   	push   %eax
81003527:	ff 75 08             	push   0x8(%ebp)
8100352a:	e8 06 1d 00 00       	call   81005235 <_fputwc_r>
8100352f:	83 c4 10             	add    $0x10,%esp
81003532:	83 f8 ff             	cmp    $0xffffffff,%eax
81003535:	75 07                	jne    8100353e <__sprint_r+0x8a>
81003537:	be ff ff ff ff       	mov    $0xffffffff,%esi
8100353c:	eb 3b                	jmp    81003579 <__sprint_r+0xc5>
8100353e:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003542:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003545:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81003548:	7c c5                	jl     8100350f <__sprint_r+0x5b>
8100354a:	8b 43 08             	mov    0x8(%ebx),%eax
8100354d:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003550:	c1 e2 02             	shl    $0x2,%edx
81003553:	29 d0                	sub    %edx,%eax
81003555:	89 43 08             	mov    %eax,0x8(%ebx)
81003558:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
8100355c:	8b 43 08             	mov    0x8(%ebx),%eax
8100355f:	85 c0                	test   %eax,%eax
81003561:	75 8f                	jne    810034f2 <__sprint_r+0x3e>
81003563:	eb 14                	jmp    81003579 <__sprint_r+0xc5>
81003565:	83 ec 04             	sub    $0x4,%esp
81003568:	53                   	push   %ebx
81003569:	ff 75 0c             	push   0xc(%ebp)
8100356c:	ff 75 08             	push   0x8(%ebp)
8100356f:	e8 60 1d 00 00       	call   810052d4 <__sfvwrite_r>
81003574:	83 c4 10             	add    $0x10,%esp
81003577:	89 c6                	mov    %eax,%esi
81003579:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003580:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81003587:	89 f0                	mov    %esi,%eax
81003589:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100358c:	5b                   	pop    %ebx
8100358d:	5e                   	pop    %esi
8100358e:	5d                   	pop    %ebp
8100358f:	c3                   	ret    

81003590 <__sfputc_r>:
81003590:	55                   	push   %ebp
81003591:	89 e5                	mov    %esp,%ebp
81003593:	83 ec 08             	sub    $0x8,%esp
81003596:	8b 45 10             	mov    0x10(%ebp),%eax
81003599:	8b 40 08             	mov    0x8(%eax),%eax
8100359c:	8d 50 ff             	lea    -0x1(%eax),%edx
8100359f:	8b 45 10             	mov    0x10(%ebp),%eax
810035a2:	89 50 08             	mov    %edx,0x8(%eax)
810035a5:	8b 45 10             	mov    0x10(%ebp),%eax
810035a8:	8b 40 08             	mov    0x8(%eax),%eax
810035ab:	85 c0                	test   %eax,%eax
810035ad:	79 17                	jns    810035c6 <__sfputc_r+0x36>
810035af:	8b 45 10             	mov    0x10(%ebp),%eax
810035b2:	8b 50 08             	mov    0x8(%eax),%edx
810035b5:	8b 45 10             	mov    0x10(%ebp),%eax
810035b8:	8b 40 18             	mov    0x18(%eax),%eax
810035bb:	39 c2                	cmp    %eax,%edx
810035bd:	7c 21                	jl     810035e0 <__sfputc_r+0x50>
810035bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810035c2:	3c 0a                	cmp    $0xa,%al
810035c4:	74 1a                	je     810035e0 <__sfputc_r+0x50>
810035c6:	8b 45 10             	mov    0x10(%ebp),%eax
810035c9:	8b 00                	mov    (%eax),%eax
810035cb:	8d 48 01             	lea    0x1(%eax),%ecx
810035ce:	8b 55 10             	mov    0x10(%ebp),%edx
810035d1:	89 0a                	mov    %ecx,(%edx)
810035d3:	8b 55 0c             	mov    0xc(%ebp),%edx
810035d6:	88 10                	mov    %dl,(%eax)
810035d8:	0f b6 00             	movzbl (%eax),%eax
810035db:	0f b6 c0             	movzbl %al,%eax
810035de:	eb 14                	jmp    810035f4 <__sfputc_r+0x64>
810035e0:	83 ec 04             	sub    $0x4,%esp
810035e3:	ff 75 10             	push   0x10(%ebp)
810035e6:	ff 75 0c             	push   0xc(%ebp)
810035e9:	ff 75 08             	push   0x8(%ebp)
810035ec:	e8 7e 14 00 00       	call   81004a6f <__swbuf_r>
810035f1:	83 c4 10             	add    $0x10,%esp
810035f4:	c9                   	leave  
810035f5:	c3                   	ret    

810035f6 <__sfputs_r>:
810035f6:	55                   	push   %ebp
810035f7:	89 e5                	mov    %esp,%ebp
810035f9:	53                   	push   %ebx
810035fa:	83 ec 14             	sub    $0x14,%esp
810035fd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003600:	8b 40 64             	mov    0x64(%eax),%eax
81003603:	25 00 20 00 00       	and    $0x2000,%eax
81003608:	85 c0                	test   %eax,%eax
8100360a:	74 4c                	je     81003658 <__sfputs_r+0x62>
8100360c:	8b 45 10             	mov    0x10(%ebp),%eax
8100360f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003612:	bb 00 00 00 00       	mov    $0x0,%ebx
81003617:	eb 31                	jmp    8100364a <__sfputs_r+0x54>
81003619:	89 d8                	mov    %ebx,%eax
8100361b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003622:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003625:	01 d0                	add    %edx,%eax
81003627:	8b 00                	mov    (%eax),%eax
81003629:	83 ec 04             	sub    $0x4,%esp
8100362c:	ff 75 0c             	push   0xc(%ebp)
8100362f:	50                   	push   %eax
81003630:	ff 75 08             	push   0x8(%ebp)
81003633:	e8 fd 1b 00 00       	call   81005235 <_fputwc_r>
81003638:	83 c4 10             	add    $0x10,%esp
8100363b:	83 f8 ff             	cmp    $0xffffffff,%eax
8100363e:	75 07                	jne    81003647 <__sfputs_r+0x51>
81003640:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003645:	eb 52                	jmp    81003699 <__sfputs_r+0xa3>
81003647:	83 c3 01             	add    $0x1,%ebx
8100364a:	8b 45 14             	mov    0x14(%ebp),%eax
8100364d:	c1 e8 02             	shr    $0x2,%eax
81003650:	89 da                	mov    %ebx,%edx
81003652:	39 d0                	cmp    %edx,%eax
81003654:	77 c3                	ja     81003619 <__sfputs_r+0x23>
81003656:	eb 3c                	jmp    81003694 <__sfputs_r+0x9e>
81003658:	bb 00 00 00 00       	mov    $0x0,%ebx
8100365d:	eb 2e                	jmp    8100368d <__sfputs_r+0x97>
8100365f:	89 da                	mov    %ebx,%edx
81003661:	8b 45 10             	mov    0x10(%ebp),%eax
81003664:	01 d0                	add    %edx,%eax
81003666:	0f b6 00             	movzbl (%eax),%eax
81003669:	0f be c0             	movsbl %al,%eax
8100366c:	83 ec 04             	sub    $0x4,%esp
8100366f:	ff 75 0c             	push   0xc(%ebp)
81003672:	50                   	push   %eax
81003673:	ff 75 08             	push   0x8(%ebp)
81003676:	e8 15 ff ff ff       	call   81003590 <__sfputc_r>
8100367b:	83 c4 10             	add    $0x10,%esp
8100367e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003681:	75 07                	jne    8100368a <__sfputs_r+0x94>
81003683:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003688:	eb 0f                	jmp    81003699 <__sfputs_r+0xa3>
8100368a:	83 c3 01             	add    $0x1,%ebx
8100368d:	89 d8                	mov    %ebx,%eax
8100368f:	39 45 14             	cmp    %eax,0x14(%ebp)
81003692:	77 cb                	ja     8100365f <__sfputs_r+0x69>
81003694:	b8 00 00 00 00       	mov    $0x0,%eax
81003699:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100369c:	c9                   	leave  
8100369d:	c3                   	ret    

8100369e <vfiprintf>:
8100369e:	55                   	push   %ebp
8100369f:	89 e5                	mov    %esp,%ebp
810036a1:	83 ec 18             	sub    $0x18,%esp
810036a4:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810036a9:	ff 75 10             	push   0x10(%ebp)
810036ac:	ff 75 0c             	push   0xc(%ebp)
810036af:	ff 75 08             	push   0x8(%ebp)
810036b2:	50                   	push   %eax
810036b3:	e8 0b 00 00 00       	call   810036c3 <_vfiprintf_r>
810036b8:	83 c4 10             	add    $0x10,%esp
810036bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036c1:	c9                   	leave  
810036c2:	c3                   	ret    

810036c3 <_vfiprintf_r>:
810036c3:	55                   	push   %ebp
810036c4:	89 e5                	mov    %esp,%ebp
810036c6:	57                   	push   %edi
810036c7:	56                   	push   %esi
810036c8:	53                   	push   %ebx
810036c9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
810036cf:	c7 45 e4 f6 35 00 81 	movl   $0x810035f6,-0x1c(%ebp)
810036d6:	8b 45 08             	mov    0x8(%ebp),%eax
810036d9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810036dc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
810036e0:	74 18                	je     810036fa <_vfiprintf_r+0x37>
810036e2:	8b 45 e0             	mov    -0x20(%ebp),%eax
810036e5:	8b 40 38             	mov    0x38(%eax),%eax
810036e8:	85 c0                	test   %eax,%eax
810036ea:	75 0e                	jne    810036fa <_vfiprintf_r+0x37>
810036ec:	83 ec 0c             	sub    $0xc,%esp
810036ef:	ff 75 e0             	push   -0x20(%ebp)
810036f2:	e8 bc da ff ff       	call   810011b3 <__sinit>
810036f7:	83 c4 10             	add    $0x10,%esp
810036fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810036fd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003701:	98                   	cwtl   
81003702:	83 e0 08             	and    $0x8,%eax
81003705:	85 c0                	test   %eax,%eax
81003707:	74 0a                	je     81003713 <_vfiprintf_r+0x50>
81003709:	8b 45 0c             	mov    0xc(%ebp),%eax
8100370c:	8b 40 10             	mov    0x10(%eax),%eax
8100370f:	85 c0                	test   %eax,%eax
81003711:	75 1f                	jne    81003732 <_vfiprintf_r+0x6f>
81003713:	83 ec 08             	sub    $0x8,%esp
81003716:	ff 75 0c             	push   0xc(%ebp)
81003719:	ff 75 08             	push   0x8(%ebp)
8100371c:	e8 c7 14 00 00       	call   81004be8 <__swsetup_r>
81003721:	83 c4 10             	add    $0x10,%esp
81003724:	85 c0                	test   %eax,%eax
81003726:	74 0a                	je     81003732 <_vfiprintf_r+0x6f>
81003728:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100372d:	e9 df 02 00 00       	jmp    81003a11 <_vfiprintf_r+0x34e>
81003732:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003735:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
8100373c:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81003740:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81003744:	8b 45 14             	mov    0x14(%ebp),%eax
81003747:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8100374d:	89 de                	mov    %ebx,%esi
8100374f:	eb 03                	jmp    81003754 <_vfiprintf_r+0x91>
81003751:	83 c3 01             	add    $0x1,%ebx
81003754:	0f b6 03             	movzbl (%ebx),%eax
81003757:	84 c0                	test   %al,%al
81003759:	74 07                	je     81003762 <_vfiprintf_r+0x9f>
8100375b:	0f b6 03             	movzbl (%ebx),%eax
8100375e:	3c 25                	cmp    $0x25,%al
81003760:	75 ef                	jne    81003751 <_vfiprintf_r+0x8e>
81003762:	89 d8                	mov    %ebx,%eax
81003764:	29 f0                	sub    %esi,%eax
81003766:	85 c0                	test   %eax,%eax
81003768:	74 2b                	je     81003795 <_vfiprintf_r+0xd2>
8100376a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81003770:	50                   	push   %eax
81003771:	56                   	push   %esi
81003772:	ff 75 0c             	push   0xc(%ebp)
81003775:	ff 75 08             	push   0x8(%ebp)
81003778:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100377b:	ff d0                	call   *%eax
8100377d:	83 c4 10             	add    $0x10,%esp
81003780:	83 f8 ff             	cmp    $0xffffffff,%eax
81003783:	0f 84 68 02 00 00    	je     810039f1 <_vfiprintf_r+0x32e>
81003789:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100378c:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81003792:	89 45 94             	mov    %eax,-0x6c(%ebp)
81003795:	0f b6 03             	movzbl (%ebx),%eax
81003798:	84 c0                	test   %al,%al
8100379a:	0f 84 54 02 00 00    	je     810039f4 <_vfiprintf_r+0x331>
810037a0:	83 c3 01             	add    $0x1,%ebx
810037a3:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
810037aa:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
810037b1:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810037b8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
810037bf:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
810037c3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810037ca:	c7 45 dc f0 6d 00 81 	movl   $0x81006df0,-0x24(%ebp)
810037d1:	eb 1b                	jmp    810037ee <_vfiprintf_r+0x12b>
810037d3:	8b 55 80             	mov    -0x80(%ebp),%edx
810037d6:	89 f0                	mov    %esi,%eax
810037d8:	2b 45 dc             	sub    -0x24(%ebp),%eax
810037db:	be 01 00 00 00       	mov    $0x1,%esi
810037e0:	89 c1                	mov    %eax,%ecx
810037e2:	d3 e6                	shl    %cl,%esi
810037e4:	89 f0                	mov    %esi,%eax
810037e6:	09 d0                	or     %edx,%eax
810037e8:	89 45 80             	mov    %eax,-0x80(%ebp)
810037eb:	83 c3 01             	add    $0x1,%ebx
810037ee:	0f b6 03             	movzbl (%ebx),%eax
810037f1:	0f be c0             	movsbl %al,%eax
810037f4:	83 ec 04             	sub    $0x4,%esp
810037f7:	6a 05                	push   $0x5
810037f9:	50                   	push   %eax
810037fa:	ff 75 dc             	push   -0x24(%ebp)
810037fd:	e8 ee fa ff ff       	call   810032f0 <memchr>
81003802:	83 c4 10             	add    $0x10,%esp
81003805:	89 c6                	mov    %eax,%esi
81003807:	85 f6                	test   %esi,%esi
81003809:	75 c8                	jne    810037d3 <_vfiprintf_r+0x110>
8100380b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100380e:	83 e0 10             	and    $0x10,%eax
81003811:	85 c0                	test   %eax,%eax
81003813:	74 04                	je     81003819 <_vfiprintf_r+0x156>
81003815:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81003819:	8b 45 80             	mov    -0x80(%ebp),%eax
8100381c:	83 e0 08             	and    $0x8,%eax
8100381f:	85 c0                	test   %eax,%eax
81003821:	74 04                	je     81003827 <_vfiprintf_r+0x164>
81003823:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81003827:	0f b6 03             	movzbl (%ebx),%eax
8100382a:	3c 2a                	cmp    $0x2a,%al
8100382c:	75 50                	jne    8100387e <_vfiprintf_r+0x1bb>
8100382e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003834:	8d 50 04             	lea    0x4(%eax),%edx
81003837:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100383d:	8b 00                	mov    (%eax),%eax
8100383f:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003842:	8b 45 8c             	mov    -0x74(%ebp),%eax
81003845:	85 c0                	test   %eax,%eax
81003847:	79 11                	jns    8100385a <_vfiprintf_r+0x197>
81003849:	8b 45 8c             	mov    -0x74(%ebp),%eax
8100384c:	f7 d8                	neg    %eax
8100384e:	89 45 8c             	mov    %eax,-0x74(%ebp)
81003851:	8b 45 80             	mov    -0x80(%ebp),%eax
81003854:	83 c8 02             	or     $0x2,%eax
81003857:	89 45 80             	mov    %eax,-0x80(%ebp)
8100385a:	83 c3 01             	add    $0x1,%ebx
8100385d:	eb 2d                	jmp    8100388c <_vfiprintf_r+0x1c9>
8100385f:	8b 55 8c             	mov    -0x74(%ebp),%edx
81003862:	89 d0                	mov    %edx,%eax
81003864:	c1 e0 02             	shl    $0x2,%eax
81003867:	01 d0                	add    %edx,%eax
81003869:	01 c0                	add    %eax,%eax
8100386b:	89 c2                	mov    %eax,%edx
8100386d:	0f b6 03             	movzbl (%ebx),%eax
81003870:	0f be c0             	movsbl %al,%eax
81003873:	83 e8 30             	sub    $0x30,%eax
81003876:	01 d0                	add    %edx,%eax
81003878:	89 45 8c             	mov    %eax,-0x74(%ebp)
8100387b:	83 c3 01             	add    $0x1,%ebx
8100387e:	0f b6 03             	movzbl (%ebx),%eax
81003881:	0f be c0             	movsbl %al,%eax
81003884:	83 e8 30             	sub    $0x30,%eax
81003887:	83 f8 09             	cmp    $0x9,%eax
8100388a:	76 d3                	jbe    8100385f <_vfiprintf_r+0x19c>
8100388c:	0f b6 03             	movzbl (%ebx),%eax
8100388f:	3c 2e                	cmp    $0x2e,%al
81003891:	75 67                	jne    810038fa <_vfiprintf_r+0x237>
81003893:	83 c3 01             	add    $0x1,%ebx
81003896:	0f b6 03             	movzbl (%ebx),%eax
81003899:	3c 2a                	cmp    $0x2a,%al
8100389b:	75 27                	jne    810038c4 <_vfiprintf_r+0x201>
8100389d:	83 c3 01             	add    $0x1,%ebx
810038a0:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810038a6:	8d 50 04             	lea    0x4(%eax),%edx
810038a9:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
810038af:	8b 00                	mov    (%eax),%eax
810038b1:	89 45 84             	mov    %eax,-0x7c(%ebp)
810038b4:	8b 45 84             	mov    -0x7c(%ebp),%eax
810038b7:	85 c0                	test   %eax,%eax
810038b9:	79 3f                	jns    810038fa <_vfiprintf_r+0x237>
810038bb:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
810038c2:	eb 36                	jmp    810038fa <_vfiprintf_r+0x237>
810038c4:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
810038cb:	eb 1f                	jmp    810038ec <_vfiprintf_r+0x229>
810038cd:	8b 55 84             	mov    -0x7c(%ebp),%edx
810038d0:	89 d0                	mov    %edx,%eax
810038d2:	c1 e0 02             	shl    $0x2,%eax
810038d5:	01 d0                	add    %edx,%eax
810038d7:	01 c0                	add    %eax,%eax
810038d9:	89 c2                	mov    %eax,%edx
810038db:	0f b6 03             	movzbl (%ebx),%eax
810038de:	0f be c0             	movsbl %al,%eax
810038e1:	83 e8 30             	sub    $0x30,%eax
810038e4:	01 d0                	add    %edx,%eax
810038e6:	89 45 84             	mov    %eax,-0x7c(%ebp)
810038e9:	83 c3 01             	add    $0x1,%ebx
810038ec:	0f b6 03             	movzbl (%ebx),%eax
810038ef:	0f be c0             	movsbl %al,%eax
810038f2:	83 e8 30             	sub    $0x30,%eax
810038f5:	83 f8 09             	cmp    $0x9,%eax
810038f8:	76 d3                	jbe    810038cd <_vfiprintf_r+0x20a>
810038fa:	c7 45 dc f6 6d 00 81 	movl   $0x81006df6,-0x24(%ebp)
81003901:	0f b6 03             	movzbl (%ebx),%eax
81003904:	0f be c0             	movsbl %al,%eax
81003907:	83 ec 04             	sub    $0x4,%esp
8100390a:	6a 03                	push   $0x3
8100390c:	50                   	push   %eax
8100390d:	ff 75 dc             	push   -0x24(%ebp)
81003910:	e8 db f9 ff ff       	call   810032f0 <memchr>
81003915:	83 c4 10             	add    $0x10,%esp
81003918:	89 c6                	mov    %eax,%esi
8100391a:	85 f6                	test   %esi,%esi
8100391c:	74 1b                	je     81003939 <_vfiprintf_r+0x276>
8100391e:	8b 55 80             	mov    -0x80(%ebp),%edx
81003921:	89 f0                	mov    %esi,%eax
81003923:	2b 45 dc             	sub    -0x24(%ebp),%eax
81003926:	be 40 00 00 00       	mov    $0x40,%esi
8100392b:	89 c1                	mov    %eax,%ecx
8100392d:	d3 e6                	shl    %cl,%esi
8100392f:	89 f0                	mov    %esi,%eax
81003931:	09 d0                	or     %edx,%eax
81003933:	89 45 80             	mov    %eax,-0x80(%ebp)
81003936:	83 c3 01             	add    $0x1,%ebx
81003939:	89 d8                	mov    %ebx,%eax
8100393b:	8d 58 01             	lea    0x1(%eax),%ebx
8100393e:	0f b6 00             	movzbl (%eax),%eax
81003941:	88 45 98             	mov    %al,-0x68(%ebp)
81003944:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81003948:	0f be c0             	movsbl %al,%eax
8100394b:	83 ec 04             	sub    $0x4,%esp
8100394e:	6a 06                	push   $0x6
81003950:	50                   	push   %eax
81003951:	68 fa 6d 00 81       	push   $0x81006dfa
81003956:	e8 95 f9 ff ff       	call   810032f0 <memchr>
8100395b:	83 c4 10             	add    $0x10,%esp
8100395e:	89 c6                	mov    %eax,%esi
81003960:	85 f6                	test   %esi,%esi
81003962:	74 5a                	je     810039be <_vfiprintf_r+0x2fb>
81003964:	b8 00 00 00 00       	mov    $0x0,%eax
81003969:	85 c0                	test   %eax,%eax
8100396b:	75 2e                	jne    8100399b <_vfiprintf_r+0x2d8>
8100396d:	8b 45 80             	mov    -0x80(%ebp),%eax
81003970:	25 00 01 00 00       	and    $0x100,%eax
81003975:	85 c0                	test   %eax,%eax
81003977:	74 11                	je     8100398a <_vfiprintf_r+0x2c7>
81003979:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8100397f:	83 c0 0c             	add    $0xc,%eax
81003982:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003988:	eb 55                	jmp    810039df <_vfiprintf_r+0x31c>
8100398a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81003990:	83 c0 08             	add    $0x8,%eax
81003993:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81003999:	eb 44                	jmp    810039df <_vfiprintf_r+0x31c>
8100399b:	83 ec 0c             	sub    $0xc,%esp
8100399e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810039a4:	50                   	push   %eax
810039a5:	ff 75 e4             	push   -0x1c(%ebp)
810039a8:	ff 75 0c             	push   0xc(%ebp)
810039ab:	8d 45 80             	lea    -0x80(%ebp),%eax
810039ae:	50                   	push   %eax
810039af:	ff 75 08             	push   0x8(%ebp)
810039b2:	e8 49 c6 ff 7e       	call   0 <do_help-0x81000000>
810039b7:	83 c4 20             	add    $0x20,%esp
810039ba:	89 c7                	mov    %eax,%edi
810039bc:	eb 21                	jmp    810039df <_vfiprintf_r+0x31c>
810039be:	83 ec 0c             	sub    $0xc,%esp
810039c1:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810039c7:	50                   	push   %eax
810039c8:	ff 75 e4             	push   -0x1c(%ebp)
810039cb:	ff 75 0c             	push   0xc(%ebp)
810039ce:	8d 45 80             	lea    -0x80(%ebp),%eax
810039d1:	50                   	push   %eax
810039d2:	ff 75 08             	push   0x8(%ebp)
810039d5:	e8 da 01 00 00       	call   81003bb4 <_printf_i>
810039da:	83 c4 20             	add    $0x20,%esp
810039dd:	89 c7                	mov    %eax,%edi
810039df:	83 ff ff             	cmp    $0xffffffff,%edi
810039e2:	74 13                	je     810039f7 <_vfiprintf_r+0x334>
810039e4:	8b 45 94             	mov    -0x6c(%ebp),%eax
810039e7:	01 f8                	add    %edi,%eax
810039e9:	89 45 94             	mov    %eax,-0x6c(%ebp)
810039ec:	e9 5c fd ff ff       	jmp    8100374d <_vfiprintf_r+0x8a>
810039f1:	90                   	nop
810039f2:	eb 04                	jmp    810039f8 <_vfiprintf_r+0x335>
810039f4:	90                   	nop
810039f5:	eb 01                	jmp    810039f8 <_vfiprintf_r+0x335>
810039f7:	90                   	nop
810039f8:	8b 45 0c             	mov    0xc(%ebp),%eax
810039fb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810039ff:	98                   	cwtl   
81003a00:	83 e0 40             	and    $0x40,%eax
81003a03:	85 c0                	test   %eax,%eax
81003a05:	75 05                	jne    81003a0c <_vfiprintf_r+0x349>
81003a07:	8b 45 94             	mov    -0x6c(%ebp),%eax
81003a0a:	eb 05                	jmp    81003a11 <_vfiprintf_r+0x34e>
81003a0c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003a11:	8d 65 f4             	lea    -0xc(%ebp),%esp
81003a14:	5b                   	pop    %ebx
81003a15:	5e                   	pop    %esi
81003a16:	5f                   	pop    %edi
81003a17:	5d                   	pop    %ebp
81003a18:	c3                   	ret    

81003a19 <_printf_common>:
81003a19:	55                   	push   %ebp
81003a1a:	89 e5                	mov    %esp,%ebp
81003a1c:	83 ec 18             	sub    $0x18,%esp
81003a1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a22:	8b 50 10             	mov    0x10(%eax),%edx
81003a25:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a28:	8b 40 08             	mov    0x8(%eax),%eax
81003a2b:	39 c2                	cmp    %eax,%edx
81003a2d:	0f 4c d0             	cmovl  %eax,%edx
81003a30:	8b 45 10             	mov    0x10(%ebp),%eax
81003a33:	89 10                	mov    %edx,(%eax)
81003a35:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a38:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003a3c:	84 c0                	test   %al,%al
81003a3e:	74 0d                	je     81003a4d <_printf_common+0x34>
81003a40:	8b 45 10             	mov    0x10(%ebp),%eax
81003a43:	8b 00                	mov    (%eax),%eax
81003a45:	8d 50 01             	lea    0x1(%eax),%edx
81003a48:	8b 45 10             	mov    0x10(%ebp),%eax
81003a4b:	89 10                	mov    %edx,(%eax)
81003a4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a50:	8b 00                	mov    (%eax),%eax
81003a52:	83 e0 20             	and    $0x20,%eax
81003a55:	85 c0                	test   %eax,%eax
81003a57:	74 0d                	je     81003a66 <_printf_common+0x4d>
81003a59:	8b 45 10             	mov    0x10(%ebp),%eax
81003a5c:	8b 00                	mov    (%eax),%eax
81003a5e:	8d 50 02             	lea    0x2(%eax),%edx
81003a61:	8b 45 10             	mov    0x10(%ebp),%eax
81003a64:	89 10                	mov    %edx,(%eax)
81003a66:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a69:	8b 00                	mov    (%eax),%eax
81003a6b:	83 e0 06             	and    $0x6,%eax
81003a6e:	85 c0                	test   %eax,%eax
81003a70:	75 41                	jne    81003ab3 <_printf_common+0x9a>
81003a72:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003a79:	eb 24                	jmp    81003a9f <_printf_common+0x86>
81003a7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a7e:	83 c0 19             	add    $0x19,%eax
81003a81:	6a 01                	push   $0x1
81003a83:	50                   	push   %eax
81003a84:	ff 75 14             	push   0x14(%ebp)
81003a87:	ff 75 08             	push   0x8(%ebp)
81003a8a:	8b 45 18             	mov    0x18(%ebp),%eax
81003a8d:	ff d0                	call   *%eax
81003a8f:	83 c4 10             	add    $0x10,%esp
81003a92:	83 f8 ff             	cmp    $0xffffffff,%eax
81003a95:	0f 84 0b 01 00 00    	je     81003ba6 <_printf_common+0x18d>
81003a9b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003a9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aa2:	8b 50 0c             	mov    0xc(%eax),%edx
81003aa5:	8b 45 10             	mov    0x10(%ebp),%eax
81003aa8:	8b 08                	mov    (%eax),%ecx
81003aaa:	89 d0                	mov    %edx,%eax
81003aac:	29 c8                	sub    %ecx,%eax
81003aae:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003ab1:	7c c8                	jl     81003a7b <_printf_common+0x62>
81003ab3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003aba:	8b 45 0c             	mov    0xc(%ebp),%eax
81003abd:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81003ac1:	84 c0                	test   %al,%al
81003ac3:	74 04                	je     81003ac9 <_printf_common+0xb0>
81003ac5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81003ac9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003acc:	8b 00                	mov    (%eax),%eax
81003ace:	83 e0 20             	and    $0x20,%eax
81003ad1:	85 c0                	test   %eax,%eax
81003ad3:	74 28                	je     81003afd <_printf_common+0xe4>
81003ad5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ad8:	8d 50 01             	lea    0x1(%eax),%edx
81003adb:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003ade:	8b 55 0c             	mov    0xc(%ebp),%edx
81003ae1:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81003ae6:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae9:	8d 50 01             	lea    0x1(%eax),%edx
81003aec:	89 55 f4             	mov    %edx,-0xc(%ebp)
81003aef:	8b 55 0c             	mov    0xc(%ebp),%edx
81003af2:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81003af6:	8b 55 0c             	mov    0xc(%ebp),%edx
81003af9:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
81003afd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b00:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b03:	83 c2 43             	add    $0x43,%edx
81003b06:	50                   	push   %eax
81003b07:	52                   	push   %edx
81003b08:	ff 75 14             	push   0x14(%ebp)
81003b0b:	ff 75 08             	push   0x8(%ebp)
81003b0e:	8b 45 18             	mov    0x18(%ebp),%eax
81003b11:	ff d0                	call   *%eax
81003b13:	83 c4 10             	add    $0x10,%esp
81003b16:	83 f8 ff             	cmp    $0xffffffff,%eax
81003b19:	0f 84 8a 00 00 00    	je     81003ba9 <_printf_common+0x190>
81003b1f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b22:	8b 50 0c             	mov    0xc(%eax),%edx
81003b25:	8b 45 10             	mov    0x10(%ebp),%eax
81003b28:	8b 08                	mov    (%eax),%ecx
81003b2a:	89 d0                	mov    %edx,%eax
81003b2c:	29 c8                	sub    %ecx,%eax
81003b2e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003b31:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b34:	8b 00                	mov    (%eax),%eax
81003b36:	83 e0 06             	and    $0x6,%eax
81003b39:	83 f8 04             	cmp    $0x4,%eax
81003b3c:	75 06                	jne    81003b44 <_printf_common+0x12b>
81003b3e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b42:	79 07                	jns    81003b4b <_printf_common+0x132>
81003b44:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003b4b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b4e:	8b 50 08             	mov    0x8(%eax),%edx
81003b51:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b54:	8b 40 10             	mov    0x10(%eax),%eax
81003b57:	39 c2                	cmp    %eax,%edx
81003b59:	7e 13                	jle    81003b6e <_printf_common+0x155>
81003b5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b5e:	8b 50 08             	mov    0x8(%eax),%edx
81003b61:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b64:	8b 48 10             	mov    0x10(%eax),%ecx
81003b67:	89 d0                	mov    %edx,%eax
81003b69:	29 c8                	sub    %ecx,%eax
81003b6b:	01 45 f4             	add    %eax,-0xc(%ebp)
81003b6e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003b75:	eb 20                	jmp    81003b97 <_printf_common+0x17e>
81003b77:	8b 45 0c             	mov    0xc(%ebp),%eax
81003b7a:	83 c0 1a             	add    $0x1a,%eax
81003b7d:	6a 01                	push   $0x1
81003b7f:	50                   	push   %eax
81003b80:	ff 75 14             	push   0x14(%ebp)
81003b83:	ff 75 08             	push   0x8(%ebp)
81003b86:	8b 45 18             	mov    0x18(%ebp),%eax
81003b89:	ff d0                	call   *%eax
81003b8b:	83 c4 10             	add    $0x10,%esp
81003b8e:	83 f8 ff             	cmp    $0xffffffff,%eax
81003b91:	74 19                	je     81003bac <_printf_common+0x193>
81003b93:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81003b97:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b9a:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81003b9d:	7c d8                	jl     81003b77 <_printf_common+0x15e>
81003b9f:	b8 00 00 00 00       	mov    $0x0,%eax
81003ba4:	eb 0c                	jmp    81003bb2 <_printf_common+0x199>
81003ba6:	90                   	nop
81003ba7:	eb 04                	jmp    81003bad <_printf_common+0x194>
81003ba9:	90                   	nop
81003baa:	eb 01                	jmp    81003bad <_printf_common+0x194>
81003bac:	90                   	nop
81003bad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003bb2:	c9                   	leave  
81003bb3:	c3                   	ret    

81003bb4 <_printf_i>:
81003bb4:	55                   	push   %ebp
81003bb5:	89 e5                	mov    %esp,%ebp
81003bb7:	53                   	push   %ebx
81003bb8:	83 ec 24             	sub    $0x24,%esp
81003bbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bbe:	83 c0 1b             	add    $0x1b,%eax
81003bc1:	83 c0 28             	add    $0x28,%eax
81003bc4:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003bc7:	c7 45 e8 04 6e 00 81 	movl   $0x81006e04,-0x18(%ebp)
81003bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81003bd1:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003bd5:	0f be c0             	movsbl %al,%eax
81003bd8:	85 c0                	test   %eax,%eax
81003bda:	0f 84 00 03 00 00    	je     81003ee0 <_printf_i+0x32c>
81003be0:	85 c0                	test   %eax,%eax
81003be2:	0f 88 52 03 00 00    	js     81003f3a <_printf_i+0x386>
81003be8:	83 f8 78             	cmp    $0x78,%eax
81003beb:	0f 8f 49 03 00 00    	jg     81003f3a <_printf_i+0x386>
81003bf1:	83 f8 58             	cmp    $0x58,%eax
81003bf4:	0f 8c 40 03 00 00    	jl     81003f3a <_printf_i+0x386>
81003bfa:	83 e8 58             	sub    $0x58,%eax
81003bfd:	83 f8 20             	cmp    $0x20,%eax
81003c00:	0f 87 34 03 00 00    	ja     81003f3a <_printf_i+0x386>
81003c06:	8b 04 85 28 6e 00 81 	mov    -0x7eff91d8(,%eax,4),%eax
81003c0d:	ff e0                	jmp    *%eax
81003c0f:	8b 45 18             	mov    0x18(%ebp),%eax
81003c12:	8b 00                	mov    (%eax),%eax
81003c14:	8d 48 04             	lea    0x4(%eax),%ecx
81003c17:	8b 55 18             	mov    0x18(%ebp),%edx
81003c1a:	89 0a                	mov    %ecx,(%edx)
81003c1c:	8b 00                	mov    (%eax),%eax
81003c1e:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003c22:	89 c2                	mov    %eax,%edx
81003c24:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c27:	88 10                	mov    %dl,(%eax)
81003c29:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c2c:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003c33:	e9 1c 03 00 00       	jmp    81003f54 <_printf_i+0x3a0>
81003c38:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c3b:	8b 00                	mov    (%eax),%eax
81003c3d:	25 80 00 00 00       	and    $0x80,%eax
81003c42:	85 c0                	test   %eax,%eax
81003c44:	74 11                	je     81003c57 <_printf_i+0xa3>
81003c46:	8b 45 18             	mov    0x18(%ebp),%eax
81003c49:	8b 00                	mov    (%eax),%eax
81003c4b:	8d 48 04             	lea    0x4(%eax),%ecx
81003c4e:	8b 55 18             	mov    0x18(%ebp),%edx
81003c51:	89 0a                	mov    %ecx,(%edx)
81003c53:	8b 00                	mov    (%eax),%eax
81003c55:	eb 2d                	jmp    81003c84 <_printf_i+0xd0>
81003c57:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c5a:	8b 00                	mov    (%eax),%eax
81003c5c:	83 e0 40             	and    $0x40,%eax
81003c5f:	85 c0                	test   %eax,%eax
81003c61:	74 12                	je     81003c75 <_printf_i+0xc1>
81003c63:	8b 45 18             	mov    0x18(%ebp),%eax
81003c66:	8b 00                	mov    (%eax),%eax
81003c68:	8d 48 04             	lea    0x4(%eax),%ecx
81003c6b:	8b 55 18             	mov    0x18(%ebp),%edx
81003c6e:	89 0a                	mov    %ecx,(%edx)
81003c70:	8b 00                	mov    (%eax),%eax
81003c72:	98                   	cwtl   
81003c73:	eb 0f                	jmp    81003c84 <_printf_i+0xd0>
81003c75:	8b 45 18             	mov    0x18(%ebp),%eax
81003c78:	8b 00                	mov    (%eax),%eax
81003c7a:	8d 48 04             	lea    0x4(%eax),%ecx
81003c7d:	8b 55 18             	mov    0x18(%ebp),%edx
81003c80:	89 0a                	mov    %ecx,(%edx)
81003c82:	8b 00                	mov    (%eax),%eax
81003c84:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c87:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c8a:	85 c0                	test   %eax,%eax
81003c8c:	79 0a                	jns    81003c98 <_printf_i+0xe4>
81003c8e:	f7 5d f4             	negl   -0xc(%ebp)
81003c91:	8b 45 0c             	mov    0xc(%ebp),%eax
81003c94:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81003c98:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
81003c9f:	e9 28 01 00 00       	jmp    81003dcc <_printf_i+0x218>
81003ca4:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ca7:	8b 00                	mov    (%eax),%eax
81003ca9:	25 80 00 00 00       	and    $0x80,%eax
81003cae:	85 c0                	test   %eax,%eax
81003cb0:	74 11                	je     81003cc3 <_printf_i+0x10f>
81003cb2:	8b 45 18             	mov    0x18(%ebp),%eax
81003cb5:	8b 00                	mov    (%eax),%eax
81003cb7:	8d 48 04             	lea    0x4(%eax),%ecx
81003cba:	8b 55 18             	mov    0x18(%ebp),%edx
81003cbd:	89 0a                	mov    %ecx,(%edx)
81003cbf:	8b 00                	mov    (%eax),%eax
81003cc1:	eb 2f                	jmp    81003cf2 <_printf_i+0x13e>
81003cc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cc6:	8b 00                	mov    (%eax),%eax
81003cc8:	83 e0 40             	and    $0x40,%eax
81003ccb:	85 c0                	test   %eax,%eax
81003ccd:	74 14                	je     81003ce3 <_printf_i+0x12f>
81003ccf:	8b 45 18             	mov    0x18(%ebp),%eax
81003cd2:	8b 00                	mov    (%eax),%eax
81003cd4:	8d 48 04             	lea    0x4(%eax),%ecx
81003cd7:	8b 55 18             	mov    0x18(%ebp),%edx
81003cda:	89 0a                	mov    %ecx,(%edx)
81003cdc:	8b 00                	mov    (%eax),%eax
81003cde:	0f b7 c0             	movzwl %ax,%eax
81003ce1:	eb 0f                	jmp    81003cf2 <_printf_i+0x13e>
81003ce3:	8b 45 18             	mov    0x18(%ebp),%eax
81003ce6:	8b 00                	mov    (%eax),%eax
81003ce8:	8d 48 04             	lea    0x4(%eax),%ecx
81003ceb:	8b 55 18             	mov    0x18(%ebp),%edx
81003cee:	89 0a                	mov    %ecx,(%edx)
81003cf0:	8b 00                	mov    (%eax),%eax
81003cf2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cf5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003cf8:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81003cfc:	3c 6f                	cmp    $0x6f,%al
81003cfe:	75 07                	jne    81003d07 <_printf_i+0x153>
81003d00:	b8 08 00 00 00       	mov    $0x8,%eax
81003d05:	eb 05                	jmp    81003d0c <_printf_i+0x158>
81003d07:	b8 0a 00 00 00       	mov    $0xa,%eax
81003d0c:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d0f:	e9 b1 00 00 00       	jmp    81003dc5 <_printf_i+0x211>
81003d14:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d17:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81003d1b:	eb 1d                	jmp    81003d3a <_printf_i+0x186>
81003d1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d20:	8b 00                	mov    (%eax),%eax
81003d22:	83 c8 20             	or     $0x20,%eax
81003d25:	89 c2                	mov    %eax,%edx
81003d27:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d2a:	89 10                	mov    %edx,(%eax)
81003d2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d2f:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81003d33:	c7 45 e8 15 6e 00 81 	movl   $0x81006e15,-0x18(%ebp)
81003d3a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d3d:	8b 00                	mov    (%eax),%eax
81003d3f:	25 80 00 00 00       	and    $0x80,%eax
81003d44:	85 c0                	test   %eax,%eax
81003d46:	74 11                	je     81003d59 <_printf_i+0x1a5>
81003d48:	8b 45 18             	mov    0x18(%ebp),%eax
81003d4b:	8b 00                	mov    (%eax),%eax
81003d4d:	8d 48 04             	lea    0x4(%eax),%ecx
81003d50:	8b 55 18             	mov    0x18(%ebp),%edx
81003d53:	89 0a                	mov    %ecx,(%edx)
81003d55:	8b 00                	mov    (%eax),%eax
81003d57:	eb 2f                	jmp    81003d88 <_printf_i+0x1d4>
81003d59:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d5c:	8b 00                	mov    (%eax),%eax
81003d5e:	83 e0 40             	and    $0x40,%eax
81003d61:	85 c0                	test   %eax,%eax
81003d63:	74 14                	je     81003d79 <_printf_i+0x1c5>
81003d65:	8b 45 18             	mov    0x18(%ebp),%eax
81003d68:	8b 00                	mov    (%eax),%eax
81003d6a:	8d 48 04             	lea    0x4(%eax),%ecx
81003d6d:	8b 55 18             	mov    0x18(%ebp),%edx
81003d70:	89 0a                	mov    %ecx,(%edx)
81003d72:	8b 00                	mov    (%eax),%eax
81003d74:	0f b7 c0             	movzwl %ax,%eax
81003d77:	eb 0f                	jmp    81003d88 <_printf_i+0x1d4>
81003d79:	8b 45 18             	mov    0x18(%ebp),%eax
81003d7c:	8b 00                	mov    (%eax),%eax
81003d7e:	8d 48 04             	lea    0x4(%eax),%ecx
81003d81:	8b 55 18             	mov    0x18(%ebp),%edx
81003d84:	89 0a                	mov    %ecx,(%edx)
81003d86:	8b 00                	mov    (%eax),%eax
81003d88:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d8b:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
81003d92:	8b 45 0c             	mov    0xc(%ebp),%eax
81003d95:	8b 00                	mov    (%eax),%eax
81003d97:	83 e0 01             	and    $0x1,%eax
81003d9a:	85 c0                	test   %eax,%eax
81003d9c:	74 0f                	je     81003dad <_printf_i+0x1f9>
81003d9e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003da1:	8b 00                	mov    (%eax),%eax
81003da3:	83 c8 20             	or     $0x20,%eax
81003da6:	89 c2                	mov    %eax,%edx
81003da8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dab:	89 10                	mov    %edx,(%eax)
81003dad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003db1:	75 11                	jne    81003dc4 <_printf_i+0x210>
81003db3:	8b 45 0c             	mov    0xc(%ebp),%eax
81003db6:	8b 00                	mov    (%eax),%eax
81003db8:	83 e0 df             	and    $0xffffffdf,%eax
81003dbb:	89 c2                	mov    %eax,%edx
81003dbd:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc0:	89 10                	mov    %edx,(%eax)
81003dc2:	eb 01                	jmp    81003dc5 <_printf_i+0x211>
81003dc4:	90                   	nop
81003dc5:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dc8:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003dcc:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dcf:	8b 50 04             	mov    0x4(%eax),%edx
81003dd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dd5:	89 50 08             	mov    %edx,0x8(%eax)
81003dd8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ddb:	8b 40 08             	mov    0x8(%eax),%eax
81003dde:	85 c0                	test   %eax,%eax
81003de0:	78 0f                	js     81003df1 <_printf_i+0x23d>
81003de2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003de5:	8b 00                	mov    (%eax),%eax
81003de7:	83 e0 fb             	and    $0xfffffffb,%eax
81003dea:	89 c2                	mov    %eax,%edx
81003dec:	8b 45 0c             	mov    0xc(%ebp),%eax
81003def:	89 10                	mov    %edx,(%eax)
81003df1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003df5:	75 0a                	jne    81003e01 <_printf_i+0x24d>
81003df7:	8b 45 0c             	mov    0xc(%ebp),%eax
81003dfa:	8b 40 04             	mov    0x4(%eax),%eax
81003dfd:	85 c0                	test   %eax,%eax
81003dff:	74 34                	je     81003e35 <_printf_i+0x281>
81003e01:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81003e04:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e07:	ba 00 00 00 00       	mov    $0x0,%edx
81003e0c:	f7 f1                	div    %ecx
81003e0e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003e11:	01 d0                	add    %edx,%eax
81003e13:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003e17:	0f b6 10             	movzbl (%eax),%edx
81003e1a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e1d:	88 10                	mov    %dl,(%eax)
81003e1f:	8b 5d f0             	mov    -0x10(%ebp),%ebx
81003e22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e25:	ba 00 00 00 00       	mov    $0x0,%edx
81003e2a:	f7 f3                	div    %ebx
81003e2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003e2f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003e33:	75 cc                	jne    81003e01 <_printf_i+0x24d>
81003e35:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81003e39:	75 26                	jne    81003e61 <_printf_i+0x2ad>
81003e3b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e3e:	8b 00                	mov    (%eax),%eax
81003e40:	83 e0 01             	and    $0x1,%eax
81003e43:	85 c0                	test   %eax,%eax
81003e45:	74 1a                	je     81003e61 <_printf_i+0x2ad>
81003e47:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e4a:	8b 50 04             	mov    0x4(%eax),%edx
81003e4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e50:	8b 40 10             	mov    0x10(%eax),%eax
81003e53:	39 c2                	cmp    %eax,%edx
81003e55:	7f 0a                	jg     81003e61 <_printf_i+0x2ad>
81003e57:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003e5b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e5e:	c6 00 30             	movb   $0x30,(%eax)
81003e61:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e64:	83 c0 1b             	add    $0x1b,%eax
81003e67:	83 c0 28             	add    $0x28,%eax
81003e6a:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e6d:	89 c2                	mov    %eax,%edx
81003e6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e72:	89 50 10             	mov    %edx,0x10(%eax)
81003e75:	e9 e2 00 00 00       	jmp    81003f5c <_printf_i+0x3a8>
81003e7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e7d:	8b 00                	mov    (%eax),%eax
81003e7f:	25 80 00 00 00       	and    $0x80,%eax
81003e84:	85 c0                	test   %eax,%eax
81003e86:	74 19                	je     81003ea1 <_printf_i+0x2ed>
81003e88:	8b 45 18             	mov    0x18(%ebp),%eax
81003e8b:	8b 00                	mov    (%eax),%eax
81003e8d:	8d 48 04             	lea    0x4(%eax),%ecx
81003e90:	8b 55 18             	mov    0x18(%ebp),%edx
81003e93:	89 0a                	mov    %ecx,(%edx)
81003e95:	8b 00                	mov    (%eax),%eax
81003e97:	8b 55 0c             	mov    0xc(%ebp),%edx
81003e9a:	8b 52 14             	mov    0x14(%edx),%edx
81003e9d:	89 10                	mov    %edx,(%eax)
81003e9f:	eb 3f                	jmp    81003ee0 <_printf_i+0x32c>
81003ea1:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ea4:	8b 00                	mov    (%eax),%eax
81003ea6:	83 e0 40             	and    $0x40,%eax
81003ea9:	85 c0                	test   %eax,%eax
81003eab:	74 1c                	je     81003ec9 <_printf_i+0x315>
81003ead:	8b 45 0c             	mov    0xc(%ebp),%eax
81003eb0:	8b 58 14             	mov    0x14(%eax),%ebx
81003eb3:	8b 45 18             	mov    0x18(%ebp),%eax
81003eb6:	8b 00                	mov    (%eax),%eax
81003eb8:	8d 48 04             	lea    0x4(%eax),%ecx
81003ebb:	8b 55 18             	mov    0x18(%ebp),%edx
81003ebe:	89 0a                	mov    %ecx,(%edx)
81003ec0:	8b 00                	mov    (%eax),%eax
81003ec2:	89 da                	mov    %ebx,%edx
81003ec4:	66 89 10             	mov    %dx,(%eax)
81003ec7:	eb 17                	jmp    81003ee0 <_printf_i+0x32c>
81003ec9:	8b 45 18             	mov    0x18(%ebp),%eax
81003ecc:	8b 00                	mov    (%eax),%eax
81003ece:	8d 48 04             	lea    0x4(%eax),%ecx
81003ed1:	8b 55 18             	mov    0x18(%ebp),%edx
81003ed4:	89 0a                	mov    %ecx,(%edx)
81003ed6:	8b 00                	mov    (%eax),%eax
81003ed8:	8b 55 0c             	mov    0xc(%ebp),%edx
81003edb:	8b 52 14             	mov    0x14(%edx),%edx
81003ede:	89 10                	mov    %edx,(%eax)
81003ee0:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ee3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81003eea:	eb 70                	jmp    81003f5c <_printf_i+0x3a8>
81003eec:	8b 45 18             	mov    0x18(%ebp),%eax
81003eef:	8b 00                	mov    (%eax),%eax
81003ef1:	8d 48 04             	lea    0x4(%eax),%ecx
81003ef4:	8b 55 18             	mov    0x18(%ebp),%edx
81003ef7:	89 0a                	mov    %ecx,(%edx)
81003ef9:	8b 00                	mov    (%eax),%eax
81003efb:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003efe:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f01:	8b 40 04             	mov    0x4(%eax),%eax
81003f04:	83 ec 04             	sub    $0x4,%esp
81003f07:	50                   	push   %eax
81003f08:	6a 00                	push   $0x0
81003f0a:	ff 75 ec             	push   -0x14(%ebp)
81003f0d:	e8 de f3 ff ff       	call   810032f0 <memchr>
81003f12:	83 c4 10             	add    $0x10,%esp
81003f15:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f18:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81003f1c:	74 0e                	je     81003f2c <_printf_i+0x378>
81003f1e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f21:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003f24:	89 c2                	mov    %eax,%edx
81003f26:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f29:	89 50 04             	mov    %edx,0x4(%eax)
81003f2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f2f:	8b 50 04             	mov    0x4(%eax),%edx
81003f32:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f35:	89 50 10             	mov    %edx,0x10(%eax)
81003f38:	eb 1a                	jmp    81003f54 <_printf_i+0x3a0>
81003f3a:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81003f3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f41:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81003f45:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003f48:	88 10                	mov    %dl,(%eax)
81003f4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f4d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003f54:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f57:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81003f5b:	90                   	nop
81003f5c:	83 ec 0c             	sub    $0xc,%esp
81003f5f:	ff 75 14             	push   0x14(%ebp)
81003f62:	ff 75 10             	push   0x10(%ebp)
81003f65:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003f68:	50                   	push   %eax
81003f69:	ff 75 0c             	push   0xc(%ebp)
81003f6c:	ff 75 08             	push   0x8(%ebp)
81003f6f:	e8 a5 fa ff ff       	call   81003a19 <_printf_common>
81003f74:	83 c4 20             	add    $0x20,%esp
81003f77:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f7a:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
81003f7e:	74 72                	je     81003ff2 <_printf_i+0x43e>
81003f80:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f83:	8b 40 10             	mov    0x10(%eax),%eax
81003f86:	50                   	push   %eax
81003f87:	ff 75 ec             	push   -0x14(%ebp)
81003f8a:	ff 75 10             	push   0x10(%ebp)
81003f8d:	ff 75 08             	push   0x8(%ebp)
81003f90:	8b 45 14             	mov    0x14(%ebp),%eax
81003f93:	ff d0                	call   *%eax
81003f95:	83 c4 10             	add    $0x10,%esp
81003f98:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f9b:	74 58                	je     81003ff5 <_printf_i+0x441>
81003f9d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fa0:	8b 00                	mov    (%eax),%eax
81003fa2:	83 e0 02             	and    $0x2,%eax
81003fa5:	85 c0                	test   %eax,%eax
81003fa7:	74 39                	je     81003fe2 <_printf_i+0x42e>
81003fa9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003fb0:	eb 20                	jmp    81003fd2 <_printf_i+0x41e>
81003fb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fb5:	83 c0 19             	add    $0x19,%eax
81003fb8:	6a 01                	push   $0x1
81003fba:	50                   	push   %eax
81003fbb:	ff 75 10             	push   0x10(%ebp)
81003fbe:	ff 75 08             	push   0x8(%ebp)
81003fc1:	8b 45 14             	mov    0x14(%ebp),%eax
81003fc4:	ff d0                	call   *%eax
81003fc6:	83 c4 10             	add    $0x10,%esp
81003fc9:	83 f8 ff             	cmp    $0xffffffff,%eax
81003fcc:	74 2a                	je     81003ff8 <_printf_i+0x444>
81003fce:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81003fd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fd5:	8b 40 0c             	mov    0xc(%eax),%eax
81003fd8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003fdb:	29 d0                	sub    %edx,%eax
81003fdd:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81003fe0:	7c d0                	jl     81003fb2 <_printf_i+0x3fe>
81003fe2:	8b 45 0c             	mov    0xc(%ebp),%eax
81003fe5:	8b 50 0c             	mov    0xc(%eax),%edx
81003fe8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003feb:	39 c2                	cmp    %eax,%edx
81003fed:	0f 4d c2             	cmovge %edx,%eax
81003ff0:	eb 0c                	jmp    81003ffe <_printf_i+0x44a>
81003ff2:	90                   	nop
81003ff3:	eb 04                	jmp    81003ff9 <_printf_i+0x445>
81003ff5:	90                   	nop
81003ff6:	eb 01                	jmp    81003ff9 <_printf_i+0x445>
81003ff8:	90                   	nop
81003ff9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003ffe:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004001:	c9                   	leave  
81004002:	c3                   	ret    

81004003 <_iprintf_r>:
81004003:	55                   	push   %ebp
81004004:	89 e5                	mov    %esp,%ebp
81004006:	83 ec 18             	sub    $0x18,%esp
81004009:	8d 45 10             	lea    0x10(%ebp),%eax
8100400c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100400f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81004012:	8b 45 08             	mov    0x8(%ebp),%eax
81004015:	8b 40 08             	mov    0x8(%eax),%eax
81004018:	52                   	push   %edx
81004019:	ff 75 0c             	push   0xc(%ebp)
8100401c:	50                   	push   %eax
8100401d:	ff 75 08             	push   0x8(%ebp)
81004020:	e8 9e f6 ff ff       	call   810036c3 <_vfiprintf_r>
81004025:	83 c4 10             	add    $0x10,%esp
81004028:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100402b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100402e:	c9                   	leave  
8100402f:	c3                   	ret    

81004030 <iprintf>:
81004030:	55                   	push   %ebp
81004031:	89 e5                	mov    %esp,%ebp
81004033:	83 ec 18             	sub    $0x18,%esp
81004036:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100403b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100403e:	8d 45 0c             	lea    0xc(%ebp),%eax
81004041:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004044:	8b 55 ec             	mov    -0x14(%ebp),%edx
81004047:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100404a:	8b 40 08             	mov    0x8(%eax),%eax
8100404d:	52                   	push   %edx
8100404e:	ff 75 08             	push   0x8(%ebp)
81004051:	50                   	push   %eax
81004052:	ff 75 f4             	push   -0xc(%ebp)
81004055:	e8 69 f6 ff ff       	call   810036c3 <_vfiprintf_r>
8100405a:	83 c4 10             	add    $0x10,%esp
8100405d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004060:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004063:	c9                   	leave  
81004064:	c3                   	ret    

81004065 <_puts_r>:
81004065:	55                   	push   %ebp
81004066:	89 e5                	mov    %esp,%ebp
81004068:	83 ec 38             	sub    $0x38,%esp
8100406b:	83 ec 0c             	sub    $0xc,%esp
8100406e:	ff 75 0c             	push   0xc(%ebp)
81004071:	e8 1a 06 00 00       	call   81004690 <strlen>
81004076:	83 c4 10             	add    $0x10,%esp
81004079:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100407c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100407f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004082:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004085:	89 45 d0             	mov    %eax,-0x30(%ebp)
81004088:	c7 45 d4 ac 6e 00 81 	movl   $0x81006eac,-0x2c(%ebp)
8100408f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81004096:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004099:	83 c0 01             	add    $0x1,%eax
8100409c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100409f:	8d 45 cc             	lea    -0x34(%ebp),%eax
810040a2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810040a5:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810040ac:	8b 45 08             	mov    0x8(%ebp),%eax
810040af:	8b 40 08             	mov    0x8(%eax),%eax
810040b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
810040b5:	8b 45 08             	mov    0x8(%ebp),%eax
810040b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810040bb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810040bf:	74 18                	je     810040d9 <_puts_r+0x74>
810040c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040c4:	8b 40 38             	mov    0x38(%eax),%eax
810040c7:	85 c0                	test   %eax,%eax
810040c9:	75 0e                	jne    810040d9 <_puts_r+0x74>
810040cb:	83 ec 0c             	sub    $0xc,%esp
810040ce:	ff 75 ec             	push   -0x14(%ebp)
810040d1:	e8 dd d0 ff ff       	call   810011b3 <__sinit>
810040d6:	83 c4 10             	add    $0x10,%esp
810040d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040dc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810040e0:	98                   	cwtl   
810040e1:	25 00 20 00 00       	and    $0x2000,%eax
810040e6:	85 c0                	test   %eax,%eax
810040e8:	75 24                	jne    8100410e <_puts_r+0xa9>
810040ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040ed:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810040f1:	80 cc 20             	or     $0x20,%ah
810040f4:	89 c2                	mov    %eax,%edx
810040f6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040f9:	66 89 50 0c          	mov    %dx,0xc(%eax)
810040fd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004100:	8b 40 64             	mov    0x64(%eax),%eax
81004103:	80 e4 df             	and    $0xdf,%ah
81004106:	89 c2                	mov    %eax,%edx
81004108:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100410b:	89 50 64             	mov    %edx,0x64(%eax)
8100410e:	83 ec 04             	sub    $0x4,%esp
81004111:	8d 45 dc             	lea    -0x24(%ebp),%eax
81004114:	50                   	push   %eax
81004115:	ff 75 f0             	push   -0x10(%ebp)
81004118:	ff 75 08             	push   0x8(%ebp)
8100411b:	e8 b4 11 00 00       	call   810052d4 <__sfvwrite_r>
81004120:	83 c4 10             	add    $0x10,%esp
81004123:	85 c0                	test   %eax,%eax
81004125:	74 07                	je     8100412e <_puts_r+0xc9>
81004127:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100412c:	eb 05                	jmp    81004133 <_puts_r+0xce>
8100412e:	b8 0a 00 00 00       	mov    $0xa,%eax
81004133:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004136:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004139:	c9                   	leave  
8100413a:	c3                   	ret    

8100413b <puts>:
8100413b:	55                   	push   %ebp
8100413c:	89 e5                	mov    %esp,%ebp
8100413e:	83 ec 08             	sub    $0x8,%esp
81004141:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004146:	83 ec 08             	sub    $0x8,%esp
81004149:	ff 75 08             	push   0x8(%ebp)
8100414c:	50                   	push   %eax
8100414d:	e8 13 ff ff ff       	call   81004065 <_puts_r>
81004152:	83 c4 10             	add    $0x10,%esp
81004155:	c9                   	leave  
81004156:	c3                   	ret    

81004157 <lflush>:
81004157:	55                   	push   %ebp
81004158:	89 e5                	mov    %esp,%ebp
8100415a:	83 ec 08             	sub    $0x8,%esp
8100415d:	8b 45 08             	mov    0x8(%ebp),%eax
81004160:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004164:	98                   	cwtl   
81004165:	83 e0 09             	and    $0x9,%eax
81004168:	83 f8 09             	cmp    $0x9,%eax
8100416b:	75 10                	jne    8100417d <lflush+0x26>
8100416d:	83 ec 0c             	sub    $0xc,%esp
81004170:	ff 75 08             	push   0x8(%ebp)
81004173:	e8 90 cb ff ff       	call   81000d08 <fflush>
81004178:	83 c4 10             	add    $0x10,%esp
8100417b:	eb 05                	jmp    81004182 <lflush+0x2b>
8100417d:	b8 00 00 00 00       	mov    $0x0,%eax
81004182:	c9                   	leave  
81004183:	c3                   	ret    

81004184 <__srefill_r>:
81004184:	55                   	push   %ebp
81004185:	89 e5                	mov    %esp,%ebp
81004187:	56                   	push   %esi
81004188:	53                   	push   %ebx
81004189:	83 ec 10             	sub    $0x10,%esp
8100418c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100418f:	8b 45 08             	mov    0x8(%ebp),%eax
81004192:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004195:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004199:	74 18                	je     810041b3 <__srefill_r+0x2f>
8100419b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100419e:	8b 40 38             	mov    0x38(%eax),%eax
810041a1:	85 c0                	test   %eax,%eax
810041a3:	75 0e                	jne    810041b3 <__srefill_r+0x2f>
810041a5:	83 ec 0c             	sub    $0xc,%esp
810041a8:	ff 75 f4             	push   -0xc(%ebp)
810041ab:	e8 03 d0 ff ff       	call   810011b3 <__sinit>
810041b0:	83 c4 10             	add    $0x10,%esp
810041b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041b7:	98                   	cwtl   
810041b8:	25 00 20 00 00       	and    $0x2000,%eax
810041bd:	85 c0                	test   %eax,%eax
810041bf:	75 14                	jne    810041d5 <__srefill_r+0x51>
810041c1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041c5:	80 cc 20             	or     $0x20,%ah
810041c8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810041cc:	8b 43 64             	mov    0x64(%ebx),%eax
810041cf:	80 e4 df             	and    $0xdf,%ah
810041d2:	89 43 64             	mov    %eax,0x64(%ebx)
810041d5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810041dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041e0:	98                   	cwtl   
810041e1:	83 e0 20             	and    $0x20,%eax
810041e4:	85 c0                	test   %eax,%eax
810041e6:	74 0a                	je     810041f2 <__srefill_r+0x6e>
810041e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810041ed:	e9 8c 01 00 00       	jmp    8100437e <__srefill_r+0x1fa>
810041f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810041f6:	98                   	cwtl   
810041f7:	83 e0 04             	and    $0x4,%eax
810041fa:	85 c0                	test   %eax,%eax
810041fc:	75 79                	jne    81004277 <__srefill_r+0xf3>
810041fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004202:	98                   	cwtl   
81004203:	83 e0 10             	and    $0x10,%eax
81004206:	85 c0                	test   %eax,%eax
81004208:	75 1e                	jne    81004228 <__srefill_r+0xa4>
8100420a:	8b 45 08             	mov    0x8(%ebp),%eax
8100420d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004213:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004217:	83 c8 40             	or     $0x40,%eax
8100421a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100421e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004223:	e9 56 01 00 00       	jmp    8100437e <__srefill_r+0x1fa>
81004228:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100422c:	98                   	cwtl   
8100422d:	83 e0 08             	and    $0x8,%eax
81004230:	85 c0                	test   %eax,%eax
81004232:	74 36                	je     8100426a <__srefill_r+0xe6>
81004234:	83 ec 08             	sub    $0x8,%esp
81004237:	53                   	push   %ebx
81004238:	ff 75 08             	push   0x8(%ebp)
8100423b:	e8 70 ca ff ff       	call   81000cb0 <_fflush_r>
81004240:	83 c4 10             	add    $0x10,%esp
81004243:	85 c0                	test   %eax,%eax
81004245:	74 0a                	je     81004251 <__srefill_r+0xcd>
81004247:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100424c:	e9 2d 01 00 00       	jmp    8100437e <__srefill_r+0x1fa>
81004251:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004255:	83 e0 f7             	and    $0xfffffff7,%eax
81004258:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100425c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004263:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100426a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100426e:	83 c8 04             	or     $0x4,%eax
81004271:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004275:	eb 46                	jmp    810042bd <__srefill_r+0x139>
81004277:	8b 43 30             	mov    0x30(%ebx),%eax
8100427a:	85 c0                	test   %eax,%eax
8100427c:	74 3f                	je     810042bd <__srefill_r+0x139>
8100427e:	8b 53 30             	mov    0x30(%ebx),%edx
81004281:	8d 43 40             	lea    0x40(%ebx),%eax
81004284:	39 c2                	cmp    %eax,%edx
81004286:	74 12                	je     8100429a <__srefill_r+0x116>
81004288:	8b 43 30             	mov    0x30(%ebx),%eax
8100428b:	83 ec 08             	sub    $0x8,%esp
8100428e:	50                   	push   %eax
8100428f:	ff 75 08             	push   0x8(%ebp)
81004292:	e8 7e d0 ff ff       	call   81001315 <_free_r>
81004297:	83 c4 10             	add    $0x10,%esp
8100429a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810042a1:	8b 43 3c             	mov    0x3c(%ebx),%eax
810042a4:	89 43 04             	mov    %eax,0x4(%ebx)
810042a7:	8b 43 04             	mov    0x4(%ebx),%eax
810042aa:	85 c0                	test   %eax,%eax
810042ac:	74 0f                	je     810042bd <__srefill_r+0x139>
810042ae:	8b 43 38             	mov    0x38(%ebx),%eax
810042b1:	89 03                	mov    %eax,(%ebx)
810042b3:	b8 00 00 00 00       	mov    $0x0,%eax
810042b8:	e9 c1 00 00 00       	jmp    8100437e <__srefill_r+0x1fa>
810042bd:	8b 43 10             	mov    0x10(%ebx),%eax
810042c0:	85 c0                	test   %eax,%eax
810042c2:	75 0f                	jne    810042d3 <__srefill_r+0x14f>
810042c4:	83 ec 08             	sub    $0x8,%esp
810042c7:	53                   	push   %ebx
810042c8:	ff 75 08             	push   0x8(%ebp)
810042cb:	e8 d8 16 00 00       	call   810059a8 <__smakebuf_r>
810042d0:	83 c4 10             	add    $0x10,%esp
810042d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042d7:	98                   	cwtl   
810042d8:	83 e0 03             	and    $0x3,%eax
810042db:	85 c0                	test   %eax,%eax
810042dd:	74 48                	je     81004327 <__srefill_r+0x1a3>
810042df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810042e3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810042e7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810042ed:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
810042f2:	83 ec 08             	sub    $0x8,%esp
810042f5:	68 57 41 00 81       	push   $0x81004157
810042fa:	50                   	push   %eax
810042fb:	e8 51 d5 ff ff       	call   81001851 <_fwalk>
81004300:	83 c4 10             	add    $0x10,%esp
81004303:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
81004307:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100430b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100430f:	98                   	cwtl   
81004310:	83 e0 09             	and    $0x9,%eax
81004313:	83 f8 09             	cmp    $0x9,%eax
81004316:	75 0f                	jne    81004327 <__srefill_r+0x1a3>
81004318:	83 ec 08             	sub    $0x8,%esp
8100431b:	53                   	push   %ebx
8100431c:	ff 75 08             	push   0x8(%ebp)
8100431f:	e8 66 c7 ff ff       	call   81000a8a <__sflush_r>
81004324:	83 c4 10             	add    $0x10,%esp
81004327:	8b 43 10             	mov    0x10(%ebx),%eax
8100432a:	89 03                	mov    %eax,(%ebx)
8100432c:	8b 43 20             	mov    0x20(%ebx),%eax
8100432f:	8b 73 14             	mov    0x14(%ebx),%esi
81004332:	8b 0b                	mov    (%ebx),%ecx
81004334:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004337:	56                   	push   %esi
81004338:	51                   	push   %ecx
81004339:	52                   	push   %edx
8100433a:	ff 75 08             	push   0x8(%ebp)
8100433d:	ff d0                	call   *%eax
8100433f:	83 c4 10             	add    $0x10,%esp
81004342:	89 43 04             	mov    %eax,0x4(%ebx)
81004345:	8b 43 04             	mov    0x4(%ebx),%eax
81004348:	85 c0                	test   %eax,%eax
8100434a:	7f 2d                	jg     81004379 <__srefill_r+0x1f5>
8100434c:	8b 43 04             	mov    0x4(%ebx),%eax
8100434f:	85 c0                	test   %eax,%eax
81004351:	75 0d                	jne    81004360 <__srefill_r+0x1dc>
81004353:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004357:	83 c8 20             	or     $0x20,%eax
8100435a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100435e:	eb 12                	jmp    81004372 <__srefill_r+0x1ee>
81004360:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004367:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100436b:	83 c8 40             	or     $0x40,%eax
8100436e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004372:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004377:	eb 05                	jmp    8100437e <__srefill_r+0x1fa>
81004379:	b8 00 00 00 00       	mov    $0x0,%eax
8100437e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004381:	5b                   	pop    %ebx
81004382:	5e                   	pop    %esi
81004383:	5d                   	pop    %ebp
81004384:	c3                   	ret    

81004385 <_sbrk_r>:
81004385:	55                   	push   %ebp
81004386:	89 e5                	mov    %esp,%ebp
81004388:	83 ec 18             	sub    $0x18,%esp
8100438b:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004392:	00 00 00 
81004395:	83 ec 0c             	sub    $0xc,%esp
81004398:	ff 75 0c             	push   0xc(%ebp)
8100439b:	e8 10 c5 ff ff       	call   810008b0 <sbrk>
810043a0:	83 c4 10             	add    $0x10,%esp
810043a3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043a6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810043aa:	75 14                	jne    810043c0 <_sbrk_r+0x3b>
810043ac:	a1 f4 81 00 81       	mov    0x810081f4,%eax
810043b1:	85 c0                	test   %eax,%eax
810043b3:	74 0b                	je     810043c0 <_sbrk_r+0x3b>
810043b5:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
810043bb:	8b 45 08             	mov    0x8(%ebp),%eax
810043be:	89 10                	mov    %edx,(%eax)
810043c0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043c3:	c9                   	leave  
810043c4:	c3                   	ret    

810043c5 <__sread>:
810043c5:	55                   	push   %ebp
810043c6:	89 e5                	mov    %esp,%ebp
810043c8:	56                   	push   %esi
810043c9:	53                   	push   %ebx
810043ca:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810043cd:	8b 55 14             	mov    0x14(%ebp),%edx
810043d0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810043d4:	98                   	cwtl   
810043d5:	52                   	push   %edx
810043d6:	ff 75 10             	push   0x10(%ebp)
810043d9:	50                   	push   %eax
810043da:	ff 75 08             	push   0x8(%ebp)
810043dd:	e8 6f 19 00 00       	call   81005d51 <_read_r>
810043e2:	83 c4 10             	add    $0x10,%esp
810043e5:	89 c6                	mov    %eax,%esi
810043e7:	85 f6                	test   %esi,%esi
810043e9:	78 0a                	js     810043f5 <__sread+0x30>
810043eb:	8b 43 50             	mov    0x50(%ebx),%eax
810043ee:	01 f0                	add    %esi,%eax
810043f0:	89 43 50             	mov    %eax,0x50(%ebx)
810043f3:	eb 0b                	jmp    81004400 <__sread+0x3b>
810043f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810043f9:	80 e4 ef             	and    $0xef,%ah
810043fc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004400:	89 f0                	mov    %esi,%eax
81004402:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004405:	5b                   	pop    %ebx
81004406:	5e                   	pop    %esi
81004407:	5d                   	pop    %ebp
81004408:	c3                   	ret    

81004409 <__seofread>:
81004409:	55                   	push   %ebp
8100440a:	89 e5                	mov    %esp,%ebp
8100440c:	b8 00 00 00 00       	mov    $0x0,%eax
81004411:	5d                   	pop    %ebp
81004412:	c3                   	ret    

81004413 <__swrite>:
81004413:	55                   	push   %ebp
81004414:	89 e5                	mov    %esp,%ebp
81004416:	53                   	push   %ebx
81004417:	83 ec 14             	sub    $0x14,%esp
8100441a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100441d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004421:	98                   	cwtl   
81004422:	25 00 01 00 00       	and    $0x100,%eax
81004427:	85 c0                	test   %eax,%eax
81004429:	74 15                	je     81004440 <__swrite+0x2d>
8100442b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100442f:	98                   	cwtl   
81004430:	6a 02                	push   $0x2
81004432:	6a 00                	push   $0x0
81004434:	50                   	push   %eax
81004435:	ff 75 08             	push   0x8(%ebp)
81004438:	e8 25 15 00 00       	call   81005962 <_lseek_r>
8100443d:	83 c4 10             	add    $0x10,%esp
81004440:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004444:	80 e4 ef             	and    $0xef,%ah
81004447:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100444b:	8b 55 14             	mov    0x14(%ebp),%edx
8100444e:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004452:	98                   	cwtl   
81004453:	52                   	push   %edx
81004454:	ff 75 10             	push   0x10(%ebp)
81004457:	50                   	push   %eax
81004458:	ff 75 08             	push   0x8(%ebp)
8100445b:	e8 42 07 00 00       	call   81004ba2 <_write_r>
81004460:	83 c4 10             	add    $0x10,%esp
81004463:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004466:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004469:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100446c:	c9                   	leave  
8100446d:	c3                   	ret    

8100446e <__sseek>:
8100446e:	55                   	push   %ebp
8100446f:	89 e5                	mov    %esp,%ebp
81004471:	56                   	push   %esi
81004472:	53                   	push   %ebx
81004473:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004476:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100447a:	98                   	cwtl   
8100447b:	ff 75 14             	push   0x14(%ebp)
8100447e:	ff 75 10             	push   0x10(%ebp)
81004481:	50                   	push   %eax
81004482:	ff 75 08             	push   0x8(%ebp)
81004485:	e8 d8 14 00 00       	call   81005962 <_lseek_r>
8100448a:	83 c4 10             	add    $0x10,%esp
8100448d:	89 c6                	mov    %eax,%esi
8100448f:	83 fe ff             	cmp    $0xffffffff,%esi
81004492:	75 0d                	jne    810044a1 <__sseek+0x33>
81004494:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004498:	80 e4 ef             	and    $0xef,%ah
8100449b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100449f:	eb 0e                	jmp    810044af <__sseek+0x41>
810044a1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810044a5:	80 cc 10             	or     $0x10,%ah
810044a8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810044ac:	89 73 50             	mov    %esi,0x50(%ebx)
810044af:	89 f0                	mov    %esi,%eax
810044b1:	8d 65 f8             	lea    -0x8(%ebp),%esp
810044b4:	5b                   	pop    %ebx
810044b5:	5e                   	pop    %esi
810044b6:	5d                   	pop    %ebp
810044b7:	c3                   	ret    

810044b8 <__sclose>:
810044b8:	55                   	push   %ebp
810044b9:	89 e5                	mov    %esp,%ebp
810044bb:	83 ec 18             	sub    $0x18,%esp
810044be:	8b 45 0c             	mov    0xc(%ebp),%eax
810044c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810044c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044c7:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
810044cb:	98                   	cwtl   
810044cc:	83 ec 08             	sub    $0x8,%esp
810044cf:	50                   	push   %eax
810044d0:	ff 75 08             	push   0x8(%ebp)
810044d3:	e8 80 09 00 00       	call   81004e58 <_close_r>
810044d8:	83 c4 10             	add    $0x10,%esp
810044db:	c9                   	leave  
810044dc:	c3                   	ret    
810044dd:	66 90                	xchg   %ax,%ax
810044df:	90                   	nop

810044e0 <strchr>:
810044e0:	55                   	push   %ebp
810044e1:	89 e5                	mov    %esp,%ebp
810044e3:	57                   	push   %edi
810044e4:	53                   	push   %ebx
810044e5:	31 db                	xor    %ebx,%ebx
810044e7:	8b 7d 08             	mov    0x8(%ebp),%edi
810044ea:	02 5d 0c             	add    0xc(%ebp),%bl
810044ed:	0f 84 98 00 00 00    	je     8100458b <L25>
810044f3:	f7 c7 03 00 00 00    	test   $0x3,%edi
810044f9:	74 37                	je     81004532 <L5>
810044fb:	89 f8                	mov    %edi,%eax
810044fd:	8a 08                	mov    (%eax),%cl
810044ff:	84 c9                	test   %cl,%cl
81004501:	74 7b                	je     8100457e <L14>
81004503:	38 d9                	cmp    %bl,%cl
81004505:	74 7d                	je     81004584 <L19>
81004507:	47                   	inc    %edi
81004508:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100450e:	74 22                	je     81004532 <L5>
81004510:	89 f8                	mov    %edi,%eax
81004512:	8a 08                	mov    (%eax),%cl
81004514:	84 c9                	test   %cl,%cl
81004516:	74 66                	je     8100457e <L14>
81004518:	38 d9                	cmp    %bl,%cl
8100451a:	74 68                	je     81004584 <L19>
8100451c:	47                   	inc    %edi
8100451d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004523:	74 0d                	je     81004532 <L5>
81004525:	89 f8                	mov    %edi,%eax
81004527:	8a 08                	mov    (%eax),%cl
81004529:	84 c9                	test   %cl,%cl
8100452b:	74 51                	je     8100457e <L14>
8100452d:	38 d9                	cmp    %bl,%cl
8100452f:	74 53                	je     81004584 <L19>
81004531:	47                   	inc    %edi

81004532 <L5>:
81004532:	89 d9                	mov    %ebx,%ecx
81004534:	c1 e3 08             	shl    $0x8,%ebx
81004537:	83 ef 04             	sub    $0x4,%edi
8100453a:	09 cb                	or     %ecx,%ebx
8100453c:	89 da                	mov    %ebx,%edx
8100453e:	c1 e3 10             	shl    $0x10,%ebx
81004541:	09 d3                	or     %edx,%ebx

81004543 <L10>:
81004543:	83 c7 04             	add    $0x4,%edi
81004546:	8b 0f                	mov    (%edi),%ecx
81004548:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
8100454e:	89 c8                	mov    %ecx,%eax
81004550:	f7 d0                	not    %eax
81004552:	21 c2                	and    %eax,%edx
81004554:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100455a:	75 14                	jne    81004570 <L9>
8100455c:	31 d9                	xor    %ebx,%ecx
8100455e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81004564:	f7 d1                	not    %ecx
81004566:	21 ca                	and    %ecx,%edx
81004568:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
8100456e:	74 d3                	je     81004543 <L10>

81004570 <L9>:
81004570:	8d 47 ff             	lea    -0x1(%edi),%eax

81004573 <L15>:
81004573:	40                   	inc    %eax
81004574:	8a 10                	mov    (%eax),%dl
81004576:	84 d2                	test   %dl,%dl
81004578:	74 04                	je     8100457e <L14>
8100457a:	38 da                	cmp    %bl,%dl
8100457c:	75 f5                	jne    81004573 <L15>

8100457e <L14>:
8100457e:	38 18                	cmp    %bl,(%eax)
81004580:	74 02                	je     81004584 <L19>
81004582:	31 c0                	xor    %eax,%eax

81004584 <L19>:
81004584:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004587:	5b                   	pop    %ebx
81004588:	5f                   	pop    %edi
81004589:	c9                   	leave  
8100458a:	c3                   	ret    

8100458b <L25>:
8100458b:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004591:	74 2b                	je     810045be <L26>
81004593:	89 f8                	mov    %edi,%eax
81004595:	8a 08                	mov    (%eax),%cl
81004597:	84 c9                	test   %cl,%cl
81004599:	74 e9                	je     81004584 <L19>
8100459b:	47                   	inc    %edi
8100459c:	f7 c7 03 00 00 00    	test   $0x3,%edi
810045a2:	74 1a                	je     810045be <L26>
810045a4:	89 f8                	mov    %edi,%eax
810045a6:	8a 08                	mov    (%eax),%cl
810045a8:	84 c9                	test   %cl,%cl
810045aa:	74 d8                	je     81004584 <L19>
810045ac:	47                   	inc    %edi
810045ad:	f7 c7 03 00 00 00    	test   $0x3,%edi
810045b3:	74 09                	je     810045be <L26>
810045b5:	89 f8                	mov    %edi,%eax
810045b7:	8a 08                	mov    (%eax),%cl
810045b9:	84 c9                	test   %cl,%cl
810045bb:	74 c7                	je     81004584 <L19>
810045bd:	47                   	inc    %edi

810045be <L26>:
810045be:	83 ef 04             	sub    $0x4,%edi

810045c1 <L27>:
810045c1:	83 c7 04             	add    $0x4,%edi
810045c4:	8b 0f                	mov    (%edi),%ecx
810045c6:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
810045cc:	89 c8                	mov    %ecx,%eax
810045ce:	f7 d0                	not    %eax
810045d0:	21 c2                	and    %eax,%edx
810045d2:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
810045d8:	74 e7                	je     810045c1 <L27>
810045da:	eb 94                	jmp    81004570 <L9>

810045dc <strcmp>:
810045dc:	55                   	push   %ebp
810045dd:	89 e5                	mov    %esp,%ebp
810045df:	83 ec 10             	sub    $0x10,%esp
810045e2:	8b 55 08             	mov    0x8(%ebp),%edx
810045e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810045e8:	09 d0                	or     %edx,%eax
810045ea:	83 e0 03             	and    $0x3,%eax
810045ed:	85 c0                	test   %eax,%eax
810045ef:	75 5e                	jne    8100464f <strcmp+0x73>
810045f1:	8b 45 08             	mov    0x8(%ebp),%eax
810045f4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810045f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810045fa:	89 45 f8             	mov    %eax,-0x8(%ebp)
810045fd:	eb 2c                	jmp    8100462b <strcmp+0x4f>
810045ff:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004602:	8b 00                	mov    (%eax),%eax
81004604:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100460a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100460d:	8b 00                	mov    (%eax),%eax
8100460f:	f7 d0                	not    %eax
81004611:	21 d0                	and    %edx,%eax
81004613:	25 80 80 80 80       	and    $0x80808080,%eax
81004618:	85 c0                	test   %eax,%eax
8100461a:	74 07                	je     81004623 <strcmp+0x47>
8100461c:	b8 00 00 00 00       	mov    $0x0,%eax
81004621:	eb 5c                	jmp    8100467f <strcmp+0xa3>
81004623:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81004627:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
8100462b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100462e:	8b 10                	mov    (%eax),%edx
81004630:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004633:	8b 00                	mov    (%eax),%eax
81004635:	39 c2                	cmp    %eax,%edx
81004637:	74 c6                	je     810045ff <strcmp+0x23>
81004639:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100463c:	89 45 08             	mov    %eax,0x8(%ebp)
8100463f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004642:	89 45 0c             	mov    %eax,0xc(%ebp)
81004645:	eb 08                	jmp    8100464f <strcmp+0x73>
81004647:	83 45 08 01          	addl   $0x1,0x8(%ebp)
8100464b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
8100464f:	8b 45 08             	mov    0x8(%ebp),%eax
81004652:	0f b6 00             	movzbl (%eax),%eax
81004655:	84 c0                	test   %al,%al
81004657:	74 10                	je     81004669 <strcmp+0x8d>
81004659:	8b 45 08             	mov    0x8(%ebp),%eax
8100465c:	0f b6 10             	movzbl (%eax),%edx
8100465f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004662:	0f b6 00             	movzbl (%eax),%eax
81004665:	38 c2                	cmp    %al,%dl
81004667:	74 de                	je     81004647 <strcmp+0x6b>
81004669:	8b 45 08             	mov    0x8(%ebp),%eax
8100466c:	0f b6 00             	movzbl (%eax),%eax
8100466f:	0f b6 d0             	movzbl %al,%edx
81004672:	8b 45 0c             	mov    0xc(%ebp),%eax
81004675:	0f b6 00             	movzbl (%eax),%eax
81004678:	0f b6 c8             	movzbl %al,%ecx
8100467b:	89 d0                	mov    %edx,%eax
8100467d:	29 c8                	sub    %ecx,%eax
8100467f:	c9                   	leave  
81004680:	c3                   	ret    
81004681:	66 90                	xchg   %ax,%ax
81004683:	66 90                	xchg   %ax,%ax
81004685:	66 90                	xchg   %ax,%ax
81004687:	66 90                	xchg   %ax,%ax
81004689:	66 90                	xchg   %ax,%ax
8100468b:	66 90                	xchg   %ax,%ax
8100468d:	66 90                	xchg   %ax,%ax
8100468f:	90                   	nop

81004690 <strlen>:
81004690:	55                   	push   %ebp
81004691:	89 e5                	mov    %esp,%ebp
81004693:	57                   	push   %edi
81004694:	8b 55 08             	mov    0x8(%ebp),%edx
81004697:	89 d7                	mov    %edx,%edi
81004699:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100469f:	74 25                	je     810046c6 <L5>
810046a1:	8a 0f                	mov    (%edi),%cl
810046a3:	47                   	inc    %edi
810046a4:	84 c9                	test   %cl,%cl
810046a6:	74 56                	je     810046fe <L15>
810046a8:	f7 c7 03 00 00 00    	test   $0x3,%edi
810046ae:	74 16                	je     810046c6 <L5>
810046b0:	8a 0f                	mov    (%edi),%cl
810046b2:	47                   	inc    %edi
810046b3:	84 c9                	test   %cl,%cl
810046b5:	74 47                	je     810046fe <L15>
810046b7:	f7 c7 03 00 00 00    	test   $0x3,%edi
810046bd:	74 07                	je     810046c6 <L5>
810046bf:	8a 0f                	mov    (%edi),%cl
810046c1:	47                   	inc    %edi
810046c2:	84 c9                	test   %cl,%cl
810046c4:	74 38                	je     810046fe <L15>

810046c6 <L5>:
810046c6:	83 ef 04             	sub    $0x4,%edi
810046c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

810046d0 <L10>:
810046d0:	83 c7 04             	add    $0x4,%edi
810046d3:	8b 0f                	mov    (%edi),%ecx
810046d5:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
810046db:	f7 d1                	not    %ecx
810046dd:	21 c8                	and    %ecx,%eax
810046df:	a9 80 80 80 80       	test   $0x80808080,%eax
810046e4:	74 ea                	je     810046d0 <L10>
810046e6:	f7 d1                	not    %ecx
810046e8:	47                   	inc    %edi
810046e9:	84 c9                	test   %cl,%cl
810046eb:	74 11                	je     810046fe <L15>
810046ed:	47                   	inc    %edi
810046ee:	c1 e9 08             	shr    $0x8,%ecx
810046f1:	84 c9                	test   %cl,%cl
810046f3:	74 09                	je     810046fe <L15>
810046f5:	47                   	inc    %edi
810046f6:	c1 e9 08             	shr    $0x8,%ecx
810046f9:	84 c9                	test   %cl,%cl
810046fb:	74 01                	je     810046fe <L15>
810046fd:	47                   	inc    %edi

810046fe <L15>:
810046fe:	29 d7                	sub    %edx,%edi
81004700:	8d 47 ff             	lea    -0x1(%edi),%eax
81004703:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004706:	5f                   	pop    %edi
81004707:	c9                   	leave  
81004708:	c3                   	ret    

81004709 <strtok>:
81004709:	55                   	push   %ebp
8100470a:	89 e5                	mov    %esp,%ebp
8100470c:	83 ec 18             	sub    $0x18,%esp
8100470f:	8b 55 08             	mov    0x8(%ebp),%edx
81004712:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004715:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100471a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100471d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004720:	83 c0 5c             	add    $0x5c,%eax
81004723:	6a 01                	push   $0x1
81004725:	50                   	push   %eax
81004726:	51                   	push   %ecx
81004727:	52                   	push   %edx
81004728:	e8 05 00 00 00       	call   81004732 <__strtok_r>
8100472d:	83 c4 10             	add    $0x10,%esp
81004730:	c9                   	leave  
81004731:	c3                   	ret    

81004732 <__strtok_r>:
81004732:	55                   	push   %ebp
81004733:	89 e5                	mov    %esp,%ebp
81004735:	57                   	push   %edi
81004736:	56                   	push   %esi
81004737:	53                   	push   %ebx
81004738:	83 ec 10             	sub    $0x10,%esp
8100473b:	8b 45 08             	mov    0x8(%ebp),%eax
8100473e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004741:	85 c0                	test   %eax,%eax
81004743:	75 13                	jne    81004758 <__strtok_r+0x26>
81004745:	8b 45 10             	mov    0x10(%ebp),%eax
81004748:	8b 00                	mov    (%eax),%eax
8100474a:	85 c0                	test   %eax,%eax
8100474c:	75 0a                	jne    81004758 <__strtok_r+0x26>
8100474e:	b8 00 00 00 00       	mov    $0x0,%eax
81004753:	e9 92 00 00 00       	jmp    810047ea <__strtok_r+0xb8>
81004758:	90                   	nop
81004759:	89 c2                	mov    %eax,%edx
8100475b:	8d 42 01             	lea    0x1(%edx),%eax
8100475e:	0f b6 12             	movzbl (%edx),%edx
81004761:	0f be f2             	movsbl %dl,%esi
81004764:	89 cf                	mov    %ecx,%edi
81004766:	eb 1c                	jmp    81004784 <__strtok_r+0x52>
81004768:	39 de                	cmp    %ebx,%esi
8100476a:	75 18                	jne    81004784 <__strtok_r+0x52>
8100476c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004770:	74 02                	je     81004774 <__strtok_r+0x42>
81004772:	eb e5                	jmp    81004759 <__strtok_r+0x27>
81004774:	8b 55 10             	mov    0x10(%ebp),%edx
81004777:	89 02                	mov    %eax,(%edx)
81004779:	8d 50 ff             	lea    -0x1(%eax),%edx
8100477c:	c6 02 00             	movb   $0x0,(%edx)
8100477f:	83 e8 01             	sub    $0x1,%eax
81004782:	eb 66                	jmp    810047ea <__strtok_r+0xb8>
81004784:	89 fa                	mov    %edi,%edx
81004786:	8d 7a 01             	lea    0x1(%edx),%edi
81004789:	0f b6 12             	movzbl (%edx),%edx
8100478c:	0f be da             	movsbl %dl,%ebx
8100478f:	85 db                	test   %ebx,%ebx
81004791:	75 d5                	jne    81004768 <__strtok_r+0x36>
81004793:	85 f6                	test   %esi,%esi
81004795:	75 10                	jne    810047a7 <__strtok_r+0x75>
81004797:	8b 45 10             	mov    0x10(%ebp),%eax
8100479a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810047a0:	b8 00 00 00 00       	mov    $0x0,%eax
810047a5:	eb 43                	jmp    810047ea <__strtok_r+0xb8>
810047a7:	8d 50 ff             	lea    -0x1(%eax),%edx
810047aa:	89 55 f0             	mov    %edx,-0x10(%ebp)
810047ad:	89 c2                	mov    %eax,%edx
810047af:	8d 42 01             	lea    0x1(%edx),%eax
810047b2:	0f b6 12             	movzbl (%edx),%edx
810047b5:	0f be f2             	movsbl %dl,%esi
810047b8:	89 cf                	mov    %ecx,%edi
810047ba:	89 fa                	mov    %edi,%edx
810047bc:	8d 7a 01             	lea    0x1(%edx),%edi
810047bf:	0f b6 12             	movzbl (%edx),%edx
810047c2:	0f be da             	movsbl %dl,%ebx
810047c5:	39 f3                	cmp    %esi,%ebx
810047c7:	75 1b                	jne    810047e4 <__strtok_r+0xb2>
810047c9:	85 f6                	test   %esi,%esi
810047cb:	75 07                	jne    810047d4 <__strtok_r+0xa2>
810047cd:	b8 00 00 00 00       	mov    $0x0,%eax
810047d2:	eb 06                	jmp    810047da <__strtok_r+0xa8>
810047d4:	8d 50 ff             	lea    -0x1(%eax),%edx
810047d7:	c6 02 00             	movb   $0x0,(%edx)
810047da:	8b 55 10             	mov    0x10(%ebp),%edx
810047dd:	89 02                	mov    %eax,(%edx)
810047df:	8b 45 f0             	mov    -0x10(%ebp),%eax
810047e2:	eb 06                	jmp    810047ea <__strtok_r+0xb8>
810047e4:	85 db                	test   %ebx,%ebx
810047e6:	75 d2                	jne    810047ba <__strtok_r+0x88>
810047e8:	eb c3                	jmp    810047ad <__strtok_r+0x7b>
810047ea:	83 c4 10             	add    $0x10,%esp
810047ed:	5b                   	pop    %ebx
810047ee:	5e                   	pop    %esi
810047ef:	5f                   	pop    %edi
810047f0:	5d                   	pop    %ebp
810047f1:	c3                   	ret    

810047f2 <strtok_r>:
810047f2:	55                   	push   %ebp
810047f3:	89 e5                	mov    %esp,%ebp
810047f5:	8b 45 08             	mov    0x8(%ebp),%eax
810047f8:	8b 55 0c             	mov    0xc(%ebp),%edx
810047fb:	6a 01                	push   $0x1
810047fd:	ff 75 10             	push   0x10(%ebp)
81004800:	52                   	push   %edx
81004801:	50                   	push   %eax
81004802:	e8 2b ff ff ff       	call   81004732 <__strtok_r>
81004807:	83 c4 10             	add    $0x10,%esp
8100480a:	c9                   	leave  
8100480b:	c3                   	ret    

8100480c <__locale_ctype_ptr_l>:
8100480c:	55                   	push   %ebp
8100480d:	89 e5                	mov    %esp,%ebp
8100480f:	b8 40 70 00 81       	mov    $0x81007040,%eax
81004814:	5d                   	pop    %ebp
81004815:	c3                   	ret    

81004816 <__get_global_locale>:
81004816:	55                   	push   %ebp
81004817:	89 e5                	mov    %esp,%ebp
81004819:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
8100481e:	5d                   	pop    %ebp
8100481f:	c3                   	ret    

81004820 <__get_current_locale>:
81004820:	55                   	push   %ebp
81004821:	89 e5                	mov    %esp,%ebp
81004823:	e8 ee ff ff ff       	call   81004816 <__get_global_locale>
81004828:	5d                   	pop    %ebp
81004829:	c3                   	ret    

8100482a <_strtol_l>:
8100482a:	55                   	push   %ebp
8100482b:	89 e5                	mov    %esp,%ebp
8100482d:	57                   	push   %edi
8100482e:	56                   	push   %esi
8100482f:	53                   	push   %ebx
81004830:	83 ec 1c             	sub    $0x1c,%esp
81004833:	8b 75 0c             	mov    0xc(%ebp),%esi
81004836:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100483d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004841:	78 0c                	js     8100484f <_strtol_l+0x25>
81004843:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81004847:	74 06                	je     8100484f <_strtol_l+0x25>
81004849:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
8100484d:	7e 15                	jle    81004864 <_strtol_l+0x3a>
8100484f:	e8 44 06 00 00       	call   81004e98 <__errno>
81004854:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100485a:	b8 00 00 00 00       	mov    $0x0,%eax
8100485f:	e9 90 01 00 00       	jmp    810049f4 <_strtol_l+0x1ca>
81004864:	89 f0                	mov    %esi,%eax
81004866:	8d 70 01             	lea    0x1(%eax),%esi
81004869:	0f b6 00             	movzbl (%eax),%eax
8100486c:	0f b6 d8             	movzbl %al,%ebx
8100486f:	83 ec 0c             	sub    $0xc,%esp
81004872:	ff 75 18             	push   0x18(%ebp)
81004875:	e8 92 ff ff ff       	call   8100480c <__locale_ctype_ptr_l>
8100487a:	83 c4 10             	add    $0x10,%esp
8100487d:	89 da                	mov    %ebx,%edx
8100487f:	83 c2 01             	add    $0x1,%edx
81004882:	01 d0                	add    %edx,%eax
81004884:	0f b6 00             	movzbl (%eax),%eax
81004887:	0f be c0             	movsbl %al,%eax
8100488a:	83 e0 08             	and    $0x8,%eax
8100488d:	85 c0                	test   %eax,%eax
8100488f:	75 d3                	jne    81004864 <_strtol_l+0x3a>
81004891:	83 fb 2d             	cmp    $0x2d,%ebx
81004894:	75 14                	jne    810048aa <_strtol_l+0x80>
81004896:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100489d:	89 f0                	mov    %esi,%eax
8100489f:	8d 70 01             	lea    0x1(%eax),%esi
810048a2:	0f b6 00             	movzbl (%eax),%eax
810048a5:	0f b6 d8             	movzbl %al,%ebx
810048a8:	eb 10                	jmp    810048ba <_strtol_l+0x90>
810048aa:	83 fb 2b             	cmp    $0x2b,%ebx
810048ad:	75 0b                	jne    810048ba <_strtol_l+0x90>
810048af:	89 f0                	mov    %esi,%eax
810048b1:	8d 70 01             	lea    0x1(%eax),%esi
810048b4:	0f b6 00             	movzbl (%eax),%eax
810048b7:	0f b6 d8             	movzbl %al,%ebx
810048ba:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810048be:	74 06                	je     810048c6 <_strtol_l+0x9c>
810048c0:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
810048c4:	75 26                	jne    810048ec <_strtol_l+0xc2>
810048c6:	83 fb 30             	cmp    $0x30,%ebx
810048c9:	75 21                	jne    810048ec <_strtol_l+0xc2>
810048cb:	0f b6 06             	movzbl (%esi),%eax
810048ce:	3c 78                	cmp    $0x78,%al
810048d0:	74 07                	je     810048d9 <_strtol_l+0xaf>
810048d2:	0f b6 06             	movzbl (%esi),%eax
810048d5:	3c 58                	cmp    $0x58,%al
810048d7:	75 13                	jne    810048ec <_strtol_l+0xc2>
810048d9:	8d 46 01             	lea    0x1(%esi),%eax
810048dc:	0f b6 00             	movzbl (%eax),%eax
810048df:	0f b6 d8             	movzbl %al,%ebx
810048e2:	83 c6 02             	add    $0x2,%esi
810048e5:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
810048ec:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810048f0:	75 14                	jne    81004906 <_strtol_l+0xdc>
810048f2:	83 fb 30             	cmp    $0x30,%ebx
810048f5:	75 07                	jne    810048fe <_strtol_l+0xd4>
810048f7:	b8 08 00 00 00       	mov    $0x8,%eax
810048fc:	eb 05                	jmp    81004903 <_strtol_l+0xd9>
810048fe:	b8 0a 00 00 00       	mov    $0xa,%eax
81004903:	89 45 14             	mov    %eax,0x14(%ebp)
81004906:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100490a:	74 07                	je     81004913 <_strtol_l+0xe9>
8100490c:	b8 00 00 00 80       	mov    $0x80000000,%eax
81004911:	eb 05                	jmp    81004918 <_strtol_l+0xee>
81004913:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81004918:	89 c7                	mov    %eax,%edi
8100491a:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100491d:	89 f8                	mov    %edi,%eax
8100491f:	ba 00 00 00 00       	mov    $0x0,%edx
81004924:	f7 f1                	div    %ecx
81004926:	89 d0                	mov    %edx,%eax
81004928:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100492b:	8b 4d 14             	mov    0x14(%ebp),%ecx
8100492e:	89 f8                	mov    %edi,%eax
81004930:	ba 00 00 00 00       	mov    $0x0,%edx
81004935:	f7 f1                	div    %ecx
81004937:	89 c2                	mov    %eax,%edx
81004939:	bf 00 00 00 00       	mov    $0x0,%edi
8100493e:	b9 00 00 00 00       	mov    $0x0,%ecx
81004943:	83 fb 2f             	cmp    $0x2f,%ebx
81004946:	7e 0a                	jle    81004952 <_strtol_l+0x128>
81004948:	83 fb 39             	cmp    $0x39,%ebx
8100494b:	7f 05                	jg     81004952 <_strtol_l+0x128>
8100494d:	83 eb 30             	sub    $0x30,%ebx
81004950:	eb 1c                	jmp    8100496e <_strtol_l+0x144>
81004952:	83 fb 40             	cmp    $0x40,%ebx
81004955:	7e 0a                	jle    81004961 <_strtol_l+0x137>
81004957:	83 fb 5a             	cmp    $0x5a,%ebx
8100495a:	7f 05                	jg     81004961 <_strtol_l+0x137>
8100495c:	83 eb 37             	sub    $0x37,%ebx
8100495f:	eb 0d                	jmp    8100496e <_strtol_l+0x144>
81004961:	83 fb 60             	cmp    $0x60,%ebx
81004964:	7e 46                	jle    810049ac <_strtol_l+0x182>
81004966:	83 fb 7a             	cmp    $0x7a,%ebx
81004969:	7f 41                	jg     810049ac <_strtol_l+0x182>
8100496b:	83 eb 57             	sub    $0x57,%ebx
8100496e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81004971:	7d 38                	jge    810049ab <_strtol_l+0x181>
81004973:	89 c8                	mov    %ecx,%eax
81004975:	85 c0                	test   %eax,%eax
81004977:	78 0f                	js     81004988 <_strtol_l+0x15e>
81004979:	89 d0                	mov    %edx,%eax
8100497b:	39 c7                	cmp    %eax,%edi
8100497d:	77 09                	ja     81004988 <_strtol_l+0x15e>
8100497f:	39 c7                	cmp    %eax,%edi
81004981:	75 0c                	jne    8100498f <_strtol_l+0x165>
81004983:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81004986:	7e 07                	jle    8100498f <_strtol_l+0x165>
81004988:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
8100498d:	eb 0f                	jmp    8100499e <_strtol_l+0x174>
8100498f:	b9 01 00 00 00       	mov    $0x1,%ecx
81004994:	8b 45 14             	mov    0x14(%ebp),%eax
81004997:	0f af f8             	imul   %eax,%edi
8100499a:	89 d8                	mov    %ebx,%eax
8100499c:	01 c7                	add    %eax,%edi
8100499e:	89 f0                	mov    %esi,%eax
810049a0:	8d 70 01             	lea    0x1(%eax),%esi
810049a3:	0f b6 00             	movzbl (%eax),%eax
810049a6:	0f b6 d8             	movzbl %al,%ebx
810049a9:	eb 98                	jmp    81004943 <_strtol_l+0x119>
810049ab:	90                   	nop
810049ac:	89 c8                	mov    %ecx,%eax
810049ae:	85 c0                	test   %eax,%eax
810049b0:	79 1f                	jns    810049d1 <_strtol_l+0x1a7>
810049b2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810049b6:	74 07                	je     810049bf <_strtol_l+0x195>
810049b8:	b8 00 00 00 80       	mov    $0x80000000,%eax
810049bd:	eb 05                	jmp    810049c4 <_strtol_l+0x19a>
810049bf:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810049c4:	89 c7                	mov    %eax,%edi
810049c6:	8b 45 08             	mov    0x8(%ebp),%eax
810049c9:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
810049cf:	eb 08                	jmp    810049d9 <_strtol_l+0x1af>
810049d1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810049d5:	74 02                	je     810049d9 <_strtol_l+0x1af>
810049d7:	f7 df                	neg    %edi
810049d9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810049dd:	74 13                	je     810049f2 <_strtol_l+0x1c8>
810049df:	89 c8                	mov    %ecx,%eax
810049e1:	85 c0                	test   %eax,%eax
810049e3:	74 05                	je     810049ea <_strtol_l+0x1c0>
810049e5:	8d 46 ff             	lea    -0x1(%esi),%eax
810049e8:	eb 03                	jmp    810049ed <_strtol_l+0x1c3>
810049ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810049ed:	8b 55 10             	mov    0x10(%ebp),%edx
810049f0:	89 02                	mov    %eax,(%edx)
810049f2:	89 f8                	mov    %edi,%eax
810049f4:	8d 65 f4             	lea    -0xc(%ebp),%esp
810049f7:	5b                   	pop    %ebx
810049f8:	5e                   	pop    %esi
810049f9:	5f                   	pop    %edi
810049fa:	5d                   	pop    %ebp
810049fb:	c3                   	ret    

810049fc <_strtol_r>:
810049fc:	55                   	push   %ebp
810049fd:	89 e5                	mov    %esp,%ebp
810049ff:	83 ec 08             	sub    $0x8,%esp
81004a02:	e8 19 fe ff ff       	call   81004820 <__get_current_locale>
81004a07:	83 ec 0c             	sub    $0xc,%esp
81004a0a:	50                   	push   %eax
81004a0b:	ff 75 14             	push   0x14(%ebp)
81004a0e:	ff 75 10             	push   0x10(%ebp)
81004a11:	ff 75 0c             	push   0xc(%ebp)
81004a14:	ff 75 08             	push   0x8(%ebp)
81004a17:	e8 0e fe ff ff       	call   8100482a <_strtol_l>
81004a1c:	83 c4 20             	add    $0x20,%esp
81004a1f:	c9                   	leave  
81004a20:	c3                   	ret    

81004a21 <strtol_l>:
81004a21:	55                   	push   %ebp
81004a22:	89 e5                	mov    %esp,%ebp
81004a24:	83 ec 08             	sub    $0x8,%esp
81004a27:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004a2c:	83 ec 0c             	sub    $0xc,%esp
81004a2f:	ff 75 14             	push   0x14(%ebp)
81004a32:	ff 75 10             	push   0x10(%ebp)
81004a35:	ff 75 0c             	push   0xc(%ebp)
81004a38:	ff 75 08             	push   0x8(%ebp)
81004a3b:	50                   	push   %eax
81004a3c:	e8 e9 fd ff ff       	call   8100482a <_strtol_l>
81004a41:	83 c4 20             	add    $0x20,%esp
81004a44:	c9                   	leave  
81004a45:	c3                   	ret    

81004a46 <strtol>:
81004a46:	55                   	push   %ebp
81004a47:	89 e5                	mov    %esp,%ebp
81004a49:	83 ec 08             	sub    $0x8,%esp
81004a4c:	e8 cf fd ff ff       	call   81004820 <__get_current_locale>
81004a51:	8b 15 a4 75 00 81    	mov    0x810075a4,%edx
81004a57:	83 ec 0c             	sub    $0xc,%esp
81004a5a:	50                   	push   %eax
81004a5b:	ff 75 10             	push   0x10(%ebp)
81004a5e:	ff 75 0c             	push   0xc(%ebp)
81004a61:	ff 75 08             	push   0x8(%ebp)
81004a64:	52                   	push   %edx
81004a65:	e8 c0 fd ff ff       	call   8100482a <_strtol_l>
81004a6a:	83 c4 20             	add    $0x20,%esp
81004a6d:	c9                   	leave  
81004a6e:	c3                   	ret    

81004a6f <__swbuf_r>:
81004a6f:	55                   	push   %ebp
81004a70:	89 e5                	mov    %esp,%ebp
81004a72:	57                   	push   %edi
81004a73:	56                   	push   %esi
81004a74:	53                   	push   %ebx
81004a75:	83 ec 1c             	sub    $0x1c,%esp
81004a78:	8b 7d 0c             	mov    0xc(%ebp),%edi
81004a7b:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004a7e:	8b 45 08             	mov    0x8(%ebp),%eax
81004a81:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004a84:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81004a88:	74 18                	je     81004aa2 <__swbuf_r+0x33>
81004a8a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004a8d:	8b 40 38             	mov    0x38(%eax),%eax
81004a90:	85 c0                	test   %eax,%eax
81004a92:	75 0e                	jne    81004aa2 <__swbuf_r+0x33>
81004a94:	83 ec 0c             	sub    $0xc,%esp
81004a97:	ff 75 e4             	push   -0x1c(%ebp)
81004a9a:	e8 14 c7 ff ff       	call   810011b3 <__sinit>
81004a9f:	83 c4 10             	add    $0x10,%esp
81004aa2:	8b 43 18             	mov    0x18(%ebx),%eax
81004aa5:	89 43 08             	mov    %eax,0x8(%ebx)
81004aa8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004aac:	98                   	cwtl   
81004aad:	83 e0 08             	and    $0x8,%eax
81004ab0:	85 c0                	test   %eax,%eax
81004ab2:	74 07                	je     81004abb <__swbuf_r+0x4c>
81004ab4:	8b 43 10             	mov    0x10(%ebx),%eax
81004ab7:	85 c0                	test   %eax,%eax
81004ab9:	75 1d                	jne    81004ad8 <__swbuf_r+0x69>
81004abb:	83 ec 08             	sub    $0x8,%esp
81004abe:	53                   	push   %ebx
81004abf:	ff 75 08             	push   0x8(%ebp)
81004ac2:	e8 21 01 00 00       	call   81004be8 <__swsetup_r>
81004ac7:	83 c4 10             	add    $0x10,%esp
81004aca:	85 c0                	test   %eax,%eax
81004acc:	74 0a                	je     81004ad8 <__swbuf_r+0x69>
81004ace:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004ad3:	e9 a1 00 00 00       	jmp    81004b79 <__swbuf_r+0x10a>
81004ad8:	89 f8                	mov    %edi,%eax
81004ada:	0f b6 f8             	movzbl %al,%edi
81004add:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ae1:	98                   	cwtl   
81004ae2:	25 00 20 00 00       	and    $0x2000,%eax
81004ae7:	85 c0                	test   %eax,%eax
81004ae9:	75 14                	jne    81004aff <__swbuf_r+0x90>
81004aeb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004aef:	80 cc 20             	or     $0x20,%ah
81004af2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004af6:	8b 43 64             	mov    0x64(%ebx),%eax
81004af9:	80 e4 df             	and    $0xdf,%ah
81004afc:	89 43 64             	mov    %eax,0x64(%ebx)
81004aff:	8b 03                	mov    (%ebx),%eax
81004b01:	8b 53 10             	mov    0x10(%ebx),%edx
81004b04:	29 d0                	sub    %edx,%eax
81004b06:	89 c6                	mov    %eax,%esi
81004b08:	8b 43 14             	mov    0x14(%ebx),%eax
81004b0b:	39 c6                	cmp    %eax,%esi
81004b0d:	7c 1f                	jl     81004b2e <__swbuf_r+0xbf>
81004b0f:	83 ec 08             	sub    $0x8,%esp
81004b12:	53                   	push   %ebx
81004b13:	ff 75 08             	push   0x8(%ebp)
81004b16:	e8 95 c1 ff ff       	call   81000cb0 <_fflush_r>
81004b1b:	83 c4 10             	add    $0x10,%esp
81004b1e:	85 c0                	test   %eax,%eax
81004b20:	74 07                	je     81004b29 <__swbuf_r+0xba>
81004b22:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b27:	eb 50                	jmp    81004b79 <__swbuf_r+0x10a>
81004b29:	be 00 00 00 00       	mov    $0x0,%esi
81004b2e:	8b 43 08             	mov    0x8(%ebx),%eax
81004b31:	83 e8 01             	sub    $0x1,%eax
81004b34:	89 43 08             	mov    %eax,0x8(%ebx)
81004b37:	8b 03                	mov    (%ebx),%eax
81004b39:	8d 50 01             	lea    0x1(%eax),%edx
81004b3c:	89 13                	mov    %edx,(%ebx)
81004b3e:	89 fa                	mov    %edi,%edx
81004b40:	88 10                	mov    %dl,(%eax)
81004b42:	83 c6 01             	add    $0x1,%esi
81004b45:	8b 43 14             	mov    0x14(%ebx),%eax
81004b48:	39 c6                	cmp    %eax,%esi
81004b4a:	74 11                	je     81004b5d <__swbuf_r+0xee>
81004b4c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004b50:	98                   	cwtl   
81004b51:	83 e0 01             	and    $0x1,%eax
81004b54:	85 c0                	test   %eax,%eax
81004b56:	74 1f                	je     81004b77 <__swbuf_r+0x108>
81004b58:	83 ff 0a             	cmp    $0xa,%edi
81004b5b:	75 1a                	jne    81004b77 <__swbuf_r+0x108>
81004b5d:	83 ec 08             	sub    $0x8,%esp
81004b60:	53                   	push   %ebx
81004b61:	ff 75 08             	push   0x8(%ebp)
81004b64:	e8 47 c1 ff ff       	call   81000cb0 <_fflush_r>
81004b69:	83 c4 10             	add    $0x10,%esp
81004b6c:	85 c0                	test   %eax,%eax
81004b6e:	74 07                	je     81004b77 <__swbuf_r+0x108>
81004b70:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004b75:	eb 02                	jmp    81004b79 <__swbuf_r+0x10a>
81004b77:	89 f8                	mov    %edi,%eax
81004b79:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b7c:	5b                   	pop    %ebx
81004b7d:	5e                   	pop    %esi
81004b7e:	5f                   	pop    %edi
81004b7f:	5d                   	pop    %ebp
81004b80:	c3                   	ret    

81004b81 <__swbuf>:
81004b81:	55                   	push   %ebp
81004b82:	89 e5                	mov    %esp,%ebp
81004b84:	83 ec 08             	sub    $0x8,%esp
81004b87:	8b 55 08             	mov    0x8(%ebp),%edx
81004b8a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81004b8d:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004b92:	83 ec 04             	sub    $0x4,%esp
81004b95:	51                   	push   %ecx
81004b96:	52                   	push   %edx
81004b97:	50                   	push   %eax
81004b98:	e8 d2 fe ff ff       	call   81004a6f <__swbuf_r>
81004b9d:	83 c4 10             	add    $0x10,%esp
81004ba0:	c9                   	leave  
81004ba1:	c3                   	ret    

81004ba2 <_write_r>:
81004ba2:	55                   	push   %ebp
81004ba3:	89 e5                	mov    %esp,%ebp
81004ba5:	83 ec 18             	sub    $0x18,%esp
81004ba8:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004baf:	00 00 00 
81004bb2:	83 ec 04             	sub    $0x4,%esp
81004bb5:	ff 75 14             	push   0x14(%ebp)
81004bb8:	ff 75 10             	push   0x10(%ebp)
81004bbb:	ff 75 0c             	push   0xc(%ebp)
81004bbe:	e8 2a bc ff ff       	call   810007ed <write>
81004bc3:	83 c4 10             	add    $0x10,%esp
81004bc6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bc9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004bcd:	75 14                	jne    81004be3 <_write_r+0x41>
81004bcf:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81004bd4:	85 c0                	test   %eax,%eax
81004bd6:	74 0b                	je     81004be3 <_write_r+0x41>
81004bd8:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81004bde:	8b 45 08             	mov    0x8(%ebp),%eax
81004be1:	89 10                	mov    %edx,(%eax)
81004be3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004be6:	c9                   	leave  
81004be7:	c3                   	ret    

81004be8 <__swsetup_r>:
81004be8:	55                   	push   %ebp
81004be9:	89 e5                	mov    %esp,%ebp
81004beb:	53                   	push   %ebx
81004bec:	83 ec 14             	sub    $0x14,%esp
81004bef:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004bf2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004bf7:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004bfa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004bfe:	74 18                	je     81004c18 <__swsetup_r+0x30>
81004c00:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c03:	8b 40 38             	mov    0x38(%eax),%eax
81004c06:	85 c0                	test   %eax,%eax
81004c08:	75 0e                	jne    81004c18 <__swsetup_r+0x30>
81004c0a:	83 ec 0c             	sub    $0xc,%esp
81004c0d:	ff 75 f4             	push   -0xc(%ebp)
81004c10:	e8 9e c5 ff ff       	call   810011b3 <__sinit>
81004c15:	83 c4 10             	add    $0x10,%esp
81004c18:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c1c:	98                   	cwtl   
81004c1d:	83 e0 08             	and    $0x8,%eax
81004c20:	85 c0                	test   %eax,%eax
81004c22:	0f 85 82 00 00 00    	jne    81004caa <__swsetup_r+0xc2>
81004c28:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c2c:	98                   	cwtl   
81004c2d:	83 e0 10             	and    $0x10,%eax
81004c30:	85 c0                	test   %eax,%eax
81004c32:	75 1e                	jne    81004c52 <__swsetup_r+0x6a>
81004c34:	8b 45 08             	mov    0x8(%ebp),%eax
81004c37:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81004c3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c41:	83 c8 40             	or     $0x40,%eax
81004c44:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c48:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004c4d:	e9 ec 00 00 00       	jmp    81004d3e <__swsetup_r+0x156>
81004c52:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c56:	98                   	cwtl   
81004c57:	83 e0 04             	and    $0x4,%eax
81004c5a:	85 c0                	test   %eax,%eax
81004c5c:	74 41                	je     81004c9f <__swsetup_r+0xb7>
81004c5e:	8b 43 30             	mov    0x30(%ebx),%eax
81004c61:	85 c0                	test   %eax,%eax
81004c63:	74 23                	je     81004c88 <__swsetup_r+0xa0>
81004c65:	8b 53 30             	mov    0x30(%ebx),%edx
81004c68:	8d 43 40             	lea    0x40(%ebx),%eax
81004c6b:	39 c2                	cmp    %eax,%edx
81004c6d:	74 12                	je     81004c81 <__swsetup_r+0x99>
81004c6f:	8b 43 30             	mov    0x30(%ebx),%eax
81004c72:	83 ec 08             	sub    $0x8,%esp
81004c75:	50                   	push   %eax
81004c76:	ff 75 08             	push   0x8(%ebp)
81004c79:	e8 97 c6 ff ff       	call   81001315 <_free_r>
81004c7e:	83 c4 10             	add    $0x10,%esp
81004c81:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004c88:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004c8c:	83 e0 db             	and    $0xffffffdb,%eax
81004c8f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004c93:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c9a:	8b 43 10             	mov    0x10(%ebx),%eax
81004c9d:	89 03                	mov    %eax,(%ebx)
81004c9f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ca3:	83 c8 08             	or     $0x8,%eax
81004ca6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004caa:	8b 43 10             	mov    0x10(%ebx),%eax
81004cad:	85 c0                	test   %eax,%eax
81004caf:	75 2b                	jne    81004cdc <__swsetup_r+0xf4>
81004cb1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cb5:	98                   	cwtl   
81004cb6:	25 00 02 00 00       	and    $0x200,%eax
81004cbb:	85 c0                	test   %eax,%eax
81004cbd:	74 0e                	je     81004ccd <__swsetup_r+0xe5>
81004cbf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cc3:	98                   	cwtl   
81004cc4:	25 80 00 00 00       	and    $0x80,%eax
81004cc9:	85 c0                	test   %eax,%eax
81004ccb:	74 0f                	je     81004cdc <__swsetup_r+0xf4>
81004ccd:	83 ec 08             	sub    $0x8,%esp
81004cd0:	53                   	push   %ebx
81004cd1:	ff 75 08             	push   0x8(%ebp)
81004cd4:	e8 cf 0c 00 00       	call   810059a8 <__smakebuf_r>
81004cd9:	83 c4 10             	add    $0x10,%esp
81004cdc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ce0:	98                   	cwtl   
81004ce1:	83 e0 01             	and    $0x1,%eax
81004ce4:	85 c0                	test   %eax,%eax
81004ce6:	74 11                	je     81004cf9 <__swsetup_r+0x111>
81004ce8:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004cef:	8b 43 14             	mov    0x14(%ebx),%eax
81004cf2:	f7 d8                	neg    %eax
81004cf4:	89 43 18             	mov    %eax,0x18(%ebx)
81004cf7:	eb 19                	jmp    81004d12 <__swsetup_r+0x12a>
81004cf9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004cfd:	98                   	cwtl   
81004cfe:	83 e0 02             	and    $0x2,%eax
81004d01:	85 c0                	test   %eax,%eax
81004d03:	75 05                	jne    81004d0a <__swsetup_r+0x122>
81004d05:	8b 43 14             	mov    0x14(%ebx),%eax
81004d08:	eb 05                	jmp    81004d0f <__swsetup_r+0x127>
81004d0a:	b8 00 00 00 00       	mov    $0x0,%eax
81004d0f:	89 43 08             	mov    %eax,0x8(%ebx)
81004d12:	8b 43 10             	mov    0x10(%ebx),%eax
81004d15:	85 c0                	test   %eax,%eax
81004d17:	75 20                	jne    81004d39 <__swsetup_r+0x151>
81004d19:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d1d:	98                   	cwtl   
81004d1e:	25 80 00 00 00       	and    $0x80,%eax
81004d23:	85 c0                	test   %eax,%eax
81004d25:	74 12                	je     81004d39 <__swsetup_r+0x151>
81004d27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004d2b:	83 c8 40             	or     $0x40,%eax
81004d2e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004d32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d37:	eb 05                	jmp    81004d3e <__swsetup_r+0x156>
81004d39:	b8 00 00 00 00       	mov    $0x0,%eax
81004d3e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004d41:	c9                   	leave  
81004d42:	c3                   	ret    

81004d43 <__call_exitprocs>:
81004d43:	55                   	push   %ebp
81004d44:	89 e5                	mov    %esp,%ebp
81004d46:	57                   	push   %edi
81004d47:	56                   	push   %esi
81004d48:	53                   	push   %ebx
81004d49:	83 ec 1c             	sub    $0x1c,%esp
81004d4c:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81004d51:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
81004d57:	a1 ec 6d 00 81       	mov    0x81006dec,%eax
81004d5c:	05 48 01 00 00       	add    $0x148,%eax
81004d61:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81004d64:	90                   	nop
81004d65:	85 db                	test   %ebx,%ebx
81004d67:	0f 84 e1 00 00 00    	je     81004e4e <__call_exitprocs+0x10b>
81004d6d:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
81004d73:	8b 43 04             	mov    0x4(%ebx),%eax
81004d76:	8d 70 ff             	lea    -0x1(%eax),%esi
81004d79:	e9 c6 00 00 00       	jmp    81004e44 <__call_exitprocs+0x101>
81004d7e:	b8 01 00 00 00       	mov    $0x1,%eax
81004d83:	89 f1                	mov    %esi,%ecx
81004d85:	d3 e0                	shl    %cl,%eax
81004d87:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004d8a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004d8e:	74 17                	je     81004da7 <__call_exitprocs+0x64>
81004d90:	85 ff                	test   %edi,%edi
81004d92:	0f 84 a5 00 00 00    	je     81004e3d <__call_exitprocs+0xfa>
81004d98:	8d 46 20             	lea    0x20(%esi),%eax
81004d9b:	8b 04 87             	mov    (%edi,%eax,4),%eax
81004d9e:	39 45 0c             	cmp    %eax,0xc(%ebp)
81004da1:	0f 85 96 00 00 00    	jne    81004e3d <__call_exitprocs+0xfa>
81004da7:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81004dab:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004dae:	8b 43 04             	mov    0x4(%ebx),%eax
81004db1:	83 e8 01             	sub    $0x1,%eax
81004db4:	39 c6                	cmp    %eax,%esi
81004db6:	75 0b                	jne    81004dc3 <__call_exitprocs+0x80>
81004db8:	8b 43 04             	mov    0x4(%ebx),%eax
81004dbb:	83 e8 01             	sub    $0x1,%eax
81004dbe:	89 43 04             	mov    %eax,0x4(%ebx)
81004dc1:	eb 08                	jmp    81004dcb <__call_exitprocs+0x88>
81004dc3:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81004dca:	00 
81004dcb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81004dcf:	74 6f                	je     81004e40 <__call_exitprocs+0xfd>
81004dd1:	8b 43 04             	mov    0x4(%ebx),%eax
81004dd4:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004dd7:	85 ff                	test   %edi,%edi
81004dd9:	74 0f                	je     81004dea <__call_exitprocs+0xa7>
81004ddb:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81004de1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004de4:	21 d0                	and    %edx,%eax
81004de6:	85 c0                	test   %eax,%eax
81004de8:	75 07                	jne    81004df1 <__call_exitprocs+0xae>
81004dea:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004ded:	ff d0                	call   *%eax
81004def:	eb 32                	jmp    81004e23 <__call_exitprocs+0xe0>
81004df1:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
81004df7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004dfa:	21 d0                	and    %edx,%eax
81004dfc:	85 c0                	test   %eax,%eax
81004dfe:	75 14                	jne    81004e14 <__call_exitprocs+0xd1>
81004e00:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004e03:	83 ec 08             	sub    $0x8,%esp
81004e06:	50                   	push   %eax
81004e07:	ff 75 08             	push   0x8(%ebp)
81004e0a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004e0d:	ff d0                	call   *%eax
81004e0f:	83 c4 10             	add    $0x10,%esp
81004e12:	eb 0f                	jmp    81004e23 <__call_exitprocs+0xe0>
81004e14:	8b 04 b7             	mov    (%edi,%esi,4),%eax
81004e17:	83 ec 0c             	sub    $0xc,%esp
81004e1a:	50                   	push   %eax
81004e1b:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004e1e:	ff d0                	call   *%eax
81004e20:	83 c4 10             	add    $0x10,%esp
81004e23:	8b 43 04             	mov    0x4(%ebx),%eax
81004e26:	39 45 d8             	cmp    %eax,-0x28(%ebp)
81004e29:	0f 85 1d ff ff ff    	jne    81004d4c <__call_exitprocs+0x9>
81004e2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004e32:	8b 00                	mov    (%eax),%eax
81004e34:	39 c3                	cmp    %eax,%ebx
81004e36:	74 09                	je     81004e41 <__call_exitprocs+0xfe>
81004e38:	e9 0f ff ff ff       	jmp    81004d4c <__call_exitprocs+0x9>
81004e3d:	90                   	nop
81004e3e:	eb 01                	jmp    81004e41 <__call_exitprocs+0xfe>
81004e40:	90                   	nop
81004e41:	83 ee 01             	sub    $0x1,%esi
81004e44:	85 f6                	test   %esi,%esi
81004e46:	0f 89 32 ff ff ff    	jns    81004d7e <__call_exitprocs+0x3b>
81004e4c:	eb 01                	jmp    81004e4f <__call_exitprocs+0x10c>
81004e4e:	90                   	nop
81004e4f:	90                   	nop
81004e50:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004e53:	5b                   	pop    %ebx
81004e54:	5e                   	pop    %esi
81004e55:	5f                   	pop    %edi
81004e56:	5d                   	pop    %ebp
81004e57:	c3                   	ret    

81004e58 <_close_r>:
81004e58:	55                   	push   %ebp
81004e59:	89 e5                	mov    %esp,%ebp
81004e5b:	83 ec 18             	sub    $0x18,%esp
81004e5e:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81004e65:	00 00 00 
81004e68:	83 ec 0c             	sub    $0xc,%esp
81004e6b:	ff 75 0c             	push   0xc(%ebp)
81004e6e:	e8 a7 b9 ff ff       	call   8100081a <close>
81004e73:	83 c4 10             	add    $0x10,%esp
81004e76:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e79:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004e7d:	75 14                	jne    81004e93 <_close_r+0x3b>
81004e7f:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81004e84:	85 c0                	test   %eax,%eax
81004e86:	74 0b                	je     81004e93 <_close_r+0x3b>
81004e88:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81004e8e:	8b 45 08             	mov    0x8(%ebp),%eax
81004e91:	89 10                	mov    %edx,(%eax)
81004e93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e96:	c9                   	leave  
81004e97:	c3                   	ret    

81004e98 <__errno>:
81004e98:	55                   	push   %ebp
81004e99:	89 e5                	mov    %esp,%ebp
81004e9b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004ea0:	5d                   	pop    %ebp
81004ea1:	c3                   	ret    

81004ea2 <_fclose_r>:
81004ea2:	55                   	push   %ebp
81004ea3:	89 e5                	mov    %esp,%ebp
81004ea5:	53                   	push   %ebx
81004ea6:	83 ec 14             	sub    $0x14,%esp
81004ea9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81004eac:	85 db                	test   %ebx,%ebx
81004eae:	75 0a                	jne    81004eba <_fclose_r+0x18>
81004eb0:	b8 00 00 00 00       	mov    $0x0,%eax
81004eb5:	e9 ea 00 00 00       	jmp    81004fa4 <_fclose_r+0x102>
81004eba:	8b 45 08             	mov    0x8(%ebp),%eax
81004ebd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004ec0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004ec4:	74 18                	je     81004ede <_fclose_r+0x3c>
81004ec6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004ec9:	8b 40 38             	mov    0x38(%eax),%eax
81004ecc:	85 c0                	test   %eax,%eax
81004ece:	75 0e                	jne    81004ede <_fclose_r+0x3c>
81004ed0:	83 ec 0c             	sub    $0xc,%esp
81004ed3:	ff 75 f0             	push   -0x10(%ebp)
81004ed6:	e8 d8 c2 ff ff       	call   810011b3 <__sinit>
81004edb:	83 c4 10             	add    $0x10,%esp
81004ede:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004ee2:	66 85 c0             	test   %ax,%ax
81004ee5:	75 0a                	jne    81004ef1 <_fclose_r+0x4f>
81004ee7:	b8 00 00 00 00       	mov    $0x0,%eax
81004eec:	e9 b3 00 00 00       	jmp    81004fa4 <_fclose_r+0x102>
81004ef1:	83 ec 08             	sub    $0x8,%esp
81004ef4:	53                   	push   %ebx
81004ef5:	ff 75 08             	push   0x8(%ebp)
81004ef8:	e8 8d bb ff ff       	call   81000a8a <__sflush_r>
81004efd:	83 c4 10             	add    $0x10,%esp
81004f00:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004f03:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004f06:	85 c0                	test   %eax,%eax
81004f08:	74 1d                	je     81004f27 <_fclose_r+0x85>
81004f0a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81004f0d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81004f10:	83 ec 08             	sub    $0x8,%esp
81004f13:	52                   	push   %edx
81004f14:	ff 75 08             	push   0x8(%ebp)
81004f17:	ff d0                	call   *%eax
81004f19:	83 c4 10             	add    $0x10,%esp
81004f1c:	85 c0                	test   %eax,%eax
81004f1e:	79 07                	jns    81004f27 <_fclose_r+0x85>
81004f20:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81004f27:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81004f2b:	98                   	cwtl   
81004f2c:	25 80 00 00 00       	and    $0x80,%eax
81004f31:	85 c0                	test   %eax,%eax
81004f33:	74 12                	je     81004f47 <_fclose_r+0xa5>
81004f35:	8b 43 10             	mov    0x10(%ebx),%eax
81004f38:	83 ec 08             	sub    $0x8,%esp
81004f3b:	50                   	push   %eax
81004f3c:	ff 75 08             	push   0x8(%ebp)
81004f3f:	e8 d1 c3 ff ff       	call   81001315 <_free_r>
81004f44:	83 c4 10             	add    $0x10,%esp
81004f47:	8b 43 30             	mov    0x30(%ebx),%eax
81004f4a:	85 c0                	test   %eax,%eax
81004f4c:	74 23                	je     81004f71 <_fclose_r+0xcf>
81004f4e:	8b 53 30             	mov    0x30(%ebx),%edx
81004f51:	8d 43 40             	lea    0x40(%ebx),%eax
81004f54:	39 c2                	cmp    %eax,%edx
81004f56:	74 12                	je     81004f6a <_fclose_r+0xc8>
81004f58:	8b 43 30             	mov    0x30(%ebx),%eax
81004f5b:	83 ec 08             	sub    $0x8,%esp
81004f5e:	50                   	push   %eax
81004f5f:	ff 75 08             	push   0x8(%ebp)
81004f62:	e8 ae c3 ff ff       	call   81001315 <_free_r>
81004f67:	83 c4 10             	add    $0x10,%esp
81004f6a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81004f71:	8b 43 44             	mov    0x44(%ebx),%eax
81004f74:	85 c0                	test   %eax,%eax
81004f76:	74 19                	je     81004f91 <_fclose_r+0xef>
81004f78:	8b 43 44             	mov    0x44(%ebx),%eax
81004f7b:	83 ec 08             	sub    $0x8,%esp
81004f7e:	50                   	push   %eax
81004f7f:	ff 75 08             	push   0x8(%ebp)
81004f82:	e8 8e c3 ff ff       	call   81001315 <_free_r>
81004f87:	83 c4 10             	add    $0x10,%esp
81004f8a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81004f91:	e8 b6 c2 ff ff       	call   8100124c <__sfp_lock_acquire>
81004f96:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81004f9c:	e8 b1 c2 ff ff       	call   81001252 <__sfp_lock_release>
81004fa1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004fa4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004fa7:	c9                   	leave  
81004fa8:	c3                   	ret    

81004fa9 <fclose>:
81004fa9:	55                   	push   %ebp
81004faa:	89 e5                	mov    %esp,%ebp
81004fac:	83 ec 08             	sub    $0x8,%esp
81004faf:	8b 55 08             	mov    0x8(%ebp),%edx
81004fb2:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81004fb7:	83 ec 08             	sub    $0x8,%esp
81004fba:	52                   	push   %edx
81004fbb:	50                   	push   %eax
81004fbc:	e8 e1 fe ff ff       	call   81004ea2 <_fclose_r>
81004fc1:	83 c4 10             	add    $0x10,%esp
81004fc4:	c9                   	leave  
81004fc5:	c3                   	ret    

81004fc6 <_fputc_r>:
81004fc6:	55                   	push   %ebp
81004fc7:	89 e5                	mov    %esp,%ebp
81004fc9:	83 ec 18             	sub    $0x18,%esp
81004fcc:	8b 45 08             	mov    0x8(%ebp),%eax
81004fcf:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004fd2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81004fd6:	74 18                	je     81004ff0 <_fputc_r+0x2a>
81004fd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004fdb:	8b 40 38             	mov    0x38(%eax),%eax
81004fde:	85 c0                	test   %eax,%eax
81004fe0:	75 0e                	jne    81004ff0 <_fputc_r+0x2a>
81004fe2:	83 ec 0c             	sub    $0xc,%esp
81004fe5:	ff 75 f4             	push   -0xc(%ebp)
81004fe8:	e8 c6 c1 ff ff       	call   810011b3 <__sinit>
81004fed:	83 c4 10             	add    $0x10,%esp
81004ff0:	83 ec 04             	sub    $0x4,%esp
81004ff3:	ff 75 10             	push   0x10(%ebp)
81004ff6:	ff 75 0c             	push   0xc(%ebp)
81004ff9:	ff 75 08             	push   0x8(%ebp)
81004ffc:	e8 b2 0c 00 00       	call   81005cb3 <_putc_r>
81005001:	83 c4 10             	add    $0x10,%esp
81005004:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005007:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100500a:	c9                   	leave  
8100500b:	c3                   	ret    

8100500c <fputc>:
8100500c:	55                   	push   %ebp
8100500d:	89 e5                	mov    %esp,%ebp
8100500f:	83 ec 18             	sub    $0x18,%esp
81005012:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005017:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100501a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100501d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005020:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005024:	74 18                	je     8100503e <fputc+0x32>
81005026:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005029:	8b 40 38             	mov    0x38(%eax),%eax
8100502c:	85 c0                	test   %eax,%eax
8100502e:	75 0e                	jne    8100503e <fputc+0x32>
81005030:	83 ec 0c             	sub    $0xc,%esp
81005033:	ff 75 f0             	push   -0x10(%ebp)
81005036:	e8 78 c1 ff ff       	call   810011b3 <__sinit>
8100503b:	83 c4 10             	add    $0x10,%esp
8100503e:	83 ec 04             	sub    $0x4,%esp
81005041:	ff 75 0c             	push   0xc(%ebp)
81005044:	ff 75 08             	push   0x8(%ebp)
81005047:	ff 75 f4             	push   -0xc(%ebp)
8100504a:	e8 64 0c 00 00       	call   81005cb3 <_putc_r>
8100504f:	83 c4 10             	add    $0x10,%esp
81005052:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005055:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005058:	c9                   	leave  
81005059:	c3                   	ret    

8100505a <_fputs_r>:
8100505a:	55                   	push   %ebp
8100505b:	89 e5                	mov    %esp,%ebp
8100505d:	83 ec 28             	sub    $0x28,%esp
81005060:	8b 45 0c             	mov    0xc(%ebp),%eax
81005063:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005066:	83 ec 0c             	sub    $0xc,%esp
81005069:	ff 75 0c             	push   0xc(%ebp)
8100506c:	e8 1f f6 ff ff       	call   81004690 <strlen>
81005071:	83 c4 10             	add    $0x10,%esp
81005074:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005077:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100507a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100507d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81005080:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005083:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8100508a:	8b 45 08             	mov    0x8(%ebp),%eax
8100508d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005090:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005094:	74 18                	je     810050ae <_fputs_r+0x54>
81005096:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005099:	8b 40 38             	mov    0x38(%eax),%eax
8100509c:	85 c0                	test   %eax,%eax
8100509e:	75 0e                	jne    810050ae <_fputs_r+0x54>
810050a0:	83 ec 0c             	sub    $0xc,%esp
810050a3:	ff 75 f4             	push   -0xc(%ebp)
810050a6:	e8 08 c1 ff ff       	call   810011b3 <__sinit>
810050ab:	83 c4 10             	add    $0x10,%esp
810050ae:	8b 45 10             	mov    0x10(%ebp),%eax
810050b1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810050b5:	98                   	cwtl   
810050b6:	25 00 20 00 00       	and    $0x2000,%eax
810050bb:	85 c0                	test   %eax,%eax
810050bd:	75 24                	jne    810050e3 <_fputs_r+0x89>
810050bf:	8b 45 10             	mov    0x10(%ebp),%eax
810050c2:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810050c6:	80 cc 20             	or     $0x20,%ah
810050c9:	89 c2                	mov    %eax,%edx
810050cb:	8b 45 10             	mov    0x10(%ebp),%eax
810050ce:	66 89 50 0c          	mov    %dx,0xc(%eax)
810050d2:	8b 45 10             	mov    0x10(%ebp),%eax
810050d5:	8b 40 64             	mov    0x64(%eax),%eax
810050d8:	80 e4 df             	and    $0xdf,%ah
810050db:	89 c2                	mov    %eax,%edx
810050dd:	8b 45 10             	mov    0x10(%ebp),%eax
810050e0:	89 50 64             	mov    %edx,0x64(%eax)
810050e3:	83 ec 04             	sub    $0x4,%esp
810050e6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
810050e9:	50                   	push   %eax
810050ea:	ff 75 10             	push   0x10(%ebp)
810050ed:	ff 75 08             	push   0x8(%ebp)
810050f0:	e8 df 01 00 00       	call   810052d4 <__sfvwrite_r>
810050f5:	83 c4 10             	add    $0x10,%esp
810050f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810050fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810050fe:	c9                   	leave  
810050ff:	c3                   	ret    

81005100 <fputs>:
81005100:	55                   	push   %ebp
81005101:	89 e5                	mov    %esp,%ebp
81005103:	83 ec 08             	sub    $0x8,%esp
81005106:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100510b:	83 ec 04             	sub    $0x4,%esp
8100510e:	ff 75 0c             	push   0xc(%ebp)
81005111:	ff 75 08             	push   0x8(%ebp)
81005114:	50                   	push   %eax
81005115:	e8 40 ff ff ff       	call   8100505a <_fputs_r>
8100511a:	83 c4 10             	add    $0x10,%esp
8100511d:	c9                   	leave  
8100511e:	c3                   	ret    

8100511f <__sputc_r>:
8100511f:	55                   	push   %ebp
81005120:	89 e5                	mov    %esp,%ebp
81005122:	83 ec 08             	sub    $0x8,%esp
81005125:	8b 45 10             	mov    0x10(%ebp),%eax
81005128:	8b 40 08             	mov    0x8(%eax),%eax
8100512b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100512e:	8b 45 10             	mov    0x10(%ebp),%eax
81005131:	89 50 08             	mov    %edx,0x8(%eax)
81005134:	8b 45 10             	mov    0x10(%ebp),%eax
81005137:	8b 40 08             	mov    0x8(%eax),%eax
8100513a:	85 c0                	test   %eax,%eax
8100513c:	79 17                	jns    81005155 <__sputc_r+0x36>
8100513e:	8b 45 10             	mov    0x10(%ebp),%eax
81005141:	8b 50 08             	mov    0x8(%eax),%edx
81005144:	8b 45 10             	mov    0x10(%ebp),%eax
81005147:	8b 40 18             	mov    0x18(%eax),%eax
8100514a:	39 c2                	cmp    %eax,%edx
8100514c:	7c 21                	jl     8100516f <__sputc_r+0x50>
8100514e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005151:	3c 0a                	cmp    $0xa,%al
81005153:	74 1a                	je     8100516f <__sputc_r+0x50>
81005155:	8b 45 10             	mov    0x10(%ebp),%eax
81005158:	8b 00                	mov    (%eax),%eax
8100515a:	8d 48 01             	lea    0x1(%eax),%ecx
8100515d:	8b 55 10             	mov    0x10(%ebp),%edx
81005160:	89 0a                	mov    %ecx,(%edx)
81005162:	8b 55 0c             	mov    0xc(%ebp),%edx
81005165:	88 10                	mov    %dl,(%eax)
81005167:	0f b6 00             	movzbl (%eax),%eax
8100516a:	0f b6 c0             	movzbl %al,%eax
8100516d:	eb 14                	jmp    81005183 <__sputc_r+0x64>
8100516f:	83 ec 04             	sub    $0x4,%esp
81005172:	ff 75 10             	push   0x10(%ebp)
81005175:	ff 75 0c             	push   0xc(%ebp)
81005178:	ff 75 08             	push   0x8(%ebp)
8100517b:	e8 ef f8 ff ff       	call   81004a6f <__swbuf_r>
81005180:	83 c4 10             	add    $0x10,%esp
81005183:	c9                   	leave  
81005184:	c3                   	ret    

81005185 <__fputwc>:
81005185:	55                   	push   %ebp
81005186:	89 e5                	mov    %esp,%ebp
81005188:	83 ec 18             	sub    $0x18,%esp
8100518b:	e8 9f 07 00 00       	call   8100592f <__locale_mb_cur_max>
81005190:	83 f8 01             	cmp    $0x1,%eax
81005193:	75 1e                	jne    810051b3 <__fputwc+0x2e>
81005195:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005199:	7e 18                	jle    810051b3 <__fputwc+0x2e>
8100519b:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810051a2:	7f 0f                	jg     810051b3 <__fputwc+0x2e>
810051a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810051a7:	88 45 ef             	mov    %al,-0x11(%ebp)
810051aa:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
810051b1:	eb 3c                	jmp    810051ef <__fputwc+0x6a>
810051b3:	8b 45 10             	mov    0x10(%ebp),%eax
810051b6:	83 c0 5c             	add    $0x5c,%eax
810051b9:	50                   	push   %eax
810051ba:	ff 75 0c             	push   0xc(%ebp)
810051bd:	8d 45 ef             	lea    -0x11(%ebp),%eax
810051c0:	50                   	push   %eax
810051c1:	ff 75 08             	push   0x8(%ebp)
810051c4:	e8 36 17 00 00       	call   810068ff <_wcrtomb_r>
810051c9:	83 c4 10             	add    $0x10,%esp
810051cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
810051cf:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810051d3:	75 1a                	jne    810051ef <__fputwc+0x6a>
810051d5:	8b 45 10             	mov    0x10(%ebp),%eax
810051d8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810051dc:	83 c8 40             	or     $0x40,%eax
810051df:	89 c2                	mov    %eax,%edx
810051e1:	8b 45 10             	mov    0x10(%ebp),%eax
810051e4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810051e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810051ed:	eb 44                	jmp    81005233 <__fputwc+0xae>
810051ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810051f6:	eb 30                	jmp    81005228 <__fputwc+0xa3>
810051f8:	8d 55 ef             	lea    -0x11(%ebp),%edx
810051fb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810051fe:	01 d0                	add    %edx,%eax
81005200:	0f b6 00             	movzbl (%eax),%eax
81005203:	0f b6 c0             	movzbl %al,%eax
81005206:	83 ec 04             	sub    $0x4,%esp
81005209:	ff 75 10             	push   0x10(%ebp)
8100520c:	50                   	push   %eax
8100520d:	ff 75 08             	push   0x8(%ebp)
81005210:	e8 0a ff ff ff       	call   8100511f <__sputc_r>
81005215:	83 c4 10             	add    $0x10,%esp
81005218:	83 f8 ff             	cmp    $0xffffffff,%eax
8100521b:	75 07                	jne    81005224 <__fputwc+0x9f>
8100521d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005222:	eb 0f                	jmp    81005233 <__fputwc+0xae>
81005224:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005228:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100522b:	3b 45 f0             	cmp    -0x10(%ebp),%eax
8100522e:	72 c8                	jb     810051f8 <__fputwc+0x73>
81005230:	8b 45 0c             	mov    0xc(%ebp),%eax
81005233:	c9                   	leave  
81005234:	c3                   	ret    

81005235 <_fputwc_r>:
81005235:	55                   	push   %ebp
81005236:	89 e5                	mov    %esp,%ebp
81005238:	83 ec 18             	sub    $0x18,%esp
8100523b:	8b 45 10             	mov    0x10(%ebp),%eax
8100523e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005242:	98                   	cwtl   
81005243:	25 00 20 00 00       	and    $0x2000,%eax
81005248:	85 c0                	test   %eax,%eax
8100524a:	75 24                	jne    81005270 <_fputwc_r+0x3b>
8100524c:	8b 45 10             	mov    0x10(%ebp),%eax
8100524f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005253:	80 cc 20             	or     $0x20,%ah
81005256:	89 c2                	mov    %eax,%edx
81005258:	8b 45 10             	mov    0x10(%ebp),%eax
8100525b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100525f:	8b 45 10             	mov    0x10(%ebp),%eax
81005262:	8b 40 64             	mov    0x64(%eax),%eax
81005265:	80 cc 20             	or     $0x20,%ah
81005268:	89 c2                	mov    %eax,%edx
8100526a:	8b 45 10             	mov    0x10(%ebp),%eax
8100526d:	89 50 64             	mov    %edx,0x64(%eax)
81005270:	83 ec 04             	sub    $0x4,%esp
81005273:	ff 75 10             	push   0x10(%ebp)
81005276:	ff 75 0c             	push   0xc(%ebp)
81005279:	ff 75 08             	push   0x8(%ebp)
8100527c:	e8 04 ff ff ff       	call   81005185 <__fputwc>
81005281:	83 c4 10             	add    $0x10,%esp
81005284:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005287:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100528a:	c9                   	leave  
8100528b:	c3                   	ret    

8100528c <fputwc>:
8100528c:	55                   	push   %ebp
8100528d:	89 e5                	mov    %esp,%ebp
8100528f:	83 ec 18             	sub    $0x18,%esp
81005292:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005297:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100529a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100529d:	89 45 f0             	mov    %eax,-0x10(%ebp)
810052a0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810052a4:	74 18                	je     810052be <fputwc+0x32>
810052a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810052a9:	8b 40 38             	mov    0x38(%eax),%eax
810052ac:	85 c0                	test   %eax,%eax
810052ae:	75 0e                	jne    810052be <fputwc+0x32>
810052b0:	83 ec 0c             	sub    $0xc,%esp
810052b3:	ff 75 f0             	push   -0x10(%ebp)
810052b6:	e8 f8 be ff ff       	call   810011b3 <__sinit>
810052bb:	83 c4 10             	add    $0x10,%esp
810052be:	83 ec 04             	sub    $0x4,%esp
810052c1:	ff 75 0c             	push   0xc(%ebp)
810052c4:	ff 75 08             	push   0x8(%ebp)
810052c7:	ff 75 f4             	push   -0xc(%ebp)
810052ca:	e8 66 ff ff ff       	call   81005235 <_fputwc_r>
810052cf:	83 c4 10             	add    $0x10,%esp
810052d2:	c9                   	leave  
810052d3:	c3                   	ret    

810052d4 <__sfvwrite_r>:
810052d4:	55                   	push   %ebp
810052d5:	89 e5                	mov    %esp,%ebp
810052d7:	57                   	push   %edi
810052d8:	56                   	push   %esi
810052d9:	53                   	push   %ebx
810052da:	83 ec 3c             	sub    $0x3c,%esp
810052dd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810052e0:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810052e7:	8b 45 10             	mov    0x10(%ebp),%eax
810052ea:	8b 78 08             	mov    0x8(%eax),%edi
810052ed:	85 ff                	test   %edi,%edi
810052ef:	75 0a                	jne    810052fb <__sfvwrite_r+0x27>
810052f1:	b8 00 00 00 00       	mov    $0x0,%eax
810052f6:	e9 6f 04 00 00       	jmp    8100576a <__sfvwrite_r+0x496>
810052fb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810052ff:	98                   	cwtl   
81005300:	83 e0 08             	and    $0x8,%eax
81005303:	85 c0                	test   %eax,%eax
81005305:	74 07                	je     8100530e <__sfvwrite_r+0x3a>
81005307:	8b 43 10             	mov    0x10(%ebx),%eax
8100530a:	85 c0                	test   %eax,%eax
8100530c:	75 1d                	jne    8100532b <__sfvwrite_r+0x57>
8100530e:	83 ec 08             	sub    $0x8,%esp
81005311:	53                   	push   %ebx
81005312:	ff 75 08             	push   0x8(%ebp)
81005315:	e8 ce f8 ff ff       	call   81004be8 <__swsetup_r>
8100531a:	83 c4 10             	add    $0x10,%esp
8100531d:	85 c0                	test   %eax,%eax
8100531f:	74 0a                	je     8100532b <__sfvwrite_r+0x57>
81005321:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81005326:	e9 3f 04 00 00       	jmp    8100576a <__sfvwrite_r+0x496>
8100532b:	8b 45 10             	mov    0x10(%ebp),%eax
8100532e:	8b 00                	mov    (%eax),%eax
81005330:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005333:	bf 00 00 00 00       	mov    $0x0,%edi
81005338:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100533c:	98                   	cwtl   
8100533d:	83 e0 02             	and    $0x2,%eax
81005340:	85 c0                	test   %eax,%eax
81005342:	74 68                	je     810053ac <__sfvwrite_r+0xd8>
81005344:	eb 11                	jmp    81005357 <__sfvwrite_r+0x83>
81005346:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005349:	8b 08                	mov    (%eax),%ecx
8100534b:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100534e:	8b 78 04             	mov    0x4(%eax),%edi
81005351:	83 c0 08             	add    $0x8,%eax
81005354:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005357:	85 ff                	test   %edi,%edi
81005359:	74 eb                	je     81005346 <__sfvwrite_r+0x72>
8100535b:	8b 4b 24             	mov    0x24(%ebx),%ecx
8100535e:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81005363:	39 c7                	cmp    %eax,%edi
81005365:	0f 46 c7             	cmovbe %edi,%eax
81005368:	89 c2                	mov    %eax,%edx
8100536a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100536d:	52                   	push   %edx
8100536e:	ff 75 c4             	push   -0x3c(%ebp)
81005371:	50                   	push   %eax
81005372:	ff 75 08             	push   0x8(%ebp)
81005375:	ff d1                	call   *%ecx
81005377:	83 c4 10             	add    $0x10,%esp
8100537a:	89 c6                	mov    %eax,%esi
8100537c:	85 f6                	test   %esi,%esi
8100537e:	0f 8e cf 03 00 00    	jle    81005753 <__sfvwrite_r+0x47f>
81005384:	89 f0                	mov    %esi,%eax
81005386:	01 45 c4             	add    %eax,-0x3c(%ebp)
81005389:	89 f0                	mov    %esi,%eax
8100538b:	29 c7                	sub    %eax,%edi
8100538d:	8b 45 10             	mov    0x10(%ebp),%eax
81005390:	8b 40 08             	mov    0x8(%eax),%eax
81005393:	89 f2                	mov    %esi,%edx
81005395:	29 d0                	sub    %edx,%eax
81005397:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100539a:	89 41 08             	mov    %eax,0x8(%ecx)
8100539d:	8b 45 10             	mov    0x10(%ebp),%eax
810053a0:	8b 40 08             	mov    0x8(%eax),%eax
810053a3:	85 c0                	test   %eax,%eax
810053a5:	75 b0                	jne    81005357 <__sfvwrite_r+0x83>
810053a7:	e9 a0 03 00 00       	jmp    8100574c <__sfvwrite_r+0x478>
810053ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053b0:	98                   	cwtl   
810053b1:	83 e0 01             	and    $0x1,%eax
810053b4:	85 c0                	test   %eax,%eax
810053b6:	0f 85 44 02 00 00    	jne    81005600 <__sfvwrite_r+0x32c>
810053bc:	eb 11                	jmp    810053cf <__sfvwrite_r+0xfb>
810053be:	8b 45 c0             	mov    -0x40(%ebp),%eax
810053c1:	8b 08                	mov    (%eax),%ecx
810053c3:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810053c6:	8b 78 04             	mov    0x4(%eax),%edi
810053c9:	83 c0 08             	add    $0x8,%eax
810053cc:	89 45 c0             	mov    %eax,-0x40(%ebp)
810053cf:	85 ff                	test   %edi,%edi
810053d1:	74 eb                	je     810053be <__sfvwrite_r+0xea>
810053d3:	8b 73 08             	mov    0x8(%ebx),%esi
810053d6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053da:	98                   	cwtl   
810053db:	25 00 02 00 00       	and    $0x200,%eax
810053e0:	85 c0                	test   %eax,%eax
810053e2:	0f 84 4f 01 00 00    	je     81005537 <__sfvwrite_r+0x263>
810053e8:	89 f0                	mov    %esi,%eax
810053ea:	39 c7                	cmp    %eax,%edi
810053ec:	0f 82 12 01 00 00    	jb     81005504 <__sfvwrite_r+0x230>
810053f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810053f6:	98                   	cwtl   
810053f7:	25 80 04 00 00       	and    $0x480,%eax
810053fc:	85 c0                	test   %eax,%eax
810053fe:	0f 84 00 01 00 00    	je     81005504 <__sfvwrite_r+0x230>
81005404:	8b 03                	mov    (%ebx),%eax
81005406:	8b 53 10             	mov    0x10(%ebx),%edx
81005409:	29 d0                	sub    %edx,%eax
8100540b:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100540e:	8b 53 14             	mov    0x14(%ebx),%edx
81005411:	89 d0                	mov    %edx,%eax
81005413:	01 c0                	add    %eax,%eax
81005415:	01 d0                	add    %edx,%eax
81005417:	89 c2                	mov    %eax,%edx
81005419:	c1 ea 1f             	shr    $0x1f,%edx
8100541c:	01 d0                	add    %edx,%eax
8100541e:	d1 f8                	sar    %eax
81005420:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005423:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005426:	01 f8                	add    %edi,%eax
81005428:	8d 50 01             	lea    0x1(%eax),%edx
8100542b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100542e:	39 c2                	cmp    %eax,%edx
81005430:	76 0b                	jbe    8100543d <__sfvwrite_r+0x169>
81005432:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005435:	01 f8                	add    %edi,%eax
81005437:	83 c0 01             	add    $0x1,%eax
8100543a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100543d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005441:	98                   	cwtl   
81005442:	25 00 04 00 00       	and    $0x400,%eax
81005447:	85 c0                	test   %eax,%eax
81005449:	74 4f                	je     8100549a <__sfvwrite_r+0x1c6>
8100544b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100544e:	83 ec 08             	sub    $0x8,%esp
81005451:	50                   	push   %eax
81005452:	ff 75 08             	push   0x8(%ebp)
81005455:	e8 6b d6 ff ff       	call   81002ac5 <_malloc_r>
8100545a:	83 c4 10             	add    $0x10,%esp
8100545d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005460:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81005464:	75 0e                	jne    81005474 <__sfvwrite_r+0x1a0>
81005466:	8b 45 08             	mov    0x8(%ebp),%eax
81005469:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100546f:	e9 e6 02 00 00       	jmp    8100575a <__sfvwrite_r+0x486>
81005474:	8b 55 d0             	mov    -0x30(%ebp),%edx
81005477:	8b 43 10             	mov    0x10(%ebx),%eax
8100547a:	83 ec 04             	sub    $0x4,%esp
8100547d:	52                   	push   %edx
8100547e:	50                   	push   %eax
8100547f:	ff 75 dc             	push   -0x24(%ebp)
81005482:	e8 51 df ff ff       	call   810033d8 <memcpy>
81005487:	83 c4 10             	add    $0x10,%esp
8100548a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100548e:	66 25 7f fb          	and    $0xfb7f,%ax
81005492:	0c 80                	or     $0x80,%al
81005494:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005498:	eb 49                	jmp    810054e3 <__sfvwrite_r+0x20f>
8100549a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100549d:	8b 43 10             	mov    0x10(%ebx),%eax
810054a0:	83 ec 04             	sub    $0x4,%esp
810054a3:	52                   	push   %edx
810054a4:	50                   	push   %eax
810054a5:	ff 75 08             	push   0x8(%ebp)
810054a8:	e8 ea 08 00 00       	call   81005d97 <_realloc_r>
810054ad:	83 c4 10             	add    $0x10,%esp
810054b0:	89 45 dc             	mov    %eax,-0x24(%ebp)
810054b3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810054b7:	75 2a                	jne    810054e3 <__sfvwrite_r+0x20f>
810054b9:	8b 43 10             	mov    0x10(%ebx),%eax
810054bc:	83 ec 08             	sub    $0x8,%esp
810054bf:	50                   	push   %eax
810054c0:	ff 75 08             	push   0x8(%ebp)
810054c3:	e8 4d be ff ff       	call   81001315 <_free_r>
810054c8:	83 c4 10             	add    $0x10,%esp
810054cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810054cf:	24 7f                	and    $0x7f,%al
810054d1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810054d5:	8b 45 08             	mov    0x8(%ebp),%eax
810054d8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810054de:	e9 77 02 00 00       	jmp    8100575a <__sfvwrite_r+0x486>
810054e3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810054e6:	89 43 10             	mov    %eax,0x10(%ebx)
810054e9:	8b 55 d0             	mov    -0x30(%ebp),%edx
810054ec:	8b 45 dc             	mov    -0x24(%ebp),%eax
810054ef:	01 d0                	add    %edx,%eax
810054f1:	89 03                	mov    %eax,(%ebx)
810054f3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810054f6:	89 43 14             	mov    %eax,0x14(%ebx)
810054f9:	89 fe                	mov    %edi,%esi
810054fb:	8b 45 d8             	mov    -0x28(%ebp),%eax
810054fe:	2b 45 d0             	sub    -0x30(%ebp),%eax
81005501:	89 43 08             	mov    %eax,0x8(%ebx)
81005504:	89 f0                	mov    %esi,%eax
81005506:	39 c7                	cmp    %eax,%edi
81005508:	73 02                	jae    8100550c <__sfvwrite_r+0x238>
8100550a:	89 fe                	mov    %edi,%esi
8100550c:	89 f2                	mov    %esi,%edx
8100550e:	8b 03                	mov    (%ebx),%eax
81005510:	83 ec 04             	sub    $0x4,%esp
81005513:	52                   	push   %edx
81005514:	ff 75 c4             	push   -0x3c(%ebp)
81005517:	50                   	push   %eax
81005518:	e8 a3 06 00 00       	call   81005bc0 <memmove>
8100551d:	83 c4 10             	add    $0x10,%esp
81005520:	8b 43 08             	mov    0x8(%ebx),%eax
81005523:	29 f0                	sub    %esi,%eax
81005525:	89 43 08             	mov    %eax,0x8(%ebx)
81005528:	8b 03                	mov    (%ebx),%eax
8100552a:	89 f2                	mov    %esi,%edx
8100552c:	01 d0                	add    %edx,%eax
8100552e:	89 03                	mov    %eax,(%ebx)
81005530:	89 fe                	mov    %edi,%esi
81005532:	e9 9d 00 00 00       	jmp    810055d4 <__sfvwrite_r+0x300>
81005537:	8b 13                	mov    (%ebx),%edx
81005539:	8b 43 10             	mov    0x10(%ebx),%eax
8100553c:	39 c2                	cmp    %eax,%edx
8100553e:	77 07                	ja     81005547 <__sfvwrite_r+0x273>
81005540:	8b 43 14             	mov    0x14(%ebx),%eax
81005543:	39 c7                	cmp    %eax,%edi
81005545:	73 4c                	jae    81005593 <__sfvwrite_r+0x2bf>
81005547:	89 f0                	mov    %esi,%eax
81005549:	39 c7                	cmp    %eax,%edi
8100554b:	0f 46 c7             	cmovbe %edi,%eax
8100554e:	89 c6                	mov    %eax,%esi
81005550:	89 f2                	mov    %esi,%edx
81005552:	8b 03                	mov    (%ebx),%eax
81005554:	83 ec 04             	sub    $0x4,%esp
81005557:	52                   	push   %edx
81005558:	ff 75 c4             	push   -0x3c(%ebp)
8100555b:	50                   	push   %eax
8100555c:	e8 5f 06 00 00       	call   81005bc0 <memmove>
81005561:	83 c4 10             	add    $0x10,%esp
81005564:	8b 43 08             	mov    0x8(%ebx),%eax
81005567:	29 f0                	sub    %esi,%eax
81005569:	89 43 08             	mov    %eax,0x8(%ebx)
8100556c:	8b 03                	mov    (%ebx),%eax
8100556e:	89 f2                	mov    %esi,%edx
81005570:	01 d0                	add    %edx,%eax
81005572:	89 03                	mov    %eax,(%ebx)
81005574:	8b 43 08             	mov    0x8(%ebx),%eax
81005577:	85 c0                	test   %eax,%eax
81005579:	75 58                	jne    810055d3 <__sfvwrite_r+0x2ff>
8100557b:	83 ec 08             	sub    $0x8,%esp
8100557e:	53                   	push   %ebx
8100557f:	ff 75 08             	push   0x8(%ebp)
81005582:	e8 29 b7 ff ff       	call   81000cb0 <_fflush_r>
81005587:	83 c4 10             	add    $0x10,%esp
8100558a:	85 c0                	test   %eax,%eax
8100558c:	74 45                	je     810055d3 <__sfvwrite_r+0x2ff>
8100558e:	e9 c7 01 00 00       	jmp    8100575a <__sfvwrite_r+0x486>
81005593:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81005599:	77 04                	ja     8100559f <__sfvwrite_r+0x2cb>
8100559b:	89 f8                	mov    %edi,%eax
8100559d:	eb 05                	jmp    810055a4 <__sfvwrite_r+0x2d0>
8100559f:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
810055a4:	8b 4b 14             	mov    0x14(%ebx),%ecx
810055a7:	99                   	cltd   
810055a8:	f7 f9                	idiv   %ecx
810055aa:	89 c2                	mov    %eax,%edx
810055ac:	8b 43 14             	mov    0x14(%ebx),%eax
810055af:	89 d6                	mov    %edx,%esi
810055b1:	0f af f0             	imul   %eax,%esi
810055b4:	8b 53 24             	mov    0x24(%ebx),%edx
810055b7:	8b 43 1c             	mov    0x1c(%ebx),%eax
810055ba:	56                   	push   %esi
810055bb:	ff 75 c4             	push   -0x3c(%ebp)
810055be:	50                   	push   %eax
810055bf:	ff 75 08             	push   0x8(%ebp)
810055c2:	ff d2                	call   *%edx
810055c4:	83 c4 10             	add    $0x10,%esp
810055c7:	89 c6                	mov    %eax,%esi
810055c9:	85 f6                	test   %esi,%esi
810055cb:	0f 8e 85 01 00 00    	jle    81005756 <__sfvwrite_r+0x482>
810055d1:	eb 01                	jmp    810055d4 <__sfvwrite_r+0x300>
810055d3:	90                   	nop
810055d4:	89 f0                	mov    %esi,%eax
810055d6:	01 45 c4             	add    %eax,-0x3c(%ebp)
810055d9:	89 f0                	mov    %esi,%eax
810055db:	29 c7                	sub    %eax,%edi
810055dd:	8b 45 10             	mov    0x10(%ebp),%eax
810055e0:	8b 40 08             	mov    0x8(%eax),%eax
810055e3:	89 f2                	mov    %esi,%edx
810055e5:	29 d0                	sub    %edx,%eax
810055e7:	8b 4d 10             	mov    0x10(%ebp),%ecx
810055ea:	89 41 08             	mov    %eax,0x8(%ecx)
810055ed:	8b 45 10             	mov    0x10(%ebp),%eax
810055f0:	8b 40 08             	mov    0x8(%eax),%eax
810055f3:	85 c0                	test   %eax,%eax
810055f5:	0f 85 d4 fd ff ff    	jne    810053cf <__sfvwrite_r+0xfb>
810055fb:	e9 4c 01 00 00       	jmp    8100574c <__sfvwrite_r+0x478>
81005600:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005607:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100560e:	eb 18                	jmp    81005628 <__sfvwrite_r+0x354>
81005610:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005617:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100561a:	8b 08                	mov    (%eax),%ecx
8100561c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
8100561f:	8b 78 04             	mov    0x4(%eax),%edi
81005622:	83 c0 08             	add    $0x8,%eax
81005625:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005628:	85 ff                	test   %edi,%edi
8100562a:	74 e4                	je     81005610 <__sfvwrite_r+0x33c>
8100562c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81005630:	75 32                	jne    81005664 <__sfvwrite_r+0x390>
81005632:	83 ec 04             	sub    $0x4,%esp
81005635:	57                   	push   %edi
81005636:	6a 0a                	push   $0xa
81005638:	8b 75 c4             	mov    -0x3c(%ebp),%esi
8100563b:	56                   	push   %esi
8100563c:	e8 af dc ff ff       	call   810032f0 <memchr>
81005641:	83 c4 10             	add    $0x10,%esp
81005644:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005647:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
8100564b:	74 0a                	je     81005657 <__sfvwrite_r+0x383>
8100564d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005650:	83 c0 01             	add    $0x1,%eax
81005653:	29 f0                	sub    %esi,%eax
81005655:	eb 03                	jmp    8100565a <__sfvwrite_r+0x386>
81005657:	8d 47 01             	lea    0x1(%edi),%eax
8100565a:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100565d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81005664:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005667:	39 c7                	cmp    %eax,%edi
81005669:	0f 46 c7             	cmovbe %edi,%eax
8100566c:	89 c1                	mov    %eax,%ecx
8100566e:	8b 53 08             	mov    0x8(%ebx),%edx
81005671:	8b 43 14             	mov    0x14(%ebx),%eax
81005674:	8d 34 02             	lea    (%edx,%eax,1),%esi
81005677:	8b 13                	mov    (%ebx),%edx
81005679:	8b 43 10             	mov    0x10(%ebx),%eax
8100567c:	39 c2                	cmp    %eax,%edx
8100567e:	76 38                	jbe    810056b8 <__sfvwrite_r+0x3e4>
81005680:	39 f1                	cmp    %esi,%ecx
81005682:	7e 34                	jle    810056b8 <__sfvwrite_r+0x3e4>
81005684:	89 f2                	mov    %esi,%edx
81005686:	8b 03                	mov    (%ebx),%eax
81005688:	83 ec 04             	sub    $0x4,%esp
8100568b:	52                   	push   %edx
8100568c:	ff 75 c4             	push   -0x3c(%ebp)
8100568f:	50                   	push   %eax
81005690:	e8 2b 05 00 00       	call   81005bc0 <memmove>
81005695:	83 c4 10             	add    $0x10,%esp
81005698:	8b 03                	mov    (%ebx),%eax
8100569a:	89 f2                	mov    %esi,%edx
8100569c:	01 d0                	add    %edx,%eax
8100569e:	89 03                	mov    %eax,(%ebx)
810056a0:	83 ec 08             	sub    $0x8,%esp
810056a3:	53                   	push   %ebx
810056a4:	ff 75 08             	push   0x8(%ebp)
810056a7:	e8 04 b6 ff ff       	call   81000cb0 <_fflush_r>
810056ac:	83 c4 10             	add    $0x10,%esp
810056af:	85 c0                	test   %eax,%eax
810056b1:	74 4f                	je     81005702 <__sfvwrite_r+0x42e>
810056b3:	e9 a2 00 00 00       	jmp    8100575a <__sfvwrite_r+0x486>
810056b8:	8b 73 14             	mov    0x14(%ebx),%esi
810056bb:	89 c8                	mov    %ecx,%eax
810056bd:	39 c6                	cmp    %eax,%esi
810056bf:	7f 1b                	jg     810056dc <__sfvwrite_r+0x408>
810056c1:	8b 53 24             	mov    0x24(%ebx),%edx
810056c4:	8b 43 1c             	mov    0x1c(%ebx),%eax
810056c7:	56                   	push   %esi
810056c8:	ff 75 c4             	push   -0x3c(%ebp)
810056cb:	50                   	push   %eax
810056cc:	ff 75 08             	push   0x8(%ebp)
810056cf:	ff d2                	call   *%edx
810056d1:	83 c4 10             	add    $0x10,%esp
810056d4:	89 c6                	mov    %eax,%esi
810056d6:	85 f6                	test   %esi,%esi
810056d8:	7f 28                	jg     81005702 <__sfvwrite_r+0x42e>
810056da:	eb 7e                	jmp    8100575a <__sfvwrite_r+0x486>
810056dc:	89 ce                	mov    %ecx,%esi
810056de:	89 f2                	mov    %esi,%edx
810056e0:	8b 03                	mov    (%ebx),%eax
810056e2:	83 ec 04             	sub    $0x4,%esp
810056e5:	52                   	push   %edx
810056e6:	ff 75 c4             	push   -0x3c(%ebp)
810056e9:	50                   	push   %eax
810056ea:	e8 d1 04 00 00       	call   81005bc0 <memmove>
810056ef:	83 c4 10             	add    $0x10,%esp
810056f2:	8b 43 08             	mov    0x8(%ebx),%eax
810056f5:	29 f0                	sub    %esi,%eax
810056f7:	89 43 08             	mov    %eax,0x8(%ebx)
810056fa:	8b 03                	mov    (%ebx),%eax
810056fc:	89 f2                	mov    %esi,%edx
810056fe:	01 d0                	add    %edx,%eax
81005700:	89 03                	mov    %eax,(%ebx)
81005702:	29 75 e0             	sub    %esi,-0x20(%ebp)
81005705:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005709:	75 1a                	jne    81005725 <__sfvwrite_r+0x451>
8100570b:	83 ec 08             	sub    $0x8,%esp
8100570e:	53                   	push   %ebx
8100570f:	ff 75 08             	push   0x8(%ebp)
81005712:	e8 99 b5 ff ff       	call   81000cb0 <_fflush_r>
81005717:	83 c4 10             	add    $0x10,%esp
8100571a:	85 c0                	test   %eax,%eax
8100571c:	75 3b                	jne    81005759 <__sfvwrite_r+0x485>
8100571e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81005725:	89 f0                	mov    %esi,%eax
81005727:	01 45 c4             	add    %eax,-0x3c(%ebp)
8100572a:	89 f0                	mov    %esi,%eax
8100572c:	29 c7                	sub    %eax,%edi
8100572e:	8b 45 10             	mov    0x10(%ebp),%eax
81005731:	8b 40 08             	mov    0x8(%eax),%eax
81005734:	89 f2                	mov    %esi,%edx
81005736:	29 d0                	sub    %edx,%eax
81005738:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100573b:	89 41 08             	mov    %eax,0x8(%ecx)
8100573e:	8b 45 10             	mov    0x10(%ebp),%eax
81005741:	8b 40 08             	mov    0x8(%eax),%eax
81005744:	85 c0                	test   %eax,%eax
81005746:	0f 85 dc fe ff ff    	jne    81005628 <__sfvwrite_r+0x354>
8100574c:	b8 00 00 00 00       	mov    $0x0,%eax
81005751:	eb 17                	jmp    8100576a <__sfvwrite_r+0x496>
81005753:	90                   	nop
81005754:	eb 04                	jmp    8100575a <__sfvwrite_r+0x486>
81005756:	90                   	nop
81005757:	eb 01                	jmp    8100575a <__sfvwrite_r+0x486>
81005759:	90                   	nop
8100575a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100575e:	83 c8 40             	or     $0x40,%eax
81005761:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005765:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100576a:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100576d:	5b                   	pop    %ebx
8100576e:	5e                   	pop    %esi
8100576f:	5f                   	pop    %edi
81005770:	5d                   	pop    %ebp
81005771:	c3                   	ret    

81005772 <_findenv>:
81005772:	55                   	push   %ebp
81005773:	89 e5                	mov    %esp,%ebp
81005775:	83 ec 08             	sub    $0x8,%esp
81005778:	8b 55 08             	mov    0x8(%ebp),%edx
8100577b:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005780:	83 ec 04             	sub    $0x4,%esp
81005783:	ff 75 0c             	push   0xc(%ebp)
81005786:	52                   	push   %edx
81005787:	50                   	push   %eax
81005788:	e8 25 00 00 00       	call   810057b2 <_findenv_r>
8100578d:	83 c4 10             	add    $0x10,%esp
81005790:	c9                   	leave  
81005791:	c3                   	ret    

81005792 <getenv>:
81005792:	55                   	push   %ebp
81005793:	89 e5                	mov    %esp,%ebp
81005795:	83 ec 18             	sub    $0x18,%esp
81005798:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100579d:	83 ec 04             	sub    $0x4,%esp
810057a0:	8d 55 f4             	lea    -0xc(%ebp),%edx
810057a3:	52                   	push   %edx
810057a4:	ff 75 08             	push   0x8(%ebp)
810057a7:	50                   	push   %eax
810057a8:	e8 05 00 00 00       	call   810057b2 <_findenv_r>
810057ad:	83 c4 10             	add    $0x10,%esp
810057b0:	c9                   	leave  
810057b1:	c3                   	ret    

810057b2 <_findenv_r>:
810057b2:	55                   	push   %ebp
810057b3:	89 e5                	mov    %esp,%ebp
810057b5:	57                   	push   %edi
810057b6:	56                   	push   %esi
810057b7:	53                   	push   %ebx
810057b8:	83 ec 1c             	sub    $0x1c,%esp
810057bb:	8b 7d 0c             	mov    0xc(%ebp),%edi
810057be:	83 ec 0c             	sub    $0xc,%esp
810057c1:	ff 75 08             	push   0x8(%ebp)
810057c4:	e8 a7 12 00 00       	call   81006a70 <__env_lock>
810057c9:	83 c4 10             	add    $0x10,%esp
810057cc:	a1 d0 79 00 81       	mov    0x810079d0,%eax
810057d1:	8b 00                	mov    (%eax),%eax
810057d3:	85 c0                	test   %eax,%eax
810057d5:	75 18                	jne    810057ef <_findenv_r+0x3d>
810057d7:	83 ec 0c             	sub    $0xc,%esp
810057da:	ff 75 08             	push   0x8(%ebp)
810057dd:	e8 94 12 00 00       	call   81006a76 <__env_unlock>
810057e2:	83 c4 10             	add    $0x10,%esp
810057e5:	b8 00 00 00 00       	mov    $0x0,%eax
810057ea:	e9 a8 00 00 00       	jmp    81005897 <_findenv_r+0xe5>
810057ef:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810057f2:	eb 04                	jmp    810057f8 <_findenv_r+0x46>
810057f4:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810057f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810057fb:	0f b6 00             	movzbl (%eax),%eax
810057fe:	84 c0                	test   %al,%al
81005800:	74 0a                	je     8100580c <_findenv_r+0x5a>
81005802:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005805:	0f b6 00             	movzbl (%eax),%eax
81005808:	3c 3d                	cmp    $0x3d,%al
8100580a:	75 e8                	jne    810057f4 <_findenv_r+0x42>
8100580c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100580f:	0f b6 00             	movzbl (%eax),%eax
81005812:	3c 3d                	cmp    $0x3d,%al
81005814:	74 6e                	je     81005884 <_findenv_r+0xd2>
81005816:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005819:	29 f8                	sub    %edi,%eax
8100581b:	89 c6                	mov    %eax,%esi
8100581d:	a1 d0 79 00 81       	mov    0x810079d0,%eax
81005822:	8b 18                	mov    (%eax),%ebx
81005824:	eb 58                	jmp    8100587e <_findenv_r+0xcc>
81005826:	89 f2                	mov    %esi,%edx
81005828:	8b 03                	mov    (%ebx),%eax
8100582a:	83 ec 04             	sub    $0x4,%esp
8100582d:	52                   	push   %edx
8100582e:	57                   	push   %edi
8100582f:	50                   	push   %eax
81005830:	e8 d3 0f 00 00       	call   81006808 <strncmp>
81005835:	83 c4 10             	add    $0x10,%esp
81005838:	85 c0                	test   %eax,%eax
8100583a:	75 3f                	jne    8100587b <_findenv_r+0xc9>
8100583c:	8b 03                	mov    (%ebx),%eax
8100583e:	89 f2                	mov    %esi,%edx
81005840:	01 d0                	add    %edx,%eax
81005842:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005845:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005848:	0f b6 00             	movzbl (%eax),%eax
8100584b:	3c 3d                	cmp    $0x3d,%al
8100584d:	75 2c                	jne    8100587b <_findenv_r+0xc9>
8100584f:	a1 d0 79 00 81       	mov    0x810079d0,%eax
81005854:	8b 10                	mov    (%eax),%edx
81005856:	89 d8                	mov    %ebx,%eax
81005858:	29 d0                	sub    %edx,%eax
8100585a:	c1 f8 02             	sar    $0x2,%eax
8100585d:	89 c2                	mov    %eax,%edx
8100585f:	8b 45 10             	mov    0x10(%ebp),%eax
81005862:	89 10                	mov    %edx,(%eax)
81005864:	83 ec 0c             	sub    $0xc,%esp
81005867:	ff 75 08             	push   0x8(%ebp)
8100586a:	e8 07 12 00 00       	call   81006a76 <__env_unlock>
8100586f:	83 c4 10             	add    $0x10,%esp
81005872:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81005876:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005879:	eb 1c                	jmp    81005897 <_findenv_r+0xe5>
8100587b:	83 c3 04             	add    $0x4,%ebx
8100587e:	8b 03                	mov    (%ebx),%eax
81005880:	85 c0                	test   %eax,%eax
81005882:	75 a2                	jne    81005826 <_findenv_r+0x74>
81005884:	83 ec 0c             	sub    $0xc,%esp
81005887:	ff 75 08             	push   0x8(%ebp)
8100588a:	e8 e7 11 00 00       	call   81006a76 <__env_unlock>
8100588f:	83 c4 10             	add    $0x10,%esp
81005892:	b8 00 00 00 00       	mov    $0x0,%eax
81005897:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100589a:	5b                   	pop    %ebx
8100589b:	5e                   	pop    %esi
8100589c:	5f                   	pop    %edi
8100589d:	5d                   	pop    %ebp
8100589e:	c3                   	ret    

8100589f <_getenv_r>:
8100589f:	55                   	push   %ebp
810058a0:	89 e5                	mov    %esp,%ebp
810058a2:	83 ec 18             	sub    $0x18,%esp
810058a5:	83 ec 04             	sub    $0x4,%esp
810058a8:	8d 45 f4             	lea    -0xc(%ebp),%eax
810058ab:	50                   	push   %eax
810058ac:	ff 75 0c             	push   0xc(%ebp)
810058af:	ff 75 08             	push   0x8(%ebp)
810058b2:	e8 fb fe ff ff       	call   810057b2 <_findenv_r>
810058b7:	83 c4 10             	add    $0x10,%esp
810058ba:	c9                   	leave  
810058bb:	c3                   	ret    

810058bc <__get_global_locale>:
810058bc:	55                   	push   %ebp
810058bd:	89 e5                	mov    %esp,%ebp
810058bf:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810058c4:	5d                   	pop    %ebp
810058c5:	c3                   	ret    

810058c6 <__get_current_locale>:
810058c6:	55                   	push   %ebp
810058c7:	89 e5                	mov    %esp,%ebp
810058c9:	e8 ee ff ff ff       	call   810058bc <__get_global_locale>
810058ce:	5d                   	pop    %ebp
810058cf:	c3                   	ret    

810058d0 <_setlocale_r>:
810058d0:	55                   	push   %ebp
810058d1:	89 e5                	mov    %esp,%ebp
810058d3:	83 ec 08             	sub    $0x8,%esp
810058d6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810058da:	74 4c                	je     81005928 <_setlocale_r+0x58>
810058dc:	83 ec 08             	sub    $0x8,%esp
810058df:	68 44 71 00 81       	push   $0x81007144
810058e4:	ff 75 10             	push   0x10(%ebp)
810058e7:	e8 f0 ec ff ff       	call   810045dc <strcmp>
810058ec:	83 c4 10             	add    $0x10,%esp
810058ef:	85 c0                	test   %eax,%eax
810058f1:	74 35                	je     81005928 <_setlocale_r+0x58>
810058f3:	83 ec 08             	sub    $0x8,%esp
810058f6:	68 4a 71 00 81       	push   $0x8100714a
810058fb:	ff 75 10             	push   0x10(%ebp)
810058fe:	e8 d9 ec ff ff       	call   810045dc <strcmp>
81005903:	83 c4 10             	add    $0x10,%esp
81005906:	85 c0                	test   %eax,%eax
81005908:	74 1e                	je     81005928 <_setlocale_r+0x58>
8100590a:	83 ec 08             	sub    $0x8,%esp
8100590d:	68 43 71 00 81       	push   $0x81007143
81005912:	ff 75 10             	push   0x10(%ebp)
81005915:	e8 c2 ec ff ff       	call   810045dc <strcmp>
8100591a:	83 c4 10             	add    $0x10,%esp
8100591d:	85 c0                	test   %eax,%eax
8100591f:	74 07                	je     81005928 <_setlocale_r+0x58>
81005921:	b8 00 00 00 00       	mov    $0x0,%eax
81005926:	eb 05                	jmp    8100592d <_setlocale_r+0x5d>
81005928:	b8 4a 71 00 81       	mov    $0x8100714a,%eax
8100592d:	c9                   	leave  
8100592e:	c3                   	ret    

8100592f <__locale_mb_cur_max>:
8100592f:	55                   	push   %ebp
81005930:	89 e5                	mov    %esp,%ebp
81005932:	e8 8f ff ff ff       	call   810058c6 <__get_current_locale>
81005937:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8100593e:	0f be c0             	movsbl %al,%eax
81005941:	5d                   	pop    %ebp
81005942:	c3                   	ret    

81005943 <setlocale>:
81005943:	55                   	push   %ebp
81005944:	89 e5                	mov    %esp,%ebp
81005946:	83 ec 08             	sub    $0x8,%esp
81005949:	a1 a4 75 00 81       	mov    0x810075a4,%eax
8100594e:	83 ec 04             	sub    $0x4,%esp
81005951:	ff 75 0c             	push   0xc(%ebp)
81005954:	ff 75 08             	push   0x8(%ebp)
81005957:	50                   	push   %eax
81005958:	e8 73 ff ff ff       	call   810058d0 <_setlocale_r>
8100595d:	83 c4 10             	add    $0x10,%esp
81005960:	c9                   	leave  
81005961:	c3                   	ret    

81005962 <_lseek_r>:
81005962:	55                   	push   %ebp
81005963:	89 e5                	mov    %esp,%ebp
81005965:	83 ec 18             	sub    $0x18,%esp
81005968:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
8100596f:	00 00 00 
81005972:	83 ec 04             	sub    $0x4,%esp
81005975:	ff 75 14             	push   0x14(%ebp)
81005978:	ff 75 10             	push   0x10(%ebp)
8100597b:	ff 75 0c             	push   0xc(%ebp)
8100597e:	e8 b8 ae ff ff       	call   8100083b <lseek>
81005983:	83 c4 10             	add    $0x10,%esp
81005986:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005989:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100598d:	75 14                	jne    810059a3 <_lseek_r+0x41>
8100598f:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81005994:	85 c0                	test   %eax,%eax
81005996:	74 0b                	je     810059a3 <_lseek_r+0x41>
81005998:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
8100599e:	8b 45 08             	mov    0x8(%ebp),%eax
810059a1:	89 10                	mov    %edx,(%eax)
810059a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810059a6:	c9                   	leave  
810059a7:	c3                   	ret    

810059a8 <__smakebuf_r>:
810059a8:	55                   	push   %ebp
810059a9:	89 e5                	mov    %esp,%ebp
810059ab:	56                   	push   %esi
810059ac:	53                   	push   %ebx
810059ad:	83 ec 10             	sub    $0x10,%esp
810059b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810059b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810059b7:	98                   	cwtl   
810059b8:	83 e0 02             	and    $0x2,%eax
810059bb:	85 c0                	test   %eax,%eax
810059bd:	74 16                	je     810059d5 <__smakebuf_r+0x2d>
810059bf:	8d 43 43             	lea    0x43(%ebx),%eax
810059c2:	89 03                	mov    %eax,(%ebx)
810059c4:	8b 03                	mov    (%ebx),%eax
810059c6:	89 43 10             	mov    %eax,0x10(%ebx)
810059c9:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810059d0:	e9 b9 00 00 00       	jmp    81005a8e <__smakebuf_r+0xe6>
810059d5:	8d 45 ec             	lea    -0x14(%ebp),%eax
810059d8:	50                   	push   %eax
810059d9:	8d 45 f0             	lea    -0x10(%ebp),%eax
810059dc:	50                   	push   %eax
810059dd:	53                   	push   %ebx
810059de:	ff 75 08             	push   0x8(%ebp)
810059e1:	e8 af 00 00 00       	call   81005a95 <__swhatbuf_r>
810059e6:	83 c4 10             	add    $0x10,%esp
810059e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810059ec:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059ef:	83 ec 08             	sub    $0x8,%esp
810059f2:	50                   	push   %eax
810059f3:	ff 75 08             	push   0x8(%ebp)
810059f6:	e8 ca d0 ff ff       	call   81002ac5 <_malloc_r>
810059fb:	83 c4 10             	add    $0x10,%esp
810059fe:	89 c6                	mov    %eax,%esi
81005a00:	85 f6                	test   %esi,%esi
81005a02:	75 2f                	jne    81005a33 <__smakebuf_r+0x8b>
81005a04:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a08:	98                   	cwtl   
81005a09:	25 00 02 00 00       	and    $0x200,%eax
81005a0e:	85 c0                	test   %eax,%eax
81005a10:	75 7c                	jne    81005a8e <__smakebuf_r+0xe6>
81005a12:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a16:	83 e0 fc             	and    $0xfffffffc,%eax
81005a19:	83 c8 02             	or     $0x2,%eax
81005a1c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a20:	8d 43 43             	lea    0x43(%ebx),%eax
81005a23:	89 03                	mov    %eax,(%ebx)
81005a25:	8b 03                	mov    (%ebx),%eax
81005a27:	89 43 10             	mov    %eax,0x10(%ebx)
81005a2a:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81005a31:	eb 5b                	jmp    81005a8e <__smakebuf_r+0xe6>
81005a33:	8b 45 08             	mov    0x8(%ebp),%eax
81005a36:	c7 40 3c 78 11 00 81 	movl   $0x81001178,0x3c(%eax)
81005a3d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a41:	0c 80                	or     $0x80,%al
81005a43:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a47:	89 33                	mov    %esi,(%ebx)
81005a49:	8b 03                	mov    (%ebx),%eax
81005a4b:	89 43 10             	mov    %eax,0x10(%ebx)
81005a4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a51:	89 43 14             	mov    %eax,0x14(%ebx)
81005a54:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a57:	85 c0                	test   %eax,%eax
81005a59:	74 26                	je     81005a81 <__smakebuf_r+0xd9>
81005a5b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81005a5f:	98                   	cwtl   
81005a60:	83 ec 08             	sub    $0x8,%esp
81005a63:	50                   	push   %eax
81005a64:	ff 75 08             	push   0x8(%ebp)
81005a67:	e8 53 10 00 00       	call   81006abf <_isatty_r>
81005a6c:	83 c4 10             	add    $0x10,%esp
81005a6f:	85 c0                	test   %eax,%eax
81005a71:	74 0e                	je     81005a81 <__smakebuf_r+0xd9>
81005a73:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81005a77:	83 e0 fc             	and    $0xfffffffc,%eax
81005a7a:	83 c8 01             	or     $0x1,%eax
81005a7d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a81:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81005a85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005a88:	09 d0                	or     %edx,%eax
81005a8a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81005a8e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81005a91:	5b                   	pop    %ebx
81005a92:	5e                   	pop    %esi
81005a93:	5d                   	pop    %ebp
81005a94:	c3                   	ret    

81005a95 <__swhatbuf_r>:
81005a95:	55                   	push   %ebp
81005a96:	89 e5                	mov    %esp,%ebp
81005a98:	83 ec 58             	sub    $0x58,%esp
81005a9b:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81005aa2:	8b 45 0c             	mov    0xc(%ebp),%eax
81005aa5:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005aa9:	66 85 c0             	test   %ax,%ax
81005aac:	78 1f                	js     81005acd <__swhatbuf_r+0x38>
81005aae:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ab1:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81005ab5:	98                   	cwtl   
81005ab6:	83 ec 04             	sub    $0x4,%esp
81005ab9:	8d 55 ac             	lea    -0x54(%ebp),%edx
81005abc:	52                   	push   %edx
81005abd:	50                   	push   %eax
81005abe:	ff 75 08             	push   0x8(%ebp)
81005ac1:	e8 b6 0f 00 00       	call   81006a7c <_fstat_r>
81005ac6:	83 c4 10             	add    $0x10,%esp
81005ac9:	85 c0                	test   %eax,%eax
81005acb:	79 35                	jns    81005b02 <__swhatbuf_r+0x6d>
81005acd:	8b 45 14             	mov    0x14(%ebp),%eax
81005ad0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81005ad6:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ad9:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005add:	98                   	cwtl   
81005ade:	25 80 00 00 00       	and    $0x80,%eax
81005ae3:	85 c0                	test   %eax,%eax
81005ae5:	74 0b                	je     81005af2 <__swhatbuf_r+0x5d>
81005ae7:	8b 45 10             	mov    0x10(%ebp),%eax
81005aea:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81005af0:	eb 09                	jmp    81005afb <__swhatbuf_r+0x66>
81005af2:	8b 45 10             	mov    0x10(%ebp),%eax
81005af5:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005afb:	b8 00 00 00 00       	mov    $0x0,%eax
81005b00:	eb 24                	jmp    81005b26 <__swhatbuf_r+0x91>
81005b02:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b05:	25 00 f0 00 00       	and    $0xf000,%eax
81005b0a:	3d 00 20 00 00       	cmp    $0x2000,%eax
81005b0f:	0f 94 c0             	sete   %al
81005b12:	0f b6 d0             	movzbl %al,%edx
81005b15:	8b 45 14             	mov    0x14(%ebp),%eax
81005b18:	89 10                	mov    %edx,(%eax)
81005b1a:	8b 45 10             	mov    0x10(%ebp),%eax
81005b1d:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81005b23:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b26:	c9                   	leave  
81005b27:	c3                   	ret    

81005b28 <__get_global_locale>:
81005b28:	55                   	push   %ebp
81005b29:	89 e5                	mov    %esp,%ebp
81005b2b:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
81005b30:	5d                   	pop    %ebp
81005b31:	c3                   	ret    

81005b32 <__get_current_locale>:
81005b32:	55                   	push   %ebp
81005b33:	89 e5                	mov    %esp,%ebp
81005b35:	e8 ee ff ff ff       	call   81005b28 <__get_global_locale>
81005b3a:	5d                   	pop    %ebp
81005b3b:	c3                   	ret    

81005b3c <_mbtowc_r>:
81005b3c:	55                   	push   %ebp
81005b3d:	89 e5                	mov    %esp,%ebp
81005b3f:	83 ec 08             	sub    $0x8,%esp
81005b42:	e8 eb ff ff ff       	call   81005b32 <__get_current_locale>
81005b47:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
81005b4d:	83 ec 0c             	sub    $0xc,%esp
81005b50:	ff 75 18             	push   0x18(%ebp)
81005b53:	ff 75 14             	push   0x14(%ebp)
81005b56:	ff 75 10             	push   0x10(%ebp)
81005b59:	ff 75 0c             	push   0xc(%ebp)
81005b5c:	ff 75 08             	push   0x8(%ebp)
81005b5f:	ff d0                	call   *%eax
81005b61:	83 c4 20             	add    $0x20,%esp
81005b64:	c9                   	leave  
81005b65:	c3                   	ret    

81005b66 <__ascii_mbtowc>:
81005b66:	55                   	push   %ebp
81005b67:	89 e5                	mov    %esp,%ebp
81005b69:	83 ec 10             	sub    $0x10,%esp
81005b6c:	8b 45 10             	mov    0x10(%ebp),%eax
81005b6f:	89 45 fc             	mov    %eax,-0x4(%ebp)
81005b72:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005b76:	75 06                	jne    81005b7e <__ascii_mbtowc+0x18>
81005b78:	8d 45 f8             	lea    -0x8(%ebp),%eax
81005b7b:	89 45 0c             	mov    %eax,0xc(%ebp)
81005b7e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81005b82:	75 07                	jne    81005b8b <__ascii_mbtowc+0x25>
81005b84:	b8 00 00 00 00       	mov    $0x0,%eax
81005b89:	eb 31                	jmp    81005bbc <__ascii_mbtowc+0x56>
81005b8b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81005b8f:	75 07                	jne    81005b98 <__ascii_mbtowc+0x32>
81005b91:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81005b96:	eb 24                	jmp    81005bbc <__ascii_mbtowc+0x56>
81005b98:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005b9b:	0f b6 00             	movzbl (%eax),%eax
81005b9e:	0f b6 d0             	movzbl %al,%edx
81005ba1:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ba4:	89 10                	mov    %edx,(%eax)
81005ba6:	8b 45 fc             	mov    -0x4(%ebp),%eax
81005ba9:	0f b6 00             	movzbl (%eax),%eax
81005bac:	84 c0                	test   %al,%al
81005bae:	75 07                	jne    81005bb7 <__ascii_mbtowc+0x51>
81005bb0:	b8 00 00 00 00       	mov    $0x0,%eax
81005bb5:	eb 05                	jmp    81005bbc <__ascii_mbtowc+0x56>
81005bb7:	b8 01 00 00 00       	mov    $0x1,%eax
81005bbc:	c9                   	leave  
81005bbd:	c3                   	ret    
81005bbe:	66 90                	xchg   %ax,%ax

81005bc0 <memmove>:
81005bc0:	55                   	push   %ebp
81005bc1:	89 e5                	mov    %esp,%ebp
81005bc3:	56                   	push   %esi
81005bc4:	57                   	push   %edi
81005bc5:	53                   	push   %ebx
81005bc6:	8b 7d 08             	mov    0x8(%ebp),%edi
81005bc9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81005bcc:	8b 75 0c             	mov    0xc(%ebp),%esi
81005bcf:	fc                   	cld    
81005bd0:	39 fe                	cmp    %edi,%esi
81005bd2:	73 43                	jae    81005c17 <memmove+0x57>
81005bd4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81005bd8:	39 df                	cmp    %ebx,%edi
81005bda:	77 3b                	ja     81005c17 <memmove+0x57>
81005bdc:	01 ce                	add    %ecx,%esi
81005bde:	01 cf                	add    %ecx,%edi
81005be0:	fd                   	std    
81005be1:	83 f9 08             	cmp    $0x8,%ecx
81005be4:	76 2b                	jbe    81005c11 <memmove+0x51>
81005be6:	89 fa                	mov    %edi,%edx
81005be8:	89 cb                	mov    %ecx,%ebx
81005bea:	83 e2 03             	and    $0x3,%edx
81005bed:	74 0c                	je     81005bfb <memmove+0x3b>
81005bef:	89 d1                	mov    %edx,%ecx
81005bf1:	4e                   	dec    %esi
81005bf2:	4f                   	dec    %edi
81005bf3:	29 cb                	sub    %ecx,%ebx
81005bf5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005bf7:	89 d9                	mov    %ebx,%ecx
81005bf9:	46                   	inc    %esi
81005bfa:	47                   	inc    %edi
81005bfb:	c1 e9 02             	shr    $0x2,%ecx
81005bfe:	83 ee 04             	sub    $0x4,%esi
81005c01:	83 ef 04             	sub    $0x4,%edi
81005c04:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005c06:	83 c6 04             	add    $0x4,%esi
81005c09:	83 c7 04             	add    $0x4,%edi
81005c0c:	89 d9                	mov    %ebx,%ecx
81005c0e:	83 e1 03             	and    $0x3,%ecx
81005c11:	4e                   	dec    %esi
81005c12:	4f                   	dec    %edi
81005c13:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c15:	eb 2a                	jmp    81005c41 <memmove+0x81>
81005c17:	83 f9 08             	cmp    $0x8,%ecx
81005c1a:	76 23                	jbe    81005c3f <memmove+0x7f>
81005c1c:	89 fa                	mov    %edi,%edx
81005c1e:	89 cb                	mov    %ecx,%ebx
81005c20:	83 e2 03             	and    $0x3,%edx
81005c23:	74 10                	je     81005c35 <memmove+0x75>
81005c25:	b9 04 00 00 00       	mov    $0x4,%ecx
81005c2a:	29 d1                	sub    %edx,%ecx
81005c2c:	83 e1 03             	and    $0x3,%ecx
81005c2f:	29 cb                	sub    %ecx,%ebx
81005c31:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c33:	89 d9                	mov    %ebx,%ecx
81005c35:	c1 e9 02             	shr    $0x2,%ecx
81005c38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81005c3a:	89 d9                	mov    %ebx,%ecx
81005c3c:	83 e1 03             	and    $0x3,%ecx
81005c3f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81005c41:	8b 45 08             	mov    0x8(%ebp),%eax
81005c44:	fc                   	cld    
81005c45:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005c48:	5b                   	pop    %ebx
81005c49:	5f                   	pop    %edi
81005c4a:	5e                   	pop    %esi
81005c4b:	c9                   	leave  
81005c4c:	c3                   	ret    

81005c4d <__sputc_r>:
81005c4d:	55                   	push   %ebp
81005c4e:	89 e5                	mov    %esp,%ebp
81005c50:	83 ec 08             	sub    $0x8,%esp
81005c53:	8b 45 10             	mov    0x10(%ebp),%eax
81005c56:	8b 40 08             	mov    0x8(%eax),%eax
81005c59:	8d 50 ff             	lea    -0x1(%eax),%edx
81005c5c:	8b 45 10             	mov    0x10(%ebp),%eax
81005c5f:	89 50 08             	mov    %edx,0x8(%eax)
81005c62:	8b 45 10             	mov    0x10(%ebp),%eax
81005c65:	8b 40 08             	mov    0x8(%eax),%eax
81005c68:	85 c0                	test   %eax,%eax
81005c6a:	79 17                	jns    81005c83 <__sputc_r+0x36>
81005c6c:	8b 45 10             	mov    0x10(%ebp),%eax
81005c6f:	8b 50 08             	mov    0x8(%eax),%edx
81005c72:	8b 45 10             	mov    0x10(%ebp),%eax
81005c75:	8b 40 18             	mov    0x18(%eax),%eax
81005c78:	39 c2                	cmp    %eax,%edx
81005c7a:	7c 21                	jl     81005c9d <__sputc_r+0x50>
81005c7c:	8b 45 0c             	mov    0xc(%ebp),%eax
81005c7f:	3c 0a                	cmp    $0xa,%al
81005c81:	74 1a                	je     81005c9d <__sputc_r+0x50>
81005c83:	8b 45 10             	mov    0x10(%ebp),%eax
81005c86:	8b 00                	mov    (%eax),%eax
81005c88:	8d 48 01             	lea    0x1(%eax),%ecx
81005c8b:	8b 55 10             	mov    0x10(%ebp),%edx
81005c8e:	89 0a                	mov    %ecx,(%edx)
81005c90:	8b 55 0c             	mov    0xc(%ebp),%edx
81005c93:	88 10                	mov    %dl,(%eax)
81005c95:	0f b6 00             	movzbl (%eax),%eax
81005c98:	0f b6 c0             	movzbl %al,%eax
81005c9b:	eb 14                	jmp    81005cb1 <__sputc_r+0x64>
81005c9d:	83 ec 04             	sub    $0x4,%esp
81005ca0:	ff 75 10             	push   0x10(%ebp)
81005ca3:	ff 75 0c             	push   0xc(%ebp)
81005ca6:	ff 75 08             	push   0x8(%ebp)
81005ca9:	e8 c1 ed ff ff       	call   81004a6f <__swbuf_r>
81005cae:	83 c4 10             	add    $0x10,%esp
81005cb1:	c9                   	leave  
81005cb2:	c3                   	ret    

81005cb3 <_putc_r>:
81005cb3:	55                   	push   %ebp
81005cb4:	89 e5                	mov    %esp,%ebp
81005cb6:	53                   	push   %ebx
81005cb7:	83 ec 14             	sub    $0x14,%esp
81005cba:	8b 5d 10             	mov    0x10(%ebp),%ebx
81005cbd:	8b 45 08             	mov    0x8(%ebp),%eax
81005cc0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cc3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005cc7:	74 18                	je     81005ce1 <_putc_r+0x2e>
81005cc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ccc:	8b 40 38             	mov    0x38(%eax),%eax
81005ccf:	85 c0                	test   %eax,%eax
81005cd1:	75 0e                	jne    81005ce1 <_putc_r+0x2e>
81005cd3:	83 ec 0c             	sub    $0xc,%esp
81005cd6:	ff 75 f4             	push   -0xc(%ebp)
81005cd9:	e8 d5 b4 ff ff       	call   810011b3 <__sinit>
81005cde:	83 c4 10             	add    $0x10,%esp
81005ce1:	83 ec 04             	sub    $0x4,%esp
81005ce4:	53                   	push   %ebx
81005ce5:	ff 75 0c             	push   0xc(%ebp)
81005ce8:	ff 75 08             	push   0x8(%ebp)
81005ceb:	e8 5d ff ff ff       	call   81005c4d <__sputc_r>
81005cf0:	83 c4 10             	add    $0x10,%esp
81005cf3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005cf6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cf9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005cfc:	c9                   	leave  
81005cfd:	c3                   	ret    

81005cfe <putc>:
81005cfe:	55                   	push   %ebp
81005cff:	89 e5                	mov    %esp,%ebp
81005d01:	53                   	push   %ebx
81005d02:	83 ec 14             	sub    $0x14,%esp
81005d05:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81005d08:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81005d0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d10:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d13:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005d16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81005d1a:	74 18                	je     81005d34 <putc+0x36>
81005d1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005d1f:	8b 40 38             	mov    0x38(%eax),%eax
81005d22:	85 c0                	test   %eax,%eax
81005d24:	75 0e                	jne    81005d34 <putc+0x36>
81005d26:	83 ec 0c             	sub    $0xc,%esp
81005d29:	ff 75 f0             	push   -0x10(%ebp)
81005d2c:	e8 82 b4 ff ff       	call   810011b3 <__sinit>
81005d31:	83 c4 10             	add    $0x10,%esp
81005d34:	83 ec 04             	sub    $0x4,%esp
81005d37:	53                   	push   %ebx
81005d38:	ff 75 08             	push   0x8(%ebp)
81005d3b:	ff 75 f4             	push   -0xc(%ebp)
81005d3e:	e8 0a ff ff ff       	call   81005c4d <__sputc_r>
81005d43:	83 c4 10             	add    $0x10,%esp
81005d46:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005d49:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005d4c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81005d4f:	c9                   	leave  
81005d50:	c3                   	ret    

81005d51 <_read_r>:
81005d51:	55                   	push   %ebp
81005d52:	89 e5                	mov    %esp,%ebp
81005d54:	83 ec 18             	sub    $0x18,%esp
81005d57:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81005d5e:	00 00 00 
81005d61:	83 ec 04             	sub    $0x4,%esp
81005d64:	ff 75 14             	push   0x14(%ebp)
81005d67:	ff 75 10             	push   0x10(%ebp)
81005d6a:	ff 75 0c             	push   0xc(%ebp)
81005d6d:	e8 4e aa ff ff       	call   810007c0 <read>
81005d72:	83 c4 10             	add    $0x10,%esp
81005d75:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d78:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81005d7c:	75 14                	jne    81005d92 <_read_r+0x41>
81005d7e:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81005d83:	85 c0                	test   %eax,%eax
81005d85:	74 0b                	je     81005d92 <_read_r+0x41>
81005d87:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81005d8d:	8b 45 08             	mov    0x8(%ebp),%eax
81005d90:	89 10                	mov    %edx,(%eax)
81005d92:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d95:	c9                   	leave  
81005d96:	c3                   	ret    

81005d97 <_realloc_r>:
81005d97:	55                   	push   %ebp
81005d98:	89 e5                	mov    %esp,%ebp
81005d9a:	83 ec 78             	sub    $0x78,%esp
81005d9d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005da1:	75 16                	jne    81005db9 <_realloc_r+0x22>
81005da3:	83 ec 08             	sub    $0x8,%esp
81005da6:	ff 75 10             	push   0x10(%ebp)
81005da9:	ff 75 08             	push   0x8(%ebp)
81005dac:	e8 14 cd ff ff       	call   81002ac5 <_malloc_r>
81005db1:	83 c4 10             	add    $0x10,%esp
81005db4:	e9 b6 08 00 00       	jmp    8100666f <_realloc_r+0x8d8>
81005db9:	83 ec 0c             	sub    $0xc,%esp
81005dbc:	ff 75 08             	push   0x8(%ebp)
81005dbf:	e8 e4 d6 ff ff       	call   810034a8 <__malloc_lock>
81005dc4:	83 c4 10             	add    $0x10,%esp
81005dc7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005dca:	83 e8 08             	sub    $0x8,%eax
81005dcd:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005dd0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005dd3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005dd6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005dd9:	8b 40 04             	mov    0x4(%eax),%eax
81005ddc:	83 e0 fc             	and    $0xfffffffc,%eax
81005ddf:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005de2:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005de5:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005de8:	8b 45 10             	mov    0x10(%ebp),%eax
81005deb:	83 c0 0b             	add    $0xb,%eax
81005dee:	83 f8 16             	cmp    $0x16,%eax
81005df1:	76 0b                	jbe    81005dfe <_realloc_r+0x67>
81005df3:	8b 45 10             	mov    0x10(%ebp),%eax
81005df6:	83 c0 0b             	add    $0xb,%eax
81005df9:	83 e0 f8             	and    $0xfffffff8,%eax
81005dfc:	eb 05                	jmp    81005e03 <_realloc_r+0x6c>
81005dfe:	b8 10 00 00 00       	mov    $0x10,%eax
81005e03:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005e06:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e09:	85 c0                	test   %eax,%eax
81005e0b:	78 08                	js     81005e15 <_realloc_r+0x7e>
81005e0d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e10:	3b 45 10             	cmp    0x10(%ebp),%eax
81005e13:	73 13                	jae    81005e28 <_realloc_r+0x91>
81005e15:	8b 45 08             	mov    0x8(%ebp),%eax
81005e18:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005e1e:	b8 00 00 00 00       	mov    $0x0,%eax
81005e23:	e9 47 08 00 00       	jmp    8100666f <_realloc_r+0x8d8>
81005e28:	8b 55 c0             	mov    -0x40(%ebp),%edx
81005e2b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e2e:	39 c2                	cmp    %eax,%edx
81005e30:	0f 8d 8b 07 00 00    	jge    810065c1 <_realloc_r+0x82a>
81005e36:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81005e39:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e3c:	01 d0                	add    %edx,%eax
81005e3e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005e41:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005e46:	8b 40 08             	mov    0x8(%eax),%eax
81005e49:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005e4c:	74 1e                	je     81005e6c <_realloc_r+0xd5>
81005e4e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e51:	8b 40 04             	mov    0x4(%eax),%eax
81005e54:	83 e0 fe             	and    $0xfffffffe,%eax
81005e57:	89 c2                	mov    %eax,%edx
81005e59:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e5c:	01 d0                	add    %edx,%eax
81005e5e:	8b 40 04             	mov    0x4(%eax),%eax
81005e61:	83 e0 01             	and    $0x1,%eax
81005e64:	85 c0                	test   %eax,%eax
81005e66:	0f 85 ca 00 00 00    	jne    81005f36 <_realloc_r+0x19f>
81005e6c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005e6f:	8b 40 04             	mov    0x4(%eax),%eax
81005e72:	83 e0 fc             	and    $0xfffffffc,%eax
81005e75:	89 45 e8             	mov    %eax,-0x18(%ebp)
81005e78:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005e7d:	8b 40 08             	mov    0x8(%eax),%eax
81005e80:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005e83:	75 71                	jne    81005ef6 <_realloc_r+0x15f>
81005e85:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005e88:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e8b:	01 d0                	add    %edx,%eax
81005e8d:	89 c2                	mov    %eax,%edx
81005e8f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e92:	83 c0 10             	add    $0x10,%eax
81005e95:	39 c2                	cmp    %eax,%edx
81005e97:	0f 8c a9 00 00 00    	jl     81005f46 <_realloc_r+0x1af>
81005e9d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005ea0:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ea3:	ba c0 75 00 81       	mov    $0x810075c0,%edx
81005ea8:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005eab:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005eae:	01 c8                	add    %ecx,%eax
81005eb0:	89 42 08             	mov    %eax,0x8(%edx)
81005eb3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005eb6:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005eb9:	89 c2                	mov    %eax,%edx
81005ebb:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005ec0:	8b 40 08             	mov    0x8(%eax),%eax
81005ec3:	83 ca 01             	or     $0x1,%edx
81005ec6:	89 50 04             	mov    %edx,0x4(%eax)
81005ec9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ecc:	8b 40 04             	mov    0x4(%eax),%eax
81005ecf:	83 e0 01             	and    $0x1,%eax
81005ed2:	0b 45 bc             	or     -0x44(%ebp),%eax
81005ed5:	89 c2                	mov    %eax,%edx
81005ed7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005eda:	89 50 04             	mov    %edx,0x4(%eax)
81005edd:	83 ec 0c             	sub    $0xc,%esp
81005ee0:	ff 75 08             	push   0x8(%ebp)
81005ee3:	e8 c6 d5 ff ff       	call   810034ae <__malloc_unlock>
81005ee8:	83 c4 10             	add    $0x10,%esp
81005eeb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005eee:	83 c0 08             	add    $0x8,%eax
81005ef1:	e9 79 07 00 00       	jmp    8100666f <_realloc_r+0x8d8>
81005ef6:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ef9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005efc:	01 d0                	add    %edx,%eax
81005efe:	89 c2                	mov    %eax,%edx
81005f00:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005f03:	39 c2                	cmp    %eax,%edx
81005f05:	7c 3f                	jl     81005f46 <_realloc_r+0x1af>
81005f07:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f0a:	8b 40 0c             	mov    0xc(%eax),%eax
81005f0d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005f10:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005f13:	8b 40 08             	mov    0x8(%eax),%eax
81005f16:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005f19:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005f1c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005f1f:	89 50 0c             	mov    %edx,0xc(%eax)
81005f22:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005f25:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005f28:	89 50 08             	mov    %edx,0x8(%eax)
81005f2b:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005f2e:	01 45 f0             	add    %eax,-0x10(%ebp)
81005f31:	e9 8c 06 00 00       	jmp    810065c2 <_realloc_r+0x82b>
81005f36:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005f3d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005f44:	eb 01                	jmp    81005f47 <_realloc_r+0x1b0>
81005f46:	90                   	nop
81005f47:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f4a:	8b 40 04             	mov    0x4(%eax),%eax
81005f4d:	83 e0 01             	and    $0x1,%eax
81005f50:	85 c0                	test   %eax,%eax
81005f52:	0f 85 d6 04 00 00    	jne    8100642e <_realloc_r+0x697>
81005f58:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f5b:	8b 00                	mov    (%eax),%eax
81005f5d:	f7 d8                	neg    %eax
81005f5f:	89 c2                	mov    %eax,%edx
81005f61:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005f64:	01 d0                	add    %edx,%eax
81005f66:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005f69:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005f6c:	8b 40 04             	mov    0x4(%eax),%eax
81005f6f:	83 e0 fc             	and    $0xfffffffc,%eax
81005f72:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005f75:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005f79:	0f 84 4a 03 00 00    	je     810062c9 <_realloc_r+0x532>
81005f7f:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
81005f84:	8b 40 08             	mov    0x8(%eax),%eax
81005f87:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005f8a:	0f 85 b0 01 00 00    	jne    81006140 <_realloc_r+0x3a9>
81005f90:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005f93:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005f96:	01 c2                	add    %eax,%edx
81005f98:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005f9b:	01 d0                	add    %edx,%eax
81005f9d:	89 c2                	mov    %eax,%edx
81005f9f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005fa2:	83 c0 10             	add    $0x10,%eax
81005fa5:	39 c2                	cmp    %eax,%edx
81005fa7:	0f 8c 1c 03 00 00    	jl     810062c9 <_realloc_r+0x532>
81005fad:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fb0:	8b 40 0c             	mov    0xc(%eax),%eax
81005fb3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005fb6:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fb9:	8b 40 08             	mov    0x8(%eax),%eax
81005fbc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005fbf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005fc2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005fc5:	89 50 0c             	mov    %edx,0xc(%eax)
81005fc8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005fcb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005fce:	89 50 08             	mov    %edx,0x8(%eax)
81005fd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005fd4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fd7:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005fda:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005fdd:	01 d0                	add    %edx,%eax
81005fdf:	01 45 f0             	add    %eax,-0x10(%ebp)
81005fe2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fe5:	83 c0 08             	add    $0x8,%eax
81005fe8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005feb:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005fee:	83 e8 04             	sub    $0x4,%eax
81005ff1:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005ff4:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005ff8:	0f 87 de 00 00 00    	ja     810060dc <_realloc_r+0x345>
81005ffe:	8b 45 0c             	mov    0xc(%ebp),%eax
81006001:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006004:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006007:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100600a:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
8100600e:	0f 86 90 00 00 00    	jbe    810060a4 <_realloc_r+0x30d>
81006014:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006017:	8d 42 04             	lea    0x4(%edx),%eax
8100601a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100601d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006020:	8d 48 04             	lea    0x4(%eax),%ecx
81006023:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006026:	8b 12                	mov    (%edx),%edx
81006028:	89 10                	mov    %edx,(%eax)
8100602a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100602d:	8d 42 04             	lea    0x4(%edx),%eax
81006030:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006033:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006036:	8d 48 04             	lea    0x4(%eax),%ecx
81006039:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100603c:	8b 12                	mov    (%edx),%edx
8100603e:	89 10                	mov    %edx,(%eax)
81006040:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81006044:	76 5e                	jbe    810060a4 <_realloc_r+0x30d>
81006046:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006049:	8d 42 04             	lea    0x4(%edx),%eax
8100604c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100604f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006052:	8d 48 04             	lea    0x4(%eax),%ecx
81006055:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81006058:	8b 12                	mov    (%edx),%edx
8100605a:	89 10                	mov    %edx,(%eax)
8100605c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100605f:	8d 42 04             	lea    0x4(%edx),%eax
81006062:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006065:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006068:	8d 48 04             	lea    0x4(%eax),%ecx
8100606b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100606e:	8b 12                	mov    (%edx),%edx
81006070:	89 10                	mov    %edx,(%eax)
81006072:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81006076:	76 2c                	jbe    810060a4 <_realloc_r+0x30d>
81006078:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100607b:	8d 42 04             	lea    0x4(%edx),%eax
8100607e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006081:	8b 45 e0             	mov    -0x20(%ebp),%eax
81006084:	8d 48 04             	lea    0x4(%eax),%ecx
81006087:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100608a:	8b 12                	mov    (%edx),%edx
8100608c:	89 10                	mov    %edx,(%eax)
8100608e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81006091:	8d 42 04             	lea    0x4(%edx),%eax
81006094:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006097:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100609a:	8d 48 04             	lea    0x4(%eax),%ecx
8100609d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810060a0:	8b 12                	mov    (%edx),%edx
810060a2:	89 10                	mov    %edx,(%eax)
810060a4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810060a7:	8d 42 04             	lea    0x4(%edx),%eax
810060aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810060ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060b0:	8d 48 04             	lea    0x4(%eax),%ecx
810060b3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810060b6:	8b 12                	mov    (%edx),%edx
810060b8:	89 10                	mov    %edx,(%eax)
810060ba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810060bd:	8d 42 04             	lea    0x4(%edx),%eax
810060c0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810060c3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060c6:	8d 48 04             	lea    0x4(%eax),%ecx
810060c9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810060cc:	8b 12                	mov    (%edx),%edx
810060ce:	89 10                	mov    %edx,(%eax)
810060d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810060d3:	8b 10                	mov    (%eax),%edx
810060d5:	8b 45 e0             	mov    -0x20(%ebp),%eax
810060d8:	89 10                	mov    %edx,(%eax)
810060da:	eb 14                	jmp    810060f0 <_realloc_r+0x359>
810060dc:	83 ec 04             	sub    $0x4,%esp
810060df:	ff 75 a0             	push   -0x60(%ebp)
810060e2:	ff 75 0c             	push   0xc(%ebp)
810060e5:	ff 75 a8             	push   -0x58(%ebp)
810060e8:	e8 d3 fa ff ff       	call   81005bc0 <memmove>
810060ed:	83 c4 10             	add    $0x10,%esp
810060f0:	ba c0 75 00 81       	mov    $0x810075c0,%edx
810060f5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810060f8:	8b 45 bc             	mov    -0x44(%ebp),%eax
810060fb:	01 c8                	add    %ecx,%eax
810060fd:	89 42 08             	mov    %eax,0x8(%edx)
81006100:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006103:	2b 45 bc             	sub    -0x44(%ebp),%eax
81006106:	89 c2                	mov    %eax,%edx
81006108:	b8 c0 75 00 81       	mov    $0x810075c0,%eax
8100610d:	8b 40 08             	mov    0x8(%eax),%eax
81006110:	83 ca 01             	or     $0x1,%edx
81006113:	89 50 04             	mov    %edx,0x4(%eax)
81006116:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006119:	8b 40 04             	mov    0x4(%eax),%eax
8100611c:	83 e0 01             	and    $0x1,%eax
8100611f:	0b 45 bc             	or     -0x44(%ebp),%eax
81006122:	89 c2                	mov    %eax,%edx
81006124:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006127:	89 50 04             	mov    %edx,0x4(%eax)
8100612a:	83 ec 0c             	sub    $0xc,%esp
8100612d:	ff 75 08             	push   0x8(%ebp)
81006130:	e8 79 d3 ff ff       	call   810034ae <__malloc_unlock>
81006135:	83 c4 10             	add    $0x10,%esp
81006138:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100613b:	e9 2f 05 00 00       	jmp    8100666f <_realloc_r+0x8d8>
81006140:	8b 55 e8             	mov    -0x18(%ebp),%edx
81006143:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006146:	01 c2                	add    %eax,%edx
81006148:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100614b:	01 d0                	add    %edx,%eax
8100614d:	89 c2                	mov    %eax,%edx
8100614f:	8b 45 bc             	mov    -0x44(%ebp),%eax
81006152:	39 c2                	cmp    %eax,%edx
81006154:	0f 8c 6f 01 00 00    	jl     810062c9 <_realloc_r+0x532>
8100615a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100615d:	8b 40 0c             	mov    0xc(%eax),%eax
81006160:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006163:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006166:	8b 40 08             	mov    0x8(%eax),%eax
81006169:	89 45 b4             	mov    %eax,-0x4c(%ebp)
8100616c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100616f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006172:	89 50 0c             	mov    %edx,0xc(%eax)
81006175:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006178:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100617b:	89 50 08             	mov    %edx,0x8(%eax)
8100617e:	8b 45 b0             	mov    -0x50(%ebp),%eax
81006181:	8b 40 0c             	mov    0xc(%eax),%eax
81006184:	89 45 b8             	mov    %eax,-0x48(%ebp)
81006187:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100618a:	8b 40 08             	mov    0x8(%eax),%eax
8100618d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81006190:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81006193:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006196:	89 50 0c             	mov    %edx,0xc(%eax)
81006199:	8b 45 b8             	mov    -0x48(%ebp),%eax
8100619c:	8b 55 b4             	mov    -0x4c(%ebp),%edx
8100619f:	89 50 08             	mov    %edx,0x8(%eax)
810061a2:	8b 45 b0             	mov    -0x50(%ebp),%eax
810061a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810061a8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810061ab:	8b 45 ac             	mov    -0x54(%ebp),%eax
810061ae:	01 d0                	add    %edx,%eax
810061b0:	01 45 f0             	add    %eax,-0x10(%ebp)
810061b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061b6:	83 c0 08             	add    $0x8,%eax
810061b9:	89 45 a8             	mov    %eax,-0x58(%ebp)
810061bc:	8b 45 c0             	mov    -0x40(%ebp),%eax
810061bf:	83 e8 04             	sub    $0x4,%eax
810061c2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
810061c5:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
810061c9:	0f 87 e1 00 00 00    	ja     810062b0 <_realloc_r+0x519>
810061cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810061d2:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061d5:	8b 45 a8             	mov    -0x58(%ebp),%eax
810061d8:	89 45 d8             	mov    %eax,-0x28(%ebp)
810061db:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
810061df:	0f 86 90 00 00 00    	jbe    81006275 <_realloc_r+0x4de>
810061e5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061e8:	8d 42 04             	lea    0x4(%edx),%eax
810061eb:	89 45 dc             	mov    %eax,-0x24(%ebp)
810061ee:	8b 45 d8             	mov    -0x28(%ebp),%eax
810061f1:	8d 48 04             	lea    0x4(%eax),%ecx
810061f4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810061f7:	8b 12                	mov    (%edx),%edx
810061f9:	89 10                	mov    %edx,(%eax)
810061fb:	8b 55 dc             	mov    -0x24(%ebp),%edx
810061fe:	8d 42 04             	lea    0x4(%edx),%eax
81006201:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006204:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006207:	8d 48 04             	lea    0x4(%eax),%ecx
8100620a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100620d:	8b 12                	mov    (%edx),%edx
8100620f:	89 10                	mov    %edx,(%eax)
81006211:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81006215:	76 5e                	jbe    81006275 <_realloc_r+0x4de>
81006217:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100621a:	8d 42 04             	lea    0x4(%edx),%eax
8100621d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006220:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006223:	8d 48 04             	lea    0x4(%eax),%ecx
81006226:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006229:	8b 12                	mov    (%edx),%edx
8100622b:	89 10                	mov    %edx,(%eax)
8100622d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006230:	8d 42 04             	lea    0x4(%edx),%eax
81006233:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006236:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006239:	8d 48 04             	lea    0x4(%eax),%ecx
8100623c:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100623f:	8b 12                	mov    (%edx),%edx
81006241:	89 10                	mov    %edx,(%eax)
81006243:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81006247:	76 2c                	jbe    81006275 <_realloc_r+0x4de>
81006249:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100624c:	8d 42 04             	lea    0x4(%edx),%eax
8100624f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006252:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006255:	8d 48 04             	lea    0x4(%eax),%ecx
81006258:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100625b:	8b 12                	mov    (%edx),%edx
8100625d:	89 10                	mov    %edx,(%eax)
8100625f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006262:	8d 42 04             	lea    0x4(%edx),%eax
81006265:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006268:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100626b:	8d 48 04             	lea    0x4(%eax),%ecx
8100626e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006271:	8b 12                	mov    (%edx),%edx
81006273:	89 10                	mov    %edx,(%eax)
81006275:	8b 55 dc             	mov    -0x24(%ebp),%edx
81006278:	8d 42 04             	lea    0x4(%edx),%eax
8100627b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100627e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006281:	8d 48 04             	lea    0x4(%eax),%ecx
81006284:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81006287:	8b 12                	mov    (%edx),%edx
81006289:	89 10                	mov    %edx,(%eax)
8100628b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100628e:	8d 42 04             	lea    0x4(%edx),%eax
81006291:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006294:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006297:	8d 48 04             	lea    0x4(%eax),%ecx
8100629a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
8100629d:	8b 12                	mov    (%edx),%edx
8100629f:	89 10                	mov    %edx,(%eax)
810062a1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810062a4:	8b 10                	mov    (%eax),%edx
810062a6:	8b 45 d8             	mov    -0x28(%ebp),%eax
810062a9:	89 10                	mov    %edx,(%eax)
810062ab:	e9 12 03 00 00       	jmp    810065c2 <_realloc_r+0x82b>
810062b0:	83 ec 04             	sub    $0x4,%esp
810062b3:	ff 75 a4             	push   -0x5c(%ebp)
810062b6:	ff 75 0c             	push   0xc(%ebp)
810062b9:	ff 75 a8             	push   -0x58(%ebp)
810062bc:	e8 ff f8 ff ff       	call   81005bc0 <memmove>
810062c1:	83 c4 10             	add    $0x10,%esp
810062c4:	e9 f9 02 00 00       	jmp    810065c2 <_realloc_r+0x82b>
810062c9:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
810062cd:	0f 84 5b 01 00 00    	je     8100642e <_realloc_r+0x697>
810062d3:	8b 55 ac             	mov    -0x54(%ebp),%edx
810062d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810062d9:	01 d0                	add    %edx,%eax
810062db:	89 c2                	mov    %eax,%edx
810062dd:	8b 45 bc             	mov    -0x44(%ebp),%eax
810062e0:	39 c2                	cmp    %eax,%edx
810062e2:	0f 8c 46 01 00 00    	jl     8100642e <_realloc_r+0x697>
810062e8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810062eb:	8b 40 0c             	mov    0xc(%eax),%eax
810062ee:	89 45 b8             	mov    %eax,-0x48(%ebp)
810062f1:	8b 45 b0             	mov    -0x50(%ebp),%eax
810062f4:	8b 40 08             	mov    0x8(%eax),%eax
810062f7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810062fa:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810062fd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81006300:	89 50 0c             	mov    %edx,0xc(%eax)
81006303:	8b 45 b8             	mov    -0x48(%ebp),%eax
81006306:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81006309:	89 50 08             	mov    %edx,0x8(%eax)
8100630c:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100630f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006312:	8b 45 ac             	mov    -0x54(%ebp),%eax
81006315:	01 45 f0             	add    %eax,-0x10(%ebp)
81006318:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100631b:	83 c0 08             	add    $0x8,%eax
8100631e:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006321:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006324:	83 e8 04             	sub    $0x4,%eax
81006327:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100632a:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
8100632e:	0f 87 e1 00 00 00    	ja     81006415 <_realloc_r+0x67e>
81006334:	8b 45 0c             	mov    0xc(%ebp),%eax
81006337:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100633a:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100633d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81006340:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81006344:	0f 86 90 00 00 00    	jbe    810063da <_realloc_r+0x643>
8100634a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100634d:	8d 42 04             	lea    0x4(%edx),%eax
81006350:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006353:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006356:	8d 48 04             	lea    0x4(%eax),%ecx
81006359:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100635c:	8b 12                	mov    (%edx),%edx
8100635e:	89 10                	mov    %edx,(%eax)
81006360:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006363:	8d 42 04             	lea    0x4(%edx),%eax
81006366:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006369:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100636c:	8d 48 04             	lea    0x4(%eax),%ecx
8100636f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006372:	8b 12                	mov    (%edx),%edx
81006374:	89 10                	mov    %edx,(%eax)
81006376:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
8100637a:	76 5e                	jbe    810063da <_realloc_r+0x643>
8100637c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100637f:	8d 42 04             	lea    0x4(%edx),%eax
81006382:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81006385:	8b 45 d0             	mov    -0x30(%ebp),%eax
81006388:	8d 48 04             	lea    0x4(%eax),%ecx
8100638b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100638e:	8b 12                	mov    (%edx),%edx
81006390:	89 10                	mov    %edx,(%eax)
81006392:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81006395:	8d 42 04             	lea    0x4(%edx),%eax
81006398:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100639b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100639e:	8d 48 04             	lea    0x4(%eax),%ecx
810063a1:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063a4:	8b 12                	mov    (%edx),%edx
810063a6:	89 10                	mov    %edx,(%eax)
810063a8:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810063ac:	76 2c                	jbe    810063da <_realloc_r+0x643>
810063ae:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063b1:	8d 42 04             	lea    0x4(%edx),%eax
810063b4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063b7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063ba:	8d 48 04             	lea    0x4(%eax),%ecx
810063bd:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063c0:	8b 12                	mov    (%edx),%edx
810063c2:	89 10                	mov    %edx,(%eax)
810063c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063c7:	8d 42 04             	lea    0x4(%edx),%eax
810063ca:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063d0:	8d 48 04             	lea    0x4(%eax),%ecx
810063d3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063d6:	8b 12                	mov    (%edx),%edx
810063d8:	89 10                	mov    %edx,(%eax)
810063da:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063dd:	8d 42 04             	lea    0x4(%edx),%eax
810063e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063e6:	8d 48 04             	lea    0x4(%eax),%ecx
810063e9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810063ec:	8b 12                	mov    (%edx),%edx
810063ee:	89 10                	mov    %edx,(%eax)
810063f0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810063f3:	8d 42 04             	lea    0x4(%edx),%eax
810063f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810063f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810063fc:	8d 48 04             	lea    0x4(%eax),%ecx
810063ff:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81006402:	8b 12                	mov    (%edx),%edx
81006404:	89 10                	mov    %edx,(%eax)
81006406:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81006409:	8b 10                	mov    (%eax),%edx
8100640b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100640e:	89 10                	mov    %edx,(%eax)
81006410:	e9 ad 01 00 00       	jmp    810065c2 <_realloc_r+0x82b>
81006415:	83 ec 04             	sub    $0x4,%esp
81006418:	ff 75 9c             	push   -0x64(%ebp)
8100641b:	ff 75 0c             	push   0xc(%ebp)
8100641e:	ff 75 a8             	push   -0x58(%ebp)
81006421:	e8 9a f7 ff ff       	call   81005bc0 <memmove>
81006426:	83 c4 10             	add    $0x10,%esp
81006429:	e9 94 01 00 00       	jmp    810065c2 <_realloc_r+0x82b>
8100642e:	83 ec 08             	sub    $0x8,%esp
81006431:	ff 75 10             	push   0x10(%ebp)
81006434:	ff 75 08             	push   0x8(%ebp)
81006437:	e8 89 c6 ff ff       	call   81002ac5 <_malloc_r>
8100643c:	83 c4 10             	add    $0x10,%esp
8100643f:	89 45 a8             	mov    %eax,-0x58(%ebp)
81006442:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81006446:	75 18                	jne    81006460 <_realloc_r+0x6c9>
81006448:	83 ec 0c             	sub    $0xc,%esp
8100644b:	ff 75 08             	push   0x8(%ebp)
8100644e:	e8 5b d0 ff ff       	call   810034ae <__malloc_unlock>
81006453:	83 c4 10             	add    $0x10,%esp
81006456:	b8 00 00 00 00       	mov    $0x0,%eax
8100645b:	e9 0f 02 00 00       	jmp    8100666f <_realloc_r+0x8d8>
81006460:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006463:	83 e8 08             	sub    $0x8,%eax
81006466:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006469:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100646c:	8b 40 04             	mov    0x4(%eax),%eax
8100646f:	83 e0 fe             	and    $0xfffffffe,%eax
81006472:	89 c2                	mov    %eax,%edx
81006474:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006477:	01 d0                	add    %edx,%eax
81006479:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100647c:	75 17                	jne    81006495 <_realloc_r+0x6fe>
8100647e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006481:	8b 40 04             	mov    0x4(%eax),%eax
81006484:	83 e0 fc             	and    $0xfffffffc,%eax
81006487:	01 45 f0             	add    %eax,-0x10(%ebp)
8100648a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100648d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006490:	e9 2d 01 00 00       	jmp    810065c2 <_realloc_r+0x82b>
81006495:	8b 45 c0             	mov    -0x40(%ebp),%eax
81006498:	83 e8 04             	sub    $0x4,%eax
8100649b:	89 45 98             	mov    %eax,-0x68(%ebp)
8100649e:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810064a2:	0f 87 de 00 00 00    	ja     81006586 <_realloc_r+0x7ef>
810064a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810064ab:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064ae:	8b 45 a8             	mov    -0x58(%ebp),%eax
810064b1:	89 45 c8             	mov    %eax,-0x38(%ebp)
810064b4:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
810064b8:	0f 86 90 00 00 00    	jbe    8100654e <_realloc_r+0x7b7>
810064be:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064c1:	8d 42 04             	lea    0x4(%edx),%eax
810064c4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064ca:	8d 48 04             	lea    0x4(%eax),%ecx
810064cd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064d0:	8b 12                	mov    (%edx),%edx
810064d2:	89 10                	mov    %edx,(%eax)
810064d4:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064d7:	8d 42 04             	lea    0x4(%edx),%eax
810064da:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064dd:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064e0:	8d 48 04             	lea    0x4(%eax),%ecx
810064e3:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810064e6:	8b 12                	mov    (%edx),%edx
810064e8:	89 10                	mov    %edx,(%eax)
810064ea:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
810064ee:	76 5e                	jbe    8100654e <_realloc_r+0x7b7>
810064f0:	8b 55 cc             	mov    -0x34(%ebp),%edx
810064f3:	8d 42 04             	lea    0x4(%edx),%eax
810064f6:	89 45 cc             	mov    %eax,-0x34(%ebp)
810064f9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810064fc:	8d 48 04             	lea    0x4(%eax),%ecx
810064ff:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006502:	8b 12                	mov    (%edx),%edx
81006504:	89 10                	mov    %edx,(%eax)
81006506:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006509:	8d 42 04             	lea    0x4(%edx),%eax
8100650c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100650f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006512:	8d 48 04             	lea    0x4(%eax),%ecx
81006515:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006518:	8b 12                	mov    (%edx),%edx
8100651a:	89 10                	mov    %edx,(%eax)
8100651c:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006520:	76 2c                	jbe    8100654e <_realloc_r+0x7b7>
81006522:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006525:	8d 42 04             	lea    0x4(%edx),%eax
81006528:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100652b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100652e:	8d 48 04             	lea    0x4(%eax),%ecx
81006531:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006534:	8b 12                	mov    (%edx),%edx
81006536:	89 10                	mov    %edx,(%eax)
81006538:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100653b:	8d 42 04             	lea    0x4(%edx),%eax
8100653e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006541:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006544:	8d 48 04             	lea    0x4(%eax),%ecx
81006547:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100654a:	8b 12                	mov    (%edx),%edx
8100654c:	89 10                	mov    %edx,(%eax)
8100654e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006551:	8d 42 04             	lea    0x4(%edx),%eax
81006554:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006557:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100655a:	8d 48 04             	lea    0x4(%eax),%ecx
8100655d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006560:	8b 12                	mov    (%edx),%edx
81006562:	89 10                	mov    %edx,(%eax)
81006564:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006567:	8d 42 04             	lea    0x4(%edx),%eax
8100656a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100656d:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006570:	8d 48 04             	lea    0x4(%eax),%ecx
81006573:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006576:	8b 12                	mov    (%edx),%edx
81006578:	89 10                	mov    %edx,(%eax)
8100657a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100657d:	8b 10                	mov    (%eax),%edx
8100657f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006582:	89 10                	mov    %edx,(%eax)
81006584:	eb 14                	jmp    8100659a <_realloc_r+0x803>
81006586:	83 ec 04             	sub    $0x4,%esp
81006589:	ff 75 98             	push   -0x68(%ebp)
8100658c:	ff 75 0c             	push   0xc(%ebp)
8100658f:	ff 75 a8             	push   -0x58(%ebp)
81006592:	e8 29 f6 ff ff       	call   81005bc0 <memmove>
81006597:	83 c4 10             	add    $0x10,%esp
8100659a:	83 ec 08             	sub    $0x8,%esp
8100659d:	ff 75 0c             	push   0xc(%ebp)
810065a0:	ff 75 08             	push   0x8(%ebp)
810065a3:	e8 6d ad ff ff       	call   81001315 <_free_r>
810065a8:	83 c4 10             	add    $0x10,%esp
810065ab:	83 ec 0c             	sub    $0xc,%esp
810065ae:	ff 75 08             	push   0x8(%ebp)
810065b1:	e8 f8 ce ff ff       	call   810034ae <__malloc_unlock>
810065b6:	83 c4 10             	add    $0x10,%esp
810065b9:	8b 45 a8             	mov    -0x58(%ebp),%eax
810065bc:	e9 ae 00 00 00       	jmp    8100666f <_realloc_r+0x8d8>
810065c1:	90                   	nop
810065c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810065c5:	2b 45 bc             	sub    -0x44(%ebp),%eax
810065c8:	89 45 94             	mov    %eax,-0x6c(%ebp)
810065cb:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
810065cf:	76 5d                	jbe    8100662e <_realloc_r+0x897>
810065d1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810065d4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810065d7:	01 d0                	add    %edx,%eax
810065d9:	89 45 90             	mov    %eax,-0x70(%ebp)
810065dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065df:	8b 40 04             	mov    0x4(%eax),%eax
810065e2:	83 e0 01             	and    $0x1,%eax
810065e5:	0b 45 bc             	or     -0x44(%ebp),%eax
810065e8:	89 c2                	mov    %eax,%edx
810065ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065ed:	89 50 04             	mov    %edx,0x4(%eax)
810065f0:	8b 45 94             	mov    -0x6c(%ebp),%eax
810065f3:	83 c8 01             	or     $0x1,%eax
810065f6:	89 c2                	mov    %eax,%edx
810065f8:	8b 45 90             	mov    -0x70(%ebp),%eax
810065fb:	89 50 04             	mov    %edx,0x4(%eax)
810065fe:	8b 55 90             	mov    -0x70(%ebp),%edx
81006601:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006604:	01 d0                	add    %edx,%eax
81006606:	8b 50 04             	mov    0x4(%eax),%edx
81006609:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100660c:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100660f:	01 c8                	add    %ecx,%eax
81006611:	83 ca 01             	or     $0x1,%edx
81006614:	89 50 04             	mov    %edx,0x4(%eax)
81006617:	8b 45 90             	mov    -0x70(%ebp),%eax
8100661a:	83 c0 08             	add    $0x8,%eax
8100661d:	83 ec 08             	sub    $0x8,%esp
81006620:	50                   	push   %eax
81006621:	ff 75 08             	push   0x8(%ebp)
81006624:	e8 ec ac ff ff       	call   81001315 <_free_r>
81006629:	83 c4 10             	add    $0x10,%esp
8100662c:	eb 2d                	jmp    8100665b <_realloc_r+0x8c4>
8100662e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006631:	8b 40 04             	mov    0x4(%eax),%eax
81006634:	83 e0 01             	and    $0x1,%eax
81006637:	0b 45 f0             	or     -0x10(%ebp),%eax
8100663a:	89 c2                	mov    %eax,%edx
8100663c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100663f:	89 50 04             	mov    %edx,0x4(%eax)
81006642:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006645:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006648:	01 d0                	add    %edx,%eax
8100664a:	8b 50 04             	mov    0x4(%eax),%edx
8100664d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81006650:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006653:	01 c8                	add    %ecx,%eax
81006655:	83 ca 01             	or     $0x1,%edx
81006658:	89 50 04             	mov    %edx,0x4(%eax)
8100665b:	83 ec 0c             	sub    $0xc,%esp
8100665e:	ff 75 08             	push   0x8(%ebp)
81006661:	e8 48 ce ff ff       	call   810034ae <__malloc_unlock>
81006666:	83 c4 10             	add    $0x10,%esp
81006669:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100666c:	83 c0 08             	add    $0x8,%eax
8100666f:	c9                   	leave  
81006670:	c3                   	ret    

81006671 <cleanup_glue>:
81006671:	55                   	push   %ebp
81006672:	89 e5                	mov    %esp,%ebp
81006674:	83 ec 08             	sub    $0x8,%esp
81006677:	8b 45 0c             	mov    0xc(%ebp),%eax
8100667a:	8b 00                	mov    (%eax),%eax
8100667c:	85 c0                	test   %eax,%eax
8100667e:	74 14                	je     81006694 <cleanup_glue+0x23>
81006680:	8b 45 0c             	mov    0xc(%ebp),%eax
81006683:	8b 00                	mov    (%eax),%eax
81006685:	83 ec 08             	sub    $0x8,%esp
81006688:	50                   	push   %eax
81006689:	ff 75 08             	push   0x8(%ebp)
8100668c:	e8 e0 ff ff ff       	call   81006671 <cleanup_glue>
81006691:	83 c4 10             	add    $0x10,%esp
81006694:	83 ec 08             	sub    $0x8,%esp
81006697:	ff 75 0c             	push   0xc(%ebp)
8100669a:	ff 75 08             	push   0x8(%ebp)
8100669d:	e8 73 ac ff ff       	call   81001315 <_free_r>
810066a2:	83 c4 10             	add    $0x10,%esp
810066a5:	90                   	nop
810066a6:	c9                   	leave  
810066a7:	c3                   	ret    

810066a8 <_reclaim_reent>:
810066a8:	55                   	push   %ebp
810066a9:	89 e5                	mov    %esp,%ebp
810066ab:	83 ec 28             	sub    $0x28,%esp
810066ae:	a1 a4 75 00 81       	mov    0x810075a4,%eax
810066b3:	39 45 08             	cmp    %eax,0x8(%ebp)
810066b6:	0f 84 49 01 00 00    	je     81006805 <_reclaim_reent+0x15d>
810066bc:	8b 45 08             	mov    0x8(%ebp),%eax
810066bf:	8b 40 4c             	mov    0x4c(%eax),%eax
810066c2:	85 c0                	test   %eax,%eax
810066c4:	74 64                	je     8100672a <_reclaim_reent+0x82>
810066c6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810066cd:	eb 3e                	jmp    8100670d <_reclaim_reent+0x65>
810066cf:	8b 45 08             	mov    0x8(%ebp),%eax
810066d2:	8b 50 4c             	mov    0x4c(%eax),%edx
810066d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810066d8:	c1 e0 02             	shl    $0x2,%eax
810066db:	01 d0                	add    %edx,%eax
810066dd:	8b 00                	mov    (%eax),%eax
810066df:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066e2:	eb 1f                	jmp    81006703 <_reclaim_reent+0x5b>
810066e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066e7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810066ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810066ed:	8b 00                	mov    (%eax),%eax
810066ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
810066f2:	83 ec 08             	sub    $0x8,%esp
810066f5:	ff 75 e8             	push   -0x18(%ebp)
810066f8:	ff 75 08             	push   0x8(%ebp)
810066fb:	e8 15 ac ff ff       	call   81001315 <_free_r>
81006700:	83 c4 10             	add    $0x10,%esp
81006703:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81006707:	75 db                	jne    810066e4 <_reclaim_reent+0x3c>
81006709:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100670d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006710:	83 f8 1f             	cmp    $0x1f,%eax
81006713:	76 ba                	jbe    810066cf <_reclaim_reent+0x27>
81006715:	8b 45 08             	mov    0x8(%ebp),%eax
81006718:	8b 40 4c             	mov    0x4c(%eax),%eax
8100671b:	83 ec 08             	sub    $0x8,%esp
8100671e:	50                   	push   %eax
8100671f:	ff 75 08             	push   0x8(%ebp)
81006722:	e8 ee ab ff ff       	call   81001315 <_free_r>
81006727:	83 c4 10             	add    $0x10,%esp
8100672a:	8b 45 08             	mov    0x8(%ebp),%eax
8100672d:	8b 40 40             	mov    0x40(%eax),%eax
81006730:	85 c0                	test   %eax,%eax
81006732:	74 15                	je     81006749 <_reclaim_reent+0xa1>
81006734:	8b 45 08             	mov    0x8(%ebp),%eax
81006737:	8b 40 40             	mov    0x40(%eax),%eax
8100673a:	83 ec 08             	sub    $0x8,%esp
8100673d:	50                   	push   %eax
8100673e:	ff 75 08             	push   0x8(%ebp)
81006741:	e8 cf ab ff ff       	call   81001315 <_free_r>
81006746:	83 c4 10             	add    $0x10,%esp
81006749:	8b 45 08             	mov    0x8(%ebp),%eax
8100674c:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006752:	85 c0                	test   %eax,%eax
81006754:	74 50                	je     810067a6 <_reclaim_reent+0xfe>
81006756:	8b 45 08             	mov    0x8(%ebp),%eax
81006759:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100675f:	8b 55 08             	mov    0x8(%ebp),%edx
81006762:	81 c2 4c 01 00 00    	add    $0x14c,%edx
81006768:	39 d0                	cmp    %edx,%eax
8100676a:	74 3a                	je     810067a6 <_reclaim_reent+0xfe>
8100676c:	8b 45 08             	mov    0x8(%ebp),%eax
8100676f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81006775:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006778:	eb 1f                	jmp    81006799 <_reclaim_reent+0xf1>
8100677a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100677d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81006780:	8b 45 ec             	mov    -0x14(%ebp),%eax
81006783:	8b 00                	mov    (%eax),%eax
81006785:	89 45 ec             	mov    %eax,-0x14(%ebp)
81006788:	83 ec 08             	sub    $0x8,%esp
8100678b:	ff 75 e4             	push   -0x1c(%ebp)
8100678e:	ff 75 08             	push   0x8(%ebp)
81006791:	e8 7f ab ff ff       	call   81001315 <_free_r>
81006796:	83 c4 10             	add    $0x10,%esp
81006799:	8b 45 08             	mov    0x8(%ebp),%eax
8100679c:	05 4c 01 00 00       	add    $0x14c,%eax
810067a1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810067a4:	75 d4                	jne    8100677a <_reclaim_reent+0xd2>
810067a6:	8b 45 08             	mov    0x8(%ebp),%eax
810067a9:	8b 40 54             	mov    0x54(%eax),%eax
810067ac:	85 c0                	test   %eax,%eax
810067ae:	74 15                	je     810067c5 <_reclaim_reent+0x11d>
810067b0:	8b 45 08             	mov    0x8(%ebp),%eax
810067b3:	8b 40 54             	mov    0x54(%eax),%eax
810067b6:	83 ec 08             	sub    $0x8,%esp
810067b9:	50                   	push   %eax
810067ba:	ff 75 08             	push   0x8(%ebp)
810067bd:	e8 53 ab ff ff       	call   81001315 <_free_r>
810067c2:	83 c4 10             	add    $0x10,%esp
810067c5:	8b 45 08             	mov    0x8(%ebp),%eax
810067c8:	8b 40 38             	mov    0x38(%eax),%eax
810067cb:	85 c0                	test   %eax,%eax
810067cd:	74 36                	je     81006805 <_reclaim_reent+0x15d>
810067cf:	8b 45 08             	mov    0x8(%ebp),%eax
810067d2:	8b 40 3c             	mov    0x3c(%eax),%eax
810067d5:	83 ec 0c             	sub    $0xc,%esp
810067d8:	ff 75 08             	push   0x8(%ebp)
810067db:	ff d0                	call   *%eax
810067dd:	83 c4 10             	add    $0x10,%esp
810067e0:	8b 45 08             	mov    0x8(%ebp),%eax
810067e3:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810067e9:	85 c0                	test   %eax,%eax
810067eb:	74 18                	je     81006805 <_reclaim_reent+0x15d>
810067ed:	8b 45 08             	mov    0x8(%ebp),%eax
810067f0:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810067f6:	83 ec 08             	sub    $0x8,%esp
810067f9:	50                   	push   %eax
810067fa:	ff 75 08             	push   0x8(%ebp)
810067fd:	e8 6f fe ff ff       	call   81006671 <cleanup_glue>
81006802:	83 c4 10             	add    $0x10,%esp
81006805:	90                   	nop
81006806:	c9                   	leave  
81006807:	c3                   	ret    

81006808 <strncmp>:
81006808:	55                   	push   %ebp
81006809:	89 e5                	mov    %esp,%ebp
8100680b:	83 ec 10             	sub    $0x10,%esp
8100680e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006812:	75 0a                	jne    8100681e <strncmp+0x16>
81006814:	b8 00 00 00 00       	mov    $0x0,%eax
81006819:	e9 cb 00 00 00       	jmp    810068e9 <strncmp+0xe1>
8100681e:	8b 55 08             	mov    0x8(%ebp),%edx
81006821:	8b 45 0c             	mov    0xc(%ebp),%eax
81006824:	09 d0                	or     %edx,%eax
81006826:	83 e0 03             	and    $0x3,%eax
81006829:	85 c0                	test   %eax,%eax
8100682b:	0f 85 85 00 00 00    	jne    810068b6 <strncmp+0xae>
81006831:	8b 45 08             	mov    0x8(%ebp),%eax
81006834:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006837:	8b 45 0c             	mov    0xc(%ebp),%eax
8100683a:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100683d:	eb 36                	jmp    81006875 <strncmp+0x6d>
8100683f:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81006843:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006847:	74 1d                	je     81006866 <strncmp+0x5e>
81006849:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100684c:	8b 00                	mov    (%eax),%eax
8100684e:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006854:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006857:	8b 00                	mov    (%eax),%eax
81006859:	f7 d0                	not    %eax
8100685b:	21 d0                	and    %edx,%eax
8100685d:	25 80 80 80 80       	and    $0x80808080,%eax
81006862:	85 c0                	test   %eax,%eax
81006864:	74 07                	je     8100686d <strncmp+0x65>
81006866:	b8 00 00 00 00       	mov    $0x0,%eax
8100686b:	eb 7c                	jmp    810068e9 <strncmp+0xe1>
8100686d:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006871:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006875:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81006879:	76 0e                	jbe    81006889 <strncmp+0x81>
8100687b:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100687e:	8b 10                	mov    (%eax),%edx
81006880:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006883:	8b 00                	mov    (%eax),%eax
81006885:	39 c2                	cmp    %eax,%edx
81006887:	74 b6                	je     8100683f <strncmp+0x37>
81006889:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100688c:	89 45 08             	mov    %eax,0x8(%ebp)
8100688f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006892:	89 45 0c             	mov    %eax,0xc(%ebp)
81006895:	eb 1f                	jmp    810068b6 <strncmp+0xae>
81006897:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100689b:	74 0a                	je     810068a7 <strncmp+0x9f>
8100689d:	8b 45 08             	mov    0x8(%ebp),%eax
810068a0:	0f b6 00             	movzbl (%eax),%eax
810068a3:	84 c0                	test   %al,%al
810068a5:	75 07                	jne    810068ae <strncmp+0xa6>
810068a7:	b8 00 00 00 00       	mov    $0x0,%eax
810068ac:	eb 3b                	jmp    810068e9 <strncmp+0xe1>
810068ae:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810068b2:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810068b6:	8b 45 10             	mov    0x10(%ebp),%eax
810068b9:	8d 50 ff             	lea    -0x1(%eax),%edx
810068bc:	89 55 10             	mov    %edx,0x10(%ebp)
810068bf:	85 c0                	test   %eax,%eax
810068c1:	74 10                	je     810068d3 <strncmp+0xcb>
810068c3:	8b 45 08             	mov    0x8(%ebp),%eax
810068c6:	0f b6 10             	movzbl (%eax),%edx
810068c9:	8b 45 0c             	mov    0xc(%ebp),%eax
810068cc:	0f b6 00             	movzbl (%eax),%eax
810068cf:	38 c2                	cmp    %al,%dl
810068d1:	74 c4                	je     81006897 <strncmp+0x8f>
810068d3:	8b 45 08             	mov    0x8(%ebp),%eax
810068d6:	0f b6 00             	movzbl (%eax),%eax
810068d9:	0f b6 d0             	movzbl %al,%edx
810068dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810068df:	0f b6 00             	movzbl (%eax),%eax
810068e2:	0f b6 c8             	movzbl %al,%ecx
810068e5:	89 d0                	mov    %edx,%eax
810068e7:	29 c8                	sub    %ecx,%eax
810068e9:	c9                   	leave  
810068ea:	c3                   	ret    

810068eb <__get_global_locale>:
810068eb:	55                   	push   %ebp
810068ec:	89 e5                	mov    %esp,%ebp
810068ee:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810068f3:	5d                   	pop    %ebp
810068f4:	c3                   	ret    

810068f5 <__get_current_locale>:
810068f5:	55                   	push   %ebp
810068f6:	89 e5                	mov    %esp,%ebp
810068f8:	e8 ee ff ff ff       	call   810068eb <__get_global_locale>
810068fd:	5d                   	pop    %ebp
810068fe:	c3                   	ret    

810068ff <_wcrtomb_r>:
810068ff:	55                   	push   %ebp
81006900:	89 e5                	mov    %esp,%ebp
81006902:	83 ec 18             	sub    $0x18,%esp
81006905:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100690c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006910:	75 21                	jne    81006933 <_wcrtomb_r+0x34>
81006912:	e8 de ff ff ff       	call   810068f5 <__get_current_locale>
81006917:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100691d:	ff 75 14             	push   0x14(%ebp)
81006920:	6a 00                	push   $0x0
81006922:	8d 55 ea             	lea    -0x16(%ebp),%edx
81006925:	52                   	push   %edx
81006926:	ff 75 08             	push   0x8(%ebp)
81006929:	ff d0                	call   *%eax
8100692b:	83 c4 10             	add    $0x10,%esp
8100692e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006931:	eb 1f                	jmp    81006952 <_wcrtomb_r+0x53>
81006933:	e8 bd ff ff ff       	call   810068f5 <__get_current_locale>
81006938:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100693e:	ff 75 14             	push   0x14(%ebp)
81006941:	ff 75 10             	push   0x10(%ebp)
81006944:	ff 75 0c             	push   0xc(%ebp)
81006947:	ff 75 08             	push   0x8(%ebp)
8100694a:	ff d0                	call   *%eax
8100694c:	83 c4 10             	add    $0x10,%esp
8100694f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006952:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006956:	75 19                	jne    81006971 <_wcrtomb_r+0x72>
81006958:	8b 45 14             	mov    0x14(%ebp),%eax
8100695b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006961:	8b 45 08             	mov    0x8(%ebp),%eax
81006964:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
8100696a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100696f:	eb 03                	jmp    81006974 <_wcrtomb_r+0x75>
81006971:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006974:	c9                   	leave  
81006975:	c3                   	ret    

81006976 <wcrtomb>:
81006976:	55                   	push   %ebp
81006977:	89 e5                	mov    %esp,%ebp
81006979:	83 ec 28             	sub    $0x28,%esp
8100697c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006983:	a1 a4 75 00 81       	mov    0x810075a4,%eax
81006988:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100698b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100698f:	75 21                	jne    810069b2 <wcrtomb+0x3c>
81006991:	e8 5f ff ff ff       	call   810068f5 <__get_current_locale>
81006996:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100699c:	ff 75 10             	push   0x10(%ebp)
8100699f:	6a 00                	push   $0x0
810069a1:	8d 55 e6             	lea    -0x1a(%ebp),%edx
810069a4:	52                   	push   %edx
810069a5:	ff 75 f0             	push   -0x10(%ebp)
810069a8:	ff d0                	call   *%eax
810069aa:	83 c4 10             	add    $0x10,%esp
810069ad:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069b0:	eb 1f                	jmp    810069d1 <wcrtomb+0x5b>
810069b2:	e8 3e ff ff ff       	call   810068f5 <__get_current_locale>
810069b7:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810069bd:	ff 75 10             	push   0x10(%ebp)
810069c0:	ff 75 0c             	push   0xc(%ebp)
810069c3:	ff 75 08             	push   0x8(%ebp)
810069c6:	ff 75 f0             	push   -0x10(%ebp)
810069c9:	ff d0                	call   *%eax
810069cb:	83 c4 10             	add    $0x10,%esp
810069ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069d1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810069d5:	75 19                	jne    810069f0 <wcrtomb+0x7a>
810069d7:	8b 45 10             	mov    0x10(%ebp),%eax
810069da:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810069e0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810069e3:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810069e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810069ee:	eb 03                	jmp    810069f3 <wcrtomb+0x7d>
810069f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069f3:	c9                   	leave  
810069f4:	c3                   	ret    

810069f5 <__get_global_locale>:
810069f5:	55                   	push   %ebp
810069f6:	89 e5                	mov    %esp,%ebp
810069f8:	b8 e0 79 00 81       	mov    $0x810079e0,%eax
810069fd:	5d                   	pop    %ebp
810069fe:	c3                   	ret    

810069ff <__get_current_locale>:
810069ff:	55                   	push   %ebp
81006a00:	89 e5                	mov    %esp,%ebp
81006a02:	e8 ee ff ff ff       	call   810069f5 <__get_global_locale>
81006a07:	5d                   	pop    %ebp
81006a08:	c3                   	ret    

81006a09 <_wctomb_r>:
81006a09:	55                   	push   %ebp
81006a0a:	89 e5                	mov    %esp,%ebp
81006a0c:	83 ec 08             	sub    $0x8,%esp
81006a0f:	e8 eb ff ff ff       	call   810069ff <__get_current_locale>
81006a14:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81006a1a:	ff 75 14             	push   0x14(%ebp)
81006a1d:	ff 75 10             	push   0x10(%ebp)
81006a20:	ff 75 0c             	push   0xc(%ebp)
81006a23:	ff 75 08             	push   0x8(%ebp)
81006a26:	ff d0                	call   *%eax
81006a28:	83 c4 10             	add    $0x10,%esp
81006a2b:	c9                   	leave  
81006a2c:	c3                   	ret    

81006a2d <__ascii_wctomb>:
81006a2d:	55                   	push   %ebp
81006a2e:	89 e5                	mov    %esp,%ebp
81006a30:	83 ec 10             	sub    $0x10,%esp
81006a33:	8b 45 10             	mov    0x10(%ebp),%eax
81006a36:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006a39:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006a3d:	75 07                	jne    81006a46 <__ascii_wctomb+0x19>
81006a3f:	b8 00 00 00 00       	mov    $0x0,%eax
81006a44:	eb 28                	jmp    81006a6e <__ascii_wctomb+0x41>
81006a46:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81006a4d:	76 10                	jbe    81006a5f <__ascii_wctomb+0x32>
81006a4f:	8b 45 08             	mov    0x8(%ebp),%eax
81006a52:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81006a58:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006a5d:	eb 0f                	jmp    81006a6e <__ascii_wctomb+0x41>
81006a5f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006a62:	89 c2                	mov    %eax,%edx
81006a64:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a67:	88 10                	mov    %dl,(%eax)
81006a69:	b8 01 00 00 00       	mov    $0x1,%eax
81006a6e:	c9                   	leave  
81006a6f:	c3                   	ret    

81006a70 <__env_lock>:
81006a70:	55                   	push   %ebp
81006a71:	89 e5                	mov    %esp,%ebp
81006a73:	90                   	nop
81006a74:	5d                   	pop    %ebp
81006a75:	c3                   	ret    

81006a76 <__env_unlock>:
81006a76:	55                   	push   %ebp
81006a77:	89 e5                	mov    %esp,%ebp
81006a79:	90                   	nop
81006a7a:	5d                   	pop    %ebp
81006a7b:	c3                   	ret    

81006a7c <_fstat_r>:
81006a7c:	55                   	push   %ebp
81006a7d:	89 e5                	mov    %esp,%ebp
81006a7f:	83 ec 18             	sub    $0x18,%esp
81006a82:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81006a89:	00 00 00 
81006a8c:	83 ec 08             	sub    $0x8,%esp
81006a8f:	ff 75 10             	push   0x10(%ebp)
81006a92:	ff 75 0c             	push   0xc(%ebp)
81006a95:	e8 ef 9d ff ff       	call   81000889 <fstat>
81006a9a:	83 c4 10             	add    $0x10,%esp
81006a9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006aa0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006aa4:	75 14                	jne    81006aba <_fstat_r+0x3e>
81006aa6:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81006aab:	85 c0                	test   %eax,%eax
81006aad:	74 0b                	je     81006aba <_fstat_r+0x3e>
81006aaf:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81006ab5:	8b 45 08             	mov    0x8(%ebp),%eax
81006ab8:	89 10                	mov    %edx,(%eax)
81006aba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006abd:	c9                   	leave  
81006abe:	c3                   	ret    

81006abf <_isatty_r>:
81006abf:	55                   	push   %ebp
81006ac0:	89 e5                	mov    %esp,%ebp
81006ac2:	83 ec 18             	sub    $0x18,%esp
81006ac5:	c7 05 f4 81 00 81 00 	movl   $0x0,0x810081f4
81006acc:	00 00 00 
81006acf:	83 ec 0c             	sub    $0xc,%esp
81006ad2:	ff 75 0c             	push   0xc(%ebp)
81006ad5:	e8 8e 9d ff ff       	call   81000868 <isatty>
81006ada:	83 c4 10             	add    $0x10,%esp
81006add:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006ae0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81006ae4:	75 14                	jne    81006afa <_isatty_r+0x3b>
81006ae6:	a1 f4 81 00 81       	mov    0x810081f4,%eax
81006aeb:	85 c0                	test   %eax,%eax
81006aed:	74 0b                	je     81006afa <_isatty_r+0x3b>
81006aef:	8b 15 f4 81 00 81    	mov    0x810081f4,%edx
81006af5:	8b 45 08             	mov    0x8(%ebp),%eax
81006af8:	89 10                	mov    %edx,(%eax)
81006afa:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006afd:	c9                   	leave  
81006afe:	c3                   	ret    
