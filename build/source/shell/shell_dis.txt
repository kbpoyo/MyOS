
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x8100005b

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x0000536c memsz 0x000053f4 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000045ee  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000381  81004600  81004600  00005600  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  810049a0  810049a0  000059a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000074  81005380  81005380  0000636c  2**5
                  ALLOC
  4 .debug_info   0001590d  00000000  00000000  0000636c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00004c77  00000000  00000000  0001bc79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000530  00000000  00000000  000208f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   0000315e  00000000  00000000  00020e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00001121  00000000  00000000  00023f7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000efb  00000000  00000000  0002509f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  00025f9a  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000fe0  00000000  00000000  00025fdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000004e  00000000  00000000  00026fbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000486 l       .text	00000000 L5
810004be l       .text	00000000 L15
81000490 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810004c9 l     F .text	000000ad std
81000576 l     F .text	0000001b stdin_init
81000591 l     F .text	0000001b stdout_init
810005ac l     F .text	0000001b stderr_init
81005380 l     O .bss	00000004 __sfp_recursive_mutex
81005384 l     O .bss	00000004 __sinit_recursive_mutex
8100086f l     F .text	0000000a __fp_lock
81000879 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
810049a0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000e3c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100198d l       .text	00000000 L20
81001944 l       .text	00000000 L5
8100198a l       .text	00000000 L15
81001950 l       .text	00000000 L8
81001971 l       .text	00000000 L9
81001980 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
810053e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81001bdd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fputwc.c
81003771 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 locale.c
81003e62 l     F .text	0000000a __get_global_locale
81003e6c l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810040ce l     F .text	0000000a __get_global_locale
810040d8 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810043e6 l     F .text	0000000a __get_global_locale
810043f0 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810044f0 l     F .text	0000000a __get_global_locale
810044fa l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
810045ae g     F .text	00000040 _isatty_r
810041aa g     F .text	00000037 cleanup_glue
81000359 g     F .text	000000d6 _puts_r
81003f08 g     F .text	00000046 _lseek_r
810001a4 g     F .text	0000001b yield
81000324 g     F .text	00000035 printf
810043fa g     F .text	00000077 _wcrtomb_r
81003013 g     F .text	0000004a __sseek
810007be g     F .text	00000099 __sinit
81003082 g     F .text	00000112 __swbuf_r
81003e76 g     F .text	0000005f _setlocale_r
810005c7 g     F .text	0000006f __sfmoreglue
81001afb g     F .text	00000006 __malloc_unlock
810019e0 g       .text	00000000 memmove
810007a4 g     F .text	0000001a _cleanup
8100456b g     F .text	00000043 _fstat_r
810053f0 g     O .bss	00000004 errno
81002fae g     F .text	0000000a __seofread
81000177 g     F .text	0000002d execve
81000119 g     F .text	0000001b getpid
81001998 g       .text	00000000 memcpy
81000783 g     F .text	00000021 _cleanup_r
8100042f g     F .text	0000001c puts
810002f7 g     F .text	0000002d _printf_r
8100028e g     F .text	00000021 isatty
810053a0 g     O .bss	00000004 __malloc_top_pad
81005380 g       .bss	00000000 __bss_start__
810008cb g     F .text	0000049e __sfvwrite_r
81002f2a g     F .text	00000040 _sbrk_r
81004164 g     F .text	00000046 _read_r
81003396 g     F .text	00000107 _fclose_r
81003738 g     F .text	00000039 fflush
810053a4 g     O .bss	00000004 __malloc_max_sbrked_mem
81000261 g     F .text	0000002d lseek
81004628 g     O .rodata	00000004 _global_impure_ptr
81002650 g     F .text	000008da _realloc_r
81003887 g     F .text	00000057 _fputwc_r
81000883 g     F .text	00000024 __fp_lock_all
810041e1 g     F .text	00000160 _reclaim_reent
81000213 g     F .text	0000002d write
810002af g     F .text	00000027 fstat
810000a3 g     F .text	0000004c sys_call
81001c43 g     F .text	000000a8 __sfputs_r
81000857 g     F .text	00000006 __sfp_lock_acquire
81001900 g       .text	00000000 memchr
810053f4 g       .bss	00000000 __bss_end__
81003926 g     F .text	000003db _free_r
81004700 g     O .rodata	00000180 _ctype_b
81003ed5 g     F .text	00000014 __locale_mb_cur_max
810051ec g     O .data	00000004 __malloc_sbrk_base
8100005b g       .text	00000000 _start
810001e6 g     F .text	0000002d read
810053c0 g     O .bss	00000028 __malloc_current_mallinfo
810002f7 g     F .text	0000002d _iprintf_r
81003356 g     F .text	00000040 _close_r
8100015c g     F .text	0000001b fork
810031fb g     F .text	0000015b __swsetup_r
81000636 g     F .text	0000014d __sfp
81004de0 g     O .data	00000408 __malloc_av_
81000869 g     F .text	00000006 __sinit_lock_release
81002f6a g     F .text	00000044 __sread
81001af5 g     F .text	00000006 __malloc_lock
810002d6 g     F .text	00000021 sbrk
810036e0 g     F .text	00000058 _fflush_r
8100006b g     F .text	00000038 cstart
81001a6d g       .text	00000000 memset
81000000 g     F .text	0000005b main
810053a8 g     O .bss	00000004 __malloc_max_total_mem
81003194 g     F .text	00000021 __swbuf
8100305d g     F .text	00000025 __sclose
8100349d g     F .text	0000001d fclose
810010cf g     F .text	00000822 _malloc_r
81004528 g     F .text	00000043 __ascii_wctomb
81000d69 g     F .text	00000068 _fwalk
810040e2 g     F .text	0000002a _mbtowc_r
81003d01 g     F .text	00000161 _malloc_trim_r
81004341 g     F .text	000000a5 strcmp
81001ceb g     F .text	00000025 vfiprintf
81000324 g     F .text	00000035 iprintf
810053ec g     O .bss	00000004 _PathLocale
810031b5 g     F .text	00000046 _write_r
81003ee9 g     F .text	0000001f setlocale
81002066 g     F .text	0000019b _printf_common
81004dc4 g     O .data	00000004 _impure_ptr
810034ba g     F .text	00000226 __sflush_r
8100410c g     F .text	00000058 __ascii_mbtowc
810008a7 g     F .text	00000024 __fp_unlock_all
81000134 g     F .text	00000028 print_msg
8100403b g     F .text	00000093 __swhatbuf_r
810037d7 g     F .text	000000b0 __fputwc
81002fb8 g     F .text	0000005b __swrite
810051e8 g     O .data	00000004 __malloc_trim_threshold
81001d10 g     F .text	00000356 _vfiprintf_r
81000dd1 g     F .text	0000006b _fwalk_reent
8100085d g     F .text	00000006 __sfp_lock_release
81004880 g     O .rodata	00000101 _ctype_
81003f4e g     F .text	000000ed __smakebuf_r
81000450 g       .text	00000000 strlen
81002201 g     F .text	0000044f _printf_i
810001bf g     F .text	00000027 open
81001b01 g     F .text	000000dc __sprint_r
81004504 g     F .text	00000024 _wctomb_r
81001d10 g     F .text	00000356 _vfprintf_r
810000ef g     F .text	0000002a msleep
81004471 g     F .text	0000007f wcrtomb
81000240 g     F .text	00000021 close
81005200 g     O .data	0000016c __global_locale
81001ceb g     F .text	00000025 vfprintf
810038de g     F .text	00000048 fputwc
81000863 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 */

#include "lib_syscall.h"
#include <stdio.h>

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp
    if (pid > 0) printf("parent pid=%d\n", pid);
    else printf("chiled pid=%d\n", pid);

#endif

    open("tty:0", 0);
81000011:	83 ec 08             	sub    $0x8,%esp
81000014:	6a 00                	push   $0x0
81000016:	68 00 46 00 81       	push   $0x81004600
8100001b:	e8 9f 01 00 00       	call   810001bf <open>
81000020:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
81000023:	83 ec 0c             	sub    $0xc,%esp
81000026:	68 06 46 00 81       	push   $0x81004606
8100002b:	e8 ff 03 00 00       	call   8100042f <puts>
81000030:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        printf("shell pid=%d\n", getpid());
81000033:	e8 e1 00 00 00       	call   81000119 <getpid>
81000038:	83 ec 08             	sub    $0x8,%esp
8100003b:	50                   	push   %eax
8100003c:	68 17 46 00 81       	push   $0x81004617
81000041:	e8 de 02 00 00       	call   81000324 <iprintf>
81000046:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
81000049:	83 ec 0c             	sub    $0xc,%esp
8100004c:	68 e8 03 00 00       	push   $0x3e8
81000051:	e8 99 00 00 00       	call   810000ef <msleep>
81000056:	83 c4 10             	add    $0x10,%esp
        printf("shell pid=%d\n", getpid());
81000059:	eb d8                	jmp    81000033 <main+0x33>

8100005b <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
8100005b:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
8100005e:	8e d8                	mov    %eax,%ds
	mov %ax, %es
81000060:	8e c0                	mov    %eax,%es
	mov %ax, %fs
81000062:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
81000064:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000066:	e9 00 00 00 00       	jmp    8100006b <cstart>

8100006b <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
8100006b:	55                   	push   %ebp
8100006c:	89 e5                	mov    %esp,%ebp
8100006e:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
81000071:	c7 45 f4 80 53 00 81 	movl   $0x81005380,-0xc(%ebp)
    while (start < __bss_end__) {
81000078:	eb 0c                	jmp    81000086 <cstart+0x1b>
        *(start++) = 0;
8100007a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100007d:	8d 50 01             	lea    0x1(%eax),%edx
81000080:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000083:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000086:	81 7d f4 f4 53 00 81 	cmpl   $0x810053f4,-0xc(%ebp)
8100008d:	72 eb                	jb     8100007a <cstart+0xf>
    }
    
    main(argc, argv);
8100008f:	83 ec 08             	sub    $0x8,%esp
81000092:	ff 75 0c             	push   0xc(%ebp)
81000095:	ff 75 08             	push   0x8(%ebp)
81000098:	e8 63 ff ff ff       	call   81000000 <main>
8100009d:	83 c4 10             	add    $0x10,%esp
}
810000a0:	90                   	nop
810000a1:	c9                   	leave  
810000a2:	c3                   	ret    

810000a3 <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
810000a3:	55                   	push   %ebp
810000a4:	89 e5                	mov    %esp,%ebp
810000a6:	57                   	push   %edi
810000a7:	56                   	push   %esi
810000a8:	53                   	push   %ebx
810000a9:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810000ac:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000b3:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810000ba:	8b 45 08             	mov    0x8(%ebp),%eax
810000bd:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810000c0:	8b 55 08             	mov    0x8(%ebp),%edx
810000c3:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810000c6:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000c9:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810000cc:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000cf:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810000d2:	8b 75 08             	mov    0x8(%ebp),%esi
810000d5:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810000d7:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000da:	50                   	push   %eax
810000db:	52                   	push   %edx
810000dc:	51                   	push   %ecx
810000dd:	53                   	push   %ebx
810000de:	56                   	push   %esi
810000df:	ff 1f                	lcall  *(%edi)
810000e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810000e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810000e7:	83 c4 10             	add    $0x10,%esp
810000ea:	5b                   	pop    %ebx
810000eb:	5e                   	pop    %esi
810000ec:	5f                   	pop    %edi
810000ed:	5d                   	pop    %ebp
810000ee:	c3                   	ret    

810000ef <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810000ef:	55                   	push   %ebp
810000f0:	89 e5                	mov    %esp,%ebp
810000f2:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810000f5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810000f9:	7e 1b                	jle    81000116 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810000fb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000102:	8b 45 08             	mov    0x8(%ebp),%eax
81000105:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000108:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100010b:	50                   	push   %eax
8100010c:	e8 92 ff ff ff       	call   810000a3 <sys_call>
81000111:	83 c4 04             	add    $0x4,%esp
81000114:	eb 01                	jmp    81000117 <msleep+0x28>
    if (ms <= 0) return;
81000116:	90                   	nop

}
81000117:	c9                   	leave  
81000118:	c3                   	ret    

81000119 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000119:	55                   	push   %ebp
8100011a:	89 e5                	mov    %esp,%ebp
8100011c:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
8100011f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000126:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000129:	50                   	push   %eax
8100012a:	e8 74 ff ff ff       	call   810000a3 <sys_call>
8100012f:	83 c4 04             	add    $0x4,%esp
}
81000132:	c9                   	leave  
81000133:	c3                   	ret    

81000134 <print_msg>:

void print_msg(const char *fmt, int arg) {
81000134:	55                   	push   %ebp
81000135:	89 e5                	mov    %esp,%ebp
81000137:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
8100013a:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000141:	8b 45 08             	mov    0x8(%ebp),%eax
81000144:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000147:	8b 45 0c             	mov    0xc(%ebp),%eax
8100014a:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
8100014d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000150:	50                   	push   %eax
81000151:	e8 4d ff ff ff       	call   810000a3 <sys_call>
81000156:	83 c4 04             	add    $0x4,%esp
}
81000159:	90                   	nop
8100015a:	c9                   	leave  
8100015b:	c3                   	ret    

8100015c <fork>:

int fork (void) {
8100015c:	55                   	push   %ebp
8100015d:	89 e5                	mov    %esp,%ebp
8100015f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000162:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000169:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100016c:	50                   	push   %eax
8100016d:	e8 31 ff ff ff       	call   810000a3 <sys_call>
81000172:	83 c4 04             	add    $0x4,%esp
}
81000175:	c9                   	leave  
81000176:	c3                   	ret    

81000177 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000177:	55                   	push   %ebp
81000178:	89 e5                	mov    %esp,%ebp
8100017a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
8100017d:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000184:	8b 45 08             	mov    0x8(%ebp),%eax
81000187:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
8100018a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100018d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000190:	8b 45 10             	mov    0x10(%ebp),%eax
81000193:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000196:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000199:	50                   	push   %eax
8100019a:	e8 04 ff ff ff       	call   810000a3 <sys_call>
8100019f:	83 c4 04             	add    $0x4,%esp
}
810001a2:	c9                   	leave  
810001a3:	c3                   	ret    

810001a4 <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
810001a4:	55                   	push   %ebp
810001a5:	89 e5                	mov    %esp,%ebp
810001a7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810001aa:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810001b1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001b4:	50                   	push   %eax
810001b5:	e8 e9 fe ff ff       	call   810000a3 <sys_call>
810001ba:	83 c4 04             	add    $0x4,%esp
}
810001bd:	c9                   	leave  
810001be:	c3                   	ret    

810001bf <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810001bf:	55                   	push   %ebp
810001c0:	89 e5                	mov    %esp,%ebp
810001c2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810001c5:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810001cc:	8b 45 08             	mov    0x8(%ebp),%eax
810001cf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810001d2:	8b 45 0c             	mov    0xc(%ebp),%eax
810001d5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810001d8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001db:	50                   	push   %eax
810001dc:	e8 c2 fe ff ff       	call   810000a3 <sys_call>
810001e1:	83 c4 04             	add    $0x4,%esp
}
810001e4:	c9                   	leave  
810001e5:	c3                   	ret    

810001e6 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810001e6:	55                   	push   %ebp
810001e7:	89 e5                	mov    %esp,%ebp
810001e9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810001ec:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810001f3:	8b 45 08             	mov    0x8(%ebp),%eax
810001f6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810001f9:	8b 45 0c             	mov    0xc(%ebp),%eax
810001fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810001ff:	8b 45 10             	mov    0x10(%ebp),%eax
81000202:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000205:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000208:	50                   	push   %eax
81000209:	e8 95 fe ff ff       	call   810000a3 <sys_call>
8100020e:	83 c4 04             	add    $0x4,%esp
}
81000211:	c9                   	leave  
81000212:	c3                   	ret    

81000213 <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
81000213:	55                   	push   %ebp
81000214:	89 e5                	mov    %esp,%ebp
81000216:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000219:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
81000220:	8b 45 08             	mov    0x8(%ebp),%eax
81000223:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000226:	8b 45 0c             	mov    0xc(%ebp),%eax
81000229:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100022c:	8b 45 10             	mov    0x10(%ebp),%eax
8100022f:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000232:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000235:	50                   	push   %eax
81000236:	e8 68 fe ff ff       	call   810000a3 <sys_call>
8100023b:	83 c4 04             	add    $0x4,%esp
}
8100023e:	c9                   	leave  
8100023f:	c3                   	ret    

81000240 <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
81000240:	55                   	push   %ebp
81000241:	89 e5                	mov    %esp,%ebp
81000243:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000246:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
8100024d:	8b 45 08             	mov    0x8(%ebp),%eax
81000250:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
81000253:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000256:	50                   	push   %eax
81000257:	e8 47 fe ff ff       	call   810000a3 <sys_call>
8100025c:	83 c4 04             	add    $0x4,%esp
}
8100025f:	c9                   	leave  
81000260:	c3                   	ret    

81000261 <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
81000261:	55                   	push   %ebp
81000262:	89 e5                	mov    %esp,%ebp
81000264:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000267:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
8100026e:	8b 45 08             	mov    0x8(%ebp),%eax
81000271:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
81000274:	8b 45 0c             	mov    0xc(%ebp),%eax
81000277:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8100027a:	8b 45 10             	mov    0x10(%ebp),%eax
8100027d:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
81000280:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000283:	50                   	push   %eax
81000284:	e8 1a fe ff ff       	call   810000a3 <sys_call>
81000289:	83 c4 04             	add    $0x4,%esp
}
8100028c:	c9                   	leave  
8100028d:	c3                   	ret    

8100028e <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
8100028e:	55                   	push   %ebp
8100028f:	89 e5                	mov    %esp,%ebp
81000291:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000294:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
8100029b:	8b 45 08             	mov    0x8(%ebp),%eax
8100029e:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
810002a1:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002a4:	50                   	push   %eax
810002a5:	e8 f9 fd ff ff       	call   810000a3 <sys_call>
810002aa:	83 c4 04             	add    $0x4,%esp
}
810002ad:	c9                   	leave  
810002ae:	c3                   	ret    

810002af <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810002af:	55                   	push   %ebp
810002b0:	89 e5                	mov    %esp,%ebp
810002b2:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810002b5:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810002bc:	8b 45 08             	mov    0x8(%ebp),%eax
810002bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810002c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810002c5:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002cb:	50                   	push   %eax
810002cc:	e8 d2 fd ff ff       	call   810000a3 <sys_call>
810002d1:	83 c4 04             	add    $0x4,%esp
}
810002d4:	c9                   	leave  
810002d5:	c3                   	ret    

810002d6 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810002d6:	55                   	push   %ebp
810002d7:	89 e5                	mov    %esp,%ebp
810002d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810002dc:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810002e3:	8b 45 08             	mov    0x8(%ebp),%eax
810002e6:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810002e9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002ec:	50                   	push   %eax
810002ed:	e8 b1 fd ff ff       	call   810000a3 <sys_call>
810002f2:	83 c4 04             	add    $0x4,%esp
810002f5:	c9                   	leave  
810002f6:	c3                   	ret    

810002f7 <_iprintf_r>:
810002f7:	55                   	push   %ebp
810002f8:	89 e5                	mov    %esp,%ebp
810002fa:	83 ec 18             	sub    $0x18,%esp
810002fd:	8d 45 10             	lea    0x10(%ebp),%eax
81000300:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000303:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000306:	8b 45 08             	mov    0x8(%ebp),%eax
81000309:	8b 40 08             	mov    0x8(%eax),%eax
8100030c:	52                   	push   %edx
8100030d:	ff 75 0c             	push   0xc(%ebp)
81000310:	50                   	push   %eax
81000311:	ff 75 08             	push   0x8(%ebp)
81000314:	e8 f7 19 00 00       	call   81001d10 <_vfiprintf_r>
81000319:	83 c4 10             	add    $0x10,%esp
8100031c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100031f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000322:	c9                   	leave  
81000323:	c3                   	ret    

81000324 <iprintf>:
81000324:	55                   	push   %ebp
81000325:	89 e5                	mov    %esp,%ebp
81000327:	83 ec 18             	sub    $0x18,%esp
8100032a:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
8100032f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000332:	8d 45 0c             	lea    0xc(%ebp),%eax
81000335:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000338:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100033b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100033e:	8b 40 08             	mov    0x8(%eax),%eax
81000341:	52                   	push   %edx
81000342:	ff 75 08             	push   0x8(%ebp)
81000345:	50                   	push   %eax
81000346:	ff 75 f4             	push   -0xc(%ebp)
81000349:	e8 c2 19 00 00       	call   81001d10 <_vfiprintf_r>
8100034e:	83 c4 10             	add    $0x10,%esp
81000351:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000354:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000357:	c9                   	leave  
81000358:	c3                   	ret    

81000359 <_puts_r>:
81000359:	55                   	push   %ebp
8100035a:	89 e5                	mov    %esp,%ebp
8100035c:	83 ec 38             	sub    $0x38,%esp
8100035f:	83 ec 0c             	sub    $0xc,%esp
81000362:	ff 75 0c             	push   0xc(%ebp)
81000365:	e8 e6 00 00 00       	call   81000450 <strlen>
8100036a:	83 c4 10             	add    $0x10,%esp
8100036d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000370:	8b 45 0c             	mov    0xc(%ebp),%eax
81000373:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000376:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000379:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100037c:	c7 45 d4 25 46 00 81 	movl   $0x81004625,-0x2c(%ebp)
81000383:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100038a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100038d:	83 c0 01             	add    $0x1,%eax
81000390:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000393:	8d 45 cc             	lea    -0x34(%ebp),%eax
81000396:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000399:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810003a0:	8b 45 08             	mov    0x8(%ebp),%eax
810003a3:	8b 40 08             	mov    0x8(%eax),%eax
810003a6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810003a9:	8b 45 08             	mov    0x8(%ebp),%eax
810003ac:	89 45 ec             	mov    %eax,-0x14(%ebp)
810003af:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003b3:	74 18                	je     810003cd <_puts_r+0x74>
810003b5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810003b8:	8b 40 38             	mov    0x38(%eax),%eax
810003bb:	85 c0                	test   %eax,%eax
810003bd:	75 0e                	jne    810003cd <_puts_r+0x74>
810003bf:	83 ec 0c             	sub    $0xc,%esp
810003c2:	ff 75 ec             	push   -0x14(%ebp)
810003c5:	e8 f4 03 00 00       	call   810007be <__sinit>
810003ca:	83 c4 10             	add    $0x10,%esp
810003cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003d0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003d4:	98                   	cwtl   
810003d5:	25 00 20 00 00       	and    $0x2000,%eax
810003da:	85 c0                	test   %eax,%eax
810003dc:	75 24                	jne    81000402 <_puts_r+0xa9>
810003de:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003e1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003e5:	80 cc 20             	or     $0x20,%ah
810003e8:	89 c2                	mov    %eax,%edx
810003ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003ed:	66 89 50 0c          	mov    %dx,0xc(%eax)
810003f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003f4:	8b 40 64             	mov    0x64(%eax),%eax
810003f7:	80 e4 df             	and    $0xdf,%ah
810003fa:	89 c2                	mov    %eax,%edx
810003fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003ff:	89 50 64             	mov    %edx,0x64(%eax)
81000402:	83 ec 04             	sub    $0x4,%esp
81000405:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000408:	50                   	push   %eax
81000409:	ff 75 f0             	push   -0x10(%ebp)
8100040c:	ff 75 08             	push   0x8(%ebp)
8100040f:	e8 b7 04 00 00       	call   810008cb <__sfvwrite_r>
81000414:	83 c4 10             	add    $0x10,%esp
81000417:	85 c0                	test   %eax,%eax
81000419:	74 07                	je     81000422 <_puts_r+0xc9>
8100041b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000420:	eb 05                	jmp    81000427 <_puts_r+0xce>
81000422:	b8 0a 00 00 00       	mov    $0xa,%eax
81000427:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100042a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100042d:	c9                   	leave  
8100042e:	c3                   	ret    

8100042f <puts>:
8100042f:	55                   	push   %ebp
81000430:	89 e5                	mov    %esp,%ebp
81000432:	83 ec 08             	sub    $0x8,%esp
81000435:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
8100043a:	83 ec 08             	sub    $0x8,%esp
8100043d:	ff 75 08             	push   0x8(%ebp)
81000440:	50                   	push   %eax
81000441:	e8 13 ff ff ff       	call   81000359 <_puts_r>
81000446:	83 c4 10             	add    $0x10,%esp
81000449:	c9                   	leave  
8100044a:	c3                   	ret    
8100044b:	66 90                	xchg   %ax,%ax
8100044d:	66 90                	xchg   %ax,%ax
8100044f:	90                   	nop

81000450 <strlen>:
81000450:	55                   	push   %ebp
81000451:	89 e5                	mov    %esp,%ebp
81000453:	57                   	push   %edi
81000454:	8b 55 08             	mov    0x8(%ebp),%edx
81000457:	89 d7                	mov    %edx,%edi
81000459:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100045f:	74 25                	je     81000486 <L5>
81000461:	8a 0f                	mov    (%edi),%cl
81000463:	47                   	inc    %edi
81000464:	84 c9                	test   %cl,%cl
81000466:	74 56                	je     810004be <L15>
81000468:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100046e:	74 16                	je     81000486 <L5>
81000470:	8a 0f                	mov    (%edi),%cl
81000472:	47                   	inc    %edi
81000473:	84 c9                	test   %cl,%cl
81000475:	74 47                	je     810004be <L15>
81000477:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100047d:	74 07                	je     81000486 <L5>
8100047f:	8a 0f                	mov    (%edi),%cl
81000481:	47                   	inc    %edi
81000482:	84 c9                	test   %cl,%cl
81000484:	74 38                	je     810004be <L15>

81000486 <L5>:
81000486:	83 ef 04             	sub    $0x4,%edi
81000489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000490 <L10>:
81000490:	83 c7 04             	add    $0x4,%edi
81000493:	8b 0f                	mov    (%edi),%ecx
81000495:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100049b:	f7 d1                	not    %ecx
8100049d:	21 c8                	and    %ecx,%eax
8100049f:	a9 80 80 80 80       	test   $0x80808080,%eax
810004a4:	74 ea                	je     81000490 <L10>
810004a6:	f7 d1                	not    %ecx
810004a8:	47                   	inc    %edi
810004a9:	84 c9                	test   %cl,%cl
810004ab:	74 11                	je     810004be <L15>
810004ad:	47                   	inc    %edi
810004ae:	c1 e9 08             	shr    $0x8,%ecx
810004b1:	84 c9                	test   %cl,%cl
810004b3:	74 09                	je     810004be <L15>
810004b5:	47                   	inc    %edi
810004b6:	c1 e9 08             	shr    $0x8,%ecx
810004b9:	84 c9                	test   %cl,%cl
810004bb:	74 01                	je     810004be <L15>
810004bd:	47                   	inc    %edi

810004be <L15>:
810004be:	29 d7                	sub    %edx,%edi
810004c0:	8d 47 ff             	lea    -0x1(%edi),%eax
810004c3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810004c6:	5f                   	pop    %edi
810004c7:	c9                   	leave  
810004c8:	c3                   	ret    

810004c9 <std>:
810004c9:	55                   	push   %ebp
810004ca:	89 e5                	mov    %esp,%ebp
810004cc:	83 ec 08             	sub    $0x8,%esp
810004cf:	8b 45 08             	mov    0x8(%ebp),%eax
810004d2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810004d8:	8b 45 08             	mov    0x8(%ebp),%eax
810004db:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810004e2:	8b 45 08             	mov    0x8(%ebp),%eax
810004e5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810004ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810004ef:	89 c2                	mov    %eax,%edx
810004f1:	8b 45 08             	mov    0x8(%ebp),%eax
810004f4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810004f8:	8b 45 08             	mov    0x8(%ebp),%eax
810004fb:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000502:	8b 45 10             	mov    0x10(%ebp),%eax
81000505:	89 c2                	mov    %eax,%edx
81000507:	8b 45 08             	mov    0x8(%ebp),%eax
8100050a:	66 89 50 0e          	mov    %dx,0xe(%eax)
8100050e:	8b 45 08             	mov    0x8(%ebp),%eax
81000511:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000518:	8b 45 08             	mov    0x8(%ebp),%eax
8100051b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000522:	8b 45 08             	mov    0x8(%ebp),%eax
81000525:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100052c:	8b 45 08             	mov    0x8(%ebp),%eax
8100052f:	83 c0 5c             	add    $0x5c,%eax
81000532:	83 ec 04             	sub    $0x4,%esp
81000535:	6a 08                	push   $0x8
81000537:	6a 00                	push   $0x0
81000539:	50                   	push   %eax
8100053a:	e8 2e 15 00 00       	call   81001a6d <memset>
8100053f:	83 c4 10             	add    $0x10,%esp
81000542:	8b 45 08             	mov    0x8(%ebp),%eax
81000545:	8b 55 08             	mov    0x8(%ebp),%edx
81000548:	89 50 1c             	mov    %edx,0x1c(%eax)
8100054b:	8b 45 08             	mov    0x8(%ebp),%eax
8100054e:	c7 40 20 6a 2f 00 81 	movl   $0x81002f6a,0x20(%eax)
81000555:	8b 45 08             	mov    0x8(%ebp),%eax
81000558:	c7 40 24 b8 2f 00 81 	movl   $0x81002fb8,0x24(%eax)
8100055f:	8b 45 08             	mov    0x8(%ebp),%eax
81000562:	c7 40 28 13 30 00 81 	movl   $0x81003013,0x28(%eax)
81000569:	8b 45 08             	mov    0x8(%ebp),%eax
8100056c:	c7 40 2c 5d 30 00 81 	movl   $0x8100305d,0x2c(%eax)
81000573:	90                   	nop
81000574:	c9                   	leave  
81000575:	c3                   	ret    

81000576 <stdin_init>:
81000576:	55                   	push   %ebp
81000577:	89 e5                	mov    %esp,%ebp
81000579:	83 ec 08             	sub    $0x8,%esp
8100057c:	83 ec 04             	sub    $0x4,%esp
8100057f:	6a 00                	push   $0x0
81000581:	6a 04                	push   $0x4
81000583:	ff 75 08             	push   0x8(%ebp)
81000586:	e8 3e ff ff ff       	call   810004c9 <std>
8100058b:	83 c4 10             	add    $0x10,%esp
8100058e:	90                   	nop
8100058f:	c9                   	leave  
81000590:	c3                   	ret    

81000591 <stdout_init>:
81000591:	55                   	push   %ebp
81000592:	89 e5                	mov    %esp,%ebp
81000594:	83 ec 08             	sub    $0x8,%esp
81000597:	83 ec 04             	sub    $0x4,%esp
8100059a:	6a 01                	push   $0x1
8100059c:	6a 09                	push   $0x9
8100059e:	ff 75 08             	push   0x8(%ebp)
810005a1:	e8 23 ff ff ff       	call   810004c9 <std>
810005a6:	83 c4 10             	add    $0x10,%esp
810005a9:	90                   	nop
810005aa:	c9                   	leave  
810005ab:	c3                   	ret    

810005ac <stderr_init>:
810005ac:	55                   	push   %ebp
810005ad:	89 e5                	mov    %esp,%ebp
810005af:	83 ec 08             	sub    $0x8,%esp
810005b2:	83 ec 04             	sub    $0x4,%esp
810005b5:	6a 02                	push   $0x2
810005b7:	6a 12                	push   $0x12
810005b9:	ff 75 08             	push   0x8(%ebp)
810005bc:	e8 08 ff ff ff       	call   810004c9 <std>
810005c1:	83 c4 10             	add    $0x10,%esp
810005c4:	90                   	nop
810005c5:	c9                   	leave  
810005c6:	c3                   	ret    

810005c7 <__sfmoreglue>:
810005c7:	55                   	push   %ebp
810005c8:	89 e5                	mov    %esp,%ebp
810005ca:	53                   	push   %ebx
810005cb:	83 ec 14             	sub    $0x14,%esp
810005ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810005d1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810005d4:	6b c0 68             	imul   $0x68,%eax,%eax
810005d7:	83 c0 74             	add    $0x74,%eax
810005da:	83 ec 08             	sub    $0x8,%esp
810005dd:	50                   	push   %eax
810005de:	ff 75 08             	push   0x8(%ebp)
810005e1:	e8 e9 0a 00 00       	call   810010cf <_malloc_r>
810005e6:	83 c4 10             	add    $0x10,%esp
810005e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005ec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005f0:	75 07                	jne    810005f9 <__sfmoreglue+0x32>
810005f2:	b8 00 00 00 00       	mov    $0x0,%eax
810005f7:	eb 38                	jmp    81000631 <__sfmoreglue+0x6a>
810005f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005fc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81000602:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000605:	89 58 04             	mov    %ebx,0x4(%eax)
81000608:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100060b:	8d 50 0c             	lea    0xc(%eax),%edx
8100060e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000611:	89 50 08             	mov    %edx,0x8(%eax)
81000614:	89 d8                	mov    %ebx,%eax
81000616:	6b c0 68             	imul   $0x68,%eax,%eax
81000619:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100061c:	83 c2 0c             	add    $0xc,%edx
8100061f:	83 ec 04             	sub    $0x4,%esp
81000622:	50                   	push   %eax
81000623:	6a 00                	push   $0x0
81000625:	52                   	push   %edx
81000626:	e8 42 14 00 00       	call   81001a6d <memset>
8100062b:	83 c4 10             	add    $0x10,%esp
8100062e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000631:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000634:	c9                   	leave  
81000635:	c3                   	ret    

81000636 <__sfp>:
81000636:	55                   	push   %ebp
81000637:	89 e5                	mov    %esp,%ebp
81000639:	83 ec 18             	sub    $0x18,%esp
8100063c:	e8 16 02 00 00       	call   81000857 <__sfp_lock_acquire>
81000641:	a1 28 46 00 81       	mov    0x81004628,%eax
81000646:	8b 40 38             	mov    0x38(%eax),%eax
81000649:	85 c0                	test   %eax,%eax
8100064b:	75 11                	jne    8100065e <__sfp+0x28>
8100064d:	a1 28 46 00 81       	mov    0x81004628,%eax
81000652:	83 ec 0c             	sub    $0xc,%esp
81000655:	50                   	push   %eax
81000656:	e8 63 01 00 00       	call   810007be <__sinit>
8100065b:	83 c4 10             	add    $0x10,%esp
8100065e:	a1 28 46 00 81       	mov    0x81004628,%eax
81000663:	05 e0 02 00 00       	add    $0x2e0,%eax
81000668:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100066b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100066e:	8b 40 08             	mov    0x8(%eax),%eax
81000671:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000674:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000677:	8b 40 04             	mov    0x4(%eax),%eax
8100067a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100067d:	eb 10                	jmp    8100068f <__sfp+0x59>
8100067f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000682:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000686:	66 85 c0             	test   %ax,%ax
81000689:	74 58                	je     810006e3 <__sfp+0xad>
8100068b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100068f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000693:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000697:	79 e6                	jns    8100067f <__sfp+0x49>
81000699:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100069c:	8b 00                	mov    (%eax),%eax
8100069e:	85 c0                	test   %eax,%eax
810006a0:	75 1e                	jne    810006c0 <__sfp+0x8a>
810006a2:	83 ec 08             	sub    $0x8,%esp
810006a5:	6a 04                	push   $0x4
810006a7:	ff 75 08             	push   0x8(%ebp)
810006aa:	e8 18 ff ff ff       	call   810005c7 <__sfmoreglue>
810006af:	83 c4 10             	add    $0x10,%esp
810006b2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810006b5:	89 02                	mov    %eax,(%edx)
810006b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006ba:	8b 00                	mov    (%eax),%eax
810006bc:	85 c0                	test   %eax,%eax
810006be:	74 0a                	je     810006ca <__sfp+0x94>
810006c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006c3:	8b 00                	mov    (%eax),%eax
810006c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810006c8:	eb a1                	jmp    8100066b <__sfp+0x35>
810006ca:	90                   	nop
810006cb:	e8 8d 01 00 00       	call   8100085d <__sfp_lock_release>
810006d0:	8b 45 08             	mov    0x8(%ebp),%eax
810006d3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810006d9:	b8 00 00 00 00       	mov    $0x0,%eax
810006de:	e9 9e 00 00 00       	jmp    81000781 <__sfp+0x14b>
810006e3:	90                   	nop
810006e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810006ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810006f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81000700:	e8 58 01 00 00       	call   8100085d <__sfp_lock_release>
81000705:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000708:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100070e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000711:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000718:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100071b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000722:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000725:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100072c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100072f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000736:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000739:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000740:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000743:	83 c0 5c             	add    $0x5c,%eax
81000746:	83 ec 04             	sub    $0x4,%esp
81000749:	6a 08                	push   $0x8
8100074b:	6a 00                	push   $0x0
8100074d:	50                   	push   %eax
8100074e:	e8 1a 13 00 00       	call   81001a6d <memset>
81000753:	83 c4 10             	add    $0x10,%esp
81000756:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000759:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000760:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000763:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100076a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100076d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000774:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000777:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100077e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000781:	c9                   	leave  
81000782:	c3                   	ret    

81000783 <_cleanup_r>:
81000783:	55                   	push   %ebp
81000784:	89 e5                	mov    %esp,%ebp
81000786:	83 ec 18             	sub    $0x18,%esp
81000789:	c7 45 f4 96 33 00 81 	movl   $0x81003396,-0xc(%ebp)
81000790:	83 ec 08             	sub    $0x8,%esp
81000793:	ff 75 f4             	push   -0xc(%ebp)
81000796:	ff 75 08             	push   0x8(%ebp)
81000799:	e8 33 06 00 00       	call   81000dd1 <_fwalk_reent>
8100079e:	83 c4 10             	add    $0x10,%esp
810007a1:	90                   	nop
810007a2:	c9                   	leave  
810007a3:	c3                   	ret    

810007a4 <_cleanup>:
810007a4:	55                   	push   %ebp
810007a5:	89 e5                	mov    %esp,%ebp
810007a7:	83 ec 08             	sub    $0x8,%esp
810007aa:	a1 28 46 00 81       	mov    0x81004628,%eax
810007af:	83 ec 0c             	sub    $0xc,%esp
810007b2:	50                   	push   %eax
810007b3:	e8 cb ff ff ff       	call   81000783 <_cleanup_r>
810007b8:	83 c4 10             	add    $0x10,%esp
810007bb:	90                   	nop
810007bc:	c9                   	leave  
810007bd:	c3                   	ret    

810007be <__sinit>:
810007be:	55                   	push   %ebp
810007bf:	89 e5                	mov    %esp,%ebp
810007c1:	83 ec 08             	sub    $0x8,%esp
810007c4:	e8 9a 00 00 00       	call   81000863 <__sinit_lock_acquire>
810007c9:	8b 45 08             	mov    0x8(%ebp),%eax
810007cc:	8b 40 38             	mov    0x38(%eax),%eax
810007cf:	85 c0                	test   %eax,%eax
810007d1:	74 07                	je     810007da <__sinit+0x1c>
810007d3:	e8 91 00 00 00       	call   81000869 <__sinit_lock_release>
810007d8:	eb 7b                	jmp    81000855 <__sinit+0x97>
810007da:	8b 45 08             	mov    0x8(%ebp),%eax
810007dd:	c7 40 3c 83 07 00 81 	movl   $0x81000783,0x3c(%eax)
810007e4:	8b 45 08             	mov    0x8(%ebp),%eax
810007e7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810007ee:	00 00 00 
810007f1:	8b 45 08             	mov    0x8(%ebp),%eax
810007f4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810007fb:	00 00 00 
810007fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000801:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81000807:	8b 45 08             	mov    0x8(%ebp),%eax
8100080a:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000810:	8b 45 08             	mov    0x8(%ebp),%eax
81000813:	8b 40 04             	mov    0x4(%eax),%eax
81000816:	83 ec 0c             	sub    $0xc,%esp
81000819:	50                   	push   %eax
8100081a:	e8 57 fd ff ff       	call   81000576 <stdin_init>
8100081f:	83 c4 10             	add    $0x10,%esp
81000822:	8b 45 08             	mov    0x8(%ebp),%eax
81000825:	8b 40 08             	mov    0x8(%eax),%eax
81000828:	83 ec 0c             	sub    $0xc,%esp
8100082b:	50                   	push   %eax
8100082c:	e8 60 fd ff ff       	call   81000591 <stdout_init>
81000831:	83 c4 10             	add    $0x10,%esp
81000834:	8b 45 08             	mov    0x8(%ebp),%eax
81000837:	8b 40 0c             	mov    0xc(%eax),%eax
8100083a:	83 ec 0c             	sub    $0xc,%esp
8100083d:	50                   	push   %eax
8100083e:	e8 69 fd ff ff       	call   810005ac <stderr_init>
81000843:	83 c4 10             	add    $0x10,%esp
81000846:	8b 45 08             	mov    0x8(%ebp),%eax
81000849:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000850:	e8 14 00 00 00       	call   81000869 <__sinit_lock_release>
81000855:	c9                   	leave  
81000856:	c3                   	ret    

81000857 <__sfp_lock_acquire>:
81000857:	55                   	push   %ebp
81000858:	89 e5                	mov    %esp,%ebp
8100085a:	90                   	nop
8100085b:	5d                   	pop    %ebp
8100085c:	c3                   	ret    

8100085d <__sfp_lock_release>:
8100085d:	55                   	push   %ebp
8100085e:	89 e5                	mov    %esp,%ebp
81000860:	90                   	nop
81000861:	5d                   	pop    %ebp
81000862:	c3                   	ret    

81000863 <__sinit_lock_acquire>:
81000863:	55                   	push   %ebp
81000864:	89 e5                	mov    %esp,%ebp
81000866:	90                   	nop
81000867:	5d                   	pop    %ebp
81000868:	c3                   	ret    

81000869 <__sinit_lock_release>:
81000869:	55                   	push   %ebp
8100086a:	89 e5                	mov    %esp,%ebp
8100086c:	90                   	nop
8100086d:	5d                   	pop    %ebp
8100086e:	c3                   	ret    

8100086f <__fp_lock>:
8100086f:	55                   	push   %ebp
81000870:	89 e5                	mov    %esp,%ebp
81000872:	b8 00 00 00 00       	mov    $0x0,%eax
81000877:	5d                   	pop    %ebp
81000878:	c3                   	ret    

81000879 <__fp_unlock>:
81000879:	55                   	push   %ebp
8100087a:	89 e5                	mov    %esp,%ebp
8100087c:	b8 00 00 00 00       	mov    $0x0,%eax
81000881:	5d                   	pop    %ebp
81000882:	c3                   	ret    

81000883 <__fp_lock_all>:
81000883:	55                   	push   %ebp
81000884:	89 e5                	mov    %esp,%ebp
81000886:	83 ec 08             	sub    $0x8,%esp
81000889:	e8 c9 ff ff ff       	call   81000857 <__sfp_lock_acquire>
8100088e:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
81000893:	83 ec 08             	sub    $0x8,%esp
81000896:	68 6f 08 00 81       	push   $0x8100086f
8100089b:	50                   	push   %eax
8100089c:	e8 c8 04 00 00       	call   81000d69 <_fwalk>
810008a1:	83 c4 10             	add    $0x10,%esp
810008a4:	90                   	nop
810008a5:	c9                   	leave  
810008a6:	c3                   	ret    

810008a7 <__fp_unlock_all>:
810008a7:	55                   	push   %ebp
810008a8:	89 e5                	mov    %esp,%ebp
810008aa:	83 ec 08             	sub    $0x8,%esp
810008ad:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
810008b2:	83 ec 08             	sub    $0x8,%esp
810008b5:	68 79 08 00 81       	push   $0x81000879
810008ba:	50                   	push   %eax
810008bb:	e8 a9 04 00 00       	call   81000d69 <_fwalk>
810008c0:	83 c4 10             	add    $0x10,%esp
810008c3:	e8 95 ff ff ff       	call   8100085d <__sfp_lock_release>
810008c8:	90                   	nop
810008c9:	c9                   	leave  
810008ca:	c3                   	ret    

810008cb <__sfvwrite_r>:
810008cb:	55                   	push   %ebp
810008cc:	89 e5                	mov    %esp,%ebp
810008ce:	57                   	push   %edi
810008cf:	56                   	push   %esi
810008d0:	53                   	push   %ebx
810008d1:	83 ec 3c             	sub    $0x3c,%esp
810008d4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810008d7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810008de:	8b 45 10             	mov    0x10(%ebp),%eax
810008e1:	8b 78 08             	mov    0x8(%eax),%edi
810008e4:	85 ff                	test   %edi,%edi
810008e6:	75 0a                	jne    810008f2 <__sfvwrite_r+0x27>
810008e8:	b8 00 00 00 00       	mov    $0x0,%eax
810008ed:	e9 6f 04 00 00       	jmp    81000d61 <__sfvwrite_r+0x496>
810008f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810008f6:	98                   	cwtl   
810008f7:	83 e0 08             	and    $0x8,%eax
810008fa:	85 c0                	test   %eax,%eax
810008fc:	74 07                	je     81000905 <__sfvwrite_r+0x3a>
810008fe:	8b 43 10             	mov    0x10(%ebx),%eax
81000901:	85 c0                	test   %eax,%eax
81000903:	75 1d                	jne    81000922 <__sfvwrite_r+0x57>
81000905:	83 ec 08             	sub    $0x8,%esp
81000908:	53                   	push   %ebx
81000909:	ff 75 08             	push   0x8(%ebp)
8100090c:	e8 ea 28 00 00       	call   810031fb <__swsetup_r>
81000911:	83 c4 10             	add    $0x10,%esp
81000914:	85 c0                	test   %eax,%eax
81000916:	74 0a                	je     81000922 <__sfvwrite_r+0x57>
81000918:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100091d:	e9 3f 04 00 00       	jmp    81000d61 <__sfvwrite_r+0x496>
81000922:	8b 45 10             	mov    0x10(%ebp),%eax
81000925:	8b 00                	mov    (%eax),%eax
81000927:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100092a:	bf 00 00 00 00       	mov    $0x0,%edi
8100092f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000933:	98                   	cwtl   
81000934:	83 e0 02             	and    $0x2,%eax
81000937:	85 c0                	test   %eax,%eax
81000939:	74 68                	je     810009a3 <__sfvwrite_r+0xd8>
8100093b:	eb 11                	jmp    8100094e <__sfvwrite_r+0x83>
8100093d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000940:	8b 08                	mov    (%eax),%ecx
81000942:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000945:	8b 78 04             	mov    0x4(%eax),%edi
81000948:	83 c0 08             	add    $0x8,%eax
8100094b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100094e:	85 ff                	test   %edi,%edi
81000950:	74 eb                	je     8100093d <__sfvwrite_r+0x72>
81000952:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000955:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8100095a:	39 c7                	cmp    %eax,%edi
8100095c:	0f 46 c7             	cmovbe %edi,%eax
8100095f:	89 c2                	mov    %eax,%edx
81000961:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000964:	52                   	push   %edx
81000965:	ff 75 c4             	push   -0x3c(%ebp)
81000968:	50                   	push   %eax
81000969:	ff 75 08             	push   0x8(%ebp)
8100096c:	ff d1                	call   *%ecx
8100096e:	83 c4 10             	add    $0x10,%esp
81000971:	89 c6                	mov    %eax,%esi
81000973:	85 f6                	test   %esi,%esi
81000975:	0f 8e cf 03 00 00    	jle    81000d4a <__sfvwrite_r+0x47f>
8100097b:	89 f0                	mov    %esi,%eax
8100097d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000980:	89 f0                	mov    %esi,%eax
81000982:	29 c7                	sub    %eax,%edi
81000984:	8b 45 10             	mov    0x10(%ebp),%eax
81000987:	8b 40 08             	mov    0x8(%eax),%eax
8100098a:	89 f2                	mov    %esi,%edx
8100098c:	29 d0                	sub    %edx,%eax
8100098e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000991:	89 41 08             	mov    %eax,0x8(%ecx)
81000994:	8b 45 10             	mov    0x10(%ebp),%eax
81000997:	8b 40 08             	mov    0x8(%eax),%eax
8100099a:	85 c0                	test   %eax,%eax
8100099c:	75 b0                	jne    8100094e <__sfvwrite_r+0x83>
8100099e:	e9 a0 03 00 00       	jmp    81000d43 <__sfvwrite_r+0x478>
810009a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009a7:	98                   	cwtl   
810009a8:	83 e0 01             	and    $0x1,%eax
810009ab:	85 c0                	test   %eax,%eax
810009ad:	0f 85 44 02 00 00    	jne    81000bf7 <__sfvwrite_r+0x32c>
810009b3:	eb 11                	jmp    810009c6 <__sfvwrite_r+0xfb>
810009b5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810009b8:	8b 08                	mov    (%eax),%ecx
810009ba:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810009bd:	8b 78 04             	mov    0x4(%eax),%edi
810009c0:	83 c0 08             	add    $0x8,%eax
810009c3:	89 45 c0             	mov    %eax,-0x40(%ebp)
810009c6:	85 ff                	test   %edi,%edi
810009c8:	74 eb                	je     810009b5 <__sfvwrite_r+0xea>
810009ca:	8b 73 08             	mov    0x8(%ebx),%esi
810009cd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009d1:	98                   	cwtl   
810009d2:	25 00 02 00 00       	and    $0x200,%eax
810009d7:	85 c0                	test   %eax,%eax
810009d9:	0f 84 4f 01 00 00    	je     81000b2e <__sfvwrite_r+0x263>
810009df:	89 f0                	mov    %esi,%eax
810009e1:	39 c7                	cmp    %eax,%edi
810009e3:	0f 82 12 01 00 00    	jb     81000afb <__sfvwrite_r+0x230>
810009e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009ed:	98                   	cwtl   
810009ee:	25 80 04 00 00       	and    $0x480,%eax
810009f3:	85 c0                	test   %eax,%eax
810009f5:	0f 84 00 01 00 00    	je     81000afb <__sfvwrite_r+0x230>
810009fb:	8b 03                	mov    (%ebx),%eax
810009fd:	8b 53 10             	mov    0x10(%ebx),%edx
81000a00:	29 d0                	sub    %edx,%eax
81000a02:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000a05:	8b 53 14             	mov    0x14(%ebx),%edx
81000a08:	89 d0                	mov    %edx,%eax
81000a0a:	01 c0                	add    %eax,%eax
81000a0c:	01 d0                	add    %edx,%eax
81000a0e:	89 c2                	mov    %eax,%edx
81000a10:	c1 ea 1f             	shr    $0x1f,%edx
81000a13:	01 d0                	add    %edx,%eax
81000a15:	d1 f8                	sar    %eax
81000a17:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a1a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a1d:	01 f8                	add    %edi,%eax
81000a1f:	8d 50 01             	lea    0x1(%eax),%edx
81000a22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a25:	39 c2                	cmp    %eax,%edx
81000a27:	76 0b                	jbe    81000a34 <__sfvwrite_r+0x169>
81000a29:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a2c:	01 f8                	add    %edi,%eax
81000a2e:	83 c0 01             	add    $0x1,%eax
81000a31:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a34:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a38:	98                   	cwtl   
81000a39:	25 00 04 00 00       	and    $0x400,%eax
81000a3e:	85 c0                	test   %eax,%eax
81000a40:	74 4f                	je     81000a91 <__sfvwrite_r+0x1c6>
81000a42:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a45:	83 ec 08             	sub    $0x8,%esp
81000a48:	50                   	push   %eax
81000a49:	ff 75 08             	push   0x8(%ebp)
81000a4c:	e8 7e 06 00 00       	call   810010cf <_malloc_r>
81000a51:	83 c4 10             	add    $0x10,%esp
81000a54:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000a57:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a5b:	75 0e                	jne    81000a6b <__sfvwrite_r+0x1a0>
81000a5d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a60:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000a66:	e9 e6 02 00 00       	jmp    81000d51 <__sfvwrite_r+0x486>
81000a6b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000a6e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a71:	83 ec 04             	sub    $0x4,%esp
81000a74:	52                   	push   %edx
81000a75:	50                   	push   %eax
81000a76:	ff 75 dc             	push   -0x24(%ebp)
81000a79:	e8 1a 0f 00 00       	call   81001998 <memcpy>
81000a7e:	83 c4 10             	add    $0x10,%esp
81000a81:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a85:	66 25 7f fb          	and    $0xfb7f,%ax
81000a89:	0c 80                	or     $0x80,%al
81000a8b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a8f:	eb 49                	jmp    81000ada <__sfvwrite_r+0x20f>
81000a91:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000a94:	8b 43 10             	mov    0x10(%ebx),%eax
81000a97:	83 ec 04             	sub    $0x4,%esp
81000a9a:	52                   	push   %edx
81000a9b:	50                   	push   %eax
81000a9c:	ff 75 08             	push   0x8(%ebp)
81000a9f:	e8 ac 1b 00 00       	call   81002650 <_realloc_r>
81000aa4:	83 c4 10             	add    $0x10,%esp
81000aa7:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000aaa:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000aae:	75 2a                	jne    81000ada <__sfvwrite_r+0x20f>
81000ab0:	8b 43 10             	mov    0x10(%ebx),%eax
81000ab3:	83 ec 08             	sub    $0x8,%esp
81000ab6:	50                   	push   %eax
81000ab7:	ff 75 08             	push   0x8(%ebp)
81000aba:	e8 67 2e 00 00       	call   81003926 <_free_r>
81000abf:	83 c4 10             	add    $0x10,%esp
81000ac2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ac6:	24 7f                	and    $0x7f,%al
81000ac8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000acc:	8b 45 08             	mov    0x8(%ebp),%eax
81000acf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ad5:	e9 77 02 00 00       	jmp    81000d51 <__sfvwrite_r+0x486>
81000ada:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000add:	89 43 10             	mov    %eax,0x10(%ebx)
81000ae0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000ae3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ae6:	01 d0                	add    %edx,%eax
81000ae8:	89 03                	mov    %eax,(%ebx)
81000aea:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000aed:	89 43 14             	mov    %eax,0x14(%ebx)
81000af0:	89 fe                	mov    %edi,%esi
81000af2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000af5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000af8:	89 43 08             	mov    %eax,0x8(%ebx)
81000afb:	89 f0                	mov    %esi,%eax
81000afd:	39 c7                	cmp    %eax,%edi
81000aff:	73 02                	jae    81000b03 <__sfvwrite_r+0x238>
81000b01:	89 fe                	mov    %edi,%esi
81000b03:	89 f2                	mov    %esi,%edx
81000b05:	8b 03                	mov    (%ebx),%eax
81000b07:	83 ec 04             	sub    $0x4,%esp
81000b0a:	52                   	push   %edx
81000b0b:	ff 75 c4             	push   -0x3c(%ebp)
81000b0e:	50                   	push   %eax
81000b0f:	e8 cc 0e 00 00       	call   810019e0 <memmove>
81000b14:	83 c4 10             	add    $0x10,%esp
81000b17:	8b 43 08             	mov    0x8(%ebx),%eax
81000b1a:	29 f0                	sub    %esi,%eax
81000b1c:	89 43 08             	mov    %eax,0x8(%ebx)
81000b1f:	8b 03                	mov    (%ebx),%eax
81000b21:	89 f2                	mov    %esi,%edx
81000b23:	01 d0                	add    %edx,%eax
81000b25:	89 03                	mov    %eax,(%ebx)
81000b27:	89 fe                	mov    %edi,%esi
81000b29:	e9 9d 00 00 00       	jmp    81000bcb <__sfvwrite_r+0x300>
81000b2e:	8b 13                	mov    (%ebx),%edx
81000b30:	8b 43 10             	mov    0x10(%ebx),%eax
81000b33:	39 c2                	cmp    %eax,%edx
81000b35:	77 07                	ja     81000b3e <__sfvwrite_r+0x273>
81000b37:	8b 43 14             	mov    0x14(%ebx),%eax
81000b3a:	39 c7                	cmp    %eax,%edi
81000b3c:	73 4c                	jae    81000b8a <__sfvwrite_r+0x2bf>
81000b3e:	89 f0                	mov    %esi,%eax
81000b40:	39 c7                	cmp    %eax,%edi
81000b42:	0f 46 c7             	cmovbe %edi,%eax
81000b45:	89 c6                	mov    %eax,%esi
81000b47:	89 f2                	mov    %esi,%edx
81000b49:	8b 03                	mov    (%ebx),%eax
81000b4b:	83 ec 04             	sub    $0x4,%esp
81000b4e:	52                   	push   %edx
81000b4f:	ff 75 c4             	push   -0x3c(%ebp)
81000b52:	50                   	push   %eax
81000b53:	e8 88 0e 00 00       	call   810019e0 <memmove>
81000b58:	83 c4 10             	add    $0x10,%esp
81000b5b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b5e:	29 f0                	sub    %esi,%eax
81000b60:	89 43 08             	mov    %eax,0x8(%ebx)
81000b63:	8b 03                	mov    (%ebx),%eax
81000b65:	89 f2                	mov    %esi,%edx
81000b67:	01 d0                	add    %edx,%eax
81000b69:	89 03                	mov    %eax,(%ebx)
81000b6b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b6e:	85 c0                	test   %eax,%eax
81000b70:	75 58                	jne    81000bca <__sfvwrite_r+0x2ff>
81000b72:	83 ec 08             	sub    $0x8,%esp
81000b75:	53                   	push   %ebx
81000b76:	ff 75 08             	push   0x8(%ebp)
81000b79:	e8 62 2b 00 00       	call   810036e0 <_fflush_r>
81000b7e:	83 c4 10             	add    $0x10,%esp
81000b81:	85 c0                	test   %eax,%eax
81000b83:	74 45                	je     81000bca <__sfvwrite_r+0x2ff>
81000b85:	e9 c7 01 00 00       	jmp    81000d51 <__sfvwrite_r+0x486>
81000b8a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000b90:	77 04                	ja     81000b96 <__sfvwrite_r+0x2cb>
81000b92:	89 f8                	mov    %edi,%eax
81000b94:	eb 05                	jmp    81000b9b <__sfvwrite_r+0x2d0>
81000b96:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000b9b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000b9e:	99                   	cltd   
81000b9f:	f7 f9                	idiv   %ecx
81000ba1:	89 c2                	mov    %eax,%edx
81000ba3:	8b 43 14             	mov    0x14(%ebx),%eax
81000ba6:	89 d6                	mov    %edx,%esi
81000ba8:	0f af f0             	imul   %eax,%esi
81000bab:	8b 53 24             	mov    0x24(%ebx),%edx
81000bae:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000bb1:	56                   	push   %esi
81000bb2:	ff 75 c4             	push   -0x3c(%ebp)
81000bb5:	50                   	push   %eax
81000bb6:	ff 75 08             	push   0x8(%ebp)
81000bb9:	ff d2                	call   *%edx
81000bbb:	83 c4 10             	add    $0x10,%esp
81000bbe:	89 c6                	mov    %eax,%esi
81000bc0:	85 f6                	test   %esi,%esi
81000bc2:	0f 8e 85 01 00 00    	jle    81000d4d <__sfvwrite_r+0x482>
81000bc8:	eb 01                	jmp    81000bcb <__sfvwrite_r+0x300>
81000bca:	90                   	nop
81000bcb:	89 f0                	mov    %esi,%eax
81000bcd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000bd0:	89 f0                	mov    %esi,%eax
81000bd2:	29 c7                	sub    %eax,%edi
81000bd4:	8b 45 10             	mov    0x10(%ebp),%eax
81000bd7:	8b 40 08             	mov    0x8(%eax),%eax
81000bda:	89 f2                	mov    %esi,%edx
81000bdc:	29 d0                	sub    %edx,%eax
81000bde:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000be1:	89 41 08             	mov    %eax,0x8(%ecx)
81000be4:	8b 45 10             	mov    0x10(%ebp),%eax
81000be7:	8b 40 08             	mov    0x8(%eax),%eax
81000bea:	85 c0                	test   %eax,%eax
81000bec:	0f 85 d4 fd ff ff    	jne    810009c6 <__sfvwrite_r+0xfb>
81000bf2:	e9 4c 01 00 00       	jmp    81000d43 <__sfvwrite_r+0x478>
81000bf7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000bfe:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000c05:	eb 18                	jmp    81000c1f <__sfvwrite_r+0x354>
81000c07:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000c0e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000c11:	8b 08                	mov    (%eax),%ecx
81000c13:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000c16:	8b 78 04             	mov    0x4(%eax),%edi
81000c19:	83 c0 08             	add    $0x8,%eax
81000c1c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000c1f:	85 ff                	test   %edi,%edi
81000c21:	74 e4                	je     81000c07 <__sfvwrite_r+0x33c>
81000c23:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c27:	75 32                	jne    81000c5b <__sfvwrite_r+0x390>
81000c29:	83 ec 04             	sub    $0x4,%esp
81000c2c:	57                   	push   %edi
81000c2d:	6a 0a                	push   $0xa
81000c2f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000c32:	56                   	push   %esi
81000c33:	e8 c8 0c 00 00       	call   81001900 <memchr>
81000c38:	83 c4 10             	add    $0x10,%esp
81000c3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000c3e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000c42:	74 0a                	je     81000c4e <__sfvwrite_r+0x383>
81000c44:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000c47:	83 c0 01             	add    $0x1,%eax
81000c4a:	29 f0                	sub    %esi,%eax
81000c4c:	eb 03                	jmp    81000c51 <__sfvwrite_r+0x386>
81000c4e:	8d 47 01             	lea    0x1(%edi),%eax
81000c51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000c54:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000c5b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000c5e:	39 c7                	cmp    %eax,%edi
81000c60:	0f 46 c7             	cmovbe %edi,%eax
81000c63:	89 c1                	mov    %eax,%ecx
81000c65:	8b 53 08             	mov    0x8(%ebx),%edx
81000c68:	8b 43 14             	mov    0x14(%ebx),%eax
81000c6b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000c6e:	8b 13                	mov    (%ebx),%edx
81000c70:	8b 43 10             	mov    0x10(%ebx),%eax
81000c73:	39 c2                	cmp    %eax,%edx
81000c75:	76 38                	jbe    81000caf <__sfvwrite_r+0x3e4>
81000c77:	39 f1                	cmp    %esi,%ecx
81000c79:	7e 34                	jle    81000caf <__sfvwrite_r+0x3e4>
81000c7b:	89 f2                	mov    %esi,%edx
81000c7d:	8b 03                	mov    (%ebx),%eax
81000c7f:	83 ec 04             	sub    $0x4,%esp
81000c82:	52                   	push   %edx
81000c83:	ff 75 c4             	push   -0x3c(%ebp)
81000c86:	50                   	push   %eax
81000c87:	e8 54 0d 00 00       	call   810019e0 <memmove>
81000c8c:	83 c4 10             	add    $0x10,%esp
81000c8f:	8b 03                	mov    (%ebx),%eax
81000c91:	89 f2                	mov    %esi,%edx
81000c93:	01 d0                	add    %edx,%eax
81000c95:	89 03                	mov    %eax,(%ebx)
81000c97:	83 ec 08             	sub    $0x8,%esp
81000c9a:	53                   	push   %ebx
81000c9b:	ff 75 08             	push   0x8(%ebp)
81000c9e:	e8 3d 2a 00 00       	call   810036e0 <_fflush_r>
81000ca3:	83 c4 10             	add    $0x10,%esp
81000ca6:	85 c0                	test   %eax,%eax
81000ca8:	74 4f                	je     81000cf9 <__sfvwrite_r+0x42e>
81000caa:	e9 a2 00 00 00       	jmp    81000d51 <__sfvwrite_r+0x486>
81000caf:	8b 73 14             	mov    0x14(%ebx),%esi
81000cb2:	89 c8                	mov    %ecx,%eax
81000cb4:	39 c6                	cmp    %eax,%esi
81000cb6:	7f 1b                	jg     81000cd3 <__sfvwrite_r+0x408>
81000cb8:	8b 53 24             	mov    0x24(%ebx),%edx
81000cbb:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cbe:	56                   	push   %esi
81000cbf:	ff 75 c4             	push   -0x3c(%ebp)
81000cc2:	50                   	push   %eax
81000cc3:	ff 75 08             	push   0x8(%ebp)
81000cc6:	ff d2                	call   *%edx
81000cc8:	83 c4 10             	add    $0x10,%esp
81000ccb:	89 c6                	mov    %eax,%esi
81000ccd:	85 f6                	test   %esi,%esi
81000ccf:	7f 28                	jg     81000cf9 <__sfvwrite_r+0x42e>
81000cd1:	eb 7e                	jmp    81000d51 <__sfvwrite_r+0x486>
81000cd3:	89 ce                	mov    %ecx,%esi
81000cd5:	89 f2                	mov    %esi,%edx
81000cd7:	8b 03                	mov    (%ebx),%eax
81000cd9:	83 ec 04             	sub    $0x4,%esp
81000cdc:	52                   	push   %edx
81000cdd:	ff 75 c4             	push   -0x3c(%ebp)
81000ce0:	50                   	push   %eax
81000ce1:	e8 fa 0c 00 00       	call   810019e0 <memmove>
81000ce6:	83 c4 10             	add    $0x10,%esp
81000ce9:	8b 43 08             	mov    0x8(%ebx),%eax
81000cec:	29 f0                	sub    %esi,%eax
81000cee:	89 43 08             	mov    %eax,0x8(%ebx)
81000cf1:	8b 03                	mov    (%ebx),%eax
81000cf3:	89 f2                	mov    %esi,%edx
81000cf5:	01 d0                	add    %edx,%eax
81000cf7:	89 03                	mov    %eax,(%ebx)
81000cf9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000cfc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000d00:	75 1a                	jne    81000d1c <__sfvwrite_r+0x451>
81000d02:	83 ec 08             	sub    $0x8,%esp
81000d05:	53                   	push   %ebx
81000d06:	ff 75 08             	push   0x8(%ebp)
81000d09:	e8 d2 29 00 00       	call   810036e0 <_fflush_r>
81000d0e:	83 c4 10             	add    $0x10,%esp
81000d11:	85 c0                	test   %eax,%eax
81000d13:	75 3b                	jne    81000d50 <__sfvwrite_r+0x485>
81000d15:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d1c:	89 f0                	mov    %esi,%eax
81000d1e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000d21:	89 f0                	mov    %esi,%eax
81000d23:	29 c7                	sub    %eax,%edi
81000d25:	8b 45 10             	mov    0x10(%ebp),%eax
81000d28:	8b 40 08             	mov    0x8(%eax),%eax
81000d2b:	89 f2                	mov    %esi,%edx
81000d2d:	29 d0                	sub    %edx,%eax
81000d2f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d32:	89 41 08             	mov    %eax,0x8(%ecx)
81000d35:	8b 45 10             	mov    0x10(%ebp),%eax
81000d38:	8b 40 08             	mov    0x8(%eax),%eax
81000d3b:	85 c0                	test   %eax,%eax
81000d3d:	0f 85 dc fe ff ff    	jne    81000c1f <__sfvwrite_r+0x354>
81000d43:	b8 00 00 00 00       	mov    $0x0,%eax
81000d48:	eb 17                	jmp    81000d61 <__sfvwrite_r+0x496>
81000d4a:	90                   	nop
81000d4b:	eb 04                	jmp    81000d51 <__sfvwrite_r+0x486>
81000d4d:	90                   	nop
81000d4e:	eb 01                	jmp    81000d51 <__sfvwrite_r+0x486>
81000d50:	90                   	nop
81000d51:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d55:	83 c8 40             	or     $0x40,%eax
81000d58:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000d5c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000d61:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000d64:	5b                   	pop    %ebx
81000d65:	5e                   	pop    %esi
81000d66:	5f                   	pop    %edi
81000d67:	5d                   	pop    %ebp
81000d68:	c3                   	ret    

81000d69 <_fwalk>:
81000d69:	55                   	push   %ebp
81000d6a:	89 e5                	mov    %esp,%ebp
81000d6c:	57                   	push   %edi
81000d6d:	56                   	push   %esi
81000d6e:	53                   	push   %ebx
81000d6f:	83 ec 1c             	sub    $0x1c,%esp
81000d72:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d79:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000d82:	eb 3e                	jmp    81000dc2 <_fwalk+0x59>
81000d84:	8b 5e 08             	mov    0x8(%esi),%ebx
81000d87:	8b 7e 04             	mov    0x4(%esi),%edi
81000d8a:	eb 2d                	jmp    81000db9 <_fwalk+0x50>
81000d8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d90:	66 85 c0             	test   %ax,%ax
81000d93:	74 21                	je     81000db6 <_fwalk+0x4d>
81000d95:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d99:	66 83 f8 01          	cmp    $0x1,%ax
81000d9d:	74 17                	je     81000db6 <_fwalk+0x4d>
81000d9f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000da3:	66 83 f8 ff          	cmp    $0xffff,%ax
81000da7:	74 0d                	je     81000db6 <_fwalk+0x4d>
81000da9:	83 ec 0c             	sub    $0xc,%esp
81000dac:	53                   	push   %ebx
81000dad:	ff 55 0c             	call   *0xc(%ebp)
81000db0:	83 c4 10             	add    $0x10,%esp
81000db3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000db6:	83 c3 68             	add    $0x68,%ebx
81000db9:	83 ef 01             	sub    $0x1,%edi
81000dbc:	85 ff                	test   %edi,%edi
81000dbe:	79 cc                	jns    81000d8c <_fwalk+0x23>
81000dc0:	8b 36                	mov    (%esi),%esi
81000dc2:	85 f6                	test   %esi,%esi
81000dc4:	75 be                	jne    81000d84 <_fwalk+0x1b>
81000dc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000dc9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000dcc:	5b                   	pop    %ebx
81000dcd:	5e                   	pop    %esi
81000dce:	5f                   	pop    %edi
81000dcf:	5d                   	pop    %ebp
81000dd0:	c3                   	ret    

81000dd1 <_fwalk_reent>:
81000dd1:	55                   	push   %ebp
81000dd2:	89 e5                	mov    %esp,%ebp
81000dd4:	57                   	push   %edi
81000dd5:	56                   	push   %esi
81000dd6:	53                   	push   %ebx
81000dd7:	83 ec 1c             	sub    $0x1c,%esp
81000dda:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000de1:	8b 45 08             	mov    0x8(%ebp),%eax
81000de4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000dea:	eb 41                	jmp    81000e2d <_fwalk_reent+0x5c>
81000dec:	8b 5e 08             	mov    0x8(%esi),%ebx
81000def:	8b 7e 04             	mov    0x4(%esi),%edi
81000df2:	eb 30                	jmp    81000e24 <_fwalk_reent+0x53>
81000df4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000df8:	66 85 c0             	test   %ax,%ax
81000dfb:	74 24                	je     81000e21 <_fwalk_reent+0x50>
81000dfd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e01:	66 83 f8 01          	cmp    $0x1,%ax
81000e05:	74 1a                	je     81000e21 <_fwalk_reent+0x50>
81000e07:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e0b:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e0f:	74 10                	je     81000e21 <_fwalk_reent+0x50>
81000e11:	83 ec 08             	sub    $0x8,%esp
81000e14:	53                   	push   %ebx
81000e15:	ff 75 08             	push   0x8(%ebp)
81000e18:	ff 55 0c             	call   *0xc(%ebp)
81000e1b:	83 c4 10             	add    $0x10,%esp
81000e1e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e21:	83 c3 68             	add    $0x68,%ebx
81000e24:	83 ef 01             	sub    $0x1,%edi
81000e27:	85 ff                	test   %edi,%edi
81000e29:	79 c9                	jns    81000df4 <_fwalk_reent+0x23>
81000e2b:	8b 36                	mov    (%esi),%esi
81000e2d:	85 f6                	test   %esi,%esi
81000e2f:	75 bb                	jne    81000dec <_fwalk_reent+0x1b>
81000e31:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000e34:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e37:	5b                   	pop    %ebx
81000e38:	5e                   	pop    %esi
81000e39:	5f                   	pop    %edi
81000e3a:	5d                   	pop    %ebp
81000e3b:	c3                   	ret    

81000e3c <malloc_extend_top>:
81000e3c:	55                   	push   %ebp
81000e3d:	89 e5                	mov    %esp,%ebp
81000e3f:	83 ec 38             	sub    $0x38,%esp
81000e42:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e49:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81000e4e:	8b 40 08             	mov    0x8(%eax),%eax
81000e51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000e54:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e57:	8b 40 04             	mov    0x4(%eax),%eax
81000e5a:	83 e0 fc             	and    $0xfffffffc,%eax
81000e5d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000e60:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000e63:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e66:	01 d0                	add    %edx,%eax
81000e68:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000e6b:	8b 15 a0 53 00 81    	mov    0x810053a0,%edx
81000e71:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e74:	01 d0                	add    %edx,%eax
81000e76:	83 c0 10             	add    $0x10,%eax
81000e79:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e7c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000e83:	a1 ec 51 00 81       	mov    0x810051ec,%eax
81000e88:	83 f8 ff             	cmp    $0xffffffff,%eax
81000e8b:	74 15                	je     81000ea2 <malloc_extend_top+0x66>
81000e8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000e90:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e93:	01 d0                	add    %edx,%eax
81000e95:	8d 50 ff             	lea    -0x1(%eax),%edx
81000e98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000e9b:	f7 d8                	neg    %eax
81000e9d:	21 d0                	and    %edx,%eax
81000e9f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000ea2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ea5:	83 ec 08             	sub    $0x8,%esp
81000ea8:	50                   	push   %eax
81000ea9:	ff 75 08             	push   0x8(%ebp)
81000eac:	e8 79 20 00 00       	call   81002f2a <_sbrk_r>
81000eb1:	83 c4 10             	add    $0x10,%esp
81000eb4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000eb7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000ebb:	0f 84 0b 02 00 00    	je     810010cc <malloc_extend_top+0x290>
81000ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ec4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000ec7:	73 0e                	jae    81000ed7 <malloc_extend_top+0x9b>
81000ec9:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81000ece:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000ed1:	0f 85 f5 01 00 00    	jne    810010cc <malloc_extend_top+0x290>
81000ed7:	a1 c0 53 00 81       	mov    0x810053c0,%eax
81000edc:	89 c2                	mov    %eax,%edx
81000ede:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ee1:	01 d0                	add    %edx,%eax
81000ee3:	a3 c0 53 00 81       	mov    %eax,0x810053c0
81000ee8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eeb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000eee:	75 30                	jne    81000f20 <malloc_extend_top+0xe4>
81000ef0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000ef3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000ef6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ef9:	21 d0                	and    %edx,%eax
81000efb:	85 c0                	test   %eax,%eax
81000efd:	75 21                	jne    81000f20 <malloc_extend_top+0xe4>
81000eff:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000f02:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f05:	01 d0                	add    %edx,%eax
81000f07:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000f0a:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81000f0f:	8b 40 08             	mov    0x8(%eax),%eax
81000f12:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000f15:	83 ca 01             	or     $0x1,%edx
81000f18:	89 50 04             	mov    %edx,0x4(%eax)
81000f1b:	e9 76 01 00 00       	jmp    81001096 <malloc_extend_top+0x25a>
81000f20:	a1 ec 51 00 81       	mov    0x810051ec,%eax
81000f25:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f28:	75 0a                	jne    81000f34 <malloc_extend_top+0xf8>
81000f2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f2d:	a3 ec 51 00 81       	mov    %eax,0x810051ec
81000f32:	eb 13                	jmp    81000f47 <malloc_extend_top+0x10b>
81000f34:	8b 15 c0 53 00 81    	mov    0x810053c0,%edx
81000f3a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f3d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81000f40:	01 d0                	add    %edx,%eax
81000f42:	a3 c0 53 00 81       	mov    %eax,0x810053c0
81000f47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f4a:	83 c0 08             	add    $0x8,%eax
81000f4d:	83 e0 07             	and    $0x7,%eax
81000f50:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000f53:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000f57:	74 13                	je     81000f6c <malloc_extend_top+0x130>
81000f59:	b8 08 00 00 00       	mov    $0x8,%eax
81000f5e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81000f61:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f64:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f67:	01 45 f4             	add    %eax,-0xc(%ebp)
81000f6a:	eb 07                	jmp    81000f73 <malloc_extend_top+0x137>
81000f6c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000f73:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f76:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f79:	01 d0                	add    %edx,%eax
81000f7b:	89 c2                	mov    %eax,%edx
81000f7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f80:	83 e8 01             	sub    $0x1,%eax
81000f83:	21 c2                	and    %eax,%edx
81000f85:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f88:	29 d0                	sub    %edx,%eax
81000f8a:	01 45 f0             	add    %eax,-0x10(%ebp)
81000f8d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f90:	83 e8 01             	sub    $0x1,%eax
81000f93:	21 45 f0             	and    %eax,-0x10(%ebp)
81000f96:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f99:	83 ec 08             	sub    $0x8,%esp
81000f9c:	50                   	push   %eax
81000f9d:	ff 75 08             	push   0x8(%ebp)
81000fa0:	e8 85 1f 00 00       	call   81002f2a <_sbrk_r>
81000fa5:	83 c4 10             	add    $0x10,%esp
81000fa8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fab:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81000faf:	75 28                	jne    81000fd9 <malloc_extend_top+0x19d>
81000fb1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000fb8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000fbf:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000fc2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc5:	01 d0                	add    %edx,%eax
81000fc7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fca:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000fce:	74 09                	je     81000fd9 <malloc_extend_top+0x19d>
81000fd0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81000fd3:	83 e8 08             	sub    $0x8,%eax
81000fd6:	01 45 ec             	add    %eax,-0x14(%ebp)
81000fd9:	a1 c0 53 00 81       	mov    0x810053c0,%eax
81000fde:	89 c2                	mov    %eax,%edx
81000fe0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fe3:	01 d0                	add    %edx,%eax
81000fe5:	a3 c0 53 00 81       	mov    %eax,0x810053c0
81000fea:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
81000fef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000ff2:	89 42 08             	mov    %eax,0x8(%edx)
81000ff5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000ff8:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000ffb:	89 c2                	mov    %eax,%edx
81000ffd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001000:	01 d0                	add    %edx,%eax
81001002:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001005:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100100a:	8b 40 08             	mov    0x8(%eax),%eax
8100100d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001010:	83 ca 01             	or     $0x1,%edx
81001013:	89 50 04             	mov    %edx,0x4(%eax)
81001016:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100101b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100101e:	74 76                	je     81001096 <malloc_extend_top+0x25a>
81001020:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001024:	77 14                	ja     8100103a <malloc_extend_top+0x1fe>
81001026:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100102b:	8b 40 08             	mov    0x8(%eax),%eax
8100102e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001035:	e9 93 00 00 00       	jmp    810010cd <malloc_extend_top+0x291>
8100103a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100103d:	83 e8 0c             	sub    $0xc,%eax
81001040:	83 e0 f8             	and    $0xfffffff8,%eax
81001043:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001046:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001049:	8b 40 04             	mov    0x4(%eax),%eax
8100104c:	83 e0 01             	and    $0x1,%eax
8100104f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001052:	89 c2                	mov    %eax,%edx
81001054:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001057:	89 50 04             	mov    %edx,0x4(%eax)
8100105a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100105d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001060:	01 d0                	add    %edx,%eax
81001062:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001069:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100106c:	8d 50 04             	lea    0x4(%eax),%edx
8100106f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001072:	01 d0                	add    %edx,%eax
81001074:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100107b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100107f:	76 15                	jbe    81001096 <malloc_extend_top+0x25a>
81001081:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001084:	83 c0 08             	add    $0x8,%eax
81001087:	83 ec 08             	sub    $0x8,%esp
8100108a:	50                   	push   %eax
8100108b:	ff 75 08             	push   0x8(%ebp)
8100108e:	e8 93 28 00 00       	call   81003926 <_free_r>
81001093:	83 c4 10             	add    $0x10,%esp
81001096:	a1 c0 53 00 81       	mov    0x810053c0,%eax
8100109b:	89 c2                	mov    %eax,%edx
8100109d:	a1 a4 53 00 81       	mov    0x810053a4,%eax
810010a2:	39 c2                	cmp    %eax,%edx
810010a4:	76 0a                	jbe    810010b0 <malloc_extend_top+0x274>
810010a6:	a1 c0 53 00 81       	mov    0x810053c0,%eax
810010ab:	a3 a4 53 00 81       	mov    %eax,0x810053a4
810010b0:	a1 c0 53 00 81       	mov    0x810053c0,%eax
810010b5:	89 c2                	mov    %eax,%edx
810010b7:	a1 a8 53 00 81       	mov    0x810053a8,%eax
810010bc:	39 c2                	cmp    %eax,%edx
810010be:	76 0d                	jbe    810010cd <malloc_extend_top+0x291>
810010c0:	a1 c0 53 00 81       	mov    0x810053c0,%eax
810010c5:	a3 a8 53 00 81       	mov    %eax,0x810053a8
810010ca:	eb 01                	jmp    810010cd <malloc_extend_top+0x291>
810010cc:	90                   	nop
810010cd:	c9                   	leave  
810010ce:	c3                   	ret    

810010cf <_malloc_r>:
810010cf:	55                   	push   %ebp
810010d0:	89 e5                	mov    %esp,%ebp
810010d2:	53                   	push   %ebx
810010d3:	83 ec 44             	sub    $0x44,%esp
810010d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810010d9:	83 c0 0b             	add    $0xb,%eax
810010dc:	83 f8 16             	cmp    $0x16,%eax
810010df:	76 0b                	jbe    810010ec <_malloc_r+0x1d>
810010e1:	8b 45 0c             	mov    0xc(%ebp),%eax
810010e4:	83 c0 0b             	add    $0xb,%eax
810010e7:	83 e0 f8             	and    $0xfffffff8,%eax
810010ea:	eb 05                	jmp    810010f1 <_malloc_r+0x22>
810010ec:	b8 10 00 00 00       	mov    $0x10,%eax
810010f1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810010f7:	85 c0                	test   %eax,%eax
810010f9:	78 08                	js     81001103 <_malloc_r+0x34>
810010fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810010fe:	3b 45 0c             	cmp    0xc(%ebp),%eax
81001101:	73 13                	jae    81001116 <_malloc_r+0x47>
81001103:	8b 45 08             	mov    0x8(%ebp),%eax
81001106:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
8100110c:	b8 00 00 00 00       	mov    $0x0,%eax
81001111:	e9 d6 07 00 00       	jmp    810018ec <_malloc_r+0x81d>
81001116:	83 ec 0c             	sub    $0xc,%esp
81001119:	ff 75 08             	push   0x8(%ebp)
8100111c:	e8 d4 09 00 00       	call   81001af5 <__malloc_lock>
81001121:	83 c4 10             	add    $0x10,%esp
81001124:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100112b:	0f 87 b0 00 00 00    	ja     810011e1 <_malloc_r+0x112>
81001131:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001134:	c1 e8 03             	shr    $0x3,%eax
81001137:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100113a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100113d:	83 c0 01             	add    $0x1,%eax
81001140:	01 c0                	add    %eax,%eax
81001142:	c1 e0 02             	shl    $0x2,%eax
81001145:	05 e0 4d 00 81       	add    $0x81004de0,%eax
8100114a:	83 e8 08             	sub    $0x8,%eax
8100114d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001150:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001153:	8b 40 0c             	mov    0xc(%eax),%eax
81001156:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001159:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100115c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100115f:	75 0d                	jne    8100116e <_malloc_r+0x9f>
81001161:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001165:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001168:	8b 40 0c             	mov    0xc(%eax),%eax
8100116b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100116e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001171:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001174:	74 62                	je     810011d8 <_malloc_r+0x109>
81001176:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001179:	8b 40 04             	mov    0x4(%eax),%eax
8100117c:	83 e0 fc             	and    $0xfffffffc,%eax
8100117f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001182:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001185:	8b 40 0c             	mov    0xc(%eax),%eax
81001188:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100118b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100118e:	8b 40 08             	mov    0x8(%eax),%eax
81001191:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001194:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001197:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100119a:	89 50 0c             	mov    %edx,0xc(%eax)
8100119d:	8b 45 d8             	mov    -0x28(%ebp),%eax
810011a0:	8b 55 dc             	mov    -0x24(%ebp),%edx
810011a3:	89 50 08             	mov    %edx,0x8(%eax)
810011a6:	8b 55 f4             	mov    -0xc(%ebp),%edx
810011a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011ac:	01 d0                	add    %edx,%eax
810011ae:	8b 50 04             	mov    0x4(%eax),%edx
810011b1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810011b4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011b7:	01 c8                	add    %ecx,%eax
810011b9:	83 ca 01             	or     $0x1,%edx
810011bc:	89 50 04             	mov    %edx,0x4(%eax)
810011bf:	83 ec 0c             	sub    $0xc,%esp
810011c2:	ff 75 08             	push   0x8(%ebp)
810011c5:	e8 31 09 00 00       	call   81001afb <__malloc_unlock>
810011ca:	83 c4 10             	add    $0x10,%esp
810011cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011d0:	83 c0 08             	add    $0x8,%eax
810011d3:	e9 14 07 00 00       	jmp    810018ec <_malloc_r+0x81d>
810011d8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810011dc:	e9 46 01 00 00       	jmp    81001327 <_malloc_r+0x258>
810011e1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011e4:	c1 e8 09             	shr    $0x9,%eax
810011e7:	85 c0                	test   %eax,%eax
810011e9:	75 08                	jne    810011f3 <_malloc_r+0x124>
810011eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011ee:	c1 e8 03             	shr    $0x3,%eax
810011f1:	eb 77                	jmp    8100126a <_malloc_r+0x19b>
810011f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011f6:	c1 e8 09             	shr    $0x9,%eax
810011f9:	83 f8 04             	cmp    $0x4,%eax
810011fc:	77 0b                	ja     81001209 <_malloc_r+0x13a>
810011fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001201:	c1 e8 06             	shr    $0x6,%eax
81001204:	83 c0 38             	add    $0x38,%eax
81001207:	eb 61                	jmp    8100126a <_malloc_r+0x19b>
81001209:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100120c:	c1 e8 09             	shr    $0x9,%eax
8100120f:	83 f8 14             	cmp    $0x14,%eax
81001212:	77 0b                	ja     8100121f <_malloc_r+0x150>
81001214:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001217:	c1 e8 09             	shr    $0x9,%eax
8100121a:	83 c0 5b             	add    $0x5b,%eax
8100121d:	eb 4b                	jmp    8100126a <_malloc_r+0x19b>
8100121f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001222:	c1 e8 09             	shr    $0x9,%eax
81001225:	83 f8 54             	cmp    $0x54,%eax
81001228:	77 0b                	ja     81001235 <_malloc_r+0x166>
8100122a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100122d:	c1 e8 0c             	shr    $0xc,%eax
81001230:	83 c0 6e             	add    $0x6e,%eax
81001233:	eb 35                	jmp    8100126a <_malloc_r+0x19b>
81001235:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001238:	c1 e8 09             	shr    $0x9,%eax
8100123b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001240:	77 0b                	ja     8100124d <_malloc_r+0x17e>
81001242:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001245:	c1 e8 0f             	shr    $0xf,%eax
81001248:	83 c0 77             	add    $0x77,%eax
8100124b:	eb 1d                	jmp    8100126a <_malloc_r+0x19b>
8100124d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001250:	c1 e8 09             	shr    $0x9,%eax
81001253:	3d 54 05 00 00       	cmp    $0x554,%eax
81001258:	77 0b                	ja     81001265 <_malloc_r+0x196>
8100125a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100125d:	c1 e8 12             	shr    $0x12,%eax
81001260:	83 c0 7c             	add    $0x7c,%eax
81001263:	eb 05                	jmp    8100126a <_malloc_r+0x19b>
81001265:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100126a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100126d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001270:	83 c0 01             	add    $0x1,%eax
81001273:	01 c0                	add    %eax,%eax
81001275:	c1 e0 02             	shl    $0x2,%eax
81001278:	05 e0 4d 00 81       	add    $0x81004de0,%eax
8100127d:	83 e8 08             	sub    $0x8,%eax
81001280:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001283:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001286:	8b 40 0c             	mov    0xc(%eax),%eax
81001289:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100128c:	e9 86 00 00 00       	jmp    81001317 <_malloc_r+0x248>
81001291:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001294:	8b 40 04             	mov    0x4(%eax),%eax
81001297:	83 e0 fc             	and    $0xfffffffc,%eax
8100129a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100129d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012a0:	2b 45 d0             	sub    -0x30(%ebp),%eax
810012a3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810012a6:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
810012aa:	7e 06                	jle    810012b2 <_malloc_r+0x1e3>
810012ac:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810012b0:	eb 71                	jmp    81001323 <_malloc_r+0x254>
810012b2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810012b6:	78 56                	js     8100130e <_malloc_r+0x23f>
810012b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012bb:	8b 40 0c             	mov    0xc(%eax),%eax
810012be:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012c4:	8b 40 08             	mov    0x8(%eax),%eax
810012c7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012cd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012d0:	89 50 0c             	mov    %edx,0xc(%eax)
810012d3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012d6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012d9:	89 50 08             	mov    %edx,0x8(%eax)
810012dc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012df:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012e2:	01 d0                	add    %edx,%eax
810012e4:	8b 50 04             	mov    0x4(%eax),%edx
810012e7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012ea:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012ed:	01 c8                	add    %ecx,%eax
810012ef:	83 ca 01             	or     $0x1,%edx
810012f2:	89 50 04             	mov    %edx,0x4(%eax)
810012f5:	83 ec 0c             	sub    $0xc,%esp
810012f8:	ff 75 08             	push   0x8(%ebp)
810012fb:	e8 fb 07 00 00       	call   81001afb <__malloc_unlock>
81001300:	83 c4 10             	add    $0x10,%esp
81001303:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001306:	83 c0 08             	add    $0x8,%eax
81001309:	e9 de 05 00 00       	jmp    810018ec <_malloc_r+0x81d>
8100130e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001311:	8b 40 0c             	mov    0xc(%eax),%eax
81001314:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001317:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100131a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100131d:	0f 85 6e ff ff ff    	jne    81001291 <_malloc_r+0x1c2>
81001323:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001327:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
8100132c:	8b 40 08             	mov    0x8(%eax),%eax
8100132f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001332:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
81001337:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100133a:	0f 84 9c 02 00 00    	je     810015dc <_malloc_r+0x50d>
81001340:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001343:	8b 40 04             	mov    0x4(%eax),%eax
81001346:	83 e0 fc             	and    $0xfffffffc,%eax
81001349:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100134c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100134f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001352:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001355:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001359:	7e 7a                	jle    810013d5 <_malloc_r+0x306>
8100135b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100135e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001361:	01 d0                	add    %edx,%eax
81001363:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001366:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001369:	83 c8 01             	or     $0x1,%eax
8100136c:	89 c2                	mov    %eax,%edx
8100136e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001371:	89 50 04             	mov    %edx,0x4(%eax)
81001374:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
81001379:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100137c:	89 50 0c             	mov    %edx,0xc(%eax)
8100137f:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
81001384:	8b 40 0c             	mov    0xc(%eax),%eax
81001387:	89 42 08             	mov    %eax,0x8(%edx)
8100138a:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
8100138f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001392:	89 50 0c             	mov    %edx,0xc(%eax)
81001395:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001398:	8b 50 0c             	mov    0xc(%eax),%edx
8100139b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100139e:	89 50 08             	mov    %edx,0x8(%eax)
810013a1:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013a4:	83 c8 01             	or     $0x1,%eax
810013a7:	89 c2                	mov    %eax,%edx
810013a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013ac:	89 50 04             	mov    %edx,0x4(%eax)
810013af:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013b2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013b5:	01 c2                	add    %eax,%edx
810013b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013ba:	89 02                	mov    %eax,(%edx)
810013bc:	83 ec 0c             	sub    $0xc,%esp
810013bf:	ff 75 08             	push   0x8(%ebp)
810013c2:	e8 34 07 00 00       	call   81001afb <__malloc_unlock>
810013c7:	83 c4 10             	add    $0x10,%esp
810013ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013cd:	83 c0 08             	add    $0x8,%eax
810013d0:	e9 17 05 00 00       	jmp    810018ec <_malloc_r+0x81d>
810013d5:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
810013da:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
810013df:	89 50 0c             	mov    %edx,0xc(%eax)
810013e2:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
810013e7:	8b 40 0c             	mov    0xc(%eax),%eax
810013ea:	89 42 08             	mov    %eax,0x8(%edx)
810013ed:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013f1:	78 32                	js     81001425 <_malloc_r+0x356>
810013f3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013f6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013f9:	01 d0                	add    %edx,%eax
810013fb:	8b 50 04             	mov    0x4(%eax),%edx
810013fe:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001401:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001404:	01 c8                	add    %ecx,%eax
81001406:	83 ca 01             	or     $0x1,%edx
81001409:	89 50 04             	mov    %edx,0x4(%eax)
8100140c:	83 ec 0c             	sub    $0xc,%esp
8100140f:	ff 75 08             	push   0x8(%ebp)
81001412:	e8 e4 06 00 00       	call   81001afb <__malloc_unlock>
81001417:	83 c4 10             	add    $0x10,%esp
8100141a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100141d:	83 c0 08             	add    $0x8,%eax
81001420:	e9 c7 04 00 00       	jmp    810018ec <_malloc_r+0x81d>
81001425:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100142c:	77 7f                	ja     810014ad <_malloc_r+0x3de>
8100142e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001431:	c1 e8 03             	shr    $0x3,%eax
81001434:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001437:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100143c:	8b 58 04             	mov    0x4(%eax),%ebx
8100143f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001442:	8d 50 03             	lea    0x3(%eax),%edx
81001445:	85 c0                	test   %eax,%eax
81001447:	0f 48 c2             	cmovs  %edx,%eax
8100144a:	c1 f8 02             	sar    $0x2,%eax
8100144d:	ba 01 00 00 00       	mov    $0x1,%edx
81001452:	89 c1                	mov    %eax,%ecx
81001454:	d3 e2                	shl    %cl,%edx
81001456:	89 d0                	mov    %edx,%eax
81001458:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
8100145d:	09 d8                	or     %ebx,%eax
8100145f:	89 42 04             	mov    %eax,0x4(%edx)
81001462:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001465:	83 c0 01             	add    $0x1,%eax
81001468:	01 c0                	add    %eax,%eax
8100146a:	c1 e0 02             	shl    $0x2,%eax
8100146d:	05 e0 4d 00 81       	add    $0x81004de0,%eax
81001472:	83 e8 08             	sub    $0x8,%eax
81001475:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001478:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100147b:	8b 40 08             	mov    0x8(%eax),%eax
8100147e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001481:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001484:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001487:	89 50 0c             	mov    %edx,0xc(%eax)
8100148a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100148d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001490:	89 50 08             	mov    %edx,0x8(%eax)
81001493:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001496:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001499:	89 50 08             	mov    %edx,0x8(%eax)
8100149c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100149f:	8b 50 08             	mov    0x8(%eax),%edx
810014a2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810014a5:	89 50 0c             	mov    %edx,0xc(%eax)
810014a8:	e9 2f 01 00 00       	jmp    810015dc <_malloc_r+0x50d>
810014ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014b0:	c1 e8 09             	shr    $0x9,%eax
810014b3:	85 c0                	test   %eax,%eax
810014b5:	75 08                	jne    810014bf <_malloc_r+0x3f0>
810014b7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014ba:	c1 e8 03             	shr    $0x3,%eax
810014bd:	eb 77                	jmp    81001536 <_malloc_r+0x467>
810014bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014c2:	c1 e8 09             	shr    $0x9,%eax
810014c5:	83 f8 04             	cmp    $0x4,%eax
810014c8:	77 0b                	ja     810014d5 <_malloc_r+0x406>
810014ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014cd:	c1 e8 06             	shr    $0x6,%eax
810014d0:	83 c0 38             	add    $0x38,%eax
810014d3:	eb 61                	jmp    81001536 <_malloc_r+0x467>
810014d5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d8:	c1 e8 09             	shr    $0x9,%eax
810014db:	83 f8 14             	cmp    $0x14,%eax
810014de:	77 0b                	ja     810014eb <_malloc_r+0x41c>
810014e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e3:	c1 e8 09             	shr    $0x9,%eax
810014e6:	83 c0 5b             	add    $0x5b,%eax
810014e9:	eb 4b                	jmp    81001536 <_malloc_r+0x467>
810014eb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014ee:	c1 e8 09             	shr    $0x9,%eax
810014f1:	83 f8 54             	cmp    $0x54,%eax
810014f4:	77 0b                	ja     81001501 <_malloc_r+0x432>
810014f6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f9:	c1 e8 0c             	shr    $0xc,%eax
810014fc:	83 c0 6e             	add    $0x6e,%eax
810014ff:	eb 35                	jmp    81001536 <_malloc_r+0x467>
81001501:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001504:	c1 e8 09             	shr    $0x9,%eax
81001507:	3d 54 01 00 00       	cmp    $0x154,%eax
8100150c:	77 0b                	ja     81001519 <_malloc_r+0x44a>
8100150e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001511:	c1 e8 0f             	shr    $0xf,%eax
81001514:	83 c0 77             	add    $0x77,%eax
81001517:	eb 1d                	jmp    81001536 <_malloc_r+0x467>
81001519:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100151c:	c1 e8 09             	shr    $0x9,%eax
8100151f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001524:	77 0b                	ja     81001531 <_malloc_r+0x462>
81001526:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001529:	c1 e8 12             	shr    $0x12,%eax
8100152c:	83 c0 7c             	add    $0x7c,%eax
8100152f:	eb 05                	jmp    81001536 <_malloc_r+0x467>
81001531:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001536:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001539:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100153c:	83 c0 01             	add    $0x1,%eax
8100153f:	01 c0                	add    %eax,%eax
81001541:	c1 e0 02             	shl    $0x2,%eax
81001544:	05 e0 4d 00 81       	add    $0x81004de0,%eax
81001549:	83 e8 08             	sub    $0x8,%eax
8100154c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100154f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001552:	8b 40 08             	mov    0x8(%eax),%eax
81001555:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001558:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100155b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100155e:	75 36                	jne    81001596 <_malloc_r+0x4c7>
81001560:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81001565:	8b 58 04             	mov    0x4(%eax),%ebx
81001568:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100156b:	8d 50 03             	lea    0x3(%eax),%edx
8100156e:	85 c0                	test   %eax,%eax
81001570:	0f 48 c2             	cmovs  %edx,%eax
81001573:	c1 f8 02             	sar    $0x2,%eax
81001576:	ba 01 00 00 00       	mov    $0x1,%edx
8100157b:	89 c1                	mov    %eax,%ecx
8100157d:	d3 e2                	shl    %cl,%edx
8100157f:	89 d0                	mov    %edx,%eax
81001581:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
81001586:	09 d8                	or     %ebx,%eax
81001588:	89 42 04             	mov    %eax,0x4(%edx)
8100158b:	eb 28                	jmp    810015b5 <_malloc_r+0x4e6>
8100158d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001590:	8b 40 08             	mov    0x8(%eax),%eax
81001593:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001596:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001599:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100159c:	74 0e                	je     810015ac <_malloc_r+0x4dd>
8100159e:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015a1:	8b 40 04             	mov    0x4(%eax),%eax
810015a4:	83 e0 fc             	and    $0xfffffffc,%eax
810015a7:	39 45 cc             	cmp    %eax,-0x34(%ebp)
810015aa:	72 e1                	jb     8100158d <_malloc_r+0x4be>
810015ac:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015af:	8b 40 0c             	mov    0xc(%eax),%eax
810015b2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015bb:	89 50 0c             	mov    %edx,0xc(%eax)
810015be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015c1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015c4:	89 50 08             	mov    %edx,0x8(%eax)
810015c7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015ca:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015cd:	89 50 08             	mov    %edx,0x8(%eax)
810015d0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015d3:	8b 50 08             	mov    0x8(%eax),%edx
810015d6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015d9:	89 50 0c             	mov    %edx,0xc(%eax)
810015dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015df:	8d 50 03             	lea    0x3(%eax),%edx
810015e2:	85 c0                	test   %eax,%eax
810015e4:	0f 48 c2             	cmovs  %edx,%eax
810015e7:	c1 f8 02             	sar    $0x2,%eax
810015ea:	ba 01 00 00 00       	mov    $0x1,%edx
810015ef:	89 c1                	mov    %eax,%ecx
810015f1:	d3 e2                	shl    %cl,%edx
810015f3:	89 d0                	mov    %edx,%eax
810015f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810015f8:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810015fd:	8b 40 04             	mov    0x4(%eax),%eax
81001600:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
81001603:	0f 87 13 02 00 00    	ja     8100181c <_malloc_r+0x74d>
81001609:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100160e:	8b 40 04             	mov    0x4(%eax),%eax
81001611:	23 45 e4             	and    -0x1c(%ebp),%eax
81001614:	85 c0                	test   %eax,%eax
81001616:	75 27                	jne    8100163f <_malloc_r+0x570>
81001618:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100161b:	83 e0 fc             	and    $0xfffffffc,%eax
8100161e:	83 c0 04             	add    $0x4,%eax
81001621:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001624:	d1 65 e4             	shll   -0x1c(%ebp)
81001627:	eb 07                	jmp    81001630 <_malloc_r+0x561>
81001629:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100162d:	d1 65 e4             	shll   -0x1c(%ebp)
81001630:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81001635:	8b 40 04             	mov    0x4(%eax),%eax
81001638:	23 45 e4             	and    -0x1c(%ebp),%eax
8100163b:	85 c0                	test   %eax,%eax
8100163d:	74 ea                	je     81001629 <_malloc_r+0x55a>
8100163f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001642:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001645:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001648:	83 c0 01             	add    $0x1,%eax
8100164b:	01 c0                	add    %eax,%eax
8100164d:	c1 e0 02             	shl    $0x2,%eax
81001650:	05 e0 4d 00 81       	add    $0x81004de0,%eax
81001655:	83 e8 08             	sub    $0x8,%eax
81001658:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100165b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100165e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001661:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001664:	8b 40 0c             	mov    0xc(%eax),%eax
81001667:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100166a:	e9 22 01 00 00       	jmp    81001791 <_malloc_r+0x6c2>
8100166f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001672:	8b 40 04             	mov    0x4(%eax),%eax
81001675:	83 e0 fc             	and    $0xfffffffc,%eax
81001678:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100167b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100167e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001681:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001684:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001688:	0f 8e 9e 00 00 00    	jle    8100172c <_malloc_r+0x65d>
8100168e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001691:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001694:	01 d0                	add    %edx,%eax
81001696:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001699:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100169c:	83 c8 01             	or     $0x1,%eax
8100169f:	89 c2                	mov    %eax,%edx
810016a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a4:	89 50 04             	mov    %edx,0x4(%eax)
810016a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016aa:	8b 40 0c             	mov    0xc(%eax),%eax
810016ad:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016b0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016b3:	8b 40 08             	mov    0x8(%eax),%eax
810016b6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016b9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016bc:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016bf:	89 50 0c             	mov    %edx,0xc(%eax)
810016c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016c5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016c8:	89 50 08             	mov    %edx,0x8(%eax)
810016cb:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
810016d0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810016d3:	89 50 0c             	mov    %edx,0xc(%eax)
810016d6:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
810016db:	8b 40 0c             	mov    0xc(%eax),%eax
810016de:	89 42 08             	mov    %eax,0x8(%edx)
810016e1:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
810016e6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016e9:	89 50 0c             	mov    %edx,0xc(%eax)
810016ec:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016ef:	8b 50 0c             	mov    0xc(%eax),%edx
810016f2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016f5:	89 50 08             	mov    %edx,0x8(%eax)
810016f8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016fb:	83 c8 01             	or     $0x1,%eax
810016fe:	89 c2                	mov    %eax,%edx
81001700:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001703:	89 50 04             	mov    %edx,0x4(%eax)
81001706:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001709:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100170c:	01 c2                	add    %eax,%edx
8100170e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001711:	89 02                	mov    %eax,(%edx)
81001713:	83 ec 0c             	sub    $0xc,%esp
81001716:	ff 75 08             	push   0x8(%ebp)
81001719:	e8 dd 03 00 00       	call   81001afb <__malloc_unlock>
8100171e:	83 c4 10             	add    $0x10,%esp
81001721:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001724:	83 c0 08             	add    $0x8,%eax
81001727:	e9 c0 01 00 00       	jmp    810018ec <_malloc_r+0x81d>
8100172c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001730:	78 56                	js     81001788 <_malloc_r+0x6b9>
81001732:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001735:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001738:	01 d0                	add    %edx,%eax
8100173a:	8b 50 04             	mov    0x4(%eax),%edx
8100173d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001740:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001743:	01 c8                	add    %ecx,%eax
81001745:	83 ca 01             	or     $0x1,%edx
81001748:	89 50 04             	mov    %edx,0x4(%eax)
8100174b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174e:	8b 40 0c             	mov    0xc(%eax),%eax
81001751:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001754:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001757:	8b 40 08             	mov    0x8(%eax),%eax
8100175a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100175d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001760:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001763:	89 50 0c             	mov    %edx,0xc(%eax)
81001766:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001769:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100176c:	89 50 08             	mov    %edx,0x8(%eax)
8100176f:	83 ec 0c             	sub    $0xc,%esp
81001772:	ff 75 08             	push   0x8(%ebp)
81001775:	e8 81 03 00 00       	call   81001afb <__malloc_unlock>
8100177a:	83 c4 10             	add    $0x10,%esp
8100177d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001780:	83 c0 08             	add    $0x8,%eax
81001783:	e9 64 01 00 00       	jmp    810018ec <_malloc_r+0x81d>
81001788:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100178b:	8b 40 0c             	mov    0xc(%eax),%eax
8100178e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001791:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001794:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001797:	0f 85 d2 fe ff ff    	jne    8100166f <_malloc_r+0x5a0>
8100179d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
810017a1:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810017a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810017a8:	83 e0 03             	and    $0x3,%eax
810017ab:	85 c0                	test   %eax,%eax
810017ad:	0f 85 ae fe ff ff    	jne    81001661 <_malloc_r+0x592>
810017b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017b6:	83 e0 03             	and    $0x3,%eax
810017b9:	85 c0                	test   %eax,%eax
810017bb:	75 19                	jne    810017d6 <_malloc_r+0x707>
810017bd:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810017c2:	8b 48 04             	mov    0x4(%eax),%ecx
810017c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017c8:	f7 d0                	not    %eax
810017ca:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
810017cf:	21 c8                	and    %ecx,%eax
810017d1:	89 42 04             	mov    %eax,0x4(%edx)
810017d4:	eb 13                	jmp    810017e9 <_malloc_r+0x71a>
810017d6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810017da:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810017de:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810017e1:	8b 40 08             	mov    0x8(%eax),%eax
810017e4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810017e7:	74 ca                	je     810017b3 <_malloc_r+0x6e4>
810017e9:	d1 65 e4             	shll   -0x1c(%ebp)
810017ec:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810017f1:	8b 40 04             	mov    0x4(%eax),%eax
810017f4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810017f7:	77 23                	ja     8100181c <_malloc_r+0x74d>
810017f9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810017fd:	74 1d                	je     8100181c <_malloc_r+0x74d>
810017ff:	eb 07                	jmp    81001808 <_malloc_r+0x739>
81001801:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
81001805:	d1 65 e4             	shll   -0x1c(%ebp)
81001808:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100180d:	8b 40 04             	mov    0x4(%eax),%eax
81001810:	23 45 e4             	and    -0x1c(%ebp),%eax
81001813:	85 c0                	test   %eax,%eax
81001815:	74 ea                	je     81001801 <_malloc_r+0x732>
81001817:	e9 23 fe ff ff       	jmp    8100163f <_malloc_r+0x570>
8100181c:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81001821:	8b 40 08             	mov    0x8(%eax),%eax
81001824:	8b 40 04             	mov    0x4(%eax),%eax
81001827:	83 e0 fc             	and    $0xfffffffc,%eax
8100182a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100182d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001830:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81001835:	8b 40 08             	mov    0x8(%eax),%eax
81001838:	8b 40 04             	mov    0x4(%eax),%eax
8100183b:	83 e0 fc             	and    $0xfffffffc,%eax
8100183e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001841:	77 06                	ja     81001849 <_malloc_r+0x77a>
81001843:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001847:	7f 53                	jg     8100189c <_malloc_r+0x7cd>
81001849:	83 ec 08             	sub    $0x8,%esp
8100184c:	ff 75 d0             	push   -0x30(%ebp)
8100184f:	ff 75 08             	push   0x8(%ebp)
81001852:	e8 e5 f5 ff ff       	call   81000e3c <malloc_extend_top>
81001857:	83 c4 10             	add    $0x10,%esp
8100185a:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100185f:	8b 40 08             	mov    0x8(%eax),%eax
81001862:	8b 40 04             	mov    0x4(%eax),%eax
81001865:	83 e0 fc             	and    $0xfffffffc,%eax
81001868:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100186b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100186e:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81001873:	8b 40 08             	mov    0x8(%eax),%eax
81001876:	8b 40 04             	mov    0x4(%eax),%eax
81001879:	83 e0 fc             	and    $0xfffffffc,%eax
8100187c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100187f:	77 06                	ja     81001887 <_malloc_r+0x7b8>
81001881:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001885:	7f 15                	jg     8100189c <_malloc_r+0x7cd>
81001887:	83 ec 0c             	sub    $0xc,%esp
8100188a:	ff 75 08             	push   0x8(%ebp)
8100188d:	e8 69 02 00 00       	call   81001afb <__malloc_unlock>
81001892:	83 c4 10             	add    $0x10,%esp
81001895:	b8 00 00 00 00       	mov    $0x0,%eax
8100189a:	eb 50                	jmp    810018ec <_malloc_r+0x81d>
8100189c:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810018a1:	8b 40 08             	mov    0x8(%eax),%eax
810018a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810018a7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018aa:	83 c8 01             	or     $0x1,%eax
810018ad:	89 c2                	mov    %eax,%edx
810018af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018b2:	89 50 04             	mov    %edx,0x4(%eax)
810018b5:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
810018ba:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810018bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018c0:	01 c8                	add    %ecx,%eax
810018c2:	89 42 08             	mov    %eax,0x8(%edx)
810018c5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810018c8:	83 c8 01             	or     $0x1,%eax
810018cb:	89 c2                	mov    %eax,%edx
810018cd:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810018d2:	8b 40 08             	mov    0x8(%eax),%eax
810018d5:	89 50 04             	mov    %edx,0x4(%eax)
810018d8:	83 ec 0c             	sub    $0xc,%esp
810018db:	ff 75 08             	push   0x8(%ebp)
810018de:	e8 18 02 00 00       	call   81001afb <__malloc_unlock>
810018e3:	83 c4 10             	add    $0x10,%esp
810018e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018e9:	83 c0 08             	add    $0x8,%eax
810018ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810018ef:	c9                   	leave  
810018f0:	c3                   	ret    
810018f1:	66 90                	xchg   %ax,%ax
810018f3:	66 90                	xchg   %ax,%ax
810018f5:	66 90                	xchg   %ax,%ax
810018f7:	66 90                	xchg   %ax,%ax
810018f9:	66 90                	xchg   %ax,%ax
810018fb:	66 90                	xchg   %ax,%ax
810018fd:	66 90                	xchg   %ax,%ax
810018ff:	90                   	nop

81001900 <memchr>:
81001900:	55                   	push   %ebp
81001901:	89 e5                	mov    %esp,%ebp
81001903:	57                   	push   %edi
81001904:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001908:	8b 4d 10             	mov    0x10(%ebp),%ecx
8100190b:	8b 7d 08             	mov    0x8(%ebp),%edi
8100190e:	31 d2                	xor    %edx,%edx
81001910:	85 c9                	test   %ecx,%ecx
81001912:	74 79                	je     8100198d <L20>
81001914:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100191a:	74 28                	je     81001944 <L5>
8100191c:	3a 07                	cmp    (%edi),%al
8100191e:	74 6a                	je     8100198a <L15>
81001920:	47                   	inc    %edi
81001921:	49                   	dec    %ecx
81001922:	74 69                	je     8100198d <L20>
81001924:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100192a:	74 18                	je     81001944 <L5>
8100192c:	3a 07                	cmp    (%edi),%al
8100192e:	74 5a                	je     8100198a <L15>
81001930:	47                   	inc    %edi
81001931:	49                   	dec    %ecx
81001932:	74 59                	je     8100198d <L20>
81001934:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100193a:	74 08                	je     81001944 <L5>
8100193c:	3a 07                	cmp    (%edi),%al
8100193e:	74 4a                	je     8100198a <L15>
81001940:	47                   	inc    %edi
81001941:	49                   	dec    %ecx
81001942:	74 49                	je     8100198d <L20>

81001944 <L5>:
81001944:	88 c4                	mov    %al,%ah
81001946:	89 c2                	mov    %eax,%edx
81001948:	c1 e2 10             	shl    $0x10,%edx
8100194b:	09 d0                	or     %edx,%eax
8100194d:	53                   	push   %ebx
8100194e:	66 90                	xchg   %ax,%ax

81001950 <L8>:
81001950:	83 e9 04             	sub    $0x4,%ecx
81001953:	72 1c                	jb     81001971 <L9>
81001955:	8b 17                	mov    (%edi),%edx
81001957:	83 c7 04             	add    $0x4,%edi
8100195a:	31 c2                	xor    %eax,%edx
8100195c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001962:	f7 d2                	not    %edx
81001964:	21 d3                	and    %edx,%ebx
81001966:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100196c:	74 e2                	je     81001950 <L8>
8100196e:	83 ef 04             	sub    $0x4,%edi

81001971 <L9>:
81001971:	5b                   	pop    %ebx
81001972:	31 d2                	xor    %edx,%edx
81001974:	83 c1 04             	add    $0x4,%ecx
81001977:	74 14                	je     8100198d <L20>
81001979:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001980 <L10>:
81001980:	3a 07                	cmp    (%edi),%al
81001982:	74 06                	je     8100198a <L15>
81001984:	47                   	inc    %edi
81001985:	49                   	dec    %ecx
81001986:	75 f8                	jne    81001980 <L10>
81001988:	31 ff                	xor    %edi,%edi

8100198a <L15>:
8100198a:	4a                   	dec    %edx
8100198b:	21 fa                	and    %edi,%edx

8100198d <L20>:
8100198d:	89 d0                	mov    %edx,%eax
8100198f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001992:	5f                   	pop    %edi
81001993:	c9                   	leave  
81001994:	c3                   	ret    
81001995:	66 90                	xchg   %ax,%ax
81001997:	90                   	nop

81001998 <memcpy>:
81001998:	55                   	push   %ebp
81001999:	89 e5                	mov    %esp,%ebp
8100199b:	56                   	push   %esi
8100199c:	57                   	push   %edi
8100199d:	53                   	push   %ebx
8100199e:	8b 7d 08             	mov    0x8(%ebp),%edi
810019a1:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019a4:	8b 75 0c             	mov    0xc(%ebp),%esi
810019a7:	fc                   	cld    
810019a8:	83 f9 08             	cmp    $0x8,%ecx
810019ab:	76 26                	jbe    810019d3 <memcpy+0x3b>
810019ad:	89 fa                	mov    %edi,%edx
810019af:	89 cb                	mov    %ecx,%ebx
810019b1:	83 e2 03             	and    $0x3,%edx
810019b4:	74 10                	je     810019c6 <memcpy+0x2e>
810019b6:	b9 04 00 00 00       	mov    $0x4,%ecx
810019bb:	29 d1                	sub    %edx,%ecx
810019bd:	83 e1 03             	and    $0x3,%ecx
810019c0:	29 cb                	sub    %ecx,%ebx
810019c2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019c4:	89 d9                	mov    %ebx,%ecx
810019c6:	c1 e9 02             	shr    $0x2,%ecx
810019c9:	8d 76 00             	lea    0x0(%esi),%esi
810019cc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810019ce:	89 d9                	mov    %ebx,%ecx
810019d0:	83 e1 03             	and    $0x3,%ecx
810019d3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019d5:	8b 45 08             	mov    0x8(%ebp),%eax
810019d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810019db:	5b                   	pop    %ebx
810019dc:	5f                   	pop    %edi
810019dd:	5e                   	pop    %esi
810019de:	c9                   	leave  
810019df:	c3                   	ret    

810019e0 <memmove>:
810019e0:	55                   	push   %ebp
810019e1:	89 e5                	mov    %esp,%ebp
810019e3:	56                   	push   %esi
810019e4:	57                   	push   %edi
810019e5:	53                   	push   %ebx
810019e6:	8b 7d 08             	mov    0x8(%ebp),%edi
810019e9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019ec:	8b 75 0c             	mov    0xc(%ebp),%esi
810019ef:	fc                   	cld    
810019f0:	39 fe                	cmp    %edi,%esi
810019f2:	73 43                	jae    81001a37 <memmove+0x57>
810019f4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
810019f8:	39 df                	cmp    %ebx,%edi
810019fa:	77 3b                	ja     81001a37 <memmove+0x57>
810019fc:	01 ce                	add    %ecx,%esi
810019fe:	01 cf                	add    %ecx,%edi
81001a00:	fd                   	std    
81001a01:	83 f9 08             	cmp    $0x8,%ecx
81001a04:	76 2b                	jbe    81001a31 <memmove+0x51>
81001a06:	89 fa                	mov    %edi,%edx
81001a08:	89 cb                	mov    %ecx,%ebx
81001a0a:	83 e2 03             	and    $0x3,%edx
81001a0d:	74 0c                	je     81001a1b <memmove+0x3b>
81001a0f:	89 d1                	mov    %edx,%ecx
81001a11:	4e                   	dec    %esi
81001a12:	4f                   	dec    %edi
81001a13:	29 cb                	sub    %ecx,%ebx
81001a15:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a17:	89 d9                	mov    %ebx,%ecx
81001a19:	46                   	inc    %esi
81001a1a:	47                   	inc    %edi
81001a1b:	c1 e9 02             	shr    $0x2,%ecx
81001a1e:	83 ee 04             	sub    $0x4,%esi
81001a21:	83 ef 04             	sub    $0x4,%edi
81001a24:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a26:	83 c6 04             	add    $0x4,%esi
81001a29:	83 c7 04             	add    $0x4,%edi
81001a2c:	89 d9                	mov    %ebx,%ecx
81001a2e:	83 e1 03             	and    $0x3,%ecx
81001a31:	4e                   	dec    %esi
81001a32:	4f                   	dec    %edi
81001a33:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a35:	eb 2a                	jmp    81001a61 <memmove+0x81>
81001a37:	83 f9 08             	cmp    $0x8,%ecx
81001a3a:	76 23                	jbe    81001a5f <memmove+0x7f>
81001a3c:	89 fa                	mov    %edi,%edx
81001a3e:	89 cb                	mov    %ecx,%ebx
81001a40:	83 e2 03             	and    $0x3,%edx
81001a43:	74 10                	je     81001a55 <memmove+0x75>
81001a45:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a4a:	29 d1                	sub    %edx,%ecx
81001a4c:	83 e1 03             	and    $0x3,%ecx
81001a4f:	29 cb                	sub    %ecx,%ebx
81001a51:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a53:	89 d9                	mov    %ebx,%ecx
81001a55:	c1 e9 02             	shr    $0x2,%ecx
81001a58:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a5a:	89 d9                	mov    %ebx,%ecx
81001a5c:	83 e1 03             	and    $0x3,%ecx
81001a5f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a61:	8b 45 08             	mov    0x8(%ebp),%eax
81001a64:	fc                   	cld    
81001a65:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001a68:	5b                   	pop    %ebx
81001a69:	5f                   	pop    %edi
81001a6a:	5e                   	pop    %esi
81001a6b:	c9                   	leave  
81001a6c:	c3                   	ret    

81001a6d <memset>:
81001a6d:	55                   	push   %ebp
81001a6e:	89 e5                	mov    %esp,%ebp
81001a70:	57                   	push   %edi
81001a71:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a74:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a78:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a7b:	fc                   	cld    
81001a7c:	83 f9 10             	cmp    $0x10,%ecx
81001a7f:	76 69                	jbe    81001aea <memset+0x7d>
81001a81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a87:	74 4c                	je     81001ad5 <memset+0x68>
81001a89:	88 07                	mov    %al,(%edi)
81001a8b:	47                   	inc    %edi
81001a8c:	49                   	dec    %ecx
81001a8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a93:	74 40                	je     81001ad5 <memset+0x68>
81001a95:	88 07                	mov    %al,(%edi)
81001a97:	47                   	inc    %edi
81001a98:	49                   	dec    %ecx
81001a99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a9f:	74 34                	je     81001ad5 <memset+0x68>
81001aa1:	88 07                	mov    %al,(%edi)
81001aa3:	47                   	inc    %edi
81001aa4:	49                   	dec    %ecx
81001aa5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001aab:	74 28                	je     81001ad5 <memset+0x68>
81001aad:	88 07                	mov    %al,(%edi)
81001aaf:	47                   	inc    %edi
81001ab0:	49                   	dec    %ecx
81001ab1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ab7:	74 1c                	je     81001ad5 <memset+0x68>
81001ab9:	88 07                	mov    %al,(%edi)
81001abb:	47                   	inc    %edi
81001abc:	49                   	dec    %ecx
81001abd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ac3:	74 10                	je     81001ad5 <memset+0x68>
81001ac5:	88 07                	mov    %al,(%edi)
81001ac7:	47                   	inc    %edi
81001ac8:	49                   	dec    %ecx
81001ac9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001acf:	74 04                	je     81001ad5 <memset+0x68>
81001ad1:	88 07                	mov    %al,(%edi)
81001ad3:	47                   	inc    %edi
81001ad4:	49                   	dec    %ecx
81001ad5:	88 c4                	mov    %al,%ah
81001ad7:	89 c2                	mov    %eax,%edx
81001ad9:	c1 e2 10             	shl    $0x10,%edx
81001adc:	09 d0                	or     %edx,%eax
81001ade:	89 ca                	mov    %ecx,%edx
81001ae0:	c1 e9 02             	shr    $0x2,%ecx
81001ae3:	83 e2 03             	and    $0x3,%edx
81001ae6:	f3 ab                	rep stos %eax,%es:(%edi)
81001ae8:	89 d1                	mov    %edx,%ecx
81001aea:	f3 aa                	rep stos %al,%es:(%edi)
81001aec:	8b 45 08             	mov    0x8(%ebp),%eax
81001aef:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001af2:	5f                   	pop    %edi
81001af3:	c9                   	leave  
81001af4:	c3                   	ret    

81001af5 <__malloc_lock>:
81001af5:	55                   	push   %ebp
81001af6:	89 e5                	mov    %esp,%ebp
81001af8:	90                   	nop
81001af9:	5d                   	pop    %ebp
81001afa:	c3                   	ret    

81001afb <__malloc_unlock>:
81001afb:	55                   	push   %ebp
81001afc:	89 e5                	mov    %esp,%ebp
81001afe:	90                   	nop
81001aff:	5d                   	pop    %ebp
81001b00:	c3                   	ret    

81001b01 <__sprint_r>:
81001b01:	55                   	push   %ebp
81001b02:	89 e5                	mov    %esp,%ebp
81001b04:	56                   	push   %esi
81001b05:	53                   	push   %ebx
81001b06:	83 ec 10             	sub    $0x10,%esp
81001b09:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001b0c:	be 00 00 00 00       	mov    $0x0,%esi
81001b11:	8b 43 08             	mov    0x8(%ebx),%eax
81001b14:	85 c0                	test   %eax,%eax
81001b16:	75 11                	jne    81001b29 <__sprint_r+0x28>
81001b18:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001b1f:	b8 00 00 00 00       	mov    $0x0,%eax
81001b24:	e9 ad 00 00 00       	jmp    81001bd6 <__sprint_r+0xd5>
81001b29:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b2c:	8b 40 64             	mov    0x64(%eax),%eax
81001b2f:	25 00 20 00 00       	and    $0x2000,%eax
81001b34:	85 c0                	test   %eax,%eax
81001b36:	74 7a                	je     81001bb2 <__sprint_r+0xb1>
81001b38:	8b 03                	mov    (%ebx),%eax
81001b3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b3d:	eb 6a                	jmp    81001ba9 <__sprint_r+0xa8>
81001b3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b42:	8b 00                	mov    (%eax),%eax
81001b44:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b4a:	8b 40 04             	mov    0x4(%eax),%eax
81001b4d:	c1 e8 02             	shr    $0x2,%eax
81001b50:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001b53:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001b5a:	eb 33                	jmp    81001b8f <__sprint_r+0x8e>
81001b5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001b66:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b69:	01 d0                	add    %edx,%eax
81001b6b:	8b 00                	mov    (%eax),%eax
81001b6d:	83 ec 04             	sub    $0x4,%esp
81001b70:	ff 75 0c             	push   0xc(%ebp)
81001b73:	50                   	push   %eax
81001b74:	ff 75 08             	push   0x8(%ebp)
81001b77:	e8 0b 1d 00 00       	call   81003887 <_fputwc_r>
81001b7c:	83 c4 10             	add    $0x10,%esp
81001b7f:	83 f8 ff             	cmp    $0xffffffff,%eax
81001b82:	75 07                	jne    81001b8b <__sprint_r+0x8a>
81001b84:	be ff ff ff ff       	mov    $0xffffffff,%esi
81001b89:	eb 3b                	jmp    81001bc6 <__sprint_r+0xc5>
81001b8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001b8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001b92:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81001b95:	7c c5                	jl     81001b5c <__sprint_r+0x5b>
81001b97:	8b 43 08             	mov    0x8(%ebx),%eax
81001b9a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001b9d:	c1 e2 02             	shl    $0x2,%edx
81001ba0:	29 d0                	sub    %edx,%eax
81001ba2:	89 43 08             	mov    %eax,0x8(%ebx)
81001ba5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81001ba9:	8b 43 08             	mov    0x8(%ebx),%eax
81001bac:	85 c0                	test   %eax,%eax
81001bae:	75 8f                	jne    81001b3f <__sprint_r+0x3e>
81001bb0:	eb 14                	jmp    81001bc6 <__sprint_r+0xc5>
81001bb2:	83 ec 04             	sub    $0x4,%esp
81001bb5:	53                   	push   %ebx
81001bb6:	ff 75 0c             	push   0xc(%ebp)
81001bb9:	ff 75 08             	push   0x8(%ebp)
81001bbc:	e8 0a ed ff ff       	call   810008cb <__sfvwrite_r>
81001bc1:	83 c4 10             	add    $0x10,%esp
81001bc4:	89 c6                	mov    %eax,%esi
81001bc6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81001bcd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001bd4:	89 f0                	mov    %esi,%eax
81001bd6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001bd9:	5b                   	pop    %ebx
81001bda:	5e                   	pop    %esi
81001bdb:	5d                   	pop    %ebp
81001bdc:	c3                   	ret    

81001bdd <__sfputc_r>:
81001bdd:	55                   	push   %ebp
81001bde:	89 e5                	mov    %esp,%ebp
81001be0:	83 ec 08             	sub    $0x8,%esp
81001be3:	8b 45 10             	mov    0x10(%ebp),%eax
81001be6:	8b 40 08             	mov    0x8(%eax),%eax
81001be9:	8d 50 ff             	lea    -0x1(%eax),%edx
81001bec:	8b 45 10             	mov    0x10(%ebp),%eax
81001bef:	89 50 08             	mov    %edx,0x8(%eax)
81001bf2:	8b 45 10             	mov    0x10(%ebp),%eax
81001bf5:	8b 40 08             	mov    0x8(%eax),%eax
81001bf8:	85 c0                	test   %eax,%eax
81001bfa:	79 17                	jns    81001c13 <__sfputc_r+0x36>
81001bfc:	8b 45 10             	mov    0x10(%ebp),%eax
81001bff:	8b 50 08             	mov    0x8(%eax),%edx
81001c02:	8b 45 10             	mov    0x10(%ebp),%eax
81001c05:	8b 40 18             	mov    0x18(%eax),%eax
81001c08:	39 c2                	cmp    %eax,%edx
81001c0a:	7c 21                	jl     81001c2d <__sfputc_r+0x50>
81001c0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c0f:	3c 0a                	cmp    $0xa,%al
81001c11:	74 1a                	je     81001c2d <__sfputc_r+0x50>
81001c13:	8b 45 10             	mov    0x10(%ebp),%eax
81001c16:	8b 00                	mov    (%eax),%eax
81001c18:	8d 48 01             	lea    0x1(%eax),%ecx
81001c1b:	8b 55 10             	mov    0x10(%ebp),%edx
81001c1e:	89 0a                	mov    %ecx,(%edx)
81001c20:	8b 55 0c             	mov    0xc(%ebp),%edx
81001c23:	88 10                	mov    %dl,(%eax)
81001c25:	0f b6 00             	movzbl (%eax),%eax
81001c28:	0f b6 c0             	movzbl %al,%eax
81001c2b:	eb 14                	jmp    81001c41 <__sfputc_r+0x64>
81001c2d:	83 ec 04             	sub    $0x4,%esp
81001c30:	ff 75 10             	push   0x10(%ebp)
81001c33:	ff 75 0c             	push   0xc(%ebp)
81001c36:	ff 75 08             	push   0x8(%ebp)
81001c39:	e8 44 14 00 00       	call   81003082 <__swbuf_r>
81001c3e:	83 c4 10             	add    $0x10,%esp
81001c41:	c9                   	leave  
81001c42:	c3                   	ret    

81001c43 <__sfputs_r>:
81001c43:	55                   	push   %ebp
81001c44:	89 e5                	mov    %esp,%ebp
81001c46:	53                   	push   %ebx
81001c47:	83 ec 14             	sub    $0x14,%esp
81001c4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c4d:	8b 40 64             	mov    0x64(%eax),%eax
81001c50:	25 00 20 00 00       	and    $0x2000,%eax
81001c55:	85 c0                	test   %eax,%eax
81001c57:	74 4c                	je     81001ca5 <__sfputs_r+0x62>
81001c59:	8b 45 10             	mov    0x10(%ebp),%eax
81001c5c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c5f:	bb 00 00 00 00       	mov    $0x0,%ebx
81001c64:	eb 31                	jmp    81001c97 <__sfputs_r+0x54>
81001c66:	89 d8                	mov    %ebx,%eax
81001c68:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81001c6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001c72:	01 d0                	add    %edx,%eax
81001c74:	8b 00                	mov    (%eax),%eax
81001c76:	83 ec 04             	sub    $0x4,%esp
81001c79:	ff 75 0c             	push   0xc(%ebp)
81001c7c:	50                   	push   %eax
81001c7d:	ff 75 08             	push   0x8(%ebp)
81001c80:	e8 02 1c 00 00       	call   81003887 <_fputwc_r>
81001c85:	83 c4 10             	add    $0x10,%esp
81001c88:	83 f8 ff             	cmp    $0xffffffff,%eax
81001c8b:	75 07                	jne    81001c94 <__sfputs_r+0x51>
81001c8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001c92:	eb 52                	jmp    81001ce6 <__sfputs_r+0xa3>
81001c94:	83 c3 01             	add    $0x1,%ebx
81001c97:	8b 45 14             	mov    0x14(%ebp),%eax
81001c9a:	c1 e8 02             	shr    $0x2,%eax
81001c9d:	89 da                	mov    %ebx,%edx
81001c9f:	39 d0                	cmp    %edx,%eax
81001ca1:	77 c3                	ja     81001c66 <__sfputs_r+0x23>
81001ca3:	eb 3c                	jmp    81001ce1 <__sfputs_r+0x9e>
81001ca5:	bb 00 00 00 00       	mov    $0x0,%ebx
81001caa:	eb 2e                	jmp    81001cda <__sfputs_r+0x97>
81001cac:	89 da                	mov    %ebx,%edx
81001cae:	8b 45 10             	mov    0x10(%ebp),%eax
81001cb1:	01 d0                	add    %edx,%eax
81001cb3:	0f b6 00             	movzbl (%eax),%eax
81001cb6:	0f be c0             	movsbl %al,%eax
81001cb9:	83 ec 04             	sub    $0x4,%esp
81001cbc:	ff 75 0c             	push   0xc(%ebp)
81001cbf:	50                   	push   %eax
81001cc0:	ff 75 08             	push   0x8(%ebp)
81001cc3:	e8 15 ff ff ff       	call   81001bdd <__sfputc_r>
81001cc8:	83 c4 10             	add    $0x10,%esp
81001ccb:	83 f8 ff             	cmp    $0xffffffff,%eax
81001cce:	75 07                	jne    81001cd7 <__sfputs_r+0x94>
81001cd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001cd5:	eb 0f                	jmp    81001ce6 <__sfputs_r+0xa3>
81001cd7:	83 c3 01             	add    $0x1,%ebx
81001cda:	89 d8                	mov    %ebx,%eax
81001cdc:	39 45 14             	cmp    %eax,0x14(%ebp)
81001cdf:	77 cb                	ja     81001cac <__sfputs_r+0x69>
81001ce1:	b8 00 00 00 00       	mov    $0x0,%eax
81001ce6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001ce9:	c9                   	leave  
81001cea:	c3                   	ret    

81001ceb <vfiprintf>:
81001ceb:	55                   	push   %ebp
81001cec:	89 e5                	mov    %esp,%ebp
81001cee:	83 ec 18             	sub    $0x18,%esp
81001cf1:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
81001cf6:	ff 75 10             	push   0x10(%ebp)
81001cf9:	ff 75 0c             	push   0xc(%ebp)
81001cfc:	ff 75 08             	push   0x8(%ebp)
81001cff:	50                   	push   %eax
81001d00:	e8 0b 00 00 00       	call   81001d10 <_vfiprintf_r>
81001d05:	83 c4 10             	add    $0x10,%esp
81001d08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d0e:	c9                   	leave  
81001d0f:	c3                   	ret    

81001d10 <_vfiprintf_r>:
81001d10:	55                   	push   %ebp
81001d11:	89 e5                	mov    %esp,%ebp
81001d13:	57                   	push   %edi
81001d14:	56                   	push   %esi
81001d15:	53                   	push   %ebx
81001d16:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81001d1c:	c7 45 e4 43 1c 00 81 	movl   $0x81001c43,-0x1c(%ebp)
81001d23:	8b 45 08             	mov    0x8(%ebp),%eax
81001d26:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d29:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81001d2d:	74 18                	je     81001d47 <_vfiprintf_r+0x37>
81001d2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d32:	8b 40 38             	mov    0x38(%eax),%eax
81001d35:	85 c0                	test   %eax,%eax
81001d37:	75 0e                	jne    81001d47 <_vfiprintf_r+0x37>
81001d39:	83 ec 0c             	sub    $0xc,%esp
81001d3c:	ff 75 e0             	push   -0x20(%ebp)
81001d3f:	e8 7a ea ff ff       	call   810007be <__sinit>
81001d44:	83 c4 10             	add    $0x10,%esp
81001d47:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001d4e:	98                   	cwtl   
81001d4f:	83 e0 08             	and    $0x8,%eax
81001d52:	85 c0                	test   %eax,%eax
81001d54:	74 0a                	je     81001d60 <_vfiprintf_r+0x50>
81001d56:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d59:	8b 40 10             	mov    0x10(%eax),%eax
81001d5c:	85 c0                	test   %eax,%eax
81001d5e:	75 1f                	jne    81001d7f <_vfiprintf_r+0x6f>
81001d60:	83 ec 08             	sub    $0x8,%esp
81001d63:	ff 75 0c             	push   0xc(%ebp)
81001d66:	ff 75 08             	push   0x8(%ebp)
81001d69:	e8 8d 14 00 00       	call   810031fb <__swsetup_r>
81001d6e:	83 c4 10             	add    $0x10,%esp
81001d71:	85 c0                	test   %eax,%eax
81001d73:	74 0a                	je     81001d7f <_vfiprintf_r+0x6f>
81001d75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001d7a:	e9 df 02 00 00       	jmp    8100205e <_vfiprintf_r+0x34e>
81001d7f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81001d82:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81001d89:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81001d8d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81001d91:	8b 45 14             	mov    0x14(%ebp),%eax
81001d94:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001d9a:	89 de                	mov    %ebx,%esi
81001d9c:	eb 03                	jmp    81001da1 <_vfiprintf_r+0x91>
81001d9e:	83 c3 01             	add    $0x1,%ebx
81001da1:	0f b6 03             	movzbl (%ebx),%eax
81001da4:	84 c0                	test   %al,%al
81001da6:	74 07                	je     81001daf <_vfiprintf_r+0x9f>
81001da8:	0f b6 03             	movzbl (%ebx),%eax
81001dab:	3c 25                	cmp    $0x25,%al
81001dad:	75 ef                	jne    81001d9e <_vfiprintf_r+0x8e>
81001daf:	89 d8                	mov    %ebx,%eax
81001db1:	29 f0                	sub    %esi,%eax
81001db3:	85 c0                	test   %eax,%eax
81001db5:	74 2b                	je     81001de2 <_vfiprintf_r+0xd2>
81001db7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81001dbd:	50                   	push   %eax
81001dbe:	56                   	push   %esi
81001dbf:	ff 75 0c             	push   0xc(%ebp)
81001dc2:	ff 75 08             	push   0x8(%ebp)
81001dc5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001dc8:	ff d0                	call   *%eax
81001dca:	83 c4 10             	add    $0x10,%esp
81001dcd:	83 f8 ff             	cmp    $0xffffffff,%eax
81001dd0:	0f 84 68 02 00 00    	je     8100203e <_vfiprintf_r+0x32e>
81001dd6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81001dd9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81001ddf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81001de2:	0f b6 03             	movzbl (%ebx),%eax
81001de5:	84 c0                	test   %al,%al
81001de7:	0f 84 54 02 00 00    	je     81002041 <_vfiprintf_r+0x331>
81001ded:	83 c3 01             	add    $0x1,%ebx
81001df0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81001df7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81001dfe:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001e05:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81001e0c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81001e10:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001e17:	c7 45 dc 2c 46 00 81 	movl   $0x8100462c,-0x24(%ebp)
81001e1e:	eb 1b                	jmp    81001e3b <_vfiprintf_r+0x12b>
81001e20:	8b 55 80             	mov    -0x80(%ebp),%edx
81001e23:	89 f0                	mov    %esi,%eax
81001e25:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001e28:	be 01 00 00 00       	mov    $0x1,%esi
81001e2d:	89 c1                	mov    %eax,%ecx
81001e2f:	d3 e6                	shl    %cl,%esi
81001e31:	89 f0                	mov    %esi,%eax
81001e33:	09 d0                	or     %edx,%eax
81001e35:	89 45 80             	mov    %eax,-0x80(%ebp)
81001e38:	83 c3 01             	add    $0x1,%ebx
81001e3b:	0f b6 03             	movzbl (%ebx),%eax
81001e3e:	0f be c0             	movsbl %al,%eax
81001e41:	83 ec 04             	sub    $0x4,%esp
81001e44:	6a 05                	push   $0x5
81001e46:	50                   	push   %eax
81001e47:	ff 75 dc             	push   -0x24(%ebp)
81001e4a:	e8 b1 fa ff ff       	call   81001900 <memchr>
81001e4f:	83 c4 10             	add    $0x10,%esp
81001e52:	89 c6                	mov    %eax,%esi
81001e54:	85 f6                	test   %esi,%esi
81001e56:	75 c8                	jne    81001e20 <_vfiprintf_r+0x110>
81001e58:	8b 45 80             	mov    -0x80(%ebp),%eax
81001e5b:	83 e0 10             	and    $0x10,%eax
81001e5e:	85 c0                	test   %eax,%eax
81001e60:	74 04                	je     81001e66 <_vfiprintf_r+0x156>
81001e62:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81001e66:	8b 45 80             	mov    -0x80(%ebp),%eax
81001e69:	83 e0 08             	and    $0x8,%eax
81001e6c:	85 c0                	test   %eax,%eax
81001e6e:	74 04                	je     81001e74 <_vfiprintf_r+0x164>
81001e70:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81001e74:	0f b6 03             	movzbl (%ebx),%eax
81001e77:	3c 2a                	cmp    $0x2a,%al
81001e79:	75 50                	jne    81001ecb <_vfiprintf_r+0x1bb>
81001e7b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001e81:	8d 50 04             	lea    0x4(%eax),%edx
81001e84:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001e8a:	8b 00                	mov    (%eax),%eax
81001e8c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001e8f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001e92:	85 c0                	test   %eax,%eax
81001e94:	79 11                	jns    81001ea7 <_vfiprintf_r+0x197>
81001e96:	8b 45 8c             	mov    -0x74(%ebp),%eax
81001e99:	f7 d8                	neg    %eax
81001e9b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001e9e:	8b 45 80             	mov    -0x80(%ebp),%eax
81001ea1:	83 c8 02             	or     $0x2,%eax
81001ea4:	89 45 80             	mov    %eax,-0x80(%ebp)
81001ea7:	83 c3 01             	add    $0x1,%ebx
81001eaa:	eb 2d                	jmp    81001ed9 <_vfiprintf_r+0x1c9>
81001eac:	8b 55 8c             	mov    -0x74(%ebp),%edx
81001eaf:	89 d0                	mov    %edx,%eax
81001eb1:	c1 e0 02             	shl    $0x2,%eax
81001eb4:	01 d0                	add    %edx,%eax
81001eb6:	01 c0                	add    %eax,%eax
81001eb8:	89 c2                	mov    %eax,%edx
81001eba:	0f b6 03             	movzbl (%ebx),%eax
81001ebd:	0f be c0             	movsbl %al,%eax
81001ec0:	83 e8 30             	sub    $0x30,%eax
81001ec3:	01 d0                	add    %edx,%eax
81001ec5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81001ec8:	83 c3 01             	add    $0x1,%ebx
81001ecb:	0f b6 03             	movzbl (%ebx),%eax
81001ece:	0f be c0             	movsbl %al,%eax
81001ed1:	83 e8 30             	sub    $0x30,%eax
81001ed4:	83 f8 09             	cmp    $0x9,%eax
81001ed7:	76 d3                	jbe    81001eac <_vfiprintf_r+0x19c>
81001ed9:	0f b6 03             	movzbl (%ebx),%eax
81001edc:	3c 2e                	cmp    $0x2e,%al
81001ede:	75 67                	jne    81001f47 <_vfiprintf_r+0x237>
81001ee0:	83 c3 01             	add    $0x1,%ebx
81001ee3:	0f b6 03             	movzbl (%ebx),%eax
81001ee6:	3c 2a                	cmp    $0x2a,%al
81001ee8:	75 27                	jne    81001f11 <_vfiprintf_r+0x201>
81001eea:	83 c3 01             	add    $0x1,%ebx
81001eed:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001ef3:	8d 50 04             	lea    0x4(%eax),%edx
81001ef6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81001efc:	8b 00                	mov    (%eax),%eax
81001efe:	89 45 84             	mov    %eax,-0x7c(%ebp)
81001f01:	8b 45 84             	mov    -0x7c(%ebp),%eax
81001f04:	85 c0                	test   %eax,%eax
81001f06:	79 3f                	jns    81001f47 <_vfiprintf_r+0x237>
81001f08:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81001f0f:	eb 36                	jmp    81001f47 <_vfiprintf_r+0x237>
81001f11:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81001f18:	eb 1f                	jmp    81001f39 <_vfiprintf_r+0x229>
81001f1a:	8b 55 84             	mov    -0x7c(%ebp),%edx
81001f1d:	89 d0                	mov    %edx,%eax
81001f1f:	c1 e0 02             	shl    $0x2,%eax
81001f22:	01 d0                	add    %edx,%eax
81001f24:	01 c0                	add    %eax,%eax
81001f26:	89 c2                	mov    %eax,%edx
81001f28:	0f b6 03             	movzbl (%ebx),%eax
81001f2b:	0f be c0             	movsbl %al,%eax
81001f2e:	83 e8 30             	sub    $0x30,%eax
81001f31:	01 d0                	add    %edx,%eax
81001f33:	89 45 84             	mov    %eax,-0x7c(%ebp)
81001f36:	83 c3 01             	add    $0x1,%ebx
81001f39:	0f b6 03             	movzbl (%ebx),%eax
81001f3c:	0f be c0             	movsbl %al,%eax
81001f3f:	83 e8 30             	sub    $0x30,%eax
81001f42:	83 f8 09             	cmp    $0x9,%eax
81001f45:	76 d3                	jbe    81001f1a <_vfiprintf_r+0x20a>
81001f47:	c7 45 dc 32 46 00 81 	movl   $0x81004632,-0x24(%ebp)
81001f4e:	0f b6 03             	movzbl (%ebx),%eax
81001f51:	0f be c0             	movsbl %al,%eax
81001f54:	83 ec 04             	sub    $0x4,%esp
81001f57:	6a 03                	push   $0x3
81001f59:	50                   	push   %eax
81001f5a:	ff 75 dc             	push   -0x24(%ebp)
81001f5d:	e8 9e f9 ff ff       	call   81001900 <memchr>
81001f62:	83 c4 10             	add    $0x10,%esp
81001f65:	89 c6                	mov    %eax,%esi
81001f67:	85 f6                	test   %esi,%esi
81001f69:	74 1b                	je     81001f86 <_vfiprintf_r+0x276>
81001f6b:	8b 55 80             	mov    -0x80(%ebp),%edx
81001f6e:	89 f0                	mov    %esi,%eax
81001f70:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001f73:	be 40 00 00 00       	mov    $0x40,%esi
81001f78:	89 c1                	mov    %eax,%ecx
81001f7a:	d3 e6                	shl    %cl,%esi
81001f7c:	89 f0                	mov    %esi,%eax
81001f7e:	09 d0                	or     %edx,%eax
81001f80:	89 45 80             	mov    %eax,-0x80(%ebp)
81001f83:	83 c3 01             	add    $0x1,%ebx
81001f86:	89 d8                	mov    %ebx,%eax
81001f88:	8d 58 01             	lea    0x1(%eax),%ebx
81001f8b:	0f b6 00             	movzbl (%eax),%eax
81001f8e:	88 45 98             	mov    %al,-0x68(%ebp)
81001f91:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81001f95:	0f be c0             	movsbl %al,%eax
81001f98:	83 ec 04             	sub    $0x4,%esp
81001f9b:	6a 06                	push   $0x6
81001f9d:	50                   	push   %eax
81001f9e:	68 36 46 00 81       	push   $0x81004636
81001fa3:	e8 58 f9 ff ff       	call   81001900 <memchr>
81001fa8:	83 c4 10             	add    $0x10,%esp
81001fab:	89 c6                	mov    %eax,%esi
81001fad:	85 f6                	test   %esi,%esi
81001faf:	74 5a                	je     8100200b <_vfiprintf_r+0x2fb>
81001fb1:	b8 00 00 00 00       	mov    $0x0,%eax
81001fb6:	85 c0                	test   %eax,%eax
81001fb8:	75 2e                	jne    81001fe8 <_vfiprintf_r+0x2d8>
81001fba:	8b 45 80             	mov    -0x80(%ebp),%eax
81001fbd:	25 00 01 00 00       	and    $0x100,%eax
81001fc2:	85 c0                	test   %eax,%eax
81001fc4:	74 11                	je     81001fd7 <_vfiprintf_r+0x2c7>
81001fc6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001fcc:	83 c0 0c             	add    $0xc,%eax
81001fcf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001fd5:	eb 55                	jmp    8100202c <_vfiprintf_r+0x31c>
81001fd7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81001fdd:	83 c0 08             	add    $0x8,%eax
81001fe0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81001fe6:	eb 44                	jmp    8100202c <_vfiprintf_r+0x31c>
81001fe8:	83 ec 0c             	sub    $0xc,%esp
81001feb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81001ff1:	50                   	push   %eax
81001ff2:	ff 75 e4             	push   -0x1c(%ebp)
81001ff5:	ff 75 0c             	push   0xc(%ebp)
81001ff8:	8d 45 80             	lea    -0x80(%ebp),%eax
81001ffb:	50                   	push   %eax
81001ffc:	ff 75 08             	push   0x8(%ebp)
81001fff:	e8 fc df ff 7e       	call   0 <main-0x81000000>
81002004:	83 c4 20             	add    $0x20,%esp
81002007:	89 c7                	mov    %eax,%edi
81002009:	eb 21                	jmp    8100202c <_vfiprintf_r+0x31c>
8100200b:	83 ec 0c             	sub    $0xc,%esp
8100200e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81002014:	50                   	push   %eax
81002015:	ff 75 e4             	push   -0x1c(%ebp)
81002018:	ff 75 0c             	push   0xc(%ebp)
8100201b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100201e:	50                   	push   %eax
8100201f:	ff 75 08             	push   0x8(%ebp)
81002022:	e8 da 01 00 00       	call   81002201 <_printf_i>
81002027:	83 c4 20             	add    $0x20,%esp
8100202a:	89 c7                	mov    %eax,%edi
8100202c:	83 ff ff             	cmp    $0xffffffff,%edi
8100202f:	74 13                	je     81002044 <_vfiprintf_r+0x334>
81002031:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002034:	01 f8                	add    %edi,%eax
81002036:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002039:	e9 5c fd ff ff       	jmp    81001d9a <_vfiprintf_r+0x8a>
8100203e:	90                   	nop
8100203f:	eb 04                	jmp    81002045 <_vfiprintf_r+0x335>
81002041:	90                   	nop
81002042:	eb 01                	jmp    81002045 <_vfiprintf_r+0x335>
81002044:	90                   	nop
81002045:	8b 45 0c             	mov    0xc(%ebp),%eax
81002048:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100204c:	98                   	cwtl   
8100204d:	83 e0 40             	and    $0x40,%eax
81002050:	85 c0                	test   %eax,%eax
81002052:	75 05                	jne    81002059 <_vfiprintf_r+0x349>
81002054:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002057:	eb 05                	jmp    8100205e <_vfiprintf_r+0x34e>
81002059:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100205e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002061:	5b                   	pop    %ebx
81002062:	5e                   	pop    %esi
81002063:	5f                   	pop    %edi
81002064:	5d                   	pop    %ebp
81002065:	c3                   	ret    

81002066 <_printf_common>:
81002066:	55                   	push   %ebp
81002067:	89 e5                	mov    %esp,%ebp
81002069:	83 ec 18             	sub    $0x18,%esp
8100206c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100206f:	8b 50 10             	mov    0x10(%eax),%edx
81002072:	8b 45 0c             	mov    0xc(%ebp),%eax
81002075:	8b 40 08             	mov    0x8(%eax),%eax
81002078:	39 c2                	cmp    %eax,%edx
8100207a:	0f 4c d0             	cmovl  %eax,%edx
8100207d:	8b 45 10             	mov    0x10(%ebp),%eax
81002080:	89 10                	mov    %edx,(%eax)
81002082:	8b 45 0c             	mov    0xc(%ebp),%eax
81002085:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81002089:	84 c0                	test   %al,%al
8100208b:	74 0d                	je     8100209a <_printf_common+0x34>
8100208d:	8b 45 10             	mov    0x10(%ebp),%eax
81002090:	8b 00                	mov    (%eax),%eax
81002092:	8d 50 01             	lea    0x1(%eax),%edx
81002095:	8b 45 10             	mov    0x10(%ebp),%eax
81002098:	89 10                	mov    %edx,(%eax)
8100209a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100209d:	8b 00                	mov    (%eax),%eax
8100209f:	83 e0 20             	and    $0x20,%eax
810020a2:	85 c0                	test   %eax,%eax
810020a4:	74 0d                	je     810020b3 <_printf_common+0x4d>
810020a6:	8b 45 10             	mov    0x10(%ebp),%eax
810020a9:	8b 00                	mov    (%eax),%eax
810020ab:	8d 50 02             	lea    0x2(%eax),%edx
810020ae:	8b 45 10             	mov    0x10(%ebp),%eax
810020b1:	89 10                	mov    %edx,(%eax)
810020b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810020b6:	8b 00                	mov    (%eax),%eax
810020b8:	83 e0 06             	and    $0x6,%eax
810020bb:	85 c0                	test   %eax,%eax
810020bd:	75 41                	jne    81002100 <_printf_common+0x9a>
810020bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810020c6:	eb 24                	jmp    810020ec <_printf_common+0x86>
810020c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810020cb:	83 c0 19             	add    $0x19,%eax
810020ce:	6a 01                	push   $0x1
810020d0:	50                   	push   %eax
810020d1:	ff 75 14             	push   0x14(%ebp)
810020d4:	ff 75 08             	push   0x8(%ebp)
810020d7:	8b 45 18             	mov    0x18(%ebp),%eax
810020da:	ff d0                	call   *%eax
810020dc:	83 c4 10             	add    $0x10,%esp
810020df:	83 f8 ff             	cmp    $0xffffffff,%eax
810020e2:	0f 84 0b 01 00 00    	je     810021f3 <_printf_common+0x18d>
810020e8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810020ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810020ef:	8b 50 0c             	mov    0xc(%eax),%edx
810020f2:	8b 45 10             	mov    0x10(%ebp),%eax
810020f5:	8b 08                	mov    (%eax),%ecx
810020f7:	89 d0                	mov    %edx,%eax
810020f9:	29 c8                	sub    %ecx,%eax
810020fb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810020fe:	7c c8                	jl     810020c8 <_printf_common+0x62>
81002100:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002107:	8b 45 0c             	mov    0xc(%ebp),%eax
8100210a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100210e:	84 c0                	test   %al,%al
81002110:	74 04                	je     81002116 <_printf_common+0xb0>
81002112:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81002116:	8b 45 0c             	mov    0xc(%ebp),%eax
81002119:	8b 00                	mov    (%eax),%eax
8100211b:	83 e0 20             	and    $0x20,%eax
8100211e:	85 c0                	test   %eax,%eax
81002120:	74 28                	je     8100214a <_printf_common+0xe4>
81002122:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002125:	8d 50 01             	lea    0x1(%eax),%edx
81002128:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100212b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100212e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81002133:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002136:	8d 50 01             	lea    0x1(%eax),%edx
81002139:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100213c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100213f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81002143:	8b 55 0c             	mov    0xc(%ebp),%edx
81002146:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100214a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100214d:	8b 55 0c             	mov    0xc(%ebp),%edx
81002150:	83 c2 43             	add    $0x43,%edx
81002153:	50                   	push   %eax
81002154:	52                   	push   %edx
81002155:	ff 75 14             	push   0x14(%ebp)
81002158:	ff 75 08             	push   0x8(%ebp)
8100215b:	8b 45 18             	mov    0x18(%ebp),%eax
8100215e:	ff d0                	call   *%eax
81002160:	83 c4 10             	add    $0x10,%esp
81002163:	83 f8 ff             	cmp    $0xffffffff,%eax
81002166:	0f 84 8a 00 00 00    	je     810021f6 <_printf_common+0x190>
8100216c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100216f:	8b 50 0c             	mov    0xc(%eax),%edx
81002172:	8b 45 10             	mov    0x10(%ebp),%eax
81002175:	8b 08                	mov    (%eax),%ecx
81002177:	89 d0                	mov    %edx,%eax
81002179:	29 c8                	sub    %ecx,%eax
8100217b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100217e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002181:	8b 00                	mov    (%eax),%eax
81002183:	83 e0 06             	and    $0x6,%eax
81002186:	83 f8 04             	cmp    $0x4,%eax
81002189:	75 06                	jne    81002191 <_printf_common+0x12b>
8100218b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100218f:	79 07                	jns    81002198 <_printf_common+0x132>
81002191:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81002198:	8b 45 0c             	mov    0xc(%ebp),%eax
8100219b:	8b 50 08             	mov    0x8(%eax),%edx
8100219e:	8b 45 0c             	mov    0xc(%ebp),%eax
810021a1:	8b 40 10             	mov    0x10(%eax),%eax
810021a4:	39 c2                	cmp    %eax,%edx
810021a6:	7e 13                	jle    810021bb <_printf_common+0x155>
810021a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810021ab:	8b 50 08             	mov    0x8(%eax),%edx
810021ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810021b1:	8b 48 10             	mov    0x10(%eax),%ecx
810021b4:	89 d0                	mov    %edx,%eax
810021b6:	29 c8                	sub    %ecx,%eax
810021b8:	01 45 f4             	add    %eax,-0xc(%ebp)
810021bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810021c2:	eb 20                	jmp    810021e4 <_printf_common+0x17e>
810021c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810021c7:	83 c0 1a             	add    $0x1a,%eax
810021ca:	6a 01                	push   $0x1
810021cc:	50                   	push   %eax
810021cd:	ff 75 14             	push   0x14(%ebp)
810021d0:	ff 75 08             	push   0x8(%ebp)
810021d3:	8b 45 18             	mov    0x18(%ebp),%eax
810021d6:	ff d0                	call   *%eax
810021d8:	83 c4 10             	add    $0x10,%esp
810021db:	83 f8 ff             	cmp    $0xffffffff,%eax
810021de:	74 19                	je     810021f9 <_printf_common+0x193>
810021e0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810021e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021e7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810021ea:	7c d8                	jl     810021c4 <_printf_common+0x15e>
810021ec:	b8 00 00 00 00       	mov    $0x0,%eax
810021f1:	eb 0c                	jmp    810021ff <_printf_common+0x199>
810021f3:	90                   	nop
810021f4:	eb 04                	jmp    810021fa <_printf_common+0x194>
810021f6:	90                   	nop
810021f7:	eb 01                	jmp    810021fa <_printf_common+0x194>
810021f9:	90                   	nop
810021fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810021ff:	c9                   	leave  
81002200:	c3                   	ret    

81002201 <_printf_i>:
81002201:	55                   	push   %ebp
81002202:	89 e5                	mov    %esp,%ebp
81002204:	53                   	push   %ebx
81002205:	83 ec 24             	sub    $0x24,%esp
81002208:	8b 45 0c             	mov    0xc(%ebp),%eax
8100220b:	83 c0 1b             	add    $0x1b,%eax
8100220e:	83 c0 28             	add    $0x28,%eax
81002211:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002214:	c7 45 e8 40 46 00 81 	movl   $0x81004640,-0x18(%ebp)
8100221b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100221e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002222:	0f be c0             	movsbl %al,%eax
81002225:	85 c0                	test   %eax,%eax
81002227:	0f 84 00 03 00 00    	je     8100252d <_printf_i+0x32c>
8100222d:	85 c0                	test   %eax,%eax
8100222f:	0f 88 52 03 00 00    	js     81002587 <_printf_i+0x386>
81002235:	83 f8 78             	cmp    $0x78,%eax
81002238:	0f 8f 49 03 00 00    	jg     81002587 <_printf_i+0x386>
8100223e:	83 f8 58             	cmp    $0x58,%eax
81002241:	0f 8c 40 03 00 00    	jl     81002587 <_printf_i+0x386>
81002247:	83 e8 58             	sub    $0x58,%eax
8100224a:	83 f8 20             	cmp    $0x20,%eax
8100224d:	0f 87 34 03 00 00    	ja     81002587 <_printf_i+0x386>
81002253:	8b 04 85 64 46 00 81 	mov    -0x7effb99c(,%eax,4),%eax
8100225a:	ff e0                	jmp    *%eax
8100225c:	8b 45 18             	mov    0x18(%ebp),%eax
8100225f:	8b 00                	mov    (%eax),%eax
81002261:	8d 48 04             	lea    0x4(%eax),%ecx
81002264:	8b 55 18             	mov    0x18(%ebp),%edx
81002267:	89 0a                	mov    %ecx,(%edx)
81002269:	8b 00                	mov    (%eax),%eax
8100226b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100226f:	89 c2                	mov    %eax,%edx
81002271:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002274:	88 10                	mov    %dl,(%eax)
81002276:	8b 45 0c             	mov    0xc(%ebp),%eax
81002279:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81002280:	e9 1c 03 00 00       	jmp    810025a1 <_printf_i+0x3a0>
81002285:	8b 45 0c             	mov    0xc(%ebp),%eax
81002288:	8b 00                	mov    (%eax),%eax
8100228a:	25 80 00 00 00       	and    $0x80,%eax
8100228f:	85 c0                	test   %eax,%eax
81002291:	74 11                	je     810022a4 <_printf_i+0xa3>
81002293:	8b 45 18             	mov    0x18(%ebp),%eax
81002296:	8b 00                	mov    (%eax),%eax
81002298:	8d 48 04             	lea    0x4(%eax),%ecx
8100229b:	8b 55 18             	mov    0x18(%ebp),%edx
8100229e:	89 0a                	mov    %ecx,(%edx)
810022a0:	8b 00                	mov    (%eax),%eax
810022a2:	eb 2d                	jmp    810022d1 <_printf_i+0xd0>
810022a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810022a7:	8b 00                	mov    (%eax),%eax
810022a9:	83 e0 40             	and    $0x40,%eax
810022ac:	85 c0                	test   %eax,%eax
810022ae:	74 12                	je     810022c2 <_printf_i+0xc1>
810022b0:	8b 45 18             	mov    0x18(%ebp),%eax
810022b3:	8b 00                	mov    (%eax),%eax
810022b5:	8d 48 04             	lea    0x4(%eax),%ecx
810022b8:	8b 55 18             	mov    0x18(%ebp),%edx
810022bb:	89 0a                	mov    %ecx,(%edx)
810022bd:	8b 00                	mov    (%eax),%eax
810022bf:	98                   	cwtl   
810022c0:	eb 0f                	jmp    810022d1 <_printf_i+0xd0>
810022c2:	8b 45 18             	mov    0x18(%ebp),%eax
810022c5:	8b 00                	mov    (%eax),%eax
810022c7:	8d 48 04             	lea    0x4(%eax),%ecx
810022ca:	8b 55 18             	mov    0x18(%ebp),%edx
810022cd:	89 0a                	mov    %ecx,(%edx)
810022cf:	8b 00                	mov    (%eax),%eax
810022d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022d7:	85 c0                	test   %eax,%eax
810022d9:	79 0a                	jns    810022e5 <_printf_i+0xe4>
810022db:	f7 5d f4             	negl   -0xc(%ebp)
810022de:	8b 45 0c             	mov    0xc(%ebp),%eax
810022e1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810022e5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810022ec:	e9 28 01 00 00       	jmp    81002419 <_printf_i+0x218>
810022f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f4:	8b 00                	mov    (%eax),%eax
810022f6:	25 80 00 00 00       	and    $0x80,%eax
810022fb:	85 c0                	test   %eax,%eax
810022fd:	74 11                	je     81002310 <_printf_i+0x10f>
810022ff:	8b 45 18             	mov    0x18(%ebp),%eax
81002302:	8b 00                	mov    (%eax),%eax
81002304:	8d 48 04             	lea    0x4(%eax),%ecx
81002307:	8b 55 18             	mov    0x18(%ebp),%edx
8100230a:	89 0a                	mov    %ecx,(%edx)
8100230c:	8b 00                	mov    (%eax),%eax
8100230e:	eb 2f                	jmp    8100233f <_printf_i+0x13e>
81002310:	8b 45 0c             	mov    0xc(%ebp),%eax
81002313:	8b 00                	mov    (%eax),%eax
81002315:	83 e0 40             	and    $0x40,%eax
81002318:	85 c0                	test   %eax,%eax
8100231a:	74 14                	je     81002330 <_printf_i+0x12f>
8100231c:	8b 45 18             	mov    0x18(%ebp),%eax
8100231f:	8b 00                	mov    (%eax),%eax
81002321:	8d 48 04             	lea    0x4(%eax),%ecx
81002324:	8b 55 18             	mov    0x18(%ebp),%edx
81002327:	89 0a                	mov    %ecx,(%edx)
81002329:	8b 00                	mov    (%eax),%eax
8100232b:	0f b7 c0             	movzwl %ax,%eax
8100232e:	eb 0f                	jmp    8100233f <_printf_i+0x13e>
81002330:	8b 45 18             	mov    0x18(%ebp),%eax
81002333:	8b 00                	mov    (%eax),%eax
81002335:	8d 48 04             	lea    0x4(%eax),%ecx
81002338:	8b 55 18             	mov    0x18(%ebp),%edx
8100233b:	89 0a                	mov    %ecx,(%edx)
8100233d:	8b 00                	mov    (%eax),%eax
8100233f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002342:	8b 45 0c             	mov    0xc(%ebp),%eax
81002345:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81002349:	3c 6f                	cmp    $0x6f,%al
8100234b:	75 07                	jne    81002354 <_printf_i+0x153>
8100234d:	b8 08 00 00 00       	mov    $0x8,%eax
81002352:	eb 05                	jmp    81002359 <_printf_i+0x158>
81002354:	b8 0a 00 00 00       	mov    $0xa,%eax
81002359:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100235c:	e9 b1 00 00 00       	jmp    81002412 <_printf_i+0x211>
81002361:	8b 45 0c             	mov    0xc(%ebp),%eax
81002364:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81002368:	eb 1d                	jmp    81002387 <_printf_i+0x186>
8100236a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100236d:	8b 00                	mov    (%eax),%eax
8100236f:	83 c8 20             	or     $0x20,%eax
81002372:	89 c2                	mov    %eax,%edx
81002374:	8b 45 0c             	mov    0xc(%ebp),%eax
81002377:	89 10                	mov    %edx,(%eax)
81002379:	8b 45 0c             	mov    0xc(%ebp),%eax
8100237c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81002380:	c7 45 e8 51 46 00 81 	movl   $0x81004651,-0x18(%ebp)
81002387:	8b 45 0c             	mov    0xc(%ebp),%eax
8100238a:	8b 00                	mov    (%eax),%eax
8100238c:	25 80 00 00 00       	and    $0x80,%eax
81002391:	85 c0                	test   %eax,%eax
81002393:	74 11                	je     810023a6 <_printf_i+0x1a5>
81002395:	8b 45 18             	mov    0x18(%ebp),%eax
81002398:	8b 00                	mov    (%eax),%eax
8100239a:	8d 48 04             	lea    0x4(%eax),%ecx
8100239d:	8b 55 18             	mov    0x18(%ebp),%edx
810023a0:	89 0a                	mov    %ecx,(%edx)
810023a2:	8b 00                	mov    (%eax),%eax
810023a4:	eb 2f                	jmp    810023d5 <_printf_i+0x1d4>
810023a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810023a9:	8b 00                	mov    (%eax),%eax
810023ab:	83 e0 40             	and    $0x40,%eax
810023ae:	85 c0                	test   %eax,%eax
810023b0:	74 14                	je     810023c6 <_printf_i+0x1c5>
810023b2:	8b 45 18             	mov    0x18(%ebp),%eax
810023b5:	8b 00                	mov    (%eax),%eax
810023b7:	8d 48 04             	lea    0x4(%eax),%ecx
810023ba:	8b 55 18             	mov    0x18(%ebp),%edx
810023bd:	89 0a                	mov    %ecx,(%edx)
810023bf:	8b 00                	mov    (%eax),%eax
810023c1:	0f b7 c0             	movzwl %ax,%eax
810023c4:	eb 0f                	jmp    810023d5 <_printf_i+0x1d4>
810023c6:	8b 45 18             	mov    0x18(%ebp),%eax
810023c9:	8b 00                	mov    (%eax),%eax
810023cb:	8d 48 04             	lea    0x4(%eax),%ecx
810023ce:	8b 55 18             	mov    0x18(%ebp),%edx
810023d1:	89 0a                	mov    %ecx,(%edx)
810023d3:	8b 00                	mov    (%eax),%eax
810023d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023d8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810023df:	8b 45 0c             	mov    0xc(%ebp),%eax
810023e2:	8b 00                	mov    (%eax),%eax
810023e4:	83 e0 01             	and    $0x1,%eax
810023e7:	85 c0                	test   %eax,%eax
810023e9:	74 0f                	je     810023fa <_printf_i+0x1f9>
810023eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810023ee:	8b 00                	mov    (%eax),%eax
810023f0:	83 c8 20             	or     $0x20,%eax
810023f3:	89 c2                	mov    %eax,%edx
810023f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810023f8:	89 10                	mov    %edx,(%eax)
810023fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810023fe:	75 11                	jne    81002411 <_printf_i+0x210>
81002400:	8b 45 0c             	mov    0xc(%ebp),%eax
81002403:	8b 00                	mov    (%eax),%eax
81002405:	83 e0 df             	and    $0xffffffdf,%eax
81002408:	89 c2                	mov    %eax,%edx
8100240a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100240d:	89 10                	mov    %edx,(%eax)
8100240f:	eb 01                	jmp    81002412 <_printf_i+0x211>
81002411:	90                   	nop
81002412:	8b 45 0c             	mov    0xc(%ebp),%eax
81002415:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81002419:	8b 45 0c             	mov    0xc(%ebp),%eax
8100241c:	8b 50 04             	mov    0x4(%eax),%edx
8100241f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002422:	89 50 08             	mov    %edx,0x8(%eax)
81002425:	8b 45 0c             	mov    0xc(%ebp),%eax
81002428:	8b 40 08             	mov    0x8(%eax),%eax
8100242b:	85 c0                	test   %eax,%eax
8100242d:	78 0f                	js     8100243e <_printf_i+0x23d>
8100242f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002432:	8b 00                	mov    (%eax),%eax
81002434:	83 e0 fb             	and    $0xfffffffb,%eax
81002437:	89 c2                	mov    %eax,%edx
81002439:	8b 45 0c             	mov    0xc(%ebp),%eax
8100243c:	89 10                	mov    %edx,(%eax)
8100243e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002442:	75 0a                	jne    8100244e <_printf_i+0x24d>
81002444:	8b 45 0c             	mov    0xc(%ebp),%eax
81002447:	8b 40 04             	mov    0x4(%eax),%eax
8100244a:	85 c0                	test   %eax,%eax
8100244c:	74 34                	je     81002482 <_printf_i+0x281>
8100244e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81002451:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002454:	ba 00 00 00 00       	mov    $0x0,%edx
81002459:	f7 f1                	div    %ecx
8100245b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100245e:	01 d0                	add    %edx,%eax
81002460:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81002464:	0f b6 10             	movzbl (%eax),%edx
81002467:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100246a:	88 10                	mov    %dl,(%eax)
8100246c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100246f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002472:	ba 00 00 00 00       	mov    $0x0,%edx
81002477:	f7 f3                	div    %ebx
81002479:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100247c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002480:	75 cc                	jne    8100244e <_printf_i+0x24d>
81002482:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81002486:	75 26                	jne    810024ae <_printf_i+0x2ad>
81002488:	8b 45 0c             	mov    0xc(%ebp),%eax
8100248b:	8b 00                	mov    (%eax),%eax
8100248d:	83 e0 01             	and    $0x1,%eax
81002490:	85 c0                	test   %eax,%eax
81002492:	74 1a                	je     810024ae <_printf_i+0x2ad>
81002494:	8b 45 0c             	mov    0xc(%ebp),%eax
81002497:	8b 50 04             	mov    0x4(%eax),%edx
8100249a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100249d:	8b 40 10             	mov    0x10(%eax),%eax
810024a0:	39 c2                	cmp    %eax,%edx
810024a2:	7f 0a                	jg     810024ae <_printf_i+0x2ad>
810024a4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810024a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810024ab:	c6 00 30             	movb   $0x30,(%eax)
810024ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810024b1:	83 c0 1b             	add    $0x1b,%eax
810024b4:	83 c0 28             	add    $0x28,%eax
810024b7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810024ba:	89 c2                	mov    %eax,%edx
810024bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810024bf:	89 50 10             	mov    %edx,0x10(%eax)
810024c2:	e9 e2 00 00 00       	jmp    810025a9 <_printf_i+0x3a8>
810024c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810024ca:	8b 00                	mov    (%eax),%eax
810024cc:	25 80 00 00 00       	and    $0x80,%eax
810024d1:	85 c0                	test   %eax,%eax
810024d3:	74 19                	je     810024ee <_printf_i+0x2ed>
810024d5:	8b 45 18             	mov    0x18(%ebp),%eax
810024d8:	8b 00                	mov    (%eax),%eax
810024da:	8d 48 04             	lea    0x4(%eax),%ecx
810024dd:	8b 55 18             	mov    0x18(%ebp),%edx
810024e0:	89 0a                	mov    %ecx,(%edx)
810024e2:	8b 00                	mov    (%eax),%eax
810024e4:	8b 55 0c             	mov    0xc(%ebp),%edx
810024e7:	8b 52 14             	mov    0x14(%edx),%edx
810024ea:	89 10                	mov    %edx,(%eax)
810024ec:	eb 3f                	jmp    8100252d <_printf_i+0x32c>
810024ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810024f1:	8b 00                	mov    (%eax),%eax
810024f3:	83 e0 40             	and    $0x40,%eax
810024f6:	85 c0                	test   %eax,%eax
810024f8:	74 1c                	je     81002516 <_printf_i+0x315>
810024fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810024fd:	8b 58 14             	mov    0x14(%eax),%ebx
81002500:	8b 45 18             	mov    0x18(%ebp),%eax
81002503:	8b 00                	mov    (%eax),%eax
81002505:	8d 48 04             	lea    0x4(%eax),%ecx
81002508:	8b 55 18             	mov    0x18(%ebp),%edx
8100250b:	89 0a                	mov    %ecx,(%edx)
8100250d:	8b 00                	mov    (%eax),%eax
8100250f:	89 da                	mov    %ebx,%edx
81002511:	66 89 10             	mov    %dx,(%eax)
81002514:	eb 17                	jmp    8100252d <_printf_i+0x32c>
81002516:	8b 45 18             	mov    0x18(%ebp),%eax
81002519:	8b 00                	mov    (%eax),%eax
8100251b:	8d 48 04             	lea    0x4(%eax),%ecx
8100251e:	8b 55 18             	mov    0x18(%ebp),%edx
81002521:	89 0a                	mov    %ecx,(%edx)
81002523:	8b 00                	mov    (%eax),%eax
81002525:	8b 55 0c             	mov    0xc(%ebp),%edx
81002528:	8b 52 14             	mov    0x14(%edx),%edx
8100252b:	89 10                	mov    %edx,(%eax)
8100252d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002530:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81002537:	eb 70                	jmp    810025a9 <_printf_i+0x3a8>
81002539:	8b 45 18             	mov    0x18(%ebp),%eax
8100253c:	8b 00                	mov    (%eax),%eax
8100253e:	8d 48 04             	lea    0x4(%eax),%ecx
81002541:	8b 55 18             	mov    0x18(%ebp),%edx
81002544:	89 0a                	mov    %ecx,(%edx)
81002546:	8b 00                	mov    (%eax),%eax
81002548:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100254b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100254e:	8b 40 04             	mov    0x4(%eax),%eax
81002551:	83 ec 04             	sub    $0x4,%esp
81002554:	50                   	push   %eax
81002555:	6a 00                	push   $0x0
81002557:	ff 75 ec             	push   -0x14(%ebp)
8100255a:	e8 a1 f3 ff ff       	call   81001900 <memchr>
8100255f:	83 c4 10             	add    $0x10,%esp
81002562:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002565:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002569:	74 0e                	je     81002579 <_printf_i+0x378>
8100256b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100256e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002571:	89 c2                	mov    %eax,%edx
81002573:	8b 45 0c             	mov    0xc(%ebp),%eax
81002576:	89 50 04             	mov    %edx,0x4(%eax)
81002579:	8b 45 0c             	mov    0xc(%ebp),%eax
8100257c:	8b 50 04             	mov    0x4(%eax),%edx
8100257f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002582:	89 50 10             	mov    %edx,0x10(%eax)
81002585:	eb 1a                	jmp    810025a1 <_printf_i+0x3a0>
81002587:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100258b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100258e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81002592:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002595:	88 10                	mov    %dl,(%eax)
81002597:	8b 45 0c             	mov    0xc(%ebp),%eax
8100259a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810025a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810025a4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810025a8:	90                   	nop
810025a9:	83 ec 0c             	sub    $0xc,%esp
810025ac:	ff 75 14             	push   0x14(%ebp)
810025af:	ff 75 10             	push   0x10(%ebp)
810025b2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810025b5:	50                   	push   %eax
810025b6:	ff 75 0c             	push   0xc(%ebp)
810025b9:	ff 75 08             	push   0x8(%ebp)
810025bc:	e8 a5 fa ff ff       	call   81002066 <_printf_common>
810025c1:	83 c4 20             	add    $0x20,%esp
810025c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810025c7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810025cb:	74 72                	je     8100263f <_printf_i+0x43e>
810025cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810025d0:	8b 40 10             	mov    0x10(%eax),%eax
810025d3:	50                   	push   %eax
810025d4:	ff 75 ec             	push   -0x14(%ebp)
810025d7:	ff 75 10             	push   0x10(%ebp)
810025da:	ff 75 08             	push   0x8(%ebp)
810025dd:	8b 45 14             	mov    0x14(%ebp),%eax
810025e0:	ff d0                	call   *%eax
810025e2:	83 c4 10             	add    $0x10,%esp
810025e5:	83 f8 ff             	cmp    $0xffffffff,%eax
810025e8:	74 58                	je     81002642 <_printf_i+0x441>
810025ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810025ed:	8b 00                	mov    (%eax),%eax
810025ef:	83 e0 02             	and    $0x2,%eax
810025f2:	85 c0                	test   %eax,%eax
810025f4:	74 39                	je     8100262f <_printf_i+0x42e>
810025f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810025fd:	eb 20                	jmp    8100261f <_printf_i+0x41e>
810025ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81002602:	83 c0 19             	add    $0x19,%eax
81002605:	6a 01                	push   $0x1
81002607:	50                   	push   %eax
81002608:	ff 75 10             	push   0x10(%ebp)
8100260b:	ff 75 08             	push   0x8(%ebp)
8100260e:	8b 45 14             	mov    0x14(%ebp),%eax
81002611:	ff d0                	call   *%eax
81002613:	83 c4 10             	add    $0x10,%esp
81002616:	83 f8 ff             	cmp    $0xffffffff,%eax
81002619:	74 2a                	je     81002645 <_printf_i+0x444>
8100261b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100261f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002622:	8b 40 0c             	mov    0xc(%eax),%eax
81002625:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002628:	29 d0                	sub    %edx,%eax
8100262a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100262d:	7c d0                	jl     810025ff <_printf_i+0x3fe>
8100262f:	8b 45 0c             	mov    0xc(%ebp),%eax
81002632:	8b 50 0c             	mov    0xc(%eax),%edx
81002635:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002638:	39 c2                	cmp    %eax,%edx
8100263a:	0f 4d c2             	cmovge %edx,%eax
8100263d:	eb 0c                	jmp    8100264b <_printf_i+0x44a>
8100263f:	90                   	nop
81002640:	eb 04                	jmp    81002646 <_printf_i+0x445>
81002642:	90                   	nop
81002643:	eb 01                	jmp    81002646 <_printf_i+0x445>
81002645:	90                   	nop
81002646:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100264b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100264e:	c9                   	leave  
8100264f:	c3                   	ret    

81002650 <_realloc_r>:
81002650:	55                   	push   %ebp
81002651:	89 e5                	mov    %esp,%ebp
81002653:	83 ec 78             	sub    $0x78,%esp
81002656:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100265a:	75 16                	jne    81002672 <_realloc_r+0x22>
8100265c:	83 ec 08             	sub    $0x8,%esp
8100265f:	ff 75 10             	push   0x10(%ebp)
81002662:	ff 75 08             	push   0x8(%ebp)
81002665:	e8 65 ea ff ff       	call   810010cf <_malloc_r>
8100266a:	83 c4 10             	add    $0x10,%esp
8100266d:	e9 b6 08 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
81002672:	83 ec 0c             	sub    $0xc,%esp
81002675:	ff 75 08             	push   0x8(%ebp)
81002678:	e8 78 f4 ff ff       	call   81001af5 <__malloc_lock>
8100267d:	83 c4 10             	add    $0x10,%esp
81002680:	8b 45 0c             	mov    0xc(%ebp),%eax
81002683:	83 e8 08             	sub    $0x8,%eax
81002686:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81002689:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100268c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100268f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002692:	8b 40 04             	mov    0x4(%eax),%eax
81002695:	83 e0 fc             	and    $0xfffffffc,%eax
81002698:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100269b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100269e:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026a1:	8b 45 10             	mov    0x10(%ebp),%eax
810026a4:	83 c0 0b             	add    $0xb,%eax
810026a7:	83 f8 16             	cmp    $0x16,%eax
810026aa:	76 0b                	jbe    810026b7 <_realloc_r+0x67>
810026ac:	8b 45 10             	mov    0x10(%ebp),%eax
810026af:	83 c0 0b             	add    $0xb,%eax
810026b2:	83 e0 f8             	and    $0xfffffff8,%eax
810026b5:	eb 05                	jmp    810026bc <_realloc_r+0x6c>
810026b7:	b8 10 00 00 00       	mov    $0x10,%eax
810026bc:	89 45 bc             	mov    %eax,-0x44(%ebp)
810026bf:	8b 45 bc             	mov    -0x44(%ebp),%eax
810026c2:	85 c0                	test   %eax,%eax
810026c4:	78 08                	js     810026ce <_realloc_r+0x7e>
810026c6:	8b 45 bc             	mov    -0x44(%ebp),%eax
810026c9:	3b 45 10             	cmp    0x10(%ebp),%eax
810026cc:	73 13                	jae    810026e1 <_realloc_r+0x91>
810026ce:	8b 45 08             	mov    0x8(%ebp),%eax
810026d1:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810026d7:	b8 00 00 00 00       	mov    $0x0,%eax
810026dc:	e9 47 08 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
810026e1:	8b 55 c0             	mov    -0x40(%ebp),%edx
810026e4:	8b 45 bc             	mov    -0x44(%ebp),%eax
810026e7:	39 c2                	cmp    %eax,%edx
810026e9:	0f 8d 8b 07 00 00    	jge    81002e7a <_realloc_r+0x82a>
810026ef:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810026f2:	8b 45 c0             	mov    -0x40(%ebp),%eax
810026f5:	01 d0                	add    %edx,%eax
810026f7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026fa:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810026ff:	8b 40 08             	mov    0x8(%eax),%eax
81002702:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002705:	74 1e                	je     81002725 <_realloc_r+0xd5>
81002707:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100270a:	8b 40 04             	mov    0x4(%eax),%eax
8100270d:	83 e0 fe             	and    $0xfffffffe,%eax
81002710:	89 c2                	mov    %eax,%edx
81002712:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002715:	01 d0                	add    %edx,%eax
81002717:	8b 40 04             	mov    0x4(%eax),%eax
8100271a:	83 e0 01             	and    $0x1,%eax
8100271d:	85 c0                	test   %eax,%eax
8100271f:	0f 85 ca 00 00 00    	jne    810027ef <_realloc_r+0x19f>
81002725:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002728:	8b 40 04             	mov    0x4(%eax),%eax
8100272b:	83 e0 fc             	and    $0xfffffffc,%eax
8100272e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002731:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81002736:	8b 40 08             	mov    0x8(%eax),%eax
81002739:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100273c:	75 71                	jne    810027af <_realloc_r+0x15f>
8100273e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002741:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002744:	01 d0                	add    %edx,%eax
81002746:	89 c2                	mov    %eax,%edx
81002748:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100274b:	83 c0 10             	add    $0x10,%eax
8100274e:	39 c2                	cmp    %eax,%edx
81002750:	0f 8c a9 00 00 00    	jl     810027ff <_realloc_r+0x1af>
81002756:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002759:	01 45 f0             	add    %eax,-0x10(%ebp)
8100275c:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
81002761:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81002764:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002767:	01 c8                	add    %ecx,%eax
81002769:	89 42 08             	mov    %eax,0x8(%edx)
8100276c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100276f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002772:	89 c2                	mov    %eax,%edx
81002774:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81002779:	8b 40 08             	mov    0x8(%eax),%eax
8100277c:	83 ca 01             	or     $0x1,%edx
8100277f:	89 50 04             	mov    %edx,0x4(%eax)
81002782:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002785:	8b 40 04             	mov    0x4(%eax),%eax
81002788:	83 e0 01             	and    $0x1,%eax
8100278b:	0b 45 bc             	or     -0x44(%ebp),%eax
8100278e:	89 c2                	mov    %eax,%edx
81002790:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002793:	89 50 04             	mov    %edx,0x4(%eax)
81002796:	83 ec 0c             	sub    $0xc,%esp
81002799:	ff 75 08             	push   0x8(%ebp)
8100279c:	e8 5a f3 ff ff       	call   81001afb <__malloc_unlock>
810027a1:	83 c4 10             	add    $0x10,%esp
810027a4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810027a7:	83 c0 08             	add    $0x8,%eax
810027aa:	e9 79 07 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
810027af:	8b 55 e8             	mov    -0x18(%ebp),%edx
810027b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810027b5:	01 d0                	add    %edx,%eax
810027b7:	89 c2                	mov    %eax,%edx
810027b9:	8b 45 bc             	mov    -0x44(%ebp),%eax
810027bc:	39 c2                	cmp    %eax,%edx
810027be:	7c 3f                	jl     810027ff <_realloc_r+0x1af>
810027c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027c3:	8b 40 0c             	mov    0xc(%eax),%eax
810027c6:	89 45 b8             	mov    %eax,-0x48(%ebp)
810027c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027cc:	8b 40 08             	mov    0x8(%eax),%eax
810027cf:	89 45 b4             	mov    %eax,-0x4c(%ebp)
810027d2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
810027d5:	8b 55 b8             	mov    -0x48(%ebp),%edx
810027d8:	89 50 0c             	mov    %edx,0xc(%eax)
810027db:	8b 45 b8             	mov    -0x48(%ebp),%eax
810027de:	8b 55 b4             	mov    -0x4c(%ebp),%edx
810027e1:	89 50 08             	mov    %edx,0x8(%eax)
810027e4:	8b 45 e8             	mov    -0x18(%ebp),%eax
810027e7:	01 45 f0             	add    %eax,-0x10(%ebp)
810027ea:	e9 8c 06 00 00       	jmp    81002e7b <_realloc_r+0x82b>
810027ef:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810027f6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810027fd:	eb 01                	jmp    81002800 <_realloc_r+0x1b0>
810027ff:	90                   	nop
81002800:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002803:	8b 40 04             	mov    0x4(%eax),%eax
81002806:	83 e0 01             	and    $0x1,%eax
81002809:	85 c0                	test   %eax,%eax
8100280b:	0f 85 d6 04 00 00    	jne    81002ce7 <_realloc_r+0x697>
81002811:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002814:	8b 00                	mov    (%eax),%eax
81002816:	f7 d8                	neg    %eax
81002818:	89 c2                	mov    %eax,%edx
8100281a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100281d:	01 d0                	add    %edx,%eax
8100281f:	89 45 b0             	mov    %eax,-0x50(%ebp)
81002822:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002825:	8b 40 04             	mov    0x4(%eax),%eax
81002828:	83 e0 fc             	and    $0xfffffffc,%eax
8100282b:	89 45 ac             	mov    %eax,-0x54(%ebp)
8100282e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81002832:	0f 84 4a 03 00 00    	je     81002b82 <_realloc_r+0x532>
81002838:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100283d:	8b 40 08             	mov    0x8(%eax),%eax
81002840:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002843:	0f 85 b0 01 00 00    	jne    810029f9 <_realloc_r+0x3a9>
81002849:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100284c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100284f:	01 c2                	add    %eax,%edx
81002851:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002854:	01 d0                	add    %edx,%eax
81002856:	89 c2                	mov    %eax,%edx
81002858:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100285b:	83 c0 10             	add    $0x10,%eax
8100285e:	39 c2                	cmp    %eax,%edx
81002860:	0f 8c 1c 03 00 00    	jl     81002b82 <_realloc_r+0x532>
81002866:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002869:	8b 40 0c             	mov    0xc(%eax),%eax
8100286c:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100286f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002872:	8b 40 08             	mov    0x8(%eax),%eax
81002875:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002878:	8b 45 b4             	mov    -0x4c(%ebp),%eax
8100287b:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100287e:	89 50 0c             	mov    %edx,0xc(%eax)
81002881:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002884:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002887:	89 50 08             	mov    %edx,0x8(%eax)
8100288a:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100288d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002890:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002893:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002896:	01 d0                	add    %edx,%eax
81002898:	01 45 f0             	add    %eax,-0x10(%ebp)
8100289b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100289e:	83 c0 08             	add    $0x8,%eax
810028a1:	89 45 a8             	mov    %eax,-0x58(%ebp)
810028a4:	8b 45 c0             	mov    -0x40(%ebp),%eax
810028a7:	83 e8 04             	sub    $0x4,%eax
810028aa:	89 45 a0             	mov    %eax,-0x60(%ebp)
810028ad:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
810028b1:	0f 87 de 00 00 00    	ja     81002995 <_realloc_r+0x345>
810028b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810028ba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028bd:	8b 45 a8             	mov    -0x58(%ebp),%eax
810028c0:	89 45 e0             	mov    %eax,-0x20(%ebp)
810028c3:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
810028c7:	0f 86 90 00 00 00    	jbe    8100295d <_realloc_r+0x30d>
810028cd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810028d0:	8d 42 04             	lea    0x4(%edx),%eax
810028d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028d6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028d9:	8d 48 04             	lea    0x4(%eax),%ecx
810028dc:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810028df:	8b 12                	mov    (%edx),%edx
810028e1:	89 10                	mov    %edx,(%eax)
810028e3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
810028e6:	8d 42 04             	lea    0x4(%edx),%eax
810028e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028ec:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028ef:	8d 48 04             	lea    0x4(%eax),%ecx
810028f2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
810028f5:	8b 12                	mov    (%edx),%edx
810028f7:	89 10                	mov    %edx,(%eax)
810028f9:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
810028fd:	76 5e                	jbe    8100295d <_realloc_r+0x30d>
810028ff:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002902:	8d 42 04             	lea    0x4(%edx),%eax
81002905:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002908:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100290b:	8d 48 04             	lea    0x4(%eax),%ecx
8100290e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002911:	8b 12                	mov    (%edx),%edx
81002913:	89 10                	mov    %edx,(%eax)
81002915:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002918:	8d 42 04             	lea    0x4(%edx),%eax
8100291b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100291e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002921:	8d 48 04             	lea    0x4(%eax),%ecx
81002924:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002927:	8b 12                	mov    (%edx),%edx
81002929:	89 10                	mov    %edx,(%eax)
8100292b:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
8100292f:	76 2c                	jbe    8100295d <_realloc_r+0x30d>
81002931:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002934:	8d 42 04             	lea    0x4(%edx),%eax
81002937:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100293a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100293d:	8d 48 04             	lea    0x4(%eax),%ecx
81002940:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002943:	8b 12                	mov    (%edx),%edx
81002945:	89 10                	mov    %edx,(%eax)
81002947:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100294a:	8d 42 04             	lea    0x4(%edx),%eax
8100294d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002950:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002953:	8d 48 04             	lea    0x4(%eax),%ecx
81002956:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002959:	8b 12                	mov    (%edx),%edx
8100295b:	89 10                	mov    %edx,(%eax)
8100295d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002960:	8d 42 04             	lea    0x4(%edx),%eax
81002963:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002966:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002969:	8d 48 04             	lea    0x4(%eax),%ecx
8100296c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
8100296f:	8b 12                	mov    (%edx),%edx
81002971:	89 10                	mov    %edx,(%eax)
81002973:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81002976:	8d 42 04             	lea    0x4(%edx),%eax
81002979:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100297c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100297f:	8d 48 04             	lea    0x4(%eax),%ecx
81002982:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81002985:	8b 12                	mov    (%edx),%edx
81002987:	89 10                	mov    %edx,(%eax)
81002989:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100298c:	8b 10                	mov    (%eax),%edx
8100298e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002991:	89 10                	mov    %edx,(%eax)
81002993:	eb 14                	jmp    810029a9 <_realloc_r+0x359>
81002995:	83 ec 04             	sub    $0x4,%esp
81002998:	ff 75 a0             	push   -0x60(%ebp)
8100299b:	ff 75 0c             	push   0xc(%ebp)
8100299e:	ff 75 a8             	push   -0x58(%ebp)
810029a1:	e8 3a f0 ff ff       	call   810019e0 <memmove>
810029a6:	83 c4 10             	add    $0x10,%esp
810029a9:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
810029ae:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810029b1:	8b 45 bc             	mov    -0x44(%ebp),%eax
810029b4:	01 c8                	add    %ecx,%eax
810029b6:	89 42 08             	mov    %eax,0x8(%edx)
810029b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810029bc:	2b 45 bc             	sub    -0x44(%ebp),%eax
810029bf:	89 c2                	mov    %eax,%edx
810029c1:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
810029c6:	8b 40 08             	mov    0x8(%eax),%eax
810029c9:	83 ca 01             	or     $0x1,%edx
810029cc:	89 50 04             	mov    %edx,0x4(%eax)
810029cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029d2:	8b 40 04             	mov    0x4(%eax),%eax
810029d5:	83 e0 01             	and    $0x1,%eax
810029d8:	0b 45 bc             	or     -0x44(%ebp),%eax
810029db:	89 c2                	mov    %eax,%edx
810029dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810029e0:	89 50 04             	mov    %edx,0x4(%eax)
810029e3:	83 ec 0c             	sub    $0xc,%esp
810029e6:	ff 75 08             	push   0x8(%ebp)
810029e9:	e8 0d f1 ff ff       	call   81001afb <__malloc_unlock>
810029ee:	83 c4 10             	add    $0x10,%esp
810029f1:	8b 45 a8             	mov    -0x58(%ebp),%eax
810029f4:	e9 2f 05 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
810029f9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810029fc:	8b 45 ac             	mov    -0x54(%ebp),%eax
810029ff:	01 c2                	add    %eax,%edx
81002a01:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a04:	01 d0                	add    %edx,%eax
81002a06:	89 c2                	mov    %eax,%edx
81002a08:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002a0b:	39 c2                	cmp    %eax,%edx
81002a0d:	0f 8c 6f 01 00 00    	jl     81002b82 <_realloc_r+0x532>
81002a13:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a16:	8b 40 0c             	mov    0xc(%eax),%eax
81002a19:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002a1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002a1f:	8b 40 08             	mov    0x8(%eax),%eax
81002a22:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002a25:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002a28:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002a2b:	89 50 0c             	mov    %edx,0xc(%eax)
81002a2e:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002a31:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002a34:	89 50 08             	mov    %edx,0x8(%eax)
81002a37:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002a3a:	8b 40 0c             	mov    0xc(%eax),%eax
81002a3d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002a40:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002a43:	8b 40 08             	mov    0x8(%eax),%eax
81002a46:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002a49:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002a4c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002a4f:	89 50 0c             	mov    %edx,0xc(%eax)
81002a52:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002a55:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002a58:	89 50 08             	mov    %edx,0x8(%eax)
81002a5b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002a5e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a61:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002a64:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002a67:	01 d0                	add    %edx,%eax
81002a69:	01 45 f0             	add    %eax,-0x10(%ebp)
81002a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a6f:	83 c0 08             	add    $0x8,%eax
81002a72:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002a75:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a78:	83 e8 04             	sub    $0x4,%eax
81002a7b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81002a7e:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002a82:	0f 87 e1 00 00 00    	ja     81002b69 <_realloc_r+0x519>
81002a88:	8b 45 0c             	mov    0xc(%ebp),%eax
81002a8b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a8e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002a91:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a94:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002a98:	0f 86 90 00 00 00    	jbe    81002b2e <_realloc_r+0x4de>
81002a9e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002aa1:	8d 42 04             	lea    0x4(%edx),%eax
81002aa4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002aa7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002aaa:	8d 48 04             	lea    0x4(%eax),%ecx
81002aad:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002ab0:	8b 12                	mov    (%edx),%edx
81002ab2:	89 10                	mov    %edx,(%eax)
81002ab4:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ab7:	8d 42 04             	lea    0x4(%edx),%eax
81002aba:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002abd:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002ac0:	8d 48 04             	lea    0x4(%eax),%ecx
81002ac3:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002ac6:	8b 12                	mov    (%edx),%edx
81002ac8:	89 10                	mov    %edx,(%eax)
81002aca:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81002ace:	76 5e                	jbe    81002b2e <_realloc_r+0x4de>
81002ad0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ad3:	8d 42 04             	lea    0x4(%edx),%eax
81002ad6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ad9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002adc:	8d 48 04             	lea    0x4(%eax),%ecx
81002adf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002ae2:	8b 12                	mov    (%edx),%edx
81002ae4:	89 10                	mov    %edx,(%eax)
81002ae6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002ae9:	8d 42 04             	lea    0x4(%edx),%eax
81002aec:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002aef:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002af2:	8d 48 04             	lea    0x4(%eax),%ecx
81002af5:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002af8:	8b 12                	mov    (%edx),%edx
81002afa:	89 10                	mov    %edx,(%eax)
81002afc:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002b00:	76 2c                	jbe    81002b2e <_realloc_r+0x4de>
81002b02:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b05:	8d 42 04             	lea    0x4(%edx),%eax
81002b08:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b0b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b0e:	8d 48 04             	lea    0x4(%eax),%ecx
81002b11:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002b14:	8b 12                	mov    (%edx),%edx
81002b16:	89 10                	mov    %edx,(%eax)
81002b18:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b1b:	8d 42 04             	lea    0x4(%edx),%eax
81002b1e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b21:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b24:	8d 48 04             	lea    0x4(%eax),%ecx
81002b27:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002b2a:	8b 12                	mov    (%edx),%edx
81002b2c:	89 10                	mov    %edx,(%eax)
81002b2e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b31:	8d 42 04             	lea    0x4(%edx),%eax
81002b34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b37:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b3a:	8d 48 04             	lea    0x4(%eax),%ecx
81002b3d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002b40:	8b 12                	mov    (%edx),%edx
81002b42:	89 10                	mov    %edx,(%eax)
81002b44:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002b47:	8d 42 04             	lea    0x4(%edx),%eax
81002b4a:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b4d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b50:	8d 48 04             	lea    0x4(%eax),%ecx
81002b53:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002b56:	8b 12                	mov    (%edx),%edx
81002b58:	89 10                	mov    %edx,(%eax)
81002b5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b5d:	8b 10                	mov    (%eax),%edx
81002b5f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b62:	89 10                	mov    %edx,(%eax)
81002b64:	e9 12 03 00 00       	jmp    81002e7b <_realloc_r+0x82b>
81002b69:	83 ec 04             	sub    $0x4,%esp
81002b6c:	ff 75 a4             	push   -0x5c(%ebp)
81002b6f:	ff 75 0c             	push   0xc(%ebp)
81002b72:	ff 75 a8             	push   -0x58(%ebp)
81002b75:	e8 66 ee ff ff       	call   810019e0 <memmove>
81002b7a:	83 c4 10             	add    $0x10,%esp
81002b7d:	e9 f9 02 00 00       	jmp    81002e7b <_realloc_r+0x82b>
81002b82:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002b86:	0f 84 5b 01 00 00    	je     81002ce7 <_realloc_r+0x697>
81002b8c:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002b8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b92:	01 d0                	add    %edx,%eax
81002b94:	89 c2                	mov    %eax,%edx
81002b96:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002b99:	39 c2                	cmp    %eax,%edx
81002b9b:	0f 8c 46 01 00 00    	jl     81002ce7 <_realloc_r+0x697>
81002ba1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002ba4:	8b 40 0c             	mov    0xc(%eax),%eax
81002ba7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81002baa:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002bad:	8b 40 08             	mov    0x8(%eax),%eax
81002bb0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002bb3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002bb6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81002bb9:	89 50 0c             	mov    %edx,0xc(%eax)
81002bbc:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002bbf:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002bc2:	89 50 08             	mov    %edx,0x8(%eax)
81002bc5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002bc8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002bcb:	8b 45 ac             	mov    -0x54(%ebp),%eax
81002bce:	01 45 f0             	add    %eax,-0x10(%ebp)
81002bd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bd4:	83 c0 08             	add    $0x8,%eax
81002bd7:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002bda:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002bdd:	83 e8 04             	sub    $0x4,%eax
81002be0:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002be3:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002be7:	0f 87 e1 00 00 00    	ja     81002cce <_realloc_r+0x67e>
81002bed:	8b 45 0c             	mov    0xc(%ebp),%eax
81002bf0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002bf3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002bf6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002bf9:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81002bfd:	0f 86 90 00 00 00    	jbe    81002c93 <_realloc_r+0x643>
81002c03:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c06:	8d 42 04             	lea    0x4(%edx),%eax
81002c09:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c0c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c0f:	8d 48 04             	lea    0x4(%eax),%ecx
81002c12:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c15:	8b 12                	mov    (%edx),%edx
81002c17:	89 10                	mov    %edx,(%eax)
81002c19:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c1c:	8d 42 04             	lea    0x4(%edx),%eax
81002c1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c22:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c25:	8d 48 04             	lea    0x4(%eax),%ecx
81002c28:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c2b:	8b 12                	mov    (%edx),%edx
81002c2d:	89 10                	mov    %edx,(%eax)
81002c2f:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81002c33:	76 5e                	jbe    81002c93 <_realloc_r+0x643>
81002c35:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c38:	8d 42 04             	lea    0x4(%edx),%eax
81002c3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c41:	8d 48 04             	lea    0x4(%eax),%ecx
81002c44:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c47:	8b 12                	mov    (%edx),%edx
81002c49:	89 10                	mov    %edx,(%eax)
81002c4b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c4e:	8d 42 04             	lea    0x4(%edx),%eax
81002c51:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c54:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c57:	8d 48 04             	lea    0x4(%eax),%ecx
81002c5a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c5d:	8b 12                	mov    (%edx),%edx
81002c5f:	89 10                	mov    %edx,(%eax)
81002c61:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002c65:	76 2c                	jbe    81002c93 <_realloc_r+0x643>
81002c67:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c6a:	8d 42 04             	lea    0x4(%edx),%eax
81002c6d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c70:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c73:	8d 48 04             	lea    0x4(%eax),%ecx
81002c76:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c79:	8b 12                	mov    (%edx),%edx
81002c7b:	89 10                	mov    %edx,(%eax)
81002c7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c80:	8d 42 04             	lea    0x4(%edx),%eax
81002c83:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c86:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c89:	8d 48 04             	lea    0x4(%eax),%ecx
81002c8c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002c8f:	8b 12                	mov    (%edx),%edx
81002c91:	89 10                	mov    %edx,(%eax)
81002c93:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002c96:	8d 42 04             	lea    0x4(%edx),%eax
81002c99:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c9c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002c9f:	8d 48 04             	lea    0x4(%eax),%ecx
81002ca2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002ca5:	8b 12                	mov    (%edx),%edx
81002ca7:	89 10                	mov    %edx,(%eax)
81002ca9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002cac:	8d 42 04             	lea    0x4(%edx),%eax
81002caf:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002cb2:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002cb5:	8d 48 04             	lea    0x4(%eax),%ecx
81002cb8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002cbb:	8b 12                	mov    (%edx),%edx
81002cbd:	89 10                	mov    %edx,(%eax)
81002cbf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002cc2:	8b 10                	mov    (%eax),%edx
81002cc4:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002cc7:	89 10                	mov    %edx,(%eax)
81002cc9:	e9 ad 01 00 00       	jmp    81002e7b <_realloc_r+0x82b>
81002cce:	83 ec 04             	sub    $0x4,%esp
81002cd1:	ff 75 9c             	push   -0x64(%ebp)
81002cd4:	ff 75 0c             	push   0xc(%ebp)
81002cd7:	ff 75 a8             	push   -0x58(%ebp)
81002cda:	e8 01 ed ff ff       	call   810019e0 <memmove>
81002cdf:	83 c4 10             	add    $0x10,%esp
81002ce2:	e9 94 01 00 00       	jmp    81002e7b <_realloc_r+0x82b>
81002ce7:	83 ec 08             	sub    $0x8,%esp
81002cea:	ff 75 10             	push   0x10(%ebp)
81002ced:	ff 75 08             	push   0x8(%ebp)
81002cf0:	e8 da e3 ff ff       	call   810010cf <_malloc_r>
81002cf5:	83 c4 10             	add    $0x10,%esp
81002cf8:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002cfb:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002cff:	75 18                	jne    81002d19 <_realloc_r+0x6c9>
81002d01:	83 ec 0c             	sub    $0xc,%esp
81002d04:	ff 75 08             	push   0x8(%ebp)
81002d07:	e8 ef ed ff ff       	call   81001afb <__malloc_unlock>
81002d0c:	83 c4 10             	add    $0x10,%esp
81002d0f:	b8 00 00 00 00       	mov    $0x0,%eax
81002d14:	e9 0f 02 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
81002d19:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002d1c:	83 e8 08             	sub    $0x8,%eax
81002d1f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d22:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d25:	8b 40 04             	mov    0x4(%eax),%eax
81002d28:	83 e0 fe             	and    $0xfffffffe,%eax
81002d2b:	89 c2                	mov    %eax,%edx
81002d2d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d30:	01 d0                	add    %edx,%eax
81002d32:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81002d35:	75 17                	jne    81002d4e <_realloc_r+0x6fe>
81002d37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d3a:	8b 40 04             	mov    0x4(%eax),%eax
81002d3d:	83 e0 fc             	and    $0xfffffffc,%eax
81002d40:	01 45 f0             	add    %eax,-0x10(%ebp)
81002d43:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81002d46:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d49:	e9 2d 01 00 00       	jmp    81002e7b <_realloc_r+0x82b>
81002d4e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002d51:	83 e8 04             	sub    $0x4,%eax
81002d54:	89 45 98             	mov    %eax,-0x68(%ebp)
81002d57:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81002d5b:	0f 87 de 00 00 00    	ja     81002e3f <_realloc_r+0x7ef>
81002d61:	8b 45 0c             	mov    0xc(%ebp),%eax
81002d64:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d67:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002d6a:	89 45 c8             	mov    %eax,-0x38(%ebp)
81002d6d:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002d71:	0f 86 90 00 00 00    	jbe    81002e07 <_realloc_r+0x7b7>
81002d77:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002d7a:	8d 42 04             	lea    0x4(%edx),%eax
81002d7d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d80:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d83:	8d 48 04             	lea    0x4(%eax),%ecx
81002d86:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002d89:	8b 12                	mov    (%edx),%edx
81002d8b:	89 10                	mov    %edx,(%eax)
81002d8d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002d90:	8d 42 04             	lea    0x4(%edx),%eax
81002d93:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002d96:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002d99:	8d 48 04             	lea    0x4(%eax),%ecx
81002d9c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002d9f:	8b 12                	mov    (%edx),%edx
81002da1:	89 10                	mov    %edx,(%eax)
81002da3:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002da7:	76 5e                	jbe    81002e07 <_realloc_r+0x7b7>
81002da9:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002dac:	8d 42 04             	lea    0x4(%edx),%eax
81002daf:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002db2:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002db5:	8d 48 04             	lea    0x4(%eax),%ecx
81002db8:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002dbb:	8b 12                	mov    (%edx),%edx
81002dbd:	89 10                	mov    %edx,(%eax)
81002dbf:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002dc2:	8d 42 04             	lea    0x4(%edx),%eax
81002dc5:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002dc8:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002dcb:	8d 48 04             	lea    0x4(%eax),%ecx
81002dce:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002dd1:	8b 12                	mov    (%edx),%edx
81002dd3:	89 10                	mov    %edx,(%eax)
81002dd5:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81002dd9:	76 2c                	jbe    81002e07 <_realloc_r+0x7b7>
81002ddb:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002dde:	8d 42 04             	lea    0x4(%edx),%eax
81002de1:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002de4:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002de7:	8d 48 04             	lea    0x4(%eax),%ecx
81002dea:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002ded:	8b 12                	mov    (%edx),%edx
81002def:	89 10                	mov    %edx,(%eax)
81002df1:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002df4:	8d 42 04             	lea    0x4(%edx),%eax
81002df7:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002dfa:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002dfd:	8d 48 04             	lea    0x4(%eax),%ecx
81002e00:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e03:	8b 12                	mov    (%edx),%edx
81002e05:	89 10                	mov    %edx,(%eax)
81002e07:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e0a:	8d 42 04             	lea    0x4(%edx),%eax
81002e0d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e10:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e13:	8d 48 04             	lea    0x4(%eax),%ecx
81002e16:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e19:	8b 12                	mov    (%edx),%edx
81002e1b:	89 10                	mov    %edx,(%eax)
81002e1d:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002e20:	8d 42 04             	lea    0x4(%edx),%eax
81002e23:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002e26:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e29:	8d 48 04             	lea    0x4(%eax),%ecx
81002e2c:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002e2f:	8b 12                	mov    (%edx),%edx
81002e31:	89 10                	mov    %edx,(%eax)
81002e33:	8b 45 cc             	mov    -0x34(%ebp),%eax
81002e36:	8b 10                	mov    (%eax),%edx
81002e38:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002e3b:	89 10                	mov    %edx,(%eax)
81002e3d:	eb 14                	jmp    81002e53 <_realloc_r+0x803>
81002e3f:	83 ec 04             	sub    $0x4,%esp
81002e42:	ff 75 98             	push   -0x68(%ebp)
81002e45:	ff 75 0c             	push   0xc(%ebp)
81002e48:	ff 75 a8             	push   -0x58(%ebp)
81002e4b:	e8 90 eb ff ff       	call   810019e0 <memmove>
81002e50:	83 c4 10             	add    $0x10,%esp
81002e53:	83 ec 08             	sub    $0x8,%esp
81002e56:	ff 75 0c             	push   0xc(%ebp)
81002e59:	ff 75 08             	push   0x8(%ebp)
81002e5c:	e8 c5 0a 00 00       	call   81003926 <_free_r>
81002e61:	83 c4 10             	add    $0x10,%esp
81002e64:	83 ec 0c             	sub    $0xc,%esp
81002e67:	ff 75 08             	push   0x8(%ebp)
81002e6a:	e8 8c ec ff ff       	call   81001afb <__malloc_unlock>
81002e6f:	83 c4 10             	add    $0x10,%esp
81002e72:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002e75:	e9 ae 00 00 00       	jmp    81002f28 <_realloc_r+0x8d8>
81002e7a:	90                   	nop
81002e7b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e7e:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002e81:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002e84:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002e88:	76 5d                	jbe    81002ee7 <_realloc_r+0x897>
81002e8a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e8d:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002e90:	01 d0                	add    %edx,%eax
81002e92:	89 45 90             	mov    %eax,-0x70(%ebp)
81002e95:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e98:	8b 40 04             	mov    0x4(%eax),%eax
81002e9b:	83 e0 01             	and    $0x1,%eax
81002e9e:	0b 45 bc             	or     -0x44(%ebp),%eax
81002ea1:	89 c2                	mov    %eax,%edx
81002ea3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea6:	89 50 04             	mov    %edx,0x4(%eax)
81002ea9:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002eac:	83 c8 01             	or     $0x1,%eax
81002eaf:	89 c2                	mov    %eax,%edx
81002eb1:	8b 45 90             	mov    -0x70(%ebp),%eax
81002eb4:	89 50 04             	mov    %edx,0x4(%eax)
81002eb7:	8b 55 90             	mov    -0x70(%ebp),%edx
81002eba:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002ebd:	01 d0                	add    %edx,%eax
81002ebf:	8b 50 04             	mov    0x4(%eax),%edx
81002ec2:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002ec5:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002ec8:	01 c8                	add    %ecx,%eax
81002eca:	83 ca 01             	or     $0x1,%edx
81002ecd:	89 50 04             	mov    %edx,0x4(%eax)
81002ed0:	8b 45 90             	mov    -0x70(%ebp),%eax
81002ed3:	83 c0 08             	add    $0x8,%eax
81002ed6:	83 ec 08             	sub    $0x8,%esp
81002ed9:	50                   	push   %eax
81002eda:	ff 75 08             	push   0x8(%ebp)
81002edd:	e8 44 0a 00 00       	call   81003926 <_free_r>
81002ee2:	83 c4 10             	add    $0x10,%esp
81002ee5:	eb 2d                	jmp    81002f14 <_realloc_r+0x8c4>
81002ee7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eea:	8b 40 04             	mov    0x4(%eax),%eax
81002eed:	83 e0 01             	and    $0x1,%eax
81002ef0:	0b 45 f0             	or     -0x10(%ebp),%eax
81002ef3:	89 c2                	mov    %eax,%edx
81002ef5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ef8:	89 50 04             	mov    %edx,0x4(%eax)
81002efb:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002efe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f01:	01 d0                	add    %edx,%eax
81002f03:	8b 50 04             	mov    0x4(%eax),%edx
81002f06:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81002f09:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f0c:	01 c8                	add    %ecx,%eax
81002f0e:	83 ca 01             	or     $0x1,%edx
81002f11:	89 50 04             	mov    %edx,0x4(%eax)
81002f14:	83 ec 0c             	sub    $0xc,%esp
81002f17:	ff 75 08             	push   0x8(%ebp)
81002f1a:	e8 dc eb ff ff       	call   81001afb <__malloc_unlock>
81002f1f:	83 c4 10             	add    $0x10,%esp
81002f22:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f25:	83 c0 08             	add    $0x8,%eax
81002f28:	c9                   	leave  
81002f29:	c3                   	ret    

81002f2a <_sbrk_r>:
81002f2a:	55                   	push   %ebp
81002f2b:	89 e5                	mov    %esp,%ebp
81002f2d:	83 ec 18             	sub    $0x18,%esp
81002f30:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
81002f37:	00 00 00 
81002f3a:	83 ec 0c             	sub    $0xc,%esp
81002f3d:	ff 75 0c             	push   0xc(%ebp)
81002f40:	e8 91 d3 ff ff       	call   810002d6 <sbrk>
81002f45:	83 c4 10             	add    $0x10,%esp
81002f48:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002f4b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002f4f:	75 14                	jne    81002f65 <_sbrk_r+0x3b>
81002f51:	a1 f0 53 00 81       	mov    0x810053f0,%eax
81002f56:	85 c0                	test   %eax,%eax
81002f58:	74 0b                	je     81002f65 <_sbrk_r+0x3b>
81002f5a:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
81002f60:	8b 45 08             	mov    0x8(%ebp),%eax
81002f63:	89 10                	mov    %edx,(%eax)
81002f65:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f68:	c9                   	leave  
81002f69:	c3                   	ret    

81002f6a <__sread>:
81002f6a:	55                   	push   %ebp
81002f6b:	89 e5                	mov    %esp,%ebp
81002f6d:	56                   	push   %esi
81002f6e:	53                   	push   %ebx
81002f6f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002f72:	8b 55 14             	mov    0x14(%ebp),%edx
81002f75:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002f79:	98                   	cwtl   
81002f7a:	52                   	push   %edx
81002f7b:	ff 75 10             	push   0x10(%ebp)
81002f7e:	50                   	push   %eax
81002f7f:	ff 75 08             	push   0x8(%ebp)
81002f82:	e8 dd 11 00 00       	call   81004164 <_read_r>
81002f87:	83 c4 10             	add    $0x10,%esp
81002f8a:	89 c6                	mov    %eax,%esi
81002f8c:	85 f6                	test   %esi,%esi
81002f8e:	78 0a                	js     81002f9a <__sread+0x30>
81002f90:	8b 43 50             	mov    0x50(%ebx),%eax
81002f93:	01 f0                	add    %esi,%eax
81002f95:	89 43 50             	mov    %eax,0x50(%ebx)
81002f98:	eb 0b                	jmp    81002fa5 <__sread+0x3b>
81002f9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002f9e:	80 e4 ef             	and    $0xef,%ah
81002fa1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002fa5:	89 f0                	mov    %esi,%eax
81002fa7:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002faa:	5b                   	pop    %ebx
81002fab:	5e                   	pop    %esi
81002fac:	5d                   	pop    %ebp
81002fad:	c3                   	ret    

81002fae <__seofread>:
81002fae:	55                   	push   %ebp
81002faf:	89 e5                	mov    %esp,%ebp
81002fb1:	b8 00 00 00 00       	mov    $0x0,%eax
81002fb6:	5d                   	pop    %ebp
81002fb7:	c3                   	ret    

81002fb8 <__swrite>:
81002fb8:	55                   	push   %ebp
81002fb9:	89 e5                	mov    %esp,%ebp
81002fbb:	53                   	push   %ebx
81002fbc:	83 ec 14             	sub    $0x14,%esp
81002fbf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002fc2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002fc6:	98                   	cwtl   
81002fc7:	25 00 01 00 00       	and    $0x100,%eax
81002fcc:	85 c0                	test   %eax,%eax
81002fce:	74 15                	je     81002fe5 <__swrite+0x2d>
81002fd0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002fd4:	98                   	cwtl   
81002fd5:	6a 02                	push   $0x2
81002fd7:	6a 00                	push   $0x0
81002fd9:	50                   	push   %eax
81002fda:	ff 75 08             	push   0x8(%ebp)
81002fdd:	e8 26 0f 00 00       	call   81003f08 <_lseek_r>
81002fe2:	83 c4 10             	add    $0x10,%esp
81002fe5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002fe9:	80 e4 ef             	and    $0xef,%ah
81002fec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002ff0:	8b 55 14             	mov    0x14(%ebp),%edx
81002ff3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002ff7:	98                   	cwtl   
81002ff8:	52                   	push   %edx
81002ff9:	ff 75 10             	push   0x10(%ebp)
81002ffc:	50                   	push   %eax
81002ffd:	ff 75 08             	push   0x8(%ebp)
81003000:	e8 b0 01 00 00       	call   810031b5 <_write_r>
81003005:	83 c4 10             	add    $0x10,%esp
81003008:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100300b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100300e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003011:	c9                   	leave  
81003012:	c3                   	ret    

81003013 <__sseek>:
81003013:	55                   	push   %ebp
81003014:	89 e5                	mov    %esp,%ebp
81003016:	56                   	push   %esi
81003017:	53                   	push   %ebx
81003018:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100301b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100301f:	98                   	cwtl   
81003020:	ff 75 14             	push   0x14(%ebp)
81003023:	ff 75 10             	push   0x10(%ebp)
81003026:	50                   	push   %eax
81003027:	ff 75 08             	push   0x8(%ebp)
8100302a:	e8 d9 0e 00 00       	call   81003f08 <_lseek_r>
8100302f:	83 c4 10             	add    $0x10,%esp
81003032:	89 c6                	mov    %eax,%esi
81003034:	83 fe ff             	cmp    $0xffffffff,%esi
81003037:	75 0d                	jne    81003046 <__sseek+0x33>
81003039:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100303d:	80 e4 ef             	and    $0xef,%ah
81003040:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003044:	eb 0e                	jmp    81003054 <__sseek+0x41>
81003046:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100304a:	80 cc 10             	or     $0x10,%ah
8100304d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003051:	89 73 50             	mov    %esi,0x50(%ebx)
81003054:	89 f0                	mov    %esi,%eax
81003056:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003059:	5b                   	pop    %ebx
8100305a:	5e                   	pop    %esi
8100305b:	5d                   	pop    %ebp
8100305c:	c3                   	ret    

8100305d <__sclose>:
8100305d:	55                   	push   %ebp
8100305e:	89 e5                	mov    %esp,%ebp
81003060:	83 ec 18             	sub    $0x18,%esp
81003063:	8b 45 0c             	mov    0xc(%ebp),%eax
81003066:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003069:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100306c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003070:	98                   	cwtl   
81003071:	83 ec 08             	sub    $0x8,%esp
81003074:	50                   	push   %eax
81003075:	ff 75 08             	push   0x8(%ebp)
81003078:	e8 d9 02 00 00       	call   81003356 <_close_r>
8100307d:	83 c4 10             	add    $0x10,%esp
81003080:	c9                   	leave  
81003081:	c3                   	ret    

81003082 <__swbuf_r>:
81003082:	55                   	push   %ebp
81003083:	89 e5                	mov    %esp,%ebp
81003085:	57                   	push   %edi
81003086:	56                   	push   %esi
81003087:	53                   	push   %ebx
81003088:	83 ec 1c             	sub    $0x1c,%esp
8100308b:	8b 7d 0c             	mov    0xc(%ebp),%edi
8100308e:	8b 5d 10             	mov    0x10(%ebp),%ebx
81003091:	8b 45 08             	mov    0x8(%ebp),%eax
81003094:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003097:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100309b:	74 18                	je     810030b5 <__swbuf_r+0x33>
8100309d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810030a0:	8b 40 38             	mov    0x38(%eax),%eax
810030a3:	85 c0                	test   %eax,%eax
810030a5:	75 0e                	jne    810030b5 <__swbuf_r+0x33>
810030a7:	83 ec 0c             	sub    $0xc,%esp
810030aa:	ff 75 e4             	push   -0x1c(%ebp)
810030ad:	e8 0c d7 ff ff       	call   810007be <__sinit>
810030b2:	83 c4 10             	add    $0x10,%esp
810030b5:	8b 43 18             	mov    0x18(%ebx),%eax
810030b8:	89 43 08             	mov    %eax,0x8(%ebx)
810030bb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030bf:	98                   	cwtl   
810030c0:	83 e0 08             	and    $0x8,%eax
810030c3:	85 c0                	test   %eax,%eax
810030c5:	74 07                	je     810030ce <__swbuf_r+0x4c>
810030c7:	8b 43 10             	mov    0x10(%ebx),%eax
810030ca:	85 c0                	test   %eax,%eax
810030cc:	75 1d                	jne    810030eb <__swbuf_r+0x69>
810030ce:	83 ec 08             	sub    $0x8,%esp
810030d1:	53                   	push   %ebx
810030d2:	ff 75 08             	push   0x8(%ebp)
810030d5:	e8 21 01 00 00       	call   810031fb <__swsetup_r>
810030da:	83 c4 10             	add    $0x10,%esp
810030dd:	85 c0                	test   %eax,%eax
810030df:	74 0a                	je     810030eb <__swbuf_r+0x69>
810030e1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810030e6:	e9 a1 00 00 00       	jmp    8100318c <__swbuf_r+0x10a>
810030eb:	89 f8                	mov    %edi,%eax
810030ed:	0f b6 f8             	movzbl %al,%edi
810030f0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030f4:	98                   	cwtl   
810030f5:	25 00 20 00 00       	and    $0x2000,%eax
810030fa:	85 c0                	test   %eax,%eax
810030fc:	75 14                	jne    81003112 <__swbuf_r+0x90>
810030fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003102:	80 cc 20             	or     $0x20,%ah
81003105:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003109:	8b 43 64             	mov    0x64(%ebx),%eax
8100310c:	80 e4 df             	and    $0xdf,%ah
8100310f:	89 43 64             	mov    %eax,0x64(%ebx)
81003112:	8b 03                	mov    (%ebx),%eax
81003114:	8b 53 10             	mov    0x10(%ebx),%edx
81003117:	29 d0                	sub    %edx,%eax
81003119:	89 c6                	mov    %eax,%esi
8100311b:	8b 43 14             	mov    0x14(%ebx),%eax
8100311e:	39 c6                	cmp    %eax,%esi
81003120:	7c 1f                	jl     81003141 <__swbuf_r+0xbf>
81003122:	83 ec 08             	sub    $0x8,%esp
81003125:	53                   	push   %ebx
81003126:	ff 75 08             	push   0x8(%ebp)
81003129:	e8 b2 05 00 00       	call   810036e0 <_fflush_r>
8100312e:	83 c4 10             	add    $0x10,%esp
81003131:	85 c0                	test   %eax,%eax
81003133:	74 07                	je     8100313c <__swbuf_r+0xba>
81003135:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100313a:	eb 50                	jmp    8100318c <__swbuf_r+0x10a>
8100313c:	be 00 00 00 00       	mov    $0x0,%esi
81003141:	8b 43 08             	mov    0x8(%ebx),%eax
81003144:	83 e8 01             	sub    $0x1,%eax
81003147:	89 43 08             	mov    %eax,0x8(%ebx)
8100314a:	8b 03                	mov    (%ebx),%eax
8100314c:	8d 50 01             	lea    0x1(%eax),%edx
8100314f:	89 13                	mov    %edx,(%ebx)
81003151:	89 fa                	mov    %edi,%edx
81003153:	88 10                	mov    %dl,(%eax)
81003155:	83 c6 01             	add    $0x1,%esi
81003158:	8b 43 14             	mov    0x14(%ebx),%eax
8100315b:	39 c6                	cmp    %eax,%esi
8100315d:	74 11                	je     81003170 <__swbuf_r+0xee>
8100315f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003163:	98                   	cwtl   
81003164:	83 e0 01             	and    $0x1,%eax
81003167:	85 c0                	test   %eax,%eax
81003169:	74 1f                	je     8100318a <__swbuf_r+0x108>
8100316b:	83 ff 0a             	cmp    $0xa,%edi
8100316e:	75 1a                	jne    8100318a <__swbuf_r+0x108>
81003170:	83 ec 08             	sub    $0x8,%esp
81003173:	53                   	push   %ebx
81003174:	ff 75 08             	push   0x8(%ebp)
81003177:	e8 64 05 00 00       	call   810036e0 <_fflush_r>
8100317c:	83 c4 10             	add    $0x10,%esp
8100317f:	85 c0                	test   %eax,%eax
81003181:	74 07                	je     8100318a <__swbuf_r+0x108>
81003183:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003188:	eb 02                	jmp    8100318c <__swbuf_r+0x10a>
8100318a:	89 f8                	mov    %edi,%eax
8100318c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100318f:	5b                   	pop    %ebx
81003190:	5e                   	pop    %esi
81003191:	5f                   	pop    %edi
81003192:	5d                   	pop    %ebp
81003193:	c3                   	ret    

81003194 <__swbuf>:
81003194:	55                   	push   %ebp
81003195:	89 e5                	mov    %esp,%ebp
81003197:	83 ec 08             	sub    $0x8,%esp
8100319a:	8b 55 08             	mov    0x8(%ebp),%edx
8100319d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
810031a0:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
810031a5:	83 ec 04             	sub    $0x4,%esp
810031a8:	51                   	push   %ecx
810031a9:	52                   	push   %edx
810031aa:	50                   	push   %eax
810031ab:	e8 d2 fe ff ff       	call   81003082 <__swbuf_r>
810031b0:	83 c4 10             	add    $0x10,%esp
810031b3:	c9                   	leave  
810031b4:	c3                   	ret    

810031b5 <_write_r>:
810031b5:	55                   	push   %ebp
810031b6:	89 e5                	mov    %esp,%ebp
810031b8:	83 ec 18             	sub    $0x18,%esp
810031bb:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
810031c2:	00 00 00 
810031c5:	83 ec 04             	sub    $0x4,%esp
810031c8:	ff 75 14             	push   0x14(%ebp)
810031cb:	ff 75 10             	push   0x10(%ebp)
810031ce:	ff 75 0c             	push   0xc(%ebp)
810031d1:	e8 3d d0 ff ff       	call   81000213 <write>
810031d6:	83 c4 10             	add    $0x10,%esp
810031d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810031dc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810031e0:	75 14                	jne    810031f6 <_write_r+0x41>
810031e2:	a1 f0 53 00 81       	mov    0x810053f0,%eax
810031e7:	85 c0                	test   %eax,%eax
810031e9:	74 0b                	je     810031f6 <_write_r+0x41>
810031eb:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
810031f1:	8b 45 08             	mov    0x8(%ebp),%eax
810031f4:	89 10                	mov    %edx,(%eax)
810031f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031f9:	c9                   	leave  
810031fa:	c3                   	ret    

810031fb <__swsetup_r>:
810031fb:	55                   	push   %ebp
810031fc:	89 e5                	mov    %esp,%ebp
810031fe:	53                   	push   %ebx
810031ff:	83 ec 14             	sub    $0x14,%esp
81003202:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003205:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
8100320a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100320d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003211:	74 18                	je     8100322b <__swsetup_r+0x30>
81003213:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003216:	8b 40 38             	mov    0x38(%eax),%eax
81003219:	85 c0                	test   %eax,%eax
8100321b:	75 0e                	jne    8100322b <__swsetup_r+0x30>
8100321d:	83 ec 0c             	sub    $0xc,%esp
81003220:	ff 75 f4             	push   -0xc(%ebp)
81003223:	e8 96 d5 ff ff       	call   810007be <__sinit>
81003228:	83 c4 10             	add    $0x10,%esp
8100322b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100322f:	98                   	cwtl   
81003230:	83 e0 08             	and    $0x8,%eax
81003233:	85 c0                	test   %eax,%eax
81003235:	0f 85 82 00 00 00    	jne    810032bd <__swsetup_r+0xc2>
8100323b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100323f:	98                   	cwtl   
81003240:	83 e0 10             	and    $0x10,%eax
81003243:	85 c0                	test   %eax,%eax
81003245:	75 1e                	jne    81003265 <__swsetup_r+0x6a>
81003247:	8b 45 08             	mov    0x8(%ebp),%eax
8100324a:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81003250:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003254:	83 c8 40             	or     $0x40,%eax
81003257:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100325b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003260:	e9 ec 00 00 00       	jmp    81003351 <__swsetup_r+0x156>
81003265:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003269:	98                   	cwtl   
8100326a:	83 e0 04             	and    $0x4,%eax
8100326d:	85 c0                	test   %eax,%eax
8100326f:	74 41                	je     810032b2 <__swsetup_r+0xb7>
81003271:	8b 43 30             	mov    0x30(%ebx),%eax
81003274:	85 c0                	test   %eax,%eax
81003276:	74 23                	je     8100329b <__swsetup_r+0xa0>
81003278:	8b 53 30             	mov    0x30(%ebx),%edx
8100327b:	8d 43 40             	lea    0x40(%ebx),%eax
8100327e:	39 c2                	cmp    %eax,%edx
81003280:	74 12                	je     81003294 <__swsetup_r+0x99>
81003282:	8b 43 30             	mov    0x30(%ebx),%eax
81003285:	83 ec 08             	sub    $0x8,%esp
81003288:	50                   	push   %eax
81003289:	ff 75 08             	push   0x8(%ebp)
8100328c:	e8 95 06 00 00       	call   81003926 <_free_r>
81003291:	83 c4 10             	add    $0x10,%esp
81003294:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100329b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100329f:	83 e0 db             	and    $0xffffffdb,%eax
810032a2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032a6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810032ad:	8b 43 10             	mov    0x10(%ebx),%eax
810032b0:	89 03                	mov    %eax,(%ebx)
810032b2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032b6:	83 c8 08             	or     $0x8,%eax
810032b9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810032bd:	8b 43 10             	mov    0x10(%ebx),%eax
810032c0:	85 c0                	test   %eax,%eax
810032c2:	75 2b                	jne    810032ef <__swsetup_r+0xf4>
810032c4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032c8:	98                   	cwtl   
810032c9:	25 00 02 00 00       	and    $0x200,%eax
810032ce:	85 c0                	test   %eax,%eax
810032d0:	74 0e                	je     810032e0 <__swsetup_r+0xe5>
810032d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032d6:	98                   	cwtl   
810032d7:	25 80 00 00 00       	and    $0x80,%eax
810032dc:	85 c0                	test   %eax,%eax
810032de:	74 0f                	je     810032ef <__swsetup_r+0xf4>
810032e0:	83 ec 08             	sub    $0x8,%esp
810032e3:	53                   	push   %ebx
810032e4:	ff 75 08             	push   0x8(%ebp)
810032e7:	e8 62 0c 00 00       	call   81003f4e <__smakebuf_r>
810032ec:	83 c4 10             	add    $0x10,%esp
810032ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810032f3:	98                   	cwtl   
810032f4:	83 e0 01             	and    $0x1,%eax
810032f7:	85 c0                	test   %eax,%eax
810032f9:	74 11                	je     8100330c <__swsetup_r+0x111>
810032fb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81003302:	8b 43 14             	mov    0x14(%ebx),%eax
81003305:	f7 d8                	neg    %eax
81003307:	89 43 18             	mov    %eax,0x18(%ebx)
8100330a:	eb 19                	jmp    81003325 <__swsetup_r+0x12a>
8100330c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003310:	98                   	cwtl   
81003311:	83 e0 02             	and    $0x2,%eax
81003314:	85 c0                	test   %eax,%eax
81003316:	75 05                	jne    8100331d <__swsetup_r+0x122>
81003318:	8b 43 14             	mov    0x14(%ebx),%eax
8100331b:	eb 05                	jmp    81003322 <__swsetup_r+0x127>
8100331d:	b8 00 00 00 00       	mov    $0x0,%eax
81003322:	89 43 08             	mov    %eax,0x8(%ebx)
81003325:	8b 43 10             	mov    0x10(%ebx),%eax
81003328:	85 c0                	test   %eax,%eax
8100332a:	75 20                	jne    8100334c <__swsetup_r+0x151>
8100332c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003330:	98                   	cwtl   
81003331:	25 80 00 00 00       	and    $0x80,%eax
81003336:	85 c0                	test   %eax,%eax
81003338:	74 12                	je     8100334c <__swsetup_r+0x151>
8100333a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100333e:	83 c8 40             	or     $0x40,%eax
81003341:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003345:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100334a:	eb 05                	jmp    81003351 <__swsetup_r+0x156>
8100334c:	b8 00 00 00 00       	mov    $0x0,%eax
81003351:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003354:	c9                   	leave  
81003355:	c3                   	ret    

81003356 <_close_r>:
81003356:	55                   	push   %ebp
81003357:	89 e5                	mov    %esp,%ebp
81003359:	83 ec 18             	sub    $0x18,%esp
8100335c:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
81003363:	00 00 00 
81003366:	83 ec 0c             	sub    $0xc,%esp
81003369:	ff 75 0c             	push   0xc(%ebp)
8100336c:	e8 cf ce ff ff       	call   81000240 <close>
81003371:	83 c4 10             	add    $0x10,%esp
81003374:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003377:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100337b:	75 14                	jne    81003391 <_close_r+0x3b>
8100337d:	a1 f0 53 00 81       	mov    0x810053f0,%eax
81003382:	85 c0                	test   %eax,%eax
81003384:	74 0b                	je     81003391 <_close_r+0x3b>
81003386:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
8100338c:	8b 45 08             	mov    0x8(%ebp),%eax
8100338f:	89 10                	mov    %edx,(%eax)
81003391:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003394:	c9                   	leave  
81003395:	c3                   	ret    

81003396 <_fclose_r>:
81003396:	55                   	push   %ebp
81003397:	89 e5                	mov    %esp,%ebp
81003399:	53                   	push   %ebx
8100339a:	83 ec 14             	sub    $0x14,%esp
8100339d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810033a0:	85 db                	test   %ebx,%ebx
810033a2:	75 0a                	jne    810033ae <_fclose_r+0x18>
810033a4:	b8 00 00 00 00       	mov    $0x0,%eax
810033a9:	e9 ea 00 00 00       	jmp    81003498 <_fclose_r+0x102>
810033ae:	8b 45 08             	mov    0x8(%ebp),%eax
810033b1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810033b4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810033b8:	74 18                	je     810033d2 <_fclose_r+0x3c>
810033ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033bd:	8b 40 38             	mov    0x38(%eax),%eax
810033c0:	85 c0                	test   %eax,%eax
810033c2:	75 0e                	jne    810033d2 <_fclose_r+0x3c>
810033c4:	83 ec 0c             	sub    $0xc,%esp
810033c7:	ff 75 f0             	push   -0x10(%ebp)
810033ca:	e8 ef d3 ff ff       	call   810007be <__sinit>
810033cf:	83 c4 10             	add    $0x10,%esp
810033d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033d6:	66 85 c0             	test   %ax,%ax
810033d9:	75 0a                	jne    810033e5 <_fclose_r+0x4f>
810033db:	b8 00 00 00 00       	mov    $0x0,%eax
810033e0:	e9 b3 00 00 00       	jmp    81003498 <_fclose_r+0x102>
810033e5:	83 ec 08             	sub    $0x8,%esp
810033e8:	53                   	push   %ebx
810033e9:	ff 75 08             	push   0x8(%ebp)
810033ec:	e8 c9 00 00 00       	call   810034ba <__sflush_r>
810033f1:	83 c4 10             	add    $0x10,%esp
810033f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033f7:	8b 43 2c             	mov    0x2c(%ebx),%eax
810033fa:	85 c0                	test   %eax,%eax
810033fc:	74 1d                	je     8100341b <_fclose_r+0x85>
810033fe:	8b 43 2c             	mov    0x2c(%ebx),%eax
81003401:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003404:	83 ec 08             	sub    $0x8,%esp
81003407:	52                   	push   %edx
81003408:	ff 75 08             	push   0x8(%ebp)
8100340b:	ff d0                	call   *%eax
8100340d:	83 c4 10             	add    $0x10,%esp
81003410:	85 c0                	test   %eax,%eax
81003412:	79 07                	jns    8100341b <_fclose_r+0x85>
81003414:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
8100341b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100341f:	98                   	cwtl   
81003420:	25 80 00 00 00       	and    $0x80,%eax
81003425:	85 c0                	test   %eax,%eax
81003427:	74 12                	je     8100343b <_fclose_r+0xa5>
81003429:	8b 43 10             	mov    0x10(%ebx),%eax
8100342c:	83 ec 08             	sub    $0x8,%esp
8100342f:	50                   	push   %eax
81003430:	ff 75 08             	push   0x8(%ebp)
81003433:	e8 ee 04 00 00       	call   81003926 <_free_r>
81003438:	83 c4 10             	add    $0x10,%esp
8100343b:	8b 43 30             	mov    0x30(%ebx),%eax
8100343e:	85 c0                	test   %eax,%eax
81003440:	74 23                	je     81003465 <_fclose_r+0xcf>
81003442:	8b 53 30             	mov    0x30(%ebx),%edx
81003445:	8d 43 40             	lea    0x40(%ebx),%eax
81003448:	39 c2                	cmp    %eax,%edx
8100344a:	74 12                	je     8100345e <_fclose_r+0xc8>
8100344c:	8b 43 30             	mov    0x30(%ebx),%eax
8100344f:	83 ec 08             	sub    $0x8,%esp
81003452:	50                   	push   %eax
81003453:	ff 75 08             	push   0x8(%ebp)
81003456:	e8 cb 04 00 00       	call   81003926 <_free_r>
8100345b:	83 c4 10             	add    $0x10,%esp
8100345e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003465:	8b 43 44             	mov    0x44(%ebx),%eax
81003468:	85 c0                	test   %eax,%eax
8100346a:	74 19                	je     81003485 <_fclose_r+0xef>
8100346c:	8b 43 44             	mov    0x44(%ebx),%eax
8100346f:	83 ec 08             	sub    $0x8,%esp
81003472:	50                   	push   %eax
81003473:	ff 75 08             	push   0x8(%ebp)
81003476:	e8 ab 04 00 00       	call   81003926 <_free_r>
8100347b:	83 c4 10             	add    $0x10,%esp
8100347e:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81003485:	e8 cd d3 ff ff       	call   81000857 <__sfp_lock_acquire>
8100348a:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81003490:	e8 c8 d3 ff ff       	call   8100085d <__sfp_lock_release>
81003495:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003498:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100349b:	c9                   	leave  
8100349c:	c3                   	ret    

8100349d <fclose>:
8100349d:	55                   	push   %ebp
8100349e:	89 e5                	mov    %esp,%ebp
810034a0:	83 ec 08             	sub    $0x8,%esp
810034a3:	8b 55 08             	mov    0x8(%ebp),%edx
810034a6:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
810034ab:	83 ec 08             	sub    $0x8,%esp
810034ae:	52                   	push   %edx
810034af:	50                   	push   %eax
810034b0:	e8 e1 fe ff ff       	call   81003396 <_fclose_r>
810034b5:	83 c4 10             	add    $0x10,%esp
810034b8:	c9                   	leave  
810034b9:	c3                   	ret    

810034ba <__sflush_r>:
810034ba:	55                   	push   %ebp
810034bb:	89 e5                	mov    %esp,%ebp
810034bd:	57                   	push   %edi
810034be:	56                   	push   %esi
810034bf:	53                   	push   %ebx
810034c0:	83 ec 1c             	sub    $0x1c,%esp
810034c3:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810034c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034ca:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810034ce:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810034d2:	83 e0 08             	and    $0x8,%eax
810034d5:	85 c0                	test   %eax,%eax
810034d7:	0f 85 93 01 00 00    	jne    81003670 <__sflush_r+0x1b6>
810034dd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810034e1:	80 cc 08             	or     $0x8,%ah
810034e4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810034e8:	8b 43 04             	mov    0x4(%ebx),%eax
810034eb:	85 c0                	test   %eax,%eax
810034ed:	7f 0b                	jg     810034fa <__sflush_r+0x40>
810034ef:	8b 43 3c             	mov    0x3c(%ebx),%eax
810034f2:	85 c0                	test   %eax,%eax
810034f4:	0f 8e 6f 01 00 00    	jle    81003669 <__sflush_r+0x1af>
810034fa:	8b 43 28             	mov    0x28(%ebx),%eax
810034fd:	85 c0                	test   %eax,%eax
810034ff:	0f 84 64 01 00 00    	je     81003669 <__sflush_r+0x1af>
81003505:	8b 45 08             	mov    0x8(%ebp),%eax
81003508:	8b 00                	mov    (%eax),%eax
8100350a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100350d:	8b 45 08             	mov    0x8(%ebp),%eax
81003510:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003516:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100351a:	98                   	cwtl   
8100351b:	25 00 10 00 00       	and    $0x1000,%eax
81003520:	85 c0                	test   %eax,%eax
81003522:	74 08                	je     8100352c <__sflush_r+0x72>
81003524:	8b 43 50             	mov    0x50(%ebx),%eax
81003527:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100352a:	eb 64                	jmp    81003590 <__sflush_r+0xd6>
8100352c:	8b 43 28             	mov    0x28(%ebx),%eax
8100352f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81003532:	6a 01                	push   $0x1
81003534:	6a 00                	push   $0x0
81003536:	52                   	push   %edx
81003537:	ff 75 08             	push   0x8(%ebp)
8100353a:	ff d0                	call   *%eax
8100353c:	83 c4 10             	add    $0x10,%esp
8100353f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003542:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003546:	75 48                	jne    81003590 <__sflush_r+0xd6>
81003548:	8b 45 08             	mov    0x8(%ebp),%eax
8100354b:	8b 00                	mov    (%eax),%eax
8100354d:	85 c0                	test   %eax,%eax
8100354f:	74 3f                	je     81003590 <__sflush_r+0xd6>
81003551:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003558:	8b 45 08             	mov    0x8(%ebp),%eax
8100355b:	8b 00                	mov    (%eax),%eax
8100355d:	83 f8 1d             	cmp    $0x1d,%eax
81003560:	74 0a                	je     8100356c <__sflush_r+0xb2>
81003562:	8b 45 08             	mov    0x8(%ebp),%eax
81003565:	8b 00                	mov    (%eax),%eax
81003567:	83 f8 16             	cmp    $0x16,%eax
8100356a:	75 11                	jne    8100357d <__sflush_r+0xc3>
8100356c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81003573:	8b 45 08             	mov    0x8(%ebp),%eax
81003576:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003579:	89 10                	mov    %edx,(%eax)
8100357b:	eb 0b                	jmp    81003588 <__sflush_r+0xce>
8100357d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003581:	83 c8 40             	or     $0x40,%eax
81003584:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003588:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100358b:	e9 48 01 00 00       	jmp    810036d8 <__sflush_r+0x21e>
81003590:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003594:	98                   	cwtl   
81003595:	83 e0 04             	and    $0x4,%eax
81003598:	85 c0                	test   %eax,%eax
8100359a:	74 13                	je     810035af <__sflush_r+0xf5>
8100359c:	8b 43 04             	mov    0x4(%ebx),%eax
8100359f:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810035a2:	8b 43 30             	mov    0x30(%ebx),%eax
810035a5:	85 c0                	test   %eax,%eax
810035a7:	74 06                	je     810035af <__sflush_r+0xf5>
810035a9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810035ac:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810035af:	8b 43 28             	mov    0x28(%ebx),%eax
810035b2:	8b 53 1c             	mov    0x1c(%ebx),%edx
810035b5:	6a 00                	push   $0x0
810035b7:	ff 75 e4             	push   -0x1c(%ebp)
810035ba:	52                   	push   %edx
810035bb:	ff 75 08             	push   0x8(%ebp)
810035be:	ff d0                	call   *%eax
810035c0:	83 c4 10             	add    $0x10,%esp
810035c3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035c6:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810035ca:	75 1d                	jne    810035e9 <__sflush_r+0x12f>
810035cc:	8b 45 08             	mov    0x8(%ebp),%eax
810035cf:	8b 00                	mov    (%eax),%eax
810035d1:	85 c0                	test   %eax,%eax
810035d3:	74 14                	je     810035e9 <__sflush_r+0x12f>
810035d5:	8b 45 08             	mov    0x8(%ebp),%eax
810035d8:	8b 00                	mov    (%eax),%eax
810035da:	83 f8 1d             	cmp    $0x1d,%eax
810035dd:	74 0a                	je     810035e9 <__sflush_r+0x12f>
810035df:	8b 45 08             	mov    0x8(%ebp),%eax
810035e2:	8b 00                	mov    (%eax),%eax
810035e4:	83 f8 16             	cmp    $0x16,%eax
810035e7:	75 6e                	jne    81003657 <__sflush_r+0x19d>
810035e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810035ed:	80 e4 f7             	and    $0xf7,%ah
810035f0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810035f4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810035fb:	8b 43 10             	mov    0x10(%ebx),%eax
810035fe:	89 03                	mov    %eax,(%ebx)
81003600:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003604:	98                   	cwtl   
81003605:	25 00 10 00 00       	and    $0x1000,%eax
8100360a:	85 c0                	test   %eax,%eax
8100360c:	74 15                	je     81003623 <__sflush_r+0x169>
8100360e:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003612:	75 09                	jne    8100361d <__sflush_r+0x163>
81003614:	8b 45 08             	mov    0x8(%ebp),%eax
81003617:	8b 00                	mov    (%eax),%eax
81003619:	85 c0                	test   %eax,%eax
8100361b:	75 06                	jne    81003623 <__sflush_r+0x169>
8100361d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003620:	89 43 50             	mov    %eax,0x50(%ebx)
81003623:	8b 45 08             	mov    0x8(%ebp),%eax
81003626:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003629:	89 10                	mov    %edx,(%eax)
8100362b:	8b 43 30             	mov    0x30(%ebx),%eax
8100362e:	85 c0                	test   %eax,%eax
81003630:	74 37                	je     81003669 <__sflush_r+0x1af>
81003632:	8b 53 30             	mov    0x30(%ebx),%edx
81003635:	8d 43 40             	lea    0x40(%ebx),%eax
81003638:	39 c2                	cmp    %eax,%edx
8100363a:	74 12                	je     8100364e <__sflush_r+0x194>
8100363c:	8b 43 30             	mov    0x30(%ebx),%eax
8100363f:	83 ec 08             	sub    $0x8,%esp
81003642:	50                   	push   %eax
81003643:	ff 75 08             	push   0x8(%ebp)
81003646:	e8 db 02 00 00       	call   81003926 <_free_r>
8100364b:	83 c4 10             	add    $0x10,%esp
8100364e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81003655:	eb 12                	jmp    81003669 <__sflush_r+0x1af>
81003657:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100365b:	83 c8 40             	or     $0x40,%eax
8100365e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003662:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003667:	eb 6f                	jmp    810036d8 <__sflush_r+0x21e>
81003669:	b8 00 00 00 00       	mov    $0x0,%eax
8100366e:	eb 68                	jmp    810036d8 <__sflush_r+0x21e>
81003670:	8b 73 10             	mov    0x10(%ebx),%esi
81003673:	85 f6                	test   %esi,%esi
81003675:	75 07                	jne    8100367e <__sflush_r+0x1c4>
81003677:	b8 00 00 00 00       	mov    $0x0,%eax
8100367c:	eb 5a                	jmp    810036d8 <__sflush_r+0x21e>
8100367e:	8b 03                	mov    (%ebx),%eax
81003680:	29 f0                	sub    %esi,%eax
81003682:	89 c7                	mov    %eax,%edi
81003684:	89 33                	mov    %esi,(%ebx)
81003686:	0f bf 45 de          	movswl -0x22(%ebp),%eax
8100368a:	83 e0 03             	and    $0x3,%eax
8100368d:	85 c0                	test   %eax,%eax
8100368f:	75 05                	jne    81003696 <__sflush_r+0x1dc>
81003691:	8b 43 14             	mov    0x14(%ebx),%eax
81003694:	eb 05                	jmp    8100369b <__sflush_r+0x1e1>
81003696:	b8 00 00 00 00       	mov    $0x0,%eax
8100369b:	89 43 08             	mov    %eax,0x8(%ebx)
8100369e:	eb 2f                	jmp    810036cf <__sflush_r+0x215>
810036a0:	8b 43 24             	mov    0x24(%ebx),%eax
810036a3:	8b 53 1c             	mov    0x1c(%ebx),%edx
810036a6:	57                   	push   %edi
810036a7:	56                   	push   %esi
810036a8:	52                   	push   %edx
810036a9:	ff 75 08             	push   0x8(%ebp)
810036ac:	ff d0                	call   *%eax
810036ae:	83 c4 10             	add    $0x10,%esp
810036b1:	85 c0                	test   %eax,%eax
810036b3:	7f 12                	jg     810036c7 <__sflush_r+0x20d>
810036b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810036b9:	83 c8 40             	or     $0x40,%eax
810036bc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810036c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810036c5:	eb 11                	jmp    810036d8 <__sflush_r+0x21e>
810036c7:	89 c1                	mov    %eax,%ecx
810036c9:	89 c8                	mov    %ecx,%eax
810036cb:	01 c6                	add    %eax,%esi
810036cd:	29 cf                	sub    %ecx,%edi
810036cf:	85 ff                	test   %edi,%edi
810036d1:	7f cd                	jg     810036a0 <__sflush_r+0x1e6>
810036d3:	b8 00 00 00 00       	mov    $0x0,%eax
810036d8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810036db:	5b                   	pop    %ebx
810036dc:	5e                   	pop    %esi
810036dd:	5f                   	pop    %edi
810036de:	5d                   	pop    %ebp
810036df:	c3                   	ret    

810036e0 <_fflush_r>:
810036e0:	55                   	push   %ebp
810036e1:	89 e5                	mov    %esp,%ebp
810036e3:	53                   	push   %ebx
810036e4:	83 ec 14             	sub    $0x14,%esp
810036e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810036ea:	8b 45 08             	mov    0x8(%ebp),%eax
810036ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810036f0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810036f4:	74 18                	je     8100370e <_fflush_r+0x2e>
810036f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810036f9:	8b 40 38             	mov    0x38(%eax),%eax
810036fc:	85 c0                	test   %eax,%eax
810036fe:	75 0e                	jne    8100370e <_fflush_r+0x2e>
81003700:	83 ec 0c             	sub    $0xc,%esp
81003703:	ff 75 f4             	push   -0xc(%ebp)
81003706:	e8 b3 d0 ff ff       	call   810007be <__sinit>
8100370b:	83 c4 10             	add    $0x10,%esp
8100370e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003712:	66 85 c0             	test   %ax,%ax
81003715:	75 07                	jne    8100371e <_fflush_r+0x3e>
81003717:	b8 00 00 00 00       	mov    $0x0,%eax
8100371c:	eb 15                	jmp    81003733 <_fflush_r+0x53>
8100371e:	83 ec 08             	sub    $0x8,%esp
81003721:	53                   	push   %ebx
81003722:	ff 75 08             	push   0x8(%ebp)
81003725:	e8 90 fd ff ff       	call   810034ba <__sflush_r>
8100372a:	83 c4 10             	add    $0x10,%esp
8100372d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003730:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003733:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003736:	c9                   	leave  
81003737:	c3                   	ret    

81003738 <fflush>:
81003738:	55                   	push   %ebp
81003739:	89 e5                	mov    %esp,%ebp
8100373b:	83 ec 08             	sub    $0x8,%esp
8100373e:	8b 55 08             	mov    0x8(%ebp),%edx
81003741:	85 d2                	test   %edx,%edx
81003743:	75 18                	jne    8100375d <fflush+0x25>
81003745:	a1 28 46 00 81       	mov    0x81004628,%eax
8100374a:	83 ec 08             	sub    $0x8,%esp
8100374d:	68 e0 36 00 81       	push   $0x810036e0
81003752:	50                   	push   %eax
81003753:	e8 79 d6 ff ff       	call   81000dd1 <_fwalk_reent>
81003758:	83 c4 10             	add    $0x10,%esp
8100375b:	eb 12                	jmp    8100376f <fflush+0x37>
8100375d:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
81003762:	83 ec 08             	sub    $0x8,%esp
81003765:	52                   	push   %edx
81003766:	50                   	push   %eax
81003767:	e8 74 ff ff ff       	call   810036e0 <_fflush_r>
8100376c:	83 c4 10             	add    $0x10,%esp
8100376f:	c9                   	leave  
81003770:	c3                   	ret    

81003771 <__sputc_r>:
81003771:	55                   	push   %ebp
81003772:	89 e5                	mov    %esp,%ebp
81003774:	83 ec 08             	sub    $0x8,%esp
81003777:	8b 45 10             	mov    0x10(%ebp),%eax
8100377a:	8b 40 08             	mov    0x8(%eax),%eax
8100377d:	8d 50 ff             	lea    -0x1(%eax),%edx
81003780:	8b 45 10             	mov    0x10(%ebp),%eax
81003783:	89 50 08             	mov    %edx,0x8(%eax)
81003786:	8b 45 10             	mov    0x10(%ebp),%eax
81003789:	8b 40 08             	mov    0x8(%eax),%eax
8100378c:	85 c0                	test   %eax,%eax
8100378e:	79 17                	jns    810037a7 <__sputc_r+0x36>
81003790:	8b 45 10             	mov    0x10(%ebp),%eax
81003793:	8b 50 08             	mov    0x8(%eax),%edx
81003796:	8b 45 10             	mov    0x10(%ebp),%eax
81003799:	8b 40 18             	mov    0x18(%eax),%eax
8100379c:	39 c2                	cmp    %eax,%edx
8100379e:	7c 21                	jl     810037c1 <__sputc_r+0x50>
810037a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810037a3:	3c 0a                	cmp    $0xa,%al
810037a5:	74 1a                	je     810037c1 <__sputc_r+0x50>
810037a7:	8b 45 10             	mov    0x10(%ebp),%eax
810037aa:	8b 00                	mov    (%eax),%eax
810037ac:	8d 48 01             	lea    0x1(%eax),%ecx
810037af:	8b 55 10             	mov    0x10(%ebp),%edx
810037b2:	89 0a                	mov    %ecx,(%edx)
810037b4:	8b 55 0c             	mov    0xc(%ebp),%edx
810037b7:	88 10                	mov    %dl,(%eax)
810037b9:	0f b6 00             	movzbl (%eax),%eax
810037bc:	0f b6 c0             	movzbl %al,%eax
810037bf:	eb 14                	jmp    810037d5 <__sputc_r+0x64>
810037c1:	83 ec 04             	sub    $0x4,%esp
810037c4:	ff 75 10             	push   0x10(%ebp)
810037c7:	ff 75 0c             	push   0xc(%ebp)
810037ca:	ff 75 08             	push   0x8(%ebp)
810037cd:	e8 b0 f8 ff ff       	call   81003082 <__swbuf_r>
810037d2:	83 c4 10             	add    $0x10,%esp
810037d5:	c9                   	leave  
810037d6:	c3                   	ret    

810037d7 <__fputwc>:
810037d7:	55                   	push   %ebp
810037d8:	89 e5                	mov    %esp,%ebp
810037da:	83 ec 18             	sub    $0x18,%esp
810037dd:	e8 f3 06 00 00       	call   81003ed5 <__locale_mb_cur_max>
810037e2:	83 f8 01             	cmp    $0x1,%eax
810037e5:	75 1e                	jne    81003805 <__fputwc+0x2e>
810037e7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810037eb:	7e 18                	jle    81003805 <__fputwc+0x2e>
810037ed:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
810037f4:	7f 0f                	jg     81003805 <__fputwc+0x2e>
810037f6:	8b 45 0c             	mov    0xc(%ebp),%eax
810037f9:	88 45 ef             	mov    %al,-0x11(%ebp)
810037fc:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
81003803:	eb 3c                	jmp    81003841 <__fputwc+0x6a>
81003805:	8b 45 10             	mov    0x10(%ebp),%eax
81003808:	83 c0 5c             	add    $0x5c,%eax
8100380b:	50                   	push   %eax
8100380c:	ff 75 0c             	push   0xc(%ebp)
8100380f:	8d 45 ef             	lea    -0x11(%ebp),%eax
81003812:	50                   	push   %eax
81003813:	ff 75 08             	push   0x8(%ebp)
81003816:	e8 df 0b 00 00       	call   810043fa <_wcrtomb_r>
8100381b:	83 c4 10             	add    $0x10,%esp
8100381e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003821:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81003825:	75 1a                	jne    81003841 <__fputwc+0x6a>
81003827:	8b 45 10             	mov    0x10(%ebp),%eax
8100382a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100382e:	83 c8 40             	or     $0x40,%eax
81003831:	89 c2                	mov    %eax,%edx
81003833:	8b 45 10             	mov    0x10(%ebp),%eax
81003836:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100383a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100383f:	eb 44                	jmp    81003885 <__fputwc+0xae>
81003841:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003848:	eb 30                	jmp    8100387a <__fputwc+0xa3>
8100384a:	8d 55 ef             	lea    -0x11(%ebp),%edx
8100384d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003850:	01 d0                	add    %edx,%eax
81003852:	0f b6 00             	movzbl (%eax),%eax
81003855:	0f b6 c0             	movzbl %al,%eax
81003858:	83 ec 04             	sub    $0x4,%esp
8100385b:	ff 75 10             	push   0x10(%ebp)
8100385e:	50                   	push   %eax
8100385f:	ff 75 08             	push   0x8(%ebp)
81003862:	e8 0a ff ff ff       	call   81003771 <__sputc_r>
81003867:	83 c4 10             	add    $0x10,%esp
8100386a:	83 f8 ff             	cmp    $0xffffffff,%eax
8100386d:	75 07                	jne    81003876 <__fputwc+0x9f>
8100386f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003874:	eb 0f                	jmp    81003885 <__fputwc+0xae>
81003876:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8100387a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100387d:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81003880:	72 c8                	jb     8100384a <__fputwc+0x73>
81003882:	8b 45 0c             	mov    0xc(%ebp),%eax
81003885:	c9                   	leave  
81003886:	c3                   	ret    

81003887 <_fputwc_r>:
81003887:	55                   	push   %ebp
81003888:	89 e5                	mov    %esp,%ebp
8100388a:	83 ec 18             	sub    $0x18,%esp
8100388d:	8b 45 10             	mov    0x10(%ebp),%eax
81003890:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003894:	98                   	cwtl   
81003895:	25 00 20 00 00       	and    $0x2000,%eax
8100389a:	85 c0                	test   %eax,%eax
8100389c:	75 24                	jne    810038c2 <_fputwc_r+0x3b>
8100389e:	8b 45 10             	mov    0x10(%ebp),%eax
810038a1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810038a5:	80 cc 20             	or     $0x20,%ah
810038a8:	89 c2                	mov    %eax,%edx
810038aa:	8b 45 10             	mov    0x10(%ebp),%eax
810038ad:	66 89 50 0c          	mov    %dx,0xc(%eax)
810038b1:	8b 45 10             	mov    0x10(%ebp),%eax
810038b4:	8b 40 64             	mov    0x64(%eax),%eax
810038b7:	80 cc 20             	or     $0x20,%ah
810038ba:	89 c2                	mov    %eax,%edx
810038bc:	8b 45 10             	mov    0x10(%ebp),%eax
810038bf:	89 50 64             	mov    %edx,0x64(%eax)
810038c2:	83 ec 04             	sub    $0x4,%esp
810038c5:	ff 75 10             	push   0x10(%ebp)
810038c8:	ff 75 0c             	push   0xc(%ebp)
810038cb:	ff 75 08             	push   0x8(%ebp)
810038ce:	e8 04 ff ff ff       	call   810037d7 <__fputwc>
810038d3:	83 c4 10             	add    $0x10,%esp
810038d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038dc:	c9                   	leave  
810038dd:	c3                   	ret    

810038de <fputwc>:
810038de:	55                   	push   %ebp
810038df:	89 e5                	mov    %esp,%ebp
810038e1:	83 ec 18             	sub    $0x18,%esp
810038e4:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
810038e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810038ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810038ef:	89 45 f0             	mov    %eax,-0x10(%ebp)
810038f2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810038f6:	74 18                	je     81003910 <fputwc+0x32>
810038f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810038fb:	8b 40 38             	mov    0x38(%eax),%eax
810038fe:	85 c0                	test   %eax,%eax
81003900:	75 0e                	jne    81003910 <fputwc+0x32>
81003902:	83 ec 0c             	sub    $0xc,%esp
81003905:	ff 75 f0             	push   -0x10(%ebp)
81003908:	e8 b1 ce ff ff       	call   810007be <__sinit>
8100390d:	83 c4 10             	add    $0x10,%esp
81003910:	83 ec 04             	sub    $0x4,%esp
81003913:	ff 75 0c             	push   0xc(%ebp)
81003916:	ff 75 08             	push   0x8(%ebp)
81003919:	ff 75 f4             	push   -0xc(%ebp)
8100391c:	e8 66 ff ff ff       	call   81003887 <_fputwc_r>
81003921:	83 c4 10             	add    $0x10,%esp
81003924:	c9                   	leave  
81003925:	c3                   	ret    

81003926 <_free_r>:
81003926:	55                   	push   %ebp
81003927:	89 e5                	mov    %esp,%ebp
81003929:	53                   	push   %ebx
8100392a:	83 ec 34             	sub    $0x34,%esp
8100392d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003931:	0f 84 c4 03 00 00    	je     81003cfb <_free_r+0x3d5>
81003937:	83 ec 0c             	sub    $0xc,%esp
8100393a:	ff 75 08             	push   0x8(%ebp)
8100393d:	e8 b3 e1 ff ff       	call   81001af5 <__malloc_lock>
81003942:	83 c4 10             	add    $0x10,%esp
81003945:	8b 45 0c             	mov    0xc(%ebp),%eax
81003948:	83 e8 08             	sub    $0x8,%eax
8100394b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100394e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003951:	8b 40 04             	mov    0x4(%eax),%eax
81003954:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003957:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100395a:	83 e0 fe             	and    $0xfffffffe,%eax
8100395d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003960:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003963:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003966:	01 d0                	add    %edx,%eax
81003968:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100396b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100396e:	8b 40 04             	mov    0x4(%eax),%eax
81003971:	83 e0 fc             	and    $0xfffffffc,%eax
81003974:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003977:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
8100397c:	8b 40 08             	mov    0x8(%eax),%eax
8100397f:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81003982:	0f 85 94 00 00 00    	jne    81003a1c <_free_r+0xf6>
81003988:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100398b:	01 45 f0             	add    %eax,-0x10(%ebp)
8100398e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003991:	83 e0 01             	and    $0x1,%eax
81003994:	85 c0                	test   %eax,%eax
81003996:	75 3a                	jne    810039d2 <_free_r+0xac>
81003998:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100399b:	8b 00                	mov    (%eax),%eax
8100399d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810039a0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039a3:	f7 d8                	neg    %eax
810039a5:	01 45 f4             	add    %eax,-0xc(%ebp)
810039a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810039ab:	01 45 f0             	add    %eax,-0x10(%ebp)
810039ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039b1:	8b 40 0c             	mov    0xc(%eax),%eax
810039b4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810039b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039ba:	8b 40 08             	mov    0x8(%eax),%eax
810039bd:	89 45 e8             	mov    %eax,-0x18(%ebp)
810039c0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810039c3:	8b 55 ec             	mov    -0x14(%ebp),%edx
810039c6:	89 50 0c             	mov    %edx,0xc(%eax)
810039c9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810039cc:	8b 55 e8             	mov    -0x18(%ebp),%edx
810039cf:	89 50 08             	mov    %edx,0x8(%eax)
810039d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810039d5:	83 c8 01             	or     $0x1,%eax
810039d8:	89 c2                	mov    %eax,%edx
810039da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039dd:	89 50 04             	mov    %edx,0x4(%eax)
810039e0:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
810039e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810039e8:	89 42 08             	mov    %eax,0x8(%edx)
810039eb:	a1 e8 51 00 81       	mov    0x810051e8,%eax
810039f0:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810039f3:	72 14                	jb     81003a09 <_free_r+0xe3>
810039f5:	a1 a0 53 00 81       	mov    0x810053a0,%eax
810039fa:	83 ec 08             	sub    $0x8,%esp
810039fd:	50                   	push   %eax
810039fe:	ff 75 08             	push   0x8(%ebp)
81003a01:	e8 fb 02 00 00       	call   81003d01 <_malloc_trim_r>
81003a06:	83 c4 10             	add    $0x10,%esp
81003a09:	83 ec 0c             	sub    $0xc,%esp
81003a0c:	ff 75 08             	push   0x8(%ebp)
81003a0f:	e8 e7 e0 ff ff       	call   81001afb <__malloc_unlock>
81003a14:	83 c4 10             	add    $0x10,%esp
81003a17:	e9 e0 02 00 00       	jmp    81003cfc <_free_r+0x3d6>
81003a1c:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a1f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81003a22:	89 50 04             	mov    %edx,0x4(%eax)
81003a25:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003a2c:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003a2f:	83 e0 01             	and    $0x1,%eax
81003a32:	85 c0                	test   %eax,%eax
81003a34:	75 52                	jne    81003a88 <_free_r+0x162>
81003a36:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a39:	8b 00                	mov    (%eax),%eax
81003a3b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81003a3e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a41:	f7 d8                	neg    %eax
81003a43:	01 45 f4             	add    %eax,-0xc(%ebp)
81003a46:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003a49:	01 45 f0             	add    %eax,-0x10(%ebp)
81003a4c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a4f:	8b 40 08             	mov    0x8(%eax),%eax
81003a52:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
81003a57:	39 d0                	cmp    %edx,%eax
81003a59:	75 09                	jne    81003a64 <_free_r+0x13e>
81003a5b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003a62:	eb 24                	jmp    81003a88 <_free_r+0x162>
81003a64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a67:	8b 40 0c             	mov    0xc(%eax),%eax
81003a6a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003a6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003a70:	8b 40 08             	mov    0x8(%eax),%eax
81003a73:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003a76:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003a79:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003a7c:	89 50 0c             	mov    %edx,0xc(%eax)
81003a7f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003a82:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003a85:	89 50 08             	mov    %edx,0x8(%eax)
81003a88:	8b 55 dc             	mov    -0x24(%ebp),%edx
81003a8b:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a8e:	01 d0                	add    %edx,%eax
81003a90:	8b 40 04             	mov    0x4(%eax),%eax
81003a93:	83 e0 01             	and    $0x1,%eax
81003a96:	85 c0                	test   %eax,%eax
81003a98:	75 75                	jne    81003b0f <_free_r+0x1e9>
81003a9a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003a9d:	01 45 f0             	add    %eax,-0x10(%ebp)
81003aa0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003aa4:	75 45                	jne    81003aeb <_free_r+0x1c5>
81003aa6:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003aa9:	8b 40 08             	mov    0x8(%eax),%eax
81003aac:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
81003ab1:	39 d0                	cmp    %edx,%eax
81003ab3:	75 36                	jne    81003aeb <_free_r+0x1c5>
81003ab5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81003abc:	b8 e8 4d 00 81       	mov    $0x81004de8,%eax
81003ac1:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ac4:	89 50 0c             	mov    %edx,0xc(%eax)
81003ac7:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
81003acc:	8b 40 0c             	mov    0xc(%eax),%eax
81003acf:	89 42 08             	mov    %eax,0x8(%edx)
81003ad2:	ba e8 4d 00 81       	mov    $0x81004de8,%edx
81003ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ada:	89 50 0c             	mov    %edx,0xc(%eax)
81003add:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae0:	8b 50 0c             	mov    0xc(%eax),%edx
81003ae3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ae6:	89 50 08             	mov    %edx,0x8(%eax)
81003ae9:	eb 24                	jmp    81003b0f <_free_r+0x1e9>
81003aeb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003aee:	8b 40 0c             	mov    0xc(%eax),%eax
81003af1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003af4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003af7:	8b 40 08             	mov    0x8(%eax),%eax
81003afa:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003afd:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003b00:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b03:	89 50 0c             	mov    %edx,0xc(%eax)
81003b06:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b09:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b0c:	89 50 08             	mov    %edx,0x8(%eax)
81003b0f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b12:	83 c8 01             	or     $0x1,%eax
81003b15:	89 c2                	mov    %eax,%edx
81003b17:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b1a:	89 50 04             	mov    %edx,0x4(%eax)
81003b1d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003b20:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b23:	01 c2                	add    %eax,%edx
81003b25:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b28:	89 02                	mov    %eax,(%edx)
81003b2a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b2e:	0f 85 b7 01 00 00    	jne    81003ceb <_free_r+0x3c5>
81003b34:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003b3b:	77 7f                	ja     81003bbc <_free_r+0x296>
81003b3d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003b40:	c1 e8 03             	shr    $0x3,%eax
81003b43:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003b46:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003b4b:	8b 58 04             	mov    0x4(%eax),%ebx
81003b4e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b51:	8d 50 03             	lea    0x3(%eax),%edx
81003b54:	85 c0                	test   %eax,%eax
81003b56:	0f 48 c2             	cmovs  %edx,%eax
81003b59:	c1 f8 02             	sar    $0x2,%eax
81003b5c:	ba 01 00 00 00       	mov    $0x1,%edx
81003b61:	89 c1                	mov    %eax,%ecx
81003b63:	d3 e2                	shl    %cl,%edx
81003b65:	89 d0                	mov    %edx,%eax
81003b67:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
81003b6c:	09 d8                	or     %ebx,%eax
81003b6e:	89 42 04             	mov    %eax,0x4(%edx)
81003b71:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003b74:	83 c0 01             	add    $0x1,%eax
81003b77:	01 c0                	add    %eax,%eax
81003b79:	c1 e0 02             	shl    $0x2,%eax
81003b7c:	05 e0 4d 00 81       	add    $0x81004de0,%eax
81003b81:	83 e8 08             	sub    $0x8,%eax
81003b84:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003b87:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003b8a:	8b 40 08             	mov    0x8(%eax),%eax
81003b8d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003b90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b93:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003b96:	89 50 0c             	mov    %edx,0xc(%eax)
81003b99:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003b9c:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003b9f:	89 50 08             	mov    %edx,0x8(%eax)
81003ba2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ba5:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003ba8:	89 50 08             	mov    %edx,0x8(%eax)
81003bab:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003bae:	8b 50 08             	mov    0x8(%eax),%edx
81003bb1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003bb4:	89 50 0c             	mov    %edx,0xc(%eax)
81003bb7:	e9 2f 01 00 00       	jmp    81003ceb <_free_r+0x3c5>
81003bbc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bbf:	c1 e8 09             	shr    $0x9,%eax
81003bc2:	85 c0                	test   %eax,%eax
81003bc4:	75 08                	jne    81003bce <_free_r+0x2a8>
81003bc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bc9:	c1 e8 03             	shr    $0x3,%eax
81003bcc:	eb 77                	jmp    81003c45 <_free_r+0x31f>
81003bce:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bd1:	c1 e8 09             	shr    $0x9,%eax
81003bd4:	83 f8 04             	cmp    $0x4,%eax
81003bd7:	77 0b                	ja     81003be4 <_free_r+0x2be>
81003bd9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bdc:	c1 e8 06             	shr    $0x6,%eax
81003bdf:	83 c0 38             	add    $0x38,%eax
81003be2:	eb 61                	jmp    81003c45 <_free_r+0x31f>
81003be4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003be7:	c1 e8 09             	shr    $0x9,%eax
81003bea:	83 f8 14             	cmp    $0x14,%eax
81003bed:	77 0b                	ja     81003bfa <_free_r+0x2d4>
81003bef:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bf2:	c1 e8 09             	shr    $0x9,%eax
81003bf5:	83 c0 5b             	add    $0x5b,%eax
81003bf8:	eb 4b                	jmp    81003c45 <_free_r+0x31f>
81003bfa:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003bfd:	c1 e8 09             	shr    $0x9,%eax
81003c00:	83 f8 54             	cmp    $0x54,%eax
81003c03:	77 0b                	ja     81003c10 <_free_r+0x2ea>
81003c05:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c08:	c1 e8 0c             	shr    $0xc,%eax
81003c0b:	83 c0 6e             	add    $0x6e,%eax
81003c0e:	eb 35                	jmp    81003c45 <_free_r+0x31f>
81003c10:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c13:	c1 e8 09             	shr    $0x9,%eax
81003c16:	3d 54 01 00 00       	cmp    $0x154,%eax
81003c1b:	77 0b                	ja     81003c28 <_free_r+0x302>
81003c1d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c20:	c1 e8 0f             	shr    $0xf,%eax
81003c23:	83 c0 77             	add    $0x77,%eax
81003c26:	eb 1d                	jmp    81003c45 <_free_r+0x31f>
81003c28:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c2b:	c1 e8 09             	shr    $0x9,%eax
81003c2e:	3d 54 05 00 00       	cmp    $0x554,%eax
81003c33:	77 0b                	ja     81003c40 <_free_r+0x31a>
81003c35:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003c38:	c1 e8 12             	shr    $0x12,%eax
81003c3b:	83 c0 7c             	add    $0x7c,%eax
81003c3e:	eb 05                	jmp    81003c45 <_free_r+0x31f>
81003c40:	b8 7e 00 00 00       	mov    $0x7e,%eax
81003c45:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003c48:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c4b:	83 c0 01             	add    $0x1,%eax
81003c4e:	01 c0                	add    %eax,%eax
81003c50:	c1 e0 02             	shl    $0x2,%eax
81003c53:	05 e0 4d 00 81       	add    $0x81004de0,%eax
81003c58:	83 e8 08             	sub    $0x8,%eax
81003c5b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003c5e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003c61:	8b 40 08             	mov    0x8(%eax),%eax
81003c64:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003c67:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c6a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003c6d:	75 36                	jne    81003ca5 <_free_r+0x37f>
81003c6f:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003c74:	8b 58 04             	mov    0x4(%eax),%ebx
81003c77:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003c7a:	8d 50 03             	lea    0x3(%eax),%edx
81003c7d:	85 c0                	test   %eax,%eax
81003c7f:	0f 48 c2             	cmovs  %edx,%eax
81003c82:	c1 f8 02             	sar    $0x2,%eax
81003c85:	ba 01 00 00 00       	mov    $0x1,%edx
81003c8a:	89 c1                	mov    %eax,%ecx
81003c8c:	d3 e2                	shl    %cl,%edx
81003c8e:	89 d0                	mov    %edx,%eax
81003c90:	ba e0 4d 00 81       	mov    $0x81004de0,%edx
81003c95:	09 d8                	or     %ebx,%eax
81003c97:	89 42 04             	mov    %eax,0x4(%edx)
81003c9a:	eb 28                	jmp    81003cc4 <_free_r+0x39e>
81003c9c:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003c9f:	8b 40 08             	mov    0x8(%eax),%eax
81003ca2:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ca5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ca8:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003cab:	74 0e                	je     81003cbb <_free_r+0x395>
81003cad:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cb0:	8b 40 04             	mov    0x4(%eax),%eax
81003cb3:	83 e0 fc             	and    $0xfffffffc,%eax
81003cb6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003cb9:	72 e1                	jb     81003c9c <_free_r+0x376>
81003cbb:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003cbe:	8b 40 0c             	mov    0xc(%eax),%eax
81003cc1:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003cc4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cc7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81003cca:	89 50 0c             	mov    %edx,0xc(%eax)
81003ccd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003cd0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003cd3:	89 50 08             	mov    %edx,0x8(%eax)
81003cd6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003cd9:	8b 55 f4             	mov    -0xc(%ebp),%edx
81003cdc:	89 50 08             	mov    %edx,0x8(%eax)
81003cdf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ce2:	8b 50 08             	mov    0x8(%eax),%edx
81003ce5:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003ce8:	89 50 0c             	mov    %edx,0xc(%eax)
81003ceb:	83 ec 0c             	sub    $0xc,%esp
81003cee:	ff 75 08             	push   0x8(%ebp)
81003cf1:	e8 05 de ff ff       	call   81001afb <__malloc_unlock>
81003cf6:	83 c4 10             	add    $0x10,%esp
81003cf9:	eb 01                	jmp    81003cfc <_free_r+0x3d6>
81003cfb:	90                   	nop
81003cfc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003cff:	c9                   	leave  
81003d00:	c3                   	ret    

81003d01 <_malloc_trim_r>:
81003d01:	55                   	push   %ebp
81003d02:	89 e5                	mov    %esp,%ebp
81003d04:	83 ec 28             	sub    $0x28,%esp
81003d07:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81003d0e:	83 ec 0c             	sub    $0xc,%esp
81003d11:	ff 75 08             	push   0x8(%ebp)
81003d14:	e8 dc dd ff ff       	call   81001af5 <__malloc_lock>
81003d19:	83 c4 10             	add    $0x10,%esp
81003d1c:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003d21:	8b 40 08             	mov    0x8(%eax),%eax
81003d24:	8b 40 04             	mov    0x4(%eax),%eax
81003d27:	83 e0 fc             	and    $0xfffffffc,%eax
81003d2a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003d2d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d30:	2b 45 0c             	sub    0xc(%ebp),%eax
81003d33:	89 c2                	mov    %eax,%edx
81003d35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d38:	01 d0                	add    %edx,%eax
81003d3a:	83 e8 11             	sub    $0x11,%eax
81003d3d:	ba 00 00 00 00       	mov    $0x0,%edx
81003d42:	f7 75 f4             	divl   -0xc(%ebp)
81003d45:	83 e8 01             	sub    $0x1,%eax
81003d48:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003d4c:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003d4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003d52:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003d55:	7d 18                	jge    81003d6f <_malloc_trim_r+0x6e>
81003d57:	83 ec 0c             	sub    $0xc,%esp
81003d5a:	ff 75 08             	push   0x8(%ebp)
81003d5d:	e8 99 dd ff ff       	call   81001afb <__malloc_unlock>
81003d62:	83 c4 10             	add    $0x10,%esp
81003d65:	b8 00 00 00 00       	mov    $0x0,%eax
81003d6a:	e9 f1 00 00 00       	jmp    81003e60 <_malloc_trim_r+0x15f>
81003d6f:	83 ec 08             	sub    $0x8,%esp
81003d72:	6a 00                	push   $0x0
81003d74:	ff 75 08             	push   0x8(%ebp)
81003d77:	e8 ae f1 ff ff       	call   81002f2a <_sbrk_r>
81003d7c:	83 c4 10             	add    $0x10,%esp
81003d7f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003d82:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003d87:	8b 50 08             	mov    0x8(%eax),%edx
81003d8a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d8d:	01 d0                	add    %edx,%eax
81003d8f:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003d92:	74 18                	je     81003dac <_malloc_trim_r+0xab>
81003d94:	83 ec 0c             	sub    $0xc,%esp
81003d97:	ff 75 08             	push   0x8(%ebp)
81003d9a:	e8 5c dd ff ff       	call   81001afb <__malloc_unlock>
81003d9f:	83 c4 10             	add    $0x10,%esp
81003da2:	b8 00 00 00 00       	mov    $0x0,%eax
81003da7:	e9 b4 00 00 00       	jmp    81003e60 <_malloc_trim_r+0x15f>
81003dac:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003daf:	f7 d8                	neg    %eax
81003db1:	83 ec 08             	sub    $0x8,%esp
81003db4:	50                   	push   %eax
81003db5:	ff 75 08             	push   0x8(%ebp)
81003db8:	e8 6d f1 ff ff       	call   81002f2a <_sbrk_r>
81003dbd:	83 c4 10             	add    $0x10,%esp
81003dc0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003dc3:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81003dc7:	75 61                	jne    81003e2a <_malloc_trim_r+0x129>
81003dc9:	83 ec 08             	sub    $0x8,%esp
81003dcc:	6a 00                	push   $0x0
81003dce:	ff 75 08             	push   0x8(%ebp)
81003dd1:	e8 54 f1 ff ff       	call   81002f2a <_sbrk_r>
81003dd6:	83 c4 10             	add    $0x10,%esp
81003dd9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003ddc:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003de1:	8b 50 08             	mov    0x8(%eax),%edx
81003de4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003de7:	29 d0                	sub    %edx,%eax
81003de9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003dec:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81003df0:	7e 23                	jle    81003e15 <_malloc_trim_r+0x114>
81003df2:	8b 15 ec 51 00 81    	mov    0x810051ec,%edx
81003df8:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003dfb:	29 d0                	sub    %edx,%eax
81003dfd:	a3 c0 53 00 81       	mov    %eax,0x810053c0
81003e02:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e05:	83 c8 01             	or     $0x1,%eax
81003e08:	89 c2                	mov    %eax,%edx
81003e0a:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003e0f:	8b 40 08             	mov    0x8(%eax),%eax
81003e12:	89 50 04             	mov    %edx,0x4(%eax)
81003e15:	83 ec 0c             	sub    $0xc,%esp
81003e18:	ff 75 08             	push   0x8(%ebp)
81003e1b:	e8 db dc ff ff       	call   81001afb <__malloc_unlock>
81003e20:	83 c4 10             	add    $0x10,%esp
81003e23:	b8 00 00 00 00       	mov    $0x0,%eax
81003e28:	eb 36                	jmp    81003e60 <_malloc_trim_r+0x15f>
81003e2a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003e2d:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e30:	83 c8 01             	or     $0x1,%eax
81003e33:	89 c2                	mov    %eax,%edx
81003e35:	b8 e0 4d 00 81       	mov    $0x81004de0,%eax
81003e3a:	8b 40 08             	mov    0x8(%eax),%eax
81003e3d:	89 50 04             	mov    %edx,0x4(%eax)
81003e40:	a1 c0 53 00 81       	mov    0x810053c0,%eax
81003e45:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003e48:	a3 c0 53 00 81       	mov    %eax,0x810053c0
81003e4d:	83 ec 0c             	sub    $0xc,%esp
81003e50:	ff 75 08             	push   0x8(%ebp)
81003e53:	e8 a3 dc ff ff       	call   81001afb <__malloc_unlock>
81003e58:	83 c4 10             	add    $0x10,%esp
81003e5b:	b8 01 00 00 00       	mov    $0x1,%eax
81003e60:	c9                   	leave  
81003e61:	c3                   	ret    

81003e62 <__get_global_locale>:
81003e62:	55                   	push   %ebp
81003e63:	89 e5                	mov    %esp,%ebp
81003e65:	b8 00 52 00 81       	mov    $0x81005200,%eax
81003e6a:	5d                   	pop    %ebp
81003e6b:	c3                   	ret    

81003e6c <__get_current_locale>:
81003e6c:	55                   	push   %ebp
81003e6d:	89 e5                	mov    %esp,%ebp
81003e6f:	e8 ee ff ff ff       	call   81003e62 <__get_global_locale>
81003e74:	5d                   	pop    %ebp
81003e75:	c3                   	ret    

81003e76 <_setlocale_r>:
81003e76:	55                   	push   %ebp
81003e77:	89 e5                	mov    %esp,%ebp
81003e79:	83 ec 08             	sub    $0x8,%esp
81003e7c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003e80:	74 4c                	je     81003ece <_setlocale_r+0x58>
81003e82:	83 ec 08             	sub    $0x8,%esp
81003e85:	68 eb 46 00 81       	push   $0x810046eb
81003e8a:	ff 75 10             	push   0x10(%ebp)
81003e8d:	e8 af 04 00 00       	call   81004341 <strcmp>
81003e92:	83 c4 10             	add    $0x10,%esp
81003e95:	85 c0                	test   %eax,%eax
81003e97:	74 35                	je     81003ece <_setlocale_r+0x58>
81003e99:	83 ec 08             	sub    $0x8,%esp
81003e9c:	68 f1 46 00 81       	push   $0x810046f1
81003ea1:	ff 75 10             	push   0x10(%ebp)
81003ea4:	e8 98 04 00 00       	call   81004341 <strcmp>
81003ea9:	83 c4 10             	add    $0x10,%esp
81003eac:	85 c0                	test   %eax,%eax
81003eae:	74 1e                	je     81003ece <_setlocale_r+0x58>
81003eb0:	83 ec 08             	sub    $0x8,%esp
81003eb3:	68 ea 46 00 81       	push   $0x810046ea
81003eb8:	ff 75 10             	push   0x10(%ebp)
81003ebb:	e8 81 04 00 00       	call   81004341 <strcmp>
81003ec0:	83 c4 10             	add    $0x10,%esp
81003ec3:	85 c0                	test   %eax,%eax
81003ec5:	74 07                	je     81003ece <_setlocale_r+0x58>
81003ec7:	b8 00 00 00 00       	mov    $0x0,%eax
81003ecc:	eb 05                	jmp    81003ed3 <_setlocale_r+0x5d>
81003ece:	b8 f1 46 00 81       	mov    $0x810046f1,%eax
81003ed3:	c9                   	leave  
81003ed4:	c3                   	ret    

81003ed5 <__locale_mb_cur_max>:
81003ed5:	55                   	push   %ebp
81003ed6:	89 e5                	mov    %esp,%ebp
81003ed8:	e8 8f ff ff ff       	call   81003e6c <__get_current_locale>
81003edd:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81003ee4:	0f be c0             	movsbl %al,%eax
81003ee7:	5d                   	pop    %ebp
81003ee8:	c3                   	ret    

81003ee9 <setlocale>:
81003ee9:	55                   	push   %ebp
81003eea:	89 e5                	mov    %esp,%ebp
81003eec:	83 ec 08             	sub    $0x8,%esp
81003eef:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
81003ef4:	83 ec 04             	sub    $0x4,%esp
81003ef7:	ff 75 0c             	push   0xc(%ebp)
81003efa:	ff 75 08             	push   0x8(%ebp)
81003efd:	50                   	push   %eax
81003efe:	e8 73 ff ff ff       	call   81003e76 <_setlocale_r>
81003f03:	83 c4 10             	add    $0x10,%esp
81003f06:	c9                   	leave  
81003f07:	c3                   	ret    

81003f08 <_lseek_r>:
81003f08:	55                   	push   %ebp
81003f09:	89 e5                	mov    %esp,%ebp
81003f0b:	83 ec 18             	sub    $0x18,%esp
81003f0e:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
81003f15:	00 00 00 
81003f18:	83 ec 04             	sub    $0x4,%esp
81003f1b:	ff 75 14             	push   0x14(%ebp)
81003f1e:	ff 75 10             	push   0x10(%ebp)
81003f21:	ff 75 0c             	push   0xc(%ebp)
81003f24:	e8 38 c3 ff ff       	call   81000261 <lseek>
81003f29:	83 c4 10             	add    $0x10,%esp
81003f2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f2f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003f33:	75 14                	jne    81003f49 <_lseek_r+0x41>
81003f35:	a1 f0 53 00 81       	mov    0x810053f0,%eax
81003f3a:	85 c0                	test   %eax,%eax
81003f3c:	74 0b                	je     81003f49 <_lseek_r+0x41>
81003f3e:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
81003f44:	8b 45 08             	mov    0x8(%ebp),%eax
81003f47:	89 10                	mov    %edx,(%eax)
81003f49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f4c:	c9                   	leave  
81003f4d:	c3                   	ret    

81003f4e <__smakebuf_r>:
81003f4e:	55                   	push   %ebp
81003f4f:	89 e5                	mov    %esp,%ebp
81003f51:	56                   	push   %esi
81003f52:	53                   	push   %ebx
81003f53:	83 ec 10             	sub    $0x10,%esp
81003f56:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003f59:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003f5d:	98                   	cwtl   
81003f5e:	83 e0 02             	and    $0x2,%eax
81003f61:	85 c0                	test   %eax,%eax
81003f63:	74 16                	je     81003f7b <__smakebuf_r+0x2d>
81003f65:	8d 43 43             	lea    0x43(%ebx),%eax
81003f68:	89 03                	mov    %eax,(%ebx)
81003f6a:	8b 03                	mov    (%ebx),%eax
81003f6c:	89 43 10             	mov    %eax,0x10(%ebx)
81003f6f:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003f76:	e9 b9 00 00 00       	jmp    81004034 <__smakebuf_r+0xe6>
81003f7b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003f7e:	50                   	push   %eax
81003f7f:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003f82:	50                   	push   %eax
81003f83:	53                   	push   %ebx
81003f84:	ff 75 08             	push   0x8(%ebp)
81003f87:	e8 af 00 00 00       	call   8100403b <__swhatbuf_r>
81003f8c:	83 c4 10             	add    $0x10,%esp
81003f8f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f92:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003f95:	83 ec 08             	sub    $0x8,%esp
81003f98:	50                   	push   %eax
81003f99:	ff 75 08             	push   0x8(%ebp)
81003f9c:	e8 2e d1 ff ff       	call   810010cf <_malloc_r>
81003fa1:	83 c4 10             	add    $0x10,%esp
81003fa4:	89 c6                	mov    %eax,%esi
81003fa6:	85 f6                	test   %esi,%esi
81003fa8:	75 2f                	jne    81003fd9 <__smakebuf_r+0x8b>
81003faa:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fae:	98                   	cwtl   
81003faf:	25 00 02 00 00       	and    $0x200,%eax
81003fb4:	85 c0                	test   %eax,%eax
81003fb6:	75 7c                	jne    81004034 <__smakebuf_r+0xe6>
81003fb8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fbc:	83 e0 fc             	and    $0xfffffffc,%eax
81003fbf:	83 c8 02             	or     $0x2,%eax
81003fc2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fc6:	8d 43 43             	lea    0x43(%ebx),%eax
81003fc9:	89 03                	mov    %eax,(%ebx)
81003fcb:	8b 03                	mov    (%ebx),%eax
81003fcd:	89 43 10             	mov    %eax,0x10(%ebx)
81003fd0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003fd7:	eb 5b                	jmp    81004034 <__smakebuf_r+0xe6>
81003fd9:	8b 45 08             	mov    0x8(%ebp),%eax
81003fdc:	c7 40 3c 83 07 00 81 	movl   $0x81000783,0x3c(%eax)
81003fe3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003fe7:	0c 80                	or     $0x80,%al
81003fe9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003fed:	89 33                	mov    %esi,(%ebx)
81003fef:	8b 03                	mov    (%ebx),%eax
81003ff1:	89 43 10             	mov    %eax,0x10(%ebx)
81003ff4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003ff7:	89 43 14             	mov    %eax,0x14(%ebx)
81003ffa:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003ffd:	85 c0                	test   %eax,%eax
81003fff:	74 26                	je     81004027 <__smakebuf_r+0xd9>
81004001:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81004005:	98                   	cwtl   
81004006:	83 ec 08             	sub    $0x8,%esp
81004009:	50                   	push   %eax
8100400a:	ff 75 08             	push   0x8(%ebp)
8100400d:	e8 9c 05 00 00       	call   810045ae <_isatty_r>
81004012:	83 c4 10             	add    $0x10,%esp
81004015:	85 c0                	test   %eax,%eax
81004017:	74 0e                	je     81004027 <__smakebuf_r+0xd9>
81004019:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100401d:	83 e0 fc             	and    $0xfffffffc,%eax
81004020:	83 c8 01             	or     $0x1,%eax
81004023:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004027:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100402b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100402e:	09 d0                	or     %edx,%eax
81004030:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81004034:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004037:	5b                   	pop    %ebx
81004038:	5e                   	pop    %esi
81004039:	5d                   	pop    %ebp
8100403a:	c3                   	ret    

8100403b <__swhatbuf_r>:
8100403b:	55                   	push   %ebp
8100403c:	89 e5                	mov    %esp,%ebp
8100403e:	83 ec 58             	sub    $0x58,%esp
81004041:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81004048:	8b 45 0c             	mov    0xc(%ebp),%eax
8100404b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100404f:	66 85 c0             	test   %ax,%ax
81004052:	78 1f                	js     81004073 <__swhatbuf_r+0x38>
81004054:	8b 45 0c             	mov    0xc(%ebp),%eax
81004057:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100405b:	98                   	cwtl   
8100405c:	83 ec 04             	sub    $0x4,%esp
8100405f:	8d 55 ac             	lea    -0x54(%ebp),%edx
81004062:	52                   	push   %edx
81004063:	50                   	push   %eax
81004064:	ff 75 08             	push   0x8(%ebp)
81004067:	e8 ff 04 00 00       	call   8100456b <_fstat_r>
8100406c:	83 c4 10             	add    $0x10,%esp
8100406f:	85 c0                	test   %eax,%eax
81004071:	79 35                	jns    810040a8 <__swhatbuf_r+0x6d>
81004073:	8b 45 14             	mov    0x14(%ebp),%eax
81004076:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100407c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100407f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004083:	98                   	cwtl   
81004084:	25 80 00 00 00       	and    $0x80,%eax
81004089:	85 c0                	test   %eax,%eax
8100408b:	74 0b                	je     81004098 <__swhatbuf_r+0x5d>
8100408d:	8b 45 10             	mov    0x10(%ebp),%eax
81004090:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81004096:	eb 09                	jmp    810040a1 <__swhatbuf_r+0x66>
81004098:	8b 45 10             	mov    0x10(%ebp),%eax
8100409b:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810040a1:	b8 00 00 00 00       	mov    $0x0,%eax
810040a6:	eb 24                	jmp    810040cc <__swhatbuf_r+0x91>
810040a8:	8b 45 b0             	mov    -0x50(%ebp),%eax
810040ab:	25 00 f0 00 00       	and    $0xf000,%eax
810040b0:	3d 00 20 00 00       	cmp    $0x2000,%eax
810040b5:	0f 94 c0             	sete   %al
810040b8:	0f b6 d0             	movzbl %al,%edx
810040bb:	8b 45 14             	mov    0x14(%ebp),%eax
810040be:	89 10                	mov    %edx,(%eax)
810040c0:	8b 45 10             	mov    0x10(%ebp),%eax
810040c3:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810040c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040cc:	c9                   	leave  
810040cd:	c3                   	ret    

810040ce <__get_global_locale>:
810040ce:	55                   	push   %ebp
810040cf:	89 e5                	mov    %esp,%ebp
810040d1:	b8 00 52 00 81       	mov    $0x81005200,%eax
810040d6:	5d                   	pop    %ebp
810040d7:	c3                   	ret    

810040d8 <__get_current_locale>:
810040d8:	55                   	push   %ebp
810040d9:	89 e5                	mov    %esp,%ebp
810040db:	e8 ee ff ff ff       	call   810040ce <__get_global_locale>
810040e0:	5d                   	pop    %ebp
810040e1:	c3                   	ret    

810040e2 <_mbtowc_r>:
810040e2:	55                   	push   %ebp
810040e3:	89 e5                	mov    %esp,%ebp
810040e5:	83 ec 08             	sub    $0x8,%esp
810040e8:	e8 eb ff ff ff       	call   810040d8 <__get_current_locale>
810040ed:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810040f3:	83 ec 0c             	sub    $0xc,%esp
810040f6:	ff 75 18             	push   0x18(%ebp)
810040f9:	ff 75 14             	push   0x14(%ebp)
810040fc:	ff 75 10             	push   0x10(%ebp)
810040ff:	ff 75 0c             	push   0xc(%ebp)
81004102:	ff 75 08             	push   0x8(%ebp)
81004105:	ff d0                	call   *%eax
81004107:	83 c4 20             	add    $0x20,%esp
8100410a:	c9                   	leave  
8100410b:	c3                   	ret    

8100410c <__ascii_mbtowc>:
8100410c:	55                   	push   %ebp
8100410d:	89 e5                	mov    %esp,%ebp
8100410f:	83 ec 10             	sub    $0x10,%esp
81004112:	8b 45 10             	mov    0x10(%ebp),%eax
81004115:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004118:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100411c:	75 06                	jne    81004124 <__ascii_mbtowc+0x18>
8100411e:	8d 45 f8             	lea    -0x8(%ebp),%eax
81004121:	89 45 0c             	mov    %eax,0xc(%ebp)
81004124:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81004128:	75 07                	jne    81004131 <__ascii_mbtowc+0x25>
8100412a:	b8 00 00 00 00       	mov    $0x0,%eax
8100412f:	eb 31                	jmp    81004162 <__ascii_mbtowc+0x56>
81004131:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81004135:	75 07                	jne    8100413e <__ascii_mbtowc+0x32>
81004137:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
8100413c:	eb 24                	jmp    81004162 <__ascii_mbtowc+0x56>
8100413e:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004141:	0f b6 00             	movzbl (%eax),%eax
81004144:	0f b6 d0             	movzbl %al,%edx
81004147:	8b 45 0c             	mov    0xc(%ebp),%eax
8100414a:	89 10                	mov    %edx,(%eax)
8100414c:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100414f:	0f b6 00             	movzbl (%eax),%eax
81004152:	84 c0                	test   %al,%al
81004154:	75 07                	jne    8100415d <__ascii_mbtowc+0x51>
81004156:	b8 00 00 00 00       	mov    $0x0,%eax
8100415b:	eb 05                	jmp    81004162 <__ascii_mbtowc+0x56>
8100415d:	b8 01 00 00 00       	mov    $0x1,%eax
81004162:	c9                   	leave  
81004163:	c3                   	ret    

81004164 <_read_r>:
81004164:	55                   	push   %ebp
81004165:	89 e5                	mov    %esp,%ebp
81004167:	83 ec 18             	sub    $0x18,%esp
8100416a:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
81004171:	00 00 00 
81004174:	83 ec 04             	sub    $0x4,%esp
81004177:	ff 75 14             	push   0x14(%ebp)
8100417a:	ff 75 10             	push   0x10(%ebp)
8100417d:	ff 75 0c             	push   0xc(%ebp)
81004180:	e8 61 c0 ff ff       	call   810001e6 <read>
81004185:	83 c4 10             	add    $0x10,%esp
81004188:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100418b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100418f:	75 14                	jne    810041a5 <_read_r+0x41>
81004191:	a1 f0 53 00 81       	mov    0x810053f0,%eax
81004196:	85 c0                	test   %eax,%eax
81004198:	74 0b                	je     810041a5 <_read_r+0x41>
8100419a:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
810041a0:	8b 45 08             	mov    0x8(%ebp),%eax
810041a3:	89 10                	mov    %edx,(%eax)
810041a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810041a8:	c9                   	leave  
810041a9:	c3                   	ret    

810041aa <cleanup_glue>:
810041aa:	55                   	push   %ebp
810041ab:	89 e5                	mov    %esp,%ebp
810041ad:	83 ec 08             	sub    $0x8,%esp
810041b0:	8b 45 0c             	mov    0xc(%ebp),%eax
810041b3:	8b 00                	mov    (%eax),%eax
810041b5:	85 c0                	test   %eax,%eax
810041b7:	74 14                	je     810041cd <cleanup_glue+0x23>
810041b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810041bc:	8b 00                	mov    (%eax),%eax
810041be:	83 ec 08             	sub    $0x8,%esp
810041c1:	50                   	push   %eax
810041c2:	ff 75 08             	push   0x8(%ebp)
810041c5:	e8 e0 ff ff ff       	call   810041aa <cleanup_glue>
810041ca:	83 c4 10             	add    $0x10,%esp
810041cd:	83 ec 08             	sub    $0x8,%esp
810041d0:	ff 75 0c             	push   0xc(%ebp)
810041d3:	ff 75 08             	push   0x8(%ebp)
810041d6:	e8 4b f7 ff ff       	call   81003926 <_free_r>
810041db:	83 c4 10             	add    $0x10,%esp
810041de:	90                   	nop
810041df:	c9                   	leave  
810041e0:	c3                   	ret    

810041e1 <_reclaim_reent>:
810041e1:	55                   	push   %ebp
810041e2:	89 e5                	mov    %esp,%ebp
810041e4:	83 ec 28             	sub    $0x28,%esp
810041e7:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
810041ec:	39 45 08             	cmp    %eax,0x8(%ebp)
810041ef:	0f 84 49 01 00 00    	je     8100433e <_reclaim_reent+0x15d>
810041f5:	8b 45 08             	mov    0x8(%ebp),%eax
810041f8:	8b 40 4c             	mov    0x4c(%eax),%eax
810041fb:	85 c0                	test   %eax,%eax
810041fd:	74 64                	je     81004263 <_reclaim_reent+0x82>
810041ff:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004206:	eb 3e                	jmp    81004246 <_reclaim_reent+0x65>
81004208:	8b 45 08             	mov    0x8(%ebp),%eax
8100420b:	8b 50 4c             	mov    0x4c(%eax),%edx
8100420e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004211:	c1 e0 02             	shl    $0x2,%eax
81004214:	01 d0                	add    %edx,%eax
81004216:	8b 00                	mov    (%eax),%eax
81004218:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100421b:	eb 1f                	jmp    8100423c <_reclaim_reent+0x5b>
8100421d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004220:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004223:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004226:	8b 00                	mov    (%eax),%eax
81004228:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100422b:	83 ec 08             	sub    $0x8,%esp
8100422e:	ff 75 e8             	push   -0x18(%ebp)
81004231:	ff 75 08             	push   0x8(%ebp)
81004234:	e8 ed f6 ff ff       	call   81003926 <_free_r>
81004239:	83 c4 10             	add    $0x10,%esp
8100423c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81004240:	75 db                	jne    8100421d <_reclaim_reent+0x3c>
81004242:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81004246:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004249:	83 f8 1f             	cmp    $0x1f,%eax
8100424c:	76 ba                	jbe    81004208 <_reclaim_reent+0x27>
8100424e:	8b 45 08             	mov    0x8(%ebp),%eax
81004251:	8b 40 4c             	mov    0x4c(%eax),%eax
81004254:	83 ec 08             	sub    $0x8,%esp
81004257:	50                   	push   %eax
81004258:	ff 75 08             	push   0x8(%ebp)
8100425b:	e8 c6 f6 ff ff       	call   81003926 <_free_r>
81004260:	83 c4 10             	add    $0x10,%esp
81004263:	8b 45 08             	mov    0x8(%ebp),%eax
81004266:	8b 40 40             	mov    0x40(%eax),%eax
81004269:	85 c0                	test   %eax,%eax
8100426b:	74 15                	je     81004282 <_reclaim_reent+0xa1>
8100426d:	8b 45 08             	mov    0x8(%ebp),%eax
81004270:	8b 40 40             	mov    0x40(%eax),%eax
81004273:	83 ec 08             	sub    $0x8,%esp
81004276:	50                   	push   %eax
81004277:	ff 75 08             	push   0x8(%ebp)
8100427a:	e8 a7 f6 ff ff       	call   81003926 <_free_r>
8100427f:	83 c4 10             	add    $0x10,%esp
81004282:	8b 45 08             	mov    0x8(%ebp),%eax
81004285:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100428b:	85 c0                	test   %eax,%eax
8100428d:	74 50                	je     810042df <_reclaim_reent+0xfe>
8100428f:	8b 45 08             	mov    0x8(%ebp),%eax
81004292:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81004298:	8b 55 08             	mov    0x8(%ebp),%edx
8100429b:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810042a1:	39 d0                	cmp    %edx,%eax
810042a3:	74 3a                	je     810042df <_reclaim_reent+0xfe>
810042a5:	8b 45 08             	mov    0x8(%ebp),%eax
810042a8:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810042ae:	89 45 ec             	mov    %eax,-0x14(%ebp)
810042b1:	eb 1f                	jmp    810042d2 <_reclaim_reent+0xf1>
810042b3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810042b6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810042b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810042bc:	8b 00                	mov    (%eax),%eax
810042be:	89 45 ec             	mov    %eax,-0x14(%ebp)
810042c1:	83 ec 08             	sub    $0x8,%esp
810042c4:	ff 75 e4             	push   -0x1c(%ebp)
810042c7:	ff 75 08             	push   0x8(%ebp)
810042ca:	e8 57 f6 ff ff       	call   81003926 <_free_r>
810042cf:	83 c4 10             	add    $0x10,%esp
810042d2:	8b 45 08             	mov    0x8(%ebp),%eax
810042d5:	05 4c 01 00 00       	add    $0x14c,%eax
810042da:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810042dd:	75 d4                	jne    810042b3 <_reclaim_reent+0xd2>
810042df:	8b 45 08             	mov    0x8(%ebp),%eax
810042e2:	8b 40 54             	mov    0x54(%eax),%eax
810042e5:	85 c0                	test   %eax,%eax
810042e7:	74 15                	je     810042fe <_reclaim_reent+0x11d>
810042e9:	8b 45 08             	mov    0x8(%ebp),%eax
810042ec:	8b 40 54             	mov    0x54(%eax),%eax
810042ef:	83 ec 08             	sub    $0x8,%esp
810042f2:	50                   	push   %eax
810042f3:	ff 75 08             	push   0x8(%ebp)
810042f6:	e8 2b f6 ff ff       	call   81003926 <_free_r>
810042fb:	83 c4 10             	add    $0x10,%esp
810042fe:	8b 45 08             	mov    0x8(%ebp),%eax
81004301:	8b 40 38             	mov    0x38(%eax),%eax
81004304:	85 c0                	test   %eax,%eax
81004306:	74 36                	je     8100433e <_reclaim_reent+0x15d>
81004308:	8b 45 08             	mov    0x8(%ebp),%eax
8100430b:	8b 40 3c             	mov    0x3c(%eax),%eax
8100430e:	83 ec 0c             	sub    $0xc,%esp
81004311:	ff 75 08             	push   0x8(%ebp)
81004314:	ff d0                	call   *%eax
81004316:	83 c4 10             	add    $0x10,%esp
81004319:	8b 45 08             	mov    0x8(%ebp),%eax
8100431c:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81004322:	85 c0                	test   %eax,%eax
81004324:	74 18                	je     8100433e <_reclaim_reent+0x15d>
81004326:	8b 45 08             	mov    0x8(%ebp),%eax
81004329:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100432f:	83 ec 08             	sub    $0x8,%esp
81004332:	50                   	push   %eax
81004333:	ff 75 08             	push   0x8(%ebp)
81004336:	e8 6f fe ff ff       	call   810041aa <cleanup_glue>
8100433b:	83 c4 10             	add    $0x10,%esp
8100433e:	90                   	nop
8100433f:	c9                   	leave  
81004340:	c3                   	ret    

81004341 <strcmp>:
81004341:	55                   	push   %ebp
81004342:	89 e5                	mov    %esp,%ebp
81004344:	83 ec 10             	sub    $0x10,%esp
81004347:	8b 55 08             	mov    0x8(%ebp),%edx
8100434a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100434d:	09 d0                	or     %edx,%eax
8100434f:	83 e0 03             	and    $0x3,%eax
81004352:	85 c0                	test   %eax,%eax
81004354:	75 5e                	jne    810043b4 <strcmp+0x73>
81004356:	8b 45 08             	mov    0x8(%ebp),%eax
81004359:	89 45 fc             	mov    %eax,-0x4(%ebp)
8100435c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100435f:	89 45 f8             	mov    %eax,-0x8(%ebp)
81004362:	eb 2c                	jmp    81004390 <strcmp+0x4f>
81004364:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004367:	8b 00                	mov    (%eax),%eax
81004369:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
8100436f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004372:	8b 00                	mov    (%eax),%eax
81004374:	f7 d0                	not    %eax
81004376:	21 d0                	and    %edx,%eax
81004378:	25 80 80 80 80       	and    $0x80808080,%eax
8100437d:	85 c0                	test   %eax,%eax
8100437f:	74 07                	je     81004388 <strcmp+0x47>
81004381:	b8 00 00 00 00       	mov    $0x0,%eax
81004386:	eb 5c                	jmp    810043e4 <strcmp+0xa3>
81004388:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100438c:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81004390:	8b 45 fc             	mov    -0x4(%ebp),%eax
81004393:	8b 10                	mov    (%eax),%edx
81004395:	8b 45 f8             	mov    -0x8(%ebp),%eax
81004398:	8b 00                	mov    (%eax),%eax
8100439a:	39 c2                	cmp    %eax,%edx
8100439c:	74 c6                	je     81004364 <strcmp+0x23>
8100439e:	8b 45 fc             	mov    -0x4(%ebp),%eax
810043a1:	89 45 08             	mov    %eax,0x8(%ebp)
810043a4:	8b 45 f8             	mov    -0x8(%ebp),%eax
810043a7:	89 45 0c             	mov    %eax,0xc(%ebp)
810043aa:	eb 08                	jmp    810043b4 <strcmp+0x73>
810043ac:	83 45 08 01          	addl   $0x1,0x8(%ebp)
810043b0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
810043b4:	8b 45 08             	mov    0x8(%ebp),%eax
810043b7:	0f b6 00             	movzbl (%eax),%eax
810043ba:	84 c0                	test   %al,%al
810043bc:	74 10                	je     810043ce <strcmp+0x8d>
810043be:	8b 45 08             	mov    0x8(%ebp),%eax
810043c1:	0f b6 10             	movzbl (%eax),%edx
810043c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810043c7:	0f b6 00             	movzbl (%eax),%eax
810043ca:	38 c2                	cmp    %al,%dl
810043cc:	74 de                	je     810043ac <strcmp+0x6b>
810043ce:	8b 45 08             	mov    0x8(%ebp),%eax
810043d1:	0f b6 00             	movzbl (%eax),%eax
810043d4:	0f b6 d0             	movzbl %al,%edx
810043d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810043da:	0f b6 00             	movzbl (%eax),%eax
810043dd:	0f b6 c8             	movzbl %al,%ecx
810043e0:	89 d0                	mov    %edx,%eax
810043e2:	29 c8                	sub    %ecx,%eax
810043e4:	c9                   	leave  
810043e5:	c3                   	ret    

810043e6 <__get_global_locale>:
810043e6:	55                   	push   %ebp
810043e7:	89 e5                	mov    %esp,%ebp
810043e9:	b8 00 52 00 81       	mov    $0x81005200,%eax
810043ee:	5d                   	pop    %ebp
810043ef:	c3                   	ret    

810043f0 <__get_current_locale>:
810043f0:	55                   	push   %ebp
810043f1:	89 e5                	mov    %esp,%ebp
810043f3:	e8 ee ff ff ff       	call   810043e6 <__get_global_locale>
810043f8:	5d                   	pop    %ebp
810043f9:	c3                   	ret    

810043fa <_wcrtomb_r>:
810043fa:	55                   	push   %ebp
810043fb:	89 e5                	mov    %esp,%ebp
810043fd:	83 ec 18             	sub    $0x18,%esp
81004400:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81004407:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100440b:	75 21                	jne    8100442e <_wcrtomb_r+0x34>
8100440d:	e8 de ff ff ff       	call   810043f0 <__get_current_locale>
81004412:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004418:	ff 75 14             	push   0x14(%ebp)
8100441b:	6a 00                	push   $0x0
8100441d:	8d 55 ea             	lea    -0x16(%ebp),%edx
81004420:	52                   	push   %edx
81004421:	ff 75 08             	push   0x8(%ebp)
81004424:	ff d0                	call   *%eax
81004426:	83 c4 10             	add    $0x10,%esp
81004429:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100442c:	eb 1f                	jmp    8100444d <_wcrtomb_r+0x53>
8100442e:	e8 bd ff ff ff       	call   810043f0 <__get_current_locale>
81004433:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004439:	ff 75 14             	push   0x14(%ebp)
8100443c:	ff 75 10             	push   0x10(%ebp)
8100443f:	ff 75 0c             	push   0xc(%ebp)
81004442:	ff 75 08             	push   0x8(%ebp)
81004445:	ff d0                	call   *%eax
81004447:	83 c4 10             	add    $0x10,%esp
8100444a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100444d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004451:	75 19                	jne    8100446c <_wcrtomb_r+0x72>
81004453:	8b 45 14             	mov    0x14(%ebp),%eax
81004456:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100445c:	8b 45 08             	mov    0x8(%ebp),%eax
8100445f:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004465:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100446a:	eb 03                	jmp    8100446f <_wcrtomb_r+0x75>
8100446c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100446f:	c9                   	leave  
81004470:	c3                   	ret    

81004471 <wcrtomb>:
81004471:	55                   	push   %ebp
81004472:	89 e5                	mov    %esp,%ebp
81004474:	83 ec 28             	sub    $0x28,%esp
81004477:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100447e:	a1 c4 4d 00 81       	mov    0x81004dc4,%eax
81004483:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004486:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100448a:	75 21                	jne    810044ad <wcrtomb+0x3c>
8100448c:	e8 5f ff ff ff       	call   810043f0 <__get_current_locale>
81004491:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004497:	ff 75 10             	push   0x10(%ebp)
8100449a:	6a 00                	push   $0x0
8100449c:	8d 55 e6             	lea    -0x1a(%ebp),%edx
8100449f:	52                   	push   %edx
810044a0:	ff 75 f0             	push   -0x10(%ebp)
810044a3:	ff d0                	call   *%eax
810044a5:	83 c4 10             	add    $0x10,%esp
810044a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
810044ab:	eb 1f                	jmp    810044cc <wcrtomb+0x5b>
810044ad:	e8 3e ff ff ff       	call   810043f0 <__get_current_locale>
810044b2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810044b8:	ff 75 10             	push   0x10(%ebp)
810044bb:	ff 75 0c             	push   0xc(%ebp)
810044be:	ff 75 08             	push   0x8(%ebp)
810044c1:	ff 75 f0             	push   -0x10(%ebp)
810044c4:	ff d0                	call   *%eax
810044c6:	83 c4 10             	add    $0x10,%esp
810044c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810044cc:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810044d0:	75 19                	jne    810044eb <wcrtomb+0x7a>
810044d2:	8b 45 10             	mov    0x10(%ebp),%eax
810044d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810044db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810044de:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810044e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810044e9:	eb 03                	jmp    810044ee <wcrtomb+0x7d>
810044eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044ee:	c9                   	leave  
810044ef:	c3                   	ret    

810044f0 <__get_global_locale>:
810044f0:	55                   	push   %ebp
810044f1:	89 e5                	mov    %esp,%ebp
810044f3:	b8 00 52 00 81       	mov    $0x81005200,%eax
810044f8:	5d                   	pop    %ebp
810044f9:	c3                   	ret    

810044fa <__get_current_locale>:
810044fa:	55                   	push   %ebp
810044fb:	89 e5                	mov    %esp,%ebp
810044fd:	e8 ee ff ff ff       	call   810044f0 <__get_global_locale>
81004502:	5d                   	pop    %ebp
81004503:	c3                   	ret    

81004504 <_wctomb_r>:
81004504:	55                   	push   %ebp
81004505:	89 e5                	mov    %esp,%ebp
81004507:	83 ec 08             	sub    $0x8,%esp
8100450a:	e8 eb ff ff ff       	call   810044fa <__get_current_locale>
8100450f:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
81004515:	ff 75 14             	push   0x14(%ebp)
81004518:	ff 75 10             	push   0x10(%ebp)
8100451b:	ff 75 0c             	push   0xc(%ebp)
8100451e:	ff 75 08             	push   0x8(%ebp)
81004521:	ff d0                	call   *%eax
81004523:	83 c4 10             	add    $0x10,%esp
81004526:	c9                   	leave  
81004527:	c3                   	ret    

81004528 <__ascii_wctomb>:
81004528:	55                   	push   %ebp
81004529:	89 e5                	mov    %esp,%ebp
8100452b:	83 ec 10             	sub    $0x10,%esp
8100452e:	8b 45 10             	mov    0x10(%ebp),%eax
81004531:	89 45 fc             	mov    %eax,-0x4(%ebp)
81004534:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81004538:	75 07                	jne    81004541 <__ascii_wctomb+0x19>
8100453a:	b8 00 00 00 00       	mov    $0x0,%eax
8100453f:	eb 28                	jmp    81004569 <__ascii_wctomb+0x41>
81004541:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
81004548:	76 10                	jbe    8100455a <__ascii_wctomb+0x32>
8100454a:	8b 45 08             	mov    0x8(%ebp),%eax
8100454d:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81004553:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004558:	eb 0f                	jmp    81004569 <__ascii_wctomb+0x41>
8100455a:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100455d:	89 c2                	mov    %eax,%edx
8100455f:	8b 45 0c             	mov    0xc(%ebp),%eax
81004562:	88 10                	mov    %dl,(%eax)
81004564:	b8 01 00 00 00       	mov    $0x1,%eax
81004569:	c9                   	leave  
8100456a:	c3                   	ret    

8100456b <_fstat_r>:
8100456b:	55                   	push   %ebp
8100456c:	89 e5                	mov    %esp,%ebp
8100456e:	83 ec 18             	sub    $0x18,%esp
81004571:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
81004578:	00 00 00 
8100457b:	83 ec 08             	sub    $0x8,%esp
8100457e:	ff 75 10             	push   0x10(%ebp)
81004581:	ff 75 0c             	push   0xc(%ebp)
81004584:	e8 26 bd ff ff       	call   810002af <fstat>
81004589:	83 c4 10             	add    $0x10,%esp
8100458c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100458f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81004593:	75 14                	jne    810045a9 <_fstat_r+0x3e>
81004595:	a1 f0 53 00 81       	mov    0x810053f0,%eax
8100459a:	85 c0                	test   %eax,%eax
8100459c:	74 0b                	je     810045a9 <_fstat_r+0x3e>
8100459e:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
810045a4:	8b 45 08             	mov    0x8(%ebp),%eax
810045a7:	89 10                	mov    %edx,(%eax)
810045a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ac:	c9                   	leave  
810045ad:	c3                   	ret    

810045ae <_isatty_r>:
810045ae:	55                   	push   %ebp
810045af:	89 e5                	mov    %esp,%ebp
810045b1:	83 ec 18             	sub    $0x18,%esp
810045b4:	c7 05 f0 53 00 81 00 	movl   $0x0,0x810053f0
810045bb:	00 00 00 
810045be:	83 ec 0c             	sub    $0xc,%esp
810045c1:	ff 75 0c             	push   0xc(%ebp)
810045c4:	e8 c5 bc ff ff       	call   8100028e <isatty>
810045c9:	83 c4 10             	add    $0x10,%esp
810045cc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810045cf:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810045d3:	75 14                	jne    810045e9 <_isatty_r+0x3b>
810045d5:	a1 f0 53 00 81       	mov    0x810053f0,%eax
810045da:	85 c0                	test   %eax,%eax
810045dc:	74 0b                	je     810045e9 <_isatty_r+0x3b>
810045de:	8b 15 f0 53 00 81    	mov    0x810053f0,%edx
810045e4:	8b 45 08             	mov    0x8(%ebp),%eax
810045e7:	89 10                	mov    %edx,(%eax)
810045e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810045ec:	c9                   	leave  
810045ed:	c3                   	ret    
