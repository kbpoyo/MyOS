
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf:     file format elf32-i386
/home/kbpoyo/code/cpp/MyOs/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000055

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00003fd0 memsz 0x00004250 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000375f  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000001e  81003760  81003760  00004760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  81003780  81003780  00004780  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000270  81003fe0  81003fe0  00004fd0  2**5
                  ALLOC
  4 .debug_info   00010681  00000000  00000000  00004fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00003c89  00000000  00000000  00015651  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00000438  00000000  00000000  000192e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   000025d1  00000000  00000000  00019718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000de3  00000000  00000000  0001bce9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line_str 00000ab4  00000000  00000000  0001cacc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .comment      0000003f  00000000  00000000  0001d580  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00000be0  00000000  00000000  0001d5c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000022  00000000  00000000  0001e1a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
81003fe0 l     O .bss	00000200 cmd_buf
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
00000000 l    df *ABS*	00000000 gets.c
00000000 l    df *ABS*	00000000 impure.c
81003780 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000566 l       .text	00000000 L5
8100059e l       .text	00000000 L15
81000570 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810005a9 l     F .text	000000ad std
81000656 l     F .text	0000001b stdin_init
81000671 l     F .text	0000001b stdout_init
8100068c l     F .text	0000001b stderr_init
810041e0 l     O .bss	00000004 __sfp_recursive_mutex
810041e4 l     O .bss	00000004 __sinit_recursive_mutex
8100094f l     F .text	0000000a __fp_lock
81000959 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 mallocr.c
81000f1c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81001a6d l       .text	00000000 L20
81001a24 l       .text	00000000 L5
81001a6a l       .text	00000000 L15
81001a30 l       .text	00000000 L8
81001a51 l       .text	00000000 L9
81001a60 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81004248 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
810024bb l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
8100371f g     F .text	00000040 _isatty_r
81003545 g     F .text	00000037 cleanup_glue
810003b7 g     F .text	000000d6 _puts_r
81003339 g     F .text	00000046 _lseek_r
8100019e g     F .text	0000001b yield
810027d2 g     F .text	0000004a __sseek
8100089e g     F .text	00000099 __sinit
810006a7 g     F .text	0000006f __sfmoreglue
81001bdb g     F .text	00000006 __malloc_unlock
81001ac0 g       .text	00000000 memmove
81000884 g     F .text	0000001a _cleanup
810036dc g     F .text	00000043 _fstat_r
8100424c g     O .bss	00000004 errno
8100050c g     F .text	0000001d __srget
8100276d g     F .text	0000000a __seofread
8100039b g     F .text	0000001c gets
81000171 g     F .text	0000002d execve
81000113 g     F .text	0000001b getpid
81001a78 g       .text	00000000 memcpy
81000863 g     F .text	00000021 _cleanup_r
8100048d g     F .text	0000001c puts
81000288 g     F .text	00000021 isatty
81004200 g     O .bss	00000004 __malloc_top_pad
81003fe0 g       .bss	00000000 __bss_start__
810009ab g     F .text	0000049e __sfvwrite_r
810026e9 g     F .text	00000040 _sbrk_r
810034ff g     F .text	00000046 _read_r
81002a22 g     F .text	00000107 _fclose_r
81002dc4 g     F .text	00000039 fflush
81004204 g     O .bss	00000004 __malloc_max_sbrked_mem
8100025b g     F .text	0000002d lseek
81003778 g     O .rodata	00000004 _global_impure_ptr
81001be1 g     F .text	000008da _realloc_r
81000963 g     F .text	00000024 __fp_lock_all
8100357c g     F .text	00000160 _reclaim_reent
8100020d g     F .text	0000002d write
810002a9 g     F .text	00000027 fstat
8100009d g     F .text	0000004c sys_call
81000937 g     F .text	00000006 __sfp_lock_acquire
810019e0 g       .text	00000000 memchr
81004250 g       .bss	00000000 __bss_end__
81002dfd g     F .text	000003db _free_r
810004a9 g     F .text	00000063 __srget_r
81003fcc g     O .data	00000004 __malloc_sbrk_base
81000055 g       .text	00000000 _start
810002f1 g     F .text	000000aa _gets_r
810001e0 g     F .text	0000002d read
81004220 g     O .bss	00000028 __malloc_current_mallinfo
810029e2 g     F .text	00000040 _close_r
81000156 g     F .text	0000001b fork
81002887 g     F .text	0000015b __swsetup_r
81000716 g     F .text	0000014d __sfp
81003bc0 g     O .data	00000408 __malloc_av_
81000949 g     F .text	00000006 __sinit_lock_release
81002729 g     F .text	00000044 __sread
81001bd5 g     F .text	00000006 __malloc_lock
810002d0 g     F .text	00000021 sbrk
81002d6c g     F .text	00000058 _fflush_r
81000065 g     F .text	00000038 cstart
81001b4d g       .text	00000000 memset
81000000 g     F .text	00000055 main
81004208 g     O .bss	00000004 __malloc_max_total_mem
8100281c g     F .text	00000025 __sclose
81002b29 g     F .text	0000001d fclose
810011af g     F .text	00000822 _malloc_r
81000e49 g     F .text	00000068 _fwalk
810031d8 g     F .text	00000161 _malloc_trim_r
81002841 g     F .text	00000046 _write_r
81003ba4 g     O .data	00000004 _impure_ptr
81002b46 g     F .text	00000226 __sflush_r
810024e8 g     F .text	00000201 __srefill_r
81000987 g     F .text	00000024 __fp_unlock_all
8100012e g     F .text	00000028 print_msg
8100346c g     F .text	00000093 __swhatbuf_r
81002777 g     F .text	0000005b __swrite
81003fc8 g     O .data	00000004 __malloc_trim_threshold
81000eb1 g     F .text	0000006b _fwalk_reent
8100093d g     F .text	00000006 __sfp_lock_release
8100337f g     F .text	000000ed __smakebuf_r
81000530 g       .text	00000000 strlen
810001b9 g     F .text	00000027 open
810000e9 g     F .text	0000002a msleep
8100023a g     F .text	00000021 close
81000943 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
#include "lib_syscall.h"
#include <stdio.h>

static char cmd_buf[512];

int main(int argc, char** argv) {
81000000:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000004:	83 e4 f0             	and    $0xfffffff0,%esp
81000007:	ff 71 fc             	push   -0x4(%ecx)
8100000a:	55                   	push   %ebp
8100000b:	89 e5                	mov    %esp,%ebp
8100000d:	51                   	push   %ecx
8100000e:	83 ec 04             	sub    $0x4,%esp
    if (pid > 0) printf("parent pid=%d\n", pid);
    else printf("chiled pid=%d\n", pid);

#endif

    open("tty:0", 0);
81000011:	83 ec 08             	sub    $0x8,%esp
81000014:	6a 00                	push   $0x0
81000016:	68 60 37 00 81       	push   $0x81003760
8100001b:	e8 99 01 00 00       	call   810001b9 <open>
81000020:	83 c4 10             	add    $0x10,%esp

    printf("hello from shell\n");
81000023:	83 ec 0c             	sub    $0xc,%esp
81000026:	68 66 37 00 81       	push   $0x81003766
8100002b:	e8 5d 04 00 00       	call   8100048d <puts>
81000030:	83 c4 10             	add    $0x10,%esp

    for (;;) {
        // printf("shell pid=%d\n", getpid());
        // msleep(1000);
        gets(cmd_buf);
81000033:	83 ec 0c             	sub    $0xc,%esp
81000036:	68 e0 3f 00 81       	push   $0x81003fe0
8100003b:	e8 5b 03 00 00       	call   8100039b <gets>
81000040:	83 c4 10             	add    $0x10,%esp
        puts(cmd_buf);
81000043:	83 ec 0c             	sub    $0xc,%esp
81000046:	68 e0 3f 00 81       	push   $0x81003fe0
8100004b:	e8 3d 04 00 00       	call   8100048d <puts>
81000050:	83 c4 10             	add    $0x10,%esp
        gets(cmd_buf);
81000053:	eb de                	jmp    81000033 <main+0x33>

81000055 <_start>:
    .extern cstart
_start:
    //iret指令返回后，将之前压入的 ss,esp,eflags,cs,eip 寄存器值返回给对应寄存器，
	//由于cpu从0特权级切换到了3特权级，而之前其余的段寄存器都是0特权级，不能供3特权级使用，
	//所以cpu将其余寄存器置零，这里直接用ss寄存器再初始化其余段寄存器即可
	mov %ss, %ax
81000055:	66 8c d0             	mov    %ss,%ax
	mov %ax, %ds
81000058:	8e d8                	mov    %eax,%ds
	mov %ax, %es
8100005a:	8e c0                	mov    %eax,%es
	mov %ax, %fs
8100005c:	8e e0                	mov    %eax,%fs
	mov %ax, %gs
8100005e:	8e e8                	mov    %eax,%gs

    //因为cs寄存器已由操作系统分配，所以直接跳转即可
	jmp cstart
81000060:	e9 00 00 00 00       	jmp    81000065 <cstart>

81000065 <cstart>:
 * @brief 执行调用main之前的初始化工作
 *
 * @param argc
 * @param argv
 */
void cstart(int argc, char **argv) {
81000065:	55                   	push   %ebp
81000066:	89 e5                	mov    %esp,%ebp
81000068:	83 ec 18             	sub    $0x18,%esp
    //对程序的bss段进行清零操作
    char *start = __bss_start__;
8100006b:	c7 45 f4 e0 3f 00 81 	movl   $0x81003fe0,-0xc(%ebp)
    while (start < __bss_end__) {
81000072:	eb 0c                	jmp    81000080 <cstart+0x1b>
        *(start++) = 0;
81000074:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000077:	8d 50 01             	lea    0x1(%eax),%edx
8100007a:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100007d:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000080:	81 7d f4 50 42 00 81 	cmpl   $0x81004250,-0xc(%ebp)
81000087:	72 eb                	jb     81000074 <cstart+0xf>
    }
    
    main(argc, argv);
81000089:	83 ec 08             	sub    $0x8,%esp
8100008c:	ff 75 0c             	push   0xc(%ebp)
8100008f:	ff 75 08             	push   0x8(%ebp)
81000092:	e8 69 ff ff ff       	call   81000000 <main>
81000097:	83 c4 10             	add    $0x10,%esp
}
8100009a:	90                   	nop
8100009b:	c9                   	leave  
8100009c:	c3                   	ret    

8100009d <sys_call>:
#include    "cpu/syscall.h"
#include    "os_cfg.h"
#include    "lib_syscall.h"


int sys_call(syscall_args_t *args) {
8100009d:	55                   	push   %ebp
8100009e:	89 e5                	mov    %esp,%ebp
810000a0:	57                   	push   %edi
810000a1:	56                   	push   %esi
810000a2:	53                   	push   %ebx
810000a3:	83 ec 10             	sub    $0x10,%esp
    // 传入远跳转需要的参数, 即cs = selector, eip = offset 
    //为调用门选择子赋予0特权级,调用门的 cpl 和 RPL <= 系统调用段描述符的DPL
    //门描述符中目标选择子的 CPL <= 门描述符的 DPL
    uint32_t addr[] = {0, SYSCALL_SELECTOR | 0};  
810000a6:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000ad:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg1]\n\t"
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[addr])\n\t"
        :"=a"(ret)
        :[arg3]"r"(args->arg3), 
810000b4:	8b 45 08             	mov    0x8(%ebp),%eax
810000b7:	8b 40 10             	mov    0x10(%eax),%eax
         [arg2]"r"(args->arg2), 
810000ba:	8b 55 08             	mov    0x8(%ebp),%edx
810000bd:	8b 52 0c             	mov    0xc(%edx),%edx
         [arg1]"r"(args->arg1),
810000c0:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000c3:	8b 49 08             	mov    0x8(%ecx),%ecx
         [arg0]"r"(args->arg0), 
810000c6:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000c9:	8b 5b 04             	mov    0x4(%ebx),%ebx
         [id]"r"(args->id), 
810000cc:	8b 75 08             	mov    0x8(%ebp),%esi
810000cf:	8b 36                	mov    (%esi),%esi
     __asm__ __volatile__(
810000d1:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000d4:	50                   	push   %eax
810000d5:	52                   	push   %edx
810000d6:	51                   	push   %ecx
810000d7:	53                   	push   %ebx
810000d8:	56                   	push   %esi
810000d9:	ff 1f                	lcall  *(%edi)
810000db:	89 45 f0             	mov    %eax,-0x10(%ebp)
         [addr]"r"(addr)
    );

    return ret;
810000de:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
810000e1:	83 c4 10             	add    $0x10,%esp
810000e4:	5b                   	pop    %ebx
810000e5:	5e                   	pop    %esi
810000e6:	5f                   	pop    %edi
810000e7:	5d                   	pop    %ebp
810000e8:	c3                   	ret    

810000e9 <msleep>:
/**
 * @brief 以ms为单位进行延时
 * 
 * @param ms 
 */
void msleep(int ms) {
810000e9:	55                   	push   %ebp
810000ea:	89 e5                	mov    %esp,%ebp
810000ec:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) return;
810000ef:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
810000f3:	7e 1b                	jle    81000110 <msleep+0x27>

    syscall_args_t args;
    args.id = SYS_sleep;
810000f5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
810000fc:	8b 45 08             	mov    0x8(%ebp),%eax
810000ff:	89 45 f0             	mov    %eax,-0x10(%ebp)

    sys_call(&args);
81000102:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000105:	50                   	push   %eax
81000106:	e8 92 ff ff ff       	call   8100009d <sys_call>
8100010b:	83 c4 04             	add    $0x4,%esp
8100010e:	eb 01                	jmp    81000111 <msleep+0x28>
    if (ms <= 0) return;
81000110:	90                   	nop

}
81000111:	c9                   	leave  
81000112:	c3                   	ret    

81000113 <getpid>:
/**
 * @brief 获取用户进程id
 * 
 * @return int 
 */
int getpid(void) {
81000113:	55                   	push   %ebp
81000114:	89 e5                	mov    %esp,%ebp
81000116:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000119:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)

    return sys_call(&args);
81000120:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000123:	50                   	push   %eax
81000124:	e8 74 ff ff ff       	call   8100009d <sys_call>
81000129:	83 c4 04             	add    $0x4,%esp
}
8100012c:	c9                   	leave  
8100012d:	c3                   	ret    

8100012e <print_msg>:

void print_msg(const char *fmt, int arg) {
8100012e:	55                   	push   %ebp
8100012f:	89 e5                	mov    %esp,%ebp
81000131:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000134:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100013b:	8b 45 08             	mov    0x8(%ebp),%eax
8100013e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000141:	8b 45 0c             	mov    0xc(%ebp),%eax
81000144:	89 45 f4             	mov    %eax,-0xc(%ebp)

    sys_call(&args);
81000147:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100014a:	50                   	push   %eax
8100014b:	e8 4d ff ff ff       	call   8100009d <sys_call>
81000150:	83 c4 04             	add    $0x4,%esp
}
81000153:	90                   	nop
81000154:	c9                   	leave  
81000155:	c3                   	ret    

81000156 <fork>:

int fork (void) {
81000156:	55                   	push   %ebp
81000157:	89 e5                	mov    %esp,%ebp
81000159:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
8100015c:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)

    return sys_call(&args);
81000163:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000166:	50                   	push   %eax
81000167:	e8 31 ff ff ff       	call   8100009d <sys_call>
8100016c:	83 c4 04             	add    $0x4,%esp
}
8100016f:	c9                   	leave  
81000170:	c3                   	ret    

81000171 <execve>:
 * @param name 外部程序名
 * @param argv 外部程序的参数，字符串常量指针，即字符串数组，数组中的char*值为常量
 * @param env  所加载程序的环境变量
 * @return int 
 */
int execve(const char *name, char * const * argv, char * const * env) {
81000171:	55                   	push   %ebp
81000172:	89 e5                	mov    %esp,%ebp
81000174:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000177:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
8100017e:	8b 45 08             	mov    0x8(%ebp),%eax
81000181:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000184:	8b 45 0c             	mov    0xc(%ebp),%eax
81000187:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8100018a:	8b 45 10             	mov    0x10(%ebp),%eax
8100018d:	89 45 f8             	mov    %eax,-0x8(%ebp)


    return sys_call(&args);
81000190:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000193:	50                   	push   %eax
81000194:	e8 04 ff ff ff       	call   8100009d <sys_call>
81000199:	83 c4 04             	add    $0x4,%esp
}
8100019c:	c9                   	leave  
8100019d:	c3                   	ret    

8100019e <yield>:
/**
 * @brief 进程主动放弃cpu
 * 
 * @return int 
 */
int yield (void) {
8100019e:	55                   	push   %ebp
8100019f:	89 e5                	mov    %esp,%ebp
810001a1:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810001a4:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)

    return sys_call(&args);
810001ab:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001ae:	50                   	push   %eax
810001af:	e8 e9 fe ff ff       	call   8100009d <sys_call>
810001b4:	83 c4 04             	add    $0x4,%esp
}
810001b7:	c9                   	leave  
810001b8:	c3                   	ret    

810001b9 <open>:
 * @param name 
 * @param flags 
 * @param ... 
 * @return int 
 */
int open(const char *name, int flags, ...) {
810001b9:	55                   	push   %ebp
810001ba:	89 e5                	mov    %esp,%ebp
810001bc:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_open;
810001bf:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
810001c6:	8b 45 08             	mov    0x8(%ebp),%eax
810001c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = flags;
810001cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810001cf:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810001d2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001d5:	50                   	push   %eax
810001d6:	e8 c2 fe ff ff       	call   8100009d <sys_call>
810001db:	83 c4 04             	add    $0x4,%esp
}
810001de:	c9                   	leave  
810001df:	c3                   	ret    

810001e0 <read>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int read(int file, char *ptr, int len) {
810001e0:	55                   	push   %ebp
810001e1:	89 e5                	mov    %esp,%ebp
810001e3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
810001e6:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = file;
810001ed:	8b 45 08             	mov    0x8(%ebp),%eax
810001f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810001f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810001f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
810001f9:	8b 45 10             	mov    0x10(%ebp),%eax
810001fc:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
810001ff:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000202:	50                   	push   %eax
81000203:	e8 95 fe ff ff       	call   8100009d <sys_call>
81000208:	83 c4 04             	add    $0x4,%esp
}
8100020b:	c9                   	leave  
8100020c:	c3                   	ret    

8100020d <write>:
 * @param file 
 * @param ptr 
 * @param len 
 * @return int 
 */
int write(int file, char *ptr, int len) {
8100020d:	55                   	push   %ebp
8100020e:	89 e5                	mov    %esp,%ebp
81000210:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000213:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = file;
8100021a:	8b 45 08             	mov    0x8(%ebp),%eax
8100021d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000220:	8b 45 0c             	mov    0xc(%ebp),%eax
81000223:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000226:	8b 45 10             	mov    0x10(%ebp),%eax
81000229:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100022c:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100022f:	50                   	push   %eax
81000230:	e8 68 fe ff ff       	call   8100009d <sys_call>
81000235:	83 c4 04             	add    $0x4,%esp
}
81000238:	c9                   	leave  
81000239:	c3                   	ret    

8100023a <close>:
 * @brief 关闭文件描述符
 * 
 * @param file 
 * @return int 
 */
int close(int file) {
8100023a:	55                   	push   %ebp
8100023b:	89 e5                	mov    %esp,%ebp
8100023d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000240:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = file;
81000247:	8b 45 08             	mov    0x8(%ebp),%eax
8100024a:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100024d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000250:	50                   	push   %eax
81000251:	e8 47 fe ff ff       	call   8100009d <sys_call>
81000256:	83 c4 04             	add    $0x4,%esp
}
81000259:	c9                   	leave  
8100025a:	c3                   	ret    

8100025b <lseek>:
 * @param file 
 * @param offset 
 * @param dir 
 * @return int 
 */
int lseek(int file, int offset, int dir) {
8100025b:	55                   	push   %ebp
8100025c:	89 e5                	mov    %esp,%ebp
8100025e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000261:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = file;
81000268:	8b 45 08             	mov    0x8(%ebp),%eax
8100026b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = offset;
8100026e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000271:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000274:	8b 45 10             	mov    0x10(%ebp),%eax
81000277:	89 45 f8             	mov    %eax,-0x8(%ebp)

    return sys_call(&args);
8100027a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100027d:	50                   	push   %eax
8100027e:	e8 1a fe ff ff       	call   8100009d <sys_call>
81000283:	83 c4 04             	add    $0x4,%esp
}
81000286:	c9                   	leave  
81000287:	c3                   	ret    

81000288 <isatty>:
 * @brief 
 * 
 * @param file 
 * @return int 
 */
int isatty(int file) {
81000288:	55                   	push   %ebp
81000289:	89 e5                	mov    %esp,%ebp
8100028b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
8100028e:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = file;
81000295:	8b 45 08             	mov    0x8(%ebp),%eax
81000298:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return sys_call(&args);
8100029b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029e:	50                   	push   %eax
8100029f:	e8 f9 fd ff ff       	call   8100009d <sys_call>
810002a4:	83 c4 04             	add    $0x4,%esp
}
810002a7:	c9                   	leave  
810002a8:	c3                   	ret    

810002a9 <fstat>:
 * 
 * @param file 
 * @param st 
 * @return int 
 */
int fstat(int file, struct stat *st) {
810002a9:	55                   	push   %ebp
810002aa:	89 e5                	mov    %esp,%ebp
810002ac:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
810002af:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = file;
810002b6:	8b 45 08             	mov    0x8(%ebp),%eax
810002b9:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
810002bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810002bf:	89 45 f4             	mov    %eax,-0xc(%ebp)

    return sys_call(&args);
810002c2:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002c5:	50                   	push   %eax
810002c6:	e8 d2 fd ff ff       	call   8100009d <sys_call>
810002cb:	83 c4 04             	add    $0x4,%esp
}
810002ce:	c9                   	leave  
810002cf:	c3                   	ret    

810002d0 <sbrk>:
 * @brief 
 * 
 * @param incr 
 * @return void* 
 */
char *sbrk(ptrdiff_t incr) {
810002d0:	55                   	push   %ebp
810002d1:	89 e5                	mov    %esp,%ebp
810002d3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
810002d6:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)incr;
810002dd:	8b 45 08             	mov    0x8(%ebp),%eax
810002e0:	89 45 f0             	mov    %eax,-0x10(%ebp)

    return (char*)sys_call(&args);
810002e3:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002e6:	50                   	push   %eax
810002e7:	e8 b1 fd ff ff       	call   8100009d <sys_call>
810002ec:	83 c4 04             	add    $0x4,%esp
810002ef:	c9                   	leave  
810002f0:	c3                   	ret    

810002f1 <_gets_r>:
810002f1:	55                   	push   %ebp
810002f2:	89 e5                	mov    %esp,%ebp
810002f4:	56                   	push   %esi
810002f5:	53                   	push   %ebx
810002f6:	83 ec 10             	sub    $0x10,%esp
810002f9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810002fc:	8b 45 08             	mov    0x8(%ebp),%eax
810002ff:	8b 40 04             	mov    0x4(%eax),%eax
81000302:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000305:	8b 45 08             	mov    0x8(%ebp),%eax
81000308:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100030b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100030f:	74 34                	je     81000345 <_gets_r+0x54>
81000311:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000314:	8b 40 38             	mov    0x38(%eax),%eax
81000317:	85 c0                	test   %eax,%eax
81000319:	75 2a                	jne    81000345 <_gets_r+0x54>
8100031b:	83 ec 0c             	sub    $0xc,%esp
8100031e:	ff 75 f0             	push   -0x10(%ebp)
81000321:	e8 78 05 00 00       	call   8100089e <__sinit>
81000326:	83 c4 10             	add    $0x10,%esp
81000329:	eb 1a                	jmp    81000345 <_gets_r+0x54>
8100032b:	83 fe ff             	cmp    $0xffffffff,%esi
8100032e:	75 0c                	jne    8100033c <_gets_r+0x4b>
81000330:	3b 5d 0c             	cmp    0xc(%ebp),%ebx
81000333:	75 58                	jne    8100038d <_gets_r+0x9c>
81000335:	b8 00 00 00 00       	mov    $0x0,%eax
8100033a:	eb 58                	jmp    81000394 <_gets_r+0xa3>
8100033c:	89 d8                	mov    %ebx,%eax
8100033e:	8d 58 01             	lea    0x1(%eax),%ebx
81000341:	89 f2                	mov    %esi,%edx
81000343:	88 10                	mov    %dl,(%eax)
81000345:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000348:	8b 40 04             	mov    0x4(%eax),%eax
8100034b:	8d 50 ff             	lea    -0x1(%eax),%edx
8100034e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000351:	89 50 04             	mov    %edx,0x4(%eax)
81000354:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000357:	8b 40 04             	mov    0x4(%eax),%eax
8100035a:	85 c0                	test   %eax,%eax
8100035c:	79 13                	jns    81000371 <_gets_r+0x80>
8100035e:	83 ec 08             	sub    $0x8,%esp
81000361:	ff 75 f4             	push   -0xc(%ebp)
81000364:	ff 75 08             	push   0x8(%ebp)
81000367:	e8 3d 01 00 00       	call   810004a9 <__srget_r>
8100036c:	83 c4 10             	add    $0x10,%esp
8100036f:	eb 13                	jmp    81000384 <_gets_r+0x93>
81000371:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000374:	8b 00                	mov    (%eax),%eax
81000376:	8d 48 01             	lea    0x1(%eax),%ecx
81000379:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100037c:	89 0a                	mov    %ecx,(%edx)
8100037e:	0f b6 00             	movzbl (%eax),%eax
81000381:	0f b6 c0             	movzbl %al,%eax
81000384:	89 c6                	mov    %eax,%esi
81000386:	83 fe 0a             	cmp    $0xa,%esi
81000389:	75 a0                	jne    8100032b <_gets_r+0x3a>
8100038b:	eb 01                	jmp    8100038e <_gets_r+0x9d>
8100038d:	90                   	nop
8100038e:	c6 03 00             	movb   $0x0,(%ebx)
81000391:	8b 45 0c             	mov    0xc(%ebp),%eax
81000394:	8d 65 f8             	lea    -0x8(%ebp),%esp
81000397:	5b                   	pop    %ebx
81000398:	5e                   	pop    %esi
81000399:	5d                   	pop    %ebp
8100039a:	c3                   	ret    

8100039b <gets>:
8100039b:	55                   	push   %ebp
8100039c:	89 e5                	mov    %esp,%ebp
8100039e:	83 ec 08             	sub    $0x8,%esp
810003a1:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
810003a6:	83 ec 08             	sub    $0x8,%esp
810003a9:	ff 75 08             	push   0x8(%ebp)
810003ac:	50                   	push   %eax
810003ad:	e8 3f ff ff ff       	call   810002f1 <_gets_r>
810003b2:	83 c4 10             	add    $0x10,%esp
810003b5:	c9                   	leave  
810003b6:	c3                   	ret    

810003b7 <_puts_r>:
810003b7:	55                   	push   %ebp
810003b8:	89 e5                	mov    %esp,%ebp
810003ba:	83 ec 38             	sub    $0x38,%esp
810003bd:	83 ec 0c             	sub    $0xc,%esp
810003c0:	ff 75 0c             	push   0xc(%ebp)
810003c3:	e8 68 01 00 00       	call   81000530 <strlen>
810003c8:	83 c4 10             	add    $0x10,%esp
810003cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810003ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810003d1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810003d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003d7:	89 45 d0             	mov    %eax,-0x30(%ebp)
810003da:	c7 45 d4 7c 37 00 81 	movl   $0x8100377c,-0x2c(%ebp)
810003e1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
810003e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810003eb:	83 c0 01             	add    $0x1,%eax
810003ee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810003f1:	8d 45 cc             	lea    -0x34(%ebp),%eax
810003f4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810003f7:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
810003fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000401:	8b 40 08             	mov    0x8(%eax),%eax
81000404:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000407:	8b 45 08             	mov    0x8(%ebp),%eax
8100040a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100040d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000411:	74 18                	je     8100042b <_puts_r+0x74>
81000413:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000416:	8b 40 38             	mov    0x38(%eax),%eax
81000419:	85 c0                	test   %eax,%eax
8100041b:	75 0e                	jne    8100042b <_puts_r+0x74>
8100041d:	83 ec 0c             	sub    $0xc,%esp
81000420:	ff 75 ec             	push   -0x14(%ebp)
81000423:	e8 76 04 00 00       	call   8100089e <__sinit>
81000428:	83 c4 10             	add    $0x10,%esp
8100042b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100042e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000432:	98                   	cwtl   
81000433:	25 00 20 00 00       	and    $0x2000,%eax
81000438:	85 c0                	test   %eax,%eax
8100043a:	75 24                	jne    81000460 <_puts_r+0xa9>
8100043c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100043f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000443:	80 cc 20             	or     $0x20,%ah
81000446:	89 c2                	mov    %eax,%edx
81000448:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100044b:	66 89 50 0c          	mov    %dx,0xc(%eax)
8100044f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000452:	8b 40 64             	mov    0x64(%eax),%eax
81000455:	80 e4 df             	and    $0xdf,%ah
81000458:	89 c2                	mov    %eax,%edx
8100045a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100045d:	89 50 64             	mov    %edx,0x64(%eax)
81000460:	83 ec 04             	sub    $0x4,%esp
81000463:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000466:	50                   	push   %eax
81000467:	ff 75 f0             	push   -0x10(%ebp)
8100046a:	ff 75 08             	push   0x8(%ebp)
8100046d:	e8 39 05 00 00       	call   810009ab <__sfvwrite_r>
81000472:	83 c4 10             	add    $0x10,%esp
81000475:	85 c0                	test   %eax,%eax
81000477:	74 07                	je     81000480 <_puts_r+0xc9>
81000479:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100047e:	eb 05                	jmp    81000485 <_puts_r+0xce>
81000480:	b8 0a 00 00 00       	mov    $0xa,%eax
81000485:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000488:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100048b:	c9                   	leave  
8100048c:	c3                   	ret    

8100048d <puts>:
8100048d:	55                   	push   %ebp
8100048e:	89 e5                	mov    %esp,%ebp
81000490:	83 ec 08             	sub    $0x8,%esp
81000493:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000498:	83 ec 08             	sub    $0x8,%esp
8100049b:	ff 75 08             	push   0x8(%ebp)
8100049e:	50                   	push   %eax
8100049f:	e8 13 ff ff ff       	call   810003b7 <_puts_r>
810004a4:	83 c4 10             	add    $0x10,%esp
810004a7:	c9                   	leave  
810004a8:	c3                   	ret    

810004a9 <__srget_r>:
810004a9:	55                   	push   %ebp
810004aa:	89 e5                	mov    %esp,%ebp
810004ac:	53                   	push   %ebx
810004ad:	83 ec 14             	sub    $0x14,%esp
810004b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810004b3:	8b 45 08             	mov    0x8(%ebp),%eax
810004b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810004b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810004bd:	74 18                	je     810004d7 <__srget_r+0x2e>
810004bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810004c2:	8b 40 38             	mov    0x38(%eax),%eax
810004c5:	85 c0                	test   %eax,%eax
810004c7:	75 0e                	jne    810004d7 <__srget_r+0x2e>
810004c9:	83 ec 0c             	sub    $0xc,%esp
810004cc:	ff 75 f4             	push   -0xc(%ebp)
810004cf:	e8 ca 03 00 00       	call   8100089e <__sinit>
810004d4:	83 c4 10             	add    $0x10,%esp
810004d7:	83 ec 08             	sub    $0x8,%esp
810004da:	53                   	push   %ebx
810004db:	ff 75 08             	push   0x8(%ebp)
810004de:	e8 05 20 00 00       	call   810024e8 <__srefill_r>
810004e3:	83 c4 10             	add    $0x10,%esp
810004e6:	85 c0                	test   %eax,%eax
810004e8:	75 18                	jne    81000502 <__srget_r+0x59>
810004ea:	8b 43 04             	mov    0x4(%ebx),%eax
810004ed:	83 e8 01             	sub    $0x1,%eax
810004f0:	89 43 04             	mov    %eax,0x4(%ebx)
810004f3:	8b 03                	mov    (%ebx),%eax
810004f5:	8d 50 01             	lea    0x1(%eax),%edx
810004f8:	89 13                	mov    %edx,(%ebx)
810004fa:	0f b6 00             	movzbl (%eax),%eax
810004fd:	0f b6 c0             	movzbl %al,%eax
81000500:	eb 05                	jmp    81000507 <__srget_r+0x5e>
81000502:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000507:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100050a:	c9                   	leave  
8100050b:	c3                   	ret    

8100050c <__srget>:
8100050c:	55                   	push   %ebp
8100050d:	89 e5                	mov    %esp,%ebp
8100050f:	83 ec 08             	sub    $0x8,%esp
81000512:	8b 55 08             	mov    0x8(%ebp),%edx
81000515:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
8100051a:	83 ec 08             	sub    $0x8,%esp
8100051d:	52                   	push   %edx
8100051e:	50                   	push   %eax
8100051f:	e8 85 ff ff ff       	call   810004a9 <__srget_r>
81000524:	83 c4 10             	add    $0x10,%esp
81000527:	c9                   	leave  
81000528:	c3                   	ret    
81000529:	66 90                	xchg   %ax,%ax
8100052b:	66 90                	xchg   %ax,%ax
8100052d:	66 90                	xchg   %ax,%ax
8100052f:	90                   	nop

81000530 <strlen>:
81000530:	55                   	push   %ebp
81000531:	89 e5                	mov    %esp,%ebp
81000533:	57                   	push   %edi
81000534:	8b 55 08             	mov    0x8(%ebp),%edx
81000537:	89 d7                	mov    %edx,%edi
81000539:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100053f:	74 25                	je     81000566 <L5>
81000541:	8a 0f                	mov    (%edi),%cl
81000543:	47                   	inc    %edi
81000544:	84 c9                	test   %cl,%cl
81000546:	74 56                	je     8100059e <L15>
81000548:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100054e:	74 16                	je     81000566 <L5>
81000550:	8a 0f                	mov    (%edi),%cl
81000552:	47                   	inc    %edi
81000553:	84 c9                	test   %cl,%cl
81000555:	74 47                	je     8100059e <L15>
81000557:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100055d:	74 07                	je     81000566 <L5>
8100055f:	8a 0f                	mov    (%edi),%cl
81000561:	47                   	inc    %edi
81000562:	84 c9                	test   %cl,%cl
81000564:	74 38                	je     8100059e <L15>

81000566 <L5>:
81000566:	83 ef 04             	sub    $0x4,%edi
81000569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000570 <L10>:
81000570:	83 c7 04             	add    $0x4,%edi
81000573:	8b 0f                	mov    (%edi),%ecx
81000575:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100057b:	f7 d1                	not    %ecx
8100057d:	21 c8                	and    %ecx,%eax
8100057f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000584:	74 ea                	je     81000570 <L10>
81000586:	f7 d1                	not    %ecx
81000588:	47                   	inc    %edi
81000589:	84 c9                	test   %cl,%cl
8100058b:	74 11                	je     8100059e <L15>
8100058d:	47                   	inc    %edi
8100058e:	c1 e9 08             	shr    $0x8,%ecx
81000591:	84 c9                	test   %cl,%cl
81000593:	74 09                	je     8100059e <L15>
81000595:	47                   	inc    %edi
81000596:	c1 e9 08             	shr    $0x8,%ecx
81000599:	84 c9                	test   %cl,%cl
8100059b:	74 01                	je     8100059e <L15>
8100059d:	47                   	inc    %edi

8100059e <L15>:
8100059e:	29 d7                	sub    %edx,%edi
810005a0:	8d 47 ff             	lea    -0x1(%edi),%eax
810005a3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810005a6:	5f                   	pop    %edi
810005a7:	c9                   	leave  
810005a8:	c3                   	ret    

810005a9 <std>:
810005a9:	55                   	push   %ebp
810005aa:	89 e5                	mov    %esp,%ebp
810005ac:	83 ec 08             	sub    $0x8,%esp
810005af:	8b 45 08             	mov    0x8(%ebp),%eax
810005b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005b8:	8b 45 08             	mov    0x8(%ebp),%eax
810005bb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810005c2:	8b 45 08             	mov    0x8(%ebp),%eax
810005c5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810005cc:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cf:	89 c2                	mov    %eax,%edx
810005d1:	8b 45 08             	mov    0x8(%ebp),%eax
810005d4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810005d8:	8b 45 08             	mov    0x8(%ebp),%eax
810005db:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810005e2:	8b 45 10             	mov    0x10(%ebp),%eax
810005e5:	89 c2                	mov    %eax,%edx
810005e7:	8b 45 08             	mov    0x8(%ebp),%eax
810005ea:	66 89 50 0e          	mov    %dx,0xe(%eax)
810005ee:	8b 45 08             	mov    0x8(%ebp),%eax
810005f1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
810005f8:	8b 45 08             	mov    0x8(%ebp),%eax
810005fb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000602:	8b 45 08             	mov    0x8(%ebp),%eax
81000605:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100060c:	8b 45 08             	mov    0x8(%ebp),%eax
8100060f:	83 c0 5c             	add    $0x5c,%eax
81000612:	83 ec 04             	sub    $0x4,%esp
81000615:	6a 08                	push   $0x8
81000617:	6a 00                	push   $0x0
81000619:	50                   	push   %eax
8100061a:	e8 2e 15 00 00       	call   81001b4d <memset>
8100061f:	83 c4 10             	add    $0x10,%esp
81000622:	8b 45 08             	mov    0x8(%ebp),%eax
81000625:	8b 55 08             	mov    0x8(%ebp),%edx
81000628:	89 50 1c             	mov    %edx,0x1c(%eax)
8100062b:	8b 45 08             	mov    0x8(%ebp),%eax
8100062e:	c7 40 20 29 27 00 81 	movl   $0x81002729,0x20(%eax)
81000635:	8b 45 08             	mov    0x8(%ebp),%eax
81000638:	c7 40 24 77 27 00 81 	movl   $0x81002777,0x24(%eax)
8100063f:	8b 45 08             	mov    0x8(%ebp),%eax
81000642:	c7 40 28 d2 27 00 81 	movl   $0x810027d2,0x28(%eax)
81000649:	8b 45 08             	mov    0x8(%ebp),%eax
8100064c:	c7 40 2c 1c 28 00 81 	movl   $0x8100281c,0x2c(%eax)
81000653:	90                   	nop
81000654:	c9                   	leave  
81000655:	c3                   	ret    

81000656 <stdin_init>:
81000656:	55                   	push   %ebp
81000657:	89 e5                	mov    %esp,%ebp
81000659:	83 ec 08             	sub    $0x8,%esp
8100065c:	83 ec 04             	sub    $0x4,%esp
8100065f:	6a 00                	push   $0x0
81000661:	6a 04                	push   $0x4
81000663:	ff 75 08             	push   0x8(%ebp)
81000666:	e8 3e ff ff ff       	call   810005a9 <std>
8100066b:	83 c4 10             	add    $0x10,%esp
8100066e:	90                   	nop
8100066f:	c9                   	leave  
81000670:	c3                   	ret    

81000671 <stdout_init>:
81000671:	55                   	push   %ebp
81000672:	89 e5                	mov    %esp,%ebp
81000674:	83 ec 08             	sub    $0x8,%esp
81000677:	83 ec 04             	sub    $0x4,%esp
8100067a:	6a 01                	push   $0x1
8100067c:	6a 09                	push   $0x9
8100067e:	ff 75 08             	push   0x8(%ebp)
81000681:	e8 23 ff ff ff       	call   810005a9 <std>
81000686:	83 c4 10             	add    $0x10,%esp
81000689:	90                   	nop
8100068a:	c9                   	leave  
8100068b:	c3                   	ret    

8100068c <stderr_init>:
8100068c:	55                   	push   %ebp
8100068d:	89 e5                	mov    %esp,%ebp
8100068f:	83 ec 08             	sub    $0x8,%esp
81000692:	83 ec 04             	sub    $0x4,%esp
81000695:	6a 02                	push   $0x2
81000697:	6a 12                	push   $0x12
81000699:	ff 75 08             	push   0x8(%ebp)
8100069c:	e8 08 ff ff ff       	call   810005a9 <std>
810006a1:	83 c4 10             	add    $0x10,%esp
810006a4:	90                   	nop
810006a5:	c9                   	leave  
810006a6:	c3                   	ret    

810006a7 <__sfmoreglue>:
810006a7:	55                   	push   %ebp
810006a8:	89 e5                	mov    %esp,%ebp
810006aa:	53                   	push   %ebx
810006ab:	83 ec 14             	sub    $0x14,%esp
810006ae:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810006b1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810006b4:	6b c0 68             	imul   $0x68,%eax,%eax
810006b7:	83 c0 74             	add    $0x74,%eax
810006ba:	83 ec 08             	sub    $0x8,%esp
810006bd:	50                   	push   %eax
810006be:	ff 75 08             	push   0x8(%ebp)
810006c1:	e8 e9 0a 00 00       	call   810011af <_malloc_r>
810006c6:	83 c4 10             	add    $0x10,%esp
810006c9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810006cc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006d0:	75 07                	jne    810006d9 <__sfmoreglue+0x32>
810006d2:	b8 00 00 00 00       	mov    $0x0,%eax
810006d7:	eb 38                	jmp    81000711 <__sfmoreglue+0x6a>
810006d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006dc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e5:	89 58 04             	mov    %ebx,0x4(%eax)
810006e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006eb:	8d 50 0c             	lea    0xc(%eax),%edx
810006ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f1:	89 50 08             	mov    %edx,0x8(%eax)
810006f4:	89 d8                	mov    %ebx,%eax
810006f6:	6b c0 68             	imul   $0x68,%eax,%eax
810006f9:	8b 55 f4             	mov    -0xc(%ebp),%edx
810006fc:	83 c2 0c             	add    $0xc,%edx
810006ff:	83 ec 04             	sub    $0x4,%esp
81000702:	50                   	push   %eax
81000703:	6a 00                	push   $0x0
81000705:	52                   	push   %edx
81000706:	e8 42 14 00 00       	call   81001b4d <memset>
8100070b:	83 c4 10             	add    $0x10,%esp
8100070e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000711:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000714:	c9                   	leave  
81000715:	c3                   	ret    

81000716 <__sfp>:
81000716:	55                   	push   %ebp
81000717:	89 e5                	mov    %esp,%ebp
81000719:	83 ec 18             	sub    $0x18,%esp
8100071c:	e8 16 02 00 00       	call   81000937 <__sfp_lock_acquire>
81000721:	a1 78 37 00 81       	mov    0x81003778,%eax
81000726:	8b 40 38             	mov    0x38(%eax),%eax
81000729:	85 c0                	test   %eax,%eax
8100072b:	75 11                	jne    8100073e <__sfp+0x28>
8100072d:	a1 78 37 00 81       	mov    0x81003778,%eax
81000732:	83 ec 0c             	sub    $0xc,%esp
81000735:	50                   	push   %eax
81000736:	e8 63 01 00 00       	call   8100089e <__sinit>
8100073b:	83 c4 10             	add    $0x10,%esp
8100073e:	a1 78 37 00 81       	mov    0x81003778,%eax
81000743:	05 e0 02 00 00       	add    $0x2e0,%eax
81000748:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100074b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100074e:	8b 40 08             	mov    0x8(%eax),%eax
81000751:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000754:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000757:	8b 40 04             	mov    0x4(%eax),%eax
8100075a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100075d:	eb 10                	jmp    8100076f <__sfp+0x59>
8100075f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000762:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000766:	66 85 c0             	test   %ax,%ax
81000769:	74 58                	je     810007c3 <__sfp+0xad>
8100076b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100076f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000773:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000777:	79 e6                	jns    8100075f <__sfp+0x49>
81000779:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100077c:	8b 00                	mov    (%eax),%eax
8100077e:	85 c0                	test   %eax,%eax
81000780:	75 1e                	jne    810007a0 <__sfp+0x8a>
81000782:	83 ec 08             	sub    $0x8,%esp
81000785:	6a 04                	push   $0x4
81000787:	ff 75 08             	push   0x8(%ebp)
8100078a:	e8 18 ff ff ff       	call   810006a7 <__sfmoreglue>
8100078f:	83 c4 10             	add    $0x10,%esp
81000792:	8b 55 ec             	mov    -0x14(%ebp),%edx
81000795:	89 02                	mov    %eax,(%edx)
81000797:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100079a:	8b 00                	mov    (%eax),%eax
8100079c:	85 c0                	test   %eax,%eax
8100079e:	74 0a                	je     810007aa <__sfp+0x94>
810007a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810007a3:	8b 00                	mov    (%eax),%eax
810007a5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810007a8:	eb a1                	jmp    8100074b <__sfp+0x35>
810007aa:	90                   	nop
810007ab:	e8 8d 01 00 00       	call   8100093d <__sfp_lock_release>
810007b0:	8b 45 08             	mov    0x8(%ebp),%eax
810007b3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810007b9:	b8 00 00 00 00       	mov    $0x0,%eax
810007be:	e9 9e 00 00 00       	jmp    81000861 <__sfp+0x14b>
810007c3:	90                   	nop
810007c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007c7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810007cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810007d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007d9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810007e0:	e8 58 01 00 00       	call   8100093d <__sfp_lock_release>
810007e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007e8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810007ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007f1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810007f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810007fb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000802:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000805:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100080c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100080f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000816:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000819:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000820:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000823:	83 c0 5c             	add    $0x5c,%eax
81000826:	83 ec 04             	sub    $0x4,%esp
81000829:	6a 08                	push   $0x8
8100082b:	6a 00                	push   $0x0
8100082d:	50                   	push   %eax
8100082e:	e8 1a 13 00 00       	call   81001b4d <memset>
81000833:	83 c4 10             	add    $0x10,%esp
81000836:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000839:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000840:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000843:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100084a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100084d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000854:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000857:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100085e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000861:	c9                   	leave  
81000862:	c3                   	ret    

81000863 <_cleanup_r>:
81000863:	55                   	push   %ebp
81000864:	89 e5                	mov    %esp,%ebp
81000866:	83 ec 18             	sub    $0x18,%esp
81000869:	c7 45 f4 22 2a 00 81 	movl   $0x81002a22,-0xc(%ebp)
81000870:	83 ec 08             	sub    $0x8,%esp
81000873:	ff 75 f4             	push   -0xc(%ebp)
81000876:	ff 75 08             	push   0x8(%ebp)
81000879:	e8 33 06 00 00       	call   81000eb1 <_fwalk_reent>
8100087e:	83 c4 10             	add    $0x10,%esp
81000881:	90                   	nop
81000882:	c9                   	leave  
81000883:	c3                   	ret    

81000884 <_cleanup>:
81000884:	55                   	push   %ebp
81000885:	89 e5                	mov    %esp,%ebp
81000887:	83 ec 08             	sub    $0x8,%esp
8100088a:	a1 78 37 00 81       	mov    0x81003778,%eax
8100088f:	83 ec 0c             	sub    $0xc,%esp
81000892:	50                   	push   %eax
81000893:	e8 cb ff ff ff       	call   81000863 <_cleanup_r>
81000898:	83 c4 10             	add    $0x10,%esp
8100089b:	90                   	nop
8100089c:	c9                   	leave  
8100089d:	c3                   	ret    

8100089e <__sinit>:
8100089e:	55                   	push   %ebp
8100089f:	89 e5                	mov    %esp,%ebp
810008a1:	83 ec 08             	sub    $0x8,%esp
810008a4:	e8 9a 00 00 00       	call   81000943 <__sinit_lock_acquire>
810008a9:	8b 45 08             	mov    0x8(%ebp),%eax
810008ac:	8b 40 38             	mov    0x38(%eax),%eax
810008af:	85 c0                	test   %eax,%eax
810008b1:	74 07                	je     810008ba <__sinit+0x1c>
810008b3:	e8 91 00 00 00       	call   81000949 <__sinit_lock_release>
810008b8:	eb 7b                	jmp    81000935 <__sinit+0x97>
810008ba:	8b 45 08             	mov    0x8(%ebp),%eax
810008bd:	c7 40 3c 63 08 00 81 	movl   $0x81000863,0x3c(%eax)
810008c4:	8b 45 08             	mov    0x8(%ebp),%eax
810008c7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810008ce:	00 00 00 
810008d1:	8b 45 08             	mov    0x8(%ebp),%eax
810008d4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810008db:	00 00 00 
810008de:	8b 45 08             	mov    0x8(%ebp),%eax
810008e1:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810008e7:	8b 45 08             	mov    0x8(%ebp),%eax
810008ea:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
810008f0:	8b 45 08             	mov    0x8(%ebp),%eax
810008f3:	8b 40 04             	mov    0x4(%eax),%eax
810008f6:	83 ec 0c             	sub    $0xc,%esp
810008f9:	50                   	push   %eax
810008fa:	e8 57 fd ff ff       	call   81000656 <stdin_init>
810008ff:	83 c4 10             	add    $0x10,%esp
81000902:	8b 45 08             	mov    0x8(%ebp),%eax
81000905:	8b 40 08             	mov    0x8(%eax),%eax
81000908:	83 ec 0c             	sub    $0xc,%esp
8100090b:	50                   	push   %eax
8100090c:	e8 60 fd ff ff       	call   81000671 <stdout_init>
81000911:	83 c4 10             	add    $0x10,%esp
81000914:	8b 45 08             	mov    0x8(%ebp),%eax
81000917:	8b 40 0c             	mov    0xc(%eax),%eax
8100091a:	83 ec 0c             	sub    $0xc,%esp
8100091d:	50                   	push   %eax
8100091e:	e8 69 fd ff ff       	call   8100068c <stderr_init>
81000923:	83 c4 10             	add    $0x10,%esp
81000926:	8b 45 08             	mov    0x8(%ebp),%eax
81000929:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000930:	e8 14 00 00 00       	call   81000949 <__sinit_lock_release>
81000935:	c9                   	leave  
81000936:	c3                   	ret    

81000937 <__sfp_lock_acquire>:
81000937:	55                   	push   %ebp
81000938:	89 e5                	mov    %esp,%ebp
8100093a:	90                   	nop
8100093b:	5d                   	pop    %ebp
8100093c:	c3                   	ret    

8100093d <__sfp_lock_release>:
8100093d:	55                   	push   %ebp
8100093e:	89 e5                	mov    %esp,%ebp
81000940:	90                   	nop
81000941:	5d                   	pop    %ebp
81000942:	c3                   	ret    

81000943 <__sinit_lock_acquire>:
81000943:	55                   	push   %ebp
81000944:	89 e5                	mov    %esp,%ebp
81000946:	90                   	nop
81000947:	5d                   	pop    %ebp
81000948:	c3                   	ret    

81000949 <__sinit_lock_release>:
81000949:	55                   	push   %ebp
8100094a:	89 e5                	mov    %esp,%ebp
8100094c:	90                   	nop
8100094d:	5d                   	pop    %ebp
8100094e:	c3                   	ret    

8100094f <__fp_lock>:
8100094f:	55                   	push   %ebp
81000950:	89 e5                	mov    %esp,%ebp
81000952:	b8 00 00 00 00       	mov    $0x0,%eax
81000957:	5d                   	pop    %ebp
81000958:	c3                   	ret    

81000959 <__fp_unlock>:
81000959:	55                   	push   %ebp
8100095a:	89 e5                	mov    %esp,%ebp
8100095c:	b8 00 00 00 00       	mov    $0x0,%eax
81000961:	5d                   	pop    %ebp
81000962:	c3                   	ret    

81000963 <__fp_lock_all>:
81000963:	55                   	push   %ebp
81000964:	89 e5                	mov    %esp,%ebp
81000966:	83 ec 08             	sub    $0x8,%esp
81000969:	e8 c9 ff ff ff       	call   81000937 <__sfp_lock_acquire>
8100096e:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000973:	83 ec 08             	sub    $0x8,%esp
81000976:	68 4f 09 00 81       	push   $0x8100094f
8100097b:	50                   	push   %eax
8100097c:	e8 c8 04 00 00       	call   81000e49 <_fwalk>
81000981:	83 c4 10             	add    $0x10,%esp
81000984:	90                   	nop
81000985:	c9                   	leave  
81000986:	c3                   	ret    

81000987 <__fp_unlock_all>:
81000987:	55                   	push   %ebp
81000988:	89 e5                	mov    %esp,%ebp
8100098a:	83 ec 08             	sub    $0x8,%esp
8100098d:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81000992:	83 ec 08             	sub    $0x8,%esp
81000995:	68 59 09 00 81       	push   $0x81000959
8100099a:	50                   	push   %eax
8100099b:	e8 a9 04 00 00       	call   81000e49 <_fwalk>
810009a0:	83 c4 10             	add    $0x10,%esp
810009a3:	e8 95 ff ff ff       	call   8100093d <__sfp_lock_release>
810009a8:	90                   	nop
810009a9:	c9                   	leave  
810009aa:	c3                   	ret    

810009ab <__sfvwrite_r>:
810009ab:	55                   	push   %ebp
810009ac:	89 e5                	mov    %esp,%ebp
810009ae:	57                   	push   %edi
810009af:	56                   	push   %esi
810009b0:	53                   	push   %ebx
810009b1:	83 ec 3c             	sub    $0x3c,%esp
810009b4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810009b7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810009be:	8b 45 10             	mov    0x10(%ebp),%eax
810009c1:	8b 78 08             	mov    0x8(%eax),%edi
810009c4:	85 ff                	test   %edi,%edi
810009c6:	75 0a                	jne    810009d2 <__sfvwrite_r+0x27>
810009c8:	b8 00 00 00 00       	mov    $0x0,%eax
810009cd:	e9 6f 04 00 00       	jmp    81000e41 <__sfvwrite_r+0x496>
810009d2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009d6:	98                   	cwtl   
810009d7:	83 e0 08             	and    $0x8,%eax
810009da:	85 c0                	test   %eax,%eax
810009dc:	74 07                	je     810009e5 <__sfvwrite_r+0x3a>
810009de:	8b 43 10             	mov    0x10(%ebx),%eax
810009e1:	85 c0                	test   %eax,%eax
810009e3:	75 1d                	jne    81000a02 <__sfvwrite_r+0x57>
810009e5:	83 ec 08             	sub    $0x8,%esp
810009e8:	53                   	push   %ebx
810009e9:	ff 75 08             	push   0x8(%ebp)
810009ec:	e8 96 1e 00 00       	call   81002887 <__swsetup_r>
810009f1:	83 c4 10             	add    $0x10,%esp
810009f4:	85 c0                	test   %eax,%eax
810009f6:	74 0a                	je     81000a02 <__sfvwrite_r+0x57>
810009f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810009fd:	e9 3f 04 00 00       	jmp    81000e41 <__sfvwrite_r+0x496>
81000a02:	8b 45 10             	mov    0x10(%ebp),%eax
81000a05:	8b 00                	mov    (%eax),%eax
81000a07:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a0a:	bf 00 00 00 00       	mov    $0x0,%edi
81000a0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a13:	98                   	cwtl   
81000a14:	83 e0 02             	and    $0x2,%eax
81000a17:	85 c0                	test   %eax,%eax
81000a19:	74 68                	je     81000a83 <__sfvwrite_r+0xd8>
81000a1b:	eb 11                	jmp    81000a2e <__sfvwrite_r+0x83>
81000a1d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a20:	8b 08                	mov    (%eax),%ecx
81000a22:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a25:	8b 78 04             	mov    0x4(%eax),%edi
81000a28:	83 c0 08             	add    $0x8,%eax
81000a2b:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000a2e:	85 ff                	test   %edi,%edi
81000a30:	74 eb                	je     81000a1d <__sfvwrite_r+0x72>
81000a32:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000a35:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81000a3a:	39 c7                	cmp    %eax,%edi
81000a3c:	0f 46 c7             	cmovbe %edi,%eax
81000a3f:	89 c2                	mov    %eax,%edx
81000a41:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000a44:	52                   	push   %edx
81000a45:	ff 75 c4             	push   -0x3c(%ebp)
81000a48:	50                   	push   %eax
81000a49:	ff 75 08             	push   0x8(%ebp)
81000a4c:	ff d1                	call   *%ecx
81000a4e:	83 c4 10             	add    $0x10,%esp
81000a51:	89 c6                	mov    %eax,%esi
81000a53:	85 f6                	test   %esi,%esi
81000a55:	0f 8e cf 03 00 00    	jle    81000e2a <__sfvwrite_r+0x47f>
81000a5b:	89 f0                	mov    %esi,%eax
81000a5d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000a60:	89 f0                	mov    %esi,%eax
81000a62:	29 c7                	sub    %eax,%edi
81000a64:	8b 45 10             	mov    0x10(%ebp),%eax
81000a67:	8b 40 08             	mov    0x8(%eax),%eax
81000a6a:	89 f2                	mov    %esi,%edx
81000a6c:	29 d0                	sub    %edx,%eax
81000a6e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000a71:	89 41 08             	mov    %eax,0x8(%ecx)
81000a74:	8b 45 10             	mov    0x10(%ebp),%eax
81000a77:	8b 40 08             	mov    0x8(%eax),%eax
81000a7a:	85 c0                	test   %eax,%eax
81000a7c:	75 b0                	jne    81000a2e <__sfvwrite_r+0x83>
81000a7e:	e9 a0 03 00 00       	jmp    81000e23 <__sfvwrite_r+0x478>
81000a83:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a87:	98                   	cwtl   
81000a88:	83 e0 01             	and    $0x1,%eax
81000a8b:	85 c0                	test   %eax,%eax
81000a8d:	0f 85 44 02 00 00    	jne    81000cd7 <__sfvwrite_r+0x32c>
81000a93:	eb 11                	jmp    81000aa6 <__sfvwrite_r+0xfb>
81000a95:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000a98:	8b 08                	mov    (%eax),%ecx
81000a9a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000a9d:	8b 78 04             	mov    0x4(%eax),%edi
81000aa0:	83 c0 08             	add    $0x8,%eax
81000aa3:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000aa6:	85 ff                	test   %edi,%edi
81000aa8:	74 eb                	je     81000a95 <__sfvwrite_r+0xea>
81000aaa:	8b 73 08             	mov    0x8(%ebx),%esi
81000aad:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab1:	98                   	cwtl   
81000ab2:	25 00 02 00 00       	and    $0x200,%eax
81000ab7:	85 c0                	test   %eax,%eax
81000ab9:	0f 84 4f 01 00 00    	je     81000c0e <__sfvwrite_r+0x263>
81000abf:	89 f0                	mov    %esi,%eax
81000ac1:	39 c7                	cmp    %eax,%edi
81000ac3:	0f 82 12 01 00 00    	jb     81000bdb <__sfvwrite_r+0x230>
81000ac9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000acd:	98                   	cwtl   
81000ace:	25 80 04 00 00       	and    $0x480,%eax
81000ad3:	85 c0                	test   %eax,%eax
81000ad5:	0f 84 00 01 00 00    	je     81000bdb <__sfvwrite_r+0x230>
81000adb:	8b 03                	mov    (%ebx),%eax
81000add:	8b 53 10             	mov    0x10(%ebx),%edx
81000ae0:	29 d0                	sub    %edx,%eax
81000ae2:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ae5:	8b 53 14             	mov    0x14(%ebx),%edx
81000ae8:	89 d0                	mov    %edx,%eax
81000aea:	01 c0                	add    %eax,%eax
81000aec:	01 d0                	add    %edx,%eax
81000aee:	89 c2                	mov    %eax,%edx
81000af0:	c1 ea 1f             	shr    $0x1f,%edx
81000af3:	01 d0                	add    %edx,%eax
81000af5:	d1 f8                	sar    %eax
81000af7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000afa:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000afd:	01 f8                	add    %edi,%eax
81000aff:	8d 50 01             	lea    0x1(%eax),%edx
81000b02:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b05:	39 c2                	cmp    %eax,%edx
81000b07:	76 0b                	jbe    81000b14 <__sfvwrite_r+0x169>
81000b09:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000b0c:	01 f8                	add    %edi,%eax
81000b0e:	83 c0 01             	add    $0x1,%eax
81000b11:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000b14:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b18:	98                   	cwtl   
81000b19:	25 00 04 00 00       	and    $0x400,%eax
81000b1e:	85 c0                	test   %eax,%eax
81000b20:	74 4f                	je     81000b71 <__sfvwrite_r+0x1c6>
81000b22:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000b25:	83 ec 08             	sub    $0x8,%esp
81000b28:	50                   	push   %eax
81000b29:	ff 75 08             	push   0x8(%ebp)
81000b2c:	e8 7e 06 00 00       	call   810011af <_malloc_r>
81000b31:	83 c4 10             	add    $0x10,%esp
81000b34:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b37:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b3b:	75 0e                	jne    81000b4b <__sfvwrite_r+0x1a0>
81000b3d:	8b 45 08             	mov    0x8(%ebp),%eax
81000b40:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000b46:	e9 e6 02 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000b4b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000b4e:	8b 43 10             	mov    0x10(%ebx),%eax
81000b51:	83 ec 04             	sub    $0x4,%esp
81000b54:	52                   	push   %edx
81000b55:	50                   	push   %eax
81000b56:	ff 75 dc             	push   -0x24(%ebp)
81000b59:	e8 1a 0f 00 00       	call   81001a78 <memcpy>
81000b5e:	83 c4 10             	add    $0x10,%esp
81000b61:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000b65:	66 25 7f fb          	and    $0xfb7f,%ax
81000b69:	0c 80                	or     $0x80,%al
81000b6b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000b6f:	eb 49                	jmp    81000bba <__sfvwrite_r+0x20f>
81000b71:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000b74:	8b 43 10             	mov    0x10(%ebx),%eax
81000b77:	83 ec 04             	sub    $0x4,%esp
81000b7a:	52                   	push   %edx
81000b7b:	50                   	push   %eax
81000b7c:	ff 75 08             	push   0x8(%ebp)
81000b7f:	e8 5d 10 00 00       	call   81001be1 <_realloc_r>
81000b84:	83 c4 10             	add    $0x10,%esp
81000b87:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000b8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000b8e:	75 2a                	jne    81000bba <__sfvwrite_r+0x20f>
81000b90:	8b 43 10             	mov    0x10(%ebx),%eax
81000b93:	83 ec 08             	sub    $0x8,%esp
81000b96:	50                   	push   %eax
81000b97:	ff 75 08             	push   0x8(%ebp)
81000b9a:	e8 5e 22 00 00       	call   81002dfd <_free_r>
81000b9f:	83 c4 10             	add    $0x10,%esp
81000ba2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ba6:	24 7f                	and    $0x7f,%al
81000ba8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000bac:	8b 45 08             	mov    0x8(%ebp),%eax
81000baf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000bb5:	e9 77 02 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000bba:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bbd:	89 43 10             	mov    %eax,0x10(%ebx)
81000bc0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000bc3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000bc6:	01 d0                	add    %edx,%eax
81000bc8:	89 03                	mov    %eax,(%ebx)
81000bca:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bcd:	89 43 14             	mov    %eax,0x14(%ebx)
81000bd0:	89 fe                	mov    %edi,%esi
81000bd2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000bd5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000bd8:	89 43 08             	mov    %eax,0x8(%ebx)
81000bdb:	89 f0                	mov    %esi,%eax
81000bdd:	39 c7                	cmp    %eax,%edi
81000bdf:	73 02                	jae    81000be3 <__sfvwrite_r+0x238>
81000be1:	89 fe                	mov    %edi,%esi
81000be3:	89 f2                	mov    %esi,%edx
81000be5:	8b 03                	mov    (%ebx),%eax
81000be7:	83 ec 04             	sub    $0x4,%esp
81000bea:	52                   	push   %edx
81000beb:	ff 75 c4             	push   -0x3c(%ebp)
81000bee:	50                   	push   %eax
81000bef:	e8 cc 0e 00 00       	call   81001ac0 <memmove>
81000bf4:	83 c4 10             	add    $0x10,%esp
81000bf7:	8b 43 08             	mov    0x8(%ebx),%eax
81000bfa:	29 f0                	sub    %esi,%eax
81000bfc:	89 43 08             	mov    %eax,0x8(%ebx)
81000bff:	8b 03                	mov    (%ebx),%eax
81000c01:	89 f2                	mov    %esi,%edx
81000c03:	01 d0                	add    %edx,%eax
81000c05:	89 03                	mov    %eax,(%ebx)
81000c07:	89 fe                	mov    %edi,%esi
81000c09:	e9 9d 00 00 00       	jmp    81000cab <__sfvwrite_r+0x300>
81000c0e:	8b 13                	mov    (%ebx),%edx
81000c10:	8b 43 10             	mov    0x10(%ebx),%eax
81000c13:	39 c2                	cmp    %eax,%edx
81000c15:	77 07                	ja     81000c1e <__sfvwrite_r+0x273>
81000c17:	8b 43 14             	mov    0x14(%ebx),%eax
81000c1a:	39 c7                	cmp    %eax,%edi
81000c1c:	73 4c                	jae    81000c6a <__sfvwrite_r+0x2bf>
81000c1e:	89 f0                	mov    %esi,%eax
81000c20:	39 c7                	cmp    %eax,%edi
81000c22:	0f 46 c7             	cmovbe %edi,%eax
81000c25:	89 c6                	mov    %eax,%esi
81000c27:	89 f2                	mov    %esi,%edx
81000c29:	8b 03                	mov    (%ebx),%eax
81000c2b:	83 ec 04             	sub    $0x4,%esp
81000c2e:	52                   	push   %edx
81000c2f:	ff 75 c4             	push   -0x3c(%ebp)
81000c32:	50                   	push   %eax
81000c33:	e8 88 0e 00 00       	call   81001ac0 <memmove>
81000c38:	83 c4 10             	add    $0x10,%esp
81000c3b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c3e:	29 f0                	sub    %esi,%eax
81000c40:	89 43 08             	mov    %eax,0x8(%ebx)
81000c43:	8b 03                	mov    (%ebx),%eax
81000c45:	89 f2                	mov    %esi,%edx
81000c47:	01 d0                	add    %edx,%eax
81000c49:	89 03                	mov    %eax,(%ebx)
81000c4b:	8b 43 08             	mov    0x8(%ebx),%eax
81000c4e:	85 c0                	test   %eax,%eax
81000c50:	75 58                	jne    81000caa <__sfvwrite_r+0x2ff>
81000c52:	83 ec 08             	sub    $0x8,%esp
81000c55:	53                   	push   %ebx
81000c56:	ff 75 08             	push   0x8(%ebp)
81000c59:	e8 0e 21 00 00       	call   81002d6c <_fflush_r>
81000c5e:	83 c4 10             	add    $0x10,%esp
81000c61:	85 c0                	test   %eax,%eax
81000c63:	74 45                	je     81000caa <__sfvwrite_r+0x2ff>
81000c65:	e9 c7 01 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000c6a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000c70:	77 04                	ja     81000c76 <__sfvwrite_r+0x2cb>
81000c72:	89 f8                	mov    %edi,%eax
81000c74:	eb 05                	jmp    81000c7b <__sfvwrite_r+0x2d0>
81000c76:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000c7b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000c7e:	99                   	cltd   
81000c7f:	f7 f9                	idiv   %ecx
81000c81:	89 c2                	mov    %eax,%edx
81000c83:	8b 43 14             	mov    0x14(%ebx),%eax
81000c86:	89 d6                	mov    %edx,%esi
81000c88:	0f af f0             	imul   %eax,%esi
81000c8b:	8b 53 24             	mov    0x24(%ebx),%edx
81000c8e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000c91:	56                   	push   %esi
81000c92:	ff 75 c4             	push   -0x3c(%ebp)
81000c95:	50                   	push   %eax
81000c96:	ff 75 08             	push   0x8(%ebp)
81000c99:	ff d2                	call   *%edx
81000c9b:	83 c4 10             	add    $0x10,%esp
81000c9e:	89 c6                	mov    %eax,%esi
81000ca0:	85 f6                	test   %esi,%esi
81000ca2:	0f 8e 85 01 00 00    	jle    81000e2d <__sfvwrite_r+0x482>
81000ca8:	eb 01                	jmp    81000cab <__sfvwrite_r+0x300>
81000caa:	90                   	nop
81000cab:	89 f0                	mov    %esi,%eax
81000cad:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000cb0:	89 f0                	mov    %esi,%eax
81000cb2:	29 c7                	sub    %eax,%edi
81000cb4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cb7:	8b 40 08             	mov    0x8(%eax),%eax
81000cba:	89 f2                	mov    %esi,%edx
81000cbc:	29 d0                	sub    %edx,%eax
81000cbe:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000cc1:	89 41 08             	mov    %eax,0x8(%ecx)
81000cc4:	8b 45 10             	mov    0x10(%ebp),%eax
81000cc7:	8b 40 08             	mov    0x8(%eax),%eax
81000cca:	85 c0                	test   %eax,%eax
81000ccc:	0f 85 d4 fd ff ff    	jne    81000aa6 <__sfvwrite_r+0xfb>
81000cd2:	e9 4c 01 00 00       	jmp    81000e23 <__sfvwrite_r+0x478>
81000cd7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cde:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000ce5:	eb 18                	jmp    81000cff <__sfvwrite_r+0x354>
81000ce7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000cee:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000cf1:	8b 08                	mov    (%eax),%ecx
81000cf3:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000cf6:	8b 78 04             	mov    0x4(%eax),%edi
81000cf9:	83 c0 08             	add    $0x8,%eax
81000cfc:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000cff:	85 ff                	test   %edi,%edi
81000d01:	74 e4                	je     81000ce7 <__sfvwrite_r+0x33c>
81000d03:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000d07:	75 32                	jne    81000d3b <__sfvwrite_r+0x390>
81000d09:	83 ec 04             	sub    $0x4,%esp
81000d0c:	57                   	push   %edi
81000d0d:	6a 0a                	push   $0xa
81000d0f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000d12:	56                   	push   %esi
81000d13:	e8 c8 0c 00 00       	call   810019e0 <memchr>
81000d18:	83 c4 10             	add    $0x10,%esp
81000d1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000d1e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000d22:	74 0a                	je     81000d2e <__sfvwrite_r+0x383>
81000d24:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000d27:	83 c0 01             	add    $0x1,%eax
81000d2a:	29 f0                	sub    %esi,%eax
81000d2c:	eb 03                	jmp    81000d31 <__sfvwrite_r+0x386>
81000d2e:	8d 47 01             	lea    0x1(%edi),%eax
81000d31:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000d34:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000d3b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000d3e:	39 c7                	cmp    %eax,%edi
81000d40:	0f 46 c7             	cmovbe %edi,%eax
81000d43:	89 c1                	mov    %eax,%ecx
81000d45:	8b 53 08             	mov    0x8(%ebx),%edx
81000d48:	8b 43 14             	mov    0x14(%ebx),%eax
81000d4b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000d4e:	8b 13                	mov    (%ebx),%edx
81000d50:	8b 43 10             	mov    0x10(%ebx),%eax
81000d53:	39 c2                	cmp    %eax,%edx
81000d55:	76 38                	jbe    81000d8f <__sfvwrite_r+0x3e4>
81000d57:	39 f1                	cmp    %esi,%ecx
81000d59:	7e 34                	jle    81000d8f <__sfvwrite_r+0x3e4>
81000d5b:	89 f2                	mov    %esi,%edx
81000d5d:	8b 03                	mov    (%ebx),%eax
81000d5f:	83 ec 04             	sub    $0x4,%esp
81000d62:	52                   	push   %edx
81000d63:	ff 75 c4             	push   -0x3c(%ebp)
81000d66:	50                   	push   %eax
81000d67:	e8 54 0d 00 00       	call   81001ac0 <memmove>
81000d6c:	83 c4 10             	add    $0x10,%esp
81000d6f:	8b 03                	mov    (%ebx),%eax
81000d71:	89 f2                	mov    %esi,%edx
81000d73:	01 d0                	add    %edx,%eax
81000d75:	89 03                	mov    %eax,(%ebx)
81000d77:	83 ec 08             	sub    $0x8,%esp
81000d7a:	53                   	push   %ebx
81000d7b:	ff 75 08             	push   0x8(%ebp)
81000d7e:	e8 e9 1f 00 00       	call   81002d6c <_fflush_r>
81000d83:	83 c4 10             	add    $0x10,%esp
81000d86:	85 c0                	test   %eax,%eax
81000d88:	74 4f                	je     81000dd9 <__sfvwrite_r+0x42e>
81000d8a:	e9 a2 00 00 00       	jmp    81000e31 <__sfvwrite_r+0x486>
81000d8f:	8b 73 14             	mov    0x14(%ebx),%esi
81000d92:	89 c8                	mov    %ecx,%eax
81000d94:	39 c6                	cmp    %eax,%esi
81000d96:	7f 1b                	jg     81000db3 <__sfvwrite_r+0x408>
81000d98:	8b 53 24             	mov    0x24(%ebx),%edx
81000d9b:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000d9e:	56                   	push   %esi
81000d9f:	ff 75 c4             	push   -0x3c(%ebp)
81000da2:	50                   	push   %eax
81000da3:	ff 75 08             	push   0x8(%ebp)
81000da6:	ff d2                	call   *%edx
81000da8:	83 c4 10             	add    $0x10,%esp
81000dab:	89 c6                	mov    %eax,%esi
81000dad:	85 f6                	test   %esi,%esi
81000daf:	7f 28                	jg     81000dd9 <__sfvwrite_r+0x42e>
81000db1:	eb 7e                	jmp    81000e31 <__sfvwrite_r+0x486>
81000db3:	89 ce                	mov    %ecx,%esi
81000db5:	89 f2                	mov    %esi,%edx
81000db7:	8b 03                	mov    (%ebx),%eax
81000db9:	83 ec 04             	sub    $0x4,%esp
81000dbc:	52                   	push   %edx
81000dbd:	ff 75 c4             	push   -0x3c(%ebp)
81000dc0:	50                   	push   %eax
81000dc1:	e8 fa 0c 00 00       	call   81001ac0 <memmove>
81000dc6:	83 c4 10             	add    $0x10,%esp
81000dc9:	8b 43 08             	mov    0x8(%ebx),%eax
81000dcc:	29 f0                	sub    %esi,%eax
81000dce:	89 43 08             	mov    %eax,0x8(%ebx)
81000dd1:	8b 03                	mov    (%ebx),%eax
81000dd3:	89 f2                	mov    %esi,%edx
81000dd5:	01 d0                	add    %edx,%eax
81000dd7:	89 03                	mov    %eax,(%ebx)
81000dd9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000ddc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000de0:	75 1a                	jne    81000dfc <__sfvwrite_r+0x451>
81000de2:	83 ec 08             	sub    $0x8,%esp
81000de5:	53                   	push   %ebx
81000de6:	ff 75 08             	push   0x8(%ebp)
81000de9:	e8 7e 1f 00 00       	call   81002d6c <_fflush_r>
81000dee:	83 c4 10             	add    $0x10,%esp
81000df1:	85 c0                	test   %eax,%eax
81000df3:	75 3b                	jne    81000e30 <__sfvwrite_r+0x485>
81000df5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000dfc:	89 f0                	mov    %esi,%eax
81000dfe:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000e01:	89 f0                	mov    %esi,%eax
81000e03:	29 c7                	sub    %eax,%edi
81000e05:	8b 45 10             	mov    0x10(%ebp),%eax
81000e08:	8b 40 08             	mov    0x8(%eax),%eax
81000e0b:	89 f2                	mov    %esi,%edx
81000e0d:	29 d0                	sub    %edx,%eax
81000e0f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000e12:	89 41 08             	mov    %eax,0x8(%ecx)
81000e15:	8b 45 10             	mov    0x10(%ebp),%eax
81000e18:	8b 40 08             	mov    0x8(%eax),%eax
81000e1b:	85 c0                	test   %eax,%eax
81000e1d:	0f 85 dc fe ff ff    	jne    81000cff <__sfvwrite_r+0x354>
81000e23:	b8 00 00 00 00       	mov    $0x0,%eax
81000e28:	eb 17                	jmp    81000e41 <__sfvwrite_r+0x496>
81000e2a:	90                   	nop
81000e2b:	eb 04                	jmp    81000e31 <__sfvwrite_r+0x486>
81000e2d:	90                   	nop
81000e2e:	eb 01                	jmp    81000e31 <__sfvwrite_r+0x486>
81000e30:	90                   	nop
81000e31:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e35:	83 c8 40             	or     $0x40,%eax
81000e38:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000e3c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000e41:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e44:	5b                   	pop    %ebx
81000e45:	5e                   	pop    %esi
81000e46:	5f                   	pop    %edi
81000e47:	5d                   	pop    %ebp
81000e48:	c3                   	ret    

81000e49 <_fwalk>:
81000e49:	55                   	push   %ebp
81000e4a:	89 e5                	mov    %esp,%ebp
81000e4c:	57                   	push   %edi
81000e4d:	56                   	push   %esi
81000e4e:	53                   	push   %ebx
81000e4f:	83 ec 1c             	sub    $0x1c,%esp
81000e52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e59:	8b 45 08             	mov    0x8(%ebp),%eax
81000e5c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000e62:	eb 3e                	jmp    81000ea2 <_fwalk+0x59>
81000e64:	8b 5e 08             	mov    0x8(%esi),%ebx
81000e67:	8b 7e 04             	mov    0x4(%esi),%edi
81000e6a:	eb 2d                	jmp    81000e99 <_fwalk+0x50>
81000e6c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e70:	66 85 c0             	test   %ax,%ax
81000e73:	74 21                	je     81000e96 <_fwalk+0x4d>
81000e75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000e79:	66 83 f8 01          	cmp    $0x1,%ax
81000e7d:	74 17                	je     81000e96 <_fwalk+0x4d>
81000e7f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000e83:	66 83 f8 ff          	cmp    $0xffff,%ax
81000e87:	74 0d                	je     81000e96 <_fwalk+0x4d>
81000e89:	83 ec 0c             	sub    $0xc,%esp
81000e8c:	53                   	push   %ebx
81000e8d:	ff 55 0c             	call   *0xc(%ebp)
81000e90:	83 c4 10             	add    $0x10,%esp
81000e93:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e96:	83 c3 68             	add    $0x68,%ebx
81000e99:	83 ef 01             	sub    $0x1,%edi
81000e9c:	85 ff                	test   %edi,%edi
81000e9e:	79 cc                	jns    81000e6c <_fwalk+0x23>
81000ea0:	8b 36                	mov    (%esi),%esi
81000ea2:	85 f6                	test   %esi,%esi
81000ea4:	75 be                	jne    81000e64 <_fwalk+0x1b>
81000ea6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000ea9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000eac:	5b                   	pop    %ebx
81000ead:	5e                   	pop    %esi
81000eae:	5f                   	pop    %edi
81000eaf:	5d                   	pop    %ebp
81000eb0:	c3                   	ret    

81000eb1 <_fwalk_reent>:
81000eb1:	55                   	push   %ebp
81000eb2:	89 e5                	mov    %esp,%ebp
81000eb4:	57                   	push   %edi
81000eb5:	56                   	push   %esi
81000eb6:	53                   	push   %ebx
81000eb7:	83 ec 1c             	sub    $0x1c,%esp
81000eba:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000ec1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ec4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000eca:	eb 41                	jmp    81000f0d <_fwalk_reent+0x5c>
81000ecc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ecf:	8b 7e 04             	mov    0x4(%esi),%edi
81000ed2:	eb 30                	jmp    81000f04 <_fwalk_reent+0x53>
81000ed4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ed8:	66 85 c0             	test   %ax,%ax
81000edb:	74 24                	je     81000f01 <_fwalk_reent+0x50>
81000edd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ee1:	66 83 f8 01          	cmp    $0x1,%ax
81000ee5:	74 1a                	je     81000f01 <_fwalk_reent+0x50>
81000ee7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000eeb:	66 83 f8 ff          	cmp    $0xffff,%ax
81000eef:	74 10                	je     81000f01 <_fwalk_reent+0x50>
81000ef1:	83 ec 08             	sub    $0x8,%esp
81000ef4:	53                   	push   %ebx
81000ef5:	ff 75 08             	push   0x8(%ebp)
81000ef8:	ff 55 0c             	call   *0xc(%ebp)
81000efb:	83 c4 10             	add    $0x10,%esp
81000efe:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000f01:	83 c3 68             	add    $0x68,%ebx
81000f04:	83 ef 01             	sub    $0x1,%edi
81000f07:	85 ff                	test   %edi,%edi
81000f09:	79 c9                	jns    81000ed4 <_fwalk_reent+0x23>
81000f0b:	8b 36                	mov    (%esi),%esi
81000f0d:	85 f6                	test   %esi,%esi
81000f0f:	75 bb                	jne    81000ecc <_fwalk_reent+0x1b>
81000f11:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000f14:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000f17:	5b                   	pop    %ebx
81000f18:	5e                   	pop    %esi
81000f19:	5f                   	pop    %edi
81000f1a:	5d                   	pop    %ebp
81000f1b:	c3                   	ret    

81000f1c <malloc_extend_top>:
81000f1c:	55                   	push   %ebp
81000f1d:	89 e5                	mov    %esp,%ebp
81000f1f:	83 ec 38             	sub    $0x38,%esp
81000f22:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000f29:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000f2e:	8b 40 08             	mov    0x8(%eax),%eax
81000f31:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000f34:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000f37:	8b 40 04             	mov    0x4(%eax),%eax
81000f3a:	83 e0 fc             	and    $0xfffffffc,%eax
81000f3d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000f40:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000f43:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000f46:	01 d0                	add    %edx,%eax
81000f48:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000f4b:	8b 15 00 42 00 81    	mov    0x81004200,%edx
81000f51:	8b 45 0c             	mov    0xc(%ebp),%eax
81000f54:	01 d0                	add    %edx,%eax
81000f56:	83 c0 10             	add    $0x10,%eax
81000f59:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f5c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000f63:	a1 cc 3f 00 81       	mov    0x81003fcc,%eax
81000f68:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f6b:	74 15                	je     81000f82 <malloc_extend_top+0x66>
81000f6d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000f70:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f73:	01 d0                	add    %edx,%eax
81000f75:	8d 50 ff             	lea    -0x1(%eax),%edx
81000f78:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f7b:	f7 d8                	neg    %eax
81000f7d:	21 d0                	and    %edx,%eax
81000f7f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000f82:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f85:	83 ec 08             	sub    $0x8,%esp
81000f88:	50                   	push   %eax
81000f89:	ff 75 08             	push   0x8(%ebp)
81000f8c:	e8 58 17 00 00       	call   810026e9 <_sbrk_r>
81000f91:	83 c4 10             	add    $0x10,%esp
81000f94:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000f97:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000f9b:	0f 84 0b 02 00 00    	je     810011ac <malloc_extend_top+0x290>
81000fa1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fa4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fa7:	73 0e                	jae    81000fb7 <malloc_extend_top+0x9b>
81000fa9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000fae:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000fb1:	0f 85 f5 01 00 00    	jne    810011ac <malloc_extend_top+0x290>
81000fb7:	a1 20 42 00 81       	mov    0x81004220,%eax
81000fbc:	89 c2                	mov    %eax,%edx
81000fbe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fc1:	01 d0                	add    %edx,%eax
81000fc3:	a3 20 42 00 81       	mov    %eax,0x81004220
81000fc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fcb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000fce:	75 30                	jne    81001000 <malloc_extend_top+0xe4>
81000fd0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000fd3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000fd6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000fd9:	21 d0                	and    %edx,%eax
81000fdb:	85 c0                	test   %eax,%eax
81000fdd:	75 21                	jne    81001000 <malloc_extend_top+0xe4>
81000fdf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000fe2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000fe5:	01 d0                	add    %edx,%eax
81000fe7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000fea:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81000fef:	8b 40 08             	mov    0x8(%eax),%eax
81000ff2:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000ff5:	83 ca 01             	or     $0x1,%edx
81000ff8:	89 50 04             	mov    %edx,0x4(%eax)
81000ffb:	e9 76 01 00 00       	jmp    81001176 <malloc_extend_top+0x25a>
81001000:	a1 cc 3f 00 81       	mov    0x81003fcc,%eax
81001005:	83 f8 ff             	cmp    $0xffffffff,%eax
81001008:	75 0a                	jne    81001014 <malloc_extend_top+0xf8>
8100100a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100100d:	a3 cc 3f 00 81       	mov    %eax,0x81003fcc
81001012:	eb 13                	jmp    81001027 <malloc_extend_top+0x10b>
81001014:	8b 15 20 42 00 81    	mov    0x81004220,%edx
8100101a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100101d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81001020:	01 d0                	add    %edx,%eax
81001022:	a3 20 42 00 81       	mov    %eax,0x81004220
81001027:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100102a:	83 c0 08             	add    $0x8,%eax
8100102d:	83 e0 07             	and    $0x7,%eax
81001030:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001033:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81001037:	74 13                	je     8100104c <malloc_extend_top+0x130>
81001039:	b8 08 00 00 00       	mov    $0x8,%eax
8100103e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81001041:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001044:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001047:	01 45 f4             	add    %eax,-0xc(%ebp)
8100104a:	eb 07                	jmp    81001053 <malloc_extend_top+0x137>
8100104c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001053:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001056:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001059:	01 d0                	add    %edx,%eax
8100105b:	89 c2                	mov    %eax,%edx
8100105d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001060:	83 e8 01             	sub    $0x1,%eax
81001063:	21 c2                	and    %eax,%edx
81001065:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001068:	29 d0                	sub    %edx,%eax
8100106a:	01 45 f0             	add    %eax,-0x10(%ebp)
8100106d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001070:	83 e8 01             	sub    $0x1,%eax
81001073:	21 45 f0             	and    %eax,-0x10(%ebp)
81001076:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001079:	83 ec 08             	sub    $0x8,%esp
8100107c:	50                   	push   %eax
8100107d:	ff 75 08             	push   0x8(%ebp)
81001080:	e8 64 16 00 00       	call   810026e9 <_sbrk_r>
81001085:	83 c4 10             	add    $0x10,%esp
81001088:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100108b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100108f:	75 28                	jne    810010b9 <malloc_extend_top+0x19d>
81001091:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81001098:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100109f:	8b 55 f4             	mov    -0xc(%ebp),%edx
810010a2:	8b 45 e8             	mov    -0x18(%ebp),%eax
810010a5:	01 d0                	add    %edx,%eax
810010a7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810010aa:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810010ae:	74 09                	je     810010b9 <malloc_extend_top+0x19d>
810010b0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810010b3:	83 e8 08             	sub    $0x8,%eax
810010b6:	01 45 ec             	add    %eax,-0x14(%ebp)
810010b9:	a1 20 42 00 81       	mov    0x81004220,%eax
810010be:	89 c2                	mov    %eax,%edx
810010c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010c3:	01 d0                	add    %edx,%eax
810010c5:	a3 20 42 00 81       	mov    %eax,0x81004220
810010ca:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
810010cf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010d2:	89 42 08             	mov    %eax,0x8(%edx)
810010d5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810010d8:	2b 45 f4             	sub    -0xc(%ebp),%eax
810010db:	89 c2                	mov    %eax,%edx
810010dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810010e0:	01 d0                	add    %edx,%eax
810010e2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010e5:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810010ea:	8b 40 08             	mov    0x8(%eax),%eax
810010ed:	8b 55 d0             	mov    -0x30(%ebp),%edx
810010f0:	83 ca 01             	or     $0x1,%edx
810010f3:	89 50 04             	mov    %edx,0x4(%eax)
810010f6:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810010fb:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810010fe:	74 76                	je     81001176 <malloc_extend_top+0x25a>
81001100:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001104:	77 14                	ja     8100111a <malloc_extend_top+0x1fe>
81001106:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100110b:	8b 40 08             	mov    0x8(%eax),%eax
8100110e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001115:	e9 93 00 00 00       	jmp    810011ad <malloc_extend_top+0x291>
8100111a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100111d:	83 e8 0c             	sub    $0xc,%eax
81001120:	83 e0 f8             	and    $0xfffffff8,%eax
81001123:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001126:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001129:	8b 40 04             	mov    0x4(%eax),%eax
8100112c:	83 e0 01             	and    $0x1,%eax
8100112f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001132:	89 c2                	mov    %eax,%edx
81001134:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001137:	89 50 04             	mov    %edx,0x4(%eax)
8100113a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100113d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001140:	01 d0                	add    %edx,%eax
81001142:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001149:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100114c:	8d 50 04             	lea    0x4(%eax),%edx
8100114f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001152:	01 d0                	add    %edx,%eax
81001154:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100115b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100115f:	76 15                	jbe    81001176 <malloc_extend_top+0x25a>
81001161:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001164:	83 c0 08             	add    $0x8,%eax
81001167:	83 ec 08             	sub    $0x8,%esp
8100116a:	50                   	push   %eax
8100116b:	ff 75 08             	push   0x8(%ebp)
8100116e:	e8 8a 1c 00 00       	call   81002dfd <_free_r>
81001173:	83 c4 10             	add    $0x10,%esp
81001176:	a1 20 42 00 81       	mov    0x81004220,%eax
8100117b:	89 c2                	mov    %eax,%edx
8100117d:	a1 04 42 00 81       	mov    0x81004204,%eax
81001182:	39 c2                	cmp    %eax,%edx
81001184:	76 0a                	jbe    81001190 <malloc_extend_top+0x274>
81001186:	a1 20 42 00 81       	mov    0x81004220,%eax
8100118b:	a3 04 42 00 81       	mov    %eax,0x81004204
81001190:	a1 20 42 00 81       	mov    0x81004220,%eax
81001195:	89 c2                	mov    %eax,%edx
81001197:	a1 08 42 00 81       	mov    0x81004208,%eax
8100119c:	39 c2                	cmp    %eax,%edx
8100119e:	76 0d                	jbe    810011ad <malloc_extend_top+0x291>
810011a0:	a1 20 42 00 81       	mov    0x81004220,%eax
810011a5:	a3 08 42 00 81       	mov    %eax,0x81004208
810011aa:	eb 01                	jmp    810011ad <malloc_extend_top+0x291>
810011ac:	90                   	nop
810011ad:	c9                   	leave  
810011ae:	c3                   	ret    

810011af <_malloc_r>:
810011af:	55                   	push   %ebp
810011b0:	89 e5                	mov    %esp,%ebp
810011b2:	53                   	push   %ebx
810011b3:	83 ec 44             	sub    $0x44,%esp
810011b6:	8b 45 0c             	mov    0xc(%ebp),%eax
810011b9:	83 c0 0b             	add    $0xb,%eax
810011bc:	83 f8 16             	cmp    $0x16,%eax
810011bf:	76 0b                	jbe    810011cc <_malloc_r+0x1d>
810011c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810011c4:	83 c0 0b             	add    $0xb,%eax
810011c7:	83 e0 f8             	and    $0xfffffff8,%eax
810011ca:	eb 05                	jmp    810011d1 <_malloc_r+0x22>
810011cc:	b8 10 00 00 00       	mov    $0x10,%eax
810011d1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810011d4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011d7:	85 c0                	test   %eax,%eax
810011d9:	78 08                	js     810011e3 <_malloc_r+0x34>
810011db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011de:	3b 45 0c             	cmp    0xc(%ebp),%eax
810011e1:	73 13                	jae    810011f6 <_malloc_r+0x47>
810011e3:	8b 45 08             	mov    0x8(%ebp),%eax
810011e6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810011ec:	b8 00 00 00 00       	mov    $0x0,%eax
810011f1:	e9 d6 07 00 00       	jmp    810019cc <_malloc_r+0x81d>
810011f6:	83 ec 0c             	sub    $0xc,%esp
810011f9:	ff 75 08             	push   0x8(%ebp)
810011fc:	e8 d4 09 00 00       	call   81001bd5 <__malloc_lock>
81001201:	83 c4 10             	add    $0x10,%esp
81001204:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100120b:	0f 87 b0 00 00 00    	ja     810012c1 <_malloc_r+0x112>
81001211:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001214:	c1 e8 03             	shr    $0x3,%eax
81001217:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100121a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100121d:	83 c0 01             	add    $0x1,%eax
81001220:	01 c0                	add    %eax,%eax
81001222:	c1 e0 02             	shl    $0x2,%eax
81001225:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100122a:	83 e8 08             	sub    $0x8,%eax
8100122d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001230:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001233:	8b 40 0c             	mov    0xc(%eax),%eax
81001236:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001239:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100123c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100123f:	75 0d                	jne    8100124e <_malloc_r+0x9f>
81001241:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001245:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001248:	8b 40 0c             	mov    0xc(%eax),%eax
8100124b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100124e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001251:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001254:	74 62                	je     810012b8 <_malloc_r+0x109>
81001256:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001259:	8b 40 04             	mov    0x4(%eax),%eax
8100125c:	83 e0 fc             	and    $0xfffffffc,%eax
8100125f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001262:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001265:	8b 40 0c             	mov    0xc(%eax),%eax
81001268:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100126b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100126e:	8b 40 08             	mov    0x8(%eax),%eax
81001271:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001274:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001277:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100127a:	89 50 0c             	mov    %edx,0xc(%eax)
8100127d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001280:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001283:	89 50 08             	mov    %edx,0x8(%eax)
81001286:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001289:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100128c:	01 d0                	add    %edx,%eax
8100128e:	8b 50 04             	mov    0x4(%eax),%edx
81001291:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001294:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001297:	01 c8                	add    %ecx,%eax
81001299:	83 ca 01             	or     $0x1,%edx
8100129c:	89 50 04             	mov    %edx,0x4(%eax)
8100129f:	83 ec 0c             	sub    $0xc,%esp
810012a2:	ff 75 08             	push   0x8(%ebp)
810012a5:	e8 31 09 00 00       	call   81001bdb <__malloc_unlock>
810012aa:	83 c4 10             	add    $0x10,%esp
810012ad:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b0:	83 c0 08             	add    $0x8,%eax
810012b3:	e9 14 07 00 00       	jmp    810019cc <_malloc_r+0x81d>
810012b8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810012bc:	e9 46 01 00 00       	jmp    81001407 <_malloc_r+0x258>
810012c1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012c4:	c1 e8 09             	shr    $0x9,%eax
810012c7:	85 c0                	test   %eax,%eax
810012c9:	75 08                	jne    810012d3 <_malloc_r+0x124>
810012cb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012ce:	c1 e8 03             	shr    $0x3,%eax
810012d1:	eb 77                	jmp    8100134a <_malloc_r+0x19b>
810012d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012d6:	c1 e8 09             	shr    $0x9,%eax
810012d9:	83 f8 04             	cmp    $0x4,%eax
810012dc:	77 0b                	ja     810012e9 <_malloc_r+0x13a>
810012de:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012e1:	c1 e8 06             	shr    $0x6,%eax
810012e4:	83 c0 38             	add    $0x38,%eax
810012e7:	eb 61                	jmp    8100134a <_malloc_r+0x19b>
810012e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012ec:	c1 e8 09             	shr    $0x9,%eax
810012ef:	83 f8 14             	cmp    $0x14,%eax
810012f2:	77 0b                	ja     810012ff <_malloc_r+0x150>
810012f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810012f7:	c1 e8 09             	shr    $0x9,%eax
810012fa:	83 c0 5b             	add    $0x5b,%eax
810012fd:	eb 4b                	jmp    8100134a <_malloc_r+0x19b>
810012ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001302:	c1 e8 09             	shr    $0x9,%eax
81001305:	83 f8 54             	cmp    $0x54,%eax
81001308:	77 0b                	ja     81001315 <_malloc_r+0x166>
8100130a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100130d:	c1 e8 0c             	shr    $0xc,%eax
81001310:	83 c0 6e             	add    $0x6e,%eax
81001313:	eb 35                	jmp    8100134a <_malloc_r+0x19b>
81001315:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001318:	c1 e8 09             	shr    $0x9,%eax
8100131b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001320:	77 0b                	ja     8100132d <_malloc_r+0x17e>
81001322:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001325:	c1 e8 0f             	shr    $0xf,%eax
81001328:	83 c0 77             	add    $0x77,%eax
8100132b:	eb 1d                	jmp    8100134a <_malloc_r+0x19b>
8100132d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001330:	c1 e8 09             	shr    $0x9,%eax
81001333:	3d 54 05 00 00       	cmp    $0x554,%eax
81001338:	77 0b                	ja     81001345 <_malloc_r+0x196>
8100133a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100133d:	c1 e8 12             	shr    $0x12,%eax
81001340:	83 c0 7c             	add    $0x7c,%eax
81001343:	eb 05                	jmp    8100134a <_malloc_r+0x19b>
81001345:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100134a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100134d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001350:	83 c0 01             	add    $0x1,%eax
81001353:	01 c0                	add    %eax,%eax
81001355:	c1 e0 02             	shl    $0x2,%eax
81001358:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100135d:	83 e8 08             	sub    $0x8,%eax
81001360:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001363:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001366:	8b 40 0c             	mov    0xc(%eax),%eax
81001369:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100136c:	e9 86 00 00 00       	jmp    810013f7 <_malloc_r+0x248>
81001371:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001374:	8b 40 04             	mov    0x4(%eax),%eax
81001377:	83 e0 fc             	and    $0xfffffffc,%eax
8100137a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100137d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001380:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001383:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001386:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100138a:	7e 06                	jle    81001392 <_malloc_r+0x1e3>
8100138c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001390:	eb 71                	jmp    81001403 <_malloc_r+0x254>
81001392:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001396:	78 56                	js     810013ee <_malloc_r+0x23f>
81001398:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100139b:	8b 40 0c             	mov    0xc(%eax),%eax
8100139e:	89 45 d8             	mov    %eax,-0x28(%ebp)
810013a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013a4:	8b 40 08             	mov    0x8(%eax),%eax
810013a7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810013aa:	8b 45 dc             	mov    -0x24(%ebp),%eax
810013ad:	8b 55 d8             	mov    -0x28(%ebp),%edx
810013b0:	89 50 0c             	mov    %edx,0xc(%eax)
810013b3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810013b6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810013b9:	89 50 08             	mov    %edx,0x8(%eax)
810013bc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013bf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013c2:	01 d0                	add    %edx,%eax
810013c4:	8b 50 04             	mov    0x4(%eax),%edx
810013c7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013ca:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013cd:	01 c8                	add    %ecx,%eax
810013cf:	83 ca 01             	or     $0x1,%edx
810013d2:	89 50 04             	mov    %edx,0x4(%eax)
810013d5:	83 ec 0c             	sub    $0xc,%esp
810013d8:	ff 75 08             	push   0x8(%ebp)
810013db:	e8 fb 07 00 00       	call   81001bdb <__malloc_unlock>
810013e0:	83 c4 10             	add    $0x10,%esp
810013e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013e6:	83 c0 08             	add    $0x8,%eax
810013e9:	e9 de 05 00 00       	jmp    810019cc <_malloc_r+0x81d>
810013ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013f1:	8b 40 0c             	mov    0xc(%eax),%eax
810013f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013f7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013fa:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810013fd:	0f 85 6e ff ff ff    	jne    81001371 <_malloc_r+0x1c2>
81001403:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001407:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
8100140c:	8b 40 08             	mov    0x8(%eax),%eax
8100140f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001412:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81001417:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100141a:	0f 84 9c 02 00 00    	je     810016bc <_malloc_r+0x50d>
81001420:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001423:	8b 40 04             	mov    0x4(%eax),%eax
81001426:	83 e0 fc             	and    $0xfffffffc,%eax
81001429:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100142c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100142f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001432:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001435:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001439:	7e 7a                	jle    810014b5 <_malloc_r+0x306>
8100143b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100143e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001441:	01 d0                	add    %edx,%eax
81001443:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001446:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001449:	83 c8 01             	or     $0x1,%eax
8100144c:	89 c2                	mov    %eax,%edx
8100144e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001451:	89 50 04             	mov    %edx,0x4(%eax)
81001454:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81001459:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100145c:	89 50 0c             	mov    %edx,0xc(%eax)
8100145f:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81001464:	8b 40 0c             	mov    0xc(%eax),%eax
81001467:	89 42 08             	mov    %eax,0x8(%edx)
8100146a:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
8100146f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001472:	89 50 0c             	mov    %edx,0xc(%eax)
81001475:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001478:	8b 50 0c             	mov    0xc(%eax),%edx
8100147b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100147e:	89 50 08             	mov    %edx,0x8(%eax)
81001481:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001484:	83 c8 01             	or     $0x1,%eax
81001487:	89 c2                	mov    %eax,%edx
81001489:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100148c:	89 50 04             	mov    %edx,0x4(%eax)
8100148f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001492:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001495:	01 c2                	add    %eax,%edx
81001497:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100149a:	89 02                	mov    %eax,(%edx)
8100149c:	83 ec 0c             	sub    $0xc,%esp
8100149f:	ff 75 08             	push   0x8(%ebp)
810014a2:	e8 34 07 00 00       	call   81001bdb <__malloc_unlock>
810014a7:	83 c4 10             	add    $0x10,%esp
810014aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014ad:	83 c0 08             	add    $0x8,%eax
810014b0:	e9 17 05 00 00       	jmp    810019cc <_malloc_r+0x81d>
810014b5:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
810014ba:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810014bf:	89 50 0c             	mov    %edx,0xc(%eax)
810014c2:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810014c7:	8b 40 0c             	mov    0xc(%eax),%eax
810014ca:	89 42 08             	mov    %eax,0x8(%edx)
810014cd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810014d1:	78 32                	js     81001505 <_malloc_r+0x356>
810014d3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810014d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d9:	01 d0                	add    %edx,%eax
810014db:	8b 50 04             	mov    0x4(%eax),%edx
810014de:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810014e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e4:	01 c8                	add    %ecx,%eax
810014e6:	83 ca 01             	or     $0x1,%edx
810014e9:	89 50 04             	mov    %edx,0x4(%eax)
810014ec:	83 ec 0c             	sub    $0xc,%esp
810014ef:	ff 75 08             	push   0x8(%ebp)
810014f2:	e8 e4 06 00 00       	call   81001bdb <__malloc_unlock>
810014f7:	83 c4 10             	add    $0x10,%esp
810014fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810014fd:	83 c0 08             	add    $0x8,%eax
81001500:	e9 c7 04 00 00       	jmp    810019cc <_malloc_r+0x81d>
81001505:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100150c:	77 7f                	ja     8100158d <_malloc_r+0x3de>
8100150e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001511:	c1 e8 03             	shr    $0x3,%eax
81001514:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001517:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100151c:	8b 58 04             	mov    0x4(%eax),%ebx
8100151f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001522:	8d 50 03             	lea    0x3(%eax),%edx
81001525:	85 c0                	test   %eax,%eax
81001527:	0f 48 c2             	cmovs  %edx,%eax
8100152a:	c1 f8 02             	sar    $0x2,%eax
8100152d:	ba 01 00 00 00       	mov    $0x1,%edx
81001532:	89 c1                	mov    %eax,%ecx
81001534:	d3 e2                	shl    %cl,%edx
81001536:	89 d0                	mov    %edx,%eax
81001538:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100153d:	09 d8                	or     %ebx,%eax
8100153f:	89 42 04             	mov    %eax,0x4(%edx)
81001542:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001545:	83 c0 01             	add    $0x1,%eax
81001548:	01 c0                	add    %eax,%eax
8100154a:	c1 e0 02             	shl    $0x2,%eax
8100154d:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001552:	83 e8 08             	sub    $0x8,%eax
81001555:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001558:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100155b:	8b 40 08             	mov    0x8(%eax),%eax
8100155e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001561:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001564:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001567:	89 50 0c             	mov    %edx,0xc(%eax)
8100156a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100156d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001570:	89 50 08             	mov    %edx,0x8(%eax)
81001573:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001576:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001579:	89 50 08             	mov    %edx,0x8(%eax)
8100157c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100157f:	8b 50 08             	mov    0x8(%eax),%edx
81001582:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001585:	89 50 0c             	mov    %edx,0xc(%eax)
81001588:	e9 2f 01 00 00       	jmp    810016bc <_malloc_r+0x50d>
8100158d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001590:	c1 e8 09             	shr    $0x9,%eax
81001593:	85 c0                	test   %eax,%eax
81001595:	75 08                	jne    8100159f <_malloc_r+0x3f0>
81001597:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100159a:	c1 e8 03             	shr    $0x3,%eax
8100159d:	eb 77                	jmp    81001616 <_malloc_r+0x467>
8100159f:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015a2:	c1 e8 09             	shr    $0x9,%eax
810015a5:	83 f8 04             	cmp    $0x4,%eax
810015a8:	77 0b                	ja     810015b5 <_malloc_r+0x406>
810015aa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ad:	c1 e8 06             	shr    $0x6,%eax
810015b0:	83 c0 38             	add    $0x38,%eax
810015b3:	eb 61                	jmp    81001616 <_malloc_r+0x467>
810015b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015b8:	c1 e8 09             	shr    $0x9,%eax
810015bb:	83 f8 14             	cmp    $0x14,%eax
810015be:	77 0b                	ja     810015cb <_malloc_r+0x41c>
810015c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015c3:	c1 e8 09             	shr    $0x9,%eax
810015c6:	83 c0 5b             	add    $0x5b,%eax
810015c9:	eb 4b                	jmp    81001616 <_malloc_r+0x467>
810015cb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015ce:	c1 e8 09             	shr    $0x9,%eax
810015d1:	83 f8 54             	cmp    $0x54,%eax
810015d4:	77 0b                	ja     810015e1 <_malloc_r+0x432>
810015d6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015d9:	c1 e8 0c             	shr    $0xc,%eax
810015dc:	83 c0 6e             	add    $0x6e,%eax
810015df:	eb 35                	jmp    81001616 <_malloc_r+0x467>
810015e1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015e4:	c1 e8 09             	shr    $0x9,%eax
810015e7:	3d 54 01 00 00       	cmp    $0x154,%eax
810015ec:	77 0b                	ja     810015f9 <_malloc_r+0x44a>
810015ee:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015f1:	c1 e8 0f             	shr    $0xf,%eax
810015f4:	83 c0 77             	add    $0x77,%eax
810015f7:	eb 1d                	jmp    81001616 <_malloc_r+0x467>
810015f9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810015fc:	c1 e8 09             	shr    $0x9,%eax
810015ff:	3d 54 05 00 00       	cmp    $0x554,%eax
81001604:	77 0b                	ja     81001611 <_malloc_r+0x462>
81001606:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001609:	c1 e8 12             	shr    $0x12,%eax
8100160c:	83 c0 7c             	add    $0x7c,%eax
8100160f:	eb 05                	jmp    81001616 <_malloc_r+0x467>
81001611:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001616:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001619:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100161c:	83 c0 01             	add    $0x1,%eax
8100161f:	01 c0                	add    %eax,%eax
81001621:	c1 e0 02             	shl    $0x2,%eax
81001624:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001629:	83 e8 08             	sub    $0x8,%eax
8100162c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100162f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001632:	8b 40 08             	mov    0x8(%eax),%eax
81001635:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001638:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100163b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100163e:	75 36                	jne    81001676 <_malloc_r+0x4c7>
81001640:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001645:	8b 58 04             	mov    0x4(%eax),%ebx
81001648:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100164b:	8d 50 03             	lea    0x3(%eax),%edx
8100164e:	85 c0                	test   %eax,%eax
81001650:	0f 48 c2             	cmovs  %edx,%eax
81001653:	c1 f8 02             	sar    $0x2,%eax
81001656:	ba 01 00 00 00       	mov    $0x1,%edx
8100165b:	89 c1                	mov    %eax,%ecx
8100165d:	d3 e2                	shl    %cl,%edx
8100165f:	89 d0                	mov    %edx,%eax
81001661:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001666:	09 d8                	or     %ebx,%eax
81001668:	89 42 04             	mov    %eax,0x4(%edx)
8100166b:	eb 28                	jmp    81001695 <_malloc_r+0x4e6>
8100166d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001670:	8b 40 08             	mov    0x8(%eax),%eax
81001673:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001676:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001679:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100167c:	74 0e                	je     8100168c <_malloc_r+0x4dd>
8100167e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001681:	8b 40 04             	mov    0x4(%eax),%eax
81001684:	83 e0 fc             	and    $0xfffffffc,%eax
81001687:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100168a:	72 e1                	jb     8100166d <_malloc_r+0x4be>
8100168c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100168f:	8b 40 0c             	mov    0xc(%eax),%eax
81001692:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001695:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001698:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100169b:	89 50 0c             	mov    %edx,0xc(%eax)
8100169e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016a4:	89 50 08             	mov    %edx,0x8(%eax)
810016a7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016aa:	8b 55 f4             	mov    -0xc(%ebp),%edx
810016ad:	89 50 08             	mov    %edx,0x8(%eax)
810016b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016b3:	8b 50 08             	mov    0x8(%eax),%edx
810016b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016b9:	89 50 0c             	mov    %edx,0xc(%eax)
810016bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016bf:	8d 50 03             	lea    0x3(%eax),%edx
810016c2:	85 c0                	test   %eax,%eax
810016c4:	0f 48 c2             	cmovs  %edx,%eax
810016c7:	c1 f8 02             	sar    $0x2,%eax
810016ca:	ba 01 00 00 00       	mov    $0x1,%edx
810016cf:	89 c1                	mov    %eax,%ecx
810016d1:	d3 e2                	shl    %cl,%edx
810016d3:	89 d0                	mov    %edx,%eax
810016d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810016d8:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810016dd:	8b 40 04             	mov    0x4(%eax),%eax
810016e0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810016e3:	0f 87 13 02 00 00    	ja     810018fc <_malloc_r+0x74d>
810016e9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810016ee:	8b 40 04             	mov    0x4(%eax),%eax
810016f1:	23 45 e4             	and    -0x1c(%ebp),%eax
810016f4:	85 c0                	test   %eax,%eax
810016f6:	75 27                	jne    8100171f <_malloc_r+0x570>
810016f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810016fb:	83 e0 fc             	and    $0xfffffffc,%eax
810016fe:	83 c0 04             	add    $0x4,%eax
81001701:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001704:	d1 65 e4             	shll   -0x1c(%ebp)
81001707:	eb 07                	jmp    81001710 <_malloc_r+0x561>
81001709:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100170d:	d1 65 e4             	shll   -0x1c(%ebp)
81001710:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001715:	8b 40 04             	mov    0x4(%eax),%eax
81001718:	23 45 e4             	and    -0x1c(%ebp),%eax
8100171b:	85 c0                	test   %eax,%eax
8100171d:	74 ea                	je     81001709 <_malloc_r+0x55a>
8100171f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001722:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001725:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001728:	83 c0 01             	add    $0x1,%eax
8100172b:	01 c0                	add    %eax,%eax
8100172d:	c1 e0 02             	shl    $0x2,%eax
81001730:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81001735:	83 e8 08             	sub    $0x8,%eax
81001738:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100173b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100173e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001741:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001744:	8b 40 0c             	mov    0xc(%eax),%eax
81001747:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100174a:	e9 22 01 00 00       	jmp    81001871 <_malloc_r+0x6c2>
8100174f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001752:	8b 40 04             	mov    0x4(%eax),%eax
81001755:	83 e0 fc             	and    $0xfffffffc,%eax
81001758:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100175b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100175e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001761:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001764:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001768:	0f 8e 9e 00 00 00    	jle    8100180c <_malloc_r+0x65d>
8100176e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001771:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001774:	01 d0                	add    %edx,%eax
81001776:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001779:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100177c:	83 c8 01             	or     $0x1,%eax
8100177f:	89 c2                	mov    %eax,%edx
81001781:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001784:	89 50 04             	mov    %edx,0x4(%eax)
81001787:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100178a:	8b 40 0c             	mov    0xc(%eax),%eax
8100178d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001790:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001793:	8b 40 08             	mov    0x8(%eax),%eax
81001796:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001799:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100179c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100179f:	89 50 0c             	mov    %edx,0xc(%eax)
810017a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810017a5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810017a8:	89 50 08             	mov    %edx,0x8(%eax)
810017ab:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
810017b0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810017b3:	89 50 0c             	mov    %edx,0xc(%eax)
810017b6:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810017bb:	8b 40 0c             	mov    0xc(%eax),%eax
810017be:	89 42 08             	mov    %eax,0x8(%edx)
810017c1:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
810017c6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017c9:	89 50 0c             	mov    %edx,0xc(%eax)
810017cc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017cf:	8b 50 0c             	mov    0xc(%eax),%edx
810017d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017d5:	89 50 08             	mov    %edx,0x8(%eax)
810017d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017db:	83 c8 01             	or     $0x1,%eax
810017de:	89 c2                	mov    %eax,%edx
810017e0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017e3:	89 50 04             	mov    %edx,0x4(%eax)
810017e6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810017e9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810017ec:	01 c2                	add    %eax,%edx
810017ee:	8b 45 e8             	mov    -0x18(%ebp),%eax
810017f1:	89 02                	mov    %eax,(%edx)
810017f3:	83 ec 0c             	sub    $0xc,%esp
810017f6:	ff 75 08             	push   0x8(%ebp)
810017f9:	e8 dd 03 00 00       	call   81001bdb <__malloc_unlock>
810017fe:	83 c4 10             	add    $0x10,%esp
81001801:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001804:	83 c0 08             	add    $0x8,%eax
81001807:	e9 c0 01 00 00       	jmp    810019cc <_malloc_r+0x81d>
8100180c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001810:	78 56                	js     81001868 <_malloc_r+0x6b9>
81001812:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001815:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001818:	01 d0                	add    %edx,%eax
8100181a:	8b 50 04             	mov    0x4(%eax),%edx
8100181d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001820:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001823:	01 c8                	add    %ecx,%eax
81001825:	83 ca 01             	or     $0x1,%edx
81001828:	89 50 04             	mov    %edx,0x4(%eax)
8100182b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182e:	8b 40 0c             	mov    0xc(%eax),%eax
81001831:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001834:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001837:	8b 40 08             	mov    0x8(%eax),%eax
8100183a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100183d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001840:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001843:	89 50 0c             	mov    %edx,0xc(%eax)
81001846:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001849:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100184c:	89 50 08             	mov    %edx,0x8(%eax)
8100184f:	83 ec 0c             	sub    $0xc,%esp
81001852:	ff 75 08             	push   0x8(%ebp)
81001855:	e8 81 03 00 00       	call   81001bdb <__malloc_unlock>
8100185a:	83 c4 10             	add    $0x10,%esp
8100185d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001860:	83 c0 08             	add    $0x8,%eax
81001863:	e9 64 01 00 00       	jmp    810019cc <_malloc_r+0x81d>
81001868:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100186b:	8b 40 0c             	mov    0xc(%eax),%eax
8100186e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001871:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001874:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001877:	0f 85 d2 fe ff ff    	jne    8100174f <_malloc_r+0x5a0>
8100187d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001881:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001885:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001888:	83 e0 03             	and    $0x3,%eax
8100188b:	85 c0                	test   %eax,%eax
8100188d:	0f 85 ae fe ff ff    	jne    81001741 <_malloc_r+0x592>
81001893:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001896:	83 e0 03             	and    $0x3,%eax
81001899:	85 c0                	test   %eax,%eax
8100189b:	75 19                	jne    810018b6 <_malloc_r+0x707>
8100189d:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018a2:	8b 48 04             	mov    0x4(%eax),%ecx
810018a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810018a8:	f7 d0                	not    %eax
810018aa:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
810018af:	21 c8                	and    %ecx,%eax
810018b1:	89 42 04             	mov    %eax,0x4(%edx)
810018b4:	eb 13                	jmp    810018c9 <_malloc_r+0x71a>
810018b6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810018ba:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810018be:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810018c1:	8b 40 08             	mov    0x8(%eax),%eax
810018c4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810018c7:	74 ca                	je     81001893 <_malloc_r+0x6e4>
810018c9:	d1 65 e4             	shll   -0x1c(%ebp)
810018cc:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018d1:	8b 40 04             	mov    0x4(%eax),%eax
810018d4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810018d7:	77 23                	ja     810018fc <_malloc_r+0x74d>
810018d9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810018dd:	74 1d                	je     810018fc <_malloc_r+0x74d>
810018df:	eb 07                	jmp    810018e8 <_malloc_r+0x739>
810018e1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810018e5:	d1 65 e4             	shll   -0x1c(%ebp)
810018e8:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810018ed:	8b 40 04             	mov    0x4(%eax),%eax
810018f0:	23 45 e4             	and    -0x1c(%ebp),%eax
810018f3:	85 c0                	test   %eax,%eax
810018f5:	74 ea                	je     810018e1 <_malloc_r+0x732>
810018f7:	e9 23 fe ff ff       	jmp    8100171f <_malloc_r+0x570>
810018fc:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001901:	8b 40 08             	mov    0x8(%eax),%eax
81001904:	8b 40 04             	mov    0x4(%eax),%eax
81001907:	83 e0 fc             	and    $0xfffffffc,%eax
8100190a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100190d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001910:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001915:	8b 40 08             	mov    0x8(%eax),%eax
81001918:	8b 40 04             	mov    0x4(%eax),%eax
8100191b:	83 e0 fc             	and    $0xfffffffc,%eax
8100191e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001921:	77 06                	ja     81001929 <_malloc_r+0x77a>
81001923:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001927:	7f 53                	jg     8100197c <_malloc_r+0x7cd>
81001929:	83 ec 08             	sub    $0x8,%esp
8100192c:	ff 75 d0             	push   -0x30(%ebp)
8100192f:	ff 75 08             	push   0x8(%ebp)
81001932:	e8 e5 f5 ff ff       	call   81000f1c <malloc_extend_top>
81001937:	83 c4 10             	add    $0x10,%esp
8100193a:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100193f:	8b 40 08             	mov    0x8(%eax),%eax
81001942:	8b 40 04             	mov    0x4(%eax),%eax
81001945:	83 e0 fc             	and    $0xfffffffc,%eax
81001948:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100194b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100194e:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001953:	8b 40 08             	mov    0x8(%eax),%eax
81001956:	8b 40 04             	mov    0x4(%eax),%eax
81001959:	83 e0 fc             	and    $0xfffffffc,%eax
8100195c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100195f:	77 06                	ja     81001967 <_malloc_r+0x7b8>
81001961:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001965:	7f 15                	jg     8100197c <_malloc_r+0x7cd>
81001967:	83 ec 0c             	sub    $0xc,%esp
8100196a:	ff 75 08             	push   0x8(%ebp)
8100196d:	e8 69 02 00 00       	call   81001bdb <__malloc_unlock>
81001972:	83 c4 10             	add    $0x10,%esp
81001975:	b8 00 00 00 00       	mov    $0x0,%eax
8100197a:	eb 50                	jmp    810019cc <_malloc_r+0x81d>
8100197c:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001981:	8b 40 08             	mov    0x8(%eax),%eax
81001984:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001987:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100198a:	83 c8 01             	or     $0x1,%eax
8100198d:	89 c2                	mov    %eax,%edx
8100198f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001992:	89 50 04             	mov    %edx,0x4(%eax)
81001995:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100199a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100199d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810019a0:	01 c8                	add    %ecx,%eax
810019a2:	89 42 08             	mov    %eax,0x8(%edx)
810019a5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810019a8:	83 c8 01             	or     $0x1,%eax
810019ab:	89 c2                	mov    %eax,%edx
810019ad:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810019b2:	8b 40 08             	mov    0x8(%eax),%eax
810019b5:	89 50 04             	mov    %edx,0x4(%eax)
810019b8:	83 ec 0c             	sub    $0xc,%esp
810019bb:	ff 75 08             	push   0x8(%ebp)
810019be:	e8 18 02 00 00       	call   81001bdb <__malloc_unlock>
810019c3:	83 c4 10             	add    $0x10,%esp
810019c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810019c9:	83 c0 08             	add    $0x8,%eax
810019cc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810019cf:	c9                   	leave  
810019d0:	c3                   	ret    
810019d1:	66 90                	xchg   %ax,%ax
810019d3:	66 90                	xchg   %ax,%ax
810019d5:	66 90                	xchg   %ax,%ax
810019d7:	66 90                	xchg   %ax,%ax
810019d9:	66 90                	xchg   %ax,%ax
810019db:	66 90                	xchg   %ax,%ax
810019dd:	66 90                	xchg   %ax,%ax
810019df:	90                   	nop

810019e0 <memchr>:
810019e0:	55                   	push   %ebp
810019e1:	89 e5                	mov    %esp,%ebp
810019e3:	57                   	push   %edi
810019e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810019e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019eb:	8b 7d 08             	mov    0x8(%ebp),%edi
810019ee:	31 d2                	xor    %edx,%edx
810019f0:	85 c9                	test   %ecx,%ecx
810019f2:	74 79                	je     81001a6d <L20>
810019f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810019fa:	74 28                	je     81001a24 <L5>
810019fc:	3a 07                	cmp    (%edi),%al
810019fe:	74 6a                	je     81001a6a <L15>
81001a00:	47                   	inc    %edi
81001a01:	49                   	dec    %ecx
81001a02:	74 69                	je     81001a6d <L20>
81001a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a0a:	74 18                	je     81001a24 <L5>
81001a0c:	3a 07                	cmp    (%edi),%al
81001a0e:	74 5a                	je     81001a6a <L15>
81001a10:	47                   	inc    %edi
81001a11:	49                   	dec    %ecx
81001a12:	74 59                	je     81001a6d <L20>
81001a14:	f7 c7 03 00 00 00    	test   $0x3,%edi
81001a1a:	74 08                	je     81001a24 <L5>
81001a1c:	3a 07                	cmp    (%edi),%al
81001a1e:	74 4a                	je     81001a6a <L15>
81001a20:	47                   	inc    %edi
81001a21:	49                   	dec    %ecx
81001a22:	74 49                	je     81001a6d <L20>

81001a24 <L5>:
81001a24:	88 c4                	mov    %al,%ah
81001a26:	89 c2                	mov    %eax,%edx
81001a28:	c1 e2 10             	shl    $0x10,%edx
81001a2b:	09 d0                	or     %edx,%eax
81001a2d:	53                   	push   %ebx
81001a2e:	66 90                	xchg   %ax,%ax

81001a30 <L8>:
81001a30:	83 e9 04             	sub    $0x4,%ecx
81001a33:	72 1c                	jb     81001a51 <L9>
81001a35:	8b 17                	mov    (%edi),%edx
81001a37:	83 c7 04             	add    $0x4,%edi
81001a3a:	31 c2                	xor    %eax,%edx
81001a3c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001a42:	f7 d2                	not    %edx
81001a44:	21 d3                	and    %edx,%ebx
81001a46:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81001a4c:	74 e2                	je     81001a30 <L8>
81001a4e:	83 ef 04             	sub    $0x4,%edi

81001a51 <L9>:
81001a51:	5b                   	pop    %ebx
81001a52:	31 d2                	xor    %edx,%edx
81001a54:	83 c1 04             	add    $0x4,%ecx
81001a57:	74 14                	je     81001a6d <L20>
81001a59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001a60 <L10>:
81001a60:	3a 07                	cmp    (%edi),%al
81001a62:	74 06                	je     81001a6a <L15>
81001a64:	47                   	inc    %edi
81001a65:	49                   	dec    %ecx
81001a66:	75 f8                	jne    81001a60 <L10>
81001a68:	31 ff                	xor    %edi,%edi

81001a6a <L15>:
81001a6a:	4a                   	dec    %edx
81001a6b:	21 fa                	and    %edi,%edx

81001a6d <L20>:
81001a6d:	89 d0                	mov    %edx,%eax
81001a6f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001a72:	5f                   	pop    %edi
81001a73:	c9                   	leave  
81001a74:	c3                   	ret    
81001a75:	66 90                	xchg   %ax,%ax
81001a77:	90                   	nop

81001a78 <memcpy>:
81001a78:	55                   	push   %ebp
81001a79:	89 e5                	mov    %esp,%ebp
81001a7b:	56                   	push   %esi
81001a7c:	57                   	push   %edi
81001a7d:	53                   	push   %ebx
81001a7e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a81:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a84:	8b 75 0c             	mov    0xc(%ebp),%esi
81001a87:	fc                   	cld    
81001a88:	83 f9 08             	cmp    $0x8,%ecx
81001a8b:	76 26                	jbe    81001ab3 <memcpy+0x3b>
81001a8d:	89 fa                	mov    %edi,%edx
81001a8f:	89 cb                	mov    %ecx,%ebx
81001a91:	83 e2 03             	and    $0x3,%edx
81001a94:	74 10                	je     81001aa6 <memcpy+0x2e>
81001a96:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a9b:	29 d1                	sub    %edx,%ecx
81001a9d:	83 e1 03             	and    $0x3,%ecx
81001aa0:	29 cb                	sub    %ecx,%ebx
81001aa2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001aa4:	89 d9                	mov    %ebx,%ecx
81001aa6:	c1 e9 02             	shr    $0x2,%ecx
81001aa9:	8d 76 00             	lea    0x0(%esi),%esi
81001aac:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001aae:	89 d9                	mov    %ebx,%ecx
81001ab0:	83 e1 03             	and    $0x3,%ecx
81001ab3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001ab5:	8b 45 08             	mov    0x8(%ebp),%eax
81001ab8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001abb:	5b                   	pop    %ebx
81001abc:	5f                   	pop    %edi
81001abd:	5e                   	pop    %esi
81001abe:	c9                   	leave  
81001abf:	c3                   	ret    

81001ac0 <memmove>:
81001ac0:	55                   	push   %ebp
81001ac1:	89 e5                	mov    %esp,%ebp
81001ac3:	56                   	push   %esi
81001ac4:	57                   	push   %edi
81001ac5:	53                   	push   %ebx
81001ac6:	8b 7d 08             	mov    0x8(%ebp),%edi
81001ac9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001acc:	8b 75 0c             	mov    0xc(%ebp),%esi
81001acf:	fc                   	cld    
81001ad0:	39 fe                	cmp    %edi,%esi
81001ad2:	73 43                	jae    81001b17 <memmove+0x57>
81001ad4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81001ad8:	39 df                	cmp    %ebx,%edi
81001ada:	77 3b                	ja     81001b17 <memmove+0x57>
81001adc:	01 ce                	add    %ecx,%esi
81001ade:	01 cf                	add    %ecx,%edi
81001ae0:	fd                   	std    
81001ae1:	83 f9 08             	cmp    $0x8,%ecx
81001ae4:	76 2b                	jbe    81001b11 <memmove+0x51>
81001ae6:	89 fa                	mov    %edi,%edx
81001ae8:	89 cb                	mov    %ecx,%ebx
81001aea:	83 e2 03             	and    $0x3,%edx
81001aed:	74 0c                	je     81001afb <memmove+0x3b>
81001aef:	89 d1                	mov    %edx,%ecx
81001af1:	4e                   	dec    %esi
81001af2:	4f                   	dec    %edi
81001af3:	29 cb                	sub    %ecx,%ebx
81001af5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001af7:	89 d9                	mov    %ebx,%ecx
81001af9:	46                   	inc    %esi
81001afa:	47                   	inc    %edi
81001afb:	c1 e9 02             	shr    $0x2,%ecx
81001afe:	83 ee 04             	sub    $0x4,%esi
81001b01:	83 ef 04             	sub    $0x4,%edi
81001b04:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b06:	83 c6 04             	add    $0x4,%esi
81001b09:	83 c7 04             	add    $0x4,%edi
81001b0c:	89 d9                	mov    %ebx,%ecx
81001b0e:	83 e1 03             	and    $0x3,%ecx
81001b11:	4e                   	dec    %esi
81001b12:	4f                   	dec    %edi
81001b13:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b15:	eb 2a                	jmp    81001b41 <memmove+0x81>
81001b17:	83 f9 08             	cmp    $0x8,%ecx
81001b1a:	76 23                	jbe    81001b3f <memmove+0x7f>
81001b1c:	89 fa                	mov    %edi,%edx
81001b1e:	89 cb                	mov    %ecx,%ebx
81001b20:	83 e2 03             	and    $0x3,%edx
81001b23:	74 10                	je     81001b35 <memmove+0x75>
81001b25:	b9 04 00 00 00       	mov    $0x4,%ecx
81001b2a:	29 d1                	sub    %edx,%ecx
81001b2c:	83 e1 03             	and    $0x3,%ecx
81001b2f:	29 cb                	sub    %ecx,%ebx
81001b31:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b33:	89 d9                	mov    %ebx,%ecx
81001b35:	c1 e9 02             	shr    $0x2,%ecx
81001b38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001b3a:	89 d9                	mov    %ebx,%ecx
81001b3c:	83 e1 03             	and    $0x3,%ecx
81001b3f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001b41:	8b 45 08             	mov    0x8(%ebp),%eax
81001b44:	fc                   	cld    
81001b45:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001b48:	5b                   	pop    %ebx
81001b49:	5f                   	pop    %edi
81001b4a:	5e                   	pop    %esi
81001b4b:	c9                   	leave  
81001b4c:	c3                   	ret    

81001b4d <memset>:
81001b4d:	55                   	push   %ebp
81001b4e:	89 e5                	mov    %esp,%ebp
81001b50:	57                   	push   %edi
81001b51:	8b 7d 08             	mov    0x8(%ebp),%edi
81001b54:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001b58:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001b5b:	fc                   	cld    
81001b5c:	83 f9 10             	cmp    $0x10,%ecx
81001b5f:	76 69                	jbe    81001bca <memset+0x7d>
81001b61:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b67:	74 4c                	je     81001bb5 <memset+0x68>
81001b69:	88 07                	mov    %al,(%edi)
81001b6b:	47                   	inc    %edi
81001b6c:	49                   	dec    %ecx
81001b6d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b73:	74 40                	je     81001bb5 <memset+0x68>
81001b75:	88 07                	mov    %al,(%edi)
81001b77:	47                   	inc    %edi
81001b78:	49                   	dec    %ecx
81001b79:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b7f:	74 34                	je     81001bb5 <memset+0x68>
81001b81:	88 07                	mov    %al,(%edi)
81001b83:	47                   	inc    %edi
81001b84:	49                   	dec    %ecx
81001b85:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b8b:	74 28                	je     81001bb5 <memset+0x68>
81001b8d:	88 07                	mov    %al,(%edi)
81001b8f:	47                   	inc    %edi
81001b90:	49                   	dec    %ecx
81001b91:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001b97:	74 1c                	je     81001bb5 <memset+0x68>
81001b99:	88 07                	mov    %al,(%edi)
81001b9b:	47                   	inc    %edi
81001b9c:	49                   	dec    %ecx
81001b9d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ba3:	74 10                	je     81001bb5 <memset+0x68>
81001ba5:	88 07                	mov    %al,(%edi)
81001ba7:	47                   	inc    %edi
81001ba8:	49                   	dec    %ecx
81001ba9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001baf:	74 04                	je     81001bb5 <memset+0x68>
81001bb1:	88 07                	mov    %al,(%edi)
81001bb3:	47                   	inc    %edi
81001bb4:	49                   	dec    %ecx
81001bb5:	88 c4                	mov    %al,%ah
81001bb7:	89 c2                	mov    %eax,%edx
81001bb9:	c1 e2 10             	shl    $0x10,%edx
81001bbc:	09 d0                	or     %edx,%eax
81001bbe:	89 ca                	mov    %ecx,%edx
81001bc0:	c1 e9 02             	shr    $0x2,%ecx
81001bc3:	83 e2 03             	and    $0x3,%edx
81001bc6:	f3 ab                	rep stos %eax,%es:(%edi)
81001bc8:	89 d1                	mov    %edx,%ecx
81001bca:	f3 aa                	rep stos %al,%es:(%edi)
81001bcc:	8b 45 08             	mov    0x8(%ebp),%eax
81001bcf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001bd2:	5f                   	pop    %edi
81001bd3:	c9                   	leave  
81001bd4:	c3                   	ret    

81001bd5 <__malloc_lock>:
81001bd5:	55                   	push   %ebp
81001bd6:	89 e5                	mov    %esp,%ebp
81001bd8:	90                   	nop
81001bd9:	5d                   	pop    %ebp
81001bda:	c3                   	ret    

81001bdb <__malloc_unlock>:
81001bdb:	55                   	push   %ebp
81001bdc:	89 e5                	mov    %esp,%ebp
81001bde:	90                   	nop
81001bdf:	5d                   	pop    %ebp
81001be0:	c3                   	ret    

81001be1 <_realloc_r>:
81001be1:	55                   	push   %ebp
81001be2:	89 e5                	mov    %esp,%ebp
81001be4:	83 ec 78             	sub    $0x78,%esp
81001be7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001beb:	75 16                	jne    81001c03 <_realloc_r+0x22>
81001bed:	83 ec 08             	sub    $0x8,%esp
81001bf0:	ff 75 10             	push   0x10(%ebp)
81001bf3:	ff 75 08             	push   0x8(%ebp)
81001bf6:	e8 b4 f5 ff ff       	call   810011af <_malloc_r>
81001bfb:	83 c4 10             	add    $0x10,%esp
81001bfe:	e9 b6 08 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001c03:	83 ec 0c             	sub    $0xc,%esp
81001c06:	ff 75 08             	push   0x8(%ebp)
81001c09:	e8 c7 ff ff ff       	call   81001bd5 <__malloc_lock>
81001c0e:	83 c4 10             	add    $0x10,%esp
81001c11:	8b 45 0c             	mov    0xc(%ebp),%eax
81001c14:	83 e8 08             	sub    $0x8,%eax
81001c17:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001c1a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c1d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001c20:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c23:	8b 40 04             	mov    0x4(%eax),%eax
81001c26:	83 e0 fc             	and    $0xfffffffc,%eax
81001c29:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001c2c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c2f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001c32:	8b 45 10             	mov    0x10(%ebp),%eax
81001c35:	83 c0 0b             	add    $0xb,%eax
81001c38:	83 f8 16             	cmp    $0x16,%eax
81001c3b:	76 0b                	jbe    81001c48 <_realloc_r+0x67>
81001c3d:	8b 45 10             	mov    0x10(%ebp),%eax
81001c40:	83 c0 0b             	add    $0xb,%eax
81001c43:	83 e0 f8             	and    $0xfffffff8,%eax
81001c46:	eb 05                	jmp    81001c4d <_realloc_r+0x6c>
81001c48:	b8 10 00 00 00       	mov    $0x10,%eax
81001c4d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001c50:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c53:	85 c0                	test   %eax,%eax
81001c55:	78 08                	js     81001c5f <_realloc_r+0x7e>
81001c57:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c5a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001c5d:	73 13                	jae    81001c72 <_realloc_r+0x91>
81001c5f:	8b 45 08             	mov    0x8(%ebp),%eax
81001c62:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001c68:	b8 00 00 00 00       	mov    $0x0,%eax
81001c6d:	e9 47 08 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001c72:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001c75:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c78:	39 c2                	cmp    %eax,%edx
81001c7a:	0f 8d 8b 07 00 00    	jge    8100240b <_realloc_r+0x82a>
81001c80:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001c83:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001c86:	01 d0                	add    %edx,%eax
81001c88:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001c8b:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001c90:	8b 40 08             	mov    0x8(%eax),%eax
81001c93:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001c96:	74 1e                	je     81001cb6 <_realloc_r+0xd5>
81001c98:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c9b:	8b 40 04             	mov    0x4(%eax),%eax
81001c9e:	83 e0 fe             	and    $0xfffffffe,%eax
81001ca1:	89 c2                	mov    %eax,%edx
81001ca3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ca6:	01 d0                	add    %edx,%eax
81001ca8:	8b 40 04             	mov    0x4(%eax),%eax
81001cab:	83 e0 01             	and    $0x1,%eax
81001cae:	85 c0                	test   %eax,%eax
81001cb0:	0f 85 ca 00 00 00    	jne    81001d80 <_realloc_r+0x19f>
81001cb6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001cb9:	8b 40 04             	mov    0x4(%eax),%eax
81001cbc:	83 e0 fc             	and    $0xfffffffc,%eax
81001cbf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001cc2:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001cc7:	8b 40 08             	mov    0x8(%eax),%eax
81001cca:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001ccd:	75 71                	jne    81001d40 <_realloc_r+0x15f>
81001ccf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001cd2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cd5:	01 d0                	add    %edx,%eax
81001cd7:	89 c2                	mov    %eax,%edx
81001cd9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cdc:	83 c0 10             	add    $0x10,%eax
81001cdf:	39 c2                	cmp    %eax,%edx
81001ce1:	0f 8c a9 00 00 00    	jl     81001d90 <_realloc_r+0x1af>
81001ce7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001cea:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ced:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001cf2:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001cf5:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cf8:	01 c8                	add    %ecx,%eax
81001cfa:	89 42 08             	mov    %eax,0x8(%edx)
81001cfd:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d00:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001d03:	89 c2                	mov    %eax,%edx
81001d05:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001d0a:	8b 40 08             	mov    0x8(%eax),%eax
81001d0d:	83 ca 01             	or     $0x1,%edx
81001d10:	89 50 04             	mov    %edx,0x4(%eax)
81001d13:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d16:	8b 40 04             	mov    0x4(%eax),%eax
81001d19:	83 e0 01             	and    $0x1,%eax
81001d1c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001d1f:	89 c2                	mov    %eax,%edx
81001d21:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d24:	89 50 04             	mov    %edx,0x4(%eax)
81001d27:	83 ec 0c             	sub    $0xc,%esp
81001d2a:	ff 75 08             	push   0x8(%ebp)
81001d2d:	e8 a9 fe ff ff       	call   81001bdb <__malloc_unlock>
81001d32:	83 c4 10             	add    $0x10,%esp
81001d35:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d38:	83 c0 08             	add    $0x8,%eax
81001d3b:	e9 79 07 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001d40:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001d43:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001d46:	01 d0                	add    %edx,%eax
81001d48:	89 c2                	mov    %eax,%edx
81001d4a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001d4d:	39 c2                	cmp    %eax,%edx
81001d4f:	7c 3f                	jl     81001d90 <_realloc_r+0x1af>
81001d51:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d54:	8b 40 0c             	mov    0xc(%eax),%eax
81001d57:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001d5d:	8b 40 08             	mov    0x8(%eax),%eax
81001d60:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001d63:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001d66:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001d69:	89 50 0c             	mov    %edx,0xc(%eax)
81001d6c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001d6f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001d72:	89 50 08             	mov    %edx,0x8(%eax)
81001d75:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d78:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d7b:	e9 8c 06 00 00       	jmp    8100240c <_realloc_r+0x82b>
81001d80:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001d87:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001d8e:	eb 01                	jmp    81001d91 <_realloc_r+0x1b0>
81001d90:	90                   	nop
81001d91:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001d94:	8b 40 04             	mov    0x4(%eax),%eax
81001d97:	83 e0 01             	and    $0x1,%eax
81001d9a:	85 c0                	test   %eax,%eax
81001d9c:	0f 85 d6 04 00 00    	jne    81002278 <_realloc_r+0x697>
81001da2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001da5:	8b 00                	mov    (%eax),%eax
81001da7:	f7 d8                	neg    %eax
81001da9:	89 c2                	mov    %eax,%edx
81001dab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001dae:	01 d0                	add    %edx,%eax
81001db0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001db3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001db6:	8b 40 04             	mov    0x4(%eax),%eax
81001db9:	83 e0 fc             	and    $0xfffffffc,%eax
81001dbc:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001dbf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001dc3:	0f 84 4a 03 00 00    	je     81002113 <_realloc_r+0x532>
81001dc9:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001dce:	8b 40 08             	mov    0x8(%eax),%eax
81001dd1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001dd4:	0f 85 b0 01 00 00    	jne    81001f8a <_realloc_r+0x3a9>
81001dda:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ddd:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001de0:	01 c2                	add    %eax,%edx
81001de2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001de5:	01 d0                	add    %edx,%eax
81001de7:	89 c2                	mov    %eax,%edx
81001de9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001dec:	83 c0 10             	add    $0x10,%eax
81001def:	39 c2                	cmp    %eax,%edx
81001df1:	0f 8c 1c 03 00 00    	jl     81002113 <_realloc_r+0x532>
81001df7:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001dfa:	8b 40 0c             	mov    0xc(%eax),%eax
81001dfd:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001e00:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e03:	8b 40 08             	mov    0x8(%eax),%eax
81001e06:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001e09:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001e0c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001e0f:	89 50 0c             	mov    %edx,0xc(%eax)
81001e12:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001e15:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001e18:	89 50 08             	mov    %edx,0x8(%eax)
81001e1b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001e1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001e21:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001e24:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001e27:	01 d0                	add    %edx,%eax
81001e29:	01 45 f0             	add    %eax,-0x10(%ebp)
81001e2c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e2f:	83 c0 08             	add    $0x8,%eax
81001e32:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001e35:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001e38:	83 e8 04             	sub    $0x4,%eax
81001e3b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001e3e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001e42:	0f 87 de 00 00 00    	ja     81001f26 <_realloc_r+0x345>
81001e48:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e4b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e4e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001e51:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001e54:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001e58:	0f 86 90 00 00 00    	jbe    81001eee <_realloc_r+0x30d>
81001e5e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e61:	8d 42 04             	lea    0x4(%edx),%eax
81001e64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e67:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e6a:	8d 48 04             	lea    0x4(%eax),%ecx
81001e6d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e70:	8b 12                	mov    (%edx),%edx
81001e72:	89 10                	mov    %edx,(%eax)
81001e74:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e77:	8d 42 04             	lea    0x4(%edx),%eax
81001e7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e7d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e80:	8d 48 04             	lea    0x4(%eax),%ecx
81001e83:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e86:	8b 12                	mov    (%edx),%edx
81001e88:	89 10                	mov    %edx,(%eax)
81001e8a:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001e8e:	76 5e                	jbe    81001eee <_realloc_r+0x30d>
81001e90:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e93:	8d 42 04             	lea    0x4(%edx),%eax
81001e96:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e99:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e9c:	8d 48 04             	lea    0x4(%eax),%ecx
81001e9f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ea2:	8b 12                	mov    (%edx),%edx
81001ea4:	89 10                	mov    %edx,(%eax)
81001ea6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ea9:	8d 42 04             	lea    0x4(%edx),%eax
81001eac:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001eaf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001eb2:	8d 48 04             	lea    0x4(%eax),%ecx
81001eb5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eb8:	8b 12                	mov    (%edx),%edx
81001eba:	89 10                	mov    %edx,(%eax)
81001ebc:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001ec0:	76 2c                	jbe    81001eee <_realloc_r+0x30d>
81001ec2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ec5:	8d 42 04             	lea    0x4(%edx),%eax
81001ec8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ecb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ece:	8d 48 04             	lea    0x4(%eax),%ecx
81001ed1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001ed4:	8b 12                	mov    (%edx),%edx
81001ed6:	89 10                	mov    %edx,(%eax)
81001ed8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001edb:	8d 42 04             	lea    0x4(%edx),%eax
81001ede:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ee1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ee4:	8d 48 04             	lea    0x4(%eax),%ecx
81001ee7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001eea:	8b 12                	mov    (%edx),%edx
81001eec:	89 10                	mov    %edx,(%eax)
81001eee:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001ef1:	8d 42 04             	lea    0x4(%edx),%eax
81001ef4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001efa:	8d 48 04             	lea    0x4(%eax),%ecx
81001efd:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f00:	8b 12                	mov    (%edx),%edx
81001f02:	89 10                	mov    %edx,(%eax)
81001f04:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001f07:	8d 42 04             	lea    0x4(%edx),%eax
81001f0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001f0d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f10:	8d 48 04             	lea    0x4(%eax),%ecx
81001f13:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001f16:	8b 12                	mov    (%edx),%edx
81001f18:	89 10                	mov    %edx,(%eax)
81001f1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001f1d:	8b 10                	mov    (%eax),%edx
81001f1f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f22:	89 10                	mov    %edx,(%eax)
81001f24:	eb 14                	jmp    81001f3a <_realloc_r+0x359>
81001f26:	83 ec 04             	sub    $0x4,%esp
81001f29:	ff 75 a0             	push   -0x60(%ebp)
81001f2c:	ff 75 0c             	push   0xc(%ebp)
81001f2f:	ff 75 a8             	push   -0x58(%ebp)
81001f32:	e8 89 fb ff ff       	call   81001ac0 <memmove>
81001f37:	83 c4 10             	add    $0x10,%esp
81001f3a:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81001f3f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001f42:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f45:	01 c8                	add    %ecx,%eax
81001f47:	89 42 08             	mov    %eax,0x8(%edx)
81001f4a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f4d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001f50:	89 c2                	mov    %eax,%edx
81001f52:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81001f57:	8b 40 08             	mov    0x8(%eax),%eax
81001f5a:	83 ca 01             	or     $0x1,%edx
81001f5d:	89 50 04             	mov    %edx,0x4(%eax)
81001f60:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f63:	8b 40 04             	mov    0x4(%eax),%eax
81001f66:	83 e0 01             	and    $0x1,%eax
81001f69:	0b 45 bc             	or     -0x44(%ebp),%eax
81001f6c:	89 c2                	mov    %eax,%edx
81001f6e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f71:	89 50 04             	mov    %edx,0x4(%eax)
81001f74:	83 ec 0c             	sub    $0xc,%esp
81001f77:	ff 75 08             	push   0x8(%ebp)
81001f7a:	e8 5c fc ff ff       	call   81001bdb <__malloc_unlock>
81001f7f:	83 c4 10             	add    $0x10,%esp
81001f82:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f85:	e9 2f 05 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
81001f8a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f8d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f90:	01 c2                	add    %eax,%edx
81001f92:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f95:	01 d0                	add    %edx,%eax
81001f97:	89 c2                	mov    %eax,%edx
81001f99:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001f9c:	39 c2                	cmp    %eax,%edx
81001f9e:	0f 8c 6f 01 00 00    	jl     81002113 <_realloc_r+0x532>
81001fa4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fa7:	8b 40 0c             	mov    0xc(%eax),%eax
81001faa:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fad:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fb0:	8b 40 08             	mov    0x8(%eax),%eax
81001fb3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fb6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fb9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fbc:	89 50 0c             	mov    %edx,0xc(%eax)
81001fbf:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fc2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fc5:	89 50 08             	mov    %edx,0x8(%eax)
81001fc8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fcb:	8b 40 0c             	mov    0xc(%eax),%eax
81001fce:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001fd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fd4:	8b 40 08             	mov    0x8(%eax),%eax
81001fd7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001fda:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001fdd:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001fe0:	89 50 0c             	mov    %edx,0xc(%eax)
81001fe3:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001fe6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001fe9:	89 50 08             	mov    %edx,0x8(%eax)
81001fec:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001fef:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ff2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ff5:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001ff8:	01 d0                	add    %edx,%eax
81001ffa:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ffd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002000:	83 c0 08             	add    $0x8,%eax
81002003:	89 45 a8             	mov    %eax,-0x58(%ebp)
81002006:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002009:	83 e8 04             	sub    $0x4,%eax
8100200c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
8100200f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81002013:	0f 87 e1 00 00 00    	ja     810020fa <_realloc_r+0x519>
81002019:	8b 45 0c             	mov    0xc(%ebp),%eax
8100201c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100201f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002022:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002025:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81002029:	0f 86 90 00 00 00    	jbe    810020bf <_realloc_r+0x4de>
8100202f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002032:	8d 42 04             	lea    0x4(%edx),%eax
81002035:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002038:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100203b:	8d 48 04             	lea    0x4(%eax),%ecx
8100203e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002041:	8b 12                	mov    (%edx),%edx
81002043:	89 10                	mov    %edx,(%eax)
81002045:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002048:	8d 42 04             	lea    0x4(%edx),%eax
8100204b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100204e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002051:	8d 48 04             	lea    0x4(%eax),%ecx
81002054:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002057:	8b 12                	mov    (%edx),%edx
81002059:	89 10                	mov    %edx,(%eax)
8100205b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
8100205f:	76 5e                	jbe    810020bf <_realloc_r+0x4de>
81002061:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002064:	8d 42 04             	lea    0x4(%edx),%eax
81002067:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100206a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100206d:	8d 48 04             	lea    0x4(%eax),%ecx
81002070:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002073:	8b 12                	mov    (%edx),%edx
81002075:	89 10                	mov    %edx,(%eax)
81002077:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100207a:	8d 42 04             	lea    0x4(%edx),%eax
8100207d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002080:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002083:	8d 48 04             	lea    0x4(%eax),%ecx
81002086:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81002089:	8b 12                	mov    (%edx),%edx
8100208b:	89 10                	mov    %edx,(%eax)
8100208d:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81002091:	76 2c                	jbe    810020bf <_realloc_r+0x4de>
81002093:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002096:	8d 42 04             	lea    0x4(%edx),%eax
81002099:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100209c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100209f:	8d 48 04             	lea    0x4(%eax),%ecx
810020a2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020a5:	8b 12                	mov    (%edx),%edx
810020a7:	89 10                	mov    %edx,(%eax)
810020a9:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020ac:	8d 42 04             	lea    0x4(%edx),%eax
810020af:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020b5:	8d 48 04             	lea    0x4(%eax),%ecx
810020b8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020bb:	8b 12                	mov    (%edx),%edx
810020bd:	89 10                	mov    %edx,(%eax)
810020bf:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020c2:	8d 42 04             	lea    0x4(%edx),%eax
810020c5:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020c8:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020cb:	8d 48 04             	lea    0x4(%eax),%ecx
810020ce:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020d1:	8b 12                	mov    (%edx),%edx
810020d3:	89 10                	mov    %edx,(%eax)
810020d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810020d8:	8d 42 04             	lea    0x4(%edx),%eax
810020db:	89 45 dc             	mov    %eax,-0x24(%ebp)
810020de:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020e1:	8d 48 04             	lea    0x4(%eax),%ecx
810020e4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
810020e7:	8b 12                	mov    (%edx),%edx
810020e9:	89 10                	mov    %edx,(%eax)
810020eb:	8b 45 dc             	mov    -0x24(%ebp),%eax
810020ee:	8b 10                	mov    (%eax),%edx
810020f0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810020f3:	89 10                	mov    %edx,(%eax)
810020f5:	e9 12 03 00 00       	jmp    8100240c <_realloc_r+0x82b>
810020fa:	83 ec 04             	sub    $0x4,%esp
810020fd:	ff 75 a4             	push   -0x5c(%ebp)
81002100:	ff 75 0c             	push   0xc(%ebp)
81002103:	ff 75 a8             	push   -0x58(%ebp)
81002106:	e8 b5 f9 ff ff       	call   81001ac0 <memmove>
8100210b:	83 c4 10             	add    $0x10,%esp
8100210e:	e9 f9 02 00 00       	jmp    8100240c <_realloc_r+0x82b>
81002113:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002117:	0f 84 5b 01 00 00    	je     81002278 <_realloc_r+0x697>
8100211d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002120:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002123:	01 d0                	add    %edx,%eax
81002125:	89 c2                	mov    %eax,%edx
81002127:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100212a:	39 c2                	cmp    %eax,%edx
8100212c:	0f 8c 46 01 00 00    	jl     81002278 <_realloc_r+0x697>
81002132:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002135:	8b 40 0c             	mov    0xc(%eax),%eax
81002138:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100213b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100213e:	8b 40 08             	mov    0x8(%eax),%eax
81002141:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002144:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002147:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100214a:	89 50 0c             	mov    %edx,0xc(%eax)
8100214d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002150:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002153:	89 50 08             	mov    %edx,0x8(%eax)
81002156:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002159:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100215c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100215f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002162:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002165:	83 c0 08             	add    $0x8,%eax
81002168:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100216b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100216e:	83 e8 04             	sub    $0x4,%eax
81002171:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002174:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002178:	0f 87 e1 00 00 00    	ja     8100225f <_realloc_r+0x67e>
8100217e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002181:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002184:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002187:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100218a:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
8100218e:	0f 86 90 00 00 00    	jbe    81002224 <_realloc_r+0x643>
81002194:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002197:	8d 42 04             	lea    0x4(%edx),%eax
8100219a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100219d:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021a0:	8d 48 04             	lea    0x4(%eax),%ecx
810021a3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021a6:	8b 12                	mov    (%edx),%edx
810021a8:	89 10                	mov    %edx,(%eax)
810021aa:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021ad:	8d 42 04             	lea    0x4(%edx),%eax
810021b0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021b6:	8d 48 04             	lea    0x4(%eax),%ecx
810021b9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021bc:	8b 12                	mov    (%edx),%edx
810021be:	89 10                	mov    %edx,(%eax)
810021c0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810021c4:	76 5e                	jbe    81002224 <_realloc_r+0x643>
810021c6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021c9:	8d 42 04             	lea    0x4(%edx),%eax
810021cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021cf:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021d2:	8d 48 04             	lea    0x4(%eax),%ecx
810021d5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021d8:	8b 12                	mov    (%edx),%edx
810021da:	89 10                	mov    %edx,(%eax)
810021dc:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021df:	8d 42 04             	lea    0x4(%edx),%eax
810021e2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810021e5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021e8:	8d 48 04             	lea    0x4(%eax),%ecx
810021eb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810021ee:	8b 12                	mov    (%edx),%edx
810021f0:	89 10                	mov    %edx,(%eax)
810021f2:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
810021f6:	76 2c                	jbe    81002224 <_realloc_r+0x643>
810021f8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810021fb:	8d 42 04             	lea    0x4(%edx),%eax
810021fe:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002201:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002204:	8d 48 04             	lea    0x4(%eax),%ecx
81002207:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100220a:	8b 12                	mov    (%edx),%edx
8100220c:	89 10                	mov    %edx,(%eax)
8100220e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002211:	8d 42 04             	lea    0x4(%edx),%eax
81002214:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002217:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100221a:	8d 48 04             	lea    0x4(%eax),%ecx
8100221d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002220:	8b 12                	mov    (%edx),%edx
81002222:	89 10                	mov    %edx,(%eax)
81002224:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002227:	8d 42 04             	lea    0x4(%edx),%eax
8100222a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100222d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002230:	8d 48 04             	lea    0x4(%eax),%ecx
81002233:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002236:	8b 12                	mov    (%edx),%edx
81002238:	89 10                	mov    %edx,(%eax)
8100223a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100223d:	8d 42 04             	lea    0x4(%edx),%eax
81002240:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002243:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002246:	8d 48 04             	lea    0x4(%eax),%ecx
81002249:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100224c:	8b 12                	mov    (%edx),%edx
8100224e:	89 10                	mov    %edx,(%eax)
81002250:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002253:	8b 10                	mov    (%eax),%edx
81002255:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002258:	89 10                	mov    %edx,(%eax)
8100225a:	e9 ad 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
8100225f:	83 ec 04             	sub    $0x4,%esp
81002262:	ff 75 9c             	push   -0x64(%ebp)
81002265:	ff 75 0c             	push   0xc(%ebp)
81002268:	ff 75 a8             	push   -0x58(%ebp)
8100226b:	e8 50 f8 ff ff       	call   81001ac0 <memmove>
81002270:	83 c4 10             	add    $0x10,%esp
81002273:	e9 94 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
81002278:	83 ec 08             	sub    $0x8,%esp
8100227b:	ff 75 10             	push   0x10(%ebp)
8100227e:	ff 75 08             	push   0x8(%ebp)
81002281:	e8 29 ef ff ff       	call   810011af <_malloc_r>
81002286:	83 c4 10             	add    $0x10,%esp
81002289:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100228c:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81002290:	75 18                	jne    810022aa <_realloc_r+0x6c9>
81002292:	83 ec 0c             	sub    $0xc,%esp
81002295:	ff 75 08             	push   0x8(%ebp)
81002298:	e8 3e f9 ff ff       	call   81001bdb <__malloc_unlock>
8100229d:	83 c4 10             	add    $0x10,%esp
810022a0:	b8 00 00 00 00       	mov    $0x0,%eax
810022a5:	e9 0f 02 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
810022aa:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022ad:	83 e8 08             	sub    $0x8,%eax
810022b0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022b6:	8b 40 04             	mov    0x4(%eax),%eax
810022b9:	83 e0 fe             	and    $0xfffffffe,%eax
810022bc:	89 c2                	mov    %eax,%edx
810022be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022c1:	01 d0                	add    %edx,%eax
810022c3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810022c6:	75 17                	jne    810022df <_realloc_r+0x6fe>
810022c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022cb:	8b 40 04             	mov    0x4(%eax),%eax
810022ce:	83 e0 fc             	and    $0xfffffffc,%eax
810022d1:	01 45 f0             	add    %eax,-0x10(%ebp)
810022d4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810022d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810022da:	e9 2d 01 00 00       	jmp    8100240c <_realloc_r+0x82b>
810022df:	8b 45 c0             	mov    -0x40(%ebp),%eax
810022e2:	83 e8 04             	sub    $0x4,%eax
810022e5:	89 45 98             	mov    %eax,-0x68(%ebp)
810022e8:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810022ec:	0f 87 de 00 00 00    	ja     810023d0 <_realloc_r+0x7ef>
810022f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810022f5:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022f8:	8b 45 a8             	mov    -0x58(%ebp),%eax
810022fb:	89 45 c8             	mov    %eax,-0x38(%ebp)
810022fe:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002302:	0f 86 90 00 00 00    	jbe    81002398 <_realloc_r+0x7b7>
81002308:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100230b:	8d 42 04             	lea    0x4(%edx),%eax
8100230e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002311:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002314:	8d 48 04             	lea    0x4(%eax),%ecx
81002317:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100231a:	8b 12                	mov    (%edx),%edx
8100231c:	89 10                	mov    %edx,(%eax)
8100231e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002321:	8d 42 04             	lea    0x4(%edx),%eax
81002324:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002327:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100232a:	8d 48 04             	lea    0x4(%eax),%ecx
8100232d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002330:	8b 12                	mov    (%edx),%edx
81002332:	89 10                	mov    %edx,(%eax)
81002334:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002338:	76 5e                	jbe    81002398 <_realloc_r+0x7b7>
8100233a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100233d:	8d 42 04             	lea    0x4(%edx),%eax
81002340:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002343:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002346:	8d 48 04             	lea    0x4(%eax),%ecx
81002349:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100234c:	8b 12                	mov    (%edx),%edx
8100234e:	89 10                	mov    %edx,(%eax)
81002350:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002353:	8d 42 04             	lea    0x4(%edx),%eax
81002356:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002359:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100235c:	8d 48 04             	lea    0x4(%eax),%ecx
8100235f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002362:	8b 12                	mov    (%edx),%edx
81002364:	89 10                	mov    %edx,(%eax)
81002366:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100236a:	76 2c                	jbe    81002398 <_realloc_r+0x7b7>
8100236c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100236f:	8d 42 04             	lea    0x4(%edx),%eax
81002372:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002375:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002378:	8d 48 04             	lea    0x4(%eax),%ecx
8100237b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100237e:	8b 12                	mov    (%edx),%edx
81002380:	89 10                	mov    %edx,(%eax)
81002382:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002385:	8d 42 04             	lea    0x4(%edx),%eax
81002388:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100238b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100238e:	8d 48 04             	lea    0x4(%eax),%ecx
81002391:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002394:	8b 12                	mov    (%edx),%edx
81002396:	89 10                	mov    %edx,(%eax)
81002398:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100239b:	8d 42 04             	lea    0x4(%edx),%eax
8100239e:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023a1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023a4:	8d 48 04             	lea    0x4(%eax),%ecx
810023a7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023aa:	8b 12                	mov    (%edx),%edx
810023ac:	89 10                	mov    %edx,(%eax)
810023ae:	8b 55 cc             	mov    -0x34(%ebp),%edx
810023b1:	8d 42 04             	lea    0x4(%edx),%eax
810023b4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810023b7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023ba:	8d 48 04             	lea    0x4(%eax),%ecx
810023bd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810023c0:	8b 12                	mov    (%edx),%edx
810023c2:	89 10                	mov    %edx,(%eax)
810023c4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810023c7:	8b 10                	mov    (%eax),%edx
810023c9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810023cc:	89 10                	mov    %edx,(%eax)
810023ce:	eb 14                	jmp    810023e4 <_realloc_r+0x803>
810023d0:	83 ec 04             	sub    $0x4,%esp
810023d3:	ff 75 98             	push   -0x68(%ebp)
810023d6:	ff 75 0c             	push   0xc(%ebp)
810023d9:	ff 75 a8             	push   -0x58(%ebp)
810023dc:	e8 df f6 ff ff       	call   81001ac0 <memmove>
810023e1:	83 c4 10             	add    $0x10,%esp
810023e4:	83 ec 08             	sub    $0x8,%esp
810023e7:	ff 75 0c             	push   0xc(%ebp)
810023ea:	ff 75 08             	push   0x8(%ebp)
810023ed:	e8 0b 0a 00 00       	call   81002dfd <_free_r>
810023f2:	83 c4 10             	add    $0x10,%esp
810023f5:	83 ec 0c             	sub    $0xc,%esp
810023f8:	ff 75 08             	push   0x8(%ebp)
810023fb:	e8 db f7 ff ff       	call   81001bdb <__malloc_unlock>
81002400:	83 c4 10             	add    $0x10,%esp
81002403:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002406:	e9 ae 00 00 00       	jmp    810024b9 <_realloc_r+0x8d8>
8100240b:	90                   	nop
8100240c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100240f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002412:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002415:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002419:	76 5d                	jbe    81002478 <_realloc_r+0x897>
8100241b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100241e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002421:	01 d0                	add    %edx,%eax
81002423:	89 45 90             	mov    %eax,-0x70(%ebp)
81002426:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002429:	8b 40 04             	mov    0x4(%eax),%eax
8100242c:	83 e0 01             	and    $0x1,%eax
8100242f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002432:	89 c2                	mov    %eax,%edx
81002434:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002437:	89 50 04             	mov    %edx,0x4(%eax)
8100243a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100243d:	83 c8 01             	or     $0x1,%eax
81002440:	89 c2                	mov    %eax,%edx
81002442:	8b 45 90             	mov    -0x70(%ebp),%eax
81002445:	89 50 04             	mov    %edx,0x4(%eax)
81002448:	8b 55 90             	mov    -0x70(%ebp),%edx
8100244b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100244e:	01 d0                	add    %edx,%eax
81002450:	8b 50 04             	mov    0x4(%eax),%edx
81002453:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002456:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002459:	01 c8                	add    %ecx,%eax
8100245b:	83 ca 01             	or     $0x1,%edx
8100245e:	89 50 04             	mov    %edx,0x4(%eax)
81002461:	8b 45 90             	mov    -0x70(%ebp),%eax
81002464:	83 c0 08             	add    $0x8,%eax
81002467:	83 ec 08             	sub    $0x8,%esp
8100246a:	50                   	push   %eax
8100246b:	ff 75 08             	push   0x8(%ebp)
8100246e:	e8 8a 09 00 00       	call   81002dfd <_free_r>
81002473:	83 c4 10             	add    $0x10,%esp
81002476:	eb 2d                	jmp    810024a5 <_realloc_r+0x8c4>
81002478:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100247b:	8b 40 04             	mov    0x4(%eax),%eax
8100247e:	83 e0 01             	and    $0x1,%eax
81002481:	0b 45 f0             	or     -0x10(%ebp),%eax
81002484:	89 c2                	mov    %eax,%edx
81002486:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002489:	89 50 04             	mov    %edx,0x4(%eax)
8100248c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100248f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002492:	01 d0                	add    %edx,%eax
81002494:	8b 50 04             	mov    0x4(%eax),%edx
81002497:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100249a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100249d:	01 c8                	add    %ecx,%eax
8100249f:	83 ca 01             	or     $0x1,%edx
810024a2:	89 50 04             	mov    %edx,0x4(%eax)
810024a5:	83 ec 0c             	sub    $0xc,%esp
810024a8:	ff 75 08             	push   0x8(%ebp)
810024ab:	e8 2b f7 ff ff       	call   81001bdb <__malloc_unlock>
810024b0:	83 c4 10             	add    $0x10,%esp
810024b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024b6:	83 c0 08             	add    $0x8,%eax
810024b9:	c9                   	leave  
810024ba:	c3                   	ret    

810024bb <lflush>:
810024bb:	55                   	push   %ebp
810024bc:	89 e5                	mov    %esp,%ebp
810024be:	83 ec 08             	sub    $0x8,%esp
810024c1:	8b 45 08             	mov    0x8(%ebp),%eax
810024c4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810024c8:	98                   	cwtl   
810024c9:	83 e0 09             	and    $0x9,%eax
810024cc:	83 f8 09             	cmp    $0x9,%eax
810024cf:	75 10                	jne    810024e1 <lflush+0x26>
810024d1:	83 ec 0c             	sub    $0xc,%esp
810024d4:	ff 75 08             	push   0x8(%ebp)
810024d7:	e8 e8 08 00 00       	call   81002dc4 <fflush>
810024dc:	83 c4 10             	add    $0x10,%esp
810024df:	eb 05                	jmp    810024e6 <lflush+0x2b>
810024e1:	b8 00 00 00 00       	mov    $0x0,%eax
810024e6:	c9                   	leave  
810024e7:	c3                   	ret    

810024e8 <__srefill_r>:
810024e8:	55                   	push   %ebp
810024e9:	89 e5                	mov    %esp,%ebp
810024eb:	56                   	push   %esi
810024ec:	53                   	push   %ebx
810024ed:	83 ec 10             	sub    $0x10,%esp
810024f0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810024f3:	8b 45 08             	mov    0x8(%ebp),%eax
810024f6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810024fd:	74 18                	je     81002517 <__srefill_r+0x2f>
810024ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002502:	8b 40 38             	mov    0x38(%eax),%eax
81002505:	85 c0                	test   %eax,%eax
81002507:	75 0e                	jne    81002517 <__srefill_r+0x2f>
81002509:	83 ec 0c             	sub    $0xc,%esp
8100250c:	ff 75 f4             	push   -0xc(%ebp)
8100250f:	e8 8a e3 ff ff       	call   8100089e <__sinit>
81002514:	83 c4 10             	add    $0x10,%esp
81002517:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100251b:	98                   	cwtl   
8100251c:	25 00 20 00 00       	and    $0x2000,%eax
81002521:	85 c0                	test   %eax,%eax
81002523:	75 14                	jne    81002539 <__srefill_r+0x51>
81002525:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002529:	80 cc 20             	or     $0x20,%ah
8100252c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002530:	8b 43 64             	mov    0x64(%ebx),%eax
81002533:	80 e4 df             	and    $0xdf,%ah
81002536:	89 43 64             	mov    %eax,0x64(%ebx)
81002539:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002540:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002544:	98                   	cwtl   
81002545:	83 e0 20             	and    $0x20,%eax
81002548:	85 c0                	test   %eax,%eax
8100254a:	74 0a                	je     81002556 <__srefill_r+0x6e>
8100254c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002551:	e9 8c 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
81002556:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100255a:	98                   	cwtl   
8100255b:	83 e0 04             	and    $0x4,%eax
8100255e:	85 c0                	test   %eax,%eax
81002560:	75 79                	jne    810025db <__srefill_r+0xf3>
81002562:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002566:	98                   	cwtl   
81002567:	83 e0 10             	and    $0x10,%eax
8100256a:	85 c0                	test   %eax,%eax
8100256c:	75 1e                	jne    8100258c <__srefill_r+0xa4>
8100256e:	8b 45 08             	mov    0x8(%ebp),%eax
81002571:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81002577:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257b:	83 c8 40             	or     $0x40,%eax
8100257e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002582:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002587:	e9 56 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
8100258c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002590:	98                   	cwtl   
81002591:	83 e0 08             	and    $0x8,%eax
81002594:	85 c0                	test   %eax,%eax
81002596:	74 36                	je     810025ce <__srefill_r+0xe6>
81002598:	83 ec 08             	sub    $0x8,%esp
8100259b:	53                   	push   %ebx
8100259c:	ff 75 08             	push   0x8(%ebp)
8100259f:	e8 c8 07 00 00       	call   81002d6c <_fflush_r>
810025a4:	83 c4 10             	add    $0x10,%esp
810025a7:	85 c0                	test   %eax,%eax
810025a9:	74 0a                	je     810025b5 <__srefill_r+0xcd>
810025ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025b0:	e9 2d 01 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
810025b5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025b9:	83 e0 f7             	and    $0xfffffff7,%eax
810025bc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025c0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810025c7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810025ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025d2:	83 c8 04             	or     $0x4,%eax
810025d5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025d9:	eb 46                	jmp    81002621 <__srefill_r+0x139>
810025db:	8b 43 30             	mov    0x30(%ebx),%eax
810025de:	85 c0                	test   %eax,%eax
810025e0:	74 3f                	je     81002621 <__srefill_r+0x139>
810025e2:	8b 53 30             	mov    0x30(%ebx),%edx
810025e5:	8d 43 40             	lea    0x40(%ebx),%eax
810025e8:	39 c2                	cmp    %eax,%edx
810025ea:	74 12                	je     810025fe <__srefill_r+0x116>
810025ec:	8b 43 30             	mov    0x30(%ebx),%eax
810025ef:	83 ec 08             	sub    $0x8,%esp
810025f2:	50                   	push   %eax
810025f3:	ff 75 08             	push   0x8(%ebp)
810025f6:	e8 02 08 00 00       	call   81002dfd <_free_r>
810025fb:	83 c4 10             	add    $0x10,%esp
810025fe:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002605:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002608:	89 43 04             	mov    %eax,0x4(%ebx)
8100260b:	8b 43 04             	mov    0x4(%ebx),%eax
8100260e:	85 c0                	test   %eax,%eax
81002610:	74 0f                	je     81002621 <__srefill_r+0x139>
81002612:	8b 43 38             	mov    0x38(%ebx),%eax
81002615:	89 03                	mov    %eax,(%ebx)
81002617:	b8 00 00 00 00       	mov    $0x0,%eax
8100261c:	e9 c1 00 00 00       	jmp    810026e2 <__srefill_r+0x1fa>
81002621:	8b 43 10             	mov    0x10(%ebx),%eax
81002624:	85 c0                	test   %eax,%eax
81002626:	75 0f                	jne    81002637 <__srefill_r+0x14f>
81002628:	83 ec 08             	sub    $0x8,%esp
8100262b:	53                   	push   %ebx
8100262c:	ff 75 08             	push   0x8(%ebp)
8100262f:	e8 4b 0d 00 00       	call   8100337f <__smakebuf_r>
81002634:	83 c4 10             	add    $0x10,%esp
81002637:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100263b:	98                   	cwtl   
8100263c:	83 e0 03             	and    $0x3,%eax
8100263f:	85 c0                	test   %eax,%eax
81002641:	74 48                	je     8100268b <__srefill_r+0x1a3>
81002643:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002647:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100264b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81002651:	a1 78 37 00 81       	mov    0x81003778,%eax
81002656:	83 ec 08             	sub    $0x8,%esp
81002659:	68 bb 24 00 81       	push   $0x810024bb
8100265e:	50                   	push   %eax
8100265f:	e8 e5 e7 ff ff       	call   81000e49 <_fwalk>
81002664:	83 c4 10             	add    $0x10,%esp
81002667:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100266b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100266f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002673:	98                   	cwtl   
81002674:	83 e0 09             	and    $0x9,%eax
81002677:	83 f8 09             	cmp    $0x9,%eax
8100267a:	75 0f                	jne    8100268b <__srefill_r+0x1a3>
8100267c:	83 ec 08             	sub    $0x8,%esp
8100267f:	53                   	push   %ebx
81002680:	ff 75 08             	push   0x8(%ebp)
81002683:	e8 be 04 00 00       	call   81002b46 <__sflush_r>
81002688:	83 c4 10             	add    $0x10,%esp
8100268b:	8b 43 10             	mov    0x10(%ebx),%eax
8100268e:	89 03                	mov    %eax,(%ebx)
81002690:	8b 43 20             	mov    0x20(%ebx),%eax
81002693:	8b 73 14             	mov    0x14(%ebx),%esi
81002696:	8b 0b                	mov    (%ebx),%ecx
81002698:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100269b:	56                   	push   %esi
8100269c:	51                   	push   %ecx
8100269d:	52                   	push   %edx
8100269e:	ff 75 08             	push   0x8(%ebp)
810026a1:	ff d0                	call   *%eax
810026a3:	83 c4 10             	add    $0x10,%esp
810026a6:	89 43 04             	mov    %eax,0x4(%ebx)
810026a9:	8b 43 04             	mov    0x4(%ebx),%eax
810026ac:	85 c0                	test   %eax,%eax
810026ae:	7f 2d                	jg     810026dd <__srefill_r+0x1f5>
810026b0:	8b 43 04             	mov    0x4(%ebx),%eax
810026b3:	85 c0                	test   %eax,%eax
810026b5:	75 0d                	jne    810026c4 <__srefill_r+0x1dc>
810026b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026bb:	83 c8 20             	or     $0x20,%eax
810026be:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026c2:	eb 12                	jmp    810026d6 <__srefill_r+0x1ee>
810026c4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810026cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026cf:	83 c8 40             	or     $0x40,%eax
810026d2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026db:	eb 05                	jmp    810026e2 <__srefill_r+0x1fa>
810026dd:	b8 00 00 00 00       	mov    $0x0,%eax
810026e2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810026e5:	5b                   	pop    %ebx
810026e6:	5e                   	pop    %esi
810026e7:	5d                   	pop    %ebp
810026e8:	c3                   	ret    

810026e9 <_sbrk_r>:
810026e9:	55                   	push   %ebp
810026ea:	89 e5                	mov    %esp,%ebp
810026ec:	83 ec 18             	sub    $0x18,%esp
810026ef:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
810026f6:	00 00 00 
810026f9:	83 ec 0c             	sub    $0xc,%esp
810026fc:	ff 75 0c             	push   0xc(%ebp)
810026ff:	e8 cc db ff ff       	call   810002d0 <sbrk>
81002704:	83 c4 10             	add    $0x10,%esp
81002707:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100270a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100270e:	75 14                	jne    81002724 <_sbrk_r+0x3b>
81002710:	a1 4c 42 00 81       	mov    0x8100424c,%eax
81002715:	85 c0                	test   %eax,%eax
81002717:	74 0b                	je     81002724 <_sbrk_r+0x3b>
81002719:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
8100271f:	8b 45 08             	mov    0x8(%ebp),%eax
81002722:	89 10                	mov    %edx,(%eax)
81002724:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002727:	c9                   	leave  
81002728:	c3                   	ret    

81002729 <__sread>:
81002729:	55                   	push   %ebp
8100272a:	89 e5                	mov    %esp,%ebp
8100272c:	56                   	push   %esi
8100272d:	53                   	push   %ebx
8100272e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002731:	8b 55 14             	mov    0x14(%ebp),%edx
81002734:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002738:	98                   	cwtl   
81002739:	52                   	push   %edx
8100273a:	ff 75 10             	push   0x10(%ebp)
8100273d:	50                   	push   %eax
8100273e:	ff 75 08             	push   0x8(%ebp)
81002741:	e8 b9 0d 00 00       	call   810034ff <_read_r>
81002746:	83 c4 10             	add    $0x10,%esp
81002749:	89 c6                	mov    %eax,%esi
8100274b:	85 f6                	test   %esi,%esi
8100274d:	78 0a                	js     81002759 <__sread+0x30>
8100274f:	8b 43 50             	mov    0x50(%ebx),%eax
81002752:	01 f0                	add    %esi,%eax
81002754:	89 43 50             	mov    %eax,0x50(%ebx)
81002757:	eb 0b                	jmp    81002764 <__sread+0x3b>
81002759:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100275d:	80 e4 ef             	and    $0xef,%ah
81002760:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002764:	89 f0                	mov    %esi,%eax
81002766:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002769:	5b                   	pop    %ebx
8100276a:	5e                   	pop    %esi
8100276b:	5d                   	pop    %ebp
8100276c:	c3                   	ret    

8100276d <__seofread>:
8100276d:	55                   	push   %ebp
8100276e:	89 e5                	mov    %esp,%ebp
81002770:	b8 00 00 00 00       	mov    $0x0,%eax
81002775:	5d                   	pop    %ebp
81002776:	c3                   	ret    

81002777 <__swrite>:
81002777:	55                   	push   %ebp
81002778:	89 e5                	mov    %esp,%ebp
8100277a:	53                   	push   %ebx
8100277b:	83 ec 14             	sub    $0x14,%esp
8100277e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002781:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002785:	98                   	cwtl   
81002786:	25 00 01 00 00       	and    $0x100,%eax
8100278b:	85 c0                	test   %eax,%eax
8100278d:	74 15                	je     810027a4 <__swrite+0x2d>
8100278f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002793:	98                   	cwtl   
81002794:	6a 02                	push   $0x2
81002796:	6a 00                	push   $0x0
81002798:	50                   	push   %eax
81002799:	ff 75 08             	push   0x8(%ebp)
8100279c:	e8 98 0b 00 00       	call   81003339 <_lseek_r>
810027a1:	83 c4 10             	add    $0x10,%esp
810027a4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027a8:	80 e4 ef             	and    $0xef,%ah
810027ab:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027af:	8b 55 14             	mov    0x14(%ebp),%edx
810027b2:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027b6:	98                   	cwtl   
810027b7:	52                   	push   %edx
810027b8:	ff 75 10             	push   0x10(%ebp)
810027bb:	50                   	push   %eax
810027bc:	ff 75 08             	push   0x8(%ebp)
810027bf:	e8 7d 00 00 00       	call   81002841 <_write_r>
810027c4:	83 c4 10             	add    $0x10,%esp
810027c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810027ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810027d0:	c9                   	leave  
810027d1:	c3                   	ret    

810027d2 <__sseek>:
810027d2:	55                   	push   %ebp
810027d3:	89 e5                	mov    %esp,%ebp
810027d5:	56                   	push   %esi
810027d6:	53                   	push   %ebx
810027d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810027da:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810027de:	98                   	cwtl   
810027df:	ff 75 14             	push   0x14(%ebp)
810027e2:	ff 75 10             	push   0x10(%ebp)
810027e5:	50                   	push   %eax
810027e6:	ff 75 08             	push   0x8(%ebp)
810027e9:	e8 4b 0b 00 00       	call   81003339 <_lseek_r>
810027ee:	83 c4 10             	add    $0x10,%esp
810027f1:	89 c6                	mov    %eax,%esi
810027f3:	83 fe ff             	cmp    $0xffffffff,%esi
810027f6:	75 0d                	jne    81002805 <__sseek+0x33>
810027f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027fc:	80 e4 ef             	and    $0xef,%ah
810027ff:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002803:	eb 0e                	jmp    81002813 <__sseek+0x41>
81002805:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002809:	80 cc 10             	or     $0x10,%ah
8100280c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002810:	89 73 50             	mov    %esi,0x50(%ebx)
81002813:	89 f0                	mov    %esi,%eax
81002815:	8d 65 f8             	lea    -0x8(%ebp),%esp
81002818:	5b                   	pop    %ebx
81002819:	5e                   	pop    %esi
8100281a:	5d                   	pop    %ebp
8100281b:	c3                   	ret    

8100281c <__sclose>:
8100281c:	55                   	push   %ebp
8100281d:	89 e5                	mov    %esp,%ebp
8100281f:	83 ec 18             	sub    $0x18,%esp
81002822:	8b 45 0c             	mov    0xc(%ebp),%eax
81002825:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002828:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100282b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100282f:	98                   	cwtl   
81002830:	83 ec 08             	sub    $0x8,%esp
81002833:	50                   	push   %eax
81002834:	ff 75 08             	push   0x8(%ebp)
81002837:	e8 a6 01 00 00       	call   810029e2 <_close_r>
8100283c:	83 c4 10             	add    $0x10,%esp
8100283f:	c9                   	leave  
81002840:	c3                   	ret    

81002841 <_write_r>:
81002841:	55                   	push   %ebp
81002842:	89 e5                	mov    %esp,%ebp
81002844:	83 ec 18             	sub    $0x18,%esp
81002847:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
8100284e:	00 00 00 
81002851:	83 ec 04             	sub    $0x4,%esp
81002854:	ff 75 14             	push   0x14(%ebp)
81002857:	ff 75 10             	push   0x10(%ebp)
8100285a:	ff 75 0c             	push   0xc(%ebp)
8100285d:	e8 ab d9 ff ff       	call   8100020d <write>
81002862:	83 c4 10             	add    $0x10,%esp
81002865:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002868:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100286c:	75 14                	jne    81002882 <_write_r+0x41>
8100286e:	a1 4c 42 00 81       	mov    0x8100424c,%eax
81002873:	85 c0                	test   %eax,%eax
81002875:	74 0b                	je     81002882 <_write_r+0x41>
81002877:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
8100287d:	8b 45 08             	mov    0x8(%ebp),%eax
81002880:	89 10                	mov    %edx,(%eax)
81002882:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002885:	c9                   	leave  
81002886:	c3                   	ret    

81002887 <__swsetup_r>:
81002887:	55                   	push   %ebp
81002888:	89 e5                	mov    %esp,%ebp
8100288a:	53                   	push   %ebx
8100288b:	83 ec 14             	sub    $0x14,%esp
8100288e:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002891:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002896:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002899:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100289d:	74 18                	je     810028b7 <__swsetup_r+0x30>
8100289f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810028a2:	8b 40 38             	mov    0x38(%eax),%eax
810028a5:	85 c0                	test   %eax,%eax
810028a7:	75 0e                	jne    810028b7 <__swsetup_r+0x30>
810028a9:	83 ec 0c             	sub    $0xc,%esp
810028ac:	ff 75 f4             	push   -0xc(%ebp)
810028af:	e8 ea df ff ff       	call   8100089e <__sinit>
810028b4:	83 c4 10             	add    $0x10,%esp
810028b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028bb:	98                   	cwtl   
810028bc:	83 e0 08             	and    $0x8,%eax
810028bf:	85 c0                	test   %eax,%eax
810028c1:	0f 85 82 00 00 00    	jne    81002949 <__swsetup_r+0xc2>
810028c7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028cb:	98                   	cwtl   
810028cc:	83 e0 10             	and    $0x10,%eax
810028cf:	85 c0                	test   %eax,%eax
810028d1:	75 1e                	jne    810028f1 <__swsetup_r+0x6a>
810028d3:	8b 45 08             	mov    0x8(%ebp),%eax
810028d6:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810028dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028e0:	83 c8 40             	or     $0x40,%eax
810028e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810028ec:	e9 ec 00 00 00       	jmp    810029dd <__swsetup_r+0x156>
810028f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028f5:	98                   	cwtl   
810028f6:	83 e0 04             	and    $0x4,%eax
810028f9:	85 c0                	test   %eax,%eax
810028fb:	74 41                	je     8100293e <__swsetup_r+0xb7>
810028fd:	8b 43 30             	mov    0x30(%ebx),%eax
81002900:	85 c0                	test   %eax,%eax
81002902:	74 23                	je     81002927 <__swsetup_r+0xa0>
81002904:	8b 53 30             	mov    0x30(%ebx),%edx
81002907:	8d 43 40             	lea    0x40(%ebx),%eax
8100290a:	39 c2                	cmp    %eax,%edx
8100290c:	74 12                	je     81002920 <__swsetup_r+0x99>
8100290e:	8b 43 30             	mov    0x30(%ebx),%eax
81002911:	83 ec 08             	sub    $0x8,%esp
81002914:	50                   	push   %eax
81002915:	ff 75 08             	push   0x8(%ebp)
81002918:	e8 e0 04 00 00       	call   81002dfd <_free_r>
8100291d:	83 c4 10             	add    $0x10,%esp
81002920:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002927:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100292b:	83 e0 db             	and    $0xffffffdb,%eax
8100292e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002932:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002939:	8b 43 10             	mov    0x10(%ebx),%eax
8100293c:	89 03                	mov    %eax,(%ebx)
8100293e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002942:	83 c8 08             	or     $0x8,%eax
81002945:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002949:	8b 43 10             	mov    0x10(%ebx),%eax
8100294c:	85 c0                	test   %eax,%eax
8100294e:	75 2b                	jne    8100297b <__swsetup_r+0xf4>
81002950:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002954:	98                   	cwtl   
81002955:	25 00 02 00 00       	and    $0x200,%eax
8100295a:	85 c0                	test   %eax,%eax
8100295c:	74 0e                	je     8100296c <__swsetup_r+0xe5>
8100295e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002962:	98                   	cwtl   
81002963:	25 80 00 00 00       	and    $0x80,%eax
81002968:	85 c0                	test   %eax,%eax
8100296a:	74 0f                	je     8100297b <__swsetup_r+0xf4>
8100296c:	83 ec 08             	sub    $0x8,%esp
8100296f:	53                   	push   %ebx
81002970:	ff 75 08             	push   0x8(%ebp)
81002973:	e8 07 0a 00 00       	call   8100337f <__smakebuf_r>
81002978:	83 c4 10             	add    $0x10,%esp
8100297b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100297f:	98                   	cwtl   
81002980:	83 e0 01             	and    $0x1,%eax
81002983:	85 c0                	test   %eax,%eax
81002985:	74 11                	je     81002998 <__swsetup_r+0x111>
81002987:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8100298e:	8b 43 14             	mov    0x14(%ebx),%eax
81002991:	f7 d8                	neg    %eax
81002993:	89 43 18             	mov    %eax,0x18(%ebx)
81002996:	eb 19                	jmp    810029b1 <__swsetup_r+0x12a>
81002998:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100299c:	98                   	cwtl   
8100299d:	83 e0 02             	and    $0x2,%eax
810029a0:	85 c0                	test   %eax,%eax
810029a2:	75 05                	jne    810029a9 <__swsetup_r+0x122>
810029a4:	8b 43 14             	mov    0x14(%ebx),%eax
810029a7:	eb 05                	jmp    810029ae <__swsetup_r+0x127>
810029a9:	b8 00 00 00 00       	mov    $0x0,%eax
810029ae:	89 43 08             	mov    %eax,0x8(%ebx)
810029b1:	8b 43 10             	mov    0x10(%ebx),%eax
810029b4:	85 c0                	test   %eax,%eax
810029b6:	75 20                	jne    810029d8 <__swsetup_r+0x151>
810029b8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029bc:	98                   	cwtl   
810029bd:	25 80 00 00 00       	and    $0x80,%eax
810029c2:	85 c0                	test   %eax,%eax
810029c4:	74 12                	je     810029d8 <__swsetup_r+0x151>
810029c6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029ca:	83 c8 40             	or     $0x40,%eax
810029cd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029d1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029d6:	eb 05                	jmp    810029dd <__swsetup_r+0x156>
810029d8:	b8 00 00 00 00       	mov    $0x0,%eax
810029dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810029e0:	c9                   	leave  
810029e1:	c3                   	ret    

810029e2 <_close_r>:
810029e2:	55                   	push   %ebp
810029e3:	89 e5                	mov    %esp,%ebp
810029e5:	83 ec 18             	sub    $0x18,%esp
810029e8:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
810029ef:	00 00 00 
810029f2:	83 ec 0c             	sub    $0xc,%esp
810029f5:	ff 75 0c             	push   0xc(%ebp)
810029f8:	e8 3d d8 ff ff       	call   8100023a <close>
810029fd:	83 c4 10             	add    $0x10,%esp
81002a00:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a03:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81002a07:	75 14                	jne    81002a1d <_close_r+0x3b>
81002a09:	a1 4c 42 00 81       	mov    0x8100424c,%eax
81002a0e:	85 c0                	test   %eax,%eax
81002a10:	74 0b                	je     81002a1d <_close_r+0x3b>
81002a12:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
81002a18:	8b 45 08             	mov    0x8(%ebp),%eax
81002a1b:	89 10                	mov    %edx,(%eax)
81002a1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a20:	c9                   	leave  
81002a21:	c3                   	ret    

81002a22 <_fclose_r>:
81002a22:	55                   	push   %ebp
81002a23:	89 e5                	mov    %esp,%ebp
81002a25:	53                   	push   %ebx
81002a26:	83 ec 14             	sub    $0x14,%esp
81002a29:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a2c:	85 db                	test   %ebx,%ebx
81002a2e:	75 0a                	jne    81002a3a <_fclose_r+0x18>
81002a30:	b8 00 00 00 00       	mov    $0x0,%eax
81002a35:	e9 ea 00 00 00       	jmp    81002b24 <_fclose_r+0x102>
81002a3a:	8b 45 08             	mov    0x8(%ebp),%eax
81002a3d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a40:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002a44:	74 18                	je     81002a5e <_fclose_r+0x3c>
81002a46:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002a49:	8b 40 38             	mov    0x38(%eax),%eax
81002a4c:	85 c0                	test   %eax,%eax
81002a4e:	75 0e                	jne    81002a5e <_fclose_r+0x3c>
81002a50:	83 ec 0c             	sub    $0xc,%esp
81002a53:	ff 75 f0             	push   -0x10(%ebp)
81002a56:	e8 43 de ff ff       	call   8100089e <__sinit>
81002a5b:	83 c4 10             	add    $0x10,%esp
81002a5e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a62:	66 85 c0             	test   %ax,%ax
81002a65:	75 0a                	jne    81002a71 <_fclose_r+0x4f>
81002a67:	b8 00 00 00 00       	mov    $0x0,%eax
81002a6c:	e9 b3 00 00 00       	jmp    81002b24 <_fclose_r+0x102>
81002a71:	83 ec 08             	sub    $0x8,%esp
81002a74:	53                   	push   %ebx
81002a75:	ff 75 08             	push   0x8(%ebp)
81002a78:	e8 c9 00 00 00       	call   81002b46 <__sflush_r>
81002a7d:	83 c4 10             	add    $0x10,%esp
81002a80:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a83:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a86:	85 c0                	test   %eax,%eax
81002a88:	74 1d                	je     81002aa7 <_fclose_r+0x85>
81002a8a:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002a8d:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002a90:	83 ec 08             	sub    $0x8,%esp
81002a93:	52                   	push   %edx
81002a94:	ff 75 08             	push   0x8(%ebp)
81002a97:	ff d0                	call   *%eax
81002a99:	83 c4 10             	add    $0x10,%esp
81002a9c:	85 c0                	test   %eax,%eax
81002a9e:	79 07                	jns    81002aa7 <_fclose_r+0x85>
81002aa0:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002aa7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002aab:	98                   	cwtl   
81002aac:	25 80 00 00 00       	and    $0x80,%eax
81002ab1:	85 c0                	test   %eax,%eax
81002ab3:	74 12                	je     81002ac7 <_fclose_r+0xa5>
81002ab5:	8b 43 10             	mov    0x10(%ebx),%eax
81002ab8:	83 ec 08             	sub    $0x8,%esp
81002abb:	50                   	push   %eax
81002abc:	ff 75 08             	push   0x8(%ebp)
81002abf:	e8 39 03 00 00       	call   81002dfd <_free_r>
81002ac4:	83 c4 10             	add    $0x10,%esp
81002ac7:	8b 43 30             	mov    0x30(%ebx),%eax
81002aca:	85 c0                	test   %eax,%eax
81002acc:	74 23                	je     81002af1 <_fclose_r+0xcf>
81002ace:	8b 53 30             	mov    0x30(%ebx),%edx
81002ad1:	8d 43 40             	lea    0x40(%ebx),%eax
81002ad4:	39 c2                	cmp    %eax,%edx
81002ad6:	74 12                	je     81002aea <_fclose_r+0xc8>
81002ad8:	8b 43 30             	mov    0x30(%ebx),%eax
81002adb:	83 ec 08             	sub    $0x8,%esp
81002ade:	50                   	push   %eax
81002adf:	ff 75 08             	push   0x8(%ebp)
81002ae2:	e8 16 03 00 00       	call   81002dfd <_free_r>
81002ae7:	83 c4 10             	add    $0x10,%esp
81002aea:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002af1:	8b 43 44             	mov    0x44(%ebx),%eax
81002af4:	85 c0                	test   %eax,%eax
81002af6:	74 19                	je     81002b11 <_fclose_r+0xef>
81002af8:	8b 43 44             	mov    0x44(%ebx),%eax
81002afb:	83 ec 08             	sub    $0x8,%esp
81002afe:	50                   	push   %eax
81002aff:	ff 75 08             	push   0x8(%ebp)
81002b02:	e8 f6 02 00 00       	call   81002dfd <_free_r>
81002b07:	83 c4 10             	add    $0x10,%esp
81002b0a:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
81002b11:	e8 21 de ff ff       	call   81000937 <__sfp_lock_acquire>
81002b16:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81002b1c:	e8 1c de ff ff       	call   8100093d <__sfp_lock_release>
81002b21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002b27:	c9                   	leave  
81002b28:	c3                   	ret    

81002b29 <fclose>:
81002b29:	55                   	push   %ebp
81002b2a:	89 e5                	mov    %esp,%ebp
81002b2c:	83 ec 08             	sub    $0x8,%esp
81002b2f:	8b 55 08             	mov    0x8(%ebp),%edx
81002b32:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002b37:	83 ec 08             	sub    $0x8,%esp
81002b3a:	52                   	push   %edx
81002b3b:	50                   	push   %eax
81002b3c:	e8 e1 fe ff ff       	call   81002a22 <_fclose_r>
81002b41:	83 c4 10             	add    $0x10,%esp
81002b44:	c9                   	leave  
81002b45:	c3                   	ret    

81002b46 <__sflush_r>:
81002b46:	55                   	push   %ebp
81002b47:	89 e5                	mov    %esp,%ebp
81002b49:	57                   	push   %edi
81002b4a:	56                   	push   %esi
81002b4b:	53                   	push   %ebx
81002b4c:	83 ec 1c             	sub    $0x1c,%esp
81002b4f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002b52:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b56:	66 89 45 de          	mov    %ax,-0x22(%ebp)
81002b5a:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002b5e:	83 e0 08             	and    $0x8,%eax
81002b61:	85 c0                	test   %eax,%eax
81002b63:	0f 85 93 01 00 00    	jne    81002cfc <__sflush_r+0x1b6>
81002b69:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b6d:	80 cc 08             	or     $0x8,%ah
81002b70:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b74:	8b 43 04             	mov    0x4(%ebx),%eax
81002b77:	85 c0                	test   %eax,%eax
81002b79:	7f 0b                	jg     81002b86 <__sflush_r+0x40>
81002b7b:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002b7e:	85 c0                	test   %eax,%eax
81002b80:	0f 8e 6f 01 00 00    	jle    81002cf5 <__sflush_r+0x1af>
81002b86:	8b 43 28             	mov    0x28(%ebx),%eax
81002b89:	85 c0                	test   %eax,%eax
81002b8b:	0f 84 64 01 00 00    	je     81002cf5 <__sflush_r+0x1af>
81002b91:	8b 45 08             	mov    0x8(%ebp),%eax
81002b94:	8b 00                	mov    (%eax),%eax
81002b96:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b99:	8b 45 08             	mov    0x8(%ebp),%eax
81002b9c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002ba2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ba6:	98                   	cwtl   
81002ba7:	25 00 10 00 00       	and    $0x1000,%eax
81002bac:	85 c0                	test   %eax,%eax
81002bae:	74 08                	je     81002bb8 <__sflush_r+0x72>
81002bb0:	8b 43 50             	mov    0x50(%ebx),%eax
81002bb3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bb6:	eb 64                	jmp    81002c1c <__sflush_r+0xd6>
81002bb8:	8b 43 28             	mov    0x28(%ebx),%eax
81002bbb:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002bbe:	6a 01                	push   $0x1
81002bc0:	6a 00                	push   $0x0
81002bc2:	52                   	push   %edx
81002bc3:	ff 75 08             	push   0x8(%ebp)
81002bc6:	ff d0                	call   *%eax
81002bc8:	83 c4 10             	add    $0x10,%esp
81002bcb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002bce:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002bd2:	75 48                	jne    81002c1c <__sflush_r+0xd6>
81002bd4:	8b 45 08             	mov    0x8(%ebp),%eax
81002bd7:	8b 00                	mov    (%eax),%eax
81002bd9:	85 c0                	test   %eax,%eax
81002bdb:	74 3f                	je     81002c1c <__sflush_r+0xd6>
81002bdd:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81002be4:	8b 45 08             	mov    0x8(%ebp),%eax
81002be7:	8b 00                	mov    (%eax),%eax
81002be9:	83 f8 1d             	cmp    $0x1d,%eax
81002bec:	74 0a                	je     81002bf8 <__sflush_r+0xb2>
81002bee:	8b 45 08             	mov    0x8(%ebp),%eax
81002bf1:	8b 00                	mov    (%eax),%eax
81002bf3:	83 f8 16             	cmp    $0x16,%eax
81002bf6:	75 11                	jne    81002c09 <__sflush_r+0xc3>
81002bf8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002bff:	8b 45 08             	mov    0x8(%ebp),%eax
81002c02:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002c05:	89 10                	mov    %edx,(%eax)
81002c07:	eb 0b                	jmp    81002c14 <__sflush_r+0xce>
81002c09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c0d:	83 c8 40             	or     $0x40,%eax
81002c10:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c14:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c17:	e9 48 01 00 00       	jmp    81002d64 <__sflush_r+0x21e>
81002c1c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c20:	98                   	cwtl   
81002c21:	83 e0 04             	and    $0x4,%eax
81002c24:	85 c0                	test   %eax,%eax
81002c26:	74 13                	je     81002c3b <__sflush_r+0xf5>
81002c28:	8b 43 04             	mov    0x4(%ebx),%eax
81002c2b:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c2e:	8b 43 30             	mov    0x30(%ebx),%eax
81002c31:	85 c0                	test   %eax,%eax
81002c33:	74 06                	je     81002c3b <__sflush_r+0xf5>
81002c35:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002c38:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002c3b:	8b 43 28             	mov    0x28(%ebx),%eax
81002c3e:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002c41:	6a 00                	push   $0x0
81002c43:	ff 75 e4             	push   -0x1c(%ebp)
81002c46:	52                   	push   %edx
81002c47:	ff 75 08             	push   0x8(%ebp)
81002c4a:	ff d0                	call   *%eax
81002c4c:	83 c4 10             	add    $0x10,%esp
81002c4f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002c52:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c56:	75 1d                	jne    81002c75 <__sflush_r+0x12f>
81002c58:	8b 45 08             	mov    0x8(%ebp),%eax
81002c5b:	8b 00                	mov    (%eax),%eax
81002c5d:	85 c0                	test   %eax,%eax
81002c5f:	74 14                	je     81002c75 <__sflush_r+0x12f>
81002c61:	8b 45 08             	mov    0x8(%ebp),%eax
81002c64:	8b 00                	mov    (%eax),%eax
81002c66:	83 f8 1d             	cmp    $0x1d,%eax
81002c69:	74 0a                	je     81002c75 <__sflush_r+0x12f>
81002c6b:	8b 45 08             	mov    0x8(%ebp),%eax
81002c6e:	8b 00                	mov    (%eax),%eax
81002c70:	83 f8 16             	cmp    $0x16,%eax
81002c73:	75 6e                	jne    81002ce3 <__sflush_r+0x19d>
81002c75:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c79:	80 e4 f7             	and    $0xf7,%ah
81002c7c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002c80:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002c87:	8b 43 10             	mov    0x10(%ebx),%eax
81002c8a:	89 03                	mov    %eax,(%ebx)
81002c8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002c90:	98                   	cwtl   
81002c91:	25 00 10 00 00       	and    $0x1000,%eax
81002c96:	85 c0                	test   %eax,%eax
81002c98:	74 15                	je     81002caf <__sflush_r+0x169>
81002c9a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002c9e:	75 09                	jne    81002ca9 <__sflush_r+0x163>
81002ca0:	8b 45 08             	mov    0x8(%ebp),%eax
81002ca3:	8b 00                	mov    (%eax),%eax
81002ca5:	85 c0                	test   %eax,%eax
81002ca7:	75 06                	jne    81002caf <__sflush_r+0x169>
81002ca9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002cac:	89 43 50             	mov    %eax,0x50(%ebx)
81002caf:	8b 45 08             	mov    0x8(%ebp),%eax
81002cb2:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002cb5:	89 10                	mov    %edx,(%eax)
81002cb7:	8b 43 30             	mov    0x30(%ebx),%eax
81002cba:	85 c0                	test   %eax,%eax
81002cbc:	74 37                	je     81002cf5 <__sflush_r+0x1af>
81002cbe:	8b 53 30             	mov    0x30(%ebx),%edx
81002cc1:	8d 43 40             	lea    0x40(%ebx),%eax
81002cc4:	39 c2                	cmp    %eax,%edx
81002cc6:	74 12                	je     81002cda <__sflush_r+0x194>
81002cc8:	8b 43 30             	mov    0x30(%ebx),%eax
81002ccb:	83 ec 08             	sub    $0x8,%esp
81002cce:	50                   	push   %eax
81002ccf:	ff 75 08             	push   0x8(%ebp)
81002cd2:	e8 26 01 00 00       	call   81002dfd <_free_r>
81002cd7:	83 c4 10             	add    $0x10,%esp
81002cda:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002ce1:	eb 12                	jmp    81002cf5 <__sflush_r+0x1af>
81002ce3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ce7:	83 c8 40             	or     $0x40,%eax
81002cea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002cee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002cf3:	eb 6f                	jmp    81002d64 <__sflush_r+0x21e>
81002cf5:	b8 00 00 00 00       	mov    $0x0,%eax
81002cfa:	eb 68                	jmp    81002d64 <__sflush_r+0x21e>
81002cfc:	8b 73 10             	mov    0x10(%ebx),%esi
81002cff:	85 f6                	test   %esi,%esi
81002d01:	75 07                	jne    81002d0a <__sflush_r+0x1c4>
81002d03:	b8 00 00 00 00       	mov    $0x0,%eax
81002d08:	eb 5a                	jmp    81002d64 <__sflush_r+0x21e>
81002d0a:	8b 03                	mov    (%ebx),%eax
81002d0c:	29 f0                	sub    %esi,%eax
81002d0e:	89 c7                	mov    %eax,%edi
81002d10:	89 33                	mov    %esi,(%ebx)
81002d12:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002d16:	83 e0 03             	and    $0x3,%eax
81002d19:	85 c0                	test   %eax,%eax
81002d1b:	75 05                	jne    81002d22 <__sflush_r+0x1dc>
81002d1d:	8b 43 14             	mov    0x14(%ebx),%eax
81002d20:	eb 05                	jmp    81002d27 <__sflush_r+0x1e1>
81002d22:	b8 00 00 00 00       	mov    $0x0,%eax
81002d27:	89 43 08             	mov    %eax,0x8(%ebx)
81002d2a:	eb 2f                	jmp    81002d5b <__sflush_r+0x215>
81002d2c:	8b 43 24             	mov    0x24(%ebx),%eax
81002d2f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002d32:	57                   	push   %edi
81002d33:	56                   	push   %esi
81002d34:	52                   	push   %edx
81002d35:	ff 75 08             	push   0x8(%ebp)
81002d38:	ff d0                	call   *%eax
81002d3a:	83 c4 10             	add    $0x10,%esp
81002d3d:	85 c0                	test   %eax,%eax
81002d3f:	7f 12                	jg     81002d53 <__sflush_r+0x20d>
81002d41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d45:	83 c8 40             	or     $0x40,%eax
81002d48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d51:	eb 11                	jmp    81002d64 <__sflush_r+0x21e>
81002d53:	89 c1                	mov    %eax,%ecx
81002d55:	89 c8                	mov    %ecx,%eax
81002d57:	01 c6                	add    %eax,%esi
81002d59:	29 cf                	sub    %ecx,%edi
81002d5b:	85 ff                	test   %edi,%edi
81002d5d:	7f cd                	jg     81002d2c <__sflush_r+0x1e6>
81002d5f:	b8 00 00 00 00       	mov    $0x0,%eax
81002d64:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d67:	5b                   	pop    %ebx
81002d68:	5e                   	pop    %esi
81002d69:	5f                   	pop    %edi
81002d6a:	5d                   	pop    %ebp
81002d6b:	c3                   	ret    

81002d6c <_fflush_r>:
81002d6c:	55                   	push   %ebp
81002d6d:	89 e5                	mov    %esp,%ebp
81002d6f:	53                   	push   %ebx
81002d70:	83 ec 14             	sub    $0x14,%esp
81002d73:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002d76:	8b 45 08             	mov    0x8(%ebp),%eax
81002d79:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002d7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002d80:	74 18                	je     81002d9a <_fflush_r+0x2e>
81002d82:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d85:	8b 40 38             	mov    0x38(%eax),%eax
81002d88:	85 c0                	test   %eax,%eax
81002d8a:	75 0e                	jne    81002d9a <_fflush_r+0x2e>
81002d8c:	83 ec 0c             	sub    $0xc,%esp
81002d8f:	ff 75 f4             	push   -0xc(%ebp)
81002d92:	e8 07 db ff ff       	call   8100089e <__sinit>
81002d97:	83 c4 10             	add    $0x10,%esp
81002d9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d9e:	66 85 c0             	test   %ax,%ax
81002da1:	75 07                	jne    81002daa <_fflush_r+0x3e>
81002da3:	b8 00 00 00 00       	mov    $0x0,%eax
81002da8:	eb 15                	jmp    81002dbf <_fflush_r+0x53>
81002daa:	83 ec 08             	sub    $0x8,%esp
81002dad:	53                   	push   %ebx
81002dae:	ff 75 08             	push   0x8(%ebp)
81002db1:	e8 90 fd ff ff       	call   81002b46 <__sflush_r>
81002db6:	83 c4 10             	add    $0x10,%esp
81002db9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002dbc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dbf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002dc2:	c9                   	leave  
81002dc3:	c3                   	ret    

81002dc4 <fflush>:
81002dc4:	55                   	push   %ebp
81002dc5:	89 e5                	mov    %esp,%ebp
81002dc7:	83 ec 08             	sub    $0x8,%esp
81002dca:	8b 55 08             	mov    0x8(%ebp),%edx
81002dcd:	85 d2                	test   %edx,%edx
81002dcf:	75 18                	jne    81002de9 <fflush+0x25>
81002dd1:	a1 78 37 00 81       	mov    0x81003778,%eax
81002dd6:	83 ec 08             	sub    $0x8,%esp
81002dd9:	68 6c 2d 00 81       	push   $0x81002d6c
81002dde:	50                   	push   %eax
81002ddf:	e8 cd e0 ff ff       	call   81000eb1 <_fwalk_reent>
81002de4:	83 c4 10             	add    $0x10,%esp
81002de7:	eb 12                	jmp    81002dfb <fflush+0x37>
81002de9:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81002dee:	83 ec 08             	sub    $0x8,%esp
81002df1:	52                   	push   %edx
81002df2:	50                   	push   %eax
81002df3:	e8 74 ff ff ff       	call   81002d6c <_fflush_r>
81002df8:	83 c4 10             	add    $0x10,%esp
81002dfb:	c9                   	leave  
81002dfc:	c3                   	ret    

81002dfd <_free_r>:
81002dfd:	55                   	push   %ebp
81002dfe:	89 e5                	mov    %esp,%ebp
81002e00:	53                   	push   %ebx
81002e01:	83 ec 34             	sub    $0x34,%esp
81002e04:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002e08:	0f 84 c4 03 00 00    	je     810031d2 <_free_r+0x3d5>
81002e0e:	83 ec 0c             	sub    $0xc,%esp
81002e11:	ff 75 08             	push   0x8(%ebp)
81002e14:	e8 bc ed ff ff       	call   81001bd5 <__malloc_lock>
81002e19:	83 c4 10             	add    $0x10,%esp
81002e1c:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e1f:	83 e8 08             	sub    $0x8,%eax
81002e22:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e25:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e28:	8b 40 04             	mov    0x4(%eax),%eax
81002e2b:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e2e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e31:	83 e0 fe             	and    $0xfffffffe,%eax
81002e34:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002e37:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e3a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002e3d:	01 d0                	add    %edx,%eax
81002e3f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e42:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002e45:	8b 40 04             	mov    0x4(%eax),%eax
81002e48:	83 e0 fc             	and    $0xfffffffc,%eax
81002e4b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002e4e:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81002e53:	8b 40 08             	mov    0x8(%eax),%eax
81002e56:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002e59:	0f 85 94 00 00 00    	jne    81002ef3 <_free_r+0xf6>
81002e5f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002e62:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e65:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e68:	83 e0 01             	and    $0x1,%eax
81002e6b:	85 c0                	test   %eax,%eax
81002e6d:	75 3a                	jne    81002ea9 <_free_r+0xac>
81002e6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e72:	8b 00                	mov    (%eax),%eax
81002e74:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002e77:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e7a:	f7 d8                	neg    %eax
81002e7c:	01 45 f4             	add    %eax,-0xc(%ebp)
81002e7f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002e82:	01 45 f0             	add    %eax,-0x10(%ebp)
81002e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e88:	8b 40 0c             	mov    0xc(%eax),%eax
81002e8b:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e91:	8b 40 08             	mov    0x8(%eax),%eax
81002e94:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e97:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e9a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002e9d:	89 50 0c             	mov    %edx,0xc(%eax)
81002ea0:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002ea3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002ea6:	89 50 08             	mov    %edx,0x8(%eax)
81002ea9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eac:	83 c8 01             	or     $0x1,%eax
81002eaf:	89 c2                	mov    %eax,%edx
81002eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002eb4:	89 50 04             	mov    %edx,0x4(%eax)
81002eb7:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81002ebc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ebf:	89 42 08             	mov    %eax,0x8(%edx)
81002ec2:	a1 c8 3f 00 81       	mov    0x81003fc8,%eax
81002ec7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002eca:	72 14                	jb     81002ee0 <_free_r+0xe3>
81002ecc:	a1 00 42 00 81       	mov    0x81004200,%eax
81002ed1:	83 ec 08             	sub    $0x8,%esp
81002ed4:	50                   	push   %eax
81002ed5:	ff 75 08             	push   0x8(%ebp)
81002ed8:	e8 fb 02 00 00       	call   810031d8 <_malloc_trim_r>
81002edd:	83 c4 10             	add    $0x10,%esp
81002ee0:	83 ec 0c             	sub    $0xc,%esp
81002ee3:	ff 75 08             	push   0x8(%ebp)
81002ee6:	e8 f0 ec ff ff       	call   81001bdb <__malloc_unlock>
81002eeb:	83 c4 10             	add    $0x10,%esp
81002eee:	e9 e0 02 00 00       	jmp    810031d3 <_free_r+0x3d6>
81002ef3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ef6:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ef9:	89 50 04             	mov    %edx,0x4(%eax)
81002efc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002f03:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002f06:	83 e0 01             	and    $0x1,%eax
81002f09:	85 c0                	test   %eax,%eax
81002f0b:	75 52                	jne    81002f5f <_free_r+0x162>
81002f0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f10:	8b 00                	mov    (%eax),%eax
81002f12:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002f15:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f18:	f7 d8                	neg    %eax
81002f1a:	01 45 f4             	add    %eax,-0xc(%ebp)
81002f1d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002f20:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f23:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f26:	8b 40 08             	mov    0x8(%eax),%eax
81002f29:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002f2e:	39 d0                	cmp    %edx,%eax
81002f30:	75 09                	jne    81002f3b <_free_r+0x13e>
81002f32:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f39:	eb 24                	jmp    81002f5f <_free_r+0x162>
81002f3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f3e:	8b 40 0c             	mov    0xc(%eax),%eax
81002f41:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f44:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f47:	8b 40 08             	mov    0x8(%eax),%eax
81002f4a:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f4d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002f50:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f53:	89 50 0c             	mov    %edx,0xc(%eax)
81002f56:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f59:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002f5c:	89 50 08             	mov    %edx,0x8(%eax)
81002f5f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002f62:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f65:	01 d0                	add    %edx,%eax
81002f67:	8b 40 04             	mov    0x4(%eax),%eax
81002f6a:	83 e0 01             	and    $0x1,%eax
81002f6d:	85 c0                	test   %eax,%eax
81002f6f:	75 75                	jne    81002fe6 <_free_r+0x1e9>
81002f71:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002f74:	01 45 f0             	add    %eax,-0x10(%ebp)
81002f77:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002f7b:	75 45                	jne    81002fc2 <_free_r+0x1c5>
81002f7d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002f80:	8b 40 08             	mov    0x8(%eax),%eax
81002f83:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002f88:	39 d0                	cmp    %edx,%eax
81002f8a:	75 36                	jne    81002fc2 <_free_r+0x1c5>
81002f8c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002f93:	b8 c8 3b 00 81       	mov    $0x81003bc8,%eax
81002f98:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002f9b:	89 50 0c             	mov    %edx,0xc(%eax)
81002f9e:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002fa3:	8b 40 0c             	mov    0xc(%eax),%eax
81002fa6:	89 42 08             	mov    %eax,0x8(%edx)
81002fa9:	ba c8 3b 00 81       	mov    $0x81003bc8,%edx
81002fae:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb1:	89 50 0c             	mov    %edx,0xc(%eax)
81002fb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fb7:	8b 50 0c             	mov    0xc(%eax),%edx
81002fba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002fbd:	89 50 08             	mov    %edx,0x8(%eax)
81002fc0:	eb 24                	jmp    81002fe6 <_free_r+0x1e9>
81002fc2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fc5:	8b 40 0c             	mov    0xc(%eax),%eax
81002fc8:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002fcb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002fce:	8b 40 08             	mov    0x8(%eax),%eax
81002fd1:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002fd4:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fd7:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002fda:	89 50 0c             	mov    %edx,0xc(%eax)
81002fdd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002fe0:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002fe3:	89 50 08             	mov    %edx,0x8(%eax)
81002fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fe9:	83 c8 01             	or     $0x1,%eax
81002fec:	89 c2                	mov    %eax,%edx
81002fee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ff1:	89 50 04             	mov    %edx,0x4(%eax)
81002ff4:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002ff7:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ffa:	01 c2                	add    %eax,%edx
81002ffc:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fff:	89 02                	mov    %eax,(%edx)
81003001:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003005:	0f 85 b7 01 00 00    	jne    810031c2 <_free_r+0x3c5>
8100300b:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81003012:	77 7f                	ja     81003093 <_free_r+0x296>
81003014:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003017:	c1 e8 03             	shr    $0x3,%eax
8100301a:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100301d:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81003022:	8b 58 04             	mov    0x4(%eax),%ebx
81003025:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003028:	8d 50 03             	lea    0x3(%eax),%edx
8100302b:	85 c0                	test   %eax,%eax
8100302d:	0f 48 c2             	cmovs  %edx,%eax
81003030:	c1 f8 02             	sar    $0x2,%eax
81003033:	ba 01 00 00 00       	mov    $0x1,%edx
81003038:	89 c1                	mov    %eax,%ecx
8100303a:	d3 e2                	shl    %cl,%edx
8100303c:	89 d0                	mov    %edx,%eax
8100303e:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
81003043:	09 d8                	or     %ebx,%eax
81003045:	89 42 04             	mov    %eax,0x4(%edx)
81003048:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100304b:	83 c0 01             	add    $0x1,%eax
8100304e:	01 c0                	add    %eax,%eax
81003050:	c1 e0 02             	shl    $0x2,%eax
81003053:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
81003058:	83 e8 08             	sub    $0x8,%eax
8100305b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100305e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003061:	8b 40 08             	mov    0x8(%eax),%eax
81003064:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003067:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100306a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100306d:	89 50 0c             	mov    %edx,0xc(%eax)
81003070:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003073:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003076:	89 50 08             	mov    %edx,0x8(%eax)
81003079:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100307c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100307f:	89 50 08             	mov    %edx,0x8(%eax)
81003082:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003085:	8b 50 08             	mov    0x8(%eax),%edx
81003088:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100308b:	89 50 0c             	mov    %edx,0xc(%eax)
8100308e:	e9 2f 01 00 00       	jmp    810031c2 <_free_r+0x3c5>
81003093:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003096:	c1 e8 09             	shr    $0x9,%eax
81003099:	85 c0                	test   %eax,%eax
8100309b:	75 08                	jne    810030a5 <_free_r+0x2a8>
8100309d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a0:	c1 e8 03             	shr    $0x3,%eax
810030a3:	eb 77                	jmp    8100311c <_free_r+0x31f>
810030a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a8:	c1 e8 09             	shr    $0x9,%eax
810030ab:	83 f8 04             	cmp    $0x4,%eax
810030ae:	77 0b                	ja     810030bb <_free_r+0x2be>
810030b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030b3:	c1 e8 06             	shr    $0x6,%eax
810030b6:	83 c0 38             	add    $0x38,%eax
810030b9:	eb 61                	jmp    8100311c <_free_r+0x31f>
810030bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030be:	c1 e8 09             	shr    $0x9,%eax
810030c1:	83 f8 14             	cmp    $0x14,%eax
810030c4:	77 0b                	ja     810030d1 <_free_r+0x2d4>
810030c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030c9:	c1 e8 09             	shr    $0x9,%eax
810030cc:	83 c0 5b             	add    $0x5b,%eax
810030cf:	eb 4b                	jmp    8100311c <_free_r+0x31f>
810030d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030d4:	c1 e8 09             	shr    $0x9,%eax
810030d7:	83 f8 54             	cmp    $0x54,%eax
810030da:	77 0b                	ja     810030e7 <_free_r+0x2ea>
810030dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030df:	c1 e8 0c             	shr    $0xc,%eax
810030e2:	83 c0 6e             	add    $0x6e,%eax
810030e5:	eb 35                	jmp    8100311c <_free_r+0x31f>
810030e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030ea:	c1 e8 09             	shr    $0x9,%eax
810030ed:	3d 54 01 00 00       	cmp    $0x154,%eax
810030f2:	77 0b                	ja     810030ff <_free_r+0x302>
810030f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030f7:	c1 e8 0f             	shr    $0xf,%eax
810030fa:	83 c0 77             	add    $0x77,%eax
810030fd:	eb 1d                	jmp    8100311c <_free_r+0x31f>
810030ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003102:	c1 e8 09             	shr    $0x9,%eax
81003105:	3d 54 05 00 00       	cmp    $0x554,%eax
8100310a:	77 0b                	ja     81003117 <_free_r+0x31a>
8100310c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100310f:	c1 e8 12             	shr    $0x12,%eax
81003112:	83 c0 7c             	add    $0x7c,%eax
81003115:	eb 05                	jmp    8100311c <_free_r+0x31f>
81003117:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100311c:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100311f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003122:	83 c0 01             	add    $0x1,%eax
81003125:	01 c0                	add    %eax,%eax
81003127:	c1 e0 02             	shl    $0x2,%eax
8100312a:	05 c0 3b 00 81       	add    $0x81003bc0,%eax
8100312f:	83 e8 08             	sub    $0x8,%eax
81003132:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003135:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003138:	8b 40 08             	mov    0x8(%eax),%eax
8100313b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100313e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003141:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003144:	75 36                	jne    8100317c <_free_r+0x37f>
81003146:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100314b:	8b 58 04             	mov    0x4(%eax),%ebx
8100314e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81003151:	8d 50 03             	lea    0x3(%eax),%edx
81003154:	85 c0                	test   %eax,%eax
81003156:	0f 48 c2             	cmovs  %edx,%eax
81003159:	c1 f8 02             	sar    $0x2,%eax
8100315c:	ba 01 00 00 00       	mov    $0x1,%edx
81003161:	89 c1                	mov    %eax,%ecx
81003163:	d3 e2                	shl    %cl,%edx
81003165:	89 d0                	mov    %edx,%eax
81003167:	ba c0 3b 00 81       	mov    $0x81003bc0,%edx
8100316c:	09 d8                	or     %ebx,%eax
8100316e:	89 42 04             	mov    %eax,0x4(%edx)
81003171:	eb 28                	jmp    8100319b <_free_r+0x39e>
81003173:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003176:	8b 40 08             	mov    0x8(%eax),%eax
81003179:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100317c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100317f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81003182:	74 0e                	je     81003192 <_free_r+0x395>
81003184:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003187:	8b 40 04             	mov    0x4(%eax),%eax
8100318a:	83 e0 fc             	and    $0xfffffffc,%eax
8100318d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81003190:	72 e1                	jb     81003173 <_free_r+0x376>
81003192:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003195:	8b 40 0c             	mov    0xc(%eax),%eax
81003198:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100319b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100319e:	8b 55 ec             	mov    -0x14(%ebp),%edx
810031a1:	89 50 0c             	mov    %edx,0xc(%eax)
810031a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031a7:	8b 55 e8             	mov    -0x18(%ebp),%edx
810031aa:	89 50 08             	mov    %edx,0x8(%eax)
810031ad:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
810031b3:	89 50 08             	mov    %edx,0x8(%eax)
810031b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810031b9:	8b 50 08             	mov    0x8(%eax),%edx
810031bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
810031bf:	89 50 0c             	mov    %edx,0xc(%eax)
810031c2:	83 ec 0c             	sub    $0xc,%esp
810031c5:	ff 75 08             	push   0x8(%ebp)
810031c8:	e8 0e ea ff ff       	call   81001bdb <__malloc_unlock>
810031cd:	83 c4 10             	add    $0x10,%esp
810031d0:	eb 01                	jmp    810031d3 <_free_r+0x3d6>
810031d2:	90                   	nop
810031d3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810031d6:	c9                   	leave  
810031d7:	c3                   	ret    

810031d8 <_malloc_trim_r>:
810031d8:	55                   	push   %ebp
810031d9:	89 e5                	mov    %esp,%ebp
810031db:	83 ec 28             	sub    $0x28,%esp
810031de:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
810031e5:	83 ec 0c             	sub    $0xc,%esp
810031e8:	ff 75 08             	push   0x8(%ebp)
810031eb:	e8 e5 e9 ff ff       	call   81001bd5 <__malloc_lock>
810031f0:	83 c4 10             	add    $0x10,%esp
810031f3:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810031f8:	8b 40 08             	mov    0x8(%eax),%eax
810031fb:	8b 40 04             	mov    0x4(%eax),%eax
810031fe:	83 e0 fc             	and    $0xfffffffc,%eax
81003201:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003204:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003207:	2b 45 0c             	sub    0xc(%ebp),%eax
8100320a:	89 c2                	mov    %eax,%edx
8100320c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100320f:	01 d0                	add    %edx,%eax
81003211:	83 e8 11             	sub    $0x11,%eax
81003214:	ba 00 00 00 00       	mov    $0x0,%edx
81003219:	f7 75 f4             	divl   -0xc(%ebp)
8100321c:	83 e8 01             	sub    $0x1,%eax
8100321f:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81003223:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003226:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003229:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100322c:	7d 18                	jge    81003246 <_malloc_trim_r+0x6e>
8100322e:	83 ec 0c             	sub    $0xc,%esp
81003231:	ff 75 08             	push   0x8(%ebp)
81003234:	e8 a2 e9 ff ff       	call   81001bdb <__malloc_unlock>
81003239:	83 c4 10             	add    $0x10,%esp
8100323c:	b8 00 00 00 00       	mov    $0x0,%eax
81003241:	e9 f1 00 00 00       	jmp    81003337 <_malloc_trim_r+0x15f>
81003246:	83 ec 08             	sub    $0x8,%esp
81003249:	6a 00                	push   $0x0
8100324b:	ff 75 08             	push   0x8(%ebp)
8100324e:	e8 96 f4 ff ff       	call   810026e9 <_sbrk_r>
81003253:	83 c4 10             	add    $0x10,%esp
81003256:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003259:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
8100325e:	8b 50 08             	mov    0x8(%eax),%edx
81003261:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003264:	01 d0                	add    %edx,%eax
81003266:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81003269:	74 18                	je     81003283 <_malloc_trim_r+0xab>
8100326b:	83 ec 0c             	sub    $0xc,%esp
8100326e:	ff 75 08             	push   0x8(%ebp)
81003271:	e8 65 e9 ff ff       	call   81001bdb <__malloc_unlock>
81003276:	83 c4 10             	add    $0x10,%esp
81003279:	b8 00 00 00 00       	mov    $0x0,%eax
8100327e:	e9 b4 00 00 00       	jmp    81003337 <_malloc_trim_r+0x15f>
81003283:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003286:	f7 d8                	neg    %eax
81003288:	83 ec 08             	sub    $0x8,%esp
8100328b:	50                   	push   %eax
8100328c:	ff 75 08             	push   0x8(%ebp)
8100328f:	e8 55 f4 ff ff       	call   810026e9 <_sbrk_r>
81003294:	83 c4 10             	add    $0x10,%esp
81003297:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100329a:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100329e:	75 61                	jne    81003301 <_malloc_trim_r+0x129>
810032a0:	83 ec 08             	sub    $0x8,%esp
810032a3:	6a 00                	push   $0x0
810032a5:	ff 75 08             	push   0x8(%ebp)
810032a8:	e8 3c f4 ff ff       	call   810026e9 <_sbrk_r>
810032ad:	83 c4 10             	add    $0x10,%esp
810032b0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032b3:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810032b8:	8b 50 08             	mov    0x8(%eax),%edx
810032bb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032be:	29 d0                	sub    %edx,%eax
810032c0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032c3:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
810032c7:	7e 23                	jle    810032ec <_malloc_trim_r+0x114>
810032c9:	8b 15 cc 3f 00 81    	mov    0x81003fcc,%edx
810032cf:	8b 45 e8             	mov    -0x18(%ebp),%eax
810032d2:	29 d0                	sub    %edx,%eax
810032d4:	a3 20 42 00 81       	mov    %eax,0x81004220
810032d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032dc:	83 c8 01             	or     $0x1,%eax
810032df:	89 c2                	mov    %eax,%edx
810032e1:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
810032e6:	8b 40 08             	mov    0x8(%eax),%eax
810032e9:	89 50 04             	mov    %edx,0x4(%eax)
810032ec:	83 ec 0c             	sub    $0xc,%esp
810032ef:	ff 75 08             	push   0x8(%ebp)
810032f2:	e8 e4 e8 ff ff       	call   81001bdb <__malloc_unlock>
810032f7:	83 c4 10             	add    $0x10,%esp
810032fa:	b8 00 00 00 00       	mov    $0x0,%eax
810032ff:	eb 36                	jmp    81003337 <_malloc_trim_r+0x15f>
81003301:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003304:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003307:	83 c8 01             	or     $0x1,%eax
8100330a:	89 c2                	mov    %eax,%edx
8100330c:	b8 c0 3b 00 81       	mov    $0x81003bc0,%eax
81003311:	8b 40 08             	mov    0x8(%eax),%eax
81003314:	89 50 04             	mov    %edx,0x4(%eax)
81003317:	a1 20 42 00 81       	mov    0x81004220,%eax
8100331c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100331f:	a3 20 42 00 81       	mov    %eax,0x81004220
81003324:	83 ec 0c             	sub    $0xc,%esp
81003327:	ff 75 08             	push   0x8(%ebp)
8100332a:	e8 ac e8 ff ff       	call   81001bdb <__malloc_unlock>
8100332f:	83 c4 10             	add    $0x10,%esp
81003332:	b8 01 00 00 00       	mov    $0x1,%eax
81003337:	c9                   	leave  
81003338:	c3                   	ret    

81003339 <_lseek_r>:
81003339:	55                   	push   %ebp
8100333a:	89 e5                	mov    %esp,%ebp
8100333c:	83 ec 18             	sub    $0x18,%esp
8100333f:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
81003346:	00 00 00 
81003349:	83 ec 04             	sub    $0x4,%esp
8100334c:	ff 75 14             	push   0x14(%ebp)
8100334f:	ff 75 10             	push   0x10(%ebp)
81003352:	ff 75 0c             	push   0xc(%ebp)
81003355:	e8 01 cf ff ff       	call   8100025b <lseek>
8100335a:	83 c4 10             	add    $0x10,%esp
8100335d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003360:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003364:	75 14                	jne    8100337a <_lseek_r+0x41>
81003366:	a1 4c 42 00 81       	mov    0x8100424c,%eax
8100336b:	85 c0                	test   %eax,%eax
8100336d:	74 0b                	je     8100337a <_lseek_r+0x41>
8100336f:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
81003375:	8b 45 08             	mov    0x8(%ebp),%eax
81003378:	89 10                	mov    %edx,(%eax)
8100337a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100337d:	c9                   	leave  
8100337e:	c3                   	ret    

8100337f <__smakebuf_r>:
8100337f:	55                   	push   %ebp
81003380:	89 e5                	mov    %esp,%ebp
81003382:	56                   	push   %esi
81003383:	53                   	push   %ebx
81003384:	83 ec 10             	sub    $0x10,%esp
81003387:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100338a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100338e:	98                   	cwtl   
8100338f:	83 e0 02             	and    $0x2,%eax
81003392:	85 c0                	test   %eax,%eax
81003394:	74 16                	je     810033ac <__smakebuf_r+0x2d>
81003396:	8d 43 43             	lea    0x43(%ebx),%eax
81003399:	89 03                	mov    %eax,(%ebx)
8100339b:	8b 03                	mov    (%ebx),%eax
8100339d:	89 43 10             	mov    %eax,0x10(%ebx)
810033a0:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810033a7:	e9 b9 00 00 00       	jmp    81003465 <__smakebuf_r+0xe6>
810033ac:	8d 45 ec             	lea    -0x14(%ebp),%eax
810033af:	50                   	push   %eax
810033b0:	8d 45 f0             	lea    -0x10(%ebp),%eax
810033b3:	50                   	push   %eax
810033b4:	53                   	push   %ebx
810033b5:	ff 75 08             	push   0x8(%ebp)
810033b8:	e8 af 00 00 00       	call   8100346c <__swhatbuf_r>
810033bd:	83 c4 10             	add    $0x10,%esp
810033c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810033c6:	83 ec 08             	sub    $0x8,%esp
810033c9:	50                   	push   %eax
810033ca:	ff 75 08             	push   0x8(%ebp)
810033cd:	e8 dd dd ff ff       	call   810011af <_malloc_r>
810033d2:	83 c4 10             	add    $0x10,%esp
810033d5:	89 c6                	mov    %eax,%esi
810033d7:	85 f6                	test   %esi,%esi
810033d9:	75 2f                	jne    8100340a <__smakebuf_r+0x8b>
810033db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033df:	98                   	cwtl   
810033e0:	25 00 02 00 00       	and    $0x200,%eax
810033e5:	85 c0                	test   %eax,%eax
810033e7:	75 7c                	jne    81003465 <__smakebuf_r+0xe6>
810033e9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810033ed:	83 e0 fc             	and    $0xfffffffc,%eax
810033f0:	83 c8 02             	or     $0x2,%eax
810033f3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810033f7:	8d 43 43             	lea    0x43(%ebx),%eax
810033fa:	89 03                	mov    %eax,(%ebx)
810033fc:	8b 03                	mov    (%ebx),%eax
810033fe:	89 43 10             	mov    %eax,0x10(%ebx)
81003401:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003408:	eb 5b                	jmp    81003465 <__smakebuf_r+0xe6>
8100340a:	8b 45 08             	mov    0x8(%ebp),%eax
8100340d:	c7 40 3c 63 08 00 81 	movl   $0x81000863,0x3c(%eax)
81003414:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003418:	0c 80                	or     $0x80,%al
8100341a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100341e:	89 33                	mov    %esi,(%ebx)
81003420:	8b 03                	mov    (%ebx),%eax
81003422:	89 43 10             	mov    %eax,0x10(%ebx)
81003425:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003428:	89 43 14             	mov    %eax,0x14(%ebx)
8100342b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100342e:	85 c0                	test   %eax,%eax
81003430:	74 26                	je     81003458 <__smakebuf_r+0xd9>
81003432:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003436:	98                   	cwtl   
81003437:	83 ec 08             	sub    $0x8,%esp
8100343a:	50                   	push   %eax
8100343b:	ff 75 08             	push   0x8(%ebp)
8100343e:	e8 dc 02 00 00       	call   8100371f <_isatty_r>
81003443:	83 c4 10             	add    $0x10,%esp
81003446:	85 c0                	test   %eax,%eax
81003448:	74 0e                	je     81003458 <__smakebuf_r+0xd9>
8100344a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100344e:	83 e0 fc             	and    $0xfffffffc,%eax
81003451:	83 c8 01             	or     $0x1,%eax
81003454:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003458:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100345c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100345f:	09 d0                	or     %edx,%eax
81003461:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003465:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003468:	5b                   	pop    %ebx
81003469:	5e                   	pop    %esi
8100346a:	5d                   	pop    %ebp
8100346b:	c3                   	ret    

8100346c <__swhatbuf_r>:
8100346c:	55                   	push   %ebp
8100346d:	89 e5                	mov    %esp,%ebp
8100346f:	83 ec 58             	sub    $0x58,%esp
81003472:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003479:	8b 45 0c             	mov    0xc(%ebp),%eax
8100347c:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003480:	66 85 c0             	test   %ax,%ax
81003483:	78 1f                	js     810034a4 <__swhatbuf_r+0x38>
81003485:	8b 45 0c             	mov    0xc(%ebp),%eax
81003488:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100348c:	98                   	cwtl   
8100348d:	83 ec 04             	sub    $0x4,%esp
81003490:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003493:	52                   	push   %edx
81003494:	50                   	push   %eax
81003495:	ff 75 08             	push   0x8(%ebp)
81003498:	e8 3f 02 00 00       	call   810036dc <_fstat_r>
8100349d:	83 c4 10             	add    $0x10,%esp
810034a0:	85 c0                	test   %eax,%eax
810034a2:	79 35                	jns    810034d9 <__swhatbuf_r+0x6d>
810034a4:	8b 45 14             	mov    0x14(%ebp),%eax
810034a7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810034ad:	8b 45 0c             	mov    0xc(%ebp),%eax
810034b0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810034b4:	98                   	cwtl   
810034b5:	25 80 00 00 00       	and    $0x80,%eax
810034ba:	85 c0                	test   %eax,%eax
810034bc:	74 0b                	je     810034c9 <__swhatbuf_r+0x5d>
810034be:	8b 45 10             	mov    0x10(%ebp),%eax
810034c1:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810034c7:	eb 09                	jmp    810034d2 <__swhatbuf_r+0x66>
810034c9:	8b 45 10             	mov    0x10(%ebp),%eax
810034cc:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034d2:	b8 00 00 00 00       	mov    $0x0,%eax
810034d7:	eb 24                	jmp    810034fd <__swhatbuf_r+0x91>
810034d9:	8b 45 b0             	mov    -0x50(%ebp),%eax
810034dc:	25 00 f0 00 00       	and    $0xf000,%eax
810034e1:	3d 00 20 00 00       	cmp    $0x2000,%eax
810034e6:	0f 94 c0             	sete   %al
810034e9:	0f b6 d0             	movzbl %al,%edx
810034ec:	8b 45 14             	mov    0x14(%ebp),%eax
810034ef:	89 10                	mov    %edx,(%eax)
810034f1:	8b 45 10             	mov    0x10(%ebp),%eax
810034f4:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810034fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810034fd:	c9                   	leave  
810034fe:	c3                   	ret    

810034ff <_read_r>:
810034ff:	55                   	push   %ebp
81003500:	89 e5                	mov    %esp,%ebp
81003502:	83 ec 18             	sub    $0x18,%esp
81003505:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
8100350c:	00 00 00 
8100350f:	83 ec 04             	sub    $0x4,%esp
81003512:	ff 75 14             	push   0x14(%ebp)
81003515:	ff 75 10             	push   0x10(%ebp)
81003518:	ff 75 0c             	push   0xc(%ebp)
8100351b:	e8 c0 cc ff ff       	call   810001e0 <read>
81003520:	83 c4 10             	add    $0x10,%esp
81003523:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003526:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100352a:	75 14                	jne    81003540 <_read_r+0x41>
8100352c:	a1 4c 42 00 81       	mov    0x8100424c,%eax
81003531:	85 c0                	test   %eax,%eax
81003533:	74 0b                	je     81003540 <_read_r+0x41>
81003535:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
8100353b:	8b 45 08             	mov    0x8(%ebp),%eax
8100353e:	89 10                	mov    %edx,(%eax)
81003540:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003543:	c9                   	leave  
81003544:	c3                   	ret    

81003545 <cleanup_glue>:
81003545:	55                   	push   %ebp
81003546:	89 e5                	mov    %esp,%ebp
81003548:	83 ec 08             	sub    $0x8,%esp
8100354b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100354e:	8b 00                	mov    (%eax),%eax
81003550:	85 c0                	test   %eax,%eax
81003552:	74 14                	je     81003568 <cleanup_glue+0x23>
81003554:	8b 45 0c             	mov    0xc(%ebp),%eax
81003557:	8b 00                	mov    (%eax),%eax
81003559:	83 ec 08             	sub    $0x8,%esp
8100355c:	50                   	push   %eax
8100355d:	ff 75 08             	push   0x8(%ebp)
81003560:	e8 e0 ff ff ff       	call   81003545 <cleanup_glue>
81003565:	83 c4 10             	add    $0x10,%esp
81003568:	83 ec 08             	sub    $0x8,%esp
8100356b:	ff 75 0c             	push   0xc(%ebp)
8100356e:	ff 75 08             	push   0x8(%ebp)
81003571:	e8 87 f8 ff ff       	call   81002dfd <_free_r>
81003576:	83 c4 10             	add    $0x10,%esp
81003579:	90                   	nop
8100357a:	c9                   	leave  
8100357b:	c3                   	ret    

8100357c <_reclaim_reent>:
8100357c:	55                   	push   %ebp
8100357d:	89 e5                	mov    %esp,%ebp
8100357f:	83 ec 28             	sub    $0x28,%esp
81003582:	a1 a4 3b 00 81       	mov    0x81003ba4,%eax
81003587:	39 45 08             	cmp    %eax,0x8(%ebp)
8100358a:	0f 84 49 01 00 00    	je     810036d9 <_reclaim_reent+0x15d>
81003590:	8b 45 08             	mov    0x8(%ebp),%eax
81003593:	8b 40 4c             	mov    0x4c(%eax),%eax
81003596:	85 c0                	test   %eax,%eax
81003598:	74 64                	je     810035fe <_reclaim_reent+0x82>
8100359a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810035a1:	eb 3e                	jmp    810035e1 <_reclaim_reent+0x65>
810035a3:	8b 45 08             	mov    0x8(%ebp),%eax
810035a6:	8b 50 4c             	mov    0x4c(%eax),%edx
810035a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035ac:	c1 e0 02             	shl    $0x2,%eax
810035af:	01 d0                	add    %edx,%eax
810035b1:	8b 00                	mov    (%eax),%eax
810035b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035b6:	eb 1f                	jmp    810035d7 <_reclaim_reent+0x5b>
810035b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035bb:	89 45 e8             	mov    %eax,-0x18(%ebp)
810035be:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035c1:	8b 00                	mov    (%eax),%eax
810035c3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810035c6:	83 ec 08             	sub    $0x8,%esp
810035c9:	ff 75 e8             	push   -0x18(%ebp)
810035cc:	ff 75 08             	push   0x8(%ebp)
810035cf:	e8 29 f8 ff ff       	call   81002dfd <_free_r>
810035d4:	83 c4 10             	add    $0x10,%esp
810035d7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810035db:	75 db                	jne    810035b8 <_reclaim_reent+0x3c>
810035dd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810035e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810035e4:	83 f8 1f             	cmp    $0x1f,%eax
810035e7:	76 ba                	jbe    810035a3 <_reclaim_reent+0x27>
810035e9:	8b 45 08             	mov    0x8(%ebp),%eax
810035ec:	8b 40 4c             	mov    0x4c(%eax),%eax
810035ef:	83 ec 08             	sub    $0x8,%esp
810035f2:	50                   	push   %eax
810035f3:	ff 75 08             	push   0x8(%ebp)
810035f6:	e8 02 f8 ff ff       	call   81002dfd <_free_r>
810035fb:	83 c4 10             	add    $0x10,%esp
810035fe:	8b 45 08             	mov    0x8(%ebp),%eax
81003601:	8b 40 40             	mov    0x40(%eax),%eax
81003604:	85 c0                	test   %eax,%eax
81003606:	74 15                	je     8100361d <_reclaim_reent+0xa1>
81003608:	8b 45 08             	mov    0x8(%ebp),%eax
8100360b:	8b 40 40             	mov    0x40(%eax),%eax
8100360e:	83 ec 08             	sub    $0x8,%esp
81003611:	50                   	push   %eax
81003612:	ff 75 08             	push   0x8(%ebp)
81003615:	e8 e3 f7 ff ff       	call   81002dfd <_free_r>
8100361a:	83 c4 10             	add    $0x10,%esp
8100361d:	8b 45 08             	mov    0x8(%ebp),%eax
81003620:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003626:	85 c0                	test   %eax,%eax
81003628:	74 50                	je     8100367a <_reclaim_reent+0xfe>
8100362a:	8b 45 08             	mov    0x8(%ebp),%eax
8100362d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003633:	8b 55 08             	mov    0x8(%ebp),%edx
81003636:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100363c:	39 d0                	cmp    %edx,%eax
8100363e:	74 3a                	je     8100367a <_reclaim_reent+0xfe>
81003640:	8b 45 08             	mov    0x8(%ebp),%eax
81003643:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003649:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100364c:	eb 1f                	jmp    8100366d <_reclaim_reent+0xf1>
8100364e:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003651:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003654:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003657:	8b 00                	mov    (%eax),%eax
81003659:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100365c:	83 ec 08             	sub    $0x8,%esp
8100365f:	ff 75 e4             	push   -0x1c(%ebp)
81003662:	ff 75 08             	push   0x8(%ebp)
81003665:	e8 93 f7 ff ff       	call   81002dfd <_free_r>
8100366a:	83 c4 10             	add    $0x10,%esp
8100366d:	8b 45 08             	mov    0x8(%ebp),%eax
81003670:	05 4c 01 00 00       	add    $0x14c,%eax
81003675:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81003678:	75 d4                	jne    8100364e <_reclaim_reent+0xd2>
8100367a:	8b 45 08             	mov    0x8(%ebp),%eax
8100367d:	8b 40 54             	mov    0x54(%eax),%eax
81003680:	85 c0                	test   %eax,%eax
81003682:	74 15                	je     81003699 <_reclaim_reent+0x11d>
81003684:	8b 45 08             	mov    0x8(%ebp),%eax
81003687:	8b 40 54             	mov    0x54(%eax),%eax
8100368a:	83 ec 08             	sub    $0x8,%esp
8100368d:	50                   	push   %eax
8100368e:	ff 75 08             	push   0x8(%ebp)
81003691:	e8 67 f7 ff ff       	call   81002dfd <_free_r>
81003696:	83 c4 10             	add    $0x10,%esp
81003699:	8b 45 08             	mov    0x8(%ebp),%eax
8100369c:	8b 40 38             	mov    0x38(%eax),%eax
8100369f:	85 c0                	test   %eax,%eax
810036a1:	74 36                	je     810036d9 <_reclaim_reent+0x15d>
810036a3:	8b 45 08             	mov    0x8(%ebp),%eax
810036a6:	8b 40 3c             	mov    0x3c(%eax),%eax
810036a9:	83 ec 0c             	sub    $0xc,%esp
810036ac:	ff 75 08             	push   0x8(%ebp)
810036af:	ff d0                	call   *%eax
810036b1:	83 c4 10             	add    $0x10,%esp
810036b4:	8b 45 08             	mov    0x8(%ebp),%eax
810036b7:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036bd:	85 c0                	test   %eax,%eax
810036bf:	74 18                	je     810036d9 <_reclaim_reent+0x15d>
810036c1:	8b 45 08             	mov    0x8(%ebp),%eax
810036c4:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810036ca:	83 ec 08             	sub    $0x8,%esp
810036cd:	50                   	push   %eax
810036ce:	ff 75 08             	push   0x8(%ebp)
810036d1:	e8 6f fe ff ff       	call   81003545 <cleanup_glue>
810036d6:	83 c4 10             	add    $0x10,%esp
810036d9:	90                   	nop
810036da:	c9                   	leave  
810036db:	c3                   	ret    

810036dc <_fstat_r>:
810036dc:	55                   	push   %ebp
810036dd:	89 e5                	mov    %esp,%ebp
810036df:	83 ec 18             	sub    $0x18,%esp
810036e2:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
810036e9:	00 00 00 
810036ec:	83 ec 08             	sub    $0x8,%esp
810036ef:	ff 75 10             	push   0x10(%ebp)
810036f2:	ff 75 0c             	push   0xc(%ebp)
810036f5:	e8 af cb ff ff       	call   810002a9 <fstat>
810036fa:	83 c4 10             	add    $0x10,%esp
810036fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003700:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003704:	75 14                	jne    8100371a <_fstat_r+0x3e>
81003706:	a1 4c 42 00 81       	mov    0x8100424c,%eax
8100370b:	85 c0                	test   %eax,%eax
8100370d:	74 0b                	je     8100371a <_fstat_r+0x3e>
8100370f:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
81003715:	8b 45 08             	mov    0x8(%ebp),%eax
81003718:	89 10                	mov    %edx,(%eax)
8100371a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100371d:	c9                   	leave  
8100371e:	c3                   	ret    

8100371f <_isatty_r>:
8100371f:	55                   	push   %ebp
81003720:	89 e5                	mov    %esp,%ebp
81003722:	83 ec 18             	sub    $0x18,%esp
81003725:	c7 05 4c 42 00 81 00 	movl   $0x0,0x8100424c
8100372c:	00 00 00 
8100372f:	83 ec 0c             	sub    $0xc,%esp
81003732:	ff 75 0c             	push   0xc(%ebp)
81003735:	e8 4e cb ff ff       	call   81000288 <isatty>
8100373a:	83 c4 10             	add    $0x10,%esp
8100373d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003740:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003744:	75 14                	jne    8100375a <_isatty_r+0x3b>
81003746:	a1 4c 42 00 81       	mov    0x8100424c,%eax
8100374b:	85 c0                	test   %eax,%eax
8100374d:	74 0b                	je     8100375a <_isatty_r+0x3b>
8100374f:	8b 15 4c 42 00 81    	mov    0x8100424c,%edx
81003755:	8b 45 08             	mov    0x8(%ebp),%eax
81003758:	89 10                	mov    %edx,(%eax)
8100375a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100375d:	c9                   	leave  
8100375e:	c3                   	ret    
